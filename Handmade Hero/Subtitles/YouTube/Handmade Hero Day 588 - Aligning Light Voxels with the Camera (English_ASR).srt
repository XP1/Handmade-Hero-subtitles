1
00:00:02,448 --> 00:00:06,540
hello everybody and welcome to handmade

2
00:00:05,129 --> 00:00:09,149
Hero show where we could a complete-game

3
00:00:06,540 --> 00:00:10,530
live on stream I kind of realized after

4
00:00:09,150 --> 00:00:12,809
yesterday's stream I was like you know

5
00:00:10,529 --> 00:00:15,298
what I'm I'm putting the cart before the

6
00:00:12,808 --> 00:00:17,489
horse here and I realized that like we

7
00:00:15,298 --> 00:00:19,460
had already optimized that part of the

8
00:00:17,489 --> 00:00:22,288
code that we were looking at the

9
00:00:19,460 --> 00:00:24,900
specular to diffuse transform we'd

10
00:00:22,289 --> 00:00:27,118
already kind of gotten that down to a

11
00:00:24,899 --> 00:00:29,459
fairly low amount of work and although

12
00:00:27,118 --> 00:00:31,618
we could lower it further to be certain

13
00:00:29,460 --> 00:00:33,870
I think it was probably the wrong time

14
00:00:31,618 --> 00:00:36,090
to do it so if you take a look at where

15
00:00:33,869 --> 00:00:37,859
we're at currently in our lighting

16
00:00:36,090 --> 00:00:40,620
experiments here you can see we've

17
00:00:37,859 --> 00:00:44,070
gotten this down to 12% of the total

18
00:00:40,619 --> 00:00:46,738
time and the cast is still at 80% so I

19
00:00:44,070 --> 00:00:48,179
was thinking like you know probably at

20
00:00:46,738 --> 00:00:52,109
this point we're gonna have to start

21
00:00:48,179 --> 00:00:54,628
looking at the casting a little bit more

22
00:00:52,109 --> 00:00:57,420
aggressively and that's probably what we

23
00:00:54,628 --> 00:01:02,250
should be focusing on rather than what

24
00:00:57,420 --> 00:01:04,978
we were focusing on which was further

25
00:01:02,250 --> 00:01:07,859
optimizing that particular piece of the

26
00:01:04,978 --> 00:01:09,299
spec diffuse transform there so we

27
00:01:07,859 --> 00:01:10,228
should probably do that and that's what

28
00:01:09,299 --> 00:01:11,460
we should probably start looking at

29
00:01:10,228 --> 00:01:13,679
today because that's gonna be the more

30
00:01:11,459 --> 00:01:15,239
important thing to look at now the other

31
00:01:13,680 --> 00:01:18,030
thing I realized is that if we go into

32
00:01:15,239 --> 00:01:20,789
one of our largest rooms which is here I

33
00:01:18,030 --> 00:01:22,618
also think probably at the very least

34
00:01:20,790 --> 00:01:25,320
you know if we if we kind of pull back

35
00:01:22,618 --> 00:01:29,219
on this and take a look at where we wrap

36
00:01:25,319 --> 00:01:31,408
we probably have a lighting box that is

37
00:01:29,219 --> 00:01:32,728
maybe also still a little too big we

38
00:01:31,409 --> 00:01:34,140
could probably shrink the lighting

39
00:01:32,728 --> 00:01:38,658
bounds down because this is the largest

40
00:01:34,140 --> 00:01:41,340
kind of view will ever have is like this

41
00:01:38,659 --> 00:01:43,530
and you know this is still probably

42
00:01:41,340 --> 00:01:46,799
larger than we need it to be especially

43
00:01:43,530 --> 00:01:49,200
if we slide it along and so we may also

44
00:01:46,799 --> 00:01:51,390
be able to say look you know in terms of

45
00:01:49,200 --> 00:01:53,879
the total amount of space that we need

46
00:01:51,390 --> 00:01:56,430
here we might also be able to even at

47
00:01:53,879 --> 00:01:59,218
the same resolution drop the total

48
00:01:56,430 --> 00:02:04,380
amount of lighting region down a little

49
00:01:59,218 --> 00:02:07,228
bit right that or we can change the size

50
00:02:04,379 --> 00:02:08,609
right and so maybe the thing is you know

51
00:02:07,228 --> 00:02:10,050
maybe this is something we should still

52
00:02:08,610 --> 00:02:12,930
strive to do about this much but we

53
00:02:10,050 --> 00:02:13,590
could make the size smaller so for

54
00:02:12,930 --> 00:02:17,489
example

55
00:02:13,590 --> 00:02:19,769
if we go into the lining code and we

56
00:02:17,489 --> 00:02:21,420
look at how this is being aligned so we

57
00:02:19,769 --> 00:02:25,349
look at like how we're actually building

58
00:02:21,419 --> 00:02:27,929
up the the region where this is going to

59
00:02:25,348 --> 00:02:29,699
be then in here you know we can sort of

60
00:02:27,930 --> 00:02:31,409
say well we could make it you know we

61
00:02:29,699 --> 00:02:33,060
could shrink this down by two or

62
00:02:31,409 --> 00:02:35,189
something like that because it does have

63
00:02:33,060 --> 00:02:36,689
to currently be aligned to the world so

64
00:02:35,189 --> 00:02:39,840
it could be some other multiple of the

65
00:02:36,689 --> 00:02:41,729
world you know or we could also just

66
00:02:39,840 --> 00:02:43,170
make it be less and I don't know which

67
00:02:41,729 --> 00:02:45,389
one we want to do but you know for

68
00:02:43,169 --> 00:02:47,818
example I could imagine dropping this

69
00:02:45,389 --> 00:02:49,169
town or even dropping like just the Y so

70
00:02:47,818 --> 00:02:52,039
you could imagine doing something like

71
00:02:49,169 --> 00:02:55,979
this and if we did something like this

72
00:02:52,039 --> 00:02:57,750
where we were like 32 24 16 so where the

73
00:02:55,979 --> 00:03:00,000
Y is actually a little bit different and

74
00:02:57,750 --> 00:03:01,620
I don't actually know we've never tested

75
00:03:00,000 --> 00:03:03,870
changing those two so we don't actually

76
00:03:01,620 --> 00:03:05,730
know if there's bugs in that as well but

77
00:03:03,870 --> 00:03:07,110
if you look at the effects of that on

78
00:03:05,729 --> 00:03:09,209
runtime you can see that the more we

79
00:03:07,110 --> 00:03:11,640
drop that down the closer we get to 30

80
00:03:09,209 --> 00:03:13,289
frames a second and the closer we get to

81
00:03:11,639 --> 00:03:15,689
30 frames a second that's a shippable

82
00:03:13,289 --> 00:03:19,530
frame rate and it also gives us a lot

83
00:03:15,689 --> 00:03:21,060
better chance of optimizing 260 right so

84
00:03:19,530 --> 00:03:22,919
if we take a look at how that fits the

85
00:03:21,060 --> 00:03:25,469
region it fits the region still pretty

86
00:03:22,919 --> 00:03:27,958
good right and so you know we can

87
00:03:25,469 --> 00:03:31,439
continue to shrink this down and have a

88
00:03:27,959 --> 00:03:35,909
you know we can continue to make this

89
00:03:31,439 --> 00:03:38,340
fairly we can continue to make this

90
00:03:35,909 --> 00:03:39,750
fairly tight as a bound on the world and

91
00:03:38,340 --> 00:03:41,579
I don't think that there's much of a

92
00:03:39,750 --> 00:03:44,098
problem with that so we may want to just

93
00:03:41,579 --> 00:03:46,319
like keep that bound as tight as we can

94
00:03:44,098 --> 00:03:47,879
because again that just improves our

95
00:03:46,318 --> 00:03:49,469
chances of getting a good frame rate

96
00:03:47,879 --> 00:03:51,150
with quality lighting because the less

97
00:03:49,469 --> 00:03:52,829
lighting we're computing every frame the

98
00:03:51,150 --> 00:03:55,439
better and off we go

99
00:03:52,829 --> 00:03:58,139
so what I might want to do now is say

100
00:03:55,439 --> 00:04:01,139
all right how let's try to actually

101
00:03:58,139 --> 00:04:03,389
position this thing around the actual

102
00:04:01,139 --> 00:04:05,069
view right because right now you can see

103
00:04:03,389 --> 00:04:07,799
the view sliding around like this is

104
00:04:05,068 --> 00:04:10,649
what we'd be seeing in-game and like the

105
00:04:07,799 --> 00:04:14,489
as the view would be sliding around here

106
00:04:10,650 --> 00:04:16,319
this is not moving at all right so what

107
00:04:14,489 --> 00:04:19,019
I might want to do is go in here and say

108
00:04:16,319 --> 00:04:22,108
inside the world mode like let's try and

109
00:04:19,019 --> 00:04:24,120
draw the camera like focus point like

110
00:04:22,108 --> 00:04:25,439
where we're actually you know let's try

111
00:04:24,120 --> 00:04:29,009
and figure out like what are we actually

112
00:04:25,439 --> 00:04:30,300
looking at here frustum

113
00:04:29,009 --> 00:04:31,620
and see if we can figure out how to

114
00:04:30,300 --> 00:04:33,538
bound the lighting

115
00:04:31,620 --> 00:04:35,490
you know align the lighting as closely

116
00:04:33,538 --> 00:04:37,769
as possible to what we're actually going

117
00:04:35,490 --> 00:04:40,139
to see because that's pretty important

118
00:04:37,769 --> 00:04:42,839
right so if we take a look at how this

119
00:04:40,139 --> 00:04:45,329
is going you can actually see here that

120
00:04:42,839 --> 00:04:47,008
there's some stuff that's if zeroed out

121
00:04:45,329 --> 00:04:49,050
regarding that right like here's some

122
00:04:47,009 --> 00:04:51,930
like light bound nonsense right you can

123
00:04:49,050 --> 00:04:54,449
see here us we were doing some things

124
00:04:51,930 --> 00:04:59,459
here right so at the moment we're doing

125
00:04:54,449 --> 00:05:01,199
the light bound stuff inside the begin

126
00:04:59,459 --> 00:05:03,180
letting computation entirely but before

127
00:05:01,199 --> 00:05:04,949
we had done some things here that was

128
00:05:03,180 --> 00:05:06,660
related to it right and you can see we

129
00:05:04,949 --> 00:05:09,120
have a world camera wreck that's being

130
00:05:06,660 --> 00:05:11,520
sort of get-get out here which is the

131
00:05:09,120 --> 00:05:12,959
get camera rectangle at Target and so

132
00:05:11,519 --> 00:05:15,689
what I'd like to do is resurrect at

133
00:05:12,959 --> 00:05:17,189
least just that one part of it there so

134
00:05:15,689 --> 00:05:19,740
that we can maybe start to see about

135
00:05:17,189 --> 00:05:21,658
where are we actually looking so I'm

136
00:05:19,740 --> 00:05:23,069
gonna try and get this function working

137
00:05:21,658 --> 00:05:25,139
better because I don't think we ever

138
00:05:23,069 --> 00:05:27,300
really got it working and so I'd like to

139
00:05:25,139 --> 00:05:30,569
do is pull out what we think this camera

140
00:05:27,300 --> 00:05:31,829
rectangle actually is and just draw it

141
00:05:30,569 --> 00:05:33,990
and then I'm gonna try and get the

142
00:05:31,829 --> 00:05:36,930
lighting bounds to chase that visual

143
00:05:33,990 --> 00:05:38,970
rectangle more closely so if we take a

144
00:05:36,930 --> 00:05:40,500
look at the push volume outline clock

145
00:05:38,970 --> 00:05:43,110
here right you can see that we're

146
00:05:40,500 --> 00:05:46,668
drawing one the hot voxel rect in here

147
00:05:43,110 --> 00:05:49,620
I'm gonna also draw at the same time I

148
00:05:46,668 --> 00:05:53,038
want to draw the visible rectangle so we

149
00:05:49,620 --> 00:05:55,379
can see that one two right okay so in

150
00:05:53,038 --> 00:05:57,899
here right before we do the lightning

151
00:05:55,379 --> 00:05:58,949
computation and again these colors don't

152
00:05:57,899 --> 00:06:00,060
actually work cuz we don't have a way to

153
00:05:58,949 --> 00:06:03,000
turn off lighting at the moment

154
00:06:00,060 --> 00:06:05,158
eventually we will we haven't gotten

155
00:06:03,000 --> 00:06:07,918
there yet so we're gonna go ahead and

156
00:06:05,158 --> 00:06:09,149
push a volume outline here the hot voxel

157
00:06:07,918 --> 00:06:10,859
rect is not what we want to draw

158
00:06:09,149 --> 00:06:13,978
obviously what we want to draw is that

159
00:06:10,860 --> 00:06:16,908
world camera rect and what we want to do

160
00:06:13,978 --> 00:06:20,218
is take the world camera rectangle oh

161
00:06:16,908 --> 00:06:21,990
wait we need the focus see there and you

162
00:06:20,218 --> 00:06:25,560
can see this is this is probably garbage

163
00:06:21,990 --> 00:06:26,668
I don't know maybe it's not but we'll

164
00:06:25,560 --> 00:06:29,240
see you in a second

165
00:06:26,668 --> 00:06:35,930
so what we want to do is take that that

166
00:06:29,240 --> 00:06:38,218
camera figure out where it's looking and

167
00:06:35,930 --> 00:06:40,370
try to actually get an accurate picture

168
00:06:38,218 --> 00:06:43,310
of what we're actually seeing

169
00:06:40,370 --> 00:06:45,530
so here's me drawing that right and now

170
00:06:43,310 --> 00:06:48,439
you can see like as I move around you

171
00:06:45,529 --> 00:06:51,079
can see those bounds moving with me and

172
00:06:48,439 --> 00:06:52,310
the problem that we have now is I don't

173
00:06:51,079 --> 00:06:54,949
know that these bounds are particularly

174
00:06:52,310 --> 00:06:58,040
accurate right and so what we need to do

175
00:06:54,949 --> 00:07:00,530
now is figure out what you know how to

176
00:06:58,040 --> 00:07:01,220
make that be really closely tied to

177
00:07:00,529 --> 00:07:03,379
where the screen is

178
00:07:01,220 --> 00:07:05,870
so let's actually see if we can do that

179
00:07:03,379 --> 00:07:08,478
so you see right now you can see how

180
00:07:05,870 --> 00:07:11,418
it's it's actually like it's sort of

181
00:07:08,478 --> 00:07:15,199
correct in a sense but it's a little bit

182
00:07:11,418 --> 00:07:17,029
under like it's it's a little bit not

183
00:07:15,199 --> 00:07:18,470
concerned we need some conservative I

184
00:07:17,029 --> 00:07:21,739
guess is the word here we need something

185
00:07:18,470 --> 00:07:24,169
that we can never actually see this part

186
00:07:21,740 --> 00:07:26,930
of it so it's not giving us a large

187
00:07:24,168 --> 00:07:28,819
enough screen rectangle it is now

188
00:07:26,930 --> 00:07:29,860
correctly moving with us so we've got

189
00:07:28,819 --> 00:07:32,870
that part right

190
00:07:29,860 --> 00:07:35,120
it is like it does appear to be locked

191
00:07:32,870 --> 00:07:37,160
to the camera position and that's great

192
00:07:35,120 --> 00:07:40,939
but what it doesn't seem to do at the

193
00:07:37,160 --> 00:07:43,610
moment is actually kind of give us the

194
00:07:40,939 --> 00:07:45,469
size now one thing I guess now that I

195
00:07:43,610 --> 00:07:47,750
think about it is since we can't change

196
00:07:45,470 --> 00:07:49,729
the size of the lighting thing maybe I

197
00:07:47,750 --> 00:07:51,410
actually don't care I guess we only

198
00:07:49,728 --> 00:07:52,339
really need the centroid of this thing

199
00:07:51,410 --> 00:07:54,470
right

200
00:07:52,339 --> 00:07:56,329
so I guess actually now I think about I

201
00:07:54,470 --> 00:07:58,250
don't have to really modify that what I

202
00:07:56,329 --> 00:07:59,750
could do is say look we know that the

203
00:07:58,250 --> 00:08:04,339
world camera rect actually does give us

204
00:07:59,750 --> 00:08:05,620
a center okay so maybe that's all we

205
00:08:04,339 --> 00:08:08,269
need

206
00:08:05,620 --> 00:08:12,319
seems likely so I'm gonna go ahead and

207
00:08:08,269 --> 00:08:14,478
say all right in here we've got a world

208
00:08:12,319 --> 00:08:16,219
position for the origin P and then we've

209
00:08:14,478 --> 00:08:19,699
got this camera offset from origin that

210
00:08:16,220 --> 00:08:22,039
we're passing down and I guess when we

211
00:08:19,699 --> 00:08:24,620
get this world camera rect here that is

212
00:08:22,038 --> 00:08:27,620
giving us a good enough a good enough

213
00:08:24,620 --> 00:08:29,569
piece of information there so I guess we

214
00:08:27,620 --> 00:08:31,069
don't really need to pass this down the

215
00:08:29,569 --> 00:08:36,408
camera offset from origins not being

216
00:08:31,069 --> 00:08:40,730
used at the moment right yeah so we

217
00:08:36,408 --> 00:08:42,088
could say like a camera center

218
00:08:40,730 --> 00:08:44,680
[Music]

219
00:08:42,089 --> 00:08:46,930
from origin someone I don't know camera

220
00:08:44,679 --> 00:08:48,729
Center offset something like that and

221
00:08:46,929 --> 00:08:50,979
then we can do is just pass down the

222
00:08:48,730 --> 00:08:52,720
center of this thing so we can just say

223
00:08:50,980 --> 00:08:54,370
all right we'll pass simulation center

224
00:08:52,720 --> 00:08:58,120
get rid of the delta from sim and we'll

225
00:08:54,370 --> 00:08:59,799
say get center like so and we can just

226
00:08:58,120 --> 00:09:01,539
pass the center of that bounding box and

227
00:08:59,799 --> 00:09:04,269
that could give us where we want our

228
00:09:01,539 --> 00:09:06,338
lighting to be centered so now one thing

229
00:09:04,269 --> 00:09:09,370
we could do is just use that Center

230
00:09:06,339 --> 00:09:11,740
immediately right we can do that but the

231
00:09:09,370 --> 00:09:15,399
problem is if we do that we don't

232
00:09:11,740 --> 00:09:17,709
actually have include me we're not

233
00:09:15,399 --> 00:09:19,629
actually aligned to the world and what

234
00:09:17,708 --> 00:09:21,128
you could see here is we need to be able

235
00:09:19,629 --> 00:09:23,139
or I shouldn't say align throat we're

236
00:09:21,129 --> 00:09:25,509
not aligned to light chunks we need this

237
00:09:23,139 --> 00:09:27,549
thing to be aligned because otherwise as

238
00:09:25,509 --> 00:09:30,339
it slides you would see the lighting

239
00:09:27,549 --> 00:09:32,409
kind of slide across the cells in the

240
00:09:30,339 --> 00:09:37,259
world so we want it to move by like

241
00:09:32,409 --> 00:09:37,259
entire voxel cells you know I'm saying

242
00:09:40,409 --> 00:09:45,308
and I guess to a certain extent I'm not

243
00:09:42,970 --> 00:09:48,160
really sure why we cared that it was

244
00:09:45,308 --> 00:09:50,259
aligned to the world per se but we might

245
00:09:48,159 --> 00:09:51,730
want to keep that for some reasons about

246
00:09:50,259 --> 00:09:52,659
like light leaking and so on we might

247
00:09:51,730 --> 00:09:54,519
want to make it so that we're always

248
00:09:52,659 --> 00:09:57,370
sort of snapped to the world grid as

249
00:09:54,519 --> 00:09:59,019
well so I think we probably do want to

250
00:09:57,370 --> 00:10:01,808
keep that but what we don't want to do

251
00:09:59,019 --> 00:10:03,639
here is the this sort of stuff here

252
00:10:01,808 --> 00:10:05,948
where we do the center moved thing I

253
00:10:03,639 --> 00:10:08,169
think that now this whole thing has to

254
00:10:05,948 --> 00:10:10,958
get unfortunately a lot more complicated

255
00:10:08,169 --> 00:10:13,778
so we do need to know like all of this

256
00:10:10,958 --> 00:10:17,739
information and we do need to do all of

257
00:10:13,778 --> 00:10:19,919
this work but we have to take our inputs

258
00:10:17,740 --> 00:10:24,579
where we're actually going to be moving

259
00:10:19,919 --> 00:10:26,349
we have to be a lot more granular about

260
00:10:24,578 --> 00:10:28,899
how we're moving we need to move by

261
00:10:26,350 --> 00:10:33,639
world tiles probably not world chunks

262
00:10:28,899 --> 00:10:35,409
that would be my assumption so we need

263
00:10:33,639 --> 00:10:38,620
to actually be like very specific about

264
00:10:35,409 --> 00:10:40,629
how we do this that's my thinking so

265
00:10:38,620 --> 00:10:43,539
probably what we want to do here is just

266
00:10:40,629 --> 00:10:45,990
say all right we've got the origin P and

267
00:10:43,539 --> 00:10:51,009
we know that that's going to give us a

268
00:10:45,990 --> 00:10:53,409
an offset and we probably need to do the

269
00:10:51,009 --> 00:10:54,639
center moved stuff basically every frame

270
00:10:53,409 --> 00:10:57,279
now not every

271
00:10:54,639 --> 00:10:59,409
but anytime the camera moves so we it

272
00:10:57,279 --> 00:11:00,789
has to be a per frame thing it means

273
00:10:59,409 --> 00:11:03,159
that there's a lot more pressure on

274
00:11:00,789 --> 00:11:03,969
block copy Atlas certainly and we're

275
00:11:03,159 --> 00:11:07,149
gonna have to make sure that that

276
00:11:03,970 --> 00:11:09,879
routine is nice and quick but hopefully

277
00:11:07,149 --> 00:11:11,740
we can make sure that that's the case so

278
00:11:09,879 --> 00:11:15,340
what we need to do here is say alright

279
00:11:11,740 --> 00:11:18,460
this this idea where the center like

280
00:11:15,340 --> 00:11:20,110
this part here is now not sufficient

281
00:11:18,460 --> 00:11:22,139
this is actually going to be something

282
00:11:20,110 --> 00:11:26,230
different which is like chunk moved

283
00:11:22,139 --> 00:11:28,360
right and chunk moved is going to be

284
00:11:26,230 --> 00:11:30,399
some one way in which we can have a

285
00:11:28,360 --> 00:11:32,139
displacement but another way that we can

286
00:11:30,399 --> 00:11:34,480
have a displacement is if the camera

287
00:11:32,139 --> 00:11:38,259
Center offset changes enough as well

288
00:11:34,480 --> 00:11:40,389
right so the first thing we want to do

289
00:11:38,259 --> 00:11:42,639
is say all right voxels per chunk is

290
00:11:40,389 --> 00:11:44,169
always on the table because we're gonna

291
00:11:42,639 --> 00:11:47,649
need to know that piece of inference

292
00:11:44,169 --> 00:11:50,679
that's not actually true I tell you back

293
00:11:47,649 --> 00:11:55,509
I suppose we only need to know that if

294
00:11:50,679 --> 00:11:58,959
this happened so all right so if we have

295
00:11:55,509 --> 00:12:02,439
an origin change like before we do need

296
00:11:58,960 --> 00:12:07,210
to adjust for that so that's fine and we

297
00:12:02,440 --> 00:12:09,220
do have like a you know a or you know D

298
00:12:07,210 --> 00:12:12,940
origin chunk sort of operation that's

299
00:12:09,220 --> 00:12:14,889
happening here right and so we're going

300
00:12:12,940 --> 00:12:17,620
to want to do some kind of a summation

301
00:12:14,889 --> 00:12:20,470
where we say all right we've got a D you

302
00:12:17,620 --> 00:12:22,810
know something like D voxel right and it

303
00:12:20,470 --> 00:12:25,450
starts off at nothing and in this

304
00:12:22,809 --> 00:12:28,509
particular case we then know that we're

305
00:12:25,450 --> 00:12:31,390
going to have to take our D voxel and

306
00:12:28,509 --> 00:12:34,450
add to it however much the offset would

307
00:12:31,389 --> 00:12:37,240
have been for this right so we we need

308
00:12:34,450 --> 00:12:39,129
the chunk moved to occur properly and we

309
00:12:37,240 --> 00:12:42,730
need that to do you know to do this

310
00:12:39,129 --> 00:12:44,620
right and I guess I don't know that we

311
00:12:42,730 --> 00:12:45,820
need to save this variable either so we

312
00:12:44,620 --> 00:12:48,159
could probably just make this a little

313
00:12:45,820 --> 00:12:53,350
simpler by saying look let's go ahead

314
00:12:48,159 --> 00:12:55,480
and just make this path happen whenever

315
00:12:53,350 --> 00:12:59,860
this is not true and then once that's

316
00:12:55,480 --> 00:13:03,190
done once this has finished then we need

317
00:12:59,860 --> 00:13:06,930
to say that from there we need to adjust

318
00:13:03,190 --> 00:13:06,930
for the camera center offset right

319
00:13:08,970 --> 00:13:17,560
and at the end here where we have D

320
00:13:12,850 --> 00:13:19,680
voxel really what I want to do here is

321
00:13:17,559 --> 00:13:29,169
just check to see if any of these are

322
00:13:19,679 --> 00:13:31,059
nonzero so all I'm doing here is saying

323
00:13:29,169 --> 00:13:33,579
all right let's break this up into two

324
00:13:31,059 --> 00:13:36,039
stages one that does the offset for the

325
00:13:33,580 --> 00:13:37,720
center and one that does a check to see

326
00:13:36,039 --> 00:13:39,579
if there is any changes and then does

327
00:13:37,720 --> 00:13:42,910
the block copy and that will set me up

328
00:13:39,580 --> 00:13:44,920
in here for adding an additional way of

329
00:13:42,909 --> 00:13:48,100
sliding the voxel around that's based on

330
00:13:44,919 --> 00:13:50,110
the camera position so let's take a look

331
00:13:48,100 --> 00:14:01,330
at what we need to do here for D voxel

332
00:13:50,110 --> 00:14:07,409
um this is the origin chunk and it looks

333
00:14:01,330 --> 00:14:10,950
like we don't have a + equals that you

334
00:14:07,409 --> 00:14:10,949
yeah it's true

335
00:14:11,529 --> 00:14:15,669
and so that should just work the same

336
00:14:13,779 --> 00:14:17,350
way you know there shouldn't be any

337
00:14:15,669 --> 00:14:19,809
difference so if we take a look at what

338
00:14:17,350 --> 00:14:23,050
happens now that hopefully nothing like

339
00:14:19,809 --> 00:14:23,559
broke right and it looks looks about

340
00:14:23,049 --> 00:14:25,629
right

341
00:14:23,559 --> 00:14:28,500
you know those copies like the lighting

342
00:14:25,629 --> 00:14:32,679
there say it's stable as it moved right

343
00:14:28,500 --> 00:14:34,929
so that seems fine and then what I need

344
00:14:32,679 --> 00:14:36,189
is I need to be able to and you know I

345
00:14:34,929 --> 00:14:37,389
may have been pretty mature about this

346
00:14:36,190 --> 00:14:45,100
because we may need to do the second

347
00:14:37,389 --> 00:14:45,730
part as well but either way sorry my

348
00:14:45,100 --> 00:14:50,830
eyes itchy

349
00:14:45,730 --> 00:14:54,100
allergy season this is why I can't go

350
00:14:50,830 --> 00:15:01,990
outside I have such a eyes I definitely

351
00:14:54,100 --> 00:15:04,269
get the corona virus anyway so basically

352
00:15:01,990 --> 00:15:06,789
what I need to do here is I need to say

353
00:15:04,269 --> 00:15:08,409
if the camera Center offset was

354
00:15:06,789 --> 00:15:11,379
different I'm going to have to also

355
00:15:08,409 --> 00:15:13,809
account for that so we need to take a

356
00:15:11,379 --> 00:15:15,730
look at the camera offset center and see

357
00:15:13,809 --> 00:15:19,539
if that meaningfully changed one way or

358
00:15:15,730 --> 00:15:24,199
the other now I don't actually know

359
00:15:19,539 --> 00:15:27,349
how we should do this exactly because we

360
00:15:24,198 --> 00:15:33,458
kind of also need to track what this

361
00:15:27,350 --> 00:15:33,459
offset would be so I think I guess what

362
00:15:34,928 --> 00:15:38,600
so I guess what we'd probably want to do

363
00:15:37,369 --> 00:15:39,740
yeah I think I was pretty mature with

364
00:15:38,600 --> 00:15:41,480
this I guess what we probably want to do

365
00:15:39,740 --> 00:15:46,549
the easiest way I think to do this and

366
00:15:41,480 --> 00:15:48,889
maybe we'll see an easier way to do it

367
00:15:46,549 --> 00:15:51,708
in a second but we probably want to do

368
00:15:48,889 --> 00:15:53,028
an if Center changed and then process

369
00:15:51,708 --> 00:15:55,669
the center change and then do as if

370
00:15:53,028 --> 00:15:58,308
Center changed like or kind of a thing

371
00:15:55,669 --> 00:16:02,778
where we compute a voxel offset if the

372
00:15:58,308 --> 00:16:05,688
camera Center offset changed right and

373
00:16:02,778 --> 00:16:08,629
then we do something like this where we

374
00:16:05,688 --> 00:16:10,490
account for the change here so let's see

375
00:16:08,629 --> 00:16:12,350
what we would need to do there if the

376
00:16:10,490 --> 00:16:14,659
previous voxel was centered around a

377
00:16:12,350 --> 00:16:16,399
particular camera Center offset all we

378
00:16:14,659 --> 00:16:19,338
really need to do is figure out like how

379
00:16:16,399 --> 00:16:21,110
many voxels we need to offset to get to

380
00:16:19,339 --> 00:16:22,759
the current camera center and that

381
00:16:21,110 --> 00:16:25,068
should be pretty simple right it's just

382
00:16:22,759 --> 00:16:27,470
yet another you know flooring function

383
00:16:25,068 --> 00:16:29,479
probably or we can do a rounding

384
00:16:27,470 --> 00:16:31,160
function doesn't really matter but

385
00:16:29,480 --> 00:16:36,949
basically what we would say is like you

386
00:16:31,159 --> 00:16:40,458
know the camera you know the the camera

387
00:16:36,948 --> 00:16:42,169
offset or chunk or you know voxel camera

388
00:16:40,458 --> 00:16:44,539
offset something like this it's gonna be

389
00:16:42,169 --> 00:16:48,289
the camera center offset and it's gonna

390
00:16:44,539 --> 00:16:51,078
be using the sort of inverse of the

391
00:16:48,289 --> 00:16:54,740
voxel seldom so whatever the voxel

392
00:16:51,078 --> 00:17:02,888
seldom was and I thought we had an

393
00:16:54,740 --> 00:17:06,019
influx seldom here am I wrong about that

394
00:17:02,889 --> 00:17:11,120
so we have an inbox seldom why is this a

395
00:17:06,019 --> 00:17:15,859
divided instead of a multiple why not

396
00:17:11,119 --> 00:17:17,028
use in box seldom here so this is I

397
00:17:15,859 --> 00:17:18,349
don't know what's going on here we

398
00:17:17,028 --> 00:17:20,390
probably just didn't have the time or

399
00:17:18,349 --> 00:17:21,889
got or I don't know what but we can just

400
00:17:20,390 --> 00:17:24,770
multiply by the inverse cell dim and

401
00:17:21,890 --> 00:17:26,720
then basically the round of that right

402
00:17:24,769 --> 00:17:29,000
and I assume we have

403
00:17:26,720 --> 00:17:30,710
no we don't actually all right so I'm

404
00:17:29,000 --> 00:17:32,210
gonna go ahead and see if we can't just

405
00:17:30,710 --> 00:17:34,009
add something that rounds a whole vector

406
00:17:32,210 --> 00:17:35,569
at once because if we have some that

407
00:17:34,009 --> 00:17:37,339
rounds a whole vector at once then these

408
00:17:35,569 --> 00:17:41,929
equations get easier for people to read

409
00:17:37,339 --> 00:17:47,539
right so like for example if I want to

410
00:17:41,930 --> 00:17:50,330
compute a a V scope there it is so we

411
00:17:47,539 --> 00:17:55,629
have a floor 2 V 3 s right so we should

412
00:17:50,329 --> 00:18:03,289
also just have a round 2 V 3 s like this

413
00:17:55,630 --> 00:18:05,990
and then then we can just go ahead and

414
00:18:03,289 --> 00:18:08,960
call that on moss so this can just be

415
00:18:05,990 --> 00:18:11,359
you know a simple rounding function

416
00:18:08,960 --> 00:18:20,360
round real 32 in 32

417
00:18:11,359 --> 00:18:23,089
oops nope sorry round 2 yes so once we

418
00:18:20,359 --> 00:18:25,219
reduce this and say okay how many cells

419
00:18:23,089 --> 00:18:27,769
is it we can then round it to an offset

420
00:18:25,220 --> 00:18:31,160
and now we have however much the offset

421
00:18:27,769 --> 00:18:33,259
should be and in this case we would then

422
00:18:31,160 --> 00:18:37,009
add that to the total offset we need to

423
00:18:33,259 --> 00:18:38,750
compute and we this is the amount of

424
00:18:37,009 --> 00:18:41,269
movement that would be required because

425
00:18:38,750 --> 00:18:43,250
of that offset and I guess now that I

426
00:18:41,269 --> 00:18:45,019
think about it so I got a slate back on

427
00:18:43,250 --> 00:18:47,299
the back and forth on this I guess if we

428
00:18:45,019 --> 00:18:50,420
just saved the previous offset we could

429
00:18:47,299 --> 00:18:52,970
change we could did look to see what the

430
00:18:50,420 --> 00:18:56,090
difference between the two values

431
00:18:52,970 --> 00:18:57,920
actually ends up being and only produce

432
00:18:56,089 --> 00:19:02,599
a change if necessary

433
00:18:57,920 --> 00:19:05,420
so I guess actually we we really don't

434
00:19:02,599 --> 00:19:08,839
need this so I guess we would just say

435
00:19:05,420 --> 00:19:11,750
look here's the voxel camera offset we'd

436
00:19:08,839 --> 00:19:17,389
look at voxel camera offset here and say

437
00:19:11,750 --> 00:19:20,329
you know if not are equal then we

438
00:19:17,390 --> 00:19:24,280
actually do the difference so in here

439
00:19:20,329 --> 00:19:27,230
the D voxel in this case is just the

440
00:19:24,279 --> 00:19:29,329
difference between these two and off we

441
00:19:27,230 --> 00:19:31,250
go now I think that also means we

442
00:19:29,329 --> 00:19:34,579
probably want to news 0 so we could be

443
00:19:31,250 --> 00:19:38,869
like a DVR camera offset something like

444
00:19:34,579 --> 00:19:40,309
this I guess where we just say oh ok

445
00:19:38,869 --> 00:19:45,259
what we really could just say

446
00:19:40,309 --> 00:19:50,000
if is not is zero right and that would

447
00:19:45,259 --> 00:19:55,160
just allow us to do a direct ad so we

448
00:19:50,000 --> 00:19:59,480
could say okay here's the old one here's

449
00:19:55,160 --> 00:20:05,320
the new one that's the Delta and then

450
00:19:59,480 --> 00:20:08,210
after we're done we just save it and

451
00:20:05,319 --> 00:20:11,509
then we could just say look if there's

452
00:20:08,210 --> 00:20:14,000
any difference here then we need to do

453
00:20:11,509 --> 00:20:16,490
the block copy otherwise we don't need

454
00:20:14,000 --> 00:20:18,109
to do the block copy right yet another

455
00:20:16,490 --> 00:20:20,059
way to look at it would be is we always

456
00:20:18,109 --> 00:20:21,679
do the block copy if the you know we

457
00:20:20,059 --> 00:20:23,839
could actually put in if here you know

458
00:20:21,680 --> 00:20:27,880
if nonzero but it doesn't seem worth it

459
00:20:23,839 --> 00:20:30,559
so hmm all I really need to do there is

460
00:20:27,880 --> 00:20:34,240
save whatever the voxel camera offset

461
00:20:30,559 --> 00:20:44,859
actually is and then I think we're okay

462
00:20:34,240 --> 00:20:44,859
um yeah that seems rights

463
00:20:53,179 --> 00:20:57,139
yeah this has to be a Hadamard product

464
00:20:55,398 --> 00:20:58,459
obviously cuz it's you know it's a

465
00:20:57,138 --> 00:21:00,138
vector product and we don't actually

466
00:20:58,460 --> 00:21:01,429
assume that that vector product is a

467
00:21:00,138 --> 00:21:03,048
particular thing we don't know if it's a

468
00:21:01,429 --> 00:21:04,548
dot product or Hadamard product or cross

469
00:21:03,048 --> 00:21:06,798
product so we make you say which one it

470
00:21:04,548 --> 00:21:11,298
is it's not the same as in shaders but

471
00:21:06,798 --> 00:21:13,848
you know what do you do um so yeah I

472
00:21:11,298 --> 00:21:15,648
don't know that I thought that through

473
00:21:13,848 --> 00:21:17,178
properly right in fact I think I

474
00:21:15,648 --> 00:21:21,199
probably didn't cuz I saw some flickery

475
00:21:17,179 --> 00:21:22,700
in this there but let's just take a look

476
00:21:21,200 --> 00:21:26,690
at what happens first just to get a

477
00:21:22,700 --> 00:21:29,569
sense of it you can kind of see there's

478
00:21:26,690 --> 00:21:36,950
a little bit too much jerking around

479
00:21:29,569 --> 00:21:40,249
there so it looks like it's not quite it

480
00:21:36,950 --> 00:21:43,219
looks like it's going like rather than

481
00:21:40,249 --> 00:21:44,778
then copying forward it almost looks

482
00:21:43,219 --> 00:21:47,389
like it's copying backwards like it

483
00:21:44,778 --> 00:21:50,598
maybe I had like I did the math wrong or

484
00:21:47,388 --> 00:21:54,288
something so I'm not sure exactly what's

485
00:21:50,598 --> 00:21:55,999
going on there so if you take a look at

486
00:21:54,288 --> 00:21:58,759
what I'm doing maybe we can see if

487
00:21:55,999 --> 00:22:00,739
there's a bug in there in theory this

488
00:21:58,759 --> 00:22:06,219
part of the code is not happening right

489
00:22:00,739 --> 00:22:10,879
so you know in other words if I just

490
00:22:06,219 --> 00:22:12,710
look at what's happening in well I guess

491
00:22:10,878 --> 00:22:15,949
that's big enough that the simulation

492
00:22:12,710 --> 00:22:18,739
center changes so but if I go to like

493
00:22:15,950 --> 00:22:22,669
say a scrolling room so let's go over to

494
00:22:18,739 --> 00:22:24,829
here right so the simulation center now

495
00:22:22,669 --> 00:22:26,778
is not changing right the only thing

496
00:22:24,829 --> 00:22:33,558
that's happening is the scrolling is

497
00:22:26,778 --> 00:22:35,088
occurring right see and so in theory the

498
00:22:33,558 --> 00:22:37,519
first part of the code this part of the

499
00:22:35,088 --> 00:22:39,618
code is not involved so the only thing

500
00:22:37,519 --> 00:22:42,409
that's happening now is just this and

501
00:22:39,618 --> 00:22:46,388
you can see here that this camera offset

502
00:22:42,409 --> 00:22:46,389
here is basically saying like all right

503
00:22:46,929 --> 00:22:51,369
hold on a second I mean take a drink

504
00:22:49,190 --> 00:22:51,369
here

505
00:22:55,339 --> 00:22:58,759
so here we're basically saying look

506
00:22:57,019 --> 00:23:01,819
let's figure out how many of these there

507
00:22:58,759 --> 00:23:04,220
are and we'll do a round and that's

508
00:23:01,819 --> 00:23:06,858
where we'll put this thing so the inbox

509
00:23:04,220 --> 00:23:08,749
seldom should tell us how many cells we

510
00:23:06,858 --> 00:23:11,148
want to get to the camera Center and

511
00:23:08,749 --> 00:23:13,460
then the Delta between those we're just

512
00:23:11,148 --> 00:23:16,548
subtracting like what that desired

513
00:23:13,460 --> 00:23:29,090
amount is versus what the amount we last

514
00:23:16,548 --> 00:23:30,589
applied was right and I can't I mean I

515
00:23:29,089 --> 00:23:32,988
can't see what the flaws in that logic

516
00:23:30,589 --> 00:23:35,388
I'm trying to think seems about right

517
00:23:32,989 --> 00:23:37,399
we then have the D voxel which is saying

518
00:23:35,388 --> 00:23:40,158
look this is the amount we're gonna sum

519
00:23:37,398 --> 00:23:44,118
so if we had any of that that we needed

520
00:23:40,159 --> 00:23:46,789
to do we're gonna do it now right we

521
00:23:44,118 --> 00:23:48,618
then save whatever it was that we

522
00:23:46,788 --> 00:23:50,509
thought the offset should be so that we

523
00:23:48,618 --> 00:23:55,099
won't do it again on the next frame

524
00:23:50,509 --> 00:23:57,230
right and again I can't really see why

525
00:23:55,099 --> 00:24:00,528
that's creating sort of the weirdness

526
00:23:57,230 --> 00:24:04,489
that I'm seeing because it should I

527
00:24:00,528 --> 00:24:06,259
would think just as it slides if it's

528
00:24:04,489 --> 00:24:07,879
doing the correct copy you wouldn't see

529
00:24:06,259 --> 00:24:10,548
any change at all except around the

530
00:24:07,878 --> 00:24:13,368
edges right because all it's doing is

531
00:24:10,548 --> 00:24:15,918
moving one cell forward and then copying

532
00:24:13,368 --> 00:24:19,339
one cell but maybe I'm misunderstanding

533
00:24:15,919 --> 00:24:30,200
like what this actually means right like

534
00:24:19,339 --> 00:24:35,019
oh you know what though here's the

535
00:24:30,200 --> 00:24:39,489
problem is that the Vox min corner is

536
00:24:35,019 --> 00:24:43,069
never actually okay is not itself moving

537
00:24:39,489 --> 00:24:46,579
right so what we actually need to do

538
00:24:43,069 --> 00:24:52,460
here is take whatever the voxel camera

539
00:24:46,579 --> 00:24:57,019
offset is like floored basically and use

540
00:24:52,460 --> 00:25:01,340
that amount so this voxel camera offset

541
00:24:57,019 --> 00:25:05,980
here has to actually be factored in here

542
00:25:01,339 --> 00:25:05,980
right meaning we have to have

543
00:25:06,720 --> 00:25:12,339
this this voxel camera offset here

544
00:25:10,000 --> 00:25:19,919
however much removing has to be taken

545
00:25:12,339 --> 00:25:19,918
into account so hmm

546
00:25:20,339 --> 00:25:26,369
so I guess what we want to say is that

547
00:25:22,929 --> 00:25:31,630
the actual starting location right is

548
00:25:26,369 --> 00:25:35,638
you know the negative of the origin here

549
00:25:31,630 --> 00:25:43,539
plus the voxel camera offset times the

550
00:25:35,638 --> 00:25:44,319
cell dim right and I think that's

551
00:25:43,538 --> 00:25:48,038
correct

552
00:25:44,319 --> 00:25:51,428
could be wrong about that what's the

553
00:25:48,038 --> 00:25:56,259
problem here no acceptable conversion

554
00:25:51,429 --> 00:26:04,409
app keep living in shader land there we

555
00:25:56,259 --> 00:26:04,408
go all right

556
00:26:15,740 --> 00:26:22,620
so again not quite what we would expect

557
00:26:19,920 --> 00:26:23,039
let me see am I thinking about this

558
00:26:22,619 --> 00:26:26,069
wrong

559
00:26:23,039 --> 00:26:30,990
let me also I'm gonna pull this out so

560
00:26:26,069 --> 00:26:48,869
this is the origin offset for camera

561
00:26:30,990 --> 00:26:51,750
oops yeah and so yeah the center we've

562
00:26:48,869 --> 00:26:55,529
moved by that much so it should be as it

563
00:26:51,750 --> 00:26:57,150
should be negative as well right and so

564
00:26:55,529 --> 00:26:59,279
I think wherever the min corner hot is

565
00:26:57,150 --> 00:27:02,580
it's it's gonna be whatever that you

566
00:26:59,279 --> 00:27:08,849
know value actually is right because

567
00:27:02,579 --> 00:27:11,220
that's the amount of of Delta that we

568
00:27:08,849 --> 00:27:13,109
applied so let me just take a look at

569
00:27:11,220 --> 00:27:15,900
what movement is happening if I actually

570
00:27:13,109 --> 00:27:19,369
run this and zoom out I should be able

571
00:27:15,900 --> 00:27:19,370
to see like

572
00:27:29,210 --> 00:27:34,500
so it's actually going the wrong way so

573
00:27:32,190 --> 00:27:38,370
I'm I have this backwards in my head

574
00:27:34,500 --> 00:27:41,940
somehow I guess meaning that this value

575
00:27:38,369 --> 00:27:45,000
should actually be positive on the

576
00:27:41,940 --> 00:27:46,980
outside and I'm to be honest I'm not

577
00:27:45,000 --> 00:27:49,650
really sure I understand why I'll have

578
00:27:46,980 --> 00:27:53,519
to think that through but basically what

579
00:27:49,650 --> 00:27:55,769
that implies is that it's actually going

580
00:27:53,519 --> 00:28:02,460
the other way let me just see if that's

581
00:27:55,769 --> 00:28:05,250
actually true yeah hmm

582
00:28:02,460 --> 00:28:07,200
so why we need to go draw this out on

583
00:28:05,250 --> 00:28:11,369
the blackboard because I don't really

584
00:28:07,200 --> 00:28:12,720
get that like I'm these sorts of origin

585
00:28:11,369 --> 00:28:15,029
things are always very Squinkie so I'm

586
00:28:12,720 --> 00:28:16,890
not surprised I don't get it but at the

587
00:28:15,029 --> 00:28:19,019
same time I want to make sure that I'm

588
00:28:16,890 --> 00:28:20,310
not missing some other thing because if

589
00:28:19,019 --> 00:28:22,470
something goes the opposite direction I

590
00:28:20,309 --> 00:28:26,849
think it means my mental models wrong

591
00:28:22,470 --> 00:28:29,759
and that's not great right okay so now

592
00:28:26,849 --> 00:28:32,429
if we actually go in here and look at

593
00:28:29,759 --> 00:28:36,569
the view I'm hoping that we won't see a

594
00:28:32,430 --> 00:28:38,880
lot of lighting errors visible lighting

595
00:28:36,569 --> 00:28:40,589
errors and we'll see you know I don't

596
00:28:38,880 --> 00:28:44,250
know to what extent that'll be true but

597
00:28:40,589 --> 00:28:46,919
we'll check it out so we do see some

598
00:28:44,250 --> 00:28:48,750
weirdness here we're seeing some like

599
00:28:46,920 --> 00:28:53,460
weird beat frequency out there what's

600
00:28:48,750 --> 00:28:56,039
what's going on with that so this is

601
00:28:53,460 --> 00:28:58,140
still like totally broken though to a

602
00:28:56,039 --> 00:29:00,960
certain extent if this is if this is the

603
00:28:58,140 --> 00:29:05,160
camera center why is this so far over

604
00:29:00,960 --> 00:29:10,500
here like that's just not the way that

605
00:29:05,160 --> 00:29:12,090
the lighting should be aligned right so

606
00:29:10,500 --> 00:29:14,759
you can see there's some other bug as

607
00:29:12,089 --> 00:29:18,230
well like yes it's moving but it's not

608
00:29:14,759 --> 00:29:18,230
moving correctly

609
00:29:35,509 --> 00:29:40,430
so yeah it's still not centering the

610
00:29:38,180 --> 00:29:42,320
lighting region so what am I doing wrong

611
00:29:40,430 --> 00:29:49,810
there because I'm obviously doing

612
00:29:42,319 --> 00:30:07,399
something wrong there what's the deal

613
00:29:49,809 --> 00:30:08,809
with that something's wrong so there's a

614
00:30:07,400 --> 00:30:10,460
couple things that could be wrong now

615
00:30:08,809 --> 00:30:12,679
about it in addition to the fact that

616
00:30:10,460 --> 00:30:14,509
this is not the sign that I thought it

617
00:30:12,680 --> 00:30:16,700
was there's also the fact that I guess

618
00:30:14,509 --> 00:30:21,829
I'm not sure what happens when this

619
00:30:16,700 --> 00:30:23,539
changes you know and now we don't know

620
00:30:21,829 --> 00:30:27,710
what this offset should necessarily be

621
00:30:23,539 --> 00:30:29,720
so I don't know like if it makes more

622
00:30:27,710 --> 00:30:32,450
sense to say like I'm onna I'm curious

623
00:30:29,720 --> 00:30:36,440
again just exploring this if I set this

624
00:30:32,450 --> 00:30:44,289
to zero so that now it reapplies the

625
00:30:36,440 --> 00:30:47,660
Delta like whole cloth basically mm-hmm

626
00:30:44,289 --> 00:30:52,460
that shouldn't be right so again this is

627
00:30:47,660 --> 00:30:54,529
kind of me just looking to see oops this

628
00:30:52,460 --> 00:30:57,769
is me looking to see whether I'm just

629
00:30:54,529 --> 00:30:59,210
like totally floating out in space with

630
00:30:57,769 --> 00:31:02,089
my conception how this works because

631
00:30:59,210 --> 00:31:04,250
this should be worse right and if this

632
00:31:02,089 --> 00:31:06,970
is better then that's yet another thing

633
00:31:04,250 --> 00:31:06,970
I don't understand

634
00:31:08,230 --> 00:31:17,019
yeah so that's not that's not better

635
00:31:15,230 --> 00:31:19,069
okay good

636
00:31:17,019 --> 00:31:22,160
so I only have one thing I understand

637
00:31:19,069 --> 00:31:25,129
all right so yeah fundamentally right

638
00:31:22,160 --> 00:31:28,400
now we're just getting some weird like I

639
00:31:25,130 --> 00:31:30,110
don't really understand where that why

640
00:31:28,400 --> 00:31:32,780
we're not getting more of an offset on

641
00:31:30,109 --> 00:31:37,329
the lighting like why is the X Y is the

642
00:31:32,779 --> 00:31:37,329
lighting not sliding over in X right

643
00:31:37,450 --> 00:31:45,298
because we want this to be the center

644
00:31:40,220 --> 00:31:49,919
and this was the center so we need Oh

645
00:31:45,298 --> 00:31:58,378
so the sign is wrong here we want this

646
00:31:49,919 --> 00:32:07,649
to be the center don't we so let me

647
00:31:58,378 --> 00:32:10,408
think about how this is working here so

648
00:32:07,648 --> 00:32:12,508
first of all block copy of Atlas I don't

649
00:32:10,409 --> 00:32:14,820
know what the D yeah so we here okay

650
00:32:12,509 --> 00:32:18,899
let's start from the beginning I need to

651
00:32:14,819 --> 00:32:20,730
document what this means because D voxel

652
00:32:18,898 --> 00:32:23,339
doesn't really make any sense what does

653
00:32:20,730 --> 00:32:25,980
that mean it's like is it gonna move it

654
00:32:23,339 --> 00:32:37,378
in that direction or backwards right and

655
00:32:25,980 --> 00:32:40,349
I don't know all right so if we look at

656
00:32:37,378 --> 00:32:45,449
what's happening here and we want to do

657
00:32:40,349 --> 00:32:48,509
a copy tile we copy from the D voxel to

658
00:32:45,450 --> 00:32:49,950
where we are so I think now we're sort

659
00:32:48,509 --> 00:33:04,919
of getting to the point where which

660
00:32:49,950 --> 00:33:05,999
which is what I didn't understand so if

661
00:33:04,919 --> 00:33:08,249
we look at what's going on there the

662
00:33:05,999 --> 00:33:11,999
devoxx hole is actually telling us how

663
00:33:08,249 --> 00:33:14,339
far to grab the next tile from that

664
00:33:11,999 --> 00:33:17,639
means that the entire voxel will

665
00:33:14,339 --> 00:33:22,288
actually shift by the opposite of D

666
00:33:17,638 --> 00:33:26,158
voxel right so yeah we got to start with

667
00:33:22,288 --> 00:33:34,079
that understanding so block copy atlas

668
00:33:26,159 --> 00:33:36,720
really needs to document what this is so

669
00:33:34,079 --> 00:33:41,128
this value should probably not be called

670
00:33:36,720 --> 00:33:44,548
D voxel it should probably be like fetch

671
00:33:41,128 --> 00:33:49,259
offset or something like that so it's

672
00:33:44,548 --> 00:33:51,148
where you will fetch the the voxel from

673
00:33:49,259 --> 00:33:53,220
when you're actually doing your Delta

674
00:33:51,148 --> 00:33:56,819
right and that's why the copy tile here

675
00:33:53,220 --> 00:33:58,799
right is look I'm fetching from whatever

676
00:33:56,819 --> 00:34:00,990
this Delta tells me to fetch

677
00:33:58,799 --> 00:34:03,509
and I'm getting this putting that in the

678
00:34:00,990 --> 00:34:05,220
destination that means if you looked at

679
00:34:03,509 --> 00:34:09,449
the Vauxhall and you were just like

680
00:34:05,220 --> 00:34:12,389
visualizing just the voxel then if it if

681
00:34:09,449 --> 00:34:15,089
you gave it a plus X you would actually

682
00:34:12,389 --> 00:34:18,509
see a negative X translation because

683
00:34:15,090 --> 00:34:19,380
it's fetching from the negative of of

684
00:34:18,510 --> 00:34:23,040
that thing

685
00:34:19,380 --> 00:34:26,460
right so it's important to understand

686
00:34:23,039 --> 00:35:00,360
what this is and I think we just want to

687
00:34:26,460 --> 00:35:03,300
make that clear something like that and

688
00:35:00,360 --> 00:35:06,120
that way we now have a comment in there

689
00:35:03,300 --> 00:35:08,400
that says blah copy Atlas does this

690
00:35:06,119 --> 00:35:12,440
particular operation so we're not

691
00:35:08,400 --> 00:35:17,579
confused about what it should be right

692
00:35:12,440 --> 00:35:20,639
so D voxel is basically you know inverse

693
00:35:17,579 --> 00:35:23,130
D voxel I mean I don't know how you want

694
00:35:20,639 --> 00:35:27,809
to look at that but it's kind of a

695
00:35:23,130 --> 00:35:29,760
little bit you know it's Squinkie and I

696
00:35:27,809 --> 00:35:31,349
suppose calling it D voxel is maybe a

697
00:35:29,760 --> 00:35:33,780
good idea at that point because it's

698
00:35:31,349 --> 00:35:35,219
like kind of an ambiguous term and so it

699
00:35:33,780 --> 00:35:38,130
encourages you to actually read about

700
00:35:35,219 --> 00:35:40,500
what it's going to be used for all right

701
00:35:38,130 --> 00:35:42,059
so if we look here and we say we know

702
00:35:40,500 --> 00:35:45,929
that the origin is getting you displaced

703
00:35:42,059 --> 00:35:47,429
a certain amount you can see that's why

704
00:35:45,929 --> 00:35:50,069
we're doing the subtraction in this

705
00:35:47,429 --> 00:35:52,199
order it's because D voxel itself is

706
00:35:50,070 --> 00:35:55,590
sort of inverted as to the direction the

707
00:35:52,199 --> 00:35:58,349
voxel slide so this has to be talking

708
00:35:55,590 --> 00:36:00,180
about the place you want to put the

709
00:35:58,349 --> 00:36:02,579
origin which are going to invert the

710
00:36:00,179 --> 00:36:04,199
direction you would slide things I don't

711
00:36:02,579 --> 00:36:06,090
know that that makes a lot of sense to

712
00:36:04,199 --> 00:36:10,319
do it that way but that is how we were

713
00:36:06,090 --> 00:36:12,130
doing it right so then if we look at box

714
00:36:10,320 --> 00:36:14,410
I'll camera offset

715
00:36:12,130 --> 00:36:16,809
we're saying well in addition to the

716
00:36:14,409 --> 00:36:18,399
location of the origin we're also going

717
00:36:16,809 --> 00:36:19,989
to have to move around a thing that says

718
00:36:18,400 --> 00:36:23,320
where the camera is relative to the

719
00:36:19,989 --> 00:36:25,119
origin right and in theory we could

720
00:36:23,320 --> 00:36:28,210
actually I suppose we could make it so

721
00:36:25,119 --> 00:36:38,799
that we recompute you know it and now

722
00:36:28,210 --> 00:36:44,050
that I think about it so here's a

723
00:36:38,800 --> 00:36:57,730
question for everyone do I even need to

724
00:36:44,050 --> 00:37:04,360
do this so here's a question if we go

725
00:36:57,730 --> 00:37:21,579
look at the world position we have a way

726
00:37:04,360 --> 00:37:27,700
to canonicalize things right so if we

727
00:37:21,579 --> 00:37:31,239
actually just used that so we could just

728
00:37:27,699 --> 00:37:36,929
say look here's our world position and

729
00:37:31,239 --> 00:37:36,929
we want to reckon annika lies it right

730
00:37:38,699 --> 00:37:42,569
couldn't we just do that

731
00:37:48,780 --> 00:37:53,820
so like this call here like this

732
00:37:55,380 --> 00:38:01,539
couldn't we just call that and not do a

733
00:37:58,750 --> 00:38:04,659
secondary one of these I think I may

734
00:38:01,539 --> 00:38:07,779
have just done something stupid so let's

735
00:38:04,659 --> 00:38:09,929
suppose we just don't do this any of

736
00:38:07,780 --> 00:38:09,930
this

737
00:38:21,719 --> 00:38:28,230
right so let's suppose we actually did

738
00:38:24,119 --> 00:38:32,969
this so we actually don't care about any

739
00:38:28,230 --> 00:38:38,400
of this stuff right would this actually

740
00:38:32,969 --> 00:38:40,769
be sufficient if we just used the chunk

741
00:38:38,400 --> 00:38:43,289
space map and maybe it won't be like

742
00:38:40,769 --> 00:38:45,659
we'll check it out in a second but

743
00:38:43,289 --> 00:38:49,650
suppose that that was all I did so begin

744
00:38:45,659 --> 00:38:53,009
lighting computation actually when we

745
00:38:49,650 --> 00:38:56,190
call it we just move the thing into

746
00:38:53,010 --> 00:38:59,910
chunk space first so we say get the

747
00:38:56,190 --> 00:39:02,159
center of the world rect and we

748
00:38:59,909 --> 00:39:06,929
basically say like you know world

749
00:39:02,159 --> 00:39:10,079
position lighting Center equals whatever

750
00:39:06,929 --> 00:39:18,059
the current simulation center is we then

751
00:39:10,079 --> 00:39:21,389
say lighting Center offset plus equals

752
00:39:18,059 --> 00:39:24,509
get center world camera rect and then we

753
00:39:21,389 --> 00:39:33,199
just say or actually I guess we don't do

754
00:39:24,510 --> 00:39:40,080
that nevermind we just say map into

755
00:39:33,199 --> 00:39:45,539
chunk space and in here we put the get

756
00:39:40,079 --> 00:39:48,739
center world camera rect so we just

757
00:39:45,539 --> 00:39:52,500
produce the lighting center as its own

758
00:39:48,739 --> 00:39:55,139
world position and let that flow through

759
00:39:52,500 --> 00:39:57,179
this I don't know if that's resolute

760
00:39:55,139 --> 00:39:58,889
enough but it might be and then we

761
00:39:57,179 --> 00:40:02,190
wouldn't have to even have a secondary

762
00:39:58,889 --> 00:40:04,829
code path there right so I think that

763
00:40:02,190 --> 00:40:11,250
needs the world probably I'm guessing I

764
00:40:04,829 --> 00:40:13,949
don't actually know yeah so I'm curious

765
00:40:11,250 --> 00:40:19,610
if that just solves the problem it might

766
00:40:13,949 --> 00:40:19,609
not really know let's take a look whoa

767
00:40:30,599 --> 00:40:36,400
so again really strange I don't

768
00:40:34,269 --> 00:40:38,259
understand why that motion is happening

769
00:40:36,400 --> 00:40:42,519
counter so we've got we've got issues

770
00:40:38,260 --> 00:40:46,800
here I also don't see why that whatever

771
00:40:42,519 --> 00:40:50,739
I just changed should have created that

772
00:40:46,800 --> 00:40:54,370
like making things brighter right like

773
00:40:50,739 --> 00:40:57,189
what happened there you you saw what I

774
00:40:54,369 --> 00:41:08,819
was talking about so if in here if I

775
00:40:57,190 --> 00:41:08,820
literally just do this right

776
00:41:14,219 --> 00:41:21,059
lighting is normal if now I do this

777
00:41:26,889 --> 00:41:35,500
lighting is nuts right so again like

778
00:41:33,550 --> 00:41:42,280
something weird is happening here I

779
00:41:35,500 --> 00:41:44,650
don't really know what and so we've got

780
00:41:42,280 --> 00:41:45,940
a lot of issues now and we need to

781
00:41:44,650 --> 00:41:49,420
figure out like what the heck is

782
00:41:45,940 --> 00:41:55,360
happening at this point that doesn't

783
00:41:49,420 --> 00:41:57,010
need to still be there but we've got

784
00:41:55,360 --> 00:41:59,140
some really weird stuff happening here

785
00:41:57,010 --> 00:42:01,870
so we've got bugs and I guess this is

786
00:41:59,139 --> 00:42:03,909
good we have a pretty obvious like a

787
00:42:01,869 --> 00:42:06,400
test case where we can take a look at

788
00:42:03,909 --> 00:42:08,049
what's happening but so in here in begin

789
00:42:06,400 --> 00:42:10,650
lighting computation I want to go ahead

790
00:42:08,050 --> 00:42:13,090
and see like what's happening here

791
00:42:10,650 --> 00:42:14,440
because I guess this must be triggering

792
00:42:13,090 --> 00:42:16,420
more often I mean that's the only thing

793
00:42:14,440 --> 00:42:29,740
I can think of meaning if this is not

794
00:42:16,420 --> 00:42:36,820
happening I'm assuming what this is

795
00:42:29,739 --> 00:42:40,479
crazy so just the act of passing down a

796
00:42:36,820 --> 00:42:44,230
slightly different Center made that

797
00:42:40,480 --> 00:42:49,510
happen so we're in like nonsense Ville

798
00:42:44,230 --> 00:42:53,170
at this point so we've got issues and it

799
00:42:49,510 --> 00:42:54,790
could be this is well actually no I

800
00:42:53,170 --> 00:42:57,280
don't really know so this is going to be

801
00:42:54,789 --> 00:42:59,529
interesting and I guess we'll see so

802
00:42:57,280 --> 00:43:00,780
here let's go ahead and investigate

803
00:42:59,530 --> 00:43:05,560
further

804
00:43:00,780 --> 00:43:07,690
so that's fascinating and I have no idea

805
00:43:05,559 --> 00:43:14,909
what's going on so I guess we'll learn

806
00:43:07,690 --> 00:43:17,530
something in a minute here so if we have

807
00:43:14,909 --> 00:43:21,879
the lighting offs that getting passed

808
00:43:17,530 --> 00:43:25,090
down on each frame like so light fills

809
00:43:21,880 --> 00:43:28,180
up the entire area almost like there's a

810
00:43:25,090 --> 00:43:31,510
copy bug or something also we can get

811
00:43:28,179 --> 00:43:33,759
rid of this let's suppose I turn this

812
00:43:31,510 --> 00:43:36,880
off I'm assuming that now that it's done

813
00:43:33,760 --> 00:43:39,420
it will never undo itself but I don't

814
00:43:36,880 --> 00:43:39,420
even know that

815
00:43:42,650 --> 00:43:47,840
and so the weird part about that is it

816
00:43:46,170 --> 00:43:50,820
doesn't even look like it's a different

817
00:43:47,840 --> 00:44:02,700
materially different Lighting's scenario

818
00:43:50,820 --> 00:44:06,720
either right so let me just see what

819
00:44:02,699 --> 00:44:18,569
happens if I move this now does this

820
00:44:06,719 --> 00:44:23,849
shift at all I mean barely that's a

821
00:44:18,570 --> 00:44:25,920
puzzler wow that's just a real puzzler I

822
00:44:23,849 --> 00:44:29,309
have a literally no idea what's going on

823
00:44:25,920 --> 00:44:32,309
there at all all right so we're gonna

824
00:44:29,309 --> 00:44:33,900
have to kind of dig in here and do some

825
00:44:32,309 --> 00:44:35,849
sleuthing cuz that's just totally

826
00:44:33,900 --> 00:44:38,460
bizarre I have no idea what that's doing

827
00:44:35,849 --> 00:44:41,159
even a little bit I don't know why those

828
00:44:38,460 --> 00:44:43,639
two things would be related because

829
00:44:41,159 --> 00:44:47,789
again it doesn't really look like

830
00:44:43,639 --> 00:44:52,589
there's any particular way that that

831
00:44:47,789 --> 00:44:56,429
would affect the lighting so something

832
00:44:52,590 --> 00:45:00,829
is super weird probably just a bug

833
00:44:56,429 --> 00:45:05,279
somewhere that we are not catching right

834
00:45:00,829 --> 00:45:08,219
so let's just take a quick look here and

835
00:45:05,280 --> 00:45:10,980
see what's going on when we look at like

836
00:45:08,219 --> 00:45:14,279
the cell count you know all this stuff

837
00:45:10,980 --> 00:45:17,699
makes reasonable sense right we're just

838
00:45:14,280 --> 00:45:21,180
looking at how big the the voxel itself

839
00:45:17,699 --> 00:45:25,199
is going to be and when we're creating

840
00:45:21,179 --> 00:45:26,759
the rectangle itself we're just you know

841
00:45:25,199 --> 00:45:28,859
we're just producing exactly what you

842
00:45:26,760 --> 00:45:31,380
would expect and then we're drawing it

843
00:45:28,860 --> 00:45:33,420
here right when we set the lighting

844
00:45:31,380 --> 00:45:34,500
bounds we're just saying the region in

845
00:45:33,420 --> 00:45:38,630
which the lighting would occur that

846
00:45:34,500 --> 00:45:41,059
doesn't really make much sense anyway

847
00:45:38,630 --> 00:45:43,559
[Music]

848
00:45:41,059 --> 00:45:45,799
and I don't see anything weird going on

849
00:45:43,559 --> 00:45:45,799
there

850
00:45:55,230 --> 00:45:59,500
so yeah that's totally I mean I again I

851
00:45:58,090 --> 00:46:06,370
really don't see what's what's

852
00:45:59,500 --> 00:46:07,360
particularly weird about that I don't

853
00:46:06,369 --> 00:46:07,900
really see what's particularly worried

854
00:46:07,360 --> 00:46:11,410
about that

855
00:46:07,900 --> 00:46:14,170
so again just trying to get clues about

856
00:46:11,409 --> 00:46:19,329
even where to look for what we have for

857
00:46:14,170 --> 00:46:22,480
bugs here if I pull out and we look at

858
00:46:19,329 --> 00:46:27,900
what happens when I for example jump up

859
00:46:22,480 --> 00:46:33,789
there you can see too that it definitely

860
00:46:27,900 --> 00:46:35,829
it basically like counter it counter

861
00:46:33,789 --> 00:46:40,750
moves the direction you would think it

862
00:46:35,829 --> 00:46:42,549
should move right the center of the

863
00:46:40,750 --> 00:46:46,780
lighting region should be around this

864
00:46:42,550 --> 00:46:51,210
and it actually goes the opposite way it

865
00:46:46,780 --> 00:46:53,590
would need to go to get there right and

866
00:46:51,210 --> 00:46:57,519
if you look at what's happening in here

867
00:46:53,590 --> 00:47:00,430
for chasing the chunk origin I don't see

868
00:46:57,519 --> 00:47:02,909
why that would actually be the case you

869
00:47:00,429 --> 00:47:02,909
know what I mean

870
00:47:13,380 --> 00:47:22,480
in here for the voxel cells perch uncle

871
00:47:18,900 --> 00:47:26,050
we're just producing how many voxel

872
00:47:22,480 --> 00:47:28,960
cells you move for every world chunk in

873
00:47:26,050 --> 00:47:32,080
here we're saying when the origin moved

874
00:47:28,960 --> 00:47:34,090
it moved from here to here so this is

875
00:47:32,079 --> 00:47:39,849
the number of chunks you would go if you

876
00:47:34,090 --> 00:47:42,519
were walking in that direction now

877
00:47:39,849 --> 00:47:45,639
granted that kind of seems backwards to

878
00:47:42,519 --> 00:47:47,679
me like I said so that's if I was

879
00:47:45,639 --> 00:47:49,179
standing on one and I wanted to walk to

880
00:47:47,679 --> 00:47:52,029
the next one that's where I would go

881
00:47:49,179 --> 00:47:54,789
right and that seems backwards because

882
00:47:52,030 --> 00:47:57,430
actually when you're going to shift for

883
00:47:54,789 --> 00:48:01,500
the origin you want to invert that but I

884
00:47:57,429 --> 00:48:04,269
guess because this was inverted you know

885
00:48:01,500 --> 00:48:07,449
because this is getting inverted that's

886
00:48:04,269 --> 00:48:09,699
what's happening I guess now since I

887
00:48:07,449 --> 00:48:13,029
don't actually know that I want to again

888
00:48:09,699 --> 00:48:15,339
just investigation wise I want to I want

889
00:48:13,030 --> 00:48:19,420
to see what happens if we do an opposite

890
00:48:15,340 --> 00:48:21,550
movement and then I kind of want to walk

891
00:48:19,420 --> 00:48:23,769
this work this out on paper I'll do it

892
00:48:21,550 --> 00:48:26,910
up here we should probably add an

893
00:48:23,769 --> 00:48:26,909
operator negative there but

894
00:48:34,840 --> 00:48:39,190
and again this is just for me to try and

895
00:48:37,449 --> 00:48:41,859
figure out like are we doing this

896
00:48:39,190 --> 00:48:45,039
backwards or aren't we and then I want

897
00:48:41,860 --> 00:48:47,370
to write it out to figure out like what

898
00:48:45,039 --> 00:48:47,369
the heck

899
00:48:56,530 --> 00:49:01,040
and again it's just yeah I'm so confused

900
00:48:59,570 --> 00:49:04,039
I literally have no idea what the heck's

901
00:49:01,039 --> 00:49:06,019
going on I'm I'm totally lost so let's

902
00:49:04,039 --> 00:49:08,389
go ahead and start from square one and

903
00:49:06,019 --> 00:49:12,280
see if we can understand what the heck

904
00:49:08,389 --> 00:49:12,279
is happening so

905
00:49:26,900 --> 00:49:38,430
here's the 588 here's the de 588

906
00:49:30,630 --> 00:49:49,380
blackboard and like this is just like

907
00:49:38,429 --> 00:49:51,329
what is happening so again this is why

908
00:49:49,380 --> 00:49:53,130
origin centers are so difficult to do

909
00:49:51,329 --> 00:49:56,429
you can see why everyone just wants to

910
00:49:53,130 --> 00:49:57,690
throw everything into doubles but I

911
00:49:56,429 --> 00:49:58,679
actually find it's pretty good to work

912
00:49:57,690 --> 00:49:59,820
these through because these are the

913
00:49:58,679 --> 00:50:03,389
kinds of problems you should get

914
00:49:59,820 --> 00:50:06,300
mentally flexible enough to handle plus

915
00:50:03,389 --> 00:50:09,629
doubles are slow anyway so if we

916
00:50:06,300 --> 00:50:12,840
actually look at what's going on here

917
00:50:09,630 --> 00:50:20,220
here's what we have we know that we have

918
00:50:12,840 --> 00:50:23,309
a simulation center and we know that

919
00:50:20,219 --> 00:50:25,469
around this simulation center we have a

920
00:50:23,309 --> 00:50:28,949
world that's been constructed somehow

921
00:50:25,469 --> 00:50:30,809
right so you know we've got various

922
00:50:28,949 --> 00:50:34,399
pieces of the world that are out here

923
00:50:30,809 --> 00:50:37,409
and you know maybe we have a chunk and

924
00:50:34,400 --> 00:50:40,110
the chunk has some offset from the

925
00:50:37,409 --> 00:50:42,359
simulation center and inside that chunk

926
00:50:40,110 --> 00:50:44,610
there's you know some floor tiles or who

927
00:50:42,360 --> 00:50:47,340
knows what's in there and one of these

928
00:50:44,610 --> 00:50:50,250
floor tiles has lighting you know all of

929
00:50:47,340 --> 00:50:54,420
them do and that lighting is lined up

930
00:50:50,250 --> 00:51:00,150
with our voxel so our voxel is somewhere

931
00:50:54,420 --> 00:51:02,490
in the world right and its location is

932
00:51:00,150 --> 00:51:05,510
also based on the simulation center it's

933
00:51:02,489 --> 00:51:06,719
some offset from the simulation center

934
00:51:05,510 --> 00:51:09,690
okay

935
00:51:06,719 --> 00:51:12,389
so now what's gonna happen is the

936
00:51:09,690 --> 00:51:15,570
simulation center itself is going to

937
00:51:12,389 --> 00:51:18,119
move right it's going to move somewhere

938
00:51:15,570 --> 00:51:23,460
so like it moves you know off to some

939
00:51:18,119 --> 00:51:26,579
location right and what's gonna happen

940
00:51:23,460 --> 00:51:29,780
is the simulation center moves the

941
00:51:26,579 --> 00:51:32,460
offset of the chunk is going to change

942
00:51:29,780 --> 00:51:35,160
relative to the simulation center in

943
00:51:32,460 --> 00:51:38,220
world space right because this this

944
00:51:35,159 --> 00:51:39,809
offset and this offset are different so

945
00:51:38,219 --> 00:51:42,179
you know we want

946
00:51:39,809 --> 00:51:44,659
to appear to be like in the same place

947
00:51:42,179 --> 00:51:44,659
or something

948
00:51:46,219 --> 00:51:53,069
so the actual practical offset for

949
00:51:51,000 --> 00:51:55,199
rendering is different because in one

950
00:51:53,070 --> 00:51:57,269
case you know let's say this was s0 and

951
00:51:55,199 --> 00:52:01,739
this is s1 and this is the chunk

952
00:51:57,269 --> 00:52:04,079
position so chunk zeroes position on in

953
00:52:01,739 --> 00:52:10,559
the actual like rendering pipeline is

954
00:52:04,079 --> 00:52:16,380
going to be s 0 plus or I should say c0

955
00:52:10,559 --> 00:52:20,009
prime is s 0 plus C 0 and C 1 prime is s

956
00:52:16,380 --> 00:52:25,110
1 plus C 1 right there are like totally

957
00:52:20,010 --> 00:52:26,730
different equations here because as you

958
00:52:25,110 --> 00:52:28,530
move the simulation center the offset is

959
00:52:26,730 --> 00:52:29,639
going to change completely to render

960
00:52:28,530 --> 00:52:31,050
this thing whatever you're rendering

961
00:52:29,639 --> 00:52:34,650
even if the camera position is the same

962
00:52:31,050 --> 00:52:36,600
in terms of what you see you've changed

963
00:52:34,650 --> 00:52:39,769
the coordinates out from under yourself

964
00:52:36,599 --> 00:52:39,769
right so they're completely different

965
00:52:40,280 --> 00:52:50,790
alright so if we want the voxel right to

966
00:52:47,969 --> 00:52:54,929
be positioned in the same place as it

967
00:52:50,789 --> 00:52:56,759
used to be positioned when the camera

968
00:52:54,929 --> 00:52:58,980
changes or I should say when the

969
00:52:56,760 --> 00:53:02,100
simulation center changes we previously

970
00:52:58,980 --> 00:53:07,380
had something like well you know the

971
00:53:02,099 --> 00:53:12,839
voxel and I guess we should say

972
00:53:07,380 --> 00:53:15,660
something else here so this is actually

973
00:53:12,840 --> 00:53:18,809
constructing the answer in an absolute

974
00:53:15,659 --> 00:53:22,949
space what we actually render is just

975
00:53:18,809 --> 00:53:24,360
these right so this is the basis and the

976
00:53:22,949 --> 00:53:29,419
basis goes away because it's just

977
00:53:24,360 --> 00:53:29,420
assumed to be 0 you know I'm saying

978
00:53:30,599 --> 00:53:37,389
this is so hard to even write down

979
00:53:32,949 --> 00:53:40,329
what's going on all right so if we now

980
00:53:37,389 --> 00:53:43,509
want this to slide properly right and we

981
00:53:40,329 --> 00:53:46,319
want this to align itself properly we

982
00:53:43,510 --> 00:53:48,820
want the voxel to align itself properly

983
00:53:46,320 --> 00:53:50,440
then when we change one of these we're

984
00:53:48,820 --> 00:53:52,630
effectively asking the same question

985
00:53:50,440 --> 00:53:55,659
we're basically saying like okay we have

986
00:53:52,630 --> 00:53:58,480
a V zero Prime somewhere and that was

987
00:53:55,659 --> 00:54:00,339
the s zero plus the V zero and now we

988
00:53:58,480 --> 00:54:02,740
want to produce a new one and that's

989
00:54:00,340 --> 00:54:05,110
going to be like some new offset that

990
00:54:02,739 --> 00:54:14,559
gets us to the same apparent visual

991
00:54:05,110 --> 00:54:18,880
location right in in both cases and so

992
00:54:14,559 --> 00:54:20,829
if we want like if we want these two

993
00:54:18,880 --> 00:54:22,840
things to be the same at the end of the

994
00:54:20,829 --> 00:54:26,409
day we would have to solve this right

995
00:54:22,840 --> 00:54:30,100
we'd say we want these two things to be

996
00:54:26,409 --> 00:54:33,309
equal and so solving for like V one it

997
00:54:30,099 --> 00:54:39,159
would have to be like s 0 minus s 1 plus

998
00:54:33,309 --> 00:54:42,429
V 0 equals V 1 right so the change in

999
00:54:39,159 --> 00:54:46,739
coordinates here plus the old offset is

1000
00:54:42,429 --> 00:54:46,739
what we would now have as a new offset

1001
00:54:48,630 --> 00:55:01,480
it would seem and that's like where the

1002
00:54:57,340 --> 00:55:06,640
voxel would end up that's where the

1003
00:55:01,480 --> 00:55:07,360
voxels you know Corner would be and so

1004
00:55:06,639 --> 00:55:09,960
what we're trying to do here

1005
00:55:07,360 --> 00:55:12,309
fundamentally is we're trying to just

1006
00:55:09,960 --> 00:55:16,030
account for this space has changed right

1007
00:55:12,309 --> 00:55:19,210
and furthermore like when I look at this

1008
00:55:16,030 --> 00:55:22,309
when we do this basis change

1009
00:55:19,210 --> 00:55:22,309
[Music]

1010
00:55:24,679 --> 00:55:28,608
I mean even just thinking about this it

1011
00:55:27,380 --> 00:55:32,920
doesn't really make much sense the way

1012
00:55:28,608 --> 00:55:36,380
I'm doing this even now so hmm

1013
00:55:32,920 --> 00:55:37,099
let's take this one step further now I

1014
00:55:36,380 --> 00:55:41,630
think about it

1015
00:55:37,099 --> 00:55:45,470
so this origin P here is just like where

1016
00:55:41,630 --> 00:55:49,250
I want to build the thing around so when

1017
00:55:45,469 --> 00:55:59,358
we pass in this value this simulation

1018
00:55:49,250 --> 00:56:01,760
center value what I don't totally

1019
00:55:59,358 --> 00:56:05,538
understand is why can't we get we need

1020
00:56:01,760 --> 00:56:11,569
this this hot voxel rect to start being

1021
00:56:05,539 --> 00:56:14,210
centered around the actual origin here

1022
00:56:11,568 --> 00:56:20,798
so this origin P that comes in this

1023
00:56:14,210 --> 00:56:25,159
origin P offset right minus 305 hot dim

1024
00:56:20,798 --> 00:56:27,650
that we should be able to focus on that

1025
00:56:25,159 --> 00:56:30,108
and that should always track whatever

1026
00:56:27,650 --> 00:56:35,150
we're drawing out here right this

1027
00:56:30,108 --> 00:56:36,710
lighting center bit right because the

1028
00:56:35,150 --> 00:56:44,720
lighting center if we take the

1029
00:56:36,710 --> 00:56:47,539
simulation center and we get whatever

1030
00:56:44,719 --> 00:56:51,288
the world camera wrecks location should

1031
00:56:47,539 --> 00:56:53,630
be for its its center and we base

1032
00:56:51,289 --> 00:56:57,349
something around that that should always

1033
00:56:53,630 --> 00:56:59,630
be drawing in the correct place so what

1034
00:56:57,349 --> 00:57:01,760
that's the first thing we need to figure

1035
00:56:59,630 --> 00:57:03,710
out what has gone wrong because

1036
00:57:01,760 --> 00:57:08,569
something has definitely gone wrong here

1037
00:57:03,710 --> 00:57:12,798
right this value when we look at

1038
00:57:08,568 --> 00:57:17,170
whatever the render offset is that

1039
00:57:12,798 --> 00:57:17,170
that's what's screwing us up here right

1040
00:57:22,599 --> 00:57:31,509
so yeah let's figure out what's going on

1041
00:57:25,090 --> 00:57:33,769
so if we always did if we always do this

1042
00:57:31,510 --> 00:57:36,470
where we're just passing the simulation

1043
00:57:33,769 --> 00:57:41,929
center what we would expect to see is we

1044
00:57:36,469 --> 00:57:45,049
would expect to see the lighting region

1045
00:57:41,929 --> 00:57:47,119
which is that to be centered around

1046
00:57:45,050 --> 00:57:51,620
wherever the simulation center is and

1047
00:57:47,119 --> 00:57:55,279
let's draw that - so where is that that

1048
00:57:51,619 --> 00:58:01,460
thing sim bounds right so I'm gonna push

1049
00:57:55,280 --> 00:58:03,970
the sim bounds on here as well and just

1050
00:58:01,460 --> 00:58:03,970
look at them

1051
00:58:16,530 --> 00:58:23,410
all right so what we would expect to see

1052
00:58:20,320 --> 00:58:25,510
now and I don't actually know if we will

1053
00:58:23,409 --> 00:58:28,539
see it okay so we don't okay so

1054
00:58:25,510 --> 00:58:31,330
basically we're doing this wrong even

1055
00:58:28,539 --> 00:58:35,409
before we start so there's the

1056
00:58:31,329 --> 00:58:38,639
simulation bounds right and here's the

1057
00:58:35,409 --> 00:58:40,869
lighting bounds it's just totally wrong

1058
00:58:38,639 --> 00:58:42,789
because this should always be centered

1059
00:58:40,869 --> 00:58:45,369
the lighting band should always always

1060
00:58:42,789 --> 00:58:49,239
be centered around the simulation center

1061
00:58:45,369 --> 00:58:51,960
it's not so somebody needs to explain to

1062
00:58:49,239 --> 00:58:59,979
me how the heck that's happening right

1063
00:58:51,960 --> 00:59:02,380
so so our problem extends well beyond

1064
00:58:59,980 --> 00:59:05,860
what I thought it did we're just like

1065
00:59:02,380 --> 00:59:07,570
we're often no-man's land here so when

1066
00:59:05,860 --> 00:59:09,789
we do begin learning computation and we

1067
00:59:07,570 --> 00:59:16,500
push the box that we push the hot voxel

1068
00:59:09,789 --> 00:59:21,519
rectangle you know out here so this is

1069
00:59:16,500 --> 00:59:23,920
somehow garbage right and I I don't

1070
00:59:21,519 --> 00:59:27,579
understand why I literally have no idea

1071
00:59:23,920 --> 00:59:29,530
why this is wrong because in theory that

1072
00:59:27,579 --> 00:59:31,690
should be centered about the same

1073
00:59:29,530 --> 00:59:35,080
location that the simulation center is

1074
00:59:31,690 --> 00:59:39,970
because it should just be drawn at the

1075
00:59:35,079 --> 00:59:40,750
same location right so how is this

1076
00:59:39,969 --> 00:59:42,969
possible

1077
00:59:40,750 --> 00:59:45,360
what what is happening it doesn't make

1078
00:59:42,969 --> 00:59:45,359
any sense

1079
00:59:54,119 --> 01:00:01,450
so in this case it's interesting our rec

1080
00:59:58,630 --> 01:00:04,599
center Tim this is actually not using

1081
01:00:01,449 --> 01:00:08,978
the offset of the sim bounds is that

1082
01:00:04,599 --> 01:00:14,219
actually wrong for starters because in

1083
01:00:08,978 --> 01:00:18,239
theory the sim bounds like yeah you know

1084
01:00:14,219 --> 01:00:22,869
in theory the sim bounds would take the

1085
01:00:18,239 --> 01:00:25,088
similar occasion offset right it's not

1086
01:00:22,869 --> 01:00:29,170
ever supposed to be at least I don't

1087
01:00:25,088 --> 01:00:32,380
think it's ever supposed to be anything

1088
01:00:29,170 --> 01:00:42,369
other than zero but we should verify

1089
01:00:32,380 --> 01:00:45,838
that at the very least right oh well to

1090
01:00:42,369 --> 01:00:51,519
be fair what is the why is it camera dot

1091
01:00:45,838 --> 01:00:53,528
simulation center so yeah maybe we've

1092
01:00:51,518 --> 01:00:56,409
just got too many variables in here

1093
01:00:53,528 --> 01:00:58,900
meaning different things because when we

1094
01:00:56,409 --> 01:01:01,478
come through this code here we create a

1095
01:00:58,900 --> 01:01:05,229
simulation center that we actually use

1096
01:01:01,478 --> 01:01:09,058
for the world sim what are we passing to

1097
01:01:05,228 --> 01:01:09,058
that right

1098
01:01:25,869 --> 01:01:35,920
so here's begin sim and it is passing

1099
01:01:29,298 --> 01:01:40,728
world mode camera simulation center so I

1100
01:01:35,920 --> 01:01:43,219
mean that's the right thing right I mean

1101
01:01:40,728 --> 01:01:52,518
if you actually look at what's happening

1102
01:01:43,219 --> 01:01:54,170
so we just double check but that should

1103
01:01:52,518 --> 01:01:59,208
be zero anyway so I don't think that

1104
01:01:54,170 --> 01:02:04,940
should have done anything yeah and it

1105
01:01:59,208 --> 01:02:10,969
didn't so if this wrecked centre dim is

1106
01:02:04,940 --> 01:02:13,759
if they're centered around here we know

1107
01:02:10,969 --> 01:02:16,130
that we're passing that literal value

1108
01:02:13,759 --> 01:02:20,088
like that is literally the value that is

1109
01:02:16,130 --> 01:02:22,039
getting passed down exactly right

1110
01:02:20,088 --> 01:02:25,038
is there an offset applied to this

1111
01:02:22,039 --> 01:02:27,650
render group perhaps that we're not

1112
01:02:25,039 --> 01:02:29,839
understanding I mean I guess that could

1113
01:02:27,650 --> 01:02:31,539
be but if there was it would be the same

1114
01:02:29,838 --> 01:02:36,380
it would be applied here as well

1115
01:02:31,539 --> 01:02:40,430
right so that doesn't really make a

1116
01:02:36,380 --> 01:02:42,979
whole lot of sense either so if we then

1117
01:02:40,429 --> 01:02:46,098
move and say all right here's the sim

1118
01:02:42,978 --> 01:02:50,448
bounce we know the sim Bonds is just a

1119
01:02:46,099 --> 01:02:57,940
rec centre dim where it does you know it

1120
01:02:50,449 --> 01:02:57,940
picks the center this should be zero

1121
01:03:03,190 --> 01:03:08,389
huh I mean I got nothing

1122
01:03:06,079 --> 01:03:09,889
those should be exactly the same the

1123
01:03:08,389 --> 01:03:13,879
Centers of these two rectangles should

1124
01:03:09,889 --> 01:03:15,980
be exactly the same right so let's try

1125
01:03:13,880 --> 01:03:17,630
one other thing just to see if we're

1126
01:03:15,980 --> 01:03:19,159
just off in this like I mean I don't

1127
01:03:17,630 --> 01:03:19,670
know what's good no idea what's going on

1128
01:03:19,159 --> 01:03:20,868
right now

1129
01:03:19,670 --> 01:03:24,470
might as well be someone else's code

1130
01:03:20,869 --> 01:03:29,180
base at this point so let's just try a

1131
01:03:24,469 --> 01:03:32,509
rec center dim em and we'll say all

1132
01:03:29,179 --> 01:03:36,529
right the rec center dam is just going

1133
01:03:32,510 --> 01:03:38,600
to be the negative P or so the center

1134
01:03:36,530 --> 01:03:40,210
point we're doing here

1135
01:03:38,599 --> 01:03:42,559
and then we just are gonna make a

1136
01:03:40,210 --> 01:03:44,269
something that's just like one by one by

1137
01:03:42,559 --> 01:03:47,750
one so we're just drawing like a little

1138
01:03:44,269 --> 01:03:55,280
cube right at the center that we think

1139
01:03:47,750 --> 01:03:58,000
we are I'm gonna have to make it a

1140
01:03:55,280 --> 01:03:58,000
little bigger I guess

1141
01:04:07,190 --> 01:04:18,050
okay so there's my center cube

1142
01:04:13,849 --> 01:04:20,239
it's totally garbage right it is not

1143
01:04:18,050 --> 01:04:24,500
even remotely centered around the

1144
01:04:20,239 --> 01:04:26,509
simulation center even a little bit so

1145
01:04:24,500 --> 01:04:29,300
now I'm gonna take the exact same piece

1146
01:04:26,510 --> 01:04:32,060
of code right like literally the exact

1147
01:04:29,300 --> 01:04:35,810
same piece of code that's the hot voxel

1148
01:04:32,059 --> 01:04:37,159
rector right I'm going to take the exact

1149
01:04:35,809 --> 01:04:49,750
same piece of code and I'm gonna move it

1150
01:04:37,159 --> 01:04:59,480
out here so and do push volume outline

1151
01:04:49,750 --> 01:05:03,230
I'm gonna pass the negative simulation

1152
01:04:59,480 --> 01:05:10,340
center and yeah I'm just gonna literally

1153
01:05:03,230 --> 01:05:12,909
call that code and we're gonna see where

1154
01:05:10,340 --> 01:05:12,910
that ends up

1155
01:05:23,429 --> 01:05:39,129
all right so that is actually in the

1156
01:05:29,949 --> 01:05:40,719
wrong place as well yeah yeah okay so

1157
01:05:39,130 --> 01:05:44,108
basically the problem is the this

1158
01:05:40,719 --> 01:05:47,980
negation I think that's all there is to

1159
01:05:44,108 --> 01:05:50,559
it this is supposed to be putting you at

1160
01:05:47,980 --> 01:05:54,099
the correct offset from the camera

1161
01:05:50,559 --> 01:05:57,578
we're negating it for no real reason I

1162
01:05:54,099 --> 01:06:00,550
guess we just threw a negative in there

1163
01:05:57,579 --> 01:06:07,420
I don't know why so if we draw the

1164
01:06:00,550 --> 01:06:08,019
symbols and then we draw I don't need

1165
01:06:07,420 --> 01:06:10,930
this anymore

1166
01:06:08,019 --> 01:06:13,838
we draw the rec center gym at this

1167
01:06:10,929 --> 01:06:16,449
offset which is actually putting us into

1168
01:06:13,838 --> 01:06:19,078
the correct location that should draw it

1169
01:06:16,449 --> 01:06:28,960
in the center would be my argument in

1170
01:06:19,079 --> 01:06:32,318
theory assuming I actually draw it okay

1171
01:06:28,960 --> 01:06:34,659
at least now we're back to sanity so

1172
01:06:32,318 --> 01:06:37,449
that's fine so that means the Vox mid

1173
01:06:34,659 --> 01:06:41,379
corner hot was always incorrect this was

1174
01:06:37,449 --> 01:06:43,509
not supposed to be there which I don't

1175
01:06:41,380 --> 01:06:45,970
think really necessarily should have

1176
01:06:43,510 --> 01:06:48,160
made a difference but the weird part is

1177
01:06:45,969 --> 01:06:49,838
I guess I hadn't been considering the

1178
01:06:48,159 --> 01:06:57,429
fact that it would actually contain some

1179
01:06:49,838 --> 01:07:00,299
content and I guess it does right what

1180
01:06:57,429 --> 01:07:04,449
I'm not sure about is that we actually

1181
01:07:00,300 --> 01:07:06,730
want to use that though because if we

1182
01:07:04,449 --> 01:07:08,649
use that that's sliding continuously and

1183
01:07:06,730 --> 01:07:11,409
we'll be wrong but I'm gonna put that in

1184
01:07:08,650 --> 01:07:13,780
for a second anyway right so if we get

1185
01:07:11,409 --> 01:07:15,670
rid of this and change this to not

1186
01:07:13,780 --> 01:07:17,470
having the negative I'm going to go

1187
01:07:15,670 --> 01:07:21,400
ahead and draw all our rectangles again

1188
01:07:17,469 --> 01:07:24,480
I think we have found the rogue negative

1189
01:07:21,400 --> 01:07:24,480
that was causing us problems

1190
01:07:25,838 --> 01:07:33,969
okay so now when I move around at least

1191
01:07:30,938 --> 01:07:37,298
in theory we should have things more

1192
01:07:33,969 --> 01:07:40,630
centered at the moment and let's see if

1193
01:07:37,298 --> 01:07:43,298
we actually do so yes there's the

1194
01:07:40,630 --> 01:07:47,199
lighting voxel there's the sim region

1195
01:07:43,298 --> 01:07:49,748
and they are basically the same now I'm

1196
01:07:47,199 --> 01:07:53,318
noticing that actually the sim region is

1197
01:07:49,748 --> 01:07:54,488
narrower here then the lighting voxel so

1198
01:07:53,318 --> 01:07:56,798
I guess that doesn't really make any

1199
01:07:54,489 --> 01:08:02,228
sense and we should probably trim that

1200
01:07:56,798 --> 01:08:05,318
down I don't really know why or how

1201
01:08:02,228 --> 01:08:07,118
that's happening but you know we maybe

1202
01:08:05,318 --> 01:08:10,058
that we should actually widen the same

1203
01:08:07,119 --> 01:08:12,579
region I'm not sure doesn't really

1204
01:08:10,059 --> 01:08:16,088
matter anyway if you take a look at

1205
01:08:12,579 --> 01:08:18,489
what's happening here as I'm moving

1206
01:08:16,088 --> 01:08:20,649
around those two are now nicely in

1207
01:08:18,488 --> 01:08:24,368
lockstep so thank God that was just a

1208
01:08:20,649 --> 01:08:28,118
momentary like you know errant negative

1209
01:08:24,368 --> 01:08:32,170
ruining our day so now if we actually

1210
01:08:28,118 --> 01:08:37,568
want to figure out where the Vox min

1211
01:08:32,170 --> 01:08:47,380
corner is going to be we should be okay

1212
01:08:37,569 --> 01:08:50,529
to now pass down a moving value right so

1213
01:08:47,380 --> 01:08:52,659
now as we move I think we should allow

1214
01:08:50,529 --> 01:08:54,579
be able to allow this to slide yeah and

1215
01:08:52,658 --> 01:08:57,908
we can right so you see how the

1216
01:08:54,578 --> 01:09:02,639
Lightning voxel is now sliding along it

1217
01:08:57,908 --> 01:09:05,888
seems like it is right and that's good

1218
01:09:02,639 --> 01:09:07,770
however it's weird to you that we get

1219
01:09:05,889 --> 01:09:10,539
that weird like sampling error but

1220
01:09:07,770 --> 01:09:14,819
however you'll notice we also do still

1221
01:09:10,539 --> 01:09:14,819
have a weirdness here which is that

1222
01:09:20,389 --> 01:09:24,409
which is that our lighting voxel is

1223
01:09:22,250 --> 01:09:26,359
still not centered the way I would think

1224
01:09:24,408 --> 01:09:30,138
it should be right it's not centered

1225
01:09:26,359 --> 01:09:32,000
around this so what's happening so let's

1226
01:09:30,139 --> 01:09:36,350
narrow down to that now because that's

1227
01:09:32,000 --> 01:09:38,329
the next part of this problem so now if

1228
01:09:36,350 --> 01:09:43,000
we say look we want to Center ourselves

1229
01:09:38,329 --> 01:09:46,039
around the world camera rect instead

1230
01:09:43,000 --> 01:09:48,500
this should allow us to do that right by

1231
01:09:46,039 --> 01:10:01,850
figuring out where that actual center is

1232
01:09:48,500 --> 01:10:05,118
I would think and I guess the problem is

1233
01:10:01,850 --> 01:10:07,070
in order to draw this we need to know

1234
01:10:05,118 --> 01:10:15,500
what the offset is from the actual

1235
01:10:07,069 --> 01:10:19,519
simulation center right so I guess this

1236
01:10:15,500 --> 01:10:22,189
is mostly a drawing offset problem so if

1237
01:10:19,520 --> 01:10:25,580
we then say here's the lighting bounds

1238
01:10:22,189 --> 01:10:29,649
like this what we want to now do is this

1239
01:10:25,579 --> 01:10:33,710
needs to kind of be drawn out here right

1240
01:10:29,649 --> 01:10:35,448
and it needs to be offset it needs to it

1241
01:10:33,710 --> 01:10:38,868
needs to be subtracted so we know where

1242
01:10:35,448 --> 01:10:42,769
it actually is right so the hot voxel

1243
01:10:38,868 --> 01:10:44,029
rectangle in this case now yeah well I

1244
01:10:42,770 --> 01:10:46,070
guess we get still drawn in here because

1245
01:10:44,029 --> 01:10:48,590
I guess this is where it's being set so

1246
01:10:46,069 --> 01:10:51,109
I guess we do need one additional piece

1247
01:10:48,590 --> 01:10:53,029
of information which is like the sim

1248
01:10:51,109 --> 01:11:00,139
origin P which we were getting past

1249
01:10:53,029 --> 01:11:02,029
before right so this is the thing that

1250
01:11:00,139 --> 01:11:05,090
determines what we're actually storing

1251
01:11:02,029 --> 01:11:07,609
as we move around but then where this

1252
01:11:05,090 --> 01:11:10,550
actually is in world space if we want to

1253
01:11:07,609 --> 01:11:13,189
place it in world space actually has to

1254
01:11:10,550 --> 01:11:17,469
be a subtract right

1255
01:11:13,189 --> 01:11:17,469
so it actually has to be this

1256
01:11:21,689 --> 01:11:26,889
to place us relative to the world space

1257
01:11:24,789 --> 01:11:29,079
in order to draw the thing and send it

1258
01:11:26,890 --> 01:11:31,240
to the graphics card so we just didn't

1259
01:11:29,079 --> 01:11:34,239
have actually the information we needed

1260
01:11:31,239 --> 01:11:37,210
to begin with I guess that was just like

1261
01:11:34,239 --> 01:11:38,739
yeah not thinking it through so we need

1262
01:11:37,210 --> 01:11:40,869
to pass down both of these the sim

1263
01:11:38,739 --> 01:11:42,969
origin P and like where were actually

1264
01:11:40,869 --> 01:11:44,559
want the lighting to be solved and then

1265
01:11:42,970 --> 01:11:50,829
we can do the rest of the work that we

1266
01:11:44,560 --> 01:11:54,370
needed to do I don't actually remember

1267
01:11:50,829 --> 01:12:02,079
what this is called ah so this requires

1268
01:11:54,369 --> 01:12:07,689
a world but we have that doesn't it call

1269
01:12:02,079 --> 01:12:12,609
subtract I guess this is not exposed at

1270
01:12:07,689 --> 01:12:16,569
the moment no user defined conversion

1271
01:12:12,609 --> 01:12:23,289
available sorry about that I will pass

1272
01:12:16,569 --> 01:12:25,960
addresses alright so now let's get this

1273
01:12:23,289 --> 01:12:35,159
thing drawing in the right place which

1274
01:12:25,960 --> 01:12:35,159
hopefully it will looks correct

1275
01:12:38,500 --> 01:12:44,500
so that looks correct to me now

1276
01:12:42,279 --> 01:12:47,079
again the copying looks totally messed

1277
01:12:44,500 --> 01:12:49,060
up but at least now the voxel is moving

1278
01:12:47,079 --> 01:12:52,149
the way that I would expect the voxel to

1279
01:12:49,060 --> 01:12:54,070
be moving right so you can see the

1280
01:12:52,149 --> 01:12:57,639
camera bounds in the center there and

1281
01:12:54,069 --> 01:12:59,948
like the voxel is locked to it so that's

1282
01:12:57,640 --> 01:13:02,500
good so now we just have to figure out

1283
01:12:59,948 --> 01:13:04,389
how to copy these properly and then also

1284
01:13:02,500 --> 01:13:07,090
why we're getting the weird light

1285
01:13:04,390 --> 01:13:08,500
explosion that doesn't really make a

1286
01:13:07,090 --> 01:13:12,310
whole lot of sense to me so something's

1287
01:13:08,500 --> 01:13:15,130
busted there if we now move throughout

1288
01:13:12,310 --> 01:13:16,120
the world though other than that like

1289
01:13:15,130 --> 01:13:18,310
sort of bug

1290
01:13:16,119 --> 01:13:20,710
it seemed which is the copying bug it

1291
01:13:18,310 --> 01:13:22,989
seems like at least we're seeing the

1292
01:13:20,710 --> 01:13:24,369
right stuff I would point out that we

1293
01:13:22,988 --> 01:13:26,738
still have some kind of weirdness going

1294
01:13:24,369 --> 01:13:28,630
on with a simulation region like the

1295
01:13:26,738 --> 01:13:31,509
fact that I don't see like when you move

1296
01:13:28,630 --> 01:13:33,699
back here like the fact that the

1297
01:13:31,510 --> 01:13:36,640
simulation region doesn't slide forwards

1298
01:13:33,698 --> 01:13:39,658
as fast as or maybe the simulations just

1299
01:13:36,640 --> 01:13:42,610
isn't large as large as it should be you

1300
01:13:39,658 --> 01:13:44,469
know what I mean so it feels like the

1301
01:13:42,609 --> 01:13:48,189
simulation engine region needs to be

1302
01:13:44,469 --> 01:13:49,989
expanded a little bit like one more room

1303
01:13:48,189 --> 01:13:54,119
in that direction if we take a look at

1304
01:13:49,988 --> 01:13:54,119
the where we do this in bounds

1305
01:14:01,220 --> 01:14:14,000
in here it feels like this or something

1306
01:14:07,239 --> 01:14:17,750
is not quite right and I don't really

1307
01:14:14,000 --> 01:14:20,050
know the best way to fix that but maybe

1308
01:14:17,750 --> 01:14:20,050
this

1309
01:14:30,149 --> 01:14:38,489
so now the symbols are expanded a little

1310
01:14:31,920 --> 01:14:40,859
bit there and I just wanted to do that

1311
01:14:38,489 --> 01:14:43,019
to make sure that like we have enough of

1312
01:14:40,859 --> 01:14:48,289
the simulation region always loaded in

1313
01:14:43,020 --> 01:14:48,290
around the player which seems good right

1314
01:14:52,010 --> 01:14:55,590
so there we go

1315
01:14:53,430 --> 01:14:57,570
all right so now we have the question of

1316
01:14:55,590 --> 01:15:00,860
why are we getting this weird like copy

1317
01:14:57,569 --> 01:15:04,880
error and it seems like at the moment

1318
01:15:00,859 --> 01:15:11,279
the primary problem again is the like

1319
01:15:04,880 --> 01:15:12,480
the the copy seems to be mostly having

1320
01:15:11,279 --> 01:15:14,750
well actually seems like it's always

1321
01:15:12,479 --> 01:15:14,750
wrong

1322
01:15:26,130 --> 01:15:36,449
it seems like it's not copying for this

1323
01:15:30,250 --> 01:15:36,449
camera slide at all right all right

1324
01:15:36,460 --> 01:15:43,960
so anyway let's go ahead and finish up

1325
01:15:40,270 --> 01:15:46,870
what we're doing here so this camera

1326
01:15:43,960 --> 01:15:49,180
slide now has to be actually prevented

1327
01:15:46,869 --> 01:15:52,289
from doing a full slide meaning this

1328
01:15:49,180 --> 01:15:55,360
subtract has to actually only happen on

1329
01:15:52,289 --> 01:15:57,579
it has to be zeroed out to the chunk

1330
01:15:55,359 --> 01:15:59,559
boundary now that doesn't seem

1331
01:15:57,579 --> 01:16:02,649
particularly hard to do because in

1332
01:15:59,560 --> 01:16:05,470
theory the origin P here now can just be

1333
01:16:02,649 --> 01:16:08,920
truncated down so for example we could

1334
01:16:05,470 --> 01:16:10,590
just say like the origin P offset is 0

1335
01:16:08,920 --> 01:16:15,180
or something right

1336
01:16:10,590 --> 01:16:23,590
and I think that would lock this to

1337
01:16:15,180 --> 01:16:27,659
moving only per chunk so now as this

1338
01:16:23,590 --> 01:16:27,659
moves right I think

1339
01:16:34,859 --> 01:16:38,639
yeah you can see now it moves kind of

1340
01:16:36,748 --> 01:16:41,429
discreetly right the problem with that

1341
01:16:38,639 --> 01:16:43,168
is again so now we've gotten to the

1342
01:16:41,429 --> 01:16:45,628
point that I was wondering about before

1343
01:16:43,168 --> 01:16:48,088
and it looks like the answer is yeah it

1344
01:16:45,628 --> 01:16:51,988
doesn't really work and that's that like

1345
01:16:48,088 --> 01:16:55,078
the the chunk granularity is probably

1346
01:16:51,988 --> 01:16:56,878
too low like we probably need it to do

1347
01:16:55,078 --> 01:17:06,898
the lighting on something tighter than

1348
01:16:56,878 --> 01:17:08,458
that you know I'm saying so that gets us

1349
01:17:06,899 --> 01:17:10,169
back in the business now of saying all

1350
01:17:08,458 --> 01:17:13,529
right now we actually have to look at

1351
01:17:10,168 --> 01:17:15,510
voxel centers as well which is pretty

1352
01:17:13,529 --> 01:17:18,868
annoying right but that's what we're

1353
01:17:15,510 --> 01:17:21,239
gonna have to do so what we're gonna

1354
01:17:18,868 --> 01:17:23,248
have to have here is like a secondary

1355
01:17:21,238 --> 01:17:24,988
offset that tells us how much because it

1356
01:17:23,248 --> 01:17:26,639
looks like actually that now is working

1357
01:17:24,988 --> 01:17:29,728
properly right to a certain extent I

1358
01:17:26,639 --> 01:17:34,918
mean it's hard to say but looks roughly

1359
01:17:29,729 --> 01:17:36,659
correct those I'm not seeing those I'm

1360
01:17:34,918 --> 01:17:38,578
not seeing any lighting bugs other than

1361
01:17:36,658 --> 01:17:40,888
when we're catching up to the lighting

1362
01:17:38,578 --> 01:17:44,279
region right like the rest of the

1363
01:17:40,889 --> 01:17:46,639
lighting doesn't doesn't freak out you

1364
01:17:44,279 --> 01:17:46,639
know I'm saying

1365
01:17:52,329 --> 01:17:57,289
so I think all we really need to do now

1366
01:17:54,920 --> 01:18:00,159
is just track that offset correctly and

1367
01:17:57,289 --> 01:18:00,159
then I think we're in good shape

1368
01:18:31,539 --> 01:18:36,189
so it seems like we have like weird

1369
01:18:33,880 --> 01:18:38,020
light leaking bugs though just yeah we

1370
01:18:36,189 --> 01:18:39,549
there's interesting things that happen

1371
01:18:38,020 --> 01:18:41,470
with the lighting word like it gets over

1372
01:18:39,550 --> 01:18:43,690
bright so we've got plenty of stuff to

1373
01:18:41,470 --> 01:18:46,360
debug here but at least the copy you

1374
01:18:43,689 --> 01:18:48,149
know the copying seems okay we can sort

1375
01:18:46,359 --> 01:18:50,769
of narrow in on all the bugs as we go

1376
01:18:48,149 --> 01:18:52,509
alright so that seems pretty good and so

1377
01:18:50,770 --> 01:18:55,000
the question now is how do we get the

1378
01:18:52,510 --> 01:18:56,680
something more granular so basically we

1379
01:18:55,000 --> 01:18:58,899
don't really want this offset to

1380
01:18:56,680 --> 01:19:01,570
actually drop to zero here that's not

1381
01:18:58,899 --> 01:19:02,649
good so what we need to do is we do need

1382
01:19:01,569 --> 01:19:05,519
to do the thing we were talking about

1383
01:19:02,649 --> 01:19:08,139
before where we need to say like okay

1384
01:19:05,520 --> 01:19:09,670
whatever this origin P is that we're

1385
01:19:08,140 --> 01:19:11,470
getting in here if this actually needs

1386
01:19:09,670 --> 01:19:13,720
to be sort of truncated down to

1387
01:19:11,470 --> 01:19:21,070
something some other thing whatever that

1388
01:19:13,720 --> 01:19:22,570
other thing is and we need to do this

1389
01:19:21,069 --> 01:19:24,579
more often than just when they're in the

1390
01:19:22,569 --> 01:19:26,049
same chunk so it's true that we need to

1391
01:19:24,579 --> 01:19:27,369
do it when they you know it's true that

1392
01:19:26,050 --> 01:19:28,810
we need to do it whenever the center

1393
01:19:27,369 --> 01:19:32,140
does move but we also need to do it

1394
01:19:28,810 --> 01:19:35,860
whenever the origin offset part changes

1395
01:19:32,140 --> 01:19:47,680
sufficiently to produce a different

1396
01:19:35,859 --> 01:19:51,130
offset there right and I'm not sure I'm

1397
01:19:47,680 --> 01:19:54,550
not sure exactly how to make this work

1398
01:19:51,130 --> 01:19:56,079
out properly so we need to do the base

1399
01:19:54,550 --> 01:19:59,289
the same thing we were doing before

1400
01:19:56,079 --> 01:20:01,899
which is to say that like the origin P

1401
01:19:59,289 --> 01:20:06,659
offset should drop to zero and we should

1402
01:20:01,899 --> 01:20:06,659
just save whatever it was probably right

1403
01:20:08,039 --> 01:20:12,189
so we probably just want to keep this

1404
01:20:10,300 --> 01:20:17,650
and then remove it from further

1405
01:20:12,189 --> 01:20:19,689
consideration entirely the camera offset

1406
01:20:17,649 --> 01:20:23,529
then needs to go through like the d

1407
01:20:19,689 --> 01:20:25,629
camera offset bit so this is actually

1408
01:20:23,529 --> 01:20:33,130
going to be you know the Hadamard

1409
01:20:25,630 --> 01:20:36,250
product of the m seldom so we're gonna

1410
01:20:33,130 --> 01:20:39,640
say look how many of these are we

1411
01:20:36,250 --> 01:20:47,380
actually going to do and then we would

1412
01:20:39,640 --> 01:20:50,380
do our round so this is how far the

1413
01:20:47,380 --> 01:20:55,359
camera is offset based on what we got

1414
01:20:50,380 --> 01:20:57,940
told we then want to do our delta from

1415
01:20:55,359 --> 01:21:14,619
there so again we would probably just do

1416
01:20:57,939 --> 01:21:18,879
this and we would have our d voxel up

1417
01:21:14,619 --> 01:21:20,380
here so in theory this should not do

1418
01:21:18,880 --> 01:21:22,900
anything different now because we're

1419
01:21:20,380 --> 01:21:27,329
really not changing anything so if we

1420
01:21:22,899 --> 01:21:30,899
just some in the change for the center

1421
01:21:27,329 --> 01:21:30,899
we should be okay

1422
01:21:47,519 --> 01:21:52,380
yeah so that all looks fine and so now

1423
01:21:50,939 --> 01:21:53,969
we just need a way of accounting for

1424
01:21:52,380 --> 01:21:55,139
this camera offset and this is what we

1425
01:21:53,969 --> 01:21:58,498
were doing before it now this camera

1426
01:21:55,139 --> 01:22:00,690
offset is again like how far in addition

1427
01:21:58,498 --> 01:22:02,578
we would have to move besides just

1428
01:22:00,689 --> 01:22:05,189
accounting for the change in where the

1429
01:22:02,578 --> 01:22:08,069
chunks actually are right so we need to

1430
01:22:05,189 --> 01:22:12,029
move this far we need to slide the voxel

1431
01:22:08,069 --> 01:22:15,058
this much over as well so if that's our

1432
01:22:12,029 --> 01:22:17,069
camera offset in voxels I guess are this

1433
01:22:15,059 --> 01:22:19,860
is like I'm gonna call this box camera

1434
01:22:17,069 --> 01:22:23,189
offset I guess and then I'm gonna

1435
01:22:19,859 --> 01:22:26,518
actually produce a camera offset which

1436
01:22:23,189 --> 01:22:30,538
is the Vox camera offset times the cell

1437
01:22:26,519 --> 01:22:37,139
dim so basically just getting the exact

1438
01:22:30,538 --> 01:22:40,920
same value back but truncated to the

1439
01:22:37,139 --> 01:22:43,679
nearest voxel cell so now if I say where

1440
01:22:40,920 --> 01:22:46,440
the min corner actually is we would say

1441
01:22:43,679 --> 01:22:54,800
it's at this location plus the Vox

1442
01:22:46,439 --> 01:22:54,799
camera offset minus the centering right

1443
01:22:58,189 --> 01:23:01,759
what is the problem

1444
01:23:06,270 --> 01:23:16,389
all right and that's not Vox camera

1445
01:23:14,560 --> 01:23:20,770
offset that's just regular camera offset

1446
01:23:16,389 --> 01:23:23,199
and we're good all right so now we're

1447
01:23:20,770 --> 01:23:25,840
not actually sliding the voxel we're

1448
01:23:23,198 --> 01:23:27,698
just drawing it in a different place but

1449
01:23:25,840 --> 01:23:30,539
we're gonna see if we're drawing it in

1450
01:23:27,698 --> 01:23:34,839
the place we would want to draw it right

1451
01:23:30,539 --> 01:23:37,359
yeah so it looks like now it's properly

1452
01:23:34,840 --> 01:23:40,569
following but we're not actually moving

1453
01:23:37,359 --> 01:23:43,359
it right so we're not doing the devoxx

1454
01:23:40,569 --> 01:23:45,039
'el stuff properly at all like the d

1455
01:23:43,359 --> 01:23:48,309
voxels totally busted

1456
01:23:45,039 --> 01:23:50,560
so it's not copying the lighting but at

1457
01:23:48,310 --> 01:23:55,869
least now we're not off in like you know

1458
01:23:50,560 --> 01:23:57,340
no-man's land where we are not even sure

1459
01:23:55,868 --> 01:23:58,539
why the rectangles we're seeing on the

1460
01:23:57,340 --> 01:24:01,929
screen or where they are like we've

1461
01:23:58,539 --> 01:24:03,729
actually like got that down right all

1462
01:24:01,929 --> 01:24:05,679
right so now we need to like okay if

1463
01:24:03,729 --> 01:24:08,198
we're going like forward with this

1464
01:24:05,679 --> 01:24:11,260
camera offset we need to slide the voxel

1465
01:24:08,198 --> 01:24:14,919
so we need to slide the voxel back one

1466
01:24:11,260 --> 01:24:16,719
right so we need to when we do this we

1467
01:24:14,920 --> 01:24:18,579
need to know that we've changed this

1468
01:24:16,719 --> 01:24:20,380
camera offset now I don't I have to

1469
01:24:18,579 --> 01:24:22,479
think about how that interacts with this

1470
01:24:20,380 --> 01:24:25,118
because I don't really know but I feel

1471
01:24:22,479 --> 01:24:27,279
like it should just be the same all the

1472
01:24:25,118 --> 01:24:33,399
time right I feel like we should just be

1473
01:24:27,279 --> 01:24:35,559
able to do this and say if the so if the

1474
01:24:33,399 --> 01:24:38,348
camera off set went forward we need to

1475
01:24:35,560 --> 01:24:42,639
go backward would be the way I would

1476
01:24:38,349 --> 01:24:45,099
think of it think about it right so I

1477
01:24:42,639 --> 01:24:46,270
think that just means we can use the

1478
01:24:45,099 --> 01:24:48,190
same solution we were doing before

1479
01:24:46,270 --> 01:24:52,389
although I need to think about this so

1480
01:24:48,189 --> 01:24:54,969
again it's fetching from the plus so if

1481
01:24:52,389 --> 01:24:57,810
we are moving forward we need it to go

1482
01:24:54,969 --> 01:24:57,810
backward

1483
01:25:03,859 --> 01:25:09,929
so we know that block copy voxel it

1484
01:25:07,679 --> 01:25:13,289
let's just take the X direction so if

1485
01:25:09,929 --> 01:25:16,710
block copy voxel is going to be fed a

1486
01:25:13,289 --> 01:25:21,019
value of 1 then what we will see happen

1487
01:25:16,710 --> 01:25:24,329
in the voxel is a movement to the left

1488
01:25:21,020 --> 01:25:27,090
right because each cell will grab the

1489
01:25:24,329 --> 01:25:28,859
one one to the right of it which will

1490
01:25:27,090 --> 01:25:35,569
look like everything is moving to the

1491
01:25:28,859 --> 01:25:43,710
left so an output value of positive x

1492
01:25:35,569 --> 01:25:47,719
produces a negative X motion right so we

1493
01:25:43,710 --> 01:25:51,000
are going to move our camera offset

1494
01:25:47,719 --> 01:25:55,439
let's say it was it's self moving in the

1495
01:25:51,000 --> 01:25:59,729
positive x-direction so it's moving to

1496
01:25:55,439 --> 01:26:02,039
the right so the new one is higher than

1497
01:25:59,729 --> 01:26:03,479
the old one meaning subtraction you

1498
01:26:02,039 --> 01:26:09,500
would normally do would produce a

1499
01:26:03,479 --> 01:26:12,928
positive value as it slides to the left

1500
01:26:09,500 --> 01:26:14,670
we need it's moving it's I'm sorry as it

1501
01:26:12,929 --> 01:26:17,190
slides to the right it's moving the

1502
01:26:14,670 --> 01:26:19,230
voxels with it to the right so they need

1503
01:26:17,189 --> 01:26:21,599
to be slid back and to they need to be

1504
01:26:19,229 --> 01:26:25,909
slit slid back in the left direction to

1505
01:26:21,600 --> 01:26:25,910
count for that so I think it's right

1506
01:26:32,439 --> 01:26:49,299
I think that's all I got who knows um so

1507
01:26:46,840 --> 01:26:52,409
I think that slides the voxel to account

1508
01:26:49,300 --> 01:26:55,029
for the motion that's occurring there

1509
01:26:52,409 --> 01:27:02,619
but no promises this is just too many

1510
01:26:55,029 --> 01:27:05,880
things to keep in your head yeah

1511
01:27:02,619 --> 01:27:08,319
and in that worked properly right

1512
01:27:05,880 --> 01:27:09,850
alright so it took us a long time to get

1513
01:27:08,319 --> 01:27:17,769
there because man that was confusing but

1514
01:27:09,850 --> 01:27:24,640
I think this is right now I'm gonna go

1515
01:27:17,770 --> 01:27:27,060
turn off the debug drawing of those

1516
01:27:24,640 --> 01:27:27,060
light Maps

1517
01:27:36,969 --> 01:27:55,869
and also I guess I'll turn off some of

1518
01:27:39,039 --> 01:27:57,670
these volumes alright so this is now

1519
01:27:55,869 --> 01:28:01,448
what we would expect to sort of see

1520
01:27:57,670 --> 01:28:03,340
in-game in terms of the lighting and I

1521
01:28:01,448 --> 01:28:06,519
just want to see if I see any you know

1522
01:28:03,340 --> 01:28:08,969
weird errors or stuff like that with the

1523
01:28:06,520 --> 01:28:08,969
region

1524
01:28:22,229 --> 01:28:29,289
so that's looking pretty good now you

1525
01:28:25,389 --> 01:28:30,819
know and basically our lighting accuracy

1526
01:28:29,288 --> 01:28:33,748
and the computation of the lighting is

1527
01:28:30,819 --> 01:28:36,549
probably not super great at the moment

1528
01:28:33,748 --> 01:28:39,099
but now like you don't see any like bugs

1529
01:28:36,550 --> 01:28:42,099
with the fact that we have a roving

1530
01:28:39,099 --> 01:28:43,748
lighting region anymore like it looks

1531
01:28:42,099 --> 01:28:45,670
pretty reasonable as you're hopping

1532
01:28:43,748 --> 01:28:48,399
around like I'm not seeing any of those

1533
01:28:45,670 --> 01:28:58,109
cracks the lighting cracks anymore right

1534
01:28:48,399 --> 01:29:00,670
it just kind of looks really fluid and

1535
01:28:58,109 --> 01:29:02,198
so mostly I think what we've got now is

1536
01:29:00,670 --> 01:29:04,359
just light transmission equation

1537
01:29:02,198 --> 01:29:06,518
problems so like why is that light so

1538
01:29:04,359 --> 01:29:08,109
bright and things like that so I think

1539
01:29:06,519 --> 01:29:12,280
mostly what we need to look at now is

1540
01:29:08,109 --> 01:29:14,469
how to stabilize and make accurate those

1541
01:29:12,279 --> 01:29:22,988
lighting computations because everything

1542
01:29:14,469 --> 01:29:24,729
else now seems pretty good right but

1543
01:29:22,988 --> 01:29:26,408
this sort of lighting feedback weirdness

1544
01:29:24,729 --> 01:29:27,940
that seems like there's some weird

1545
01:29:26,408 --> 01:29:30,388
errors going on there and I don't know

1546
01:29:27,939 --> 01:29:30,388
what that's about

1547
01:29:46,229 --> 01:29:52,488
feels pretty good I'm liking it

1548
01:30:03,979 --> 01:30:08,959
all right so I don't know where we are

1549
01:30:05,449 --> 01:30:11,989
on time probably about ten minutes left

1550
01:30:08,960 --> 01:30:14,270
I guess but this is feeling pretty good

1551
01:30:11,989 --> 01:30:19,599
to me

1552
01:30:14,270 --> 01:30:22,370
and again this also is completely flat

1553
01:30:19,600 --> 01:30:25,970
cost now which is nice

1554
01:30:22,369 --> 01:30:27,680
meaning at the moment there is no cost

1555
01:30:25,970 --> 01:30:29,539
for light sources because we actually

1556
01:30:27,680 --> 01:30:31,909
don't even we can actually turn off the

1557
01:30:29,539 --> 01:30:34,090
build of the light volume hierarchy

1558
01:30:31,909 --> 01:30:35,960
thing because we don't even use it so

1559
01:30:34,090 --> 01:30:37,730
actually this means you can have

1560
01:30:35,960 --> 01:30:39,619
infinite lights or do it doesn't matter

1561
01:30:37,729 --> 01:30:42,109
but its main light sources as you want

1562
01:30:39,619 --> 01:30:47,479
you won't pay any additional costs for

1563
01:30:42,109 --> 01:30:50,599
them the the lighting is a flat fee if

1564
01:30:47,479 --> 01:30:57,259
you will and you can dump as many lights

1565
01:30:50,600 --> 01:31:06,750
as you want into the scene which is good

1566
01:30:57,260 --> 01:31:12,569
because I want a lot of that all right

1567
01:31:06,750 --> 01:31:12,569
[Music]

1568
01:31:13,210 --> 01:31:19,640
so I think basically I'm gonna end that

1569
01:31:17,510 --> 01:31:22,730
for now and then next weekend we'll

1570
01:31:19,640 --> 01:31:26,600
start to look at optimization of the ray

1571
01:31:22,729 --> 01:31:29,869
caster get that to as good as we can and

1572
01:31:26,600 --> 01:31:31,970
then we'll move from there to light

1573
01:31:29,869 --> 01:31:32,869
quality and that you know we're narrow

1574
01:31:31,970 --> 01:31:35,750
this is getting good

1575
01:31:32,869 --> 01:31:40,309
like I'm liking the look of this we need

1576
01:31:35,750 --> 01:31:43,100
to start putting in light collectors for

1577
01:31:40,310 --> 01:31:45,890
trees like right now we don't put any

1578
01:31:43,100 --> 01:31:48,560
actual light collector in there like we

1579
01:31:45,890 --> 01:31:50,030
need to to basically say like hey

1580
01:31:48,560 --> 01:31:54,980
there's a light collector there which is

1581
01:31:50,029 --> 01:31:56,960
pretty easy for us to do and right now

1582
01:31:54,979 --> 01:32:00,469
we don't so like like light can't bounce

1583
01:31:56,960 --> 01:32:01,939
off trees at all at the moment you know

1584
01:32:00,470 --> 01:32:05,560
what I mean

1585
01:32:01,939 --> 01:32:05,559
which it would you probably should

1586
01:32:09,210 --> 01:32:16,840
also we're not properly setting the

1587
01:32:11,979 --> 01:32:19,868
color of like walls and stuff so we got

1588
01:32:16,840 --> 01:32:22,239
some work to do on on what we feed in to

1589
01:32:19,868 --> 01:32:28,889
the lighting system that would make a

1590
01:32:22,238 --> 01:32:28,888
pretty big difference in quality as well

1591
01:32:46,279 --> 01:32:54,859
looking really great though I mean I'm

1592
01:32:48,288 --> 01:32:57,738
loving look at this I would like to

1593
01:32:54,859 --> 01:32:59,509
smooth out the way like I I would like

1594
01:32:57,738 --> 01:33:02,299
to make this look a little bit more

1595
01:32:59,510 --> 01:33:06,920
radial which I also think we probably

1596
01:33:02,300 --> 01:33:10,820
can do if we want to using a little bit

1597
01:33:06,920 --> 01:33:14,449
more the way that we're blending voxels

1598
01:33:10,819 --> 01:33:17,299
together could probably be changed to

1599
01:33:14,448 --> 01:33:19,038
produce a more pleasant look there so we

1600
01:33:17,300 --> 01:33:20,449
probably want but that's a pixel shader

1601
01:33:19,038 --> 01:33:25,578
thing that doesn't really have anything

1602
01:33:20,448 --> 01:33:28,578
to do with the lighting scheme also we

1603
01:33:25,578 --> 01:33:30,288
now have specular as well so we probably

1604
01:33:28,578 --> 01:33:33,380
want to find a way to take advantage of

1605
01:33:30,288 --> 01:33:36,228
that meaning we can have surfaces that

1606
01:33:33,380 --> 01:33:40,130
appear kind of shiny and we probably

1607
01:33:36,229 --> 01:33:46,179
want to have some way of getting that

1608
01:33:40,130 --> 01:33:46,179
into the game but anyway let's do Q&amp;A

1609
01:34:07,840 --> 01:34:12,319
how can we disable lighting for the

1610
01:34:09,890 --> 01:34:13,610
debug UI oh well it sort of is at the

1611
01:34:12,319 --> 01:34:15,349
moment but only because someone

1612
01:34:13,609 --> 01:34:17,659
requested a hack for it

1613
01:34:15,350 --> 01:34:19,720
so like at the moment it actually is but

1614
01:34:17,659 --> 01:34:22,309
it the reason that it is is because

1615
01:34:19,720 --> 01:34:25,640
someone just was like well since the Z

1616
01:34:22,310 --> 01:34:27,440
is weird you know just use the Z it's

1617
01:34:25,640 --> 01:34:29,960
not a particularly good solution but but

1618
01:34:27,439 --> 01:34:31,429
it already is doing that I think the

1619
01:34:29,960 --> 01:34:33,680
better way to do it is just have that

1620
01:34:31,430 --> 01:34:34,789
pass turn it off so there should just be

1621
01:34:33,680 --> 01:34:37,610
a thing in the render that's like this

1622
01:34:34,789 --> 01:34:39,739
is the the you know the lighting is only

1623
01:34:37,609 --> 01:34:42,189
on for this pass and it just uses a

1624
01:34:39,739 --> 01:34:42,189
differentiator

1625
01:34:59,840 --> 01:35:13,349
Wow really OBS is skipping frames due to

1626
01:35:03,389 --> 01:35:16,190
encoding lag are you sure about that how

1627
01:35:13,349 --> 01:35:16,190
sure are you of that

1628
01:35:24,270 --> 01:35:31,949
like at least on OBS it does not list

1629
01:35:28,840 --> 01:35:31,949
any dropped frames

1630
01:35:46,770 --> 01:35:52,230
so it I don't know like is it possible

1631
01:35:50,430 --> 01:35:55,530
that OBS is just doing something like

1632
01:35:52,229 --> 01:35:56,129
stupid like it's you know it's we're not

1633
01:35:55,529 --> 01:35:58,979
stupid

1634
01:35:56,130 --> 01:36:01,829
possibly intentional even is it possible

1635
01:35:58,979 --> 01:36:03,539
that like OBS is sending out like a

1636
01:36:01,829 --> 01:36:05,279
lower quality stream to twitch but

1637
01:36:03,539 --> 01:36:07,909
recording a good one locally or

1638
01:36:05,279 --> 01:36:07,909
something like this

1639
01:36:17,539 --> 01:36:21,939
okay so basically you're saying go to

1640
01:36:23,979 --> 01:36:27,489
view stats

1641
01:36:37,149 --> 01:36:47,039
oh yeah yeah skip frames due to encoding

1642
01:36:42,819 --> 01:36:47,039
lag 4.4%

1643
01:36:53,890 --> 01:36:56,890
hmm

1644
01:37:04,310 --> 01:37:16,580
I'm not sure how to fix that no the game

1645
01:37:14,600 --> 01:37:20,380
is not fighting OBS for the GPU because

1646
01:37:16,579 --> 01:37:20,380
it's running on a different machine

1647
01:37:24,100 --> 01:37:30,590
there are two separate machines this

1648
01:37:26,119 --> 01:37:32,199
this streaming machine is actually it's

1649
01:37:30,590 --> 01:37:45,699
just that it's the only thing that's

1650
01:37:32,199 --> 01:37:45,699
it's doing so

1651
01:37:59,100 --> 01:38:05,390
I mean that you know what the problem

1652
01:38:03,390 --> 01:38:09,030
might be here is that it has to do to

1653
01:38:05,390 --> 01:38:12,530
encoding z' like there's a streaming one

1654
01:38:09,029 --> 01:38:14,699
and like a recording one and I wonder if

1655
01:38:12,529 --> 01:38:21,689
there's a way to tell it just do one

1656
01:38:14,699 --> 01:38:27,960
thing and send them both out I actually

1657
01:38:21,689 --> 01:38:30,379
don't know how to tell it to do that to

1658
01:38:27,960 --> 01:38:30,380
be honest

1659
01:38:37,038 --> 01:38:40,670
yeah you know I don't even really know

1660
01:38:38,750 --> 01:38:44,050
how to tell it to not do that we'll have

1661
01:38:40,670 --> 01:38:45,489
to look at that a little more carefully

1662
01:38:44,050 --> 01:38:49,420
[Music]

1663
01:38:45,488 --> 01:39:02,959
so I don't really know how I would get

1664
01:38:49,420 --> 01:39:05,000
OBS to not drop frames I mean the other

1665
01:39:02,960 --> 01:39:07,010
thing too is I probably it's the thing

1666
01:39:05,000 --> 01:39:09,408
is I'm doing it at 60 frames a second

1667
01:39:07,010 --> 01:39:13,840
which I wasn't doing before so it's

1668
01:39:09,408 --> 01:39:17,768
recording at 60 frames a second and

1669
01:39:13,840 --> 01:39:19,880
streaming at 30 and maybe you just can't

1670
01:39:17,769 --> 01:39:22,519
maybe you can only record and stream

1671
01:39:19,880 --> 01:39:25,210
both at 30 and otherwise it's not fast

1672
01:39:22,519 --> 01:39:25,210
enough or something

1673
01:39:32,130 --> 01:39:35,969
I read a Twitter conversation from an

1674
01:39:34,529 --> 01:39:37,769
engine program rated software about the

1675
01:39:35,969 --> 01:39:39,480
engine for a new doom game not having a

1676
01:39:37,770 --> 01:39:40,620
main thread or render thread only tasks

1677
01:39:39,479 --> 01:39:44,609
and queues could you comment on this

1678
01:39:40,619 --> 01:39:50,639
architecture yeah that's kind of more or

1679
01:39:44,609 --> 01:39:59,939
less the standard architecture I would

1680
01:39:50,639 --> 01:40:01,920
say that like so you do need to like you

1681
01:39:59,939 --> 01:40:06,448
can't use OpenGL for example if you want

1682
01:40:01,920 --> 01:40:10,408
to do that it doesn't work you can use

1683
01:40:06,448 --> 01:40:12,119
d3 D or I think they use Vulcan they

1684
01:40:10,408 --> 01:40:15,448
might use both D 3d and Vulcan I don't

1685
01:40:12,119 --> 01:40:19,738
know which ones they use but OpenGL

1686
01:40:15,448 --> 01:40:24,238
doesn't really work if that makes sense

1687
01:40:19,738 --> 01:40:27,419
and so I guess what I would say is you

1688
01:40:24,238 --> 01:40:29,549
know as long as you have the ability to

1689
01:40:27,420 --> 01:40:32,899
do things like allocate graphics memory

1690
01:40:29,550 --> 01:40:35,190
for more than one thread this works ok

1691
01:40:32,899 --> 01:40:38,599
if you don't have that ability then

1692
01:40:35,189 --> 01:40:41,339
you're just kind of screwed and OpenGL

1693
01:40:38,600 --> 01:40:45,300
multi-threaded just doesn't work they

1694
01:40:41,340 --> 01:40:47,130
it's not it's not because it couldn't

1695
01:40:45,300 --> 01:40:48,289
it's because it doesn't if that makes

1696
01:40:47,130 --> 01:40:53,000
sense

1697
01:40:48,289 --> 01:40:53,000
like the drivers just are too buggy

1698
01:41:02,229 --> 01:41:15,649
well no but like so Valles the thing is

1699
01:41:06,829 --> 01:41:21,769
like looking at the stats on looking at

1700
01:41:15,649 --> 01:41:24,170
the stats on the actual OBS it says skip

1701
01:41:21,770 --> 01:41:26,630
frames due to encoding lag is 4.3

1702
01:41:24,170 --> 01:41:31,279
percent so it's just not fast enough at

1703
01:41:26,630 --> 01:41:34,159
encoding this video it's just I don't

1704
01:41:31,279 --> 01:41:37,189
know why what's weird though

1705
01:41:34,159 --> 01:41:41,090
is that like if I watched this if I

1706
01:41:37,189 --> 01:41:44,809
watched the number it's at 26 1 7 right

1707
01:41:41,090 --> 01:41:50,510
now and if I start hopping around like

1708
01:41:44,810 --> 01:41:52,160
so you can see it goes up only when the

1709
01:41:50,510 --> 01:41:54,949
screen goes up so it's it's literally

1710
01:41:52,159 --> 01:41:57,800
just the act of having too many Delta's

1711
01:41:54,949 --> 01:42:07,519
per frame is the thing that causes it to

1712
01:41:57,800 --> 01:42:10,029
miss and again I really don't know what

1713
01:42:07,520 --> 01:42:10,030
to do about that

1714
01:42:17,769 --> 01:42:22,429
let me see what's going on GPU I mean

1715
01:42:20,840 --> 01:42:24,319
CPU wise I think the problem is this

1716
01:42:22,429 --> 01:42:25,699
machine doesn't have a dedicated GPU

1717
01:42:24,319 --> 01:42:28,880
that could really be used for this so

1718
01:42:25,698 --> 01:42:40,428
it's entirely CPU based and if I look at

1719
01:42:28,880 --> 01:42:42,920
the CPU usage it is pegged like like OBS

1720
01:42:40,429 --> 01:42:44,630
studio is basically just using like 100

1721
01:42:42,920 --> 01:42:47,430
percent of the CPU and thirty percent of

1722
01:42:44,630 --> 01:42:50,520
the GPU at all times

1723
01:42:47,430 --> 01:42:50,520
[Music]

1724
01:42:55,149 --> 01:43:02,598
so like I don't know I don't know what

1725
01:43:00,649 --> 01:43:05,058
it's having trouble with but again like

1726
01:43:02,599 --> 01:43:07,639
video encoding is kind of expensive like

1727
01:43:05,059 --> 01:43:11,360
mo comp specifically checks are

1728
01:43:07,639 --> 01:43:14,139
expensive so I don't know if I look at

1729
01:43:11,359 --> 01:43:14,139
the

1730
01:43:27,649 --> 01:43:35,009
yeah if I look at it it's probably the

1731
01:43:30,029 --> 01:43:38,069
recording I don't know I also don't know

1732
01:43:35,010 --> 01:43:49,110
why like is there a reason that there

1733
01:43:38,069 --> 01:43:51,359
isn't a framerate on here it looks like

1734
01:43:49,109 --> 01:43:53,639
like you can't set to different frame

1735
01:43:51,359 --> 01:43:55,618
rates so there's only 60 so I think the

1736
01:43:53,639 --> 01:43:58,109
problem is it's happening to do to 60

1737
01:43:55,618 --> 01:44:03,000
Pietra streams at to 60 1080p streams

1738
01:43:58,109 --> 01:44:06,868
probably too much for a core i7 you know

1739
01:44:03,000 --> 01:44:08,789
one would probably be okay but I don't

1740
01:44:06,868 --> 01:44:11,639
know how to tell it to just stream the

1741
01:44:08,789 --> 01:44:15,618
one like I don't know how to tell it

1742
01:44:11,639 --> 01:44:15,618
like just just do one and stream it

1743
01:44:16,010 --> 01:44:21,539
isn't that like wouldn't that be a

1744
01:44:18,389 --> 01:44:27,420
button here somewhere I don't know maybe

1745
01:44:21,539 --> 01:44:29,890
there's a way to do that but I don't see

1746
01:44:27,420 --> 01:44:33,009
it so

1747
01:44:29,890 --> 01:44:33,009
[Music]

1748
01:44:41,719 --> 01:44:51,050
I got nothing so it might be possible

1749
01:44:46,698 --> 01:44:53,299
that you can do that it might not be and

1750
01:44:51,050 --> 01:44:57,260
I'll just have to I mean I don't know or

1751
01:44:53,300 --> 01:44:59,690
we just live with it I guess another

1752
01:44:57,260 --> 01:45:01,880
question is I don't know if I go look at

1753
01:44:59,689 --> 01:45:04,729
the recorded video does is the recorded

1754
01:45:01,880 --> 01:45:12,380
video actually okay like this is not

1755
01:45:04,729 --> 01:45:13,849
really telling me much about like like

1756
01:45:12,380 --> 01:45:19,640
it's this isn't really telling me much

1757
01:45:13,850 --> 01:45:29,260
about the difference between those two

1758
01:45:19,640 --> 01:45:29,260
things so I don't know

1759
01:45:40,578 --> 01:45:44,448
that there are two types of GPU tiled

1760
01:45:42,618 --> 01:45:45,768
and non tiled and mobiles use tiled

1761
01:45:44,448 --> 01:45:48,198
method but why what are the benefits

1762
01:45:45,769 --> 01:45:50,748
removals using it well actually kind of

1763
01:45:48,198 --> 01:45:52,878
everyone use tiles is uses tiled to a

1764
01:45:50,748 --> 01:45:56,029
certain extent it just depends on how

1765
01:45:52,878 --> 01:45:58,788
tiled you are right but the idea behind

1766
01:45:56,029 --> 01:46:03,828
tiled rendering is just that if you

1767
01:45:58,788 --> 01:46:05,179
don't have a I mean you could think of

1768
01:46:03,828 --> 01:46:09,018
it as being exactly the same as why you

1769
01:46:05,179 --> 01:46:12,288
do it on the CPU if you have a very

1770
01:46:09,019 --> 01:46:15,349
strong caching architecture that allows

1771
01:46:12,288 --> 01:46:17,658
the cache to kind of suck up any kind of

1772
01:46:15,349 --> 01:46:19,909
weird access pattern problems that you

1773
01:46:17,658 --> 01:46:23,388
might have and everything this works

1774
01:46:19,908 --> 01:46:27,168
fine then you don't have to really worry

1775
01:46:23,389 --> 01:46:30,078
about a lot of locality stuff but if you

1776
01:46:27,168 --> 01:46:32,628
have a limited ability to do things like

1777
01:46:30,078 --> 01:46:36,139
caching or limited ways of accessing the

1778
01:46:32,628 --> 01:46:39,469
cache or limited amount of memory to use

1779
01:46:36,139 --> 01:46:41,359
for stuff etc etc the reason that you

1780
01:46:39,469 --> 01:46:43,939
want to move to tiled rendering is

1781
01:46:41,359 --> 01:46:47,749
because if you keep everything in one

1782
01:46:43,939 --> 01:46:50,149
tile local to like one processing unit

1783
01:46:47,748 --> 01:46:52,398
on the GPU then there's just a lot less

1784
01:46:50,149 --> 01:46:54,260
communication that has to happen and a

1785
01:46:52,399 --> 01:46:58,669
lot less cash missing that has to happen

1786
01:46:54,260 --> 01:47:02,659
right think about a pretty simple case

1787
01:46:58,668 --> 01:47:08,448
where you want to rasterize two

1788
01:47:02,658 --> 01:47:10,429
different triangles right and I hand one

1789
01:47:08,448 --> 01:47:13,038
of those triangles to one processing

1790
01:47:10,429 --> 01:47:14,868
unit on a GPU and another triangle to

1791
01:47:13,038 --> 01:47:16,128
another processing unit on the GPU this

1792
01:47:14,868 --> 01:47:19,698
is not how it actually works but I'm

1793
01:47:16,128 --> 01:47:23,208
just giving you an example well if those

1794
01:47:19,698 --> 01:47:26,358
two triangles are actually in completely

1795
01:47:23,208 --> 01:47:30,288
separate locations this works just fine

1796
01:47:26,359 --> 01:47:32,539
right if these two triangles are in the

1797
01:47:30,288 --> 01:47:37,518
same location we have an issue because

1798
01:47:32,538 --> 01:47:39,438
one GPU processing unit is trying to

1799
01:47:37,519 --> 01:47:41,030
write to stuff that another GPU

1800
01:47:39,439 --> 01:47:43,399
processing unit needs to write to first

1801
01:47:41,029 --> 01:47:47,358
because the triangles go in order right

1802
01:47:43,399 --> 01:47:49,128
and so if I know that all of my

1803
01:47:47,359 --> 01:47:51,619
triangles that are in a particular

1804
01:47:49,128 --> 01:47:53,510
location as bound by a tile on the

1805
01:47:51,618 --> 01:47:55,399
screen are all being handled by this

1806
01:47:53,510 --> 01:47:57,260
same processing unit I don't need to

1807
01:47:55,399 --> 01:48:02,089
worry about that data dependency anymore

1808
01:47:57,260 --> 01:48:03,739
at all right so you can see why at the

1809
01:48:02,090 --> 01:48:06,500
very least you want to break things up

1810
01:48:03,738 --> 01:48:08,988
into bins on the screen because if you

1811
01:48:06,500 --> 01:48:11,809
can do that you then can eliminate a

1812
01:48:08,988 --> 01:48:13,250
whole like series of inter core

1813
01:48:11,809 --> 01:48:18,429
communication problems you might have

1814
01:48:13,250 --> 01:48:18,429
with people wanting to fill stuff right

1815
01:48:18,670 --> 01:48:23,569
in order now in reality GPUs have lots

1816
01:48:22,250 --> 01:48:26,479
of strategies for doing these things

1817
01:48:23,569 --> 01:48:28,130
tiling is one way of reducing the

1818
01:48:26,479 --> 01:48:29,689
communication that you need and the

1819
01:48:28,130 --> 01:48:31,489
amount that you have to move memory

1820
01:48:29,689 --> 01:48:34,848
between different parts of the chip or

1821
01:48:31,488 --> 01:48:36,919
Core caches right another way that they

1822
01:48:34,849 --> 01:48:38,900
often do it is by producing intermediate

1823
01:48:36,920 --> 01:48:41,449
results and then combining those

1824
01:48:38,899 --> 01:48:46,219
intermediate results later now if you've

1825
01:48:41,448 --> 01:48:51,678
ever wondered for example why blending

1826
01:48:46,219 --> 01:48:56,269
is not programmable this is why on a

1827
01:48:51,679 --> 01:48:57,889
tiled part where one core is doing all

1828
01:48:56,269 --> 01:49:00,380
of the rendering for a small region of

1829
01:48:57,889 --> 01:49:04,550
the screen programming the blend

1830
01:49:00,380 --> 01:49:07,489
operation is free right you can just do

1831
01:49:04,550 --> 01:49:11,300
it and it will work because you can just

1832
01:49:07,488 --> 01:49:13,518
execute code and be done exactly like it

1833
01:49:11,300 --> 01:49:17,059
executes all the rest of the code on the

1834
01:49:13,519 --> 01:49:18,980
other hand if you are doing something

1835
01:49:17,059 --> 01:49:21,380
where you have a triangle being

1836
01:49:18,979 --> 01:49:23,419
rasterized by somebody who doesn't yet

1837
01:49:21,380 --> 01:49:25,699
have the ability to know if someone else

1838
01:49:23,420 --> 01:49:30,109
who needed to rasterize a different

1839
01:49:25,698 --> 01:49:32,629
triangle had already done so right then

1840
01:49:30,109 --> 01:49:34,518
in that case you need to wait for a

1841
01:49:32,630 --> 01:49:37,940
special purpose unit to combine those

1842
01:49:34,519 --> 01:49:41,110
two results in order later and that unit

1843
01:49:37,939 --> 01:49:45,198
isn't programmable see what I'm saying

1844
01:49:41,109 --> 01:49:47,089
so you definitely have situations where

1845
01:49:45,198 --> 01:49:50,238
tiling makes things a lot simpler for

1846
01:49:47,090 --> 01:49:51,679
you and the degree to which you want can

1847
01:49:50,238 --> 01:49:53,238
leverage a tiling architecture is like

1848
01:49:51,679 --> 01:49:57,319
everything else in GPU design it's kind

1849
01:49:53,238 --> 01:49:59,388
of just a magic hey we keep trying to

1850
01:49:57,319 --> 01:50:00,768
work out the fastest way to take giant

1851
01:49:59,389 --> 01:50:03,368
sets of triangles and move them through

1852
01:50:00,769 --> 01:50:05,940
this chip to produce an output frame and

1853
01:50:03,368 --> 01:50:08,639
sometimes the

1854
01:50:05,939 --> 01:50:11,609
cost of the chip plus the die area plus

1855
01:50:08,640 --> 01:50:14,160
the caching plus the power consumption

1856
01:50:11,609 --> 01:50:17,670
rules mean that tiling everything

1857
01:50:14,159 --> 01:50:19,829
completely is the fastest way to render

1858
01:50:17,670 --> 01:50:25,399
triangles at this price point and other

1859
01:50:19,829 --> 01:50:25,399
times it isn't no I'm saying

1860
01:50:25,460 --> 01:50:30,149
so why chips use tiling or don't use

1861
01:50:28,380 --> 01:50:33,300
tiling is beyond me

1862
01:50:30,149 --> 01:50:35,809
you know it's it's a GPU design question

1863
01:50:33,300 --> 01:50:40,230
but hopefully you can appreciate why

1864
01:50:35,810 --> 01:50:42,330
tiling changes how things behave because

1865
01:50:40,229 --> 01:50:45,869
the degree to which a particular

1866
01:50:42,329 --> 01:50:48,449
architecture needs to have handling of

1867
01:50:45,869 --> 01:50:49,829
things like order dependency or needs to

1868
01:50:48,449 --> 01:50:51,569
understand things like how to move

1869
01:50:49,829 --> 01:50:54,149
things between caches efficiently and

1870
01:50:51,569 --> 01:50:56,639
stuff like that can change dramatically

1871
01:50:54,149 --> 01:50:58,920
depending on how it is ever going to

1872
01:50:56,640 --> 01:51:02,250
partition work between the elements of

1873
01:50:58,920 --> 01:51:03,989
the chip and so if you can make a chip

1874
01:51:02,250 --> 01:51:06,239
that just knows that all of the things

1875
01:51:03,989 --> 01:51:07,920
that happen to a particular 4x4 pixel

1876
01:51:06,239 --> 01:51:11,550
block somewhere always happen on one

1877
01:51:07,920 --> 01:51:13,199
core of the GPU well that's a lot easier

1878
01:51:11,550 --> 01:51:16,739
than saying you can happen on multiple

1879
01:51:13,199 --> 01:51:18,869
ones right so they make those decisions

1880
01:51:16,739 --> 01:51:21,779
based on how their architecture can most

1881
01:51:18,869 --> 01:51:23,519
leverage the cost at the power and the

1882
01:51:21,779 --> 01:51:26,090
silicon cost that they're going to have

1883
01:51:23,520 --> 01:51:26,090
right

1884
01:51:35,189 --> 01:51:45,250
yes so Fabien is totally Fabien is like

1885
01:51:42,250 --> 01:51:50,769
totally describing what's going on for a

1886
01:51:45,250 --> 01:51:58,300
GPU right if you think about the way a

1887
01:51:50,769 --> 01:52:04,800
GPU works a GPU is what a GPU is knows

1888
01:51:58,300 --> 01:52:08,800
ahead of time what has to go out to the

1889
01:52:04,800 --> 01:52:12,190
display it is handed literally a

1890
01:52:08,800 --> 01:52:15,400
complete package that is like here is

1891
01:52:12,189 --> 01:52:19,509
everything that has to happen to draw

1892
01:52:15,399 --> 01:52:22,779
this frame so latency is not

1893
01:52:19,510 --> 01:52:26,170
particularly relevant to a GPU because

1894
01:52:22,779 --> 01:52:30,069
it doesn't care when any particular

1895
01:52:26,170 --> 01:52:32,319
thing comes back it just wants the total

1896
01:52:30,069 --> 01:52:36,038
amount of time taken to produce a frame

1897
01:52:32,319 --> 01:52:37,179
to be as small as possible so even if

1898
01:52:36,038 --> 01:52:39,189
there's something at the beginning of

1899
01:52:37,179 --> 01:52:41,679
the frame that takes all the way till

1900
01:52:39,189 --> 01:52:42,250
the end of the frame to finish nobody

1901
01:52:41,679 --> 01:52:44,889
cares

1902
01:52:42,250 --> 01:52:48,908
as long as the total frame time was

1903
01:52:44,889 --> 01:52:50,170
minimized right so as a result and I

1904
01:52:48,908 --> 01:52:51,038
think this is presumably what Fabian is

1905
01:52:50,170 --> 01:52:53,010
talking about I don't know because I'm

1906
01:52:51,038 --> 01:52:59,288
not sure what you're referring to but as

1907
01:52:53,010 --> 01:52:59,670
a result everything in the actual excuse

1908
01:52:59,288 --> 01:53:04,259
me

1909
01:52:59,670 --> 01:53:07,599
everything in the actual GPU pipeline is

1910
01:53:04,260 --> 01:53:12,309
designed strictly around one thing

1911
01:53:07,599 --> 01:53:16,809
really and that is never let an F mad go

1912
01:53:12,309 --> 01:53:20,038
to waste right so a GPU is a giant set

1913
01:53:16,809 --> 01:53:26,710
of floating multiply floating point

1914
01:53:20,038 --> 01:53:29,018
multiply add circuitries right and these

1915
01:53:26,710 --> 01:53:33,429
ALU units that can do that we just have

1916
01:53:29,019 --> 01:53:36,610
a crap ton of them and we need to in so

1917
01:53:33,429 --> 01:53:41,199
much as possible ensure that at no time

1918
01:53:36,609 --> 01:53:44,139
is one of these F Mads not producing a

1919
01:53:41,198 --> 01:53:46,069
value we will actually use in the final

1920
01:53:44,139 --> 01:53:49,699
frame like the

1921
01:53:46,069 --> 01:53:52,698
fastest possible GPU performance is 100%

1922
01:53:49,698 --> 01:53:55,129
of the f mad circuits RF matting for

1923
01:53:52,698 --> 01:53:58,098
something that we actually will use in

1924
01:53:55,130 --> 01:54:00,440
the frame all the time for the entire

1925
01:53:58,099 --> 01:54:03,529
duration of the frame because that means

1926
01:54:00,439 --> 01:54:07,039
you literally did the maximum amount of

1927
01:54:03,529 --> 01:54:13,550
computation work for the visual that you

1928
01:54:07,039 --> 01:54:16,099
could write so as a result a GPU doesn't

1929
01:54:13,550 --> 01:54:18,139
think about things as trying to get the

1930
01:54:16,099 --> 01:54:21,199
fastest turnaround time for things like

1931
01:54:18,139 --> 01:54:23,989
a memory access what it wants to do is

1932
01:54:21,198 --> 01:54:27,859
just make sure that it can have enough

1933
01:54:23,988 --> 01:54:31,848
memory accesses in-flight at a time so

1934
01:54:27,859 --> 01:54:33,738
that it can be doing F Mads and by the

1935
01:54:31,849 --> 01:54:35,929
time it finishes doing the F Mads is

1936
01:54:33,738 --> 01:54:38,000
currently doing enough memory has come

1937
01:54:35,929 --> 01:54:43,789
back to start the next batch of F Mads

1938
01:54:38,000 --> 01:54:46,368
right so the entire pipeline is in the

1939
01:54:43,789 --> 01:54:48,920
GPU is not set up to render one triangle

1940
01:54:46,368 --> 01:54:51,679
as fast as possible it never cares how

1941
01:54:48,920 --> 01:54:53,569
fast a single triangle renders in fact a

1942
01:54:51,679 --> 01:54:56,260
single triangle could take the entire

1943
01:54:53,569 --> 01:55:00,828
frame to render and no one would care

1944
01:54:56,260 --> 01:55:03,440
all that matters is that at no time is

1945
01:55:00,828 --> 01:55:05,779
some actual multiplier unit sitting

1946
01:55:03,439 --> 01:55:07,549
around doing nothing and so they go

1947
01:55:05,779 --> 01:55:09,979
through extraordinary lengths to make

1948
01:55:07,550 --> 01:55:12,710
sure that they can pipeline everything

1949
01:55:09,979 --> 01:55:15,229
so that there's always work coming in

1950
01:55:12,710 --> 01:55:17,029
and so forward fetching that work is

1951
01:55:15,229 --> 01:55:19,399
incredibly important like you always

1952
01:55:17,029 --> 01:55:22,819
want to make sure that they've got tons

1953
01:55:19,399 --> 01:55:25,789
of things queued up to do because if

1954
01:55:22,819 --> 01:55:27,889
those queues ever run dry then an F mad

1955
01:55:25,789 --> 01:55:30,590
will go to fetch the next thing to do

1956
01:55:27,889 --> 01:55:33,949
and it will find nothing and that is

1957
01:55:30,590 --> 01:55:42,159
when you have now lost the battle right

1958
01:55:33,948 --> 01:55:42,158
to keep the GPU math pipe stuffed

1959
01:56:03,618 --> 01:56:08,908
why are desktops using non tiled method

1960
01:56:06,748 --> 01:56:11,488
well so there's a lot of reasons that

1961
01:56:08,908 --> 01:56:13,498
tiling might not be the best decision

1962
01:56:11,488 --> 01:56:19,318
depending on how complex your

1963
01:56:13,498 --> 01:56:24,298
architecture is right so let's take a

1964
01:56:19,319 --> 01:56:28,109
couple examples one is that you have to

1965
01:56:24,298 --> 01:56:31,679
reprocess things so on every tile

1966
01:56:28,109 --> 01:56:33,869
boundary any triangle that spans those

1967
01:56:31,679 --> 01:56:37,949
two tiles to people now process that

1968
01:56:33,868 --> 01:56:39,568
triangle right one on the one side one

1969
01:56:37,948 --> 01:56:41,908
on the other a triangle could span

1970
01:56:39,569 --> 01:56:45,229
several tiles many people are now doing

1971
01:56:41,908 --> 01:56:48,598
work on that triangle right

1972
01:56:45,229 --> 01:56:50,338
another reason is well some things can

1973
01:56:48,599 --> 01:56:52,439
be sawed tiled but some things can't for

1974
01:56:50,338 --> 01:56:53,939
example unordered access views well

1975
01:56:52,439 --> 01:56:56,149
these things are now writing to

1976
01:56:53,939 --> 01:56:59,849
arbitrary pieces so we don't really know

1977
01:56:56,149 --> 01:57:02,189
where they're targeting and so some

1978
01:56:59,849 --> 01:57:06,119
feature sets just don't lend themselves

1979
01:57:02,189 --> 01:57:08,729
to tiling right ray-tracing not tiled at

1980
01:57:06,118 --> 01:57:11,998
all like that feature is just a pure

1981
01:57:08,729 --> 01:57:14,789
like geometry walk right and so the more

1982
01:57:11,998 --> 01:57:17,128
general purpose the GPU work the GPU is

1983
01:57:14,788 --> 01:57:19,768
actually doing the less amenable it is

1984
01:57:17,128 --> 01:57:22,048
to tiling now the rasterizer is always

1985
01:57:19,769 --> 01:57:24,389
going to be somewhat tile based right

1986
01:57:22,048 --> 01:57:26,399
because we always know that when we

1987
01:57:24,389 --> 01:57:28,048
rasterize something eventually it gets

1988
01:57:26,399 --> 01:57:31,289
down to something we can bin into tiles

1989
01:57:28,048 --> 01:57:32,819
if we want to and in fact we need to do

1990
01:57:31,288 --> 01:57:35,238
that to determine what actually gets

1991
01:57:32,819 --> 01:57:38,459
drawn at all so there's always some

1992
01:57:35,238 --> 01:57:40,438
concept of a tile to a certain extent

1993
01:57:38,458 --> 01:57:44,219
but the degree to which it's really

1994
01:57:40,439 --> 01:57:47,909
tiled as a rendering architecture again

1995
01:57:44,219 --> 01:57:50,010
more heavyweight high-end superpower

1996
01:57:47,908 --> 01:57:52,408
GPUs that are designed for arbitrary

1997
01:57:50,010 --> 01:57:55,019
processing the amount to which they can

1998
01:57:52,408 --> 01:57:58,219
really rely on tiling to be efficient

1999
01:57:55,019 --> 01:58:01,229
goes down not to mention the fact that

2000
01:57:58,219 --> 01:58:03,689
tiling makes it so that you are only as

2001
01:58:01,229 --> 01:58:04,289
fast as your slowest tile is a way to

2002
01:58:03,689 --> 01:58:06,239
look at it

2003
01:58:04,288 --> 01:58:08,398
so things that expect to have really

2004
01:58:06,238 --> 01:58:10,188
concentrated areas of detail and then

2005
01:58:08,399 --> 01:58:11,390
less area of detail everywhere else that

2006
01:58:10,189 --> 01:58:13,400
all

2007
01:58:11,390 --> 01:58:15,110
so won't work very well with tiling

2008
01:58:13,399 --> 01:58:17,779
because tiling requires you have a

2009
01:58:15,109 --> 01:58:20,319
fairly flat equal level of detail across

2010
01:58:17,779 --> 01:58:22,479
the whole screen to a certain extent I

2011
01:58:20,319 --> 01:58:25,369
mean it's not exactly that but sort of

2012
01:58:22,479 --> 01:58:27,229
so tiling isn't a panacea it's just a

2013
01:58:25,369 --> 01:58:29,119
strategy and the degree to which that

2014
01:58:27,229 --> 01:58:30,709
strategy has payoffs for you depend a

2015
01:58:29,119 --> 01:58:32,539
lot on what your workloads look like and

2016
01:58:30,710 --> 01:58:40,730
what your GPU architecture is going to

2017
01:58:32,539 --> 01:58:42,350
be the new co D Battle Royale install

2018
01:58:40,729 --> 01:58:43,869
shader for better game performance when

2019
01:58:42,350 --> 01:58:46,250
being in the game

2020
01:58:43,869 --> 01:58:48,670
can you imagine what my I'm sorry I

2021
01:58:46,250 --> 01:58:54,430
don't really know what that means

2022
01:58:48,670 --> 01:58:59,270
it might not be installing the shaders

2023
01:58:54,430 --> 01:59:00,920
so we have to understand is a shader is

2024
01:58:59,270 --> 01:59:03,530
a program much like an executable as a

2025
01:59:00,920 --> 01:59:06,289
program yes but it can't ship

2026
01:59:03,529 --> 01:59:08,599
pre-compiled and the reason it can't

2027
01:59:06,289 --> 01:59:10,729
quite ship precompiled I shouldn't say

2028
01:59:08,600 --> 01:59:13,460
pre compiled but pre compiled and linked

2029
01:59:10,729 --> 01:59:17,000
and the reason it can't be shipped that

2030
01:59:13,460 --> 01:59:18,439
way is because the shader itself doesn't

2031
01:59:17,000 --> 01:59:21,050
know which hardware it's going to run on

2032
01:59:18,439 --> 01:59:22,489
so it might run on this particular piece

2033
01:59:21,050 --> 01:59:25,340
of Intel hardware might run on this

2034
01:59:22,489 --> 01:59:27,289
particular Nvidia hardware right so the

2035
01:59:25,340 --> 01:59:30,470
shaders have to actually be compiled for

2036
01:59:27,289 --> 01:59:32,930
the card the chip on which those shaders

2037
01:59:30,470 --> 01:59:35,630
are running if you have an engine that

2038
01:59:32,930 --> 01:59:37,070
has a you know a festival of shaders so

2039
01:59:35,630 --> 01:59:38,119
there's like a thousand shaders using

2040
01:59:37,069 --> 01:59:41,329
this game because that's the way they

2041
01:59:38,119 --> 01:59:42,769
did it right what normally happens when

2042
01:59:41,329 --> 01:59:43,819
you're playing the game is every time

2043
01:59:42,770 --> 01:59:46,070
one of these shaders needs to get

2044
01:59:43,819 --> 01:59:50,210
activated it has to get compiled first

2045
01:59:46,069 --> 01:59:51,769
right and that can actually cause your

2046
01:59:50,210 --> 01:59:53,569
machine to suffer a performance

2047
01:59:51,770 --> 01:59:55,640
degradation because now the like

2048
01:59:53,569 --> 02:00:00,079
compilation of that shader is actually

2049
01:59:55,640 --> 02:00:03,200
taking machine resources right so what

2050
02:00:00,079 --> 02:00:05,989
you can do if you care a lot about this

2051
02:00:03,199 --> 02:00:08,630
problem and have it is during your

2052
02:00:05,989 --> 02:00:11,510
install you can say Oh what is the GPU

2053
02:00:08,630 --> 02:00:13,310
that's currently there and let's go

2054
02:00:11,510 --> 02:00:14,360
ahead and ask the GPU driver that's

2055
02:00:13,310 --> 02:00:17,539
installed the machine right now to

2056
02:00:14,359 --> 02:00:21,049
compile these shaders now during install

2057
02:00:17,539 --> 02:00:23,659
and we'll just save what it produces as

2058
02:00:21,050 --> 02:00:24,680
the binary blob of the of the shader

2059
02:00:23,659 --> 02:00:27,529
right

2060
02:00:24,680 --> 02:00:29,360
and then at runtime when we need to

2061
02:00:27,529 --> 02:00:32,119
actor that shader we can just literally

2062
02:00:29,359 --> 02:00:33,799
hand it the precompiled optimized

2063
02:00:32,119 --> 02:00:37,698
version that it already had plenty of

2064
02:00:33,800 --> 02:00:39,020
time to chew on right and so I don't

2065
02:00:37,698 --> 02:00:40,369
know cuz I don't know anything about

2066
02:00:39,020 --> 02:00:42,110
Call of Duty I don't know anything about

2067
02:00:40,369 --> 02:00:45,469
the team I have no idea about the engine

2068
02:00:42,109 --> 02:00:47,839
and I've never even played it but one

2069
02:00:45,469 --> 02:00:50,329
thing that might be happening if someone

2070
02:00:47,840 --> 02:00:52,369
says it's installing shaders is that

2071
02:00:50,329 --> 02:00:54,260
might not be installing the shaders so

2072
02:00:52,369 --> 02:00:55,880
much as they are compiling the shaders

2073
02:00:54,260 --> 02:00:58,270
for you so that that doesn't have to

2074
02:00:55,880 --> 02:01:02,650
happen when the games actually running

2075
02:00:58,270 --> 02:01:02,650
but that's just a guess I have no idea

2076
02:01:17,479 --> 02:01:29,929
so if Albus no there are actually no

2077
02:01:21,739 --> 02:01:35,670
current ways of compiling shaders on any

2078
02:01:29,930 --> 02:01:40,500
API period what actually happens is that

2079
02:01:35,670 --> 02:01:44,489
you can pre-process a shader into an ir

2080
02:01:40,500 --> 02:01:48,000
and there's two of those so one is SP ir

2081
02:01:44,489 --> 02:01:51,420
v which is Vulcan in OpenGL and one is

2082
02:01:48,000 --> 02:01:54,119
like d 3d assembly language

2083
02:01:51,420 --> 02:01:58,529
quote-unquote right so you can do the

2084
02:01:54,119 --> 02:02:00,720
first phase of compilation which is like

2085
02:01:58,529 --> 02:02:05,069
the text processing and turning it into

2086
02:02:00,720 --> 02:02:07,590
like an intermediate representation but

2087
02:02:05,069 --> 02:02:12,210
there is no way to pre compile it all

2088
02:02:07,590 --> 02:02:16,470
the way and so what then has to happen

2089
02:02:12,210 --> 02:02:19,590
is say it even on OpenGL this is the way

2090
02:02:16,470 --> 02:02:21,600
it works when you're actually on the

2091
02:02:19,590 --> 02:02:24,440
machine in question when you're on the

2092
02:02:21,600 --> 02:02:28,950
actual GPU you're running on right now

2093
02:02:24,439 --> 02:02:30,989
then you can ask that compile this for

2094
02:02:28,949 --> 02:02:33,269
you and you can hand it the intermediate

2095
02:02:30,989 --> 02:02:36,359
rep or just the raw shader code it will

2096
02:02:33,270 --> 02:02:38,730
compile it for that card and then you

2097
02:02:36,359 --> 02:02:41,219
get back a binary blob that binary blob

2098
02:02:38,729 --> 02:02:44,129
will only work on literally that card

2099
02:02:41,220 --> 02:02:47,670
like yes it may work on another very

2100
02:02:44,130 --> 02:02:49,319
similar card maybe but the driver is

2101
02:02:47,670 --> 02:02:51,090
under no obligation to do that and it

2102
02:02:49,319 --> 02:02:54,170
certainly won't work on like a different

2103
02:02:51,090 --> 02:02:58,949
manufacturers card or anything right

2104
02:02:54,170 --> 02:03:00,659
does that make sense so OpenGL does have

2105
02:02:58,949 --> 02:03:02,609
a way to say pre compile this shader but

2106
02:03:00,659 --> 02:03:04,470
it pre compiles it for a card the card

2107
02:03:02,609 --> 02:03:06,779
you're running the opengl thing on right

2108
02:03:04,470 --> 02:03:09,030
now so you can't ship that shader it

2109
02:03:06,779 --> 02:03:11,789
wouldn't work it would fail on most

2110
02:03:09,029 --> 02:03:14,550
people's machines so that's why you need

2111
02:03:11,789 --> 02:03:17,250
to do it at install time now if you know

2112
02:03:14,550 --> 02:03:19,470
exactly what you're installing on so you

2113
02:03:17,250 --> 02:03:20,609
know like a PlayStation 4 well there you

2114
02:03:19,470 --> 02:03:23,480
can pre compile your shaders because

2115
02:03:20,609 --> 02:03:26,880
there's only one thing it could be right

2116
02:03:23,479 --> 02:03:29,129
but that's the minority of the cases

2117
02:03:26,880 --> 02:03:31,230
almost everything you ship on these days

2118
02:03:29,130 --> 02:03:34,340
you have to compile at the time you're

2119
02:03:31,229 --> 02:03:34,339
actually on the platform

2120
02:03:45,368 --> 02:03:51,698
Oh team R&amp;B I'm not sure what our frame

2121
02:03:49,149 --> 02:03:53,559
rate is right now it's it's you know we

2122
02:03:51,698 --> 02:03:55,000
still I'm still you know some thing we

2123
02:03:53,560 --> 02:04:00,789
have to do some pretty hard optimization

2124
02:03:55,000 --> 02:04:01,960
work based on where we're at because

2125
02:04:00,789 --> 02:04:06,310
we'd like to get that down to at least

2126
02:04:01,960 --> 02:04:07,960
30 milliseconds and you know for feeling

2127
02:04:06,310 --> 02:04:10,270
really saucy we want to get all the way

2128
02:04:07,960 --> 02:04:14,349
down to 15 so we're gonna have our work

2129
02:04:10,270 --> 02:04:17,469
cut out for us to be sure however you

2130
02:04:14,349 --> 02:04:21,670
know like I don't know that it's

2131
02:04:17,469 --> 02:04:25,270
impossible I think we you know I think

2132
02:04:21,670 --> 02:04:26,618
we've got a good shot at it so I also

2133
02:04:25,270 --> 02:04:29,560
don't know if we need the lighting

2134
02:04:26,618 --> 02:04:31,630
region to be this big it seems like

2135
02:04:29,560 --> 02:04:33,969
based on what I'm seeing that we could

2136
02:04:31,630 --> 02:04:36,819
shrink the region a bit and bias it

2137
02:04:33,969 --> 02:04:40,149
forward slightly and and probably narrow

2138
02:04:36,819 --> 02:04:43,090
the the region quite a bit like if we're

2139
02:04:40,149 --> 02:04:45,848
looking at this you know this whole area

2140
02:04:43,090 --> 02:04:48,279
back here is never visible right so we

2141
02:04:45,849 --> 02:04:52,539
could probably shift the area forward a

2142
02:04:48,279 --> 02:04:55,149
few voxels in Y and reduce it just in

2143
02:04:52,539 --> 02:04:57,939
general the total size because you know

2144
02:04:55,149 --> 02:05:02,039
looking at it it's just it's lighting a

2145
02:04:57,939 --> 02:05:04,629
lot more than it needs to so you know

2146
02:05:02,039 --> 02:05:06,698
could we get away with with a much

2147
02:05:04,630 --> 02:05:10,090
tighter voxel I think we probably could

2148
02:05:06,698 --> 02:05:12,189
and I don't know exactly what the you

2149
02:05:10,090 --> 02:05:15,550
know the tightness of that is and where

2150
02:05:12,189 --> 02:05:18,698
the artifacts would start coming in but

2151
02:05:15,550 --> 02:05:22,150
I could see something maybe even that

2152
02:05:18,698 --> 02:05:25,269
aggressively small as being

2153
02:05:22,149 --> 02:05:28,299
theoretically feasible if we tighten the

2154
02:05:25,270 --> 02:05:30,280
bounds up you know so looking at

2155
02:05:28,300 --> 02:05:32,079
something like this right and how that

2156
02:05:30,279 --> 02:05:33,849
Scrolls around again we would probably

2157
02:05:32,079 --> 02:05:36,969
want it to be biased forwards a little

2158
02:05:33,849 --> 02:05:40,779
bit rather than backwards so you know in

2159
02:05:36,969 --> 02:05:42,939
inside the Vox Minh corner in in the

2160
02:05:40,779 --> 02:05:45,130
shift here what we would generally want

2161
02:05:42,939 --> 02:05:47,948
to do is say like look whatever we're

2162
02:05:45,130 --> 02:05:51,069
getting for the camera offset here we're

2163
02:05:47,948 --> 02:05:52,569
gonna have a Y bias where the bias for

2164
02:05:51,069 --> 02:05:55,809
the look like where the the Y is

2165
02:05:52,569 --> 02:05:57,519
actually located relative to the camera

2166
02:05:55,810 --> 02:05:58,870
center it's always been a shifted like

2167
02:05:57,520 --> 02:06:00,550
up a little bit

2168
02:05:58,869 --> 02:06:03,609
so you know we're gonna go like two

2169
02:06:00,550 --> 02:06:07,570
cells forward or something like this so

2170
02:06:03,609 --> 02:06:08,829
it's always just a little bit up and so

2171
02:06:07,569 --> 02:06:10,000
that it has a little bit more look ahead

2172
02:06:08,829 --> 02:06:12,819
but that's just because of the way the

2173
02:06:10,000 --> 02:06:14,470
perspective is shifted right and if we

2174
02:06:12,819 --> 02:06:15,939
did something like that then I'm not

2175
02:06:14,470 --> 02:06:19,720
convinced we couldn't get away with

2176
02:06:15,939 --> 02:06:22,299
something like this small again it's

2177
02:06:19,720 --> 02:06:24,100
it's hard to say exactly but you know it

2178
02:06:22,300 --> 02:06:26,020
doesn't feel like it would be a stretch

2179
02:06:24,100 --> 02:06:30,510
to say that that's a tight enough bounds

2180
02:06:26,020 --> 02:06:34,390
on the voxel right and and and who knows

2181
02:06:30,510 --> 02:06:37,300
we'll see I guess right and if you look

2182
02:06:34,390 --> 02:06:40,450
at how fast that's going that's already

2183
02:06:37,300 --> 02:06:42,550
at 30 frames a second basically and so

2184
02:06:40,449 --> 02:06:44,500
if we figure we maybe can squeeze some

2185
02:06:42,550 --> 02:06:48,130
more performance out of the way that

2186
02:06:44,500 --> 02:06:52,239
it's working I could see I could see us

2187
02:06:48,130 --> 02:06:55,829
getting to to a reasonable 30 frames a

2188
02:06:52,239 --> 02:07:01,199
second or 60 frames a second hit there

2189
02:06:55,829 --> 02:07:01,199
without a lot of stress

2190
02:07:13,539 --> 02:07:16,850
could you recommend some resources about

2191
02:07:15,529 --> 02:07:18,739
GP architectural strategies to dig

2192
02:07:16,850 --> 02:07:20,329
deeper not really I don't know where

2193
02:07:18,739 --> 02:07:23,649
those would be you'd probably have to go

2194
02:07:20,329 --> 02:07:25,729
look at fob Ian's blog I don't know

2195
02:07:23,649 --> 02:07:28,670
could be easier to not have the

2196
02:07:25,729 --> 02:07:30,439
submission - fine well the problem is I

2197
02:07:28,670 --> 02:07:32,270
don't want the framerate to vary based

2198
02:07:30,439 --> 02:07:39,710
on where you are so I'd rather have the

2199
02:07:32,270 --> 02:07:40,910
lighting be a fairly fixed cost what do

2200
02:07:39,710 --> 02:07:42,920
you think about the new kind of pipeline

2201
02:07:40,909 --> 02:07:46,069
that Nvidia is pushing with mess mesh

2202
02:07:42,920 --> 02:07:48,230
and tasked shaders I think it makes a

2203
02:07:46,069 --> 02:07:50,000
lot of sense because I think GPUs and

2204
02:07:48,229 --> 02:07:51,379
CPUs are kind of converging to a certain

2205
02:07:50,000 --> 02:07:53,180
extent so I think moving to something

2206
02:07:51,380 --> 02:07:56,319
more like a CPU models probably where

2207
02:07:53,180 --> 02:07:56,320
that has to go long term

2208
02:08:00,699 --> 02:08:05,960
Chimere and B if we had a major light

2209
02:08:03,289 --> 02:08:08,449
source from behind and we had say large

2210
02:08:05,960 --> 02:08:10,189
treehouse behind us if this light box is

2211
02:08:08,449 --> 02:08:14,949
too small would it mean we would not get

2212
02:08:10,189 --> 02:08:19,549
the shadow of whatever is behind us hmm

2213
02:08:14,949 --> 02:08:22,399
no so the lighting as it exists now it

2214
02:08:19,550 --> 02:08:24,560
computes probes in certain locations but

2215
02:08:22,399 --> 02:08:26,000
the lights can be wherever you want them

2216
02:08:24,560 --> 02:08:28,430
to be and the shadows can cast from

2217
02:08:26,000 --> 02:08:30,619
wherever you want them to be so all it

2218
02:08:28,430 --> 02:08:33,110
would mean is you wouldn't get secondary

2219
02:08:30,619 --> 02:08:35,539
lighting from over there because the

2220
02:08:33,109 --> 02:08:42,949
secondary lighting is only produced when

2221
02:08:35,539 --> 02:08:45,319
you grab something from a when you grab

2222
02:08:42,949 --> 02:08:48,579
something from a secondary bounce that

2223
02:08:45,319 --> 02:08:51,469
requires you to be inside the voxel so

2224
02:08:48,579 --> 02:08:54,170
secondary bounce lighting from outside

2225
02:08:51,470 --> 02:08:55,460
the region will not contribute however I

2226
02:08:54,170 --> 02:08:57,649
don't know to what extent that would

2227
02:08:55,460 --> 02:09:00,560
ever affect us because secondary bounce

2228
02:08:57,649 --> 02:09:01,729
lighting is fairly weak so the chances

2229
02:09:00,560 --> 02:09:03,440
that you could actually have a

2230
02:09:01,729 --> 02:09:05,919
significant difference there it seems

2231
02:09:03,439 --> 02:09:05,919
pretty low

2232
02:09:17,380 --> 02:09:21,739
is it possible to make 2d the 2d trees

2233
02:09:20,300 --> 02:09:33,010
cast shadows in the shape of a tree on

2234
02:09:21,738 --> 02:09:33,009
the ground so I guess the answer is like

2235
02:09:34,510 --> 02:09:43,539
the answer is like yes and no it's

2236
02:09:39,979 --> 02:09:46,789
possible to cast to have the 2d tree

2237
02:09:43,539 --> 02:09:50,350
cast a shadow on the ground that will

2238
02:09:46,789 --> 02:10:00,649
look exactly like the tree actually is a

2239
02:09:50,350 --> 02:10:05,539
2d cut out card right so it will not

2240
02:10:00,649 --> 02:10:06,829
look right at all and there's literally

2241
02:10:05,539 --> 02:10:09,050
nothing you can do to make it look right

2242
02:10:06,829 --> 02:10:11,029
because the place where the tree and its

2243
02:10:09,050 --> 02:10:13,279
shadow meet you can't really orient that

2244
02:10:11,029 --> 02:10:17,029
to look proper probably you could try to

2245
02:10:13,279 --> 02:10:18,619
warp the tree a little bit right but the

2246
02:10:17,029 --> 02:10:20,689
problem that you fundamentally have is

2247
02:10:18,619 --> 02:10:23,050
like the same problem that we have in

2248
02:10:20,689 --> 02:10:25,549
rendering like you know when you look at

2249
02:10:23,050 --> 02:10:26,900
what would happen if I started to try

2250
02:10:25,550 --> 02:10:28,430
and look at these trees from a different

2251
02:10:26,899 --> 02:10:30,769
angle you see what they look like right

2252
02:10:28,430 --> 02:10:32,630
there just cards sitting there and so

2253
02:10:30,770 --> 02:10:34,820
we're orienting them at the camera to

2254
02:10:32,630 --> 02:10:37,369
make them look okay but the light isn't

2255
02:10:34,819 --> 02:10:39,769
gonna come from a different angle mm-hmm

2256
02:10:37,369 --> 02:10:43,880
and so if you want to cast a shadow

2257
02:10:39,770 --> 02:10:47,150
you'd have to like fly the sprite down

2258
02:10:43,880 --> 02:10:49,880
on the shadow and then you'd have the

2259
02:10:47,149 --> 02:10:52,519
kind of like figure out what to do at

2260
02:10:49,880 --> 02:10:55,219
the base so that it didn't produce a

2261
02:10:52,520 --> 02:10:57,650
nossa I mean it's it's ugly so is why we

2262
02:10:55,219 --> 02:10:59,270
don't do hard shadows that's why we're

2263
02:10:57,649 --> 02:11:02,269
not doing hard shadows in this game is

2264
02:10:59,270 --> 02:11:08,780
because hard shadows on sprites I don't

2265
02:11:02,270 --> 02:11:10,460
think they look very good so with

2266
02:11:08,779 --> 02:11:13,779
solving the lighting wrapping in X

2267
02:11:10,460 --> 02:11:17,029
reduced CPU load to stiffening sent I

2268
02:11:13,779 --> 02:11:21,170
don't think light wrapping in X has

2269
02:11:17,029 --> 02:11:22,279
anything to do with CPU load we consider

2270
02:11:21,170 --> 02:11:24,199
using computers for some of these

2271
02:11:22,279 --> 02:11:25,789
lighting calculations not really because

2272
02:11:24,199 --> 02:11:28,309
we're trying to keep it

2273
02:11:25,789 --> 02:11:30,019
fairly straightforward and not using

2274
02:11:28,310 --> 02:11:32,570
compute shaders compute shaders almost

2275
02:11:30,020 --> 02:11:35,090
never work also they're extremely buggy

2276
02:11:32,569 --> 02:11:37,130
and error-prone so you invite a lot of

2277
02:11:35,090 --> 02:11:40,190
compatibility issues if you use compute

2278
02:11:37,130 --> 02:11:41,720
shaders and try to ship that so if we

2279
02:11:40,189 --> 02:11:45,109
were going to accelerate the lighting

2280
02:11:41,720 --> 02:11:47,390
mm-hmm I would try to phrase it as a

2281
02:11:45,109 --> 02:11:49,729
straightforward shader meaning something

2282
02:11:47,390 --> 02:11:56,900
that can be done as a pixel shader not

2283
02:11:49,729 --> 02:11:57,979
as a as a compute trader and to be clear

2284
02:11:56,899 --> 02:12:00,889
I don't think you would need a computer

2285
02:11:57,979 --> 02:12:03,259
shader because in order to do generation

2286
02:12:00,890 --> 02:12:04,640
of the voxel I shouldn't really need to

2287
02:12:03,260 --> 02:12:06,320
use a computer because you know you're

2288
02:12:04,640 --> 02:12:08,060
updating each individual voxel piece at

2289
02:12:06,319 --> 02:12:10,929
a time you shouldn't need art the

2290
02:12:08,060 --> 02:12:13,010
arbitrary nature of the computer really

2291
02:12:10,930 --> 02:12:15,200
so if we were gonna move this to the GPU

2292
02:12:13,010 --> 02:12:16,789
I wouldn't use a computer unless I found

2293
02:12:15,199 --> 02:12:19,729
I really somehow couldn't do it

2294
02:12:16,789 --> 02:12:27,949
otherwise all right I'm gonna wrap it up

2295
02:12:19,729 --> 02:12:29,089
okay thank you for joining me for in the

2296
02:12:27,949 --> 02:12:30,710
episode of handmade hero it's been a

2297
02:12:29,090 --> 02:12:32,360
pleasure coding with you as always if

2298
02:12:30,710 --> 02:12:33,529
you want to following series at home you

2299
02:12:32,359 --> 02:12:35,929
can always peer to the game on handmade

2300
02:12:33,529 --> 02:12:37,789
hero org and it comes to source code so

2301
02:12:35,930 --> 02:12:40,369
you can try out your own stuff if you

2302
02:12:37,789 --> 02:12:41,630
want to experiment with it I'll be back

2303
02:12:40,369 --> 02:12:45,380
here next week when we'll look at

2304
02:12:41,630 --> 02:12:48,230
optimizing the raycasting engine and

2305
02:12:45,380 --> 02:12:51,470
trying to get it up to a faster speed

2306
02:12:48,229 --> 02:12:54,019
and maybe more raised per second and

2307
02:12:51,470 --> 02:12:55,340
just in general so even if you want to

2308
02:12:54,020 --> 02:12:56,600
stay at something like 30 frames a

2309
02:12:55,340 --> 02:12:59,150
second we can at least improve the

2310
02:12:56,600 --> 02:13:01,310
quality of the lighting and so on using

2311
02:12:59,149 --> 02:13:03,259
more rays and then from there we'll just

2312
02:13:01,310 --> 02:13:04,340
move into lighting quality territory and

2313
02:13:03,260 --> 02:13:06,829
try to figure out how to make sure that

2314
02:13:04,340 --> 02:13:08,989
our lighting is always making sense and

2315
02:13:06,829 --> 02:13:10,010
that'll require some analysis of all the

2316
02:13:08,989 --> 02:13:11,630
things we're computing to make sure

2317
02:13:10,010 --> 02:13:13,280
we're not doing anything that adds

2318
02:13:11,630 --> 02:13:15,920
energy to the system in the wrong way

2319
02:13:13,279 --> 02:13:17,659
and things like that that's it for now

2320
02:13:15,920 --> 02:13:19,310
hope see you back here next week until

2321
02:13:17,659 --> 02:13:20,750
then have fun program everyone and I'll

2322
02:13:19,310 --> 02:13:23,170
see you on the Internet techies

2323
02:13:20,750 --> 02:13:23,170
everybody

