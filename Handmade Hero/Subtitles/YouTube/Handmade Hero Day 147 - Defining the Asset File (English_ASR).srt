1
00:00:01,700 --> 00:00:05,879
okay hello everyone and welcome to hand

2
00:00:04,620 --> 00:00:09,359
made here on the show recode complete

3
00:00:05,878 --> 00:00:12,718
game live on stream on Twitch no engines

4
00:00:09,359 --> 00:00:15,570
no libraries we show absolutely all of

5
00:00:12,718 --> 00:00:21,000
the code that is necessary to run a game

6
00:00:15,570 --> 00:00:24,118
in a modern setting ladies and gentlemen

7
00:00:21,000 --> 00:00:29,099
I have been away for a week and a half

8
00:00:24,118 --> 00:00:33,350
due to unforeseen circumstances and so

9
00:00:29,099 --> 00:00:37,799
today I think we have sort of the the

10
00:00:33,350 --> 00:00:40,379
highly dubious situation of will I even

11
00:00:37,799 --> 00:00:42,000
remember what the code is doing right

12
00:00:40,378 --> 00:00:44,670
you know it's been it's been paged out I

13
00:00:42,000 --> 00:00:49,439
obviously work on I have a full-time job

14
00:00:44,670 --> 00:00:50,969
so you know I don't I I don't only get

15
00:00:49,439 --> 00:00:52,468
to think about handmade hero I have to

16
00:00:50,969 --> 00:00:55,590
actually be working on other things as

17
00:00:52,469 --> 00:00:58,379
well so it's going to be rather

18
00:00:55,590 --> 00:01:00,750
interesting now when we left off on the

19
00:00:58,378 --> 00:01:02,488
last episode I was going to what i did

20
00:01:00,750 --> 00:01:03,780
was i basically showed how you end up

21
00:01:02,488 --> 00:01:05,459
with this iterative precision problem

22
00:01:03,780 --> 00:01:07,890
and i showed how to fix it by doing back

23
00:01:05,459 --> 00:01:09,989
calculation sort of implicitly

24
00:01:07,890 --> 00:01:12,450
calculating things instead of doing them

25
00:01:09,989 --> 00:01:15,000
as what's actually called a digital

26
00:01:12,450 --> 00:01:16,920
differential analyzer I believe sort of

27
00:01:15,000 --> 00:01:18,540
the idea of adding things incrementally

28
00:01:16,920 --> 00:01:19,710
so we kind of covered that and I was

29
00:01:18,540 --> 00:01:21,118
going to say okay we should probably

30
00:01:19,709 --> 00:01:24,179
also do volume that way and I was going

31
00:01:21,118 --> 00:01:26,250
to do that the next day we don't really

32
00:01:24,180 --> 00:01:27,570
need to do that now we have it to do in

33
00:01:26,250 --> 00:01:28,920
there if we want to fix that with the

34
00:01:27,569 --> 00:01:30,239
volume we can but it doesn't really

35
00:01:28,920 --> 00:01:32,070
cause us any problems we're not actually

36
00:01:30,239 --> 00:01:33,868
hear any problems with it right in the

37
00:01:32,069 --> 00:01:35,399
San mixer so I think it would probably

38
00:01:33,868 --> 00:01:37,739
be better do today since we're starting

39
00:01:35,400 --> 00:01:39,329
a new week after being out for so long I

40
00:01:37,739 --> 00:01:41,250
think we better is just to start

41
00:01:39,328 --> 00:01:42,750
something fresh and just assume that the

42
00:01:41,250 --> 00:01:44,909
sound mixer is good enough for now and

43
00:01:42,750 --> 00:01:47,280
obviously as with all of the parts of

44
00:01:44,909 --> 00:01:48,719
the engine if we come to a point in the

45
00:01:47,280 --> 00:01:50,280
game development where we find that the

46
00:01:48,719 --> 00:01:52,289
engine does not do something we need we

47
00:01:50,280 --> 00:01:54,269
will just go ahead and revise it at that

48
00:01:52,290 --> 00:01:55,920
point and that's generally a good idea

49
00:01:54,269 --> 00:01:58,140
anyway because you don't want to go

50
00:01:55,920 --> 00:01:59,700
spending a lot of times implementing

51
00:01:58,140 --> 00:02:01,500
engine features that you don't ever use

52
00:01:59,700 --> 00:02:03,659
or implementing engine features in a way

53
00:02:01,500 --> 00:02:06,269
that you don't need and that's why of

54
00:02:03,659 --> 00:02:08,310
course I always say you want do things

55
00:02:06,269 --> 00:02:10,709
in an exploratory fashion so you kind of

56
00:02:08,310 --> 00:02:12,360
only do things as you need them and that

57
00:02:10,709 --> 00:02:14,310
way guarantees that you're not spending

58
00:02:12,360 --> 00:02:16,530
a ton of time on stuff that

59
00:02:14,310 --> 00:02:18,479
doesn't need to happen or spending a

60
00:02:16,530 --> 00:02:19,919
bunch of time on something and you make

61
00:02:18,479 --> 00:02:23,459
it in a way that turns out to not

62
00:02:19,919 --> 00:02:26,129
actually be appropriate for the task and

63
00:02:23,459 --> 00:02:28,229
so we've tried very hard to take that

64
00:02:26,129 --> 00:02:32,250
approach as we've been sort of building

65
00:02:28,229 --> 00:02:34,829
our engine here exploring things and

66
00:02:32,250 --> 00:02:36,959
pulling in new things as we go only when

67
00:02:34,830 --> 00:02:39,360
we can kind of see a real use case in a

68
00:02:36,959 --> 00:02:41,159
real way in which they can occur and try

69
00:02:39,360 --> 00:02:42,360
to keep things simple in cases where we

70
00:02:41,159 --> 00:02:43,949
don't feel like we get have enough

71
00:02:42,360 --> 00:02:46,590
information because we just don't want

72
00:02:43,949 --> 00:02:48,869
to rattle on something that may turn out

73
00:02:46,590 --> 00:02:51,750
to be nothing or unimportant to the

74
00:02:48,870 --> 00:02:54,000
final game at the end of the day it's

75
00:02:51,750 --> 00:02:56,280
worth noting that no matter what you do

76
00:02:54,000 --> 00:02:58,318
when you're programming when you're

77
00:02:56,280 --> 00:03:00,780
making a game every hour that you spend

78
00:02:58,318 --> 00:03:03,000
programming is going towards something

79
00:03:00,780 --> 00:03:05,640
and if that something doesn't end up in

80
00:03:03,000 --> 00:03:08,610
the final game you wasted that our and

81
00:03:05,639 --> 00:03:10,469
so it really does pay to make sure that

82
00:03:08,610 --> 00:03:12,870
when you are doing your programming you

83
00:03:10,469 --> 00:03:14,580
try to do it in a way such that you

84
00:03:12,870 --> 00:03:15,840
don't spend a lot of time working on

85
00:03:14,580 --> 00:03:17,730
things that never see the light of day

86
00:03:15,840 --> 00:03:20,310
and again that's sort of what we're

87
00:03:17,729 --> 00:03:22,289
trying to do here so with that in mind

88
00:03:20,310 --> 00:03:24,629
what I'd like to do is get back to the

89
00:03:22,289 --> 00:03:26,189
asset system we wrote the sound mixer

90
00:03:24,629 --> 00:03:28,979
just so you can see what the needs might

91
00:03:26,189 --> 00:03:31,259
be for the asset system and so we will

92
00:03:28,979 --> 00:03:32,969
probably come at the sound system it

93
00:03:31,259 --> 00:03:34,739
from another direction a little later on

94
00:03:32,969 --> 00:03:36,389
when we actually go to add sound to the

95
00:03:34,739 --> 00:03:37,829
game in some kind of meaningful way

96
00:03:36,389 --> 00:03:39,599
where we want to actually play sound

97
00:03:37,829 --> 00:03:41,189
ambient sounds and some music and stuff

98
00:03:39,599 --> 00:03:42,810
we'll put that into the game and then

99
00:03:41,189 --> 00:03:44,039
we'll revisit the sound mixer and see

100
00:03:42,810 --> 00:03:46,650
are there things that we need to change

101
00:03:44,039 --> 00:03:49,650
so we're sort of looking at it if you

102
00:03:46,650 --> 00:03:50,939
will from two different sides and the

103
00:03:49,650 --> 00:03:53,489
side that we need to look at right now

104
00:03:50,939 --> 00:03:56,459
was what does the sound mixer probably

105
00:03:53,489 --> 00:03:57,930
need from the asset system right and so

106
00:03:56,459 --> 00:04:00,450
that way we can finish up our asset

107
00:03:57,930 --> 00:04:02,040
system later on when we go look at the

108
00:04:00,449 --> 00:04:04,169
sandwich for me direction will be what

109
00:04:02,039 --> 00:04:06,090
does the game code want from the sound

110
00:04:04,169 --> 00:04:08,129
system and what we'll do there is we

111
00:04:06,090 --> 00:04:09,689
probably won't change the sound mixer

112
00:04:08,129 --> 00:04:11,609
much because obviously it's it's pretty

113
00:04:09,689 --> 00:04:12,840
straightforward how it works and we now

114
00:04:11,609 --> 00:04:14,370
know that it lines up with the asset mix

115
00:04:12,840 --> 00:04:16,470
your well so we like that but the

116
00:04:14,370 --> 00:04:19,319
interface to the sound mixer like the

117
00:04:16,470 --> 00:04:20,789
playing sound struck since that's a that

118
00:04:19,319 --> 00:04:22,469
will probably change dramatically

119
00:04:20,788 --> 00:04:25,769
because really right now that's only the

120
00:04:22,470 --> 00:04:28,050
the very minor sort of layer that the

121
00:04:25,769 --> 00:04:29,848
simplest possible thing we could put two

122
00:04:28,050 --> 00:04:33,120
have sounds play that's what we put in

123
00:04:29,848 --> 00:04:34,769
place there right and so we will have a

124
00:04:33,120 --> 00:04:37,199
chance to kind of revisit the mixer

125
00:04:34,769 --> 00:04:38,639
again a little leader and not maybe so

126
00:04:37,199 --> 00:04:41,189
much about what the mixer is actually

127
00:04:38,639 --> 00:04:43,069
doing in the actual mixing code which is

128
00:04:41,189 --> 00:04:46,288
probably fine mostly the way it is now

129
00:04:43,069 --> 00:04:48,689
but in terms of how we might want to

130
00:04:46,288 --> 00:04:50,759
drive that mixing code we will probably

131
00:04:48,689 --> 00:04:52,408
build that out a little bit more but

132
00:04:50,759 --> 00:04:54,210
again don't want to do that right now

133
00:04:52,408 --> 00:04:56,279
because the better time to do that would

134
00:04:54,209 --> 00:04:57,719
be when we actually go to add a little

135
00:04:56,279 --> 00:05:00,478
bit of a soundscape to the game because

136
00:04:57,720 --> 00:05:04,849
that's the time when we will actually

137
00:05:00,478 --> 00:05:04,848
know what those things should look like

138
00:05:06,348 --> 00:05:13,019
all right so fill some philosophy out of

139
00:05:10,649 --> 00:05:14,878
the way I'd like to go take a look at

140
00:05:13,019 --> 00:05:17,878
the asset system now and sort of page

141
00:05:14,879 --> 00:05:19,770
that back in to our brains and talk

142
00:05:17,879 --> 00:05:22,199
about what we want that to do and maybe

143
00:05:19,769 --> 00:05:24,990
start kind of writing some code that

144
00:05:22,199 --> 00:05:28,500
will start to push the test code that we

145
00:05:24,990 --> 00:05:30,810
have right now out into a sort of a

146
00:05:28,500 --> 00:05:33,839
place where we can start to define that

147
00:05:30,810 --> 00:05:35,278
asset system okay before I start in case

148
00:05:33,839 --> 00:05:36,810
we do get to programming today because

149
00:05:35,278 --> 00:05:37,918
on blackboard for a little bit to talk

150
00:05:36,810 --> 00:05:39,120
about what we're going to do and give

151
00:05:37,918 --> 00:05:40,288
you some of the background of it as I

152
00:05:39,120 --> 00:05:43,319
always do when we start a new section

153
00:05:40,288 --> 00:05:45,240
but if we attend if we get through that

154
00:05:43,319 --> 00:05:47,908
and we start programming today today is

155
00:05:45,240 --> 00:05:48,900
that day 147 which means that if you're

156
00:05:47,908 --> 00:05:51,000
trying to follow along home with the

157
00:05:48,899 --> 00:05:53,339
source code if you pre-order the game I

158
00:05:51,000 --> 00:05:54,329
am a hero org and you want to start with

159
00:05:53,339 --> 00:05:58,019
source code I'm starting with today

160
00:05:54,329 --> 00:05:59,818
unpack day 146 is source code that is

161
00:05:58,019 --> 00:06:01,709
what I am working with and that is what

162
00:05:59,819 --> 00:06:04,289
you will want to work with if you want

163
00:06:01,709 --> 00:06:07,138
to match my code all right so let's go

164
00:06:04,288 --> 00:06:09,538
ahead and talk about the asset system a

165
00:06:07,139 --> 00:06:11,728
little bit and what we want to have

166
00:06:09,538 --> 00:06:14,459
happen here because we've done the work

167
00:06:11,728 --> 00:06:15,628
now of defining sort of how the asset

168
00:06:14,459 --> 00:06:17,370
system works you know what i should do

169
00:06:15,629 --> 00:06:20,629
by the way let's take it let's zoom out

170
00:06:17,370 --> 00:06:23,430
and just look at what this looks like

171
00:06:20,629 --> 00:06:25,400
it's like very long lines and it kind of

172
00:06:23,430 --> 00:06:27,629
goes oops and then it kind of goes

173
00:06:25,399 --> 00:06:30,598
anything i wonder if we should start a

174
00:06:27,629 --> 00:06:32,270
new like branch of this tree it's right

175
00:06:30,598 --> 00:06:35,009
you can kind of see it's this long

176
00:06:32,269 --> 00:06:37,129
skinny thing and it just goes down and

177
00:06:35,009 --> 00:06:39,598
down and down like it's crazy right I

178
00:06:37,129 --> 00:06:41,399
wonder if we should just start a new one

179
00:06:39,598 --> 00:06:44,099
somewhere up here

180
00:06:41,399 --> 00:06:46,739
and like kind of start a new like branch

181
00:06:44,100 --> 00:06:49,530
going downwards so here it is right

182
00:06:46,740 --> 00:06:52,620
here's here's some of this stuff it's

183
00:06:49,529 --> 00:06:54,719
kind of funny I don't know I don't even

184
00:06:52,620 --> 00:06:56,280
know why we save all this but I'm going

185
00:06:54,720 --> 00:06:58,949
to go ahead and start it like right here

186
00:06:56,279 --> 00:07:01,559
or maybe like right here this is going

187
00:06:58,949 --> 00:07:03,538
to be it so alright so I come in here

188
00:07:01,560 --> 00:07:05,939
and let's make this up to sort of the

189
00:07:03,538 --> 00:07:07,319
size that it would be there we go de74

190
00:07:05,939 --> 00:07:10,769
and I'm just going to come over here

191
00:07:07,319 --> 00:07:17,930
right and there's going to be my my new

192
00:07:10,769 --> 00:07:22,019
day ok so here is day 1 47 right alright

193
00:07:17,930 --> 00:07:23,668
so this is asset files we already you

194
00:07:22,019 --> 00:07:24,779
know I'm pretty happy with our ask that

195
00:07:23,668 --> 00:07:28,769
systems actually kind of cool I think

196
00:07:24,779 --> 00:07:30,388
already the tag based matching stuff is

197
00:07:28,769 --> 00:07:31,560
pretty sweet in my opinion like I really

198
00:07:30,389 --> 00:07:32,370
kind of like the way that worked out and

199
00:07:31,560 --> 00:07:36,478
I think it's going to be interesting to

200
00:07:32,370 --> 00:07:38,788
see how it goes going forwards but what

201
00:07:36,478 --> 00:07:41,399
we need to do now is take this you know

202
00:07:38,788 --> 00:07:43,168
to sort of completion and say well we've

203
00:07:41,399 --> 00:07:44,519
got two things we got to do we've got to

204
00:07:43,168 --> 00:07:46,649
figure out how we want to define our

205
00:07:44,519 --> 00:07:48,180
asset files and then the other thing we

206
00:07:46,649 --> 00:07:50,370
have to do is figure out how we're going

207
00:07:48,180 --> 00:07:52,769
to deal with memory management in the

208
00:07:50,370 --> 00:07:55,620
asset system because like i said the

209
00:07:52,769 --> 00:07:59,370
asset system is kind of a special case

210
00:07:55,620 --> 00:08:01,259
really in our system of we want it to be

211
00:07:59,370 --> 00:08:03,538
able to sort of act like a virtual

212
00:08:01,259 --> 00:08:04,709
memory system right kind of like the

213
00:08:03,538 --> 00:08:06,418
operating systems virtual memory system

214
00:08:04,709 --> 00:08:08,698
only with more predictability and more

215
00:08:06,418 --> 00:08:10,799
control for us and what so what we

216
00:08:08,699 --> 00:08:14,699
wanted to be able to do is when in the

217
00:08:10,800 --> 00:08:17,038
game we are working with assets what we

218
00:08:14,699 --> 00:08:22,169
want to be able to do is we want to be

219
00:08:17,038 --> 00:08:24,509
able to sort of have a potentially giant

220
00:08:22,168 --> 00:08:26,549
asset footprint like you know 16

221
00:08:24,509 --> 00:08:29,459
gigabytes uncompressed of assets or

222
00:08:26,550 --> 00:08:31,199
something like this right but if the you

223
00:08:29,459 --> 00:08:33,059
know user only has like two gigabytes of

224
00:08:31,199 --> 00:08:35,009
memory or something or four gigabytes of

225
00:08:33,059 --> 00:08:36,899
memory we want to take you know however

226
00:08:35,009 --> 00:08:39,718
much of that we're affording to assets

227
00:08:36,899 --> 00:08:43,468
and use that as sort of like a scattered

228
00:08:39,719 --> 00:08:45,510
window into all of the assets that we

229
00:08:43,469 --> 00:08:47,459
have and and make sure that we're only

230
00:08:45,509 --> 00:08:50,100
pulling in the ones that we need for the

231
00:08:47,458 --> 00:08:54,088
situation of the game as it stands right

232
00:08:50,100 --> 00:08:58,230
now will we ever actually

233
00:08:54,089 --> 00:08:59,670
use that functionality I don't know it's

234
00:08:58,230 --> 00:09:00,720
definitely the sort of thing that I'm

235
00:08:59,669 --> 00:09:02,338
sort of showing you because it's

236
00:09:00,720 --> 00:09:04,170
something that I want to teach and it's

237
00:09:02,339 --> 00:09:05,819
something that you often do want so

238
00:09:04,169 --> 00:09:08,248
we're going to write the asset system as

239
00:09:05,818 --> 00:09:09,899
if it will need to page but you know

240
00:09:08,249 --> 00:09:12,209
will we ever necessarily get to the

241
00:09:09,899 --> 00:09:14,068
number two to the size of assets where

242
00:09:12,208 --> 00:09:15,628
this becomes a problem that's not

243
00:09:14,068 --> 00:09:17,639
necessarily clear right we may end up

244
00:09:15,629 --> 00:09:20,009
only having four gigabytes of assets

245
00:09:17,639 --> 00:09:23,970
total I'm compressed or something like

246
00:09:20,009 --> 00:09:25,139
this and so the game never need could

247
00:09:23,970 --> 00:09:26,490
you know and everyone who runs the game

248
00:09:25,139 --> 00:09:30,149
has eight gigabytes of memory I don't

249
00:09:26,490 --> 00:09:31,499
know right they could add but again you

250
00:09:30,149 --> 00:09:33,328
know I kind of want to show this because

251
00:09:31,499 --> 00:09:36,028
I want the game to be scalable in that

252
00:09:33,328 --> 00:09:38,370
way and so we're going to say that one

253
00:09:36,028 --> 00:09:43,049
of our goals is to make it so that what

254
00:09:38,370 --> 00:09:45,120
we can simply set a working set size and

255
00:09:43,049 --> 00:09:48,299
then no matter what that working set

256
00:09:45,120 --> 00:09:50,698
sizes you can have as many assets as you

257
00:09:48,299 --> 00:09:52,740
ever want if the artist pile in 64 gigs

258
00:09:50,698 --> 00:09:54,448
of assets as long as you've got

259
00:09:52,740 --> 00:09:58,409
somewhere to store them it will work

260
00:09:54,448 --> 00:10:00,659
right so that's one thing we have to

261
00:09:58,409 --> 00:10:02,698
handle that is the harder of the two

262
00:10:00,659 --> 00:10:04,318
things the simpler of the two things

263
00:10:02,698 --> 00:10:06,958
that we need to handle is the asset

264
00:10:04,318 --> 00:10:08,338
files they're a little related but right

265
00:10:06,958 --> 00:10:10,049
now I just want to focus on the asset

266
00:10:08,339 --> 00:10:11,790
file part of it and what that is is

267
00:10:10,049 --> 00:10:13,889
that's moving the thing that we've got

268
00:10:11,789 --> 00:10:16,438
right now which is a collection of sort

269
00:10:13,889 --> 00:10:19,259
of random bitmaps on the drive random

270
00:10:16,438 --> 00:10:20,938
wave files on the drive and a little bit

271
00:10:19,259 --> 00:10:22,860
of code in the game that says which

272
00:10:20,938 --> 00:10:25,049
one's of those match to which ones to

273
00:10:22,860 --> 00:10:27,269
which like IDs and which segments or

274
00:10:25,049 --> 00:10:29,159
whatever what I want to do is move from

275
00:10:27,269 --> 00:10:31,740
that to the concept that we've got a

276
00:10:29,159 --> 00:10:33,509
unified structure on the disk that

277
00:10:31,740 --> 00:10:37,198
represents all of the asset information

278
00:10:33,509 --> 00:10:40,050
that we actually need to process and so

279
00:10:37,198 --> 00:10:43,078
we can you know distribute the game as

280
00:10:40,049 --> 00:10:44,789
one nice file packed file that has all

281
00:10:43,078 --> 00:10:46,769
of the stuff in it and is easy for the

282
00:10:44,789 --> 00:10:50,219
game to get around and load out of and

283
00:10:46,769 --> 00:10:52,589
whatever right so let me talk about that

284
00:10:50,220 --> 00:10:54,240
for a bit and explain to you sort of

285
00:10:52,589 --> 00:11:00,270
what the goals are cure and how it works

286
00:10:54,240 --> 00:11:05,710
and what's going to happen okay

287
00:11:00,269 --> 00:11:08,350
so as you know we what we've decided to

288
00:11:05,710 --> 00:11:11,350
do is we kind of have our asset system

289
00:11:08,350 --> 00:11:14,500
kind of expands in in tears if you will

290
00:11:11,350 --> 00:11:16,509
on the game side of things right so I'll

291
00:11:14,500 --> 00:11:18,639
just say here is what the game code is

292
00:11:16,509 --> 00:11:21,490
actually thinking in terms of right the

293
00:11:18,639 --> 00:11:23,620
game's code is thinking in terms of two

294
00:11:21,490 --> 00:11:27,279
sets of things right it's thinking in

295
00:11:23,620 --> 00:11:29,350
terms of types and tags right so it will

296
00:11:27,279 --> 00:11:33,039
ask for a particular type of thing like

297
00:11:29,350 --> 00:11:35,110
a hero and then it will ask with tags

298
00:11:33,039 --> 00:11:37,839
and the tags will be things like oh you

299
00:11:35,110 --> 00:11:39,850
know maybe I want a male and female hero

300
00:11:37,840 --> 00:11:41,440
so there's like gender tags or something

301
00:11:39,850 --> 00:11:43,960
where I can say which one of those I

302
00:11:41,440 --> 00:11:47,350
wanted and then if you know the the

303
00:11:43,960 --> 00:11:49,120
artists have put in multiple female or

304
00:11:47,350 --> 00:11:50,980
multiple mail or you know any any

305
00:11:49,120 --> 00:11:52,659
combination the two maybe maybe we've

306
00:11:50,980 --> 00:11:53,769
got a bisexual hero or whatever it well

307
00:11:52,659 --> 00:11:55,089
that's not really gender that's that

308
00:11:53,769 --> 00:11:57,009
sexual orientation let's say we have

309
00:11:55,090 --> 00:11:59,170
sexual orientation we have straight

310
00:11:57,009 --> 00:12:00,970
heroes gay heroes bisexual girls maybe

311
00:11:59,169 --> 00:12:03,069
we have everyone on the Kinsey scale so

312
00:12:00,970 --> 00:12:05,769
like you can be from zero when did it go

313
00:12:03,070 --> 00:12:07,420
from zero to 5 or 0 to 10 I remember

314
00:12:05,769 --> 00:12:09,549
what the Kinsey scale was it's probably

315
00:12:07,419 --> 00:12:12,250
all been debunked by now anyway but

316
00:12:09,549 --> 00:12:14,799
let's suppose we've got that we want to

317
00:12:12,250 --> 00:12:16,600
be able to do is you know have the

318
00:12:14,799 --> 00:12:19,059
artist put in anything that we want to

319
00:12:16,600 --> 00:12:21,790
match these tags and then when the game

320
00:12:19,059 --> 00:12:24,639
code says I want a hero that's on the

321
00:12:21,789 --> 00:12:26,500
Kinsey scale of 0.2 what it will do is

322
00:12:24,639 --> 00:12:31,029
it will find the closest hero sprites

323
00:12:26,500 --> 00:12:32,769
that match whatever that is right and so

324
00:12:31,029 --> 00:12:34,689
we could add that for everything hair

325
00:12:32,769 --> 00:12:38,319
color maybe he's on there let's say you

326
00:12:34,690 --> 00:12:40,960
know maybe we've got stuff like age you

327
00:12:38,320 --> 00:12:44,290
know is the hero 20 or is the hero 50 or

328
00:12:40,960 --> 00:12:45,730
as a hero for right so that's the way

329
00:12:44,289 --> 00:12:47,230
that the game code thinks about things

330
00:12:45,730 --> 00:12:48,789
and the reason that it thinks about them

331
00:12:47,230 --> 00:12:52,120
that way is because we're trying to

332
00:12:48,789 --> 00:12:56,439
decouple the game code from the actual

333
00:12:52,120 --> 00:12:58,600
asset table right so the asset table is

334
00:12:56,440 --> 00:13:01,120
the thing that actually has individual

335
00:12:58,600 --> 00:13:03,009
assets in them right so there's things

336
00:13:01,120 --> 00:13:05,230
in here where we've got actual bitmaps

337
00:13:03,009 --> 00:13:07,059
okay and those bitmaps are like you know

338
00:13:05,230 --> 00:13:08,019
the 30 year old hero and the 50 year old

339
00:13:07,059 --> 00:13:10,299
year on the four-year-old here or

340
00:13:08,019 --> 00:13:12,009
whatever right and we don't want the

341
00:13:10,299 --> 00:13:13,559
game code to have to think in terms of

342
00:13:12,009 --> 00:13:14,850
specific bitmaps

343
00:13:13,559 --> 00:13:16,528
we wanted to be able to think in terms

344
00:13:14,850 --> 00:13:18,028
of types and tags where I can just say

345
00:13:16,528 --> 00:13:20,189
you know what I've got it I want a hero

346
00:13:18,028 --> 00:13:22,860
here's the stuff I know about them I

347
00:13:20,190 --> 00:13:24,600
don't want to care whether the artist

348
00:13:22,860 --> 00:13:26,100
drew exactly that thing or not I want

349
00:13:24,600 --> 00:13:28,050
you to just get me back whatever the

350
00:13:26,100 --> 00:13:30,830
artist drew that's as close as possible

351
00:13:28,049 --> 00:13:33,649
to representing this thing right and

352
00:13:30,830 --> 00:13:36,270
that way these two things can be updated

353
00:13:33,649 --> 00:13:38,549
independently the game code can start to

354
00:13:36,269 --> 00:13:40,079
think more about stuff as necessary and

355
00:13:38,549 --> 00:13:42,629
add more tags and more parameters those

356
00:13:40,080 --> 00:13:44,879
tags and the asset table can be updated

357
00:13:42,629 --> 00:13:46,588
by the artist by adding new things so if

358
00:13:44,879 --> 00:13:48,750
the artist sees the game it's like oh I

359
00:13:46,589 --> 00:13:50,550
don't like the fact that the old hero

360
00:13:48,750 --> 00:13:53,250
still looks kind of young I'm going to

361
00:13:50,549 --> 00:13:56,309
make an even older model for the hero

362
00:13:53,250 --> 00:13:57,659
and put that in there right you don't

363
00:13:56,309 --> 00:13:59,009
have to update the game code at all the

364
00:13:57,659 --> 00:14:00,480
game code stays exactly the same you

365
00:13:59,009 --> 00:14:02,189
don't have to recompile it you just

366
00:14:00,480 --> 00:14:03,810
update the asset table and the asset

367
00:14:02,190 --> 00:14:06,330
table will now have an older looking

368
00:14:03,809 --> 00:14:09,629
hero that it pulls out and you know

369
00:14:06,330 --> 00:14:11,759
allows you to sort of make a more

370
00:14:09,629 --> 00:14:13,528
accurate depiction of what the game was

371
00:14:11,759 --> 00:14:20,879
actually expressing in terms of its

372
00:14:13,528 --> 00:14:22,588
gameplay variables right so so this part

373
00:14:20,879 --> 00:14:25,500
we've done a good job specking I'm happy

374
00:14:22,589 --> 00:14:27,980
where that I think that's good and this

375
00:14:25,500 --> 00:14:30,539
part the asset table we actually have

376
00:14:27,980 --> 00:14:33,149
kind of specified and you can see it in

377
00:14:30,539 --> 00:14:34,709
the code if we actually look I haven't

378
00:14:33,149 --> 00:14:37,409
opened the editor yet so let's go ahead

379
00:14:34,710 --> 00:14:41,250
and actually do that but if you actually

380
00:14:37,409 --> 00:14:43,319
look at the code in handmade asset eh

381
00:14:41,250 --> 00:14:45,960
you can see that we we've actually done

382
00:14:43,320 --> 00:14:48,510
a reasonable job defining what this

383
00:14:45,960 --> 00:14:50,339
tables actually look like you can see

384
00:14:48,509 --> 00:14:52,919
that we've got sort of a set of bitmaps

385
00:14:50,339 --> 00:14:54,240
and they have these infos associated

386
00:14:52,919 --> 00:14:56,669
with them sounded photos and bitmap

387
00:14:54,240 --> 00:14:59,250
infos those are the two things that tell

388
00:14:56,669 --> 00:15:01,019
you about the actual asset like you know

389
00:14:59,250 --> 00:15:03,958
whatever how big it is what the what the

390
00:15:01,019 --> 00:15:05,100
bitmap file on disk was you know the

391
00:15:03,958 --> 00:15:06,779
stuff that's necessary to kind of load

392
00:15:05,100 --> 00:15:10,320
it in and use it or whatever right and

393
00:15:06,779 --> 00:15:12,870
then we have the tags and the tags are

394
00:15:10,320 --> 00:15:14,278
all of sort of those again those things

395
00:15:12,870 --> 00:15:15,990
that we've tagged assets with and then

396
00:15:14,278 --> 00:15:18,088
we have the assets themselves which use

397
00:15:15,990 --> 00:15:20,669
the tags right so the assets say here's

398
00:15:18,089 --> 00:15:23,960
my tags you know points into this table

399
00:15:20,669 --> 00:15:26,209
right choose me

400
00:15:23,960 --> 00:15:27,980
so what I've been kind of doing there as

401
00:15:26,210 --> 00:15:30,080
we've been going through is working out

402
00:15:27,980 --> 00:15:32,269
that structure right I've been trying to

403
00:15:30,080 --> 00:15:34,730
work out what that actual structure is

404
00:15:32,269 --> 00:15:37,069
and it's we've kind of sort of made it

405
00:15:34,730 --> 00:15:40,279
here and this is what we actually want

406
00:15:37,070 --> 00:15:41,870
our file to represent right we want our

407
00:15:40,279 --> 00:15:44,179
file to be able to represent these

408
00:15:41,870 --> 00:15:46,399
specific things so that when we load the

409
00:15:44,179 --> 00:15:48,169
game we have all of this information

410
00:15:46,399 --> 00:15:50,179
that is what we know that we actually

411
00:15:48,169 --> 00:15:52,789
want and so let's go over what these

412
00:15:50,179 --> 00:15:54,199
things actually are and talk about how

413
00:15:52,789 --> 00:15:56,509
we're going to store them on the disk

414
00:15:54,200 --> 00:16:00,020
and so on so they're kind of in reverse

415
00:15:56,509 --> 00:16:02,720
order here in terms of who you know in

416
00:16:00,019 --> 00:16:05,059
terms of who references what reverse

417
00:16:02,720 --> 00:16:07,700
order is kind to tend to be a thing in C

418
00:16:05,059 --> 00:16:09,199
because since C doesn't requires forward

419
00:16:07,700 --> 00:16:10,879
declaration right C requires you to

420
00:16:09,200 --> 00:16:12,740
define or hard to declare something

421
00:16:10,879 --> 00:16:14,149
before you use it typically C

422
00:16:12,740 --> 00:16:16,909
programmers get in the habit of defining

423
00:16:14,149 --> 00:16:18,980
things in reverse order right if tags

424
00:16:16,909 --> 00:16:20,750
are referenced by assets you tend it rep

425
00:16:18,980 --> 00:16:22,759
to talk about the assets second and the

426
00:16:20,750 --> 00:16:24,259
tags first right you go from the thing

427
00:16:22,759 --> 00:16:25,580
that does the leaf reference least

428
00:16:24,259 --> 00:16:26,659
referencing thing that does the most and

429
00:16:25,580 --> 00:16:28,129
that's why they're kind of sword in this

430
00:16:26,659 --> 00:16:29,689
order but that that's neither here nor

431
00:16:28,129 --> 00:16:34,100
there that's just a sort of see

432
00:16:29,690 --> 00:16:37,010
programmer idiom right so anyway if you

433
00:16:34,100 --> 00:16:39,560
take a look at asset type right you can

434
00:16:37,009 --> 00:16:43,220
see how we defined it and what it is is

435
00:16:39,559 --> 00:16:46,819
an asset type is just a set of assets

436
00:16:43,220 --> 00:16:49,850
that all correspond to the same logical

437
00:16:46,820 --> 00:16:52,400
thing as the game might ask for it with

438
00:16:49,850 --> 00:16:54,590
an enum so for example if the game asks

439
00:16:52,399 --> 00:16:55,639
for a shadow and you know again we don't

440
00:16:54,590 --> 00:16:56,750
know that these are the types were

441
00:16:55,639 --> 00:16:58,580
actually going to want they're just ones

442
00:16:56,750 --> 00:17:01,009
we put together for testing but if the

443
00:16:58,580 --> 00:17:02,870
game asks for a shadow then what it's

444
00:17:01,009 --> 00:17:05,420
going to do is it's going to look up the

445
00:17:02,870 --> 00:17:07,309
asset type shadow in that array and

446
00:17:05,420 --> 00:17:10,850
going to see how many assets it has that

447
00:17:07,309 --> 00:17:12,829
are of type shadow right so if you take

448
00:17:10,849 --> 00:17:14,838
a look at how that actually works here

449
00:17:12,829 --> 00:17:16,970
you know we take a look at what this

450
00:17:14,838 --> 00:17:18,230
asset table thing actually does what

451
00:17:16,970 --> 00:17:20,480
that means I'm going to just draw it out

452
00:17:18,230 --> 00:17:23,299
what that means is we have asset type

453
00:17:20,480 --> 00:17:25,759
kind of as our most primal this is our

454
00:17:23,299 --> 00:17:27,470
most important step of the

455
00:17:25,759 --> 00:17:30,079
classification in the file right we've

456
00:17:27,470 --> 00:17:32,930
got asset type and when asset type is is

457
00:17:30,079 --> 00:17:36,980
it's indexed right we've got 0 1 2 3 4

458
00:17:32,930 --> 00:17:37,490
so on right it's indexed here and these

459
00:17:36,980 --> 00:17:39,769
are

460
00:17:37,490 --> 00:17:41,269
actually become innumerous right we

461
00:17:39,769 --> 00:17:43,670
define these as a numerate so they're

462
00:17:41,269 --> 00:17:45,109
easier to use in code but those

463
00:17:43,670 --> 00:17:47,570
enumerates are still there just

464
00:17:45,109 --> 00:17:49,339
corresponding to a flat table right you

465
00:17:47,569 --> 00:17:51,769
know and so this right here maybe shadow

466
00:17:49,339 --> 00:17:53,659
right this right here maybe hero who

467
00:17:51,769 --> 00:17:56,839
knows what they are you can see them

468
00:17:53,660 --> 00:17:59,960
here where are they there they are right

469
00:17:56,839 --> 00:18:01,579
you can see them here and we have like

470
00:17:59,960 --> 00:18:07,850
head cake torso that sort of stuff all

471
00:18:01,579 --> 00:18:09,529
that all that goodness right so hero

472
00:18:07,849 --> 00:18:15,769
would be a bad example it's really more

473
00:18:09,529 --> 00:18:17,509
like head cape torso right so we have

474
00:18:15,769 --> 00:18:20,720
these asset types and what the asset

475
00:18:17,509 --> 00:18:23,509
types do is they themselves you know

476
00:18:20,720 --> 00:18:24,920
inside here actually are a sub

477
00:18:23,509 --> 00:18:27,500
addressing there's they're sort of

478
00:18:24,920 --> 00:18:29,539
referencing into a separate table and

479
00:18:27,500 --> 00:18:32,420
that separate table is the assets table

480
00:18:29,539 --> 00:18:33,920
right and if this looks a little bit

481
00:18:32,420 --> 00:18:36,080
like a database to you that's because it

482
00:18:33,920 --> 00:18:37,910
is kind of like a database when things

483
00:18:36,079 --> 00:18:39,139
get stored on disk they often tend to

484
00:18:37,910 --> 00:18:41,720
look like databases because hey guess

485
00:18:39,140 --> 00:18:43,759
what that's what a database is it was

486
00:18:41,720 --> 00:18:47,269
the thing that was designed to represent

487
00:18:43,759 --> 00:18:48,920
data cleanly on disk anyway we've got

488
00:18:47,269 --> 00:18:51,679
sort of the concept of we got a

489
00:18:48,920 --> 00:18:55,640
first-hand account kind of a thing here

490
00:18:51,679 --> 00:18:59,480
right and so what the way that we store

491
00:18:55,640 --> 00:19:01,640
the asset ranges is by in this table

492
00:18:59,480 --> 00:19:03,679
here where we've got our actual assets

493
00:19:01,640 --> 00:19:07,490
right and again the assets are by number

494
00:19:03,679 --> 00:19:09,470
as well 0 1 2 3 4 and so on what we do

495
00:19:07,490 --> 00:19:11,390
is for any given one of these we say all

496
00:19:09,470 --> 00:19:13,549
right first there is a number in here

497
00:19:11,390 --> 00:19:15,050
which says the first asset right that

498
00:19:13,549 --> 00:19:16,519
corresponds to that type maybe that

499
00:19:15,049 --> 00:19:20,269
first assets down here let's say it's

500
00:19:16,519 --> 00:19:21,859
for right so it's saying this one and

501
00:19:20,269 --> 00:19:23,539
then it's got some kind of account that

502
00:19:21,859 --> 00:19:26,689
says oh there are three assets total

503
00:19:23,539 --> 00:19:28,819
right and so five and six are all also

504
00:19:26,690 --> 00:19:30,470
this one right so it kind of refers to

505
00:19:28,819 --> 00:19:33,019
this range right this three lets us know

506
00:19:30,470 --> 00:19:34,610
that range so what that means is in the

507
00:19:33,019 --> 00:19:36,139
asset array we know that we've kind of

508
00:19:34,609 --> 00:19:41,319
packed them in here we've got these

509
00:19:36,140 --> 00:19:41,320
these assets right if that makes sense

510
00:19:43,099 --> 00:19:54,119
okay now we have something that we want

511
00:19:50,190 --> 00:19:57,749
to consider at this point and that

512
00:19:54,119 --> 00:20:00,569
something is how exactly we want this

513
00:19:57,749 --> 00:20:02,370
loading to work and I'll just explain to

514
00:20:00,569 --> 00:20:05,038
you why there's something to be aware of

515
00:20:02,369 --> 00:20:08,609
here the thing that we need to be aware

516
00:20:05,038 --> 00:20:11,429
of here is that if let's say we had to

517
00:20:08,609 --> 00:20:12,689
asset files instead of just one right if

518
00:20:11,429 --> 00:20:14,548
we have one asset file that has all our

519
00:20:12,690 --> 00:20:16,200
assets in it this what I'm about to say

520
00:20:14,548 --> 00:20:18,558
doesn't make any sense it doesn't matter

521
00:20:16,200 --> 00:20:22,669
but suppose we were going to have to

522
00:20:18,558 --> 00:20:25,168
well when you use sort of convenient

523
00:20:22,669 --> 00:20:26,759
packed a dressing like this where you

524
00:20:25,169 --> 00:20:29,038
just kind of go okay all of the assets

525
00:20:26,759 --> 00:20:32,399
of one type occur at the same place in

526
00:20:29,038 --> 00:20:35,490
the table right the problem that you get

527
00:20:32,398 --> 00:20:39,148
with that is that you then lose the

528
00:20:35,490 --> 00:20:42,388
ability to have multiple discreet ranges

529
00:20:39,148 --> 00:20:43,618
of the same asset if you only have one

530
00:20:42,388 --> 00:20:46,109
asset file that's not really a problem

531
00:20:43,618 --> 00:20:47,579
because asset build time you can always

532
00:20:46,109 --> 00:20:49,109
just make sure that the ranges are

533
00:20:47,579 --> 00:20:50,490
contiguous and you maybe it might have a

534
00:20:49,109 --> 00:20:52,079
problem with incremental if you're

535
00:20:50,490 --> 00:20:53,339
trying to be incremental about how you

536
00:20:52,079 --> 00:20:54,599
link things but since these are only the

537
00:20:53,339 --> 00:20:55,918
tables and tables aren't very big you

538
00:20:54,599 --> 00:20:57,058
just rewrite them every time that's not

539
00:20:55,919 --> 00:21:00,330
like that they could be a blah blah blah

540
00:20:57,058 --> 00:21:02,339
blah blah right but if you wanted to

541
00:21:00,329 --> 00:21:04,079
have multiple asset files and for

542
00:21:02,339 --> 00:21:06,388
example a case we might want to do that

543
00:21:04,079 --> 00:21:07,648
is you've got the original access from

544
00:21:06,388 --> 00:21:10,469
the game and then you want to ship an

545
00:21:07,648 --> 00:21:12,569
expansion pack right I've got the

546
00:21:10,470 --> 00:21:16,319
original assets for a mate hero and then

547
00:21:12,569 --> 00:21:18,778
I want to ship handmade hero to you know

548
00:21:16,319 --> 00:21:23,579
our sorry I guess I should say handmade

549
00:21:18,778 --> 00:21:25,829
hero you know DLC or something Abner co

550
00:21:23,579 --> 00:21:26,908
embraced chocolate wine expansion or

551
00:21:25,829 --> 00:21:28,259
whatever right and it's going to add a

552
00:21:26,909 --> 00:21:29,399
bunch of different chocolate wise to the

553
00:21:28,259 --> 00:21:32,220
game and all this sort of stuff right

554
00:21:29,398 --> 00:21:35,459
well the original game maybe maybe

555
00:21:32,220 --> 00:21:37,589
already had chocolate wine right and so

556
00:21:35,460 --> 00:21:39,929
it had some kind of entry into the truck

557
00:21:37,589 --> 00:21:43,109
into the table that said you know down

558
00:21:39,929 --> 00:21:44,909
here it said chocolate wine right so

559
00:21:43,109 --> 00:21:47,278
when the game wanted chocolate wine and

560
00:21:44,909 --> 00:21:50,369
asked for chocolate wine right it got

561
00:21:47,278 --> 00:21:52,710
this range back and it said Oh chocolate

562
00:21:50,368 --> 00:21:54,480
wine starts at entry 16 and it goes for

563
00:21:52,710 --> 00:21:55,259
seven entries there are seven types of

564
00:21:54,480 --> 00:21:58,289
chocolate wine

565
00:21:55,259 --> 00:22:00,629
right but now we come here and we've got

566
00:21:58,289 --> 00:22:02,430
you know this is this is asset file one

567
00:22:00,630 --> 00:22:05,880
right this is the this is the original

568
00:22:02,430 --> 00:22:08,370
assets right this is the original now we

569
00:22:05,880 --> 00:22:10,680
come in here and we say oh well okay but

570
00:22:08,369 --> 00:22:13,439
there's the you know there's the there's

571
00:22:10,680 --> 00:22:16,380
the Abner combrer expansion right pack

572
00:22:13,440 --> 00:22:18,210
or something right so we've got the

573
00:22:16,380 --> 00:22:20,250
expansion pack and that's just all

574
00:22:18,210 --> 00:22:22,259
chocolate wine so it's got a thing in

575
00:22:20,250 --> 00:22:24,539
here in the asset type table and it says

576
00:22:22,259 --> 00:22:29,579
oh okay yeah there's chocolate wine

577
00:22:24,539 --> 00:22:31,980
right and it goes you know from from 12

578
00:22:29,579 --> 00:22:32,939
to nine and it's got 930 different kinds

579
00:22:31,980 --> 00:22:35,490
of chocolate wine in it or whatever

580
00:22:32,940 --> 00:22:38,430
right well the problem is now there's no

581
00:22:35,490 --> 00:22:41,220
one single range that actually has all

582
00:22:38,430 --> 00:22:43,500
that stuff in it so what we really want

583
00:22:41,220 --> 00:22:46,079
to do I think in order to support

584
00:22:43,500 --> 00:22:48,480
expansion packs and stuff like that is

585
00:22:46,079 --> 00:22:50,460
we want to make the asset type table on

586
00:22:48,480 --> 00:22:51,990
disk be a little bit different than what

587
00:22:50,460 --> 00:22:55,500
it is in memory and we probably want to

588
00:22:51,990 --> 00:22:57,660
merge on load right do kind of some kind

589
00:22:55,500 --> 00:23:00,299
of emerged on load type of a thing and

590
00:22:57,660 --> 00:23:04,620
what that would look like right is we

591
00:23:00,299 --> 00:23:07,710
would say OK in the asset table in these

592
00:23:04,619 --> 00:23:10,709
files instead of having the asset table

593
00:23:07,710 --> 00:23:12,750
go 0 1 2 3 4 and having the index imply

594
00:23:10,710 --> 00:23:15,569
the numeron what we should probably do

595
00:23:12,750 --> 00:23:18,930
is have the innumerous stored in it so

596
00:23:15,569 --> 00:23:20,339
entry 0 actually then says what a

597
00:23:18,930 --> 00:23:21,900
numeron are you actually referring to

598
00:23:20,339 --> 00:23:23,069
are you referring to chocolate wine are

599
00:23:21,900 --> 00:23:24,810
your friend that wouldn't you know what

600
00:23:23,069 --> 00:23:26,429
are you talking about and then what

601
00:23:24,809 --> 00:23:30,059
we'll do is when we load those asset

602
00:23:26,430 --> 00:23:31,529
type tables in we will merge the same

603
00:23:30,059 --> 00:23:33,029
chocolate wine from this one chocolate

604
00:23:31,529 --> 00:23:34,950
line from that one will merge them

605
00:23:33,029 --> 00:23:37,440
together into a contiguous array in

606
00:23:34,950 --> 00:23:38,880
memory so our game can be nice and

607
00:23:37,440 --> 00:23:40,860
efficient in memory and have everything

608
00:23:38,880 --> 00:23:43,710
stored all in the same place when it has

609
00:23:40,859 --> 00:23:45,659
to deal with chocolate wine but on disk

610
00:23:43,710 --> 00:23:47,610
we can have multiple different chocolate

611
00:23:45,660 --> 00:23:49,380
wine sets and this also helps with

612
00:23:47,609 --> 00:23:51,240
incremental linking in the sense that

613
00:23:49,380 --> 00:23:53,700
when we build our asset file we can

614
00:23:51,240 --> 00:23:56,279
incrementally add on to the end of it if

615
00:23:53,700 --> 00:23:57,569
we want to and we can add on to the end

616
00:23:56,279 --> 00:23:59,309
of the asset table without having to

617
00:23:57,569 --> 00:24:01,500
really rewrite or shuffle anything right

618
00:23:59,309 --> 00:24:06,299
because we just add a new entry later on

619
00:24:01,500 --> 00:24:07,680
for whatever that thing was so I think

620
00:24:06,299 --> 00:24:08,210
that's the way that we would want to do

621
00:24:07,680 --> 00:24:09,670
it right

622
00:24:08,210 --> 00:24:12,920
think that's what we would want to do

623
00:24:09,670 --> 00:24:15,769
I'm just pointing that out so anyway yet

624
00:24:12,920 --> 00:24:19,009
we've got assets we've got lots of types

625
00:24:15,769 --> 00:24:21,950
that refer to ranges of assets right and

626
00:24:19,009 --> 00:24:24,259
the assets themselves are really just

627
00:24:21,950 --> 00:24:25,670
things that refer to what you know first

628
00:24:24,259 --> 00:24:28,099
of all what you need to actually load

629
00:24:25,670 --> 00:24:29,539
the asset right so we've got we've got

630
00:24:28,099 --> 00:24:31,279
the like whether it's a bitmap or a

631
00:24:29,539 --> 00:24:34,009
sound it's going to have this this info

632
00:24:31,279 --> 00:24:35,210
struct right associated with it so one

633
00:24:34,009 --> 00:24:39,200
of these is going to have is like it's

634
00:24:35,210 --> 00:24:41,900
got the asset info whether it's a bitmap

635
00:24:39,200 --> 00:24:43,940
or a sound and that would be more

636
00:24:41,900 --> 00:24:45,950
expansive than what's shown here right

637
00:24:43,940 --> 00:24:47,180
because this care file name thing would

638
00:24:45,950 --> 00:24:49,400
go away because we wouldn't be

639
00:24:47,180 --> 00:24:51,320
referencing files externally anymore we

640
00:24:49,400 --> 00:24:53,150
would be actually including the data for

641
00:24:51,319 --> 00:24:56,960
the file directly into our asset pack

642
00:24:53,150 --> 00:25:00,200
file so you know we'd actually have a

643
00:24:56,960 --> 00:25:01,400
lot more data here we'd have the offset

644
00:25:00,200 --> 00:25:03,170
probably in the file where the data

645
00:25:01,400 --> 00:25:05,420
chunk lives we'd have how big it was

646
00:25:03,170 --> 00:25:06,920
we'd have the metadata for it so for

647
00:25:05,420 --> 00:25:09,230
example for bitmap we'd have what its

648
00:25:06,920 --> 00:25:13,100
width and height were that kind of stuff

649
00:25:09,230 --> 00:25:14,630
right so you know and sound we'd have on

650
00:25:13,099 --> 00:25:17,629
my channels it has all that stuff right

651
00:25:14,630 --> 00:25:20,270
so we'd these infos structs will be more

652
00:25:17,630 --> 00:25:21,890
expressive once we no longer once we

653
00:25:20,269 --> 00:25:25,430
remove file name from them and kind of

654
00:25:21,890 --> 00:25:28,390
take them up to sort of a full directory

655
00:25:25,430 --> 00:25:31,070
metadata entry for this this thing right

656
00:25:28,390 --> 00:25:33,950
so the assets have two parts like I said

657
00:25:31,069 --> 00:25:35,629
they've got the tags right and they've

658
00:25:33,950 --> 00:25:37,190
got the info the info is relatively

659
00:25:35,630 --> 00:25:40,190
straightforward it's just everything we

660
00:25:37,190 --> 00:25:43,549
need to define the actual specific sound

661
00:25:40,190 --> 00:25:45,620
or bitmap that we want and the tags like

662
00:25:43,549 --> 00:25:47,839
we said before are really just again

663
00:25:45,619 --> 00:25:51,589
another reference into an array of tags

664
00:25:47,839 --> 00:25:53,689
and the tags like we saw here right

665
00:25:51,589 --> 00:25:56,899
we've kind of got the tag up here asset

666
00:25:53,690 --> 00:26:02,539
tag is a very simple thing an asset tag

667
00:25:56,900 --> 00:26:04,790
is nothing more than a int and a float

668
00:26:02,539 --> 00:26:06,980
right it's just that's all it is so

669
00:26:04,789 --> 00:26:10,129
these are just a raise of instant floats

670
00:26:06,980 --> 00:26:12,529
so this can be stored on disk directly

671
00:26:10,130 --> 00:26:14,030
this can be stored on disk directly this

672
00:26:12,529 --> 00:26:16,399
can be stored on just directly with the

673
00:26:14,029 --> 00:26:18,410
enum kind of addition and when we load

674
00:26:16,400 --> 00:26:20,769
these out we will pretty much be able to

675
00:26:18,410 --> 00:26:21,950
just flat load them exactly as they are

676
00:26:20,769 --> 00:26:24,918
mods

677
00:26:21,950 --> 00:26:25,970
if we want to know compress them for

678
00:26:24,919 --> 00:26:28,700
loading or something like that as well

679
00:26:25,970 --> 00:26:29,990
we could do that but other than that we

680
00:26:28,700 --> 00:26:32,480
can just basically load them in and

681
00:26:29,990 --> 00:26:34,638
directly use them the only part that I

682
00:26:32,480 --> 00:26:35,808
think we're going to want to do in prop

683
00:26:34,638 --> 00:26:38,019
that the only parts i think we're going

684
00:26:35,808 --> 00:26:40,278
to want to have signed of like a

685
00:26:38,019 --> 00:26:43,038
actually interpretation step that

686
00:26:40,278 --> 00:26:46,398
actually looks at the data before sort

687
00:26:43,038 --> 00:26:48,288
of putting it into use is this enum part

688
00:26:46,398 --> 00:26:50,028
where i think instead of having the

689
00:26:48,288 --> 00:26:52,250
asset type table being loaded and used

690
00:26:50,028 --> 00:26:54,169
directly we want to consider the asset

691
00:26:52,250 --> 00:26:56,750
table as something we that's a type

692
00:26:54,169 --> 00:26:58,730
table soon we load interpret and then

693
00:26:56,750 --> 00:27:01,460
throw away because we want to build

694
00:26:58,730 --> 00:27:05,929
basically a merged asset type table from

695
00:27:01,460 --> 00:27:09,528
the from the the assets from from the

696
00:27:05,929 --> 00:27:13,700
sort of multiple tables that we see in

697
00:27:09,528 --> 00:27:15,558
the actual in the actual files so i

698
00:27:13,700 --> 00:27:17,419
think that's how we want things to work

699
00:27:15,558 --> 00:27:19,490
and like i said there's really not that

700
00:27:17,419 --> 00:27:20,929
much to understand here it's very very

701
00:27:19,490 --> 00:27:22,370
straightforward how we're actually going

702
00:27:20,929 --> 00:27:24,200
to do these things I think most of them

703
00:27:22,369 --> 00:27:26,689
will look on disk exactly like they do

704
00:27:24,200 --> 00:27:32,330
in memory minus any kind of compression

705
00:27:26,690 --> 00:27:34,070
that we do to compress the tables you

706
00:27:32,329 --> 00:27:35,689
know we'd probably stick eventually some

707
00:27:34,069 --> 00:27:38,538
kind of like an LZ compressor on there

708
00:27:35,690 --> 00:27:40,909
or something just to show how to kind of

709
00:27:38,538 --> 00:27:43,278
keep to reduce the sizes of those things

710
00:27:40,909 --> 00:27:44,630
or whatever even though really they're

711
00:27:43,278 --> 00:27:47,538
never going to be all that big probably

712
00:27:44,630 --> 00:27:49,639
but point being modulo that there's

713
00:27:47,538 --> 00:27:51,200
really not a whole lot else that we

714
00:27:49,638 --> 00:27:54,469
would need to do and so looking back

715
00:27:51,200 --> 00:27:57,860
here at these sorts of things what we

716
00:27:54,470 --> 00:28:00,110
could do is now start to define what we

717
00:27:57,859 --> 00:28:02,750
want that asset file to actually look

718
00:28:00,109 --> 00:28:05,689
like and how we want to actually load it

719
00:28:02,750 --> 00:28:07,339
and process it now if you look at what

720
00:28:05,690 --> 00:28:09,200
we were doing down here you can see we

721
00:28:07,339 --> 00:28:10,730
wrote this code that you know if you

722
00:28:09,200 --> 00:28:13,069
look at what this code is here in

723
00:28:10,730 --> 00:28:15,620
allocate game assets really this code

724
00:28:13,069 --> 00:28:16,700
that you see here this is all and i said

725
00:28:15,619 --> 00:28:19,219
this multiple times we were writing it

726
00:28:16,700 --> 00:28:21,679
this is all just code that simulates

727
00:28:19,220 --> 00:28:24,288
building essentially the asset file in

728
00:28:21,679 --> 00:28:28,100
memory right this is essentially code

729
00:28:24,288 --> 00:28:30,919
that's that's pretending that we had one

730
00:28:28,099 --> 00:28:35,349
of these asset files already made excuse

731
00:28:30,919 --> 00:28:38,950
me right and then it goes ahead

732
00:28:35,349 --> 00:28:41,349
and uses it in place right so what I'd

733
00:28:38,950 --> 00:28:43,840
like to do to kind of start us working

734
00:28:41,349 --> 00:28:45,339
here I'm going to leave that as it is

735
00:28:43,839 --> 00:28:47,439
because you know we've got the game

736
00:28:45,339 --> 00:28:50,649
running and for those of you who are

737
00:28:47,440 --> 00:28:52,330
kind of playing along at home you may

738
00:28:50,650 --> 00:28:53,679
want to always have the game in a

739
00:28:52,329 --> 00:28:56,769
running state so I'm not going to break

740
00:28:53,679 --> 00:28:59,950
it I'm just going to leave it kind of

741
00:28:56,769 --> 00:29:04,269
operating as it is but what I would like

742
00:28:59,950 --> 00:29:08,558
to do is sort of break that part off a

743
00:29:04,269 --> 00:29:14,129
clone of it if you will and make a

744
00:29:08,558 --> 00:29:18,069
program whose only job it is to make a

745
00:29:14,130 --> 00:29:21,250
dummy asset pack file that we can start

746
00:29:18,069 --> 00:29:23,079
loading right and so I want to do

747
00:29:21,250 --> 00:29:26,369
essentially exactly the same thing that

748
00:29:23,079 --> 00:29:28,869
this thing was sort of pho doing here

749
00:29:26,369 --> 00:29:31,239
and I'm going to do that sort of outside

750
00:29:28,869 --> 00:29:32,769
right so what I'm going to do is I'm

751
00:29:31,240 --> 00:29:35,529
going to open up our build up bat and

752
00:29:32,769 --> 00:29:37,450
I'm going to give myself another piece

753
00:29:35,529 --> 00:29:40,178
of code right I'm going to give

754
00:29:37,450 --> 00:29:43,509
ourselves another sort of sort of a

755
00:29:40,179 --> 00:29:45,130
build target if you will right and so

756
00:29:43,509 --> 00:29:46,960
you can see here we've got our various

757
00:29:45,130 --> 00:29:49,600
build targets the only one that I'm

758
00:29:46,960 --> 00:29:52,269
really concerned with here is probably

759
00:29:49,599 --> 00:29:53,349
this one so what I'm going to do is I'm

760
00:29:52,269 --> 00:29:56,679
going to put a little thing in here

761
00:29:53,349 --> 00:30:02,619
that's called like asset file builder

762
00:29:56,679 --> 00:30:03,850
build and you know this probably I we

763
00:30:02,619 --> 00:30:05,589
won't really probably do a whole lot

764
00:30:03,849 --> 00:30:07,500
with this code because again it's only

765
00:30:05,589 --> 00:30:10,449
for getting things SPECT and for testing

766
00:30:07,500 --> 00:30:12,099
but you know I heard for the time being

767
00:30:10,450 --> 00:30:14,380
I would like it to be in here as part of

768
00:30:12,099 --> 00:30:17,428
the build so what I'm going to do is to

769
00:30:14,380 --> 00:30:20,140
find a little thing called bug handmade

770
00:30:17,429 --> 00:30:22,360
test or maybe I don't know if I should

771
00:30:20,140 --> 00:30:27,009
have tested front maybe something like a

772
00:30:22,359 --> 00:30:30,038
test asset builder something like that

773
00:30:27,009 --> 00:30:31,900
right and I don't care about it

774
00:30:30,038 --> 00:30:34,450
producing a map file or any of those

775
00:30:31,900 --> 00:30:37,240
other things we can just go ahead and

776
00:30:34,450 --> 00:30:40,840
have it do the standard stuff that it

777
00:30:37,240 --> 00:30:42,909
does so I'm going to pop back over here

778
00:30:40,839 --> 00:30:44,230
I don't know if we want to separate out

779
00:30:42,909 --> 00:30:45,429
things into like test directories I

780
00:30:44,230 --> 00:30:47,289
don't think we're going to have enough

781
00:30:45,429 --> 00:30:48,860
for that so I think what I'll do is just

782
00:30:47,289 --> 00:30:50,889
put it right in here

783
00:30:48,859 --> 00:30:53,209
and I'm not going to put the handmade

784
00:30:50,890 --> 00:30:54,620
sort of precursor on it so that it'll

785
00:30:53,210 --> 00:30:57,230
just be clear that it's just a piece of

786
00:30:54,619 --> 00:31:00,048
test code and not something that's part

787
00:30:57,230 --> 00:31:02,120
of the build proper so here we go I'm

788
00:31:00,048 --> 00:31:04,519
going to make that there and I'll just

789
00:31:02,119 --> 00:31:07,729
go ahead and make kind of a you know a

790
00:31:04,519 --> 00:31:09,889
standard boilerplate thing here like one

791
00:31:07,730 --> 00:31:13,610
might normally have something like this

792
00:31:09,890 --> 00:31:15,740
right and they'll get it compiling so

793
00:31:13,609 --> 00:31:19,250
let's see oh right don't want to do that

794
00:31:15,740 --> 00:31:21,679
for Maine there we go and so now I

795
00:31:19,250 --> 00:31:23,900
believe if I'm not mistaken that in our

796
00:31:21,679 --> 00:31:26,630
bill directory we should now have a test

797
00:31:23,900 --> 00:31:29,630
asset builder pxe and there we do have

798
00:31:26,630 --> 00:31:31,100
exactly that if I do test a set builder

799
00:31:29,630 --> 00:31:34,660
I don't know if we added that the path I

800
00:31:31,099 --> 00:31:37,399
don't think we did yeah so I have to do

801
00:31:34,660 --> 00:31:38,600
backslash you can see that I can run it

802
00:31:37,400 --> 00:31:47,330
just fine and so basically what i've

803
00:31:38,599 --> 00:31:49,579
done here is i've made a stuff now a lot

804
00:31:47,329 --> 00:31:52,689
of people ask me things like you know

805
00:31:49,579 --> 00:31:55,308
because on handmade hero we don't use

806
00:31:52,690 --> 00:31:56,990
libraries and we don't use an engine we

807
00:31:55,308 --> 00:31:59,808
don't use anything pretty much we do

808
00:31:56,990 --> 00:32:01,099
everything from scratch and part of that

809
00:31:59,808 --> 00:32:02,690
is obviously for educational purposes

810
00:32:01,099 --> 00:32:04,879
but another part of it is actually

811
00:32:02,690 --> 00:32:07,850
that's actually how i develop like my

812
00:32:04,880 --> 00:32:12,320
code base at work right now has almost

813
00:32:07,849 --> 00:32:14,750
no libraries in it whatsoever it isn't

814
00:32:12,319 --> 00:32:16,639
even really even using an stb library at

815
00:32:14,750 --> 00:32:19,099
this point it's literally one hundred

816
00:32:16,640 --> 00:32:21,620
percent from scratch using absolutely no

817
00:32:19,099 --> 00:32:24,048
libraries it doesn't even linked with

818
00:32:21,619 --> 00:32:27,889
any windows libraries besides kernel32

819
00:32:24,048 --> 00:32:30,220
it's like the most non-dependent code

820
00:32:27,890 --> 00:32:35,840
base i think i've ever done in my life

821
00:32:30,220 --> 00:32:38,000
but a lot of people often so it is true

822
00:32:35,839 --> 00:32:41,629
like I actually do do things that way

823
00:32:38,000 --> 00:32:45,048
often times but a lot of people ask me

824
00:32:41,630 --> 00:32:47,660
like you know what libraries would you

825
00:32:45,048 --> 00:32:49,039
use if you're going to use them or or do

826
00:32:47,660 --> 00:32:51,850
you really never use libraries that's

827
00:32:49,039 --> 00:32:55,548
our stuff and the answer is I you know

828
00:32:51,849 --> 00:32:58,490
typically I don't use libraries in cases

829
00:32:55,548 --> 00:33:00,289
where it's code I want to last because

830
00:32:58,490 --> 00:33:02,160
my experience has been if you ever use a

831
00:33:00,289 --> 00:33:03,539
librarian code that you want to last

832
00:33:02,160 --> 00:33:06,090
you will just end up with a maintenance

833
00:33:03,539 --> 00:33:09,180
nightmare on your head as on your hands

834
00:33:06,089 --> 00:33:10,470
as that library either fails to support

835
00:33:09,180 --> 00:33:12,860
the platforms that you needed to support

836
00:33:10,470 --> 00:33:16,680
fails to continue to be updated

837
00:33:12,859 --> 00:33:19,379
introduces bugs has bugs whatever so in

838
00:33:16,680 --> 00:33:22,350
the code that I ship I tends not to want

839
00:33:19,380 --> 00:33:23,910
any libraries in it and again sometimes

840
00:33:22,349 --> 00:33:26,129
are exceptions like the stb libraries

841
00:33:23,910 --> 00:33:27,870
that I think are well done and that

842
00:33:26,130 --> 00:33:32,760
imposed a very low rate on you sometimes

843
00:33:27,869 --> 00:33:36,169
those can be worth it but in cases where

844
00:33:32,759 --> 00:33:40,230
I don't care if the code lasts at all

845
00:33:36,170 --> 00:33:42,539
then have at it and so in the case of

846
00:33:40,230 --> 00:33:45,210
this test asset builder for example this

847
00:33:42,539 --> 00:33:47,970
would be a perfect example of a time

848
00:33:45,210 --> 00:33:51,150
when it be fine to use libraries right

849
00:33:47,970 --> 00:33:52,799
and so for example i'm half totally

850
00:33:51,150 --> 00:33:56,040
happy to use the c standard library here

851
00:33:52,799 --> 00:33:58,230
right because i don't care at all this

852
00:33:56,039 --> 00:33:59,789
is just code to build a testing there's

853
00:33:58,230 --> 00:34:04,410
absolutely no reason for me to even

854
00:33:59,789 --> 00:34:06,389
think about anything that I you know or

855
00:34:04,410 --> 00:34:07,440
even care how it's as long as I know how

856
00:34:06,390 --> 00:34:09,480
to use the library it's not going to

857
00:34:07,440 --> 00:34:11,668
cause me a headache right now I would

858
00:34:09,480 --> 00:34:13,500
say go for it so this guy can be written

859
00:34:11,668 --> 00:34:15,269
in just standard vanilla see I don't

860
00:34:13,500 --> 00:34:16,860
care at all about it and I'm totally

861
00:34:15,269 --> 00:34:17,969
happy to use like standard i/o for the

862
00:34:16,860 --> 00:34:20,190
file i/o and all that sort of stuff

863
00:34:17,969 --> 00:34:23,849
because I don't foresee any reason why I

864
00:34:20,190 --> 00:34:27,300
should care about that right so that's

865
00:34:23,849 --> 00:34:28,860
an example of a time when when I'm

866
00:34:27,300 --> 00:34:33,179
totally happy to use libraries and would

867
00:34:28,860 --> 00:34:36,840
use libraries and I hope maybe that

868
00:34:33,179 --> 00:34:40,139
helps answer that question in action as

869
00:34:36,840 --> 00:34:42,419
with an actual example that people can

870
00:34:40,139 --> 00:34:44,069
relate to so what I'd like to do here is

871
00:34:42,418 --> 00:34:46,139
write something that's going to write

872
00:34:44,070 --> 00:34:48,840
out one of these tests asset files right

873
00:34:46,139 --> 00:34:51,539
and so if we take a look at what we were

874
00:34:48,840 --> 00:34:53,309
doing here we have you know this this

875
00:34:51,539 --> 00:34:56,150
sort of stuff we've got all this year

876
00:34:53,309 --> 00:34:59,429
right what I'd like to do is basically

877
00:34:56,150 --> 00:35:04,070
recreate exactly what we are doing in

878
00:34:59,429 --> 00:35:09,049
the game in a file and once we have that

879
00:35:04,070 --> 00:35:12,090
then I'm hoping that we will be able to

880
00:35:09,050 --> 00:35:15,269
swap out like basically do a giant if0

881
00:35:12,090 --> 00:35:16,019
here right swap out the code that's

882
00:35:15,269 --> 00:35:17,759
creating the

883
00:35:16,019 --> 00:35:21,059
stuff on the fly with something that

884
00:35:17,760 --> 00:35:23,730
just loads from the file and then all of

885
00:35:21,059 --> 00:35:26,070
this stuff can just be vaporized goodbye

886
00:35:23,730 --> 00:35:27,570
right and then we are left with

887
00:35:26,070 --> 00:35:29,940
something that is exactly what we wanted

888
00:35:27,570 --> 00:35:32,130
an asset file that we can just load and

889
00:35:29,940 --> 00:35:35,610
we can pour our assets into it all we

890
00:35:32,130 --> 00:35:37,380
want and the game can load them and the

891
00:35:35,610 --> 00:35:40,559
other nice thing about doing this this

892
00:35:37,380 --> 00:35:42,840
way is for people who do not want to use

893
00:35:40,559 --> 00:35:44,699
the art assets that I ship and who are

894
00:35:42,840 --> 00:35:47,070
making their own stuff or who are going

895
00:35:44,699 --> 00:35:49,710
to make a game of their own after

896
00:35:47,070 --> 00:35:51,930
handmade hero that work similar whatever

897
00:35:49,710 --> 00:35:55,050
this could serve as the starting point

898
00:35:51,929 --> 00:35:57,299
for your asset Packer however you wanted

899
00:35:55,050 --> 00:35:59,789
to do it from whatever source arts that

900
00:35:57,300 --> 00:36:01,410
you have since you know it's going to be

901
00:35:59,789 --> 00:36:03,800
different from how I'm going to pack

902
00:36:01,409 --> 00:36:09,480
them or what artists we use and so on

903
00:36:03,800 --> 00:36:13,140
alright so first things first what I

904
00:36:09,480 --> 00:36:15,570
want to do here is I want to start you

905
00:36:13,139 --> 00:36:20,400
know by saying okay we're going to write

906
00:36:15,570 --> 00:36:22,050
an asset pack file and so I guess we

907
00:36:20,400 --> 00:36:24,480
really don't need to talk about multiple

908
00:36:22,050 --> 00:36:27,870
files ever we could just have a single

909
00:36:24,480 --> 00:36:29,610
file called out right that's going to be

910
00:36:27,869 --> 00:36:34,230
you know the the file that we actually

911
00:36:29,610 --> 00:36:35,190
write to and we're just going to open

912
00:36:34,230 --> 00:36:36,809
one of those in the right the whole

913
00:36:35,190 --> 00:36:39,030
thing to it then closed right that's all

914
00:36:36,809 --> 00:36:40,860
we're really going to do here so we can

915
00:36:39,030 --> 00:36:43,080
do that and what we're going to do is

916
00:36:40,860 --> 00:36:47,099
we're going to want to add all sort of

917
00:36:43,079 --> 00:36:50,069
these add these these things to it and

918
00:36:47,099 --> 00:36:51,989
then sort of write them out right so

919
00:36:50,070 --> 00:36:53,519
what we may have to do in the interim is

920
00:36:51,989 --> 00:36:55,109
I don't know if we want to try and do

921
00:36:53,519 --> 00:36:56,909
this in sort of a single pass method or

922
00:36:55,110 --> 00:37:01,530
we want to build them up as we go

923
00:36:56,909 --> 00:37:05,399
probably if zero leaves out as well here

924
00:37:01,530 --> 00:37:08,340
we go but what I will do here is just

925
00:37:05,400 --> 00:37:11,789
say all right let's go ahead and take

926
00:37:08,340 --> 00:37:13,110
this out file will f open again a new

927
00:37:11,789 --> 00:37:16,860
this is just using the C standard

928
00:37:13,110 --> 00:37:19,650
library to do file i/o so we'll f open a

929
00:37:16,860 --> 00:37:24,300
file this will just be called like test

930
00:37:19,650 --> 00:37:28,519
dot handmade cure assets I don't know

931
00:37:24,300 --> 00:37:32,480
does anyone have an objection to HH a

932
00:37:28,519 --> 00:37:33,739
as the final extension hopefully not so

933
00:37:32,480 --> 00:37:35,389
we'll just go ahead and do that if you'd

934
00:37:33,739 --> 00:37:37,879
never use the C standard library before

935
00:37:35,389 --> 00:37:39,769
our Genesis just it's its way of doing

936
00:37:37,880 --> 00:37:41,930
file stuff it's like create file in

937
00:37:39,769 --> 00:37:43,250
win32 when we covered that F open is

938
00:37:41,929 --> 00:37:45,889
just saying I want to open a file with

939
00:37:43,250 --> 00:37:48,260
this name and a pass it what kind of

940
00:37:45,889 --> 00:37:50,420
operations are going to do on it w means

941
00:37:48,260 --> 00:37:55,130
i'm going to write to it be means it is

942
00:37:50,420 --> 00:37:57,320
binary and this w is also the part of

943
00:37:55,130 --> 00:37:58,490
what that implies in addition to just

944
00:37:57,320 --> 00:38:00,500
the fact that you're trying to write to

945
00:37:58,489 --> 00:38:02,479
it is also that you expect it to kind of

946
00:38:00,500 --> 00:38:04,780
erase the file if it already exists so

947
00:38:02,480 --> 00:38:07,280
it's got a like an implicit overwrite

948
00:38:04,780 --> 00:38:09,230
concept in there so what we're going to

949
00:38:07,280 --> 00:38:11,390
do here is we're going to say okay you

950
00:38:09,230 --> 00:38:13,280
know if we are able to open the file

951
00:38:11,389 --> 00:38:15,109
then we want to do a bunch of stuff to

952
00:38:13,280 --> 00:38:16,610
it and then f close it which says we're

953
00:38:15,110 --> 00:38:18,320
done with the file right that's again

954
00:38:16,610 --> 00:38:20,840
the sort of close handle equipment like

955
00:38:18,320 --> 00:38:23,240
we looked at win32 the sea level in the

956
00:38:20,840 --> 00:38:24,559
sea runtime library so we open the final

957
00:38:23,239 --> 00:38:25,819
we're going to do a bunch of rights to

958
00:38:24,559 --> 00:38:26,809
it and then we're going to close it and

959
00:38:25,820 --> 00:38:31,309
that's really all that's going to happen

960
00:38:26,809 --> 00:38:33,309
here nothing too fancy and so the way

961
00:38:31,309 --> 00:38:37,429
that we're going to do this I think

962
00:38:33,309 --> 00:38:40,670
until we have sort of a a reason not to

963
00:38:37,429 --> 00:38:42,889
I guess I guess what we should do is

964
00:38:40,670 --> 00:38:48,650
just kind of gather up all the stuff

965
00:38:42,889 --> 00:38:50,509
that we did here you know I think

966
00:38:48,650 --> 00:38:54,320
because we want the flexibility I'm

967
00:38:50,510 --> 00:38:56,750
gonna say let's just go ahead and let's

968
00:38:54,320 --> 00:38:58,490
just go ahead and and define it first

969
00:38:56,750 --> 00:39:00,380
and then then do the right at the end

970
00:38:58,489 --> 00:39:02,899
that seems like maybe the easiest thing

971
00:39:00,380 --> 00:39:04,579
to do right so we're going to assume

972
00:39:02,900 --> 00:39:06,590
that we have all of these things to find

973
00:39:04,579 --> 00:39:09,170
here and then we're going to loop over

974
00:39:06,590 --> 00:39:12,289
all of them writing them out into the

975
00:39:09,170 --> 00:39:13,820
asset pack file as necessary I don't

976
00:39:12,289 --> 00:39:15,710
really know if that's the smartest thing

977
00:39:13,820 --> 00:39:18,559
to do maybe we want to be incremental

978
00:39:15,710 --> 00:39:20,599
I'm torn how we want to write this

979
00:39:18,559 --> 00:39:23,630
because if we want the asset pack file

980
00:39:20,599 --> 00:39:28,519
in general to be able to be appended to

981
00:39:23,630 --> 00:39:30,170
incrementally then that would argue for

982
00:39:28,519 --> 00:39:31,909
just setting up the code in that way to

983
00:39:30,170 --> 00:39:34,639
begin with so that we actually practice

984
00:39:31,909 --> 00:39:36,049
that but if we wanted to just be

985
00:39:34,639 --> 00:39:37,819
something where you you tend to do the

986
00:39:36,050 --> 00:39:39,910
compile on the right and you don't

987
00:39:37,820 --> 00:39:45,579
update it incrementally then you

988
00:39:39,909 --> 00:39:46,779
no I don't know um I really don't hmm

989
00:39:45,579 --> 00:39:49,990
because there's other things to think

990
00:39:46,780 --> 00:39:51,730
about well you know what I don't care

991
00:39:49,989 --> 00:39:53,588
we're just gonna let us go this way and

992
00:39:51,730 --> 00:39:55,088
we'll see how it goes if we want to add

993
00:39:53,588 --> 00:39:59,199
more stuff to it later you know we

994
00:39:55,088 --> 00:40:00,699
always can right ok so what I'm going to

995
00:39:59,199 --> 00:40:03,098
do here is I'm not going to care at all

996
00:40:00,699 --> 00:40:05,139
about this code in any way like this is

997
00:40:03,099 --> 00:40:06,640
going to be absolute crap code that

998
00:40:05,139 --> 00:40:08,108
really just doesn't matter at all

999
00:40:06,639 --> 00:40:10,328
because only force pecking out the file

1000
00:40:08,108 --> 00:40:12,759
thing and so what I would like to do

1001
00:40:10,329 --> 00:40:14,680
here is probably just say we're going to

1002
00:40:12,760 --> 00:40:19,089
have these bitmap assets or whatever

1003
00:40:14,679 --> 00:40:22,629
right so I want to go ahead and just

1004
00:40:19,088 --> 00:40:25,150
make sort of a way of actually of sort

1005
00:40:22,630 --> 00:40:27,180
of holding those right so I have the

1006
00:40:25,150 --> 00:40:30,010
file name so this is just the bitmap

1007
00:40:27,179 --> 00:40:31,690
asset I guess I'm going to have the file

1008
00:40:30,010 --> 00:40:33,910
name there i'm going to have whatever

1009
00:40:31,690 --> 00:40:35,470
that that offset thing is right that

1010
00:40:33,909 --> 00:40:37,298
sort of alignment I guess is what we

1011
00:40:35,469 --> 00:40:39,338
called it right I'm going to have those

1012
00:40:37,298 --> 00:40:42,309
two things that are going to be

1013
00:40:39,338 --> 00:40:44,078
specified and then I've got these asset

1014
00:40:42,309 --> 00:40:46,119
types here so really this code is pretty

1015
00:40:44,079 --> 00:40:48,430
much going to mirror the code that we

1016
00:40:46,119 --> 00:40:50,470
had before right in fact I probably can

1017
00:40:48,429 --> 00:40:51,969
just grab it I don't even know if I need

1018
00:40:50,469 --> 00:40:54,489
to really do any work I can probably

1019
00:40:51,969 --> 00:40:57,129
just clone this code exactly because all

1020
00:40:54,489 --> 00:40:58,439
of this code is all debug anyway and all

1021
00:40:57,130 --> 00:41:00,818
would be deleted from here eventually

1022
00:40:58,440 --> 00:41:03,099
either way so if I go ahead and put that

1023
00:41:00,818 --> 00:41:04,838
this stuff in here here we go with our

1024
00:41:03,099 --> 00:41:06,369
with our various things where we add

1025
00:41:04,838 --> 00:41:09,690
bitmap info and all that sort of stuff

1026
00:41:06,369 --> 00:41:12,460
we can simplify this a little bit right

1027
00:41:09,690 --> 00:41:13,929
we can simplify this a little bit by

1028
00:41:12,460 --> 00:41:16,960
just saying okay we only need the file

1029
00:41:13,929 --> 00:41:20,798
name and the align percentage hear it I

1030
00:41:16,960 --> 00:41:22,960
guess look and see how we do that we

1031
00:41:20,798 --> 00:41:27,190
don't even need those slot IDs for the

1032
00:41:22,960 --> 00:41:28,778
most part but ok so what we want to do

1033
00:41:27,190 --> 00:41:29,858
here right is you want to take this code

1034
00:41:28,778 --> 00:41:32,199
and we're basically just trying to

1035
00:41:29,858 --> 00:41:34,808
buffer up all of the stuff that we need

1036
00:41:32,199 --> 00:41:36,730
so that we can then look at it and write

1037
00:41:34,809 --> 00:41:40,539
out the tables for it as well as the

1038
00:41:36,730 --> 00:41:43,449
data right so if we take a look at these

1039
00:41:40,539 --> 00:41:46,840
here yeah

1040
00:41:43,449 --> 00:41:48,609
I guess that's this we probably want to

1041
00:41:46,840 --> 00:41:50,410
change a little bit to the way these

1042
00:41:48,610 --> 00:41:54,010
work but will will hold all that hold

1043
00:41:50,409 --> 00:41:56,079
off on that for a second so yes so all

1044
00:41:54,010 --> 00:41:58,060
of this stuff is probably just fine we

1045
00:41:56,079 --> 00:42:00,340
can get rid of the referencing of the

1046
00:41:58,059 --> 00:42:01,659
assets here and just actually pretend

1047
00:42:00,340 --> 00:42:03,220
all these things are global variables

1048
00:42:01,659 --> 00:42:05,679
because they can be global variables to

1049
00:42:03,219 --> 00:42:07,269
just hang out in here right all this

1050
00:42:05,679 --> 00:42:09,849
code is going to be building things

1051
00:42:07,269 --> 00:42:11,679
basically the same way right so I'm just

1052
00:42:09,849 --> 00:42:16,329
going to literally just we appropriate

1053
00:42:11,679 --> 00:42:19,960
this code because why not right so there

1054
00:42:16,329 --> 00:42:22,000
we go and debug add bitmap info can

1055
00:42:19,960 --> 00:42:24,610
probably like that never gets called

1056
00:42:22,000 --> 00:42:26,110
anywhere else does it you know it's not

1057
00:42:24,610 --> 00:42:27,519
that's not really a thing that happens

1058
00:42:26,110 --> 00:42:29,950
so we should probably do is just have

1059
00:42:27,519 --> 00:42:31,750
that be in here right you probably just

1060
00:42:29,949 --> 00:42:33,429
just in line that I don't even know why

1061
00:42:31,750 --> 00:42:35,380
we made separate ones for it originally

1062
00:42:33,429 --> 00:42:37,509
it doesn't really seem like a good use

1063
00:42:35,380 --> 00:42:40,269
of anyone's time or energy but that's

1064
00:42:37,510 --> 00:42:41,620
what we did who knows why so i'll go

1065
00:42:40,269 --> 00:42:46,090
ahead and paste those in there so we can

1066
00:42:41,619 --> 00:42:47,920
port that in that way later okay so when

1067
00:42:46,090 --> 00:42:49,150
we do begin asset type right and then of

1068
00:42:47,920 --> 00:42:50,710
course the other thing too is now all

1069
00:42:49,150 --> 00:42:52,840
this debug code that we had in there

1070
00:42:50,710 --> 00:42:59,199
right all this debug code comes out to

1071
00:42:52,840 --> 00:43:05,860
here right like like so there we go so

1072
00:42:59,199 --> 00:43:07,689
yeah we can change these guys okay yeah

1073
00:43:05,860 --> 00:43:09,490
although we probably I don't know if we

1074
00:43:07,690 --> 00:43:10,750
want to actually keep our standard

1075
00:43:09,489 --> 00:43:12,509
defiance or anything there we probably

1076
00:43:10,750 --> 00:43:15,909
do so I might as well just go ahead and

1077
00:43:12,510 --> 00:43:18,490
grab those from handmade platform which

1078
00:43:15,909 --> 00:43:21,219
I think we can just include right we

1079
00:43:18,489 --> 00:43:25,809
should be able to do this right handmade

1080
00:43:21,219 --> 00:43:30,879
platform dot H and that'll work yes in

1081
00:43:25,809 --> 00:43:34,029
fact it works quite nicely so I think we

1082
00:43:30,880 --> 00:43:39,490
could just do that we can make these

1083
00:43:34,030 --> 00:43:43,920
guys br30 tues for now so and then these

1084
00:43:39,489 --> 00:43:43,919
guys can can stay u32

1085
00:43:45,349 --> 00:43:49,980
there we go all right so you can see

1086
00:43:48,690 --> 00:43:51,389
what i did there basically what i did is

1087
00:43:49,980 --> 00:43:53,849
i just said all right i want to use all

1088
00:43:51,389 --> 00:43:55,529
the same types and stuff just to make it

1089
00:43:53,849 --> 00:43:57,119
easier on myself so I just went ahead

1090
00:43:55,530 --> 00:43:58,950
including have a platform beige because

1091
00:43:57,119 --> 00:44:00,989
there's no reason why I can't right I

1092
00:43:58,949 --> 00:44:02,159
can just use that same header file even

1093
00:44:00,989 --> 00:44:03,509
though we're not going to define any of

1094
00:44:02,159 --> 00:44:06,420
the stuff from it we can just use the

1095
00:44:03,510 --> 00:44:08,700
pipe defs and stuff alright so then

1096
00:44:06,420 --> 00:44:10,409
we've got again sort of the same stuff

1097
00:44:08,699 --> 00:44:14,279
we had here where we've got the asset

1098
00:44:10,409 --> 00:44:16,409
type and all that stuff right what we

1099
00:44:14,280 --> 00:44:18,750
want to do here is is pretty much just

1100
00:44:16,409 --> 00:44:20,609
totally use all the same stuff that we

1101
00:44:18,750 --> 00:44:23,639
have right I think all of this stuff is

1102
00:44:20,610 --> 00:44:27,870
is pretty much just what we want right

1103
00:44:23,639 --> 00:44:31,529
so we can use it like so and there we go

1104
00:44:27,869 --> 00:44:34,500
and then for our asset types here these

1105
00:44:31,530 --> 00:44:36,300
things I guess I don't know you know we

1106
00:44:34,500 --> 00:44:38,099
could even do now that I think about it

1107
00:44:36,300 --> 00:44:40,590
we could even do something even more

1108
00:44:38,099 --> 00:44:42,839
ridiculous for the moment we could

1109
00:44:40,590 --> 00:44:47,550
actually just include this asset type ID

1110
00:44:42,840 --> 00:44:49,289
thing here mmm you know I don't really

1111
00:44:47,550 --> 00:44:50,789
want to do that so what I think I'm

1112
00:44:49,289 --> 00:44:52,019
going to do is make that I'm going to

1113
00:44:50,789 --> 00:44:54,509
pull that out into a separate thing

1114
00:44:52,019 --> 00:44:57,570
there's going to be a sort of a handmade

1115
00:44:54,510 --> 00:45:00,960
asset ID or sorry i should say handmade

1116
00:44:57,570 --> 00:45:03,390
asset type ID dot h and that thing is

1117
00:45:00,960 --> 00:45:06,030
just going to have this just this one

1118
00:45:03,389 --> 00:45:08,909
thing right and that way it can be

1119
00:45:06,030 --> 00:45:11,670
shared amongst various tools that might

1120
00:45:08,909 --> 00:45:13,980
want it such as this thing without

1121
00:45:11,670 --> 00:45:16,289
having to include everything else right

1122
00:45:13,980 --> 00:45:21,090
so there's going to be a handmade asset

1123
00:45:16,289 --> 00:45:25,619
type ID include here and then this you

1124
00:45:21,090 --> 00:45:29,400
know this code can just include the same

1125
00:45:25,619 --> 00:45:31,409
thing so when it includes a SAT H first

1126
00:45:29,400 --> 00:45:35,610
I can just include asset type ID age

1127
00:45:31,409 --> 00:45:37,500
right all right let's see how we're

1128
00:45:35,610 --> 00:45:40,400
doing about 10 minutes left maybe 15 and

1129
00:45:37,500 --> 00:45:40,400
we started about five minutes late

1130
00:45:44,230 --> 00:45:52,340
alright so what we want to do now is we

1131
00:45:50,929 --> 00:45:54,109
want to just clean this code up and make

1132
00:45:52,340 --> 00:45:56,960
it so that it works with our you know

1133
00:45:54,110 --> 00:45:58,940
our new stuff here so what we need to do

1134
00:45:56,960 --> 00:46:01,610
is a handmade assets at H we have these

1135
00:45:58,940 --> 00:46:03,950
arrays right and so we want to do is

1136
00:46:01,610 --> 00:46:07,280
actually pull out all those arrays that

1137
00:46:03,949 --> 00:46:11,359
we had and just use them right so here

1138
00:46:07,280 --> 00:46:12,620
we go and what I want to do now is I

1139
00:46:11,360 --> 00:46:15,260
want to say well you know what we don't

1140
00:46:12,619 --> 00:46:17,239
even really care about this stuff so you

1141
00:46:15,260 --> 00:46:22,910
know what this is just a you know large

1142
00:46:17,239 --> 00:46:25,669
number just because again don't care

1143
00:46:22,909 --> 00:46:28,039
about this at all don't care about this

1144
00:46:25,670 --> 00:46:30,079
code in any way I guess assets lot is

1145
00:46:28,039 --> 00:46:34,909
not necessary at all right we only

1146
00:46:30,079 --> 00:46:37,069
really have we only really have these

1147
00:46:34,909 --> 00:46:38,869
other things here right in our case very

1148
00:46:37,070 --> 00:46:42,650
large number doesn't even have to be big

1149
00:46:38,869 --> 00:46:45,650
right because we're only doing tests but

1150
00:46:42,650 --> 00:46:48,110
you know in theory there's going to be a

1151
00:46:45,650 --> 00:46:51,590
lot of these things if you were actually

1152
00:46:48,110 --> 00:46:54,980
building the real asset backed by so

1153
00:46:51,590 --> 00:46:57,200
yeah okay so there is everything right

1154
00:46:54,980 --> 00:47:03,920
that we actually have a good asset tag

1155
00:46:57,199 --> 00:47:05,329
sounds bitmaps and asset types so that's

1156
00:47:03,920 --> 00:47:10,970
that's all the stuff that we actually

1157
00:47:05,329 --> 00:47:13,460
have and I guess the bitmap info and

1158
00:47:10,969 --> 00:47:15,799
that stuff is the only stuff that we

1159
00:47:13,460 --> 00:47:17,059
don't have here and so we should I guess

1160
00:47:15,800 --> 00:47:21,019
we'll grab these we're going to modify

1161
00:47:17,059 --> 00:47:24,619
these pretty heavily obviously and and

1162
00:47:21,019 --> 00:47:25,489
we'll do that I guess in a second well

1163
00:47:24,619 --> 00:47:31,929
we probably will get to that today

1164
00:47:25,489 --> 00:47:35,509
actually okay so yeah so these things

1165
00:47:31,929 --> 00:47:38,210
here or again we don't probably care

1166
00:47:35,510 --> 00:47:41,090
about actually representing those ID

1167
00:47:38,210 --> 00:47:43,880
specifically so that's fine and we can

1168
00:47:41,090 --> 00:47:47,030
make the align percentage into two

1169
00:47:43,880 --> 00:47:50,119
different things to avoid having to pull

1170
00:47:47,030 --> 00:47:51,500
v2s into this for no reason and then I

1171
00:47:50,119 --> 00:47:53,059
think we're good so I'm going to go

1172
00:47:51,500 --> 00:47:57,280
ahead and just finish kind of

1173
00:47:53,059 --> 00:47:59,840
porting this out so it's no longer oops

1174
00:47:57,280 --> 00:48:03,860
it's no longer working off of that

1175
00:47:59,840 --> 00:48:08,420
assets bit let's see here cannot convert

1176
00:48:03,860 --> 00:48:14,420
from asset star star oh right i read

1177
00:48:08,420 --> 00:48:17,240
that star okay and align percentage x

1178
00:48:14,420 --> 00:48:18,320
the line percentage why well this is

1179
00:48:17,239 --> 00:48:20,750
actually gonna be this code right here

1180
00:48:18,320 --> 00:48:29,210
so i guess we don't really care about

1181
00:48:20,750 --> 00:48:32,059
this much at all so i guess this brings

1182
00:48:29,210 --> 00:48:34,519
us to something that's kind of odd which

1183
00:48:32,059 --> 00:48:36,320
is that the slot ID right is sort of a

1184
00:48:34,519 --> 00:48:38,449
thing that we use for maintaining like

1185
00:48:36,320 --> 00:48:41,750
loading information stuff in the runtime

1186
00:48:38,449 --> 00:48:45,129
game and so in here it actually means

1187
00:48:41,750 --> 00:48:50,510
something a little different right in

1188
00:48:45,130 --> 00:48:53,470
the actual file slot ID really is

1189
00:48:50,510 --> 00:48:56,060
talking about where the data actually is

1190
00:48:53,469 --> 00:48:59,329
for this particular asset right like

1191
00:48:56,059 --> 00:49:01,969
where the actual information is so i

1192
00:48:59,329 --> 00:49:04,190
don't know that we really need slot ID

1193
00:49:01,969 --> 00:49:07,909
anymore what we're probably going to do

1194
00:49:04,190 --> 00:49:14,150
is have something more like a u64 that's

1195
00:49:07,909 --> 00:49:15,559
like data offset right you know what i

1196
00:49:14,150 --> 00:49:18,110
mean it it's really going to be

1197
00:49:15,559 --> 00:49:23,269
something that says here's where the

1198
00:49:18,110 --> 00:49:24,769
actual data for this asset lives and

1199
00:49:23,269 --> 00:49:27,920
there's not going to be like this sort

1200
00:49:24,769 --> 00:49:30,619
of separate slot ID business for it I

1201
00:49:27,920 --> 00:49:32,539
don't think because the slot idea is

1202
00:49:30,619 --> 00:49:34,909
really something for the run time too

1203
00:49:32,539 --> 00:49:37,279
because if you look back at the handmade

1204
00:49:34,909 --> 00:49:40,190
asset and you look at where the slot

1205
00:49:37,280 --> 00:49:42,740
stuff is where is that that's that slot

1206
00:49:40,190 --> 00:49:44,630
you can see that this is really this is

1207
00:49:42,739 --> 00:49:47,769
not an on dis thing this is like just

1208
00:49:44,630 --> 00:49:50,750
storing the state of the loaded you know

1209
00:49:47,769 --> 00:49:52,849
storing how something's been brought

1210
00:49:50,750 --> 00:49:54,800
into memory and what its status is and

1211
00:49:52,849 --> 00:49:57,670
so I think really we don't care about

1212
00:49:54,800 --> 00:50:02,330
that so really right here we've just got

1213
00:49:57,670 --> 00:50:05,119
this data offset and the slot ID part of

1214
00:50:02,329 --> 00:50:06,529
it when we look at the asset I'm trying

1215
00:50:05,119 --> 00:50:09,440
to think I guess I do

1216
00:50:06,530 --> 00:50:12,500
understand why do you even need that

1217
00:50:09,440 --> 00:50:17,320
slot ID because why wouldn't you just

1218
00:50:12,500 --> 00:50:25,010
why do we even have a slot ID why isn't

1219
00:50:17,320 --> 00:50:30,440
the slot just part of the asset am I am

1220
00:50:25,010 --> 00:50:36,560
I on am I missing something here because

1221
00:50:30,440 --> 00:50:41,420
that seems very odd to me right that

1222
00:50:36,559 --> 00:50:44,480
seems very odd it just doesn't make any

1223
00:50:41,420 --> 00:50:46,039
sense in fact i'm looking at i'm looking

1224
00:50:44,480 --> 00:50:48,230
at this here and I just I don't even

1225
00:50:46,039 --> 00:50:50,239
understand why we do it that way maybe

1226
00:50:48,230 --> 00:50:52,550
there is a reason but I'm looking at

1227
00:50:50,239 --> 00:50:53,689
this and let's let's you know maybe this

1228
00:50:52,550 --> 00:50:55,610
is something that I want to address

1229
00:50:53,690 --> 00:50:59,269
right now even because i think it's just

1230
00:50:55,610 --> 00:51:05,780
dumb so let's remold and we'll build our

1231
00:50:59,269 --> 00:51:08,150
our actual gain here right here we go so

1232
00:51:05,780 --> 00:51:11,330
looking at this I just don't understand

1233
00:51:08,150 --> 00:51:16,579
what the point is of the slot ID it

1234
00:51:11,329 --> 00:51:19,639
doesn't seem to really serve any purpose

1235
00:51:16,579 --> 00:51:25,219
right because you have the asset itself

1236
00:51:19,639 --> 00:51:28,759
and the asset itself should just have

1237
00:51:25,219 --> 00:51:31,579
the assets lot in it right I mean why

1238
00:51:28,760 --> 00:51:34,040
wouldn't you do it that way like what's

1239
00:51:31,579 --> 00:51:40,579
the what is the slot ID actually do for

1240
00:51:34,039 --> 00:51:43,059
you because you could just return your

1241
00:51:40,579 --> 00:51:46,849
own self you could just return your own

1242
00:51:43,059 --> 00:51:51,159
index so the index into the asset array

1243
00:51:46,849 --> 00:51:53,659
would just be the slot ID is that I mean

1244
00:51:51,159 --> 00:51:57,769
sure seems obvious to me I don't really

1245
00:51:53,659 --> 00:51:59,239
know why you wouldn't do that and even

1246
00:51:57,769 --> 00:52:00,920
if you didn't want to include it in the

1247
00:51:59,239 --> 00:52:02,929
asset structure itself well you could

1248
00:52:00,920 --> 00:52:07,670
still just include it you could just

1249
00:52:02,929 --> 00:52:11,389
have a separate array right so I don't

1250
00:52:07,670 --> 00:52:13,610
understand I don't understand the point

1251
00:52:11,389 --> 00:52:16,039
of that so I'm just going to try that I

1252
00:52:13,610 --> 00:52:18,588
want to see what happens if instead I

1253
00:52:16,039 --> 00:52:21,440
just do this right

1254
00:52:18,588 --> 00:52:23,719
I want to know what happens so what i'm

1255
00:52:21,440 --> 00:52:25,579
doing here is in order to test my theory

1256
00:52:23,719 --> 00:52:29,150
that it doesn't matter i'm gonna let the

1257
00:52:25,579 --> 00:52:30,380
compiler guide me towards figuring out

1258
00:52:29,150 --> 00:52:33,170
whether it does or not so what I've done

1259
00:52:30,380 --> 00:52:35,239
is I've removed the two separate arrays

1260
00:52:33,170 --> 00:52:36,440
that we had replace them with a single

1261
00:52:35,239 --> 00:52:38,389
array and I'm just going to let the

1262
00:52:36,440 --> 00:52:41,269
compile errors guide me to see whether

1263
00:52:38,389 --> 00:52:43,578
that was a good idea or not so you can

1264
00:52:41,268 --> 00:52:45,139
see here we've got this this thing we're

1265
00:52:43,579 --> 00:52:47,599
looking up into the bitmaps so I'm just

1266
00:52:45,139 --> 00:52:49,460
going to go ahead and change that to

1267
00:52:47,599 --> 00:52:51,859
reference into slots which should be

1268
00:52:49,460 --> 00:52:53,329
exactly what we want same thing here to

1269
00:52:51,858 --> 00:52:58,278
reference into slots when we load a

1270
00:52:53,329 --> 00:52:59,989
sound again just same exact thing here

1271
00:52:58,278 --> 00:53:02,048
it's just looking into slots I don't see

1272
00:52:59,989 --> 00:53:08,559
any reason why that wouldn't work

1273
00:53:02,048 --> 00:53:11,210
against lots when it loads slots again

1274
00:53:08,559 --> 00:53:12,979
so all of these things can just I mean

1275
00:53:11,210 --> 00:53:15,889
there's really no reason we know the IDS

1276
00:53:12,978 --> 00:53:22,788
don't collide if we don't want them to

1277
00:53:15,889 --> 00:53:30,379
write slots again we've got sounds here

1278
00:53:22,789 --> 00:53:34,219
slots again and so here we go so yeah so

1279
00:53:30,380 --> 00:53:36,739
it looks to me in my opinion the only

1280
00:53:34,219 --> 00:53:39,858
thing that we were getting from that is

1281
00:53:36,739 --> 00:53:42,679
the fact that we could compress sort of

1282
00:53:39,858 --> 00:53:45,199
that we had bitmaps and sounds being

1283
00:53:42,679 --> 00:53:46,518
addressed separately right so the number

1284
00:53:45,199 --> 00:53:47,748
of bitmaps went from zero to bitmap

1285
00:53:46,518 --> 00:53:49,699
count the number of sounds what from

1286
00:53:47,748 --> 00:53:51,288
zero to sound count means and so those

1287
00:53:49,699 --> 00:53:55,129
were the there are two overlapping

1288
00:53:51,289 --> 00:53:56,539
sets of slots there right but I don't

1289
00:53:55,130 --> 00:53:59,028
think that really buys anything because

1290
00:53:56,539 --> 00:54:01,190
why do we care about that you know sort

1291
00:53:59,028 --> 00:54:03,469
of compression what we could do it what

1292
00:54:01,190 --> 00:54:07,489
we should do I would argue instead is

1293
00:54:03,469 --> 00:54:12,289
just have the asset itself store a

1294
00:54:07,489 --> 00:54:14,630
pointer to its info struct that just

1295
00:54:12,289 --> 00:54:16,599
seems way smarter to me because that

1296
00:54:14,630 --> 00:54:19,249
mirror is what happens on disk as well

1297
00:54:16,599 --> 00:54:22,390
so all yeah this this I think that was

1298
00:54:19,248 --> 00:54:26,298
just generally speaking kind of a dumb

1299
00:54:22,389 --> 00:54:27,710
kind of a dumb idea and in fact we may

1300
00:54:26,298 --> 00:54:29,119
even want to make it so that it's all

1301
00:54:27,710 --> 00:54:31,159
just one array it doesn't even matter

1302
00:54:29,119 --> 00:54:32,180
and we just have a union for the two

1303
00:54:31,159 --> 00:54:33,618
bits of info that you

1304
00:54:32,179 --> 00:54:35,269
aid because if you look at like for

1305
00:54:33,619 --> 00:54:37,700
example in here what the actual amount

1306
00:54:35,269 --> 00:54:39,940
is if the amounts are fairly similar

1307
00:54:37,699 --> 00:54:42,409
size wise then we don't even really need

1308
00:54:39,940 --> 00:54:44,240
to represent the two of them separately

1309
00:54:42,409 --> 00:54:46,848
like that so so I don't know I think

1310
00:54:44,239 --> 00:54:48,649
that may have just been making things

1311
00:54:46,849 --> 00:54:51,170
more complex for no real reason so

1312
00:54:48,650 --> 00:54:52,880
here's what I'm going to do there I'm

1313
00:54:51,170 --> 00:54:57,710
just going to go ahead and try that as

1314
00:54:52,880 --> 00:54:59,750
well because you know I feel like it so

1315
00:54:57,710 --> 00:55:03,849
there we go and then I'm going to say

1316
00:54:59,750 --> 00:55:08,568
all right we've got a union asset oops

1317
00:55:03,849 --> 00:55:14,690
here asset bitmap info bitmap asset

1318
00:55:08,568 --> 00:55:17,058
sound info sound right I just think

1319
00:55:14,690 --> 00:55:18,980
that's more interesting so I'm going to

1320
00:55:17,059 --> 00:55:21,260
go ahead and do that and that means

1321
00:55:18,980 --> 00:55:23,389
we're also going to get rid of bitmap

1322
00:55:21,260 --> 00:55:24,800
infos and the sound infos and the bitmap

1323
00:55:23,389 --> 00:55:26,960
count in the sound count as well

1324
00:55:24,800 --> 00:55:30,559
probably I think those just go away

1325
00:55:26,960 --> 00:55:34,309
right so off we go and let's take a look

1326
00:55:30,559 --> 00:55:36,890
so when we do get bitmap with a bitmap

1327
00:55:34,309 --> 00:55:39,589
ID really all we have to do is a cert

1328
00:55:36,889 --> 00:55:46,239
here that it's less than the asset count

1329
00:55:39,588 --> 00:55:49,190
right and and so on that's really it

1330
00:55:46,239 --> 00:55:50,539
asset count we could try to verify that

1331
00:55:49,190 --> 00:55:51,858
the thing we could have like debug

1332
00:55:50,539 --> 00:55:54,858
information here that's whether or not

1333
00:55:51,858 --> 00:55:57,139
the thing is a sound or not if that

1334
00:55:54,858 --> 00:55:59,838
makes sense but I don't really know how

1335
00:55:57,139 --> 00:56:02,629
much I care about that we'll see if we

1336
00:55:59,838 --> 00:56:05,269
have any bugs of that form so sound

1337
00:56:02,630 --> 00:56:07,849
infos is not a member of game assets you

1338
00:56:05,269 --> 00:56:09,650
are correct so if we want to actually

1339
00:56:07,849 --> 00:56:17,119
get the sound info what we'd have to do

1340
00:56:09,650 --> 00:56:24,170
is ask for just the assets assets ID

1341
00:56:17,119 --> 00:56:26,568
value sound believe that's it right and

1342
00:56:24,170 --> 00:56:28,250
the same would be true here right if

1343
00:56:26,568 --> 00:56:32,469
we're trying to get the bitmap info for

1344
00:56:28,250 --> 00:56:32,469
something we would have work assets

1345
00:56:32,798 --> 00:56:35,798
assets

1346
00:56:36,699 --> 00:56:47,748
top bitmap right yeah and so I really

1347
00:56:45,498 --> 00:56:55,659
think that's pretty much it in terms of

1348
00:56:47,748 --> 00:56:58,459
what's going on here sound and let's see

1349
00:56:55,659 --> 00:57:00,889
to pug used bitmap counts so debug a

1350
00:56:58,460 --> 00:57:02,719
bitmap info now we're going to do

1351
00:57:00,889 --> 00:57:05,389
exactly what I said we should do before

1352
00:57:02,719 --> 00:57:08,088
we're going to put that right here so

1353
00:57:05,389 --> 00:57:11,179
assets lot ID is just not a thing

1354
00:57:08,088 --> 00:57:17,478
anymore instead we're going to do it

1355
00:57:11,179 --> 00:57:20,899
this way where we do asset bitmap file

1356
00:57:17,478 --> 00:57:24,409
name and asset bitmap dot a line

1357
00:57:20,900 --> 00:57:28,789
percentage that just seems better all

1358
00:57:24,409 --> 00:57:32,449
around anyway oops kept an address in

1359
00:57:28,789 --> 00:57:35,079
there and then we've got let's see ads

1360
00:57:32,449 --> 00:57:39,379
sound info same thing here asset count

1361
00:57:35,079 --> 00:57:43,068
and we've got our sound infos so that's

1362
00:57:39,380 --> 00:57:50,289
just going to be assets ID values I'd be

1363
00:57:43,068 --> 00:57:53,869
valued that sound there we go and yeah

1364
00:57:50,289 --> 00:57:57,440
what did I just do accidental that's not

1365
00:57:53,869 --> 00:57:59,358
what I wanted there we go so bitmap

1366
00:57:57,440 --> 00:58:02,329
count bitmap infos and bitmaps all these

1367
00:57:59,358 --> 00:58:05,838
things just go away goodbye those are

1368
00:58:02,329 --> 00:58:08,690
gone we then have our total asset count

1369
00:58:05,838 --> 00:58:10,880
I don't know what our total asset count

1370
00:58:08,690 --> 00:58:12,710
actually is i guess we just did 256

1371
00:58:10,880 --> 00:58:14,920
times asset count for these guys so i

1372
00:58:12,710 --> 00:58:18,829
don't know the asset count is now two

1373
00:58:14,920 --> 00:58:20,180
times 250 sativa no that's just we don't

1374
00:58:18,829 --> 00:58:22,940
care about that again that's going to be

1375
00:58:20,179 --> 00:58:27,139
corrected by our file stuff alright so

1376
00:58:22,940 --> 00:58:30,650
assets assets last music slot ID dot

1377
00:58:27,139 --> 00:58:32,028
sound there we go and that's just

1378
00:58:30,650 --> 00:58:36,259
reaching in there to change that one

1379
00:58:32,028 --> 00:58:40,460
value so I think that's really it if

1380
00:58:36,259 --> 00:58:43,690
that makes sense I think that's all so

1381
00:58:40,460 --> 00:58:48,159
let's see if that works

1382
00:58:43,690 --> 00:58:52,889
it does not at all let's take a look at

1383
00:58:48,159 --> 00:58:56,019
why it doesn't work I devalue bitmap

1384
00:58:52,889 --> 00:59:03,098
what are you asking for here ID value

1385
00:58:56,019 --> 00:59:06,280
zero slots is null what do I not

1386
00:59:03,099 --> 00:59:07,599
allocate slots I must have missed

1387
00:59:06,280 --> 00:59:13,500
something that looks like i missed

1388
00:59:07,599 --> 00:59:13,500
something stupid let's take a look oh

1389
00:59:16,050 --> 00:59:26,160
well that's just me not ever actually

1390
00:59:20,769 --> 00:59:28,568
bothering to allocate that slots slots

1391
00:59:26,159 --> 00:59:29,710
so yeah that was just a slight oversight

1392
00:59:28,568 --> 00:59:32,730
there never bothered to actually

1393
00:59:29,710 --> 00:59:32,730
allocate the array

1394
00:59:33,920 --> 00:59:43,829
so my bitmaps are broken as you can see

1395
00:59:39,590 --> 00:59:48,960
but my sound is working which is

1396
00:59:43,829 --> 00:59:50,759
interesting kind of amusing all right so

1397
00:59:48,960 --> 00:59:53,610
what did we do wrong there let's take a

1398
00:59:50,760 --> 00:59:56,310
look we have our sound asset and our

1399
00:59:53,610 --> 01:00:02,460
sound like I said we have our sounds are

1400
00:59:56,309 --> 01:00:08,340
working just fine wait a minute how did

1401
01:00:02,460 --> 01:00:10,380
this what happened here wow that's the

1402
01:00:08,340 --> 01:00:12,000
problem you never finished the slot ID

1403
01:00:10,380 --> 01:00:15,720
thing so slot IDs are supposed to go

1404
01:00:12,000 --> 01:00:18,090
away that's the problem yeah that's just

1405
01:00:15,719 --> 01:00:21,359
that's just crazy and also how did add

1406
01:00:18,090 --> 01:00:28,200
sound info still how did add sound info

1407
01:00:21,360 --> 01:00:30,269
still work okay so this is also kind of

1408
01:00:28,199 --> 01:00:36,089
focus yeah let me go ahead and put this

1409
01:00:30,269 --> 01:00:37,440
in here here we go there we go so this

1410
01:00:36,090 --> 01:00:39,320
should also be something that kind of

1411
01:00:37,440 --> 01:00:42,179
just just happens directly in here i

1412
01:00:39,320 --> 01:00:43,530
ported that a little too literally so

1413
01:00:42,179 --> 01:00:46,049
what we want to do here is say asset

1414
01:00:43,530 --> 01:00:49,380
sound a file name that sound a first

1415
01:00:46,050 --> 01:00:54,690
sample index sample count next to play

1416
01:00:49,380 --> 01:00:56,160
there we go okay and for good measure

1417
01:00:54,690 --> 01:00:58,050
you know what i think i might just

1418
01:00:56,159 --> 01:01:02,219
return the asset from this one as well

1419
01:00:58,050 --> 01:01:03,390
cuz why not there we go even though

1420
01:01:02,219 --> 01:01:05,099
we're not going to use these eventually

1421
01:01:03,389 --> 01:01:07,259
alright so now i should get some errors

1422
01:01:05,099 --> 01:01:09,929
on the slot ID which was what was

1423
01:01:07,260 --> 01:01:11,850
actually supposed to happen and so all i

1424
01:01:09,929 --> 01:01:14,519
need to do now is actually return the

1425
01:01:11,849 --> 01:01:16,589
asset index because that's always going

1426
01:01:14,519 --> 01:01:18,210
to be the actual index that we want

1427
01:01:16,590 --> 01:01:22,100
right we no longer have to think about

1428
01:01:18,210 --> 01:01:25,260
the slot ID the asset index is fine

1429
01:01:22,099 --> 01:01:28,139
alright so in this case we've got the

1430
01:01:25,260 --> 01:01:30,600
asset index and we in fact now we don't

1431
01:01:28,139 --> 01:01:33,509
even need to look up the asset right the

1432
01:01:30,599 --> 01:01:35,069
result is literally just just this so

1433
01:01:33,510 --> 01:01:36,390
that's kind of cool to now we don't have

1434
01:01:35,070 --> 01:01:40,100
that dereference which is which is

1435
01:01:36,389 --> 01:01:42,750
awesome right let's take a look here

1436
01:01:40,099 --> 01:01:44,368
reduce asset slightly same exact thing

1437
01:01:42,750 --> 01:01:47,068
the result is now just there

1438
01:01:44,369 --> 01:01:49,710
so this simplifies a lot of code too so

1439
01:01:47,068 --> 01:01:51,268
I kind of like this change sorry I'm a

1440
01:01:49,710 --> 01:01:52,380
little over i think i just we should be

1441
01:01:51,268 --> 01:01:53,758
ending right now but I'm going to go

1442
01:01:52,380 --> 01:01:54,900
another five minutes just to finish this

1443
01:01:53,759 --> 01:02:00,480
change up because I think it's a good

1444
01:01:54,900 --> 01:02:02,130
change so yeah we've got assets as we

1445
01:02:00,480 --> 01:02:03,719
don't need do any of that this music is

1446
01:02:02,130 --> 01:02:06,450
actually just the thing we actually

1447
01:02:03,719 --> 01:02:07,649
wanted right we already got the asset

1448
01:02:06,449 --> 01:02:13,259
back so now we can just set it so that

1449
01:02:07,650 --> 01:02:15,568
code got simpler and and of course this

1450
01:02:13,259 --> 01:02:16,829
music itself well unfortunately that's a

1451
01:02:15,568 --> 01:02:19,230
little tricky though because we don't

1452
01:02:16,829 --> 01:02:21,390
know what the actual index of the asset

1453
01:02:19,230 --> 01:02:24,389
is when we added it which we actually

1454
01:02:21,389 --> 01:02:27,748
need here so that's a little trickier so

1455
01:02:24,389 --> 01:02:29,998
add sound asset what we may want to do

1456
01:02:27,748 --> 01:02:33,389
here is actually return the index not

1457
01:02:29,998 --> 01:02:35,548
the asset pointer right so we could just

1458
01:02:33,389 --> 01:02:37,498
return the asset index here and I don't

1459
01:02:35,548 --> 01:02:39,059
know if we want an actual asset ID thing

1460
01:02:37,498 --> 01:02:41,399
we've got bitmap oh well I guess we've

1461
01:02:39,059 --> 01:02:47,400
got sound ID and bitmap ID which is what

1462
01:02:41,400 --> 01:02:49,440
those are right so there we go so you

1463
01:02:47,400 --> 01:02:53,249
can see here we've got the actual value

1464
01:02:49,440 --> 01:02:57,980
so our bitmap ID or I should say a

1465
01:02:53,248 --> 01:03:01,528
bitmap ID is just this guy right there

1466
01:02:57,980 --> 01:03:03,900
we go value take it's not value I don't

1467
01:03:01,528 --> 01:03:05,639
even remember what it is result and the

1468
01:03:03,900 --> 01:03:08,489
same would be true here for the sound ID

1469
01:03:05,639 --> 01:03:18,538
right the sound ID is going to be this

1470
01:03:08,489 --> 01:03:20,548
guy there we go and so now when these

1471
01:03:18,539 --> 01:03:23,339
guys come back right it's actually going

1472
01:03:20,548 --> 01:03:27,329
to be a sound ID that comes back for

1473
01:03:23,338 --> 01:03:30,989
this music and then assuming that it's

1474
01:03:27,329 --> 01:03:32,970
the last one how is this working it's

1475
01:03:30,989 --> 01:03:37,190
the lits actually the last music that

1476
01:03:32,969 --> 01:03:37,189
was supposed to be right

1477
01:03:37,989 --> 01:03:43,929
there we go do we have an is valid for

1478
01:03:41,530 --> 01:03:48,070
these guys I don't know if we actually

1479
01:03:43,929 --> 01:03:50,409
do we do so if last music is valid then

1480
01:03:48,070 --> 01:03:56,440
what we would want to do is say you know

1481
01:03:50,409 --> 01:04:00,509
the last music asset Jimmy the last

1482
01:03:56,440 --> 01:04:07,300
music asset it's sound next to play

1483
01:04:00,510 --> 01:04:10,560
right excuse me it sound next to place

1484
01:04:07,300 --> 01:04:20,369
value is going to be whatever this music

1485
01:04:10,559 --> 01:04:20,369
whatever its value was right oops

1486
01:04:20,969 --> 01:04:28,980
connect resides UN 32 is it actually you

1487
01:04:24,400 --> 01:04:28,980
in 30 to the next to play next to play

1488
01:04:29,489 --> 01:04:34,529
there we go all right

1489
01:04:46,309 --> 01:04:52,019
okay so I like that a lot better so

1490
01:04:50,579 --> 01:04:53,340
there we go we kind of did a nice little

1491
01:04:52,019 --> 01:04:56,429
architectural change their they're just

1492
01:04:53,340 --> 01:04:57,750
simplify things so now we have a much

1493
01:04:56,429 --> 01:05:01,529
more straightforward thing we just have

1494
01:04:57,750 --> 01:05:03,090
assets lots assets and tags the slots

1495
01:05:01,530 --> 01:05:06,560
could be unified with the assets

1496
01:05:03,090 --> 01:05:08,820
probably you know if we wanted to I

1497
01:05:06,559 --> 01:05:10,500
don't think that would be a problem

1498
01:05:08,820 --> 01:05:15,180
right you can imagine because right now

1499
01:05:10,500 --> 01:05:18,900
we've got the assets lot go ahead and

1500
01:05:15,179 --> 01:05:21,929
pull that down here to where the actual

1501
01:05:18,900 --> 01:05:24,180
asset is so there you go you can see the

1502
01:05:21,929 --> 01:05:26,309
asset here and so you can see that

1503
01:05:24,179 --> 01:05:27,989
really all it would be is is these

1504
01:05:26,309 --> 01:05:28,889
additional pointers for slots so I don't

1505
01:05:27,989 --> 01:05:30,059
know if we want to do that we could

1506
01:05:28,889 --> 01:05:31,980
unify them we could not there to

1507
01:05:30,059 --> 01:05:33,360
parallel arrays now probably doesn't

1508
01:05:31,980 --> 01:05:35,250
matter whether we do or if we don't but

1509
01:05:33,360 --> 01:05:36,539
you know if it turned out to be some

1510
01:05:35,250 --> 01:05:38,010
kind of cash locality thing that we

1511
01:05:36,539 --> 01:05:40,469
actually cared about maybe we would but

1512
01:05:38,010 --> 01:05:41,910
we can leave it like that for now so

1513
01:05:40,469 --> 01:05:43,230
that was pretty nice i like that change

1514
01:05:41,909 --> 01:05:45,389
simplifies this stuff quite a bit

1515
01:05:43,230 --> 01:05:47,400
reduces the amount of code anything that

1516
01:05:45,389 --> 01:05:50,369
reduces the amount of code is good and

1517
01:05:47,400 --> 01:05:54,389
so that's pretty much I think what we

1518
01:05:50,369 --> 01:05:57,239
want to do there so yeah I'm going to

1519
01:05:54,389 --> 01:05:58,920
leave it there and I'm gonna say that

1520
01:05:57,239 --> 01:06:01,349
the test asset builder will be what will

1521
01:05:58,920 --> 01:06:02,400
pick them back up on tomorrow we've

1522
01:06:01,349 --> 01:06:04,349
already kind of gotten a little bit

1523
01:06:02,400 --> 01:06:05,700
through it but you know will we should

1524
01:06:04,349 --> 01:06:09,809
probably be able to get writing out a

1525
01:06:05,699 --> 01:06:11,719
file tomorrow and and then maybe the day

1526
01:06:09,809 --> 01:06:14,820
after that we'll do reading that file

1527
01:06:11,719 --> 01:06:16,559
into the actual game so yeah I'm pretty

1528
01:06:14,820 --> 01:06:19,620
happy with where that is for now let's

1529
01:06:16,559 --> 01:06:21,809
go ahead and go to the QA and so anyone

1530
01:06:19,619 --> 01:06:23,670
who has questions now is a great time to

1531
01:06:21,809 --> 01:06:26,299
ask them put kyouko in front of them so

1532
01:06:23,670 --> 01:06:26,300
I will see them

1533
01:06:38,869 --> 01:06:44,509
around how many luck is the product so

1534
01:06:41,300 --> 01:06:47,720
far I don't know we've been keeping it

1535
01:06:44,510 --> 01:06:51,440
pretty good I always forget how to run

1536
01:06:47,719 --> 01:07:04,779
this tool I think you can I just say the

1537
01:06:51,440 --> 01:07:09,110
directory block and made so so a 300

1538
01:07:04,780 --> 01:07:15,530
looks like I don't know how many it'll

1539
01:07:09,110 --> 01:07:19,070
be by the time we're done but you know

1540
01:07:15,530 --> 01:07:21,920
game code can kind of tends to

1541
01:07:19,070 --> 01:07:24,530
proliferate that amount so i feel like

1542
01:07:21,920 --> 01:07:26,389
you know we'll probably be able to do

1543
01:07:24,530 --> 01:07:29,230
the engine in in twenty thousand lines

1544
01:07:26,389 --> 01:07:33,980
of code no problem right probably less

1545
01:07:29,230 --> 01:07:36,550
but the game code may may make that a

1546
01:07:33,980 --> 01:07:36,550
larger number

1547
01:07:44,389 --> 01:07:48,539
you mention LZ compression of assets

1548
01:07:46,980 --> 01:07:50,880
will we write the compression algorithm

1549
01:07:48,539 --> 01:07:53,550
well it will 'verily swill right the

1550
01:07:50,880 --> 01:07:55,230
decompression part well I don't know

1551
01:07:53,550 --> 01:07:58,530
that will bother writing a compressor

1552
01:07:55,230 --> 01:08:02,280
but we will write a decompressor again

1553
01:07:58,530 --> 01:08:04,290
everything from the asset pal up I'm not

1554
01:08:02,280 --> 01:08:06,360
going to cover so once we expect the

1555
01:08:04,289 --> 01:08:08,070
asset file that's the end of that will

1556
01:08:06,360 --> 01:08:09,750
just assume that somebody somewhere is

1557
01:08:08,070 --> 01:08:14,690
writing out our asset file in the spec

1558
01:08:09,750 --> 01:08:14,690
that we've defined so

1559
01:08:21,579 --> 01:08:25,519
are we using bitmaps for any other

1560
01:08:23,869 --> 01:08:28,039
reason than how easily they can be

1561
01:08:25,520 --> 01:08:29,930
processed we're not really using bitmaps

1562
01:08:28,039 --> 01:08:31,189
if that makes sense the reason that

1563
01:08:29,930 --> 01:08:32,510
we're loading bitmaps right now is

1564
01:08:31,189 --> 01:08:35,329
because they were the easiest thing to

1565
01:08:32,510 --> 01:08:37,280
show people how to load as an example

1566
01:08:35,329 --> 01:08:40,850
when we were sort of like teaching the

1567
01:08:37,279 --> 01:08:42,769
very basics of programming stuff so

1568
01:08:40,850 --> 01:08:45,440
really the asset pack file will not be

1569
01:08:42,770 --> 01:08:47,600
storing things in BMP format the asset

1570
01:08:45,439 --> 01:08:50,919
pack file will be storing them in just a

1571
01:08:47,600 --> 01:08:56,320
raw you know raw pixels basically right

1572
01:08:50,920 --> 01:09:00,710
so yeah we won't really be using bitmaps

1573
01:08:56,319 --> 01:09:02,359
the actual shipping code and probably as

1574
01:09:00,710 --> 01:09:04,430
early as next week will no longer be

1575
01:09:02,359 --> 01:09:06,139
using bitmaps at all only the thing that

1576
01:09:04,430 --> 01:09:07,640
packs the asset file would potentially

1577
01:09:06,140 --> 01:09:12,650
be loading bitmaps but like I said

1578
01:09:07,640 --> 01:09:15,079
that's not really of our concern what

1579
01:09:12,649 --> 01:09:16,579
does Union do when used in the struct it

1580
01:09:15,079 --> 01:09:20,960
basically says that these two things

1581
01:09:16,579 --> 01:09:23,569
overlap in in storage right so if you

1582
01:09:20,960 --> 01:09:26,539
have a union here like this one what it

1583
01:09:23,569 --> 01:09:29,329
says is i don't need both of these at

1584
01:09:26,539 --> 01:09:33,199
the same time i'm only going to use one

1585
01:09:29,329 --> 01:09:36,350
of them so overlap the storage so like

1586
01:09:33,199 --> 01:09:38,329
these two things here it Alec you know

1587
01:09:36,350 --> 01:09:41,180
when I say asset I'm saying I want space

1588
01:09:38,329 --> 01:09:43,250
for both the UN 32 for the first tag I

1589
01:09:41,180 --> 01:09:45,829
set and the unit 32 41 past the last one

1590
01:09:43,250 --> 01:09:48,800
right I want these two I want storage

1591
01:09:45,829 --> 01:09:51,019
for both of these but here because asset

1592
01:09:48,800 --> 01:09:53,900
is either a sound or a bitmap I know I

1593
01:09:51,020 --> 01:09:56,570
only need one of them so I just tell the

1594
01:09:53,899 --> 01:09:58,099
compiler hey store these overlapping and

1595
01:09:56,569 --> 01:10:00,049
I'm going to address one or the other

1596
01:09:58,100 --> 01:10:02,060
based on which one I want and I don't

1597
01:10:00,050 --> 01:10:03,980
care I don't need you to store the data

1598
01:10:02,060 --> 01:10:07,940
separately so what will actually happen

1599
01:10:03,979 --> 01:10:11,209
in practice and in fact you know what I

1600
01:10:07,939 --> 01:10:13,460
can show you this let me actually show

1601
01:10:11,210 --> 01:10:16,489
you this in practice so you can see what

1602
01:10:13,460 --> 01:10:18,230
I'm talking about so here's the thing

1603
01:10:16,489 --> 01:10:23,689
here's the code to add a bitmap asset

1604
01:10:18,229 --> 01:10:25,039
right so if I come in here oh this is

1605
01:10:23,689 --> 01:10:27,319
adding tags which I don't really care

1606
01:10:25,039 --> 01:10:30,380
about let's let's add an actual bit my

1607
01:10:27,319 --> 01:10:32,549
best there we go so here's the asset

1608
01:10:30,380 --> 01:10:37,840
struct

1609
01:10:32,550 --> 01:10:39,670
okay in memory right and you can see me

1610
01:10:37,840 --> 01:10:41,069
expanding it out so here's the SS struct

1611
01:10:39,670 --> 01:10:43,449
here's the two things I asked for

1612
01:10:41,069 --> 01:10:44,529
separately and then here's the two

1613
01:10:43,449 --> 01:10:47,949
things that I asked for it to be

1614
01:10:44,529 --> 01:10:51,429
overlapping right now what you can see

1615
01:10:47,949 --> 01:10:54,460
about these things is that if I were to

1616
01:10:51,430 --> 01:10:56,470
take their address right so like let me

1617
01:10:54,460 --> 01:10:59,260
take the address of asset first tag

1618
01:10:56,470 --> 01:11:05,130
index right and now let me take the

1619
01:10:59,260 --> 01:11:05,130
address of one pass last tag index oops

1620
01:11:06,300 --> 01:11:10,480
you can see that the addresses are four

1621
01:11:08,979 --> 01:11:13,119
bytes apart because they're separate

1622
01:11:10,479 --> 01:11:15,699
places in memory right in fact if I go

1623
01:11:13,119 --> 01:11:17,649
to a memory view here and I copy this in

1624
01:11:15,699 --> 01:11:22,239
so now we're looking at oh god what did

1625
01:11:17,649 --> 01:11:24,879
you just do Thank You visual studio so

1626
01:11:22,239 --> 01:11:25,809
if I look at these right you can

1627
01:11:24,880 --> 01:11:28,539
actually see that they're at different

1628
01:11:25,810 --> 01:11:30,400
locations right so now if i write to

1629
01:11:28,539 --> 01:11:32,439
them right you can see i just wrote to

1630
01:11:30,399 --> 01:11:34,119
one of them and you can see it updated

1631
01:11:32,439 --> 01:11:36,609
here and now we're going to write to one

1632
01:11:34,119 --> 01:11:38,199
and you can see that i wrote to update

1633
01:11:36,609 --> 01:11:40,389
it here right so there and now then

1634
01:11:38,199 --> 01:11:43,389
they're stored separately right they're

1635
01:11:40,390 --> 01:11:44,920
two separate values so if i wanted to i

1636
01:11:43,390 --> 01:11:47,320
could change this one right i could say

1637
01:11:44,920 --> 01:11:48,789
it actually is a 10 and it understands

1638
01:11:47,319 --> 01:11:52,389
that right there's that's where it is

1639
01:11:48,789 --> 01:11:54,460
right in memory but now what happens

1640
01:11:52,390 --> 01:11:56,079
when I access the shared struct so now

1641
01:11:54,460 --> 01:11:58,149
i'm going to say bitmap file name equals

1642
01:11:56,079 --> 01:11:59,710
this thing well watch what happens right

1643
01:11:58,149 --> 01:12:01,420
here's bitmap file name and here's sound

1644
01:11:59,710 --> 01:12:03,730
file name do you see how they both

1645
01:12:01,420 --> 01:12:06,100
change and the reason for that is that

1646
01:12:03,729 --> 01:12:08,859
the memory is the same this right here

1647
01:12:06,100 --> 01:12:12,700
is the memory for that thing right and

1648
01:12:08,859 --> 01:12:14,739
it's using the same memory for both so

1649
01:12:12,699 --> 01:12:16,960
now and when I when I talk about a line

1650
01:12:14,739 --> 01:12:18,519
percentage it's going to overwrite this

1651
01:12:16,960 --> 01:12:20,140
these values because they're stored in

1652
01:12:18,520 --> 01:12:22,180
the same places right you see how it

1653
01:12:20,140 --> 01:12:24,700
over wrote those because the memory for

1654
01:12:22,180 --> 01:12:26,380
storing them is the same and so if I go

1655
01:12:24,699 --> 01:12:29,170
in here and I change sample count to

1656
01:12:26,380 --> 01:12:30,489
something right i overwrote what was in

1657
01:12:29,170 --> 01:12:32,109
the Y parameter because they're oh

1658
01:12:30,489 --> 01:12:34,899
they're in the exact same place in

1659
01:12:32,109 --> 01:12:36,819
memory so that's what a union means a

1660
01:12:34,899 --> 01:12:38,229
union means basically overlay these two

1661
01:12:36,819 --> 01:12:39,939
things in memory because I know I'm only

1662
01:12:38,229 --> 01:12:43,299
going to use one or the other at a given

1663
01:12:39,939 --> 01:12:45,809
time and so I don't care if their memory

1664
01:12:43,300 --> 01:12:45,810
coincides

1665
01:12:48,929 --> 01:12:56,500
did I see an off by one error on a

1666
01:12:51,219 --> 01:13:07,929
signing bitmap ID that increment correct

1667
01:12:56,500 --> 01:13:12,250
let's take a look I'm looking at the

1668
01:13:07,929 --> 01:13:13,420
wrong code first of all so I'm not sure

1669
01:13:12,250 --> 01:13:15,909
which code you're talking about if

1670
01:13:13,420 --> 01:13:23,289
you're talking about this code that is

1671
01:13:15,909 --> 01:13:25,179
as as expected this is saying i want the

1672
01:13:23,289 --> 01:13:27,909
next ID that's available which is this

1673
01:13:25,179 --> 01:13:31,090
one and once I've taken it I want you to

1674
01:13:27,909 --> 01:13:33,729
increment it so that it is no longer

1675
01:13:31,090 --> 01:13:37,480
going to get used by someone else right

1676
01:13:33,729 --> 01:13:38,769
same is true for the one down here so so

1677
01:13:37,479 --> 01:13:41,279
I don't think so unless you're talking

1678
01:13:38,770 --> 01:13:41,280
about something else

1679
01:13:48,800 --> 01:13:53,489
okay so looks like only off topic

1680
01:13:52,260 --> 01:13:55,800
questions are left i'll see if there's

1681
01:13:53,488 --> 01:13:58,289
any useful ones opinions on specialized

1682
01:13:55,800 --> 01:14:02,090
game film universities like digit pen no

1683
01:13:58,289 --> 01:14:04,408
i do not have one I've never been to a

1684
01:14:02,090 --> 01:14:06,989
specialized university or university for

1685
01:14:04,408 --> 01:14:14,250
that matter at all as a student so I

1686
01:14:06,988 --> 01:14:18,328
really don't know much about them any

1687
01:14:14,250 --> 01:14:22,529
thoughts that Unreal Engine 4 no I have

1688
01:14:18,328 --> 01:14:24,029
not used Unreal Engine 4 how do you

1689
01:14:22,529 --> 01:14:28,170
start learning c c++ school or

1690
01:14:24,029 --> 01:14:33,868
self-taught self-taught I learned when I

1691
01:14:28,170 --> 01:14:35,429
was pretty little kid have you

1692
01:14:33,868 --> 01:14:38,039
considered having a keyboard cam so we

1693
01:14:35,429 --> 01:14:40,289
can see your lightning fingers no I

1694
01:14:38,039 --> 01:14:41,760
haven't maybe someday we'll do a stream

1695
01:14:40,289 --> 01:14:48,090
where I just point it down I guess at

1696
01:14:41,760 --> 01:14:50,489
the at the keyboard did you program

1697
01:14:48,090 --> 01:14:53,310
during the weeks missed on handmade hero

1698
01:14:50,488 --> 01:14:57,649
no I never touch handmade hero except on

1699
01:14:53,310 --> 01:15:05,190
stream so there's never any code changes

1700
01:14:57,649 --> 01:15:06,539
that are not broadcast live ever well I

1701
01:15:05,189 --> 01:15:08,250
should say there are never any code

1702
01:15:06,539 --> 01:15:09,510
changes that aren't recorded sometimes

1703
01:15:08,250 --> 01:15:11,039
our coach James aren't broadcast live

1704
01:15:09,510 --> 01:15:12,300
because either twitch goes down or my

1705
01:15:11,039 --> 01:15:14,609
internet goes down or something like

1706
01:15:12,300 --> 01:15:17,789
that in that case they don't quite get

1707
01:15:14,609 --> 01:15:19,710
broadcast live but they are all recorded

1708
01:15:17,789 --> 01:15:23,010
and they are always available on the

1709
01:15:19,710 --> 01:15:24,810
YouTube archive and most of the time

1710
01:15:23,010 --> 01:15:28,199
ninety-nine percent of the time they are

1711
01:15:24,810 --> 01:15:31,800
broadcast live all right looks like we

1712
01:15:28,198 --> 01:15:34,259
are done looks like we are done for the

1713
01:15:31,800 --> 01:15:36,179
day all right good work today people

1714
01:15:34,260 --> 01:15:40,310
those a good that was good for the first

1715
01:15:36,179 --> 01:15:42,690
day back I think we are in good shape

1716
01:15:40,310 --> 01:15:48,449
let me go ahead and save our miss chief

1717
01:15:42,689 --> 01:15:49,678
here so yeah thank you everyone for

1718
01:15:48,448 --> 01:15:51,029
joining me for another edition of

1719
01:15:49,679 --> 01:15:52,440
handmade here it's been a pleasure

1720
01:15:51,029 --> 01:15:53,729
coding with you as always I'm pleased

1721
01:15:52,439 --> 01:15:55,229
with where we are on the asset system I

1722
01:15:53,729 --> 01:15:57,629
think we're in good shape for tomorrow

1723
01:15:55,229 --> 01:16:00,509
to kind of start writing one out

1724
01:15:57,630 --> 01:16:02,069
and loading it in well we probably write

1725
01:16:00,510 --> 01:16:03,960
it out tomorrow loaded in the next day

1726
01:16:02,069 --> 01:16:05,399
but it's all looking pretty good and I

1727
01:16:03,960 --> 01:16:06,779
like that sort of cleanup we did to the

1728
01:16:05,399 --> 01:16:08,279
SS system today it took a little

1729
01:16:06,779 --> 01:16:10,009
complexity out of it that I think was

1730
01:16:08,279 --> 01:16:11,939
not necessary and that's always good

1731
01:16:10,010 --> 01:16:15,350
sometimes the most productive work you

1732
01:16:11,939 --> 01:16:18,599
do will be with the Delete key that is a

1733
01:16:15,350 --> 01:16:21,659
quote that I am happy to to say I did

1734
01:16:18,600 --> 01:16:24,210
not make it I believe Rudy Scylla Bracy

1735
01:16:21,658 --> 01:16:26,099
said it first back when he was an intern

1736
01:16:24,210 --> 01:16:28,560
at Microsoft I've no idea what happened

1737
01:16:26,100 --> 01:16:32,130
to him but he said it in this true so

1738
01:16:28,560 --> 01:16:33,989
anyway thank you for joining me if you

1739
01:16:32,130 --> 01:16:36,210
would like to follow along the source

1740
01:16:33,988 --> 01:16:37,829
code at home you can always pure to the

1741
01:16:36,210 --> 01:16:39,029
game on handmade he roared it comes with

1742
01:16:37,829 --> 01:16:41,819
a source code and you could download it

1743
01:16:39,029 --> 01:16:44,698
every night from a link that you will

1744
01:16:41,819 --> 01:16:46,319
get in your email when you pre-order you

1745
01:16:44,698 --> 01:16:47,789
can also go to our forum site and ask

1746
01:16:46,319 --> 01:16:49,109
questions on the forums if you're trying

1747
01:16:47,789 --> 01:16:50,880
to learn it's a good place to go there's

1748
01:16:49,109 --> 01:16:53,939
also an antidote guide maintained by the

1749
01:16:50,880 --> 01:16:55,529
community some hardworking folks who

1750
01:16:53,939 --> 01:17:00,029
actually go there and annotate episodes

1751
01:16:55,529 --> 01:17:02,069
for you to view it's pretty darn awesome

1752
01:17:00,029 --> 01:17:03,329
actually there's also some ports to mac

1753
01:17:02,069 --> 01:17:04,649
and linux that people have been working

1754
01:17:03,329 --> 01:17:06,119
on in case you want to follow on a

1755
01:17:04,649 --> 01:17:08,819
different platform before we get there

1756
01:17:06,119 --> 01:17:10,170
so good stuff like that there's also a

1757
01:17:08,819 --> 01:17:11,639
patreon page if you just want to support

1758
01:17:10,170 --> 01:17:13,199
the video series you can subscribe to

1759
01:17:11,639 --> 01:17:14,400
that and we also have a tweet but you

1760
01:17:13,198 --> 01:17:16,500
can subscribe to if you just want to

1761
01:17:14,399 --> 01:17:17,819
know when the series going to be live it

1762
01:17:16,500 --> 01:17:19,889
will tweet the schedule every weekend

1763
01:17:17,819 --> 01:17:21,420
and it also tweets like upcoming in an

1764
01:17:19,889 --> 01:17:24,150
hour kind of tweets to you so if you're

1765
01:17:21,420 --> 01:17:26,789
trying to plan around it it's pretty

1766
01:17:24,149 --> 01:17:30,210
easy to follow that's about it for today

1767
01:17:26,789 --> 01:17:32,369
I hope to see you guys all back here

1768
01:17:30,210 --> 01:17:34,920
tomorrow 5 p.m. pacific daylight time on

1769
01:17:32,369 --> 01:17:36,329
twitch just like today until then have

1770
01:17:34,920 --> 01:17:40,789
fun programming and I will see you guys

1771
01:17:36,329 --> 01:17:40,789
on the internets take it easy everyone

1772
01:18:06,219 --> 01:18:08,279
you

