1
00:00:01,520 --> 00:00:06,898
so here we go welcome to handmade hero

2
00:00:04,400 --> 00:00:11,219
the only show that where we code a

3
00:00:06,899 --> 00:00:14,940
complete game live on stream and you

4
00:00:11,218 --> 00:00:19,198
know III is going on right now and and

5
00:00:14,939 --> 00:00:22,649
you may wonder how come none of the big

6
00:00:19,199 --> 00:00:25,670
press conferences like Sony and

7
00:00:22,649 --> 00:00:30,108
Microsoft and Electronic Arts and

8
00:00:25,670 --> 00:00:32,759
Nintendo how come none of them have

9
00:00:30,109 --> 00:00:34,320
announced handmade hero for their

10
00:00:32,759 --> 00:00:37,140
platform and the reason is because

11
00:00:34,320 --> 00:00:39,600
they're just too intimidated by how

12
00:00:37,140 --> 00:00:42,960
awesome our code is right now and

13
00:00:39,600 --> 00:00:45,120
they're like we don't want this handmade

14
00:00:42,960 --> 00:00:48,210
hero saw for a renderer stuff that they

15
00:00:45,119 --> 00:00:50,159
did to be we don't want people to find

16
00:00:48,210 --> 00:00:51,628
out about this because if they find out

17
00:00:50,159 --> 00:00:54,689
about this they're just gonna look and

18
00:00:51,628 --> 00:00:56,218
go oh my god like we didn't need an Xbox

19
00:00:54,689 --> 00:00:59,339
one we could have done all this on an

20
00:00:56,219 --> 00:01:00,899
Xbox 360 right or whatever and and they

21
00:00:59,340 --> 00:01:03,960
don't want that they've you know so

22
00:01:00,899 --> 00:01:05,820
they're trying to keep it under wraps as

23
00:01:03,960 --> 00:01:08,070
much as possible but what can I say

24
00:01:05,819 --> 00:01:09,779
we're still here and we're still doing

25
00:01:08,069 --> 00:01:12,089
this optimization and we're still making

26
00:01:09,780 --> 00:01:13,228
some pretty amazing stuff and you know

27
00:01:12,090 --> 00:01:15,630
the eventually they're just gonna have

28
00:01:13,228 --> 00:01:17,280
to recognize that and come to terms with

29
00:01:15,629 --> 00:01:19,829
it but we'll let them do that on their

30
00:01:17,280 --> 00:01:21,359
time because we don't want to push them

31
00:01:19,829 --> 00:01:23,700
to accept something before they're ready

32
00:01:21,359 --> 00:01:25,799
you know that's just that's just a

33
00:01:23,700 --> 00:01:28,320
recipe for disaster so we'll just keep

34
00:01:25,799 --> 00:01:31,650
going and then next year's e3 clearly

35
00:01:28,319 --> 00:01:33,569
will be the year where you know pretty

36
00:01:31,650 --> 00:01:35,280
much I mean I don't want to say

37
00:01:33,569 --> 00:01:36,658
definitively but pretty much all three

38
00:01:35,280 --> 00:01:37,920
platform vendors are gonna have to

39
00:01:36,659 --> 00:01:40,109
announce a handmade hero for their

40
00:01:37,920 --> 00:01:41,310
platform otherwise are they really gonna

41
00:01:40,109 --> 00:01:43,950
be relevant at that point you know

42
00:01:41,310 --> 00:01:45,450
probably not so anyway we'll keep an eye

43
00:01:43,950 --> 00:01:48,379
on that as it unfolds but for the

44
00:01:45,450 --> 00:01:50,640
meantime we do have some work to do here

45
00:01:48,379 --> 00:01:52,618
before I jump into it let me simply say

46
00:01:50,640 --> 00:01:54,689
that we are on day 137 so I'm packed day

47
00:01:52,618 --> 00:01:57,478
136 of source code if you want to follow

48
00:01:54,688 --> 00:02:01,258
along with where I am and where I am

49
00:01:57,478 --> 00:02:05,728
today is we got our asset system working

50
00:02:01,259 --> 00:02:07,829
pretty fancily actually and and we've

51
00:02:05,728 --> 00:02:10,860
got quite a bit of things happening now

52
00:02:07,828 --> 00:02:12,049
that are pretty cool but there was one

53
00:02:10,860 --> 00:02:14,540
big missing

54
00:02:12,050 --> 00:02:16,760
Keis in our asset system so far that we

55
00:02:14,539 --> 00:02:19,459
had to take care of and you can see we

56
00:02:16,759 --> 00:02:21,229
left it in there as a bug at the end of

57
00:02:19,460 --> 00:02:21,860
last stream you can see it happening

58
00:02:21,229 --> 00:02:23,539
right now

59
00:02:21,860 --> 00:02:25,400
like when I'm moving down it's not

60
00:02:23,539 --> 00:02:28,459
picking the right asset and we knew why

61
00:02:25,400 --> 00:02:31,310
that was even the head of time I had

62
00:02:28,460 --> 00:02:33,189
said that it would happen and it did the

63
00:02:31,310 --> 00:02:36,289
reason is because we do not have

64
00:02:33,189 --> 00:02:38,900
matching of values in our tag system on

65
00:02:36,289 --> 00:02:40,729
periodic boundaries and so when you get

66
00:02:38,900 --> 00:02:42,620
something like an angle that's periodic

67
00:02:40,729 --> 00:02:45,289
it does not know how to match the

68
00:02:42,620 --> 00:02:47,210
closest thing and we need to fix that so

69
00:02:45,289 --> 00:02:49,189
why don't we spend a little bit of time

70
00:02:47,210 --> 00:02:51,020
on the blackboard today just talking

71
00:02:49,189 --> 00:02:56,419
about exactly what's going on here and

72
00:02:51,020 --> 00:02:57,830
then how we can fix it right so let's

73
00:02:56,419 --> 00:03:01,189
take a look here I'm gonna go ahead and

74
00:02:57,830 --> 00:03:03,860
close that down so just get the

75
00:03:01,189 --> 00:03:10,159
blackboard going so here we are in day

76
00:03:03,860 --> 00:03:14,780
137 and so we want to do periodic tag

77
00:03:10,159 --> 00:03:20,389
matching and I believe it was chocolate

78
00:03:14,780 --> 00:03:23,239
Dino who suggested yesterday a very good

79
00:03:20,389 --> 00:03:24,919
suggestion if I do say so myself which

80
00:03:23,239 --> 00:03:27,080
is that in order to handle all tags

81
00:03:24,919 --> 00:03:29,208
uniformly perhaps we could simply

82
00:03:27,080 --> 00:03:31,700
introduce the concept that all tags were

83
00:03:29,209 --> 00:03:33,170
periodic and the ones that we didn't

84
00:03:31,699 --> 00:03:36,289
actually want to treat as periodic we

85
00:03:33,169 --> 00:03:38,539
would simply give a large period and so

86
00:03:36,289 --> 00:03:40,280
I think that's a pretty good idea so

87
00:03:38,539 --> 00:03:41,389
first let me just explain exactly what

88
00:03:40,280 --> 00:03:43,250
we're dealing with here and then I'm

89
00:03:41,389 --> 00:03:45,649
gonna maybe work out a little bit here

90
00:03:43,250 --> 00:03:47,539
how we might do exactly that which is to

91
00:03:45,650 --> 00:03:49,879
have everything have a period but just

92
00:03:47,539 --> 00:03:51,319
set it large so that it wouldn't affect

93
00:03:49,879 --> 00:03:53,229
things that we didn't want to be

94
00:03:51,319 --> 00:03:55,669
periodic and we'll see how that goes

95
00:03:53,229 --> 00:03:57,889
okay so what's our problem our problem

96
00:03:55,669 --> 00:03:59,149
here is that we are using a function

97
00:03:57,889 --> 00:04:01,849
called atan2

98
00:03:59,150 --> 00:04:03,890
right we used it yesterday and what

99
00:04:01,849 --> 00:04:05,930
18-to does is it maps from a direction

100
00:04:03,889 --> 00:04:08,059
vector right so it takes one of these

101
00:04:05,930 --> 00:04:10,700
little XY vectors that we had in like

102
00:04:08,060 --> 00:04:13,129
our velocity right and it can basically

103
00:04:10,699 --> 00:04:16,488
turn that direction vector that we've

104
00:04:13,129 --> 00:04:19,009
got into an angle right some angle that

105
00:04:16,488 --> 00:04:20,449
says what direction something is facing

106
00:04:19,009 --> 00:04:22,099
and that's a very useful thing for us to

107
00:04:20,449 --> 00:04:25,360
have because it gives us a scalar that

108
00:04:22,100 --> 00:04:27,669
we can use as a tag value

109
00:04:25,360 --> 00:04:29,468
to match against so that we can just

110
00:04:27,668 --> 00:04:30,938
dump sprites into our asset library at

111
00:04:29,468 --> 00:04:32,918
any angle and they'll automatically get

112
00:04:30,939 --> 00:04:34,870
picked out depending on what angle the

113
00:04:32,918 --> 00:04:37,418
player is moving or anything else is

114
00:04:34,870 --> 00:04:39,579
moving that we want to use this this

115
00:04:37,418 --> 00:04:42,459
sort of technique for right but the

116
00:04:39,579 --> 00:04:45,399
problem is as this spins around right as

117
00:04:42,459 --> 00:04:48,310
this spins around its periodic meaning

118
00:04:45,399 --> 00:04:50,859
if we were to rotate you know 360

119
00:04:48,310 --> 00:04:52,418
degrees we would be back at where we

120
00:04:50,860 --> 00:04:54,520
started we would not be at some other

121
00:04:52,418 --> 00:04:56,049
angle and what that means is that we

122
00:04:54,519 --> 00:04:58,149
need to make sure that when we do

123
00:04:56,050 --> 00:05:00,310
matching we can't simply look at the

124
00:04:58,149 --> 00:05:02,500
scalar value and say oh you know this

125
00:05:00,310 --> 00:05:05,110
this scalar value is zero and this other

126
00:05:02,500 --> 00:05:07,209
scalar value is 360 those are very far

127
00:05:05,110 --> 00:05:08,889
apart so they probably don't match we

128
00:05:07,209 --> 00:05:11,528
can't say that because actually these

129
00:05:08,889 --> 00:05:13,658
are the same right and so we need some

130
00:05:11,528 --> 00:05:15,278
way of determining that these things are

131
00:05:13,658 --> 00:05:17,139
actually very proximal to each other

132
00:05:15,278 --> 00:05:18,728
even though the numbers appear very

133
00:05:17,139 --> 00:05:20,139
different and that is the periodic part

134
00:05:18,728 --> 00:05:23,620
of it now what we know about eighteen

135
00:05:20,139 --> 00:05:26,079
two is that the range of atan2 it

136
00:05:23,620 --> 00:05:28,360
actually gives us back numbers that are

137
00:05:26,079 --> 00:05:31,389
symmetric around zero so if this is

138
00:05:28,360 --> 00:05:33,699
theta equals zero what ATM 2 actually

139
00:05:31,389 --> 00:05:36,519
gives us back is not 360 degrees of

140
00:05:33,699 --> 00:05:39,759
rotation but rather it gives us back

141
00:05:36,519 --> 00:05:42,158
negative 180 and 180 so it gives us back

142
00:05:39,759 --> 00:05:44,288
180 degrees of rotation this way and it

143
00:05:42,158 --> 00:05:45,519
gives us back negative 180 degrees this

144
00:05:44,288 --> 00:05:47,228
way and of course if you want to talk

145
00:05:45,519 --> 00:05:50,198
about that in terms of radians it's pi

146
00:05:47,228 --> 00:05:52,658
radians backwards or I'm sorry PI

147
00:05:50,199 --> 00:05:56,588
radians counterclockwise and negative PI

148
00:05:52,658 --> 00:06:01,778
radians clockwise from the the sort of

149
00:05:56,588 --> 00:06:03,218
positive Y axis this way right so what

150
00:06:01,778 --> 00:06:06,129
that means is we want to encode our

151
00:06:03,218 --> 00:06:09,639
animation I'm sorry our asset matching

152
00:06:06,129 --> 00:06:11,650
to be PI and negative PI but we want you

153
00:06:09,639 --> 00:06:13,088
know we want them to be marked that way

154
00:06:11,649 --> 00:06:16,000
so we'd have like something at 0

155
00:06:13,088 --> 00:06:19,019
something at you know half PI something

156
00:06:16,000 --> 00:06:21,728
at PI and something at negative half pi

157
00:06:19,019 --> 00:06:23,649
but then we would want things that

158
00:06:21,728 --> 00:06:26,110
negative PI for example to match against

159
00:06:23,649 --> 00:06:28,778
the PI things and so on right so we want

160
00:06:26,110 --> 00:06:31,210
that to work relatively well now this is

161
00:06:28,778 --> 00:06:33,158
a pretty easy thing to talk about in

162
00:06:31,209 --> 00:06:35,228
terms of how we might parameterize this

163
00:06:33,158 --> 00:06:37,990
right you could easily see us encoding

164
00:06:35,228 --> 00:06:39,099
this as saying okay this parameter has a

165
00:06:37,990 --> 00:06:41,350
period of

166
00:06:39,100 --> 00:06:43,960
pie right and what we could say by that

167
00:06:41,350 --> 00:06:45,790
is it means it goes from negative pi to

168
00:06:43,959 --> 00:06:47,199
positive pi that could be our encoding

169
00:06:45,790 --> 00:06:48,520
so there are always symmetric about zero

170
00:06:47,199 --> 00:06:51,009
and they go from negative to positive

171
00:06:48,519 --> 00:06:53,829
some value and that value is the range

172
00:06:51,009 --> 00:06:55,599
right so that'd be pretty easy and then

173
00:06:53,829 --> 00:06:57,759
if we had some other values that we

174
00:06:55,600 --> 00:06:59,800
didn't want to be periodic we could

175
00:06:57,759 --> 00:07:01,689
simply say that they ranged from like

176
00:06:59,800 --> 00:07:03,610
negative a hundred thousand you know to

177
00:07:01,689 --> 00:07:05,860
positive a hundred thousand or some

178
00:07:03,610 --> 00:07:07,689
really large number that we knew would

179
00:07:05,860 --> 00:07:10,150
not interfere at all with the numbers

180
00:07:07,689 --> 00:07:12,430
that we wanted to encode and as long as

181
00:07:10,149 --> 00:07:14,139
that was at least twice as big as

182
00:07:12,430 --> 00:07:15,400
whatever the biggest numbers we were

183
00:07:14,139 --> 00:07:17,649
trying to encode where we would really

184
00:07:15,399 --> 00:07:22,329
be in no danger of introducing any kind

185
00:07:17,649 --> 00:07:24,159
of false matching so that's not a bad

186
00:07:22,329 --> 00:07:26,349
idea the question is if we were to

187
00:07:24,160 --> 00:07:28,330
actually do this encode encoding those

188
00:07:26,350 --> 00:07:31,000
ranges is pretty easy how do we actually

189
00:07:28,329 --> 00:07:33,219
do the matching and so if we have

190
00:07:31,000 --> 00:07:36,399
something here you know and we've got

191
00:07:33,220 --> 00:07:38,440
something here right like an angle a

192
00:07:36,399 --> 00:07:40,599
that comes in or we have something here

193
00:07:38,439 --> 00:07:42,610
that's an angle B that comes in and we

194
00:07:40,600 --> 00:07:46,150
want to match it against something that

195
00:07:42,610 --> 00:07:47,920
was set here as as being a value PI how

196
00:07:46,149 --> 00:07:50,289
do we actually do it so that both a and

197
00:07:47,920 --> 00:07:52,509
B are measured as relatively small

198
00:07:50,290 --> 00:07:55,180
displacements off of pi instead of B

199
00:07:52,509 --> 00:07:58,050
being measured as some very large

200
00:07:55,180 --> 00:08:02,139
displacement off of pi going the entire

201
00:07:58,050 --> 00:08:04,900
winding around the circle right what are

202
00:08:02,139 --> 00:08:07,930
we going to do exactly to prevent that

203
00:08:04,899 --> 00:08:09,429
from happening right and so what we want

204
00:08:07,930 --> 00:08:11,139
to do is we need to come up with

205
00:08:09,430 --> 00:08:14,769
something called a neighborhood operator

206
00:08:11,139 --> 00:08:17,469
okay so we need basically a neighborhood

207
00:08:14,769 --> 00:08:19,359
operator and when a neighborhood

208
00:08:17,470 --> 00:08:23,260
operator is is the neighborhood operator

209
00:08:19,360 --> 00:08:25,810
is something that takes two of the

210
00:08:23,259 --> 00:08:28,659
values that you want to talk about in a

211
00:08:25,810 --> 00:08:33,399
particular space and produces their

212
00:08:28,660 --> 00:08:35,560
closest possible proximity right meaning

213
00:08:33,399 --> 00:08:38,500
in our case we don't really necessarily

214
00:08:35,559 --> 00:08:39,879
in in in some cases like for example

215
00:08:38,500 --> 00:08:41,559
when you're working with quaternions

216
00:08:39,879 --> 00:08:43,000
when you use neighborhood and

217
00:08:41,559 --> 00:08:46,689
quaternions you actually care about

218
00:08:43,000 --> 00:08:48,730
producing the actual value that is being

219
00:08:46,690 --> 00:08:50,260
neighborhood in this case you could

220
00:08:48,730 --> 00:08:50,710
almost say we don't really care about

221
00:08:50,259 --> 00:08:51,778
that

222
00:08:50,710 --> 00:08:54,749
we only really

223
00:08:51,778 --> 00:08:56,399
need the result of sort of the

224
00:08:54,749 --> 00:08:58,499
neighborhood operations to be

225
00:08:56,399 --> 00:08:59,850
differenced and so if we were to say

226
00:08:58,499 --> 00:09:03,509
that this neighborhood operator let's

227
00:08:59,850 --> 00:09:05,819
say was n parentheses some angle rank

228
00:09:03,509 --> 00:09:08,550
that we're passing in here and what we

229
00:09:05,818 --> 00:09:10,919
wanted to have that do is sorry two

230
00:09:08,549 --> 00:09:14,099
angles and what we wanted to have that

231
00:09:10,919 --> 00:09:15,688
do is say that when it comes out we get

232
00:09:14,100 --> 00:09:18,120
whichever one of these we wanted to

233
00:09:15,688 --> 00:09:20,248
define as being the one neighborhood it

234
00:09:18,120 --> 00:09:22,589
may be it's the first one we get out of

235
00:09:20,249 --> 00:09:25,620
theta prime which is guaranteed to be as

236
00:09:22,589 --> 00:09:29,069
close to fee as it could possibly be and

237
00:09:25,620 --> 00:09:31,078
still mean the same thing right so in

238
00:09:29,068 --> 00:09:33,240
other words if what we get put in there

239
00:09:31,078 --> 00:09:35,909
was something that was wound all the way

240
00:09:33,240 --> 00:09:37,680
around like this and we wanted to

241
00:09:35,909 --> 00:09:40,588
neighbourhood it right so like or if we

242
00:09:37,679 --> 00:09:42,479
just had a and B right what we would

243
00:09:40,589 --> 00:09:46,379
want to get out for an a prime right

244
00:09:42,480 --> 00:09:47,879
would actually be negative the negative

245
00:09:46,379 --> 00:09:49,528
version of a right it would be the one

246
00:09:47,879 --> 00:09:52,470
that winds all the way around and comes

247
00:09:49,528 --> 00:09:56,338
back here so that a is as close to B as

248
00:09:52,470 --> 00:09:58,319
possible rather than a being very far

249
00:09:56,339 --> 00:10:00,600
away from B by being encoded as a

250
00:09:58,318 --> 00:10:02,039
positive winding right so you see how

251
00:10:00,600 --> 00:10:04,558
that would work if I said I want a

252
00:10:02,039 --> 00:10:06,299
neighborhood a and B and I want you to

253
00:10:04,558 --> 00:10:08,159
produce a new a that's in the

254
00:10:06,299 --> 00:10:09,778
neighborhood of B what I would want to

255
00:10:08,159 --> 00:10:11,850
do is take that a which is currently

256
00:10:09,778 --> 00:10:14,399
positively wound and wind it negatively

257
00:10:11,850 --> 00:10:16,980
even though that's larger negative value

258
00:10:14,399 --> 00:10:18,539
than negative PI when subtracted it

259
00:10:16,980 --> 00:10:22,259
produces the smallest distance between

260
00:10:18,539 --> 00:10:23,938
the two right and so what I was saying

261
00:10:22,259 --> 00:10:25,230
here is we don't actually need a

262
00:10:23,938 --> 00:10:26,849
neighborhood operator technically

263
00:10:25,230 --> 00:10:29,610
because we never actually care about

264
00:10:26,850 --> 00:10:33,449
producing that a so really all we want

265
00:10:29,610 --> 00:10:36,480
to do is sort of a neighborhood distance

266
00:10:33,448 --> 00:10:38,458
if you will right so we want to do is

267
00:10:36,480 --> 00:10:40,800
something which essentially says I want

268
00:10:38,458 --> 00:10:42,479
to take the neighborhood operation right

269
00:10:40,799 --> 00:10:44,399
I want to do the neighborhood operation

270
00:10:42,480 --> 00:10:48,688
and then I just want to subtract

271
00:10:44,399 --> 00:10:51,028
whatever the the the neighborhood is and

272
00:10:48,688 --> 00:10:53,730
then take that as the result that's all

273
00:10:51,028 --> 00:10:55,198
I really needed right and so I never

274
00:10:53,730 --> 00:10:57,209
actually need to produce the

275
00:10:55,198 --> 00:10:59,248
neighborhood an operator I only really

276
00:10:57,208 --> 00:11:00,508
need to produce its distance and so that

277
00:10:59,249 --> 00:11:01,980
could also actually make things

278
00:11:00,509 --> 00:11:03,570
potentially a little simpler for us as

279
00:11:01,980 --> 00:11:05,970
well

280
00:11:03,570 --> 00:11:08,639
like I said sometimes you do need to do

281
00:11:05,970 --> 00:11:10,528
neighborhood in this case I don't think

282
00:11:08,639 --> 00:11:12,000
we actually do the time that you have to

283
00:11:10,528 --> 00:11:14,250
do it is when you are doing

284
00:11:12,000 --> 00:11:15,958
interpolation because then if you can

285
00:11:14,250 --> 00:11:18,299
imagine us trying to interpolate and we

286
00:11:15,958 --> 00:11:19,828
want it to go smoothly from B to a we

287
00:11:18,299 --> 00:11:22,229
would need to actually produce that

288
00:11:19,828 --> 00:11:24,269
negative a and know where it was so that

289
00:11:22,230 --> 00:11:25,680
we can interpolate to it because simply

290
00:11:24,269 --> 00:11:28,828
getting the distance between them is not

291
00:11:25,679 --> 00:11:29,729
actually going to be useful right but in

292
00:11:28,828 --> 00:11:32,219
this case we only care about that

293
00:11:29,730 --> 00:11:34,769
distance so how do we do that

294
00:11:32,220 --> 00:11:37,139
right how do we actually figure that out

295
00:11:34,769 --> 00:11:40,470
and what I assume we would like to do

296
00:11:37,139 --> 00:11:43,680
here is we could probably assume right

297
00:11:40,470 --> 00:11:45,089
that for any value that's positive we

298
00:11:43,679 --> 00:11:47,909
know that if we know that all the values

299
00:11:45,089 --> 00:11:49,740
are in in the range of pi to negative pi

300
00:11:47,909 --> 00:11:51,328
which which we can do what we can say

301
00:11:49,740 --> 00:11:55,079
that everything has to be in the period

302
00:11:51,328 --> 00:11:57,269
range right if we know that then when we

303
00:11:55,078 --> 00:12:00,059
look at these guys we can simply say

304
00:11:57,269 --> 00:12:02,039
okay positive and negative values are

305
00:12:00,059 --> 00:12:04,049
always negative

306
00:12:02,039 --> 00:12:07,379
neighborhood into other positive or

307
00:12:04,049 --> 00:12:10,528
negative values right because if I have

308
00:12:07,379 --> 00:12:13,379
any positive number there's no way to

309
00:12:10,528 --> 00:12:15,059
pick up two positive numbers where the

310
00:12:13,379 --> 00:12:17,129
negative version of that number would

311
00:12:15,059 --> 00:12:18,958
actually have been closer right if I

312
00:12:17,129 --> 00:12:21,088
have these two guys here or even like

313
00:12:18,958 --> 00:12:23,969
this guy in this guy or whatever there's

314
00:12:21,089 --> 00:12:25,529
never a case that moving this guy on to

315
00:12:23,970 --> 00:12:27,360
the negative would actually make him

316
00:12:25,528 --> 00:12:30,088
closer because the furthest apart they

317
00:12:27,360 --> 00:12:33,329
could ever actually be right would be on

318
00:12:30,089 --> 00:12:35,250
the poles on either side here I could

319
00:12:33,328 --> 00:12:37,229
never actually get them any closer by

320
00:12:35,250 --> 00:12:40,379
making a negative I'm only ever getting

321
00:12:37,230 --> 00:12:42,360
them a little bit further away right so

322
00:12:40,379 --> 00:12:45,120
what we really need to do here probably

323
00:12:42,360 --> 00:12:47,879
is just test the signs right if the

324
00:12:45,120 --> 00:12:49,528
signs of our numbers are different then

325
00:12:47,879 --> 00:12:52,828
we know that they are not in the same

326
00:12:49,528 --> 00:12:55,019
neighborhood potentially right and if

327
00:12:52,828 --> 00:12:56,338
they're not so so we probably what I'm

328
00:12:55,019 --> 00:12:59,399
assuming anyway what we want to do is

329
00:12:56,339 --> 00:13:01,199
say okay first we could say we want to

330
00:12:59,399 --> 00:13:07,078
see if the signs of the two numbers are

331
00:13:01,198 --> 00:13:08,639
the same or different if they are

332
00:13:07,078 --> 00:13:11,250
different then we're in a situation

333
00:13:08,639 --> 00:13:14,000
where neighborhood inge may help if

334
00:13:11,250 --> 00:13:16,039
they're the same then it wouldn't right

335
00:13:14,000 --> 00:13:17,208
however

336
00:13:16,039 --> 00:13:18,528
now that I think about it we may not

337
00:13:17,208 --> 00:13:20,689
even really need to do that that's

338
00:13:18,528 --> 00:13:23,208
actually absolutely a little premature

339
00:13:20,690 --> 00:13:25,519
so let me just talk about what we will

340
00:13:23,208 --> 00:13:27,258
do to them at that point and then I can

341
00:13:25,519 --> 00:13:29,810
say probably we don't actually ever need

342
00:13:27,259 --> 00:13:32,870
to do the check because we can just skip

343
00:13:29,809 --> 00:13:34,458
it anyway so let's say that we did have

344
00:13:32,870 --> 00:13:35,870
two numbers like here where we've got a

345
00:13:34,458 --> 00:13:38,809
positive number and a negative number

346
00:13:35,870 --> 00:13:42,078
and what we want to do is we want to say

347
00:13:38,809 --> 00:13:44,899
okay we've got B and a and we want to

348
00:13:42,078 --> 00:13:46,250
figure out how far apart they are we see

349
00:13:44,899 --> 00:13:48,708
that their signs are different so what

350
00:13:46,250 --> 00:13:52,009
what we want to do is change one of them

351
00:13:48,708 --> 00:13:54,049
to be the opposite sign right so we want

352
00:13:52,009 --> 00:13:55,970
B to become positive even though it was

353
00:13:54,049 --> 00:13:57,439
negative and it's pretty easy for us to

354
00:13:55,970 --> 00:14:00,440
do that right

355
00:13:57,440 --> 00:14:04,850
this negative winding here right like so

356
00:14:00,440 --> 00:14:07,250
is really just the positive distance

357
00:14:04,850 --> 00:14:11,329
around the full positive range which is

358
00:14:07,250 --> 00:14:13,909
pi plus however much that distance this

359
00:14:11,328 --> 00:14:17,028
this extra amount is here right so if I

360
00:14:13,909 --> 00:14:20,448
took negative pi or I should say rather

361
00:14:17,028 --> 00:14:24,559
if I took be right which is this

362
00:14:20,448 --> 00:14:27,979
position and I said I want to go from

363
00:14:24,559 --> 00:14:30,409
this negative pi to be right so that'd

364
00:14:27,980 --> 00:14:32,959
be plus pi right it would be minus minus

365
00:14:30,409 --> 00:14:34,730
pi if that makes sense I'm gonna start

366
00:14:32,958 --> 00:14:37,399
from negative pi and I'm gonna go to be

367
00:14:34,730 --> 00:14:40,879
right so B minus minus pi which is plus

368
00:14:37,399 --> 00:14:43,100
pi right so what I would get there if I

369
00:14:40,879 --> 00:14:45,439
do that is a positive winding that's

370
00:14:43,100 --> 00:14:46,909
this far right that's exactly that far

371
00:14:45,440 --> 00:14:51,470
however far it would take to get from

372
00:14:46,909 --> 00:14:52,939
here around right and what I want to do

373
00:14:51,470 --> 00:14:54,440
then is say well in order to get there

374
00:14:52,940 --> 00:14:56,899
in the first place I would have had to

375
00:14:54,440 --> 00:14:58,610
have gone pi right in order to get to

376
00:14:56,899 --> 00:15:01,549
the starting point so that would be plus

377
00:14:58,610 --> 00:15:04,459
another PI right and so lo and behold

378
00:15:01,549 --> 00:15:07,278
what that actually is right is just B

379
00:15:04,458 --> 00:15:09,259
plus the full range right it's however

380
00:15:07,278 --> 00:15:12,198
much the range is which is two pi right

381
00:15:09,259 --> 00:15:14,809
so it's just B plus the range is what

382
00:15:12,198 --> 00:15:17,359
maps B from a negative number into a

383
00:15:14,809 --> 00:15:19,809
positive number right does that make

384
00:15:17,360 --> 00:15:19,810
sense okay

385
00:15:22,429 --> 00:15:29,609
so that's pretty easy the other question

386
00:15:27,059 --> 00:15:31,619
is well okay let's say we had a number

387
00:15:29,610 --> 00:15:33,720
that was positive so this is for a

388
00:15:31,620 --> 00:15:35,460
negative right for a negative this is

389
00:15:33,720 --> 00:15:38,220
what we would do we take B and we'd add

390
00:15:35,460 --> 00:15:39,930
the range right now what would we do if

391
00:15:38,220 --> 00:15:41,519
we want to do the opposite if we wanted

392
00:15:39,929 --> 00:15:44,789
to take a positive number and move it

393
00:15:41,519 --> 00:15:48,269
into the negative how would we do that

394
00:15:44,789 --> 00:15:49,889
right well same thing right if we wanted

395
00:15:48,269 --> 00:15:51,838
to make it negative what we do is we'd

396
00:15:49,889 --> 00:15:53,580
say we'd start here we want to figure

397
00:15:51,839 --> 00:15:57,020
out how much that is how much is that

398
00:15:53,580 --> 00:16:00,540
well it's going to be going to a right

399
00:15:57,019 --> 00:16:03,240
and it's going to be going to a from PI

400
00:16:00,539 --> 00:16:03,719
right so it's minus PI right does that

401
00:16:03,240 --> 00:16:07,139
make sense

402
00:16:03,720 --> 00:16:10,320
starting at pi going to a but of course

403
00:16:07,139 --> 00:16:12,929
to start at pi I'm sorry to start at

404
00:16:10,320 --> 00:16:14,700
negative PI and go there I would need to

405
00:16:12,929 --> 00:16:16,919
have subtracted PI to begin with so it's

406
00:16:14,700 --> 00:16:20,100
another PI subtraction and hey guess

407
00:16:16,919 --> 00:16:22,110
what it's a minus the range to do the

408
00:16:20,100 --> 00:16:24,089
positive version right so we have our

409
00:16:22,110 --> 00:16:26,339
positive version is this our negative

410
00:16:24,089 --> 00:16:27,750
version is this and so really all we're

411
00:16:26,339 --> 00:16:30,390
talking about here to do the

412
00:16:27,750 --> 00:16:32,789
neighborhood operator is just to say

413
00:16:30,389 --> 00:16:34,740
whatever the value is that comes in

414
00:16:32,789 --> 00:16:36,779
right in terms of our of our

415
00:16:34,740 --> 00:16:39,810
neighborhood and write whatever the

416
00:16:36,779 --> 00:16:41,240
neighborhood and this is not really a

417
00:16:39,809 --> 00:16:43,529
neighborhood operator I shouldn't say

418
00:16:41,240 --> 00:16:45,720
because I mean I guess I'll write it out

419
00:16:43,529 --> 00:16:48,199
the whole one just four four five right

420
00:16:45,720 --> 00:16:51,450
so if we wanted to do neighborhood of

421
00:16:48,200 --> 00:16:53,460
theta and Phi right then basically what

422
00:16:51,450 --> 00:17:01,050
we have is we have a two pronged thing

423
00:16:53,460 --> 00:17:08,400
we have in the case where theta is is is

424
00:17:01,049 --> 00:17:11,250
less than zero right and also fee do

425
00:17:08,400 --> 00:17:15,920
this way and fee is greater than zero

426
00:17:11,250 --> 00:17:15,920
right so

427
00:17:16,750 --> 00:17:25,630
traffic ahead oh you know I gotta admit

428
00:17:23,109 --> 00:17:27,369
this is kind of strange this has nothing

429
00:17:25,630 --> 00:17:29,799
to do with what we're talking about but

430
00:17:27,369 --> 00:17:32,069
I realized I've totally forgotten how in

431
00:17:29,798 --> 00:17:35,190
regular math notation you write and I

432
00:17:32,069 --> 00:17:38,769
only ever think about things in C now

433
00:17:35,190 --> 00:17:43,320
and like you don't write it that way

434
00:17:38,769 --> 00:17:45,609
right you you write it different you

435
00:17:43,319 --> 00:17:47,200
write like a different symbol right

436
00:17:45,609 --> 00:17:50,199
there's other symbols or something for

437
00:17:47,200 --> 00:17:52,210
it Wow sudonym 73 if you don't mind if

438
00:17:50,200 --> 00:17:53,830
you're on the stream right now if you

439
00:17:52,210 --> 00:17:55,659
could remind me at the end what it is

440
00:17:53,829 --> 00:17:57,668
it's totally like it's falling out of my

441
00:17:55,659 --> 00:18:00,640
brain completely I only think of and as

442
00:17:57,669 --> 00:18:03,009
that and that's not a math and at all

443
00:18:00,640 --> 00:18:05,370
all right anyway ignoring that sorry to

444
00:18:03,009 --> 00:18:08,109
go down tangent there so we have

445
00:18:05,369 --> 00:18:10,209
basically a case where they're separated

446
00:18:08,109 --> 00:18:12,579
then we need to neighborhood otherwise

447
00:18:10,210 --> 00:18:14,259
you know basically in any other case

448
00:18:12,579 --> 00:18:16,089
it's it's this right we can just return

449
00:18:14,259 --> 00:18:19,058
it so if they're the same sign it's fine

450
00:18:16,089 --> 00:18:22,209
if they're different signs then really

451
00:18:19,058 --> 00:18:26,558
all we have to do is say okay I just

452
00:18:22,210 --> 00:18:30,370
need to know whatever theta is I'm going

453
00:18:26,558 --> 00:18:33,460
to add the range of the of the thing

454
00:18:30,369 --> 00:18:37,298
times whatever the sine of theta is

455
00:18:33,460 --> 00:18:40,200
right because if the sine of theta well

456
00:18:37,298 --> 00:18:44,500
actually I should say I'm going to

457
00:18:40,200 --> 00:18:47,980
subtract the range times the sine of

458
00:18:44,500 --> 00:18:50,230
theta right because if it was negative I

459
00:18:47,980 --> 00:18:52,360
want to add the range it was positive I

460
00:18:50,230 --> 00:18:54,250
want to subtract the range so really

461
00:18:52,359 --> 00:18:57,219
this is the entirety of the neighborhood

462
00:18:54,250 --> 00:18:58,569
that actually has to happen so what I

463
00:18:57,220 --> 00:19:00,519
was saying before is we don't actually

464
00:18:58,569 --> 00:19:02,649
have to produce this we only have to

465
00:19:00,519 --> 00:19:04,240
produce the actual difference between

466
00:19:02,650 --> 00:19:05,380
the two and since we only have to

467
00:19:04,240 --> 00:19:06,880
produce the difference between the two

468
00:19:05,380 --> 00:19:09,100
we can actually just do both of them

469
00:19:06,880 --> 00:19:11,770
right what we can do instead is just say

470
00:19:09,099 --> 00:19:14,230
all right what is this you know what's

471
00:19:11,769 --> 00:19:16,389
what's the what's this distance right so

472
00:19:14,230 --> 00:19:19,450
that's that's some that's different zero

473
00:19:16,390 --> 00:19:21,940
right and then we can also do this one

474
00:19:19,450 --> 00:19:27,130
here we can also say all right also give

475
00:19:21,940 --> 00:19:30,220
me you know theta minus the range times

476
00:19:27,130 --> 00:19:35,650
the sine of theta right

477
00:19:30,220 --> 00:19:38,049
we can also do that - fee absolute value

478
00:19:35,650 --> 00:19:40,269
and that's the other distance these are

479
00:19:38,049 --> 00:19:41,970
the two Canada distances and then we can

480
00:19:40,269 --> 00:19:44,559
just take whichever one of them is less

481
00:19:41,970 --> 00:19:47,559
right so we basically don't ever

482
00:19:44,559 --> 00:19:49,990
actually have to do any checking to see

483
00:19:47,559 --> 00:19:52,359
which one it is we could just produce

484
00:19:49,990 --> 00:19:57,460
them both and then take the the max

485
00:19:52,359 --> 00:19:59,049
right are the min rather so we don't

486
00:19:57,460 --> 00:20:00,789
actually need a branch if we don't want

487
00:19:59,049 --> 00:20:02,259
one we could write one it doesn't really

488
00:20:00,789 --> 00:20:04,269
matter one way or the other this is not

489
00:20:02,259 --> 00:20:10,450
probably gigs possibly thatx that

490
00:20:04,269 --> 00:20:12,639
expensive right but I just wanted to

491
00:20:10,450 --> 00:20:15,009
point that out all right so anyway if we

492
00:20:12,640 --> 00:20:17,920
wanted to add this periodicity to our

493
00:20:15,009 --> 00:20:18,430
asset matching right then let's open

494
00:20:17,920 --> 00:20:20,860
that up

495
00:20:18,430 --> 00:20:23,529
here's handmade asset what we want to do

496
00:20:20,859 --> 00:20:26,289
is we need some understanding of what

497
00:20:23,529 --> 00:20:28,990
those periods actually are if that makes

498
00:20:26,289 --> 00:20:31,299
sense and so what we can do is say in

499
00:20:28,990 --> 00:20:33,130
that asset you know when we have our our

500
00:20:31,299 --> 00:20:35,440
tags here we probably don't need a

501
00:20:33,130 --> 00:20:37,510
period for every tag because really it's

502
00:20:35,440 --> 00:20:38,769
just the tag type that determines it so

503
00:20:37,509 --> 00:20:41,140
really all we need to do is have

504
00:20:38,769 --> 00:20:46,180
something in here that's like tag period

505
00:20:41,140 --> 00:20:49,480
right and the period or a like I guess

506
00:20:46,180 --> 00:20:53,410
it's actually half tag period maybe it's

507
00:20:49,480 --> 00:20:56,650
what we'd say or half tag range and that

508
00:20:53,410 --> 00:20:58,960
half tag range is basically when we when

509
00:20:56,650 --> 00:21:01,150
we go in to to the asset tags we have

510
00:20:58,960 --> 00:21:02,829
those IDs we know that we can only have

511
00:21:01,150 --> 00:21:05,080
tag count of them so we really just need

512
00:21:02,829 --> 00:21:06,879
to store them once for every type of tag

513
00:21:05,079 --> 00:21:09,460
that we might have and then we just set

514
00:21:06,880 --> 00:21:10,870
it right and so what I'm gonna do since

515
00:21:09,460 --> 00:21:13,059
most of the time I think we don't really

516
00:21:10,869 --> 00:21:14,949
care about this it's only the periodic

517
00:21:13,059 --> 00:21:17,349
ones which are going to be less frequent

518
00:21:14,950 --> 00:21:19,420
than the non periodic ones what I can do

519
00:21:17,349 --> 00:21:22,959
here is just say ok when we Nilla

520
00:21:19,420 --> 00:21:31,360
initialize the game assets I can just go

521
00:21:22,960 --> 00:21:33,670
through the tag types right like so and

522
00:21:31,359 --> 00:21:35,979
for each tag type I'm just gonna say

523
00:21:33,670 --> 00:21:38,170
that the half tag range a bat tag type

524
00:21:35,980 --> 00:21:39,750
is always going to be some very large

525
00:21:38,170 --> 00:21:41,580
number right

526
00:21:39,750 --> 00:21:43,140
it doesn't really matter what it is just

527
00:21:41,579 --> 00:21:45,179
something that we're never ever gonna

528
00:21:43,140 --> 00:21:45,630
type in right that's just not gonna

529
00:21:45,180 --> 00:21:47,250
happen

530
00:21:45,630 --> 00:21:50,430
it's not it's not something that we'd

531
00:21:47,250 --> 00:21:53,369
ever actually have right and so when I

532
00:21:50,430 --> 00:21:55,980
set that then what I can do is just for

533
00:21:53,369 --> 00:21:57,389
the few that I actually need periodicity

534
00:21:55,980 --> 00:21:59,730
and we don't know what those are ahead

535
00:21:57,390 --> 00:22:01,620
of time at the moment but we know we

536
00:21:59,730 --> 00:22:03,450
have at least one so far so we'll set

537
00:22:01,619 --> 00:22:05,549
that one we know for something like

538
00:22:03,450 --> 00:22:07,309
facing direction we know that it's just

539
00:22:05,549 --> 00:22:10,819
pi that's how far it goes in either

540
00:22:07,309 --> 00:22:14,879
direction and so if we have that now

541
00:22:10,819 --> 00:22:17,069
what we can do is we can use that but

542
00:22:14,880 --> 00:22:19,290
whenever we do our tag matching to make

543
00:22:17,069 --> 00:22:21,329
sure that now we actually match in a

544
00:22:19,289 --> 00:22:23,609
reasonable way right so here's our best

545
00:22:21,329 --> 00:22:25,529
match asset when we actually do our

546
00:22:23,609 --> 00:22:27,479
difference here what we want to do now

547
00:22:25,529 --> 00:22:30,059
is actually take that neighborhood a

548
00:22:27,480 --> 00:22:32,190
difference so what we're gonna do is is

549
00:22:30,059 --> 00:22:37,169
do something like this you know we can

550
00:22:32,190 --> 00:22:41,250
have an a value right like so and a B

551
00:22:37,170 --> 00:22:44,009
value like this and then the difference

552
00:22:41,250 --> 00:22:45,420
is going to be a minus B but what we

553
00:22:44,009 --> 00:22:47,369
would like to do now I don't think we

554
00:22:45,420 --> 00:22:49,680
have a function for sine so I might just

555
00:22:47,369 --> 00:22:52,529
do since we don't really care too much

556
00:22:49,680 --> 00:22:55,920
in here see here Oh

557
00:22:52,529 --> 00:23:01,589
sign up there it is so we could actually

558
00:22:55,920 --> 00:23:02,670
use sign up you can see at the moment

559
00:23:01,589 --> 00:23:05,220
it's not a particularly good

560
00:23:02,670 --> 00:23:06,600
implementation it actually does the the

561
00:23:05,220 --> 00:23:08,370
if here although I don't know the

562
00:23:06,599 --> 00:23:10,379
compiler might be smart enough to fix

563
00:23:08,369 --> 00:23:11,819
that and that's also an int we don't

564
00:23:10,380 --> 00:23:13,380
have a sign up for things so I think I'm

565
00:23:11,819 --> 00:23:19,740
just gonna do the simple if I'm just

566
00:23:13,380 --> 00:23:21,810
gonna say if a basically well you know

567
00:23:19,740 --> 00:23:23,460
I'd have to check checking the sign of

568
00:23:21,809 --> 00:23:25,289
the two different things to see if there

569
00:23:23,460 --> 00:23:27,180
I don't know maybe I will write it in

570
00:23:25,289 --> 00:23:28,319
terms of sign now I think about it it

571
00:23:27,180 --> 00:23:29,910
would be a little annoying

572
00:23:28,319 --> 00:23:31,619
so I'm just gonna assume that someday

573
00:23:29,910 --> 00:23:34,320
we'll implement a better version here

574
00:23:31,619 --> 00:23:36,659
right and in there we go

575
00:23:34,319 --> 00:23:37,500
so we now we've got a sign up there we

576
00:23:36,660 --> 00:23:40,380
have it

577
00:23:37,500 --> 00:23:44,880
so I'm gonna go ahead and say the sine

578
00:23:40,380 --> 00:23:48,660
of a I'm gonna take that the assets I'm

579
00:23:44,880 --> 00:23:54,570
gonna say the tag the half tag range of

580
00:23:48,660 --> 00:23:56,460
whatever the tag type is like so so

581
00:23:54,569 --> 00:24:00,539
whatever the tag type is the half tag

582
00:23:56,460 --> 00:24:02,970
range of that we want to add the full

583
00:24:00,539 --> 00:24:05,700
range so now that I think about it

584
00:24:02,970 --> 00:24:07,440
actually we could just store tag range

585
00:24:05,700 --> 00:24:10,319
because do we ever actually just because

586
00:24:07,440 --> 00:24:12,539
it's plus and might yeah okay so maybe

587
00:24:10,319 --> 00:24:14,399
we just want tag range we take that tag

588
00:24:12,539 --> 00:24:17,549
range if you multiply it by the sine of

589
00:24:14,400 --> 00:24:22,530
a right and then we're going to go ahead

590
00:24:17,549 --> 00:24:23,970
and subtract from that right like so so

591
00:24:22,529 --> 00:24:26,399
that would do our neighborhood for us

592
00:24:23,970 --> 00:24:29,220
right that would pick the the OP the

593
00:24:26,400 --> 00:24:32,970
other version so what we can do here is

594
00:24:29,220 --> 00:24:34,860
do like I said a d0 and a d1 here is our

595
00:24:32,970 --> 00:24:37,679
new a value and we can subtract B this

596
00:24:34,859 --> 00:24:40,409
way like so and then I'll go ahead and

597
00:24:37,679 --> 00:24:45,509
roll those absolute values up in here so

598
00:24:40,410 --> 00:24:47,160
that we have them like so oops so that

599
00:24:45,509 --> 00:24:50,129
will produce our two differences and

600
00:24:47,160 --> 00:24:53,790
then what we can do now is we can just

601
00:24:50,130 --> 00:24:57,210
use whichever of them is the least right

602
00:24:53,789 --> 00:24:59,549
we can say minimum and then when we use

603
00:24:57,210 --> 00:25:02,429
that that will give us a better match

604
00:24:59,549 --> 00:25:05,879
right so now let me go let's change this

605
00:25:02,429 --> 00:25:07,590
back to tag range like so on we go and

606
00:25:05,880 --> 00:25:10,470
we could switch it to tau 32 which I

607
00:25:07,589 --> 00:25:12,899
know that was the people we're excited

608
00:25:10,470 --> 00:25:14,370
about that well okay one person was

609
00:25:12,900 --> 00:25:17,490
exciting stellar seven was really

610
00:25:14,369 --> 00:25:21,389
excited about tau so you know let's keep

611
00:25:17,490 --> 00:25:22,049
it going let's keep the Tau rolling and

612
00:25:21,390 --> 00:25:25,950
so there we go

613
00:25:22,049 --> 00:25:27,779
so let's go ahead and and step into this

614
00:25:25,950 --> 00:25:30,390
so we can see how that works

615
00:25:27,779 --> 00:25:32,730
we want the asset group stuff I don't

616
00:25:30,390 --> 00:25:35,970
know if that's loaded here game assets

617
00:25:32,730 --> 00:25:37,349
of course it's not so let's go ahead and

618
00:25:35,970 --> 00:25:40,440
open it up

619
00:25:37,349 --> 00:25:43,859
handmade asset dot cpp here we are

620
00:25:40,440 --> 00:25:44,610
handmade asset dot cpp let's take a look

621
00:25:43,859 --> 00:25:48,359
at that match

622
00:25:44,609 --> 00:25:50,039
we'll go ahead and step in here so what

623
00:25:48,359 --> 00:25:52,919
are we matching against we're matching

624
00:25:50,039 --> 00:25:55,980
zero and zero not particularly

625
00:25:52,920 --> 00:25:57,330
interesting at the moment that's okay so

626
00:25:55,980 --> 00:26:00,150
we take the difference between those two

627
00:25:57,329 --> 00:26:03,089
guys and unsurprisingly that's going to

628
00:26:00,150 --> 00:26:05,040
be zero and then this guy is also going

629
00:26:03,089 --> 00:26:06,959
to well and so we can see it doing it

630
00:26:05,039 --> 00:26:09,000
here it's producing the other possible

631
00:26:06,960 --> 00:26:12,329
difference between the two values which

632
00:26:09,000 --> 00:26:13,529
is a full towel and that's correct so

633
00:26:12,329 --> 00:26:14,730
then we're going to take the minimum

634
00:26:13,529 --> 00:26:15,960
over those two which should still be

635
00:26:14,730 --> 00:26:18,419
zero and off we go

636
00:26:15,960 --> 00:26:20,340
right and then we take the weight we

637
00:26:18,419 --> 00:26:24,059
weighed it and compute the total DIF

638
00:26:20,339 --> 00:26:26,609
that way so I think that's probably more

639
00:26:24,058 --> 00:26:29,700
correct now in terms of tag matching and

640
00:26:26,609 --> 00:26:32,339
so we should get a nice yeah and we do a

641
00:26:29,700 --> 00:26:34,019
nice directional feel to our guy now and

642
00:26:32,339 --> 00:26:36,089
so now we're loading the correct assets

643
00:26:34,019 --> 00:26:38,099
periodically and we haven't actually

644
00:26:36,089 --> 00:26:40,649
done anything which present prevents us

645
00:26:38,099 --> 00:26:43,769
from using a periodic asset so that's

646
00:26:40,650 --> 00:26:45,870
also good so that's really what we

647
00:26:43,769 --> 00:26:48,058
needed to do today so we're kind of done

648
00:26:45,869 --> 00:26:49,409
we've got a half hour though so then

649
00:26:48,058 --> 00:26:51,329
what I'd like to start working on some

650
00:26:49,410 --> 00:26:53,160
other stuff one thing that we have

651
00:26:51,329 --> 00:26:54,779
that's leftover that we need to fix is

652
00:26:53,160 --> 00:26:57,929
the fact that we currently are not

653
00:26:54,779 --> 00:27:00,569
actually we didn't go ahead and do our

654
00:26:57,929 --> 00:27:03,780
displacements there we still have those

655
00:27:00,569 --> 00:27:07,019
displacements happening as you can see

656
00:27:03,779 --> 00:27:07,740
the they're the shadows are in the wrong

657
00:27:07,019 --> 00:27:09,929
place and so on

658
00:27:07,740 --> 00:27:11,849
that's because we had those

659
00:27:09,929 --> 00:27:13,798
displacements encoded in here like so

660
00:27:11,849 --> 00:27:17,039
and we've never actually gone ahead and

661
00:27:13,798 --> 00:27:18,690
backported those displacements so what

662
00:27:17,039 --> 00:27:21,960
I'd like to do is I'd like to go ahead

663
00:27:18,690 --> 00:27:23,970
and just see what that standard

664
00:27:21,960 --> 00:27:25,529
displacement actually would be I think I

665
00:27:23,970 --> 00:27:27,058
can just if it's the same

666
00:27:25,529 --> 00:27:30,750
it looks like it's exactly the same for

667
00:27:27,058 --> 00:27:33,029
everybody it's 72 182 for 4 basically

668
00:27:30,750 --> 00:27:36,359
all of them what I'd like to do is just

669
00:27:33,029 --> 00:27:39,149
take a quick look and see if there's any

670
00:27:36,359 --> 00:27:42,449
reason I can't just use the same one for

671
00:27:39,150 --> 00:27:44,759
everybody what I can probably do here is

672
00:27:42,450 --> 00:27:47,370
something like this just for the time

673
00:27:44,759 --> 00:27:49,859
being I think you can do something like

674
00:27:47,369 --> 00:27:54,418
this I don't actually remember let's go

675
00:27:49,859 --> 00:27:56,559
to debug load bitmap that actually takes

676
00:27:54,419 --> 00:28:02,920
a line percentage

677
00:27:56,559 --> 00:28:05,169
so top down a line okay so I wouldn't

678
00:28:02,920 --> 00:28:08,080
quite be able to do it that way what I

679
00:28:05,170 --> 00:28:13,090
would have to do is something like this

680
00:28:08,079 --> 00:28:15,099
loaded bitmap temp array who knows what

681
00:28:13,089 --> 00:28:21,399
that is or you know what I guess like

682
00:28:15,099 --> 00:28:25,569
well me me alright let's do it this way

683
00:28:21,400 --> 00:28:26,560
let's do file name like so so what I'm

684
00:28:25,569 --> 00:28:28,899
going to do is I'm just gonna grab all

685
00:28:26,559 --> 00:28:34,569
these files I'm gonna shove them in here

686
00:28:28,900 --> 00:28:36,400
right like this pretty simple we could

687
00:28:34,569 --> 00:28:38,369
we could we could even because we've got

688
00:28:36,400 --> 00:28:42,340
time in the stream we could even go nuts

689
00:28:38,369 --> 00:28:48,849
something like this something that was

690
00:28:42,339 --> 00:28:51,220
absolutely ridiculous and I don't even

691
00:28:48,849 --> 00:28:55,539
want to know what I just did there but

692
00:28:51,220 --> 00:28:57,819
Emacs macro that up there we go so now

693
00:28:55,539 --> 00:29:00,190
we've got all of these guys in a file

694
00:28:57,819 --> 00:29:03,869
name array I can go through each of them

695
00:29:00,190 --> 00:29:10,809
I can go ahead load them bitmap v map

696
00:29:03,869 --> 00:29:17,199
equals debug load bitmap and then I will

697
00:29:10,809 --> 00:29:19,480
take file name you know I ordered a 10

698
00:29:17,200 --> 00:29:21,640
Quiles keyboard recently because I

699
00:29:19,480 --> 00:29:24,099
really enjoy on out I fit the stupid

700
00:29:21,640 --> 00:29:25,930
insert key all the time but the zero key

701
00:29:24,099 --> 00:29:27,969
I'm really looking forward to that not

702
00:29:25,930 --> 00:29:30,450
happening I never really want to be in

703
00:29:27,970 --> 00:29:34,930
overwrite mode almost never

704
00:29:30,450 --> 00:29:38,559
so yeah alright so anyway let's go ahead

705
00:29:34,930 --> 00:29:40,269
and finish this up file name plus the

706
00:29:38,559 --> 00:29:43,629
size so there's our fit maps that we're

707
00:29:40,269 --> 00:29:47,500
loading and then I can do top down a

708
00:29:43,630 --> 00:29:53,620
line of these guys just to see top down

709
00:29:47,500 --> 00:29:55,599
line loaded bitmap and V to align align

710
00:29:53,619 --> 00:29:58,739
X over this so that does the safe ratio

711
00:29:55,599 --> 00:30:02,139
which is what we wanted so here's that

712
00:29:58,740 --> 00:30:05,349
so that will produce that top-down a

713
00:30:02,140 --> 00:30:07,660
line for us this is basically a no op

714
00:30:05,349 --> 00:30:09,039
here so just give us something to break

715
00:30:07,660 --> 00:30:13,680
on

716
00:30:09,039 --> 00:30:20,589
so that should do it right let's see

717
00:30:13,680 --> 00:30:23,410
oops top Cataline there we go alright so

718
00:30:20,589 --> 00:30:25,539
now if I go ahead and take a look at

719
00:30:23,410 --> 00:30:27,880
what those come out to be I can I can

720
00:30:25,539 --> 00:30:30,730
see the thing that I actually wanted to

721
00:30:27,880 --> 00:30:32,560
see of course no I can't because Visual

722
00:30:30,730 --> 00:30:35,589
Studio is fighting me every step of the

723
00:30:32,559 --> 00:30:37,779
way as it always does you cannot see

724
00:30:35,589 --> 00:30:40,059
bitmap because it's undefined okay thank

725
00:30:37,779 --> 00:30:41,740
you so much that's wonderful

726
00:30:40,059 --> 00:30:44,649
I guess I will actually have to do

727
00:30:41,740 --> 00:30:50,650
something here just to make the debugger

728
00:30:44,650 --> 00:30:53,440
not be awful okay there we go now taking

729
00:30:50,650 --> 00:30:55,780
a look at the bitmap here is the actual

730
00:30:53,440 --> 00:30:59,170
line percentage it's a point five point

731
00:30:55,779 --> 00:31:01,389
five wait what happened there shouldn't

732
00:30:59,170 --> 00:31:02,920
this have said it I don't understand why

733
00:31:01,390 --> 00:31:05,800
am I still looking at a point five point

734
00:31:02,920 --> 00:31:07,810
five that doesn't seem right

735
00:31:05,799 --> 00:31:11,919
does that seem right to you guys it

736
00:31:07,809 --> 00:31:13,990
doesn't seem right to me I want to know

737
00:31:11,920 --> 00:31:19,690
what happened there let's go ahead in

738
00:31:13,990 --> 00:31:24,220
here alright so we've got those set

739
00:31:19,690 --> 00:31:33,100
recalls top down a line oh it doesn't

740
00:31:24,220 --> 00:31:35,759
work the way I thought it does oh did

741
00:31:33,099 --> 00:31:35,759
the stream go down

742
00:31:36,789 --> 00:31:43,950
it says reconnecting that was pretty

743
00:31:40,809 --> 00:31:46,269
weird hmm

744
00:31:43,950 --> 00:31:52,840
well I don't know what just happened but

745
00:31:46,269 --> 00:31:54,309
I'm gonna keep on going don't know if

746
00:31:52,839 --> 00:31:57,089
that was meteor 4 that was twitch twitch

747
00:31:54,309 --> 00:32:00,700
is been acting really strange lately

748
00:31:57,089 --> 00:32:05,109
let's ignore it and keep going anyway so

749
00:32:00,700 --> 00:32:10,390
top down the line just do it this way

750
00:32:05,109 --> 00:32:12,369
and now I can start getting those values

751
00:32:10,390 --> 00:32:15,430
that which is what I wanted in the first

752
00:32:12,369 --> 00:32:19,000
place okay so let's take a look at the

753
00:32:15,430 --> 00:32:21,340
results and now this is looking a lot

754
00:32:19,000 --> 00:32:23,349
better so it's point that's let's so

755
00:32:21,339 --> 00:32:27,339
let's just save these guys we've

756
00:32:23,349 --> 00:32:30,309
basically got a 0.5 and a 1 5 6 so let's

757
00:32:27,339 --> 00:32:34,720
see if those are the same same the same

758
00:32:30,309 --> 00:32:36,579
the same the same all right

759
00:32:34,720 --> 00:32:40,000
so all of those are basically exactly

760
00:32:36,579 --> 00:32:43,329
the same so that's all good nothing

761
00:32:40,000 --> 00:32:47,079
weird going on there so that's all fine

762
00:32:43,329 --> 00:32:48,549
so all I really need to do then I guess

763
00:32:47,079 --> 00:32:51,609
I need to actually go back and grab

764
00:32:48,549 --> 00:32:54,279
these guys so well I really need to do

765
00:32:51,609 --> 00:32:57,669
then if I want these to be correct is I

766
00:32:54,279 --> 00:33:02,920
just have to make a V 2 which is the

767
00:32:57,670 --> 00:33:09,029
hero line and that hero line is what

768
00:33:02,920 --> 00:33:13,269
we've read out which is 0.5 and and

769
00:33:09,029 --> 00:33:15,700
0.156 etc right and so now that every

770
00:33:13,269 --> 00:33:17,859
time we do an add bitmap asset we can

771
00:33:15,700 --> 00:33:23,590
just specify that that alignment value

772
00:33:17,859 --> 00:33:28,479
here like so and I think that's about it

773
00:33:23,589 --> 00:33:29,199
I think that's all that we would need so

774
00:33:28,480 --> 00:33:36,339
there we go

775
00:33:29,200 --> 00:33:40,690
off you go and let's see if that does

776
00:33:36,339 --> 00:33:42,609
any better for us yes there we go so now

777
00:33:40,690 --> 00:33:45,970
everyone is aligned properly and that's

778
00:33:42,609 --> 00:33:48,909
all good and so I think we are now at

779
00:33:45,970 --> 00:33:50,380
the point where the asset system is

780
00:33:48,910 --> 00:33:54,490
doing what we need

781
00:33:50,380 --> 00:33:58,600
to do so yeah I'm pretty happy with that

782
00:33:54,490 --> 00:34:03,660
I feel like and at least I don't I don't

783
00:33:58,599 --> 00:34:07,509
really know at this point I feel like

784
00:34:03,660 --> 00:34:13,000
we're probably at the point where we

785
00:34:07,509 --> 00:34:13,989
want to go ahead and I mean I feel like

786
00:34:13,000 --> 00:34:15,489
we're at the point where we want to

787
00:34:13,989 --> 00:34:18,789
start talking about the asset file

788
00:34:15,489 --> 00:34:21,039
format now right I mean maybe it's a

789
00:34:18,789 --> 00:34:23,559
little premature I don't know but we

790
00:34:21,039 --> 00:34:28,300
kind of now have a situation where we

791
00:34:23,559 --> 00:34:30,128
could reasonably say that we have an

792
00:34:28,300 --> 00:34:33,269
asset file format here's what it is

793
00:34:30,128 --> 00:34:36,429
and here's how we want it to work right

794
00:34:33,269 --> 00:34:38,230
and we could do that so I feel like

795
00:34:36,429 --> 00:34:41,019
we're at the point where maybe it's

796
00:34:38,230 --> 00:34:44,980
worth thinking about that I don't know

797
00:34:41,019 --> 00:34:46,929
that's just my that's just my my gut

798
00:34:44,980 --> 00:34:50,590
feeling because we now do all the mat

799
00:34:46,929 --> 00:34:53,230
asset matching that we wanted to do like

800
00:34:50,590 --> 00:34:55,120
I said before I don't actually know that

801
00:34:53,230 --> 00:34:57,400
we want to ever have anything where we

802
00:34:55,119 --> 00:34:59,019
use descriptors in the asset file format

803
00:34:57,400 --> 00:35:02,970
I think we want that always to come from

804
00:34:59,019 --> 00:35:06,449
the code side so it kind of feels to me

805
00:35:02,969 --> 00:35:09,579
like that may be the end of it right

806
00:35:06,449 --> 00:35:14,250
that kind of feels to me like that may

807
00:35:09,579 --> 00:35:14,250
be it so let's see here

808
00:35:20,760 --> 00:35:27,660
everything feels pretty smooth no issues

809
00:35:27,989 --> 00:35:36,789
yeah so I think we're good I think we're

810
00:35:34,780 --> 00:35:39,369
in good shape

811
00:35:36,789 --> 00:35:43,269
so yeah so I'm trying to think now

812
00:35:39,369 --> 00:35:45,608
handmade H so asset streaming is is

813
00:35:43,269 --> 00:35:47,559
basically in there's a little bit more

814
00:35:45,608 --> 00:35:49,480
we would want to do so let's just let's

815
00:35:47,559 --> 00:35:52,509
just came for

816
00:35:49,480 --> 00:35:56,440
kind of fixing for finishing this guy up

817
00:35:52,510 --> 00:35:59,619
right and in order to do that I think we

818
00:35:56,440 --> 00:36:06,490
want to do a file format right that we

819
00:35:59,619 --> 00:36:09,880
load the assets off of disk and then we

820
00:36:06,489 --> 00:36:12,549
have to do our memory management to make

821
00:36:09,880 --> 00:36:15,039
sure that we don't have stuff sort of

822
00:36:12,550 --> 00:36:16,390
willy-nilly and then I'm trying to think

823
00:36:15,039 --> 00:36:18,279
if there's anything else we really want

824
00:36:16,389 --> 00:36:21,509
from the asset streaming system or if we

825
00:36:18,280 --> 00:36:25,240
can just check that off as being done I

826
00:36:21,510 --> 00:36:26,650
can't really think of much else you know

827
00:36:25,239 --> 00:36:28,059
if we have to optimize it later we have

828
00:36:26,650 --> 00:36:29,490
to optimize it later but that's not

829
00:36:28,059 --> 00:36:32,710
something we have to address right now

830
00:36:29,489 --> 00:36:34,328
what we could do I suppose is before we

831
00:36:32,710 --> 00:36:37,019
do the file form I actually know we

832
00:36:34,329 --> 00:36:40,060
could do maybe we start on audio right

833
00:36:37,019 --> 00:36:42,068
maybe audio is a good idea maybe we

834
00:36:40,059 --> 00:36:43,568
bring that up here and we basically say

835
00:36:42,068 --> 00:36:45,670
let's get these two guys done together

836
00:36:43,568 --> 00:36:49,289
because if we don't have audio in the

837
00:36:45,670 --> 00:36:51,490
asset loading stuff then that would be

838
00:36:49,289 --> 00:36:53,619
yeah that would be a problem obviously

839
00:36:51,489 --> 00:36:56,348
right so we've got about 20 minutes left

840
00:36:53,619 --> 00:36:57,608
maybe we'll throw in audio loading so

841
00:36:56,349 --> 00:37:01,690
that we know that that's actually

842
00:36:57,608 --> 00:37:04,420
working and yeah and then we could go

843
00:37:01,690 --> 00:37:06,789
ahead and and do the file format once we

844
00:37:04,420 --> 00:37:09,369
know that it would support both audio

845
00:37:06,789 --> 00:37:13,630
and video that seems pretty reasonable

846
00:37:09,369 --> 00:37:14,500
to me all right so if we're gonna do

847
00:37:13,630 --> 00:37:16,150
that

848
00:37:14,500 --> 00:37:18,519
we already did part of what we need to

849
00:37:16,150 --> 00:37:21,910
do for that right we have asset slots

850
00:37:18,519 --> 00:37:24,190
for sounds what we don't have at the

851
00:37:21,909 --> 00:37:26,139
moment and we also have tags for sounds

852
00:37:24,190 --> 00:37:27,909
right what we don't have for at the

853
00:37:26,139 --> 00:37:30,339
moment is actually any way to load a

854
00:37:27,909 --> 00:37:32,409
sound right we don't even have

855
00:37:30,340 --> 00:37:33,970
we don't even have anything like that

856
00:37:32,409 --> 00:37:35,739
and so when we have something like load

857
00:37:33,969 --> 00:37:38,019
bitmap work here we have and we have

858
00:37:35,739 --> 00:37:42,069
load bitmap we we basically want to make

859
00:37:38,019 --> 00:37:44,530
an exact copy of this conceptually but

860
00:37:42,070 --> 00:37:45,850
instead of doing it with bitmaps it

861
00:37:44,530 --> 00:37:48,040
would do it with audio so instead of

862
00:37:45,849 --> 00:37:49,690
doing the work necessary to load a

863
00:37:48,039 --> 00:37:51,969
bitmap out it would do the work

864
00:37:49,690 --> 00:37:54,550
necessary to load a piece of audio out

865
00:37:51,969 --> 00:37:57,009
right and so what we want here is

866
00:37:54,550 --> 00:37:59,530
something that you know looks basically

867
00:37:57,010 --> 00:38:02,950
like exactly the same you know something

868
00:37:59,530 --> 00:38:06,940
like this where it does this but for but

869
00:38:02,949 --> 00:38:09,669
for sounds right so here sounds here's

870
00:38:06,940 --> 00:38:11,860
the ID value from them we set the asset

871
00:38:09,670 --> 00:38:14,320
state of them and does exactly the same

872
00:38:11,860 --> 00:38:16,630
thing we then begin a task for it you

873
00:38:14,320 --> 00:38:18,910
know we get the task out but instead we

874
00:38:16,630 --> 00:38:21,599
would we would do like a load sound work

875
00:38:18,909 --> 00:38:24,539
here and then we would just fill out

876
00:38:21,599 --> 00:38:27,069
exactly the same stuff only it would be

877
00:38:24,539 --> 00:38:28,570
instead of a bitmap or something like

878
00:38:27,070 --> 00:38:35,289
this it would be some something else

879
00:38:28,570 --> 00:38:41,350
entirely right so yeah that is what we

880
00:38:35,289 --> 00:38:46,599
would want to do and I feel like that's

881
00:38:41,349 --> 00:38:48,159
really that would really be it right so

882
00:38:46,599 --> 00:38:50,670
what we need to do is have a thing we've

883
00:38:48,159 --> 00:38:53,279
got you know we've got loaded bitmap

884
00:38:50,670 --> 00:38:55,900
let's take a look at the renderer there

885
00:38:53,280 --> 00:38:58,000
here's a loaded bitmap we've got loaded

886
00:38:55,900 --> 00:39:01,269
bitmap and what we really need to do I

887
00:38:58,000 --> 00:39:04,780
suppose is make an equivalent for audio

888
00:39:01,269 --> 00:39:07,960
right and so we would need something

889
00:39:04,780 --> 00:39:10,180
like loaded bitmap for audio right we

890
00:39:07,960 --> 00:39:13,690
would need something like loaded sound

891
00:39:10,179 --> 00:39:15,669
you know and that would probably be

892
00:39:13,690 --> 00:39:19,960
something that just told us what the

893
00:39:15,670 --> 00:39:22,420
sample count was right like that and it

894
00:39:19,960 --> 00:39:25,150
would be you know something which yeah

895
00:39:22,420 --> 00:39:26,950
which was just like how many samples and

896
00:39:25,150 --> 00:39:30,280
then the the memory for the samples

897
00:39:26,949 --> 00:39:32,529
right something like this I feel like

898
00:39:30,280 --> 00:39:35,050
that's all we'd really need because all

899
00:39:32,530 --> 00:39:36,550
of our sound samples all of our sounds

900
00:39:35,050 --> 00:39:38,289
would be in the same format presumably

901
00:39:36,550 --> 00:39:40,599
so there really wouldn't be much else

902
00:39:38,289 --> 00:39:42,460
that we would need to do

903
00:39:40,599 --> 00:39:47,440
so yeah so I feel like that would be

904
00:39:42,460 --> 00:39:54,789
basically it yeah I'm trying to think if

905
00:39:47,440 --> 00:39:56,500
there's anything else I also think we

906
00:39:54,789 --> 00:39:59,500
may be able to do some collapsing here

907
00:39:56,500 --> 00:40:00,880
of stuff there's there's there's more

908
00:39:59,500 --> 00:40:02,260
stuff we'll be able to do a little bit

909
00:40:00,880 --> 00:40:06,068
later but for now I think would be

910
00:40:02,260 --> 00:40:09,700
something like that and so yeah so as we

911
00:40:06,068 --> 00:40:12,429
do this stuff we would want to to have

912
00:40:09,699 --> 00:40:13,389
that work order be something like this

913
00:40:12,429 --> 00:40:20,230
right

914
00:40:13,389 --> 00:40:23,798
and this guy would just be you know yeah

915
00:40:20,230 --> 00:40:26,230
yeah a loaded sound star like so and

916
00:40:23,798 --> 00:40:28,509
looking at it there it's it's really

917
00:40:26,230 --> 00:40:29,920
there really so close I feel like maybe

918
00:40:28,510 --> 00:40:31,510
we will end up collapsing these I'm

919
00:40:29,920 --> 00:40:33,880
gonna leave them two separate things at

920
00:40:31,510 --> 00:40:35,289
the moment but I feel like they're they

921
00:40:33,880 --> 00:40:38,440
may end up being so close that we just

922
00:40:35,289 --> 00:40:39,910
collapse them down into one thing I you

923
00:40:38,440 --> 00:40:41,440
know it's really hard to know sometimes

924
00:40:39,909 --> 00:40:42,879
before you do something how different

925
00:40:41,440 --> 00:40:44,470
Tuco paths are gonna be but when they

926
00:40:42,880 --> 00:40:45,778
start to look much like compression

927
00:40:44,469 --> 00:40:48,159
returning to programming you know

928
00:40:45,778 --> 00:40:49,750
approach you just want to look and go oh

929
00:40:48,159 --> 00:40:51,159
these two things are working exactly the

930
00:40:49,750 --> 00:40:54,309
same way maybe I can merge them together

931
00:40:51,159 --> 00:40:55,118
and make you know less less code that's

932
00:40:54,309 --> 00:40:57,730
always a good thing

933
00:40:55,119 --> 00:40:59,680
so okay if we do something like this

934
00:40:57,730 --> 00:41:01,929
where we have a load sound we pass it

935
00:40:59,679 --> 00:41:06,129
the ID we go ahead and do this this

936
00:41:01,929 --> 00:41:09,068
stuff what we would want to do now is we

937
00:41:06,130 --> 00:41:11,230
would want to wait a minute that should

938
00:41:09,068 --> 00:41:15,400
be there should be a sound this would be

939
00:41:11,230 --> 00:41:18,460
like sound ID right sound ID do we have

940
00:41:15,400 --> 00:41:21,700
that yet we've got bitmap ID there's

941
00:41:18,460 --> 00:41:23,798
audio ID I don't know is it it should it

942
00:41:21,699 --> 00:41:30,518
be audio it should be sound ID right

943
00:41:23,798 --> 00:41:33,579
there we go sound ID so on okay so when

944
00:41:30,518 --> 00:41:35,558
we load that in that would all be good

945
00:41:33,579 --> 00:41:38,380
and then we just need the actual

946
00:41:35,559 --> 00:41:41,769
function like this guy here which

947
00:41:38,380 --> 00:41:43,269
actually does the sound loading right so

948
00:41:41,768 --> 00:41:47,139
we need something that does like load

949
00:41:43,268 --> 00:41:49,899
sound work right like so and what this

950
00:41:47,139 --> 00:41:51,518
would do is this would you know do the

951
00:41:49,900 --> 00:41:53,539
equivalent of what the bitmap thing does

952
00:41:51,518 --> 00:41:55,609
it would say alright

953
00:41:53,539 --> 00:41:58,369
have a sound info structure presumably

954
00:41:55,610 --> 00:42:03,340
which is exactly the same as the asset

955
00:41:58,369 --> 00:42:06,380
pit MapInfo kind of thing so like this

956
00:42:03,340 --> 00:42:09,220
it's sound info at the moment it would

957
00:42:06,380 --> 00:42:15,369
probably also just be a file name right

958
00:42:09,219 --> 00:42:17,750
asset sound info sound infos like so and

959
00:42:15,369 --> 00:42:20,269
we want to grab out whichever one that

960
00:42:17,750 --> 00:42:22,699
is because that's the one that we would

961
00:42:20,269 --> 00:42:25,880
actually use so there's our work ID

962
00:42:22,699 --> 00:42:28,129
value right blah blah blah we would then

963
00:42:25,880 --> 00:42:29,720
go ahead and say whatever that one is

964
00:42:28,130 --> 00:42:32,390
that we're loading here the sound

965
00:42:29,719 --> 00:42:35,059
we'd probably have a debug load wav file

966
00:42:32,389 --> 00:42:37,849
for something like this right we would

967
00:42:35,059 --> 00:42:41,389
grab out just the file name from the

968
00:42:37,849 --> 00:42:47,929
info we do that and then we would well

969
00:42:41,389 --> 00:42:51,319
that would be the end of it right we'd

970
00:42:47,929 --> 00:42:59,299
set the sounds like this right so we'd

971
00:42:51,320 --> 00:43:09,590
say something like this right so the

972
00:42:59,300 --> 00:43:11,390
slots the asset slot has a loaded bitmap

973
00:43:09,590 --> 00:43:15,860
in it and so at the moment this would

974
00:43:11,389 --> 00:43:18,609
actually be something like this right so

975
00:43:15,860 --> 00:43:20,450
whichever one it is that's what it does

976
00:43:18,610 --> 00:43:23,510
so it would be something like that

977
00:43:20,449 --> 00:43:25,339
that's really what we would do we don't

978
00:43:23,510 --> 00:43:26,990
have that loaded sound structure yet

979
00:43:25,340 --> 00:43:29,269
really but we're just going to pretend

980
00:43:26,989 --> 00:43:32,269
that we do and then we'll work on

981
00:43:29,269 --> 00:43:35,690
building one a little bit later so let's

982
00:43:32,269 --> 00:43:38,929
just go ahead and debug this here and

983
00:43:35,690 --> 00:43:42,079
that's the wrong type debug load wave

984
00:43:38,929 --> 00:43:46,009
and so really all we really have here to

985
00:43:42,079 --> 00:43:48,440
do is actually have a debug load wave

986
00:43:46,010 --> 00:43:51,590
which is something that would be the

987
00:43:48,440 --> 00:43:53,630
equivalent of debug load bitmap but for

988
00:43:51,590 --> 00:43:55,880
WAV files right that's all we really

989
00:43:53,630 --> 00:43:59,570
need in order to sort of get this

990
00:43:55,880 --> 00:44:02,780
started in its basic form so let's go

991
00:43:59,570 --> 00:44:05,760
ahead and and see we've got our our

992
00:44:02,780 --> 00:44:07,950
debug load bitmap function

993
00:44:05,760 --> 00:44:09,990
or at least I thought we did oh right

994
00:44:07,949 --> 00:44:12,059
it's in here now we've got our debug

995
00:44:09,989 --> 00:44:14,459
load bitmap function and so we want to

996
00:44:12,059 --> 00:44:17,039
do now is is do you know a version of

997
00:44:14,460 --> 00:44:20,220
that for wav files that's going to do

998
00:44:17,039 --> 00:44:22,409
exactly the same thing so let's see if

999
00:44:20,219 --> 00:44:24,599
we can just start to bang a little bit

1000
00:44:22,409 --> 00:44:27,059
of that out as well so we want to do

1001
00:44:24,599 --> 00:44:30,360
essentially the same thing here that we

1002
00:44:27,059 --> 00:44:34,349
were doing before if we want to make one

1003
00:44:30,360 --> 00:44:35,910
of these there we go we want to

1004
00:44:34,349 --> 00:44:38,579
basically do exactly the same thing we

1005
00:44:35,909 --> 00:44:40,440
want to do a debug read entire file we

1006
00:44:38,579 --> 00:44:42,989
want to see if we actually get anything

1007
00:44:40,440 --> 00:44:45,570
back if we do then we want to take the

1008
00:44:42,989 --> 00:44:51,389
contents and start to look at them as an

1009
00:44:45,570 --> 00:44:53,130
actual WAV file now WAV files are a

1010
00:44:51,389 --> 00:44:56,329
little bit more difficult to read than

1011
00:44:53,130 --> 00:44:59,579
BMP files but not by much

1012
00:44:56,329 --> 00:45:00,679
I'll go ahead and bring up the docs here

1013
00:44:59,579 --> 00:45:05,099
for it

1014
00:45:00,679 --> 00:45:08,179
Wow file format right and here we go

1015
00:45:05,099 --> 00:45:12,679
let's see if we can get a reasonable

1016
00:45:08,179 --> 00:45:19,799
documentation of them here let's see

1017
00:45:12,679 --> 00:45:21,989
let's see so this will probably do let's

1018
00:45:19,800 --> 00:45:26,820
see what we have here multiplayer let's

1019
00:45:21,989 --> 00:45:30,000
see do we want all of that pages 56 wave

1020
00:45:26,820 --> 00:45:34,170
update I don't know that we really want

1021
00:45:30,000 --> 00:45:36,480
all of this stuff this this I guess

1022
00:45:34,170 --> 00:45:40,430
looks like a pretty maybe we'll just use

1023
00:45:36,480 --> 00:45:46,610
this web page I don't know seems okay

1024
00:45:40,429 --> 00:45:49,739
anyway so the way that WAV files work is

1025
00:45:46,610 --> 00:45:53,250
there's this concept of a chunked file

1026
00:45:49,739 --> 00:45:55,049
format and these show up I don't know if

1027
00:45:53,250 --> 00:45:57,780
the first one of them I don't want to

1028
00:45:55,050 --> 00:46:00,810
doubt it was really the first but there

1029
00:45:57,780 --> 00:46:04,440
was a thing called the IFF format right

1030
00:46:00,809 --> 00:46:07,529
and it was it was I think Electronic

1031
00:46:04,440 --> 00:46:14,099
Arts made it it was by Electronic Arts

1032
00:46:07,530 --> 00:46:15,720
and it was on the Amiga and this is the

1033
00:46:14,099 --> 00:46:17,460
first one that I ever remember seeing

1034
00:46:15,719 --> 00:46:19,529
that worked this way I suspect there

1035
00:46:17,460 --> 00:46:21,780
were ones before it because

1036
00:46:19,530 --> 00:46:23,970
it just seems like there probably would

1037
00:46:21,780 --> 00:46:27,000
have been but I just don't recall any of

1038
00:46:23,969 --> 00:46:31,859
them and basically the way that they

1039
00:46:27,000 --> 00:46:36,019
work is they try to create a generic way

1040
00:46:31,860 --> 00:46:39,360
of encoding hierarchical data basically

1041
00:46:36,019 --> 00:46:41,039
so what they do is in the file now

1042
00:46:39,360 --> 00:46:42,240
remember exactly like a bitmap this is

1043
00:46:41,039 --> 00:46:45,750
just in the file there's bytes in the

1044
00:46:42,239 --> 00:46:50,909
file what they do is they encode like an

1045
00:46:45,750 --> 00:46:52,739
ID and that ID is usually in these cases

1046
00:46:50,909 --> 00:46:55,559
it's four bytes is the way these work

1047
00:46:52,739 --> 00:46:57,869
and the four bytes are mapped to actual

1048
00:46:55,559 --> 00:47:01,920
ASCII characters typically so they'll be

1049
00:46:57,869 --> 00:47:04,319
things like wav e or something will be

1050
00:47:01,920 --> 00:47:07,079
the actual ID of the chunk so it's not

1051
00:47:04,320 --> 00:47:09,930
like 0 1 2 or the IDs the IDs are

1052
00:47:07,079 --> 00:47:12,210
actually often for different character

1053
00:47:09,929 --> 00:47:15,000
values packed together so this is some

1054
00:47:12,210 --> 00:47:16,470
crazy big huge number if you looked at

1055
00:47:15,000 --> 00:47:21,570
it as a 32-bit integer because it's

1056
00:47:16,469 --> 00:47:22,589
actually the four bytes of wave right so

1057
00:47:21,570 --> 00:47:24,809
typically what they do is they have an

1058
00:47:22,590 --> 00:47:28,680
ID of a chunk and then they have a size

1059
00:47:24,809 --> 00:47:30,570
and what you typically do is the way you

1060
00:47:28,679 --> 00:47:33,029
write a file parser for one of these is

1061
00:47:30,570 --> 00:47:35,280
you look to see what the ID is and then

1062
00:47:33,030 --> 00:47:38,010
you look to see what the size is if you

1063
00:47:35,280 --> 00:47:39,840
understand the type of ID that you see

1064
00:47:38,010 --> 00:47:42,420
so it's one of the ones in the set that

1065
00:47:39,840 --> 00:47:44,670
your program understands you then parse

1066
00:47:42,420 --> 00:47:47,099
out you'd like you know go start

1067
00:47:44,670 --> 00:47:49,740
processing the bytes that are size

1068
00:47:47,099 --> 00:47:52,469
amount of bytes in the file that come

1069
00:47:49,739 --> 00:47:55,679
after that chunk if you don't understand

1070
00:47:52,469 --> 00:47:56,669
it you just skip that section right

1071
00:47:55,679 --> 00:47:58,649
because you know how big it is because

1072
00:47:56,670 --> 00:48:01,380
of the size and you read the next

1073
00:47:58,650 --> 00:48:04,950
section and that section also has an ID

1074
00:48:01,380 --> 00:48:07,200
and a size right now inside these you

1075
00:48:04,949 --> 00:48:08,849
can also have if one of the definitions

1076
00:48:07,199 --> 00:48:10,799
of the chunk is that it's got sub chunks

1077
00:48:08,849 --> 00:48:13,799
then inside them you can have more

1078
00:48:10,800 --> 00:48:16,289
little IDs and sizes right that have

1079
00:48:13,800 --> 00:48:18,090
other stuff so you can basically just

1080
00:48:16,289 --> 00:48:20,309
imagine this sort of hierarchical

1081
00:48:18,090 --> 00:48:21,990
structure that you can create with these

1082
00:48:20,309 --> 00:48:23,489
things it's not a particularly good way

1083
00:48:21,989 --> 00:48:24,929
of doing a file format I definitely

1084
00:48:23,489 --> 00:48:28,199
don't recommend it it's an old-school

1085
00:48:24,929 --> 00:48:31,669
way of doing things you can almost think

1086
00:48:28,199 --> 00:48:31,669
of it as like HTML and binary

1087
00:48:33,139 --> 00:48:37,019
better than HTML because Lisa's got

1088
00:48:35,340 --> 00:48:40,320
sizes and can encode binary data in a

1089
00:48:37,019 --> 00:48:45,389
sane way but it is just a little bit

1090
00:48:40,320 --> 00:48:47,760
janky to say the least anyway so if we

1091
00:48:45,389 --> 00:48:49,859
go ahead and start to parse this what we

1092
00:48:47,760 --> 00:48:53,880
would need to do is start by taking a

1093
00:48:49,860 --> 00:48:55,380
look at what the what the typical WAV

1094
00:48:53,880 --> 00:48:56,640
file has in it and again we don't have

1095
00:48:55,380 --> 00:48:58,740
to do anything robust here we don't

1096
00:48:56,639 --> 00:49:01,019
actually have to read all WAV files we

1097
00:48:58,739 --> 00:49:02,519
just have to read something so that we

1098
00:49:01,019 --> 00:49:04,259
can use it for our debugging because

1099
00:49:02,519 --> 00:49:05,969
we'll assume that our asset processor is

1100
00:49:04,260 --> 00:49:08,190
the thing that would do any of the fancy

1101
00:49:05,969 --> 00:49:09,539
reading and putting assets into the

1102
00:49:08,190 --> 00:49:10,980
format that we want so this is only our

1103
00:49:09,539 --> 00:49:13,380
debug loader so just like the bitmap

1104
00:49:10,980 --> 00:49:18,090
loader it only has to load some example

1105
00:49:13,380 --> 00:49:19,980
assets you know that we would use so if

1106
00:49:18,090 --> 00:49:21,630
we wanted to do that this is the

1107
00:49:19,980 --> 00:49:23,309
specification for what happens at the

1108
00:49:21,630 --> 00:49:24,720
beginning of the file you can see it's

1109
00:49:23,309 --> 00:49:26,309
little endian order so that's kind of

1110
00:49:24,719 --> 00:49:28,409
handy and you can see what we've got

1111
00:49:26,309 --> 00:49:30,059
here is we've got a four byte field that

1112
00:49:28,409 --> 00:49:33,149
should say R if we've got a four byte

1113
00:49:30,059 --> 00:49:35,009
field that says how big the chunk is and

1114
00:49:33,150 --> 00:49:37,619
then we've got a four byte field that

1115
00:49:35,010 --> 00:49:40,110
just says wave right that's what we

1116
00:49:37,619 --> 00:49:42,960
should see and so I'm gonna go ahead and

1117
00:49:40,110 --> 00:49:46,530
assume that that's true and I'm gonna

1118
00:49:42,960 --> 00:49:49,559
make a wave header here and you can

1119
00:49:46,530 --> 00:49:51,750
actually I believe this is all of the

1120
00:49:49,559 --> 00:49:54,480
chunks in the file will have this kind

1121
00:49:51,750 --> 00:49:56,070
of format right so let's see here they

1122
00:49:54,480 --> 00:49:58,500
have chunk ID and then they have chunk

1123
00:49:56,070 --> 00:50:00,030
size no I guess they're different

1124
00:49:58,500 --> 00:50:02,340
so I guess typically they only have ID

1125
00:50:00,030 --> 00:50:05,490
in size this one has IV size and ID

1126
00:50:02,340 --> 00:50:07,289
right if that makes sense whereas

1127
00:50:05,489 --> 00:50:07,619
normally that's not the case so all

1128
00:50:07,289 --> 00:50:09,570
right

1129
00:50:07,619 --> 00:50:11,339
so let's take a look at that and see

1130
00:50:09,570 --> 00:50:13,410
what we've got here so we've got our

1131
00:50:11,340 --> 00:50:19,350
wave header our wave header should have

1132
00:50:13,409 --> 00:50:25,199
a chunk ID right so let's just do this

1133
00:50:19,349 --> 00:50:31,380
as a UN 32 this is the Rif ID then we've

1134
00:50:25,199 --> 00:50:34,500
got a size then we've got a wave ID like

1135
00:50:31,380 --> 00:50:37,710
so then we've got another chunk that we

1136
00:50:34,500 --> 00:50:39,380
might see is this chunk right here and

1137
00:50:37,710 --> 00:50:43,019
so let's put in that one as well

1138
00:50:39,380 --> 00:50:45,630
that chunk would basically be all of

1139
00:50:43,019 --> 00:50:51,690
this stuff so we have a format tag

1140
00:50:45,630 --> 00:50:55,680
at 16 bits so we have fmt here like so

1141
00:50:51,690 --> 00:51:03,269
so we have a human 16 that's a w format

1142
00:50:55,679 --> 00:51:05,669
tag we have au int to another 16 that's

1143
00:51:03,268 --> 00:51:10,500
the number of channels we have the

1144
00:51:05,670 --> 00:51:12,000
samples per second so we have n samples

1145
00:51:10,500 --> 00:51:19,068
per second

1146
00:51:12,000 --> 00:51:22,349
oops come back we've got the data rate

1147
00:51:19,068 --> 00:51:24,028
average bytes per second which we don't

1148
00:51:22,349 --> 00:51:25,079
really care about that's just two of

1149
00:51:24,028 --> 00:51:29,278
those numbers multiplied together

1150
00:51:25,079 --> 00:51:31,289
probably block alignment and block al

1151
00:51:29,278 --> 00:51:34,500
I'm not sure what the actual meaning of

1152
00:51:31,289 --> 00:51:41,910
that is we'll have to take a look

1153
00:51:34,500 --> 00:51:44,518
bits per sample bits per sample so CB

1154
00:51:41,909 --> 00:51:47,219
size we don't actually care about size

1155
00:51:44,518 --> 00:51:55,258
of extension I guess but we'll see here

1156
00:51:47,219 --> 00:52:02,759
CD size valid bits per sample C to be

1157
00:51:55,259 --> 00:52:07,889
valid bits per sample DW channel mask DW

1158
00:52:02,759 --> 00:52:11,818
channel mass and the sub format which is

1159
00:52:07,889 --> 00:52:16,308
a grid is that how long has that been in

1160
00:52:11,818 --> 00:52:20,338
there huh well we don't care about that

1161
00:52:16,309 --> 00:52:22,829
but fine there's a 16 byte sub format

1162
00:52:20,338 --> 00:52:24,449
we'll leave it in there all right

1163
00:52:22,829 --> 00:52:27,660
and so then here are the different

1164
00:52:24,449 --> 00:52:28,949
formats I guess that that you can be PCM

1165
00:52:27,659 --> 00:52:30,868
is going to be the standard that's what

1166
00:52:28,949 --> 00:52:32,518
will read and these guys will be other

1167
00:52:30,869 --> 00:52:35,369
things that we won't actually be using

1168
00:52:32,518 --> 00:52:39,750
so we pretty much only need to look for

1169
00:52:35,369 --> 00:52:41,160
that that actual format okay so what we

1170
00:52:39,750 --> 00:52:44,579
want to do here is put in one more thing

1171
00:52:41,159 --> 00:52:45,088
which is the wave-like chunk if that

1172
00:52:44,579 --> 00:52:47,519
makes sense

1173
00:52:45,088 --> 00:52:49,528
and that as we know is like four and

1174
00:52:47,518 --> 00:52:50,608
four it's the chunk ID and the size

1175
00:52:49,528 --> 00:52:53,489
right

1176
00:52:50,608 --> 00:52:57,239
so if I go ahead and say we've got the

1177
00:52:53,489 --> 00:52:58,169
ID and the size like so then what I

1178
00:52:57,239 --> 00:53:00,839
would do

1179
00:52:58,170 --> 00:53:02,460
is read one of these see what it was if

1180
00:53:00,840 --> 00:53:07,039
it's the format chunk you know I use it

1181
00:53:02,460 --> 00:53:10,230
whatever okay so the chunk ID has to be

1182
00:53:07,039 --> 00:53:11,489
fmt so what we want to be able to do is

1183
00:53:10,230 --> 00:53:13,650
we want to we're gonna want to be able

1184
00:53:11,489 --> 00:53:15,839
to compare as we read these chunks of

1185
00:53:13,650 --> 00:53:17,970
the file to see what these ID codes are

1186
00:53:15,840 --> 00:53:21,030
and so we want to do is have a way of

1187
00:53:17,969 --> 00:53:22,980
making a bunch of those right so we want

1188
00:53:21,030 --> 00:53:27,690
to do something where we can actually

1189
00:53:22,980 --> 00:53:31,920
have like a wave chunk ID FMT like that

1190
00:53:27,690 --> 00:53:35,519
you know wave format you know riff

1191
00:53:31,920 --> 00:53:38,099
something like this like you know what I

1192
00:53:35,519 --> 00:53:40,920
mean we want to be able to do that but

1193
00:53:38,099 --> 00:53:42,150
we can't just do this right because

1194
00:53:40,920 --> 00:53:44,400
you're not actually allowed to do that

1195
00:53:42,150 --> 00:53:48,660
and see you can't say give me a 32-bit

1196
00:53:44,400 --> 00:53:52,170
value that happens to be fmt so what I

1197
00:53:48,659 --> 00:53:54,809
need to do is something like riff code I

1198
00:53:52,170 --> 00:53:58,559
need to make a kind of annoying

1199
00:53:54,809 --> 00:54:00,420
macro basically which would allow us to

1200
00:53:58,559 --> 00:54:02,759
make these in some kind of convenient

1201
00:54:00,420 --> 00:54:04,530
way right and so what I'm gonna do is

1202
00:54:02,760 --> 00:54:08,310
define one that basically just takes

1203
00:54:04,530 --> 00:54:10,019
these carrots like so and for each care

1204
00:54:08,309 --> 00:54:12,150
code it'll just put it in the correct

1205
00:54:10,019 --> 00:54:13,679
position now I don't know what order

1206
00:54:12,150 --> 00:54:15,090
they're talking about I'm gonna assume

1207
00:54:13,679 --> 00:54:16,409
since this little endian that the F

1208
00:54:15,090 --> 00:54:18,030
comes first

1209
00:54:16,409 --> 00:54:20,250
but we'll be able to see once we go read

1210
00:54:18,030 --> 00:54:21,930
the file which one's gonna be correct so

1211
00:54:20,250 --> 00:54:23,400
we may have to change this macro around

1212
00:54:21,929 --> 00:54:27,029
once we actually see it right whether

1213
00:54:23,400 --> 00:54:34,200
it's 24 or 0 shift up here if that makes

1214
00:54:27,030 --> 00:54:39,870
sense so anyway if I go ahead and and do

1215
00:54:34,199 --> 00:54:41,549
this then I can make go ahead

1216
00:54:39,869 --> 00:54:46,109
parenthesize these it's the macro just

1217
00:54:41,550 --> 00:54:48,930
to be extra safe there we go

1218
00:54:46,110 --> 00:54:50,970
and maybe I'll even be double safe I'll

1219
00:54:48,929 --> 00:54:52,799
cast them to you in 32 since that's what

1220
00:54:50,969 --> 00:54:55,559
we want this to end up being all the

1221
00:54:52,800 --> 00:54:59,400
time so there we go so if I make these

1222
00:54:55,559 --> 00:55:03,570
riff codes now oops now we actually have

1223
00:54:59,400 --> 00:55:05,730
a way of specifying riff codes in the

1224
00:55:03,570 --> 00:55:07,289
native way that they're specified which

1225
00:55:05,730 --> 00:55:08,789
is character strings which just makes it

1226
00:55:07,289 --> 00:55:11,340
a little bit easier for us to read and

1227
00:55:08,789 --> 00:55:12,059
define new ones potentially so there we

1228
00:55:11,340 --> 00:55:13,800
go

1229
00:55:12,059 --> 00:55:16,049
and so what we want to do here is we

1230
00:55:13,800 --> 00:55:18,750
would want to start parsing this guy we

1231
00:55:16,050 --> 00:55:24,300
would want to assume I guess generally

1232
00:55:18,750 --> 00:55:29,760
speaking that we we had you know a like

1233
00:55:24,300 --> 00:55:36,360
a wave header here right and that wave

1234
00:55:29,760 --> 00:55:41,190
header we would expect to see that it's

1235
00:55:36,360 --> 00:55:44,460
ID field right would actually contain

1236
00:55:41,190 --> 00:55:47,400
that rift chunk header right so we'd

1237
00:55:44,460 --> 00:55:54,269
want to see we'd want to see this in the

1238
00:55:47,400 --> 00:56:02,220
Rif ID so we would want to see in

1239
00:55:54,269 --> 00:56:04,710
addition the wave ID being in there and

1240
00:56:02,219 --> 00:56:06,419
assuming we saw both of those then we

1241
00:56:04,710 --> 00:56:08,730
would be good we could I guess assert

1242
00:56:06,420 --> 00:56:10,500
those I don't know what our convention

1243
00:56:08,730 --> 00:56:13,920
was in our bitmap routine did we just

1244
00:56:10,500 --> 00:56:15,719
assert that those things were true yeah

1245
00:56:13,920 --> 00:56:17,909
we did so maybe we'll just do assertions

1246
00:56:15,719 --> 00:56:19,889
again this is not supposed to be real

1247
00:56:17,909 --> 00:56:23,190
loading code this is just for our own

1248
00:56:19,889 --> 00:56:26,339
debugging use it will never happen on

1249
00:56:23,190 --> 00:56:28,800
the end-users machine so we want to

1250
00:56:26,340 --> 00:56:30,720
assert that those are true and then we

1251
00:56:28,800 --> 00:56:33,000
would start to look through the chunks

1252
00:56:30,719 --> 00:56:34,980
in the file now I think we don't have

1253
00:56:33,000 --> 00:56:38,429
any time left so I'm gonna leave it

1254
00:56:34,980 --> 00:56:40,349
there compiling and tomorrow we'll go

1255
00:56:38,429 --> 00:56:43,949
ahead and we'll actually get a wave file

1256
00:56:40,349 --> 00:56:46,440
loading and that will put us in good

1257
00:56:43,949 --> 00:56:48,389
shape for again finishing up the asset

1258
00:56:46,440 --> 00:56:52,079
loading but also we'll probably be able

1259
00:56:48,389 --> 00:56:54,719
to finish up that audio stuff as well

1260
00:56:52,079 --> 00:56:58,500
and that'll be good that'll get us down

1261
00:56:54,719 --> 00:57:01,079
again to some some nice get down to some

1262
00:56:58,500 --> 00:57:02,460
much less to dues because we do want to

1263
00:57:01,079 --> 00:57:06,210
keep like I said I'd like to start

1264
00:57:02,460 --> 00:57:08,699
working on game code around day 200 and

1265
00:57:06,210 --> 00:57:09,990
so I think we're on good track to do

1266
00:57:08,699 --> 00:57:11,399
that there but there's a couple things

1267
00:57:09,989 --> 00:57:14,309
we want to be able to cross off right I

1268
00:57:11,400 --> 00:57:17,280
want to I want to be done with the stuff

1269
00:57:14,309 --> 00:57:19,019
above this line basically I don't want

1270
00:57:17,280 --> 00:57:20,880
to be I don't want to be doing any of

1271
00:57:19,019 --> 00:57:22,440
these sorts of things there engine

1272
00:57:20,880 --> 00:57:23,880
purely engine work and have nothing to

1273
00:57:22,440 --> 00:57:25,940
do with game code I don't want to be

1274
00:57:23,880 --> 00:57:28,528
doing those

1275
00:57:25,940 --> 00:57:29,608
much past day 200 if we can avoid it

1276
00:57:28,528 --> 00:57:31,259
of course it's software which always

1277
00:57:29,608 --> 00:57:33,900
goes long so maybe we will you know

1278
00:57:31,259 --> 00:57:37,498
maybe we won't but the idea here is just

1279
00:57:33,900 --> 00:57:39,150
that this stuff I'd like to kind of get

1280
00:57:37,498 --> 00:57:41,368
done we did most of the rendering work

1281
00:57:39,150 --> 00:57:43,108
that we needed to do but we still have

1282
00:57:41,369 --> 00:57:45,119
to sort of big ones there that we want

1283
00:57:43,108 --> 00:57:46,259
to tackle the debug codes relatively

1284
00:57:45,119 --> 00:57:47,880
straightforward but we do need to get

1285
00:57:46,259 --> 00:57:50,519
fonts so there's a fair bit of work in

1286
00:57:47,880 --> 00:57:52,979
here right there's a fair bit of work in

1287
00:57:50,518 --> 00:57:54,419
here that we would want to do and so

1288
00:57:52,978 --> 00:57:55,679
yeah like I said I'd like to get these

1289
00:57:54,420 --> 00:57:57,509
guys checked off since we're within

1290
00:57:55,679 --> 00:58:01,259
pretty good shooting distance of getting

1291
00:57:57,509 --> 00:58:06,059
them done all right so let's go to the

1292
00:58:01,259 --> 00:58:13,978
cue and the a in case anyone has any any

1293
00:58:06,059 --> 00:58:16,470
questions let's take a look and also the

1294
00:58:13,978 --> 00:58:18,058
stream went down I noticed during you

1295
00:58:16,469 --> 00:58:20,159
know for some reason I don't know whose

1296
00:58:18,059 --> 00:58:21,329
fault that was I'm assuming it's twitch

1297
00:58:20,159 --> 00:58:31,018
because twitch doesn't seem to be

1298
00:58:21,329 --> 00:58:32,690
working at all today but I don't know if

1299
00:58:31,018 --> 00:58:35,518
you're getting this character sprite

1300
00:58:32,690 --> 00:58:38,700
couldn't you just do the following let's

1301
00:58:35,518 --> 00:58:42,778
see couldn't use do the following int

1302
00:58:38,699 --> 00:58:47,218
sprite to load equals angle plus 180

1303
00:58:42,778 --> 00:58:52,858
over sprites divided by 360 over sprites

1304
00:58:47,219 --> 00:58:54,630
mod sprites know so that there's a bunch

1305
00:58:52,858 --> 00:58:58,259
of things that that doesn't do right

1306
00:58:54,630 --> 00:59:00,358
first of all who is doing that is the

1307
00:58:58,259 --> 00:59:01,858
asset system doing that if the asset

1308
00:59:00,358 --> 00:59:04,348
system is doing that we need to start

1309
00:59:01,858 --> 00:59:07,920
storing additional information which is

1310
00:59:04,349 --> 00:59:10,528
how many sprites there are at particular

1311
00:59:07,920 --> 00:59:13,039
angles right but we're not doing like

1312
00:59:10,528 --> 00:59:15,539
right now our system has no concept of

1313
00:59:13,039 --> 00:59:18,839
specifically uniformly distributed

1314
00:59:15,539 --> 00:59:21,509
things around angles right you could

1315
00:59:18,838 --> 00:59:23,998
have something that has you know a very

1316
00:59:21,509 --> 00:59:26,579
dense set of angles in one area and then

1317
00:59:23,998 --> 00:59:28,318
a much larger sparser set in another

1318
00:59:26,579 --> 00:59:30,539
area right if you want like a boss

1319
00:59:28,318 --> 00:59:31,978
monster for example who only mostly

1320
00:59:30,539 --> 00:59:33,900
looks forwards and then so there's a

1321
00:59:31,978 --> 00:59:35,939
bunch of different ones of him looking

1322
00:59:33,900 --> 00:59:36,778
forwards but then hardly any of him

1323
00:59:35,940 --> 00:59:38,909
looking backwards

1324
00:59:36,778 --> 00:59:39,659
our current system just works now

1325
00:59:38,909 --> 00:59:41,548
whereas

1326
00:59:39,659 --> 00:59:43,529
quantizing it would not work at all

1327
00:59:41,548 --> 00:59:48,530
right because you wouldn't have anything

1328
00:59:43,530 --> 00:59:48,530
to quantize it to does that make sense

1329
00:59:59,179 --> 01:00:03,269
kronole dragon and i had a combined

1330
01:00:01,440 --> 01:00:05,130
question about the audio dassit audio

1331
01:00:03,269 --> 01:00:07,679
asset struct will it need a sound

1332
01:00:05,130 --> 01:00:09,930
loopable or loop start loop end with

1333
01:00:07,679 --> 01:00:12,629
loop end equals negative one meaning a

1334
01:00:09,929 --> 01:00:13,309
one-shot sound um so I don't really know

1335
01:00:12,630 --> 01:00:17,280
yet

1336
01:00:13,309 --> 01:00:20,159
probably but since we haven't really

1337
01:00:17,280 --> 01:00:21,960
built out any of the sound system stuff

1338
01:00:20,159 --> 01:00:23,608
we don't really know what that'll want

1339
01:00:21,960 --> 01:00:26,220
so probably what we'll do is we'll write

1340
01:00:23,608 --> 01:00:29,159
the mixer and then we can go in and back

1341
01:00:26,219 --> 01:00:40,469
port any stuff that the mixer actually

1342
01:00:29,159 --> 01:00:41,819
wanted into into our asset system plants

1343
01:00:40,469 --> 01:00:43,949
for implementing other audio formats

1344
01:00:41,820 --> 01:00:47,220
like mp3 no we definitely won't

1345
01:00:43,949 --> 01:00:51,118
implement mp3 because it's patented so

1346
01:00:47,219 --> 01:00:53,098
we're not allowed to we could implement

1347
01:00:51,119 --> 01:00:56,400
it may be and I think 2016 the patents

1348
01:00:53,099 --> 01:00:59,510
may expire but it is actually against

1349
01:00:56,400 --> 01:01:01,588
the law for me to implement it that

1350
01:00:59,510 --> 01:01:04,710
ladies and gentlemen is the wonder of

1351
01:01:01,588 --> 01:01:10,318
the u.s. patent system one of the worst

1352
01:01:04,710 --> 01:01:12,240
ideas ever software patents but what are

1353
01:01:10,318 --> 01:01:16,619
you gonna do so yes like I cannot show

1354
01:01:12,239 --> 01:01:24,239
you how to implement mp3 that's against

1355
01:01:16,619 --> 01:01:26,849
the law or more specifically the

1356
01:01:24,239 --> 01:01:30,059
instance that you were to download the

1357
01:01:26,849 --> 01:01:32,849
source pack that contained the code I

1358
01:01:30,059 --> 01:01:35,279
wrote to play the mp3 that would be

1359
01:01:32,849 --> 01:01:36,599
against the law I suppose all in the

1360
01:01:35,280 --> 01:01:40,730
stream it may not be against the law for

1361
01:01:36,599 --> 01:01:40,730
me to just tell you how to do it

1362
01:01:50,369 --> 01:01:59,050
awkward theoretically do because in some

1363
01:01:54,219 --> 01:02:00,730
Syrian in theory it's its patent free I

1364
01:01:59,050 --> 01:02:03,850
don't know that there's really a whole

1365
01:02:00,730 --> 01:02:04,990
lot of reason to do it because it would

1366
01:02:03,849 --> 01:02:06,368
take a lot of time and it would

1367
01:02:04,989 --> 01:02:07,929
basically just be about reducing our

1368
01:02:06,369 --> 01:02:11,410
download footprint a little bit which I

1369
01:02:07,929 --> 01:02:13,719
don't know that we care about you know

1370
01:02:11,409 --> 01:02:15,879
maybe we do maybe we don't it depends I

1371
01:02:13,719 --> 01:02:17,709
guess also on how much streaming

1372
01:02:15,880 --> 01:02:19,170
overhead we have in terms of disk you

1373
01:02:17,710 --> 01:02:23,530
know maybe it would save some bandwidth

1374
01:02:19,170 --> 01:02:25,750
flack is pretty useless because flack

1375
01:02:23,530 --> 01:02:29,380
only gets you like it doesn't even get

1376
01:02:25,750 --> 01:02:30,610
you like two to one so I don't know I

1377
01:02:29,380 --> 01:02:32,500
don't really know what the point of

1378
01:02:30,610 --> 01:02:35,170
flack is flack doesn't seem like it's

1379
01:02:32,500 --> 01:02:36,159
very useful because if you need if for

1380
01:02:35,170 --> 01:02:38,920
some reason you need to compress your

1381
01:02:36,159 --> 01:02:42,339
sounds you probably are trying to save

1382
01:02:38,920 --> 01:02:44,889
space right and two to one less than two

1383
01:02:42,340 --> 01:02:47,050
to one it's not gonna do it for you

1384
01:02:44,889 --> 01:02:49,719
right so you're probably looking at

1385
01:02:47,050 --> 01:02:52,000
something like OGG Vorbis if you if you

1386
01:02:49,719 --> 01:02:54,399
really need to do that but those would

1387
01:02:52,000 --> 01:02:55,570
be very lengthy I think to do so I don't

1388
01:02:54,400 --> 01:02:56,858
think I'm going to do them because they

1389
01:02:55,570 --> 01:02:58,780
would take up a huge amount of streams

1390
01:02:56,858 --> 01:03:06,429
stream time for not really very much

1391
01:02:58,780 --> 01:03:08,400
benefit it's just a size savings cuber

1392
01:03:06,429 --> 01:03:12,429
Caleb says wait how exactly is mp3

1393
01:03:08,400 --> 01:03:15,369
patented mp3 is covered by literally

1394
01:03:12,429 --> 01:03:18,789
dozens of patents if you would like to

1395
01:03:15,369 --> 01:03:21,820
see what they are you can use the first

1396
01:03:18,789 --> 01:03:23,650
hit on Google for mp3 patents and you

1397
01:03:21,820 --> 01:03:27,690
can see them all here are some of them

1398
01:03:23,650 --> 01:03:31,200
and when they expire you can also see

1399
01:03:27,690 --> 01:03:31,200
let's see here

1400
01:03:31,559 --> 01:03:39,900
whereas the patents here you go so you

1401
01:03:36,958 --> 01:03:45,618
can you can read about it here a bunch

1402
01:03:39,900 --> 01:03:50,278
of stuff and you can see right here

1403
01:03:45,619 --> 01:03:52,949
there's you know basically the United

1404
01:03:50,278 --> 01:03:54,599
States is leaves the world and being

1405
01:03:52,949 --> 01:03:56,278
absolutely ridiculous with software

1406
01:03:54,599 --> 01:03:59,249
patents and so you can see that you know

1407
01:03:56,278 --> 01:04:02,909
we're we're kind of messed there it

1408
01:03:59,248 --> 01:04:04,649
looks like so if you believe what this

1409
01:04:02,909 --> 01:04:06,208
part of wikipedia says in different

1410
01:04:04,650 --> 01:04:10,048
parts of the world it may be that the

1411
01:04:06,208 --> 01:04:11,938
patents elapsed in 2012 and so you know

1412
01:04:10,048 --> 01:04:16,528
in in your part of the world it may be

1413
01:04:11,938 --> 01:04:21,958
legal to make code that uses mp3 I don't

1414
01:04:16,528 --> 01:04:25,920
know but in the u.s. it's not so so yeah

1415
01:04:21,958 --> 01:04:30,149
the theory is maybe by September 2015 it

1416
01:04:25,920 --> 01:04:33,150
would be but maybe not because it I

1417
01:04:30,150 --> 01:04:37,789
think it could also be 2017 right we

1418
01:04:33,150 --> 01:04:40,789
don't know you know we don't really know

1419
01:04:37,789 --> 01:04:40,789
so

1420
01:04:48,179 --> 01:04:54,719
Cooper Kaela they're not patenting the

1421
01:04:50,590 --> 01:04:57,700
file extension they're patenting the

1422
01:04:54,719 --> 01:05:01,500
techniques that are used to create the

1423
01:04:57,699 --> 01:05:06,579
audio and to encode and decode the audio

1424
01:05:01,500 --> 01:05:09,219
and so if you want to parse what is in

1425
01:05:06,579 --> 01:05:12,039
that file you violate the patents just

1426
01:05:09,219 --> 01:05:16,509
by the act of parsing them because that

1427
01:05:12,039 --> 01:05:17,889
is what is patented right like I said I

1428
01:05:16,510 --> 01:05:20,850
don't agree with it I think software

1429
01:05:17,889 --> 01:05:23,529
patents are absolutely ridiculous and

1430
01:05:20,849 --> 01:05:25,869
really have no place in modern society

1431
01:05:23,530 --> 01:05:29,590
but unfortunately I don't make the laws

1432
01:05:25,869 --> 01:05:32,920
and I have to follow them and so we can

1433
01:05:29,590 --> 01:05:34,390
definitely not read an mp3 file as for

1434
01:05:32,920 --> 01:05:36,550
the person who says flack is 50% the

1435
01:05:34,389 --> 01:05:38,799
size of wave it's not 50% the size the

1436
01:05:36,550 --> 01:05:41,890
way best case it's 60% besides if I

1437
01:05:38,800 --> 01:05:45,760
remember correctly and that's best case

1438
01:05:41,889 --> 01:05:54,119
so oftentimes it is not so let's take a

1439
01:05:45,760 --> 01:06:01,510
look here what is black compression rate

1440
01:05:54,119 --> 01:06:03,670
let's see yeah so I mean I would say in

1441
01:06:01,510 --> 01:06:04,870
general well that's us typically so

1442
01:06:03,670 --> 01:06:07,389
maybe it's better than I thought I

1443
01:06:04,869 --> 01:06:09,880
thought that was best case meaning you

1444
01:06:07,389 --> 01:06:14,920
rarely saw anything that would go before

1445
01:06:09,880 --> 01:06:22,840
it but maybe that's not true what do we

1446
01:06:14,920 --> 01:06:27,710
have some kind of some kind of a

1447
01:06:22,840 --> 01:06:29,390
article that tries to see yeah so this

1448
01:06:27,710 --> 01:06:33,139
is more like what I expected to see

1449
01:06:29,389 --> 01:06:35,869
right so very little compression really

1450
01:06:33,139 --> 01:06:37,940
and so if you were trying to save you

1451
01:06:35,869 --> 01:06:41,139
know if you take a look at this right

1452
01:06:37,940 --> 01:06:44,059
let's say your your footprint you know

1453
01:06:41,139 --> 01:06:46,219
for your your total game is two

1454
01:06:44,059 --> 01:06:49,519
gigabytes or something how much of that

1455
01:06:46,219 --> 01:06:51,379
is audio right if the answer is out of

1456
01:06:49,519 --> 01:06:52,969
that two gigabytes a half gigabyte is

1457
01:06:51,380 --> 01:06:54,740
audio or something I don't know I mean

1458
01:06:52,969 --> 01:06:57,469
pick pick whatever it is a half

1459
01:06:54,739 --> 01:07:01,789
gigabytes audio if you take that half

1460
01:06:57,469 --> 01:07:05,799
gigabyte and you're saying okay I could

1461
01:07:01,789 --> 01:07:08,389
compress that and save 25% of it right

1462
01:07:05,800 --> 01:07:10,310
you're talking about a savings of

1463
01:07:08,389 --> 01:07:11,929
something like a hundred megabytes in a

1464
01:07:10,309 --> 01:07:13,699
thing that's two gigabyte just

1465
01:07:11,929 --> 01:07:15,739
redistributable yeah why would you

1466
01:07:13,699 --> 01:07:19,579
bother right you're just adding a bunch

1467
01:07:15,739 --> 01:07:22,329
of code to your game for really no mess

1468
01:07:19,579 --> 01:07:25,429
you know no significant savings right

1469
01:07:22,329 --> 01:07:27,110
even having the size of your audio which

1470
01:07:25,429 --> 01:07:30,319
this looks like this is more of a good

1471
01:07:27,110 --> 01:07:33,769
case instead this was the bad case I

1472
01:07:30,320 --> 01:07:35,960
guess this is a good case even having

1473
01:07:33,769 --> 01:07:39,230
the size of your audio it just isn't

1474
01:07:35,960 --> 01:07:41,240
that useful if you're trying to get

1475
01:07:39,230 --> 01:07:43,639
stuff down you need to get it down a lot

1476
01:07:41,239 --> 01:07:46,009
more than that right you need to be able

1477
01:07:43,639 --> 01:07:48,529
to get it down like you know for eight

1478
01:07:46,010 --> 01:07:50,060
to one something like this before you're

1479
01:07:48,530 --> 01:07:52,940
talking about something that's really in

1480
01:07:50,059 --> 01:07:56,299
the ballpark of use useful compression

1481
01:07:52,940 --> 01:08:00,400
that changes the the use cases that you

1482
01:07:56,300 --> 01:08:02,120
could actually ship this thing in right

1483
01:08:00,400 --> 01:08:04,070
that's just my opinion

1484
01:08:02,119 --> 01:08:06,589
so fifty percent is just not enough I

1485
01:08:04,070 --> 01:08:08,840
feel like 50 percent is not enough to to

1486
01:08:06,590 --> 01:08:10,910
actually care about that compression

1487
01:08:08,840 --> 01:08:12,920
maybe I'm being to send you there and

1488
01:08:10,909 --> 01:08:15,500
that's best case right a lot of times

1489
01:08:12,920 --> 01:08:17,210
you're not getting that so so it doesn't

1490
01:08:15,500 --> 01:08:18,710
seem like a very useful thing to me to

1491
01:08:17,210 --> 01:08:19,850
introduce all that complexity goes for

1492
01:08:18,710 --> 01:08:21,259
that I think if you're going to

1493
01:08:19,850 --> 01:08:23,088
introduce all that complexity you should

1494
01:08:21,259 --> 01:08:24,649
pick again something like OGG Vorbis

1495
01:08:23,088 --> 01:08:26,838
where you're going to get eight to one

1496
01:08:24,649 --> 01:08:28,429
or something like this at least and you

1497
01:08:26,838 --> 01:08:30,079
can tune it a little bit more so you can

1498
01:08:28,430 --> 01:08:32,740
actually get more than that if you want

1499
01:08:30,079 --> 01:08:32,739
right

1500
01:08:35,409 --> 01:08:39,139
and Cooper killed yes that is why Brad

1501
01:08:37,850 --> 01:08:41,989
doesn't patent any of their stuff is

1502
01:08:39,140 --> 01:08:43,338
because we didn't believe in it we

1503
01:08:41,988 --> 01:08:51,709
believe that it's stupid so we don't

1504
01:08:43,338 --> 01:08:57,798
patent it all right looks like that is

1505
01:08:51,710 --> 01:09:01,670
the end of the questions okay I will

1506
01:08:57,798 --> 01:09:03,588
wind things down I'll leave that wave

1507
01:09:01,670 --> 01:09:05,869
file specification up for now because

1508
01:09:03,588 --> 01:09:07,579
there's some other chunks we're gonna

1509
01:09:05,869 --> 01:09:13,130
want to get we're gonna need basically

1510
01:09:07,579 --> 01:09:15,829
the data chunk at least so yeah I'll

1511
01:09:13,130 --> 01:09:24,640
leave that up alright let's go ahead and

1512
01:09:15,829 --> 01:09:24,640
close this down doo doo doo

1513
01:09:25,729 --> 01:09:31,409
okay all right double check to see if

1514
01:09:30,270 --> 01:09:33,359
there's any other questions no it

1515
01:09:31,409 --> 01:09:36,119
doesn't look like it the stream was so I

1516
01:09:33,359 --> 01:09:39,900
feel like twitching is being very

1517
01:09:36,119 --> 01:09:41,099
twitchy today so I wonder if maybe we

1518
01:09:39,899 --> 01:09:42,599
probably wouldn't have enough people who

1519
01:09:41,100 --> 01:09:44,338
were able to actually catch the whole

1520
01:09:42,600 --> 01:09:46,500
stream ask questions hopefully tomorrow

1521
01:09:44,338 --> 01:09:47,818
things will be better and I can double

1522
01:09:46,500 --> 01:09:49,279
check to make sure it wasn't my isp or

1523
01:09:47,819 --> 01:09:53,190
something but I don't know that it was

1524
01:09:49,279 --> 01:09:54,389
anyway thank you everyone for joining me

1525
01:09:53,189 --> 01:09:55,799
for another episode of hand made here

1526
01:09:54,390 --> 01:09:57,420
it's been a pleasure coding with you as

1527
01:09:55,800 --> 01:09:59,489
always if you would like to follow along

1528
01:09:57,420 --> 01:10:01,289
with a series at home you can pre-order

1529
01:09:59,489 --> 01:10:03,269
the game on handmade hero dot org and it

1530
01:10:01,289 --> 01:10:05,850
comes with a source code so you can go

1531
01:10:03,270 --> 01:10:08,010
ahead and play around and experiment on

1532
01:10:05,850 --> 01:10:09,329
your own if you want to do that you just

1533
01:10:08,010 --> 01:10:11,400
use a little handy dandy pre-order

1534
01:10:09,329 --> 01:10:13,409
button there if you want to just support

1535
01:10:11,399 --> 01:10:14,609
the video series separately you can

1536
01:10:13,409 --> 01:10:16,739
always do that by subscribing to our

1537
01:10:14,609 --> 01:10:19,949
patreon we also have the forums page

1538
01:10:16,739 --> 01:10:22,710
where you can ask questions and look at

1539
01:10:19,949 --> 01:10:25,199
ports to Mac and Linux and check out

1540
01:10:22,710 --> 01:10:27,149
annotated episode guide that helps catch

1541
01:10:25,199 --> 01:10:28,559
up on old episodes we also have a tweet

1542
01:10:27,149 --> 01:10:30,869
bot that will tweet the schedule at you

1543
01:10:28,560 --> 01:10:32,190
so if you want to subscribe to that to

1544
01:10:30,869 --> 01:10:34,409
catch the live stream that's a really

1545
01:10:32,189 --> 01:10:36,149
handy way to do it check out all that

1546
01:10:34,409 --> 01:10:38,909
stuff hopefully there's good stuff there

1547
01:10:36,149 --> 01:10:40,769
that will help you out anyway thanks for

1548
01:10:38,909 --> 01:10:42,599
joining me we'll be back here again same

1549
01:10:40,770 --> 01:10:45,000
time same place 5 p.m. Pacific Daylight

1550
01:10:42,600 --> 01:10:47,310
Time tomorrow right here on Twitch I

1551
01:10:45,000 --> 01:10:49,350
hope to see you all there until then

1552
01:10:47,310 --> 01:10:51,680
have fun coding and I'll see you on the

1553
01:10:49,350 --> 01:10:51,680
Internet's

