1
00:00:02,299 --> 00:00:07,649
hello everyone and welcome to handmade

2
00:00:05,790 --> 00:00:10,320
Hero the show recode a complete game

3
00:00:07,649 --> 00:00:14,009
live on stream yesterday we worked out

4
00:00:10,320 --> 00:00:18,089
some information about sorting that we

5
00:00:14,009 --> 00:00:19,528
think will help us sort of put well I

6
00:00:18,089 --> 00:00:21,539
guess I should say it's our first

7
00:00:19,528 --> 00:00:25,050
attempt at putting to bed our

8
00:00:21,539 --> 00:00:27,599
long-standing sort of Z situation that

9
00:00:25,050 --> 00:00:31,199
we wanted to clear up before we start

10
00:00:27,599 --> 00:00:33,689
the regular game code and I don't really

11
00:00:31,199 --> 00:00:35,820
know if we've completely solved the

12
00:00:33,689 --> 00:00:38,849
problem or not but we came up with you

13
00:00:35,820 --> 00:00:41,009
know sort of one plausible sorting

14
00:00:38,850 --> 00:00:43,770
criteria that might work and there's two

15
00:00:41,009 --> 00:00:46,229
things about it we don't know one is we

16
00:00:43,770 --> 00:00:48,149
don't 100% know like I don't know that I

17
00:00:46,229 --> 00:00:50,459
definitively proved that it's always

18
00:00:48,149 --> 00:00:52,350
gonna be the correct sort for us I think

19
00:00:50,460 --> 00:00:53,820
I you know was properly thinking through

20
00:00:52,350 --> 00:00:56,550
the cases that we're likely to encounter

21
00:00:53,820 --> 00:00:57,509
but you know maybe there are cases that

22
00:00:56,549 --> 00:00:59,218
we are definitely going to encounter

23
00:00:57,509 --> 00:01:01,019
with our sprites that I just didn't

24
00:00:59,219 --> 00:01:03,210
think of right so that's one possibility

25
00:01:01,020 --> 00:01:05,219
where we can't say for sure that we

26
00:01:03,210 --> 00:01:09,629
really know that it works the other

27
00:01:05,219 --> 00:01:11,908
possibility is is less about the sorting

28
00:01:09,629 --> 00:01:13,228
criteria and more about the sort that

29
00:01:11,909 --> 00:01:15,840
needs to be implied with a sorting

30
00:01:13,228 --> 00:01:18,030
criteria I think it might be possible at

31
00:01:15,840 --> 00:01:21,600
least have a feeling that it could be a

32
00:01:18,030 --> 00:01:23,728
plausible case that we can produce a a

33
00:01:21,599 --> 00:01:25,079
non topological result with our sorts

34
00:01:23,728 --> 00:01:28,469
meaning the sort criteria that we picked

35
00:01:25,079 --> 00:01:30,298
is not guaranteed to produce a total or

36
00:01:28,469 --> 00:01:32,819
partial ordering that's consistent and

37
00:01:30,299 --> 00:01:35,549
so running a regular sort routine on it

38
00:01:32,819 --> 00:01:39,059
like merge sort may not actually be able

39
00:01:35,549 --> 00:01:41,570
to properly resolve the sorting even

40
00:01:39,060 --> 00:01:44,490
though our rule is sound it may turn out

41
00:01:41,569 --> 00:01:47,008
violating that and it's pretty easy for

42
00:01:44,489 --> 00:01:52,949
us to verify that fact so that's kind of

43
00:01:47,009 --> 00:01:55,379
actually a something we might want to do

44
00:01:52,950 --> 00:01:57,780
right because what we could easily do is

45
00:01:55,379 --> 00:02:00,118
run an N squared algorithm after the

46
00:01:57,780 --> 00:02:02,489
sort only in a special debugging

47
00:02:00,118 --> 00:02:05,670
scenario that goes and compares every

48
00:02:02,489 --> 00:02:08,310
sprite with every other sprite via our

49
00:02:05,670 --> 00:02:09,520
sorting rule and alerts us if any of

50
00:02:08,310 --> 00:02:12,520
them returned the

51
00:02:09,520 --> 00:02:15,189
wrong sort order right so we do our sort

52
00:02:12,520 --> 00:02:18,010
with our mergesort then we compare every

53
00:02:15,189 --> 00:02:21,219
pair in the N squared way and go are any

54
00:02:18,009 --> 00:02:23,259
of these sorts long in this list and if

55
00:02:21,219 --> 00:02:27,330
they are then we know that we did in

56
00:02:23,259 --> 00:02:30,340
fact hit that case where we produced a

57
00:02:27,330 --> 00:02:32,770
non topological or a thing that cannot

58
00:02:30,340 --> 00:02:36,610
whose orderings cannot be properly

59
00:02:32,770 --> 00:02:38,650
solved by by a regular straightforward

60
00:02:36,610 --> 00:02:41,380
sorting routine and if that's the case

61
00:02:38,650 --> 00:02:45,250
then again that's not that's really not

62
00:02:41,379 --> 00:02:46,359
a death a death knell for us at all that

63
00:02:45,250 --> 00:02:49,629
just means that we would have to

64
00:02:46,360 --> 00:02:52,060
escalate our solve from a regular sort

65
00:02:49,629 --> 00:02:54,310
to something a little bit more graph

66
00:02:52,060 --> 00:02:57,159
theoretic like the kind that Andrew

67
00:02:54,310 --> 00:02:58,930
Russell talked about in the blog post

68
00:02:57,159 --> 00:03:00,639
that I showed yesterday that he wrote

69
00:02:58,930 --> 00:03:03,340
specifically for us which was very nice

70
00:03:00,639 --> 00:03:06,789
of him about how he was trying to do

71
00:03:03,340 --> 00:03:09,069
sorting on River City ransom underground

72
00:03:06,789 --> 00:03:11,500
where he just decided that because of

73
00:03:09,069 --> 00:03:13,769
the way that their sprites were there

74
00:03:11,500 --> 00:03:15,699
was no choice but to use a semantic

75
00:03:13,770 --> 00:03:18,850
understanding of what was in front of

76
00:03:15,699 --> 00:03:21,039
what which leads to a clearly non

77
00:03:18,849 --> 00:03:24,159
sortable set it's a it's a set that has

78
00:03:21,039 --> 00:03:26,199
to be sorted as a graph and so we might

79
00:03:24,159 --> 00:03:27,969
be in that category we don't know yet if

80
00:03:26,199 --> 00:03:30,909
we are it's not the end of the world it

81
00:03:27,969 --> 00:03:33,039
just means we'll do a graph sort and

82
00:03:30,909 --> 00:03:34,930
that's totally fine but we certainly

83
00:03:33,039 --> 00:03:36,489
don't want to do a graph sort if we

84
00:03:34,930 --> 00:03:39,159
don't have to because a graph sort will

85
00:03:36,490 --> 00:03:40,990
probably be slower than a straight

86
00:03:39,159 --> 00:03:42,219
forward merge sort I don't know that

87
00:03:40,990 --> 00:03:44,950
that's necessarily true because we

88
00:03:42,219 --> 00:03:46,810
haven't really looked at it but you know

89
00:03:44,949 --> 00:03:48,639
it's probably the case that we would

90
00:03:46,810 --> 00:03:50,949
want to stick with being able to do a

91
00:03:48,639 --> 00:03:53,019
more straightforward sort if we can so

92
00:03:50,949 --> 00:03:54,310
that's just what we're doing so far and

93
00:03:53,020 --> 00:03:55,840
then we'll see as we get a little

94
00:03:54,310 --> 00:03:57,789
further into it whether it really

95
00:03:55,840 --> 00:04:00,640
whether we hit either of those two cases

96
00:03:57,789 --> 00:04:02,049
we should be able to see that once we

97
00:04:00,639 --> 00:04:04,000
start testing it out in some real-world

98
00:04:02,050 --> 00:04:05,650
scenarios does it do sorting the way

99
00:04:04,000 --> 00:04:06,789
that we think it should or are we

100
00:04:05,650 --> 00:04:08,140
running into problems where it's just

101
00:04:06,789 --> 00:04:12,400
not producing the kind of source that we

102
00:04:08,139 --> 00:04:17,229
think should be happening so let's go

103
00:04:12,400 --> 00:04:19,899
ahead and open up here open up so one of

104
00:04:17,230 --> 00:04:21,280
the things that's true is we got you

105
00:04:19,899 --> 00:04:22,629
know we we wrote the sorts and they're

106
00:04:21,279 --> 00:04:24,459
compiling but as you

107
00:04:22,629 --> 00:04:25,870
see if we run the program it's not it's

108
00:04:24,459 --> 00:04:28,419
not actually running the sort right now

109
00:04:25,870 --> 00:04:30,040
so nobody calls the sort we wrote the

110
00:04:28,420 --> 00:04:31,300
sort but it's not it's not actually

111
00:04:30,040 --> 00:04:34,330
being called so it's still just running

112
00:04:31,300 --> 00:04:37,480
the old thing which isn't what we wanted

113
00:04:34,329 --> 00:04:40,779
all and is doing some old stuff as well

114
00:04:37,480 --> 00:04:42,460
so today's objective really since the

115
00:04:40,779 --> 00:04:45,609
sorts already done except for one thing

116
00:04:42,459 --> 00:04:49,299
I think Steven well quarter Tron I think

117
00:04:45,610 --> 00:04:53,139
on the on the on the chat he pointed out

118
00:04:49,300 --> 00:04:55,810
something that is a mistake I forgot to

119
00:04:53,139 --> 00:04:58,360
flip the the signs here when we did both

120
00:04:55,810 --> 00:05:01,839
Z sprites what I wanted to do was say

121
00:04:58,360 --> 00:05:04,780
you know if the wyman is not equal to

122
00:05:01,839 --> 00:05:07,179
the the Y max I think well actually you

123
00:05:04,779 --> 00:05:08,109
know what he was he was tweeting at me

124
00:05:07,180 --> 00:05:10,959
that there was a problem here but I

125
00:05:08,110 --> 00:05:13,330
don't know if that's true if they're

126
00:05:10,959 --> 00:05:15,370
both Z Z sprites are ones that have a

127
00:05:13,329 --> 00:05:17,709
bound so I don't know I think this is

128
00:05:15,370 --> 00:05:19,959
actually correct if this is not equal to

129
00:05:17,709 --> 00:05:21,819
that and this is not equal to that then

130
00:05:19,959 --> 00:05:23,109
they're both Z sprites otherwise one of

131
00:05:21,819 --> 00:05:26,349
them's Izzie's right and the other one

132
00:05:23,110 --> 00:05:30,009
isn't right I'm pretty sure that's the

133
00:05:26,350 --> 00:05:32,500
case but yeah I could be wrong about

134
00:05:30,009 --> 00:05:33,969
that seems right to me anyway I'll let

135
00:05:32,500 --> 00:05:35,769
you guys figure out whether it is or it

136
00:05:33,970 --> 00:05:37,440
isn't in the chat and then we can always

137
00:05:35,769 --> 00:05:41,279
go from there

138
00:05:37,439 --> 00:05:45,370
what's going on how come I can't whoa

139
00:05:41,279 --> 00:05:49,659
what's going on here my my keyboard is

140
00:05:45,370 --> 00:05:52,600
messed up there we go all right so

141
00:05:49,660 --> 00:05:54,910
here's our merge sort that does the

142
00:05:52,600 --> 00:05:57,100
sorting that we actually wanted to have

143
00:05:54,910 --> 00:05:59,500
done and what you can see here is it

144
00:05:57,100 --> 00:06:01,150
takes this sort sprite bound in now

145
00:05:59,500 --> 00:06:04,240
there are some things about this that

146
00:06:01,149 --> 00:06:06,639
are kind of interesting and I don't

147
00:06:04,240 --> 00:06:07,990
actually know how much we want to take

148
00:06:06,639 --> 00:06:11,199
advantage of this but it's something to

149
00:06:07,990 --> 00:06:13,900
think about here so in addition to the Y

150
00:06:11,199 --> 00:06:16,060
min the y max the Z and the and the Z

151
00:06:13,899 --> 00:06:17,199
max we've got this the index which is

152
00:06:16,060 --> 00:06:20,740
the thing that we were going to be

153
00:06:17,199 --> 00:06:25,800
drawing what occurred to me is that the

154
00:06:20,740 --> 00:06:29,290
Z values we could insert fake planes

155
00:06:25,800 --> 00:06:32,050
essentially that are there to be our

156
00:06:29,290 --> 00:06:34,610
layer dividers and what we could do

157
00:06:32,050 --> 00:06:37,759
potentially is

158
00:06:34,610 --> 00:06:41,060
actually get sorting into layers for

159
00:06:37,759 --> 00:06:42,139
free out of this I think because if you

160
00:06:41,060 --> 00:06:44,839
think about what's gonna happen with

161
00:06:42,139 --> 00:06:48,800
this sprite sorting we're gonna end up

162
00:06:44,839 --> 00:06:50,750
sorting by Z as you know as a criteria

163
00:06:48,800 --> 00:06:52,848
for for the sort in addition to

164
00:06:50,750 --> 00:06:57,829
everything else and if we have a

165
00:06:52,848 --> 00:07:02,029
situation where where we had something

166
00:06:57,829 --> 00:07:05,149
with infinite Y bounds right then it

167
00:07:02,029 --> 00:07:07,938
would always sort by Z so if we stuck in

168
00:07:05,149 --> 00:07:10,098
a giant infinite plane essentially in

169
00:07:07,939 --> 00:07:12,259
between each layer that would

170
00:07:10,098 --> 00:07:15,079
automatically sort everything below it

171
00:07:12,259 --> 00:07:17,479
or above it so intellect sort of two

172
00:07:15,079 --> 00:07:19,339
groups and we would know as we retired

173
00:07:17,478 --> 00:07:21,680
things we would get to those little

174
00:07:19,339 --> 00:07:25,848
plane markers as we were retiring render

175
00:07:21,680 --> 00:07:27,800
instructions right so that's just

176
00:07:25,848 --> 00:07:29,990
something to think about and it kind of

177
00:07:27,800 --> 00:07:32,810
seems like the sort of thing we might we

178
00:07:29,990 --> 00:07:34,278
might care about if we go back up here

179
00:07:32,810 --> 00:07:37,069
and take a look at the sort entry

180
00:07:34,278 --> 00:07:39,050
information and then we look at the sort

181
00:07:37,069 --> 00:07:41,330
sprite down what we want to do here is

182
00:07:39,050 --> 00:07:43,189
sort entries we probably want to leave

183
00:07:41,329 --> 00:07:45,859
because we were sorting other things

184
00:07:43,189 --> 00:07:50,718
right we were using the sort for example

185
00:07:45,860 --> 00:07:53,060
to display the top performance eaters on

186
00:07:50,718 --> 00:07:56,810
our profile so we want to leave this

187
00:07:53,060 --> 00:08:00,649
case in here right we want this to still

188
00:07:56,810 --> 00:08:02,418
be active and so I'm not going to touch

189
00:08:00,649 --> 00:08:04,429
that case but what I am going to do is

190
00:08:02,418 --> 00:08:07,908
probably turn the whole renderer over

191
00:08:04,430 --> 00:08:09,500
into using sprite bound sorting so that

192
00:08:07,908 --> 00:08:12,079
now we can start to push things into it

193
00:08:09,500 --> 00:08:14,750
that will actually use that information

194
00:08:12,079 --> 00:08:15,740
and so the challenge here is not going

195
00:08:14,750 --> 00:08:17,180
to be doing that because that's not

196
00:08:15,740 --> 00:08:19,189
going to take very long and you'll think

197
00:08:17,180 --> 00:08:21,050
it's really just a case of swapping them

198
00:08:19,189 --> 00:08:23,599
out the problem is that we don't have a

199
00:08:21,050 --> 00:08:25,250
lot of this information at the immediate

200
00:08:23,598 --> 00:08:26,959
moment and so we're gonna have to do is

201
00:08:25,250 --> 00:08:29,240
actually start going in and figuring out

202
00:08:26,959 --> 00:08:32,028
where is that information going to come

203
00:08:29,240 --> 00:08:33,948
from and obviously for our straight

204
00:08:32,028 --> 00:08:35,208
up-and-down cards you know what do one

205
00:08:33,948 --> 00:08:37,458
of the things that I think we luck out

206
00:08:35,208 --> 00:08:39,588
on by if we can get away with this sort

207
00:08:37,458 --> 00:08:41,569
criteria one of the things that you can

208
00:08:39,589 --> 00:08:42,979
notice here is that well for our

209
00:08:41,570 --> 00:08:44,360
straight up-and-down cards we don't

210
00:08:42,979 --> 00:08:46,069
really think we need a lot of

211
00:08:44,360 --> 00:08:48,019
information about the Y bounds so we can

212
00:08:46,068 --> 00:08:49,069
just ignore the Y bounds entirely

213
00:08:48,019 --> 00:08:50,299
and leave them as straight up and down

214
00:08:49,070 --> 00:08:53,629
cards that's what the sort criteria

215
00:08:50,299 --> 00:08:55,639
loves to do so hopefully the only things

216
00:08:53,629 --> 00:08:58,580
we really need to mark up are these

217
00:08:55,639 --> 00:09:01,490
ground these like flat tiles and those

218
00:08:58,580 --> 00:09:03,379
we actually kind of do have an idea of

219
00:09:01,490 --> 00:09:05,389
what their bounds are because since they

220
00:09:03,379 --> 00:09:07,879
are ground tiles we know they take up

221
00:09:05,389 --> 00:09:10,370
one ground tiles worth of space which

222
00:09:07,879 --> 00:09:15,669
gives us what their actual Y extents

223
00:09:10,370 --> 00:09:17,840
should be so hopefully if we're lucky

224
00:09:15,669 --> 00:09:20,199
getting this information into the

225
00:09:17,840 --> 00:09:23,870
renderer won't be particularly onerous

226
00:09:20,200 --> 00:09:26,360
because we will be able to do some

227
00:09:23,870 --> 00:09:29,919
fairly straightforward stuff here I hope

228
00:09:26,360 --> 00:09:29,919
I don't really know but that's my help

229
00:09:32,860 --> 00:09:39,139
all right

230
00:09:34,600 --> 00:09:41,990
ok so let's get started on this see

231
00:09:39,139 --> 00:09:44,870
where we get to so we've got our render

232
00:09:41,990 --> 00:09:47,659
group and mainly what happens here is

233
00:09:44,870 --> 00:09:50,450
when our render group pushes things on I

234
00:09:47,659 --> 00:09:52,490
believe that you know first of all the

235
00:09:50,450 --> 00:09:55,850
sort key information when we're doing an

236
00:09:52,490 --> 00:09:58,180
entity basis P result stuff that's gonna

237
00:09:55,850 --> 00:10:00,500
kind of that's gonna have to change a

238
00:09:58,179 --> 00:10:02,809
little bit because now we don't sort of

239
00:10:00,500 --> 00:10:04,879
care about the sort k anymore we really

240
00:10:02,809 --> 00:10:06,979
just care about what the Z the max Z

241
00:10:04,879 --> 00:10:10,309
value is and that's a value that's gonna

242
00:10:06,980 --> 00:10:12,740
get transformed in probably I don't know

243
00:10:10,309 --> 00:10:14,869
is it I guess that value doesn't really

244
00:10:12,740 --> 00:10:16,850
have to get transformed all that much it

245
00:10:14,870 --> 00:10:19,220
just has to get put relative to the

246
00:10:16,850 --> 00:10:21,769
camera I think is the only thing that we

247
00:10:19,220 --> 00:10:23,269
really care about there well actually

248
00:10:21,769 --> 00:10:25,100
even that's not true because since

249
00:10:23,269 --> 00:10:27,350
there's nothing but really we can just

250
00:10:25,100 --> 00:10:29,629
use I think the Z value straight up so

251
00:10:27,350 --> 00:10:31,820
we may be able to get away with not

252
00:10:29,629 --> 00:10:34,189
really having to do anything with the

253
00:10:31,820 --> 00:10:35,660
sort keys here at all I don't know if

254
00:10:34,190 --> 00:10:37,910
that's true don't quote me on that but

255
00:10:35,659 --> 00:10:40,730
if we're really lucky we may be able to

256
00:10:37,909 --> 00:10:43,009
excise sort keys entirely from the empty

257
00:10:40,730 --> 00:10:46,580
and the basis results that would be

258
00:10:43,009 --> 00:10:48,259
really lucky let's not push push our

259
00:10:46,580 --> 00:10:50,870
luck and say that it's going to be true

260
00:10:48,259 --> 00:10:53,509
let's just say that would be great if it

261
00:10:50,870 --> 00:10:55,340
happened in the meantime let's focus on

262
00:10:53,509 --> 00:10:57,679
what's actually known here which is that

263
00:10:55,340 --> 00:10:59,769
in our code before where we were sort of

264
00:10:57,679 --> 00:11:01,969
doing this stuff where we're pushing in

265
00:10:59,769 --> 00:11:03,679
these sort of sort key

266
00:11:01,970 --> 00:11:05,480
entries what we're gonna do now is just

267
00:11:03,679 --> 00:11:08,870
change that and I'll just go ahead and

268
00:11:05,480 --> 00:11:10,459
look for that here where is our swear is

269
00:11:08,870 --> 00:11:11,750
our sword entries I thought they were in

270
00:11:10,458 --> 00:11:16,119
here but I guess they're not at the

271
00:11:11,750 --> 00:11:18,528
moment at render group sort entries

272
00:11:16,120 --> 00:11:21,500
looks like we don't talk about those as

273
00:11:18,528 --> 00:11:22,879
many places as I thought we did but yeah

274
00:11:21,500 --> 00:11:25,698
you can kind of see them happening here

275
00:11:22,879 --> 00:11:27,829
so anyway here is where we actually push

276
00:11:25,698 --> 00:11:29,208
our render element and everywhere that

277
00:11:27,828 --> 00:11:31,388
we're talking about a sword entry in

278
00:11:29,208 --> 00:11:34,729
here we really want to now talk about

279
00:11:31,389 --> 00:11:37,100
one of these alternate kinds here that

280
00:11:34,730 --> 00:11:38,300
we have the sort spray pound right and

281
00:11:37,100 --> 00:11:39,949
so what I'm gonna do is I'm just gonna

282
00:11:38,299 --> 00:11:41,479
take this piece of code here I'm gonna

283
00:11:39,948 --> 00:11:43,399
say everywhere you were talking ass

284
00:11:41,480 --> 00:11:46,670
sprayed entry let's talk about a sort

285
00:11:43,399 --> 00:11:48,078
spray ban instead okay so now we've

286
00:11:46,669 --> 00:11:49,458
essentially got the same thing we're

287
00:11:48,078 --> 00:11:50,599
pushing sort sprite baths down from the

288
00:11:49,458 --> 00:11:52,159
top but a little bit bigger there were

289
00:11:50,600 --> 00:11:54,560
twice as big but that's it so it's not

290
00:11:52,159 --> 00:11:56,149
too bit it's not too bad but it you know

291
00:11:54,559 --> 00:11:57,588
obviously not great at time expands like

292
00:11:56,149 --> 00:12:00,169
that's not fabulous but what I'm gonna

293
00:11:57,589 --> 00:12:03,110
do so now that we have that information

294
00:12:00,169 --> 00:12:05,389
there when we push this information when

295
00:12:03,110 --> 00:12:07,639
we do a push render element we're gonna

296
00:12:05,389 --> 00:12:09,799
actually need to push in what we think

297
00:12:07,639 --> 00:12:11,480
the sprite bound actually should be and

298
00:12:09,799 --> 00:12:13,789
so that's the real place where this gets

299
00:12:11,480 --> 00:12:15,230
a little trickier right so here's our

300
00:12:13,789 --> 00:12:17,838
sort sprite bound it's going to come in

301
00:12:15,230 --> 00:12:20,209
here and that needs to get written into

302
00:12:17,839 --> 00:12:22,459
the buffer for that future sorting so

303
00:12:20,208 --> 00:12:24,888
instead of sort entry sort key equalling

304
00:12:22,458 --> 00:12:29,958
sort key in this case and index equals

305
00:12:24,889 --> 00:12:31,370
command well actually I guess yeah now

306
00:12:29,958 --> 00:12:33,198
think about it we don't need to copy the

307
00:12:31,370 --> 00:12:34,610
index part so I don't know what we want

308
00:12:33,198 --> 00:12:40,938
to do here I don't know if we want these

309
00:12:34,610 --> 00:12:43,308
guys to be well let's do it this way and

310
00:12:40,938 --> 00:12:44,929
I don't know I don't really want I don't

311
00:12:43,308 --> 00:12:46,879
love the fact that this is something

312
00:12:44,929 --> 00:12:48,169
that's got an additional element to it

313
00:12:46,879 --> 00:12:49,819
that doesn't actually need to be passed

314
00:12:48,169 --> 00:12:52,458
in right because you can see that this

315
00:12:49,818 --> 00:12:54,198
index here is going to get set

316
00:12:52,458 --> 00:12:57,229
inside the push routine because it's the

317
00:12:54,198 --> 00:13:00,409
thing that knows where the actual entry

318
00:12:57,230 --> 00:13:01,819
is right and so that index is telling

319
00:13:00,409 --> 00:13:05,929
you the offset into the push buffer

320
00:13:01,818 --> 00:13:08,448
where the actual operation goes but if

321
00:13:05,929 --> 00:13:10,159
we take a look at the sort key side of

322
00:13:08,448 --> 00:13:12,528
things I was saying I wanted to make it

323
00:13:10,159 --> 00:13:14,389
so that I could just pass in the entire

324
00:13:12,528 --> 00:13:15,950
bundle and so the question is do we want

325
00:13:14,389 --> 00:13:19,100
to pass in this

326
00:13:15,950 --> 00:13:20,990
wimon WiMAX zmax thing as some kind of a

327
00:13:19,100 --> 00:13:22,909
separate sort of value it and that would

328
00:13:20,990 --> 00:13:24,830
look like this that would just be like

329
00:13:22,909 --> 00:13:28,100
okay

330
00:13:24,830 --> 00:13:29,960
sprite bound or something like this and

331
00:13:28,100 --> 00:13:32,120
sprite bound would have you know these

332
00:13:29,960 --> 00:13:34,580
three values in it and then this would

333
00:13:32,120 --> 00:13:38,779
just have the sprite bound in it as a

334
00:13:34,580 --> 00:13:44,720
separate thing right or something like

335
00:13:38,779 --> 00:13:46,100
this that would be the value and and in

336
00:13:44,720 --> 00:13:48,889
fact I guess we could say that that's

337
00:13:46,100 --> 00:13:50,090
the sort key in some sense if that makes

338
00:13:48,889 --> 00:13:51,889
sense right

339
00:13:50,090 --> 00:13:53,300
so you know we do passing the sort key

340
00:13:51,889 --> 00:13:56,149
we still set the sort key but now the

341
00:13:53,299 --> 00:13:58,849
sort key is the sprite bound thing and

342
00:13:56,149 --> 00:14:00,590
off we go now if that's the case then

343
00:13:58,850 --> 00:14:02,300
that means in here like every time we

344
00:14:00,590 --> 00:14:04,460
were sort of looking at these particular

345
00:14:02,299 --> 00:14:06,109
things when we do sort sprite bound a

346
00:14:04,460 --> 00:14:07,580
and sort sprint been B here what we're

347
00:14:06,110 --> 00:14:09,710
really talking about now is well you

348
00:14:07,580 --> 00:14:11,330
really don't need the indices so

349
00:14:09,710 --> 00:14:12,800
actually when you're doing is in front

350
00:14:11,330 --> 00:14:14,810
of you're talking about just passing

351
00:14:12,799 --> 00:14:16,909
those two things separately and then

352
00:14:14,809 --> 00:14:18,319
when we're doing those is in front ups

353
00:14:16,909 --> 00:14:19,759
here we would just say like oh you know

354
00:14:18,320 --> 00:14:23,270
what why don't you pass the sort key

355
00:14:19,759 --> 00:14:25,370
instead and really also similarly this

356
00:14:23,269 --> 00:14:26,960
could be made clearer to the optimizer

357
00:14:25,370 --> 00:14:28,580
probably by just saying hey those are

358
00:14:26,960 --> 00:14:29,990
objects you don't have to worry about

359
00:14:28,580 --> 00:14:31,639
aliasing you don't have to worry about

360
00:14:29,990 --> 00:14:33,169
writing to them now it should have been

361
00:14:31,639 --> 00:14:34,490
able to figure that out itself but I

362
00:14:33,169 --> 00:14:36,740
don't know sometimes I like to turn

363
00:14:34,490 --> 00:14:39,019
things into pass by value just so the

364
00:14:36,740 --> 00:14:40,789
optimizer knows what's going on here

365
00:14:39,019 --> 00:14:42,439
I you know it just avoids any

366
00:14:40,789 --> 00:14:43,849
possibility of confusion when it does

367
00:14:42,440 --> 00:14:45,470
that substitution of the in line I

368
00:14:43,850 --> 00:14:46,519
always get a little nervous about it

369
00:14:45,470 --> 00:14:48,590
because I think it slows us down in

370
00:14:46,519 --> 00:14:51,230
debug mode but you don't love but you

371
00:14:48,590 --> 00:14:57,830
know that's just that's just the

372
00:14:51,230 --> 00:14:59,899
realities oh people don't care about the

373
00:14:57,830 --> 00:15:04,340
game industry when they make their

374
00:14:59,899 --> 00:15:05,809
compiler alright so anyway all you need

375
00:15:04,340 --> 00:15:07,370
to do is just pass the sort keys there

376
00:15:05,809 --> 00:15:09,019
and there's one more call down here to

377
00:15:07,370 --> 00:15:11,299
it right there's two cases where we care

378
00:15:09,019 --> 00:15:13,429
there's the merge part and the part

379
00:15:11,299 --> 00:15:16,039
where we're actually doing just two

380
00:15:13,429 --> 00:15:18,679
entries so if I go ahead and pass the

381
00:15:16,039 --> 00:15:21,769
sort key in both cases then I think I'm

382
00:15:18,679 --> 00:15:24,500
good to go now obviously we've got a

383
00:15:21,769 --> 00:15:26,809
problem in our outer code which is that

384
00:15:24,500 --> 00:15:29,350
now that you know ostensibly we've

385
00:15:26,809 --> 00:15:31,119
effectively

386
00:15:29,350 --> 00:15:32,560
you know we've made it so that now all

387
00:15:31,120 --> 00:15:34,750
we have to do is go out to the render

388
00:15:32,559 --> 00:15:37,269
code and tell it to use the other sort

389
00:15:34,750 --> 00:15:39,039
and we're good to go but obviously we

390
00:15:37,269 --> 00:15:40,899
kind of have a problem here where now

391
00:15:39,039 --> 00:15:42,759
all of the code that was previously

392
00:15:40,899 --> 00:15:45,939
calling these guys and it was passing in

393
00:15:42,759 --> 00:15:49,240
you know some notion of a sort key it's

394
00:15:45,940 --> 00:15:51,550
always wrong right we now need to give

395
00:15:49,240 --> 00:15:53,350
it more information about what these

396
00:15:51,549 --> 00:15:56,889
values actually were supposed to be and

397
00:15:53,350 --> 00:15:59,350
so when we do a push bitmap call if you

398
00:15:56,889 --> 00:16:00,850
think about it we really now don't have

399
00:15:59,350 --> 00:16:03,070
any idea what those values should

400
00:16:00,850 --> 00:16:04,659
actually be and that makes things a

401
00:16:03,070 --> 00:16:08,410
little tricky it means we kind of have

402
00:16:04,659 --> 00:16:10,209
to go like alright I you know what kind

403
00:16:08,409 --> 00:16:10,419
of bitmap was this and all that sort of

404
00:16:10,210 --> 00:16:12,490
stuff

405
00:16:10,419 --> 00:16:15,309
we have whether or not the thing is

406
00:16:12,490 --> 00:16:17,889
upright set in the object transform so

407
00:16:15,309 --> 00:16:19,809
that is something and we could probably

408
00:16:17,889 --> 00:16:22,269
try to figure out something like what

409
00:16:19,809 --> 00:16:24,129
the min and Max values of certain

410
00:16:22,269 --> 00:16:29,799
elements are based on the sprite size

411
00:16:24,129 --> 00:16:33,610
but yeah it's a little hard to say let's

412
00:16:29,799 --> 00:16:37,449
think about this for one second so we I

413
00:16:33,610 --> 00:16:38,470
mean in theory what we could do and I

414
00:16:37,450 --> 00:16:40,180
don't know if this will work properly

415
00:16:38,470 --> 00:16:42,639
but in theory what we could do is say

416
00:16:40,179 --> 00:16:45,750
use that object transforms upright

417
00:16:42,639 --> 00:16:48,189
versus not upright use that to determine

418
00:16:45,750 --> 00:16:50,529
how to interpret the bounds of the

419
00:16:48,190 --> 00:16:53,380
bitmap and then use those bounds as just

420
00:16:50,529 --> 00:16:56,620
straight-up modifications on the values

421
00:16:53,379 --> 00:16:58,120
I don't know if that's good enough like

422
00:16:56,620 --> 00:17:01,000
I don't know if that's gonna work but

423
00:16:58,120 --> 00:17:02,620
maybe that's what I'll try and for the

424
00:17:01,000 --> 00:17:03,820
sort Emel to see what happens you know

425
00:17:02,620 --> 00:17:07,779
sometimes you just cross your fingers

426
00:17:03,820 --> 00:17:09,700
and and try something and then you let

427
00:17:07,779 --> 00:17:11,589
what actually happens inform you as to

428
00:17:09,700 --> 00:17:16,630
whether that was something that's

429
00:17:11,589 --> 00:17:18,759
workable or not right okay so what I do

430
00:17:16,630 --> 00:17:21,790
know is that would let's start with the

431
00:17:18,759 --> 00:17:23,769
obvious stuff which is that now we've

432
00:17:21,789 --> 00:17:25,990
got this this notion of the sort key is

433
00:17:23,769 --> 00:17:28,389
is it's just done right because we don't

434
00:17:25,990 --> 00:17:30,490
we know one thing we know for sure is we

435
00:17:28,390 --> 00:17:31,450
can yank all the existing sort key stuff

436
00:17:30,490 --> 00:17:34,059
straight out of here

437
00:17:31,450 --> 00:17:37,480
because even if we need to do some other

438
00:17:34,059 --> 00:17:40,629
computations this ain't it right so we

439
00:17:37,480 --> 00:17:41,730
know that this all goes goes bye-bye

440
00:17:40,630 --> 00:17:46,110
right

441
00:17:41,730 --> 00:17:48,120
so that's gone and so we can eliminate

442
00:17:46,109 --> 00:17:50,219
all that and let that guide us with now

443
00:17:48,119 --> 00:17:51,959
how that's going so we're passing sort

444
00:17:50,220 --> 00:17:54,028
of these pieces of sort key information

445
00:17:51,960 --> 00:17:56,308
from the dim basis stuff we don't want

446
00:17:54,028 --> 00:17:58,169
that anymore so when we actually get the

447
00:17:56,308 --> 00:18:01,648
bit map dimension back the object

448
00:17:58,169 --> 00:18:06,480
transform has that that where is that

449
00:18:01,648 --> 00:18:10,018
guy there it is

450
00:18:06,480 --> 00:18:11,429
we have that up right there and like I

451
00:18:10,019 --> 00:18:12,870
said you know we even have it to do that

452
00:18:11,429 --> 00:18:15,720
it's whether or not we want that to be

453
00:18:12,869 --> 00:18:16,949
in the object transformer net and again

454
00:18:15,720 --> 00:18:18,298
I don't know whether we want that I mean

455
00:18:16,950 --> 00:18:19,528
I'm transferring that maybe it needs to

456
00:18:18,298 --> 00:18:20,970
be in a different place maybe push

457
00:18:19,528 --> 00:18:23,398
bitmap Misa take it as a parameter I

458
00:18:20,970 --> 00:18:25,048
don't know but what we do know is we

459
00:18:23,398 --> 00:18:26,428
need that value because one of the

460
00:18:25,048 --> 00:18:27,960
things that we said that's crucial to

461
00:18:26,429 --> 00:18:29,669
our soar criteria we could not get

462
00:18:27,960 --> 00:18:30,690
around it when we thought about it there

463
00:18:29,669 --> 00:18:32,399
did not seem to be a way to get around

464
00:18:30,690 --> 00:18:34,110
it is we need to know whether something

465
00:18:32,398 --> 00:18:36,178
is acts like a ground tile so it's

466
00:18:34,109 --> 00:18:37,619
effectively flat or whether something

467
00:18:36,179 --> 00:18:39,960
acts like an upright tile so it's

468
00:18:37,619 --> 00:18:43,109
effectively vertical and in the case

469
00:18:39,960 --> 00:18:44,548
where it's upright we know that we don't

470
00:18:43,109 --> 00:18:47,428
need to set those Y accidents we just

471
00:18:44,548 --> 00:18:49,048
need the Z max and so in the other case

472
00:18:47,429 --> 00:18:50,610
we need the wide sense and the Z max is

473
00:18:49,048 --> 00:18:56,490
just whatever the Z value actually was

474
00:18:50,609 --> 00:18:58,500
for that sprite right okay so let's take

475
00:18:56,490 --> 00:19:00,769
a look at that so when we go to do that

476
00:18:58,500 --> 00:19:06,839
we know that we've got this sort of

477
00:19:00,769 --> 00:19:08,788
sprite bound and the sprite bound is

478
00:19:06,839 --> 00:19:12,599
gonna be set in one of two different

479
00:19:08,788 --> 00:19:15,089
ways so one is sprite bound Y min sprite

480
00:19:12,599 --> 00:19:16,048
bound Y max equals some value right

481
00:19:15,089 --> 00:19:18,329
which is the Y value

482
00:19:16,048 --> 00:19:20,398
now if the thing is a card and Y then

483
00:19:18,329 --> 00:19:22,678
what we would know is that whatever its

484
00:19:20,398 --> 00:19:25,768
actual Y value is just wherever it

485
00:19:22,679 --> 00:19:27,210
actually is in Y and in 3d Y like where

486
00:19:25,769 --> 00:19:30,210
it is in the three dimensional Y

487
00:19:27,210 --> 00:19:33,870
coordinates of this thing that's our

488
00:19:30,210 --> 00:19:36,528
sort just straight up right because we

489
00:19:33,869 --> 00:19:39,388
know that it's only a card that's that's

490
00:19:36,528 --> 00:19:41,460
that's vertical it can't ever have a

491
00:19:39,388 --> 00:19:42,928
different Y value then than the one that

492
00:19:41,460 --> 00:19:46,470
is its position it's always straight up

493
00:19:42,929 --> 00:19:48,538
and down so we can take the offset plus

494
00:19:46,470 --> 00:19:51,269
the auto transforms position right so we

495
00:19:48,538 --> 00:19:53,908
can take the object transforms Y plus

496
00:19:51,269 --> 00:19:55,558
the offsets Y and we know that that's

497
00:19:53,909 --> 00:19:57,960
what it is

498
00:19:55,558 --> 00:19:59,970
so that's really easy to set what's

499
00:19:57,960 --> 00:20:01,379
what's hard to set and again this is if

500
00:19:59,970 --> 00:20:02,970
it's upright so this is if the augur

501
00:20:01,378 --> 00:20:06,839
transform if we're talking about an

502
00:20:02,970 --> 00:20:11,519
upright sprite right what's harder is

503
00:20:06,839 --> 00:20:14,189
that Z max value because the Z max value

504
00:20:11,519 --> 00:20:17,069
is the highest point on the sprite so we

505
00:20:14,190 --> 00:20:23,249
know obviously that we start out you

506
00:20:17,069 --> 00:20:25,918
know here but we know that we're going

507
00:20:23,249 --> 00:20:28,079
to go by a certain amount of scale that

508
00:20:25,919 --> 00:20:31,440
height we're gonna actually expand out

509
00:20:28,079 --> 00:20:33,749
the size of this thing right and so what

510
00:20:31,440 --> 00:20:35,190
I'm thinking is that if we take if we

511
00:20:33,749 --> 00:20:37,200
take a look at what happens and get bit

512
00:20:35,190 --> 00:20:38,460
bapt in when we pass that height in

513
00:20:37,200 --> 00:20:40,980
there you can sort of see what's

514
00:20:38,460 --> 00:20:43,200
happening here we do a height x with the

515
00:20:40,980 --> 00:20:45,509
right here we get that size and we're

516
00:20:43,200 --> 00:20:48,690
taking the size and we end up blowing it

517
00:20:45,509 --> 00:20:50,579
out to basically be centered around its

518
00:20:48,690 --> 00:20:53,759
its center it's whatever its alignment

519
00:20:50,579 --> 00:20:55,308
point is and then we sort of figure out

520
00:20:53,759 --> 00:20:57,659
where the sprite is around there now

521
00:20:55,308 --> 00:20:59,278
what you can see when this happens we

522
00:20:57,659 --> 00:21:01,470
get the size and we get that alignment

523
00:20:59,278 --> 00:21:05,490
what we kind of want to know at that

524
00:21:01,470 --> 00:21:07,169
point is well we want to know this piece

525
00:21:05,490 --> 00:21:08,819
of information right here sort of right

526
00:21:07,169 --> 00:21:11,190
we want to know what the highest point

527
00:21:08,819 --> 00:21:14,249
is gonna be if we were just sort of go

528
00:21:11,190 --> 00:21:18,570
upwards by that amount with with sort of

529
00:21:14,249 --> 00:21:20,548
this the y axis in this case is really

530
00:21:18,569 --> 00:21:23,249
the z axis right because the sprite is

531
00:21:20,548 --> 00:21:26,158
standing upright in z is kind of the

532
00:21:23,249 --> 00:21:28,470
idea right and so I don't actually know

533
00:21:26,159 --> 00:21:30,539
what I should do to get that out in the

534
00:21:28,470 --> 00:21:32,009
most convenient possible way and the

535
00:21:30,538 --> 00:21:33,359
fact that the sprite can be rotated

536
00:21:32,009 --> 00:21:35,548
definitely doesn't help but what I think

537
00:21:33,359 --> 00:21:37,829
I'm gonna do just to make things a

538
00:21:35,548 --> 00:21:39,658
little simpler is for right now I think

539
00:21:37,829 --> 00:21:41,849
I might just say let's take whatever the

540
00:21:39,659 --> 00:21:44,009
height of the sprite should be and we'll

541
00:21:41,849 --> 00:21:45,569
say you go half that up now what that

542
00:21:44,009 --> 00:21:47,759
doesn't take into account is where the

543
00:21:45,569 --> 00:21:50,278
alignment point is so it's not really

544
00:21:47,759 --> 00:21:51,419
quite correct and I feel like that's

545
00:21:50,278 --> 00:21:52,798
probably something we'll have to make a

546
00:21:51,419 --> 00:21:56,009
little bit more accurate in the future

547
00:21:52,798 --> 00:21:57,690
by going okay let's see now how are we

548
00:21:56,009 --> 00:21:59,490
actually rotating the sprite perhaps or

549
00:21:57,690 --> 00:22:02,548
where is the actual alignment point and

550
00:21:59,490 --> 00:22:04,319
I could you know I could do something a

551
00:22:02,548 --> 00:22:06,538
little bit fancier here obviously you

552
00:22:04,319 --> 00:22:08,899
can see where the demint you know dim

553
00:22:06,538 --> 00:22:10,519
sized and dim aligned come back

554
00:22:08,900 --> 00:22:13,548
I guess anything about I you know I

555
00:22:10,519 --> 00:22:16,819
could certainly take dim sighs and dim a

556
00:22:13,548 --> 00:22:19,400
line and make those be a little bit more

557
00:22:16,819 --> 00:22:21,259
accurate here maybe I should so if we

558
00:22:19,400 --> 00:22:22,820
take the dim pxy and you take a look at

559
00:22:21,259 --> 00:22:26,658
what happens here if the Y that comes

560
00:22:22,819 --> 00:22:36,288
out of that is basically gonna be I

561
00:22:26,659 --> 00:22:43,250
think the Y that we want well it's gonna

562
00:22:36,288 --> 00:23:00,349
be the bottom corner depending on how

563
00:22:43,250 --> 00:23:02,028
its rotated I say I think I'm gonna put

564
00:23:00,349 --> 00:23:04,898
it to do in and I'm just gonna do the

565
00:23:02,028 --> 00:23:11,298
easier thing first I'm gonna say to do

566
00:23:04,898 --> 00:23:16,759
more accurate zmax calculations this

567
00:23:11,298 --> 00:23:21,918
doesn't handle alignment rotation or

568
00:23:16,759 --> 00:23:23,778
axis here scale because really what we

569
00:23:21,919 --> 00:23:26,240
want to do is take the maximum of the

570
00:23:23,778 --> 00:23:28,940
bounding box of the rotated entity which

571
00:23:26,240 --> 00:23:31,308
again it's just a little there's a lot

572
00:23:28,940 --> 00:23:33,409
of fussing so I think what I'll do first

573
00:23:31,308 --> 00:23:35,720
is say well you know for people who are

574
00:23:33,409 --> 00:23:37,309
not doing any of that fanciness then we

575
00:23:35,720 --> 00:23:38,569
pretty much know that if you were

576
00:23:37,308 --> 00:23:41,089
centered you would be something like

577
00:23:38,569 --> 00:23:43,009
this so at most we'd be off by 0.5 of

578
00:23:41,089 --> 00:23:47,028
that height so I'm just gonna let that

579
00:23:43,009 --> 00:23:48,200
be a temporary temporary sort key and

580
00:23:47,028 --> 00:23:50,659
we'll see how that goes

581
00:23:48,200 --> 00:23:52,909
all right so in the other case we have

582
00:23:50,659 --> 00:23:54,669
the exact opposite problem right in the

583
00:23:52,909 --> 00:23:56,899
case where we have something lying flat

584
00:23:54,669 --> 00:23:58,610
then what we have is we know that the

585
00:23:56,898 --> 00:24:02,509
sprite pounds Emax we know it exactly

586
00:23:58,609 --> 00:24:04,428
it's just this right because we know

587
00:24:02,509 --> 00:24:05,869
that the sprite is constant in Z so we

588
00:24:04,429 --> 00:24:08,330
know that it's Z max is just whatever

589
00:24:05,869 --> 00:24:11,058
the Z value of this thing was cuz

590
00:24:08,329 --> 00:24:13,220
flattened Z but what we don't know is

591
00:24:11,058 --> 00:24:15,589
what are its extent in Y now we know

592
00:24:13,220 --> 00:24:17,269
where those extents might start right

593
00:24:15,589 --> 00:24:20,689
because we know that it sort of has a y

594
00:24:17,269 --> 00:24:22,668
value that's you know centered around

595
00:24:20,690 --> 00:24:24,980
this potentially or is related

596
00:24:22,669 --> 00:24:27,049
to that but we don't know how much to

597
00:24:24,980 --> 00:24:29,239
add to the Y min and the y max to

598
00:24:27,048 --> 00:24:31,878
actually get it to sort of flow out to

599
00:24:29,239 --> 00:24:34,308
that entire size so the question is here

600
00:24:31,878 --> 00:24:36,378
how much do we want to do that by again

601
00:24:34,308 --> 00:24:39,259
we could do exactly the same thing here

602
00:24:36,378 --> 00:24:41,089
potentially but we're probably going to

603
00:24:39,259 --> 00:24:43,069
have to be more accurate than this I

604
00:24:41,089 --> 00:24:45,888
would suspect in the future

605
00:24:43,069 --> 00:24:47,558
so again this probably won't give us

606
00:24:45,888 --> 00:24:49,878
right results but we can start with it

607
00:24:47,558 --> 00:24:51,408
and so here we just be saying well the

608
00:24:49,878 --> 00:24:53,418
minimum Y would just be however for a

609
00:24:51,409 --> 00:24:56,119
back light and and the y max would be

610
00:24:53,419 --> 00:24:57,980
however far forward and height we would

611
00:24:56,118 --> 00:24:59,449
go and for something that was simple and

612
00:24:57,980 --> 00:25:01,519
not doing anything more complicated that

613
00:24:59,450 --> 00:25:09,259
would probably be correct

614
00:25:01,519 --> 00:25:11,419
I think but I think these are inaccurate

615
00:25:09,259 --> 00:25:12,950
enough that I suspect we will not get

616
00:25:11,419 --> 00:25:15,139
through the whole game with those

617
00:25:12,950 --> 00:25:16,369
holding so after we sort of get things

618
00:25:15,138 --> 00:25:17,928
working we'll probably have to go back

619
00:25:16,368 --> 00:25:19,099
and go ah see it doesn't really work

620
00:25:17,929 --> 00:25:21,409
here and it doesn't work because of

621
00:25:19,099 --> 00:25:27,798
these sort criteria so now we kind of

622
00:25:21,409 --> 00:25:32,059
got to go do the more real stuff all

623
00:25:27,798 --> 00:25:34,099
right so that's our push bitmap call and

624
00:25:32,058 --> 00:25:36,589
once we have spray found now we can just

625
00:25:34,099 --> 00:25:39,769
pass right down to this and off we go

626
00:25:36,589 --> 00:25:41,778
right now what we probably want to do

627
00:25:39,769 --> 00:25:44,929
here a little August let me finish this

628
00:25:41,778 --> 00:25:49,028
stuff off so yeah what is the object

629
00:25:44,929 --> 00:25:49,028
transform it's offset P

630
00:25:57,829 --> 00:26:05,939
yeah and in some sense here we can

631
00:26:02,519 --> 00:26:06,900
probably also take advantage of just a

632
00:26:05,940 --> 00:26:08,730
little bit of the commonality of the

633
00:26:06,900 --> 00:26:11,040
code here and just say well okay so the

634
00:26:08,730 --> 00:26:13,410
wyman zoe's that and the zmax is always

635
00:26:11,039 --> 00:26:15,710
that effectively but then what happens

636
00:26:13,410 --> 00:26:18,540
here is like oh yeah you just you add in

637
00:26:15,710 --> 00:26:21,569
this in the case where you know that

638
00:26:18,539 --> 00:26:23,220
you're you're an upright sprite and you

639
00:26:21,569 --> 00:26:27,689
add these in in the case where you know

640
00:26:23,220 --> 00:26:33,390
that you're a a flat you know lying down

641
00:26:27,690 --> 00:26:36,420
sprite seems reasonable so all right so

642
00:26:33,390 --> 00:26:38,550
moving along we've got a push rect

643
00:26:36,420 --> 00:26:40,590
situation here that I think and I'm not

644
00:26:38,549 --> 00:26:42,690
entirely certain but I think we can just

645
00:26:40,589 --> 00:26:45,029
sort of use the exact same code would be

646
00:26:42,690 --> 00:26:46,590
my suspicion so when we're like doing

647
00:26:45,029 --> 00:26:48,660
something like push rect I think we

648
00:26:46,589 --> 00:26:50,399
should be able to effectively use exact

649
00:26:48,660 --> 00:26:51,769
same calculation I don't actually know

650
00:26:50,400 --> 00:26:54,240
that that's true but that's my suspicion

651
00:26:51,769 --> 00:26:56,819
and so now we've got the same situation

652
00:26:54,240 --> 00:27:00,089
with clear if we want that to sort to

653
00:26:56,819 --> 00:27:02,339
the bottom of the screen then what we

654
00:27:00,089 --> 00:27:04,439
would need to do again is sort of use

655
00:27:02,339 --> 00:27:07,019
that fake cleaner idea I think I was

656
00:27:04,440 --> 00:27:10,080
doing before we could say we've got a

657
00:27:07,019 --> 00:27:15,569
sprite bound and here's our sort key and

658
00:27:10,079 --> 00:27:19,699
that sort key well sort key min Y min

659
00:27:15,569 --> 00:27:23,269
equals real 32 minimum sort key Y max

660
00:27:19,700 --> 00:27:26,460
feels real 32 maximum and then swore key

661
00:27:23,269 --> 00:27:29,069
Z max equals real affinity to minimum

662
00:27:26,460 --> 00:27:31,620
and that'll sort I think below

663
00:27:29,069 --> 00:27:33,689
everything else that exists so that

664
00:27:31,619 --> 00:27:37,619
would still satisfy the same criteria I

665
00:27:33,690 --> 00:27:41,090
believe famous last words can but anyway

666
00:27:37,619 --> 00:27:43,949
so now that we have that information

667
00:27:41,089 --> 00:27:45,509
what we need to do is we need to do two

668
00:27:43,950 --> 00:27:47,100
things first of all we need to find a

669
00:27:45,509 --> 00:27:49,799
way to share this particular code right

670
00:27:47,099 --> 00:27:51,990
here and so let's see if we can pull

671
00:27:49,799 --> 00:27:57,889
that out into something where we can say

672
00:27:51,990 --> 00:28:01,319
you know okay Spray pound get bound for

673
00:27:57,890 --> 00:28:05,240
right if this was something that had to

674
00:28:01,319 --> 00:28:05,240
be called as a separate thing

675
00:28:07,558 --> 00:28:14,168
how might we do it well what do we need

676
00:28:11,200 --> 00:28:16,600
we need two things we need the object

677
00:28:14,169 --> 00:28:18,669
transforms offset P and the upright

678
00:28:16,599 --> 00:28:21,158
right and then we need the height and

679
00:28:18,669 --> 00:28:23,350
the offsets of three things so we need

680
00:28:21,159 --> 00:28:25,990
the object transform comic the Spanish

681
00:28:23,349 --> 00:28:29,918
Inquisition so we got the object

682
00:28:25,990 --> 00:28:33,099
transform we also need the height we

683
00:28:29,919 --> 00:28:34,809
also need the offset but I think with

684
00:28:33,099 --> 00:28:37,269
all of those things in place then that's

685
00:28:34,808 --> 00:28:40,359
pretty much all we need so then we can

686
00:28:37,269 --> 00:28:42,128
just say like sprite band equals get BAM

687
00:28:40,359 --> 00:28:45,099
floor and then we can just pass it the

688
00:28:42,128 --> 00:28:47,439
object transform offset height oops not

689
00:28:45,099 --> 00:28:50,259
so good and then we can compile and I

690
00:28:47,440 --> 00:28:52,629
think we're good so now we've got our

691
00:28:50,259 --> 00:28:55,240
sort key stuff I think under control

692
00:28:52,628 --> 00:28:58,058
there and and should be able to just

693
00:28:55,240 --> 00:29:00,490
like I said kind of copy that over to

694
00:28:58,058 --> 00:29:02,259
the rectangle case when we do a push

695
00:29:00,490 --> 00:29:04,240
vector so there we go

696
00:29:02,259 --> 00:29:06,128
and now the only question is well what's

697
00:29:04,240 --> 00:29:07,359
height well height is just the the Y

698
00:29:06,128 --> 00:29:10,000
dimension I think that's all we really

699
00:29:07,359 --> 00:29:14,859
need to do there and then we can pass

700
00:29:10,000 --> 00:29:17,200
that as as the bound okay so now if we

701
00:29:14,859 --> 00:29:19,898
run this we're gonna run into a world of

702
00:29:17,200 --> 00:29:22,690
hurt I suspect very quickly like you can

703
00:29:19,898 --> 00:29:24,908
see and the reason for that of course is

704
00:29:22,690 --> 00:29:27,100
that our renderer doesn't know that we

705
00:29:24,909 --> 00:29:31,149
changed the format of our sword keys so

706
00:29:27,099 --> 00:29:37,388
we're gonna have to go tell the renderer

707
00:29:31,148 --> 00:29:40,000
that that's well not okay so if we go

708
00:29:37,388 --> 00:29:42,219
into the lunacy here forgot our sort

709
00:29:40,000 --> 00:29:44,679
entries so here's our sword entries

710
00:29:42,220 --> 00:29:47,288
command right and it's gonna pass that

711
00:29:44,679 --> 00:29:48,788
sort memory game commands thing you can

712
00:29:47,288 --> 00:29:51,339
see it sort of pulling this information

713
00:29:48,788 --> 00:29:54,339
out here and you can see that when we

714
00:29:51,339 --> 00:29:56,378
when we grab those sword entries out you

715
00:29:54,339 --> 00:29:57,538
can see that it casts it to a sword

716
00:29:56,378 --> 00:29:59,709
entry there and that's just because

717
00:29:57,538 --> 00:30:05,648
whoever sorts the entries that's what

718
00:29:59,710 --> 00:30:06,819
they wanted to do there yeah so what we

719
00:30:05,648 --> 00:30:09,638
need to do is make sure all of these

720
00:30:06,819 --> 00:30:12,128
people start using the correct

721
00:30:09,638 --> 00:30:13,778
sort of the correct thing for sword

722
00:30:12,128 --> 00:30:15,638
entries now what they did occurs to me

723
00:30:13,778 --> 00:30:17,378
that we didn't do particularly well here

724
00:30:15,638 --> 00:30:19,000
as you can see that we've got this sort

725
00:30:17,378 --> 00:30:21,250
of notion that everyone can just cast

726
00:30:19,000 --> 00:30:23,319
this value now that's not great because

727
00:30:21,250 --> 00:30:25,059
now you know if you imagine that we have

728
00:30:23,319 --> 00:30:26,919
this in 20 different places well I

729
00:30:25,059 --> 00:30:28,599
wouldn't really have any way to make it

730
00:30:26,920 --> 00:30:30,490
easy for me to know that that's what was

731
00:30:28,599 --> 00:30:33,129
happening so when I do a cast like this

732
00:30:30,490 --> 00:30:35,140
but I probably should do and you can

733
00:30:33,130 --> 00:30:37,570
sort of see why hopefully this would

734
00:30:35,140 --> 00:30:42,310
make some sense is I think probably what

735
00:30:37,569 --> 00:30:43,960
we want is inside the the code that's

736
00:30:42,309 --> 00:30:46,359
shared in the renderer that's doing that

737
00:30:43,960 --> 00:30:48,700
sort in fact maybe I could put that in

738
00:30:46,359 --> 00:30:51,609
sort that's TPP here what I could do is

739
00:30:48,700 --> 00:30:54,880
say well alright let's let's make this a

740
00:30:51,609 --> 00:30:57,250
more like standard operation so we know

741
00:30:54,880 --> 00:30:58,900
that you know when we go to do our sorts

742
00:30:57,250 --> 00:31:00,579
you're gonna call this routine and that

743
00:30:58,900 --> 00:31:02,200
way if the sprite bound thing changes

744
00:31:00,579 --> 00:31:04,029
then you know that it was supposed to be

745
00:31:02,200 --> 00:31:06,160
different so we've got this sort of

746
00:31:04,029 --> 00:31:10,899
concept that we're returning a sort

747
00:31:06,160 --> 00:31:16,210
spray bound and we would say get sort

748
00:31:10,900 --> 00:31:18,640
entries here and then it would do just

749
00:31:16,210 --> 00:31:21,370
exactly this and again there's nothing

750
00:31:18,640 --> 00:31:22,680
weird happening your other than the fact

751
00:31:21,369 --> 00:31:25,689
that we're just kind of cleaning up that

752
00:31:22,680 --> 00:31:28,299
notion that what you're returning is is

753
00:31:25,690 --> 00:31:30,340
a particular type right that's all I'm

754
00:31:28,299 --> 00:31:31,809
trying to do and so that would take the

755
00:31:30,339 --> 00:31:34,959
commands so that would take the game

756
00:31:31,809 --> 00:31:36,609
render commands and now you know we

757
00:31:34,960 --> 00:31:39,460
would say like oh okay

758
00:31:36,609 --> 00:31:41,289
let's go ahead and and get those sort

759
00:31:39,460 --> 00:31:45,970
entries out and we just say the sort

760
00:31:41,289 --> 00:31:49,420
sprite band in this case as opposed to

761
00:31:45,970 --> 00:31:52,180
sort entries is going to be equal to get

762
00:31:49,420 --> 00:31:55,029
sort entries for these commands off we

763
00:31:52,180 --> 00:31:57,730
go and and so now that's all good and

764
00:31:55,029 --> 00:31:59,500
you can see that that will cascade our

765
00:31:57,730 --> 00:32:01,450
errors there but of course we've got our

766
00:31:59,500 --> 00:32:03,819
OpenGL render as well and it's doing the

767
00:32:01,450 --> 00:32:06,039
same thing so what we want to do here is

768
00:32:03,819 --> 00:32:08,889
make sure that that it also uses the

769
00:32:06,039 --> 00:32:12,069
same code path so here we go right just

770
00:32:08,890 --> 00:32:13,990
making sure that happens there and now

771
00:32:12,069 --> 00:32:16,480
everyone should have cascading errors

772
00:32:13,990 --> 00:32:22,599
that help us correct it everything to

773
00:32:16,480 --> 00:32:30,470
the right case what just happened there

774
00:32:22,599 --> 00:32:31,819
okay there we go alright so that's fixed

775
00:32:30,470 --> 00:32:33,140
now but we still have one more place

776
00:32:31,819 --> 00:32:34,339
that isn't calling the right thing and

777
00:32:33,140 --> 00:32:35,690
that's the thing that actually does the

778
00:32:34,339 --> 00:32:37,189
sort you can see when we call sort

779
00:32:35,690 --> 00:32:39,320
entries here it's still thinking of this

780
00:32:37,190 --> 00:32:41,660
in terms of sort entries so what we want

781
00:32:39,319 --> 00:32:44,720
to do again is if we have this this had

782
00:32:41,660 --> 00:32:45,470
been doing the correct call in the first

783
00:32:44,720 --> 00:32:46,670
place right

784
00:32:45,470 --> 00:32:47,930
it would have immediately given us an

785
00:32:46,670 --> 00:32:49,070
error and that's that's the only reason

786
00:32:47,930 --> 00:32:50,779
I want to do that right so now that

787
00:32:49,069 --> 00:32:54,939
anytime I change that since that is a

788
00:32:50,779 --> 00:32:57,950
cold cast now it's gonna be better right

789
00:32:54,940 --> 00:32:59,900
okay so now when we actually get here to

790
00:32:57,950 --> 00:33:00,559
do our sorting obviously like this the

791
00:32:59,900 --> 00:33:03,830
radix sort

792
00:33:00,559 --> 00:33:07,159
not an option anymore so that's like

793
00:33:03,829 --> 00:33:08,990
totally totally not okay so we're down

794
00:33:07,160 --> 00:33:10,670
to just being able to merge sort these

795
00:33:08,990 --> 00:33:12,829
guys right that's the only thing that

796
00:33:10,670 --> 00:33:15,200
we're gonna be able to do so let's go

797
00:33:12,829 --> 00:33:20,509
ahead and see if that's okay

798
00:33:15,200 --> 00:33:24,440
what is the would don't remember what I

799
00:33:20,509 --> 00:33:27,170
just said this sort even took so it

800
00:33:24,440 --> 00:33:30,890
takes a sort sprite down star temp how

801
00:33:27,170 --> 00:33:33,230
much space does temp have to have so 10

802
00:33:30,890 --> 00:33:36,490
pass to have the whole size right so yes

803
00:33:33,230 --> 00:33:39,110
so it's got to be effectively this size

804
00:33:36,490 --> 00:33:41,359
again you can see the sort of cascading

805
00:33:39,109 --> 00:33:42,649
stuff here why I think it might be nice

806
00:33:41,359 --> 00:33:43,789
in case we want to make these sort of

807
00:33:42,650 --> 00:33:46,730
changes now that I've seen them happen

808
00:33:43,789 --> 00:33:49,730
once the sword entries here right are

809
00:33:46,730 --> 00:33:51,650
also wrong because I believe I believe

810
00:33:49,730 --> 00:33:53,920
we've got sort memory being allocated in

811
00:33:51,650 --> 00:33:53,920
here

812
00:33:59,589 --> 00:34:05,859
so needed memory size is yeah you can

813
00:34:03,970 --> 00:34:08,409
see it doing like a size of sword entry

814
00:34:05,859 --> 00:34:12,578
here so I feel like that's again the

815
00:34:08,409 --> 00:34:15,669
sort of thing where we probably want we

816
00:34:12,579 --> 00:34:19,240
probably want that to be clarified and I

817
00:34:15,668 --> 00:34:23,940
guess you know inside the sort maybe

818
00:34:19,239 --> 00:34:23,939
that I don't know where that should go

819
00:34:24,480 --> 00:34:30,190
probably in here that makes sense and

820
00:34:28,300 --> 00:34:33,399
then probably like we want something

821
00:34:30,190 --> 00:34:36,579
here that's like get sort memory size or

822
00:34:33,398 --> 00:34:39,338
get sort temp memory size and that way

823
00:34:36,579 --> 00:34:41,589
inside the win32 code instead of it

824
00:34:39,338 --> 00:34:44,980
doing this it can actually like ask and

825
00:34:41,588 --> 00:34:49,568
and know right so it's gonna say like

826
00:34:44,980 --> 00:34:52,960
okay here's the game render commands and

827
00:34:49,568 --> 00:34:54,250
in that case it's gonna take the element

828
00:34:52,960 --> 00:34:56,679
count and it's gonna multiply it by the

829
00:34:54,250 --> 00:34:58,539
sort sprite bath and that really all I'm

830
00:34:56,679 --> 00:35:00,460
trying to do here right it's nothing

831
00:34:58,539 --> 00:35:04,300
particularly complicated I'm just trying

832
00:35:00,460 --> 00:35:06,130
to make sure that these operations kind

833
00:35:04,300 --> 00:35:09,550
of are all bound together in a

834
00:35:06,130 --> 00:35:11,829
reasonably close way if that makes sense

835
00:35:09,550 --> 00:35:13,568
so you can kind of see that like hey

836
00:35:11,829 --> 00:35:17,170
everyone's got to do it the way that

837
00:35:13,568 --> 00:35:18,309
they do it and if you change one you'll

838
00:35:17,170 --> 00:35:20,500
know to change the rest of them it

839
00:35:18,309 --> 00:35:22,059
that's really the only thing that I was

840
00:35:20,500 --> 00:35:24,550
trying to accomplish there it's nothing

841
00:35:22,059 --> 00:35:26,650
particularly fancy so in here we could

842
00:35:24,550 --> 00:35:30,039
just say like okay get sort temp memory

843
00:35:26,650 --> 00:35:31,358
size for these render commands and then

844
00:35:30,039 --> 00:35:33,519
get rid of the rest of this stuff and

845
00:35:31,358 --> 00:35:35,529
then in here when we do that gets sort

846
00:35:33,519 --> 00:35:37,960
temp memory size will return that with

847
00:35:35,530 --> 00:35:40,329
the needed sort memory size and then I

848
00:35:37,960 --> 00:35:45,210
think we would be good to go all right

849
00:35:40,329 --> 00:35:47,280
so when we call get sort entry

850
00:35:45,210 --> 00:35:49,559
an OpenGL renderer okay so it looks like

851
00:35:47,280 --> 00:35:51,570
that's not is that not in here for some

852
00:35:49,559 --> 00:35:53,159
reason shouldn't that that would have to

853
00:35:51,570 --> 00:35:55,559
because when it calls a sort I guess it

854
00:35:53,159 --> 00:35:58,710
doesn't have to I don't know so maybe

855
00:35:55,559 --> 00:36:07,469
these have to be in the actual sort code

856
00:35:58,710 --> 00:36:12,929
I don't know let's find out short

857
00:36:07,469 --> 00:36:20,309
entries sort memory what it calls the

858
00:36:12,929 --> 00:36:29,039
merge sort sprite based so it's great

859
00:36:20,309 --> 00:36:35,219
very good ok and handmade slow would

860
00:36:29,039 --> 00:36:37,199
also need to do this so here is our Oh

861
00:36:35,219 --> 00:36:40,199
so you know what this is actually the

862
00:36:37,199 --> 00:36:42,750
exact test code we wanted to when I was

863
00:36:40,199 --> 00:36:45,329
saying we want to test it more fully so

864
00:36:42,750 --> 00:36:47,519
we can say like Oh make sure that is in

865
00:36:45,329 --> 00:36:49,889
front of and speaking of is in front of

866
00:36:47,519 --> 00:36:53,338
my head is in front of that if is in

867
00:36:49,889 --> 00:36:56,639
front of is true for everybody in our

868
00:36:53,338 --> 00:36:59,820
you know in our cases so it handmade

869
00:36:56,639 --> 00:37:02,190
slow we can go ahead and do that that

870
00:36:59,820 --> 00:37:05,550
test you know what I was you know what

871
00:37:02,190 --> 00:37:11,250
I'm wondering did this really never so

872
00:37:05,550 --> 00:37:13,680
I'm in it yeah I'm gonna test this cuz

873
00:37:11,250 --> 00:37:17,670
that's actually happening in our debug

874
00:37:13,679 --> 00:37:20,190
build I'm kind of surprised that that's

875
00:37:17,670 --> 00:37:25,619
not causing from is it time to function

876
00:37:20,190 --> 00:37:27,119
with it is it just with a yeah okay so

877
00:37:25,619 --> 00:37:29,960
let's go ahead and run this and see

878
00:37:27,119 --> 00:37:29,960
where we're at now

879
00:37:35,208 --> 00:37:38,848
so what I'm going to do here is I want

880
00:37:37,259 --> 00:37:41,239
to actually go step into this call so

881
00:37:38,849 --> 00:37:45,298
I'm gonna go ahead and and see if I can

882
00:37:41,239 --> 00:37:47,789
rerun this statement right so that I can

883
00:37:45,298 --> 00:37:49,259
see what the actual sort comparison did

884
00:37:47,789 --> 00:37:52,380
in the case where I've already kind of

885
00:37:49,259 --> 00:37:55,639
got an error here so here's two sprites

886
00:37:52,380 --> 00:37:57,179
and oh well they happen to be the same

887
00:37:55,639 --> 00:37:59,669
actually

888
00:37:57,179 --> 00:38:04,588
so for sorting two sprites that are the

889
00:37:59,668 --> 00:38:07,708
same then I guess I guess the result

890
00:38:04,588 --> 00:38:15,268
could come out either way right so that

891
00:38:07,708 --> 00:38:17,638
doesn't really count so I guess we would

892
00:38:15,268 --> 00:38:25,198
soups I guess we would say more like

893
00:38:17,639 --> 00:38:27,630
okay if it's in front of then that's

894
00:38:25,199 --> 00:38:29,729
fine if it's not in front of it then we

895
00:38:27,630 --> 00:38:33,989
have to double check are they equal

896
00:38:29,728 --> 00:38:38,518
so we'll just assert entry a sort key

897
00:38:33,989 --> 00:38:42,358
you know why min equals entry a sort key

898
00:38:38,518 --> 00:38:44,308
why max and this will then get us down

899
00:38:42,358 --> 00:38:46,648
to only cases where there are actually

900
00:38:44,309 --> 00:38:49,528
different sort keys and we can see so

901
00:38:46,648 --> 00:38:53,728
you know assume that we'll just verify

902
00:38:49,528 --> 00:39:00,380
that oops verify that these are all

903
00:38:53,728 --> 00:39:10,618
completely equal to each other so Y min

904
00:39:00,380 --> 00:39:12,028
Y max see Max and these are all B's all

905
00:39:10,619 --> 00:39:15,838
right so now let's try and get that

906
00:39:12,028 --> 00:39:17,309
assertion and and take a look at one

907
00:39:15,838 --> 00:39:20,998
that's probably more likely to be

908
00:39:17,309 --> 00:39:23,249
correct okay so if we take a look at

909
00:39:20,998 --> 00:39:25,788
entry a and entry fee in this case they

910
00:39:23,248 --> 00:39:29,098
should be actually different values now

911
00:39:25,789 --> 00:39:32,309
and it looks like they are right so

912
00:39:29,099 --> 00:39:36,838
there's e max values are different they

913
00:39:32,309 --> 00:39:39,859
are both it looks like up right sprites

914
00:39:36,838 --> 00:39:43,018
because they have exactly the same

915
00:39:39,858 --> 00:39:45,958
values here right they they're both

916
00:39:43,018 --> 00:39:47,369
they're both exactly and so if we take a

917
00:39:45,958 --> 00:39:49,500
look at their Z max values

918
00:39:47,369 --> 00:39:52,259
we see that this one is 1.25 and this

919
00:39:49,500 --> 00:39:54,630
one is 0.75 so what we would expect to

920
00:39:52,260 --> 00:39:56,370
see is this one should have been sorted

921
00:39:54,630 --> 00:39:57,690
ahead of this one and I think that's

922
00:39:56,369 --> 00:40:14,489
probably what we're not seeing here

923
00:39:57,690 --> 00:40:16,349
right because entry a entry entry a is

924
00:40:14,489 --> 00:40:19,639
being it's coming first and list right

925
00:40:16,349 --> 00:40:22,589
and entry B is coming it's coming after

926
00:40:19,639 --> 00:40:23,969
it now this doesn't actually do an N

927
00:40:22,590 --> 00:40:29,039
squared check this only doesn't end

928
00:40:23,969 --> 00:40:32,099
check there's probably not what we want

929
00:40:29,039 --> 00:40:33,449
check anyway but it's good for our for

930
00:40:32,099 --> 00:40:35,130
immediate checking purposes just to get

931
00:40:33,449 --> 00:40:40,919
the basic bucks out other team so that's

932
00:40:35,130 --> 00:40:42,510
fine anyway so entry a probably

933
00:40:40,920 --> 00:40:44,430
shouldn't be right because if entry a

934
00:40:42,510 --> 00:40:48,270
and entry be are compared then we should

935
00:40:44,429 --> 00:40:50,669
find that the Z max value of entry be

936
00:40:48,269 --> 00:40:53,519
should put it ahead so what's our actual

937
00:40:50,670 --> 00:40:55,619
index here index is 70 so it does point

938
00:40:53,519 --> 00:40:57,869
to a problem with the sorting because it

939
00:40:55,619 --> 00:40:59,730
means that the first 70 entries were all

940
00:40:57,869 --> 00:41:03,239
sorted properly and this is the only one

941
00:40:59,730 --> 00:41:06,570
that's actually wrong so far out of how

942
00:41:03,239 --> 00:41:07,589
many out of 2000 so um maybe you know

943
00:41:06,570 --> 00:41:09,240
the other thing that we should do is

944
00:41:07,590 --> 00:41:11,190
probably look at what is actually what

945
00:41:09,239 --> 00:41:12,839
it's actually doing which is kind of a

946
00:41:11,190 --> 00:41:17,579
separate issue here so let me let me

947
00:41:12,840 --> 00:41:20,690
actually if this zeros that so I can

948
00:41:17,579 --> 00:41:20,690
actually see what's going on

949
00:41:23,570 --> 00:41:33,559
not great not great not great folks

950
00:41:27,300 --> 00:41:35,670
don't love it it's a blank screen okay

951
00:41:33,559 --> 00:41:37,289
so probably what we're gonna have to

952
00:41:35,670 --> 00:41:38,849
start with is something simpler like I

953
00:41:37,289 --> 00:41:42,420
don't know that I want to try and debug

954
00:41:38,849 --> 00:41:42,750
2000 sprites stuffed into themselves

955
00:41:42,420 --> 00:41:44,940
there

956
00:41:42,750 --> 00:41:47,489
I suppose one thing I could do is start

957
00:41:44,940 --> 00:41:49,769
with something that's in a set of

958
00:41:47,489 --> 00:41:54,329
discrete layers like the like the

959
00:41:49,769 --> 00:41:55,199
cutscenes that might work as well so we

960
00:41:54,329 --> 00:41:56,579
should probably take a look at that

961
00:41:55,199 --> 00:41:58,199
perhaps as our first order of business

962
00:41:56,579 --> 00:42:02,099
because that would only have to ever

963
00:41:58,199 --> 00:42:03,599
sort in Y I'm sorry in Z and we could

964
00:42:02,099 --> 00:42:05,339
verify that that was working properly in

965
00:42:03,599 --> 00:42:07,469
fact I think that's a good I think

966
00:42:05,340 --> 00:42:11,100
that's a good idea so I think I'm gonna

967
00:42:07,469 --> 00:42:14,369
do that I'm gonna do exactly that what I

968
00:42:11,099 --> 00:42:18,059
don't remember is where I actually force

969
00:42:14,369 --> 00:42:25,440
that to happen I think it is in here

970
00:42:18,059 --> 00:42:29,360
somewhere so I should be able to do this

971
00:42:25,440 --> 00:42:29,360
and now I should get

972
00:42:39,710 --> 00:42:47,610
come back here I should get just the

973
00:42:45,630 --> 00:42:50,390
cutscene starting let me make sure that

974
00:42:47,610 --> 00:42:50,390
that's true

975
00:42:58,610 --> 00:43:06,200
yeah okay so now let's start off with

976
00:43:03,289 --> 00:43:09,349
this we should be able to sort of break

977
00:43:06,199 --> 00:43:11,449
in here and see what's going on let's

978
00:43:09,349 --> 00:43:16,639
double check that we kind of have this

979
00:43:11,449 --> 00:43:20,059
sense of these correct so you know is in

980
00:43:16,639 --> 00:43:24,319
front of just by its grammar a is in

981
00:43:20,059 --> 00:43:26,059
front of B so we want to return it if a

982
00:43:24,320 --> 00:43:28,280
is the closer one right so let's just

983
00:43:26,059 --> 00:43:30,409
make sure that that's true if we say to

984
00:43:28,280 --> 00:43:33,110
sort by Z then we want to know that AZ

985
00:43:30,409 --> 00:43:35,029
max is greater than B Z max because a

986
00:43:33,110 --> 00:43:36,890
would be in front that's true and Y

987
00:43:35,030 --> 00:43:38,390
would be the opposite sense so that is

988
00:43:36,889 --> 00:43:39,679
correct so now let's go down here and

989
00:43:38,389 --> 00:43:42,679
make sure that this is in the correct

990
00:43:39,679 --> 00:43:44,690
way too so we do our merge sort here we

991
00:43:42,679 --> 00:43:46,730
say okay we've got our two entries we're

992
00:43:44,690 --> 00:43:48,860
going to compare the first and second

993
00:43:46,730 --> 00:43:51,289
entries in the list we're going to say

994
00:43:48,860 --> 00:43:52,070
if the second entry was actually

995
00:43:51,289 --> 00:43:54,529
supposed to be in front of the first

996
00:43:52,070 --> 00:43:55,940
when we swap them that seems correct to

997
00:43:54,530 --> 00:43:57,800
me right that seems like that's going to

998
00:43:55,940 --> 00:44:00,079
go in the correct order so then we move

999
00:43:57,800 --> 00:44:02,720
down here and we say all right we're

1000
00:44:00,079 --> 00:44:04,159
doing our sort of split merges our two

1001
00:44:02,719 --> 00:44:06,049
halves we're splitting and we're merge

1002
00:44:04,159 --> 00:44:07,819
sorting each of the halves then we have

1003
00:44:06,050 --> 00:44:08,930
to put the the halves back together so

1004
00:44:07,820 --> 00:44:12,050
we start through here and we say all

1005
00:44:08,929 --> 00:44:15,679
right if we're only reading the first

1006
00:44:12,050 --> 00:44:17,720
half then we output it if we're only

1007
00:44:15,679 --> 00:44:20,750
reading the second half then we output

1008
00:44:17,719 --> 00:44:22,459
it right but if we're reading both if

1009
00:44:20,750 --> 00:44:25,070
we're still reading from both what we

1010
00:44:22,460 --> 00:44:26,119
want to know is which one of the two it

1011
00:44:25,070 --> 00:44:28,550
should come first

1012
00:44:26,119 --> 00:44:30,170
so if read half zero should come first

1013
00:44:28,550 --> 00:44:31,430
and we put it in there if read half one

1014
00:44:30,170 --> 00:44:34,760
to come first then we put in in there

1015
00:44:31,429 --> 00:44:38,569
right and so that all looks pretty

1016
00:44:34,760 --> 00:44:41,930
reasonable to me everything there seems

1017
00:44:38,570 --> 00:44:43,880
fine then if we take a look at our is in

1018
00:44:41,929 --> 00:44:45,559
front of like I said that seems

1019
00:44:43,880 --> 00:44:48,500
reasonable as well I think all of that

1020
00:44:45,559 --> 00:44:50,690
looks pretty good in terms of checking

1021
00:44:48,500 --> 00:44:53,480
whether they're both z sprites both of

1022
00:44:50,690 --> 00:44:57,230
the sprites would be Z sprites if they

1023
00:44:53,480 --> 00:44:59,690
had Y bounds which is what would happen

1024
00:44:57,230 --> 00:45:02,030
here right they would both be Z sprites

1025
00:44:59,690 --> 00:45:08,300
if they both have a Wyman and ymax that

1026
00:45:02,030 --> 00:45:09,210
are not the same a includes B if if a is

1027
00:45:08,300 --> 00:45:12,210
min

1028
00:45:09,210 --> 00:45:14,760
and Max basically bound B which is what

1029
00:45:12,210 --> 00:45:16,019
it looks like here and the same is true

1030
00:45:14,760 --> 00:45:18,060
here and we know that we don't reject

1031
00:45:16,019 --> 00:45:20,940
why max because y-min and y-max would be

1032
00:45:18,059 --> 00:45:24,000
equal in the cases we care about because

1033
00:45:20,940 --> 00:45:28,590
both sprites would not be similar there

1034
00:45:24,000 --> 00:45:30,570
now I yeah I think that's about right I

1035
00:45:28,590 --> 00:45:32,370
suppose technically this might be wrong

1036
00:45:30,570 --> 00:45:34,980
in certain cases where I mean that wrong

1037
00:45:32,369 --> 00:45:39,029
but inconsistent in cases where the wise

1038
00:45:34,980 --> 00:45:40,829
were actually equal so it's possible

1039
00:45:39,030 --> 00:45:41,910
that we would want to expand this out

1040
00:45:40,829 --> 00:45:45,690
into something a little bit more

1041
00:45:41,909 --> 00:45:53,609
specific but that should all be fine for

1042
00:45:45,690 --> 00:45:55,950
our basic scenario of of sprites that

1043
00:45:53,610 --> 00:45:57,599
are strictly in Z and so what we should

1044
00:45:55,949 --> 00:45:59,639
be able to do is we should be able to

1045
00:45:57,599 --> 00:46:05,219
take our cutscene scenario and make a

1046
00:45:59,639 --> 00:46:07,739
pretty clear we should be able to get a

1047
00:46:05,219 --> 00:46:10,079
pretty clear understanding of what's

1048
00:46:07,739 --> 00:46:11,609
happening here so let's take a look so

1049
00:46:10,079 --> 00:46:14,130
when we come in and we're about to do

1050
00:46:11,610 --> 00:46:18,329
our merge sort we've got two entries

1051
00:46:14,130 --> 00:46:20,340
that doesn't sound like enough let's run

1052
00:46:18,329 --> 00:46:24,599
a little bit here there should be more

1053
00:46:20,340 --> 00:46:26,370
than two entries there we go so now

1054
00:46:24,599 --> 00:46:32,009
we've got 39 entries honestly that

1055
00:46:26,369 --> 00:46:36,389
sounds like too many but probably a lot

1056
00:46:32,010 --> 00:46:38,640
of those are debug I'm guessing so in

1057
00:46:36,389 --> 00:46:41,849
fact maybe what I'll do temporarily is

1058
00:46:38,639 --> 00:46:48,150
also turn off the debug so inside a

1059
00:46:41,849 --> 00:46:51,630
hand-made basically just for the moment

1060
00:46:48,150 --> 00:46:55,410
I may go ahead and say where we were

1061
00:46:51,630 --> 00:46:57,930
doing our debug out in fact I guess we

1062
00:46:55,409 --> 00:47:01,219
do we have a convenient way to turn

1063
00:46:57,929 --> 00:47:01,219
debug off on and off

1064
00:47:22,179 --> 00:47:27,109
so handmade internal would turn it off I

1065
00:47:25,909 --> 00:47:28,759
don't know if we really want him an

1066
00:47:27,110 --> 00:47:30,170
internal but you know what I guess for

1067
00:47:28,760 --> 00:47:31,730
right now let's go ahead and turn that

1068
00:47:30,170 --> 00:47:33,500
off so I'm gonna go into the build up

1069
00:47:31,730 --> 00:47:34,449
that file looks like we're down to the

1070
00:47:33,500 --> 00:47:36,710
five-minute warning

1071
00:47:34,449 --> 00:47:39,339
although I started a little bit late so

1072
00:47:36,710 --> 00:47:42,400
we actually probably are like 10 minutes

1073
00:47:39,340 --> 00:47:44,900
so if I come through here and say okay

1074
00:47:42,400 --> 00:47:47,420
let's take handmade internal off so that

1075
00:47:44,900 --> 00:47:50,480
I won't get that debug now I should be

1076
00:47:47,420 --> 00:47:53,450
in a situation oh looks like we are

1077
00:47:50,480 --> 00:47:58,780
missing a few of our our undef calls

1078
00:47:53,449 --> 00:47:58,779
basically so debug begin data block

1079
00:48:03,130 --> 00:48:14,269
needs to go away debug and datablock

1080
00:48:06,789 --> 00:48:15,500
used to go away at debug b32 needs to go

1081
00:48:14,269 --> 00:48:17,840
away and then what are these other guys

1082
00:48:15,500 --> 00:48:22,400
here debug game frame and void function

1083
00:48:17,840 --> 00:48:23,780
returning a value I really need to get a

1084
00:48:22,400 --> 00:48:26,900
version of work order that can do the

1085
00:48:23,780 --> 00:48:29,269
jump to error properly I have I got a

1086
00:48:26,900 --> 00:48:31,220
email Alain about that because I haven't

1087
00:48:29,269 --> 00:48:32,690
updated this one but the one I have the

1088
00:48:31,219 --> 00:48:35,989
most recent one I have still doesn't

1089
00:48:32,690 --> 00:48:37,429
actually jump to error the go to the

1090
00:48:35,989 --> 00:48:42,049
scrolling doesn't like quite work right

1091
00:48:37,429 --> 00:48:44,329
on the newer builds alright so let's go

1092
00:48:42,050 --> 00:48:46,130
ahead and take a look here debug game

1093
00:48:44,329 --> 00:48:47,750
frame end void function returning a

1094
00:48:46,130 --> 00:48:50,030
value all right so that just means get

1095
00:48:47,750 --> 00:48:55,039
rid of it

1096
00:48:50,030 --> 00:48:56,840
debug set event recording identifier now

1097
00:48:55,039 --> 00:49:04,639
found okay that's just again another

1098
00:48:56,840 --> 00:49:08,510
case of debug set event recording and

1099
00:49:04,639 --> 00:49:11,629
off we go so now we shouldn't be piling

1100
00:49:08,510 --> 00:49:13,100
anything on to the drawing that involved

1101
00:49:11,630 --> 00:49:16,160
right there's nothing else on the screen

1102
00:49:13,099 --> 00:49:17,750
now so we should just have a set of

1103
00:49:16,159 --> 00:49:20,179
layers and there we go there's the eight

1104
00:49:17,750 --> 00:49:21,769
layers we should just have a nice set of

1105
00:49:20,179 --> 00:49:23,419
layers it's like here's the things that

1106
00:49:21,769 --> 00:49:24,769
we should be sorting and this is the

1107
00:49:23,420 --> 00:49:27,230
simplest possible case we should be able

1108
00:49:24,769 --> 00:49:29,239
to make sure that nothing super stupid

1109
00:49:27,230 --> 00:49:31,400
is happening which may be something

1110
00:49:29,239 --> 00:49:34,368
super stupid is happening

1111
00:49:31,400 --> 00:49:36,889
so let's take a look so in this case you

1112
00:49:34,369 --> 00:49:40,099
can see we've actually got all of the Y

1113
00:49:36,889 --> 00:49:43,159
values are set directly to very specific

1114
00:49:40,099 --> 00:49:45,769
things I'm not sure why those are set

1115
00:49:43,159 --> 00:49:47,568
the way that they're set so I guess the

1116
00:49:45,769 --> 00:49:53,210
first thing I should figure out is why

1117
00:49:47,568 --> 00:49:56,869
are those being set as having those Y

1118
00:49:53,210 --> 00:49:58,760
mean wise either way either way if you

1119
00:49:56,869 --> 00:50:01,460
look at these it should be pretty

1120
00:49:58,760 --> 00:50:05,510
straight forward how these Z's would get

1121
00:50:01,460 --> 00:50:07,970
sorted right I mean that's pretty easy

1122
00:50:05,510 --> 00:50:10,579
to understand because they're all they

1123
00:50:07,969 --> 00:50:11,779
all have Z so they're both everything

1124
00:50:10,579 --> 00:50:13,099
Suman compares can go through the both

1125
00:50:11,780 --> 00:50:15,500
these price paths we're always going to

1126
00:50:13,099 --> 00:50:18,530
be comparing Y max Azim axis so the Z

1127
00:50:15,500 --> 00:50:20,510
maxes should be sorted totally correctly

1128
00:50:18,530 --> 00:50:30,440
and we should be getting the highest Z

1129
00:50:20,510 --> 00:50:31,970
max well that's that's a menial chain we

1130
00:50:30,440 --> 00:50:34,789
don't really spend any time on it so I'm

1131
00:50:31,969 --> 00:50:38,328
okay with that but hi this is a this is

1132
00:50:34,789 --> 00:50:50,058
not a front to back renderer right I

1133
00:50:38,329 --> 00:50:55,910
mean that's kind of obvious put this

1134
00:50:50,059 --> 00:50:59,599
check back in so if you come up here to

1135
00:50:55,909 --> 00:51:01,190
is in front of you can see that we

1136
00:50:59,599 --> 00:51:04,338
return is in front of correctly

1137
00:51:01,190 --> 00:51:06,349
unfortunately when we ask is in front of

1138
00:51:04,338 --> 00:51:09,679
we are then using that to move the

1139
00:51:06,349 --> 00:51:10,670
closer thing up in the list but a thing

1140
00:51:09,679 --> 00:51:15,259
that's in front of other things should

1141
00:51:10,670 --> 00:51:19,990
be drawn later in the list right

1142
00:51:15,260 --> 00:51:23,930
so actually we if if a is in front of B

1143
00:51:19,989 --> 00:51:26,409
then we would swap them right because we

1144
00:51:23,929 --> 00:51:32,318
yes so it's the other way round

1145
00:51:26,409 --> 00:51:32,318
from what we had it in all cases right

1146
00:51:34,650 --> 00:51:41,639
it's actually like that so there you go

1147
00:51:46,949 --> 00:51:52,659
all right so that's more what we were

1148
00:51:50,530 --> 00:51:54,310
trying to do there so now let's take a

1149
00:51:52,659 --> 00:51:56,769
look at where we're at okay so at least

1150
00:51:54,309 --> 00:51:58,869
now we know that our like fundamentals

1151
00:51:56,769 --> 00:52:01,090
are not completely messed up we are

1152
00:51:58,869 --> 00:52:05,279
still able to produce the correct sort

1153
00:52:01,090 --> 00:52:07,420
for a simple set of Z flat sprites so

1154
00:52:05,280 --> 00:52:09,280
that's good again and I just wanted

1155
00:52:07,420 --> 00:52:10,450
because this is relatively tough do you

1156
00:52:09,280 --> 00:52:12,220
think we're doing here I wanted to make

1157
00:52:10,449 --> 00:52:14,169
sure that we weren't totally messed up

1158
00:52:12,219 --> 00:52:16,269
in some other way so we know that that

1159
00:52:14,170 --> 00:52:18,010
appears to be working correctly so now

1160
00:52:16,269 --> 00:52:19,150
let's jump back to the game side of

1161
00:52:18,010 --> 00:52:20,320
things where stuff is going to get a

1162
00:52:19,150 --> 00:52:21,940
little more squirrely and we can start

1163
00:52:20,320 --> 00:52:24,130
to figure out where the rest of the bugs

1164
00:52:21,940 --> 00:52:26,679
are and also like I said we have to kind

1165
00:52:24,130 --> 00:52:28,690
of determine that this sort even it can

1166
00:52:26,679 --> 00:52:30,759
be done as a straightforward sort which

1167
00:52:28,690 --> 00:52:32,349
I don't actually know if it can or not

1168
00:52:30,760 --> 00:52:33,460
so that's you know sort of a separate

1169
00:52:32,349 --> 00:52:35,739
issue that we're gonna have to determine

1170
00:52:33,460 --> 00:52:38,400
as we go forwards all right so I'm going

1171
00:52:35,739 --> 00:52:38,399
to put back in

1172
00:52:45,349 --> 00:52:50,699
or jumping straight to the game without

1173
00:52:47,369 --> 00:52:53,579
the title sequence and now we can take a

1174
00:52:50,699 --> 00:52:56,639
look at what happens here okay so taking

1175
00:52:53,579 --> 00:52:59,939
a look at this what we can at least

1176
00:52:56,639 --> 00:53:01,949
determine so far and this is good a good

1177
00:52:59,938 --> 00:53:04,318
thing for us what we can at least

1178
00:53:01,949 --> 00:53:07,769
determine so far is we never fail our

1179
00:53:04,318 --> 00:53:10,498
check in an obvious linear sweep right

1180
00:53:07,768 --> 00:53:13,318
so that's good we also have a bunch of

1181
00:53:10,498 --> 00:53:17,639
interpenetrating objects here so that's

1182
00:53:13,318 --> 00:53:18,380
not great but yeah so the fact that we

1183
00:53:17,639 --> 00:53:20,548
have a bunch of independent

1184
00:53:18,380 --> 00:53:22,890
interpenetrating objects isn't fabulous

1185
00:53:20,548 --> 00:53:24,119
for testing the sort but that's

1186
00:53:22,889 --> 00:53:27,449
something we can start working on

1187
00:53:24,119 --> 00:53:29,189
tomorrow by actually put it giving it

1188
00:53:27,449 --> 00:53:31,769
some some more realist stuff by fixing

1189
00:53:29,188 --> 00:53:33,449
our sort of layer stuff we we sort of

1190
00:53:31,768 --> 00:53:38,608
did these two things together as part of

1191
00:53:33,449 --> 00:53:41,608
one one go okay so let's check just for

1192
00:53:38,608 --> 00:53:43,768
the sake of argument as well you know

1193
00:53:41,608 --> 00:53:50,458
let's say we didn't do that so let's say

1194
00:53:43,768 --> 00:53:53,038
temporarily that we went and went to

1195
00:53:50,458 --> 00:53:55,678
world mode and when we were outputting

1196
00:53:53,039 --> 00:53:57,599
our entities let's say that we we didn't

1197
00:53:55,679 --> 00:53:58,949
do our truncation stuff that we were

1198
00:53:57,599 --> 00:54:00,630
doing that flattens everything down into

1199
00:53:58,949 --> 00:54:02,130
the plain right I guess that's actually

1200
00:54:00,630 --> 00:54:03,568
I always make this mistake I keep

1201
00:54:02,130 --> 00:54:06,209
forgetting we moved it out to this its

1202
00:54:03,568 --> 00:54:08,009
own entity file so when that's happening

1203
00:54:06,208 --> 00:54:10,739
here right we've got this this notion

1204
00:54:08,009 --> 00:54:14,489
that we're sort of doing our relative

1205
00:54:10,739 --> 00:54:17,969
layer transform thing here and we don't

1206
00:54:14,489 --> 00:54:19,409
actually let's say we don't actually

1207
00:54:17,969 --> 00:54:25,068
want do that so we want to use the

1208
00:54:19,409 --> 00:54:25,068
correct Z here

1209
00:54:27,909 --> 00:54:32,359
so we'll just actually let it draw the

1210
00:54:30,500 --> 00:54:33,949
things in Zi the way that they we're

1211
00:54:32,360 --> 00:54:35,360
gonna draw the things in C just because

1212
00:54:33,949 --> 00:54:40,009
I kind of want to see what it does with

1213
00:54:35,360 --> 00:54:42,260
the sort in that case so let's see so it

1214
00:54:40,010 --> 00:54:44,900
looks like it in that case I feel like

1215
00:54:42,260 --> 00:54:46,970
it's wrong meaning we're not getting the

1216
00:54:44,900 --> 00:54:48,230
sort that I would have expected and the

1217
00:54:46,969 --> 00:54:51,230
reason I say that is because you can

1218
00:54:48,230 --> 00:54:53,840
kind of see that these things I believe

1219
00:54:51,230 --> 00:54:56,539
should be where's my I don't have a

1220
00:54:53,840 --> 00:54:58,640
mouse cursor I guess oh right because

1221
00:54:56,539 --> 00:55:01,190
handmade internal turns off the mouse

1222
00:54:58,639 --> 00:55:03,489
cursor I can turn that back on for the

1223
00:55:01,190 --> 00:55:03,490
moment

1224
00:55:11,838 --> 00:55:18,199
so I believe that all of these right

1225
00:55:15,380 --> 00:55:20,838
these sort of closer up ones I believe

1226
00:55:18,199 --> 00:55:22,818
I'm standing on the further back ones

1227
00:55:20,838 --> 00:55:25,130
and maybe I'm wrong about that and then

1228
00:55:22,818 --> 00:55:26,900
in which case I stand corrected but I

1229
00:55:25,130 --> 00:55:28,789
believe I'm standing on the further back

1230
00:55:26,900 --> 00:55:30,858
ones which means I should not be sorting

1231
00:55:28,789 --> 00:55:32,390
right and you can kind of see like even

1232
00:55:30,858 --> 00:55:35,808
you didn't see that that's definitely

1233
00:55:32,389 --> 00:55:38,449
the case right you can see as I'm sort

1234
00:55:35,809 --> 00:55:40,160
of doing this that those should should

1235
00:55:38,449 --> 00:55:44,389
not be sorting the way they're sorting

1236
00:55:40,159 --> 00:55:46,038
right I should be behind those and you

1237
00:55:44,389 --> 00:55:47,480
know there's a number of reasons why

1238
00:55:46,039 --> 00:55:50,240
that could be but those are what we'll

1239
00:55:47,480 --> 00:55:51,949
start to address tomorrow because we're

1240
00:55:50,239 --> 00:55:54,259
pretty much out of time today so we've

1241
00:55:51,949 --> 00:55:56,000
got everything running properly and

1242
00:55:54,260 --> 00:55:58,849
everything I think is sorting properly

1243
00:55:56,000 --> 00:56:01,068
by the rule but we now have to go see

1244
00:55:58,849 --> 00:56:03,048
are we feeding the rule properly because

1245
00:56:01,068 --> 00:56:04,969
you know we got those janky computations

1246
00:56:03,048 --> 00:56:06,349
in there for like zmax stuff and then

1247
00:56:04,969 --> 00:56:07,669
also we've got to start actually

1248
00:56:06,349 --> 00:56:09,079
outputting these in a little more

1249
00:56:07,670 --> 00:56:13,119
sensible of a fashion so I'm going to go

1250
00:56:09,079 --> 00:56:16,099
ahead and go to the QA and then we'll

1251
00:56:13,119 --> 00:56:17,500
we'll come back to this tomorrow to get

1252
00:56:16,099 --> 00:56:20,980
things sort of working a little bit more

1253
00:56:17,500 --> 00:56:20,980
more correctly I think

1254
00:57:04,360 --> 00:57:09,800
hello Andrew good to see you here thank

1255
00:57:08,059 --> 00:57:11,570
you very much for reading the blog post

1256
00:57:09,800 --> 00:57:13,550
I thought that was a really interesting

1257
00:57:11,570 --> 00:57:16,760
blog post even separate from handmade

1258
00:57:13,550 --> 00:57:19,400
hero because you know I'll be honest I

1259
00:57:16,760 --> 00:57:21,560
guess you know part of it's probably my

1260
00:57:19,400 --> 00:57:26,000
fault because since I don't work on 2d

1261
00:57:21,559 --> 00:57:29,449
games really I I have it like educated

1262
00:57:26,000 --> 00:57:31,789
myself about what people generally do in

1263
00:57:29,449 --> 00:57:32,659
terms of making sprites show up in the

1264
00:57:31,789 --> 00:57:37,849
correct order because it's that

1265
00:57:32,659 --> 00:57:39,859
inherently you know sort of it's it's an

1266
00:57:37,849 --> 00:57:43,429
inherently semantic problem of like we

1267
00:57:39,860 --> 00:57:46,880
you know this isn't real 3d it's it's 2d

1268
00:57:43,429 --> 00:57:49,369
plus you want to fake the depth how do

1269
00:57:46,880 --> 00:57:52,820
you do that right and so I really didn't

1270
00:57:49,369 --> 00:57:56,210
know much about how people have done it

1271
00:57:52,820 --> 00:57:57,410
and I imagine there are you know

1272
00:57:56,210 --> 00:57:59,480
different approaches that people have

1273
00:57:57,409 --> 00:58:00,859
taken in the past and so it was really

1274
00:57:59,480 --> 00:58:02,030
interesting just to read about that I

1275
00:58:00,860 --> 00:58:03,559
would I would be interested in reading

1276
00:58:02,030 --> 00:58:05,360
about how other people are doing it to

1277
00:58:03,559 --> 00:58:07,519
like I think that it would be kind of

1278
00:58:05,360 --> 00:58:09,650
cool to just now that I know it's not

1279
00:58:07,519 --> 00:58:11,119
it's not a completely trivial thing

1280
00:58:09,650 --> 00:58:12,889
right it's not just oh yeah you just

1281
00:58:11,119 --> 00:58:15,259
sort by Y and you're done or something I

1282
00:58:12,889 --> 00:58:16,579
feel like there's probably games out

1283
00:58:15,260 --> 00:58:18,740
there that have done interesting things

1284
00:58:16,579 --> 00:58:20,659
like like the stuff that you were doing

1285
00:58:18,739 --> 00:58:22,549
that I wouldn't have known about and so

1286
00:58:20,659 --> 00:58:23,839
I'm interested in that I feel like it

1287
00:58:22,550 --> 00:58:25,640
would be cool to find out how people are

1288
00:58:23,840 --> 00:58:26,750
doing their sorting so I really enjoyed

1289
00:58:25,639 --> 00:58:28,159
reading that blog post I thought that

1290
00:58:26,750 --> 00:58:29,360
was great and I really liked the

1291
00:58:28,159 --> 00:58:31,909
solution that you were using it seems

1292
00:58:29,360 --> 00:58:34,280
pretty cool and I'm looking forward to

1293
00:58:31,909 --> 00:58:35,929
playing the game too because I think I'm

1294
00:58:34,280 --> 00:58:38,530
played a double dragon like game in a

1295
00:58:35,929 --> 00:58:38,529
long long time

1296
00:58:39,400 --> 00:58:43,369
so you voucher the coordinates used for

1297
00:58:41,690 --> 00:58:46,039
the sort rules are world space right

1298
00:58:43,369 --> 00:58:47,960
with another approach be to sort the

1299
00:58:46,039 --> 00:58:52,309
screen space coordinates from the top of

1300
00:58:47,960 --> 00:58:53,900
the screen down so previously what we

1301
00:58:52,309 --> 00:58:55,549
were doing was sort of sorting the

1302
00:58:53,900 --> 00:58:57,829
previously what we're doing with sorting

1303
00:58:55,550 --> 00:59:00,410
the screen coordinates right and the

1304
00:58:57,829 --> 00:59:02,809
problem with that is that sorting the

1305
00:59:00,409 --> 00:59:05,539
screen coordinates doesn't give us

1306
00:59:02,809 --> 00:59:07,670
information about what to do

1307
00:59:05,539 --> 00:59:09,079
in the cases well I mean it's it's

1308
00:59:07,670 --> 00:59:12,610
pretty obvious why you can't sort the

1309
00:59:09,079 --> 00:59:12,610
suite screen coordinates right like

1310
00:59:14,239 --> 00:59:19,189
so the problem is you know you've got if

1311
00:59:17,809 --> 00:59:21,860
I've got it like if I'm gonna draw like

1312
00:59:19,190 --> 00:59:26,570
a 3d case here so suppose I've got this

1313
00:59:21,860 --> 00:59:29,390
sort of tile in the world like a

1314
00:59:26,570 --> 00:59:31,150
platform or something right and then

1315
00:59:29,389 --> 00:59:33,829
there's something on top of the platform

1316
00:59:31,150 --> 00:59:38,420
when you look at that top down you end

1317
00:59:33,829 --> 00:59:41,929
up with this right and you have no idea

1318
00:59:38,420 --> 00:59:46,159
if the ball was below this thing right

1319
00:59:41,929 --> 00:59:49,069
then it that you know in this case if I

1320
00:59:46,159 --> 00:59:51,139
was to label this a and this B in this

1321
00:59:49,070 --> 00:59:52,820
case B should be drawn first than a

1322
00:59:51,139 --> 00:59:54,650
second so it eclipses it in this case

1323
00:59:52,820 --> 00:59:58,340
the ops it's true but all you're gonna

1324
00:59:54,650 --> 01:00:01,670
see in screen space is that so you have

1325
00:59:58,340 --> 01:00:03,470
no idea right so at the very least you

1326
01:00:01,670 --> 01:00:05,329
would need sort of a screen space

1327
01:00:03,469 --> 01:00:06,529
augmented with Z so maybe when you're

1328
01:00:05,329 --> 01:00:08,869
talking about screen space you mean oh

1329
01:00:06,530 --> 01:00:11,900
well I I mean XY of screen space plus Z

1330
01:00:08,869 --> 01:00:14,269
screen space right so in that case you

1331
01:00:11,900 --> 01:00:16,369
have a similar problem and the similar

1332
01:00:14,269 --> 01:00:19,219
problem that you have there is well now

1333
01:00:16,369 --> 01:00:22,309
we start talking about like okay we've

1334
01:00:19,219 --> 01:00:27,500
got situations where you know you look

1335
01:00:22,309 --> 01:00:28,969
at something that's you know trying to

1336
01:00:27,500 --> 01:00:30,469
think of what the the good example would

1337
01:00:28,969 --> 01:00:33,069
be now you've got something that looks

1338
01:00:30,469 --> 01:00:33,069
like this

1339
01:00:45,690 --> 01:00:50,280
this is not a very good drawing I admit

1340
01:00:48,130 --> 01:00:50,280
that

1341
01:00:58,050 --> 01:01:01,869
all right so now you've got something

1342
01:01:00,880 --> 01:01:03,430
that looks something like this and

1343
01:01:01,869 --> 01:01:04,930
you're viewing it from here right so

1344
01:01:03,429 --> 01:01:07,210
what you end up seeing on the screen is

1345
01:01:04,929 --> 01:01:11,529
you end up seeing something that kind of

1346
01:01:07,210 --> 01:01:13,900
looks like this right depending on how

1347
01:01:11,530 --> 01:01:17,890
high up we're viewing it right and these

1348
01:01:13,900 --> 01:01:20,250
two things overlap well if now we're

1349
01:01:17,889 --> 01:01:24,460
sort of saying well whatever whoever had

1350
01:01:20,250 --> 01:01:27,159
the higher Y sort value or the lower Y

1351
01:01:24,460 --> 01:01:29,139
sort value draws first which we would

1352
01:01:27,159 --> 01:01:31,598
need to do to ensure that this guy drew

1353
01:01:29,139 --> 01:01:33,670
first then we have the problem that well

1354
01:01:31,599 --> 01:01:35,440
people who are standing on top of these

1355
01:01:33,670 --> 01:01:36,700
things or even you know in the case

1356
01:01:35,440 --> 01:01:40,450
where we're talking about like a screen

1357
01:01:36,699 --> 01:01:42,759
space rug right for example in fact that

1358
01:01:40,449 --> 01:01:49,750
may be the better case here like we have

1359
01:01:42,760 --> 01:01:53,440
sort of a a thing that is on top of four

1360
01:01:49,750 --> 01:01:55,480
different tiles and then we've got

1361
01:01:53,440 --> 01:01:56,800
somebody standing on that which is the

1362
01:01:55,480 --> 01:01:59,230
case we were kind of looking at before

1363
01:01:56,800 --> 01:02:00,849
so in this case we have this nasty case

1364
01:01:59,230 --> 01:02:06,280
of like okay when I actually go to look

1365
01:02:00,849 --> 01:02:09,070
at this thing I'm gonna see this sort of

1366
01:02:06,280 --> 01:02:12,160
thing happening here well when I look at

1367
01:02:09,070 --> 01:02:13,780
what's going on this may well be you

1368
01:02:12,159 --> 01:02:15,608
know so the person who's standing on top

1369
01:02:13,780 --> 01:02:18,609
of this rug may well be somewhere like

1370
01:02:15,608 --> 01:02:20,469
in here whereas all of these things may

1371
01:02:18,608 --> 01:02:21,848
be you know kind of behind it or

1372
01:02:20,469 --> 01:02:22,899
whatever or there might even be one of

1373
01:02:21,849 --> 01:02:25,869
them that's kind of sticking up like

1374
01:02:22,900 --> 01:02:27,730
over here right and when I start to try

1375
01:02:25,869 --> 01:02:30,849
and use this as just a sort by why

1376
01:02:27,730 --> 01:02:32,889
obviously isn't gonna work a sort by y&amp;z

1377
01:02:30,849 --> 01:02:35,170
now I have to figure out well which do I

1378
01:02:32,889 --> 01:02:37,088
use in these cases to sort of break the

1379
01:02:35,170 --> 01:02:38,920
tie right what were or rather which

1380
01:02:37,088 --> 01:02:41,139
which am I going to sort by and how

1381
01:02:38,920 --> 01:02:43,059
because I've got y&amp;z now and I don't

1382
01:02:41,139 --> 01:02:45,309
know necessarily which one of which to

1383
01:02:43,059 --> 01:02:46,599
use if i strictly sort by Y I'm gonna

1384
01:02:45,309 --> 01:02:47,710
get one answer if i strictly start by

1385
01:02:46,599 --> 01:02:51,760
Xion getting another answer

1386
01:02:47,710 --> 01:02:54,400
how do i break the tie right or how do I

1387
01:02:51,760 --> 01:02:56,200
know which one to use and as far as I

1388
01:02:54,400 --> 01:02:57,670
could tell from if you go back and watch

1389
01:02:56,199 --> 01:03:00,368
my very

1390
01:02:57,670 --> 01:03:02,710
long ramble through this as far as I can

1391
01:03:00,369 --> 01:03:04,780
tell the only way to really know which

1392
01:03:02,710 --> 01:03:10,298
way to break the tie was to have the

1393
01:03:04,780 --> 01:03:13,269
actual bounds in Y and use them so you

1394
01:03:10,298 --> 01:03:17,980
can't just have Y Z you need like y-min

1395
01:03:13,269 --> 01:03:21,699
and y-max and Z that was as far as I

1396
01:03:17,980 --> 01:03:23,199
could tell but you definitely can't just

1397
01:03:21,699 --> 01:03:26,558
use Y that's for sure

1398
01:03:23,199 --> 01:03:28,539
whether you can use y&amp;z with no Y bounds

1399
01:03:26,559 --> 01:03:32,650
I don't know but I couldn't quite figure

1400
01:03:28,539 --> 01:03:34,210
out a way to do it and again you can see

1401
01:03:32,650 --> 01:03:36,309
me work all the way through it Monday

1402
01:03:34,210 --> 01:03:37,599
and Wednesdays streams were all this so

1403
01:03:36,309 --> 01:03:40,000
you can go watch Mondays and Wednesdays

1404
01:03:37,599 --> 01:03:42,068
and see me work it out and as far as I

1405
01:03:40,000 --> 01:03:44,318
could tell you need this you definitely

1406
01:03:42,068 --> 01:03:46,659
can't sort screen space because screen

1407
01:03:44,318 --> 01:03:47,619
with no Z because there's that doesn't

1408
01:03:46,659 --> 01:03:50,159
give you even remotely enough

1409
01:03:47,619 --> 01:03:50,160
information

1410
01:04:45,500 --> 01:04:52,949
Andrew Russell Nets I have a question

1411
01:04:50,969 --> 01:04:53,969
about your development approach I don't

1412
01:04:52,949 --> 01:04:55,919
think I've ever seen you create a

1413
01:04:53,969 --> 01:04:57,989
separate program or environment to test

1414
01:04:55,920 --> 01:05:00,510
stuff you always seem to work within the

1415
01:04:57,989 --> 01:05:14,389
running game do you ever find this to be

1416
01:05:00,510 --> 01:05:18,570
noisy um so I guess what I would say is

1417
01:05:14,389 --> 01:05:22,679
it depends on the circumstance but I

1418
01:05:18,570 --> 01:05:24,720
usually find that the only times I want

1419
01:05:22,679 --> 01:05:27,509
to be completely outside of the game

1420
01:05:24,719 --> 01:05:29,939
environment is if I'm just doing a

1421
01:05:27,510 --> 01:05:33,270
purely theoretical algorithm thing and I

1422
01:05:29,940 --> 01:05:35,159
have a test bed already for that like I

1423
01:05:33,269 --> 01:05:38,579
used to do that I had a 3d thing called

1424
01:05:35,159 --> 01:05:43,170
math viz that I wrote that I used to use

1425
01:05:38,579 --> 01:05:45,750
for making for doing 3d algorithms when

1426
01:05:43,170 --> 01:05:51,269
I was working on granny at rad and I

1427
01:05:45,750 --> 01:05:56,570
don't know I don't think I've put up the

1428
01:05:51,269 --> 01:05:56,570
screenshots from that since I

1429
01:06:13,480 --> 01:06:36,679
yeah I don't know that I have those up

1430
01:06:30,429 --> 01:06:38,118
here the I had some screenshots of what

1431
01:06:36,679 --> 01:06:42,759
that looked like

1432
01:06:38,119 --> 01:06:45,759
and I could go find them

1433
01:06:42,759 --> 01:06:45,759
certainly

1434
01:07:03,050 --> 01:07:10,460
well point being me I should go grab

1435
01:07:06,630 --> 01:07:10,460
them on a thumb drive I could show you I

1436
01:07:11,510 --> 01:07:17,820
guess what I'd say is I find a lot of

1437
01:07:16,530 --> 01:07:19,710
times that slows me down a little bit

1438
01:07:17,820 --> 01:07:20,789
too much to do but it's definitely been

1439
01:07:19,710 --> 01:07:22,260
something that I have done in the past

1440
01:07:20,789 --> 01:07:23,969
and the way that I approach that is if I

1441
01:07:22,260 --> 01:07:27,450
think I'm going to be doing a lot of

1442
01:07:23,969 --> 01:07:29,368
work on a certain type of algorithm like

1443
01:07:27,449 --> 01:07:31,469
3d algorithms whatever what I do is I

1444
01:07:29,369 --> 01:07:33,090
make a little toolbox and a little

1445
01:07:31,469 --> 01:07:39,049
system for you know playing around with

1446
01:07:33,090 --> 01:07:41,430
stuff that I can use to you know sort of

1447
01:07:39,050 --> 01:07:45,030
prototype things and draw things really

1448
01:07:41,429 --> 01:07:48,139
easily and so I do do that sometimes and

1449
01:07:45,030 --> 01:07:53,660
you know what I thought about I wonder

1450
01:07:48,139 --> 01:07:53,659
if this machine has

1451
01:08:04,199 --> 01:08:13,179
darn oh my got kind of sight about there

1452
01:08:11,980 --> 01:08:16,329
because that that's where it would've

1453
01:08:13,179 --> 01:08:18,849
been I I guess this must have been this

1454
01:08:16,329 --> 01:08:24,519
machine probably got cleaned out at some

1455
01:08:18,850 --> 01:08:27,480
point but like it would have been in my

1456
01:08:24,520 --> 01:08:30,819
old rad game tools source tree and

1457
01:08:27,479 --> 01:08:32,138
unfortunately that's that's gone like it

1458
01:08:30,819 --> 01:08:37,199
doesn't it doesn't come with the granny

1459
01:08:32,139 --> 01:08:37,199
SDK it's just you know it's it's just

1460
01:08:38,698 --> 01:08:45,009
internal development stuff so I don't I

1461
01:08:41,698 --> 01:08:47,408
don't see it here and I guess I guess

1462
01:08:45,009 --> 01:08:52,600
all this stuff is just gone at this

1463
01:08:47,408 --> 01:08:55,149
point yeah so it must it must have

1464
01:08:52,600 --> 01:08:59,380
cleaned out this whole directory and

1465
01:08:55,149 --> 01:09:01,829
then but after having cleaned out the

1466
01:08:59,380 --> 01:09:07,139
whole directory it left all of the

1467
01:09:01,829 --> 01:09:07,139
directories there I guess

1468
01:09:08,759 --> 01:09:19,529
cuz like there nothing on there that I

1469
01:09:14,880 --> 01:09:19,529
don't I do not know

1470
01:09:22,838 --> 01:09:30,818
yeah I I don't know I mean it's like I

1471
01:09:34,210 --> 01:09:38,630
feel like I'm grasping defeat from the

1472
01:09:36,920 --> 01:09:40,039
jaws of victory here like this would

1473
01:09:38,630 --> 01:09:41,239
have been I could actually just run the

1474
01:09:40,039 --> 01:09:43,699
program because it would have been here

1475
01:09:41,238 --> 01:09:48,939
but I don't it does not appear to

1476
01:09:43,699 --> 01:09:54,619
actually exist in any capacity here yeah

1477
01:09:48,939 --> 01:09:56,988
so so much for that but yeah point being

1478
01:09:54,619 --> 01:10:03,010
there there was a programs called

1479
01:09:56,988 --> 01:10:03,009
Malthus and it you know

1480
01:10:17,090 --> 01:10:20,510
and just says i realized i telled i know

1481
01:10:19,100 --> 01:10:22,220
i have seen you do something along these

1482
01:10:20,510 --> 01:10:24,230
lines on witness wednesdays just that's

1483
01:10:22,220 --> 01:10:26,119
nice to meet you yeah I mean another

1484
01:10:24,229 --> 01:10:28,219
thing to remember about handmade hero is

1485
01:10:26,119 --> 01:10:30,079
you know as much I try as much as

1486
01:10:28,220 --> 01:10:32,119
possible to show how actual game

1487
01:10:30,079 --> 01:10:34,699
development works to the extent that's

1488
01:10:32,119 --> 01:10:36,710
like you know I don't prepare for it and

1489
01:10:34,699 --> 01:10:38,000
I don't try to think of the solution

1490
01:10:36,710 --> 01:10:39,619
ahead of time and then just type it out

1491
01:10:38,000 --> 01:10:42,350
right I try to actually like struggle

1492
01:10:39,619 --> 01:10:43,939
with things you know accurately and be

1493
01:10:42,350 --> 01:10:45,740
like okay you know I'm programming this

1494
01:10:43,939 --> 01:10:46,939
just sitting down and if I have to work

1495
01:10:45,739 --> 01:10:50,059
out something I'm gonna work it out on

1496
01:10:46,939 --> 01:10:51,769
the you know whatever uh as much as I

1497
01:10:50,060 --> 01:10:53,780
try to do that there's also just the

1498
01:10:51,770 --> 01:10:56,300
fact that some things I'm just not gonna

1499
01:10:53,779 --> 01:10:58,819
do look I'm not gonna spend you know I

1500
01:10:56,300 --> 01:11:00,920
think the curve fitting the original

1501
01:10:58,819 --> 01:11:06,049
curve fitting algorithm for granny I

1502
01:11:00,920 --> 01:11:09,289
mean I probably spend I don't know 200

1503
01:11:06,050 --> 01:11:11,090
hours working on that thing and so like

1504
01:11:09,289 --> 01:11:13,100
something of that magnitude would have

1505
01:11:11,090 --> 01:11:14,840
taken almost all the time that we've

1506
01:11:13,100 --> 01:11:17,570
spent on hammer here oh just the whole

1507
01:11:14,840 --> 01:11:19,430
thing just on one algorithm and so

1508
01:11:17,569 --> 01:11:21,859
showing how that actually works just

1509
01:11:19,430 --> 01:11:23,840
isn't super feasible right and so he

1510
01:11:21,859 --> 01:11:27,649
made hero isness you know necessarily

1511
01:11:23,840 --> 01:11:29,720
not gonna show me tackling us an ultra

1512
01:11:27,649 --> 01:11:32,059
hard problem because I don't think you

1513
01:11:29,720 --> 01:11:34,789
could like I don't think you could make

1514
01:11:32,060 --> 01:11:38,000
a show where you did that because what

1515
01:11:34,789 --> 01:11:39,409
you'd see is so impossible for you get

1516
01:11:38,000 --> 01:11:40,460
through and also there'd be no talking I

1517
01:11:39,409 --> 01:11:43,750
would have to be thinking the whole time

1518
01:11:40,460 --> 01:11:45,980
so it's like you know so I feel like I

1519
01:11:43,750 --> 01:11:47,840
try to make it a fairly accurate

1520
01:11:45,979 --> 01:11:50,629
representation of what programming is

1521
01:11:47,840 --> 01:11:54,079
like coming up with brand new algorithms

1522
01:11:50,630 --> 01:11:55,819
in hard researchy areas we don't do on

1523
01:11:54,079 --> 01:11:58,340
handmade hero and i don't think you can

1524
01:11:55,819 --> 01:12:00,259
do in the context of that so your

1525
01:11:58,340 --> 01:12:01,940
intuition that i don't seem to be doing

1526
01:12:00,260 --> 01:12:03,949
that as much as maybe you might think i

1527
01:12:01,939 --> 01:12:05,929
would is probably correct in the sense

1528
01:12:03,949 --> 01:12:08,239
that if i was working on some really

1529
01:12:05,930 --> 01:12:09,650
hard problems on handmade hero you would

1530
01:12:08,239 --> 01:12:13,729
have to see me doing something like that

1531
01:12:09,649 --> 01:12:16,099
and probably those would be very long

1532
01:12:13,729 --> 01:12:18,379
silent you know hundreds of hours of me

1533
01:12:16,100 --> 01:12:20,270
sort of like you know whatever and so i

1534
01:12:18,380 --> 01:12:22,400
think that's just kind of the nature of

1535
01:12:20,270 --> 01:12:24,790
what you can and can't do in a series

1536
01:12:22,399 --> 01:12:24,789
like this

1537
01:12:25,670 --> 01:12:33,699
I suspect that's part of it

1538
01:12:47,020 --> 01:12:54,740
yeah I'm sorry you know I don't know if

1539
01:12:49,819 --> 01:12:57,799
I've got let me let me see I might on

1540
01:12:54,739 --> 01:12:59,000
another machine have a copy of Malthus

1541
01:12:57,800 --> 01:13:01,640
still kicking

1542
01:12:59,000 --> 01:13:05,409
I'll go look and see if I do I probably

1543
01:13:01,640 --> 01:13:05,410
don't but give me one second

1544
01:14:26,380 --> 01:14:37,840
so let's see here success so this was

1545
01:14:35,979 --> 01:14:43,389
the program that I used for all of

1546
01:14:37,840 --> 01:14:45,069
graining development and and basically

1547
01:14:43,390 --> 01:14:47,050
the way it worked is it had like this

1548
01:14:45,069 --> 01:14:51,488
sort of primitive UI thing that I

1549
01:14:47,050 --> 01:14:53,739
written and and it's just a very simple

1550
01:14:51,488 --> 01:14:55,929
UI it's it's very similar to the kind of

1551
01:14:53,738 --> 01:14:57,879
approach we took in handmade Hiro but it

1552
01:14:55,930 --> 01:15:00,460
was before it was made a little bit

1553
01:14:57,880 --> 01:15:02,949
before I kind of got immediate mode UI

1554
01:15:00,460 --> 01:15:07,000
so it was a little bit like a half way

1555
01:15:02,949 --> 01:15:10,359
thing but you know it's got sort of

1556
01:15:07,000 --> 01:15:12,488
these like pretty simple sort of

1557
01:15:10,359 --> 01:15:13,929
draggable slider things that you can

1558
01:15:12,488 --> 01:15:17,079
throw in there to kind of edit things

1559
01:15:13,930 --> 01:15:18,789
quickly and then what you would do is it

1560
01:15:17,079 --> 01:15:21,039
had this concept that you could like

1561
01:15:18,789 --> 01:15:23,260
just drop in visualizations that you

1562
01:15:21,039 --> 01:15:25,029
wanted and I don't know how many there

1563
01:15:23,260 --> 01:15:26,800
were there probably 10 or 12 or whatever

1564
01:15:25,029 --> 01:15:28,599
and I just I just zero some out when I

1565
01:15:26,800 --> 01:15:30,010
didn't when I was done with them so

1566
01:15:28,600 --> 01:15:31,390
they're not all in here but you know you

1567
01:15:30,010 --> 01:15:33,190
could compile in a bunch at the same

1568
01:15:31,390 --> 01:15:35,050
time if you needed to and then you could

1569
01:15:33,189 --> 01:15:36,460
just basically click on them and when

1570
01:15:35,050 --> 01:15:38,350
you clicked on them you would switch to

1571
01:15:36,460 --> 01:15:42,520
that visualization you can see me sort

1572
01:15:38,350 --> 01:15:43,720
of doing it here and so it had a bunch

1573
01:15:42,520 --> 01:15:45,220
of tools in it like you could draw an

1574
01:15:43,720 --> 01:15:47,050
arrow from one place to another you

1575
01:15:45,220 --> 01:15:49,390
could draw like a move manipulator so

1576
01:15:47,050 --> 01:15:52,869
this is like a you know kind of like the

1577
01:15:49,390 --> 01:15:56,800
kind on the witness' right and you can

1578
01:15:52,869 --> 01:15:58,479
see here this was in fact some of you

1579
01:15:56,800 --> 01:16:00,400
may be familiar with that little thing

1580
01:15:58,479 --> 01:16:03,039
that thing I posted which is like here's

1581
01:16:00,399 --> 01:16:06,189
how you solve gjk really efficiently and

1582
01:16:03,039 --> 01:16:07,600
without all the really stupid math that

1583
01:16:06,189 --> 01:16:09,369
I think a lot of people do who don't

1584
01:16:07,600 --> 01:16:12,789
really know how the actual algorithm

1585
01:16:09,369 --> 01:16:16,869
works and this was the actual way that I

1586
01:16:12,789 --> 01:16:19,300
figured that out right so here is here

1587
01:16:16,869 --> 01:16:21,729
is the tetrahedral case and so you

1588
01:16:19,300 --> 01:16:23,949
imagine that the gjk has just taken a

1589
01:16:21,729 --> 01:16:26,409
step in this direction and it found this

1590
01:16:23,949 --> 01:16:28,689
as the maximal point and you can see

1591
01:16:26,409 --> 01:16:31,449
here that I'm highlighting the three

1592
01:16:28,689 --> 01:16:32,649
points that I believe make up the

1593
01:16:31,449 --> 01:16:34,779
correct

1594
01:16:32,649 --> 01:16:37,689
simplex for the next step which would be

1595
01:16:34,779 --> 01:16:39,219
the triangle ABC and you can see that

1596
01:16:37,689 --> 01:16:40,779
I've like labeled them the way that I

1597
01:16:39,219 --> 01:16:43,000
would have labeled them probably in the

1598
01:16:40,779 --> 01:16:46,300
algorithm as well and then what I would

1599
01:16:43,000 --> 01:16:47,889
do here right is you can see how I would

1600
01:16:46,300 --> 01:16:50,920
start to make sure that my code was

1601
01:16:47,889 --> 01:16:52,868
working is I can drag the values and

1602
01:16:50,920 --> 01:16:57,029
make sure that they actually switch at

1603
01:16:52,868 --> 01:16:59,319
the times that they should switch right

1604
01:16:57,029 --> 01:17:01,539
does that make sense hopefully that

1605
01:16:59,319 --> 01:17:03,340
makes some sense so you can see that I'm

1606
01:17:01,539 --> 01:17:05,560
like going like okay yeah that case is

1607
01:17:03,340 --> 01:17:07,389
pretty solid here well actually I guess

1608
01:17:05,560 --> 01:17:10,900
I got to see this up right case so there

1609
01:17:07,389 --> 01:17:13,029
you go right so I can see like okay so

1610
01:17:10,899 --> 01:17:14,888
it's on it's it's thinking that this

1611
01:17:13,029 --> 01:17:16,559
edge is the closest now and that seems

1612
01:17:14,889 --> 01:17:19,690
correct but as soon as I move this up

1613
01:17:16,560 --> 01:17:20,980
till it's or I guess I should say til I

1614
01:17:19,689 --> 01:17:22,419
move this up so that it's actually this

1615
01:17:20,979 --> 01:17:24,399
triangle highlight so I should be able

1616
01:17:22,420 --> 01:17:25,359
to see that you know whatever that kind

1617
01:17:24,399 --> 01:17:26,829
of thing

1618
01:17:25,359 --> 01:17:27,819
and that's how I can play around with

1619
01:17:26,829 --> 01:17:31,779
those and kind of see what's going on

1620
01:17:27,819 --> 01:17:32,889
now in this visualization I'm afraid I

1621
01:17:31,779 --> 01:17:34,689
can't probably much down because I don't

1622
01:17:32,889 --> 01:17:37,029
think I remember what the heck this

1623
01:17:34,689 --> 01:17:39,729
thing was I'll be I'll be honest with

1624
01:17:37,029 --> 01:17:41,829
you it's some kind of a culling thing

1625
01:17:39,729 --> 01:17:43,809
you can see it's must be a spatial

1626
01:17:41,829 --> 01:17:45,908
partition because it's kind of and there

1627
01:17:43,810 --> 01:17:47,739
were usually keys that did stuff right

1628
01:17:45,908 --> 01:17:49,868
and I don't know what those keys are in

1629
01:17:47,738 --> 01:17:54,988
this visualization so not much I can

1630
01:17:49,868 --> 01:17:57,158
really do with that one here's an AABB

1631
01:17:54,988 --> 01:17:59,500
so access aligned bounding box

1632
01:17:57,158 --> 01:18:04,750
visualization of some kind this looks

1633
01:17:59,500 --> 01:18:09,760
like me testing the this looks like I'm

1634
01:18:04,750 --> 01:18:13,000
testing the Minkowski sum of triangle

1635
01:18:09,760 --> 01:18:15,520
right like with a with an axis aligned

1636
01:18:13,000 --> 01:18:19,149
bounding box because that's what that

1637
01:18:15,520 --> 01:18:22,449
looks like right actually I should say

1638
01:18:19,149 --> 01:18:23,589
Minkowski difference probably right and

1639
01:18:22,448 --> 01:18:24,879
the reason I probably doing that is

1640
01:18:23,590 --> 01:18:26,889
because like this was clearly compiled

1641
01:18:24,880 --> 01:18:28,810
at a time when I was working on gjk and

1642
01:18:26,889 --> 01:18:30,550
so you know it's it's not surprising

1643
01:18:28,810 --> 01:18:32,289
that's like okay I've got my axis

1644
01:18:30,550 --> 01:18:33,849
aligned bounding box and now we're going

1645
01:18:32,289 --> 01:18:35,529
to talk about a case where I'm colliding

1646
01:18:33,849 --> 01:18:37,029
with something so I want the axis

1647
01:18:35,529 --> 01:18:39,009
aligned bounding box too you know

1648
01:18:37,029 --> 01:18:41,408
overlap the triangle or whatever you can

1649
01:18:39,010 --> 01:18:43,449
see that I've I've colored it purple

1650
01:18:41,408 --> 01:18:46,538
when I believe it to be enclosing the

1651
01:18:43,448 --> 01:18:48,518
origin and you can see here

1652
01:18:46,538 --> 01:18:52,118
so this is like a visualization in that

1653
01:18:48,519 --> 01:18:57,280
sense of the minkowski you know I don't

1654
01:18:52,118 --> 01:18:58,929
remember how I pan there we go so you

1655
01:18:57,279 --> 01:19:00,668
can see that this is a visualization of

1656
01:18:58,929 --> 01:19:03,458
the Minkowski difference in this case

1657
01:19:00,668 --> 01:19:06,099
it's taking the Minkowski subtraction

1658
01:19:03,458 --> 01:19:08,319
right of our Bukowski difference of the

1659
01:19:06,099 --> 01:19:10,300
triangle and the axial line bounding box

1660
01:19:08,319 --> 01:19:13,988
and then it's looking to say well does

1661
01:19:10,300 --> 01:19:15,820
the convex hull of this thing enclose

1662
01:19:13,988 --> 01:19:17,379
the origin week because we're humans can

1663
01:19:15,819 --> 01:19:18,368
see pretty clearly that it would right

1664
01:19:17,380 --> 01:19:21,010
if you took the comments all these

1665
01:19:18,368 --> 01:19:22,630
points but that's exactly what gjk

1666
01:19:21,010 --> 01:19:24,039
purports to do right and so you can

1667
01:19:22,630 --> 01:19:27,788
imagine why I was wanting to look at

1668
01:19:24,038 --> 01:19:29,198
that so there you go now similar like I

1669
01:19:27,788 --> 01:19:30,698
said you know these sliders were all on

1670
01:19:29,198 --> 01:19:33,009
some things you can see that in this

1671
01:19:30,698 --> 01:19:35,348
case we've got a what is that like a Y

1672
01:19:33,010 --> 01:19:36,729
plane there I guess so

1673
01:19:35,349 --> 01:19:39,550
you know I think if I tweak this yeah

1674
01:19:36,729 --> 01:19:42,489
you can see it kind of does some some

1675
01:19:39,550 --> 01:19:44,649
changes too like what the what the VIS

1676
01:19:42,488 --> 01:19:46,208
is showing so you could tweak those out

1677
01:19:44,649 --> 01:19:47,679
like maybe I don't want to see that you

1678
01:19:46,208 --> 01:19:49,418
know maybe I don't want the grid in

1679
01:19:47,679 --> 01:19:51,038
there or whatever and so you know those

1680
01:19:49,418 --> 01:19:52,599
were just ways of kind of tuning the VIS

1681
01:19:51,038 --> 01:19:54,248
and then if you take a look at these

1682
01:19:52,599 --> 01:19:58,479
things you can see that there's you know

1683
01:19:54,248 --> 01:20:00,248
whatever they were each of the the

1684
01:19:58,479 --> 01:20:01,809
visualizations itself you could sort of

1685
01:20:00,248 --> 01:20:05,559
throw in you know little things that

1686
01:20:01,809 --> 01:20:07,719
that would adjust what was going on I

1687
01:20:05,559 --> 01:20:11,619
don't know what pincushion length was

1688
01:20:07,719 --> 01:20:12,368
meant to do I can't imagine what that

1689
01:20:11,618 --> 01:20:18,958
was meant to do

1690
01:20:12,368 --> 01:20:21,188
pin cushion is that actually is that

1691
01:20:18,958 --> 01:20:22,630
changing anything obvious it might have

1692
01:20:21,189 --> 01:20:23,889
been something that I got rid of but I

1693
01:20:22,630 --> 01:20:25,599
don't see anything changing so I don't

1694
01:20:23,889 --> 01:20:26,679
know what that was meant to do for annoy

1695
01:20:25,599 --> 01:20:27,760
length doesn't look like doesn't

1696
01:20:26,679 --> 01:20:29,979
anything air so I don't know what those

1697
01:20:27,760 --> 01:20:32,260
are meant to do there at all these

1698
01:20:29,979 --> 01:20:34,179
points are just readouts of the

1699
01:20:32,260 --> 01:20:35,498
manipulators so if I was trying to bug

1700
01:20:34,179 --> 01:20:38,380
something you know I might want to see

1701
01:20:35,498 --> 01:20:40,208
that obviously and all that stuff I

1702
01:20:38,380 --> 01:20:45,819
think this supports the same stuff that

1703
01:20:40,208 --> 01:20:47,948
we support in right in in handmade hero

1704
01:20:45,819 --> 01:20:49,148
for drag-and-drop so you can do crap

1705
01:20:47,948 --> 01:20:51,098
like that I don't know that that's very

1706
01:20:49,149 --> 01:20:53,169
interesting though so yeah so when

1707
01:20:51,099 --> 01:20:57,578
culling I don't know what this one was

1708
01:20:53,168 --> 01:20:59,828
supposed to do I suspect so what I'm

1709
01:20:57,578 --> 01:21:01,988
guessing and I don't know for sure

1710
01:20:59,828 --> 01:21:04,029
but what I'm guessing is that what was

1711
01:21:01,988 --> 01:21:06,158
supposed to happen here was there's

1712
01:21:04,029 --> 01:21:08,378
probably supposed to be a data file that

1713
01:21:06,158 --> 01:21:10,118
this would have loaded and it would have

1714
01:21:08,378 --> 01:21:12,608
told us a bunch of stuff about this

1715
01:21:10,118 --> 01:21:15,368
right so we would have loaded something

1716
01:21:12,609 --> 01:21:16,539
in and it would have shown us like a you

1717
01:21:15,368 --> 01:21:17,828
know there would have been a mesh that

1718
01:21:16,538 --> 01:21:19,569
would have gone with it and so I suspect

1719
01:21:17,828 --> 01:21:25,058
the reason that that one isn't doing

1720
01:21:19,569 --> 01:21:27,368
anything is because of that so hopefully

1721
01:21:25,059 --> 01:21:29,050
that makes some sense so again you know

1722
01:21:27,368 --> 01:21:30,398
that's just like a simple test bed and I

1723
01:21:29,050 --> 01:21:32,918
would just always throw things into that

1724
01:21:30,399 --> 01:21:36,609
test bed I had like the curve fitting

1725
01:21:32,918 --> 01:21:40,148
stuff in there at one point I had yeah -

1726
01:21:36,609 --> 01:21:42,399
diva stuff in there I had a post based

1727
01:21:40,149 --> 01:21:43,479
information one in there just lots and

1728
01:21:42,399 --> 01:21:47,079
lots of stuff and that's where I would

1729
01:21:43,479 --> 01:21:51,070
always prototype things so hopefully

1730
01:21:47,078 --> 01:21:53,219
that answers hopefully that answers that

1731
01:21:51,069 --> 01:21:57,389
question a little more cleanly for you

1732
01:21:53,219 --> 01:21:57,389
in practice

1733
01:22:14,840 --> 01:22:22,310
all right I don't know what's oh and

1734
01:22:19,159 --> 01:22:23,930
here's the okay so now that my head has

1735
01:22:22,310 --> 01:22:25,910
disappeared because we're out of time as

1736
01:22:23,930 --> 01:22:28,159
well I realized this probably was also

1737
01:22:25,909 --> 01:22:32,630
showing an inset render probably that's

1738
01:22:28,159 --> 01:22:35,119
what that was doing yeah anyway yep

1739
01:22:32,630 --> 01:22:36,590
there you go so that was math vis and

1740
01:22:35,119 --> 01:22:38,239
like I said that was used for basically

1741
01:22:36,590 --> 01:22:39,470
all of the algorithms in granny at some

1742
01:22:38,239 --> 01:22:41,359
point we're probably you know if they

1743
01:22:39,470 --> 01:22:46,180
were non-trivial they were probably

1744
01:22:41,359 --> 01:22:46,179
prototyped in math days at some point so

1745
01:22:46,869 --> 01:22:55,039
yeah so that's it there we go I'm

1746
01:22:51,020 --> 01:23:00,440
probably gonna wrap up now but but

1747
01:22:55,039 --> 01:23:01,640
that's that's how that worked Andrew

1748
01:23:00,439 --> 01:23:04,429
whistled that was really awesome to see

1749
01:23:01,640 --> 01:23:05,900
thanks no problem again thanks for for

1750
01:23:04,430 --> 01:23:08,570
writing that blog post I really enjoyed

1751
01:23:05,899 --> 01:23:09,799
reading that and I think a lot of people

1752
01:23:08,569 --> 01:23:12,130
on him I hear were pretty sure to see

1753
01:23:09,800 --> 01:23:15,320
that as well so I think that was that

1754
01:23:12,130 --> 01:23:16,970
was a really great thing if you if you

1755
01:23:15,319 --> 01:23:18,739
have any more blog posts like that that

1756
01:23:16,970 --> 01:23:21,710
you happen to write up about interesting

1757
01:23:18,739 --> 01:23:24,949
2d stuff you're doing on on RC are you

1758
01:23:21,710 --> 01:23:26,210
that would be great I'd love to tweet

1759
01:23:24,949 --> 01:23:29,329
those out to everyone so that I could

1760
01:23:26,210 --> 01:23:36,470
check them out all righty

1761
01:23:29,329 --> 01:23:44,269
that's it is it for today let's it's

1762
01:23:36,470 --> 01:23:45,409
closing on up all right thanks everyone

1763
01:23:44,270 --> 01:23:47,030
for joining us for another episode of

1764
01:23:45,409 --> 01:23:49,880
hand made here also a pleasure coding

1765
01:23:47,029 --> 01:23:53,149
with us always we are almost you know

1766
01:23:49,880 --> 01:23:54,440
we're we're struggling along like with

1767
01:23:53,149 --> 01:23:56,299
the sorting I think we're getting a

1768
01:23:54,439 --> 01:23:58,099
little more under control but kind of

1769
01:23:56,300 --> 01:24:00,890
happy because as soon as we finish this

1770
01:23:58,100 --> 01:24:03,050
sort of Z stuff that kind of puts the

1771
01:24:00,890 --> 01:24:04,730
renderer to bed structurally in a way

1772
01:24:03,050 --> 01:24:06,860
that I'm pretty happy with because it

1773
01:24:04,729 --> 01:24:09,319
means we don't have to think about the Z

1774
01:24:06,859 --> 01:24:10,849
anymore which I wasn't liking we never

1775
01:24:09,319 --> 01:24:12,109
really got it in a place where I was

1776
01:24:10,850 --> 01:24:14,210
happy with it so I think this will

1777
01:24:12,109 --> 01:24:16,099
finally turn the crank for us to the

1778
01:24:14,210 --> 01:24:18,170
place where it's like okay now I'm where

1779
01:24:16,100 --> 01:24:22,400
I'm a little happier with the way that

1780
01:24:18,170 --> 01:24:23,869
we're processing the Z so we'll keep at

1781
01:24:22,399 --> 01:24:25,399
it we'll do it again tomorrow and then I

1782
01:24:23,869 --> 01:24:26,840
think next week we might you know if

1783
01:24:25,399 --> 01:24:27,170
we're lucky next week will be the the

1784
01:24:26,840 --> 01:24:28,909
week

1785
01:24:27,170 --> 01:24:30,440
we can finally finish up the sort of RZ

1786
01:24:28,909 --> 01:24:33,649
conceptualization if we're lucky you

1787
01:24:30,439 --> 01:24:34,639
never know until then if you want to

1788
01:24:33,649 --> 01:24:35,779
play around the source code at home

1789
01:24:34,640 --> 01:24:37,190
obviously you can always peer to the

1790
01:24:35,779 --> 01:24:38,059
game on hand me hear it or it comes to

1791
01:24:37,189 --> 01:24:39,979
the source code you don't play around

1792
01:24:38,060 --> 01:24:41,570
with it we also have a forum site you

1793
01:24:39,979 --> 01:24:42,769
can go to ask questions a patreon page

1794
01:24:41,569 --> 01:24:44,329
if you want support the video series a

1795
01:24:42,770 --> 01:24:46,010
schedule bot if you want to know when

1796
01:24:44,329 --> 01:24:48,890
we're live and a past episode guide if

1797
01:24:46,010 --> 01:24:52,730
you're trying to catch up on old stuff I

1798
01:24:48,890 --> 01:24:55,760
will be back here tomorrow same time I

1799
01:24:52,729 --> 01:24:58,009
think 5 p.m. it's 5 p.m. Pacific

1800
01:24:55,760 --> 01:25:00,440
Daylight Time for the last stream of the

1801
01:24:58,010 --> 01:25:01,610
week hope to see you there until then

1802
01:25:00,439 --> 01:25:02,269
have fun programming and I'll see you

1803
01:25:01,609 --> 01:25:05,049
guys on the Internet

1804
01:25:02,270 --> 01:25:05,050
take you use everyone

