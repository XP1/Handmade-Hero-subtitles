1
00:00:00,269 --> 00:00:04,740
there we go so hello everyone welcome to

2
00:00:03,569 --> 00:00:07,169
handmade hero

3
00:00:04,740 --> 00:00:11,309
the show where we coat an entire game

4
00:00:07,169 --> 00:00:13,859
from scratch live on twitch no engine no

5
00:00:11,308 --> 00:00:16,079
libraries just straight-up every last

6
00:00:13,859 --> 00:00:17,368
little bit we code ourselves both our

7
00:00:16,079 --> 00:00:19,198
educational purposes and just because

8
00:00:17,368 --> 00:00:20,969
it's fun and because it's just kind of

9
00:00:19,199 --> 00:00:22,920
cool sometimes one of the things that's

10
00:00:20,969 --> 00:00:24,660
true and we kind of saw this happen with

11
00:00:22,920 --> 00:00:28,140
the with the looped live code editing

12
00:00:24,660 --> 00:00:29,879
that we did earlier and you know I will

13
00:00:28,140 --> 00:00:30,899
see couple more things like that when

14
00:00:29,879 --> 00:00:32,640
you actually write everything from

15
00:00:30,899 --> 00:00:33,899
scratch you also tend to find places

16
00:00:32,640 --> 00:00:35,039
where you can do things better than

17
00:00:33,899 --> 00:00:37,230
people have done them before and that's

18
00:00:35,039 --> 00:00:39,539
kind of compelling too if you never get

19
00:00:37,229 --> 00:00:41,578
down there and start writing the stuff

20
00:00:39,539 --> 00:00:44,339
that you kind of use in an engine or use

21
00:00:41,579 --> 00:00:45,480
in libraries you don't ever find the

22
00:00:44,340 --> 00:00:47,399
ways to do it better than what they do

23
00:00:45,479 --> 00:00:49,019
and I always like trying to find better

24
00:00:47,399 --> 00:00:50,609
ways to do things because I think that's

25
00:00:49,020 --> 00:00:51,660
kind of the most interesting thing about

26
00:00:50,609 --> 00:00:53,820
programming it's kind of coming up with

27
00:00:51,659 --> 00:00:56,729
new ways to do stuff that people haven't

28
00:00:53,820 --> 00:00:58,140
done before so since we're starting to

29
00:00:56,729 --> 00:01:00,089
late let's jump right into it if you

30
00:00:58,140 --> 00:01:01,230
have pre-ordered the game you can

31
00:01:00,090 --> 00:01:02,940
download the source code you should have

32
00:01:01,229 --> 00:01:05,609
got a link in your email and that link

33
00:01:02,939 --> 00:01:08,129
has a zip file that you can download and

34
00:01:05,609 --> 00:01:11,299
we are here if I'm not mistaken on day

35
00:01:08,129 --> 00:01:13,859
47 I believe that's correct

36
00:01:11,299 --> 00:01:15,930
47 let's double check that's true where

37
00:01:13,859 --> 00:01:19,049
are we I don't even know I don't even

38
00:01:15,930 --> 00:01:23,100
know anymore yes we're on day 47 so if

39
00:01:19,049 --> 00:01:24,810
you unzip this the zip file for day 46

40
00:01:23,099 --> 00:01:27,059
then that is a source code that I am

41
00:01:24,810 --> 00:01:30,359
starting with here on day 47 and you

42
00:01:27,060 --> 00:01:33,629
will be exactly where I am right now now

43
00:01:30,359 --> 00:01:35,700
if you remember correctly yesterday we

44
00:01:33,629 --> 00:01:38,459
just took a little bit of time to fix

45
00:01:35,700 --> 00:01:40,049
well a bug but basically in fixing that

46
00:01:38,459 --> 00:01:43,199
bug we decided to kind of add a feature

47
00:01:40,049 --> 00:01:45,509
which is multiple people controlling

48
00:01:43,200 --> 00:01:47,879
multiple entities on the screen and so

49
00:01:45,509 --> 00:01:50,310
we basically had the ability for people

50
00:01:47,879 --> 00:01:52,078
to kind of drop in if I have a game I

51
00:01:50,310 --> 00:01:56,280
got a gamepad here I can add another guy

52
00:01:52,078 --> 00:01:59,519
right and and he's there hanging out now

53
00:01:56,280 --> 00:02:02,700
we started basically pulling out the

54
00:01:59,519 --> 00:02:03,599
code for for the sprite control for that

55
00:02:02,700 --> 00:02:06,390
hero character

56
00:02:03,599 --> 00:02:08,848
into its own function and he is kind of

57
00:02:06,390 --> 00:02:11,400
he's kind of doing his thing right but

58
00:02:08,848 --> 00:02:13,109
what we had interrupted to do that

59
00:02:11,400 --> 00:02:14,129
yesterday because I want to take care of

60
00:02:13,110 --> 00:02:15,930
that right

61
00:02:14,128 --> 00:02:18,598
what we interrupted is we interrupted

62
00:02:15,930 --> 00:02:19,830
fixing our walls sticking problem which

63
00:02:18,598 --> 00:02:22,679
we had discussed and we were in the

64
00:02:19,830 --> 00:02:23,790
process of writing code for now I want

65
00:02:22,680 --> 00:02:25,379
to talk about that a little bit but one

66
00:02:23,789 --> 00:02:27,628
thing I did want to do too is while

67
00:02:25,378 --> 00:02:29,609
we're at it at the beginning of the

68
00:02:27,628 --> 00:02:32,128
stream here I want to clean up one more

69
00:02:29,610 --> 00:02:34,890
thing because now that we actually have

70
00:02:32,128 --> 00:02:37,649
the the you know now that we actually

71
00:02:34,889 --> 00:02:40,018
have multiple little heroes on here we

72
00:02:37,650 --> 00:02:42,030
and we're supporting the analog stick

73
00:02:40,019 --> 00:02:43,680
now I want to go in there and deal with

74
00:02:42,030 --> 00:02:46,769
some stuff that we didn't deal with on

75
00:02:43,680 --> 00:02:51,060
the analog stick in terms of the motion

76
00:02:46,769 --> 00:02:53,610
of the actual player so just quickly if

77
00:02:51,060 --> 00:02:57,810
you recall we had not really learned

78
00:02:53,610 --> 00:03:05,569
vectors yet when we first visited see

79
00:02:57,810 --> 00:03:08,449
here when we first visited this code

80
00:03:05,568 --> 00:03:11,310
right here so what we were doing

81
00:03:08,449 --> 00:03:14,369
originally is we basically just did a

82
00:03:11,310 --> 00:03:19,049
little hack which said that if both of

83
00:03:14,370 --> 00:03:21,900
your if both of you were when when the

84
00:03:19,049 --> 00:03:23,400
user is controlling the hero we had just

85
00:03:21,900 --> 00:03:25,319
hacked into things so that when he tries

86
00:03:23,400 --> 00:03:26,969
to move diagonally he wouldn't move

87
00:03:25,318 --> 00:03:28,679
faster than he moved when he was moving

88
00:03:26,969 --> 00:03:30,269
in cardinal directions right and this is

89
00:03:28,680 --> 00:03:34,819
something that we did before we learned

90
00:03:30,269 --> 00:03:38,700
vectors so basically we had a situation

91
00:03:34,818 --> 00:03:40,679
where we had something that looks like

92
00:03:38,699 --> 00:03:42,509
this we have him moving in this

93
00:03:40,680 --> 00:03:45,480
direction and we would set this to be

94
00:03:42,509 --> 00:03:48,090
one Y and 0 X so this is the vector 0 1

95
00:03:45,479 --> 00:03:49,798
right or we would be moving this way and

96
00:03:48,090 --> 00:03:51,479
this would be the vector 1 0 or or we

97
00:03:49,799 --> 00:03:53,819
would moving this way up sorry that's

98
00:03:51,479 --> 00:03:55,259
actually negative 1 and that's 0 1

99
00:03:53,818 --> 00:03:59,458
because remember Y goes up that's

100
00:03:55,259 --> 00:04:01,078
positive x positive Y and and this is

101
00:03:59,459 --> 00:04:03,598
negative 1 right these are the vectors

102
00:04:01,079 --> 00:04:04,950
that the d-pad could be creating by

103
00:04:03,598 --> 00:04:06,959
pushing in the cardinal directions but

104
00:04:04,949 --> 00:04:08,668
when you push in two directions at once

105
00:04:06,959 --> 00:04:11,669
we were ending up the vector like 1 1

106
00:04:08,669 --> 00:04:14,880
right which is longer if you remember by

107
00:04:11,669 --> 00:04:15,840
root 2 we went through all this so jump

108
00:04:14,879 --> 00:04:16,560
back to the is if you're not sure I'm

109
00:04:15,840 --> 00:04:18,509
talking about I'm not going to go over

110
00:04:16,560 --> 00:04:20,639
all again today but we would basically

111
00:04:18,509 --> 00:04:23,939
end up with this and that's moving

112
00:04:20,639 --> 00:04:26,980
faster than either of these its its root

113
00:04:23,939 --> 00:04:28,660
2 long instead of one long right

114
00:04:26,980 --> 00:04:30,160
so what we decided to do is we decided

115
00:04:28,660 --> 00:04:31,780
to solve you know we actually solved

116
00:04:30,160 --> 00:04:33,670
Pythagorean theorem to figure out how

117
00:04:31,779 --> 00:04:35,500
long it should be so that would be the

118
00:04:33,670 --> 00:04:38,590
same length it would still be one long

119
00:04:35,500 --> 00:04:41,800
but just in that direction right but now

120
00:04:38,589 --> 00:04:44,469
we have a different problem if the

121
00:04:41,800 --> 00:04:47,290
analog stick is being used then really

122
00:04:44,470 --> 00:04:49,390
inside this unit circle right you could

123
00:04:47,290 --> 00:04:51,069
imagine the analog stick pushing in any

124
00:04:49,389 --> 00:04:53,620
direction and it can be pushing

125
00:04:51,069 --> 00:04:56,529
proportionally so it doesn't have to be

126
00:04:53,620 --> 00:04:57,939
just one of these Cardinal one of these

127
00:04:56,529 --> 00:05:01,389
carbon directions or the diagonal right

128
00:04:57,939 --> 00:05:03,969
so all we really want to do is we want

129
00:05:01,389 --> 00:05:05,439
to make sure that that vector that comes

130
00:05:03,970 --> 00:05:07,480
back to the analog stick we just want to

131
00:05:05,439 --> 00:05:10,149
use that as his acceleration directly

132
00:05:07,480 --> 00:05:13,569
unless for some reason the value we get

133
00:05:10,149 --> 00:05:16,029
back tries to exceed the length of one

134
00:05:13,569 --> 00:05:17,529
right tries to exceed the length of one

135
00:05:16,029 --> 00:05:19,179
so that it would be accelerating beyond

136
00:05:17,529 --> 00:05:22,119
the maximum acceleration that we wanted

137
00:05:19,180 --> 00:05:23,379
it to have right and well we don't

138
00:05:22,120 --> 00:05:24,670
necessarily know if that will ever

139
00:05:23,379 --> 00:05:26,800
happen because it could be that the

140
00:05:24,670 --> 00:05:28,390
analog stick always returns values that

141
00:05:26,800 --> 00:05:30,400
are perfectly inside that unit circle

142
00:05:28,389 --> 00:05:32,139
unit circle you could imagine if there

143
00:05:30,399 --> 00:05:34,599
was some game pad that had more of a

144
00:05:32,139 --> 00:05:36,579
square range of motion so that when you

145
00:05:34,600 --> 00:05:39,340
pushed it up into the corner here it was

146
00:05:36,579 --> 00:05:39,879
actually kind of more at negative I'm

147
00:05:39,339 --> 00:05:41,529
sorry

148
00:05:39,879 --> 00:05:42,850
negative one one you know or something

149
00:05:41,529 --> 00:05:44,919
like that or negative one negative one

150
00:05:42,850 --> 00:05:47,500
down here instead of sort of being more

151
00:05:44,920 --> 00:05:48,790
at that unit circle range then we would

152
00:05:47,500 --> 00:05:50,439
have this thing where people could sort

153
00:05:48,790 --> 00:05:52,090
of cheat by moving the player faster

154
00:05:50,439 --> 00:05:53,649
than they should be able to on those

155
00:05:52,089 --> 00:05:55,500
joysticks right so we want to make sure

156
00:05:53,649 --> 00:05:58,179
that no matter what we get back from the

157
00:05:55,500 --> 00:05:59,529
operating system as our joystick values

158
00:05:58,180 --> 00:06:02,590
we always want to make sure they are

159
00:05:59,529 --> 00:06:04,269
capped so that the that that motion that

160
00:06:02,589 --> 00:06:05,589
acceleration vector that we're taking

161
00:06:04,269 --> 00:06:07,810
from the joystick is not greater than

162
00:06:05,589 --> 00:06:10,209
one now we showed how to implement the

163
00:06:07,810 --> 00:06:12,339
length of a vector right we already

164
00:06:10,209 --> 00:06:14,439
showed how to say if we've got some

165
00:06:12,339 --> 00:06:16,269
acceleration vector here we showed how

166
00:06:14,439 --> 00:06:18,250
to say well we can take the length of

167
00:06:16,269 --> 00:06:21,069
that vector right and if you remember

168
00:06:18,250 --> 00:06:25,779
that was just the components of it right

169
00:06:21,069 --> 00:06:27,610
squared right so we had this the length

170
00:06:25,779 --> 00:06:28,629
squared was equal to this squared and

171
00:06:27,610 --> 00:06:30,430
getting that's just that Pythagorean

172
00:06:28,629 --> 00:06:32,860
theorem theorem a squared plus B squared

173
00:06:30,430 --> 00:06:36,100
equals C squared that's what we did

174
00:06:32,860 --> 00:06:37,270
right and if we wanted to actually find

175
00:06:36,100 --> 00:06:38,770
out the actual length we could just

176
00:06:37,269 --> 00:06:40,329
square root this right so we'd square

177
00:06:38,769 --> 00:06:42,969
root both sides and we've

178
00:06:40,329 --> 00:06:45,188
get this right x squared plus ay Y

179
00:06:42,970 --> 00:06:47,020
squared like that so we have this

180
00:06:45,189 --> 00:06:48,909
ability and we actually implemented that

181
00:06:47,019 --> 00:06:53,740
in our math library if you remember

182
00:06:48,908 --> 00:06:56,319
correctly we went and did length squared

183
00:06:53,740 --> 00:06:57,908
and we implemented that by just taking

184
00:06:56,319 --> 00:07:01,689
the inner product of the vector with

185
00:06:57,908 --> 00:07:04,000
itself which again basically computes

186
00:07:01,689 --> 00:07:05,949
exactly that thing ax times a X a Y

187
00:07:04,000 --> 00:07:07,658
times a Y because remember our passing a

188
00:07:05,949 --> 00:07:10,300
in both cases which is exactly that

189
00:07:07,658 --> 00:07:14,199
Pythagorean theorem that selects of the

190
00:07:10,300 --> 00:07:17,199
vector so now we do know at least how to

191
00:07:14,199 --> 00:07:19,270
directly ask the question whatever comes

192
00:07:17,199 --> 00:07:21,580
back is our acceleration vector how long

193
00:07:19,269 --> 00:07:23,680
is that vector right because I could go

194
00:07:21,579 --> 00:07:26,378
into this code and I can ask what the

195
00:07:23,680 --> 00:07:28,900
length square it is right I can say what

196
00:07:26,379 --> 00:07:32,468
is the length squared of this value so

197
00:07:28,899 --> 00:07:34,929
if I say DDP length I can compute it

198
00:07:32,468 --> 00:07:38,019
right and that'll get me a value that I

199
00:07:34,930 --> 00:07:39,579
know is gonna tell me how long the the

200
00:07:38,019 --> 00:07:42,008
requested acceleration for this player

201
00:07:39,579 --> 00:07:42,668
is and I can then go ahead and say well

202
00:07:42,009 --> 00:07:45,430
all right

203
00:07:42,668 --> 00:07:48,038
however long that acceleration vector is

204
00:07:45,430 --> 00:07:50,978
well I'm gonna get it squared value back

205
00:07:48,038 --> 00:07:54,009
now I could square root it if I wanted

206
00:07:50,978 --> 00:07:57,810
to but I don't really have to just do my

207
00:07:54,009 --> 00:08:01,028
check right because if you look at the

208
00:07:57,810 --> 00:08:02,829
value of square root right if we looked

209
00:08:01,028 --> 00:08:07,300
at what what square root was going to do

210
00:08:02,829 --> 00:08:08,978
and maybe I'll do this in a sort of kind

211
00:08:07,300 --> 00:08:10,900
of oh you know what I wonder if we can

212
00:08:08,978 --> 00:08:16,240
do this I wonder if we can do this this

213
00:08:10,899 --> 00:08:17,439
way Square or like Wolfram Alpha or

214
00:08:16,240 --> 00:08:19,060
something I don't know if it's I don't

215
00:08:17,439 --> 00:08:22,449
know if it's got this sort of stuff but

216
00:08:19,060 --> 00:08:24,278
let's see here square root I just want

217
00:08:22,449 --> 00:08:25,509
someone to give us a little graph and I

218
00:08:24,278 --> 00:08:27,098
figured it'd be easier than me drawing

219
00:08:25,509 --> 00:08:31,658
it out but I don't actually know if that

220
00:08:27,098 --> 00:08:33,578
would do it so there it is good so this

221
00:08:31,658 --> 00:08:36,879
is a graph right of the square root

222
00:08:33,578 --> 00:08:40,088
function and I guess the one we probably

223
00:08:36,879 --> 00:08:41,828
want more oops that's no good would

224
00:08:40,089 --> 00:08:44,199
actually be from zero to one I don't

225
00:08:41,828 --> 00:08:45,849
know if we can can we we're gonna have

226
00:08:44,198 --> 00:08:47,909
we got to have some kind of Pro thing

227
00:08:45,850 --> 00:08:51,730
God Wolfram Alpha what what is what

228
00:08:47,909 --> 00:08:54,850
don't know go away thank you

229
00:08:51,730 --> 00:08:56,319
alright good so I guess we'll use this

230
00:08:54,850 --> 00:08:59,500
one here what I really want is just the

231
00:08:56,318 --> 00:09:01,389
up to one but it's it's fine so if you

232
00:08:59,500 --> 00:09:02,620
look at this here you can see that the

233
00:09:01,389 --> 00:09:04,799
interesting thing about square root

234
00:09:02,620 --> 00:09:07,480
right is the square root of one is one

235
00:09:04,799 --> 00:09:09,009
it's right that's the one value where a

236
00:09:07,480 --> 00:09:10,720
square the square root of the number

237
00:09:09,009 --> 00:09:12,100
equals itself it's the identity for

238
00:09:10,720 --> 00:09:13,959
square root right so if I take the

239
00:09:12,100 --> 00:09:18,579
square root of one I actually get one

240
00:09:13,958 --> 00:09:21,489
back right and so I could just say well

241
00:09:18,578 --> 00:09:24,729
since I actually want to just check to

242
00:09:21,490 --> 00:09:26,169
see if this thing would be one if I took

243
00:09:24,730 --> 00:09:28,569
its actual length of square root of it

244
00:09:26,169 --> 00:09:30,719
well I could just say whatever that

245
00:09:28,568 --> 00:09:33,399
length is that I want you know max

246
00:09:30,720 --> 00:09:35,649
acceleration right I could just say

247
00:09:33,399 --> 00:09:37,929
whatever the square of that is I'll

248
00:09:35,649 --> 00:09:40,299
compare against that so if the if the

249
00:09:37,929 --> 00:09:42,879
length that we get back is greater than

250
00:09:40,299 --> 00:09:44,259
the square of the max duration then I'll

251
00:09:42,879 --> 00:09:46,149
do it but of course I know in this case

252
00:09:44,259 --> 00:09:48,939
the maxillary should here is just 1 and

253
00:09:46,149 --> 00:09:50,860
I know that the square of that is 1 so I

254
00:09:48,940 --> 00:09:53,649
can basically just check if it's greater

255
00:09:50,860 --> 00:09:55,329
than 1 and save everyone the trouble ok

256
00:09:53,649 --> 00:09:57,159
now you may ask why is the maxillary

257
00:09:55,328 --> 00:09:59,229
agen 1 it's because we're not actually

258
00:09:57,159 --> 00:10:00,730
producing the max acceleration here what

259
00:09:59,230 --> 00:10:04,149
we're doing is producing the direction

260
00:10:00,730 --> 00:10:05,889
and the amount of the max solutions that

261
00:10:04,149 --> 00:10:07,809
we will apply and you'll see that in one

262
00:10:05,889 --> 00:10:09,879
second so I need to do here is just

263
00:10:07,809 --> 00:10:11,708
check to see ok is the length of the

264
00:10:09,879 --> 00:10:13,629
thing that we were supposed to be using

265
00:10:11,708 --> 00:10:15,099
he is that going to be greater than 1

266
00:10:13,629 --> 00:10:18,578
and if it is greater than 1 I need to

267
00:10:15,100 --> 00:10:20,949
cap it at length 1 okay so I need to

268
00:10:18,578 --> 00:10:23,620
figure out some way that now I need to

269
00:10:20,948 --> 00:10:26,139
do something to DDP here right I need to

270
00:10:23,620 --> 00:10:28,929
do something to DDP such that I can

271
00:10:26,139 --> 00:10:36,750
change its length to 1 without changing

272
00:10:28,929 --> 00:10:39,969
its direction right so I need to

273
00:10:36,750 --> 00:10:42,850
construct a kind of diagram that again

274
00:10:39,970 --> 00:10:46,180
should be familiar to you from your high

275
00:10:42,850 --> 00:10:48,819
school math right I have a vector oops I

276
00:10:46,179 --> 00:10:51,939
have a vector here right there's my

277
00:10:48,818 --> 00:10:53,229
vector and you can imagine in fact I

278
00:10:51,940 --> 00:10:55,240
should give myself a little more room to

279
00:10:53,230 --> 00:10:58,899
draw so let's say it's big there's my

280
00:10:55,240 --> 00:11:00,879
vector right and it has its components x

281
00:10:58,899 --> 00:11:03,659
and y here's the component of the

282
00:11:00,879 --> 00:11:06,519
original vector we'll call that vector a

283
00:11:03,659 --> 00:11:07,329
here are the components right and this

284
00:11:06,519 --> 00:11:10,059
is my vector

285
00:11:07,330 --> 00:11:13,389
now what I want to do is I want to

286
00:11:10,059 --> 00:11:15,219
construct another vector and I want to

287
00:11:13,389 --> 00:11:17,830
point in exactly the same direction as a

288
00:11:15,220 --> 00:11:21,339
but I want its length to be 1 so this

289
00:11:17,830 --> 00:11:23,589
length here should be 1 this length here

290
00:11:21,339 --> 00:11:33,100
is some other length it's the length of

291
00:11:23,589 --> 00:11:35,980
a right makes sense okay now if you

292
00:11:33,100 --> 00:11:38,528
remember again like I said from from

293
00:11:35,980 --> 00:11:42,129
your convenient your convenient sort of

294
00:11:38,528 --> 00:11:44,470
grade school or high school math you

295
00:11:42,129 --> 00:11:47,169
know that if you have right triangles

296
00:11:44,470 --> 00:11:49,120
like this that share all the angles are

297
00:11:47,169 --> 00:11:51,699
the same right you've got all the angles

298
00:11:49,120 --> 00:11:53,799
are the same on this diagram then you

299
00:11:51,700 --> 00:11:56,079
know that they are similar triangles and

300
00:11:53,799 --> 00:11:59,259
what similar triangles mean is that the

301
00:11:56,078 --> 00:12:03,429
sides are actually proportional in

302
00:11:59,259 --> 00:12:05,799
length to each other so the ratio of one

303
00:12:03,429 --> 00:12:07,569
of the sides of this triangle to one of

304
00:12:05,799 --> 00:12:09,969
the sides of this other triangle is the

305
00:12:07,570 --> 00:12:12,700
same ratio no matter which side I pick

306
00:12:09,970 --> 00:12:15,910
right so if I want to know how big this

307
00:12:12,700 --> 00:12:18,820
is relative to this or if I want to know

308
00:12:15,909 --> 00:12:22,059
how big this is relative to this all I

309
00:12:18,820 --> 00:12:24,070
have to know is the relative ratio of

310
00:12:22,059 --> 00:12:26,769
one of the sides now of course I have

311
00:12:24,070 --> 00:12:29,709
that because I know how long a is right

312
00:12:26,769 --> 00:12:32,379
and I know that I want it to be 1 right

313
00:12:29,708 --> 00:12:34,719
so I basically know that if I take the

314
00:12:32,379 --> 00:12:38,740
ratio of 1 which is this what I want

315
00:12:34,720 --> 00:12:41,620
here right to a which is the actual

316
00:12:38,740 --> 00:12:43,240
length that gives me the coefficient

317
00:12:41,620 --> 00:12:44,740
that gives me the ratio that I would

318
00:12:43,240 --> 00:12:47,528
want you know I can even I can write it

319
00:12:44,740 --> 00:12:49,450
out as an actual ratio expression the

320
00:12:47,528 --> 00:12:51,939
ratio of the you know the thing I want

321
00:12:49,450 --> 00:12:55,060
versus the thing that I have I can then

322
00:12:51,940 --> 00:12:56,920
pick any other part of it like the ax

323
00:12:55,059 --> 00:12:59,859
that I might want to get and if I want

324
00:12:56,919 --> 00:13:02,289
to get that new that new X right

325
00:12:59,860 --> 00:13:03,940
whatever that new a prime X is so a

326
00:13:02,289 --> 00:13:07,059
prime X would be down here right this

327
00:13:03,940 --> 00:13:09,579
length right so if I want to try and

328
00:13:07,059 --> 00:13:12,549
figure out what that is I can just use I

329
00:13:09,578 --> 00:13:14,139
can just use this exact this exact

330
00:13:12,549 --> 00:13:16,269
formula right and the thing that I want

331
00:13:14,139 --> 00:13:18,189
to solve for is this so multiplying out

332
00:13:16,269 --> 00:13:20,889
you get just doing the cross multiply

333
00:13:18,190 --> 00:13:22,629
again this is where I'm shocked I

334
00:13:20,889 --> 00:13:26,730
made a serious math error on the stream

335
00:13:22,629 --> 00:13:26,730
this may be the day but we'll find out

336
00:13:27,359 --> 00:13:32,619
yeah so anyway

337
00:13:30,298 --> 00:13:35,019
the thing I want software is this this

338
00:13:32,619 --> 00:13:38,139
right here this this a prime X the new

339
00:13:35,019 --> 00:13:39,818
the new you know this value because I

340
00:13:38,139 --> 00:13:42,249
know that value and I want to get this

341
00:13:39,818 --> 00:13:43,719
value so if I want to solve for that I

342
00:13:42,249 --> 00:13:45,009
just have to go ahead and isolate that

343
00:13:43,720 --> 00:13:47,470
term which just means dividing by this

344
00:13:45,009 --> 00:13:51,759
and of course that gives me a prime x

345
00:13:47,470 --> 00:13:55,359
equals ax over length a right and this

346
00:13:51,759 --> 00:13:58,989
turns into basically the the sort of the

347
00:13:55,359 --> 00:14:01,540
canonical version of changing the length

348
00:13:58,989 --> 00:14:04,509
of a vector so let's say I want to do it

349
00:14:01,539 --> 00:14:06,578
a little more sort of aggressively let's

350
00:14:04,509 --> 00:14:08,318
say I wanted to do a prime so I just

351
00:14:06,578 --> 00:14:10,868
have some new length here length of a

352
00:14:08,318 --> 00:14:12,698
prime whatever that length is right so I

353
00:14:10,869 --> 00:14:14,739
want to basically say no matter what the

354
00:14:12,698 --> 00:14:17,139
length is what would I do here well now

355
00:14:14,739 --> 00:14:20,019
cross multiplying right I get that

356
00:14:17,139 --> 00:14:21,489
length of a prime here right so ax times

357
00:14:20,019 --> 00:14:23,259
that right cross multiply here if that's

358
00:14:21,489 --> 00:14:24,660
this term cross multiply there that's

359
00:14:23,259 --> 00:14:26,980
this term they're equal to each other

360
00:14:24,659 --> 00:14:30,188
and so then when I actually do this

361
00:14:26,980 --> 00:14:32,528
right I get one additional term instead

362
00:14:30,188 --> 00:14:33,969
of just having ax over a on this side I

363
00:14:32,528 --> 00:14:36,338
actually have the length of a prime

364
00:14:33,970 --> 00:14:38,829
times ax over a right because I'm taking

365
00:14:36,339 --> 00:14:42,489
this and dividing by this and this right

366
00:14:38,828 --> 00:14:44,948
here is the canonical form for how you

367
00:14:42,489 --> 00:14:48,040
change the length of a vector without

368
00:14:44,948 --> 00:14:51,458
changing its direction it's this a prime

369
00:14:48,039 --> 00:14:53,828
over a right so length of a prime over a

370
00:14:51,458 --> 00:14:55,778
length of a so the lengths that I want

371
00:14:53,828 --> 00:14:59,109
my vector to be over the length that it

372
00:14:55,778 --> 00:15:02,198
is right is that term right there times

373
00:14:59,110 --> 00:15:06,188
the component that I want right ax is

374
00:15:02,198 --> 00:15:08,828
the existing value for my x coordinate

375
00:15:06,188 --> 00:15:11,649
of that vector so that gives me the new

376
00:15:08,828 --> 00:15:13,178
a prime the new the new a prime X and if

377
00:15:11,649 --> 00:15:14,649
I want to do it with Y again this would

378
00:15:13,178 --> 00:15:16,928
be the exact same equation there just be

379
00:15:14,649 --> 00:15:19,509
wise here so all the same math carries

380
00:15:16,928 --> 00:15:22,119
through so a prime Y is just the exact

381
00:15:19,509 --> 00:15:26,739
same thing coefficient times a Y right

382
00:15:22,119 --> 00:15:29,048
so what that get gets for us is just

383
00:15:26,739 --> 00:15:30,910
this really really simple way to take a

384
00:15:29,048 --> 00:15:33,909
vector and change its length all we have

385
00:15:30,909 --> 00:15:34,610
to do is multiply the components of the

386
00:15:33,909 --> 00:15:37,490
vector

387
00:15:34,610 --> 00:15:39,470
by that ratio a prime over a now we know

388
00:15:37,490 --> 00:15:42,169
that we want the length the the a prime

389
00:15:39,470 --> 00:15:45,080
there that length is just 1.0 and so now

390
00:15:42,169 --> 00:15:47,779
we just need to know what this value is

391
00:15:45,080 --> 00:15:51,680
here right what that is

392
00:15:47,779 --> 00:15:54,439
now unfortunately ratios do not work

393
00:15:51,679 --> 00:15:59,239
through squaring if that makes sense

394
00:15:54,440 --> 00:16:01,970
so basically if I have this a prime over

395
00:15:59,240 --> 00:16:02,539
a and this is the coefficient I want to

396
00:16:01,970 --> 00:16:06,350
compute

397
00:16:02,539 --> 00:16:10,099
I cannot compute a prime squared over a

398
00:16:06,350 --> 00:16:12,590
squared I can't do that right I wish

399
00:16:10,100 --> 00:16:15,710
that were true but I don't believe

400
00:16:12,590 --> 00:16:17,509
there's any real way you could you can

401
00:16:15,710 --> 00:16:18,530
yeah I'm trying to think if there's a

402
00:16:17,509 --> 00:16:20,210
good way to do that

403
00:16:18,529 --> 00:16:22,850
basically I can't think of any way to

404
00:16:20,210 --> 00:16:24,230
really do that simpler than just

405
00:16:22,850 --> 00:16:26,509
actually after you do the square root

406
00:16:24,230 --> 00:16:27,769
right so that means we do have to do a

407
00:16:26,509 --> 00:16:29,629
square root here but hey square roots

408
00:16:27,769 --> 00:16:31,100
aren't as expensive as they used to be I

409
00:16:29,629 --> 00:16:34,399
don't know if we actually ever put one

410
00:16:31,100 --> 00:16:36,940
into our math let's see here I into our

411
00:16:34,399 --> 00:16:41,209
math library oops

412
00:16:36,940 --> 00:16:43,100
where is intrinsics square root no we

413
00:16:41,210 --> 00:16:44,360
didn't so we want to put in a square

414
00:16:43,100 --> 00:16:45,470
root here again this is going to be

415
00:16:44,360 --> 00:16:49,399
something that should be generated

416
00:16:45,470 --> 00:16:51,820
directly by the compiler hopefully at

417
00:16:49,399 --> 00:16:53,959
least inverse square root usually is

418
00:16:51,820 --> 00:16:57,320
square root usually is as well anyway

419
00:16:53,960 --> 00:17:00,740
we'll see let's take a look so square

420
00:16:57,320 --> 00:17:04,459
root of some value that comes in that's

421
00:17:00,740 --> 00:17:06,769
going to be equal to the square root of

422
00:17:04,459 --> 00:17:11,060
the value that comes in return that as a

423
00:17:06,769 --> 00:17:13,039
result yeah and so all we really need to

424
00:17:11,059 --> 00:17:15,649
do here is just do the what that length

425
00:17:13,039 --> 00:17:17,269
we had take that square root and that

426
00:17:15,650 --> 00:17:19,280
will will essentially do that operation

427
00:17:17,269 --> 00:17:23,029
that we just said right multiply all the

428
00:17:19,279 --> 00:17:25,338
components of our of our vector of our

429
00:17:23,029 --> 00:17:27,829
acceleration vector by whatever would

430
00:17:25,338 --> 00:17:30,109
make its length equal to 1 right and

431
00:17:27,829 --> 00:17:31,699
we're not going to do that if it's less

432
00:17:30,109 --> 00:17:33,229
than 1 already because that's fine that

433
00:17:31,700 --> 00:17:35,120
just means the person is pushing just a

434
00:17:33,230 --> 00:17:38,509
little bit on the stick and now we can

435
00:17:35,119 --> 00:17:42,109
get rid of this right so hopefully that

436
00:17:38,509 --> 00:17:45,680
will what is the problem do we not have

437
00:17:42,109 --> 00:17:48,529
an F squirt first oh do we need there we

438
00:17:45,680 --> 00:17:51,048
go sorry for some reason it's F

439
00:17:48,529 --> 00:17:53,178
but squirt f don't ask me why that

440
00:17:51,048 --> 00:17:54,980
happened because I have no idea but

441
00:17:53,179 --> 00:17:58,570
that's just the way it goes

442
00:17:54,980 --> 00:18:00,798
alright so now in theory we should have

443
00:17:58,569 --> 00:18:02,750
more ability to control this guy a

444
00:18:00,798 --> 00:18:04,129
little smoother there's not really going

445
00:18:02,750 --> 00:18:05,839
to be a whole lot of difference there

446
00:18:04,130 --> 00:18:07,400
but that's just getting that's just

447
00:18:05,839 --> 00:18:09,230
getting rid of that kind of crufty code

448
00:18:07,400 --> 00:18:10,519
that only worked for the d-pad so now

449
00:18:09,230 --> 00:18:12,919
it'll work for the analog stick as well

450
00:18:10,519 --> 00:18:14,690
and we're all good right and you can see

451
00:18:12,919 --> 00:18:16,909
now you can move just a little bit right

452
00:18:14,690 --> 00:18:18,470
and we don't get any kind of weirdness

453
00:18:16,909 --> 00:18:21,830
in there or any kind of non proportional

454
00:18:18,470 --> 00:18:23,450
stuff so yeah so that's good so that's

455
00:18:21,829 --> 00:18:25,460
all I really wanted to take care of was

456
00:18:23,450 --> 00:18:26,960
just that yeah

457
00:18:25,460 --> 00:18:28,490
and hopefully that made some sense it's

458
00:18:26,960 --> 00:18:32,480
pretty straightforward now as I said

459
00:18:28,490 --> 00:18:34,640
before if you want to know why we are

460
00:18:32,480 --> 00:18:38,058
making it length one it's because

461
00:18:34,640 --> 00:18:40,490
basically anything that's length one is

462
00:18:38,058 --> 00:18:41,928
easy to then transform out into some

463
00:18:40,490 --> 00:18:44,058
other length right because if I know

464
00:18:41,929 --> 00:18:45,440
something is already length one and I

465
00:18:44,058 --> 00:18:47,210
want to make it some other length later

466
00:18:45,440 --> 00:18:49,909
I just multiply it by the length that I

467
00:18:47,210 --> 00:18:52,100
want right because you have to remember

468
00:18:49,909 --> 00:18:54,830
this this equation that I just said

469
00:18:52,099 --> 00:18:57,709
where it's the new length right over the

470
00:18:54,829 --> 00:18:58,939
the old length if I wanted to make

471
00:18:57,710 --> 00:19:00,919
something a new length and I already

472
00:18:58,940 --> 00:19:02,419
knew its old length was one well that

473
00:19:00,919 --> 00:19:05,360
means this square root here would just

474
00:19:02,419 --> 00:19:07,820
already be one and so it would just be a

475
00:19:05,359 --> 00:19:09,649
new length over one or new length so

476
00:19:07,819 --> 00:19:11,899
that would be the equation right for

477
00:19:09,650 --> 00:19:14,360
changing it to some new length if I knew

478
00:19:11,900 --> 00:19:16,700
its if its current length was already

479
00:19:14,359 --> 00:19:18,259
one and so the reason I'm constructing a

480
00:19:16,700 --> 00:19:20,450
length one vector here is because now I

481
00:19:18,259 --> 00:19:22,788
just have basically the generic vector

482
00:19:20,450 --> 00:19:26,029
that points in the direction that the

483
00:19:22,788 --> 00:19:28,460
person goes or a vector that's something

484
00:19:26,029 --> 00:19:29,990
less than one and if it's something less

485
00:19:28,460 --> 00:19:31,700
than one then all it will do is when I

486
00:19:29,990 --> 00:19:34,130
multiply it by something later it will

487
00:19:31,700 --> 00:19:35,419
be proportionally less which is exactly

488
00:19:34,130 --> 00:19:37,669
what I would want with the analog stick

489
00:19:35,419 --> 00:19:39,470
right I'd want a proportion less than

490
00:19:37,669 --> 00:19:42,110
whatever I'm going to do if it was

491
00:19:39,470 --> 00:19:44,179
pushed all the way out and so then we do

492
00:19:42,109 --> 00:19:45,829
exactly what I just said we take that

493
00:19:44,179 --> 00:19:47,269
vector and we multiply it by however

494
00:19:45,829 --> 00:19:49,490
fast we wanted the player to actually

495
00:19:47,269 --> 00:19:52,250
accelerate in meters per second squared

496
00:19:49,490 --> 00:19:53,599
and that basically gives us a new vector

497
00:19:52,250 --> 00:19:56,298
that's the correct length now for

498
00:19:53,599 --> 00:19:58,339
acceleration to use and then we proceed

499
00:19:56,298 --> 00:20:00,109
as normal so nothing nothing weird

500
00:19:58,339 --> 00:20:02,339
happens there so that's it I mean

501
00:20:00,109 --> 00:20:03,808
there's nothing there's nothing really

502
00:20:02,339 --> 00:20:04,978
fancy going on there just want to make

503
00:20:03,808 --> 00:20:07,288
sure everyone kind understood what was

504
00:20:04,979 --> 00:20:08,759
going on and so they'd hey there he goes

505
00:20:07,288 --> 00:20:10,919
and he's good so now we have to do is

506
00:20:08,759 --> 00:20:12,089
concentrate on this problem right where

507
00:20:10,919 --> 00:20:14,489
we're not grinding along the wall

508
00:20:12,089 --> 00:20:16,798
because we don't allow movement when we

509
00:20:14,489 --> 00:20:18,659
just when we when we detect a collision

510
00:20:16,798 --> 00:20:20,878
right and so what you want to do is

511
00:20:18,659 --> 00:20:24,330
allow movement when we detect collision

512
00:20:20,878 --> 00:20:26,728
now and clean that up ok so what we need

513
00:20:24,329 --> 00:20:28,888
to do for that I thought about this

514
00:20:26,729 --> 00:20:30,028
quite a bit and I talked about on a

515
00:20:28,888 --> 00:20:32,459
previous stream I was talking about

516
00:20:30,028 --> 00:20:35,009
whether we should do search and P or

517
00:20:32,460 --> 00:20:37,079
certainty and we like I kind of talked

518
00:20:35,009 --> 00:20:40,649
about how to implement both methods and

519
00:20:37,079 --> 00:20:42,628
I the more I thought think about it the

520
00:20:40,648 --> 00:20:44,128
less I want to do search and P I was

521
00:20:42,628 --> 00:20:45,509
kind of like really on the fence if you

522
00:20:44,128 --> 00:20:46,709
remember I wasn't sure and I thought

523
00:20:45,509 --> 00:20:48,298
about it over the weekend and that's

524
00:20:46,710 --> 00:20:49,950
like you know what I don't think it's a

525
00:20:48,298 --> 00:20:51,358
good idea and the reason I don't think

526
00:20:49,950 --> 00:20:53,308
it's a good idea is because I feel like

527
00:20:51,358 --> 00:20:55,199
it's gonna introduce a lot of complexity

528
00:20:53,308 --> 00:20:57,418
into the code for us for not a lot of

529
00:20:55,200 --> 00:20:58,619
benefit because really in this game

530
00:20:57,419 --> 00:21:00,509
we're not gonna be grinding against

531
00:20:58,618 --> 00:21:02,668
walls a lot it's not like a walking

532
00:21:00,509 --> 00:21:05,190
simulator kind of a game and I feel like

533
00:21:02,669 --> 00:21:07,019
the benefit that we'd get from having

534
00:21:05,190 --> 00:21:09,119
search and P which I like better for

535
00:21:07,019 --> 00:21:11,729
collision detection in the in some case

536
00:21:09,118 --> 00:21:13,709
sense it's just gonna cost too much in

537
00:21:11,729 --> 00:21:15,538
terms of the code complexity so I think

538
00:21:13,710 --> 00:21:17,999
since we really never actually bothered

539
00:21:15,538 --> 00:21:19,979
to implement it I'm just gonna say let's

540
00:21:17,999 --> 00:21:21,509
not bother and let's go with the more

541
00:21:19,979 --> 00:21:24,028
traditional version which I was going to

542
00:21:21,509 --> 00:21:25,739
show how to implement anyway let's just

543
00:21:24,028 --> 00:21:27,028
do that method because I think that

544
00:21:25,739 --> 00:21:30,538
method makes more sense because it's

545
00:21:27,028 --> 00:21:32,460
just it's cheaper is the thing and and I

546
00:21:30,538 --> 00:21:33,929
feel like the cheapness is gonna be

547
00:21:32,460 --> 00:21:35,098
important for us that's all and I don't

548
00:21:33,929 --> 00:21:37,200
think we're gonna get much benefit out

549
00:21:35,098 --> 00:21:39,628
of the other way so basically all we

550
00:21:37,200 --> 00:21:42,119
really needed to do was come up with a

551
00:21:39,628 --> 00:21:43,949
better way of actually detecting when we

552
00:21:42,118 --> 00:21:46,108
were hitting stuff so what all we were

553
00:21:43,950 --> 00:21:49,409
doing before is when we actually go in

554
00:21:46,108 --> 00:21:51,569
you know somewhere we say we're here and

555
00:21:49,409 --> 00:21:53,129
over a time step we want to go here but

556
00:21:51,569 --> 00:21:54,658
there's something in our way all we were

557
00:21:53,128 --> 00:21:57,088
doing before is checking checking that

558
00:21:54,659 --> 00:21:58,619
ending location we were checking that

559
00:21:57,088 --> 00:22:00,148
ending location to see whether we could

560
00:21:58,618 --> 00:22:01,499
stand there and if we could we just took

561
00:22:00,148 --> 00:22:04,648
accepted the move if we couldn't we

562
00:22:01,499 --> 00:22:05,669
denied the move that was it and so we

563
00:22:04,648 --> 00:22:06,928
need to do something better than that

564
00:22:05,669 --> 00:22:08,038
and in order to do something better than

565
00:22:06,929 --> 00:22:09,839
that the first thing we have to do is

566
00:22:08,038 --> 00:22:11,669
figure out what we actually hit and

567
00:22:09,838 --> 00:22:13,158
where we hit it so we need to do

568
00:22:11,669 --> 00:22:16,050
something where we're going to look at

569
00:22:13,159 --> 00:22:17,340
what you know what we could collide with

570
00:22:16,049 --> 00:22:18,809
and we have to go ahead and say all

571
00:22:17,339 --> 00:22:21,000
right when we collide with something

572
00:22:18,809 --> 00:22:23,279
let's figure out where we collided and

573
00:22:21,000 --> 00:22:25,680
when we figure out where we collided we

574
00:22:23,279 --> 00:22:27,690
will put the player there right we will

575
00:22:25,680 --> 00:22:29,190
update his velocity vector which is what

576
00:22:27,690 --> 00:22:30,809
we were doing before to basically not

577
00:22:29,190 --> 00:22:32,279
have any of the component that was going

578
00:22:30,809 --> 00:22:34,859
into the thing that he collided against

579
00:22:32,279 --> 00:22:37,079
and then we will try again to move him

580
00:22:34,859 --> 00:22:39,899
now we will try a few times we will

581
00:22:37,079 --> 00:22:41,669
basically do this in a loop that tries a

582
00:22:39,900 --> 00:22:43,890
few times to get him to where he should

583
00:22:41,670 --> 00:22:44,640
be and if it fails to get him to where

584
00:22:43,890 --> 00:22:45,930
he should be

585
00:22:44,640 --> 00:22:47,730
you know if it shouldn't say where he

586
00:22:45,930 --> 00:22:49,710
should be it'll try a few times to move

587
00:22:47,730 --> 00:22:52,829
him the total amount that it should have

588
00:22:49,710 --> 00:22:54,480
moved him right because when we go here

589
00:22:52,829 --> 00:22:57,689
you know we'll find the velocity vector

590
00:22:54,480 --> 00:23:00,599
still is has there still a delta T right

591
00:22:57,690 --> 00:23:02,130
because we moved to here and we know

592
00:23:00,599 --> 00:23:04,379
that he would have gotten there if this

593
00:23:02,130 --> 00:23:06,540
was the entire time step we know that we

594
00:23:04,380 --> 00:23:08,760
would have gotten to here in less than

595
00:23:06,539 --> 00:23:11,579
that so there's some smaller thing here

596
00:23:08,759 --> 00:23:14,369
delta T 2 or something right that's a

597
00:23:11,579 --> 00:23:19,829
smaller thing and we want to then use

598
00:23:14,369 --> 00:23:21,209
the remainder that delta T remainder we

599
00:23:19,829 --> 00:23:24,539
want to still try to move him by that

600
00:23:21,210 --> 00:23:26,220
much and so hopefully delta T that the

601
00:23:24,539 --> 00:23:27,569
amount that's remaining goes down to

602
00:23:26,220 --> 00:23:29,759
zero and we know that we've done a

603
00:23:27,569 --> 00:23:31,289
complete move but if we find that we

604
00:23:29,759 --> 00:23:32,970
just can't resolve it because there's

605
00:23:31,289 --> 00:23:35,099
all these crazy walls in there and he's

606
00:23:32,970 --> 00:23:37,110
bouncing around or whatever we'll just

607
00:23:35,099 --> 00:23:39,209
cut our losses and say you know after

608
00:23:37,109 --> 00:23:40,769
four iterations or something we're just

609
00:23:39,210 --> 00:23:42,930
gonna consider that good enough and

610
00:23:40,769 --> 00:23:43,829
we'll stop because we don't want to have

611
00:23:42,930 --> 00:23:45,690
something where we're gonna do an

612
00:23:43,829 --> 00:23:47,730
unbounded number of iterations that's

613
00:23:45,690 --> 00:23:49,860
just a very bad idea for something

614
00:23:47,730 --> 00:23:51,660
that's performance oriented and again

615
00:23:49,859 --> 00:23:52,529
this whole thing is very tiny we're

616
00:23:51,660 --> 00:23:54,509
talking about something that happens

617
00:23:52,529 --> 00:23:56,069
over a xxx or a sixtieth of a second so

618
00:23:54,509 --> 00:23:57,599
these are like microscopic movements

619
00:23:56,069 --> 00:23:59,129
that we're talking about here so how

620
00:23:57,599 --> 00:24:01,769
many bounces we support is not

621
00:23:59,130 --> 00:24:03,540
particularly relevant in terms of what

622
00:24:01,769 --> 00:24:04,920
the player can actually experience as

623
00:24:03,539 --> 00:24:08,609
long as it's like you know two or three

624
00:24:04,920 --> 00:24:10,170
I think we should be fine so what I need

625
00:24:08,609 --> 00:24:11,490
to do is figure out how to compute that

626
00:24:10,170 --> 00:24:12,870
right I need to figure out how to

627
00:24:11,490 --> 00:24:15,210
compute that and we'll start by

628
00:24:12,869 --> 00:24:16,439
computing it for the simplest case that

629
00:24:15,210 --> 00:24:18,600
we possibly could

630
00:24:16,440 --> 00:24:21,990
we'll start by compete computing it with

631
00:24:18,599 --> 00:24:23,459
point vs. line essentially right so what

632
00:24:21,990 --> 00:24:25,859
we want to do is say all right we need

633
00:24:23,460 --> 00:24:28,620
to we're going to have some kind of line

634
00:24:25,859 --> 00:24:30,028
right and we're going to have to have

635
00:24:28,619 --> 00:24:31,528
some representation for our guy

636
00:24:30,028 --> 00:24:34,069
and some concept of direction is going

637
00:24:31,528 --> 00:24:37,409
and we need to figure out when he hits

638
00:24:34,069 --> 00:24:39,418
that that sort of whatever that is that

639
00:24:37,409 --> 00:24:41,219
line that that blocker so we're gonna

640
00:24:39,419 --> 00:24:42,690
start with that as the simplest case and

641
00:24:41,219 --> 00:24:44,399
we'll kind of work up from there because

642
00:24:42,690 --> 00:24:46,259
I think I don't know how much time we

643
00:24:44,398 --> 00:24:48,268
got left got about a half hour left so

644
00:24:46,259 --> 00:24:51,298
that'll be it's quite that'll be quite a

645
00:24:48,269 --> 00:24:53,759
bit for us to actually go through in

646
00:24:51,298 --> 00:24:55,528
such a short amount of time actually so

647
00:24:53,759 --> 00:24:57,628
let's you know focus on doing that and

648
00:24:55,528 --> 00:25:01,169
then we will go ahead and see when we

649
00:24:57,628 --> 00:25:02,819
get when we get done with that we'll

650
00:25:01,169 --> 00:25:05,669
probably maybe tomorrow talk about how

651
00:25:02,819 --> 00:25:08,069
to do some more complicates complicated

652
00:25:05,669 --> 00:25:09,960
stuff okay so if we're just doing that

653
00:25:08,069 --> 00:25:11,878
simple case what we need to start

654
00:25:09,960 --> 00:25:14,759
thinking about is how to solve equations

655
00:25:11,878 --> 00:25:16,319
with these vectors right because

656
00:25:14,759 --> 00:25:18,598
typically when you have something like

657
00:25:16,319 --> 00:25:20,249
this you know if I've got if I have

658
00:25:18,598 --> 00:25:24,118
something like that where I've got some

659
00:25:20,249 --> 00:25:28,528
kind of a line segment right like so and

660
00:25:24,118 --> 00:25:31,288
I have some kind of a vector that's

661
00:25:28,528 --> 00:25:34,409
going in that direction I now need to

662
00:25:31,288 --> 00:25:37,259
figure out how to do solves because in

663
00:25:34,409 --> 00:25:39,479
order to figure out when if I was going

664
00:25:37,259 --> 00:25:40,858
along this line when I go here we're

665
00:25:39,479 --> 00:25:43,379
essentially talking about something

666
00:25:40,858 --> 00:25:45,808
that's going to be some function of time

667
00:25:43,378 --> 00:25:49,108
right as time progresses I'm moving and

668
00:25:45,808 --> 00:25:51,509
I want to know when this function of

669
00:25:49,108 --> 00:25:54,509
time that tells me like a location of

670
00:25:51,509 --> 00:25:56,579
the player when it equals some

671
00:25:54,509 --> 00:25:59,878
particular criteria right I've got you

672
00:25:56,579 --> 00:26:01,858
know some some some value that I want to

673
00:25:59,878 --> 00:26:03,628
satisfy here and I need to know when

674
00:26:01,858 --> 00:26:05,398
that becomes equal to something right

675
00:26:03,628 --> 00:26:06,988
and so if I want to do that we're

676
00:26:05,398 --> 00:26:09,449
starting to talk about actually solving

677
00:26:06,989 --> 00:26:11,940
some equations and so the first question

678
00:26:09,450 --> 00:26:13,409
is well what is the equations what is

679
00:26:11,940 --> 00:26:14,399
the first equation that were or what is

680
00:26:13,409 --> 00:26:16,139
the first part of the question that

681
00:26:14,398 --> 00:26:18,418
we're going to use how do we represent

682
00:26:16,138 --> 00:26:20,519
this part how do we represent there's a

683
00:26:18,419 --> 00:26:24,450
player and he's at a location and he's

684
00:26:20,519 --> 00:26:26,749
moving right well this the most simple

685
00:26:24,450 --> 00:26:30,119
thing to do here right is to say well I

686
00:26:26,749 --> 00:26:33,838
started a place we'll call that p0 right

687
00:26:30,118 --> 00:26:36,689
and then I move along some vector that's

688
00:26:33,838 --> 00:26:39,210
like a distance right I move in a

689
00:26:36,690 --> 00:26:41,999
direction so I know that I've got some

690
00:26:39,210 --> 00:26:43,829
you know p0 which is which is this point

691
00:26:41,999 --> 00:26:47,519
here and I know I've got some

692
00:26:43,829 --> 00:26:52,079
we'll call that D and I'm moving along

693
00:26:47,519 --> 00:26:53,429
it in you know some amount so if you

694
00:26:52,079 --> 00:26:55,769
remember we did that thing where we

695
00:26:53,429 --> 00:26:58,350
talked about the linear blend right and

696
00:26:55,769 --> 00:26:59,788
we said oh well if we want to if you

697
00:26:58,349 --> 00:27:02,278
want to have a linear blend between two

698
00:26:59,788 --> 00:27:05,250
points a and B right you can think of it

699
00:27:02,278 --> 00:27:08,700
as the Delta between them right B minus

700
00:27:05,250 --> 00:27:10,019
a you can think of that Delta between

701
00:27:08,700 --> 00:27:13,409
them you can think of starting at a and

702
00:27:10,019 --> 00:27:15,359
adding some port B a percentage of that

703
00:27:13,409 --> 00:27:16,919
difference between them right and this

704
00:27:15,359 --> 00:27:18,538
was the standard linear blend function

705
00:27:16,919 --> 00:27:19,500
and I said it comes up all the time

706
00:27:18,538 --> 00:27:21,148
right

707
00:27:19,500 --> 00:27:22,349
remember I said everything we do is

708
00:27:21,148 --> 00:27:23,879
gonna have this in it well guess what

709
00:27:22,349 --> 00:27:26,250
it's gonna happen here too

710
00:27:23,880 --> 00:27:28,980
I've got a place I'm going to I've got a

711
00:27:26,250 --> 00:27:30,269
place I'm coming from right and I want

712
00:27:28,980 --> 00:27:34,409
to move between them

713
00:27:30,269 --> 00:27:36,359
classic linear blend right so I'm going

714
00:27:34,409 --> 00:27:37,860
to talk about this as if I have this

715
00:27:36,359 --> 00:27:40,199
vector so we're gonna say that I have

716
00:27:37,859 --> 00:27:41,490
that that that Delta vector there right

717
00:27:40,200 --> 00:27:43,230
and I'm like I said I'm gonna call that

718
00:27:41,490 --> 00:27:44,819
D so I'm gonna call this this difference

719
00:27:43,230 --> 00:27:47,278
cream T and so I'm just talking about

720
00:27:44,819 --> 00:27:53,099
that p 0 which is this I'm tearing that

721
00:27:47,278 --> 00:27:56,700
p 0 plus T times D right that will tell

722
00:27:53,099 --> 00:27:58,918
me where my guy is at any time T right

723
00:27:56,700 --> 00:28:01,649
so if he starts from here I can plug in

724
00:27:58,919 --> 00:28:04,799
any time I want and he will move along

725
00:28:01,648 --> 00:28:07,619
that line and just keep going right now

726
00:28:04,798 --> 00:28:09,388
if I want to I can do different things

727
00:28:07,619 --> 00:28:12,239
here I can phrase this in a couple

728
00:28:09,388 --> 00:28:14,638
different ways I can say that D is the

729
00:28:12,240 --> 00:28:17,278
full distance that he moves so it's like

730
00:28:14,638 --> 00:28:19,589
B minus a if in this case here or like

731
00:28:17,278 --> 00:28:21,839
this is the p1 he's going to so in this

732
00:28:19,589 --> 00:28:23,730
case it would be p 1 minus p 0 i could

733
00:28:21,839 --> 00:28:25,859
say that and what that would mean is

734
00:28:23,730 --> 00:28:28,528
that t is normalized it means that t

735
00:28:25,859 --> 00:28:30,658
ranges from 0 to 1 right and when he

736
00:28:28,528 --> 00:28:33,179
gets to 1 he's done moving for this

737
00:28:30,659 --> 00:28:35,880
that's as far as he can go right i could

738
00:28:33,179 --> 00:28:39,659
on the other hand also take d and say

739
00:28:35,880 --> 00:28:42,240
that D has length 1 the length of D is 1

740
00:28:39,659 --> 00:28:46,620
right that would be normalizing the D

741
00:28:42,240 --> 00:28:49,620
vector and then T would range from 0 to

742
00:28:46,619 --> 00:28:52,648
whatever the actual amount is that would

743
00:28:49,619 --> 00:28:54,928
get him along that vector to the

744
00:28:52,648 --> 00:28:57,778
location right it would be his his

745
00:28:54,929 --> 00:28:59,820
motion amount so we have different ways

746
00:28:57,778 --> 00:29:01,919
we could phrase this we could have tea

747
00:28:59,819 --> 00:29:04,019
range from 0 to some value or we can

748
00:29:01,919 --> 00:29:05,820
have it range from 0 to 1 and it depends

749
00:29:04,019 --> 00:29:07,019
on what we want our properties to be of

750
00:29:05,819 --> 00:29:09,808
these vectors do we want this to be

751
00:29:07,019 --> 00:29:11,460
normalized do we care stuff like that so

752
00:29:09,808 --> 00:29:12,778
just keeping in mind that this could

753
00:29:11,460 --> 00:29:14,819
actually be phrased a couple different

754
00:29:12,778 --> 00:29:16,409
ways the p0 is kind of unambiguous it's

755
00:29:14,819 --> 00:29:17,638
where we started at the beginning of

756
00:29:16,409 --> 00:29:21,090
time step where the player is standing

757
00:29:17,638 --> 00:29:23,038
right now the D is somewhat ambiguous in

758
00:29:21,089 --> 00:29:24,269
the somewhat unambiguous and that we

759
00:29:23,038 --> 00:29:27,089
know it's pointing in the direction of

760
00:29:24,269 --> 00:29:29,038
motion but in terms of the T and the

761
00:29:27,089 --> 00:29:31,019
length of D they are kind of

762
00:29:29,038 --> 00:29:33,028
interchangeable we can we can move

763
00:29:31,019 --> 00:29:34,588
between different schemes there

764
00:29:33,028 --> 00:29:38,398
depending on how we want it to work

765
00:29:34,588 --> 00:29:40,618
right ok so let's start with the

766
00:29:38,398 --> 00:29:43,108
simplest possible case we could we could

767
00:29:40,618 --> 00:29:45,418
imagine right the simplest possible case

768
00:29:43,108 --> 00:29:47,939
would be if we just know that we have

769
00:29:45,419 --> 00:29:49,589
like say a vertical wall right we just

770
00:29:47,940 --> 00:29:52,139
want to know when this guy hits a

771
00:29:49,588 --> 00:29:54,749
vertical wall that extends let's say

772
00:29:52,138 --> 00:29:56,728
infinitely for now so this is just an

773
00:29:54,749 --> 00:29:59,129
infinite vertical war he cannot go past

774
00:29:56,729 --> 00:30:00,569
it ever he'll never get past that wall

775
00:29:59,128 --> 00:30:02,579
whether he goes up down any other way

776
00:30:00,569 --> 00:30:04,588
well what do we know about a vertical

777
00:30:02,579 --> 00:30:08,308
wall we know a vertical wall has an

778
00:30:04,588 --> 00:30:12,868
x-coordinate of something and a

779
00:30:08,308 --> 00:30:15,628
y-coordinate of everything right any y

780
00:30:12,868 --> 00:30:18,678
coordinate that you want is on that wall

781
00:30:15,628 --> 00:30:21,628
but it only has one x-coordinate right

782
00:30:18,679 --> 00:30:23,309
so this can be anything but this would

783
00:30:21,628 --> 00:30:25,558
have to be a specific value and that

784
00:30:23,308 --> 00:30:27,739
would basically be like our wall X right

785
00:30:25,558 --> 00:30:31,168
or something so we'll call that wall X

786
00:30:27,739 --> 00:30:32,608
so if we want to we could now imagine

787
00:30:31,169 --> 00:30:34,830
how we would directly solve this

788
00:30:32,608 --> 00:30:38,808
equation to see when a guy walking in

789
00:30:34,829 --> 00:30:43,259
that direction right would hit this wall

790
00:30:38,808 --> 00:30:49,499
we would say we want to know when the X

791
00:30:43,259 --> 00:30:52,108
component of this so PT x which is p 0 x

792
00:30:49,499 --> 00:30:54,899
plus t DX remember because this is a

793
00:30:52,108 --> 00:30:56,728
vector equation and I can always look at

794
00:30:54,898 --> 00:31:00,118
its scalar parts by just looking at the

795
00:30:56,729 --> 00:31:02,069
X particular X component of it if I have

796
00:31:00,118 --> 00:31:05,519
this equation all I need to do is say

797
00:31:02,069 --> 00:31:09,720
whenever that equals the wall X right so

798
00:31:05,519 --> 00:31:10,919
this right here is the equation I would

799
00:31:09,720 --> 00:31:14,278
solve to tell

800
00:31:10,919 --> 00:31:16,859
when I would hit that in T so if I want

801
00:31:14,278 --> 00:31:21,388
to actually solve it right I can just

802
00:31:16,858 --> 00:31:24,210
solve for T I get T DX equals W X minus

803
00:31:21,388 --> 00:31:24,658
p0 X right I subtract this over to this

804
00:31:24,210 --> 00:31:27,720
side

805
00:31:24,659 --> 00:31:30,539
so that goes over here and then I

806
00:31:27,720 --> 00:31:32,730
divided by DX to get rid of the DX right

807
00:31:30,538 --> 00:31:37,079
so get rid of that and put it under here

808
00:31:32,730 --> 00:31:40,409
divided by DX okay so this is the time

809
00:31:37,079 --> 00:31:41,009
at which I would hit that wall simple

810
00:31:40,409 --> 00:31:48,809
enough right

811
00:31:41,009 --> 00:31:52,739
not particularly complicated but there's

812
00:31:48,808 --> 00:31:54,538
a catch here I now have a well you know

813
00:31:52,739 --> 00:31:56,669
what I should I should probably be sly

814
00:31:54,538 --> 00:31:59,128
err about that does anyone know what the

815
00:31:56,669 --> 00:32:01,919
catch is here maybe you guys already

816
00:31:59,128 --> 00:32:03,569
know there's a catch here and I haven't

817
00:32:01,919 --> 00:32:05,249
mentioned it yet we'll kind of see if

818
00:32:03,569 --> 00:32:07,558
anyone will give you a chance to think

819
00:32:05,249 --> 00:32:10,548
about it a little bit but I want to

820
00:32:07,558 --> 00:32:15,358
point it out I wish I had more tea

821
00:32:10,548 --> 00:32:18,569
but I'm regretfully out of tea all right

822
00:32:15,358 --> 00:32:19,829
so the catch is right here when you

823
00:32:18,569 --> 00:32:21,418
divide by DX

824
00:32:19,829 --> 00:32:24,210
you may remember from your high school

825
00:32:21,419 --> 00:32:25,999
math classes someone would always say

826
00:32:24,210 --> 00:32:29,850
you know the teacher would always say

827
00:32:25,999 --> 00:32:32,038
subject to DX not equal to zero right

828
00:32:29,849 --> 00:32:34,858
they would say I'm gonna write it in in

829
00:32:32,038 --> 00:32:35,548
our form not math forum right D s can't

830
00:32:34,858 --> 00:32:37,439
be zero

831
00:32:35,548 --> 00:32:40,019
I guess the math form is more typically

832
00:32:37,440 --> 00:32:42,269
that way right and they say that because

833
00:32:40,019 --> 00:32:44,429
D X can't be 0 because dividing by zero

834
00:32:42,269 --> 00:32:44,849
is undefined behavior in math you don't

835
00:32:44,429 --> 00:32:46,230
know what it is

836
00:32:44,849 --> 00:32:47,969
at least it's undefined behavior in some

837
00:32:46,230 --> 00:32:50,849
math the math we're doing it's undefined

838
00:32:47,970 --> 00:32:53,100
and since that's the case since you

839
00:32:50,849 --> 00:32:55,829
can't divide by zero you know that your

840
00:32:53,099 --> 00:32:57,509
solution to this equation depends on DX

841
00:32:55,829 --> 00:32:59,878
having been set to some value that isn't

842
00:32:57,509 --> 00:33:01,798
zero now you may have always wondered I

843
00:32:59,878 --> 00:33:04,709
don't care about that what is that for

844
00:33:01,798 --> 00:33:05,849
it's just lame stupid I don't care when

845
00:33:04,710 --> 00:33:07,499
you were in high school math that's it's

846
00:33:05,849 --> 00:33:10,168
just annoying right but it's not

847
00:33:07,499 --> 00:33:11,639
annoying when you actually get to start

848
00:33:10,169 --> 00:33:13,769
using math for real you realize it's

849
00:33:11,638 --> 00:33:16,439
very important and it's interesting what

850
00:33:13,769 --> 00:33:18,450
does that mean well what it means is

851
00:33:16,440 --> 00:33:21,538
think about this vector this is the

852
00:33:18,450 --> 00:33:24,660
vector D what are its components it is d

853
00:33:21,538 --> 00:33:27,119
is DX dy right

854
00:33:24,660 --> 00:33:28,830
that's the components we're talking

855
00:33:27,119 --> 00:33:30,959
about this the x-coordinate of the

856
00:33:28,829 --> 00:33:32,730
vector that's which how far it is like

857
00:33:30,960 --> 00:33:35,640
this so you know if I have my vector

858
00:33:32,730 --> 00:33:37,500
here you know here's my vector D we're

859
00:33:35,640 --> 00:33:39,630
talking about DX it's down here and

860
00:33:37,500 --> 00:33:42,150
here's dy well

861
00:33:39,630 --> 00:33:45,270
if DX was zero that means that the

862
00:33:42,150 --> 00:33:47,070
vector is pointing in either up or down

863
00:33:45,269 --> 00:33:49,319
straight up or down it's not pointing to

864
00:33:47,069 --> 00:33:51,599
left or right at all right or it's not

865
00:33:49,319 --> 00:33:53,460
pointing anywhere it's just zero but if

866
00:33:51,599 --> 00:33:55,559
that were true if this is pointing

867
00:33:53,460 --> 00:33:58,289
straight up or straight down well guess

868
00:33:55,559 --> 00:34:01,470
what it's parallel to this line so there

869
00:33:58,289 --> 00:34:03,450
is no solution to when he will hit this

870
00:34:01,470 --> 00:34:04,980
line when the person walking along that

871
00:34:03,450 --> 00:34:07,529
will hit it there's no solution because

872
00:34:04,980 --> 00:34:08,940
he'll never hit it you walk as long as

873
00:34:07,529 --> 00:34:11,730
he wants he can walk to the end of time

874
00:34:08,940 --> 00:34:14,250
and he'll never hit that wall right so

875
00:34:11,730 --> 00:34:16,260
what was stupid in math class rightfully

876
00:34:14,250 --> 00:34:18,210
so is actually quite nice in game

877
00:34:16,260 --> 00:34:20,970
programming it is information and that

878
00:34:18,210 --> 00:34:22,199
information has real meaning and that's

879
00:34:20,969 --> 00:34:23,369
one of the most satisfying things about

880
00:34:22,199 --> 00:34:24,989
math is when you actually start to use

881
00:34:23,369 --> 00:34:27,710
it you realize that all the stupid crap

882
00:34:24,989 --> 00:34:29,878
actually mean stuff and you use it right

883
00:34:27,710 --> 00:34:31,409
so when we're gonna implement this we

884
00:34:29,878 --> 00:34:34,619
have to look and say oh okay

885
00:34:31,409 --> 00:34:36,780
if that if that if the x-coordinate is

886
00:34:34,619 --> 00:34:38,849
very close to zero this is becoming an

887
00:34:36,780 --> 00:34:40,470
undefined equation we don't we just

888
00:34:38,849 --> 00:34:42,480
assume that you can't hit the wall at

889
00:34:40,469 --> 00:34:44,009
that point right and we don't have to

890
00:34:42,480 --> 00:34:46,289
check against this wall at all because

891
00:34:44,010 --> 00:34:47,760
they'll never hit it so what's the rest

892
00:34:46,289 --> 00:34:49,139
of this mean this T value that comes

893
00:34:47,760 --> 00:34:51,000
back assuming that he can hit the wall

894
00:34:49,139 --> 00:34:52,409
so it's got some X component well the T

895
00:34:51,000 --> 00:34:54,179
that was either gonna be positive which

896
00:34:52,409 --> 00:34:55,710
means he goes some direction and hits it

897
00:34:54,179 --> 00:34:57,300
or it's gonna be negative which means

898
00:34:55,710 --> 00:35:00,090
that like he was actually walking in the

899
00:34:57,300 --> 00:35:01,230
opposite direction of the wall and he

900
00:35:00,090 --> 00:35:03,240
would have hit it if he'd walked

901
00:35:01,230 --> 00:35:05,159
backwards some amount of time so this

902
00:35:03,239 --> 00:35:06,209
solution actually gives us how far it

903
00:35:05,159 --> 00:35:07,739
would take him to reach the wall go

904
00:35:06,210 --> 00:35:09,329
walking forwards or backwards and it

905
00:35:07,739 --> 00:35:12,149
tells us which one of them it would have

906
00:35:09,329 --> 00:35:14,670
been right so that's kind of cool

907
00:35:12,150 --> 00:35:16,410
but we can when this comes back we can

908
00:35:14,670 --> 00:35:17,820
go oh we're just gonna say we only care

909
00:35:16,409 --> 00:35:20,009
about stuff that's T greater than equal

910
00:35:17,820 --> 00:35:21,990
to zero because we actually don't care

911
00:35:20,010 --> 00:35:23,280
about Kim walking backwards into the

912
00:35:21,989 --> 00:35:25,859
wall we're only checking the forwards

913
00:35:23,280 --> 00:35:28,440
right so that would be a pretty simple

914
00:35:25,860 --> 00:35:30,510
thing for us to test and to see what

915
00:35:28,440 --> 00:35:32,400
happens when he walks into vertical or

916
00:35:30,510 --> 00:35:35,580
of course horizontal walls would be the

917
00:35:32,400 --> 00:35:38,610
same we just change this to W X the W X

918
00:35:35,579 --> 00:35:42,360
and the PX and DX would all change to

919
00:35:38,610 --> 00:35:45,059
right so we now have that that's sort of

920
00:35:42,360 --> 00:35:47,190
oh you know what I'm gonna try I'm gonna

921
00:35:45,059 --> 00:35:47,610
try it you guys ready for this I'm gonna

922
00:35:47,190 --> 00:35:51,539
try it

923
00:35:47,610 --> 00:35:51,930
scrolling over check it out man that's

924
00:35:51,539 --> 00:35:56,929
cool

925
00:35:51,929 --> 00:36:01,710
all right so this is the equation the T

926
00:35:56,929 --> 00:36:04,889
equals W X minus p0 x over DX right

927
00:36:01,710 --> 00:36:07,019
that's the equation that we would use to

928
00:36:04,889 --> 00:36:11,789
solve for an x wall and similarly if you

929
00:36:07,019 --> 00:36:16,199
wanna solve for y wall right we would

930
00:36:11,789 --> 00:36:18,239
say same thing but in Y right so that's

931
00:36:16,199 --> 00:36:22,199
how we solve for vertical or horizontal

932
00:36:18,239 --> 00:36:24,509
walls now with that we can actually go

933
00:36:22,199 --> 00:36:25,889
implement mostly our top map collision

934
00:36:24,510 --> 00:36:27,510
and maybe we should do that maybe that

935
00:36:25,889 --> 00:36:28,949
is what we'll do and then tomorrow we'll

936
00:36:27,510 --> 00:36:33,960
talk about how to do more arbitrary

937
00:36:28,949 --> 00:36:36,359
stuff so if you think about this well

938
00:36:33,960 --> 00:36:39,769
you think about this we go okay when we

939
00:36:36,360 --> 00:36:39,769
do these collision detection right

940
00:36:40,880 --> 00:36:47,789
excuse me we would be collide against

941
00:36:44,909 --> 00:36:49,529
infinite walls so we have stuff in our

942
00:36:47,789 --> 00:36:50,789
game where we've got these walls that

943
00:36:49,530 --> 00:36:52,290
have like holes in them and stuff that

944
00:36:50,789 --> 00:36:53,880
would work right because if we will

945
00:36:52,289 --> 00:36:55,860
start at kalitta colliding against this

946
00:36:53,880 --> 00:36:57,690
wall here where you know here's the

947
00:36:55,860 --> 00:36:59,130
walls right and the hero's trying to go

948
00:36:57,690 --> 00:37:00,119
through this door he'd never be able to

949
00:36:59,130 --> 00:37:02,039
get through there because the wall is

950
00:37:00,119 --> 00:37:04,170
infinitely high right it's just it goes

951
00:37:02,039 --> 00:37:05,460
up and down and covers everything

952
00:37:04,170 --> 00:37:08,039
because it's an infinitely long wall

953
00:37:05,460 --> 00:37:12,510
it's just testing against one thing but

954
00:37:08,039 --> 00:37:15,509
obviously if we wanted to we could fix

955
00:37:12,510 --> 00:37:18,240
that pretty easily right because when we

956
00:37:15,510 --> 00:37:20,100
find out where this would actually be

957
00:37:18,239 --> 00:37:23,879
like where do we find out what the

958
00:37:20,099 --> 00:37:27,389
actual collision time is right we could

959
00:37:23,880 --> 00:37:30,420
then say well use that T value because

960
00:37:27,389 --> 00:37:32,369
we have this function here right use

961
00:37:30,420 --> 00:37:34,230
plug that T value back into the walking

962
00:37:32,369 --> 00:37:37,319
equation find out where the guy is

963
00:37:34,230 --> 00:37:39,329
standing at that time right so do p 0

964
00:37:37,320 --> 00:37:41,730
plus and let's call this like our solved

965
00:37:39,329 --> 00:37:45,090
for T or something plus T solve right

966
00:37:41,730 --> 00:37:48,420
times D this right here will give us

967
00:37:45,090 --> 00:37:51,150
this this solved for time P that will

968
00:37:48,420 --> 00:37:52,470
give us this when he walks that will

969
00:37:51,150 --> 00:37:55,380
give us this location when he

970
00:37:52,469 --> 00:37:58,469
it's the wall right when he hits the

971
00:37:55,380 --> 00:38:01,410
wall we can check the y-coordinate to

972
00:37:58,469 --> 00:38:03,809
see what its ranges and if that range is

973
00:38:01,409 --> 00:38:05,699
not in between the two locations that we

974
00:38:03,809 --> 00:38:09,000
know of the wall to be right we could

975
00:38:05,699 --> 00:38:11,279
just not do it so for every wall for

976
00:38:09,000 --> 00:38:14,130
every tile block that's solid we could

977
00:38:11,280 --> 00:38:18,090
basically check for different collisions

978
00:38:14,130 --> 00:38:20,400
right one for each side of the block and

979
00:38:18,090 --> 00:38:21,750
just check the range of the collision to

980
00:38:20,400 --> 00:38:23,400
make sure it's actually in between there

981
00:38:21,750 --> 00:38:26,250
if it's not we don't count it as a

982
00:38:23,400 --> 00:38:28,079
collision we just move on and so that's

983
00:38:26,250 --> 00:38:29,550
a pretty easy way right that we could do

984
00:38:28,079 --> 00:38:31,108
this so let's go ahead and implement

985
00:38:29,550 --> 00:38:32,789
that since this may be very new to a lot

986
00:38:31,108 --> 00:38:34,139
of people I figure like we shouldn't

987
00:38:32,789 --> 00:38:37,019
really jump ahead at all that makes

988
00:38:34,139 --> 00:38:40,319
sense so that makes sense

989
00:38:37,019 --> 00:38:46,940
hopefully that makes sense and again so

990
00:38:40,320 --> 00:38:52,170
so this is the yeah well there you go I

991
00:38:46,940 --> 00:38:55,769
need to I need to get my so there you go

992
00:38:52,170 --> 00:38:57,000
okay so moving along let's just go ahead

993
00:38:55,769 --> 00:38:59,550
and implement this code it's pretty

994
00:38:57,000 --> 00:39:02,190
trivial right so if we go ahead and

995
00:38:59,550 --> 00:39:04,710
implement this code this was our old

996
00:39:02,190 --> 00:39:05,670
code up above here that we were just

997
00:39:04,710 --> 00:39:06,690
that we were using pretty

998
00:39:05,670 --> 00:39:08,159
straightforwardly

999
00:39:06,690 --> 00:39:09,389
and so now we're gonna have to write

1000
00:39:08,159 --> 00:39:12,420
some actual collision detection code

1001
00:39:09,389 --> 00:39:13,889
here and so what we need to do here well

1002
00:39:12,420 --> 00:39:15,480
I guess I can keep some of that actually

1003
00:39:13,889 --> 00:39:18,150
this is this is actually really

1004
00:39:15,480 --> 00:39:20,190
important what we need to do is loop

1005
00:39:18,150 --> 00:39:22,440
over all of the tiles that are around us

1006
00:39:20,190 --> 00:39:25,349
right all the tiles that are that we

1007
00:39:22,440 --> 00:39:29,159
could be hitting taking a look at them

1008
00:39:25,349 --> 00:39:31,920
and seeing if they are solid if we can't

1009
00:39:29,159 --> 00:39:35,730
stand in them then we need to go ahead

1010
00:39:31,920 --> 00:39:39,750
and see whether or not we would hit them

1011
00:39:35,730 --> 00:39:44,309
by walking into them right if that makes

1012
00:39:39,750 --> 00:39:46,949
sense yeah so first things first we need

1013
00:39:44,309 --> 00:39:49,429
to map into some common location and so

1014
00:39:46,949 --> 00:39:53,399
let's just assume that the player is

1015
00:39:49,429 --> 00:39:55,799
like going to be at zero zero right that

1016
00:39:53,400 --> 00:39:57,030
seems pretty straightforward so let's go

1017
00:39:55,800 --> 00:39:58,230
ahead and say well actually it's we

1018
00:39:57,030 --> 00:40:00,420
don't even have to do that we can just

1019
00:39:58,230 --> 00:40:02,010
go ahead and say we have our tile map

1020
00:40:00,420 --> 00:40:03,358
difference we're going to subtract the

1021
00:40:02,010 --> 00:40:05,160
player position for the tile position

1022
00:40:03,358 --> 00:40:06,059
that gets us the relative position of

1023
00:40:05,159 --> 00:40:09,569
the

1024
00:40:06,059 --> 00:40:12,659
of the player I guess in that tile that

1025
00:40:09,570 --> 00:40:15,030
seems yeah I guess that seems fair

1026
00:40:12,659 --> 00:40:17,849
enough yeah that's totally fine and then

1027
00:40:15,030 --> 00:40:20,880
all we have to do in here is actually

1028
00:40:17,849 --> 00:40:23,179
implement whatever the check is that we

1029
00:40:20,880 --> 00:40:29,430
actually want to do okay

1030
00:40:23,179 --> 00:40:32,699
so let's set up this loop I guess this

1031
00:40:29,429 --> 00:40:33,809
we have not yet initialized so the first

1032
00:40:32,699 --> 00:40:37,049
thing we need to figure out is which

1033
00:40:33,809 --> 00:40:38,610
tiles do we actually want to check right

1034
00:40:37,050 --> 00:40:41,370
like what are the tiles that actually

1035
00:40:38,610 --> 00:40:42,599
need to be checked and so that's

1036
00:40:41,369 --> 00:40:44,009
actually another discussion we kind of

1037
00:40:42,599 --> 00:40:45,750
have to have there's a lot involved here

1038
00:40:44,010 --> 00:40:47,160
I got explaining a lot of stuff we may

1039
00:40:45,750 --> 00:40:49,710
not get through all this tonight all

1040
00:40:47,159 --> 00:40:52,649
right so if you imagine what's happening

1041
00:40:49,710 --> 00:40:54,659
here collision detection is complicated

1042
00:40:52,650 --> 00:40:56,940
why can't I oh I'm just cuz I got some

1043
00:40:54,659 --> 00:40:59,849
stuff selected so many things I have to

1044
00:40:56,940 --> 00:41:04,920
do prerequisite wise all right so if you

1045
00:40:59,849 --> 00:41:06,690
imagine that I have my tile map then we

1046
00:41:04,920 --> 00:41:08,579
have to ask the question what are the

1047
00:41:06,690 --> 00:41:10,800
things that I actually have to collide

1048
00:41:08,579 --> 00:41:12,799
with if like my guy is say here and the

1049
00:41:10,800 --> 00:41:15,480
time step would move him to here right

1050
00:41:12,800 --> 00:41:17,250
well the answer is I need to check all

1051
00:41:15,480 --> 00:41:19,440
of the tiles that he could have gone

1052
00:41:17,250 --> 00:41:21,750
through so I need to check like the tile

1053
00:41:19,440 --> 00:41:23,760
that I'm standing on I need to check the

1054
00:41:21,750 --> 00:41:27,420
tile that that he would end up in and

1055
00:41:23,760 --> 00:41:28,950
all the tiles in between right and so if

1056
00:41:27,420 --> 00:41:30,420
you think about what that means it's

1057
00:41:28,949 --> 00:41:33,149
basically just a min max such a

1058
00:41:30,420 --> 00:41:35,010
situation right it's the minimum tile

1059
00:41:33,150 --> 00:41:36,420
lie and the maximum tile lie and the

1060
00:41:35,010 --> 00:41:38,010
minimum tile acts the maximum tile acts

1061
00:41:36,420 --> 00:41:40,320
of the two locations where he is and

1062
00:41:38,010 --> 00:41:41,760
where he's going because if he was going

1063
00:41:40,320 --> 00:41:43,920
to go like that or something like this

1064
00:41:41,760 --> 00:41:46,140
we'd want to check this whole rectangle

1065
00:41:43,920 --> 00:41:49,019
right because we want to check all of

1066
00:41:46,139 --> 00:41:51,029
these things for collision now really if

1067
00:41:49,019 --> 00:41:53,429
we want it to be that's a that's not

1068
00:41:51,030 --> 00:41:57,350
that's a conservative check right a

1069
00:41:53,429 --> 00:42:03,449
conservative check means it checks

1070
00:41:57,349 --> 00:42:06,299
perhaps more than enough things right a

1071
00:42:03,449 --> 00:42:08,189
conservative check is basically one that

1072
00:42:06,300 --> 00:42:09,360
that doesn't necessarily check the

1073
00:42:08,190 --> 00:42:10,769
fewest number of things but it

1074
00:42:09,360 --> 00:42:13,620
definitely checks all the things that

1075
00:42:10,769 --> 00:42:14,820
has to right we could do better in the

1076
00:42:13,619 --> 00:42:18,029
cases where we had something like this

1077
00:42:14,820 --> 00:42:19,800
by actually saying well okay the the

1078
00:42:18,030 --> 00:42:23,220
line the player moved

1079
00:42:19,800 --> 00:42:25,530
doesn't actually pass through these guys

1080
00:42:23,219 --> 00:42:27,119
here right it only passes through this

1081
00:42:25,530 --> 00:42:28,350
one this one this one in this one so we

1082
00:42:27,119 --> 00:42:29,880
don't have to do the full rectangle

1083
00:42:28,349 --> 00:42:30,569
right and that's definitely something to

1084
00:42:29,880 --> 00:42:32,070
think about when we're actually

1085
00:42:30,570 --> 00:42:35,400
implementing the engine for reals

1086
00:42:32,070 --> 00:42:36,510
because that could save time but again

1087
00:42:35,400 --> 00:42:37,590
these aren't gonna be very there's

1088
00:42:36,510 --> 00:42:39,090
really no way to pass through that of

1089
00:42:37,590 --> 00:42:41,010
any tiles unless you're moving extremely

1090
00:42:39,090 --> 00:42:42,930
quickly but yet just something to think

1091
00:42:41,010 --> 00:42:45,210
about so all we really need to do is a

1092
00:42:42,929 --> 00:42:47,279
conservative check at this point which

1093
00:42:45,210 --> 00:42:48,840
will basically say ok as long as we get

1094
00:42:47,280 --> 00:42:50,370
all the tiles we might check will be

1095
00:42:48,840 --> 00:42:53,160
fine doesn't matter if we check some of

1096
00:42:50,369 --> 00:42:54,750
the ones that we actually shouldn't have

1097
00:42:53,159 --> 00:42:56,759
have checked because that's just like

1098
00:42:54,750 --> 00:42:58,409
some waste of time and that's like stuff

1099
00:42:56,760 --> 00:43:00,330
to worry about in the optimization phase

1100
00:42:58,409 --> 00:43:02,399
of things so we don't actually care

1101
00:43:00,329 --> 00:43:04,259
about that for now so we want to do is

1102
00:43:02,400 --> 00:43:05,280
basically say ok the two places place

1103
00:43:04,260 --> 00:43:07,580
we're coming from the place we're going

1104
00:43:05,280 --> 00:43:10,500
to we want to take the min and Max tile

1105
00:43:07,579 --> 00:43:15,000
values of those and to know which tiles

1106
00:43:10,500 --> 00:43:16,440
to check so the min tile X is just going

1107
00:43:15,000 --> 00:43:18,059
to be the minimum I don't know if we'd

1108
00:43:16,440 --> 00:43:20,369
ever actually did did we actually ever

1109
00:43:18,059 --> 00:43:24,179
do minimum and maximum macros I don't

1110
00:43:20,369 --> 00:43:31,949
know if we did hand-made platform bed

1111
00:43:24,179 --> 00:43:33,480
age did we do yeah we didn't so there is

1112
00:43:31,949 --> 00:43:35,489
a C++ feature that someone was

1113
00:43:33,480 --> 00:43:36,929
mentioning that actually well okay we

1114
00:43:35,489 --> 00:43:38,969
don't actually need to use that for this

1115
00:43:36,929 --> 00:43:40,859
but I was reminded of something just now

1116
00:43:38,969 --> 00:43:43,469
that yeah that may be good to do in

1117
00:43:40,860 --> 00:43:46,740
future but anyway so if we go in here we

1118
00:43:43,469 --> 00:43:50,069
can define a min and Max basically if we

1119
00:43:46,739 --> 00:43:51,989
want to do a minimum or a maximum of two

1120
00:43:50,070 --> 00:43:54,960
things so I've got two values whatever

1121
00:43:51,989 --> 00:43:58,139
they are it's pretty easy to do that

1122
00:43:54,960 --> 00:44:01,019
check right we can just say if a is less

1123
00:43:58,139 --> 00:44:03,299
than B then the thing you wanted was a

1124
00:44:01,019 --> 00:44:06,809
right and if not the thing you wanted

1125
00:44:03,300 --> 00:44:08,580
was be pretty simple right and the same

1126
00:44:06,809 --> 00:44:10,980
is true for the maximum if a was greater

1127
00:44:08,579 --> 00:44:13,139
than B rank then you'd want a otherwise

1128
00:44:10,980 --> 00:44:14,429
you want B that's pretty much all I'm

1129
00:44:13,139 --> 00:44:18,000
talking about here very very

1130
00:44:14,429 --> 00:44:21,059
straightforward really nothing to it but

1131
00:44:18,000 --> 00:44:24,179
what I would like to do now is say okay

1132
00:44:21,059 --> 00:44:26,369
so I've got the old player P and I've

1133
00:44:24,179 --> 00:44:28,829
got the new player P so let's take

1134
00:44:26,369 --> 00:44:31,679
whatever his abs tile whichever one of

1135
00:44:28,829 --> 00:44:34,199
those is a is a greater I'm sorry is a

1136
00:44:31,679 --> 00:44:39,358
smaller for that one and greater

1137
00:44:34,199 --> 00:44:40,919
absolute tile index oops there we go and

1138
00:44:39,358 --> 00:44:42,719
then what I have to do is I have to add

1139
00:44:40,920 --> 00:44:44,670
one because I want one past the maximum

1140
00:44:42,719 --> 00:44:46,019
tile and again the reason I'm doing that

1141
00:44:44,670 --> 00:44:48,930
is to make sure that wrapping works

1142
00:44:46,019 --> 00:44:52,199
properly that makes sense so there we go

1143
00:44:48,929 --> 00:44:57,059
next I'll let's get that Y in there and

1144
00:44:52,199 --> 00:44:58,319
then this one will be there we go so

1145
00:44:57,059 --> 00:44:59,789
basically I just got to get that minimum

1146
00:44:58,320 --> 00:45:02,099
tile I got to get that back some tile

1147
00:44:59,789 --> 00:45:03,779
and then I'm gonna loop and add one to

1148
00:45:02,099 --> 00:45:06,570
it so I'm one passed it and then I loop

1149
00:45:03,780 --> 00:45:09,119
over those tiles making sure that I I

1150
00:45:06,570 --> 00:45:10,740
stop when I get to that that maximum one

1151
00:45:09,119 --> 00:45:12,059
right and again I had to use not equals

1152
00:45:10,739 --> 00:45:14,759
not less than because I want to support

1153
00:45:12,059 --> 00:45:16,500
wrapping and you can't support wrapping

1154
00:45:14,760 --> 00:45:18,359
with the less than because if I went if

1155
00:45:16,500 --> 00:45:21,269
I under flow here and the min tile was

1156
00:45:18,358 --> 00:45:22,380
less than then that would be no good all

1157
00:45:21,269 --> 00:45:28,230
right

1158
00:45:22,380 --> 00:45:30,240
so hmm what I need to do now say okay we

1159
00:45:28,230 --> 00:45:32,130
we're only checking things in our tile Z

1160
00:45:30,239 --> 00:45:35,219
so that the tile Z is not really

1161
00:45:32,130 --> 00:45:37,170
relevant at this point we then are going

1162
00:45:35,219 --> 00:45:40,049
to say we're gonna figure out where the

1163
00:45:37,170 --> 00:45:42,809
best place is to leave the player and

1164
00:45:40,050 --> 00:45:44,940
that's going to be again since I'm

1165
00:45:42,809 --> 00:45:48,358
checking against all of these I need to

1166
00:45:44,940 --> 00:45:49,980
check against multiple of these guys

1167
00:45:48,358 --> 00:45:51,929
right I have an equation that'll tell me

1168
00:45:49,980 --> 00:45:53,789
when I hit a wall like that but what I

1169
00:45:51,929 --> 00:45:55,139
haven't done is figured out well okay if

1170
00:45:53,789 --> 00:45:58,019
I have tons of walls what would I do

1171
00:45:55,139 --> 00:45:59,608
right and the answer is just well okay

1172
00:45:58,019 --> 00:46:00,420
if you've got tons of walls that you're

1173
00:45:59,608 --> 00:46:01,858
checking against so you're checking

1174
00:46:00,420 --> 00:46:03,659
against like this wall and this wall and

1175
00:46:01,858 --> 00:46:05,699
so on right then that puts you in a

1176
00:46:03,659 --> 00:46:06,449
situation where I've you know I've got

1177
00:46:05,699 --> 00:46:09,149
here

1178
00:46:06,449 --> 00:46:12,568
and I'm doing this sort of thing and I

1179
00:46:09,150 --> 00:46:14,760
test like you know this wall first and I

1180
00:46:12,568 --> 00:46:17,338
say oh okay you know he hit it here and

1181
00:46:14,760 --> 00:46:19,290
so that would be some tea that's like

1182
00:46:17,338 --> 00:46:21,719
some tea that I solved for is look all

1183
00:46:19,289 --> 00:46:24,269
that tea far right but there was

1184
00:46:21,719 --> 00:46:26,129
actually later on I find that I I test

1185
00:46:24,269 --> 00:46:27,599
this wall and there's another tea right

1186
00:46:26,130 --> 00:46:30,119
this the tea became he called the team

1187
00:46:27,599 --> 00:46:31,559
near when I did this equation right and

1188
00:46:30,119 --> 00:46:33,180
I need some way of figuring out well

1189
00:46:31,559 --> 00:46:34,710
which one do they actually stop at right

1190
00:46:33,179 --> 00:46:36,149
which one should I use when I loop

1191
00:46:34,710 --> 00:46:37,199
through all these walls and find all

1192
00:46:36,150 --> 00:46:38,670
these collision points how do I know

1193
00:46:37,199 --> 00:46:40,858
which one's the actual collision point I

1194
00:46:38,670 --> 00:46:42,869
should use well obviously we want the

1195
00:46:40,858 --> 00:46:45,449
closest one so we just want whichever

1196
00:46:42,869 --> 00:46:47,980
one let gave us the least value of T

1197
00:46:45,449 --> 00:46:49,899
right so really what we can do here is

1198
00:46:47,980 --> 00:46:52,329
say okay we've got a tea that we're

1199
00:46:49,900 --> 00:46:54,730
solving for and there's some best tea

1200
00:46:52,329 --> 00:46:57,130
which is really just the closest tea

1201
00:46:54,730 --> 00:46:59,889
right the key that was the the you know

1202
00:46:57,130 --> 00:47:01,358
the lowest right if that makes sense we

1203
00:46:59,889 --> 00:47:05,440
could also call that tea lowest or

1204
00:47:01,358 --> 00:47:07,900
something or team in right and then what

1205
00:47:05,440 --> 00:47:10,869
we want to do is say okay the minimum

1206
00:47:07,900 --> 00:47:11,740
value of T that we want to start with

1207
00:47:10,869 --> 00:47:14,140
meaning we don't want to entertain

1208
00:47:11,739 --> 00:47:16,389
anything further than that is just

1209
00:47:14,139 --> 00:47:18,699
whatever the value would be if we what

1210
00:47:16,389 --> 00:47:22,629
if we allowed the whole time step to go

1211
00:47:18,699 --> 00:47:25,480
forwards right so basically if I was

1212
00:47:22,630 --> 00:47:27,460
going to do the full difference between

1213
00:47:25,480 --> 00:47:30,429
the new player P and the old player P

1214
00:47:27,460 --> 00:47:32,199
that's what I would do right and so

1215
00:47:30,429 --> 00:47:34,389
basically that's just that's just

1216
00:47:32,199 --> 00:47:36,189
whatever the the player Delta is that

1217
00:47:34,389 --> 00:47:39,730
this that's this right here right

1218
00:47:36,190 --> 00:47:42,010
and so that player Delta is is basically

1219
00:47:39,730 --> 00:47:45,039
the vector that would move us between

1220
00:47:42,010 --> 00:47:46,960
them so if I take its length right if I

1221
00:47:45,039 --> 00:47:49,300
take its squared length

1222
00:47:46,960 --> 00:47:51,909
maybe I'll just I'll leave T min as a

1223
00:47:49,300 --> 00:47:57,100
squared but I'm gonna actually solve for

1224
00:47:51,909 --> 00:47:58,929
the actual T so we could also make T be

1225
00:47:57,099 --> 00:48:01,239
equal to one if that you know what let's

1226
00:47:58,929 --> 00:48:04,919
just say that T is equal to one let's do

1227
00:48:01,239 --> 00:48:07,118
it this way so I I made this decision

1228
00:48:04,920 --> 00:48:09,250
based on this thing I was talking about

1229
00:48:07,119 --> 00:48:11,890
back here right remember how I said T

1230
00:48:09,250 --> 00:48:13,900
and D are kind of fungible they have to

1231
00:48:11,889 --> 00:48:15,190
multiply together when when get when

1232
00:48:13,900 --> 00:48:16,990
they get to their maximum values they

1233
00:48:15,190 --> 00:48:18,340
have to multiply out to be wherever the

1234
00:48:16,989 --> 00:48:20,799
guy would end up at the end of the time

1235
00:48:18,340 --> 00:48:22,059
step but what I realized just now

1236
00:48:20,800 --> 00:48:24,280
because I saying like how much what am I

1237
00:48:22,059 --> 00:48:26,349
going to do it's gonna be better if I

1238
00:48:24,280 --> 00:48:29,080
just make the length of D be equal to

1239
00:48:26,349 --> 00:48:30,880
the total movement right right so that's

1240
00:48:29,079 --> 00:48:33,460
the total movement he should do and then

1241
00:48:30,880 --> 00:48:34,960
T will be equal to one and that way I

1242
00:48:33,460 --> 00:48:37,929
can just straight up set it at the

1243
00:48:34,960 --> 00:48:39,670
beginning and I don't have to really do

1244
00:48:37,929 --> 00:48:40,690
any other work so that'll be fine I can

1245
00:48:39,670 --> 00:48:42,579
straight up set to one that's the

1246
00:48:40,690 --> 00:48:44,559
maximum it should ever be so any

1247
00:48:42,579 --> 00:48:46,239
collisions that you find had better be

1248
00:48:44,559 --> 00:48:47,650
lower than that otherwise there were

1249
00:48:46,239 --> 00:48:49,868
collision that would have happened after

1250
00:48:47,650 --> 00:48:52,030
the time step would already be finished

1251
00:48:49,869 --> 00:48:54,070
somewhere out here like you know after

1252
00:48:52,030 --> 00:48:58,690
he would walk much further or something

1253
00:48:54,070 --> 00:49:01,059
like that so okay so assuming that that

1254
00:48:58,690 --> 00:49:01,750
is set up properly now now I just have

1255
00:49:01,059 --> 00:49:05,230
to go through

1256
00:49:01,750 --> 00:49:08,380
and if the tile is is not empty I have

1257
00:49:05,230 --> 00:49:11,800
to test all of the walls and see if they

1258
00:49:08,380 --> 00:49:14,019
need to update my my my team in right

1259
00:49:11,800 --> 00:49:16,119
and I really don't need this best player

1260
00:49:14,019 --> 00:49:18,489
P anymore because I just afterwards I

1261
00:49:16,119 --> 00:49:21,070
can reconstruct where I should be by

1262
00:49:18,489 --> 00:49:26,739
looking at the team in right so that's

1263
00:49:21,070 --> 00:49:29,980
pretty easy so all I need to do here is

1264
00:49:26,739 --> 00:49:31,299
say all right hmm I need to solve my

1265
00:49:29,980 --> 00:49:34,539
team in so what I'm going to do is going

1266
00:49:31,300 --> 00:49:36,849
to test each of the walls of of the of

1267
00:49:34,539 --> 00:49:38,739
the guy so I need to do like a test wall

1268
00:49:36,849 --> 00:49:42,099
if that makes sense

1269
00:49:38,739 --> 00:49:46,750
and so I've got the relative position of

1270
00:49:42,099 --> 00:49:50,619
the player I'll put that in a up with

1271
00:49:46,750 --> 00:49:53,800
that in our rel vector here so real new

1272
00:49:50,619 --> 00:49:54,970
player P I don't remember what we call

1273
00:49:53,800 --> 00:49:56,590
this like we said we're going to change

1274
00:49:54,969 --> 00:49:59,618
it to a 3d vector once we had them but

1275
00:49:56,590 --> 00:50:03,789
we didn't quite yet DXY oh I actually

1276
00:49:59,619 --> 00:50:06,550
can just use that directly there we go

1277
00:50:03,789 --> 00:50:10,690
so I could even do yeah they're mine

1278
00:50:06,550 --> 00:50:13,030
anyway so I've got my relative my

1279
00:50:10,690 --> 00:50:16,088
relative movement here that is going to

1280
00:50:13,030 --> 00:50:18,430
multiply by T obviously to give us the

1281
00:50:16,088 --> 00:50:19,900
the motion that we want so T min times

1282
00:50:18,429 --> 00:50:22,629
this relative vector would move me from

1283
00:50:19,900 --> 00:50:26,889
the players current position to wherever

1284
00:50:22,630 --> 00:50:28,030
oh sorry

1285
00:50:26,889 --> 00:50:30,309
yeah that's not that's not correct at

1286
00:50:28,030 --> 00:50:31,599
all what am I talking about that's

1287
00:50:30,309 --> 00:50:34,389
that's the real that's his position

1288
00:50:31,599 --> 00:50:36,970
relative to the tile my bad

1289
00:50:34,389 --> 00:50:38,829
the it's it's the player Delta is the

1290
00:50:36,969 --> 00:50:40,838
thing I was thinking of their player

1291
00:50:38,829 --> 00:50:42,039
Delta is the function is the vector

1292
00:50:40,838 --> 00:50:45,070
that's going to move us from our current

1293
00:50:42,039 --> 00:50:46,900
location times you know times T to be

1294
00:50:45,070 --> 00:50:49,240
wherever the the point is that we would

1295
00:50:46,900 --> 00:50:51,070
end up right so what we need to do now

1296
00:50:49,239 --> 00:50:52,389
is we need to actually compute this

1297
00:50:51,070 --> 00:50:55,780
equation that I said we were going to

1298
00:50:52,389 --> 00:50:59,009
compute for each wall and so we've got

1299
00:50:55,780 --> 00:51:04,349
it here right we said that it was TS

1300
00:50:59,010 --> 00:51:08,500
equals W X minus p 0 X the whole thing

1301
00:51:04,349 --> 00:51:10,510
right over DX right and again DX is just

1302
00:51:08,500 --> 00:51:14,349
that player Delta right so that's that

1303
00:51:10,510 --> 00:51:15,610
player Delta X and then the p 0 X that

1304
00:51:14,349 --> 00:51:17,230
was where we started from

1305
00:51:15,610 --> 00:51:19,720
and so we know what that is that's real

1306
00:51:17,230 --> 00:51:21,159
new player pee right that's that's where

1307
00:51:19,719 --> 00:51:22,659
the player is relative to the tile

1308
00:51:21,159 --> 00:51:24,129
that's his starting location and we're

1309
00:51:22,659 --> 00:51:27,279
doing all this relative to where the

1310
00:51:24,130 --> 00:51:29,619
tile is and then we've got that wall X

1311
00:51:27,280 --> 00:51:31,000
which is the the the actual point that

1312
00:51:29,619 --> 00:51:34,179
we want to test right so we've got the

1313
00:51:31,000 --> 00:51:35,739
wall X there so what we want to do here

1314
00:51:34,179 --> 00:51:37,449
is we want to make this into something

1315
00:51:35,739 --> 00:51:39,399
that we can call and this is again going

1316
00:51:37,449 --> 00:51:40,449
to be the the T result value we want to

1317
00:51:39,400 --> 00:51:42,130
make this into something that we can

1318
00:51:40,449 --> 00:51:45,250
call four times with four different

1319
00:51:42,130 --> 00:51:48,340
values so we can do test wall with like

1320
00:51:45,250 --> 00:51:51,309
the the rail player X and one of the

1321
00:51:48,340 --> 00:51:54,130
wall X's right so you know like the min

1322
00:51:51,309 --> 00:51:56,769
corner the minimum corner of the of the

1323
00:51:54,130 --> 00:52:00,430
tiles X value for example we want to say

1324
00:51:56,769 --> 00:52:04,150
that and then we can mm-hmm say what its

1325
00:52:00,429 --> 00:52:06,579
bounds are in Y so it's its min corner Y

1326
00:52:04,150 --> 00:52:08,500
and Max corner y so basically this is

1327
00:52:06,579 --> 00:52:10,960
the location of the wall these are the

1328
00:52:08,500 --> 00:52:14,380
bounds where the wall is and then we've

1329
00:52:10,960 --> 00:52:22,869
got our R value that we're actually oh

1330
00:52:14,380 --> 00:52:27,760
no that's sad the stream is over we're

1331
00:52:22,869 --> 00:52:30,069
so close to well I guess test well we'll

1332
00:52:27,760 --> 00:52:33,340
have to wait till tomorrow what are you

1333
00:52:30,070 --> 00:52:36,550
gonna do all I was going to say is all

1334
00:52:33,340 --> 00:52:38,530
right so the test well function right it

1335
00:52:36,550 --> 00:52:43,090
it takes the wall information and then

1336
00:52:38,530 --> 00:52:50,500
you know it takes the player the real

1337
00:52:43,090 --> 00:52:52,300
new player whatever the yeah I'm so

1338
00:52:50,500 --> 00:52:54,960
deflated right now can you see how

1339
00:52:52,300 --> 00:52:54,960
deflated I am

1340
00:52:59,639 --> 00:53:07,569
well some days go better than others you

1341
00:53:04,929 --> 00:53:08,919
know you can't always have the Q&amp;A start

1342
00:53:07,570 --> 00:53:10,450
at just the right time and I have to

1343
00:53:08,920 --> 00:53:13,329
admit we were on a streak I think we had

1344
00:53:10,449 --> 00:53:14,019
two days we had one day yes yes

1345
00:53:13,329 --> 00:53:15,130
yesterday

1346
00:53:14,019 --> 00:53:17,050
and then one day I think maybe was

1347
00:53:15,130 --> 00:53:22,840
Thursday where the Q&amp;A started like

1348
00:53:17,050 --> 00:53:24,310
exactly when I was done so you know what

1349
00:53:22,840 --> 00:53:25,809
are you gonna do I guess we'll finish it

1350
00:53:24,309 --> 00:53:28,059
tomorrow we're mostly there we just have

1351
00:53:25,809 --> 00:53:30,759
to figure out a way to phrase this so

1352
00:53:28,059 --> 00:53:34,779
that we can test each wall so we'll just

1353
00:53:30,760 --> 00:53:37,840
say to do test all four walls and take

1354
00:53:34,780 --> 00:53:40,810
the minimum see so that's really all we

1355
00:53:37,840 --> 00:53:43,720
needed to do so what are you gonna do

1356
00:53:40,809 --> 00:53:46,750
alright okay

1357
00:53:43,719 --> 00:53:48,159
I will go to the QA deflated as I am of

1358
00:53:46,750 --> 00:53:49,659
not being able to finish the code I

1359
00:53:48,159 --> 00:53:52,059
always hate it when we get to a piece of

1360
00:53:49,659 --> 00:53:53,529
code and I can't finish writing it that

1361
00:53:52,059 --> 00:53:54,759
something doesn't really happen much in

1362
00:53:53,530 --> 00:53:56,590
real life right because you just program

1363
00:53:54,760 --> 00:53:59,290
a little longer but when you've got a

1364
00:53:56,590 --> 00:54:01,329
schedule to skip to yeah you don't get

1365
00:53:59,289 --> 00:54:02,650
that opportunity so we're still

1366
00:54:01,329 --> 00:54:03,880
compiling cuz we're still using the

1367
00:54:02,650 --> 00:54:04,960
other branch of the code so we don't

1368
00:54:03,880 --> 00:54:06,789
have to worry about that the code that

1369
00:54:04,960 --> 00:54:07,990
we post tonight will still compile just

1370
00:54:06,789 --> 00:54:10,210
fine but we just won't have turned on

1371
00:54:07,989 --> 00:54:11,529
our actual collision detection yet which

1372
00:54:10,210 --> 00:54:15,429
we'd like to do and so tomorrow we'll go

1373
00:54:11,530 --> 00:54:19,119
ahead and do that all right so please

1374
00:54:15,429 --> 00:54:20,949
post questions now with Q :

1375
00:54:19,119 --> 00:54:22,600
in front of them so I can see them and

1376
00:54:20,949 --> 00:54:24,339
please keep the questions and stuff

1377
00:54:22,599 --> 00:54:29,440
we've done on today's stream as

1378
00:54:24,340 --> 00:54:31,570
deflating as it was and and if you want

1379
00:54:29,440 --> 00:54:34,150
to ask things that are or anything for

1380
00:54:31,570 --> 00:54:36,490
today's dream or previous dreams if you

1381
00:54:34,150 --> 00:54:38,500
want to ask questions about stuff that's

1382
00:54:36,489 --> 00:54:40,239
off topic you can do that on the pre

1383
00:54:38,500 --> 00:54:42,699
stream so come 15 minutes early tomorrow

1384
00:54:40,239 --> 00:54:44,139
to the stream and I'll be on answering

1385
00:54:42,699 --> 00:54:45,699
questions that are off topic but please

1386
00:54:44,139 --> 00:54:48,190
try to keep the ones in the official Q&amp;A

1387
00:54:45,699 --> 00:54:50,969
here to the actual stuff we coded today

1388
00:54:48,190 --> 00:54:50,970
are on previous days

1389
00:54:51,449 --> 00:54:58,769
so deflating stopping programming in the

1390
00:54:55,420 --> 00:55:02,829
middle of stuff of something is so

1391
00:54:58,769 --> 00:55:04,869
unsatisfying yeah that's all I can

1392
00:55:02,829 --> 00:55:07,500
really say about that she's very very

1393
00:55:04,869 --> 00:55:07,500
unsatisfying

1394
00:55:16,360 --> 00:55:18,990
yeah

1395
00:55:26,559 --> 00:55:31,239
I missed when you changed from F P 2 ft

1396
00:55:28,960 --> 00:55:33,579
when why did you decide to switch so

1397
00:55:31,239 --> 00:55:37,299
basically I can explain that in a little

1398
00:55:33,579 --> 00:55:39,489
more detail here so basically the reason

1399
00:55:37,300 --> 00:55:40,539
that I decided to go with F of T and you

1400
00:55:39,489 --> 00:55:42,039
remember I was kind of hemming and

1401
00:55:40,539 --> 00:55:43,449
hawing about it on Friday I couldn't

1402
00:55:42,039 --> 00:55:47,079
decide which one I wanted to do and so

1403
00:55:43,449 --> 00:55:52,299
on and so here's the reasoning behind it

1404
00:55:47,079 --> 00:55:54,239
so f of P right all right I should say F

1405
00:55:52,300 --> 00:56:03,670
of P is what I call it search in P

1406
00:55:54,239 --> 00:56:06,279
versus certainty right so search and P

1407
00:56:03,670 --> 00:56:12,550
has some nice properties right search

1408
00:56:06,280 --> 00:56:17,730
and P has is is bounded in in iterations

1409
00:56:12,550 --> 00:56:22,000
right where a certainty is unbounded in

1410
00:56:17,730 --> 00:56:27,099
iterations to produce the correct answer

1411
00:56:22,000 --> 00:56:33,750
right search in P allows sort of

1412
00:56:27,099 --> 00:56:38,980
smoothly ignoring geometry bugs

1413
00:56:33,750 --> 00:56:45,519
whereas this gets stuck right geometry

1414
00:56:38,980 --> 00:56:48,179
bugs right so these are like pluses for

1415
00:56:45,519 --> 00:56:51,070
search and P and minuses for this but

1416
00:56:48,179 --> 00:56:53,769
search in P has a pretty big negative

1417
00:56:51,070 --> 00:56:56,230
that search and T has is positive and

1418
00:56:53,769 --> 00:56:57,130
there's there's really two positives one

1419
00:56:56,230 --> 00:57:00,039
of which I don't think we care about

1420
00:56:57,130 --> 00:57:02,740
much but one of which we really do so

1421
00:57:00,039 --> 00:57:07,980
search in P one of the huge negatives is

1422
00:57:02,739 --> 00:57:10,479
you have to be able to search MP right

1423
00:57:07,980 --> 00:57:13,240
where a search and T doesn't have to do

1424
00:57:10,480 --> 00:57:16,929
that so you never need to know you never

1425
00:57:13,239 --> 00:57:20,589
need to know need to form the search

1426
00:57:16,929 --> 00:57:22,480
space the space right the P space and

1427
00:57:20,590 --> 00:57:25,210
what that means is like with search and

1428
00:57:22,480 --> 00:57:27,849
P right if you imagine I'm I've got some

1429
00:57:25,210 --> 00:57:29,740
crazy collision geometry here in order

1430
00:57:27,849 --> 00:57:31,900
to search for the closest point to

1431
00:57:29,739 --> 00:57:33,699
something like here which is what search

1432
00:57:31,900 --> 00:57:35,470
and P is doing it's got to be able to

1433
00:57:33,699 --> 00:57:37,000
actually know how to look through the

1434
00:57:35,469 --> 00:57:39,459
space and figure out what that closest

1435
00:57:37,000 --> 00:57:40,150
point is search and T never does that

1436
00:57:39,460 --> 00:57:41,650
sir

1437
00:57:40,150 --> 00:57:42,970
he just tries to drive in a straight

1438
00:57:41,650 --> 00:57:45,400
line if it hit something it changes

1439
00:57:42,969 --> 00:57:47,078
direction that's it so it never even

1440
00:57:45,400 --> 00:57:49,539
knows really necessarily what the space

1441
00:57:47,079 --> 00:57:52,028
looks like and that can be much more

1442
00:57:49,539 --> 00:57:54,039
efficient right so this is definitely

1443
00:57:52,028 --> 00:57:58,150
the more efficient algorithm in the

1444
00:57:54,039 --> 00:58:04,140
normal case right the other problem is

1445
00:57:58,150 --> 00:58:08,079
this is handles like bounciness better

1446
00:58:04,139 --> 00:58:10,000
right and this doesn't and that's

1447
00:58:08,079 --> 00:58:11,680
because with search and P you don't

1448
00:58:10,000 --> 00:58:13,179
really know how many times you would

1449
00:58:11,679 --> 00:58:15,338
have collided with a wall to get where

1450
00:58:13,179 --> 00:58:16,750
you are and stuff like that so this is a

1451
00:58:15,338 --> 00:58:19,420
little bit better if you want bouncy

1452
00:58:16,750 --> 00:58:21,969
things this is better usually if you get

1453
00:58:19,420 --> 00:58:23,470
basically this is a plus up until the

1454
00:58:21,969 --> 00:58:25,588
point where you want things to bounce a

1455
00:58:23,469 --> 00:58:30,189
lot and then this becomes a plus right

1456
00:58:25,588 --> 00:58:32,528
and so really search and tea with fixing

1457
00:58:30,190 --> 00:58:34,960
this unbounded in iterations problem so

1458
00:58:32,528 --> 00:58:37,989
just full-on saying will produce the

1459
00:58:34,960 --> 00:58:40,659
wrong result by bounding it arbitrarily

1460
00:58:37,989 --> 00:58:42,848
just is going to be way more efficient

1461
00:58:40,659 --> 00:58:46,149
than this is and so I just kind of

1462
00:58:42,849 --> 00:58:47,890
decided this is you know just not gonna

1463
00:58:46,150 --> 00:58:51,220
be a good algorithm for us to choose

1464
00:58:47,889 --> 00:58:56,019
because we don't really care that much

1465
00:58:51,219 --> 00:58:58,058
about this and we just give up too much

1466
00:58:56,019 --> 00:59:01,000
because we have to do all this extra

1467
00:58:58,059 --> 00:59:03,069
work to produce the space in the witness

1468
00:59:01,000 --> 00:59:07,179
we have to produce the space anyway for

1469
00:59:03,068 --> 00:59:09,250
other reasons and so that's why I chose

1470
00:59:07,179 --> 00:59:10,899
to well I even choose to do this this

1471
00:59:09,250 --> 00:59:12,849
actually just turned out to be the most

1472
00:59:10,900 --> 00:59:14,559
efficient algorithm in the witness

1473
00:59:12,849 --> 00:59:16,900
because of the way we were doing things

1474
00:59:14,559 --> 00:59:18,220
but this is gonna be way more efficient

1475
00:59:16,900 --> 00:59:20,710
for a Mahiro I think because we never

1476
00:59:18,219 --> 00:59:23,129
build these spaces so hopefully that

1477
00:59:20,710 --> 00:59:23,130
makes some sense

1478
00:59:32,548 --> 00:59:35,849
how does the aim handle the state of the

1479
00:59:34,498 --> 00:59:36,598
two separate players when they are on

1480
00:59:35,849 --> 00:59:38,609
different floors

1481
00:59:36,599 --> 00:59:41,219
well the collision detector just works

1482
00:59:38,608 --> 00:59:43,409
right because it's it's using the the

1483
00:59:41,219 --> 00:59:45,389
tile Z of wherever the entity that is

1484
00:59:43,409 --> 00:59:49,018
that it's colliding so that's just

1485
00:59:45,389 --> 00:59:50,188
that's doesn't matter it's really the

1486
00:59:49,018 --> 00:59:51,448
rendering that we have to worry about

1487
00:59:50,188 --> 00:59:54,568
because we don't know what we're going

1488
00:59:51,449 --> 00:59:56,039
to do when people go off screen what we

1489
00:59:54,568 --> 00:59:57,748
may do is just say that only the main

1490
00:59:56,039 --> 01:00:01,469
character determines where the screen is

1491
00:59:57,748 --> 01:00:03,568
and the secondary character can't go

1492
01:00:01,469 --> 01:00:07,199
can't leave the screen we might just

1493
01:00:03,568 --> 01:00:09,028
make that rule so that we don't have to

1494
01:00:07,199 --> 01:00:11,599
have like split screen or something

1495
01:00:09,028 --> 01:00:11,599
that's going to be weird

1496
01:00:18,699 --> 01:00:23,210
why is the code complexity for piece art

1497
01:00:21,260 --> 01:00:25,340
so much greater than T search so the

1498
01:00:23,210 --> 01:00:29,030
reason is because of that of that

1499
01:00:25,340 --> 01:00:33,710
process of searching so basically i've

1500
01:00:29,030 --> 01:00:35,630
already told you you know 25 percent or

1501
01:00:33,710 --> 01:00:38,630
50 percent of the code necessary like

1502
01:00:35,630 --> 01:00:39,860
this is not that far from the complete

1503
01:00:38,630 --> 01:00:41,300
code that we're actually going to need

1504
01:00:39,860 --> 01:00:43,460
to implement certainty

1505
01:00:41,300 --> 01:00:45,769
it's just iterating doing this a bunch

1506
01:00:43,460 --> 01:00:48,980
of times right and we're basically all

1507
01:00:45,769 --> 01:00:50,300
we're gonna do when we move to a better

1508
01:00:48,980 --> 01:00:52,369
collision detection than what we're

1509
01:00:50,300 --> 01:00:54,470
doing with them then just point verses

1510
01:00:52,369 --> 01:00:58,239
infinite wall when we move to like

1511
01:00:54,469 --> 01:01:02,509
circle or ellipse versus sort of

1512
01:00:58,239 --> 01:01:04,159
arbitrary shape or something right all

1513
01:01:02,510 --> 01:01:06,020
we're gonna do is have a fancier set of

1514
01:01:04,159 --> 01:01:07,549
equations here like a slightly fancier

1515
01:01:06,019 --> 01:01:10,099
set right that's all that's gonna happen

1516
01:01:07,550 --> 01:01:13,280
but the algorithm is the same it's still

1517
01:01:10,099 --> 01:01:15,289
just like okay drive along the line see

1518
01:01:13,280 --> 01:01:16,760
where you when you hit something change

1519
01:01:15,289 --> 01:01:18,409
the direction you're driving drive

1520
01:01:16,760 --> 01:01:20,540
Samora see if you hit something that's

1521
01:01:18,409 --> 01:01:24,170
all that's it that's all that happens

1522
01:01:20,539 --> 01:01:26,630
it's nothing else going on and so given

1523
01:01:24,170 --> 01:01:28,730
that that's the case it's just really

1524
01:01:26,630 --> 01:01:31,090
simple code complexity wise to implement

1525
01:01:28,730 --> 01:01:35,240
this it's just the simplest darn thing

1526
01:01:31,090 --> 01:01:37,910
and if you want to do search in P it's

1527
01:01:35,239 --> 01:01:40,549
much harder search and P is basically a

1528
01:01:37,909 --> 01:01:42,500
closest point problem it says take all

1529
01:01:40,550 --> 01:01:44,030
the geometry that you've got whatever it

1530
01:01:42,500 --> 01:01:46,219
is that the person's walking through

1531
01:01:44,030 --> 01:01:49,040
take a point and I want to know the

1532
01:01:46,219 --> 01:01:51,199
closest point on where you know to that

1533
01:01:49,039 --> 01:01:52,909
point and so what you have to do is you

1534
01:01:51,199 --> 01:01:55,969
then have to know how to be able to

1535
01:01:52,909 --> 01:01:58,730
search firstly it's in two things you

1536
01:01:55,969 --> 01:02:00,469
have to be able to search all along the

1537
01:01:58,730 --> 01:02:02,869
edge of all the geometry to see what the

1538
01:02:00,469 --> 01:02:08,199
closest point actually would be which is

1539
01:02:02,869 --> 01:02:11,089
very complicated and you have to do that

1540
01:02:08,199 --> 01:02:12,859
for another shape right because whatever

1541
01:02:11,090 --> 01:02:14,870
the shape the player is it's not just

1542
01:02:12,860 --> 01:02:16,789
really closest point it's closest

1543
01:02:14,869 --> 01:02:19,909
extruded point so it's like it's the

1544
01:02:16,789 --> 01:02:22,340
closest center of some collision shape

1545
01:02:19,909 --> 01:02:23,929
right so in the case of a player who's

1546
01:02:22,340 --> 01:02:26,900
represented by an ellipse or something

1547
01:02:23,929 --> 01:02:28,789
it's the closest place and ellipse could

1548
01:02:26,900 --> 01:02:30,619
be that's close to that point or

1549
01:02:28,789 --> 01:02:31,880
something right and so you have to like

1550
01:02:30,619 --> 01:02:33,469
minkowski your geometry

1551
01:02:31,880 --> 01:02:35,539
or do other kind of stuff there it's

1552
01:02:33,469 --> 01:02:37,399
complicated whereas we will just be able

1553
01:02:35,539 --> 01:02:40,970
to bake that right into these when we do

1554
01:02:37,400 --> 01:02:43,130
them you'll see so that's complicated

1555
01:02:40,969 --> 01:02:44,179
but what's also complicated is the fact

1556
01:02:43,130 --> 01:02:45,858
you have to know whether the player

1557
01:02:44,179 --> 01:02:48,108
could have gotten there so you still

1558
01:02:45,858 --> 01:02:49,460
have to end up doing a passing thing to

1559
01:02:48,108 --> 01:02:50,389
see whether the player could get there

1560
01:02:49,460 --> 01:02:53,088
because you don't want them to be able

1561
01:02:50,389 --> 01:02:55,338
to tunnel through walls with this system

1562
01:02:53,088 --> 01:02:58,969
right and so depending on what you

1563
01:02:55,338 --> 01:03:01,190
actually have this is either very

1564
01:02:58,969 --> 01:03:03,500
expensive or free in the case of the

1565
01:03:01,190 --> 01:03:04,789
witness it was free to do this but in

1566
01:03:03,500 --> 01:03:05,960
the case of this game it would be very

1567
01:03:04,789 --> 01:03:08,170
expensive and this is going to be much

1568
01:03:05,960 --> 01:03:08,170
cheaper

1569
01:03:20,079 --> 01:03:26,028
why not treat the map as a matrix and

1570
01:03:23,690 --> 01:03:29,329
validate objects and its collisions

1571
01:03:26,028 --> 01:03:34,969
through coordinates what problems can

1572
01:03:29,329 --> 01:03:39,048
appear with this mindset I'm not really

1573
01:03:34,969 --> 01:03:40,608
sure what you mean by that if the map

1574
01:03:39,048 --> 01:03:41,838
itself was a matrix that's really no

1575
01:03:40,608 --> 01:03:44,170
different than what we have now which is

1576
01:03:41,838 --> 01:03:46,818
just a tile map and the problem is that

1577
01:03:44,170 --> 01:03:49,278
when you look to see you need to know

1578
01:03:46,818 --> 01:03:52,909
between two points you need to know if

1579
01:03:49,278 --> 01:03:54,409
you hit anything in between and so you

1580
01:03:52,909 --> 01:03:57,558
still have to write this collision code

1581
01:03:54,409 --> 01:03:58,548
for the matrix thing but really remember

1582
01:03:57,559 --> 01:04:02,209
we're gonna be doing something better

1583
01:03:58,548 --> 01:04:03,498
than a tile map so we're just using the

1584
01:04:02,208 --> 01:04:05,208
tile map right now because that's all we

1585
01:04:03,498 --> 01:04:06,858
actually have is a world representation

1586
01:04:05,208 --> 01:04:08,989
but we're actually gonna be allowing all

1587
01:04:06,858 --> 01:04:10,429
kinds of crazy stuff for closing section

1588
01:04:08,989 --> 01:04:12,708
like we're gonna be allowing arbitrary

1589
01:04:10,429 --> 01:04:14,208
geometries for close detection so we

1590
01:04:12,708 --> 01:04:17,198
don't a matrix really wouldn't be able

1591
01:04:14,208 --> 01:04:17,198
to store the world anyway

1592
01:04:24,239 --> 01:04:29,909
so your towels are the 6:17 by ten

1593
01:04:27,300 --> 01:04:31,650
blocks I'm fuzzy on collision detection

1594
01:04:29,909 --> 01:04:33,598
as the player moves from tile to tile I

1595
01:04:31,650 --> 01:04:35,400
get lost on the world coordinate tiles

1596
01:04:33,599 --> 01:04:42,269
coordinate and screen coordinates still

1597
01:04:35,400 --> 01:04:43,619
I guess well I mean we've kind of gone

1598
01:04:42,269 --> 01:04:45,239
over this a bunch of times so I'm not

1599
01:04:43,619 --> 01:04:47,970
sure how to elaborate on it on anyway

1600
01:04:45,239 --> 01:04:50,129
other than how we already have basically

1601
01:04:47,969 --> 01:04:52,049
our tiles you can just think of the

1602
01:04:50,130 --> 01:04:56,630
tiles as a giant 4 billion by 4 billion

1603
01:04:52,050 --> 01:05:00,330
array right so we've got ABS tile X and

1604
01:04:56,630 --> 01:05:03,838
ABS tile Y for a person's location and

1605
01:05:00,329 --> 01:05:08,730
ABS tiles II just think of these as a

1606
01:05:03,838 --> 01:05:12,480
giant 4 billion by you know by 4 billion

1607
01:05:08,730 --> 01:05:15,300
by 4 billion world ok so it's a giant

1608
01:05:12,480 --> 01:05:17,579
cube made up of tiny cubes that's 4

1609
01:05:15,300 --> 01:05:23,869
billion by 4 billion by 4 billion right

1610
01:05:17,579 --> 01:05:23,869
you know let's let's go over here

1611
01:05:28,800 --> 01:05:36,170
okay so this is our world right this is

1612
01:05:32,550 --> 01:05:39,810
four billion long this is 4 billion long

1613
01:05:36,170 --> 01:05:41,309
this is for a billion long in tiles so

1614
01:05:39,809 --> 01:05:44,820
each tile is this tiny little thing

1615
01:05:41,309 --> 01:05:48,029
right and then at any given time we take

1616
01:05:44,820 --> 01:05:50,519
out a little slice of that world right

1617
01:05:48,030 --> 01:05:52,140
that's seventeen by ten or whatever we

1618
01:05:50,519 --> 01:05:54,329
said it was seventeen by nine something

1619
01:05:52,139 --> 01:05:55,259
like that seventeen by ten who knows I

1620
01:05:54,329 --> 01:05:57,239
can't remember what we're drawing

1621
01:05:55,260 --> 01:05:59,130
something like that we take out a little

1622
01:05:57,239 --> 01:06:01,019
slice from somewhere in there and we

1623
01:05:59,130 --> 01:06:05,519
draw it on the screen as the tile map

1624
01:06:01,019 --> 01:06:07,769
right that's all we're doing now we have

1625
01:06:05,519 --> 01:06:09,900
a sparse storage mechanism that breaks

1626
01:06:07,769 --> 01:06:11,190
up this cube since we can't store for a

1627
01:06:09,900 --> 01:06:13,349
billion by four billion by four billion

1628
01:06:11,190 --> 01:06:15,030
that that basically just stores the

1629
01:06:13,349 --> 01:06:18,210
places where there's actually part world

1630
01:06:15,030 --> 01:06:19,860
data in them and so we have these tile

1631
01:06:18,210 --> 01:06:20,940
chunks that are pieces that are just a

1632
01:06:19,860 --> 01:06:21,900
storage thing but you don't have to

1633
01:06:20,940 --> 01:06:22,769
think about those where you think about

1634
01:06:21,900 --> 01:06:24,240
collision detection because Visnic

1635
01:06:22,769 --> 01:06:25,800
doesn't care it doesn't care where that

1636
01:06:24,239 --> 01:06:27,209
data is coming from it's just going to

1637
01:06:25,800 --> 01:06:29,340
do the iteration of the absolute tile

1638
01:06:27,210 --> 01:06:30,659
and disease right and so for the

1639
01:06:29,340 --> 01:06:32,910
collision detection all that happens is

1640
01:06:30,659 --> 01:06:35,460
we just pull out those tile use and go

1641
01:06:32,909 --> 01:06:38,009
okay take where the player was and take

1642
01:06:35,460 --> 01:06:39,840
where he's going and let's check all of

1643
01:06:38,010 --> 01:06:41,910
the tiles that he could that are around

1644
01:06:39,840 --> 01:06:44,130
there to see if any of them are solid

1645
01:06:41,909 --> 01:06:46,619
and if they are figure out where he

1646
01:06:44,130 --> 01:06:48,539
would hit them and and stop his motion

1647
01:06:46,619 --> 01:06:53,460
there and that's what we were trying to

1648
01:06:48,539 --> 01:06:55,110
write right now can this week's time to

1649
01:06:53,460 --> 01:06:57,829
3d collision yes the equations are the

1650
01:06:55,110 --> 01:06:57,829
same in 2d and 3d

1651
01:07:05,590 --> 01:07:08,920
could you check collisions by looking at

1652
01:07:07,510 --> 01:07:10,570
the players position and seeing if it's

1653
01:07:08,920 --> 01:07:12,760
in the inner side of the vectors along

1654
01:07:10,570 --> 01:07:14,289
the walls like it's up from the bottom

1655
01:07:12,760 --> 01:07:16,920
well vector it's to the right of the

1656
01:07:14,289 --> 01:07:19,329
left ball vector yes as an optimization

1657
01:07:16,920 --> 01:07:22,030
you can definitely do that

1658
01:07:19,329 --> 01:07:23,949
so one optimization that you can do and

1659
01:07:22,030 --> 01:07:27,310
we'll kind of we'll probably get to some

1660
01:07:23,949 --> 01:07:29,230
of these well it's kind of hard to say

1661
01:07:27,309 --> 01:07:30,969
which exactly ones we'll end up doing as

1662
01:07:29,230 --> 01:07:33,219
depends how we do things but if you

1663
01:07:30,969 --> 01:07:35,679
imagine that you've got a guy here's our

1664
01:07:33,219 --> 01:07:38,109
p0 and here's our D so there's our

1665
01:07:35,679 --> 01:07:39,909
direction and we're going along here and

1666
01:07:38,110 --> 01:07:42,340
we want to know when we get this thing

1667
01:07:39,909 --> 01:07:45,609
so we're gonna check against these walls

1668
01:07:42,340 --> 01:07:50,800
right here are all the collision points

1669
01:07:45,610 --> 01:07:52,840
we would find right here's when he hits

1670
01:07:50,800 --> 01:07:54,820
this wall here's when he hits this wall

1671
01:07:52,840 --> 01:07:56,920
here's where he hits this wall and

1672
01:07:54,820 --> 01:07:58,330
here's where he hits this wall now these

1673
01:07:56,920 --> 01:07:59,769
two collisions would get thrown out

1674
01:07:58,329 --> 01:08:02,170
immediately because they're outside the

1675
01:07:59,769 --> 01:08:04,630
bounds that we allowed for the wall so

1676
01:08:02,170 --> 01:08:06,789
we would throw those out right but these

1677
01:08:04,630 --> 01:08:08,230
two collisions are both valid and then

1678
01:08:06,789 --> 01:08:10,710
we would take the closest one which is

1679
01:08:08,230 --> 01:08:13,269
this one and what you were talking about

1680
01:08:10,710 --> 01:08:14,710
is can we use the information about

1681
01:08:13,269 --> 01:08:15,639
where the player is to maybe do less

1682
01:08:14,710 --> 01:08:17,109
work here at least I think that's what

1683
01:08:15,639 --> 01:08:19,389
you were saying and the answer is yes we

1684
01:08:17,109 --> 01:08:20,859
could what we could do is since we know

1685
01:08:19,390 --> 01:08:23,260
that these walls basically have a

1686
01:08:20,859 --> 01:08:25,390
sightedness to them right we basically

1687
01:08:23,260 --> 01:08:26,949
know that in here you cannot stand and

1688
01:08:25,390 --> 01:08:29,050
so the walls kind of have a direction

1689
01:08:26,949 --> 01:08:33,880
they kind of point outwards if you will

1690
01:08:29,050 --> 01:08:36,760
right what we could do is see which

1691
01:08:33,880 --> 01:08:39,789
direction the player is moving or which

1692
01:08:36,760 --> 01:08:42,940
direction he is which direction we could

1693
01:08:39,789 --> 01:08:47,050
see where the player is relative to the

1694
01:08:42,939 --> 01:08:50,229
thing and only take those walls that are

1695
01:08:47,050 --> 01:08:52,539
pointing towards him because we know he

1696
01:08:50,229 --> 01:08:54,159
can't ever point he can't ever hit a

1697
01:08:52,539 --> 01:08:56,649
wall facing away from him because he hit

1698
01:08:54,159 --> 01:08:59,019
some other wall first so we could just

1699
01:08:56,649 --> 01:09:00,969
flat-out reject these two because they

1700
01:08:59,020 --> 01:09:02,770
are not pointing towards him only these

1701
01:09:00,970 --> 01:09:05,470
are pointing towards him and how would

1702
01:09:02,770 --> 01:09:08,380
you compute that well it's our old

1703
01:09:05,470 --> 01:09:09,369
friend the inner product a transpose V

1704
01:09:08,380 --> 01:09:11,440
we'll compute that

1705
01:09:09,369 --> 01:09:13,479
how will it compute that well you

1706
01:09:11,439 --> 01:09:17,919
remember it maps one vector onto another

1707
01:09:13,479 --> 01:09:19,419
it is a B cosine theta and what does

1708
01:09:17,920 --> 01:09:23,109
facing someone

1709
01:09:19,420 --> 01:09:26,199
well if we took the sort of direction

1710
01:09:23,109 --> 01:09:29,909
from the the tile to the guy right

1711
01:09:26,199 --> 01:09:33,550
we know that it's this direction we want

1712
01:09:29,909 --> 01:09:35,739
vectors that are not pointing backwards

1713
01:09:33,550 --> 01:09:38,320
from that vector right we want these

1714
01:09:35,739 --> 01:09:41,229
vectors not these vectors so what we can

1715
01:09:38,319 --> 01:09:44,289
do is say all right the angle between

1716
01:09:41,229 --> 01:09:47,349
those guys the theta between this and

1717
01:09:44,289 --> 01:09:50,319
this and this and this right has to be

1718
01:09:47,350 --> 01:09:52,680
less than 90 degrees right if the angle

1719
01:09:50,319 --> 01:09:56,049
between them was greater than 90 degrees

1720
01:09:52,680 --> 01:09:58,329
you'd be in trouble what do we know

1721
01:09:56,050 --> 01:10:01,989
about cosine theta well cosine theta

1722
01:09:58,329 --> 01:10:05,409
right if cosine if that angle if theta

1723
01:10:01,989 --> 01:10:07,899
is less than 90 degrees right then

1724
01:10:05,409 --> 01:10:10,829
cosine is positive but if it's greater

1725
01:10:07,899 --> 01:10:13,119
than 90 degrees right then it's negative

1726
01:10:10,829 --> 01:10:16,059
until it flips back around again right

1727
01:10:13,119 --> 01:10:18,340
so we compute that dot product we could

1728
01:10:16,060 --> 01:10:20,440
actually just use the sine of a

1729
01:10:18,340 --> 01:10:23,199
transpose B to tell us which of these

1730
01:10:20,439 --> 01:10:24,879
would actually be in play so you

1731
01:10:23,199 --> 01:10:26,439
absolutely could do what you were saying

1732
01:10:24,880 --> 01:10:29,380
it's just an optimization but it'd be a

1733
01:10:26,439 --> 01:10:30,879
nice optimization right so again we'll

1734
01:10:29,380 --> 01:10:32,970
look at stuff like that a little later

1735
01:10:30,880 --> 01:10:32,970
on

1736
01:10:43,189 --> 01:10:47,819
what's your point on zero length vector

1737
01:10:45,630 --> 01:10:50,250
normalization and what behavior does

1738
01:10:47,819 --> 01:10:55,889
your code have so we haven't really

1739
01:10:50,250 --> 01:10:58,408
quite gotten to that yet but yeah if you

1740
01:10:55,889 --> 01:11:00,599
notice here we don't have any

1741
01:10:58,408 --> 01:11:03,988
normalization happening when things are

1742
01:11:00,599 --> 01:11:05,520
zero because we're only looking at one

1743
01:11:03,988 --> 01:11:07,919
point oh right we're only looking at

1744
01:11:05,520 --> 01:11:10,079
things that are greater than 1.0 so we

1745
01:11:07,920 --> 01:11:11,940
we would never divide by zero here

1746
01:11:10,078 --> 01:11:13,618
because we'd be fine but if you were

1747
01:11:11,939 --> 01:11:16,049
trying to do something normalization

1748
01:11:13,618 --> 01:11:16,529
wise then yes you have to worry about

1749
01:11:16,050 --> 01:11:21,630
that

1750
01:11:16,529 --> 01:11:24,050
so hmm I guess I deleted that because I

1751
01:11:21,630 --> 01:11:27,569
hadn't thought of my infinite swirl yet

1752
01:11:24,050 --> 01:11:30,440
so basically if you think about what

1753
01:11:27,569 --> 01:11:33,210
happens when we do that that canonical

1754
01:11:30,439 --> 01:11:35,789
equation where I said we had the new

1755
01:11:33,210 --> 01:11:39,359
length we want for a vector divided by

1756
01:11:35,789 --> 01:11:42,750
the old length we want write times the

1757
01:11:39,359 --> 01:11:44,519
vector itself gives us a new vector

1758
01:11:42,750 --> 01:11:47,760
that's that's a different length with

1759
01:11:44,520 --> 01:11:50,400
this length right when I said that

1760
01:11:47,760 --> 01:11:54,389
obviously it's it's also again that

1761
01:11:50,399 --> 01:11:56,519
thing of length of a equals it cannot be

1762
01:11:54,389 --> 01:11:57,809
equal to zero right because it's the

1763
01:11:56,520 --> 01:12:00,090
same as before where I saying it you

1764
01:11:57,809 --> 01:12:02,309
can't divide by zero value now we didn't

1765
01:12:00,090 --> 01:12:03,960
actually ever that cuz condition can't

1766
01:12:02,309 --> 01:12:07,199
happen here so I was not bringing it up

1767
01:12:03,960 --> 01:12:09,210
yet but when we get to that we'll talk

1768
01:12:07,198 --> 01:12:11,578
about it a little bit more basically

1769
01:12:09,210 --> 01:12:13,198
what happens is before you do anything

1770
01:12:11,578 --> 01:12:15,179
with a vector to change the vectors

1771
01:12:13,198 --> 01:12:17,428
length you have to be sure that its

1772
01:12:15,179 --> 01:12:18,840
length currently isn't zero because if

1773
01:12:17,429 --> 01:12:20,819
it's length were zero that would means

1774
01:12:18,840 --> 01:12:22,590
that it has no direction it's just here

1775
01:12:20,819 --> 01:12:24,808
it doesn't it doesn't point anywhere

1776
01:12:22,590 --> 01:12:26,369
it's so you can't change its length

1777
01:12:24,809 --> 01:12:29,460
there's no way to know what it's like

1778
01:12:26,368 --> 01:12:30,719
would have been and so that's something

1779
01:12:29,460 --> 01:12:33,480
that you have to handle on a

1780
01:12:30,719 --> 01:12:36,989
case-by-case basis you need to know what

1781
01:12:33,479 --> 01:12:37,919
was the purpose that you were doing you

1782
01:12:36,988 --> 01:12:40,769
know what were you trying to accomplish

1783
01:12:37,920 --> 01:12:42,328
when you did this and when you and when

1784
01:12:40,770 --> 01:12:44,219
you know what the purpose is you know

1785
01:12:42,328 --> 01:12:48,859
how to handle the zero case you know

1786
01:12:44,219 --> 01:12:48,859
what you should do in that case right

1787
01:12:54,260 --> 01:12:58,349
how can sometimes players enter

1788
01:12:56,969 --> 01:13:00,269
glitching lis through the corners of

1789
01:12:58,349 --> 01:13:02,248
walls or fall through them is that an

1790
01:13:00,269 --> 01:13:05,909
art mistake or programming the answer is

1791
01:13:02,248 --> 01:13:08,340
it can actually be either so basically

1792
01:13:05,908 --> 01:13:09,420
you can have two you can have two

1793
01:13:08,340 --> 01:13:11,940
conditions happen there

1794
01:13:09,420 --> 01:13:12,538
one is that the collision geometry is

1795
01:13:11,939 --> 01:13:14,939
just wrong

1796
01:13:12,538 --> 01:13:17,248
right and so one case is I've got a

1797
01:13:14,939 --> 01:13:18,839
thing and it looks like that right the

1798
01:13:17,248 --> 01:13:20,788
collision geometry looks like this and

1799
01:13:18,840 --> 01:13:22,679
the player is only that big and he fits

1800
01:13:20,788 --> 01:13:23,998
between them and then he can glitch

1801
01:13:22,679 --> 01:13:25,769
through it so even though maybe it's

1802
01:13:23,998 --> 01:13:26,939
drawn like a solid thing the collision

1803
01:13:25,769 --> 01:13:29,190
geometry is wrong and he can glitch

1804
01:13:26,939 --> 01:13:32,279
through it another one's a programming

1805
01:13:29,189 --> 01:13:34,888
bug the programming bug happens when the

1806
01:13:32,279 --> 01:13:39,349
collision resolution the collision

1807
01:13:34,889 --> 01:13:42,538
resolve is not robust in the face of

1808
01:13:39,349 --> 01:13:44,610
twiki situations right so let's say like

1809
01:13:42,538 --> 01:13:47,788
I'm jamming into a corner here you know

1810
01:13:44,609 --> 01:13:49,920
in that corner basically has you know a

1811
01:13:47,788 --> 01:13:52,529
couple of different things of budding in

1812
01:13:49,920 --> 01:13:54,599
it like this you know something like

1813
01:13:52,529 --> 01:13:55,979
that and maybe this is empty here and

1814
01:13:54,599 --> 01:13:58,139
set to here and so these two things kind

1815
01:13:55,979 --> 01:14:01,078
of abut and I've got this thing where I

1816
01:13:58,139 --> 01:14:02,849
can glitch through there because I'd I'm

1817
01:14:01,078 --> 01:14:05,399
not conservative about how I'm checking

1818
01:14:02,849 --> 01:14:08,340
for the collision with my guys somehow

1819
01:14:05,399 --> 01:14:13,408
right that could certainly occur

1820
01:14:08,340 --> 01:14:14,880
it occurs in cases I mean I'd have to

1821
01:14:13,408 --> 01:14:16,649
know the specific code to know why the

1822
01:14:14,880 --> 01:14:17,969
glitch was occurring right but you can

1823
01:14:16,649 --> 01:14:19,738
certainly have just things that are

1824
01:14:17,969 --> 01:14:20,819
numerical precision problems and people

1825
01:14:19,738 --> 01:14:22,859
not thinking through how to do the

1826
01:14:20,819 --> 01:14:28,078
collision right or whatever so it may

1827
01:14:22,859 --> 01:14:32,219
not be art can we look at our dropped

1828
01:14:28,078 --> 01:14:34,319
frames it's been quite choppy so it

1829
01:14:32,219 --> 01:14:37,170
looks a little dropping but not too much

1830
01:14:34,319 --> 01:14:38,429
I don't know I don't know we're people

1831
01:14:37,170 --> 01:14:40,819
on the stream in general having a

1832
01:14:38,429 --> 01:14:40,819
problem

1833
01:14:47,279 --> 01:14:50,179
let's see

1834
01:14:54,810 --> 01:15:01,500
I don't know if anyone yeah can anyone

1835
01:14:58,800 --> 01:15:03,600
tell me if we were having choppiness

1836
01:15:01,500 --> 01:15:08,460
problems I don't know if we're having

1837
01:15:03,600 --> 01:15:11,160
chopping his problems or not yeah so

1838
01:15:08,460 --> 01:15:13,260
we're almost done here I think I'm day

1839
01:15:11,159 --> 01:15:19,949
47 we've got what have we got about ten

1840
01:15:13,260 --> 01:15:21,390
minutes left okay so I think kuru I

1841
01:15:19,949 --> 01:15:25,939
think that was just you who was dropping

1842
01:15:21,390 --> 01:15:34,980
the frame sorry don't blame my isp yet

1843
01:15:25,939 --> 01:15:37,739
it's not their fault this time alright

1844
01:15:34,979 --> 01:15:40,009
so that it for questions so we can end

1845
01:15:37,739 --> 01:15:40,010
early

1846
01:15:48,010 --> 01:15:53,289
yeah I don't see any more questions so I

1847
01:15:50,649 --> 01:15:58,479
think I'm a I don't know how to I I feel

1848
01:15:53,289 --> 01:15:59,979
like we've now gotten too huge for for I

1849
01:15:58,479 --> 01:16:02,319
want to kind of delete this so we're not

1850
01:15:59,979 --> 01:16:04,959
taking up so much space there we go

1851
01:16:02,319 --> 01:16:06,670
I'm afraid that that krita's gonna run

1852
01:16:04,960 --> 01:16:08,500
out of room for us here all right so

1853
01:16:06,670 --> 01:16:08,880
we'll put that back like that for next

1854
01:16:08,500 --> 01:16:15,220
time

1855
01:16:08,880 --> 01:16:16,449
there we go okay so I think that's it I

1856
01:16:15,220 --> 01:16:18,130
don't see any more questions I'm

1857
01:16:16,449 --> 01:16:22,149
surprised that the new timer code

1858
01:16:18,130 --> 01:16:24,100
actually worked that's kind of

1859
01:16:22,149 --> 01:16:25,929
surprising to me I was expecting it to

1860
01:16:24,100 --> 01:16:27,700
roll over and die and really we only had

1861
01:16:25,930 --> 01:16:28,780
one problem which is that it I didn't

1862
01:16:27,699 --> 01:16:30,819
actually have the thing

1863
01:16:28,779 --> 01:16:34,300
stop telling us when the stream was

1864
01:16:30,819 --> 01:16:38,309
already started but that's okay so

1865
01:16:34,300 --> 01:16:41,170
that's good the stream now supports

1866
01:16:38,310 --> 01:16:41,830
fractional our boundaries just quite

1867
01:16:41,170 --> 01:16:44,020
robust

1868
01:16:41,829 --> 01:16:45,220
all right so yeah this was a bit

1869
01:16:44,020 --> 01:16:47,560
disappointing today because I hope to

1870
01:16:45,220 --> 01:16:48,610
get to that and I guess you know a large

1871
01:16:47,560 --> 01:16:50,410
part of the problem was I decided to

1872
01:16:48,609 --> 01:16:52,000
talk about vector lengths which you know

1873
01:16:50,409 --> 01:16:56,670
takes up some time but what are you

1874
01:16:52,000 --> 01:16:56,670
gonna do what are you gonna do

1875
01:17:04,550 --> 01:17:10,038
storm buzzes do you need to do the math

1876
01:17:07,099 --> 01:17:14,538
when doing solid walls and objects or is

1877
01:17:10,038 --> 01:17:16,069
that just basic program arithmetics well

1878
01:17:14,538 --> 01:17:18,439
you need to do the math regardless of

1879
01:17:16,069 --> 01:17:21,259
what the thing is are I'm not sure you

1880
01:17:18,439 --> 01:17:24,498
mean by solid walls aren't all walls

1881
01:17:21,260 --> 01:17:27,199
solid yeah I'm sorry I don't quite

1882
01:17:24,498 --> 01:17:30,248
understand the question if you want to

1883
01:17:27,198 --> 01:17:30,248
rephrase it though I can answer it

1884
01:17:54,488 --> 01:18:03,369
so yeah it doesn't look like any

1885
01:17:56,979 --> 01:18:08,979
questions so I think we are done we can

1886
01:18:03,369 --> 01:18:10,719
call it and everyone can you know go

1887
01:18:08,979 --> 01:18:12,789
program get program on their own I

1888
01:18:10,719 --> 01:18:15,550
actually wanted to go fix something in

1889
01:18:12,789 --> 01:18:17,140
the witness just now I'm Mei she wrote

1890
01:18:15,550 --> 01:18:21,640
me back about a thing that I was doing

1891
01:18:17,140 --> 01:18:23,440
wrong that was that about iterating over

1892
01:18:21,640 --> 01:18:25,630
collision geometry that I was like I'm

1893
01:18:23,439 --> 01:18:27,159
not sure how to I don't actually know

1894
01:18:25,630 --> 01:18:28,719
how to tell what this material is

1895
01:18:27,159 --> 01:18:31,449
because I don't know the engine very

1896
01:18:28,719 --> 01:18:33,100
well and so now that I know that I'd

1897
01:18:31,449 --> 01:18:36,539
like to go do that so maybe I will go do

1898
01:18:33,100 --> 01:18:36,539
that if that makes sense

1899
01:18:42,590 --> 01:18:48,409
and of them I think he means graphically

1900
01:18:44,659 --> 01:18:49,939
walls maybe hollow inside so doing the

1901
01:18:48,409 --> 01:18:53,840
math of the whole object or just the

1902
01:18:49,939 --> 01:18:55,099
outer collidable parts oh so well it if

1903
01:18:53,840 --> 01:18:58,520
you think about it though it doesn't

1904
01:18:55,100 --> 01:19:02,120
matter right because if a thing if an

1905
01:18:58,520 --> 01:19:05,710
object is solid right so if I have a

1906
01:19:02,119 --> 01:19:09,439
solid object and I have a hollow object

1907
01:19:05,710 --> 01:19:13,640
but that stills got you know it's got

1908
01:19:09,439 --> 01:19:15,769
walls right there's no difference

1909
01:19:13,640 --> 01:19:17,990
between these two things as far as the

1910
01:19:15,770 --> 01:19:20,030
collision detection is concerned if a

1911
01:19:17,989 --> 01:19:23,149
guy is walking into this thing he still

1912
01:19:20,029 --> 01:19:25,250
stops here regardless right so the

1913
01:19:23,149 --> 01:19:27,019
equations are the same whether he's in a

1914
01:19:25,250 --> 01:19:29,029
solid thing or a hollow thing it doesn't

1915
01:19:27,020 --> 01:19:31,160
matter if just all that matters is the

1916
01:19:29,029 --> 01:19:32,420
first wall he could run into and they're

1917
01:19:31,159 --> 01:19:34,189
the same in both cases

1918
01:19:32,420 --> 01:19:37,340
right you only for collision detection

1919
01:19:34,189 --> 01:19:39,169
you only care about the boundary of the

1920
01:19:37,340 --> 01:19:40,489
thing you don't care what's inside it

1921
01:19:39,170 --> 01:19:41,359
because you can never get inside it

1922
01:19:40,489 --> 01:19:50,300
that's the whole point the closed

1923
01:19:41,359 --> 01:19:52,429
reduction is to prevent that right all

1924
01:19:50,300 --> 01:19:58,730
right so I think that's it

1925
01:19:52,430 --> 01:20:04,640
I will go ahead and call it for now we

1926
01:19:58,729 --> 01:20:07,519
will close this down hello awesome I

1927
01:20:04,640 --> 01:20:09,050
kind of like it when he pops up I can't

1928
01:20:07,520 --> 01:20:10,370
wait to do his animation controller his

1929
01:20:09,050 --> 01:20:10,640
animation controller is gonna be so much

1930
01:20:10,369 --> 01:20:12,800
fun

1931
01:20:10,640 --> 01:20:14,539
and that's what we'll do it right after

1932
01:20:12,800 --> 01:20:16,400
we finish the collision detection but

1933
01:20:14,539 --> 01:20:18,170
like getting him hopping along is gonna

1934
01:20:16,399 --> 01:20:20,179
be the most fun thing to do and it will

1935
01:20:18,170 --> 01:20:22,819
also be the thing that most motivates us

1936
01:20:20,180 --> 01:20:25,640
to go do the renderer because once we do

1937
01:20:22,819 --> 01:20:29,119
the hopping we'll really want to be able

1938
01:20:25,640 --> 01:20:31,070
to bend his body like to emphasize the

1939
01:20:29,119 --> 01:20:32,599
hop but of course we can't with our draw

1940
01:20:31,069 --> 01:20:34,729
a bitmap code that we have right now and

1941
01:20:32,600 --> 01:20:37,010
so that'll be like the perfect thing to

1942
01:20:34,729 --> 01:20:38,719
make us want to go do like a nice

1943
01:20:37,010 --> 01:20:43,310
renderer that can do like bending of

1944
01:20:38,720 --> 01:20:47,409
stuff right so yeah anyway okay so I'm

1945
01:20:43,310 --> 01:20:51,560
gonna go ahead and close this down and

1946
01:20:47,409 --> 01:20:53,529
come to me there we go

1947
01:20:51,560 --> 01:20:56,900
let's see

1948
01:20:53,529 --> 01:20:59,000
okay so thank you very much for joining

1949
01:20:56,899 --> 01:21:00,589
me this evening I'm sorry that we didn't

1950
01:20:59,000 --> 01:21:02,090
quite get to finish the thing that I

1951
01:21:00,590 --> 01:21:04,699
wanted to finish so we will try to do

1952
01:21:02,090 --> 01:21:07,069
that tomorrow and then we can move on to

1953
01:21:04,699 --> 01:21:08,869
doing some more animation sorts of stuff

1954
01:21:07,069 --> 01:21:10,009
although we may actually want to do a

1955
01:21:08,869 --> 01:21:12,229
little more collision detection because

1956
01:21:10,010 --> 01:21:14,000
now that we've got two guys in there we

1957
01:21:12,229 --> 01:21:15,559
probably want to throw like a monster in

1958
01:21:14,000 --> 01:21:17,090
there and and collide against the

1959
01:21:15,560 --> 01:21:18,770
monster and move it have different

1960
01:21:17,090 --> 01:21:21,230
moving things colliding so well well

1961
01:21:18,770 --> 01:21:23,030
well sort of probably we probably will

1962
01:21:21,229 --> 01:21:24,589
have to do maybe the rest of this week

1963
01:21:23,029 --> 01:21:26,689
on collision because we'll want to do

1964
01:21:24,590 --> 01:21:28,699
all that stuff and get out to doing a

1965
01:21:26,689 --> 01:21:30,649
nice rounded volume for the player and

1966
01:21:28,699 --> 01:21:32,238
so on so we've realistically speaking we

1967
01:21:30,649 --> 01:21:34,279
probably have a fair bit more collision

1968
01:21:32,238 --> 01:21:35,988
detection to do but I didn't want to

1969
01:21:34,279 --> 01:21:37,369
finish just the simple wall case the

1970
01:21:35,988 --> 01:21:38,539
simple vertical horizontal wall case

1971
01:21:37,369 --> 01:21:39,979
today so we could get on another stuff

1972
01:21:38,539 --> 01:21:41,779
so sorry about that but we'll finish it

1973
01:21:39,979 --> 01:21:44,479
up tomorrow and then we'll move on to

1974
01:21:41,779 --> 01:21:45,500
sort of the more complex law cases to

1975
01:21:44,479 --> 01:21:46,849
sort of see how to build a more

1976
01:21:45,500 --> 01:21:48,409
interesting closure detector that

1977
01:21:46,850 --> 01:21:50,930
doesn't work things that are better

1978
01:21:48,409 --> 01:21:52,130
better for the field the game so thank

1979
01:21:50,930 --> 01:21:53,720
you very much for joining me is been a

1980
01:21:52,130 --> 01:21:56,029
pleasure coding with you as always if

1981
01:21:53,720 --> 01:21:58,880
you would like to pre-order the game and

1982
01:21:56,029 --> 01:22:00,409
get the source code you can do that at

1983
01:21:58,880 --> 01:22:02,180
handmade hero org and you can download

1984
01:22:00,409 --> 01:22:03,738
the source code every night I upload it

1985
01:22:02,180 --> 01:22:06,860
every night you'll get a link in your

1986
01:22:03,738 --> 01:22:07,879
email and you can use that link over and

1987
01:22:06,859 --> 01:22:09,349
over and over again to download the

1988
01:22:07,880 --> 01:22:10,819
source code every night you just save

1989
01:22:09,350 --> 01:22:11,930
the link that comes and you can always

1990
01:22:10,819 --> 01:22:14,119
go back there and download the latest

1991
01:22:11,930 --> 01:22:15,530
source so if you want to do that you can

1992
01:22:14,119 --> 01:22:17,479
do that a hammer here or if you want to

1993
01:22:15,529 --> 01:22:19,039
just support the video series you can

1994
01:22:17,479 --> 01:22:21,529
subscribe to our patreon as well which

1995
01:22:19,039 --> 01:22:24,079
we have which is right here and then if

1996
01:22:21,529 --> 01:22:25,939
you want to study the series more in

1997
01:22:24,079 --> 01:22:27,260
depth we also have a news and forum site

1998
01:22:25,939 --> 01:22:28,579
that's got a bunch of stuff on it that

1999
01:22:27,260 --> 01:22:30,170
you might want to use it's got the

2000
01:22:28,579 --> 01:22:31,309
schedule for the week in case you want

2001
01:22:30,170 --> 01:22:33,649
to know when we're broadcasting each

2002
01:22:31,310 --> 01:22:35,480
week it's got an episode guide so you

2003
01:22:33,649 --> 01:22:37,009
can catch up on previous episodes that's

2004
01:22:35,479 --> 01:22:39,039
really great it's got time coded videos

2005
01:22:37,010 --> 01:22:41,960
and all this stuff it's pretty awesome

2006
01:22:39,039 --> 01:22:43,880
we've got coding resources which is like

2007
01:22:41,960 --> 01:22:44,689
ports to Mac OSX and Linux and stuff so

2008
01:22:43,880 --> 01:22:46,010
if you're trying to run out in from

2009
01:22:44,689 --> 01:22:47,419
platform you can check that out and we

2010
01:22:46,010 --> 01:22:49,520
also have a code discussion board so if

2011
01:22:47,420 --> 01:22:51,409
you want to ask questions or sort of

2012
01:22:49,520 --> 01:22:53,930
talk more about a particular episode

2013
01:22:51,409 --> 01:22:56,329
that is the place to do it and hey let

2014
01:22:53,930 --> 01:22:58,489
the timer even still worked check that

2015
01:22:56,329 --> 01:23:00,890
out alright so thank you very much for

2016
01:22:58,488 --> 01:23:02,269
joining me I will be back tomorrow 8

2017
01:23:00,890 --> 01:23:03,650
p.m. Pacific Standard Time tomorrow our

2018
01:23:02,270 --> 01:23:05,960
standard time slot since John is not

2019
01:23:03,649 --> 01:23:07,159
doing to power Denver tomorrow and so I

2020
01:23:05,960 --> 01:23:10,609
certainly hope see you

2021
01:23:07,159 --> 01:23:11,989
there and have a wonderful Monday I'm

2022
01:23:10,609 --> 01:23:15,009
sorry Wednesday either way

2023
01:23:11,989 --> 01:23:15,010
take it easy everyone

