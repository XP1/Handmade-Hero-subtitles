1
00:00:03,649 --> 00:00:07,980
all right hello everyone and welcome to

2
00:00:06,569 --> 00:00:11,759
handmade Hiro sure we could a complete

3
00:00:07,980 --> 00:00:13,410
game live on stream I will be trying to

4
00:00:11,759 --> 00:00:17,278
put into practice and things we read

5
00:00:13,410 --> 00:00:18,868
yesterday I was pretty interested one of

6
00:00:17,278 --> 00:00:21,600
the things I try to do on handmade Hiro

7
00:00:18,868 --> 00:00:24,089
is we obviously always try things

8
00:00:21,600 --> 00:00:25,710
ourselves but a lot of times what I'm

9
00:00:24,089 --> 00:00:29,009
actually programming I'll read a lot of

10
00:00:25,710 --> 00:00:30,660
papers and it's kind of hard on handmade

11
00:00:29,010 --> 00:00:32,399
Hiro because reading papers isn't really

12
00:00:30,660 --> 00:00:33,780
something you can do on stream very well

13
00:00:32,399 --> 00:00:35,850
I mean I guess we could all sit here in

14
00:00:33,780 --> 00:00:37,380
silence while we all read the paper so

15
00:00:35,850 --> 00:00:39,149
it's a little bit tough but what it does

16
00:00:37,380 --> 00:00:40,980
mean is that it kind of robs us a little

17
00:00:39,149 --> 00:00:42,390
bit of one of the main tools that I

18
00:00:40,979 --> 00:00:45,628
would normally have when we're actually

19
00:00:42,390 --> 00:00:47,219
working which is the ability to go

20
00:00:45,628 --> 00:00:49,349
gather information from lots of people

21
00:00:47,219 --> 00:00:52,020
who have worked on stuff now we happen

22
00:00:49,350 --> 00:00:54,239
to luck out on the stream yesterday in

23
00:00:52,020 --> 00:00:56,789
that we tended to HAP we ended up

24
00:00:54,238 --> 00:00:58,259
stumbling upon a few things that we kind

25
00:00:56,789 --> 00:01:00,120
of wanted to know in a way that was

26
00:00:58,259 --> 00:01:02,939
quick and easy for us to actually read

27
00:01:00,119 --> 00:01:04,759
on stream we could go through it they

28
00:01:02,939 --> 00:01:07,798
happen to be written in a very

29
00:01:04,760 --> 00:01:09,420
convenient form like you know wasn't a

30
00:01:07,799 --> 00:01:10,799
huge pile of math equations that I then

31
00:01:09,420 --> 00:01:13,950
had to kind of like work out it was

32
00:01:10,799 --> 00:01:16,618
actually a very well-written paper on

33
00:01:13,950 --> 00:01:18,930
the subject we cared about and it was

34
00:01:16,618 --> 00:01:21,209
really easy for us to to digest and

35
00:01:18,930 --> 00:01:23,340
process but anyway point being I was

36
00:01:21,209 --> 00:01:26,280
really into the octahedral encoding idea

37
00:01:23,340 --> 00:01:28,079
that and it was very easy to sort of

38
00:01:26,280 --> 00:01:31,618
quickly see what they were doing and

39
00:01:28,079 --> 00:01:33,450
presented on stream as well and so today

40
00:01:31,618 --> 00:01:35,549
I want to go ahead and try putting that

41
00:01:33,450 --> 00:01:36,750
in so we can kind of move a little bit

42
00:01:35,549 --> 00:01:37,950
closer to finishing up this lighting

43
00:01:36,750 --> 00:01:39,090
because lighting is the really the

44
00:01:37,950 --> 00:01:40,590
biggest stumbling point we have right

45
00:01:39,090 --> 00:01:43,590
now we really just haven't been able to

46
00:01:40,590 --> 00:01:45,210
quite make it click and I feel like the

47
00:01:43,590 --> 00:01:47,460
octahedral encoding part of things would

48
00:01:45,209 --> 00:01:48,989
really help us out because the biggest

49
00:01:47,459 --> 00:01:50,719
problem we have right now is we don't

50
00:01:48,989 --> 00:01:54,030
really know how to store these things

51
00:01:50,719 --> 00:01:59,039
and update them and it seems pretty easy

52
00:01:54,030 --> 00:02:00,960
to use this as a way of doing that now I

53
00:01:59,040 --> 00:02:03,600
do still think it's a little bit of an

54
00:02:00,959 --> 00:02:04,949
open question as to whether or not where

55
00:02:03,599 --> 00:02:07,468
you want to use a texture array or a

56
00:02:04,950 --> 00:02:09,509
texture Atlas one of the things we

57
00:02:07,468 --> 00:02:11,750
figured out on yesterday stream was that

58
00:02:09,508 --> 00:02:13,829
there's actually inversion that happens

59
00:02:11,750 --> 00:02:17,939
such that you cannot

60
00:02:13,830 --> 00:02:20,910
actually use a rapt sampling mode when

61
00:02:17,939 --> 00:02:23,509
you are interpolating your vectors for

62
00:02:20,909 --> 00:02:25,799
these you know for the octahedral

63
00:02:23,509 --> 00:02:27,359
encoding and that's just because you

64
00:02:25,800 --> 00:02:30,510
know there's no way to actually wrap the

65
00:02:27,360 --> 00:02:33,060
coordinates correctly but what I don't

66
00:02:30,509 --> 00:02:34,560
know is I still don't know why you

67
00:02:33,060 --> 00:02:36,629
wouldn't use a texture array because

68
00:02:34,560 --> 00:02:39,120
even though it means you can't do proper

69
00:02:36,629 --> 00:02:41,900
rap sampling it still seems like you

70
00:02:39,120 --> 00:02:45,120
would want to clamp to edge right and

71
00:02:41,900 --> 00:02:48,300
for some reason they didn't do that and

72
00:02:45,120 --> 00:02:51,120
I don't know why and again one of the

73
00:02:48,300 --> 00:02:52,469
big problems with this is I respect the

74
00:02:51,120 --> 00:02:55,469
authors of this paper and I think

75
00:02:52,469 --> 00:02:58,620
they're very good so if they didn't do

76
00:02:55,469 --> 00:03:01,050
it it probably means you don't do it

77
00:02:58,620 --> 00:03:07,259
meaning like they wouldn't have chosen

78
00:03:01,050 --> 00:03:08,910
an inferior scheme and so that part's

79
00:03:07,259 --> 00:03:12,209
still a little bit iffy to me and just

80
00:03:08,909 --> 00:03:16,319
to give you some which paper would it be

81
00:03:12,209 --> 00:03:17,550
is it this one hmm yeah I don't think

82
00:03:16,319 --> 00:03:19,620
they would have chosen an inferior

83
00:03:17,550 --> 00:03:21,570
scheme now maybe they would have for

84
00:03:19,620 --> 00:03:23,370
some other reason like it could be that

85
00:03:21,569 --> 00:03:27,239
there is some reason they chose this

86
00:03:23,370 --> 00:03:29,909
scheme that has nothing to do with its

87
00:03:27,239 --> 00:03:32,090
efficacy maybe they wanted to be able to

88
00:03:29,909 --> 00:03:34,859
display the maps in a certain way or

89
00:03:32,090 --> 00:03:37,500
something like this but if we look at

90
00:03:34,860 --> 00:03:41,489
how they supposedly actually shipped

91
00:03:37,500 --> 00:03:43,469
this thing they pack all of their stuff

92
00:03:41,489 --> 00:03:45,810
and you can see it here they pack all of

93
00:03:43,469 --> 00:03:48,870
their stuff into little squares in a

94
00:03:45,810 --> 00:03:50,580
texture Atlas and what that means is

95
00:03:48,870 --> 00:03:52,650
when they're sampling them they will at

96
00:03:50,580 --> 00:03:56,070
the very least have to have a little

97
00:03:52,650 --> 00:03:59,189
border edge that they would use in order

98
00:03:56,069 --> 00:04:01,379
to make that sampling work now here's

99
00:03:59,189 --> 00:04:02,449
what I'm thinking and I don't actually

100
00:04:01,379 --> 00:04:05,549
know if it's true

101
00:04:02,449 --> 00:04:07,439
but my assumption is the reason that

102
00:04:05,550 --> 00:04:09,300
they would have done that if we assume

103
00:04:07,439 --> 00:04:11,219
that they chose it on purpose and not

104
00:04:09,300 --> 00:04:13,140
arbitrarily which I think is the safer

105
00:04:11,219 --> 00:04:16,889
assumption here based on who the authors

106
00:04:13,139 --> 00:04:19,738
are I'm wondering if maybe part of their

107
00:04:16,889 --> 00:04:22,379
scheme actually goes back through after

108
00:04:19,738 --> 00:04:25,288
they so if they're using like an 8 by 8

109
00:04:22,379 --> 00:04:27,180
here like they said they do say they

110
00:04:25,288 --> 00:04:27,810
leave a gutter region and what I'm

111
00:04:27,180 --> 00:04:29,400
wondering is

112
00:04:27,810 --> 00:04:32,129
maybe they have a pass that goes back

113
00:04:29,399 --> 00:04:35,159
through once they've computed all their

114
00:04:32,129 --> 00:04:38,069
eight by eights and actually fills in a

115
00:04:35,160 --> 00:04:41,310
gutter with fetches from the other side

116
00:04:38,069 --> 00:04:45,120
of the texture so that they actually get

117
00:04:41,310 --> 00:04:47,009
proper interpretive sampling I'm gonna

118
00:04:45,120 --> 00:04:49,889
go ahead and say that I think that's

119
00:04:47,009 --> 00:04:51,329
probably why I don't know if they say

120
00:04:49,889 --> 00:04:53,879
that outright they didn't seem to

121
00:04:51,329 --> 00:04:55,439
immediately in the paper but I'm

122
00:04:53,879 --> 00:04:57,149
thinking that the reason you might need

123
00:04:55,439 --> 00:04:59,579
to do that is when you're computing the

124
00:04:57,149 --> 00:05:02,759
lighting on something if you didn't have

125
00:04:59,579 --> 00:05:05,180
that as you went around the seam you

126
00:05:02,759 --> 00:05:10,379
would presumably see a lighting pop

127
00:05:05,180 --> 00:05:12,300
right so I'm kind of thinking that if

128
00:05:10,379 --> 00:05:15,779
they're using bilinear filtering when

129
00:05:12,300 --> 00:05:18,000
they look up in here I'm kind of

130
00:05:15,779 --> 00:05:20,369
thinking that that is what they've done

131
00:05:18,000 --> 00:05:22,649
so I'm thinking they may have wanted to

132
00:05:20,370 --> 00:05:24,689
use an atlas because at that point

133
00:05:22,649 --> 00:05:26,699
there's no reason to use a texture array

134
00:05:24,689 --> 00:05:29,160
I mean it doesn't do anything for you

135
00:05:26,699 --> 00:05:31,620
so you're just wasting extra coordinates

136
00:05:29,160 --> 00:05:39,500
there's nothing you know it can't it

137
00:05:31,620 --> 00:05:43,319
can't help you at that point so my

138
00:05:39,500 --> 00:05:47,009
assumption and I don't know if it's true

139
00:05:43,319 --> 00:05:49,800
but my assumption is that's what's going

140
00:05:47,009 --> 00:05:53,699
on here that primarily what they're

141
00:05:49,800 --> 00:05:56,689
doing is they're going to take an 8 by 8

142
00:05:53,699 --> 00:05:58,680
or whatever the resolution they chose

143
00:05:56,689 --> 00:06:00,089
because I think they said it was 8 by 8

144
00:05:58,680 --> 00:06:01,590
for the lighting but you know you could

145
00:06:00,089 --> 00:06:04,168
put whatever you want for my for 8 by 8

146
00:06:01,589 --> 00:06:06,869
whatever you I'm suspecting they took

147
00:06:04,168 --> 00:06:08,069
the 8 by 8 they added a 1 pixel border

148
00:06:06,870 --> 00:06:11,189
around the whole thing which they kind

149
00:06:08,069 --> 00:06:12,599
of said they did and then before they go

150
00:06:11,189 --> 00:06:15,478
to actually use it

151
00:06:12,600 --> 00:06:22,620
they probably replicate the correct part

152
00:06:15,478 --> 00:06:24,120
of that the that the octahedron where

153
00:06:22,620 --> 00:06:26,668
its neighbor would have actually been

154
00:06:24,120 --> 00:06:30,689
the correct neighbor they'd probably

155
00:06:26,668 --> 00:06:33,990
move those pixels over so that you get a

156
00:06:30,689 --> 00:06:38,579
seamless sampling I would assume that's

157
00:06:33,990 --> 00:06:41,210
probably what they do but I guess I

158
00:06:38,579 --> 00:06:41,209
don't know

159
00:06:42,019 --> 00:06:47,939
yeah I mean I guess I don't know so you

160
00:06:46,319 --> 00:06:49,860
can see right now they say like one

161
00:06:47,939 --> 00:06:51,149
pixel texture gutter border insurers

162
00:06:49,860 --> 00:06:53,100
correct bilinear interpolation and

163
00:06:51,149 --> 00:06:55,949
additional padding aligns probes on four

164
00:06:53,100 --> 00:06:57,870
by four right boundaries so we know that

165
00:06:55,949 --> 00:06:59,399
they do sort of some of the stuff that

166
00:06:57,870 --> 00:07:03,420
I'm talking about we just don't know

167
00:06:59,399 --> 00:07:05,879
what they put in the padding right so

168
00:07:03,420 --> 00:07:08,460
let's take a quick look just to see

169
00:07:05,879 --> 00:07:11,100
what's up you can see here that they say

170
00:07:08,459 --> 00:07:13,979
like okay we're gonna trace a bunch of

171
00:07:11,100 --> 00:07:15,090
probes here which is fine we don't

172
00:07:13,980 --> 00:07:15,960
really care about that part because

173
00:07:15,089 --> 00:07:17,579
we're doing that a little bit

174
00:07:15,959 --> 00:07:20,219
differently anyway but you know we're

175
00:07:17,579 --> 00:07:22,879
gonna do something like that here's

176
00:07:20,220 --> 00:07:25,350
where they actually figure out what the

177
00:07:22,879 --> 00:07:27,060
illumination is going to be doesn't

178
00:07:25,350 --> 00:07:29,520
really matter again for us and they say

179
00:07:27,060 --> 00:07:33,870
then they go through and the texels in

180
00:07:29,519 --> 00:07:36,120
the octahedron unwrapped octahedron they

181
00:07:33,870 --> 00:07:38,750
do the blending and they figure out what

182
00:07:36,120 --> 00:07:41,790
the result should be and that's fine and

183
00:07:38,750 --> 00:07:46,980
then what I want to know is is there a

184
00:07:41,790 --> 00:07:52,140
set after this right that kind of like

185
00:07:46,980 --> 00:07:54,689
fixes things at all and trying to look

186
00:07:52,139 --> 00:07:57,449
here and see again it's hard to read

187
00:07:54,689 --> 00:08:05,850
papers on stream but just to see if

188
00:07:57,449 --> 00:08:13,279
there's anything like I'm not seeing

189
00:08:05,850 --> 00:08:13,280
anything yet

190
00:08:16,850 --> 00:08:42,269
like I don't see any where were they

191
00:08:19,379 --> 00:08:43,649
really saying specifically but so here

192
00:08:42,269 --> 00:08:46,220
they're talking about how they're

193
00:08:43,649 --> 00:08:49,470
storing it in terms of individual light

194
00:08:46,220 --> 00:08:57,540
like the in terms of the actual value

195
00:08:49,470 --> 00:08:58,740
format but I don't actually see I don't

196
00:08:57,539 --> 00:09:07,889
actually see them really talking about

197
00:08:58,740 --> 00:09:11,220
this one way or the other so I don't

198
00:09:07,889 --> 00:09:15,569
know that part I think is just a little

199
00:09:11,220 --> 00:09:19,019
bit of a question mark and I guess what

200
00:09:15,570 --> 00:09:22,110
I would say is you know what we do have

201
00:09:19,019 --> 00:09:26,159
to go on here where we look at the

202
00:09:22,110 --> 00:09:28,560
actual lighting data that we see which

203
00:09:26,159 --> 00:09:30,480
would be like here right

204
00:09:28,559 --> 00:09:33,059
looking at this lighting data more

205
00:09:30,480 --> 00:09:37,409
closely is really all we've got to go on

206
00:09:33,059 --> 00:09:43,639
and if we look you can kind of see that

207
00:09:37,409 --> 00:09:46,889
at the very least what I'm saying I

208
00:09:43,639 --> 00:09:49,708
guess I would say doesn't seem to quite

209
00:09:46,889 --> 00:09:52,199
hold water with what I what you see here

210
00:09:49,708 --> 00:09:55,679
and the reason I say that is because if

211
00:09:52,200 --> 00:09:59,209
you look at these two pieces they don't

212
00:09:55,679 --> 00:10:03,409
match so if you actually work copying

213
00:09:59,208 --> 00:10:05,669
the border in some way that that

214
00:10:03,409 --> 00:10:08,429
replicated one side over to the other

215
00:10:05,669 --> 00:10:13,019
side you would expect to see this line

216
00:10:08,429 --> 00:10:16,799
and this line roughly match up and they

217
00:10:13,019 --> 00:10:19,169
don't look like they do in any real

218
00:10:16,799 --> 00:10:21,990
sense right like it doesn't look like

219
00:10:19,169 --> 00:10:24,838
unless yeah I mean I'm assuming that's

220
00:10:21,990 --> 00:10:26,490
the scene between two of them because it

221
00:10:24,839 --> 00:10:28,620
should be smooth everywhere to a certain

222
00:10:26,490 --> 00:10:33,899
extent

223
00:10:28,620 --> 00:10:37,529
and I just yeah I don't see that as

224
00:10:33,899 --> 00:10:39,720
being the same as that flipped around at

225
00:10:37,529 --> 00:10:43,079
all I could be wrong but it just it

226
00:10:39,720 --> 00:10:46,370
really doesn't look convincing and so I

227
00:10:43,080 --> 00:10:49,560
really don't know what to make of that

228
00:10:46,370 --> 00:10:52,320
but you see where my dilemma is right so

229
00:10:49,559 --> 00:10:55,500
again really don't know what the goal

230
00:10:52,320 --> 00:10:57,780
was there or what they were doing and so

231
00:10:55,500 --> 00:10:59,340
I think we're gonna have to kind of play

232
00:10:57,779 --> 00:11:02,339
that part by ear

233
00:10:59,340 --> 00:11:04,139
and we do know that they've they've

234
00:11:02,340 --> 00:11:07,800
given us some source code to work with

235
00:11:04,139 --> 00:11:13,039
we've got the supplement here and you

236
00:11:07,799 --> 00:11:15,929
know so we have a little bit of data and

237
00:11:13,039 --> 00:11:19,409
if we open back up again what we're

238
00:11:15,929 --> 00:11:22,109
looking at here we can look at like

239
00:11:19,409 --> 00:11:24,659
there see file but again I don't really

240
00:11:22,110 --> 00:11:25,710
know that we're gonna be able to

241
00:11:24,659 --> 00:11:27,389
determine exactly what they're doing

242
00:11:25,710 --> 00:11:29,850
here because this is not complete source

243
00:11:27,389 --> 00:11:31,830
code I don't think it's it's just a you

244
00:11:29,850 --> 00:11:34,070
know sort of a vague sketch it's like

245
00:11:31,830 --> 00:11:37,530
part of the source code or whatever and

246
00:11:34,070 --> 00:11:38,850
you know looking at the actual process I

247
00:11:37,529 --> 00:11:40,470
don't know who's gonna tell us that

248
00:11:38,850 --> 00:11:42,810
unless there's an obvious smoking gun

249
00:11:40,470 --> 00:11:45,180
like fill gutters with the thing or

250
00:11:42,809 --> 00:11:48,000
something like that and you know I don't

251
00:11:45,179 --> 00:11:51,529
doubt that that's you know living in

252
00:11:48,000 --> 00:11:55,159
here so you know looking through it

253
00:11:51,529 --> 00:12:05,009
update irradiance probes you know here's

254
00:11:55,159 --> 00:12:08,699
that code happening so here is a blend

255
00:12:05,009 --> 00:12:11,990
pass on these it looks like it's

256
00:12:08,700 --> 00:12:18,980
probably doing some of the final stuff

257
00:12:11,990 --> 00:12:18,980
I'm not sure what shader this is using

258
00:12:19,039 --> 00:12:27,649
irradiance field copy probe edges haha

259
00:12:28,850 --> 00:12:35,480
they did not include that one

260
00:12:31,269 --> 00:12:38,179
unfortunately so I guess what I would

261
00:12:35,480 --> 00:12:40,879
say is that is maybe the smoking gun I

262
00:12:38,179 --> 00:12:43,578
was looking for so if you call something

263
00:12:40,879 --> 00:12:46,549
copy probe Edge's you are at least doing

264
00:12:43,578 --> 00:12:49,659
something as far as you know trying to

265
00:12:46,549 --> 00:12:52,698
do that pad so I guess that tells me

266
00:12:49,659 --> 00:12:54,439
most of what I need to know well I don't

267
00:12:52,698 --> 00:12:55,939
know exactly how they're copying the

268
00:12:54,440 --> 00:12:57,949
probe edges because that particular

269
00:12:55,940 --> 00:13:00,490
pixel shader does not appear to have

270
00:12:57,948 --> 00:13:05,000
been included so I guess I don't know

271
00:13:00,490 --> 00:13:09,350
what I will say is that I do then kind

272
00:13:05,000 --> 00:13:11,809
of know that they're doing a copy of the

273
00:13:09,350 --> 00:13:13,940
probe edges so I will also probably want

274
00:13:11,809 --> 00:13:16,609
to do a copy of the probe edges and it's

275
00:13:13,940 --> 00:13:18,889
just a question of how to copy and since

276
00:13:16,610 --> 00:13:22,430
I know they're doing a copy I guess I

277
00:13:18,889 --> 00:13:24,110
don't need to clone their copy I kind of

278
00:13:22,429 --> 00:13:26,719
know what I probably want to put in

279
00:13:24,110 --> 00:13:28,970
there so that's really all I needed to

280
00:13:26,720 --> 00:13:31,069
know that takes at least the mystery out

281
00:13:28,970 --> 00:13:33,319
of it they are doing roughly what I was

282
00:13:31,068 --> 00:13:35,750
guessing I would want to do and that

283
00:13:33,318 --> 00:13:38,448
gives me some confidence that I

284
00:13:35,750 --> 00:13:40,698
understand what they were doing and I'm

285
00:13:38,448 --> 00:13:44,688
not missing a crucial part of the

286
00:13:40,698 --> 00:13:47,750
process so that satisfies me I'm I'm

287
00:13:44,688 --> 00:13:49,549
pretty happy now I think I know all the

288
00:13:47,750 --> 00:13:51,610
steps I would want in this process and

289
00:13:49,549 --> 00:13:54,409
I've got at least rudimentary

290
00:13:51,610 --> 00:13:56,990
confirmation from the code they

291
00:13:54,409 --> 00:13:58,490
published with the paper that they're

292
00:13:56,990 --> 00:14:00,919
doing something that would at least be

293
00:13:58,490 --> 00:14:02,539
in line with what I'm thinking and again

294
00:14:00,919 --> 00:14:04,009
we don't know for sure exactly what it

295
00:14:02,539 --> 00:14:05,990
is but we don't really need to know

296
00:14:04,009 --> 00:14:08,509
exactly what it is because we can figure

297
00:14:05,990 --> 00:14:10,339
it out ourselves what we want to put

298
00:14:08,509 --> 00:14:12,110
there and it might be different from

299
00:14:10,339 --> 00:14:17,720
what they did anyway it might be that

300
00:14:12,110 --> 00:14:19,339
our usage is different okay so let's go

301
00:14:17,720 --> 00:14:21,139
ahead and start figuring out how we

302
00:14:19,339 --> 00:14:24,319
would actually make this work and I

303
00:14:21,139 --> 00:14:27,889
think what I want to do first is I'm

304
00:14:24,318 --> 00:14:30,860
going to want to have some method that I

305
00:14:27,889 --> 00:14:33,560
can use to just compute these things and

306
00:14:30,860 --> 00:14:35,839
display them without using them for

307
00:14:33,559 --> 00:14:39,409
lighting because it's gonna take us a

308
00:14:35,839 --> 00:14:42,380
little while to get this working and I

309
00:14:39,409 --> 00:14:45,469
don't want to try to infer

310
00:14:42,379 --> 00:14:47,090
from the lighting in the game whether

311
00:14:45,470 --> 00:14:49,279
it's working I want to be able to

312
00:14:47,090 --> 00:14:51,620
directly see it and I don't want to have

313
00:14:49,279 --> 00:14:56,230
to run my thing under like you know

314
00:14:51,620 --> 00:14:58,220
render dock or something and like grab a

315
00:14:56,230 --> 00:14:59,720
periodic thing I want to be able to like

316
00:14:58,220 --> 00:15:03,080
see it in real time

317
00:14:59,720 --> 00:15:05,300
as we're walking around the game and so

318
00:15:03,080 --> 00:15:07,850
what I would like to do is make

319
00:15:05,299 --> 00:15:12,259
something that will render like let's

320
00:15:07,850 --> 00:15:17,090
say we just add a pass at the end of the

321
00:15:12,259 --> 00:15:22,879
rendering where every voxel grid square

322
00:15:17,090 --> 00:15:26,149
in our cube in our world will show it's

323
00:15:22,879 --> 00:15:28,759
floating in that space what it thinks

324
00:15:26,149 --> 00:15:34,159
the octahedral unwrapping for the space

325
00:15:28,759 --> 00:15:37,939
was right so that I can get some idea of

326
00:15:34,159 --> 00:15:41,919
what's going on in each individual space

327
00:15:37,940 --> 00:15:44,330
in the game so it's a little bit hard to

328
00:15:41,919 --> 00:15:46,219
do it'll take a little bit of work to

329
00:15:44,330 --> 00:15:49,550
like write a thing that's gonna actually

330
00:15:46,220 --> 00:15:51,500
do that manually but it's not really a

331
00:15:49,549 --> 00:15:54,079
huge deal right it's just a bunch of

332
00:15:51,500 --> 00:15:57,169
little like quads that would be camera

333
00:15:54,080 --> 00:16:00,440
facing that pick out the exact region of

334
00:15:57,169 --> 00:16:02,750
the thing and so I'll tackle that in two

335
00:16:00,440 --> 00:16:05,710
steps the first one is getting that

336
00:16:02,750 --> 00:16:08,240
texture atlas set up and the second one

337
00:16:05,710 --> 00:16:10,490
actually will do three steps get the

338
00:16:08,240 --> 00:16:13,250
texture atlas set up and and outputting

339
00:16:10,490 --> 00:16:15,889
some data into it too we'll be drawing

340
00:16:13,250 --> 00:16:17,149
the texture atlas itself down like in

341
00:16:15,889 --> 00:16:20,480
the corner or something so we can just

342
00:16:17,149 --> 00:16:24,139
see it and then third we'll be placing

343
00:16:20,480 --> 00:16:27,320
those individual octahedral unwrapped

344
00:16:24,139 --> 00:16:29,809
quads into the world where they actually

345
00:16:27,320 --> 00:16:30,950
occur so that we can try to correlate

346
00:16:29,809 --> 00:16:33,409
them and see that they're actually

347
00:16:30,950 --> 00:16:36,530
producing something that makes sense

348
00:16:33,409 --> 00:16:40,819
at the points where they are nominally

349
00:16:36,529 --> 00:16:42,439
existing right alright so if we go ahead

350
00:16:40,820 --> 00:16:48,530
and build oops

351
00:16:42,440 --> 00:16:50,560
and we go here and we get the game

352
00:16:48,529 --> 00:16:50,559
running

353
00:16:53,028 --> 00:16:58,438
just make sure everything's kosher here

354
00:16:55,438 --> 00:17:01,759
yeah everything seems good there so if

355
00:16:58,438 --> 00:17:03,899
we go ahead and make sure that we have

356
00:17:01,759 --> 00:17:07,288
somewhere that this is going to actually

357
00:17:03,899 --> 00:17:11,929
be stored what I want to do is start

358
00:17:07,288 --> 00:17:16,919
probably in the OpenGL layer not that

359
00:17:11,929 --> 00:17:20,759
that and in here we look at what we're

360
00:17:16,919 --> 00:17:22,429
currently sending down right and these

361
00:17:20,759 --> 00:17:25,288
are the buffers that we actually store

362
00:17:22,429 --> 00:17:29,090
so you can see we've got light data N

363
00:17:25,288 --> 00:17:31,980
and light data see we've got these

364
00:17:29,089 --> 00:17:34,528
handles and stuff for the textures and

365
00:17:31,980 --> 00:17:37,079
whatnot and the thing that we're gonna

366
00:17:34,528 --> 00:17:39,569
have to reckon with here is that at this

367
00:17:37,079 --> 00:17:42,028
point now we're really not going to be

368
00:17:39,569 --> 00:17:48,470
sending down the data in this format

369
00:17:42,028 --> 00:17:48,470
probably any more is my guess we could

370
00:17:52,429 --> 00:17:55,769
but we would just need a tremendous

371
00:17:54,599 --> 00:17:57,089
number of these because we want to use

372
00:17:55,769 --> 00:17:59,399
octave we want to lose a little texture

373
00:17:57,089 --> 00:18:02,099
so we're going to have something

374
00:17:59,398 --> 00:18:08,000
slightly different happening here we're

375
00:18:02,099 --> 00:18:11,069
going to have a light Atlas handle and

376
00:18:08,000 --> 00:18:15,169
this is going to be a texture that just

377
00:18:11,069 --> 00:18:18,000
has all of those little 2d unwrapped

378
00:18:15,169 --> 00:18:21,149
octahedral unwrapping x' just strewn

379
00:18:18,000 --> 00:18:22,980
throughout it right and in our case

380
00:18:21,148 --> 00:18:27,569
since we know that we're always going to

381
00:18:22,980 --> 00:18:30,240
be doing light probes on a grid right

382
00:18:27,569 --> 00:18:33,269
we're always going to be doing a voxel

383
00:18:30,240 --> 00:18:37,380
of them we really don't need any more

384
00:18:33,269 --> 00:18:40,230
information than that if we look at

385
00:18:37,380 --> 00:18:46,799
something like this what we're gonna see

386
00:18:40,230 --> 00:18:49,349
here is is essentially useless data we

387
00:18:46,798 --> 00:18:52,500
don't need to know any information about

388
00:18:49,349 --> 00:18:56,158
our voxels anymore because just the

389
00:18:52,500 --> 00:18:58,349
voxel information itself like what what

390
00:18:56,159 --> 00:19:01,460
the index would be so the three

391
00:18:58,349 --> 00:19:05,119
coordinates that tell you which voxel

392
00:19:01,460 --> 00:19:06,930
cube you were in just that information

393
00:19:05,119 --> 00:19:10,349
will itself be in

394
00:19:06,930 --> 00:19:13,410
- unwrap into the light Atlas to look up

395
00:19:10,349 --> 00:19:16,469
your lighting so I don't think we're

396
00:19:13,410 --> 00:19:19,740
actually going to need that information

397
00:19:16,470 --> 00:19:23,730
right now it's worth noting that at

398
00:19:19,740 --> 00:19:28,500
least in this paper they did something a

399
00:19:23,730 --> 00:19:31,799
little bit fancier then what we have

400
00:19:28,500 --> 00:19:33,630
done so far and you can see we didn't

401
00:19:31,799 --> 00:19:35,759
talk about this but you can see you

402
00:19:33,630 --> 00:19:38,750
might wonder what's this stuff down here

403
00:19:35,759 --> 00:19:41,819
like why are there why is there extra

404
00:19:38,750 --> 00:19:44,640
information and the answer is because

405
00:19:41,819 --> 00:19:45,990
we've been talking entirely about what

406
00:19:44,640 --> 00:19:49,140
you know in here we've been talking

407
00:19:45,990 --> 00:19:52,019
entirely about what the color of the

408
00:19:49,140 --> 00:19:54,060
light what the irradiance was for a

409
00:19:52,019 --> 00:19:56,039
given probe so you know we're talking

410
00:19:54,059 --> 00:20:00,450
about what's the light value we're gonna

411
00:19:56,039 --> 00:20:02,279
need coming in here and what you have to

412
00:20:00,450 --> 00:20:05,130
remember is when we construct the

413
00:20:02,279 --> 00:20:07,170
lighting from these light probes we're

414
00:20:05,130 --> 00:20:11,490
going to be asking from a particular

415
00:20:07,170 --> 00:20:14,370
location in the world we're gonna be

416
00:20:11,490 --> 00:20:16,170
asking hey what light would be

417
00:20:14,369 --> 00:20:18,029
contributed from this light probe or

418
00:20:16,170 --> 00:20:19,680
something right but we're asking for a

419
00:20:18,029 --> 00:20:23,460
location that is not where the light

420
00:20:19,680 --> 00:20:26,490
probe actually exists and so what

421
00:20:23,460 --> 00:20:28,920
happens there is if we actually have

422
00:20:26,490 --> 00:20:31,740
some features in between the light

423
00:20:28,920 --> 00:20:34,440
probes so basically like we have a light

424
00:20:31,740 --> 00:20:35,910
probe into like you know this light

425
00:20:34,440 --> 00:20:38,670
probe in this light probe so to

426
00:20:35,910 --> 00:20:40,380
neighboring light probes and we're

427
00:20:38,670 --> 00:20:42,720
asking right like what's the lighting

428
00:20:40,380 --> 00:20:44,400
here well the answer is going to be a

429
00:20:42,720 --> 00:20:47,279
combination of these two light probes

430
00:20:44,400 --> 00:20:50,460
only if there isn't like a wall in the

431
00:20:47,279 --> 00:20:53,160
way right so one of the questions we

432
00:20:50,460 --> 00:20:55,650
might want to ask ourselves is from this

433
00:20:53,160 --> 00:20:58,710
light probe to the point we're actually

434
00:20:55,650 --> 00:21:00,420
looking at could we have actually seen

435
00:20:58,710 --> 00:21:02,340
that light probe and that seems like

436
00:21:00,420 --> 00:21:05,009
it's gonna require another raycast right

437
00:21:02,339 --> 00:21:09,240
but it turns out that when we've done

438
00:21:05,009 --> 00:21:12,299
all this work beforehand if we just

439
00:21:09,240 --> 00:21:14,519
store the depth that we tend to see in

440
00:21:12,299 --> 00:21:16,529
that direction like how far the light

441
00:21:14,519 --> 00:21:18,660
probe goes before it hits something in

442
00:21:16,529 --> 00:21:20,298
that direction that would tell us

443
00:21:18,660 --> 00:21:23,028
whether in general

444
00:21:20,298 --> 00:21:24,679
we tend to be able to get far enough out

445
00:21:23,028 --> 00:21:27,618
to encompass the point we're actually

446
00:21:24,679 --> 00:21:30,019
sampling right and so all they do is

447
00:21:27,618 --> 00:21:32,658
just like look let's just store an

448
00:21:30,019 --> 00:21:35,659
additional sample here that's the depth

449
00:21:32,659 --> 00:21:38,450
that we went so that we have that

450
00:21:35,659 --> 00:21:40,820
information in addition right and that

451
00:21:38,450 --> 00:21:43,609
seems like really good idea because if

452
00:21:40,819 --> 00:21:45,558
we do that then we don't really have to

453
00:21:43,608 --> 00:21:48,348
worry anymore right like we can just say

454
00:21:45,558 --> 00:21:49,819
all right we're all ready we already

455
00:21:48,348 --> 00:21:51,108
know that information because we had to

456
00:21:49,819 --> 00:21:54,200
do the rate cast and the rate cast

457
00:21:51,108 --> 00:21:56,449
output how far we went to get the color

458
00:21:54,200 --> 00:21:58,308
value so at that point it just seems

459
00:21:56,450 --> 00:22:00,169
like pretty easy for us to keep that

460
00:21:58,308 --> 00:22:02,588
information and we can improve our

461
00:22:00,169 --> 00:22:04,909
sampling of the light probes with it

462
00:22:02,588 --> 00:22:06,708
so I'm gonna go ahead and say while

463
00:22:04,909 --> 00:22:11,778
we're doing this path let's just do that

464
00:22:06,709 --> 00:22:14,629
and we don't have to use that so maybe

465
00:22:11,778 --> 00:22:18,348
we'll call this like light color Atlas

466
00:22:14,628 --> 00:22:20,088
handle and light depth Atlas handle so

467
00:22:18,348 --> 00:22:22,278
that we can we can have both of those

468
00:22:20,088 --> 00:22:23,868
and in the future we will start to make

469
00:22:22,278 --> 00:22:25,398
use of this whereas at first we can

470
00:22:23,868 --> 00:22:27,319
probably just ignore it because it's yet

471
00:22:25,398 --> 00:22:29,148
another thing that could go wrong but we

472
00:22:27,319 --> 00:22:30,979
might as well just remember okay we're

473
00:22:29,148 --> 00:22:32,298
gonna be outputting that so let's do it

474
00:22:30,979 --> 00:22:34,190
while we do all the rest of this stuff

475
00:22:32,298 --> 00:22:36,469
and we don't have to debug at the same

476
00:22:34,190 --> 00:22:39,200
time but we can at least make sure that

477
00:22:36,469 --> 00:22:42,379
the whole data flow is working and we

478
00:22:39,200 --> 00:22:43,848
don't have to come back and do it so if

479
00:22:42,378 --> 00:22:45,588
we want to do that then we're basically

480
00:22:43,848 --> 00:22:48,288
saying look we're just gonna submit two

481
00:22:45,588 --> 00:22:49,999
things here right and rather than like

482
00:22:48,288 --> 00:22:56,528
did it in light day to see we just have

483
00:22:49,999 --> 00:22:56,528
to have these things in captured for us

484
00:22:59,558 --> 00:23:06,229
and the main thing that we're gonna have

485
00:23:02,598 --> 00:23:08,148
to know here is what the size of our

486
00:23:06,229 --> 00:23:09,649
voxel is because for each voxel we're

487
00:23:08,148 --> 00:23:12,888
gonna have one of those so if we take a

488
00:23:09,648 --> 00:23:15,319
look at this light lookup voxel

489
00:23:12,888 --> 00:23:21,588
dimension we know we're gonna have that

490
00:23:15,319 --> 00:23:23,358
cubed right and I might just go ahead

491
00:23:21,588 --> 00:23:25,219
and say that since we know that these

492
00:23:23,358 --> 00:23:31,109
will be roughly similar I guess we don't

493
00:23:25,219 --> 00:23:34,119
actually know that yeah so

494
00:23:31,109 --> 00:23:42,459
in order to provide the data for these

495
00:23:34,118 --> 00:23:46,418
for the light color data and the light

496
00:23:42,460 --> 00:23:48,940
depth data we know that each of these

497
00:23:46,419 --> 00:23:54,369
are going to store precisely as many

498
00:23:48,940 --> 00:23:57,159
entries effectively as there are voxel

499
00:23:54,368 --> 00:24:00,368
cells which is going to be the cube of

500
00:23:57,159 --> 00:24:03,340
whatever our dimension is but then we

501
00:24:00,368 --> 00:24:06,368
also know that we need some size for

502
00:24:03,339 --> 00:24:09,548
each of them so we need a secondary

503
00:24:06,368 --> 00:24:11,048
parameter here that's going to be like

504
00:24:09,548 --> 00:24:15,519
similar to light

505
00:24:11,048 --> 00:24:17,648
lookup Fox of them right so in addition

506
00:24:15,519 --> 00:24:21,609
to this we're also going to need one

507
00:24:17,648 --> 00:24:26,439
more thing which is the light look up

508
00:24:21,609 --> 00:24:28,118
you know square dim or something and

509
00:24:26,440 --> 00:24:30,220
we're going to have two of these

510
00:24:28,118 --> 00:24:31,449
probably because we don't know that

511
00:24:30,220 --> 00:24:33,429
we're gonna store the depth and the

512
00:24:31,450 --> 00:24:36,369
color at the same resolution and there's

513
00:24:33,429 --> 00:24:40,960
really no reason to unifying that

514
00:24:36,368 --> 00:24:43,449
resolution we could but it doesn't

515
00:24:40,960 --> 00:24:46,450
really save us anything like it may save

516
00:24:43,450 --> 00:24:49,600
us yeah you know I can't think of

517
00:24:46,450 --> 00:24:52,110
anything that saves us so we it's free

518
00:24:49,599 --> 00:24:55,089
for us to find two different constants

519
00:24:52,109 --> 00:24:58,209
that's whatever that square dim is so

520
00:24:55,089 --> 00:25:00,819
the light lookup squared dim is going to

521
00:24:58,210 --> 00:25:04,298
be something else and maybe that's like

522
00:25:00,819 --> 00:25:06,368
eight or whatever right and we probably

523
00:25:04,298 --> 00:25:08,230
again need the padding so it'd be

524
00:25:06,368 --> 00:25:10,118
something like this like it'd be an

525
00:25:08,230 --> 00:25:12,940
eight by eight but with plus two padding

526
00:25:10,118 --> 00:25:14,709
or something like that and we might want

527
00:25:12,940 --> 00:25:15,970
to define the padding or I don't know

528
00:25:14,710 --> 00:25:17,200
how I don't know how we're gonna want to

529
00:25:15,970 --> 00:25:18,730
specify this but it'd be something like

530
00:25:17,200 --> 00:25:21,220
that right and we can break this up into

531
00:25:18,730 --> 00:25:24,868
multiple Defiance later what that means

532
00:25:21,220 --> 00:25:24,868
is we're gonna have something like this

533
00:25:25,200 --> 00:25:31,538
and if we want two different ones one

534
00:25:29,079 --> 00:25:35,128
for the color one for the depth it would

535
00:25:31,538 --> 00:25:35,128
be like this

536
00:25:38,490 --> 00:25:50,609
and this now it's kind of hard to read

537
00:25:46,559 --> 00:25:57,659
that and you know we might want to do

538
00:25:50,609 --> 00:26:06,899
this right where you can pass something

539
00:25:57,660 --> 00:26:08,940
in and it just says that so we just say

540
00:26:06,900 --> 00:26:11,130
alright if I want to cube something I

541
00:26:08,940 --> 00:26:12,269
can just use a macro for that and if I

542
00:26:11,130 --> 00:26:13,950
want to square something I can use a

543
00:26:12,269 --> 00:26:17,099
macro for that because then it's like

544
00:26:13,950 --> 00:26:23,789
well it's the square of this times the

545
00:26:17,099 --> 00:26:27,149
cube of that and that's just easier for

546
00:26:23,789 --> 00:26:30,589
someone to come along and read right so

547
00:26:27,150 --> 00:26:33,150
I feel like that's probably useful I

548
00:26:30,589 --> 00:26:35,789
mean it just it just makes it easier to

549
00:26:33,150 --> 00:26:37,019
read and edit these things and without

550
00:26:35,789 --> 00:26:41,009
that it's kind of a little bit

551
00:26:37,019 --> 00:26:42,329
ridiculous how long it gets there so

552
00:26:41,009 --> 00:26:44,730
then you can say alright it's the square

553
00:26:42,329 --> 00:26:46,199
of this times the cube of that and then

554
00:26:44,730 --> 00:26:48,180
we know what we're actually dealing with

555
00:26:46,200 --> 00:26:52,080
here I'll leave these the same at the

556
00:26:48,180 --> 00:26:54,539
moment and we'll just kind of put light

557
00:26:52,079 --> 00:26:55,980
color and light depth in here but we'll

558
00:26:54,539 --> 00:26:58,769
split those out and play around with

559
00:26:55,980 --> 00:27:00,660
those a little bit more later I might

560
00:26:58,769 --> 00:27:04,349
move this into the math side of things

561
00:27:00,660 --> 00:27:09,840
oh all right

562
00:27:04,349 --> 00:27:11,490
we already had that so I guess we just

563
00:27:09,839 --> 00:27:15,089
weren't using it because we forgot we

564
00:27:11,490 --> 00:27:20,490
had it typical of what we do here but

565
00:27:15,089 --> 00:27:22,799
you know what are the downsides have

566
00:27:20,490 --> 00:27:26,190
only programs something once a week all

567
00:27:22,799 --> 00:27:29,279
right so if we look at what we're doing

568
00:27:26,190 --> 00:27:32,220
here we now have the ability to send

569
00:27:29,279 --> 00:27:35,490
these down we don't need this we don't

570
00:27:32,220 --> 00:27:38,730
need this and so now we've just got one

571
00:27:35,490 --> 00:27:40,799
texture atlas it'll still store all the

572
00:27:38,730 --> 00:27:42,029
color data for our lighting and one that

573
00:27:40,799 --> 00:27:44,789
will store all the depth data for our

574
00:27:42,029 --> 00:27:48,420
lighting I think that's all we actually

575
00:27:44,789 --> 00:27:50,159
will need these again are not submitted

576
00:27:48,420 --> 00:27:50,490
to the shaders these are just submitted

577
00:27:50,160 --> 00:27:53,308
to the

578
00:27:50,490 --> 00:27:54,630
system so they need to stay here but

579
00:27:53,308 --> 00:27:57,960
they don't actually have anything to do

580
00:27:54,630 --> 00:27:59,940
with the texture submission so we're

581
00:27:57,960 --> 00:28:02,460
gonna need to fill these out once a

582
00:27:59,940 --> 00:28:07,500
frame and we're gonna need to submit

583
00:28:02,460 --> 00:28:09,480
them using the using these handles but

584
00:28:07,500 --> 00:28:13,200
once we do that we've pretty much got

585
00:28:09,480 --> 00:28:15,000
the pipeline ready for us and we just

586
00:28:13,200 --> 00:28:19,500
have to go start working on actually

587
00:28:15,000 --> 00:28:24,839
getting the values out right furthermore

588
00:28:19,500 --> 00:28:28,109
I think trying to think here but I

589
00:28:24,839 --> 00:28:30,359
believe if you set these both to white

590
00:28:28,109 --> 00:28:32,399
like we probably could make something

591
00:28:30,359 --> 00:28:34,769
that allows us to turn off the lighting

592
00:28:32,400 --> 00:28:38,040
without actually turning it off meaning

593
00:28:34,769 --> 00:28:39,450
that just subbed in things here that

594
00:28:38,039 --> 00:28:42,599
just say you're getting uniform lighting

595
00:28:39,450 --> 00:28:46,080
from everywhere right so we'll see about

596
00:28:42,599 --> 00:28:48,449
that as well at some point anyway okay

597
00:28:46,079 --> 00:28:50,308
so let's go ahead and start making that

598
00:28:48,450 --> 00:28:52,289
work we're gonna have to start by

599
00:28:50,308 --> 00:28:54,480
changing when we actually create these

600
00:28:52,289 --> 00:28:56,279
things so if you look here when we

601
00:28:54,480 --> 00:28:58,170
actually Gen these textures we're

602
00:28:56,279 --> 00:29:00,750
actually just generating one texture now

603
00:28:58,170 --> 00:29:02,700
instead of a bunch of them

604
00:29:00,750 --> 00:29:04,950
we're just generating one texture for

605
00:29:02,700 --> 00:29:08,580
each of these so we've got the light

606
00:29:04,950 --> 00:29:14,250
color atlas handle and then we've got

607
00:29:08,579 --> 00:29:16,980
the light depth atlas handle that's what

608
00:29:14,250 --> 00:29:19,679
we need there we don't actually need to

609
00:29:16,980 --> 00:29:23,670
do a four eye loop here anymore this is

610
00:29:19,679 --> 00:29:25,080
just going to be sort of your basic it

611
00:29:23,670 --> 00:29:29,279
doesn't need to do any loops it's just

612
00:29:25,079 --> 00:29:34,529
your basic assignment and so if we just

613
00:29:29,279 --> 00:29:37,230
take these the first thing we want to do

614
00:29:34,529 --> 00:29:39,779
is create a light color atlas handle it

615
00:29:37,230 --> 00:29:43,710
is not a 2d texture our 3d texture

616
00:29:39,779 --> 00:29:47,160
anymore anyway it's a 2d one and what

617
00:29:43,710 --> 00:29:54,630
I'm gonna do is at first you know I

618
00:29:47,160 --> 00:29:57,179
guess I don't really know if we can

619
00:29:54,630 --> 00:29:59,640
afford it I on this suit because there's

620
00:29:57,179 --> 00:30:01,440
a high end card I assume we could afford

621
00:29:59,640 --> 00:30:04,130
it what I would like to do is have

622
00:30:01,440 --> 00:30:06,380
everything be float first

623
00:30:04,130 --> 00:30:11,090
I like as much as possible to be able to

624
00:30:06,380 --> 00:30:13,610
get quantization crap out of the process

625
00:30:11,089 --> 00:30:18,289
so that I can eliminate those kinds of

626
00:30:13,609 --> 00:30:20,869
bugs by knowing they don't exist until

627
00:30:18,289 --> 00:30:23,269
I'm done with the other parts younger

628
00:30:20,869 --> 00:30:26,419
them and then I can turn to a quantize

629
00:30:23,269 --> 00:30:29,119
format and deal with bugs that show up

630
00:30:26,420 --> 00:30:32,660
because it it segregates the bugs into

631
00:30:29,119 --> 00:30:33,619
two different kinds of bug so that you

632
00:30:32,660 --> 00:30:36,380
don't have to tackle them both at the

633
00:30:33,619 --> 00:30:39,449
same time now the problem is this is

634
00:30:36,380 --> 00:30:40,640
gonna be pretty big so if it's a 32

635
00:30:39,450 --> 00:30:42,410
[Music]

636
00:30:40,640 --> 00:30:43,960
oops I promised I would never use that

637
00:30:42,410 --> 00:30:45,940
again

638
00:30:43,960 --> 00:30:52,120
where's my speed calc where's most weeks

639
00:30:45,940 --> 00:31:13,299
where's must recalc crap didn't we have

640
00:30:52,119 --> 00:31:18,069
this all set up there that took way too

641
00:31:13,299 --> 00:31:22,779
long all right so if we assume that this

642
00:31:18,069 --> 00:31:30,579
thing is going to be like 32 at least 30

643
00:31:22,779 --> 00:31:37,149
2 cubed times what were we saying 10 so

644
00:31:30,579 --> 00:31:39,669
it was 10 squared so that's not huge you

645
00:31:37,150 --> 00:31:44,530
know each one of those is going to be at

646
00:31:39,670 --> 00:31:47,950
that point 16 wide though so it's a 52

647
00:31:44,529 --> 00:31:50,589
megabyte texture so but that's fine like

648
00:31:47,950 --> 00:31:58,860
for testing purposes right how bad does

649
00:31:50,589 --> 00:32:03,730
it get if we get one more down ouch

650
00:31:58,859 --> 00:32:07,269
so yeah like if we were to go to 64 by

651
00:32:03,730 --> 00:32:13,950
64 by 64 which we may well want to for

652
00:32:07,269 --> 00:32:17,379
resolution quality at that point like

653
00:32:13,950 --> 00:32:21,670
it's pretty dicey and you would

654
00:32:17,380 --> 00:32:24,130
definitely want it to be that so but

655
00:32:21,670 --> 00:32:27,460
even so it would probably just run

656
00:32:24,130 --> 00:32:29,410
slowly like making a half gigabyte

657
00:32:27,460 --> 00:32:31,539
texture on this card will still work

658
00:32:29,410 --> 00:32:36,009
it's just not something we want to do

659
00:32:31,539 --> 00:32:39,730
much right so it's fine so so I'm gonna

660
00:32:36,009 --> 00:32:43,029
say sure like this will work hopefully

661
00:32:39,730 --> 00:32:45,370
it just might be slow and crappy but it

662
00:32:43,029 --> 00:32:46,509
will work right although now that I

663
00:32:45,369 --> 00:32:49,529
think about it how the heck are we gonna

664
00:32:46,509 --> 00:32:49,529
submit this thing

665
00:32:55,829 --> 00:33:00,490
yeah that that is scarier isn't it

666
00:32:58,720 --> 00:33:01,900
because one of the things that I guess

667
00:33:00,490 --> 00:33:05,319
we didn't count on when we thought about

668
00:33:01,900 --> 00:33:06,790
this was most of this would probably

669
00:33:05,319 --> 00:33:08,500
have to now be done on the graphics card

670
00:33:06,789 --> 00:33:09,190
like if we just think about what we're

671
00:33:08,500 --> 00:33:12,420
doing here

672
00:33:09,190 --> 00:33:19,330
it doesn't seem particularly possible

673
00:33:12,420 --> 00:33:20,920
that we would be able to we wouldn't be

674
00:33:19,329 --> 00:33:22,960
able to prepare these textures and send

675
00:33:20,920 --> 00:33:24,490
them down you're not gonna be submitting

676
00:33:22,960 --> 00:33:31,150
that much data per frame and ever it's

677
00:33:24,490 --> 00:33:33,480
never gonna happen so I guess what I

678
00:33:31,150 --> 00:33:36,100
would say is we can start off with this

679
00:33:33,480 --> 00:33:42,420
but we're pretty much gonna have to

680
00:33:36,099 --> 00:33:47,079
we're gonna have to use a 32 by 32 by 32

681
00:33:42,420 --> 00:33:49,269
pretty much we can't try a more resolute

682
00:33:47,079 --> 00:33:53,789
version unless we move it to the card I

683
00:33:49,269 --> 00:33:58,089
mean that's what this tells us right so

684
00:33:53,789 --> 00:34:02,170
we can proceed currently doing it on the

685
00:33:58,089 --> 00:34:04,089
CPU side this way but if we wanted to

686
00:34:02,170 --> 00:34:05,529
move to a higher resolution we'd have to

687
00:34:04,089 --> 00:34:09,878
throw it onto the graphics card there's

688
00:34:05,529 --> 00:34:11,800
no other way to do it right and that has

689
00:34:09,878 --> 00:34:13,929
nothing to do with the computation time

690
00:34:11,800 --> 00:34:16,060
it's literally just the amount of data

691
00:34:13,929 --> 00:34:22,918
traffic that would be involved is

692
00:34:16,059 --> 00:34:22,918
prohibitive week

693
00:34:31,570 --> 00:34:35,629
we could investigate ways of sending

694
00:34:33,858 --> 00:34:37,039
down other stuff but yeah so so I think

695
00:34:35,628 --> 00:34:38,690
basically we have to do here is we'll

696
00:34:37,039 --> 00:34:40,039
get it working this way and then if we

697
00:34:38,690 --> 00:34:41,088
want to do a more resolute version we're

698
00:34:40,039 --> 00:34:44,148
gonna have to run the graphs part which

699
00:34:41,088 --> 00:34:45,710
we may not need to do I don't know the

700
00:34:44,148 --> 00:34:47,358
this resolution may be fine

701
00:34:45,710 --> 00:34:51,349
and if it is then we can stick with our

702
00:34:47,358 --> 00:34:56,418
current method because 32 cubed times 10

703
00:34:51,349 --> 00:34:59,960
squared times 4 is only 13 megabytes and

704
00:34:56,418 --> 00:35:03,500
that is not a troubling number for

705
00:34:59,960 --> 00:35:06,349
sending down to the card every frames so

706
00:35:03,500 --> 00:35:08,239
that would be our target for release

707
00:35:06,349 --> 00:35:10,070
shipping if we can do that we're

708
00:35:08,239 --> 00:35:12,049
probably good we could also change the

709
00:35:10,070 --> 00:35:13,940
resolution in Z because that's probably

710
00:35:12,050 --> 00:35:15,519
less important since we we don't need to

711
00:35:13,940 --> 00:35:18,320
see as many levels of the game

712
00:35:15,519 --> 00:35:20,869
necessarily although I kind of like the

713
00:35:18,320 --> 00:35:22,880
fact that we can see down deeper so but

714
00:35:20,869 --> 00:35:23,960
anyway let's let's just go ahead and

715
00:35:22,880 --> 00:35:25,700
save this what we're gonna do for now

716
00:35:23,960 --> 00:35:27,108
and we'll cross that bridge when company

717
00:35:25,699 --> 00:35:28,489
if we wanna kick it up to 64 by 6 first

718
00:35:27,108 --> 00:35:31,519
before we'd have to go to the graph scar

719
00:35:28,489 --> 00:35:33,739
at that point but either way so at that

720
00:35:31,519 --> 00:35:38,858
point we know that look we've got light

721
00:35:33,739 --> 00:35:42,309
lookup voxel dim times light color

722
00:35:38,858 --> 00:35:48,829
lookup square dim that's our dimension

723
00:35:42,309 --> 00:35:50,838
so it's just that and this can all stay

724
00:35:48,829 --> 00:35:53,630
the same we're only going to need to

725
00:35:50,838 --> 00:35:55,070
send down an RGB float at the moment we

726
00:35:53,630 --> 00:35:57,440
don't need to send down anything else

727
00:35:55,070 --> 00:35:58,250
so that'll just be fine in the future

728
00:35:57,440 --> 00:36:00,380
we'll have to think about how we're

729
00:35:58,250 --> 00:36:04,280
actually gonna store them and that'll

730
00:36:00,380 --> 00:36:07,608
kind of be a issue for another day now

731
00:36:04,280 --> 00:36:09,650
the depth will be easier we don't have

732
00:36:07,608 --> 00:36:12,049
to care about the depth nearly as much

733
00:36:09,650 --> 00:36:15,800
and the reason for that is just because

734
00:36:12,050 --> 00:36:18,440
the depth is just one value so it

735
00:36:15,800 --> 00:36:20,450
doesn't multiply up by 4 like it was

736
00:36:18,440 --> 00:36:23,000
before Oh actually did I forget to do

737
00:36:20,449 --> 00:36:26,179
that no I didn't I remember them so

738
00:36:23,000 --> 00:36:27,559
actually this version is the largest it

739
00:36:26,179 --> 00:36:28,848
could possibly be rather than the

740
00:36:27,559 --> 00:36:33,259
smallest it could possibly be and it

741
00:36:28,849 --> 00:36:35,539
could get as low as x 1 at which point

742
00:36:33,260 --> 00:36:39,800
even the resolute version is probably

743
00:36:35,539 --> 00:36:42,019
not too bad right yeah so even the

744
00:36:39,800 --> 00:36:45,600
really high-res version would still be

745
00:36:42,019 --> 00:36:47,820
untroubled n't have to get x 4

746
00:36:45,599 --> 00:36:50,039
so it's really not that bad by

747
00:36:47,820 --> 00:36:53,039
comparison to the other version which is

748
00:36:50,039 --> 00:36:54,570
quite bad because it's a hundred

749
00:36:53,039 --> 00:36:56,960
megabytes of traffic instead of 26

750
00:36:54,570 --> 00:37:01,650
megabytes and those are pretty different

751
00:36:56,960 --> 00:37:05,670
so anyway all seems fine I don't really

752
00:37:01,650 --> 00:37:11,750
want this as a format in fact I really

753
00:37:05,670 --> 00:37:11,750
just want one color for the depth handle

754
00:37:11,900 --> 00:37:19,860
and when I bind this out I'm gonna want

755
00:37:16,019 --> 00:37:25,289
a 2d texture again I'm gonna want it to

756
00:37:19,860 --> 00:37:27,390
be a are 32f so just one I'm gonna want

757
00:37:25,289 --> 00:37:28,739
it to be the same dimensions as before

758
00:37:27,389 --> 00:37:30,480
but the only difference is we're gonna

759
00:37:28,739 --> 00:37:32,549
use a slightly different constant so

760
00:37:30,480 --> 00:37:34,590
that we can control the size of these

761
00:37:32,550 --> 00:37:35,760
two things separately even though we

762
00:37:34,590 --> 00:37:37,140
don't actually know that we ever

763
00:37:35,760 --> 00:37:38,520
actually want that there's really no

764
00:37:37,139 --> 00:37:39,989
reason not to do it because they're

765
00:37:38,519 --> 00:37:42,329
always gonna be separate code paths I

766
00:37:39,989 --> 00:37:43,949
think for the most part that can just

767
00:37:42,329 --> 00:37:46,170
use a different constant in that place

768
00:37:43,949 --> 00:37:51,739
so it shouldn't be a huge deal for us to

769
00:37:46,170 --> 00:37:51,740
fix that part so off we go

770
00:38:02,449 --> 00:38:11,308
that just looks fine I guess I don't

771
00:38:09,150 --> 00:38:13,139
remember exactly what happens in GL

772
00:38:11,309 --> 00:38:16,349
texture 2d though in terms of parameters

773
00:38:13,139 --> 00:38:17,608
I should look because I don't know if

774
00:38:16,349 --> 00:38:21,028
this extra parameter is there so you

775
00:38:17,608 --> 00:38:24,420
know I'm just gonna real quick pop over

776
00:38:21,028 --> 00:38:28,079
to Doc's top GL and take a look at what

777
00:38:24,420 --> 00:38:30,358
GL texture to text image 2d actually

778
00:38:28,079 --> 00:38:31,410
takes because it's always just this big

779
00:38:30,358 --> 00:38:32,338
string of parameter so I want to make

780
00:38:31,409 --> 00:38:36,748
sure we've got it right

781
00:38:32,338 --> 00:38:40,429
so target check level check internal

782
00:38:36,748 --> 00:38:44,848
format check width and height check

783
00:38:40,429 --> 00:38:48,919
border check format type data so I think

784
00:38:44,849 --> 00:38:52,890
we've got that correct like that looks

785
00:38:48,920 --> 00:38:57,539
that looks fine so this is all we really

786
00:38:52,889 --> 00:39:00,690
needed to do I think that pretty much

787
00:38:57,539 --> 00:39:02,249
gets us what we want and the only

788
00:39:00,690 --> 00:39:05,130
difference here is since we're storing

789
00:39:02,248 --> 00:39:07,649
floats at the moment I'm just gonna say

790
00:39:05,130 --> 00:39:10,588
all right at the moment instead of you

791
00:39:07,650 --> 00:39:14,460
32s these are gonna be like v3 s and F

792
00:39:10,588 --> 00:39:16,259
32 s because again I just want to start

793
00:39:14,460 --> 00:39:20,039
out in float so that we don't have to

794
00:39:16,259 --> 00:39:21,509
worry about quantization until we get

795
00:39:20,039 --> 00:39:23,430
everything else working it just keeps

796
00:39:21,509 --> 00:39:25,230
it's something complicated like lighting

797
00:39:23,429 --> 00:39:27,179
I'm just trying to manage the complexity

798
00:39:25,230 --> 00:39:28,889
a little bit because it's always bad and

799
00:39:27,179 --> 00:39:32,538
you don't want to give yourself even

800
00:39:28,889 --> 00:39:37,108
more to worry about that's probably not

801
00:39:32,539 --> 00:39:44,210
actually a a dynamic call there that's

802
00:39:37,108 --> 00:39:46,380
probably just built in yeah alright so

803
00:39:44,210 --> 00:39:48,119
what is the problem here

804
00:39:46,380 --> 00:39:54,150
term does not have vowed to oh yeah

805
00:39:48,119 --> 00:39:55,950
forgot the comma all right so now all we

806
00:39:54,150 --> 00:39:58,950
need to do is in the light Direction

807
00:39:55,949 --> 00:40:00,689
count here a loop that we were doing

808
00:39:58,949 --> 00:40:04,278
before this is not going to happen so

809
00:40:00,690 --> 00:40:07,710
when we fill out these commands the game

810
00:40:04,278 --> 00:40:09,960
render commands we just need to pass

811
00:40:07,710 --> 00:40:13,079
only these two things that we actually

812
00:40:09,960 --> 00:40:13,289
needed so here we have lightbox we'll

813
00:40:13,079 --> 00:40:16,560
see

814
00:40:13,289 --> 00:40:19,289
in late voxel n that's actually going to

815
00:40:16,559 --> 00:40:24,840
be changed and it's going to be light

816
00:40:19,289 --> 00:40:28,380
voxel C and light voxel D oops and these

817
00:40:24,840 --> 00:40:30,269
two here I guess we don't really need to

818
00:40:28,380 --> 00:40:34,170
do that we can just have this be a

819
00:40:30,269 --> 00:40:40,969
pointer in each case and this is a v3

820
00:40:34,170 --> 00:40:43,769
and that's an f32 so these are you know

821
00:40:40,969 --> 00:40:46,709
not gonna be labeled anymore done with

822
00:40:43,769 --> 00:40:48,389
that so these are gonna gather the

823
00:40:46,710 --> 00:40:50,849
information we actually need here and I

824
00:40:48,389 --> 00:40:54,150
think we're good to go from there

825
00:40:50,849 --> 00:40:56,190
what I would like to do is get rid of

826
00:40:54,150 --> 00:40:59,789
the for loop because we don't need that

827
00:40:56,190 --> 00:41:05,599
anymore and then these should be C and D

828
00:40:59,789 --> 00:41:11,869
and they should point to light color

829
00:41:05,599 --> 00:41:15,690
data light depth dates depth data and

830
00:41:11,869 --> 00:41:22,319
they no longer have multiple indices

831
00:41:15,690 --> 00:41:24,179
it's just one of each alright so now

832
00:41:22,320 --> 00:41:27,390
that we've got that out of the way

833
00:41:24,179 --> 00:41:29,909
the binding textures here again no

834
00:41:27,389 --> 00:41:31,589
longer necessary to actually have a for

835
00:41:29,909 --> 00:41:35,309
loop because we're only gonna bind one

836
00:41:31,590 --> 00:41:38,760
of them we don't need to do text sub

837
00:41:35,309 --> 00:41:40,889
image because it's actually just sorry

838
00:41:38,760 --> 00:41:43,920
we don't need to do text sub to D

839
00:41:40,889 --> 00:41:47,730
because it's 3d it's actually 2d and

840
00:41:43,920 --> 00:41:51,210
similarly all of those can go by the

841
00:41:47,730 --> 00:41:56,250
wayside so we have a light color Atlas

842
00:41:51,210 --> 00:41:59,280
handle and a light depth Atlas handle

843
00:41:56,250 --> 00:42:01,530
and in here where we actually specify

844
00:41:59,280 --> 00:42:05,100
like the offset we're only going to need

845
00:42:01,530 --> 00:42:07,080
two offsets not three so we've got the

846
00:42:05,099 --> 00:42:09,630
level and the X&amp;Y

847
00:42:07,079 --> 00:42:11,849
we then have the size of the thing that

848
00:42:09,630 --> 00:42:16,460
we're going to be doing here and again

849
00:42:11,849 --> 00:42:21,449
that's going to be the voxel dim times

850
00:42:16,460 --> 00:42:24,769
the light color lookup Square and then

851
00:42:21,449 --> 00:42:24,769
we're gonna need to do the same thing

852
00:42:26,619 --> 00:42:33,799
for these

853
00:42:29,079 --> 00:42:36,259
so again just sending down those two

854
00:42:33,800 --> 00:42:38,960
however wait you know what this is not

855
00:42:36,260 --> 00:42:41,630
quite right I just realized something

856
00:42:38,960 --> 00:42:46,039
these still need to be unpacked so

857
00:42:41,630 --> 00:42:49,670
actually we do need a place to store the

858
00:42:46,039 --> 00:42:51,590
cube version so one of our dimensions

859
00:42:49,670 --> 00:42:54,710
and I guess I don't know which one

860
00:42:51,590 --> 00:43:00,079
actually needs to be bigger than that

861
00:42:54,710 --> 00:43:03,289
right so hmm I guess I don't know did we

862
00:43:00,079 --> 00:43:04,759
that we need this thing to be square for

863
00:43:03,289 --> 00:43:14,360
any particular reason because we're not

864
00:43:04,760 --> 00:43:16,070
mipmapping it or anything yes oh I guess

865
00:43:14,360 --> 00:43:18,070
I don't know that this needs to be

866
00:43:16,070 --> 00:43:21,050
square for any particular reason

867
00:43:18,070 --> 00:43:23,150
although it may be better to do so I

868
00:43:21,050 --> 00:43:26,030
mean it may still be nice to have powers

869
00:43:23,150 --> 00:43:29,269
of two for it but I guess that's a

870
00:43:26,030 --> 00:43:31,460
separate thing but point being one of

871
00:43:29,269 --> 00:43:35,199
these dimensions has to be larger right

872
00:43:31,460 --> 00:43:37,730
and I don't know which one we want to do

873
00:43:35,199 --> 00:43:40,339
because if you imagine right we've got

874
00:43:37,730 --> 00:43:43,420
sheets that are light lookup voxel dim

875
00:43:40,340 --> 00:43:46,460
by light looks like lookup voxel dim

876
00:43:43,420 --> 00:43:49,700
number of octahedral unwrapping but then

877
00:43:46,460 --> 00:43:52,760
we have another voxel dims worth of each

878
00:43:49,699 --> 00:43:56,419
of those because it's three-dimensional

879
00:43:52,760 --> 00:43:58,130
right so one of our dimensions has to

880
00:43:56,420 --> 00:44:00,260
have that in there right like we have to

881
00:43:58,130 --> 00:44:02,480
have like the X be longer or the Y be

882
00:44:00,260 --> 00:44:04,340
longer I don't know which one we

883
00:44:02,480 --> 00:44:07,760
probably want I'll say let's double the

884
00:44:04,340 --> 00:44:11,019
X for now right so basically our X has

885
00:44:07,760 --> 00:44:17,270
the equivalent of the whole thing in it

886
00:44:11,019 --> 00:44:19,969
and you know the Y like the Y is

887
00:44:17,269 --> 00:44:24,079
actually gonna be the Z at this point

888
00:44:19,969 --> 00:44:27,379
right so I didn't really think that

889
00:44:24,079 --> 00:44:30,369
through that that was not what we wanted

890
00:44:27,380 --> 00:44:30,369
to do there sorry about that

891
00:44:36,690 --> 00:44:40,889
let me think about that for a second

892
00:44:45,150 --> 00:44:54,660
yeah I think that would be fine

893
00:44:48,539 --> 00:44:56,730
I think that'll just work so we need to

894
00:44:54,659 --> 00:44:59,518
when we actually create them we need to

895
00:44:56,730 --> 00:45:04,409
fix that then and so where we actually

896
00:44:59,518 --> 00:45:06,449
do the text the original text image duty

897
00:45:04,409 --> 00:45:09,028
we need to make sure that we actually do

898
00:45:06,449 --> 00:45:12,239
it that way the problem with that there

899
00:45:09,028 --> 00:45:13,858
is I'm not really sure again like I'm

900
00:45:12,239 --> 00:45:16,139
not sure how to really encode that it

901
00:45:13,858 --> 00:45:21,690
seems like it's fine the way it is let

902
00:45:16,139 --> 00:45:24,088
me just go back here and change that so

903
00:45:21,690 --> 00:45:26,159
if we double this voxel dim here on the

904
00:45:24,088 --> 00:45:27,599
X I guess for now we'll just remember

905
00:45:26,159 --> 00:45:31,798
that's the case but we nice to make that

906
00:45:27,599 --> 00:45:34,740
a little bit more systemic it's just

907
00:45:31,798 --> 00:45:39,298
it's a little wonky right but all right

908
00:45:34,739 --> 00:45:43,919
so suppose we do that I'm gonna go ahead

909
00:45:39,298 --> 00:45:49,230
and make this be C and this be D and

910
00:45:43,920 --> 00:45:51,210
then we can run all right so that's what

911
00:45:49,230 --> 00:45:53,838
we're looking at or trying to look at

912
00:45:51,210 --> 00:45:56,639
here oops I don't know why that's a 3d

913
00:45:53,838 --> 00:45:58,710
that's what we're looking at and now we

914
00:45:56,639 --> 00:46:03,150
just need to actually get rid of our

915
00:45:58,710 --> 00:46:12,150
compilers obviously that's a built-in

916
00:46:03,150 --> 00:46:13,710
again just like it was before I don't

917
00:46:12,150 --> 00:46:20,338
remember what this is called light color

918
00:46:13,710 --> 00:46:22,588
data yeah and like depth data at that

919
00:46:20,338 --> 00:46:24,509
point I think we have created the

920
00:46:22,588 --> 00:46:26,578
textures and we've bound the textures

921
00:46:24,509 --> 00:46:32,150
but we don't ever accept the textures

922
00:46:26,579 --> 00:46:32,150
okay here we go with that right so oh

923
00:46:32,420 --> 00:46:37,079
wait no nevermind

924
00:46:34,409 --> 00:46:39,058
so here we submit the textures we just

925
00:46:37,079 --> 00:46:40,859
haven't ever used the textures so now we

926
00:46:39,059 --> 00:46:43,980
need to actually use the textures which

927
00:46:40,858 --> 00:46:51,119
happens in here so we're gonna have the

928
00:46:43,980 --> 00:46:53,548
light data C or light color data and the

929
00:46:51,119 --> 00:46:57,749
light depth data

930
00:46:53,548 --> 00:47:01,409
we don't need this index anymore and

931
00:46:57,748 --> 00:47:03,448
we've only got it just the one time

932
00:47:01,409 --> 00:47:05,909
and so in here we don't really need this

933
00:47:03,449 --> 00:47:08,099
anymore it's just three two and three

934
00:47:05,909 --> 00:47:13,798
right there's nothing particularly fancy

935
00:47:08,099 --> 00:47:16,949
happening there and I think that's it so

936
00:47:13,798 --> 00:47:19,259
now in the actual shader we will have to

937
00:47:16,949 --> 00:47:27,148
pull from these a little bit differently

938
00:47:19,259 --> 00:47:41,478
right in this particular case these are

939
00:47:27,148 --> 00:47:47,458
texture two DS now this also is a handle

940
00:47:41,478 --> 00:47:50,398
and I think we just want to go to the

941
00:47:47,458 --> 00:47:52,288
shader now right so this is us actually

942
00:47:50,398 --> 00:47:55,108
filling this stuff out in the actual

943
00:47:52,289 --> 00:47:58,819
lighting code which we do want to go

944
00:47:55,108 --> 00:48:00,958
address but that's sort of step two so

945
00:47:58,818 --> 00:48:03,958
before we do that we should go to the

946
00:48:00,958 --> 00:48:05,398
compile Z bias program which is the

947
00:48:03,958 --> 00:48:10,938
thing that actually needs to take this

948
00:48:05,398 --> 00:48:13,828
information and when it actually does

949
00:48:10,938 --> 00:48:16,438
you can see here it got all this stuff

950
00:48:13,829 --> 00:48:17,429
none of that is actually what we want

951
00:48:16,438 --> 00:48:20,608
anymore

952
00:48:17,429 --> 00:48:24,539
so now we want a light color sampler and

953
00:48:20,608 --> 00:48:26,668
a light depth sampler and there's only

954
00:48:24,539 --> 00:48:30,659
going to be just those two so we're not

955
00:48:26,668 --> 00:48:35,969
gonna do any more of those right so

956
00:48:30,659 --> 00:48:38,278
that's the entirety of it and I don't

957
00:48:35,969 --> 00:48:41,039
think anyone else cared about this right

958
00:48:38,278 --> 00:48:42,268
it's just this shader is the only one

959
00:48:41,039 --> 00:48:45,989
that actually samples the lighting I

960
00:48:42,268 --> 00:48:50,638
think and so now these are going to be

961
00:48:45,989 --> 00:48:55,019
uniform samplers that look like this and

962
00:48:50,639 --> 00:48:57,869
we've got color sampler and a depth

963
00:48:55,018 --> 00:49:02,688
sampler when we actually go to sample

964
00:48:57,869 --> 00:49:06,349
them like in you know this stuff here is

965
00:49:02,688 --> 00:49:08,210
now kind of all wrong

966
00:49:06,349 --> 00:49:10,278
we're gonna have to rewrite all of this

967
00:49:08,210 --> 00:49:11,809
stuff because this is all doing totally

968
00:49:10,278 --> 00:49:16,960
different stuff than we were doing

969
00:49:11,809 --> 00:49:19,339
before and so we're gonna have to do a

970
00:49:16,960 --> 00:49:20,659
completely different way of sampling

971
00:49:19,338 --> 00:49:24,108
because now we're gonna actually be

972
00:49:20,659 --> 00:49:27,139
using octahedral samples and we're going

973
00:49:24,108 --> 00:49:30,558
to be getting eight of them and actually

974
00:49:27,139 --> 00:49:42,969
like you know pulling from those eight

975
00:49:30,559 --> 00:49:42,970
and blending together all right so I

976
00:49:43,329 --> 00:49:49,880
want to say that all like literally all

977
00:49:46,880 --> 00:49:51,499
of this unfortunately is now kind of

978
00:49:49,880 --> 00:49:56,349
just not right

979
00:49:51,498 --> 00:50:02,238
and so I kind of think we can just maybe

980
00:49:56,349 --> 00:50:06,410
not use we can just delete it really we

981
00:50:02,239 --> 00:50:08,809
know that this is roughly correct but

982
00:50:06,409 --> 00:50:12,469
everything past there is like we're not

983
00:50:08,809 --> 00:50:14,989
going to be using any voxel lookups

984
00:50:12,469 --> 00:50:18,759
anymore and so I think we can just say

985
00:50:14,989 --> 00:50:23,269
all right look that is gonna happen and

986
00:50:18,759 --> 00:50:28,838
this stuff is gonna happen totally

987
00:50:23,268 --> 00:50:34,998
differently so we can probably just not

988
00:50:28,838 --> 00:50:43,489
do this I mean it's not really gonna

989
00:50:34,998 --> 00:50:49,278
help I'll leave it in for now but I'm

990
00:50:43,489 --> 00:50:51,230
mostly just gonna not use it so let's go

991
00:50:49,278 --> 00:50:54,949
ahead and say all right there's just an

992
00:50:51,230 --> 00:50:59,389
f0 here that's gonna be taken out of the

993
00:50:54,949 --> 00:51:02,509
equation it's literally inside the

994
00:50:59,389 --> 00:51:09,018
sunlight call what we'll do is we'll

995
00:51:02,509 --> 00:51:10,849
just return a white light for now and

996
00:51:09,018 --> 00:51:13,038
we'll just leave it at that

997
00:51:10,849 --> 00:51:15,588
so it doesn't matter what you send down

998
00:51:13,039 --> 00:51:17,900
it's never gonna get looked at it's just

999
00:51:15,588 --> 00:51:27,469
going to be no lighting

1000
00:51:17,900 --> 00:51:29,030
all right and oops here where we

1001
00:51:27,469 --> 00:51:31,730
actually send down lighting from the

1002
00:51:29,030 --> 00:51:34,519
voxel cells again this is going to

1003
00:51:31,730 --> 00:51:37,519
totally change so we should probably

1004
00:51:34,519 --> 00:51:41,389
just not bother doing much with this

1005
00:51:37,519 --> 00:51:43,699
stuff anyway in fact I think I'm just

1006
00:51:41,389 --> 00:51:54,170
gonna delete this cuz it's completely

1007
00:51:43,699 --> 00:51:57,949
useless so off that goes as well all

1008
00:51:54,170 --> 00:52:00,559
right so now let's just get things

1009
00:51:57,949 --> 00:52:02,539
working at all so let's take a look at

1010
00:52:00,559 --> 00:52:04,880
our OpenGL errors you can see here we're

1011
00:52:02,539 --> 00:52:09,590
getting an error message from up in jail

1012
00:52:04,880 --> 00:52:11,059
let's see what it says of course we

1013
00:52:09,590 --> 00:52:20,300
can't because the debug info won't tell

1014
00:52:11,059 --> 00:52:22,940
us I feel like we should be able to see

1015
00:52:20,300 --> 00:52:26,120
that at least cuz it's a parameter yeah

1016
00:52:22,940 --> 00:52:29,450
GL invalid enum so I don't know where

1017
00:52:26,119 --> 00:52:31,190
this is happening but presumably yeah I

1018
00:52:29,449 --> 00:52:36,409
was gonna say presumably just missed a

1019
00:52:31,190 --> 00:52:38,960
texture 3d so the I hate absolutely hate

1020
00:52:36,409 --> 00:52:41,899
the way OpenGL does that they fixed it

1021
00:52:38,960 --> 00:52:44,840
all but of course trying to be in OpenGL

1022
00:52:41,900 --> 00:52:46,490
3 means you can't really use it instead

1023
00:52:44,840 --> 00:52:48,920
of just saying what the handle is you

1024
00:52:46,489 --> 00:52:50,629
always say what the target is which

1025
00:52:48,920 --> 00:52:52,990
means every time you change what kind of

1026
00:52:50,630 --> 00:52:55,700
texture you got to change all the enums

1027
00:52:52,989 --> 00:52:59,329
related to that texture which it doesn't

1028
00:52:55,699 --> 00:53:01,399
make any sense it's it's a nonsense way

1029
00:52:59,329 --> 00:53:06,619
to do things I don't know why they did

1030
00:53:01,400 --> 00:53:08,599
it that way but point being we need to

1031
00:53:06,619 --> 00:53:11,900
make sure that we in fact really

1032
00:53:08,599 --> 00:53:16,159
shouldn't have a texture 3d anywhere

1033
00:53:11,900 --> 00:53:23,349
anymore I don't think so like all of

1034
00:53:16,159 --> 00:53:23,349
these should all be text 2d I think

1035
00:53:24,900 --> 00:53:31,480
and this doesn't need to be here anymore

1036
00:53:29,110 --> 00:53:34,240
for obvious reasons because it's not

1037
00:53:31,480 --> 00:53:38,740
actually 3d so there's no wrapping that

1038
00:53:34,239 --> 00:53:40,000
can happen in our right so let's take a

1039
00:53:38,739 --> 00:53:41,919
look and see if there's any other

1040
00:53:40,000 --> 00:53:46,719
texture 3ds anywhere because we know

1041
00:53:41,920 --> 00:53:48,820
they're probably wrong yeah so I think

1042
00:53:46,719 --> 00:53:50,500
we can just for now get rid of those we

1043
00:53:48,820 --> 00:53:55,350
don't have any Vox lookups we need to do

1044
00:53:50,500 --> 00:54:00,820
so let's just get rid of those all right

1045
00:53:55,349 --> 00:54:08,739
oops let's rerun that and see if we can

1046
00:54:00,820 --> 00:54:10,420
get to some other error and texture type

1047
00:54:08,739 --> 00:54:12,909
and format combinations about all right

1048
00:54:10,420 --> 00:54:23,409
so let's take a look who is asking for

1049
00:54:12,909 --> 00:54:25,750
this so this it did not like oh I think

1050
00:54:23,409 --> 00:54:29,980
because that's not the I think it's GL

1051
00:54:25,750 --> 00:54:36,489
I'm just going to read and I think those

1052
00:54:29,980 --> 00:54:41,369
are actually different I guess I'm not

1053
00:54:36,489 --> 00:54:45,119
sure I guess I'm not really sure but

1054
00:54:41,369 --> 00:54:45,119
let's try and find out

1055
00:54:49,440 --> 00:54:54,590
I think that's right

1056
00:55:01,969 --> 00:55:07,259
exception thrown but it doesn't say who

1057
00:55:05,610 --> 00:55:13,620
has thrown the exception who has thrown

1058
00:55:07,260 --> 00:55:15,870
this exception somebody has thrown an

1059
00:55:13,619 --> 00:55:20,069
exception but we cannot see a call stack

1060
00:55:15,869 --> 00:55:25,980
I don't know why oh because we threw an

1061
00:55:20,070 --> 00:55:31,200
exception on the red really that seems

1062
00:55:25,980 --> 00:55:34,079
bad how can we not get what would

1063
00:55:31,199 --> 00:55:41,939
involve a jump of that nature that seems

1064
00:55:34,079 --> 00:55:44,880
a little bit weird I wonder where that

1065
00:55:41,940 --> 00:55:48,210
is let's see if we can step through and

1066
00:55:44,880 --> 00:55:50,809
just so we can find out roughly where

1067
00:55:48,210 --> 00:55:50,809
we're crashing

1068
00:55:59,099 --> 00:56:09,180
so we initialize okay so we must be

1069
00:56:06,298 --> 00:56:11,579
getting a problem when we actually go to

1070
00:56:09,179 --> 00:56:19,588
render something let's see if we make it

1071
00:56:11,579 --> 00:56:21,869
to end frame let's put it that way so we

1072
00:56:19,588 --> 00:56:23,788
do make it to the end of the frame let's

1073
00:56:21,869 --> 00:56:30,028
see what happens if we step into the

1074
00:56:23,789 --> 00:56:31,259
frame submission we should be here it

1075
00:56:30,028 --> 00:56:34,588
could be that we screwed up

1076
00:56:31,259 --> 00:56:38,818
like this for example right Oh

1077
00:56:34,588 --> 00:56:41,130
in fact that is screwed up yeah and

1078
00:56:38,818 --> 00:56:42,449
that's what it is not sure why it

1079
00:56:41,130 --> 00:56:45,239
couldn't tell us that I guess because

1080
00:56:42,449 --> 00:56:48,180
since we were giving it memory that we

1081
00:56:45,239 --> 00:56:50,969
had known it must have just overwritten

1082
00:56:48,179 --> 00:56:52,679
some things somehow I guess I'm not

1083
00:56:50,969 --> 00:56:55,409
really sure why it would have because

1084
00:56:52,679 --> 00:56:56,759
we're not writing to memory here that we

1085
00:56:55,409 --> 00:56:57,868
don't own we're asking it to fetch

1086
00:56:56,759 --> 00:57:00,298
memory doesn't own which should have

1087
00:56:57,869 --> 00:57:01,559
just faulted on the read but that

1088
00:57:00,298 --> 00:57:05,489
doesn't look like what actually happened

1089
00:57:01,559 --> 00:57:08,489
so I guess I don't know why that

1090
00:57:05,489 --> 00:57:13,949
occurred exactly but apparently it did

1091
00:57:08,489 --> 00:57:14,458
so off we go so that should be right

1092
00:57:13,949 --> 00:57:16,318
here

1093
00:57:14,458 --> 00:57:19,169
and that's the problems that we told it

1094
00:57:16,318 --> 00:57:21,150
three components which is not what we're

1095
00:57:19,170 --> 00:57:23,909
actually submitting right we're actually

1096
00:57:21,150 --> 00:57:25,979
submitting one component so it was

1097
00:57:23,909 --> 00:57:27,568
reading three times as much data because

1098
00:57:25,978 --> 00:57:29,788
we said here's the dimensions and then

1099
00:57:27,568 --> 00:57:32,579
we said well there's three per element

1100
00:57:29,789 --> 00:57:36,539
but there isn't and obviously that's not

1101
00:57:32,579 --> 00:57:39,630
in the mix so here's the renderer

1102
00:57:36,539 --> 00:57:43,410
running songs lighting so there's no

1103
00:57:39,630 --> 00:57:45,749
lighting being used but in theory the

1104
00:57:43,409 --> 00:57:48,989
lighting textures exist and are being

1105
00:57:45,748 --> 00:57:51,718
submitted now and so the first thing I

1106
00:57:48,989 --> 00:57:54,329
would say is let's do exactly what we

1107
00:57:51,719 --> 00:57:56,519
did last time let's try to output

1108
00:57:54,329 --> 00:57:59,670
standard spherical lighting into the

1109
00:57:56,518 --> 00:58:03,268
octahedrons that will take at least the

1110
00:57:59,670 --> 00:58:06,719
rest of the day today if not into next

1111
00:58:03,268 --> 00:58:08,939
weekend and that will be our goal so

1112
00:58:06,719 --> 00:58:10,619
then we can output spherical lighting

1113
00:58:08,940 --> 00:58:12,550
from one light source into the

1114
00:58:10,619 --> 00:58:14,960
octahedrons

1115
00:58:12,550 --> 00:58:18,019
unencoded them in light with that

1116
00:58:14,960 --> 00:58:19,639
results in the actual renderer and we

1117
00:58:18,019 --> 00:58:22,849
can display those textures so that's a

1118
00:58:19,639 --> 00:58:24,710
ton of work to do and if we actually get

1119
00:58:22,849 --> 00:58:26,029
that done we've put ourselves once

1120
00:58:24,710 --> 00:58:30,260
that's done we've put ourselves in very

1121
00:58:26,030 --> 00:58:33,980
good position for finishing up right all

1122
00:58:30,260 --> 00:58:36,620
right so let's go ahead and do that

1123
00:58:33,980 --> 00:58:40,039
the first thing we would need to do is

1124
00:58:36,619 --> 00:58:44,539
implement the octahedral wrap and unwrap

1125
00:58:40,039 --> 00:58:47,090
so I'm going to go ahead into math land

1126
00:58:44,539 --> 00:58:52,039
here and I'm just gonna have an

1127
00:58:47,090 --> 00:58:55,160
octahedral wrap and unwrap so I'm gonna

1128
00:58:52,039 --> 00:58:57,949
have a v2 that comes out of this and I'm

1129
00:58:55,159 --> 00:59:05,179
going to have like unit vector or

1130
00:58:57,949 --> 00:59:07,460
octahedral from unit vector something

1131
00:59:05,179 --> 00:59:09,759
like that and then I'm gonna have a v3

1132
00:59:07,460 --> 00:59:15,349
which is like unit vector from

1133
00:59:09,760 --> 00:59:18,950
octahedral and these will just be my

1134
00:59:15,349 --> 00:59:22,759
functions that transform in and out

1135
00:59:18,949 --> 00:59:28,879
right and I guess we'll call this V and

1136
00:59:22,760 --> 00:59:33,790
this o or something right and so we know

1137
00:59:28,880 --> 00:59:33,789
we're gonna compute something like this

1138
00:59:35,349 --> 00:59:41,900
and let's go through the steps so we

1139
00:59:39,380 --> 00:59:44,329
know that if we want to compute an

1140
00:59:41,900 --> 00:59:46,700
octahedral mapping from a direction

1141
00:59:44,329 --> 00:59:49,579
vector we know that we need to start by

1142
00:59:46,699 --> 00:59:51,710
taking the absolute value so we're going

1143
00:59:49,579 --> 00:59:54,940
to need the fact absolute value of the

1144
00:59:51,710 --> 00:59:54,940
three components of this thing

1145
00:59:59,710 --> 01:00:04,690
in order to cause remember we start by

1146
01:00:01,239 --> 01:00:07,089
taking the one norm right so we need to

1147
01:00:04,690 --> 01:00:09,280
take the one norm of this thing that

1148
01:00:07,090 --> 01:00:11,440
goes down here so now we know its

1149
01:00:09,280 --> 01:00:14,560
magnitude and again this is so we can

1150
01:00:11,440 --> 01:00:16,300
transform it from a sphere which is

1151
01:00:14,559 --> 01:00:20,409
obviously gonna it's going to have that

1152
01:00:16,300 --> 01:00:23,250
that signature bowing out that a sphere

1153
01:00:20,409 --> 01:00:27,639
has right it's it's got the sine cosine

1154
01:00:23,250 --> 01:00:32,590
curve baked in there we're taking that

1155
01:00:27,639 --> 01:00:36,219
out right so we start with the one norm

1156
01:00:32,590 --> 01:00:39,820
we've computed the one norm now we need

1157
01:00:36,219 --> 01:00:42,039
to figure out what the xy-plane ER

1158
01:00:39,820 --> 01:00:47,920
projection would be so getting rid of

1159
01:00:42,039 --> 01:00:51,059
the Z so if we take the V XY here and we

1160
01:00:47,920 --> 01:00:56,710
take the reciprocal of the one norm so

1161
01:00:51,059 --> 01:00:59,590
this right so if we invert the one norm

1162
01:00:56,710 --> 01:01:03,849
and then we use that as a coefficient to

1163
01:00:59,590 --> 01:01:06,850
multiply the XY the actual planar

1164
01:01:03,849 --> 01:01:09,759
version of this octahedron that's gonna

1165
01:01:06,849 --> 01:01:12,250
get us back the actual result right

1166
01:01:09,760 --> 01:01:17,020
that's our actual octahedral mapping

1167
01:01:12,250 --> 01:01:19,809
right there but we now need to take care

1168
01:01:17,019 --> 01:01:25,500
of the bottom half of the sphere so this

1169
01:01:19,809 --> 01:01:28,989
would take a the hemispherical map and

1170
01:01:25,500 --> 01:01:32,349
we just be done but in the case where

1171
01:01:28,989 --> 01:01:35,129
the Z is less than zero now we have to

1172
01:01:32,349 --> 01:01:38,769
compute a version of this thing that

1173
01:01:35,130 --> 01:01:43,000
blows out those under the underside of

1174
01:01:38,769 --> 01:01:46,030
the sphere out into the unfolded part of

1175
01:01:43,000 --> 01:01:48,909
the octahedral map so to do that we need

1176
01:01:46,030 --> 01:01:50,980
to start by saying well okay if V is

1177
01:01:48,909 --> 01:01:53,349
less than zero then we're in that case

1178
01:01:50,980 --> 01:01:56,050
if we're not then just don't do it right

1179
01:01:53,349 --> 01:01:59,199
so this is complete if we were on the

1180
01:01:56,050 --> 01:02:02,430
top half of the sphere the Z positive

1181
01:01:59,199 --> 01:02:02,429
half the sphere

1182
01:02:05,048 --> 01:02:17,318
oh that's tart as a lemon juice anyway

1183
01:02:13,018 --> 01:02:22,868
so we get that and we want to say all

1184
01:02:17,318 --> 01:02:24,880
right let's take the let's take the

1185
01:02:22,869 --> 01:02:28,209
unfolding that we already have which is

1186
01:02:24,880 --> 01:02:31,059
this and let's push it out into the

1187
01:02:28,208 --> 01:02:33,219
corners now if you remember the way that

1188
01:02:31,059 --> 01:02:35,380
we did this what we effectively said is

1189
01:02:33,219 --> 01:02:37,028
look let's take the absolute value of

1190
01:02:35,380 --> 01:02:39,369
these and I don't know I don't think we

1191
01:02:37,028 --> 01:02:44,469
have an absolute value for a vector do

1192
01:02:39,369 --> 01:02:46,749
we because we don't really have that and

1193
01:02:44,469 --> 01:02:48,999
maybe we should so I don't know like

1194
01:02:46,748 --> 01:03:00,728
let's say maybe we do want this because

1195
01:02:48,998 --> 01:03:02,588
hey it's probably a thing right so what

1196
01:03:00,728 --> 01:03:14,348
we want to do here is say let's take the

1197
01:03:02,588 --> 01:03:16,599
absolute value of this thing and that

1198
01:03:14,349 --> 01:03:23,039
just allows us to do this a little bit

1199
01:03:16,599 --> 01:03:25,749
more flexibly I suppose right and yeah

1200
01:03:23,039 --> 01:03:28,209
that looks right all right just take the

1201
01:03:25,748 --> 01:03:31,778
absolute value two components and pop

1202
01:03:28,208 --> 01:03:37,898
back the result so we know we've got the

1203
01:03:31,778 --> 01:03:39,548
absolute value here and we want to take

1204
01:03:37,898 --> 01:03:41,949
the absolute value of whatever the

1205
01:03:39,548 --> 01:03:44,349
result was the problem that we're gonna

1206
01:03:41,949 --> 01:03:45,729
have is we need to swap these right

1207
01:03:44,349 --> 01:03:48,579
because remember in addition to taking

1208
01:03:45,728 --> 01:03:50,108
the absolute value you know we want to

1209
01:03:48,579 --> 01:03:51,489
do this and maybe you know what maybe

1210
01:03:50,108 --> 01:03:53,078
this is premature maybe we don't

1211
01:03:51,489 --> 01:03:54,398
actually need this because I think we're

1212
01:03:53,079 --> 01:03:58,209
gonna have to swap these I'm gonna write

1213
01:03:54,398 --> 01:03:59,588
this in scalar because we need to swap

1214
01:03:58,208 --> 01:04:01,989
them and we need to subtract them from

1215
01:03:59,588 --> 01:04:03,578
one and this isn't two shader so we

1216
01:04:01,989 --> 01:04:05,409
don't have all of the conveniences of a

1217
01:04:03,579 --> 01:04:08,849
shader at the moment like we don't have

1218
01:04:05,409 --> 01:04:08,849
the Swizzle ability and so on

1219
01:04:12,900 --> 01:04:18,579
so in here we've got result X what we're

1220
01:04:17,409 --> 01:04:21,460
actually gonna want to do is subtract

1221
01:04:18,579 --> 01:04:22,690
the absolute value of result Y and again

1222
01:04:21,460 --> 01:04:23,949
that's because we're going the opposite

1223
01:04:22,690 --> 01:04:27,369
direction we're coming back from the

1224
01:04:23,949 --> 01:04:29,858
edge now but also we're rotating 90

1225
01:04:27,369 --> 01:04:33,099
degrees because of the way this thing

1226
01:04:29,858 --> 01:04:35,679
folded out and for those of you who were

1227
01:04:33,099 --> 01:04:37,990
here yesterday already know exactly I'm

1228
01:04:35,679 --> 01:04:40,719
talking about but this is the diagram

1229
01:04:37,989 --> 01:04:41,828
that we're doing here so that first step

1230
01:04:40,719 --> 01:04:43,118
I should should have said this the

1231
01:04:41,829 --> 01:04:44,260
beginning I just assumed everyone's here

1232
01:04:43,119 --> 01:04:47,500
yesterday but not everyone would have

1233
01:04:44,260 --> 01:04:49,210
been this first step here right

1234
01:04:47,500 --> 01:04:51,760
computing the one norm and take the

1235
01:04:49,210 --> 01:04:53,559
result that's just taking this top half

1236
01:04:51,760 --> 01:04:56,470
of the sphere and mapping it into a

1237
01:04:53,559 --> 01:04:59,769
diamond right because we get rid of the

1238
01:04:56,469 --> 01:05:02,049
Z so this flattens down right and then

1239
01:04:59,769 --> 01:05:05,769
we take the one norm which turns these

1240
01:05:02,050 --> 01:05:07,630
Boeing bowed arcs here right obviously

1241
01:05:05,769 --> 01:05:09,579
Boeing is different a bowed arc is an

1242
01:05:07,630 --> 01:05:11,650
arc that has a curve on it a Boeing arc

1243
01:05:09,579 --> 01:05:13,990
is one that goes straight into the

1244
01:05:11,650 --> 01:05:15,460
ground because they are literally so

1245
01:05:13,989 --> 01:05:18,879
Calais with human life that they didn't

1246
01:05:15,460 --> 01:05:21,190
even bother to employ any real software

1247
01:05:18,880 --> 01:05:22,568
engineering practices in their planes so

1248
01:05:21,190 --> 01:05:25,030
that's always good

1249
01:05:22,568 --> 01:05:27,279
moving on from that particular horrific

1250
01:05:25,030 --> 01:05:31,930
reality of modern programming and coming

1251
01:05:27,280 --> 01:05:33,790
back to this we actually have the other

1252
01:05:31,929 --> 01:05:36,699
part of the sphere which is the bottom

1253
01:05:33,789 --> 01:05:39,489
part here and that part needs to be

1254
01:05:36,699 --> 01:05:41,828
unfolded out and so when we are figuring

1255
01:05:39,489 --> 01:05:44,078
out how to take this mapping because

1256
01:05:41,829 --> 01:05:45,460
remember after we've done this the top

1257
01:05:44,079 --> 01:05:47,500
and the bottom half of the sphere have

1258
01:05:45,460 --> 01:05:49,659
mapped on to each other they're both in

1259
01:05:47,500 --> 01:05:51,699
this diamond so we need to take each of

1260
01:05:49,659 --> 01:05:53,828
these quadrants of the diamond and fold

1261
01:05:51,699 --> 01:05:57,519
it out into the other part so that it

1262
01:05:53,829 --> 01:06:02,140
won't do that this part here would be

1263
01:05:57,519 --> 01:06:05,349
the end of it right this this right here

1264
01:06:02,139 --> 01:06:07,690
will take any part like so no matter

1265
01:06:05,349 --> 01:06:10,000
where we were any one of these we will

1266
01:06:07,690 --> 01:06:12,338
now turn ourselves into this top part

1267
01:06:10,000 --> 01:06:13,989
here right but because we've taken the

1268
01:06:12,338 --> 01:06:15,489
absolute value of each of these so it

1269
01:06:13,989 --> 01:06:17,469
doesn't matter where you were in here

1270
01:06:15,489 --> 01:06:19,750
we're up here now and we've subtracted

1271
01:06:17,469 --> 01:06:22,239
them from one right so we've taken this

1272
01:06:19,750 --> 01:06:23,469
one and turned it into this one right we

1273
01:06:22,239 --> 01:06:24,019
flipped the two coordinates I'm

1274
01:06:23,469 --> 01:06:26,029
subtracting

1275
01:06:24,019 --> 01:06:28,639
one which mirrors it and puts it up in

1276
01:06:26,030 --> 01:06:30,560
the corner but now we need to put it

1277
01:06:28,639 --> 01:06:35,569
back where it was

1278
01:06:30,559 --> 01:06:38,509
right now we've got a sign of here right

1279
01:06:35,570 --> 01:06:41,230
and you can see our sign of function

1280
01:06:38,510 --> 01:06:43,670
doesn't return zero so it's what we want

1281
01:06:41,230 --> 01:06:46,010
so what we need to do is put this thing

1282
01:06:43,670 --> 01:06:49,610
back in the quadrant where it actually

1283
01:06:46,010 --> 01:06:52,280
belongs so we need to take our sign of

1284
01:06:49,610 --> 01:06:56,870
whatever the result X was and multiply

1285
01:06:52,280 --> 01:06:59,840
that by whatever the flipped version

1286
01:06:56,869 --> 01:07:02,480
actually is which sends the thing back

1287
01:06:59,840 --> 01:07:05,360
down to whatever quadrant it should have

1288
01:07:02,480 --> 01:07:08,210
actually been in and I believe that now

1289
01:07:05,360 --> 01:07:10,670
gives us the complete octahedral mapping

1290
01:07:08,210 --> 01:07:14,030
that we were looking for in the first

1291
01:07:10,670 --> 01:07:16,039
place now doing a unit vector from

1292
01:07:14,030 --> 01:07:16,730
octahedral mapping is the other way

1293
01:07:16,039 --> 01:07:19,460
round

1294
01:07:16,730 --> 01:07:23,329
right and so what we're gonna need to do

1295
01:07:19,460 --> 01:07:25,900
here is reverse this process so you can

1296
01:07:23,329 --> 01:07:28,190
see that we're gonna have two branches

1297
01:07:25,900 --> 01:07:29,960
because we had two branches to begin

1298
01:07:28,190 --> 01:07:32,690
with but we don't actually know what

1299
01:07:29,960 --> 01:07:34,159
those branches should be yet because we

1300
01:07:32,690 --> 01:07:37,539
haven't looked at what these will

1301
01:07:34,159 --> 01:07:40,210
actually come out to now I would assume

1302
01:07:37,539 --> 01:07:45,349
that if we were to take these two

1303
01:07:40,210 --> 01:07:48,320
together so if I took oxo Y right and I

1304
01:07:45,349 --> 01:07:50,929
took the absolute value of these two

1305
01:07:48,320 --> 01:07:52,550
things I'm just gonna try and write this

1306
01:07:50,929 --> 01:07:54,319
myself I haven't looked at what the

1307
01:07:52,550 --> 01:07:55,700
actual code is for it so let's try to

1308
01:07:54,320 --> 01:07:57,050
write it ourselves first and then we'll

1309
01:07:55,699 --> 01:08:00,529
go look at what the actual code is that

1310
01:07:57,050 --> 01:08:03,019
they gave and just to see if we're right

1311
01:08:00,530 --> 01:08:04,610
or if we you know we probably will we

1312
01:08:03,019 --> 01:08:06,230
might be right but we might be probably

1313
01:08:04,610 --> 01:08:07,220
would be less efficient because they've

1314
01:08:06,230 --> 01:08:08,599
probably thought about this for longer

1315
01:08:07,219 --> 01:08:12,049
than we have and worked out the most

1316
01:08:08,599 --> 01:08:14,059
optimal way of doing it right but anyway

1317
01:08:12,050 --> 01:08:16,310
if I take my X in my Y so what can you

1318
01:08:14,059 --> 01:08:17,809
tell like what does this triangle have

1319
01:08:16,310 --> 01:08:19,700
to say about itself or any of these

1320
01:08:17,810 --> 01:08:21,529
trials the interior well what they have

1321
01:08:19,699 --> 01:08:24,289
to say about themselves is the X plus

1322
01:08:21,529 --> 01:08:27,200
the Y is less than one right or equal to

1323
01:08:24,289 --> 01:08:28,579
one right it can't be more than one

1324
01:08:27,199 --> 01:08:30,528
because if it was it would be in one of

1325
01:08:28,579 --> 01:08:34,600
the outer triangles so I posit that our

1326
01:08:30,529 --> 01:08:34,600
two branches should look like this

1327
01:08:40,078 --> 01:08:46,539
okay so we've got two branches one is

1328
01:08:44,588 --> 01:08:49,359
where the 1-norm is great and zero what

1329
01:08:46,539 --> 01:08:52,060
sorry where's greater than one and one

1330
01:08:49,359 --> 01:08:53,889
where it is less than one so in the case

1331
01:08:52,060 --> 01:08:55,089
where it's less than one we're inside

1332
01:08:53,889 --> 01:08:57,639
the diamond which these are on the top

1333
01:08:55,088 --> 01:08:59,618
half of the sphere so if we're on the

1334
01:08:57,639 --> 01:09:01,659
top half of the sphere then I think

1335
01:08:59,618 --> 01:09:04,210
actually all we need to do is

1336
01:09:01,658 --> 01:09:05,828
reconstruct what we would have done so

1337
01:09:04,210 --> 01:09:08,020
in the top half of the sphere that's

1338
01:09:05,828 --> 01:09:10,420
this half here what we're gonna want to

1339
01:09:08,020 --> 01:09:14,500
do is say well here's what we did before

1340
01:09:10,420 --> 01:09:18,210
right here was what our XY was

1341
01:09:14,500 --> 01:09:18,210
previously in the top half of the sphere

1342
01:09:18,779 --> 01:09:24,159
I'm gonna call this yet but if we had

1343
01:09:22,179 --> 01:09:26,349
our one norm we know that this is what

1344
01:09:24,158 --> 01:09:30,219
we were going to do so the thing we

1345
01:09:26,349 --> 01:09:31,869
actually want is this right this is well

1346
01:09:30,219 --> 01:09:34,689
you know what this is this is OH dot XY

1347
01:09:31,868 --> 01:09:37,868
is what this is here's the thing we

1348
01:09:34,689 --> 01:09:40,149
actually want which is result XY right

1349
01:09:37,868 --> 01:09:42,009
and we need to solve these well hey

1350
01:09:40,149 --> 01:09:44,289
guess what algebra can do that for us

1351
01:09:42,009 --> 01:09:46,539
right the problem is we don't know this

1352
01:09:44,289 --> 01:09:49,179
actual thing because this includes

1353
01:09:46,539 --> 01:09:51,880
adding Z so we'll call this one norm

1354
01:09:49,179 --> 01:09:56,230
plus Z right this is the one norm

1355
01:09:51,880 --> 01:09:59,109
without Z so if we wanted to we could do

1356
01:09:56,229 --> 01:10:03,509
this right move this over to this side

1357
01:09:59,109 --> 01:10:03,509
by inverting it oops

1358
01:10:06,908 --> 01:10:12,488
right so instead of dividing by the one

1359
01:10:10,448 --> 01:10:16,329
norm now we're just multiplying by the

1360
01:10:12,488 --> 01:10:18,669
one norm so if we were to multiply by

1361
01:10:16,329 --> 01:10:22,179
the warrant one norm plus whatever the Z

1362
01:10:18,670 --> 01:10:25,750
value was then we would get back what we

1363
01:10:22,179 --> 01:10:28,658
actually wanted for XY here the problem

1364
01:10:25,750 --> 01:10:31,090
is we don't know what the Z value was

1365
01:10:28,658 --> 01:10:33,009
right like I have no idea what the Z

1366
01:10:31,090 --> 01:10:37,510
value was because they didn't send it to

1367
01:10:33,010 --> 01:10:41,800
me right but if we actually look at what

1368
01:10:37,510 --> 01:10:43,989
this was this was V X V Y V Z we added

1369
01:10:41,800 --> 01:10:47,829
these together and I'm probably have to

1370
01:10:43,988 --> 01:10:51,039
do this out on the blackboard but and

1371
01:10:47,829 --> 01:10:55,630
then we divided by them so actually we

1372
01:10:51,039 --> 01:11:00,819
know that we were only missing one value

1373
01:10:55,630 --> 01:11:03,639
here from the original one norm if we

1374
01:11:00,819 --> 01:11:09,639
wanted to reconstitute it right and now

1375
01:11:03,639 --> 01:11:11,230
I think about it I suppose so I don't

1376
01:11:09,639 --> 01:11:12,639
actually know that I really have to do

1377
01:11:11,229 --> 01:11:16,928
this to be completely honest with you

1378
01:11:12,639 --> 01:11:18,219
because if we know where this was we

1379
01:11:16,929 --> 01:11:20,560
should actually be able to just blow it

1380
01:11:18,219 --> 01:11:22,060
out to a circle okay doesn't matter

1381
01:11:20,560 --> 01:11:23,980
point being I'm gonna actually do this

1382
01:11:22,060 --> 01:11:26,560
out on the blackboard because it's

1383
01:11:23,979 --> 01:11:28,089
usually better to do the math than not

1384
01:11:26,560 --> 01:11:30,159
but you see where I'm going with this

1385
01:11:28,090 --> 01:11:31,719
right I need to reconstruct these values

1386
01:11:30,158 --> 01:11:33,129
and it turns out that the only value I

1387
01:11:31,719 --> 01:11:38,079
don't know is Z I know what the other

1388
01:11:33,130 --> 01:11:39,880
two values were after the fact so I'm

1389
01:11:38,079 --> 01:11:41,559
just trying to reconstitute what they

1390
01:11:39,880 --> 01:11:43,929
would have been so let me just write

1391
01:11:41,560 --> 01:11:44,850
these out explicitly and we'll go from

1392
01:11:43,929 --> 01:11:48,929
there

1393
01:11:44,850 --> 01:11:48,929
here is my Milton

1394
01:11:53,198 --> 01:12:00,089
and if we look at what's actually gonna

1395
01:11:56,050 --> 01:12:08,469
happen here I guess we'll do unit oops

1396
01:12:00,090 --> 01:12:10,690
octahedral - unit alright so looking at

1397
01:12:08,469 --> 01:12:15,760
what we've got here we know that we have

1398
01:12:10,689 --> 01:12:20,009
a vector here which is like V X V Y V Z

1399
01:12:15,760 --> 01:12:23,920
and then we know we have an oxn an O Y

1400
01:12:20,010 --> 01:12:25,840
which we can map between these two we

1401
01:12:23,920 --> 01:12:28,149
know the mapping going forwards we're

1402
01:12:25,840 --> 01:12:31,239
trying to figure out the mapping going

1403
01:12:28,149 --> 01:12:35,109
backwards we know that the relationship

1404
01:12:31,238 --> 01:12:40,198
between these two things is always that

1405
01:12:35,109 --> 01:12:48,429
Oh X equals because we know this right

1406
01:12:40,198 --> 01:12:51,279
this equation here the V X times this 1

1407
01:12:48,429 --> 01:13:00,899
over the 1 norm right so it's going to

1408
01:12:51,279 --> 01:13:00,899
be 1 over V X V Y VZ cubes

1409
01:13:01,310 --> 01:13:08,210
right so we know that this is the

1410
01:13:04,520 --> 01:13:10,820
equation for x given these and we know

1411
01:13:08,210 --> 01:13:22,310
that this is the equation for a y also

1412
01:13:10,819 --> 01:13:23,899
given the same thing right so we know

1413
01:13:22,310 --> 01:13:25,760
we've got these two equations and we can

1414
01:13:23,899 --> 01:13:27,229
run them forwards but the problem is now

1415
01:13:25,760 --> 01:13:30,280
we want to be able to run them backwards

1416
01:13:27,229 --> 01:13:33,349
and so if we actually try to solve this

1417
01:13:30,279 --> 01:13:34,729
what we would get is we multiply through

1418
01:13:33,350 --> 01:13:36,380
both sides and again we're trying to

1419
01:13:34,729 --> 01:13:37,369
solve for the VX in the view Y we will

1420
01:13:36,380 --> 01:13:39,050
divide through both sides and we get

1421
01:13:37,369 --> 01:13:43,399
something for like this equation we'd

1422
01:13:39,050 --> 01:13:45,409
have like Oh X times VX plus Oh x times

1423
01:13:43,399 --> 01:13:52,279
V y plus

1424
01:13:45,409 --> 01:13:54,079
Oh x times V Z equals and you can see

1425
01:13:52,279 --> 01:13:57,139
that that was me just from multiplying

1426
01:13:54,079 --> 01:13:59,149
back through equals like VX right and

1427
01:13:57,140 --> 01:14:03,160
similarly you'd get the other one too

1428
01:13:59,149 --> 01:14:03,159
they dupes they'd be exactly the same

1429
01:14:10,420 --> 01:14:16,310
right so we know we have two equations

1430
01:14:13,760 --> 01:14:18,890
here but the problem is of the things

1431
01:14:16,310 --> 01:14:22,670
that we actually need to know we we

1432
01:14:18,890 --> 01:14:28,250
don't have this value right so we don't

1433
01:14:22,670 --> 01:14:31,190
know what the input V Z actually was so

1434
01:14:28,250 --> 01:14:34,909
although we've got two equations in two

1435
01:14:31,189 --> 01:14:39,079
unknowns otherwise this part we don't

1436
01:14:34,909 --> 01:14:41,899
actually know right and looking through

1437
01:14:39,079 --> 01:14:46,819
it the only information that we will get

1438
01:14:41,899 --> 01:14:49,549
is whether or not Z was positive or

1439
01:14:46,819 --> 01:14:52,549
negative right so we hope we know like

1440
01:14:49,550 --> 01:14:55,460
positive or negative Z but how are we

1441
01:14:52,550 --> 01:15:00,079
going to solve two equations in three

1442
01:14:55,460 --> 01:15:03,949
unknowns right what can we do well I

1443
01:15:00,079 --> 01:15:06,050
assume the answer here is that we did

1444
01:15:03,949 --> 01:15:09,529
have one more piece of information

1445
01:15:06,050 --> 01:15:12,619
although it is not written down here we

1446
01:15:09,529 --> 01:15:13,759
know right in the statement that when we

1447
01:15:12,619 --> 01:15:15,059
produce an answer

1448
01:15:13,760 --> 01:15:18,180
we are not going

1449
01:15:15,060 --> 01:15:21,450
to consider any actual answers that

1450
01:15:18,180 --> 01:15:23,250
don't involve a unit vector so we

1451
01:15:21,449 --> 01:15:25,319
expected a unit vector in and we're

1452
01:15:23,250 --> 01:15:27,239
going to produce a unit vector out which

1453
01:15:25,319 --> 01:15:30,210
means that I can write the additional

1454
01:15:27,239 --> 01:15:33,659
equation of one equals the square root

1455
01:15:30,210 --> 01:15:38,449
of VX squared plus V y squared plus VZ

1456
01:15:33,659 --> 01:15:41,189
squared right I know this is the answer

1457
01:15:38,449 --> 01:15:43,800
I'm sorry I know this is a constraint

1458
01:15:41,189 --> 01:15:47,179
because I said so we're never going to

1459
01:15:43,800 --> 01:15:50,310
translate anything else into this into

1460
01:15:47,180 --> 01:15:52,440
the octahedral map and by definition we

1461
01:15:50,310 --> 01:15:54,810
couldn't because we're trying to unwrap

1462
01:15:52,439 --> 01:15:56,429
the surface of a sphere never the inside

1463
01:15:54,810 --> 01:15:58,950
or outside of that sphere so we know

1464
01:15:56,430 --> 01:16:04,829
that no matter what we do it's always

1465
01:15:58,949 --> 01:16:06,599
gonna look like this right and we picked

1466
01:16:04,829 --> 01:16:08,039
a unit sphere so it's 1 but if we want

1467
01:16:06,600 --> 01:16:10,200
we could do it in it with any radius

1468
01:16:08,039 --> 01:16:14,670
sphere just by changing this number

1469
01:16:10,199 --> 01:16:17,659
right so what that means is that if we

1470
01:16:14,670 --> 01:16:20,279
did want to solve these three equations

1471
01:16:17,659 --> 01:16:23,010
we now have an additional weapon in our

1472
01:16:20,279 --> 01:16:26,369
arsenal which is one because I can

1473
01:16:23,010 --> 01:16:30,090
square both sides equals vs square V y

1474
01:16:26,369 --> 01:16:31,890
squared plus V Z squared and the only

1475
01:16:30,090 --> 01:16:34,409
thing that we wouldn't necessarily know

1476
01:16:31,890 --> 01:16:36,539
here again is the signs because as you

1477
01:16:34,409 --> 01:16:40,619
can see all the signs in this will be

1478
01:16:36,539 --> 01:16:44,189
destroyed right thankfully we will end

1479
01:16:40,619 --> 01:16:46,199
up knowing all of the signs why because

1480
01:16:44,189 --> 01:16:48,539
we know what quadrant we put the thing

1481
01:16:46,199 --> 01:16:50,130
in and we know whether the Z was

1482
01:16:48,539 --> 01:16:52,649
positive or negative based on which

1483
01:16:50,130 --> 01:16:54,960
branch were in so even though we destroy

1484
01:16:52,649 --> 01:16:56,699
all our signs with our third equation it

1485
01:16:54,960 --> 01:17:01,189
doesn't matter because we actually can

1486
01:16:56,699 --> 01:17:04,170
reconstruct those signs separately right

1487
01:17:01,189 --> 01:17:06,359
so we should be able to just solve this

1488
01:17:04,170 --> 01:17:09,210
thing thinking everything is positive

1489
01:17:06,359 --> 01:17:11,489
right just assuming everybody's positive

1490
01:17:09,210 --> 01:17:14,069
and then we just place it into the

1491
01:17:11,489 --> 01:17:15,899
quadrant that we need it to be Earth's

1492
01:17:14,069 --> 01:17:17,880
octant I should say because we know all

1493
01:17:15,899 --> 01:17:19,469
the signs from other external

1494
01:17:17,880 --> 01:17:21,949
information that doesn't really relate

1495
01:17:19,470 --> 01:17:24,289
to actually figure out the values are

1496
01:17:21,949 --> 01:17:26,639
okay

1497
01:17:24,289 --> 01:17:28,409
so if this is the case how can we

1498
01:17:26,640 --> 01:17:31,710
actually go about solving this equation

1499
01:17:28,409 --> 01:17:34,649
like what can we actually do here to try

1500
01:17:31,710 --> 01:17:36,420
and and and put this together well I

1501
01:17:34,649 --> 01:17:40,399
guess when I would first start out doing

1502
01:17:36,420 --> 01:17:43,010
is I would try to solve this equation

1503
01:17:40,399 --> 01:17:46,920
probably this is going to be pretty ugly

1504
01:17:43,010 --> 01:17:49,020
but we'll see what happens so if I

1505
01:17:46,920 --> 01:17:54,630
wanted to solve for

1506
01:17:49,020 --> 01:17:58,170
for example VZ squared then I would end

1507
01:17:54,630 --> 01:18:02,039
up with oops not squared then I would

1508
01:17:58,170 --> 01:18:05,909
end up with 1 minus the x squared plus V

1509
01:18:02,039 --> 01:18:10,680
y squared right I'm just swapping these

1510
01:18:05,909 --> 01:18:12,989
out here so these two moved to their

1511
01:18:10,680 --> 01:18:17,310
side and I'm positive on this side so

1512
01:18:12,989 --> 01:18:20,069
off we go right so then I would have VZ

1513
01:18:17,310 --> 01:18:25,170
equals positive or negative square root

1514
01:18:20,069 --> 01:18:27,829
of 1 minus VX squared plus well actually

1515
01:18:25,170 --> 01:18:27,829
that's not right

1516
01:18:31,329 --> 01:18:39,309
Yeah right and so if I wanted to plug VZ

1517
01:18:37,750 --> 01:18:41,319
into these equations up here I could

1518
01:18:39,310 --> 01:18:43,870
just do it it would provide me with

1519
01:18:41,319 --> 01:18:46,179
these other two right and it's a little

1520
01:18:43,869 --> 01:18:48,729
nasty because that's not really what you

1521
01:18:46,180 --> 01:18:50,890
want to see as far as plugging something

1522
01:18:48,729 --> 01:18:52,599
in to both sides if I'm completely

1523
01:18:50,890 --> 01:18:55,170
honest about it it's it's not great

1524
01:18:52,600 --> 01:18:55,170
right

1525
01:18:55,409 --> 01:19:04,630
not sure if there's a way to simplify

1526
01:18:58,569 --> 01:19:16,449
that down it doesn't really look like

1527
01:19:04,630 --> 01:19:22,619
there is to me there III don't really

1528
01:19:16,449 --> 01:19:22,619
see any any real clever way to do that

1529
01:19:26,369 --> 01:19:31,180
yeah so I don't know so anyway if we

1530
01:19:29,739 --> 01:19:33,760
assumed if that was what we had to plug

1531
01:19:31,180 --> 01:19:36,070
in so 1 minus u x squared minus V Y

1532
01:19:33,760 --> 01:19:38,470
squared then if you looked at one of

1533
01:19:36,069 --> 01:19:42,189
these equations you would be able to sub

1534
01:19:38,470 --> 01:19:43,990
in this term right so you would be able

1535
01:19:42,189 --> 01:19:49,089
to basically say like alright you know

1536
01:19:43,989 --> 01:19:53,979
we've got VX plus v y plus this heinous

1537
01:19:49,090 --> 01:19:56,470
thing here and that's gonna equal the x

1538
01:19:53,979 --> 01:19:59,500
on the other side or you could subtract

1539
01:19:56,470 --> 01:20:03,869
it over as well well they couldn't pull

1540
01:19:59,500 --> 01:20:06,869
it out I'm not sure that really helps us

1541
01:20:03,869 --> 01:20:06,869
much

1542
01:20:09,738 --> 01:20:14,708
it's got to be an easier way to do this

1543
01:20:11,689 --> 01:20:14,709
that I'm just not thinking of

1544
01:20:24,479 --> 01:20:34,349
I mean here's one thing I'll just

1545
01:20:30,810 --> 01:20:37,350
mention so let's suppose that we took

1546
01:20:34,350 --> 01:20:38,640
the diamond because I don't really want

1547
01:20:37,350 --> 01:20:39,750
to chug through that math to be

1548
01:20:38,640 --> 01:20:41,039
completely honest with you because it

1549
01:20:39,750 --> 01:20:42,750
seems like maybe there should be a

1550
01:20:41,039 --> 01:20:46,920
simpler way to conceive of it right like

1551
01:20:42,750 --> 01:20:48,810
I feel like I'm over complicating it so

1552
01:20:46,920 --> 01:20:52,199
if we were to assume that we took the

1553
01:20:48,810 --> 01:20:55,230
diamond here right if we were lying flat

1554
01:20:52,199 --> 01:20:58,109
in the diamond plane meaning we were on

1555
01:20:55,229 --> 01:21:03,239
one of these lines right so we knew that

1556
01:20:58,109 --> 01:21:04,949
if we knew that Z was zero right then we

1557
01:21:03,239 --> 01:21:07,859
know that what we would actually be

1558
01:21:04,949 --> 01:21:11,340
doing is just to normalizing this thing

1559
01:21:07,859 --> 01:21:14,909
you know I'm saying so we know that all

1560
01:21:11,340 --> 01:21:17,610
we would have to actually do is say x

1561
01:21:14,909 --> 01:21:21,389
squared like you know our Oh X squared

1562
01:21:17,609 --> 01:21:28,889
plus our Oh Y squared is going to equal

1563
01:21:21,390 --> 01:21:31,350
the sorry Square rooted right this is

1564
01:21:28,890 --> 01:21:33,960
going to equal the length of of our

1565
01:21:31,350 --> 01:21:38,400
vector and we know that it has to end up

1566
01:21:33,960 --> 01:21:40,619
equaling one right so we know that in

1567
01:21:38,399 --> 01:21:45,000
order to produce the final values our

1568
01:21:40,619 --> 01:21:52,220
result X or our V X is going to be our

1569
01:21:45,000 --> 01:21:55,920
Oh X over this term and our V Y oops

1570
01:21:52,220 --> 01:22:02,250
it's bad V our V Y is going to be Oh Y

1571
01:21:55,920 --> 01:22:06,989
over this term right so for just that

1572
01:22:02,250 --> 01:22:08,970
slice we would know what to do and the

1573
01:22:06,989 --> 01:22:12,300
reason that we know that is because we

1574
01:22:08,970 --> 01:22:15,770
know that like the Oh Y value here is

1575
01:22:12,300 --> 01:22:18,300
zero right

1576
01:22:15,770 --> 01:22:22,200
so the real question would be well what

1577
01:22:18,300 --> 01:22:25,020
would we do once we start to move up

1578
01:22:22,199 --> 01:22:27,869
from there right so if we needed to be

1579
01:22:25,020 --> 01:22:29,400
like up further how would we actually

1580
01:22:27,869 --> 01:22:33,239
determine that well we know that you

1581
01:22:29,399 --> 01:22:35,129
know obviously if the oxo Y is zero then

1582
01:22:33,239 --> 01:22:37,649
we would know that the I'm sorry the Oh

1583
01:22:35,130 --> 01:22:38,329
Z we would know that the Oh Z value

1584
01:22:37,649 --> 01:22:44,000
would

1585
01:22:38,329 --> 01:22:45,380
actually be one in that case and so we

1586
01:22:44,000 --> 01:22:48,050
know the other ones would be zero but

1587
01:22:45,380 --> 01:22:50,840
what do we do as we kind of smoothly go

1588
01:22:48,050 --> 01:22:52,789
up and down in there well I mean one way

1589
01:22:50,840 --> 01:22:55,940
to think about it would be when we did

1590
01:22:52,789 --> 01:23:00,680
this mapping we could imagine doing the

1591
01:22:55,939 --> 01:23:04,639
whole mapping right so if we said V X V

1592
01:23:00,680 --> 01:23:08,900
Y V Z goes to oxo Y and we said this

1593
01:23:04,640 --> 01:23:15,020
right if we then had an AZ value which

1594
01:23:08,899 --> 01:23:18,529
was V Z times 1 over the X plus V y plus

1595
01:23:15,020 --> 01:23:21,230
VZ right that would be the complete

1596
01:23:18,529 --> 01:23:25,159
mapping and then we would know exactly

1597
01:23:21,229 --> 01:23:27,649
what to do so if we had o X o Y and O's

1598
01:23:25,159 --> 01:23:31,909
e then all we would have to do is

1599
01:23:27,649 --> 01:23:34,129
reverse the process right so we would

1600
01:23:31,909 --> 01:23:36,319
just say like oh ok if this was the

1601
01:23:34,130 --> 01:23:38,300
normalization before we just multiply

1602
01:23:36,319 --> 01:23:41,000
each one by whatever this is and and

1603
01:23:38,300 --> 01:23:42,500
we're done right so you know we

1604
01:23:41,000 --> 01:23:44,239
previously did this so we just need to

1605
01:23:42,500 --> 01:23:47,979
multiply each value by this to get the

1606
01:23:44,239 --> 01:23:47,979
to get the thing back right

1607
01:24:13,010 --> 01:24:16,789
and furthermore I guess you would never

1608
01:24:14,960 --> 01:24:18,170
actually need that because if you know

1609
01:24:16,789 --> 01:24:19,969
you're always producing a unit vector

1610
01:24:18,170 --> 01:24:22,279
then you know that these things have the

1611
01:24:19,969 --> 01:24:25,010
right length and so actually if you had

1612
01:24:22,279 --> 01:24:30,649
oszi right you would just be doing this

1613
01:24:25,010 --> 01:24:36,590
you would just say oh x squared plus y

1614
01:24:30,649 --> 01:24:39,710
squared plus Z squared right Square

1615
01:24:36,590 --> 01:24:44,029
rooted equals your length value and then

1616
01:24:39,710 --> 01:24:46,939
your V X equals the Oh X over the length

1617
01:24:44,029 --> 01:24:50,448
your V y equals the Y over the length

1618
01:24:46,939 --> 01:24:55,519
and your V Z equals the Oh Z over the

1619
01:24:50,448 --> 01:24:57,469
length right so if you look at how this

1620
01:24:55,520 --> 01:25:01,719
would have to work you'd go like okay

1621
01:24:57,469 --> 01:25:05,060
well if I think about this process here

1622
01:25:01,719 --> 01:25:06,710
and look at the computation of the

1623
01:25:05,060 --> 01:25:10,760
length again this is the part that I

1624
01:25:06,710 --> 01:25:14,750
don't actually know and the Oh x squared

1625
01:25:10,760 --> 01:25:17,539
plus the Oh Y squared I know they

1626
01:25:14,750 --> 01:25:19,429
originally summed to one right so before

1627
01:25:17,539 --> 01:25:20,899
I did the divided by the value that I

1628
01:25:19,429 --> 01:25:23,889
don't actually know I know they

1629
01:25:20,899 --> 01:25:23,888
originally sum to one

1630
01:25:28,300 --> 01:25:40,000
oh but wait but I specified that they

1631
01:25:34,270 --> 01:25:41,560
sum to one okay I'm an idiot I don't

1632
01:25:40,000 --> 01:25:47,619
even know why I had to think about that

1633
01:25:41,560 --> 01:25:49,750
so after all that yeah so I basically

1634
01:25:47,619 --> 01:25:52,869
specify that these had to sum to 1

1635
01:25:49,750 --> 01:25:54,430
because I divided by then by the norm

1636
01:25:52,869 --> 01:25:58,689
but I'm an idiot

1637
01:25:54,430 --> 01:26:01,180
so oszi is always equal to 1 minus o X

1638
01:25:58,689 --> 01:26:07,289
plus or Y I mean that's the definition

1639
01:26:01,180 --> 01:26:10,119
of the 1 norm right that's Wow all right

1640
01:26:07,289 --> 01:26:11,140
talk about spending a lot of time to

1641
01:26:10,119 --> 01:26:12,970
figure out something you should have

1642
01:26:11,140 --> 01:26:15,100
known immediately can you tell I haven't

1643
01:26:12,970 --> 01:26:17,619
done 3d programming in a while yeah

1644
01:26:15,100 --> 01:26:22,620
kind of obvious at this point so that's

1645
01:26:17,619 --> 01:26:22,619
actually trivial so oszi we know right

1646
01:26:24,569 --> 01:26:30,090
and basically like oszi is just 1 minus

1647
01:26:30,840 --> 01:26:39,159
the sum of these two right because we

1648
01:26:36,460 --> 01:26:42,630
know that they had to sum up to whatever

1649
01:26:39,159 --> 01:26:47,109
the part we know that the x and the y

1650
01:26:42,630 --> 01:26:53,739
summed up to 1 when you included oszi

1651
01:26:47,109 --> 01:26:55,779
whatever the heck Ozzie was right so you

1652
01:26:53,739 --> 01:26:58,539
know that they would have summed up to 1

1653
01:26:55,779 --> 01:27:01,619
after the divide because this divide

1654
01:26:58,539 --> 01:27:05,289
ensured that they did not-- I'm saying

1655
01:27:01,619 --> 01:27:07,479
so once we know what Ozzie is then we

1656
01:27:05,289 --> 01:27:09,720
know what all three values were which

1657
01:27:07,479 --> 01:27:15,639
means we can produce the unit vector

1658
01:27:09,720 --> 01:27:18,780
trivially right so the only thing I'm

1659
01:27:15,640 --> 01:27:18,780
not sure about is how to do the

1660
01:27:25,140 --> 01:27:33,750
unquantified at so yeah

1661
01:27:40,970 --> 01:27:47,520
so we sum the X Y we know if the X Y is

1662
01:27:44,939 --> 01:27:50,729
greater than one then we know that Z is

1663
01:27:47,520 --> 01:27:55,740
actually negative right so we know that

1664
01:27:50,729 --> 01:27:59,819
Z equals negative Oh Z otherwise it's

1665
01:27:55,739 --> 01:28:01,769
positive and then that's it right I mean

1666
01:27:59,819 --> 01:28:14,119
I think we're done we just say the

1667
01:28:01,770 --> 01:28:18,720
results is Oh X Y Z and we normalize it

1668
01:28:14,119 --> 01:28:21,000
right I don't know why that took me so

1669
01:28:18,720 --> 01:28:22,650
long I forgot about the constraint they

1670
01:28:21,000 --> 01:28:24,930
were gonna have to add to one after the

1671
01:28:22,649 --> 01:28:26,789
one norm but I think that's correct so

1672
01:28:24,930 --> 01:28:30,119
we take the X to the Y we add them

1673
01:28:26,789 --> 01:28:32,130
together at that point we know that

1674
01:28:30,119 --> 01:28:34,529
since the first thing we did before we

1675
01:28:32,130 --> 01:28:36,900
did anything else back here is we know

1676
01:28:34,529 --> 01:28:39,269
the result is always gonna have to sum

1677
01:28:36,899 --> 01:28:43,199
to one because we won normalized it

1678
01:28:39,270 --> 01:28:45,480
first so we know to construct Z to

1679
01:28:43,199 --> 01:28:47,939
reconstruct Z after the fact we know

1680
01:28:45,479 --> 01:28:50,189
that the magnitude of ossie is always

1681
01:28:47,939 --> 01:28:52,289
just whatever would have made these two

1682
01:28:50,189 --> 01:28:56,009
sum to one because that's exactly what

1683
01:28:52,289 --> 01:28:58,079
we did before right so then we just

1684
01:28:56,010 --> 01:29:01,320
check all right is it greater than one

1685
01:28:58,079 --> 01:29:02,819
if it the sum of the two if it was were

1686
01:29:01,319 --> 01:29:04,920
in one of the unfolding quadrants so

1687
01:29:02,819 --> 01:29:06,299
that means Z was negative if it wasn't

1688
01:29:04,920 --> 01:29:10,319
it means he was positive so we leave it

1689
01:29:06,300 --> 01:29:12,449
exactly as it was right at the end of

1690
01:29:10,319 --> 01:29:14,039
the day we then have a vector we know

1691
01:29:12,449 --> 01:29:15,960
that that vector has all of the correct

1692
01:29:14,039 --> 01:29:17,760
components in it we just don't know

1693
01:29:15,960 --> 01:29:20,909
whether or not it means like what

1694
01:29:17,760 --> 01:29:23,430
direction sorry we know that it has the

1695
01:29:20,909 --> 01:29:25,139
right sign and the right magnitude so

1696
01:29:23,430 --> 01:29:30,180
then we just have to normalize it out to

1697
01:29:25,140 --> 01:29:31,950
the unit sphere right now the only thing

1698
01:29:30,180 --> 01:29:34,440
I'm not sure about is because of the

1699
01:29:31,949 --> 01:29:37,229
unfolding there's that one minus so this

1700
01:29:34,439 --> 01:29:40,379
part here I'm not sure how to

1701
01:29:37,229 --> 01:29:43,769
reconstruct that but I guess we know

1702
01:29:40,380 --> 01:29:44,850
which one it is so and I guess I'll you

1703
01:29:43,770 --> 01:29:47,030
know what I should do here I should do

1704
01:29:44,850 --> 01:29:47,030
this

1705
01:29:56,639 --> 01:30:01,328
let's do that so now I think about it no

1706
01:29:59,769 --> 01:30:04,150
we actually know that as well because

1707
01:30:01,328 --> 01:30:07,029
when were in the some XY phase here we

1708
01:30:04,149 --> 01:30:10,388
know now where we were so if we did

1709
01:30:07,029 --> 01:30:13,988
unfold we unfolded in this branch so we

1710
01:30:10,389 --> 01:30:15,639
can actually just undo this right so we

1711
01:30:13,988 --> 01:30:18,908
know that what we would have done inside

1712
01:30:15,639 --> 01:30:20,559
this branch is Oh X and oh I would have

1713
01:30:18,908 --> 01:30:26,618
gone through this process we can just

1714
01:30:20,559 --> 01:30:29,229
reverse the solve and do the opposite

1715
01:30:26,618 --> 01:30:30,728
operation so previously what we had done

1716
01:30:29,229 --> 01:30:32,590
is we've said let's take the absolute

1717
01:30:30,729 --> 01:30:34,869
value instructor from one so now what we

1718
01:30:32,590 --> 01:30:38,439
can do is just do the opposite of that

1719
01:30:34,868 --> 01:30:40,328
so take and flip it right we can we can

1720
01:30:38,439 --> 01:30:43,499
do exactly the same like this this is

1721
01:30:40,328 --> 01:30:43,498
literally the same thing

1722
01:30:56,130 --> 01:31:03,489
right because we just literally want to

1723
01:31:01,659 --> 01:31:06,010
do the flip again we just want we just

1724
01:31:03,489 --> 01:31:09,519
want to undo this 1.0 flip here that's

1725
01:31:06,010 --> 01:31:10,869
that's all we're really trying to do and

1726
01:31:09,520 --> 01:31:13,000
so we can literally be exact same thing

1727
01:31:10,869 --> 01:31:15,099
again to flip to do to undo the flip

1728
01:31:13,000 --> 01:31:17,500
that we did and then we the exact same

1729
01:31:15,100 --> 01:31:27,180
thing now we have the swizzle again

1730
01:31:17,500 --> 01:31:27,180
so we want to unseal which is that right

1731
01:31:31,380 --> 01:31:39,159
sign of the results one - the results

1732
01:31:35,170 --> 01:31:42,130
and in this case we've got the absolute

1733
01:31:39,159 --> 01:31:44,199
value of the thing that we stored and we

1734
01:31:42,130 --> 01:31:48,010
want to multiply it by the sign of that

1735
01:31:44,199 --> 01:31:52,710
thing because it comes back in as that

1736
01:31:48,010 --> 01:31:55,180
sign right so I think it looks like that

1737
01:31:52,710 --> 01:31:58,750
so I think that's where we're at all

1738
01:31:55,180 --> 01:32:01,539
right let's see how close we got do they

1739
01:31:58,750 --> 01:32:11,680
have an implementation here I don't know

1740
01:32:01,539 --> 01:32:15,010
if they do so here is something that

1741
01:32:11,680 --> 01:32:20,829
goes to the octahedral mapping and if we

1742
01:32:15,010 --> 01:32:22,600
look at at that you can see that it does

1743
01:32:20,829 --> 01:32:24,640
exactly what we do on the first step so

1744
01:32:22,600 --> 01:32:27,460
that's here it's doing these two

1745
01:32:24,640 --> 01:32:28,600
together which is fine you don't need it

1746
01:32:27,460 --> 01:32:32,680
again so you could tell you do that and

1747
01:32:28,600 --> 01:32:35,890
then it just does yeah it does it does

1748
01:32:32,680 --> 01:32:38,050
exactly the same thing we do so I think

1749
01:32:35,890 --> 01:32:40,150
that's all correct and then for the

1750
01:32:38,050 --> 01:32:41,949
octave float version which is going the

1751
01:32:40,149 --> 01:32:43,929
other way around the first thing it does

1752
01:32:41,949 --> 01:32:46,630
is it says let's create a vector that's

1753
01:32:43,930 --> 01:32:53,369
what's the X Y and the one minus the two

1754
01:32:46,630 --> 01:32:55,869
abs is and that's exactly what we do

1755
01:32:53,369 --> 01:32:58,269
yep so that that's exactly what we just

1756
01:32:55,869 --> 01:33:01,300
did here and then it says if it's less

1757
01:32:58,270 --> 01:33:02,980
than zero it does this otherwise it

1758
01:33:01,300 --> 01:33:04,180
returns the normalized or well it always

1759
01:33:02,979 --> 01:33:06,659
returns from its version so that's

1760
01:33:04,180 --> 01:33:08,640
exactly what we do

1761
01:33:06,659 --> 01:33:11,069
and so the only question is does this do

1762
01:33:08,640 --> 01:33:13,619
the same thing let's see if it does so

1763
01:33:11,069 --> 01:33:16,649
in their branch which is here they do

1764
01:33:13,619 --> 01:33:19,260
this that's the X y equals 1 minus the

1765
01:33:16,649 --> 01:33:23,309
abs of the Y X that's exactly what we're

1766
01:33:19,260 --> 01:33:29,640
doing here times the sign of the X Y so

1767
01:33:23,310 --> 01:33:38,130
no they don't flip the mmm so they've

1768
01:33:29,640 --> 01:33:40,230
got that right and that was what I was

1769
01:33:38,130 --> 01:33:44,130
agonizing about the end there and so why

1770
01:33:40,229 --> 01:33:51,389
is that the case though because the flip

1771
01:33:44,130 --> 01:33:54,060
oh ok ok ok no ice I see what that's

1772
01:33:51,390 --> 01:33:55,619
case that's the case because we're

1773
01:33:54,060 --> 01:33:59,190
trying to leave the thing in the same

1774
01:33:55,619 --> 01:34:01,319
quadrant as it was and so we don't

1775
01:33:59,189 --> 01:34:03,210
actually want when we do that flip

1776
01:34:01,319 --> 01:34:07,019
that's just a 90 degree rotation but it

1777
01:34:03,210 --> 01:34:09,869
we don't want to change the quadrant so

1778
01:34:07,020 --> 01:34:11,520
ok I do I believe that so we almost got

1779
01:34:09,869 --> 01:34:13,619
it but no we were slightly wrong there

1780
01:34:11,520 --> 01:34:14,760
with the flip and I should have known

1781
01:34:13,619 --> 01:34:16,079
that cuz hey you have to invert the

1782
01:34:14,760 --> 01:34:18,000
function it's gonna have to flip and

1783
01:34:16,079 --> 01:34:19,260
maintain the sine the same way that did

1784
01:34:18,000 --> 01:34:26,579
in the input so I suppose that makes

1785
01:34:19,260 --> 01:34:28,170
sense but alright that seems fair

1786
01:34:26,579 --> 01:34:29,670
I'm totally fine with that I don't know

1787
01:34:28,170 --> 01:34:32,130
if that compiles - forgot errors in

1788
01:34:29,670 --> 01:34:35,699
there let's take a look looks like looks

1789
01:34:32,130 --> 01:34:38,190
like we're good so now we have a way of

1790
01:34:35,699 --> 01:34:40,800
doing our octahedral mapping for any

1791
01:34:38,189 --> 01:34:42,569
particular direction and we can also

1792
01:34:40,800 --> 01:34:43,680
unmapped it if we need to I don't know

1793
01:34:42,569 --> 01:34:44,909
that we actually need this without for

1794
01:34:43,680 --> 01:34:47,610
completeness sake I wanted to put in the

1795
01:34:44,909 --> 01:34:49,949
full mapping in and out because I don't

1796
01:34:47,609 --> 01:34:51,359
know maybe we want that I'm not sure at

1797
01:34:49,949 --> 01:34:55,590
the very least we'll have to use this in

1798
01:34:51,359 --> 01:34:57,420
the shader so you know there's that so

1799
01:34:55,590 --> 01:34:59,460
let's go ahead and take a look at how

1800
01:34:57,420 --> 01:35:01,050
we're actually encoding these things and

1801
01:34:59,460 --> 01:35:06,180
sending them down so if we take a look

1802
01:35:01,050 --> 01:35:08,190
at the lining code here let's go ahead

1803
01:35:06,180 --> 01:35:10,170
and switch to one of our test functions

1804
01:35:08,189 --> 01:35:12,479
because we have a lot of different stuff

1805
01:35:10,170 --> 01:35:15,350
here let me got test cast from probes

1806
01:35:12,479 --> 01:35:17,769
right and then we got the voxel output

1807
01:35:15,350 --> 01:35:20,410
nonsense here and all that right

1808
01:35:17,770 --> 01:35:23,080
and so we're gonna have to do now is to

1809
01:35:20,409 --> 01:35:25,449
start to think about these in a way that

1810
01:35:23,079 --> 01:35:27,010
actually allows us to output them a

1811
01:35:25,449 --> 01:35:30,639
little more sanely

1812
01:35:27,010 --> 01:35:31,989
and I guess what we could do here is

1813
01:35:30,640 --> 01:35:36,700
just keep the way that we're storing

1814
01:35:31,989 --> 01:35:39,340
them at the moment and you know again I

1815
01:35:36,699 --> 01:35:41,069
don't really know that we want these to

1816
01:35:39,340 --> 01:35:45,760
be stored the winter store but I'm gonna

1817
01:35:41,069 --> 01:35:46,449
sort of ignore that part of things for a

1818
01:35:45,760 --> 01:35:49,060
little while

1819
01:35:46,449 --> 01:35:51,519
so what I'm gonna do instead is say all

1820
01:35:49,060 --> 01:35:54,670
right we are storing light voxel cells

1821
01:35:51,520 --> 01:35:58,840
here which I have to have a bunch of

1822
01:35:54,670 --> 01:36:01,710
information in them I'm gonna say that

1823
01:35:58,840 --> 01:36:04,720
we're just gonna store this stuff as

1824
01:36:01,710 --> 01:36:08,770
actual little kernels of information

1825
01:36:04,720 --> 01:36:11,020
here so in our light color where we're

1826
01:36:08,770 --> 01:36:14,140
storing that I'm gonna actually say look

1827
01:36:11,020 --> 01:36:17,800
let's put that in the light color lookup

1828
01:36:14,140 --> 01:36:21,160
square dim let's just do that right so

1829
01:36:17,800 --> 01:36:24,190
here's the little square and the same

1830
01:36:21,159 --> 01:36:25,090
will be true of the D so the depth value

1831
01:36:24,189 --> 01:36:27,279
right

1832
01:36:25,090 --> 01:36:29,980
so for each voxel cell I'm just gonna

1833
01:36:27,279 --> 01:36:32,050
store this explicitly in the cell for

1834
01:36:29,979 --> 01:36:33,159
now I don't think this is gonna be

1835
01:36:32,050 --> 01:36:35,560
probably the way we want to do in the

1836
01:36:33,159 --> 01:36:39,809
end but I want this most straightforward

1837
01:36:35,560 --> 01:36:42,400
thing so that we don't really have any

1838
01:36:39,810 --> 01:36:48,670
ambiguity here right like I don't want

1839
01:36:42,399 --> 01:36:51,159
there to be any nonsense so yeah so

1840
01:36:48,670 --> 01:36:52,690
we'll start with that and we'll deal

1841
01:36:51,159 --> 01:36:55,359
with later what this is actually gonna

1842
01:36:52,689 --> 01:36:58,659
do now when we're accumulating into

1843
01:36:55,359 --> 01:37:00,969
these things I feel like the

1844
01:36:58,659 --> 01:37:02,500
accumulation can happen at the end using

1845
01:37:00,970 --> 01:37:05,079
the data that's in the transfer buffer

1846
01:37:02,500 --> 01:37:08,789
so I'm gonna go ahead and say that these

1847
01:37:05,079 --> 01:37:08,789
can just be probably

1848
01:37:09,189 --> 01:37:25,449
well time stretch hmm I guess for the

1849
01:37:22,449 --> 01:37:27,849
interest of simplicity for now that's

1850
01:37:25,449 --> 01:37:33,639
not what I'm going to say so let's do it

1851
01:37:27,850 --> 01:37:35,500
this way right so we can do our

1852
01:37:33,640 --> 01:37:37,690
accumulation separately I I just don't

1853
01:37:35,500 --> 01:37:41,739
know if that makes much sense in the

1854
01:37:37,689 --> 01:37:44,769
long run I think that's just dumb so you

1855
01:37:41,739 --> 01:37:48,159
know we'll we'll we'll smarten that up

1856
01:37:44,770 --> 01:37:50,290
later but for now we can just you know

1857
01:37:48,159 --> 01:37:53,380
we'll we'll do the fully expanded thing

1858
01:37:50,289 --> 01:37:55,689
just so we can isolate errors a little

1859
01:37:53,380 --> 01:37:58,270
bit better so that's gonna be our voxel

1860
01:37:55,689 --> 01:38:00,399
cells and when we put stuff in there

1861
01:37:58,270 --> 01:38:05,920
we'll put them in based on the

1862
01:38:00,399 --> 01:38:09,039
octahedral mapping all right let's see

1863
01:38:05,920 --> 01:38:10,869
here so we've got some trilinear

1864
01:38:09,039 --> 01:38:14,890
interpolation stuff happening you can

1865
01:38:10,869 --> 01:38:17,710
see the trailer pier is grabbing out of

1866
01:38:14,890 --> 01:38:20,140
whichever field we're looking for and

1867
01:38:17,710 --> 01:38:22,420
all that garbage so we could still do

1868
01:38:20,140 --> 01:38:26,079
that the only difference now is that the

1869
01:38:22,420 --> 01:38:28,470
field parameter has to actually have a

1870
01:38:26,079 --> 01:38:31,840
more interesting piece of information

1871
01:38:28,470 --> 01:38:34,060
with it and so when we're doing compute

1872
01:38:31,840 --> 01:38:39,010
radians here we're going to have to

1873
01:38:34,060 --> 01:38:42,100
actually do a smarter sum right so this

1874
01:38:39,010 --> 01:38:45,159
is not what we actually want we're gonna

1875
01:38:42,100 --> 01:38:49,420
have to yeah I mean I'm gonna if this

1876
01:38:45,159 --> 01:38:51,069
out for now right because we're gonna

1877
01:38:49,420 --> 01:38:52,539
want to do something different there but

1878
01:38:51,069 --> 01:38:55,269
for now we'll just say we get back

1879
01:38:52,539 --> 01:38:57,550
nothing and what we actually want to do

1880
01:38:55,270 --> 01:38:59,650
here is we're gonna actually we're going

1881
01:38:57,550 --> 01:39:03,520
to want to sample the particular

1882
01:38:59,649 --> 01:39:06,179
direction that we're looking in so this

1883
01:39:03,520 --> 01:39:08,530
is really just going to be a sample by

1884
01:39:06,180 --> 01:39:09,369
when we actually need to do this compute

1885
01:39:08,529 --> 01:39:10,509
voxel irradiance

1886
01:39:09,369 --> 01:39:14,640
we're just going to need to actually

1887
01:39:10,510 --> 01:39:17,560
produce a sample there right like so

1888
01:39:14,640 --> 01:39:21,250
take the direction figure out you know

1889
01:39:17,560 --> 01:39:21,909
do octahedral from unit vector and then

1890
01:39:21,250 --> 01:39:25,118
get

1891
01:39:21,908 --> 01:39:28,029
the actual particular X&amp;Y out that we

1892
01:39:25,118 --> 01:39:30,188
want to index and that's what we would

1893
01:39:28,029 --> 01:39:33,998
do in the end so it's actually not gonna

1894
01:39:30,189 --> 01:39:41,939
be very hard well and and there will

1895
01:39:33,998 --> 01:39:41,938
only be right it'll look like this right

1896
01:39:50,458 --> 01:39:55,389
well we'll take an octahedral we'll

1897
01:39:53,050 --> 01:39:58,619
convert it to like a Texel or a table

1898
01:39:55,389 --> 01:40:01,479
and like that by just multiplying it by

1899
01:39:58,618 --> 01:40:04,179
the total number of pixels that there

1900
01:40:01,479 --> 01:40:06,418
are right so it'll be really simple for

1901
01:40:04,179 --> 01:40:09,069
us to do actually at the end of the day

1902
01:40:06,418 --> 01:40:13,719
we will know exactly what we're looking

1903
01:40:09,069 --> 01:40:15,698
at there and and it'll be fine but when

1904
01:40:13,719 --> 01:40:18,458
we actually do our get irradiance value

1905
01:40:15,698 --> 01:40:20,348
we're not gonna we're probably going to

1906
01:40:18,458 --> 01:40:22,389
need to have this be a little smoother

1907
01:40:20,349 --> 01:40:27,760
so what we might have to do here is

1908
01:40:22,389 --> 01:40:29,918
actually take a tri linear filter of

1909
01:40:27,760 --> 01:40:32,019
bilinear filters right because we wanna

1910
01:40:29,918 --> 01:40:34,479
when we actually do that sample we want

1911
01:40:32,019 --> 01:40:36,340
to actually get this so this part will

1912
01:40:34,479 --> 01:40:38,199
actually maybe turn into a bilinear

1913
01:40:36,340 --> 01:40:42,069
sample but we won't have to call this

1914
01:40:38,198 --> 01:40:43,988
four times right it'll just be once with

1915
01:40:42,069 --> 01:40:54,429
one value and that's all we would

1916
01:40:43,988 --> 01:40:56,319
actually need so anyway anyway alright

1917
01:40:54,429 --> 01:40:59,889
so in here where we're doing our

1918
01:40:56,319 --> 01:41:02,109
accumulation again not a thing so we

1919
01:40:59,889 --> 01:41:04,449
kind of need this too you know this

1920
01:41:02,109 --> 01:41:07,748
stuff will have to be sort of written in

1921
01:41:04,448 --> 01:41:12,339
a little bit more a little bit later on

1922
01:41:07,748 --> 01:41:16,380
and yeah so all of this stuff yes still

1923
01:41:12,340 --> 01:41:16,380
not not really gonna work yet

1924
01:41:17,809 --> 01:41:21,760
so these all have to be kind of stub to

1925
01:41:26,979 --> 01:41:32,979
do yep

1926
01:41:41,399 --> 01:41:47,729
all right so I think we're now at the

1927
01:41:44,519 --> 01:41:49,949
actual place we care about so we don't

1928
01:41:47,729 --> 01:41:54,899
want to do these tests what we want to

1929
01:41:49,948 --> 01:41:56,908
do is just test a light sphere first and

1930
01:41:54,899 --> 01:41:58,709
so let's go ahead and do that or maybe

1931
01:41:56,908 --> 01:41:59,878
we want to take a test of checker board

1932
01:41:58,708 --> 01:42:05,158
first we probably want to do both

1933
01:41:59,878 --> 01:42:06,840
honestly but we'll take a look so when

1934
01:42:05,158 --> 01:42:10,138
we look at how these are going to be

1935
01:42:06,840 --> 01:42:10,889
written to this is not probably what we

1936
01:42:10,139 --> 01:42:13,739
want anymore

1937
01:42:10,889 --> 01:42:17,569
would be my guess probably what we want

1938
01:42:13,738 --> 01:42:21,988
to do is just write directly to the

1939
01:42:17,569 --> 01:42:23,219
voxel in question because now we need to

1940
01:42:21,988 --> 01:42:26,698
kind of think about which one we're

1941
01:42:23,219 --> 01:42:27,868
actually writing to right so and you

1942
01:42:26,698 --> 01:42:29,308
know I guess the other way to look at it

1943
01:42:27,868 --> 01:42:32,969
would be if this is if this is actually

1944
01:42:29,309 --> 01:42:40,529
the test version of it then maybe what

1945
01:42:32,969 --> 01:42:46,649
we would want to do is where are these

1946
01:42:40,529 --> 01:42:48,418
getting copied out though okay so this

1947
01:42:46,649 --> 01:42:51,869
is writing directly into the bitmap as

1948
01:42:48,418 --> 01:42:53,189
well so that's fine all right so if

1949
01:42:51,868 --> 01:42:54,478
we're going to go through all of these I

1950
01:42:53,189 --> 01:42:58,019
think what the or them want to do is

1951
01:42:54,479 --> 01:43:01,168
actually have where we write out we're

1952
01:42:58,019 --> 01:43:02,820
gonna want to write the individual

1953
01:43:01,168 --> 01:43:06,648
values that we have like so we're gonna

1954
01:43:02,819 --> 01:43:09,478
want to loop through the the

1955
01:43:06,649 --> 01:43:12,149
two-dimensional octahedral unwrapped

1956
01:43:09,479 --> 01:43:14,429
block right so what we're gonna want to

1957
01:43:12,149 --> 01:43:16,889
do here is have a thing where we write

1958
01:43:14,429 --> 01:43:22,969
out for each direction like we're going

1959
01:43:16,889 --> 01:43:22,969
to want to do sort of our r-tx

1960
01:43:29,448 --> 01:43:40,908
in rty and these are going to be

1961
01:43:37,609 --> 01:43:55,399
wrapping the whole thing right as ugly

1962
01:43:40,908 --> 01:43:57,558
as that as that is right yeah so for

1963
01:43:55,399 --> 01:44:01,448
each of these we're going to need to

1964
01:43:57,559 --> 01:44:08,208
output a light color and a light depth

1965
01:44:01,448 --> 01:44:10,308
and if I start them off like so then we

1966
01:44:08,208 --> 01:44:14,090
just need to actually have like our test

1967
01:44:10,309 --> 01:44:15,679
light sphere do something right and so

1968
01:44:14,090 --> 01:44:18,380
the first thing presumably we would do

1969
01:44:15,679 --> 01:44:20,239
is say all right we needed to get a unit

1970
01:44:18,380 --> 01:44:23,659
vector from whatever the octahedral

1971
01:44:20,238 --> 01:44:25,428
sample actually is in this case and

1972
01:44:23,658 --> 01:44:28,609
we're not gonna worry about the gutter

1973
01:44:25,429 --> 01:44:29,809
right now so we'll sort of start by

1974
01:44:28,609 --> 01:44:32,448
doing this without the gutter and then

1975
01:44:29,809 --> 01:44:37,998
we'll work out the gutter part

1976
01:44:32,448 --> 01:44:41,719
separately so the actual vector here so

1977
01:44:37,998 --> 01:44:44,208
like the Oh X Y vector we know that it's

1978
01:44:41,719 --> 01:44:48,078
the T X and the T Y but they actually

1979
01:44:44,208 --> 01:44:51,170
have to be normalized out right so we

1980
01:44:48,078 --> 01:44:57,649
have to take T X and divide it by light

1981
01:44:51,170 --> 01:45:03,859
color lookup squared M minus 1 and we

1982
01:44:57,649 --> 01:45:08,558
need our t y to be link color lookup

1983
01:45:03,859 --> 01:45:08,558
squared M minus 1 oops

1984
01:45:12,719 --> 01:45:20,179
and then we've got our sort of in that's

1985
01:45:17,488 --> 01:45:24,238
our input so it's normalized zero to one

1986
01:45:20,179 --> 01:45:27,359
inside the octahedron and we now need to

1987
01:45:24,238 --> 01:45:30,838
convert that out to a direction right so

1988
01:45:27,359 --> 01:45:33,749
this is the light der like this is or

1989
01:45:30,838 --> 01:45:36,538
this is the sample der so this is which

1990
01:45:33,748 --> 01:45:39,599
direction we're looking so the o XY goes

1991
01:45:36,538 --> 01:45:41,788
in the sample direction comes out and

1992
01:45:39,599 --> 01:45:44,729
then we need to like figure out what the

1993
01:45:41,788 --> 01:45:46,618
heck we're doing with the sphere here so

1994
01:45:44,729 --> 01:45:48,569
you can see we're trying to compute some

1995
01:45:46,618 --> 01:45:51,808
other stuff about where we are in voxel

1996
01:45:48,569 --> 01:45:54,659
space that's all fine so then we have to

1997
01:45:51,809 --> 01:45:55,019
look and say alright what is all this

1998
01:45:54,658 --> 01:45:56,938
about

1999
01:45:55,019 --> 01:45:58,708
like what's the intensity of light in

2000
01:45:56,939 --> 01:46:01,199
this direction

2001
01:45:58,708 --> 01:46:03,510
you know what would we see from the

2002
01:46:01,198 --> 01:46:06,748
light source if we were pointing in this

2003
01:46:03,510 --> 01:46:09,418
direction and so on and I guess what we

2004
01:46:06,748 --> 01:46:12,719
would say is if we know this stuff like

2005
01:46:09,418 --> 01:46:15,118
we've got how far away it is and all

2006
01:46:12,719 --> 01:46:18,658
that I don't know this is multiple

2007
01:46:15,118 --> 01:46:21,058
lights and I guess I don't really want

2008
01:46:18,658 --> 01:46:29,308
that at the moment so let's let's delete

2009
01:46:21,059 --> 01:46:31,559
some of this stuff here all right so we

2010
01:46:29,309 --> 01:46:33,479
just want to say what the color of the

2011
01:46:31,559 --> 01:46:37,409
light would be at this point I don't

2012
01:46:33,479 --> 01:46:38,668
know why we've got an extra I don't know

2013
01:46:37,408 --> 01:46:40,679
why there's an extra one of these it

2014
01:46:38,668 --> 01:46:44,068
shouldn't be I think that's right right

2015
01:46:40,679 --> 01:46:46,319
yeah so for each of these directions we

2016
01:46:44,069 --> 01:46:48,689
need to put something in here for the

2017
01:46:46,319 --> 01:46:50,839
light and I guess this is a little bit

2018
01:46:48,689 --> 01:46:55,069
tough for us to know what this should be

2019
01:46:50,838 --> 01:46:57,988
because we don't really know like what

2020
01:46:55,069 --> 01:46:59,760
we don't really know what we're talking

2021
01:46:57,988 --> 01:47:01,228
about here because it's it's light

2022
01:46:59,760 --> 01:47:03,628
that's coming from all directions and

2023
01:47:01,229 --> 01:47:06,239
we're you know it's hard to translate a

2024
01:47:03,628 --> 01:47:08,328
point light into that environment

2025
01:47:06,238 --> 01:47:10,378
because it's not really what that means

2026
01:47:08,328 --> 01:47:13,349
so I guess what we could do is let's

2027
01:47:10,378 --> 01:47:15,179
pretend that we just have a directional

2028
01:47:13,349 --> 01:47:18,479
light because that would actually work

2029
01:47:15,179 --> 01:47:21,260
okay so if we wanted a directional light

2030
01:47:18,479 --> 01:47:21,260
or

2031
01:47:21,359 --> 01:47:26,519
or I guess we go gonna do is a point

2032
01:47:23,279 --> 01:47:30,989
light with a with a size right we could

2033
01:47:26,520 --> 01:47:35,010
sort of say look what how close are you

2034
01:47:30,989 --> 01:47:36,000
to pointing to this thing and we'll just

2035
01:47:35,010 --> 01:47:39,570
fall off from there

2036
01:47:36,000 --> 01:47:42,359
so if we said all right the direction to

2037
01:47:39,569 --> 01:47:45,779
the light from where we are is like the

2038
01:47:42,359 --> 01:47:48,929
light UVW - the vox uvw right and the

2039
01:47:45,779 --> 01:47:50,699
light uvw is up here right so wherever

2040
01:47:48,930 --> 01:47:52,380
the light is we know this points towards

2041
01:47:50,699 --> 01:47:54,389
the light we know this is how far we are

2042
01:47:52,380 --> 01:47:57,510
from the light we can do the fall-off

2043
01:47:54,390 --> 01:47:59,340
exactly as we would have done before and

2044
01:47:57,510 --> 01:48:01,380
then we can kind of just stuff this

2045
01:47:59,340 --> 01:48:03,360
thing in there for the light color that

2046
01:48:01,380 --> 01:48:06,779
all would work but now we need to also

2047
01:48:03,359 --> 01:48:09,359
take into account the clamped zero to

2048
01:48:06,779 --> 01:48:11,009
one inner product between the direction

2049
01:48:09,359 --> 01:48:13,139
we're pointing and the direction we're

2050
01:48:11,010 --> 01:48:16,380
sampling right so we just need to say

2051
01:48:13,140 --> 01:48:19,079
look whatever the light normal was we

2052
01:48:16,380 --> 01:48:21,930
want to dot that with whatever our

2053
01:48:19,079 --> 01:48:25,350
sample direction was and fall off from

2054
01:48:21,930 --> 01:48:29,340
there so the actual light a right in

2055
01:48:25,350 --> 01:48:32,579
this case is going to multiply by this

2056
01:48:29,340 --> 01:48:36,079
clamped version here so that we can get

2057
01:48:32,579 --> 01:48:36,079
you know what we would have expected

2058
01:48:36,920 --> 01:48:41,310
once we get the light color I don't

2059
01:48:38,939 --> 01:48:44,219
really want it ranging from negative one

2060
01:48:41,310 --> 01:48:47,370
to one per se anymore it should just be

2061
01:48:44,220 --> 01:48:51,659
zero to one so this part is kind of

2062
01:48:47,369 --> 01:48:55,199
wrong and this is yeah just not what we

2063
01:48:51,659 --> 01:48:59,069
actually want so what we probably should

2064
01:48:55,199 --> 01:49:02,819
say is like clamp zero one here of the

2065
01:48:59,069 --> 01:49:06,630
light see so something like that is more

2066
01:49:02,819 --> 01:49:10,229
or less what we want and so the light

2067
01:49:06,630 --> 01:49:12,270
color would just be you know whatever

2068
01:49:10,229 --> 01:49:15,559
the actual light color would be so maybe

2069
01:49:12,270 --> 01:49:18,560
that for now but times this information

2070
01:49:15,560 --> 01:49:18,560
right

2071
01:49:20,479 --> 01:49:27,329
all right our light depth we don't fill

2072
01:49:23,220 --> 01:49:30,449
in here so we'll just leave that as you

2073
01:49:27,329 --> 01:49:38,130
know some other large value I don't know

2074
01:49:30,449 --> 01:49:41,819
what it should be something like this I

2075
01:49:38,130 --> 01:49:50,550
guess and we'll kind of cross that

2076
01:49:41,819 --> 01:49:56,069
bridge when we come to it because we

2077
01:49:50,550 --> 01:49:57,989
will need this somewhere so I don't know

2078
01:49:56,069 --> 01:50:00,840
how many units the maximum travel should

2079
01:49:57,989 --> 01:50:05,219
be but you know I don't know let's say

2080
01:50:00,840 --> 01:50:11,970
it's 128 for no real reason and then

2081
01:50:05,220 --> 01:50:17,369
we'll just say max light death so

2082
01:50:11,970 --> 01:50:23,070
that'll fill out our table and what is

2083
01:50:17,369 --> 01:50:25,229
the complaint I hads a previous

2084
01:50:23,069 --> 01:50:27,299
definition what is the previous

2085
01:50:25,229 --> 01:50:32,789
definition oh it's this definition all

2086
01:50:27,300 --> 01:50:36,840
right so we're gonna make that light

2087
01:50:32,789 --> 01:50:41,789
seen like D then because oh well and

2088
01:50:36,840 --> 01:50:43,860
this is light color so what we probably

2089
01:50:41,789 --> 01:50:45,600
wanted to look at here is now okay are

2090
01:50:43,859 --> 01:50:46,619
those things actually getting output

2091
01:50:45,600 --> 01:50:49,860
anywhere because they don't think they

2092
01:50:46,619 --> 01:50:52,559
are right so at some point we then have

2093
01:50:49,859 --> 01:50:55,259
to actually write this data out and and

2094
01:50:52,560 --> 01:50:58,940
we're not doing that right like I don't

2095
01:50:55,260 --> 01:50:58,940
I don't see that happening anywhere

2096
01:51:04,420 --> 01:51:08,690
yeah so you know you look at what's

2097
01:51:06,529 --> 01:51:09,859
happening here these need to actually be

2098
01:51:08,689 --> 01:51:20,599
written somewhere if they need to be

2099
01:51:09,859 --> 01:51:25,699
written into the voxel somewhere and I

2100
01:51:20,600 --> 01:51:27,260
guess I'm not I'm not sure when we would

2101
01:51:25,699 --> 01:51:28,399
have wanted to do that it seems like you

2102
01:51:27,260 --> 01:51:36,110
would have wanted to do it right here

2103
01:51:28,399 --> 01:51:38,920
but for some reason we're not where is

2104
01:51:36,109 --> 01:51:38,920
this where is this at

2105
01:51:44,238 --> 01:51:57,779
hmm so I guess I don't understand what's

2106
01:51:50,939 --> 01:52:01,519
going on here because looking at

2107
01:51:57,779 --> 01:52:01,519
producing these values I don't really

2108
01:52:02,090 --> 01:52:07,680
ending if we're doing this in the hot

2109
01:52:04,800 --> 01:52:09,719
dimension here right then what we should

2110
01:52:07,680 --> 01:52:11,010
be able to do is each time we come

2111
01:52:09,719 --> 01:52:12,448
through here we should then be able to

2112
01:52:11,010 --> 01:52:14,369
write this thing back but no one is

2113
01:52:12,448 --> 01:52:16,198
actually writing it back you can see

2114
01:52:14,369 --> 01:52:17,939
that here it would have been running it

2115
01:52:16,198 --> 01:52:19,619
back but like what were so what was

2116
01:52:17,939 --> 01:52:22,049
going on here or did these just directly

2117
01:52:19,619 --> 01:52:24,510
write before because they don't now so

2118
01:52:22,050 --> 01:52:28,980
I'm not sure I really understand why

2119
01:52:24,510 --> 01:52:30,930
what's going on with that I guess we

2120
01:52:28,979 --> 01:52:33,179
just accidentally deleted the code that

2121
01:52:30,930 --> 01:52:34,680
would have done that here but again this

2122
01:52:33,180 --> 01:52:36,600
is the code that would have done that

2123
01:52:34,680 --> 01:52:38,909
you can see it writing it out here right

2124
01:52:36,600 --> 01:52:40,469
like this is the part that would have

2125
01:52:38,909 --> 01:52:42,719
actually done that piece of work so I'm

2126
01:52:40,469 --> 01:52:44,069
super confused it looks like this is old

2127
01:52:42,719 --> 01:52:46,050
news or maybe accidentally deleted

2128
01:52:44,069 --> 01:52:47,130
something important there but point

2129
01:52:46,050 --> 01:52:53,159
being like this is what we would

2130
01:52:47,130 --> 01:52:58,079
actually want right so in here we would

2131
01:52:53,159 --> 01:53:00,899
actually want to put you know we'd want

2132
01:52:58,079 --> 01:53:06,719
to put this this here so we would want

2133
01:53:00,899 --> 01:53:10,589
like our light data see in our light

2134
01:53:06,719 --> 01:53:14,219
data D you know we would we would be

2135
01:53:10,590 --> 01:53:17,760
doing this right and so we would need to

2136
01:53:14,219 --> 01:53:20,189
be able to to index out into those in a

2137
01:53:17,760 --> 01:53:23,190
way that made sense here and so I don't

2138
01:53:20,189 --> 01:53:24,509
really know exactly what's going on

2139
01:53:23,189 --> 01:53:27,779
there

2140
01:53:24,510 --> 01:53:29,400
that's pretty confusing but anyway you

2141
01:53:27,779 --> 01:53:36,509
know it would look something like this

2142
01:53:29,399 --> 01:53:38,460
so that would write it into the texture

2143
01:53:36,510 --> 01:53:41,400
now the problem is we don't know what

2144
01:53:38,460 --> 01:53:44,130
this value actually is like yes this is

2145
01:53:41,399 --> 01:53:48,539
using the dimensions of the hot corner

2146
01:53:44,130 --> 01:53:50,039
part properly in theory to locate us in

2147
01:53:48,539 --> 01:53:52,619
the actual texture but the problem is

2148
01:53:50,039 --> 01:53:55,619
this doesn't take into account the

2149
01:53:52,619 --> 01:53:58,039
actual size of the actual image of each

2150
01:53:55,619 --> 01:54:00,689
like footprint right

2151
01:53:58,039 --> 01:54:03,659
so what we actually need to do here is

2152
01:54:00,689 --> 01:54:06,629
say alright we are indexing into this

2153
01:54:03,659 --> 01:54:12,689
thing by every time we take a step in X

2154
01:54:06,630 --> 01:54:15,060
it's actually x times the x the like

2155
01:54:12,689 --> 01:54:17,609
öktem right whatever the octahedral

2156
01:54:15,060 --> 01:54:20,120
dimension is so we every time we take a

2157
01:54:17,609 --> 01:54:22,859
7 X we're going one octave over right

2158
01:54:20,119 --> 01:54:26,519
every time we take a step in Y it's

2159
01:54:22,859 --> 01:54:29,488
actually hot dim you know times acht dim

2160
01:54:26,520 --> 01:54:32,820
right because we have to go that many

2161
01:54:29,488 --> 01:54:41,879
X's and every time we take a step in Z

2162
01:54:32,819 --> 01:54:44,039
we need to take a step x times the öktem

2163
01:54:41,880 --> 01:54:49,710
squared because we're actually taking

2164
01:54:44,039 --> 01:54:52,829
you know a step in both of those the two

2165
01:54:49,710 --> 01:54:55,739
that both things right it's it's taking

2166
01:54:52,829 --> 01:55:02,130
a step in this total bit here I believe

2167
01:54:55,738 --> 01:55:04,279
is that correct yeah yep I think that's

2168
01:55:02,130 --> 01:55:04,279
right

2169
01:55:05,238 --> 01:55:10,199
so I think that's what we would actually

2170
01:55:07,649 --> 01:55:14,939
do and the oxygen of course in this case

2171
01:55:10,199 --> 01:55:16,109
is not actually pulled out from so if

2172
01:55:14,939 --> 01:55:20,988
you look at the hot damn it comes out of

2173
01:55:16,109 --> 01:55:20,988
here but it we actually know this and

2174
01:55:28,350 --> 01:55:35,890
it actually looks like this right and in

2175
01:55:34,539 --> 01:55:37,329
theory that's how we would actually

2176
01:55:35,890 --> 01:55:39,130
write out the pixels right that's where

2177
01:55:37,329 --> 01:55:41,109
they go and we don't really want to do

2178
01:55:39,130 --> 01:55:45,869
that long term because it's pretty bad

2179
01:55:41,109 --> 01:55:49,149
the way we're doing that but you know

2180
01:55:45,869 --> 01:55:54,369
this is just getting things working so

2181
01:55:49,149 --> 01:55:59,079
this is the we have two of these right

2182
01:55:54,369 --> 01:56:02,680
one is the one for the color and ones

2183
01:55:59,079 --> 01:56:06,880
for the depth and the only difference

2184
01:56:02,680 --> 01:56:13,390
between them is who's you know öktem you

2185
01:56:06,880 --> 01:56:14,980
used and I think that's it and then we

2186
01:56:13,390 --> 01:56:16,539
just need to you know at this point we

2187
01:56:14,979 --> 01:56:19,599
probably want to clean this code up a

2188
01:56:16,539 --> 01:56:21,250
little bit I'm not really sure what the

2189
01:56:19,600 --> 01:56:31,180
game render commands actually called

2190
01:56:21,250 --> 01:56:40,569
this thing so light voxels see and light

2191
01:56:31,180 --> 01:56:42,730
voxel D so I think that's all we need

2192
01:56:40,569 --> 01:56:44,170
this is just I don't know what we want

2193
01:56:42,729 --> 01:56:49,869
to actually compute here I guess this is

2194
01:56:44,170 --> 01:56:59,640
just a so so this is the a the a and the

2195
01:56:49,869 --> 01:56:59,640
again and I think that's all

2196
01:57:01,389 --> 01:57:05,899
all right so that doesn't really help us

2197
01:57:04,069 --> 01:57:09,049
because you know we don't really have

2198
01:57:05,899 --> 01:57:11,059
time to do anything with it so you know

2199
01:57:09,050 --> 01:57:12,050
we're writing out those values but you

2200
01:57:11,059 --> 01:57:15,199
know we don't know they're not actually

2201
01:57:12,050 --> 01:57:16,699
doing anything anyways and we don't have

2202
01:57:15,198 --> 01:57:19,878
an idea of what that even looks like at

2203
01:57:16,698 --> 01:57:21,529
the moment now I could actually try to

2204
01:57:19,878 --> 01:57:22,969
throw the lighting in there real quick

2205
01:57:21,529 --> 01:57:24,529
but I don't really want to because we

2206
01:57:22,969 --> 01:57:25,760
need to actually sit down and do the

2207
01:57:24,529 --> 01:57:28,368
rest of it now so we'll just probably

2208
01:57:25,760 --> 01:57:31,099
leave it at that for today what I would

2209
01:57:28,368 --> 01:57:35,359
say is let's take a just as a final

2210
01:57:31,099 --> 01:57:42,248
thing at the end of the of the process

2211
01:57:35,359 --> 01:57:51,799
here let's just go ahead and try to open

2212
01:57:42,248 --> 01:57:55,188
our handmade render launch so let's just

2213
01:57:51,800 --> 01:57:57,590
see if we can't take a quick capture of

2214
01:57:55,189 --> 01:57:59,959
a frame and validate that we actually

2215
01:57:57,590 --> 01:58:02,538
even are sending anything and that they

2216
01:57:59,958 --> 01:58:06,260
are actually at least somewhat the right

2217
01:58:02,538 --> 01:58:09,768
dimensions or something right so if we

2218
01:58:06,260 --> 01:58:13,039
take a look at one of these color passes

2219
01:58:09,769 --> 01:58:16,219
here you can see some draw elements

2220
01:58:13,038 --> 01:58:18,228
calls building these things up in theory

2221
01:58:16,219 --> 01:58:20,809
there should be an actual texture that

2222
01:58:18,229 --> 01:58:25,280
goes along with that and if we looked at

2223
01:58:20,809 --> 01:58:27,199
the texture viewer I guess I'm not sure

2224
01:58:25,279 --> 01:58:29,538
I'm not really we've mostly been using

2225
01:58:27,198 --> 01:58:31,549
insight so I'm not super facile with

2226
01:58:29,538 --> 01:58:34,639
render doc but we should be able to go

2227
01:58:31,550 --> 01:58:38,329
look and see what textures were actually

2228
01:58:34,639 --> 01:58:40,659
being sampled here or could have been

2229
01:58:38,328 --> 01:58:40,658
sampled

2230
01:58:41,000 --> 01:58:51,500
I don't know where to get that

2231
01:58:43,560 --> 01:58:57,450
information unfortunately um hmm so

2232
01:58:51,500 --> 01:59:06,960
where's the bound textures does that do

2233
01:58:57,449 --> 01:59:08,279
we know where that would be maybe I'll

2234
01:59:06,960 --> 01:59:09,840
save this for next time because like I

2235
01:59:08,279 --> 01:59:16,079
said I never use render dock we used

2236
01:59:09,840 --> 01:59:17,610
insight most of the time so I don't even

2237
01:59:16,079 --> 01:59:21,319
know how we're picking a texture here

2238
01:59:17,609 --> 01:59:21,319
like is there a texture list somewhere

2239
01:59:24,350 --> 01:59:31,020
there we go ah ha ha there it is

2240
01:59:27,420 --> 01:59:33,480
I found it so there should be a

2241
01:59:31,020 --> 01:59:37,830
dimension listed here so here's some

2242
01:59:33,479 --> 01:59:43,619
dimensions listed here right and looking

2243
01:59:37,829 --> 01:59:45,720
at this that I don't know well that's a

2244
01:59:43,619 --> 01:59:49,050
checkerboard though I guess because it's

2245
01:59:45,720 --> 01:59:52,170
this thing here so looking at looking at

2246
01:59:49,050 --> 01:59:58,369
these you can see like the various ones

2247
01:59:52,170 --> 02:00:01,319
we have here and it looks like those are

2248
01:59:58,369 --> 02:00:07,829
probably the ones where's our texture

2249
02:00:01,319 --> 02:00:09,029
atlas oh man our texture array I don't

2250
02:00:07,829 --> 02:00:10,380
know where our texture array is it

2251
02:00:09,029 --> 02:00:12,689
should be your summer so there's a one

2252
02:00:10,380 --> 02:00:15,750
by one by one that's not that's like our

2253
02:00:12,689 --> 02:00:21,299
null texture or whatever there it is so

2254
02:00:15,750 --> 02:00:26,789
here's all our sprites right and I don't

2255
02:00:21,300 --> 02:00:29,909
I don't know how you flip through those

2256
02:00:26,789 --> 02:00:29,908
[Music]

2257
02:00:32,599 --> 02:00:39,380
here we go so here's our like there's

2258
02:00:36,560 --> 02:00:41,119
our texture atlas right so that's our

2259
02:00:39,380 --> 02:00:46,639
dual texture here's our texture atlas

2260
02:00:41,118 --> 02:00:49,158
this presumably is our lighting data and

2261
02:00:46,639 --> 02:00:52,069
I'll be honest that's not very good like

2262
02:00:49,158 --> 02:00:53,238
there's nothing in there which seems bad

2263
02:00:52,069 --> 02:00:59,299
because we should have written something

2264
02:00:53,238 --> 02:01:01,399
right and there's our depth somehow our

2265
02:00:59,300 --> 02:01:04,130
depth actually has information in it

2266
02:01:01,399 --> 02:01:07,519
which makes no sense because it

2267
02:01:04,130 --> 02:01:16,130
shouldn't but it apparently does so

2268
02:01:07,520 --> 02:01:20,780
there's that right how did that happen

2269
02:01:16,130 --> 02:01:23,359
oh because we are writing maxilla max

2270
02:01:20,779 --> 02:01:26,359
light depth but we should have written

2271
02:01:23,359 --> 02:01:30,259
it everywhere and we very clearly don't

2272
02:01:26,359 --> 02:01:33,799
oh I know why that is as well so in

2273
02:01:30,260 --> 02:01:40,070
addition here where we do our slices we

2274
02:01:33,800 --> 02:01:42,860
also have to do our are offset by our X

2275
02:01:40,069 --> 02:01:45,198
Y so our TX has to be in here obviously

2276
02:01:42,859 --> 02:01:48,889
and our T Y has to be in here as well

2277
02:01:45,198 --> 02:01:57,559
and the T Y has to move down by you know

2278
02:01:48,889 --> 02:02:02,139
the x ox dim oops let me put that on the

2279
02:01:57,560 --> 02:02:13,190
next line to unpack into the texture

2280
02:02:02,139 --> 02:02:15,609
Atlas properly we need to do a I split

2281
02:02:13,189 --> 02:02:15,609
this poorly

2282
02:02:17,708 --> 02:02:24,260
right I need to actually develop some

2283
02:02:20,748 --> 02:02:29,328
addressing for this so the why here in

2284
02:02:24,260 --> 02:02:32,659
this case the TX will just step one at a

2285
02:02:29,328 --> 02:02:36,889
time but the T Y is going to have to

2286
02:02:32,658 --> 02:02:38,420
step down a row at a time right and in

2287
02:02:36,889 --> 02:02:40,309
this particular case I guess I don't

2288
02:02:38,420 --> 02:02:41,538
know how we were planning to store these

2289
02:02:40,309 --> 02:02:44,329
because we never really talked about it

2290
02:02:41,538 --> 02:02:47,569
but I'm assuming that we would want to

2291
02:02:44,328 --> 02:02:49,788
store them in actual rows in actual 2d

2292
02:02:47,569 --> 02:02:52,069
rows what that means is that instead of

2293
02:02:49,788 --> 02:02:59,029
a separate T Y there we kind of just

2294
02:02:52,069 --> 02:03:02,118
want we want to multiply that by the hot

2295
02:02:59,029 --> 02:03:03,498
dim times the oxy dim itself right

2296
02:03:02,118 --> 02:03:15,049
because we need to move down an entire

2297
02:03:03,498 --> 02:03:20,748
row at a time right so this Y here is

2298
02:03:15,050 --> 02:03:22,880
actually this because for each Y we need

2299
02:03:20,748 --> 02:03:28,510
to move down an entire see dims worth of

2300
02:03:22,880 --> 02:03:28,510
rows so it would actually look like this

2301
02:03:31,510 --> 02:03:35,030
we're gonna have to systematize this

2302
02:03:33,649 --> 02:03:36,439
because that's pretty ugly right but

2303
02:03:35,029 --> 02:03:39,340
that's that's what we actually have to

2304
02:03:36,439 --> 02:03:39,339
do and

2305
02:03:47,859 --> 02:03:51,159
so there we go

2306
02:03:54,409 --> 02:03:58,130
but right so that would actually be the

2307
02:03:56,359 --> 02:04:00,679
summation there I don't know why our

2308
02:03:58,130 --> 02:04:03,800
Lightsey values are coming out as zero

2309
02:04:00,679 --> 02:04:06,260
all the time whereas our light D values

2310
02:04:03,800 --> 02:04:10,000
are actually writing in properly so I

2311
02:04:06,260 --> 02:04:12,320
guess like this is not working right

2312
02:04:10,000 --> 02:04:13,969
apparently so we'll have to take a look

2313
02:04:12,319 --> 02:04:15,710
at what's happening there because we

2314
02:04:13,969 --> 02:04:23,090
should at least get something sometimes

2315
02:04:15,710 --> 02:04:24,500
right for this stuff so we'll have to

2316
02:04:23,090 --> 02:04:26,900
look at what's actually going in there a

2317
02:04:24,500 --> 02:04:29,060
little bit later but let me just double

2318
02:04:26,899 --> 02:04:35,929
check that this in fact writes we want

2319
02:04:29,060 --> 02:04:39,469
to be able to write - wait a minute how

2320
02:04:35,929 --> 02:04:47,770
do I stop the capture did I already stop

2321
02:04:39,469 --> 02:04:51,800
the capture um close capture I guess

2322
02:04:47,770 --> 02:04:54,350
again my non familiarity with render

2323
02:04:51,800 --> 02:04:57,350
dock is a little bit rough here so

2324
02:04:54,350 --> 02:04:59,810
anyway yeah if we wanted to just just

2325
02:04:57,350 --> 02:05:01,910
verify for our own purposes that we were

2326
02:04:59,810 --> 02:05:03,949
getting anything out there

2327
02:05:01,909 --> 02:05:06,469
it looks like the read values we're

2328
02:05:03,948 --> 02:05:08,178
getting written for us but I don't know

2329
02:05:06,469 --> 02:05:09,590
about anybody else so if I actually come

2330
02:05:08,179 --> 02:05:11,779
through here oops that's not what I

2331
02:05:09,590 --> 02:05:16,940
wanted if I actually launched this this

2332
02:05:11,779 --> 02:05:24,289
fellow into a print screen and then

2333
02:05:16,939 --> 02:05:26,329
closed now what I should be able to do

2334
02:05:24,289 --> 02:05:29,000
is take a look at that texture that was

2335
02:05:26,329 --> 02:05:30,738
read before which is this and there's

2336
02:05:29,000 --> 02:05:32,630
some stuff in there which is read before

2337
02:05:30,738 --> 02:05:33,948
it should be all read which it is now it

2338
02:05:32,630 --> 02:05:35,539
doesn't really mean it's right it just

2339
02:05:33,948 --> 02:05:38,019
means we are at least writing to the

2340
02:05:35,539 --> 02:05:40,609
whole thing which is what we wanted and

2341
02:05:38,020 --> 02:05:44,660
looking at this one we actually get some

2342
02:05:40,609 --> 02:05:48,380
stuff in here but it looks wrong so it's

2343
02:05:44,659 --> 02:05:51,170
probably not quite right it's probably

2344
02:05:48,380 --> 02:05:53,989
almost right but our indexing might be

2345
02:05:51,170 --> 02:05:56,750
slightly off just looking at what's

2346
02:05:53,988 --> 02:05:57,138
going on here or our octahedral stuff

2347
02:05:56,750 --> 02:06:02,899
could

2348
02:05:57,139 --> 02:06:06,529
also be buggy right um yeah so I don't

2349
02:06:02,899 --> 02:06:08,929
know what to make of that exactly but

2350
02:06:06,529 --> 02:06:11,779
it's not the worst thing that we've ever

2351
02:06:08,929 --> 02:06:13,550
made so I think it puts us in position

2352
02:06:11,779 --> 02:06:15,439
to get going next weekend

2353
02:06:13,550 --> 02:06:17,739
all right I'm happy to go to a brief Q&amp;A

2354
02:06:15,439 --> 02:06:17,738
now

2355
02:06:41,708 --> 02:06:47,340
ah okay yeah you're right I did do that

2356
02:06:48,420 --> 02:06:54,449
where's the let me switch back here

2357
02:07:00,599 --> 02:07:08,319
you're right so this one we can't quite

2358
02:07:03,189 --> 02:07:16,360
do because we need it so I guess in this

2359
02:07:08,319 --> 02:07:19,630
case I can just do that right because we

2360
02:07:16,359 --> 02:07:23,368
don't actually change these values so I

2361
02:07:19,630 --> 02:07:26,368
can just do them this way I suppose

2362
02:07:23,368 --> 02:07:26,368
right

2363
02:07:33,750 --> 02:07:38,819
I think the Uzi doesn't need to be

2364
02:07:37,050 --> 02:07:47,520
negated in the unit vector from

2365
02:07:38,819 --> 02:07:50,869
octahedral function um I think you're

2366
02:07:47,520 --> 02:08:02,040
wrong I think it does need to be negated

2367
02:07:50,869 --> 02:08:09,989
right you know what i'm santi so if if

2368
02:08:02,039 --> 02:08:11,310
you look at what's happening and enya in

2369
02:08:09,989 --> 02:08:11,609
here we probably wanna do the same thing

2370
02:08:11,310 --> 02:08:18,690
right

2371
02:08:11,609 --> 02:08:30,989
so I'm not sure how we write that

2372
02:08:18,689 --> 02:08:38,609
cleanly so if I hmm so I'm not really

2373
02:08:30,989 --> 02:08:43,170
sure what we would do there so I guess

2374
02:08:38,609 --> 02:08:45,089
what we would do is say all right yeah

2375
02:08:43,170 --> 02:08:47,430
because this one's nice because we

2376
02:08:45,090 --> 02:08:49,050
already sort of made it out into more

2377
02:08:47,430 --> 02:08:50,760
variable so it's easy for us to make

2378
02:08:49,050 --> 02:08:53,510
this work without worrying about the

2379
02:08:50,760 --> 02:08:53,510
overwrite right

2380
02:08:57,649 --> 02:09:02,159
someone took my name does it always know

2381
02:09:00,239 --> 02:09:04,079
so we're trying to produce a unit vector

2382
02:09:02,159 --> 02:09:05,579
right so Z has to be pointing in the

2383
02:09:04,079 --> 02:09:07,109
correct direction so I'm pretty sure we

2384
02:09:05,579 --> 02:09:08,609
always have to check were we on the

2385
02:09:07,109 --> 02:09:11,699
bottom of the sphere if we are we have

2386
02:09:08,609 --> 02:09:13,949
to negate Z because Z this is always

2387
02:09:11,699 --> 02:09:16,949
going to be Plus this is always going to

2388
02:09:13,949 --> 02:09:26,449
give us a positive Z but Z points down

2389
02:09:16,949 --> 02:09:26,449
sometimes right so yeah

2390
02:09:28,788 --> 02:09:33,948
so I'm pretty sure we need this line as

2391
02:09:31,309 --> 02:09:35,809
to how to rewrite this one so what's the

2392
02:09:33,948 --> 02:09:37,460
cleanest way to do this but that makes

2393
02:09:35,809 --> 02:09:38,239
that vector notation so much nicer when

2394
02:09:37,460 --> 02:09:40,399
you think about it because you don't

2395
02:09:38,238 --> 02:09:42,669
have this problem in there it'd be nice

2396
02:09:40,399 --> 02:09:45,710
if we could do that but we can't really

2397
02:09:42,670 --> 02:09:51,380
but anyway so yeah I guess we just have

2398
02:09:45,710 --> 02:09:53,710
to compute them as temps whoa just

2399
02:09:51,380 --> 02:10:01,599
happened that was weird

2400
02:09:53,710 --> 02:10:01,599
all right you know we we could do this

2401
02:10:04,988 --> 02:10:22,879
you know I guess if one minus sum X Y is

2402
02:10:19,969 --> 02:10:27,939
less than zero no but but it's not it's

2403
02:10:22,880 --> 02:10:27,940
it's whether it's less than 1 not 0

2404
02:10:31,059 --> 02:10:34,059
right

2405
02:10:37,819 --> 02:10:44,979
oh I see you just uh hmm yeah all right

2406
02:10:40,640 --> 02:10:50,960
now that's a good point it would already

2407
02:10:44,979 --> 02:10:55,339
turn negative all right no all right I

2408
02:10:50,960 --> 02:10:58,579
believe you I believe you yeah because

2409
02:10:55,340 --> 02:11:00,739
if if these were greater than one then

2410
02:10:58,579 --> 02:11:02,300
this will be negative anyway so we don't

2411
02:11:00,739 --> 02:11:14,420
have to negate it because it will negate

2412
02:11:02,300 --> 02:11:16,820
it itself yeah I buy that yeah so the

2413
02:11:14,420 --> 02:11:20,270
reference code does use sign of not zero

2414
02:11:16,819 --> 02:11:22,909
but that's actually the same for us so

2415
02:11:20,270 --> 02:11:26,500
if you look at sign of for us we

2416
02:11:22,909 --> 02:11:29,359
actually do ours is a sign of not zero

2417
02:11:26,500 --> 02:11:33,979
that's how we defined our sign of I

2418
02:11:29,359 --> 02:11:36,199
guess in their land sign of would return

2419
02:11:33,979 --> 02:11:42,409
zero if it was equal to zero ours

2420
02:11:36,199 --> 02:11:48,139
already returns positive so we kind of

2421
02:11:42,409 --> 02:11:50,180
already did that which makes us not

2422
02:11:48,140 --> 02:11:51,440
quite be Nam and clay chore compatible

2423
02:11:50,180 --> 02:11:57,320
but that's okay I mean you're never

2424
02:11:51,439 --> 02:12:01,969
going to be exactly but let me let me

2425
02:11:57,319 --> 02:12:03,559
double check this area I think I have a

2426
02:12:01,970 --> 02:12:06,890
typo in the trial Earp code

2427
02:12:03,560 --> 02:12:11,440
so what trailer code though we don't

2428
02:12:06,890 --> 02:12:11,440
have any of that at the moment right

2429
02:12:16,488 --> 02:12:22,229
it's returning positive for zero yeah we

2430
02:12:19,319 --> 02:12:23,759
that's what we do but it wouldn't really

2431
02:12:22,229 --> 02:12:25,138
matter you could you could return either

2432
02:12:23,760 --> 02:12:34,170
when you want it but we return positive

2433
02:12:25,139 --> 02:12:35,880
for zero as well why would we need it to

2434
02:12:34,170 --> 02:12:43,020
I don't think that's true why would we

2435
02:12:35,880 --> 02:12:45,060
need to return zero for zero actually

2436
02:12:43,020 --> 02:12:47,429
you know I disagree I think it I think

2437
02:12:45,060 --> 02:12:49,739
it actually can't return zero for zero

2438
02:12:47,429 --> 02:12:59,789
if it returns zero for zero I think it

2439
02:12:49,738 --> 02:13:03,388
would be a bug actually are you sure

2440
02:12:59,789 --> 02:13:05,100
their code returns zero for zero because

2441
02:13:03,389 --> 02:13:14,850
that actually doesn't seem necessary in

2442
02:13:05,100 --> 02:13:17,280
this case at all right yeah no their

2443
02:13:14,850 --> 02:13:22,159
code does not do that their code very

2444
02:13:17,279 --> 02:13:25,170
specifically does not return zero ever

2445
02:13:22,158 --> 02:13:29,429
right it isn't it does not do that and

2446
02:13:25,170 --> 02:13:31,590
neither does ours right so it can only

2447
02:13:29,429 --> 02:13:38,010
return positive one or negative one

2448
02:13:31,590 --> 02:13:39,119
right just like ours and like I said I

2449
02:13:38,010 --> 02:13:40,860
think that's crucial I don't think this

2450
02:13:39,118 --> 02:13:42,019
routine where if this returns zero I

2451
02:13:40,859 --> 02:13:45,779
think this routine would stop working

2452
02:13:42,020 --> 02:13:47,690
because if you you want to retain the

2453
02:13:45,779 --> 02:13:52,079
value even in the case where it's zero

2454
02:13:47,689 --> 02:13:53,789
because you're actually Swizzle your you

2455
02:13:52,079 --> 02:14:01,079
know what I'm saying like you're

2456
02:13:53,789 --> 02:14:03,510
actually so like in this case you you

2457
02:14:01,079 --> 02:14:06,809
are using the sine of X but the

2458
02:14:03,510 --> 02:14:10,369
magnitude of Y and so if X happens to be

2459
02:14:06,810 --> 02:14:12,389
zero you don't want to ruin your y

2460
02:14:10,368 --> 02:14:14,729
computation because you don't know that

2461
02:14:12,389 --> 02:14:20,690
Y is one because remember Z is in the

2462
02:14:14,729 --> 02:14:20,689
mix so if X is zero Y might not be one

2463
02:14:21,380 --> 02:14:25,500
like it doesn't have to be because Z

2464
02:14:24,270 --> 02:14:28,360
could have been it could have been on

2465
02:14:25,500 --> 02:14:30,579
the Y Z slice so X can be 0 and

2466
02:14:28,359 --> 02:14:34,750
I can still be any value between zero

2467
02:14:30,579 --> 02:14:37,300
and one pretty negative one in one so I

2468
02:14:34,750 --> 02:14:39,250
think this actually very specifically

2469
02:14:37,300 --> 02:14:41,500
there's a reason they called this sine

2470
02:14:39,250 --> 02:14:44,409
not zero is because they can't actually

2471
02:14:41,500 --> 02:14:46,119
return it's not the regular sine

2472
02:14:44,409 --> 02:14:49,829
function the regular sine function I

2473
02:14:46,119 --> 02:14:53,979
think returns zero for zero I think

2474
02:14:49,829 --> 02:14:56,079
maybe not but they at least know that's

2475
02:14:53,979 --> 02:14:59,469
not okay like they need to know what the

2476
02:14:56,079 --> 02:15:01,930
actual sine would have been quadrant

2477
02:14:59,470 --> 02:15:05,409
wise and you can pick plus or minus

2478
02:15:01,930 --> 02:15:06,760
depending on 0 like this could go the

2479
02:15:05,409 --> 02:15:07,840
opposite way this could be a greater

2480
02:15:06,760 --> 02:15:09,130
than instead of greater than equal to

2481
02:15:07,840 --> 02:15:11,079
and I think the routine would just would

2482
02:15:09,130 --> 02:15:13,150
still just work fine but what you can't

2483
02:15:11,079 --> 02:15:14,800
do is ever actually return 0 there

2484
02:15:13,149 --> 02:15:22,869
because that knocks out the equation and

2485
02:15:14,800 --> 02:15:25,720
you would you would miss the ring so so

2486
02:15:22,869 --> 02:15:28,090
let me let me take a look at the that

2487
02:15:25,720 --> 02:15:30,940
the you were talk about the txt y thing

2488
02:15:28,090 --> 02:15:38,890
though as a separate issue so let me

2489
02:15:30,939 --> 02:15:40,719
just take a look at that oh yeah this

2490
02:15:38,890 --> 02:15:44,079
one yeah I mean we're not actually gonna

2491
02:15:40,720 --> 02:15:46,300
use this though so they can ignore that

2492
02:15:44,079 --> 02:15:48,369
that that's you know we're gonna have to

2493
02:15:46,300 --> 02:15:51,699
rewrite that little part but it's gonna

2494
02:15:48,369 --> 02:15:55,720
look something like that right all right

2495
02:15:51,699 --> 02:15:57,399
folks wanted a recap on render doc just

2496
02:15:55,720 --> 02:15:59,740
to see if this Rizal changed things much

2497
02:15:57,399 --> 02:16:01,239
we can totally do that but we probably

2498
02:15:59,739 --> 02:16:02,289
VAT other problems right we just kind of

2499
02:16:01,239 --> 02:16:05,800
hacked that in there really quickly

2500
02:16:02,289 --> 02:16:07,750
haven't tested anything yet so you know

2501
02:16:05,800 --> 02:16:11,400
I think we got a ways to go because

2502
02:16:07,750 --> 02:16:11,399
there's a lot of moving parts in here

2503
02:16:20,479 --> 02:16:32,209
so here it is um I don't know that that

2504
02:16:30,649 --> 02:16:35,149
looks like it might still have some

2505
02:16:32,209 --> 02:16:42,649
errors in it it's better than it was

2506
02:16:35,149 --> 02:16:44,989
though but I'm not sure right we'll see

2507
02:16:42,649 --> 02:16:49,539
we're not far I mean we just got a

2508
02:16:44,989 --> 02:16:49,539
streamline this right so you'll be fine

2509
02:16:58,380 --> 02:17:03,189
he's oxly I'm supposed to be mapped

2510
02:17:00,610 --> 02:17:05,350
between 0 and negative 0 and 1 or

2511
02:17:03,190 --> 02:17:07,631
negative 1 1 in the light setup code oh

2512
02:17:05,350 --> 02:17:08,290
yeah you know what so actually that's a

2513
02:17:07,630 --> 02:17:13,569
good point

2514
02:17:08,290 --> 02:17:16,330
so I believe this hmm

2515
02:17:13,569 --> 02:17:19,440
I believe this generally wants to map

2516
02:17:16,329 --> 02:17:19,440
between negative 1 and 1

2517
02:17:20,190 --> 02:17:27,190
so this maps between negative 1 and 1

2518
02:17:23,290 --> 02:17:32,100
and so I assume what we actually want to

2519
02:17:27,190 --> 02:17:36,270
do here when we're doing the actual fill

2520
02:17:32,100 --> 02:17:40,300
we probably want to actually make that

2521
02:17:36,270 --> 02:17:43,000
before we forget map this between 0 &amp; 1

2522
02:17:40,300 --> 02:17:51,579
first because when we actually do the TX

2523
02:17:43,000 --> 02:17:54,130
dy this code here this right here

2524
02:17:51,579 --> 02:17:57,459
probably need is going to need to map

2525
02:17:54,130 --> 02:18:03,250
this to negative 1 to 1 so once we

2526
02:17:57,459 --> 02:18:06,119
actually do the mapping from 0 to 1 we

2527
02:18:03,250 --> 02:18:06,120
need to do this

2528
02:18:11,968 --> 02:18:17,638
right good catch there cuz we it's not

2529
02:18:14,898 --> 02:18:22,888
it's not mapped the right way round

2530
02:18:17,638 --> 02:18:24,179
right because it the txt why is talking

2531
02:18:22,888 --> 02:18:27,208
about pixels in a grid and it starts at

2532
02:18:24,179 --> 02:18:30,748
zero and so we want to actually change

2533
02:18:27,209 --> 02:18:34,380
that into the unit square which we need

2534
02:18:30,748 --> 02:18:38,119
to do differently right so again that

2535
02:18:34,379 --> 02:18:38,118
that'll affect the unwrapping

2536
02:19:01,829 --> 02:19:11,849
all right so there's our where we're

2537
02:19:05,968 --> 02:19:14,728
gonna leave it right and you know it

2538
02:19:11,849 --> 02:19:17,068
kind of looks like some lighting sort of

2539
02:19:14,728 --> 02:19:20,909
I mean I could believe that that was

2540
02:19:17,068 --> 02:19:24,659
storing some lighting couldn't you I

2541
02:19:20,909 --> 02:19:26,340
wouldn't want to bet on it but it looks

2542
02:19:24,659 --> 02:19:27,840
okay like I said I think it's a

2543
02:19:26,340 --> 02:19:29,579
reasonable starting point we got a lot

2544
02:19:27,840 --> 02:19:31,349
of debugging to do and we're gonna want

2545
02:19:29,579 --> 02:19:33,239
to clean that stuff up and and all that

2546
02:19:31,349 --> 02:19:35,398
so it's it's you know we've got a we got

2547
02:19:33,239 --> 02:19:37,318
some work to do but I don't think we're

2548
02:19:35,398 --> 02:19:48,779
in bad shape right we've got the basics

2549
02:19:37,318 --> 02:19:50,549
started so I think we're okay if it's

2550
02:19:48,780 --> 02:19:53,130
okay to ask something off topic why

2551
02:19:50,549 --> 02:19:57,799
aren't more engines using dynamic DLL

2552
02:19:53,129 --> 02:19:57,799
deso for hot deployment of game code I

2553
02:19:58,728 --> 02:20:06,869
think they are I mean isn't that what

2554
02:20:02,329 --> 02:20:11,850
unreal does I don't think that's unusual

2555
02:20:06,870 --> 02:20:13,350
I think lots of engines do it do you

2556
02:20:11,850 --> 02:20:14,729
find it annoying to keep hopping between

2557
02:20:13,350 --> 02:20:16,829
editor and debugger when you're

2558
02:20:14,728 --> 02:20:19,139
programming in your ideal environment

2559
02:20:16,829 --> 02:20:30,079
with these two tools be unified in the

2560
02:20:19,139 --> 02:20:32,369
same window I guess I don't really know

2561
02:20:30,079 --> 02:20:35,059
they probably wouldn't be in the same

2562
02:20:32,370 --> 02:20:37,620
window because I want my debugger on my

2563
02:20:35,059 --> 02:20:40,079
second monitor normally and I want my

2564
02:20:37,620 --> 02:20:41,910
editor on my main monitor so like the

2565
02:20:40,079 --> 02:20:44,100
main monitor runs my editor in the game

2566
02:20:41,909 --> 02:20:47,369
and like a secondary monitor runs the

2567
02:20:44,100 --> 02:20:49,739
debugger so probably all I really want

2568
02:20:47,370 --> 02:20:51,990
is the ability to synchronize the view

2569
02:20:49,739 --> 02:20:53,520
between the two and we've kind of talked

2570
02:20:51,989 --> 02:20:55,949
about this before I talked with George

2571
02:20:53,520 --> 02:21:00,120
about this and I think it's not that

2572
02:20:55,950 --> 02:21:02,220
hard to do that right but what I really

2573
02:21:00,120 --> 02:21:04,200
just want is my editor and my debugger

2574
02:21:02,219 --> 02:21:05,670
to stay in sync I don't really want them

2575
02:21:04,200 --> 02:21:06,659
to necessarily be the same application

2576
02:21:05,670 --> 02:21:08,939
for any particular reason

2577
02:21:06,659 --> 02:21:12,359
and I definitely don't want them to be

2578
02:21:08,939 --> 02:21:15,000
the same display it's a special case of

2579
02:21:12,359 --> 02:21:17,040
handmade hero that it looks like this

2580
02:21:15,000 --> 02:21:20,090
normally I would not have my debugger on

2581
02:21:17,040 --> 02:21:20,090
the same monitor

2582
02:21:35,578 --> 02:21:39,068
could be a good idea to add to the debug

2583
02:21:37,779 --> 02:21:40,420
system a way to look at the OpenGL

2584
02:21:39,068 --> 02:21:41,948
texture we could switch lists from the

2585
02:21:40,420 --> 02:21:43,359
game well no I I don't know if you

2586
02:21:41,949 --> 02:21:44,649
remember but I specifically said that's

2587
02:21:43,359 --> 02:21:45,760
exactly what we're going to do so we

2588
02:21:44,648 --> 02:21:52,299
haven't gotten there yet but we're

2589
02:21:45,760 --> 02:21:54,279
definitely doing that don't you think

2590
02:21:52,299 --> 02:21:55,809
using a CPP file instead of a batch file

2591
02:21:54,279 --> 02:21:58,050
for build setup and configuration would

2592
02:21:55,809 --> 02:22:05,769
be better since patch files are so bad

2593
02:21:58,049 --> 02:22:07,538
who builds the C file right at the

2594
02:22:05,770 --> 02:22:10,539
minimum you need a batch file to build

2595
02:22:07,539 --> 02:22:12,880
the C file that then does the build so

2596
02:22:10,539 --> 02:22:15,189
sure you could go that route but you

2597
02:22:12,879 --> 02:22:20,738
still need build up at you can never get

2598
02:22:15,189 --> 02:22:22,270
rid of build that bad unreal only does

2599
02:22:20,738 --> 02:22:23,439
it fairly recently using an external

2600
02:22:22,270 --> 02:22:28,060
tool which cost the most zero

2601
02:22:23,439 --> 02:22:32,648
implementation effort yeah like I I

2602
02:22:28,059 --> 02:22:34,538
don't know I mean I don't know why

2603
02:22:32,648 --> 02:22:39,549
anyone does what they do I have no idea

2604
02:22:34,539 --> 02:22:40,569
it's easy to reload code but I mean one

2605
02:22:39,549 --> 02:22:43,559
thing you have to remember is when you

2606
02:22:40,568 --> 02:22:45,538
go into giant C++ nonsense land

2607
02:22:43,559 --> 02:22:47,648
reloading code becomes very difficult

2608
02:22:45,539 --> 02:22:49,029
because you've got all these function

2609
02:22:47,648 --> 02:22:51,219
pointers strewn throughout all your code

2610
02:22:49,029 --> 02:22:54,459
sitting in dynamic tables all over the

2611
02:22:51,219 --> 02:22:56,198
place and you've done fifty million

2612
02:22:54,459 --> 02:23:05,050
calls to new and you have no idea what

2613
02:22:56,199 --> 02:23:06,939
they allocated so like the fact that we

2614
02:23:05,049 --> 02:23:08,349
program sensibly on handmade hero is one

2615
02:23:06,939 --> 02:23:13,318
of the things that made it so easy to do

2616
02:23:08,350 --> 02:23:15,340
and so I guess what I would say is

2617
02:23:13,318 --> 02:23:16,328
sometimes the reason people can't do

2618
02:23:15,340 --> 02:23:18,039
this is cuz they make a lot of really

2619
02:23:16,328 --> 02:23:23,978
bad decisions and use a lot of stupid

2620
02:23:18,039 --> 02:23:25,390
modern C++ features that suck so you can

2621
02:23:23,978 --> 02:23:29,248
make it a lot harder on yourself by

2622
02:23:25,389 --> 02:23:29,248
using virtual functions for example

2623
02:23:31,140 --> 02:23:33,949
all right

2624
02:23:40,640 --> 02:23:43,649
thank you everyone for joining me flips

2625
02:23:42,569 --> 02:23:45,390
on a handmade hero sort of pleasure

2626
02:23:43,649 --> 02:23:46,619
coating with you as always if you would

2627
02:23:45,390 --> 02:23:48,000
like to follow series at home you can

2628
02:23:46,620 --> 02:23:51,120
always peer to the game on handmade here

2629
02:23:48,000 --> 02:23:53,459
org and it comes with a source code I

2630
02:23:51,120 --> 02:23:56,311
will be back here next week when we will

2631
02:23:53,459 --> 02:23:58,319
do some work streamlining that process

2632
02:23:56,310 --> 02:24:01,229
and trying to getting our lighting up

2633
02:23:58,319 --> 02:24:03,659
and running using just a simple sphere

2634
02:24:01,229 --> 02:24:05,670
light like we were doing before just so

2635
02:24:03,659 --> 02:24:08,069
we can test that Atlas packing scheme

2636
02:24:05,670 --> 02:24:09,989
and see if we can you know kind of iron

2637
02:24:08,069 --> 02:24:12,299
out all the rough edges and and get

2638
02:24:09,989 --> 02:24:14,250
everything debugged that's it for this

2639
02:24:12,299 --> 02:24:15,659
week until next week have fun

2640
02:24:14,250 --> 02:24:16,140
programming and I will see everyone on

2641
02:24:15,659 --> 02:24:18,560
the Internet

2642
02:24:16,140 --> 02:24:18,560
take it easy everybody

