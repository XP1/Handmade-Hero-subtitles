1
00:00:00,000 --> 00:00:06,990
start recording hello everyone and

2
00:00:05,339 --> 00:00:10,710
welcome to handmade hero the show recode

3
00:00:06,990 --> 00:00:14,070
a complete game live on stream we are

4
00:00:10,710 --> 00:00:16,230
here on day 3 31 and we were just

5
00:00:14,070 --> 00:00:18,448
finishing up some bug's stuff yesterday

6
00:00:16,230 --> 00:00:22,079
I think there's a couple little

7
00:00:18,449 --> 00:00:25,230
remaining issues to check out I think we

8
00:00:22,079 --> 00:00:27,139
missed one Kim reopened this one because

9
00:00:25,230 --> 00:00:30,089
he said we also need to do the float one

10
00:00:27,140 --> 00:00:31,589
so we should probably do that but

11
00:00:30,089 --> 00:00:33,929
otherwise I think we got most of these

12
00:00:31,589 --> 00:00:36,960
down I haven't heard from anyone yet on

13
00:00:33,929 --> 00:00:39,030
this guy right here like I said these

14
00:00:36,960 --> 00:00:40,770
are just someone needs to figure out the

15
00:00:39,030 --> 00:00:42,558
macro thing so I'm going to leave this

16
00:00:40,770 --> 00:00:44,460
one around we're not going to address it

17
00:00:42,558 --> 00:00:45,449
because I think that's the last thing

18
00:00:44,460 --> 00:00:47,549
we're not going to dress that till

19
00:00:45,450 --> 00:00:50,940
someone tells me what we might need to

20
00:00:47,549 --> 00:00:53,339
do to fix the macros completely like

21
00:00:50,939 --> 00:00:55,589
gives us a working example because until

22
00:00:53,340 --> 00:00:57,629
then I I really can't play with it much

23
00:00:55,590 --> 00:00:59,010
I'd have to install clang to like start

24
00:00:57,628 --> 00:01:00,599
testing it or something like that and

25
00:00:59,009 --> 00:01:03,718
they don't really think that's a useful

26
00:01:00,600 --> 00:01:05,040
thing to do at this point so if someone

27
00:01:03,719 --> 00:01:07,469
who really cares about building under

28
00:01:05,040 --> 00:01:12,868
clang wants to do that go ahead and do

29
00:01:07,469 --> 00:01:16,408
that and let me know and so and if you

30
00:01:12,868 --> 00:01:18,420
know if I get that I'll definitely do it

31
00:01:16,409 --> 00:01:20,280
in short order this one however we can

32
00:01:18,420 --> 00:01:21,239
do this was just a case of I forgot one

33
00:01:20,280 --> 00:01:24,299
of them when I was when I was cleaning

34
00:01:21,239 --> 00:01:26,699
this out and like I said a 331 so this

35
00:01:24,299 --> 00:01:34,860
is date 330 source code that I medic

36
00:01:26,700 --> 00:01:36,900
here let's go ahead and that going so

37
00:01:34,859 --> 00:01:39,239
here in the printf what we were doing

38
00:01:36,900 --> 00:01:40,439
before is again and I'll just say this

39
00:01:39,239 --> 00:01:43,289
one more time but I think was probably

40
00:01:40,438 --> 00:01:48,239
clear for most people when we're reading

41
00:01:43,290 --> 00:01:53,490
ver arms off of the stack I see for

42
00:01:48,239 --> 00:01:55,280
whatever reason and I'll be honest I

43
00:01:53,489 --> 00:01:58,919
don't really know the reason

44
00:01:55,280 --> 00:02:00,509
historically but the way that it puts

45
00:01:58,920 --> 00:02:04,409
things on the stack in a ver arg

46
00:02:00,509 --> 00:02:08,788
function is it will always expand them

47
00:02:04,409 --> 00:02:11,819
to be certain types so if you try to put

48
00:02:08,788 --> 00:02:13,619
an integer on the stack in a very arc

49
00:02:11,818 --> 00:02:16,708
function it will go on as an intern

50
00:02:13,620 --> 00:02:18,629
but if you try to put a care like an

51
00:02:16,709 --> 00:02:21,000
8-bit value on the stack it will

52
00:02:18,628 --> 00:02:24,000
actually expand it to 32 bits first

53
00:02:21,000 --> 00:02:25,469
that's just how ver arms works and i'm

54
00:02:24,000 --> 00:02:28,378
assuming that said something to do with

55
00:02:25,469 --> 00:02:30,750
stack alignment or something i really

56
00:02:28,378 --> 00:02:34,139
don't know or maybe convenience i'm not

57
00:02:30,750 --> 00:02:37,680
sure but for whatever reason that's how

58
00:02:34,139 --> 00:02:39,899
ver args works so it is not the case

59
00:02:37,680 --> 00:02:41,519
that when you put a care on you get a

60
00:02:39,900 --> 00:02:43,650
care off you put a care on you get an

61
00:02:41,519 --> 00:02:45,269
int off you put a short on you get an

62
00:02:43,650 --> 00:02:47,730
ant off you put an int on you get an

63
00:02:45,269 --> 00:02:50,280
impt off you put a float on you get a

64
00:02:47,729 --> 00:02:52,439
double off you put a double on you get a

65
00:02:50,280 --> 00:02:54,289
double off right and i missed one of

66
00:02:52,439 --> 00:02:57,419
those cases when we were doing that here

67
00:02:54,289 --> 00:02:59,068
really this one length equals 8 really

68
00:02:57,419 --> 00:03:06,509
what happens in this function is it's

69
00:02:59,068 --> 00:03:08,219
always this case I believe it's always

70
00:03:06,509 --> 00:03:10,729
going to be a double I don't think

71
00:03:08,219 --> 00:03:13,079
there's any way to actually push a float

72
00:03:10,729 --> 00:03:17,000
I'm not sure about that but I think

73
00:03:13,079 --> 00:03:20,340
that's the case and so that was the bug

74
00:03:17,000 --> 00:03:22,939
clang was cause I was complaining about

75
00:03:20,340 --> 00:03:25,889
here with the float part still needing

76
00:03:22,939 --> 00:03:27,389
you know it's basically saying hey you

77
00:03:25,889 --> 00:03:29,069
know that float will get turned into a

78
00:03:27,389 --> 00:03:30,329
double so when you pull off a float

79
00:03:29,068 --> 00:03:32,369
you're probably doing something wrong

80
00:03:30,329 --> 00:03:33,959
and like i said i think that is zach

81
00:03:32,370 --> 00:03:35,730
with respect oh so that was just that

82
00:03:33,959 --> 00:03:40,219
that's clang catching a potential error

83
00:03:35,729 --> 00:03:44,219
that we just don't have right now but

84
00:03:40,219 --> 00:03:45,659
it's accurate so let's go ahead and take

85
00:03:44,219 --> 00:03:49,969
a look and make sure that we're still

86
00:03:45,659 --> 00:03:52,259
working properly here with that change

87
00:03:49,969 --> 00:03:59,729
and it does look like everything's fine

88
00:03:52,259 --> 00:04:03,899
they're all good

89
00:03:59,729 --> 00:04:08,598
so yeah hopefully now we can actually

90
00:04:03,900 --> 00:04:16,699
mark this okay hopefully I actually

91
00:04:08,598 --> 00:04:16,699
fixed it this time for you on okay 331

92
00:04:18,529 --> 00:04:26,668
we go all right so now I think we are

93
00:04:24,360 --> 00:04:29,220
down to not having any particular bugs

94
00:04:26,668 --> 00:04:32,668
here that I'm going to address in short

95
00:04:29,220 --> 00:04:34,500
order again this guy is mostly done on

96
00:04:32,668 --> 00:04:37,288
the other parts so this part I think is

97
00:04:34,500 --> 00:04:40,019
all done but this part here is not and

98
00:04:37,288 --> 00:04:41,639
so if somebody does want to take the

99
00:04:40,019 --> 00:04:43,198
initiative who has clang and works with

100
00:04:41,639 --> 00:04:46,259
Liang to figure out how to make our

101
00:04:43,199 --> 00:04:47,840
debug macros work okay with it I will

102
00:04:46,259 --> 00:04:51,959
make that change so just let me know

103
00:04:47,839 --> 00:04:56,189
about that and I don't know if this is

104
00:04:51,959 --> 00:04:58,469
that if this solution works okay we

105
00:04:56,189 --> 00:05:00,180
could switch to it potentially but

106
00:04:58,470 --> 00:05:03,630
anyway someone needs to figure out like

107
00:05:00,180 --> 00:05:05,848
and send me hey here's the defines that

108
00:05:03,629 --> 00:05:07,469
allow it to work on clang these are what

109
00:05:05,848 --> 00:05:09,629
you should use we will switch to those

110
00:05:07,470 --> 00:05:11,010
so that people compiling with clang will

111
00:05:09,629 --> 00:05:12,959
not have to worry about that anymore

112
00:05:11,009 --> 00:05:15,959
because in theory we are now compatible

113
00:05:12,959 --> 00:05:18,620
with flying everywhere else because we

114
00:05:15,959 --> 00:05:23,310
fixed the other issues that make sense

115
00:05:18,620 --> 00:05:24,899
all right so that's it for that I'm

116
00:05:23,310 --> 00:05:26,759
going to leave that open in case we need

117
00:05:24,899 --> 00:05:29,339
it tomorrow or the next day or the next

118
00:05:26,759 --> 00:05:31,288
day or the next day and I'm going to go

119
00:05:29,339 --> 00:05:33,388
over to our to do list and since we're

120
00:05:31,288 --> 00:05:36,930
kind of coming back from a long break I

121
00:05:33,389 --> 00:05:38,490
just want to kind of figure out you know

122
00:05:36,930 --> 00:05:41,370
maybe what we should be doing here

123
00:05:38,490 --> 00:05:44,129
because we need sort of a plan of how we

124
00:05:41,370 --> 00:05:47,250
want to tie everything up I'm pretty

125
00:05:44,129 --> 00:05:50,219
certain that really mostly all we have

126
00:05:47,250 --> 00:05:51,839
to do is that Z fixes and then a couple

127
00:05:50,220 --> 00:05:54,900
things with the renderer maybe just to

128
00:05:51,839 --> 00:05:57,629
make sure that we're clean enough that

129
00:05:54,899 --> 00:05:59,129
we don't spill over any problems with

130
00:05:57,629 --> 00:06:01,848
our renderer that still exists aren't

131
00:05:59,129 --> 00:06:04,469
going to cause problems in the game code

132
00:06:01,848 --> 00:06:06,000
as we can always upgrade our render or

133
00:06:04,470 --> 00:06:10,140
later right we can always make our

134
00:06:06,000 --> 00:06:12,538
render better at any time and it's zero

135
00:06:10,139 --> 00:06:13,579
cost to us it'll just improve the look

136
00:06:12,538 --> 00:06:14,750
of the game or whatever

137
00:06:13,579 --> 00:06:18,709
like if we add lighting it'll just

138
00:06:14,750 --> 00:06:21,199
magically look better right but if we

139
00:06:18,709 --> 00:06:23,209
have some kind of an architectural flaw

140
00:06:21,199 --> 00:06:26,780
with the way that stuff is fed to the

141
00:06:23,209 --> 00:06:28,668
render which we might have right in that

142
00:06:26,779 --> 00:06:30,589
case then we run into a problem because

143
00:06:28,668 --> 00:06:33,139
then all of our game code is written to

144
00:06:30,589 --> 00:06:35,388
that rendering API and now we need to

145
00:06:33,139 --> 00:06:38,180
change it we now have to go touch all of

146
00:06:35,389 --> 00:06:42,288
our game code and sort of spend a lot of

147
00:06:38,180 --> 00:06:44,449
work you know making that happen so you

148
00:06:42,288 --> 00:06:47,568
know I don't want to leave us in a

149
00:06:44,449 --> 00:06:48,620
situation if we're I I suspect we might

150
00:06:47,569 --> 00:06:50,240
have some problems with the way we're

151
00:06:48,620 --> 00:06:51,468
feeding the renderer so we may want to

152
00:06:50,240 --> 00:06:53,060
take a little bit of a look at that as

153
00:06:51,468 --> 00:06:54,800
well but like I said we don't have to

154
00:06:53,060 --> 00:06:56,509
worry too much if our complete if if

155
00:06:54,800 --> 00:06:58,250
there's anything that we need

156
00:06:56,509 --> 00:07:00,710
additionally from the renderer going

157
00:06:58,250 --> 00:07:03,050
forwards that's actually okay because we

158
00:07:00,709 --> 00:07:04,399
don't have to get everything right at

159
00:07:03,050 --> 00:07:06,348
the outset we just want to make sure

160
00:07:04,399 --> 00:07:08,239
that we aren't having too much sort of

161
00:07:06,348 --> 00:07:10,579
leakage of a bad decisions in there

162
00:07:08,240 --> 00:07:12,139
because if we ever want to upgrade the

163
00:07:10,579 --> 00:07:14,389
renderer we don't want to have to

164
00:07:12,139 --> 00:07:17,028
rewrite all of our code that talks to it

165
00:07:14,389 --> 00:07:18,560
right and maybe that's not such a huge

166
00:07:17,028 --> 00:07:20,689
deal in this case in this particular

167
00:07:18,560 --> 00:07:22,370
game because we do have a pretty narrow

168
00:07:20,689 --> 00:07:24,079
like everything is an entity and that's

169
00:07:22,370 --> 00:07:25,939
in the path that renders things is

170
00:07:24,079 --> 00:07:28,158
pretty narrow like it's kind of just at

171
00:07:25,939 --> 00:07:30,620
the end of the entity stuff and so you

172
00:07:28,158 --> 00:07:33,439
know maybe in this case we don't really

173
00:07:30,620 --> 00:07:35,180
have to care and it won't be a big deal

174
00:07:33,439 --> 00:07:36,528
so you know it might not be a thing that

175
00:07:35,180 --> 00:07:37,939
you care that much about but we at least

176
00:07:36,528 --> 00:07:41,120
want to just look at it make sure that

177
00:07:37,939 --> 00:07:44,750
everything's fine so let's take a look

178
00:07:41,120 --> 00:07:46,490
here at what we've got right here is our

179
00:07:44,750 --> 00:07:56,389
to-do list of things that we need to

180
00:07:46,490 --> 00:07:58,218
know and I think at the moment if we

181
00:07:56,389 --> 00:08:00,829
were to look at the the the stuff on

182
00:07:58,218 --> 00:08:03,550
here I feel like this debug code stuff

183
00:08:00,829 --> 00:08:07,848
is probably at the point where we could

184
00:08:03,550 --> 00:08:09,829
you know we could probably sort of do

185
00:08:07,848 --> 00:08:11,269
some of these guys there's not a whole

186
00:08:09,829 --> 00:08:12,978
lot there we have the frame view not

187
00:08:11,269 --> 00:08:15,318
showing bad frames that's the thing that

188
00:08:12,978 --> 00:08:16,788
we want to kind of kind of fix and we

189
00:08:15,319 --> 00:08:18,439
have that problem that we're still

190
00:08:16,788 --> 00:08:20,360
running everything through the fairly

191
00:08:18,439 --> 00:08:22,278
complicated graph sort even though we

192
00:08:20,360 --> 00:08:23,870
don't really need that for debug stuff

193
00:08:22,278 --> 00:08:25,759
because it's a fairly straightforward

194
00:08:23,870 --> 00:08:28,060
sort so that's something that we might

195
00:08:25,759 --> 00:08:31,040
want to you know fix as well

196
00:08:28,060 --> 00:08:32,720
on the enemy system side of things we've

197
00:08:31,040 --> 00:08:33,860
got this to do here which is what to do

198
00:08:32,720 --> 00:08:35,418
about geographically disparate entities

199
00:08:33,860 --> 00:08:37,279
that might only partially get streamed

200
00:08:35,418 --> 00:08:41,649
into a sim region but which need to move

201
00:08:37,279 --> 00:08:41,649
together as a unit you can see why

202
00:08:42,250 --> 00:08:50,090
that's a problem essentially what's

203
00:08:47,779 --> 00:08:53,149
going on there is let's say we have that

204
00:08:50,090 --> 00:08:54,830
you know that snake creature right and

205
00:08:53,149 --> 00:08:57,559
you can see we know we made one of these

206
00:08:54,830 --> 00:09:00,710
guys right he's he's hopping around

207
00:08:57,559 --> 00:09:03,619
there that snake guy he's five segments

208
00:09:00,710 --> 00:09:06,620
long and if you think about what's going

209
00:09:03,620 --> 00:09:08,090
on there with that snake dude he gets

210
00:09:06,620 --> 00:09:10,039
streamed in his five separate entities

211
00:09:08,090 --> 00:09:13,310
which is good that's sort of what we

212
00:09:10,039 --> 00:09:16,339
wanted him to be but what that means is

213
00:09:13,309 --> 00:09:20,389
that in the case where just like part of

214
00:09:16,340 --> 00:09:22,370
the tail or something was in a region

215
00:09:20,389 --> 00:09:23,899
that didn't get streamed in right so he

216
00:09:22,370 --> 00:09:26,690
gets streamed in most him get streamed

217
00:09:23,899 --> 00:09:28,459
in but part of him doesn't you know that

218
00:09:26,690 --> 00:09:30,890
creates kind of a nasty situation

219
00:09:28,460 --> 00:09:33,019
potentially and so there was a question

220
00:09:30,889 --> 00:09:36,470
of whether or not we wanted to try and

221
00:09:33,019 --> 00:09:37,819
do something with the env system to

222
00:09:36,470 --> 00:09:40,399
prevent that sort of thing from

223
00:09:37,820 --> 00:09:44,450
happening meaning to prevent the case

224
00:09:40,399 --> 00:09:51,199
where we sort of have entities which you

225
00:09:44,450 --> 00:09:53,420
know are are are left in that sort of

226
00:09:51,200 --> 00:09:56,060
limbo right where they could get split

227
00:09:53,419 --> 00:09:57,709
and you know one thing that I think

228
00:09:56,059 --> 00:09:59,239
would be interesting to do there because

229
00:09:57,710 --> 00:10:01,519
I think we actually maybe have some

230
00:09:59,240 --> 00:10:04,370
options that don't involve anything

231
00:10:01,519 --> 00:10:05,990
particularly complicated because we

232
00:10:04,370 --> 00:10:07,549
could pretty easily bound the size of

233
00:10:05,990 --> 00:10:09,019
these guys you know we can say that

234
00:10:07,549 --> 00:10:11,659
there can't be something that's like 30

235
00:10:09,019 --> 00:10:14,419
long probably right I don't know maybe

236
00:10:11,659 --> 00:10:15,799
we don't want to say that but you can

237
00:10:14,419 --> 00:10:17,990
kind of imagine what the problem is here

238
00:10:15,799 --> 00:10:21,379
with these sorts of things where you

239
00:10:17,990 --> 00:10:23,149
know if we if we stream part of it in

240
00:10:21,379 --> 00:10:25,789
and not the other part of it in we could

241
00:10:23,149 --> 00:10:28,879
imagine solving that by just saying okay

242
00:10:25,789 --> 00:10:31,189
instead of streaming in just the stuff

243
00:10:28,879 --> 00:10:33,350
that we're going to consider active we

244
00:10:31,190 --> 00:10:35,780
could stream in again like use that sort

245
00:10:33,350 --> 00:10:38,899
of apron concept stream in a little bit

246
00:10:35,779 --> 00:10:41,370
past that but don't consider any

247
00:10:38,899 --> 00:10:43,769
entities in the region

248
00:10:41,370 --> 00:10:50,519
so don't consider entities in the apron

249
00:10:43,769 --> 00:10:53,399
to be actually active right and then

250
00:10:50,519 --> 00:10:56,250
what we could do is just make it so that

251
00:10:53,399 --> 00:10:58,829
if an entity is part of a brain that is

252
00:10:56,250 --> 00:11:02,339
active but it's in the inactive region

253
00:10:58,830 --> 00:11:07,230
then it becomes active right so we could

254
00:11:02,339 --> 00:11:09,390
make a way essentially to enforce or not

255
00:11:07,230 --> 00:11:11,190
really enforce but make it so that you'd

256
00:11:09,389 --> 00:11:14,129
never get entities that would get split

257
00:11:11,190 --> 00:11:16,500
up like that because of the placement of

258
00:11:14,129 --> 00:11:20,429
the streaming region I think we could do

259
00:11:16,500 --> 00:11:22,259
something like that I just don't know

260
00:11:20,429 --> 00:11:24,059
whether that creates more problems than

261
00:11:22,259 --> 00:11:26,960
it solves or whether it's really worth

262
00:11:24,059 --> 00:11:31,528
even caring about we're worrying about I

263
00:11:26,960 --> 00:11:33,360
really don't know I have no idea and if

264
00:11:31,528 --> 00:11:35,490
you assume that things are generally

265
00:11:33,360 --> 00:11:36,810
confined two rooms then for the most

266
00:11:35,490 --> 00:11:38,879
part this would only happen when

267
00:11:36,809 --> 00:11:41,278
something was crossing a room boundary

268
00:11:38,879 --> 00:11:43,110
right it would only happen when like one

269
00:11:41,278 --> 00:11:45,708
of these guys is like going out a door

270
00:11:43,110 --> 00:11:49,680
like out one door and into another room

271
00:11:45,708 --> 00:11:52,169
where it can even get messed up in that

272
00:11:49,679 --> 00:11:53,969
way to begin with and so again I really

273
00:11:52,169 --> 00:11:56,069
just don't know about that but you could

274
00:11:53,970 --> 00:12:02,778
understand like what my concern is with

275
00:11:56,070 --> 00:12:02,778
it right um hopefully all right

276
00:12:07,350 --> 00:12:13,720
so I don't know I really just don't know

277
00:12:10,299 --> 00:12:16,389
what to do about that I'm not sure I

278
00:12:13,720 --> 00:12:18,759
don't have a solid idea for it what it

279
00:12:16,389 --> 00:12:21,279
would look like is in here you know when

280
00:12:18,759 --> 00:12:24,189
we do this this thing this would all be

281
00:12:21,279 --> 00:12:25,839
exactly the same right so we'd have the

282
00:12:24,190 --> 00:12:28,900
this this loop would be exact the same

283
00:12:25,840 --> 00:12:32,200
maybe we expand this a little maybe we

284
00:12:28,899 --> 00:12:34,389
don't i'm not sure but what we would do

285
00:12:32,200 --> 00:12:37,210
here is say okay when these things

286
00:12:34,389 --> 00:12:43,029
stream in we would have an ocean per

287
00:12:37,210 --> 00:12:48,250
entity right so in in the actual entity

288
00:12:43,029 --> 00:12:50,889
that gets streamed in in here you know

289
00:12:48,250 --> 00:12:54,730
we already have flags and what we would

290
00:12:50,889 --> 00:12:58,389
have is a flag that that said whether or

291
00:12:54,730 --> 00:13:00,430
not this was actually active right so

292
00:12:58,389 --> 00:13:04,059
we'd have an entity flag active and by

293
00:13:00,429 --> 00:13:06,819
default anything that was inside the

294
00:13:04,059 --> 00:13:09,309
region that we are going to animate is

295
00:13:06,820 --> 00:13:11,020
considered active and anything outside

296
00:13:09,309 --> 00:13:13,299
that region is considered inactive and

297
00:13:11,019 --> 00:13:15,429
would not get animated and then what we

298
00:13:13,299 --> 00:13:19,149
would do is when we look at a particular

299
00:13:15,429 --> 00:13:21,429
brain right before we start actually

300
00:13:19,149 --> 00:13:24,519
processing the scene we loop through all

301
00:13:21,429 --> 00:13:26,769
the people in that brain and if any of

302
00:13:24,519 --> 00:13:29,259
them are active we mark all of them as

303
00:13:26,769 --> 00:13:33,838
active so it will suck in people from

304
00:13:29,259 --> 00:13:36,009
the apron region and make them active

305
00:13:33,839 --> 00:13:38,890
again I don't really know if this is a

306
00:13:36,009 --> 00:13:42,370
good idea or not but hey it seems like

307
00:13:38,889 --> 00:13:45,819
something worth trying uh so I'm going

308
00:13:42,370 --> 00:13:48,549
to go ahead and try it right because why

309
00:13:45,820 --> 00:13:54,010
not so let's say we add an env flag here

310
00:13:48,549 --> 00:13:55,709
called active right and inside the code

311
00:13:54,009 --> 00:13:58,750
when we're going through these chunks

312
00:13:55,710 --> 00:14:03,100
all I would really need to know is sort

313
00:13:58,750 --> 00:14:05,470
of that again that that updateable bound

314
00:14:03,100 --> 00:14:08,350
and the update safety margin kind of

315
00:14:05,470 --> 00:14:11,889
thing right we sort of already had this

316
00:14:08,350 --> 00:14:15,459
concept I think to a certain extent in

317
00:14:11,889 --> 00:14:19,740
fact weren't we already you know we had

318
00:14:15,458 --> 00:14:19,739
this thing for updatable bounds right

319
00:14:20,789 --> 00:14:26,439
we had updateable bounds which were not

320
00:14:23,169 --> 00:14:29,319
the same as bounds and I don't really

321
00:14:26,440 --> 00:14:31,390
know oh so we actually have an updatable

322
00:14:29,320 --> 00:14:33,730
we already have this concept I don't

323
00:14:31,389 --> 00:14:38,110
know why it's not a flag I don't know

324
00:14:33,730 --> 00:14:43,930
why it's it's that way right that's a

325
00:14:38,110 --> 00:14:50,320
very good question like why that isn't a

326
00:14:43,929 --> 00:14:56,609
flag i do not know i'm going to try

327
00:14:50,320 --> 00:14:56,610
changing that so i'm going to say ok if

328
00:14:58,350 --> 00:15:02,350
entity overlaps rectangle in the

329
00:15:00,610 --> 00:15:11,470
updateable bounds i'm going to say des

330
00:15:02,350 --> 00:15:14,560
flags or equals this flag that says

331
00:15:11,470 --> 00:15:17,800
where the thing is active or not where

332
00:15:14,559 --> 00:15:21,069
did that go there it is like active we

333
00:15:17,799 --> 00:15:23,669
are and then I'm going to take a look at

334
00:15:21,070 --> 00:15:27,670
this stuff here ok so we were using that

335
00:15:23,669 --> 00:15:29,500
inside update and render entities so I

336
00:15:27,669 --> 00:15:30,819
guess we are already doing what we need

337
00:15:29,500 --> 00:15:32,590
to do here so we've actually already

338
00:15:30,820 --> 00:15:34,690
written this because of the collision

339
00:15:32,590 --> 00:15:36,519
stuff the way we were doing it so that's

340
00:15:34,690 --> 00:15:39,220
kind of nice it means I don't really

341
00:15:36,519 --> 00:15:44,949
have to worry about implementing that

342
00:15:39,220 --> 00:15:46,930
new newly right and off we go so we

343
00:15:44,950 --> 00:15:48,879
already have it so that nothing happens

344
00:15:46,929 --> 00:15:51,459
if this thing isn't an entity flag

345
00:15:48,879 --> 00:15:53,500
active so that's great so now all we

346
00:15:51,460 --> 00:15:54,910
really have to do is inside handmade

347
00:15:53,500 --> 00:15:58,629
brain well I guess it's not really

348
00:15:54,909 --> 00:16:02,019
inside handmade brain but we want a sort

349
00:15:58,629 --> 00:16:04,509
of pre pass on the brain execution stuff

350
00:16:02,019 --> 00:16:07,449
where when we go through these brains

351
00:16:04,509 --> 00:16:09,639
the first thing we do is Mark anyone who

352
00:16:07,450 --> 00:16:15,270
mate who is part of an active brain as

353
00:16:09,639 --> 00:16:24,069
being active themselves right so I

354
00:16:15,269 --> 00:16:26,500
believe in world mode here we are in

355
00:16:24,070 --> 00:16:30,150
execute brains so what I might do is

356
00:16:26,500 --> 00:16:32,590
like okay let's do a pre pass after this

357
00:16:30,149 --> 00:16:34,689
I'm sorry before this

358
00:16:32,590 --> 00:16:41,830
let's do a little pre pass where we do

359
00:16:34,690 --> 00:16:43,840
like a mark brain active something like

360
00:16:41,830 --> 00:16:47,700
that mark brain actives something like

361
00:16:43,840 --> 00:16:50,320
this and that's just going to be a thing

362
00:16:47,700 --> 00:16:55,509
which goes through all of the entities

363
00:16:50,320 --> 00:17:00,610
that are in the brain and does that

364
00:16:55,509 --> 00:17:02,889
marking okay so the way this would work

365
00:17:00,610 --> 00:17:05,950
I think we would want it to be sort of

366
00:17:02,889 --> 00:17:09,220
like the snake right I'm kind of see

367
00:17:05,950 --> 00:17:12,580
here I'm assuming we've got a segment

368
00:17:09,220 --> 00:17:15,160
count on these brains not segments count

369
00:17:12,579 --> 00:17:17,710
sorry a member account but let me make

370
00:17:15,160 --> 00:17:21,100
sure that's true so we have a brain type

371
00:17:17,710 --> 00:17:25,660
is type where his brain brain there is

372
00:17:21,099 --> 00:17:27,279
brain so there's our entity array and so

373
00:17:25,660 --> 00:17:29,110
we can just step through this entity

374
00:17:27,279 --> 00:17:33,549
array for however many that there are

375
00:17:29,109 --> 00:17:36,669
and i believe the maximum number that

376
00:17:33,549 --> 00:17:42,099
there are should be known to us right I

377
00:17:36,670 --> 00:17:43,920
feel like let's see I guess we don't

378
00:17:42,099 --> 00:17:47,099
really know how many there actually are

379
00:17:43,920 --> 00:17:47,100
do we

380
00:17:51,680 --> 00:17:55,410
which is kind of unfortunate because we

381
00:17:53,970 --> 00:18:00,059
want to sort of loop through those and

382
00:17:55,410 --> 00:18:01,529
check well we must know because we can

383
00:18:00,059 --> 00:18:03,299
at least assert that we're not writing

384
00:18:01,529 --> 00:18:15,089
out of bounds so let's go ahead and

385
00:18:03,299 --> 00:18:17,099
check inside some region here we go so

386
00:18:15,089 --> 00:18:18,419
here is our sort of hacky code for doing

387
00:18:17,099 --> 00:18:20,159
it you can see that we had filled with

388
00:18:18,420 --> 00:18:21,600
in fact I remember this discussion where

389
00:18:20,160 --> 00:18:25,800
us like I really wish this worked better

390
00:18:21,599 --> 00:18:27,990
right uh in in languages like C like I

391
00:18:25,799 --> 00:18:29,430
just want to say hey however many the

392
00:18:27,990 --> 00:18:32,509
most number of enemies there are that's

393
00:18:29,430 --> 00:18:35,400
how many I want to be treating in here

394
00:18:32,509 --> 00:18:39,379
but yes I guess I guess the answer is

395
00:18:35,400 --> 00:18:43,500
this sort of situation is unfortunately

396
00:18:39,380 --> 00:18:45,680
all we can really do so let's maybe at

397
00:18:43,500 --> 00:18:48,690
least systema eyes that a little bit

398
00:18:45,680 --> 00:18:51,870
let's go ahead and try to make that

399
00:18:48,690 --> 00:18:56,580
something that's that's not so that's

400
00:18:51,869 --> 00:18:59,009
not so specific to that circumstance

401
00:18:56,579 --> 00:19:03,839
something where we can ask how many of

402
00:18:59,009 --> 00:19:04,890
these there actually are you know so

403
00:19:03,839 --> 00:19:08,009
what I'm going to do here is we're going

404
00:19:04,890 --> 00:19:10,560
to say let's make a little in line or

405
00:19:08,009 --> 00:19:16,769
even a pound to fine let's say which is

406
00:19:10,559 --> 00:19:20,609
like brain max uh you know end of the

407
00:19:16,769 --> 00:19:24,750
account or something like that I kind of

408
00:19:20,609 --> 00:19:27,479
want to be in the other window here so I

409
00:19:24,750 --> 00:19:29,910
want to compute for brain Mack Sennett

410
00:19:27,480 --> 00:19:31,579
account I want to compute how many of

411
00:19:29,910 --> 00:19:34,560
this array they're actually could be

412
00:19:31,579 --> 00:19:40,559
right and so you can see how I was doing

413
00:19:34,559 --> 00:19:43,079
that Kier I took essentially this sort

414
00:19:40,559 --> 00:19:44,519
of rather odd way of doing things but

415
00:19:43,079 --> 00:19:50,789
it's the only way I could really figure

416
00:19:44,519 --> 00:19:53,730
out how if I was to take a brain and go

417
00:19:50,789 --> 00:19:57,960
forward the size of the brain and then

418
00:19:53,730 --> 00:20:00,210
go back one NV pointer right that was

419
00:19:57,960 --> 00:20:01,529
going to be the maximum one that there

420
00:20:00,210 --> 00:20:03,579
was right that was going to be the

421
00:20:01,529 --> 00:20:09,730
furthest out that there was

422
00:20:03,579 --> 00:20:13,329
so really I could just not do that right

423
00:20:09,730 --> 00:20:15,730
and say well there's size of brain and

424
00:20:13,329 --> 00:20:18,460
size of brain is the whole structure

425
00:20:15,730 --> 00:20:20,589
size right and then what I could do it

426
00:20:18,460 --> 00:20:24,490
just say well I know that it's the race

427
00:20:20,589 --> 00:20:32,109
starts here right I know that that that

428
00:20:24,490 --> 00:20:33,700
array starts here and you know I'll be

429
00:20:32,109 --> 00:20:36,609
honest it's a little bit weird that it's

430
00:20:33,700 --> 00:20:38,920
oh no that's correct right that single

431
00:20:36,609 --> 00:20:43,079
pointer so I know that it starts here so

432
00:20:38,920 --> 00:20:46,750
if i subtract the offset of that thing

433
00:20:43,079 --> 00:20:49,829
and I don't know if we I assume we did

434
00:20:46,750 --> 00:20:49,829
off set up at some point

435
00:20:56,230 --> 00:21:08,589
maybe not I'll sit no I guess we didn't

436
00:21:03,390 --> 00:21:13,299
do be really not have one of those I'll

437
00:21:08,589 --> 00:21:19,750
sit from struct huh well I basically

438
00:21:13,298 --> 00:21:21,519
want one of these so we might be able to

439
00:21:19,750 --> 00:21:24,849
just use this one I don't know if it's

440
00:21:21,519 --> 00:21:27,099
baked into this in in anymore or not or

441
00:21:24,849 --> 00:21:30,159
if it's if it's something that I have to

442
00:21:27,099 --> 00:21:31,869
include this for I think I may have to

443
00:21:30,160 --> 00:21:33,009
do a pound include for it in which case

444
00:21:31,869 --> 00:21:35,229
I'll just do it myself so I don't have

445
00:21:33,009 --> 00:21:36,789
to use the pound include but basically

446
00:21:35,230 --> 00:21:41,019
what i want is just the offset of a

447
00:21:36,789 --> 00:21:45,099
member in a struct right so all i really

448
00:21:41,019 --> 00:21:49,869
want to do is say hey the offset of this

449
00:21:45,099 --> 00:21:52,269
member inside the brain i want to i want

450
00:21:49,869 --> 00:21:54,308
to take that and i want to subtract that

451
00:21:52,269 --> 00:21:56,619
away because i don't want to count these

452
00:21:54,308 --> 00:22:00,308
guys so i just want to see how big the

453
00:21:56,619 --> 00:22:03,609
brain is in that sense right so once i

454
00:22:00,308 --> 00:22:06,308
have that i know the total size of this

455
00:22:03,609 --> 00:22:08,229
union part and since i know that's all

456
00:22:06,308 --> 00:22:10,629
entity stars all i have to do to figure

457
00:22:08,230 --> 00:22:15,220
out how many of them there are is

458
00:22:10,630 --> 00:22:17,049
divided by that length right so that

459
00:22:15,220 --> 00:22:20,319
should give me the maximum entity count

460
00:22:17,048 --> 00:22:21,789
of one of these things now if I then go

461
00:22:20,319 --> 00:22:23,529
here and I think like I said I'm going

462
00:22:21,789 --> 00:22:25,298
to have to write that off set of myself

463
00:22:23,529 --> 00:22:28,269
I would suspect but who knows we'll find

464
00:22:25,298 --> 00:22:31,269
out so if i was going to do that what i

465
00:22:28,269 --> 00:22:33,308
could now once i have that i can then go

466
00:22:31,269 --> 00:22:35,379
ahead and say all right there's an

467
00:22:33,308 --> 00:22:37,899
editing index that goes from zero to the

468
00:22:35,380 --> 00:22:44,610
maximum number of enemies if there can

469
00:22:37,900 --> 00:22:44,610
be in the brain and let me go ahead and

470
00:22:45,150 --> 00:22:49,710
give myself a brain here to work with

471
00:22:51,009 --> 00:22:56,980
and then so inside that brain I'm going

472
00:22:54,069 --> 00:22:59,950
to do two loops through the first loop

473
00:22:56,980 --> 00:23:03,610
through i'm going to say that whatever

474
00:22:59,950 --> 00:23:08,170
the entity star i'm not sure exactly how

475
00:23:03,609 --> 00:23:17,169
to access this here I guess I would just

476
00:23:08,170 --> 00:23:25,560
say yeah I guess I would just say gets

477
00:23:17,170 --> 00:23:25,560
lot do you have one of these

478
00:23:28,789 --> 00:23:35,059
yeah here it is Oh in fact there is the

479
00:23:31,460 --> 00:23:38,059
code for the offset of right so we

480
00:23:35,059 --> 00:23:45,169
actually did the offset of stuff but we

481
00:23:38,059 --> 00:23:49,309
just didn't do it we just didn't do it

482
00:23:45,170 --> 00:23:53,560
as a macro we just did it directly which

483
00:23:49,309 --> 00:23:57,079
is fine anyway so in brain slaw floor

484
00:23:53,559 --> 00:24:00,379
let's see here we're calling this guy

485
00:23:57,079 --> 00:24:02,689
with the pack value which is the

486
00:24:00,380 --> 00:24:05,840
distance off so basically we're figuring

487
00:24:02,690 --> 00:24:07,580
out what the index is there and how do

488
00:24:05,839 --> 00:24:09,349
we actually get that brain slap back I

489
00:24:07,579 --> 00:24:11,299
guess we haven't had to do that we

490
00:24:09,349 --> 00:24:14,629
haven't had to iterate through these at

491
00:24:11,299 --> 00:24:16,399
all it looks like right but what I want

492
00:24:14,630 --> 00:24:21,740
here is I essentially want to do like

493
00:24:16,400 --> 00:24:24,080
get you know nidhi ghouls get entity in

494
00:24:21,740 --> 00:24:26,059
slot and I want to pass the brain and I

495
00:24:24,079 --> 00:24:40,970
want to pass I guess this is technically

496
00:24:26,059 --> 00:24:43,940
the slot index right so I want to be

497
00:24:40,970 --> 00:24:47,269
able to get a you know the entity in in

498
00:24:43,940 --> 00:24:49,309
the slot and then I want to say I want

499
00:24:47,269 --> 00:24:51,980
to have a be 32 here which is like is

500
00:24:49,309 --> 00:24:57,019
active which was false and then in here

501
00:24:51,980 --> 00:25:04,160
I want to say like okay if entity flags

502
00:24:57,019 --> 00:25:09,109
and Eddie like active then I'm going to

503
00:25:04,160 --> 00:25:10,430
do effective equals true right and it's

504
00:25:09,109 --> 00:25:12,979
another thing I could do here which I

505
00:25:10,430 --> 00:25:14,690
might just do just in case for future

506
00:25:12,980 --> 00:25:18,110
proof pneus because it's actually pretty

507
00:25:14,690 --> 00:25:22,640
easy maybe I'll do like combine flags or

508
00:25:18,109 --> 00:25:23,929
brain flags and then what I could do it

509
00:25:22,640 --> 00:25:26,180
just say okay for each of these guys

510
00:25:23,930 --> 00:25:27,950
like brain flags for equals entity flags

511
00:25:26,180 --> 00:25:30,140
so this will just accumulate all the

512
00:25:27,950 --> 00:25:34,580
flags then at the end I just say all

513
00:25:30,140 --> 00:25:37,730
right if brain flags and entity flag

514
00:25:34,579 --> 00:25:39,409
active that means somebody at least one

515
00:25:37,730 --> 00:25:41,750
person had to have been active in order

516
00:25:39,410 --> 00:25:42,350
for that flag to get set so then I would

517
00:25:41,750 --> 00:25:47,390
come back through

518
00:25:42,349 --> 00:25:49,189
here and say all right now take the

519
00:25:47,390 --> 00:25:52,788
entity flags and Orion entity flag

520
00:25:49,190 --> 00:25:55,070
active right because now everybody in

521
00:25:52,788 --> 00:25:59,990
this brain it gets magically pulled into

522
00:25:55,069 --> 00:26:02,538
the active region right hopefully that

523
00:25:59,990 --> 00:26:04,490
makes some sense but we need to have

524
00:26:02,538 --> 00:26:06,410
some way of doing that get entity and

525
00:26:04,490 --> 00:26:09,349
slot because we don't have that right

526
00:26:06,410 --> 00:26:11,179
now and so that's going to be something

527
00:26:09,349 --> 00:26:14,869
we have to go implement now in this case

528
00:26:11,179 --> 00:26:18,009
here we don't have to do anything let me

529
00:26:14,869 --> 00:26:23,019
go back into the brain and do that Max

530
00:26:18,009 --> 00:26:29,058
entity count thing so here is max brain

531
00:26:23,019 --> 00:26:30,889
slot count and yeah that I believe is

532
00:26:29,058 --> 00:26:32,960
still is going to be correct again this

533
00:26:30,890 --> 00:26:36,020
offset of I'm going to go ahead and

534
00:26:32,960 --> 00:26:37,308
define my own offset of for now because

535
00:26:36,019 --> 00:26:42,099
we're using it in two places already

536
00:26:37,308 --> 00:26:42,099
here is the type here's the member right

537
00:26:46,960 --> 00:26:57,140
and it's really just this so the yeah

538
00:26:54,259 --> 00:26:58,970
the address of the sky is because I

539
00:26:57,140 --> 00:27:05,840
think all we really need for the offset

540
00:26:58,970 --> 00:27:08,440
of I think that should do it and let me

541
00:27:05,839 --> 00:27:08,439
see if that works

542
00:27:12,369 --> 00:27:21,500
let me just convert that so now all we

543
00:27:19,789 --> 00:27:23,029
really need to do here and you know I'm

544
00:27:21,500 --> 00:27:26,150
going to put that in a useful place as

545
00:27:23,029 --> 00:27:28,700
well and put that in here because this

546
00:27:26,150 --> 00:27:31,970
is something I would generally want I

547
00:27:28,700 --> 00:27:37,940
don't know why we didn't have it but we

548
00:27:31,970 --> 00:27:44,059
didn't so now we do and Kennedy and slot

549
00:27:37,940 --> 00:27:45,620
we need here in the brain so in order to

550
00:27:44,059 --> 00:27:50,359
get an entity from a slot we need

551
00:27:45,619 --> 00:27:52,399
something that looks like this where we

552
00:27:50,359 --> 00:27:56,419
pass the brain and we pass the slot

553
00:27:52,400 --> 00:27:59,060
index we're going to use right and then

554
00:27:56,420 --> 00:28:01,220
what we need to do is say okay we know

555
00:27:59,059 --> 00:28:03,259
we've got an env star we should probably

556
00:28:01,220 --> 00:28:04,610
do an assertion here the slot index is

557
00:28:03,259 --> 00:28:06,890
less than the max brain slot count

558
00:28:04,609 --> 00:28:09,829
because you can't fetch one pass that

559
00:28:06,890 --> 00:28:12,200
right but then we know the result is

560
00:28:09,829 --> 00:28:14,569
going to be whatever the array pointer

561
00:28:12,200 --> 00:28:17,240
is here right we should be able to get a

562
00:28:14,569 --> 00:28:21,200
pointer to that pointer right so now

563
00:28:17,240 --> 00:28:22,940
we're pointing at this guy then we just

564
00:28:21,200 --> 00:28:27,410
want to go forward however many slots

565
00:28:22,940 --> 00:28:29,240
we're talking about here and since this

566
00:28:27,410 --> 00:28:31,070
is a pointer to a pointer we could just

567
00:28:29,240 --> 00:28:33,079
say access this is like an array and

568
00:28:31,069 --> 00:28:36,079
give us out the actual pointer at the

569
00:28:33,079 --> 00:28:38,449
slot index right then we return the

570
00:28:36,079 --> 00:28:41,329
result and now we've gotten back that

571
00:28:38,450 --> 00:28:43,069
guy so we're just using this as a marker

572
00:28:41,329 --> 00:28:46,389
to allow us to index into all of these

573
00:28:43,069 --> 00:28:57,409
guys who happen to be in the union and

574
00:28:46,390 --> 00:29:00,860
go from there okay now in theory oh duh

575
00:28:57,410 --> 00:29:02,269
we've got one more thing to do when we

576
00:29:00,859 --> 00:29:09,559
get this entity out we don't know if

577
00:29:02,269 --> 00:29:12,259
there's actually there right those slots

578
00:29:09,559 --> 00:29:13,309
could be empty so we definitely have to

579
00:29:12,259 --> 00:29:14,900
check to see whether they're know

580
00:29:13,309 --> 00:29:18,519
because we only want to edit if they're

581
00:29:14,900 --> 00:29:18,519
they're not all right

582
00:29:19,480 --> 00:29:23,480
so now we would need to actually do some

583
00:29:21,798 --> 00:29:24,710
testing on this or something we're not

584
00:29:23,480 --> 00:29:27,440
at the point yet where any of that makes

585
00:29:24,710 --> 00:29:31,429
sense but we don't really know if this

586
00:29:27,440 --> 00:29:34,070
worked at all we're strictly putting it

587
00:29:31,429 --> 00:29:35,690
in there as a way to mitigate this

588
00:29:34,069 --> 00:29:38,329
problem so that now it's in their

589
00:29:35,690 --> 00:29:39,950
architectural e so we're aware of it as

590
00:29:38,329 --> 00:29:42,230
we move forwards meaning we know we have

591
00:29:39,950 --> 00:29:49,788
to kind of maintain that concept and

592
00:29:42,230 --> 00:29:51,950
keep it going all right so in theory

593
00:29:49,788 --> 00:29:53,808
that's okay I don't really know there's

594
00:29:51,950 --> 00:29:55,759
issues that obviously one of the issues

595
00:29:53,808 --> 00:29:57,619
is that if those things are pulled into

596
00:29:55,759 --> 00:29:59,450
the brain well the whole point of that

597
00:29:57,619 --> 00:30:01,308
apron where things weren't active is

598
00:29:59,450 --> 00:30:03,048
that we don't know if they can move to

599
00:30:01,308 --> 00:30:04,428
certain squares because those squares

600
00:30:03,048 --> 00:30:06,259
might not be there or I might not have

601
00:30:04,429 --> 00:30:07,850
their blockers in them what I will say

602
00:30:06,259 --> 00:30:09,440
is I think some of that has been

603
00:30:07,849 --> 00:30:10,969
mitigated now the reason some of that

604
00:30:09,440 --> 00:30:13,610
has been mitigated is now that you move

605
00:30:10,970 --> 00:30:15,169
to specific squares if a square hasn't

606
00:30:13,609 --> 00:30:17,509
been streamed in you can't move to it

607
00:30:15,169 --> 00:30:18,679
anyway so at that point you're not going

608
00:30:17,509 --> 00:30:20,480
to do something like move to somewhere

609
00:30:18,679 --> 00:30:22,730
that you couldn't have moved because it

610
00:30:20,480 --> 00:30:24,860
wouldn't have been there right so I

611
00:30:22,730 --> 00:30:26,690
think that's probably okay i'm at least

612
00:30:24,859 --> 00:30:32,599
a little happier about it so that's all

613
00:30:26,690 --> 00:30:35,360
right okay so let's talk about some

614
00:30:32,599 --> 00:30:36,829
other parts of this here what do we want

615
00:30:35,359 --> 00:30:38,449
to do here I don't know that I'm in the

616
00:30:36,829 --> 00:30:42,519
mood to do anything with the debug code

617
00:30:38,450 --> 00:30:42,519
at the moment I'm going to demote that

618
00:30:43,750 --> 00:30:52,220
to some time when we feel more

619
00:30:46,519 --> 00:30:55,450
interested in it it's not it's just not

620
00:30:52,220 --> 00:30:55,450
really my jam at the moment

621
00:30:57,009 --> 00:31:04,779
and yeah fixed clicking bug at end of

622
00:31:02,680 --> 00:31:06,340
samples again these these are things

623
00:31:04,779 --> 00:31:13,480
that I'm not sure we really need to be

624
00:31:06,339 --> 00:31:14,769
doing at the moment and maybe we do

625
00:31:13,480 --> 00:31:16,630
these at some point when we're feeling

626
00:31:14,769 --> 00:31:17,950
in the mood to do some clean ups and

627
00:31:16,630 --> 00:31:19,750
code cleanup we can look at them because

628
00:31:17,950 --> 00:31:22,569
they're not really architectural like

629
00:31:19,750 --> 00:31:24,640
the clicking at the end of samples is a

630
00:31:22,569 --> 00:31:26,649
totally random bug that we can just fix

631
00:31:24,640 --> 00:31:29,110
at any time doesn't affect anything else

632
00:31:26,650 --> 00:31:34,690
in the in the program at all it's really

633
00:31:29,109 --> 00:31:36,579
just not important so yeah so I think

634
00:31:34,690 --> 00:31:42,279
mostly i'm going to move some of these

635
00:31:36,579 --> 00:31:44,889
up here uh I don't know multiple sim

636
00:31:42,279 --> 00:31:48,460
regions per frame and per entity

637
00:31:44,890 --> 00:31:53,800
clocking that is definitely a different

638
00:31:48,460 --> 00:31:55,480
thing and so is AI pathfinding right AI

639
00:31:53,799 --> 00:31:57,190
pathfinding is definitely something that

640
00:31:55,480 --> 00:31:59,980
we don't really know how we would do at

641
00:31:57,190 --> 00:32:01,630
the moment I mean we know how we how we

642
00:31:59,980 --> 00:32:05,740
know what we would probably do for

643
00:32:01,630 --> 00:32:08,260
pathfinding on a single screen but we

644
00:32:05,740 --> 00:32:10,170
don't have a lot of ideas about how we

645
00:32:08,259 --> 00:32:14,859
would do path finding more in the large

646
00:32:10,170 --> 00:32:17,019
what I'm assuming is I think probably

647
00:32:14,859 --> 00:32:19,329
what we would do is maintain a single

648
00:32:17,019 --> 00:32:21,220
path finding grid of some kind of single

649
00:32:19,329 --> 00:32:29,230
path finding network for larger scale

650
00:32:21,220 --> 00:32:30,610
path finding that people just use and so

651
00:32:29,230 --> 00:32:32,860
I don't think we will do large-scale

652
00:32:30,609 --> 00:32:34,679
searches on for individual entities I

653
00:32:32,859 --> 00:32:37,419
don't think that would be necessary I

654
00:32:34,680 --> 00:32:42,130
think we could just use the same search

655
00:32:37,420 --> 00:32:43,810
grid in those cases so I think we can

656
00:32:42,130 --> 00:32:46,090
probably just run those paths finds as

657
00:32:43,809 --> 00:32:48,819
they need to be run so i guess i'm not

658
00:32:46,089 --> 00:32:50,230
too worried about that AI storage I

659
00:32:48,819 --> 00:32:52,359
think we'll just be stored in the

660
00:32:50,230 --> 00:32:54,279
entities so i think i'm actually not

661
00:32:52,359 --> 00:32:56,559
particularly concerned about this so i

662
00:32:54,279 --> 00:32:58,990
think this is not i think the brains are

663
00:32:56,559 --> 00:33:01,029
what i wanted and i don't know that i

664
00:32:58,990 --> 00:33:01,870
need any of this stuff i don't think

665
00:33:01,029 --> 00:33:05,799
there's really anything in particular

666
00:33:01,869 --> 00:33:10,289
going on there it does however i think

667
00:33:05,799 --> 00:33:12,720
when we do world generation uh where is

668
00:33:10,289 --> 00:33:21,899
that rudimentary well Jen I'm going to

669
00:33:12,720 --> 00:33:24,120
put that in here because when we

670
00:33:21,900 --> 00:33:25,860
generate the world I think that's the

671
00:33:24,119 --> 00:33:29,459
part where we would probably need some

672
00:33:25,859 --> 00:33:30,779
of that pathfinding to occur right so

673
00:33:29,460 --> 00:33:40,019
entities could kind of find their way

674
00:33:30,779 --> 00:33:41,009
around so when we generate it we're

675
00:33:40,019 --> 00:33:44,670
going to want to keep like a

676
00:33:41,009 --> 00:33:46,289
connectivity thing I think you know

677
00:33:44,670 --> 00:33:50,190
we're going to need something where we

678
00:33:46,289 --> 00:33:52,019
can kind of go okay you know this is how

679
00:33:50,190 --> 00:33:53,580
we created the world so we have like its

680
00:33:52,019 --> 00:33:55,619
backbone and we could do pathfinding on

681
00:33:53,579 --> 00:33:57,000
the backbone and if there's things like

682
00:33:55,619 --> 00:33:59,129
doors or stuff they're kind of

683
00:33:57,000 --> 00:34:00,240
semantically in there or whatever we

684
00:33:59,130 --> 00:34:01,350
need we're going to need something like

685
00:34:00,240 --> 00:34:04,730
that because there's no way to do

686
00:34:01,349 --> 00:34:07,859
large-scale path fighting I don't think

687
00:34:04,730 --> 00:34:09,510
for the sizes that we kind of allow the

688
00:34:07,859 --> 00:34:11,190
world to be like we don't really have

689
00:34:09,510 --> 00:34:13,290
any practical limits for the most part

690
00:34:11,190 --> 00:34:16,289
on how big world's could be in handmade

691
00:34:13,289 --> 00:34:17,668
hero and so I don't really want to worry

692
00:34:16,289 --> 00:34:19,320
about if someone wants to make a really

693
00:34:17,668 --> 00:34:21,179
giant world and handmade hero I don't

694
00:34:19,320 --> 00:34:22,470
want them to have to do like I don't

695
00:34:21,179 --> 00:34:24,090
want the pathfinding to actually be

696
00:34:22,469 --> 00:34:25,709
trying to deal with that because it

697
00:34:24,090 --> 00:34:27,390
would just roll over and die so I think

698
00:34:25,710 --> 00:34:28,860
it needs to have kind of more of an

699
00:34:27,389 --> 00:34:32,519
understanding of what's going on there

700
00:34:28,860 --> 00:34:35,250
at a couple levels of detail alright so

701
00:34:32,519 --> 00:34:39,630
let's see for architecture exploration

702
00:34:35,250 --> 00:34:41,010
here I'm going to kind of get start

703
00:34:39,630 --> 00:34:44,669
working on this to do list a little more

704
00:34:41,010 --> 00:34:48,179
seriously so I think Z is probably the

705
00:34:44,668 --> 00:34:50,039
most logical thing to do probably next

706
00:34:48,179 --> 00:34:52,349
that was sort of what we had worked on a

707
00:34:50,039 --> 00:34:54,210
bunch and we haven't quite still

708
00:34:52,349 --> 00:34:56,730
finished it so I think maybe that's what

709
00:34:54,210 --> 00:34:59,340
we should be working on next rendering

710
00:34:56,730 --> 00:35:00,809
wise i feel like the 18,000 draw a

711
00:34:59,340 --> 00:35:03,200
rectangle calls we knew what that was

712
00:35:00,809 --> 00:35:07,650
that was all of our fonts right

713
00:35:03,199 --> 00:35:09,480
happening there i believe so some of

714
00:35:07,650 --> 00:35:12,389
these things have kind of been done some

715
00:35:09,480 --> 00:35:15,510
of them haven't been a final

716
00:35:12,389 --> 00:35:17,730
optimization i think we can well and

717
00:35:15,510 --> 00:35:19,920
hardware rendering we sort of did we

718
00:35:17,730 --> 00:35:22,740
actually did do render to texture so

719
00:35:19,920 --> 00:35:24,119
that's actually done and for shaders i

720
00:35:22,739 --> 00:35:25,949
guess i don't know

721
00:35:24,119 --> 00:35:34,259
that we want to do those yet we could do

722
00:35:25,949 --> 00:35:35,849
them we could do them I'm not sure I I

723
00:35:34,260 --> 00:35:37,200
think these are things i'm going to just

724
00:35:35,849 --> 00:35:38,699
kind of postponed because I don't really

725
00:35:37,199 --> 00:35:44,159
care about them very much they're really

726
00:35:38,699 --> 00:35:45,419
not particularly important but we would

727
00:35:44,159 --> 00:35:47,069
need it if we wanted to do lighting

728
00:35:45,420 --> 00:35:49,200
right if we wanted to do lighting

729
00:35:47,070 --> 00:35:50,640
there's probably no way to implement

730
00:35:49,199 --> 00:35:52,859
lighting in the fixed in the fixed

731
00:35:50,639 --> 00:35:54,750
function pipeline and open jail so we

732
00:35:52,860 --> 00:35:56,099
would have to use shaders in order to do

733
00:35:54,750 --> 00:35:59,900
that there's really nothing else we

734
00:35:56,099 --> 00:36:03,710
could probably do about that I so

735
00:35:59,900 --> 00:36:06,059
there's that I guess is what I would say

736
00:36:03,710 --> 00:36:07,920
so we will need that if we side to do

737
00:36:06,059 --> 00:36:09,659
lighting so I've got to think about what

738
00:36:07,920 --> 00:36:12,900
i want to do there those are probably be

739
00:36:09,659 --> 00:36:14,849
done together would be my guess for the

740
00:36:12,900 --> 00:36:19,700
coordinate systems we're pretty close on

741
00:36:14,849 --> 00:36:22,829
that that's here basically so I think

742
00:36:19,699 --> 00:36:24,839
this pass includes straighten out all

743
00:36:22,829 --> 00:36:26,429
coordinate systems because it's the

744
00:36:24,840 --> 00:36:27,809
final pass on that stuff to make sure

745
00:36:26,429 --> 00:36:29,309
that that's actually good because we're

746
00:36:27,809 --> 00:36:36,119
still a little bit of janky pneus in the

747
00:36:29,309 --> 00:36:39,000
Z I don't know that we have a problem

748
00:36:36,119 --> 00:36:41,009
still with projections I feel like our

749
00:36:39,000 --> 00:36:44,460
project and unprotect now work properly

750
00:36:41,010 --> 00:36:46,890
so I mean in some sense we don't really

751
00:36:44,460 --> 00:36:48,780
have real projections like we're not

752
00:36:46,889 --> 00:36:50,609
doing a full projection matrix or

753
00:36:48,780 --> 00:36:52,650
anything like this but on the other hand

754
00:36:50,610 --> 00:36:55,019
it seems like it's fairly solid at this

755
00:36:52,650 --> 00:36:57,809
point like for example we do back

756
00:36:55,019 --> 00:36:59,400
project the mouse properly now and all

757
00:36:57,809 --> 00:37:02,340
that sort of stuff so it seems like

758
00:36:59,400 --> 00:37:03,389
that's working okay at least at the

759
00:37:02,340 --> 00:37:04,829
moment so I'm going to call that

760
00:37:03,389 --> 00:37:06,359
something that if we wanted us to get

761
00:37:04,829 --> 00:37:07,380
more later we certainly can assign comes

762
00:37:06,360 --> 00:37:12,300
up but I don't think there's anything

763
00:37:07,380 --> 00:37:16,170
much to do their final optimization here

764
00:37:12,300 --> 00:37:19,550
is something that didn't didn't really

765
00:37:16,170 --> 00:37:22,849
need to happen so this is like more like

766
00:37:19,550 --> 00:37:22,850
extra credit

767
00:37:23,739 --> 00:37:29,649
this is like final lap you know or

768
00:37:26,710 --> 00:37:32,050
serious optimization of the software

769
00:37:29,650 --> 00:37:33,789
renderer because we never really did

770
00:37:32,050 --> 00:37:35,230
that I showed some basic optimization of

771
00:37:33,789 --> 00:37:37,329
the sufferer render but we never really

772
00:37:35,230 --> 00:37:39,250
tried to get down to the really

773
00:37:37,329 --> 00:37:41,679
nitty-gritty of it and and make it run

774
00:37:39,250 --> 00:37:44,139
really fast we did basically a cursory

775
00:37:41,679 --> 00:37:47,199
kind of like obvious pass on it and that

776
00:37:44,139 --> 00:37:49,210
was all we did so you know at some point

777
00:37:47,199 --> 00:37:52,179
if we decide maybe after the game is

778
00:37:49,210 --> 00:37:53,800
entirely done you know and our hardware

779
00:37:52,179 --> 00:37:56,079
renderer will be totally fine because

780
00:37:53,800 --> 00:38:02,050
we're just not stressing out hardware

781
00:37:56,079 --> 00:38:03,579
very much with this game um you know

782
00:38:02,050 --> 00:38:05,230
maybe we want to go back and make it

783
00:38:03,579 --> 00:38:08,079
totally playable and software you know

784
00:38:05,230 --> 00:38:09,730
30 frames a second and all that we could

785
00:38:08,079 --> 00:38:10,539
go back and do that so but I don't put

786
00:38:09,730 --> 00:38:11,920
that down there because we don't really

787
00:38:10,539 --> 00:38:14,380
need to do that at the moment for the

788
00:38:11,920 --> 00:38:16,599
game because we did ended up doing the

789
00:38:14,380 --> 00:38:18,789
hardware renderer so we now have a way

790
00:38:16,599 --> 00:38:20,049
to run quickly without the software

791
00:38:18,789 --> 00:38:22,659
renderer we don't have to worry if the

792
00:38:20,050 --> 00:38:24,970
software under is too slow to deal with

793
00:38:22,659 --> 00:38:27,759
you know very stuff but that doesn't

794
00:38:24,969 --> 00:38:30,969
mean it wouldn't be fun to go do that

795
00:38:27,760 --> 00:38:35,200
optimization someday so I leave it on

796
00:38:30,969 --> 00:38:36,730
there for rendering left over here we've

797
00:38:35,199 --> 00:38:39,849
got particle systems and lighting are

798
00:38:36,730 --> 00:38:41,829
the two big things that I feel like we

799
00:38:39,849 --> 00:38:46,989
are going to need that we don't have at

800
00:38:41,829 --> 00:38:48,340
the moment lighting is you know one of

801
00:38:46,989 --> 00:38:50,319
those things where it's like unclear

802
00:38:48,340 --> 00:38:52,240
exactly what that entails because

803
00:38:50,320 --> 00:38:53,470
there's it's it's a lot of you know

804
00:38:52,239 --> 00:38:55,589
lighting is always kind of a hacky

805
00:38:53,469 --> 00:38:57,909
approximation thing even when you do 3d

806
00:38:55,590 --> 00:39:01,300
it's hockey it's not just acting to do

807
00:38:57,909 --> 00:39:02,649
tacky everywhere so I don't know exactly

808
00:39:01,300 --> 00:39:04,720
what we want to do for that we played

809
00:39:02,650 --> 00:39:07,090
around with it a little bit back in the

810
00:39:04,719 --> 00:39:08,259
day but we never really settled on

811
00:39:07,090 --> 00:39:11,350
anything because we kind of needed to

812
00:39:08,260 --> 00:39:12,820
get like our layers working properly and

813
00:39:11,349 --> 00:39:15,489
so we're finally kind of converging on

814
00:39:12,820 --> 00:39:17,109
having that but that kind of had to do

815
00:39:15,489 --> 00:39:23,019
with the lighting what I would say about

816
00:39:17,108 --> 00:39:24,279
lighting is it does feel like something

817
00:39:23,019 --> 00:39:25,750
that would be better to work out sooner

818
00:39:24,280 --> 00:39:28,060
rather than later so I think I want to

819
00:39:25,750 --> 00:39:29,980
kind of leave it on this list and what I

820
00:39:28,059 --> 00:39:32,590
might say is well particle systems

821
00:39:29,980 --> 00:39:34,780
particle systems are probably easier and

822
00:39:32,590 --> 00:39:37,150
probably do impact how we send things to

823
00:39:34,780 --> 00:39:37,509
the renderer so i might say let's do a

824
00:39:37,150 --> 00:39:41,439
part

825
00:39:37,509 --> 00:39:44,048
system pass after the Z and then we'll

826
00:39:41,438 --> 00:39:45,969
do the lighting pass I don't care about

827
00:39:44,048 --> 00:39:49,148
the 18,000 draw rectangles call thing

828
00:39:45,969 --> 00:39:51,099
that's not a huge deal i don't think but

829
00:39:49,148 --> 00:39:53,768
what I do want to do is there is one

830
00:39:51,099 --> 00:40:03,548
thing on the debug code I want to

831
00:39:53,768 --> 00:40:12,098
disable sorting because that was really

832
00:40:03,548 --> 00:40:15,778
too much for it so I think we know all

833
00:40:12,099 --> 00:40:15,778
this thing all this stuff

834
00:40:26,550 --> 00:40:32,920
so I think most of this stuff is

835
00:40:29,320 --> 00:40:34,630
actually fairly set a constant

836
00:40:32,920 --> 00:40:38,409
foreground collision so we fixed all

837
00:40:34,630 --> 00:40:46,510
this because we use sort of that moving

838
00:40:38,409 --> 00:40:47,859
from fixed position to fixed position so

839
00:40:46,510 --> 00:40:49,210
I think we just need to kind of go

840
00:40:47,860 --> 00:40:52,180
through and do the straightening up of

841
00:40:49,210 --> 00:40:53,980
our zpass we do need to make sure that

842
00:40:52,179 --> 00:40:55,719
this sort of thing works for a collision

843
00:40:53,980 --> 00:40:59,170
where you can have flying things going

844
00:40:55,719 --> 00:41:00,939
over low walls or what have you but we

845
00:40:59,170 --> 00:41:03,490
need to kind of definitely need to make

846
00:41:00,940 --> 00:41:05,950
that happen now here's what I'd say

847
00:41:03,489 --> 00:41:09,699
about this I feel like what we want to

848
00:41:05,949 --> 00:41:13,500
do is at some point in here we want to

849
00:41:09,699 --> 00:41:16,539
schedule a switch over to new artwork

850
00:41:13,500 --> 00:41:19,119
because a lot of our artwork is broken

851
00:41:16,539 --> 00:41:21,849
right now like if you take a look at

852
00:41:19,119 --> 00:41:24,730
because the way that I had had just put

853
00:41:21,849 --> 00:41:28,779
in our test assets I don't know if we

854
00:41:24,730 --> 00:41:30,490
still have the sort groups yeah we do so

855
00:41:28,780 --> 00:41:34,210
if you take a look at these sort groups

856
00:41:30,489 --> 00:41:35,469
here it's just absurd like how big they

857
00:41:34,210 --> 00:41:37,090
are because they include all of this

858
00:41:35,469 --> 00:41:38,549
empty space around the hero and they're

859
00:41:37,090 --> 00:41:42,039
aligned wrong and all this other stuff

860
00:41:38,550 --> 00:41:45,250
like you can see that's the that's the

861
00:41:42,039 --> 00:41:48,429
box the the actual rendered area of this

862
00:41:45,250 --> 00:41:50,320
this head here and that's just stupid

863
00:41:48,429 --> 00:41:52,239
it's just wasting a lot of real estate

864
00:41:50,320 --> 00:41:54,550
and it makes it really much harder on

865
00:41:52,239 --> 00:41:55,719
the sort as well because now there's

866
00:41:54,550 --> 00:41:57,100
tons of things that say they're

867
00:41:55,719 --> 00:42:00,459
overlapping and they're not really

868
00:41:57,099 --> 00:42:02,920
overlapping you know so I feel like we

869
00:42:00,460 --> 00:42:06,699
want to move over to cleaner art

870
00:42:02,920 --> 00:42:09,369
sometime soon and I feel like maybe here

871
00:42:06,699 --> 00:42:11,619
would be the place to do it so I think

872
00:42:09,369 --> 00:42:15,159
we want to do like transition to new

873
00:42:11,619 --> 00:42:20,440
artwork and I'm going to actually put

874
00:42:15,159 --> 00:42:23,589
real artwork here I suppose because anna

875
00:42:20,440 --> 00:42:27,159
has a whole set of art for us now that

876
00:42:23,590 --> 00:42:31,350
you did that includes like multiple

877
00:42:27,159 --> 00:42:35,789
heroes and enemies and terrain

878
00:42:31,349 --> 00:42:39,449
and like all kinds of stuff that she did

879
00:42:35,789 --> 00:42:41,759
in a in a couple weeks that is really

880
00:42:39,449 --> 00:42:44,489
good and it's the right perspective and

881
00:42:41,760 --> 00:42:46,800
all that stuff too so I feel like we

882
00:42:44,489 --> 00:42:49,399
want to transition to that probably

883
00:42:46,800 --> 00:42:51,750
after we do the particle system stuff

884
00:42:49,400 --> 00:42:54,030
because before we start trying to work

885
00:42:51,750 --> 00:42:56,130
on lighting I feel like lighting is

886
00:42:54,030 --> 00:42:58,050
going to be something that wants to have

887
00:42:56,130 --> 00:43:05,070
the correct artwork in there and I also

888
00:42:58,050 --> 00:43:11,160
feel like yeah like it'll help with the

889
00:43:05,070 --> 00:43:13,019
rest of the stuff ok so for collision

890
00:43:11,159 --> 00:43:16,049
detection we definitely need to do that

891
00:43:13,019 --> 00:43:18,809
I I don't know for animation I don't

892
00:43:16,050 --> 00:43:20,580
think we actually need any more than

893
00:43:18,809 --> 00:43:23,570
sort of what we have the moment I was

894
00:43:20,579 --> 00:43:26,489
pretty happy with the hopping hero uh

895
00:43:23,570 --> 00:43:29,070
and so pretty much that I think that's

896
00:43:26,489 --> 00:43:32,429
mostly it we could clean up the way that

897
00:43:29,070 --> 00:43:34,500
code works a little bit once we kind of

898
00:43:32,429 --> 00:43:37,469
transition to the to the new artwork so

899
00:43:34,500 --> 00:43:41,480
I might just go ahead and say here just

900
00:43:37,469 --> 00:43:45,839
a real artwork i might say clean up our

901
00:43:41,480 --> 00:43:51,389
notion of multi-part entities and how

902
00:43:45,840 --> 00:43:54,750
they are animated as a part of that

903
00:43:51,389 --> 00:43:55,859
transition because we probably don't

904
00:43:54,750 --> 00:43:57,599
need to do much more than what we

905
00:43:55,860 --> 00:43:59,220
already have but I feel like there was

906
00:43:57,599 --> 00:44:02,639
some janky pneus in how those things

907
00:43:59,219 --> 00:44:04,079
worked and we kind of introduced them in

908
00:44:02,639 --> 00:44:05,489
an ad hoc fashion so maybe go through

909
00:44:04,079 --> 00:44:07,710
there and just clean up a little bit so

910
00:44:05,489 --> 00:44:09,149
it's a little bit more like how you

911
00:44:07,710 --> 00:44:12,000
would do a normal traditional animation

912
00:44:09,150 --> 00:44:15,630
system so we don't have to worry about

913
00:44:12,000 --> 00:44:18,599
it too much so that's good multiple sim

914
00:44:15,630 --> 00:44:24,440
regions per frame with the parental

915
00:44:18,599 --> 00:44:30,869
clocking stuff that's that's harder

916
00:44:24,440 --> 00:44:34,050
because I don't really know how we're

917
00:44:30,869 --> 00:44:36,690
going to figure out where we do these

918
00:44:34,050 --> 00:44:40,310
sim regions just to give you an example

919
00:44:36,690 --> 00:44:40,309
of what that is

920
00:44:41,800 --> 00:45:04,330
I so multiple sim regions the idea here

921
00:45:01,989 --> 00:45:08,709
is there's a couple of different things

922
00:45:04,329 --> 00:45:10,659
we can do in the game but what we

923
00:45:08,710 --> 00:45:12,760
allowed is if you actually look at how

924
00:45:10,659 --> 00:45:15,879
we wrote the code you can actually make

925
00:45:12,760 --> 00:45:17,830
it so that you know the size of the

926
00:45:15,880 --> 00:45:20,470
world might be massive so maybe like

927
00:45:17,829 --> 00:45:23,049
this is like how big the starting area

928
00:45:20,469 --> 00:45:25,209
is you know and maybe the game like

929
00:45:23,050 --> 00:45:26,680
actually gets out like maybe that like

930
00:45:25,210 --> 00:45:28,510
you can't even see how big a screen is

931
00:45:26,679 --> 00:45:31,179
maybe the game actually ends up being

932
00:45:28,510 --> 00:45:33,970
like so huge that it would take you like

933
00:45:31,179 --> 00:45:35,679
you know 30 minutes to walk from here to

934
00:45:33,969 --> 00:45:39,009
here if you just want a straight shot or

935
00:45:35,679 --> 00:45:40,690
something so it's really large so one of

936
00:45:39,010 --> 00:45:44,610
the things that I wanted to support in

937
00:45:40,690 --> 00:45:47,380
the game and I don't really know exactly

938
00:45:44,610 --> 00:45:50,530
what we would use this for but I kind of

939
00:45:47,380 --> 00:45:51,970
think it might be nice is I think it

940
00:45:50,530 --> 00:45:54,160
would be cool if there were some

941
00:45:51,969 --> 00:45:57,909
autonomous agents doing things in the

942
00:45:54,159 --> 00:46:00,009
world while you were elsewhere you know

943
00:45:57,909 --> 00:46:03,089
so a very simple example will would be

944
00:46:00,010 --> 00:46:05,230
lets say that maybe there's you know a

945
00:46:03,090 --> 00:46:08,980
something random like there's a dragon

946
00:46:05,230 --> 00:46:13,059
here and the dragon like flies from here

947
00:46:08,980 --> 00:46:15,820
to here right that's just think it's

948
00:46:13,059 --> 00:46:17,409
going to do and if you happen to be here

949
00:46:15,820 --> 00:46:21,070
when it's passing by you'd see it fly

950
00:46:17,409 --> 00:46:23,099
overhead right so in order to do stuff

951
00:46:21,070 --> 00:46:25,990
like that we need a way of updating

952
00:46:23,099 --> 00:46:28,299
parts of the world that you are not

953
00:46:25,989 --> 00:46:33,250
involved in right that are not where you

954
00:46:28,300 --> 00:46:37,330
are and so what I was thinking is we

955
00:46:33,250 --> 00:46:39,579
could maybe keep a list of of active

956
00:46:37,329 --> 00:46:44,069
entities so maybe like you know there's

957
00:46:39,579 --> 00:46:44,069
a list of active entities

958
00:46:48,759 --> 00:46:55,880
uh and you know we somehow update parts

959
00:46:53,900 --> 00:47:01,099
of the world where those active entities

960
00:46:55,880 --> 00:47:02,749
are you know so if there's an active

961
00:47:01,099 --> 00:47:07,039
entity in a particular region we would

962
00:47:02,748 --> 00:47:12,288
run a time step on that region as if it

963
00:47:07,039 --> 00:47:16,700
were a player you know and so the only

964
00:47:12,289 --> 00:47:18,410
problem with this that I foresee because

965
00:47:16,699 --> 00:47:19,759
that's not very difficult to do right if

966
00:47:18,409 --> 00:47:21,858
you think about what happens right now

967
00:47:19,759 --> 00:47:24,710
we call that begin semaine same thing

968
00:47:21,858 --> 00:47:27,199
well it'd be free for us to just call

969
00:47:24,710 --> 00:47:30,440
that more than once and furthermore I

970
00:47:27,199 --> 00:47:32,868
believe that thing is almost entirely

971
00:47:30,440 --> 00:47:34,970
threadsafe it's really just the pull out

972
00:47:32,869 --> 00:47:36,349
and the push out the pull out of the

973
00:47:34,969 --> 00:47:38,988
world and push into the world thing

974
00:47:36,349 --> 00:47:40,940
that's not thread-safe because once it

975
00:47:38,989 --> 00:47:44,389
pulls it out its operates entirely

976
00:47:40,940 --> 00:47:46,759
within its own structured set and it

977
00:47:44,389 --> 00:47:48,379
doesn't ever talk to anybody or do

978
00:47:46,759 --> 00:47:50,568
anything else it's or it's like kind of

979
00:47:48,380 --> 00:47:52,338
all self-contained so it's actually

980
00:47:50,568 --> 00:47:53,989
pretty easy for this for us to run this

981
00:47:52,338 --> 00:47:55,818
across multiple cores as well we could

982
00:47:53,989 --> 00:47:58,338
run for updates at once for example one

983
00:47:55,818 --> 00:48:02,028
on each core and not have any problem

984
00:47:58,338 --> 00:48:04,818
with that but what I don't know how to

985
00:48:02,028 --> 00:48:09,818
do is deal with the part where they

986
00:48:04,818 --> 00:48:14,119
coincide right so let me just show you

987
00:48:09,818 --> 00:48:16,278
kind of the basic idea there so let's

988
00:48:14,119 --> 00:48:20,568
say that I have you know here is the

989
00:48:16,278 --> 00:48:23,389
dragon and here's the hero and here's

990
00:48:20,568 --> 00:48:27,048
their update regions so here's what's

991
00:48:23,389 --> 00:48:29,048
being simdi if the dragon is coming this

992
00:48:27,048 --> 00:48:32,380
way and the kuro is coming that way

993
00:48:29,048 --> 00:48:35,449
eventually their regions will overlap

994
00:48:32,380 --> 00:48:38,119
right so eventually we'll get a case

995
00:48:35,449 --> 00:48:40,308
that looks like this here's the heroes

996
00:48:38,119 --> 00:48:45,559
region here's the Dragons region and

997
00:48:40,309 --> 00:48:48,979
there's an area that's in common so what

998
00:48:45,559 --> 00:48:51,619
will happen there is whoever packs out

999
00:48:48,978 --> 00:48:53,179
first we'll grab this stuff into their

1000
00:48:51,619 --> 00:48:55,309
sim region and the other person just

1001
00:48:53,179 --> 00:48:57,348
simply won't get it and that's not

1002
00:48:55,309 --> 00:48:59,450
really going to work right that's going

1003
00:48:57,349 --> 00:49:01,519
to create all kinds of bugs for us

1004
00:48:59,449 --> 00:49:04,039
so what we would need to do in that case

1005
00:49:01,519 --> 00:49:06,440
is we would need to not update like the

1006
00:49:04,039 --> 00:49:08,630
Dragons region or something now that's

1007
00:49:06,440 --> 00:49:10,730
not that hard we can pre check to make

1008
00:49:08,630 --> 00:49:12,410
sure that regions don't intersect with

1009
00:49:10,730 --> 00:49:14,840
each other and if two regions do

1010
00:49:12,409 --> 00:49:17,239
intersect with what with each other we

1011
00:49:14,840 --> 00:49:22,460
could update only one of the other right

1012
00:49:17,239 --> 00:49:25,849
and that wouldn't be too bad in the case

1013
00:49:22,460 --> 00:49:27,980
of NPC regions but in the case of the

1014
00:49:25,849 --> 00:49:30,889
hero region we know we have to update

1015
00:49:27,980 --> 00:49:32,929
the hero region every frame so I don't

1016
00:49:30,889 --> 00:49:34,909
know what we do with the dragon region

1017
00:49:32,929 --> 00:49:37,129
at that point does the dragon just stop

1018
00:49:34,909 --> 00:49:41,000
moving until you actually scroll over

1019
00:49:37,130 --> 00:49:43,220
him it just seems kind of busted so I

1020
00:49:41,000 --> 00:49:45,559
really don't know what to do and we

1021
00:49:43,219 --> 00:49:47,389
can't call them sequentially because if

1022
00:49:45,559 --> 00:49:49,989
we call them sequentially then the

1023
00:49:47,389 --> 00:49:52,940
things in this region will update twice

1024
00:49:49,989 --> 00:49:55,849
right they'll get essentially two time

1025
00:49:52,940 --> 00:50:00,740
steps and we don't want them to have to

1026
00:49:55,849 --> 00:50:04,759
time steps now what I suggested kind of

1027
00:50:00,739 --> 00:50:07,879
over on the to-do list is the concept of

1028
00:50:04,760 --> 00:50:10,040
per entity clocking so the idea there is

1029
00:50:07,880 --> 00:50:12,619
that every entity has a clock in it and

1030
00:50:10,039 --> 00:50:15,429
when the update region passes over one

1031
00:50:12,619 --> 00:50:17,839
of those entities if that update clock

1032
00:50:15,429 --> 00:50:19,429
depending on how we record it can

1033
00:50:17,840 --> 00:50:21,260
somehow indicate that it's already been

1034
00:50:19,429 --> 00:50:23,210
updated this frame then it doesn't move

1035
00:50:21,260 --> 00:50:24,800
on this frame but it is still there in

1036
00:50:23,210 --> 00:50:38,119
terms of for collision purposes or

1037
00:50:24,800 --> 00:50:42,730
whatever uh I don't know if that would

1038
00:50:38,119 --> 00:50:42,730
work I really don't um

1039
00:50:45,500 --> 00:50:51,199
it would certainly cause problems with

1040
00:50:47,900 --> 00:50:53,510
the brain because what if you have some

1041
00:50:51,199 --> 00:50:55,699
that are that are that have you know you

1042
00:50:53,510 --> 00:50:59,390
can't partially update the region like

1043
00:50:55,699 --> 00:51:02,239
that so this is like a really concerning

1044
00:50:59,389 --> 00:51:06,199
thing for me I really don't know what to

1045
00:51:02,239 --> 00:51:09,229
do about it uh here's another thought

1046
00:51:06,199 --> 00:51:12,079
and it's basically saying well if we

1047
00:51:09,230 --> 00:51:15,500
have performance to spare which maybe we

1048
00:51:12,079 --> 00:51:17,719
will if we have performance to spare

1049
00:51:15,500 --> 00:51:21,230
there is so another thing that we could

1050
00:51:17,719 --> 00:51:23,269
do right and maybe this is the right

1051
00:51:21,230 --> 00:51:24,800
solution because because I can't think

1052
00:51:23,269 --> 00:51:28,449
of any other solution that actually

1053
00:51:24,800 --> 00:51:32,420
works maybe what we do is we just merge

1054
00:51:28,449 --> 00:51:34,189
the region's right so maybe if there's a

1055
00:51:32,420 --> 00:51:36,260
dragon in the hero what we do is we just

1056
00:51:34,190 --> 00:51:38,179
merge these two into a single sim region

1057
00:51:36,260 --> 00:51:41,060
because remember our sim regions don't

1058
00:51:38,179 --> 00:51:42,799
have to be rectangular we could pull

1059
00:51:41,059 --> 00:51:44,509
from two different rectangular regions

1060
00:51:42,800 --> 00:51:46,880
into the same sim region and create a

1061
00:51:44,510 --> 00:51:48,920
sort of other you know a non-rectangular

1062
00:51:46,880 --> 00:51:51,440
convex shape we can certainly do that

1063
00:51:48,920 --> 00:51:53,990
the only reason I'm worried about that

1064
00:51:51,440 --> 00:51:57,320
is that makes the cost of simulating

1065
00:51:53,989 --> 00:51:59,449
that sim region go up right and if you

1066
00:51:57,320 --> 00:52:01,550
got into a really bad scenario like

1067
00:51:59,449 --> 00:52:03,829
let's just just imagine the worst

1068
00:52:01,550 --> 00:52:10,880
possible case right the worst possible

1069
00:52:03,829 --> 00:52:14,710
case is this right like the hero is here

1070
00:52:10,880 --> 00:52:18,769
the dragon is here the basilisk is here

1071
00:52:14,710 --> 00:52:25,510
the Hydra is here right the manticore is

1072
00:52:18,769 --> 00:52:25,509
here right and I don't know this is Bob

1073
00:52:25,840 --> 00:52:33,500
right in that circumstance now we have

1074
00:52:30,679 --> 00:52:35,269
you know what is essentially you know

1075
00:52:33,500 --> 00:52:37,460
especially if this region is small so

1076
00:52:35,269 --> 00:52:39,349
the overlap is not much it's just enough

1077
00:52:37,460 --> 00:52:42,019
to cause them to merge but it's not very

1078
00:52:39,349 --> 00:52:44,949
much then however many of these we've

1079
00:52:42,019 --> 00:52:48,860
got that's like 6x the cost of

1080
00:52:44,949 --> 00:52:51,199
simulating that region right and so if

1081
00:52:48,860 --> 00:52:56,030
previously the way we were handling this

1082
00:52:51,199 --> 00:52:59,239
load was by you know not doing everyone

1083
00:52:56,030 --> 00:53:06,170
every frame or also

1084
00:52:59,239 --> 00:53:09,169
Oh using the multi threading well we

1085
00:53:06,170 --> 00:53:11,000
can't use different sim regions we can't

1086
00:53:09,170 --> 00:53:12,619
assign different sim regions to

1087
00:53:11,000 --> 00:53:15,170
different threads if they're all in one

1088
00:53:12,619 --> 00:53:17,269
region we could try to multi-thread our

1089
00:53:15,170 --> 00:53:19,940
region our single region update right

1090
00:53:17,269 --> 00:53:21,170
and then it wouldn't matter but assuming

1091
00:53:19,940 --> 00:53:24,019
that we're still trying to do it

1092
00:53:21,170 --> 00:53:26,389
regionally like that that's not going to

1093
00:53:24,019 --> 00:53:29,329
work and so we don't get them

1094
00:53:26,389 --> 00:53:30,618
multi-threading benefit and we don't get

1095
00:53:29,329 --> 00:53:32,119
the benefit of being able to time slice

1096
00:53:30,619 --> 00:53:34,640
these guys anymore because obviously the

1097
00:53:32,119 --> 00:53:36,550
whole region has to update it once so

1098
00:53:34,639 --> 00:53:40,339
that's what I'm really worried about

1099
00:53:36,550 --> 00:53:43,789
otherwise merge would definitely be the

1100
00:53:40,340 --> 00:53:45,559
way to go right and and i'm not sure

1101
00:53:43,789 --> 00:53:47,449
what to do about that because it seems

1102
00:53:45,559 --> 00:53:49,940
like anything that i might do like oh

1103
00:53:47,449 --> 00:53:51,769
okay well you know just pretend the

1104
00:53:49,940 --> 00:53:53,659
Dragons region is smaller in this case

1105
00:53:51,769 --> 00:53:57,079
well okay so it's pretend they overlap

1106
00:53:53,659 --> 00:53:58,190
more or whatever right so I feel like

1107
00:53:57,079 --> 00:53:59,750
what happens is when these things

1108
00:53:58,190 --> 00:54:02,030
converge we just end up in a situation

1109
00:53:59,750 --> 00:54:03,320
where we can no longer use any of the

1110
00:54:02,030 --> 00:54:05,510
tricks that I think we would be able to

1111
00:54:03,320 --> 00:54:08,660
use to keep everything running like

1112
00:54:05,510 --> 00:54:10,970
reasonably even if we throw like a lot

1113
00:54:08,659 --> 00:54:12,649
of these creatures at it you know even

1114
00:54:10,969 --> 00:54:15,559
if there was like three hundred of these

1115
00:54:12,650 --> 00:54:17,510
or something right three hundred actors

1116
00:54:15,559 --> 00:54:19,369
all doing stuff throughout the world

1117
00:54:17,510 --> 00:54:21,290
well that's really not that big of a

1118
00:54:19,369 --> 00:54:24,530
deal because first of all we could say

1119
00:54:21,289 --> 00:54:28,219
uh let's update everyone only like every

1120
00:54:24,530 --> 00:54:29,990
ten frames or something right so now you

1121
00:54:28,219 --> 00:54:32,689
just you only have 30 that need to

1122
00:54:29,989 --> 00:54:33,799
update on any given frame right that

1123
00:54:32,690 --> 00:54:36,349
right there made it much more manageable

1124
00:54:33,800 --> 00:54:39,950
now let's say we've got four cores right

1125
00:54:36,349 --> 00:54:43,670
you know ok now we essentially only have

1126
00:54:39,949 --> 00:54:46,489
eight updates right because each core

1127
00:54:43,670 --> 00:54:49,159
only has to do eight that chunks down

1128
00:54:46,489 --> 00:54:51,229
pretty nicely right it is start to

1129
00:54:49,159 --> 00:54:54,049
become it starts looking a lot more

1130
00:54:51,230 --> 00:54:57,949
manageable a lot more feasible once it

1131
00:54:54,050 --> 00:54:59,570
looks like that but I you know if they

1132
00:54:57,949 --> 00:55:01,819
all merge together all of a sudden it's

1133
00:54:59,570 --> 00:55:04,070
it's all three hundred and it's just I

1134
00:55:01,820 --> 00:55:09,740
think it would just be an epic as f food

1135
00:55:04,070 --> 00:55:11,390
epic disaster so that's the main problem

1136
00:55:09,739 --> 00:55:12,959
that's stopping us from doing that and I

1137
00:55:11,389 --> 00:55:14,549
don't really know

1138
00:55:12,960 --> 00:55:17,490
it's time for the QA so we can go to the

1139
00:55:14,550 --> 00:55:19,769
QA but i guess i would say that's that's

1140
00:55:17,489 --> 00:55:22,769
really i just don't have a good idea

1141
00:55:19,769 --> 00:55:25,789
really of of what the right way to

1142
00:55:22,769 --> 00:55:25,789
approach that problem is

1143
00:56:16,099 --> 00:56:23,369
j flea what are the reasons for separate

1144
00:56:19,530 --> 00:56:25,890
regions again the reason is because you

1145
00:56:23,369 --> 00:56:30,329
can't simulate a world with you know

1146
00:56:25,889 --> 00:56:34,079
millions of entities every frame because

1147
00:56:30,329 --> 00:56:36,360
it's just too much computation right so

1148
00:56:34,079 --> 00:56:40,889
what we want to do is just let most of

1149
00:56:36,360 --> 00:56:43,470
the world sleep and we only load them up

1150
00:56:40,889 --> 00:56:45,539
when we actually if it's actually

1151
00:56:43,469 --> 00:56:48,230
somewhat autonomous region or we think

1152
00:56:45,539 --> 00:56:52,349
there's something happening there right

1153
00:56:48,230 --> 00:56:54,150
and the other thing that we use the

1154
00:56:52,349 --> 00:56:57,000
region's for is to put everyone into a

1155
00:56:54,150 --> 00:56:59,099
single uniform space so that we can do

1156
00:56:57,000 --> 00:57:03,030
our computations there because we don't

1157
00:56:59,099 --> 00:57:05,839
actually have limitations on really how

1158
00:57:03,030 --> 00:57:09,570
big the world could be for the most part

1159
00:57:05,840 --> 00:57:12,390
in fact now I think we could almost get

1160
00:57:09,570 --> 00:57:15,420
rid of even the tile concept so they

1161
00:57:12,389 --> 00:57:18,779
could be like literally as large as you

1162
00:57:15,420 --> 00:57:20,180
want we could actually start doing some

1163
00:57:18,780 --> 00:57:22,580
crazy stuff with that if we wanted to

1164
00:57:20,179 --> 00:57:25,980
but anyway that's neither here nor there

1165
00:57:22,579 --> 00:57:28,259
the point is simply that we use those

1166
00:57:25,980 --> 00:57:29,639
sim regions to bring everything into a

1167
00:57:28,260 --> 00:57:32,630
single floating-point space where

1168
00:57:29,639 --> 00:57:32,629
there's plenty of precision

1169
00:57:41,570 --> 00:57:48,380
his Bob the guy in the tree yes let's

1170
00:57:45,170 --> 00:57:49,970
say yes related to jphayes question so i

1171
00:57:48,380 --> 00:57:51,289
was playing kingdom new lands recently

1172
00:57:49,969 --> 00:57:53,449
and it seemed like there was some really

1173
00:57:51,289 --> 00:57:55,009
bad frame rates that coincided with

1174
00:57:53,449 --> 00:57:58,069
battles involving hundreds vanities on

1175
00:57:55,010 --> 00:58:05,830
the opposite side of the world like

1176
00:57:58,070 --> 00:58:11,080
opposite to where the camera was I yeah

1177
00:58:05,829 --> 00:58:14,059
well yeah I mean one of the problems

1178
00:58:11,079 --> 00:58:16,340
with this sort of thing is just that

1179
00:58:14,059 --> 00:58:18,409
it's it's a it's an architectural issue

1180
00:58:16,340 --> 00:58:22,610
right it'sit's that's exactly what it is

1181
00:58:18,409 --> 00:58:24,139
it's I it's one of those things where we

1182
00:58:22,610 --> 00:58:25,490
don't have to solve it if we don't want

1183
00:58:24,139 --> 00:58:26,960
to because you know you can make a

1184
00:58:25,489 --> 00:58:29,359
perfectly reasonable 2d game that

1185
00:58:26,960 --> 00:58:30,920
doesn't care about any of this stuff but

1186
00:58:29,360 --> 00:58:32,720
I am trying to kind of show some more

1187
00:58:30,920 --> 00:58:34,760
advanced things that you might need to

1188
00:58:32,719 --> 00:58:37,309
consider architectural II and so like

1189
00:58:34,760 --> 00:58:39,230
you point out in other sorts of games

1190
00:58:37,309 --> 00:58:41,360
like Kingdom new lands or who knows what

1191
00:58:39,230 --> 00:58:43,490
I you could definitely get into

1192
00:58:41,360 --> 00:58:45,500
situations where you want this sort of

1193
00:58:43,489 --> 00:58:47,719
expansive world simulation thing going

1194
00:58:45,500 --> 00:58:52,219
on and if you don't have some way of

1195
00:58:47,719 --> 00:58:53,869
degrading that simulation when it is not

1196
00:58:52,219 --> 00:58:55,699
absolutely crucial that it's running at

1197
00:58:53,869 --> 00:58:56,809
30 frames a second or 60 frames a second

1198
00:58:55,699 --> 00:59:00,199
you're going to run into problems

1199
00:58:56,809 --> 00:59:01,730
because you know once you scale the

1200
00:59:00,199 --> 00:59:03,649
world to a certain size it's just going

1201
00:59:01,730 --> 00:59:05,420
to fall over so we're trying to sort of

1202
00:59:03,650 --> 00:59:06,740
have our architecture at its fundamental

1203
00:59:05,420 --> 00:59:08,150
level have certain ways of doing with

1204
00:59:06,739 --> 00:59:09,439
that are they necessarily the best way

1205
00:59:08,150 --> 00:59:11,389
to doing that I don't know we just

1206
00:59:09,440 --> 00:59:12,889
picked some that seemed reasonable and

1207
00:59:11,389 --> 00:59:16,219
which solve problems okay and we got

1208
00:59:12,889 --> 00:59:18,289
there you know and it seems like our

1209
00:59:16,219 --> 00:59:20,149
architecture at the moment actually does

1210
00:59:18,289 --> 00:59:24,759
a pretty good job of allowing us to

1211
00:59:20,150 --> 00:59:27,110
multi-thread and sort of time slice

1212
00:59:24,760 --> 00:59:30,530
updates to parts of our world if we

1213
00:59:27,110 --> 00:59:32,769
wanted to for almost for free and the

1214
00:59:30,530 --> 00:59:36,500
only place that it really breaks down is

1215
00:59:32,769 --> 00:59:39,980
the that part exactly where the regions

1216
00:59:36,500 --> 00:59:42,590
would merge together now what you sort

1217
00:59:39,980 --> 00:59:49,639
of said there were are starting out what

1218
00:59:42,590 --> 00:59:51,019
you said what what in so far s says have

1219
00:59:49,639 --> 00:59:52,609
you considered only merging with the

1220
00:59:51,019 --> 00:59:54,679
heroes region and deactivating one's

1221
00:59:52,610 --> 00:59:55,369
past that or having the region's aligned

1222
00:59:54,679 --> 00:59:59,748
to a grid

1223
00:59:55,369 --> 01:00:02,180
so that they don't overlap so I'm not

1224
00:59:59,748 --> 01:00:03,558
sure so considered merging with only

1225
01:00:02,179 --> 01:00:05,149
with the heroes region and deactivating

1226
01:00:03,559 --> 01:00:06,950
one's past that the problem is you can't

1227
01:00:05,150 --> 01:00:10,389
deactivate them because they still need

1228
01:00:06,949 --> 01:00:12,379
to update right is one of the problems I

1229
01:00:10,389 --> 01:00:14,088
need update eventually otherwise the

1230
01:00:12,380 --> 01:00:16,608
baskets would just stop moving right in

1231
01:00:14,088 --> 01:00:18,920
this case if all I did was allow like

1232
01:00:16,608 --> 01:00:20,298
these two these two merge well the

1233
01:00:18,920 --> 01:00:21,798
basileus and the manticore would now be

1234
01:00:20,298 --> 01:00:23,088
frozen in their tracks which doesn't

1235
01:00:21,798 --> 01:00:25,429
seem like a good solution it would

1236
01:00:23,088 --> 01:00:27,558
create some potential gameplay bugs

1237
01:00:25,429 --> 01:00:29,389
there right now we could do it if it's

1238
01:00:27,559 --> 01:00:31,309
the only thing we could think of then we

1239
01:00:29,389 --> 01:00:32,989
could do it right because hey creating a

1240
01:00:31,309 --> 01:00:35,499
gameplay bug sometimes you just have to

1241
01:00:32,989 --> 01:00:37,969
to make things work right you know

1242
01:00:35,498 --> 01:00:39,259
depending what your goals are so if

1243
01:00:37,969 --> 01:00:40,278
they're little gameplay bugs you know

1244
01:00:39,259 --> 01:00:42,440
okay it's alright and you know

1245
01:00:40,278 --> 01:00:44,449
speedrunners will take advantage of that

1246
01:00:42,440 --> 01:00:46,730
and hey that's great right if you've

1247
01:00:44,449 --> 01:00:49,730
ever watched the Super Mario 64 video

1248
01:00:46,730 --> 01:00:52,309
where they use essentially this exactly

1249
01:00:49,730 --> 01:00:54,650
that the deactivation regions to do kind

1250
01:00:52,309 --> 01:00:58,160
of crazy speed runs of things or half a

1251
01:00:54,650 --> 01:00:59,989
button press runs gameplay bugs are know

1252
01:00:58,159 --> 01:01:01,699
is that right gameplay both can be very

1253
01:00:59,989 --> 01:01:03,079
interesting so I'm not even saying that

1254
01:01:01,699 --> 01:01:04,548
we couldn't do something that I'm just

1255
01:01:03,079 --> 01:01:05,809
saying when I think through these

1256
01:01:04,548 --> 01:01:07,788
problems I try to come up with a

1257
01:01:05,809 --> 01:01:10,400
solution that actually works everywhere

1258
01:01:07,789 --> 01:01:11,778
if I can and if I can't will relax it

1259
01:01:10,400 --> 01:01:13,970
right so that's the reason I don't think

1260
01:01:11,778 --> 01:01:15,920
deactivation really works your other

1261
01:01:13,969 --> 01:01:18,318
suggestion of having them be aligned to

1262
01:01:15,920 --> 01:01:20,059
a grid so they don't overlap the problem

1263
01:01:18,318 --> 01:01:23,838
with that is I'm not exactly sure how to

1264
01:01:20,059 --> 01:01:26,930
do it right now we have this concept of

1265
01:01:23,838 --> 01:01:29,659
the active region and sort of the apron

1266
01:01:26,929 --> 01:01:32,449
and like I said we have this problem

1267
01:01:29,659 --> 01:01:35,058
where that apron would need to overlap

1268
01:01:32,449 --> 01:01:36,528
for these two regions right because even

1269
01:01:35,059 --> 01:01:38,180
if we ensure that they don't that the

1270
01:01:36,528 --> 01:01:40,429
active regions don't overlap which we

1271
01:01:38,179 --> 01:01:42,018
could do the aprons of them would still

1272
01:01:40,429 --> 01:01:43,998
overlap and there's no way to ensure the

1273
01:01:42,018 --> 01:01:46,189
ape razon overlap without basically

1274
01:01:43,998 --> 01:01:48,018
saying that the dragon like can't get

1275
01:01:46,190 --> 01:01:50,659
within a certain distance of the hero

1276
01:01:48,018 --> 01:01:53,689
right which is the opposite of what we

1277
01:01:50,659 --> 01:01:55,879
want so the aprons are the problem in

1278
01:01:53,690 --> 01:01:57,259
this case and even if they weren't i

1279
01:01:55,880 --> 01:01:58,730
think the active regions would be a

1280
01:01:57,259 --> 01:02:02,778
problem because the active region we

1281
01:01:58,730 --> 01:02:06,139
said was a room was one rooms worth 22

1282
01:02:02,778 --> 01:02:08,510
on all sides right and so if that's the

1283
01:02:06,139 --> 01:02:11,029
case if you're in this room

1284
01:02:08,510 --> 01:02:13,430
the dragon is in this room right then we

1285
01:02:11,030 --> 01:02:15,530
sort of have that problem of well we

1286
01:02:13,429 --> 01:02:18,529
kind of need to merge these you know

1287
01:02:15,530 --> 01:02:21,980
because they are they overlap so I don't

1288
01:02:18,530 --> 01:02:24,200
know maybe it's okay because hey in that

1289
01:02:21,980 --> 01:02:25,820
case you you could just say well the

1290
01:02:24,199 --> 01:02:27,859
dragon doesn't simulate the room below

1291
01:02:25,820 --> 01:02:32,450
and his region shrinks down to just one

1292
01:02:27,860 --> 01:02:33,680
room and then if you're more than one

1293
01:02:32,449 --> 01:02:35,449
room away you don't have this problem

1294
01:02:33,679 --> 01:02:37,759
but then again you still end up an exact

1295
01:02:35,449 --> 01:02:41,239
same problem I think maybe what we could

1296
01:02:37,760 --> 01:02:44,810
do is say that that there is no room

1297
01:02:41,239 --> 01:02:46,969
border on the other guys Sims you know

1298
01:02:44,809 --> 01:02:49,389
maybe there's no room border for the

1299
01:02:46,969 --> 01:02:49,389
other people

1300
01:03:06,579 --> 01:03:16,789
q Cohen terror Scout says could you have

1301
01:03:13,998 --> 01:03:19,879
smaller regions and load nine active at

1302
01:03:16,789 --> 01:03:36,740
a time so you always have every boundary

1303
01:03:19,880 --> 01:03:39,140
region loaded all the time I don't think

1304
01:03:36,739 --> 01:03:41,838
I understand what you're suggesting so I

1305
01:03:39,139 --> 01:03:50,328
am not prepared to say why we would or

1306
01:03:41,838 --> 01:03:52,489
wouldn't do that could you have smaller

1307
01:03:50,329 --> 01:03:54,650
regions and load nine active at a time

1308
01:03:52,489 --> 01:03:58,879
so you always have every boundary region

1309
01:03:54,650 --> 01:04:01,630
loaded all the time yeah I'm sorry I'm

1310
01:03:58,880 --> 01:04:01,630
not sure I understand

1311
01:04:29,269 --> 01:04:33,050
so yeah

1312
01:04:44,559 --> 01:04:59,469
but I guess here's the thing it does

1313
01:04:55,719 --> 01:05:03,039
seem possible that if we said that

1314
01:04:59,469 --> 01:05:08,099
updates were always grid aligned so

1315
01:05:03,039 --> 01:05:08,099
they're like room their room aligned and

1316
01:05:08,579 --> 01:05:18,910
if two regions would merge then those

1317
01:05:13,268 --> 01:05:23,018
regions the region that's not the heroes

1318
01:05:18,909 --> 01:05:31,808
region doesn't include that boundary

1319
01:05:23,018 --> 01:05:34,748
piece see I don't think that works

1320
01:05:31,809 --> 01:05:36,910
either because here's the thing so let's

1321
01:05:34,748 --> 01:05:40,509
say here is a room and i'm simulating

1322
01:05:36,909 --> 01:05:43,028
this room in order for me to walk out

1323
01:05:40,509 --> 01:05:45,099
this door I need to know that there's a

1324
01:05:43,028 --> 01:05:49,239
tile on the other side that I can hop on

1325
01:05:45,099 --> 01:05:52,390
to right so the at least part of this

1326
01:05:49,239 --> 01:05:57,749
room has to be loaded otherwise I can

1327
01:05:52,389 --> 01:05:59,708
never actually get there you know so I

1328
01:05:57,748 --> 01:06:02,009
think you're always going to have this

1329
01:05:59,708 --> 01:06:02,009
problem

1330
01:06:10,869 --> 01:06:16,000
cyber cyber punk hobo couldn't you just

1331
01:06:14,230 --> 01:06:18,579
make sure regions that get pulled in by

1332
01:06:16,000 --> 01:06:21,579
the apron don't have their own apron

1333
01:06:18,579 --> 01:06:22,869
activated I don't think that really

1334
01:06:21,579 --> 01:06:26,920
helps the problem though because the

1335
01:06:22,869 --> 01:06:29,699
problem is regions that are active right

1336
01:06:26,920 --> 01:06:34,539
the problem is when the active regions

1337
01:06:29,699 --> 01:06:37,989
the active apron the aprons of active

1338
01:06:34,539 --> 01:06:39,880
regions overlap or even when the active

1339
01:06:37,989 --> 01:06:41,919
regions themselves overlap but you know

1340
01:06:39,880 --> 01:06:44,380
the grid alignment would could

1341
01:06:41,920 --> 01:06:45,880
presumably help that problem but

1342
01:06:44,380 --> 01:06:49,150
assuming that we didn't you know then

1343
01:06:45,880 --> 01:06:52,450
it's like that that apron is going to

1344
01:06:49,150 --> 01:06:55,240
overlap and if the apron overlaps I

1345
01:06:52,449 --> 01:06:59,559
guess since it's not marked active at

1346
01:06:55,239 --> 01:07:01,269
that point that's okay you couldn't run

1347
01:06:59,559 --> 01:07:02,380
it multi-threaded you'd have to have a

1348
01:07:01,269 --> 01:07:04,739
different solution for the multi

1349
01:07:02,380 --> 01:07:04,740
threading

1350
01:07:38,460 --> 01:07:42,000
so here's the thing

1351
01:07:57,380 --> 01:08:00,610
I suppose

1352
01:08:07,748 --> 01:08:13,438
I suppose we could still do time slicing

1353
01:08:13,708 --> 01:08:23,889
and potentially get us out of this

1354
01:08:18,698 --> 01:08:26,858
problem so maybe what we could do is say

1355
01:08:23,889 --> 01:08:29,288
all right we will merge the heroes

1356
01:08:26,859 --> 01:08:33,849
region but we'll only merge it with one

1357
01:08:29,288 --> 01:08:36,158
of the neighbors so if two people

1358
01:08:33,849 --> 01:08:38,109
overlap we don't merge those and we

1359
01:08:36,158 --> 01:08:41,948
don't merge with another person who's on

1360
01:08:38,109 --> 01:08:45,130
the outside right we could do something

1361
01:08:41,948 --> 01:08:47,858
like that now we still have the we still

1362
01:08:45,130 --> 01:08:50,920
have the problem of the clocking because

1363
01:08:47,859 --> 01:08:52,719
people in this region right are then

1364
01:08:50,920 --> 01:08:54,699
going to get updated again on the next

1365
01:08:52,719 --> 01:08:57,489
frame by one of these guys when this is

1366
01:08:54,698 --> 01:08:59,948
dormant and so this will have updated

1367
01:08:57,488 --> 01:09:02,678
twice whereas people adhere and here

1368
01:08:59,948 --> 01:09:05,908
we'll only have updated once and I don't

1369
01:09:02,679 --> 01:09:05,908
really know what to do about that

1370
01:09:41,810 --> 01:09:48,650
uh and JP uh the actual problem when two

1371
01:09:45,859 --> 01:09:52,640
regions overlap is really just the

1372
01:09:48,649 --> 01:09:54,469
expense right instead of if you get

1373
01:09:52,640 --> 01:09:56,000
enough overlapping regions I think it's

1374
01:09:54,470 --> 01:10:03,230
just going to cost too much cpu to

1375
01:09:56,000 --> 01:10:05,779
simulate it right that's the only

1376
01:10:03,229 --> 01:10:09,619
problem if that weren't the problem then

1377
01:10:05,779 --> 01:10:13,189
I think you just always merge you know

1378
01:10:09,619 --> 01:10:14,809
you just always merge and maybe we just

1379
01:10:13,189 --> 01:10:17,269
let it slow down so like hey guess what

1380
01:10:14,810 --> 01:10:20,030
if you get into that situation sucks to

1381
01:10:17,270 --> 01:10:22,660
be you man sorry mr. player your flame

1382
01:10:20,029 --> 01:10:25,659
reframe rate tanked by a faster machine

1383
01:10:22,659 --> 01:10:25,659
right

1384
01:10:35,769 --> 01:10:38,809
because we could totally do that and

1385
01:10:37,698 --> 01:10:40,460
then the solution is just when things

1386
01:10:38,809 --> 01:10:42,409
are next to each other they do merge and

1387
01:10:40,460 --> 01:10:44,559
you merge till you have a single

1388
01:10:42,408 --> 01:10:56,299
connected region and you run that region

1389
01:10:44,559 --> 01:10:58,070
right mr. projection you could always

1390
01:10:56,300 --> 01:11:00,019
artificially keep the non-player agents

1391
01:10:58,069 --> 01:11:01,729
away from each other it's true I could

1392
01:11:00,019 --> 01:11:03,498
sort of have some sort of avoidance

1393
01:11:01,729 --> 01:11:05,569
there that that makes it unlikely for

1394
01:11:03,498 --> 01:11:07,609
this to happen and you know maybe that's

1395
01:11:05,569 --> 01:11:13,908
the best solution if there isn't a good

1396
01:11:07,609 --> 01:11:15,288
tech solution for it you know this Isaac

1397
01:11:13,908 --> 01:11:17,839
what do you think about a boolean flag

1398
01:11:15,288 --> 01:11:19,158
on each updateable thing flip it when

1399
01:11:17,840 --> 01:11:21,739
you update and alternate each frame

1400
01:11:19,158 --> 01:11:24,529
which value check for yeah that's what I

1401
01:11:21,738 --> 01:11:26,238
that's what per entity clocking was some

1402
01:11:24,529 --> 01:11:30,618
you know because you could imagine a

1403
01:11:26,238 --> 01:11:33,848
couple different schemes 11 way I was

1404
01:11:30,618 --> 01:11:36,738
thinking is just in the entity there's a

1405
01:11:33,849 --> 01:11:38,480
what was the last tick it was updated on

1406
01:11:36,738 --> 01:11:40,339
right so then when you come back around

1407
01:11:38,479 --> 01:11:43,218
to it you could say oh how you know

1408
01:11:40,340 --> 01:11:46,159
we're on tick 37 and it says the last

1409
01:11:43,219 --> 01:11:47,929
update was it had was tick 25 well I

1410
01:11:46,158 --> 01:11:50,359
know there's been that many tix in

1411
01:11:47,929 --> 01:11:53,210
between when I last updated this guy so

1412
01:11:50,359 --> 01:11:59,658
I can give him that much movement radius

1413
01:11:53,210 --> 01:12:01,748
or something right you know but I don't

1414
01:11:59,658 --> 01:12:01,748
know

1415
01:12:09,960 --> 01:12:13,899
james soon why does it not suffice to

1416
01:12:12,460 --> 01:12:15,340
use the total area of all overlapped

1417
01:12:13,899 --> 01:12:18,879
regions and just refused to exceed the

1418
01:12:15,340 --> 01:12:21,100
limit it does work it's just a you get

1419
01:12:18,880 --> 01:12:23,859
slower as that limit gets bigger and B

1420
01:12:21,100 --> 01:12:26,560
it has to have a limit and then you have

1421
01:12:23,859 --> 01:12:27,849
kind of bad behavior when you get enough

1422
01:12:26,560 --> 01:12:31,890
people together that you're outside the

1423
01:12:27,850 --> 01:12:34,329
limit right but again you know that

1424
01:12:31,890 --> 01:12:35,590
something like that is probably what we

1425
01:12:34,329 --> 01:12:37,899
will do because I don't know if there's

1426
01:12:35,590 --> 01:12:39,520
a clean solution to this I also don't

1427
01:12:37,899 --> 01:12:40,779
know if it's really that we're like it

1428
01:12:39,520 --> 01:12:42,190
just happened to be something we were

1429
01:12:40,779 --> 01:12:43,479
talking about right now so i thought i'd

1430
01:12:42,189 --> 01:12:45,250
read aya graham it just so people knew

1431
01:12:43,479 --> 01:12:46,779
what i was talking about it's not

1432
01:12:45,250 --> 01:12:49,840
something we really have to solve right

1433
01:12:46,779 --> 01:12:52,689
now either we can just sort of try it

1434
01:12:49,840 --> 01:12:54,400
out a little bit and see we don't really

1435
01:12:52,689 --> 01:12:55,659
know what we need out of this for

1436
01:12:54,399 --> 01:12:57,420
features its kind of with just a

1437
01:12:55,659 --> 01:12:59,949
speculative like hey it would be cool if

1438
01:12:57,420 --> 01:13:02,590
you could have things going on on the

1439
01:12:59,949 --> 01:13:06,670
map that we're happening in places you

1440
01:13:02,590 --> 01:13:08,230
weren't and but I just don't know how

1441
01:13:06,670 --> 01:13:10,960
feasible that is and maybe it's a stupid

1442
01:13:08,229 --> 01:13:12,849
idea we don't have to do this the game

1443
01:13:10,960 --> 01:13:15,279
does not require us to do this in any

1444
01:13:12,850 --> 01:13:17,320
way right it just seemed like something

1445
01:13:15,279 --> 01:13:19,779
that we were close to being able to do

1446
01:13:17,319 --> 01:13:22,149
cleanly so it was worth thinking about

1447
01:13:19,779 --> 01:13:24,789
doing because since we do have the sim

1448
01:13:22,149 --> 01:13:28,269
region stuff we can we can render little

1449
01:13:24,789 --> 01:13:30,130
pit peoples of the world without doing

1450
01:13:28,270 --> 01:13:36,670
I'm sorry update little peoples of the

1451
01:13:30,130 --> 01:13:40,779
world so you know anyway food for

1452
01:13:36,670 --> 01:13:42,640
thought something to think about I'm

1453
01:13:40,779 --> 01:13:45,179
going to go ahead and oops close this

1454
01:13:42,640 --> 01:13:45,180
down here

1455
01:13:48,850 --> 01:13:52,160
alright thank you everyone for joining

1456
01:13:50,600 --> 01:13:54,050
me for the episode of handmade here it's

1457
01:13:52,159 --> 01:13:56,539
been a pleasure coding with you as

1458
01:13:54,050 --> 01:13:58,730
always if you would like to follow along

1459
01:13:56,539 --> 01:14:00,590
the series at home you can always go to

1460
01:13:58,729 --> 01:14:02,479
hand me here org and pre-order the game

1461
01:14:00,590 --> 01:14:04,730
it comes with all the source code so you

1462
01:14:02,479 --> 01:14:06,559
can play around that at home and learn

1463
01:14:04,729 --> 01:14:08,359
from it and so on we also have a forum

1464
01:14:06,560 --> 01:14:11,270
site you can go to if you want to ask

1465
01:14:08,359 --> 01:14:13,250
questions about what's going on we also

1466
01:14:11,270 --> 01:14:14,990
have a patreon page go to thwart video

1467
01:14:13,250 --> 01:14:16,100
series a schedule bot which tells you

1468
01:14:14,989 --> 01:14:17,809
when we're going to be live if you want

1469
01:14:16,100 --> 01:14:20,030
to catch these episodes live and also an

1470
01:14:17,810 --> 01:14:22,280
episode guide you can go to if you would

1471
01:14:20,029 --> 01:14:26,090
like to catch up on past broadcast

1472
01:14:22,279 --> 01:14:27,619
that's about it for today I will be back

1473
01:14:26,090 --> 01:14:31,279
here for the last stream of the week

1474
01:14:27,619 --> 01:14:33,289
tomorrow same time same place until then

1475
01:14:31,279 --> 01:14:34,639
have fun programming and I will see you

1476
01:14:33,289 --> 01:14:37,029
guys on the internet take it easy

1477
01:14:34,640 --> 01:14:37,030
everyone

