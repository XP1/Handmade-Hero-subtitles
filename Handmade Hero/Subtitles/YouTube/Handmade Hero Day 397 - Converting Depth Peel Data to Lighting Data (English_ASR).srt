1
00:00:02,270 --> 00:00:06,480
hello everyone and welcome to handmade

2
00:00:05,009 --> 00:00:10,230
Hero the show recode a complete game

3
00:00:06,480 --> 00:00:15,299
live on stream it is another lighting

4
00:00:10,230 --> 00:00:19,528
weekend here last week weekend we sort

5
00:00:15,298 --> 00:00:23,850
of got everything working that the basic

6
00:00:19,528 --> 00:00:26,518
like infrastructure for doing some kind

7
00:00:23,850 --> 00:00:30,060
of lighting paths we still don't know

8
00:00:26,518 --> 00:00:31,919
exactly how we will end up doing it we

9
00:00:30,059 --> 00:00:33,600
have kind of a couple things that we're

10
00:00:31,920 --> 00:00:36,239
working on right now for possible ways

11
00:00:33,600 --> 00:00:38,280
that the lighting will play out but

12
00:00:36,238 --> 00:00:40,828
regardless of what that way is obviously

13
00:00:38,280 --> 00:00:43,079
we needed sort of this infrastructure

14
00:00:40,829 --> 00:00:44,939
where we could take renderings from the

15
00:00:43,079 --> 00:00:48,390
game feed them through a lighting system

16
00:00:44,939 --> 00:00:50,269
and have ways of iterating on what was

17
00:00:48,390 --> 00:00:53,159
in that lighting system to produce

18
00:00:50,270 --> 00:00:54,750
lighting right now all we're doing is

19
00:00:53,159 --> 00:00:56,609
very very simple blurring of the

20
00:00:54,750 --> 00:00:58,890
lighting we're not actually bouncing it

21
00:00:56,609 --> 00:01:00,179
around like we would like to so we

22
00:00:58,890 --> 00:01:03,000
haven't actually gotten to implementing

23
00:01:00,179 --> 00:01:04,530
the lighting transport part of things so

24
00:01:03,000 --> 00:01:05,790
that's one thing you have to do the

25
00:01:04,530 --> 00:01:07,950
other thing we have to do is we don't

26
00:01:05,790 --> 00:01:12,090
yet pick up the results of the lighting

27
00:01:07,950 --> 00:01:14,670
and feed them into the game the game

28
00:01:12,090 --> 00:01:17,460
proper so what I'd like to do today is

29
00:01:14,670 --> 00:01:20,099
just finish that part up so that we have

30
00:01:17,459 --> 00:01:24,329
a complete lighting pipeline operating

31
00:01:20,099 --> 00:01:28,589
where we can take the lighting come you

32
00:01:24,329 --> 00:01:30,060
know it can come into the game sorry

33
00:01:28,590 --> 00:01:32,219
come into the lighting system bounce

34
00:01:30,060 --> 00:01:34,019
around produce a lighting solution that

35
00:01:32,219 --> 00:01:37,500
we want to use and come back out into

36
00:01:34,019 --> 00:01:39,629
the render that's there in order to to

37
00:01:37,500 --> 00:01:47,000
produce whatever the final lighting is

38
00:01:39,629 --> 00:01:49,048
right so that's what we want to do here

39
00:01:47,000 --> 00:01:50,578
and so I'd like to kind of play around

40
00:01:49,049 --> 00:01:52,770
with that a little bit today just kind

41
00:01:50,578 --> 00:01:54,539
of get a fake version of that working

42
00:01:52,769 --> 00:01:57,899
meaning the lighting transport will

43
00:01:54,540 --> 00:02:00,240
still be fake but the rest of the

44
00:01:57,899 --> 00:02:02,939
pipeline will be effectively real now

45
00:02:00,239 --> 00:02:06,089
there's a little bit of an issue with

46
00:02:02,938 --> 00:02:08,878
this which is to say that right now in

47
00:02:06,090 --> 00:02:12,209
the lighting system were only computing

48
00:02:08,878 --> 00:02:13,530
lighting on like one layer if you will

49
00:02:12,209 --> 00:02:17,969
right

50
00:02:13,530 --> 00:02:20,849
like there's four def peels that we

51
00:02:17,969 --> 00:02:23,370
produce in the game and we only produce

52
00:02:20,849 --> 00:02:26,340
the light currently on one I'm a top

53
00:02:23,370 --> 00:02:29,640
level of the lighting of the of appeal

54
00:02:26,340 --> 00:02:32,340
and the thing that we probably want to

55
00:02:29,639 --> 00:02:35,669
move to in the future is we probably

56
00:02:32,340 --> 00:02:37,939
want to have a way of using the lighting

57
00:02:35,669 --> 00:02:41,129
information from all of the deaf fields

58
00:02:37,939 --> 00:02:45,419
in order to produce lighting that can

59
00:02:41,129 --> 00:02:47,579
bounce around behind objects this is one

60
00:02:45,419 --> 00:02:50,399
of the big drawbacks of screen space

61
00:02:47,580 --> 00:02:53,010
solutions to a lot of lighting problems

62
00:02:50,400 --> 00:02:55,500
that you see is that you can only

63
00:02:53,009 --> 00:02:59,519
compute screen space flooding solutions

64
00:02:55,500 --> 00:03:02,789
for geometry that's at the front but if

65
00:02:59,520 --> 00:03:05,490
like we have you are computing depth

66
00:03:02,789 --> 00:03:07,109
peels for some other reason and we are

67
00:03:05,490 --> 00:03:10,320
computing deaf fields because we need to

68
00:03:07,110 --> 00:03:13,470
do blending in an order independent way

69
00:03:10,319 --> 00:03:16,019
we want to do blend composition well

70
00:03:13,469 --> 00:03:17,580
since we have all of that information it

71
00:03:16,020 --> 00:03:21,959
means that we can do light transport

72
00:03:17,580 --> 00:03:24,390
between four layers of geometry in the

73
00:03:21,959 --> 00:03:26,849
scene not just the front layer so

74
00:03:24,389 --> 00:03:31,379
eventually we also want to move towards

75
00:03:26,849 --> 00:03:32,939
that as well as moving towards real

76
00:03:31,379 --> 00:03:34,079
light transport we want to sort of move

77
00:03:32,939 --> 00:03:36,810
towards something that takes those

78
00:03:34,080 --> 00:03:39,300
flexing to account potentially so we

79
00:03:36,810 --> 00:03:40,439
have that opportunity and we just don't

80
00:03:39,300 --> 00:03:42,209
know whether or not we're going to be

81
00:03:40,439 --> 00:03:45,389
able to take advantage of it in any

82
00:03:42,209 --> 00:03:47,459
particular way but an example of how to

83
00:03:45,389 --> 00:03:48,599
take advantage of that and we talked

84
00:03:47,459 --> 00:03:50,879
about this when we first started

85
00:03:48,599 --> 00:03:55,289
planning the system would just need to

86
00:03:50,879 --> 00:03:58,469
say look why don't we just process the

87
00:03:55,289 --> 00:04:00,419
lighting on four layers at once where we

88
00:03:58,469 --> 00:04:02,969
just know that we've got essentially an

89
00:04:00,419 --> 00:04:05,280
iteration over four textures for each

90
00:04:02,969 --> 00:04:08,669
depth and we just do the lighting

91
00:04:05,280 --> 00:04:10,140
calculation four times every time right

92
00:04:08,669 --> 00:04:13,369
so anything that we were going to do

93
00:04:10,139 --> 00:04:15,988
where we would accept light from one

94
00:04:13,370 --> 00:04:18,689
texel in the past we accept it now from

95
00:04:15,989 --> 00:04:20,310
four texels where each Texel is a

96
00:04:18,689 --> 00:04:22,529
different one of the depth fields and

97
00:04:20,310 --> 00:04:25,829
there's a different light source so

98
00:04:22,529 --> 00:04:27,269
that's an example of how we would go

99
00:04:25,829 --> 00:04:31,560
about using this in

100
00:04:27,269 --> 00:04:33,779
Meishan more concretely and effectively

101
00:04:31,560 --> 00:04:36,720
what we're doing there is we're

102
00:04:33,779 --> 00:04:38,519
effectively saying let's use of you know

103
00:04:36,720 --> 00:04:41,430
we're effectively doing sort of voxel

104
00:04:38,519 --> 00:04:43,799
cone tracing or one of those other voxel

105
00:04:41,430 --> 00:04:46,800
ization based lighting schemes because

106
00:04:43,800 --> 00:04:51,240
effectively what a depth peel is is it's

107
00:04:46,800 --> 00:04:54,000
a sparse voxel ization in Z right it's a

108
00:04:51,240 --> 00:04:56,120
dense fossilization in x and y in the

109
00:04:54,000 --> 00:05:00,139
sense that we cover the whole screen

110
00:04:56,120 --> 00:05:02,668
projected outward but it's a sparse

111
00:05:00,139 --> 00:05:05,038
vocalization in Z because you only are

112
00:05:02,668 --> 00:05:07,889
taking samples where you kit the

113
00:05:05,038 --> 00:05:12,719
geometry so it's very efficient in that

114
00:05:07,889 --> 00:05:15,120
sense compared to a non identical or a

115
00:05:12,720 --> 00:05:18,690
voxel that has to be regular subdivided

116
00:05:15,120 --> 00:05:20,399
so even something like an octree in Z we

117
00:05:18,689 --> 00:05:24,000
are much would be much better than that

118
00:05:20,399 --> 00:05:26,698
because in Z we are literally only

119
00:05:24,000 --> 00:05:28,829
concerned with the actual places where

120
00:05:26,699 --> 00:05:30,780
the geometry exists and that's much

121
00:05:28,829 --> 00:05:38,158
better than a box elevation in terms of

122
00:05:30,779 --> 00:05:39,329
efficiency of elements right so that's

123
00:05:38,158 --> 00:05:43,168
the sort of stuff that we have to think

124
00:05:39,329 --> 00:05:44,698
of going forwards and so I I don't think

125
00:05:43,168 --> 00:05:46,528
there's much left to say about it we

126
00:05:44,699 --> 00:05:47,990
just have to sort of do the elbow grease

127
00:05:46,528 --> 00:05:50,939
of getting all this stuff ironed out

128
00:05:47,990 --> 00:05:55,610
which I'll go do now one further thing I

129
00:05:50,939 --> 00:05:58,199
wanted to mention is that I don't know

130
00:05:55,610 --> 00:06:01,110
whether multi grid lighting is going to

131
00:05:58,199 --> 00:06:05,218
work out or whether we're going to have

132
00:06:01,110 --> 00:06:08,520
to sample the lighting in a less up/down

133
00:06:05,218 --> 00:06:10,550
sort of fashion and if it turns out that

134
00:06:08,519 --> 00:06:13,978
we do have to sample the lighting

135
00:06:10,550 --> 00:06:16,860
differently than that then one thing

136
00:06:13,978 --> 00:06:18,629
that we're going to have to do is we're

137
00:06:16,860 --> 00:06:20,550
going to have to be able to sample from

138
00:06:18,629 --> 00:06:23,189
multiple resolutions of our textures at

139
00:06:20,550 --> 00:06:24,538
the same time and in order to do that

140
00:06:23,189 --> 00:06:26,038
one of the things that we would have to

141
00:06:24,538 --> 00:06:28,889
do in order to make it efficient in the

142
00:06:26,038 --> 00:06:32,879
shader is to switch to using actual MIT

143
00:06:28,889 --> 00:06:34,199
Maps instead of separate textures so one

144
00:06:32,879 --> 00:06:37,439
thing we might also want to look at

145
00:06:34,199 --> 00:06:40,350
today if we have time is seeing if we

146
00:06:37,439 --> 00:06:44,699
can get our current system to just work

147
00:06:40,350 --> 00:06:46,470
with instead of one texture per myth

148
00:06:44,699 --> 00:06:48,899
level for every one of the lighting

149
00:06:46,470 --> 00:06:50,880
textures we want to store having just

150
00:06:48,899 --> 00:06:53,399
one texture and having it actually have

151
00:06:50,879 --> 00:06:55,170
myth maps I would like to move to that

152
00:06:53,399 --> 00:06:56,370
regardless like either way it would be

153
00:06:55,170 --> 00:06:59,250
nice to move to something like that

154
00:06:56,370 --> 00:07:00,600
eventually I just don't know how

155
00:06:59,250 --> 00:07:02,399
effective that's going to be on

156
00:07:00,600 --> 00:07:05,250
something where we've got a rectangular

157
00:07:02,399 --> 00:07:07,229
bitmap like the screen I don't know to

158
00:07:05,250 --> 00:07:11,040
what extent cards will be happy with

159
00:07:07,230 --> 00:07:14,180
about trying to move map that and so

160
00:07:11,040 --> 00:07:16,770
that's really the the only real question

161
00:07:14,180 --> 00:07:18,629
assuming that that works okay that's

162
00:07:16,769 --> 00:07:21,120
probably preferable because what that

163
00:07:18,629 --> 00:07:24,389
allows us to do is once you have things

164
00:07:21,120 --> 00:07:26,069
in a myth map of a texture the bonus

165
00:07:24,389 --> 00:07:28,139
there because it might sound like well

166
00:07:26,069 --> 00:07:30,779
why does it matter the bonus there is

167
00:07:28,139 --> 00:07:33,539
that inside a shader you can sample from

168
00:07:30,779 --> 00:07:35,789
any texture log level that you want so

169
00:07:33,540 --> 00:07:38,430
any mipmap in a given texture you can

170
00:07:35,790 --> 00:07:40,800
sample directly from one of those using

171
00:07:38,430 --> 00:07:43,230
a particular texture sample call that

172
00:07:40,800 --> 00:07:44,639
specifies the myth map level so rather

173
00:07:43,230 --> 00:07:46,290
than having the card compute the

174
00:07:44,639 --> 00:07:47,729
mid-back level based on the unv

175
00:07:46,290 --> 00:07:51,120
gradients or whatever else it wants to

176
00:07:47,730 --> 00:07:54,120
do or things like this we can sample

177
00:07:51,120 --> 00:07:55,829
from specific versions of the LOD you

178
00:07:54,120 --> 00:07:59,370
know specific version of the texture

179
00:07:55,829 --> 00:08:01,229
specific levels and the reason is that's

180
00:07:59,370 --> 00:08:03,240
so important is that would allow us to

181
00:08:01,230 --> 00:08:05,280
do things like if we want to sample

182
00:08:03,240 --> 00:08:08,189
lighting and we know we want to sample

183
00:08:05,279 --> 00:08:10,559
far away lighting at a high you know

184
00:08:08,189 --> 00:08:14,219
miss being a very very coarse mid level

185
00:08:10,560 --> 00:08:17,970
and we want to sample nearby lighting at

186
00:08:14,220 --> 00:08:19,710
a very dense very low level myth right

187
00:08:17,970 --> 00:08:24,330
one that's course I'm sorry one that's

188
00:08:19,709 --> 00:08:25,729
fine detail we can do that in the shader

189
00:08:24,329 --> 00:08:28,019
very adaptively

190
00:08:25,730 --> 00:08:29,990
whereas if we have to specify different

191
00:08:28,019 --> 00:08:33,179
texture handles for all those things

192
00:08:29,990 --> 00:08:35,519
then we're ending up binding lots and

193
00:08:33,179 --> 00:08:37,468
lots and lots of textures and we will

194
00:08:35,519 --> 00:08:40,429
soon probably floods the thirty-two

195
00:08:37,469 --> 00:08:43,800
texture limit that some cards impose

196
00:08:40,429 --> 00:08:45,750
trying to do that so it's really just a

197
00:08:43,799 --> 00:08:48,329
question of putting something there's no

198
00:08:45,750 --> 00:08:50,759
difference between the two in terms of

199
00:08:48,330 --> 00:08:52,680
functionality it's just a question of

200
00:08:50,759 --> 00:08:53,460
going with what the card is more set up

201
00:08:52,679 --> 00:08:55,349
to do

202
00:08:53,460 --> 00:08:58,889
so that we don't run into limitations or

203
00:08:55,350 --> 00:09:01,560
introduce artificial slowdown that's not

204
00:08:58,889 --> 00:09:03,750
really necessary because the card is set

205
00:09:01,559 --> 00:09:05,819
up to sample for MIPS it's not set up to

206
00:09:03,750 --> 00:09:09,210
sample from hundreds of textures that's

207
00:09:05,820 --> 00:09:11,070
just how some cards work that's just one

208
00:09:09,210 --> 00:09:12,990
of the ways in which they're optimized

209
00:09:11,070 --> 00:09:18,540
and you have to sort of play into that

210
00:09:12,990 --> 00:09:19,889
optimization when you can all right so

211
00:09:18,539 --> 00:09:22,919
I'm going to open up the state of the

212
00:09:19,889 --> 00:09:24,809
code right now today is day 397 so day

213
00:09:22,919 --> 00:09:27,419
396 is source code is what you want to

214
00:09:24,809 --> 00:09:30,838
start with let's see oppress not want to

215
00:09:27,419 --> 00:09:34,620
open at all there we go so let's go

216
00:09:30,839 --> 00:09:36,959
ahead and run the app as it is at the

217
00:09:34,620 --> 00:09:40,589
moment and if you remember at the end of

218
00:09:36,958 --> 00:09:43,859
last weekend what we were doing is we

219
00:09:40,589 --> 00:09:49,670
made it so that we could render lights

220
00:09:43,860 --> 00:09:53,879
to the lighting system as part of the as

221
00:09:49,669 --> 00:09:55,649
part of the main game render and so what

222
00:09:53,879 --> 00:10:00,179
we did is you can see here we've got the

223
00:09:55,649 --> 00:10:02,730
hero sort of hopping around in the main

224
00:10:00,179 --> 00:10:06,449
game render and you can see how the

225
00:10:02,730 --> 00:10:08,639
lighting itself we sort of took it from

226
00:10:06,450 --> 00:10:11,370
that render path you can see how the

227
00:10:08,639 --> 00:10:13,259
lighting itself now incorporates sort of

228
00:10:11,370 --> 00:10:15,209
the hero sprite which is what we sort of

229
00:10:13,259 --> 00:10:17,789
did to hack that in since right now our

230
00:10:15,208 --> 00:10:20,369
game doesn't but the game code doesn't

231
00:10:17,789 --> 00:10:21,778
know about lights and didn't ever try to

232
00:10:20,370 --> 00:10:24,330
put in lights in the world so we just

233
00:10:21,778 --> 00:10:25,919
made one up that's where the hero is and

234
00:10:24,330 --> 00:10:28,080
you can see that basically what it does

235
00:10:25,919 --> 00:10:29,669
is it assumes that everything within a

236
00:10:28,080 --> 00:10:31,589
certain sphere around the hero is a

237
00:10:29,669 --> 00:10:35,909
light source so that's what it's doing

238
00:10:31,589 --> 00:10:38,310
right now and what you can see if we go

239
00:10:35,909 --> 00:10:41,759
through the process you can see that

240
00:10:38,309 --> 00:10:44,219
we've got sort of a set of blurred

241
00:10:41,759 --> 00:10:48,450
versions of that right on the way up and

242
00:10:44,220 --> 00:10:52,350
down and we also have several of these

243
00:10:48,450 --> 00:10:54,509
right so that's the that hero one is the

244
00:10:52,350 --> 00:10:57,899
only one we are capturing right now from

245
00:10:54,509 --> 00:11:00,088
the game itself and the other parts

246
00:10:57,899 --> 00:11:01,889
which are you know things like the the

247
00:11:00,089 --> 00:11:05,610
normal surface normal stuff like that

248
00:11:01,889 --> 00:11:06,929
we're not capturing it and so that's you

249
00:11:05,610 --> 00:11:09,480
know we want to kind of

250
00:11:06,929 --> 00:11:11,128
finish up that process of capturing

251
00:11:09,480 --> 00:11:16,139
everything into the lighting system

252
00:11:11,129 --> 00:11:17,730
correctly and then we want to go and get

253
00:11:16,139 --> 00:11:19,409
it out of the lighting system but that's

254
00:11:17,730 --> 00:11:21,240
really all we're talking about right now

255
00:11:19,409 --> 00:11:23,969
like that's all we really are trying to

256
00:11:21,240 --> 00:11:26,068
do so let's go ahead we're going to need

257
00:11:23,970 --> 00:11:27,928
one shader for this and that shader is

258
00:11:26,068 --> 00:11:30,389
just going to be the shader that takes

259
00:11:27,928 --> 00:11:34,980
all of the lighting information from a

260
00:11:30,389 --> 00:11:39,528
set of def peel data bit bases one peel

261
00:11:34,980 --> 00:11:39,528
and moves it over to the lighting system

262
00:11:41,629 --> 00:11:46,170
and like I said right now we're just

263
00:11:43,740 --> 00:11:47,339
concerning ourselves at the top peel but

264
00:11:46,169 --> 00:11:49,289
in the future I think we're going to

265
00:11:47,339 --> 00:11:53,369
want to try and make that system a

266
00:11:49,289 --> 00:11:55,318
little bit better so one step at a time

267
00:11:53,369 --> 00:11:57,600
since we don't want to over complicate

268
00:11:55,318 --> 00:11:59,519
our lighting pipeline just yet with the

269
00:11:57,600 --> 00:12:01,769
multiple death seals as a reason that we

270
00:11:59,519 --> 00:12:04,740
don't want to do that is because we

271
00:12:01,769 --> 00:12:06,028
don't want to do a bunch of work on

272
00:12:04,740 --> 00:12:08,938
something that we don't know whether

273
00:12:06,028 --> 00:12:10,980
it's the right solution yet so once we

274
00:12:08,938 --> 00:12:12,748
get our light transport working in a way

275
00:12:10,980 --> 00:12:15,089
that we think is reasonable for this

276
00:12:12,749 --> 00:12:17,428
game then that's the time to bring the

277
00:12:15,089 --> 00:12:20,189
the peels into it because now we know

278
00:12:17,428 --> 00:12:21,688
what we're doing we can minimize the

279
00:12:20,188 --> 00:12:23,639
amount of work we need to do to extend

280
00:12:21,688 --> 00:12:24,899
it to death peels rather than trying to

281
00:12:23,639 --> 00:12:26,490
deal with depth peels the whole way

282
00:12:24,899 --> 00:12:28,078
through when we don't even really know

283
00:12:26,490 --> 00:12:32,100
how we're going to be bouncing our light

284
00:12:28,078 --> 00:12:36,208
around in the first place we've got a I

285
00:12:32,100 --> 00:12:38,308
think there was a problem someone was

286
00:12:36,208 --> 00:12:40,198
saying well actually I guess I should

287
00:12:38,308 --> 00:12:42,028
open up the github I think somebody was

288
00:12:40,198 --> 00:12:46,318
saying that we accidentally had a typo

289
00:12:42,028 --> 00:12:52,499
in one of our things here minor copy and

290
00:12:46,318 --> 00:12:58,740
paste there it's a 18:44 they said oops

291
00:12:52,499 --> 00:13:03,119
wrong file yes this is just supposed to

292
00:12:58,740 --> 00:13:06,269
be down there we go it just so happens

293
00:13:03,119 --> 00:13:09,089
that won't do anything particularly

294
00:13:06,269 --> 00:13:11,369
different but it is useful to have that

295
00:13:09,089 --> 00:13:13,319
there now one thing we could also decide

296
00:13:11,369 --> 00:13:15,298
to do right we can see if you wanted to

297
00:13:13,318 --> 00:13:18,659
prevent typos like that we could

298
00:13:15,298 --> 00:13:20,360
introduce a little struct with a

299
00:13:18,659 --> 00:13:23,480
constructor and a destructor here

300
00:13:20,360 --> 00:13:25,759
that automatically does the shutdown on

301
00:13:23,480 --> 00:13:29,450
the same thing that you did the startup

302
00:13:25,759 --> 00:13:33,139
on right I don't know how important that

303
00:13:29,450 --> 00:13:35,060
is to do here but it's just when you

304
00:13:33,139 --> 00:13:36,828
have a bug like that it's worth taking a

305
00:13:35,059 --> 00:13:38,929
second and asking yourself should I

306
00:13:36,828 --> 00:13:41,239
introduce a system here that eliminates

307
00:13:38,929 --> 00:13:46,909
that kind of bug how worried it worried

308
00:13:41,240 --> 00:13:48,919
am I about having that right and so yet

309
00:13:46,909 --> 00:13:51,528
you can imagine that that's one thing

310
00:13:48,919 --> 00:13:56,719
that you might want to take a look at

311
00:13:51,528 --> 00:13:57,620
right so anyway moving on from there

312
00:13:56,720 --> 00:14:15,019
because I don't think I'm going to do

313
00:13:57,620 --> 00:14:16,669
that here all right so what we want to

314
00:14:15,019 --> 00:14:20,000
do now is we want to take a look at this

315
00:14:16,669 --> 00:14:22,659
compute light transport situation you

316
00:14:20,000 --> 00:14:24,860
can see here that we've got OpenGL begin

317
00:14:22,659 --> 00:14:29,088
screen fill stuff happening here right

318
00:14:24,860 --> 00:14:33,440
we do this what we did to hack in this

319
00:14:29,089 --> 00:14:35,589
process is we right before we were going

320
00:14:33,440 --> 00:14:40,399
to go and execute the first lighting

321
00:14:35,589 --> 00:14:43,790
blend path we grab the texture from the

322
00:14:40,399 --> 00:14:47,059
depth peel resolve buffer instead so

323
00:14:43,789 --> 00:14:49,159
what this does is this makes it so that

324
00:14:47,059 --> 00:14:54,768
we're just cheap you know cheetah Li

325
00:14:49,159 --> 00:14:56,778
grabbing the color handle the emit color

326
00:14:54,769 --> 00:14:58,820
buffer from the DEF peel resolve buffer

327
00:14:56,778 --> 00:15:03,198
which is not what we actually want to do

328
00:14:58,820 --> 00:15:06,170
so we want to stop doing this and what

329
00:15:03,198 --> 00:15:09,169
you can see is if I stop doing that we

330
00:15:06,169 --> 00:15:11,539
get back to just the the fake lighting

331
00:15:09,169 --> 00:15:14,389
that we had in there and so what we want

332
00:15:11,539 --> 00:15:17,990
to do is replace that fake lighting with

333
00:15:14,389 --> 00:15:21,069
real lighting right and so

334
00:15:17,990 --> 00:15:24,379
[Applause]

335
00:15:21,070 --> 00:15:26,930
what we want to do here is start this

336
00:15:24,379 --> 00:15:29,330
with a way to import the results from

337
00:15:26,929 --> 00:15:31,489
our death feel into our initial lighting

338
00:15:29,330 --> 00:15:35,330
phase what that means is we're going to

339
00:15:31,490 --> 00:15:38,659
want to do one of these same exact

340
00:15:35,330 --> 00:15:41,120
things right where we're running to the

341
00:15:38,659 --> 00:15:44,299
destination right all frame buffer

342
00:15:41,120 --> 00:15:48,200
however we want to do in this case is we

343
00:15:44,299 --> 00:15:50,479
want to write to the very first buffer

344
00:15:48,200 --> 00:15:52,730
so the thing that here you can see our

345
00:15:50,480 --> 00:15:55,250
source light buffer index rate and our

346
00:15:52,730 --> 00:15:57,170
desk light supper index what we're doing

347
00:15:55,250 --> 00:15:59,090
is we're starting writing to buffer one

348
00:15:57,169 --> 00:16:01,039
and we're reading out of buffer zero and

349
00:15:59,090 --> 00:16:03,139
the only person who ever seeded buffer

350
00:16:01,039 --> 00:16:04,519
zero is the fake feed lighting well in

351
00:16:03,139 --> 00:16:05,840
order to move past the fake seed

352
00:16:04,519 --> 00:16:08,059
lighting what we want to do is seed

353
00:16:05,840 --> 00:16:13,879
buffer zero now right

354
00:16:08,059 --> 00:16:15,619
we want to see buffer zero with the

355
00:16:13,879 --> 00:16:18,200
lighting data that actually came out of

356
00:16:15,620 --> 00:16:19,909
the renderer so here in the open trail

357
00:16:18,200 --> 00:16:21,530
vegan screen fill in screen fill thing

358
00:16:19,909 --> 00:16:24,679
what I want to do is write to that first

359
00:16:21,529 --> 00:16:27,019
buffer in order to write to that first

360
00:16:24,679 --> 00:16:29,539
buffer I then need to bind textures to

361
00:16:27,019 --> 00:16:32,569
draw from that are not going to come

362
00:16:29,539 --> 00:16:34,159
from a lighting buffer instead that

363
00:16:32,570 --> 00:16:36,350
they're going to come from is they're

364
00:16:34,159 --> 00:16:38,209
going to come from the DEF peel buffers

365
00:16:36,350 --> 00:16:41,720
and so what you can see here is we've

366
00:16:38,210 --> 00:16:44,360
got these depth field buffers they use

367
00:16:41,720 --> 00:16:46,639
this OpenGL frame buffer here and they

368
00:16:44,360 --> 00:16:50,480
have this series of color buffers the

369
00:16:46,639 --> 00:16:54,620
color buffers themselves are announced

370
00:16:50,480 --> 00:16:56,360
by these three enums here and so what I

371
00:16:54,620 --> 00:16:59,539
want to do is I want to read from those

372
00:16:56,360 --> 00:17:00,259
now what you can see is this there's a

373
00:16:59,539 --> 00:17:02,959
myth

374
00:17:00,259 --> 00:17:06,500
there's NPL their surface reflect right

375
00:17:02,960 --> 00:17:09,410
and what we want to do is we want to

376
00:17:06,500 --> 00:17:10,640
read from those three and then we're

377
00:17:09,410 --> 00:17:14,450
going to write out to the buffers we're

378
00:17:10,640 --> 00:17:21,980
going to translate those three into you

379
00:17:14,450 --> 00:17:25,759
know into the result all right

380
00:17:21,980 --> 00:17:28,460
so looking at this what that means is

381
00:17:25,759 --> 00:17:30,859
I'm going to need some kind of a way to

382
00:17:28,460 --> 00:17:33,289
access the source and in this case if

383
00:17:30,859 --> 00:17:36,469
the we know what it is right it's always

384
00:17:33,289 --> 00:17:39,230
going to be the depth TL resolved buffer

385
00:17:36,470 --> 00:17:54,559
and we're just going to use buffer zero

386
00:17:39,230 --> 00:17:56,509
so in the future we may do better than

387
00:17:54,559 --> 00:17:59,059
that but at the moment we are not we're

388
00:17:56,509 --> 00:18:01,099
just going to leave it like this so what

389
00:17:59,059 --> 00:18:03,079
I want to do here is say okay I've got

390
00:18:01,099 --> 00:18:04,969
an open GL frame buffer that's the

391
00:18:03,079 --> 00:18:07,129
source it's the depth field resolve

392
00:18:04,970 --> 00:18:08,779
buffer and I'm going to bind the

393
00:18:07,130 --> 00:18:10,730
textures out of that now there aren't

394
00:18:08,779 --> 00:18:12,170
four textures because remember this is a

395
00:18:10,730 --> 00:18:15,019
different format than the lighting it's

396
00:18:12,170 --> 00:18:16,670
just with a renderer boot forth and so

397
00:18:15,019 --> 00:18:20,029
what I want to grab there is I want to

398
00:18:16,670 --> 00:18:21,860
grab oh well not actually true I take

399
00:18:20,029 --> 00:18:23,539
that back we do actually have one

400
00:18:21,859 --> 00:18:25,129
because we also want to read from the

401
00:18:23,539 --> 00:18:27,619
Deaf handle so there are actually four

402
00:18:25,130 --> 00:18:30,050
they're just not the same for that they

403
00:18:27,619 --> 00:18:32,479
were before so let's go ahead and put

404
00:18:30,049 --> 00:18:35,359
the deaf handle first and then let's do

405
00:18:32,480 --> 00:18:36,829
the color handles next so it would look

406
00:18:35,359 --> 00:18:38,419
something like this

407
00:18:36,829 --> 00:18:40,250
and so what we would find is the depth

408
00:18:38,420 --> 00:18:42,289
handle and then the surface reflects the

409
00:18:40,250 --> 00:18:44,630
admit the NPL now I'm going to go ahead

410
00:18:42,289 --> 00:18:47,210
and use the enum in case we reorder them

411
00:18:44,630 --> 00:18:50,150
I want this shader to just know that it

412
00:18:47,210 --> 00:18:53,779
can get those in this order so there's

413
00:18:50,150 --> 00:18:56,269
those enums and so this should be able

414
00:18:53,779 --> 00:19:00,619
to compile now with no errors because

415
00:18:56,269 --> 00:19:02,990
again I'm not calling any shader code

416
00:19:00,619 --> 00:19:04,039
yet now I got to renumber these here to

417
00:19:02,990 --> 00:19:05,870
make sure they go in the right order

418
00:19:04,039 --> 00:19:08,960
let's make sure that happens there we go

419
00:19:05,869 --> 00:19:11,389
zero one two three and here we have our

420
00:19:08,960 --> 00:19:14,900
binding so now what we need to do is

421
00:19:11,390 --> 00:19:17,000
basically this program process which we

422
00:19:14,900 --> 00:19:19,250
don't have let's go ahead and put that

423
00:19:17,000 --> 00:19:21,349
in there so we're going to want to do it

424
00:19:19,250 --> 00:19:22,880
a use program again and we're going to

425
00:19:21,349 --> 00:19:27,939
need a program for this so this is going

426
00:19:22,880 --> 00:19:31,270
to be like a depth field to delighting

427
00:19:27,940 --> 00:19:31,269
something like that

428
00:19:32,480 --> 00:19:37,680
[Applause]

429
00:19:34,519 --> 00:19:41,690
and then I want to do a use program end

430
00:19:37,680 --> 00:19:45,150
[Applause]

431
00:19:41,690 --> 00:19:46,950
so inside here I need to do an actual

432
00:19:45,150 --> 00:19:48,990
draw at some point so there we are

433
00:19:46,950 --> 00:19:51,779
and all this is again is just a

434
00:19:48,990 --> 00:20:01,740
full-screen fill with a particular

435
00:19:51,779 --> 00:20:04,440
program method all right so now all we

436
00:20:01,740 --> 00:20:07,529
need to do we're pretty much set up for

437
00:20:04,440 --> 00:20:12,150
doing the importing all we need to do

438
00:20:07,529 --> 00:20:15,629
now is actually get this data into a

439
00:20:12,150 --> 00:20:18,380
program right so we need to create some

440
00:20:15,630 --> 00:20:23,010
kind of new programs here it's kind of

441
00:20:18,380 --> 00:20:25,260
like the depth peel resolve I guess so

442
00:20:23,009 --> 00:20:29,819
I'll start with that as the code we'll

443
00:20:25,259 --> 00:20:30,569
use the stuff peel composite here let's

444
00:20:29,819 --> 00:20:38,038
go ahead and do that

445
00:20:30,569 --> 00:20:39,808
and let's see here let's go down here so

446
00:20:38,038 --> 00:20:41,730
what I'm going to do is we'll call this

447
00:20:39,808 --> 00:20:44,009
oops at the wrong place one put it below

448
00:20:41,730 --> 00:20:45,419
the multiplet above the multi light up

449
00:20:44,009 --> 00:20:49,069
is probably the best place for it there

450
00:20:45,419 --> 00:20:58,650
we go so we'll call this function

451
00:20:49,069 --> 00:21:01,589
compile appeal to lighting and I guess I

452
00:20:58,650 --> 00:21:04,080
don't know that we have the srgb stuff

453
00:21:01,589 --> 00:21:07,048
in here much at all so this is probably

454
00:21:04,079 --> 00:21:11,250
not important what we do want to do at

455
00:21:07,048 --> 00:21:14,819
some point is fix our version numbers to

456
00:21:11,250 --> 00:21:16,200
probably be 330 at some point because if

457
00:21:14,819 --> 00:21:19,048
we're going to basically be requiring

458
00:21:16,200 --> 00:21:21,240
opengl 3.3 there's no sense in not

459
00:21:19,048 --> 00:21:23,849
having all of our shaders b33 compliant

460
00:21:21,240 --> 00:21:26,909
there's no bonus to be had by making

461
00:21:23,849 --> 00:21:29,129
them old if we're saying that basically

462
00:21:26,909 --> 00:21:30,990
we have to have open gel 3.3 to run

463
00:21:29,130 --> 00:21:32,970
right if we're saying we're going to be

464
00:21:30,990 --> 00:21:37,970
having that that complicated of a

465
00:21:32,970 --> 00:21:40,259
lighting that complicated of a renderer

466
00:21:37,970 --> 00:21:41,779
so I don't think we need any of this

467
00:21:40,259 --> 00:21:43,179
just yet

468
00:21:41,779 --> 00:21:45,528
[Applause]

469
00:21:43,179 --> 00:21:47,119
but it does occur to me that the number

470
00:21:45,528 --> 00:21:50,480
of times we've sort of been doing this

471
00:21:47,118 --> 00:21:52,999
format string bit here I wonder if that

472
00:21:50,480 --> 00:21:55,548
should be systemized in someplace where

473
00:21:52,999 --> 00:21:57,169
we actually just build one of those to

474
00:21:55,548 --> 00:22:00,558
begin with there's a little bit of

475
00:21:57,169 --> 00:22:03,288
fussiness there because you know we've

476
00:22:00,558 --> 00:22:07,128
got sort of the things that want to be

477
00:22:03,288 --> 00:22:08,778
set in a particular piece of code in

478
00:22:07,128 --> 00:22:11,388
common but what we could do is sort of

479
00:22:08,778 --> 00:22:14,778
have a percent s at the beginning that's

480
00:22:11,388 --> 00:22:16,069
just the default preamble or we could

481
00:22:14,778 --> 00:22:17,659
even make it so that there's a thing

482
00:22:16,069 --> 00:22:19,579
that gets passed in before that so that

483
00:22:17,659 --> 00:22:21,679
defines to get here or just kind of

484
00:22:19,579 --> 00:22:22,939
shared and that makes a lot of sense to

485
00:22:21,679 --> 00:22:24,740
me so we probably should look at doing

486
00:22:22,940 --> 00:22:25,909
that a little bit in the future and I'm

487
00:22:24,740 --> 00:22:26,868
not going to bother right now if right

488
00:22:25,909 --> 00:22:29,450
in the middle of something but that's

489
00:22:26,868 --> 00:22:31,638
something that seems like we're doing so

490
00:22:29,450 --> 00:22:36,350
anyway inside the vertex code here we

491
00:22:31,638 --> 00:22:40,490
don't have a vertex color and we we

492
00:22:36,349 --> 00:22:42,498
could use a UV but I don't think we

493
00:22:40,490 --> 00:22:47,868
really want to I think we want to do a

494
00:22:42,499 --> 00:22:50,319
direct right in this case it's hard to

495
00:22:47,868 --> 00:22:53,058
say whether we should use a UV or not

496
00:22:50,319 --> 00:22:54,470
it's just whether or not this sort of

497
00:22:53,058 --> 00:22:58,190
stuff is going to be able to be down

498
00:22:54,470 --> 00:23:01,100
sampled in any real way without a custom

499
00:22:58,190 --> 00:23:02,629
shader I don't know so it kind of feels

500
00:23:01,099 --> 00:23:05,509
to me like it probably wants to be

501
00:23:02,628 --> 00:23:08,148
copied directly so I suspect that it's

502
00:23:05,509 --> 00:23:11,360
kind of not going to want to do the UV

503
00:23:08,148 --> 00:23:12,859
stuff pretty much at all so I think it's

504
00:23:11,359 --> 00:23:14,599
just going to be something that straight

505
00:23:12,859 --> 00:23:15,888
across that's the position and doesn't

506
00:23:14,599 --> 00:23:18,709
do anything else for the vertex shader

507
00:23:15,888 --> 00:23:20,928
and then in the fragment code we're

508
00:23:18,710 --> 00:23:22,129
going to have a number of samplers so in

509
00:23:20,929 --> 00:23:26,840
this case we're going to have a depth

510
00:23:22,128 --> 00:23:30,678
sampler we're going to have a surface

511
00:23:26,839 --> 00:23:34,209
RGB right let's uh let's name these the

512
00:23:30,679 --> 00:23:36,590
right things so surface reflect sampler

513
00:23:34,210 --> 00:23:39,019
we're going to have an emit sampler and

514
00:23:36,589 --> 00:23:41,509
we're going to have an NPL sampler but

515
00:23:39,019 --> 00:23:45,138
we don't take in any of this stuff and

516
00:23:41,509 --> 00:23:47,538
then we do have out but the outs for the

517
00:23:45,138 --> 00:23:51,829
blend unit color are actually going to

518
00:23:47,538 --> 00:23:54,519
be complex now because we are writing to

519
00:23:51,829 --> 00:23:57,159
a front back surface MP

520
00:23:54,519 --> 00:24:02,440
so we do want that to be uniform and

521
00:23:57,160 --> 00:24:05,130
correct so here is that writing we'll go

522
00:24:02,440 --> 00:24:08,740
ahead and put that at the bottom like so

523
00:24:05,130 --> 00:24:12,730
and we'll delete all of what happens

524
00:24:08,740 --> 00:24:14,440
here because none of it is correct now

525
00:24:12,730 --> 00:24:18,039
in this case we don't really want to

526
00:24:14,440 --> 00:24:26,380
sample from a UV anymore and let me go

527
00:24:18,039 --> 00:24:27,970
ahead and get these out actually that's

528
00:24:26,380 --> 00:24:30,040
not quite true so it's going to be more

529
00:24:27,970 --> 00:24:37,450
like this it's going to be more like we

530
00:24:30,039 --> 00:24:52,480
have a depth from an R we have a surface

531
00:24:37,450 --> 00:24:57,569
reflect we have a emit and we have the

532
00:24:52,480 --> 00:25:02,410
NPL now from there obviously we get a

533
00:24:57,569 --> 00:25:04,929
emit RGB which is from here we have an

534
00:25:02,410 --> 00:25:10,779
emit spread which is from here this is

535
00:25:04,930 --> 00:25:14,529
the encoding we agreed on this is our NX

536
00:25:10,779 --> 00:25:22,180
and actually I should cause I could just

537
00:25:14,529 --> 00:25:23,649
do this here's our n right i well know

538
00:25:22,180 --> 00:25:26,950
you know what we need to do math on this

539
00:25:23,650 --> 00:25:30,220
sort of in a in a more unpacking

540
00:25:26,950 --> 00:25:41,069
kannaway so let's do it this way we have

541
00:25:30,220 --> 00:25:43,240
our LP zero and our NP one right so

542
00:25:41,069 --> 00:25:46,179
those are our lighting parameters which

543
00:25:43,240 --> 00:25:48,700
we're not going to use yet so real we

544
00:25:46,180 --> 00:25:51,250
can sort of leave those to the side for

545
00:25:48,700 --> 00:25:53,380
the moment we have the emit in the NPL

546
00:25:51,250 --> 00:25:55,809
both getting sampled the service

547
00:25:53,380 --> 00:25:59,340
reflecting the depth and then we you

548
00:25:55,809 --> 00:26:02,339
know previously I should also have

549
00:25:59,339 --> 00:26:02,339
surface

550
00:26:02,450 --> 00:26:11,460
select RGB and that'll just be server

551
00:26:07,349 --> 00:26:13,619
select at RGB and I don't think we need

552
00:26:11,460 --> 00:26:16,259
the coverage at the moment because we

553
00:26:13,619 --> 00:26:18,539
don't do anything with it but there is

554
00:26:16,259 --> 00:26:26,640
the coverage if we want it to just be

555
00:26:18,539 --> 00:26:28,379
complete in declaring our variables so

556
00:26:26,640 --> 00:26:35,580
this is really what we're looking at

557
00:26:28,380 --> 00:26:38,220
here in terms of what we're sampling and

558
00:26:35,579 --> 00:26:52,339
then what we have to do is we have to

559
00:26:38,220 --> 00:26:54,509
compile at some point these values and

560
00:26:52,339 --> 00:26:56,009
some of them are going to be pretty easy

561
00:26:54,509 --> 00:27:01,140
and some of them are going to be more

562
00:26:56,009 --> 00:27:06,990
difficult to produce so we'll have to

563
00:27:01,140 --> 00:27:09,750
work on that right all right

564
00:27:06,990 --> 00:27:14,279
so taking a look at what we've got here

565
00:27:09,750 --> 00:27:16,170
what we want to do is say these texture

566
00:27:14,279 --> 00:27:19,170
samples we want to just sample the

567
00:27:16,170 --> 00:27:20,670
textures directly so we don't want to

568
00:27:19,170 --> 00:27:23,460
use the UV so what we're going to be

569
00:27:20,670 --> 00:27:27,150
doing here is more akin to the texture

570
00:27:23,460 --> 00:27:29,759
sample from the device program where we

571
00:27:27,150 --> 00:27:31,320
do where is it

572
00:27:29,759 --> 00:27:34,559
this one right here where we do a

573
00:27:31,319 --> 00:27:38,429
textile fetch so all of these ones in

574
00:27:34,559 --> 00:27:40,649
the in the in the lighting transfer here

575
00:27:38,430 --> 00:27:42,779
for example what we want to do is make

576
00:27:40,650 --> 00:27:45,030
sure that these are actually sampling

577
00:27:42,779 --> 00:27:47,910
directly from a texture so they're going

578
00:27:45,029 --> 00:27:49,440
to look more like this right and so what

579
00:27:47,910 --> 00:27:53,640
we want to do is we want to have an eye

580
00:27:49,440 --> 00:27:57,509
Veck - which is the place to sample from

581
00:27:53,640 --> 00:28:00,180
for the textile fetch so we'll just do a

582
00:27:57,509 --> 00:28:03,930
fetch XY or something like that we'll

583
00:28:00,180 --> 00:28:07,170
build this once and then we'll use

584
00:28:03,930 --> 00:28:10,009
textile fetch everywhere else so for

585
00:28:07,170 --> 00:28:10,009
example here

586
00:28:13,329 --> 00:28:23,228
we've got depth equals Texas Texas

587
00:28:15,190 --> 00:28:25,538
sampler and we're going to be sampling

588
00:28:23,229 --> 00:28:30,219
from it level zero and then we just need

589
00:28:25,538 --> 00:28:32,288
to patch that XY in here in order to let

590
00:28:30,219 --> 00:28:34,419
it know where we're fetching from and so

591
00:28:32,288 --> 00:28:36,669
the same thing is going to be true in

592
00:28:34,419 --> 00:28:38,019
all of these so in order to get the

593
00:28:36,669 --> 00:28:40,869
service reflect we're doing the service

594
00:28:38,019 --> 00:28:44,919
reflect sampler we're going to do it

595
00:28:40,868 --> 00:28:47,678
from the fetch XY and then we're going

596
00:28:44,919 --> 00:28:55,028
to do zero and maybe the correct things

597
00:28:47,679 --> 00:28:58,450
get calls there was the text Lex Y again

598
00:28:55,028 --> 00:29:14,829
just propagate this change down do it

599
00:28:58,450 --> 00:29:17,288
for everybody and finally we get the NPL

600
00:29:14,829 --> 00:29:20,019
as well so now we've got all the data

601
00:29:17,288 --> 00:29:23,769
that came out of the original render we

602
00:29:20,019 --> 00:29:25,659
need some way of computing the various

603
00:29:23,769 --> 00:29:27,308
quantities we actually need now for

604
00:29:25,659 --> 00:29:32,409
enzyme it and vacuumed it actually turns

605
00:29:27,308 --> 00:29:35,950
out are quite easy week we have the emit

606
00:29:32,409 --> 00:29:37,989
RGB and we have the spread so what we

607
00:29:35,950 --> 00:29:40,569
need to figure out is how the spread is

608
00:29:37,989 --> 00:29:43,659
going to be encoded I think probably the

609
00:29:40,569 --> 00:29:50,168
easiest way to encode it is just to say

610
00:29:43,659 --> 00:29:52,359
that it's going to range from at zero it

611
00:29:50,169 --> 00:29:55,450
will go entirely out the back at point

612
00:29:52,358 --> 00:29:57,368
five it goes out the front and the back

613
00:29:55,450 --> 00:30:02,139
and it one it goes out just the front

614
00:29:57,368 --> 00:30:03,939
maybe it's hard to say there is is this

615
00:30:02,138 --> 00:30:07,118
really a good way to encode both of them

616
00:30:03,940 --> 00:30:08,469
I don't think into the range here

617
00:30:07,118 --> 00:30:10,238
although there are some things you could

618
00:30:08,469 --> 00:30:14,710
do you could partition the range as well

619
00:30:10,239 --> 00:30:19,598
you could say that there's you know from

620
00:30:14,710 --> 00:30:22,509
0 to 0.3 is back emission only 0.3 to

621
00:30:19,598 --> 00:30:23,500
0.6 is front emission only in point 6 to

622
00:30:22,509 --> 00:30:26,410
1

623
00:30:23,500 --> 00:30:28,150
is front and back omission right so

624
00:30:26,410 --> 00:30:32,590
there's a lot of different ways that we

625
00:30:28,150 --> 00:30:34,420
can encode that but what I'd rather do

626
00:30:32,589 --> 00:30:36,129
for the moment is not going to talk down

627
00:30:34,420 --> 00:30:37,750
in that until we actually know what we

628
00:30:36,130 --> 00:30:45,580
might want to do with it so just say

629
00:30:37,750 --> 00:30:47,680
like use this to feedback in meters so

630
00:30:45,579 --> 00:30:50,230
what I'm going to do instead is just say

631
00:30:47,680 --> 00:30:52,390
that we don't do any back omission yet

632
00:30:50,230 --> 00:30:53,650
so we just start out with only front

633
00:30:52,390 --> 00:30:56,460
omission in the front omission is

634
00:30:53,650 --> 00:30:59,890
whatever the omission was written to be

635
00:30:56,460 --> 00:31:03,009
for the NP remember the encoding of this

636
00:30:59,890 --> 00:31:05,920
the depth is actually the Z coordinate

637
00:31:03,009 --> 00:31:09,640
so the thing that comes out of our depth

638
00:31:05,920 --> 00:31:11,680
sampler here is going to be what we need

639
00:31:09,640 --> 00:31:13,150
to put in there although we probably

640
00:31:11,680 --> 00:31:16,110
want to you know we might want to

641
00:31:13,150 --> 00:31:18,700
translate it into something that's more

642
00:31:16,109 --> 00:31:22,029
that gives more information about where

643
00:31:18,700 --> 00:31:22,990
in the world it is but you know I don't

644
00:31:22,029 --> 00:31:24,490
know that we really need to worry about

645
00:31:22,990 --> 00:31:26,259
that quite yet either

646
00:31:24,490 --> 00:31:28,480
because we haven't gotten to the point

647
00:31:26,259 --> 00:31:30,519
yet where we really are talking about

648
00:31:28,480 --> 00:31:34,360
that particular piece of information how

649
00:31:30,519 --> 00:31:37,450
it should be scaled or stored but when

650
00:31:34,359 --> 00:31:39,669
we produce that NP right we know that

651
00:31:37,450 --> 00:31:42,190
the depth is going to go in the final

652
00:31:39,670 --> 00:31:44,590
part there and we know that the NX and

653
00:31:42,190 --> 00:31:49,390
the NY are going to go in the first part

654
00:31:44,589 --> 00:31:52,029
like this right now the NX and NY are

655
00:31:49,390 --> 00:31:54,370
actual floating-point values here

656
00:31:52,029 --> 00:31:57,490
they're not floating point values when

657
00:31:54,369 --> 00:32:01,119
they come in here and so what we need to

658
00:31:57,490 --> 00:32:03,430
do here is we need to bias these back to

659
00:32:01,119 --> 00:32:07,500
where they're encoded zero to one at the

660
00:32:03,430 --> 00:32:10,060
moment so what we need to do is actually

661
00:32:07,500 --> 00:32:13,809
sort of blow these values out into

662
00:32:10,059 --> 00:32:16,419
something that actually represents the

663
00:32:13,809 --> 00:32:19,210
range of a real normal is that make

664
00:32:16,420 --> 00:32:21,039
sense but I think that's what you're

665
00:32:19,210 --> 00:32:22,420
looking at here is most that's most of

666
00:32:21,039 --> 00:32:25,420
it that's mostly what we're talking

667
00:32:22,420 --> 00:32:28,150
about I don't think there's really a

668
00:32:25,420 --> 00:32:30,400
whole lot else to it so we really just

669
00:32:28,150 --> 00:32:32,650
want to get this working the way that

670
00:32:30,400 --> 00:32:34,890
you see it here and that should be

671
00:32:32,650 --> 00:32:34,890
sufficient

672
00:32:35,329 --> 00:32:40,009
so as you can see we've got a bunch of

673
00:32:37,390 --> 00:32:42,440
texture samplers we got a query here but

674
00:32:40,009 --> 00:32:45,408
that's really it so we've got a depth

675
00:32:42,440 --> 00:32:50,808
sampler we've got a surface reflect

676
00:32:45,409 --> 00:32:52,429
sampler although you know there's

677
00:32:50,808 --> 00:32:53,690
another thing we could do here if we

678
00:32:52,429 --> 00:32:55,880
wanted to

679
00:32:53,690 --> 00:32:57,110
I suspect we could just start because

680
00:32:55,880 --> 00:32:59,809
we're now we're using the layout

681
00:32:57,109 --> 00:33:02,000
location syntax because we are requiring

682
00:32:59,808 --> 00:33:04,908
three three we could actually use that

683
00:33:02,000 --> 00:33:08,119
for the samplers as well at which point

684
00:33:04,909 --> 00:33:09,350
I believe we wouldn't have to do any of

685
00:33:08,119 --> 00:33:12,349
this nonsense anymore

686
00:33:09,349 --> 00:33:15,319
so for example I think you can just

687
00:33:12,349 --> 00:33:22,730
avoid any of this I think you can just

688
00:33:15,319 --> 00:33:27,558
say that sort of thing right where if

689
00:33:22,730 --> 00:33:29,390
you want to just specify once you've got

690
00:33:27,558 --> 00:33:32,509
once you move up to this level open gel

691
00:33:29,390 --> 00:33:34,340
you don't actually have to bind any of

692
00:33:32,509 --> 00:33:36,500
these things that way at all right that

693
00:33:34,339 --> 00:33:37,970
stuff just goes away and you don't have

694
00:33:36,500 --> 00:33:42,079
to query anything anymore which is

695
00:33:37,970 --> 00:33:43,880
really nice right it's just a much it's

696
00:33:42,079 --> 00:33:45,408
a far superior system and before I

697
00:33:43,880 --> 00:33:47,090
thought we were going to do anything

698
00:33:45,409 --> 00:33:48,169
interesting with shaders I was like well

699
00:33:47,089 --> 00:33:49,668
I don't want to go down that road

700
00:33:48,169 --> 00:33:51,980
because that we will require a higher

701
00:33:49,669 --> 00:33:53,778
open level bokken shell but since we're

702
00:33:51,980 --> 00:33:55,759
doing nutso stuff in our shaders now

703
00:33:53,778 --> 00:33:59,659
which is always the way writes to

704
00:33:55,759 --> 00:34:05,929
seductive there's really no reason not

705
00:33:59,659 --> 00:34:08,030
to do it this way right so I think we

706
00:34:05,929 --> 00:34:09,829
could also do it that way and if we did

707
00:34:08,030 --> 00:34:13,010
it that way then when you did OpenGL

708
00:34:09,829 --> 00:34:14,869
create program and got the program back

709
00:34:13,010 --> 00:34:17,149
the only thing you would need is the

710
00:34:14,869 --> 00:34:19,159
program which is kind of nice you don't

711
00:34:17,148 --> 00:34:21,259
need to store anything else and then all

712
00:34:19,159 --> 00:34:24,349
this garbage goes away because you only

713
00:34:21,260 --> 00:34:26,030
have OpenGL program common and OpenGL

714
00:34:24,349 --> 00:34:29,510
program common can just be handled the

715
00:34:26,030 --> 00:34:32,740
same for everybody right so that's just

716
00:34:29,510 --> 00:34:32,740
nice right

717
00:34:36,590 --> 00:34:41,059
so we could try to get that vet working

718
00:34:38,418 --> 00:34:43,369
this way you know sure why not

719
00:34:41,059 --> 00:34:46,190
so if we were going to do that then what

720
00:34:43,369 --> 00:34:48,739
we do is when we do compiled depth feel

721
00:34:46,190 --> 00:34:53,690
to lighting what we do here is we just

722
00:34:48,739 --> 00:34:57,229
say OpenGL program common and take that

723
00:34:53,690 --> 00:35:05,420
result and so that's that's really it

724
00:34:57,230 --> 00:35:08,960
all right so let's move along here oops

725
00:35:05,420 --> 00:35:13,159
I did I accidentally I did actually

726
00:35:08,960 --> 00:35:15,099
believe that I bad so now we just need

727
00:35:13,159 --> 00:35:17,569
to actually call that compilation phase

728
00:35:15,099 --> 00:35:19,429
so let's go ahead and do that we need a

729
00:35:17,570 --> 00:35:22,100
place to store it so I'll throw that in

730
00:35:19,429 --> 00:35:26,210
here OpenGL program common this would be

731
00:35:22,099 --> 00:35:30,730
desk peel lighting and then what we can

732
00:35:26,210 --> 00:35:32,539
do is we can and one of the things so

733
00:35:30,730 --> 00:35:35,090
maybe I'll show this today too

734
00:35:32,539 --> 00:35:37,489
if we can get that location syntax

735
00:35:35,090 --> 00:35:39,980
working nicely the other thing we can do

736
00:35:37,489 --> 00:35:43,369
is is simplify a lot of this code as

737
00:35:39,980 --> 00:35:45,650
well which would be really nice for a

738
00:35:43,369 --> 00:35:47,239
number of reasons because a lot of stuff

739
00:35:45,650 --> 00:35:49,730
we have been doing is because we didn't

740
00:35:47,239 --> 00:35:52,039
have the option of doing sort of

741
00:35:49,730 --> 00:35:54,980
something nicer with the commonality

742
00:35:52,039 --> 00:35:56,509
stuff so we could actually we could

743
00:35:54,980 --> 00:35:58,940
actually do something pretty interesting

744
00:35:56,510 --> 00:36:02,210
here in a second as well so let's do a

745
00:35:58,940 --> 00:36:05,960
desk appeal to lighting here with a free

746
00:36:02,210 --> 00:36:12,550
program and then we'll do compiled just

747
00:36:05,960 --> 00:36:12,550
appeal to lighting so

748
00:36:20,768 --> 00:36:30,618
oops don't need common cuz there is no

749
00:36:24,440 --> 00:36:36,499
such thing and then off we go

750
00:36:30,619 --> 00:36:39,890
right so essentially what that's going

751
00:36:36,498 --> 00:36:44,778
to do if it works properly is we

752
00:36:39,889 --> 00:36:47,838
wouldn't have to ever say anything other

753
00:36:44,778 --> 00:36:49,190
than texture zero one two three we

754
00:36:47,838 --> 00:36:51,349
wouldn't have to query the location of

755
00:36:49,190 --> 00:36:52,940
those or anything else and the reason

756
00:36:51,349 --> 00:36:55,999
for that is just because now that we've

757
00:36:52,940 --> 00:36:59,630
specified the location in here that

758
00:36:55,998 --> 00:37:00,919
location syntax will say that zero one

759
00:36:59,630 --> 00:37:03,680
two three is where you get these from

760
00:37:00,920 --> 00:37:06,680
and like I said I believe you can do

761
00:37:03,679 --> 00:37:08,838
that but don't quote me on that because

762
00:37:06,679 --> 00:37:12,129
I maybe have that syntax wrong so let's

763
00:37:08,838 --> 00:37:12,130
see if we can get that working now

764
00:37:13,298 --> 00:37:21,458
surface reflects sample that is a typo

765
00:37:17,889 --> 00:37:30,288
supposed to be surface reflect sampler

766
00:37:21,458 --> 00:37:46,179
what else we got that 160 is the

767
00:37:30,289 --> 00:37:46,180
conversion where is that happening yeah

768
00:37:46,900 --> 00:37:52,660
[Applause]

769
00:37:48,489 --> 00:37:52,659
all right let's see if that's any better

770
00:37:56,199 --> 00:38:04,730
okay uh not great all right I admit that

771
00:38:02,059 --> 00:38:06,259
this is not looking fabulous if we if

772
00:38:04,730 --> 00:38:09,460
we're honest with ourselves right

773
00:38:06,260 --> 00:38:13,400
there's not the look we were looking for

774
00:38:09,460 --> 00:38:17,210
so let's so one thing I don't know is

775
00:38:13,400 --> 00:38:20,329
whether this syntax is good all right

776
00:38:17,210 --> 00:38:25,659
here let's take a quick look at the GLSL

777
00:38:20,329 --> 00:38:27,980
specification just to see what we are

778
00:38:25,659 --> 00:38:30,559
supposed to be able to do here and how

779
00:38:27,980 --> 00:38:34,309
we're supposed to be able to announce

780
00:38:30,559 --> 00:38:37,759
where these samplers go so that we don't

781
00:38:34,309 --> 00:38:40,210
have to do that finding anymore let's

782
00:38:37,760 --> 00:38:40,210
take a look

783
00:38:49,079 --> 00:38:55,139
this is 1.5 let me see here

784
00:38:55,460 --> 00:38:58,610
[Applause]

785
00:39:15,710 --> 00:39:20,690
so I'm not sure if there is one of these

786
00:39:30,650 --> 00:39:35,139
I just want

787
00:39:42,219 --> 00:39:51,368
here we go I just want to know how

788
00:39:48,010 --> 00:39:52,290
layout qualifiers will work with

789
00:39:51,369 --> 00:39:55,380
samplers

790
00:39:52,289 --> 00:39:55,380
[Music]

791
00:40:15,710 --> 00:40:19,880
so let's see

792
00:40:36,590 --> 00:40:42,200
none of this is particularly relevant to

793
00:40:39,869 --> 00:40:42,199
us

794
00:40:57,460 --> 00:41:02,230
let's see if they say anything in here

795
00:41:03,909 --> 00:41:07,149
they don't

796
00:41:42,219 --> 00:41:49,659
so I want lips

797
00:41:59,309 --> 00:42:06,639
here we go I'm surface of the location

798
00:42:04,989 --> 00:42:09,009
the GL comes to where an object is sort

799
00:42:06,639 --> 00:42:12,279
of these binding points okay so the only

800
00:42:09,010 --> 00:42:17,230
question is core in version 4.5 that's

801
00:42:12,280 --> 00:42:26,019
not useful so we may not be able to do

802
00:42:17,230 --> 00:42:28,780
that right because this is this is for

803
00:42:26,019 --> 00:42:32,050
which we don't require anywhere else so

804
00:42:28,780 --> 00:42:35,800
it looks like we will not be able to use

805
00:42:32,050 --> 00:42:38,920
that right that's too bad

806
00:42:35,800 --> 00:42:41,230
like I said opengl 4.5 is actually

807
00:42:38,920 --> 00:42:46,900
pretty good the open jill's before that

808
00:42:41,230 --> 00:42:49,269
not so good and so I never am really I'm

809
00:42:46,900 --> 00:42:52,000
always a little unsure as to what I can

810
00:42:49,269 --> 00:42:54,009
use on handmade hero that falls within

811
00:42:52,000 --> 00:42:56,199
that line we probably should have just

812
00:42:54,010 --> 00:42:58,660
said let's use opengl 4.5 and then use

813
00:42:56,199 --> 00:43:00,489
the software renderer if you don't have

814
00:42:58,659 --> 00:43:01,829
it or something like that that probably

815
00:43:00,489 --> 00:43:07,089
would have been the smart thing to do

816
00:43:01,829 --> 00:43:09,730
but oh well so anyway that does mean

817
00:43:07,090 --> 00:43:11,800
that we need to continue down continue

818
00:43:09,730 --> 00:43:17,670
doing what we were doing before which is

819
00:43:11,800 --> 00:43:17,670
to make these things all 100% explicit

820
00:43:18,269 --> 00:43:26,739
which is fine we could try to make

821
00:43:21,400 --> 00:43:30,940
program common roll this up and maybe I

822
00:43:26,739 --> 00:43:33,009
will try to do that because that there's

823
00:43:30,940 --> 00:43:35,170
ways we could make this work right so in

824
00:43:33,010 --> 00:43:37,570
OpenGL program comp common for example

825
00:43:35,170 --> 00:43:40,740
what I could do is if has a CGI u ik

826
00:43:37,570 --> 00:43:42,910
here which is just like samplers and

827
00:43:40,739 --> 00:43:44,469
then what you could do is have a thing

828
00:43:42,909 --> 00:43:47,199
that says well how many of them are

829
00:43:44,469 --> 00:43:50,379
there and we know that we can't have

830
00:43:47,199 --> 00:43:51,849
more than let's say 16 in any of our

831
00:43:50,380 --> 00:43:56,050
current things because we definitely

832
00:43:51,849 --> 00:43:57,489
don't get up anywhere above that so if

833
00:43:56,050 --> 00:43:59,740
we just said well there's a sampler

834
00:43:57,489 --> 00:44:02,439
account and there's some number of

835
00:43:59,739 --> 00:44:04,509
samplers then when you do open jill

836
00:44:02,440 --> 00:44:06,550
program common you would just set that

837
00:44:04,510 --> 00:44:10,010
sample account and it would

838
00:44:06,550 --> 00:44:17,119
automatically just query them in

839
00:44:10,010 --> 00:44:19,190
kind of of uniform way right and and

840
00:44:17,119 --> 00:44:21,140
then that way when during shutdown or

841
00:44:19,190 --> 00:44:22,789
whatever you would during vine time

842
00:44:21,139 --> 00:44:25,099
rather you wouldn't have to write a

843
00:44:22,789 --> 00:44:26,659
separate binder for each of these you

844
00:44:25,099 --> 00:44:28,460
could always just use the same binding

845
00:44:26,659 --> 00:44:32,239
because it would just loop through the

846
00:44:28,460 --> 00:44:34,280
samplers and bind them in order right so

847
00:44:32,239 --> 00:44:36,319
we could try something like that if we

848
00:44:34,280 --> 00:44:40,100
did something like that then we could

849
00:44:36,320 --> 00:44:43,640
get rid of the sampler bindings and the

850
00:44:40,099 --> 00:44:46,940
way we would do this I guess is when we

851
00:44:43,639 --> 00:44:51,730
do the create program common you would

852
00:44:46,940 --> 00:45:02,119
just do where's that let's see

853
00:44:51,730 --> 00:45:04,250
pile here it is so when you do OpenGL

854
00:45:02,119 --> 00:45:07,400
create program and it's going through

855
00:45:04,250 --> 00:45:09,170
all the results like it does here what

856
00:45:07,400 --> 00:45:12,920
you would probably do here is you just

857
00:45:09,170 --> 00:45:18,380
pass the texture handles the texture

858
00:45:12,920 --> 00:45:21,079
names as like a series of extras or

859
00:45:18,380 --> 00:45:23,570
something like this or maybe you just do

860
00:45:21,079 --> 00:45:28,730
this right so after you do OpenGL create

861
00:45:23,570 --> 00:45:32,480
program that process would then do

862
00:45:28,730 --> 00:45:37,300
something like result sampler count

863
00:45:32,480 --> 00:45:43,900
equals zero and then you could do by our

864
00:45:37,300 --> 00:45:46,789
OpenGL or just combine samplers or I

865
00:45:43,900 --> 00:45:49,250
guess link samplers maybe is the right

866
00:45:46,789 --> 00:45:52,690
way to do it and then you could just say

867
00:45:49,250 --> 00:45:59,119
well let's suppose that I have an OpenGL

868
00:45:52,690 --> 00:46:02,139
program common and then let's just say I

869
00:45:59,119 --> 00:46:02,140
have samplers

870
00:46:05,199 --> 00:46:14,460
[Applause]

871
00:46:10,579 --> 00:46:18,840
and they'll do it like that we could do

872
00:46:14,460 --> 00:46:20,909
it in even an easier way and let's do it

873
00:46:18,840 --> 00:46:34,410
this way since it's kind of nutso but

874
00:46:20,909 --> 00:46:37,289
let's just do it this way since this is

875
00:46:34,409 --> 00:46:38,699
only done I basically when you start up

876
00:46:37,289 --> 00:46:41,039
the render and isn't something that

877
00:46:38,699 --> 00:46:43,019
speed intensive at all what I could do

878
00:46:41,039 --> 00:46:44,610
is just say like look you can just call

879
00:46:43,019 --> 00:46:47,400
this function and just pass them at the

880
00:46:44,610 --> 00:46:50,280
end of the function then what we'll do

881
00:46:47,400 --> 00:46:55,680
is we'll say all right let's make an

882
00:46:50,280 --> 00:47:12,360
array of sampler names that just has all

883
00:46:55,679 --> 00:47:26,119
these in it and then what we'll do is

884
00:47:12,360 --> 00:47:31,789
we'll go okay well loop over those and

885
00:47:26,119 --> 00:47:31,789
what we'll do is every time we get one

886
00:47:34,219 --> 00:47:41,519
this isn't snow we will bind that

887
00:47:39,000 --> 00:47:45,090
sampler on the end of the list of

888
00:47:41,519 --> 00:47:49,469
samplers now the way we need to do that

889
00:47:45,090 --> 00:47:55,170
here you can if they can see is we need

890
00:47:49,469 --> 00:47:57,750
to do we get unit loops get uniform

891
00:47:55,170 --> 00:47:59,960
location we need to do something like

892
00:47:57,750 --> 00:47:59,960
this

893
00:48:02,320 --> 00:48:07,960
so what we're going to do is we're going

894
00:48:04,219 --> 00:48:07,959
to get this the sampler ID back

895
00:48:15,039 --> 00:48:20,090
bypassing the name there like so and

896
00:48:18,170 --> 00:48:23,269
when we get the fans're ID back what we

897
00:48:20,090 --> 00:48:25,880
want to do is we want to see if it was

898
00:48:23,269 --> 00:48:27,170
valid as well right because if it's not

899
00:48:25,880 --> 00:48:29,740
valid then we don't want to bother

900
00:48:27,170 --> 00:48:32,059
binding it probably well maybe we do

901
00:48:29,739 --> 00:48:34,159
because maybe you want holes in the list

902
00:48:32,059 --> 00:48:35,840
so hard to say so what we'll do is just

903
00:48:34,159 --> 00:48:38,299
say if you gave us the name will store

904
00:48:35,840 --> 00:48:50,329
the value so then we do is we say all

905
00:48:38,300 --> 00:48:53,810
right the sampler count will store that

906
00:48:50,329 --> 00:48:55,340
into the program itself right so this

907
00:48:53,809 --> 00:48:57,320
basically just builds up a list there

908
00:48:55,340 --> 00:49:04,220
and what we can do too is we can always

909
00:48:57,320 --> 00:49:08,570
assert that the sampler count that we've

910
00:49:04,219 --> 00:49:14,449
got is less than how far out you know

911
00:49:08,570 --> 00:49:16,250
much room we have to store it so we know

912
00:49:14,449 --> 00:49:17,899
we don't actually overflow by you know

913
00:49:16,250 --> 00:49:21,380
creating too small a room or something

914
00:49:17,900 --> 00:49:23,210
so there's our sampler linking and so

915
00:49:21,380 --> 00:49:25,430
what that means is now you know every

916
00:49:23,210 --> 00:49:28,369
one of these things we wanted to could

917
00:49:25,429 --> 00:49:31,250
use that sampler linking let's go ahead

918
00:49:28,369 --> 00:49:40,429
and skip this part of the process for

919
00:49:31,250 --> 00:49:43,940
now so for example let's just go ahead

920
00:49:40,429 --> 00:49:44,919
and and if you're this out for the

921
00:49:43,940 --> 00:49:48,090
moment

922
00:49:44,920 --> 00:49:48,090
[Applause]

923
00:49:48,949 --> 00:49:59,329
here we go one star - Minnie I've

924
00:49:57,949 --> 00:50:04,089
already got the array bracket on there

925
00:49:59,329 --> 00:50:04,090
so I don't mean that there we go uh and

926
00:50:05,889 --> 00:50:15,319
it's a frog handle frog handle let's

927
00:50:09,230 --> 00:50:16,789
split handle man all right and so this

928
00:50:15,320 --> 00:50:19,460
should just be what we had running

929
00:50:16,789 --> 00:50:21,980
before right and it is so let's go ahead

930
00:50:19,460 --> 00:50:24,769
and get all the rest of those of our

931
00:50:21,980 --> 00:50:27,769
samplers of our programs working through

932
00:50:24,769 --> 00:50:28,880
this way of getting the samplers so that

933
00:50:27,769 --> 00:50:32,329
we don't have to worry about that

934
00:50:28,880 --> 00:50:35,630
anymore right so what that would mean is

935
00:50:32,329 --> 00:50:37,819
when we do use program begin we no

936
00:50:35,630 --> 00:50:40,220
longer have to do any of these texture

937
00:50:37,820 --> 00:50:43,039
sampler depth sampler nonsenses right

938
00:50:40,219 --> 00:50:53,709
that stuff goes away and what we can do

939
00:50:43,039 --> 00:50:53,710
is just say all right here these are all

940
00:50:53,769 --> 00:51:03,500
unnecessary at this point right yeah I

941
00:51:01,789 --> 00:51:09,949
think these are all unnecessary so like

942
00:51:03,500 --> 00:51:10,679
this goes away this goes away all of

943
00:51:09,949 --> 00:51:13,849
these go away

944
00:51:10,679 --> 00:51:13,849
[Music]

945
00:51:16,880 --> 00:51:31,960
basically everything that was a sampler

946
00:51:21,440 --> 00:51:36,200
goes away so all of these go away right

947
00:51:31,960 --> 00:51:38,179
and we're just left with things that

948
00:51:36,199 --> 00:51:42,818
actually are data going into the program

949
00:51:38,179 --> 00:51:48,348
everything else is at that point gone

950
00:51:42,818 --> 00:51:50,389
yeah so now and we can get rid of them

951
00:51:48,349 --> 00:51:54,920
here as well right so in device program

952
00:51:50,389 --> 00:52:07,739
the samplers go away they're San Frisco

953
00:51:54,920 --> 00:52:09,940
Bay here the samplers go away here here

954
00:52:07,739 --> 00:52:11,478
[Music]

955
00:52:09,940 --> 00:52:13,309
there we go

956
00:52:11,478 --> 00:52:16,608
and now I should be able to kind of just

957
00:52:13,309 --> 00:52:23,900
clean this up via errors so what we do

958
00:52:16,608 --> 00:52:27,828
now is we say OpenGL link samplers

959
00:52:23,900 --> 00:52:36,710
we pass the program that we're dealing

960
00:52:27,829 --> 00:52:43,190
with here which is this one and then we

961
00:52:36,710 --> 00:52:47,838
have just the list of names so it's not

962
00:52:43,190 --> 00:52:50,929
as good as that location binding syntax

963
00:52:47,838 --> 00:52:52,838
would have been but it's definitely

964
00:52:50,929 --> 00:52:57,889
better than having to do this every time

965
00:52:52,838 --> 00:53:02,748
I so you know that's the that's a nice

966
00:52:57,889 --> 00:53:04,998
nicety and maybe you know I'll we'll see

967
00:53:02,748 --> 00:53:08,268
other people are more well-versed in

968
00:53:04,998 --> 00:53:10,159
opengl 3.0 x than i am

969
00:53:08,268 --> 00:53:11,868
it may still be that there is a way to

970
00:53:10,159 --> 00:53:16,838
do what we wanted to do so we'll wait

971
00:53:11,869 --> 00:53:18,170
for people to to chime in about that

972
00:53:16,838 --> 00:53:21,318
later

973
00:53:18,170 --> 00:53:24,139
we may be able to get rid of the this

974
00:53:21,318 --> 00:53:27,288
part as well but even if we can't again

975
00:53:24,139 --> 00:53:29,058
this ends up not being so bad because at

976
00:53:27,289 --> 00:53:29,600
least now it will be handled in a

977
00:53:29,059 --> 00:53:31,240
relative

978
00:53:29,599 --> 00:53:35,480
and you'll have to pardon the pun

979
00:53:31,239 --> 00:53:37,219
uniform fashion so we won't have to keep

980
00:53:35,480 --> 00:53:39,829
writing the code every time all we have

981
00:53:37,219 --> 00:53:56,059
to do is just say what the names are and

982
00:53:39,829 --> 00:54:07,849
that's it so let's put that down here

983
00:53:56,059 --> 00:54:18,889
and then the rest of these come up there

984
00:54:07,849 --> 00:54:21,190
we go and a couple more times for good

985
00:54:18,889 --> 00:54:21,190
measure

986
00:54:25,440 --> 00:54:33,750
[Applause]

987
00:54:28,550 --> 00:54:40,350
nothing there so it's just these OpenGL

988
00:54:33,750 --> 00:55:29,130
link samplers this is the new one here

989
00:54:40,349 --> 00:55:30,980
they are and two more to go last one all

990
00:55:29,130 --> 00:55:40,909
right

991
00:55:30,980 --> 00:55:40,909
[Applause]

992
00:55:42,260 --> 00:55:48,120
so I think now we've got all of that

993
00:55:44,579 --> 00:55:51,719
stuff worked out oops

994
00:55:48,119 --> 00:55:53,869
oh I removed string names there there we

995
00:55:51,719 --> 00:55:53,869
go

996
00:55:57,000 --> 00:56:04,500
but now all that should be fine and what

997
00:56:00,090 --> 00:56:06,539
we want to do now is just say when we go

998
00:56:04,500 --> 00:56:09,539
to do because I'm assuming that if we

999
00:56:06,539 --> 00:56:13,230
ran it we wouldn't get anything or we

1000
00:56:09,539 --> 00:56:14,759
get something weird which is true what

1001
00:56:13,230 --> 00:56:18,300
we want to do now is when we do youth

1002
00:56:14,760 --> 00:56:22,080
program begin the common begin has to

1003
00:56:18,300 --> 00:56:23,640
loop through and set these right so when

1004
00:56:22,079 --> 00:56:25,469
we come through here and we set up like

1005
00:56:23,639 --> 00:56:27,449
the arrays for example we then have to

1006
00:56:25,469 --> 00:56:29,399
come through and do the same thing for

1007
00:56:27,449 --> 00:56:32,159
our samplers so we just have to do

1008
00:56:29,400 --> 00:56:37,019
sampler index equals zero sampler index

1009
00:56:32,159 --> 00:56:42,659
is less than the program sampler count

1010
00:56:37,019 --> 00:56:48,960
and then each one of these there's going

1011
00:56:42,659 --> 00:56:55,019
to be a GL uniform one eye that will be

1012
00:56:48,960 --> 00:56:57,659
whatever the program samplers value is

1013
00:56:55,019 --> 00:57:01,489
here goes to just put the new miracle

1014
00:56:57,659 --> 00:57:03,719
sampler index I think that's all we need

1015
00:57:01,489 --> 00:57:12,109
and it looks like we're back to normal

1016
00:57:03,719 --> 00:57:12,109
now let's check the game render as well

1017
00:57:12,260 --> 00:57:19,220
by turning off that sort of debug

1018
00:57:15,960 --> 00:57:19,220
lighting render

1019
00:57:22,659 --> 00:57:25,798
that's pretty awesome

1020
00:57:31,340 --> 00:57:40,970
that's like the depth value is what

1021
00:57:35,420 --> 00:57:41,630
we're seeing now is that that's the

1022
00:57:40,969 --> 00:57:45,319
result

1023
00:57:41,630 --> 00:57:48,349
I assume of the mistake I just of the

1024
00:57:45,320 --> 00:57:54,970
port I just made is we get to view the

1025
00:57:48,349 --> 00:57:58,779
depth buffer I didn't expect that but

1026
00:57:54,969 --> 00:57:58,779
it's pretty darn cool

1027
00:57:59,530 --> 00:58:03,890
either that or it's just some fogging or

1028
00:58:01,789 --> 00:58:09,079
something anyway let's go ahead and fix

1029
00:58:03,889 --> 00:58:13,279
that that house really cool I'm a stand

1030
00:58:09,079 --> 00:58:17,049
of viewing the death buffer so let's go

1031
00:58:13,280 --> 00:58:20,900
ahead and and just clean that up there

1032
00:58:17,050 --> 00:58:22,580
see if we can fix that although I really

1033
00:58:20,900 --> 00:58:26,030
do like it so it's unfortunately we have

1034
00:58:22,579 --> 00:58:32,179
to fix it but what we want to do here is

1035
00:58:26,030 --> 00:58:35,720
just figure out where that what was

1036
00:58:32,179 --> 00:58:38,449
going wrong there so in here we've got

1037
00:58:35,719 --> 00:58:40,339
are we still in our Z bias program are

1038
00:58:38,449 --> 00:58:49,039
we still doing things reasonably let me

1039
00:58:40,340 --> 00:58:51,019
just take a look so we're writing out

1040
00:58:49,039 --> 00:58:57,320
the surface reflectance to blending at

1041
00:58:51,019 --> 00:58:59,030
zero when we resolve we're going to be

1042
00:58:57,320 --> 00:59:01,760
resolving that so the surface

1043
00:58:59,030 --> 00:59:03,830
reflectance should be should be the

1044
00:59:01,760 --> 00:59:07,190
right color should be the correct color

1045
00:59:03,829 --> 00:59:12,309
there so I'm not sure why we're getting

1046
00:59:07,190 --> 00:59:12,309
that issue

1047
00:59:25,969 --> 00:59:31,379
let me just verify that texture sampler

1048
00:59:29,460 --> 00:59:34,079
and depth sensor go in this order

1049
00:59:31,380 --> 00:59:44,550
because I don't actually know what order

1050
00:59:34,079 --> 00:59:50,549
they do go in when do we actually use

1051
00:59:44,550 --> 00:59:55,140
the Z bias just see right here so

1052
00:59:50,550 --> 00:59:58,320
texture one is the depth handle so that

1053
00:59:55,139 --> 01:00:03,210
should be there yeah so I'm not sure

1054
00:59:58,320 --> 01:00:10,289
what's going on with that and the

1055
01:00:03,210 --> 01:00:14,039
texture sampler should be correct one

1056
01:00:10,289 --> 01:00:15,599
now I don't know maybe I don't feel like

1057
01:00:14,039 --> 01:00:20,279
I should have to do an if on the death

1058
01:00:15,599 --> 01:00:22,920
feel though I feel like it should work

1059
01:00:20,280 --> 01:00:26,480
to have the set either way because there

1060
01:00:22,920 --> 01:00:26,480
isn't going to be a second sampler

1061
01:00:28,280 --> 01:00:33,200
[Applause]

1062
01:00:29,719 --> 01:00:33,199
either way

1063
01:00:37,360 --> 01:00:41,530
so I'm not sure where that's coming from

1064
01:00:52,000 --> 01:00:55,099
[Applause]

1065
01:00:59,108 --> 01:01:11,900
hmm I am Not sure so here's what I'm

1066
01:01:08,539 --> 01:01:14,570
going to start with just because I'm not

1067
01:01:11,900 --> 01:01:17,660
sure who is at fault so in order to

1068
01:01:14,570 --> 01:01:19,880
pinpoint where the error crept in I'm

1069
01:01:17,659 --> 01:01:22,819
going to just start by switching what

1070
01:01:19,880 --> 01:01:25,608
I'm writing out so I want to see whether

1071
01:01:22,820 --> 01:01:27,829
I'm failing to fetch a texture here so

1072
01:01:25,608 --> 01:01:30,769
in the blend unit color I'm just going

1073
01:01:27,829 --> 01:01:32,660
to write instead of writing out surface

1074
01:01:30,769 --> 01:01:39,320
reflect I'm going to write out a bogus

1075
01:01:32,659 --> 01:01:42,078
value which is just all red and the

1076
01:01:39,320 --> 01:01:46,820
mouth of one so I should just see a red

1077
01:01:42,079 --> 01:01:50,089
screen right and I don't so basically

1078
01:01:46,820 --> 01:01:53,599
that tells me that at least if this it

1079
01:01:50,088 --> 01:02:01,369
function is wrong it's not wrong in the

1080
01:01:53,599 --> 01:02:03,050
sense that that it's the sole course of

1081
01:02:01,369 --> 01:02:07,519
the cause of the problem for example

1082
01:02:03,050 --> 01:02:09,500
right so something is going wrong a step

1083
01:02:07,519 --> 01:02:15,199
further so like in the compositing phase

1084
01:02:09,500 --> 01:02:19,940
or something like this so let's take a

1085
01:02:15,199 --> 01:02:23,000
look at this one in a little more detail

1086
01:02:19,940 --> 01:02:25,068
here so let's see what happens if if

1087
01:02:23,000 --> 01:02:27,409
from here where I'm going to write this

1088
01:02:25,068 --> 01:02:32,509
out let's see if the blend unit color

1089
01:02:27,409 --> 01:02:35,529
RGB let's see if I stuff that with a red

1090
01:02:32,510 --> 01:02:35,530
what do I get

1091
01:02:36,579 --> 01:02:47,150
all right so now I get full red so it

1092
01:02:42,079 --> 01:02:50,869
looks like somehow my peel sampler is

1093
01:02:47,150 --> 01:02:55,789
sampling things oddly I guess I'm not

1094
01:02:50,869 --> 01:02:58,990
sure because if these peel samplers were

1095
01:02:55,789 --> 01:03:01,730
sampling properly from the depth peel oh

1096
01:02:58,989 --> 01:03:03,949
well you know what no it could be the

1097
01:03:01,730 --> 01:03:06,730
resolve as well so the resolve happens

1098
01:03:03,949 --> 01:03:06,730
in between there

1099
01:03:06,920 --> 01:03:14,280
so this where we have color and pl depth

1100
01:03:10,170 --> 01:03:16,590
this could be the problem as well so

1101
01:03:14,280 --> 01:03:17,970
let's see what order these are in I

1102
01:03:16,590 --> 01:03:19,050
think they're actually I think that's

1103
01:03:17,969 --> 01:03:20,250
what's happening I think these are in

1104
01:03:19,050 --> 01:03:27,570
the wrong order I think that's supposed

1105
01:03:20,250 --> 01:03:28,949
to actually be like that yeah alright so

1106
01:03:27,570 --> 01:03:31,710
now we're back to normal

1107
01:03:28,949 --> 01:03:32,899
everyone's happy and smiling and that's

1108
01:03:31,710 --> 01:03:39,349
just great

1109
01:03:32,900 --> 01:03:44,730
okay so now my I guess my question is

1110
01:03:39,349 --> 01:03:47,960
where we've got that location syntax

1111
01:03:44,730 --> 01:03:52,920
happening I wonder if we can remove

1112
01:03:47,960 --> 01:03:54,840
things like you know like these values

1113
01:03:52,920 --> 01:03:56,430
by specifying where is the they go as

1114
01:03:54,840 --> 01:03:58,200
well because if we could then we could

1115
01:03:56,429 --> 01:03:59,639
get rid of a lot of these entirely now

1116
01:03:58,199 --> 01:04:02,159
as it is we can get rid of quite a few

1117
01:03:59,639 --> 01:04:04,889
of them which is nice but I'm wondering

1118
01:04:02,159 --> 01:04:06,869
if we could get rid of them all so for

1119
01:04:04,889 --> 01:04:10,829
example I can start getting rid of these

1120
01:04:06,869 --> 01:04:14,969
a little bit by saying that the peel

1121
01:04:10,829 --> 01:04:22,110
composite program is now just an OpenGL

1122
01:04:14,969 --> 01:04:29,219
program common so that goes away the

1123
01:04:22,110 --> 01:04:38,640
final stretch program same thing and the

1124
01:04:29,219 --> 01:04:41,959
multigrid light up so again I'm just

1125
01:04:38,639 --> 01:04:44,549
taking some time to simplify this down

1126
01:04:41,960 --> 01:04:54,409
so let's go ahead and do that so we

1127
01:04:44,550 --> 01:04:54,410
really don't need that or that or that

1128
01:05:00,989 --> 01:05:04,319
[Applause]

1129
01:05:06,360 --> 01:05:14,559
[Applause]

1130
01:05:10,980 --> 01:05:17,099
so again that becomes much simpler which

1131
01:05:14,559 --> 01:05:17,099
is really nice

1132
01:05:17,559 --> 01:05:26,489
same thing here actually I can say that

1133
01:05:27,150 --> 01:05:48,309
[Applause]

1134
01:05:33,510 --> 01:05:50,590
and painting it okay and so now when

1135
01:05:48,309 --> 01:05:55,000
we're doing these fries anything that

1136
01:05:50,590 --> 01:05:58,860
was previously calling common that

1137
01:05:55,000 --> 01:05:58,860
doesn't need to call common there we go

1138
01:06:07,309 --> 01:06:16,679
very nice uh and I think we're still

1139
01:06:11,519 --> 01:06:19,860
fine yeah uh so the question I have

1140
01:06:16,679 --> 01:06:25,519
there again is can we go even further

1141
01:06:19,860 --> 01:06:25,519
with that right can we also get rid of

1142
01:06:26,960 --> 01:06:31,829
sort of the the unnecessary especially

1143
01:06:30,480 --> 01:06:33,719
on some of these other these ones here

1144
01:06:31,829 --> 01:06:41,159
were like you know there's hardly

1145
01:06:33,719 --> 01:06:43,469
anything getting specified at all you

1146
01:06:41,159 --> 01:06:45,949
know that that would be the sort of

1147
01:06:43,469 --> 01:06:47,939
thing that it would be nice to remove

1148
01:06:45,949 --> 01:06:50,399
because they're just you know they're

1149
01:06:47,940 --> 01:06:52,650
creating cruft that's sitting around for

1150
01:06:50,400 --> 01:06:55,440
no reason so the question is would

1151
01:06:52,650 --> 01:06:57,660
location binding work for these and of

1152
01:06:55,440 --> 01:06:59,490
course I don't know let's take just one

1153
01:06:57,659 --> 01:07:03,980
example which is the result multisample

1154
01:06:59,489 --> 01:07:07,679
program and see what we can do so in

1155
01:07:03,980 --> 01:07:14,579
that case where we've got the resolved

1156
01:07:07,679 --> 01:07:17,279
multi sample program where we do layout

1157
01:07:14,579 --> 01:07:21,739
location equals zero on this for the out

1158
01:07:17,280 --> 01:07:25,530
you know is it possible for us to do a

1159
01:07:21,739 --> 01:07:29,009
layout location zero on that for example

1160
01:07:25,530 --> 01:07:31,230
right could I just say that the sample

1161
01:07:29,010 --> 01:07:33,780
count is going to go at location zero so

1162
01:07:31,230 --> 01:07:38,880
when I set uniform zero that's where

1163
01:07:33,780 --> 01:07:41,220
it's going to be and like I said I don't

1164
01:07:38,880 --> 01:07:44,400
know if that would work but that's what

1165
01:07:41,219 --> 01:07:46,409
I would like to try and so in here where

1166
01:07:44,400 --> 01:07:47,579
we do sample count equals get uniform

1167
01:07:46,409 --> 01:07:48,690
location sample K I'm going to leave

1168
01:07:47,579 --> 01:07:50,360
everything the same it's going to step

1169
01:07:48,690 --> 01:07:54,829
through and see what the result is

1170
01:07:50,360 --> 01:07:57,780
that's all I really want to do there and

1171
01:07:54,829 --> 01:08:04,110
what's that and that is then compiled

1172
01:07:57,780 --> 01:08:07,610
result another sample so if we come down

1173
01:08:04,110 --> 01:08:07,610
here and take a look

1174
01:08:09,088 --> 01:08:16,180
at location zero so now let's see

1175
01:08:12,630 --> 01:08:26,039
whether I can force it to some arbitrary

1176
01:08:16,180 --> 01:08:26,039
location that is not that and I can't

1177
01:08:32,578 --> 01:08:45,768
so it looks like that is not something

1178
01:08:39,538 --> 01:08:49,738
that actually works in this case anyway

1179
01:08:45,769 --> 01:08:55,519
which is a bummer but that's just the

1180
01:08:49,738 --> 01:08:55,518
way it goes sometimes however I suppose

1181
01:09:01,630 --> 01:09:10,690
I guess I'm not sure like if that's not

1182
01:09:05,350 --> 01:09:13,060
what that means like why why is it even

1183
01:09:10,689 --> 01:09:19,048
allowing me to make that specification

1184
01:09:13,060 --> 01:09:23,080
if that isn't what it's going to do is

1185
01:09:19,048 --> 01:09:25,988
that's just like what's the deal or is

1186
01:09:23,079 --> 01:09:28,179
it because do I need to specify maybe I

1187
01:09:25,988 --> 01:09:30,459
maybe I'm a victim of not specifying the

1188
01:09:28,179 --> 01:09:34,088
right shader version here like suppose I

1189
01:09:30,460 --> 01:09:37,710
specified version 3:30 and said location

1190
01:09:34,088 --> 01:09:37,710
equals 8 then what happens

1191
01:09:39,899 --> 01:09:47,289
still not so the uniform location seems

1192
01:09:43,689 --> 01:09:52,419
unaffected by the specification of where

1193
01:09:47,289 --> 01:09:56,139
it's supposed to be like that looks like

1194
01:09:52,420 --> 01:09:58,679
a meaningless thing to specify for all

1195
01:09:56,139 --> 01:10:06,670
intents and purposes right like I see no

1196
01:09:58,679 --> 01:10:09,340
there does not appear to be any there's

1197
01:10:06,670 --> 01:10:14,020
not appear to be any consequence to that

1198
01:10:09,340 --> 01:10:19,840
value unless I'm misunderstanding the

1199
01:10:14,020 --> 01:10:23,800
idea here right which is unfortunate but

1200
01:10:19,840 --> 01:10:25,389
it looks that way anyway all right well

1201
01:10:23,800 --> 01:10:26,619
will we'll address that a little later

1202
01:10:25,389 --> 01:10:28,389
we don't need to get bogged down in

1203
01:10:26,619 --> 01:10:30,039
OpenGL specifics because this again this

1204
01:10:28,389 --> 01:10:32,260
is just toying with OpenGL has nothing

1205
01:10:30,039 --> 01:10:34,689
to do with anything about graphics

1206
01:10:32,260 --> 01:10:39,219
really it's just that the stupid things

1207
01:10:34,689 --> 01:10:41,549
you have to do to get graphics API to do

1208
01:10:39,219 --> 01:10:44,130
the code you want them to do right like

1209
01:10:41,550 --> 01:10:47,469
it's annoying but it's just how it goes

1210
01:10:44,130 --> 01:10:49,389
so let's put that aside for now and go

1211
01:10:47,469 --> 01:10:51,279
back to what we were doing which is more

1212
01:10:49,389 --> 01:10:54,789
what I want to focus on anyway

1213
01:10:51,279 --> 01:10:59,380
which is now if I want to call our def

1214
01:10:54,789 --> 01:11:02,979
peel import stuff here let's try and get

1215
01:10:59,380 --> 01:11:09,639
that working so I'm going to switch back

1216
01:11:02,979 --> 01:11:12,269
on the lighting drawing I don't care

1217
01:11:09,639 --> 01:11:12,270
about this right now

1218
01:11:18,439 --> 01:11:28,309
all right so happily this does appear to

1219
01:11:26,060 --> 01:11:32,210
have imported the lighting values at

1220
01:11:28,310 --> 01:11:42,830
least somewhat right which is what we

1221
01:11:32,210 --> 01:11:46,970
wanted and this is what is this value

1222
01:11:42,829 --> 01:11:49,250
here this is surface reflectance which

1223
01:11:46,970 --> 01:11:52,510
is correct right that's exactly what we

1224
01:11:49,250 --> 01:11:59,210
want to see for surface reflectance here

1225
01:11:52,510 --> 01:12:07,280
and here is surface normal which also is

1226
01:11:59,210 --> 01:12:12,800
looking pretty good right so we have

1227
01:12:07,279 --> 01:12:16,099
plenty of data rendered out now you can

1228
01:12:12,800 --> 01:12:22,090
see how like the surface normals kind of

1229
01:12:16,100 --> 01:12:22,090
like averaged out which is kind of funny

1230
01:12:22,180 --> 01:12:27,380
let's see how the surface the other

1231
01:12:24,550 --> 01:12:32,170
values averaged out there there's the

1232
01:12:27,380 --> 01:12:32,170
surface reflectance and averaging

1233
01:12:39,359 --> 01:12:46,559
and it seems like our averaging process

1234
01:12:41,788 --> 01:12:47,938
is kind of busted which i think means

1235
01:12:46,559 --> 01:12:48,989
we're going to have to be more careful

1236
01:12:47,939 --> 01:12:52,859
about that

1237
01:12:48,988 --> 01:12:55,468
relatively soon but you can see for

1238
01:12:52,859 --> 01:12:57,659
example like if we just look at the

1239
01:12:55,469 --> 01:12:59,969
surface reflectance here there's really

1240
01:12:57,658 --> 01:13:03,058
no way that you should have such a

1241
01:12:59,969 --> 01:13:06,029
discrepancy based on movement

1242
01:13:03,059 --> 01:13:09,719
so our averaging down you know isn't

1243
01:13:06,029 --> 01:13:11,698
great at the moment right it's not and I

1244
01:13:09,719 --> 01:13:14,698
think a lot of that again has to do with

1245
01:13:11,698 --> 01:13:17,038
the uneven sampling so we probably want

1246
01:13:14,698 --> 01:13:18,238
to fix that at some point and try to get

1247
01:13:17,038 --> 01:13:20,518
something that's going to be a more

1248
01:13:18,238 --> 01:13:22,108
reliable down sample because that will

1249
01:13:20,519 --> 01:13:23,668
make our lighting be really inconsistent

1250
01:13:22,109 --> 01:13:30,510
and that's one thing that we're going to

1251
01:13:23,668 --> 01:13:39,689
have to work on for sure okay but

1252
01:13:30,510 --> 01:13:41,878
either/or we are able to do our little

1253
01:13:39,689 --> 01:13:43,949
sphere light here and we are down

1254
01:13:41,878 --> 01:13:47,578
sampling it properly so now we've kind

1255
01:13:43,948 --> 01:13:51,029
of got that part of the lighting that in

1256
01:13:47,578 --> 01:13:53,759
you know kind of impasse working

1257
01:13:51,029 --> 01:13:57,358
correctly and so what we want to do now

1258
01:13:53,760 --> 01:14:00,418
is we want to basically do some work

1259
01:13:57,359 --> 01:14:03,389
with actually bouncing that light around

1260
01:14:00,418 --> 01:14:05,550
and the way that we were going to do

1261
01:14:03,389 --> 01:14:08,550
that at which we haven't played with yet

1262
01:14:05,550 --> 01:14:10,769
right is we have the import phase which

1263
01:14:08,550 --> 01:14:13,409
is really just responsible of converting

1264
01:14:10,769 --> 01:14:15,030
values from the def field system over

1265
01:14:13,408 --> 01:14:16,978
into something the lighting wants to use

1266
01:14:15,029 --> 01:14:19,618
which is basically an unpack right it's

1267
01:14:16,979 --> 01:14:21,809
taking some relatively concise

1268
01:14:19,618 --> 01:14:23,458
information that's packed into 8-bit

1269
01:14:21,809 --> 01:14:25,320
values and it's blowing it out into big

1270
01:14:23,458 --> 01:14:27,389
32-bit values for the iteration process

1271
01:14:25,319 --> 01:14:29,578
we have the upward phase which is doing

1272
01:14:27,389 --> 01:14:31,260
our sort of down sampling it's not very

1273
01:14:29,578 --> 01:14:33,328
good right now like I said that down

1274
01:14:31,260 --> 01:14:34,199
sampling creates some artifacts so I

1275
01:14:33,328 --> 01:14:35,549
think we're going to have some problems

1276
01:14:34,198 --> 01:14:38,188
there and we're going to have to beef up

1277
01:14:35,550 --> 01:14:41,279
what this upward phase does assuming any

1278
01:14:38,189 --> 01:14:43,349
of this lighting stuff works the way it

1279
01:14:41,279 --> 01:14:45,238
does once we sort of get it into a more

1280
01:14:43,349 --> 01:14:46,679
real sense but then we've got the

1281
01:14:45,238 --> 01:14:48,148
downward phase the tower phase is really

1282
01:14:46,679 --> 01:14:49,739
the thing that was supposed to do some

1283
01:14:48,149 --> 01:14:50,939
of the lighting calculations and right

1284
01:14:49,738 --> 01:14:52,209
now isn't doing any lighting

1285
01:14:50,939 --> 01:14:54,100
calculations at all

1286
01:14:52,210 --> 01:14:56,199
all right so what we need to do is make

1287
01:14:54,100 --> 01:14:59,050
this downward lighting phase actually do

1288
01:14:56,199 --> 01:15:02,619
some lighting transport because that is

1289
01:14:59,050 --> 01:15:03,730
the problem with the current thing that

1290
01:15:02,619 --> 01:15:04,988
we're doing which is why it's not

1291
01:15:03,729 --> 01:15:06,879
actually producing any lighting is

1292
01:15:04,988 --> 01:15:08,709
because we're not actually ever running

1293
01:15:06,880 --> 01:15:12,640
the transport equation right all we did

1294
01:15:08,710 --> 01:15:14,649
was get the sort of procedural trappings

1295
01:15:12,640 --> 01:15:17,410
in place to get the data we needed for

1296
01:15:14,649 --> 01:15:19,509
lighting and to have a process we could

1297
01:15:17,409 --> 01:15:21,279
use for lighting but now we have to

1298
01:15:19,510 --> 01:15:24,699
actually put in some lighting equations

1299
01:15:21,279 --> 01:15:26,920
because without those equations we're

1300
01:15:24,699 --> 01:15:28,988
not really using the computational

1301
01:15:26,920 --> 01:15:31,810
framework to produce anything valuable

1302
01:15:28,988 --> 01:15:34,179
that looks anything like lighting would

1303
01:15:31,810 --> 01:15:36,850
look so that's what we want to get

1304
01:15:34,180 --> 01:15:41,440
started on right here so taking a look

1305
01:15:36,850 --> 01:15:43,360
at what we are doing we can get rid of

1306
01:15:41,439 --> 01:15:44,500
this if one it well I guess we'll leave

1307
01:15:43,359 --> 01:15:45,819
it there for now you probably want to

1308
01:15:44,500 --> 01:15:48,399
have some switches we can turn on and

1309
01:15:45,819 --> 01:15:50,889
off dynamically as well at some point

1310
01:15:48,399 --> 01:15:54,189
that would probably a good idea but

1311
01:15:50,890 --> 01:15:55,869
let's go ahead and pop over to the

1312
01:15:54,189 --> 01:15:58,839
actual code for the compute down

1313
01:15:55,869 --> 01:16:04,000
lighting so we can kind of see here this

1314
01:15:58,840 --> 01:16:06,190
is the code multi like down and so the

1315
01:16:04,000 --> 01:16:11,859
way that you can see this working is we

1316
01:16:06,189 --> 01:16:14,379
already did the lighting we already did

1317
01:16:11,859 --> 01:16:17,409
the lighting query so you can see here

1318
01:16:14,380 --> 01:16:19,960
we set ourselves up to sample all of the

1319
01:16:17,409 --> 01:16:23,109
information that we wanted and we sort

1320
01:16:19,960 --> 01:16:24,369
of had you know sampled things nearby

1321
01:16:23,109 --> 01:16:26,439
and the texture and all that other sort

1322
01:16:24,369 --> 01:16:29,619
of stuff but we don't actually do

1323
01:16:26,439 --> 01:16:31,479
anything now with the result right we

1324
01:16:29,619 --> 01:16:35,109
don't actually like we've got this

1325
01:16:31,479 --> 01:16:36,879
transfer light call and what you can see

1326
01:16:35,109 --> 01:16:39,159
is the only thing that transfer light

1327
01:16:36,880 --> 01:16:42,250
does is it just averages the light

1328
01:16:39,159 --> 01:16:45,699
together right which is like completely

1329
01:16:42,250 --> 01:16:47,350
you know non lighting does nothing to do

1330
01:16:45,699 --> 01:16:50,920
with how life should actually be

1331
01:16:47,350 --> 01:16:52,600
behaving so presumably what we would

1332
01:16:50,920 --> 01:16:55,690
like to do here is we would like to do

1333
01:16:52,600 --> 01:16:59,440
something that actually transfers the

1334
01:16:55,689 --> 01:17:01,329
light based on some kind of lighting

1335
01:16:59,439 --> 01:17:03,819
equation of how much light there should

1336
01:17:01,329 --> 01:17:05,738
be flowing from one place to another

1337
01:17:03,819 --> 01:17:08,198
now the

1338
01:17:05,738 --> 01:17:09,759
again the issue here we got to start to

1339
01:17:08,198 --> 01:17:11,229
think about like how we really want to

1340
01:17:09,760 --> 01:17:18,480
do this for real and what I was talking

1341
01:17:11,229 --> 01:17:33,698
about before in terms of the see here

1342
01:17:18,479 --> 01:17:35,049
Milton hello there we go so if you think

1343
01:17:33,698 --> 01:17:36,939
about what's supposed to happen here

1344
01:17:35,050 --> 01:17:38,469
like I was saying there's one point it's

1345
01:17:36,939 --> 01:17:40,689
sort of straightforward way to do it and

1346
01:17:38,469 --> 01:17:43,658
that's a little more costly and

1347
01:17:40,689 --> 01:17:46,089
difficult and then there's one way to do

1348
01:17:43,658 --> 01:17:47,138
it that that was sort of the multigrid

1349
01:17:46,090 --> 01:17:48,460
thing that I think is kind of a

1350
01:17:47,139 --> 01:17:49,690
harebrained scheme but we might have to

1351
01:17:48,460 --> 01:17:54,158
just jettison because I don't know if

1352
01:17:49,689 --> 01:17:56,669
it's even semi plausible but if you

1353
01:17:54,158 --> 01:17:56,670
imagine

1354
01:18:02,659 --> 01:18:07,130
looking at sort of a subdivided space

1355
01:18:04,430 --> 01:18:09,740
here where this is the entire lighting

1356
01:18:07,130 --> 01:18:11,960
information grid let's say at the

1357
01:18:09,739 --> 01:18:15,079
highest resolution so we know stuff like

1358
01:18:11,960 --> 01:18:17,810
oh there is a bright light right here

1359
01:18:15,079 --> 01:18:21,319
like we have that information encoded in

1360
01:18:17,810 --> 01:18:24,650
the bitmap at a very high resolution but

1361
01:18:21,319 --> 01:18:27,019
you know what we can't do is for every

1362
01:18:24,649 --> 01:18:29,000
pixel on the screen we can't step

1363
01:18:27,020 --> 01:18:30,650
through every other pixel in the

1364
01:18:29,000 --> 01:18:35,090
lighting buffer right we can't step

1365
01:18:30,649 --> 01:18:38,029
through 1920 by 1080 light informations

1366
01:18:35,090 --> 01:18:41,180
and calculate whether or not we can see

1367
01:18:38,029 --> 01:18:42,739
that particular light right because in

1368
01:18:41,180 --> 01:18:44,480
order to do that we would have to step

1369
01:18:42,739 --> 01:18:52,250
through all of the stuff and see whether

1370
01:18:44,479 --> 01:18:54,019
we could see it or not and furthermore

1371
01:18:52,250 --> 01:18:56,390
even if we didn't do that we still just

1372
01:18:54,020 --> 01:19:01,040
have way too many to do right so it's

1373
01:18:56,390 --> 01:19:07,130
not feasible whose is a feasible thing

1374
01:19:01,039 --> 01:19:09,590
for us to do at all so if we actually

1375
01:19:07,130 --> 01:19:11,810
imagine looking at a lighting sample and

1376
01:19:09,590 --> 01:19:14,029
we want to do something like figure out

1377
01:19:11,810 --> 01:19:16,430
whether or not we can see particular

1378
01:19:14,029 --> 01:19:20,119
life then what you can imagine us doing

1379
01:19:16,430 --> 01:19:23,090
is sort of a multi resolution query

1380
01:19:20,119 --> 01:19:27,199
where we did something like okay let's

1381
01:19:23,090 --> 01:19:29,960
take each of these four large regions

1382
01:19:27,199 --> 01:19:32,119
let's say and we'll say that the one

1383
01:19:29,960 --> 01:19:34,609
large region we're in maybe will treat

1384
01:19:32,119 --> 01:19:37,970
more specially but say for example this

1385
01:19:34,609 --> 01:19:41,000
large region here let's just assume that

1386
01:19:37,970 --> 01:19:42,949
that large region is only going to give

1387
01:19:41,000 --> 01:19:44,750
one sample so everything in here has

1388
01:19:42,949 --> 01:19:49,039
been averaged together same thing with

1389
01:19:44,750 --> 01:19:50,539
here same thing with here right and then

1390
01:19:49,039 --> 01:19:52,850
we're just going to compute the lighting

1391
01:19:50,539 --> 01:19:54,680
to each of these large regions rather

1392
01:19:52,850 --> 01:19:56,600
than to like every little individual

1393
01:19:54,680 --> 01:20:00,619
thing inside the region right that's

1394
01:19:56,600 --> 01:20:04,880
kind of the idea that we're going for

1395
01:20:00,619 --> 01:20:07,099
here and in order to do that I think

1396
01:20:04,880 --> 01:20:10,340
what we want to write what we would want

1397
01:20:07,100 --> 01:20:12,079
to say is well okay we know that we can

1398
01:20:10,340 --> 01:20:13,179
see each of these regions

1399
01:20:12,079 --> 01:20:16,448
if nothing

1400
01:20:13,179 --> 01:20:18,899
in the way in our smaller region right

1401
01:20:16,448 --> 01:20:21,698
so what we would want to do is take

1402
01:20:18,899 --> 01:20:25,719
sub-samples like here here and here

1403
01:20:21,698 --> 01:20:28,388
of how much sort of blockage there would

1404
01:20:25,719 --> 01:20:30,639
be how much shadowing there would be of

1405
01:20:28,389 --> 01:20:34,900
stuff that comes through it's kind of

1406
01:20:30,639 --> 01:20:36,969
what we want to say right so you can

1407
01:20:34,899 --> 01:20:38,920
imagine this multi-resolution process

1408
01:20:36,969 --> 01:20:43,059
where we want to be able to do that

1409
01:20:38,920 --> 01:20:45,158
basic operation and you know the multi

1410
01:20:43,059 --> 01:20:47,498
grid dreamed here that I cannot accept

1411
01:20:45,158 --> 01:20:49,448
many times as a harebrained scheme so I

1412
01:20:47,498 --> 01:20:52,118
don't honestly believe it's ever going

1413
01:20:49,448 --> 01:20:54,098
to work but the harebrained scheme is

1414
01:20:52,118 --> 01:20:57,009
that we could come up with one kernel

1415
01:20:54,099 --> 01:20:58,659
that you can apply at each step of the

1416
01:20:57,010 --> 01:21:00,909
multi grid that would just propagate

1417
01:20:58,658 --> 01:21:03,819
approximate results of this process down

1418
01:21:00,908 --> 01:21:07,388
so that you only ever did one of these

1419
01:21:03,819 --> 01:21:09,188
so for example let's suppose that the

1420
01:21:07,389 --> 01:21:11,699
thing that you're like the thing that we

1421
01:21:09,189 --> 01:21:11,699
want to do

1422
01:21:21,840 --> 01:21:27,840
looks something like this right so we're

1423
01:21:25,260 --> 01:21:29,610
taking a sample here and actually since

1424
01:21:27,840 --> 01:21:32,690
it's multigrid let's say there's there's

1425
01:21:29,609 --> 01:21:34,589
well now I guess we'll do two lower ones

1426
01:21:32,689 --> 01:21:36,679
let me let me draw this a little bit

1427
01:21:34,590 --> 01:21:36,680
better

1428
01:21:43,279 --> 01:21:47,300
so let's suppose we want to compute the

1429
01:21:45,710 --> 01:21:48,500
lighting here and let's suppose you want

1430
01:21:47,300 --> 01:21:52,610
to compute it from the entire

1431
01:21:48,500 --> 01:21:58,760
neighboring region right so we know that

1432
01:21:52,609 --> 01:22:00,920
there is going to be 8 texture samples

1433
01:21:58,760 --> 01:22:03,230
right that we would have to take to find

1434
01:22:00,920 --> 01:22:09,890
out what the data is in these regions

1435
01:22:03,229 --> 01:22:12,049
around then internal to us right this

1436
01:22:09,890 --> 01:22:14,840
would give us how the incoming lighting

1437
01:22:12,050 --> 01:22:16,460
flows in if there is no shadowing but we

1438
01:22:14,840 --> 01:22:18,050
know we probably want some shadowing

1439
01:22:16,460 --> 01:22:20,840
otherwise the lighting solution is not

1440
01:22:18,050 --> 01:22:22,250
going to be very interesting and so in

1441
01:22:20,840 --> 01:22:24,560
order to do that what we would have to

1442
01:22:22,250 --> 01:22:28,609
do is say well let's subdivide ourselves

1443
01:22:24,560 --> 01:22:37,250
right and let's do the same thing again

1444
01:22:28,609 --> 01:22:40,039
and what we want to do is say well ok

1445
01:22:37,250 --> 01:22:45,229
let's see how much of a shadowing there

1446
01:22:40,039 --> 01:22:48,710
would be if we were trying to look at

1447
01:22:45,229 --> 01:22:53,379
these things so looking at 3 looking at

1448
01:22:48,710 --> 01:22:56,420
0 looking at it 1 looking on a 2 4 etc

1449
01:22:53,380 --> 01:23:00,050
how much shadowing is there in our local

1450
01:22:56,420 --> 01:23:01,940
Mora slightly more local area how much

1451
01:23:00,050 --> 01:23:04,039
shadowing is there to be able to see

1452
01:23:01,939 --> 01:23:07,039
these things that are further away right

1453
01:23:04,039 --> 01:23:12,260
and so you would end up taking 16

1454
01:23:07,039 --> 01:23:14,750
samples for every one resolution here

1455
01:23:12,260 --> 01:23:17,449
that you wanted to do and then you would

1456
01:23:14,750 --> 01:23:19,789
use those values to sort of figure out

1457
01:23:17,449 --> 01:23:21,229
how much lighting contribution you

1458
01:23:19,789 --> 01:23:27,109
should add in the region you're

1459
01:23:21,229 --> 01:23:30,379
currently operating on and so you know

1460
01:23:27,109 --> 01:23:36,079
that this actually sounds like plausible

1461
01:23:30,380 --> 01:23:38,600
like vaguely plausible but that's the

1462
01:23:36,079 --> 01:23:40,850
primary operation we'd have to do on the

1463
01:23:38,600 --> 01:23:44,600
down sample and when we did that down

1464
01:23:40,850 --> 01:23:46,760
sample we would then add that lighting

1465
01:23:44,600 --> 01:23:51,289
result whatever we got from each of

1466
01:23:46,760 --> 01:23:55,520
these 8 computations right each of those

1467
01:23:51,289 --> 01:23:56,810
8 computations would tell us how much

1468
01:23:55,520 --> 01:24:00,380
light to

1469
01:23:56,810 --> 01:24:04,210
add to the result we're standing on

1470
01:24:00,380 --> 01:24:12,730
right the result that we're actually

1471
01:24:04,210 --> 01:24:17,750
computing about so yeah that's really

1472
01:24:12,729 --> 01:24:20,299
all there is to it so the one thing that

1473
01:24:17,750 --> 01:24:22,789
we don't currently store and I feel like

1474
01:24:20,300 --> 01:24:25,340
we kind of do need to store it as much

1475
01:24:22,789 --> 01:24:28,760
as I hate to have extra textures I think

1476
01:24:25,340 --> 01:24:30,350
we probably would is that one of the

1477
01:24:28,760 --> 01:24:32,960
problems we have right now is we're

1478
01:24:30,350 --> 01:24:35,780
always assuming that things are at the

1479
01:24:32,960 --> 01:24:38,260
Centers of their grid cells and the only

1480
01:24:35,779 --> 01:24:42,259
thing that we check check is the height

1481
01:24:38,260 --> 01:24:49,400
but we probably don't really want to do

1482
01:24:42,260 --> 01:24:51,770
that right we probably want to bias we

1483
01:24:49,399 --> 01:24:54,229
probably want to say that a cell

1484
01:24:51,770 --> 01:24:56,780
contains a point and the point is the

1485
01:24:54,229 --> 01:24:58,369
location that's the averaged amount of

1486
01:24:56,779 --> 01:25:01,849
the lighting that's coming out of it

1487
01:24:58,369 --> 01:25:05,239
right or the average location of the

1488
01:25:01,850 --> 01:25:07,250
occluders in that area right so we kind

1489
01:25:05,239 --> 01:25:08,809
of have two things you know like like I

1490
01:25:07,250 --> 01:25:10,430
say that as we sort of develop this

1491
01:25:08,810 --> 01:25:18,410
we've got to kind of think about what we

1492
01:25:10,430 --> 01:25:20,300
really want to store and how we can make

1493
01:25:18,409 --> 01:25:22,670
something that's going to be useful in

1494
01:25:20,300 --> 01:25:27,220
that way right

1495
01:25:22,670 --> 01:25:27,220
but anyway so let's suppose that we

1496
01:25:27,640 --> 01:25:32,060
let's suppose that we have that so we

1497
01:25:30,109 --> 01:25:33,229
all went to this by at least one one

1498
01:25:32,060 --> 01:25:35,080
additional thing that we don't have

1499
01:25:33,229 --> 01:25:37,669
right now which is just the position

1500
01:25:35,079 --> 01:25:40,279
because right now we do have the depth

1501
01:25:37,670 --> 01:25:41,690
but we don't have the position we can

1502
01:25:40,279 --> 01:25:43,639
assume that the position is in the

1503
01:25:41,689 --> 01:25:46,549
center of the cell for now but that's

1504
01:25:43,640 --> 01:25:48,829
not a very good approximation because it

1505
01:25:46,550 --> 01:25:51,140
may be that like there's a very big wall

1506
01:25:48,829 --> 01:25:54,199
here that's really what we want to talk

1507
01:25:51,140 --> 01:25:55,940
about so it gets it gets kind of

1508
01:25:54,199 --> 01:25:57,619
difficult to think about how those sorts

1509
01:25:55,939 --> 01:26:02,269
of things should should be happening

1510
01:25:57,619 --> 01:26:04,640
right and furthermore it strikes me that

1511
01:26:02,270 --> 01:26:06,290
like again it seems almost like it order

1512
01:26:04,640 --> 01:26:07,520
if we really do want to try to push this

1513
01:26:06,289 --> 01:26:09,289
multi light thing and see if it really

1514
01:26:07,520 --> 01:26:10,040
does a multi grid light thing and see if

1515
01:26:09,289 --> 01:26:12,409
it really does where

1516
01:26:10,039 --> 01:26:15,350
it also strikes me that we may have to

1517
01:26:12,409 --> 01:26:17,269
store two separate things but we may

1518
01:26:15,350 --> 01:26:19,880
have to store like the light and the

1519
01:26:17,270 --> 01:26:21,230
occluder differently or E or maybe store

1520
01:26:19,880 --> 01:26:27,980
them on the up pass and the down path

1521
01:26:21,229 --> 01:26:34,489
differently I don't know but that part

1522
01:26:27,979 --> 01:26:36,079
is just a little tricky and I don't know

1523
01:26:34,489 --> 01:26:44,239
if there's I don't really know what the

1524
01:26:36,079 --> 01:26:48,500
way around it is well I'm getting ahead

1525
01:26:44,239 --> 01:26:50,149
of myself so anyway if we just assume we

1526
01:26:48,500 --> 01:26:52,939
just start with what we have right now

1527
01:26:50,149 --> 01:26:55,129
that's basically the computation sort of

1528
01:26:52,939 --> 01:26:57,379
thing that we would need to do right we

1529
01:26:55,130 --> 01:27:00,140
would need to be able to do this sort of

1530
01:26:57,380 --> 01:27:02,329
light transfer now whether or not we

1531
01:27:00,140 --> 01:27:04,010
need the diagonals I assume we need the

1532
01:27:02,329 --> 01:27:06,590
diagonals because otherwise you kind of

1533
01:27:04,010 --> 01:27:16,220
get this weird your lighting will have

1534
01:27:06,590 --> 01:27:19,069
very heavy sort of axial components so

1535
01:27:16,220 --> 01:27:23,329
I'm not sure you can really ignore the

1536
01:27:19,069 --> 01:27:27,319
stuff that's coming from you know your

1537
01:27:23,329 --> 01:27:30,289
your sort of diagonal neighbors but who

1538
01:27:27,319 --> 01:27:32,569
knows so right now all we're sampling is

1539
01:27:30,289 --> 01:27:36,170
the cross and I think we may have to

1540
01:27:32,569 --> 01:27:38,359
sample sort of the diagonal as well and

1541
01:27:36,170 --> 01:27:40,010
so right now we also aren't doing any

1542
01:27:38,359 --> 01:27:42,439
shadowing so we don't sample the sub

1543
01:27:40,010 --> 01:27:44,840
cross on the next level down either to

1544
01:27:42,439 --> 01:27:47,509
figure out what kind of shadowing we're

1545
01:27:44,840 --> 01:27:49,520
going to be doing there so again a

1546
01:27:47,510 --> 01:27:52,250
little bit confusing and a little bit

1547
01:27:49,520 --> 01:27:54,710
complicated but that's sort of the sort

1548
01:27:52,250 --> 01:27:57,020
of where we're at right so what you can

1549
01:27:54,710 --> 01:27:59,480
see here is we have a front omission and

1550
01:27:57,020 --> 01:28:01,430
back omission that we're going to

1551
01:27:59,479 --> 01:28:03,949
compute because we're pointing a

1552
01:28:01,430 --> 01:28:06,020
particular direction and we collect

1553
01:28:03,949 --> 01:28:07,309
light on our back end the front front

1554
01:28:06,020 --> 01:28:08,870
and back row services because we are a

1555
01:28:07,310 --> 01:28:11,300
sprite card thing normally we'd only

1556
01:28:08,869 --> 01:28:13,369
have front because well because all of

1557
01:28:11,300 --> 01:28:15,770
our game is like these little cards

1558
01:28:13,369 --> 01:28:19,630
it seems sensible to treat both sides

1559
01:28:15,770 --> 01:28:19,630
since everything's infinitely thin

1560
01:28:20,069 --> 01:28:24,599
so taking a look at the transfer

1561
01:28:21,510 --> 01:28:27,600
lighting question here you can see that

1562
01:28:24,600 --> 01:28:30,030
we do a transfer light and we say here's

1563
01:28:27,600 --> 01:28:33,510
our you know our reception parameters

1564
01:28:30,029 --> 01:28:36,329
right r.fp ref and ref C and here's our

1565
01:28:33,510 --> 01:28:37,980
emitter parameters so without doing any

1566
01:28:36,329 --> 01:28:40,559
further work we can do the light

1567
01:28:37,979 --> 01:28:43,079
transport here in some way to something

1568
01:28:40,560 --> 01:28:45,960
other than just a straight average based

1569
01:28:43,079 --> 01:28:47,850
on our normal and things like that so we

1570
01:28:45,960 --> 01:28:49,289
can't actually do something there the

1571
01:28:47,850 --> 01:28:50,640
thing we can't do is the shadowing

1572
01:28:49,289 --> 01:28:53,340
because in order to shadow and we have

1573
01:28:50,640 --> 01:28:56,070
to be able to sample what's what would

1574
01:28:53,340 --> 01:28:58,890
be in between us now maybe we can just

1575
01:28:56,069 --> 01:29:00,179
have the transfer light equation sample

1576
01:28:58,890 --> 01:29:02,940
something that's in between the two

1577
01:29:00,180 --> 01:29:05,760
positions and try to do something smart

1578
01:29:02,939 --> 01:29:08,849
about that that that is something we

1579
01:29:05,760 --> 01:29:10,530
could add we're like that's where that

1580
01:29:08,850 --> 01:29:14,600
sampling here is the for right now I'll

1581
01:29:10,529 --> 01:29:16,920
just try doing just some basic transfer

1582
01:29:14,600 --> 01:29:18,150
so because this is so approximate I'm

1583
01:29:16,920 --> 01:29:20,579
not going to start with anything that's

1584
01:29:18,149 --> 01:29:22,559
even trying to approximate real lighting

1585
01:29:20,579 --> 01:29:24,269
transfer instead what I'm going to do is

1586
01:29:22,560 --> 01:29:27,180
just see how much these two things can

1587
01:29:24,270 --> 01:29:30,720
see each other right so since we want to

1588
01:29:27,180 --> 01:29:34,820
do this transfer light what I want to do

1589
01:29:30,720 --> 01:29:37,590
is say okay if I've got two surfaces and

1590
01:29:34,819 --> 01:29:40,229
I want to know how much light they're

1591
01:29:37,590 --> 01:29:41,489
going to bounce to each other at the

1592
01:29:40,229 --> 01:29:43,649
very least something I'm going to have

1593
01:29:41,489 --> 01:29:45,599
to do is how much are they facing each

1594
01:29:43,649 --> 01:29:47,399
other right the cosine of the angle

1595
01:29:45,600 --> 01:29:49,200
between them is going to be important

1596
01:29:47,399 --> 01:29:50,759
here because if for example I'm talking

1597
01:29:49,199 --> 01:29:53,090
about two surfaces that are pointing

1598
01:29:50,760 --> 01:29:55,560
away from each other then no light is

1599
01:29:53,090 --> 01:29:57,779
transferred so I have to do some kind of

1600
01:29:55,560 --> 01:30:01,860
computation there so the first thing I

1601
01:29:57,779 --> 01:30:04,109
want to do is figure that out so I'm

1602
01:30:01,859 --> 01:30:06,359
going to introduce a facing term here

1603
01:30:04,109 --> 01:30:08,189
and all that's going to be is that's

1604
01:30:06,359 --> 01:30:10,349
just going to be the inner product of

1605
01:30:08,189 --> 01:30:14,419
the light normal and the reflection

1606
01:30:10,350 --> 01:30:16,980
normal now the the product of those two

1607
01:30:14,420 --> 01:30:18,210
we we want to condition the result of

1608
01:30:16,979 --> 01:30:19,319
that because the condition of the result

1609
01:30:18,210 --> 01:30:21,060
that doesn't come out in a way we can

1610
01:30:19,319 --> 01:30:23,069
use for multiplication very well why

1611
01:30:21,060 --> 01:30:25,140
doesn't it well it doesn't because if

1612
01:30:23,069 --> 01:30:26,429
you think about two services that are

1613
01:30:25,140 --> 01:30:30,200
pointing the same direction here's my

1614
01:30:26,430 --> 01:30:30,200
reflector here's my light

1615
01:30:31,119 --> 01:30:37,119
if I have these two services I want to

1616
01:30:35,890 --> 01:30:39,070
say well how much like to answer between

1617
01:30:37,119 --> 01:30:41,050
them the answer we know here is none

1618
01:30:39,069 --> 01:30:42,340
right the answer is zero light is

1619
01:30:41,050 --> 01:30:44,680
transfer between them but the dot

1620
01:30:42,340 --> 01:30:46,329
product of these two right to take the

1621
01:30:44,680 --> 01:30:48,340
to get the cosine the angle between them

1622
01:30:46,329 --> 01:30:49,090
but dot produce two will produce one

1623
01:30:48,340 --> 01:30:52,840
because they're pointing the same

1624
01:30:49,090 --> 01:30:54,610
direction so what we want to do is do

1625
01:30:52,840 --> 01:30:56,770
sort of conditioning of this value if

1626
01:30:54,609 --> 01:30:59,409
they were pointing the way we want them

1627
01:30:56,770 --> 01:31:00,730
to point their value would actually be

1628
01:30:59,409 --> 01:31:02,559
negative one right because they're

1629
01:31:00,729 --> 01:31:03,939
pointing in opposite directions so what

1630
01:31:02,560 --> 01:31:07,900
we really want to do is we want to

1631
01:31:03,939 --> 01:31:12,909
negate this result right and I don't

1632
01:31:07,899 --> 01:31:18,519
remember sorry I know we just patented a

1633
01:31:12,909 --> 01:31:20,529
bunch of pound vines here here we go so

1634
01:31:18,520 --> 01:31:24,670
we have inner we have clamped zero one

1635
01:31:20,529 --> 01:31:27,460
okay good so basically what I want to do

1636
01:31:24,670 --> 01:31:32,289
is say all right let's take the negative

1637
01:31:27,460 --> 01:31:33,970
of this and clamp it like so and so what

1638
01:31:32,289 --> 01:31:36,010
that gives me is a value from zero to

1639
01:31:33,970 --> 01:31:39,010
one that just says how lined up these

1640
01:31:36,010 --> 01:31:43,180
two light sources are right and I can

1641
01:31:39,010 --> 01:31:46,960
use that to now attenuate that result

1642
01:31:43,180 --> 01:31:48,670
right I can use that to attenuate any

1643
01:31:46,960 --> 01:31:52,420
lighting transfer that's going to happen

1644
01:31:48,670 --> 01:31:58,180
between them so now we also get into the

1645
01:31:52,420 --> 01:31:59,980
how far away they are because these are

1646
01:31:58,180 --> 01:32:03,010
diffused surfaces not specular at the

1647
01:31:59,979 --> 01:32:04,799
moment although we may want to do some

1648
01:32:03,010 --> 01:32:07,539
work with that obviously in the future

1649
01:32:04,800 --> 01:32:10,810
what we want to do is take the light

1650
01:32:07,539 --> 01:32:12,460
emission and we want to scale it by that

1651
01:32:10,810 --> 01:32:15,640
distance as well use the inverse square

1652
01:32:12,460 --> 01:32:24,250
law there so the distance between these

1653
01:32:15,640 --> 01:32:27,490
two lights light P minus recipe we

1654
01:32:24,250 --> 01:32:28,420
really want that to be squared so you

1655
01:32:27,489 --> 01:32:31,260
know this is a length squared

1656
01:32:28,420 --> 01:32:31,260
computation

1657
01:32:35,250 --> 01:32:41,520
that's going to be modulated as well so

1658
01:32:39,029 --> 01:32:44,460
as that distance goes I want to be 1

1659
01:32:41,520 --> 01:32:46,920
over the length squared there as they

1660
01:32:44,460 --> 01:32:50,969
get further apart I want that to divide

1661
01:32:46,920 --> 01:32:53,849
out right so if the distance squared if

1662
01:32:50,969 --> 01:32:56,130
the distance squared where 0 if that

1663
01:32:53,849 --> 01:32:57,599
should never actually happen so I think

1664
01:32:56,130 --> 01:32:59,699
I can avoid that case because we're

1665
01:32:57,599 --> 01:33:00,900
always testing cells that are um there

1666
01:32:59,698 --> 01:33:02,009
shouldn't be any way to actually have

1667
01:33:00,899 --> 01:33:04,259
them become zero

1668
01:33:02,010 --> 01:33:07,829
I'll have to see if that's true but that

1669
01:33:04,260 --> 01:33:12,239
shouldn't happen so we know that we also

1670
01:33:07,829 --> 01:33:14,779
have sort of the fall-off term which is

1671
01:33:12,238 --> 01:33:17,908
going to be 1 over that distance squared

1672
01:33:14,779 --> 01:33:21,509
now somehow I don't I never did define

1673
01:33:17,908 --> 01:33:28,399
some of these it looks like so you know

1674
01:33:21,510 --> 01:33:28,400
length and the length squared of vectors

1675
01:33:28,698 --> 01:33:34,169
so the length squared of a vector is I

1676
01:33:31,260 --> 01:33:41,610
was used to dot product of of itself I

1677
01:33:34,170 --> 01:33:43,109
think there's a built in for length here

1678
01:33:41,609 --> 01:33:51,839
I don't know if there's a built in for

1679
01:33:43,109 --> 01:33:54,988
length squared I'll check but like I

1680
01:33:51,840 --> 01:33:57,300
said it's just a dot product anyway yeah

1681
01:33:54,988 --> 01:34:00,089
so there you go length is there's no

1682
01:33:57,300 --> 01:34:02,730
length squared so we just dot a vector

1683
01:34:00,090 --> 01:34:05,520
with itself that'll give us the length

1684
01:34:02,729 --> 01:34:07,618
squared so that's all we really need so

1685
01:34:05,520 --> 01:34:13,170
if we want the length squared of this

1686
01:34:07,618 --> 01:34:15,559
vector here that's what we'll get and I

1687
01:34:13,170 --> 01:34:18,690
think that's all we really need to know

1688
01:34:15,560 --> 01:34:20,070
so computing the lighting here if we

1689
01:34:18,689 --> 01:34:21,569
want to start by making something a

1690
01:34:20,069 --> 01:34:25,408
little more sensible than what we want

1691
01:34:21,569 --> 01:34:29,210
to do is do something like okay there's

1692
01:34:25,408 --> 01:34:32,488
the facing times the distance squared

1693
01:34:29,210 --> 01:34:35,579
times the color times the emission right

1694
01:34:32,488 --> 01:34:37,618
so then we've got something that takes

1695
01:34:35,579 --> 01:34:39,569
into account the angular aspect of it

1696
01:34:37,618 --> 01:34:42,238
we've got something that takes into

1697
01:34:39,569 --> 01:34:43,349
account the fall-off distance aspect of

1698
01:34:42,238 --> 01:34:48,149
it

1699
01:34:43,350 --> 01:34:51,390
and off we go problem with this although

1700
01:34:48,149 --> 01:34:54,149
that's all well and good is right now we

1701
01:34:51,390 --> 01:34:57,200
are not actually reconstructing the

1702
01:34:54,149 --> 01:35:00,569
position in any way that makes any sense

1703
01:34:57,199 --> 01:35:02,729
so we have to be able to take fragment

1704
01:35:00,569 --> 01:35:05,250
coordinates and translate them into

1705
01:35:02,729 --> 01:35:08,699
positions and right now we don't have

1706
01:35:05,250 --> 01:35:14,460
any way of actually doing that so that's

1707
01:35:08,699 --> 01:35:18,479
going to be a whole situation kind of a

1708
01:35:14,460 --> 01:35:18,960
whole whole what's the word I'm looking

1709
01:35:18,479 --> 01:35:20,399
for

1710
01:35:18,960 --> 01:35:22,230
that's going to be a whole valley wick

1711
01:35:20,399 --> 01:35:30,649
it's in and of itself am I losing that

1712
01:35:22,229 --> 01:35:30,649
term correctly spelled it wrong

1713
01:35:34,800 --> 01:35:40,679
I guess I kind of used it right you know

1714
01:35:38,639 --> 01:35:43,050
it's not I wasn't a fabulous teachers

1715
01:35:40,679 --> 01:35:46,109
and not one of my finer vocabulary

1716
01:35:43,050 --> 01:35:48,559
moments certainly if we're being honest

1717
01:35:46,109 --> 01:35:54,139
about it but it's all right baileywick

1718
01:35:48,559 --> 01:35:57,150
baileywick baileywick so baileywick I

1719
01:35:54,139 --> 01:35:59,099
pronounce it very old I pronounce it

1720
01:35:57,149 --> 01:36:03,029
late Middle English which is not good

1721
01:35:59,099 --> 01:36:09,360
so baileywick that's going to be a whole

1722
01:36:03,029 --> 01:36:11,880
nother baileywick so yeah so we can put

1723
01:36:09,359 --> 01:36:13,319
that transfer letting in there like so

1724
01:36:11,880 --> 01:36:14,969
but what we're going to find is it's

1725
01:36:13,319 --> 01:36:16,229
going to blow up immediately because the

1726
01:36:14,969 --> 01:36:18,719
length squared term that I said could

1727
01:36:16,229 --> 01:36:22,158
never be 0 will actually be 0 a lot of

1728
01:36:18,719 --> 01:36:25,170
the time because we're artificially

1729
01:36:22,158 --> 01:36:27,868
making all of our positions be exactly

1730
01:36:25,170 --> 01:36:30,420
the same which is not good at all right

1731
01:36:27,868 --> 01:36:32,939
that is the opposite of what we want and

1732
01:36:30,420 --> 01:36:37,319
so we need to have some way of making

1733
01:36:32,939 --> 01:36:41,609
this result here make more sense right

1734
01:36:37,319 --> 01:36:44,729
so we can start by using the UVs but

1735
01:36:41,609 --> 01:36:47,908
that's not going to be at all correct

1736
01:36:44,729 --> 01:36:54,118
and so we need to create a better some

1737
01:36:47,908 --> 01:36:59,009
better work there right all right so

1738
01:36:54,118 --> 01:37:00,689
let's start by oh dear I don't know why

1739
01:36:59,010 --> 01:37:04,829
sometimes we get a very low frame rate

1740
01:37:00,689 --> 01:37:06,629
and I never really know why I think it's

1741
01:37:04,828 --> 01:37:07,738
like we're pushing this graphics card a

1742
01:37:06,630 --> 01:37:12,510
little bit beyond what it can really

1743
01:37:07,738 --> 01:37:16,759
handle and our undamped spring here is

1744
01:37:12,510 --> 01:37:22,590
not particularly happy about that so I

1745
01:37:16,760 --> 01:37:26,880
wonder what it is just literally that or

1746
01:37:22,590 --> 01:37:28,500
that just the fact that we were like is

1747
01:37:26,880 --> 01:37:31,859
literally just the fact that we're doing

1748
01:37:28,500 --> 01:37:34,050
some more operations here enough to

1749
01:37:31,859 --> 01:37:38,908
really slow things down it seems odd

1750
01:37:34,050 --> 01:37:45,590
that it would be really that painful for

1751
01:37:38,908 --> 01:37:48,908
the card like is that actually the case

1752
01:37:45,590 --> 01:37:48,909
[Applause]

1753
01:37:58,689 --> 01:38:06,509
[Applause]

1754
01:38:09,878 --> 01:38:16,078
so it's not like it's just that slow at

1755
01:38:13,628 --> 01:38:26,979
the moment for reasons that are not

1756
01:38:16,078 --> 01:38:30,340
immediately clear to me I granted this

1757
01:38:26,979 --> 01:38:31,780
graphic card is extremely old so it

1758
01:38:30,340 --> 01:38:33,788
could be any number of reasons but we

1759
01:38:31,779 --> 01:38:37,569
don't have a lot of ways to profile it

1760
01:38:33,788 --> 01:38:39,849
at the moment let me go ahead and put

1761
01:38:37,569 --> 01:38:42,608
that in here what I can do is like in

1762
01:38:39,849 --> 01:38:47,050
six sort of the under damped springiness

1763
01:38:42,609 --> 01:38:50,019
I suppose of the body head dichotomy

1764
01:38:47,050 --> 01:38:51,939
there to prevent it from from causing

1765
01:38:50,019 --> 01:38:55,269
this problem that we're getting there

1766
01:38:51,939 --> 01:38:56,649
but that's not going to help us keep a

1767
01:38:55,269 --> 01:38:59,859
reasonable frame rate that we can

1768
01:38:56,649 --> 01:39:02,769
actually use for for testing it's the

1769
01:38:59,859 --> 01:39:09,479
only problem we can reduce the

1770
01:39:02,769 --> 01:39:09,479
resolution to something very low like so

1771
01:39:19,220 --> 01:39:27,020
all right and that definitely looks

1772
01:39:24,600 --> 01:39:27,020
better

1773
01:39:33,458 --> 01:39:38,288
all right so that's good enough for now

1774
01:39:35,769 --> 01:39:39,670
I'll just leave live with running at a

1775
01:39:38,288 --> 01:39:42,998
low resolution for this particular

1776
01:39:39,670 --> 01:39:51,939
problem for this particular situation

1777
01:39:42,998 --> 01:39:55,658
all right so again so this brings us

1778
01:39:51,939 --> 01:39:58,179
back to against the the sort of place

1779
01:39:55,658 --> 01:40:00,819
we're at in terms of lighting transfer

1780
01:39:58,179 --> 01:40:06,219
at this point right we need to now start

1781
01:40:00,819 --> 01:40:08,708
having our lights be brighter than one

1782
01:40:06,219 --> 01:40:10,868
as well because as you can see when we

1783
01:40:08,708 --> 01:40:13,840
get out to here you know the lights are

1784
01:40:10,868 --> 01:40:16,509
so dim at this point as well because

1785
01:40:13,840 --> 01:40:19,989
we're sort of we haven't encoded them in

1786
01:40:16,510 --> 01:40:22,689
any sort of way that makes a sense in

1787
01:40:19,988 --> 01:40:24,158
terms of the visible area so we probably

1788
01:40:22,689 --> 01:40:26,920
have to take a look at that in a second

1789
01:40:24,158 --> 01:40:30,339
as well but let's just take a look at

1790
01:40:26,920 --> 01:40:32,229
what our other values are for now so our

1791
01:40:30,340 --> 01:40:34,929
lighting reflect color seems pretty

1792
01:40:32,229 --> 01:40:36,249
reasonable you know I don't think we're

1793
01:40:34,929 --> 01:40:39,609
going to have a lot of problems with

1794
01:40:36,248 --> 01:40:44,130
that going forward right that seems

1795
01:40:39,609 --> 01:40:45,938
pretty much fine to me the team and

1796
01:40:44,130 --> 01:40:48,519
let's go ahead and take a look at our

1797
01:40:45,939 --> 01:40:51,459
normals again you have a normal seem to

1798
01:40:48,519 --> 01:40:55,179
be pretty sane as well right

1799
01:40:51,458 --> 01:40:56,529
so I think we've got those two in a

1800
01:40:55,179 --> 01:40:59,439
place where they're not going to cause

1801
01:40:56,529 --> 01:41:01,208
us too much trouble so it's really just

1802
01:40:59,439 --> 01:41:02,409
the lighting transport part that we

1803
01:41:01,208 --> 01:41:07,029
should be able to focus on getting

1804
01:41:02,408 --> 01:41:10,109
something out of at the head end so the

1805
01:41:07,029 --> 01:41:13,719
first thing that I want to know is can

1806
01:41:10,109 --> 01:41:16,719
we get a white and actual light in here

1807
01:41:13,719 --> 01:41:18,908
instead of just straight-up red and I

1808
01:41:16,719 --> 01:41:21,399
don't remember why we ended up with

1809
01:41:18,908 --> 01:41:25,808
straight up red was that just because we

1810
01:41:21,399 --> 01:41:28,179
had placed a bright red light for no

1811
01:41:25,809 --> 01:41:31,920
reason into the compiled lead bias

1812
01:41:28,179 --> 01:41:31,920
program what was using light pee

1813
01:41:34,350 --> 01:41:38,430
yeah so I'm going to go ahead and change

1814
01:41:36,359 --> 01:41:41,039
this to a white light at first I want to

1815
01:41:38,430 --> 01:41:45,360
see how it interacts with the reflection

1816
01:41:41,039 --> 01:41:47,970
color because something is weird at the

1817
01:41:45,359 --> 01:41:50,309
moment and we have to that's the first

1818
01:41:47,970 --> 01:41:53,100
thing I wanted to bug so if you think

1819
01:41:50,310 --> 01:41:59,520
about what's happening here this is the

1820
01:41:53,100 --> 01:42:02,270
actual result of the of the light

1821
01:41:59,520 --> 01:42:04,830
transport it doesn't make a lot of sense

1822
01:42:02,270 --> 01:42:06,930
because if you look at what's happening

1823
01:42:04,829 --> 01:42:08,579
to it we should be seeing some of those

1824
01:42:06,930 --> 01:42:10,560
colors start to come through at some

1825
01:42:08,579 --> 01:42:13,439
point now it makes sense that the part

1826
01:42:10,560 --> 01:42:15,720
we can see directly so the part that's

1827
01:42:13,439 --> 01:42:17,219
not going to have any bounce it makes

1828
01:42:15,720 --> 01:42:20,310
sense that that would be bright white

1829
01:42:17,220 --> 01:42:22,560
because again what we're seeing there is

1830
01:42:20,310 --> 01:42:26,880
just clipping off the end potentially

1831
01:42:22,560 --> 01:42:29,880
now we could do some some work there to

1832
01:42:26,880 --> 01:42:31,050
make sure that we do sort of our tone

1833
01:42:29,880 --> 01:42:32,880
mapping at the end would swing that we

1834
01:42:31,050 --> 01:42:34,500
do have to do but we should be able to

1835
01:42:32,880 --> 01:42:39,119
start seeing some bounce of light soon

1836
01:42:34,500 --> 01:42:40,529
that hat takes into account actual

1837
01:42:39,119 --> 01:42:42,840
colors and stuff like that but we're not

1838
01:42:40,529 --> 01:42:45,719
seeing any of that so we're kind of just

1839
01:42:42,840 --> 01:42:50,850
like not correctly doing anything at the

1840
01:42:45,720 --> 01:42:52,740
moment and I'd like to know why so again

1841
01:42:50,850 --> 01:42:54,390
one thing that I do want to do is crank

1842
01:42:52,739 --> 01:42:56,819
the power of that light up a little bit

1843
01:42:54,390 --> 01:42:58,530
so when we are transferring the light

1844
01:42:56,819 --> 01:43:01,289
over so when we do Jess peel the

1845
01:42:58,529 --> 01:43:04,469
lighting I want to scale up that surface

1846
01:43:01,289 --> 01:43:06,779
emission so the emit RGB here for

1847
01:43:04,470 --> 01:43:15,050
example I'd like to take the maximum

1848
01:43:06,779 --> 01:43:17,519
light power and that max light power is

1849
01:43:15,050 --> 01:43:19,789
just some arbitrary value that's how

1850
01:43:17,520 --> 01:43:22,890
strong we want the strongest light to be

1851
01:43:19,789 --> 01:43:27,630
relative to the 0 to 1 range which is

1852
01:43:22,890 --> 01:43:30,300
just reflected light right and so if we

1853
01:43:27,630 --> 01:43:33,449
do that we now have like this light is

1854
01:43:30,300 --> 01:43:36,090
very very bright so when it kind of gets

1855
01:43:33,449 --> 01:43:39,599
blended up yet you can see it should

1856
01:43:36,090 --> 01:43:42,569
always tend to dominate anything that it

1857
01:43:39,600 --> 01:43:45,420
blends with right very powerfully which

1858
01:43:42,569 --> 01:43:47,189
it sort of is which is good but what I

1859
01:43:45,420 --> 01:43:48,389
don't understand is like if this is the

1860
01:43:47,189 --> 01:43:50,698
top level version

1861
01:43:48,389 --> 01:43:53,340
how come we never get we never see

1862
01:43:50,698 --> 01:43:55,859
almost any light bleeding at all right

1863
01:43:53,340 --> 01:43:59,189
so we never see any light transfer

1864
01:43:55,859 --> 01:44:03,988
happening and why is that right so I've

1865
01:43:59,189 --> 01:44:05,630
got some issues in here to address so

1866
01:44:03,988 --> 01:44:08,879
let's start with the individual terms

1867
01:44:05,630 --> 01:44:11,939
and again all these variables are kind

1868
01:44:08,880 --> 01:44:14,279
of bogus so it's kind of hard to start

1869
01:44:11,939 --> 01:44:15,599
with it's sometimes hard when you're

1870
01:44:14,279 --> 01:44:18,148
just trying to start up because you

1871
01:44:15,599 --> 01:44:20,149
don't have everything worked out yet you

1872
01:44:18,149 --> 01:44:24,090
hard it's hard to know what's actually

1873
01:44:20,149 --> 01:44:27,179
incorrect but what I can do here is I

1874
01:44:24,090 --> 01:44:29,489
can say well what if we turn off some of

1875
01:44:27,179 --> 01:44:31,380
these terms so suppose I turned off the

1876
01:44:29,488 --> 01:44:34,259
fall-off and the only thing that we use

1877
01:44:31,380 --> 01:44:37,409
for the facing direction right what

1878
01:44:34,260 --> 01:44:39,809
would that do and what you can sort of

1879
01:44:37,408 --> 01:44:41,219
see here is not much right so the

1880
01:44:39,809 --> 01:44:43,498
fall-off term doesn't seem to

1881
01:44:41,219 --> 01:44:45,538
necessarily be a huge culprit there what

1882
01:44:43,498 --> 01:44:53,398
happens if I turn off the facing term as

1883
01:44:45,538 --> 01:44:55,849
well right again nothing so it's almost

1884
01:44:53,399 --> 01:45:00,559
like our lighting transfer is never

1885
01:44:55,849 --> 01:45:03,809
transferring anything at oh that's good

1886
01:45:00,559 --> 01:45:08,639
that's a nice typo try that one more

1887
01:45:03,809 --> 01:45:09,559
time so that would explain it there we

1888
01:45:08,639 --> 01:45:12,449
go

1889
01:45:09,559 --> 01:45:16,110
okay so that's more what I would expect

1890
01:45:12,448 --> 01:45:18,178
to see so now let's try turning on the

1891
01:45:16,109 --> 01:45:20,398
facing direction so now we're going to

1892
01:45:18,179 --> 01:45:22,618
only transfer based on facing directions

1893
01:45:20,399 --> 01:45:26,729
match matching up so you can see that's

1894
01:45:22,618 --> 01:45:31,529
not really working right so face facing

1895
01:45:26,729 --> 01:45:34,949
Direction not working so we got to fix

1896
01:45:31,529 --> 01:45:36,748
that and let's see how fall-off looks so

1897
01:45:34,948 --> 01:45:39,478
far which is again going to be kind of

1898
01:45:36,748 --> 01:45:42,208
really bogus at this point but all right

1899
01:45:39,479 --> 01:45:46,649
so fall off term not a problem that's

1900
01:45:42,208 --> 01:45:48,139
not knocking things off however it does

1901
01:45:46,649 --> 01:45:52,099
seem to be boosting the light power

1902
01:45:48,139 --> 01:45:52,099
which is not what I would have expected

1903
01:45:53,118 --> 01:45:59,158
because it should strictly diminish so I

1904
01:45:56,840 --> 01:46:01,939
guess what that means is our distance

1905
01:45:59,158 --> 01:46:01,938
squared is

1906
01:46:02,189 --> 01:46:07,239
yeah so our distance squared it's

1907
01:46:05,560 --> 01:46:11,830
supposed to be coming out from the light

1908
01:46:07,239 --> 01:46:17,199
so really what we want there is be you

1909
01:46:11,829 --> 01:46:19,840
know more like this sort of thing right

1910
01:46:17,199 --> 01:46:21,849
we never want it to increase the power

1911
01:46:19,840 --> 01:46:24,400
of the light if it drops below a certain

1912
01:46:21,850 --> 01:46:26,440
amount so we always want it to sort of

1913
01:46:24,399 --> 01:46:30,939
diminish the light as it goes outwards

1914
01:46:26,439 --> 01:46:32,649
right so if we're trying to diminish the

1915
01:46:30,939 --> 01:46:36,879
light as it goes that word again

1916
01:46:32,649 --> 01:46:40,000
the if the the fall-off rate here is

1917
01:46:36,880 --> 01:46:44,170
going to be also based upon what our

1918
01:46:40,000 --> 01:46:47,409
units are in this sense because that

1919
01:46:44,170 --> 01:46:52,989
value will get bigger faster depending

1920
01:46:47,409 --> 01:46:55,689
on the depending on the unit scale right

1921
01:46:52,989 --> 01:46:58,239
so this computation has to be made

1922
01:46:55,689 --> 01:47:00,279
correct at some point but we can again

1923
01:46:58,239 --> 01:47:02,739
hack in whatever we want here if we want

1924
01:47:00,279 --> 01:47:06,579
more distance attenuation we can hack in

1925
01:47:02,739 --> 01:47:10,960
something to you know to give us more

1926
01:47:06,579 --> 01:47:12,579
distance attenuation as we go right so

1927
01:47:10,960 --> 01:47:19,569
if we want to play with that value right

1928
01:47:12,579 --> 01:47:23,189
we can play with that value so there's

1929
01:47:19,569 --> 01:47:23,189
some more distance attenuation right

1930
01:47:27,260 --> 01:47:34,289
and if we look at what's happening to

1931
01:47:29,789 --> 01:47:37,289
these you can kind of see how that light

1932
01:47:34,289 --> 01:47:41,060
is spreading out and where where and

1933
01:47:37,289 --> 01:47:45,210
when it's sort of spreading itself out

1934
01:47:41,060 --> 01:47:53,670
right so now let's figure out why our

1935
01:47:45,210 --> 01:47:54,868
facing direction isn't working at all so

1936
01:47:53,670 --> 01:47:56,849
we have the light normal and the

1937
01:47:54,868 --> 01:48:00,210
reflected normal maybe those are wrong

1938
01:47:56,849 --> 01:48:02,099
would be thing number one the other

1939
01:48:00,210 --> 01:48:03,539
thing is we do the inner product when we

1940
01:48:02,099 --> 01:48:04,920
negate it are we sure that's right I

1941
01:48:03,539 --> 01:48:07,679
believe it is because again the light

1942
01:48:04,920 --> 01:48:09,000
normal and reflected normal the maximum

1943
01:48:07,679 --> 01:48:10,349
transfer should be happened when they're

1944
01:48:09,000 --> 01:48:12,599
pointing opposite which is when it'll be

1945
01:48:10,349 --> 01:48:14,400
negative one and we want to clamp that

1946
01:48:12,599 --> 01:48:16,319
between zero and one because if it's

1947
01:48:14,399 --> 01:48:17,339
negative after we do the reversal that

1948
01:48:16,319 --> 01:48:20,130
means they're pointing away from each

1949
01:48:17,340 --> 01:48:23,730
other we don't want to use that so when

1950
01:48:20,130 --> 01:48:26,159
I turn this on and we use the facing

1951
01:48:23,729 --> 01:48:28,678
term what you can see here is it

1952
01:48:26,158 --> 01:48:30,750
immediately kills all of the transfer

1953
01:48:28,679 --> 01:48:32,699
so with that suggests to me is we must

1954
01:48:30,750 --> 01:48:34,618
have a problem with how we're packing

1955
01:48:32,698 --> 01:48:36,868
our normals in and/or unpacking them I

1956
01:48:34,618 --> 01:48:39,238
don't know but something's not going

1957
01:48:36,868 --> 01:48:40,769
grow and right so when we do we

1958
01:48:39,238 --> 01:48:43,589
construct normal you can see here what

1959
01:48:40,770 --> 01:48:48,420
we do is we Square Root basically just

1960
01:48:43,590 --> 01:48:50,699
the the two terms that we have to make

1961
01:48:48,420 --> 01:48:52,230
sure that the result sums to one and we

1962
01:48:50,698 --> 01:48:54,948
stuff that into the normal that we're

1963
01:48:52,229 --> 01:48:59,399
using right the we got the MPX the MP Y

1964
01:48:54,948 --> 01:49:01,799
and then the Z so that should in theory

1965
01:48:59,399 --> 01:49:04,979
compute reasonable normals I don't know

1966
01:49:01,800 --> 01:49:06,570
why it wouldn't so the question is are

1967
01:49:04,979 --> 01:49:09,928
we sampling them correctly are we

1968
01:49:06,569 --> 01:49:12,750
getting them wrong some other way and I

1969
01:49:09,929 --> 01:49:15,408
don't know so when we're doing the light

1970
01:49:12,750 --> 01:49:18,750
samples for the left right up down here

1971
01:49:15,408 --> 01:49:22,649
and we're getting you know these these

1972
01:49:18,750 --> 01:49:25,279
parent samples what does that look like

1973
01:49:22,649 --> 01:49:31,500
well here's our front and back admission

1974
01:49:25,279 --> 01:49:35,009
here's our our texture sample for the NP

1975
01:49:31,500 --> 01:49:39,479
value and we construct the normal from

1976
01:49:35,010 --> 01:49:42,989
that NP value I look sane I don't

1977
01:49:39,479 --> 01:49:45,259
I don't see what the problem would be

1978
01:49:42,988 --> 01:49:45,259
there

1979
01:49:58,168 --> 01:50:02,398
yeah I really don't see it and I can

1980
01:50:00,840 --> 01:50:04,078
understand a lot of things are pointing

1981
01:50:02,399 --> 01:50:06,899
upward so I could see why there would be

1982
01:50:04,078 --> 01:50:09,208
less transfer when that happened but it

1983
01:50:06,899 --> 01:50:11,130
shouldn't be none right you should it

1984
01:50:09,208 --> 01:50:13,859
should attenuate but not completely

1985
01:50:11,130 --> 01:50:16,559
eliminate I would think and that's not

1986
01:50:13,859 --> 01:50:21,029
at all what I'm seeing so I feel like

1987
01:50:16,559 --> 01:50:24,869
that is still a little bit busted and

1988
01:50:21,029 --> 01:50:27,300
we're not really getting good UV values

1989
01:50:24,868 --> 01:50:29,188
out now what's weird about that are

1990
01:50:27,300 --> 01:50:31,019
sorry good normalize that what's worried

1991
01:50:29,189 --> 01:50:33,749
about that is this does look promising

1992
01:50:31,019 --> 01:50:35,189
like that looks like a thing which I

1993
01:50:33,748 --> 01:50:36,328
haven't sat down and tried to figure if

1994
01:50:35,189 --> 01:50:38,249
it's exactly right

1995
01:50:36,328 --> 01:50:41,668
but it does look roughly like a

1996
01:50:38,248 --> 01:50:44,728
plausible normal map right and so the

1997
01:50:41,668 --> 01:50:46,618
weird thing is if we're sampling from

1998
01:50:44,729 --> 01:50:48,630
that we should end up with some

1999
01:50:46,618 --> 01:50:51,408
reasonable normal so what's going wrong

2000
01:50:48,630 --> 01:50:51,409
I don't know

2001
01:51:11,109 --> 01:51:16,579
because the the you know the X&amp;Y is of

2002
01:51:14,720 --> 01:51:18,530
the position are definitely rum so if

2003
01:51:16,579 --> 01:51:20,239
there's one that's going to be more

2004
01:51:18,529 --> 01:51:22,159
incorrect it should actually that one's

2005
01:51:20,239 --> 01:51:24,439
the normals actually should be right

2006
01:51:22,159 --> 01:51:27,500
we're not hacking the normals at all

2007
01:51:24,439 --> 01:51:29,449
right now the normals are 100% passed

2008
01:51:27,500 --> 01:51:30,859
through the pipeline and so it's and

2009
01:51:29,449 --> 01:51:33,289
we're viewing them too and they look

2010
01:51:30,859 --> 01:51:36,170
reasonable so I'm not sure why we're not

2011
01:51:33,289 --> 01:51:39,439
getting something plausible out of there

2012
01:51:36,170 --> 01:51:43,010
now we are sampling from parent NP tech

2013
01:51:39,439 --> 01:51:45,049
and our NP tech and I suppose I don't

2014
01:51:43,010 --> 01:51:48,380
know if maybe one of those is coming in

2015
01:51:45,050 --> 01:51:50,510
wrong we wouldn't know if it was so I

2016
01:51:48,380 --> 01:51:52,489
suppose we could just double check here

2017
01:51:50,510 --> 01:51:53,770
to make sure that like all the samplers

2018
01:51:52,489 --> 01:51:57,429
are set up properly

2019
01:51:53,770 --> 01:52:02,030
but it sure looks like they are here and

2020
01:51:57,430 --> 01:52:06,020
if I do look at when we actually do this

2021
01:52:02,029 --> 01:52:09,170
setup let me just just verify that if I

2022
01:52:06,020 --> 01:52:12,560
open up a second window into this

2023
01:52:09,170 --> 01:52:15,590
program here this file rather I can I

2024
01:52:12,560 --> 01:52:22,640
get some confirmation that we're

2025
01:52:15,590 --> 01:52:28,489
specifying these buffers correctly so

2026
01:52:22,640 --> 01:52:31,190
zero is the front one is the back to is

2027
01:52:28,489 --> 01:52:36,920
MP ten yep three is the surface color

2028
01:52:31,189 --> 01:52:39,769
and four is the NP Tech as well again

2029
01:52:36,920 --> 01:52:44,470
all looks pretty reasonable there that's

2030
01:52:39,770 --> 01:52:48,250
that's what we would expect to see so

2031
01:52:44,470 --> 01:52:51,619
let's do this let's write the

2032
01:52:48,250 --> 01:52:56,630
reconstructed normal into the channel

2033
01:52:51,619 --> 01:52:58,909
we're not using which is here so let's

2034
01:52:56,630 --> 01:53:02,960
just see if we're clearing the

2035
01:52:58,909 --> 01:53:05,409
reconstructed normal correctly so here's

2036
01:53:02,960 --> 01:53:09,829
that buffer here's us querying the

2037
01:53:05,409 --> 01:53:18,739
reconstructed normal so this is you know

2038
01:53:09,829 --> 01:53:20,569
a X Y Z of the normal itself and and we

2039
01:53:18,739 --> 01:53:23,479
can sort of see whether this makes any

2040
01:53:20,569 --> 01:53:25,609
sense um

2041
01:53:23,479 --> 01:53:27,469
personally this isn't really packed in

2042
01:53:25,609 --> 01:53:31,880
any kind of same way because now we've

2043
01:53:27,470 --> 01:53:33,920
got like negative values Q's here we've

2044
01:53:31,880 --> 01:53:35,510
got negative and positive values into

2045
01:53:33,920 --> 01:53:37,609
your floating-point values and how those

2046
01:53:35,510 --> 01:53:40,970
are going to get mapped to a display is

2047
01:53:37,609 --> 01:53:42,949
kind of like well you know what I have

2048
01:53:40,970 --> 01:53:44,300
no idea what it's what it's going to do

2049
01:53:42,949 --> 01:53:51,349
with the floating point of a negative

2050
01:53:44,300 --> 01:53:54,970
value but at the very least what we can

2051
01:53:51,350 --> 01:53:57,860
see here is it's not ludicrous right

2052
01:53:54,970 --> 01:53:59,420
it's at least plausible now looking at

2053
01:53:57,859 --> 01:54:02,988
the the individual values themselves

2054
01:53:59,420 --> 01:54:05,659
there are some things here which again

2055
01:54:02,988 --> 01:54:07,939
don't seem to make a lot of sense so

2056
01:54:05,659 --> 01:54:14,059
maybe there are some problems here that

2057
01:54:07,939 --> 01:54:15,829
are bad so for example I'm seeing gray

2058
01:54:14,060 --> 01:54:18,320
where things should be pointing upwards

2059
01:54:15,829 --> 01:54:21,488
and once we've converted our normals

2060
01:54:18,319 --> 01:54:24,289
into actual real floating point XY and Z

2061
01:54:21,488 --> 01:54:25,609
then we shouldn't see gray for pointing

2062
01:54:24,289 --> 01:54:28,189
upwards what we should see for pointing

2063
01:54:25,609 --> 01:54:31,429
upwards is zero zero one correct which

2064
01:54:28,189 --> 01:54:33,259
should be blue and that's not what I'm

2065
01:54:31,430 --> 01:54:35,090
seeing here right so I feel like I

2066
01:54:33,260 --> 01:54:38,960
should be seeing blue where I'm seeing

2067
01:54:35,090 --> 01:54:43,390
gray similarly like something like the

2068
01:54:38,960 --> 01:54:46,730
hero where it's bringing in negative Y I

2069
01:54:43,390 --> 01:54:50,030
suppose that makes sense because that

2070
01:54:46,729 --> 01:54:52,189
would be blue and red would be set and

2071
01:54:50,029 --> 01:54:58,369
green would not would be negative and

2072
01:54:52,189 --> 01:55:00,349
not visible so that seems fair so it

2073
01:54:58,369 --> 01:55:03,319
really just feels like it feels like the

2074
01:55:00,350 --> 01:55:05,570
Z value is kind of wrong everything else

2075
01:55:03,319 --> 01:55:08,710
feels like it might be correct but the Z

2076
01:55:05,569 --> 01:55:11,710
value does feel kind of wrong

2077
01:55:08,710 --> 01:55:11,710
potentially

2078
01:55:19,748 --> 01:55:22,748
hmm

2079
01:55:23,510 --> 01:55:32,510
so let's see why does the V value feel

2080
01:55:30,229 --> 01:55:34,969
wrong well let's suppose that I was to

2081
01:55:32,510 --> 01:55:38,090
blast a Z value so let's just let's just

2082
01:55:34,969 --> 01:55:41,658
overwrite it with 0 and verify that I'm

2083
01:55:38,090 --> 01:55:43,788
seeing that correctly right so there's

2084
01:55:41,658 --> 01:55:46,399
no blue that's right that's what we

2085
01:55:43,788 --> 01:55:49,248
would expect but you can see why I'm

2086
01:55:46,399 --> 01:55:51,679
having trouble with this looking at this

2087
01:55:49,248 --> 01:55:57,618
screen I'm seeing things that are facing

2088
01:55:51,679 --> 01:56:00,859
upward are are somehow showing red and

2089
01:55:57,618 --> 01:56:02,988
green components they shouldn't be right

2090
01:56:00,859 --> 01:56:07,998
things that are facing upwards should be

2091
01:56:02,988 --> 01:56:09,708
showing 0 0 1 and they're not so again

2092
01:56:07,998 --> 01:56:12,349
I've got a problem somewhere in the pipe

2093
01:56:09,708 --> 01:56:16,578
here I don't know what it is but it's

2094
01:56:12,349 --> 01:56:18,559
definitely there and that's that the

2095
01:56:16,578 --> 01:56:29,509
bottom level that I was looking at there

2096
01:56:18,559 --> 01:56:31,610
and so that bottom level that bottom

2097
01:56:29,510 --> 01:56:40,550
level should in theory be the result of

2098
01:56:31,609 --> 01:56:42,558
the copy right as well so that's just

2099
01:56:40,550 --> 01:56:45,019
kind of troubling so I don't know what's

2100
01:56:42,559 --> 01:56:48,829
going on there let's take a look at how

2101
01:56:45,019 --> 01:56:52,760
we're writing out those values when we

2102
01:56:48,828 --> 01:56:57,219
do the def peeled of lighting make sure

2103
01:56:52,760 --> 01:56:57,219
there's there right so

2104
01:57:01,560 --> 01:57:09,120
the index in the end wire straight up

2105
01:57:03,930 --> 01:57:14,280
scales of the incoming value which is

2106
01:57:09,119 --> 01:57:16,229
just the X and the y right and then the

2107
01:57:14,279 --> 01:57:18,809
X and the y of the normal

2108
01:57:16,229 --> 01:57:23,039
we're just scaling them into the

2109
01:57:18,810 --> 01:57:25,980
negative one to one range right which is

2110
01:57:23,039 --> 01:57:32,250
what they should be no that's not true

2111
01:57:25,979 --> 01:57:35,729
I lied I lied so it should be negative

2112
01:57:32,250 --> 01:57:38,970
one plus two times the value so that

2113
01:57:35,729 --> 01:57:40,439
that was just a typo there all right

2114
01:57:38,970 --> 01:57:45,630
let's see if that gives me anything

2115
01:57:40,439 --> 01:57:47,989
better in this case much better much

2116
01:57:45,630 --> 01:57:50,940
much better that's what I want to see

2117
01:57:47,989 --> 01:57:54,000
okay so let's stop blasting the Z now

2118
01:57:50,939 --> 01:57:57,269
and sink to figure it out what was

2119
01:57:54,000 --> 01:58:00,090
happening there where's my transfer

2120
01:57:57,270 --> 01:58:02,520
light down there it is let's go back to

2121
01:58:00,090 --> 01:58:06,960
showing the right thing and now can I

2122
01:58:02,520 --> 01:58:08,820
see do I have there we go so that's what

2123
01:58:06,960 --> 01:58:10,500
I wanted to see that's exactly what it

2124
01:58:08,819 --> 01:58:14,219
should look like so now I have more

2125
01:58:10,500 --> 01:58:19,439
confidence that my normals are at least

2126
01:58:14,220 --> 01:58:20,430
you know plausible now like that looks

2127
01:58:19,439 --> 01:58:25,549
much better

2128
01:58:20,430 --> 01:58:25,550
good okay um

2129
01:58:27,979 --> 01:58:34,349
so now what we need to know is when we

2130
01:58:31,619 --> 01:58:37,529
do this sort of light transfer bouncing

2131
01:58:34,350 --> 01:58:39,329
around this my question is when we do

2132
01:58:37,529 --> 01:58:42,689
the transfer light why are we noting

2133
01:58:39,329 --> 01:58:44,880
anything when we use the facing

2134
01:58:42,689 --> 01:58:46,710
Direction term because even if it was

2135
01:58:44,880 --> 01:58:49,440
fairly low we should still get see

2136
01:58:46,710 --> 01:58:51,689
something right and so I don't know why

2137
01:58:49,439 --> 01:58:53,399
we're not seeing anything we can stop

2138
01:58:51,689 --> 01:58:55,799
writing out the normals here now because

2139
01:58:53,399 --> 01:58:57,509
I know that they are not the problem

2140
01:58:55,800 --> 01:59:00,090
what I could do is take a look at the

2141
01:58:57,510 --> 01:59:05,060
light normal so for example I could look

2142
01:59:00,090 --> 01:59:05,060
to see what we're getting in left ah ten

2143
01:59:07,569 --> 01:59:15,139
which is just the leftward light sample

2144
01:59:12,050 --> 01:59:17,060
and now I can just see what is that so

2145
01:59:15,140 --> 01:59:22,340
there's a leftward light sample and

2146
01:59:17,060 --> 01:59:26,840
again the leftward lights normal that

2147
01:59:22,340 --> 01:59:30,699
looks fine right that that does look

2148
01:59:26,840 --> 01:59:30,699
like what I would expect it to look like

2149
01:59:31,750 --> 01:59:37,100
so again I'm just not sure why I can't

2150
01:59:34,939 --> 01:59:38,210
get any transference at all it makes

2151
01:59:37,100 --> 01:59:40,940
sense why there's not a lot of

2152
01:59:38,210 --> 01:59:46,750
transference because again we're sort of

2153
01:59:40,939 --> 01:59:49,939
at this in this way where we have our

2154
01:59:46,750 --> 01:59:51,890
sprites are mostly facing upwards so

2155
01:59:49,939 --> 01:59:55,729
it's hard to get some transfer going

2156
01:59:51,890 --> 01:59:59,690
there because of that difference but

2157
01:59:55,729 --> 02:00:08,169
what we could do to there as well is we

2158
01:59:59,689 --> 02:00:08,169
could say we could take for example the

2159
02:00:11,050 --> 02:00:17,630
the level geometry and maybe bias it a

2160
02:00:15,079 --> 02:00:21,380
little so that we would see some so that

2161
02:00:17,630 --> 02:00:25,039
we've have bigger walls nearby right so

2162
02:00:21,380 --> 02:00:26,960
that's one thing we could do but again I

2163
02:00:25,039 --> 02:00:29,750
just feel like it's a little weird that

2164
02:00:26,960 --> 02:00:31,220
nothing is coming through still it just

2165
02:00:29,750 --> 02:00:33,770
doesn't seem quite right

2166
02:00:31,220 --> 02:00:36,770
and so since those normals are all

2167
02:00:33,770 --> 02:00:38,390
relatively valid I guess what I'd like

2168
02:00:36,770 --> 02:00:41,270
to do is let's take a look at the inner

2169
02:00:38,390 --> 02:00:42,500
product as just something we can write

2170
02:00:41,270 --> 02:00:44,690
out ourselves

2171
02:00:42,500 --> 02:00:47,039
so suppose we were to take the negative

2172
02:00:44,689 --> 02:00:48,829
inner product

2173
02:00:47,039 --> 02:00:52,100
[Applause]

2174
02:00:48,829 --> 02:00:54,109
I won't even clamp it yet let's take the

2175
02:00:52,100 --> 02:00:57,140
negative inner product and just just

2176
02:00:54,109 --> 02:01:01,429
write that out so what what is the

2177
02:00:57,140 --> 02:01:04,390
actual negative inner product of the

2178
02:01:01,430 --> 02:01:06,500
screen what don't you like about that

2179
02:01:04,390 --> 02:01:09,200
you don't like that that's just a

2180
02:01:06,500 --> 02:01:12,140
regular value okay that's fair

2181
02:01:09,199 --> 02:01:16,179
I want to replicate that out is that

2182
02:01:12,140 --> 02:01:16,180
something I can do like this for example

2183
02:01:19,579 --> 02:01:36,619
okay so here's that product and it

2184
02:01:32,279 --> 02:01:39,689
barely has any any result anywhere right

2185
02:01:36,619 --> 02:01:48,329
which which ain't great let's take a

2186
02:01:39,689 --> 02:01:51,119
look at the non negative version so

2187
02:01:48,329 --> 02:01:54,630
there's the non negative version so here

2188
02:01:51,119 --> 02:02:02,099
is we're basically looking at when you

2189
02:01:54,630 --> 02:02:03,659
just take the there were the two normals

2190
02:02:02,100 --> 02:02:06,890
next to each other and you dot them

2191
02:02:03,659 --> 02:02:06,889
together what do you get

2192
02:02:14,340 --> 02:02:29,550
so again in some sense I can see why

2193
02:02:17,399 --> 02:02:31,349
that would be the case because when you

2194
02:02:29,550 --> 02:02:33,390
have a bunch of normals like pointing

2195
02:02:31,350 --> 02:02:40,710
all upward they're not going to transfer

2196
02:02:33,390 --> 02:02:43,500
a light like it all right but at the

2197
02:02:40,710 --> 02:02:45,329
same time when you have like this part

2198
02:02:43,500 --> 02:02:47,640
here in that part here they should and I

2199
02:02:45,329 --> 02:02:50,059
guess that's where I was getting some of

2200
02:02:47,640 --> 02:02:50,060
that though

2201
02:02:52,409 --> 02:02:55,599
[Applause]

2202
02:03:01,880 --> 02:03:06,889
I'm supposed to be in the QA right now

2203
02:03:03,469 --> 02:03:11,179
aren't I but I mean I'm getting so

2204
02:03:06,889 --> 02:03:13,789
little of it it can it really be that

2205
02:03:11,179 --> 02:03:16,719
little I guess it could be I mean it's

2206
02:03:13,789 --> 02:03:16,719
not out of the question

2207
02:03:44,639 --> 02:03:49,319
I mean one of the things that is true is

2208
02:03:47,460 --> 02:03:52,380
that lighting transfer doesn't happen

2209
02:03:49,319 --> 02:03:54,269
much along the ground right like ground

2210
02:03:52,380 --> 02:03:57,389
to ground letting transfer if there's no

2211
02:03:54,270 --> 02:03:59,070
Hills it doesn't happen so it is kind of

2212
02:03:57,389 --> 02:04:00,569
true that I'm sort of setting myself up

2213
02:03:59,069 --> 02:04:02,158
for failure and that I'm expecting light

2214
02:04:00,569 --> 02:04:06,389
to transfer between two things where no

2215
02:04:02,158 --> 02:04:08,629
light should actually transfer let's go

2216
02:04:06,389 --> 02:04:10,980
to the QA we'll pick the SEC up tomorrow

2217
02:04:08,630 --> 02:04:18,319
but I don't want to use up all the time

2218
02:04:10,979 --> 02:04:18,319
that might be used for QA there we go

2219
02:04:20,389 --> 02:04:27,989
we've got a little bit of Q&amp;A in there

2220
02:04:22,729 --> 02:04:30,269
because yeah that does seem like it

2221
02:04:27,988 --> 02:04:36,839
could be plausibly true so I should have

2222
02:04:30,270 --> 02:04:38,130
- yeah I should have to think that

2223
02:04:36,840 --> 02:04:41,329
through a little bit further so we'll

2224
02:04:38,130 --> 02:04:41,329
see where we end up deciding tomorrow

2225
02:04:50,000 --> 02:04:57,239
midlow because some of our lighting code

2226
02:04:53,899 --> 02:05:00,149
end up being used by the audio system to

2227
02:04:57,239 --> 02:05:11,699
figure out where and how obstructed

2228
02:05:00,149 --> 02:05:20,159
reflected sound sources are probably not

2229
02:05:11,699 --> 02:05:22,050
because since it's on the GPU it says

2230
02:05:20,159 --> 02:05:30,269
it's on the GPU I don't really know that

2231
02:05:22,050 --> 02:05:31,980
there's going to be there's really not

2232
02:05:30,270 --> 02:05:37,200
going to be any way to like get back get

2233
02:05:31,979 --> 02:05:39,659
that back right I we'd have to like

2234
02:05:37,199 --> 02:05:40,949
round-trip it so I don't think it's

2235
02:05:39,659 --> 02:05:42,090
probably something we would want to do

2236
02:05:40,949 --> 02:05:45,619
that way you probably want to

2237
02:05:42,090 --> 02:05:45,619
sympathetic and run on the CPU

2238
02:06:01,770 --> 02:06:16,860
Lord of six try one - clamp uh well what

2239
02:06:14,429 --> 02:06:20,539
what are you suggesting that would do it

2240
02:06:16,859 --> 02:06:20,539
why would we do one - clamp

2241
02:06:29,550 --> 02:06:34,920
so you know what we want to do is have

2242
02:06:32,729 --> 02:06:37,369
it so that as these things turns towards

2243
02:06:34,920 --> 02:06:40,050
each other right

2244
02:06:37,369 --> 02:06:43,680
so as these things turn toward each

2245
02:06:40,050 --> 02:06:53,550
other we want the value to go up to one

2246
02:06:43,680 --> 02:06:58,770
and so that is the if this is a this is

2247
02:06:53,550 --> 02:07:03,810
B that is a transpose B negated right

2248
02:06:58,770 --> 02:07:08,100
that's the negative of that so if you

2249
02:07:03,810 --> 02:07:13,710
are going to clamp that value and it's

2250
02:07:08,100 --> 02:07:17,910
going to run between zero and one for

2251
02:07:13,710 --> 02:07:19,920
how close they are together inverting

2252
02:07:17,909 --> 02:07:21,960
the range is going to make it so that

2253
02:07:19,920 --> 02:07:24,119
this is the highest lightest rank

2254
02:07:21,960 --> 02:07:26,840
letting transfer right it's going to be

2255
02:07:24,119 --> 02:07:34,619
the perpendicular that's the highest and

2256
02:07:26,840 --> 02:07:42,300
that just doesn't that's not what we're

2257
02:07:34,619 --> 02:07:43,920
trying to accomplish here right like

2258
02:07:42,300 --> 02:07:45,779
that's not going to help us get towards

2259
02:07:43,920 --> 02:07:48,779
a functioning lighting system because it

2260
02:07:45,779 --> 02:07:52,139
like we know that it's definitely not

2261
02:07:48,779 --> 02:07:55,529
the case that perpendicular surfaces

2262
02:07:52,140 --> 02:08:00,560
transfer the most light is that's not

2263
02:07:55,529 --> 02:08:00,559
the case that make sense

2264
02:08:02,500 --> 02:08:06,649
ss gardener should you add a fake

2265
02:08:04,819 --> 02:08:08,269
ceiling for lighting or a non fake

2266
02:08:06,649 --> 02:08:13,460
ceiling based on the floor above the

2267
02:08:08,270 --> 02:08:15,679
current one yes I do think we should but

2268
02:08:13,460 --> 02:08:17,119
the problem is how to do it because the

2269
02:08:15,679 --> 02:08:18,949
ninth part of that's a death peel render

2270
02:08:17,119 --> 02:08:21,170
is it does give us like all the floors

2271
02:08:18,948 --> 02:08:26,029
but it doesn't give us the one above the

2272
02:08:21,170 --> 02:08:28,539
lumber on that's completely invisible so

2273
02:08:26,029 --> 02:08:28,539
it's like

2274
02:08:47,960 --> 02:08:51,869
not in tolerated a stream but will you

2275
02:08:50,399 --> 02:08:55,349
perhaps use something like a pipeline

2276
02:08:51,869 --> 02:08:57,599
state object for finding resources no we

2277
02:08:55,350 --> 02:08:59,430
probably won't do anything like that

2278
02:08:57,600 --> 02:09:02,370
basically we're pretty much done with

2279
02:08:59,430 --> 02:09:06,600
any sort of fussing with the pipeline

2280
02:09:02,369 --> 02:09:08,670
management I think at the moment like

2281
02:09:06,600 --> 02:09:11,720
it's pretty much probably will look the

2282
02:09:08,670 --> 02:09:11,720
way that it looks right now

2283
02:09:31,908 --> 02:09:38,429
and yeah my assumption is just that yeah

2284
02:09:34,859 --> 02:09:42,829
like so we'll have to see but in order

2285
02:09:38,429 --> 02:09:42,829
for to do the lighting transport there

2286
02:09:47,210 --> 02:09:53,550
we may have the problem of how do we how

2287
02:09:50,429 --> 02:09:55,109
do we get some values in that are multi

2288
02:09:53,550 --> 02:09:58,489
level so we can't have like a feeling

2289
02:09:55,109 --> 02:09:58,488
like we were saying

2290
02:11:34,359 --> 02:11:42,159
all right folks

2291
02:11:35,739 --> 02:11:45,569
I think we are done for today but we'll

2292
02:11:42,159 --> 02:11:45,569
pick this back up again tomorrow

2293
02:12:00,000 --> 02:12:12,340
all right Thank You overdriven episode

2294
02:12:11,079 --> 02:12:13,840
of handmade hero it's been a pleasure

2295
02:12:12,340 --> 02:12:14,920
coding the few as always if you would

2296
02:12:13,840 --> 02:12:16,420
like to follow along with series at home

2297
02:12:14,920 --> 02:12:19,149
you can always peer out of the game on

2298
02:12:16,420 --> 02:12:21,840
handmade hero or it comes with source

2299
02:12:19,149 --> 02:12:24,460
code so you can follow along with it and

2300
02:12:21,840 --> 02:12:25,510
do your own experimentation maybe you

2301
02:12:24,460 --> 02:12:28,930
can come up with some good light

2302
02:12:25,510 --> 02:12:31,300
transport stuff we also have a forum

2303
02:12:28,930 --> 02:12:32,980
site where you can go to class questions

2304
02:12:31,300 --> 02:12:36,190
a page rampage transport the video

2305
02:12:32,979 --> 02:12:37,479
series a schedule bot that tweets the

2306
02:12:36,189 --> 02:12:40,059
schedule so you know we're in real life

2307
02:12:37,479 --> 02:12:41,949
you want to catch us live and episode

2308
02:12:40,060 --> 02:12:43,360
guide for catching up on old series

2309
02:12:41,949 --> 02:12:45,279
that's it for today I'll be back

2310
02:12:43,359 --> 02:12:48,399
tomorrow to play route the lighting a

2311
02:12:45,279 --> 02:12:53,349
bit see if we can get some reasonable

2312
02:12:48,399 --> 02:12:57,489
light transport stuff happening and yeah

2313
02:12:53,350 --> 02:12:59,050
and that's about it until then have fun

2314
02:12:57,489 --> 02:13:01,889
programming LC I've run on the Internet

2315
02:12:59,050 --> 02:13:01,890
take me as everybody

