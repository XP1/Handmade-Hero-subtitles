1
00:00:01,939 --> 00:00:06,450
hello everyone and welcome to handmade

2
00:00:04,469 --> 00:00:12,809
hero the show recode a complete game

3
00:00:06,450 --> 00:00:15,239
live on stream uh we had a sort of I

4
00:00:12,808 --> 00:00:17,039
guess you might say a brainstorming

5
00:00:15,240 --> 00:00:19,170
session on Monday where we were trying

6
00:00:17,039 --> 00:00:22,500
to figure out what we wanted to do with

7
00:00:19,170 --> 00:00:24,689
respect to sorting our sprites and my

8
00:00:22,500 --> 00:00:26,969
sort of cursory conclusion after having

9
00:00:24,689 --> 00:00:28,740
gone through it quite a bit was that it

10
00:00:26,969 --> 00:00:33,960
didn't seem like there was really going

11
00:00:28,739 --> 00:00:36,238
to be a simple straightforward way to

12
00:00:33,960 --> 00:00:38,100
sort sprites and like I said in that

13
00:00:36,238 --> 00:00:40,699
stream I am not really a 2-d game

14
00:00:38,100 --> 00:00:43,679
programmer it's not what I tend to do I

15
00:00:40,700 --> 00:00:46,320
almost always worked on 3d games pretty

16
00:00:43,679 --> 00:00:49,950
much exclusively except for like very

17
00:00:46,320 --> 00:00:51,840
rare occasions and so the idea of having

18
00:00:49,950 --> 00:00:53,280
to sort sprites is not really one that

19
00:00:51,840 --> 00:00:55,140
I've thought through in any particular

20
00:00:53,280 --> 00:00:56,219
way and so we're kind of trying to think

21
00:00:55,140 --> 00:00:58,259
it through now so that we could do

22
00:00:56,219 --> 00:00:59,399
something realistic now I was hoping

23
00:00:58,259 --> 00:01:01,108
that would be a relatively simple

24
00:00:59,399 --> 00:01:02,489
problem but it seems like it's not in

25
00:01:01,109 --> 00:01:06,510
one very interesting thing that happened

26
00:01:02,488 --> 00:01:08,908
over the break yesterday because I did

27
00:01:06,510 --> 00:01:10,799
this dream yesterday was that andrew

28
00:01:08,909 --> 00:01:12,630
russell actually i guess i don't know

29
00:01:10,799 --> 00:01:16,618
how to pronounce his name andrew russell

30
00:01:12,629 --> 00:01:19,649
andrew russell i have no idea but i

31
00:01:16,618 --> 00:01:21,390
tweeted this out he basically made a

32
00:01:19,650 --> 00:01:24,180
blog post for us because it turns out

33
00:01:21,390 --> 00:01:27,420
that he is working on this problem right

34
00:01:24,180 --> 00:01:29,400
now in River City ransom which is I

35
00:01:27,420 --> 00:01:33,599
believe that the sequel to river city

36
00:01:29,400 --> 00:01:36,030
rampage and he had actually been dealing

37
00:01:33,599 --> 00:01:38,969
with this and did a bunch of work to try

38
00:01:36,030 --> 00:01:40,739
and solve this problem and I the way

39
00:01:38,969 --> 00:01:42,569
that he discussed it made it sound like

40
00:01:40,739 --> 00:01:44,429
he did not find an easy solution either

41
00:01:42,569 --> 00:01:45,898
it's actually relatively complicated he

42
00:01:44,430 --> 00:01:48,000
sort of made a blog post it was like

43
00:01:45,899 --> 00:01:50,310
talking about the fact that I was asking

44
00:01:48,000 --> 00:01:51,688
the question how should this be done and

45
00:01:50,310 --> 00:01:53,670
then he was talked showing how he did it

46
00:01:51,688 --> 00:01:56,968
and generally what happens is there's

47
00:01:53,670 --> 00:01:59,460
two fairly complicated elements to it

48
00:01:56,968 --> 00:02:01,319
the first part of what he's doing there

49
00:01:59,459 --> 00:02:02,938
is they have a little bit more

50
00:02:01,319 --> 00:02:04,468
information with their sprites than we

51
00:02:02,938 --> 00:02:06,359
do so for example when you have a

52
00:02:04,468 --> 00:02:08,669
situation that like you're like you

53
00:02:06,359 --> 00:02:10,169
species posted here where we have three

54
00:02:08,669 --> 00:02:11,719
sprites that we might be talking about i

55
00:02:10,169 --> 00:02:12,829
mean there's other sprites back here but

56
00:02:11,719 --> 00:02:15,199
you're just talking about these three

57
00:02:12,830 --> 00:02:17,060
sprites right here clearly we have a

58
00:02:15,199 --> 00:02:18,589
situation where you've got one sprite

59
00:02:17,060 --> 00:02:22,539
that's behind and one sprite that's in

60
00:02:18,590 --> 00:02:25,550
front of and what they were kind of

61
00:02:22,539 --> 00:02:29,060
looking at is when these bounding boxes

62
00:02:25,550 --> 00:02:32,150
overlap they actually have an idea of

63
00:02:29,060 --> 00:02:34,099
what the Vox sort of the

64
00:02:32,150 --> 00:02:35,659
three-dimensional depth of this thing is

65
00:02:34,099 --> 00:02:38,030
and so they know what the bounding box

66
00:02:35,659 --> 00:02:39,590
of the sprite is at various Z levels a

67
00:02:38,030 --> 00:02:42,680
world or whatever you want to call going

68
00:02:39,590 --> 00:02:44,450
back into the screen in this case and so

69
00:02:42,680 --> 00:02:46,790
that's one thing we don't really have I

70
00:02:44,449 --> 00:02:48,409
don't know if we'll need it because even

71
00:02:46,789 --> 00:02:51,799
if we sort of didn't approach similar to

72
00:02:48,409 --> 00:02:54,919
what andrew is talking about but if you

73
00:02:51,800 --> 00:02:56,300
look at this because if you look at this

74
00:02:54,919 --> 00:02:59,119
right here you can see they've got a

75
00:02:56,300 --> 00:03:02,450
sort of a to their isometric view is

76
00:02:59,120 --> 00:03:04,340
skewed twice right it's skewed both in

77
00:03:02,449 --> 00:03:06,769
terms of the tilt that handmade hero has

78
00:03:04,340 --> 00:03:08,659
but then also a sideways tilt and so

79
00:03:06,770 --> 00:03:10,580
that's a little more complicated in

80
00:03:08,659 --> 00:03:12,469
terms of what you have to handle because

81
00:03:10,580 --> 00:03:14,930
on handmade hero you I don't think we

82
00:03:12,469 --> 00:03:17,959
ever really have the case so much where

83
00:03:14,930 --> 00:03:19,730
up which side of a sprite you're on

84
00:03:17,959 --> 00:03:21,050
would determine whether you were in

85
00:03:19,729 --> 00:03:22,909
front of or behind it because you can

86
00:03:21,050 --> 00:03:26,120
see in this situation you could have

87
00:03:22,909 --> 00:03:27,949
these two people at sort of equal layers

88
00:03:26,120 --> 00:03:29,420
in the scene and one would be in front

89
00:03:27,949 --> 00:03:31,219
and one would be behind strictly based

90
00:03:29,419 --> 00:03:33,259
on which side of the sprite it was on

91
00:03:31,219 --> 00:03:35,719
there because of that that isometric

92
00:03:33,259 --> 00:03:39,679
tilt we only have that in one direction

93
00:03:35,719 --> 00:03:41,840
and and Andrews got it in two with the

94
00:03:39,680 --> 00:03:43,400
way that he structured this so that's a

95
00:03:41,840 --> 00:03:44,379
little bit of an issue because we don't

96
00:03:43,400 --> 00:03:48,019
really have much of a cook

97
00:03:44,379 --> 00:03:49,430
conceptualization there but ignoring

98
00:03:48,019 --> 00:03:51,650
that for a second because I'm not sure

99
00:03:49,430 --> 00:03:56,780
we have that problem the second part is

100
00:03:51,650 --> 00:03:59,810
I I i mean i guess i would say he sort

101
00:03:56,780 --> 00:04:02,870
of decided to solve the problem by

102
00:03:59,810 --> 00:04:06,379
saying look this is a semantic problem

103
00:04:02,870 --> 00:04:08,539
there is no real solution so you can't

104
00:04:06,379 --> 00:04:10,939
you can't approach it like a 3d thing

105
00:04:08,539 --> 00:04:13,099
which may very well be true it certainly

106
00:04:10,939 --> 00:04:16,310
seems consistent with the way I was

107
00:04:13,099 --> 00:04:19,009
feeling about it on Monday and so when

108
00:04:16,310 --> 00:04:21,560
he said it's look let's just build the

109
00:04:19,009 --> 00:04:23,959
actual graph of what we think is in

110
00:04:21,560 --> 00:04:24,829
front of what so we take all the sprites

111
00:04:23,959 --> 00:04:27,019
in the scene

112
00:04:24,829 --> 00:04:29,990
and we take what we essentially know

113
00:04:27,019 --> 00:04:31,728
about them right we say you know we know

114
00:04:29,990 --> 00:04:32,960
that this should be in front of this we

115
00:04:31,728 --> 00:04:35,930
know that this should be in front of

116
00:04:32,959 --> 00:04:37,370
that and remember I had sort of

117
00:04:35,930 --> 00:04:38,718
mentioned something like this on Monday

118
00:04:37,370 --> 00:04:40,218
and I saying well that's a little bit

119
00:04:38,718 --> 00:04:42,259
tricky because once you get into that

120
00:04:40,218 --> 00:04:46,098
situation you don't necessarily have a

121
00:04:42,259 --> 00:04:48,408
single sort and it's like that's exactly

122
00:04:46,098 --> 00:04:52,060
what he talks about here and what he

123
00:04:48,408 --> 00:04:54,918
said was that's like okay I let's just

124
00:04:52,060 --> 00:04:57,800
make the graph and even though that

125
00:04:54,918 --> 00:04:59,418
graph does not have a you like a single

126
00:04:57,800 --> 00:05:05,629
Universal way that you could sort it

127
00:04:59,418 --> 00:05:08,508
that's okay we'll just break cycles in

128
00:05:05,629 --> 00:05:11,150
the graph by arbitrarily deleting edges

129
00:05:08,509 --> 00:05:14,240
and if our arbitrary deletion of edges

130
00:05:11,149 --> 00:05:16,299
turns out to be incorrect will start

131
00:05:14,240 --> 00:05:19,129
introducing heuristics to figure out

132
00:05:16,300 --> 00:05:25,579
okay let's be smarter about how we

133
00:05:19,129 --> 00:05:28,599
delete these edges right so he goes

134
00:05:25,579 --> 00:05:30,620
through and he uses Tarzan's algorithm

135
00:05:28,598 --> 00:05:32,028
Tarzan's album I have no idea to

136
00:05:30,620 --> 00:05:33,199
pronounce that either I don't really

137
00:05:32,028 --> 00:05:34,399
know how to pronounce most things well

138
00:05:33,199 --> 00:05:41,080
you know what Wikipedia would probably

139
00:05:34,399 --> 00:05:43,758
tell us nope it won't nevermind and he's

140
00:05:41,079 --> 00:05:46,579
using that algorithm to basically go

141
00:05:43,759 --> 00:05:48,439
through and find out about the cycles in

142
00:05:46,579 --> 00:05:51,168
the graph so that you can remove edges

143
00:05:48,439 --> 00:05:53,300
to produce a single directed graph that

144
00:05:51,168 --> 00:05:54,408
doesn't have cycles in it right it

145
00:05:53,300 --> 00:05:58,848
doesn't have cycles that'll break the

146
00:05:54,408 --> 00:06:01,399
sort so that's how he tackled the

147
00:05:58,848 --> 00:06:03,889
problem and you know I think there's a

148
00:06:01,399 --> 00:06:06,258
certain amount of attractiveness to the

149
00:06:03,889 --> 00:06:08,509
idea of just saying well you know this

150
00:06:06,259 --> 00:06:11,629
is a this is a very semantic thing and

151
00:06:08,509 --> 00:06:14,180
possibly that the way in which we might

152
00:06:11,629 --> 00:06:16,968
want to state how things appear in front

153
00:06:14,180 --> 00:06:19,848
of or behind other things may never

154
00:06:16,968 --> 00:06:22,968
really be all that coherent right it may

155
00:06:19,848 --> 00:06:25,310
not be something that really makes sense

156
00:06:22,968 --> 00:06:26,899
in full three dimensions in a way that

157
00:06:25,310 --> 00:06:28,310
can really be processed and so maybe

158
00:06:26,899 --> 00:06:30,288
what you need is just something that

159
00:06:28,310 --> 00:06:33,110
deals with semantics and then you just

160
00:06:30,288 --> 00:06:35,110
write rules for determining what those

161
00:06:33,110 --> 00:06:37,580
semantics are for any given scene right

162
00:06:35,110 --> 00:06:38,389
that basically says I know this is has

163
00:06:37,579 --> 00:06:40,339
to be in front

164
00:06:38,389 --> 00:06:42,800
this I know this has to be behind this

165
00:06:40,339 --> 00:06:47,659
and you put enough of those out there

166
00:06:42,800 --> 00:06:49,250
and then you can run a sort on it that

167
00:06:47,660 --> 00:06:51,080
will produce the correct sorter for the

168
00:06:49,250 --> 00:06:54,019
script for the scene that you're looking

169
00:06:51,079 --> 00:06:55,159
at and I don't really have a problem

170
00:06:54,019 --> 00:06:57,349
with that that seems like a pretty

171
00:06:55,160 --> 00:06:59,300
reasonable solution it also lets us do

172
00:06:57,350 --> 00:07:01,280
some things that might be interesting

173
00:06:59,300 --> 00:07:04,129
for example let's say that we're going

174
00:07:01,279 --> 00:07:05,809
to output the sprite for the hero you

175
00:07:04,129 --> 00:07:07,909
know maybe we just want to say the heads

176
00:07:05,810 --> 00:07:12,500
always on top of the Cape Cape toys on

177
00:07:07,910 --> 00:07:14,439
top of the body right um before we kind

178
00:07:12,500 --> 00:07:17,899
of had to address that sort of a problem

179
00:07:14,439 --> 00:07:19,459
by specifying Z values that would be

180
00:07:17,899 --> 00:07:21,649
higher than other Z values or playing

181
00:07:19,459 --> 00:07:23,569
with the sort key remember we add the

182
00:07:21,649 --> 00:07:28,009
concept of the sort key and stuff like

183
00:07:23,569 --> 00:07:29,180
that and you know I again being a 3d

184
00:07:28,009 --> 00:07:32,870
graphics memory I haven't really thought

185
00:07:29,180 --> 00:07:35,810
too hard about what I might want to do

186
00:07:32,870 --> 00:07:39,050
in scenarios where I don't have sort of

187
00:07:35,810 --> 00:07:41,480
this more tangible definition of what's

188
00:07:39,050 --> 00:07:44,810
behind and in front of other things but

189
00:07:41,480 --> 00:07:47,090
you know at first blush it seems like a

190
00:07:44,810 --> 00:07:49,220
graph oriented approach is kind of nice

191
00:07:47,089 --> 00:07:51,619
because it does mean that I can just

192
00:07:49,220 --> 00:07:53,390
throw arbitrary semantic constraints

193
00:07:51,620 --> 00:07:55,250
into it that have nothing to do with

194
00:07:53,389 --> 00:07:56,959
where anything is it's just I know that

195
00:07:55,250 --> 00:07:58,519
the Cape should always be over the body

196
00:07:56,959 --> 00:08:00,829
or I know that the head should always be

197
00:07:58,519 --> 00:08:03,439
over the Cape I never want them to be

198
00:08:00,829 --> 00:08:09,740
drawn in any other configuration than

199
00:08:03,439 --> 00:08:11,509
that right so you know there is a

200
00:08:09,740 --> 00:08:14,720
certain attractiveness to that I don't

201
00:08:11,509 --> 00:08:16,099
really know again because like I said I

202
00:08:14,720 --> 00:08:18,770
don't have a lot of experience with this

203
00:08:16,100 --> 00:08:21,290
kind of of an engine I don't have a

204
00:08:18,769 --> 00:08:23,060
strong of a sort of intuition about

205
00:08:21,290 --> 00:08:25,460
whether this is a good route to go down

206
00:08:23,060 --> 00:08:27,079
or not but I did really like the fact

207
00:08:25,459 --> 00:08:28,159
that someone took the time to write in

208
00:08:27,079 --> 00:08:30,889
with a solution that they've been

209
00:08:28,160 --> 00:08:34,700
working on because it's kind of nice to

210
00:08:30,889 --> 00:08:36,799
know that if another person who knew you

211
00:08:34,700 --> 00:08:39,770
know if another smart person basically

212
00:08:36,799 --> 00:08:42,079
looks at a problem and determines that

213
00:08:39,769 --> 00:08:44,750
it needs a relatively complex solution

214
00:08:42,080 --> 00:08:47,450
that's kind of a good hint that probably

215
00:08:44,750 --> 00:08:48,850
you know there isn't some really obvious

216
00:08:47,450 --> 00:08:50,709
simple thing that we're just

217
00:08:48,850 --> 00:08:51,790
right the more smart people look at a

218
00:08:50,708 --> 00:08:54,429
problem and decide that something

219
00:08:51,789 --> 00:08:55,990
complex probably has to be done here the

220
00:08:54,429 --> 00:08:58,328
less likely it is that there is a hidden

221
00:08:55,990 --> 00:09:00,519
sort of simple solution whereas if

222
00:08:58,328 --> 00:09:01,508
you're the only you know if you you're

223
00:09:00,519 --> 00:09:04,629
the only person who's really looked at

224
00:09:01,509 --> 00:09:06,159
this problem you don't know whether you

225
00:09:04,629 --> 00:09:07,659
know something complicated is really

226
00:09:06,159 --> 00:09:09,789
necessary or whether you're just

227
00:09:07,659 --> 00:09:11,259
overthinking it or missing some special

228
00:09:09,789 --> 00:09:13,088
insight that would allow you to some

229
00:09:11,259 --> 00:09:14,649
simple now does this mean that there

230
00:09:13,089 --> 00:09:15,910
isn't just because he and I both looked

231
00:09:14,649 --> 00:09:17,440
at this problem and didn't see an

232
00:09:15,909 --> 00:09:18,370
immediate obvious answer no I mean there

233
00:09:17,440 --> 00:09:20,500
might still be something we're both

234
00:09:18,370 --> 00:09:22,600
missing but again I just feel like it's

235
00:09:20,500 --> 00:09:24,068
kind of nice to know that I'm not the

236
00:09:22,600 --> 00:09:26,769
only person who looked at this problem

237
00:09:24,068 --> 00:09:29,469
and didn't see an immediate obvious

238
00:09:26,769 --> 00:09:32,379
solution to it so I feel like that's you

239
00:09:29,470 --> 00:09:35,370
know kind of a nice it's nice to have

240
00:09:32,379 --> 00:09:38,169
backup as I guess what I would say a

241
00:09:35,370 --> 00:09:40,600
little reassurance that you're not just

242
00:09:38,169 --> 00:09:42,338
being stupid and missing some obvious

243
00:09:40,600 --> 00:09:43,480
thing that you know some anyone else who

244
00:09:42,339 --> 00:09:51,009
came the problem just go like oh you

245
00:09:43,480 --> 00:09:53,139
just do whatever right um so uh you know

246
00:09:51,009 --> 00:09:56,589
I'm I would totally be down for doing a

247
00:09:53,139 --> 00:09:59,528
semantic sort here and I don't really

248
00:09:56,589 --> 00:10:01,480
see a lot of problem with that the main

249
00:09:59,528 --> 00:10:05,559
thing is that if we were to do a

250
00:10:01,480 --> 00:10:07,810
semantic sort you know regardless of

251
00:10:05,559 --> 00:10:10,809
whether we did a similar sort of

252
00:10:07,809 --> 00:10:12,369
resolution to the semantic sort we do

253
00:10:10,809 --> 00:10:14,409
have the problem that we are probably

254
00:10:12,370 --> 00:10:17,039
going to have to build our semantic

255
00:10:14,409 --> 00:10:20,769
sorts a little bit differently from how

256
00:10:17,039 --> 00:10:23,500
from how River City what does it really

257
00:10:20,769 --> 00:10:25,839
ransom underground your city ransom

258
00:10:23,500 --> 00:10:28,799
underground I'm going to call that RC

259
00:10:25,839 --> 00:10:31,449
are you how are C are you is doing it

260
00:10:28,799 --> 00:10:33,159
because again they're they're sort of

261
00:10:31,448 --> 00:10:35,169
tackling a slightly different problem I

262
00:10:33,159 --> 00:10:36,490
feel like in some ways to their their

263
00:10:35,169 --> 00:10:38,769
problem might be a little harder than

264
00:10:36,490 --> 00:10:41,649
our problem because like I saying when

265
00:10:38,769 --> 00:10:43,899
you when you start to have a second you

266
00:10:41,649 --> 00:10:47,230
know the more axes your kind of trying

267
00:10:43,899 --> 00:10:49,240
to fake depth along I feel like the more

268
00:10:47,230 --> 00:10:52,959
complexity that you have to you're going

269
00:10:49,240 --> 00:10:54,759
to have to deal with right so i don't

270
00:10:52,958 --> 00:10:56,679
really know that that's the case but I

271
00:10:54,759 --> 00:10:58,990
feel like that's yeah probably the case

272
00:10:56,679 --> 00:11:01,929
and similarly I think they're trying to

273
00:10:58,990 --> 00:11:02,259
get a lot more sort of variance in kind

274
00:11:01,929 --> 00:11:04,388
of

275
00:11:02,259 --> 00:11:05,979
how much can be sort of contained in a

276
00:11:04,389 --> 00:11:07,539
sprite in terms of height variance

277
00:11:05,979 --> 00:11:09,759
whereas we don't really necessarily have

278
00:11:07,539 --> 00:11:11,409
as much of that so I would suspect that

279
00:11:09,759 --> 00:11:13,568
we can probably get away with something

280
00:11:11,409 --> 00:11:16,418
simpler than what they have which I hope

281
00:11:13,568 --> 00:11:18,039
is true because like I said I was kind

282
00:11:16,418 --> 00:11:19,948
of hoping to not have to augment our

283
00:11:18,039 --> 00:11:23,978
sprites with really any more information

284
00:11:19,948 --> 00:11:28,508
than what they kind of already have

285
00:11:23,979 --> 00:11:32,288
which is an image right so yeah so there

286
00:11:28,509 --> 00:11:33,879
you go so anyway obviously in case I

287
00:11:32,288 --> 00:11:35,859
didn't already say that thank you very

288
00:11:33,879 --> 00:11:37,389
much to andrew russell for writing in

289
00:11:35,859 --> 00:11:39,609
because that was really i thought that

290
00:11:37,389 --> 00:11:42,009
was really great and it was really

291
00:11:39,609 --> 00:11:45,309
interesting to read to and also i kind

292
00:11:42,009 --> 00:11:46,928
of as a separate total aside this game

293
00:11:45,308 --> 00:11:50,708
kind of looked to me a little bit like

294
00:11:46,928 --> 00:11:52,778
Double Dragon and I feel like that would

295
00:11:50,708 --> 00:11:55,628
be kind of fun to play so I I'm also

296
00:11:52,778 --> 00:11:57,609
kind of looking forward to the game so I

297
00:11:55,629 --> 00:12:01,178
hope that's coming along nicely because

298
00:11:57,609 --> 00:12:03,699
I kind of want to play it anyway so

299
00:12:01,178 --> 00:12:06,999
that's the the developments that

300
00:12:03,698 --> 00:12:09,308
happened yesterday so I think I might

301
00:12:06,999 --> 00:12:11,678
try playing around with that now just to

302
00:12:09,308 --> 00:12:13,719
see if I start to code something similar

303
00:12:11,678 --> 00:12:15,308
to that just so I can get a feel for

304
00:12:13,720 --> 00:12:17,079
what it would look like in the code if

305
00:12:15,308 --> 00:12:19,868
that was what we were doing and see if I

306
00:12:17,078 --> 00:12:21,849
can spot any obvious problems or if I if

307
00:12:19,869 --> 00:12:25,079
I think I like the way it feels so I can

308
00:12:21,850 --> 00:12:28,178
get a handle on how that would work and

309
00:12:25,078 --> 00:12:30,578
you know go from there so today's day

310
00:12:28,178 --> 00:12:32,588
300 on handmade hero so you want to

311
00:12:30,578 --> 00:12:33,788
going to want to unpack day 299 source

312
00:12:32,589 --> 00:12:40,720
code if you're trying to follow along

313
00:12:33,788 --> 00:12:47,548
with the programming at home now let's

314
00:12:40,720 --> 00:12:53,589
do a little loading of the project yeah

315
00:12:47,548 --> 00:12:57,308
so here we go all right so let's go

316
00:12:53,589 --> 00:12:59,379
ahead and try to to take a look at some

317
00:12:57,308 --> 00:13:01,088
of this stuff now the first thing that I

318
00:12:59,379 --> 00:13:03,879
might do is push the stack a little bit

319
00:13:01,089 --> 00:13:07,509
and say well let's hold off for just a

320
00:13:03,879 --> 00:13:09,729
second on the topological sort concept

321
00:13:07,509 --> 00:13:11,769
because we sort of have a higher level

322
00:13:09,729 --> 00:13:14,079
sort concept as well which is that we

323
00:13:11,769 --> 00:13:15,879
had those layers and so maybe those

324
00:13:14,078 --> 00:13:18,909
layers as well those

325
00:13:15,879 --> 00:13:21,939
sort of BB sort of packed into this sort

326
00:13:18,909 --> 00:13:23,889
in addition so I might also take a look

327
00:13:21,940 --> 00:13:28,000
at that I guess as we as we kind of go

328
00:13:23,889 --> 00:13:29,620
through this right and so one thing that

329
00:13:28,000 --> 00:13:31,480
I'm kind of curious about and I don't

330
00:13:29,620 --> 00:13:36,429
really know what I think about it yet

331
00:13:31,480 --> 00:13:38,440
but I'm getting the sense is that I feel

332
00:13:36,429 --> 00:13:42,370
like packing this into the render group

333
00:13:38,440 --> 00:13:44,080
might be the wrong way to go right so if

334
00:13:42,370 --> 00:13:45,940
the renderer you know previously the

335
00:13:44,080 --> 00:13:50,040
renderer was doing the sorting and it

336
00:13:45,940 --> 00:13:52,900
was doing the sorting sort of as its own

337
00:13:50,039 --> 00:13:54,250
conceptual thing that it did at the end

338
00:13:52,899 --> 00:13:56,409
of everything getting pushed onto the

339
00:13:54,250 --> 00:14:01,870
render group and what it sort of

340
00:13:56,409 --> 00:14:05,469
suggests uni is that that might want to

341
00:14:01,870 --> 00:14:08,350
be a separate sort of system now right

342
00:14:05,470 --> 00:14:11,889
we might want to have a separate idea of

343
00:14:08,350 --> 00:14:13,720
how that works and only because if you

344
00:14:11,889 --> 00:14:17,860
start to think about how this would work

345
00:14:13,720 --> 00:14:19,779
I don't know that we want to bake all of

346
00:14:17,860 --> 00:14:21,820
that sort of topological information

347
00:14:19,779 --> 00:14:25,539
into the thing that's just supposed to

348
00:14:21,820 --> 00:14:28,420
be how we get things out to the graphics

349
00:14:25,539 --> 00:14:30,149
and so i'm not sure we may sort of have

350
00:14:28,419 --> 00:14:33,129
a case where we've baked too much down

351
00:14:30,149 --> 00:14:38,709
into into a single place I don't really

352
00:14:33,129 --> 00:14:48,429
know that that's a little that's a

353
00:14:38,710 --> 00:14:49,900
little iffy at the moment okay but again

354
00:14:48,429 --> 00:14:51,279
like I said I'm not really sure what I

355
00:14:49,899 --> 00:14:53,169
want to do yet so I'm just going to kind

356
00:14:51,279 --> 00:14:55,839
of start playing with this to see what I

357
00:14:53,169 --> 00:14:58,000
think would happen here so let's go down

358
00:14:55,840 --> 00:15:00,700
and take a pretty simple scenario like

359
00:14:58,000 --> 00:15:04,409
something that's not again like maybe

360
00:15:00,700 --> 00:15:07,720
something very very straightforward that

361
00:15:04,409 --> 00:15:09,879
that I kind of know is the case which is

362
00:15:07,720 --> 00:15:15,190
that you know I've got sort of this

363
00:15:09,879 --> 00:15:17,620
notion of these where are we here of

364
00:15:15,190 --> 00:15:19,510
these pieces that I'm rendering and

365
00:15:17,620 --> 00:15:22,210
maybe I want to start talking about the

366
00:15:19,509 --> 00:15:24,100
the how the pieces why am I not seeing

367
00:15:22,210 --> 00:15:26,580
the iterator for those is it called

368
00:15:24,100 --> 00:15:26,580
something else

369
00:15:26,840 --> 00:15:33,710
oh right I know why I made the same

370
00:15:31,190 --> 00:15:37,670
mistake before the piece iterators

371
00:15:33,710 --> 00:15:41,870
actually on here so when I come through

372
00:15:37,669 --> 00:15:45,740
this this piece in dec stuff right what

373
00:15:41,870 --> 00:15:47,690
i could do is have some idea of for each

374
00:15:45,740 --> 00:15:51,320
one of these pieces how they're supposed

375
00:15:47,690 --> 00:15:53,000
to fit together to in terms of sorting

376
00:15:51,320 --> 00:15:55,610
because that's almost always going to be

377
00:15:53,000 --> 00:15:57,769
the case where like every sort of

378
00:15:55,610 --> 00:16:00,080
creature that I create probably the

379
00:15:57,769 --> 00:16:03,169
pieces are going to want to have a

380
00:16:00,080 --> 00:16:06,379
particular sort if piece of sort

381
00:16:03,169 --> 00:16:09,349
information sort of going with them

382
00:16:06,379 --> 00:16:11,450
right and especially for things like you

383
00:16:09,350 --> 00:16:13,490
know articulated bodies you know we kind

384
00:16:11,450 --> 00:16:15,530
of just know we want you know for these

385
00:16:13,490 --> 00:16:17,240
these 2d sprites to layer on top of each

386
00:16:15,529 --> 00:16:18,500
other the way that they were layered you

387
00:16:17,240 --> 00:16:23,120
know in the photoshop file that came

388
00:16:18,500 --> 00:16:25,399
from or whatever else so if we take a

389
00:16:23,120 --> 00:16:27,409
look at this piece in dec stuff we could

390
00:16:25,399 --> 00:16:29,480
imagine looking at this here and going

391
00:16:27,409 --> 00:16:32,839
well when we were when we do this push

392
00:16:29,480 --> 00:16:34,970
bitmap maybe in addition to just pushing

393
00:16:32,840 --> 00:16:37,670
the bitmap here we would also say hey

394
00:16:34,970 --> 00:16:39,500
this bitmap always has to be in front of

395
00:16:37,669 --> 00:16:41,209
this other bitmap board this bitmap is

396
00:16:39,500 --> 00:16:43,250
you know whatever write something like

397
00:16:41,210 --> 00:16:45,800
this and then we could know that the

398
00:16:43,250 --> 00:16:48,019
people who do the piece things could

399
00:16:45,799 --> 00:16:51,439
just store which peace index they were

400
00:16:48,019 --> 00:16:53,269
in front of and if that piece index is

401
00:16:51,440 --> 00:16:54,650
you know your own index or something

402
00:16:53,269 --> 00:16:56,149
like this then you know that you're not

403
00:16:54,649 --> 00:16:57,500
in front of anybody if it's an other

404
00:16:56,149 --> 00:16:59,779
index in the array then you know you're

405
00:16:57,500 --> 00:17:02,029
in front of that other thing whatever it

406
00:16:59,779 --> 00:17:03,379
is so that's just an example of

407
00:17:02,029 --> 00:17:05,599
something that we probably could do it

408
00:17:03,379 --> 00:17:07,789
would be really simple to do here and so

409
00:17:05,599 --> 00:17:11,569
that I think would solve the problem of

410
00:17:07,789 --> 00:17:12,799
inter piece sorting certainly because we

411
00:17:11,569 --> 00:17:15,259
know that they always go in that order

412
00:17:12,799 --> 00:17:17,359
now the other question that I have here

413
00:17:15,259 --> 00:17:19,490
is all right so let's say I'm out

414
00:17:17,359 --> 00:17:23,359
putting these pieces where how would I

415
00:17:19,490 --> 00:17:27,799
know how these pieces sort relative to

416
00:17:23,359 --> 00:17:31,579
other things right and and that of

417
00:17:27,799 --> 00:17:34,039
course isn't is another question I I

418
00:17:31,579 --> 00:17:36,049
guess entities are sort of output by

419
00:17:34,039 --> 00:17:38,450
themselves and so what we would have to

420
00:17:36,049 --> 00:17:40,730
do is in order to figure out how an

421
00:17:38,450 --> 00:17:42,620
individual piece that doesn't have a

422
00:17:40,730 --> 00:17:44,450
particular piece of information about

423
00:17:42,619 --> 00:17:45,829
you know how it fits into the scene

424
00:17:44,450 --> 00:17:47,179
which I guess normally they wouldn't

425
00:17:45,829 --> 00:17:48,589
because they're only going to have

426
00:17:47,179 --> 00:17:51,650
information about how they fit with each

427
00:17:48,589 --> 00:17:54,740
other I got to go ahead and figure out

428
00:17:51,650 --> 00:18:01,220
what the rules are for what goes in

429
00:17:54,740 --> 00:18:03,470
front of of what right so let me go

430
00:18:01,220 --> 00:18:06,919
ahead and try to enumerate those in as

431
00:18:03,470 --> 00:18:15,880
much as I can here here is day three

432
00:18:06,919 --> 00:18:15,880
hundred these are our like sorting rules

433
00:18:16,660 --> 00:18:22,190
so I guess my thinking on this is we

434
00:18:20,630 --> 00:18:24,440
have a number of cases and we should

435
00:18:22,190 --> 00:18:31,070
just try to enumerate them as best we

436
00:18:24,440 --> 00:18:36,590
can right so I think what I would say is

437
00:18:31,069 --> 00:18:39,500
I we know certain information about

438
00:18:36,589 --> 00:18:41,298
planar so we kind of have this notion

439
00:18:39,500 --> 00:18:46,009
that we've got sort of you know two

440
00:18:41,298 --> 00:18:51,429
types of sprite we have the ones that

441
00:18:46,009 --> 00:18:55,700
are like on the sort of on the Z plane

442
00:18:51,429 --> 00:19:05,360
and when we've got ones that are on the

443
00:18:55,700 --> 00:19:08,029
the Y plane and I think that's basically

444
00:19:05,359 --> 00:19:11,990
all we have the moment so if you think

445
00:19:08,029 --> 00:19:16,298
about those what we would have is here

446
00:19:11,990 --> 00:19:16,298
is like our coordinate system right

447
00:19:20,450 --> 00:19:29,279
oops at the moment so that's what our

448
00:19:26,670 --> 00:19:31,920
coordinate system looks like and so the

449
00:19:29,279 --> 00:19:34,230
sprites that we have our sprites that

450
00:19:31,920 --> 00:19:36,269
are on the Z plane so you know something

451
00:19:34,230 --> 00:19:39,360
that's lying flat and since we're in

452
00:19:36,269 --> 00:19:40,559
orthographic it would look like this in

453
00:19:39,359 --> 00:19:42,929
perspective it would have looked like

454
00:19:40,559 --> 00:19:46,379
that right these are things on the

455
00:19:42,930 --> 00:19:49,380
z-plane their normal easy and they have

456
00:19:46,380 --> 00:19:53,340
like a Z sort right and then we have

457
00:19:49,380 --> 00:19:55,260
things that are in the Y plane so this

458
00:19:53,339 --> 00:19:58,909
plane and their normal is y which faces

459
00:19:55,259 --> 00:20:00,869
kind of right out at the screen right

460
00:19:58,910 --> 00:20:02,759
although it's not quite right at the

461
00:20:00,869 --> 00:20:06,569
screen it's tilted a little bit it'sit's

462
00:20:02,759 --> 00:20:09,660
since you know it's that way right so

463
00:20:06,569 --> 00:20:12,929
we've got those two types of sprites

464
00:20:09,660 --> 00:20:16,350
those are the two kinds of of car of of

465
00:20:12,930 --> 00:20:18,150
sprites that we have and I we really

466
00:20:16,349 --> 00:20:19,980
just don't have any other kinds right a

467
00:20:18,150 --> 00:20:21,630
sprite has to be categorized into one of

468
00:20:19,980 --> 00:20:26,910
those two and I don't anticipate really

469
00:20:21,630 --> 00:20:28,830
allowing at this point anything else so

470
00:20:26,910 --> 00:20:32,250
if we then take a look at these sprites

471
00:20:28,829 --> 00:20:34,349
and we see a you know if two sprites and

472
00:20:32,250 --> 00:20:37,470
this is kind of another thing that I

473
00:20:34,349 --> 00:20:40,500
think we have to admit and looking at

474
00:20:37,470 --> 00:20:43,650
what Andrew posted i think reinforces

475
00:20:40,500 --> 00:20:46,079
this in my mind anyway one thing that I

476
00:20:43,650 --> 00:20:48,180
really wasn't doing before really wasn't

477
00:20:46,079 --> 00:20:50,970
thinking about carefully enough was the

478
00:20:48,180 --> 00:20:53,910
fact that obviously to start with we

479
00:20:50,970 --> 00:20:56,519
only care about sorting sprites if the

480
00:20:53,910 --> 00:20:58,800
sprites overlap each other right meaning

481
00:20:56,519 --> 00:21:01,200
it doesn't matter what order we draw two

482
00:20:58,799 --> 00:21:02,339
sprites who aren't overlapping so to the

483
00:21:01,200 --> 00:21:04,650
extent that we care about what happens

484
00:21:02,339 --> 00:21:08,220
to those sprites it's only in terms of

485
00:21:04,650 --> 00:21:10,680
how our sort order goes right how our

486
00:21:08,220 --> 00:21:12,360
overall sort order goes so in terms of

487
00:21:10,680 --> 00:21:14,009
determining the rules we actually care

488
00:21:12,359 --> 00:21:17,490
about we only need to know what happens

489
00:21:14,009 --> 00:21:20,089
when two sprites are overlapping right

490
00:21:17,490 --> 00:21:20,089
so

491
00:21:22,329 --> 00:21:31,009
okay so let's talk about this for a

492
00:21:26,809 --> 00:21:32,359
second so we have if these are the kinds

493
00:21:31,009 --> 00:21:33,920
of sprites that we are going to support

494
00:21:32,359 --> 00:21:36,679
we're going to support Z planar and why

495
00:21:33,920 --> 00:21:39,830
planar sprites then by definition in

496
00:21:36,680 --> 00:21:43,130
terms of overlaps we have four sort of

497
00:21:39,829 --> 00:21:46,579
nominal cases right but we can simplify

498
00:21:43,130 --> 00:21:50,650
that down to three because one of them

499
00:21:46,579 --> 00:21:57,980
is interchangeable right we have Z

500
00:21:50,650 --> 00:22:02,630
overlaps Z we have Y overlaps y and we

501
00:21:57,980 --> 00:22:04,250
have Z overlaps why right so this is

502
00:22:02,630 --> 00:22:06,050
like Z planar sprites overlapping Z

503
00:22:04,250 --> 00:22:07,369
planner sprites y plena sprites are my

504
00:22:06,049 --> 00:22:11,000
parents flights and then one more its a

505
00:22:07,369 --> 00:22:13,549
mix and technically we have Y overlaps Z

506
00:22:11,000 --> 00:22:16,369
as well but because there isn't really a

507
00:22:13,549 --> 00:22:18,200
meaning to the ordering of who is

508
00:22:16,369 --> 00:22:20,479
overlapping who I mean two things that

509
00:22:18,200 --> 00:22:22,549
overlap since we're talking about

510
00:22:20,480 --> 00:22:25,250
sorting there isn't a concept of who's

511
00:22:22,549 --> 00:22:27,919
like in charge here right so the Z

512
00:22:25,250 --> 00:22:30,079
overlaps why case is the same as the Y

513
00:22:27,920 --> 00:22:31,759
overlap Z case which is why I say we

514
00:22:30,079 --> 00:22:32,689
technically have four cases but really

515
00:22:31,759 --> 00:22:35,119
if there's only three that matter

516
00:22:32,690 --> 00:22:36,440
because Y overlap Z can just be treated

517
00:22:35,119 --> 00:22:38,059
as Z overlaps why you switch the order

518
00:22:36,440 --> 00:22:41,900
of the two things you were checking if

519
00:22:38,059 --> 00:22:44,659
you know if you got that case so these

520
00:22:41,900 --> 00:22:48,740
are the cases that we have now if we

521
00:22:44,660 --> 00:22:53,029
have a Z overlaps Z sprite case in that

522
00:22:48,740 --> 00:22:54,380
case uh so so let me let me brick I

523
00:22:53,029 --> 00:22:56,029
guess I say let's let's break these down

524
00:22:54,380 --> 00:23:00,740
one at a time and figure out what we

525
00:22:56,029 --> 00:23:05,170
want each case to be here right so let's

526
00:23:00,740 --> 00:23:10,609
take our first case which is Z overlaps

527
00:23:05,170 --> 00:23:12,830
Z ok now for zee overlap z we have a

528
00:23:10,609 --> 00:23:18,079
situation that looks something you know

529
00:23:12,829 --> 00:23:20,419
like this let's say ok so both of these

530
00:23:18,079 --> 00:23:22,279
sprites are basically right they are you

531
00:23:20,420 --> 00:23:25,330
know parallel to the concept of the

532
00:23:22,279 --> 00:23:29,539
ground and we need to sort these things

533
00:23:25,329 --> 00:23:32,720
so that they come out properly right now

534
00:23:29,539 --> 00:23:35,210
if we were only talking about things

535
00:23:32,720 --> 00:23:37,100
that were directly on top of each other

536
00:23:35,210 --> 00:23:38,778
then presumably it becomes relatively

537
00:23:37,099 --> 00:23:41,538
straightforward to sort them because we

538
00:23:38,778 --> 00:23:44,028
would just sort them by Z so you know if

539
00:23:41,538 --> 00:23:46,490
to you know looking from the top down if

540
00:23:44,028 --> 00:23:49,369
the answer here was that these things

541
00:23:46,490 --> 00:23:52,730
are right on top of each other we would

542
00:23:49,369 --> 00:23:55,879
only care about sorting them by Z but if

543
00:23:52,730 --> 00:23:58,399
things are sort of offset in Y as well

544
00:23:55,880 --> 00:24:01,730
we have to think about this problem a

545
00:23:58,398 --> 00:24:04,398
little bit harder right so let's talk

546
00:24:01,730 --> 00:24:06,710
about this a little bit more carefully

547
00:24:04,398 --> 00:24:09,949
so in order to get something that looks

548
00:24:06,710 --> 00:24:14,538
like this one thing that I think we

549
00:24:09,950 --> 00:24:23,480
could say is that if we sort if we sort

550
00:24:14,538 --> 00:24:25,490
these by Z and in fact I think I'm

551
00:24:23,480 --> 00:24:27,700
trying to think if this is incorrect or

552
00:24:25,490 --> 00:24:27,700
not

553
00:24:33,210 --> 00:24:37,079
well let me keep talking because I was

554
00:24:36,359 --> 00:24:40,079
kind of trying to jump to a conclusion

555
00:24:37,079 --> 00:24:41,490
there and maybe I shouldn't all right so

556
00:24:40,079 --> 00:24:43,319
we have some we have some different

557
00:24:41,490 --> 00:24:44,579
cases about what's going to happen in

558
00:24:43,319 --> 00:24:45,750
the why and what's going to happen in

559
00:24:44,579 --> 00:24:47,579
the Z so I'm just going to again

560
00:24:45,750 --> 00:24:52,169
enumerate all the cases and we'll just

561
00:24:47,579 --> 00:24:55,648
see how it shakes out right so if we

562
00:24:52,169 --> 00:24:57,630
take Ozzie overlaps Z case then we

563
00:24:55,648 --> 00:25:01,048
obviously have three things that could

564
00:24:57,630 --> 00:25:02,130
happen with their Z coordinates or and

565
00:25:01,048 --> 00:25:03,418
three things that could happen with

566
00:25:02,130 --> 00:25:06,450
their y coordinates or I guess for

567
00:25:03,419 --> 00:25:08,399
technically right so if we take a look

568
00:25:06,450 --> 00:25:12,179
at the coordinates it we just look at

569
00:25:08,398 --> 00:25:14,369
one of the axes right we would have as I

570
00:25:12,179 --> 00:25:17,880
think I drew up before we would have a

571
00:25:14,369 --> 00:25:20,129
disjoint case right so there they look

572
00:25:17,880 --> 00:25:22,289
like this and maybe I should draw these

573
00:25:20,130 --> 00:25:27,299
a little bit offset so you can kind of

574
00:25:22,288 --> 00:25:33,720
see so there's the disjoint case there's

575
00:25:27,298 --> 00:25:38,480
the overlap case right and then there's

576
00:25:33,720 --> 00:25:38,480
the sub zoomed case

577
00:25:41,920 --> 00:25:47,630
right and you can think of this is

578
00:25:44,990 --> 00:25:49,579
happening in either dimension right so

579
00:25:47,630 --> 00:25:52,490
this could be happening along the z-axis

580
00:25:49,579 --> 00:25:55,189
this could be happening along the x axis

581
00:25:52,490 --> 00:25:57,019
as well right because technically these

582
00:25:55,190 --> 00:25:59,930
things can be sort of could could be

583
00:25:57,019 --> 00:26:01,910
considered bounding volumes so you know

584
00:25:59,930 --> 00:26:03,950
the sprite has a certain could have a

585
00:26:01,910 --> 00:26:06,440
certain depth in Z if it wants to write

586
00:26:03,950 --> 00:26:08,660
you can you can sort of have that as a

587
00:26:06,440 --> 00:26:18,529
conceptual z-depth if that makes sense

588
00:26:08,660 --> 00:26:26,150
um so we so kind of think of what that

589
00:26:18,529 --> 00:26:29,599
sort of means you know I guess no that's

590
00:26:26,150 --> 00:26:36,290
not really true so since we're not

591
00:26:29,599 --> 00:26:41,269
really allowing you to have not to think

592
00:26:36,289 --> 00:26:44,029
about that I'm not sure to what extent

593
00:26:41,269 --> 00:26:46,039
we want to allow things to have both as

594
00:26:44,029 --> 00:26:47,690
opposed to just breaking them into two

595
00:26:46,039 --> 00:26:49,250
sprites I think what we would always do

596
00:26:47,690 --> 00:26:52,700
is just break things into two sprites

597
00:26:49,250 --> 00:26:55,220
for the most part right so for example

598
00:26:52,700 --> 00:27:00,500
when if we were to have a block that

599
00:26:55,220 --> 00:27:02,059
looked like this right and here's like

600
00:27:00,500 --> 00:27:04,009
the side of the block and here's the top

601
00:27:02,059 --> 00:27:05,779
of the block I mean I think we would

602
00:27:04,009 --> 00:27:07,730
want to break it into two sprites like

603
00:27:05,779 --> 00:27:10,460
this is the one sprite and this is the

604
00:27:07,730 --> 00:27:12,759
tooth right and this one is the Z sprite

605
00:27:10,460 --> 00:27:14,920
right and this one is a why sprite I

606
00:27:12,759 --> 00:27:17,089
think that's how we would want to do it

607
00:27:14,920 --> 00:27:18,259
if you could you know if you can stand

608
00:27:17,089 --> 00:27:19,819
out if you couldn't stand on it we

609
00:27:18,259 --> 00:27:23,599
wouldn't need the Z sprite part of it at

610
00:27:19,819 --> 00:27:25,309
all so I think we might be able to get

611
00:27:23,599 --> 00:27:28,909
away with not really having the concept

612
00:27:25,309 --> 00:27:34,730
of depth at all there right so for Z

613
00:27:28,910 --> 00:27:39,440
sprites it would seem that since they

614
00:27:34,730 --> 00:27:42,470
are always flat slices for all intents

615
00:27:39,440 --> 00:27:45,740
and purposes you can sort them directly

616
00:27:42,470 --> 00:27:48,400
i think based on their highest z point

617
00:27:45,740 --> 00:27:53,120
like they're just be whatever that

618
00:27:48,400 --> 00:27:55,019
slices it's just constant right so i

619
00:27:53,119 --> 00:28:00,599
think we could say that this is

620
00:27:55,019 --> 00:28:04,289
this is the case for why but for Z

621
00:28:00,599 --> 00:28:08,279
there's really only you know two cases

622
00:28:04,289 --> 00:28:09,359
there's coincident and not coincident

623
00:28:08,279 --> 00:28:12,809
right there's either they're right

624
00:28:09,359 --> 00:28:14,909
together or there you know ask you all

625
00:28:12,809 --> 00:28:18,509
right so let's think about this for a

626
00:28:14,910 --> 00:28:25,009
second so let's say that these two

627
00:28:18,509 --> 00:28:25,009
things are overlapping on the y-axis but

628
00:28:25,039 --> 00:28:31,289
but we're let's talk about this z

629
00:28:28,500 --> 00:28:34,740
sorting here so if something is higher

630
00:28:31,289 --> 00:28:37,289
than something else in Z then that means

631
00:28:34,740 --> 00:28:39,480
that it's sort of on a different plane

632
00:28:37,289 --> 00:28:42,269
and if we assume that it's always going

633
00:28:39,480 --> 00:28:43,650
to be a flat piece like this that would

634
00:28:42,269 --> 00:28:46,170
seem to suggest that you could always

635
00:28:43,650 --> 00:28:49,140
sort those things just sorting them by Z

636
00:28:46,170 --> 00:28:51,180
right it's always sufficient to sort Z

637
00:28:49,140 --> 00:28:54,270
planar things by Z they'll they'll never

638
00:28:51,180 --> 00:28:55,890
be a case where something that's below

639
00:28:54,269 --> 00:28:57,750
something else in Z should be drawn

640
00:28:55,890 --> 00:29:01,620
first I don't think that would ever

641
00:28:57,750 --> 00:29:04,019
actually occur right because no matter

642
00:29:01,619 --> 00:29:07,769
what you did I don't think you could

643
00:29:04,019 --> 00:29:08,549
ever really produce the case where like

644
00:29:07,769 --> 00:29:10,589
I'm trying to think if I can ever

645
00:29:08,549 --> 00:29:14,339
produce the case where something that's

646
00:29:10,589 --> 00:29:17,399
lower in Z actually draws on top because

647
00:29:14,339 --> 00:29:20,159
as things you know it as you tilt and

648
00:29:17,400 --> 00:29:22,320
things kind of go up in why they're

649
00:29:20,160 --> 00:29:25,230
going up and why by getting a higher Z

650
00:29:22,319 --> 00:29:28,980
value it you know if they have a higher

651
00:29:25,230 --> 00:29:31,769
Z value so you could never get lower by

652
00:29:28,980 --> 00:29:34,829
having a higher Z value or go higher

653
00:29:31,769 --> 00:29:37,500
z-value always increases your visibility

654
00:29:34,829 --> 00:29:40,259
on the screen never decreases it as far

655
00:29:37,500 --> 00:29:42,599
as I can think right so I feel like

656
00:29:40,259 --> 00:29:46,700
sorting by Z would always work for Z

657
00:29:42,599 --> 00:29:46,699
sprites I don't know

658
00:29:55,148 --> 00:30:01,250
so it seems to me like maybe sort by Z

659
00:29:58,038 --> 00:30:02,808
just kind of works in that case and you

660
00:30:01,250 --> 00:30:04,940
don't really have to worry about it at

661
00:30:02,808 --> 00:30:08,089
all I don't know that's just my thought

662
00:30:04,940 --> 00:30:10,460
but I'm not sure so I feel like sorting

663
00:30:08,089 --> 00:30:12,699
by z4z overlap sea sprite would be a

664
00:30:10,460 --> 00:30:19,788
fine rule that would just kind of work

665
00:30:12,700 --> 00:30:23,149
for why overlaps why right I feel like

666
00:30:19,788 --> 00:30:25,970
it basically the same thing is is

667
00:30:23,148 --> 00:30:27,408
probably not I feel like we're not going

668
00:30:25,970 --> 00:30:31,278
to get away with something so simple and

669
00:30:27,409 --> 00:30:34,940
the reason for that is that the Z value

670
00:30:31,278 --> 00:30:37,759
of the sprite could influence how it's

671
00:30:34,940 --> 00:30:38,870
supposed to be sorted so let's take a

672
00:30:37,759 --> 00:30:42,379
look at that case a little more

673
00:30:38,869 --> 00:30:43,759
carefully for y overlaps why maybe what

674
00:30:42,380 --> 00:30:45,649
we should do in fact and I'm going to

675
00:30:43,759 --> 00:30:49,129
see if this is true but let's let's take

676
00:30:45,648 --> 00:30:51,979
a look at a why overlaps Z first because

677
00:30:49,130 --> 00:30:58,010
that may be the easier case even so

678
00:30:51,980 --> 00:30:59,990
here's case to this case one all right

679
00:30:58,009 --> 00:31:02,450
so for a while apps Z that's the case

680
00:30:59,990 --> 00:31:09,548
where we have like a Z sprite like this

681
00:31:02,450 --> 00:31:12,380
and then we have a why sprite like this

682
00:31:09,548 --> 00:31:15,500
right and we need to know which one of

683
00:31:12,380 --> 00:31:16,880
these we should be drawing so I would

684
00:31:15,500 --> 00:31:19,579
imagine that in the case where we're

685
00:31:16,880 --> 00:31:23,528
drawing these what we want to know is is

686
00:31:19,579 --> 00:31:27,349
the highest point on the Y sprite right

687
00:31:23,528 --> 00:31:30,648
is the highest point on this Y sprite

688
00:31:27,349 --> 00:31:34,089
going to be above this Z sprite in the

689
00:31:30,648 --> 00:31:39,199
case where the Y sprite is actually

690
00:31:34,089 --> 00:31:40,759
overlaps the Z sprite in Y right so for

691
00:31:39,200 --> 00:31:44,630
example what we would kind of have to

692
00:31:40,759 --> 00:31:47,808
know here is how big is this Z sprite in

693
00:31:44,630 --> 00:31:50,269
Z right so if we were looking at how big

694
00:31:47,808 --> 00:31:52,190
is this sea sprite in why so if we took

695
00:31:50,269 --> 00:31:55,849
a look at the top down right here is the

696
00:31:52,190 --> 00:31:58,669
y-axis here is the x axis z axis is kind

697
00:31:55,849 --> 00:32:03,138
of coming out at us so if we were to

698
00:31:58,669 --> 00:32:07,270
look at this if this if this sprite is

699
00:32:03,138 --> 00:32:10,119
behind this Z sprite in why

700
00:32:07,269 --> 00:32:11,710
I feel like there's no way that the that

701
00:32:10,119 --> 00:32:19,089
this bright should ever be drawn in

702
00:32:11,710 --> 00:32:22,269
front right that's just nonsensical to

703
00:32:19,089 --> 00:32:26,289
me same is true i think for if it's in

704
00:32:22,269 --> 00:32:28,059
front of right so if the why if the if

705
00:32:26,289 --> 00:32:31,119
the sprite that we're talking about if

706
00:32:28,059 --> 00:32:33,069
the Y sprites why is entirely behind the

707
00:32:31,119 --> 00:32:34,839
sea sprite or entirely in front of the

708
00:32:33,069 --> 00:32:38,470
Z's right then you can just sort by why

709
00:32:34,839 --> 00:32:41,049
I think and be done right because

710
00:32:38,470 --> 00:32:44,230
there's really no case i can think of

711
00:32:41,049 --> 00:32:50,079
where that wouldn't be true I it yeah I

712
00:32:44,230 --> 00:32:52,809
think that's always the case right so

713
00:32:50,079 --> 00:32:55,210
the only question comes when there's an

714
00:32:52,809 --> 00:33:00,609
overlap so I think the first thing we

715
00:32:55,210 --> 00:33:06,360
say is if overlaps in Y then we need to

716
00:33:00,609 --> 00:33:12,099
do the complex case else sort by why

717
00:33:06,359 --> 00:33:13,750
right so if we overlap in Y and I

718
00:33:12,099 --> 00:33:17,339
shouldn't say overlap I should say

719
00:33:13,750 --> 00:33:25,569
something a little bit more specific if

720
00:33:17,339 --> 00:33:30,129
Y inside why range of Z right if Y if

721
00:33:25,569 --> 00:33:34,000
the Y sprite is inside the Y range of

722
00:33:30,130 --> 00:33:36,130
the sea sprite if that's the case then

723
00:33:34,000 --> 00:33:39,609
we have to figure out how to sort these

724
00:33:36,130 --> 00:33:41,500
two things more conclusively and I guess

725
00:33:39,609 --> 00:33:46,479
the easiest way to say that would be is

726
00:33:41,500 --> 00:33:51,730
then then we would say sort top of Y

727
00:33:46,480 --> 00:33:54,490
sprite by Z right because if this if

728
00:33:51,730 --> 00:33:56,230
this point is above this sprites plane

729
00:33:54,490 --> 00:33:58,599
we should draw this guy and if it's

730
00:33:56,230 --> 00:34:03,190
below we shouldn't I think it's that

731
00:33:58,599 --> 00:34:04,929
simple right and if we wanted to allow

732
00:34:03,190 --> 00:34:07,059
you to interpenetrate we would have to

733
00:34:04,930 --> 00:34:09,250
split the sprite in half at the point

734
00:34:07,059 --> 00:34:10,418
where was in pendant penetrating but

735
00:34:09,250 --> 00:34:14,500
we're really not gonna allow

736
00:34:10,418 --> 00:34:18,190
interpenetration I don't think so at

737
00:34:14,500 --> 00:34:19,840
least I'm I don't anticipate allowing

738
00:34:18,190 --> 00:34:21,128
that I think if we were gonna do

739
00:34:19,840 --> 00:34:23,588
something like a

740
00:34:21,128 --> 00:34:25,418
a creature that kind of rose up out of

741
00:34:23,588 --> 00:34:27,878
the ground magically that would be a

742
00:34:25,418 --> 00:34:30,219
fact that knew about that so it would

743
00:34:27,878 --> 00:34:32,139
already be clipping I think it could

744
00:34:30,219 --> 00:34:33,548
just know to clip to it where it was

745
00:34:32,139 --> 00:34:34,919
think was coming on the ground so I

746
00:34:33,548 --> 00:34:37,509
don't think we need the sort to

747
00:34:34,918 --> 00:34:39,009
compensate for that I think that can

748
00:34:37,509 --> 00:34:40,028
just be handled manually in the cases

749
00:34:39,009 --> 00:34:41,230
where we want that because we're already

750
00:34:40,028 --> 00:34:45,059
gonna have to manage that as a real

751
00:34:41,230 --> 00:34:53,528
effect so let's talk about number three

752
00:34:45,059 --> 00:34:57,129
which is why overlaps why so if Y

753
00:34:53,528 --> 00:35:00,338
sprites overlap each other then we sort

754
00:34:57,128 --> 00:35:01,838
of have I guess I think this is the most

755
00:35:00,338 --> 00:35:04,239
complicated case I don't know I could be

756
00:35:01,838 --> 00:35:06,369
wrong about that because these two cases

757
00:35:04,239 --> 00:35:07,959
are pretty straightforward but if Y

758
00:35:06,369 --> 00:35:11,048
overlaps why then what we have

759
00:35:07,960 --> 00:35:14,108
essentially looking at it again sort of

760
00:35:11,048 --> 00:35:15,670
from the perspective of top-down we

761
00:35:14,108 --> 00:35:19,210
basically have something that looks like

762
00:35:15,670 --> 00:35:21,869
this right so we've got these two sort

763
00:35:19,210 --> 00:35:26,170
of sprites we're looking at them and

764
00:35:21,869 --> 00:35:27,759
they've got a sort order in Y and you

765
00:35:26,170 --> 00:35:30,759
know on the screen they look something

766
00:35:27,759 --> 00:35:33,369
like this now the question that the only

767
00:35:30,759 --> 00:35:34,990
question that there is is how you know

768
00:35:33,369 --> 00:35:35,920
can we just sort them and why or do we

769
00:35:34,989 --> 00:35:37,659
have to do something more complicated

770
00:35:35,920 --> 00:35:38,588
here and the reason that I don't know if

771
00:35:37,659 --> 00:35:42,509
we need to something more complicated

772
00:35:38,588 --> 00:35:47,009
here is because I feel like there's a Z

773
00:35:42,509 --> 00:35:49,809
component to this sorting that is

774
00:35:47,009 --> 00:35:53,259
relevant and the reason that I think

775
00:35:49,809 --> 00:35:59,048
that's true is because for example let's

776
00:35:53,259 --> 00:36:01,088
say we took the hero so there's the head

777
00:35:59,048 --> 00:36:05,400
there's the torso there's the body in

778
00:36:01,088 --> 00:36:08,949
this configuration head sorts top torsos

779
00:36:05,400 --> 00:36:11,200
sorts middle and body sorts last right

780
00:36:08,949 --> 00:36:15,518
or sorry cape sorts middle of bodies

781
00:36:11,199 --> 00:36:18,489
force last if that's the case then what

782
00:36:15,518 --> 00:36:21,068
that means is we need sort of this this

783
00:36:18,489 --> 00:36:25,709
idea that the Z stacking of Y sprites

784
00:36:21,068 --> 00:36:28,300
makes a difference right so I think uh

785
00:36:25,710 --> 00:36:35,079
what we would need to know

786
00:36:28,300 --> 00:36:37,720
there is how do we interplay the Y and

787
00:36:35,079 --> 00:36:39,759
the Z properly to figure out whether

788
00:36:37,719 --> 00:36:45,879
you're in front of or behind someone

789
00:36:39,760 --> 00:36:49,600
based on that that's e value so because

790
00:36:45,880 --> 00:36:51,309
yeah obviously you know increasing the Z

791
00:36:49,599 --> 00:36:52,929
value of a sprite that's clearly behind

792
00:36:51,309 --> 00:36:54,639
another sprite shouldn't sort it in

793
00:36:52,929 --> 00:36:55,899
front but then at the same time we kind

794
00:36:54,639 --> 00:36:57,759
of have this weird thing where the capes

795
00:36:55,900 --> 00:37:00,880
are you know in front of the here or

796
00:36:57,760 --> 00:37:02,860
whatever the answer might be that you do

797
00:37:00,880 --> 00:37:05,380
what we sort in Y and this is a special

798
00:37:02,860 --> 00:37:08,230
case so things that are assemblies have

799
00:37:05,380 --> 00:37:10,780
to be especially given those rules

800
00:37:08,230 --> 00:37:12,670
specially right and that would be fine

801
00:37:10,780 --> 00:37:14,769
like I said we could just have that be a

802
00:37:12,670 --> 00:37:22,260
thing that happens so I don't know maybe

803
00:37:14,769 --> 00:37:22,259
that's not a problem I don't know

804
00:37:33,338 --> 00:37:42,058
I would say that I don't have a real

805
00:37:37,989 --> 00:37:42,059
case in mind uh

806
00:37:50,250 --> 00:37:55,210
like I wish I had a clear case in my

807
00:37:52,960 --> 00:37:58,240
mind that's like something that'll

808
00:37:55,210 --> 00:38:02,769
happen in the game that involves sort of

809
00:37:58,239 --> 00:38:04,239
not a not unknown assembly right because

810
00:38:02,769 --> 00:38:06,489
because what we're talking about here is

811
00:38:04,239 --> 00:38:08,858
sort of I want this one known assembly

812
00:38:06,489 --> 00:38:10,269
to sort like this but if that's the only

813
00:38:08,858 --> 00:38:12,549
time that this sort of thing ever

814
00:38:10,269 --> 00:38:13,900
happens then that's probably not there's

815
00:38:12,550 --> 00:38:16,060
probably no reason to lean on the

816
00:38:13,900 --> 00:38:18,099
topological sort we just throw these

817
00:38:16,059 --> 00:38:19,659
things into the sort as a unit that just

818
00:38:18,099 --> 00:38:21,280
always goes in the direction it goes

819
00:38:19,659 --> 00:38:22,989
right it's like hey these things are

820
00:38:21,280 --> 00:38:24,310
just sorted together and then make sure

821
00:38:22,989 --> 00:38:28,389
they go on top of each other like this

822
00:38:24,309 --> 00:38:29,619
that would just work right in other

823
00:38:28,389 --> 00:38:31,509
words we could treat them all as just

824
00:38:29,619 --> 00:38:34,300
once front effectively at that point and

825
00:38:31,510 --> 00:38:36,369
not have to think about that too hard so

826
00:38:34,300 --> 00:38:39,250
I don't really know if there's another

827
00:38:36,369 --> 00:38:41,619
case where where I actually wouldn't be

828
00:38:39,250 --> 00:38:43,719
able to sort by Y so it's possible that

829
00:38:41,619 --> 00:38:47,440
the answer here is like you just sort by

830
00:38:43,719 --> 00:38:49,088
Y and then you're done that they just

831
00:38:47,440 --> 00:38:50,740
have to be in front of behind each other

832
00:38:49,088 --> 00:38:53,320
based on their y values and that's

833
00:38:50,739 --> 00:39:04,239
always correct because I think that

834
00:38:53,320 --> 00:39:06,250
might always be correct so yeah so if

835
00:39:04,239 --> 00:39:08,829
you take a look at what actually happens

836
00:39:06,250 --> 00:39:10,659
here if we if we consolidate these cases

837
00:39:08,829 --> 00:39:12,039
and write that down and assume that

838
00:39:10,659 --> 00:39:19,838
we're correct at all which we might not

839
00:39:12,039 --> 00:39:30,670
be we have like Z a Z Z pairing is sort

840
00:39:19,838 --> 00:39:37,029
by Z a YY pairing is sort x y and z y

841
00:39:30,670 --> 00:39:42,789
pairing is a is sort of a question mark

842
00:39:37,030 --> 00:39:50,220
if you will which is why in Z and if it

843
00:39:42,789 --> 00:39:56,219
is then we sort by Z else we would sort

844
00:39:50,219 --> 00:40:06,669
biwi right that's what we said I think

845
00:39:56,219 --> 00:40:16,629
if Y overlaps and z sort by Z and there

846
00:40:06,670 --> 00:40:27,849
we go and z is always the top see so

847
00:40:16,630 --> 00:40:31,749
like Z is always highest Z and Y sorting

848
00:40:27,849 --> 00:40:36,999
by why in this case is always just a

849
00:40:31,748 --> 00:40:41,098
known unknown thing so if we look at

850
00:40:36,998 --> 00:40:43,988
what actually happens here essentially

851
00:40:41,099 --> 00:40:46,568
we always fall into one of two cases a

852
00:40:43,989 --> 00:40:50,409
sort by Z and a sort by why that's

853
00:40:46,568 --> 00:40:53,048
always true so really we just have a

854
00:40:50,409 --> 00:40:59,230
preamble which says how do i pick you

855
00:40:53,048 --> 00:41:00,998
know what I'm sorting by and in this

856
00:40:59,230 --> 00:41:05,380
case we could say that this predicate

857
00:41:00,998 --> 00:41:06,788
here the y and z predicate we could say

858
00:41:05,380 --> 00:41:09,789
that this predicate is really the entire

859
00:41:06,789 --> 00:41:14,619
determiner so the entire thing is we

860
00:41:09,789 --> 00:41:21,160
would say you know if you know y and z

861
00:41:14,619 --> 00:41:26,000
whatever that means we would say sort by

862
00:41:21,159 --> 00:41:34,289
Z else

863
00:41:26,000 --> 00:41:40,500
sort by why right and this function here

864
00:41:34,289 --> 00:41:45,929
is just our cases so the y and z case is

865
00:41:40,500 --> 00:41:49,710
like you know is it z on z if it's z on

866
00:41:45,929 --> 00:41:53,399
zee i guess i'll draw this way in the

867
00:41:49,710 --> 00:41:57,179
case where we have a Zeon z case we want

868
00:41:53,400 --> 00:42:00,389
to sort by Z so it would return true is

869
00:41:57,179 --> 00:42:06,269
it a why on why case then it would

870
00:42:00,389 --> 00:42:08,608
return false right and then we because

871
00:42:06,269 --> 00:42:12,750
if you think about this why on why

872
00:42:08,608 --> 00:42:15,779
sprites can never overlap right that's

873
00:42:12,750 --> 00:42:18,119
not possible because they don't have any

874
00:42:15,780 --> 00:42:19,800
Z depth they can't overlap at Z so that

875
00:42:18,119 --> 00:42:21,358
is actually the case that there that's

876
00:42:19,800 --> 00:42:23,369
always false if they did they would be

877
00:42:21,358 --> 00:42:26,579
in an illegal case where there where we

878
00:42:23,369 --> 00:42:32,670
which we can't resolve anyway right and

879
00:42:26,579 --> 00:42:36,029
if it's a Z if it's a why Anzhi case you

880
00:42:32,670 --> 00:42:44,220
know then in that case we have to check

881
00:42:36,030 --> 00:42:45,990
the actual bounds so really we know

882
00:42:44,219 --> 00:42:49,199
we're always sorting by either the Y or

883
00:42:45,989 --> 00:42:50,729
Z and then we have again that sort of

884
00:42:49,199 --> 00:42:58,500
concept of like we've got to check the

885
00:42:50,730 --> 00:43:04,199
bounds at that point this seems

886
00:42:58,500 --> 00:43:06,960
plausible to me I feel like I feel like

887
00:43:04,199 --> 00:43:10,949
I'm okay with that you know I feel like

888
00:43:06,960 --> 00:43:14,909
that's reasonable and I feel like we

889
00:43:10,949 --> 00:43:17,009
could I feel like there's enough wiggle

890
00:43:14,909 --> 00:43:19,710
room there too that we could basically

891
00:43:17,010 --> 00:43:25,140
say that like okay suppose you know we

892
00:43:19,710 --> 00:43:27,809
came up with some suppose we came up

893
00:43:25,139 --> 00:43:29,819
with some tricky case that we're having

894
00:43:27,809 --> 00:43:31,799
trouble with it feels like we could add

895
00:43:29,820 --> 00:43:34,109
special cases into a system like this

896
00:43:31,800 --> 00:43:36,269
relatively easily and that seems like

897
00:43:34,108 --> 00:43:39,630
kind of what you want because when the

898
00:43:36,269 --> 00:43:42,869
system looks like it does

899
00:43:39,630 --> 00:43:46,079
these two sort of 2d plus some 3d kind

900
00:43:42,869 --> 00:43:48,989
of engines it feels like you want to

901
00:43:46,079 --> 00:43:52,409
have that concept of a sort that can

902
00:43:48,989 --> 00:43:55,079
support weird stuff getting thrown into

903
00:43:52,409 --> 00:43:57,089
it like hey I know it's weird but you

904
00:43:55,079 --> 00:43:59,819
got to use this crazy sort rule I feel

905
00:43:57,090 --> 00:44:01,800
like that's a good thing because that

906
00:43:59,820 --> 00:44:04,380
allows us I think to special case stuff

907
00:44:01,800 --> 00:44:08,010
in in times when it's like clear that

908
00:44:04,380 --> 00:44:10,050
something you know needs to get resolved

909
00:44:08,010 --> 00:44:11,850
that's just kind of semantics and weird

910
00:44:10,050 --> 00:44:16,800
doesn't have a lot of physical physical

911
00:44:11,849 --> 00:44:20,130
analogue to it potentially right uh so

912
00:44:16,800 --> 00:44:22,530
that seems pretty good to me and if we

913
00:44:20,130 --> 00:44:29,250
wanted to I feel like we could do a sort

914
00:44:22,530 --> 00:44:34,560
there I feel like we could do a sort

915
00:44:29,250 --> 00:44:36,750
there where I don't know we could almost

916
00:44:34,559 --> 00:44:43,519
try not having something that does much

917
00:44:36,750 --> 00:44:47,159
conflict resolution whole a second here

918
00:44:43,519 --> 00:44:50,699
like for example if we were to do this

919
00:44:47,159 --> 00:44:55,649
does this produce a total sorting right

920
00:44:50,699 --> 00:44:57,809
would be one question uh and I guess the

921
00:44:55,650 --> 00:45:00,470
problem is that we don't know what would

922
00:44:57,809 --> 00:45:03,179
happen if the things are disjoint

923
00:45:00,469 --> 00:45:05,219
although I guess we do so we are kind of

924
00:45:03,179 --> 00:45:07,259
fully specified here so the only

925
00:45:05,219 --> 00:45:09,089
question is can this produce cycles and

926
00:45:07,260 --> 00:45:17,130
I don't know if it can or if it can

927
00:45:09,090 --> 00:45:20,010
write obviously this is the thing that

928
00:45:17,130 --> 00:45:22,349
would produce the cycles because if we

929
00:45:20,010 --> 00:45:24,420
always sorted Z's on z's or wise unwise

930
00:45:22,349 --> 00:45:26,009
and obviously the sword is complete so

931
00:45:24,420 --> 00:45:28,230
the only question is what happens when

932
00:45:26,010 --> 00:45:30,540
we start to get this in two intersecting

933
00:45:28,230 --> 00:45:33,329
people are there times when we would

934
00:45:30,539 --> 00:45:35,969
pick that one thing sorts on either side

935
00:45:33,329 --> 00:45:39,469
of another right so let's say we've got

936
00:45:35,969 --> 00:45:39,469
two things that overlap

937
00:45:41,269 --> 00:45:47,119
so we've got two Z's and we've got a why

938
00:45:44,179 --> 00:45:48,369
that overlaps them both right this is

939
00:45:47,119 --> 00:45:51,409
the kind of thing where we would have

940
00:45:48,369 --> 00:45:53,539
you know here's to Z tiles and we have a

941
00:45:51,409 --> 00:45:55,129
why that overlaps and them both which is

942
00:45:53,539 --> 00:45:59,179
a pretty common thing that would happen

943
00:45:55,130 --> 00:46:01,369
right so is there ever a case that the

944
00:45:59,179 --> 00:46:05,500
sort would not produce the sort that we

945
00:46:01,369 --> 00:46:09,880
would expect it to produce right and uh

946
00:46:05,500 --> 00:46:13,219
that question seems like it doesn't seem

947
00:46:09,880 --> 00:46:15,950
super plausible I don't know but let's

948
00:46:13,219 --> 00:46:20,299
think about this so let's say that we

949
00:46:15,949 --> 00:46:22,699
raise this sprite up to you know to hear

950
00:46:20,300 --> 00:46:32,840
or whatever well I've got to keep it

951
00:46:22,699 --> 00:46:36,529
overlapping so they're still going to

952
00:46:32,840 --> 00:46:41,110
overlap right in theory even though this

953
00:46:36,530 --> 00:46:41,110
one might be considered a little higher

954
00:46:47,800 --> 00:46:53,470
although I guess strictly speaking

955
00:46:49,639 --> 00:46:56,389
that's not technically possible and

956
00:46:53,469 --> 00:46:58,639
either way in both cases this guy would

957
00:46:56,389 --> 00:47:02,509
sort in front of so I don't think that

958
00:46:58,639 --> 00:47:04,400
affects yeah I don't know this I guess

959
00:47:02,510 --> 00:47:06,380
we should try and figure it out a little

960
00:47:04,400 --> 00:47:08,300
bit more diligently but I don't know if

961
00:47:06,380 --> 00:47:09,769
this always actually for our cases

962
00:47:08,300 --> 00:47:14,930
produces something we could sort on

963
00:47:09,769 --> 00:47:16,670
directly if that makes sense so it may

964
00:47:14,929 --> 00:47:18,739
be that we don't really have to worry

965
00:47:16,670 --> 00:47:22,909
too much about even doing a full

966
00:47:18,739 --> 00:47:27,199
topological sort we could or rather I

967
00:47:22,909 --> 00:47:29,690
guess a graph sort because we may be

968
00:47:27,199 --> 00:47:32,000
able to just still do this by an item

969
00:47:29,690 --> 00:47:33,409
comparison sort that is a partial

970
00:47:32,000 --> 00:47:35,869
ordering that's an that will produce

971
00:47:33,409 --> 00:47:43,730
correct results in all the cases we care

972
00:47:35,869 --> 00:47:44,750
about that would be nice right so let's

973
00:47:43,730 --> 00:47:46,490
say that we were going to do something

974
00:47:44,750 --> 00:47:49,309
like that you know if we were going to

975
00:47:46,489 --> 00:47:53,329
do something like that when we throw

976
00:47:49,309 --> 00:47:54,889
these pieces into the system again like

977
00:47:53,329 --> 00:47:56,659
I said the main question here is should

978
00:47:54,889 --> 00:47:58,068
that'd be in the rendering code or

979
00:47:56,659 --> 00:47:59,899
shouldn't that the inner enter code it

980
00:47:58,068 --> 00:48:01,548
seems to me like maybe that should not

981
00:47:59,900 --> 00:48:06,710
be in the rendering code I don't know

982
00:48:01,548 --> 00:48:08,420
like we maybe want to stop having that

983
00:48:06,710 --> 00:48:09,829
sort of sorting stuff happened the

984
00:48:08,420 --> 00:48:11,539
rendering code and maybe it should

985
00:48:09,829 --> 00:48:13,400
happen kind of as a separate layer that

986
00:48:11,539 --> 00:48:15,589
sits on top of it a little bit I'm not

987
00:48:13,400 --> 00:48:24,230
entirely certain like I said how that

988
00:48:15,588 --> 00:48:25,940
should go because if you think about the

989
00:48:24,230 --> 00:48:27,650
information that has to be stored here

990
00:48:25,940 --> 00:48:32,990
essentially what you need to store is a

991
00:48:27,650 --> 00:48:35,660
y min and Max and a z-value I don't

992
00:48:32,989 --> 00:48:37,250
think you need the minimum Z value for

993
00:48:35,659 --> 00:48:38,960
anything in particular it didn't look

994
00:48:37,250 --> 00:48:40,940
like any of our cases we're going to

995
00:48:38,960 --> 00:48:43,818
matter much about what your minimum Z

996
00:48:40,940 --> 00:48:46,579
value was so it seems like we only

997
00:48:43,818 --> 00:48:51,768
really care as far as I know about

998
00:48:46,579 --> 00:48:54,048
having y min and Max and Z and the Z

999
00:48:51,768 --> 00:48:57,259
would be the maximum so your Mac Z your

1000
00:48:54,048 --> 00:49:00,579
minun minun max y and then with that

1001
00:48:57,260 --> 00:49:00,579
information you can sort everything

1002
00:49:06,010 --> 00:49:09,400
far as I can tell

1003
00:49:11,230 --> 00:49:23,420
well let's take a look so if we were

1004
00:49:19,519 --> 00:49:31,340
going to do that when we have our

1005
00:49:23,420 --> 00:49:33,980
entries here let's see here here's our

1006
00:49:31,340 --> 00:49:35,600
headers so when we have our render

1007
00:49:33,980 --> 00:49:39,409
entries which I'll get that sort of

1008
00:49:35,599 --> 00:49:41,420
entered into here our sort keys which I

1009
00:49:39,409 --> 00:49:52,129
think are used separately where where do

1010
00:49:41,420 --> 00:50:10,130
those happen where's our swords on the

1011
00:49:52,130 --> 00:50:12,820
platform okay there we go no where's our

1012
00:50:10,130 --> 00:50:12,820
sword entries

1013
00:50:17,750 --> 00:50:23,750
I don't know where they are this is the

1014
00:50:22,159 --> 00:50:26,059
problem with having too many code bases

1015
00:50:23,750 --> 00:50:33,440
in your head at any given time you start

1016
00:50:26,059 --> 00:50:35,570
to forget things there it is so these

1017
00:50:33,440 --> 00:50:39,139
these things where we kind of have a

1018
00:50:35,570 --> 00:50:42,260
sort key and index the problem is here

1019
00:50:39,139 --> 00:50:46,250
right we would not be able to use the

1020
00:50:42,260 --> 00:50:47,540
same sort that we were using because it

1021
00:50:46,250 --> 00:50:50,300
would need to be more complex than that

1022
00:50:47,539 --> 00:50:52,130
now that's not a problem right we can

1023
00:50:50,300 --> 00:50:54,320
create another sort here that's that's

1024
00:50:52,130 --> 00:50:56,809
you know does it a little bit

1025
00:50:54,320 --> 00:50:58,690
differently so let's say we have you

1026
00:50:56,809 --> 00:51:00,860
know we take this merge sort here right

1027
00:50:58,690 --> 00:51:03,650
because we can't use a radix sort

1028
00:51:00,860 --> 00:51:05,950
anymore because there's nothing to radix

1029
00:51:03,650 --> 00:51:10,130
sort by right there's no way it can

1030
00:51:05,949 --> 00:51:12,559
construct a single value that you would

1031
00:51:10,130 --> 00:51:14,300
use to do your sorting but if we wanted

1032
00:51:12,559 --> 00:51:16,820
to we could do a merge sort still the

1033
00:51:14,300 --> 00:51:22,990
merge sort is fine so we could do a

1034
00:51:16,820 --> 00:51:22,990
merge sort and this is for a you know I

1035
00:51:24,099 --> 00:51:27,969
guess it's right bound

1036
00:51:32,989 --> 00:51:50,929
something like that I don't know what

1037
00:51:48,320 --> 00:51:55,550
this is that was kind of an aborted

1038
00:51:50,929 --> 00:51:57,109
attempt there we go so if we take a look

1039
00:51:55,550 --> 00:52:04,730
at this guy here where we're doing our

1040
00:51:57,110 --> 00:52:06,530
merge sort the merge sort is now going

1041
00:52:04,730 --> 00:52:11,389
to basically just be the exact same

1042
00:52:06,530 --> 00:52:14,780
piece of code here except when there's

1043
00:52:11,389 --> 00:52:16,789
two places right here where we do our

1044
00:52:14,780 --> 00:52:19,250
basic comparison between two items and

1045
00:52:16,789 --> 00:52:22,460
here where we determine whether or not

1046
00:52:19,250 --> 00:52:24,619
we need our merged items to be placed in

1047
00:52:22,460 --> 00:52:29,949
front of or behind each other these now

1048
00:52:24,619 --> 00:52:32,539
have to be sort of these have to be

1049
00:52:29,949 --> 00:52:34,489
described in a way that is more

1050
00:52:32,539 --> 00:52:36,230
complicated it's not just taking two

1051
00:52:34,489 --> 00:52:38,149
values and comparing them we now have to

1052
00:52:36,230 --> 00:52:40,940
actually implement the sort rules as we

1053
00:52:38,150 --> 00:52:42,108
talked about using more elaborate data

1054
00:52:40,940 --> 00:52:43,639
now the first I'm going to do is I'm

1055
00:52:42,108 --> 00:52:45,199
just going to swap the sense of this

1056
00:52:43,639 --> 00:52:46,819
comparison so that they're both going in

1057
00:52:45,199 --> 00:52:49,608
the same direction I don't really know

1058
00:52:46,820 --> 00:52:52,519
why I didn't do that to begin with but

1059
00:52:49,608 --> 00:52:54,590
you know what can you do so in this

1060
00:52:52,519 --> 00:52:57,679
situation you can see here right we've

1061
00:52:54,590 --> 00:52:59,660
got the same comparison done both times

1062
00:52:57,679 --> 00:53:01,069
with on two different things and so what

1063
00:52:59,659 --> 00:53:03,319
I'm going to do is just introduce a

1064
00:53:01,070 --> 00:53:09,109
thing here that's like you know here's

1065
00:53:03,320 --> 00:53:10,670
my comparator and it's going to return

1066
00:53:09,108 --> 00:53:12,409
either true or false whether or not I

1067
00:53:10,670 --> 00:53:15,650
should do the case since they're both

1068
00:53:12,409 --> 00:53:18,559
the same and so what I want to know here

1069
00:53:15,650 --> 00:53:22,130
is you know who should sort in front of

1070
00:53:18,559 --> 00:53:23,420
who I guess if that makes sense and in

1071
00:53:22,130 --> 00:53:28,519
this case like we're saying we're going

1072
00:53:23,420 --> 00:53:31,220
to put entry a and entry be in order and

1073
00:53:28,519 --> 00:53:33,139
we swap them if this comes back true for

1074
00:53:31,219 --> 00:53:36,409
entry be so this is like in front of so

1075
00:53:33,139 --> 00:53:41,299
I'm just going to name it that is in

1076
00:53:36,409 --> 00:53:46,039
front of and then we'll have sorts right

1077
00:53:41,300 --> 00:53:49,250
round a and source break ground be

1078
00:53:46,039 --> 00:53:55,250
so I'm just going to say like okay if is

1079
00:53:49,250 --> 00:53:58,219
in front of then we need to swap these

1080
00:53:55,250 --> 00:54:07,849
two guys and the same is true here where

1081
00:53:58,219 --> 00:54:09,679
we say if is in front of and that's

1082
00:54:07,849 --> 00:54:12,849
really all we need to do for our sort

1083
00:54:09,679 --> 00:54:15,710
now we just have to implement the rule

1084
00:54:12,849 --> 00:54:17,989
which is to say that in here where we do

1085
00:54:15,710 --> 00:54:21,130
sort sprite bad we need the things that

1086
00:54:17,989 --> 00:54:28,029
I've talked about so this is a y min a

1087
00:54:21,130 --> 00:54:30,380
wimax a zmax and then our actual index

1088
00:54:28,030 --> 00:54:32,600
so it's still not too big of a thing to

1089
00:54:30,380 --> 00:54:33,980
sort so that's good because we don't

1090
00:54:32,599 --> 00:54:35,380
want these to be particularly large

1091
00:54:33,980 --> 00:54:39,409
since we're moving them around

1092
00:54:35,380 --> 00:54:42,950
potentially I so it's still something

1093
00:54:39,409 --> 00:54:45,619
that is what is it it's a it's 16 bytes

1094
00:54:42,949 --> 00:54:49,519
long so that's not a bad thing that can

1095
00:54:45,619 --> 00:54:51,049
be sort of romp written by the CPU in an

1096
00:54:49,519 --> 00:54:52,759
easy copy fashion which is I think

1097
00:54:51,050 --> 00:54:55,460
probably what we want those things were

1098
00:54:52,760 --> 00:54:57,530
going to be sorting a lot of so how do

1099
00:54:55,460 --> 00:54:59,210
we determine this well I rode out very

1100
00:54:57,530 --> 00:55:04,130
explicitly what we were going to do here

1101
00:54:59,210 --> 00:55:05,750
right and so in these cases I think we

1102
00:55:04,130 --> 00:55:07,160
might be able to get them down to just

1103
00:55:05,750 --> 00:55:09,530
looking at these numbers a little bit

1104
00:55:07,159 --> 00:55:12,920
more directly with the wyman wimax v-max

1105
00:55:09,530 --> 00:55:14,660
right so because what we would know is

1106
00:55:12,920 --> 00:55:16,220
that the wyman in the wimax for a y

1107
00:55:14,659 --> 00:55:18,559
sprite are going to be equal to each

1108
00:55:16,219 --> 00:55:20,899
other so we would know ahead of time

1109
00:55:18,559 --> 00:55:22,670
whether or not something could be inside

1110
00:55:20,900 --> 00:55:24,170
of look we can just test for equality

1111
00:55:22,670 --> 00:55:32,300
those two without storing which kind of

1112
00:55:24,170 --> 00:55:34,130
sprite this is right and we can probably

1113
00:55:32,300 --> 00:55:35,360
simplify the math down as well once we

1114
00:55:34,130 --> 00:55:37,039
get so i'm going to write out the cases

1115
00:55:35,360 --> 00:55:38,120
explicitly without being too clever and

1116
00:55:37,039 --> 00:55:40,159
then we're going to probably be able to

1117
00:55:38,119 --> 00:55:44,839
collapse them down into something even

1118
00:55:40,159 --> 00:55:47,179
better right so all right let's do the

1119
00:55:44,840 --> 00:55:52,220
first thing which is to say what are our

1120
00:55:47,179 --> 00:55:57,219
cases here right we have if Y against

1121
00:55:52,219 --> 00:56:01,059
why else if Z against Z

1122
00:55:57,219 --> 00:56:02,618
else our final case right so we know if

1123
00:56:01,059 --> 00:56:04,150
we have a why sprite and actually you

1124
00:56:02,619 --> 00:56:10,480
know what I could do it this way if sort

1125
00:56:04,150 --> 00:56:12,400
by why else not first of all so we know

1126
00:56:10,480 --> 00:56:14,289
that there's only two cases that we're

1127
00:56:12,400 --> 00:56:17,320
ever going to actually process by sort

1128
00:56:14,289 --> 00:56:20,469
by Z sort by Y right I'll do it the same

1129
00:56:17,320 --> 00:56:22,000
way I wrote in the code so let's say for

1130
00:56:20,469 --> 00:56:23,439
starters that we have that and we're

1131
00:56:22,000 --> 00:56:24,760
going to equal that because something

1132
00:56:23,440 --> 00:56:26,889
that tells us which one to sort by if

1133
00:56:24,760 --> 00:56:28,750
we're going to sort by Z then all we

1134
00:56:26,889 --> 00:56:33,969
really need to do is say well whatever

1135
00:56:28,750 --> 00:56:35,559
the result is here and in fact I can

1136
00:56:33,969 --> 00:56:37,118
even just roll this into a very this is

1137
00:56:35,559 --> 00:56:40,509
a very simple ternary I could just say

1138
00:56:37,119 --> 00:56:42,460
well if we're supposed to sort by Z then

1139
00:56:40,510 --> 00:56:45,099
we'll do the Z comparison if we're

1140
00:56:42,460 --> 00:56:47,800
supposed to sort by Y will do the Y

1141
00:56:45,099 --> 00:56:49,240
comparison right so for sorting by Z

1142
00:56:47,800 --> 00:56:51,970
than what we want to say is we're

1143
00:56:49,239 --> 00:56:53,829
comparing the Z Max's we want to see if

1144
00:56:51,969 --> 00:56:55,659
I'm going to be in front of you then my

1145
00:56:53,829 --> 00:56:59,920
zmax should be higher than your zmax

1146
00:56:55,659 --> 00:57:02,949
right and then for sort by why what we

1147
00:56:59,920 --> 00:57:05,190
want to say is whatever the the Y again

1148
00:57:02,949 --> 00:57:07,259
is kind of going back into the screen

1149
00:57:05,190 --> 00:57:10,599
because of the way that we've got that

1150
00:57:07,260 --> 00:57:12,940
arranged so I want my Y min to be less

1151
00:57:10,599 --> 00:57:16,869
than your wyman right so i want to say

1152
00:57:12,940 --> 00:57:18,309
my wyman is less than your wyman that

1153
00:57:16,869 --> 00:57:23,740
would determine whether or not i'm

1154
00:57:18,309 --> 00:57:26,409
closer than than you to the viewer so

1155
00:57:23,739 --> 00:57:27,939
that's a pretty easy way to return the

1156
00:57:26,409 --> 00:57:30,069
results here so they're really the only

1157
00:57:27,940 --> 00:57:32,230
thing that we have to do is write the

1158
00:57:30,070 --> 00:57:34,210
slightly more complicated code that is

1159
00:57:32,230 --> 00:57:36,130
how do we determine which one of the

1160
00:57:34,210 --> 00:57:38,949
cases were actually in are we in a sort

1161
00:57:36,130 --> 00:57:41,260
by Z case or not and so if we take a

1162
00:57:38,949 --> 00:57:45,129
look at what happens in our thing here

1163
00:57:41,260 --> 00:57:50,290
we said well the cases where this is

1164
00:57:45,130 --> 00:57:55,588
true where we're going to do z sort is

1165
00:57:50,289 --> 00:58:01,179
if they're both Z sprites right or if

1166
00:57:55,588 --> 00:58:02,500
they overlap in why because that's the

1167
00:58:01,179 --> 00:58:05,889
you know if they don't overlap and why

1168
00:58:02,500 --> 00:58:09,630
the rest sort by why right so if both of

1169
00:58:05,889 --> 00:58:09,629
these are Z sprites then

1170
00:58:11,429 --> 00:58:16,000
if both of these are z sprites then that

1171
00:58:14,139 --> 00:58:20,588
would mean that there Y min and Max's

1172
00:58:16,000 --> 00:58:25,679
were equivalent right so one case for

1173
00:58:20,588 --> 00:58:28,900
sort by Z is like both Z sprites and

1174
00:58:25,679 --> 00:58:35,799
both these sprites would be like a y min

1175
00:58:28,900 --> 00:58:38,800
equals a wimax and the wyman equals B Y

1176
00:58:35,800 --> 00:58:42,390
max right so if they're both sea sprites

1177
00:58:38,800 --> 00:58:46,930
I would do it the other case is a

1178
00:58:42,389 --> 00:58:50,679
includes be and the other won't be be

1179
00:58:46,929 --> 00:58:53,819
includes a so the sort by Z is just if

1180
00:58:50,679 --> 00:58:57,338
they're both sea sprites or a includes B

1181
00:58:53,820 --> 00:59:00,519
or B includes a in any other case we're

1182
00:58:57,338 --> 00:59:04,809
going to sort by Y so a includes be is

1183
00:59:00,519 --> 00:59:13,449
pretty simple a includes be if gets y

1184
00:59:04,809 --> 00:59:19,170
min choose me ah and I guess technically

1185
00:59:13,449 --> 00:59:22,529
if I wanted to be a little bit more uh

1186
00:59:19,170 --> 00:59:27,970
well let's keep going with this if

1187
00:59:22,530 --> 00:59:30,550
includes V if if bees y min is greater

1188
00:59:27,969 --> 00:59:35,338
than or equal to a is why men and bees

1189
00:59:30,550 --> 00:59:35,339
wyman is less than equal to a is why max

1190
00:59:35,519 --> 00:59:39,818
similarly the same would be the exact

1191
00:59:38,380 --> 00:59:42,210
same thing would be true if these were

1192
00:59:39,818 --> 00:59:42,210
reversed

1193
00:59:49,000 --> 00:59:58,159
right and so the question that I was

1194
00:59:55,039 --> 01:00:01,489
having before it or list the thing that

1195
00:59:58,159 --> 01:00:05,359
I was thinking about is in the case

1196
01:00:01,489 --> 01:00:07,039
where I have I'm wondering if this can

1197
01:00:05,360 --> 01:00:08,300
be kind of just simplified fairly

1198
01:00:07,039 --> 01:00:12,079
drastically like I was kind of saying at

1199
01:00:08,300 --> 01:00:14,240
the outset if I know that why my Y min

1200
01:00:12,079 --> 01:00:16,369
in my MOT and my Y max are the same

1201
01:00:14,239 --> 01:00:18,649
value then there's no way that I could

1202
01:00:16,369 --> 01:00:21,769
include and in fact I could make this

1203
01:00:18,650 --> 01:00:24,559
more dramatic and say okay now there's

1204
01:00:21,769 --> 01:00:26,809
literally no way that a why sprite can

1205
01:00:24,559 --> 01:00:29,779
ever include anybody else because it has

1206
01:00:26,809 --> 01:00:35,329
no actual why range only a Z sprite can

1207
01:00:29,780 --> 01:00:39,470
include right so at that point I would

1208
01:00:35,329 --> 01:00:42,440
know that if they're both Z sprites I

1209
01:00:39,469 --> 01:00:44,149
should sort by Z if a includes B or B

1210
01:00:42,440 --> 01:00:46,190
includes a I know these will never be

1211
01:00:44,150 --> 01:00:48,079
true in the case of Y sprites they can't

1212
01:00:46,190 --> 01:00:57,769
include anybody right they can never

1213
01:00:48,079 --> 01:01:00,889
include anybody um so I think uh let me

1214
01:00:57,769 --> 01:01:09,639
just think this through here a little

1215
01:01:00,889 --> 01:01:09,639
bit further I think we could probably

1216
01:01:09,730 --> 01:01:19,699
well no maybe not Tenley it's time for

1217
01:01:17,630 --> 01:01:21,260
the QA so I should probably stop but I

1218
01:01:19,699 --> 01:01:24,199
have a feeling that if we actually look

1219
01:01:21,260 --> 01:01:25,700
at what happens here with the math I

1220
01:01:24,199 --> 01:01:30,679
think we can probably get to a point

1221
01:01:25,699 --> 01:01:34,489
where this actually simplifies much

1222
01:01:30,679 --> 01:01:37,269
further if that makes sense I'm gonna do

1223
01:01:34,489 --> 01:01:37,269
a little compile here

1224
01:01:39,530 --> 01:01:48,140
what is the thing you're missing

1225
01:01:43,699 --> 01:01:57,799
semicolon right you are sir oh wait are

1226
01:01:48,139 --> 01:02:00,650
you right there we go and entry a entry

1227
01:01:57,800 --> 01:02:04,940
be so op connective rig one from swap

1228
01:02:00,650 --> 01:02:19,550
what is swap do here swap so we need

1229
01:02:04,940 --> 01:02:21,440
another swamp there's our swap and then

1230
01:02:19,550 --> 01:02:22,700
again if you're okay with templates that

1231
01:02:21,440 --> 01:02:24,829
was something you could template eyes

1232
01:02:22,699 --> 01:02:28,899
they're the same right the swap is the

1233
01:02:24,829 --> 01:02:36,019
same in both cases so there we go and

1234
01:02:28,900 --> 01:02:38,440
then tomorrow we can take a closer look

1235
01:02:36,019 --> 01:02:38,440
at that

1236
01:02:57,599 --> 01:03:05,190
the sizing isn't it why vertical sprites

1237
01:03:00,719 --> 01:03:12,079
that have why men equal wimax yes it is

1238
01:03:05,190 --> 01:03:15,570
oh yes sorry you're totally right there

1239
01:03:12,079 --> 01:03:21,829
so this is actually both why sprites not

1240
01:03:15,570 --> 01:03:21,830
both z sprites uh so that is my bad

1241
01:03:22,849 --> 01:03:32,819
right that's what that should be thank

1242
01:03:26,250 --> 01:03:34,769
you you always do equals for flow

1243
01:03:32,820 --> 01:03:36,600
comparisons how can you ensure those

1244
01:03:34,769 --> 01:03:40,079
will ever return true because of float

1245
01:03:36,599 --> 01:03:44,179
precision so this may be something that

1246
01:03:40,079 --> 01:03:47,250
I fail to mention a lot of times and

1247
01:03:44,179 --> 01:03:49,769
that's probably my bad it's I don't

1248
01:03:47,250 --> 01:03:53,550
think about it that often but the reason

1249
01:03:49,769 --> 01:03:56,550
that I can do that here is because i

1250
01:03:53,550 --> 01:03:59,760
know that i'm setting these values not

1251
01:03:56,550 --> 01:04:01,560
computing these values right so if I'm

1252
01:03:59,760 --> 01:04:04,650
computing values with a floating point

1253
01:04:01,559 --> 01:04:08,219
calculation then that's a case where you

1254
01:04:04,650 --> 01:04:10,200
have to be aware of what the tolerances

1255
01:04:08,219 --> 01:04:12,449
are for the computation because if the

1256
01:04:10,199 --> 01:04:16,259
computation has a spread that it could

1257
01:04:12,449 --> 01:04:18,000
produce you can't test for equals and so

1258
01:04:16,260 --> 01:04:20,190
your intuition is very correct there and

1259
01:04:18,000 --> 01:04:22,110
that's totally true but if this is the

1260
01:04:20,190 --> 01:04:25,289
case where I'm setting the Y values

1261
01:04:22,110 --> 01:04:26,610
myself then I might know that there's

1262
01:04:25,289 --> 01:04:29,279
cases where I set them both to the same

1263
01:04:26,610 --> 01:04:31,650
thing so in the case where I record Ozzy

1264
01:04:29,280 --> 01:04:33,840
sprite i'm going to set y min and wimax

1265
01:04:31,650 --> 01:04:35,340
equal time sorry the case where I record

1266
01:04:33,840 --> 01:04:38,820
a wife's right i'm going to set y min

1267
01:04:35,340 --> 01:04:42,360
and wimax to the same value that makes

1268
01:04:38,820 --> 01:04:44,640
sense so I know that they'll be exactly

1269
01:04:42,360 --> 01:04:46,079
equal not approximately equal and

1270
01:04:44,639 --> 01:04:49,559
therefore I don't need to think about a

1271
01:04:46,079 --> 01:04:51,269
computation epsilon and so yeah when you

1272
01:04:49,559 --> 01:04:53,130
see me right actual equals there that

1273
01:04:51,269 --> 01:04:55,380
means i feel like i'm setting these two

1274
01:04:53,130 --> 01:04:58,820
exact values not as the result of a

1275
01:04:55,380 --> 01:04:58,820
computation that could be variable

1276
01:05:00,429 --> 01:05:08,129
in the Y overlap Z case what about cliff

1277
01:05:04,539 --> 01:05:12,460
sides that are holding up the ground

1278
01:05:08,130 --> 01:05:18,070
sprites so elevated ground isn't just

1279
01:05:12,460 --> 01:05:22,420
floating there would that cause an issue

1280
01:05:18,070 --> 01:05:24,280
with anything so what I was sort of

1281
01:05:22,420 --> 01:05:25,690
saying before is I feel like we can

1282
01:05:24,280 --> 01:05:28,300
break up sprites that are problematic

1283
01:05:25,690 --> 01:05:30,429
into two pieces so for example if I've

1284
01:05:28,300 --> 01:05:31,690
got a cliff side here and here's the top

1285
01:05:30,429 --> 01:05:34,899
of the cliff and here's the side of the

1286
01:05:31,690 --> 01:05:39,490
cliff right um we could break these up

1287
01:05:34,900 --> 01:05:42,250
into two sprites if we needed to however

1288
01:05:39,489 --> 01:05:44,439
that said I don't know that we actually

1289
01:05:42,250 --> 01:05:46,570
need to and the reason that I don't know

1290
01:05:44,440 --> 01:05:49,240
if we actually need to is because I

1291
01:05:46,570 --> 01:05:51,340
think since no one can stand on the side

1292
01:05:49,239 --> 01:05:55,059
of this thing it might actually just

1293
01:05:51,340 --> 01:05:57,280
always work right because it's always

1294
01:05:55,059 --> 01:06:01,500
going to sort in why behind anything

1295
01:05:57,280 --> 01:06:01,500
that's out here I think

1296
01:06:06,210 --> 01:06:10,320
right because because anything that's

1297
01:06:08,338 --> 01:06:12,119
here it's y value isn't going to be

1298
01:06:10,320 --> 01:06:14,880
intersecting this guy right it's going

1299
01:06:12,119 --> 01:06:21,690
to be in front of it so I think it's

1300
01:06:14,880 --> 01:06:23,460
probably okay uh but like I said I i

1301
01:06:21,690 --> 01:06:24,900
don't i'm not too worried about that

1302
01:06:23,460 --> 01:06:28,470
case because i know i can split those

1303
01:06:24,900 --> 01:06:30,329
sprites very reliably at asset creation

1304
01:06:28,469 --> 01:06:32,879
time even so it's not like a thing that

1305
01:06:30,329 --> 01:06:37,529
has happened the sort so that special

1306
01:06:32,880 --> 01:06:39,780
case i'm not too worried about em and

1307
01:06:37,530 --> 01:06:41,730
Evander I literally did the float equals

1308
01:06:39,780 --> 01:06:43,920
thing last week and considered it

1309
01:06:41,730 --> 01:06:45,119
acceptable for that exact reason because

1310
01:06:43,920 --> 01:06:47,070
I was just checking if the value had

1311
01:06:45,119 --> 01:06:51,059
just been set by me to exact value on

1312
01:06:47,070 --> 01:06:57,420
the previous frame or whatever yes I

1313
01:06:51,059 --> 01:07:01,259
mean so the important thing to remember

1314
01:06:57,420 --> 01:07:02,970
about floating point numbers is that

1315
01:07:01,260 --> 01:07:05,160
floating point numbers are still just

1316
01:07:02,969 --> 01:07:07,289
integer numbers right at the end of the

1317
01:07:05,159 --> 01:07:10,259
day they're they're not actually magical

1318
01:07:07,289 --> 01:07:12,420
they're just they're just a way of

1319
01:07:10,260 --> 01:07:15,420
taking an integer and knowing where it

1320
01:07:12,420 --> 01:07:18,269
lies on the number line I'm sorry I'm a

1321
01:07:15,420 --> 01:07:21,900
decimal point right that's that's all it

1322
01:07:18,269 --> 01:07:24,539
does and so they still have concrete

1323
01:07:21,900 --> 01:07:26,369
exact values and if you know what your

1324
01:07:24,539 --> 01:07:28,369
computations are doing you know whether

1325
01:07:26,369 --> 01:07:30,990
those values should be equal or not

1326
01:07:28,369 --> 01:07:36,269
certainly on handmade hero and generally

1327
01:07:30,989 --> 01:07:38,039
in my programming career I don't tend to

1328
01:07:36,269 --> 01:07:39,960
analyze floating-point algorithms to the

1329
01:07:38,039 --> 01:07:42,000
degree where I have any idea what their

1330
01:07:39,960 --> 01:07:44,400
values will be at that level of

1331
01:07:42,000 --> 01:07:48,150
precision if I didn't set them equal to

1332
01:07:44,400 --> 01:07:50,099
something myself so typically you treat

1333
01:07:48,150 --> 01:07:51,539
them as having epsilons foremost

1334
01:07:50,099 --> 01:07:53,400
computations because you haven't

1335
01:07:51,539 --> 01:07:55,259
analyzed the computation to the point

1336
01:07:53,400 --> 01:07:57,869
where you have any idea about what the

1337
01:07:55,260 --> 01:07:59,369
actual range really is right but that

1338
01:07:57,869 --> 01:08:01,019
doesn't mean that it doesn't have an

1339
01:07:59,369 --> 01:08:03,300
exact value that it does come out to you

1340
01:08:01,019 --> 01:08:04,559
do know what it's going to be right you

1341
01:08:03,300 --> 01:08:05,849
know where the round is going to happen

1342
01:08:04,559 --> 01:08:07,650
you know all that stuff and it will be

1343
01:08:05,849 --> 01:08:09,660
an actual value at the end the problem

1344
01:08:07,650 --> 01:08:11,760
is just are you ever realistically going

1345
01:08:09,659 --> 01:08:13,289
to analyze your things and have opinions

1346
01:08:11,760 --> 01:08:15,690
about that stuff at any fine grading

1347
01:08:13,289 --> 01:08:17,399
level most of the time no but when you

1348
01:08:15,690 --> 01:08:19,529
do set something to an exact value it's

1349
01:08:17,399 --> 01:08:19,858
not like it can be some other thing it's

1350
01:08:19,529 --> 01:08:21,989
still

1351
01:08:19,859 --> 01:08:23,850
an exact bit pattern and you can check

1352
01:08:21,988 --> 01:08:26,959
that exact bit pattern on both sides and

1353
01:08:23,850 --> 01:08:26,960
know that it's going to be equal

1354
01:08:44,170 --> 01:08:48,520
any more q Cowen's

1355
01:08:55,520 --> 01:08:59,719
any more cute

1356
01:09:28,960 --> 01:09:37,000
alright looks like we've got no more q

1357
01:09:32,060 --> 01:09:40,450
Colin's so I am going to go ahead and

1358
01:09:37,000 --> 01:09:40,449
close down

1359
01:09:51,929 --> 01:09:55,269
okay thank you everyone for joining me

1360
01:09:54,009 --> 01:09:56,649
for the sort of handmade here at sort of

1361
01:09:55,269 --> 01:09:58,809
pleasure coding with you as always if

1362
01:09:56,649 --> 01:10:02,319
you would like to follow along at home

1363
01:09:58,809 --> 01:10:04,090
with the source code you can do so by

1364
01:10:02,319 --> 01:10:06,518
pre-ordering the game on hand meteor org

1365
01:10:04,090 --> 01:10:08,949
it comes to the source code so you can

1366
01:10:06,519 --> 01:10:11,530
go ahead and play with it we also have a

1367
01:10:08,948 --> 01:10:13,000
forum site that forum site is a good

1368
01:10:11,529 --> 01:10:14,948
place to ask questions we have a patreon

1369
01:10:13,000 --> 01:10:17,260
page where you can support our lovely

1370
01:10:14,948 --> 01:10:19,178
video series we also have a schedule bot

1371
01:10:17,260 --> 01:10:20,710
where you can tweet the schedule or

1372
01:10:19,179 --> 01:10:22,269
rather you can have the schedule tweeted

1373
01:10:20,710 --> 01:10:23,679
to you so you know where we're gonna be

1374
01:10:22,269 --> 01:10:25,719
live and we have enough so guide if you

1375
01:10:23,679 --> 01:10:27,460
want to catch up on past episodes check

1376
01:10:25,719 --> 01:10:28,719
them all out there great buttons they're

1377
01:10:27,460 --> 01:10:31,689
the kinds of buttons that just make you

1378
01:10:28,719 --> 01:10:34,300
happy to push them that's about it I

1379
01:10:31,689 --> 01:10:36,219
will be back here tomorrow 5 p.m.

1380
01:10:34,300 --> 01:10:38,110
pacific daylight time for more

1381
01:10:36,219 --> 01:10:41,800
programming where we will see what

1382
01:10:38,109 --> 01:10:43,868
happens with our new sort or well that

1383
01:10:41,800 --> 01:10:46,210
may be presumptuous we will finish the

1384
01:10:43,868 --> 01:10:47,618
coding of our new sort but that will

1385
01:10:46,210 --> 01:10:49,269
probably take a while because we have to

1386
01:10:47,618 --> 01:10:51,158
sort of get the render pipeline

1387
01:10:49,269 --> 01:10:53,199
organized for it which is going to take

1388
01:10:51,158 --> 01:10:55,569
a little bit of moving stuff around but

1389
01:10:53,198 --> 01:10:57,069
we should have our new sort implemented

1390
01:10:55,569 --> 01:10:59,078
we may not get to the point we can

1391
01:10:57,069 --> 01:11:02,558
actually that we're actually debugging

1392
01:10:59,078 --> 01:11:04,479
it much but we're getting close that is

1393
01:11:02,559 --> 01:11:07,150
it i will see you tomorrow for that

1394
01:11:04,479 --> 01:11:09,839
until then tickety's everyone and i'll

1395
01:11:07,149 --> 01:11:09,839
see on the internet

