1
00:00:01,189 --> 00:00:09,119
all right hello everyone I know this is

2
00:00:07,440 --> 00:00:12,000
a weird back rub to be started backdrop

3
00:00:09,119 --> 00:00:13,500
time starting the stream on but it's

4
00:00:12,000 --> 00:00:15,000
because we had a pretty stream question

5
00:00:13,500 --> 00:00:16,740
that was about C runtime libraries so

6
00:00:15,000 --> 00:00:18,690
there's a little bit more busy you know

7
00:00:16,739 --> 00:00:20,309
what I'll just here we go I'll just get

8
00:00:18,690 --> 00:00:22,830
it back to normal this is what you would

9
00:00:20,309 --> 00:00:24,829
normally see right there you go hello

10
00:00:22,829 --> 00:00:27,959
everyone and welcome to handmade hero

11
00:00:24,829 --> 00:00:32,159
it's show a recode a complete game live

12
00:00:27,960 --> 00:00:34,079
on twitch no engines no libraries and I

13
00:00:32,159 --> 00:00:35,879
think you know I was describing this to

14
00:00:34,079 --> 00:00:37,380
some folks on Twitter and they seem to

15
00:00:35,880 --> 00:00:39,570
really like the description of the game

16
00:00:37,380 --> 00:00:42,390
that it is a game about limbless

17
00:00:39,570 --> 00:00:43,738
children and demons which is bound to be

18
00:00:42,390 --> 00:00:46,679
the feel-good hit of the summer which

19
00:00:43,738 --> 00:00:48,238
ever summer we decide to release it in I

20
00:00:46,679 --> 00:00:51,238
don't know why they particularly liked

21
00:00:48,238 --> 00:00:52,589
that description but you know who

22
00:00:51,238 --> 00:00:54,029
doesn't love them as children and demons

23
00:00:52,590 --> 00:00:55,890
I mean that is a good that is good

24
00:00:54,030 --> 00:00:57,960
wholesome family entertainment right

25
00:00:55,890 --> 00:01:02,850
there I don't think anyone would ever

26
00:00:57,960 --> 00:01:04,290
disagree anyway that said we finished up

27
00:01:02,850 --> 00:01:07,680
some general purpose allocation stuff

28
00:01:04,290 --> 00:01:09,118
last week it took a lot less time than I

29
00:01:07,680 --> 00:01:11,580
thought it was going to take even to

30
00:01:09,118 --> 00:01:13,530
just do the rudimentary one and doing an

31
00:01:11,579 --> 00:01:15,030
optimized one really has to wait until

32
00:01:13,530 --> 00:01:17,519
we put a lot more pressure on the asset

33
00:01:15,030 --> 00:01:20,549
system and can even see you know where

34
00:01:17,519 --> 00:01:23,039
or if it falls down so we were kind of

35
00:01:20,549 --> 00:01:25,080
like alright I guess that was it for the

36
00:01:23,040 --> 00:01:28,920
general purpose allocator it just kind

37
00:01:25,079 --> 00:01:31,048
of happened and and that was it so what

38
00:01:28,920 --> 00:01:33,259
I wanted to do is move on probably to

39
00:01:31,049 --> 00:01:35,729
the next thing on our list really and

40
00:01:33,259 --> 00:01:37,290
that you know is going to be debug code

41
00:01:35,728 --> 00:01:39,328
I think it's the most logical thing to

42
00:01:37,290 --> 00:01:40,680
do we're getting towards the point in

43
00:01:39,328 --> 00:01:42,599
our engine dev here where we want to

44
00:01:40,680 --> 00:01:44,939
start locking things down cleaning them

45
00:01:42,599 --> 00:01:47,188
up and you know just doing sort of a

46
00:01:44,938 --> 00:01:48,569
general thoroughness pass we've got some

47
00:01:47,188 --> 00:01:50,908
bugs and things that we know we have to

48
00:01:48,569 --> 00:01:52,349
fix later you know things that are not

49
00:01:50,909 --> 00:01:55,200
at the level of quality that we want

50
00:01:52,349 --> 00:01:57,209
them to be that we made note of and so

51
00:01:55,200 --> 00:01:59,280
what we want to do is kind of move

52
00:01:57,209 --> 00:02:02,759
towards a place where we can be happy

53
00:01:59,280 --> 00:02:04,349
with the basic engine layer that we have

54
00:02:02,759 --> 00:02:07,170
put in place so that we can move on to

55
00:02:04,349 --> 00:02:09,030
working on the game and being confident

56
00:02:07,170 --> 00:02:10,170
that all the services that we made will

57
00:02:09,030 --> 00:02:12,209
be reliable and we won't have to

58
00:02:10,169 --> 00:02:13,369
constantly be debugging them or fussing

59
00:02:12,209 --> 00:02:16,229
with them

60
00:02:13,370 --> 00:02:18,270
and will only have to actually do new

61
00:02:16,229 --> 00:02:21,119
engine work driven by gameplay things

62
00:02:18,270 --> 00:02:22,439
that we want rather than it being some

63
00:02:21,120 --> 00:02:25,289
kind of a maintenance headache for us

64
00:02:22,439 --> 00:02:26,969
right and so what I thought we do today

65
00:02:25,289 --> 00:02:29,789
is probably start down the road towards

66
00:02:26,969 --> 00:02:31,530
fonts because in order to do much in the

67
00:02:29,789 --> 00:02:33,329
way of debug code you know we kind of

68
00:02:31,530 --> 00:02:35,520
need to be able to display text on the

69
00:02:33,330 --> 00:02:38,370
screen because we're gonna want to print

70
00:02:35,520 --> 00:02:41,060
out you know values and and just you

71
00:02:38,370 --> 00:02:43,500
know a sort of things that we're gonna

72
00:02:41,060 --> 00:02:47,430
we're gonna want displayed are gonna

73
00:02:43,500 --> 00:02:49,800
require some kind of font work so I

74
00:02:47,430 --> 00:02:52,260
thought that's what we do today so I'll

75
00:02:49,800 --> 00:02:53,580
talk a little bit about fonts and on the

76
00:02:52,259 --> 00:02:57,090
blackboard and then we'll do some code

77
00:02:53,580 --> 00:02:58,620
today is day 162 so if you'd like to

78
00:02:57,090 --> 00:03:00,090
follow along at home and you are someone

79
00:02:58,620 --> 00:03:03,120
who has pre-ordered the game on handmade

80
00:03:00,090 --> 00:03:05,489
hero org you want to unpack day 161 s

81
00:03:03,120 --> 00:03:06,810
source code so that you will be at the

82
00:03:05,489 --> 00:03:08,640
same state I am and that way you can

83
00:03:06,810 --> 00:03:12,599
follow along with the code exactly as I

84
00:03:08,639 --> 00:03:14,639
am opening it up as we speak so yeah so

85
00:03:12,599 --> 00:03:17,129
I believe like I said I don't think we

86
00:03:14,639 --> 00:03:18,750
left anything dangling really other than

87
00:03:17,129 --> 00:03:20,310
saying that we probably should optimize

88
00:03:18,750 --> 00:03:22,229
the general-purpose allocator once we

89
00:03:20,310 --> 00:03:25,019
have some workloads but that's a little

90
00:03:22,229 --> 00:03:26,280
bit further down the line so I'm gonna

91
00:03:25,019 --> 00:03:29,039
go ahead and just double check that

92
00:03:26,280 --> 00:03:31,799
everything was was fine and that I'm

93
00:03:29,039 --> 00:03:33,750
pretty sure that it was so yeah like if

94
00:03:31,799 --> 00:03:36,510
I go here we're still all totally

95
00:03:33,750 --> 00:03:38,039
correct nothing nothing sorry happening

96
00:03:36,509 --> 00:03:39,840
we don't have assets we cashing in there

97
00:03:38,039 --> 00:03:41,219
yet so we have we still have blinking

98
00:03:39,840 --> 00:03:42,319
when things for a slow but that's about

99
00:03:41,219 --> 00:03:44,909
it

100
00:03:42,319 --> 00:03:46,229
and the pre caching is really just

101
00:03:44,909 --> 00:03:48,329
something that's more about us

102
00:03:46,229 --> 00:03:50,578
eventually deciding how those calls are

103
00:03:48,329 --> 00:03:51,930
going to get issued because the ax asset

104
00:03:50,579 --> 00:03:53,909
system actually already supports it as

105
00:03:51,930 --> 00:03:55,590
well so I think everything's pretty good

106
00:03:53,909 --> 00:03:57,269
there and so I think what I'd like to do

107
00:03:55,590 --> 00:03:59,609
is start to figure out how we can do

108
00:03:57,269 --> 00:04:01,230
some better debug overlaying write some

109
00:03:59,609 --> 00:04:02,969
stuff that we can put on the screen now

110
00:04:01,229 --> 00:04:04,738
to kind of give us a little bit more

111
00:04:02,969 --> 00:04:08,250
ability to have insight into what our

112
00:04:04,739 --> 00:04:10,259
code is doing a lot of times people ask

113
00:04:08,250 --> 00:04:11,699
on the stream in the QA they'll say

114
00:04:10,259 --> 00:04:13,378
stuff like how do you feel about

115
00:04:11,699 --> 00:04:15,179
test-driven development

116
00:04:13,378 --> 00:04:17,879
and just one of the things that's often

117
00:04:15,180 --> 00:04:19,829
true about Game Code is that the hard

118
00:04:17,879 --> 00:04:22,350
things to debug are often not really

119
00:04:19,829 --> 00:04:23,850
super possible to tackle with

120
00:04:22,350 --> 00:04:25,410
test-driven development test room driven

121
00:04:23,850 --> 00:04:27,120
development really only tackles the easy

122
00:04:25,410 --> 00:04:29,729
problems in game development ones that

123
00:04:27,120 --> 00:04:30,840
really just don't super need to be

124
00:04:29,728 --> 00:04:32,728
worried about all that much because they

125
00:04:30,839 --> 00:04:35,459
won't be accounting for the majority of

126
00:04:32,728 --> 00:04:38,098
your dev time on in a lot of cases and

127
00:04:35,459 --> 00:04:39,180
so what is actually more important in

128
00:04:38,098 --> 00:04:40,490
game development than test-driven

129
00:04:39,180 --> 00:04:42,870
development usually is like

130
00:04:40,490 --> 00:04:44,189
visualization oriented development how

131
00:04:42,870 --> 00:04:46,620
you know however you might say that

132
00:04:44,189 --> 00:04:48,418
which is to say that as your game kind

133
00:04:46,620 --> 00:04:50,550
of goes through more and more

134
00:04:48,418 --> 00:04:53,519
get-getting goes up in levels of

135
00:04:50,550 --> 00:04:55,949
complexity simply looking at the end

136
00:04:53,519 --> 00:04:57,659
results is oftentimes not sufficient to

137
00:04:55,949 --> 00:04:59,759
know whether things are really working

138
00:04:57,660 --> 00:05:02,639
or not because there can be a lot of

139
00:04:59,759 --> 00:05:04,770
bugs lurking in the code that are very

140
00:05:02,639 --> 00:05:07,680
complicated and it would be difficult to

141
00:05:04,769 --> 00:05:09,149
ever diagnosed with a test or with or

142
00:05:07,680 --> 00:05:11,970
simply by inspection or simply by

143
00:05:09,149 --> 00:05:13,948
looking at the end results and so what

144
00:05:11,970 --> 00:05:15,840
we tend to do a lot of times is we tend

145
00:05:13,949 --> 00:05:18,270
to write visualizations like HUDs

146
00:05:15,839 --> 00:05:20,879
overlays and stuff that try to show us a

147
00:05:18,269 --> 00:05:22,198
lot of heartbeat information to see what

148
00:05:20,879 --> 00:05:24,120
the game is actually doing so that we

149
00:05:22,199 --> 00:05:26,150
can use our intuitions and the technical

150
00:05:24,120 --> 00:05:28,470
patterns look like they might be wrong

151
00:05:26,149 --> 00:05:30,179
so that we can investigate further and

152
00:05:28,470 --> 00:05:32,400
get some of those harder more subtle

153
00:05:30,180 --> 00:05:35,280
bugs that are very difficult to find any

154
00:05:32,399 --> 00:05:36,629
other way and so that is one of the main

155
00:05:35,279 --> 00:05:38,489
reasons we're going to need fonts this

156
00:05:36,629 --> 00:05:40,168
game I don't know that the game itself

157
00:05:38,490 --> 00:05:42,478
will be all that heavy in terms of

158
00:05:40,168 --> 00:05:46,620
printing text out but I think for our

159
00:05:42,478 --> 00:05:47,939
visualization we will want it in sooner

160
00:05:46,620 --> 00:05:51,300
rather than later and so I'd like to

161
00:05:47,939 --> 00:05:54,509
talk a little bit about how fonts work

162
00:05:51,300 --> 00:05:59,668
in general and then how we can implement

163
00:05:54,509 --> 00:06:04,139
fonts in our game so here we go here's

164
00:05:59,668 --> 00:06:05,609
day 162 and we'll say fonts but

165
00:06:04,139 --> 00:06:08,788
sometimes I like to call it

166
00:06:05,610 --> 00:06:10,319
fonts with a c e at the end I don't know

167
00:06:08,788 --> 00:06:12,329
why I feel like that's just kind of fun

168
00:06:10,319 --> 00:06:14,250
to say fonts it sounds the same

169
00:06:12,329 --> 00:06:19,649
but it looks kind of interesting and

170
00:06:14,250 --> 00:06:21,029
cooler so anyway day 162 fonts what are

171
00:06:19,649 --> 00:06:23,939
we talking about when we talk about

172
00:06:21,029 --> 00:06:25,809
fonts what is incorporated in a font

173
00:06:23,939 --> 00:06:28,089
system right

174
00:06:25,810 --> 00:06:30,009
I'll start from the very basics for

175
00:06:28,089 --> 00:06:33,009
people who don't know any type odd Rafi

176
00:06:30,009 --> 00:06:35,319
or any anything and we'll kind of work

177
00:06:33,009 --> 00:06:36,819
our way up to so that where no matter

178
00:06:35,319 --> 00:06:39,849
where you are on the spectrum of knowing

179
00:06:36,819 --> 00:06:43,060
about fonts we will we will bring you up

180
00:06:39,850 --> 00:06:45,129
to speed okay so obviously we kind of

181
00:06:43,060 --> 00:06:46,269
all know just no matter who you are if

182
00:06:45,129 --> 00:06:48,579
you've ever worked on computer you have

183
00:06:46,269 --> 00:06:50,379
a passing familiarity that a font is

184
00:06:48,579 --> 00:06:52,810
something that kind of describes the way

185
00:06:50,379 --> 00:06:56,259
text looks on the screen right and

186
00:06:52,810 --> 00:06:59,168
you've probably seen you know files

187
00:06:56,259 --> 00:07:01,990
TTF files which are like true type font

188
00:06:59,168 --> 00:07:03,459
files right which are the ones that we

189
00:07:01,990 --> 00:07:06,430
see on windows a lot but there's also

190
00:07:03,459 --> 00:07:07,989
like Adobe type one in fact I don't know

191
00:07:06,430 --> 00:07:10,209
if you saw recently Microsoft had a

192
00:07:07,990 --> 00:07:11,410
really bad hack involving Adobe type 1

193
00:07:10,209 --> 00:07:13,418
fonts where people could root your

194
00:07:11,410 --> 00:07:16,810
machine by including Adobe type 1 fonts

195
00:07:13,418 --> 00:07:18,519
on the web right and you know there's

196
00:07:16,810 --> 00:07:20,800
been other types there's meta font is

197
00:07:18,519 --> 00:07:22,060
another kind which was an old thing in

198
00:07:20,800 --> 00:07:23,680
late a crate

199
00:07:22,060 --> 00:07:27,579
there's a number of different types of

200
00:07:23,680 --> 00:07:29,860
fonts out there thought sort of file

201
00:07:27,579 --> 00:07:32,918
formats right and what these are is

202
00:07:29,860 --> 00:07:35,290
these are ways of describing what the

203
00:07:32,918 --> 00:07:37,060
actual characters in fonts are supposed

204
00:07:35,290 --> 00:07:40,629
to look like and they're usually

205
00:07:37,060 --> 00:07:42,339
described in terms of outlines so

206
00:07:40,629 --> 00:07:44,199
typically for example like in a true

207
00:07:42,339 --> 00:07:46,629
type font file for example or Adobe type

208
00:07:44,199 --> 00:07:47,978
1 font file typically what you're doing

209
00:07:46,629 --> 00:07:50,019
is you're doing something if you've ever

210
00:07:47,978 --> 00:07:51,639
seen like Adobe Illustrator or something

211
00:07:50,019 --> 00:07:52,180
you're typically doing something like

212
00:07:51,639 --> 00:07:54,189
that

213
00:07:52,180 --> 00:07:57,728
so a typical font file might include

214
00:07:54,189 --> 00:08:00,180
something you know like some vertices to

215
00:07:57,728 --> 00:08:03,339
describe like the letter T right

216
00:08:00,180 --> 00:08:06,220
they might describe something that looks

217
00:08:03,339 --> 00:08:08,139
like this right where you were kind of

218
00:08:06,220 --> 00:08:11,050
saying okay we have some coordinates of

219
00:08:08,139 --> 00:08:12,579
some vertices and we have some curves in

220
00:08:11,050 --> 00:08:14,650
this case not really curves but lines

221
00:08:12,579 --> 00:08:16,269
that go between the vertices and the way

222
00:08:14,649 --> 00:08:17,829
that we're gonna describe the shape of

223
00:08:16,269 --> 00:08:20,769
the T is to say that we're basically

224
00:08:17,829 --> 00:08:23,259
talking about a filled area that exists

225
00:08:20,769 --> 00:08:25,329
within these points just like you would

226
00:08:23,259 --> 00:08:27,699
again in Adobe Illustrator and similarly

227
00:08:25,329 --> 00:08:29,769
you know if for a curved shape right

228
00:08:27,699 --> 00:08:31,240
then what you're gonna have is you're

229
00:08:29,769 --> 00:08:33,759
gonna have something where you have

230
00:08:31,240 --> 00:08:35,649
points and those points are going to

231
00:08:33,759 --> 00:08:37,689
have like Bezier curve handles or

232
00:08:35,649 --> 00:08:39,470
something like this which we've talked a

233
00:08:37,690 --> 00:08:40,970
bit a little bit about

234
00:08:39,470 --> 00:08:42,860
I also have a video online about

235
00:08:40,970 --> 00:08:44,810
interpolation for Bezier curves which

236
00:08:42,860 --> 00:08:45,950
isn't that really something we need to

237
00:08:44,809 --> 00:08:47,269
go over at the moment we'll probably go

238
00:08:45,950 --> 00:08:49,250
over it a little bit later in handmade

239
00:08:47,269 --> 00:08:50,870
hero but point being there like those

240
00:08:49,250 --> 00:08:54,230
things you see in drawing packages where

241
00:08:50,870 --> 00:08:56,690
you specify you know two points and and

242
00:08:54,230 --> 00:08:58,580
then two points that are sort of off of

243
00:08:56,690 --> 00:09:01,400
those points and you kind of get these

244
00:08:58,580 --> 00:09:03,680
little handles right and then it draws

245
00:09:01,399 --> 00:09:05,299
like a curve based on the points and the

246
00:09:03,679 --> 00:09:06,679
handles and like as you move the handle

247
00:09:05,299 --> 00:09:08,779
around the shape of the curve changes

248
00:09:06,679 --> 00:09:11,359
right you might get something that

249
00:09:08,779 --> 00:09:12,949
looked like that but again it's the

250
00:09:11,360 --> 00:09:14,659
exact same concept as the lines it's

251
00:09:12,950 --> 00:09:18,440
just saying here's a filled shape you

252
00:09:14,659 --> 00:09:24,980
know and we're gonna fill it in okay so

253
00:09:18,440 --> 00:09:26,810
that's the first part that's the first

254
00:09:24,980 --> 00:09:29,600
part of what's happening in a font file

255
00:09:26,809 --> 00:09:33,349
right is it's basically describing some

256
00:09:29,600 --> 00:09:34,600
filled shape that is from you know for

257
00:09:33,350 --> 00:09:37,100
all intents and purposes

258
00:09:34,600 --> 00:09:39,110
resolution-independent meaning there's

259
00:09:37,100 --> 00:09:40,879
not really an ocean of pixels here

260
00:09:39,110 --> 00:09:42,230
necessarily there is a little bit of a

261
00:09:40,879 --> 00:09:43,460
thing called hinting which I'll briefly

262
00:09:42,230 --> 00:09:46,220
mention but we don't really care about

263
00:09:43,460 --> 00:09:47,810
it so much but for the most part we're

264
00:09:46,220 --> 00:09:49,370
not really talking about pixels here

265
00:09:47,809 --> 00:09:51,649
we're just talking about an abstract

266
00:09:49,370 --> 00:09:53,720
shape and that abstract shape could be

267
00:09:51,649 --> 00:09:55,939
scaled as big or as little as you want

268
00:09:53,720 --> 00:09:58,340
it and it would still be able to be

269
00:09:55,940 --> 00:10:00,260
infinitely precise because again it's

270
00:09:58,340 --> 00:10:02,030
not talking about individual pixels it's

271
00:10:00,259 --> 00:10:03,830
talking about just that shape so just

272
00:10:02,029 --> 00:10:05,059
like in Adobe Illustrator versus Adobe

273
00:10:03,830 --> 00:10:07,070
Photoshop you know in Adobe Illustrator

274
00:10:05,059 --> 00:10:08,869
you can you know make the shapes and you

275
00:10:07,070 --> 00:10:10,670
can scale them any size in Photoshop you

276
00:10:08,870 --> 00:10:12,440
paint on the pixels and then that's you

277
00:10:10,669 --> 00:10:14,990
know if you resize it it gets blurrier

278
00:10:12,440 --> 00:10:16,370
or heart you know right it's the same

279
00:10:14,990 --> 00:10:18,649
deal right so we're talking about

280
00:10:16,370 --> 00:10:20,179
continuous shapes not pixels and the

281
00:10:18,649 --> 00:10:22,850
reason behind that is because people

282
00:10:20,179 --> 00:10:25,009
want to be able to ship one font file

283
00:10:22,850 --> 00:10:27,440
that allows them to use that font at any

284
00:10:25,009 --> 00:10:30,740
scale right you want to be able to ship

285
00:10:27,440 --> 00:10:33,050
you know Times New Roman and be able to

286
00:10:30,740 --> 00:10:35,690
say I want it 20 points 30 points

287
00:10:33,049 --> 00:10:37,279
whatever right and it gets bigger or

288
00:10:35,690 --> 00:10:39,950
smaller just like you do you know in any

289
00:10:37,279 --> 00:10:41,600
package that you use so that's the first

290
00:10:39,950 --> 00:10:43,730
thing that they do is try to describe a

291
00:10:41,600 --> 00:10:45,529
relatively resolution-independent

292
00:10:43,730 --> 00:10:47,509
outline shape for the font that would

293
00:10:45,529 --> 00:10:52,199
allow a program that wanted to fill it

294
00:10:47,509 --> 00:10:54,330
in to fill it in now

295
00:10:52,200 --> 00:10:58,920
the second thing that those that these

296
00:10:54,330 --> 00:11:02,820
do is they describe a mapping from some

297
00:10:58,919 --> 00:11:05,219
character set encoding to these outline

298
00:11:02,820 --> 00:11:10,320
shapes right and what do I mean by

299
00:11:05,220 --> 00:11:12,870
character set encoding okay what does

300
00:11:10,320 --> 00:11:15,980
that mean what I mean by character set

301
00:11:12,870 --> 00:11:19,980
encoding is that in the English language

302
00:11:15,980 --> 00:11:22,139
right or in Chinese or something right

303
00:11:19,980 --> 00:11:25,350
we all know what we're talking about

304
00:11:22,139 --> 00:11:27,960
when we say like the letter T right or

305
00:11:25,350 --> 00:11:30,180
the symbol for meat or something right I

306
00:11:27,960 --> 00:11:32,100
think it's got like a little it's like

307
00:11:30,179 --> 00:11:33,359
something that looks like this right or

308
00:11:32,100 --> 00:11:34,649
whatever and I'm trying to give an

309
00:11:33,360 --> 00:11:37,590
example in Chinese balance speak Chinese

310
00:11:34,649 --> 00:11:39,779
so it's hard for me but anyway there are

311
00:11:37,590 --> 00:11:41,730
these glyphs right and so the font file

312
00:11:39,779 --> 00:11:43,769
can describe this glyph it can describe

313
00:11:41,730 --> 00:11:47,970
T it can describe the symbol for meat

314
00:11:43,769 --> 00:11:51,120
right or whatever but how do you know

315
00:11:47,970 --> 00:11:53,190
what symbol is describing right how do

316
00:11:51,120 --> 00:11:54,929
you know we can't just give it you know

317
00:11:53,190 --> 00:11:57,150
some arbitrary number like okay this is

318
00:11:54,929 --> 00:11:59,279
you know glyph 17 in the file well how

319
00:11:57,149 --> 00:12:01,139
do I know when I wanted to actually show

320
00:11:59,279 --> 00:12:04,529
the symbol for me how do I know that was

321
00:12:01,139 --> 00:12:06,000
glyph 17 right and so the answer that

322
00:12:04,529 --> 00:12:07,439
you know we've come up with and could

323
00:12:06,000 --> 00:12:09,000
the computing world is to have these

324
00:12:07,440 --> 00:12:10,440
character set and codings and one of

325
00:12:09,000 --> 00:12:12,450
them you're very familiar with if you've

326
00:12:10,440 --> 00:12:13,980
watched a made here from the very very

327
00:12:12,450 --> 00:12:15,300
beginning in fact I think it was maybe

328
00:12:13,980 --> 00:12:16,830
in the intro to see print out now maybe

329
00:12:15,299 --> 00:12:18,479
I don't even know if we did it in ham it

330
00:12:16,830 --> 00:12:20,040
here oh it might have been even the pre

331
00:12:18,480 --> 00:12:24,600
the test thing where I did a little bit

332
00:12:20,039 --> 00:12:28,139
of C stuff but basically there's ASCII /

333
00:12:24,600 --> 00:12:29,730
ANSI encoding for four characters

334
00:12:28,139 --> 00:12:31,289
there's basically a character set

335
00:12:29,730 --> 00:12:36,659
encoding that allows you to do you know

336
00:12:31,289 --> 00:12:38,759
most like Roman derived languages in a

337
00:12:36,659 --> 00:12:41,339
standard way where we basically just

338
00:12:38,759 --> 00:12:43,679
defined what all the characters are

339
00:12:41,340 --> 00:12:46,110
right we basically said okay you know if

340
00:12:43,679 --> 00:12:51,149
you're reading Spanish or English or

341
00:12:46,110 --> 00:12:53,039
French or something we have mapped sort

342
00:12:51,149 --> 00:12:55,949
of in a definitive way that everyone has

343
00:12:53,039 --> 00:12:58,709
agreed to use we have mapped all of the

344
00:12:55,950 --> 00:13:02,730
characters to some symbols so we just

345
00:12:58,710 --> 00:13:05,980
know that oh is 79 right like that's

346
00:13:02,730 --> 00:13:08,470
just what we know so inside

347
00:13:05,980 --> 00:13:11,170
file we could say something like we are

348
00:13:08,470 --> 00:13:14,110
using an ASCII encoding so when we tell

349
00:13:11,169 --> 00:13:14,709
you that this glyph corresponds right to

350
00:13:14,110 --> 00:13:17,200
you know

351
00:13:14,710 --> 00:13:18,610
index 80 or something we know that

352
00:13:17,200 --> 00:13:20,860
that's going to be I guess I'm sorry

353
00:13:18,610 --> 00:13:22,389
that's P right we know that that's P so

354
00:13:20,860 --> 00:13:25,120
in the case I gave of T we would know

355
00:13:22,389 --> 00:13:28,539
that we would put 84 as a numerical tag

356
00:13:25,120 --> 00:13:31,060
on this T we'd say 84 is the T right and

357
00:13:28,539 --> 00:13:33,429
so the choice of character set encoding

358
00:13:31,059 --> 00:13:36,819
is very important because it defines

359
00:13:33,429 --> 00:13:39,370
what characters you even can encode now

360
00:13:36,820 --> 00:13:43,270
for example the symbol for meat in

361
00:13:39,370 --> 00:13:45,700
Chinese has no encoding in ASCII you

362
00:13:43,269 --> 00:13:48,100
can't encode it so if you were to pick a

363
00:13:45,700 --> 00:13:50,740
font description that only allowed you

364
00:13:48,100 --> 00:13:53,080
to use ASCII you would not actually be

365
00:13:50,740 --> 00:13:55,000
able to include that character in your

366
00:13:53,080 --> 00:13:56,830
font it just wouldn't happen because

367
00:13:55,000 --> 00:13:58,570
you'd have no way of even telling

368
00:13:56,830 --> 00:14:01,090
someone what it was now what you could

369
00:13:58,570 --> 00:14:02,740
do instead is say okay you know what I

370
00:14:01,090 --> 00:14:04,780
didn't really need this weird block

371
00:14:02,740 --> 00:14:07,000
shape that's like number 2 23 and

372
00:14:04,779 --> 00:14:08,799
extended ASCII so I just said like okay

373
00:14:07,000 --> 00:14:10,960
that's gonna be the meet symbol and just

374
00:14:08,799 --> 00:14:12,729
in my game I know to use that right you

375
00:14:10,960 --> 00:14:14,350
could do that another thing you could do

376
00:14:12,730 --> 00:14:16,450
is thing you use the thing called code

377
00:14:14,350 --> 00:14:18,519
pages which are like ways of switching

378
00:14:16,450 --> 00:14:20,620
out ASCII for a different set encoding

379
00:14:18,519 --> 00:14:21,639
that would only work in for like say

380
00:14:20,620 --> 00:14:23,620
Chinese or something

381
00:14:21,639 --> 00:14:26,259
but again you haven't really solved the

382
00:14:23,620 --> 00:14:27,490
problem and with only 256 glyphs which

383
00:14:26,259 --> 00:14:29,830
is all you're gonna get out of ASCII

384
00:14:27,490 --> 00:14:31,360
anyway you're not going to be able to do

385
00:14:29,830 --> 00:14:33,250
something like Chinese which has gonna

386
00:14:31,360 --> 00:14:37,090
have at least 3000 symbols even in a

387
00:14:33,250 --> 00:14:38,679
basic situation and up to 30 to 40,000

388
00:14:37,090 --> 00:14:42,160
symbols in the case of one that was

389
00:14:38,679 --> 00:14:46,359
supposed to encompass the entire you

390
00:14:42,159 --> 00:14:48,250
know archival you know ancient set where

391
00:14:46,360 --> 00:14:49,690
you were going back through all you know

392
00:14:48,250 --> 00:14:55,750
all the symbols that have ever been used

393
00:14:49,690 --> 00:14:58,450
in Chinese lettering right so what we've

394
00:14:55,750 --> 00:15:00,460
done recently is we've moved to a thing

395
00:14:58,450 --> 00:15:02,050
called Unicode as the more standard

396
00:15:00,460 --> 00:15:03,490
thing right this is kind of the older

397
00:15:02,049 --> 00:15:05,859
school approach this is like the newer

398
00:15:03,490 --> 00:15:07,509
school approach right and what Unicode

399
00:15:05,860 --> 00:15:09,759
is is Unicode is a way of encoding

400
00:15:07,509 --> 00:15:11,439
drastically more characters it goes up

401
00:15:09,759 --> 00:15:15,059
to 16 bits in the naive implementation

402
00:15:11,440 --> 00:15:19,480
like with Windows a thing called utf-16

403
00:15:15,059 --> 00:15:21,039
and then it goes in utf-8 which is

404
00:15:19,480 --> 00:15:22,690
a different encoding of Unicode it

405
00:15:21,039 --> 00:15:24,879
actually can go above 16 bits can

406
00:15:22,690 --> 00:15:27,699
actually do more and so look as we know

407
00:15:24,879 --> 00:15:30,250
on animate Hiro 65536 right we know that

408
00:15:27,698 --> 00:15:31,659
16 bits would give you 65,000 symbols

409
00:15:30,250 --> 00:15:32,799
that's quite a few symbols that's

410
00:15:31,659 --> 00:15:34,600
awesome

411
00:15:32,799 --> 00:15:35,889
but utf-8 allows even more cuz it's

412
00:15:34,600 --> 00:15:38,470
basically a variable length encoding

413
00:15:35,889 --> 00:15:41,019
where it's still 8-bit characters just

414
00:15:38,470 --> 00:15:42,850
like ASCII is but you can kind of double

415
00:15:41,019 --> 00:15:44,259
up the characters and say that like a

416
00:15:42,850 --> 00:15:45,759
particular character can say oh there's

417
00:15:44,259 --> 00:15:47,799
another character coming after me that

418
00:15:45,759 --> 00:15:49,929
combines with me to produce the actual

419
00:15:47,799 --> 00:15:51,729
value and so you can kind of like chain

420
00:15:49,929 --> 00:15:55,149
them to be as long as you want at that

421
00:15:51,730 --> 00:15:56,500
point so you can get up to 24 bit of the

422
00:15:55,149 --> 00:16:00,610
baptists pace which is you know 60

423
00:15:56,500 --> 00:16:02,708
million glyphs right so so basically

424
00:16:00,610 --> 00:16:04,419
Unicode is is the way that we sort of

425
00:16:02,708 --> 00:16:05,919
broke in through that the ASCII table

426
00:16:04,419 --> 00:16:09,909
that was just you know one byte per

427
00:16:05,919 --> 00:16:12,519
character that which was insufficient so

428
00:16:09,909 --> 00:16:16,379
now what Unicode is you know it kind of

429
00:16:12,519 --> 00:16:16,379
has a good and a bad to it if you will

430
00:16:16,649 --> 00:16:24,448
the good thing about Unicode is that

431
00:16:21,458 --> 00:16:26,919
every character has a unique identifier

432
00:16:24,448 --> 00:16:30,189
well it's not quite what I mean to say

433
00:16:26,919 --> 00:16:32,679
but all glyphs have sort of found their

434
00:16:30,190 --> 00:16:34,779
home in Unicode right so it doesn't

435
00:16:32,679 --> 00:16:36,759
matter what random language you want to

436
00:16:34,778 --> 00:16:38,769
do even if it's one that like isn't even

437
00:16:36,759 --> 00:16:40,948
spoken anymore right

438
00:16:38,769 --> 00:16:43,568
somebody somewhere hopefully has

439
00:16:40,948 --> 00:16:45,490
allocated some set of the Unicode

440
00:16:43,568 --> 00:16:49,269
mapping and said here is where those

441
00:16:45,490 --> 00:16:52,120
symbols go right and what that means is

442
00:16:49,269 --> 00:16:54,909
a single thought could literally if it

443
00:16:52,120 --> 00:16:57,429
wanted to describe all of the symbols

444
00:16:54,909 --> 00:17:00,250
that all humans have ever used to ever

445
00:16:57,429 --> 00:17:04,149
write anything down like period right

446
00:17:00,250 --> 00:17:07,838
and that's pretty cool but the problem

447
00:17:04,150 --> 00:17:10,480
with that is that you're stuck with that

448
00:17:07,838 --> 00:17:13,688
in giant encoding right so you can't

449
00:17:10,480 --> 00:17:16,240
just use a table that 65k entries long

450
00:17:13,689 --> 00:17:19,329
or or more like like 16 million entries

451
00:17:16,240 --> 00:17:21,970
long that'd be a crazy huge table to use

452
00:17:19,328 --> 00:17:24,490
in your game of fonts most of which

453
00:17:21,970 --> 00:17:27,279
would be 0 because your game isn't

454
00:17:24,490 --> 00:17:29,380
translated into Sanskrit right your game

455
00:17:27,279 --> 00:17:31,599
isn't translated into all of these

456
00:17:29,380 --> 00:17:32,980
archival languages potentially right

457
00:17:31,599 --> 00:17:34,480
your game just

458
00:17:32,980 --> 00:17:36,130
isn't gonna use all those you don't have

459
00:17:34,480 --> 00:17:38,799
the font for it anyway

460
00:17:36,130 --> 00:17:40,030
you're never gonna slay them so usually

461
00:17:38,799 --> 00:17:41,440
what ends up having to happen and the

462
00:17:40,029 --> 00:17:43,649
thing that's a little bit nastier about

463
00:17:41,440 --> 00:17:47,500
Unicode is typically you have to sort of

464
00:17:43,650 --> 00:17:50,860
treat Unicode as a as an intermediary

465
00:17:47,500 --> 00:17:53,380
mapping because your lookups cannot be

466
00:17:50,859 --> 00:17:55,089
dense anymore so typically what ends up

467
00:17:53,380 --> 00:17:56,940
happening is you've got some kind of a

468
00:17:55,089 --> 00:17:59,859
translation process that you go through

469
00:17:56,940 --> 00:18:01,990
so you know if you wanted to use Unicode

470
00:17:59,859 --> 00:18:05,979
it's typically going through some kind

471
00:18:01,990 --> 00:18:08,670
of a mapping to finally get you into a

472
00:18:05,980 --> 00:18:11,799
dense table of what does my font

473
00:18:08,670 --> 00:18:14,230
actually have in it and that would be

474
00:18:11,799 --> 00:18:17,379
dense right so I have a table of just

475
00:18:14,230 --> 00:18:20,620
you know this font has 500 glyphs in it

476
00:18:17,380 --> 00:18:22,720
right and Unicode is this gigantic you

477
00:18:20,619 --> 00:18:25,179
know 24-bit address space or something

478
00:18:22,720 --> 00:18:26,500
right it's not actually 24-bit I don't

479
00:18:25,180 --> 00:18:30,820
think but you know somewhere up there

480
00:18:26,500 --> 00:18:33,190
over 16 bits of address space you know I

481
00:18:30,819 --> 00:18:35,859
go through a mapping that's a some way

482
00:18:33,190 --> 00:18:37,570
of crunching this down to actually get

483
00:18:35,859 --> 00:18:39,879
it to figure out where in this dense

484
00:18:37,569 --> 00:18:42,210
table of actual font glyphs I'm actually

485
00:18:39,880 --> 00:18:44,290
trying to look for the font that I want

486
00:18:42,210 --> 00:18:45,850
so it's just like you'd be aware of like

487
00:18:44,289 --> 00:18:47,649
Unicode just kind of has this nasty

488
00:18:45,849 --> 00:18:50,199
property of because it's supposed to be

489
00:18:47,650 --> 00:18:52,509
a universal encoding that can describe

490
00:18:50,200 --> 00:18:54,100
any glyph it's actually not very good

491
00:18:52,509 --> 00:18:56,200
for describing the glyphs that you have

492
00:18:54,099 --> 00:18:58,449
so typically what you end up doing if

493
00:18:56,200 --> 00:19:01,360
you want to support arbitrary languages

494
00:18:58,450 --> 00:19:04,029
in a system is yes you accept Unicode as

495
00:19:01,359 --> 00:19:05,139
your encoding but then whenever you get

496
00:19:04,029 --> 00:19:06,670
one and you want to actually start

497
00:19:05,140 --> 00:19:07,990
working with it to display something on

498
00:19:06,670 --> 00:19:09,820
the screen you go through some kind of

499
00:19:07,990 --> 00:19:12,549
mapping that will put you into the right

500
00:19:09,819 --> 00:19:16,409
place in your table of glyphs you

501
00:19:12,549 --> 00:19:16,409
actually right

502
00:19:19,798 --> 00:19:25,690
okay so back to our font files so what

503
00:19:24,038 --> 00:19:27,579
the font file ends up being at the end

504
00:19:25,690 --> 00:19:29,590
of the day is typically something like a

505
00:19:27,579 --> 00:19:32,199
Unicode oh and by the way I didn't

506
00:19:29,589 --> 00:19:34,298
actually say it they are called these

507
00:19:32,200 --> 00:19:37,990
the sort of entries into the Unicode

508
00:19:34,298 --> 00:19:39,788
table they are called code points so

509
00:19:37,990 --> 00:19:42,190
when you hear someone say a Unicode code

510
00:19:39,788 --> 00:19:44,589
point they are referring to that

511
00:19:42,190 --> 00:19:48,490
numerical slot that has been reserved

512
00:19:44,589 --> 00:19:50,079
for this glyph slot sixty-three thousand

513
00:19:48,490 --> 00:19:51,519
four hundred and fifty two or right

514
00:19:50,079 --> 00:19:54,490
which corresponds to whatever glyph

515
00:19:51,519 --> 00:19:56,829
that's like a Unicode code point that's

516
00:19:54,490 --> 00:20:01,450
typically what that phrase is used to

517
00:19:56,829 --> 00:20:03,189
describe right yeah so anyway so that's

518
00:20:01,450 --> 00:20:05,769
typically what ends up being in

519
00:20:03,190 --> 00:20:07,808
something like a font file is it will be

520
00:20:05,769 --> 00:20:11,139
something like here is an outline of a

521
00:20:07,808 --> 00:20:13,928
tea here is the Unicode code point right

522
00:20:11,140 --> 00:20:16,149
that describes which glyph I'm talking

523
00:20:13,929 --> 00:20:18,548
about so now the code knows okay that's

524
00:20:16,148 --> 00:20:21,069
an English letter T okay I get it right

525
00:20:18,548 --> 00:20:23,740
or that's the Chinese symbol for meat

526
00:20:21,069 --> 00:20:26,048
right I get it so now there's it's

527
00:20:23,740 --> 00:20:27,880
basically like a you know a way of

528
00:20:26,048 --> 00:20:29,710
bridging that gap of I've just got a

529
00:20:27,880 --> 00:20:31,870
bunch of outlines in this file I need

530
00:20:29,710 --> 00:20:34,480
some way of telling you what do they

531
00:20:31,869 --> 00:20:36,369
actually mean to a human who spoke this

532
00:20:34,480 --> 00:20:39,548
language what do they mean and that's

533
00:20:36,369 --> 00:20:43,839
what it tells you right so the code

534
00:20:39,548 --> 00:20:47,019
point is almost all the information we

535
00:20:43,839 --> 00:20:49,359
need almost all right we've got a glyph

536
00:20:47,019 --> 00:20:51,908
we've got the code point but it's not

537
00:20:49,359 --> 00:20:54,519
quite enough yet to actually constitute

538
00:20:51,909 --> 00:20:57,010
a useful font and the reason is because

539
00:20:54,519 --> 00:20:59,200
we don't actually know how to start

540
00:20:57,009 --> 00:21:02,140
assembling multiple characters together

541
00:20:59,200 --> 00:21:04,538
into words so let me tell you a little

542
00:21:02,140 --> 00:21:06,460
bit about basic typography here I'm not

543
00:21:04,538 --> 00:21:08,140
going to harp on it because your

544
00:21:06,460 --> 00:21:10,509
handmade Hiro is not about text so we

545
00:21:08,140 --> 00:21:12,669
don't have to be expert typographers to

546
00:21:10,509 --> 00:21:14,740
do the implementation of the font system

547
00:21:12,669 --> 00:21:16,149
in handmade here right if you were doing

548
00:21:14,740 --> 00:21:18,579
a game that was all about fonts you

549
00:21:16,148 --> 00:21:20,859
would want to be an expert typographer

550
00:21:18,579 --> 00:21:23,699
certainly but I'll give you a little bit

551
00:21:20,859 --> 00:21:27,129
of the basics so in typography right

552
00:21:23,700 --> 00:21:29,500
there's basically everything is about

553
00:21:27,130 --> 00:21:31,030
sort of the solids and the empty spaces

554
00:21:29,500 --> 00:21:32,680
and the solids of the

555
00:21:31,029 --> 00:21:34,720
the shapes they make and how they like

556
00:21:32,680 --> 00:21:37,180
interrelate they spend a tremendous

557
00:21:34,720 --> 00:21:38,860
amount of time thinking all of this

558
00:21:37,180 --> 00:21:41,560
through and they have a bunch of

559
00:21:38,859 --> 00:21:45,219
properties about fonts that they think

560
00:21:41,559 --> 00:21:48,429
about so for example you might take the

561
00:21:45,220 --> 00:21:49,960
letter G and if you wanted to talk about

562
00:21:48,430 --> 00:21:52,299
that shape there's a number of things

563
00:21:49,960 --> 00:21:54,759
that you could talk about you could talk

564
00:21:52,299 --> 00:21:59,500
about the fact that for example the G

565
00:21:54,759 --> 00:22:02,980
unlike the H in a standard font you

566
00:21:59,500 --> 00:22:04,990
might say that the G has a descender in

567
00:22:02,980 --> 00:22:07,930
typography speak which is this bit that

568
00:22:04,990 --> 00:22:09,789
comes below sort of the line here and

569
00:22:07,930 --> 00:22:11,350
then you might say that the H had like

570
00:22:09,789 --> 00:22:14,950
an ascender which is something that kind

571
00:22:11,349 --> 00:22:16,750
of comes up above this right there's

572
00:22:14,950 --> 00:22:19,450
ways that they describe these things but

573
00:22:16,750 --> 00:22:21,910
this line right here is often referred

574
00:22:19,450 --> 00:22:23,710
to as a base line right and so one of

575
00:22:21,910 --> 00:22:26,680
the things that is described oftentimes

576
00:22:23,710 --> 00:22:32,740
in a font file is what is that base line

577
00:22:26,680 --> 00:22:34,539
and what are the characters represented

578
00:22:32,740 --> 00:22:36,460
at write how does the character glyph

579
00:22:34,539 --> 00:22:38,319
get positioned relative to the base line

580
00:22:36,460 --> 00:22:40,539
might be a piece of information that's

581
00:22:38,319 --> 00:22:42,789
necessary in the font file right

582
00:22:40,539 --> 00:22:45,819
similarly something like what is the

583
00:22:42,789 --> 00:22:48,009
maximum descender height right like of

584
00:22:45,819 --> 00:22:49,990
all of the characters in this font

585
00:22:48,009 --> 00:22:53,200
what's the one that goes down the

586
00:22:49,990 --> 00:22:54,819
farthest of all of the ascenders what's

587
00:22:53,200 --> 00:22:56,740
the one that goes up the highest and

588
00:22:54,819 --> 00:22:58,929
again these are things to allow you to

589
00:22:56,740 --> 00:23:01,569
know when you're gonna go use this font

590
00:22:58,930 --> 00:23:03,940
what is its general span vertically and

591
00:23:01,569 --> 00:23:06,429
what is the actual region that it

592
00:23:03,940 --> 00:23:08,860
actually typically uses right what is

593
00:23:06,430 --> 00:23:10,690
another one would be what's the line

594
00:23:08,859 --> 00:23:13,089
height meaning what did the photographer

595
00:23:10,690 --> 00:23:14,769
created a spot envisioned being the

596
00:23:13,089 --> 00:23:16,809
spacing between lines in a normal

597
00:23:14,769 --> 00:23:18,910
scenario like you know if I was gonna

598
00:23:16,809 --> 00:23:21,279
put the next character down here where

599
00:23:18,910 --> 00:23:23,380
would it be right so you start to have

600
00:23:21,279 --> 00:23:26,889
some information like that but most

601
00:23:23,380 --> 00:23:28,540
important of all and unfortunately a lot

602
00:23:26,890 --> 00:23:31,990
of fonts just don't even do this very

603
00:23:28,539 --> 00:23:35,680
well but ideally speaking your font file

604
00:23:31,990 --> 00:23:38,559
has a thing called kerning kerning

605
00:23:35,680 --> 00:23:41,380
information and what kerning is is

606
00:23:38,559 --> 00:23:44,409
kerning is a way of understanding how to

607
00:23:41,380 --> 00:23:47,530
adjust the positioning of letters

608
00:23:44,410 --> 00:23:51,009
rasaan Tilly based on which pair of

609
00:23:47,529 --> 00:23:52,779
letters you're talking about okay and so

610
00:23:51,009 --> 00:23:54,819
to understand the difference between

611
00:23:52,779 --> 00:23:58,119
these things you first have to sort of

612
00:23:54,819 --> 00:24:00,879
think of the difference between mono and

613
00:23:58,119 --> 00:24:03,819
proportional right fonts which you've

614
00:24:00,880 --> 00:24:05,650
probably seen before right a mono or

615
00:24:03,819 --> 00:24:09,549
mono spaced might be the more

616
00:24:05,650 --> 00:24:13,000
appropriate term right mono spaced font

617
00:24:09,549 --> 00:24:14,950
a mono spaced font is the old-school

618
00:24:13,000 --> 00:24:17,170
kind that was on typewriters and

619
00:24:14,950 --> 00:24:19,210
terminals when they did not have the

620
00:24:17,170 --> 00:24:22,480
level of sophistication necessary to

621
00:24:19,210 --> 00:24:24,970
advance the right position by a variable

622
00:24:22,480 --> 00:24:27,460
number number of pixels or space on the

623
00:24:24,970 --> 00:24:29,620
typed page or whatever right and so what

624
00:24:27,460 --> 00:24:31,900
happened was a font just had to have an

625
00:24:29,619 --> 00:24:34,989
equal amount of space so if I had a G

626
00:24:31,900 --> 00:24:37,540
and I had an i they both had to take up

627
00:24:34,990 --> 00:24:40,539
the exact same amount of space width

628
00:24:37,539 --> 00:24:42,700
wise which looks pretty dumb because

629
00:24:40,539 --> 00:24:44,529
there's this giant gap on either side of

630
00:24:42,700 --> 00:24:46,120
the eye right because if you were to

631
00:24:44,529 --> 00:24:47,980
make it the size that you would normally

632
00:24:46,119 --> 00:24:50,649
want to make the eye the G would like

633
00:24:47,980 --> 00:24:52,900
sort of overflow it right so you kind of

634
00:24:50,650 --> 00:24:54,730
had to adjust it to make it some kind of

635
00:24:52,900 --> 00:24:56,320
uncomfortable size that was too big for

636
00:24:54,730 --> 00:24:57,610
some letters and too small for others

637
00:24:56,319 --> 00:25:00,730
but you know it kind of was like the

638
00:24:57,609 --> 00:25:02,469
best you could do right and so as you

639
00:25:00,730 --> 00:25:04,180
typed away it would just move by that

640
00:25:02,470 --> 00:25:06,610
amount and you would end up with

641
00:25:04,180 --> 00:25:09,450
something like the word Gil

642
00:25:06,609 --> 00:25:12,609
would look something like that right

643
00:25:09,450 --> 00:25:14,140
where the spacing was consistent between

644
00:25:12,609 --> 00:25:15,969
each of the center points and it would

645
00:25:14,140 --> 00:25:17,800
look really stupid because the way that

646
00:25:15,970 --> 00:25:19,870
font ographers who laid it out in LED

647
00:25:17,799 --> 00:25:21,430
would have done it would be like that

648
00:25:19,869 --> 00:25:23,500
which looks a lot more natural and is

649
00:25:21,430 --> 00:25:24,820
easier to use and also helps articulate

650
00:25:23,500 --> 00:25:26,859
the difference between spaces in between

651
00:25:24,819 --> 00:25:28,210
letters which are not what you want to

652
00:25:26,859 --> 00:25:29,859
focus on when you're reading and space

653
00:25:28,210 --> 00:25:32,110
in between words which is what you do

654
00:25:29,859 --> 00:25:33,969
because it helps you tell right words or

655
00:25:32,109 --> 00:25:35,709
recognize kind of as a chunk and so you

656
00:25:33,970 --> 00:25:37,660
want them to group together cleanly and

657
00:25:35,710 --> 00:25:39,250
not have the person be confused about

658
00:25:37,660 --> 00:25:40,930
what is a space and what is the word

659
00:25:39,250 --> 00:25:47,140
right that's not a good thing from a

660
00:25:40,930 --> 00:25:49,170
typography standpoint okay so once we

661
00:25:47,140 --> 00:25:51,220
have the sophistication to do so

662
00:25:49,170 --> 00:25:53,560
proportional fonts were definitely a

663
00:25:51,220 --> 00:25:55,630
preferred thing to do because they were

664
00:25:53,559 --> 00:25:57,849
certainly better than mono space sponsor

665
00:25:55,630 --> 00:25:58,429
for readability and so systems wanted to

666
00:25:57,849 --> 00:25:59,658
support that

667
00:25:58,429 --> 00:26:01,519
so they could produce better-looking

668
00:25:59,659 --> 00:26:04,490
output that was more on par with with

669
00:26:01,519 --> 00:26:06,499
what typographers were able to do you

670
00:26:04,490 --> 00:26:08,749
know because they had refined that in

671
00:26:06,499 --> 00:26:11,808
sort of the the printing press style

672
00:26:08,749 --> 00:26:14,538
right they were making characters that

673
00:26:11,808 --> 00:26:16,730
were different sizes already and so what

674
00:26:14,538 --> 00:26:18,378
we want to do is we wanted to you know

675
00:26:16,730 --> 00:26:19,669
in computing we wanted we want to be

676
00:26:18,378 --> 00:26:22,278
able to do that same sort of stuff and

677
00:26:19,669 --> 00:26:25,100
so what we can do is we can say okay

678
00:26:22,278 --> 00:26:27,259
now whenever we draw a glyph when we

679
00:26:25,099 --> 00:26:29,118
draw the next lift we'll just sort of

680
00:26:27,259 --> 00:26:30,230
have some understanding of how far to go

681
00:26:29,118 --> 00:26:33,019
but if you think about it it's actually

682
00:26:30,230 --> 00:26:35,149
a pretty tricky problem because the

683
00:26:33,019 --> 00:26:37,490
actual distance you might want to go is

684
00:26:35,148 --> 00:26:40,038
not necessarily constant depending on

685
00:26:37,490 --> 00:26:41,659
the letter right a naive proportional

686
00:26:40,038 --> 00:26:43,190
font implementation just says okay for

687
00:26:41,659 --> 00:26:46,309
every letter there's a certain distance

688
00:26:43,190 --> 00:26:47,929
I will advance right and that's fine in

689
00:26:46,308 --> 00:26:50,868
general and it solves our guild problem

690
00:26:47,929 --> 00:26:53,389
to some degree right but what it doesn't

691
00:26:50,868 --> 00:26:55,878
solve and you know and what's a what

692
00:26:53,388 --> 00:26:58,788
sort of a I guess a level above that

693
00:26:55,878 --> 00:27:00,740
right is the concept that depending on

694
00:26:58,788 --> 00:27:03,048
which two letters you were putting

695
00:27:00,740 --> 00:27:05,990
back-to-back you might choose a

696
00:27:03,048 --> 00:27:08,720
different amount of space and to give

697
00:27:05,990 --> 00:27:12,589
you sort of a example of of how that

698
00:27:08,720 --> 00:27:16,850
works right suppose I was to take the

699
00:27:12,589 --> 00:27:18,378
letter G and the letter J right and I

700
00:27:16,849 --> 00:27:20,418
was going to put those two characters

701
00:27:18,378 --> 00:27:22,548
next to each other well I would probably

702
00:27:20,419 --> 00:27:24,288
want to space them so that there's like

703
00:27:22,548 --> 00:27:25,970
a reasonable amount of space here which

704
00:27:24,288 --> 00:27:28,638
would leave kind of more space there

705
00:27:25,970 --> 00:27:30,409
right so when I'm thinking about how

706
00:27:28,638 --> 00:27:32,658
close this J should be to something I

707
00:27:30,409 --> 00:27:34,309
have to consider that right it's gonna

708
00:27:32,659 --> 00:27:36,850
be a little bit different there now on

709
00:27:34,308 --> 00:27:40,638
the other hand if I had an eye right and

710
00:27:36,849 --> 00:27:41,990
a J those can go most closer to those

711
00:27:40,638 --> 00:27:45,229
could go much closer together because

712
00:27:41,990 --> 00:27:47,509
the J descender can easily overlap the

713
00:27:45,230 --> 00:27:49,159
eye right the same thing would be true

714
00:27:47,509 --> 00:27:50,720
in the forward direction that was kind

715
00:27:49,159 --> 00:27:52,580
of a backwards looking kerning example

716
00:27:50,720 --> 00:27:55,548
the same will be true in a different

717
00:27:52,579 --> 00:27:58,788
example if I have an F right and I'm

718
00:27:55,548 --> 00:28:00,829
going to follow it by an H right I guess

719
00:27:58,788 --> 00:28:03,019
I drew my F kind of poorly if I have an

720
00:28:00,829 --> 00:28:04,579
F like that right and I'm going to

721
00:28:03,019 --> 00:28:07,730
follow it by an H that goes all the way

722
00:28:04,579 --> 00:28:09,470
up right like so I would probably have

723
00:28:07,730 --> 00:28:10,700
to space these so that you know it looks

724
00:28:09,470 --> 00:28:12,038
something like that which leaves a fair

725
00:28:10,700 --> 00:28:14,379
bit of space here but you know it's

726
00:28:12,038 --> 00:28:15,819
the closeness there right again on the

727
00:28:14,378 --> 00:28:17,949
other hand if it was an eye

728
00:28:15,819 --> 00:28:20,288
I could probably snuggle that eye in

729
00:28:17,950 --> 00:28:21,580
right next to it in fact this is so

730
00:28:20,288 --> 00:28:23,079
common there's even a thing called a

731
00:28:21,579 --> 00:28:24,519
ligature which we don't really have to

732
00:28:23,079 --> 00:28:25,599
cover in handmade here oh but there's a

733
00:28:24,519 --> 00:28:27,399
thing called a ligature which is

734
00:28:25,599 --> 00:28:29,528
actually when the photographer creates a

735
00:28:27,398 --> 00:28:31,089
unified glyph designed to represent F

736
00:28:29,528 --> 00:28:32,950
and I together because it's so common in

737
00:28:31,089 --> 00:28:36,488
often times they'll do it it looks like

738
00:28:32,950 --> 00:28:41,590
that it's like a combination of an FN

739
00:28:36,489 --> 00:28:43,119
and I right so yeah but point being the

740
00:28:41,589 --> 00:28:45,308
distance between letters can be highly

741
00:28:43,118 --> 00:28:47,709
dependent on the pair of letters not

742
00:28:45,308 --> 00:28:49,808
just the letter that came first and

743
00:28:47,710 --> 00:28:51,369
advancing by a certain fixed amount and

744
00:28:49,808 --> 00:28:53,440
so that's where kerning comes in which

745
00:28:51,368 --> 00:28:56,048
is the idea of modifying the inter

746
00:28:53,440 --> 00:28:58,149
characters facing to account for that

747
00:28:56,048 --> 00:29:00,158
pairwise difference and so what you end

748
00:28:58,148 --> 00:29:02,528
up having is you have another lookup

749
00:29:00,159 --> 00:29:04,389
table in this font file or shouldn't say

750
00:29:02,528 --> 00:29:06,038
a lookup table because it's just encoded

751
00:29:04,388 --> 00:29:08,408
information encoding in the font file

752
00:29:06,038 --> 00:29:10,028
right which would be something like a

753
00:29:08,409 --> 00:29:12,519
simple example would be something like

754
00:29:10,028 --> 00:29:14,739
this it would say you know a character a

755
00:29:12,519 --> 00:29:16,089
character B or I should use something

756
00:29:14,739 --> 00:29:17,858
else character one in character to I

757
00:29:16,089 --> 00:29:19,209
don't know what to say character I can't

758
00:29:17,858 --> 00:29:20,558
use any because any glyph is gonna be

759
00:29:19,210 --> 00:29:23,348
something could be in there character a

760
00:29:20,558 --> 00:29:25,418
character B and then a kerning value so

761
00:29:23,348 --> 00:29:28,329
it would say like okay if there's a G

762
00:29:25,419 --> 00:29:30,639
and a J that are back to back I want you

763
00:29:28,329 --> 00:29:32,769
to do you know the spacing is five if

764
00:29:30,638 --> 00:29:34,418
it's instead an eye and a J or

765
00:29:32,769 --> 00:29:36,579
back-to-back I want the spacing to be

766
00:29:34,419 --> 00:29:38,259
less it's gonna be a 1 whatever and

767
00:29:36,579 --> 00:29:43,148
oftentimes the way that kerning is

768
00:29:38,259 --> 00:29:45,460
represented for encoding reasons is that

769
00:29:43,148 --> 00:29:47,618
typically it's actually not the total

770
00:29:45,460 --> 00:29:49,720
amount of spacing that's really not what

771
00:29:47,618 --> 00:29:53,319
they tend to encode kerning typically

772
00:29:49,720 --> 00:29:56,079
refers to the Delta between the normal

773
00:29:53,319 --> 00:29:57,608
spacing and this pair spacing so

774
00:29:56,079 --> 00:30:00,278
typically what will happen is you'll say

775
00:29:57,608 --> 00:30:03,728
okay there's a normal spacing there's a

776
00:30:00,278 --> 00:30:05,409
normal advancement right for a G so in

777
00:30:03,729 --> 00:30:08,619
the table where the fonts are encoded we

778
00:30:05,409 --> 00:30:11,799
say G advances ten units right that's

779
00:30:08,618 --> 00:30:14,048
what G advances and the kerning for --gj

780
00:30:11,798 --> 00:30:17,769
would say okay you were gonna advance

781
00:30:14,048 --> 00:30:19,808
ten now subtract like five from it so

782
00:30:17,769 --> 00:30:21,970
you actually just do five so instead of

783
00:30:19,808 --> 00:30:23,678
encoding the five it encodes a negative

784
00:30:21,970 --> 00:30:26,759
five which is the Delta from the G's

785
00:30:23,679 --> 00:30:32,980
spacing to the you know right

786
00:30:26,759 --> 00:30:35,099
that's just how that goes right the idea

787
00:30:32,980 --> 00:30:37,710
behind that I believe is to save space

788
00:30:35,099 --> 00:30:39,939
right because if I just encode one

789
00:30:37,710 --> 00:30:43,269
remember this is an N squared thing

790
00:30:39,940 --> 00:30:45,580
right this is N squared because if I was

791
00:30:43,269 --> 00:30:49,629
to encode the kerning for every single

792
00:30:45,579 --> 00:30:52,029
thought pair I would basically have you

793
00:30:49,630 --> 00:30:53,980
know a times like however many there are

794
00:30:52,029 --> 00:30:57,309
like if there's n glyphs I would have n

795
00:30:53,980 --> 00:30:58,599
times n entries in this table and so I

796
00:30:57,309 --> 00:31:00,159
think what they do is they like the

797
00:30:58,599 --> 00:31:02,259
reason they don't just describe to

798
00:31:00,160 --> 00:31:03,430
spacing entirely by an N by n times n

799
00:31:02,259 --> 00:31:04,329
table is because I think they were

800
00:31:03,430 --> 00:31:06,160
trying to say well it'd be more

801
00:31:04,329 --> 00:31:07,720
efficient to say let's just describe a

802
00:31:06,160 --> 00:31:09,519
default spacing that goes after every

803
00:31:07,720 --> 00:31:12,009
character and then we'll just put an

804
00:31:09,519 --> 00:31:14,319
entry in the table for when we aren't

805
00:31:12,009 --> 00:31:16,029
going to modify that and then I think

806
00:31:14,319 --> 00:31:17,169
that's why it ended up being kerning

807
00:31:16,029 --> 00:31:19,720
ended up kind of being by default

808
00:31:17,170 --> 00:31:25,029
defined as this thing that adjusts a

809
00:31:19,720 --> 00:31:26,350
default spacing right hmm so that's not

810
00:31:25,029 --> 00:31:28,899
good

811
00:31:26,349 --> 00:31:30,789
so yeah so that's how much time we got

812
00:31:28,900 --> 00:31:33,910
left all right so we got about 20

813
00:31:30,789 --> 00:31:37,899
minutes left so 20 minutes left we got

814
00:31:33,910 --> 00:31:41,140
25 minutes left so that's what a thot

815
00:31:37,900 --> 00:31:43,120
file is right a font file and a font in

816
00:31:41,140 --> 00:31:46,210
general you might say is something that

817
00:31:43,119 --> 00:31:49,119
declares all of these guys right it

818
00:31:46,210 --> 00:31:50,920
declares all these glyphs it declares

819
00:31:49,119 --> 00:31:53,139
some fundamental things that we might

820
00:31:50,920 --> 00:31:55,840
have like what are often called metrics

821
00:31:53,140 --> 00:31:57,250
of the font font metrics which are

822
00:31:55,839 --> 00:31:59,139
basically saying you know look where's

823
00:31:57,250 --> 00:32:00,880
the baseline descenders ascenders you

824
00:31:59,140 --> 00:32:03,610
know some some set of numbers that gives

825
00:32:00,880 --> 00:32:06,010
me a little bit of an idea about how the

826
00:32:03,609 --> 00:32:09,399
font is laid out and then typically also

827
00:32:06,009 --> 00:32:11,980
a kerning table which allows me to sort

828
00:32:09,400 --> 00:32:13,930
of know how I might want to adjust the

829
00:32:11,980 --> 00:32:16,450
spacing of these fonts to make them look

830
00:32:13,930 --> 00:32:17,680
the way the photographer intended

831
00:32:16,450 --> 00:32:18,730
unfortunately a lot of times these

832
00:32:17,680 --> 00:32:20,640
tables are awful

833
00:32:18,730 --> 00:32:24,220
the photographer does a really lousy job

834
00:32:20,640 --> 00:32:26,800
and that is annoys me to no end but what

835
00:32:24,220 --> 00:32:29,200
are you gonna do and then finally the

836
00:32:26,799 --> 00:32:30,879
thing that font files have oftentimes is

837
00:32:29,200 --> 00:32:33,730
they have something called hinting as

838
00:32:30,880 --> 00:32:36,100
well we don't really probably care very

839
00:32:33,730 --> 00:32:39,430
much about hinting but what hinting is

840
00:32:36,099 --> 00:32:43,149
is if you're trying to make fonts

841
00:32:39,430 --> 00:32:44,320
that appear very very tiny then there

842
00:32:43,150 --> 00:32:47,890
are some things that you don't really

843
00:32:44,319 --> 00:32:49,869
want to do so for example if you're

844
00:32:47,890 --> 00:32:52,900
talking about a font that was going to

845
00:32:49,869 --> 00:32:55,239
become rasterized on a very very small

846
00:32:52,900 --> 00:32:57,460
scale so let's make a very little grid

847
00:32:55,240 --> 00:33:03,759
here that we're gonna rasterize right 0

848
00:32:57,460 --> 00:33:12,549
1 2 3 4 5 6 7 I'm gonna make a little

849
00:33:03,759 --> 00:33:14,319
8x8 guy here 0 1 2 3 4 5 6 7 okay so you

850
00:33:12,549 --> 00:33:15,970
know if I was gonna raster as a font on

851
00:33:14,319 --> 00:33:18,939
here one of the things that can easily

852
00:33:15,970 --> 00:33:20,680
happen is if you're dealing with a

853
00:33:18,940 --> 00:33:22,150
proportional font again it's resolution

854
00:33:20,680 --> 00:33:23,769
independent he doesn't know what's going

855
00:33:22,150 --> 00:33:25,600
on so we take something like that

856
00:33:23,769 --> 00:33:28,599
example I gave you where you have the T

857
00:33:25,599 --> 00:33:30,879
and what we end up with is some really

858
00:33:28,599 --> 00:33:33,899
bad scenario where the T the way the T

859
00:33:30,880 --> 00:33:40,060
lines up in our grid will look like this

860
00:33:33,900 --> 00:33:44,910
okay well okay maybe not exactly like

861
00:33:40,059 --> 00:33:44,909
that try that

862
00:33:52,409 --> 00:33:59,259
okay now what you can see here is that

863
00:33:55,538 --> 00:34:00,908
our tea is only one pixel thick but

864
00:33:59,259 --> 00:34:03,429
because of the way that it happened to

865
00:34:00,909 --> 00:34:06,340
line up on the grid it is now a half

866
00:34:03,429 --> 00:34:08,200
pixel thick in this row and a half pixel

867
00:34:06,339 --> 00:34:09,969
thick in this road now if we were to

868
00:34:08,199 --> 00:34:12,368
render that even with anti-alias

869
00:34:09,969 --> 00:34:18,428
rendering what we would get is a very

870
00:34:12,369 --> 00:34:21,068
wide gray tee right because it's like

871
00:34:18,429 --> 00:34:23,769
half way in all over the place right and

872
00:34:21,068 --> 00:34:27,338
that's not what you want for readability

873
00:34:23,769 --> 00:34:29,289
what you want is this thing to snap to

874
00:34:27,338 --> 00:34:31,719
the actual pixels and you wanted to draw

875
00:34:29,289 --> 00:34:34,119
the tee like this because that would

876
00:34:31,719 --> 00:34:37,358
have been what was actually most the

877
00:34:34,119 --> 00:34:39,269
most legible right oops I should not

878
00:34:37,358 --> 00:34:41,679
quite do that I didn't mean to do that

879
00:34:39,269 --> 00:34:44,759
right you want to draw the tee like this

880
00:34:41,679 --> 00:34:51,818
or did I mean to do that one two three

881
00:34:44,760 --> 00:34:54,669
one two yes okay sorry like that so yeah

882
00:34:51,818 --> 00:34:56,469
that is what you would prefer to do and

883
00:34:54,668 --> 00:34:58,539
so what hinting was was a way of

884
00:34:56,469 --> 00:35:01,358
describing the fact that you wanted to

885
00:34:58,539 --> 00:35:04,029
do this to certain letters like stems

886
00:35:01,358 --> 00:35:05,469
and stuff to try and line them up with

887
00:35:04,030 --> 00:35:07,569
pixels so that you wouldn't get that

888
00:35:05,469 --> 00:35:09,909
kind of effect it's not really relevant

889
00:35:07,568 --> 00:35:13,710
anymore on super high res displays so

890
00:35:09,909 --> 00:35:13,710
you know Retina display or whatever

891
00:35:13,829 --> 00:35:18,550
craziness when the pixel count gets high

892
00:35:15,849 --> 00:35:20,650
enough you're always dealing with

893
00:35:18,550 --> 00:35:22,660
multiple enough pixels that doesn't

894
00:35:20,650 --> 00:35:24,550
matter but when you're talking about you

895
00:35:22,659 --> 00:35:26,399
know an eight by eight font or something

896
00:35:24,550 --> 00:35:28,839
like this it starts to matter

897
00:35:26,400 --> 00:35:33,010
so there you go so that's typically

898
00:35:28,838 --> 00:35:35,889
what's found in a font file and our job

899
00:35:33,010 --> 00:35:39,040
now is we want to build something that

900
00:35:35,889 --> 00:35:41,710
will allow us to take these font files

901
00:35:39,039 --> 00:35:43,630
right take fonts and be able to use them

902
00:35:41,710 --> 00:35:47,289
in handmade here on we have a number of

903
00:35:43,630 --> 00:35:49,180
ways that we could do that right and so

904
00:35:47,289 --> 00:35:50,500
we kind of want to think about what are

905
00:35:49,179 --> 00:35:52,358
the ways that we could do that what's

906
00:35:50,500 --> 00:35:54,280
gonna be most efficient for us and I'll

907
00:35:52,358 --> 00:35:55,568
kind of propose how I think we should

908
00:35:54,280 --> 00:35:57,579
probably tackle it because again

909
00:35:55,568 --> 00:36:00,389
handmade hero doesn't have a lot of need

910
00:35:57,579 --> 00:36:02,170
for fonts it's not a font centric game

911
00:36:00,389 --> 00:36:03,819
so yet

912
00:36:02,170 --> 00:36:06,250
probably do something with fonts that's

913
00:36:03,820 --> 00:36:07,900
relatively easy and and is fast to

914
00:36:06,250 --> 00:36:10,210
render like doesn't you know isn't gonna

915
00:36:07,900 --> 00:36:11,320
be some kind of concern for us where

916
00:36:10,210 --> 00:36:13,470
we're spending all of our time thinking

917
00:36:11,320 --> 00:36:17,710
about how our fonts are working right

918
00:36:13,469 --> 00:36:20,289
okay so option one is we could actually

919
00:36:17,710 --> 00:36:23,769
load you know TTF files or something

920
00:36:20,289 --> 00:36:26,679
right we could actually rasterize the

921
00:36:23,769 --> 00:36:27,340
fonts directly okay and what would that

922
00:36:26,679 --> 00:36:29,409
look like

923
00:36:27,340 --> 00:36:32,160
right well what that would look like is

924
00:36:29,409 --> 00:36:34,779
we'd have we'd have two options for that

925
00:36:32,159 --> 00:36:37,389
one would be if we if we were in a

926
00:36:34,780 --> 00:36:41,100
relatively sane way of doing it right is

927
00:36:37,389 --> 00:36:44,650
we would load in the the font lifts

928
00:36:41,099 --> 00:36:47,679
right so they've got that T we would

929
00:36:44,650 --> 00:36:50,289
load in the font glyphs we would turn

930
00:36:47,679 --> 00:36:51,669
these into triangles using a thing where

931
00:36:50,289 --> 00:36:53,529
this is typically a process called

932
00:36:51,670 --> 00:36:54,909
tessellation which we haven't talked

933
00:36:53,530 --> 00:36:58,269
about because we don't really need to

934
00:36:54,909 --> 00:36:59,710
use it on in our game at all but we

935
00:36:58,269 --> 00:37:01,599
would turn these into triangles right

936
00:36:59,710 --> 00:37:05,590
and then we would actually have like an

937
00:37:01,599 --> 00:37:08,440
outline version of that font right that

938
00:37:05,590 --> 00:37:10,210
we could then use to render things now

939
00:37:08,440 --> 00:37:12,250
of course there's a problem there's a

940
00:37:10,210 --> 00:37:15,730
caveat there which is if we were to do

941
00:37:12,250 --> 00:37:18,519
that just once and just use the fonts in

942
00:37:15,730 --> 00:37:21,670
this format we would have a problem when

943
00:37:18,519 --> 00:37:24,400
we went to do like our s's which is that

944
00:37:21,670 --> 00:37:27,280
we'd have to pick some discretization of

945
00:37:24,400 --> 00:37:29,680
the s like we'd have to pick some degree

946
00:37:27,280 --> 00:37:32,140
of fidelity when we turned it into

947
00:37:29,679 --> 00:37:34,089
triangles and then if we zoomed in too

948
00:37:32,139 --> 00:37:35,650
much on the s we would be able to see

949
00:37:34,090 --> 00:37:38,700
that this part was a line and not a

950
00:37:35,650 --> 00:37:41,200
curve like it was supposed to be right

951
00:37:38,699 --> 00:37:42,460
so that's one thing we could do but of

952
00:37:41,199 --> 00:37:44,259
course we could always fix that by

953
00:37:42,460 --> 00:37:45,340
tessellating dynamically at runtime and

954
00:37:44,260 --> 00:37:47,380
saying okay maybe we've read a really

955
00:37:45,340 --> 00:37:48,850
fast test later and we then say okay how

956
00:37:47,380 --> 00:37:50,019
big did you want the S will tessellate

957
00:37:48,849 --> 00:37:52,739
it more or less depending on how large

958
00:37:50,019 --> 00:37:56,880
it is blah blah right so we could load

959
00:37:52,739 --> 00:38:01,689
TTFN and tessellate that's one option

960
00:37:56,880 --> 00:38:05,920
two is we could load TTFN and implicitly

961
00:38:01,690 --> 00:38:07,269
rasterize again not something we really

962
00:38:05,920 --> 00:38:09,490
have covered too much on hammering here

963
00:38:07,269 --> 00:38:12,159
but we actually implemented it already

964
00:38:09,489 --> 00:38:14,379
we actually did one and when did we do

965
00:38:12,159 --> 00:38:15,819
that right well if you remember when we

966
00:38:14,380 --> 00:38:19,360
did our trying

967
00:38:15,820 --> 00:38:21,940
I mean our quad fill remember how we did

968
00:38:19,360 --> 00:38:24,430
that what we did is we said our quad was

969
00:38:21,940 --> 00:38:27,220
a series of edges right it was a series

970
00:38:24,429 --> 00:38:29,379
of directed edges and what we said was a

971
00:38:27,219 --> 00:38:33,399
pixel we like figured out a bounding box

972
00:38:29,380 --> 00:38:36,059
for our our quad and we said a pixel in

973
00:38:33,400 --> 00:38:39,910
here is going to be filled by the quad

974
00:38:36,059 --> 00:38:43,570
if it is included inside all the edges

975
00:38:39,909 --> 00:38:51,250
right that was what we said you remember

976
00:38:43,570 --> 00:38:52,750
this right well we could go right the

977
00:38:51,250 --> 00:38:54,309
same kind of that's called implicit

978
00:38:52,750 --> 00:38:56,440
rasterization it's basically you have

979
00:38:54,309 --> 00:38:58,119
some function you can evaluate implicit

980
00:38:56,440 --> 00:39:00,519
I've talked about implicit explicit a

981
00:38:58,119 --> 00:39:02,469
little bit implicit is f of X Y some

982
00:39:00,519 --> 00:39:04,900
function that we put in X Y it tells us

983
00:39:02,469 --> 00:39:07,559
like you know some value out that's like

984
00:39:04,900 --> 00:39:10,510
for example whether it's included right

985
00:39:07,559 --> 00:39:13,360
where as explicit is like something

986
00:39:10,510 --> 00:39:15,370
where I feed in some parameter and I get

987
00:39:13,360 --> 00:39:17,320
out the XY of it so like if you know you

988
00:39:15,369 --> 00:39:19,059
could imagine like drawing a line you

989
00:39:17,320 --> 00:39:21,460
feed in successive values of T and you

990
00:39:19,059 --> 00:39:22,960
get points along the line right so

991
00:39:21,460 --> 00:39:24,579
implicit rasterization is when we're

992
00:39:22,960 --> 00:39:26,619
talking about being able to step through

993
00:39:24,579 --> 00:39:30,880
pixels and say is this in the shape or

994
00:39:26,619 --> 00:39:34,119
isn't it right i and and and how do I

995
00:39:30,880 --> 00:39:35,890
fill it right so we could do that for

996
00:39:34,119 --> 00:39:38,409
our fonts we could do that by saying

997
00:39:35,889 --> 00:39:40,779
we've got these Bezier curves right

998
00:39:38,409 --> 00:39:41,739
whatever they are for RS and we're

999
00:39:40,780 --> 00:39:44,050
actually going to do an implicit

1000
00:39:41,739 --> 00:39:46,269
rasterize that says for any point we can

1001
00:39:44,050 --> 00:39:48,670
ask the question is it inside or outside

1002
00:39:46,269 --> 00:39:49,929
of these curves we could do that you

1003
00:39:48,670 --> 00:39:52,119
definitely do that with what's called a

1004
00:39:49,929 --> 00:39:54,699
line test where you look to see how many

1005
00:39:52,119 --> 00:39:57,639
times you have crossed over shapes that

1006
00:39:54,699 --> 00:39:59,980
are in your set right and if you've only

1007
00:39:57,639 --> 00:40:02,369
crossed over you know going in one

1008
00:39:59,980 --> 00:40:05,710
direction if you've only crossed over

1009
00:40:02,369 --> 00:40:08,289
one line it means that you're inside

1010
00:40:05,710 --> 00:40:11,380
right whereas if you've only if you've

1011
00:40:08,289 --> 00:40:14,619
crossed over two lines you're outside

1012
00:40:11,380 --> 00:40:16,119
right and it actually it's odd versus

1013
00:40:14,619 --> 00:40:18,069
even right because you could do if you

1014
00:40:16,119 --> 00:40:20,949
did something here it's like I could go

1015
00:40:18,070 --> 00:40:22,269
in out in out right so it's basically

1016
00:40:20,949 --> 00:40:23,500
like if I've crossed over an odd number

1017
00:40:22,269 --> 00:40:24,909
of times I'm inside the shape if I

1018
00:40:23,500 --> 00:40:27,340
crossed over an even number times I

1019
00:40:24,909 --> 00:40:31,779
outside of it right we could write that

1020
00:40:27,340 --> 00:40:34,269
and the benefit of that is that that

1021
00:40:31,780 --> 00:40:37,450
just works at any resolution right no

1022
00:40:34,269 --> 00:40:39,670
matter how you scale or shrinkers warper

1023
00:40:37,449 --> 00:40:41,699
do whatever you want to the s we would

1024
00:40:39,670 --> 00:40:45,760
always have a perfectly smooth curve

1025
00:40:41,699 --> 00:40:48,819
going around the s right so that's

1026
00:40:45,760 --> 00:40:49,720
another one but I don't really think we

1027
00:40:48,820 --> 00:40:52,090
need any of these right

1028
00:40:49,719 --> 00:40:55,359
these are overkill these are drastically

1029
00:40:52,090 --> 00:40:57,940
over killed they're overkill for 99.999%

1030
00:40:55,360 --> 00:41:01,120
of all games right because most games

1031
00:40:57,940 --> 00:41:04,720
just don't have that kind of an

1032
00:41:01,119 --> 00:41:07,119
unpredictable heavy reliance on font

1033
00:41:04,719 --> 00:41:09,039
shapes most games know their target

1034
00:41:07,119 --> 00:41:11,380
resolution or there abouts or a couple

1035
00:41:09,039 --> 00:41:12,909
of them most games know how big the

1036
00:41:11,380 --> 00:41:15,910
thoughts will generally be appearing on

1037
00:41:12,909 --> 00:41:18,670
screen so most of the time making a

1038
00:41:15,909 --> 00:41:20,859
system that is capable of doing this

1039
00:41:18,670 --> 00:41:23,139
much work with the fonts just simply

1040
00:41:20,860 --> 00:41:26,140
isn't that important and you're wasting

1041
00:41:23,139 --> 00:41:28,359
your time if you go hog-wild on it it's

1042
00:41:26,139 --> 00:41:31,690
time you could have spent doing some

1043
00:41:28,360 --> 00:41:34,480
other feature in the game right and so

1044
00:41:31,690 --> 00:41:41,050
typically you go with option three which

1045
00:41:34,480 --> 00:41:42,639
is pre rasterized fonts right and the

1046
00:41:41,050 --> 00:41:45,340
nice part about pre race response is

1047
00:41:42,639 --> 00:41:47,920
basically pre rasterizing fonts turns

1048
00:41:45,340 --> 00:41:50,140
fonts into something that you or your

1049
00:41:47,920 --> 00:41:52,570
game can already handle right we already

1050
00:41:50,139 --> 00:41:54,369
know we can bit blit bitmaps to the

1051
00:41:52,570 --> 00:41:56,110
screen we even know we can transform and

1052
00:41:54,369 --> 00:41:58,150
scale them right we've done that with

1053
00:41:56,110 --> 00:41:59,650
our hero sprites and the sprites for the

1054
00:41:58,150 --> 00:42:01,480
background and all the other stuff right

1055
00:41:59,650 --> 00:42:04,059
we've built good systems for doing that

1056
00:42:01,480 --> 00:42:06,250
and so the nice for your Astros fonts

1057
00:42:04,059 --> 00:42:08,079
right is pre rasterize fonts turns fonts

1058
00:42:06,250 --> 00:42:10,480
into a problem that we already solved

1059
00:42:08,079 --> 00:42:11,920
and way that that works is if you're

1060
00:42:10,480 --> 00:42:15,900
trying to do press rest fonts what we

1061
00:42:11,920 --> 00:42:19,360
say is let's build right bitmaps that

1062
00:42:15,900 --> 00:42:21,519
capture the font add a certain

1063
00:42:19,360 --> 00:42:23,170
resolution we'll say ok for handmade

1064
00:42:21,519 --> 00:42:25,389
hero here's our target resolution right

1065
00:42:23,170 --> 00:42:28,750
we want 1920 by 1080 or something right

1066
00:42:25,389 --> 00:42:30,489
and we want our foster show up roughly

1067
00:42:28,750 --> 00:42:33,039
the size so you know we want them to be

1068
00:42:30,489 --> 00:42:35,169
you know 40 pixels high so let's just

1069
00:42:33,039 --> 00:42:37,690
rasterize the thought out at 40 pixels

1070
00:42:35,170 --> 00:42:38,519
high we'll save the results of that

1071
00:42:37,690 --> 00:42:41,260
rasterize

1072
00:42:38,519 --> 00:42:42,159
into a set of bitmaps or a single bitmap

1073
00:42:41,260 --> 00:42:45,970
where they're like packed together

1074
00:42:42,159 --> 00:42:49,239
whatever right and then we want to

1075
00:42:45,969 --> 00:42:50,828
actually draw these we will simply put

1076
00:42:49,239 --> 00:42:53,559
them back on the screen right we will

1077
00:42:50,829 --> 00:42:55,150
simply blip from the bitmap just like

1078
00:42:53,559 --> 00:42:57,880
we've lit from everything else

1079
00:42:55,150 --> 00:43:05,230
very straightforward right nothing

1080
00:42:57,880 --> 00:43:07,088
nothing crazy happening okay so that's a

1081
00:43:05,230 --> 00:43:09,010
lot easier and a lot more

1082
00:43:07,088 --> 00:43:12,880
straightforward and it also has a nice

1083
00:43:09,010 --> 00:43:14,530
aspect of no matter how complex the the

1084
00:43:12,880 --> 00:43:15,730
thing is that pre rasterizes the fonts

1085
00:43:14,530 --> 00:43:17,710
it doesn't matter because it's not

1086
00:43:15,730 --> 00:43:18,730
happening at runtime right here we would

1087
00:43:17,710 --> 00:43:20,349
have had to start thinking like Oh

1088
00:43:18,730 --> 00:43:22,240
what's the performance considerations of

1089
00:43:20,349 --> 00:43:23,740
this and you know is it gonna start

1090
00:43:22,239 --> 00:43:25,299
impacting my frame rate if you know

1091
00:43:23,739 --> 00:43:27,068
whatever like because there's complexity

1092
00:43:25,300 --> 00:43:28,510
here here we know that it's just going

1093
00:43:27,068 --> 00:43:29,920
through the standard bitmap letting pass

1094
00:43:28,510 --> 00:43:32,170
so I pretty much know exactly everything

1095
00:43:29,920 --> 00:43:34,300
I need to know about it and no matter

1096
00:43:32,170 --> 00:43:36,430
how complicated the glyph is it doesn't

1097
00:43:34,300 --> 00:43:38,050
change it's just however big it appears

1098
00:43:36,429 --> 00:43:39,460
on screen is how much it costs that's it

1099
00:43:38,050 --> 00:43:42,970
right it's just like any other bitmap

1100
00:43:39,460 --> 00:43:44,858
there's no magic to it and so we can

1101
00:43:42,969 --> 00:43:46,299
rasterize any font we want that way no

1102
00:43:44,858 --> 00:43:50,858
matter how crazy it is and that's fine

1103
00:43:46,300 --> 00:43:53,230
so how would we how do we do this right

1104
00:43:50,858 --> 00:43:56,588
how do we do pre rasterize fonts

1105
00:43:53,230 --> 00:43:59,318
well you typically what you do is you

1106
00:43:56,588 --> 00:44:01,539
start with a bitmap and you start

1107
00:43:59,318 --> 00:44:03,730
packing glyphs into it so you might say

1108
00:44:01,539 --> 00:44:08,259
like okay I start and I put the letter A

1109
00:44:03,730 --> 00:44:10,119
in here right and then I go the next one

1110
00:44:08,260 --> 00:44:12,609
and I put the letter B in here right and

1111
00:44:10,119 --> 00:44:17,530
I end up with a bitmap it's got all my

1112
00:44:12,608 --> 00:44:19,679
letters in it right Dada Dada right I

1113
00:44:17,530 --> 00:44:21,880
just pack all the fonts into a bitmap

1114
00:44:19,679 --> 00:44:24,549
that's just I know I can load that

1115
00:44:21,880 --> 00:44:26,500
bitmap and draw my thoughts right in an

1116
00:44:24,550 --> 00:44:28,210
anime hero we don't really pack things

1117
00:44:26,500 --> 00:44:30,489
in a bitmaps much so we could also just

1118
00:44:28,210 --> 00:44:32,050
store these separately as separate

1119
00:44:30,489 --> 00:44:34,689
assets in our asset file if we wanted to

1120
00:44:32,050 --> 00:44:37,150
that could just be separate right

1121
00:44:34,690 --> 00:44:41,800
doesn't matter however you want to do it

1122
00:44:37,150 --> 00:44:44,200
somehow we get all the actual character

1123
00:44:41,800 --> 00:44:46,150
images and we rasterize them into actual

1124
00:44:44,199 --> 00:44:47,858
bitmaps right now what do we store in

1125
00:44:46,150 --> 00:44:49,599
the bitmap well we don't really need any

1126
00:44:47,858 --> 00:44:51,039
color information because the font

1127
00:44:49,599 --> 00:44:51,670
probably will be colored on the fly when

1128
00:44:51,039 --> 00:44:52,659
we actually

1129
00:44:51,670 --> 00:44:53,920
we'll probably want to be able to change

1130
00:44:52,659 --> 00:44:56,440
the color of the fossil just be white

1131
00:44:53,920 --> 00:44:59,800
right so really this is gonna be can be

1132
00:44:56,440 --> 00:45:03,820
a monochrome bitmap as well right it can

1133
00:44:59,800 --> 00:45:05,800
just be an 8-bit value that tells me how

1134
00:45:03,820 --> 00:45:07,510
much coverage there was right it can

1135
00:45:05,800 --> 00:45:10,269
just be like an 8-bit value that's like

1136
00:45:07,510 --> 00:45:12,250
the the anti aliased white version of

1137
00:45:10,269 --> 00:45:12,639
this font like grayscale would probably

1138
00:45:12,250 --> 00:45:14,619
be fine

1139
00:45:12,639 --> 00:45:17,019
now you know you could do color if you

1140
00:45:14,619 --> 00:45:18,579
were doing some thought that was fancier

1141
00:45:17,019 --> 00:45:20,679
and had like you know some kind of color

1142
00:45:18,579 --> 00:45:22,420
you know maybe your artist makes the

1143
00:45:20,679 --> 00:45:25,059
custom for you or something that could

1144
00:45:22,420 --> 00:45:26,500
be too but most the time fonts aren't

1145
00:45:25,059 --> 00:45:28,539
color so you know you can just store an

1146
00:45:26,500 --> 00:45:30,789
8-bit version that's basically just the

1147
00:45:28,539 --> 00:45:34,929
anti-aliasing of the font that's all it

1148
00:45:30,789 --> 00:45:37,750
is okay so you need that you need some

1149
00:45:34,929 --> 00:45:40,960
way of storing all the glyphs you then

1150
00:45:37,750 --> 00:45:43,869
need a bunch of tables right first of

1151
00:45:40,960 --> 00:45:47,349
all we need the code points right we

1152
00:45:43,869 --> 00:45:48,819
need to know where you know like okay we

1153
00:45:47,349 --> 00:45:51,429
need to basically have a mapping that

1154
00:45:48,820 --> 00:45:53,500
says all right the letter A right

1155
00:45:51,429 --> 00:45:56,469
whatever that is right so we need the

1156
00:45:53,500 --> 00:45:59,170
letter A maps to like this location

1157
00:45:56,469 --> 00:46:02,169
right so there's like a rectangle or a

1158
00:45:59,170 --> 00:46:03,460
bitmap ID or something that says where

1159
00:46:02,170 --> 00:46:05,380
is the glyph for the letter e how do I

1160
00:46:03,460 --> 00:46:08,050
get the glyph for the letter A right

1161
00:46:05,380 --> 00:46:14,289
I need that then I need some positioning

1162
00:46:08,050 --> 00:46:15,220
information right for the letter A where

1163
00:46:14,289 --> 00:46:17,199
does that go

1164
00:46:15,219 --> 00:46:19,169
right because remember you might have a

1165
00:46:17,199 --> 00:46:22,629
letter in here that's like lowercase a

1166
00:46:19,170 --> 00:46:25,360
right it's much smaller than large a and

1167
00:46:22,630 --> 00:46:27,070
so I can't just use the size of the

1168
00:46:25,360 --> 00:46:29,740
bitmap to tell me where the things go I

1169
00:46:27,070 --> 00:46:32,350
I need to know okay you've shrunk it

1170
00:46:29,739 --> 00:46:34,599
down to the minimal you know box that

1171
00:46:32,349 --> 00:46:36,190
first for storage space how do I then

1172
00:46:34,599 --> 00:46:37,360
position that relative to like the

1173
00:46:36,190 --> 00:46:38,559
baseline right like we were talking

1174
00:46:37,360 --> 00:46:40,240
about the fonts how do i position that

1175
00:46:38,559 --> 00:46:42,519
right so we need some positioning

1176
00:46:40,239 --> 00:46:44,769
information and then finally we need the

1177
00:46:42,519 --> 00:46:47,860
kerning table right we need a way of

1178
00:46:44,769 --> 00:46:51,759
knowing for any two characters how far

1179
00:46:47,860 --> 00:46:53,559
should I advance between them okay so we

1180
00:46:51,760 --> 00:46:55,810
need to store a bunch of information

1181
00:46:53,559 --> 00:46:58,269
with our font that can allow us to get

1182
00:46:55,809 --> 00:47:01,840
all of that information back when we

1183
00:46:58,269 --> 00:47:03,670
load the thing in right so what we're

1184
00:47:01,840 --> 00:47:05,110
gonna want to do tomorrow since we're

1185
00:47:03,670 --> 00:47:06,280
about out of time for

1186
00:47:05,110 --> 00:47:07,990
we have a little bit more I think we

1187
00:47:06,280 --> 00:47:10,030
start about 10 minutes late but this is

1188
00:47:07,989 --> 00:47:11,500
a good point to wrap up anyway so what

1189
00:47:10,030 --> 00:47:13,900
we want to do tomorrow is start figuring

1190
00:47:11,500 --> 00:47:16,000
out a way to pre rasterize our fonts

1191
00:47:13,900 --> 00:47:19,269
like into our asset pack file for

1192
00:47:16,000 --> 00:47:22,179
example in a way that includes all of

1193
00:47:19,269 --> 00:47:26,920
this information and includes the you

1194
00:47:22,179 --> 00:47:31,029
know sort of the the the font the font

1195
00:47:26,920 --> 00:47:33,130
glyphs as well right and so that way so

1196
00:47:31,030 --> 00:47:35,050
we'll kind of you know expand we did I

1197
00:47:33,130 --> 00:47:38,860
think we did a pretty good job in our

1198
00:47:35,050 --> 00:47:41,710
asset system you know of sort of for

1199
00:47:38,860 --> 00:47:44,860
lack of a better term making it

1200
00:47:41,710 --> 00:47:48,130
extensible so adding in another type of

1201
00:47:44,860 --> 00:47:49,599
asset that was a that was a font if we

1202
00:47:48,130 --> 00:47:52,300
had to would not actually be very

1203
00:47:49,599 --> 00:47:55,000
difficult right and so if we find that

1204
00:47:52,300 --> 00:47:57,310
we would rather make a very specific way

1205
00:47:55,000 --> 00:47:58,739
of handling that we could do that but

1206
00:47:57,309 --> 00:48:01,570
the other thing that we could do

1207
00:47:58,739 --> 00:48:03,789
amusingly enough is we could just make

1208
00:48:01,570 --> 00:48:05,110
it so that the thoughts I think we

1209
00:48:03,789 --> 00:48:07,539
probably could even do something where

1210
00:48:05,110 --> 00:48:10,660
the fonts just use the tag matching

1211
00:48:07,539 --> 00:48:12,610
system still to like get the code point

1212
00:48:10,659 --> 00:48:17,799
out that way which would be kind of

1213
00:48:12,610 --> 00:48:21,400
amusing but anyway point being that is

1214
00:48:17,800 --> 00:48:23,170
basically it for fonts and so that is

1215
00:48:21,400 --> 00:48:25,240
the majority of what we have to do

1216
00:48:23,170 --> 00:48:28,420
tomorrow right is just we have to figure

1217
00:48:25,239 --> 00:48:31,689
out how we are going to start building

1218
00:48:28,420 --> 00:48:33,550
one of those font things such that such

1219
00:48:31,690 --> 00:48:35,950
that we can start using it in the game

1220
00:48:33,550 --> 00:48:37,960
and it's it's a bunch of Drudge rook

1221
00:48:35,949 --> 00:48:39,819
really it's not gonna be particularly

1222
00:48:37,960 --> 00:48:41,530
exciting it's like what I've told you so

1223
00:48:39,820 --> 00:48:43,330
far is it's basically what you need to

1224
00:48:41,530 --> 00:48:46,630
know to do it it's just I'm gonna have

1225
00:48:43,329 --> 00:48:48,519
to now show you sort of the the annoying

1226
00:48:46,630 --> 00:48:51,059
part of like interfacing with Windows to

1227
00:48:48,519 --> 00:48:53,800
get your fonts or you know some other

1228
00:48:51,059 --> 00:48:56,110
scheme by which you could generate the

1229
00:48:53,800 --> 00:48:58,180
fonts that you that you need you could

1230
00:48:56,110 --> 00:49:00,400
also use like the SDB TrueType library

1231
00:48:58,179 --> 00:49:04,599
for example to generate them so i'll

1232
00:49:00,400 --> 00:49:06,430
show you how to do it using windows and

1233
00:49:04,599 --> 00:49:08,349
you could also you know symmetrically

1234
00:49:06,429 --> 00:49:10,569
use some other operating system to

1235
00:49:08,349 --> 00:49:13,150
extract the fonts out of it but you

1236
00:49:10,570 --> 00:49:16,090
could alternatively use you know open

1237
00:49:13,150 --> 00:49:17,530
open type or stb font i mean SD be true

1238
00:49:16,090 --> 00:49:18,030
but true type which is you know what a

1239
00:49:17,530 --> 00:49:20,400
sean barie

1240
00:49:18,030 --> 00:49:22,740
it's libraries that's a it's got a it's

1241
00:49:20,400 --> 00:49:24,360
a great little true type font system

1242
00:49:22,739 --> 00:49:26,069
that really small amount of code that's

1243
00:49:24,360 --> 00:49:28,620
easy to use so that's another way you

1244
00:49:26,070 --> 00:49:34,200
can do it too so that's about it I will

1245
00:49:28,619 --> 00:49:35,579
go ahead and go to the Q&amp;A now so if

1246
00:49:34,199 --> 00:49:55,589
anyone has questions about fonts I'd

1247
00:49:35,579 --> 00:49:57,900
like to ask now would be the time tt PJM

1248
00:49:55,590 --> 00:50:01,559
aren't there licensing concerns with

1249
00:49:57,900 --> 00:50:07,170
fonts well it depends which method you

1250
00:50:01,559 --> 00:50:12,059
are picking so if you are if you are

1251
00:50:07,170 --> 00:50:15,930
doing one of these methods you may and

1252
00:50:12,059 --> 00:50:17,400
it's kind of a legal gray area depending

1253
00:50:15,929 --> 00:50:20,899
on exactly how you implement it so

1254
00:50:17,400 --> 00:50:24,090
honestly I I guess I don't really know

1255
00:50:20,900 --> 00:50:26,550
and and I don't even know if anyone

1256
00:50:24,090 --> 00:50:29,640
really knows with these you would

1257
00:50:26,550 --> 00:50:32,039
probably have to license the the font

1258
00:50:29,639 --> 00:50:33,809
file the font that you like like so with

1259
00:50:32,039 --> 00:50:36,630
with either of these methods you would

1260
00:50:33,809 --> 00:50:38,639
probably have to license the font to use

1261
00:50:36,630 --> 00:50:39,840
like in your game right so if you wanted

1262
00:50:38,639 --> 00:50:42,389
to use a bigger font you'd have to go

1263
00:50:39,840 --> 00:50:45,510
get a license for that font even if you

1264
00:50:42,389 --> 00:50:48,900
didn't ship the TTF so even if you don't

1265
00:50:45,510 --> 00:50:50,220
ship the TTF you would probably if you

1266
00:50:48,900 --> 00:50:51,599
literally did one of these methods

1267
00:50:50,219 --> 00:50:53,489
there's actually other ways you could do

1268
00:50:51,599 --> 00:50:57,000
it here that that might actually not

1269
00:50:53,489 --> 00:50:58,979
require that the amusing thing with this

1270
00:50:57,000 --> 00:51:02,719
method is you never need a license for

1271
00:50:58,980 --> 00:51:10,590
this method this method is always free

1272
00:51:02,719 --> 00:51:13,469
if you are in the u.s. if you are in

1273
00:51:10,590 --> 00:51:14,700
Europe that might not be true because

1274
00:51:13,469 --> 00:51:17,579
there are other places have different

1275
00:51:14,699 --> 00:51:19,739
copyright laws but the way the copyright

1276
00:51:17,579 --> 00:51:22,949
works in the u.s. is fonts cannot be

1277
00:51:19,739 --> 00:51:26,159
copyrighted so the only reason the other

1278
00:51:22,949 --> 00:51:27,919
methods are do require a license is

1279
00:51:26,159 --> 00:51:30,599
because the other methods are

1280
00:51:27,920 --> 00:51:33,030
technically software it was ruled in

1281
00:51:30,599 --> 00:51:35,009
in a famous Supreme Court ruling that

1282
00:51:33,030 --> 00:51:36,390
Technic might have been enough with

1283
00:51:35,010 --> 00:51:38,220
Supreme Court ruling I take that back it

1284
00:51:36,389 --> 00:51:40,889
might have been a district court ruling

1285
00:51:38,219 --> 00:51:42,899
I don't quite remember but basically

1286
00:51:40,889 --> 00:51:46,920
there was a ruling that said that

1287
00:51:42,900 --> 00:51:48,780
because the the TTFN or a fought file

1288
00:51:46,920 --> 00:51:51,960
was basically instructions to a computer

1289
00:51:48,780 --> 00:51:54,600
on how to generate the font at any

1290
00:51:51,960 --> 00:51:58,170
resolution that it was copyrightable as

1291
00:51:54,599 --> 00:52:00,059
software now the font is still not

1292
00:51:58,170 --> 00:52:03,300
copyrightable which means if you were to

1293
00:52:00,059 --> 00:52:06,420
load it up on the screen and trace it to

1294
00:52:03,300 --> 00:52:08,460
make your own new outline version that

1295
00:52:06,420 --> 00:52:10,380
would be legal and you could ship that

1296
00:52:08,460 --> 00:52:14,190
version with no license but if you

1297
00:52:10,380 --> 00:52:17,400
actually used their TTFN even if you

1298
00:52:14,190 --> 00:52:19,289
translated it into another one

1299
00:52:17,400 --> 00:52:21,090
automatically it would still presumably

1300
00:52:19,289 --> 00:52:22,739
violate the copyright because you are

1301
00:52:21,090 --> 00:52:25,230
translating the program directly at that

1302
00:52:22,739 --> 00:52:28,559
point not the resulting thought shape

1303
00:52:25,230 --> 00:52:31,920
which is not copyrightable on the other

1304
00:52:28,559 --> 00:52:34,170
hand if you are to rasterize the fonts

1305
00:52:31,920 --> 00:52:36,360
you have only you are only left with the

1306
00:52:34,170 --> 00:52:38,460
bitmap the actual image of the font and

1307
00:52:36,360 --> 00:52:40,500
at that point as far as anyone knows

1308
00:52:38,460 --> 00:52:42,360
there is no way to sue you for copyright

1309
00:52:40,500 --> 00:52:45,960
infringement because thoughts can't be

1310
00:52:42,360 --> 00:52:48,030
copyright it is not a computer program

1311
00:52:45,960 --> 00:52:53,550
it's just an image and the image of a

1312
00:52:48,030 --> 00:52:55,830
font is not copyrightable so in the US

1313
00:52:53,550 --> 00:52:58,740
no there i do not believe there are any

1314
00:52:55,829 --> 00:53:00,299
licensing issues with that if you wanted

1315
00:52:58,739 --> 00:53:01,619
to be safe rather than sorry you know

1316
00:53:00,300 --> 00:53:05,220
you could always license fonts they're

1317
00:53:01,619 --> 00:53:07,289
not super expensive but no this method

1318
00:53:05,219 --> 00:53:08,879
you down if you want to dynamically

1319
00:53:07,289 --> 00:53:11,550
create the fonts on the fly on the other

1320
00:53:08,880 --> 00:53:13,530
hand you absolutely do need to license

1321
00:53:11,550 --> 00:53:17,780
it even if you are in the u.s. because

1322
00:53:13,530 --> 00:53:17,780
that is is copyrighted

1323
00:53:21,530 --> 00:53:28,460
will you support Unicode in hand-made

1324
00:53:23,880 --> 00:53:28,460
here oh yeah I think we probably will

1325
00:53:32,690 --> 00:53:36,750
could we not pre rasterize our fonts

1326
00:53:35,280 --> 00:53:39,900
whenever the resolution has changed at

1327
00:53:36,750 --> 00:53:41,699
run time basically you could but I

1328
00:53:39,900 --> 00:53:43,349
typically don't like to do that because

1329
00:53:41,699 --> 00:53:45,599
if you do that then you are basically

1330
00:53:43,349 --> 00:53:48,839
shipping an extra set of complexity in

1331
00:53:45,599 --> 00:53:50,069
the game right like you're you know I

1332
00:53:48,840 --> 00:53:52,200
don't really want to ship a font

1333
00:53:50,070 --> 00:53:54,269
rasterizer in the game if I don't have

1334
00:53:52,199 --> 00:53:56,429
to write because just one more thing

1335
00:53:54,269 --> 00:53:58,409
that could go wrong and so I like to

1336
00:53:56,429 --> 00:54:07,230
just treat them as regular art assets if

1337
00:53:58,409 --> 00:54:08,759
I can if I can't that I can't we'd be

1338
00:54:07,230 --> 00:54:10,500
writing something using the font before

1339
00:54:08,760 --> 00:54:13,770
you code the actual font reading etc

1340
00:54:10,500 --> 00:54:15,599
well yes and no to generate the font

1341
00:54:13,769 --> 00:54:19,559
files no we won't because we just need

1342
00:54:15,599 --> 00:54:21,719
to get the data in there but to to just

1343
00:54:19,559 --> 00:54:23,219
determine the font API yes we'll write

1344
00:54:21,719 --> 00:54:24,539
some stuff that's like how do we want to

1345
00:54:23,219 --> 00:54:27,259
actually try to print things and then

1346
00:54:24,539 --> 00:54:27,259
we'll make that work

1347
00:54:30,789 --> 00:54:35,000
well classic bitmap fonts remain

1348
00:54:33,199 --> 00:54:36,559
relevant in the coming years or will we

1349
00:54:35,000 --> 00:54:38,599
just start flat out with vector fonts

1350
00:54:36,559 --> 00:54:40,400
for evermore I don't really feel like

1351
00:54:38,599 --> 00:54:41,118
bitmap fonts are super relevant except

1352
00:54:40,400 --> 00:54:42,950
in a retro

1353
00:54:41,119 --> 00:54:44,390
I feel like vector fonts are pretty much

1354
00:54:42,949 --> 00:54:46,099
the thing and it's just you know you

1355
00:54:44,389 --> 00:54:48,170
tend to rasterize them down to bitmaps

1356
00:54:46,099 --> 00:54:50,420
but I don't think you're you hand author

1357
00:54:48,170 --> 00:54:51,950
I don't think the idea of hand authoring

1358
00:54:50,420 --> 00:54:53,720
a bitmap font is really all that

1359
00:54:51,949 --> 00:54:55,549
relevant except for retro style like

1360
00:54:53,719 --> 00:54:57,829
retro style looks but there will be

1361
00:54:55,550 --> 00:54:59,330
retro style looking games for a long

1362
00:54:57,829 --> 00:55:00,860
time I would imagine right possibly

1363
00:54:59,329 --> 00:55:02,599
forever so that it won't go away

1364
00:55:00,860 --> 00:55:05,809
entirely but yeah it's not really that

1365
00:55:02,599 --> 00:55:08,239
relevant most of the time are you doing

1366
00:55:05,809 --> 00:55:11,539
quantum mechanics no because I don't

1367
00:55:08,239 --> 00:55:13,609
know any contra mechanics did you ever

1368
00:55:11,539 --> 00:55:15,320
try making a font yourself uh yeah I

1369
00:55:13,610 --> 00:55:17,410
actually did make it thought myself when

1370
00:55:15,320 --> 00:55:21,590
I was little it was a bitmap font though

1371
00:55:17,409 --> 00:55:23,210
there's not a it was not an iPhone will

1372
00:55:21,590 --> 00:55:27,470
you have unique fonts made for the game

1373
00:55:23,210 --> 00:55:28,880
possibly I'm not sure it depends a few

1374
00:55:27,469 --> 00:55:35,689
ancient is interested in that she might

1375
00:55:28,880 --> 00:55:38,090
be if you have multiple font families

1376
00:55:35,690 --> 00:55:40,820
and we're pre rasterizing them can you

1377
00:55:38,090 --> 00:55:44,630
stuff them into one file well I mean in

1378
00:55:40,820 --> 00:55:46,010
our asset system yes in other asset

1379
00:55:44,630 --> 00:55:49,970
systems who knows it depends whether the

1380
00:55:46,010 --> 00:55:52,790
asset system supports it right can I

1381
00:55:49,969 --> 00:55:58,129
come live with you and you tutor me no

1382
00:55:52,789 --> 00:56:00,559
we do not have a spare bedroom how are

1383
00:55:58,130 --> 00:56:04,160
combining Unicode characters that some

1384
00:56:00,559 --> 00:56:05,900
languages have handled oh so that's not

1385
00:56:04,159 --> 00:56:10,579
something we super need to probably

1386
00:56:05,900 --> 00:56:13,220
worry about in handmade hero but yeah so

1387
00:56:10,579 --> 00:56:17,119
I don't think I've ever actually

1388
00:56:13,219 --> 00:56:22,159
implemented this in fact I know that I

1389
00:56:17,119 --> 00:56:24,289
have not but in the Unicode spec right

1390
00:56:22,159 --> 00:56:25,069
there's two kind of ways of talking

1391
00:56:24,289 --> 00:56:26,809
about fonts

1392
00:56:25,070 --> 00:56:28,910
I've been talking about glyphs right one

1393
00:56:26,809 --> 00:56:31,070
way is to say I have Unicode code point

1394
00:56:28,909 --> 00:56:33,049
you know 87 or something whatever it is

1395
00:56:31,070 --> 00:56:34,880
right I guess 80 or something right and

1396
00:56:33,050 --> 00:56:36,980
it maps to the letter P or something

1397
00:56:34,880 --> 00:56:38,599
right and so when you see that you kind

1398
00:56:36,980 --> 00:56:39,800
of just know like I'm outputting P and

1399
00:56:38,599 --> 00:56:42,289
that's like what we'll be dealing with

1400
00:56:39,800 --> 00:56:44,099
on handmade here oh but I know there's

1401
00:56:42,289 --> 00:56:46,079
other things in Unicode which which the

1402
00:56:44,099 --> 00:56:48,599
Utica which were the combining glyphs

1403
00:56:46,079 --> 00:56:52,949
and that's when the glyphs don't

1404
00:56:48,599 --> 00:56:54,209
actually form separate pieces right so

1405
00:56:52,949 --> 00:56:56,039
instead of just thinking about like oh

1406
00:56:54,208 --> 00:56:58,528
it's a P and then it's an i and that

1407
00:56:56,039 --> 00:57:00,900
it's an L and an L right you know

1408
00:56:58,528 --> 00:57:03,208
instead of thinking about that it's

1409
00:57:00,900 --> 00:57:06,660
actually more like imagine with an eye

1410
00:57:03,208 --> 00:57:09,629
shape you were to have the eye broken

1411
00:57:06,659 --> 00:57:12,478
into two pieces the lower part and the

1412
00:57:09,630 --> 00:57:14,130
upper part right and this one was one

1413
00:57:12,478 --> 00:57:17,518
code point and this one was another and

1414
00:57:14,130 --> 00:57:19,140
when the engines sees this one followed

1415
00:57:17,518 --> 00:57:21,149
by this one it's supposed to know that

1416
00:57:19,139 --> 00:57:24,028
this one you know is placed up on top of

1417
00:57:21,150 --> 00:57:25,410
there or whatever right I have never

1418
00:57:24,028 --> 00:57:28,708
even looked at that part of the spec I

1419
00:57:25,409 --> 00:57:31,528
have no idea how what they actually what

1420
00:57:28,708 --> 00:57:33,598
it demands of you meaning I don't know

1421
00:57:31,528 --> 00:57:35,159
like if you actually have to do anything

1422
00:57:33,599 --> 00:57:37,559
special if you can just roll it into the

1423
00:57:35,159 --> 00:57:39,778
kerning table or what right because you

1424
00:57:37,559 --> 00:57:41,249
know it's a combination based thing so

1425
00:57:39,778 --> 00:57:43,170
it's possible that like you could do

1426
00:57:41,248 --> 00:57:44,909
something fancy there or it's possible

1427
00:57:43,170 --> 00:57:47,909
that no you really have to look at it

1428
00:57:44,909 --> 00:57:49,259
and go okay it's this code and when I

1429
00:57:47,909 --> 00:57:50,848
see this code I know I have to check the

1430
00:57:49,259 --> 00:57:52,108
next code to see if that code is this

1431
00:57:50,849 --> 00:57:53,609
because if it is it means something

1432
00:57:52,108 --> 00:57:55,679
different you know it could be way more

1433
00:57:53,608 --> 00:57:59,509
complicated right so I've never looked

1434
00:57:55,679 --> 00:58:03,889
at at that encoding and I have no idea

1435
00:57:59,509 --> 00:58:03,889
how that stuff works right

1436
00:58:10,108 --> 00:58:14,918
nay sir 88 I became a much happier

1437
00:58:13,088 --> 00:58:19,088
person once I started writing fonts on

1438
00:58:14,918 --> 00:58:20,978
the fly all the time all the time so you

1439
00:58:19,088 --> 00:58:23,679
mean you you actually just rasterize the

1440
00:58:20,978 --> 00:58:25,778
fonts like literally right when you're

1441
00:58:23,679 --> 00:58:32,798
about to draw a giving glyph you

1442
00:58:25,778 --> 00:58:34,688
rasterize it at that time or do you just

1443
00:58:32,798 --> 00:58:35,018
mean well I guess I'm not sure what you

1444
00:58:34,688 --> 00:58:38,639
mean

1445
00:58:35,018 --> 00:58:42,368
a bit off-topic what makes code

1446
00:58:38,639 --> 00:58:44,409
publishable you said you wouldn't

1447
00:58:42,369 --> 00:58:47,019
publish the current win32 platform layer

1448
00:58:44,409 --> 00:58:48,368
exactly why not I don't usually use the

1449
00:58:47,018 --> 00:58:50,678
term publish because I don't know what

1450
00:58:48,369 --> 00:58:52,689
that means exactly but ship is what I

1451
00:58:50,679 --> 00:58:56,019
would have probably said maybe I did say

1452
00:58:52,688 --> 00:58:58,598
publish though what I mean by that is

1453
00:58:56,018 --> 00:59:02,978
the win32 layer right now is just not

1454
00:58:58,599 --> 00:59:04,509
like it doesn't support all of the code

1455
00:59:02,978 --> 00:59:07,568
paths that you would actually need for a

1456
00:59:04,509 --> 00:59:10,239
robust experience on win32 right it

1457
00:59:07,568 --> 00:59:12,308
doesn't go through the 3d hardware layer

1458
00:59:10,239 --> 00:59:15,608
which means that the framerate won't be

1459
00:59:12,309 --> 00:59:16,689
right it doesn't have vsync because it

1460
00:59:15,608 --> 00:59:20,438
doesn't go through that as well which

1461
00:59:16,688 --> 00:59:24,248
would be which is bad it doesn't you

1462
00:59:20,438 --> 00:59:25,598
know probably handle like app activate

1463
00:59:24,248 --> 00:59:27,158
correctly like what it's in the

1464
00:59:25,599 --> 00:59:28,809
background so that there's like a bunch

1465
00:59:27,159 --> 00:59:30,400
of things you want to do to your win32

1466
00:59:28,809 --> 00:59:33,400
platform layer to make it like shippable

1467
00:59:30,400 --> 00:59:36,099
quality and so when we go you know to

1468
00:59:33,400 --> 00:59:37,929
final the game will go back to the win32

1469
00:59:36,099 --> 00:59:39,309
platform layer and go what are all the

1470
00:59:37,929 --> 00:59:42,068
things you want do to make this more

1471
00:59:39,309 --> 00:59:44,079
robust right and we and you know that

1472
00:59:42,068 --> 00:59:47,889
would also include like testing it right

1473
00:59:44,079 --> 00:59:49,419
on a bunch of people's machines so that

1474
00:59:47,889 --> 00:59:56,078
we could have a better idea that it was

1475
00:59:49,418 --> 00:59:57,548
actually you know more usable will you

1476
00:59:56,079 --> 00:59:59,499
be writing your own pre rasterizer from

1477
00:59:57,548 --> 01:00:00,909
scratch or using a third-party tool we

1478
00:59:59,498 --> 01:00:04,058
will actually be able to do this

1479
01:00:00,909 --> 01:00:09,219
entirely with Windows so that's pretty

1480
01:00:04,059 --> 01:00:12,999
easy in which episode will you implement

1481
01:00:09,219 --> 01:00:15,548
unicode skin tone emoji modifiers well

1482
01:00:12,998 --> 01:00:18,629
obviously that's the most important

1483
01:00:15,548 --> 01:00:18,630
thing to do

1484
01:00:19,588 --> 01:00:25,798
I mean if we don't have the ability to

1485
01:00:23,429 --> 01:00:28,798
have every possible skin color in our in

1486
01:00:25,798 --> 01:00:31,978
our emoji then you know can we really

1487
01:00:28,798 --> 01:00:34,498
call it a unified world and the answer

1488
01:00:31,978 --> 01:00:39,768
is also you know and so in order to

1489
01:00:34,498 --> 01:00:42,929
preach you know the proper amount of of

1490
01:00:39,768 --> 01:00:45,058
sort of unified world global happiness

1491
01:00:42,929 --> 01:00:47,399
we should obviously have all the skin

1492
01:00:45,059 --> 01:00:54,479
tones including ones that don't even

1493
01:00:47,400 --> 01:00:58,349
exist yet how much time do you spend

1494
01:00:54,478 --> 01:01:00,389
preparing for each dream none if you

1495
01:00:58,349 --> 01:01:02,420
were to have a lute history or storyline

1496
01:01:00,389 --> 01:01:05,879
history

1497
01:01:02,420 --> 01:01:08,548
you mentioned forty pixels if you wanted

1498
01:01:05,880 --> 01:01:11,579
to allow users to adjust this UI would

1499
01:01:08,548 --> 01:01:12,989
you still do pre rasterize at what point

1500
01:01:11,579 --> 01:01:18,180
would be the threshold for including a

1501
01:01:12,989 --> 01:01:20,548
proper non rasterized version I think

1502
01:01:18,179 --> 01:01:23,098
it's basically a judgment call like if

1503
01:01:20,548 --> 01:01:25,108
you want to do pre rasterized fonts you

1504
01:01:23,099 --> 01:01:27,890
just have to have some idea that you can

1505
01:01:25,108 --> 01:01:30,119
meaningfully cover the various usage

1506
01:01:27,889 --> 01:01:32,879
scenarios that you want to cover with

1507
01:01:30,119 --> 01:01:35,640
those pre rasterized fonts right and so

1508
01:01:32,880 --> 01:01:37,259
including a non rasterize version is

1509
01:01:35,639 --> 01:01:38,548
just some judgement call you make when

1510
01:01:37,259 --> 01:01:41,190
you're like in order to get the quality

1511
01:01:38,548 --> 01:01:44,998
that we want and the variety of sizes

1512
01:01:41,190 --> 01:01:50,670
that we want we need to switch to you

1513
01:01:44,998 --> 01:01:52,288
know a rasterized version knee below the

1514
01:01:50,670 --> 01:01:53,579
the or Larian method you use for the

1515
01:01:52,289 --> 01:01:55,890
particle systems move stuffs from high

1516
01:01:53,579 --> 01:01:58,229
density to low density cells could the

1517
01:01:55,889 --> 01:02:00,598
or Larian method be used the other way

1518
01:01:58,228 --> 01:02:02,159
eg to make something that has gravity

1519
01:02:00,599 --> 01:02:04,739
and pulls low density stuff towards

1520
01:02:02,159 --> 01:02:07,259
itself also I wonder if we're Larry and

1521
01:02:04,739 --> 01:02:08,999
simulation could be used for AI systems

1522
01:02:07,259 --> 01:02:12,778
maybe having different characters being

1523
01:02:08,998 --> 01:02:14,639
attracted to or repelled by crowds so

1524
01:02:12,778 --> 01:02:19,289
first I will say that the or Larian

1525
01:02:14,639 --> 01:02:22,618
method the term or Larian refers

1526
01:02:19,289 --> 01:02:24,989
strictly to like I was saying that

1527
01:02:22,619 --> 01:02:27,869
discretization on a fixed grid on a

1528
01:02:24,989 --> 01:02:30,269
regular grid whereas Lagrangian referred

1529
01:02:27,869 --> 01:02:32,289
to discretization into free-floating

1530
01:02:30,268 --> 01:02:36,409
points right

1531
01:02:32,289 --> 01:02:37,759
and and so the important thing to

1532
01:02:36,409 --> 01:02:39,049
remember there and we didn't go into it

1533
01:02:37,760 --> 01:02:40,520
in detail because we were just kind of

1534
01:02:39,050 --> 01:02:45,410
like I said that was a 2-day sort of

1535
01:02:40,519 --> 01:02:47,690
excursion into that stuff but the

1536
01:02:45,409 --> 01:02:49,699
important thing to remember is that

1537
01:02:47,690 --> 01:02:53,179
actually if you want to go further down

1538
01:02:49,699 --> 01:02:56,629
the simulation route boil Aryan is just

1539
01:02:53,179 --> 01:02:58,969
it's just about the discretization what

1540
01:02:56,630 --> 01:03:02,059
system of equations you choose to solve

1541
01:02:58,969 --> 01:03:05,689
on that system can be any physical

1542
01:03:02,059 --> 01:03:07,579
system right so we didn't get to that

1543
01:03:05,690 --> 01:03:09,889
stage because we didn't you know we

1544
01:03:07,579 --> 01:03:12,019
didn't spend two weeks doing real Aryan

1545
01:03:09,889 --> 01:03:14,868
methods or whatever but actually what

1546
01:03:12,019 --> 01:03:16,730
you do is not the hack that I did on the

1547
01:03:14,869 --> 01:03:18,140
stream where I just like picked some

1548
01:03:16,730 --> 01:03:20,210
arbitrary numbers and shoved them in

1549
01:03:18,139 --> 01:03:23,179
there right what you actually do is

1550
01:03:20,210 --> 01:03:25,190
write a set of physics equations that

1551
01:03:23,179 --> 01:03:27,049
are designed to govern the system that

1552
01:03:25,190 --> 01:03:29,510
you are trying to create then you

1553
01:03:27,050 --> 01:03:32,240
actually discretize those equations onto

1554
01:03:29,510 --> 01:03:33,980
the grid and you write a solver that

1555
01:03:32,239 --> 01:03:35,989
actually does a solving step all in the

1556
01:03:33,980 --> 01:03:37,099
grid which we never got to because

1557
01:03:35,989 --> 01:03:38,598
there's a bunch of stuff you can do is

1558
01:03:37,099 --> 01:03:39,830
it like I like hack or Larry I'm like

1559
01:03:38,599 --> 01:03:41,390
what I did where you don't have to do

1560
01:03:39,829 --> 01:03:43,789
all that stuff and you can still get you

1561
01:03:41,389 --> 01:03:45,529
results but the real method the full

1562
01:03:43,789 --> 01:03:46,940
method is actually much more powerful so

1563
01:03:45,530 --> 01:03:49,010
we can do stuff like simulating

1564
01:03:46,940 --> 01:03:50,838
gelatinous liquids that go here together

1565
01:03:49,010 --> 01:03:53,450
and do all and have surface tension you

1566
01:03:50,838 --> 01:03:57,469
know you could do real fluid dynamics on

1567
01:03:53,449 --> 01:04:03,588
an oil Arian grid just fine right and so

1568
01:03:57,469 --> 01:04:05,509
can you do gravity absolutely you could

1569
01:04:03,588 --> 01:04:07,159
do anything you want just the degree to

1570
01:04:05,510 --> 01:04:09,230
which it's appropriate to pet and how

1571
01:04:07,159 --> 01:04:11,239
how fine the grid has to be to capture

1572
01:04:09,230 --> 01:04:13,460
what you want all that stuff is kind of

1573
01:04:11,239 --> 01:04:15,500
like part of continuum dynamics if

1574
01:04:13,460 --> 01:04:19,280
you're interested in this reading about

1575
01:04:15,500 --> 01:04:23,980
this more continuum dynamics is is what

1576
01:04:19,280 --> 01:04:27,410
that was what I was talking about and

1577
01:04:23,980 --> 01:04:30,710
you know you could

1578
01:04:27,409 --> 01:04:32,960
oh is this a bit oh this is oh it's

1579
01:04:30,710 --> 01:04:34,670
Michael Kass yeah skip that I thought it

1580
01:04:32,960 --> 01:04:39,588
was gonna be Berra for somebody and I'd

1581
01:04:34,670 --> 01:04:41,269
say take a look but you know if you look

1582
01:04:39,588 --> 01:04:42,440
at continuum dynamics methods it's a

1583
01:04:41,269 --> 01:04:45,440
gigantic field

1584
01:04:42,440 --> 01:04:46,579
I don't know if there's good

1585
01:04:45,440 --> 01:04:54,500
would there be there's probably a

1586
01:04:46,579 --> 01:04:57,829
SIGGRAPH course notes like on it which

1587
01:04:54,500 --> 01:05:00,500
which might be good maybe not I don't

1588
01:04:57,829 --> 01:05:01,699
know I suppose the thing on the forums

1589
01:05:00,500 --> 01:05:03,559
up I could try to find some good

1590
01:05:01,699 --> 01:05:05,449
references it I you know I I think

1591
01:05:03,559 --> 01:05:07,489
pseudonym 73 might have already posted

1592
01:05:05,449 --> 01:05:09,379
some good ones but they're it's a whole

1593
01:05:07,489 --> 01:05:11,719
field and there's the ton of stuff in

1594
01:05:09,380 --> 01:05:13,099
there it's it's I mean there's you could

1595
01:05:11,719 --> 01:05:14,599
spend your whole life and people do

1596
01:05:13,099 --> 01:05:17,750
doing nothing but that kind of

1597
01:05:14,599 --> 01:05:19,369
stimulation work so it's very rich and

1598
01:05:17,750 --> 01:05:20,630
anything that you want to do you can do

1599
01:05:19,369 --> 01:05:27,139
it's just a question of how much it

1600
01:05:20,630 --> 01:05:29,090
costs to do it right cast of five isn't

1601
01:05:27,139 --> 01:05:30,769
abusive text in a game the bad game

1602
01:05:29,090 --> 01:05:34,280
design idea well I'm not a game designer

1603
01:05:30,769 --> 01:05:35,989
so I don't really I can't really answer

1604
01:05:34,280 --> 01:05:38,150
that but what I would say is I suspect

1605
01:05:35,989 --> 01:05:42,019
that like everything else the amount of

1606
01:05:38,150 --> 01:05:43,940
text in a game design is dependent on

1607
01:05:42,019 --> 01:05:45,889
whether that design is about text or not

1608
01:05:43,940 --> 01:05:47,450
right if your game is not about reading

1609
01:05:45,889 --> 01:05:48,829
things then yeah it's probably a bad

1610
01:05:47,449 --> 01:05:57,349
game design but if your game is about

1611
01:05:48,829 --> 01:05:59,239
reading things well will you use correct

1612
01:05:57,349 --> 01:06:01,670
typography terminology for the game or

1613
01:05:59,239 --> 01:06:04,789
will you be carefree about it probably

1614
01:06:01,670 --> 01:06:07,610
carefree typography terminology there's

1615
01:06:04,789 --> 01:06:10,099
not really a huge reason to be super

1616
01:06:07,610 --> 01:06:12,890
accurate about it I don't know that that

1617
01:06:10,099 --> 01:06:13,579
you're gain all that much from that you

1618
01:06:12,889 --> 01:06:14,690
know you could always go read a

1619
01:06:13,579 --> 01:06:18,159
typographer there's not that much

1620
01:06:14,690 --> 01:06:18,159
terminology actually in there

1621
01:06:21,500 --> 01:06:26,608
rob robbie by adding more and more

1622
01:06:23,909 --> 01:06:28,379
layers of complexity to the engine do

1623
01:06:26,608 --> 01:06:30,179
you start to measure and optimize those

1624
01:06:28,380 --> 01:06:32,519
parts just when the FPS is low enough or

1625
01:06:30,179 --> 01:06:35,399
when you you or when you usually start

1626
01:06:32,519 --> 01:06:37,289
with that position yeah so there's two

1627
01:06:35,400 --> 01:06:39,568
things the optimization is really not

1628
01:06:37,289 --> 01:06:41,849
the only one it's definitely a big one

1629
01:06:39,568 --> 01:06:43,380
in games so that's true but there's

1630
01:06:41,849 --> 01:06:44,430
really two reasons for the debug view

1631
01:06:43,380 --> 01:06:46,170
stuff

1632
01:06:44,429 --> 01:06:49,318
one is optimization but the other one is

1633
01:06:46,170 --> 01:06:50,579
bugs it would be really easy to should

1634
01:06:49,318 --> 01:06:51,989
have a game like handmade here with lots

1635
01:06:50,579 --> 01:06:55,798
of bugs in it that no one would ever

1636
01:06:51,989 --> 01:06:57,209
know about and you might say you don't

1637
01:06:55,798 --> 01:06:58,769
care but actually it leads to a worse

1638
01:06:57,210 --> 01:07:00,599
play experience and and those are kinds

1639
01:06:58,769 --> 01:07:02,009
of bugs you're like oh the AI decided to

1640
01:07:00,599 --> 01:07:03,630
do something stupid because we had a bug

1641
01:07:02,010 --> 01:07:05,809
in it and then like that monster isn't

1642
01:07:03,630 --> 01:07:08,309
as fun as it should have been right a

1643
01:07:05,809 --> 01:07:10,470
lot of stuff like that you will never

1644
01:07:08,309 --> 01:07:12,540
know because there's no way design unit

1645
01:07:10,469 --> 01:07:14,489
test for it there's no way to inspect

1646
01:07:12,539 --> 01:07:18,210
the code and figure it out ahead of time

1647
01:07:14,489 --> 01:07:20,568
it's just it's too complex and so the

1648
01:07:18,210 --> 01:07:23,880
way that you need to tackle those is by

1649
01:07:20,568 --> 01:07:25,798
having visualization that allows you to

1650
01:07:23,880 --> 01:07:28,559
see what the code is doing in an

1651
01:07:25,798 --> 01:07:30,449
intuitive way on the screen all the time

1652
01:07:28,559 --> 01:07:32,819
such you can always be aware of what's

1653
01:07:30,449 --> 01:07:36,058
happening and notice when problems are

1654
01:07:32,818 --> 01:07:41,670
occurring and I would suspect that even

1655
01:07:36,059 --> 01:07:44,069
right now there are bugs in our in our

1656
01:07:41,670 --> 01:07:46,470
code that we just don't know about that

1657
01:07:44,068 --> 01:07:49,619
when we implement more Vista we will

1658
01:07:46,469 --> 01:07:53,789
just see like ah there was an obvious

1659
01:07:49,619 --> 01:07:55,470
bug like we just saw it right and it

1660
01:07:53,789 --> 01:07:56,759
won't be as many right now because like

1661
01:07:55,469 --> 01:07:58,289
I said we haven't done sort of the

1662
01:07:56,760 --> 01:08:00,839
things that are more temporal like AI

1663
01:07:58,289 --> 01:08:01,769
and stuff that that work over time and

1664
01:08:00,838 --> 01:08:03,239
for to have that but like in our

1665
01:08:01,769 --> 01:08:04,980
threading there's probably like a bug in

1666
01:08:03,239 --> 01:08:07,818
our threading that when we visualize our

1667
01:08:04,980 --> 01:08:10,019
threads we'll just be like oh yeah right

1668
01:08:07,818 --> 01:08:11,789
you know so there's there's probably

1669
01:08:10,019 --> 01:08:13,710
just bugs in there and there's a lot of

1670
01:08:11,789 --> 01:08:15,509
bugs that went because games are things

1671
01:08:13,710 --> 01:08:17,130
that happen over time there's usually a

1672
01:08:15,510 --> 01:08:21,119
lot of bugs that simply cannot be tested

1673
01:08:17,130 --> 01:08:23,069
away and and that is why visualization

1674
01:08:21,119 --> 01:08:24,409
is so important because it's it's one of

1675
01:08:23,069 --> 01:08:27,330
the ways of really improving the quality

1676
01:08:24,409 --> 01:08:28,829
of the game and so you know it's it's

1677
01:08:27,329 --> 01:08:31,439
almost visualizing it's almost less

1678
01:08:28,829 --> 01:08:35,809
about optimization and and almost more

1679
01:08:31,439 --> 01:08:35,809
about about robustness real

1680
01:08:43,819 --> 01:08:47,548
what do you think is the hardest

1681
01:08:45,689 --> 01:08:57,568
challenge for you in programming these

1682
01:08:47,548 --> 01:09:01,618
days really it's the I mean it's it's

1683
01:08:57,569 --> 01:09:04,440
the poor quality stuff honestly you know

1684
01:09:01,618 --> 01:09:06,210
between between how bad Windows has

1685
01:09:04,439 --> 01:09:09,899
gotten and how bad developer Studios

1686
01:09:06,210 --> 01:09:12,779
gotten and like you know the fact that

1687
01:09:09,899 --> 01:09:15,000
Emacs is so slow and like it's just all

1688
01:09:12,779 --> 01:09:16,589
the tools are garbage that's that that's

1689
01:09:15,000 --> 01:09:18,118
the biggest challenge for me because

1690
01:09:16,588 --> 01:09:20,729
it's like I don't know you know I could

1691
01:09:18,118 --> 01:09:22,710
go try to rewrite all those and some

1692
01:09:20,729 --> 01:09:25,468
degree like I am starting to try and do

1693
01:09:22,710 --> 01:09:27,658
some rewrite some major portions of what

1694
01:09:25,469 --> 01:09:29,489
we use at Mali but you know it's a bit

1695
01:09:27,658 --> 01:09:32,578
of a struggle and it's always everyday

1696
01:09:29,488 --> 01:09:34,828
it sucks nowadays because every day when

1697
01:09:32,578 --> 01:09:36,868
you go in and do programming you always

1698
01:09:34,828 --> 01:09:39,689
just feel like you're like so alone

1699
01:09:36,868 --> 01:09:41,130
right because you're like you know that

1700
01:09:39,689 --> 01:09:42,719
nobody who works on visual studio at any

1701
01:09:41,130 --> 01:09:44,130
idea what they were doing and like you

1702
01:09:42,719 --> 01:09:45,270
know that nobody who like ship the

1703
01:09:44,130 --> 01:09:46,679
versions wouldn't attend any idea what

1704
01:09:45,270 --> 01:09:48,750
they're doing right you're like they had

1705
01:09:46,679 --> 01:09:50,250
they didn't care about me they weren't

1706
01:09:48,750 --> 01:09:51,149
trying to make my experience better like

1707
01:09:50,250 --> 01:09:53,399
they were trying to figure out to put

1708
01:09:51,149 --> 01:09:55,019
ads in it or how to make it good for you

1709
01:09:53,399 --> 01:09:59,368
know a Java programmer at IBM or

1710
01:09:55,020 --> 01:10:03,929
whatever right and and it's really it's

1711
01:09:59,368 --> 01:10:05,578
really frustrating and so you know John

1712
01:10:03,929 --> 01:10:08,099
blow I guess who I don't know if he's

1713
01:10:05,578 --> 01:10:11,519
still here on the stream but he and I

1714
01:10:08,099 --> 01:10:13,139
talked about this a long time ago and I

1715
01:10:11,520 --> 01:10:15,750
think I was actually I tapped out

1716
01:10:13,139 --> 01:10:17,159
earlier than he did I sent him a a long

1717
01:10:15,750 --> 01:10:18,359
time ago where I was like I think I got

1718
01:10:17,158 --> 01:10:19,738
to start working on an operating system

1719
01:10:18,359 --> 01:10:21,868
or something because I'm just I've had

1720
01:10:19,738 --> 01:10:22,828
it like I can't take it anymore and he's

1721
01:10:21,868 --> 01:10:24,420
like I don't know if that's such a

1722
01:10:22,828 --> 01:10:25,738
productive thing to do you know and like

1723
01:10:24,420 --> 01:10:28,230
there's so many things we could do you

1724
01:10:25,738 --> 01:10:31,948
know is that really a good idea but

1725
01:10:28,229 --> 01:10:34,979
about a year later he tapped out to and

1726
01:10:31,948 --> 01:10:36,719
he was just like yeah probably like it's

1727
01:10:34,979 --> 01:10:38,549
all gone to crap and we got to start

1728
01:10:36,719 --> 01:10:41,639
doing something about it right and

1729
01:10:38,550 --> 01:10:43,199
you'll notice he's actively doing

1730
01:10:41,639 --> 01:10:44,010
something about it right now like he's

1731
01:10:43,198 --> 01:10:45,419
trying to make a new programming

1732
01:10:44,010 --> 01:10:47,639
language is he's like we gotta fix this

1733
01:10:45,420 --> 01:10:49,739
stuff like it's obvious that nobody else

1734
01:10:47,639 --> 01:10:53,368
is gonna so like somebody somebody who

1735
01:10:49,738 --> 01:10:55,198
actually cares has to go do it right and

1736
01:10:53,368 --> 01:10:58,079
personally I think that's really awesome

1737
01:10:55,198 --> 01:11:00,779
because you know it gives me a certain

1738
01:10:58,079 --> 01:11:02,880
measure of hope every day to know that

1739
01:11:00,779 --> 01:11:04,710
someone like John is working on a new

1740
01:11:02,880 --> 01:11:07,890
language because it means there's a

1741
01:11:04,710 --> 01:11:09,869
chance that when I sit down to program

1742
01:11:07,890 --> 01:11:12,210
in five years it won't be about how

1743
01:11:09,869 --> 01:11:13,170
awful C++ is and how nobody who works on

1744
01:11:12,210 --> 01:11:14,579
that language has any idea how to

1745
01:11:13,170 --> 01:11:16,409
program which is how I feel

1746
01:11:14,579 --> 01:11:18,600
nowadays right I know it sounds harsh

1747
01:11:16,409 --> 01:11:20,130
but that's how I feel I literally feel

1748
01:11:18,600 --> 01:11:21,690
like the tools I use all day we're

1749
01:11:20,130 --> 01:11:24,090
written by people have no idea how to

1750
01:11:21,689 --> 01:11:26,428
program like they're so far behind the

1751
01:11:24,090 --> 01:11:28,199
curve on like how to program and it's

1752
01:11:26,429 --> 01:11:31,380
like the operating system the text

1753
01:11:28,198 --> 01:11:36,210
editor the compiler the debugger they

1754
01:11:31,380 --> 01:11:37,739
all just feel awful you know and and

1755
01:11:36,210 --> 01:11:40,140
they didn't used to feel that way they

1756
01:11:37,738 --> 01:11:41,669
used to feel pretty cutting edge when I

1757
01:11:40,140 --> 01:11:43,560
used to program on the Amiga I was in

1758
01:11:41,670 --> 01:11:45,210
awe of how good the text editor was and

1759
01:11:43,560 --> 01:11:47,429
like it was crazy to me that they were

1760
01:11:45,210 --> 01:11:51,659
able to even do that stuff in like you

1761
01:11:47,429 --> 01:11:54,270
know 20 56k right and nowadays you can't

1762
01:11:51,659 --> 01:11:57,899
even get a text editor to update in real

1763
01:11:54,270 --> 01:12:00,030
time you know on a freaking Jeep you

1764
01:11:57,899 --> 01:12:02,159
know dual SLI Titan or something right

1765
01:12:00,029 --> 01:12:03,210
forget it because it's just so slow it

1766
01:12:02,159 --> 01:12:04,738
doesn't even have to do with the

1767
01:12:03,210 --> 01:12:06,179
graphics they just they're running

1768
01:12:04,738 --> 01:12:08,309
c-sharp in the background or doing it

1769
01:12:06,179 --> 01:12:09,869
right and so that's a real challenge

1770
01:12:08,310 --> 01:12:12,510
like it really does make me miserable

1771
01:12:09,869 --> 01:12:15,510
like I really upsets me at like some

1772
01:12:12,510 --> 01:12:17,670
core level and so a lot of my hope for

1773
01:12:15,510 --> 01:12:19,250
the future is just about like maybe if

1774
01:12:17,670 --> 01:12:21,329
enough of us are this miserable about it

1775
01:12:19,250 --> 01:12:23,760
someday we'll change and to a large

1776
01:12:21,329 --> 01:12:26,130
extent that was a huge motivating factor

1777
01:12:23,760 --> 01:12:29,369
behind handmade hero was that I felt

1778
01:12:26,130 --> 01:12:31,739
like if I just kind of did some

1779
01:12:29,369 --> 01:12:33,149
programming that maybe was like here's

1780
01:12:31,738 --> 01:12:34,948
how I like to approach programming

1781
01:12:33,149 --> 01:12:36,089
problems and I and I would like more

1782
01:12:34,948 --> 01:12:38,339
people to start thinking about

1783
01:12:36,090 --> 01:12:40,770
programming down at a lower level and

1784
01:12:38,340 --> 01:12:42,779
and caring about like more holistically

1785
01:12:40,770 --> 01:12:47,190
what the code is doing that that might

1786
01:12:42,779 --> 01:12:49,500
inspire people to do projects that would

1787
01:12:47,189 --> 01:12:51,569
start to you know change that that

1788
01:12:49,500 --> 01:12:52,738
culture right and turn it around to make

1789
01:12:51,569 --> 01:12:55,829
it more like it used to be when the

1790
01:12:52,738 --> 01:12:57,359
tools I used were good and honestly like

1791
01:12:55,829 --> 01:12:59,130
I've been really encouraged by what's

1792
01:12:57,359 --> 01:13:00,988
happened because there actually is more

1793
01:12:59,130 --> 01:13:02,730
than one person right now who

1794
01:13:00,988 --> 01:13:04,948
specifically after watching handmade

1795
01:13:02,729 --> 01:13:08,099
hero went and started like a text editor

1796
01:13:04,948 --> 01:13:09,029
or something right and like someone

1797
01:13:08,100 --> 01:13:12,210
started to paint Pro

1798
01:13:09,029 --> 01:13:14,519
recently too right and like that's just

1799
01:13:12,210 --> 01:13:16,500
so encouraging because I I feel like

1800
01:13:14,520 --> 01:13:18,630
it's not that hard to actually replace

1801
01:13:16,500 --> 01:13:21,479
some of these things yes it's a year or

1802
01:13:18,630 --> 01:13:23,069
two of work but it's not 20 years of

1803
01:13:21,479 --> 01:13:26,489
work it just takes some people to

1804
01:13:23,069 --> 01:13:29,699
actually care about the quality of the

1805
01:13:26,489 --> 01:13:34,590
end product that's all it really takes

1806
01:13:29,699 --> 01:13:36,659
right and so in some sense like it

1807
01:13:34,590 --> 01:13:39,090
really it really has been pretty awesome

1808
01:13:36,659 --> 01:13:41,309
to see that start to happen because if I

1809
01:13:39,090 --> 01:13:44,489
can have any small effect on encouraging

1810
01:13:41,310 --> 01:13:46,020
people to do that it it would make a

1811
01:13:44,489 --> 01:13:48,899
non-trivial difference even just

1812
01:13:46,020 --> 01:13:52,110
selfishly in my life to some day boot up

1813
01:13:48,899 --> 01:13:54,529
an editor by someone and it's like this

1814
01:13:52,109 --> 01:14:00,000
editor actually works right like that

1815
01:13:54,529 --> 01:14:01,139
will be so great and so you know I feel

1816
01:14:00,000 --> 01:14:02,760
like there's a chance that's gonna turn

1817
01:14:01,140 --> 01:14:04,980
around and and I didn't feel that way

1818
01:14:02,760 --> 01:14:07,970
probably like a year ago so in some

1819
01:14:04,979 --> 01:14:07,969
sense like yeah

1820
01:14:17,520 --> 01:14:21,460
jomblo says the worst part is you say

1821
01:14:19,989 --> 01:14:23,139
stuff about these tools being terrible

1822
01:14:21,460 --> 01:14:24,909
and nobody seems to understand they are

1823
01:14:23,140 --> 01:14:28,510
terrible everyone is like what do you

1824
01:14:24,909 --> 01:14:32,289
mean yeah and and I mean it's true right

1825
01:14:28,510 --> 01:14:34,570
it's hard to articulate sometimes it's

1826
01:14:32,289 --> 01:14:36,430
hard to articulate it because if you

1827
01:14:34,569 --> 01:14:38,170
haven't been there if you haven't used a

1828
01:14:36,430 --> 01:14:41,619
really fast text editor then you don't

1829
01:14:38,170 --> 01:14:45,699
know that yours is slow right it's like

1830
01:14:41,619 --> 01:14:47,470
if you've only ever eaten you know you

1831
01:14:45,699 --> 01:14:50,409
know if you've eaten the fillet of fish

1832
01:14:47,470 --> 01:14:52,900
sandwich McDonald's right it's pretty

1833
01:14:50,409 --> 01:14:55,510
hard to tell someone that like no really

1834
01:14:52,899 --> 01:14:56,679
like sushi is pretty amazing like it

1835
01:14:55,510 --> 01:15:01,600
there's some really great stuff out

1836
01:14:56,680 --> 01:15:05,079
there right and you know that's just

1837
01:15:01,600 --> 01:15:06,460
that's just how it is you can't it's

1838
01:15:05,079 --> 01:15:08,409
it's hard to convince people somethings

1839
01:15:06,460 --> 01:15:09,699
terrible until you put something in

1840
01:15:08,409 --> 01:15:11,439
front of them that's ten times better

1841
01:15:09,699 --> 01:15:14,619
and they're like oh right well there you

1842
01:15:11,439 --> 01:15:16,750
go it's like probably no one thought

1843
01:15:14,619 --> 01:15:18,489
Windows seee phones were terrible until

1844
01:15:16,750 --> 01:15:20,229
someone handed them an iPhone and they

1845
01:15:18,489 --> 01:15:23,439
swiped on it we're like oh my god it's

1846
01:15:20,229 --> 01:15:26,379
magic right but that's just because you

1847
01:15:23,439 --> 01:15:28,329
know if you haven't experienced you

1848
01:15:26,380 --> 01:15:29,800
don't know I mean right now the things

1849
01:15:28,329 --> 01:15:31,720
I'm complaining about and the world I'm

1850
01:15:29,800 --> 01:15:35,079
envisioning that could have them fixed

1851
01:15:31,720 --> 01:15:36,369
is also very limited like some in 50

1852
01:15:35,079 --> 01:15:38,050
years in the future maybe we'll all be

1853
01:15:36,369 --> 01:15:39,609
living in some weird VR reality where

1854
01:15:38,050 --> 01:15:42,730
like we just think thoughts and the code

1855
01:15:39,609 --> 01:15:44,769
materializes right so I even don't

1856
01:15:42,729 --> 01:15:47,169
really know how bad the tools that I

1857
01:15:44,770 --> 01:15:52,240
would think are good actually are bad

1858
01:15:47,170 --> 01:15:53,289
compared to right you know I so I mean I

1859
01:15:52,239 --> 01:15:54,519
think that's why we have to start

1860
01:15:53,289 --> 01:15:56,769
building some good tools to show people

1861
01:15:54,520 --> 01:15:59,680
like hey by the way visual studio is a

1862
01:15:56,770 --> 01:16:00,910
piece of junk like here's actually what

1863
01:15:59,680 --> 01:16:05,250
it would be like if your debugger was

1864
01:16:00,909 --> 01:16:05,250
good you know

1865
01:16:12,020 --> 01:16:16,530
if you considered signed distance fields

1866
01:16:14,609 --> 01:16:19,380
for text rendering you can't render text

1867
01:16:16,529 --> 01:16:22,019
with signed distance fields unless you

1868
01:16:19,380 --> 01:16:24,779
use you actually need a more complicated

1869
01:16:22,020 --> 01:16:27,900
encoding so the reason is because signed

1870
01:16:24,779 --> 01:16:30,449
distance fields are always rounded right

1871
01:16:27,899 --> 01:16:33,239
and so you can't do things like hard

1872
01:16:30,449 --> 01:16:35,069
edges so in order to use signed distance

1873
01:16:33,239 --> 01:16:36,389
fields for text rendering unless you all

1874
01:16:35,069 --> 01:16:41,059
want all of your fonts to look like

1875
01:16:36,390 --> 01:16:44,039
blobs you have to you have to be

1876
01:16:41,060 --> 01:16:46,050
multiple signed distance field per

1877
01:16:44,039 --> 01:16:47,699
region of your font so you need

1878
01:16:46,050 --> 01:16:49,320
basically like a hybrid encoding that's

1879
01:16:47,699 --> 01:16:51,119
like multiple distance fields per region

1880
01:16:49,319 --> 01:16:54,000
like a Voronoi region with distance

1881
01:16:51,119 --> 01:16:55,920
fields which is pretty expensive it's

1882
01:16:54,000 --> 01:16:58,609
pretty spensive so it's not a it's not a

1883
01:16:55,920 --> 01:17:00,989
great choice unless you really know that

1884
01:16:58,609 --> 01:17:02,369
you need it because it is it is very

1885
01:17:00,989 --> 01:17:06,439
expensive and you have to kind of weigh

1886
01:17:02,369 --> 01:17:06,439
it against other options

1887
01:17:21,119 --> 01:17:24,430
don't you think you're not being

1888
01:17:23,050 --> 01:17:26,050
completely fair to the other crowd who

1889
01:17:24,430 --> 01:17:27,730
are not going to lower level for example

1890
01:17:26,050 --> 01:17:29,619
I love and care about lower level stuff

1891
01:17:27,729 --> 01:17:31,089
but to pay my bills I have to be able to

1892
01:17:29,619 --> 01:17:32,349
output an application within tenth of

1893
01:17:31,090 --> 01:17:33,340
the time it would take me if I do it

1894
01:17:32,350 --> 01:17:35,880
everything at lower level I have no

1895
01:17:33,340 --> 01:17:37,690
choice but rely on W F and C sharp well

1896
01:17:35,880 --> 01:17:39,819
you know I don't really think it's a

1897
01:17:37,689 --> 01:17:41,649
question of fairness is the problem it's

1898
01:17:39,819 --> 01:17:42,909
a question of quality like basically

1899
01:17:41,649 --> 01:17:45,189
what I'm saying is I am not satisfied

1900
01:17:42,909 --> 01:17:48,159
with the quality of tools I have now I

1901
01:17:45,189 --> 01:17:50,319
don't really care why that was that way

1902
01:17:48,159 --> 01:17:51,550
right like like if someone couldn't do

1903
01:17:50,319 --> 01:17:53,049
it because they weren't given enough

1904
01:17:51,550 --> 01:17:56,199
time to do it that's a perfectly valid

1905
01:17:53,050 --> 01:17:57,610
excuse but it doesn't help me right no I

1906
01:17:56,199 --> 01:18:00,099
mean if there was an excuse for why

1907
01:17:57,609 --> 01:18:03,000
Visual Studio sucks doesn't make Visual

1908
01:18:00,100 --> 01:18:07,210
Studio not suck right that's the problem

1909
01:18:03,000 --> 01:18:09,340
and so since I know it is possible to do

1910
01:18:07,210 --> 01:18:10,840
a better visual studio what we need is

1911
01:18:09,340 --> 01:18:13,600
people to actually say I'm gonna

1912
01:18:10,840 --> 01:18:16,840
dedicate the time to actually making the

1913
01:18:13,600 --> 01:18:17,980
good version of this thing right and so

1914
01:18:16,840 --> 01:18:20,380
I really don't think it's a question of

1915
01:18:17,979 --> 01:18:22,449
being fair or unfair right people should

1916
01:18:20,380 --> 01:18:24,880
do whatever they have to do to earn a

1917
01:18:22,449 --> 01:18:27,909
living I guess right you know I mean as

1918
01:18:24,880 --> 01:18:29,350
long as it's ethical hopefully so that's

1919
01:18:27,909 --> 01:18:31,750
not really the thing it's not like

1920
01:18:29,350 --> 01:18:34,180
saying that you know someone's a bad

1921
01:18:31,750 --> 01:18:36,579
person but it is saying that I'm not

1922
01:18:34,180 --> 01:18:38,590
getting what I need from this industry

1923
01:18:36,579 --> 01:18:42,670
right this industry is doing a poor job

1924
01:18:38,590 --> 01:18:46,060
actually delivering what I need to to

1925
01:18:42,670 --> 01:18:47,649
work with right and so it doesn't really

1926
01:18:46,060 --> 01:18:51,970
matter if it's fair or not something

1927
01:18:47,649 --> 01:18:53,259
needs to be improved and hopefully there

1928
01:18:51,970 --> 01:18:54,610
are some people who could figure out how

1929
01:18:53,260 --> 01:18:55,960
to make a business out of that and start

1930
01:18:54,609 --> 01:18:58,500
shipping development tools that actually

1931
01:18:55,960 --> 01:18:58,500
were good

1932
01:19:05,920 --> 01:19:10,250
it's not enough to see a good tool once

1933
01:19:08,600 --> 01:19:12,050
to understand that modern tools are bad

1934
01:19:10,250 --> 01:19:13,698
I feel like you also need to be a pretty

1935
01:19:12,050 --> 01:19:15,650
good programmer which is far from where

1936
01:19:13,698 --> 01:19:17,809
most of us are now if you are mediocre

1937
01:19:15,649 --> 01:19:24,469
programmer you won't feel it do you

1938
01:19:17,810 --> 01:19:26,810
agree I don't think so

1939
01:19:24,469 --> 01:19:28,158
I think maybe for modest improvements to

1940
01:19:26,810 --> 01:19:30,199
something like Visual Studio maybe

1941
01:19:28,158 --> 01:19:31,908
that's true like fixing how long it

1942
01:19:30,198 --> 01:19:34,428
takes to step in video studio to make it

1943
01:19:31,908 --> 01:19:35,809
instant maybe other people wouldn't feel

1944
01:19:34,429 --> 01:19:37,310
that as much because they don't know the

1945
01:19:35,810 --> 01:19:38,949
value of being able to let quickly to

1946
01:19:37,310 --> 01:19:41,179
bug your code or something I don't know

1947
01:19:38,948 --> 01:19:42,678
but like let's say you had a debugger

1948
01:19:41,179 --> 01:19:44,060
that actually visualized all your stuff

1949
01:19:42,679 --> 01:19:46,250
for you really well where you were just

1950
01:19:44,060 --> 01:19:47,810
like oh yeah I set a breakpoint there

1951
01:19:46,250 --> 01:19:49,399
show me all the structures and

1952
01:19:47,810 --> 01:19:50,630
completely you know instantly diagrams

1953
01:19:49,399 --> 01:19:51,829
them in points and like here's the where

1954
01:19:50,630 --> 01:19:53,390
you are and here's where these pointers

1955
01:19:51,829 --> 01:19:55,460
pointed to and I'll buy right like

1956
01:19:53,390 --> 01:19:56,780
imagine DVD written by someone who knew

1957
01:19:55,460 --> 01:19:58,579
what they were doing so like it actually

1958
01:19:56,779 --> 01:19:59,658
like visualized it really cleanly and as

1959
01:19:58,579 --> 01:20:00,679
you stepped it like updated

1960
01:19:59,658 --> 01:20:02,719
automatically and showed you all the

1961
01:20:00,679 --> 01:20:04,609
stuff and like oh you have vector three

1962
01:20:02,719 --> 01:20:07,579
so it plotted them in 3d and you could

1963
01:20:04,609 --> 01:20:09,529
spin it around like anybody I don't care

1964
01:20:07,579 --> 01:20:11,689
who they were or how novice they were

1965
01:20:09,529 --> 01:20:13,849
when they saw that they'd be like why am

1966
01:20:11,689 --> 01:20:15,919
I using this complete piece of garbage

1967
01:20:13,850 --> 01:20:18,280
like why don't I use that thing it'd be

1968
01:20:15,920 --> 01:20:21,890
so much easier to debug my code right

1969
01:20:18,279 --> 01:20:23,840
anyone could see that so I think if we

1970
01:20:21,890 --> 01:20:25,850
actually built tools that did what we

1971
01:20:23,840 --> 01:20:32,630
are capable of making them do today

1972
01:20:25,850 --> 01:20:35,210
right if you spent if somebody spent the

1973
01:20:32,630 --> 01:20:37,969
same amount of time making a good

1974
01:20:35,210 --> 01:20:40,789
debugger as Google spends trying to

1975
01:20:37,969 --> 01:20:43,550
target their ads it would be so

1976
01:20:40,789 --> 01:20:45,319
breathtakingly further along right then

1977
01:20:43,550 --> 01:20:47,690
what we have today with something like

1978
01:20:45,319 --> 01:20:50,319
Visual Studio that I don't think anybody

1979
01:20:47,689 --> 01:20:54,289
would not immediately see the difference

1980
01:20:50,319 --> 01:20:57,939
instantly right but that's just not

1981
01:20:54,289 --> 01:20:57,939
where we focus our time right

1982
01:21:08,059 --> 01:21:12,139
would you take a job in the Mafia if

1983
01:21:10,429 --> 01:21:15,969
they gave you a perfect version of Emax

1984
01:21:12,139 --> 01:21:19,400
and visual studio well I am Italian

1985
01:21:15,969 --> 01:21:22,130
which mafia were you referring to if

1986
01:21:19,399 --> 01:21:24,170
you're talking about Sicilian they might

1987
01:21:22,130 --> 01:21:33,380
I mean they do except non Sicilians I

1988
01:21:24,170 --> 01:21:39,828
suppose to a certain extent all right I

1989
01:21:33,380 --> 01:21:45,699
think we have ended the stream so I am

1990
01:21:39,828 --> 01:21:45,698
going to close it down here we go

1991
01:21:50,359 --> 01:21:55,009
all right thank you everyone for joining

1992
01:21:53,659 --> 01:21:56,180
me for another episode of handmade hero

1993
01:21:55,010 --> 01:21:59,119
it's been a pleasure coding with you as

1994
01:21:56,180 --> 01:22:00,860
always if you want to follow along with

1995
01:21:59,119 --> 01:22:02,239
the series at home you can always

1996
01:22:00,859 --> 01:22:03,710
pre-order the game on handmade here at

1997
01:22:02,239 --> 01:22:05,710
organic comes with the source code so if

1998
01:22:03,710 --> 01:22:08,270
you want to play around with it and

1999
01:22:05,710 --> 01:22:09,289
you've learned by doing which is a very

2000
01:22:08,270 --> 01:22:11,630
good way to do it

2001
01:22:09,289 --> 01:22:13,789
you can go ahead and do that on this

2002
01:22:11,630 --> 01:22:15,140
website we also have a patreon page to

2003
01:22:13,789 --> 01:22:16,519
while support the video serious we also

2004
01:22:15,140 --> 01:22:18,500
have a forum site if you want to ask

2005
01:22:16,520 --> 01:22:20,630
questions or view anti depa soed guide

2006
01:22:18,500 --> 01:22:22,939
or see ports to Mac and Linux at the

2007
01:22:20,630 --> 01:22:24,230
community of done and finally we have a

2008
01:22:22,939 --> 01:22:25,429
tweet bot that tweets of schedule so if

2009
01:22:24,229 --> 01:22:27,019
you're trying to catch us live that's

2010
01:22:25,430 --> 01:22:29,810
the place to go it will tell you when we

2011
01:22:27,020 --> 01:22:32,360
will be live that's about it for today

2012
01:22:29,810 --> 01:22:35,720
tomorrow is an unusual time it is going

2013
01:22:32,359 --> 01:22:37,670
to be at 8 o'clock which and and

2014
01:22:35,720 --> 01:22:39,079
actually also I believe Jonathan Blow

2015
01:22:37,670 --> 01:22:42,409
will be streaming a language development

2016
01:22:39,079 --> 01:22:44,149
update earlier in the day so 6:30 I

2017
01:22:42,409 --> 01:22:45,199
think is the time for that so you want

2018
01:22:44,149 --> 01:22:49,670
it you'll want to check out a naysayer

2019
01:22:45,199 --> 01:22:51,289
88 at 6:30 for sure and and then after

2020
01:22:49,670 --> 01:22:54,710
that handmade hero will be streaming at

2021
01:22:51,289 --> 01:22:57,380
8 so it so it is a night packed with

2022
01:22:54,710 --> 01:22:59,960
programming streaming for your viewing

2023
01:22:57,380 --> 01:23:01,579
enjoyment ladies and gentlemen so hope

2024
01:22:59,960 --> 01:23:04,520
see you back here tomorrow for that 8

2025
01:23:01,579 --> 01:23:07,390
p.m. Pacific Daylight Time right here on

2026
01:23:04,520 --> 01:23:09,500
Twitch so until then have fun coding and

2027
01:23:07,390 --> 01:23:12,340
yeah I'll see you guys on the Internet

2028
01:23:09,500 --> 01:23:12,340
take it easy everyone

