1
00:00:01,909 --> 00:00:06,149
hello everyone and welcome to handmade

2
00:00:04,589 --> 00:00:09,150
Hero show recode a complete game live on

3
00:00:06,150 --> 00:00:10,169
stream we are going to continue with the

4
00:00:09,150 --> 00:00:15,839
lighting stuff we were working on

5
00:00:10,169 --> 00:00:17,670
yesterday we need to essentially do two

6
00:00:15,839 --> 00:00:18,719
things today one is we have to decide

7
00:00:17,670 --> 00:00:21,510
what we're going to be doing about

8
00:00:18,719 --> 00:00:24,149
targeting light sources and then we have

9
00:00:21,510 --> 00:00:26,039
to go ahead and implement something that

10
00:00:24,149 --> 00:00:30,178
allows us to target those light sources

11
00:00:26,039 --> 00:00:31,980
inside our actual ray casting code we

12
00:00:30,178 --> 00:00:34,589
sort of ended on a note yesterday

13
00:00:31,980 --> 00:00:36,480
whereas like well this came up I don't

14
00:00:34,590 --> 00:00:37,980
have a plan for it right now and it's

15
00:00:36,479 --> 00:00:40,648
gonna be fairly complicated so I want to

16
00:00:37,979 --> 00:00:45,049
wait until we have a full episode and

17
00:00:40,649 --> 00:00:49,950
now is that episode let me go ahead and

18
00:00:45,049 --> 00:00:53,819
there we go load up the code here if I

19
00:00:49,950 --> 00:00:55,859
go to handmade lighting dot CPP which is

20
00:00:53,820 --> 00:00:57,509
where this code lives we can take a look

21
00:00:55,859 --> 00:00:59,219
at the part that I'm talking about just

22
00:00:57,509 --> 00:01:03,089
to get you acquainted with it in the

23
00:00:59,219 --> 00:01:05,189
test casting code here what we want to

24
00:01:03,090 --> 00:01:07,590
do is figure out a solution to this

25
00:01:05,188 --> 00:01:09,419
problem right here so what we were

26
00:01:07,590 --> 00:01:11,100
previously doing in the test cast is we

27
00:01:09,420 --> 00:01:12,719
were saying well if we want to cast

28
00:01:11,099 --> 00:01:14,728
towards the light source rather than

29
00:01:12,719 --> 00:01:16,170
just casting completely randomly and I

30
00:01:14,728 --> 00:01:18,060
do think we want the ability to cast

31
00:01:16,170 --> 00:01:21,299
towards the light source stochastically

32
00:01:18,060 --> 00:01:23,879
in the actual caster itself sorry this

33
00:01:21,299 --> 00:01:26,070
is not academic this is something that

34
00:01:23,879 --> 00:01:29,280
we actually are going to need to do to

35
00:01:26,069 --> 00:01:32,129
get our convergence good you know to get

36
00:01:29,280 --> 00:01:33,390
our lighting to be less flickery we want

37
00:01:32,129 --> 00:01:35,459
the ability to specifically target

38
00:01:33,390 --> 00:01:37,290
nearby light sources and gather their

39
00:01:35,459 --> 00:01:39,449
values at higher rates than we would

40
00:01:37,290 --> 00:01:41,280
just randomly hitting them from picking

41
00:01:39,450 --> 00:01:42,659
just arbitrary directions so if you take

42
00:01:41,280 --> 00:01:44,849
a look at what's going on inside the

43
00:01:42,659 --> 00:01:46,740
probing what we want to be able to do

44
00:01:44,849 --> 00:01:49,408
here is say look for a particular

45
00:01:46,739 --> 00:01:52,589
casting location we want it to tell us

46
00:01:49,409 --> 00:01:56,490
with some degree of accuracy what the

47
00:01:52,590 --> 00:01:59,670
nearest light sources are and since

48
00:01:56,489 --> 00:02:02,879
we're a cast bundles at a time one thing

49
00:01:59,670 --> 00:02:05,368
we may want to do is Ray cast those as a

50
00:02:02,879 --> 00:02:06,989
bundle I don't know if that's what we

51
00:02:05,368 --> 00:02:08,939
want to do instead what we may want to

52
00:02:06,989 --> 00:02:11,310
do is just have the closest light source

53
00:02:08,939 --> 00:02:13,329
in each direction and then when we break

54
00:02:11,310 --> 00:02:15,219
our bundles into

55
00:02:13,330 --> 00:02:18,520
affections maybe we have six directional

56
00:02:15,219 --> 00:02:21,039
bundles for example for 24 total ray

57
00:02:18,520 --> 00:02:23,800
casts or something like that maybe we

58
00:02:21,039 --> 00:02:26,219
write over one of each of those with it

59
00:02:23,800 --> 00:02:30,790
so that the raycast have a more coherent

60
00:02:26,219 --> 00:02:32,830
traversal I don't really know and so I

61
00:02:30,789 --> 00:02:34,150
think that's you know honestly the

62
00:02:32,830 --> 00:02:36,430
bundles need to be coherent so I think

63
00:02:34,150 --> 00:02:38,830
that might be a more likely way we're

64
00:02:36,430 --> 00:02:41,110
gonna do that and so when you think

65
00:02:38,830 --> 00:02:45,010
about what's going on there we need some

66
00:02:41,110 --> 00:02:47,650
way of getting like that information we

67
00:02:45,009 --> 00:02:49,719
need something like that and so the

68
00:02:47,650 --> 00:02:52,450
problem is we just at the moment don't

69
00:02:49,719 --> 00:02:56,050
really have any way of knowing what that

70
00:02:52,449 --> 00:03:01,089
that light source would actually be and

71
00:02:56,050 --> 00:03:02,590
we don't really know we don't really

72
00:03:01,090 --> 00:03:04,780
have a plan for getting that information

73
00:03:02,590 --> 00:03:06,280
now what I think we probably are gonna

74
00:03:04,780 --> 00:03:07,449
have to do because I thought about it a

75
00:03:06,280 --> 00:03:10,750
little bit kind of in the back of my

76
00:03:07,449 --> 00:03:11,949
brain as you do after you you know code

77
00:03:10,750 --> 00:03:13,539
something and then you're like well I

78
00:03:11,949 --> 00:03:15,639
got to do this thing next sort of it's

79
00:03:13,539 --> 00:03:18,989
on the its you know it's often the in

80
00:03:15,639 --> 00:03:22,389
your peripheral thinking they're right

81
00:03:18,989 --> 00:03:25,539
what I would like to do is I'd like to

82
00:03:22,389 --> 00:03:27,939
say that we probably need a separate

83
00:03:25,539 --> 00:03:30,009
data structure for this so we probably

84
00:03:27,939 --> 00:03:31,780
want to put our occluders into one thing

85
00:03:30,009 --> 00:03:33,789
and we probably want to put our light

86
00:03:31,780 --> 00:03:35,830
sources into a separate thing now the

87
00:03:33,789 --> 00:03:37,389
light sources also go into the occluders

88
00:03:35,830 --> 00:03:40,590
because we need to like Ray cast against

89
00:03:37,389 --> 00:03:46,509
them but the directional lookup thing

90
00:03:40,590 --> 00:03:49,780
probably needs to be something that's

91
00:03:46,509 --> 00:03:52,689
purpose-built so what I think we want to

92
00:03:49,780 --> 00:03:55,539
do is something where we sort of have a

93
00:03:52,689 --> 00:03:57,909
data structure whose entire goal is just

94
00:03:55,539 --> 00:04:00,849
to figure out when you're casting from a

95
00:03:57,909 --> 00:04:02,590
particular location what are the

96
00:04:00,849 --> 00:04:04,930
directional casts that you want to do

97
00:04:02,590 --> 00:04:07,090
like how what are the light light

98
00:04:04,930 --> 00:04:10,000
sources in this case that you actually

99
00:04:07,090 --> 00:04:13,479
want to use and that's primarily what

100
00:04:10,000 --> 00:04:15,519
we're gonna be working with right and so

101
00:04:13,479 --> 00:04:17,319
the problem is we have to figure out

102
00:04:15,519 --> 00:04:19,899
some way to build that data structure

103
00:04:17,319 --> 00:04:21,339
and it's unclear like exactly what that

104
00:04:19,899 --> 00:04:23,409
data structure would look like and

105
00:04:21,339 --> 00:04:25,119
furthermore it's unclear how accurate we

106
00:04:23,410 --> 00:04:27,130
really need it to be or want it to be

107
00:04:25,120 --> 00:04:29,259
and so on

108
00:04:27,129 --> 00:04:31,060
and in our case the problem that we're

109
00:04:29,259 --> 00:04:33,129
gonna face is we need something that

110
00:04:31,060 --> 00:04:35,199
sort of splits directional lookups in

111
00:04:33,129 --> 00:04:36,579
some way so we can say all right for

112
00:04:35,199 --> 00:04:39,039
this location in space

113
00:04:36,579 --> 00:04:40,930
give me the closest light sources like

114
00:04:39,040 --> 00:04:43,810
up-down left-right

115
00:04:40,930 --> 00:04:47,050
you know north south east west that sort

116
00:04:43,810 --> 00:04:48,519
of thing and so that we can bundle it

117
00:04:47,050 --> 00:04:51,009
with the raycast that we're going to do

118
00:04:48,519 --> 00:04:52,899
and so in order to make that data

119
00:04:51,009 --> 00:04:55,029
structure we would need something that

120
00:04:52,899 --> 00:04:57,459
can sort of take the locations of the

121
00:04:55,029 --> 00:05:02,500
light sources themselves and break them

122
00:04:57,459 --> 00:05:05,349
down into sort of regions that where as

123
00:05:02,500 --> 00:05:08,740
you cross the region boundaries you

124
00:05:05,350 --> 00:05:12,390
would get different answers so that the

125
00:05:08,740 --> 00:05:15,250
the splits between the regions

126
00:05:12,389 --> 00:05:16,269
correspond to times when the closest

127
00:05:15,250 --> 00:05:21,970
light source in a particular direction

128
00:05:16,269 --> 00:05:24,909
changes to something else right and I

129
00:05:21,970 --> 00:05:27,280
don't really know how to do that right I

130
00:05:24,910 --> 00:05:29,740
don't really know what that that thing

131
00:05:27,279 --> 00:05:32,979
would would look look like and so if I

132
00:05:29,740 --> 00:05:35,850
actually go here and sort of draw out

133
00:05:32,980 --> 00:05:41,319
what we're actually talking about I'm

134
00:05:35,850 --> 00:05:48,090
going to go ahead and put de 571 in here

135
00:05:41,319 --> 00:05:55,750
I so like this is the closest light

136
00:05:48,089 --> 00:05:58,269
query right so the things that I've seen

137
00:05:55,750 --> 00:06:01,149
in the past that sort of have this this

138
00:05:58,269 --> 00:06:03,399
type of a structure to them are usually

139
00:06:01,149 --> 00:06:05,019
you know I I can't think of very many

140
00:06:03,399 --> 00:06:09,639
but the one that comes to mind is like

141
00:06:05,019 --> 00:06:12,159
light cuts right and the way light cuts

142
00:06:09,639 --> 00:06:14,019
work is they sort of build a hierarchy

143
00:06:12,160 --> 00:06:15,130
of light sources that looks a little

144
00:06:14,019 --> 00:06:18,039
something like this

145
00:06:15,129 --> 00:06:20,050
so let's suppose that in my system you

146
00:06:18,040 --> 00:06:22,450
know let's take a very simple case

147
00:06:20,050 --> 00:06:25,810
there's you know seven light sources

148
00:06:22,449 --> 00:06:28,719
that get pushed into the system so you

149
00:06:25,810 --> 00:06:30,670
know maybe we've got a top-down view of

150
00:06:28,720 --> 00:06:32,200
just a simple room and there's seven

151
00:06:30,670 --> 00:06:34,319
light sources you know there's one there

152
00:06:32,199 --> 00:06:38,589
there's one here there's one here one

153
00:06:34,319 --> 00:06:39,360
here one here one here and one here

154
00:06:38,589 --> 00:06:42,119
right

155
00:06:39,360 --> 00:06:43,949
and then we want to create life cuts out

156
00:06:42,120 --> 00:06:46,050
of this what is the like cut well like

157
00:06:43,949 --> 00:06:47,879
cut is essentially building up a spatial

158
00:06:46,050 --> 00:06:49,680
model of your light sources by grouping

159
00:06:47,879 --> 00:06:52,560
nearby light sources together into a

160
00:06:49,680 --> 00:06:54,959
tree so we start by saying well okay we

161
00:06:52,560 --> 00:06:57,240
these farm form the leaves of our trees

162
00:06:54,959 --> 00:07:01,859
so we say you know okay here's one two

163
00:06:57,240 --> 00:07:03,990
three four five six seven and those form

164
00:07:01,860 --> 00:07:06,750
the base of our tree so we have one two

165
00:07:03,990 --> 00:07:08,400
three four five six seven and those are

166
00:07:06,750 --> 00:07:10,079
the leaves and then we do is say well

167
00:07:08,399 --> 00:07:13,258
well how close are these things together

168
00:07:10,079 --> 00:07:15,418
right and what we could say is well five

169
00:07:13,259 --> 00:07:18,060
and six are pretty close together right

170
00:07:15,418 --> 00:07:20,459
so those might form sort of this new

171
00:07:18,060 --> 00:07:21,959
light source right which will I'll give

172
00:07:20,459 --> 00:07:23,728
these letters instead of numbers ones

173
00:07:21,959 --> 00:07:25,500
that are not actual light sources this

174
00:07:23,728 --> 00:07:28,318
can be like composite light source a

175
00:07:25,500 --> 00:07:30,029
right so what we would say is these two

176
00:07:28,319 --> 00:07:31,800
light sources we can form together and

177
00:07:30,029 --> 00:07:35,278
maybe we treat them as one light source

178
00:07:31,800 --> 00:07:37,199
who is like here actually right look I'm

179
00:07:35,278 --> 00:07:38,848
in between location or something and

180
00:07:37,199 --> 00:07:40,228
we'll call that light source a which

181
00:07:38,848 --> 00:07:41,668
does not actually exist in the real

182
00:07:40,228 --> 00:07:44,968
world but it's a composite of two of the

183
00:07:41,668 --> 00:07:46,649
light sources that do exist right and

184
00:07:44,968 --> 00:07:48,538
then maybe we say well two and three are

185
00:07:46,649 --> 00:07:50,549
fairly close together as well so maybe

186
00:07:48,538 --> 00:07:53,818
they form light source B right and

187
00:07:50,550 --> 00:07:55,348
that's like here you know right so now

188
00:07:53,819 --> 00:07:57,088
we've got another one and then we have

189
00:07:55,348 --> 00:08:00,149
like some other light sources here and

190
00:07:57,088 --> 00:08:02,009
those light sources you know kind of

191
00:08:00,149 --> 00:08:04,288
can't really form together in any

192
00:08:02,009 --> 00:08:05,848
particularly clean way at the moment you

193
00:08:04,288 --> 00:08:07,889
might say that the easiest thing to do

194
00:08:05,848 --> 00:08:09,750
would like to be extend this out to to

195
00:08:07,889 --> 00:08:11,278
contain light source seven maybe and

196
00:08:09,750 --> 00:08:12,180
again I'm not sure how we would want to

197
00:08:11,278 --> 00:08:13,949
build this tree but I'm just giving an

198
00:08:12,180 --> 00:08:15,418
example so this is not exactly how it

199
00:08:13,949 --> 00:08:18,060
would be done Australia but just example

200
00:08:15,418 --> 00:08:20,370
to form light source see so maybe a and

201
00:08:18,060 --> 00:08:23,009
seven form light source see here and

202
00:08:20,370 --> 00:08:26,038
then maybe that expands to hold this one

203
00:08:23,009 --> 00:08:30,389
which would be what is that light source

204
00:08:26,038 --> 00:08:32,968
for there and so C and for that forms a

205
00:08:30,389 --> 00:08:37,049
new light source which is D and then you

206
00:08:32,969 --> 00:08:40,289
know probably it also grabs this one so

207
00:08:37,049 --> 00:08:42,348
probably these two come up together as

208
00:08:40,288 --> 00:08:45,750
well so one is probably actually

209
00:08:42,349 --> 00:08:47,850
secretly over here right and that forms

210
00:08:45,750 --> 00:08:50,940
e and then these tumors together to form

211
00:08:47,850 --> 00:08:52,129
the final light source half right and so

212
00:08:50,940 --> 00:08:53,190
what you're doing is you're creating

213
00:08:52,129 --> 00:08:55,409
successive

214
00:08:53,190 --> 00:08:56,910
less resolute light sources where

215
00:08:55,409 --> 00:09:01,919
there's less and less light sources as

216
00:08:56,909 --> 00:09:03,449
you go up the tree right and then the

217
00:09:01,919 --> 00:09:06,929
way this actually ends up working in

218
00:09:03,450 --> 00:09:11,100
practice is if you just take a look at

219
00:09:06,929 --> 00:09:13,109
how close you are to the bounding region

220
00:09:11,100 --> 00:09:15,480
of this light source you keep splitting

221
00:09:13,110 --> 00:09:18,750
the light source down until you get

222
00:09:15,480 --> 00:09:21,600
lower and lower into ones that are

223
00:09:18,750 --> 00:09:22,830
sufficiently resolute for how close you

224
00:09:21,600 --> 00:09:25,050
are to them right

225
00:09:22,830 --> 00:09:27,960
the reason they call this light cuts is

226
00:09:25,049 --> 00:09:29,759
because for any particular person who

227
00:09:27,960 --> 00:09:32,220
wants to query them let's say someone

228
00:09:29,759 --> 00:09:34,740
who's like right here and you want to

229
00:09:32,220 --> 00:09:37,950
query them you may find that you know

230
00:09:34,740 --> 00:09:41,100
you want light source five at full

231
00:09:37,950 --> 00:09:44,970
resolution right so your light cut wants

232
00:09:41,100 --> 00:09:46,680
to include light source five as a

233
00:09:44,970 --> 00:09:49,560
particular thing so you know that this

234
00:09:46,679 --> 00:09:51,239
is going to be in right which means that

235
00:09:49,559 --> 00:09:53,279
you've expanded all the way down here so

236
00:09:51,240 --> 00:09:56,460
that means that like you know five and

237
00:09:53,279 --> 00:10:00,059
six this this path through the tree is

238
00:09:56,460 --> 00:10:02,400
probably completely expanded right but

239
00:10:00,059 --> 00:10:05,489
then you know you may say well two and

240
00:10:02,399 --> 00:10:08,039
three really don't need to be right so I

241
00:10:05,490 --> 00:10:10,350
never even went down this branch of the

242
00:10:08,039 --> 00:10:14,309
tree right I just don't even use it at

243
00:10:10,350 --> 00:10:17,370
all and so you may end up with some path

244
00:10:14,309 --> 00:10:19,199
that just goes like okay this is the the

245
00:10:17,370 --> 00:10:21,929
entirety of the expansion's that I got

246
00:10:19,200 --> 00:10:26,670
to do and I'm gonna let light source you

247
00:10:21,929 --> 00:10:29,339
know F if I had to expand it you know B

248
00:10:26,669 --> 00:10:32,159
will stand in for two and three entirely

249
00:10:29,340 --> 00:10:35,370
and I'll just never expand those two e

250
00:10:32,159 --> 00:10:37,350
will get expanded out to one and D D

251
00:10:35,370 --> 00:10:39,720
will get expand up to C in for C will

252
00:10:37,350 --> 00:10:42,870
get expanded out to this one and we'll

253
00:10:39,720 --> 00:10:46,410
end up with a certain you know set of

254
00:10:42,870 --> 00:10:48,810
light sources here right now I don't

255
00:10:46,409 --> 00:10:50,579
remember the exact ways of building

256
00:10:48,809 --> 00:10:52,588
light cut trees that are efficient or

257
00:10:50,580 --> 00:10:54,150
any of these sorts of things so I'm just

258
00:10:52,589 --> 00:10:55,589
kind of saying like you know this is

259
00:10:54,149 --> 00:10:57,720
probably not quite how you do it it

260
00:10:55,589 --> 00:10:59,640
seems like you really want something

261
00:10:57,720 --> 00:11:02,879
that allows you to be more specific

262
00:10:59,639 --> 00:11:05,129
about how these get broken down but just

263
00:11:02,879 --> 00:11:06,509
in general the idea is we build a tree

264
00:11:05,129 --> 00:11:08,129
out of these and we only explain

265
00:11:06,509 --> 00:11:09,659
the tree in the places we actually care

266
00:11:08,129 --> 00:11:13,370
about and we leave the tree on expand

267
00:11:09,659 --> 00:11:15,990
into places that aren't that way right

268
00:11:13,370 --> 00:11:17,250
and so you could imagine us just merging

269
00:11:15,990 --> 00:11:17,610
nearby light sources together in that

270
00:11:17,250 --> 00:11:19,590
way

271
00:11:17,610 --> 00:11:21,990
and if we did that then we could

272
00:11:19,590 --> 00:11:23,850
actually cut down on the number of light

273
00:11:21,990 --> 00:11:25,980
sources that we were choosing to target

274
00:11:23,850 --> 00:11:28,250
and furthermore there's probably in ways

275
00:11:25,980 --> 00:11:30,800
that we can

276
00:11:28,250 --> 00:11:33,269
there's probably ways we can do this

277
00:11:30,799 --> 00:11:34,769
such that it does help us with the fact

278
00:11:33,269 --> 00:11:37,319
that we need our rate traces to be

279
00:11:34,769 --> 00:11:39,600
somewhat coherent in terms of

280
00:11:37,320 --> 00:11:40,920
directionality I'm not sure exactly how

281
00:11:39,600 --> 00:11:43,320
I would do that to think about that a

282
00:11:40,919 --> 00:11:45,509
little bit but if you imagine expanding

283
00:11:43,320 --> 00:11:48,570
the tree in such a way as to figure out

284
00:11:45,509 --> 00:11:53,549
like what's going on in each direction

285
00:11:48,570 --> 00:11:55,860
from us so as we expand those light

286
00:11:53,549 --> 00:11:58,289
sources that are like nearby to us or

287
00:11:55,860 --> 00:12:00,629
whatever we would be keeping track of

288
00:11:58,289 --> 00:12:02,879
which side of us they were on and just

289
00:12:00,629 --> 00:12:06,269
like remembering you know sifting

290
00:12:02,879 --> 00:12:08,580
sitting them out into you know six

291
00:12:06,269 --> 00:12:11,549
different arrays to pick from or

292
00:12:08,580 --> 00:12:13,889
something like this right so I think

293
00:12:11,549 --> 00:12:16,109
that's something we could do I don't

294
00:12:13,889 --> 00:12:19,049
really have a like a solid handle on it

295
00:12:16,110 --> 00:12:20,340
like I say but I think that's more or

296
00:12:19,049 --> 00:12:22,620
less the way that we would want to

297
00:12:20,340 --> 00:12:25,200
approach it so we have some way of

298
00:12:22,620 --> 00:12:27,240
basically just like expanding a separate

299
00:12:25,200 --> 00:12:30,120
light tree so I'm just gonna assume

300
00:12:27,240 --> 00:12:31,980
that's what we want right and I don't

301
00:12:30,120 --> 00:12:33,779
know the shape of it or exactly what the

302
00:12:31,980 --> 00:12:36,120
routines look like but that's okay I

303
00:12:33,779 --> 00:12:38,399
just know that we're going to have some

304
00:12:36,120 --> 00:12:40,409
kind of a separate thing that's gonna be

305
00:12:38,399 --> 00:12:45,120
special purpose for this and so I know

306
00:12:40,409 --> 00:12:47,819
that I don't have to care about about

307
00:12:45,120 --> 00:12:51,029
this gets facial leaf for P thing

308
00:12:47,820 --> 00:12:52,500
anymore like that we can change to just

309
00:12:51,029 --> 00:12:56,639
being one that's specific to light

310
00:12:52,500 --> 00:12:59,129
sources right and so what I'm gonna do

311
00:12:56,639 --> 00:13:00,840
is say let's suppose there's a different

312
00:12:59,129 --> 00:13:09,590
tree in here there's a tree that's

313
00:13:00,840 --> 00:13:14,280
something like yeah like light light

314
00:13:09,590 --> 00:13:16,290
spatial partition or something like this

315
00:13:14,279 --> 00:13:18,720
I don't know we're gonna call it but

316
00:13:16,289 --> 00:13:22,259
like a lighting node or a light

317
00:13:18,720 --> 00:13:24,269
know'd something like that and this

318
00:13:22,259 --> 00:13:26,610
light node would have to have something

319
00:13:24,269 --> 00:13:28,169
like how it expanded out right and if

320
00:13:26,610 --> 00:13:31,680
it's like something like a binary tree

321
00:13:28,169 --> 00:13:34,799
you know maybe it's got two indices or

322
00:13:31,679 --> 00:13:37,289
something like that you know this sort

323
00:13:34,799 --> 00:13:39,719
of thing and then what we would do from

324
00:13:37,289 --> 00:13:41,370
there is for each one of these light

325
00:13:39,720 --> 00:13:44,220
nodes you know and like a binary tree or

326
00:13:41,370 --> 00:13:46,259
we expand it or whatever maybe we just

327
00:13:44,220 --> 00:13:49,980
have a bounds for it so we would just

328
00:13:46,259 --> 00:13:51,990
say like you know key and radius so it

329
00:13:49,980 --> 00:13:53,879
can basically be just treated the same

330
00:13:51,990 --> 00:13:56,250
as our other ones so our Etan the same

331
00:13:53,879 --> 00:13:57,990
it's basically the same as our other

332
00:13:56,250 --> 00:14:00,600
summated spatial partition so we look at

333
00:13:57,990 --> 00:14:01,980
the lighting box here right it's the

334
00:14:00,600 --> 00:14:04,949
same as this but it's gonna have

335
00:14:01,980 --> 00:14:06,480
different information in it so instead

336
00:14:04,948 --> 00:14:08,250
of it's gonna have the P and the radius

337
00:14:06,480 --> 00:14:10,500
and then it's gonna have the emission

338
00:14:08,250 --> 00:14:12,208
value or something baked in here so we

339
00:14:10,500 --> 00:14:15,750
can basically just use these and they

340
00:14:12,208 --> 00:14:17,489
kind of expand as they go and we have

341
00:14:15,750 --> 00:14:19,980
like synthetic ones like I said that

342
00:14:17,490 --> 00:14:21,568
kind of you know they keep going now we

343
00:14:19,980 --> 00:14:23,459
may want to do the exact same thing as

344
00:14:21,568 --> 00:14:24,659
we were doing in here so we may want to

345
00:14:23,458 --> 00:14:26,969
have a thing where we just have these

346
00:14:24,659 --> 00:14:29,429
light nodes or baked in there so you

347
00:14:26,970 --> 00:14:31,170
push light nodes onto the light node set

348
00:14:29,429 --> 00:14:33,750
I don't know exactly how we want to do

349
00:14:31,169 --> 00:14:35,188
this stuff but something like that so we

350
00:14:33,750 --> 00:14:36,629
were getting we would build a tree and

351
00:14:35,188 --> 00:14:38,188
the tree would be sort of separate and

352
00:14:36,629 --> 00:14:41,278
then we would use that tree is something

353
00:14:38,188 --> 00:14:43,078
that we would you know query and then we

354
00:14:41,278 --> 00:14:45,269
would take the light nodes that we found

355
00:14:43,078 --> 00:14:48,620
and we would just sort those light nodes

356
00:14:45,269 --> 00:14:50,879
into which direction they were from us

357
00:14:48,620 --> 00:14:55,259
you know basically which which one of

358
00:14:50,879 --> 00:14:57,208
their when we're looking in the

359
00:14:55,259 --> 00:14:59,970
different directions for things we can

360
00:14:57,208 --> 00:15:02,578
then make those rays more coherent by

361
00:14:59,970 --> 00:15:05,250
sipping these nodes into the correct

362
00:15:02,578 --> 00:15:06,899
location so something like this and what

363
00:15:05,250 --> 00:15:08,909
I'm gonna do now is I'm just gonna do

364
00:15:06,899 --> 00:15:11,490
like some basic work getting that that

365
00:15:08,909 --> 00:15:12,808
code started and then we're gonna use

366
00:15:11,490 --> 00:15:14,459
that to look up the lighting and just

367
00:15:12,808 --> 00:15:15,778
kind of get it working right just get a

368
00:15:14,458 --> 00:15:17,219
basic thing working and then we can

369
00:15:15,778 --> 00:15:19,019
worry about turning the crank on that

370
00:15:17,220 --> 00:15:21,059
once everything is kind of in place and

371
00:15:19,019 --> 00:15:22,490
we start throwing tons of lights in it

372
00:15:21,058 --> 00:15:25,019
start slowing down and stuff like that

373
00:15:22,490 --> 00:15:26,250
then we'll start to worry about okay how

374
00:15:25,019 --> 00:15:28,049
do we start to occupy this code because

375
00:15:26,250 --> 00:15:30,208
they're already not very optimal like

376
00:15:28,049 --> 00:15:32,459
the Ray caster is at least four wide and

377
00:15:30,208 --> 00:15:35,519
doing some good space partition stuff so

378
00:15:32,460 --> 00:15:37,410
the Rhea casters not terrible but this

379
00:15:35,519 --> 00:15:38,639
lighting code is gonna be brand new and

380
00:15:37,409 --> 00:15:40,709
it doesn't really know what it's doing

381
00:15:38,639 --> 00:15:44,639
and so you know that that part's gonna

382
00:15:40,710 --> 00:15:46,950
be slower alright so when we actually do

383
00:15:44,639 --> 00:15:49,439
our build spatial partition for lighting

384
00:15:46,950 --> 00:15:51,420
here what we want to do now is have a

385
00:15:49,440 --> 00:15:53,520
separate pass you can see the pass sort

386
00:15:51,419 --> 00:15:56,699
of starting here we don't actually want

387
00:15:53,519 --> 00:15:58,529
this you know this light box target key

388
00:15:56,700 --> 00:16:00,240
thing anymore we're gonna get rid of

389
00:15:58,529 --> 00:16:01,860
that and instead what we're gonna do is

390
00:16:00,240 --> 00:16:05,009
we're gonna do this pass over the thing

391
00:16:01,860 --> 00:16:07,200
where we say all right for each of these

392
00:16:05,009 --> 00:16:09,419
we're gonna look at the boxes

393
00:16:07,200 --> 00:16:11,310
twice and we can really do this because

394
00:16:09,419 --> 00:16:13,919
it's a separate tree and we don't really

395
00:16:11,309 --> 00:16:16,259
need to know those bounds probably I

396
00:16:13,919 --> 00:16:19,229
would say what we could do is we can

397
00:16:16,259 --> 00:16:22,379
build this the base level of this tree

398
00:16:19,230 --> 00:16:28,980
we can probably build it sort of off the

399
00:16:22,379 --> 00:16:30,799
bat I mean we could build this the same

400
00:16:28,980 --> 00:16:34,200
way we build the other one I suppose

401
00:16:30,799 --> 00:16:38,189
trying to think of like how we want to

402
00:16:34,200 --> 00:16:41,340
do this because when we actually do this

403
00:16:38,190 --> 00:16:43,020
this split box here I feel like we could

404
00:16:41,340 --> 00:16:51,389
do the same exact thing but just for

405
00:16:43,019 --> 00:16:53,490
light sources right so I mean let's if

406
00:16:51,389 --> 00:16:56,100
we did occluder bounds here and we did

407
00:16:53,490 --> 00:16:59,370
lighting light bounds as a separate

408
00:16:56,100 --> 00:17:03,750
thing and we imagine in here saying like

409
00:16:59,370 --> 00:17:09,690
okay there's an if statement that we'll

410
00:17:03,750 --> 00:17:12,630
use and we'll just sort of take two

411
00:17:09,690 --> 00:17:17,250
separate sets of bounds one for things

412
00:17:12,630 --> 00:17:19,470
that are lights because we know that so

413
00:17:17,250 --> 00:17:22,400
for anything that is a light we included

414
00:17:19,470 --> 00:17:24,480
in these bounds and for everything that

415
00:17:22,400 --> 00:17:26,370
exists at all be included in the

416
00:17:24,480 --> 00:17:28,470
occluder bounds so things that you can

417
00:17:26,369 --> 00:17:32,369
hit are both light sources and walls

418
00:17:28,470 --> 00:17:36,089
things that you can treat as a light

419
00:17:32,369 --> 00:17:41,789
source for sampling only go in this this

420
00:17:36,089 --> 00:17:43,500
sort of other box set right and so again

421
00:17:41,789 --> 00:17:45,298
I don't really know what this thing

422
00:17:43,500 --> 00:17:47,878
should look like but presumably

423
00:17:45,298 --> 00:17:50,308
can use a very similar sort of splitting

424
00:17:47,878 --> 00:17:54,388
for it or something like presumably we

425
00:17:50,308 --> 00:18:02,069
can do a pretty similar set of things I

426
00:17:54,388 --> 00:18:03,569
don't really know I don't again really

427
00:18:02,069 --> 00:18:06,118
know exactly how we want this to look

428
00:18:03,569 --> 00:18:07,829
but just in terms of like how far away

429
00:18:06,118 --> 00:18:10,109
light sources are I think that's all we

430
00:18:07,829 --> 00:18:11,668
probably need to know and so we could

431
00:18:10,109 --> 00:18:14,219
sort of do here is is we can probably

432
00:18:11,669 --> 00:18:17,129
run effectively the same code like more

433
00:18:14,220 --> 00:18:19,079
or less the exact same code and then we

434
00:18:17,128 --> 00:18:21,418
could just go ahead and break it down

435
00:18:19,079 --> 00:18:23,158
into a binary tree now I don't again I

436
00:18:21,419 --> 00:18:26,038
really just don't know exactly how we

437
00:18:23,159 --> 00:18:27,778
want to do this but for now maybe we say

438
00:18:26,038 --> 00:18:30,989
we do it exactly the same way so if you

439
00:18:27,778 --> 00:18:34,288
imagine this split box code operating

440
00:18:30,989 --> 00:18:35,879
the same way and I mean honestly I'm you

441
00:18:34,288 --> 00:18:37,108
may even be able to make it and I'm

442
00:18:35,878 --> 00:18:39,298
thinking about it I wonder if we could

443
00:18:37,108 --> 00:18:40,980
just do it with the split boxes

444
00:18:39,298 --> 00:18:43,019
themselves so maybe we just build two

445
00:18:40,980 --> 00:18:45,769
spatial structures and we don't really

446
00:18:43,019 --> 00:18:50,128
care whether they're lights or not and

447
00:18:45,769 --> 00:18:52,048
we just have two of them right so if you

448
00:18:50,128 --> 00:18:55,230
look in here and we say well we've got

449
00:18:52,048 --> 00:18:57,929
sort of a box table that we you know and

450
00:18:55,230 --> 00:19:00,210
lighting boxes here maybe we just have

451
00:18:57,929 --> 00:19:04,288
two of those and you know we just go

452
00:19:00,210 --> 00:19:05,730
ahead and and use yeah like we just used

453
00:19:04,288 --> 00:19:07,798
two of those and we build them

454
00:19:05,730 --> 00:19:09,389
symmetrically and so that when you call

455
00:19:07,798 --> 00:19:12,239
this you know you just use a different

456
00:19:09,388 --> 00:19:14,308
root box right so we'd add one box here

457
00:19:12,239 --> 00:19:16,858
and we'd add another box there and off

458
00:19:14,308 --> 00:19:18,628
we would go so if you imagine what that

459
00:19:16,858 --> 00:19:23,249
would look like I mean it would just

460
00:19:18,628 --> 00:19:25,678
really be something like this right and

461
00:19:23,249 --> 00:19:27,028
instead of the actual box count and this

462
00:19:25,679 --> 00:19:28,739
sort of stuff we would just need like a

463
00:19:27,028 --> 00:19:31,259
separate light count and we would need

464
00:19:28,739 --> 00:19:32,819
those things to be added right so we

465
00:19:31,259 --> 00:19:37,528
would need something like route light

466
00:19:32,819 --> 00:19:40,048
box here and we would put that yeah like

467
00:19:37,528 --> 00:19:41,788
I also don't know by root box okay so

468
00:19:40,048 --> 00:19:44,069
basically it would look like this right

469
00:19:41,788 --> 00:19:45,690
so you would basically say route light

470
00:19:44,069 --> 00:19:47,099
box index which would be sort of a

471
00:19:45,690 --> 00:19:50,038
separate thing because here we've got

472
00:19:47,099 --> 00:19:51,719
the root box index is something we store

473
00:19:50,038 --> 00:19:55,319
or else

474
00:19:51,720 --> 00:19:56,788
there so we would have a route lightbox

475
00:19:55,319 --> 00:19:58,490
index and that would be something that

476
00:19:56,788 --> 00:20:00,538
we would build sort of a separate pass

477
00:19:58,490 --> 00:20:02,190
you know again I don't know if these

478
00:20:00,538 --> 00:20:06,269
will have to be expanded to be 32 bits

479
00:20:02,190 --> 00:20:10,919
or not because kind of like we may end

480
00:20:06,269 --> 00:20:13,259
up having too many nodes I don't know so

481
00:20:10,919 --> 00:20:14,909
you know this may want to be 32 bit

482
00:20:13,259 --> 00:20:16,679
integers at the end of the day and we

483
00:20:14,909 --> 00:20:18,509
can always expand it if we find it's too

484
00:20:16,679 --> 00:20:20,250
little but you know we want our lighting

485
00:20:18,509 --> 00:20:21,538
system solution to run fast so we're

486
00:20:20,250 --> 00:20:23,179
probably gonna try and limit the amount

487
00:20:21,538 --> 00:20:26,869
of things get thrown into it either way

488
00:20:23,179 --> 00:20:29,278
but anyway so if you imagine us doing

489
00:20:26,869 --> 00:20:31,408
this stuff you're exactly the same way

490
00:20:29,278 --> 00:20:33,148
that we were doing it and then we get

491
00:20:31,409 --> 00:20:36,659
the route lightening box by using that

492
00:20:33,148 --> 00:20:38,819
route light box index in here once we

493
00:20:36,659 --> 00:20:41,009
actually get those out we can get the

494
00:20:38,819 --> 00:20:43,950
center of the light bounds instead of

495
00:20:41,009 --> 00:20:48,329
the clear bounds and in here we can get

496
00:20:43,950 --> 00:20:51,210
the radius right of that light bounds

497
00:20:48,329 --> 00:20:54,148
and so that allows us to you know make

498
00:20:51,210 --> 00:20:55,919
this system work for both so we just use

499
00:20:54,148 --> 00:20:57,750
the same building function for each and

500
00:20:55,919 --> 00:20:59,960
the differences one tree has everything

501
00:20:57,750 --> 00:21:05,730
and the other tree only has lights right

502
00:20:59,960 --> 00:21:08,519
now since that needs to know how many

503
00:21:05,730 --> 00:21:10,409
lights there are we end up in a

504
00:21:08,519 --> 00:21:12,929
situation where this part here is not

505
00:21:10,409 --> 00:21:15,179
quite as simple we need something that

506
00:21:12,929 --> 00:21:17,759
has the actual light count in here and

507
00:21:15,179 --> 00:21:20,009
that's gonna start out at zero and in

508
00:21:17,759 --> 00:21:21,659
here I think what we would do is say we

509
00:21:20,009 --> 00:21:24,480
need to count how many of those there

510
00:21:21,659 --> 00:21:26,909
are and each time we actually get one we

511
00:21:24,480 --> 00:21:29,308
would need to load it in here right so

512
00:21:26,909 --> 00:21:34,200
what we would need to do is make it so

513
00:21:29,308 --> 00:21:36,658
that we have you know honestly probably

514
00:21:34,200 --> 00:21:38,909
this right here where we say okay we've

515
00:21:36,659 --> 00:21:41,278
got the route light box index and we're

516
00:21:38,909 --> 00:21:44,700
gonna make that be the first box of our

517
00:21:41,278 --> 00:21:47,190
set and so inside this we assume that

518
00:21:44,700 --> 00:21:50,970
each of these will just come after it

519
00:21:47,190 --> 00:21:52,830
right and so we need a way to add the

520
00:21:50,970 --> 00:21:57,450
lights in here as sort of a separate

521
00:21:52,829 --> 00:22:01,048
thing because you know because these

522
00:21:57,450 --> 00:22:03,620
have to be continuous oh well I guess

523
00:22:01,048 --> 00:22:09,089
they don't

524
00:22:03,619 --> 00:22:13,889
you know yeah so all right so here's the

525
00:22:09,089 --> 00:22:15,480
thing in the in the lighting box here

526
00:22:13,890 --> 00:22:19,980
right so we've got the first child index

527
00:22:15,480 --> 00:22:23,430
and the child count right so when we're

528
00:22:19,980 --> 00:22:26,160
actually partitioning these things into

529
00:22:23,430 --> 00:22:29,940
children then what we're actually going

530
00:22:26,160 --> 00:22:34,730
to see here I guess is those indices

531
00:22:29,940 --> 00:22:38,820
that we're looking at here they go into

532
00:22:34,730 --> 00:22:40,829
this box table which is sort of a doubly

533
00:22:38,819 --> 00:22:44,909
in directed table which honestly is not

534
00:22:40,829 --> 00:22:47,819
great I kind of suspect that that's

535
00:22:44,910 --> 00:22:49,590
probably not the the best way to do this

536
00:22:47,819 --> 00:22:52,639
but because those are going in there I

537
00:22:49,589 --> 00:22:56,579
guess we don't actually need to do

538
00:22:52,640 --> 00:22:59,670
anything particularly fancy there all

539
00:22:56,579 --> 00:23:03,329
that needs to happen is in that box

540
00:22:59,670 --> 00:23:07,019
table index we just like we just need to

541
00:23:03,329 --> 00:23:10,079
add a reference to this thing right so

542
00:23:07,019 --> 00:23:13,259
instead of adding box storage we can

543
00:23:10,079 --> 00:23:16,409
just use box reference and point to the

544
00:23:13,259 --> 00:23:17,940
box in question so like here where we

545
00:23:16,410 --> 00:23:20,670
have the box storage index we can just

546
00:23:17,940 --> 00:23:23,220
say oh well we're just trying to refer

547
00:23:20,670 --> 00:23:25,980
to this box and we just need it to be

548
00:23:23,220 --> 00:23:30,630
contiguous so that the we can split

549
00:23:25,980 --> 00:23:33,120
these indices up right we don't even

550
00:23:30,630 --> 00:23:35,370
really need to store that information in

551
00:23:33,119 --> 00:23:37,409
the actual thing itself it's just we're

552
00:23:35,369 --> 00:23:38,969
going to that's a little bit wasteful

553
00:23:37,410 --> 00:23:40,650
because they're not contiguous and we're

554
00:23:38,970 --> 00:23:42,920
trying to pass them down to a separate

555
00:23:40,650 --> 00:23:42,920
thing

556
00:23:43,579 --> 00:23:49,740
we'll see how we'll see how we do anyway

557
00:23:46,980 --> 00:23:51,240
so we've got this root box index here

558
00:23:49,740 --> 00:23:52,950
that we're now saying okay this thing is

559
00:23:51,240 --> 00:23:54,690
the light we're keeping track of how

560
00:23:52,950 --> 00:23:57,299
many of these there are this doesn't

561
00:23:54,690 --> 00:23:59,850
actually have to be here if we don't

562
00:23:57,299 --> 00:24:01,169
want it to be here but I'm going to do

563
00:23:59,849 --> 00:24:04,079
it this way anyway just so we have an

564
00:24:01,170 --> 00:24:06,779
idea of where this array starts and so

565
00:24:04,079 --> 00:24:12,000
in here we can say well the root light

566
00:24:06,779 --> 00:24:14,099
box is this one this is the the number

567
00:24:12,000 --> 00:24:16,650
of boxes in question and I believe this

568
00:24:14,099 --> 00:24:17,579
is the offset so this just needs to be

569
00:24:16,650 --> 00:24:20,038
like the

570
00:24:17,579 --> 00:24:22,878
one after the the root box let me just

571
00:24:20,038 --> 00:24:26,700
make sure that's true

572
00:24:22,878 --> 00:24:28,528
I'm not oh no that's not true so how do

573
00:24:26,700 --> 00:24:31,019
I tell it oh it's just a source array

574
00:24:28,528 --> 00:24:33,118
okay that makes sense so in order to

575
00:24:31,019 --> 00:24:40,349
tell it where we're actually looking

576
00:24:33,118 --> 00:24:42,808
here that's still a zero but when we

577
00:24:40,349 --> 00:24:43,648
pass the actual source array which is

578
00:24:42,808 --> 00:24:46,408
this thing

579
00:24:43,648 --> 00:24:51,988
I guess that source array for scratch a

580
00:24:46,409 --> 00:24:58,639
has to be set up with that base pointer

581
00:24:51,989 --> 00:25:02,940
being correct so this would be that I

582
00:24:58,638 --> 00:25:04,349
want to say I don't really know how

583
00:25:02,940 --> 00:25:08,278
scratch B works we're gonna have to go

584
00:25:04,349 --> 00:25:17,759
look at this code what is that that's

585
00:25:08,278 --> 00:25:19,470
the destination so I'm not sure how

586
00:25:17,759 --> 00:25:21,720
that's supposed to be working there

587
00:25:19,470 --> 00:25:25,889
what's going on how does this thing do

588
00:25:21,720 --> 00:25:28,019
this partition so it's just writing into

589
00:25:25,888 --> 00:25:37,519
the source there and then the

590
00:25:28,019 --> 00:25:50,788
destination gets flipped I'm not sure I

591
00:25:37,519 --> 00:25:52,288
this is some some pretty crazy code so

592
00:25:50,788 --> 00:25:54,569
the interesting thing here right is you

593
00:25:52,288 --> 00:25:57,298
can see that basically those two arrays

594
00:25:54,569 --> 00:26:01,069
are just used for the splitting and the

595
00:25:57,298 --> 00:26:01,069
writing at the end and so

596
00:26:10,079 --> 00:26:17,639
I want to do a walk through this exactly

597
00:26:13,859 --> 00:26:20,669
and make sure it's okay so when the

598
00:26:17,640 --> 00:26:24,240
source count is not greater than four so

599
00:26:20,670 --> 00:26:27,509
if you have four or less children you do

600
00:26:24,240 --> 00:26:30,690
nothing right so what that means that

601
00:26:27,509 --> 00:26:34,619
what you pass in directly for the source

602
00:26:30,690 --> 00:26:36,509
has to kind of be correct and that's

603
00:26:34,619 --> 00:26:39,959
okay because that is what's happening

604
00:26:36,509 --> 00:26:43,349
here right so effectively what we would

605
00:26:39,960 --> 00:26:47,069
want to do is say all right here's the

606
00:26:43,349 --> 00:26:52,879
route light box and by default you know

607
00:26:47,069 --> 00:26:55,470
I would assume it's children need to be

608
00:26:52,880 --> 00:26:57,180
correct in the cause in case you have

609
00:26:55,470 --> 00:27:00,059
less than four lights going into the

610
00:26:57,180 --> 00:27:03,600
system this would have to be able to

611
00:27:00,059 --> 00:27:06,569
fall out correctly right and so whatever

612
00:27:03,599 --> 00:27:09,329
the child count that goes in would be

613
00:27:06,569 --> 00:27:12,389
the first child index would just be

614
00:27:09,329 --> 00:27:16,049
source count source for adding box

615
00:27:12,390 --> 00:27:19,800
references there and so the source well

616
00:27:16,049 --> 00:27:22,430
okay no it's correct so I guess that

617
00:27:19,799 --> 00:27:22,430
just works

618
00:27:22,910 --> 00:27:29,460
we'll see so I think that once if we go

619
00:27:28,230 --> 00:27:31,289
through and make that a little clearer

620
00:27:29,460 --> 00:27:32,549
and I can I clean up that code so that

621
00:27:31,289 --> 00:27:35,730
and I know that it's working correctly

622
00:27:32,549 --> 00:27:37,680
that will build us to light pounds one

623
00:27:35,730 --> 00:27:41,549
for the route light box and one for the

624
00:27:37,680 --> 00:27:44,430
route occluder box and that's probably

625
00:27:41,549 --> 00:27:50,069
fine and probably most of what we need

626
00:27:44,430 --> 00:27:54,570
right so if I go in here and we make

627
00:27:50,069 --> 00:27:58,679
this sort of Union work correctly by

628
00:27:54,569 --> 00:28:00,359
changing spelling so it's not busted we

629
00:27:58,680 --> 00:28:02,549
now have a way to look up light sources

630
00:28:00,359 --> 00:28:06,689
and so now mainly what we're looking for

631
00:28:02,549 --> 00:28:10,220
here is we need loops why can I not get

632
00:28:06,690 --> 00:28:10,220
back to the first thing here here yeah

633
00:28:10,640 --> 00:28:18,660
mainly what we need here route light box

634
00:28:13,549 --> 00:28:20,450
that's spelled wrong mainly what we need

635
00:28:18,660 --> 00:28:22,920
here is just a way of now using this

636
00:28:20,450 --> 00:28:23,460
light to you know to figure out what's

637
00:28:22,920 --> 00:28:25,500
light we're

638
00:28:23,460 --> 00:28:27,269
and a cast against if you look at how

639
00:28:25,500 --> 00:28:28,740
we're doing it here essentially what

640
00:28:27,269 --> 00:28:32,129
we're doing is we're only casting

641
00:28:28,740 --> 00:28:34,230
against just this one light and you know

642
00:28:32,130 --> 00:28:36,419
what we can do at the moment is we can

643
00:28:34,230 --> 00:28:38,339
just actually just use the route light

644
00:28:36,419 --> 00:28:41,278
box as the thing we cast against and if

645
00:28:38,339 --> 00:28:44,548
we only push one light down then that is

646
00:28:41,278 --> 00:28:47,099
what that would be right because it

647
00:28:44,548 --> 00:28:49,769
would get the correct the correct values

648
00:28:47,099 --> 00:28:52,079
associated with it the only thing that's

649
00:28:49,769 --> 00:28:54,629
not gonna happen here is the route light

650
00:28:52,079 --> 00:28:59,129
box needs to actually be set up properly

651
00:28:54,630 --> 00:29:00,899
to have its value be be an actual

652
00:28:59,130 --> 00:29:02,460
average there because if you look at

653
00:29:00,898 --> 00:29:04,199
what's going on here you know we've got

654
00:29:02,460 --> 00:29:07,140
this split box or whatever that's

655
00:29:04,200 --> 00:29:09,600
happening and normally in here where we

656
00:29:07,140 --> 00:29:11,788
are doing this splitting where we

657
00:29:09,599 --> 00:29:14,398
actually have more of them we can

658
00:29:11,788 --> 00:29:15,538
actually compute some values here even

659
00:29:14,398 --> 00:29:18,058
though these are not computing those

660
00:29:15,538 --> 00:29:20,849
values we do want to actually compute

661
00:29:18,058 --> 00:29:24,000
sort of averaging values here what we

662
00:29:20,849 --> 00:29:25,769
need to do is every time we hit

663
00:29:24,000 --> 00:29:27,778
something that would be a container it

664
00:29:25,769 --> 00:29:30,869
needs to sort of get some aggregate

665
00:29:27,778 --> 00:29:33,298
values associated with it this right

666
00:29:30,869 --> 00:29:35,699
here is effectively doing sort of the

667
00:29:33,298 --> 00:29:37,769
splitting process and so in here what

668
00:29:35,700 --> 00:29:39,870
we're doing is we're saying look if we

669
00:29:37,769 --> 00:29:42,950
have something where we got a valid

670
00:29:39,869 --> 00:29:48,089
split then we're gonna go ahead and

671
00:29:42,950 --> 00:29:51,870
assign some information right and we do

672
00:29:48,089 --> 00:29:54,509
you know this this this sort of sub

673
00:29:51,869 --> 00:29:57,389
sitting this part here kind of needs to

674
00:29:54,509 --> 00:29:59,960
have a way of putting the right bounds

675
00:29:57,390 --> 00:30:05,490
in there so you can see where we do

676
00:29:59,960 --> 00:30:07,590
where we compute the bounds right you

677
00:30:05,490 --> 00:30:12,659
can see here what's happening for each

678
00:30:07,589 --> 00:30:15,990
parent box is that when we create those

679
00:30:12,659 --> 00:30:19,110
two children we create the new children

680
00:30:15,990 --> 00:30:21,720
with the values that we've tracked so

681
00:30:19,109 --> 00:30:24,959
when we do the split we know what the

682
00:30:21,720 --> 00:30:27,960
left and right sides of the slit should

683
00:30:24,960 --> 00:30:30,450
have for their center in radius but we

684
00:30:27,960 --> 00:30:32,970
don't fill in any kind of like

685
00:30:30,450 --> 00:30:35,069
information for them and what we do need

686
00:30:32,970 --> 00:30:36,569
is we need this ref sea value to

687
00:30:35,069 --> 00:30:39,960
actually be valid

688
00:30:36,569 --> 00:30:42,480
is the thing right and so if something

689
00:30:39,960 --> 00:30:44,220
is a light source we know that this is

690
00:30:42,480 --> 00:30:46,409
the emission if it's not we know that

691
00:30:44,220 --> 00:30:48,240
it's the occlusion value those are good

692
00:30:46,409 --> 00:30:51,179
pieces of information to have and we

693
00:30:48,240 --> 00:30:53,370
need them right so what we need here is

694
00:30:51,179 --> 00:30:56,250
we need to be able to say well the ref C

695
00:30:53,369 --> 00:30:58,918
is gonna be used in either of these

696
00:30:56,250 --> 00:31:03,509
cases is going to be like the ref CA

697
00:30:58,919 --> 00:31:06,740
right and the ref C in this case is

698
00:31:03,509 --> 00:31:08,940
going to be the ref CB right and

699
00:31:06,740 --> 00:31:12,269
honestly we should have been doing that

700
00:31:08,940 --> 00:31:14,429
for our occluders anyway because when

701
00:31:12,269 --> 00:31:17,460
you hit one of those occluders you need

702
00:31:14,429 --> 00:31:20,309
it to tell you that information anyway

703
00:31:17,460 --> 00:31:24,870
right you need to know that this thing

704
00:31:20,308 --> 00:31:26,278
is a light or an occluder you need to

705
00:31:24,869 --> 00:31:27,479
know what the color values were of the

706
00:31:26,278 --> 00:31:29,250
occluder just as much as you need to

707
00:31:27,480 --> 00:31:31,620
know what is a light source if you're

708
00:31:29,250 --> 00:31:33,480
gonna stop your traversal and so that

709
00:31:31,619 --> 00:31:36,199
may have also been why we were having

710
00:31:33,480 --> 00:31:39,538
that bug where you were getting black

711
00:31:36,200 --> 00:31:41,340
for the bounces on when you got too far

712
00:31:39,538 --> 00:31:44,099
away because we may have just not been

713
00:31:41,339 --> 00:31:45,720
aggregating our ref CA values or rest EB

714
00:31:44,099 --> 00:31:47,099
and ref CA values so we were just

715
00:31:45,720 --> 00:31:50,460
getting complete knock out of the

716
00:31:47,099 --> 00:31:53,278
lighting source there right so that was

717
00:31:50,460 --> 00:31:54,990
probably a bug separate from this and we

718
00:31:53,278 --> 00:31:56,819
need to fix it for the lighting we we

719
00:31:54,990 --> 00:31:58,278
probably are fixing it for the occluders

720
00:31:56,819 --> 00:32:00,898
as well so that's kind of a nice thing

721
00:31:58,278 --> 00:32:03,028
so here we decide which one of these

722
00:32:00,898 --> 00:32:08,158
we're going to have we can go ahead and

723
00:32:03,028 --> 00:32:10,079
take the color Union here so all I'm

724
00:32:08,159 --> 00:32:12,028
gonna do is say that we have a ref CA

725
00:32:10,079 --> 00:32:14,939
and a ref CD we're gonna sum these

726
00:32:12,028 --> 00:32:18,538
values together and we're gonna produce

727
00:32:14,940 --> 00:32:22,230
a composite color for this thing that's

728
00:32:18,538 --> 00:32:26,460
based on you know that that value and so

729
00:32:22,230 --> 00:32:28,370
the ref C or ref B in this case are just

730
00:32:26,460 --> 00:32:31,440
gonna get oops sorry

731
00:32:28,369 --> 00:32:34,018
the ref CA and the ref CB I don't know

732
00:32:31,440 --> 00:32:36,389
why I had that I wrote them correctly

733
00:32:34,019 --> 00:32:38,548
down here you can see those are just

734
00:32:36,388 --> 00:32:41,189
going to get these values sum together

735
00:32:38,548 --> 00:32:44,220
so the ref C is gonna it's gonna tally

736
00:32:41,190 --> 00:32:47,399
it up and in this case we already have

737
00:32:44,220 --> 00:32:50,410
counts so for each of these we can also

738
00:32:47,398 --> 00:32:53,739
now normalize that so this here

739
00:32:50,410 --> 00:32:58,540
can be multiplied by the inverse so we

740
00:32:53,740 --> 00:33:01,569
can do one over the the total sum so the

741
00:32:58,539 --> 00:33:03,430
total sum and the a side is count a we

742
00:33:01,569 --> 00:33:05,349
can multiply that by the ref to

743
00:33:03,430 --> 00:33:06,820
basically get it back down this is an

744
00:33:05,349 --> 00:33:09,309
average right so we're taking the

745
00:33:06,819 --> 00:33:13,419
average so to rescale it back down to

746
00:33:09,309 --> 00:33:16,019
the appropriate scale so ref CA and ref

747
00:33:13,420 --> 00:33:17,950
CB in this case can both be

748
00:33:16,019 --> 00:33:19,720
automatically normalized am because we

749
00:33:17,950 --> 00:33:21,220
know that they've each got a count on

750
00:33:19,720 --> 00:33:24,430
them otherwise we wouldn't have recorded

751
00:33:21,220 --> 00:33:26,710
it right so I think that gives us all we

752
00:33:24,430 --> 00:33:29,440
really need for the splitting there the

753
00:33:26,710 --> 00:33:33,150
only problem is that the initial one the

754
00:33:29,440 --> 00:33:37,000
top level right doesn't get the value

755
00:33:33,150 --> 00:33:40,960
and that's an issue we need the the

756
00:33:37,000 --> 00:33:44,559
light box the root box itself needs to

757
00:33:40,960 --> 00:33:47,759
know that piece of information in order

758
00:33:44,559 --> 00:33:51,519
to figure out like you know what it's

759
00:33:47,759 --> 00:33:54,250
composite value should be and so for the

760
00:33:51,519 --> 00:33:57,190
particular case of the root we kind of

761
00:33:54,250 --> 00:34:00,190
need a separate summation pass that we

762
00:33:57,190 --> 00:34:03,970
don't actually get this way and so I

763
00:34:00,190 --> 00:34:05,890
think what we may want to do here is we

764
00:34:03,970 --> 00:34:09,280
may just want to say this thing always

765
00:34:05,890 --> 00:34:10,980
has to split try think if there's any

766
00:34:09,280 --> 00:34:13,179
another way they didn't really do this

767
00:34:10,980 --> 00:34:18,190
because since you have to look at them

768
00:34:13,179 --> 00:34:21,309
in order to decide to split you kind of

769
00:34:18,190 --> 00:34:31,869
just want to make sure that that happens

770
00:34:21,309 --> 00:34:33,820
in line yeah I don't know I couldn't

771
00:34:31,869 --> 00:34:36,549
really say I don't really know how they

772
00:34:33,820 --> 00:34:38,530
should go but you can see the problem

773
00:34:36,550 --> 00:34:43,060
like like the root box

774
00:34:38,530 --> 00:34:44,530
in the in this case doesn't get a proper

775
00:34:43,059 --> 00:34:46,570
value and we would have to write a

776
00:34:44,530 --> 00:34:49,540
completely separate routine that just

777
00:34:46,570 --> 00:34:50,980
spun through the children of it to

778
00:34:49,539 --> 00:34:53,110
actually produce that composite value

779
00:34:50,980 --> 00:34:57,369
which seems wrecker real pain in the

780
00:34:53,110 --> 00:34:59,260
butt and so that's kind of annoying and

781
00:34:57,369 --> 00:35:04,380
it would be nice if we didn't have to do

782
00:34:59,260 --> 00:35:15,870
it but on the whole I guess I can't say

783
00:35:04,380 --> 00:35:18,329
I guess I I don't really know how we

784
00:35:15,869 --> 00:35:20,159
would get around that I don't see an

785
00:35:18,329 --> 00:35:21,269
obvious way of tightening this code up

786
00:35:20,159 --> 00:35:23,279
so that I don't have to write that

787
00:35:21,269 --> 00:35:25,139
routine separately because basically it

788
00:35:23,280 --> 00:35:26,760
only actually happens on the split and

789
00:35:25,139 --> 00:35:30,059
we could force it so that it always had

790
00:35:26,760 --> 00:35:31,590
to split the first time around and the

791
00:35:30,059 --> 00:35:33,599
only problem there is like what if you

792
00:35:31,590 --> 00:35:38,329
feed it something that can't be split

793
00:35:33,599 --> 00:35:38,329
like you have one light source period

794
00:35:38,360 --> 00:35:45,510
that can't be split right so I do think

795
00:35:42,719 --> 00:35:48,599
maybe what we kind of need to do here is

796
00:35:45,510 --> 00:35:58,740
just actually bite the bullet and make

797
00:35:48,599 --> 00:36:03,900
sure that we you know right I mean I

798
00:35:58,739 --> 00:36:07,769
hate to do it but I don't know what else

799
00:36:03,900 --> 00:36:09,389
to do right I mean I just I feel like

800
00:36:07,769 --> 00:36:12,690
that just has to happen

801
00:36:09,389 --> 00:36:15,239
so it's annoying and stupid but I don't

802
00:36:12,690 --> 00:36:17,220
know you know it eludes me at least at

803
00:36:15,239 --> 00:36:18,899
the immediate moment not having thought

804
00:36:17,219 --> 00:36:20,699
about it very much but it eludes me at

805
00:36:18,900 --> 00:36:23,910
the immediate moment how to make that

806
00:36:20,699 --> 00:36:25,739
code so that it you know it can both be

807
00:36:23,909 --> 00:36:28,049
efficient and done in line with a split

808
00:36:25,739 --> 00:36:33,019
and then also kind of have a different

809
00:36:28,050 --> 00:36:38,880
pass that lets you do it this way so

810
00:36:33,019 --> 00:36:41,610
yeah I don't know about that anyway if

811
00:36:38,880 --> 00:36:43,710
we want to compute these right so in

812
00:36:41,610 --> 00:36:45,990
terms of like doing the lookup here

813
00:36:43,710 --> 00:36:48,690
where we do a calculate ref see here's

814
00:36:45,989 --> 00:36:50,489
the root box in question what we're

815
00:36:48,690 --> 00:36:53,880
going to need here is a way to sort of

816
00:36:50,489 --> 00:36:55,649
look up and I mean you know let's let's

817
00:36:53,880 --> 00:36:57,269
use the raycast code as a guide because

818
00:36:55,650 --> 00:37:00,630
that's showing exactly how you do the

819
00:36:57,269 --> 00:37:02,909
lookup so you can see here if we wanted

820
00:37:00,630 --> 00:37:04,890
to loop over the children of this thing

821
00:37:02,909 --> 00:37:10,019
we would do it like this that gives us

822
00:37:04,889 --> 00:37:13,289
the the child boxes so for each child

823
00:37:10,019 --> 00:37:16,710
right we're gonna look up the box inside

824
00:37:13,289 --> 00:37:17,250
the source index here and then we're

825
00:37:16,710 --> 00:37:22,500
going to take

826
00:37:17,250 --> 00:37:24,869
Russy value and some sum it up right so

827
00:37:22,500 --> 00:37:26,849
we know the child count we can basically

828
00:37:24,869 --> 00:37:28,739
say like look if there's no child count

829
00:37:26,849 --> 00:37:31,529
then we don't need to do anything

830
00:37:28,739 --> 00:37:33,959
because obviously we can't compute an

831
00:37:31,530 --> 00:37:35,610
average of no things so in the case of

832
00:37:33,960 --> 00:37:37,650
there's no lights or no occluders then

833
00:37:35,610 --> 00:37:41,280
just zero for the ref see is fine

834
00:37:37,650 --> 00:37:44,329
because it can't really exist but in the

835
00:37:41,280 --> 00:37:49,500
other case here so if we did ref c

836
00:37:44,329 --> 00:37:50,909
equals the initial value of zero then

837
00:37:49,500 --> 00:37:53,059
for each one of these and i guess i

838
00:37:50,909 --> 00:37:55,469
don't know if we may have to do that

839
00:37:53,059 --> 00:37:57,360
sort of separately in fact maybe I'll do

840
00:37:55,469 --> 00:38:05,569
it this way let's let's do it this way

841
00:37:57,360 --> 00:38:08,160
so we're gonna start out assuming zero

842
00:38:05,570 --> 00:38:10,860
we're gonna then go ahead and for each

843
00:38:08,159 --> 00:38:13,679
box we'll take the ref C value and we'll

844
00:38:10,860 --> 00:38:15,990
you know sum them up and then at the end

845
00:38:13,679 --> 00:38:18,119
we will just normalize exactly the way

846
00:38:15,989 --> 00:38:23,759
we were doing it before by taking the

847
00:38:18,119 --> 00:38:25,199
root box table count like so and and and

848
00:38:23,760 --> 00:38:27,720
turning that into a floating point value

849
00:38:25,199 --> 00:38:29,879
that can renormalize so there we've

850
00:38:27,719 --> 00:38:31,949
built our trees and we've properly

851
00:38:29,880 --> 00:38:36,180
updated the ref sea values I mean

852
00:38:31,949 --> 00:38:40,619
barring bugs anyway I and and up here we

853
00:38:36,179 --> 00:38:42,269
just needed to clear those and so now

854
00:38:40,619 --> 00:38:45,029
we're building two spatial partitions

855
00:38:42,269 --> 00:38:47,460
one for light sources one for occluders

856
00:38:45,030 --> 00:38:49,620
and we just now you know we haven't

857
00:38:47,460 --> 00:38:54,829
really I don't think we've messed with

858
00:38:49,619 --> 00:38:57,630
the code in any particular way for the

859
00:38:54,829 --> 00:38:58,799
what's the word I'm looking for I don't

860
00:38:57,630 --> 00:39:01,619
think we've messed with a code in any

861
00:38:58,800 --> 00:39:03,240
particular way for the occluders so

862
00:39:01,619 --> 00:39:05,039
those should still in theory be working

863
00:39:03,239 --> 00:39:07,229
fine so the only thing we really have to

864
00:39:05,039 --> 00:39:09,029
do now is change our get space relief

865
00:39:07,230 --> 00:39:11,969
for p function to really be something

866
00:39:09,030 --> 00:39:14,700
that does more of a light source query

867
00:39:11,969 --> 00:39:18,629
for us and i think all this wants to do

868
00:39:14,699 --> 00:39:20,399
at the moment is just kind of do a query

869
00:39:18,630 --> 00:39:23,539
because normally what we would be doing

870
00:39:20,400 --> 00:39:25,710
is actually sort of building an array

871
00:39:23,539 --> 00:39:27,480
and then randomly picking from it

872
00:39:25,710 --> 00:39:29,760
probably right now what we're going to

873
00:39:27,480 --> 00:39:32,309
do for get spatial leave for p

874
00:39:29,760 --> 00:39:35,220
is just actually pick out the location

875
00:39:32,309 --> 00:39:39,449
here so when we do get spatial leaf 4p

876
00:39:35,219 --> 00:39:42,000
I'm gonna call this get lightly 4p this

877
00:39:39,449 --> 00:39:43,649
is not gonna have to happen now because

878
00:39:42,000 --> 00:39:48,530
now what will happen is when we do get

879
00:39:43,650 --> 00:39:51,690
lightly 4p we can just just give us back

880
00:39:48,530 --> 00:39:53,970
the lightbox and then this can get the

881
00:39:51,690 --> 00:39:59,059
information out of that lightbox so this

882
00:39:53,969 --> 00:40:03,629
can be lightbox P and now we can cast

883
00:39:59,059 --> 00:40:05,929
against it right all right sort of

884
00:40:03,630 --> 00:40:11,010
tangentially this also gives us a way to

885
00:40:05,929 --> 00:40:13,949
understand area light sources more than

886
00:40:11,010 --> 00:40:15,720
we could have before possibly there are

887
00:40:13,949 --> 00:40:18,599
some downsides to how we're doing it

888
00:40:15,719 --> 00:40:20,789
it's kind of hard to say but we'll sort

889
00:40:18,599 --> 00:40:23,849
of we'll work towards these things as we

890
00:40:20,789 --> 00:40:26,009
go so anyway now that we've got all of

891
00:40:23,849 --> 00:40:27,599
this stuff wrapped up I'm really just

892
00:40:26,010 --> 00:40:29,730
looking you know the only problem now is

893
00:40:27,599 --> 00:40:32,159
I have to get this function working and

894
00:40:29,730 --> 00:40:33,358
so if we look at get spatial leaf for P

895
00:40:32,159 --> 00:40:36,509
we're sort of gonna be doing the same

896
00:40:33,358 --> 00:40:39,599
thing but instead here it's get lightly

897
00:40:36,510 --> 00:40:42,420
for P right and so here we're going to

898
00:40:39,599 --> 00:40:43,799
be doing the root lightbox index we're

899
00:40:42,420 --> 00:40:46,170
starting with that we're gonna be

900
00:40:43,800 --> 00:40:47,940
walking the children to find whatever

901
00:40:46,170 --> 00:40:49,710
that index is and then we're going to

902
00:40:47,940 --> 00:40:51,780
return it now if we look at how the

903
00:40:49,710 --> 00:40:57,570
result is working now I do want to

904
00:40:51,780 --> 00:40:59,100
return a lighting box and also in here

905
00:40:57,570 --> 00:41:01,050
where we do the light color we could

906
00:40:59,099 --> 00:41:02,819
also make that the ref see but I'm gonna

907
00:41:01,050 --> 00:41:04,530
do that in separate steps because we're

908
00:41:02,820 --> 00:41:05,809
trying to kind of this is the tesco

909
00:41:04,530 --> 00:41:09,140
we're trying to test that this stuff is

910
00:41:05,809 --> 00:41:09,139
working properly

911
00:41:15,759 --> 00:41:24,400
and so now this should give us the light

912
00:41:18,130 --> 00:41:29,950
that is sort of closest I guess to where

913
00:41:24,400 --> 00:41:31,420
we are and that's I guess I would say we

914
00:41:29,949 --> 00:41:32,618
need to update this a little bit and it

915
00:41:31,420 --> 00:41:35,440
actually makes the routine a little

916
00:41:32,619 --> 00:41:39,309
simpler to what we can't actually say

917
00:41:35,440 --> 00:41:41,409
here is we just want the closest one we

918
00:41:39,309 --> 00:41:42,519
don't want you to have to be inside the

919
00:41:41,409 --> 00:41:44,588
light source because that doesn't make

920
00:41:42,518 --> 00:41:46,298
any sense so what we really want to do

921
00:41:44,588 --> 00:41:47,980
here I guess is say look there's a

922
00:41:46,298 --> 00:41:52,719
result we're gonna assume it's the route

923
00:41:47,980 --> 00:41:54,670
light while we are inside the volume of

924
00:41:52,719 --> 00:42:00,909
this thing we can divide it down further

925
00:41:54,670 --> 00:42:02,650
so we just say look while or rather we

926
00:42:00,909 --> 00:42:12,098
know that that's got to be true so we

927
00:42:02,650 --> 00:42:14,170
can just do this and say if this thing

928
00:42:12,099 --> 00:42:17,890
has children I guess you know what

929
00:42:14,170 --> 00:42:20,680
here's the thing that's what we really

930
00:42:17,889 --> 00:42:23,170
want so while we haven't expanded down

931
00:42:20,679 --> 00:42:25,318
to a single light source keep going

932
00:42:23,170 --> 00:42:27,730
and in here we would just say all right

933
00:42:25,318 --> 00:42:29,858
for each one of these things we just

934
00:42:27,730 --> 00:42:34,690
pick whichever one of these is closest

935
00:42:29,858 --> 00:42:38,920
right and we expand the closest one so

936
00:42:34,690 --> 00:42:41,108
instead of doing a is in rectangle I

937
00:42:38,920 --> 00:42:47,349
think we want like a get distance or

938
00:42:41,108 --> 00:42:55,920
like distance to box and I guess we

939
00:42:47,349 --> 00:42:55,920
don't have that which is what we want

940
00:42:56,219 --> 00:43:00,730
that's unfortunate I guess I'll have to

941
00:42:58,599 --> 00:43:06,190
write it but what we effectively want

942
00:43:00,730 --> 00:43:08,730
here is a best distance to rectangle so

943
00:43:06,190 --> 00:43:11,019
we want like a closest distance right

944
00:43:08,730 --> 00:43:14,469
and then we want to do is loop through

945
00:43:11,018 --> 00:43:15,848
the children of this thing and if there

946
00:43:14,469 --> 00:43:18,308
was you know we know there's a child

947
00:43:15,849 --> 00:43:20,230
count because we've said we won't have

948
00:43:18,309 --> 00:43:21,519
descendant if there wasn't and so we

949
00:43:20,230 --> 00:43:23,588
want to do is take the closest distance

950
00:43:21,518 --> 00:43:25,479
for each one of these things we would

951
00:43:23,588 --> 00:43:27,049
say like this distance equals get

952
00:43:25,480 --> 00:43:30,530
distance

953
00:43:27,050 --> 00:43:35,360
to Fox and we would just you know do

954
00:43:30,530 --> 00:43:43,960
this right and we would say if this

955
00:43:35,360 --> 00:43:43,960
distance is a better distance use it

956
00:43:46,989 --> 00:43:51,079
right and so this is just the thing

957
00:43:49,820 --> 00:43:53,120
that's going to go through and like take

958
00:43:51,079 --> 00:43:56,059
the closest Fox whatever the closest box

959
00:43:53,119 --> 00:44:00,319
is to it is to us we will expand it and

960
00:43:56,059 --> 00:44:03,110
take you know that result this is not

961
00:44:00,320 --> 00:44:13,940
actually you know I'm gonna put a note

962
00:44:03,110 --> 00:44:17,480
here right this does not actually

963
00:44:13,940 --> 00:44:18,740
guarantee that that this that you're

964
00:44:17,480 --> 00:44:21,710
gonna get the closest light source and

965
00:44:18,739 --> 00:44:24,709
the reason for that is because you would

966
00:44:21,710 --> 00:44:26,329
need to revisit other parts of the tree

967
00:44:24,710 --> 00:44:28,400
to ensure that there wasn't something

968
00:44:26,329 --> 00:44:30,409
inside a bounding box that was actually

969
00:44:28,400 --> 00:44:32,210
closer even though that bounding box was

970
00:44:30,409 --> 00:44:33,889
further away and the reason for that is

971
00:44:32,210 --> 00:44:35,840
of course when you create bounding boxes

972
00:44:33,889 --> 00:44:38,179
they're approximations to what's inside

973
00:44:35,840 --> 00:44:40,070
them you don't know if there was

974
00:44:38,179 --> 00:44:42,109
actually a light source anywhere near

975
00:44:40,070 --> 00:44:44,090
that boundary that you found was closest

976
00:44:42,110 --> 00:44:46,430
to you and so you're just kind of saying

977
00:44:44,090 --> 00:44:48,590
well this might be something close to me

978
00:44:46,429 --> 00:44:51,409
but it's not necessarily and so we're

979
00:44:48,590 --> 00:44:54,710
not trying in this case to actually find

980
00:44:51,409 --> 00:44:58,429
that exact result and so I just want to

981
00:44:54,710 --> 00:45:00,139
make you know that clear so in terms of

982
00:44:58,429 --> 00:45:02,839
finding the distance to the box I guess

983
00:45:00,139 --> 00:45:05,239
we don't have any functions in our math

984
00:45:02,840 --> 00:45:10,789
library for doing that unfortunately so

985
00:45:05,239 --> 00:45:13,399
that's a little unfortunate right but if

986
00:45:10,789 --> 00:45:14,960
we wanted to have one right and we want

987
00:45:13,400 --> 00:45:17,780
to say get this since the box and we

988
00:45:14,960 --> 00:45:20,389
just said Center you know radius P or

989
00:45:17,780 --> 00:45:23,330
whatever if I wanted to be able to do

990
00:45:20,389 --> 00:45:24,980
this it's actually not that bad really

991
00:45:23,329 --> 00:45:27,259
you probably want to do this off of an

992
00:45:24,980 --> 00:45:29,210
actual rectangle because you kind of

993
00:45:27,260 --> 00:45:32,840
want the min and Max which again I'm not

994
00:45:29,210 --> 00:45:34,639
sure it why we may want to change our

995
00:45:32,840 --> 00:45:36,829
boxes to storing mins and maxes instead

996
00:45:34,639 --> 00:45:38,190
of peas and radii and the reason for

997
00:45:36,829 --> 00:45:40,469
that is just looking at it

998
00:45:38,190 --> 00:45:42,030
I'm not sure that it seems like we want

999
00:45:40,469 --> 00:45:44,699
the min and Max way more often than we

1000
00:45:42,030 --> 00:45:48,000
want the center and so you know I might

1001
00:45:44,699 --> 00:45:49,889
put that in here as a thing to do it's

1002
00:45:48,000 --> 00:45:51,539
just an efficiency concern when we're

1003
00:45:49,889 --> 00:45:54,000
all done I'd like to look at that

1004
00:45:51,539 --> 00:45:55,320
because you know just want to make sure

1005
00:45:54,000 --> 00:46:18,150
you're not doing extra math you don't

1006
00:45:55,320 --> 00:46:19,559
have to do so we may want to change that

1007
00:46:18,150 --> 00:46:21,119
and we'll leave that for later because

1008
00:46:19,559 --> 00:46:22,980
it's strictly an efficiency concern

1009
00:46:21,119 --> 00:46:25,529
doesn't affect the math in any way it's

1010
00:46:22,980 --> 00:46:28,590
just hey which one of these things

1011
00:46:25,530 --> 00:46:31,860
results in less ops to do the same you

1012
00:46:28,590 --> 00:46:33,960
know math that we're trying to do so we

1013
00:46:31,860 --> 00:46:36,539
want to make sure that we're not doing

1014
00:46:33,960 --> 00:46:38,159
extraneous sort of adjustments that

1015
00:46:36,539 --> 00:46:40,949
don't need to happen because of our the

1016
00:46:38,159 --> 00:46:42,420
way we chose to store it now when we

1017
00:46:40,949 --> 00:46:44,069
call get this since the box what we need

1018
00:46:42,420 --> 00:46:45,869
to do here is say all right let's figure

1019
00:46:44,070 --> 00:46:51,660
out how far away we are from each of

1020
00:46:45,869 --> 00:46:55,049
these things and I think really this is

1021
00:46:51,659 --> 00:46:55,769
just a series of mins and maxes trying

1022
00:46:55,050 --> 00:46:59,190
to think if there's anything

1023
00:46:55,769 --> 00:47:02,849
particularly weird about it but I think

1024
00:46:59,190 --> 00:47:07,409
you just need to take the minimum

1025
00:47:02,849 --> 00:47:08,889
distance from each of the sides of the

1026
00:47:07,409 --> 00:47:12,329
box right

1027
00:47:08,889 --> 00:47:12,329
[Music]

1028
00:47:23,760 --> 00:47:31,830
I think so so I think it's just this I

1029
00:47:28,099 --> 00:47:35,039
think we just say the test point that

1030
00:47:31,829 --> 00:47:37,500
we're going to create is going to be the

1031
00:47:35,039 --> 00:47:46,769
so you know I'm actually going to do

1032
00:47:37,500 --> 00:47:50,340
this so if I take the box top min right

1033
00:47:46,769 --> 00:47:54,239
and I say look what I want you to do is

1034
00:47:50,340 --> 00:47:58,170
create a fictitious point on the box

1035
00:47:54,239 --> 00:48:00,779
that is the closest point to us and what

1036
00:47:58,170 --> 00:48:05,400
we would do there is say well that point

1037
00:48:00,780 --> 00:48:12,240
you know is going to be the minimum of

1038
00:48:05,400 --> 00:48:14,490
the box and us right so whichever of

1039
00:48:12,239 --> 00:48:18,659
these I'm sorry the maximum of these two

1040
00:48:14,489 --> 00:48:20,969
so whichever one of these is kind of

1041
00:48:18,659 --> 00:48:28,289
closer they're right and then the

1042
00:48:20,969 --> 00:48:29,669
minimum versus the maximum of that right

1043
00:48:28,289 --> 00:48:32,639
and so if you look at what happens here

1044
00:48:29,670 --> 00:48:36,869
we're basically saying look if you you

1045
00:48:32,639 --> 00:48:39,449
know first of all take the the the box's

1046
00:48:36,869 --> 00:48:43,680
minimum spent you know the place where

1047
00:48:39,449 --> 00:48:47,009
the box starts and us so if we are

1048
00:48:43,679 --> 00:48:48,449
further if we're further to the left on

1049
00:48:47,010 --> 00:48:50,609
the number line if you will of this

1050
00:48:48,449 --> 00:48:51,629
thing we're gonna take the boxes one but

1051
00:48:50,608 --> 00:48:55,259
if we're further to the right we're

1052
00:48:51,630 --> 00:48:57,119
gonna take us and then we're gonna do

1053
00:48:55,260 --> 00:48:59,190
the same thing on the other side but for

1054
00:48:57,119 --> 00:49:00,960
the maximum values so if we're less than

1055
00:48:59,190 --> 00:49:02,820
the maximum value we're gonna keep

1056
00:49:00,960 --> 00:49:05,010
ourselves but if we're further we're

1057
00:49:02,820 --> 00:49:07,080
gonna take that so this just clips the

1058
00:49:05,010 --> 00:49:10,650
point effectively to inside the box

1059
00:49:07,079 --> 00:49:13,469
right and what we want to do we don't

1060
00:49:10,650 --> 00:49:17,160
have an element minimum do we or a

1061
00:49:13,469 --> 00:49:20,029
minimum that works on vectors I don't

1062
00:49:17,159 --> 00:49:20,029
know if we do we know

1063
00:49:21,150 --> 00:49:30,180
well we sort of do that we have that one

1064
00:49:25,730 --> 00:49:32,579
well but ounce I don't see one for

1065
00:49:30,179 --> 00:49:35,838
actuators um so if you take a look at

1066
00:49:32,579 --> 00:49:39,119
what this is doing its just producing a

1067
00:49:35,838 --> 00:49:41,940
a clipping of our point to the box

1068
00:49:39,119 --> 00:49:45,119
itself right and if we do this for each

1069
00:49:41,940 --> 00:49:47,460
of our sort of coordinates separately

1070
00:49:45,119 --> 00:49:50,640
then what we get is a point that is on

1071
00:49:47,460 --> 00:49:53,039
or inside the box that is the closest

1072
00:49:50,639 --> 00:49:56,548
point to us by definition right because

1073
00:49:53,039 --> 00:49:58,859
it tried to move to be as close to us as

1074
00:49:56,548 --> 00:50:00,748
it could be without exceeding the box at

1075
00:49:58,858 --> 00:50:04,768
that point I think we just take the

1076
00:50:00,748 --> 00:50:06,088
distance and we're done and I'm going to

1077
00:50:04,768 --> 00:50:09,659
make this a squared distance because

1078
00:50:06,088 --> 00:50:12,318
that felt that means we don't take the

1079
00:50:09,659 --> 00:50:14,879
square root which in a lot of cases is

1080
00:50:12,318 --> 00:50:19,259
all we would really need so why bother

1081
00:50:14,880 --> 00:50:21,599
taking square it you don't need to right

1082
00:50:19,259 --> 00:50:24,269
and so what I might do is break this

1083
00:50:21,599 --> 00:50:30,210
into two functions one is get closest

1084
00:50:24,268 --> 00:50:38,248
point in box and so this actually

1085
00:50:30,210 --> 00:50:41,220
returns us that point right so here's

1086
00:50:38,248 --> 00:50:42,868
the resulting P and then here where we

1087
00:50:41,219 --> 00:50:45,709
do the extra little closest distance now

1088
00:50:42,869 --> 00:50:49,950
I would just say like oh okay so closest

1089
00:50:45,710 --> 00:50:53,568
you know P that's something we needed to

1090
00:50:49,949 --> 00:50:56,068
do anyway oops so we might as well have

1091
00:50:53,568 --> 00:50:59,338
allow whoever is calling us to get

1092
00:50:56,068 --> 00:51:01,469
either one so they can choose whatever

1093
00:50:59,338 --> 00:51:04,199
they want to do here so then we can say

1094
00:51:01,469 --> 00:51:07,048
well the closest point you know is it's

1095
00:51:04,199 --> 00:51:08,848
here so the distance squared to it is

1096
00:51:07,048 --> 00:51:13,679
you know just this standard length

1097
00:51:08,849 --> 00:51:17,338
squared call right so I think that's all

1098
00:51:13,679 --> 00:51:17,909
we need and yeah I don't see what else

1099
00:51:17,338 --> 00:51:20,900
didn't either

1100
00:51:17,909 --> 00:51:20,899
what is it complaining about

1101
00:51:21,550 --> 00:51:27,369
I don't know what it's actually

1102
00:51:25,510 --> 00:51:27,790
complaining about to complete house with

1103
00:51:27,369 --> 00:51:30,220
you

1104
00:51:27,789 --> 00:51:43,989
what is the rectangle 3 defined to be

1105
00:51:30,219 --> 00:51:47,969
min and Max can ocular are from real 32

1106
00:51:43,989 --> 00:51:47,969
to vector 3

1107
00:51:59,728 --> 00:52:04,748
that closes the max that closes the min

1108
00:52:02,978 --> 00:52:11,409
and that's the comma what is the

1109
00:52:04,748 --> 00:52:18,808
complaint cannot convert argument 1 in

1110
00:52:11,409 --> 00:52:20,978
max so there is a max for that oh ok

1111
00:52:18,809 --> 00:52:22,298
nevermind we do it's right here I don't

1112
00:52:20,978 --> 00:52:24,399
know why I couldn't find it before I was

1113
00:52:22,298 --> 00:52:26,170
just looking it up stupid I guess so

1114
00:52:24,400 --> 00:52:27,460
that is exactly what we want we just

1115
00:52:26,170 --> 00:52:30,940
want that you know this is the element

1116
00:52:27,460 --> 00:52:33,338
min max right so you know this code now

1117
00:52:30,940 --> 00:52:43,119
is much easier right it's just Fox Max

1118
00:52:33,338 --> 00:52:44,920
min box min P right so that's all we

1119
00:52:43,119 --> 00:52:56,190
actually wanted I didn't know we had one

1120
00:52:44,920 --> 00:52:59,259
of those but I guess we do right ok so

1121
00:52:56,190 --> 00:53:00,579
now that we have that that makes it

1122
00:52:59,259 --> 00:53:02,139
easier to do our queries because now we

1123
00:53:00,579 --> 00:53:03,278
can just ask those questions about the

1124
00:53:02,139 --> 00:53:05,558
box

1125
00:53:03,278 --> 00:53:07,838
and that sort of makes me curious as

1126
00:53:05,559 --> 00:53:10,690
well like I'm now wondering like do we

1127
00:53:07,838 --> 00:53:17,248
have a min thing that happens here but

1128
00:53:10,690 --> 00:53:24,298
anywhere else no we don't I'm Sam yeah

1129
00:53:17,248 --> 00:53:24,298
anyway that's a typo

1130
00:53:29,119 --> 00:53:34,500
yeah so it should be the maximum of the

1131
00:53:31,920 --> 00:53:36,838
min and P like whichever one is higher

1132
00:53:34,500 --> 00:53:40,139
right and then the minimum of the

1133
00:53:36,838 --> 00:53:45,298
maximum and that sorry that was shifted

1134
00:53:40,139 --> 00:53:48,598
around all right so now we just need

1135
00:53:45,298 --> 00:53:50,730
this thing to actually call that

1136
00:53:48,599 --> 00:53:52,588
properly and so since we don't have a

1137
00:53:50,730 --> 00:53:54,900
min in the max here again I think that

1138
00:53:52,588 --> 00:54:07,588
means we want these boxes to have mins

1139
00:53:54,900 --> 00:54:09,180
and maxes in them but yeah so here's the

1140
00:54:07,588 --> 00:54:14,009
center half dem construction of that

1141
00:54:09,179 --> 00:54:17,190
thing like so and again I think like

1142
00:54:14,010 --> 00:54:19,140
just that repeated sort of asking what

1143
00:54:17,190 --> 00:54:21,920
the min and Max is it just means we

1144
00:54:19,139 --> 00:54:25,259
probably shouldn't be doing it that way

1145
00:54:21,920 --> 00:54:28,889
this is unnecessary now and I think now

1146
00:54:25,260 --> 00:54:31,559
we will get the lighting out relatively

1147
00:54:28,889 --> 00:54:33,269
reliable it will see so this is goodness

1148
00:54:31,559 --> 00:54:35,579
is devoxx squared and these are all

1149
00:54:33,269 --> 00:54:37,409
squared distances because we can compare

1150
00:54:35,579 --> 00:54:40,048
squared distances and never square root

1151
00:54:37,409 --> 00:54:44,399
anything in this case so I think that's

1152
00:54:40,048 --> 00:54:46,259
what we want so I think that will do

1153
00:54:44,400 --> 00:54:50,670
what we need and now we will be able to

1154
00:54:46,260 --> 00:54:52,710
get our actual lighting information out

1155
00:54:50,670 --> 00:54:54,450
when we do get lightly 4p that'll tell

1156
00:54:52,710 --> 00:54:56,760
us where the actual light is and also

1157
00:54:54,449 --> 00:54:59,009
what its color is which we can start to

1158
00:54:56,760 --> 00:55:01,589
test all right so a bunch of codes fam

1159
00:54:59,010 --> 00:55:03,809
doubt there let's get it working and

1160
00:55:01,588 --> 00:55:06,420
then we can proceed I think with with

1161
00:55:03,809 --> 00:55:11,039
what we need to do so you can see it's

1162
00:55:06,420 --> 00:55:13,528
kind of busted right you know just not

1163
00:55:11,039 --> 00:55:17,099
obviously completely wrong but also

1164
00:55:13,528 --> 00:55:19,019
obviously buggy so now we're gonna have

1165
00:55:17,099 --> 00:55:22,048
to start like figuring out what's going

1166
00:55:19,019 --> 00:55:24,989
on right so the first thing I would like

1167
00:55:22,048 --> 00:55:28,409
to do is just take a look at what the

1168
00:55:24,989 --> 00:55:32,028
actual code is returning so for example

1169
00:55:28,409 --> 00:55:35,250
like you know in just this part here I

1170
00:55:32,028 --> 00:55:37,230
would like to go see I don't know is

1171
00:55:35,250 --> 00:55:39,588
this is this release mode because I

1172
00:55:37,230 --> 00:55:42,858
probably want to change to debug mode

1173
00:55:39,588 --> 00:55:45,798
yeah so in debug mode what I'd like to

1174
00:55:42,858 --> 00:55:47,659
do is I'd like to take this lighting

1175
00:55:45,798 --> 00:55:49,369
solution here and say what are we

1176
00:55:47,659 --> 00:55:54,498
actually getting back in that routine

1177
00:55:49,369 --> 00:55:55,910
right so you know for this you can see

1178
00:55:54,498 --> 00:56:00,379
it's debug mode now so the framerate

1179
00:55:55,909 --> 00:56:02,929
slower I want to go into the lighting

1180
00:56:00,380 --> 00:56:06,108
code and just see that what's happening

1181
00:56:02,929 --> 00:56:09,498
in that test cast so here's the lighting

1182
00:56:06,108 --> 00:56:09,768
code here let me go to that test we

1183
00:56:09,498 --> 00:56:11,808
don't

1184
00:56:09,768 --> 00:56:23,209
well not that test cast the other test

1185
00:56:11,809 --> 00:56:27,079
cast so where is it should be right here

1186
00:56:23,210 --> 00:56:28,608
there it is so in this test cast from

1187
00:56:27,079 --> 00:56:30,559
probes where we're looking over this

1188
00:56:28,608 --> 00:56:32,989
stuff here what I'd like to do is just

1189
00:56:30,559 --> 00:56:34,670
have a thing where I take a look at this

1190
00:56:32,989 --> 00:56:37,130
and see because I know what the debug

1191
00:56:34,670 --> 00:56:41,298
light was actually set to I'd like to

1192
00:56:37,130 --> 00:56:46,900
see what this thing tells us right so if

1193
00:56:41,298 --> 00:56:46,900
you look inside the solution oops that

1194
00:56:47,409 --> 00:56:55,818
will have our debug light P in it

1195
00:56:52,358 --> 00:56:58,489
somewhere there it is so we know that

1196
00:56:55,818 --> 00:57:00,978
like this is what the light is supposed

1197
00:56:58,489 --> 00:57:04,278
to be at like that's where we should get

1198
00:57:00,978 --> 00:57:06,468
our results if the push happened

1199
00:57:04,278 --> 00:57:08,449
properly so let's see what we actually

1200
00:57:06,469 --> 00:57:11,659
get when we go into this light box thing

1201
00:57:08,449 --> 00:57:14,868
and and what it actually tells us so

1202
00:57:11,659 --> 00:57:17,719
when we go here we're gonna see

1203
00:57:14,869 --> 00:57:20,930
something right we've got a child count

1204
00:57:17,719 --> 00:57:24,469
which seems good there's two children I

1205
00:57:20,929 --> 00:57:26,858
don't know why because when I think

1206
00:57:24,469 --> 00:57:34,039
about it it feels like the number of

1207
00:57:26,858 --> 00:57:37,639
children should not be that in fact as

1208
00:57:34,039 --> 00:57:40,519
as I'm thinking about it what I really

1209
00:57:37,639 --> 00:57:43,578
want to do is step into the other part

1210
00:57:40,518 --> 00:57:50,669
so I'm assuming there should have only

1211
00:57:43,579 --> 00:57:57,099
been one actual light

1212
00:57:50,670 --> 00:57:58,389
so when we are builds facial this part

1213
00:57:57,099 --> 00:58:01,359
here where we do build face pressures

1214
00:57:58,389 --> 00:58:05,920
rear lighting this should have only

1215
00:58:01,358 --> 00:58:10,239
produced one child and that is not what

1216
00:58:05,920 --> 00:58:15,940
happened so I'm wondering if this actual

1217
00:58:10,239 --> 00:58:20,559
ah there you go so that was that was

1218
00:58:15,940 --> 00:58:22,690
wrong we were passing the the number of

1219
00:58:20,559 --> 00:58:23,889
boxes not the number of lights because

1220
00:58:22,690 --> 00:58:25,599
I'm like all right we shouldn't have

1221
00:58:23,889 --> 00:58:29,440
seen you know that that what I just saw

1222
00:58:25,599 --> 00:58:32,050
was not what we should have seen so you

1223
00:58:29,440 --> 00:58:33,338
know not good so now when we step

1224
00:58:32,050 --> 00:58:36,190
through here I should see a child kind

1225
00:58:33,338 --> 00:58:39,880
of one I'm hoping nope still - all right

1226
00:58:36,190 --> 00:58:45,429
never mind let's go just take a look in

1227
00:58:39,880 --> 00:58:51,160
there let's see what's going on because

1228
00:58:45,429 --> 00:58:53,559
I don't know maybe we're pushing a lot

1229
00:58:51,159 --> 00:58:56,348
more lights on there in fact you know

1230
00:58:53,559 --> 00:59:00,460
what I just realized we I guess we are

1231
00:58:56,349 --> 00:59:02,050
so because we probably are still pushing

1232
00:59:00,460 --> 00:59:05,710
on like the lights from the lamps and

1233
00:59:02,050 --> 00:59:07,660
stuff so you know maybe I should stop

1234
00:59:05,710 --> 00:59:11,530
doing that for testing purposes but yeah

1235
00:59:07,659 --> 00:59:14,858
okay so actual light count is eight so

1236
00:59:11,530 --> 00:59:19,660
okay - isn't isn't stupid then that's

1237
00:59:14,858 --> 00:59:22,568
fine let's go ahead and just run this if

1238
00:59:19,659 --> 00:59:25,449
I look at get lightly for pee now child

1239
00:59:22,568 --> 00:59:29,199
count of two well that's okay right

1240
00:59:25,449 --> 00:59:31,779
No no harm done we're gonna look through

1241
00:59:29,199 --> 00:59:34,809
it here try to find the closest one and

1242
00:59:31,780 --> 00:59:37,240
I'm hoping that the closest one is still

1243
00:59:34,809 --> 00:59:38,769
actually you know let's let's take a

1244
00:59:37,239 --> 00:59:42,419
look at what these distance Squared's

1245
00:59:38,769 --> 00:59:45,420
are here just in case that that's also

1246
00:59:42,420 --> 00:59:45,420
messy

1247
00:59:55,398 --> 01:00:06,598
so there's the min and the max that's

1248
01:00:00,958 --> 01:00:11,778
quite large so I guess that's hopefully

1249
01:00:06,599 --> 01:00:11,778
not a leaf node

1250
01:00:24,960 --> 01:00:31,900
I'm not really sure what's going on here

1251
01:00:28,889 --> 01:00:34,480
why are all these so similar I guess

1252
01:00:31,900 --> 01:00:37,750
maybe they could be right but why would

1253
01:00:34,480 --> 01:00:46,920
you need this many nodes just to divide

1254
01:00:37,750 --> 01:00:49,000
up eight lights this just seems nuts

1255
01:00:46,920 --> 01:00:56,400
something's wrong here so we got the

1256
01:00:49,000 --> 01:00:56,400
root light box index this way right

1257
01:00:56,489 --> 01:01:00,578
which I assume is the correct way to do

1258
01:00:58,900 --> 01:01:02,380
it but we should probably go check that

1259
01:01:00,579 --> 01:01:05,500
that's actually correct I mean I don't

1260
01:01:02,380 --> 01:01:07,420
really know okay so we should probably

1261
01:01:05,500 --> 01:01:10,210
figure that out

1262
01:01:07,420 --> 01:01:11,858
we're going in too and in fact I guess I

1263
01:01:10,210 --> 01:01:14,650
could look at the raycast to find out

1264
01:01:11,858 --> 01:01:16,900
yeah it looks like that so that works so

1265
01:01:14,650 --> 01:01:18,519
we're getting that box out we're going

1266
01:01:16,900 --> 01:01:19,720
through the children of it which i think

1267
01:01:18,519 --> 01:01:22,469
is correct

1268
01:01:19,719 --> 01:01:24,848
so we're iterating over the sources here

1269
01:01:22,469 --> 01:01:30,309
and then we're just trying to pick out

1270
01:01:24,849 --> 01:01:34,660
whatever the next best result is in this

1271
01:01:30,309 --> 01:01:39,940
case and I guess the problem is you know

1272
01:01:34,659 --> 01:01:42,250
we want the result too if we never found

1273
01:01:39,940 --> 01:01:45,010
something closer I guess we just want to

1274
01:01:42,250 --> 01:01:48,429
exit right so if the thing we found so

1275
01:01:45,010 --> 01:01:51,010
far was the closest thing then we don't

1276
01:01:48,429 --> 01:01:52,838
want to keep going but I would assume we

1277
01:01:51,010 --> 01:01:54,220
want to always expand down until we get

1278
01:01:52,838 --> 01:01:59,529
to something with no children although

1279
01:01:54,219 --> 01:02:04,118
maybe we wouldn't always do that but I

1280
01:01:59,530 --> 01:02:05,950
think you would look I don't know how

1281
01:02:04,119 --> 01:02:10,510
this didn't terminate like basically

1282
01:02:05,949 --> 01:02:11,529
right away something's weird there I'm

1283
01:02:10,510 --> 01:02:13,060
gonna have to go look at the tree

1284
01:02:11,530 --> 01:02:14,619
construction and find out what's going

1285
01:02:13,059 --> 01:02:19,809
on that doesn't really make any sense to

1286
01:02:14,619 --> 01:02:21,579
me to be honest with you so we can draw

1287
01:02:19,809 --> 01:02:26,230
that traversal out which we probably

1288
01:02:21,579 --> 01:02:27,760
will have to do and you know we'll

1289
01:02:26,230 --> 01:02:31,659
probably you know have to do it for like

1290
01:02:27,760 --> 01:02:34,450
one point or something like that I but

1291
01:02:31,659 --> 01:02:36,098
yeah like I just don't understand what

1292
01:02:34,449 --> 01:02:37,609
exactly is happening there with the

1293
01:02:36,099 --> 01:02:40,190
closest light

1294
01:02:37,610 --> 01:02:41,840
travursel that that that spatial

1295
01:02:40,190 --> 01:02:47,389
partition doesn't really make any sense

1296
01:02:41,840 --> 01:02:49,280
to me I'm not I'm not clear on what's

1297
01:02:47,389 --> 01:02:59,539
going on there because if you look at

1298
01:02:49,280 --> 01:03:02,510
what's happening oh wait this this also

1299
01:02:59,539 --> 01:03:04,039
what is this about that's I mean that

1300
01:03:02,510 --> 01:03:05,150
doesn't affect anything cuz we overwrite

1301
01:03:04,039 --> 01:03:07,909
it but that wasn't shouldn't have been

1302
01:03:05,150 --> 01:03:10,880
there either so this should be adding

1303
01:03:07,909 --> 01:03:14,839
all of the lightbox indexes here so that

1304
01:03:10,880 --> 01:03:17,079
they you know they occur in a row so

1305
01:03:14,840 --> 01:03:20,750
that the eight things that happen after

1306
01:03:17,079 --> 01:03:22,219
the root box root lightbox index here

1307
01:03:20,750 --> 01:03:29,030
right

1308
01:03:22,219 --> 01:03:31,699
I guess this should be a plus one so

1309
01:03:29,030 --> 01:03:33,110
that itself is not categorized maybe

1310
01:03:31,699 --> 01:03:34,369
that's what our problem is there but I

1311
01:03:33,110 --> 01:03:37,640
seems like there's probably more

1312
01:03:34,369 --> 01:03:38,779
problems than that we'll start there but

1313
01:03:37,639 --> 01:03:40,699
I'm really gonna have to step through

1314
01:03:38,780 --> 01:03:42,380
that construction and see what the heck

1315
01:03:40,699 --> 01:03:44,960
is going on and I also want to draw it

1316
01:03:42,380 --> 01:03:48,079
like I'd like to take this right here

1317
01:03:44,960 --> 01:03:50,449
and draw what that spatial walk looks

1318
01:03:48,079 --> 01:03:55,489
like for some known point so what I

1319
01:03:50,449 --> 01:03:58,579
might do is in get spatial or get

1320
01:03:55,489 --> 01:04:02,869
lightly for P right what I should

1321
01:03:58,579 --> 01:04:08,750
probably do is in here say okay for each

1322
01:04:02,869 --> 01:04:13,639
of these boxes that we get like draw the

1323
01:04:08,750 --> 01:04:15,800
box if this isn't the test right so

1324
01:04:13,639 --> 01:04:19,750
we'll do an is test case here and then

1325
01:04:15,800 --> 01:04:23,450
like the push debug box or I don't know

1326
01:04:19,750 --> 01:04:28,269
yeah that so push debug box should

1327
01:04:23,449 --> 01:04:31,489
probably go on here and in this I should

1328
01:04:28,269 --> 01:04:35,829
say for every single one of these you

1329
01:04:31,489 --> 01:04:35,829
know draw it right so

1330
01:04:37,849 --> 01:05:06,469
I guess we would draw it here let's say

1331
01:04:45,679 --> 01:05:11,018
so maybe this like that I don't know if

1332
01:05:06,469 --> 01:05:11,019
that's supposed to be a v4 yeah it is

1333
01:05:12,190 --> 01:05:17,929
and so what we can do here is say look

1334
01:05:14,889 --> 01:05:20,088
for will push down one test case and

1335
01:05:17,929 --> 01:05:22,338
we'll draw whatever the result is what

1336
01:05:20,088 --> 01:05:25,389
I'll do is rather than trying to

1337
01:05:22,338 --> 01:05:28,068
identify what test case we actually want

1338
01:05:25,389 --> 01:05:30,739
instead what I'll do is inside test cast

1339
01:05:28,068 --> 01:05:34,369
from probes what I'll do is I'll just

1340
01:05:30,739 --> 01:05:35,028
make a call here where I say okay at the

1341
01:05:34,369 --> 01:05:38,449
start

1342
01:05:35,028 --> 01:05:41,478
we'll just take something like maybe the

1343
01:05:38,449 --> 01:05:45,199
debug light position itself so we know

1344
01:05:41,478 --> 01:05:48,228
that you know debug light P should

1345
01:05:45,199 --> 01:05:52,009
always produce itself let's do a get

1346
01:05:48,228 --> 01:05:56,868
lightly for peek Hall where we take and

1347
01:05:52,009 --> 01:05:59,208
we draw exactly that walk like so and so

1348
01:05:56,869 --> 01:06:01,608
we can see if we're querying the actual

1349
01:05:59,208 --> 01:06:04,009
point where the light itself exists what

1350
01:06:01,608 --> 01:06:05,778
would we actually get right and then

1351
01:06:04,009 --> 01:06:09,588
these we just won't draw because it

1352
01:06:05,778 --> 01:06:10,969
would produce just a cacophony of cubes

1353
01:06:09,588 --> 01:06:12,380
and stuff that we don't you know would

1354
01:06:10,969 --> 01:06:16,849
make it hard for us to see what the heck

1355
01:06:12,380 --> 01:06:18,619
we were looking at right and so then we

1356
01:06:16,849 --> 01:06:20,269
should be able to see how that query

1357
01:06:18,619 --> 01:06:21,619
works we have probably have to turn off

1358
01:06:20,268 --> 01:06:25,129
lighting because we won't be able to

1359
01:06:21,619 --> 01:06:28,190
actually see the boxes themselves in

1360
01:06:25,130 --> 01:06:29,690
that walk with without turning off the

1361
01:06:28,190 --> 01:06:31,458
lighting but that's that's easy enough

1362
01:06:29,690 --> 01:06:33,588
again something I really this entire

1363
01:06:31,458 --> 01:06:35,239
time I keep saying I need to make

1364
01:06:33,588 --> 01:06:38,239
something that that turns us off a

1365
01:06:35,239 --> 01:06:39,170
hotkey and I keep not doing it just

1366
01:06:38,239 --> 01:06:43,130
because I'm in the middle of something

1367
01:06:39,170 --> 01:06:44,778
else and don't have the time so anyway

1368
01:06:43,130 --> 01:06:47,959
if we turn the lightning off and we look

1369
01:06:44,778 --> 01:06:51,170
just at what the actual box query

1370
01:06:47,958 --> 01:06:51,619
produces so you can see the box where

1371
01:06:51,170 --> 01:06:53,690
you happy

1372
01:06:51,619 --> 01:06:57,500
over here you can also see that it's

1373
01:06:53,690 --> 01:06:59,599
like totally wrong it's not even

1374
01:06:57,500 --> 01:07:03,679
including the the point we're at

1375
01:06:59,599 --> 01:07:08,299
ourselves so to me that seems to suggest

1376
01:07:03,679 --> 01:07:10,460
that our box metric is wrong like maybe

1377
01:07:08,300 --> 01:07:14,450
that function I did for like get closest

1378
01:07:10,460 --> 01:07:16,159
point for example is wrong because we're

1379
01:07:14,449 --> 01:07:18,859
drawing the same things that are in the

1380
01:07:16,159 --> 01:07:22,339
region so you know presumably it would

1381
01:07:18,860 --> 01:07:25,460
work properly at least the the picking

1382
01:07:22,340 --> 01:07:26,210
of the mass I don't actually know but

1383
01:07:25,460 --> 01:07:32,920
let's find out

1384
01:07:26,210 --> 01:07:32,920
so if we do get lightly for P here I

1385
01:07:34,539 --> 01:07:38,539
mean there's one other thing that could

1386
01:07:36,619 --> 01:07:40,960
be wrong right the other thing that

1387
01:07:38,539 --> 01:07:47,480
could be wrong is we could be picking

1388
01:07:40,960 --> 01:07:48,650
the correct index and then when we jump

1389
01:07:47,480 --> 01:07:50,599
to it no we can't because we're actually

1390
01:07:48,650 --> 01:07:53,420
pulling them out here alright nevermind

1391
01:07:50,599 --> 01:07:55,789
so I think I think that means our get

1392
01:07:53,420 --> 01:07:58,610
distance to Vox squared has to be wrong

1393
01:07:55,789 --> 01:08:01,759
which is fine and if we look here at it

1394
01:07:58,610 --> 01:08:02,960
I feel like this is probably fine that's

1395
01:08:01,760 --> 01:08:05,450
going to be in the get closest point in

1396
01:08:02,960 --> 01:08:08,510
box part meaning that when we do get

1397
01:08:05,449 --> 01:08:10,579
closest point to in box if we assume

1398
01:08:08,510 --> 01:08:11,960
that this returns the correct value it

1399
01:08:10,579 --> 01:08:13,429
would be pretty hard for this to be

1400
01:08:11,960 --> 01:08:16,819
wrong because all it's doing is saying

1401
01:08:13,429 --> 01:08:19,489
well the length between these two return

1402
01:08:16,819 --> 01:08:21,109
that right so if we look at get closest

1403
01:08:19,489 --> 01:08:23,269
point in box here where we've got the

1404
01:08:21,109 --> 01:08:26,539
box and the P like is that actually

1405
01:08:23,270 --> 01:08:28,520
producing a reasonable value for the

1406
01:08:26,539 --> 01:08:30,769
closest point on the box if we take a

1407
01:08:28,520 --> 01:08:34,490
look at the maximum of the minimum and

1408
01:08:30,770 --> 01:08:37,460
the P vibes that's put in there you know

1409
01:08:34,489 --> 01:08:38,750
again I I guess I should look at these

1410
01:08:37,460 --> 01:08:41,569
functions and make sure that these

1411
01:08:38,750 --> 01:08:43,760
functions are operating the way you

1412
01:08:41,569 --> 01:08:44,779
would expect but they sure seem to be

1413
01:08:43,760 --> 01:08:47,000
right there doesn't seem to be anything

1414
01:08:44,779 --> 01:08:50,539
untoward happening there so that that

1415
01:08:47,000 --> 01:08:52,430
seems fine so when we're taking the min

1416
01:08:50,539 --> 01:08:53,720
and the max here I feel like that should

1417
01:08:52,430 --> 01:08:55,940
produce the closest point on the box

1418
01:08:53,720 --> 01:08:58,340
let's just verify that by drawing it out

1419
01:08:55,939 --> 01:09:00,529
and then we'll see and then I can also

1420
01:08:58,340 --> 01:09:02,750
sort of draw I could draw those points

1421
01:09:00,529 --> 01:09:04,759
as well

1422
01:09:02,750 --> 01:09:06,109
just to see what's whether we're finding

1423
01:09:04,760 --> 01:09:07,190
them correctly which is another thing I

1424
01:09:06,109 --> 01:09:09,289
can do

1425
01:09:07,189 --> 01:09:11,839
but anyway so if we imagine so each of

1426
01:09:09,289 --> 01:09:13,579
these things is happening sort of on an

1427
01:09:11,840 --> 01:09:16,340
axis separately so I don't think it will

1428
01:09:13,579 --> 01:09:18,289
matter how many dimensions we use 1 2 or

1429
01:09:16,340 --> 01:09:20,090
3 so let's just do it in 2 just just a

1430
01:09:18,289 --> 01:09:22,970
double check since that should give us

1431
01:09:20,090 --> 01:09:25,250
everything we need so basically we're

1432
01:09:22,970 --> 01:09:28,460
gonna pass in some p-value here right

1433
01:09:25,250 --> 01:09:29,899
and that could be inside the box as well

1434
01:09:28,460 --> 01:09:31,760
we don't really know it's outside the

1435
01:09:29,899 --> 01:09:33,500
box let me do it like this

1436
01:09:31,760 --> 01:09:35,810
so it's completely outside then we'll

1437
01:09:33,500 --> 01:09:37,609
try one that's completely inside but

1438
01:09:35,810 --> 01:09:39,950
what we're saying is well okay so let's

1439
01:09:37,609 --> 01:09:43,399
suppose we look at just the x axis right

1440
01:09:39,949 --> 01:09:46,489
of this thing and what we're saying is

1441
01:09:43,399 --> 01:09:50,750
okay there's three points involved okay

1442
01:09:46,489 --> 01:09:54,079
this is the min this is its this is the

1443
01:09:50,750 --> 01:09:55,819
Max and here's the p value if we look at

1444
01:09:54,079 --> 01:09:58,309
the p value itself what we're gonna find

1445
01:09:55,819 --> 01:09:59,960
is that we take the min and the max of

1446
01:09:58,310 --> 01:10:02,750
it right so we're taking the mach the

1447
01:09:59,960 --> 01:10:04,489
max of the men and the P so here's the

1448
01:10:02,750 --> 01:10:06,680
min and here's the P which is the

1449
01:10:04,489 --> 01:10:09,859
maximum value of these two things right

1450
01:10:06,680 --> 01:10:11,990
and so if the P is on this side let's

1451
01:10:09,859 --> 01:10:16,369
take another point which is Q and that's

1452
01:10:11,989 --> 01:10:17,869
inside the box right so in the case of P

1453
01:10:16,369 --> 01:10:20,420
in the min we're gonna end up with the

1454
01:10:17,869 --> 01:10:21,769
minimum point right in the case of Q and

1455
01:10:20,420 --> 01:10:23,149
the min we're gonna end up with Q

1456
01:10:21,770 --> 01:10:24,470
because we're taking the maximum so

1457
01:10:23,149 --> 01:10:26,750
we're taking the one that's the furthest

1458
01:10:24,470 --> 01:10:30,740
to this way right that's what should be

1459
01:10:26,750 --> 01:10:31,760
happening all right so in the case of P

1460
01:10:30,739 --> 01:10:33,079
in the min we're gonna take this and

1461
01:10:31,760 --> 01:10:34,610
give Q them in we're gonna take this

1462
01:10:33,079 --> 01:10:36,800
right which is exactly what we would

1463
01:10:34,609 --> 01:10:39,619
want and then we're gonna shove that

1464
01:10:36,800 --> 01:10:42,289
through a minimum call for the Box Max

1465
01:10:39,619 --> 01:10:45,670
right so that's this guy here right so

1466
01:10:42,289 --> 01:10:47,750
the Box Max if that is further this way

1467
01:10:45,670 --> 01:10:49,369
it's going to be selected otherwise

1468
01:10:47,750 --> 01:10:52,340
we're just going to keep whatever we had

1469
01:10:49,369 --> 01:10:54,409
and in that case right so in the P case

1470
01:10:52,340 --> 01:10:55,970
we're gonna end up picking this point in

1471
01:10:54,409 --> 01:10:58,909
the Q case we're gonna end up picking

1472
01:10:55,970 --> 01:11:02,480
this point that is the closest point on

1473
01:10:58,909 --> 01:11:10,250
the box in both cases I don't see a lot

1474
01:11:02,479 --> 01:11:11,209
wrong with this that seems pretty good

1475
01:11:10,250 --> 01:11:12,529
to me

1476
01:11:11,210 --> 01:11:15,090
[Music]

1477
01:11:12,529 --> 01:11:18,658
to be completely honest with you so I'm

1478
01:11:15,090 --> 01:11:21,239
not really seeing what's going wrong

1479
01:11:18,658 --> 01:11:23,129
there so one thing I can do is break

1480
01:11:21,238 --> 01:11:25,589
this out a little bit more so let's

1481
01:11:23,130 --> 01:11:27,869
suppose we go into the get light leaf

1482
01:11:25,590 --> 01:11:30,869
for peak law and instead of doing it

1483
01:11:27,869 --> 01:11:32,729
this way I actually did it manually so

1484
01:11:30,869 --> 01:11:34,559
I'm actually going to do this where I

1485
01:11:32,729 --> 01:11:38,549
asked for the closest point in the box

1486
01:11:34,560 --> 01:11:40,500
first like that and then I take the

1487
01:11:38,550 --> 01:11:42,750
length squared myself so this should not

1488
01:11:40,500 --> 01:11:45,960
in any way change like this routine

1489
01:11:42,750 --> 01:11:48,630
should behave exactly the same way as it

1490
01:11:45,960 --> 01:11:50,939
was being anything all I'm gonna do is

1491
01:11:48,630 --> 01:11:53,789
actually take the length squared myself

1492
01:11:50,939 --> 01:11:56,279
in this routine and now we should get no

1493
01:11:53,789 --> 01:12:00,390
difference right so the the diagram that

1494
01:11:56,279 --> 01:12:02,130
I see now that pops up with the boxes on

1495
01:12:00,390 --> 01:12:04,110
the side of the map there should be

1496
01:12:02,130 --> 01:12:07,710
exactly the same and it is right that's

1497
01:12:04,109 --> 01:12:08,670
exactly what we saw the first time no

1498
01:12:07,710 --> 01:12:13,230
worries right

1499
01:12:08,670 --> 01:12:15,329
and so if I then say well okay now show

1500
01:12:13,229 --> 01:12:17,669
me the actual line here what I should be

1501
01:12:15,329 --> 01:12:20,908
able to do is say if this is a test case

1502
01:12:17,670 --> 01:12:23,550
right I should be able to ask for each

1503
01:12:20,908 --> 01:12:26,179
box that I was testing and maybe we push

1504
01:12:23,550 --> 01:12:29,579
this in there which one of these

1505
01:12:26,179 --> 01:12:33,359
actually turns out to be closest so if I

1506
01:12:29,579 --> 01:12:35,850
draw like the closest one the one we end

1507
01:12:33,359 --> 01:12:39,238
up picking in yellow and I turn and I

1508
01:12:35,850 --> 01:12:42,600
draw the test cases let's say in like

1509
01:12:39,238 --> 01:12:49,139
you know the the gray or whatever it is

1510
01:12:42,600 --> 01:12:51,390
right like that then when I should be

1511
01:12:49,140 --> 01:12:54,539
able to do is actually draw a debug line

1512
01:12:51,390 --> 01:12:57,630
that tells me where the closest P

1513
01:12:54,539 --> 01:13:01,198
actually was or you know where we think

1514
01:12:57,630 --> 01:13:03,719
that was so this would tell me for each

1515
01:13:01,198 --> 01:13:04,829
of these which one we thought was best

1516
01:13:03,719 --> 01:13:07,829
right

1517
01:13:04,829 --> 01:13:09,539
and if it turns out to be closest then

1518
01:13:07,829 --> 01:13:10,649
that's you know well we can actually

1519
01:13:09,539 --> 01:13:12,630
draw that one as well

1520
01:13:10,649 --> 01:13:16,500
right so we know which one we ended up

1521
01:13:12,630 --> 01:13:18,659
thinking was the best so I don't know if

1522
01:13:16,500 --> 01:13:20,130
this will be clear enough of a clear

1523
01:13:18,658 --> 01:13:24,238
enough diagram for us to actually look

1524
01:13:20,130 --> 01:13:25,170
at but we're gonna try it and see here's

1525
01:13:24,238 --> 01:13:28,379
us drawing

1526
01:13:25,170 --> 01:13:30,449
our thing you know our closest you know

1527
01:13:28,380 --> 01:13:34,770
which one is the closest point kind of a

1528
01:13:30,448 --> 01:13:38,428
thing and if you look at it you know I

1529
01:13:34,770 --> 01:13:44,219
would say that it seems right on this

1530
01:13:38,429 --> 01:13:47,100
one anyway I mean the biggest thing that

1531
01:13:44,219 --> 01:13:53,670
I'm noting is just the boxes are all

1532
01:13:47,100 --> 01:13:55,440
over there it makes me think that maybe

1533
01:13:53,670 --> 01:13:58,949
the problem is we're just not adding the

1534
01:13:55,439 --> 01:14:04,279
light sources somehow because the

1535
01:13:58,948 --> 01:14:04,279
closest point query seems pretty good I

1536
01:14:06,829 --> 01:14:12,960
don't know what to tell you

1537
01:14:09,719 --> 01:14:17,189
I don't I don't see a lot of evidence of

1538
01:14:12,960 --> 01:14:21,810
this being bad it looks like it's doing

1539
01:14:17,189 --> 01:14:24,448
exactly all right thing so what what I

1540
01:14:21,810 --> 01:14:26,670
would say might be going on there is our

1541
01:14:24,448 --> 01:14:29,698
thing that actually builds the spatial

1542
01:14:26,670 --> 01:14:31,529
partition might just not be adding all

1543
01:14:29,698 --> 01:14:33,210
of the actual lights that need to be

1544
01:14:31,529 --> 01:14:34,710
added or something like that or there

1545
01:14:33,210 --> 01:14:36,859
it's adding them in the wrong way like

1546
01:14:34,710 --> 01:14:39,948
this is not doing what it needs to do

1547
01:14:36,859 --> 01:14:42,509
you know what I'm saying to you so like

1548
01:14:39,948 --> 01:14:47,789
we should probably look and see like the

1549
01:14:42,510 --> 01:14:49,260
solutions scratch a thing I feel like

1550
01:14:47,789 --> 01:14:52,500
maybe I need to go see what the heck

1551
01:14:49,260 --> 01:14:54,510
that stuff is doing because it may just

1552
01:14:52,500 --> 01:14:55,948
not be doing the right stuff I I don't

1553
01:14:54,510 --> 01:15:01,350
know let's go take a look

1554
01:14:55,948 --> 01:15:02,698
so if we go to add box reference what

1555
01:15:01,350 --> 01:15:05,010
you can see here is just pushing these

1556
01:15:02,698 --> 01:15:07,439
onto the Box table that is what I would

1557
01:15:05,010 --> 01:15:10,679
expect I now need to go look at what the

1558
01:15:07,439 --> 01:15:13,879
scratch stuff is supposed to do so if I

1559
01:15:10,679 --> 01:15:16,560
look at what scratch a is supposed to do

1560
01:15:13,880 --> 01:15:19,920
so you can see me like recording this

1561
01:15:16,560 --> 01:15:23,510
thing into the scratch array and I guess

1562
01:15:19,920 --> 01:15:28,409
that right there would be the problem so

1563
01:15:23,510 --> 01:15:33,840
and in fact this right here when we do

1564
01:15:28,409 --> 01:15:37,019
an Box reference the Box ref count is is

1565
01:15:33,840 --> 01:15:40,400
the only thing that's added so again I

1566
01:15:37,020 --> 01:15:40,400
think that's actually fine

1567
01:15:40,819 --> 01:15:52,170
so add box storage is the only thing

1568
01:15:44,010 --> 01:15:54,300
that adds more information right so this

1569
01:15:52,170 --> 01:15:57,408
is a problem because this will affect

1570
01:15:54,300 --> 01:16:03,630
the count that we actually loop through

1571
01:15:57,408 --> 01:16:07,469
and so this should probably be this to

1572
01:16:03,630 --> 01:16:09,989
avoid this being an issue and then we

1573
01:16:07,469 --> 01:16:13,230
probably also in here where we do this

1574
01:16:09,988 --> 01:16:15,629
stuff and add these references this is

1575
01:16:13,229 --> 01:16:19,879
going to have to actually keep up with

1576
01:16:15,630 --> 01:16:22,409
that so when we add a box reference

1577
01:16:19,880 --> 01:16:26,819
we're going to have to make sure that

1578
01:16:22,408 --> 01:16:39,779
that actually does something so it would

1579
01:16:26,819 --> 01:16:41,639
have to look like this right it's not

1580
01:16:39,779 --> 01:16:44,880
pretty

1581
01:16:41,639 --> 01:16:48,989
but that is probably what would have to

1582
01:16:44,880 --> 01:16:50,730
happen and again we can kind of maybe

1583
01:16:48,988 --> 01:16:55,259
work on this a little bit and make this

1584
01:16:50,729 --> 01:16:56,638
code nicer I kind of want to get it

1585
01:16:55,260 --> 01:17:00,780
working the way that it's going right

1586
01:16:56,639 --> 01:17:03,659
now and just see if we can get it into

1587
01:17:00,779 --> 01:17:06,539
some better shape so let's try to work

1588
01:17:03,658 --> 01:17:10,289
with this and get this you know keeping

1589
01:17:06,539 --> 01:17:12,840
everyone happy so when we actually add

1590
01:17:10,289 --> 01:17:15,029
this box reference here we need to put

1591
01:17:12,840 --> 01:17:17,099
in to the scratch array I think at this

1592
01:17:15,029 --> 01:17:21,359
location I would assume anyway solution

1593
01:17:17,099 --> 01:17:23,460
plus root lightbox index right plus one

1594
01:17:21,359 --> 01:17:26,219
I would think this would actually

1595
01:17:23,460 --> 01:17:28,849
properly seed that array so that when we

1596
01:17:26,219 --> 01:17:31,500
came down here to do this it would work

1597
01:17:28,849 --> 01:17:34,260
maybe I'm wrong about that

1598
01:17:31,500 --> 01:17:41,250
so I guess another problem here would be

1599
01:17:34,260 --> 01:17:44,480
just this overwrite any event and I

1600
01:17:41,250 --> 01:17:44,479
don't really know I don't think so

1601
01:17:49,390 --> 01:17:52,900
but I'm not sure

1602
01:17:58,649 --> 01:18:04,089
in the case that there is a light we

1603
01:18:01,930 --> 01:18:06,190
packed these indices together by sort of

1604
01:18:04,090 --> 01:18:11,289
putting them off in their own thing

1605
01:18:06,189 --> 01:18:12,909
right and I guess the scratch array yeah

1606
01:18:11,289 --> 01:18:17,949
it's just really there for doing the

1607
01:18:12,909 --> 01:18:21,279
indices does this add box yes so these

1608
01:18:17,949 --> 01:18:26,409
just get appended on at the end of it

1609
01:18:21,279 --> 01:18:28,359
anyway and for these we just added an

1610
01:18:26,409 --> 01:18:31,239
actual new box for each of them so they

1611
01:18:28,359 --> 01:18:34,229
get their own indices right because when

1612
01:18:31,239 --> 01:18:34,229
you add box storage

1613
01:18:42,840 --> 01:18:55,090
well you know actually no you don't so

1614
01:18:50,649 --> 01:18:58,118
how was this exactly supposed to work am

1615
01:18:55,090 --> 01:19:00,849
I missing something here when you add

1616
01:18:58,118 --> 01:19:05,859
the box storage on you're getting back

1617
01:19:00,849 --> 01:19:10,510
an index to an actual box right but when

1618
01:19:05,859 --> 01:19:24,219
you add a reference to a box you're

1619
01:19:10,510 --> 01:19:27,219
adding on what what is going on because

1620
01:19:24,219 --> 01:19:29,380
so when you add box storage it doesn't

1621
01:19:27,219 --> 01:19:33,809
add an actual reference it just

1622
01:19:29,380 --> 01:19:37,029
increments the box count and that

1623
01:19:33,809 --> 01:19:39,070
doesn't really make any sense because in

1624
01:19:37,029 --> 01:19:42,880
that case how did we do we actually just

1625
01:19:39,069 --> 01:19:50,728
split these so that we don't expect

1626
01:19:42,880 --> 01:19:55,900
actual children to be to be sort of

1627
01:19:50,729 --> 01:20:06,309
referenced now because these are working

1628
01:19:55,899 --> 01:20:08,198
exactly the same way what the hey does

1629
01:20:06,309 --> 01:20:09,969
anyone else is anyone else confused by

1630
01:20:08,198 --> 01:20:15,549
this or am I the only person who's like

1631
01:20:09,969 --> 01:20:17,859
I don't get it because I don't I don't

1632
01:20:15,550 --> 01:20:21,840
see how this helps us I don't see how

1633
01:20:17,859 --> 01:20:24,908
this actually works at all right

1634
01:20:21,840 --> 01:20:29,619
because when you get out here you add

1635
01:20:24,908 --> 01:20:31,509
the Box references well okay so I guess

1636
01:20:29,618 --> 01:20:33,939
this is the thing that does it for you

1637
01:20:31,510 --> 01:20:36,070
you place these things into your

1638
01:20:33,939 --> 01:20:38,529
temporary and then you just add the Box

1639
01:20:36,069 --> 01:20:41,618
references here so I guess that does

1640
01:20:38,529 --> 01:20:49,389
make sense all right I can believe that

1641
01:20:41,618 --> 01:20:51,658
right sure so I guess that's fine and we

1642
01:20:49,389 --> 01:20:55,708
do that in the scratch buffer so

1643
01:20:51,658 --> 01:20:55,708
everyone's fine with that right

1644
01:20:55,779 --> 01:21:03,698
and it should be fine I guess I don't

1645
01:21:00,158 --> 01:21:05,439
know whether that use of the scratch

1646
01:21:03,698 --> 01:21:11,250
referee and the sorcerer right here

1647
01:21:05,439 --> 01:21:14,888
actually creates a problem for us though

1648
01:21:11,250 --> 01:21:18,368
looking at what happens here you can see

1649
01:21:14,889 --> 01:21:22,569
that they ping-pong right as they go

1650
01:21:18,368 --> 01:21:28,719
down but I'm assuming that that's okay

1651
01:21:22,569 --> 01:21:31,328
because you never really need to

1652
01:21:28,719 --> 01:21:32,859
it's never gonna overflow into the area

1653
01:21:31,328 --> 01:21:36,698
where we wrote these things

1654
01:21:32,859 --> 01:21:38,558
I don't think of course maybe that's

1655
01:21:36,698 --> 01:21:42,328
also wrong maybe there should be a

1656
01:21:38,559 --> 01:21:42,329
scratch sieve it's just for this

1657
01:21:54,020 --> 01:21:58,590
trying to think of how I want to do this

1658
01:21:56,069 --> 01:22:05,609
so what I might want to do is just use a

1659
01:21:58,590 --> 01:22:07,350
scratch see for this I think I might do

1660
01:22:05,609 --> 01:22:10,170
that right now just to make it easier on

1661
01:22:07,350 --> 01:22:11,760
us so I think I might do this where we

1662
01:22:10,170 --> 01:22:13,679
just say look there's gonna be a scratch

1663
01:22:11,760 --> 01:22:15,690
see the scratch see is gonna have these

1664
01:22:13,679 --> 01:22:17,789
in there it's not going to do ad box

1665
01:22:15,689 --> 01:22:22,428
reference it's just gonna remember them

1666
01:22:17,789 --> 01:22:27,539
in a scratch buffer we won't do this

1667
01:22:22,429 --> 01:22:29,550
we'll put this down here so that it

1668
01:22:27,539 --> 01:22:31,079
happens at the end just the same way as

1669
01:22:29,550 --> 01:22:34,560
everybody else and then this will just

1670
01:22:31,079 --> 01:22:38,460
use scratch see and we will make another

1671
01:22:34,560 --> 01:22:40,199
scratch buffer all right so I'm gonna do

1672
01:22:38,460 --> 01:22:42,179
that and the main reason for that is

1673
01:22:40,198 --> 01:22:43,859
nothing to do with anything other than I

1674
01:22:42,179 --> 01:22:45,270
want to make it easier this debugging

1675
01:22:43,859 --> 01:22:47,399
there's too many index arrays and I

1676
01:22:45,270 --> 01:22:49,020
don't like having them sitting around

1677
01:22:47,399 --> 01:22:50,488
for no apparent reason yes I'm sorry I

1678
01:22:49,020 --> 01:22:54,810
changed sides of that structure I didn't

1679
01:22:50,488 --> 01:22:56,459
remember the program was running so I'm

1680
01:22:54,810 --> 01:22:58,409
gonna do that to make it a little easier

1681
01:22:56,460 --> 01:22:59,789
on myself so this way I can because I'm

1682
01:22:58,408 --> 01:23:02,309
gonna have to debug that routine that

1683
01:22:59,789 --> 01:23:03,960
builds the indices and I think I might

1684
01:23:02,310 --> 01:23:06,210
have been doing it wrong in fact yep hey

1685
01:23:03,960 --> 01:23:08,039
what a surprise just doing that fixed it

1686
01:23:06,210 --> 01:23:09,630
because I was like I that looks wrong to

1687
01:23:08,039 --> 01:23:10,529
me because it's using references in a

1688
01:23:09,630 --> 01:23:14,429
place where it should have been using

1689
01:23:10,529 --> 01:23:16,738
hard indexes and vice versa so now it

1690
01:23:14,429 --> 01:23:18,719
looks like we're correctly finding the

1691
01:23:16,738 --> 01:23:22,468
light right you can see that I'm always

1692
01:23:18,719 --> 01:23:24,658
finding that light of mine and you can

1693
01:23:22,469 --> 01:23:27,289
see I'm properly testing other locations

1694
01:23:24,658 --> 01:23:32,849
of light sources so that seems better

1695
01:23:27,289 --> 01:23:35,250
and now maybe we can take the test cast

1696
01:23:32,850 --> 01:23:39,860
and and make it actually do something

1697
01:23:35,250 --> 01:23:50,369
useful here right so let's go ahead and

1698
01:23:39,859 --> 01:23:51,988
and try turning the lighting back on now

1699
01:23:50,369 --> 01:23:55,079
that we think we've got a reasonable

1700
01:23:51,988 --> 01:23:57,718
light spatial query there and see what

1701
01:23:55,079 --> 01:24:00,559
happens just to give us a sense of like

1702
01:23:57,719 --> 01:24:04,948
where we are at in the debugging process

1703
01:24:00,560 --> 01:24:06,520
so what I'm anticipating seeing right is

1704
01:24:04,948 --> 01:24:08,529
you know row

1705
01:24:06,520 --> 01:24:10,660
tively straightforward use of this light

1706
01:24:08,529 --> 01:24:12,789
source but also like things that are

1707
01:24:10,659 --> 01:24:15,099
closer to other light yet other light

1708
01:24:12,789 --> 01:24:17,050
sources use them instead right

1709
01:24:15,100 --> 01:24:19,930
so that actually does a pretty good job

1710
01:24:17,050 --> 01:24:21,640
of actually doing sort of crappy

1711
01:24:19,930 --> 01:24:23,829
lighting for the world and you can see

1712
01:24:21,640 --> 01:24:25,810
that it's it's not what we want because

1713
01:24:23,829 --> 01:24:28,300
we still have a lot of things where like

1714
01:24:25,810 --> 01:24:30,100
something is you know there's no

1715
01:24:28,300 --> 01:24:31,449
secondary lighting and it's kind of crap

1716
01:24:30,100 --> 01:24:34,120
it's doing hard shadows and all that

1717
01:24:31,449 --> 01:24:35,380
stuff so it's not we want but you can

1718
01:24:34,119 --> 01:24:37,479
now see that we're getting per-pixel

1719
01:24:35,380 --> 01:24:40,150
lighting actually queried even just with

1720
01:24:37,479 --> 01:24:42,189
this test cast but it's properly finding

1721
01:24:40,149 --> 01:24:46,809
like the light source to use for various

1722
01:24:42,189 --> 01:24:48,939
rooms and crap like this right so I

1723
01:24:46,810 --> 01:24:50,140
think that's better and I think that

1724
01:24:48,939 --> 01:24:52,569
we're off to a good start

1725
01:24:50,140 --> 01:24:54,220
so now what we need to do is we need to

1726
01:24:52,569 --> 01:24:56,949
actually move into the second phase

1727
01:24:54,220 --> 01:24:59,170
where we're doing our casting we want to

1728
01:24:56,949 --> 01:25:01,300
start using real casting there and like

1729
01:24:59,170 --> 01:25:02,859
I said so now we need some way of saying

1730
01:25:01,300 --> 01:25:05,260
when we're actually doing these casts

1731
01:25:02,859 --> 01:25:06,849
what direction are we casting in and we

1732
01:25:05,260 --> 01:25:08,860
need to figure out a way how we would

1733
01:25:06,850 --> 01:25:13,990
insert the light source into those casts

1734
01:25:08,859 --> 01:25:18,399
as well right so all this stuff kind of

1735
01:25:13,989 --> 01:25:20,050
has to start coming together and yeah in

1736
01:25:18,399 --> 01:25:23,979
order to do that I think we're gonna

1737
01:25:20,050 --> 01:25:26,770
have to start let's let's start by by

1738
01:25:23,979 --> 01:25:29,679
just figuring out how we're gonna read

1739
01:25:26,770 --> 01:25:31,060
our test sphere and to do that I would

1740
01:25:29,680 --> 01:25:32,829
like to jump over to our handmade

1741
01:25:31,060 --> 01:25:35,430
sampling spheres generation program

1742
01:25:32,829 --> 01:25:38,680
because I think we kind of don't need

1743
01:25:35,430 --> 01:25:41,800
like this cube side weight stuff anymore

1744
01:25:38,680 --> 01:25:43,960
so I think the sample Direction part is

1745
01:25:41,800 --> 01:25:48,449
probably all we actually will need and

1746
01:25:43,960 --> 01:25:50,590
we can load in those sample directions I

1747
01:25:48,449 --> 01:25:52,599
don't know exactly what we're gonna do

1748
01:25:50,590 --> 01:25:53,710
about shoving the lights or stuff in

1749
01:25:52,600 --> 01:25:57,630
there but we'll you know take it one

1750
01:25:53,710 --> 01:26:02,680
step at a time and so if I go to the

1751
01:25:57,630 --> 01:26:04,869
light sampling sphere part of things

1752
01:26:02,680 --> 01:26:11,020
actually I guess I want to do it this

1753
01:26:04,869 --> 01:26:13,599
way then what you can see is we have an

1754
01:26:11,020 --> 01:26:16,210
HH s-- fear app that we use that we made

1755
01:26:13,600 --> 01:26:18,280
that the base little sign app it's just

1756
01:26:16,210 --> 01:26:20,260
a little program app is infected

1757
01:26:18,279 --> 01:26:22,179
everything it's just a little

1758
01:26:20,260 --> 01:26:25,890
utility and what it does is it generates

1759
01:26:22,180 --> 01:26:28,450
a nicely distributed samples fear for us

1760
01:26:25,890 --> 01:26:31,360
and the only thing it doesn't do yet is

1761
01:26:28,449 --> 01:26:33,069
clump these things by direction what we

1762
01:26:31,359 --> 01:26:34,719
want to do eventually is clump them by

1763
01:26:33,069 --> 01:26:37,029
direction so that's a big to do that

1764
01:26:34,720 --> 01:26:39,280
we're gonna have to do here but what we

1765
01:26:37,029 --> 01:26:41,079
can do right off the bat is we don't

1766
01:26:39,279 --> 01:26:42,969
have the cube side weight nonsense

1767
01:26:41,079 --> 01:26:48,090
anymore that's not actually gonna have

1768
01:26:42,970 --> 01:26:51,039
to be in there so we can delete that and

1769
01:26:48,090 --> 01:26:53,230
delete the printout for that as well so

1770
01:26:51,039 --> 01:26:58,060
all of the stuff for like weights can

1771
01:26:53,229 --> 01:26:59,949
just go oops all the stuff that had to

1772
01:26:58,060 --> 01:27:01,090
do with weights is it doesn't have to be

1773
01:26:59,949 --> 01:27:03,369
in here and that's good because it

1774
01:27:01,090 --> 01:27:09,630
simplifies the process down for us so

1775
01:27:03,369 --> 01:27:09,630
you know get rid of that get rid of this

1776
01:27:15,390 --> 01:27:18,390
this

1777
01:27:24,130 --> 01:27:30,810
and now our HH sphere app is ready to

1778
01:27:26,920 --> 01:27:34,770
generate something for us that will

1779
01:27:30,810 --> 01:27:39,820
presumably not have this in it anymore

1780
01:27:34,770 --> 01:27:49,540
let's kill this buffer and ask for that

1781
01:27:39,819 --> 01:27:53,590
so this thing oops right so what we want

1782
01:27:49,539 --> 01:27:57,579
this thing to do is is generate us well

1783
01:27:53,590 --> 01:28:00,819
we want to generate our our sort of test

1784
01:27:57,579 --> 01:28:02,680
sphere if we look at how it was called

1785
01:28:00,819 --> 01:28:04,359
originally I hope we saved that

1786
01:28:02,680 --> 01:28:08,829
somewhere I don't know if we actually

1787
01:28:04,359 --> 01:28:11,380
did let's take a look looks like we

1788
01:28:08,829 --> 01:28:13,569
didn't but what we need to know there is

1789
01:28:11,380 --> 01:28:16,779
how many array bundles you want there to

1790
01:28:13,569 --> 01:28:19,840
be and how many different spheres you

1791
01:28:16,779 --> 01:28:22,779
want there to be and if we look at what

1792
01:28:19,840 --> 01:28:25,699
we've got in our INL at the moment which

1793
01:28:22,779 --> 01:28:29,779
I guess I will have to load again

1794
01:28:25,699 --> 01:28:35,119
handmade code now it looks like we were

1795
01:28:29,779 --> 01:28:38,269
doing 16 Spears and 18 ray bundles purse

1796
01:28:35,119 --> 01:28:41,840
fear now in terms of how many ray

1797
01:28:38,270 --> 01:28:44,180
bundles we actually cast I would say you

1798
01:28:41,840 --> 01:28:48,949
know I don't know 18 does seem kind of

1799
01:28:44,180 --> 01:28:51,409
high to be completely honest I'm not

1800
01:28:48,949 --> 01:29:05,599
sure that's necessary but okay so let's

1801
01:28:51,409 --> 01:29:08,269
suppose that was the case you know I

1802
01:29:05,600 --> 01:29:10,970
think what we're gonna do is say that

1803
01:29:08,270 --> 01:29:13,370
the Ray bundles purse fear we're just

1804
01:29:10,970 --> 01:29:14,720
gonna do 16 18 and now and I think I

1805
01:29:13,369 --> 01:29:16,430
know what I want to do after that so

1806
01:29:14,720 --> 01:29:19,130
we're gonna say this fear count is 16

1807
01:29:16,430 --> 01:29:21,610
the Ray bundle count is 18 the

1808
01:29:19,130 --> 01:29:25,359
destination INL is obviously the same

1809
01:29:21,609 --> 01:29:28,789
place that's handmade sampling stairs

1810
01:29:25,359 --> 01:29:31,579
dyno and off we go

1811
01:29:28,789 --> 01:29:33,619
I'm gonna kill this buffer this thing

1812
01:29:31,579 --> 01:29:36,380
will hopefully do a pretty good job

1813
01:29:33,619 --> 01:29:40,130
relaxing all of our relaxation Abul

1814
01:29:36,380 --> 01:29:49,039
relaxers as you can see it is trying

1815
01:29:40,130 --> 01:29:50,630
that right now and this is just trying

1816
01:29:49,039 --> 01:29:53,619
to produce a nicely uniformly

1817
01:29:50,630 --> 01:29:53,619
distributed sphere

1818
01:29:56,899 --> 01:30:01,529
and I don't actually know am I supposed

1819
01:29:59,220 --> 01:30:03,690
to terminate this when it's low enough

1820
01:30:01,529 --> 01:30:06,889
or does it terminate itself because I

1821
01:30:03,689 --> 01:30:06,889
don't actually really remember

1822
01:30:14,809 --> 01:30:21,889
so it will look for a min separation

1823
01:30:17,000 --> 01:30:26,929
distance and it looks like we are not

1824
01:30:21,889 --> 01:30:31,099
super convinced about that but and

1825
01:30:26,929 --> 01:30:33,618
what's it printing out the max closest

1826
01:30:31,099 --> 01:30:39,520
point min closest point distance min Max

1827
01:30:33,618 --> 01:30:39,519
separation last min max separation right

1828
01:30:44,350 --> 01:30:49,810
and I mean that number is still going

1829
01:30:46,420 --> 01:30:53,069
down so it is still getting better right

1830
01:30:49,810 --> 01:30:53,070
I guess

1831
01:30:54,359 --> 01:31:00,159
which I don't know what that is so

1832
01:30:56,710 --> 01:31:01,960
that's just the the measure we ended up

1833
01:31:00,159 --> 01:31:05,039
using which was not particularly

1834
01:31:01,960 --> 01:31:10,029
fantastic I guess is the min/max

1835
01:31:05,039 --> 01:31:13,239
separation so the the distance between

1836
01:31:10,029 --> 01:31:15,039
the minimum to the closest two points

1837
01:31:13,239 --> 01:31:22,090
and the furthest two points is what

1838
01:31:15,039 --> 01:31:32,769
we're using and and I guess that value

1839
01:31:22,090 --> 01:31:34,480
there is the improvement and so it is

1840
01:31:32,770 --> 01:31:37,740
still like improving it just keeps on

1841
01:31:34,479 --> 01:31:37,739
improving and improving right

1842
01:31:45,699 --> 01:31:53,119
and if the min/max separation is less

1843
01:31:48,710 --> 01:31:56,960
than 0.25 so I guess we just assume this

1844
01:31:53,119 --> 01:31:58,309
will eventually get down there do we

1845
01:31:56,960 --> 01:32:04,340
really need our sphere to be this

1846
01:31:58,310 --> 01:32:12,440
tightly packed I guess we do I have no

1847
01:32:04,340 --> 01:32:16,960
idea I mean Who am I to say it's crazy

1848
01:32:12,439 --> 01:32:19,489
like it does seem to really go down

1849
01:32:16,960 --> 01:32:21,109
quite low I probably should have

1850
01:32:19,489 --> 01:32:22,760
compiled in release mode now to think

1851
01:32:21,109 --> 01:32:24,500
about it because we're actually probably

1852
01:32:22,760 --> 01:32:27,079
quite slow because this is all in debug

1853
01:32:24,500 --> 01:32:28,850
mode but I don't know that I want to

1854
01:32:27,079 --> 01:32:33,260
actually stop it now because it's almost

1855
01:32:28,850 --> 01:32:34,940
there right although I am kind of

1856
01:32:33,260 --> 01:32:37,480
curious company I want to see how much

1857
01:32:34,939 --> 01:32:37,479
faster it is

1858
01:32:45,020 --> 01:33:00,750
there yeah yeah well release notes a bit

1859
01:32:53,609 --> 01:33:03,979
faster just a bit alright so anyway that

1860
01:33:00,750 --> 01:33:09,960
should have given us our INL right so

1861
01:33:03,979 --> 01:33:12,509
oops now we've got one that just doesn't

1862
01:33:09,960 --> 01:33:17,158
have the weights so you can see here

1863
01:33:12,510 --> 01:33:21,210
we've got just our big table and all

1864
01:33:17,158 --> 01:33:25,879
this table has on it is the sample

1865
01:33:21,210 --> 01:33:28,158
direction right so if we want to do that

1866
01:33:25,880 --> 01:33:32,880
let me see here how we're actually

1867
01:33:28,158 --> 01:33:36,349
producing this yeah so all we're doing

1868
01:33:32,880 --> 01:33:36,350
is just just taking the point in there

1869
01:33:36,439 --> 01:33:43,469
so looking at this inside handmade

1870
01:33:40,289 --> 01:33:45,630
lighting if we wanted to start sort of

1871
01:33:43,469 --> 01:33:48,989
doing these raycast what I'm gonna do is

1872
01:33:45,630 --> 01:33:51,900
maybe just drop that right into here as

1873
01:33:48,988 --> 01:33:53,939
a test so you know maybe we start by

1874
01:33:51,899 --> 01:33:58,170
taking for each light probe will

1875
01:33:53,939 --> 01:34:00,419
actually just do a ray cast the way that

1876
01:33:58,170 --> 01:34:03,630
we would be doing it inside the normal

1877
01:34:00,420 --> 01:34:09,050
rake a stir and we'll sum those together

1878
01:34:03,630 --> 01:34:11,340
and that will give us the sort of the

1879
01:34:09,050 --> 01:34:12,570
light result well I guess we don't we

1880
01:34:11,340 --> 01:34:13,710
can't believe that because we need we

1881
01:34:12,569 --> 01:34:16,859
need to start distributing the light

1882
01:34:13,710 --> 01:34:18,899
around so assuming that that's our new

1883
01:34:16,859 --> 01:34:20,819
lighting sample sphere that just does

1884
01:34:18,899 --> 01:34:25,129
doesn't have the the weights involved

1885
01:34:20,819 --> 01:34:28,679
there so maybe I won't start this today

1886
01:34:25,130 --> 01:34:31,500
we can now start considering calling the

1887
01:34:28,679 --> 01:34:35,520
actual real function and the only thing

1888
01:34:31,500 --> 01:34:36,899
we don't have now and you know we want

1889
01:34:35,520 --> 01:34:39,239
to start targeting light sources as well

1890
01:34:36,899 --> 01:34:42,960
but the only thing we don't have now is

1891
01:34:39,238 --> 01:34:44,908
in compute light propagation the only

1892
01:34:42,960 --> 01:34:47,219
thing we can't do is we can't actually

1893
01:34:44,908 --> 01:34:50,429
use the voxel irradiance from the

1894
01:34:47,219 --> 01:34:52,529
previous frame to contribute to this

1895
01:34:50,429 --> 01:34:55,408
frame and this function doesn't actually

1896
01:34:52,529 --> 01:34:56,729
do anything right and so this function

1897
01:34:55,408 --> 01:34:57,809
has to be written

1898
01:34:56,729 --> 01:35:00,029
and the other thing that has to be

1899
01:34:57,810 --> 01:35:02,850
written and I don't know if we actually

1900
01:35:00,029 --> 01:35:05,939
even sketched it out yet is that every

1901
01:35:02,850 --> 01:35:08,130
time we go to initialize the lighting I

1902
01:35:05,939 --> 01:35:09,960
think we just clear the voxel and what

1903
01:35:08,130 --> 01:35:13,940
we need to do is actually be keeping the

1904
01:35:09,960 --> 01:35:17,100
voxel around so what you can see here is

1905
01:35:13,939 --> 01:35:19,049
when we go to begin lighting computation

1906
01:35:17,100 --> 01:35:21,960
and here's the stuff that computes where

1907
01:35:19,050 --> 01:35:25,529
the voxel is we don't actually do

1908
01:35:21,960 --> 01:35:28,739
anything here to try to update the

1909
01:35:25,529 --> 01:35:32,309
contents of the voxel so here's what we

1910
01:35:28,738 --> 01:35:33,689
need to do next weekend right here we

1911
01:35:32,310 --> 01:35:38,400
need to do a thing that like copies

1912
01:35:33,689 --> 01:35:43,859
contents of the old voxel to the correct

1913
01:35:38,399 --> 01:35:45,329
location in the new voxel and then the

1914
01:35:43,859 --> 01:36:00,299
other thing we need to do is compute

1915
01:35:45,329 --> 01:36:02,819
irradiance and here we just need to run

1916
01:36:00,300 --> 01:36:04,949
the same basic algorithm as we're

1917
01:36:02,819 --> 01:36:07,769
running in the pixel shader you know to

1918
01:36:04,949 --> 01:36:09,929
a first approximation it doesn't have to

1919
01:36:07,770 --> 01:36:12,090
be exact but something similar to that

1920
01:36:09,930 --> 01:36:15,960
to get whatever the irradiance would

1921
01:36:12,090 --> 01:36:17,039
have been at this point using like a we

1922
01:36:15,960 --> 01:36:19,560
probably what we'll do is we'll take the

1923
01:36:17,039 --> 01:36:21,210
specular bounce part out of it so we'll

1924
01:36:19,560 --> 01:36:23,640
just be using basically diffuse

1925
01:36:21,210 --> 01:36:26,970
transmission for the second for

1926
01:36:23,640 --> 01:36:31,710
secondary lighting and so in the case

1927
01:36:26,970 --> 01:36:34,440
where the thing hits a emitter it'll

1928
01:36:31,710 --> 01:36:36,569
just use the emitter and and if it if it

1929
01:36:34,439 --> 01:36:40,229
doesn't it doesn't so then in the

1930
01:36:36,569 --> 01:36:42,479
raycast here where we're doing so you

1931
01:36:40,229 --> 01:36:44,399
know this for example where we're doing

1932
01:36:42,479 --> 01:36:47,488
the raid erection for dirt to light

1933
01:36:44,399 --> 01:36:49,849
right and then in here we're picking up

1934
01:36:47,488 --> 01:36:55,699
the directions on our sampling sphere

1935
01:36:49,850 --> 01:36:59,520
what I want to do here is is have us do

1936
01:36:55,699 --> 01:37:01,649
have us find a random light source that

1937
01:36:59,520 --> 01:37:03,390
we're gonna pick out of the light

1938
01:37:01,649 --> 01:37:09,389
sources that are close to this light

1939
01:37:03,390 --> 01:37:10,670
probe right and I again not totally sure

1940
01:37:09,390 --> 01:37:14,390
exactly

1941
01:37:10,670 --> 01:37:16,369
we would want to do that but I guess

1942
01:37:14,390 --> 01:37:19,310
what we'd say is anything that's close

1943
01:37:16,369 --> 01:37:21,680
enough to expand we expand and put in an

1944
01:37:19,310 --> 01:37:24,770
array and then we randomly pick someone

1945
01:37:21,680 --> 01:37:31,390
from the array to sample would probably

1946
01:37:24,770 --> 01:37:35,140
be how I would do it just just when I'm

1947
01:37:31,390 --> 01:37:38,060
kind of vaguely guessing so you know

1948
01:37:35,140 --> 01:37:40,220
we've got the sample point entropy here

1949
01:37:38,060 --> 01:37:42,470
that we're using and so you know we do

1950
01:37:40,220 --> 01:37:46,940
something like use that sample point

1951
01:37:42,470 --> 01:37:50,780
entropy you know like this this

1952
01:37:46,939 --> 01:37:53,629
basically to randomly pull from a light

1953
01:37:50,779 --> 01:37:56,179
source or something so instead of doing

1954
01:37:53,630 --> 01:37:58,760
direction to light like this instead

1955
01:37:56,180 --> 01:38:01,039
what we would do is we would pick four

1956
01:37:58,760 --> 01:38:02,480
random points on the light source since

1957
01:38:01,039 --> 01:38:04,039
these light sources are area light

1958
01:38:02,479 --> 01:38:07,549
sources or whatever and we'd cast

1959
01:38:04,039 --> 01:38:10,340
towards that right and so in here we

1960
01:38:07,550 --> 01:38:13,610
would say well alright let's you know

1961
01:38:10,340 --> 01:38:17,539
let's build an array of the end closest

1962
01:38:13,609 --> 01:38:23,409
lights to us or something so if you

1963
01:38:17,539 --> 01:38:27,859
imagined here you had like you know and

1964
01:38:23,409 --> 01:38:29,269
closest lights or whatever and you know

1965
01:38:27,859 --> 01:38:32,059
I don't know how many there would

1966
01:38:29,270 --> 01:38:36,400
exactly be but there would be some and

1967
01:38:32,060 --> 01:38:42,530
we would have a find closest lights and

1968
01:38:36,399 --> 01:38:44,929
we would do this sort of thing right and

1969
01:38:42,529 --> 01:38:48,259
then coming out of this we would say

1970
01:38:44,930 --> 01:38:50,659
okay let's pick one of those and I guess

1971
01:38:48,260 --> 01:38:55,039
actually we need these to be the actual

1972
01:38:50,659 --> 01:38:56,989
boxes right so these probably need to be

1973
01:38:55,039 --> 01:38:59,180
like something more like that right and

1974
01:38:56,989 --> 01:39:00,800
then what we would do is say all right

1975
01:38:59,180 --> 01:39:02,360
so coming out of that we've got the end

1976
01:39:00,800 --> 01:39:04,279
closest lights and what we now need to

1977
01:39:02,359 --> 01:39:07,969
do is pick a random one so we would say

1978
01:39:04,279 --> 01:39:12,309
n closest lights and we would take you

1979
01:39:07,970 --> 01:39:12,310
know something like this

1980
01:39:13,880 --> 01:39:19,440
right so pick a random one of the lights

1981
01:39:17,729 --> 01:39:21,659
out of here

1982
01:39:19,439 --> 01:39:23,699
to do the you know the starting sort of

1983
01:39:21,659 --> 01:39:25,590
sample and maybe we need this thing to

1984
01:39:23,699 --> 01:39:27,389
be slightly different right we may not

1985
01:39:25,590 --> 01:39:29,150
want it to be based on the same thing

1986
01:39:27,390 --> 01:39:31,890
that's picking these directional samples

1987
01:39:29,149 --> 01:39:34,949
for some obvious reasons because that

1988
01:39:31,890 --> 01:39:46,500
that may affect like you know maybe we

1989
01:39:34,949 --> 01:39:50,220
want that so they're just jittered

1990
01:39:46,500 --> 01:39:57,060
separately in here we would say okay we

1991
01:39:50,220 --> 01:40:01,409
pick out one of those you know for our

1992
01:39:57,060 --> 01:40:03,539
bias towards light and then what we

1993
01:40:01,409 --> 01:40:06,840
would do is pick some random points on

1994
01:40:03,539 --> 01:40:08,489
that light source so you know we

1995
01:40:06,840 --> 01:40:13,130
probably wouldn't want to do this

1996
01:40:08,489 --> 01:40:13,130
exactly although right now we maybe will

1997
01:40:20,670 --> 01:40:24,420
but in the future we'll want to like

1998
01:40:22,260 --> 01:40:28,560
pick random points inside the actual

1999
01:40:24,420 --> 01:40:31,409
light volume itself and so then what we

2000
01:40:28,560 --> 01:40:33,210
will do is bias towards those so we will

2001
01:40:31,409 --> 01:40:36,359
you know for now we could pick it where

2002
01:40:33,210 --> 01:40:38,489
we do bias towards light here's the you

2003
01:40:36,359 --> 01:40:39,960
know the position and then off we go but

2004
01:40:38,489 --> 01:40:42,840
in the future what we do is we'd pick

2005
01:40:39,960 --> 01:40:44,670
for actual points on there and I don't

2006
01:40:42,840 --> 01:40:47,039
know if we have any functions for doing

2007
01:40:44,670 --> 01:40:49,500
that but that's what we would do we can

2008
01:40:47,039 --> 01:40:51,449
expand this out a little bit and say

2009
01:40:49,500 --> 01:40:53,220
that well the raid erection I also don't

2010
01:40:51,449 --> 01:40:54,659
know if this needs to be normalized to

2011
01:40:53,220 --> 01:40:58,560
be completely honest I'm not sure why it

2012
01:40:54,659 --> 01:40:59,819
would have to be I don't know that

2013
01:40:58,560 --> 01:41:03,020
there's anything in here that actually

2014
01:40:59,819 --> 01:41:03,019
cares about that

2015
01:41:23,239 --> 01:41:30,559
you know I really don't know that there

2016
01:41:26,029 --> 01:41:34,550
is this inversion I would think would

2017
01:41:30,560 --> 01:41:35,950
take care of any non-normalized aspect

2018
01:41:34,550 --> 01:41:39,140
of the t-value

2019
01:41:35,949 --> 01:41:41,000
so I want to say that you probably just

2020
01:41:39,140 --> 01:41:42,710
don't even care I mean I don't know

2021
01:41:41,000 --> 01:41:44,420
we'll have to double check that because

2022
01:41:42,710 --> 01:41:46,220
when we wrote that routine I don't

2023
01:41:44,420 --> 01:41:47,480
remember whether whether we needed to

2024
01:41:46,220 --> 01:41:49,789
end up with that that inversion should

2025
01:41:47,479 --> 01:41:51,709
presumably just take care of it so I

2026
01:41:49,789 --> 01:41:57,260
think what you could really do here is

2027
01:41:51,710 --> 01:42:00,800
actually just do like a point on light

2028
01:41:57,260 --> 01:42:03,560
right and then the REA direction would

2029
01:42:00,800 --> 01:42:06,020
actually just loft up the light probe P

2030
01:42:03,560 --> 01:42:08,810
which we already have so this thing here

2031
01:42:06,020 --> 01:42:11,660
we could really do the REA direction is

2032
01:42:08,810 --> 01:42:13,760
just the point on light - the REA origin

2033
01:42:11,659 --> 01:42:15,590
right and that would give us the initial

2034
01:42:13,760 --> 01:42:18,949
ray Direction bias towards the light

2035
01:42:15,590 --> 01:42:21,260
source and off you would go so in order

2036
01:42:18,949 --> 01:42:24,109
to get this working what we would need

2037
01:42:21,260 --> 01:42:28,850
and this is also a to do here like this

2038
01:42:24,109 --> 01:42:31,039
needs to sample one extra right so

2039
01:42:28,850 --> 01:42:34,820
really what has to happen here and this

2040
01:42:31,039 --> 01:42:41,840
is kind of nuts is this maybe needs to

2041
01:42:34,819 --> 01:42:43,699
do that I guess

2042
01:42:41,840 --> 01:42:45,800
well that even that won't really work

2043
01:42:43,699 --> 01:42:48,349
because we need it to update it at the

2044
01:42:45,800 --> 01:42:52,760
end and the point is like when this

2045
01:42:48,350 --> 01:42:55,460
thing updates its gonna it's not gonna

2046
01:42:52,760 --> 01:42:57,890
do the last one right and that's the

2047
01:42:55,460 --> 01:42:59,989
problem so I don't know exactly how we

2048
01:42:57,890 --> 01:43:02,150
want this thing to play out but we have

2049
01:42:59,989 --> 01:43:04,909
a problem there where we would be

2050
01:43:02,149 --> 01:43:08,239
sampling off the wrong part of the

2051
01:43:04,909 --> 01:43:10,430
buffer right so we need there to be like

2052
01:43:08,239 --> 01:43:15,409
an extra maybe there to be like padding

2053
01:43:10,430 --> 01:43:19,730
in here if that makes sense so like to

2054
01:43:15,409 --> 01:43:22,699
do you know add padding and increase by

2055
01:43:19,729 --> 01:43:27,469
one to account for the extra slot used

2056
01:43:22,699 --> 01:43:29,510
by the light bias so that would all just

2057
01:43:27,470 --> 01:43:30,920
work but we need to kind of just add

2058
01:43:29,510 --> 01:43:32,570
some padding there otherwise will fetch

2059
01:43:30,920 --> 01:43:33,449
off the end of this array which we don't

2060
01:43:32,569 --> 01:43:36,149
want to do

2061
01:43:33,448 --> 01:43:37,799
who knows what that will do right so in

2062
01:43:36,149 --> 01:43:45,119
here when we do point on light you know

2063
01:43:37,800 --> 01:43:48,600
for now we can do this as actually that

2064
01:43:45,119 --> 01:43:50,159
but in the future we can pick some

2065
01:43:48,600 --> 01:43:52,410
different random points in that light

2066
01:43:50,159 --> 01:43:55,500
volume and and obviously I think that

2067
01:43:52,409 --> 01:43:57,809
would be better so really what we'll end

2068
01:43:55,500 --> 01:44:01,460
up with is this we're fine closest

2069
01:43:57,810 --> 01:44:01,460
lights needs to actually do something

2070
01:44:05,840 --> 01:44:10,949
yeah and I think that's basically it so

2071
01:44:09,510 --> 01:44:12,510
we'll leave it there

2072
01:44:10,948 --> 01:44:15,599
and next weekend what we'll have to do

2073
01:44:12,510 --> 01:44:17,880
is actually push through this part of it

2074
01:44:15,600 --> 01:44:19,410
which is mostly I don't think there's

2075
01:44:17,880 --> 01:44:21,179
going to be that much debugging of this

2076
01:44:19,409 --> 01:44:22,889
stuff because I think we've already

2077
01:44:21,179 --> 01:44:25,649
spent a fair bit of time to bugging this

2078
01:44:22,890 --> 01:44:27,300
stuff now but what we're gonna have to

2079
01:44:25,649 --> 01:44:30,899
spend all our time on next weekend is

2080
01:44:27,300 --> 01:44:33,960
figuring out how the heck to do updating

2081
01:44:30,899 --> 01:44:36,889
of our voxel field right because that's

2082
01:44:33,960 --> 01:44:40,679
the big thing we don't know this stuff

2083
01:44:36,890 --> 01:44:44,520
here spam voxel we just don't know how

2084
01:44:40,679 --> 01:44:46,289
we're gonna do it right and so until we

2085
01:44:44,520 --> 01:44:48,060
get that straightened away we're kind of

2086
01:44:46,289 --> 01:44:49,619
dead in the water and so that's gonna be

2087
01:44:48,060 --> 01:44:52,400
the thing that's that's really that

2088
01:44:49,619 --> 01:44:55,769
we're gonna have to then pull onto and

2089
01:44:52,399 --> 01:45:00,619
and and you know and figure out how to

2090
01:44:55,770 --> 01:45:00,620
do let's go ahead and go to the QA here

2091
01:47:01,429 --> 01:47:06,569
what does the go-to assembler for 64-bit

2092
01:47:04,560 --> 01:47:08,580
code on Windows these days is Masum

2093
01:47:06,569 --> 01:47:12,448
still maintained or people moving to

2094
01:47:08,579 --> 01:47:15,448
NASM it's yeah so the answer there as

2095
01:47:12,448 --> 01:47:25,738
far as I know is NASM so if you want to

2096
01:47:15,448 --> 01:47:34,579
do assembler typically it's NASM so it's

2097
01:47:25,738 --> 01:47:37,738
this thing I guess I don't necessarily

2098
01:47:34,579 --> 01:47:41,309
know why but I believe the reason is

2099
01:47:37,738 --> 01:47:43,019
because it's actually been updated to

2100
01:47:41,310 --> 01:47:46,080
support like generating stuff like

2101
01:47:43,020 --> 01:47:52,230
PlayStation 4 fineries and stuff like

2102
01:47:46,079 --> 01:47:54,439
this or you know that's not the NASM we

2103
01:47:52,229 --> 01:47:54,439
men

2104
01:48:01,569 --> 01:48:25,099
so I don't actually know look I want to

2105
01:48:18,920 --> 01:48:26,210
say that some some of the rad folks like

2106
01:48:25,100 --> 01:48:27,980
help with it too

2107
01:48:26,210 --> 01:48:31,630
I'm not sure I don't know how to

2108
01:48:27,979 --> 01:48:31,629
actually search any of this stuff

2109
01:48:38,618 --> 01:48:45,838
why does SourceForge even still exist is

2110
01:48:43,238 --> 01:48:45,838
the real question

2111
01:49:02,579 --> 01:49:10,600
yeah I don't know my understanding was

2112
01:49:05,109 --> 01:49:15,729
like that's what people use I don't

2113
01:49:10,600 --> 01:49:18,150
really know why necessarily but I think

2114
01:49:15,729 --> 01:49:21,039
it's because it's had the most updating

2115
01:49:18,149 --> 01:49:23,949
and so like if you're going to assemble

2116
01:49:21,039 --> 01:49:27,189
code with it you've got the highest

2117
01:49:23,949 --> 01:49:28,599
chance of it actually producing binary

2118
01:49:27,189 --> 01:49:30,789
that can be linked with modern

2119
01:49:28,600 --> 01:49:33,940
executables so things that are you know

2120
01:49:30,789 --> 01:49:40,600
have to go through code signing things

2121
01:49:33,939 --> 01:49:45,309
that have to that have to pass some kind

2122
01:49:40,600 --> 01:49:48,039
of a like check LLVM check that you know

2123
01:49:45,310 --> 01:49:50,880
that Sony requires before you ship a

2124
01:49:48,039 --> 01:49:58,689
PlayStation binary crap like that right

2125
01:49:50,880 --> 01:49:59,800
and so I don't actually know I don't

2126
01:49:58,689 --> 01:50:02,319
actually know if there's any other

2127
01:49:59,800 --> 01:50:03,789
reason why people use it other than it

2128
01:50:02,319 --> 01:50:05,259
kind of just got settled on for that and

2129
01:50:03,789 --> 01:50:06,488
it's the one that's been the most patch

2130
01:50:05,260 --> 01:50:11,130
for that because I mean like there's

2131
01:50:06,488 --> 01:50:11,129
also just like why azzam and stuff right

2132
01:50:13,479 --> 01:50:19,419
and I don't know why like you wouldn't

2133
01:50:17,439 --> 01:50:23,829
use this one and you would use the other

2134
01:50:19,420 --> 01:50:27,520
one or something I just I just don't

2135
01:50:23,829 --> 01:50:30,640
know they both like for my purposes like

2136
01:50:27,520 --> 01:50:32,350
building now hash and stuff things like

2137
01:50:30,640 --> 01:50:34,000
that that I wanted to use an assembler

2138
01:50:32,350 --> 01:50:36,640
for I didn't notice a huge difference

2139
01:50:34,000 --> 01:50:37,539
between the two like it just kind of

2140
01:50:36,640 --> 01:50:41,260
works either way

2141
01:50:37,539 --> 01:50:43,810
and so I don't really know like I'm

2142
01:50:41,260 --> 01:50:48,039
guessing again that it cuz an assembler

2143
01:50:43,810 --> 01:50:53,610
is not a particularly crazy thing so I

2144
01:50:48,039 --> 01:50:53,609
don't really know exactly where the

2145
01:50:54,270 --> 01:50:58,800
where the differences are that matter

2146
01:51:06,840 --> 01:51:10,980
I'm gonna go ahead and assume that X 13

2147
01:51:09,329 --> 01:51:13,559
pixels answered the question about

2148
01:51:10,979 --> 01:51:17,849
remedy BJ since he is the person who

2149
01:51:13,560 --> 01:51:19,860
wrote it do you think with all recent

2150
01:51:17,850 --> 01:51:21,630
processor vulnerabilities being found

2151
01:51:19,859 --> 01:51:23,549
that future processors will use a

2152
01:51:21,630 --> 01:51:26,390
fundamentally different optimizing

2153
01:51:23,550 --> 01:51:26,390
architecture

2154
01:51:36,189 --> 01:51:47,500
I guess I don't know I really am not

2155
01:51:43,930 --> 01:51:55,240
sure I guess what I would say is my

2156
01:51:47,500 --> 01:51:56,949
guess would be that in in the future I

2157
01:51:55,239 --> 01:51:58,449
could see a switching to some kind of

2158
01:51:56,949 --> 01:52:03,399
thing where we actually had partitioned

2159
01:51:58,449 --> 01:52:06,130
cores you know I could imagine something

2160
01:52:03,399 --> 01:52:08,289
where like you actually just have these

2161
01:52:06,130 --> 01:52:10,750
like security cores that are running

2162
01:52:08,289 --> 01:52:13,600
like code from the web and then you have

2163
01:52:10,750 --> 01:52:15,939
like actual secure cores that insecure

2164
01:52:13,600 --> 01:52:18,850
core is that that are fast or something

2165
01:52:15,939 --> 01:52:21,819
I could believe it because I feel like

2166
01:52:18,850 --> 01:52:27,490
they're gonna keep squeezing more and

2167
01:52:21,819 --> 01:52:29,349
more sort of leakage like like black

2168
01:52:27,489 --> 01:52:32,849
hats are gonna be able to take advantage

2169
01:52:29,350 --> 01:52:38,410
of every last little bit of leaky

2170
01:52:32,850 --> 01:52:43,710
execution and at some point what that

2171
01:52:38,409 --> 01:52:45,460
means is that fundamentally the

2172
01:52:43,710 --> 01:52:48,819
optimizations you can put into a

2173
01:52:45,460 --> 01:52:51,579
processor core either they're always

2174
01:52:48,819 --> 01:52:53,920
making the chip faster or you can't use

2175
01:52:51,579 --> 01:52:56,649
them because anything that makes a chip

2176
01:52:53,920 --> 01:52:59,170
faster only in some circumstances is now

2177
01:52:56,649 --> 01:53:02,859
a security hole for like it leaks

2178
01:52:59,170 --> 01:53:10,060
information right which was going to be

2179
01:53:02,859 --> 01:53:14,679
exploited by someone at some point and

2180
01:53:10,060 --> 01:53:18,430
and so I I don't know I do think that

2181
01:53:14,680 --> 01:53:23,289
there there's a possibility that we just

2182
01:53:18,430 --> 01:53:28,329
won't have symmetric optimizations

2183
01:53:23,289 --> 01:53:30,340
anymore and you'll end up with things

2184
01:53:28,329 --> 01:53:37,269
where it's it's largely asymmetric

2185
01:53:30,340 --> 01:53:39,279
perhaps so it's like hey you know if you

2186
01:53:37,270 --> 01:53:42,460
know you're doing scientific computing

2187
01:53:39,279 --> 01:53:44,229
and you're the only person on this

2188
01:53:42,460 --> 01:53:49,359
computer and it's unplugged from the

2189
01:53:44,229 --> 01:53:50,109
internet anyway you just maybe you just

2190
01:53:49,359 --> 01:53:53,939
run

2191
01:53:50,109 --> 01:53:56,319
the on the fastest possible core setting

2192
01:53:53,939 --> 01:53:58,419
whereas if you're like a datacenter

2193
01:53:56,319 --> 01:54:01,000
running like multiple things on one

2194
01:53:58,420 --> 01:54:04,569
machine you're gonna have to set the

2195
01:54:01,000 --> 01:54:06,640
dial over to paranoid mode and all of

2196
01:54:04,569 --> 01:54:09,789
the cores are slower because they can't

2197
01:54:06,640 --> 01:54:13,079
actually do you know any of the actual

2198
01:54:09,789 --> 01:54:17,198
things that you want for for

2199
01:54:13,079 --> 01:54:25,840
opportunistic optimization right I don't

2200
01:54:17,198 --> 01:54:29,049
know what's the go-to thing for learning

2201
01:54:25,840 --> 01:54:31,480
assembly no idea read the read the

2202
01:54:29,050 --> 01:54:37,570
disassembly of your compiler I mean

2203
01:54:31,479 --> 01:54:39,069
would be one big way right god bolt you

2204
01:54:37,569 --> 01:54:40,329
know look at look at what your compiler

2205
01:54:39,069 --> 01:54:42,460
is generating because that kind of

2206
01:54:40,329 --> 01:54:44,800
teaches you how anything that you know

2207
01:54:42,460 --> 01:54:47,020
how to type and see how it comes out as

2208
01:54:44,800 --> 01:54:48,760
assembly and so you can kind of get a

2209
01:54:47,020 --> 01:54:51,460
really quick understanding of what's

2210
01:54:48,760 --> 01:54:54,039
going on doing that and just playing

2211
01:54:51,460 --> 01:54:55,448
with it if assemblers are better when

2212
01:54:54,039 --> 01:54:57,279
you consider programming an x86 arm

2213
01:54:55,448 --> 01:54:59,439
directly whichever you're trying to

2214
01:54:57,279 --> 01:55:00,880
target primarily for everything maybe it

2215
01:54:59,439 --> 01:55:02,289
would auto translate on the back end and

2216
01:55:00,880 --> 01:55:09,310
you could rewrite critical sections for

2217
01:55:02,289 --> 01:55:15,189
secondary platforms I mean the answer is

2218
01:55:09,310 --> 01:55:19,570
no because a sufficiently good assembler

2219
01:55:15,189 --> 01:55:21,369
is a high level language right if the

2220
01:55:19,569 --> 01:55:23,469
question is would I like my language to

2221
01:55:21,369 --> 01:55:24,930
be continuous from assembly up to high

2222
01:55:23,469 --> 01:55:27,489
level constructs the answer is yes

2223
01:55:24,930 --> 01:55:29,619
absolutely it's the primary problem with

2224
01:55:27,488 --> 01:55:32,169
modern languages is they don't provide a

2225
01:55:29,619 --> 01:55:34,300
continuous way to refine your program

2226
01:55:32,170 --> 01:55:37,930
down to manual assembler right I mean

2227
01:55:34,300 --> 01:55:42,670
that's what all languages always should

2228
01:55:37,930 --> 01:55:44,530
provide and so I definitely think that's

2229
01:55:42,670 --> 01:55:46,329
a good idea but you wouldn't call that

2230
01:55:44,529 --> 01:55:48,099
an assembler anymore

2231
01:55:46,329 --> 01:55:50,260
I mean because this an assembler is a

2232
01:55:48,100 --> 01:55:54,370
term specifically used to refer to

2233
01:55:50,260 --> 01:55:57,219
something that does not do any advanced

2234
01:55:54,369 --> 01:56:00,939
language constructs really right macro

2235
01:55:57,219 --> 01:56:02,289
assembler is about the most advanced

2236
01:56:00,939 --> 01:56:03,638
thing you're really supposed to be doing

2237
01:56:02,289 --> 01:56:05,969
before you would have to

2238
01:56:03,639 --> 01:56:11,050
call it a language its own language

2239
01:56:05,969 --> 01:56:12,639
right and I mean to a certain extent I

2240
01:56:11,050 --> 01:56:15,189
don't really even know if you can call a

2241
01:56:12,639 --> 01:56:17,168
macro assembler and assembler because at

2242
01:56:15,189 --> 01:56:19,090
some point if those macros are powerful

2243
01:56:17,168 --> 01:56:21,158
enough they're really constituting a

2244
01:56:19,090 --> 01:56:22,689
language and so you really shouldn't

2245
01:56:21,158 --> 01:56:26,198
call it assembly language because it's

2246
01:56:22,689 --> 01:56:29,649
not it's assembly language plus at the

2247
01:56:26,198 --> 01:56:30,788
very least right and so I think you're

2248
01:56:29,649 --> 01:56:32,979
really we're really splitting hairs

2249
01:56:30,788 --> 01:56:37,389
there if we want to look at it but I

2250
01:56:32,979 --> 01:56:39,610
mean that's my that's my opinion any

2251
01:56:37,389 --> 01:56:42,699
sufficiently advanced assembler is now

2252
01:56:39,609 --> 01:56:45,368
its own language which is great and I'm

2253
01:56:42,698 --> 01:56:48,158
interested in looking at it but I

2254
01:56:45,368 --> 01:56:53,889
wouldn't call it an assembler anymore

2255
01:56:48,158 --> 01:56:59,918
it's it's a new language called whatever

2256
01:56:53,889 --> 01:57:01,719
you called it right do you never write

2257
01:56:59,918 --> 01:57:03,880
ups to learn to how to avoid CC poses

2258
01:57:01,719 --> 01:57:06,819
runtown on windows by martins mosaic Oh

2259
01:57:03,880 --> 01:57:10,958
on the handmade hero forum but for Linux

2260
01:57:06,819 --> 01:57:16,109
I don't I think that would be a good

2261
01:57:10,958 --> 01:57:16,109
article but no I don't I don't know

2262
01:57:31,229 --> 01:57:41,159
all right that's it for the Q's let's

2263
01:57:35,909 --> 01:57:42,689
wrap things up close down remedy oops

2264
01:57:41,159 --> 01:57:46,380
didn't actually mean to close that but

2265
01:57:42,689 --> 01:57:47,429
will close that as well alrighty thank

2266
01:57:46,380 --> 01:57:48,810
you everyone for joining me for the

2267
01:57:47,430 --> 01:57:50,730
episode of handmade he wrote sort of

2268
01:57:48,810 --> 01:57:54,120
pleasure coding with you as always if

2269
01:57:50,729 --> 01:57:57,119
you would like to follow along with a

2270
01:57:54,119 --> 01:57:59,039
series at home you can always pre-order

2271
01:57:57,119 --> 01:58:00,720
the game at hand meteor organ it comes

2272
01:57:59,039 --> 01:58:03,449
with all the source code right now

2273
01:58:00,720 --> 01:58:05,730
so you can play around with it yourself

2274
01:58:03,449 --> 01:58:10,889
maybe you want to try doing your own

2275
01:58:05,729 --> 01:58:13,019
averaging of the voxel and that probably

2276
01:58:10,890 --> 01:58:14,579
good exercise for the week it's a tough

2277
01:58:13,020 --> 01:58:15,990
problem though I don't know the answer

2278
01:58:14,579 --> 01:58:20,069
offhand we're gonna try and figure it

2279
01:58:15,989 --> 01:58:22,859
out next weekend but you could give it a

2280
01:58:20,069 --> 01:58:25,289
shot and see what you come up with until

2281
01:58:22,859 --> 01:58:27,119
then have fun programming everyone and

2282
01:58:25,289 --> 01:58:29,390
I'll see you on the Internet take it

2283
01:58:27,119 --> 01:58:29,390
easy everybody

