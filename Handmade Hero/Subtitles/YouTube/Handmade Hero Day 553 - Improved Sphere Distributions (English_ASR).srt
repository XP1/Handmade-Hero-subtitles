1
00:00:00,140 --> 00:00:03,780
hello everybody and welcome to hand made

2
00:00:02,759 --> 00:00:06,660
here oh sure we could a complete-game

3
00:00:03,779 --> 00:00:10,379
live on stream we did the work yesterday

4
00:00:06,660 --> 00:00:12,179
of making sort of a permanent source

5
00:00:10,380 --> 00:00:15,298
code file that we generate ourselves

6
00:00:12,179 --> 00:00:18,210
which has sampling spheres in it for

7
00:00:15,298 --> 00:00:19,618
sampling our lighting and the reason

8
00:00:18,210 --> 00:00:22,199
we're doing this is because we don't

9
00:00:19,618 --> 00:00:23,820
want the burden of producing high

10
00:00:22,199 --> 00:00:25,980
quality sampling patterns at runtime

11
00:00:23,820 --> 00:00:27,629
because that would cost too much so we

12
00:00:25,980 --> 00:00:29,519
want to do instead is build some

13
00:00:27,629 --> 00:00:31,018
sampling patterns that we can just use

14
00:00:29,518 --> 00:00:32,729
that don't cost us anything because we

15
00:00:31,018 --> 00:00:35,549
just have them stored as raw data arrays

16
00:00:32,729 --> 00:00:37,919
and we just use them directly that's

17
00:00:35,549 --> 00:00:39,569
what we want to do and so we did all the

18
00:00:37,920 --> 00:00:42,179
work to do that but we haven't done yet

19
00:00:39,570 --> 00:00:45,000
is actually put something into that

20
00:00:42,179 --> 00:00:48,170
generator that produces nice like high

21
00:00:45,000 --> 00:00:50,909
quality sampling patterns that actually

22
00:00:48,170 --> 00:00:53,850
sort of cover the sphere in a nice

23
00:00:50,909 --> 00:00:56,429
uniform way now there's a lot of ways we

24
00:00:53,850 --> 00:00:58,198
might do this and we're gonna have to

25
00:00:56,429 --> 00:01:00,238
talk about those now but that is our

26
00:00:58,198 --> 00:01:03,420
goal for today is just to take that code

27
00:01:00,238 --> 00:01:05,158
we wrote yesterday and augment the part

28
00:01:03,420 --> 00:01:07,260
that generates the spheres to instead of

29
00:01:05,159 --> 00:01:09,299
just spewing white noise and normalizing

30
00:01:07,260 --> 00:01:13,969
it out to the sphere what we want to do

31
00:01:09,299 --> 00:01:16,618
instead is have some sort of a nice

32
00:01:13,969 --> 00:01:19,530
uniform covering of that sphere that's

33
00:01:16,618 --> 00:01:21,659
noisy meaning it's random points but

34
00:01:19,530 --> 00:01:25,530
that they still tend to have a sort of

35
00:01:21,659 --> 00:01:28,500
roughly equidistant kind of you know

36
00:01:25,530 --> 00:01:30,269
covering to them right so what I'm gonna

37
00:01:28,500 --> 00:01:31,828
do now is I'm just gonna show you what

38
00:01:30,269 --> 00:01:33,780
I'm talking about for those people who

39
00:01:31,828 --> 00:01:35,599
missed our stream yesterday and then

40
00:01:33,780 --> 00:01:40,049
we're gonna talk about some strategies

41
00:01:35,599 --> 00:01:42,989
that we can use to try and solve this

42
00:01:40,049 --> 00:01:46,049
problem right so here goes the build

43
00:01:42,989 --> 00:01:48,658
just making sure everything's built okay

44
00:01:46,049 --> 00:01:56,040
I also should probably note that there

45
00:01:48,659 --> 00:01:58,860
was a Oh where's our github I should

46
00:01:56,040 --> 00:02:01,740
also note some people were saying for

47
00:01:58,859 --> 00:02:04,200
GCC we wanted to put our line as it's

48
00:02:01,739 --> 00:02:06,179
just a mop for Linux compiles there's a

49
00:02:04,200 --> 00:02:07,530
line ass movement we want to do so maybe

50
00:02:06,180 --> 00:02:09,689
I'll do that really quick to just to

51
00:02:07,530 --> 00:02:12,598
help those folks out in the sphere

52
00:02:09,689 --> 00:02:13,270
generator this has nothing to do but I

53
00:02:12,598 --> 00:02:15,280
wanted

54
00:02:13,270 --> 00:02:17,409
this has nothing to do with what we were

55
00:02:15,280 --> 00:02:20,289
going to do today but it's just a really

56
00:02:17,409 --> 00:02:21,699
quick change we can make so basically

57
00:02:20,289 --> 00:02:23,709
what happened is we wanted to make sure

58
00:02:21,699 --> 00:02:26,319
that these things were aligned so that

59
00:02:23,710 --> 00:02:29,290
in case the compiler generated sse loads

60
00:02:26,319 --> 00:02:31,269
that required alignment they would be

61
00:02:29,289 --> 00:02:34,509
correctly aligned to sixteen by

62
00:02:31,270 --> 00:02:36,700
boundaries this global align as here is

63
00:02:34,509 --> 00:02:39,189
the line in question and what they

64
00:02:36,699 --> 00:02:41,229
wanted was just to say look global has

65
00:02:39,189 --> 00:02:43,539
to come after it or GCC gets really

66
00:02:41,229 --> 00:02:46,090
confused so will try just doing that

67
00:02:43,539 --> 00:02:48,219
move we've got two of those there's one

68
00:02:46,090 --> 00:02:49,330
here and there's one here and it's

69
00:02:48,219 --> 00:02:50,530
assuming they don't cause us any

70
00:02:49,330 --> 00:02:52,270
problems we're just gonna leave it like

71
00:02:50,530 --> 00:02:54,819
that again that's just to allow people

72
00:02:52,270 --> 00:02:56,350
comply with GCC which we don't do but

73
00:02:54,819 --> 00:02:58,090
people who try to follow a long series

74
00:02:56,349 --> 00:02:59,289
on GCC just trying to make it so they

75
00:02:58,090 --> 00:03:01,210
don't have to make any changes to the

76
00:02:59,289 --> 00:03:03,400
code base to compile it right that's all

77
00:03:01,210 --> 00:03:06,820
we're doing there okay so anyway if we

78
00:03:03,400 --> 00:03:08,740
go ahead and compile and just verify

79
00:03:06,819 --> 00:03:10,689
that everything compiles okay we're not

80
00:03:08,740 --> 00:03:12,129
actually running this at the moment but

81
00:03:10,689 --> 00:03:14,050
we can probably add some stuff for that

82
00:03:12,129 --> 00:03:16,840
in a minute if we go to the debugger and

83
00:03:14,050 --> 00:03:18,580
we run the debug build of our game which

84
00:03:16,840 --> 00:03:19,750
is a little slower frame rate rise but

85
00:03:18,580 --> 00:03:21,400
when the lighting isn't running it's

86
00:03:19,750 --> 00:03:24,430
still totally usable that's the main

87
00:03:21,400 --> 00:03:27,550
difference lighting takes up a heck of a

88
00:03:24,430 --> 00:03:29,680
lot of frame time in in debug mode so if

89
00:03:27,550 --> 00:03:31,239
I go ahead and take a look here what you

90
00:03:29,680 --> 00:03:32,319
can see is those are all our light probe

91
00:03:31,239 --> 00:03:34,060
points we're gonna be starting with

92
00:03:32,319 --> 00:03:35,409
these or our purple points after we're

93
00:03:34,060 --> 00:03:37,120
trying to get working as light probing

94
00:03:35,409 --> 00:03:39,129
there and in order to sample we sort of

95
00:03:37,120 --> 00:03:41,409
built this little sphere here that we're

96
00:03:39,129 --> 00:03:42,969
just visualizing the lighting directions

97
00:03:41,409 --> 00:03:44,469
that we're generating on the sphere and

98
00:03:42,969 --> 00:03:46,870
you can see it kind of hanging out

99
00:03:44,469 --> 00:03:49,180
around up here and what you can see is

100
00:03:46,870 --> 00:03:51,519
this this is a white noise and white

101
00:03:49,180 --> 00:03:53,319
noise for those of you who haven't filed

102
00:03:51,519 --> 00:03:56,890
a series much and don't know the about

103
00:03:53,319 --> 00:03:59,919
the colors of noise white noise is

104
00:03:56,889 --> 00:04:04,149
basically pure entropy it's entropy that

105
00:03:59,919 --> 00:04:07,000
is as close as possible to real random

106
00:04:04,150 --> 00:04:09,360
events so something that has no

107
00:04:07,000 --> 00:04:11,620
correlation or pattern to it whatsoever

108
00:04:09,360 --> 00:04:14,110
that's what we've done here we've done

109
00:04:11,620 --> 00:04:18,160
as close as we can to white noise on a

110
00:04:14,110 --> 00:04:19,689
cube or inside a cube I should say so

111
00:04:18,160 --> 00:04:23,950
just generating points inside of cube

112
00:04:19,689 --> 00:04:26,439
and then we pressed those points out to

113
00:04:23,949 --> 00:04:27,759
their closest point on the sphere and

114
00:04:26,439 --> 00:04:31,689
we got here and that's why you can see

115
00:04:27,759 --> 00:04:32,920
it's roughly like pure entropy like

116
00:04:31,689 --> 00:04:34,600
you've seen here it just looks like a

117
00:04:32,920 --> 00:04:36,670
random clustering of points some far

118
00:04:34,600 --> 00:04:38,680
some close right which is what you say

119
00:04:36,670 --> 00:04:41,290
from randomness but you can see that

120
00:04:38,680 --> 00:04:43,990
there is some really sparse obvious

121
00:04:41,290 --> 00:04:45,939
places along the faces of the cube and

122
00:04:43,990 --> 00:04:49,600
that's to be expected because there's

123
00:04:45,939 --> 00:04:51,250
more area more volume out if you look at

124
00:04:49,600 --> 00:04:54,100
the different cube in a sphere there's

125
00:04:51,250 --> 00:04:57,250
more area of that a volume of that cube

126
00:04:54,100 --> 00:04:59,620
in the corners right that all gets

127
00:04:57,250 --> 00:05:02,529
mushed down that whole part gets smushed

128
00:04:59,620 --> 00:05:06,579
down to the same general region of the

129
00:05:02,529 --> 00:05:09,099
cube and so even if we were trying to do

130
00:05:06,579 --> 00:05:11,589
pure entropy this isn't a good way to do

131
00:05:09,100 --> 00:05:12,400
it right and we knew that we were just

132
00:05:11,589 --> 00:05:14,199
trying to put something in there to make

133
00:05:12,399 --> 00:05:16,089
sure our whole code path works so this

134
00:05:14,199 --> 00:05:18,759
is kind of roughly what we would expect

135
00:05:16,089 --> 00:05:20,729
to see for white noise inside the volume

136
00:05:18,759 --> 00:05:22,750
of a cube then pressed on to a sphere

137
00:05:20,730 --> 00:05:24,550
but that's neither here nor there

138
00:05:22,750 --> 00:05:27,040
because I just want to show you it

139
00:05:24,550 --> 00:05:30,699
running right now because we don't want

140
00:05:27,040 --> 00:05:32,140
white noise anyway and so let's talk

141
00:05:30,699 --> 00:05:33,189
about the kind of noise we want we've

142
00:05:32,139 --> 00:05:34,389
talked about before and handmade here oh

143
00:05:33,189 --> 00:05:35,860
you should all know what blue noise is

144
00:05:34,389 --> 00:05:38,949
but we'll talk about it one more time

145
00:05:35,860 --> 00:05:40,689
blue now is also called plus lon noise

146
00:05:38,949 --> 00:05:42,729
sometimes they have slightly different

147
00:05:40,689 --> 00:05:46,449
meanings but for our purposes they're

148
00:05:42,730 --> 00:05:53,680
usually oops used interchangeably what's

149
00:05:46,449 --> 00:05:55,659
going on all right sorry about that

150
00:05:53,680 --> 00:05:57,370
all right so let's just talk about this

151
00:05:55,660 --> 00:06:00,070
really quickly on the on the blackboard

152
00:05:57,370 --> 00:06:01,600
I'll mention the blue noise and what

153
00:06:00,069 --> 00:06:03,069
we're trying to accomplish with that

154
00:06:01,600 --> 00:06:07,290
and then we can talk about how we're

155
00:06:03,069 --> 00:06:07,290
going to get it or ways we could get it

156
00:06:12,100 --> 00:06:16,570
so we're gonna talk about blue noise

157
00:06:13,870 --> 00:06:17,649
slices today and I'm gonna talk about

158
00:06:16,569 --> 00:06:19,750
sampling patterns in general a little

159
00:06:17,649 --> 00:06:22,299
bit here and we'll just kind of go over

160
00:06:19,750 --> 00:06:24,490
what we might want to do so like I said

161
00:06:22,300 --> 00:06:26,980
if we are talking about let's just say a

162
00:06:24,490 --> 00:06:29,740
2d domain because that's a little bit

163
00:06:26,980 --> 00:06:31,569
easier to describe first then we could

164
00:06:29,740 --> 00:06:33,340
talk about the types of noise that we

165
00:06:31,569 --> 00:06:37,240
might be talking about and we could have

166
00:06:33,339 --> 00:06:39,549
blue and white this we could call you

167
00:06:37,240 --> 00:06:44,860
know sort of entropy and this we could

168
00:06:39,550 --> 00:06:49,060
call Poisson perhaps we could also call

169
00:06:44,860 --> 00:06:51,100
this random who knows depends on how you

170
00:06:49,060 --> 00:06:54,610
want to talk about it but this is not

171
00:06:51,100 --> 00:06:57,490
right this this is not going to be that

172
00:06:54,610 --> 00:06:59,920
so white noise is the equivalent of

173
00:06:57,490 --> 00:07:02,680
literally randomly picking a point so if

174
00:06:59,920 --> 00:07:05,290
I pick some point here the next point

175
00:07:02,680 --> 00:07:07,780
that I pick can literally be anywhere

176
00:07:05,290 --> 00:07:11,080
there are no restrictions on where that

177
00:07:07,779 --> 00:07:14,549
point could be and there's no reason I

178
00:07:11,079 --> 00:07:16,990
mean literally a pure random

179
00:07:14,550 --> 00:07:19,120
distribution of points could have two

180
00:07:16,990 --> 00:07:20,949
points on top of each other my first a

181
00:07:19,120 --> 00:07:23,740
second point can be in the same place in

182
00:07:20,949 --> 00:07:26,469
an entropic distribution right why

183
00:07:23,740 --> 00:07:29,019
because pure chance could someday

184
00:07:26,470 --> 00:07:32,650
produce that right I may get the exact

185
00:07:29,019 --> 00:07:35,259
same point twice it's possible with pure

186
00:07:32,649 --> 00:07:37,299
entropy what you generally see with pure

187
00:07:35,259 --> 00:07:40,319
entropy right is just complete you know

188
00:07:37,300 --> 00:07:42,790
it's just this it just looks like

189
00:07:40,319 --> 00:07:43,990
complete random there's no pattern to it

190
00:07:42,790 --> 00:07:47,290
you can't find a pattern

191
00:07:43,990 --> 00:07:49,840
knowing one point or some sequence of

192
00:07:47,290 --> 00:07:51,370
points tells you nothing about the point

193
00:07:49,839 --> 00:07:52,989
that comes next to it that next point

194
00:07:51,370 --> 00:07:54,819
could be right next to the from that one

195
00:07:52,990 --> 00:07:57,370
you just did it could be completely off

196
00:07:54,819 --> 00:07:59,379
in the other direction there again

197
00:07:57,370 --> 00:08:01,840
there's no guarantees about it at all

198
00:07:59,379 --> 00:08:04,569
all you could really say about pure

199
00:08:01,839 --> 00:08:10,209
entropy is that if you took enough of it

200
00:08:04,569 --> 00:08:11,740
you should see something that you know

201
00:08:10,209 --> 00:08:13,750
you shouldn't be able to get

202
00:08:11,740 --> 00:08:15,490
extraordinarily improbable things like

203
00:08:13,750 --> 00:08:17,620
everything clustered right there right

204
00:08:15,490 --> 00:08:19,900
if you take a big enough random series

205
00:08:17,620 --> 00:08:23,230
you should see a relative coverage of

206
00:08:19,899 --> 00:08:25,870
the space with some gradually varying

207
00:08:23,230 --> 00:08:28,000
density right but you should generate

208
00:08:25,870 --> 00:08:30,220
we cover everything because if it's

209
00:08:28,000 --> 00:08:31,930
really random there shouldn't be any

210
00:08:30,220 --> 00:08:33,580
bias eventually towards putting

211
00:08:31,930 --> 00:08:34,840
everything in one place but that's it

212
00:08:33,580 --> 00:08:36,009
that's all you really know you don't

213
00:08:34,840 --> 00:08:37,990
really know anything else about it

214
00:08:36,009 --> 00:08:40,120
because it's random and if you could

215
00:08:37,990 --> 00:08:48,789
know something about it it wasn't random

216
00:08:40,120 --> 00:08:53,039
right it's unknowable my face now blue

217
00:08:48,789 --> 00:08:53,039
noise or loss on distribution or

218
00:08:53,250 --> 00:08:56,529
depending on how you want to want to

219
00:08:55,269 --> 00:09:01,629
phrase it there

220
00:08:56,529 --> 00:09:03,009
there's different words for it I when we

221
00:09:01,629 --> 00:09:04,600
talk about that distribution there is

222
00:09:03,009 --> 00:09:06,340
something you could know about it it's

223
00:09:04,600 --> 00:09:07,899
still random meaning you're not supposed

224
00:09:06,340 --> 00:09:09,759
to be able to predict what the next

225
00:09:07,899 --> 00:09:14,500
point is from any given point in the

226
00:09:09,759 --> 00:09:17,559
series in any precise way but unlike the

227
00:09:14,500 --> 00:09:19,690
unknowable pure entropy distribution a

228
00:09:17,559 --> 00:09:22,329
Poisson distribution or a blue noise

229
00:09:19,690 --> 00:09:24,670
distribution is supposed to contain the

230
00:09:22,330 --> 00:09:27,520
property that once a point any point is

231
00:09:24,669 --> 00:09:31,089
placed into the system you will not

232
00:09:27,519 --> 00:09:33,909
place another point near to that point

233
00:09:31,090 --> 00:09:35,860
so there is some sort of a fundamental

234
00:09:33,909 --> 00:09:37,480
distance that usually when we're talking

235
00:09:35,860 --> 00:09:39,220
about these blue noise patterns we care

236
00:09:37,480 --> 00:09:42,310
about that distance and we specify it

237
00:09:39,220 --> 00:09:44,740
perhaps once we've placed on a point

238
00:09:42,309 --> 00:09:48,069
while I cannot tell you anything else

239
00:09:44,740 --> 00:09:52,419
about where I'm going to place my next

240
00:09:48,070 --> 00:09:56,710
point I can tell you it will not be in

241
00:09:52,419 --> 00:09:57,279
here and that goes for the sequence

242
00:09:56,710 --> 00:09:59,970
forever

243
00:09:57,279 --> 00:10:02,860
every time I place a point that

244
00:09:59,970 --> 00:10:05,950
neighborhood around the point is removed

245
00:10:02,860 --> 00:10:07,539
permanently and no future point may land

246
00:10:05,950 --> 00:10:09,280
within there it's not just the next

247
00:10:07,539 --> 00:10:13,629
point that can't land within there it's

248
00:10:09,279 --> 00:10:14,860
any point now these sorts of noise have

249
00:10:13,629 --> 00:10:17,019
different things that you might care

250
00:10:14,860 --> 00:10:20,080
about in terms of audio production or

251
00:10:17,019 --> 00:10:22,329
who knows what but for graphics work we

252
00:10:20,080 --> 00:10:25,330
care about Poisson distributions or blue

253
00:10:22,330 --> 00:10:27,970
noise or whatever you want to call it we

254
00:10:25,330 --> 00:10:30,700
care about these for a number of reasons

255
00:10:27,970 --> 00:10:33,149
they come up a lot and the reason is

256
00:10:30,700 --> 00:10:35,950
because there's two different things

257
00:10:33,149 --> 00:10:39,730
both of which are very important to

258
00:10:35,950 --> 00:10:42,570
graphics and both of which really wants

259
00:10:39,730 --> 00:10:44,259
noise the first one is random

260
00:10:42,570 --> 00:10:46,269
distributions of things that are

261
00:10:44,259 --> 00:10:49,448
supposed to mimic what happens in the

262
00:10:46,269 --> 00:10:50,500
real world okay when things are placed

263
00:10:49,448 --> 00:10:53,948
in the real world

264
00:10:50,500 --> 00:10:56,169
in reality they typically don't follow a

265
00:10:53,948 --> 00:10:58,838
white noise pattern and the reason for

266
00:10:56,169 --> 00:11:03,069
that is that while there is enough

267
00:10:58,839 --> 00:11:07,230
general stochastic randomness entropy in

268
00:11:03,070 --> 00:11:09,970
the real world to produce white noise on

269
00:11:07,230 --> 00:11:12,129
top of that white noise there is

270
00:11:09,970 --> 00:11:13,810
typically some constraint that reduces

271
00:11:12,129 --> 00:11:15,250
it to blue noise and let me give you a

272
00:11:13,809 --> 00:11:17,768
concrete example because you may be

273
00:11:15,250 --> 00:11:20,759
going like ha I don't understand let's

274
00:11:17,769 --> 00:11:23,740
take something like trees

275
00:11:20,759 --> 00:11:26,799
how will trees be placed in the real

276
00:11:23,740 --> 00:11:28,870
world well a tree we get one of them and

277
00:11:26,799 --> 00:11:30,759
it can grow someone planted the seed who

278
00:11:28,870 --> 00:11:33,310
knows how it got there but the first

279
00:11:30,759 --> 00:11:36,278
tree grows that tree produces seeds

280
00:11:33,309 --> 00:11:39,578
those seeds occur throughout the tree

281
00:11:36,278 --> 00:11:41,799
they will fall onto the ground and a

282
00:11:39,578 --> 00:11:43,809
huge number of factors will control

283
00:11:41,799 --> 00:11:46,568
where they fall they will fall near to

284
00:11:43,809 --> 00:11:48,669
the tree to a certain extent but then

285
00:11:46,568 --> 00:11:49,899
the wind will randomly we have no idea

286
00:11:48,669 --> 00:11:51,809
how the wind is going to blow but it

287
00:11:49,899 --> 00:11:54,339
will blow some of the seeds around

288
00:11:51,809 --> 00:11:56,708
animals will eat the seeds and poop them

289
00:11:54,339 --> 00:11:59,290
out somewhere else weak it'll get

290
00:11:56,708 --> 00:12:02,049
situations where you know a bird might

291
00:11:59,289 --> 00:12:03,338
grab some of these things and move huge

292
00:12:02,049 --> 00:12:06,278
numbers of completely unpredictable

293
00:12:03,339 --> 00:12:09,430
things act on these seeds so that

294
00:12:06,278 --> 00:12:12,250
probably we would expect within a region

295
00:12:09,429 --> 00:12:15,388
around the tree we would see basically a

296
00:12:12,250 --> 00:12:18,789
white noise distribution of these points

297
00:12:15,389 --> 00:12:21,459
that is perhaps distributed only with

298
00:12:18,789 --> 00:12:22,958
the density function that says that the

299
00:12:21,458 --> 00:12:25,448
further away you get from the tree the

300
00:12:22,958 --> 00:12:28,088
less you get so we would expect a little

301
00:12:25,448 --> 00:12:30,189
bit of a knowable thing about our white

302
00:12:28,089 --> 00:12:32,440
noise which is that the density of the

303
00:12:30,190 --> 00:12:33,819
noise is centered around the tree and

304
00:12:32,440 --> 00:12:35,050
gets less and less as you get further

305
00:12:33,818 --> 00:12:38,708
from the tree but other than that we

306
00:12:35,049 --> 00:12:40,419
have no idea right so you might think

307
00:12:38,708 --> 00:12:42,039
that if you want to know where trees

308
00:12:40,419 --> 00:12:44,828
grow you would say ah just pick random

309
00:12:42,039 --> 00:12:46,929
points and maybe we'll throw them out

310
00:12:44,828 --> 00:12:49,419
with a higher percentage chance as we

311
00:12:46,929 --> 00:12:52,149
get further from the tree right does

312
00:12:49,419 --> 00:12:53,439
that produce a good estimate of where

313
00:12:52,149 --> 00:12:56,440
trees

314
00:12:53,440 --> 00:12:58,810
and the answer is no why because after

315
00:12:56,440 --> 00:13:01,029
we distributes the seeds what determines

316
00:12:58,809 --> 00:13:04,208
whether a tree grows has a lot to do

317
00:13:01,028 --> 00:13:06,669
with one really big factor how close is

318
00:13:04,208 --> 00:13:09,309
it to an existing tree an existing tree

319
00:13:06,669 --> 00:13:11,409
takes all the sunlight takes nutrients

320
00:13:09,309 --> 00:13:14,708
from the ground takes all the following

321
00:13:11,409 --> 00:13:17,799
rain right and so in order for a new

322
00:13:14,708 --> 00:13:21,039
tree to survive it must be at least some

323
00:13:17,799 --> 00:13:23,198
distance away from the existing tree now

324
00:13:21,039 --> 00:13:25,360
what happens when that new tree grows

325
00:13:23,198 --> 00:13:28,479
this same pattern of white noise will

326
00:13:25,360 --> 00:13:31,180
reoccur and we continue what that means

327
00:13:28,480 --> 00:13:33,970
is a forest is like a huge blanket of

328
00:13:31,179 --> 00:13:36,399
white noise that then had a constraint

329
00:13:33,970 --> 00:13:37,959
put on top of it that any two trees too

330
00:13:36,399 --> 00:13:43,659
close together aren't going to grow

331
00:13:37,958 --> 00:13:45,278
right that means that something like

332
00:13:43,659 --> 00:13:49,028
blue noise is a really good

333
00:13:45,278 --> 00:13:52,028
approximation for what you visually see

334
00:13:49,028 --> 00:13:55,720
when you look at a forest a somewhat

335
00:13:52,028 --> 00:14:00,419
random distribution of trees with no two

336
00:13:55,720 --> 00:14:01,569
trees being too close together right

337
00:14:00,419 --> 00:14:03,490
again

338
00:14:01,568 --> 00:14:05,740
it's not a perfect simulation of it

339
00:14:03,490 --> 00:14:07,870
we're not actually simulating all the

340
00:14:05,740 --> 00:14:10,089
things and in nature you probably can

341
00:14:07,870 --> 00:14:11,919
get certain situations where two trees

342
00:14:10,089 --> 00:14:14,170
go very close to each other because the

343
00:14:11,919 --> 00:14:16,120
light was just right and this tree kind

344
00:14:14,169 --> 00:14:18,759
of bent too far this way because of a

345
00:14:16,120 --> 00:14:21,698
storm right so if you really wanted to

346
00:14:18,759 --> 00:14:23,350
really simulate how trees grow there's a

347
00:14:21,698 --> 00:14:25,838
lot more we can add to that simulation

348
00:14:23,350 --> 00:14:27,850
to make it really good right but to a

349
00:14:25,839 --> 00:14:30,699
first approximation and certainly one

350
00:14:27,850 --> 00:14:33,670
that no one would bat an eyelash at blue

351
00:14:30,698 --> 00:14:36,490
noise is perfect white noise isn't

352
00:14:33,669 --> 00:14:38,500
because nobody would look at what you

353
00:14:36,490 --> 00:14:39,698
generated first it would see tons of

354
00:14:38,500 --> 00:14:41,350
places where there's all these trees

355
00:14:39,698 --> 00:14:42,399
clump together and then some spaces

356
00:14:41,350 --> 00:14:44,350
where there were no trees and then more

357
00:14:42,399 --> 00:14:46,328
clubs right it would look really weird

358
00:14:44,350 --> 00:14:47,920
and even like I don't know that that

359
00:14:46,328 --> 00:14:49,269
forest looks weird right

360
00:14:47,919 --> 00:14:50,740
whereas blue noise you'd be like yeah

361
00:14:49,269 --> 00:14:53,558
that looks that looks roughly like a

362
00:14:50,740 --> 00:14:55,480
forest right and the same is true for

363
00:14:53,558 --> 00:14:58,659
lots of stuff flowers in a field grass

364
00:14:55,480 --> 00:15:01,569
on a field etcetera etcetera blue noise

365
00:14:58,659 --> 00:15:03,669
for distributing the individual plants

366
00:15:01,568 --> 00:15:07,009
makes a lot of sense because they

367
00:15:03,669 --> 00:15:09,860
compete for resources right

368
00:15:07,009 --> 00:15:14,299
and so that's one place that we see blue

369
00:15:09,860 --> 00:15:18,669
noise you know coming up it's just I

370
00:15:14,299 --> 00:15:21,019
want to distribute things you know but

371
00:15:18,669 --> 00:15:22,459
another place that we see it is where

372
00:15:21,019 --> 00:15:24,620
we're talking about today so I want to

373
00:15:22,460 --> 00:15:26,090
give you that perspective because now

374
00:15:24,620 --> 00:15:29,929
you know one place that it comes up

375
00:15:26,090 --> 00:15:32,360
here's the one that comes up today what

376
00:15:29,929 --> 00:15:33,979
if this has nothing to do with

377
00:15:32,360 --> 00:15:35,570
distributing things that have two

378
00:15:33,980 --> 00:15:38,899
members the real world or competition

379
00:15:35,570 --> 00:15:42,170
for resources or anything like that but

380
00:15:38,899 --> 00:15:44,990
what if I just have a limited amount of

381
00:15:42,169 --> 00:15:47,990
work I can do I'm limited

382
00:15:44,990 --> 00:15:50,090
right because computing power is not

383
00:15:47,990 --> 00:15:54,399
infinite so I'm limited in the amount of

384
00:15:50,090 --> 00:15:59,680
work I can do and I have something

385
00:15:54,399 --> 00:16:04,490
anything that I need to do that work on

386
00:15:59,679 --> 00:16:07,359
right I have limited resources and I

387
00:16:04,490 --> 00:16:12,320
want to do something to a very large

388
00:16:07,360 --> 00:16:15,050
data set right and the question is if I

389
00:16:12,320 --> 00:16:17,570
know I can't process everything that I

390
00:16:15,049 --> 00:16:23,409
want to process I can't just do all the

391
00:16:17,570 --> 00:16:26,990
work how might I distribute that work

392
00:16:23,409 --> 00:16:29,419
across everything I could do to get a

393
00:16:26,990 --> 00:16:32,090
reasonable approximation of the result

394
00:16:29,419 --> 00:16:35,870
and of course that is what we talk about

395
00:16:32,090 --> 00:16:39,470
when we talk about sampling if I can't

396
00:16:35,870 --> 00:16:42,379
afford to do a perfect solution and I

397
00:16:39,470 --> 00:16:44,690
have to just pick a few things to do

398
00:16:42,379 --> 00:16:48,220
that will approximate the correct result

399
00:16:44,690 --> 00:16:51,590
for anything I might want for any work

400
00:16:48,220 --> 00:16:56,120
how can I best distribute the locations

401
00:16:51,590 --> 00:16:58,129
of that work right and so I can give you

402
00:16:56,120 --> 00:17:00,590
any number of examples of what I mean by

403
00:16:58,129 --> 00:17:05,209
this but for example a really simple

404
00:17:00,590 --> 00:17:09,500
thing I want to take a image really

405
00:17:05,209 --> 00:17:11,209
really dense image right it's 50 billion

406
00:17:09,500 --> 00:17:13,940
pixels by 50 billion pixels

407
00:17:11,209 --> 00:17:19,070
I can't even load it into memory it's so

408
00:17:13,940 --> 00:17:21,000
big right and I want to ask you what is

409
00:17:19,069 --> 00:17:24,838
the average color

410
00:17:21,000 --> 00:17:27,630
of this image right so I can't even load

411
00:17:24,838 --> 00:17:29,970
it into memory and I quickly really

412
00:17:27,630 --> 00:17:32,820
quickly I want to get an estimate of

413
00:17:29,970 --> 00:17:35,400
what is the average color of the pixels

414
00:17:32,819 --> 00:17:37,319
now normally in an image that is

415
00:17:35,400 --> 00:17:40,620
anything that we would normally process

416
00:17:37,319 --> 00:17:43,069
in computing a small image right to be

417
00:17:40,619 --> 00:17:45,029
six five 256 a little tiny sprite

418
00:17:43,069 --> 00:17:46,230
it's larious if that's a little tiny

419
00:17:45,029 --> 00:17:47,490
sprite when that's the whole size of the

420
00:17:46,230 --> 00:17:48,960
screen I'm like an Apple 2 or something

421
00:17:47,490 --> 00:17:52,019
but you know the times they have a

422
00:17:48,960 --> 00:17:54,180
change a little tiny sprite what do I do

423
00:17:52,019 --> 00:17:56,490
I just go through all the pixels in the

424
00:17:54,180 --> 00:18:00,029
image adding them up and I divide by the

425
00:17:56,490 --> 00:18:03,180
total and I got the average right it's

426
00:18:00,029 --> 00:18:04,410
easy no problem but if now you tell me

427
00:18:03,180 --> 00:18:05,610
there are trillions and trillions and

428
00:18:04,410 --> 00:18:07,560
trillions and trillions of pixels in

429
00:18:05,609 --> 00:18:09,389
this thing which is what would happen if

430
00:18:07,559 --> 00:18:10,859
you had a 50 billion by 50 50 billion

431
00:18:09,390 --> 00:18:14,160
image because it's 50 billion squared

432
00:18:10,859 --> 00:18:17,179
pixels right I don't want to wait for

433
00:18:14,160 --> 00:18:20,430
that I don't want to go pay the AWS fee

434
00:18:17,180 --> 00:18:22,680
to have all of all of these cloud

435
00:18:20,430 --> 00:18:24,720
machines taking little segments of this

436
00:18:22,680 --> 00:18:28,529
image and adding them up I just want an

437
00:18:24,720 --> 00:18:32,370
estimate right so the question is how

438
00:18:28,529 --> 00:18:35,220
would you distribute if you know you can

439
00:18:32,369 --> 00:18:36,629
only afford to load 50,000 of the pixels

440
00:18:35,220 --> 00:18:38,549
and add them together and average them

441
00:18:36,630 --> 00:18:41,280
how would I distribute them throughout

442
00:18:38,549 --> 00:18:44,940
the image in order to maximize the

443
00:18:41,279 --> 00:18:48,750
chance that I am going to get a good

444
00:18:44,940 --> 00:18:50,549
result a good approximation now those

445
00:18:48,750 --> 00:18:52,349
examples are not that exact particular

446
00:18:50,549 --> 00:18:54,180
example is not as good as it could be in

447
00:18:52,349 --> 00:18:57,689
today's day and age when we know there

448
00:18:54,180 --> 00:19:00,029
are other constraints involved so

449
00:18:57,690 --> 00:19:01,740
talking about pixels is probably not the

450
00:19:00,029 --> 00:19:03,930
right thing to do you probably want to

451
00:19:01,740 --> 00:19:05,940
talk more about blocks of the image that

452
00:19:03,930 --> 00:19:08,190
you could load but either way I have

453
00:19:05,940 --> 00:19:10,590
some finite element of the image I can

454
00:19:08,190 --> 00:19:12,990
load and I know I can't load all of the

455
00:19:10,589 --> 00:19:15,839
trillions that there are how should i

456
00:19:12,990 --> 00:19:19,890
distribute them and the answer for any

457
00:19:15,839 --> 00:19:21,720
kind of sampling problem is actually

458
00:19:19,890 --> 00:19:23,750
again it comes back to the Poisson

459
00:19:21,720 --> 00:19:27,329
distribution the blue noise distribution

460
00:19:23,750 --> 00:19:30,089
blue noise is the most effective way to

461
00:19:27,329 --> 00:19:32,759
turn something where you cannot do all

462
00:19:30,089 --> 00:19:34,439
the work but you want an approximate

463
00:19:32,759 --> 00:19:37,259
answer it's a

464
00:19:34,440 --> 00:19:39,778
way to turn a trillion points into a few

465
00:19:37,259 --> 00:19:42,149
hundred points and still get a good

466
00:19:39,778 --> 00:19:45,869
approximate answer and you may ask me

467
00:19:42,148 --> 00:19:50,788
why why is blue why not white nice why

468
00:19:45,869 --> 00:19:54,089
not random right and the answer has to

469
00:19:50,788 --> 00:19:56,190
do with the quality of the sampling that

470
00:19:54,089 --> 00:20:00,898
you get coming out of these answers

471
00:19:56,190 --> 00:20:02,399
right if you pick something highly

472
00:20:00,898 --> 00:20:04,038
structured because let's look at what

473
00:20:02,398 --> 00:20:08,219
the alternatives are right

474
00:20:04,038 --> 00:20:09,898
this was alternative one right and I

475
00:20:08,220 --> 00:20:11,339
didn't really give an alternative to I

476
00:20:09,898 --> 00:20:13,349
just simply said hey here's this

477
00:20:11,339 --> 00:20:14,759
solution right because we were talking

478
00:20:13,349 --> 00:20:16,769
about what we're going to do and we're

479
00:20:14,759 --> 00:20:21,690
going to do this but there's another

480
00:20:16,769 --> 00:20:24,929
alternative right this is random this is

481
00:20:21,690 --> 00:20:28,230
structured right I could choose to

482
00:20:24,929 --> 00:20:30,269
sample things completely regularly bamp

483
00:20:28,230 --> 00:20:32,548
bamp bamp bamp bamp bamp bamp bamp bamp

484
00:20:30,269 --> 00:20:35,730
at that route right in a grid or

485
00:20:32,548 --> 00:20:38,579
something right so there's two kind of

486
00:20:35,730 --> 00:20:42,509
polar opposites you could say that

487
00:20:38,579 --> 00:20:45,210
you know there's like a line between

488
00:20:42,509 --> 00:20:48,329
completely random and completely not

489
00:20:45,210 --> 00:20:51,179
random right and structured completely

490
00:20:48,329 --> 00:20:54,119
structured sampling or distribution is

491
00:20:51,179 --> 00:20:56,460
like a very regular pattern that has a

492
00:20:54,119 --> 00:20:59,038
completely regular structure imposed

493
00:20:56,460 --> 00:21:01,470
over the top of it whereas a completely

494
00:20:59,038 --> 00:21:03,298
entropic pattern like white noise has

495
00:21:01,470 --> 00:21:04,980
literally no structure impose that

496
00:21:03,298 --> 00:21:06,658
there's nothing you could say about the

497
00:21:04,980 --> 00:21:11,970
structure ever it's completely nuts

498
00:21:06,659 --> 00:21:12,750
right so if we take a look at these two

499
00:21:11,970 --> 00:21:16,139
extremes

500
00:21:12,750 --> 00:21:18,509
why don't we want one of them why don't

501
00:21:16,138 --> 00:21:20,369
I want purely entropic sampling why

502
00:21:18,509 --> 00:21:22,139
don't I want purely structured sampling

503
00:21:20,369 --> 00:21:27,508
and the answer is because structured

504
00:21:22,138 --> 00:21:30,538
sampling will fall prey to any structure

505
00:21:27,509 --> 00:21:32,870
of the image let's suppose I have an

506
00:21:30,538 --> 00:21:38,599
image with it's just a series of stripes

507
00:21:32,869 --> 00:21:41,668
right and I ask you what's the average

508
00:21:38,599 --> 00:21:44,398
color of the image like I said what's

509
00:21:41,669 --> 00:21:46,230
the average what is it well if I just

510
00:21:44,398 --> 00:21:48,209
have a series of stripes and those

511
00:21:46,230 --> 00:21:50,339
stripes happen to be placed

512
00:21:48,210 --> 00:21:52,110
you know an interval that doesn't line

513
00:21:50,339 --> 00:21:54,209
up with a structuring pattern with this

514
00:21:52,109 --> 00:21:56,219
with this sampling pattern I would say

515
00:21:54,210 --> 00:21:58,169
the image is just completely black if

516
00:21:56,220 --> 00:21:59,220
like if this area is black and this area

517
00:21:58,169 --> 00:22:02,210
is white it's a it's an all black image

518
00:21:59,220 --> 00:22:05,278
there's nothing in it right but actually

519
00:22:02,210 --> 00:22:07,829
the average color is actually somewhat

520
00:22:05,278 --> 00:22:09,359
bright it's a gray because there's all

521
00:22:07,829 --> 00:22:12,480
these stripes in it I just missed them

522
00:22:09,359 --> 00:22:15,028
all right because my sampling pattern is

523
00:22:12,480 --> 00:22:18,659
regular and the image pattern is regular

524
00:22:15,028 --> 00:22:21,898
and I missed them all right and that's

525
00:22:18,659 --> 00:22:23,730
very easy to do with real-world images

526
00:22:21,898 --> 00:22:28,528
because real-world images that have

527
00:22:23,730 --> 00:22:32,759
structure often right so what you see is

528
00:22:28,528 --> 00:22:34,919
if you feed any image in with any kind

529
00:22:32,759 --> 00:22:37,378
of structure your sampling pattern will

530
00:22:34,919 --> 00:22:40,110
pick up the bias in that structure and

531
00:22:37,378 --> 00:22:42,269
go one way whichever way it is either

532
00:22:40,109 --> 00:22:43,709
it'll over sample the stripes or under

533
00:22:42,269 --> 00:22:46,499
sample the stripes and you end up with a

534
00:22:43,710 --> 00:22:49,499
very inaccurate result entropy on the

535
00:22:46,499 --> 00:22:51,808
other hand right pure white noise will

536
00:22:49,499 --> 00:22:53,009
never fall prey to that problem it

537
00:22:51,808 --> 00:22:54,329
doesn't matter if you feed it a

538
00:22:53,009 --> 00:22:56,940
structure image because you have an

539
00:22:54,329 --> 00:22:58,769
equal chance of landing on the stripe as

540
00:22:56,940 --> 00:23:01,288
in the black area proportional to the

541
00:22:58,769 --> 00:23:03,319
area of those things which is exactly

542
00:23:01,288 --> 00:23:06,599
what you would have wanted however

543
00:23:03,319 --> 00:23:08,849
because it is purely entropic it will

544
00:23:06,599 --> 00:23:11,009
tend to cluster in some regions and

545
00:23:08,849 --> 00:23:13,618
leave open space in other regions what

546
00:23:11,009 --> 00:23:15,599
that means is again if there is a

547
00:23:13,618 --> 00:23:18,569
different kind of structure to the image

548
00:23:15,599 --> 00:23:21,028
where it's got some areas of brightness

549
00:23:18,569 --> 00:23:24,210
some areas of darkness the entropic

550
00:23:21,028 --> 00:23:26,638
version the purely entropic version will

551
00:23:24,210 --> 00:23:28,769
fall prey to sampling bias where it over

552
00:23:26,638 --> 00:23:32,219
samples some areas in under samples

553
00:23:28,769 --> 00:23:34,440
other areas right so again it will get a

554
00:23:32,220 --> 00:23:36,720
less accurate result because it's

555
00:23:34,440 --> 00:23:38,159
concentrating its samples randomly

556
00:23:36,720 --> 00:23:40,950
concentrating them but concentrated

557
00:23:38,159 --> 00:23:43,799
unless in some areas and randomly

558
00:23:40,950 --> 00:23:48,409
missing other features of the image so

559
00:23:43,798 --> 00:23:52,109
again it falls prey to image structure

560
00:23:48,409 --> 00:23:54,090
even though it itself doesn't have an

561
00:23:52,109 --> 00:23:56,248
overt structure to it because there is

562
00:23:54,089 --> 00:23:59,069
some structure that emerges from the

563
00:23:56,249 --> 00:24:01,170
entropy right and that's the density is

564
00:23:59,069 --> 00:24:03,960
non-uniform

565
00:24:01,170 --> 00:24:07,050
that leaves us with this desire we wish

566
00:24:03,960 --> 00:24:09,360
we could have right here in the middle

567
00:24:07,049 --> 00:24:11,940
can we have something that has just

568
00:24:09,359 --> 00:24:14,490
enough structure to ensure that we do

569
00:24:11,940 --> 00:24:17,250
not under or over sample any regions of

570
00:24:14,490 --> 00:24:19,940
our image but which does not have so

571
00:24:17,250 --> 00:24:22,980
much structure that it falls prey to

572
00:24:19,940 --> 00:24:24,539
highly structured images causing it to

573
00:24:22,980 --> 00:24:26,700
over under sampling something and the

574
00:24:24,539 --> 00:24:29,759
answer is yes we can and it is blue

575
00:24:26,700 --> 00:24:32,880
noise blue noise is precisely that kind

576
00:24:29,759 --> 00:24:37,009
of noise which is evenly distributed

577
00:24:32,880 --> 00:24:40,260
across the entire thing but in no

578
00:24:37,009 --> 00:24:42,059
predictable way right it gives us the

579
00:24:40,259 --> 00:24:46,049
best of both worlds for what we actually

580
00:24:42,059 --> 00:24:49,230
want no structure we can't say anything

581
00:24:46,049 --> 00:24:52,619
about how these points come together but

582
00:24:49,230 --> 00:24:55,349
no varying variance in distribution the

583
00:24:52,619 --> 00:24:58,079
distribution is uniform right across the

584
00:24:55,349 --> 00:25:01,319
entire thing and that's exactly what we

585
00:24:58,079 --> 00:25:10,409
want so that brings us to our sphere

586
00:25:01,319 --> 00:25:14,099
today we are trying to sample the

587
00:25:10,410 --> 00:25:16,860
lighting right that comes in from the

588
00:25:14,099 --> 00:25:21,000
entire world you know and I'm saying we

589
00:25:16,859 --> 00:25:23,549
have like an entire sphere of light

590
00:25:21,000 --> 00:25:25,380
coming from walls being a bouncing off

591
00:25:23,549 --> 00:25:27,599
walls coming from light sources from the

592
00:25:25,380 --> 00:25:30,540
ceiling from the moon from the floor

593
00:25:27,599 --> 00:25:34,109
that bounces up an entire sphere of

594
00:25:30,539 --> 00:25:36,629
incident light is coming into a point in

595
00:25:34,109 --> 00:25:38,789
the world and our light probe is that

596
00:25:36,630 --> 00:25:41,960
point in the world it wants to look out

597
00:25:38,789 --> 00:25:45,569
and see what is the lighting look like

598
00:25:41,960 --> 00:25:48,840
so in order to do this we need to have

599
00:25:45,569 --> 00:25:50,609
some way of sampling that sphere now in

600
00:25:48,839 --> 00:25:52,769
a perfect world we would have some

601
00:25:50,609 --> 00:25:54,209
magical computing device that just knows

602
00:25:52,769 --> 00:25:57,690
the entire lighting and somehow it can

603
00:25:54,210 --> 00:25:59,160
just figure it out right maybe it's so

604
00:25:57,690 --> 00:26:03,509
powerful that it's like the real

605
00:25:59,160 --> 00:26:05,850
universe and our CPU can simulate twilly

606
00:26:03,509 --> 00:26:09,509
ins and trillions of rays coming out

607
00:26:05,849 --> 00:26:11,699
from this sphere and cover it so densely

608
00:26:09,509 --> 00:26:14,788
that 100% of the light is basically

609
00:26:11,700 --> 00:26:17,609
captured perfectly right

610
00:26:14,788 --> 00:26:20,338
we crank up that sampling so high that

611
00:26:17,608 --> 00:26:22,168
no human could ever see the error in it

612
00:26:20,338 --> 00:26:24,388
it's that covered you know it's just a

613
00:26:22,169 --> 00:26:26,519
solid solid ball when we draw all the

614
00:26:24,388 --> 00:26:28,198
points you know I'm saying if we have

615
00:26:26,519 --> 00:26:30,179
that device we probably wouldn't care

616
00:26:28,199 --> 00:26:32,129
any sampling is fine even regular

617
00:26:30,179 --> 00:26:34,169
sampling is probably fine because the

618
00:26:32,128 --> 00:26:36,448
contribution of each individual point is

619
00:26:34,169 --> 00:26:38,459
so low that even though there is still

620
00:26:36,449 --> 00:26:41,159
that structured bias as light moves by

621
00:26:38,459 --> 00:26:43,320
it it will have essentially a regular

622
00:26:41,159 --> 00:26:45,629
pattern of kind of bias going through it

623
00:26:43,319 --> 00:26:49,128
this contributions of those things are

624
00:26:45,628 --> 00:26:50,338
like one one trillionth of a color value

625
00:26:49,128 --> 00:26:53,698
right

626
00:26:50,338 --> 00:26:59,009
we can't see it so we don't care about

627
00:26:53,699 --> 00:27:00,389
sampling very much at all we don't care

628
00:26:59,009 --> 00:27:04,348
about sampling very much at all when

629
00:27:00,388 --> 00:27:08,428
we're overpowered right it's law you

630
00:27:04,348 --> 00:27:10,558
don't care about sampling very much in a

631
00:27:08,429 --> 00:27:12,690
lot of places in handmade hero where we

632
00:27:10,558 --> 00:27:14,699
do things too like pixels because when

633
00:27:12,690 --> 00:27:17,278
we know we have so many of them that the

634
00:27:14,699 --> 00:27:18,829
I just can't really see the error we're

635
00:27:17,278 --> 00:27:20,969
okay

636
00:27:18,828 --> 00:27:24,690
but when it comes to lighting that's

637
00:27:20,969 --> 00:27:26,759
never the case it's a way to high order

638
00:27:24,690 --> 00:27:30,149
prominence way too many light rays

639
00:27:26,759 --> 00:27:32,729
bouncing around any real world scene to

640
00:27:30,148 --> 00:27:37,228
ever count them all and so we're nowhere

641
00:27:32,729 --> 00:27:38,699
near the level of detail that we need to

642
00:27:37,229 --> 00:27:41,369
just say it doesn't matter

643
00:27:38,699 --> 00:27:43,379
we're always way under it and that's

644
00:27:41,368 --> 00:27:45,538
where sampling becomes very important

645
00:27:43,378 --> 00:27:47,848
you need to make sure your sampling is

646
00:27:45,538 --> 00:27:49,348
at least decent because otherwise your

647
00:27:47,848 --> 00:27:51,088
results are going to be way worse than

648
00:27:49,348 --> 00:27:53,218
they could have been because you're

649
00:27:51,088 --> 00:27:57,208
under sampling the problem by such a

650
00:27:53,219 --> 00:27:59,429
drastic amount right so what I want to

651
00:27:57,209 --> 00:28:01,499
do to my sphere is exactly what I wanted

652
00:27:59,429 --> 00:28:03,538
to do in my previous example when I

653
00:28:01,499 --> 00:28:05,999
talked about how do you actually produce

654
00:28:03,538 --> 00:28:07,499
good coverage of say a plane for

655
00:28:05,999 --> 00:28:08,909
sampling the pixels of an image to

656
00:28:07,499 --> 00:28:10,889
average them like I just gave that

657
00:28:08,909 --> 00:28:13,079
example what we're trying to do the

658
00:28:10,888 --> 00:28:15,269
exact same thing really but just on the

659
00:28:13,078 --> 00:28:19,348
surface of a sphere I want to take a

660
00:28:15,269 --> 00:28:21,719
good uniform covering of my sphere to

661
00:28:19,348 --> 00:28:23,788
catch all the incident light but I don't

662
00:28:21,719 --> 00:28:25,709
want it to be structured because if it's

663
00:28:23,788 --> 00:28:27,538
structured it will fall prey to sort of

664
00:28:25,709 --> 00:28:28,410
stair-stepping patterns or stuff like

665
00:28:27,538 --> 00:28:31,289
that

666
00:28:28,410 --> 00:28:34,500
as things hit the bias of that sampling

667
00:28:31,289 --> 00:28:36,980
pattern its structure and play against

668
00:28:34,500 --> 00:28:39,390
it I want to get rid of that right and

669
00:28:36,980 --> 00:28:42,299
so blue noise is the perfect thing for

670
00:28:39,390 --> 00:28:44,340
this it's the perfect way if I can

671
00:28:42,299 --> 00:28:47,609
figure out some way to do it if I can

672
00:28:44,339 --> 00:28:49,289
figure out some way of sort of covering

673
00:28:47,609 --> 00:28:51,240
my sphere with a uniform coverage that's

674
00:28:49,289 --> 00:28:53,129
still completely random so there's no

675
00:28:51,240 --> 00:28:55,980
way to predict where those points are

676
00:28:53,130 --> 00:28:57,930
but they are equidistant from each other

677
00:28:55,980 --> 00:28:59,880
or roughly right not equally but

678
00:28:57,930 --> 00:29:02,610
similarly distant from each other that

679
00:28:59,880 --> 00:29:05,100
gives me a good uniform coverage of my

680
00:29:02,609 --> 00:29:07,109
sphere without structured sampling

681
00:29:05,099 --> 00:29:10,769
artifacts that's exactly what I want

682
00:29:07,109 --> 00:29:12,269
okay so what I need to do that right is

683
00:29:10,769 --> 00:29:16,440
I need to take well that's a really bad

684
00:29:12,269 --> 00:29:19,559
circle so is that though so you know I'm

685
00:29:16,440 --> 00:29:22,920
gonna take my sphere and I want to try

686
00:29:19,559 --> 00:29:24,750
and put points on the sphere you know

687
00:29:22,920 --> 00:29:27,210
that kind of cover it but that stay

688
00:29:24,750 --> 00:29:28,799
pretty you know pretty well separated

689
00:29:27,210 --> 00:29:31,860
from each other right there's sort of a

690
00:29:28,799 --> 00:29:35,099
a spherical on the surface of the sphere

691
00:29:31,859 --> 00:29:39,059
there's a circular region sort of on the

692
00:29:35,099 --> 00:29:41,819
sphere and I don't let other points go

693
00:29:39,059 --> 00:29:46,259
inside there right so once I place one

694
00:29:41,819 --> 00:29:48,329
down I keep that region clear from then

695
00:29:46,259 --> 00:29:50,099
on of these other points right as I'm

696
00:29:48,329 --> 00:29:51,929
placing them and that's how we were

697
00:29:50,099 --> 00:29:54,779
doing it what I was doing before is we'd

698
00:29:51,930 --> 00:29:58,500
set we just tuned a constant that was

699
00:29:54,779 --> 00:30:00,000
how far we wanted that region to be we'd

700
00:29:58,500 --> 00:30:01,799
place something on the sphere and we

701
00:30:00,000 --> 00:30:05,640
make sure that nothing else we place on

702
00:30:01,799 --> 00:30:10,049
the sphere would go into that region

703
00:30:05,640 --> 00:30:11,400
right now I don't really want to do it

704
00:30:10,049 --> 00:30:12,960
that way especially because we're

705
00:30:11,400 --> 00:30:14,970
offline now and have as much time as we

706
00:30:12,960 --> 00:30:16,980
want we can let this to run overnight if

707
00:30:14,970 --> 00:30:18,809
we want to we don't care it could run

708
00:30:16,980 --> 00:30:20,940
all week as long as it comes up with a

709
00:30:18,809 --> 00:30:22,559
good answer at the end of the day we

710
00:30:20,940 --> 00:30:24,330
just get an any file we can plug into

711
00:30:22,559 --> 00:30:26,279
our game and that's instant right we

712
00:30:24,329 --> 00:30:29,009
don't pay any more costs for it so I'm

713
00:30:26,279 --> 00:30:31,079
free to do whatever stupid crappy you

714
00:30:29,009 --> 00:30:32,490
know algorithm I want as long as it

715
00:30:31,079 --> 00:30:34,319
produces the good result at the end of

716
00:30:32,490 --> 00:30:35,849
the day I'm okay so I can't really

717
00:30:34,319 --> 00:30:37,139
consider anything I want here especially

718
00:30:35,849 --> 00:30:39,240
because I know the number of points

719
00:30:37,140 --> 00:30:40,650
isn't that high we're not producing a

720
00:30:39,240 --> 00:30:41,538
million points in the sphere we're

721
00:30:40,650 --> 00:30:43,369
producing like

722
00:30:41,538 --> 00:30:47,319
points on the sphere or a hundred points

723
00:30:43,368 --> 00:30:47,319
in the sphere in fact it's 18 times four

724
00:30:47,829 --> 00:30:52,579
points on the sphere right times the

725
00:30:51,108 --> 00:30:53,839
number of spheres I want who knows

726
00:30:52,579 --> 00:30:57,499
something that is so it's something like

727
00:30:53,839 --> 00:31:00,949
that an N squared n cube even an N cubed

728
00:30:57,499 --> 00:31:03,739
really right algorithm not that bad a

729
00:31:00,950 --> 00:31:09,440
million computations not that bad a

730
00:31:03,739 --> 00:31:11,450
modern computer has four five sorry it's

731
00:31:09,440 --> 00:31:14,659
not a million company a billion has four

732
00:31:11,450 --> 00:31:17,179
or five billion cycles every second they

733
00:31:14,659 --> 00:31:19,700
can do I'm not concerned about things on

734
00:31:17,179 --> 00:31:23,479
the order of a billion operation so we

735
00:31:19,700 --> 00:31:26,450
can use cube routines and with impunity

736
00:31:23,479 --> 00:31:28,190
at this order of N and we know that yeah

737
00:31:26,450 --> 00:31:29,720
it may take a day to run our thing if it

738
00:31:28,190 --> 00:31:31,369
really gets ridiculous or something you

739
00:31:29,720 --> 00:31:32,989
know there's like 50 n cubed algorithms

740
00:31:31,368 --> 00:31:36,108
happening in there or something we'd

741
00:31:32,989 --> 00:31:38,119
still be okay right so we've got a lot

742
00:31:36,108 --> 00:31:39,798
of leeway here and we know that we're

743
00:31:38,118 --> 00:31:42,819
not shipping this to an end user so we

744
00:31:39,798 --> 00:31:46,429
don't have to worry about the largesse

745
00:31:42,819 --> 00:31:49,009
okay so what don't I like about our old

746
00:31:46,429 --> 00:31:51,499
method of placing down a point and then

747
00:31:49,009 --> 00:31:54,499
saying hey mister point make sure nobody

748
00:31:51,499 --> 00:31:57,249
else gets into your region the thing I

749
00:31:54,499 --> 00:31:59,868
don't like about that is the tuning I

750
00:31:57,249 --> 00:32:02,868
don't like the fact that you had to tune

751
00:31:59,868 --> 00:32:04,398
that radius because again let's just

752
00:32:02,868 --> 00:32:06,499
think of it in the 2d realm because

753
00:32:04,398 --> 00:32:08,988
they're not that different but think

754
00:32:06,499 --> 00:32:12,048
about what that means if I want to place

755
00:32:08,989 --> 00:32:14,629
a good coverage of this thing down and I

756
00:32:12,048 --> 00:32:18,138
know that I need let's say five points

757
00:32:14,628 --> 00:32:21,439
well I need to guess right like what

758
00:32:18,138 --> 00:32:24,528
this distance is that allows five points

759
00:32:21,440 --> 00:32:27,379
to fit in there but only those five if I

760
00:32:24,528 --> 00:32:31,069
pick too low right let's say I pick a

761
00:32:27,378 --> 00:32:32,959
thing that's grotesquely wrong well then

762
00:32:31,069 --> 00:32:35,749
I could end up with all my points

763
00:32:32,960 --> 00:32:37,369
clustered in one area and it and it

764
00:32:35,749 --> 00:32:39,440
would still work right because I'm not

765
00:32:37,368 --> 00:32:42,678
getting too close you know what I mean

766
00:32:39,440 --> 00:32:45,229
so I have to tune this constant to find

767
00:32:42,679 --> 00:32:46,970
out where is the breaking point so that

768
00:32:45,229 --> 00:32:50,769
I'm just at the right thing where I can

769
00:32:46,970 --> 00:32:55,160
still put five points but I haven't I

770
00:32:50,769 --> 00:32:56,359
haven't done it's so large that it can't

771
00:32:55,160 --> 00:32:57,500
five points but I haven't done it so

772
00:32:56,359 --> 00:33:00,259
small that it could cluster them

773
00:32:57,500 --> 00:33:01,789
together right so I'd rather get rid of

774
00:33:00,259 --> 00:33:03,650
the tuning now that we don't care how

775
00:33:01,789 --> 00:33:06,170
long this takes to run and what I'm

776
00:33:03,650 --> 00:33:08,330
thinking is again maybe like a repulsion

777
00:33:06,170 --> 00:33:08,870
scheme would actually be a little bit

778
00:33:08,329 --> 00:33:10,849
nicer

779
00:33:08,869 --> 00:33:12,649
so repulsion scheme just says look I

780
00:33:10,849 --> 00:33:14,059
know I can just place random points down

781
00:33:12,650 --> 00:33:15,769
here and who knows where they go and

782
00:33:14,059 --> 00:33:18,109
then if I say I want them to erupt

783
00:33:15,769 --> 00:33:20,660
equidistant well maybe I just do a thing

784
00:33:18,109 --> 00:33:22,579
where I take the distance from each

785
00:33:20,660 --> 00:33:25,370
point to every other point and add a

786
00:33:22,579 --> 00:33:31,099
little bit of like force that tries to

787
00:33:25,369 --> 00:33:33,039
push them apart right if each of these

788
00:33:31,099 --> 00:33:35,449
things has kind of I don't want to say

789
00:33:33,039 --> 00:33:37,099
magnetic repulsion but if each of the

790
00:33:35,450 --> 00:33:39,230
points just repulsed the other points

791
00:33:37,099 --> 00:33:42,079
and I run a little simulation they

792
00:33:39,230 --> 00:33:43,670
should all sort of naturally settle into

793
00:33:42,079 --> 00:33:53,509
positions where they're equidistant from

794
00:33:43,670 --> 00:33:56,990
each other roughly right I think that

795
00:33:53,509 --> 00:33:59,240
should give me more or less uniform

796
00:33:56,990 --> 00:34:05,620
coverage of the sphere without any

797
00:33:59,240 --> 00:34:05,620
obvious structure to it I think I think

798
00:34:13,030 --> 00:34:19,419
and I can't really think of offhand I

799
00:34:18,070 --> 00:34:20,590
should probably you know if we really

800
00:34:19,418 --> 00:34:21,789
cared we should probably go read some

801
00:34:20,590 --> 00:34:23,289
research papers there's been a lot of

802
00:34:21,789 --> 00:34:26,019
recent research in the past ten years

803
00:34:23,289 --> 00:34:28,449
about generating blue noise patterns so

804
00:34:26,019 --> 00:34:31,239
to be honest like there might be some

805
00:34:28,449 --> 00:34:33,069
ways we can jump sort of right to what

806
00:34:31,239 --> 00:34:34,388
the correct tuning constant is and then

807
00:34:33,070 --> 00:34:37,179
it's more efficient to generate these

808
00:34:34,389 --> 00:34:42,579
things as like place and step kind of

809
00:34:37,179 --> 00:34:45,398
functions but I think at least in the

810
00:34:42,579 --> 00:34:48,489
without doing a more advanced sort of

811
00:34:45,398 --> 00:34:51,418
deep dive into the properties of Poisson

812
00:34:48,489 --> 00:34:54,009
noise and stuff like this I feel like

813
00:34:51,418 --> 00:34:57,219
this most straightforward thing we could

814
00:34:54,010 --> 00:34:59,380
do is just repulsion place random points

815
00:34:57,219 --> 00:35:01,209
the number of them that you want so we

816
00:34:59,380 --> 00:35:04,000
say we want a thousand points or

817
00:35:01,210 --> 00:35:06,579
whatever we place those randomly on the

818
00:35:04,000 --> 00:35:09,460
sphere and then we let them push each

819
00:35:06,579 --> 00:35:14,619
other by looking at how far apart they

820
00:35:09,460 --> 00:35:16,960
are on the sphere and we apply sort of a

821
00:35:14,619 --> 00:35:20,170
force that falls off in proportion to

822
00:35:16,960 --> 00:35:22,090
distance right if we run that for a

823
00:35:20,170 --> 00:35:24,940
little while we should see our points

824
00:35:22,090 --> 00:35:31,240
settle into locations that are

825
00:35:24,940 --> 00:35:33,010
relatively sane and and relatively good

826
00:35:31,239 --> 00:35:34,209
in terms of covering the sphere now

827
00:35:33,010 --> 00:35:36,670
there's one other thing I talked about

828
00:35:34,210 --> 00:35:38,619
which is slicing and what that is is

829
00:35:36,670 --> 00:35:40,510
once we have this uniform coverage we

830
00:35:38,619 --> 00:35:43,359
have a separate step which is the

831
00:35:40,510 --> 00:35:45,190
slicing set right which is that once we

832
00:35:43,360 --> 00:35:47,230
have a uniform coverage of the sphere

833
00:35:45,190 --> 00:35:48,809
that has our entropic properties that we

834
00:35:47,230 --> 00:35:51,400
want so we've got this nice like

835
00:35:48,809 --> 00:35:56,489
coverage over here whatever this is not

836
00:35:51,400 --> 00:35:59,889
very good you know what I mean a good

837
00:35:56,489 --> 00:36:01,419
equal density but random coverage right

838
00:35:59,889 --> 00:36:05,739
so something that looks sort of like

839
00:36:01,420 --> 00:36:08,860
this once we have this we want to break

840
00:36:05,739 --> 00:36:11,979
it up into chunks that are done every

841
00:36:08,860 --> 00:36:15,430
frame so if we have like we were talking

842
00:36:11,980 --> 00:36:17,949
about 16 times 18 times 4 this is how

843
00:36:15,429 --> 00:36:21,429
many samples right that's how many

844
00:36:17,949 --> 00:36:24,460
samples per frame we're doing on one of

845
00:36:21,429 --> 00:36:26,599
these spheres and then we have 16 frames

846
00:36:24,460 --> 00:36:30,079
it's spread out across

847
00:36:26,599 --> 00:36:32,179
right what we want to do is take this

848
00:36:30,079 --> 00:36:35,090
nice uniform distribution that we now

849
00:36:32,179 --> 00:36:39,259
have and we want to break it up into a

850
00:36:35,090 --> 00:36:42,110
set of sixteen distributions each of

851
00:36:39,260 --> 00:36:44,450
which retains most of the good qualities

852
00:36:42,110 --> 00:36:46,820
of the total distribution that we're

853
00:36:44,449 --> 00:36:48,279
computing over time and so I don't

854
00:36:46,820 --> 00:36:50,960
really know how we're going to do that

855
00:36:48,280 --> 00:36:52,490
what we might do is like pick a point

856
00:36:50,960 --> 00:36:53,900
and then pick the farthest away point

857
00:36:52,489 --> 00:36:55,489
and then pick the furthest point from

858
00:36:53,900 --> 00:36:59,300
those two and then from those three

859
00:36:55,489 --> 00:37:00,919
right until we've picked 18 times four

860
00:36:59,300 --> 00:37:02,900
points we remove them from the system

861
00:37:00,920 --> 00:37:05,630
and then we do the same process again

862
00:37:02,900 --> 00:37:09,289
for each slice I think that might do it

863
00:37:05,630 --> 00:37:11,630
but I'm not totally sure so we need to

864
00:37:09,289 --> 00:37:14,779
come up with a good slicing regime after

865
00:37:11,630 --> 00:37:16,340
we're done but for now today I just want

866
00:37:14,780 --> 00:37:17,870
to focus on building the first step of

867
00:37:16,340 --> 00:37:20,180
the process that I've explained a detail

868
00:37:17,869 --> 00:37:22,609
now which is how do we produce a nice

869
00:37:20,179 --> 00:37:24,679
total blue noise coverage of the sphere

870
00:37:22,610 --> 00:37:30,500
and then we can worry about the slicing

871
00:37:24,679 --> 00:37:32,359
as a second step right okay so if you

872
00:37:30,500 --> 00:37:34,219
take a look at what we've got already we

873
00:37:32,360 --> 00:37:37,250
are doing the first step just kind of

874
00:37:34,219 --> 00:37:39,739
naturally this right here is a thing

875
00:37:37,250 --> 00:37:43,610
that places points onto the sphere

876
00:37:39,739 --> 00:37:46,669
poorly right I mean it's good enough

877
00:37:43,610 --> 00:37:50,480
though it places a bunch of points onto

878
00:37:46,670 --> 00:37:52,220
the sphere completely at random and then

879
00:37:50,480 --> 00:37:54,079
I'm sorry places them into the cube

880
00:37:52,219 --> 00:37:55,189
completely at random and then just

881
00:37:54,079 --> 00:37:57,559
pushes them onto the surface of the

882
00:37:55,190 --> 00:37:59,780
sphere this is a biased distribution

883
00:37:57,559 --> 00:38:03,440
like I showed you it's got some holes

884
00:37:59,780 --> 00:38:05,470
and some clusters right but because

885
00:38:03,440 --> 00:38:09,980
we're about to distribute our points

886
00:38:05,469 --> 00:38:11,719
using a sort of forcing function to get

887
00:38:09,980 --> 00:38:14,570
them equidistant around the sphere in

888
00:38:11,719 --> 00:38:16,699
theory I'm guessing that initial bias

889
00:38:14,570 --> 00:38:18,200
doesn't matter because the points are

890
00:38:16,699 --> 00:38:19,789
going to move around now and sort

891
00:38:18,199 --> 00:38:22,579
themselves out into a nice distribution

892
00:38:19,789 --> 00:38:24,469
in theory it shouldn't matter so I don't

893
00:38:22,579 --> 00:38:26,750
think and I don't know for sure but I

894
00:38:24,469 --> 00:38:29,059
don't think we really have to worry

895
00:38:26,750 --> 00:38:31,010
about this particularly much because I

896
00:38:29,059 --> 00:38:34,969
don't think it's actually going to

897
00:38:31,010 --> 00:38:38,360
matter I think we can just place these

898
00:38:34,969 --> 00:38:41,259
points poorly at first right so I'm

899
00:38:38,360 --> 00:38:41,260
going to label these steps

900
00:38:49,900 --> 00:38:57,740
so I'm going to call this white noise

901
00:38:52,000 --> 00:38:59,599
cube projected to sphere surface right

902
00:38:57,739 --> 00:39:01,750
so we're going to just do a white noise

903
00:38:59,599 --> 00:39:04,190
cube projected out to the sphere surface

904
00:39:01,750 --> 00:39:06,949
that this right here is the white noise

905
00:39:04,190 --> 00:39:09,769
cube right just completely randomly

906
00:39:06,949 --> 00:39:11,149
picking inside the cube and then this

907
00:39:09,769 --> 00:39:13,250
right here is the projection the surface

908
00:39:11,150 --> 00:39:18,980
take each one of those vectors normalize

909
00:39:13,250 --> 00:39:20,809
it right so done now after we're done

910
00:39:18,980 --> 00:39:23,000
with that step we want to do the next

911
00:39:20,809 --> 00:39:24,889
step that I said which is to try and let

912
00:39:23,000 --> 00:39:26,900
these things diffuse so how do we do

913
00:39:24,889 --> 00:39:28,730
that well let's just start by saying

914
00:39:26,900 --> 00:39:30,800
look we're gonna run a number of

915
00:39:28,730 --> 00:39:32,630
relaxation steps so we're gonna do like

916
00:39:30,800 --> 00:39:34,850
a little simulation almost like a game

917
00:39:32,630 --> 00:39:36,380
would do where we're gonna take a number

918
00:39:34,849 --> 00:39:38,929
of steps on each step we're gonna move

919
00:39:36,380 --> 00:39:42,740
the points a little bit right so we're

920
00:39:38,929 --> 00:39:44,239
gonna say each step and let's say we're

921
00:39:42,739 --> 00:39:45,349
gonna do a thousand of these steps I

922
00:39:44,239 --> 00:39:46,699
don't know how many we're gonna do but

923
00:39:45,349 --> 00:39:48,618
we're just gonna do some right we don't

924
00:39:46,699 --> 00:39:52,608
care well tune this constant it doesn't

925
00:39:48,619 --> 00:39:54,079
matter we actually might in the future

926
00:39:52,608 --> 00:39:57,230
not even use the constant we might just

927
00:39:54,079 --> 00:39:58,759
look at how far our points have moved if

928
00:39:57,230 --> 00:40:01,519
our points haven't moved much then

929
00:39:58,760 --> 00:40:05,030
they're then they've converged right so

930
00:40:01,519 --> 00:40:06,650
this may just be a non-issue eventually

931
00:40:05,030 --> 00:40:08,510
but for now I'm just gonna do this as

932
00:40:06,650 --> 00:40:11,630
the first step but we can probably

933
00:40:08,510 --> 00:40:12,800
remove this this constant as well so

934
00:40:11,630 --> 00:40:14,599
we're gonna do about a series of steps

935
00:40:12,800 --> 00:40:17,240
and for each step we're going to

936
00:40:14,599 --> 00:40:18,679
displace our points and so the way that

937
00:40:17,239 --> 00:40:19,939
we're going to displace our points is

938
00:40:18,679 --> 00:40:22,789
I'm going to create a secondary array

939
00:40:19,940 --> 00:40:25,460
here that's going to be like our for

940
00:40:22,789 --> 00:40:28,730
Sarang and the forest array is literally

941
00:40:25,460 --> 00:40:30,829
just a another set of VIII's that's

942
00:40:28,730 --> 00:40:34,699
going to be how much we expect each

943
00:40:30,829 --> 00:40:38,059
point to move right and so we've got two

944
00:40:34,699 --> 00:40:40,639
steps here the first step computes the

945
00:40:38,059 --> 00:40:44,858
force the second step applies it so what

946
00:40:40,639 --> 00:40:48,379
I'm going to do here is say we've got a

947
00:40:44,858 --> 00:40:53,309
jerk index the dur index goes to the

948
00:40:48,380 --> 00:40:59,460
total direction counts on both cases

949
00:40:53,309 --> 00:41:10,320
in each case I'm going to take the force

950
00:40:59,460 --> 00:41:12,150
here it should be called forces so I'm

951
00:41:10,320 --> 00:41:14,280
going to take the force in both cases in

952
00:41:12,150 --> 00:41:16,889
this case I'm going to sum into that

953
00:41:14,280 --> 00:41:18,870
force something in this case I'm going

954
00:41:16,889 --> 00:41:20,819
to apply it so in this case I'm this is

955
00:41:18,869 --> 00:41:27,059
the more simple part of the process by

956
00:41:20,820 --> 00:41:29,280
far this is just directions here or here

957
00:41:27,059 --> 00:41:31,829
are like you know Direction vectors each

958
00:41:29,280 --> 00:41:34,080
one of these forces tells us how we're

959
00:41:31,829 --> 00:41:40,400
going to push it so in order to push it

960
00:41:34,079 --> 00:41:42,569
forwards I just have you know some force

961
00:41:40,400 --> 00:41:48,889
you know I guess we don't really need to

962
00:41:42,570 --> 00:41:48,890
call it forces it's a little misleading

963
00:41:49,130 --> 00:41:58,829
maybe displacements it's better let's

964
00:41:54,000 --> 00:42:00,869
say so we're basically looking at like

965
00:41:58,829 --> 00:42:02,069
here's a displacement and we compute

966
00:42:00,869 --> 00:42:03,359
those in place because we don't need to

967
00:42:02,070 --> 00:42:04,950
integrate the force or any that's that's

968
00:42:03,360 --> 00:42:07,110
not really physics it's just a basic

969
00:42:04,949 --> 00:42:08,460
displacement um so we have whatever

970
00:42:07,110 --> 00:42:09,960
displacement we said was supposed to

971
00:42:08,460 --> 00:42:12,440
happen and so all we're going to do

972
00:42:09,960 --> 00:42:17,940
alright don't ask me why she did that

973
00:42:12,440 --> 00:42:21,929
there we go all we're gonna do is take

974
00:42:17,940 --> 00:42:25,139
whatever the direction was and apply

975
00:42:21,929 --> 00:42:28,679
this placement right so we're just gonna

976
00:42:25,139 --> 00:42:31,139
say look for a particular displacement

977
00:42:28,679 --> 00:42:33,059
we want to do we're gonna take whatever

978
00:42:31,139 --> 00:42:34,679
the direction was we're gonna add the

979
00:42:33,059 --> 00:42:39,420
displacement vector so this is however

980
00:42:34,679 --> 00:42:41,069
much the the request was to move this

981
00:42:39,420 --> 00:42:43,829
point as computed in this loop you

982
00:42:41,070 --> 00:42:45,570
haven't yet we move it by that much and

983
00:42:43,829 --> 00:42:47,840
then we want to reproject it to the

984
00:42:45,570 --> 00:42:53,160
sphere right so we want to then say

985
00:42:47,840 --> 00:42:55,860
equals Naz right there like so right now

986
00:42:53,159 --> 00:42:57,719
like I said maybe we want this loop to

987
00:42:55,860 --> 00:43:00,329
be a little bit better so what I might

988
00:42:57,719 --> 00:43:03,029
do is just say look what we're gonna do

989
00:43:00,329 --> 00:43:07,199
is say there's a total displacement

990
00:43:03,030 --> 00:43:09,420
distance that we're going to

991
00:43:07,199 --> 00:43:11,818
and so when we come in here what I'm

992
00:43:09,420 --> 00:43:14,400
going to do isn't going to take whatever

993
00:43:11,818 --> 00:43:16,469
emotion was produced

994
00:43:14,400 --> 00:43:19,229
you know however far I wanted to move

995
00:43:16,469 --> 00:43:22,048
this thing I'm gonna do this as sort of

996
00:43:19,228 --> 00:43:26,179
a right back step so I'm gonna say all

997
00:43:22,048 --> 00:43:26,179
right let's take the direction here

998
00:43:26,298 --> 00:43:38,369
maybe I'll do it this way let's take the

999
00:43:29,489 --> 00:43:41,699
displacement and the direction let's do

1000
00:43:38,369 --> 00:43:44,249
our update step so I'm going to take the

1001
00:43:41,699 --> 00:43:46,169
direction I'm gonna add this placement

1002
00:43:44,248 --> 00:43:48,328
to the direction I'm then gonna

1003
00:43:46,170 --> 00:43:49,999
normalize the direction and then

1004
00:43:48,329 --> 00:43:53,479
eventually I'm going to write it back

1005
00:43:49,998 --> 00:43:56,189
like so right

1006
00:43:53,478 --> 00:43:58,288
and I'm also by the way in that step

1007
00:43:56,190 --> 00:44:01,619
going to clear the displacement probably

1008
00:43:58,289 --> 00:44:06,569
because well I guess you know do we want

1009
00:44:01,619 --> 00:44:12,170
to do it that way yep probably so I'm

1010
00:44:06,568 --> 00:44:12,170
gonna clear this thing down in here

1011
00:44:14,509 --> 00:44:19,559
right so we start out with the

1012
00:44:17,639 --> 00:44:21,179
placements of zero and every time I want

1013
00:44:19,559 --> 00:44:24,449
to zero this placement out again so that

1014
00:44:21,179 --> 00:44:25,858
this thing can fill it up right so when

1015
00:44:24,449 --> 00:44:29,278
I come through here I take the

1016
00:44:25,858 --> 00:44:30,748
displacement I apply it I reproject onto

1017
00:44:29,278 --> 00:44:32,489
the sphere to make sure I'm staying on

1018
00:44:30,748 --> 00:44:34,439
the sphere because I don't want to have

1019
00:44:32,489 --> 00:44:36,059
to try and guarantee that with the

1020
00:44:34,440 --> 00:44:37,259
motion with the displacements that I I

1021
00:44:36,059 --> 00:44:39,180
want to be sloppier about those

1022
00:44:37,259 --> 00:44:41,309
displacements and then what I want to do

1023
00:44:39,179 --> 00:44:46,048
is before doing the right back I want to

1024
00:44:41,309 --> 00:44:48,059
take the length right I might take this

1025
00:44:46,048 --> 00:44:50,038
as a sum of squares just to keep things

1026
00:44:48,059 --> 00:44:53,910
easier but what I'm gonna do is say all

1027
00:44:50,039 --> 00:44:56,729
right I've got a squared length here of

1028
00:44:53,909 --> 00:44:58,588
the difference between the current

1029
00:44:56,728 --> 00:45:00,118
direction whatever it is and the place

1030
00:44:58,588 --> 00:45:05,208
that I was going to put it so this is

1031
00:45:00,119 --> 00:45:08,219
the total displacement right the the

1032
00:45:05,208 --> 00:45:11,669
this is like the effective displacement

1033
00:45:08,219 --> 00:45:13,940
squared right and I just want to sum

1034
00:45:11,670 --> 00:45:13,940
those up

1035
00:45:14,750 --> 00:45:19,429
so that'll tell me how far I've moved

1036
00:45:17,329 --> 00:45:22,069
all of my points and I add them all

1037
00:45:19,429 --> 00:45:23,629
together how far are they moved and so

1038
00:45:22,070 --> 00:45:30,109
what I want to do here is say look if

1039
00:45:23,630 --> 00:45:32,780
the total displacement squared uh ends

1040
00:45:30,108 --> 00:45:37,519
up being less than some you know nominal

1041
00:45:32,780 --> 00:45:41,480
number so you know that let's say um or

1042
00:45:37,519 --> 00:45:42,980
maybe even that I don't know how much I

1043
00:45:41,480 --> 00:45:45,769
want to say these things should not be

1044
00:45:42,980 --> 00:45:47,059
moving but we have some cutoff

1045
00:45:45,769 --> 00:45:49,099
thresholds so these things are all

1046
00:45:47,059 --> 00:45:52,880
moving around and eventually they stop

1047
00:45:49,099 --> 00:45:54,559
moving right and what we want to do is

1048
00:45:52,880 --> 00:45:55,940
say once these things have stopped

1049
00:45:54,559 --> 00:45:57,199
moving a certain amount let's say this

1050
00:45:55,940 --> 00:45:59,780
for now we'll see what ends up happening

1051
00:45:57,199 --> 00:46:02,719
we'll cut to Tunis after they stopped

1052
00:45:59,780 --> 00:46:06,710
moving enough we know that we're pretty

1053
00:46:02,719 --> 00:46:12,709
much done with how much we need to shake

1054
00:46:06,710 --> 00:46:14,358
the system out right okay the last thing

1055
00:46:12,710 --> 00:46:19,039
I want to hear is exactly what I said

1056
00:46:14,358 --> 00:46:21,108
before I just want to clear the

1057
00:46:19,039 --> 00:46:23,989
displacement so if the next time through

1058
00:46:21,108 --> 00:46:26,750
its summing up a fresh amount all right

1059
00:46:23,989 --> 00:46:28,069
so here comes our N squared right I

1060
00:46:26,750 --> 00:46:29,269
remember I told you we were probably

1061
00:46:28,070 --> 00:46:31,700
going to be N squared n cubed here

1062
00:46:29,269 --> 00:46:35,150
because we don't want to really do too

1063
00:46:31,699 --> 00:46:40,098
much with this so what I want to do here

1064
00:46:35,150 --> 00:46:42,079
is I want to take the all of the things

1065
00:46:40,099 --> 00:46:43,640
that aren't this particular look I'm

1066
00:46:42,079 --> 00:46:46,159
going to call these like the repulsors

1067
00:46:43,639 --> 00:46:52,069
or whatever I want to take every point

1068
00:46:46,159 --> 00:47:01,088
that's not this point right so this is

1069
00:46:52,070 --> 00:47:01,088
our repulsor I also need this

1070
00:47:06,250 --> 00:47:11,510
so I'm gonna look up which direction I'm

1071
00:47:08,630 --> 00:47:14,119
on I'm gonna look up which direction or

1072
00:47:11,510 --> 00:47:16,910
rather which yeah which direction is

1073
00:47:14,119 --> 00:47:17,690
repulsing me right and I'm gonna skip

1074
00:47:16,909 --> 00:47:19,759
myself

1075
00:47:17,690 --> 00:47:23,059
so if dur index is not equal to rep

1076
00:47:19,760 --> 00:47:27,710
index right I don't want to compute the

1077
00:47:23,059 --> 00:47:29,929
repulsion on myself now we can be more

1078
00:47:27,710 --> 00:47:33,199
efficient here if we wanted to certainly

1079
00:47:29,929 --> 00:47:34,699
by only considering pairs because the

1080
00:47:33,199 --> 00:47:36,439
repulsion is going to be the same

1081
00:47:34,699 --> 00:47:38,389
between the two pairs I'm not gonna do

1082
00:47:36,440 --> 00:47:39,679
that yet right I'm gonna be the

1083
00:47:38,389 --> 00:47:58,519
stupidest possible thing

1084
00:47:39,679 --> 00:48:00,679
so I'll just say like to do so I'm not

1085
00:47:58,519 --> 00:48:02,269
gonna bother with that rather obvious

1086
00:48:00,679 --> 00:48:04,759
optimization I'm just gonna write it

1087
00:48:02,269 --> 00:48:05,809
just for one and let the loop take care

1088
00:48:04,760 --> 00:48:07,579
of it right because again this is

1089
00:48:05,809 --> 00:48:09,679
offline don't care rather want to keep

1090
00:48:07,579 --> 00:48:12,318
it simple that's probably gonna be the

1091
00:48:09,679 --> 00:48:14,299
best plan in the long run okay so we

1092
00:48:12,318 --> 00:48:21,050
grab the direction we grab the repulsor

1093
00:48:14,300 --> 00:48:24,530
we now know basically right we know what

1094
00:48:21,050 --> 00:48:27,710
the sort of action this the sort of

1095
00:48:24,530 --> 00:48:32,210
action line is between these two if we

1096
00:48:27,710 --> 00:48:35,539
just say look if I subtract right or the

1097
00:48:32,210 --> 00:48:37,940
force line right if I take the person

1098
00:48:35,539 --> 00:48:39,769
who I'm talking about and I subtract the

1099
00:48:37,940 --> 00:48:42,349
person who's gonna be pushing on him

1100
00:48:39,769 --> 00:48:44,269
then that's the direction the push would

1101
00:48:42,349 --> 00:48:45,859
happen right it's gonna come from the

1102
00:48:44,269 --> 00:48:49,489
repulsor toward the direction so

1103
00:48:45,858 --> 00:48:52,940
direction - repulsor okay and then I can

1104
00:48:49,489 --> 00:48:55,098
trivially say maybe I don't really want

1105
00:48:52,940 --> 00:48:56,990
to consider all the points for repulsion

1106
00:48:55,099 --> 00:49:00,680
I just want points that are somewhat

1107
00:48:56,989 --> 00:49:04,039
close to this one right so I want to

1108
00:49:00,679 --> 00:49:10,068
take that force line and I want to make

1109
00:49:04,039 --> 00:49:13,059
sure that it points let's say somewhat

1110
00:49:10,068 --> 00:49:17,309
sideways might be a way to say it right

1111
00:49:13,059 --> 00:49:18,599
so I have a direction that direction

1112
00:49:17,309 --> 00:49:20,309
let me let me draw the sign I'm

1113
00:49:18,599 --> 00:49:23,339
visualizing all this into my head as I

1114
00:49:20,309 --> 00:49:25,320
go and I realize not everyone is so

1115
00:49:23,340 --> 00:49:28,200
let's you know for the sake of the

1116
00:49:25,320 --> 00:49:31,380
beginner let's let's go ahead and sort

1117
00:49:28,199 --> 00:49:34,500
of show explicitly what this is so let's

1118
00:49:31,380 --> 00:49:37,440
suppose that I have my sphere like so

1119
00:49:34,500 --> 00:49:39,780
and I'm talking about for a particular

1120
00:49:37,440 --> 00:49:41,700
direction on the sphere like this I'm

1121
00:49:39,780 --> 00:49:43,769
talking about some other direction on

1122
00:49:41,699 --> 00:49:45,869
the sphere is going to push on it right

1123
00:49:43,769 --> 00:49:48,090
it's pushing on it and the idea is it's

1124
00:49:45,869 --> 00:49:50,190
gonna push it away and it's probably

1125
00:49:48,090 --> 00:49:52,590
gonna push it more strongly the closer

1126
00:49:50,190 --> 00:49:54,090
it is maybe or maybe not love to see how

1127
00:49:52,590 --> 00:49:56,519
we want to do that but what we

1128
00:49:54,090 --> 00:49:58,620
definitely know is once something is

1129
00:49:56,519 --> 00:50:01,250
like more than like half a sphere away

1130
00:49:58,619 --> 00:50:03,719
like if it was all the way over here I

1131
00:50:01,250 --> 00:50:06,179
don't probably want it to push anymore I

1132
00:50:03,719 --> 00:50:08,009
only want things to push if they're in

1133
00:50:06,179 --> 00:50:10,049
like the same hemisphere let's say and

1134
00:50:08,010 --> 00:50:11,400
anything that's further away than that

1135
00:50:10,050 --> 00:50:13,920
on the other side of the sphere I don't

1136
00:50:11,400 --> 00:50:16,710
want to use well if I already know that

1137
00:50:13,920 --> 00:50:19,050
I've got two normals the you know the

1138
00:50:16,710 --> 00:50:21,329
repulsor is already in normal and the

1139
00:50:19,050 --> 00:50:24,060
direction is already in normal if I just

1140
00:50:21,329 --> 00:50:26,159
dot-product those together I form you

1141
00:50:24,059 --> 00:50:29,039
know the standard dot product here right

1142
00:50:26,159 --> 00:50:31,079
so I've got a and B if I take the dot

1143
00:50:29,039 --> 00:50:33,150
product of a and B I know that that

1144
00:50:31,079 --> 00:50:37,170
equals zero per precisely at ninety

1145
00:50:33,150 --> 00:50:38,610
degrees right as I go behind it it

1146
00:50:37,170 --> 00:50:42,030
becomes negative as I'm in front of it I

1147
00:50:38,610 --> 00:50:48,620
come positive so I can pretty clearly do

1148
00:50:42,030 --> 00:50:48,620
a quick clip in here where I say hey if

1149
00:50:49,909 --> 00:50:55,230
your app there is less than zero

1150
00:50:53,280 --> 00:50:58,140
I don't want it so I'm going to restrict

1151
00:50:55,230 --> 00:51:00,929
my force computations to only things

1152
00:50:58,139 --> 00:51:03,769
that are positive dot product so those

1153
00:51:00,929 --> 00:51:05,940
two things are less than 90 degrees

1154
00:51:03,769 --> 00:51:08,400
eighty nine point nine nine nine nine

1155
00:51:05,940 --> 00:51:10,590
nine degrees is okay but ninety is not I

1156
00:51:08,400 --> 00:51:12,660
want everything to be less than 90

1157
00:51:10,590 --> 00:51:17,570
degrees apart if they're going to be

1158
00:51:12,659 --> 00:51:23,579
applying forces towards each other right

1159
00:51:17,570 --> 00:51:26,760
now if I literally wrote this right here

1160
00:51:23,579 --> 00:51:28,799
if that was what I left in there we kind

1161
00:51:26,760 --> 00:51:31,470
of have a system that may be a little

1162
00:51:28,800 --> 00:51:34,289
ill behaved and why might it be a little

1163
00:51:31,469 --> 00:51:35,699
because now I've got forces who knows

1164
00:51:34,289 --> 00:51:38,369
what I'm gonna write in here first

1165
00:51:35,699 --> 00:51:44,029
computation but I've got a hard clip

1166
00:51:38,369 --> 00:51:44,029
right and if in math land right

1167
00:51:45,409 --> 00:51:55,019
this is mr. function right maybe this is

1168
00:51:51,239 --> 00:51:58,409
the force of repulsion right and this is

1169
00:51:55,019 --> 00:52:00,269
the distance or something there's some

1170
00:51:58,409 --> 00:52:02,730
function I'm about to write that's how

1171
00:52:00,269 --> 00:52:08,130
hard this thing pushes this other thing

1172
00:52:02,730 --> 00:52:11,519
away right if I insert an if and if is

1173
00:52:08,130 --> 00:52:13,980
just a hard clip right it will say look

1174
00:52:11,519 --> 00:52:15,449
as soon as I get to this one point we no

1175
00:52:13,980 --> 00:52:20,219
longer use that function and we drop

1176
00:52:15,449 --> 00:52:23,399
straight down to zero right that means

1177
00:52:20,219 --> 00:52:26,819
as I'm running this as people come in

1178
00:52:23,400 --> 00:52:28,590
and out of that hard clip they get the

1179
00:52:26,820 --> 00:52:30,450
force or not get the force or not right

1180
00:52:28,590 --> 00:52:33,480
and it could cause jitter and just bad

1181
00:52:30,449 --> 00:52:37,079
behavior what I'd much rather have he's

1182
00:52:33,480 --> 00:52:38,250
a smooth fall and hey I just wrote one

1183
00:52:37,079 --> 00:52:40,619
right

1184
00:52:38,250 --> 00:52:44,670
I literally have the smooth fall off

1185
00:52:40,619 --> 00:52:50,150
sitting in my in my coat and I chose not

1186
00:52:44,670 --> 00:52:50,150
to use it right so no keep that in there

1187
00:52:50,329 --> 00:52:55,380
we've got that inner product let's use

1188
00:52:53,130 --> 00:52:57,150
that as part of our fall off so here

1189
00:52:55,380 --> 00:52:58,920
we'll just say look if the fall-off is

1190
00:52:57,150 --> 00:52:59,730
greater than zero use it if it's less

1191
00:52:58,920 --> 00:53:02,340
than zero don't

1192
00:52:59,730 --> 00:53:05,880
so that way we come down nice fall off

1193
00:53:02,340 --> 00:53:08,490
and then we stop we clip right where we

1194
00:53:05,880 --> 00:53:11,400
already knew we were at zero so that if

1195
00:53:08,489 --> 00:53:13,739
doesn't cause a discontinuous change in

1196
00:53:11,400 --> 00:53:15,210
our force amount it only causes the

1197
00:53:13,739 --> 00:53:16,889
discontinuous change potentially in the

1198
00:53:15,210 --> 00:53:19,530
derivative but we don't care so much

1199
00:53:16,889 --> 00:53:20,789
about that right converges properties in

1200
00:53:19,530 --> 00:53:22,560
a lot of stuff is kind of out of scope

1201
00:53:20,789 --> 00:53:24,630
of what we're talking about here but you

1202
00:53:22,559 --> 00:53:26,340
can see why in general you want sort of

1203
00:53:24,630 --> 00:53:28,019
smoother fall-off curves so that your

1204
00:53:26,340 --> 00:53:29,760
system isn't dealing with forces that

1205
00:53:28,019 --> 00:53:31,710
turn on and turn off turn on turn off

1206
00:53:29,760 --> 00:53:35,520
right it helps if they kind of fall off

1207
00:53:31,710 --> 00:53:37,409
to zero because then there's always a

1208
00:53:35,519 --> 00:53:40,110
smooth continuous force that it's

1209
00:53:37,409 --> 00:53:42,449
finding and this these turn into like

1210
00:53:40,110 --> 00:53:44,400
hard edges in search spaces and we could

1211
00:53:42,449 --> 00:53:46,379
go on for a long time about

1212
00:53:44,400 --> 00:53:47,369
how you search through space for

1213
00:53:46,380 --> 00:53:49,619
solutions that's tough but that's

1214
00:53:47,369 --> 00:53:52,710
getting into really advanced territory I

1215
00:53:49,619 --> 00:53:55,320
don't think we want to go um so let's

1216
00:53:52,710 --> 00:53:56,849
just keep it simple and say for reasons

1217
00:53:55,320 --> 00:53:58,740
you can sort of Intuit at least a little

1218
00:53:56,849 --> 00:54:01,679
bit you don't want your forces turning

1219
00:53:58,739 --> 00:54:02,909
on and off randomly like that in cuz the

1220
00:54:01,679 --> 00:54:04,349
thing that's trying to converge these

1221
00:54:02,909 --> 00:54:06,118
points is having to deal with these like

1222
00:54:04,349 --> 00:54:09,000
real surprises all the time something

1223
00:54:06,119 --> 00:54:11,519
that smoothly goes down produces a more

1224
00:54:09,000 --> 00:54:12,809
gradual like rest into place which is

1225
00:54:11,519 --> 00:54:16,139
kind of what we hope these things will

1226
00:54:12,809 --> 00:54:17,429
do right so we're gonna come up with a

1227
00:54:16,139 --> 00:54:18,809
fall-off it's gonna be based on the

1228
00:54:17,429 --> 00:54:20,579
inner product between these two if the

1229
00:54:18,809 --> 00:54:21,960
inner product is positive we keep it if

1230
00:54:20,579 --> 00:54:24,840
it's negative we don't so that means

1231
00:54:21,960 --> 00:54:26,130
points don't suck like they won't turn

1232
00:54:24,840 --> 00:54:28,980
the polarity and start sucking each

1233
00:54:26,130 --> 00:54:31,920
other in right we're just not gonna deal

1234
00:54:28,980 --> 00:54:33,389
with that we could maybe it would be

1235
00:54:31,920 --> 00:54:35,340
better who knows because it's still

1236
00:54:33,389 --> 00:54:36,269
continuous either way so maybe that

1237
00:54:35,340 --> 00:54:37,590
would be better but we're just not going

1238
00:54:36,269 --> 00:54:40,559
to do that what points are gonna pull

1239
00:54:37,590 --> 00:54:42,358
they're only gonna push alright so once

1240
00:54:40,559 --> 00:54:44,279
we know that we're going to push we're

1241
00:54:42,358 --> 00:54:46,380
gonna take our force line like this and

1242
00:54:44,280 --> 00:54:47,850
I think what we would say is the force

1243
00:54:46,380 --> 00:54:51,780
line again

1244
00:54:47,849 --> 00:54:53,759
we want to apply that displacement based

1245
00:54:51,780 --> 00:54:55,560
probably on this fall-off so if two

1246
00:54:53,760 --> 00:54:58,380
points were right on top of each other

1247
00:54:55,559 --> 00:55:00,150
right we would want the maximum fall-off

1248
00:54:58,380 --> 00:55:02,340
unfortunately if two points are actually

1249
00:55:00,150 --> 00:55:04,530
right on top of each other they can't

1250
00:55:02,340 --> 00:55:06,000
tell which way to separate we could try

1251
00:55:04,530 --> 00:55:07,410
to break that tie but let's just hope

1252
00:55:06,000 --> 00:55:11,159
other points would break that tie for

1253
00:55:07,409 --> 00:55:13,739
them but in any other case where we

1254
00:55:11,159 --> 00:55:16,259
produce that line the line is

1255
00:55:13,739 --> 00:55:19,589
automatically going to be longer based

1256
00:55:16,260 --> 00:55:22,350
on the distance right so effectively

1257
00:55:19,590 --> 00:55:26,789
just adding just the line in might be

1258
00:55:22,349 --> 00:55:29,039
enough but I think we may want to double

1259
00:55:26,789 --> 00:55:31,500
up on that by effectively multiplying

1260
00:55:29,039 --> 00:55:32,789
that by that inner product so as you get

1261
00:55:31,500 --> 00:55:37,050
down to here

1262
00:55:32,789 --> 00:55:39,960
right again because as the line gets

1263
00:55:37,050 --> 00:55:41,190
longer the push would get stronger in

1264
00:55:39,960 --> 00:55:42,358
fact you know what now I think that's

1265
00:55:41,190 --> 00:55:45,450
the opposite of what we want right we

1266
00:55:42,358 --> 00:55:47,130
want the opposite of that so we do want

1267
00:55:45,449 --> 00:55:48,750
to take this and we want to normalize

1268
00:55:47,130 --> 00:55:50,400
that I think we want to take the

1269
00:55:48,750 --> 00:55:51,989
distance between in the direction and we

1270
00:55:50,400 --> 00:55:54,389
want to I think get rid of that length

1271
00:55:51,989 --> 00:55:57,389
and then we want to reintroduce the

1272
00:55:54,389 --> 00:55:58,079
length as being the opposite way the

1273
00:55:57,389 --> 00:56:00,210
further

1274
00:55:58,079 --> 00:56:02,969
you get the less repulsion there is

1275
00:56:00,210 --> 00:56:05,400
again this gives us exactly that

1276
00:56:02,969 --> 00:56:07,139
fall-off so we just need the force line

1277
00:56:05,400 --> 00:56:09,869
to be the direction right

1278
00:56:07,139 --> 00:56:11,909
and then we'll reintroduce that amount

1279
00:56:09,869 --> 00:56:15,389
okay so then we want to say all right

1280
00:56:11,909 --> 00:56:19,019
the displacement for this point is now

1281
00:56:15,389 --> 00:56:23,299
gonna get added in this force line times

1282
00:56:19,019 --> 00:56:26,849
the fall-off right times some constant

1283
00:56:23,300 --> 00:56:32,400
that is our you know maximum

1284
00:56:26,849 --> 00:56:34,230
displacement basically right so we have

1285
00:56:32,400 --> 00:56:36,990
some idea of what's the maximum

1286
00:56:34,230 --> 00:56:39,539
displacement per step we want to see and

1287
00:56:36,989 --> 00:56:41,609
so on a sphere we don't want these

1288
00:56:39,539 --> 00:56:43,949
things jumping wildly we know the sphere

1289
00:56:41,610 --> 00:56:46,559
has radius one we probably don't want

1290
00:56:43,949 --> 00:56:50,460
anything moving more than like you know

1291
00:56:46,559 --> 00:56:52,860
a tenth of a unit mm-hmm cuz that's a

1292
00:56:50,460 --> 00:56:54,630
pretty big move inside something that's

1293
00:56:52,860 --> 00:56:57,420
only you know it's sphere that's got a

1294
00:56:54,630 --> 00:56:59,789
radius of one so it's two units across

1295
00:56:57,420 --> 00:57:02,190
in diameter we don't want something

1296
00:56:59,789 --> 00:57:05,639
moving you know anywhere close to one

1297
00:57:02,190 --> 00:57:07,619
whole unit there because that's just too

1298
00:57:05,639 --> 00:57:10,170
much motion per step we're trying to do

1299
00:57:07,619 --> 00:57:12,150
this gradually right so maybe that's the

1300
00:57:10,170 --> 00:57:13,590
maximum and if you're right next to each

1301
00:57:12,150 --> 00:57:17,099
other you can move that much away from

1302
00:57:13,590 --> 00:57:19,110
each other because again remember this

1303
00:57:17,099 --> 00:57:21,119
will be effectively doubled in a sense

1304
00:57:19,110 --> 00:57:22,890
if two points are right next to other

1305
00:57:21,119 --> 00:57:25,199
they'll each move on way from each other

1306
00:57:22,889 --> 00:57:27,839
at that speed so in effect you could

1307
00:57:25,199 --> 00:57:30,619
double it right so the max displacement

1308
00:57:27,840 --> 00:57:33,600
per step wants to probably be pretty low

1309
00:57:30,619 --> 00:57:35,880
and it might even want to be lower than

1310
00:57:33,599 --> 00:57:37,319
this we'll see because that might move

1311
00:57:35,880 --> 00:57:40,289
too far in fact I might set it to

1312
00:57:37,320 --> 00:57:42,870
something quite a bit lower for now just

1313
00:57:40,289 --> 00:57:45,539
so that we kind of more gradually move

1314
00:57:42,869 --> 00:57:49,889
it and now we've kind of done what we

1315
00:57:45,539 --> 00:57:53,009
wanted to do at this point we've gotten

1316
00:57:49,889 --> 00:57:55,139
to a place where I think and let's put

1317
00:57:53,010 --> 00:57:59,570
this way let's put this min total

1318
00:57:55,139 --> 00:58:03,569
displacement per step is like maybe this

1319
00:57:59,570 --> 00:58:07,190
right meaning if nobody is moving at

1320
00:58:03,570 --> 00:58:07,190
least that much then we're kind of done

1321
00:58:08,610 --> 00:58:17,970
right alright and so last things last

1322
00:58:15,800 --> 00:58:19,470
you've got a breakout or the loop at

1323
00:58:17,969 --> 00:58:21,059
some point but I think then we're good

1324
00:58:19,469 --> 00:58:22,859
to go so we sum up our total

1325
00:58:21,059 --> 00:58:24,599
displacement we see whether or not

1326
00:58:22,860 --> 00:58:27,090
everyone's more or less stopped moving

1327
00:58:24,599 --> 00:58:29,279
if they have we're good to go

1328
00:58:27,090 --> 00:58:30,930
and that should in theory happen when we

1329
00:58:29,280 --> 00:58:33,060
get enough people kind of balanced

1330
00:58:30,929 --> 00:58:35,849
throughout the sphere again it may have

1331
00:58:33,059 --> 00:58:37,739
to be this tolerance may be too high it

1332
00:58:35,849 --> 00:58:39,389
may be that or too low so we're gonna

1333
00:58:37,739 --> 00:58:42,029
have to tune our movement a little bit

1334
00:58:39,389 --> 00:58:45,650
there may be a better way to do that and

1335
00:58:42,030 --> 00:58:45,650
I'm not sure what it actually is

1336
00:58:48,110 --> 00:58:56,970
so I'll tell you what you know I think

1337
00:58:50,789 --> 00:58:59,579
there is a better way to do that I think

1338
00:58:56,969 --> 00:59:03,089
there is I'm gonna change my mind on

1339
00:58:59,579 --> 00:59:06,449
that so what I'm gonna do here is I'm

1340
00:59:03,090 --> 00:59:09,329
going to say alright this conditions

1341
00:59:06,449 --> 00:59:14,069
actually gonna happen here before the

1342
00:59:09,329 --> 00:59:14,909
step before we take the step and what

1343
00:59:14,070 --> 00:59:17,730
we're gonna do here is we're gonna

1344
00:59:14,909 --> 00:59:19,679
recognize that we're already doing an N

1345
00:59:17,730 --> 00:59:24,179
squared loop while we do that N squared

1346
00:59:19,679 --> 00:59:26,969
loop let's sum up the distances let's

1347
00:59:24,179 --> 00:59:29,339
let's take all the distances from

1348
00:59:26,969 --> 00:59:35,489
everybody to everybody else and let's

1349
00:59:29,340 --> 00:59:38,850
see what they are right so for any given

1350
00:59:35,489 --> 00:59:42,839
point we will look at what the distance

1351
00:59:38,849 --> 00:59:49,699
is between that point and all other

1352
00:59:42,840 --> 00:59:49,700
points as like a it's like an average

1353
00:59:51,110 --> 01:00:01,190
it's not really what I want I'm not sure

1354
00:59:58,349 --> 01:00:01,190
if that's really what I want

1355
01:00:18,880 --> 01:00:23,289
you know so the goal of this

1356
01:00:21,340 --> 01:00:25,690
distribution is to ensure minimum

1357
01:00:23,289 --> 01:00:27,009
distance between points right so what I

1358
01:00:25,690 --> 01:00:30,130
actually want to do is I just want to

1359
01:00:27,010 --> 01:00:32,800
find what's the closest point so for

1360
01:00:30,130 --> 01:00:36,099
every direction what I want to do is

1361
01:00:32,800 --> 01:00:40,150
find what is the closest point distance

1362
01:00:36,099 --> 01:00:41,679
right so this is the thing I actually

1363
01:00:40,150 --> 01:00:42,880
want to find and I can find it squared

1364
01:00:41,679 --> 01:00:45,429
just don't really I don't even need to

1365
01:00:42,880 --> 01:00:46,750
take any square roots in here so when we

1366
01:00:45,429 --> 01:00:48,639
come through here what I'm going to do

1367
01:00:46,750 --> 01:00:50,860
is say all right we're gonna get the

1368
01:00:48,639 --> 01:00:53,799
forced line that we're going to compute

1369
01:00:50,860 --> 01:00:55,329
here right and this force line I'm going

1370
01:00:53,800 --> 01:01:05,500
to compute like this and then I'm going

1371
01:00:55,329 --> 01:01:08,739
to do the force line length right like

1372
01:01:05,500 --> 01:01:10,659
this and then I'm going to say if force

1373
01:01:08,739 --> 01:01:13,689
line length is oops

1374
01:01:10,659 --> 01:01:21,339
I spell it correctly it's greater than

1375
01:01:13,690 --> 01:01:22,630
Syria we're gonna do this right so I'm

1376
01:01:21,340 --> 01:01:24,309
basically going to normalize the forest

1377
01:01:22,630 --> 01:01:28,030
line after but I'm gonna remember what

1378
01:01:24,309 --> 01:01:30,190
that force line length was I'm then

1379
01:01:28,030 --> 01:01:31,870
gonna say if the closest distance

1380
01:01:30,190 --> 01:01:34,059
squared right

1381
01:01:31,869 --> 01:01:35,529
oh and I guess since I have to do this I

1382
01:01:34,059 --> 01:01:36,820
don't even need to do squared I think

1383
01:01:35,530 --> 01:01:38,320
about it because I had to do the square

1384
01:01:36,820 --> 01:01:40,870
root anyway to normalize the vector so

1385
01:01:38,320 --> 01:01:43,539
doesn't matter so if the closest point

1386
01:01:40,869 --> 01:01:45,670
distance right is greater than the force

1387
01:01:43,539 --> 01:01:51,849
line length that I know I found a new

1388
01:01:45,670 --> 01:01:55,690
closest point right so now I know what

1389
01:01:51,849 --> 01:01:58,860
the closest point distance is for each

1390
01:01:55,690 --> 01:02:01,900
one of these for every point right and

1391
01:01:58,860 --> 01:02:03,610
so what I'm going to do here is on every

1392
01:02:01,900 --> 01:02:09,490
time through the loop I'm gonna say the

1393
01:02:03,610 --> 01:02:11,860
min closest point distance equals f2 due

1394
01:02:09,489 --> 01:02:16,479
to Max and the max closest point

1395
01:02:11,860 --> 01:02:18,099
distance because f-22 min meaning him to

1396
01:02:16,480 --> 01:02:21,159
start them on the opposite end spectrum

1397
01:02:18,099 --> 01:02:24,549
and each time through the loop I'm going

1398
01:02:21,159 --> 01:02:28,529
to just track what they were right so

1399
01:02:24,550 --> 01:02:28,530
when the minimum closest point distance

1400
01:02:31,588 --> 01:02:38,828
gets updated it's gonna become the

1401
01:02:34,420 --> 01:02:41,260
minimum of itself and the closest point

1402
01:02:38,829 --> 01:02:42,880
distance for this point and the same

1403
01:02:41,260 --> 01:02:43,660
will be true of the maximum just the

1404
01:02:42,880 --> 01:02:47,410
other way round

1405
01:02:43,659 --> 01:02:50,980
right so exiting the loop I now know for

1406
01:02:47,409 --> 01:02:54,250
all of the points in the system I know

1407
01:02:50,980 --> 01:02:57,400
the smallest like the closest any two

1408
01:02:54,250 --> 01:02:59,980
points are and I know the farthest that

1409
01:02:57,400 --> 01:03:06,460
any two points are right I know those

1410
01:02:59,980 --> 01:03:10,719
two numbers and so now what I can do is

1411
01:03:06,460 --> 01:03:13,269
I can say let's get to the point where

1412
01:03:10,719 --> 01:03:19,739
our minimum closest point distance and

1413
01:03:13,269 --> 01:03:22,150
our maximum closest point distance to me

1414
01:03:19,739 --> 01:03:30,539
do I want to say converge or just not

1415
01:03:22,150 --> 01:03:30,539
change that's a tough one

1416
01:03:37,190 --> 01:03:40,929
[Music]

1417
01:03:46,920 --> 01:04:04,690
so I guess I want to say so what I want

1418
01:04:02,650 --> 01:04:09,639
is I want the minimum close distance to

1419
01:04:04,690 --> 01:04:13,298
stop improving right that's sort of what

1420
01:04:09,639 --> 01:04:15,489
I want and so if the like previous

1421
01:04:13,298 --> 01:04:17,288
minimum closest distance didn't get any

1422
01:04:15,489 --> 01:04:19,739
better right so you know if I you can

1423
01:04:17,289 --> 01:04:19,740
imagine this

1424
01:04:35,710 --> 01:04:46,720
I essentially want to say look if the

1425
01:04:38,889 --> 01:04:48,819
last minimum closest point distance like

1426
01:04:46,719 --> 01:04:51,429
if I didn't get any better June and I'm

1427
01:04:48,820 --> 01:05:03,100
saying you know I can't put this down

1428
01:04:51,429 --> 01:05:04,809
here though I just realized well so if

1429
01:05:03,099 --> 01:05:06,789
the last minimum closest point distance

1430
01:05:04,809 --> 01:05:08,769
didn't get any better like if if I

1431
01:05:06,789 --> 01:05:11,469
actually you know I'm not really

1432
01:05:08,769 --> 01:05:12,940
converging so if the last minimum you

1433
01:05:11,469 --> 01:05:14,469
know if the absolute value between these

1434
01:05:12,940 --> 01:05:19,360
is like starting to be less than our

1435
01:05:14,469 --> 01:05:22,059
epsilon value would be something like

1436
01:05:19,360 --> 01:05:24,340
this so if we really can't spread these

1437
01:05:22,059 --> 01:05:27,039
points out any better so the whatever

1438
01:05:24,340 --> 01:05:29,260
the last if the app if the absolute

1439
01:05:27,039 --> 01:05:30,550
value of the last move close to quite

1440
01:05:29,260 --> 01:05:36,460
distance minus the minimum closest point

1441
01:05:30,550 --> 01:05:40,780
is if it hasn't improved right then

1442
01:05:36,460 --> 01:05:45,940
we're kind of done and again I don't

1443
01:05:40,780 --> 01:05:51,460
really know really I guess we want this

1444
01:05:45,940 --> 01:05:53,170
to be directional even right if if the

1445
01:05:51,460 --> 01:05:55,240
last minimum closest point distance

1446
01:05:53,170 --> 01:05:59,980
minus the minimum closest point distance

1447
01:05:55,239 --> 01:06:06,789
if this hasn't gotten bigger right

1448
01:05:59,980 --> 01:06:11,260
meaning if this number is is like going

1449
01:06:06,789 --> 01:06:13,210
up that's just bad right because it

1450
01:06:11,260 --> 01:06:14,590
should always be going down right the

1451
01:06:13,210 --> 01:06:16,420
last minute closest point doesn't should

1452
01:06:14,590 --> 01:06:18,880
have it higher

1453
01:06:16,420 --> 01:06:20,260
I guess that would do it I don't know

1454
01:06:18,880 --> 01:06:21,910
we're gonna have to this is going to be

1455
01:06:20,260 --> 01:06:25,330
the interesting part of this I think

1456
01:06:21,909 --> 01:06:27,099
probably uh so that's what we kind of

1457
01:06:25,329 --> 01:06:28,480
want to do here and we don't really know

1458
01:06:27,099 --> 01:06:30,549
what this is going to do because we just

1459
01:06:28,480 --> 01:06:31,750
spewed a bunch of code into it and we

1460
01:06:30,550 --> 01:06:32,980
haven't thought too hard about the

1461
01:06:31,750 --> 01:06:40,329
numerical conditions of it

1462
01:06:32,980 --> 01:06:41,829
so who knows but wait where's my um know

1463
01:06:40,329 --> 01:06:45,099
why that wasn't in the recent list there

1464
01:06:41,829 --> 01:06:47,679
there it is all right

1465
01:06:45,099 --> 01:06:48,909
so if I step into this I'm going to take

1466
01:06:47,679 --> 01:07:00,759
a look at this code and

1467
01:06:48,909 --> 01:07:04,269
and see what happens here here's me

1468
01:07:00,760 --> 01:07:09,730
calling oops generate lighting pattern

1469
01:07:04,269 --> 01:07:10,929
set the breakpoint on that function so

1470
01:07:09,730 --> 01:07:13,990
when I come through here what we're

1471
01:07:10,929 --> 01:07:16,059
gonna do is we're gonna look at this

1472
01:07:13,989 --> 01:07:17,769
loop we're gonna go through our

1473
01:07:16,059 --> 01:07:19,719
directions here and we're gonna compute

1474
01:07:17,769 --> 01:07:21,579
this minimum closest point distance

1475
01:07:19,719 --> 01:07:23,500
let's just let's just step through this

1476
01:07:21,579 --> 01:07:24,130
a little bit once just to see what's

1477
01:07:23,500 --> 01:07:25,960
going on

1478
01:07:24,130 --> 01:07:28,119
so here's us with a direction and a

1479
01:07:25,960 --> 01:07:29,970
repulse or here's the direction here's

1480
01:07:28,119 --> 01:07:32,349
the repulsor right there two different

1481
01:07:29,969 --> 01:07:36,279
points in the world they're fairly well

1482
01:07:32,349 --> 01:07:38,019
spread apart actually we happen to have

1483
01:07:36,280 --> 01:07:39,550
a fall-off value that is positive

1484
01:07:38,019 --> 01:07:41,110
although probably not super positive no

1485
01:07:39,550 --> 01:07:46,150
it is actually is that right should it

1486
01:07:41,110 --> 01:07:47,230
be that positive oh yeah okay yeah

1487
01:07:46,150 --> 01:07:51,010
actually they are somewhat close

1488
01:07:47,230 --> 01:07:53,860
together compute the force line look at

1489
01:07:51,010 --> 01:07:55,720
the length we normalize the force line

1490
01:07:53,860 --> 01:07:59,430
so now our force line should be you know

1491
01:07:55,719 --> 01:08:01,959
a normal looking thing and it sort of is

1492
01:07:59,429 --> 01:08:03,219
we then take our max this step and we

1493
01:08:01,960 --> 01:08:05,889
supply our displacement that

1494
01:08:03,219 --> 01:08:08,199
displacement by the way should be zeros

1495
01:08:05,889 --> 01:08:09,569
now we should get something in there let

1496
01:08:08,199 --> 01:08:12,250
me do this would be a small displacement

1497
01:08:09,570 --> 01:08:14,050
we look to see about the closest point

1498
01:08:12,250 --> 01:08:16,750
distance and we update that that should

1499
01:08:14,050 --> 01:08:19,230
be set to basically float max by the way

1500
01:08:16,750 --> 01:08:21,039
I think this is a nice feature of I

1501
01:08:19,229 --> 01:08:23,259
don't know if you noticed this I

1502
01:08:21,039 --> 01:08:25,810
actually asked George to add this and he

1503
01:08:23,260 --> 01:08:28,840
didn't it's awesome if something happens

1504
01:08:25,810 --> 01:08:30,820
to be exactly float Max or one of those

1505
01:08:28,840 --> 01:08:31,300
other classes it shows you how cool is

1506
01:08:30,819 --> 01:08:32,619
that

1507
01:08:31,300 --> 01:08:35,050
right so you don't have to look at this

1508
01:08:32,619 --> 01:08:37,390
and wonder if it's quite float max you

1509
01:08:35,050 --> 01:08:39,039
just know it's like it's load Max and so

1510
01:08:37,390 --> 01:08:40,360
that's really really nice feature I love

1511
01:08:39,039 --> 01:08:42,069
that feature I don't know if Georgia now

1512
01:08:40,359 --> 01:08:43,719
if you're with us today but that's a

1513
01:08:42,069 --> 01:08:45,429
great vibe I've loved it it's been great

1514
01:08:43,720 --> 01:08:50,289
because I often set things to the

1515
01:08:45,430 --> 01:08:53,200
maximum values like that and it's nice

1516
01:08:50,289 --> 01:08:55,149
to see them shown exactly as a human

1517
01:08:53,199 --> 01:08:59,500
readable value so you don't have to

1518
01:08:55,149 --> 01:09:02,019
guess so in here when we do our closest

1519
01:08:59,500 --> 01:09:02,289
point updating you know we're gonna you

1520
01:09:02,020 --> 01:09:04,380
know

1521
01:09:02,289 --> 01:09:06,729
as we go through we're gonna kind of

1522
01:09:04,380 --> 01:09:09,730
look and see if we tracked which one is

1523
01:09:06,729 --> 01:09:11,469
closest hopefully we do eventually we're

1524
01:09:09,729 --> 01:09:12,759
gonna update our min max closest point

1525
01:09:11,470 --> 01:09:19,529
let's see if that looks at all

1526
01:09:12,759 --> 01:09:25,119
reasonable so min closest point distance

1527
01:09:19,529 --> 01:09:27,640
max closest point distance looks like

1528
01:09:25,119 --> 01:09:29,528
float min didn't maybe work there unless

1529
01:09:27,640 --> 01:09:31,119
our float min is wrong which it might be

1530
01:09:29,529 --> 01:09:35,290
I'm not sure

1531
01:09:31,119 --> 01:09:38,079
oh you know what that's not that's not

1532
01:09:35,289 --> 01:09:41,560
in the sea thing is it negative float

1533
01:09:38,079 --> 01:09:47,199
men it might be I don't know George

1534
01:09:41,560 --> 01:09:49,569
help us anyway here where we get maybe I

1535
01:09:47,199 --> 01:09:52,000
maybe I set that constant wrong I don't

1536
01:09:49,569 --> 01:09:56,700
even know but anyway here's our min

1537
01:09:52,000 --> 01:09:56,699
closest point there's our max this point

1538
01:10:00,810 --> 01:10:04,450
I'm looking at the wrong place and look

1539
01:10:03,069 --> 01:10:06,399
why are they the same that's why the

1540
01:10:04,449 --> 01:10:10,500
same so here's the thing that's farthest

1541
01:10:06,399 --> 01:10:14,699
away and here's the thing that's closest

1542
01:10:10,500 --> 01:10:21,390
it looks like our check is wrong here oh

1543
01:10:14,699 --> 01:10:21,389
yeah cuz that's going the wrong way I

1544
01:10:24,329 --> 01:10:31,479
set that wrong didn't I cuz that number

1545
01:10:28,930 --> 01:10:33,310
is supposed to be getting larger so no

1546
01:10:31,479 --> 01:10:35,889
wonder it I was like why did it exit so

1547
01:10:33,310 --> 01:10:39,610
soon this should take a while so this

1548
01:10:35,890 --> 01:10:42,579
should actually be zero right because

1549
01:10:39,609 --> 01:10:44,259
you're moving them you're moving things

1550
01:10:42,579 --> 01:10:49,720
further apart over time are you trying

1551
01:10:44,260 --> 01:10:52,090
to right so this is more what I would

1552
01:10:49,720 --> 01:10:54,789
have expected it to take a long time to

1553
01:10:52,090 --> 01:10:56,500
run and now the question is let's see

1554
01:10:54,789 --> 01:11:02,500
what we're getting on each individual

1555
01:10:56,500 --> 01:11:08,189
step right so you can kind of see it's

1556
01:11:02,500 --> 01:11:08,189
slowly getting larger right

1557
01:11:15,699 --> 01:11:29,079
slowly slowly slowly as we go let's let

1558
01:11:18,609 --> 01:11:31,000
it run for a while and so what it looks

1559
01:11:29,079 --> 01:11:33,789
like to me is it looks like our our

1560
01:11:31,000 --> 01:11:35,409
displacement step is maybe not as big as

1561
01:11:33,789 --> 01:11:36,430
it should be because I feel like we

1562
01:11:35,409 --> 01:11:39,099
should be able to converge a little

1563
01:11:36,430 --> 01:11:41,050
faster than that also our maximum

1564
01:11:39,100 --> 01:11:43,960
displacement step might want to be

1565
01:11:41,050 --> 01:11:45,190
proportional to those min distances so I

1566
01:11:43,960 --> 01:11:49,060
feel like this may want to get a

1567
01:11:45,189 --> 01:11:51,849
adjusted right so like if you look at

1568
01:11:49,060 --> 01:11:53,860
the last minused point distance we may

1569
01:11:51,850 --> 01:11:55,720
want to start subtracting that away from

1570
01:11:53,859 --> 01:11:57,130
our step or something like that at the

1571
01:11:55,720 --> 01:11:59,619
moment I'm gonna crank that up a little

1572
01:11:57,130 --> 01:12:09,130
bit so the points can move more and just

1573
01:11:59,619 --> 01:12:11,380
see what that does to our convergence so

1574
01:12:09,130 --> 01:12:13,029
that it looks like at that point the

1575
01:12:11,380 --> 01:12:15,489
next step moves things a little too far

1576
01:12:13,029 --> 01:12:18,399
so I do think what we want to do is make

1577
01:12:15,489 --> 01:12:21,159
this max dispersed step I do think we

1578
01:12:18,399 --> 01:12:24,479
want that to kind of be conditioned on

1579
01:12:21,159 --> 01:12:26,739
the current state of affairs if you will

1580
01:12:24,479 --> 01:12:28,149
that leads me to go maybe I'm gonna

1581
01:12:26,739 --> 01:12:31,000
introduce a little more n-squared miss

1582
01:12:28,149 --> 01:12:32,349
here because hey to M Squared steps it's

1583
01:12:31,000 --> 01:12:33,729
not that different than one N squared

1584
01:12:32,350 --> 01:12:36,730
step in terms of whether or not this

1585
01:12:33,729 --> 01:12:40,000
thing can run I so maybe what I'll do is

1586
01:12:36,729 --> 01:12:49,239
say look what if we said first we're

1587
01:12:40,000 --> 01:12:51,250
gonna take the in fact oh you know what

1588
01:12:49,239 --> 01:12:53,710
we don't have to do that so the max dis

1589
01:12:51,250 --> 01:12:55,510
first step is just x placement we can

1590
01:12:53,710 --> 01:12:57,939
just sum without knowing it right

1591
01:12:55,510 --> 01:13:00,130
because it's just a scalar that affects

1592
01:12:57,939 --> 01:13:02,469
the total distance moved so what we can

1593
01:13:00,130 --> 01:13:06,640
do here is say look let's move this down

1594
01:13:02,470 --> 01:13:08,829
and say let's put it in here let's take

1595
01:13:06,640 --> 01:13:15,400
the max displacement first step we'll

1596
01:13:08,829 --> 01:13:17,050
take it into this this equation here

1597
01:13:15,399 --> 01:13:19,539
where we do our displacement we'll

1598
01:13:17,050 --> 01:13:22,480
multiply it here we don't care how much

1599
01:13:19,539 --> 01:13:25,600
they moved any more I don't think I care

1600
01:13:22,479 --> 01:13:28,000
about that total displacement so we're

1601
01:13:25,600 --> 01:13:29,050
just going to get rid of that I'm gonna

1602
01:13:28,000 --> 01:13:33,039
get rid of

1603
01:13:29,050 --> 01:13:36,039
of all of this right so don't care about

1604
01:13:33,039 --> 01:13:41,250
that we write them back so all I want to

1605
01:13:36,039 --> 01:13:43,630
do now is say let's condition the motion

1606
01:13:41,250 --> 01:13:46,869
whatever that whatever movement we're

1607
01:13:43,630 --> 01:13:49,239
going to do let's condition that on our

1608
01:13:46,869 --> 01:13:52,779
new minimum so whatever the minimum

1609
01:13:49,239 --> 01:13:54,579
closest distance is I don't want to move

1610
01:13:52,779 --> 01:13:55,960
you know when two people are close

1611
01:13:54,579 --> 01:13:58,809
together or you know we could actually

1612
01:13:55,960 --> 01:14:00,760
use the maximum I don't want to move

1613
01:13:58,810 --> 01:14:03,100
however far apart the two furthest

1614
01:14:00,760 --> 01:14:04,720
people are I don't want to move any one

1615
01:14:03,100 --> 01:14:08,079
more than a certain amount of that

1616
01:14:04,720 --> 01:14:10,510
distance let's say right so you know

1617
01:14:08,079 --> 01:14:12,430
maybe we do something more like this so

1618
01:14:10,510 --> 01:14:15,220
when things are far apart we can move

1619
01:14:12,430 --> 01:14:18,400
them maybe a tenth of that distance at a

1620
01:14:15,220 --> 01:14:21,159
time when things are not we slow it down

1621
01:14:18,399 --> 01:14:22,719
right and maybe this needs to be a

1622
01:14:21,159 --> 01:14:24,099
higher maybe that needs to be more like

1623
01:14:22,720 --> 01:14:25,510
a quarter of the distance I don't know

1624
01:14:24,100 --> 01:14:28,360
but that way at least it's based on

1625
01:14:25,510 --> 01:14:30,570
something we measure and let's see how

1626
01:14:28,359 --> 01:14:30,569
that goes

1627
01:14:31,770 --> 01:14:39,340
all right I want to watch the

1628
01:14:35,260 --> 01:14:41,380
convergence to myself so here we go so

1629
01:14:39,340 --> 01:14:44,260
here's our min closest point distance

1630
01:14:41,380 --> 01:14:46,539
and you can see it kind of converging

1631
01:14:44,260 --> 01:14:47,949
there towards what what kind of

1632
01:14:46,539 --> 01:14:51,850
oscillate it a little bit I feel like

1633
01:14:47,949 --> 01:14:53,289
that was too ungentle doesn't need to be

1634
01:14:51,850 --> 01:14:54,490
on the mini closest point distance the

1635
01:14:53,289 --> 01:15:03,720
problem is that could be effectively

1636
01:14:54,489 --> 01:15:03,719
nothing that's a hard one

1637
01:15:04,109 --> 01:15:19,170
I feel like we're still not picking the

1638
01:15:16,050 --> 01:15:19,590
right way of doing it like this is much

1639
01:15:19,170 --> 01:15:24,329
better

1640
01:15:19,590 --> 01:15:26,279
right you can see that converging really

1641
01:15:24,329 --> 01:15:28,380
good it kind of started off with big

1642
01:15:26,279 --> 01:15:31,349
movements and now it's getting smaller

1643
01:15:28,380 --> 01:15:32,819
movements to try and dial that in and I

1644
01:15:31,350 --> 01:15:35,640
think that's exactly what we wanted to

1645
01:15:32,819 --> 01:15:37,799
see and so I think again like the

1646
01:15:35,640 --> 01:15:41,340
problem here is I'm not quite I'm gonna

1647
01:15:37,800 --> 01:15:43,710
go draw down the blackboard I think

1648
01:15:41,340 --> 01:15:55,170
because I wanna I feel like we can get

1649
01:15:43,710 --> 01:15:59,210
this pretty good right still working on

1650
01:15:55,170 --> 01:15:59,210
that sort of end point there

1651
01:16:17,460 --> 01:16:22,869
well we is there a new version of remedy

1652
01:16:20,079 --> 01:16:26,949
by the way so I just glanced over the

1653
01:16:22,869 --> 01:16:27,670
chat I saw that oh darn man there's an

1654
01:16:26,949 --> 01:16:32,109
8.1

1655
01:16:27,670 --> 01:16:34,750
what's an 8.1 I don't even know all

1656
01:16:32,109 --> 01:16:37,210
right so this eventually converged which

1657
01:16:34,750 --> 01:16:41,079
is what we want so we now know that this

1658
01:16:37,210 --> 01:16:45,579
sort of works right and we need to

1659
01:16:41,079 --> 01:16:47,130
improve our convergence I think but we

1660
01:16:45,579 --> 01:16:50,079
could talk about that as a separate part

1661
01:16:47,130 --> 01:16:51,909
let's first see if this produced is any

1662
01:16:50,079 --> 01:16:52,390
good results we could have tons of bugs

1663
01:16:51,909 --> 01:16:53,680
in there

1664
01:16:52,390 --> 01:16:55,840
so it could have been converging on

1665
01:16:53,680 --> 01:16:57,789
total garbage right

1666
01:16:55,840 --> 01:17:00,100
we watched dude nice convergence on

1667
01:16:57,789 --> 01:17:02,560
something but who knows if we were

1668
01:17:00,100 --> 01:17:03,880
measuring that something correctly so I

1669
01:17:02,560 --> 01:17:09,910
believe that wrote it out to the

1670
01:17:03,880 --> 01:17:12,940
handmade sphere yeah here's our handmade

1671
01:17:09,909 --> 01:17:15,369
sphere as we look in it you know

1672
01:17:12,939 --> 01:17:17,349
generated some some sphere right for us

1673
01:17:15,369 --> 01:17:20,710
who knows if it's good but there it is

1674
01:17:17,350 --> 01:17:26,970
so if I go ahead and copy the handmade

1675
01:17:20,710 --> 01:17:29,949
sphere by NL to W handmade code handmade

1676
01:17:26,970 --> 01:17:32,440
was like sphere sampling or sampling

1677
01:17:29,949 --> 01:17:35,710
Spears if I go ahead and copy that into

1678
01:17:32,439 --> 01:17:38,169
the actual game right I should now be

1679
01:17:35,710 --> 01:17:41,470
able to go run the game

1680
01:17:38,170 --> 01:17:42,819
oh and autosave turned on autosave is

1681
01:17:41,470 --> 01:17:44,050
pretty cool by the way it just saves

1682
01:17:42,819 --> 01:17:45,699
things automatically for you so you can

1683
01:17:44,050 --> 01:17:46,659
just kind of like hop around do you have

1684
01:17:45,699 --> 01:17:48,970
to think about it anymore

1685
01:17:46,659 --> 01:17:54,569
so I'm going to go ahead to win32

1686
01:17:48,970 --> 01:17:54,570
handmade art eug I'm going to compile it

1687
01:17:55,140 --> 01:18:02,250
like so so that we've got our new

1688
01:17:59,529 --> 01:18:06,509
spheres in there and then I'm going to

1689
01:18:02,250 --> 01:18:06,510
try to yeah run it

1690
01:18:12,300 --> 01:18:20,199
now if I go look at those points up here

1691
01:18:15,010 --> 01:18:21,940
I don't know what I'll see that looks

1692
01:18:20,198 --> 01:18:23,250
like the same set of points what am I

1693
01:18:21,939 --> 01:18:25,839
missing

1694
01:18:23,250 --> 01:18:29,020
there's no way that produced the exact

1695
01:18:25,840 --> 01:18:31,710
same set of points I don't think I mean

1696
01:18:29,020 --> 01:18:35,969
but that looks pretty close

1697
01:18:31,710 --> 01:18:35,969
did I not rebuild that properly

1698
01:18:43,260 --> 01:18:46,369
pretty sure I did that right

1699
01:18:48,819 --> 01:18:53,889
maybe we've got some pretty nasty bugs

1700
01:18:52,960 --> 01:18:56,619
in here I don't know

1701
01:18:53,890 --> 01:18:59,260
we should have seen something change

1702
01:18:56,619 --> 01:19:04,960
right it seems unlikely that we produced

1703
01:18:59,260 --> 01:19:07,680
exactly the same thing at least it seems

1704
01:19:04,960 --> 01:19:07,680
unlikely to me

1705
01:19:23,069 --> 01:19:34,618
let me take a quick gander so the fact

1706
01:19:31,599 --> 01:19:38,828
that I didn't see an exclamation point

1707
01:19:34,618 --> 01:19:40,598
and this didn't change so what happened

1708
01:19:38,828 --> 01:19:43,078
did my copy not work did I screw

1709
01:19:40,599 --> 01:19:43,078
something up

1710
01:19:49,010 --> 01:19:54,920
because this is not the right it didn't

1711
01:19:51,439 --> 01:20:04,879
update the file let me maybe four coders

1712
01:19:54,920 --> 01:20:14,449
saved it or something let's just find

1713
01:20:04,880 --> 01:20:22,159
out there we go that's that's the right

1714
01:20:14,449 --> 01:20:23,779
one now right okay so now let's see what

1715
01:20:22,159 --> 01:20:25,189
our sphere looks like cuz I guess I

1716
01:20:23,779 --> 01:20:27,229
don't know what I did wrong there but I

1717
01:20:25,189 --> 01:20:28,549
did something wrong there because it

1718
01:20:27,229 --> 01:20:29,959
didn't seem to update the file now maybe

1719
01:20:28,550 --> 01:20:37,610
that's a totally separate issue but

1720
01:20:29,960 --> 01:20:41,539
here's the actual sphere I guess still

1721
01:20:37,609 --> 01:20:43,579
looks wrong like it doesn't really look

1722
01:20:41,539 --> 01:20:47,390
like they fanned out as much as they

1723
01:20:43,579 --> 01:20:49,488
should to me right it's a little hard to

1724
01:20:47,390 --> 01:20:51,110
see because we're seeing all the sides

1725
01:20:49,488 --> 01:20:53,089
of the sphere at once but you can see

1726
01:20:51,109 --> 01:20:54,529
that those are not blue noise by any

1727
01:20:53,090 --> 01:20:56,720
stretch of imagination those two are way

1728
01:20:54,529 --> 01:21:01,809
closer than those so that that just does

1729
01:20:56,720 --> 01:21:01,810
not look correct to me at all right and

1730
01:21:02,289 --> 01:21:11,329
this is clearly the new one I think

1731
01:21:05,238 --> 01:21:12,738
right so we're definitely building we're

1732
01:21:11,329 --> 01:21:17,479
definitely rebuilding with the correct

1733
01:21:12,738 --> 01:21:20,329
sphere file well so much for a quick

1734
01:21:17,479 --> 01:21:23,689
victory I guess we've got some issues

1735
01:21:20,329 --> 01:21:27,319
here that we've got to look at so what's

1736
01:21:23,689 --> 01:21:29,449
the deal how did that not really push

1737
01:21:27,319 --> 01:21:32,420
our stuff around very much would be my

1738
01:21:29,449 --> 01:21:35,059
first question so taking a look at what

1739
01:21:32,420 --> 01:21:39,890
we're doing here let's see you know what

1740
01:21:35,060 --> 01:21:42,739
we probably would like to be able to to

1741
01:21:39,890 --> 01:21:44,750
draw this out you know it would be nice

1742
01:21:42,738 --> 01:21:46,429
to be able to see it happen over time

1743
01:21:44,750 --> 01:21:48,890
which maybe we need to do in order to

1744
01:21:46,430 --> 01:21:50,720
actually debug it so if I can't get this

1745
01:21:48,890 --> 01:21:52,280
working relatively soon I may just move

1746
01:21:50,720 --> 01:21:57,260
it into the game and have it be a thing

1747
01:21:52,279 --> 01:21:58,880
we can run every frame and watch but if

1748
01:21:57,260 --> 01:22:01,719
I look at what's happening in here right

1749
01:21:58,880 --> 01:22:04,800
at the moment and we take a look and see

1750
01:22:01,719 --> 01:22:07,149
what the déplacement steps are and so on

1751
01:22:04,800 --> 01:22:09,400
so let me just make sure I'm not doing

1752
01:22:07,149 --> 01:22:13,089
anything too stupid so if we look at the

1753
01:22:09,399 --> 01:22:14,829
displacements I grab those out here

1754
01:22:13,090 --> 01:22:18,489
I take whichever direction I'm currently

1755
01:22:14,829 --> 01:22:21,399
on I'm gonna write that displacement

1756
01:22:18,488 --> 01:22:27,279
step to be honest I don't I guess I

1757
01:22:21,399 --> 01:22:30,069
didn't really need to to zero those cuz

1758
01:22:27,279 --> 01:22:32,500
I actually sum them up just in place so

1759
01:22:30,069 --> 01:22:35,340
I think I might get rid of that as a

1760
01:22:32,500 --> 01:22:38,529
thing so that it's not in there anymore

1761
01:22:35,340 --> 01:22:41,289
as an additional factor so all I really

1762
01:22:38,529 --> 01:22:43,300
need to do here is actually say look at

1763
01:22:41,289 --> 01:22:53,229
the end of this you have to write this

1764
01:22:43,300 --> 01:22:56,529
back into the displacement array that's

1765
01:22:53,229 --> 01:23:00,309
going to get applied but when you start

1766
01:22:56,529 --> 01:23:02,109
out here it's just going to be zero so

1767
01:23:00,310 --> 01:23:06,390
you start out with no displacement you

1768
01:23:02,109 --> 01:23:09,189
sum the displacement here and then you

1769
01:23:06,390 --> 01:23:11,440
apply just recorded at the end and

1770
01:23:09,189 --> 01:23:13,899
that's that's the end of it right so

1771
01:23:11,439 --> 01:23:15,639
anyway for each individual point I'm

1772
01:23:13,899 --> 01:23:19,799
going through all the other points in

1773
01:23:15,640 --> 01:23:22,090
the system I'm ignoring the point itself

1774
01:23:19,800 --> 01:23:25,390
and then once I know that it's not the

1775
01:23:22,090 --> 01:23:27,190
same point I look up the point so I have

1776
01:23:25,390 --> 01:23:29,469
both the one I'm talking about and the

1777
01:23:27,189 --> 01:23:31,448
one that's going to push me I look at

1778
01:23:29,469 --> 01:23:32,948
what their fall-off is relative to each

1779
01:23:31,448 --> 01:23:34,329
other by taking the inner product

1780
01:23:32,948 --> 01:23:36,669
because I know they're both normalized

1781
01:23:34,329 --> 01:23:37,479
the fall-off has to be greater than zero

1782
01:23:36,670 --> 01:23:40,390
so they have to be in the same

1783
01:23:37,479 --> 01:23:42,218
hemisphere and when they are I then look

1784
01:23:40,390 --> 01:23:46,360
at what's the direction that I would

1785
01:23:42,219 --> 01:23:50,319
push this guy to push it away and I

1786
01:23:46,359 --> 01:23:52,809
apply that amount I apply the fall-off

1787
01:23:50,319 --> 01:23:54,939
based force along that line so I

1788
01:23:52,810 --> 01:23:58,570
normalize the forest line first and then

1789
01:23:54,939 --> 01:24:01,029
push it now granted I could do better I

1790
01:23:58,569 --> 01:24:04,840
could take the perpendicular in the same

1791
01:24:01,029 --> 01:24:06,550
direction right if we wanted to and just

1792
01:24:04,840 --> 01:24:10,110
to give some perspective on that what I

1793
01:24:06,550 --> 01:24:10,110
mean there is just that

1794
01:24:12,739 --> 01:24:19,109
if you look at what's gonna happen on a

1795
01:24:15,689 --> 01:24:20,699
great arc so you know on the sphere you

1796
01:24:19,109 --> 01:24:22,649
know I've got somebody here and

1797
01:24:20,699 --> 01:24:26,189
somebody's pushing them who's over here

1798
01:24:22,649 --> 01:24:27,809
this arc in between them right so I look

1799
01:24:26,189 --> 01:24:29,279
at that arc from the side I have

1800
01:24:27,810 --> 01:24:32,730
somebody pushing here and somebody

1801
01:24:29,279 --> 01:24:35,250
pushing here right the line between the

1802
01:24:32,729 --> 01:24:37,949
two of these is not actually the

1803
01:24:35,250 --> 01:24:40,920
direction along the sphere I would push

1804
01:24:37,949 --> 01:24:43,019
it has an outward component and what

1805
01:24:40,920 --> 01:24:44,760
that means is the amount that I push it

1806
01:24:43,020 --> 01:24:46,920
some of it gets eaten up by the

1807
01:24:44,760 --> 01:24:49,260
renormalization because if you look at

1808
01:24:46,920 --> 01:24:51,510
what happens right if I were to travel

1809
01:24:49,260 --> 01:24:53,760
around the sphere I would be going this

1810
01:24:51,510 --> 01:24:56,369
way but I'm actually pushing it this way

1811
01:24:53,760 --> 01:24:58,500
and that renormalization causes me to

1812
01:24:56,369 --> 01:25:00,930
move less than I normally would right

1813
01:24:58,500 --> 01:25:05,569
and I move less proportional to how far

1814
01:25:00,930 --> 01:25:09,480
away I am so one might argue perhaps

1815
01:25:05,569 --> 01:25:12,269
that we're over we're over damping by

1816
01:25:09,479 --> 01:25:17,639
using both thus fall off and the

1817
01:25:12,270 --> 01:25:19,710
renormalization step but that doesn't

1818
01:25:17,640 --> 01:25:22,380
explain why we don't seem to get any

1819
01:25:19,710 --> 01:25:24,390
real separation that's just a tuning

1820
01:25:22,380 --> 01:25:29,850
issue and it probably wouldn't account

1821
01:25:24,390 --> 01:25:32,820
for everything I don't think right okay

1822
01:25:29,850 --> 01:25:35,789
so we sum up all of the displacements

1823
01:25:32,819 --> 01:25:37,679
here and then we come through this part

1824
01:25:35,789 --> 01:25:39,060
of the code and we have a termination

1825
01:25:37,680 --> 01:25:41,940
criteria we know that we're not

1826
01:25:39,060 --> 01:25:43,920
terminating particularly early because

1827
01:25:41,939 --> 01:25:45,779
we watched it run several iterations on

1828
01:25:43,920 --> 01:25:48,720
each iteration we load up the

1829
01:25:45,779 --> 01:25:50,969
displacements in question we no longer

1830
01:25:48,720 --> 01:25:53,220
need this we could just do this because

1831
01:25:50,970 --> 01:25:55,740
we don't clear it so we load up the

1832
01:25:53,220 --> 01:26:00,300
displacement that we're going to use we

1833
01:25:55,739 --> 01:26:04,319
take the direction part here we're gonna

1834
01:26:00,300 --> 01:26:08,310
update that we don't need this right so

1835
01:26:04,319 --> 01:26:10,920
we're just doing that we apply whatever

1836
01:26:08,310 --> 01:26:15,930
the displacement is that we asked for so

1837
01:26:10,920 --> 01:26:17,880
like so times whatever the size of

1838
01:26:15,930 --> 01:26:20,820
displacements we're going to do so these

1839
01:26:17,880 --> 01:26:22,920
displacements here are some of

1840
01:26:20,819 --> 01:26:24,689
displacements and the max of each of

1841
01:26:22,920 --> 01:26:25,800
them that each of them could have been

1842
01:26:24,689 --> 01:26:27,719
was this amount

1843
01:26:25,800 --> 01:26:29,130
so we're just multiplying that using the

1844
01:26:27,720 --> 01:26:31,619
distributive property noting knowing

1845
01:26:29,130 --> 01:26:33,390
that a sum of things that can each be

1846
01:26:31,619 --> 01:26:36,059
this long itself could just be

1847
01:26:33,390 --> 01:26:38,880
multiplied by a unit displacement summed

1848
01:26:36,060 --> 01:26:40,830
together so that's what we've got then

1849
01:26:38,880 --> 01:26:42,600
we renormalize to project the direction

1850
01:26:40,829 --> 01:26:45,600
back onto the sphere and we write it

1851
01:26:42,600 --> 01:26:50,160
back into the location in the array that

1852
01:26:45,600 --> 01:26:52,079
it came from and that's it right now to

1853
01:26:50,159 --> 01:26:55,500
me that seems pretty simple and then

1854
01:26:52,079 --> 01:26:59,670
from there we just pluck those out like

1855
01:26:55,500 --> 01:27:01,529
this into our our samples right without

1856
01:26:59,670 --> 01:27:04,440
really doing anything else to them and

1857
01:27:01,529 --> 01:27:08,759
so that to me suggests that we should be

1858
01:27:04,439 --> 01:27:13,409
seeing a pretty good distribution here

1859
01:27:08,760 --> 01:27:16,739
in theory now there are other errors we

1860
01:27:13,409 --> 01:27:20,489
could have right we don't know for

1861
01:27:16,739 --> 01:27:22,289
certain that our output is being

1862
01:27:20,489 --> 01:27:23,639
correctly like we do a weird little

1863
01:27:22,289 --> 01:27:25,890
casting thing to get around the fact

1864
01:27:23,640 --> 01:27:31,350
that C++ was horrible and was screwing

1865
01:27:25,890 --> 01:27:33,500
us so it I don't know offhand that we

1866
01:27:31,350 --> 01:27:35,880
actually have the exact right thing

1867
01:27:33,500 --> 01:27:39,510
happening in terms of transporting our

1868
01:27:35,880 --> 01:27:43,109
results over to the to the new to the

1869
01:27:39,510 --> 01:27:46,140
saved side of the system and so it is a

1870
01:27:43,109 --> 01:27:49,079
little bit hard to know to be fair

1871
01:27:46,140 --> 01:27:50,880
exactly what's going on there but what I

1872
01:27:49,079 --> 01:27:53,670
would like to do is let's just take a

1873
01:27:50,880 --> 01:27:57,119
quick look like a sanity check if you

1874
01:27:53,670 --> 01:28:02,039
will on h8 sphere and I'm gonna go ahead

1875
01:27:57,119 --> 01:28:05,939
and just go full banana cakes here and

1876
01:28:02,039 --> 01:28:11,939
say I'm gonna write out the actual file

1877
01:28:05,939 --> 01:28:16,589
I think it's handmade sampling Spears

1878
01:28:11,939 --> 01:28:19,049
right so when we run this thing in the

1879
01:28:16,590 --> 01:28:24,779
debugger it will actually just overwrite

1880
01:28:19,050 --> 01:28:27,930
the file right full up so if I go ahead

1881
01:28:24,779 --> 01:28:32,609
and do a double you hand made

1882
01:28:27,930 --> 01:28:33,329
odhh handmade sampling spheres and I

1883
01:28:32,609 --> 01:28:38,279
just do it

1884
01:28:33,329 --> 01:28:40,739
Dell on that if I run it now um

1885
01:28:38,279 --> 01:28:42,659
after it finishes with the apparently

1886
01:28:40,739 --> 01:28:45,119
really crappy repulsion steps that I've

1887
01:28:42,659 --> 01:28:47,489
written that don't work it will write

1888
01:28:45,119 --> 01:28:48,960
them out to that file and this will just

1889
01:28:47,489 --> 01:28:51,229
verify that we're actually writing to

1890
01:28:48,960 --> 01:28:53,520
the thing that we then compile and use

1891
01:28:51,229 --> 01:28:55,049
which I just want to make sure is the

1892
01:28:53,520 --> 01:28:57,090
case because if we're testing it by

1893
01:28:55,050 --> 01:29:00,390
looking at it visually I want to know

1894
01:28:57,090 --> 01:29:01,920
that I'm actually getting that result

1895
01:29:00,390 --> 01:29:06,780
and so in here I'm gonna go ahead and

1896
01:29:01,920 --> 01:29:09,539
and also I'm gonna kill that buffer so

1897
01:29:06,779 --> 01:29:15,899
the spheres aren't loaded at all and off

1898
01:29:09,539 --> 01:29:18,210
we're gonna go I should also add a

1899
01:29:15,899 --> 01:29:19,969
little printf 2h8 sphere inspector while

1900
01:29:18,210 --> 01:29:25,470
this is running I might

1901
01:29:19,970 --> 01:29:27,900
that's so you know like when we go in

1902
01:29:25,470 --> 01:29:32,440
here and we're going to do another round

1903
01:29:27,899 --> 01:29:35,509
I might just say let's print out

1904
01:29:32,439 --> 01:29:36,809
[Music]

1905
01:29:35,510 --> 01:29:43,530
something like this

1906
01:29:36,810 --> 01:29:54,240
we're like generating points and then I

1907
01:29:43,529 --> 01:29:58,699
might do like this where we just look at

1908
01:29:54,239 --> 01:29:58,699
the difference between these two things

1909
01:30:01,399 --> 01:30:05,929
and I'll put this down at the end here

1910
01:30:12,970 --> 01:30:26,600
so this the top so basically what's

1911
01:30:24,859 --> 01:30:29,000
gonna happen is I'm gonna print out in

1912
01:30:26,600 --> 01:30:31,789
here like what the men closest point

1913
01:30:29,000 --> 01:30:34,520
distance was and what the max closest

1914
01:30:31,789 --> 01:30:38,840
point distance was and then the max

1915
01:30:34,520 --> 01:30:40,490
minus the min because we really want

1916
01:30:38,840 --> 01:30:47,569
those things to be getting closer

1917
01:30:40,489 --> 01:30:50,000
together right okay so this ran and now

1918
01:30:47,569 --> 01:30:53,449
if I do a derp on that see it's there

1919
01:30:50,000 --> 01:30:57,819
and it is right so if I run this right

1920
01:30:53,449 --> 01:31:00,529
here's where we can kind of see those

1921
01:30:57,819 --> 01:31:03,710
those differences right and you can see

1922
01:31:00,529 --> 01:31:06,050
them supposedly converging right this is

1923
01:31:03,710 --> 01:31:07,909
the difference between the biggest

1924
01:31:06,050 --> 01:31:12,380
distance which means unit between any

1925
01:31:07,909 --> 01:31:15,189
two points and the smallest distance

1926
01:31:12,380 --> 01:31:15,190
between any two points

1927
01:31:19,569 --> 01:31:27,639
that's not good sorry it's the biggest

1928
01:31:24,729 --> 01:31:31,779
and smallest distance to the closest

1929
01:31:27,639 --> 01:31:33,429
point right and you want those things to

1930
01:31:31,779 --> 01:31:36,340
get very close together and you know

1931
01:31:33,429 --> 01:31:39,130
they are really close together so I'm

1932
01:31:36,340 --> 01:31:43,840
kind of I don't really understand why

1933
01:31:39,130 --> 01:31:45,819
we're not getting a better result out of

1934
01:31:43,840 --> 01:31:48,010
this but I don't know so another thing

1935
01:31:45,819 --> 01:31:51,299
we could do here let me see about

1936
01:31:48,010 --> 01:31:54,010
actually looking at that as the value so

1937
01:31:51,300 --> 01:31:56,860
if instead of looking at the last min

1938
01:31:54,010 --> 01:32:02,739
right if instead I just look at this

1939
01:31:56,859 --> 01:32:04,479
convergence here right and actually I

1940
01:32:02,738 --> 01:32:06,069
guess I still do want one of these but

1941
01:32:04,479 --> 01:32:12,638
instead of last min closest point

1942
01:32:06,069 --> 01:32:18,880
distance I want to look at last min max

1943
01:32:12,639 --> 01:32:22,000
separation and so I want that value to

1944
01:32:18,880 --> 01:32:27,340
get very small and so in here if I said

1945
01:32:22,000 --> 01:32:29,408
all right let's just do this where we

1946
01:32:27,340 --> 01:32:31,719
compute the min max separation and

1947
01:32:29,408 --> 01:32:33,308
that's just the max closest point

1948
01:32:31,719 --> 01:32:38,349
distance minus the min closest point

1949
01:32:33,309 --> 01:32:40,989
distance right then at each step I want

1950
01:32:38,349 --> 01:32:44,619
the min max separation to have gone down

1951
01:32:40,988 --> 01:32:50,288
right so I want to say whatever the last

1952
01:32:44,618 --> 01:32:55,299
min max separation was minus the you

1953
01:32:50,288 --> 01:32:58,389
know the new one I want to have taken a

1954
01:32:55,300 --> 01:33:01,260
positive improvement step so the last

1955
01:32:58,389 --> 01:33:04,989
one should be higher than the new one

1956
01:33:01,260 --> 01:33:06,940
and so if for some reason it's not if it

1957
01:33:04,988 --> 01:33:08,799
gets like down to the point where it's a

1958
01:33:06,939 --> 01:33:14,339
pretty if it's like too small of an

1959
01:33:08,800 --> 01:33:14,340
improvement then we bail right

1960
01:33:16,310 --> 01:33:19,610
something like this

1961
01:33:32,229 --> 01:33:39,369
and so we're just looking for an

1962
01:33:36,680 --> 01:33:40,610
improvement each time through the loop

1963
01:33:39,369 --> 01:33:45,349
oops

1964
01:33:40,609 --> 01:33:46,549
yeah and it looks like maybe I've got

1965
01:33:45,350 --> 01:33:48,380
that little bit backwards let's just

1966
01:33:46,550 --> 01:33:51,800
take a look here alright so we've got

1967
01:33:48,380 --> 01:33:54,619
our min Max separation is the closest

1968
01:33:51,800 --> 01:34:01,100
point - like the met the farthest away

1969
01:33:54,619 --> 01:34:10,099
closest point versus the right so the

1970
01:34:01,100 --> 01:34:14,240
separation here is going to be tracked

1971
01:34:10,100 --> 01:34:19,460
over time so the next separation it's

1972
01:34:14,239 --> 01:34:25,189
actually got worse which I suppose could

1973
01:34:19,460 --> 01:34:27,399
happen that's why we exit is that really

1974
01:34:25,189 --> 01:34:27,399
right

1975
01:34:31,060 --> 01:34:48,230
that means our min closest point

1976
01:34:33,710 --> 01:34:49,279
distance got more than our max gosh I

1977
01:34:48,229 --> 01:34:50,750
don't really know yeah we're gonna have

1978
01:34:49,279 --> 01:34:52,219
to say this a little bit a little bit

1979
01:34:50,750 --> 01:34:57,489
harder so let's suppose I did a

1980
01:34:52,220 --> 01:34:57,490
different one let's suppose I did this

1981
01:34:58,300 --> 01:35:02,720
so it'll run for a long time and we just

1982
01:35:01,310 --> 01:35:12,410
watch what happens I just want to see

1983
01:35:02,720 --> 01:35:14,180
what happens so here are those numbers

1984
01:35:12,409 --> 01:35:15,559
and you can see that they do seem to be

1985
01:35:14,180 --> 01:35:17,119
kind of converging so I guess it must

1986
01:35:15,560 --> 01:35:19,630
just be the first step is a little too

1987
01:35:17,119 --> 01:35:25,939
large and causes a general displacement

1988
01:35:19,630 --> 01:35:27,409
I don't know why this is why that it's

1989
01:35:25,939 --> 01:35:30,039
not a real number though what did I

1990
01:35:27,409 --> 01:35:30,039
screw up there

1991
01:35:38,939 --> 01:35:43,289
all right so with exception of the first

1992
01:35:42,329 --> 01:35:45,029
time where we print out garbage

1993
01:35:43,289 --> 01:35:48,229
obviously because of that you can see

1994
01:35:45,029 --> 01:35:48,229
the improvement here

1995
01:35:48,920 --> 01:35:57,690
it just gets lower and lower each

1996
01:35:51,390 --> 01:36:00,050
individual time right and then it starts

1997
01:35:57,689 --> 01:36:00,049
going up

1998
01:36:05,069 --> 01:36:07,759
weird

1999
01:36:09,710 --> 01:36:17,210
it's kind of oscillating in that general

2000
01:36:11,630 --> 01:36:22,940
region but you can see that according to

2001
01:36:17,210 --> 01:36:27,250
our metrics we are still like we're

2002
01:36:22,939 --> 01:36:27,250
still supposedly getting better right

2003
01:36:41,289 --> 01:36:53,310
and now we're getting worse like this

2004
01:36:50,380 --> 01:36:53,310
number is now going up

2005
01:36:59,430 --> 01:37:10,090
hmm so I think we're gonna have to do a

2006
01:37:07,630 --> 01:37:12,460
better job here sort of the crappy thing

2007
01:37:10,090 --> 01:37:14,440
that I pooped out is not good enough and

2008
01:37:12,460 --> 01:37:16,840
we're gonna have to figure out like how

2009
01:37:14,439 --> 01:37:23,309
to actually repulse these things in a

2010
01:37:16,840 --> 01:37:25,750
way that that's gonna be more stable

2011
01:37:23,310 --> 01:37:28,030
again I'm not really sure what the

2012
01:37:25,750 --> 01:37:29,560
actual problem is and we're gonna have

2013
01:37:28,029 --> 01:37:31,469
to analyze it and find out what caused

2014
01:37:29,560 --> 01:37:36,100
it otherwise we're just kind of like

2015
01:37:31,470 --> 01:37:37,720
going blind there and if we look at the

2016
01:37:36,100 --> 01:37:39,280
maximum closest point distance and we

2017
01:37:37,720 --> 01:37:41,829
use we you know we're kind of using that

2018
01:37:39,279 --> 01:37:50,340
as a guide to how much we allow things

2019
01:37:41,829 --> 01:37:50,340
to repulse yeah I don't really know I

2020
01:37:53,970 --> 01:38:02,650
don't really know what we want to do

2021
01:37:56,800 --> 01:38:04,900
with with respect to that it I do wonder

2022
01:38:02,649 --> 01:38:06,699
if we want this thing to just only use

2023
01:38:04,899 --> 01:38:09,179
the cosine as the fall-off and we want

2024
01:38:06,699 --> 01:38:12,849
to push them we want to kind of rotate

2025
01:38:09,180 --> 01:38:15,130
things more so you know like make sure

2026
01:38:12,850 --> 01:38:17,020
that their their displacement Direction

2027
01:38:15,130 --> 01:38:19,000
is more based on where they actually are

2028
01:38:17,020 --> 01:38:21,250
and we could do that pretty easily

2029
01:38:19,000 --> 01:38:23,229
because with just a few cross products

2030
01:38:21,250 --> 01:38:28,029
you can see how that was work for

2031
01:38:23,229 --> 01:38:30,669
example you know if I wanted to do a

2032
01:38:28,029 --> 01:38:33,099
tangential push right so I want to push

2033
01:38:30,670 --> 01:38:38,529
this along the tangent it's not that

2034
01:38:33,100 --> 01:38:39,820
hard if I have you know this vector and

2035
01:38:38,529 --> 01:38:41,649
I say I want to push it that direction

2036
01:38:39,819 --> 01:38:43,929
but what I really want to do is push it

2037
01:38:41,649 --> 01:38:46,149
along the sphere in that direction well

2038
01:38:43,930 --> 01:38:47,980
I know this direction because that is

2039
01:38:46,149 --> 01:38:51,159
just this direction it's the actual

2040
01:38:47,979 --> 01:38:53,559
thing I'm pushing and so if I took this

2041
01:38:51,159 --> 01:38:56,319
direction and the the place that you

2042
01:38:53,560 --> 01:38:58,480
know the push that I want and I take the

2043
01:38:56,319 --> 01:39:01,239
cross-product right you can see what

2044
01:38:58,479 --> 01:39:03,159
that's going to do it's going to create

2045
01:39:01,239 --> 01:39:08,559
a vector coming out the side of those

2046
01:39:03,159 --> 01:39:10,989
two right and then if I recross right if

2047
01:39:08,560 --> 01:39:12,550
I then recross I will get the tangent

2048
01:39:10,989 --> 01:39:17,500
that is along that

2049
01:39:12,550 --> 01:39:21,369
line right so if I cross the force line

2050
01:39:17,500 --> 01:39:23,170
if I do force line cross direction right

2051
01:39:21,368 --> 01:39:27,759
this way I get a thing that comes out

2052
01:39:23,170 --> 01:39:30,130
here and then if I do direction cross

2053
01:39:27,760 --> 01:39:41,289
that product I get something that comes

2054
01:39:30,130 --> 01:39:44,340
out here right so what I could do is

2055
01:39:41,289 --> 01:39:44,340
something more like this

2056
01:39:53,099 --> 01:39:59,020
so again just right hand rule crossing

2057
01:39:56,529 --> 01:40:00,759
the force line itself with the direction

2058
01:39:59,020 --> 01:40:02,530
that gives me one thing

2059
01:40:00,760 --> 01:40:08,889
then I cross the direction again with

2060
01:40:02,529 --> 01:40:12,460
the force line that gives me the push

2061
01:40:08,889 --> 01:40:13,059
direction right and then I can proceed

2062
01:40:12,460 --> 01:40:15,578
as normal

2063
01:40:13,059 --> 01:40:17,010
all right I just normalize that thing

2064
01:40:15,578 --> 01:40:20,920
and off we go

2065
01:40:17,010 --> 01:40:23,980
that's not the problem almost certainly

2066
01:40:20,920 --> 01:40:25,059
we've got other issues but point being I

2067
01:40:23,979 --> 01:40:30,638
can do something like that

2068
01:40:25,059 --> 01:40:33,190
and you know who knows right it

2069
01:40:30,639 --> 01:40:37,420
certainly has an effect on the system

2070
01:40:33,189 --> 01:40:39,339
that one thinks it converged right but

2071
01:40:37,420 --> 01:40:40,630
who knows what that means I mean you

2072
01:40:39,340 --> 01:40:42,460
know like I said it looks like we got

2073
01:40:40,630 --> 01:40:45,550
bugs so we'll we'll focus on this next

2074
01:40:42,460 --> 01:40:48,819
weekend and get that worked out but

2075
01:40:45,550 --> 01:40:51,340
using the tangential push let's see if

2076
01:40:48,819 --> 01:40:53,380
we resulted in any kind of a different

2077
01:40:51,340 --> 01:40:54,760
actual result because I don't you know I

2078
01:40:53,380 --> 01:40:57,989
don't know what that looks like since we

2079
01:40:54,760 --> 01:40:57,989
can't see it when it's running there

2080
01:41:03,659 --> 01:41:08,349
so here's our sphere and this is so

2081
01:41:07,840 --> 01:41:15,279
creepy

2082
01:41:08,350 --> 01:41:17,430
like it looks exactly the same I'm kind

2083
01:41:15,279 --> 01:41:19,389
of wondering if there isn't a bug

2084
01:41:17,430 --> 01:41:22,900
separate from this that has nothing to

2085
01:41:19,390 --> 01:41:27,730
do with here what I want to know I want

2086
01:41:22,899 --> 01:41:31,479
to see if I kind of want to see if our

2087
01:41:27,729 --> 01:41:34,269
if our like if the compiler is doing

2088
01:41:31,479 --> 01:41:35,979
some alignment casting issues because we

2089
01:41:34,270 --> 01:41:38,350
had that we had to do some weird stuff

2090
01:41:35,979 --> 01:41:42,069
right with C++ to get this to work at

2091
01:41:38,350 --> 01:41:45,750
all and so I want to see if that if this

2092
01:41:42,069 --> 01:41:45,750
thing is actually causing a problem here

2093
01:41:46,229 --> 01:41:53,500
you know I'm saying to you I don't see

2094
01:41:51,489 --> 01:41:57,250
how it could because everything's still

2095
01:41:53,500 --> 01:41:58,960
on the sphere so I don't think that

2096
01:41:57,250 --> 01:42:02,710
could really be the case but I'm pretty

2097
01:41:58,960 --> 01:42:05,380
weirded out by this because I don't see

2098
01:42:02,710 --> 01:42:07,180
how we're doing so much moving of things

2099
01:42:05,380 --> 01:42:08,770
around and not anything that's not

2100
01:42:07,180 --> 01:42:11,289
getting better and maybe there's an

2101
01:42:08,770 --> 01:42:16,020
obvious reason for why that would be but

2102
01:42:11,289 --> 01:42:16,019
I don't know what it actually is right

2103
01:42:17,399 --> 01:42:23,469
maybe I'm just measuring the wrong thing

2104
01:42:20,050 --> 01:42:25,270
I don't know I'm curious now - can we

2105
01:42:23,470 --> 01:42:28,270
get down to another level of precision

2106
01:42:25,270 --> 01:42:37,630
now that I'm pushing along the other one

2107
01:42:28,270 --> 01:42:39,840
there oh it's not the program I asked

2108
01:42:37,630 --> 01:42:39,840
ran around

2109
01:42:46,300 --> 01:42:53,559
so this one can get pretty low it seems

2110
01:43:11,739 --> 01:43:16,429
so something is up right I mean it just

2111
01:43:14,930 --> 01:43:18,380
doesn't make sense we've just got some

2112
01:43:16,430 --> 01:43:21,619
obvious bugs in here that we can find

2113
01:43:18,380 --> 01:43:25,069
but this is supposed to measure the

2114
01:43:21,619 --> 01:43:27,859
difference between the two points that

2115
01:43:25,069 --> 01:43:30,949
are farthest and the two points that are

2116
01:43:27,859 --> 01:43:33,799
closest I'm not too far to the first in

2117
01:43:30,949 --> 01:43:35,720
tourism but for each point right it's

2118
01:43:33,800 --> 01:43:38,060
saying for every point what's the

2119
01:43:35,720 --> 01:43:39,890
closest point to me and I'm looking for

2120
01:43:38,060 --> 01:43:43,190
the highest and lowest of those values

2121
01:43:39,890 --> 01:43:44,570
and we're it's this is claiming that the

2122
01:43:43,189 --> 01:43:49,449
set of points that the thing is

2123
01:43:44,569 --> 01:43:53,179
outputting has almost no difference so

2124
01:43:49,449 --> 01:43:59,869
every point is equidistant roughly from

2125
01:43:53,180 --> 01:44:03,920
its closest point I mean maybe you got

2126
01:43:59,869 --> 01:44:06,909
to measure more points than that to get

2127
01:44:03,920 --> 01:44:13,399
an actual fair output

2128
01:44:06,909 --> 01:44:15,800
maybe but like it sure seems like we're

2129
01:44:13,399 --> 01:44:17,779
not getting that distribution I mean in

2130
01:44:15,800 --> 01:44:19,880
other words when I go and run so let's

2131
01:44:17,779 --> 01:44:22,519
say I run the program that means I

2132
01:44:19,880 --> 01:44:26,480
shouldn't be able to see any two points

2133
01:44:22,520 --> 01:44:29,300
that are obviously closer together than

2134
01:44:26,479 --> 01:44:32,419
any other two points right

2135
01:44:29,300 --> 01:44:35,840
the closest point to every point should

2136
01:44:32,420 --> 01:44:38,079
be about the same distance away you know

2137
01:44:35,840 --> 01:44:38,079
I mean

2138
01:44:51,350 --> 01:44:54,920
trying to get this and I need a way to

2139
01:44:52,970 --> 01:44:56,720
squiggly Center I need a button for like

2140
01:44:54,920 --> 01:45:02,029
center around the weird sphere thing I

2141
01:44:56,720 --> 01:45:07,039
made it takes too long to get it into

2142
01:45:02,029 --> 01:45:11,449
position so I mean just looking at it

2143
01:45:07,039 --> 01:45:14,149
it's obviously not true right so look at

2144
01:45:11,449 --> 01:45:16,579
this point and you can see the closest

2145
01:45:14,149 --> 01:45:19,339
points are there or there right there's

2146
01:45:16,579 --> 01:45:21,439
nothing closer to it and yet you come up

2147
01:45:19,340 --> 01:45:24,380
here and those two points are like right

2148
01:45:21,439 --> 01:45:26,839
next to each other so it's obvious that

2149
01:45:24,380 --> 01:45:28,760
even our measurement is wrong so the

2150
01:45:26,840 --> 01:45:31,489
question is how is our measurement wrong

2151
01:45:28,760 --> 01:45:33,230
if I look here and I take this direction

2152
01:45:31,489 --> 01:45:35,059
and I'm looking at all of the other

2153
01:45:33,229 --> 01:45:37,069
points in the system

2154
01:45:35,060 --> 01:45:47,840
I think right unless there's just a bug

2155
01:45:37,069 --> 01:45:49,489
in that just full stop when we unless

2156
01:45:47,840 --> 01:45:57,020
I'm not outputting all my points but

2157
01:45:49,489 --> 01:45:58,279
anyway when we look here at these so I

2158
01:45:57,020 --> 01:46:01,100
guess I'm not looking at ones on the

2159
01:45:58,279 --> 01:46:02,329
other side of the hemisphere but that

2160
01:46:01,100 --> 01:46:03,860
shouldn't matter right because your

2161
01:46:02,329 --> 01:46:06,229
closest point isn't going to be on the

2162
01:46:03,859 --> 01:46:08,449
other side of the hemisphere so when we

2163
01:46:06,229 --> 01:46:14,349
look at this we take the subtraction of

2164
01:46:08,449 --> 01:46:20,559
those two right oh that's the problem

2165
01:46:14,350 --> 01:46:20,560
this has to be done right here right so

2166
01:46:22,899 --> 01:46:26,960
the only reason this thing was getting

2167
01:46:25,069 --> 01:46:29,469
better was because we were fussing with

2168
01:46:26,960 --> 01:46:32,359
it in the middle of this probably right

2169
01:46:29,470 --> 01:46:34,159
so the force line length here when we

2170
01:46:32,359 --> 01:46:35,960
actually take it it has to be taken here

2171
01:46:34,159 --> 01:46:37,250
that wasn't the problem before though

2172
01:46:35,960 --> 01:46:38,869
because we were doing we were still

2173
01:46:37,250 --> 01:46:40,189
doing that so I don't know that this

2174
01:46:38,869 --> 01:46:42,489
doesn't really explain the bug this is

2175
01:46:40,189 --> 01:46:45,319
just we introduced a bug sort of in here

2176
01:46:42,489 --> 01:46:48,550
if that makes sense so this force line

2177
01:46:45,319 --> 01:46:55,269
length has to be taken here basically

2178
01:46:48,550 --> 01:46:55,270
and this has to be a NAS right so

2179
01:47:06,310 --> 01:47:12,110
but again doesn't really help us so I

2180
01:47:09,560 --> 01:47:13,190
just don't understand yeah I just don't

2181
01:47:12,109 --> 01:47:16,339
understand what's going on there so that

2182
01:47:13,189 --> 01:47:19,460
fixes that within with respect to sort

2183
01:47:16,340 --> 01:47:21,470
of the the tangent push but I don't

2184
01:47:19,460 --> 01:47:23,359
suspect that will help us us at all

2185
01:47:21,470 --> 01:47:24,800
because we were wrong we were it was

2186
01:47:23,359 --> 01:47:30,170
working correctly the way it used to be

2187
01:47:24,800 --> 01:47:31,310
and now it's it's gonna I don't know if

2188
01:47:30,170 --> 01:47:33,230
it'll be able to converge with the

2189
01:47:31,310 --> 01:47:39,380
forest line push or not but even if it

2190
01:47:33,229 --> 01:47:40,699
if it does or doesn't we we don't have

2191
01:47:39,380 --> 01:47:43,460
any explanation for what we were seeing

2192
01:47:40,699 --> 01:47:45,859
before right

2193
01:47:43,460 --> 01:47:47,569
so looking at this it's having a hard

2194
01:47:45,859 --> 01:47:50,630
time really getting down particularly

2195
01:47:47,569 --> 01:47:56,840
low which kind of suggests to me that

2196
01:47:50,630 --> 01:47:58,819
maybe we've got issues with with how our

2197
01:47:56,840 --> 01:48:00,319
convergence is working like maybe one of

2198
01:47:58,819 --> 01:48:09,369
the constants is bad or something like

2199
01:48:00,319 --> 01:48:09,369
this let's just take a quick look

2200
01:48:21,390 --> 01:48:27,010
so if we take a look down here you know

2201
01:48:24,909 --> 01:48:29,229
maybe this is too large so let's take a

2202
01:48:27,010 --> 01:48:31,530
small let's take small steps see what

2203
01:48:29,229 --> 01:48:31,529
happens

2204
01:48:43,039 --> 01:48:49,609
and so this number continues to climb

2205
01:48:45,920 --> 01:48:51,289
which is sort of what we want so we just

2206
01:48:49,609 --> 01:48:53,449
want this number to always be going up

2207
01:48:51,289 --> 01:48:54,859
and then this number will do whatever

2208
01:48:53,449 --> 01:48:56,869
this number does and eventually

2209
01:48:54,859 --> 01:49:01,000
hopefully this will catch up to it as

2210
01:48:56,869 --> 01:49:01,000
this number stabilizes right

2211
01:49:13,949 --> 01:49:18,069
um and you can see that with a smaller

2212
01:49:16,329 --> 01:49:19,420
step it looks like before we were maybe

2213
01:49:18,069 --> 01:49:20,979
taking two largest steps and we were

2214
01:49:19,420 --> 01:49:23,050
overstepping things because you can see

2215
01:49:20,979 --> 01:49:29,500
this appears to be converging much more

2216
01:49:23,050 --> 01:49:31,300
cleanly right and so you know it's kind

2217
01:49:29,500 --> 01:49:33,100
of you know it's a monotonically

2218
01:49:31,300 --> 01:49:34,750
improving system now by the things

2219
01:49:33,100 --> 01:49:36,910
you're measuring now I'm expecting it to

2220
01:49:34,750 --> 01:49:38,619
still not be any good because I'm

2221
01:49:36,909 --> 01:49:40,029
expecting if we go because like those

2222
01:49:38,619 --> 01:49:41,050
spheres just look completely ridiculous

2223
01:49:40,029 --> 01:49:43,269
when you looked at anything look like

2224
01:49:41,050 --> 01:49:44,500
what we were measuring made any sense so

2225
01:49:43,270 --> 01:49:46,420
I'm not expecting this to actually fix

2226
01:49:44,500 --> 01:49:49,779
the problem but at least now what we're

2227
01:49:46,420 --> 01:49:51,609
looking at in terms of convergence looks

2228
01:49:49,779 --> 01:49:54,369
proper right you can see these two

2229
01:49:51,609 --> 01:49:56,319
things moving towards each other and

2230
01:49:54,369 --> 01:50:00,729
they just constantly move towards each

2231
01:49:56,319 --> 01:50:02,679
other over time right and so now if we

2232
01:50:00,729 --> 01:50:05,019
looked at this value I would expect to

2233
01:50:02,680 --> 01:50:06,730
be able to see this converge after the

2234
01:50:05,020 --> 01:50:08,260
first few iterations where we kind of

2235
01:50:06,729 --> 01:50:08,769
get things more going in the right

2236
01:50:08,260 --> 01:50:10,449
direction

2237
01:50:08,770 --> 01:50:13,030
eventually we should see this number

2238
01:50:10,449 --> 01:50:14,649
start to go down to something too low to

2239
01:50:13,029 --> 01:50:16,689
be worth it

2240
01:50:14,649 --> 01:50:21,399
and that would be kind of the end of the

2241
01:50:16,689 --> 01:50:23,169
convergence right and the question is

2242
01:50:21,399 --> 01:50:25,689
just how low can this get and I don't

2243
01:50:23,170 --> 01:50:27,970
know so let's take a look at what we can

2244
01:50:25,689 --> 01:50:31,059
tune this constant to just to see if

2245
01:50:27,970 --> 01:50:32,890
there's anything more sensible and then

2246
01:50:31,060 --> 01:50:34,720
we maybe have to think about how to

2247
01:50:32,890 --> 01:50:39,700
actually compute that constant in some

2248
01:50:34,720 --> 01:50:41,560
way that isn't ad-hoc right so again

2249
01:50:39,699 --> 01:50:45,069
let's just take a look now we're moving

2250
01:50:41,560 --> 01:50:46,960
at you know we're moving at a tenth of a

2251
01:50:45,069 --> 01:50:50,769
step a tenth well a hundredth I guess

2252
01:50:46,960 --> 01:50:56,670
and now we're moving it at corridor sort

2253
01:50:50,770 --> 01:50:56,670
of a tenth of a tenth so you know 0.025

2254
01:50:56,880 --> 01:51:01,930
and looking at that again still looks

2255
01:50:59,890 --> 01:51:03,970
like it's kind of going properly so the

2256
01:51:01,930 --> 01:51:09,400
the min distance is monotonically

2257
01:51:03,970 --> 01:51:11,670
increasing the the number up here is

2258
01:51:09,399 --> 01:51:14,699
kind of just doing whatever it's doing

2259
01:51:11,670 --> 01:51:17,619
but this number continues to climb and

2260
01:51:14,699 --> 01:51:22,079
this number should in theory stop

2261
01:51:17,619 --> 01:51:22,079
climbing at some point in theory

2262
01:51:28,270 --> 01:51:31,330
because we want things to always be

2263
01:51:29,859 --> 01:51:33,489
getting further apart so we want this

2264
01:51:31,329 --> 01:51:34,930
number to kind of go up and then this

2265
01:51:33,489 --> 01:51:36,960
number should stop going up at some

2266
01:51:34,930 --> 01:51:36,960
point

2267
01:51:59,229 --> 01:52:02,469
so again that all looks kind of good I'm

2268
01:52:01,149 --> 01:52:04,719
gonna keep pushing it and just see if I

2269
01:52:02,470 --> 01:52:07,690
can sort of manually route fine to find

2270
01:52:04,720 --> 01:52:09,490
the amount of repulsion that tends to

2271
01:52:07,689 --> 01:52:11,289
work for the system and then I think we

2272
01:52:09,489 --> 01:52:12,309
really want to maybe do a better job and

2273
01:52:11,289 --> 01:52:15,220
try to figure out how to actually

2274
01:52:12,310 --> 01:52:17,470
compute that number like or figure out

2275
01:52:15,220 --> 01:52:18,640
what it should be for a given system so

2276
01:52:17,470 --> 01:52:21,250
that we don't have to tune a magic

2277
01:52:18,640 --> 01:52:22,329
constant because again we want to be

2278
01:52:21,250 --> 01:52:23,500
able to change the number of sample

2279
01:52:22,329 --> 01:52:24,909
points and still have it work and I

2280
01:52:23,500 --> 01:52:26,199
think if we tune a magic constant it'll

2281
01:52:24,909 --> 01:52:28,000
probably sensitive to the number of

2282
01:52:26,199 --> 01:52:29,409
sample points so we probably want to

2283
01:52:28,000 --> 01:52:30,880
throw out a way to compute that even if

2284
01:52:29,409 --> 01:52:32,139
we have to take maybe we have to take in

2285
01:52:30,880 --> 01:52:33,699
account the number of sample points but

2286
01:52:32,140 --> 01:52:36,000
we still want to be able to do that

2287
01:52:33,699 --> 01:52:36,000
right

2288
01:52:42,519 --> 01:52:46,630
so again it still looks pretty good

2289
01:52:44,618 --> 01:52:49,509
right and you can see it sort of it's

2290
01:52:46,630 --> 01:52:51,219
this number is constantly going down and

2291
01:52:49,510 --> 01:52:58,420
this number is constantly going up which

2292
01:52:51,219 --> 01:53:00,219
is what we want and yeah so like what

2293
01:52:58,420 --> 01:53:01,779
the level of convergence is that we can

2294
01:53:00,219 --> 01:53:04,210
actually expect in this case I'm not

2295
01:53:01,779 --> 01:53:05,590
sure and again that's why I say we kind

2296
01:53:04,210 --> 01:53:06,760
of want to solve these numbers we want

2297
01:53:05,590 --> 01:53:10,059
to go look at these numbers and actually

2298
01:53:06,760 --> 01:53:12,159
do a better job analyzing them so we

2299
01:53:10,059 --> 01:53:13,900
know what to set things to and what to

2300
01:53:12,158 --> 01:53:16,238
look for for our termination criteria

2301
01:53:13,899 --> 01:53:18,939
rather than just I'm intuitively looking

2302
01:53:16,238 --> 01:53:21,939
so now we're we're in a situation where

2303
01:53:18,939 --> 01:53:24,098
we've we've definitely gotten ourselves

2304
01:53:21,939 --> 01:53:26,138
a little bit screwed you can see this

2305
01:53:24,099 --> 01:53:29,679
number was oscillating a little bit so

2306
01:53:26,139 --> 01:53:31,300
it's kind of going up and down which

2307
01:53:29,679 --> 01:53:36,578
means this number doesn't doesn't

2308
01:53:31,300 --> 01:53:40,980
continue to improve right so it's really

2309
01:53:36,578 --> 01:53:40,979
hard to say like yeah what we want to do

2310
01:53:46,929 --> 01:53:50,800
that was my plot this

2311
01:53:59,189 --> 01:54:09,609
so anyway I guess what I would say is

2312
01:54:07,659 --> 01:54:11,229
I'm gonna use point o2 as the cutoff for

2313
01:54:09,609 --> 01:54:14,009
now we're just gonna see what happens if

2314
01:54:11,229 --> 01:54:14,009
you write it out at that

2315
01:54:26,899 --> 01:54:31,670
and that's something to which it seemed

2316
01:54:28,819 --> 01:54:33,259
to converge relatively quickly and I'm

2317
01:54:31,670 --> 01:54:34,819
just gonna have I just want to see you

2318
01:54:33,260 --> 01:54:36,530
like what it writes out at that point

2319
01:54:34,819 --> 01:54:39,679
right and it's not gonna be great but

2320
01:54:36,529 --> 01:54:42,529
I'm just interested to see so what it

2321
01:54:39,680 --> 01:54:52,869
would appear like happens is now when we

2322
01:54:42,529 --> 01:54:54,170
go to run this thing I've compiled it

2323
01:54:52,869 --> 01:55:00,439
oops

2324
01:54:54,170 --> 01:55:02,390
I always fat-finger that you know

2325
01:55:00,439 --> 01:55:03,710
ideally we'd see a nice fear we're not

2326
01:55:02,390 --> 01:55:06,800
gonna we're gonna see the same exact

2327
01:55:03,710 --> 01:55:08,300
sphere we always see and so I guess yeah

2328
01:55:06,800 --> 01:55:10,159
we're gonna have to put some structured

2329
01:55:08,300 --> 01:55:11,690
art in here and figure out what's going

2330
01:55:10,159 --> 01:55:13,699
on because I have no idea but like you

2331
01:55:11,689 --> 01:55:17,449
look at these and it's just like it's

2332
01:55:13,699 --> 01:55:20,779
nothing like what we're actually getting

2333
01:55:17,449 --> 01:55:23,119
I don't think on the readout right so if

2334
01:55:20,779 --> 01:55:25,219
we look at that readout the readout

2335
01:55:23,119 --> 01:55:29,510
would would have had us believe right I

2336
01:55:25,220 --> 01:55:33,710
mean like let's let's recall what that's

2337
01:55:29,510 --> 01:55:35,239
actually printing here so when we were

2338
01:55:33,710 --> 01:55:38,329
looking at that number that's point oh

2339
01:55:35,239 --> 01:55:42,170
two that means that if you took the

2340
01:55:38,329 --> 01:55:45,880
closest point to any given point the two

2341
01:55:42,170 --> 01:55:50,449
furthest ones and the two closest ones

2342
01:55:45,880 --> 01:55:54,949
differ by only 0.02 right where the

2343
01:55:50,449 --> 01:55:58,119
sphere radius is 1 so two hundredths of

2344
01:55:54,949 --> 01:55:59,359
the sphere radius is the difference

2345
01:55:58,119 --> 01:56:03,829
right

2346
01:55:59,359 --> 01:56:06,529
hundreds between the farthest away right

2347
01:56:03,829 --> 01:56:08,420
so if we were to look at like somebody

2348
01:56:06,529 --> 01:56:11,989
who's out in the middle of nowhere here

2349
01:56:08,420 --> 01:56:16,069
let's say this saucy gentleman right

2350
01:56:11,989 --> 01:56:19,250
here this one the closest point to that

2351
01:56:16,069 --> 01:56:21,019
guy is like there and the argument is

2352
01:56:19,250 --> 01:56:24,430
that the difference between that

2353
01:56:21,020 --> 01:56:24,430
distance right

2354
01:56:28,210 --> 01:56:39,130
and say that distance is two hundredths

2355
01:56:35,569 --> 01:56:39,130
of this length

2356
01:56:39,729 --> 01:56:45,469
it's just nonsensical right it doesn't

2357
01:56:42,649 --> 01:56:48,319
work so we know we've got a bug like a

2358
01:56:45,470 --> 01:56:50,900
bug bug not an algorithmic bug an

2359
01:56:48,319 --> 01:56:53,090
algorithmic bug would be like if this

2360
01:56:50,899 --> 01:56:56,449
was was reporting numbers that were

2361
01:56:53,090 --> 01:56:58,369
looked about congruent to that then we

2362
01:56:56,449 --> 01:57:00,529
would expect what we get what we're

2363
01:56:58,369 --> 01:57:01,399
seeing but we're not seeing that what

2364
01:57:00,529 --> 01:57:02,779
we're seeing is things that are

2365
01:57:01,399 --> 01:57:05,119
massively further apart than our

2366
01:57:02,779 --> 01:57:06,679
algorithm thinks they are and that means

2367
01:57:05,119 --> 01:57:08,180
we're just doing something fundamentally

2368
01:57:06,680 --> 01:57:10,820
stupid we just don't know what it is

2369
01:57:08,180 --> 01:57:13,310
right so we're measuring something wrong

2370
01:57:10,819 --> 01:57:15,109
or we're writing out the values wrong

2371
01:57:13,310 --> 01:57:16,880
somehow which doesn't make any sense

2372
01:57:15,109 --> 01:57:19,849
because they wouldn't be on the sphere

2373
01:57:16,880 --> 01:57:23,329
presumably right so something's really

2374
01:57:19,850 --> 01:57:26,810
busted but we don't know what probably

2375
01:57:23,329 --> 01:57:28,550
like this stuff here somehow or

2376
01:57:26,810 --> 01:57:30,500
something like the way that when we're

2377
01:57:28,550 --> 01:57:35,239
taking this closest point distance right

2378
01:57:30,500 --> 01:57:37,939
so you know I don't know somehow this

2379
01:57:35,239 --> 01:57:39,469
thing we're taking the closest point

2380
01:57:37,939 --> 01:57:42,799
distance and then when we remember the

2381
01:57:39,470 --> 01:57:51,050
minimum and the maximum of it somehow

2382
01:57:42,800 --> 01:57:54,140
we're just I don't know I mean that

2383
01:57:51,050 --> 01:57:57,110
looks like that's right so I just don't

2384
01:57:54,140 --> 01:58:02,660
know I don't know how we're managing to

2385
01:57:57,109 --> 01:58:07,639
get such a laughably wrong number when

2386
01:58:02,659 --> 01:58:09,349
it looks pretty correct it's just it's

2387
01:58:07,640 --> 01:58:14,890
almost like we're just not using this

2388
01:58:09,350 --> 01:58:17,060
right like it's not actually somehow

2389
01:58:14,890 --> 01:58:19,700
using the output but since there's only

2390
01:58:17,060 --> 01:58:26,360
one array I'm not sure how that's

2391
01:58:19,699 --> 01:58:30,619
possible right like I'm not sure how it

2392
01:58:26,359 --> 01:58:32,689
could be doing anything else so I don't

2393
01:58:30,619 --> 01:58:33,859
know so we'll go to a Q&amp;A briefly but

2394
01:58:32,689 --> 01:58:35,629
we've got our work cut out for us

2395
01:58:33,859 --> 01:58:37,849
because there's something nasty going on

2396
01:58:35,630 --> 01:58:40,039
in there and maybe over the week those

2397
01:58:37,850 --> 01:58:41,900
of you who want to try your hand

2398
01:58:40,039 --> 01:58:47,619
debugging can try to bugging this

2399
01:58:41,899 --> 01:58:47,619
yourself and see if you could find it

2400
01:58:54,159 --> 01:59:05,139
oh did I type it wrong alright so as

2401
01:59:02,529 --> 01:59:07,469
usual the chat spots my typos before I

2402
01:59:05,140 --> 01:59:07,470
do

2403
01:59:15,750 --> 01:59:19,219
that's a pretty bad typo

2404
01:59:24,328 --> 01:59:31,979
okay good so now you can see this number

2405
01:59:27,479 --> 01:59:33,629
here is oscillating a lot more wildly

2406
01:59:31,979 --> 01:59:35,729
than it was before and we're not getting

2407
01:59:33,630 --> 01:59:41,368
a good monotonic descent at all there

2408
01:59:35,729 --> 01:59:42,868
right so but I gotta be honest even so

2409
01:59:41,368 --> 01:59:44,939
we're still in a little bit of a bad

2410
01:59:42,868 --> 01:59:48,750
predicament cuz that's not that much of

2411
01:59:44,939 --> 01:59:52,519
a displacement to be completely honest

2412
01:59:48,750 --> 01:59:52,520
with you but it's still enough right

2413
01:59:53,599 --> 01:59:59,369
yeah so let me try setting the our

2414
01:59:56,460 --> 02:00:00,719
convergence our Maximus place it down a

2415
01:59:59,368 --> 02:00:04,819
little bit now that we have a better

2416
02:00:00,719 --> 02:00:04,819
measurement here and let's see

2417
02:00:11,159 --> 02:00:18,559
if we can get anything resembling

2418
02:00:14,640 --> 02:00:18,560
convergence on this right

2419
02:00:27,659 --> 02:00:34,050
all right let me go to the QA well that

2420
02:00:30,180 --> 02:00:34,050
saucy gentleman is running

2421
02:00:41,840 --> 02:00:46,619
when we start recharging recession never

2422
02:00:44,279 --> 02:00:49,050
the rule of the show is I may not take

2423
02:00:46,618 --> 02:00:52,769
hints from the chat while the show is

2424
02:00:49,050 --> 02:00:54,690
going so because we want the chat to be

2425
02:00:52,770 --> 02:00:56,699
interactive at the end of the show I

2426
02:00:54,689 --> 02:01:01,710
can't really avoid spoilers right but

2427
02:00:56,698 --> 02:01:03,299
the point is when I actually when I'm

2428
02:01:01,710 --> 02:01:04,829
actually doing the programming on stream

2429
02:01:03,300 --> 02:01:06,239
I'm not supposed to be getting any help

2430
02:01:04,829 --> 02:01:10,889
because we're supposed to see what I do

2431
02:01:06,238 --> 02:01:12,658
right so I don't get it's because that's

2432
02:01:10,889 --> 02:01:14,400
unfair right it's like having a bunch of

2433
02:01:12,658 --> 02:01:15,569
extra programmers finding bugs for me

2434
02:01:14,399 --> 02:01:17,189
and the point of the show is to show

2435
02:01:15,569 --> 02:01:19,469
what happens when a regular programmer

2436
02:01:17,189 --> 02:01:21,269
is working on stuff you know someone

2437
02:01:19,469 --> 02:01:22,500
with a lot of experience but you're

2438
02:01:21,270 --> 02:01:23,429
supposed to see me make mistakes and

2439
02:01:22,500 --> 02:01:24,929
you're not supposed to see me get

2440
02:01:23,429 --> 02:01:29,699
outside help right you're supposed to

2441
02:01:24,929 --> 02:01:33,630
see what I have to do so no never is the

2442
02:01:29,698 --> 02:01:34,769
answer I will never I'll never read the

2443
02:01:33,630 --> 02:01:36,270
chat during the stream because we're

2444
02:01:34,770 --> 02:01:37,560
supposed to get at least two hours of me

2445
02:01:36,270 --> 02:01:40,409
trying to do my best

2446
02:01:37,560 --> 02:01:42,210
without hints because obviously if you

2447
02:01:40,408 --> 02:01:44,789
have more eyes on the problem you get

2448
02:01:42,210 --> 02:01:49,310
better right the more people that are

2449
02:01:44,789 --> 02:01:51,238
looking at it the better you'll do and

2450
02:01:49,310 --> 02:01:54,889
you know especially since some people

2451
02:01:51,238 --> 02:01:57,209
watch this show watch this show are

2452
02:01:54,889 --> 02:01:58,800
themselves very experienced programmers

2453
02:01:57,210 --> 02:02:01,560
so you have a lot of experienced

2454
02:01:58,800 --> 02:02:04,050
programmers watching you can find a lot

2455
02:02:01,560 --> 02:02:05,750
of boats because those people all bring

2456
02:02:04,050 --> 02:02:08,750
all their experience with it too right

2457
02:02:05,750 --> 02:02:08,750
so

2458
02:02:15,750 --> 02:02:20,130
so looking at this convergence right it

2459
02:02:17,850 --> 02:02:23,250
looks a lot better but it looks like

2460
02:02:20,130 --> 02:02:27,029
it's never gonna get to much below like

2461
02:02:23,250 --> 02:02:31,170
an 0.0 0.0 3 5 we can look to see what

2462
02:02:27,029 --> 02:02:32,609
that actually looks like but again I'm

2463
02:02:31,170 --> 02:02:43,829
not expecting this to actually fix the

2464
02:02:32,609 --> 02:02:45,210
problem to be honest so could you use a

2465
02:02:43,829 --> 02:02:46,559
function like gravity and just sum up

2466
02:02:45,210 --> 02:02:47,699
all the forces applied by all the other

2467
02:02:46,560 --> 02:02:49,740
points where the force is proportional

2468
02:02:47,699 --> 02:02:52,529
to the distance squared that's exactly

2469
02:02:49,739 --> 02:02:55,590
what we're doing that's exactly what

2470
02:02:52,529 --> 02:03:00,750
we're doing like literally it's just

2471
02:02:55,590 --> 02:03:02,610
gravity we don't at the moment quite use

2472
02:03:00,750 --> 02:03:04,170
distance squared we use a cosine

2473
02:03:02,609 --> 02:03:09,949
fall-off rather than just and squared

2474
02:03:04,170 --> 02:03:09,949
but they're you know pretty similar so

2475
02:03:21,238 --> 02:03:26,099
I don't know like maybe this thing is

2476
02:03:24,238 --> 02:03:27,779
now too low and should actually set a

2477
02:03:26,100 --> 02:03:29,400
little bit more aggressively just

2478
02:03:27,779 --> 02:03:32,309
looking it looks like it is still kind

2479
02:03:29,399 --> 02:03:46,409
of doing a pretty good job reducing that

2480
02:03:32,310 --> 02:03:50,850
total number but it would remove the if

2481
02:03:46,409 --> 02:03:52,409
statements I mean you're never gonna get

2482
02:03:50,850 --> 02:03:54,930
rid of all the if statements right

2483
02:03:52,409 --> 02:03:56,488
because even gravity if two things are

2484
02:03:54,930 --> 02:04:00,170
directly on top of each other gravity

2485
02:03:56,488 --> 02:04:02,789
doesn't have a solution for that right

2486
02:04:00,170 --> 02:04:05,130
because you don't want to apply the

2487
02:04:02,789 --> 02:04:07,229
distance squared as the force you want

2488
02:04:05,130 --> 02:04:09,390
the inverse of the distance squared and

2489
02:04:07,229 --> 02:04:11,459
so when the distance approach is 0 you

2490
02:04:09,390 --> 02:04:17,610
get a singularity so you still got the

2491
02:04:11,460 --> 02:04:20,069
if if something like a golden spiral

2492
02:04:17,609 --> 02:04:23,909
method two deterministic um yes and no

2493
02:04:20,069 --> 02:04:26,309
we if you forget this particular episode

2494
02:04:23,909 --> 02:04:27,869
because we're doing something specific

2495
02:04:26,310 --> 02:04:29,940
here if you go back to the original

2496
02:04:27,869 --> 02:04:34,109
episodes when I was doing the

2497
02:04:29,939 --> 02:04:36,000
hemispherical sampling you can see us

2498
02:04:34,109 --> 02:04:38,009
talk about various methods and what we

2499
02:04:36,000 --> 02:04:43,350
determined roughly was that you really

2500
02:04:38,010 --> 02:04:46,050
do want blue noise there are other

2501
02:04:43,350 --> 02:04:47,100
sampling patterns as well and people

2502
02:04:46,050 --> 02:04:48,930
have done some sampling patterns that

2503
02:04:47,100 --> 02:04:50,100
are supposedly like brand-new ones

2504
02:04:48,930 --> 02:04:52,020
actually that came out in just a flash

2505
02:04:50,100 --> 02:04:53,850
few months where people are like hey I

2506
02:04:52,020 --> 02:04:58,650
think we found a way to do blue dye

2507
02:04:53,850 --> 02:05:01,410
sampling on hemispheres with a

2508
02:04:58,649 --> 02:05:04,939
structured pattern that's actually about

2509
02:05:01,409 --> 02:05:10,189
as good you can use something like that

2510
02:05:04,939 --> 02:05:10,189
right you can if you want to

2511
02:05:11,988 --> 02:05:17,789
is there a save/load state of the entire

2512
02:05:15,510 --> 02:05:20,789
game for resume purposes like

2513
02:05:17,789 --> 02:05:21,420
serialization not at the moment we don't

2514
02:05:20,789 --> 02:05:25,649
do that

2515
02:05:21,420 --> 02:05:27,060
no we will add something like that for

2516
02:05:25,649 --> 02:05:29,039
the shipping version for sure because

2517
02:05:27,060 --> 02:05:30,780
you'll want to while we probably won't

2518
02:05:29,039 --> 02:05:33,238
allow you to save your game because it's

2519
02:05:30,779 --> 02:05:35,519
sort of a roguelike kind of thing we

2520
02:05:33,238 --> 02:05:36,959
will presumably allow you to quit the

2521
02:05:35,520 --> 02:05:38,850
game in the middle of a run and then

2522
02:05:36,960 --> 02:05:50,908
restart and be in the middle of the run

2523
02:05:38,850 --> 02:05:53,820
again looks like our separations getting

2524
02:05:50,908 --> 02:05:57,839
worse right now even though our minimum

2525
02:05:53,819 --> 02:06:01,309
distance is continuing to climb so we

2526
02:05:57,840 --> 02:06:01,310
may be kind of hitting the threshold

2527
02:06:05,850 --> 02:06:09,450
hard to say look it might end up going

2528
02:06:07,649 --> 02:06:16,819
back down again as long as the second

2529
02:06:09,449 --> 02:06:19,559
number as long as this number here right

2530
02:06:16,819 --> 02:06:24,869
continues to climb we're still getting

2531
02:06:19,560 --> 02:06:26,880
better in a sense but the problem is

2532
02:06:24,869 --> 02:06:28,949
this number is also climbing that's why

2533
02:06:26,880 --> 02:06:29,940
this number was not going down but now

2534
02:06:28,949 --> 02:06:31,889
we've gotten to a point where this

2535
02:06:29,939 --> 02:06:40,619
number is going down again so who knows

2536
02:06:31,890 --> 02:06:42,300
right let's see how do you measure

2537
02:06:40,619 --> 02:06:50,939
stalls that happen on a particular

2538
02:06:42,300 --> 02:06:54,210
memory load oh man I mean I want to say

2539
02:06:50,939 --> 02:06:57,869
you can't really do exactly what you're

2540
02:06:54,210 --> 02:07:00,890
saying meaning there is no real way to

2541
02:06:57,869 --> 02:07:05,430
say tell me the exact number of times

2542
02:07:00,890 --> 02:07:08,130
that I had a cache miss on this

2543
02:07:05,430 --> 02:07:09,840
particular memory stall and the reason

2544
02:07:08,130 --> 02:07:11,850
for that is kind of like a Heisenberg

2545
02:07:09,840 --> 02:07:15,360
thing because you actually could measure

2546
02:07:11,850 --> 02:07:17,579
that but by actually looking at the

2547
02:07:15,359 --> 02:07:20,579
difference between the two performance

2548
02:07:17,579 --> 02:07:24,329
counters right around the load you would

2549
02:07:20,579 --> 02:07:27,720
probably change the actual number right

2550
02:07:24,329 --> 02:07:31,140
so it's pretty hard to do exactly what

2551
02:07:27,720 --> 02:07:32,070
you're talking about but a version of

2552
02:07:31,140 --> 02:07:36,060
what you're talking about

2553
02:07:32,069 --> 02:07:38,519
is not impossible so if you just want to

2554
02:07:36,060 --> 02:07:40,950
know generally speaking between two

2555
02:07:38,520 --> 02:07:43,730
points in your code how many times did

2556
02:07:40,949 --> 02:07:46,250
you stall on memory you can do that

2557
02:07:43,729 --> 02:07:50,549
there called the performance counters

2558
02:07:46,250 --> 02:07:52,109
they're inside all of like like you know

2559
02:07:50,550 --> 02:07:54,449
you look at an Intel chip if you go look

2560
02:07:52,109 --> 02:07:56,849
at the documentation for it it documents

2561
02:07:54,449 --> 02:07:58,139
a bunch of program counters and what

2562
02:07:56,850 --> 02:08:00,660
those programmer counters are is they're

2563
02:07:58,140 --> 02:08:02,490
effectively things that you arm you can

2564
02:08:00,659 --> 02:08:05,069
only have a couple of the Mac of any one

2565
02:08:02,489 --> 02:08:07,019
time I think it's like 4 active at a

2566
02:08:05,069 --> 02:08:09,359
time I want to say or although it may be

2567
02:08:07,020 --> 02:08:11,400
more than that but anyway you can only

2568
02:08:09,359 --> 02:08:13,859
arm a certain number of them at a time

2569
02:08:11,399 --> 02:08:16,109
but basically what you do is you say I

2570
02:08:13,859 --> 02:08:18,179
have four counters I can activate at any

2571
02:08:16,109 --> 02:08:19,319
given time which for do I want and you

2572
02:08:18,180 --> 02:08:23,219
can say

2573
02:08:19,319 --> 02:08:26,609
I want number of l1 cache misses number

2574
02:08:23,219 --> 02:08:30,719
of l2 cache misses number of l3 cache

2575
02:08:26,609 --> 02:08:34,889
misses and number of cycles stalled in

2576
02:08:30,719 --> 02:08:36,510
the scheduler waiting on a cache filler

2577
02:08:34,889 --> 02:08:39,449
or something right there's a whole bunch

2578
02:08:36,510 --> 02:08:42,809
of these right now what you can do is

2579
02:08:39,448 --> 02:08:45,178
you can arm those counters run some

2580
02:08:42,809 --> 02:08:47,010
amount of code hopefully a large amount

2581
02:08:45,179 --> 02:08:50,190
and then look at them at the end and

2582
02:08:47,010 --> 02:08:52,380
then you tweak the code run it again and

2583
02:08:50,189 --> 02:08:54,178
look at the difference so you can do a

2584
02:08:52,380 --> 02:08:57,389
thing that helps you start to eliminate

2585
02:08:54,179 --> 02:09:03,000
memory stalls by arming those those

2586
02:08:57,389 --> 02:09:04,739
things right and when you arm those

2587
02:09:03,000 --> 02:09:06,210
things and look at their differences you

2588
02:09:04,738 --> 02:09:10,259
can start to make improvements to the

2589
02:09:06,210 --> 02:09:16,710
code does that make sense so there are

2590
02:09:10,260 --> 02:09:19,650
things you can do it's just it's not as

2591
02:09:16,710 --> 02:09:22,050
fine grained as you might want but again

2592
02:09:19,649 --> 02:09:25,399
by structuring that or like another way

2593
02:09:22,050 --> 02:09:28,860
to do it would be like vtune for example

2594
02:09:25,399 --> 02:09:31,920
tries to do stochastic methods to do

2595
02:09:28,859 --> 02:09:34,229
some attribution of like oh it's ever

2596
02:09:31,920 --> 02:09:36,538
this was the instruction pointer at the

2597
02:09:34,229 --> 02:09:37,379
time when this kind of thing sold or

2598
02:09:36,538 --> 02:09:40,170
whatever you know what I mean

2599
02:09:37,380 --> 02:09:41,730
so you can't you can do things like what

2600
02:09:40,170 --> 02:09:44,609
you're asking you just can't do it

2601
02:09:41,729 --> 02:09:47,189
exactly because modern CPUs are so

2602
02:09:44,609 --> 02:09:49,738
intricate that if you actually tried to

2603
02:09:47,189 --> 02:09:54,569
measure just the behavior of just that

2604
02:09:49,738 --> 02:09:56,129
one line exactly right you would affect

2605
02:09:54,569 --> 02:09:59,279
the behavior just by the act of

2606
02:09:56,130 --> 02:10:02,118
measuring it that's just the just nature

2607
02:09:59,279 --> 02:10:02,118
of the beast I'm afraid

2608
02:10:05,340 --> 02:10:10,560
I only caught the end of maybe of saying

2609
02:10:09,300 --> 02:10:11,850
wolf the points get further and further

2610
02:10:10,560 --> 02:10:14,340
from the spheres controlling almost the

2611
02:10:11,850 --> 02:10:15,750
end no we normalize every time through

2612
02:10:14,340 --> 02:10:17,550
the loop so you're correct

2613
02:10:15,750 --> 02:10:20,640
that's exactly what would happen the

2614
02:10:17,550 --> 02:10:22,560
sphere would just expand forever but

2615
02:10:20,640 --> 02:10:24,060
what we do is every time we update we

2616
02:10:22,560 --> 02:10:26,310
project back down to the sphere so we

2617
02:10:24,060 --> 02:10:28,770
forced we forced them to stay on the

2618
02:10:26,310 --> 02:10:30,480
sphere as they move each step but you're

2619
02:10:28,770 --> 02:10:32,730
absolutely right if we were doing that

2620
02:10:30,479 --> 02:10:34,619
only at the very end of all the

2621
02:10:32,729 --> 02:10:35,819
iterations that's exactly what happened

2622
02:10:34,619 --> 02:10:38,180
they just get further and further from

2623
02:10:35,819 --> 02:10:38,179
the sphere

2624
02:10:43,699 --> 02:10:50,159
what spatial partitioning method will be

2625
02:10:45,840 --> 02:10:52,739
used on this problem well it's it's a

2626
02:10:50,159 --> 02:10:55,470
bit premature for me to really say

2627
02:10:52,739 --> 02:10:57,510
because we haven't profiled it so we

2628
02:10:55,470 --> 02:10:59,850
don't know what's taking most of the

2629
02:10:57,510 --> 02:11:01,350
time on each individual step so I

2630
02:10:59,850 --> 02:11:03,329
wouldn't really want to recommend

2631
02:11:01,350 --> 02:11:10,350
anything without knowing what's actually

2632
02:11:03,329 --> 02:11:11,909
slow right so you know we would have to

2633
02:11:10,350 --> 02:11:15,420
think about how we would want to cluster

2634
02:11:11,909 --> 02:11:18,359
our points but we could probably just do

2635
02:11:15,420 --> 02:11:21,050
a pretty rough-and-tumble clustering

2636
02:11:18,359 --> 02:11:24,809
based on you know some kind of

2637
02:11:21,050 --> 02:11:26,699
directional buckets you know or

2638
02:11:24,810 --> 02:11:28,080
something but but again I don't want to

2639
02:11:26,699 --> 02:11:29,609
speculate because unless we've actually

2640
02:11:28,079 --> 02:11:34,319
sat down and going what do we need to

2641
02:11:29,609 --> 02:11:36,439
speed up it's pretty hard for us to to

2642
02:11:34,319 --> 02:11:40,429
guess what the correct spatial partition

2643
02:11:36,439 --> 02:11:40,429
would be right

2644
02:11:43,560 --> 02:11:47,380
okay this is kind of out of left field

2645
02:11:45,489 --> 02:11:49,779
for a dedicated server using wind

2646
02:11:47,380 --> 02:11:52,600
sockets how would you send the player

2647
02:11:49,779 --> 02:11:54,460
data is like a json serialization

2648
02:11:52,600 --> 02:11:56,470
possible or should i use other formats

2649
02:11:54,460 --> 02:12:00,960
to send player game state to all clients

2650
02:11:56,470 --> 02:12:03,070
like every x tix so what I would say is

2651
02:12:00,960 --> 02:12:06,630
serializing to something like json

2652
02:12:03,069 --> 02:12:11,049
doesn't make a whole lot of sense for a

2653
02:12:06,630 --> 02:12:13,180
real-time transmission situation the

2654
02:12:11,050 --> 02:12:17,199
reason for that is twofold

2655
02:12:13,180 --> 02:12:18,700
one is that json is way larger than it

2656
02:12:17,199 --> 02:12:21,909
needs to be and so when you're talking

2657
02:12:18,699 --> 02:12:23,439
about something like a server your goal

2658
02:12:21,909 --> 02:12:25,329
is trying to minimize the amount of

2659
02:12:23,439 --> 02:12:27,039
bandwidth that that server is using and

2660
02:12:25,329 --> 02:12:28,329
so you certainly don't want to bloat all

2661
02:12:27,039 --> 02:12:32,050
your data out by turning it into

2662
02:12:28,329 --> 02:12:33,519
structured text first write something

2663
02:12:32,050 --> 02:12:35,860
like JSON may be perfectly reasonable

2664
02:12:33,520 --> 02:12:37,240
for using for debugging or for just

2665
02:12:35,859 --> 02:12:38,979
getting the thing working if you want to

2666
02:12:37,239 --> 02:12:41,199
be able to inspect what the things look

2667
02:12:38,979 --> 02:12:42,819
like maybe you send JSON at first just

2668
02:12:41,199 --> 02:12:43,989
to get it working but you really don't

2669
02:12:42,819 --> 02:12:45,639
want to stick with something like JSON

2670
02:12:43,989 --> 02:12:48,099
because you're massively increasing the

2671
02:12:45,640 --> 02:12:50,170
amount of bandwidth for no real benefit

2672
02:12:48,100 --> 02:12:53,260
right there nobody benefits from having

2673
02:12:50,170 --> 02:12:55,930
it be JSON so once you're going to send

2674
02:12:53,260 --> 02:12:57,340
stuff over the net and you're talking

2675
02:12:55,930 --> 02:12:58,750
about a performance oriented scenario

2676
02:12:57,340 --> 02:12:59,980
such as a game server where you want to

2677
02:12:58,750 --> 02:13:03,420
minimize events because you're paying

2678
02:12:59,979 --> 02:13:05,589
for that bandwidth where somebody is

2679
02:13:03,420 --> 02:13:07,390
what you want to do is figure out how to

2680
02:13:05,590 --> 02:13:09,610
make the data as small as possible so

2681
02:13:07,390 --> 02:13:12,310
that usually boils down to is sending it

2682
02:13:09,609 --> 02:13:14,439
in binary and probably sending it some

2683
02:13:12,310 --> 02:13:16,270
way that is actually Delta compressed

2684
02:13:14,439 --> 02:13:19,119
off of existing data so typically what

2685
02:13:16,270 --> 02:13:21,850
you want to do is you want to look at

2686
02:13:19,119 --> 02:13:24,250
what the last ACK was you received from

2687
02:13:21,850 --> 02:13:26,230
a client and see what they know about

2688
02:13:24,250 --> 02:13:28,359
the world and when you go to send them

2689
02:13:26,229 --> 02:13:30,429
something else you say what's the

2690
02:13:28,359 --> 02:13:32,109
minimum set of changes I would need to

2691
02:13:30,430 --> 02:13:34,360
send to them in order for them to

2692
02:13:32,109 --> 02:13:37,509
understand the new state of the game now

2693
02:13:34,359 --> 02:13:40,479
right but that's usually what you're

2694
02:13:37,510 --> 02:13:42,670
doing so no JSON not a great idea it may

2695
02:13:40,479 --> 02:13:45,039
work for games that are very simple and

2696
02:13:42,670 --> 02:13:46,810
don't have a lot of players don't have a

2697
02:13:45,039 --> 02:13:50,470
lot of entities don't have a lot going

2698
02:13:46,810 --> 02:13:52,600
on right but for real-time 30 or 60

2699
02:13:50,470 --> 02:13:54,610
frames per second games trying to update

2700
02:13:52,600 --> 02:13:55,750
their servers that close to that a lot

2701
02:13:54,609 --> 02:13:57,609
of game servers run

2702
02:13:55,750 --> 02:14:00,970
undersampled because they're crappy and

2703
02:13:57,609 --> 02:14:02,949
poorly written but when you're trying to

2704
02:14:00,970 --> 02:14:04,360
accomplish that you want to minimize the

2705
02:14:02,949 --> 02:14:07,090
amount of text that's flying around and

2706
02:14:04,359 --> 02:14:10,509
you want to keep your packets binary

2707
02:14:07,090 --> 02:14:12,460
clean tight and hopefully difft so that

2708
02:14:10,510 --> 02:14:14,890
you can send the minimum amount of

2709
02:14:12,460 --> 02:14:15,520
information and send it as often as

2710
02:14:14,890 --> 02:14:19,920
possible

2711
02:14:15,520 --> 02:14:19,920
right that's usually what you want

2712
02:14:25,649 --> 02:14:29,349
converging to the situation where the

2713
02:14:27,579 --> 02:14:30,189
closest point Max and min distance are

2714
02:14:29,350 --> 02:14:31,690
similar

2715
02:14:30,189 --> 02:14:33,339
isn't that something like trying to

2716
02:14:31,689 --> 02:14:35,199
produce a regular solid polygon with

2717
02:14:33,340 --> 02:14:38,350
interfaces and then rotate it by

2718
02:14:35,199 --> 02:14:40,630
arbitrary angles it's something like

2719
02:14:38,350 --> 02:14:42,579
that but it's not exactly like that

2720
02:14:40,630 --> 02:14:45,880
because remember we do want this to be

2721
02:14:42,579 --> 02:14:48,189
noisy and so we want there to be some we

2722
02:14:45,880 --> 02:14:51,720
want to be irregular and that would be

2723
02:14:48,189 --> 02:14:55,029
regular right so it's not entirely

2724
02:14:51,720 --> 02:14:57,670
different but it's not really what we

2725
02:14:55,029 --> 02:15:03,670
want it's slightly different because of

2726
02:14:57,670 --> 02:15:05,800
that structure that it has by the way is

2727
02:15:03,670 --> 02:15:08,199
this thing almost converged down to the

2728
02:15:05,800 --> 02:15:11,920
amount we actually are looking for no

2729
02:15:08,199 --> 02:15:17,859
not quite it's like it's it's only

2730
02:15:11,920 --> 02:15:20,140
barely there I'm gonna try this and see

2731
02:15:17,859 --> 02:15:22,179
if we can run one that we can actually

2732
02:15:20,140 --> 02:15:25,119
see what it looks like I'm guessing we

2733
02:15:22,180 --> 02:15:26,710
still got other bugs though maybe we run

2734
02:15:25,119 --> 02:15:28,809
this and it's just great but I'm

2735
02:15:26,710 --> 02:15:31,090
guessing we've got some bugs and so I'm

2736
02:15:28,810 --> 02:15:33,400
gonna try it but I'm guessing that even

2737
02:15:31,090 --> 02:15:36,630
after we do this it's just not gonna be

2738
02:15:33,399 --> 02:15:40,710
sufficient right yeah that's just not

2739
02:15:36,630 --> 02:15:43,859
it's not in it's not in the realm of

2740
02:15:40,710 --> 02:15:43,859
possibility right

2741
02:15:59,599 --> 02:16:06,170
that's it for questions there are

2742
02:16:02,460 --> 02:16:06,170
questions probably

2743
02:16:55,340 --> 02:16:59,370
on a shipping game would you hardcore

2744
02:16:57,779 --> 02:17:01,500
the shooter into the game or have it in

2745
02:16:59,370 --> 02:17:06,120
the asset file that decision would

2746
02:17:01,500 --> 02:17:09,420
probably be made based on a couple

2747
02:17:06,120 --> 02:17:14,479
factors that probably aren't gonna help

2748
02:17:09,420 --> 02:17:18,299
you and I apologize but I would say it

2749
02:17:14,478 --> 02:17:22,199
depends on the engine and the

2750
02:17:18,299 --> 02:17:24,688
development process first of all if

2751
02:17:22,200 --> 02:17:26,040
there's only a few shaders I wouldn't

2752
02:17:24,689 --> 02:17:27,840
bother putting in the asset file because

2753
02:17:26,040 --> 02:17:30,000
it just adds a load dependency that

2754
02:17:27,840 --> 02:17:32,010
doesn't really need to be there if

2755
02:17:30,000 --> 02:17:34,218
there's hundreds of shaders then they

2756
02:17:32,010 --> 02:17:37,050
probably belong in the asset file but

2757
02:17:34,218 --> 02:17:39,839
that depends a lot on the development

2758
02:17:37,049 --> 02:17:41,308
process if I have a way to do like some

2759
02:17:39,840 --> 02:17:42,898
meta programming where I just write my

2760
02:17:41,308 --> 02:17:45,808
shaders in my codebase and it

2761
02:17:42,898 --> 02:17:47,459
automatically like hot loads them during

2762
02:17:45,808 --> 02:17:48,959
development but can bind them directly

2763
02:17:47,459 --> 02:17:49,888
into the code at runtime or something

2764
02:17:48,959 --> 02:17:51,688
bla bla bla

2765
02:17:49,888 --> 02:17:53,009
then I might not want them in the asset

2766
02:17:51,689 --> 02:17:54,898
file right because I generally don't

2767
02:17:53,010 --> 02:17:57,960
want them in the asset file they're not

2768
02:17:54,898 --> 02:18:00,388
assets really their core engine features

2769
02:17:57,959 --> 02:18:03,329
that kind of need to be there so I would

2770
02:18:00,388 --> 02:18:06,239
say it really depends but I would skew

2771
02:18:03,329 --> 02:18:10,409
away from asset file depending on what I

2772
02:18:06,239 --> 02:18:12,929
actually have to work with Jeff products

2773
02:18:10,409 --> 02:18:23,849
that are voxel octree based not at the

2774
02:18:12,929 --> 02:18:25,260
moment not really no let's see another

2775
02:18:23,849 --> 02:18:26,790
possible invitation would be starting

2776
02:18:25,260 --> 02:18:28,710
with a regular polygon distribution then

2777
02:18:26,790 --> 02:18:30,660
apply an initial random displacement for

2778
02:18:28,709 --> 02:18:36,178
us to continue simulating yes that that

2779
02:18:30,659 --> 02:18:38,519
would probably one way to do it so it

2780
02:18:36,179 --> 02:18:42,829
looks like we've finished by the way so

2781
02:18:38,519 --> 02:18:42,829
we should be able to build and run here

2782
02:19:02,000 --> 02:19:10,379
so you can see it's the exact same

2783
02:19:04,409 --> 02:19:12,629
sphere right basically so I'm pretty

2784
02:19:10,379 --> 02:19:14,129
sure we've got some bugs in just the way

2785
02:19:12,629 --> 02:19:16,049
we're like writing and reading this or

2786
02:19:14,129 --> 02:19:18,029
something is happening because there's

2787
02:19:16,049 --> 02:19:20,189
no way we can really be measuring the

2788
02:19:18,030 --> 02:19:21,900
distances the way that we say we are if

2789
02:19:20,190 --> 02:19:23,909
they were actually getting measured

2790
02:19:21,899 --> 02:19:26,819
correctly we would not not be able to

2791
02:19:23,909 --> 02:19:31,879
see a sphere that looks like this so we

2792
02:19:26,819 --> 02:19:36,029
just have some bugs some other bug right

2793
02:19:31,879 --> 02:19:39,989
and we just want to

2794
02:19:36,030 --> 02:19:42,000
oh and no we don't have the buffer open

2795
02:19:39,989 --> 02:19:46,379
the buffer is not open and for at the

2796
02:19:42,000 --> 02:19:48,090
moment by the way so we just have some

2797
02:19:46,379 --> 02:19:51,379
other bugs here I don't know what they

2798
02:19:48,090 --> 02:19:53,549
are but we've got a look at them and

2799
02:19:51,379 --> 02:19:54,750
figure out what's going on there you

2800
02:19:53,549 --> 02:19:58,170
know I don't know whether it has to do

2801
02:19:54,750 --> 02:20:00,478
with how we're drawing them or what's

2802
02:19:58,170 --> 02:20:02,760
going on there right but we're probably

2803
02:20:00,478 --> 02:20:04,379
just straight up like doing something

2804
02:20:02,760 --> 02:20:07,319
stupid like not drawing the stuff that

2805
02:20:04,379 --> 02:20:11,309
we actually saved out or who the heck

2806
02:20:07,319 --> 02:20:12,510
knows right if we look at where we're

2807
02:20:11,309 --> 02:20:15,119
actually drawing them you can see us

2808
02:20:12,510 --> 02:20:17,790
doing it here we go through the sampling

2809
02:20:15,120 --> 02:20:22,110
spheres one by one in theory and then we

2810
02:20:17,790 --> 02:20:24,710
go through the bundles and we load them

2811
02:20:22,110 --> 02:20:24,710
out right

2812
02:20:36,949 --> 02:20:40,870
and you know it looks okay

2813
02:20:55,309 --> 02:21:02,119
you know it all looks well enough so you

2814
02:20:58,590 --> 02:21:06,049
know I don't I don't see any obvious

2815
02:21:02,120 --> 02:21:06,050
bugs in here certainly

2816
02:21:13,680 --> 02:21:18,250
so it's hard to say you know there's a

2817
02:21:16,568 --> 02:21:22,750
lot of places that bugs could be lurking

2818
02:21:18,250 --> 02:21:27,779
in here though because for example when

2819
02:21:22,750 --> 02:21:32,799
we look at this one question here is

2820
02:21:27,779 --> 02:21:34,630
what when we look up at that are we

2821
02:21:32,799 --> 02:21:37,959
actually seeing you know a thousand

2822
02:21:34,629 --> 02:21:40,500
points and so one way we could maybe

2823
02:21:37,959 --> 02:21:44,858
like also to bug this a little bit more

2824
02:21:40,500 --> 02:21:47,439
is by saying well you know if we were to

2825
02:21:44,859 --> 02:21:51,159
change the total number so like in here

2826
02:21:47,439 --> 02:21:53,200
right when we look at HH s-- fear if we

2827
02:21:51,159 --> 02:21:55,750
were to say like what if we just only

2828
02:21:53,200 --> 02:22:01,479
did one then we would expect 18 times

2829
02:21:55,750 --> 02:22:03,370
four points right and so who knows like

2830
02:22:01,478 --> 02:22:05,738
what exactly that I'll give us here but

2831
02:22:03,370 --> 02:22:06,550
like as we sort of push our things

2832
02:22:05,738 --> 02:22:07,869
around you can see them kind of

2833
02:22:06,549 --> 02:22:09,629
oscillating well that's why I say our

2834
02:22:07,870 --> 02:22:14,439
constants need to get tuned a lot better

2835
02:22:09,629 --> 02:22:22,028
because they're you know they're they're

2836
02:22:14,439 --> 02:22:23,380
not convergent in fact they don't even

2837
02:22:22,029 --> 02:22:25,180
make sense I mean you look at what's

2838
02:22:23,379 --> 02:22:26,829
happening here and like supposedly our

2839
02:22:25,180 --> 02:22:33,609
repulsive force is making things get

2840
02:22:26,829 --> 02:22:37,238
closer together right which just doesn't

2841
02:22:33,609 --> 02:22:38,590
make a lot of sense at all so you know

2842
02:22:37,238 --> 02:22:42,068
something about what's going on here is

2843
02:22:38,590 --> 02:22:43,689
just it's just kind of busted but we can

2844
02:22:42,068 --> 02:22:45,068
reduce the number of points and then we

2845
02:22:43,689 --> 02:22:47,710
should be able to get some kind of

2846
02:22:45,068 --> 02:22:49,180
situation that yeah I don't know what

2847
02:22:47,709 --> 02:22:51,398
one question I guess I do have here is

2848
02:22:49,180 --> 02:22:53,500
also like you know does this just end up

2849
02:22:51,398 --> 02:22:55,299
oscillating around some minimum that it

2850
02:22:53,500 --> 02:22:56,680
actually is finding you know and I don't

2851
02:22:55,299 --> 02:22:58,090
know the answer to that question either

2852
02:22:56,680 --> 02:23:01,510
because we're not really looking at it

2853
02:22:58,090 --> 02:23:08,409
too much this should probably draw some

2854
02:23:01,510 --> 02:23:13,270
stuff as well right but that's sort of a

2855
02:23:08,409 --> 02:23:16,510
separate issue so you know you look at

2856
02:23:13,270 --> 02:23:19,840
that and you're like well that doesn't

2857
02:23:16,510 --> 02:23:22,840
look particularly good right and if I

2858
02:23:19,840 --> 02:23:25,920
twist the constant there to make it so

2859
02:23:22,840 --> 02:23:25,920
that that can converge

2860
02:23:26,430 --> 02:23:32,670
think it's literally that bad right

2861
02:23:29,489 --> 02:23:32,670
what's this

2862
02:23:42,940 --> 02:23:48,340
and so if we look at what that displayed

2863
02:23:45,850 --> 02:23:51,550
there we should now just as a sanity

2864
02:23:48,340 --> 02:23:54,510
check if I rebuild I should see only

2865
02:23:51,549 --> 02:23:57,819
those you know 18 times four points on

2866
02:23:54,510 --> 02:24:13,750
the screen and they should be placed

2867
02:23:57,819 --> 02:24:17,770
poorly right so there they are right and

2868
02:24:13,750 --> 02:24:20,229
like so right there I can tell we've got

2869
02:24:17,771 --> 02:24:22,180
a bug right which is good I'm glad I did

2870
02:24:20,229 --> 02:24:24,250
this so if you count the number that are

2871
02:24:22,180 --> 02:24:27,130
there let's do it one two three four

2872
02:24:24,250 --> 02:24:32,909
five six seven eight nine 10 11 12 13 14

2873
02:24:27,129 --> 02:24:37,329
15 16 17 18 but there shouldn't be 18

2874
02:24:32,909 --> 02:24:39,819
should there there should be 18 times 4

2875
02:24:37,329 --> 02:24:44,170
so if you look at how this is running

2876
02:24:39,819 --> 02:24:46,360
right here when it's outputting these

2877
02:24:44,170 --> 02:24:49,090
things either we're outputting the same

2878
02:24:46,360 --> 02:24:53,620
point multiple times so meaning either

2879
02:24:49,090 --> 02:24:55,630
this code is incorrectly writing out the

2880
02:24:53,620 --> 02:24:58,840
same point every time and it doesn't

2881
02:24:55,629 --> 02:25:02,920
look like it is because it looks like

2882
02:24:58,840 --> 02:25:06,819
we're doing you know 1 2 3 right 1 2 3 1

2883
02:25:02,920 --> 02:25:09,190
2 3 right so it looks like it's

2884
02:25:06,819 --> 02:25:11,799
certainly writing out them separate but

2885
02:25:09,190 --> 02:25:14,010
who knows and so the question is like

2886
02:25:11,799 --> 02:25:17,079
what's going on and here is this wrong

2887
02:25:14,010 --> 02:25:18,819
this is doing this comp index thing

2888
02:25:17,079 --> 02:25:20,950
where it calls getcomponent

2889
02:25:18,819 --> 02:25:25,000
on a particular one of these is that

2890
02:25:20,950 --> 02:25:27,271
busted I don't know let's find out so if

2891
02:25:25,000 --> 02:25:30,129
I come in here and look at what happens

2892
02:25:27,271 --> 02:25:34,960
with one of these it sure doesn't look

2893
02:25:30,129 --> 02:25:37,059
wrong to me but you know we know that we

2894
02:25:34,959 --> 02:25:40,839
know this number we know this number is

2895
02:25:37,059 --> 02:25:44,829
18 and so the question is if we're

2896
02:25:40,840 --> 02:25:47,680
drawing four of these why are we only

2897
02:25:44,829 --> 02:25:52,079
what if we're drawing four times for

2898
02:25:47,680 --> 02:25:57,329
every one of 18 then

2899
02:25:52,079 --> 02:26:00,421
you know where's my 72 points why aren't

2900
02:25:57,329 --> 02:26:04,351
they there and so as we go through here

2901
02:26:00,421 --> 02:26:09,630
something is busted about some aspect of

2902
02:26:04,351 --> 02:26:12,650
this and I'm not sure what it is right I

2903
02:26:09,630 --> 02:26:15,659
don't know why we're seeing that

2904
02:26:12,649 --> 02:26:19,859
duplication so one thing we maybe should

2905
02:26:15,659 --> 02:26:23,011
do is just step in here real quick take

2906
02:26:19,860 --> 02:26:27,659
a look at what's happening there so if I

2907
02:26:23,011 --> 02:26:36,989
go to handmade lighting here and we jump

2908
02:26:27,659 --> 02:26:47,130
oops we jump down to this piece of the

2909
02:26:36,989 --> 02:26:49,619
code you know like what's up so here I

2910
02:26:47,130 --> 02:26:54,390
am in this routine I've got sphere index

2911
02:26:49,620 --> 02:26:56,221
I've got point index and so when we look

2912
02:26:54,390 --> 02:26:58,770
at the particular sphere we pulled out

2913
02:26:56,220 --> 02:26:59,819
we've got the sample directions here and

2914
02:26:58,771 --> 02:27:03,841
that's what we're going to be accessing

2915
02:26:59,819 --> 02:27:10,319
if we look at one of these right sample

2916
02:27:03,841 --> 02:27:15,120
directions what we should see there's

2917
02:27:10,319 --> 02:27:17,399
our X Y Z is each of these XY z-- and

2918
02:27:15,120 --> 02:27:20,091
Z's should have four elements and the

2919
02:27:17,399 --> 02:27:24,181
four elements should actually be

2920
02:27:20,091 --> 02:27:25,921
different and they're not so that's

2921
02:27:24,181 --> 02:27:28,200
pretty much all we need to know we're

2922
02:27:25,921 --> 02:27:36,601
duplicating things four times for some

2923
02:27:28,200 --> 02:27:37,980
reason right so that's problem one since

2924
02:27:36,601 --> 02:27:39,751
we're pretty sure siapping in the head

2925
02:27:37,979 --> 02:27:43,949
end what I'm guessing is that we're

2926
02:27:39,751 --> 02:27:47,841
losing those points possibly in the pull

2927
02:27:43,950 --> 02:27:47,841
out stage so here's what I'm wondering

2928
02:27:47,989 --> 02:27:54,319
it may be that the C++ rules don't

2929
02:27:51,421 --> 02:27:57,181
require this to actually step each time

2930
02:27:54,319 --> 02:28:00,119
because like undefined behavior or some

2931
02:27:57,181 --> 02:28:02,810
nonsense like this right so maybe let's

2932
02:28:00,120 --> 02:28:02,811
say we do this

2933
02:28:14,810 --> 02:28:21,329
and I'm saying now C++ can't screw us

2934
02:28:18,989 --> 02:28:25,110
being the incredibly crappy universally

2935
02:28:21,329 --> 02:28:26,970
complete garbage language that it is now

2936
02:28:25,110 --> 02:28:29,341
it has limited ability to ruin

2937
02:28:26,970 --> 02:28:33,959
everything like it always does and so

2938
02:28:29,341 --> 02:28:35,851
the question is like yeah assuming

2939
02:28:33,959 --> 02:28:38,459
there's no bug in here which I don't

2940
02:28:35,851 --> 02:28:42,301
think there is that may have been the

2941
02:28:38,459 --> 02:28:45,329
problem right so let's see if that helps

2942
02:28:42,300 --> 02:28:52,050
at all don't know if it will but we can

2943
02:28:45,329 --> 02:28:53,521
certainly try also I think this doesn't

2944
02:28:52,050 --> 02:28:55,079
actually need to do this if it's just

2945
02:28:53,521 --> 02:28:58,471
picking it out this way like you know

2946
02:28:55,079 --> 02:29:01,220
directions you know this could just move

2947
02:28:58,470 --> 02:29:01,220
to the outside

2948
02:29:07,489 --> 02:29:10,569
in fact

2949
02:29:15,159 --> 02:29:19,751
this should have been times floor as

2950
02:29:17,021 --> 02:29:21,190
well though so that looks like a

2951
02:29:19,751 --> 02:29:23,229
different problem to right

2952
02:29:21,190 --> 02:29:26,051
so I think let's let's fix both of these

2953
02:29:23,229 --> 02:29:26,831
I think we just had bugs in the in the

2954
02:29:26,050 --> 02:29:28,779
readout right

2955
02:29:26,831 --> 02:29:31,690
we start with directions each time

2956
02:29:28,780 --> 02:29:32,021
through we pull out four of them and off

2957
02:29:31,690 --> 02:29:35,620
we go

2958
02:29:32,021 --> 02:29:44,051
that may have been it honestly scary as

2959
02:29:35,620 --> 02:29:57,011
that sounds no want to actually rerun

2960
02:29:44,050 --> 02:29:58,960
this fear generator here no so I'm just

2961
02:29:57,011 --> 02:30:03,581
gonna rebuild with that you know newly

2962
02:29:58,960 --> 02:30:06,040
built sphere set there and then I want

2963
02:30:03,581 --> 02:30:08,950
to hopefully stop the same breakpoint

2964
02:30:06,040 --> 02:30:10,930
and just verify that we actually wrote

2965
02:30:08,950 --> 02:30:13,301
out different values this time so here's

2966
02:30:10,931 --> 02:30:15,551
a sample direction looking at the X the

2967
02:30:13,300 --> 02:30:17,409
Y and the Z and all of these should now

2968
02:30:15,550 --> 02:30:19,720
have separate values in here and hey now

2969
02:30:17,409 --> 02:30:21,970
they do right so now I show you this

2970
02:30:19,720 --> 02:30:24,040
noticing 18 points I should see my 72

2971
02:30:21,970 --> 02:30:26,050
points and that may have been the

2972
02:30:24,040 --> 02:30:28,630
entirety of the book like that could

2973
02:30:26,050 --> 02:30:31,029
have been it right so now if we look at

2974
02:30:28,630 --> 02:30:35,520
these hey hey that's a pretty regular

2975
02:30:31,030 --> 02:30:35,521
looking sphere isn't it right

2976
02:30:39,340 --> 02:30:45,469
so now let's crank it back up to what we

2977
02:30:41,809 --> 02:30:46,879
were doing before and again we still

2978
02:30:45,469 --> 02:30:48,738
need to solve this directional problem I

2979
02:30:46,879 --> 02:30:52,068
don't want to be sitting around doing

2980
02:30:48,738 --> 02:30:53,648
this garbage right so this is a big

2981
02:30:52,068 --> 02:30:57,760
to-do here

2982
02:30:53,648 --> 02:31:02,180
determine what the real convergence

2983
02:30:57,760 --> 02:31:04,939
criteria is and that's gonna take some

2984
02:31:02,180 --> 02:31:07,460
math thing on our part so we're gonna

2985
02:31:04,939 --> 02:31:09,648
have to do that because we don't want to

2986
02:31:07,459 --> 02:31:12,559
have to this that value I don't want to

2987
02:31:09,648 --> 02:31:14,599
have to set as a magic constant we

2988
02:31:12,559 --> 02:31:15,619
certainly could but I'd rather since we

2989
02:31:14,600 --> 02:31:18,170
haven't really done anything like this

2990
02:31:15,620 --> 02:31:20,870
on handmade Hiro before I'd rather show

2991
02:31:18,170 --> 02:31:23,000
how you go through working on that part

2992
02:31:20,870 --> 02:31:25,760
of the process at some point but if I

2993
02:31:23,000 --> 02:31:28,850
change it back to 16 spirits now and run

2994
02:31:25,760 --> 02:31:30,889
it again here's us like doing that

2995
02:31:28,850 --> 02:31:33,800
convergence and let's see if our

2996
02:31:30,889 --> 02:31:35,478
algorithm actually is pretty good and it

2997
02:31:33,799 --> 02:31:40,849
was just our read and write that was

2998
02:31:35,478 --> 02:31:49,519
scrappy I'm assuming we don't have any

2999
02:31:40,850 --> 02:31:51,620
more questions no see post-post wasn't

3000
02:31:49,520 --> 02:31:54,140
write C++ it just screws us all the time

3001
02:31:51,620 --> 02:31:56,420
it's just a bad language it creates all

3002
02:31:54,139 --> 02:32:02,689
kinds of bad bugs that really she's had

3003
02:31:56,420 --> 02:32:05,478
no reason to be there right it's it's

3004
02:32:02,689 --> 02:32:08,809
like yeah C++ is like the ultimate bad

3005
02:32:05,478 --> 02:32:10,698
language it's extremely error-prone it

3006
02:32:08,809 --> 02:32:12,648
has lots of really stupid things you can

3007
02:32:10,699 --> 02:32:14,840
do that allow the compiler to generate

3008
02:32:12,648 --> 02:32:16,728
garbage and things that are not

3009
02:32:14,840 --> 02:32:19,670
intuitive based on what you've written

3010
02:32:16,728 --> 02:32:21,829
but at the same time not offering almost

3011
02:32:19,670 --> 02:32:27,260
any features right it has almost no

3012
02:32:21,829 --> 02:32:29,359
features that they're all really

3013
02:32:27,260 --> 02:32:31,398
terrible and very underpowered compared

3014
02:32:29,359 --> 02:32:33,859
to the versions that exist in other

3015
02:32:31,398 --> 02:32:35,358
languages that did them better right so

3016
02:32:33,859 --> 02:32:41,829
it's kind of like CLS is like the

3017
02:32:35,359 --> 02:32:41,829
ultimate in crap

3018
02:32:44,439 --> 02:32:49,039
but to be fair one of the bugs was ours

3019
02:32:46,760 --> 02:32:51,050
it was the the fact that we didn't

3020
02:32:49,039 --> 02:32:52,640
stride by the right amount so we had two

3021
02:32:51,049 --> 02:32:53,059
bugs actually one was ours and one was

3022
02:32:52,639 --> 02:32:55,988
seized

3023
02:32:53,059 --> 02:32:55,988
Miles's

3024
02:33:08,719 --> 02:33:13,029
maybe you can convince John to make

3025
02:33:10,670 --> 02:33:16,549
arguments evaluate left to right in ji I

3026
02:33:13,030 --> 02:33:18,141
don't care what order they evaluate in I

3027
02:33:16,549 --> 02:33:21,250
just want them to not do something

3028
02:33:18,140 --> 02:33:24,500
stupid like if you have 4 plus pluses

3029
02:33:21,250 --> 02:33:26,090
that shouldn't all just be able to be

3030
02:33:24,500 --> 02:33:27,560
represented by one plus plus which is

3031
02:33:26,090 --> 02:33:32,030
what was happening there as far as I

3032
02:33:27,560 --> 02:33:34,159
could tell right like the number of

3033
02:33:32,030 --> 02:33:38,180
times I increment something should it

3034
02:33:34,159 --> 02:33:39,920
should happen in an order right and I'm

3035
02:33:38,180 --> 02:33:45,159
pretty sure in C++ the plus less

3036
02:33:39,920 --> 02:33:55,540
operator doesn't have to do that right I

3037
02:33:45,159 --> 02:33:55,539
want to say don't quote me on that but

3038
02:33:56,379 --> 02:33:59,979
that's what I want to say

3039
02:34:25,629 --> 02:34:30,408
so this converges to a pretty tight

3040
02:34:28,488 --> 02:34:32,059
tolerance here so when we go look at

3041
02:34:30,408 --> 02:34:35,049
this fear I'm expecting it should look

3042
02:34:32,059 --> 02:34:35,049
very nicely covered

3043
02:34:48,960 --> 02:34:53,609
will I be in the dry clothes Veda I

3044
02:34:51,271 --> 02:34:55,860
don't know you should ask John but if he

3045
02:34:53,610 --> 02:34:58,471
wants we can definitely play around with

3046
02:34:55,860 --> 02:35:02,041
it on handmade here a bunch like we

3047
02:34:58,470 --> 02:35:04,109
could do a few streams where I try to

3048
02:35:02,040 --> 02:35:06,750
learn it right and then people can watch

3049
02:35:04,110 --> 02:35:08,341
and learn it along with me and we can

3050
02:35:06,751 --> 02:35:09,871
write down like any feedback we have or

3051
02:35:08,341 --> 02:35:18,360
whatever I've totally be up for that

3052
02:35:09,870 --> 02:35:20,550
if it helps I mean we could take some of

3053
02:35:18,360 --> 02:35:21,721
our utilities like our PNG processor our

3054
02:35:20,550 --> 02:35:24,359
font renderer whatever and just

3055
02:35:21,720 --> 02:35:32,640
reimplemented in ji and just see how you

3056
02:35:24,360 --> 02:35:34,681
know how it goes all right so let's see

3057
02:35:32,640 --> 02:35:38,091
how our sphere is now I'm recompiling

3058
02:35:34,681 --> 02:35:38,091
with the new sphere I NL

3059
02:35:48,909 --> 02:35:56,119
beautiful so our algorithm was pretty

3060
02:35:53,540 --> 02:36:02,630
good as it turns out look at that

3061
02:35:56,120 --> 02:36:06,590
good how lovely look at that we did a

3062
02:36:02,629 --> 02:36:09,500
great job actually well that's not true

3063
02:36:06,590 --> 02:36:10,760
our convergence is crappy and our

3064
02:36:09,500 --> 02:36:13,850
constant is fixed so we didn't do a

3065
02:36:10,760 --> 02:36:16,069
great job we did a decent job we just

3066
02:36:13,850 --> 02:36:17,899
had a bug in terms of how we were

3067
02:36:16,069 --> 02:36:24,500
writing them out look at that

3068
02:36:17,899 --> 02:36:26,779
that's lovely right quite nice and so

3069
02:36:24,500 --> 02:36:29,840
our next goal is just to slice this and

3070
02:36:26,780 --> 02:36:33,370
that won't be too hard is just to slice

3071
02:36:29,840 --> 02:36:37,510
this into pieces so that we can have

3072
02:36:33,370 --> 02:36:42,170
1/16 of the spear sampled on each time

3073
02:36:37,510 --> 02:36:44,239
and then we can just roll that in as our

3074
02:36:42,170 --> 02:36:45,771
sampling sphere and we're good to go so

3075
02:36:44,239 --> 02:36:47,360
we're pretty close we just had to come

3076
02:36:45,771 --> 02:36:51,320
up with a good algorithm for slicing it

3077
02:36:47,360 --> 02:36:52,880
right and again that could be just a

3078
02:36:51,319 --> 02:36:54,649
pretty simple N squared algorithm it

3079
02:36:52,879 --> 02:36:56,869
takes like farthest points or something

3080
02:36:54,649 --> 02:36:58,930
I'm not sure if that would work well but

3081
02:36:56,870 --> 02:37:01,280
that's that's roughly what we want to do

3082
02:36:58,930 --> 02:37:03,710
so I'll be back here next weekend and

3083
02:37:01,280 --> 02:37:05,480
we'll do that until then let's just

3084
02:37:03,709 --> 02:37:07,069
appreciate how lovely our sphere looks

3085
02:37:05,479 --> 02:37:10,029
right now because it really does look

3086
02:37:07,069 --> 02:37:10,029
pretty darn lovely

3087
02:37:22,149 --> 02:37:28,149
like no part of its really that regular

3088
02:37:24,851 --> 02:37:30,010
right but it all is still pretty

3089
02:37:28,149 --> 02:37:32,350
uniformly covered like everything is

3090
02:37:30,010 --> 02:37:34,601
just a little jittered but it still kind

3091
02:37:32,351 --> 02:37:39,521
of always has a nice density pretty much

3092
02:37:34,601 --> 02:37:48,601
everywhere so seems pretty good but I

3093
02:37:39,521 --> 02:37:48,601
don't know who knows or

3094
02:37:52,319 --> 02:37:56,860
as you decrease the magic number does

3095
02:37:54,880 --> 02:38:00,899
this method converge towards a uniform

3096
02:37:56,860 --> 02:38:09,190
distribution hmm

3097
02:38:00,899 --> 02:38:11,190
probably it would probably if you set

3098
02:38:09,190 --> 02:38:15,041
the number too low and force it you

3099
02:38:11,190 --> 02:38:16,871
probably would eventually get some kind

3100
02:38:15,040 --> 02:38:20,310
of a regular pattern because if you

3101
02:38:16,870 --> 02:38:23,529
don't leave any slop it can't be

3102
02:38:20,310 --> 02:38:27,851
completely random so we don't want it to

3103
02:38:23,530 --> 02:38:39,641
converge to like too too tight of a

3104
02:38:27,851 --> 02:38:43,661
tolerance right so all right I'm gonna

3105
02:38:39,640 --> 02:38:48,100
wrap it up pretty happy with that sphere

3106
02:38:43,661 --> 02:38:49,360
though thank you everyone for joining me

3107
02:38:48,101 --> 02:38:51,011
for the episode of handmade hero and a

3108
02:38:49,360 --> 02:38:52,451
pleasure coding with you as always if

3109
02:38:51,011 --> 02:38:54,011
you would like to follow along series at

3110
02:38:52,450 --> 02:38:55,120
home you can always pier to the game at

3111
02:38:54,011 --> 02:38:57,069
hand made here at uh org

3112
02:38:55,120 --> 02:38:59,890
it comes with source code so hey you can

3113
02:38:57,069 --> 02:39:02,620
try your own sphere point generator and

3114
02:38:59,890 --> 02:39:04,091
see how you do I'll be back here next

3115
02:39:02,620 --> 02:39:05,800
week when we'll work on tuning those

3116
02:39:04,091 --> 02:39:07,631
constants and figuring out exactly how

3117
02:39:05,800 --> 02:39:09,279
we want to do the repulsion stuff just

3118
02:39:07,630 --> 02:39:10,989
to tune that a little bit more and then

3119
02:39:09,280 --> 02:39:14,411
we'll do the slicing and then I think

3120
02:39:10,989 --> 02:39:16,120
we're good to go for actually using

3121
02:39:14,411 --> 02:39:19,001
these spheres as our sampling spheres

3122
02:39:16,120 --> 02:39:21,580
which is great and that's another piece

3123
02:39:19,001 --> 02:39:23,649
of our lighting puzzle solved that's it

3124
02:39:21,581 --> 02:39:24,550
for today I hope to see you back here

3125
02:39:23,649 --> 02:39:25,870
next week until then have fun

3126
02:39:24,550 --> 02:39:26,290
programming and I'll see everyone on the

3127
02:39:25,870 --> 02:39:29,370
Internet

3128
02:39:26,290 --> 02:39:29,370
they can use everybody

3129
02:39:32,289 --> 02:39:34,349
you

