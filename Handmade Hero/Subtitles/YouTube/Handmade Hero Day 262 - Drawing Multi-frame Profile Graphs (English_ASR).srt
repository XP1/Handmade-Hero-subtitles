1
00:00:00,000 --> 00:00:04,859
thing start recording hello everyone and

2
00:00:03,509 --> 00:00:06,869
welcome to handmade here on the show we

3
00:00:04,859 --> 00:00:09,089
could complete game live on stream we

4
00:00:06,870 --> 00:00:12,620
are in the middle of doing our profiler

5
00:00:09,089 --> 00:00:14,669
which is pretty baller at this point

6
00:00:12,619 --> 00:00:16,378
we're just kind of like cleaning up some

7
00:00:14,669 --> 00:00:18,778
interface stuff but it's pretty neat all

8
00:00:16,379 --> 00:00:21,600
the stuff I can do and I don't know I'm

9
00:00:18,778 --> 00:00:23,969
pretty excited about it I feel like I'll

10
00:00:21,600 --> 00:00:26,460
probably start using this profiler at

11
00:00:23,969 --> 00:00:28,439
work at some point because it's like

12
00:00:26,460 --> 00:00:31,740
pretty cool and I don't really have a

13
00:00:28,439 --> 00:00:34,020
good one hmmm in our current code base

14
00:00:31,739 --> 00:00:35,699
that's that's it all interesting so

15
00:00:34,020 --> 00:00:37,109
since this one works with

16
00:00:35,700 --> 00:00:41,250
multi-threading and it works with hot

17
00:00:37,109 --> 00:00:43,530
code reloading and it works with you

18
00:00:41,250 --> 00:00:44,820
know stored data over many frames it

19
00:00:43,530 --> 00:00:47,489
just seems like it's kind of like does

20
00:00:44,820 --> 00:00:49,530
everything and I feel like it's probably

21
00:00:47,488 --> 00:00:51,869
something that I should use everywhere

22
00:00:49,530 --> 00:00:54,510
because it's pretty awesome anyway

23
00:00:51,869 --> 00:00:55,890
today is day 262 so if you want to

24
00:00:54,509 --> 00:00:57,839
follow along at home and you're one of

25
00:00:55,890 --> 00:01:00,420
the folks who has pre-order the game on

26
00:00:57,840 --> 00:01:03,329
him a hero org you want to unpack day

27
00:01:00,420 --> 00:01:05,820
261 source code that's what I'm starting

28
00:01:03,329 --> 00:01:07,680
with today I think today basically what

29
00:01:05,819 --> 00:01:09,329
we're doing is just interface II kinds

30
00:01:07,680 --> 00:01:10,590
of stuff basically getting our profiler

31
00:01:09,329 --> 00:01:13,200
to show more of the data that it

32
00:01:10,590 --> 00:01:16,140
actually has because it's got a ton and

33
00:01:13,200 --> 00:01:19,129
we just need to now like add interface

34
00:01:16,140 --> 00:01:21,450
to allow us to easily access that data

35
00:01:19,129 --> 00:01:23,879
in ways that are convenient when we're

36
00:01:21,450 --> 00:01:26,070
developing so right now when we open it

37
00:01:23,879 --> 00:01:28,920
up you can see that I left it in a frame

38
00:01:26,069 --> 00:01:31,228
stack display kind of a thing that's not

39
00:01:28,920 --> 00:01:32,909
that really that useful at the moment so

40
00:01:31,228 --> 00:01:35,250
we're gonna go in and start working with

41
00:01:32,909 --> 00:01:38,250
this today to kind of make I'm gonna

42
00:01:35,250 --> 00:01:39,930
make the the frame graph stuff and I

43
00:01:38,250 --> 00:01:41,700
what I might do I was trying to think if

44
00:01:39,930 --> 00:01:42,868
there was maybe a way to do this I was

45
00:01:41,700 --> 00:01:47,299
also thinking that it might be

46
00:01:42,868 --> 00:01:51,149
interesting to make it so that the the

47
00:01:47,299 --> 00:01:54,060
the elements themselves are proper

48
00:01:51,149 --> 00:01:55,349
properly linked at the top level so that

49
00:01:54,060 --> 00:01:58,109
you don't really need to iterate over

50
00:01:55,349 --> 00:02:00,539
frames as much you can always hit well

51
00:01:58,109 --> 00:02:02,489
I'll show you when we get in there but

52
00:02:00,540 --> 00:02:04,350
point being what I wanted to do we have

53
00:02:02,489 --> 00:02:05,609
like a frame bar kind of thing going oh

54
00:02:04,349 --> 00:02:07,500
I want to do is make it so that we can

55
00:02:05,609 --> 00:02:10,500
see frame bars occurring over time

56
00:02:07,500 --> 00:02:11,939
essentially and so we did some work

57
00:02:10,500 --> 00:02:13,449
yesterday to change the way that we were

58
00:02:11,939 --> 00:02:15,430
sort of storing things to make that

59
00:02:13,449 --> 00:02:17,229
really convenient to do and also to

60
00:02:15,430 --> 00:02:19,180
allow scrubbing and stuff like that a

61
00:02:17,229 --> 00:02:20,859
little bit easier so what I want to do

62
00:02:19,180 --> 00:02:22,959
now is just go ahead and kind of like

63
00:02:20,860 --> 00:02:25,120
explore that so that's really all we're

64
00:02:22,959 --> 00:02:28,390
doing today is getting that stuff going

65
00:02:25,120 --> 00:02:31,090
someone launch for coder here and and

66
00:02:28,389 --> 00:02:32,348
get down to business by the way I am now

67
00:02:31,090 --> 00:02:34,539
using for coder for all my editing

68
00:02:32,348 --> 00:02:36,579
always I now no longer use Emacs

69
00:02:34,539 --> 00:02:42,030
anywhere so I'm a hundred percent for

70
00:02:36,580 --> 00:02:46,090
coder at the moment excellent work Allen

71
00:02:42,030 --> 00:02:49,509
this editor is fantastic and I have had

72
00:02:46,090 --> 00:02:50,860
it crash on me a total of two times for

73
00:02:49,509 --> 00:02:53,048
the entirety of the time that I have

74
00:02:50,860 --> 00:02:55,420
used it and neither of those times were

75
00:02:53,049 --> 00:02:57,790
in work losing scenarios so I have

76
00:02:55,419 --> 00:02:59,289
literally never lost any work with four

77
00:02:57,789 --> 00:03:02,859
code or even though it's like alpha

78
00:02:59,289 --> 00:03:06,489
something something something and barely

79
00:03:02,860 --> 00:03:08,170
even a released version of the thing it

80
00:03:06,489 --> 00:03:10,180
still been like incredibly solid

81
00:03:08,169 --> 00:03:13,359
basically the only crash problems I've

82
00:03:10,180 --> 00:03:15,129
had is shelling out to build like

83
00:03:13,360 --> 00:03:17,140
shelling out to when I go to like do

84
00:03:15,129 --> 00:03:19,120
compiles for some reason once in a blue

85
00:03:17,139 --> 00:03:20,738
moon that will crash probably due to

86
00:03:19,120 --> 00:03:23,019
something fantastic happening with

87
00:03:20,739 --> 00:03:25,420
Windows launching the executable for the

88
00:03:23,019 --> 00:03:27,549
build or something but anyway point

89
00:03:25,419 --> 00:03:30,879
being so I've been loving for a coder

90
00:03:27,549 --> 00:03:32,349
and if you're not on the for coder

91
00:03:30,879 --> 00:03:33,699
bandwagon yet not really sure what to

92
00:03:32,349 --> 00:03:35,858
say

93
00:03:33,699 --> 00:03:39,449
I guess you're just using a lousy editor

94
00:03:35,859 --> 00:03:43,090
sorry anyway let me go ahead and load up

95
00:03:39,449 --> 00:03:45,189
the debug system here and let's take a

96
00:03:43,090 --> 00:03:47,049
look at those frame bars because I had

97
00:03:45,189 --> 00:03:49,329
this sort of draw frame bar situation

98
00:03:47,049 --> 00:03:51,099
and what I want to do is make this draw

99
00:03:49,329 --> 00:03:53,920
frames of our thing work more like what

100
00:03:51,099 --> 00:03:56,500
I wanted because it wasn't really doing

101
00:03:53,919 --> 00:03:58,419
anything that I wanted I just sort of

102
00:03:56,500 --> 00:04:00,459
started it and it was it was not really

103
00:03:58,419 --> 00:04:02,888
done because we decided to reorganize a

104
00:04:00,459 --> 00:04:04,389
day a little bit so what happens in here

105
00:04:02,889 --> 00:04:06,010
when I grab one of these elements and I

106
00:04:04,389 --> 00:04:07,450
come through here and I say draw frame

107
00:04:06,009 --> 00:04:10,989
bars I'm gonna pass down one of these

108
00:04:07,449 --> 00:04:13,929
stored things and that's not really what

109
00:04:10,989 --> 00:04:16,149
I actually want to pass down for drawing

110
00:04:13,930 --> 00:04:19,000
frame bars now the thing that saying

111
00:04:16,149 --> 00:04:21,908
about wanting to harmonize this a little

112
00:04:19,000 --> 00:04:24,610
bit is what you can actually see here

113
00:04:21,908 --> 00:04:26,050
from from what from what we've gotten

114
00:04:24,610 --> 00:04:26,620
the code you can kind of see that

115
00:04:26,050 --> 00:04:29,319
there's like

116
00:04:26,620 --> 00:04:31,860
different paths that have to happen when

117
00:04:29,319 --> 00:04:34,029
reviewing an element that we've

118
00:04:31,860 --> 00:04:35,319
specifically picked because remember you

119
00:04:34,029 --> 00:04:36,369
can click on an element the profile and

120
00:04:35,319 --> 00:04:38,290
we can say like okay the probe is not

121
00:04:36,370 --> 00:04:40,870
going to view this element right and

122
00:04:38,290 --> 00:04:42,550
that's this thing right here where it

123
00:04:40,870 --> 00:04:43,600
gets the grid it like uses the grid to

124
00:04:42,550 --> 00:04:46,139
get a particular element that's going to

125
00:04:43,600 --> 00:04:49,660
view and the problem with that is that

126
00:04:46,139 --> 00:04:52,180
if that's zero then we won't get back a

127
00:04:49,660 --> 00:04:54,310
viewing element right and then we're

128
00:04:52,180 --> 00:04:57,280
going to get a different kind of thing

129
00:04:54,310 --> 00:05:00,519
back we're gonna get a root node back

130
00:04:57,279 --> 00:05:02,259
that came from the frame and if a root

131
00:05:00,519 --> 00:05:06,659
node comes from the frame then it only

132
00:05:02,259 --> 00:05:10,569
has just that frame as the data I think

133
00:05:06,660 --> 00:05:12,430
right meaning it doesn't have what we

134
00:05:10,569 --> 00:05:15,038
want to do I think is past an actual

135
00:05:12,430 --> 00:05:17,769
element down to the rendering code so

136
00:05:15,038 --> 00:05:21,038
that it can go through the frames that

137
00:05:17,769 --> 00:05:22,599
are in there and I just I'm not sure I

138
00:05:21,038 --> 00:05:24,279
don't like the way there's this

139
00:05:22,600 --> 00:05:26,740
dichotomy because now these functions

140
00:05:24,279 --> 00:05:29,589
have to be like aware of whether they're

141
00:05:26,740 --> 00:05:31,689
getting a frame based thing or not and

142
00:05:29,589 --> 00:05:33,519
it's just like I don't like that right

143
00:05:31,689 --> 00:05:35,529
it's creepy it's gonna create multiple

144
00:05:33,519 --> 00:05:37,538
paths through the code and what I'd

145
00:05:35,529 --> 00:05:40,119
rather do is like collapse those things

146
00:05:37,538 --> 00:05:43,750
so that they can be more unified okay

147
00:05:40,120 --> 00:05:45,370
and so what I kind of wanted to point

148
00:05:43,750 --> 00:05:47,978
out here and this is the thing that I

149
00:05:45,370 --> 00:05:51,009
was getting at when I said I'll show you

150
00:05:47,978 --> 00:05:52,839
when we get there is that now if you

151
00:05:51,009 --> 00:05:55,839
look at the way our things are

152
00:05:52,839 --> 00:06:00,668
architected inside a debug element

153
00:05:55,839 --> 00:06:03,519
itself we now have this sort of sub

154
00:06:00,668 --> 00:06:05,259
concept of frames right so inside the

155
00:06:03,519 --> 00:06:07,478
debug element there's a thing called a

156
00:06:05,259 --> 00:06:10,240
debug element frame and that stores all

157
00:06:07,478 --> 00:06:12,250
of these events inside it right and then

158
00:06:10,240 --> 00:06:14,560
those events themselves can have trees

159
00:06:12,250 --> 00:06:17,410
inside them which say like what stuff

160
00:06:14,560 --> 00:06:19,689
got what stuff happened you know - yes

161
00:06:17,410 --> 00:06:23,470
like like children blocks of them or

162
00:06:19,689 --> 00:06:26,339
whatever and so what that means is now

163
00:06:23,470 --> 00:06:30,220
our debug frame this thing right here is

164
00:06:26,339 --> 00:06:31,750
actually kind of redundant right and if

165
00:06:30,220 --> 00:06:33,220
you take a look at the information

166
00:06:31,750 --> 00:06:37,449
that's actually stored in here that we

167
00:06:33,220 --> 00:06:40,480
actually need right it's really just

168
00:06:37,449 --> 00:06:52,810
begin clock and clock and wall

169
00:06:40,480 --> 00:06:55,720
seconds elapsed that's it right that's

170
00:06:52,810 --> 00:07:00,699
all we really would need it to store and

171
00:06:55,720 --> 00:07:02,440
so if we were to somehow make this sort

172
00:07:00,699 --> 00:07:04,659
of this concept of frames here that

173
00:07:02,439 --> 00:07:06,850
we're actually using if instead of using

174
00:07:04,660 --> 00:07:09,340
the root profile note and attaching it

175
00:07:06,850 --> 00:07:12,100
to the frame like this if instead we

176
00:07:09,339 --> 00:07:14,289
just had a debug element that was the

177
00:07:12,100 --> 00:07:16,840
root profile node that could actually

178
00:07:14,290 --> 00:07:20,500
serve as the container for all of those

179
00:07:16,839 --> 00:07:24,129
profiles right and that to me seems like

180
00:07:20,500 --> 00:07:26,529
a much more interesting way to go now

181
00:07:24,129 --> 00:07:29,350
how would we do that right well we're

182
00:07:26,529 --> 00:07:31,689
already sort of doing it because when we

183
00:07:29,350 --> 00:07:34,360
come in here and create the root profile

184
00:07:31,689 --> 00:07:39,819
node we had to get from somewhere

185
00:07:34,360 --> 00:07:45,819
somewhere anyway right so um see here

186
00:07:39,819 --> 00:07:47,230
root node do-do-do-do-do there it is so

187
00:07:45,819 --> 00:07:49,180
here's where we were actually storing

188
00:07:47,230 --> 00:07:52,030
that and you can see when we do this

189
00:07:49,180 --> 00:07:53,920
sort of parent event thing we grab the

190
00:07:52,029 --> 00:07:56,799
root profile node and if that's not

191
00:07:53,920 --> 00:07:59,199
there right we go ahead and we store one

192
00:07:56,800 --> 00:08:01,960
and we store one by using this null

193
00:07:59,199 --> 00:08:06,930
event right which basically creates it

194
00:08:01,959 --> 00:08:09,399
underneath whatever the element is okay

195
00:08:06,930 --> 00:08:12,400
which creates it under whatever the

196
00:08:09,399 --> 00:08:17,649
element is that we were going to use for

197
00:08:12,399 --> 00:08:20,979
everything else right but why why do

198
00:08:17,649 --> 00:08:23,829
that right why not just make an actual

199
00:08:20,980 --> 00:08:26,439
debug element at the start that is the

200
00:08:23,829 --> 00:08:28,930
actual frame element and then that

201
00:08:26,439 --> 00:08:30,790
element can be the one that they are all

202
00:08:28,930 --> 00:08:33,310
stored under and then instead of ever

203
00:08:30,790 --> 00:08:35,440
having this we just make everything go

204
00:08:33,309 --> 00:08:37,239
underneath that we can in fact we can

205
00:08:35,440 --> 00:08:39,340
even still store the real profile node

206
00:08:37,240 --> 00:08:41,680
here but in we just make sure we still

207
00:08:39,340 --> 00:08:44,050
do have a backing element that's always

208
00:08:41,679 --> 00:08:47,019
there so in here when we actually call

209
00:08:44,049 --> 00:08:48,819
the store event thing instead of this

210
00:08:47,019 --> 00:08:52,269
what I want to do is say like there's a

211
00:08:48,820 --> 00:08:53,580
debug state profile element for like

212
00:08:52,269 --> 00:08:55,949
route profile element right

213
00:08:53,580 --> 00:08:57,930
so now like every last thing that's

214
00:08:55,950 --> 00:09:00,450
stored that is one of these route

215
00:08:57,929 --> 00:09:03,359
profile events is in there and that

216
00:09:00,450 --> 00:09:05,640
means we can walk that array which is

217
00:09:03,360 --> 00:09:08,278
going to look like any other frame array

218
00:09:05,639 --> 00:09:10,019
so now all of our frame arrays are going

219
00:09:08,278 --> 00:09:11,838
to look exactly the same and we can

220
00:09:10,019 --> 00:09:14,549
always pass down an element and that

221
00:09:11,839 --> 00:09:16,230
unifies that part of the code which is

222
00:09:14,549 --> 00:09:18,419
what we want right you always want to

223
00:09:16,230 --> 00:09:21,600
look to see if you can collapse things

224
00:09:18,419 --> 00:09:23,639
into using the same format right the

225
00:09:21,600 --> 00:09:25,050
same kind of data because the more

226
00:09:23,639 --> 00:09:27,588
things that you can have it used the

227
00:09:25,049 --> 00:09:30,059
same format of data right the less

228
00:09:27,589 --> 00:09:31,740
proliferation of code paths you have and

229
00:09:30,059 --> 00:09:33,149
that was what we were trying to do and

230
00:09:31,740 --> 00:09:34,980
have continued to do with the debug

231
00:09:33,149 --> 00:09:36,269
system is just sort of proliferate out

232
00:09:34,980 --> 00:09:38,490
to find out what we need but then

233
00:09:36,269 --> 00:09:40,110
condense back down into the smallest

234
00:09:38,490 --> 00:09:43,680
possible set of things that does what we

235
00:09:40,110 --> 00:09:45,778
need that creates efficient more compact

236
00:09:43,679 --> 00:09:47,909
code that'll be easier for us to manage

237
00:09:45,778 --> 00:09:50,009
right even right now we probably got too

238
00:09:47,909 --> 00:09:56,009
much and so over time we just want to

239
00:09:50,009 --> 00:09:59,100
compact that down all right yeah more so

240
00:09:56,009 --> 00:10:01,799
than anything else the best code is less

241
00:09:59,100 --> 00:10:03,659
code right like because the smaller no

242
00:10:01,799 --> 00:10:05,969
matter what you think about clean code

243
00:10:03,659 --> 00:10:08,399
or object-oriented or not I'm trying all

244
00:10:05,970 --> 00:10:10,200
those things the less code you have to

245
00:10:08,399 --> 00:10:11,909
focus on the better it's going to be

246
00:10:10,200 --> 00:10:14,820
usually because it's just less to keep

247
00:10:11,909 --> 00:10:17,129
in your head less to test less to go

248
00:10:14,820 --> 00:10:18,899
wrong right so just like it's just good

249
00:10:17,129 --> 00:10:21,269
so what I'm going to do here is I'm

250
00:10:18,899 --> 00:10:22,559
going to just introduce a debug element

251
00:10:21,269 --> 00:10:24,588
probably actually you know I'll put it

252
00:10:22,559 --> 00:10:29,849
down where we're storing the frame stuff

253
00:10:24,589 --> 00:10:33,959
right so down here we will say debug

254
00:10:29,850 --> 00:10:35,430
element root profile element and then

255
00:10:33,958 --> 00:10:36,869
we'll just create that root profile

256
00:10:35,429 --> 00:10:39,509
element now this will just automatically

257
00:10:36,870 --> 00:10:41,250
work the root profile element we will

258
00:10:39,509 --> 00:10:44,220
have to create when we do our debug

259
00:10:41,250 --> 00:10:46,679
startup right so when we first create

260
00:10:44,220 --> 00:10:49,470
the stuff that we need which is going to

261
00:10:46,679 --> 00:10:51,958
be in debug start when we're not

262
00:10:49,470 --> 00:10:54,300
initialized so like in here right when

263
00:10:51,958 --> 00:10:55,919
we do all of this stuff and create our I

264
00:10:54,299 --> 00:10:58,979
don't even know what this stuff is this

265
00:10:55,919 --> 00:11:00,509
is all really old code when we first

266
00:10:58,980 --> 00:11:05,070
create all this stuff I'm just gonna say

267
00:11:00,509 --> 00:11:06,189
all right oops at that time I'm gonna go

268
00:11:05,070 --> 00:11:09,430
ahead and say

269
00:11:06,190 --> 00:11:13,560
that the root profile element equals

270
00:11:09,429 --> 00:11:15,669
however we create an element in here get

271
00:11:13,559 --> 00:11:17,139
element from event is there a way to

272
00:11:15,669 --> 00:11:18,909
create one without getting it from an

273
00:11:17,139 --> 00:11:23,909
event I think there's one for getting

274
00:11:18,909 --> 00:11:27,850
element from grid right yeah

275
00:11:23,909 --> 00:11:29,469
so here's get element from grid and get

276
00:11:27,850 --> 00:11:33,310
element from grid unfortunately yeah but

277
00:11:29,470 --> 00:11:35,379
see that doesn't actually create it yet

278
00:11:33,309 --> 00:11:38,409
get element from event does actually

279
00:11:35,379 --> 00:11:40,570
create it and since we don't actually

280
00:11:38,409 --> 00:11:42,129
want to do any sort of look up here and

281
00:11:40,570 --> 00:11:44,320
we don't really ever want to create a

282
00:11:42,129 --> 00:11:48,929
debug event for it I'm not sure that

283
00:11:44,320 --> 00:11:53,470
that's actually all that useful for us

284
00:11:48,929 --> 00:11:55,629
but we could you know if we wanted to we

285
00:11:53,470 --> 00:11:59,920
could still make this work that way I

286
00:11:55,629 --> 00:12:01,689
suppose and maybe for regularity

287
00:11:59,919 --> 00:12:03,339
purposes that would make sense but the

288
00:12:01,690 --> 00:12:10,120
other thing we can do is just pull this

289
00:12:03,340 --> 00:12:11,410
code out if we wanted to because there's

290
00:12:10,120 --> 00:12:14,919
really not that much that we would have

291
00:12:11,409 --> 00:12:16,659
to do push struct I'll clear it is there

292
00:12:14,919 --> 00:12:19,389
any initialization that needs to happen

293
00:12:16,659 --> 00:12:21,039
for this thing there isn't right I mean

294
00:12:19,389 --> 00:12:27,189
there's nothing yeah there's nothing

295
00:12:21,039 --> 00:12:28,509
here and it's not in the hash so we

296
00:12:27,190 --> 00:12:31,020
would just need to put it in the hash

297
00:12:28,509 --> 00:12:31,019
somewhere

298
00:12:34,820 --> 00:12:41,660
yeah well I guess I'll just do it this

299
00:12:39,710 --> 00:12:47,360
way I don't think this is necessarily

300
00:12:41,659 --> 00:12:48,679
great but it's alright so if I create a

301
00:12:47,360 --> 00:12:56,060
route profile event and then I just say

302
00:12:48,679 --> 00:13:03,889
get element from event debug state route

303
00:12:56,059 --> 00:13:05,839
profile over parent false I don't want

304
00:13:03,889 --> 00:13:08,569
it to do any hierarchy creation nonsense

305
00:13:05,840 --> 00:13:10,850
I don't want it to do add element to

306
00:13:08,570 --> 00:13:12,740
group either

307
00:13:10,850 --> 00:13:19,670
what does add element to group do if

308
00:13:12,740 --> 00:13:21,379
there is no parent so that seems a

309
00:13:19,669 --> 00:13:22,789
little busted right because it's going

310
00:13:21,379 --> 00:13:25,340
to do an insert on something that isn't

311
00:13:22,789 --> 00:13:27,469
necessarily there so I feel like in this

312
00:13:25,340 --> 00:13:29,210
case the parent group thing it should

313
00:13:27,470 --> 00:13:33,860
really do like if there is a parent

314
00:13:29,210 --> 00:13:35,600
group right because we don't want it to

315
00:13:33,860 --> 00:13:38,529
like insert if there is no parent group

316
00:13:35,600 --> 00:13:42,250
so that seems like a smart thing to do

317
00:13:38,529 --> 00:13:48,769
so yeah so the route profile event

318
00:13:42,250 --> 00:13:51,009
that's gonna be in interface that H what

319
00:13:48,769 --> 00:13:53,480
I'm gonna do here is just be kind of sly

320
00:13:51,009 --> 00:13:56,480
here's the debug event we don't need to

321
00:13:53,480 --> 00:13:59,029
initialize anything at all right

322
00:13:56,480 --> 00:14:02,230
the only thing we need to do is make

323
00:13:59,029 --> 00:14:04,730
sure that this debug event has a grid

324
00:14:02,230 --> 00:14:06,830
associated with it and that grid should

325
00:14:04,730 --> 00:14:08,420
be parsable and so in order to ensure

326
00:14:06,830 --> 00:14:10,190
that it's possible in the same way as

327
00:14:08,419 --> 00:14:12,250
everything else what I'm probably going

328
00:14:10,190 --> 00:14:14,630
to do is just use the debug named

329
00:14:12,250 --> 00:14:21,230
parameter right so I'm just gonna say

330
00:14:14,629 --> 00:14:23,539
root profile event grid equals debug

331
00:14:21,230 --> 00:14:27,769
name and that debug name is just going

332
00:14:23,539 --> 00:14:32,149
to be a root profile node or element

333
00:14:27,769 --> 00:14:35,000
rather or maybe just root profile and so

334
00:14:32,149 --> 00:14:36,230
once that's created then we now have a

335
00:14:35,000 --> 00:14:38,480
root profile element that will store

336
00:14:36,230 --> 00:14:39,980
everything that we needed now I'm just

337
00:14:38,480 --> 00:14:44,000
gonna let this run to make sure that it

338
00:14:39,980 --> 00:14:45,620
works at all and hopefully it will I

339
00:14:44,000 --> 00:14:48,620
don't know if it will or it won't

340
00:14:45,620 --> 00:14:52,429
so yeah that's doing something I don't

341
00:14:48,620 --> 00:14:58,310
like that though we told it not to add

342
00:14:52,429 --> 00:15:01,909
this get element event I told it not to

343
00:14:58,309 --> 00:15:03,979
add so why did it add parent group

344
00:15:01,909 --> 00:15:06,709
equals parent parent is zero in this

345
00:15:03,980 --> 00:15:11,139
case so it should not do an add element

346
00:15:06,710 --> 00:15:13,400
to group here right and it should not do

347
00:15:11,139 --> 00:15:16,159
it should not ever do this because

348
00:15:13,399 --> 00:15:18,259
create hierarchy is also false so I want

349
00:15:16,159 --> 00:15:21,350
to just quickly step in and see why it

350
00:15:18,259 --> 00:15:25,069
decided to do that because I'm just

351
00:15:21,350 --> 00:15:30,019
assuming that that is is what's causing

352
00:15:25,070 --> 00:15:35,720
it although I guess technically it could

353
00:15:30,019 --> 00:15:39,949
also be because of our code up above

354
00:15:35,720 --> 00:15:43,190
right where we do root profile note up

355
00:15:39,950 --> 00:15:46,879
here in theory it could be because of

356
00:15:43,190 --> 00:15:49,070
this part right and so when this is

357
00:15:46,879 --> 00:15:53,509
calling store event I suppose that might

358
00:15:49,070 --> 00:15:59,650
do something like that with the nil

359
00:15:53,509 --> 00:15:59,649
event stuff and I'm not sure about that

360
00:16:00,399 --> 00:16:03,970
you see what that will be

361
00:16:05,799 --> 00:16:10,009
so that store event should not be doing

362
00:16:08,539 --> 00:16:12,740
any of that right that should not be

363
00:16:10,009 --> 00:16:14,090
happening so it feels to me like yeah

364
00:16:12,740 --> 00:16:15,440
like I still bust ice I'm just gonna

365
00:16:14,090 --> 00:16:17,480
step in there real quick I just want to

366
00:16:15,440 --> 00:16:19,190
make sure it's not really bothering

367
00:16:17,480 --> 00:16:20,600
anybody at the moment like we can

368
00:16:19,190 --> 00:16:21,680
continue doing what we were doing even

369
00:16:20,600 --> 00:16:24,889
with that but I just wanted to make sure

370
00:16:21,679 --> 00:16:28,669
I don't want that to be happening

371
00:16:24,889 --> 00:16:30,470
unnecessarily so here we are about to

372
00:16:28,669 --> 00:16:32,659
create that read profile we'll go step

373
00:16:30,470 --> 00:16:35,450
into gentleman from event will call

374
00:16:32,659 --> 00:16:37,189
debug parse name and then we'll call get

375
00:16:35,450 --> 00:16:38,870
element from grid this is just gonna

376
00:16:37,190 --> 00:16:40,540
look through the hash to see if there's

377
00:16:38,870 --> 00:16:42,230
anything there there isn't anything

378
00:16:40,539 --> 00:16:43,849
obviously it's the first thing being

379
00:16:42,230 --> 00:16:46,129
created so that's to be expected or one

380
00:16:43,850 --> 00:16:49,550
of the first ones so then we're going to

381
00:16:46,129 --> 00:16:55,490
add it in we'll copy this the grid out

382
00:16:49,549 --> 00:17:01,779
which is what we want we will use well

383
00:16:55,490 --> 00:17:08,870
we won't create the hierarchy what what

384
00:17:01,779 --> 00:17:11,980
parent parent what is the parent getting

385
00:17:08,869 --> 00:17:13,639
passed I passed a zero there did I not

386
00:17:11,980 --> 00:17:15,349
what did I do

387
00:17:13,640 --> 00:17:26,320
I just did something stupid obviously

388
00:17:15,349 --> 00:17:26,319
obviously so ah it auto fills it in

389
00:17:27,709 --> 00:17:29,709
ah

390
00:17:51,359 --> 00:18:01,599
well obviously that's a problem I'm

391
00:17:57,759 --> 00:18:05,528
gonna hit shift f5 on that and I'll be

392
00:18:01,599 --> 00:18:07,719
honest with you I want to see I'm using

393
00:18:05,528 --> 00:18:09,909
my inside voice right now okay there's

394
00:18:07,720 --> 00:18:12,909
no need to get upset there's no need for

395
00:18:09,909 --> 00:18:24,700
histrionics fear people we're just gonna

396
00:18:12,909 --> 00:18:31,179
make this a very quiet dignified edit so

397
00:18:24,700 --> 00:18:38,860
really really I think what we want to do

398
00:18:31,179 --> 00:18:49,110
here is actually just this I think

399
00:18:38,859 --> 00:18:52,808
that's what we actually want to do yeah

400
00:18:49,109 --> 00:18:55,240
that's it right there all right so now

401
00:18:52,808 --> 00:18:56,950
we're in better shape so basically what

402
00:18:55,240 --> 00:19:00,480
I did was I just said hey guess what the

403
00:18:56,950 --> 00:19:02,500
only time this is getting used is for

404
00:19:00,480 --> 00:19:04,329
for events it should be in the hierarchy

405
00:19:02,500 --> 00:19:05,919
in France it shouldn't we might we never

406
00:19:04,329 --> 00:19:07,178
actually want to add them to a group

407
00:19:05,919 --> 00:19:08,830
when they shouldn't be

408
00:19:07,179 --> 00:19:10,450
that was a vestigial remain for when we

409
00:19:08,829 --> 00:19:13,599
were actually using the add to group

410
00:19:10,450 --> 00:19:14,740
stuff for profile events and we don't

411
00:19:13,599 --> 00:19:16,538
really want that to happen anymore I

412
00:19:14,740 --> 00:19:17,919
don't think so I'm pretty sure that

413
00:19:16,538 --> 00:19:20,609
that's actually how we would prefer

414
00:19:17,919 --> 00:19:25,350
anyway so now we can leave it like that

415
00:19:20,609 --> 00:19:29,199
now that we have done that little

416
00:19:25,349 --> 00:19:33,038
fancy-pants maneuver right with now with

417
00:19:29,200 --> 00:19:34,538
extra pants what we can do is when we

418
00:19:33,038 --> 00:19:36,548
come through the thread into the graph

419
00:19:34,538 --> 00:19:38,259
stuff we can drastically simplify what

420
00:19:36,548 --> 00:19:41,200
this has to consider in order to do the

421
00:19:38,259 --> 00:19:42,548
stuff that I wanted to do and I didn't

422
00:19:41,200 --> 00:19:43,960
want to go write it the other way

423
00:19:42,548 --> 00:19:45,548
because it just would have been a mess

424
00:19:43,960 --> 00:19:47,319
and now we should be able to write it

425
00:19:45,548 --> 00:19:49,450
fairly straightforward so now what

426
00:19:47,319 --> 00:19:51,579
happens is we do this viewing element

427
00:19:49,450 --> 00:19:53,259
thing instead of ever getting events out

428
00:19:51,579 --> 00:19:54,769
of it which we don't need to do anymore

429
00:19:53,259 --> 00:19:56,779
right we can just skip

430
00:19:54,769 --> 00:19:59,329
that part instead of ever getting events

431
00:19:56,779 --> 00:20:01,490
all of it will just say hey get whatever

432
00:19:59,329 --> 00:20:04,789
the element is that you were supposed to

433
00:20:01,490 --> 00:20:07,400
view and then if that's not true

434
00:20:04,789 --> 00:20:08,869
right if there isn't one of those then

435
00:20:07,400 --> 00:20:18,440
we'll just say okay view the root

436
00:20:08,869 --> 00:20:21,889
element view that one this stuff goes

437
00:20:18,440 --> 00:20:25,059
away goodbye and now we just say okay

438
00:20:21,890 --> 00:20:27,800
when we're get whatever we're gonna draw

439
00:20:25,059 --> 00:20:30,769
we're actually gonna draw as an element

440
00:20:27,799 --> 00:20:32,450
now which has all the frames included so

441
00:20:30,769 --> 00:20:34,639
now when we call draw frame bars what we

442
00:20:32,450 --> 00:20:40,340
can do is instead of passing a root node

443
00:20:34,640 --> 00:20:43,250
we pass the viewing element okay so

444
00:20:40,339 --> 00:20:47,209
that's good you know I hate having so

445
00:20:43,250 --> 00:20:49,309
few characters on a line the things I do

446
00:20:47,210 --> 00:20:52,460
for you stream people to keep it so you

447
00:20:49,309 --> 00:20:55,399
can read it I can fit like four times

448
00:20:52,460 --> 00:20:57,819
this text in one of these panels when we

449
00:20:55,400 --> 00:21:05,750
have a higher res display anyway

450
00:20:57,819 --> 00:21:08,149
consider yourself so very lucky all

451
00:21:05,750 --> 00:21:10,009
right well maybe I'll leave that in

452
00:21:08,150 --> 00:21:12,230
there for now so anyway when we do drop

453
00:21:10,009 --> 00:21:13,700
frame bars now when we pass a debug

454
00:21:12,230 --> 00:21:15,380
stored event actually this is gonna be

455
00:21:13,700 --> 00:21:16,850
passing to you about elements and this

456
00:21:15,380 --> 00:21:19,340
is the element this is the root element

457
00:21:16,849 --> 00:21:21,109
that we're doing and so now when we come

458
00:21:19,339 --> 00:21:23,659
through here things should go a little

459
00:21:21,109 --> 00:21:25,699
smoother for us now what we should be

460
00:21:23,660 --> 00:21:28,700
able to do is say okay let's loop

461
00:21:25,700 --> 00:21:29,690
through all of the frames and fernette

462
00:21:28,700 --> 00:21:30,769
you know what I'm just gonna get rid of

463
00:21:29,690 --> 00:21:31,759
this at the moment I'm just gonna say

464
00:21:30,769 --> 00:21:33,559
you know what I don't want this right

465
00:21:31,759 --> 00:21:34,819
now we'll deal with it later so we'll go

466
00:21:33,559 --> 00:21:37,399
through all the frames here's our frame

467
00:21:34,819 --> 00:21:38,990
index zero we're gonna go ahead and say

468
00:21:37,400 --> 00:21:40,820
there's no such thing as that anymore

469
00:21:38,990 --> 00:21:42,859
that's just garbage forget it doesn't

470
00:21:40,819 --> 00:21:44,869
matter and we're just gonna loop through

471
00:21:42,859 --> 00:21:49,429
all of the ones that are in our root

472
00:21:44,869 --> 00:21:53,179
elements frame set right easy peasy

473
00:21:49,430 --> 00:21:54,980
lemon squeezy like so we also know how

474
00:21:53,180 --> 00:21:56,600
many frames there are here because we

475
00:21:54,980 --> 00:21:59,799
just know in fact additives make the

476
00:21:56,599 --> 00:21:59,799
frame count be this

477
00:22:02,159 --> 00:22:11,080
like so frame camped there we go and

478
00:22:09,730 --> 00:22:13,960
then we want to get the profile nude

479
00:22:11,079 --> 00:22:17,528
it's as easy as just saying alright

480
00:22:13,960 --> 00:22:25,749
whatever the element is that we're on we

481
00:22:17,528 --> 00:22:27,159
want to access the frames of that and we

482
00:22:25,749 --> 00:22:27,490
just want to get the profile no doubt of

483
00:22:27,159 --> 00:22:30,159
that

484
00:22:27,490 --> 00:22:33,249
right cuz this remember how this works

485
00:22:30,159 --> 00:22:35,889
right I'm just gonna just gonna pop back

486
00:22:33,249 --> 00:22:39,639
here for a second so we're in one of

487
00:22:35,888 --> 00:22:42,849
these things right and we can grab out

488
00:22:39,638 --> 00:22:46,689
the profile node now of this guy by

489
00:22:42,849 --> 00:22:48,519
taking whichever well I guess there's

490
00:22:46,690 --> 00:22:50,710
multiple events in there right so we're

491
00:22:48,519 --> 00:22:54,940
going to grab this thing out and then we

492
00:22:50,710 --> 00:22:57,579
want to loop over the sub events of this

493
00:22:54,940 --> 00:23:01,149
thing so we can go from oldest to most

494
00:22:57,579 --> 00:23:03,730
recent right although really we could

495
00:23:01,148 --> 00:23:07,118
also say if we're just profiling one of

496
00:23:03,730 --> 00:23:09,909
these we could profile just like the

497
00:23:07,118 --> 00:23:14,709
most recent event because if this is

498
00:23:09,909 --> 00:23:16,299
kind of a little bit of a yeah I think

499
00:23:14,710 --> 00:23:18,159
we want to do them all so I think what

500
00:23:16,298 --> 00:23:21,158
we want to do right is we want to loop

501
00:23:18,159 --> 00:23:23,889
over any any entries that are in this

502
00:23:21,159 --> 00:23:25,210
one that we're viewing so we just

503
00:23:23,888 --> 00:23:27,278
because if there's multiple than we want

504
00:23:25,210 --> 00:23:28,538
to see them all right I think that's

505
00:23:27,278 --> 00:23:33,999
true

506
00:23:28,538 --> 00:23:38,769
so what I want to do is say okay for

507
00:23:33,999 --> 00:23:42,940
each one of these this stuff I'll have

508
00:23:38,769 --> 00:23:45,759
to construct ahead of time right we'll

509
00:23:42,940 --> 00:23:51,028
do that in a second for for each one of

510
00:23:45,759 --> 00:23:51,028
the events in here stored event equals

511
00:23:51,039 --> 00:23:57,349
see what's this going to be called this

512
00:23:53,990 --> 00:23:58,789
is just the route event I guess just

513
00:23:57,349 --> 00:24:00,829
trying to side whether we loop over it

514
00:23:58,789 --> 00:24:09,680
and then do children as well or whether

515
00:24:00,829 --> 00:24:15,500
we just loop over this one I think we

516
00:24:09,680 --> 00:24:17,720
actually just loop over this one we'll

517
00:24:15,500 --> 00:24:20,210
find out in a second so I think this is

518
00:24:17,720 --> 00:24:22,339
probably all we want to draw all right

519
00:24:20,210 --> 00:24:24,650
so instead of like first child and that

520
00:24:22,339 --> 00:24:26,509
sort of stuff right what we want to do

521
00:24:24,650 --> 00:24:28,340
instead is just just loop over the

522
00:24:26,509 --> 00:24:32,960
events that have been entered into this

523
00:24:28,339 --> 00:24:35,059
element right and then if we go down to

524
00:24:32,960 --> 00:24:37,519
a sub element then obviously we can we

525
00:24:35,059 --> 00:24:42,589
loop over those right and what it would

526
00:24:37,519 --> 00:24:45,879
always allow us to do that operation so

527
00:24:42,589 --> 00:24:48,459
in here we'd say okay the story event

528
00:24:45,880 --> 00:24:53,360
that's going to be our route event

529
00:24:48,460 --> 00:25:07,400
oldest event I know what this is doing

530
00:24:53,359 --> 00:25:10,669
here okay so we go through this we say

531
00:25:07,400 --> 00:25:14,150
go from the oldest until there really

532
00:25:10,670 --> 00:25:19,550
aren't any more now why did I delete

533
00:25:14,150 --> 00:25:22,100
that that's actually we wanted and then

534
00:25:19,549 --> 00:25:24,559
we just draw them as before now the the

535
00:25:22,099 --> 00:25:27,049
tricky part here is just going well we

536
00:25:24,559 --> 00:25:30,049
need to know what the actual total

537
00:25:27,049 --> 00:25:31,879
duration was and that I believe is this

538
00:25:30,049 --> 00:25:34,909
part what we want to do right here and

539
00:25:31,880 --> 00:25:39,740
we're not actually updating that yet so

540
00:25:34,910 --> 00:25:43,670
we need to now have that we need to

541
00:25:39,740 --> 00:25:46,250
actually record that span properly right

542
00:25:43,670 --> 00:25:49,730
because we yeah we need that particular

543
00:25:46,250 --> 00:25:52,390
piece of information as we go now I

544
00:25:49,730 --> 00:25:52,390
suppose

545
00:26:07,279 --> 00:26:17,279
hmm I suppose that is a little redundant

546
00:26:13,799 --> 00:26:19,379
as well like the profile node

547
00:26:17,279 --> 00:26:25,589
information stores its individual

548
00:26:19,380 --> 00:26:27,720
duration but we also know you know we

549
00:26:25,589 --> 00:26:29,759
also have the information about the

550
00:26:27,720 --> 00:26:36,299
total clocks that we're sort of saying

551
00:26:29,759 --> 00:26:40,950
read store here and let me just draw

552
00:26:36,299 --> 00:26:43,769
this out because it's a little bit again

553
00:26:40,950 --> 00:26:46,069
I'm just wondering if there's still one

554
00:26:43,769 --> 00:26:49,049
way we can make it a little bit flatter

555
00:26:46,069 --> 00:26:52,889
so here's what's happening at the moment

556
00:26:49,049 --> 00:27:00,210
right so at the moment we have a debug

557
00:26:52,890 --> 00:27:04,710
element and that debug element is the

558
00:27:00,210 --> 00:27:08,850
root profile node or I should say root

559
00:27:04,710 --> 00:27:13,009
profile element right that root profile

560
00:27:08,849 --> 00:27:13,009
element has in it a series of frames

561
00:27:16,579 --> 00:27:19,579
right

562
00:27:21,119 --> 00:27:35,829
and inside one of these it has a series

563
00:27:27,999 --> 00:27:38,970
of events and this is however many

564
00:27:35,829 --> 00:27:42,579
events restored on this particular frame

565
00:27:38,970 --> 00:27:45,759
now we happen to know that for the for

566
00:27:42,579 --> 00:27:48,460
the root this should only ever be one

567
00:27:45,759 --> 00:27:53,679
because we only ever keep everything

568
00:27:48,460 --> 00:27:57,249
under one stored event right but it sort

569
00:27:53,679 --> 00:27:59,110
of strikes me as like since we have the

570
00:27:57,249 --> 00:28:03,879
ability to store multiple things under

571
00:27:59,109 --> 00:28:05,548
here I'm wondering does that actually

572
00:28:03,878 --> 00:28:09,248
mean

573
00:28:05,548 --> 00:28:13,679
we shouldn't have that extra layer right

574
00:28:09,249 --> 00:28:16,360
like we shouldn't bother actually having

575
00:28:13,679 --> 00:28:18,070
we shouldn't make it so there's only one

576
00:28:16,359 --> 00:28:20,168
under here we should just make it so

577
00:28:18,069 --> 00:28:23,168
that all of the events that happen on a

578
00:28:20,169 --> 00:28:26,019
frame at the root actually just add

579
00:28:23,169 --> 00:28:31,629
themselves directly here do you know

580
00:28:26,019 --> 00:28:34,388
what I'm saying and that seems kind of

581
00:28:31,628 --> 00:28:39,839
logical to me so in other words we would

582
00:28:34,388 --> 00:28:44,378
go all right up let's see where it is

583
00:28:39,839 --> 00:28:50,319
inchoate debug records

584
00:28:44,378 --> 00:28:53,439
so in collate debug records when we come

585
00:28:50,319 --> 00:28:55,538
through here to do begin block instead

586
00:28:53,440 --> 00:28:57,788
of saying like if not parent event and

587
00:28:55,538 --> 00:28:59,859
like getting the parent from the root

588
00:28:57,788 --> 00:29:03,009
like collation flame root profile node

589
00:28:59,859 --> 00:29:07,778
instead of that we'd say like no you're

590
00:29:03,009 --> 00:29:12,339
always gonna add this thing as an event

591
00:29:07,778 --> 00:29:15,849
underneath the the standard debug

592
00:29:12,339 --> 00:29:19,689
element right if there isn't a parent so

593
00:29:15,849 --> 00:29:26,109
in other words this if not parent event

594
00:29:19,690 --> 00:29:29,139
thing just wouldn't exist it just goes

595
00:29:26,109 --> 00:29:30,638
away so if there's an open close if

596
00:29:29,138 --> 00:29:32,829
there's an open code block then your

597
00:29:30,638 --> 00:29:37,740
parent is that code block if not

598
00:29:32,829 --> 00:29:43,028
then your parent event is going to be

599
00:29:37,740 --> 00:29:45,308
your parent event is actually just

600
00:29:43,028 --> 00:29:54,730
inside that element meaning there like

601
00:29:45,308 --> 00:29:57,339
there is no parent element right I feel

602
00:29:54,730 --> 00:29:59,710
like that works in other words this

603
00:29:57,339 --> 00:30:04,480
store event right here you just store it

604
00:29:59,710 --> 00:30:07,590
directly in the element and you don't

605
00:30:04,480 --> 00:30:07,589
add it to any parent

606
00:30:29,750 --> 00:30:34,740
so all right here's my argument for why

607
00:30:33,089 --> 00:30:37,139
I don't think you can quite do that and

608
00:30:34,740 --> 00:30:42,630
the reason is because this chaining is

609
00:30:37,140 --> 00:30:44,400
per element right so if I have several

610
00:30:42,630 --> 00:30:46,800
different types of things that happen

611
00:30:44,400 --> 00:30:52,890
during a frame right so I've got you

612
00:30:46,799 --> 00:30:57,930
know I've got like collate records and

613
00:30:52,890 --> 00:31:00,570
I've got you know I don't know whatever

614
00:30:57,930 --> 00:31:04,140
they a game update you know whatever

615
00:31:00,569 --> 00:31:07,500
they are these chains are actually per

616
00:31:04,140 --> 00:31:09,960
one of those and so I think this

617
00:31:07,500 --> 00:31:12,269
actually does have to stay exactly the

618
00:31:09,960 --> 00:31:15,360
way that it is where it's using the

619
00:31:12,269 --> 00:31:18,420
profile nodes and it can't be sort of

620
00:31:15,359 --> 00:31:21,179
sucked out in that way and so when you

621
00:31:18,420 --> 00:31:25,259
actually say hey we're going to draw a

622
00:31:21,180 --> 00:31:26,910
particular set of frame bars here what I

623
00:31:25,259 --> 00:31:31,259
want to do is have it so that I can

624
00:31:26,910 --> 00:31:33,960
access you know all of the frames of

625
00:31:31,259 --> 00:31:40,650
something the problem is the profile

626
00:31:33,960 --> 00:31:43,500
node itself it kind of makes it hard

627
00:31:40,650 --> 00:31:44,940
still even with that even with making it

628
00:31:43,500 --> 00:31:47,069
so that they're all under the same one

629
00:31:44,940 --> 00:31:48,990
so that you can uniformly treat them as

630
00:31:47,069 --> 00:31:50,849
elements it just seems like it's kind of

631
00:31:48,990 --> 00:31:54,509
hard to still work with because that top

632
00:31:50,849 --> 00:31:56,699
one is actually not really it's not a

633
00:31:54,509 --> 00:31:59,670
profile node it's just this sort of

634
00:31:56,700 --> 00:32:01,830
container and so it only will have one

635
00:31:59,670 --> 00:32:03,060
thing on every frame as we go across

636
00:32:01,829 --> 00:32:06,289
frames there's only one thing in it

637
00:32:03,059 --> 00:32:06,289
which is the whole container

638
00:32:12,220 --> 00:32:17,509
maybe that's okay you know maybe that's

639
00:32:16,130 --> 00:32:19,309
fine but I guess that's just something

640
00:32:17,509 --> 00:32:21,019
to be aware of right so as we come

641
00:32:19,308 --> 00:32:22,910
through here and we do frame index right

642
00:32:21,019 --> 00:32:27,529
and we get one of these things we pull

643
00:32:22,910 --> 00:32:29,600
out the root event that we're going for

644
00:32:27,529 --> 00:32:34,308
we can actually we actually can make

645
00:32:29,599 --> 00:32:38,299
this the root profile node because it's

646
00:32:34,308 --> 00:32:41,690
actually would be a profile node so we

647
00:32:38,299 --> 00:32:43,428
can access the profile node like so do

648
00:32:41,690 --> 00:32:45,679
the same things we were doing I think

649
00:32:43,429 --> 00:32:50,410
that still works and then we come

650
00:32:45,679 --> 00:32:54,140
through here we can do the root node

651
00:32:50,410 --> 00:32:58,790
first child like so and that might be

652
00:32:54,140 --> 00:33:02,540
okay right that might be okay not a

653
00:32:58,789 --> 00:33:04,670
member of debug element frame right so

654
00:33:02,539 --> 00:33:06,529
in here the only question is yeah how

655
00:33:04,670 --> 00:33:08,539
many of these do we draw because there

656
00:33:06,529 --> 00:33:12,109
might be multiples but I think in

657
00:33:08,539 --> 00:33:14,210
general we would only want to draw one

658
00:33:12,109 --> 00:33:16,250
particular one of them but maybe like I

659
00:33:14,210 --> 00:33:19,069
said what we would have to do here is

660
00:33:16,250 --> 00:33:20,750
draw we would have to draw all of the

661
00:33:19,069 --> 00:33:22,639
instances of it for ones that weren't

662
00:33:20,750 --> 00:33:24,650
frames so what I'm going to do here is

663
00:33:22,640 --> 00:33:26,750
just do most recent Frank event at the

664
00:33:24,650 --> 00:33:36,670
moment but maybe that needs to sort of

665
00:33:26,750 --> 00:33:36,670
be expanded yeah

666
00:33:39,990 --> 00:33:43,500
and I probably should look to see

667
00:33:41,730 --> 00:33:45,029
whether there is a most recent event as

668
00:33:43,500 --> 00:33:47,569
well if there isn't a most recent event

669
00:33:45,029 --> 00:33:55,230
we probably shouldn't

670
00:33:47,569 --> 00:34:17,069
oops let's make this a debugs for an

671
00:33:55,230 --> 00:34:18,210
event so we'll take a look but like I

672
00:34:17,070 --> 00:34:20,480
said I may have to adjust that a little

673
00:34:18,210 --> 00:34:20,480
bit

674
00:34:31,019 --> 00:34:35,429
so okay so these are the frame bars

675
00:34:33,148 --> 00:34:38,940
exactly as I have actually hoped that

676
00:34:35,429 --> 00:34:41,338
they would be right so as you can see

677
00:34:38,940 --> 00:34:44,730
this kind of gives us now a better idea

678
00:34:41,338 --> 00:34:47,460
of what our performance is over time in

679
00:34:44,730 --> 00:34:49,980
terms of variability so it makes it very

680
00:34:47,460 --> 00:34:52,889
easy to spot frames where things happen

681
00:34:49,980 --> 00:34:55,668
that are unusual right you can see the

682
00:34:52,889 --> 00:34:59,519
pink bars which are like frame which are

683
00:34:55,668 --> 00:35:01,379
asset loading that have like spikes in

684
00:34:59,519 --> 00:35:03,300
here we don't really have any way right

685
00:35:01,380 --> 00:35:06,450
now showing multi-thread stuff on the

686
00:35:03,300 --> 00:35:08,550
frame bars like this so you know they're

687
00:35:06,449 --> 00:35:09,989
just gonna kind of over write the other

688
00:35:08,550 --> 00:35:12,810
ones I'm not sure what the best way is

689
00:35:09,989 --> 00:35:14,639
to draw those exactly but you get the

690
00:35:12,809 --> 00:35:16,949
idea now the thing that I was saying is

691
00:35:14,639 --> 00:35:18,779
I don't think maybe works quite right at

692
00:35:16,949 --> 00:35:22,529
the moment you say I want to drill down

693
00:35:18,780 --> 00:35:25,010
into one of these so let's like move to

694
00:35:22,530 --> 00:35:27,690
here so here's the actual game update

695
00:35:25,010 --> 00:35:28,980
running right and if I come through here

696
00:35:27,690 --> 00:35:31,619
to game update and I want to see this in

697
00:35:28,980 --> 00:35:33,630
more detail if I click on that you can

698
00:35:31,619 --> 00:35:37,108
kind of see now that we've got a game

699
00:35:33,630 --> 00:35:39,269
update and render on here and well I

700
00:35:37,108 --> 00:35:42,119
guess I don't know if game update and

701
00:35:39,269 --> 00:35:44,009
render actually has any sub I think it

702
00:35:42,119 --> 00:35:45,780
should right it's supposed to have some

703
00:35:44,010 --> 00:35:48,900
sub stuff and we don't really see

704
00:35:45,780 --> 00:35:51,089
anything on here right so we're still

705
00:35:48,900 --> 00:35:55,710
like I've still you know it's still just

706
00:35:51,088 --> 00:35:57,599
not quite what I want in terms of

707
00:35:55,710 --> 00:35:59,789
getting that code structured so that you

708
00:35:57,599 --> 00:36:02,760
can drill down properly now if I drill

709
00:35:59,789 --> 00:36:05,250
down again on it then I actually see the

710
00:36:02,760 --> 00:36:06,630
actual bars of course we're drawing so

711
00:36:05,250 --> 00:36:11,420
much now that we tanked the framerate

712
00:36:06,630 --> 00:36:11,420
which is not fabulous obviously

713
00:36:14,199 --> 00:36:23,828
oh poor poor game poor game is drawing

714
00:36:19,239 --> 00:36:27,848
too many things it's ok game that's just

715
00:36:23,829 --> 00:36:29,740
what happens sometimes you look inside

716
00:36:27,849 --> 00:36:35,260
one of these look at ah look at all that

717
00:36:29,739 --> 00:36:37,358
stuff yeah so I'm not sure how we avoid

718
00:36:35,260 --> 00:36:40,630
just having crazy amounts of stuff

719
00:36:37,358 --> 00:36:42,789
getting drawn all the time like we don't

720
00:36:40,630 --> 00:36:44,940
have much of a level of detail kind of a

721
00:36:42,789 --> 00:36:47,108
thing right that we can lean on for this

722
00:36:44,940 --> 00:36:49,858
let's take a look at one other thing

723
00:36:47,108 --> 00:36:52,358
here though if I go to debug collation

724
00:36:49,858 --> 00:36:57,219
so if i zoom in on debug collation now

725
00:36:52,358 --> 00:36:59,679
we can actually see here is the the

726
00:36:57,219 --> 00:37:11,669
debug start code and here's the debug

727
00:36:59,679 --> 00:37:14,319
end code just kind of fun to write yeah

728
00:37:11,670 --> 00:37:17,559
so almost there but not quite there yet

729
00:37:14,320 --> 00:37:21,568
I don't know what else we've got here in

730
00:37:17,559 --> 00:37:21,568
terms of stuff we could click on

731
00:37:31,690 --> 00:37:35,250
so this is begin sim

732
00:37:43,480 --> 00:37:47,039
and that's get World chunk

733
00:37:48,550 --> 00:37:54,850
yeah so I'm interested to know since

734
00:37:52,809 --> 00:37:57,070
basically that's just a lot of busy work

735
00:37:54,849 --> 00:37:58,480
on our part that's I don't know that the

736
00:37:57,070 --> 00:37:59,650
graphics driver is probably getting

737
00:37:58,480 --> 00:38:03,010
bogged a spy's because we don't

738
00:37:59,650 --> 00:38:04,389
efficiently handle high volumes of

739
00:38:03,010 --> 00:38:06,300
primitives that's not what our render

740
00:38:04,389 --> 00:38:09,250
stuff is stuff to do at the moment I

741
00:38:06,300 --> 00:38:12,130
also wonder what the difference is

742
00:38:09,250 --> 00:38:14,800
between release and regular builds there

743
00:38:12,130 --> 00:38:16,450
is it was curious because that is

744
00:38:14,800 --> 00:38:20,519
something we could speed up if we wanted

745
00:38:16,449 --> 00:38:20,519
to we have tons of room to do that with

746
00:38:20,579 --> 00:38:24,179
so hard to say

747
00:38:30,139 --> 00:38:37,868
let's see here so let's see what was I

748
00:38:34,940 --> 00:38:42,380
looking at I was looking at game update

749
00:38:37,869 --> 00:38:44,989
so so it's still pretty bad but it's

750
00:38:42,380 --> 00:38:47,960
actually quite a bit more usable so you

751
00:38:44,989 --> 00:38:50,088
know again if we wanted to we this

752
00:38:47,960 --> 00:38:55,179
probably isn't really too much to draw

753
00:38:50,088 --> 00:38:55,179
we probably could if we wanted to

754
00:38:55,480 --> 00:39:01,159
actually draw all this but I suspect

755
00:38:58,460 --> 00:39:04,970
what would be better for us is if we

756
00:39:01,159 --> 00:39:06,798
just maybe put in some logic to handle

757
00:39:04,969 --> 00:39:09,439
things where there's lots of small calls

758
00:39:06,798 --> 00:39:13,369
and just show that in some other way

759
00:39:09,440 --> 00:39:14,568
maybe that seems like a better idea I'm

760
00:39:13,369 --> 00:39:15,829
not sure exactly how we do that but

761
00:39:14,568 --> 00:39:19,730
again that's kind of what we're supposed

762
00:39:15,829 --> 00:39:29,720
to be doing now all right so let's keep

763
00:39:19,730 --> 00:39:32,498
going here let's also make it make sure

764
00:39:29,719 --> 00:39:39,108
that we can still draw our old-style

765
00:39:32,498 --> 00:39:43,399
draw frame bars I want to be able to

766
00:39:39,108 --> 00:39:45,788
draw a profile in and draw a profile in

767
00:39:43,400 --> 00:39:50,269
will now take will also take viewing

768
00:39:45,789 --> 00:39:56,559
element and then I will go back to draw

769
00:39:50,268 --> 00:39:59,558
a profile in and say that that takes

770
00:39:56,559 --> 00:39:59,559
well

771
00:39:59,599 --> 00:40:08,869
I'm not actually sure what that will do

772
00:40:02,170 --> 00:40:13,599
that will take debug elements elements

773
00:40:08,869 --> 00:40:15,829
and it will say I don't know like I

774
00:40:13,599 --> 00:40:21,039
guess this is just gonna draw the

775
00:40:15,829 --> 00:40:25,849
current frame always so it's debug state

776
00:40:21,039 --> 00:40:29,179
most recent frame ordinal so it'll grab

777
00:40:25,849 --> 00:40:32,420
that out there and since there's

778
00:40:29,179 --> 00:40:35,329
multiple events that it could draw I'm

779
00:40:32,420 --> 00:40:38,360
not sure again what the right thing is

780
00:40:35,329 --> 00:40:40,190
there to do this is kinda always the

781
00:40:38,360 --> 00:40:42,950
thing what to think about this a little

782
00:40:40,190 --> 00:40:44,179
bit more carefully but I guess we'll

783
00:40:42,949 --> 00:40:45,649
just assume that we're gonna draw

784
00:40:44,179 --> 00:40:48,079
whatever the first one is but that's

785
00:40:45,650 --> 00:40:50,720
kinda that's the like sort of slightly

786
00:40:48,079 --> 00:40:53,210
odd part is really this should now loop

787
00:40:50,719 --> 00:40:54,799
over all of the events because if there

788
00:40:53,210 --> 00:41:01,610
are multiple ones you want to draw them

789
00:40:54,800 --> 00:41:06,320
all presumably right so yeah but anyway

790
00:41:01,610 --> 00:41:09,559
I so will take the route event and we'll

791
00:41:06,320 --> 00:41:12,380
say that most recent events because the

792
00:41:09,559 --> 00:41:15,920
one will draw and then we'll just say

793
00:41:12,380 --> 00:41:20,030
like assuming that there is a route

794
00:41:15,920 --> 00:41:25,639
event there to draw at all we will draw

795
00:41:20,030 --> 00:41:29,560
it and to do that we would just use

796
00:41:25,639 --> 00:41:29,559
Route event profile node

797
00:41:34,889 --> 00:41:38,768
so here's our oldest play back again I

798
00:41:37,449 --> 00:41:41,228
just want to make sure we could still do

799
00:41:38,768 --> 00:41:45,758
this display okay

800
00:41:41,228 --> 00:41:49,149
and you know here's our here's our per

801
00:41:45,759 --> 00:41:52,179
frame you know and here I can drill down

802
00:41:49,150 --> 00:41:55,739
into this one and see like kind of all

803
00:41:52,179 --> 00:42:00,998
the nonsense we were seeing before right

804
00:41:55,739 --> 00:42:08,670
and I can see all this crazy stuff it's

805
00:42:00,998 --> 00:42:18,248
doing get world chunk yeah all right

806
00:42:08,670 --> 00:42:21,729
okay so that's all pretty good that's

807
00:42:18,248 --> 00:42:23,798
all pretty good so I think really mostly

808
00:42:21,728 --> 00:42:27,218
what I need to do now is I need to make

809
00:42:23,798 --> 00:42:29,259
it so that since inside a particular if

810
00:42:27,219 --> 00:42:31,028
you're just jumping in in the middle

811
00:42:29,259 --> 00:42:34,449
right if you're going into a draw

812
00:42:31,028 --> 00:42:36,190
profile and you've got multiple events

813
00:42:34,449 --> 00:42:38,068
in a single frame for this thing and

814
00:42:36,190 --> 00:42:45,130
you're trying to draw like that

815
00:42:38,068 --> 00:42:47,558
occurrence I guess like what you want to

816
00:42:45,130 --> 00:42:51,789
do is know the beginning and end bounds

817
00:42:47,559 --> 00:42:57,009
for that thing so like you know if we

818
00:42:51,789 --> 00:43:00,900
said here is trying to think of what the

819
00:42:57,009 --> 00:43:03,130
most logical way is to do this right

820
00:43:00,900 --> 00:43:06,450
it's it's kind of a really difficult

821
00:43:03,130 --> 00:43:09,160
problem let me just kind of explain why

822
00:43:06,449 --> 00:43:16,509
so what happens is let's say we have

823
00:43:09,159 --> 00:43:18,769
something like get world chunk right

824
00:43:16,510 --> 00:43:20,540
so if we have something like get world

825
00:43:18,769 --> 00:43:23,389
chunk it's gonna happen many times a

826
00:43:20,539 --> 00:43:26,480
frame so inside a single frame here's

827
00:43:23,389 --> 00:43:28,759
just here's like frame zero inside a

828
00:43:26,480 --> 00:43:33,289
single frame we're gonna have like many

829
00:43:28,760 --> 00:43:34,850
calls to this thing so here's call zero

830
00:43:33,289 --> 00:43:38,300
here's called one year's call to vehicle

831
00:43:34,849 --> 00:43:41,599
three whatever so now in the user

832
00:43:38,300 --> 00:43:45,860
interface if I say I want to zoom in to

833
00:43:41,599 --> 00:43:49,579
this call right that's kind of tricky

834
00:43:45,860 --> 00:43:53,360
because that call is not really a grid

835
00:43:49,579 --> 00:43:56,000
it's just the first instance of the get

836
00:43:53,360 --> 00:43:59,420
world chunk call and so if we went to

837
00:43:56,000 --> 00:44:01,789
frame 1 right there may not even have

838
00:43:59,420 --> 00:44:04,039
been a get world chunk on frame 1 or

839
00:44:01,789 --> 00:44:06,619
more to the point let's say we zoomed it

840
00:44:04,039 --> 00:44:10,190
on three maybe there were only two calls

841
00:44:06,619 --> 00:44:14,109
to get world chunk on frame 1 and so now

842
00:44:10,190 --> 00:44:16,429
there isn't even one to view right so

843
00:44:14,110 --> 00:44:18,769
saying we want to zoom in on get world

844
00:44:16,429 --> 00:44:20,690
chunk is like a grid-based thing that

845
00:44:18,769 --> 00:44:22,670
allows us to always no matter what frame

846
00:44:20,690 --> 00:44:24,829
iran we can say here's what we're

847
00:44:22,670 --> 00:44:27,800
viewing but if we want to see a specific

848
00:44:24,829 --> 00:44:29,809
instance of that there really isn't much

849
00:44:27,800 --> 00:44:32,240
of a way for us to do that in a stable

850
00:44:29,809 --> 00:44:34,670
way other than something kind of janky

851
00:44:32,239 --> 00:44:38,239
like just show me the zero with call to

852
00:44:34,670 --> 00:44:42,650
it or something so what I'm thinking we

853
00:44:38,239 --> 00:44:46,579
maybe should do instead is just do like

854
00:44:42,650 --> 00:44:48,680
a pre pass over it and maybe that total

855
00:44:46,579 --> 00:44:51,230
clocks idea for example was a good one

856
00:44:48,679 --> 00:44:53,929
and so what we do is we'd say all right

857
00:44:51,230 --> 00:44:55,869
let's take the total clocks and we'll

858
00:44:53,929 --> 00:44:59,569
just string these things end-to-end

859
00:44:55,869 --> 00:45:01,699
right so so we'll condense all the calls

860
00:44:59,570 --> 00:45:03,320
for get rid chunk down and so when you

861
00:45:01,699 --> 00:45:04,819
get world chunk you can't view just a

862
00:45:03,320 --> 00:45:06,590
single get world chunk all you're gonna

863
00:45:04,820 --> 00:45:10,130
view all of the get world chunk calls

864
00:45:06,590 --> 00:45:14,420
and we'll collapse them into one like

865
00:45:10,130 --> 00:45:17,090
viewable one thing it's not the world's

866
00:45:14,420 --> 00:45:19,070
best idea right I'm not claiming that it

867
00:45:17,090 --> 00:45:22,700
is but it's just I think that's maybe

868
00:45:19,070 --> 00:45:26,000
what we should do and so in order to do

869
00:45:22,699 --> 00:45:28,219
that what I would say is as we go

870
00:45:26,000 --> 00:45:30,318
through these and we get profile notes

871
00:45:28,219 --> 00:45:32,629
for them we can sort of sum up

872
00:45:30,318 --> 00:45:34,639
total duration and when I could do two

873
00:45:32,630 --> 00:45:36,829
is I probably could just get rid of that

874
00:45:34,639 --> 00:45:38,298
from here because doing a pre Passover

875
00:45:36,829 --> 00:45:40,309
it probably isn't the end of the world

876
00:45:38,298 --> 00:45:41,568
I'm guessing because the amount of time

877
00:45:40,309 --> 00:45:43,430
it takes to go through them and draw

878
00:45:41,568 --> 00:45:46,639
them is going to be the substantial part

879
00:45:43,429 --> 00:45:50,228
anyway but we could also do it during

880
00:45:46,639 --> 00:45:55,219
collation right that's also totally a

881
00:45:50,228 --> 00:45:56,268
plausible thing to do so yeah so let me

882
00:45:55,219 --> 00:45:58,400
take a quick look at what that would

883
00:45:56,268 --> 00:46:00,978
look like we've got total clocks here

884
00:45:58,400 --> 00:46:02,599
and inside the profile nodes themselves

885
00:46:00,978 --> 00:46:05,268
I just want to refresh my memory as to

886
00:46:02,599 --> 00:46:07,489
what we're actually storing there so

887
00:46:05,268 --> 00:46:10,068
inside the profile nodes themselves we

888
00:46:07,489 --> 00:46:12,650
just store the duration and that's in

889
00:46:10,068 --> 00:46:14,358
clocks right and so what I could do is

890
00:46:12,650 --> 00:46:16,880
just say there's a total clocks value

891
00:46:14,358 --> 00:46:18,798
for any one of these things that that

892
00:46:16,880 --> 00:46:20,719
occurs in here I suppose that could also

893
00:46:18,798 --> 00:46:22,130
be you thirty-two as well although there

894
00:46:20,719 --> 00:46:24,679
I suppose there's no real reason for it

895
00:46:22,130 --> 00:46:31,969
so we'll leave it as a su 64 at the

896
00:46:24,679 --> 00:46:33,889
moment yeah and I wonder it we're never

897
00:46:31,969 --> 00:46:35,630
using the aggregate count at the moment

898
00:46:33,889 --> 00:46:37,868
right so we could get rid of that as

899
00:46:35,630 --> 00:46:37,869
well

900
00:46:46,150 --> 00:46:52,450
and then what we could do is keep all of

901
00:46:48,070 --> 00:46:55,809
them all of those in you 64's because

902
00:46:52,449 --> 00:46:59,289
now it's the same amount of space right

903
00:46:55,809 --> 00:47:00,880
the this part right here we could

904
00:46:59,289 --> 00:47:08,009
actually keep these both that's you 60

905
00:47:00,880 --> 00:47:10,180
for us as well just in case it's long

906
00:47:08,010 --> 00:47:12,100
now the parent real to I think we

907
00:47:10,179 --> 00:47:13,179
really would prefer to keep his uses for

908
00:47:12,099 --> 00:47:14,980
as well so I think I'm just going to go

909
00:47:13,179 --> 00:47:17,259
ahead and make that happen and then

910
00:47:14,980 --> 00:47:20,619
we've basically got a you 32 here that's

911
00:47:17,260 --> 00:47:22,330
reserved so we could actually keep the

912
00:47:20,619 --> 00:47:26,858
since I expand that we could actually

913
00:47:22,329 --> 00:47:27,880
keep the the Agron in if we want to

914
00:47:26,858 --> 00:47:30,670
we're just not using it yet so I'm not

915
00:47:27,880 --> 00:47:31,960
going to bother so here I'll just say

916
00:47:30,670 --> 00:47:34,510
might as well keep this at full

917
00:47:31,960 --> 00:47:36,880
precision just in case

918
00:47:34,510 --> 00:47:48,310
so let's not actually cast that down

919
00:47:36,880 --> 00:47:58,150
anymore and yeah so this will actually

920
00:47:48,309 --> 00:48:00,539
just not get casted and I think that's

921
00:47:58,150 --> 00:48:00,539
good

922
00:48:06,068 --> 00:48:14,929
all right so let's take a look your next

923
00:48:09,409 --> 00:48:16,818
step I'm almost out of time so yeah so

924
00:48:14,929 --> 00:48:20,899
next step is to keep those total clocks

925
00:48:16,818 --> 00:48:36,829
I think seems reasonable so let's take a

926
00:48:20,900 --> 00:48:40,039
look at total clocks and where we would

927
00:48:36,829 --> 00:48:44,449
do that right is when something gets

928
00:48:40,039 --> 00:48:47,269
added when we do a store event we're

929
00:48:44,449 --> 00:48:51,438
adding it into the you know wherever the

930
00:48:47,268 --> 00:48:55,268
frame index actually is and so when we

931
00:48:51,438 --> 00:49:00,528
do that that pull this part right here

932
00:48:55,268 --> 00:49:02,328
give a government frame that's actually

933
00:49:00,528 --> 00:49:09,079
what we would need to be incrementing

934
00:49:02,329 --> 00:49:11,449
and so I don't know I don't know if we

935
00:49:09,079 --> 00:49:13,489
have that information at the time of

936
00:49:11,449 --> 00:49:16,009
storage so I think we're probably going

937
00:49:13,489 --> 00:49:18,369
to have to reverse look it up if that

938
00:49:16,009 --> 00:49:18,369
makes sense

939
00:49:18,909 --> 00:49:22,639
so this is why I say maybe we want to do

940
00:49:21,559 --> 00:49:24,619
it after the fact

941
00:49:22,639 --> 00:49:26,598
I'm not sure because I'm not sure if

942
00:49:24,619 --> 00:49:28,789
it's going to be easy for us to do it

943
00:49:26,599 --> 00:49:32,329
the time when we know the duration is

944
00:49:28,789 --> 00:49:36,319
here so adding the total clocks would

945
00:49:32,329 --> 00:49:39,048
mean we'd have to add it here and I'm

946
00:49:36,318 --> 00:49:41,630
not sure I mean I guess we kind of know

947
00:49:39,048 --> 00:49:46,670
the information that we need but it's a

948
00:49:41,630 --> 00:49:48,410
little inconvenient right we don't have

949
00:49:46,670 --> 00:49:57,409
the element we'd have to look up the

950
00:49:48,409 --> 00:50:00,108
element again you know or store the

951
00:49:57,409 --> 00:50:02,688
element so I think I'm just gonna skip

952
00:50:00,108 --> 00:50:06,259
it I think I'm just gonna say let's not

953
00:50:02,688 --> 00:50:07,728
do that for now maybe that's a dumb idea

954
00:50:06,259 --> 00:50:09,978
but like I said it just looks a little

955
00:50:07,728 --> 00:50:11,478
cumbersome to keep that information so I

956
00:50:09,978 --> 00:50:14,538
think I'm just going to delete that for

957
00:50:11,478 --> 00:50:17,079
now and so what we could do is actually

958
00:50:14,539 --> 00:50:20,660
just have a way of computing

959
00:50:17,079 --> 00:50:23,690
meaning we can spend some processor time

960
00:50:20,659 --> 00:50:27,289
to get the same information and it just

961
00:50:23,690 --> 00:50:30,110
be a really trivial routine so like you

962
00:50:27,289 --> 00:50:33,340
know all we would have to do is have

963
00:50:30,110 --> 00:50:42,019
something that's like get total Fox and

964
00:50:33,340 --> 00:50:46,760
we'd pass debug element rain and this

965
00:50:42,019 --> 00:50:50,170
would just do oops force of habit

966
00:50:46,760 --> 00:50:55,790
debug stored event event equals frame

967
00:50:50,170 --> 00:51:03,170
oldest event events events equals events

968
00:50:55,789 --> 00:51:07,190
next and I guess this is just literally

969
00:51:03,170 --> 00:51:10,639
regular next right and then we would say

970
00:51:07,190 --> 00:51:15,039
frame total or rather you should get

971
00:51:10,639 --> 00:51:20,449
four result equals zero result equals

972
00:51:15,039 --> 00:51:25,849
plus equals event profile new duration

973
00:51:20,449 --> 00:51:27,980
and then we would return that result so

974
00:51:25,849 --> 00:51:31,909
now if someone wants the total clocks

975
00:51:27,980 --> 00:51:32,900
they can get the total clocks relatively

976
00:51:31,909 --> 00:51:37,219
simply

977
00:51:32,900 --> 00:51:41,180
so in here if we want to do the debug

978
00:51:37,219 --> 00:51:43,129
profile lining things up like that what

979
00:51:41,179 --> 00:51:47,289
we can do is say let get me the total

980
00:51:43,130 --> 00:51:47,289
clocks for this frame

981
00:51:54,980 --> 00:52:15,269
like so and once we have that then we

982
00:52:11,969 --> 00:52:18,929
can actually loop over these and draw

983
00:52:15,269 --> 00:52:22,650
them like as a set that would be the

984
00:52:18,929 --> 00:52:24,149
same that would happen outside but then

985
00:52:22,650 --> 00:52:28,730
what we do is we'd say stored event

986
00:52:24,150 --> 00:52:32,130
event equals root frame oldest event

987
00:52:28,730 --> 00:52:35,670
this is the exact same loop event goes

988
00:52:32,130 --> 00:52:38,220
event next and then in here the root

989
00:52:35,670 --> 00:52:40,070
node of the thing or I'm not gonna even

990
00:52:38,219 --> 00:52:47,699
call it root node probably at this point

991
00:52:40,070 --> 00:52:49,289
also this can happen at here as well is

992
00:52:47,699 --> 00:52:55,169
just gonna be whatever this events

993
00:52:49,289 --> 00:52:56,909
profile there it is and this I guess

994
00:52:55,170 --> 00:52:59,690
this actually all of this stuff actually

995
00:52:56,909 --> 00:52:59,690
can happen out here too

996
00:53:01,710 --> 00:53:06,000
when we do deep a profile node we grab

997
00:53:04,289 --> 00:53:08,340
out the profile node that's for this

998
00:53:06,000 --> 00:53:10,050
event and then we would draw it and so

999
00:53:08,340 --> 00:53:12,600
the only thing that we have to do now is

1000
00:53:10,050 --> 00:53:15,440
make sub rectangles out of this that

1001
00:53:12,599 --> 00:53:19,019
stack up based on how many of these

1002
00:53:15,440 --> 00:53:22,230
events there are right how much the

1003
00:53:19,019 --> 00:53:25,590
duration is right and so what I want to

1004
00:53:22,230 --> 00:53:30,719
do is take whatever my profile rect is

1005
00:53:25,590 --> 00:53:32,789
and just subdivide it so what I would do

1006
00:53:30,719 --> 00:53:37,368
is say okay there's going to be a new

1007
00:53:32,789 --> 00:53:39,389
rectangle to which is the event rect and

1008
00:53:37,369 --> 00:53:45,450
that's gonna be equal to the profile

1009
00:53:39,389 --> 00:53:47,460
rect and to pass that down at the moment

1010
00:53:45,449 --> 00:53:49,639
let me just run this and make sure it

1011
00:53:47,460 --> 00:53:49,639
works

1012
00:53:55,909 --> 00:54:05,759
just want to make sure this stuff still

1013
00:53:57,869 --> 00:54:07,430
works okay and so then what we want to

1014
00:54:05,759 --> 00:54:11,190
do is as we're looping over these

1015
00:54:07,429 --> 00:54:12,778
profile nodes to draw them what I want

1016
00:54:11,190 --> 00:54:16,920
to do is I want to change the event Rex

1017
00:54:12,778 --> 00:54:20,548
that we're using to basically like only

1018
00:54:16,920 --> 00:54:23,818
be stacked up for did not have any space

1019
00:54:20,548 --> 00:54:27,958
in between it right so the first event

1020
00:54:23,818 --> 00:54:33,048
rect and I guess I'll do like min

1021
00:54:27,958 --> 00:54:33,048
o'clock or whatever or relative o'clock

1022
00:54:33,349 --> 00:54:41,369
so the first event rect is going to be

1023
00:54:38,150 --> 00:54:43,559
at the you know at the leftmost edge and

1024
00:54:41,369 --> 00:54:46,979
then I want to like advance it every

1025
00:54:43,559 --> 00:54:51,329
time we go by however much clocks that

1026
00:54:46,978 --> 00:54:52,858
particular event took so I'm gonna do

1027
00:54:51,329 --> 00:54:54,979
that I'm going to compute it every time

1028
00:54:52,858 --> 00:54:57,389
so we don't end up getting off by

1029
00:54:54,978 --> 00:55:00,558
accumulation rounding because these

1030
00:54:57,389 --> 00:55:04,739
could be very like tiny things happening

1031
00:55:00,559 --> 00:55:07,739
so I want the event rect min X and I

1032
00:55:04,739 --> 00:55:10,199
want the event rect max X to be set and

1033
00:55:07,739 --> 00:55:17,699
what I want to do is set those based on

1034
00:55:10,199 --> 00:55:20,759
the profile rect itself based on its

1035
00:55:17,699 --> 00:55:23,159
size and relative view their relative

1036
00:55:20,759 --> 00:55:28,079
clocks right so what I want to do is say

1037
00:55:23,159 --> 00:55:37,548
like profile rect min X plus profile

1038
00:55:28,079 --> 00:55:37,548
rect max X in both cases and oops

1039
00:55:40,260 --> 00:55:46,920
yeah in both cases what I want to do is

1040
00:55:43,800 --> 00:55:49,920
is just create sort of a that that

1041
00:55:46,920 --> 00:55:53,430
standard linear interpolation so I want

1042
00:55:49,920 --> 00:56:05,730
to do basically like a 1 minus T kind of

1043
00:55:53,429 --> 00:56:09,509
thing T in both cases so the first T is

1044
00:56:05,730 --> 00:56:18,090
just going to be whatever this relative

1045
00:56:09,510 --> 00:56:20,400
clock is in the parents total space

1046
00:56:18,090 --> 00:56:21,510
right and we know what the total space

1047
00:56:20,400 --> 00:56:24,119
is this right here

1048
00:56:21,510 --> 00:56:26,910
so whatever the relative clock is over

1049
00:56:24,119 --> 00:56:29,869
the total clock is what we want and we

1050
00:56:26,909 --> 00:56:34,500
want those things to be divided to

1051
00:56:29,869 --> 00:56:37,710
divide out we're losing a fair bit of

1052
00:56:34,500 --> 00:56:39,989
precision here and we could do this in

1053
00:56:37,710 --> 00:56:41,519
double potentially if we wanted to try

1054
00:56:39,989 --> 00:56:48,179
and be a little bit better right we

1055
00:56:41,519 --> 00:56:50,579
could do this if we wanted to and you

1056
00:56:48,179 --> 00:56:52,230
know maybe that's a good idea so since

1057
00:56:50,579 --> 00:56:53,849
we're just doing one divide it really

1058
00:56:52,230 --> 00:56:56,400
wouldn't be particularly expensive on

1059
00:56:53,849 --> 00:57:00,949
any machine weird ebbing on to do the

1060
00:56:56,400 --> 00:57:07,619
divide and double so you know off we go

1061
00:57:00,949 --> 00:57:08,909
excuse me so once we do that right you

1062
00:57:07,619 --> 00:57:12,960
can kind of see where I'm going with

1063
00:57:08,909 --> 00:57:14,429
this we know that every time our min X

1064
00:57:12,960 --> 00:57:16,500
the next time through is going to be

1065
00:57:14,429 --> 00:57:19,409
equal to whatever our max X was the

1066
00:57:16,500 --> 00:57:22,710
previous time so what I can do is make

1067
00:57:19,409 --> 00:57:25,199
like an X X kind of a thing and we would

1068
00:57:22,710 --> 00:57:27,030
just start that out that profile rect

1069
00:57:25,199 --> 00:57:28,949
min X because we know that that's what's

1070
00:57:27,030 --> 00:57:30,540
going to be and then each time through

1071
00:57:28,949 --> 00:57:34,500
here we just do next

1072
00:57:30,539 --> 00:57:37,619
x equals event rect dot max X or

1073
00:57:34,500 --> 00:57:41,280
something like that right and then that

1074
00:57:37,619 --> 00:57:45,380
way we only compute it once each one of

1075
00:57:41,280 --> 00:57:47,970
those once and so this is always next X

1076
00:57:45,380 --> 00:57:50,280
so now we only have to do one of those

1077
00:57:47,969 --> 00:57:52,108
we do the divide to figure out where

1078
00:57:50,280 --> 00:57:53,670
this is going to be on the relative

1079
00:57:52,108 --> 00:57:55,679
clock and we go

1080
00:57:53,670 --> 00:57:58,260
now the relative clock of course has to

1081
00:57:55,679 --> 00:58:00,899
be advanced by however much this event

1082
00:57:58,260 --> 00:58:02,970
actually is like however many clocks it

1083
00:58:00,900 --> 00:58:06,599
actually took we want to move forward by

1084
00:58:02,969 --> 00:58:14,308
that amount and that tells us where like

1085
00:58:06,599 --> 00:58:15,690
our sort of new location is now we might

1086
00:58:14,309 --> 00:58:17,369
not have to keep that because we have

1087
00:58:15,690 --> 00:58:20,010
our parent relative clock in here as

1088
00:58:17,369 --> 00:58:21,660
well so we could just use the parent

1089
00:58:20,010 --> 00:58:23,819
relative clock to tell us that piece of

1090
00:58:21,659 --> 00:58:25,379
information I suppose no we can't

1091
00:58:23,818 --> 00:58:26,849
because that's actually telling us the

1092
00:58:25,380 --> 00:58:38,030
full spaced out version which we don't

1093
00:58:26,849 --> 00:58:38,030
want so this looks roughly correct okay

1094
00:58:44,030 --> 00:58:47,300
so I don't actually know that I have a

1095
00:58:45,980 --> 00:58:50,530
particularly good test case for this

1096
00:58:47,300 --> 00:58:53,090
unfortunately either which isn't great

1097
00:58:50,530 --> 00:58:58,820
but at least we didn't break anything so

1098
00:58:53,090 --> 00:59:03,309
that's nice what I could do well you

1099
00:58:58,820 --> 00:59:07,460
know what I could do I could go down

1100
00:59:03,309 --> 00:59:10,400
into the game part of the game and look

1101
00:59:07,460 --> 00:59:12,349
in here and see if I can like look at a

1102
00:59:10,400 --> 00:59:15,430
particular one of these and they should

1103
00:59:12,349 --> 00:59:17,779
be stacked up on each other of course

1104
00:59:15,429 --> 00:59:19,429
there's probably nothing actually

1105
00:59:17,780 --> 00:59:21,200
happening inside them so that doesn't

1106
00:59:19,429 --> 00:59:22,429
really help should probably construct

1107
00:59:21,199 --> 00:59:24,949
some kind of a test case to actually

1108
00:59:22,429 --> 00:59:27,529
view that but that's I believe what we

1109
00:59:24,949 --> 00:59:29,599
actually want to do and the same thing

1110
00:59:27,530 --> 00:59:31,850
is going to be true over here meaning

1111
00:59:29,599 --> 00:59:34,789
this we would want to do exactly the

1112
00:59:31,849 --> 00:59:37,329
same code basically all right I think

1113
00:59:34,789 --> 00:59:37,329
I'm out of time

1114
00:59:50,420 --> 00:59:53,500
so I'm gonna go to Q&amp;A

1115
01:00:01,539 --> 01:00:04,869
in savate asked a very provocative

1116
01:00:03,938 --> 01:00:07,958
question

1117
01:00:04,869 --> 01:00:10,119
it said relationship status it's

1118
01:00:07,958 --> 01:00:14,768
complicated for the movement to be its

1119
01:00:10,119 --> 01:00:18,479
own main function inside and who can

1120
01:00:14,768 --> 01:00:18,478
treat agree with that I mean that's

1121
01:01:11,099 --> 01:01:20,880
doesn't look like queue so I can go eat

1122
01:01:16,349 --> 01:01:23,659
dinner guess what that means I can go

1123
01:01:20,880 --> 01:01:23,660
eat dinner

1124
01:01:29,449 --> 01:01:32,960
see you got your reasons for what's so

1125
01:01:31,429 --> 01:01:34,368
bad with a new debug view isn't this

1126
01:01:32,960 --> 01:01:38,539
still way for your tries on typical 3d

1127
01:01:34,369 --> 01:01:41,358
game yes so just to be clear I don't

1128
01:01:38,539 --> 01:01:44,808
think any of that slowness is rendering

1129
01:01:41,358 --> 01:01:48,650
related meaning like I'm pretty sure

1130
01:01:44,809 --> 01:01:50,180
that there's nothing stressing the

1131
01:01:48,650 --> 01:01:53,720
graphics card there I mean I could be

1132
01:01:50,179 --> 01:01:55,669
wrong but I'm I would be shocked the

1133
01:01:53,719 --> 01:01:57,919
problem is the way that we have set up

1134
01:01:55,670 --> 01:02:00,500
the render at the moment we don't have

1135
01:01:57,920 --> 01:02:04,900
any way of pushing like a huge set of

1136
01:02:00,500 --> 01:02:07,969
rectangles down in a nice coherent chunk

1137
01:02:04,900 --> 01:02:12,079
so what's actually happening for every

1138
01:02:07,969 --> 01:02:14,779
single rectangle draw is it's like

1139
01:02:12,079 --> 01:02:17,269
creating a record under the debug I mean

1140
01:02:14,780 --> 01:02:20,829
on to the render group right and that is

1141
01:02:17,269 --> 01:02:23,869
getting shoved down to OpenGL as OpenGL

1142
01:02:20,829 --> 01:02:25,609
immediate calls which is then getting

1143
01:02:23,869 --> 01:02:27,530
assembled into a buffer by the graphics

1144
01:02:25,608 --> 01:02:29,058
card which is then like buffering it up

1145
01:02:27,530 --> 01:02:31,640
and something that it's like it's gonna

1146
01:02:29,059 --> 01:02:33,290
be a big it's really really inefficient

1147
01:02:31,639 --> 01:02:38,118
how it's currently sending those down

1148
01:02:33,289 --> 01:02:41,029
and so we don't ever see that happening

1149
01:02:38,119 --> 01:02:43,309
with any of our game code and the reason

1150
01:02:41,030 --> 01:02:45,548
for that is because the game is about

1151
01:02:43,309 --> 01:02:48,589
drawing like sprites so there's very few

1152
01:02:45,548 --> 01:02:51,380
vertices and lots of texture right

1153
01:02:48,588 --> 01:02:56,659
that's how that works

1154
01:02:51,380 --> 01:02:58,940
and so it's deceptive because then it's

1155
01:02:56,659 --> 01:03:01,039
like oh it looks like the rendering is

1156
01:02:58,940 --> 01:03:02,599
slow here when we draw lots of

1157
01:03:01,039 --> 01:03:06,349
rectangles but it's actually not

1158
01:03:02,599 --> 01:03:08,359
rendering slow it's just the conduit is

1159
01:03:06,349 --> 01:03:12,640
slow because it's not set up for this

1160
01:03:08,358 --> 01:03:12,639
purpose and if we wanted to improve that

1161
01:03:14,798 --> 01:03:25,219
we actually could right we could make a

1162
01:03:20,989 --> 01:03:26,479
special path just for drawing lots and

1163
01:03:25,219 --> 01:03:29,328
lots of rectangles and then it would

1164
01:03:26,480 --> 01:03:31,909
probably find right we just have some

1165
01:03:29,329 --> 01:03:34,579
big vertex buffer and we'd write

1166
01:03:31,909 --> 01:03:36,710
directly we'd say like begin chunk of

1167
01:03:34,579 --> 01:03:39,680
rectangles we'd write all the rectangles

1168
01:03:36,710 --> 01:03:42,318
into there and issue them all as one big

1169
01:03:39,679 --> 01:03:43,039
batch and then there'd be no copies we

1170
01:03:42,318 --> 01:03:45,349
wouldn't need

1171
01:03:43,039 --> 01:03:47,449
a lot of memory on our debug on our

1172
01:03:45,349 --> 01:03:58,579
render grip for it either and that would

1173
01:03:47,449 --> 01:04:01,189
be fine right bougie Oh 8:15 will you

1174
01:03:58,579 --> 01:04:04,610
make the UI immediate mode the UI

1175
01:04:01,190 --> 01:04:06,230
already is immediate mode dude in

1176
01:04:04,610 --> 01:04:08,420
basement 1 will the demographics

1177
01:04:06,230 --> 01:04:11,929
graphing update even if the game is

1178
01:04:08,420 --> 01:04:14,000
paused yes and unfortunately we don't

1179
01:04:11,929 --> 01:04:15,769
even turn off debug recording right now

1180
01:04:14,000 --> 01:04:18,650
which we're going to have to do we need

1181
01:04:15,769 --> 01:04:29,449
a way to pause that it's one of the

1182
01:04:18,650 --> 01:04:30,740
things we need to do long boolean right

1183
01:04:29,449 --> 01:04:32,299
now the outlines and the profiler

1184
01:04:30,739 --> 01:04:34,789
overlap each other it makes it a little

1185
01:04:32,300 --> 01:04:35,990
harder to make out the colors or the

1186
01:04:34,789 --> 01:04:37,730
change to run to the other the obvious

1187
01:04:35,989 --> 01:04:41,029
solution would be to draw them with a

1188
01:04:37,730 --> 01:04:42,199
slight offset from last each time but

1189
01:04:41,030 --> 01:04:44,240
there any problems with that once the

1190
01:04:42,199 --> 01:04:45,769
rectangles get really small I think in

1191
01:04:44,239 --> 01:04:47,539
general nothing you do is going to work

1192
01:04:45,769 --> 01:04:49,429
when the rectangles get really small so

1193
01:04:47,539 --> 01:04:50,809
I think most of that is really just

1194
01:04:49,429 --> 01:04:53,029
about when you have lots of small

1195
01:04:50,809 --> 01:04:54,320
rectangles you need to like have a level

1196
01:04:53,030 --> 01:04:56,810
of detail solution there which I don't

1197
01:04:54,320 --> 01:04:58,370
know if we're gonna do but you know if

1198
01:04:56,809 --> 01:05:00,079
you were gonna try to keep pursuing this

1199
01:04:58,369 --> 01:05:02,329
to make oh like a really really fancy

1200
01:05:00,079 --> 01:05:03,289
system you would want to do that you

1201
01:05:02,329 --> 01:05:08,779
would want to have some level of detail

1202
01:05:03,289 --> 01:05:10,369
there is our current types up code

1203
01:05:08,780 --> 01:05:13,240
framerate independent will the game

1204
01:05:10,369 --> 01:05:18,079
simulation run the same at any framerate

1205
01:05:13,239 --> 01:05:18,979
so the current code is like well first

1206
01:05:18,079 --> 01:05:21,769
of all there's another thing as

1207
01:05:18,980 --> 01:05:23,360
framerate independent code literally

1208
01:05:21,769 --> 01:05:27,309
I've never heard of a single thing

1209
01:05:23,360 --> 01:05:27,309
that's ever been framerate independent

1210
01:05:27,429 --> 01:05:33,250
you are always frame rate in dependent

1211
01:05:30,710 --> 01:05:36,619
and the question is just to what degree

1212
01:05:33,250 --> 01:05:38,869
right now I would say we are not not

1213
01:05:36,619 --> 01:05:41,960
particularly framerate dependent meaning

1214
01:05:38,869 --> 01:05:45,039
you could get basically the same results

1215
01:05:41,960 --> 01:05:49,010
with a fairly wide range of frame rates

1216
01:05:45,039 --> 01:05:52,880
however eventually that would break

1217
01:05:49,010 --> 01:05:54,680
right because we don't for example if

1218
01:05:52,880 --> 01:05:56,838
your framerate got extremely low like

1219
01:05:54,679 --> 01:05:59,629
let's say one frame every five

1220
01:05:56,838 --> 01:06:02,469
seconds we don't subsample the input at

1221
01:05:59,630 --> 01:06:06,528
all so you move like in these huge steps

1222
01:06:02,469 --> 01:06:08,690
right and you would never really be able

1223
01:06:06,528 --> 01:06:11,420
to probably do most stuff like firing

1224
01:06:08,690 --> 01:06:14,690
would be hard to do and moving would be

1225
01:06:11,420 --> 01:06:17,568
hard to do and so on similarly you could

1226
01:06:14,690 --> 01:06:21,950
if you cranked a frame right up so high

1227
01:06:17,568 --> 01:06:23,838
that the frame time rounded down to too

1228
01:06:21,949 --> 01:06:25,879
small to actually accumulate any

1229
01:06:23,838 --> 01:06:29,989
movement we would break there as well

1230
01:06:25,880 --> 01:06:31,789
and that's true basically every game

1231
01:06:29,989 --> 01:06:35,778
loop that I've ever seen in any game

1232
01:06:31,789 --> 01:06:38,539
ever so usually what you do is outside

1233
01:06:35,778 --> 01:06:40,159
the game code itself you cap the frame

1234
01:06:38,539 --> 01:06:41,989
rate on either end and you basically say

1235
01:06:40,159 --> 01:06:43,368
we're never gonna let it run it less

1236
01:06:41,989 --> 01:06:46,478
than one frame a second and we're never

1237
01:06:43,369 --> 01:06:50,318
gonna let it run it more than you know a

1238
01:06:46,478 --> 01:06:50,318
thousand frames a second or something

1239
01:06:53,469 --> 01:06:58,999
Zen mystic are we going to do the batch

1240
01:06:56,239 --> 01:07:00,739
way then now probably not I mean I don't

1241
01:06:58,998 --> 01:07:03,018
care about this how fast this code runs

1242
01:07:00,739 --> 01:07:05,539
at all right I just want the profiler

1243
01:07:03,018 --> 01:07:09,968
there so I can see what's going on with

1244
01:07:05,539 --> 01:07:13,400
the game all the time and spot problems

1245
01:07:09,969 --> 01:07:15,818
you know so that I'm not like clueless

1246
01:07:13,400 --> 01:07:15,818
about it

1247
01:07:22,679 --> 01:07:27,159
dude in basement one off-topic have you

1248
01:07:25,480 --> 01:07:34,240
ever defined structures inside of

1249
01:07:27,159 --> 01:07:38,019
functions no because when I like like

1250
01:07:34,239 --> 01:07:42,669
sort of when I was still changing my C's

1251
01:07:38,019 --> 01:07:46,690
plus plus and C Styles around you

1252
01:07:42,670 --> 01:07:50,019
weren't allowed to that's not like legal

1253
01:07:46,690 --> 01:07:53,889
like so if you had tried back when I was

1254
01:07:50,019 --> 01:07:59,920
still like one of my coding subs was

1255
01:07:53,889 --> 01:08:03,039
still in flux you couldn't do this like

1256
01:07:59,920 --> 01:08:05,019
that's not allowed so nowadays you can

1257
01:08:03,039 --> 01:08:07,150
and I've never really gone back and

1258
01:08:05,019 --> 01:08:09,429
thought do I want to do that somewhere

1259
01:08:07,150 --> 01:08:11,530
so there might have been times when I

1260
01:08:09,429 --> 01:08:14,199
would want to do that and I just never

1261
01:08:11,530 --> 01:08:20,470
even think of it because I'm so used to

1262
01:08:14,199 --> 01:08:25,949
it being illegal if that makes sense I

1263
01:08:20,470 --> 01:08:25,949
don't know why it was ever illegal

1264
01:08:26,100 --> 01:08:31,329
because it seems like the compiler

1265
01:08:29,199 --> 01:08:33,760
doesn't really have to do any work to

1266
01:08:31,329 --> 01:08:38,890
make that happen it's a really basic

1267
01:08:33,760 --> 01:08:40,210
thing but I guess maybe for debug

1268
01:08:38,890 --> 01:08:41,980
information it's a little complicated

1269
01:08:40,210 --> 01:08:45,310
because now it means you have scoped

1270
01:08:41,979 --> 01:08:47,979
types which before you didn't and for so

1271
01:08:45,310 --> 01:08:51,270
I could from code for producing code I

1272
01:08:47,979 --> 01:08:53,769
can't imagine why it would ever be

1273
01:08:51,270 --> 01:08:57,760
really a big any big deal with the

1274
01:08:53,770 --> 01:08:58,960
compiler at all but for debug info I

1275
01:08:57,760 --> 01:09:01,088
guess it does make the debugging feel a

1276
01:08:58,960 --> 01:09:02,770
little more complicated because now your

1277
01:09:01,088 --> 01:09:07,979
types have to have to be linked to the

1278
01:09:02,770 --> 01:09:07,980
scope instead of them just being global

1279
01:09:17,100 --> 01:09:22,199
six degrees of game rate gaming is there

1280
01:09:20,198 --> 01:09:25,678
any advantage to making physics

1281
01:09:22,198 --> 01:09:30,399
dependent on frame rate other than

1282
01:09:25,679 --> 01:09:32,920
convenience well generally speaking if

1283
01:09:30,399 --> 01:09:34,988
you have a very physics II game with a

1284
01:09:32,920 --> 01:09:37,509
lot of fancy physics code going on in it

1285
01:09:34,988 --> 01:09:40,448
typically you want to lock that down to

1286
01:09:37,509 --> 01:09:42,189
a predictable time step because physics

1287
01:09:40,448 --> 01:09:46,000
can be very time step sensitive and you

1288
01:09:42,189 --> 01:09:49,868
don't generally want to run at greater

1289
01:09:46,000 --> 01:09:52,509
than or less than the standard testing

1290
01:09:49,868 --> 01:09:54,729
framerate so typically what I've seen

1291
01:09:52,509 --> 01:09:58,029
games do if they're very physics II is

1292
01:09:54,729 --> 01:10:00,609
they always run the physics at its given

1293
01:09:58,029 --> 01:10:02,139
time step like whatever that is a

1294
01:10:00,609 --> 01:10:04,479
hundred and twenty frames a second let's

1295
01:10:02,139 --> 01:10:06,850
say they'll always do that many updates

1296
01:10:04,479 --> 01:10:08,529
of the physics and then when they render

1297
01:10:06,850 --> 01:10:10,389
if they'll just render whatever the most

1298
01:10:08,529 --> 01:10:14,139
recent one is or an interpolation

1299
01:10:10,389 --> 01:10:17,590
between the two most recent ones or

1300
01:10:14,139 --> 01:10:21,368
something like that so a lot of times

1301
01:10:17,590 --> 01:10:23,079
what I've seen is games don't want to

1302
01:10:21,368 --> 01:10:24,849
have variable physics frame rates and

1303
01:10:23,079 --> 01:10:28,750
the reason for that as physics is very

1304
01:10:24,850 --> 01:10:30,010
sensitive to the frame rate and you

1305
01:10:28,750 --> 01:10:32,109
really don't want the game to change

1306
01:10:30,010 --> 01:10:33,639
that much with a game like handmade hero

1307
01:10:32,109 --> 01:10:35,679
where it's not about like a lots of

1308
01:10:33,639 --> 01:10:37,449
complex physical interactions between

1309
01:10:35,679 --> 01:10:40,899
like 3d rigid bodies and other stuff

1310
01:10:37,448 --> 01:10:43,839
like that you can typically make the

1311
01:10:40,899 --> 01:10:45,759
game feel roughly the same with within a

1312
01:10:43,840 --> 01:10:48,670
pretty wide tolerance from like 15

1313
01:10:45,760 --> 01:10:51,250
frames second to 120 frames a second the

1314
01:10:48,670 --> 01:10:52,779
game will will still the behavior of the

1315
01:10:51,250 --> 01:10:56,069
game in general will still be roughly

1316
01:10:52,779 --> 01:10:58,479
consistent by just using basic

1317
01:10:56,069 --> 01:11:01,750
techniques but that's not true of

1318
01:10:58,479 --> 01:11:06,928
complex physics usually they tend to

1319
01:11:01,750 --> 01:11:06,929
diverge quite a bit so

1320
01:11:18,020 --> 01:11:25,340
all right I think we're done here I

1321
01:11:21,710 --> 01:11:25,340
think we are done here

1322
01:11:25,369 --> 01:11:29,029
i'ma wrap it up

1323
01:11:33,350 --> 01:11:37,140
thank you everybody for joining me for

1324
01:11:35,850 --> 01:11:38,039
another set of handmade here oh it's

1325
01:11:37,140 --> 01:11:39,869
been a pipe of cutting with you as

1326
01:11:38,039 --> 01:11:42,029
always if you would like to follow along

1327
01:11:39,869 --> 01:11:43,619
with the code at home you can always

1328
01:11:42,029 --> 01:11:46,199
pre-order the game on hand mahira org

1329
01:11:43,619 --> 01:11:48,779
and it comes with source code which I

1330
01:11:46,199 --> 01:11:51,539
update every night for your experimental

1331
01:11:48,779 --> 01:11:54,029
pleasures sounds a little weird if I say

1332
01:11:51,539 --> 01:11:55,319
it that way anyway we also a form you

1333
01:11:54,029 --> 01:11:56,579
can go to ask question a patreon page

1334
01:11:55,319 --> 01:11:57,989
you want support video series and a

1335
01:11:56,579 --> 01:11:58,949
tweet bot which tweets schedule at you

1336
01:11:57,989 --> 01:12:00,960
if you want to know where we're gonna be

1337
01:11:58,949 --> 01:12:03,359
live and we are going to be live 5:00

1338
01:12:00,960 --> 01:12:06,480
p.m. Pacific Daylight Time tomorrow for

1339
01:12:03,359 --> 01:12:08,099
the last stream of the week you don't

1340
01:12:06,479 --> 01:12:09,199
want to miss that it's to think it's

1341
01:12:08,100 --> 01:12:14,190
less from the week it's Friday right

1342
01:12:09,199 --> 01:12:18,059
yeah last movie tomorrow hope see here

1343
01:12:14,189 --> 01:12:20,699
for that and if I don't see you here for

1344
01:12:18,060 --> 01:12:23,850
that well I will just cry so will

1345
01:12:20,699 --> 01:12:26,429
everyone else that's about it for today

1346
01:12:23,850 --> 01:12:28,050
I would also remind you that if you want

1347
01:12:26,430 --> 01:12:29,520
to use the editor we used on the stream

1348
01:12:28,050 --> 01:12:31,230
you can type for a quitter into your

1349
01:12:29,520 --> 01:12:34,020
browser and go to this patreon page

1350
01:12:31,229 --> 01:12:35,669
right here my friend and if you

1351
01:12:34,020 --> 01:12:38,010
subscribe this patreon you can get your

1352
01:12:35,670 --> 01:12:40,560
very own copy we use on the stream the

1353
01:12:38,010 --> 01:12:42,360
five dollar reward one and I also pack

1354
01:12:40,560 --> 01:12:43,500
my config file into the handmade hero

1355
01:12:42,359 --> 01:12:44,429
source so if your someone is following

1356
01:12:43,500 --> 01:12:46,260
on with him right here and you wanna

1357
01:12:44,430 --> 01:12:48,150
switch to for code or just look in the

1358
01:12:46,260 --> 01:12:50,550
misc directory of the handmade hero

1359
01:12:48,149 --> 01:12:54,089
source it's got it in there

1360
01:12:50,550 --> 01:12:56,820
that's about it for today

1361
01:12:54,090 --> 01:12:59,720
have fun programming and I'll see you on

1362
01:12:56,819 --> 01:12:59,719
the Internet take it easy

