1
00:00:00,020 --> 00:00:07,739
here we go hello everyone and welcome to

2
00:00:04,080 --> 00:00:11,969
day 40 of handmade hero what is very

3
00:00:07,740 --> 00:00:16,740
exciting about day 40 you may ask day 40

4
00:00:11,968 --> 00:00:19,710
marks our first week of programming as

5
00:00:16,739 --> 00:00:23,879
you know there the 40-hour workweek is

6
00:00:19,710 --> 00:00:26,010
relatively common as a amount of time to

7
00:00:23,879 --> 00:00:29,309
be working during the week and so

8
00:00:26,010 --> 00:00:30,900
technically we have now done 40 hours or

9
00:00:29,309 --> 00:00:33,269
so maybe we've done a little bit more

10
00:00:30,899 --> 00:00:34,799
couple streams have gone longer we did

11
00:00:33,270 --> 00:00:36,540
double length stream one time so we're

12
00:00:34,799 --> 00:00:38,759
probably more at like 42 hours of

13
00:00:36,539 --> 00:00:41,269
programming but we have basically now

14
00:00:38,759 --> 00:00:45,149
done a full week's worth of programming

15
00:00:41,270 --> 00:00:49,050
so if the stream started Monday morning

16
00:00:45,149 --> 00:00:52,739
at 9:00 a.m. sharp we are now at Friday

17
00:00:49,049 --> 00:00:57,058
one hour before 5:00 we're at 4:00 we're

18
00:00:52,738 --> 00:00:59,218
at 4:00 p.m. so I think that is a pretty

19
00:00:57,058 --> 00:01:01,649
good week of program that we've done and

20
00:00:59,219 --> 00:01:04,280
and you know we've got a lot to show for

21
00:01:01,649 --> 00:01:07,140
it things things have progressed

22
00:01:04,280 --> 00:01:09,390
extremely well I would say certainly

23
00:01:07,140 --> 00:01:11,519
probably better than I if you'd asked me

24
00:01:09,390 --> 00:01:13,950
when we were starting if things would go

25
00:01:11,519 --> 00:01:16,140
so smoothly I don't think I would have

26
00:01:13,950 --> 00:01:18,420
said that they would have I think I

27
00:01:16,140 --> 00:01:20,280
would have predicted us to be having a

28
00:01:18,420 --> 00:01:22,170
lot more troubles than we had but

29
00:01:20,280 --> 00:01:24,689
actually we've gotten to the point where

30
00:01:22,170 --> 00:01:26,728
essentially we had a full freely

31
00:01:24,688 --> 00:01:28,828
scrolling tilemap we've now implemented

32
00:01:26,728 --> 00:01:30,599
camera support so basically the camera

33
00:01:28,828 --> 00:01:32,459
is locked and when you walk off screens

34
00:01:30,599 --> 00:01:34,408
you can walk back and forth between them

35
00:01:32,459 --> 00:01:37,048
we've got looped loud code editing in

36
00:01:34,409 --> 00:01:39,299
there we have our own win32 abstraction

37
00:01:37,049 --> 00:01:42,180
layer with sound and graphics we have

38
00:01:39,299 --> 00:01:44,909
alpha blended bitmap splitting so things

39
00:01:42,180 --> 00:01:47,220
are things are pretty far along actually

40
00:01:44,909 --> 00:01:49,350
and that that actually surprised me

41
00:01:47,219 --> 00:01:50,969
after only one week of programming I

42
00:01:49,349 --> 00:01:52,649
would have suspected maybe we especially

43
00:01:50,969 --> 00:01:53,879
because we're doing explanations the

44
00:01:52,649 --> 00:01:56,579
whole time I would have expected it to

45
00:01:53,879 --> 00:01:57,899
be a little rougher than that but you

46
00:01:56,578 --> 00:02:00,419
know for whatever reason it wasn't and

47
00:01:57,899 --> 00:02:03,390
that's pretty awesome so here was we're

48
00:02:00,420 --> 00:02:06,359
wrapping up week 40 I think or I should

49
00:02:03,390 --> 00:02:09,030
say wrapping up day 40 the end of our

50
00:02:06,359 --> 00:02:10,500
first working week like I said I kind of

51
00:02:09,030 --> 00:02:12,239
just want to go through everything that

52
00:02:10,500 --> 00:02:13,830
I've written down is to do's and just

53
00:02:12,239 --> 00:02:17,759
make sure everything's

54
00:02:13,830 --> 00:02:19,230
cleaned up because I want to start the

55
00:02:17,759 --> 00:02:20,280
math stuff clean because I think the

56
00:02:19,229 --> 00:02:22,259
next thing we need to do is start

57
00:02:20,280 --> 00:02:23,759
talking about math pretty seriously so I

58
00:02:22,259 --> 00:02:26,429
want to go through and just clean up

59
00:02:23,759 --> 00:02:28,590
anything that we haven't that we haven't

60
00:02:26,430 --> 00:02:33,000
you know sort of spent enough time just

61
00:02:28,590 --> 00:02:34,800
to kind of get out of our way and then

62
00:02:33,000 --> 00:02:39,270
we can kind of bring our first week of

63
00:02:34,800 --> 00:02:41,160
programming to a close alright so let's

64
00:02:39,270 --> 00:02:43,650
take a look here we already did last

65
00:02:41,159 --> 00:02:44,879
yesterday I snuck in one of the main

66
00:02:43,650 --> 00:02:48,360
things that was all to do list which is

67
00:02:44,879 --> 00:02:50,189
to fix to put in a lock file for our PDB

68
00:02:48,360 --> 00:02:52,140
so that our hot loading with load debug

69
00:02:50,189 --> 00:02:54,689
symbols all the time it wouldn't so that

70
00:02:52,139 --> 00:02:59,339
visual studio wouldn't get confused so

71
00:02:54,689 --> 00:03:01,459
that was a good thing we took care also

72
00:02:59,340 --> 00:03:05,569
the other thing that I had written down

73
00:03:01,459 --> 00:03:10,520
was that I wanted to make sure that that

74
00:03:05,569 --> 00:03:10,519
the the people who were doing work on

75
00:03:10,699 --> 00:03:14,339
the people who were doing work on other

76
00:03:12,659 --> 00:03:16,139
platform layers wouldn't have trouble so

77
00:03:14,340 --> 00:03:17,550
we we cleaned some of that up and move

78
00:03:16,139 --> 00:03:20,009
stuff into hand-made platform that would

79
00:03:17,550 --> 00:03:24,269
help them so that's finished up now as

80
00:03:20,009 --> 00:03:25,859
well and let's see I think the only

81
00:03:24,269 --> 00:03:28,349
other stuff I have here is first of all

82
00:03:25,860 --> 00:03:30,600
I believe I don't know if we ever fixed

83
00:03:28,349 --> 00:03:33,569
this but I believe someone was saying

84
00:03:30,599 --> 00:03:37,709
that we still had a version of T sign

85
00:03:33,569 --> 00:03:40,049
sitting around yes we do um so we still

86
00:03:37,709 --> 00:03:41,219
had T signs sitting in the win32 sound

87
00:03:40,050 --> 00:03:43,080
out but even though we weren't using

88
00:03:41,219 --> 00:03:45,120
anymore so I've wanted to get that out

89
00:03:43,080 --> 00:03:49,050
of there so people aren't wondering what

90
00:03:45,120 --> 00:03:52,230
that variable is doing there I wanted to

91
00:03:49,050 --> 00:03:54,540
go ahead also and in our platform code

92
00:03:52,229 --> 00:03:56,518
if you remember we talked about this a

93
00:03:54,539 --> 00:03:58,560
little bit but people were talking about

94
00:03:56,519 --> 00:04:00,599
on the forums sometimes people talk

95
00:03:58,560 --> 00:04:01,949
about stuff on about the code in the

96
00:04:00,599 --> 00:04:03,120
forums without having actually watched

97
00:04:01,949 --> 00:04:05,959
the episode where I explain why things

98
00:04:03,120 --> 00:04:08,250
are done and they were upset about this

99
00:04:05,959 --> 00:04:09,840
because they didn't like the fact that I

100
00:04:08,250 --> 00:04:11,639
was using pound defiance I think they

101
00:04:09,840 --> 00:04:13,349
were maybe macro phobic or something

102
00:04:11,639 --> 00:04:14,488
which is which is not a very good way to

103
00:04:13,349 --> 00:04:17,219
be you don't really want to be macro

104
00:04:14,489 --> 00:04:19,470
phobic in C or C++ because C and C++

105
00:04:17,220 --> 00:04:21,269
have extremely weak text processing

106
00:04:19,470 --> 00:04:23,940
ability built into them macros are

107
00:04:21,269 --> 00:04:25,560
pretty much your only option I wish they

108
00:04:23,939 --> 00:04:26,819
had a lot more power in the macros or a

109
00:04:25,560 --> 00:04:27,280
lot more power in the language one of

110
00:04:26,819 --> 00:04:28,480
the other

111
00:04:27,279 --> 00:04:31,209
unfortunately they have neither of those

112
00:04:28,480 --> 00:04:33,009
and so that's where you're at anyway

113
00:04:31,209 --> 00:04:34,930
the reason for these guys again I'll

114
00:04:33,009 --> 00:04:38,019
just restate it is that static is a

115
00:04:34,930 --> 00:04:40,629
keyword in C actually means many things

116
00:04:38,019 --> 00:04:43,089
and I do not like that fact

117
00:04:40,629 --> 00:04:44,769
not because of readability this is

118
00:04:43,089 --> 00:04:46,719
nothing to do with me being able to read

119
00:04:44,769 --> 00:04:47,918
the code because I would always know

120
00:04:46,720 --> 00:04:49,030
that was the / what the person was

121
00:04:47,918 --> 00:04:50,259
saying on the forums they were like I

122
00:04:49,029 --> 00:04:52,269
think a seaport always knows what they

123
00:04:50,259 --> 00:04:52,629
are sure but that has nothing to do with

124
00:04:52,269 --> 00:04:54,519
it

125
00:04:52,629 --> 00:04:57,939
readability has nothing to do with it

126
00:04:54,519 --> 00:04:59,829
whatsoever it's search ability you want

127
00:04:57,939 --> 00:05:02,769
to be able to know where your global

128
00:04:59,829 --> 00:05:04,509
variables and your local Global's are at

129
00:05:02,769 --> 00:05:06,069
a moment's notice and if all of your

130
00:05:04,509 --> 00:05:08,199
functions have static in front of them

131
00:05:06,069 --> 00:05:11,199
then you can no longer do like automated

132
00:05:08,199 --> 00:05:13,180
grepping to see whether you have any

133
00:05:11,199 --> 00:05:14,918
global variables for example in your

134
00:05:13,180 --> 00:05:16,750
code that's supposed to be thread safe

135
00:05:14,918 --> 00:05:18,129
or in dll's that you don't want to have

136
00:05:16,750 --> 00:05:19,779
any variables in them like we're doing

137
00:05:18,129 --> 00:05:22,180
hot loading so we'd better not have any

138
00:05:19,779 --> 00:05:24,579
Global's in them if you want to do a

139
00:05:22,180 --> 00:05:26,709
grep like I want to be able to say at

140
00:05:24,579 --> 00:05:29,139
any time I want to be able to say show

141
00:05:26,709 --> 00:05:32,199
me all of the global variables and I

142
00:05:29,139 --> 00:05:35,199
need to know that I can guarantee Lee

143
00:05:32,199 --> 00:05:37,959
get that back right and so for example

144
00:05:35,199 --> 00:05:39,430
this right here is a global variable now

145
00:05:37,959 --> 00:05:41,739
I know what's the one global variable

146
00:05:39,430 --> 00:05:44,439
that we have inside our program it's

147
00:05:41,740 --> 00:05:46,810
this guy right and that's okay because

148
00:05:44,439 --> 00:05:48,430
he never changes so that's a really

149
00:05:46,810 --> 00:05:51,189
quick way for me to immediately know

150
00:05:48,430 --> 00:05:56,829
that our dll is okay similarly I can say

151
00:05:51,189 --> 00:05:58,810
do any for do any of our our what do I

152
00:05:56,829 --> 00:06:00,639
call our functions have any of those in

153
00:05:58,810 --> 00:06:03,910
there what's local persist look will

154
00:06:00,639 --> 00:06:05,409
persist yeah

155
00:06:03,910 --> 00:06:06,490
and thankfully we don't have any of

156
00:06:05,410 --> 00:06:08,410
those who have to worry about that's

157
00:06:06,490 --> 00:06:10,660
that's the reason you do this and you

158
00:06:08,410 --> 00:06:13,210
absolutely should

159
00:06:10,660 --> 00:06:15,340
it has nothing cam at ur of taste you

160
00:06:13,209 --> 00:06:16,478
really want to be able to do that

161
00:06:15,339 --> 00:06:18,849
searching to make sure that you don't

162
00:06:16,478 --> 00:06:20,259
have serious problems that are you just

163
00:06:18,850 --> 00:06:22,090
aren't going to notice until you have

164
00:06:20,259 --> 00:06:23,800
some really crazy case of a

165
00:06:22,089 --> 00:06:24,969
multi-threaded problem that you didn't

166
00:06:23,800 --> 00:06:26,079
realize could happen because you had

167
00:06:24,970 --> 00:06:29,550
global variables and something that was

168
00:06:26,079 --> 00:06:32,319
getting called for multiple threads so

169
00:06:29,550 --> 00:06:35,408
basically there's that but what I wanted

170
00:06:32,319 --> 00:06:38,408
to do is I also wanted to define static

171
00:06:35,408 --> 00:06:41,528
to know like OMG

172
00:06:38,408 --> 00:06:44,110
do not compile bad bad bad right or

173
00:06:41,528 --> 00:06:46,749
something like that to make sure that we

174
00:06:44,110 --> 00:06:51,598
can put that somewhere where it's not

175
00:06:46,749 --> 00:06:53,439
going to actually ever ever happen right

176
00:06:51,598 --> 00:06:55,509
trying to think if there's somewhere we

177
00:06:53,439 --> 00:06:58,149
can do this because what I want to do is

178
00:06:55,509 --> 00:07:00,610
make it so that like so these are but

179
00:06:58,149 --> 00:07:02,649
this macro is gonna get hmm

180
00:07:00,610 --> 00:07:05,139
I'm trying to think of what I could do I

181
00:07:02,649 --> 00:07:06,309
want to basically make it I was trying

182
00:07:05,139 --> 00:07:07,778
to think of what I could do I've never

183
00:07:06,309 --> 00:07:09,610
done this before I was trying to think

184
00:07:07,778 --> 00:07:11,769
of what I could do so that static could

185
00:07:09,610 --> 00:07:15,399
never be typed by itself but it's gonna

186
00:07:11,769 --> 00:07:16,899
do the replacement twice in a row you

187
00:07:15,399 --> 00:07:18,069
know like if I if I pound to find

188
00:07:16,899 --> 00:07:19,360
internal then it's gonna replace with

189
00:07:18,069 --> 00:07:20,949
static and then it's gonna apply the

190
00:07:19,360 --> 00:07:23,110
other macro what I want to do is not

191
00:07:20,949 --> 00:07:24,038
have it apply the other macro tryna

192
00:07:23,110 --> 00:07:26,759
think if there's any way I could

193
00:07:24,038 --> 00:07:26,759
actually make that happen

194
00:07:29,300 --> 00:07:36,360
I wonder if this works probably not

195
00:07:33,149 --> 00:07:41,339
it probably only works with well

196
00:07:36,360 --> 00:07:53,129
actually let's see see you fight you can

197
00:07:41,339 --> 00:07:57,889
do this I'm just macros are kind of

198
00:07:53,129 --> 00:08:00,839
nasty and see all right let's let's see

199
00:07:57,889 --> 00:08:04,169
let's see if we can outsmart the macro

200
00:08:00,839 --> 00:08:06,179
system you know being our oops

201
00:08:04,170 --> 00:08:12,290
it's no good being our wily little

202
00:08:06,180 --> 00:08:12,290
selves okay

203
00:08:21,028 --> 00:08:26,288
so I tried to have smart it by saying

204
00:08:23,379 --> 00:08:30,239
well maybe if I can paste combine static

205
00:08:26,288 --> 00:08:30,238
into a new thing maybe that will work

206
00:08:30,389 --> 00:08:34,149
but I guess not

207
00:08:32,198 --> 00:08:36,879
oh well new lining constant so that's

208
00:08:34,149 --> 00:08:40,599
actually that's actually just because of

209
00:08:36,879 --> 00:08:43,509
that so that's fine let's take a look so

210
00:08:40,599 --> 00:08:46,028
no we can't I was try was thinking maybe

211
00:08:43,509 --> 00:08:48,310
if I paste combined to them together you

212
00:08:46,028 --> 00:08:50,409
know so that basically it would be the

213
00:08:48,309 --> 00:08:53,289
results of a paste operator this this

214
00:08:50,409 --> 00:08:55,448
pound pound is the paste operator in C++

215
00:08:53,289 --> 00:08:57,849
is macro processor which basically takes

216
00:08:55,448 --> 00:08:59,409
two inputs and welds them together and I

217
00:08:57,850 --> 00:09:02,649
was thinking I wonder if maybe it

218
00:08:59,409 --> 00:09:04,179
wouldn't do replacement on those but

219
00:09:02,649 --> 00:09:07,629
apparently it still runs the macro

220
00:09:04,179 --> 00:09:11,078
processor even on those so there's no no

221
00:09:07,629 --> 00:09:13,708
refuge there for us I don't know yeah I

222
00:09:11,078 --> 00:09:22,138
don't know it's unfortunate it is

223
00:09:13,708 --> 00:09:24,068
unfortunate but it doesn't really seem

224
00:09:22,139 --> 00:09:24,789
it doesn't really seem like there's

225
00:09:24,068 --> 00:09:27,838
something I can do

226
00:09:24,789 --> 00:09:30,419
oh well so that's a that's I guess just

227
00:09:27,839 --> 00:09:35,560
something that will have to be left for

228
00:09:30,419 --> 00:09:37,719
our own sort of our own diligence so

229
00:09:35,559 --> 00:09:40,299
basically what I'll have to do which is

230
00:09:37,720 --> 00:09:42,160
what I normally do is just this so I'll

231
00:09:40,299 --> 00:09:46,059
have to do a check which basically says

232
00:09:42,159 --> 00:09:47,769
okay what you know where did I actually

233
00:09:46,059 --> 00:09:49,989
type static and let's make sure that

234
00:09:47,769 --> 00:09:54,129
it's only in those particular places so

235
00:09:49,990 --> 00:09:55,959
what I could do is well is basically you

236
00:09:54,129 --> 00:09:58,088
know we have our build dot bat we could

237
00:09:55,958 --> 00:10:04,888
also have a thing which is like static

238
00:09:58,089 --> 00:10:04,889
check dot bat which does something like

239
00:10:05,220 --> 00:10:12,399
statics found and then it does that

240
00:10:09,100 --> 00:10:17,259
that's sort of fine stir - it does this

241
00:10:12,399 --> 00:10:21,610
line of code basically oops so it does

242
00:10:17,259 --> 00:10:24,129
that and and searches for all of the

243
00:10:21,610 --> 00:10:27,149
things that we might want to find so

244
00:10:24,129 --> 00:10:29,490
basically something

245
00:10:27,149 --> 00:10:33,269
like this so we'll search for local

246
00:10:29,490 --> 00:10:37,799
persist and we'll search for global

247
00:10:33,269 --> 00:10:41,250
variable we'll do basically this so

248
00:10:37,799 --> 00:10:43,289
statics found should be nothing

249
00:10:41,250 --> 00:10:47,759
basically except for the the header file

250
00:10:43,289 --> 00:10:50,879
and then Global's found will do that and

251
00:10:47,759 --> 00:10:51,210
I'll put in some empty echoes here all

252
00:10:50,879 --> 00:10:53,789
right

253
00:10:51,210 --> 00:10:55,500
and so then I'll be able to go ahead and

254
00:10:53,789 --> 00:10:58,409
run this this is the basically the poor

255
00:10:55,500 --> 00:11:00,690
man's version of what I just did and

256
00:10:58,409 --> 00:11:04,009
that can basically get tell me very

257
00:11:00,690 --> 00:11:05,130
quickly oh and I should also do a yeah

258
00:11:04,009 --> 00:11:11,480
yeah

259
00:11:05,129 --> 00:11:15,289
instead of doing these there we go so

260
00:11:11,480 --> 00:11:19,589
and these will have to basically be

261
00:11:15,289 --> 00:11:23,459
something like that no if you can can

262
00:11:19,589 --> 00:11:25,980
you do like a space no you can't really

263
00:11:23,460 --> 00:11:30,920
echo a space it looks like it's just

264
00:11:25,980 --> 00:11:34,649
it's just actually heck yes all right

265
00:11:30,919 --> 00:11:36,509
well we will use that for now so this

266
00:11:34,649 --> 00:11:39,240
way we can actually guess go ahead and

267
00:11:36,509 --> 00:11:40,039
and get an easy report which is I guess

268
00:11:39,240 --> 00:11:43,139
the next best thing

269
00:11:40,039 --> 00:11:45,980
and this will basically tell us where we

270
00:11:43,139 --> 00:11:50,610
have those statics and what they are

271
00:11:45,980 --> 00:11:54,420
which which seems like good enough yeah

272
00:11:50,610 --> 00:11:57,419
so we probably also only need to check I

273
00:11:54,419 --> 00:11:59,610
don't know if I can assume I can do this

274
00:11:57,419 --> 00:11:59,909
I I don't use fine stir except from

275
00:11:59,610 --> 00:12:01,528
within

276
00:11:59,909 --> 00:12:03,120
Emacs I assume I can do something like

277
00:12:01,528 --> 00:12:05,039
that so that it doesn't check batch

278
00:12:03,120 --> 00:12:07,230
files yeah so I could basically do

279
00:12:05,039 --> 00:12:10,019
something like this which sort of checks

280
00:12:07,230 --> 00:12:12,659
all of the things so I could I could set

281
00:12:10,019 --> 00:12:14,429
it variable which is like you know wild

282
00:12:12,659 --> 00:12:16,350
card and I can basically say all right

283
00:12:14,429 --> 00:12:19,528
those are all the things that I'd like

284
00:12:16,350 --> 00:12:21,300
to to check for right I don't really

285
00:12:19,528 --> 00:12:23,669
want to check inside batch files or

286
00:12:21,299 --> 00:12:26,669
inside binary Zoar anything like that so

287
00:12:23,669 --> 00:12:29,219
let's go ahead and say it that way and

288
00:12:26,669 --> 00:12:32,389
then that'll be I guess our you know

289
00:12:29,220 --> 00:12:35,370
we'll call that our reasonable check

290
00:12:32,389 --> 00:12:36,328
that'll be good enough so that way I can

291
00:12:35,370 --> 00:12:39,570
always go out here and check

292
00:12:36,328 --> 00:12:40,919
periodically if I want to to sort of say

293
00:12:39,570 --> 00:12:43,649
all right here

294
00:12:40,919 --> 00:12:45,088
all the stuff that we actually where we

295
00:12:43,649 --> 00:12:46,708
actually type static and so we'll make

296
00:12:45,089 --> 00:12:48,810
sure that essentially it's never

297
00:12:46,708 --> 00:12:51,149
anything other than these three lines

298
00:12:48,809 --> 00:12:53,699
right if we see anything else there we

299
00:12:51,149 --> 00:12:56,009
know we've made a mistake and then

300
00:12:53,700 --> 00:12:58,370
similarly here this will basically tell

301
00:12:56,009 --> 00:13:01,319
us whether we have any of those Global's

302
00:12:58,370 --> 00:13:03,000
it'll tell us all the ones we've got and

303
00:13:01,320 --> 00:13:04,560
right now this is fine they're in the

304
00:13:03,000 --> 00:13:06,570
platform layer which is what we want so

305
00:13:04,559 --> 00:13:08,879
any platform layer code is totally

306
00:13:06,570 --> 00:13:10,589
allowed to global variable it up but

307
00:13:08,879 --> 00:13:13,019
anything in the game code is not so

308
00:13:10,589 --> 00:13:15,779
basically if we see a global like this

309
00:13:13,019 --> 00:13:17,549
in the game code we basically know that

310
00:13:15,778 --> 00:13:18,958
it is something which has to be a

311
00:13:17,549 --> 00:13:20,909
constant right it had better be

312
00:13:18,958 --> 00:13:22,828
something that's never gonna be mutated

313
00:13:20,909 --> 00:13:24,870
and in this case that's true and so

314
00:13:22,828 --> 00:13:25,948
we're fine with that and again the

315
00:13:24,870 --> 00:13:27,929
reason for that is we're doing hot

316
00:13:25,948 --> 00:13:29,789
loading so we even if there was a you

317
00:13:27,929 --> 00:13:31,169
know even if there was a totally

318
00:13:29,789 --> 00:13:33,990
legitimate reason to use a global

319
00:13:31,169 --> 00:13:35,519
variable we need to use another method

320
00:13:33,990 --> 00:13:36,720
so that our hot loading would work for

321
00:13:35,519 --> 00:13:38,370
any global variable that's going to be

322
00:13:36,720 --> 00:13:40,740
mutated because you know if we're

323
00:13:38,370 --> 00:13:43,560
changing that global variable and it was

324
00:13:40,740 --> 00:13:45,000
baked into the data segment of the of

325
00:13:43,559 --> 00:13:46,859
the program which is where this global

326
00:13:45,000 --> 00:13:48,990
variable is going to be when it gets

327
00:13:46,860 --> 00:13:50,100
reloaded it will we won't have that

328
00:13:48,990 --> 00:13:52,500
change those changes that were made

329
00:13:50,100 --> 00:13:54,839
right though the reload of the DLL will

330
00:13:52,500 --> 00:13:56,399
clobber the changes and that will break

331
00:13:54,839 --> 00:13:59,149
our hot loading so we don't want to ever

332
00:13:56,399 --> 00:14:02,820
do that all right

333
00:13:59,149 --> 00:14:04,259
hmm I think that's about it for that I

334
00:14:02,820 --> 00:14:08,329
think that one that I had written down

335
00:14:04,259 --> 00:14:11,429
here which is about the the static stuff

336
00:14:08,328 --> 00:14:13,919
so get rid of that we couldn't quite do

337
00:14:11,429 --> 00:14:16,139
what I had hoped maybe might be possible

338
00:14:13,919 --> 00:14:17,250
but sadly was not just because of the

339
00:14:16,139 --> 00:14:18,899
way the macro processor works there

340
00:14:17,250 --> 00:14:21,990
might still be some trickery that you

341
00:14:18,899 --> 00:14:25,049
could do so if someone else if someone

342
00:14:21,990 --> 00:14:26,430
has a good tricky tricky idea about how

343
00:14:25,049 --> 00:14:29,939
to make it so that you just can't type

344
00:14:26,429 --> 00:14:31,019
it at all please let me know okay so

345
00:14:29,940 --> 00:14:32,819
another thing I want to do is some

346
00:14:31,019 --> 00:14:36,269
people we're worried about the the mouse

347
00:14:32,818 --> 00:14:37,318
cursor and we kind of talked about this

348
00:14:36,269 --> 00:14:38,940
a little bit but there's really no

349
00:14:37,318 --> 00:14:41,849
reason for us not to just fix it for now

350
00:14:38,940 --> 00:14:43,440
we haven't really you can see we got to

351
00:14:41,850 --> 00:14:49,250
do here which is control cursor

352
00:14:43,440 --> 00:14:49,250
visibility and so actually you know

353
00:14:51,639 --> 00:14:57,799
we have a fair bit of time today I want

354
00:14:55,669 --> 00:15:03,139
to kind of look at these I feel like I

355
00:14:57,799 --> 00:15:04,849
feel like just looking at looking at

356
00:15:03,139 --> 00:15:06,528
these here I feel like so first of all

357
00:15:04,850 --> 00:15:10,310
time to get in period I feel like we did

358
00:15:06,528 --> 00:15:12,500
right we did do time begin period yeah

359
00:15:10,309 --> 00:15:14,599
so basically time to get in period and

360
00:15:12,500 --> 00:15:16,458
sleep got done they were we haven't

361
00:15:14,600 --> 00:15:19,009
really finished our timing loops because

362
00:15:16,458 --> 00:15:23,149
that's gonna be for later but we did do

363
00:15:19,009 --> 00:15:26,208
that so a couple things that we had here

364
00:15:23,149 --> 00:15:29,440
one was also we had that the stuff that

365
00:15:26,208 --> 00:15:33,859
I was working on there where we had the

366
00:15:29,440 --> 00:15:35,300
sort of the the we had we had done a

367
00:15:33,860 --> 00:15:37,639
little work where we could actually show

368
00:15:35,299 --> 00:15:39,289
the game while we were in the editor and

369
00:15:37,639 --> 00:15:40,338
I'm kind of thinking maybe that's

370
00:15:39,289 --> 00:15:41,899
something that I'd like to bring back

371
00:15:40,339 --> 00:15:43,850
because we've had a bunch of times where

372
00:15:41,899 --> 00:15:45,708
it would have been nice to have the game

373
00:15:43,850 --> 00:15:48,800
still showing in the background behind

374
00:15:45,708 --> 00:15:50,059
the editor so I don't know that might be

375
00:15:48,799 --> 00:15:52,219
something to talk about and then also

376
00:15:50,059 --> 00:15:54,199
toggling full-screen support might be a

377
00:15:52,220 --> 00:15:57,620
nice thing to do it might be nice to

378
00:15:54,200 --> 00:15:59,660
start thinking about changing the

379
00:15:57,620 --> 00:16:01,310
resolution of things and allowing that

380
00:15:59,659 --> 00:16:02,449
to get passed down to the game because I

381
00:16:01,309 --> 00:16:04,189
think that's something we want to use

382
00:16:02,450 --> 00:16:06,379
for renderer tests and stuff I don't

383
00:16:04,190 --> 00:16:08,029
know it's something to think about but

384
00:16:06,379 --> 00:16:12,559
it looks like the rest of these are

385
00:16:08,028 --> 00:16:15,350
stuff for more for for later on down the

386
00:16:12,559 --> 00:16:16,969
road let's see getting a handle to our

387
00:16:15,350 --> 00:16:20,600
own executable file I think we already

388
00:16:16,970 --> 00:16:22,009
essentially did that as well well we

389
00:16:20,600 --> 00:16:25,009
didn't quite so I guess those will be

390
00:16:22,009 --> 00:16:26,419
there all right so I think we'll leave

391
00:16:25,009 --> 00:16:28,519
those for now but I'm gonna go ahead and

392
00:16:26,419 --> 00:16:30,708
first tackle that set cursor because we

393
00:16:28,519 --> 00:16:33,708
don't do that currently and you can see

394
00:16:30,708 --> 00:16:35,629
that that has one particularly odd

395
00:16:33,708 --> 00:16:37,458
effect which is basically that whatever

396
00:16:35,629 --> 00:16:39,259
the cursor people were wondering why

397
00:16:37,458 --> 00:16:42,229
it's a spinning why it's the spinning

398
00:16:39,259 --> 00:16:43,909
weight thing and the answer is it's not

399
00:16:42,230 --> 00:16:47,089
actually the spinning weight thing it's

400
00:16:43,909 --> 00:16:48,919
whatever the cursor was before it

401
00:16:47,089 --> 00:16:52,250
entered our window because we don't

402
00:16:48,919 --> 00:16:56,229
respond to the WM set cursor call and we

403
00:16:52,250 --> 00:16:58,970
did not set a cursor in our wind class

404
00:16:56,230 --> 00:17:01,399
what Windows does is it just does not

405
00:16:58,970 --> 00:17:02,420
touch the cursor state when you move it

406
00:17:01,399 --> 00:17:03,620
into our window

407
00:17:02,419 --> 00:17:05,209
so what that means is you can change it

408
00:17:03,620 --> 00:17:06,859
to anything you want just by like

409
00:17:05,209 --> 00:17:08,328
getting it to that thing and quickly

410
00:17:06,859 --> 00:17:09,919
hopping it over right I couldn't quite

411
00:17:08,328 --> 00:17:12,259
get it without passing over this so it

412
00:17:09,920 --> 00:17:13,670
turned into that but you know if I could

413
00:17:12,259 --> 00:17:14,869
if I could get it in there yeah you can

414
00:17:13,670 --> 00:17:17,750
see if I can get it in there without it

415
00:17:14,869 --> 00:17:20,179
going over the the line you could make

416
00:17:17,750 --> 00:17:21,440
it be the arrow and if I if I moved it

417
00:17:20,180 --> 00:17:22,820
in this way it would always be the arrow

418
00:17:21,440 --> 00:17:25,789
because we're passing over that thick

419
00:17:22,819 --> 00:17:27,470
band same this way right you can see I

420
00:17:25,789 --> 00:17:29,930
can make it be the TextEdit cursor if I

421
00:17:27,470 --> 00:17:34,579
really wanted to probably can't quite

422
00:17:29,930 --> 00:17:36,890
can't quite make it but you get the idea

423
00:17:34,579 --> 00:17:39,230
so basically that's what's actually

424
00:17:36,890 --> 00:17:41,750
happening at the moment but if you if

425
00:17:39,230 --> 00:17:43,339
you look at what's actually happening in

426
00:17:41,750 --> 00:17:44,539
fact we could talk about this because we

427
00:17:43,339 --> 00:17:46,099
never really talked about this it's not

428
00:17:44,539 --> 00:17:48,039
super important for us because we just

429
00:17:46,099 --> 00:17:51,740
don't have a lot of it going on but

430
00:17:48,039 --> 00:17:54,529
there is a tool in visual studio called

431
00:17:51,740 --> 00:17:56,450
spy plus plus inside the tools menu if

432
00:17:54,529 --> 00:17:59,299
you open it you get this sort of thing

433
00:17:56,450 --> 00:18:00,950
that's like a list of windows right and

434
00:17:59,299 --> 00:18:02,779
our window is one of those windows you

435
00:18:00,950 --> 00:18:04,700
could find it in this list these are all

436
00:18:02,779 --> 00:18:06,769
the windows that are at in the top level

437
00:18:04,700 --> 00:18:08,539
in the system you can see crea has a

438
00:18:06,769 --> 00:18:10,670
bunch of pop-ups that it creates and

439
00:18:08,539 --> 00:18:12,470
other sorts of things like this and can

440
00:18:10,670 --> 00:18:14,120
see vigil studio in there and blah blah

441
00:18:12,470 --> 00:18:16,279
blah and here's our command prompt that

442
00:18:14,119 --> 00:18:19,159
sort of thing there's an Emacs right

443
00:18:16,279 --> 00:18:20,990
good ole max what this tool allows you

444
00:18:19,160 --> 00:18:22,220
to do it's it's much more handy for

445
00:18:20,990 --> 00:18:23,539
applications it's not something you

446
00:18:22,220 --> 00:18:24,890
typically use for games a whole lot

447
00:18:23,539 --> 00:18:26,119
because you just don't process that many

448
00:18:24,890 --> 00:18:30,020
window messages at the end of the day

449
00:18:26,119 --> 00:18:32,449
but just for for educational purposes

450
00:18:30,019 --> 00:18:34,309
this particular tool does allow you to

451
00:18:32,450 --> 00:18:35,840
do a few things where you can kind of

452
00:18:34,309 --> 00:18:37,940
see what's going on in your application

453
00:18:35,839 --> 00:18:41,299
as far as Windows is concerned what you

454
00:18:37,940 --> 00:18:42,470
can do is you can go to find window so

455
00:18:41,299 --> 00:18:43,819
you don't have to look in this width in

456
00:18:42,470 --> 00:18:45,769
this list and it gives you this

457
00:18:43,819 --> 00:18:49,309
hilarious little crosshairs that you

458
00:18:45,769 --> 00:18:50,660
drag and move over a window right and

459
00:18:49,309 --> 00:18:51,950
you can see that it's found our window

460
00:18:50,660 --> 00:18:54,259
handmade here oh and there's our wind

461
00:18:51,950 --> 00:18:56,750
class just like we registered it and if

462
00:18:54,259 --> 00:18:58,460
I hit OK that basically will bring me

463
00:18:56,750 --> 00:18:59,660
right to where it is in the list and so

464
00:18:58,460 --> 00:19:01,130
you know you can you could also just

465
00:18:59,660 --> 00:19:02,570
look through the list and found it but

466
00:19:01,130 --> 00:19:05,330
you know it's a little quicker to do it

467
00:19:02,569 --> 00:19:06,829
that way sometimes once you have it you

468
00:19:05,329 --> 00:19:08,210
can go ahead and you can right click and

469
00:19:06,829 --> 00:19:09,500
do highlight if you don't know where the

470
00:19:08,210 --> 00:19:10,759
window is and in theory it's supposed to

471
00:19:09,500 --> 00:19:12,200
blink but I didn't actually see that

472
00:19:10,759 --> 00:19:13,309
happen I don't know if that's an

473
00:19:12,200 --> 00:19:14,690
interaction with OBS I think it's

474
00:19:13,309 --> 00:19:16,279
supposed to kind of blink the window for

475
00:19:14,690 --> 00:19:18,380
you but really the thing we care

476
00:19:16,279 --> 00:19:19,579
about is well you can look at properties

477
00:19:18,380 --> 00:19:21,140
as well which is kind of fun you can

478
00:19:19,579 --> 00:19:22,699
look at window styles are set in your

479
00:19:21,140 --> 00:19:25,640
window and you can see other kind of

480
00:19:22,700 --> 00:19:27,259
stuff like this the window class styles

481
00:19:25,640 --> 00:19:28,430
all that all that stuff we registered is

482
00:19:27,259 --> 00:19:29,960
all actually in here you can see that

483
00:19:28,430 --> 00:19:31,370
there's no cursor registered no icon

484
00:19:29,960 --> 00:19:33,980
registered no menu registered to a

485
00:19:31,369 --> 00:19:36,049
background brush all that kind of stuff

486
00:19:33,980 --> 00:19:37,549
but the more interesting thing for our

487
00:19:36,049 --> 00:19:40,220
purposes now is if you right-click and

488
00:19:37,549 --> 00:19:41,599
go to messages you can actually see what

489
00:19:40,220 --> 00:19:44,180
are the message what the messages that

490
00:19:41,599 --> 00:19:48,709
are getting dispatched by Windows to us

491
00:19:44,180 --> 00:19:51,860
are right and now a lot of these we were

492
00:19:48,710 --> 00:19:54,079
actually expecting to get so for example

493
00:19:51,859 --> 00:19:56,240
if we go in here you can see if I hit a

494
00:19:54,079 --> 00:19:58,970
key you can see that it's having key ups

495
00:19:56,240 --> 00:20:03,620
and key downs get dispatched right and

496
00:19:58,970 --> 00:20:06,740
so that's all good but what what's kind

497
00:20:03,619 --> 00:20:09,949
of what what you can see if you look at

498
00:20:06,740 --> 00:20:14,150
it normally is we're getting these nch I

499
00:20:09,950 --> 00:20:16,880
hit test or ncnc hit test messages and

500
00:20:14,150 --> 00:20:18,290
set cursor messages as well as mouse

501
00:20:16,880 --> 00:20:20,750
move messages none of which are

502
00:20:18,289 --> 00:20:23,990
responding to and it's that set cursor

503
00:20:20,750 --> 00:20:26,269
message that we really want to to talk

504
00:20:23,990 --> 00:20:27,740
about because that's the one that would

505
00:20:26,269 --> 00:20:30,440
allow us to control what the cursor is

506
00:20:27,740 --> 00:20:32,750
now like I said there's two ways you can

507
00:20:30,440 --> 00:20:34,430
actually do this oh another thing that's

508
00:20:32,750 --> 00:20:36,289
interesting about these I believe you

509
00:20:34,430 --> 00:20:39,320
can kind of go in here and you can

510
00:20:36,289 --> 00:20:41,690
actually say which ones you want yeah so

511
00:20:39,319 --> 00:20:44,089
if you if you go in if you right-click

512
00:20:41,690 --> 00:20:45,380
in here you can click on logging options

513
00:20:44,089 --> 00:20:47,859
it's a quick way to get I think it's

514
00:20:45,380 --> 00:20:51,590
also up here you can go ahead and get to

515
00:20:47,859 --> 00:20:53,389
the messages that you want to see so you

516
00:20:51,589 --> 00:20:55,039
can kind of like highlight you can see

517
00:20:53,390 --> 00:20:57,440
all the windows messages in here and you

518
00:20:55,039 --> 00:20:58,849
can clear and only select ones that you

519
00:20:57,440 --> 00:21:00,740
wanted to see if you're looking for a

520
00:20:58,849 --> 00:21:02,750
particular if you're looking for

521
00:21:00,740 --> 00:21:06,470
particular messages and that helps cut

522
00:21:02,750 --> 00:21:10,339
down on the cruft a little bit okay so

523
00:21:06,470 --> 00:21:13,490
just something keep in mind anyway yeah

524
00:21:10,339 --> 00:21:14,599
so that is how that works we don't

525
00:21:13,490 --> 00:21:16,370
really need to use it for any particular

526
00:21:14,599 --> 00:21:17,750
reason here but I just thought I'd bring

527
00:21:16,369 --> 00:21:19,489
it up in case you were having troubles

528
00:21:17,750 --> 00:21:20,930
where you might want to see that what I

529
00:21:19,490 --> 00:21:22,490
want to do is I just want to start

530
00:21:20,930 --> 00:21:24,200
processing that set cursor message and

531
00:21:22,490 --> 00:21:26,359
like I said there's really two ways we

532
00:21:24,200 --> 00:21:28,789
could do this one is down here when we

533
00:21:26,359 --> 00:21:29,899
register our win class so one thing that

534
00:21:28,789 --> 00:21:32,659
we could do

535
00:21:29,900 --> 00:21:34,580
right is we could say there's a I

536
00:21:32,660 --> 00:21:35,690
believe it's H cursor which is inside

537
00:21:34,579 --> 00:21:37,549
the window class structure when we

538
00:21:35,690 --> 00:21:40,250
register it and again this is the thing

539
00:21:37,549 --> 00:21:41,629
that controls our window behaves and

540
00:21:40,250 --> 00:21:43,220
it's anything that's created with this

541
00:21:41,630 --> 00:21:45,740
window class but we're only creating one

542
00:21:43,220 --> 00:21:49,730
window with it right what we could do

543
00:21:45,740 --> 00:21:52,430
here is we can load a cursor basically

544
00:21:49,730 --> 00:21:56,809
out of the default cursor set and I'll

545
00:21:52,430 --> 00:21:58,850
show you what that means so this is gets

546
00:21:56,809 --> 00:22:00,649
into sort of these windows minutiae

547
00:21:58,849 --> 00:22:02,990
things that we really just don't care

548
00:22:00,650 --> 00:22:04,130
about very much as a game developer but

549
00:22:02,990 --> 00:22:05,990
once in a while you kind of brush up

550
00:22:04,130 --> 00:22:08,090
against them nor you know a real

551
00:22:05,990 --> 00:22:10,519
application uses all kinds of this stuff

552
00:22:08,089 --> 00:22:13,009
oftentimes you know like you know an app

553
00:22:10,519 --> 00:22:15,529
style application that has lots of Mouse

554
00:22:13,009 --> 00:22:18,049
interaction with that isn't custom you

555
00:22:15,529 --> 00:22:19,029
know sort of standard windows controls

556
00:22:18,049 --> 00:22:21,379
and all that sort of stuff

557
00:22:19,029 --> 00:22:22,849
so basically this load cursor function

558
00:22:21,380 --> 00:22:25,070
what it's normally meant to do is

559
00:22:22,849 --> 00:22:26,869
there's a thing called an RC file that

560
00:22:25,069 --> 00:22:29,349
compiles into a res file which binds

561
00:22:26,869 --> 00:22:31,099
into the resource fork of your

562
00:22:29,349 --> 00:22:34,399
executable and all this other nonsense

563
00:22:31,099 --> 00:22:35,539
that we really just don't care about for

564
00:22:34,400 --> 00:22:36,700
the most part we will have to care about

565
00:22:35,539 --> 00:22:39,440
a little bit when we want to actually

566
00:22:36,700 --> 00:22:41,600
make an icon for our game so that when

567
00:22:39,440 --> 00:22:43,070
it's sitting there in Windows you know

568
00:22:41,599 --> 00:22:45,679
when you do it a double-click on it it

569
00:22:43,069 --> 00:22:47,240
has an icon we'll we'll have to see how

570
00:22:45,680 --> 00:22:49,820
to do that it's it's called a resource

571
00:22:47,240 --> 00:22:51,589
file and we'll have to do that but we're

572
00:22:49,819 --> 00:22:53,539
not doing any of that right now so we

573
00:22:51,589 --> 00:22:55,669
actually don't have any resources which

574
00:22:53,539 --> 00:23:00,170
are things like strings or images that

575
00:22:55,670 --> 00:23:02,870
get loaded out of the out of the

576
00:23:00,170 --> 00:23:04,340
executable directly basically this load

577
00:23:02,869 --> 00:23:08,239
cursor function would normally allow you

578
00:23:04,339 --> 00:23:11,059
to load a cursor by name using a you

579
00:23:08,240 --> 00:23:12,289
know string would allow you to load that

580
00:23:11,059 --> 00:23:14,240
out of your expedia Bowl one that you

581
00:23:12,289 --> 00:23:15,470
had drawn and baked in there using the

582
00:23:14,240 --> 00:23:16,849
resource editor which is a thing in

583
00:23:15,470 --> 00:23:18,170
visual studio that would allow you to

584
00:23:16,849 --> 00:23:20,509
edit cursors and save them in there

585
00:23:18,170 --> 00:23:21,950
right we don't want to do that because

586
00:23:20,509 --> 00:23:23,629
basically we're not gonna have a cursor

587
00:23:21,950 --> 00:23:25,910
except in debug mode so all we really

588
00:23:23,630 --> 00:23:27,680
want to do is say whether or not we're

589
00:23:25,910 --> 00:23:30,200
in debug mode and if we are in debug

590
00:23:27,680 --> 00:23:31,970
mode we would want to show the cursor

591
00:23:30,200 --> 00:23:33,470
and if we're not then we wouldn't right

592
00:23:31,970 --> 00:23:34,850
because either release version our game

593
00:23:33,470 --> 00:23:36,289
should never show a mouse cursor of any

594
00:23:34,849 --> 00:23:39,439
kind since it's not a mouse controlled

595
00:23:36,289 --> 00:23:41,210
game but the thing that I was talking

596
00:23:39,440 --> 00:23:43,759
about now is if you wanted to always

597
00:23:41,210 --> 00:23:46,430
show a cursor what we could do is just

598
00:23:43,759 --> 00:23:47,990
load cursor here right and we need to

599
00:23:46,430 --> 00:23:50,660
pass our H instance which we've already

600
00:23:47,990 --> 00:23:52,579
got and then we just pass a constant

601
00:23:50,660 --> 00:23:54,560
which would load some of the default

602
00:23:52,579 --> 00:23:56,000
stuff that you don't actually need to

603
00:23:54,559 --> 00:23:58,429
bake into executable that's just in

604
00:23:56,000 --> 00:24:00,200
windows proper that it can load and so

605
00:23:58,430 --> 00:24:02,600
like the standard arrow is i2c arrow we

606
00:24:00,200 --> 00:24:04,250
could load ID c cross for example so

607
00:24:02,599 --> 00:24:05,689
here we go let's let's just put that in

608
00:24:04,250 --> 00:24:09,289
there as a new that's a simple example

609
00:24:05,690 --> 00:24:11,269
and now when we ran the game in theory

610
00:24:09,289 --> 00:24:12,470
well you know what there's one other

611
00:24:11,269 --> 00:24:18,650
thing that I guess we would have to do

612
00:24:12,470 --> 00:24:19,039
actually no I feel like that should have

613
00:24:18,650 --> 00:24:24,050
worked

614
00:24:19,039 --> 00:24:24,710
I'm a little surprised at that that that

615
00:24:24,049 --> 00:24:31,819
didn't work

616
00:24:24,710 --> 00:24:35,210
oops why didn't that work that is very

617
00:24:31,819 --> 00:24:36,889
odd so I guess I I look I guess I'm just

618
00:24:35,210 --> 00:24:40,279
missed remembering I thought that if you

619
00:24:36,890 --> 00:24:44,120
put one in there and you called F window

620
00:24:40,279 --> 00:24:47,599
proc on set cursor which we do right

621
00:24:44,119 --> 00:24:50,000
because we don't handle the set cursor

622
00:24:47,599 --> 00:24:52,129
message so the set cursor message will

623
00:24:50,000 --> 00:24:57,289
get passed through to here right I

624
00:24:52,130 --> 00:25:00,590
thought that that would mean oh I know

625
00:24:57,289 --> 00:25:02,450
what I did wrong this load cursor if you

626
00:25:00,589 --> 00:25:03,769
use one of the things this is it's gonna

627
00:25:02,450 --> 00:25:05,509
try to load it out of this executable

628
00:25:03,769 --> 00:25:07,069
but I just said we don't have any of

629
00:25:05,509 --> 00:25:08,750
these in our schedules so it'd be load

630
00:25:07,069 --> 00:25:10,189
cursor zero if you want to load one of

631
00:25:08,750 --> 00:25:13,039
the default ones from Windows you have

632
00:25:10,190 --> 00:25:14,240
to pass the null two to tell it that

633
00:25:13,039 --> 00:25:15,500
you're trying to load one of the windows

634
00:25:14,240 --> 00:25:17,990
ones forgot about that

635
00:25:15,500 --> 00:25:19,819
that's yeah let's try that again there

636
00:25:17,990 --> 00:25:20,150
we go so that's what I expected to

637
00:25:19,819 --> 00:25:22,279
happen

638
00:25:20,150 --> 00:25:24,560
so you can see this is a little XOR

639
00:25:22,279 --> 00:25:26,509
cursor kind of thing that that that

640
00:25:24,559 --> 00:25:28,940
windows supplies is one of their default

641
00:25:26,509 --> 00:25:30,410
cursors so now in an inside our window

642
00:25:28,940 --> 00:25:31,970
it will always be that it won't just be

643
00:25:30,410 --> 00:25:33,590
whatever the last thing was you won't

644
00:25:31,970 --> 00:25:35,180
have that spinning anymore and that's

645
00:25:33,589 --> 00:25:36,769
fine but what I'd like to do is I'd like

646
00:25:35,180 --> 00:25:40,810
to be a little more explicit about it

647
00:25:36,769 --> 00:25:40,809
because I'd like to be able to

648
00:25:43,970 --> 00:25:49,460
I'd like to be able to have it so that

649
00:25:47,089 --> 00:25:51,409
in the game can dynamically control

650
00:25:49,460 --> 00:25:53,059
whether or not the cursor is visible

651
00:25:51,410 --> 00:25:54,560
we're not really doing we're not we

652
00:25:53,059 --> 00:25:57,829
don't have a debug overlay or anything

653
00:25:54,559 --> 00:25:59,899
yet so we don't really have a reason to

654
00:25:57,829 --> 00:26:02,299
use that at this time but I would like

655
00:25:59,900 --> 00:26:06,220
to be able to do that and so what I'm

656
00:26:02,299 --> 00:26:08,839
going to do is I'm going to go ahead and

657
00:26:06,220 --> 00:26:10,930
and make it happen that way so we're

658
00:26:08,839 --> 00:26:16,009
gonna leave each cursor at zero for now

659
00:26:10,930 --> 00:26:17,600
and and and basically get you know get

660
00:26:16,009 --> 00:26:19,670
rid of that sort of window klass one so

661
00:26:17,599 --> 00:26:22,579
that won't set it for us so then I'm

662
00:26:19,670 --> 00:26:25,100
gonna go ahead and get up go go up to

663
00:26:22,579 --> 00:26:29,029
the the window callbacks here when we

664
00:26:25,099 --> 00:26:31,429
get a WM set cursor message I can do

665
00:26:29,029 --> 00:26:34,399
exactly the same thing that I was doing

666
00:26:31,430 --> 00:26:37,640
before essentially right so I'm gonna

667
00:26:34,400 --> 00:26:39,080
need this cursor I don't really want to

668
00:26:37,640 --> 00:26:40,940
bother you I think you actually could

669
00:26:39,079 --> 00:26:42,589
just call load cursor every time because

670
00:26:40,940 --> 00:26:45,049
I don't think it incurs any cost

671
00:26:42,589 --> 00:26:46,639
it doesn't like open a new handle to the

672
00:26:45,049 --> 00:26:48,799
cursor if you're just loading one of the

673
00:26:46,640 --> 00:26:51,500
default cursors but at the same time we

674
00:26:48,799 --> 00:26:54,079
have a win 32 state structure that we're

675
00:26:51,500 --> 00:26:54,589
able to access so in theory oh and you

676
00:26:54,079 --> 00:26:59,269
know what

677
00:26:54,589 --> 00:27:00,709
I wonder if set cursor can be

678
00:26:59,269 --> 00:27:02,930
intercepted the way we were doing it

679
00:27:00,710 --> 00:27:05,029
before well so let's let's actually look

680
00:27:02,930 --> 00:27:06,650
at that as well let's take a look at

681
00:27:05,029 --> 00:27:10,879
this here I'm gonna put an assert in

682
00:27:06,650 --> 00:27:12,800
here and then I'm gonna go ahead and see

683
00:27:10,880 --> 00:27:14,510
if it ever gets dispatched in normal

684
00:27:12,799 --> 00:27:16,339
cases directly to us because again this

685
00:27:14,509 --> 00:27:18,589
is for debug only so if once in a while

686
00:27:16,339 --> 00:27:20,319
it didn't that would be fine but I want

687
00:27:18,589 --> 00:27:23,059
to see if we can intercept this guy

688
00:27:20,319 --> 00:27:24,710
basically so if we can intercept him

689
00:27:23,059 --> 00:27:27,049
that would mean that we wouldn't have to

690
00:27:24,710 --> 00:27:29,600
have any state there nope it looks like

691
00:27:27,049 --> 00:27:31,609
it goes directly there so remember how

692
00:27:29,599 --> 00:27:35,329
we did this I don't know if you recall

693
00:27:31,609 --> 00:27:37,099
but basically the way that we set things

694
00:27:35,329 --> 00:27:39,619
up is we have a thing that processes

695
00:27:37,099 --> 00:27:42,469
messages that are that go through our

696
00:27:39,619 --> 00:27:44,809
message pump our message loop properly

697
00:27:42,470 --> 00:27:46,970
ones that you know we are actually just

698
00:27:44,809 --> 00:27:49,069
batching to the window ourselves that

699
00:27:46,970 --> 00:27:51,350
Windows puts on our queue but then we

700
00:27:49,069 --> 00:27:53,480
also have our window callback which

701
00:27:51,349 --> 00:27:56,689
essentially is the thing that windows

702
00:27:53,480 --> 00:27:57,269
will sometimes just flat-out call and

703
00:27:56,690 --> 00:27:58,590
there

704
00:27:57,269 --> 00:28:00,269
nothing we can really do about that

705
00:27:58,589 --> 00:28:02,459
right remember I talked about that it

706
00:28:00,269 --> 00:28:04,379
firry it's always supposed to go through

707
00:28:02,460 --> 00:28:06,150
the message pump but it doesn't I don't

708
00:28:04,380 --> 00:28:08,280
know why they ended up in such a hybrid

709
00:28:06,150 --> 00:28:09,540
scenario it's kind of bad but you know

710
00:28:08,279 --> 00:28:11,910
that's just the way it is so it looks

711
00:28:09,539 --> 00:28:13,680
like our set cursor will have to will

712
00:28:11,910 --> 00:28:16,800
have to happen there which means we'll

713
00:28:13,680 --> 00:28:18,990
have to make our cursor a global what

714
00:28:16,799 --> 00:28:21,419
that's fine there's really no problem

715
00:28:18,990 --> 00:28:23,880
with that so we can do a global cursor

716
00:28:21,420 --> 00:28:26,430
here and we can basically say that that

717
00:28:23,880 --> 00:28:27,570
the set cursor happens in there now not

718
00:28:26,430 --> 00:28:30,090
a big deal I just wanted to see if it

719
00:28:27,569 --> 00:28:31,589
was possible for us not to do that so

720
00:28:30,089 --> 00:28:33,899
here's the global variable we have an H

721
00:28:31,589 --> 00:28:37,099
cursor and this is the this is basically

722
00:28:33,900 --> 00:28:39,900
the debug cursor and what we'll do is

723
00:28:37,099 --> 00:28:42,809
we'll go ahead and set that inside

724
00:28:39,900 --> 00:28:44,580
that's that cursor call we will use the

725
00:28:42,809 --> 00:28:46,679
debug cursor in fact I guess I should

726
00:28:44,579 --> 00:28:50,609
call it the global debug cursor I'm so

727
00:28:46,680 --> 00:28:52,830
deep a global cursor so and then I will

728
00:28:50,609 --> 00:28:54,689
call set cursor which is the function in

729
00:28:52,829 --> 00:28:57,419
Windows that actually sets what the

730
00:28:54,690 --> 00:28:59,100
cursor is for our window right so when

731
00:28:57,420 --> 00:29:00,900
it asks us what the cursor should be we

732
00:28:59,099 --> 00:29:02,609
can set what the cursor should be so

733
00:29:00,900 --> 00:29:04,920
that it will know now what I would like

734
00:29:02,609 --> 00:29:06,750
to know though of course is I want to

735
00:29:04,920 --> 00:29:08,460
know it's been a long time since I wrote

736
00:29:06,750 --> 00:29:10,230
any set cursor code so I just want to go

737
00:29:08,460 --> 00:29:11,789
through and read and make sure what the

738
00:29:10,230 --> 00:29:13,529
things are that Windows expects us to do

739
00:29:11,789 --> 00:29:16,230
inside this message when we receive it

740
00:29:13,529 --> 00:29:23,279
and let's see what it says

741
00:29:16,230 --> 00:29:24,509
so the DEF when I'm up up up C sent to

742
00:29:23,279 --> 00:29:26,039
the window if the mouse cursor Mouse

743
00:29:24,509 --> 00:29:28,200
causes the cursor to move within a

744
00:29:26,039 --> 00:29:29,759
window and mouse input is not captured

745
00:29:28,200 --> 00:29:33,150
okay so basically we're just going to

746
00:29:29,759 --> 00:29:35,009
get this the different or pro kleh pass

747
00:29:33,150 --> 00:29:36,120
the message to window yeah it doesn't

748
00:29:35,009 --> 00:29:38,250
seem like there's anything particularly

749
00:29:36,119 --> 00:29:41,579
weird that we'd have to do here so

750
00:29:38,250 --> 00:29:45,180
basically if we wanted to we just go in

751
00:29:41,579 --> 00:29:49,159
here set cursor what do I have to pass

752
00:29:45,180 --> 00:29:49,160
for set cursor do I just pass

753
00:29:49,690 --> 00:29:57,200
set cursor do I not pass the window

754
00:29:53,779 --> 00:29:59,990
handle oh my I don't pass the window

755
00:29:57,200 --> 00:30:02,120
handle I guess that just right I guess

756
00:29:59,990 --> 00:30:04,160
it's just because you could be setting

757
00:30:02,119 --> 00:30:05,539
if you there's a thing you can do in

758
00:30:04,160 --> 00:30:07,550
Windows where you capture the mouse

759
00:30:05,539 --> 00:30:09,019
cursor and can move anywhere but it

760
00:30:07,549 --> 00:30:10,519
still technically belongs to your window

761
00:30:09,019 --> 00:30:11,960
so I guess it's not really a window

762
00:30:10,519 --> 00:30:13,789
specific thing I guess it's just kind of

763
00:30:11,960 --> 00:30:16,670
an ownership thing so I guess when we

764
00:30:13,789 --> 00:30:21,710
get a set cursor we'll just go and set

765
00:30:16,670 --> 00:30:23,210
it there directly and that should set it

766
00:30:21,710 --> 00:30:24,410
to the debug global cursor of course the

767
00:30:23,210 --> 00:30:26,390
debug global chrisser hasn't been

768
00:30:24,410 --> 00:30:28,550
initialized so it's startup when we do

769
00:30:26,390 --> 00:30:30,320
our win class what we would like to do

770
00:30:28,549 --> 00:30:32,750
basically is also a little that cursor

771
00:30:30,319 --> 00:30:34,849
so I'll do a little cursor here and

772
00:30:32,750 --> 00:30:37,160
we'll do that we'll do I be C arrow

773
00:30:34,849 --> 00:30:39,589
which is just the default cursor so that

774
00:30:37,160 --> 00:30:41,360
way our cursor is initialized then in

775
00:30:39,589 --> 00:30:42,799
theory we should be able to do something

776
00:30:41,359 --> 00:30:46,719
where we actually get that set cursor to

777
00:30:42,799 --> 00:30:51,109
work although we still had our wait

778
00:30:46,720 --> 00:30:56,990
looks like it's working now for the most

779
00:30:51,109 --> 00:30:59,119
part but yeah I've got a few oddities

780
00:30:56,990 --> 00:31:02,990
there I'm not sure why it was still

781
00:30:59,119 --> 00:31:05,389
looping I'm not sure why we get the the

782
00:31:02,990 --> 00:31:07,730
wait arrow when we when we first come in

783
00:31:05,390 --> 00:31:10,190
there it still thinks our application is

784
00:31:07,730 --> 00:31:11,630
busy which is a little odd I don't know

785
00:31:10,190 --> 00:31:12,860
if we're if there's some messages that

786
00:31:11,630 --> 00:31:14,870
we're not responding to there

787
00:31:12,859 --> 00:31:17,269
something's going on there but also it

788
00:31:14,869 --> 00:31:19,699
looked like we were doing that that set

789
00:31:17,269 --> 00:31:22,849
Chris are called everywhere so we didn't

790
00:31:19,700 --> 00:31:26,690
actually get our sizing stuff right so I

791
00:31:22,849 --> 00:31:28,519
wonder yeah I wonder what we want to do

792
00:31:26,690 --> 00:31:31,160
there exactly I wonder if what we want

793
00:31:28,519 --> 00:31:32,509
to do is basically just let the default

794
00:31:31,160 --> 00:31:35,179
wind proc handle it

795
00:31:32,509 --> 00:31:38,359
so that it'll do the sizing stuff for us

796
00:31:35,179 --> 00:31:42,620
and then we will only set the cursor to

797
00:31:38,359 --> 00:31:44,990
something if yeah if we need to so for

798
00:31:42,619 --> 00:31:48,558
example we can do a set cursor 0 in

799
00:31:44,990 --> 00:31:50,480
there and in theory I believe that would

800
00:31:48,558 --> 00:31:52,460
make the course or not appear yeah so

801
00:31:50,480 --> 00:31:54,589
you can see if we do a set cursor 0 we

802
00:31:52,460 --> 00:31:56,539
basically get no mouse cursor at all

803
00:31:54,589 --> 00:31:59,240
which is what we would want in a release

804
00:31:56,539 --> 00:32:02,210
mode scenario right so maybe what we

805
00:31:59,240 --> 00:32:03,529
would prefer to do is actually just do

806
00:32:02,210 --> 00:32:08,509
something like

807
00:32:03,529 --> 00:32:11,450
if cursor is hidden you know alright I

808
00:32:08,509 --> 00:32:13,759
guess if so or like if debug show cursor

809
00:32:11,450 --> 00:32:15,230
or something like this then we will

810
00:32:13,759 --> 00:32:17,960
actually allow the diff when proc to

811
00:32:15,230 --> 00:32:19,849
handle it otherwise not so we could do

812
00:32:17,960 --> 00:32:21,529
something that looked a little like this

813
00:32:19,849 --> 00:32:27,409
and then instead of having a global

814
00:32:21,529 --> 00:32:33,190
cursor we just have debug global show

815
00:32:27,410 --> 00:32:33,190
Chris or something like this there we go

816
00:32:33,730 --> 00:32:39,230
there we go so you know what I could do

817
00:32:37,039 --> 00:32:41,299
here is basically say alright we'll

818
00:32:39,230 --> 00:32:44,420
actually setup the cursor in our in our

819
00:32:41,299 --> 00:32:45,889
wind prog so that it'll basically allow

820
00:32:44,420 --> 00:32:46,940
Windows to do whatever random stuff it

821
00:32:45,890 --> 00:32:49,940
does so we don't have to go figure out

822
00:32:46,940 --> 00:32:51,559
all the right stuff to do so in here

823
00:32:49,940 --> 00:32:53,690
we'll still do that where we actually

824
00:32:51,559 --> 00:32:57,079
specify cursor we'll load out the

825
00:32:53,690 --> 00:32:58,970
default cursor IC arrow and then we'll

826
00:32:57,079 --> 00:33:01,460
just have our debug global we'll

827
00:32:58,970 --> 00:33:03,890
basically the debug global show cursor

828
00:33:01,460 --> 00:33:06,769
and for now I guess what we can do is

829
00:33:03,890 --> 00:33:09,500
basically say you know we've defined in

830
00:33:06,769 --> 00:33:12,680
our handmade platform to H we've got our

831
00:33:09,500 --> 00:33:15,890
definitions for for what's supposed to

832
00:33:12,680 --> 00:33:17,360
be or at least I thought we did for like

833
00:33:15,890 --> 00:33:22,040
handmade internal and stuff like that

834
00:33:17,359 --> 00:33:24,319
and made did we did we leave those in

835
00:33:22,039 --> 00:33:26,599
here no yeah so this this should

836
00:33:24,319 --> 00:33:28,399
actually be this this should actually be

837
00:33:26,599 --> 00:33:29,689
in handmade platform because that

838
00:33:28,400 --> 00:33:31,759
actually affects everybody just want

839
00:33:29,690 --> 00:33:33,320
that documentation there so basically we

840
00:33:31,759 --> 00:33:33,950
said these were the things we were going

841
00:33:33,319 --> 00:33:38,720
to do

842
00:33:33,950 --> 00:33:40,130
so if handmade internal is is on so this

843
00:33:38,720 --> 00:33:41,839
is an internal build then we probably

844
00:33:40,130 --> 00:33:43,340
want that mouse cursor right we want to

845
00:33:41,839 --> 00:33:44,509
see the mouse cursor and if we're

846
00:33:43,339 --> 00:33:45,919
building a release build then we

847
00:33:44,509 --> 00:33:47,210
wouldn't want that mouse cursor in there

848
00:33:45,920 --> 00:33:49,610
right

849
00:33:47,210 --> 00:33:51,380
oops and then I didn't actually change

850
00:33:49,609 --> 00:33:54,979
this to a full 32 which is what I wanted

851
00:33:51,380 --> 00:33:56,840
so now when we do our build in theory we

852
00:33:54,980 --> 00:33:58,910
should have the mouse cursor work

853
00:33:56,839 --> 00:34:00,589
properly I still don't know I do not

854
00:33:58,910 --> 00:34:02,509
know why the little spinning arrow is

855
00:34:00,589 --> 00:34:06,409
happening there I'm guessing we haven't

856
00:34:02,509 --> 00:34:09,260
done some thing that it wants us to do

857
00:34:06,410 --> 00:34:13,579
to let it know to so that it will know

858
00:34:09,260 --> 00:34:15,169
that we're done loading and I don't know

859
00:34:13,579 --> 00:34:15,608
let's take a look and see if we can find

860
00:34:15,168 --> 00:34:23,378
out what

861
00:34:15,608 --> 00:34:25,268
that is let's take a look well we want

862
00:34:23,378 --> 00:34:29,230
to know when

863
00:34:25,268 --> 00:34:36,578
how does Windows know your app is done

864
00:34:29,230 --> 00:34:44,009
loading No

865
00:34:36,579 --> 00:34:49,419
so yeah windows or win32 cursor arrow

866
00:34:44,009 --> 00:34:55,949
spinning let's see here I've been the

867
00:34:49,418 --> 00:34:55,949
hourglass spinning cursor display yeah

868
00:34:56,730 --> 00:35:01,889
I'm not sure I might have to look this

869
00:34:59,380 --> 00:35:05,108
one up on my own basically so

870
00:35:01,889 --> 00:35:06,788
essentially if I remember correctly

871
00:35:05,108 --> 00:35:08,170
unfortunately I remember the

872
00:35:06,789 --> 00:35:11,859
circumstance but I don't actually

873
00:35:08,170 --> 00:35:15,460
remember what the actual set of things

874
00:35:11,858 --> 00:35:17,920
is my recollection is that when a

875
00:35:15,460 --> 00:35:20,048
Windows application starts what happens

876
00:35:17,920 --> 00:35:22,539
is it assumes that the application is

877
00:35:20,048 --> 00:35:25,480
loading and uses the busy that arrow

878
00:35:22,539 --> 00:35:29,910
with the with the spinning cursor it

879
00:35:25,480 --> 00:35:32,679
uses that until you have done something

880
00:35:29,909 --> 00:35:34,328
some set of things that it looks for if

881
00:35:32,679 --> 00:35:36,248
you do any one of those things it

882
00:35:34,329 --> 00:35:39,190
assumes that you've finished loading I

883
00:35:36,248 --> 00:35:41,709
don't actually remember what any of them

884
00:35:39,190 --> 00:35:45,900
are unfortunately and I'm guessing we

885
00:35:41,710 --> 00:35:48,940
just aren't doing whatever that is right

886
00:35:45,900 --> 00:35:51,730
so if that makes sense and I don't

887
00:35:48,940 --> 00:35:57,450
really know I don't know if anyone here

888
00:35:51,730 --> 00:35:57,449
has this sort of thing let's see

889
00:36:00,210 --> 00:36:12,039
yeah doesn't look like these people know

890
00:36:04,809 --> 00:36:16,390
I really want a Raymond Chen post let's

891
00:36:12,039 --> 00:36:22,089
see here let's let's see wonder if I can

892
00:36:16,389 --> 00:36:28,929
just go ahead and say Raymond Chen let's

893
00:36:22,088 --> 00:36:40,599
see let's see Raymond Chen let's just

894
00:36:28,929 --> 00:36:45,399
you know it doesn't look like I can

895
00:36:40,599 --> 00:36:47,289
quickly get it let's see yeah I really

896
00:36:45,400 --> 00:36:49,660
want a Raymond Chen Raymond Chen sight

897
00:36:47,289 --> 00:36:52,000
is awesome because he answers you know

898
00:36:49,659 --> 00:36:53,348
basically windows questions in a very

899
00:36:52,000 --> 00:36:56,619
thorough way that's usually very

900
00:36:53,349 --> 00:36:58,599
accurate but yeah so I don't know why it

901
00:36:56,619 --> 00:36:59,858
thinks we're still loading it's okay I

902
00:36:58,599 --> 00:37:01,000
mean it goes away after a second but

903
00:36:59,858 --> 00:37:02,409
really it should have gone away right

904
00:37:01,000 --> 00:37:05,769
then because there's nothing actually

905
00:37:02,409 --> 00:37:08,108
that we're doing so I'm not sure why it

906
00:37:05,769 --> 00:37:14,259
thinks we need to keep doing that that

907
00:37:08,108 --> 00:37:16,750
cursor but I'm sure it's just a case of

908
00:37:14,260 --> 00:37:18,069
something where there's there's some

909
00:37:16,750 --> 00:37:22,000
call that it would prefer that we were

910
00:37:18,068 --> 00:37:23,579
making that we are not making so yeah so

911
00:37:22,000 --> 00:37:27,068
that's what I'm gonna assume for now I

912
00:37:23,579 --> 00:37:29,140
don't actually know but but we'll we'll

913
00:37:27,068 --> 00:37:30,880
leave that as it to do and I'll see if I

914
00:37:29,139 --> 00:37:33,489
can find an article on it because I

915
00:37:30,880 --> 00:37:37,690
remember explicitly reading about that

916
00:37:33,489 --> 00:37:41,379
long ago and I've just forgotten so

917
00:37:37,690 --> 00:37:46,150
we'll change this to make the right call

918
00:37:41,380 --> 00:37:51,180
so Windows doesn't think we're still

919
00:37:46,150 --> 00:37:54,608
loading or a bit after we actually start

920
00:37:51,179 --> 00:37:56,379
so there now we can use Raymond Chen

921
00:37:54,608 --> 00:37:57,489
right now because full screen support is

922
00:37:56,380 --> 00:37:59,818
something that it would probably be nice

923
00:37:57,489 --> 00:38:03,159
to to go ahead and put in there as well

924
00:37:59,818 --> 00:38:04,509
which is that we don't really have too

925
00:38:03,159 --> 00:38:05,739
much of that going on because our

926
00:38:04,510 --> 00:38:06,849
renderer is kind of fixed to just

927
00:38:05,739 --> 00:38:08,558
rendering that little square at the

928
00:38:06,849 --> 00:38:10,390
moment but we're gonna want to start you

929
00:38:08,559 --> 00:38:11,440
know getting away from that especially

930
00:38:10,389 --> 00:38:13,000
when we start on the renderer

931
00:38:11,440 --> 00:38:15,099
proper so one thing I did want to say

932
00:38:13,000 --> 00:38:17,170
was basically fullscreen Raymond Chen

933
00:38:15,099 --> 00:38:18,630
this is to give you an example since we

934
00:38:17,170 --> 00:38:22,990
were talking about it

935
00:38:18,630 --> 00:38:28,119
let me see if I can find one of those

936
00:38:22,989 --> 00:38:30,279
here we go so I believe this is a good

937
00:38:28,119 --> 00:38:36,480
article on that I don't actually know if

938
00:38:30,280 --> 00:38:36,480
that's true let's see let's see here

939
00:38:36,690 --> 00:38:45,130
you actually see if I can find yeah so I

940
00:38:42,840 --> 00:38:46,720
guess that's the best one I don't know I

941
00:38:45,130 --> 00:38:50,260
just doesn't look like the one that I

942
00:38:46,719 --> 00:38:51,639
was thinking of I'm actually thinking of

943
00:38:50,260 --> 00:38:58,030
a different Raymond Chen full screen

944
00:38:51,639 --> 00:39:01,179
article let's find out let's see Raymond

945
00:38:58,030 --> 00:39:02,950
Chen let's switch I want to show you

946
00:39:01,179 --> 00:39:05,169
because this is a good blog it's a good

947
00:39:02,949 --> 00:39:10,059
it's a good blog to go on I don't know

948
00:39:05,170 --> 00:39:13,750
if see if the Stack Overflow has a link

949
00:39:10,059 --> 00:39:15,309
to it here Google's failing me today I

950
00:39:13,750 --> 00:39:17,349
guess my Google foo is not very good

951
00:39:15,309 --> 00:39:21,009
here we go this is the one last thinking

952
00:39:17,349 --> 00:39:23,319
of I believe yes here you go

953
00:39:21,010 --> 00:39:25,270
so basically if we want to just put our

954
00:39:23,320 --> 00:39:27,010
window up and cover the whole screen

955
00:39:25,269 --> 00:39:31,349
which is something that we might want to

956
00:39:27,010 --> 00:39:33,880
do basically this code is some probably

957
00:39:31,349 --> 00:39:35,769
verifiably decent code because it comes

958
00:39:33,880 --> 00:39:38,740
from Raymond who actually works on

959
00:39:35,769 --> 00:39:41,110
Windows and stuff and tends to have the

960
00:39:38,739 --> 00:39:43,419
right sort of answers to all of the

961
00:39:41,110 --> 00:39:46,269
crazy stuff that goes on inside windows

962
00:39:43,420 --> 00:39:49,659
because obviously there's just so much

963
00:39:46,269 --> 00:39:52,090
stuff in Windows and it's often so crazy

964
00:39:49,659 --> 00:39:53,649
spaghetti in there that the likelihood

965
00:39:52,090 --> 00:39:55,990
that you'll figure out how to do

966
00:39:53,650 --> 00:39:57,730
something like properly set a full

967
00:39:55,989 --> 00:40:00,369
screen window without doing something

968
00:39:57,730 --> 00:40:03,039
wrong in some scenario is probably

969
00:40:00,369 --> 00:40:05,619
unlikely so if you can find Raymond Chen

970
00:40:03,039 --> 00:40:09,579
showing you how to do something I highly

971
00:40:05,619 --> 00:40:11,799
recommend that you take his advice that

972
00:40:09,579 --> 00:40:14,019
said you know maybe this won't work well

973
00:40:11,800 --> 00:40:15,670
we'll have to double-check you know even

974
00:40:14,019 --> 00:40:17,469
Raymond Chen is wrong sometimes but I

975
00:40:15,670 --> 00:40:19,599
suspect that basically if we want to

976
00:40:17,469 --> 00:40:22,059
place our window at full screen this is

977
00:40:19,599 --> 00:40:24,460
probably the best place to start because

978
00:40:22,059 --> 00:40:26,469
essentially he

979
00:40:24,460 --> 00:40:29,530
knows those internals a lot better than

980
00:40:26,469 --> 00:40:31,689
anyone like outside like us is going to

981
00:40:29,530 --> 00:40:34,030
know and so it's a good thing to look at

982
00:40:31,690 --> 00:40:35,559
sort of what he does and so you can take

983
00:40:34,030 --> 00:40:37,690
a look at this routine that he suggests

984
00:40:35,559 --> 00:40:40,150
here which is basically a toggle it will

985
00:40:37,690 --> 00:40:41,740
toggle between fullscreen and not and so

986
00:40:40,150 --> 00:40:43,360
the way that it works is first it goes

987
00:40:41,739 --> 00:40:45,459
ahead and asked what the style of the

988
00:40:43,360 --> 00:40:46,870
window is currently and if the style of

989
00:40:45,460 --> 00:40:49,329
the window is overlapped window which

990
00:40:46,869 --> 00:40:50,650
remember is our style that we were using

991
00:40:49,329 --> 00:40:52,750
which is basically a window that you

992
00:40:50,650 --> 00:40:54,519
just kind of generally you know it's

993
00:40:52,750 --> 00:40:55,840
it's exactly this kind of window it's

994
00:40:54,519 --> 00:40:57,759
it's this kind that you can move around

995
00:40:55,840 --> 00:41:00,789
and do stuff with it's not full screen

996
00:40:57,760 --> 00:41:04,330
at all right if it's one of those then

997
00:41:00,789 --> 00:41:06,789
he basically says let's see what the

998
00:41:04,329 --> 00:41:10,269
monitor is the the monitor the primary

999
00:41:06,789 --> 00:41:12,460
monitor is that we're on and let's save

1000
00:41:10,269 --> 00:41:13,989
where our window is currently so this

1001
00:41:12,460 --> 00:41:17,590
basically saves the location of the

1002
00:41:13,989 --> 00:41:20,199
window as it stands and this gets the

1003
00:41:17,590 --> 00:41:24,430
information for the primary monitor

1004
00:41:20,199 --> 00:41:27,730
which is I guess no I guess what it does

1005
00:41:24,429 --> 00:41:28,989
is I want to say I'll have to look at

1006
00:41:27,730 --> 00:41:30,460
what that default primary does but I

1007
00:41:28,989 --> 00:41:32,679
want to say it actually gets the window

1008
00:41:30,460 --> 00:41:36,190
the monitor that the windows currently

1009
00:41:32,679 --> 00:41:37,719
on and I assume default to primary would

1010
00:41:36,190 --> 00:41:40,329
just mean if the window like straddles

1011
00:41:37,719 --> 00:41:41,379
two monitors default to the primary one

1012
00:41:40,329 --> 00:41:42,489
or something like that I don't know but

1013
00:41:41,380 --> 00:41:44,170
we could check let's let's look let's

1014
00:41:42,489 --> 00:41:56,500
look at what that does I don't know

1015
00:41:44,170 --> 00:41:59,829
exactly what that flag does monitor info

1016
00:41:56,500 --> 00:42:01,719
get monitor info oh sorry monitor from

1017
00:41:59,829 --> 00:42:07,119
window is actually the actual thing

1018
00:42:01,719 --> 00:42:09,239
taking that monitor window there we go

1019
00:42:07,119 --> 00:42:12,339
so that takes the window handle right

1020
00:42:09,239 --> 00:42:14,859
and then you know gives us back

1021
00:42:12,340 --> 00:42:18,579
whichever monitor the windows on but

1022
00:42:14,860 --> 00:42:20,250
let's see if the windows not the set any

1023
00:42:18,579 --> 00:42:22,210
okay so basically if the window is not

1024
00:42:20,250 --> 00:42:25,030
anywhere that it can determine what the

1025
00:42:22,210 --> 00:42:26,559
monitor is then it will do default to

1026
00:42:25,030 --> 00:42:28,030
nearest default to null or default to

1027
00:42:26,559 --> 00:42:28,960
primary so obviously want default the

1028
00:42:28,030 --> 00:42:31,840
primary because we'd like to go

1029
00:42:28,960 --> 00:42:34,750
fullscreen on something yes that's fine

1030
00:42:31,840 --> 00:42:37,420
so basically that's what that does right

1031
00:42:34,750 --> 00:42:38,199
and then we go ahead and if assuming

1032
00:42:37,420 --> 00:42:39,400
that we were

1033
00:42:38,199 --> 00:42:41,949
able to actually execute those two

1034
00:42:39,400 --> 00:42:43,900
function calls we set the style to not

1035
00:42:41,949 --> 00:42:45,519
have any of the bits of overlapped

1036
00:42:43,900 --> 00:42:47,650
window in it remember overlapped window

1037
00:42:45,519 --> 00:42:50,139
for those of you who don't remember we

1038
00:42:47,650 --> 00:42:53,619
actually did this before overlapped

1039
00:42:50,139 --> 00:42:54,519
window is a you can jump right to window

1040
00:42:53,619 --> 00:42:56,950
styles look at that

1041
00:42:54,519 --> 00:42:58,750
thank you Google overlapped window is

1042
00:42:56,949 --> 00:43:00,730
actually an aggregate so you can see

1043
00:42:58,750 --> 00:43:02,050
it's actually overlapped caption system

1044
00:43:00,730 --> 00:43:03,849
in your thick frame minimized locks

1045
00:43:02,050 --> 00:43:05,769
maximize all the things that sort of

1046
00:43:03,849 --> 00:43:07,660
make a standard window a standard window

1047
00:43:05,769 --> 00:43:09,250
all those flags are in overlapped window

1048
00:43:07,659 --> 00:43:10,598
so basically what he's doing is he's

1049
00:43:09,250 --> 00:43:11,650
saying let's clear out all of those

1050
00:43:10,599 --> 00:43:14,500
they're gone now

1051
00:43:11,650 --> 00:43:17,019
we mask them out and then he's gonna

1052
00:43:14,500 --> 00:43:18,880
call set window pose to basically change

1053
00:43:17,019 --> 00:43:21,759
it to be the size of the full screen

1054
00:43:18,880 --> 00:43:24,280
right and he's passing he's saying don't

1055
00:43:21,760 --> 00:43:27,460
change where it is on in the Z order so

1056
00:43:24,280 --> 00:43:28,810
don't raise it or lower it and then give

1057
00:43:27,460 --> 00:43:30,280
it a notification that's what these

1058
00:43:28,809 --> 00:43:32,559
flags do in set window pose

1059
00:43:30,280 --> 00:43:34,720
give it a notification that its border

1060
00:43:32,559 --> 00:43:37,239
that it's it's like this part it's sort

1061
00:43:34,719 --> 00:43:39,789
of external to the client area has

1062
00:43:37,239 --> 00:43:41,289
changed and needs to be redrawn assuming

1063
00:43:39,789 --> 00:43:42,489
that the the thing was already full

1064
00:43:41,289 --> 00:43:44,469
screen which is what he's doing in this

1065
00:43:42,489 --> 00:43:46,838
case he does the opposite he puts those

1066
00:43:44,469 --> 00:43:49,269
window those overlapped window things

1067
00:43:46,838 --> 00:43:51,578
back in he sets the window back to

1068
00:43:49,269 --> 00:43:54,849
whatever the last place it was you know

1069
00:43:51,579 --> 00:43:56,920
was and then he goes ahead and does that

1070
00:43:54,849 --> 00:43:58,530
set window post to update again the set

1071
00:43:56,920 --> 00:44:00,639
window pose is basically a thing that

1072
00:43:58,530 --> 00:44:01,839
you know it's weird that there's set

1073
00:44:00,639 --> 00:44:03,639
window placement and then you have to

1074
00:44:01,838 --> 00:44:05,588
call set window pose that's just how

1075
00:44:03,639 --> 00:44:07,929
ridiculous Windows is basically when you

1076
00:44:05,588 --> 00:44:10,299
call this it doesn't actually do the

1077
00:44:07,929 --> 00:44:12,068
repainting necessarily for you so you

1078
00:44:10,300 --> 00:44:14,650
have to go ahead and do this to get your

1079
00:44:12,068 --> 00:44:16,059
frame to repaint properly it's windows

1080
00:44:14,650 --> 00:44:17,349
is full of horrible stuff like that

1081
00:44:16,059 --> 00:44:19,929
that's just the way it is is why you

1082
00:44:17,349 --> 00:44:21,190
have to look at people like Raymond Chen

1083
00:44:19,929 --> 00:44:22,509
to find out how to do stuff properly

1084
00:44:21,190 --> 00:44:24,579
because the chances that you'd figure

1085
00:44:22,510 --> 00:44:28,569
out these exact incantations are like

1086
00:44:24,579 --> 00:44:32,318
nil right so there you go so in theory

1087
00:44:28,568 --> 00:44:34,059
this should work I believe and so let's

1088
00:44:32,318 --> 00:44:36,519
go ahead and try it like I said I trust

1089
00:44:34,059 --> 00:44:39,730
Raymond so I think that this is probably

1090
00:44:36,519 --> 00:44:42,400
a good a good way to go so we'll go

1091
00:44:39,730 --> 00:44:45,969
ahead and do essentially exactly what he

1092
00:44:42,400 --> 00:44:47,650
says for for for all intents and

1093
00:44:45,969 --> 00:44:49,000
purposes we might you know make a slight

1094
00:44:47,650 --> 00:44:51,068
modification here or there but for the

1095
00:44:49,000 --> 00:44:52,059
most part we're going to just exactly

1096
00:44:51,068 --> 00:44:54,278
copy

1097
00:44:52,059 --> 00:44:58,709
what he does because like I said he

1098
00:44:54,278 --> 00:45:03,338
knows much better than we do so global

1099
00:44:58,708 --> 00:45:06,009
window position like this oh and he

1100
00:45:03,338 --> 00:45:08,438
wants it to have that size of there so

1101
00:45:06,009 --> 00:45:10,509
that basically would be I assumed that

1102
00:45:08,438 --> 00:45:13,268
the reason he's doing that is just so he

1103
00:45:10,509 --> 00:45:15,130
can use it even if it if it wasn't

1104
00:45:13,268 --> 00:45:17,379
initialized yet I'm not exactly sure why

1105
00:45:15,130 --> 00:45:19,150
but yes I guess when you when you call

1106
00:45:17,380 --> 00:45:21,039
you have to give it that size when you

1107
00:45:19,150 --> 00:45:24,459
get window placement probably requires

1108
00:45:21,039 --> 00:45:26,229
that that size is there all right so we

1109
00:45:24,458 --> 00:45:29,169
basically now have a thing which is like

1110
00:45:26,228 --> 00:45:30,188
toggle fullscreen for now and we might

1111
00:45:29,170 --> 00:45:33,938
make this a little more complicated

1112
00:45:30,188 --> 00:45:35,288
later I don't actually know why he's I

1113
00:45:33,938 --> 00:45:36,969
guess he was doing it in a message pump

1114
00:45:35,289 --> 00:45:38,380
kind of a thing but that X in that why

1115
00:45:36,969 --> 00:45:40,449
aren't used and neither are the key

1116
00:45:38,380 --> 00:45:41,858
flags so really that doesn't have to be

1117
00:45:40,449 --> 00:45:44,499
there really all we need to know is what

1118
00:45:41,858 --> 00:45:47,228
the window was right and so we're going

1119
00:45:44,498 --> 00:45:49,568
to go ahead and get that back get that

1120
00:45:47,228 --> 00:45:50,858
that style back not a big fan of

1121
00:45:49,568 --> 00:45:52,329
Hungarian so I'm just going to go ahead

1122
00:45:50,858 --> 00:45:54,818
and kind of clean this up so it doesn't

1123
00:45:52,329 --> 00:45:59,048
look totally out of place

1124
00:45:54,818 --> 00:46:03,838
and I might also while we're at it take

1125
00:45:59,048 --> 00:46:06,429
snap that who we got the code from right

1126
00:46:03,838 --> 00:46:11,338
this follows Raymond

1127
00:46:06,429 --> 00:46:18,009
Chen's prescription or full screen

1128
00:46:11,338 --> 00:46:20,139
toggling see there so that way if people

1129
00:46:18,009 --> 00:46:22,869
are wondering what's going on there they

1130
00:46:20,139 --> 00:46:24,639
can basically go oh ok let me go read

1131
00:46:22,869 --> 00:46:27,729
Raymond Chen's article about it and see

1132
00:46:24,639 --> 00:46:28,989
you know why why Casey thought that this

1133
00:46:27,728 --> 00:46:31,178
was the series of steps you're supposed

1134
00:46:28,989 --> 00:46:34,179
to do and I'm like just just following

1135
00:46:31,179 --> 00:46:36,759
just Rahl and Raymond man so anyway

1136
00:46:34,179 --> 00:46:39,400
we've got the monitor info stuff going

1137
00:46:36,759 --> 00:46:41,670
on here he initializes the hoops and a

1138
00:46:39,400 --> 00:46:43,630
half size up there okay monitor info

1139
00:46:41,670 --> 00:46:45,489
again we initialize it with the size

1140
00:46:43,630 --> 00:46:47,890
because Windows loves to have us put the

1141
00:46:45,489 --> 00:46:49,329
size and destructs the head of time for

1142
00:46:47,889 --> 00:46:50,798
no real reason I think they thought that

1143
00:46:49,329 --> 00:46:54,099
would increase compatibility I doubt it

1144
00:46:50,798 --> 00:46:57,099
ever did anyway let's go ahead and

1145
00:46:54,099 --> 00:46:59,380
finish up that there we need to go ahead

1146
00:46:57,099 --> 00:47:02,309
and put in our global window position

1147
00:46:59,380 --> 00:47:04,559
here like so

1148
00:47:02,309 --> 00:47:08,250
and we need to get our monitor info like

1149
00:47:04,559 --> 00:47:10,170
that then our set call should be fine

1150
00:47:08,250 --> 00:47:16,110
basically exactly what he was doing

1151
00:47:10,170 --> 00:47:18,389
style there we go and there we go H wins

1152
00:47:16,110 --> 00:47:23,039
top let's see

1153
00:47:18,389 --> 00:47:24,929
RC monitor left so these are just in the

1154
00:47:23,039 --> 00:47:26,789
monitor info structure keys basically

1155
00:47:24,929 --> 00:47:30,299
just using that monitor info to figure

1156
00:47:26,789 --> 00:47:32,460
out how big the screen should be which

1157
00:47:30,300 --> 00:47:34,800
looks like a good idea to me that will

1158
00:47:32,460 --> 00:47:36,659
give us the full screen and then we just

1159
00:47:34,800 --> 00:47:39,090
have to do the case where we want to set

1160
00:47:36,659 --> 00:47:42,389
it back so there we go

1161
00:47:39,090 --> 00:47:42,870
window oops window Wow take him very

1162
00:47:42,389 --> 00:47:45,509
well

1163
00:47:42,869 --> 00:47:47,279
window and we're gonna restore that

1164
00:47:45,510 --> 00:47:49,380
placement here so this is that global

1165
00:47:47,280 --> 00:47:52,620
again the window position and this is

1166
00:47:49,380 --> 00:47:55,019
just the thing that has it redo the

1167
00:47:52,619 --> 00:47:57,269
positioning okay so in theory that

1168
00:47:55,019 --> 00:47:59,820
should do our fullscreen toggle so I'm

1169
00:47:57,269 --> 00:48:02,030
gonna go ahead and put that down where

1170
00:47:59,820 --> 00:48:05,130
we do our processing our keyboard

1171
00:48:02,030 --> 00:48:07,620
messages let's go ahead and do that and

1172
00:48:05,130 --> 00:48:09,900
so really all I want to do here is I

1173
00:48:07,619 --> 00:48:12,750
want to call this on a particular key

1174
00:48:09,900 --> 00:48:14,160
message right so I want a base to be

1175
00:48:12,750 --> 00:48:16,500
able to toggle the full screen when I do

1176
00:48:14,159 --> 00:48:19,049
a particular key message and in this

1177
00:48:16,500 --> 00:48:21,030
case what I want to do is follow the old

1178
00:48:19,050 --> 00:48:22,650
since this is mostly a debugging thing

1179
00:48:21,030 --> 00:48:25,170
you know normally the user wouldn't be

1180
00:48:22,650 --> 00:48:27,389
hitting a key to toggle full screen I'm

1181
00:48:25,170 --> 00:48:29,190
going to use the standard the window

1182
00:48:27,389 --> 00:48:32,670
standard key for it which is a bit

1183
00:48:29,190 --> 00:48:35,519
obtuse but you know it is what it is so

1184
00:48:32,670 --> 00:48:40,530
I believe we handled alt f4 the standard

1185
00:48:35,519 --> 00:48:43,639
for this is actually if I remember

1186
00:48:40,530 --> 00:48:46,890
correctly it's actually alt enter right

1187
00:48:43,639 --> 00:48:50,309
so it's basically I don't know what the

1188
00:48:46,889 --> 00:48:51,900
remember what the the VK code for return

1189
00:48:50,309 --> 00:48:54,420
is I know if it's enter or return

1190
00:48:51,900 --> 00:48:56,070
but if the Alt key was down and they hit

1191
00:48:54,420 --> 00:49:00,170
return then I'm just going to call that

1192
00:48:56,070 --> 00:49:04,559
toggle full-screen function assuming

1193
00:49:00,170 --> 00:49:07,230
these this also I always forget to use

1194
00:49:04,559 --> 00:49:10,340
is down in here right

1195
00:49:07,230 --> 00:49:12,389
I always forget to use or wet or

1196
00:49:10,340 --> 00:49:14,640
basically went down

1197
00:49:12,389 --> 00:49:16,139
right I always forget to do to put

1198
00:49:14,639 --> 00:49:18,358
things in there and so these should also

1199
00:49:16,139 --> 00:49:20,568
be in there because we essentially only

1200
00:49:18,358 --> 00:49:23,130
want to ever do this stuff on key down

1201
00:49:20,568 --> 00:49:24,719
we don't want to do it on key up as well

1202
00:49:23,130 --> 00:49:26,160
because otherwise we'd trigger twice

1203
00:49:24,719 --> 00:49:30,750
once when it goes down once when it

1204
00:49:26,159 --> 00:49:32,518
comes up window is undeclared oh well

1205
00:49:30,750 --> 00:49:35,690
yes that's true we want to do it on the

1206
00:49:32,518 --> 00:49:40,649
window that that that was coming in here

1207
00:49:35,690 --> 00:49:41,639
what is it H wind there we go yeah I

1208
00:49:40,650 --> 00:49:42,809
need to get it out of the message

1209
00:49:41,639 --> 00:49:44,429
structure because we're not actually any

1210
00:49:42,809 --> 00:49:47,039
window handle and I guess I could also

1211
00:49:44,429 --> 00:49:50,518
say make sure that that that is valid

1212
00:49:47,039 --> 00:49:56,519
there we go so so let's take a look at

1213
00:49:50,518 --> 00:50:00,409
what we've got here looks like I'm still

1214
00:49:56,518 --> 00:50:00,409
doing it that's right

1215
00:50:01,518 --> 00:50:05,818
never never learn real ly I've done this

1216
00:50:04,440 --> 00:50:07,500
every time we've added a keyboard

1217
00:50:05,818 --> 00:50:10,889
handling I forget to do it only on the

1218
00:50:07,500 --> 00:50:11,278
down all right there we go so there we

1219
00:50:10,889 --> 00:50:13,980
go

1220
00:50:11,278 --> 00:50:15,358
we now go full screen just fine and so

1221
00:50:13,980 --> 00:50:17,579
the reason I want to do that of course

1222
00:50:15,358 --> 00:50:19,798
was because I feel like later on down

1223
00:50:17,579 --> 00:50:22,440
the road we're kind of gonna want to

1224
00:50:19,798 --> 00:50:24,568
have it so that we can switch to full

1225
00:50:22,440 --> 00:50:26,039
screen and have the renderer do

1226
00:50:24,568 --> 00:50:27,538
rendering a full screen even though

1227
00:50:26,039 --> 00:50:29,309
we'll be horribly slow in software cuz

1228
00:50:27,539 --> 00:50:31,049
there's too many pixels we'll want to

1229
00:50:29,309 --> 00:50:32,640
test you know doing that sort of stuff

1230
00:50:31,048 --> 00:50:34,170
so I just wanted to kind of throw that

1231
00:50:32,639 --> 00:50:35,940
in there it's really simple like I said

1232
00:50:34,170 --> 00:50:37,950
as long as you have an expert to guide

1233
00:50:35,940 --> 00:50:39,659
you when Raymond Chen writes about

1234
00:50:37,949 --> 00:50:41,730
something it takes a lot of the pain out

1235
00:50:39,659 --> 00:50:43,980
of Windows because you can just what he

1236
00:50:41,730 --> 00:50:45,539
says works like he's he just really

1237
00:50:43,980 --> 00:50:46,798
knows that stuff better than anyone else

1238
00:50:45,539 --> 00:50:48,778
and so you find someone Stack Overflow

1239
00:50:46,798 --> 00:50:49,949
it's probably wrong and you'll go be

1240
00:50:48,778 --> 00:50:52,380
super grumpy and tear your hair out

1241
00:50:49,949 --> 00:50:53,788
however if the Stack Overflow says

1242
00:50:52,380 --> 00:50:55,200
here's what Raymond Chen says just click

1243
00:50:53,789 --> 00:50:56,789
on the Raymond Chen link and you are

1244
00:50:55,199 --> 00:51:01,828
done like you can pretty much count on

1245
00:50:56,789 --> 00:51:09,420
that being a pretty solid answer all

1246
00:51:01,829 --> 00:51:11,278
right so so that's all good

1247
00:51:09,420 --> 00:51:13,500
I should mention a couple caveats there

1248
00:51:11,278 --> 00:51:15,389
they're caveats that I don't mind but

1249
00:51:13,500 --> 00:51:17,369
other people might so there's multiple

1250
00:51:15,389 --> 00:51:20,338
ways to go fullscreen and windows I'm

1251
00:51:17,369 --> 00:51:22,890
doing the one that I prefer but it has

1252
00:51:20,338 --> 00:51:25,380
downsides so the reason I prefer this

1253
00:51:22,889 --> 00:51:26,308
way is because I find it's a lot more

1254
00:51:25,380 --> 00:51:28,200
stable

1255
00:51:26,309 --> 00:51:29,910
and it doesn't cause weird monitor

1256
00:51:28,199 --> 00:51:32,159
flashing and it doesn't cause your HDMI

1257
00:51:29,909 --> 00:51:34,379
to lose sync and that sort of stuff but

1258
00:51:32,159 --> 00:51:36,358
it has some downsides one downside is

1259
00:51:34,380 --> 00:51:38,970
you can't change the refresh rate now

1260
00:51:36,358 --> 00:51:40,288
that's not a particularly big deal these

1261
00:51:38,969 --> 00:51:42,389
days because you really shouldn't be

1262
00:51:40,289 --> 00:51:44,520
changing the refresh rate on the monitor

1263
00:51:42,389 --> 00:51:46,489
probably whatever the users were set to

1264
00:51:44,519 --> 00:51:48,750
is probably the one that you want but

1265
00:51:46,489 --> 00:51:50,279
you know maybe they've got it set to

1266
00:51:48,750 --> 00:51:51,750
something wonky I don't know and you

1267
00:51:50,280 --> 00:51:52,980
want to try and set it to 60 if you

1268
00:51:51,750 --> 00:51:54,690
think the monitor can handle 60 you

1269
00:51:52,980 --> 00:51:56,880
could enumerate the modes and do it so

1270
00:51:54,690 --> 00:51:59,789
there are other things that you could be

1271
00:51:56,880 --> 00:52:01,410
calling right for example change display

1272
00:51:59,789 --> 00:52:03,270
settings I just want to point this out

1273
00:52:01,409 --> 00:52:05,969
change display settings is what a lot of

1274
00:52:03,269 --> 00:52:07,409
games will call change display settings

1275
00:52:05,969 --> 00:52:09,929
actually allows you to be much more

1276
00:52:07,409 --> 00:52:11,969
specific about what's going on and so

1277
00:52:09,929 --> 00:52:14,279
after you know you would you'd basically

1278
00:52:11,969 --> 00:52:16,108
do this first you'd call change display

1279
00:52:14,280 --> 00:52:17,819
settings and you would pass a bunch of

1280
00:52:16,108 --> 00:52:20,460
stuff like what the resolution is that

1281
00:52:17,818 --> 00:52:24,298
you actually wanted this to monitor to

1282
00:52:20,460 --> 00:52:26,519
be in right and then you would still do

1283
00:52:24,298 --> 00:52:28,530
probably what I just did

1284
00:52:26,519 --> 00:52:30,210
follow Raymond Chen's advice but you'd

1285
00:52:28,530 --> 00:52:33,630
first call that change display settings

1286
00:52:30,210 --> 00:52:35,519
and so sometimes you have to do that if

1287
00:52:33,630 --> 00:52:37,619
you have other concerns right look

1288
00:52:35,519 --> 00:52:39,239
basically we are running the game in

1289
00:52:37,619 --> 00:52:43,019
whatever mode the user has their

1290
00:52:39,239 --> 00:52:44,729
monitoring right and usually that's okay

1291
00:52:43,019 --> 00:52:47,699
because what you can do is you can just

1292
00:52:44,730 --> 00:52:49,139
have the GPU stretch you it like even if

1293
00:52:47,699 --> 00:52:50,519
we were only going to render at a small

1294
00:52:49,139 --> 00:52:52,500
resolution because we can't you know

1295
00:52:50,519 --> 00:52:55,769
like even let's say we only run at 1080p

1296
00:52:52,500 --> 00:52:59,250
even on GPUs or something and the user

1297
00:52:55,769 --> 00:53:02,818
is trying to run at you know some 240 by

1298
00:52:59,250 --> 00:53:05,489
that 2400 by something or a 3k 4k

1299
00:53:02,818 --> 00:53:06,900
display something like that usually what

1300
00:53:05,489 --> 00:53:08,368
you want to do is just stretch up to

1301
00:53:06,900 --> 00:53:09,990
that because the stretch split is

1302
00:53:08,369 --> 00:53:13,140
usually fast enough even on those large

1303
00:53:09,989 --> 00:53:15,449
displays to compensate but that's not

1304
00:53:13,139 --> 00:53:16,650
always true either sometimes on some

1305
00:53:15,449 --> 00:53:19,889
things like Intel integrated graphics

1306
00:53:16,650 --> 00:53:21,838
parts the GPU is just horribly slow

1307
00:53:19,889 --> 00:53:23,190
sometimes and you know it can cause you

1308
00:53:21,838 --> 00:53:25,108
problems and you really do want to set

1309
00:53:23,190 --> 00:53:27,599
that display mode so it's just worth

1310
00:53:25,108 --> 00:53:30,509
noting that pretty much anything that

1311
00:53:27,599 --> 00:53:32,400
you're gonna do can have what has has

1312
00:53:30,510 --> 00:53:34,289
some potential negative consequences to

1313
00:53:32,400 --> 00:53:35,970
the user if you really want to do fully

1314
00:53:34,289 --> 00:53:38,430
complete maybe you would even supply

1315
00:53:35,969 --> 00:53:40,529
both as possible ways of doing it and

1316
00:53:38,429 --> 00:53:43,409
you'd try to detect

1317
00:53:40,530 --> 00:53:45,330
like you'd go oh we did the switch we do

1318
00:53:43,409 --> 00:53:47,009
it this way and then if the frame rates

1319
00:53:45,329 --> 00:53:48,449
too slow we try changing the display

1320
00:53:47,010 --> 00:53:50,339
settings down if we detected the Blitz

1321
00:53:48,449 --> 00:53:51,929
too slow and maybe we can try doing this

1322
00:53:50,338 --> 00:53:53,659
on that stream I don't know at this

1323
00:53:51,929 --> 00:53:56,069
point that really shouldn't be a concern

1324
00:53:53,659 --> 00:53:57,539
that's more for older systems but you

1325
00:53:56,070 --> 00:53:58,559
never know and so it's just something to

1326
00:53:57,539 --> 00:54:00,570
be aware of I want to mention I don't

1327
00:53:58,559 --> 00:54:02,608
want people to think that there's no

1328
00:54:00,570 --> 00:54:04,200
downside of doing it this way it has a

1329
00:54:02,608 --> 00:54:05,789
lot of upsides doing it this way but

1330
00:54:04,199 --> 00:54:08,250
there is a potential downside or two

1331
00:54:05,789 --> 00:54:09,420
lurking in the shadows but anyway you

1332
00:54:08,250 --> 00:54:10,710
can see if the employment this way it's

1333
00:54:09,420 --> 00:54:12,630
much nicer because it just goes

1334
00:54:10,710 --> 00:54:15,150
instantly and there's no weirdness right

1335
00:54:12,630 --> 00:54:16,890
and so you really want to do this method

1336
00:54:15,150 --> 00:54:18,000
if you can get away with it and you

1337
00:54:16,889 --> 00:54:20,338
really only want to do the change the

1338
00:54:18,000 --> 00:54:21,929
slave settings if you can't that said

1339
00:54:20,338 --> 00:54:24,210
maybe we should eventually implement the

1340
00:54:21,929 --> 00:54:26,190
change display settings and I'll put it

1341
00:54:24,210 --> 00:54:27,539
to do to that effect adjust it and put

1342
00:54:26,190 --> 00:54:30,000
in a detection thing where we detect

1343
00:54:27,539 --> 00:54:31,800
weight our frame rates really slow and

1344
00:54:30,000 --> 00:54:33,210
the Blitz taking all the time let's

1345
00:54:31,800 --> 00:54:37,519
let's see what we can do about it right

1346
00:54:33,210 --> 00:54:42,740
so let's do change display settings

1347
00:54:37,519 --> 00:54:45,809
option if we detect slow fullscreen blip

1348
00:54:42,739 --> 00:54:48,239
just so we've got that in there all

1349
00:54:45,809 --> 00:54:53,969
right so let's see we took care of our

1350
00:54:48,239 --> 00:54:57,088
set cursor situation and we have our our

1351
00:54:53,969 --> 00:54:59,789
full screen situation going on so I

1352
00:54:57,088 --> 00:55:02,039
think that's good and so really all

1353
00:54:59,789 --> 00:55:04,230
we'll have to do eventually is decide

1354
00:55:02,039 --> 00:55:06,989
what we want to do render wise in terms

1355
00:55:04,230 --> 00:55:08,338
of who gets past what so when we get a

1356
00:55:06,989 --> 00:55:09,389
little bit further down the road this

1357
00:55:08,338 --> 00:55:10,920
will be good because now we've set

1358
00:55:09,389 --> 00:55:12,358
ourselves up so that when we want the

1359
00:55:10,920 --> 00:55:14,369
renderer to start responding to that

1360
00:55:12,358 --> 00:55:15,838
full screen we don't really have much

1361
00:55:14,369 --> 00:55:19,970
work doing the platform layer will just

1362
00:55:15,838 --> 00:55:22,559
kind of work all right so that's good

1363
00:55:19,969 --> 00:55:24,929
yeah that's that's that's good

1364
00:55:22,559 --> 00:55:26,549
I think that's good thing another thing

1365
00:55:24,929 --> 00:55:27,868
that we could do I guess real quickly I

1366
00:55:26,550 --> 00:55:30,420
don't know if this is what we want to do

1367
00:55:27,869 --> 00:55:33,300
long term probably not but in terms of

1368
00:55:30,420 --> 00:55:35,550
stretch di bits what we could do too is

1369
00:55:33,300 --> 00:55:39,000
something kind of a little wonky where

1370
00:55:35,550 --> 00:55:41,280
we basically do some kind of an if where

1371
00:55:39,000 --> 00:55:44,550
we do you know if we are in full screen

1372
00:55:41,280 --> 00:55:46,470
then do that stretch blit like if it

1373
00:55:44,550 --> 00:55:48,690
turns out that you can do a perfect 2x

1374
00:55:46,469 --> 00:55:50,909
do the perfect 2x and that code would be

1375
00:55:48,690 --> 00:55:51,909
pretty trivial right that code would be

1376
00:55:50,909 --> 00:55:55,358
something

1377
00:55:51,909 --> 00:55:58,029
that kind of looks like this let's say

1378
00:55:55,358 --> 00:56:02,619
we did something where we said you know

1379
00:55:58,030 --> 00:56:04,298
if window width equals oops I should cry

1380
00:56:02,619 --> 00:56:06,190
put this in the else case just showing

1381
00:56:04,298 --> 00:56:07,239
you kind of a simple thing here this is

1382
00:56:06,190 --> 00:56:08,470
not what I think I'd want to do

1383
00:56:07,239 --> 00:56:12,639
eventually but just to throw it out

1384
00:56:08,469 --> 00:56:14,048
there if the window width equals the

1385
00:56:12,639 --> 00:56:16,929
buffer width times two

1386
00:56:14,048 --> 00:56:18,818
right because we know where we were

1387
00:56:16,929 --> 00:56:20,409
currently doing a down sampled by two

1388
00:56:18,818 --> 00:56:22,389
things so this is just some hacky code

1389
00:56:20,409 --> 00:56:25,838
to put in here just to you know just to

1390
00:56:22,389 --> 00:56:28,659
show you you know an example so if we

1391
00:56:25,838 --> 00:56:31,000
happen to have exactly 2x display then

1392
00:56:28,659 --> 00:56:36,279
go ahead and go ahead and do the full on

1393
00:56:31,000 --> 00:56:38,260
the full on blip basically so I believe

1394
00:56:36,280 --> 00:56:40,450
we just want to go ahead and say offset

1395
00:56:38,260 --> 00:56:43,180
X offset Y is going to be zero in this

1396
00:56:40,449 --> 00:56:46,838
case and then the window width and the

1397
00:56:43,179 --> 00:56:50,469
window height so just do the full the

1398
00:56:46,838 --> 00:56:52,119
full lit up so if we do that then we'll

1399
00:56:50,469 --> 00:56:53,169
still run the way we normally run when

1400
00:56:52,119 --> 00:56:55,470
we're in this mode and when we're in

1401
00:56:53,170 --> 00:56:57,670
this mode we'll get a full screen right

1402
00:56:55,469 --> 00:56:59,409
and it'll basically just do an up

1403
00:56:57,670 --> 00:57:00,940
sampling by two which is a totally fine

1404
00:56:59,409 --> 00:57:03,848
up sampling and shouldn't caused any

1405
00:57:00,940 --> 00:57:05,858
problems so you know for the time being

1406
00:57:03,849 --> 00:57:08,829
that's probably fine

1407
00:57:05,858 --> 00:57:11,798
basically that allows us on and on 1920

1408
00:57:08,829 --> 00:57:13,990
by 1080 displays that allows us to to do

1409
00:57:11,798 --> 00:57:16,210
it in fact we could go one further which

1410
00:57:13,989 --> 00:57:18,578
is actually saying you know in the case

1411
00:57:16,210 --> 00:57:22,389
where it's greater than or equal to it

1412
00:57:18,579 --> 00:57:25,028
will allow it to happen by basically

1413
00:57:22,389 --> 00:57:27,519
saying we'll just enforce that it's

1414
00:57:25,028 --> 00:57:28,989
always 2x so that we basically don't

1415
00:57:27,519 --> 00:57:30,818
have any weird scaling because stretch

1416
00:57:28,989 --> 00:57:32,318
di bits doesn't do particularly good

1417
00:57:30,818 --> 00:57:33,788
scaling if I remember correctly so we

1418
00:57:32,318 --> 00:57:35,798
wouldn't really want to do that

1419
00:57:33,789 --> 00:57:37,510
but in this case now if it's if you're

1420
00:57:35,798 --> 00:57:39,130
resizing the window right and you don't

1421
00:57:37,510 --> 00:57:41,140
have enough room to do a perfect 2 X

1422
00:57:39,130 --> 00:57:43,000
scale it won't do the Proteas scale but

1423
00:57:41,139 --> 00:57:45,250
if you do happen to have it it'll do it

1424
00:57:43,000 --> 00:57:47,469
and that'll work I'm on a 1920 by 1080

1425
00:57:45,250 --> 00:57:48,699
monitor right now if you were on one now

1426
00:57:47,469 --> 00:57:50,288
that's higher than that and you went

1427
00:57:48,699 --> 00:57:52,598
fullscreen you just still get it up in

1428
00:57:50,289 --> 00:57:53,859
the corner I guess we could be even a

1429
00:57:52,599 --> 00:57:55,690
little bit better than that we could

1430
00:57:53,858 --> 00:57:56,980
even do it centered I don't know that

1431
00:57:55,690 --> 00:58:00,590
that necessarily matters particularly

1432
00:57:56,980 --> 00:58:02,000
much but you know like I said later on

1433
00:58:00,590 --> 00:58:05,780
you know maybe we'll flush with this a

1434
00:58:02,000 --> 00:58:08,869
little bit to do Kaycee centering black

1435
00:58:05,780 --> 00:58:10,100
bars there's that we could make this we

1436
00:58:08,869 --> 00:58:12,349
could spend a bunch of time making these

1437
00:58:10,099 --> 00:58:14,329
sorts of things better but basically

1438
00:58:12,349 --> 00:58:15,949
we're out of time on the stream we've

1439
00:58:14,329 --> 00:58:17,779
sort of done the stuff that that I had

1440
00:58:15,949 --> 00:58:19,009
wanted to do today there's a couple

1441
00:58:17,780 --> 00:58:21,170
other things that I would want to maybe

1442
00:58:19,010 --> 00:58:23,720
do in terms of windows cleanup but we'll

1443
00:58:21,170 --> 00:58:24,860
just roll them into times when we are

1444
00:58:23,719 --> 00:58:27,619
actually working on that part of the

1445
00:58:24,860 --> 00:58:29,000
code like basically there is one thing

1446
00:58:27,619 --> 00:58:30,619
that I want to do with the replay code

1447
00:58:29,000 --> 00:58:32,659
that that we didn't get a chance to do

1448
00:58:30,619 --> 00:58:34,759
so anyway there we go there's our little

1449
00:58:32,659 --> 00:58:36,859
dude he's he's you know having a good

1450
00:58:34,760 --> 00:58:41,240
time as you can see he is very happy and

1451
00:58:36,860 --> 00:58:42,590
cheery which we like and so yeah I think

1452
00:58:41,239 --> 00:58:45,739
that's a good place to call it for the

1453
00:58:42,590 --> 00:58:47,329
day because we are right about at an

1454
00:58:45,739 --> 00:58:48,919
hour I think I started about six or

1455
00:58:47,329 --> 00:58:51,980
seven minutes late and now we are six

1456
00:58:48,920 --> 00:58:55,280
seven minutes into the QA so I think now

1457
00:58:51,980 --> 00:58:57,769
would be a good time to start the Q&amp;A so

1458
00:58:55,280 --> 00:58:59,750
as of right now if you are to enter a

1459
00:58:57,769 --> 00:59:02,809
question with Q : into the stream I

1460
00:58:59,750 --> 00:59:05,119
would be happy to answer it for you

1461
00:59:02,809 --> 00:59:06,799
please try to keep the questions to

1462
00:59:05,119 --> 00:59:09,619
things that we've done on today's stream

1463
00:59:06,800 --> 00:59:10,880
or on a previous stream not about stuff

1464
00:59:09,619 --> 00:59:12,559
that we might do in the future because

1465
00:59:10,880 --> 00:59:15,349
well we'll be getting to that in the

1466
00:59:12,559 --> 00:59:17,480
future so you know though all of those

1467
00:59:15,349 --> 00:59:20,569
questions will be answered so there we

1468
00:59:17,480 --> 00:59:22,490
go that's a that's a I think all we

1469
00:59:20,570 --> 00:59:24,170
really need to do for our cleanup and on

1470
00:59:22,489 --> 00:59:25,969
Monday we can start on math with the

1471
00:59:24,170 --> 00:59:28,280
with everything kind of working

1472
00:59:25,969 --> 00:59:31,839
relatively smoothly okay let's take a

1473
00:59:28,280 --> 00:59:31,840
look at what's going on in the QA

1474
00:59:39,230 --> 00:59:44,599
let's see let's see

1475
00:59:43,010 --> 00:59:47,050
of course I gotta wait to for it to

1476
00:59:44,599 --> 00:59:47,049
catch up

1477
00:59:55,000 --> 01:00:00,860
let's see okay

1478
00:59:58,460 --> 01:00:02,869
you said in a stream some days ago that

1479
01:00:00,860 --> 01:00:05,390
you want your graphic guy to leave some

1480
01:00:02,869 --> 01:00:07,400
space around the object with 100% alpha

1481
01:00:05,389 --> 01:00:09,379
when creating bitmaps why is that I

1482
01:00:07,400 --> 01:00:11,119
usually tell my graphics guys to cut

1483
01:00:09,380 --> 01:00:14,300
empty space around the object in a BMP

1484
01:00:11,119 --> 01:00:18,679
to keep the files as small as possible

1485
01:00:14,300 --> 01:00:20,060
so well okay so there's a couple couple

1486
01:00:18,679 --> 01:00:22,399
things there first of all it's a

1487
01:00:20,059 --> 01:00:27,860
graphics girl not a graphic sky

1488
01:00:22,400 --> 01:00:28,550
yangshin is his female but our graphics

1489
01:00:27,860 --> 01:00:34,039
guy

1490
01:00:28,550 --> 01:00:35,360
yangshin basically I just don't want

1491
01:00:34,039 --> 01:00:36,980
things to go right up to the edge

1492
01:00:35,360 --> 01:00:38,030
necessarily but it doesn't actually

1493
01:00:36,980 --> 01:00:40,490
matter

1494
01:00:38,030 --> 01:00:43,370
I shouldn't have said that I want them

1495
01:00:40,489 --> 01:00:45,709
to do that it's just it's fine I don't

1496
01:00:43,369 --> 01:00:49,069
believe in ever using assets directly

1497
01:00:45,710 --> 01:00:50,750
from the artist in the game I always run

1498
01:00:49,070 --> 01:00:53,630
them through a processor first that's

1499
01:00:50,750 --> 01:00:55,969
gonna do stuff like trimming out white

1500
01:00:53,630 --> 01:00:57,079
space and realigning things and packing

1501
01:00:55,969 --> 01:00:59,929
things together and all that sorts of

1502
01:00:57,079 --> 01:01:01,880
stuff so I probably shouldn't have said

1503
01:00:59,929 --> 01:01:05,659
that that's what I want them to do it's

1504
01:01:01,880 --> 01:01:08,420
more that that is totally fine and and I

1505
01:01:05,659 --> 01:01:10,250
guess the want part of that is that when

1506
01:01:08,420 --> 01:01:13,329
ganc shion's working on art I don't want

1507
01:01:10,250 --> 01:01:16,400
her to have to think about a bunch of

1508
01:01:13,329 --> 01:01:17,690
engine problems right I want it to be as

1509
01:01:16,400 --> 01:01:19,250
fluid for her to make the art as

1510
01:01:17,690 --> 01:01:20,630
possible because that's when she will do

1511
01:01:19,250 --> 01:01:22,159
the best art and that's when she'll get

1512
01:01:20,630 --> 01:01:24,800
the most done right I don't want to

1513
01:01:22,159 --> 01:01:26,929
create obstacles to her doing good

1514
01:01:24,800 --> 01:01:28,880
artwork by making her think about a

1515
01:01:26,929 --> 01:01:31,369
stuff that I can just as well handle

1516
01:01:28,880 --> 01:01:33,440
automatically so instead of having her

1517
01:01:31,369 --> 01:01:35,299
to have this unnatural painting

1518
01:01:33,440 --> 01:01:37,720
experience where she's got to paint

1519
01:01:35,300 --> 01:01:41,330
right up to the edge of something right

1520
01:01:37,719 --> 01:01:43,069
or have to rely on some crazy Photoshop

1521
01:01:41,329 --> 01:01:44,690
export thing or whatever what I'd rather

1522
01:01:43,070 --> 01:01:46,580
her do is just be able to make stuff in

1523
01:01:44,690 --> 01:01:48,289
Photoshop save it however she wants and

1524
01:01:46,579 --> 01:01:50,840
then have my code go in and figure out

1525
01:01:48,289 --> 01:01:52,309
what needs to be exported so what I say

1526
01:01:50,840 --> 01:01:54,050
that's what I wanted her to do what I

1527
01:01:52,309 --> 01:01:56,000
want her to do is just do whatever is

1528
01:01:54,050 --> 01:01:57,350
easiest for her and then I will deal

1529
01:01:56,000 --> 01:01:59,780
with the rest of the stuff

1530
01:01:57,349 --> 01:02:01,549
and so yeah so that's I mean basically

1531
01:01:59,780 --> 01:02:03,710
I'm gonna process all the assets anyway

1532
01:02:01,550 --> 01:02:06,410
to put them into a blob that we can use

1533
01:02:03,710 --> 01:02:08,119
on handmade hero and so what I'm doing

1534
01:02:06,409 --> 01:02:17,809
that processing I can just click clip

1535
01:02:08,119 --> 01:02:19,339
that empty space sour trollee worms are

1536
01:02:17,809 --> 01:02:22,820
harrybo gummy bears is an important

1537
01:02:19,340 --> 01:02:23,620
question I guess I would say both are

1538
01:02:22,820 --> 01:02:26,090
good

1539
01:02:23,619 --> 01:02:28,639
probably harrybo gummy bears especially

1540
01:02:26,090 --> 01:02:30,769
if they're the mini bears the little

1541
01:02:28,639 --> 01:02:32,409
tiny ones those are particularly good

1542
01:02:30,769 --> 01:02:38,090
and fit easily in a pocket

1543
01:02:32,409 --> 01:02:39,799
surreptitiously we've got a fair number

1544
01:02:38,090 --> 01:02:41,360
of if statements that clamp values would

1545
01:02:39,800 --> 01:02:47,210
it makes sense to make clamp min max

1546
01:02:41,360 --> 01:02:48,320
range macros for these yes well so I

1547
01:02:47,210 --> 01:02:50,360
don't know exactly what I'm gonna want

1548
01:02:48,320 --> 01:02:51,559
to do with that long term but now that

1549
01:02:50,360 --> 01:02:53,269
we're gonna be getting into the math

1550
01:02:51,559 --> 01:02:55,369
part of things I will be introducing a

1551
01:02:53,269 --> 01:03:02,619
bunch of math functions that do clamping

1552
01:02:55,369 --> 01:03:02,619
sorts of stuff yeah and so so basically

1553
01:03:02,860 --> 01:03:07,579
yes I mean yes is the short answer

1554
01:03:05,360 --> 01:03:09,200
but what exactly those will look like

1555
01:03:07,579 --> 01:03:11,210
I'm not sure yet well when we're sort of

1556
01:03:09,199 --> 01:03:12,469
dealing starting to do our math library

1557
01:03:11,210 --> 01:03:15,440
basically what we want to start on next

1558
01:03:12,469 --> 01:03:18,099
week that that is the sort of thing that

1559
01:03:15,440 --> 01:03:18,099
we will be looking at

1560
01:03:24,759 --> 01:03:31,478
let's see why do you do size of a

1561
01:03:28,838 --> 01:03:33,998
variable and not the type for a monitor

1562
01:03:31,478 --> 01:03:37,689
info well because you know it's it's

1563
01:03:33,998 --> 01:03:40,028
can't fail right if you do it this way

1564
01:03:37,690 --> 01:03:41,979
so let's say that you had written it the

1565
01:03:40,028 --> 01:03:44,289
other way right so let's say that you

1566
01:03:41,978 --> 01:03:46,899
wrote this this way and then you go in

1567
01:03:44,289 --> 01:03:48,519
and say oh oops I forgot it's not really

1568
01:03:46,900 --> 01:03:51,068
a window placement right it's an H

1569
01:03:48,518 --> 01:03:52,149
cursor am i bad and then you go about

1570
01:03:51,068 --> 01:03:54,518
your day

1571
01:03:52,150 --> 01:03:56,950
well now you basically have introduced a

1572
01:03:54,518 --> 01:03:58,899
bug here right because it was taking the

1573
01:03:56,949 --> 01:04:02,558
size of something that was not actually

1574
01:03:58,900 --> 01:04:04,028
what you wanted right and so what you

1575
01:04:02,559 --> 01:04:05,559
want to do is you want to try and

1576
01:04:04,028 --> 01:04:08,289
minimize the degree to which that can

1577
01:04:05,559 --> 01:04:10,210
happen so it helps to basically say if

1578
01:04:08,289 --> 01:04:13,059
I'm trying to say that this variable

1579
01:04:10,210 --> 01:04:14,679
should have the size of itself in its

1580
01:04:13,059 --> 01:04:16,119
first member then I might as well just

1581
01:04:14,679 --> 01:04:20,018
do that in a way that always works no

1582
01:04:16,119 --> 01:04:21,460
matter what its type is right yeah it's

1583
01:04:20,018 --> 01:04:24,008
kind of a stupid thing anyway Windows

1584
01:04:21,460 --> 01:04:25,329
shouldn't have done this this way I

1585
01:04:24,009 --> 01:04:26,409
don't think so you should never have had

1586
01:04:25,329 --> 01:04:28,028
to have done this in the first place

1587
01:04:26,409 --> 01:04:29,588
clear to zero should have always been

1588
01:04:28,028 --> 01:04:33,268
the default but you know they did what

1589
01:04:29,588 --> 01:04:33,268
they did so we're stuck with it

1590
01:04:39,369 --> 01:04:42,929
do you prefer separate files for sprite

1591
01:04:41,320 --> 01:04:45,250
frame elements or a single sheet of them

1592
01:04:42,929 --> 01:04:46,480
like I said I don't care I want my

1593
01:04:45,250 --> 01:04:48,460
artists to do whatever is easiest for

1594
01:04:46,480 --> 01:04:51,130
them so I always tell any artist that I

1595
01:04:48,460 --> 01:04:53,920
work with the first thing we do is we

1596
01:04:51,130 --> 01:04:57,010
basically work together to make some PSD

1597
01:04:53,920 --> 01:05:00,340
format or whatever or whatever they want

1598
01:04:57,010 --> 01:05:01,690
that's basically here is how it's here

1599
01:05:00,340 --> 01:05:03,250
it's how they're going to do the art

1600
01:05:01,690 --> 01:05:04,539
assets and I basically let them do

1601
01:05:03,250 --> 01:05:05,889
whatever they want

1602
01:05:04,539 --> 01:05:09,820
so however they think it's gonna be

1603
01:05:05,889 --> 01:05:12,069
easiest for them so usually I try to say

1604
01:05:09,820 --> 01:05:13,840
you know if you want a multiple PS DS

1605
01:05:12,070 --> 01:05:15,880
for these go ahead if you want them to

1606
01:05:13,840 --> 01:05:19,500
be sort of different layers inside one

1607
01:05:15,880 --> 01:05:22,329
PSD do that the only thing I specify is

1608
01:05:19,500 --> 01:05:23,800
these each need to be separate layers

1609
01:05:22,329 --> 01:05:25,599
like I need to have these things

1610
01:05:23,800 --> 01:05:30,760
separate like the head the body and the

1611
01:05:25,599 --> 01:05:32,409
torso for example so I always say like

1612
01:05:30,760 --> 01:05:33,730
okay you can just make all those in one

1613
01:05:32,409 --> 01:05:37,210
PSD files long these are separate layers

1614
01:05:33,730 --> 01:05:38,860
and then I'll just extract them right so

1615
01:05:37,210 --> 01:05:39,970
I find that's easier for artists because

1616
01:05:38,860 --> 01:05:41,559
then they don't have to spend all this

1617
01:05:39,969 --> 01:05:43,599
time putting stuff out into different

1618
01:05:41,559 --> 01:05:46,420
places like it doesn't take very long to

1619
01:05:43,599 --> 01:05:48,909
write a PSD parser it doesn't take very

1620
01:05:46,420 --> 01:05:51,250
long to to process our tasks to write an

1621
01:05:48,909 --> 01:05:53,379
asset processor and so I just rather do

1622
01:05:51,250 --> 01:05:56,530
that work once and then allow the

1623
01:05:53,380 --> 01:05:58,680
artists to have a lot more freedom and

1624
01:05:56,530 --> 01:06:00,580
flexibility in their day and not have to

1625
01:05:58,679 --> 01:06:01,779
manhandle that because I think it slows

1626
01:06:00,579 --> 01:06:03,519
artists down to have to deal with that

1627
01:06:01,780 --> 01:06:05,500
stuff so always make life easier for

1628
01:06:03,519 --> 01:06:07,719
your artists because that's how you get

1629
01:06:05,500 --> 01:06:09,190
the best art is when artists are happy

1630
01:06:07,719 --> 01:06:12,099
and not spending a lot of time dealing

1631
01:06:09,190 --> 01:06:15,099
with your mundane engine stuff that you

1632
01:06:12,099 --> 01:06:17,639
should have fixed you know so I take

1633
01:06:15,099 --> 01:06:17,639
that pretty seriously

1634
01:06:26,268 --> 01:06:30,449
I've got the asserts INRI canonical I

1635
01:06:28,889 --> 01:06:33,719
scored that trigger quite often because

1636
01:06:30,449 --> 01:06:35,189
Tyrael value is about 0.7 etc is there a

1637
01:06:33,719 --> 01:06:36,750
quick fix for that should I just disable

1638
01:06:35,190 --> 01:06:38,159
the assert for now since there's a too

1639
01:06:36,750 --> 01:06:40,528
bad you can just disable that assert

1640
01:06:38,159 --> 01:06:43,199
it's really not it's it's actually not a

1641
01:06:40,528 --> 01:06:45,809
problem like everything will still work

1642
01:06:43,199 --> 01:06:47,489
just fine with those values what I just

1643
01:06:45,809 --> 01:06:49,289
with something we want to look at

1644
01:06:47,489 --> 01:06:52,018
eventually I don't know why I never get

1645
01:06:49,289 --> 01:06:54,750
the assert if you're getting it but you

1646
01:06:52,018 --> 01:06:55,919
know that's just probably slight

1647
01:06:54,750 --> 01:06:57,630
differences and how we're running or

1648
01:06:55,920 --> 01:06:58,980
something like that but yeah I wouldn't

1649
01:06:57,630 --> 01:06:59,309
worry about that until we get to that

1650
01:06:58,980 --> 01:07:01,289
part

1651
01:06:59,309 --> 01:07:02,910
those asserts aren't important and and

1652
01:07:01,289 --> 01:07:04,799
nothing breaks because of them they can

1653
01:07:02,909 --> 01:07:06,210
easily just not be there and it's fine I

1654
01:07:04,798 --> 01:07:08,159
just wanted to make sure we weren't

1655
01:07:06,210 --> 01:07:09,059
getting high values like I don't want to

1656
01:07:08,159 --> 01:07:10,949
I want to make sure the code wasn't

1657
01:07:09,059 --> 01:07:12,028
totally broken so if it's only just

1658
01:07:10,949 --> 01:07:20,730
small values then you're totally fine

1659
01:07:12,028 --> 01:07:22,289
anyway is it part of the plan to be able

1660
01:07:20,730 --> 01:07:24,210
to support different screen sizes where

1661
01:07:22,289 --> 01:07:26,759
the image is not scaled but instead clip

1662
01:07:24,210 --> 01:07:28,679
to fit the current screen no I don't

1663
01:07:26,759 --> 01:07:31,829
think I will ever support that because I

1664
01:07:28,679 --> 01:07:34,018
feel like the game has to be I feel like

1665
01:07:31,829 --> 01:07:36,119
that's a design issue like I don't want

1666
01:07:34,018 --> 01:07:38,548
to design a game that can be played at

1667
01:07:36,119 --> 01:07:43,200
multiple aspect ratios because I feel

1668
01:07:38,548 --> 01:07:45,059
like I feel like the game should be the

1669
01:07:43,199 --> 01:07:46,909
size that it is and it should be

1670
01:07:45,059 --> 01:07:49,109
designed to play right at that size

1671
01:07:46,909 --> 01:07:52,828
that's just kind of a personal opinion

1672
01:07:49,108 --> 01:07:54,659
so I would go the route of black putting

1673
01:07:52,829 --> 01:07:59,369
black bars if you play at the wrong

1674
01:07:54,659 --> 01:08:00,358
screen resolution right or you know they

1675
01:07:59,369 --> 01:08:02,160
don't have to be black bars they could

1676
01:08:00,358 --> 01:08:03,568
be some kind of a decorative element so

1677
01:08:02,159 --> 01:08:06,179
it doesn't necessarily look as bad as a

1678
01:08:03,568 --> 01:08:08,130
black bar would but you know I would

1679
01:08:06,179 --> 01:08:11,848
basically say the screen aspect ratio

1680
01:08:08,130 --> 01:08:14,519
the aspect ratio of the image is always

1681
01:08:11,849 --> 01:08:17,429
going to be sixteen by nine that's just

1682
01:08:14,518 --> 01:08:19,889
that's enforced and so the game always

1683
01:08:17,429 --> 01:08:22,109
plays exactly the same it doesn't play

1684
01:08:19,889 --> 01:08:25,579
differently when you you know have a

1685
01:08:22,109 --> 01:08:25,579
different screen size like four by three

1686
01:08:26,520 --> 01:08:31,330
although this is old can you explain how

1687
01:08:28,779 --> 01:08:32,769
the transient permanent storage work I'd

1688
01:08:31,329 --> 01:08:34,720
rather not because we actually haven't

1689
01:08:32,770 --> 01:08:36,250
used the transient storage yet so what

1690
01:08:34,720 --> 01:08:38,380
I'd say is what you hold off on that

1691
01:08:36,250 --> 01:08:39,850
until we actually get to the point where

1692
01:08:38,380 --> 01:08:41,470
we're using both of them because at that

1693
01:08:39,850 --> 01:08:43,180
point I will be explaining it in detail

1694
01:08:41,470 --> 01:08:44,470
and it'll be easier for you to

1695
01:08:43,180 --> 01:08:45,850
understand what's going on because right

1696
01:08:44,470 --> 01:08:47,530
now I just would be talking

1697
01:08:45,850 --> 01:08:49,359
hypotheticals because we we don't use

1698
01:08:47,529 --> 01:08:50,858
the transit storage at all so once I

1699
01:08:49,359 --> 01:08:53,050
actually am using the transient storage

1700
01:08:50,859 --> 01:08:55,060
then I think it'll become clearer and

1701
01:08:53,050 --> 01:08:56,079
I'll be explaining at that time so just

1702
01:08:55,060 --> 01:08:57,580
hold off on that up for a little while

1703
01:08:56,079 --> 01:08:58,630
when we get to the point we're using

1704
01:08:57,579 --> 01:09:01,890
transient storage I think it'll be

1705
01:08:58,630 --> 01:09:01,890
pretty obvious actually how it's working

1706
01:09:04,680 --> 01:09:09,490
how would you implement a vector would

1707
01:09:07,329 --> 01:09:12,399
you use macros metaprogramming something

1708
01:09:09,489 --> 01:09:15,130
else I use Mehta program for that pretty

1709
01:09:12,399 --> 01:09:16,750
much exclusively so anytime what you see

1710
01:09:15,130 --> 01:09:17,980
is not talking about a math vector that

1711
01:09:16,750 --> 01:09:20,199
the person who's asking the question is

1712
01:09:17,979 --> 01:09:22,329
talking about one of these so like a

1713
01:09:20,199 --> 01:09:25,809
more like an array look at you know if

1714
01:09:22,329 --> 01:09:27,369
you had an array type array of Foos

1715
01:09:25,810 --> 01:09:28,500
you know a or something like that and

1716
01:09:27,369 --> 01:09:31,840
the answer is always metaprogramming

1717
01:09:28,500 --> 01:09:33,520
yeah since we're not gonna be doing meta

1718
01:09:31,840 --> 01:09:36,010
programming in the stream I will just

1719
01:09:33,520 --> 01:09:38,770
hand code any container types that we

1720
01:09:36,010 --> 01:09:40,060
need but we won't probably have that

1721
01:09:38,770 --> 01:09:41,650
many container types so it's really not

1722
01:09:40,060 --> 01:09:43,000
gonna like we wouldn't need a template

1723
01:09:41,649 --> 01:09:45,519
for them anyway because they just won't

1724
01:09:43,000 --> 01:09:47,590
be that many but yeah if you're in some

1725
01:09:45,520 --> 01:09:50,109
kind of program that has like a metric

1726
01:09:47,590 --> 01:09:51,869
ton of containers or something I always

1727
01:09:50,109 --> 01:09:53,740
always met a program those I don't use

1728
01:09:51,869 --> 01:09:55,239
templates because templates are very

1729
01:09:53,739 --> 01:09:59,889
restrictive and and really just don't

1730
01:09:55,239 --> 01:10:03,899
work well for most things including that

1731
01:09:59,890 --> 01:10:06,070
one by the way that's a classic case of

1732
01:10:03,899 --> 01:10:08,639
of a place where templates don't work

1733
01:10:06,069 --> 01:10:08,639
well at all in my opinion

1734
01:10:12,920 --> 01:10:23,609
so it looks like we are basically done

1735
01:10:16,890 --> 01:10:25,289
with on topic questions I think yeah I

1736
01:10:23,609 --> 01:10:25,829
think we're basically done with on topic

1737
01:10:25,289 --> 01:10:27,539
questions

1738
01:10:25,829 --> 01:10:33,090
I don't see any more on top of questions

1739
01:10:27,539 --> 01:10:35,640
I only see off topic questions so maybe

1740
01:10:33,090 --> 01:10:37,470
I guess we will end the stream early and

1741
01:10:35,640 --> 01:10:39,960
I'll just start answering off-topic

1742
01:10:37,470 --> 01:10:42,360
questions for the last 10 minutes since

1743
01:10:39,960 --> 01:10:46,140
that seems as a reasonable thing to do

1744
01:10:42,359 --> 01:10:48,869
as any all right

1745
01:10:46,140 --> 01:10:50,550
so I will officially sign off here but

1746
01:10:48,869 --> 01:10:51,930
then when I stop recording I will just

1747
01:10:50,550 --> 01:10:53,250
keep streaming for 10 minutes and we can

1748
01:10:51,930 --> 01:10:54,539
do off-topic questions there wasn't much

1749
01:10:53,250 --> 01:10:57,479
of a pretty stream today so that seems

1750
01:10:54,539 --> 01:11:00,060
totally reasonable as well so anyway

1751
01:10:57,479 --> 01:11:01,829
thank you everyone for joining me for

1752
01:11:00,060 --> 01:11:05,760
handmade here oh it's been a pleasure

1753
01:11:01,829 --> 01:11:07,050
coding with you as always if you would

1754
01:11:05,760 --> 01:11:08,460
like to follow along at home with the

1755
01:11:07,050 --> 01:11:10,199
source code you can do so at handmade

1756
01:11:08,460 --> 01:11:11,789
hero org you can pre-order the game and

1757
01:11:10,199 --> 01:11:13,590
it comes with full source please

1758
01:11:11,789 --> 01:11:16,619
remember to put in your correct email

1759
01:11:13,590 --> 01:11:18,119
when you order because the email needs

1760
01:11:16,619 --> 01:11:20,460
to email you with the link to download

1761
01:11:18,119 --> 01:11:21,899
the source so please double check that

1762
01:11:20,460 --> 01:11:23,189
email when you enter it we've had three

1763
01:11:21,899 --> 01:11:24,238
times when people have entered the wrong

1764
01:11:23,189 --> 01:11:26,369
emails and of course if you entered the

1765
01:11:24,238 --> 01:11:27,629
wrong email I can't even contact you to

1766
01:11:26,369 --> 01:11:29,849
get the right one so it's pretty much

1767
01:11:27,630 --> 01:11:31,829
like your $15 just goes up in smoke so

1768
01:11:29,850 --> 01:11:32,700
please make sure that you do that or if

1769
01:11:31,829 --> 01:11:34,199
you think that you've entered it

1770
01:11:32,699 --> 01:11:37,050
incorrectly you do and you don't get an

1771
01:11:34,199 --> 01:11:38,789
email back email me or go to the forums

1772
01:11:37,050 --> 01:11:39,840
and post so that we can straighten it

1773
01:11:38,789 --> 01:11:41,279
out because it's really important that

1774
01:11:39,840 --> 01:11:43,860
you get that email that's the link that

1775
01:11:41,279 --> 01:11:45,750
has all the downloads for you so you can

1776
01:11:43,859 --> 01:11:46,889
do that and then you can follow along

1777
01:11:45,750 --> 01:11:48,238
with the full source code and it also

1778
01:11:46,890 --> 01:11:50,700
has all the test assets that we've been

1779
01:11:48,238 --> 01:11:52,500
using so you can follow along exactly if

1780
01:11:50,699 --> 01:11:53,789
you want to support the video series we

1781
01:11:52,500 --> 01:11:55,949
do have the patreon as well you can

1782
01:11:53,789 --> 01:11:57,060
subscribe to and we also have a news and

1783
01:11:55,949 --> 01:11:58,679
forum site where there's a bunch of

1784
01:11:57,060 --> 01:12:00,420
resources that you can go and use to

1785
01:11:58,680 --> 01:12:02,220
help you learn there's an episode guide

1786
01:12:00,420 --> 01:12:03,930
there's coding resources page with ports

1787
01:12:02,220 --> 01:12:04,890
to other platforms there's a code

1788
01:12:03,930 --> 01:12:06,300
discussion forum you can post questions

1789
01:12:04,890 --> 01:12:08,760
and of course the schedule for the week

1790
01:12:06,300 --> 01:12:10,949
is always up there so please check that

1791
01:12:08,760 --> 01:12:13,140
out if you're trying to learn from the

1792
01:12:10,949 --> 01:12:15,988
stream it's a great place to go so thank

1793
01:12:13,140 --> 01:12:18,329
you everyone and we will start in on the

1794
01:12:15,988 --> 01:12:19,439
math which is pretty fun and pretty cool

1795
01:12:18,329 --> 01:12:20,579
and it will allow us to do a lot more

1796
01:12:19,439 --> 01:12:22,019
powerful things than what we've been

1797
01:12:20,579 --> 01:12:24,630
doing so far when we've had too

1798
01:12:22,020 --> 01:12:26,640
kind of not been using much math at all

1799
01:12:24,630 --> 01:12:28,470
so we'll be starting in on the math on

1800
01:12:26,640 --> 01:12:30,600
Monday 8 p.m. Pacific Standard Time

1801
01:12:28,470 --> 01:12:32,909
sharp I would love to see you there so I

1802
01:12:30,600 --> 01:12:34,350
hope you can join me for that and it's

1803
01:12:32,909 --> 01:12:35,609
gonna be I think it's gonna be a lot of

1804
01:12:34,350 --> 01:12:36,600
fun to go through the math again it's

1805
01:12:35,609 --> 01:12:39,000
been a long time since I've done that

1806
01:12:36,600 --> 01:12:41,760
much math honestly so I think it's gonna

1807
01:12:39,000 --> 01:12:43,229
be fun for me too to just to sort of get

1808
01:12:41,760 --> 01:12:45,449
back into it a little bit all right

1809
01:12:43,229 --> 01:12:49,279
thanks everyone for joining me and I

1810
01:12:45,449 --> 01:12:49,279
will see you on Monday

