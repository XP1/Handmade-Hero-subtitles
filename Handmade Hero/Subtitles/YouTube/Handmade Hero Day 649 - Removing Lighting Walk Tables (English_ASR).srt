1
00:00:02,000 --> 00:00:08,400
hello everybody and welcome to handmade

2
00:00:04,240 --> 00:00:10,960
hero we are currently we have two bugs

3
00:00:08,400 --> 00:00:13,679
in our lighting system and well we have

4
00:00:10,960 --> 00:00:15,040
two bugs we know of uh sometimes with

5
00:00:13,679 --> 00:00:17,440
something like a lighting system you

6
00:00:15,039 --> 00:00:19,038
have this nasty thing of you know you

7
00:00:17,440 --> 00:00:20,880
have the bugs you know you have and then

8
00:00:19,039 --> 00:00:22,480
you probably also have other bugs that

9
00:00:20,879 --> 00:00:26,960
you may never find because lighting is

10
00:00:22,480 --> 00:00:28,640
so subtle you may never find out right

11
00:00:26,960 --> 00:00:30,640
um but

12
00:00:28,640 --> 00:00:32,239
uh we have two bugs that we know about

13
00:00:30,640 --> 00:00:34,399
and so today what i'd like to do is try

14
00:00:32,238 --> 00:00:35,759
to find at least one of them uh the one

15
00:00:34,399 --> 00:00:37,840
that i think is going to be the easiest

16
00:00:35,759 --> 00:00:39,280
to find and of course that's just my

17
00:00:37,840 --> 00:00:40,399
guess who knows will actually be used to

18
00:00:39,280 --> 00:00:41,920
find but

19
00:00:40,399 --> 00:00:44,079
uh the one that i expect to be these to

20
00:00:41,920 --> 00:00:47,760
find would be why we're having a problem

21
00:00:44,079 --> 00:00:49,359
with light copying um in order to make

22
00:00:47,759 --> 00:00:51,519
lighting efficient of course lighting is

23
00:00:49,359 --> 00:00:54,799
very expensive one of the things we do

24
00:00:51,520 --> 00:00:56,160
is we bin the lights uh by like we

25
00:00:54,799 --> 00:00:58,238
basically like cabin off where the

26
00:00:56,159 --> 00:01:01,198
lighting occurs

27
00:00:58,238 --> 00:01:02,959
in to just the region around where we

28
00:01:01,198 --> 00:01:04,158
are looking right

29
00:01:02,960 --> 00:01:06,478
so you can see the buggy lighting

30
00:01:04,159 --> 00:01:07,920
happening here uh there's two you can

31
00:01:06,478 --> 00:01:09,280
actually view two separate bugs

32
00:01:07,920 --> 00:01:10,799
happening

33
00:01:09,280 --> 00:01:12,719
i'll stay in this region for a second so

34
00:01:10,799 --> 00:01:14,640
that you can see only just the one that

35
00:01:12,719 --> 00:01:16,959
i'm going to talk about uh but you know

36
00:01:14,640 --> 00:01:18,799
for temporarily if you look here you can

37
00:01:16,959 --> 00:01:20,959
see how we get this sort of weird light

38
00:01:18,799 --> 00:01:22,560
bleed that uh it looks like it gets

39
00:01:20,959 --> 00:01:23,438
contaminated by

40
00:01:22,560 --> 00:01:24,478
some

41
00:01:23,438 --> 00:01:27,199
some

42
00:01:24,478 --> 00:01:28,959
pretty naturally like bright light seems

43
00:01:27,200 --> 00:01:31,280
to be able to contaminate the system

44
00:01:28,959 --> 00:01:32,319
with like incredibly overbright values

45
00:01:31,280 --> 00:01:34,159
right

46
00:01:32,319 --> 00:01:35,519
that's one bug uh and we have to go

47
00:01:34,159 --> 00:01:37,520
figure out what's going on there why

48
00:01:35,519 --> 00:01:39,679
we're getting this sort of like energy

49
00:01:37,519 --> 00:01:40,798
uh basically like this runaway energy

50
00:01:39,680 --> 00:01:42,079
ramp

51
00:01:40,799 --> 00:01:43,840
which we didn't use to have so we have

52
00:01:42,078 --> 00:01:46,158
to go figure out what that's coming from

53
00:01:43,840 --> 00:01:48,560
because we don't know

54
00:01:46,159 --> 00:01:50,399
and the other one is this one you can

55
00:01:48,560 --> 00:01:51,680
see if we're in a region where we don't

56
00:01:50,399 --> 00:01:54,079
actually necessarily have that

57
00:01:51,680 --> 00:01:57,680
particular problem uh what you can see

58
00:01:54,078 --> 00:02:00,000
is that the copying so as we align the

59
00:01:57,680 --> 00:02:01,920
lights differently as the camera uh you

60
00:02:00,000 --> 00:02:05,118
can see the camera visible rectangle

61
00:02:01,920 --> 00:02:08,878
here in white uh and the lighting moving

62
00:02:05,118 --> 00:02:11,199
in the uh this sort of cyan

63
00:02:08,878 --> 00:02:12,959
uh frame there that moves just to make

64
00:02:11,199 --> 00:02:14,799
sure that the lighting is always kept

65
00:02:12,959 --> 00:02:17,120
within a certain region

66
00:02:14,800 --> 00:02:20,080
uh if you notice what happens when i do

67
00:02:17,120 --> 00:02:23,360
this is on the moves it seems to almost

68
00:02:20,080 --> 00:02:26,000
like clear out the lighting uh it's very

69
00:02:23,360 --> 00:02:28,160
weird and erroneous it looks like

70
00:02:26,000 --> 00:02:29,439
uh and

71
00:02:28,159 --> 00:02:31,359
what's supposed to happen is it's

72
00:02:29,439 --> 00:02:33,280
supposed to copy the lighting forward

73
00:02:31,360 --> 00:02:35,760
but what actually looks like it happens

74
00:02:33,280 --> 00:02:37,840
is that the lighting gets reset to black

75
00:02:35,759 --> 00:02:39,199
and then it gets recomputed or something

76
00:02:37,840 --> 00:02:41,920
close to that

77
00:02:39,199 --> 00:02:43,598
and so the you know this is unusual and

78
00:02:41,919 --> 00:02:45,039
strange because uh we're just getting

79
00:02:43,598 --> 00:02:47,679
these very weird artifacts that we

80
00:02:45,039 --> 00:02:49,439
didn't used to have right that's that's

81
00:02:47,680 --> 00:02:50,879
really i guess the most strange part of

82
00:02:49,439 --> 00:02:52,639
it is that we you know the light copying

83
00:02:50,878 --> 00:02:54,159
was working fine and then we went in and

84
00:02:52,639 --> 00:02:55,598
we drastically simplified a bunch of

85
00:02:54,159 --> 00:02:57,359
things in the lighting

86
00:02:55,598 --> 00:02:59,119
um which was great and now it runs

87
00:02:57,360 --> 00:03:00,720
extremely quickly and still produces

88
00:02:59,120 --> 00:03:02,800
very high quality results but we

89
00:03:00,719 --> 00:03:05,519
introduced these bugs and so now we have

90
00:03:02,800 --> 00:03:06,719
to get rid of them so it i don't really

91
00:03:05,519 --> 00:03:08,319
have a handle on what's going on there

92
00:03:06,719 --> 00:03:10,318
so what i'd like to do today is figure

93
00:03:08,318 --> 00:03:12,318
out like what that's coming from so when

94
00:03:10,318 --> 00:03:14,079
we do that light alignment what's

95
00:03:12,318 --> 00:03:17,919
actually the problem there right like

96
00:03:14,080 --> 00:03:19,920
what what are we actually experiencing

97
00:03:17,919 --> 00:03:22,479
that causes that strobing effect because

98
00:03:19,919 --> 00:03:24,158
we would expect it not to really drop in

99
00:03:22,479 --> 00:03:26,158
that way um

100
00:03:24,158 --> 00:03:27,519
and you know maybe there's something

101
00:03:26,158 --> 00:03:28,959
else going on there that really isn't

102
00:03:27,519 --> 00:03:30,640
related to the copying maybe the copying

103
00:03:28,959 --> 00:03:33,840
is happening okay but it's you know it's

104
00:03:30,639 --> 00:03:33,839
something else but

105
00:03:35,519 --> 00:03:40,719
given what we currently know

106
00:03:38,639 --> 00:03:41,759
about the lighting system

107
00:03:40,719 --> 00:03:44,158
um

108
00:03:41,759 --> 00:03:47,039
it doesn't it just doesn't make good

109
00:03:44,158 --> 00:03:48,560
intuitive sense because

110
00:03:47,039 --> 00:03:52,959
the

111
00:03:48,560 --> 00:03:55,920
first of all we know that the light um

112
00:03:52,959 --> 00:03:57,680
when we do a light probe so when we do

113
00:03:55,919 --> 00:03:59,839
the sampling for a particular light

114
00:03:57,680 --> 00:04:02,239
source

115
00:03:59,840 --> 00:04:07,280
what we would want to do

116
00:04:02,239 --> 00:04:08,319
uh is we would want to have the

117
00:04:07,280 --> 00:04:10,239
we

118
00:04:08,318 --> 00:04:12,479
eventually we would like to have the the

119
00:04:10,239 --> 00:04:14,560
light probes probably be more stochastic

120
00:04:12,479 --> 00:04:17,039
than they are but right now

121
00:04:14,560 --> 00:04:19,199
every light probe casts the same number

122
00:04:17,040 --> 00:04:21,359
of rays

123
00:04:19,199 --> 00:04:22,160
as every other light probe

124
00:04:21,358 --> 00:04:23,359
so

125
00:04:22,160 --> 00:04:26,880
when you

126
00:04:23,360 --> 00:04:29,520
shift the lighting grid

127
00:04:26,879 --> 00:04:30,800
unless i'm just not thinking of

128
00:04:29,519 --> 00:04:32,240
something that we're doing like there's

129
00:04:30,800 --> 00:04:34,079
something we're doing that i'm just not

130
00:04:32,240 --> 00:04:36,319
thinking of

131
00:04:34,079 --> 00:04:39,758
that i'm confused about

132
00:04:36,319 --> 00:04:42,560
there actually should be no way

133
00:04:39,759 --> 00:04:44,639
to get a different lighting result

134
00:04:42,560 --> 00:04:46,079
than you already have

135
00:04:44,639 --> 00:04:48,160
you know what i'm saying like you

136
00:04:46,079 --> 00:04:51,120
shouldn't be able to

137
00:04:48,160 --> 00:04:52,720
you should always no matter which point

138
00:04:51,120 --> 00:04:54,399
on the grid you are

139
00:04:52,720 --> 00:04:57,199
you should always produce the same

140
00:04:54,399 --> 00:04:59,758
result for a particular location

141
00:04:57,199 --> 00:05:02,160
so we would expect the copy to be

142
00:04:59,759 --> 00:05:03,038
completely invisible shifting the grid

143
00:05:02,160 --> 00:05:05,439
over

144
00:05:03,038 --> 00:05:07,918
should not have any effect if we were

145
00:05:05,439 --> 00:05:10,399
using the grid if we were injecting

146
00:05:07,918 --> 00:05:12,719
entropy based on which point in the grid

147
00:05:10,399 --> 00:05:15,279
you are then you could imagine some

148
00:05:12,720 --> 00:05:16,960
other bug about the sampling meaning

149
00:05:15,279 --> 00:05:18,559
that when you shift the grid over you

150
00:05:16,959 --> 00:05:22,399
get a different result and that could

151
00:05:18,560 --> 00:05:22,399
contribute to the flashing right

152
00:05:22,478 --> 00:05:26,000
but in this case we know that's not

153
00:05:24,160 --> 00:05:27,759
actually happening there is no entropy

154
00:05:26,000 --> 00:05:28,560
injected into the grid

155
00:05:27,759 --> 00:05:29,680
so

156
00:05:28,560 --> 00:05:33,759
we should

157
00:05:29,680 --> 00:05:36,400
no matter how we slide the uh the lights

158
00:05:33,759 --> 00:05:39,439
uh grid we should not actually be able

159
00:05:36,399 --> 00:05:42,478
to produce this result

160
00:05:39,439 --> 00:05:45,360
so that's very odd and it means there

161
00:05:42,478 --> 00:05:47,519
must be a bug in here somewhere

162
00:05:45,360 --> 00:05:49,840
the problem is i have no idea what that

163
00:05:47,519 --> 00:05:52,159
bug would actually be because we didn't

164
00:05:49,839 --> 00:05:55,279
change the code that actually does the

165
00:05:52,160 --> 00:05:57,360
copy when we simplified the lighting so

166
00:05:55,279 --> 00:05:58,638
it doesn't make very good intuitive

167
00:05:57,360 --> 00:06:00,879
sense

168
00:05:58,639 --> 00:06:02,879
that you would have this problem so if

169
00:06:00,879 --> 00:06:04,959
you look at how the

170
00:06:02,879 --> 00:06:06,719
the light atlas works which i believe is

171
00:06:04,959 --> 00:06:08,159
the thing that executes the copy here's

172
00:06:06,720 --> 00:06:09,360
the voxel code

173
00:06:08,160 --> 00:06:11,439
on this side

174
00:06:09,360 --> 00:06:13,840
and here's the lighting atlas code on

175
00:06:11,439 --> 00:06:15,839
the other side

176
00:06:13,839 --> 00:06:17,839
we're looking at a routine here called

177
00:06:15,839 --> 00:06:20,959
block copy atlas

178
00:06:17,839 --> 00:06:22,239
and block copy atlas just takes a offset

179
00:06:20,959 --> 00:06:24,799
parameter

180
00:06:22,240 --> 00:06:27,360
and the offset parameter tells you where

181
00:06:24,800 --> 00:06:29,199
in the voxel you are supposed to be

182
00:06:27,360 --> 00:06:31,120
fetching right

183
00:06:29,199 --> 00:06:35,800
so you're you're looking at like you

184
00:06:31,120 --> 00:06:35,800
know i'm gonna i'm gonna fetch

185
00:06:37,519 --> 00:06:41,439
two away or three away or whatever it is

186
00:06:39,918 --> 00:06:43,918
that's how much shift you're going to

187
00:06:41,439 --> 00:06:47,439
have in each of the directions

188
00:06:43,918 --> 00:06:50,560
now we removed we nerfed the z code so z

189
00:06:47,439 --> 00:06:52,160
now doesn't work anymore right

190
00:06:50,560 --> 00:06:53,519
intentionally this will this this will

191
00:06:52,160 --> 00:06:55,520
never happen

192
00:06:53,519 --> 00:06:57,918
why because there the voxel never

193
00:06:55,519 --> 00:07:00,719
changes its z location it's pegged to

194
00:06:57,918 --> 00:07:02,719
just the we we removed stacking so it's

195
00:07:00,720 --> 00:07:04,240
pegged to just the only

196
00:07:02,720 --> 00:07:07,680
part is just where the game currently

197
00:07:04,240 --> 00:07:07,680
takes place that flat plane

198
00:07:08,240 --> 00:07:14,400
and so if you look this code should in

199
00:07:11,199 --> 00:07:17,520
theory never run which we could uh you

200
00:07:14,399 --> 00:07:19,758
know assert um so like we could say

201
00:07:17,519 --> 00:07:19,758
right

202
00:07:29,360 --> 00:07:33,919
um but you know one of the bugs could be

203
00:07:31,839 --> 00:07:35,439
maybe it does maybe we're pursuing there

204
00:07:33,918 --> 00:07:36,959
i think i

205
00:07:35,439 --> 00:07:38,879
already asserted that this doesn't

206
00:07:36,959 --> 00:07:41,198
happen because i'm pretty sure that in

207
00:07:38,879 --> 00:07:43,199
the actual lighting code itself where we

208
00:07:41,199 --> 00:07:44,400
call block copy atlas because this is

209
00:07:43,199 --> 00:07:46,960
the only place

210
00:07:44,399 --> 00:07:48,638
we assert that the z like is always

211
00:07:46,959 --> 00:07:49,598
passed in as zero

212
00:07:48,639 --> 00:07:51,598
so

213
00:07:49,598 --> 00:07:54,000
you know we should be relatively assured

214
00:07:51,598 --> 00:07:55,918
at this point that the z code okay well

215
00:07:54,000 --> 00:07:57,360
there you go right

216
00:07:55,918 --> 00:07:59,120
so

217
00:07:57,360 --> 00:08:00,639
that's

218
00:07:59,120 --> 00:08:01,918
that's something to investigate right

219
00:08:00,639 --> 00:08:05,360
there so

220
00:08:01,918 --> 00:08:07,598
we we're never passing a d voxel z

221
00:08:05,360 --> 00:08:08,720
as far as we know because this assertion

222
00:08:07,598 --> 00:08:10,560
should fire

223
00:08:08,720 --> 00:08:12,240
uh unless there's some where else that

224
00:08:10,560 --> 00:08:13,839
calls black copy atlas i guess i should

225
00:08:12,240 --> 00:08:15,199
double check the cost act but i assume

226
00:08:13,839 --> 00:08:18,000
it yeah

227
00:08:15,199 --> 00:08:22,080
so if d voxel uh

228
00:08:18,000 --> 00:08:25,199
dot z here is always zero what is

229
00:08:22,079 --> 00:08:25,199
happening right

230
00:08:25,519 --> 00:08:30,079
uh z should always be equal to stop z i

231
00:08:28,639 --> 00:08:31,918
would think although actually you know

232
00:08:30,079 --> 00:08:33,679
what no i now that i think about that

233
00:08:31,918 --> 00:08:35,918
that's probably wrong

234
00:08:33,679 --> 00:08:35,918
um

235
00:08:36,879 --> 00:08:40,158
the z

236
00:08:37,918 --> 00:08:42,879
might still consider itself happening on

237
00:08:40,158 --> 00:08:42,879
one layer

238
00:08:48,399 --> 00:08:52,879
yeah so that's the z region i take that

239
00:08:50,399 --> 00:08:54,958
back that's the the what should actually

240
00:08:52,879 --> 00:08:55,919
the one that should not run is this

241
00:08:54,958 --> 00:08:58,000
clear

242
00:08:55,919 --> 00:09:00,719
so basically this one should run because

243
00:08:58,000 --> 00:09:03,360
this is actually the loop for z that

244
00:09:00,720 --> 00:09:05,360
does get copied that does get written

245
00:09:03,360 --> 00:09:07,120
this is the loop for z that doesn't get

246
00:09:05,360 --> 00:09:09,039
written so this is where you would you

247
00:09:07,120 --> 00:09:10,959
know it would just be off right it would

248
00:09:09,039 --> 00:09:12,480
just be it would be zeroed

249
00:09:10,958 --> 00:09:14,159
so um

250
00:09:12,480 --> 00:09:16,000
this is the actual one that should never

251
00:09:14,159 --> 00:09:17,759
happen because the zeroing should never

252
00:09:16,000 --> 00:09:19,600
occur uh

253
00:09:17,759 --> 00:09:21,679
so let's try that one more time

254
00:09:19,600 --> 00:09:23,680
okay so i feel like that should probably

255
00:09:21,679 --> 00:09:25,120
never happen i suppose it's possible

256
00:09:23,679 --> 00:09:27,838
that we never get in here but that

257
00:09:25,120 --> 00:09:29,679
should probably never happen so uh let's

258
00:09:27,839 --> 00:09:33,120
just check in a debug build so we can

259
00:09:29,679 --> 00:09:33,120
inspect values reliably

260
00:09:33,839 --> 00:09:36,839
um

261
00:09:37,278 --> 00:09:39,600
which

262
00:09:38,559 --> 00:09:40,559
would

263
00:09:39,600 --> 00:09:43,560
be

264
00:09:40,559 --> 00:09:43,559
this

265
00:09:51,360 --> 00:09:54,399
uh and so let me see because i don't

266
00:09:52,958 --> 00:09:56,559
understand why this would be happening

267
00:09:54,399 --> 00:09:58,080
since you know i would assume

268
00:09:56,559 --> 00:09:59,518
um that

269
00:09:58,080 --> 00:10:02,079
that this should not be occurring like

270
00:09:59,519 --> 00:10:04,078
we should not be shifting z

271
00:10:02,078 --> 00:10:05,679
uh and maybe i'm wrong about that but

272
00:10:04,078 --> 00:10:07,679
like if you think about what happens

273
00:10:05,679 --> 00:10:09,919
with the fetch offset the fetchoff set

274
00:10:07,679 --> 00:10:11,359
should always be passing in a zero there

275
00:10:09,919 --> 00:10:13,120
uh which it is

276
00:10:11,360 --> 00:10:15,278
so if it's always

277
00:10:13,120 --> 00:10:18,720
the case that you're not moving at all

278
00:10:15,278 --> 00:10:21,200
in z i don't think i understand how this

279
00:10:18,720 --> 00:10:22,079
clearing code would be working right

280
00:10:21,200 --> 00:10:24,399
like

281
00:10:22,078 --> 00:10:27,359
like why would we ever be clearing an

282
00:10:24,399 --> 00:10:30,078
entire layer of this thing

283
00:10:27,360 --> 00:10:31,200
it doesn't make sense does it

284
00:10:30,078 --> 00:10:33,039
i mean

285
00:10:31,200 --> 00:10:36,160
at least i don't think so

286
00:10:33,039 --> 00:10:38,719
so that if that's the case

287
00:10:36,159 --> 00:10:41,278
that's probably just our bug

288
00:10:38,720 --> 00:10:43,278
we accidentally always clear one layer

289
00:10:41,278 --> 00:10:45,679
of the z i guess

290
00:10:43,278 --> 00:10:47,120
um maybe because these computations were

291
00:10:45,679 --> 00:10:48,639
actually wrong and we just didn't see

292
00:10:47,120 --> 00:10:50,480
that because the top layer of z was

293
00:10:48,639 --> 00:10:52,720
never visible before you know what i'm

294
00:10:50,480 --> 00:10:52,720
saying

295
00:10:59,600 --> 00:11:02,639
so it's entirely possible that the

296
00:11:01,200 --> 00:11:05,360
problem here

297
00:11:02,639 --> 00:11:06,480
uh is primarily such that

298
00:11:05,360 --> 00:11:08,959
we

299
00:11:06,480 --> 00:11:11,120
we've we've got a bogus computation in

300
00:11:08,958 --> 00:11:13,599
how final z works

301
00:11:11,120 --> 00:11:16,078
and what's happening is that the the top

302
00:11:13,600 --> 00:11:18,720
most z layer will always like this

303
00:11:16,078 --> 00:11:21,278
computation was one off so the top most

304
00:11:18,720 --> 00:11:23,120
z layer you can see internally here

305
00:11:21,278 --> 00:11:25,360
that even though we said don't move in z

306
00:11:23,120 --> 00:11:26,639
at all it's going to clear one entire z

307
00:11:25,360 --> 00:11:28,480
plane

308
00:11:26,639 --> 00:11:30,240
um so i'm gonna go ahead and say just

309
00:11:28,480 --> 00:11:32,240
right off the bat before we even look at

310
00:11:30,240 --> 00:11:34,320
it that if we if zero this out i i

311
00:11:32,240 --> 00:11:35,440
wonder if that just completely fixes our

312
00:11:34,320 --> 00:11:36,640
problem

313
00:11:35,440 --> 00:11:38,640
right

314
00:11:36,639 --> 00:11:40,240
and if it does that tells us that that's

315
00:11:38,639 --> 00:11:42,399
what the bug is the bug is that there's

316
00:11:40,240 --> 00:11:44,879
like an off by one computation in the z

317
00:11:42,399 --> 00:11:47,879
there well i should probably run it in

318
00:11:44,879 --> 00:11:51,039
release mode but that would that would

319
00:11:47,879 --> 00:11:53,439
totally answer our question right

320
00:11:51,039 --> 00:11:54,958
um if it turns out that the top z layer

321
00:11:53,440 --> 00:11:56,720
is always getting cleared that's just

322
00:11:54,958 --> 00:11:58,559
obviously wrong

323
00:11:56,720 --> 00:12:01,839
and that would produce the flashing so

324
00:11:58,559 --> 00:12:03,039
let's see if the flashing goes away

325
00:12:01,839 --> 00:12:05,440
of course it's hard to tell because we

326
00:12:03,039 --> 00:12:09,240
have the other bug as happening as well

327
00:12:05,440 --> 00:12:09,240
but let's see what happens

328
00:12:13,360 --> 00:12:16,720
i can't you know it's a little bit hard

329
00:12:14,879 --> 00:12:19,679
to tell with the lighting voxels in

330
00:12:16,720 --> 00:12:21,839
there um so maybe i should remove the

331
00:12:19,679 --> 00:12:23,519
lighting voxels for now since we don't

332
00:12:21,839 --> 00:12:25,600
really need them frank we're not using

333
00:12:23,519 --> 00:12:28,959
that uh like i don't really need to see

334
00:12:25,600 --> 00:12:28,959
that for any particular reason

335
00:12:29,120 --> 00:12:32,959
uh so maybe i should just go ahead and

336
00:12:31,679 --> 00:12:36,638
delete that

337
00:12:32,958 --> 00:12:39,679
uh that's the spatial there's like a

338
00:12:36,639 --> 00:12:43,440
draw spatial grid this thing

339
00:12:39,679 --> 00:12:43,439
if i just just remove that

340
00:12:44,958 --> 00:12:48,879
there we go it should be easier to tell

341
00:12:47,278 --> 00:12:50,399
if there's any flashing i mean it's

342
00:12:48,879 --> 00:12:52,078
still a little hard because since

343
00:12:50,399 --> 00:12:53,679
there's the other lighting bug it's

344
00:12:52,078 --> 00:12:55,439
difficult to see

345
00:12:53,679 --> 00:12:58,638
but we just have to get to a place where

346
00:12:55,440 --> 00:12:58,639
it's less you know

347
00:12:59,600 --> 00:13:05,040
so i would say i still see it though i

348
00:13:02,639 --> 00:13:08,000
still see at least some flash occur

349
00:13:05,039 --> 00:13:09,199
there which is not just that

350
00:13:08,000 --> 00:13:12,000
um

351
00:13:09,200 --> 00:13:14,720
now of course i don't know if if we're

352
00:13:12,000 --> 00:13:16,480
doing some kind of a weird

353
00:13:14,720 --> 00:13:17,839
there's some weird other artifacts

354
00:13:16,480 --> 00:13:19,839
happening there so i don't know if we're

355
00:13:17,839 --> 00:13:22,720
still seeing some other kind of weird

356
00:13:19,839 --> 00:13:22,720
aspect to it

357
00:13:25,278 --> 00:13:29,278
that weird the fact that the light

358
00:13:27,679 --> 00:13:31,599
has that weird

359
00:13:29,278 --> 00:13:34,720
like this light

360
00:13:31,600 --> 00:13:36,480
gets brighter when i move makes no sense

361
00:13:34,720 --> 00:13:38,560
at all so there's just there's a lot of

362
00:13:36,480 --> 00:13:40,320
really weird stuff happening so i feel

363
00:13:38,559 --> 00:13:42,958
like we've just got some core things we

364
00:13:40,320 --> 00:13:44,959
messed up when we did our uh

365
00:13:42,958 --> 00:13:47,439
our simplification pass

366
00:13:44,958 --> 00:13:49,759
and so you know it's a little bit hard

367
00:13:47,440 --> 00:13:51,440
to say so

368
00:13:49,759 --> 00:13:54,319
are we still getting that flashing or

369
00:13:51,440 --> 00:13:56,240
not it's really hard to perceive

370
00:13:54,320 --> 00:13:59,240
um which is makes it a little bit

371
00:13:56,240 --> 00:13:59,240
difficult

372
00:14:03,278 --> 00:14:07,198
i would say we're still getting

373
00:14:05,198 --> 00:14:09,919
some flashing

374
00:14:07,198 --> 00:14:12,159
just not as bad

375
00:14:09,919 --> 00:14:16,159
but there's still some there right like

376
00:14:12,159 --> 00:14:17,838
i can still see the light shift over

377
00:14:16,159 --> 00:14:18,799
so it seems like it's still copying

378
00:14:17,839 --> 00:14:21,040
wrong

379
00:14:18,799 --> 00:14:21,039
like

380
00:14:21,278 --> 00:14:25,679
my assumption is that the clear makes it

381
00:14:23,679 --> 00:14:27,759
so that you don't see that artifact but

382
00:14:25,679 --> 00:14:29,278
it still seems like maybe the values

383
00:14:27,759 --> 00:14:31,198
getting passed in

384
00:14:29,278 --> 00:14:34,639
are incorrect do you know what i'm

385
00:14:31,198 --> 00:14:35,919
saying like that part seems

386
00:14:34,639 --> 00:14:37,519
broken

387
00:14:35,919 --> 00:14:39,360
in some way

388
00:14:37,519 --> 00:14:41,278
i'm not exactly sure

389
00:14:39,360 --> 00:14:44,800
what that way is but

390
00:14:41,278 --> 00:14:46,879
something odd is happening there that is

391
00:14:44,799 --> 00:14:47,679
an issue right

392
00:14:46,879 --> 00:14:49,439
um

393
00:14:47,679 --> 00:14:51,359
my assumption

394
00:14:49,440 --> 00:14:53,600
oh well actually you know what it's

395
00:14:51,360 --> 00:14:55,519
pretty obvious what it is actually

396
00:14:53,600 --> 00:14:58,159
there's at least one other one which is

397
00:14:55,519 --> 00:15:00,560
that this copy is only happening at the

398
00:14:58,159 --> 00:15:03,838
lower level because we know for a fact

399
00:15:00,559 --> 00:15:06,879
that final z is not the correct value so

400
00:15:03,839 --> 00:15:09,600
actually yeah we would still see half of

401
00:15:06,879 --> 00:15:12,799
a problem which is the upper level is

402
00:15:09,600 --> 00:15:15,278
not sliding right so that's exactly what

403
00:15:12,799 --> 00:15:18,319
we would expect to see okay so

404
00:15:15,278 --> 00:15:20,559
what's going on why is this happening so

405
00:15:18,320 --> 00:15:23,199
if we look at this code here

406
00:15:20,559 --> 00:15:25,679
um this is the code that computes the

407
00:15:23,198 --> 00:15:27,838
z values so you can see stop c and final

408
00:15:25,679 --> 00:15:27,838
z

409
00:15:28,320 --> 00:15:30,959
uh occurring here

410
00:15:30,159 --> 00:15:33,759
so

411
00:15:30,958 --> 00:15:34,719
um let's take a look at how this stuff

412
00:15:33,759 --> 00:15:35,919
uh

413
00:15:34,720 --> 00:15:38,320
shakes out

414
00:15:35,919 --> 00:15:41,319
so we can see

415
00:15:38,320 --> 00:15:41,320
uh

416
00:15:43,759 --> 00:15:51,399
we can see the two paths involved the dz

417
00:15:47,360 --> 00:15:51,399
value in our case

418
00:16:03,120 --> 00:16:07,600
i so i guess looking at this like the

419
00:16:05,600 --> 00:16:10,639
initial z value is going to run to zero

420
00:16:07,600 --> 00:16:12,399
to this equation and this is the problem

421
00:16:10,639 --> 00:16:14,879
that we have

422
00:16:12,399 --> 00:16:16,399
it's going to be whichever is

423
00:16:14,879 --> 00:16:19,198
higher

424
00:16:16,399 --> 00:16:21,759
the initial z which we know is not

425
00:16:19,198 --> 00:16:24,000
higher because it is zero so i'm not

426
00:16:21,759 --> 00:16:25,120
really sure what case that's designed to

427
00:16:24,000 --> 00:16:27,278
prevent

428
00:16:25,120 --> 00:16:31,278
i guess just one where the d voxel value

429
00:16:27,278 --> 00:16:31,278
is very low so this is just clamping

430
00:16:31,839 --> 00:16:36,880
it's saying it's going the stop z value

431
00:16:34,320 --> 00:16:41,519
is going to run from the initial z

432
00:16:36,879 --> 00:16:41,519
to whatever the last

433
00:16:44,639 --> 00:16:49,240
the last value is

434
00:16:55,839 --> 00:17:00,720
and you know doesn't that just seem

435
00:16:59,278 --> 00:17:05,160
wrong

436
00:17:00,720 --> 00:17:05,160
where is this one coming from

437
00:17:09,359 --> 00:17:14,038
because look at how this code works

438
00:17:21,519 --> 00:17:25,439
i guess no okay so no no i'm all right

439
00:17:23,759 --> 00:17:28,879
with that because let's think about this

440
00:17:25,439 --> 00:17:29,759
so if voxel dim in this case dot z is

441
00:17:28,880 --> 00:17:31,679
two

442
00:17:29,759 --> 00:17:34,558
you subtract one from it it's one d

443
00:17:31,679 --> 00:17:37,038
voxel z should be zero so stop z should

444
00:17:34,558 --> 00:17:37,038
be one

445
00:17:38,558 --> 00:17:42,000
and i guess the prob okay but i do see

446
00:17:40,240 --> 00:17:44,400
the problem here if this is z is not

447
00:17:42,000 --> 00:17:46,960
equal to stop z the problem here is it

448
00:17:44,400 --> 00:17:49,600
should run this loop for the last one

449
00:17:46,960 --> 00:17:52,480
right stop z should get we want to run

450
00:17:49,599 --> 00:17:54,480
on stop z as well

451
00:17:52,480 --> 00:17:57,360
so shouldn't this if this is the one

452
00:17:54,480 --> 00:18:00,240
we're going to stop on

453
00:17:57,359 --> 00:18:01,678
it should actually be one higher than so

454
00:18:00,240 --> 00:18:04,079
this is as if

455
00:18:01,679 --> 00:18:07,120
it rather than stop z this is computing

456
00:18:04,079 --> 00:18:09,678
like what the last z value would be

457
00:18:07,119 --> 00:18:11,199
so it should at least be that

458
00:18:09,679 --> 00:18:14,200
i would assume

459
00:18:11,200 --> 00:18:14,200
right

460
00:18:27,919 --> 00:18:31,759
i mean i really just don't see it i

461
00:18:29,919 --> 00:18:33,520
guess i don't understand where the minus

462
00:18:31,759 --> 00:18:35,919
one came from and it seems like it would

463
00:18:33,519 --> 00:18:38,000
be wrong in all of these and i'm

464
00:18:35,919 --> 00:18:39,759
guessing we just never noticed because

465
00:18:38,000 --> 00:18:41,279
we had a large enough stack that it

466
00:18:39,759 --> 00:18:43,759
wouldn't be an issue

467
00:18:41,279 --> 00:18:45,519
if to just miss one right but i don't

468
00:18:43,759 --> 00:18:48,000
know

469
00:18:45,519 --> 00:18:49,440
so we'll see i still see a little bit of

470
00:18:48,000 --> 00:18:52,079
flashing in the movement so i don't

471
00:18:49,440 --> 00:18:53,759
think we quite fixed it whatever it is

472
00:18:52,079 --> 00:18:56,000
um

473
00:18:53,759 --> 00:18:58,640
but i do think that's gotta just be

474
00:18:56,000 --> 00:19:00,798
wrong i i don't see why that would be

475
00:18:58,640 --> 00:19:02,400
occurring now we probably should put

476
00:19:00,798 --> 00:19:04,558
some asserts in here

477
00:19:02,400 --> 00:19:05,679
um i don't know if we we did that

478
00:19:04,558 --> 00:19:08,079
already

479
00:19:05,679 --> 00:19:09,038
uh yeah we we have the light atlas

480
00:19:08,079 --> 00:19:10,960
assert

481
00:19:09,038 --> 00:19:12,160
that we can turn on

482
00:19:10,960 --> 00:19:14,558
so

483
00:19:12,160 --> 00:19:17,759
let's go ahead and turn that on so that

484
00:19:14,558 --> 00:19:21,960
we have some validation

485
00:19:17,759 --> 00:19:21,960
about what's going on here

486
00:19:26,798 --> 00:19:30,639
um

487
00:19:27,679 --> 00:19:32,960
so yeah that's the light leak assert but

488
00:19:30,640 --> 00:19:34,480
you know i can probably turn those off

489
00:19:32,960 --> 00:19:37,480
at the moment

490
00:19:34,480 --> 00:19:37,480
um

491
00:19:39,359 --> 00:19:43,119
that's the one that catches the light

492
00:19:40,720 --> 00:19:46,558
leaking it's the one that

493
00:19:43,119 --> 00:19:46,558
uh basically you validate

494
00:19:47,200 --> 00:19:53,240
you validate that the the values are all

495
00:19:49,679 --> 00:19:53,240
relatively inbounds

496
00:19:54,400 --> 00:19:58,400
yeah so we're always going to hit that

497
00:19:56,319 --> 00:20:00,319
light leaking one and i suppose what i

498
00:19:58,400 --> 00:20:02,720
should probably do is mark these in some

499
00:20:00,319 --> 00:20:06,558
other ways so i should probably do like

500
00:20:02,720 --> 00:20:08,000
if temporary or something like this so i

501
00:20:06,558 --> 00:20:09,440
just so i can find them again if i'm

502
00:20:08,000 --> 00:20:13,079
removing some of these because i want to

503
00:20:09,440 --> 00:20:13,080
put them back in

504
00:20:24,558 --> 00:20:29,558
that's the same one at the end of block

505
00:20:26,159 --> 00:20:29,559
copy atlas

506
00:20:35,440 --> 00:20:39,440
so our light leaking checks are

507
00:20:37,519 --> 00:20:41,200
obviously working quite well they catch

508
00:20:39,440 --> 00:20:42,960
that green thing

509
00:20:41,200 --> 00:20:44,798
um

510
00:20:42,960 --> 00:20:46,558
it's it's obviously very visible in the

511
00:20:44,798 --> 00:20:49,279
data which is also good i suppose for

512
00:20:46,558 --> 00:20:50,960
when we go to hunt it okay so at the

513
00:20:49,279 --> 00:20:53,839
moment we're not fetching out of bounds

514
00:20:50,960 --> 00:20:55,679
at all right um because this thing would

515
00:20:53,839 --> 00:20:57,119
have asserted when we go to do zero tile

516
00:20:55,679 --> 00:20:58,080
or copy tile

517
00:20:57,119 --> 00:20:59,839
uh

518
00:20:58,079 --> 00:21:02,960
at least i believe so and we should

519
00:20:59,839 --> 00:21:05,279
probably verify that but so i think this

520
00:21:02,960 --> 00:21:08,000
code is wrong i think all of these

521
00:21:05,279 --> 00:21:08,960
wanted to not have the minus one in

522
00:21:08,000 --> 00:21:11,919
there

523
00:21:08,960 --> 00:21:13,519
um they all want to do the last row uh

524
00:21:11,919 --> 00:21:14,720
which before they you know simply

525
00:21:13,519 --> 00:21:16,480
weren't doing

526
00:21:14,720 --> 00:21:17,440
and that seems bad

527
00:21:16,480 --> 00:21:22,240
so

528
00:21:17,440 --> 00:21:22,240
uh yeah like oops i guess

529
00:21:28,720 --> 00:21:32,720
and so i don't think there's any problem

530
00:21:30,240 --> 00:21:35,279
with that now except i still don't see

531
00:21:32,720 --> 00:21:38,240
the the flashing still seems to be there

532
00:21:35,279 --> 00:21:40,558
slightly right i can still see

533
00:21:38,240 --> 00:21:43,440
like when i look in here i can see

534
00:21:40,558 --> 00:21:44,558
movement across the tile

535
00:21:43,440 --> 00:21:46,320
and

536
00:21:44,558 --> 00:21:48,079
you know honestly

537
00:21:46,319 --> 00:21:50,240
there's something even weirder about

538
00:21:48,079 --> 00:21:53,359
that which is the movement that i see

539
00:21:50,240 --> 00:21:56,558
across the tiles now is stable so it's

540
00:21:53,359 --> 00:21:59,199
not actually flashing it's like actual

541
00:21:56,558 --> 00:22:01,759
movement which again makes me wonder how

542
00:21:59,200 --> 00:22:04,640
is that possible because there shouldn't

543
00:22:01,759 --> 00:22:07,038
be any way to have that happen

544
00:22:04,640 --> 00:22:08,240
unless we are injecting entropy

545
00:22:07,038 --> 00:22:13,839
like

546
00:22:08,240 --> 00:22:13,839
like that doesn't make any sense to me

547
00:22:19,200 --> 00:22:22,080
like that should not be possible to be

548
00:22:20,960 --> 00:22:24,000
stable

549
00:22:22,079 --> 00:22:25,199
uh to be specific about what i'm looking

550
00:22:24,000 --> 00:22:27,599
at here

551
00:22:25,200 --> 00:22:29,759
um

552
00:22:27,599 --> 00:22:32,399
so take a look at what happens for

553
00:22:29,759 --> 00:22:34,960
example there you can see right there

554
00:22:32,400 --> 00:22:37,840
there's like a dark like that's darker

555
00:22:34,960 --> 00:22:40,319
than say the two neighbors right

556
00:22:37,839 --> 00:22:42,399
when i move through you can see that

557
00:22:40,319 --> 00:22:44,558
darker piece move

558
00:22:42,400 --> 00:22:46,240
sideways it slides

559
00:22:44,558 --> 00:22:48,158
right

560
00:22:46,240 --> 00:22:50,480
and that should not really be possible

561
00:22:48,159 --> 00:22:51,440
because again like i said as far as we

562
00:22:50,480 --> 00:22:55,599
know

563
00:22:51,440 --> 00:22:57,679
each light probe is sampling uniformly

564
00:22:55,599 --> 00:23:00,319
so there's no entropy being injected

565
00:22:57,679 --> 00:23:02,559
based on the grid location

566
00:23:00,319 --> 00:23:04,879
that must be either an erroneous

567
00:23:02,558 --> 00:23:06,960
assumption meaning we did accidentally

568
00:23:04,880 --> 00:23:08,960
forget and leave in some kind of a

569
00:23:06,960 --> 00:23:10,720
permutation that's based on which grid

570
00:23:08,960 --> 00:23:12,159
square you're on in which case we need

571
00:23:10,720 --> 00:23:13,600
to go find out where that is because we

572
00:23:12,159 --> 00:23:15,200
at least need to know about it even if

573
00:23:13,599 --> 00:23:16,639
it's not an error

574
00:23:15,200 --> 00:23:18,720
but separately

575
00:23:16,640 --> 00:23:19,919
that's definitely

576
00:23:18,720 --> 00:23:22,919
uh

577
00:23:19,919 --> 00:23:22,919
like

578
00:23:25,038 --> 00:23:29,679
it's definitely not something we want to

579
00:23:26,960 --> 00:23:31,840
show up as a slide like that now it's

580
00:23:29,679 --> 00:23:33,840
possible that if you turned off right

581
00:23:31,839 --> 00:23:36,000
now we are literally recomputing all of

582
00:23:33,839 --> 00:23:38,798
the lighting there's no blend factor

583
00:23:36,000 --> 00:23:40,640
right um

584
00:23:38,798 --> 00:23:42,558
you can see here that we had previously

585
00:23:40,640 --> 00:23:45,200
had a blend factor this is a blend

586
00:23:42,558 --> 00:23:46,000
factor right of like four

587
00:23:45,200 --> 00:23:48,319
um

588
00:23:46,000 --> 00:23:51,119
that allows it to smooth over four

589
00:23:48,319 --> 00:23:52,480
frames which i assume that if we turned

590
00:23:51,119 --> 00:23:54,399
that on again

591
00:23:52,480 --> 00:23:56,480
maybe this would not be an objectionable

592
00:23:54,400 --> 00:23:58,480
artifact meaning i don't know maybe you

593
00:23:56,480 --> 00:23:59,599
wouldn't actually see

594
00:23:58,480 --> 00:24:02,079
uh

595
00:23:59,599 --> 00:24:05,839
to you know you wouldn't actually see

596
00:24:02,079 --> 00:24:05,839
the the difference but

597
00:24:07,679 --> 00:24:11,360
and you can see that it does smooth it

598
00:24:09,278 --> 00:24:13,359
out quite a bit but

599
00:24:11,359 --> 00:24:15,599
i don't know

600
00:24:13,359 --> 00:24:17,359
i still see it shift almost immediately

601
00:24:15,599 --> 00:24:19,359
let's try turning that up quite a bit

602
00:24:17,359 --> 00:24:21,678
because maybe this will give us a clue

603
00:24:19,359 --> 00:24:24,240
to what is happening here because if i

604
00:24:21,679 --> 00:24:26,000
go ahead here and change it to 1 over 60

605
00:24:24,240 --> 00:24:28,240
so that it's a very slow run this will

606
00:24:26,000 --> 00:24:29,599
take an entire second to update the

607
00:24:28,240 --> 00:24:33,359
lighting

608
00:24:29,599 --> 00:24:36,399
um what actually happens to that slide i

609
00:24:33,359 --> 00:24:36,399
i would like to see

610
00:24:41,679 --> 00:24:47,440
so it does look like it is actually

611
00:24:45,359 --> 00:24:50,639
it is actually based on the fact that

612
00:24:47,440 --> 00:24:53,600
the lighting gets recomputed differently

613
00:24:50,640 --> 00:24:55,919
it looks like right

614
00:24:53,599 --> 00:24:58,798
because you can see if i wait here

615
00:24:55,919 --> 00:25:01,120
the dark darkening comes back

616
00:24:58,798 --> 00:25:02,720
right if i go in there

617
00:25:01,119 --> 00:25:05,199
the and i should probably turn all this

618
00:25:02,720 --> 00:25:06,880
crap off as well um which is actually

619
00:25:05,200 --> 00:25:08,960
not that hard to do we can actually do

620
00:25:06,880 --> 00:25:12,000
it without actually changing anything

621
00:25:08,960 --> 00:25:14,480
here by just moving this out of here

622
00:25:12,000 --> 00:25:16,558
what that is i don't even remember um we

623
00:25:14,480 --> 00:25:20,720
should probably get rid of that as well

624
00:25:16,558 --> 00:25:20,720
but uh you can kind of see here

625
00:25:20,798 --> 00:25:24,400
you're like what is that

626
00:25:22,319 --> 00:25:26,480
what is that yellow we don't even what's

627
00:25:24,400 --> 00:25:28,159
what is this yellow box i don't even

628
00:25:26,480 --> 00:25:29,679
remember we draw so many debug things

629
00:25:28,159 --> 00:25:30,559
while we're trying to find

630
00:25:29,679 --> 00:25:32,960
uh

631
00:25:30,558 --> 00:25:35,839
situations like that i don't even know

632
00:25:32,960 --> 00:25:35,840
what that box is

633
00:25:37,119 --> 00:25:39,359
is it

634
00:25:39,679 --> 00:25:42,679
some

635
00:25:44,240 --> 00:25:48,400
is it like a debug light

636
00:25:46,319 --> 00:25:50,399
or is it is it like drawing the debug

637
00:25:48,400 --> 00:25:52,400
light or something like that

638
00:25:50,400 --> 00:25:57,159
this is where like the recording would

639
00:25:52,400 --> 00:25:57,159
be helpful we could go back and look

640
00:26:00,558 --> 00:26:04,158
it's probably not anything it's bigger

641
00:26:02,480 --> 00:26:05,278
than the screen bounds

642
00:26:04,159 --> 00:26:07,760
um

643
00:26:05,278 --> 00:26:09,679
yeah it's not that so i don't know what

644
00:26:07,759 --> 00:26:12,000
i don't know what's drawing that i have

645
00:26:09,679 --> 00:26:15,200
no idea what's actually drawing that um

646
00:26:12,000 --> 00:26:15,200
let me just look for

647
00:26:16,798 --> 00:26:22,798
things that have that color pattern

648
00:26:20,319 --> 00:26:24,720
uh so we can i don't know see what it is

649
00:26:22,798 --> 00:26:26,960
i'm not sure

650
00:26:24,720 --> 00:26:26,960
um

651
00:26:33,759 --> 00:26:36,079
what

652
00:26:36,159 --> 00:26:39,840
well it looks like for some reason and

653
00:26:38,319 --> 00:26:41,759
we'd have to go back and check the tape

654
00:26:39,839 --> 00:26:43,759
to find out why it looks like for some

655
00:26:41,759 --> 00:26:46,319
reason we're drawing a negative one to

656
00:26:43,759 --> 00:26:50,599
one cube we were probably just trying to

657
00:26:46,319 --> 00:26:50,599
figure out where the world origin was

658
00:26:53,679 --> 00:26:55,278
uh

659
00:26:54,558 --> 00:26:56,720
and

660
00:26:55,278 --> 00:26:58,240
i don't care about that even in the

661
00:26:56,720 --> 00:26:59,600
slightest at the moment so let's get rid

662
00:26:58,240 --> 00:27:00,798
of that

663
00:26:59,599 --> 00:27:02,798
um

664
00:27:00,798 --> 00:27:05,918
okay so now we are free

665
00:27:02,798 --> 00:27:08,079
of of that so what i was trying to say

666
00:27:05,919 --> 00:27:08,880
is that if we look in here

667
00:27:08,079 --> 00:27:12,480
um

668
00:27:08,880 --> 00:27:14,159
and we like as we kind of

669
00:27:12,480 --> 00:27:16,720
shift in and out

670
00:27:14,159 --> 00:27:18,960
with a one second delay you can't see

671
00:27:16,720 --> 00:27:21,120
that artifact anymore

672
00:27:18,960 --> 00:27:24,079
but it's still there and that's what

673
00:27:21,119 --> 00:27:25,918
allows us to know that it is actually

674
00:27:24,079 --> 00:27:27,038
like that the lighting gets computed

675
00:27:25,919 --> 00:27:29,600
differently

676
00:27:27,038 --> 00:27:32,640
so if we're zoomed in here

677
00:27:29,599 --> 00:27:36,798
you can see that these light panels

678
00:27:32,640 --> 00:27:39,440
uh after they have a chance to normalize

679
00:27:36,798 --> 00:27:41,519
they look fairly uniform there's maybe

680
00:27:39,440 --> 00:27:42,720
it's slightly darker in here but only

681
00:27:41,519 --> 00:27:45,359
slightly

682
00:27:42,720 --> 00:27:47,600
if we then move out you will watch these

683
00:27:45,359 --> 00:27:49,439
darkened significantly

684
00:27:47,599 --> 00:27:51,199
after the shift

685
00:27:49,440 --> 00:27:53,759
and i

686
00:27:51,200 --> 00:27:55,440
don't know if that maybe is expected

687
00:27:53,759 --> 00:27:57,440
because they're picking up light from

688
00:27:55,440 --> 00:27:58,399
where the hero is standing

689
00:27:57,440 --> 00:28:01,120
right

690
00:27:58,398 --> 00:28:04,239
um like you can see here that i am as i

691
00:28:01,119 --> 00:28:05,599
move as i move in you get that light

692
00:28:04,240 --> 00:28:07,519
difference

693
00:28:05,599 --> 00:28:09,439
but

694
00:28:07,519 --> 00:28:11,759
so i think what that says to me is i

695
00:28:09,440 --> 00:28:16,919
should turn off the debug light so that

696
00:28:11,759 --> 00:28:16,919
we don't actually have that happening

697
00:28:19,519 --> 00:28:23,839
like let's just get rid of the debug

698
00:28:21,278 --> 00:28:26,960
light entirely

699
00:28:23,839 --> 00:28:29,038
so that it's not there

700
00:28:26,960 --> 00:28:31,759
and now let's see if the artifact

701
00:28:29,038 --> 00:28:34,240
remains as i move around

702
00:28:31,759 --> 00:28:35,839
uh and i'll turn off the one over 60

703
00:28:34,240 --> 00:28:37,200
blend as well

704
00:28:35,839 --> 00:28:40,158
let me also

705
00:28:37,200 --> 00:28:40,159
get this out of the way

706
00:28:40,480 --> 00:28:43,919
why i didn't why i actually restarted

707
00:28:42,398 --> 00:28:47,519
the game i have no idea since i could

708
00:28:43,919 --> 00:28:47,520
have just left it running but you know

709
00:28:52,720 --> 00:28:58,038
so i am not bringing a light into the

710
00:28:54,720 --> 00:28:58,038
room anymore

711
00:28:58,640 --> 00:29:03,278
but it sure does seem like just me

712
00:29:00,480 --> 00:29:05,440
moving in here creates

713
00:29:03,278 --> 00:29:08,480
uh sort of synthetically more light for

714
00:29:05,440 --> 00:29:08,480
no apparent reason

715
00:29:09,119 --> 00:29:13,599
what i will say though again this just

716
00:29:11,440 --> 00:29:15,519
reinforces my decision

717
00:29:13,599 --> 00:29:16,798
that i think it was right to just like

718
00:29:15,519 --> 00:29:19,759
fix the current lighting that we have

719
00:29:16,798 --> 00:29:21,759
and smoosh it to 2d which is what we did

720
00:29:19,759 --> 00:29:24,000
once we get this debugged like oh my god

721
00:29:21,759 --> 00:29:27,119
this looks awesome not forever

722
00:29:24,000 --> 00:29:29,679
4. this looks awesome

723
00:29:27,119 --> 00:29:33,038
um like this lighting looks so so darn

724
00:29:29,679 --> 00:29:35,600
good it's completely like

725
00:29:33,038 --> 00:29:37,599
it it totally sets the mood properly it

726
00:29:35,599 --> 00:29:38,959
has all that nice character to it it

727
00:29:37,599 --> 00:29:39,759
looks great

728
00:29:38,960 --> 00:29:41,519
um

729
00:29:39,759 --> 00:29:43,038
so i do think like

730
00:29:41,519 --> 00:29:46,000
we did the right thing like this looks

731
00:29:43,038 --> 00:29:47,919
awesome and it runs the 60 fps uh i

732
00:29:46,000 --> 00:29:49,679
think just fine when we actually do a

733
00:29:47,919 --> 00:29:50,559
full release build

734
00:29:49,679 --> 00:29:53,200
um

735
00:29:50,558 --> 00:29:54,798
it just looks great right like it just

736
00:29:53,200 --> 00:29:56,960
looks great

737
00:29:54,798 --> 00:29:59,440
um

738
00:29:56,960 --> 00:29:59,440
so yeah

739
00:30:05,200 --> 00:30:08,798
i'm i'm really pleased with how the

740
00:30:06,960 --> 00:30:10,480
lighting came out i thought it was sucky

741
00:30:08,798 --> 00:30:12,319
at first but it turns out it's actually

742
00:30:10,480 --> 00:30:14,159
quite good um

743
00:30:12,319 --> 00:30:16,079
it just really looks cool

744
00:30:14,159 --> 00:30:18,240
uh yeah

745
00:30:16,079 --> 00:30:19,678
so anyway uh

746
00:30:18,240 --> 00:30:21,440
and also you know the other thing i

747
00:30:19,679 --> 00:30:24,399
would note is that you can see that like

748
00:30:21,440 --> 00:30:26,240
when we slow down the blend

749
00:30:24,398 --> 00:30:29,038
you can also see that the light

750
00:30:26,240 --> 00:30:31,278
contamination takes away longer which is

751
00:30:29,038 --> 00:30:34,398
what we would expect like in here right

752
00:30:31,278 --> 00:30:36,159
the the green bleed from outside

753
00:30:34,398 --> 00:30:37,599
you can see how much longer it takes

754
00:30:36,159 --> 00:30:39,919
because the like because we've slowed

755
00:30:37,599 --> 00:30:41,359
down the blend it probably should still

756
00:30:39,919 --> 00:30:42,640
happen i mean if we just sit here and

757
00:30:41,359 --> 00:30:45,038
wait

758
00:30:42,640 --> 00:30:45,840
presumably the green blur eventually

759
00:30:45,038 --> 00:30:47,440
will

760
00:30:45,839 --> 00:30:50,000
right it's already starting right you

761
00:30:47,440 --> 00:30:51,840
can see it's really bright here so the

762
00:30:50,000 --> 00:30:53,200
the power feedback problem that we're

763
00:30:51,839 --> 00:30:54,558
having which we don't really know where

764
00:30:53,200 --> 00:30:56,080
that's coming from which is our another

765
00:30:54,558 --> 00:30:59,038
bug we have to fix

766
00:30:56,079 --> 00:31:01,519
is still happening but that that

767
00:30:59,038 --> 00:31:03,599
delay makes it harder to see

768
00:31:01,519 --> 00:31:06,960
okay so now that i've gotten rid of our

769
00:31:03,599 --> 00:31:11,719
light source if i turn the blend

770
00:31:06,960 --> 00:31:11,720
like the blend rate back up

771
00:31:22,159 --> 00:31:25,278
where is my

772
00:31:23,599 --> 00:31:27,278
tea blend

773
00:31:25,278 --> 00:31:28,960
it sounds like when you take a bunch of

774
00:31:27,278 --> 00:31:30,880
different types of tea and blend them

775
00:31:28,960 --> 00:31:33,360
together i thought it was one over 60 oh

776
00:31:30,880 --> 00:31:34,320
it's not wow it's not an f for some

777
00:31:33,359 --> 00:31:35,278
reason

778
00:31:34,319 --> 00:31:38,079
all right

779
00:31:35,278 --> 00:31:40,880
so if i turn this back up to

780
00:31:38,079 --> 00:31:44,000
just say okay i want to see new lighting

781
00:31:40,880 --> 00:31:46,640
every time so you only get one frame to

782
00:31:44,000 --> 00:31:48,880
compute all of the lighting no blend

783
00:31:46,640 --> 00:31:48,880
right

784
00:31:50,720 --> 00:31:52,960
um

785
00:31:55,599 --> 00:31:59,558
that's really interesting

786
00:32:05,919 --> 00:32:09,919
now i can sort of understand why these

787
00:32:08,079 --> 00:32:11,678
lights go away and that's because the

788
00:32:09,919 --> 00:32:14,960
lighting is not big enough to encompass

789
00:32:11,679 --> 00:32:16,720
them probably right

790
00:32:14,960 --> 00:32:18,558
so if you look at where the bounds the

791
00:32:16,720 --> 00:32:21,120
lights shift out of bounds which means

792
00:32:18,558 --> 00:32:21,349
we probably have to fix this lighting to

793
00:32:21,119 --> 00:32:22,558
be

794
00:32:21,349 --> 00:32:25,599
[Music]

795
00:32:22,558 --> 00:32:28,398
a little bit more centered than it is

796
00:32:25,599 --> 00:32:30,079
the reason we had it going this way was

797
00:32:28,398 --> 00:32:30,879
primarily because

798
00:32:30,079 --> 00:32:33,119
we

799
00:32:30,880 --> 00:32:33,120
um

800
00:32:33,679 --> 00:32:36,640
we wanted

801
00:32:34,798 --> 00:32:38,158
when the lighting was slower

802
00:32:36,640 --> 00:32:39,679
we wanted to

803
00:32:38,159 --> 00:32:41,519
because you could see further in this

804
00:32:39,679 --> 00:32:43,840
direction we wanted to

805
00:32:41,519 --> 00:32:46,079
uh cache this in there

806
00:32:43,839 --> 00:32:47,918
but it's not a very good idea anymore we

807
00:32:46,079 --> 00:32:49,359
probably want this bounce to be fairly

808
00:32:47,919 --> 00:32:51,759
uniform around it because the lighting

809
00:32:49,359 --> 00:32:54,000
is very quick it updates very fast now

810
00:32:51,759 --> 00:32:56,000
so we want to keep lights some of those

811
00:32:54,000 --> 00:32:57,519
off screen lights inbounds right that's

812
00:32:56,000 --> 00:32:59,519
what's happening there

813
00:32:57,519 --> 00:33:01,599
but you can see like from especially

814
00:32:59,519 --> 00:33:03,919
from the fixed view like this you can

815
00:33:01,599 --> 00:33:06,079
see how it really does change the

816
00:33:03,919 --> 00:33:07,919
lighting just changes as it moves it

817
00:33:06,079 --> 00:33:09,359
doesn't really make any sense

818
00:33:07,919 --> 00:33:11,200
why that would be the case and it

819
00:33:09,359 --> 00:33:14,079
doesn't really seem to be related to the

820
00:33:11,200 --> 00:33:16,080
copy because as you saw if we turn down

821
00:33:14,079 --> 00:33:17,759
the blend rate the copy happens

822
00:33:16,079 --> 00:33:20,158
instantly the blend rate is not involved

823
00:33:17,759 --> 00:33:22,640
in the copy if the copy was the thing

824
00:33:20,159 --> 00:33:24,960
producing this result then turning down

825
00:33:22,640 --> 00:33:26,640
the blend rate

826
00:33:24,960 --> 00:33:27,919
would have

827
00:33:26,640 --> 00:33:31,120
not affected

828
00:33:27,919 --> 00:33:33,840
the visibility of this bug so that means

829
00:33:31,119 --> 00:33:35,439
there's something actually different

830
00:33:33,839 --> 00:33:36,639
like there's literally something

831
00:33:35,440 --> 00:33:39,120
different

832
00:33:36,640 --> 00:33:42,880
about the casting

833
00:33:39,119 --> 00:33:45,439
as you shift the light voxel position

834
00:33:42,880 --> 00:33:48,799
i which should just plain not be

835
00:33:45,440 --> 00:33:50,720
possible so that's bug number one

836
00:33:48,798 --> 00:33:52,398
uh for us now because it looks like the

837
00:33:50,720 --> 00:33:54,640
copy is just fine

838
00:33:52,398 --> 00:33:57,119
like it's actually there was a bug in

839
00:33:54,640 --> 00:33:59,440
the copy we did fix it it's gone

840
00:33:57,119 --> 00:34:01,918
uh but there's now a different bug that

841
00:33:59,440 --> 00:34:03,440
has to do with sampling that is really

842
00:34:01,919 --> 00:34:04,480
weird right so we gotta go track that

843
00:34:03,440 --> 00:34:07,480
down

844
00:34:04,480 --> 00:34:07,480
um

845
00:34:08,239 --> 00:34:10,479
trying to think if there's anything else

846
00:34:09,280 --> 00:34:11,919
to say about this but i think that's

847
00:34:10,480 --> 00:34:14,878
about it right

848
00:34:11,918 --> 00:34:16,960
uh we should probably fix that alignment

849
00:34:14,878 --> 00:34:17,838
uh this should probably get straightened

850
00:34:16,960 --> 00:34:20,240
out

851
00:34:17,838 --> 00:34:23,358
and i'm not exactly sure how we want to

852
00:34:20,239 --> 00:34:25,519
do that but like when we do the lighting

853
00:34:23,358 --> 00:34:28,239
alignment part of things

854
00:34:25,519 --> 00:34:30,320
so when we call update lighting

855
00:34:28,239 --> 00:34:32,239
right like we have in here

856
00:34:30,320 --> 00:34:36,159
um

857
00:34:32,239 --> 00:34:36,158
i guess i would say i'm not sure

858
00:34:38,559 --> 00:34:43,279
i'm not sure to what extent this

859
00:34:41,679 --> 00:34:44,960
i think this always

860
00:34:43,280 --> 00:34:47,679
this is always the thing that actually

861
00:34:44,960 --> 00:34:48,878
determines like where it is aligned

862
00:34:47,679 --> 00:34:52,159
right

863
00:34:48,878 --> 00:34:55,279
um so you can see like vox camera offset

864
00:34:52,159 --> 00:34:56,878
y plus two that is that hard-coded shift

865
00:34:55,280 --> 00:34:59,200
that's baked in there

866
00:34:56,878 --> 00:35:03,838
so like if that went away then at least

867
00:34:59,199 --> 00:35:03,838
it would be centered right um

868
00:35:07,679 --> 00:35:11,279
so if we look now at how the blue

869
00:35:10,559 --> 00:35:15,599
uh

870
00:35:11,280 --> 00:35:18,400
is related you can kind of see

871
00:35:15,599 --> 00:35:21,760
um that it's lined up

872
00:35:18,400 --> 00:35:26,720
right now why we get the sort of

873
00:35:21,760 --> 00:35:28,880
skew on the sides so that it's biased

874
00:35:26,719 --> 00:35:32,159
why we have

875
00:35:28,880 --> 00:35:35,200
an uneven x layout

876
00:35:32,159 --> 00:35:37,358
uh that i'm not sure about

877
00:35:35,199 --> 00:35:40,000
it might just be because it's two here

878
00:35:37,358 --> 00:35:42,400
and one here and it can't be made even

879
00:35:40,000 --> 00:35:44,480
uh that i'm not sure about

880
00:35:42,400 --> 00:35:47,280
um but keeping it even like that you can

881
00:35:44,480 --> 00:35:50,240
see fixes the the room getting dark

882
00:35:47,280 --> 00:35:52,079
before we you know problem right

883
00:35:50,239 --> 00:35:54,719
i don't think it would necessarily fix

884
00:35:52,079 --> 00:35:56,079
it this way because it looks like the

885
00:35:54,719 --> 00:35:58,399
the gap

886
00:35:56,079 --> 00:36:00,880
x gap is maybe a little bit too too

887
00:35:58,400 --> 00:36:02,720
small there so we may have to enlarge

888
00:36:00,880 --> 00:36:06,480
the lightning region slightly like one

889
00:36:02,719 --> 00:36:12,039
more tile on the x axis or something

890
00:36:06,480 --> 00:36:12,039
um but in general i would say you know

891
00:36:31,519 --> 00:36:33,838
so

892
00:36:34,960 --> 00:36:38,480
i think i'll look at how to do the

893
00:36:36,639 --> 00:36:39,759
expanded alignment later

894
00:36:38,480 --> 00:36:41,599
so for now i'd just like to keep

895
00:36:39,760 --> 00:36:43,680
focusing on this so we have a very

896
00:36:41,599 --> 00:36:45,440
strange we have like a really strange

897
00:36:43,679 --> 00:36:47,919
kind of bug there right

898
00:36:45,440 --> 00:36:51,760
um that i'm not sure

899
00:36:47,920 --> 00:36:54,559
i really don't quite know what the

900
00:36:51,760 --> 00:36:55,760
what is actually going on uh

901
00:36:54,559 --> 00:36:58,000
so

902
00:36:55,760 --> 00:37:00,640
something about the way the casting is

903
00:36:58,000 --> 00:37:01,599
happening is permuted based on where you

904
00:37:00,639 --> 00:37:03,759
are

905
00:37:01,599 --> 00:37:06,480
and that shouldn't really be happening

906
00:37:03,760 --> 00:37:07,280
so that's very strange so if you look at

907
00:37:06,480 --> 00:37:10,079
how

908
00:37:07,280 --> 00:37:12,640
we are doing that in grid raycast i i

909
00:37:10,079 --> 00:37:13,760
thought and maybe this is very incorrect

910
00:37:12,639 --> 00:37:16,400
but

911
00:37:13,760 --> 00:37:18,800
i thought uh the way this was working

912
00:37:16,400 --> 00:37:20,240
before was that it shouldn't really have

913
00:37:18,800 --> 00:37:22,400
mattered

914
00:37:20,239 --> 00:37:24,719
which one of these you were because the

915
00:37:22,400 --> 00:37:26,720
ray directions should all have been like

916
00:37:24,719 --> 00:37:29,919
the same

917
00:37:26,719 --> 00:37:32,639
uh and maybe that's not really correct

918
00:37:29,920 --> 00:37:34,838
because you have different you have

919
00:37:32,639 --> 00:37:37,519
different um

920
00:37:34,838 --> 00:37:40,239
alignments versus the spatial grid like

921
00:37:37,519 --> 00:37:42,559
with the quadrant index thing here

922
00:37:40,239 --> 00:37:42,559
um

923
00:37:43,920 --> 00:37:48,720
that's kind of a good question and i

924
00:37:45,599 --> 00:37:50,960
don't really know i also think we make

925
00:37:48,719 --> 00:37:53,279
you know one other thing we could do is

926
00:37:50,960 --> 00:37:54,639
get rid of the 2x over sampling we don't

927
00:37:53,280 --> 00:37:56,320
know that we really need that for any

928
00:37:54,639 --> 00:37:57,118
particular reason in fact we may just

929
00:37:56,320 --> 00:37:58,240
not

930
00:37:57,119 --> 00:38:00,079
want that

931
00:37:58,239 --> 00:38:02,559
um so it could be that we should get rid

932
00:38:00,079 --> 00:38:04,960
of that but separate from that

933
00:38:02,559 --> 00:38:07,199
uh if you look at what happens here our

934
00:38:04,960 --> 00:38:08,400
sample direction table is always the

935
00:38:07,199 --> 00:38:09,919
same table

936
00:38:08,400 --> 00:38:12,160
right

937
00:38:09,920 --> 00:38:12,159
um

938
00:38:16,960 --> 00:38:22,320
so no matter what cell you're on

939
00:38:20,000 --> 00:38:24,800
i don't quite see your you should always

940
00:38:22,320 --> 00:38:26,640
be casting the same set of rays

941
00:38:24,800 --> 00:38:29,839
that's all i'm trying to say

942
00:38:26,639 --> 00:38:32,960
so in here we loop over the entire table

943
00:38:29,838 --> 00:38:34,480
of t y t x and ray index the full

944
00:38:32,960 --> 00:38:35,519
complement of rays that are going to be

945
00:38:34,480 --> 00:38:39,440
cast

946
00:38:35,519 --> 00:38:39,440
they get cast off of the same

947
00:38:39,519 --> 00:38:44,000
base sample pointer

948
00:38:42,559 --> 00:38:47,000
right

949
00:38:44,000 --> 00:38:47,000
um

950
00:38:52,960 --> 00:38:57,280
so like i don't fundamentally know why

951
00:38:56,159 --> 00:38:59,679
you would see

952
00:38:57,280 --> 00:39:02,880
differences there

953
00:38:59,679 --> 00:39:02,879
it's not

954
00:39:08,079 --> 00:39:11,519
it's not clear to me now it could be

955
00:39:09,838 --> 00:39:12,838
because this walk table is kind of

956
00:39:11,519 --> 00:39:14,400
busted

957
00:39:12,838 --> 00:39:16,400
right

958
00:39:14,400 --> 00:39:18,320
so let's suppose the walk table was

959
00:39:16,400 --> 00:39:19,358
busted then the quadrant that you were

960
00:39:18,320 --> 00:39:20,720
in

961
00:39:19,358 --> 00:39:23,440
would

962
00:39:20,719 --> 00:39:25,679
would make the difference

963
00:39:23,440 --> 00:39:25,679
right

964
00:39:26,079 --> 00:39:30,320
um so it could be that that's what

965
00:39:28,079 --> 00:39:35,920
happened like the light sampling walk

966
00:39:30,320 --> 00:39:35,920
table is built wrong or something

967
00:39:36,000 --> 00:39:38,320
and

968
00:39:39,119 --> 00:39:42,119
like

969
00:39:50,960 --> 00:39:54,800
i mean i guess we should probably go

970
00:39:52,639 --> 00:39:56,159
look at that i can't think unfortunately

971
00:39:54,800 --> 00:39:57,680
i i don't know

972
00:39:56,159 --> 00:40:03,759
[Music]

973
00:39:57,679 --> 00:40:06,719
of any way to really fix that uh

974
00:40:03,760 --> 00:40:08,880
in like a short term you can't just set

975
00:40:06,719 --> 00:40:11,118
this to zero because then it will

976
00:40:08,880 --> 00:40:12,880
actually cast wrong because the location

977
00:40:11,119 --> 00:40:14,640
that you're casting from

978
00:40:12,880 --> 00:40:16,160
would be incorrect

979
00:40:14,639 --> 00:40:18,719
um

980
00:40:16,159 --> 00:40:20,719
so like i'm not sure of a way to take it

981
00:40:18,719 --> 00:40:22,318
out of the equation temporarily to see

982
00:40:20,719 --> 00:40:25,679
if it is the problem

983
00:40:22,318 --> 00:40:28,480
so that's unfortunate uh to say the

984
00:40:25,679 --> 00:40:28,480
least but

985
00:40:28,800 --> 00:40:33,440
uh we have a bunch of options here like

986
00:40:31,358 --> 00:40:35,838
one of them is to remove walk tables

987
00:40:33,440 --> 00:40:37,679
entirely since z transitions are no

988
00:40:35,838 --> 00:40:39,519
longer an option

989
00:40:37,679 --> 00:40:42,318
one thing we could do is just put the

990
00:40:39,519 --> 00:40:44,318
walk because you can only choose

991
00:40:42,318 --> 00:40:46,559
you can literally only choose to move

992
00:40:44,318 --> 00:40:48,639
one cell in x or one cell in y that's

993
00:40:46,559 --> 00:40:50,639
all you can do

994
00:40:48,639 --> 00:40:52,559
we could probably change it so that it

995
00:40:50,639 --> 00:40:54,480
happens in line now

996
00:40:52,559 --> 00:40:55,480
and doesn't actually

997
00:40:54,480 --> 00:40:58,159
uh

998
00:40:55,480 --> 00:40:58,960
involve a walk table

999
00:40:58,159 --> 00:41:01,199
i

1000
00:40:58,960 --> 00:41:04,240
before that was demonstrably slower

1001
00:41:01,199 --> 00:41:07,919
because it had to do a full three-way

1002
00:41:04,239 --> 00:41:11,358
xyz check but if you only have to do x

1003
00:41:07,920 --> 00:41:13,680
and y that might be enough to fix the

1004
00:41:11,358 --> 00:41:16,239
problem right

1005
00:41:13,679 --> 00:41:18,719
to make it not too slow

1006
00:41:16,239 --> 00:41:20,479
um but looking at this right this is the

1007
00:41:18,719 --> 00:41:23,199
code that you would expect to be sort of

1008
00:41:20,480 --> 00:41:26,199
wrong if if that was the case

1009
00:41:23,199 --> 00:41:26,199
um

1010
00:41:50,079 --> 00:41:53,760
okay

1011
00:41:51,440 --> 00:41:57,039
so wait a minute

1012
00:41:53,760 --> 00:41:57,040
what is this about

1013
00:41:58,559 --> 00:42:01,599
is this another bug we had that we just

1014
00:42:00,239 --> 00:42:03,199
didn't know about i mean it's pretty

1015
00:42:01,599 --> 00:42:04,960
easy to have bugs when you only work on

1016
00:42:03,199 --> 00:42:07,598
something once a week so i'm not going

1017
00:42:04,960 --> 00:42:09,760
to be surprised if it is

1018
00:42:07,599 --> 00:42:13,440
but how would this have worked because

1019
00:42:09,760 --> 00:42:16,960
if the walk table offset so every time

1020
00:42:13,440 --> 00:42:20,559
you loop over these in when you look at

1021
00:42:16,960 --> 00:42:22,800
how many sample directions there are

1022
00:42:20,559 --> 00:42:25,519
you're setting a walk table offset that

1023
00:42:22,800 --> 00:42:28,240
overwrites whatever the previous one was

1024
00:42:25,519 --> 00:42:30,000
clearly you would need four of these one

1025
00:42:28,239 --> 00:42:32,639
for each of the quadrants that you were

1026
00:42:30,000 --> 00:42:34,800
in and the offset would have to match so

1027
00:42:32,639 --> 00:42:36,960
that's probably just the bug and we

1028
00:42:34,800 --> 00:42:38,400
didn't know we had it before and it was

1029
00:42:36,960 --> 00:42:39,920
just wrong

1030
00:42:38,400 --> 00:42:42,480
you know what i'm saying

1031
00:42:39,920 --> 00:42:45,119
like this would have to be this

1032
00:42:42,480 --> 00:42:46,240
where the quadrant index gets written

1033
00:42:45,119 --> 00:42:47,519
into

1034
00:42:46,239 --> 00:42:48,719
like the

1035
00:42:47,519 --> 00:42:51,280
like

1036
00:42:48,719 --> 00:42:54,239
you know what i'm saying

1037
00:42:51,280 --> 00:42:56,319
so so in order for this code to be at

1038
00:42:54,239 --> 00:42:58,719
all even slightly correct

1039
00:42:56,318 --> 00:43:00,880
you would need that to occur and you

1040
00:42:58,719 --> 00:43:02,559
would need your sampling spheres right

1041
00:43:00,880 --> 00:43:05,519
this walk table offset would actually

1042
00:43:02,559 --> 00:43:08,159
have four entries one for each quadrant

1043
00:43:05,519 --> 00:43:10,880
um that's just

1044
00:43:08,159 --> 00:43:16,318
that's just science

1045
00:43:10,880 --> 00:43:17,680
um so i'm pretty sure that was wrong

1046
00:43:16,318 --> 00:43:19,679
i mean i don't

1047
00:43:17,679 --> 00:43:23,519
want to say that for sure but i'm pretty

1048
00:43:19,679 --> 00:43:26,078
sure that is just flagrantly wrong

1049
00:43:23,519 --> 00:43:28,719
um

1050
00:43:26,079 --> 00:43:30,318
like like that's just completely broken

1051
00:43:28,719 --> 00:43:31,919
now since we have the weird light

1052
00:43:30,318 --> 00:43:33,519
contamination problem it's hard for me

1053
00:43:31,920 --> 00:43:34,960
to know for sure but i'm pretty sure

1054
00:43:33,519 --> 00:43:36,800
that was just wrong

1055
00:43:34,960 --> 00:43:38,880
um it doesn't seem to have really

1056
00:43:36,800 --> 00:43:40,640
changed anything which is weirder still

1057
00:43:38,880 --> 00:43:43,039
right um

1058
00:43:40,639 --> 00:43:45,440
but but that was just an error

1059
00:43:43,039 --> 00:43:47,759
uh i can't see any way that's not an

1060
00:43:45,440 --> 00:43:47,760
error

1061
00:43:49,280 --> 00:43:52,280
right

1062
00:43:57,920 --> 00:44:03,480
um and and this is wrong too right so

1063
00:44:19,519 --> 00:44:25,838
actually wait no no no i'm wrong

1064
00:44:23,358 --> 00:44:29,960
so we do actually create a different

1065
00:44:25,838 --> 00:44:29,960
table for each quadrant

1066
00:44:38,000 --> 00:44:42,880
but the walk table offset's going to be

1067
00:44:41,039 --> 00:44:45,119
wrong

1068
00:44:42,880 --> 00:44:45,119
so

1069
00:44:48,400 --> 00:44:52,240
so no that i was i'm still right because

1070
00:44:50,800 --> 00:44:54,800
even though we create a different table

1071
00:44:52,239 --> 00:44:56,318
who cares you still have the problem of

1072
00:44:54,800 --> 00:44:58,640
each

1073
00:44:56,318 --> 00:45:00,639
you need the right index depending on

1074
00:44:58,639 --> 00:45:02,239
which table you were using

1075
00:45:00,639 --> 00:45:04,000
but i think that does mean this code is

1076
00:45:02,239 --> 00:45:05,919
now correct meaning the fact that this

1077
00:45:04,000 --> 00:45:06,800
dest index gets reset to zero is totally

1078
00:45:05,920 --> 00:45:07,760
fine

1079
00:45:06,800 --> 00:45:09,839
because

1080
00:45:07,760 --> 00:45:12,720
you are creating a separate

1081
00:45:09,838 --> 00:45:12,719
table for each one

1082
00:45:16,960 --> 00:45:21,679
again you can kind of see why this code

1083
00:45:19,119 --> 00:45:22,800
now feels like we're doing too much work

1084
00:45:21,679 --> 00:45:25,679
right

1085
00:45:22,800 --> 00:45:28,318
when there were three in you know

1086
00:45:25,679 --> 00:45:32,159
when there were three

1087
00:45:28,318 --> 00:45:34,079
spatial directions to walk in

1088
00:45:32,159 --> 00:45:36,559
maybe this made some sense

1089
00:45:34,079 --> 00:45:39,440
but when there's only two it feels like

1090
00:45:36,559 --> 00:45:42,159
now we just shouldn't

1091
00:45:39,440 --> 00:45:44,318
need to do this right like it feels like

1092
00:45:42,159 --> 00:45:45,920
if you look all of this stuff that was

1093
00:45:44,318 --> 00:45:48,000
for loops before it doesn't need to be

1094
00:45:45,920 --> 00:45:50,800
loops it can just be a single if to see

1095
00:45:48,000 --> 00:45:52,400
if x is greater than y or whatever

1096
00:45:50,800 --> 00:45:54,560
um

1097
00:45:52,400 --> 00:45:57,200
i feel like it should be relatively

1098
00:45:54,559 --> 00:46:00,639
straightforward to just say like

1099
00:45:57,199 --> 00:46:02,719
not do this

1100
00:46:00,639 --> 00:46:04,159
uh it just seems like way too much work

1101
00:46:02,719 --> 00:46:06,399
now

1102
00:46:04,159 --> 00:46:08,480
and i guess i don't know

1103
00:46:06,400 --> 00:46:10,318
uh i don't know if this is the right

1104
00:46:08,480 --> 00:46:12,400
time to do that but the question is do

1105
00:46:10,318 --> 00:46:14,159
we bother debugging this

1106
00:46:12,400 --> 00:46:16,079
which i think is part of the problem or

1107
00:46:14,159 --> 00:46:19,598
do we not

1108
00:46:16,079 --> 00:46:19,599
i guess one thing we could do

1109
00:46:21,760 --> 00:46:26,880
is if we stuffed a known lighting value

1110
00:46:24,639 --> 00:46:29,199
into each light cell instead of doing

1111
00:46:26,880 --> 00:46:31,119
the grid raycast

1112
00:46:29,199 --> 00:46:33,118
that would probably let us see more

1113
00:46:31,119 --> 00:46:34,480
clearly if that was the case meaning if

1114
00:46:33,119 --> 00:46:36,160
if it was the fact that the rays are

1115
00:46:34,480 --> 00:46:40,000
different that's the problem but then

1116
00:46:36,159 --> 00:46:43,559
again i i don't know um it's a tough one

1117
00:46:40,000 --> 00:46:43,559
it's a tough one

1118
00:46:56,318 --> 00:47:00,159
i don't have a very coherent thought on

1119
00:46:58,079 --> 00:47:02,720
what the best way is to preheat proceed

1120
00:47:00,159 --> 00:47:04,318
um because i do think we risk debugging

1121
00:47:02,719 --> 00:47:06,078
something that we don't want to keep and

1122
00:47:04,318 --> 00:47:07,759
that's a bad decision usually on the

1123
00:47:06,079 --> 00:47:09,519
other hand it's possible that it won't

1124
00:47:07,760 --> 00:47:11,599
fix the problem and in which case maybe

1125
00:47:09,519 --> 00:47:14,400
the problem comes harder to find

1126
00:47:11,599 --> 00:47:15,760
so it's just really hard to guess but

1127
00:47:14,400 --> 00:47:20,519
you can see that the problem is still

1128
00:47:15,760 --> 00:47:20,520
there right so it wasn't that

1129
00:47:28,000 --> 00:47:33,440
um and another option is maybe we could

1130
00:47:30,239 --> 00:47:34,558
try to lock the grid to only move on two

1131
00:47:33,440 --> 00:47:36,880
steps

1132
00:47:34,559 --> 00:47:38,870
so so

1133
00:47:36,880 --> 00:47:42,070
like if for example

1134
00:47:38,869 --> 00:47:42,069
[Music]

1135
00:47:42,318 --> 00:47:45,920
if we

1136
00:47:43,440 --> 00:47:48,000
forced the grid to not change which

1137
00:47:45,920 --> 00:47:50,079
quadrant anything was in

1138
00:47:48,000 --> 00:47:51,440
so in other words like

1139
00:47:50,079 --> 00:47:53,920
the

1140
00:47:51,440 --> 00:47:57,358
the this part

1141
00:47:53,920 --> 00:47:59,680
right where we do the like

1142
00:47:57,358 --> 00:47:59,679
um

1143
00:48:00,480 --> 00:48:04,400
where we do like the center p nonsense

1144
00:48:02,400 --> 00:48:06,480
and we'd look to see like you know if we

1145
00:48:04,400 --> 00:48:08,559
need to

1146
00:48:06,480 --> 00:48:09,920
if we need to check the set the dvox

1147
00:48:08,559 --> 00:48:14,079
little thing to whatever it's going to

1148
00:48:09,920 --> 00:48:14,079
be and blah blah blah right

1149
00:48:19,679 --> 00:48:25,279
if we always like forced d-voxel to be

1150
00:48:22,880 --> 00:48:26,640
on twos so that the quadrant doesn't

1151
00:48:25,280 --> 00:48:31,240
change

1152
00:48:26,639 --> 00:48:31,239
presumably that would do it

1153
00:48:39,280 --> 00:48:43,440
uh the dark spot does move though is the

1154
00:48:41,760 --> 00:48:44,480
thing just sorry just checking chat for

1155
00:48:43,440 --> 00:48:46,720
a second there

1156
00:48:44,480 --> 00:48:48,480
uh the it does move

1157
00:48:46,719 --> 00:48:51,439
you can see it it might be hard to see

1158
00:48:48,480 --> 00:48:53,519
on stream but it but it does right

1159
00:48:51,440 --> 00:48:56,000
so watch

1160
00:48:53,519 --> 00:48:56,000
do you see

1161
00:48:59,838 --> 00:49:03,558
like watch those panels

1162
00:49:09,280 --> 00:49:12,480
we definitely get some weird like

1163
00:49:10,719 --> 00:49:16,639
oscillating behavior there which we

1164
00:49:12,480 --> 00:49:20,000
don't have an explanation for

1165
00:49:16,639 --> 00:49:23,039
and so and it is it is varied it varies

1166
00:49:20,000 --> 00:49:24,239
as the as we slide right if you look at

1167
00:49:23,039 --> 00:49:25,358
what's happening

1168
00:49:24,239 --> 00:49:28,519
you can see

1169
00:49:25,358 --> 00:49:28,519
the slide

1170
00:49:39,358 --> 00:49:42,358
um

1171
00:49:47,599 --> 00:49:52,079
well the reason it didn't does nothing

1172
00:49:49,440 --> 00:49:53,838
changes while i'm in the room is because

1173
00:49:52,079 --> 00:49:55,280
i'm not i don't have a light over my

1174
00:49:53,838 --> 00:49:56,480
head anymore

1175
00:49:55,280 --> 00:49:57,839
right

1176
00:49:56,480 --> 00:49:59,039
that's why we were getting a change

1177
00:49:57,838 --> 00:50:00,480
while i was in the room is i was

1178
00:49:59,039 --> 00:50:02,480
carrying a light with me once we turned

1179
00:50:00,480 --> 00:50:04,400
that off it's pretty clear that it

1180
00:50:02,480 --> 00:50:07,039
doesn't actually change

1181
00:50:04,400 --> 00:50:08,880
uh unless this lighting volume changes

1182
00:50:07,039 --> 00:50:10,239
and even inside the room you can see

1183
00:50:08,880 --> 00:50:12,160
that it does change when the lighting

1184
00:50:10,239 --> 00:50:13,838
volume changes it's a little bit hard to

1185
00:50:12,159 --> 00:50:15,838
see

1186
00:50:13,838 --> 00:50:18,078
but like if we

1187
00:50:15,838 --> 00:50:19,759
if we fix the camera there and you look

1188
00:50:18,079 --> 00:50:21,680
at that

1189
00:50:19,760 --> 00:50:24,160
right it gets darker when the lighting

1190
00:50:21,679 --> 00:50:25,519
volume alignment changes again

1191
00:50:24,159 --> 00:50:27,838
right

1192
00:50:25,519 --> 00:50:29,679
so you can kind of see that like there's

1193
00:50:27,838 --> 00:50:31,279
definitely some really weird stuff

1194
00:50:29,679 --> 00:50:34,078
happening there that we don't have an

1195
00:50:31,280 --> 00:50:36,480
explanation for so it's definitely a bug

1196
00:50:34,079 --> 00:50:38,000
uh and very unlikely to be like actually

1197
00:50:36,480 --> 00:50:41,039
something correct going on i think it's

1198
00:50:38,000 --> 00:50:42,318
just our we have made some kind of error

1199
00:50:41,039 --> 00:50:44,400
right

1200
00:50:42,318 --> 00:50:46,079
and we don't know what it is so there's

1201
00:50:44,400 --> 00:50:47,680
something going on with that alignment

1202
00:50:46,079 --> 00:50:49,760
that's very strange

1203
00:50:47,679 --> 00:50:51,759
um

1204
00:50:49,760 --> 00:50:55,359
and i don't know what it is

1205
00:50:51,760 --> 00:50:57,119
and so we probably yeah i mean we we

1206
00:50:55,358 --> 00:50:59,199
gotta have a better

1207
00:50:57,119 --> 00:51:01,358
way of investigating that

1208
00:50:59,199 --> 00:51:03,358
i do think the walk table offset stuff

1209
00:51:01,358 --> 00:51:05,440
was definitely you know had to have been

1210
00:51:03,358 --> 00:51:07,598
broken before because

1211
00:51:05,440 --> 00:51:10,720
it just doesn't make any sense how it

1212
00:51:07,599 --> 00:51:10,720
was working this time

1213
00:51:21,519 --> 00:51:24,960
and again i don't know if we just want

1214
00:51:23,119 --> 00:51:27,920
to rip this stuff out

1215
00:51:24,960 --> 00:51:29,760
my my gut instinct says we do

1216
00:51:27,920 --> 00:51:30,960
like we just don't want walk tables

1217
00:51:29,760 --> 00:51:32,559
anymore

1218
00:51:30,960 --> 00:51:35,039
um because again it's just too much

1219
00:51:32,559 --> 00:51:38,839
complexity for what we're doing where we

1220
00:51:35,039 --> 00:51:38,838
don't actually have

1221
00:51:52,000 --> 00:51:55,440
like i feel like we should be able to

1222
00:51:53,599 --> 00:51:57,599
simplify this enough

1223
00:51:55,440 --> 00:51:59,358
so if we look at what happens for the

1224
00:51:57,599 --> 00:52:02,079
you know the cell stepping

1225
00:51:59,358 --> 00:52:04,318
what we're computing here right

1226
00:52:02,079 --> 00:52:06,559
is

1227
00:52:04,318 --> 00:52:08,800
we have the inverse

1228
00:52:06,559 --> 00:52:12,800
ray direction

1229
00:52:08,800 --> 00:52:12,800
and we just are stepping

1230
00:52:12,880 --> 00:52:16,960
like we we go into this cost loop here

1231
00:52:15,199 --> 00:52:20,399
and and all we're doing is we just

1232
00:52:16,960 --> 00:52:20,400
multiply by that inverse

1233
00:52:21,838 --> 00:52:24,719
and then we update

1234
00:52:25,679 --> 00:52:32,679
and it seems like that should be pretty

1235
00:52:28,280 --> 00:52:32,680
straightforward to do

1236
00:52:34,880 --> 00:52:41,838
like basically we just compute two of

1237
00:52:36,719 --> 00:52:44,078
these and we see which one is less

1238
00:52:41,838 --> 00:52:47,078
you know

1239
00:52:44,079 --> 00:52:47,079
um

1240
00:52:53,838 --> 00:52:58,719
whichever one is less you than just

1241
00:52:55,838 --> 00:53:01,719
that's the step you take

1242
00:52:58,719 --> 00:53:01,719
um

1243
00:53:09,039 --> 00:53:14,759
so i think that's about it

1244
00:53:11,760 --> 00:53:14,760
um

1245
00:53:26,239 --> 00:53:29,838
it's just a really tough decision

1246
00:53:30,559 --> 00:53:33,440
do you want to use these tables or don't

1247
00:53:32,318 --> 00:53:36,159
you

1248
00:53:33,440 --> 00:53:38,000
it feels like you don't

1249
00:53:36,159 --> 00:53:39,679
but at the same time it's like tables

1250
00:53:38,000 --> 00:53:42,000
are always almost always faster than

1251
00:53:39,679 --> 00:53:43,519
anything else so you're gonna pay some

1252
00:53:42,000 --> 00:53:44,719
cost

1253
00:53:43,519 --> 00:53:48,800
for it

1254
00:53:44,719 --> 00:53:48,799
um it's not it ain't gonna be free

1255
00:53:49,760 --> 00:53:56,520
you know

1256
00:53:51,838 --> 00:53:56,519
um you're gonna have to do this twice

1257
00:53:57,039 --> 00:53:59,358
so

1258
00:53:57,838 --> 00:54:02,000
you have to do two

1259
00:53:59,358 --> 00:54:05,679
you know two subtracts

1260
00:54:02,000 --> 00:54:08,400
two multiplies you gotta do the compare

1261
00:54:05,679 --> 00:54:09,759
um and the compare has to like then do a

1262
00:54:08,400 --> 00:54:12,160
dependent ad

1263
00:54:09,760 --> 00:54:12,960
and then probably the most expensive

1264
00:54:12,159 --> 00:54:15,519
thing

1265
00:54:12,960 --> 00:54:18,000
is you have to then look to see what you

1266
00:54:15,519 --> 00:54:19,199
are planning to do

1267
00:54:18,000 --> 00:54:22,199
right

1268
00:54:19,199 --> 00:54:22,199
um

1269
00:54:39,280 --> 00:54:44,640
so do we think do we think that will

1270
00:54:42,239 --> 00:54:44,639
actually

1271
00:54:49,039 --> 00:54:53,400
we know when we hit the apron

1272
00:54:54,639 --> 00:55:00,598
but what we don't know is when we go

1273
00:54:56,639 --> 00:55:00,598
outside the z bounds

1274
00:55:15,679 --> 00:55:21,279
i agree that frufu is a great variable

1275
00:55:17,760 --> 00:55:22,000
name so that's staying in um so i don't

1276
00:55:21,280 --> 00:55:24,160
know

1277
00:55:22,000 --> 00:55:27,599
i'm really kind of conflicted here i

1278
00:55:24,159 --> 00:55:27,598
think maybe we just pull this out

1279
00:55:28,400 --> 00:55:31,760
because why should i spend my time

1280
00:55:29,920 --> 00:55:33,920
debugging it when i think probably the

1281
00:55:31,760 --> 00:55:36,960
correct answer is we would like to get

1282
00:55:33,920 --> 00:55:40,480
off of this concept of

1283
00:55:36,960 --> 00:55:42,400
using the light stepping tables because

1284
00:55:40,480 --> 00:55:45,838
i would like to be able to move to a

1285
00:55:42,400 --> 00:55:47,838
stochastic system going forward

1286
00:55:45,838 --> 00:55:49,759
that maybe doesn't rely on the sampling

1287
00:55:47,838 --> 00:55:51,599
spheres either because i'm just afraid

1288
00:55:49,760 --> 00:55:52,960
like i'm definitely afraid

1289
00:55:51,599 --> 00:55:55,119
that

1290
00:55:52,960 --> 00:55:57,760
we will need to vary

1291
00:55:55,119 --> 00:55:59,838
the over time like now that we're able

1292
00:55:57,760 --> 00:56:02,000
to hit such a high sampling rate i feel

1293
00:55:59,838 --> 00:56:04,400
like we want to use more than a tables

1294
00:56:02,000 --> 00:56:06,719
amount of input for it

1295
00:56:04,400 --> 00:56:06,720
um

1296
00:56:06,798 --> 00:56:11,679
so that's just kind of why i'm sort of

1297
00:56:08,639 --> 00:56:14,679
pushed in that direction

1298
00:56:11,679 --> 00:56:14,679
so

1299
00:56:18,400 --> 00:56:22,079
let me look at grid raycast and see what

1300
00:56:20,559 --> 00:56:24,400
i think

1301
00:56:22,079 --> 00:56:26,079
so inside grid raycast here's the setup

1302
00:56:24,400 --> 00:56:28,400
code right

1303
00:56:26,079 --> 00:56:30,640
um

1304
00:56:28,400 --> 00:56:31,760
why that code is not in a grid raycast

1305
00:56:30,639 --> 00:56:34,480
debugging

1306
00:56:31,760 --> 00:56:34,480
thing i don't know

1307
00:56:38,079 --> 00:56:44,400
uh but you know what are you gonna do so

1308
00:56:42,719 --> 00:56:45,279
when we do our setup here

1309
00:56:44,400 --> 00:56:47,440
right

1310
00:56:45,280 --> 00:56:49,920
we're loading up one of these raid

1311
00:56:47,440 --> 00:56:51,838
directions which we know what it is and

1312
00:56:49,920 --> 00:56:54,720
then the walk tables used here so when

1313
00:56:51,838 --> 00:56:57,119
you look at how the walk table is used

1314
00:56:54,719 --> 00:56:59,279
um it's really just one thing that it

1315
00:56:57,119 --> 00:57:01,599
does right

1316
00:56:59,280 --> 00:57:01,599
um

1317
00:57:04,798 --> 00:57:08,880
it also looks like this was the code

1318
00:57:06,798 --> 00:57:10,798
that for stepping maybe before like we

1319
00:57:08,880 --> 00:57:14,720
had some code in here

1320
00:57:10,798 --> 00:57:14,719
for stepping that we don't use anymore

1321
00:57:14,960 --> 00:57:20,079
uh or something like that right like so

1322
00:57:16,960 --> 00:57:23,440
so we we previously right we're doing it

1323
00:57:20,079 --> 00:57:24,798
where we didn't use uh the grid

1324
00:57:23,440 --> 00:57:26,639
and

1325
00:57:24,798 --> 00:57:28,480
you know we we computed like a stepping

1326
00:57:26,639 --> 00:57:30,239
value uh that stepping value has

1327
00:57:28,480 --> 00:57:33,280
probably been removed now right but we

1328
00:57:30,239 --> 00:57:34,558
could you know we recompute it

1329
00:57:33,280 --> 00:57:37,200
and

1330
00:57:34,559 --> 00:57:40,720
yeah like looking at this code right you

1331
00:57:37,199 --> 00:57:43,118
can see that it was you know it had to

1332
00:57:40,719 --> 00:57:45,358
do a lot more work

1333
00:57:43,119 --> 00:57:47,280
because it was trying to do these wide

1334
00:57:45,358 --> 00:57:49,440
and all that which probably was pretty

1335
00:57:47,280 --> 00:57:51,280
tricky because then it has to load not

1336
00:57:49,440 --> 00:57:52,880
wide so it has to move it out of there

1337
00:57:51,280 --> 00:57:55,839
right

1338
00:57:52,880 --> 00:57:55,838
um

1339
00:58:04,480 --> 00:58:07,719
so yeah

1340
00:58:19,838 --> 00:58:22,558
so

1341
00:58:20,838 --> 00:58:25,519
maybe

1342
00:58:22,559 --> 00:58:26,559
uh maybe we just look at what this looks

1343
00:58:25,519 --> 00:58:30,880
like

1344
00:58:26,559 --> 00:58:30,880
without you know like if we were to

1345
00:58:31,599 --> 00:58:36,440
we've also kind of got this cost metric

1346
00:58:33,440 --> 00:58:36,440
here

1347
00:58:36,559 --> 00:58:40,240
uh which is how many tests we've

1348
00:58:38,239 --> 00:58:41,199
performed

1349
00:58:40,239 --> 00:58:43,439
i

1350
00:58:41,199 --> 00:58:43,439
and

1351
00:58:43,599 --> 00:58:49,280
i guess i again don't really know to

1352
00:58:46,239 --> 00:58:51,358
what extent we want that to really be a

1353
00:58:49,280 --> 00:58:52,240
thing either

1354
00:58:51,358 --> 00:58:54,558
um

1355
00:58:52,239 --> 00:58:56,798
so if we imagined like how we would be

1356
00:58:54,559 --> 00:58:58,000
remaking this routine

1357
00:58:56,798 --> 00:59:00,239
i

1358
00:58:58,000 --> 00:59:03,039
the exit on the cost

1359
00:59:00,239 --> 00:59:05,199
metric would would really probably not

1360
00:59:03,039 --> 00:59:06,880
happen probably what would happen is

1361
00:59:05,199 --> 00:59:09,039
we'd just do a loop and say look we're

1362
00:59:06,880 --> 00:59:12,240
going to check this many cells so every

1363
00:59:09,039 --> 00:59:14,400
raycast gets to check you know

1364
00:59:12,239 --> 00:59:16,558
six cells or something

1365
00:59:14,400 --> 00:59:18,960
and if you happen to terminate early

1366
00:59:16,559 --> 00:59:21,119
then fine like if you if you exit if you

1367
00:59:18,960 --> 00:59:22,159
leave the z layer

1368
00:59:21,119 --> 00:59:23,280
then

1369
00:59:22,159 --> 00:59:24,159
you know

1370
00:59:23,280 --> 00:59:26,400
fine

1371
00:59:24,159 --> 00:59:26,399
right

1372
00:59:27,679 --> 00:59:30,679
uh

1373
00:59:34,880 --> 00:59:41,200
so you know this this for loop would

1374
00:59:37,920 --> 00:59:42,639
probably just be more like a four you

1375
00:59:41,199 --> 00:59:45,118
know however many

1376
00:59:42,639 --> 00:59:47,679
the cost is so you know rather than the

1377
00:59:45,119 --> 00:59:50,160
solution max cost per ray

1378
00:59:47,679 --> 00:59:52,239
uh that would actually just be and and

1379
00:59:50,159 --> 00:59:54,159
we could do this like you know we could

1380
00:59:52,239 --> 00:59:55,919
do this sort of without actually you

1381
00:59:54,159 --> 00:59:58,239
know you know without actually removing

1382
00:59:55,920 --> 01:00:02,240
the walk table first we could simplify

1383
00:59:58,239 --> 01:00:04,959
this part down with the still running

1384
01:00:02,239 --> 01:00:05,838
version that we've got right now

1385
01:00:04,960 --> 01:00:08,000
um

1386
01:00:05,838 --> 01:00:09,838
you know uh not that we can really test

1387
01:00:08,000 --> 01:00:11,519
it because it's too buggy but you know

1388
01:00:09,838 --> 01:00:13,358
we can sort of say

1389
01:00:11,519 --> 01:00:17,119
all right if if we were in a place that

1390
01:00:13,358 --> 01:00:17,119
was relatively stable like this

1391
01:00:17,440 --> 01:00:21,119
and then i go in here and i say oh yeah

1392
01:00:20,159 --> 01:00:23,039
like

1393
01:00:21,119 --> 01:00:24,798
instead of this loop what we're gonna do

1394
01:00:23,039 --> 01:00:25,679
is like you know

1395
01:00:24,798 --> 01:00:26,880
grid

1396
01:00:25,679 --> 01:00:28,798
sample

1397
01:00:26,880 --> 01:00:30,720
index um

1398
01:00:28,798 --> 01:00:32,960
or grid walk index or something right

1399
01:00:30,719 --> 01:00:34,558
grid walk

1400
01:00:32,960 --> 01:00:37,920
iteration

1401
01:00:34,559 --> 01:00:39,119
uh and i just like hard bound that

1402
01:00:37,920 --> 01:00:42,159
and i say

1403
01:00:39,119 --> 01:00:44,960
look it has to be you know eight eight

1404
01:00:42,159 --> 01:00:47,039
grid squares is all you get

1405
01:00:44,960 --> 01:00:49,039
no matter what happens

1406
01:00:47,039 --> 01:00:50,239
um presumably the lighting doesn't

1407
01:00:49,039 --> 01:00:52,318
change much

1408
01:00:50,239 --> 01:00:54,479
right like presumably it's fine

1409
01:00:52,318 --> 01:00:56,079
um and you know basically looks the same

1410
01:00:54,480 --> 01:00:57,679
as before

1411
01:00:56,079 --> 01:01:00,880
and then if we just remove the cost

1412
01:00:57,679 --> 01:01:03,679
metric entirely so cost metric is gone

1413
01:01:00,880 --> 01:01:04,960
um like it just doesn't we just don't

1414
01:01:03,679 --> 01:01:06,558
have it

1415
01:01:04,960 --> 01:01:09,199
uh so

1416
01:01:06,559 --> 01:01:10,720
and all we do instead is check the you

1417
01:01:09,199 --> 01:01:14,239
know the spatial

1418
01:01:10,719 --> 01:01:14,239
grid node terminator thing

1419
01:01:14,960 --> 01:01:18,880
um in theory like we should be able to

1420
01:01:17,119 --> 01:01:21,119
just preserve the lighting as it is with

1421
01:01:18,880 --> 01:01:23,358
no cost metric because we just don't

1422
01:01:21,119 --> 01:01:24,559
really have that anymore right so so

1423
01:01:23,358 --> 01:01:26,400
we're fine

1424
01:01:24,559 --> 01:01:27,519
and there's you know same lighting

1425
01:01:26,400 --> 01:01:30,079
running

1426
01:01:27,519 --> 01:01:33,079
in the same way

1427
01:01:30,079 --> 01:01:33,079
so

1428
01:01:45,920 --> 01:01:50,480
so really the question now is like let's

1429
01:01:48,400 --> 01:01:53,200
suppose even with the walk table

1430
01:01:50,480 --> 01:01:54,960
involved if we wanted to exit what we

1431
01:01:53,199 --> 01:01:56,960
want to do is have an exit criteria that

1432
01:01:54,960 --> 01:01:58,960
just says that you're going to exit when

1433
01:01:56,960 --> 01:02:01,280
you leave

1434
01:01:58,960 --> 01:02:03,599
um

1435
01:02:01,280 --> 01:02:06,880
the spatial partition right and the way

1436
01:02:03,599 --> 01:02:08,170
that we did that before is we said well

1437
01:02:06,880 --> 01:02:09,599
whenever you hit the

1438
01:02:08,170 --> 01:02:11,280
[Music]

1439
01:02:09,599 --> 01:02:13,200
there's like an apron so that when you

1440
01:02:11,280 --> 01:02:16,400
sample that node

1441
01:02:13,199 --> 01:02:19,279
you can tell that it's got you know

1442
01:02:16,400 --> 01:02:21,838
it it's marked as you've left

1443
01:02:19,280 --> 01:02:21,839
right

1444
01:02:22,480 --> 01:02:27,440
that does seem sort of good

1445
01:02:25,199 --> 01:02:27,439
but

1446
01:02:29,119 --> 01:02:33,119
the problem is it doesn't really help us

1447
01:02:31,358 --> 01:02:35,838
with our z

1448
01:02:33,119 --> 01:02:35,838
part of things

1449
01:02:36,559 --> 01:02:41,039
so i don't really know like is that

1450
01:02:38,639 --> 01:02:42,879
actually the best way to do it like is

1451
01:02:41,039 --> 01:02:44,720
that actually the fastest way to do it

1452
01:02:42,880 --> 01:02:46,798
or is the faster way to do it to just

1453
01:02:44,719 --> 01:02:48,399
look to see

1454
01:02:46,798 --> 01:02:50,719
whether the grid

1455
01:02:48,400 --> 01:02:53,760
index

1456
01:02:50,719 --> 01:02:53,759
that we were using

1457
01:02:54,239 --> 01:02:58,078
you know because it's worth remembering

1458
01:02:56,159 --> 01:03:00,558
that now we could just keep two separate

1459
01:02:58,079 --> 01:03:02,798
grid indexes as well like it could be

1460
01:03:00,559 --> 01:03:04,000
that we can just use two

1461
01:03:02,798 --> 01:03:05,679
i don't know

1462
01:03:04,000 --> 01:03:08,400
um although you know maybe there's a

1463
01:03:05,679 --> 01:03:10,558
good reason not to do that

1464
01:03:08,400 --> 01:03:10,559
but

1465
01:03:12,480 --> 01:03:17,280
because it's not three-dimensional

1466
01:03:13,838 --> 01:03:19,920
anymore it opens up other possibilities

1467
01:03:17,280 --> 01:03:22,240
we could make it so that for example we

1468
01:03:19,920 --> 01:03:24,480
just say that you know the thing is 16

1469
01:03:22,239 --> 01:03:28,838
in one direction so the bottom four bits

1470
01:03:24,480 --> 01:03:28,838
or the x or you know stuff like that

1471
01:03:41,119 --> 01:03:44,559
so i don't know it could be that this is

1472
01:03:42,798 --> 01:03:46,480
still the smartest thing to do

1473
01:03:44,559 --> 01:03:48,240
but you need one more check which is to

1474
01:03:46,480 --> 01:03:50,079
see whether or not you've left the z

1475
01:03:48,239 --> 01:03:52,239
range and like that's broken right now

1476
01:03:50,079 --> 01:03:55,039
it's been broken since we simplified it

1477
01:03:52,239 --> 01:03:56,719
to not use z-stepping at all

1478
01:03:55,039 --> 01:03:58,640
so we know that that's currently wrong

1479
01:03:56,719 --> 01:04:00,719
and the question is just what's the best

1480
01:03:58,639 --> 01:04:02,798
way to fix it

1481
01:04:00,719 --> 01:04:03,679
and i don't know

1482
01:04:02,798 --> 01:04:06,400
so

1483
01:04:03,679 --> 01:04:10,000
in terms of that

1484
01:04:06,400 --> 01:04:11,760
uh yeah i just don't i just don't um

1485
01:04:10,000 --> 01:04:13,358
i just don't know

1486
01:04:11,760 --> 01:04:15,039
but

1487
01:04:13,358 --> 01:04:17,038
at this point we could just say well

1488
01:04:15,039 --> 01:04:19,119
okay that's gonna be sort of busted

1489
01:04:17,039 --> 01:04:20,319
anyway

1490
01:04:19,119 --> 01:04:22,798
let's

1491
01:04:20,318 --> 01:04:24,798
let's just focus on welding this code in

1492
01:04:22,798 --> 01:04:27,358
there so that we can do it without a

1493
01:04:24,798 --> 01:04:29,199
walk table

1494
01:04:27,358 --> 01:04:30,639
right

1495
01:04:29,199 --> 01:04:32,239
so if we were going to do it without a

1496
01:04:30,639 --> 01:04:33,358
walk table then we just do the reverse

1497
01:04:32,239 --> 01:04:35,279
process of what we did when we

1498
01:04:33,358 --> 01:04:39,279
introduced the walk table which is to

1499
01:04:35,280 --> 01:04:39,280
say that we know the starting location

1500
01:04:39,358 --> 01:04:42,719
because the starting you know within

1501
01:04:41,119 --> 01:04:44,960
within a cell

1502
01:04:42,719 --> 01:04:46,959
we know the starting location because

1503
01:04:44,960 --> 01:04:48,798
it's you know given to us by the

1504
01:04:46,960 --> 01:04:49,760
quadrant index

1505
01:04:48,798 --> 01:04:51,440
so

1506
01:04:49,760 --> 01:04:53,200
because we have to know the quadrant

1507
01:04:51,440 --> 01:04:56,079
index to begin with

1508
01:04:53,199 --> 01:04:57,038
uh and i you know i assume it's passing

1509
01:04:56,079 --> 01:04:59,119
yeah

1510
01:04:57,039 --> 01:04:59,920
we know the quadrant index so we kind of

1511
01:04:59,119 --> 01:05:01,760
know

1512
01:04:59,920 --> 01:05:02,798
how to

1513
01:05:01,760 --> 01:05:05,440
uh

1514
01:05:02,798 --> 01:05:05,440
set it up

1515
01:05:06,559 --> 01:05:09,798
if we

1516
01:05:17,199 --> 01:05:21,838
i you know i'm just trying to think if

1517
01:05:19,039 --> 01:05:23,039
we assume that we're just going to take

1518
01:05:21,838 --> 01:05:25,038
and

1519
01:05:23,039 --> 01:05:26,000
record this as a separate value that we

1520
01:05:25,039 --> 01:05:28,079
keep through i'm trying to think of

1521
01:05:26,000 --> 01:05:29,440
whether you want to go okay we're going

1522
01:05:28,079 --> 01:05:31,599
to raycast and we're stepping through

1523
01:05:29,440 --> 01:05:33,039
the grid and we just use one value to

1524
01:05:31,599 --> 01:05:34,880
step through the grid and we make

1525
01:05:33,039 --> 01:05:36,400
believe that like the origin moved each

1526
01:05:34,880 --> 01:05:38,079
time or are we doing something different

1527
01:05:36,400 --> 01:05:40,160
where we just store i think we probably

1528
01:05:38,079 --> 01:05:41,920
just store the differences and we track

1529
01:05:40,159 --> 01:05:44,159
the differences as they go

1530
01:05:41,920 --> 01:05:46,318
right um you know basically just the

1531
01:05:44,159 --> 01:05:47,519
standard kind of brush resin ham sort of

1532
01:05:46,318 --> 01:05:48,880
a

1533
01:05:47,519 --> 01:05:50,719
uh

1534
01:05:48,880 --> 01:05:52,798
whichever

1535
01:05:50,719 --> 01:05:54,318
whichever error would be larger kind of

1536
01:05:52,798 --> 01:05:56,559
a thing

1537
01:05:54,318 --> 01:05:56,558
right

1538
01:05:57,679 --> 01:06:01,159
so we check

1539
01:06:05,838 --> 01:06:12,558
we check the grid that we started in

1540
01:06:10,318 --> 01:06:12,558
we

1541
01:06:13,679 --> 01:06:16,679
like

1542
01:06:47,039 --> 01:06:51,920
so it occurs to me that the way that

1543
01:06:48,960 --> 01:06:54,480
we're doing this we currently do it

1544
01:06:51,920 --> 01:06:58,318
as an actual forward step

1545
01:06:54,480 --> 01:06:58,318
that's how the walk table was computed

1546
01:06:58,480 --> 01:07:03,760
what i'm wondering is

1547
01:07:01,440 --> 01:07:05,679
could we not do it in a way that was

1548
01:07:03,760 --> 01:07:10,000
actually a forward check

1549
01:07:05,679 --> 01:07:10,000
so we basically just look at moving

1550
01:07:10,400 --> 01:07:16,639
to the left or like like we look at

1551
01:07:13,119 --> 01:07:18,480
changing x by one or changing y by one

1552
01:07:16,639 --> 01:07:20,318
and we just see which one would be a

1553
01:07:18,480 --> 01:07:22,240
better choice

1554
01:07:20,318 --> 01:07:26,239
exactly like you would do with like a

1555
01:07:22,239 --> 01:07:27,358
bresenham algorithm right

1556
01:07:26,239 --> 01:07:29,759
and

1557
01:07:27,358 --> 01:07:32,798
my only question is that conservative

1558
01:07:29,760 --> 01:07:34,319
resin ham like i'm less familiar with

1559
01:07:32,798 --> 01:07:36,239
that

1560
01:07:34,318 --> 01:07:38,079
i don't really remember ever having

1561
01:07:36,239 --> 01:07:40,159
really implemented code like that before

1562
01:07:38,079 --> 01:07:42,160
so i'd have to maybe look to see what a

1563
01:07:40,159 --> 01:07:43,920
conservative breslin ham algorithm looks

1564
01:07:42,159 --> 01:07:46,399
like meaning one that fills all of the

1565
01:07:43,920 --> 01:07:48,480
squares that the line passes through and

1566
01:07:46,400 --> 01:07:50,480
not just

1567
01:07:48,480 --> 01:07:53,039
selects

1568
01:07:50,480 --> 01:07:56,440
like one that cannot move diagonally

1569
01:07:53,039 --> 01:07:56,440
and that

1570
01:07:57,838 --> 01:08:02,558
always picks the one the line actually

1571
01:08:00,000 --> 01:08:02,559
went through

1572
01:08:08,239 --> 01:08:13,038
i think that's probably what we should

1573
01:08:10,480 --> 01:08:13,039
be doing

1574
01:08:15,440 --> 01:08:19,119
i think probably the stepping version

1575
01:08:17,359 --> 01:08:22,759
we're doing here might just be over

1576
01:08:19,119 --> 01:08:22,759
complicated right

1577
01:08:24,719 --> 01:08:30,560
if we just tested the center of each

1578
01:08:26,798 --> 01:08:31,920
cell to see which one was closer to

1579
01:08:30,560 --> 01:08:34,400
the line

1580
01:08:31,920 --> 01:08:36,640
that just gives us the answer

1581
01:08:34,399 --> 01:08:39,838
which

1582
01:08:36,640 --> 01:08:39,838
should just work

1583
01:08:44,479 --> 01:08:49,439
you know what i mean

1584
01:08:46,238 --> 01:08:51,599
um so it feels like that would

1585
01:08:49,439 --> 01:08:53,519
be all you would really need and again

1586
01:08:51,600 --> 01:08:55,679
like the reason that i'm worried about

1587
01:08:53,520 --> 01:08:57,279
this from a tape you know if you look at

1588
01:08:55,679 --> 01:08:59,600
how the table driving works the reason

1589
01:08:57,279 --> 01:09:00,480
the table driving is nice is because

1590
01:08:59,600 --> 01:09:02,960
you

1591
01:09:00,479 --> 01:09:04,718
don't have to actually keep x and y

1592
01:09:02,960 --> 01:09:06,960
indices at all

1593
01:09:04,719 --> 01:09:09,439
you know what i mean so it definitely

1594
01:09:06,960 --> 01:09:10,880
introduces a fair amount of overhead

1595
01:09:09,439 --> 01:09:14,000
because

1596
01:09:10,880 --> 01:09:15,440
the actual x and y indices that we step

1597
01:09:14,000 --> 01:09:18,439
through

1598
01:09:15,439 --> 01:09:18,439
um

1599
01:09:22,798 --> 01:09:27,759
they now would have to be tracked

1600
01:09:25,679 --> 01:09:29,600
so you would have to have

1601
01:09:27,759 --> 01:09:33,158
right like a

1602
01:09:29,600 --> 01:09:33,159
this sort of a thing

1603
01:09:37,119 --> 01:09:40,880
uh whichever

1604
01:09:39,039 --> 01:09:42,880
cell you start in you would have this

1605
01:09:40,880 --> 01:09:46,719
and then in here you would need a thing

1606
01:09:42,880 --> 01:09:50,400
where you uh when when you load

1607
01:09:46,719 --> 01:09:52,399
the spatial index that you're in

1608
01:09:50,399 --> 01:09:54,399
you would have to

1609
01:09:52,399 --> 01:09:57,198
uh you would have to build the grid

1610
01:09:54,399 --> 01:09:58,399
index from those two values which costs

1611
01:09:57,198 --> 01:10:00,399
you something

1612
01:09:58,399 --> 01:10:02,639
and then to know which one that you

1613
01:10:00,399 --> 01:10:05,198
you moved to you would have to do

1614
01:10:02,640 --> 01:10:07,840
the actual math you'd have to say

1615
01:10:05,198 --> 01:10:09,198
look okay i know that the two options

1616
01:10:07,840 --> 01:10:10,159
that i have

1617
01:10:09,198 --> 01:10:12,479
are

1618
01:10:10,158 --> 01:10:12,479
right

1619
01:10:15,600 --> 01:10:17,600
um

1620
01:10:16,560 --> 01:10:18,560
look like

1621
01:10:17,600 --> 01:10:21,039
that

1622
01:10:18,560 --> 01:10:23,840
they probably have to be

1623
01:10:21,039 --> 01:10:24,960
again like they probably sort of have to

1624
01:10:23,840 --> 01:10:26,640
be in

1625
01:10:24,960 --> 01:10:28,719
float

1626
01:10:26,640 --> 01:10:33,000
like

1627
01:10:28,719 --> 01:10:33,000
you would still also have

1628
01:10:44,079 --> 01:10:47,439
you'd probably have at least this many

1629
01:10:45,760 --> 01:10:48,880
things uh and i'm trying to think of

1630
01:10:47,439 --> 01:10:50,879
like you know they could they could

1631
01:10:48,880 --> 01:10:53,199
probably be

1632
01:10:50,880 --> 01:10:55,359
packed so f cell x and so y could

1633
01:10:53,198 --> 01:10:57,599
probably be together

1634
01:10:55,359 --> 01:10:59,119
but you'd have this problem of you'd

1635
01:10:57,600 --> 01:11:00,719
have to then you'd have to do the

1636
01:10:59,119 --> 01:11:03,760
computation

1637
01:11:00,719 --> 01:11:05,359
where you actually check to see

1638
01:11:03,760 --> 01:11:06,560
whether or not

1639
01:11:05,359 --> 01:11:08,000
you are

1640
01:11:06,560 --> 01:11:10,320
you know

1641
01:11:08,000 --> 01:11:10,319
um

1642
01:11:10,800 --> 01:11:16,159
whether or not cell x plus d cell x or

1643
01:11:14,079 --> 01:11:18,719
cell y plus d cell y

1644
01:11:16,158 --> 01:11:22,079
produces a closer

1645
01:11:18,719 --> 01:11:22,079
uh match for your line

1646
01:11:24,079 --> 01:11:27,840
and so i'm just a little conflicted

1647
01:11:25,439 --> 01:11:29,439
because i'm like can i get that down to

1648
01:11:27,840 --> 01:11:32,000
be small enough

1649
01:11:29,439 --> 01:11:34,399
that it's going to be as fast as or at

1650
01:11:32,000 --> 01:11:36,960
least comparable to the speed at which

1651
01:11:34,399 --> 01:11:39,198
you can do it from the table

1652
01:11:36,960 --> 01:11:43,520
you know what i'm saying

1653
01:11:39,198 --> 01:11:45,279
um so i think that's really the part

1654
01:11:43,520 --> 01:11:47,120
that's

1655
01:11:45,279 --> 01:11:49,198
that's troubling me

1656
01:11:47,119 --> 01:11:50,800
so like how fast could you realistically

1657
01:11:49,198 --> 01:11:55,799
make that check

1658
01:11:50,800 --> 01:11:55,800
uh because you have to do something like

1659
01:12:12,399 --> 01:12:17,039
you've got this stuff

1660
01:12:15,039 --> 01:12:19,359
and you

1661
01:12:17,039 --> 01:12:21,439
you want to compute the

1662
01:12:19,359 --> 01:12:23,839
which one of these is going to be better

1663
01:12:21,439 --> 01:12:24,639
so you have some like line equation

1664
01:12:23,840 --> 01:12:26,719
right

1665
01:12:24,640 --> 01:12:27,920
that we would have to determine what it

1666
01:12:26,719 --> 01:12:29,119
actually is

1667
01:12:27,920 --> 01:12:30,640
uh for

1668
01:12:29,119 --> 01:12:32,399
this ray so it's the you know it's the

1669
01:12:30,640 --> 01:12:34,880
it's going to be the ray

1670
01:12:32,399 --> 01:12:36,559
uh and you see how far you are from the

1671
01:12:34,880 --> 01:12:38,880
ray or something like that right

1672
01:12:36,560 --> 01:12:43,760
and you're going to have to compute

1673
01:12:38,880 --> 01:12:43,760
f cell x plus fd cell x

1674
01:12:44,560 --> 01:12:47,280
f cell y

1675
01:12:47,679 --> 01:12:52,399
um and then the opposite of that so

1676
01:12:54,000 --> 01:12:58,880
so you're gonna have to compute like

1677
01:12:56,479 --> 01:13:00,959
for these two which one of them will be

1678
01:12:58,880 --> 01:13:03,679
less error like will it be less error to

1679
01:13:00,960 --> 01:13:05,760
go to the this one or that one

1680
01:13:03,679 --> 01:13:08,158
now probably

1681
01:13:05,760 --> 01:13:10,079
we can see we'll ex we'd expand these

1682
01:13:08,158 --> 01:13:12,000
two line equations out this is again

1683
01:13:10,079 --> 01:13:13,119
just standardly what you do with breslin

1684
01:13:12,000 --> 01:13:15,198
ham right

1685
01:13:13,119 --> 01:13:17,119
we would expand these two line equations

1686
01:13:15,198 --> 01:13:18,719
out and see what the actual different

1687
01:13:17,119 --> 01:13:20,559
factor is between them and then we just

1688
01:13:18,719 --> 01:13:22,480
compare those two factors and that's

1689
01:13:20,560 --> 01:13:24,480
which direction we step

1690
01:13:22,479 --> 01:13:27,678
so i suppose we probably have to write

1691
01:13:24,479 --> 01:13:30,238
that out so if you look at the ray

1692
01:13:27,679 --> 01:13:30,239
direction

1693
01:13:30,960 --> 01:13:33,840
um

1694
01:13:34,960 --> 01:13:39,319
the ray is already normalized

1695
01:13:59,119 --> 01:14:03,599
so i think i'm just gonna have to write

1696
01:14:00,880 --> 01:14:05,199
this out equation wise right so if you

1697
01:14:03,600 --> 01:14:08,159
think about

1698
01:14:05,198 --> 01:14:11,519
these two in space

1699
01:14:08,158 --> 01:14:11,519
you have a

1700
01:14:12,560 --> 01:14:18,000
so you have a v3

1701
01:14:14,960 --> 01:14:19,840
and that's got you know one v3 is equal

1702
01:14:18,000 --> 01:14:20,719
to

1703
01:14:19,840 --> 01:14:23,119
this

1704
01:14:20,719 --> 01:14:24,319
and i guess you know technically it's a

1705
01:14:23,119 --> 01:14:26,158
v2

1706
01:14:24,319 --> 01:14:27,920
but we can think of it as a v3 for now

1707
01:14:26,158 --> 01:14:31,039
that just we then don't care what

1708
01:14:27,920 --> 01:14:33,279
happens to the x component right

1709
01:14:31,039 --> 01:14:34,560
um so we have a v3

1710
01:14:33,279 --> 01:14:38,000
which is like

1711
01:14:34,560 --> 01:14:39,520
you know the current cell location so i

1712
01:14:38,000 --> 01:14:40,560
i might just say this is the current

1713
01:14:39,520 --> 01:14:43,120
cell p

1714
01:14:40,560 --> 01:14:45,679
plus one step

1715
01:14:43,119 --> 01:14:45,679
in x

1716
01:14:49,439 --> 01:14:54,559
and this is basically just it's either

1717
01:14:52,079 --> 01:14:55,840
positive or negative

1718
01:14:54,560 --> 01:14:58,000
uh

1719
01:14:55,840 --> 01:15:01,039
it's it's either one

1720
01:14:58,000 --> 01:15:03,359
entire voxel distance

1721
01:15:01,039 --> 01:15:04,800
in the x coordinate positively or

1722
01:15:03,359 --> 01:15:07,439
negatively

1723
01:15:04,800 --> 01:15:09,520
this is where we would end up right

1724
01:15:07,439 --> 01:15:12,000
the y step p

1725
01:15:09,520 --> 01:15:13,600
is going to be the same thing but for y

1726
01:15:12,000 --> 01:15:15,679
and we only have to consider one of

1727
01:15:13,600 --> 01:15:17,920
these because every ray

1728
01:15:15,679 --> 01:15:18,880
will either be

1729
01:15:17,920 --> 01:15:21,520
one

1730
01:15:18,880 --> 01:15:24,800
negative one or zero on each of these

1731
01:15:21,520 --> 01:15:28,000
right it's it's it's stepping either

1732
01:15:24,800 --> 01:15:29,840
one voxel in that axis forwards

1733
01:15:28,000 --> 01:15:31,359
backwards or none

1734
01:15:29,840 --> 01:15:32,719
but it can't do anything else because

1735
01:15:31,359 --> 01:15:34,158
there's that's all you know every time

1736
01:15:32,719 --> 01:15:35,359
you move one grid square we never hop

1737
01:15:34,158 --> 01:15:36,479
there's no such thing as a ray that can

1738
01:15:35,359 --> 01:15:39,198
hop across

1739
01:15:36,479 --> 01:15:41,279
right

1740
01:15:39,198 --> 01:15:43,439
so if we take those two

1741
01:15:41,279 --> 01:15:45,519
right then the next step would be we

1742
01:15:43,439 --> 01:15:49,439
would say okay the

1743
01:15:45,520 --> 01:15:51,840
the the difference like the the delta

1744
01:15:49,439 --> 01:15:55,519
um between those two

1745
01:15:51,840 --> 01:15:58,400
is going you know from the raise origin

1746
01:15:55,520 --> 01:15:59,199
is going to be like uh like

1747
01:15:58,399 --> 01:16:00,158
you know

1748
01:15:59,198 --> 01:16:02,719
these two

1749
01:16:00,158 --> 01:16:07,238
both would have a local version

1750
01:16:02,719 --> 01:16:07,239
that's whatever they were

1751
01:16:11,840 --> 01:16:14,960
minus the array origin

1752
01:16:15,840 --> 01:16:19,679
and you can already see that

1753
01:16:17,840 --> 01:16:22,719
we could we will be able to simplify

1754
01:16:19,679 --> 01:16:24,880
that completely by just pre-subtracting

1755
01:16:22,719 --> 01:16:27,679
whatever the curse lp is

1756
01:16:24,880 --> 01:16:28,480
pre-subtracting the ray origin from it

1757
01:16:27,679 --> 01:16:30,480
right

1758
01:16:28,479 --> 01:16:32,238
so we won't have to pay this cost at all

1759
01:16:30,479 --> 01:16:33,678
you can already see it ahead of time

1760
01:16:32,238 --> 01:16:36,479
because it's just a constant that's

1761
01:16:33,679 --> 01:16:40,319
always subtracted so that'll be free

1762
01:16:36,479 --> 01:16:40,319
this this part will be free

1763
01:16:46,158 --> 01:16:50,158
and once we know where these are

1764
01:16:48,000 --> 01:16:53,840
relative to the ray origin then we just

1765
01:16:50,158 --> 01:16:53,839
have the question well okay

1766
01:16:54,079 --> 01:16:58,079
how far away are these

1767
01:16:57,039 --> 01:17:00,079
from

1768
01:16:58,079 --> 01:17:04,399
the ray

1769
01:17:00,079 --> 01:17:04,399
like which one is closer to the ray

1770
01:17:06,560 --> 01:17:11,679
now the simplest answer here

1771
01:17:10,319 --> 01:17:13,198
would be

1772
01:17:11,679 --> 01:17:15,920
that you know

1773
01:17:13,198 --> 01:17:18,479
the like in terms of like thought the

1774
01:17:15,920 --> 01:17:21,199
ease the simplest answer for thought

1775
01:17:18,479 --> 01:17:21,198
wise right

1776
01:17:21,600 --> 01:17:27,199
is the cross product between the ray

1777
01:17:24,640 --> 01:17:27,199
direction

1778
01:17:27,359 --> 01:17:33,359
uh and one of these

1779
01:17:31,359 --> 01:17:35,920
uh so if you just if you just took the

1780
01:17:33,359 --> 01:17:39,439
cross product between the two of them

1781
01:17:35,920 --> 01:17:40,239
then you know that the length of that

1782
01:17:39,439 --> 01:17:42,479
so

1783
01:17:40,238 --> 01:17:45,839
you know whatever the length is of this

1784
01:17:42,479 --> 01:17:45,839
of the cross product between them

1785
01:17:46,640 --> 01:17:51,440
um the length of that is going to be

1786
01:17:49,840 --> 01:17:55,279
equal to

1787
01:17:51,439 --> 01:17:55,279
uh the length of

1788
01:17:55,439 --> 01:17:59,919
the ray direction

1789
01:17:58,000 --> 01:18:02,238
which is one

1790
01:17:59,920 --> 01:18:03,679
times the length of the local x step p

1791
01:18:02,238 --> 01:18:04,879
whatever this is

1792
01:18:03,679 --> 01:18:07,199
right

1793
01:18:04,880 --> 01:18:08,400
times the sine of the angle between

1794
01:18:07,198 --> 01:18:10,000
those two

1795
01:18:08,399 --> 01:18:11,599
that's just the definition of the cross

1796
01:18:10,000 --> 01:18:13,039
product you know i'm sure we've covered

1797
01:18:11,600 --> 01:18:15,280
that on hammond here at some point way

1798
01:18:13,039 --> 01:18:16,238
in the past

1799
01:18:15,279 --> 01:18:17,519
um

1800
01:18:16,238 --> 01:18:19,678
so we know the length of the ray

1801
01:18:17,520 --> 01:18:21,760
direction is one

1802
01:18:19,679 --> 01:18:24,800
so we know that this

1803
01:18:21,760 --> 01:18:26,960
comparison here is just the local x step

1804
01:18:24,800 --> 01:18:28,400
whatever that is times the sine of the

1805
01:18:26,960 --> 01:18:30,000
angle

1806
01:18:28,399 --> 01:18:33,198
which i believe

1807
01:18:30,000 --> 01:18:36,158
would literally just leave us with

1808
01:18:33,198 --> 01:18:38,079
the the answer we wanted right meaning

1809
01:18:36,158 --> 01:18:41,519
the cross product between these two

1810
01:18:38,079 --> 01:18:44,559
actually tells us how far away from the

1811
01:18:41,520 --> 01:18:44,560
ray you are

1812
01:18:44,719 --> 01:18:49,520
right because

1813
01:18:45,920 --> 01:18:51,920
this is the hypotenuse of a triangle

1814
01:18:49,520 --> 01:18:53,360
and this sign

1815
01:18:51,920 --> 01:18:55,840
so you know you're basically just

1816
01:18:53,359 --> 01:18:58,158
constructing the leg that projects you

1817
01:18:55,840 --> 01:19:01,520
onto the third leg of the triangle which

1818
01:18:58,158 --> 01:19:03,039
was that part we removed

1819
01:19:01,520 --> 01:19:06,239
right

1820
01:19:03,039 --> 01:19:08,880
um now we are only comparing these

1821
01:19:06,238 --> 01:19:10,718
so we actually don't need the length we

1822
01:19:08,880 --> 01:19:13,520
could just continue do the length

1823
01:19:10,719 --> 01:19:14,640
squared which would be much simpler

1824
01:19:13,520 --> 01:19:16,320
right

1825
01:19:14,640 --> 01:19:18,239
because we're just going to compare two

1826
01:19:16,319 --> 01:19:20,000
of them together to see which one is

1827
01:19:18,238 --> 01:19:22,639
larger

1828
01:19:20,000 --> 01:19:25,920
and further more we know that we don't

1829
01:19:22,640 --> 01:19:28,800
care what the distance is in z

1830
01:19:25,920 --> 01:19:31,520
because we're only stepping on a 2d grid

1831
01:19:28,800 --> 01:19:32,960
so the cross product actually would only

1832
01:19:31,520 --> 01:19:36,880
have

1833
01:19:32,960 --> 01:19:39,920
um the other components to it right it's

1834
01:19:36,880 --> 01:19:40,880
really a perp dot product

1835
01:19:39,920 --> 01:19:43,679
which is

1836
01:19:40,880 --> 01:19:45,600
much simpler than the full cross product

1837
01:19:43,679 --> 01:19:48,840
it's you know

1838
01:19:45,600 --> 01:19:51,760
um two by two instead of three by three

1839
01:19:48,840 --> 01:19:53,360
right so i think we're literally just

1840
01:19:51,760 --> 01:19:55,440
comparing these

1841
01:19:53,359 --> 01:19:56,479
um and if you look

1842
01:19:55,439 --> 01:19:58,399
at

1843
01:19:56,479 --> 01:20:01,759
like the you know do we don't have a

1844
01:19:58,399 --> 01:20:03,679
prep dot product we just have perp um

1845
01:20:01,760 --> 01:20:05,440
and then inner

1846
01:20:03,679 --> 01:20:08,639
but

1847
01:20:05,439 --> 01:20:09,759
it's it's the same thing right so if we

1848
01:20:08,639 --> 01:20:12,319
wanted to

1849
01:20:09,760 --> 01:20:13,280
measure this distance we could just take

1850
01:20:12,319 --> 01:20:16,079
perp

1851
01:20:13,279 --> 01:20:19,039
of the v2 version of these

1852
01:20:16,079 --> 01:20:21,439
and go from there so let's suppose we

1853
01:20:19,039 --> 01:20:23,119
did that so first of all like i said we

1854
01:20:21,439 --> 01:20:25,198
get one reduction for free which is

1855
01:20:23,119 --> 01:20:27,359
these are all technically v2s because

1856
01:20:25,198 --> 01:20:29,919
we're not stepping in z we literally

1857
01:20:27,359 --> 01:20:32,639
don't care what happens to z at all the

1858
01:20:29,920 --> 01:20:34,158
only question is do we ever end up

1859
01:20:32,639 --> 01:20:36,400
stepping somewhere

1860
01:20:34,158 --> 01:20:38,559
where the z is

1861
01:20:36,399 --> 01:20:40,000
where we've left the

1862
01:20:38,560 --> 01:20:42,960
cube entirely

1863
01:20:40,000 --> 01:20:44,880
and how we track that i just am not sure

1864
01:20:42,960 --> 01:20:47,119
like there's gonna have to be something

1865
01:20:44,880 --> 01:20:49,679
that checks that that is as fast as we

1866
01:20:47,119 --> 01:20:51,840
can make it where we just see if like

1867
01:20:49,679 --> 01:20:54,158
the t value probably what we do is at

1868
01:20:51,840 --> 01:20:56,319
the beginning we figure out what the t

1869
01:20:54,158 --> 01:20:58,238
step is that gets you from where you are

1870
01:20:56,319 --> 01:20:59,359
to outside the grid and we just check to

1871
01:20:58,238 --> 01:21:01,279
see

1872
01:20:59,359 --> 01:21:04,319
whether we have

1873
01:21:01,279 --> 01:21:05,920
gone past that t value

1874
01:21:04,319 --> 01:21:07,279
maybe

1875
01:21:05,920 --> 01:21:08,239
right

1876
01:21:07,279 --> 01:21:10,000
maybe

1877
01:21:08,238 --> 01:21:12,319
i don't really know

1878
01:21:10,000 --> 01:21:12,319
um

1879
01:21:13,600 --> 01:21:18,800
so we don't care about this part we just

1880
01:21:16,319 --> 01:21:21,119
care about this and honestly this can

1881
01:21:18,800 --> 01:21:23,920
just not we don't really need to use

1882
01:21:21,119 --> 01:21:26,719
this because since we are not in 3d we

1883
01:21:23,920 --> 01:21:27,600
can really just use the inner product

1884
01:21:26,719 --> 01:21:29,679
um

1885
01:21:27,600 --> 01:21:30,960
like so so we just do

1886
01:21:29,679 --> 01:21:33,359
the perp

1887
01:21:30,960 --> 01:21:34,239
uh dot product

1888
01:21:33,359 --> 01:21:36,880
and

1889
01:21:34,238 --> 01:21:38,399
the perp dot product between the rate

1890
01:21:36,880 --> 01:21:40,880
direction

1891
01:21:38,399 --> 01:21:42,960
uh and whichever one of these we're

1892
01:21:40,880 --> 01:21:45,679
looking at like so

1893
01:21:42,960 --> 01:21:47,119
that will give us the distance

1894
01:21:45,679 --> 01:21:49,679
projection

1895
01:21:47,119 --> 01:21:52,000
exactly

1896
01:21:49,679 --> 01:21:52,000
right

1897
01:21:52,880 --> 01:21:55,880
um

1898
01:21:56,800 --> 01:22:02,560
like that's just

1899
01:21:58,479 --> 01:22:02,559
literally the distance period

1900
01:22:04,238 --> 01:22:09,519
you don't really need to square it or

1901
01:22:05,840 --> 01:22:11,679
anything right it just it just is

1902
01:22:09,520 --> 01:22:14,239
that's just the end of the story

1903
01:22:11,679 --> 01:22:16,480
so you get the exact distance from the

1904
01:22:14,238 --> 01:22:18,638
ray to the cell center just with

1905
01:22:16,479 --> 01:22:20,399
interpret that's it

1906
01:22:18,639 --> 01:22:21,920
so what you're looking at is you're

1907
01:22:20,399 --> 01:22:25,839
looking at the difference between the

1908
01:22:21,920 --> 01:22:25,840
inner perp of each of these

1909
01:22:26,079 --> 01:22:30,719
and you're just gonna do something like

1910
01:22:28,399 --> 01:22:30,719
this

1911
01:22:34,238 --> 01:22:37,439
uh you know what i'm saying

1912
01:22:36,479 --> 01:22:41,359
now

1913
01:22:37,439 --> 01:22:43,279
you may have to like absolute value this

1914
01:22:41,359 --> 01:22:45,279
i have to think about this for a second

1915
01:22:43,279 --> 01:22:48,158
because the perp of the ray direction we

1916
01:22:45,279 --> 01:22:50,880
don't care whether it's which side of

1917
01:22:48,158 --> 01:22:51,679
the ray you're on

1918
01:22:50,880 --> 01:22:55,440
so

1919
01:22:51,679 --> 01:22:57,119
this is going to have to do in an abs

1920
01:22:55,439 --> 01:22:59,519
right like it's it's going to be like

1921
01:22:57,119 --> 01:22:59,519
this

1922
01:23:00,319 --> 01:23:02,559
um

1923
01:23:02,960 --> 01:23:07,520
and we could choose to square it like so

1924
01:23:05,359 --> 01:23:08,960
we we do kind of have to square it in

1925
01:23:07,520 --> 01:23:10,639
the sense that we have to do something

1926
01:23:08,960 --> 01:23:12,960
that removes the sign but it doesn't

1927
01:23:10,639 --> 01:23:16,719
actually have to be squared it can just

1928
01:23:12,960 --> 01:23:16,719
be abs if we want

1929
01:23:17,279 --> 01:23:20,639
uh but fundamentally what we're looking

1930
01:23:18,880 --> 01:23:22,800
at is that we're going to look at the

1931
01:23:20,639 --> 01:23:24,719
absolute value of the inner product of

1932
01:23:22,800 --> 01:23:26,639
the perp right

1933
01:23:24,719 --> 01:23:28,399
perp is free it does it's not actually

1934
01:23:26,639 --> 01:23:29,760
even an operation it's just going to

1935
01:23:28,399 --> 01:23:30,960
change how you're computing the inner

1936
01:23:29,760 --> 01:23:33,280
product

1937
01:23:30,960 --> 01:23:35,520
uh in this case

1938
01:23:33,279 --> 01:23:37,359
so the inner product as we know like if

1939
01:23:35,520 --> 01:23:39,760
we look at what one of these actually

1940
01:23:37,359 --> 01:23:43,759
equals so the inner product here as we

1941
01:23:39,760 --> 01:23:43,760
know is just going to be

1942
01:23:44,000 --> 01:23:48,479
um

1943
01:23:44,960 --> 01:23:51,920
the components multiplied by each other

1944
01:23:48,479 --> 01:23:54,638
and the perp is negative a y ax right so

1945
01:23:51,920 --> 01:23:56,319
the perp don't ask me why we

1946
01:23:54,639 --> 01:23:58,639
parenthesized that the way we did it's

1947
01:23:56,319 --> 01:24:00,479
totally not

1948
01:23:58,639 --> 01:24:04,400
correct

1949
01:24:00,479 --> 01:24:05,839
perp is just just on the right direction

1950
01:24:04,399 --> 01:24:08,238
um

1951
01:24:05,840 --> 01:24:09,920
so the ray direction in this case we're

1952
01:24:08,238 --> 01:24:12,079
actually doing an inner product not

1953
01:24:09,920 --> 01:24:14,560
quite with ray direction but rather with

1954
01:24:12,079 --> 01:24:15,679
negative ray direction y ray direction

1955
01:24:14,560 --> 01:24:17,920
dot x

1956
01:24:15,679 --> 01:24:19,679
right that's the actual

1957
01:24:17,920 --> 01:24:21,760
that's the actual

1958
01:24:19,679 --> 01:24:24,158
vector that we're using here and then

1959
01:24:21,760 --> 01:24:26,400
local step x which you know the one that

1960
01:24:24,158 --> 01:24:28,719
we're producing here

1961
01:24:26,399 --> 01:24:30,559
like so

1962
01:24:28,719 --> 01:24:32,719
right is we're doing an inner product

1963
01:24:30,560 --> 01:24:36,239
between those two things

1964
01:24:32,719 --> 01:24:36,239
so we actually have

1965
01:24:37,600 --> 01:24:42,639
something that looks like this as the

1966
01:24:39,439 --> 01:24:46,000
two quantities that we would need uh to

1967
01:24:42,639 --> 01:24:47,760
compute in this case

1968
01:24:46,000 --> 01:24:51,439
uh and we're gonna compare the absolute

1969
01:24:47,760 --> 01:24:51,440
values of those two things

1970
01:24:52,560 --> 01:24:56,080
now looking at this it's worth noting

1971
01:24:54,158 --> 01:24:57,279
that local step x

1972
01:24:56,079 --> 01:24:59,840
i

1973
01:24:57,279 --> 01:24:59,840
in this case

1974
01:25:01,359 --> 01:25:06,479
is the current cell p plus the d cell x

1975
01:25:11,198 --> 01:25:14,719
i don't know if that can be simplified a

1976
01:25:13,039 --> 01:25:18,079
little bit by saying well we're just

1977
01:25:14,719 --> 01:25:21,039
tracking you know as we step

1978
01:25:18,079 --> 01:25:22,639
we're just tracking differences here so

1979
01:25:21,039 --> 01:25:23,920
i'm not sure if there's something that

1980
01:25:22,639 --> 01:25:24,840
can be done there to simplify that a

1981
01:25:23,920 --> 01:25:28,239
little bit

1982
01:25:24,840 --> 01:25:30,560
but um if we do this so so i don't know

1983
01:25:28,238 --> 01:25:32,238
if that's like what we want i'd have to

1984
01:25:30,560 --> 01:25:34,000
think about that a little bit more

1985
01:25:32,238 --> 01:25:36,399
but if we look at what these boil down

1986
01:25:34,000 --> 01:25:38,639
to uh it's actually very simple right

1987
01:25:36,399 --> 01:25:41,799
it's just going to be

1988
01:25:38,639 --> 01:25:41,800
the following

1989
01:25:48,880 --> 01:25:53,600
so in terms of what we're actually

1990
01:25:50,719 --> 01:25:58,639
computing on one side if we wanted to

1991
01:25:53,600 --> 01:25:58,639
take the local step x this is the x step

1992
01:26:00,880 --> 01:26:03,679
the y step

1993
01:26:05,520 --> 01:26:09,840
is the same thing but you know it's

1994
01:26:08,079 --> 01:26:10,800
literally just multiplying a different

1995
01:26:09,840 --> 01:26:13,039
value

1996
01:26:10,800 --> 01:26:13,039
right

1997
01:26:15,520 --> 01:26:19,040
so what you can see here is that as we

1998
01:26:17,520 --> 01:26:20,960
work this through it gets down to

1999
01:26:19,039 --> 01:26:22,560
something very straightforward we're

2000
01:26:20,960 --> 01:26:25,439
literally just computing the difference

2001
01:26:22,560 --> 01:26:26,880
between these two values

2002
01:26:25,439 --> 01:26:29,839
um

2003
01:26:26,880 --> 01:26:33,119
sorry comparing these two values

2004
01:26:29,840 --> 01:26:36,119
and they do have to be like absolute

2005
01:26:33,119 --> 01:26:36,119
valued

2006
01:26:42,319 --> 01:26:45,198
you know like so

2007
01:26:44,319 --> 01:26:48,479
um

2008
01:26:45,198 --> 01:26:50,079
but otherwise they are

2009
01:26:48,479 --> 01:26:53,919
trivial to compute it's like two

2010
01:26:50,079 --> 01:26:55,519
multiplies two adds kind of a thing

2011
01:26:53,920 --> 01:26:57,039
right

2012
01:26:55,520 --> 01:26:59,760
so we're just doing two multipliers and

2013
01:26:57,039 --> 01:27:02,560
two ads uh and then you know arguably

2014
01:26:59,760 --> 01:27:04,159
we've got one more ad in here although

2015
01:27:02,560 --> 01:27:05,840
we should probably like actually

2016
01:27:04,158 --> 01:27:08,238
substitute these in and see what that

2017
01:27:05,840 --> 01:27:10,639
ends up being first

2018
01:27:08,238 --> 01:27:13,279
uh because maybe that turns out to

2019
01:27:10,639 --> 01:27:15,119
actually just get get taken out of the

2020
01:27:13,279 --> 01:27:17,679
equation right so let's

2021
01:27:15,119 --> 01:27:20,079
let's try this one more time let's take

2022
01:27:17,679 --> 01:27:24,480
a look at um oh and you can see why the

2023
01:27:20,079 --> 01:27:24,479
ray origin gets factored out right

2024
01:27:24,560 --> 01:27:29,760
so if we were to plug in let's let's do

2025
01:27:26,719 --> 01:27:33,439
one step of plugging in here if loop

2026
01:27:29,760 --> 01:27:35,520
local step x has the minus ray origin

2027
01:27:33,439 --> 01:27:37,678
uh built into it right then what you

2028
01:27:35,520 --> 01:27:40,159
would have here is these

2029
01:27:37,679 --> 01:27:42,880
these x's

2030
01:27:40,158 --> 01:27:46,519
are now gonna be like two

2031
01:27:42,880 --> 01:27:46,520
x's right

2032
01:27:55,119 --> 01:27:59,279
um so each one of these will have like

2033
01:27:57,119 --> 01:28:01,198
array origin x built into it that's

2034
01:27:59,279 --> 01:28:03,198
getting subtracted out

2035
01:28:01,198 --> 01:28:05,919
and both of these will have a y that's

2036
01:28:03,198 --> 01:28:08,638
getting subtracted out right

2037
01:28:05,920 --> 01:28:11,279
but what you can see here hopefully is

2038
01:28:08,639 --> 01:28:13,520
that that doesn't actually change

2039
01:28:11,279 --> 01:28:16,719
depending on which equation you're in

2040
01:28:13,520 --> 01:28:17,840
so if i distribute these multiplications

2041
01:28:16,719 --> 01:28:19,600
out

2042
01:28:17,840 --> 01:28:22,480
all that's going to happen is i'm going

2043
01:28:19,600 --> 01:28:26,159
to be left with a subtraction

2044
01:28:22,479 --> 01:28:27,198
that is constant between the two things

2045
01:28:26,158 --> 01:28:30,000
like

2046
01:28:27,198 --> 01:28:33,039
when we multiply this out

2047
01:28:30,000 --> 01:28:33,039
we're just gonna get

2048
01:28:33,840 --> 01:28:38,719
these two terms again

2049
01:28:36,319 --> 01:28:41,359
and then we're gonna have out here

2050
01:28:38,719 --> 01:28:44,158
on as a separate thing we're going to

2051
01:28:41,359 --> 01:28:46,000
have the ray origin right

2052
01:28:44,158 --> 01:28:48,960
multiplied

2053
01:28:46,000 --> 01:28:48,960
if that makes sense

2054
01:28:49,119 --> 01:28:52,479
right we're going to have the ray origin

2055
01:28:51,039 --> 01:28:54,800
x

2056
01:28:52,479 --> 01:28:56,959
times i'm sorry the ray direction x

2057
01:28:54,800 --> 01:28:58,560
times the ray origin x

2058
01:28:56,960 --> 01:29:01,359
um

2059
01:28:58,560 --> 01:29:04,560
and the right it's it's it's just it's

2060
01:29:01,359 --> 01:29:06,479
it just gets purely factored out because

2061
01:29:04,560 --> 01:29:07,600
all it's doing

2062
01:29:06,479 --> 01:29:09,359
is

2063
01:29:07,600 --> 01:29:11,120
providing a constant

2064
01:29:09,359 --> 01:29:12,960
that doesn't actually get that doesn't

2065
01:29:11,119 --> 01:29:15,679
actually change

2066
01:29:12,960 --> 01:29:15,679
the result there

2067
01:29:19,920 --> 01:29:23,520
and again that's exactly what we would

2068
01:29:21,439 --> 01:29:24,399
expect

2069
01:29:23,520 --> 01:29:25,440
because

2070
01:29:24,399 --> 01:29:27,439
really

2071
01:29:25,439 --> 01:29:29,759
you would just factor it this way

2072
01:29:27,439 --> 01:29:33,039
even if that wasn't true somehow we

2073
01:29:29,760 --> 01:29:33,039
would just factor it this way

2074
01:29:33,760 --> 01:29:40,239
where we just start with curse lp

2075
01:29:38,319 --> 01:29:42,399
right

2076
01:29:40,238 --> 01:29:44,399
um

2077
01:29:42,399 --> 01:29:46,799
so we kind of know that that's just

2078
01:29:44,399 --> 01:29:49,279
possible

2079
01:29:46,800 --> 01:29:52,320
uh for us to get rid of we know that

2080
01:29:49,279 --> 01:29:54,238
that's possible so we really just can

2081
01:29:52,319 --> 01:29:57,840
concern ourselves with a very

2082
01:29:54,238 --> 01:29:59,839
straightforward thing even you know

2083
01:29:57,840 --> 01:30:01,520
more straightforward than we have before

2084
01:29:59,840 --> 01:30:03,520
which is that if we assume that this

2085
01:30:01,520 --> 01:30:05,920
whole thing doesn't have to be relative

2086
01:30:03,520 --> 01:30:08,000
to the origin anyway because we could

2087
01:30:05,920 --> 01:30:10,158
even if we cared we could just

2088
01:30:08,000 --> 01:30:12,238
presuppose that it was aligned in that

2089
01:30:10,158 --> 01:30:15,119
fashion

2090
01:30:12,238 --> 01:30:17,678
right we know that this comes out of the

2091
01:30:15,119 --> 01:30:17,679
equation

2092
01:30:19,279 --> 01:30:23,279
um so then we get the next question

2093
01:30:21,439 --> 01:30:25,439
which is well what happens if we just

2094
01:30:23,279 --> 01:30:26,238
don't consider

2095
01:30:25,439 --> 01:30:26,539
like

2096
01:30:26,238 --> 01:30:29,359
uh

2097
01:30:26,539 --> 01:30:33,479
[Music]

2098
01:30:29,359 --> 01:30:33,479
what happens with curse lp

2099
01:30:34,158 --> 01:30:36,799
right

2100
01:30:35,920 --> 01:30:39,840
um

2101
01:30:36,800 --> 01:30:43,199
what what happens with curse lp

2102
01:30:39,840 --> 01:30:46,239
uh so the reason that the thing changes

2103
01:30:43,198 --> 01:30:46,238
with curse lp

2104
01:30:46,399 --> 01:30:52,960
is because the d cell x part is

2105
01:30:48,800 --> 01:30:52,960
different right it's this part

2106
01:30:53,359 --> 01:30:57,119
so

2107
01:30:54,158 --> 01:30:58,479
we don't know because that part actually

2108
01:30:57,119 --> 01:31:00,319
isn't constant through everything

2109
01:30:58,479 --> 01:31:02,799
because some people have d cell added

2110
01:31:00,319 --> 01:31:05,359
and some people have d cell y added

2111
01:31:02,800 --> 01:31:05,360
you know what i mean

2112
01:31:11,039 --> 01:31:14,399
um

2113
01:31:12,800 --> 01:31:16,639
i'm not sure that that will become a

2114
01:31:14,399 --> 01:31:18,638
completely superfluous value right it

2115
01:31:16,639 --> 01:31:21,440
shouldn't be able to be a completely

2116
01:31:18,639 --> 01:31:23,840
superfluous value

2117
01:31:21,439 --> 01:31:26,839
i wouldn't assume

2118
01:31:23,840 --> 01:31:26,840
um

2119
01:32:09,439 --> 01:32:12,439
so

2120
01:32:31,760 --> 01:32:35,840
i can't think if i'm missing something

2121
01:32:33,600 --> 01:32:35,840
there

2122
01:32:36,238 --> 01:32:40,479
i don't think i am but if you were to

2123
01:32:38,479 --> 01:32:42,399
plug in

2124
01:32:40,479 --> 01:32:45,359
for x step like if you were to plug in

2125
01:32:42,399 --> 01:32:45,359
cursor right

2126
01:32:53,279 --> 01:32:57,119
i feel like there's still one thing that

2127
01:32:54,880 --> 01:32:59,920
i'm missing here

2128
01:32:57,119 --> 01:33:01,679
so you know let's suppose that i

2129
01:32:59,920 --> 01:33:03,520
simplify this

2130
01:33:01,679 --> 01:33:05,440
nomenclature slightly so it doesn't take

2131
01:33:03,520 --> 01:33:09,320
up as much space just so it's easier for

2132
01:33:05,439 --> 01:33:09,319
us to play with a little bit

2133
01:33:14,079 --> 01:33:18,158
you know what i mean

2134
01:33:16,079 --> 01:33:20,479
um

2135
01:33:18,158 --> 01:33:24,559
so if you imagine that you were going to

2136
01:33:20,479 --> 01:33:24,559
expand this to uh

2137
01:33:28,800 --> 01:33:33,520
so those are some shorter versions so if

2138
01:33:30,960 --> 01:33:37,279
we imagine that we were going to expand

2139
01:33:33,520 --> 01:33:39,280
these two by saying like okay

2140
01:33:37,279 --> 01:33:42,719
we're going to plug in

2141
01:33:39,279 --> 01:33:44,079
the curve p plus dx

2142
01:33:42,719 --> 01:33:47,719
into

2143
01:33:44,079 --> 01:33:47,719
x step p

2144
01:33:51,439 --> 01:33:55,279
right so we're gonna we're gonna

2145
01:33:56,079 --> 01:33:58,880
we're gonna do that

2146
01:33:59,600 --> 01:34:02,600
then

2147
01:34:06,560 --> 01:34:11,450
when we multiply that out

2148
01:34:09,920 --> 01:34:14,609
we would expect to see

2149
01:34:11,449 --> 01:34:14,608
[Music]

2150
01:34:16,960 --> 01:34:20,319
this

2151
01:34:18,560 --> 01:34:22,960
right i

2152
01:34:20,319 --> 01:34:26,799
distribute the der y

2153
01:34:22,960 --> 01:34:26,800
uh then distribute the der x

2154
01:34:26,880 --> 01:34:30,560
and

2155
01:34:27,920 --> 01:34:34,480
you get something looks like that

2156
01:34:30,560 --> 01:34:36,639
so negative to white times kirk px plus

2157
01:34:34,479 --> 01:34:38,879
der kirpi

2158
01:34:36,639 --> 01:34:38,880
um

2159
01:34:39,359 --> 01:34:42,960
i mean right like i don't think i'm

2160
01:34:41,279 --> 01:34:44,158
missing something here i'm not very good

2161
01:34:42,960 --> 01:34:46,560
at math

2162
01:34:44,158 --> 01:34:48,238
as anyone who watches the stream knows

2163
01:34:46,560 --> 01:34:54,039
very well

2164
01:34:48,238 --> 01:34:54,039
um but you know that is

2165
01:35:04,158 --> 01:35:07,118
so it's kind of like

2166
01:35:05,760 --> 01:35:08,880
it's the

2167
01:35:07,118 --> 01:35:11,198
it's

2168
01:35:08,880 --> 01:35:13,600
you can see the cross product re-emerge

2169
01:35:11,198 --> 01:35:15,039
right like you know the perp dot product

2170
01:35:13,600 --> 01:35:18,079
you can see you know it looks like a

2171
01:35:15,039 --> 01:35:18,079
cross product now right

2172
01:35:18,800 --> 01:35:23,039
so if you look at what happens there

2173
01:35:21,039 --> 01:35:25,039
you figure well

2174
01:35:23,039 --> 01:35:27,439
we're looking to see

2175
01:35:25,039 --> 01:35:30,639
absolute value wise which one of these

2176
01:35:27,439 --> 01:35:32,719
is going to be you know different let's

2177
01:35:30,639 --> 01:35:35,039
see what happens when we do the same

2178
01:35:32,719 --> 01:35:37,600
thing for the y step

2179
01:35:35,039 --> 01:35:38,560
if we substitute in curve plea plus der

2180
01:35:37,600 --> 01:35:43,800
y

2181
01:35:38,560 --> 01:35:43,800
uh what we oops

2182
01:35:50,079 --> 01:35:53,679
so

2183
01:35:50,960 --> 01:35:55,439
if we substitute in this for y step like

2184
01:35:53,679 --> 01:35:57,920
so

2185
01:35:55,439 --> 01:36:01,759
then we have our dot x's

2186
01:35:57,920 --> 01:36:01,760
uh and our dot y's

2187
01:36:02,719 --> 01:36:08,158
and you

2188
01:36:04,639 --> 01:36:11,520
distribute the der y

2189
01:36:08,158 --> 01:36:13,439
in both cases like so

2190
01:36:11,520 --> 01:36:16,159
um

2191
01:36:13,439 --> 01:36:19,279
and the directs

2192
01:36:16,158 --> 01:36:21,359
in both cases like so

2193
01:36:19,279 --> 01:36:24,679
uh and then if i group the terms the

2194
01:36:21,359 --> 01:36:24,679
same way

2195
01:36:29,279 --> 01:36:34,399
then it looks like you have sort of that

2196
01:36:31,520 --> 01:36:34,400
same term

2197
01:36:34,560 --> 01:36:37,560
um

2198
01:36:39,600 --> 01:36:45,119
it looks like you have like the same

2199
01:36:41,118 --> 01:36:45,118
exact term in both as well

2200
01:36:48,000 --> 01:36:50,960
right

2201
01:36:49,039 --> 01:36:54,158
so it seems like you're really just

2202
01:36:50,960 --> 01:36:56,399
computing this one value unless i messed

2203
01:36:54,158 --> 01:36:58,000
up the math which is very likely because

2204
01:36:56,399 --> 01:36:59,359
it's me

2205
01:36:58,000 --> 01:37:01,359
it seems like

2206
01:36:59,359 --> 01:37:03,599
if it wasn't inside an absolute value

2207
01:37:01,359 --> 01:37:05,839
you could actually just eliminate it

2208
01:37:03,600 --> 01:37:07,600
right

2209
01:37:05,840 --> 01:37:09,920
but because it is inside an absolute

2210
01:37:07,600 --> 01:37:11,520
value you can't because you don't know

2211
01:37:09,920 --> 01:37:14,480
whether this would have caused it to

2212
01:37:11,520 --> 01:37:17,520
cross over a line and bounce back

2213
01:37:14,479 --> 01:37:18,399
right the absolute value is

2214
01:37:17,520 --> 01:37:21,280
is

2215
01:37:18,399 --> 01:37:23,599
makes it so you can't extract that

2216
01:37:21,279 --> 01:37:23,599
um

2217
01:37:24,000 --> 01:37:28,479
right we could fold the other one in

2218
01:37:26,560 --> 01:37:31,119
so that there's only one

2219
01:37:28,479 --> 01:37:32,319
but one like we could fold in the ray

2220
01:37:31,118 --> 01:37:35,920
origin

2221
01:37:32,319 --> 01:37:40,799
but we can't eliminate the term entirely

2222
01:37:35,920 --> 01:37:40,800
so you have one term here which is this

2223
01:37:40,960 --> 01:37:44,880
uh this is like der kerpie or something

2224
01:37:43,760 --> 01:37:47,199
right

2225
01:37:44,880 --> 01:37:50,079
and durkher p

2226
01:37:47,198 --> 01:37:54,319
can be shared between the two

2227
01:37:50,079 --> 01:37:54,319
but it can't be eliminated i don't think

2228
01:37:54,800 --> 01:37:57,800
right

2229
01:38:09,600 --> 01:38:14,480
does that make sense

2230
01:38:12,158 --> 01:38:17,039
so i think that we are

2231
01:38:14,479 --> 01:38:18,559
you know this would be very

2232
01:38:17,039 --> 01:38:20,560
low cost

2233
01:38:18,560 --> 01:38:22,800
which is why i'm just thinking to myself

2234
01:38:20,560 --> 01:38:22,800
like

2235
01:38:23,520 --> 01:38:28,960
surely we can get that as fast or close

2236
01:38:26,319 --> 01:38:31,599
to as fast as the table look up

2237
01:38:28,960 --> 01:38:33,039
you know it probably is slightly slower

2238
01:38:31,600 --> 01:38:36,400
because

2239
01:38:33,039 --> 01:38:36,399
again we have to maintain

2240
01:38:37,198 --> 01:38:40,559
uh x a few extra values which is

2241
01:38:39,118 --> 01:38:42,000
probably not free

2242
01:38:40,560 --> 01:38:45,520
you know what i mean

2243
01:38:42,000 --> 01:38:47,520
um but but the math is like very simple

2244
01:38:45,520 --> 01:38:49,920
right so like like like if we are

2245
01:38:47,520 --> 01:38:51,280
correct here we're down to literally

2246
01:38:49,920 --> 01:38:54,279
this

2247
01:38:51,279 --> 01:38:54,279
um

2248
01:39:18,319 --> 01:39:21,599
you know

2249
01:39:19,359 --> 01:39:21,599
um

2250
01:39:22,639 --> 01:39:27,239
so

2251
01:39:23,600 --> 01:39:27,239
so that part

2252
01:39:27,679 --> 01:39:31,440
that's the entirety of like what we

2253
01:39:29,679 --> 01:39:34,000
would need to compute

2254
01:39:31,439 --> 01:39:36,638
we would need to compute you know

2255
01:39:34,000 --> 01:39:39,118
um some multiplies

2256
01:39:36,639 --> 01:39:40,639
not very many one two three four five

2257
01:39:39,118 --> 01:39:41,519
six

2258
01:39:40,639 --> 01:39:43,440
uh

2259
01:39:41,520 --> 01:39:45,040
they can be done in parallel so if we

2260
01:39:43,439 --> 01:39:46,319
could pack these creatively we could

2261
01:39:45,039 --> 01:39:47,359
probably do

2262
01:39:46,319 --> 01:39:49,118
uh

2263
01:39:47,359 --> 01:39:50,399
like all of these multiplies at the same

2264
01:39:49,118 --> 01:39:52,079
time

2265
01:39:50,399 --> 01:39:53,198
you know what i mean

2266
01:39:52,079 --> 01:39:56,319
uh

2267
01:39:53,198 --> 01:39:58,719
so that's pretty easy

2268
01:39:56,319 --> 01:39:58,719
and

2269
01:40:04,000 --> 01:40:12,960
and one assumes that you can just save

2270
01:40:08,158 --> 01:40:13,319
the value of the one you keep so the

2271
01:40:12,960 --> 01:40:16,430
so

2272
01:40:13,319 --> 01:40:16,429
[Music]

2273
01:40:17,359 --> 01:40:22,960
so the duracure p value is the value of

2274
01:40:21,198 --> 01:40:25,359
the dot product

2275
01:40:22,960 --> 01:40:27,760
with that thing and you know that the

2276
01:40:25,359 --> 01:40:31,359
new dot product is this one

2277
01:40:27,760 --> 01:40:34,079
so you also don't have to compute this

2278
01:40:31,359 --> 01:40:37,198
right you can just keep it

2279
01:40:34,079 --> 01:40:39,760
so whatever you compute for these values

2280
01:40:37,198 --> 01:40:39,759
in here

2281
01:40:45,520 --> 01:40:50,199
before you absolute value it

2282
01:41:02,000 --> 01:41:05,840
i think you can also just keep

2283
01:41:16,158 --> 01:41:22,079
so this only happens like

2284
01:41:19,118 --> 01:41:22,079
at setup

2285
01:41:31,118 --> 01:41:36,079
so you compute like this one time

2286
01:41:34,079 --> 01:41:38,238
and then from then on you are only

2287
01:41:36,079 --> 01:41:40,800
computing these two values and keeping

2288
01:41:38,238 --> 01:41:40,799
one of them

2289
01:41:45,520 --> 01:41:47,840
i think

2290
01:42:09,840 --> 01:42:12,079
right

2291
01:42:13,118 --> 01:42:15,920
so i don't know like

2292
01:42:14,800 --> 01:42:17,840
if that

2293
01:42:15,920 --> 01:42:19,440
makes the difference but if you look at

2294
01:42:17,840 --> 01:42:21,360
what's going on here you would think to

2295
01:42:19,439 --> 01:42:23,039
yourself like okay that doesn't seem

2296
01:42:21,359 --> 01:42:25,439
particularly onerous

2297
01:42:23,039 --> 01:42:27,359
we have some setup we literally just do

2298
01:42:25,439 --> 01:42:30,000
this and then based on the absolute

2299
01:42:27,359 --> 01:42:32,319
value of between those two things we

2300
01:42:30,000 --> 01:42:33,760
just that's all we need and then we can

2301
01:42:32,319 --> 01:42:36,000
take the step

2302
01:42:33,760 --> 01:42:36,000
uh

2303
01:42:37,439 --> 01:42:41,879
and preserve the value for the next time

2304
01:42:46,238 --> 01:42:50,399
so i can't say that seems that doesn't

2305
01:42:48,560 --> 01:42:53,360
seem particularly onerous right like

2306
01:42:50,399 --> 01:42:56,799
that doesn't seem particularly bad uh

2307
01:42:53,359 --> 01:42:59,118
like that seems pretty cheap

2308
01:42:56,800 --> 01:42:59,119
right

2309
01:42:59,439 --> 01:43:02,439
um

2310
01:43:38,238 --> 01:43:41,039
i mean i don't know

2311
01:43:41,920 --> 01:43:44,880
so

2312
01:43:43,118 --> 01:43:46,799
that seems pretty

2313
01:43:44,880 --> 01:43:48,319
cheap i don't know that like like i

2314
01:43:46,800 --> 01:43:51,279
think we should just do that so now you

2315
01:43:48,319 --> 01:43:52,960
further you have another thing here

2316
01:43:51,279 --> 01:43:55,279
which is that like if you look at what

2317
01:43:52,960 --> 01:43:57,760
happens with x step and y step v it's

2318
01:43:55,279 --> 01:43:59,279
actually cheaper even still than that

2319
01:43:57,760 --> 01:44:00,239
because really

2320
01:43:59,279 --> 01:44:01,199
you know

2321
01:44:00,238 --> 01:44:02,718
that um

2322
01:44:01,199 --> 01:44:05,439
[Music]

2323
01:44:02,719 --> 01:44:08,000
you know that the direction that you're

2324
01:44:05,439 --> 01:44:11,359
stepping is on the grid

2325
01:44:08,000 --> 01:44:13,520
so the dx step by definition doesn't

2326
01:44:11,359 --> 01:44:14,639
have a y value

2327
01:44:13,520 --> 01:44:18,000
right

2328
01:44:14,639 --> 01:44:22,000
like like this can't be in the equation

2329
01:44:18,000 --> 01:44:22,960
because dx is strictly a move in x

2330
01:44:22,000 --> 01:44:24,800
um

2331
01:44:22,960 --> 01:44:27,840
and the same would be true here so like

2332
01:44:24,800 --> 01:44:28,719
there'd be no y value

2333
01:44:27,840 --> 01:44:32,560
uh

2334
01:44:28,719 --> 01:44:35,198
no x no x component of the y step

2335
01:44:32,560 --> 01:44:37,440
so you're really just looking at this i

2336
01:44:35,198 --> 01:44:37,439
think

2337
01:44:41,359 --> 01:44:43,679
right

2338
01:44:45,039 --> 01:44:49,279
like you're doing

2339
01:44:46,800 --> 01:44:52,560
two multiplies

2340
01:44:49,279 --> 01:44:54,639
um and you could roll the d y y value

2341
01:44:52,560 --> 01:44:56,000
could have the negative rolled in or

2342
01:44:54,639 --> 01:44:58,000
actually dx value could have the

2343
01:44:56,000 --> 01:45:00,079
negative rolled in

2344
01:44:58,000 --> 01:45:02,880
so the could both be you could do this

2345
01:45:00,079 --> 01:45:05,279
wide you do like one multiply one add

2346
01:45:02,880 --> 01:45:07,840
and then the extraction is unfortunately

2347
01:45:05,279 --> 01:45:10,079
expensive like right

2348
01:45:07,840 --> 01:45:10,079
um

2349
01:45:12,158 --> 01:45:15,519
you know maybe you just don't get much

2350
01:45:13,920 --> 01:45:16,880
by doing it wide but

2351
01:45:15,520 --> 01:45:19,840
you know that's it

2352
01:45:16,880 --> 01:45:20,639
it's four ops tops then you do have to

2353
01:45:19,840 --> 01:45:22,000
do

2354
01:45:20,639 --> 01:45:25,480
uh a

2355
01:45:22,000 --> 01:45:29,560
absolute value so you've got an and

2356
01:45:25,479 --> 01:45:29,559
right um

2357
01:45:30,399 --> 01:45:32,638
so

2358
01:45:40,880 --> 01:45:43,600
so yeah

2359
01:45:42,000 --> 01:45:46,000
uh space naming sorry i'm not sure i

2360
01:45:43,600 --> 01:45:50,000
followed you on that one

2361
01:45:46,000 --> 01:45:53,840
uh durker p is two times dirk her p plus

2362
01:45:50,000 --> 01:45:53,840
dxy at the moment

2363
01:45:57,198 --> 01:46:04,960
i do not

2364
01:46:00,399 --> 01:46:04,960
follow you there sorry

2365
01:46:05,118 --> 01:46:07,359
what

2366
01:46:07,439 --> 01:46:12,198
oh yes

2367
01:46:08,800 --> 01:46:12,199
you mean this

2368
01:46:12,319 --> 01:46:16,079
gotcha

2369
01:46:13,439 --> 01:46:17,919
sorry i was looking up here no i agree

2370
01:46:16,079 --> 01:46:19,600
uh i just copied the grid index line and

2371
01:46:17,920 --> 01:46:21,359
for some reason didn't change the plus

2372
01:46:19,600 --> 01:46:22,960
what i meant to say is yes we we are

2373
01:46:21,359 --> 01:46:24,880
preserving

2374
01:46:22,960 --> 01:46:26,319
we're we've computed the values so all

2375
01:46:24,880 --> 01:46:28,560
this is doing is just taking one of

2376
01:46:26,319 --> 01:46:31,359
these two

2377
01:46:28,560 --> 01:46:31,360
absolutely yes

2378
01:46:32,560 --> 01:46:36,960
so i think that's the complete thing um

2379
01:46:35,359 --> 01:46:39,839
so i'm going to say let's just go ahead

2380
01:46:36,960 --> 01:46:42,480
and do this i mean we have to be able to

2381
01:46:39,840 --> 01:46:45,600
make that fast enough that i would think

2382
01:46:42,479 --> 01:46:47,919
right and like me i don't know maybe the

2383
01:46:45,600 --> 01:46:49,920
branch

2384
01:46:47,920 --> 01:46:52,880
maybe like the misprediction of like

2385
01:46:49,920 --> 01:46:54,800
what happens with test is just too harsh

2386
01:46:52,880 --> 01:46:56,319
and granted there it can all be done

2387
01:46:54,800 --> 01:46:57,760
with conditional move or something like

2388
01:46:56,319 --> 01:46:59,599
that like there's no need to actually

2389
01:46:57,760 --> 01:47:02,079
have a branch but that still creates

2390
01:46:59,600 --> 01:47:05,520
like a pipeline bubble right like um

2391
01:47:02,079 --> 01:47:05,519
because it has to know what to fetch

2392
01:47:07,118 --> 01:47:10,799
but presumably if you put that at the

2393
01:47:08,560 --> 01:47:12,880
head end right

2394
01:47:10,800 --> 01:47:15,199
if you did that first

2395
01:47:12,880 --> 01:47:15,199
um

2396
01:47:16,158 --> 01:47:19,920
presumably you'd be okay

2397
01:47:18,399 --> 01:47:22,238
wait why does what's what's going on

2398
01:47:19,920 --> 01:47:25,039
here

2399
01:47:22,238 --> 01:47:26,959
why does my thing

2400
01:47:25,039 --> 01:47:28,000
why is that okay there it is never mind

2401
01:47:26,960 --> 01:47:29,359
sorry i thought there was a problem the

2402
01:47:28,000 --> 01:47:31,679
recording there i want to make sure

2403
01:47:29,359 --> 01:47:31,679
there wasn't

2404
01:47:32,238 --> 01:47:36,000
uh so i think

2405
01:47:34,000 --> 01:47:37,279
i think we're good i think we're good

2406
01:47:36,000 --> 01:47:39,279
there what time is it do we have time to

2407
01:47:37,279 --> 01:47:42,319
implement this today

2408
01:47:39,279 --> 01:47:44,079
it's 2 22. yeah we probably do uh let's

2409
01:47:42,319 --> 01:47:46,079
take a quick break

2410
01:47:44,079 --> 01:47:49,439
uh i guess

2411
01:47:46,079 --> 01:47:51,198
and let's go ahead and when we come back

2412
01:47:49,439 --> 01:47:53,118
we'll try implementing this and then we

2413
01:47:51,198 --> 01:47:55,039
just won't debug it like we'll type it

2414
01:47:53,118 --> 01:47:56,479
in today

2415
01:47:55,039 --> 01:47:58,800
and

2416
01:47:56,479 --> 01:48:00,399
that'll be it like we won't actually

2417
01:47:58,800 --> 01:48:02,480
we'll just get the code structured right

2418
01:48:00,399 --> 01:48:04,799
and then next weekend we'll debug it

2419
01:48:02,479 --> 01:48:06,959
okay that seems fair

2420
01:48:04,800 --> 01:48:11,159
so everyone take a quick break and when

2421
01:48:06,960 --> 01:48:11,158
we'll be back in a second

2422
01:48:24,639 --> 01:48:32,998
foreign

2423
01:48:26,590 --> 01:48:32,998
[Music]

2424
01:48:36,158 --> 01:48:39,158
bye

2425
01:48:43,250 --> 01:50:09,399
[Music]

2426
01:50:06,238 --> 01:50:09,399
all right

2427
01:50:11,760 --> 01:50:16,400
all right

2428
01:50:12,960 --> 01:50:17,679
so i think that's it uh and

2429
01:50:16,399 --> 01:50:20,158
yeah like

2430
01:50:17,679 --> 01:50:22,158
i don't know maybe maybe i oversimplify

2431
01:50:20,158 --> 01:50:25,519
that and i'm missing some details there

2432
01:50:22,158 --> 01:50:27,920
but that seems about right

2433
01:50:25,520 --> 01:50:29,840
like that seems like pretty

2434
01:50:27,920 --> 01:50:30,719
straightforward to me

2435
01:50:29,840 --> 01:50:32,560
um

2436
01:50:30,719 --> 01:50:34,800
i don't know so we'll see we'll see

2437
01:50:32,560 --> 01:50:37,280
we'll see when we actually go to to do

2438
01:50:34,800 --> 01:50:38,960
this so i'm not as centered as i should

2439
01:50:37,279 --> 01:50:41,039
be i feel like i feel like i should be a

2440
01:50:38,960 --> 01:50:42,880
little more centered here

2441
01:50:41,039 --> 01:50:44,960
i'm not as centered as i should be in

2442
01:50:42,880 --> 01:50:47,118
the webcam i mean maybe the the camera

2443
01:50:44,960 --> 01:50:48,639
needs to be offset sometimes the puss

2444
01:50:47,118 --> 01:50:50,319
play with it

2445
01:50:48,639 --> 01:50:52,400
and it gets shifted over

2446
01:50:50,319 --> 01:50:54,799
so i probably should shift the camera a

2447
01:50:52,399 --> 01:50:56,079
little bit but oh well

2448
01:50:54,800 --> 01:50:57,440
yeah like you look at if i look at the

2449
01:50:56,079 --> 01:51:00,399
camera here

2450
01:50:57,439 --> 01:51:02,000
like basically right i'm this is where i

2451
01:51:00,399 --> 01:51:04,000
would normally be so it's like it got

2452
01:51:02,000 --> 01:51:06,880
shifted all the way over here so maybe

2453
01:51:04,000 --> 01:51:08,479
the real answer maybe the real

2454
01:51:06,880 --> 01:51:10,400
answer here is the camera needs to be

2455
01:51:08,479 --> 01:51:13,359
rotated slightly

2456
01:51:10,399 --> 01:51:13,359
let's just do that

2457
01:51:19,359 --> 01:51:22,799
i feel like that's going to be a little

2458
01:51:20,560 --> 01:51:25,039
bit better yeah now does that create

2459
01:51:22,800 --> 01:51:26,400
some bad like did we get off frame at

2460
01:51:25,039 --> 01:51:27,279
all

2461
01:51:26,399 --> 01:51:29,598
no

2462
01:51:27,279 --> 01:51:31,279
so that's just fine

2463
01:51:29,599 --> 01:51:32,560
yeah

2464
01:51:31,279 --> 01:51:34,479
who knows

2465
01:51:32,560 --> 01:51:36,560
who knows what happened i usually assume

2466
01:51:34,479 --> 01:51:38,000
that it probably is the puss the puss

2467
01:51:36,560 --> 01:51:39,119
they go nuts at night they run all

2468
01:51:38,000 --> 01:51:41,118
around

2469
01:51:39,118 --> 01:51:43,759
and you end up in these situations where

2470
01:51:41,118 --> 01:51:46,719
they probably bump into the camera i

2471
01:51:43,760 --> 01:51:48,960
i have wanted to for a while mount the

2472
01:51:46,719 --> 01:51:50,480
cameras on something more permanent like

2473
01:51:48,960 --> 01:51:52,480
basically like

2474
01:51:50,479 --> 01:51:54,638
the equivalent of like a monitor arm

2475
01:51:52,479 --> 01:51:56,319
that i drill into the wall or something

2476
01:51:54,639 --> 01:51:59,279
you know what i mean where like the

2477
01:51:56,319 --> 01:52:01,279
camera can't be bumped but right now

2478
01:51:59,279 --> 01:52:02,559
it's just on a tripod and the pus could

2479
01:52:01,279 --> 01:52:04,319
i mean the puss could knock it the whole

2480
01:52:02,560 --> 01:52:06,960
way over if they wanted to

2481
01:52:04,319 --> 01:52:08,319
it's just not that stable and so at some

2482
01:52:06,960 --> 01:52:10,319
point it probably would be a good idea

2483
01:52:08,319 --> 01:52:11,439
to like figure out how to like get that

2484
01:52:10,319 --> 01:52:13,920
more

2485
01:52:11,439 --> 01:52:16,638
more aligned uh permanently like it's

2486
01:52:13,920 --> 01:52:17,599
just like it won't now move because it's

2487
01:52:16,639 --> 01:52:20,319
you know

2488
01:52:17,599 --> 01:52:22,560
arc welded into place

2489
01:52:20,319 --> 01:52:22,559
um

2490
01:52:22,880 --> 01:52:25,440
but anyway

2491
01:52:24,000 --> 01:52:28,479
so

2492
01:52:25,439 --> 01:52:28,479
let's take a look

2493
01:52:28,840 --> 01:52:31,760
um

2494
01:52:30,399 --> 01:52:34,238
i don't know

2495
01:52:31,760 --> 01:52:35,119
i'm a little nervous about

2496
01:52:34,238 --> 01:52:37,039
this

2497
01:52:35,118 --> 01:52:39,198
i don't know why we still have that in

2498
01:52:37,039 --> 01:52:41,279
there we don't have our own

2499
01:52:39,198 --> 01:52:43,359
absolute value i assume that gets in

2500
01:52:41,279 --> 01:52:45,840
line properly but

2501
01:52:43,359 --> 01:52:46,719
i don't know we'll find out

2502
01:52:45,840 --> 01:52:50,400
uh

2503
01:52:46,719 --> 01:52:51,840
so if we've have it all

2504
01:52:50,399 --> 01:52:53,359
if we look at what we need to do here

2505
01:52:51,840 --> 01:52:55,039
for setup the primary thing that we're

2506
01:52:53,359 --> 01:52:57,279
missing at the moment is like obviously

2507
01:52:55,039 --> 01:52:58,560
the kirpy is the ray origin minus the

2508
01:52:57,279 --> 01:53:01,759
starting cell

2509
01:52:58,560 --> 01:53:04,000
our initial problem is we don't have

2510
01:53:01,760 --> 01:53:06,880
the starting cell really

2511
01:53:04,000 --> 01:53:08,639
um i don't think maybe we do

2512
01:53:06,880 --> 01:53:10,159
but i don't think so so like if you look

2513
01:53:08,639 --> 01:53:12,639
at what we get passed down it's like

2514
01:53:10,158 --> 01:53:14,000
this initial grid index thing this is

2515
01:53:12,639 --> 01:53:16,079
kind of a holdover from the way this

2516
01:53:14,000 --> 01:53:18,399
code used to work so i think what we

2517
01:53:16,079 --> 01:53:20,880
more want to do is stop passing these

2518
01:53:18,399 --> 01:53:23,118
two things

2519
01:53:20,880 --> 01:53:27,440
and start passing

2520
01:53:23,118 --> 01:53:28,960
uh actual like position values that we

2521
01:53:27,439 --> 01:53:31,039
can then use

2522
01:53:28,960 --> 01:53:32,399
so

2523
01:53:31,039 --> 01:53:34,479
i

2524
01:53:32,399 --> 01:53:37,359
yeah it would be

2525
01:53:34,479 --> 01:53:39,359
looking in full cast which is now these

2526
01:53:37,359 --> 01:53:41,359
are rapidly collapsing where we don't

2527
01:53:39,359 --> 01:53:43,118
really probably need full cast anymore

2528
01:53:41,359 --> 01:53:44,000
so there's that

2529
01:53:43,118 --> 01:53:45,198
um

2530
01:53:44,000 --> 01:53:47,599
but

2531
01:53:45,198 --> 01:53:50,319
if we look at full cast you can see like

2532
01:53:47,599 --> 01:53:53,039
in full cast it gets past these values

2533
01:53:50,319 --> 01:53:55,118
which it then like slaps down like it's

2534
01:53:53,039 --> 01:53:57,439
calling things like

2535
01:53:55,118 --> 01:54:00,079
get quadrant for that don't actually

2536
01:53:57,439 --> 01:54:02,799
need to happen so so basically like what

2537
01:54:00,079 --> 01:54:03,599
i could do here

2538
01:54:02,800 --> 01:54:06,800
is

2539
01:54:03,599 --> 01:54:08,239
take this code and move it into like

2540
01:54:06,800 --> 01:54:10,079
like i could basically just finally

2541
01:54:08,238 --> 01:54:12,718
collapse these routines entirely because

2542
01:54:10,079 --> 01:54:14,719
there really is no reason you can see

2543
01:54:12,719 --> 01:54:16,639
here that like grid raycast is just a

2544
01:54:14,719 --> 01:54:19,118
thing that happens at the end of this

2545
01:54:16,639 --> 01:54:20,800
code so these routines don't need to be

2546
01:54:19,118 --> 01:54:22,479
separate anymore and

2547
01:54:20,800 --> 01:54:24,079
like they were separate because we used

2548
01:54:22,479 --> 01:54:26,158
to just call grid

2549
01:54:24,079 --> 01:54:29,118
grid raycast multiple times and now we

2550
01:54:26,158 --> 01:54:29,118
just don't even do that anymore

2551
01:54:35,118 --> 01:54:39,519
so at the very least we could say well

2552
01:54:37,439 --> 01:54:41,919
quadrant index let's that's the easiest

2553
01:54:39,520 --> 01:54:42,960
thing to replace um quadrant index

2554
01:54:41,920 --> 01:54:45,599
literally

2555
01:54:42,960 --> 01:54:48,960
it could just be

2556
01:54:45,599 --> 01:54:52,239
uh sent down as part of the remainder

2557
01:54:48,960 --> 01:54:55,279
uh thing the remainder is the uh

2558
01:54:52,238 --> 01:54:56,879
the atlas step part like again this is

2559
01:54:55,279 --> 01:54:58,719
all kind of stupid

2560
01:54:56,880 --> 01:54:59,520
but uh just trying to figure out like

2561
01:54:58,719 --> 01:55:02,399
the

2562
01:54:59,520 --> 01:55:05,760
the slow movement of this

2563
01:55:02,399 --> 01:55:08,079
into the other system so uh we just need

2564
01:55:05,760 --> 01:55:10,560
to know like where this thing is inside

2565
01:55:08,079 --> 01:55:12,399
the outer cell right that's all we're

2566
01:55:10,560 --> 01:55:15,199
really looking to

2567
01:55:12,399 --> 01:55:16,839
determine so the remainder would really

2568
01:55:15,198 --> 01:55:20,000
be that

2569
01:55:16,840 --> 01:55:21,599
i it tells us exactly

2570
01:55:20,000 --> 01:55:22,479
where we are

2571
01:55:21,599 --> 01:55:26,079
and

2572
01:55:22,479 --> 01:55:28,158
i pretty sure

2573
01:55:26,079 --> 01:55:31,039
that it just doesn't get used anywhere

2574
01:55:28,158 --> 01:55:34,399
right like yeah so you know if we wanted

2575
01:55:31,039 --> 01:55:37,599
to uh this whole situation

2576
01:55:34,399 --> 01:55:40,399
could just be placed into the

2577
01:55:37,599 --> 01:55:42,639
grid raycast code as a start like it's

2578
01:55:40,399 --> 01:55:42,638
not

2579
01:55:42,800 --> 01:55:46,960
everything but it's a start so if we

2580
01:55:44,560 --> 01:55:49,440
take remainder z and the quadrant index

2581
01:55:46,960 --> 01:55:51,760
and i put drop those in here

2582
01:55:49,439 --> 01:55:53,598
so you know we've got something like

2583
01:55:51,760 --> 01:55:55,679
uh this happening

2584
01:55:53,599 --> 01:55:56,480
and remainder

2585
01:55:55,679 --> 01:56:00,079
uh

2586
01:55:56,479 --> 01:56:01,839
which gets is atlas index minus two 2

2587
01:56:00,079 --> 01:56:03,118
half atlas index

2588
01:56:01,840 --> 01:56:05,119
that nonsense

2589
01:56:03,118 --> 01:56:07,198
uh if we start passing a remainder down

2590
01:56:05,118 --> 01:56:09,359
that's just like the simplest

2591
01:56:07,198 --> 01:56:10,479
first step i can take that that's all

2592
01:56:09,359 --> 01:56:12,960
i'm looking for here is like the

2593
01:56:10,479 --> 01:56:15,359
simplest first step i can take

2594
01:56:12,960 --> 01:56:17,679
so we pass remainder down

2595
01:56:15,359 --> 01:56:19,839
um and now we have the information we

2596
01:56:17,679 --> 01:56:22,079
need to actually do without changing

2597
01:56:19,840 --> 01:56:25,279
anything we can do our stepping

2598
01:56:22,079 --> 01:56:25,279
um so that's good

2599
01:56:26,840 --> 01:56:30,000
and

2600
01:56:28,479 --> 01:56:31,279
this part of the code that we've

2601
01:56:30,000 --> 01:56:33,359
sketched out i'm just going to if zero

2602
01:56:31,279 --> 01:56:34,800
out because this is well we're just

2603
01:56:33,359 --> 01:56:36,559
starting here

2604
01:56:34,800 --> 01:56:38,639
and so then now instead of passing

2605
01:56:36,560 --> 01:56:40,159
quadrant index we're just going to pass

2606
01:56:38,639 --> 01:56:45,359
the remainder

2607
01:56:40,158 --> 01:56:47,198
um and compute quadrant index inside no

2608
01:56:45,359 --> 01:56:48,319
there we go

2609
01:56:47,198 --> 01:56:50,479
uh

2610
01:56:48,319 --> 01:56:51,840
so the code shouldn't change

2611
01:56:50,479 --> 01:56:53,039
i don't think

2612
01:56:51,840 --> 01:56:55,199
uh

2613
01:56:53,039 --> 01:56:56,880
it's it's now like just gonna run

2614
01:56:55,198 --> 01:56:59,039
exactly as it did before but the only

2615
01:56:56,880 --> 01:57:02,000
difference is that we now yeah i mean

2616
01:56:59,039 --> 01:57:03,599
the only difference is that we have

2617
01:57:02,000 --> 01:57:07,039
um

2618
01:57:03,599 --> 01:57:07,039
you know why that's marked inline

2619
01:57:07,840 --> 01:57:15,279
probably very old school yeah

2620
01:57:11,520 --> 01:57:15,280
this is still running amusingly

2621
01:57:16,639 --> 01:57:21,359
and the lighting still works just fine

2622
01:57:18,560 --> 01:57:22,719
right which is what you would expect

2623
01:57:21,359 --> 01:57:24,960
so

2624
01:57:22,719 --> 01:57:27,599
we can then look more carefully at this

2625
01:57:24,960 --> 01:57:29,439
and say well okay with the remainder now

2626
01:57:27,599 --> 01:57:31,039
we could start doing this other stepping

2627
01:57:29,439 --> 01:57:33,198
and what i'm going to do is before like

2628
01:57:31,039 --> 01:57:35,039
tearing the old code out i want to be

2629
01:57:33,198 --> 01:57:36,638
able to run them both together because

2630
01:57:35,039 --> 01:57:39,519
if i can run them both together then i

2631
01:57:36,639 --> 01:57:40,800
can more easily debug like the new one

2632
01:57:39,520 --> 01:57:43,679
right

2633
01:57:40,800 --> 01:57:46,800
which seems like strictly a plus

2634
01:57:43,679 --> 01:57:49,840
so what i want to do is i want to get

2635
01:57:46,800 --> 01:57:50,960
um that so you know

2636
01:57:49,840 --> 01:57:52,719
this

2637
01:57:50,960 --> 01:57:54,719
this grid ray cast past the remainder i

2638
01:57:52,719 --> 01:57:57,359
want to get the values we were using for

2639
01:57:54,719 --> 01:58:00,000
compute walk table which i then

2640
01:57:57,359 --> 01:58:02,079
you know i hope to remove you can see

2641
01:58:00,000 --> 01:58:02,880
that the starting location

2642
01:58:02,079 --> 01:58:05,439
um

2643
01:58:02,880 --> 01:58:09,760
relative to the ray index

2644
01:58:05,439 --> 01:58:09,759
or or relative to a cell i should say

2645
01:58:09,840 --> 01:58:13,360
um

2646
01:58:10,719 --> 01:58:15,520
is going to be something like this

2647
01:58:13,359 --> 01:58:17,839
it's the cell dimension you know with

2648
01:58:15,520 --> 01:58:18,880
the remainder factored in

2649
01:58:17,840 --> 01:58:20,639
uh

2650
01:58:18,880 --> 01:58:22,319
from the divide right something like

2651
01:58:20,639 --> 01:58:24,719
this

2652
01:58:22,319 --> 01:58:27,039
now i don't know that we actually need

2653
01:58:24,719 --> 01:58:29,760
to quite do that because in theory we

2654
01:58:27,039 --> 01:58:32,560
know the starting cell i think

2655
01:58:29,760 --> 01:58:35,560
because we have

2656
01:58:32,560 --> 01:58:35,560
like

2657
01:58:35,679 --> 01:58:40,079
i i guess we could just call it with the

2658
01:58:38,158 --> 01:58:41,439
atlas index

2659
01:58:40,079 --> 01:58:42,880
and we have this right so you know what

2660
01:58:41,439 --> 01:58:44,399
now i think about it i wonder if we can

2661
01:58:42,880 --> 01:58:46,000
just get rid of

2662
01:58:44,399 --> 01:58:47,198
we probably just don't need that and we

2663
01:58:46,000 --> 01:58:48,479
will be able to get rid of quadratus

2664
01:58:47,198 --> 01:58:50,238
once the other code doesn't use it but

2665
01:58:48,479 --> 01:58:52,959
it has to stay in there for now

2666
01:58:50,238 --> 01:58:54,799
if we have initial grid index

2667
01:58:52,960 --> 01:58:57,439
presumably you have to be able to back

2668
01:58:54,800 --> 01:58:59,360
that out to get an atlas location

2669
01:58:57,439 --> 01:59:02,238
because if you couldn't

2670
01:58:59,359 --> 01:59:04,639
how are we sampling so that must be

2671
01:59:02,238 --> 01:59:06,879
something that is knowable

2672
01:59:04,639 --> 01:59:06,880
um

2673
01:59:14,238 --> 01:59:23,439
let's take a look inside the spatial

2674
01:59:19,198 --> 01:59:26,799
partition stuff here which i believe is

2675
01:59:23,439 --> 01:59:29,598
is this code here so like

2676
01:59:26,800 --> 01:59:32,079
flat index from

2677
01:59:29,599 --> 01:59:35,119
is the code that i think is being used

2678
01:59:32,079 --> 01:59:37,599
here to index into this voxel

2679
01:59:35,118 --> 01:59:37,598
i think

2680
01:59:40,639 --> 01:59:45,840
and it looks like this does the opposite

2681
01:59:47,679 --> 01:59:51,679
right so again we we really wouldn't

2682
01:59:50,158 --> 01:59:53,679
want to be doing this

2683
01:59:51,679 --> 01:59:56,840
normally because it's too expensive oh

2684
01:59:53,679 --> 01:59:59,760
and you can see us doing it right here

2685
01:59:56,840 --> 02:00:02,000
right so you wouldn't really want to be

2686
01:59:59,760 --> 02:00:03,520
doing this uh

2687
02:00:02,000 --> 02:00:05,599
we'll want to fix this so that we don't

2688
02:00:03,520 --> 02:00:06,960
actually do this eventually but for now

2689
02:00:05,599 --> 02:00:08,800
because we want to run these in parallel

2690
02:00:06,960 --> 02:00:10,560
and don't want to rip out the other code

2691
02:00:08,800 --> 02:00:12,719
we can just recover one from the other

2692
02:00:10,560 --> 02:00:14,800
and it's not per ray it's per cell so we

2693
02:00:12,719 --> 02:00:18,319
wouldn't really even notice but

2694
02:00:14,800 --> 02:00:22,239
this is definitely to do remove this

2695
02:00:18,319 --> 02:00:25,279
way of computing the local

2696
02:00:22,238 --> 02:00:25,279
ray origin right

2697
02:00:25,760 --> 02:00:31,440
so again our entire goal is to compute

2698
02:00:28,399 --> 02:00:33,439
dirkher p we know the direction x and

2699
02:00:31,439 --> 02:00:35,678
direction y always because that's just

2700
02:00:33,439 --> 02:00:38,879
the ray direction right and the ray

2701
02:00:35,679 --> 02:00:41,359
direction uh we have ray origin single

2702
02:00:38,880 --> 02:00:44,239
and the ray direction is going to be

2703
02:00:41,359 --> 02:00:46,799
coming from uh this when we select this

2704
02:00:44,238 --> 02:00:48,079
piece out so it's ray d single this

2705
02:00:46,800 --> 02:00:51,279
right here

2706
02:00:48,079 --> 02:00:55,920
so in order to set up our dir curve p

2707
02:00:51,279 --> 02:00:58,000
this value which is for stepping um

2708
02:00:55,920 --> 02:00:59,199
maybe i'll call that stepping kirby or

2709
02:00:58,000 --> 02:01:00,000
something

2710
02:00:59,198 --> 02:01:01,759
right

2711
02:01:00,000 --> 02:01:04,800
we know that when we set up the array

2712
02:01:01,760 --> 02:01:08,560
index before we enter the loop uh that

2713
02:01:04,800 --> 02:01:09,679
value has to have the ray d singles x

2714
02:01:08,560 --> 02:01:12,800
value

2715
02:01:09,679 --> 02:01:14,560
and the ray d singles y value which we

2716
02:01:12,800 --> 02:01:17,279
which come out of these two

2717
02:01:14,560 --> 02:01:21,960
times kirby and cur x so those are the

2718
02:01:17,279 --> 02:01:21,960
two values that we actually need

2719
02:01:22,000 --> 02:01:25,359
and

2720
02:01:23,118 --> 02:01:28,079
to compute those two values what we said

2721
02:01:25,359 --> 02:01:30,079
is they have to be the ray origin that

2722
02:01:28,079 --> 02:01:32,000
the cell center

2723
02:01:30,079 --> 02:01:33,920
of the starting cell

2724
02:01:32,000 --> 02:01:36,560
minus the ray origin

2725
02:01:33,920 --> 02:01:38,079
now we know the ray origin it's constant

2726
02:01:36,560 --> 02:01:40,800
forever because

2727
02:01:38,079 --> 02:01:42,719
until we exit this routine we don't move

2728
02:01:40,800 --> 02:01:46,800
the casting location

2729
02:01:42,719 --> 02:01:48,000
so this ray origin piece this ray origin

2730
02:01:46,800 --> 02:01:50,719
single

2731
02:01:48,000 --> 02:01:52,800
is the value we actually need uh for

2732
02:01:50,719 --> 02:01:56,560
that right

2733
02:01:52,800 --> 02:01:59,840
but we additionally need um

2734
02:01:56,560 --> 02:01:59,840
for that curve p right

2735
02:02:00,319 --> 02:02:04,960
so the ray origin singles x y is going

2736
02:02:03,118 --> 02:02:07,359
to get subtracted away from the cell

2737
02:02:04,960 --> 02:02:07,359
center

2738
02:02:07,439 --> 02:02:10,479
x y

2739
02:02:08,399 --> 02:02:14,000
and it's that cell center

2740
02:02:10,479 --> 02:02:14,000
that we don't know

2741
02:02:14,238 --> 02:02:19,039
you know what i'm saying

2742
02:02:15,679 --> 02:02:20,158
so we need this so we need like stepping

2743
02:02:19,039 --> 02:02:21,760
uh

2744
02:02:20,158 --> 02:02:25,319
you know

2745
02:02:21,760 --> 02:02:25,320
initial p

2746
02:02:35,760 --> 02:02:41,199
whatever that initial stepping value is

2747
02:02:39,520 --> 02:02:43,360
that's the thing that we actually needed

2748
02:02:41,198 --> 02:02:47,279
to compute we have part of it we don't

2749
02:02:43,359 --> 02:02:49,279
have the other part of it and that is uh

2750
02:02:47,279 --> 02:02:51,279
the the part we're computing

2751
02:02:49,279 --> 02:02:53,519
here

2752
02:02:51,279 --> 02:02:53,519
right

2753
02:02:53,760 --> 02:02:58,840
so we don't really need get cell bounds

2754
02:02:55,679 --> 02:03:01,920
we just need get cell center

2755
02:02:58,840 --> 02:03:04,319
uh but

2756
02:03:01,920 --> 02:03:04,319
i mean

2757
02:03:05,039 --> 02:03:09,039
you know probably we don't care because

2758
02:03:06,560 --> 02:03:09,039
like i said

2759
02:03:12,719 --> 02:03:17,039
right now we're just reverse engineering

2760
02:03:14,238 --> 02:03:18,959
this for testing purposes anyway

2761
02:03:17,039 --> 02:03:20,079
so i would assume

2762
02:03:18,960 --> 02:03:21,840
that

2763
02:03:20,079 --> 02:03:22,719
you know this is fine

2764
02:03:21,840 --> 02:03:25,360
so

2765
02:03:22,719 --> 02:03:26,399
get cell bounds

2766
02:03:25,359 --> 02:03:27,920
uh

2767
02:03:26,399 --> 02:03:32,960
it looks like we could have just called

2768
02:03:27,920 --> 02:03:34,880
instead get cell center p which is fine

2769
02:03:32,960 --> 02:03:37,279
uh and that gives us

2770
02:03:34,880 --> 02:03:39,760
the i think that gives us what we want

2771
02:03:37,279 --> 02:03:41,759
which is cell center

2772
02:03:39,760 --> 02:03:43,520
um

2773
02:03:41,760 --> 02:03:46,480
again we don't care about the z value

2774
02:03:43,520 --> 02:03:46,480
it's right it's relevant

2775
02:03:47,840 --> 02:03:50,159
oops

2776
02:03:52,319 --> 02:03:55,759
now maybe i shouldn't do it that way

2777
02:03:53,760 --> 02:03:57,280
maybe i'll since we're doing x y's here

2778
02:03:55,760 --> 02:03:59,760
maybe we'll make it clearer it's like

2779
02:03:57,279 --> 02:04:00,639
those are the xy's

2780
02:03:59,760 --> 02:04:03,920
so

2781
02:04:00,639 --> 02:04:06,400
uh that's the entirety of the setup code

2782
02:04:03,920 --> 02:04:06,399
i think

2783
02:04:07,439 --> 02:04:13,039
which is to say that this this stepping

2784
02:04:10,719 --> 02:04:15,679
bit here before we enter the walk

2785
02:04:13,039 --> 02:04:17,198
iteration it's just that piece of code

2786
02:04:15,679 --> 02:04:19,760
goes there

2787
02:04:17,198 --> 02:04:22,078
we then have the walk code which is this

2788
02:04:19,760 --> 02:04:22,079
code

2789
02:04:22,158 --> 02:04:25,399
in the loop

2790
02:04:28,639 --> 02:04:30,880
and in here

2791
02:04:30,078 --> 02:04:33,039
uh

2792
02:04:30,880 --> 02:04:35,039
this would just be at the end this would

2793
02:04:33,039 --> 02:04:38,158
be how we would decide to move so

2794
02:04:35,039 --> 02:04:40,880
previously we were doing this move which

2795
02:04:38,158 --> 02:04:44,638
is you know looking up the

2796
02:04:40,880 --> 02:04:44,639
the walk table by you know

2797
02:04:47,279 --> 02:04:51,679
by looking up the walk table to get what

2798
02:04:49,840 --> 02:04:54,639
cell you move to next

2799
02:04:51,679 --> 02:04:57,599
and here we would instead be taking

2800
02:04:54,639 --> 02:05:00,719
uh that dirk her p-value which we step

2801
02:04:57,599 --> 02:05:01,520
up here we change it to stepping her p

2802
02:05:00,719 --> 02:05:02,719
um

2803
02:05:01,520 --> 02:05:06,599
but so that

2804
02:05:02,719 --> 02:05:06,599
i'm stepping her p-value

2805
02:05:06,880 --> 02:05:12,400
uh the ray direction is just called raid

2806
02:05:10,238 --> 02:05:14,718
or single right i think

2807
02:05:12,399 --> 02:05:14,719
um

2808
02:05:18,399 --> 02:05:23,439
what's this

2809
02:05:21,520 --> 02:05:25,119
uh

2810
02:05:23,439 --> 02:05:25,919
okay

2811
02:05:25,118 --> 02:05:26,869
so

2812
02:05:25,920 --> 02:05:29,279
this code here

2813
02:05:26,869 --> 02:05:32,238
[Music]

2814
02:05:29,279 --> 02:05:32,238
instead of durr

2815
02:05:32,560 --> 02:05:38,480
is or single

2816
02:05:34,800 --> 02:05:42,560
and the dx and the dy are how far apart

2817
02:05:38,479 --> 02:05:44,238
these are so this is just like voxel dim

2818
02:05:42,560 --> 02:05:45,119
x and y

2819
02:05:44,238 --> 02:05:47,519
right

2820
02:05:45,118 --> 02:05:49,198
but the problem that we have

2821
02:05:47,520 --> 02:05:51,040
and so why we need to introduce a

2822
02:05:49,198 --> 02:05:53,678
separate value here is we don't know

2823
02:05:51,039 --> 02:05:57,840
what direction we're stepping in

2824
02:05:53,679 --> 02:06:00,560
because we would need to know the sign

2825
02:05:57,840 --> 02:06:03,360
of the value first

2826
02:06:00,560 --> 02:06:05,199
so because the ray we only are

2827
02:06:03,359 --> 02:06:07,598
considering one kind of step we don't

2828
02:06:05,198 --> 02:06:10,399
look at like left and right or up and

2829
02:06:07,599 --> 02:06:12,239
down we only look at if the ray is going

2830
02:06:10,399 --> 02:06:13,839
leftward we look at stepping left if the

2831
02:06:12,238 --> 02:06:15,439
ray is going upward we look at stepping

2832
02:06:13,840 --> 02:06:16,719
up right

2833
02:06:15,439 --> 02:06:18,479
um

2834
02:06:16,719 --> 02:06:19,840
we don't look at down if the ray is

2835
02:06:18,479 --> 02:06:22,078
stepping up and we don't look at right

2836
02:06:19,840 --> 02:06:24,800
if the array is stepping left

2837
02:06:22,078 --> 02:06:28,238
so we really have to compute here not

2838
02:06:24,800 --> 02:06:31,440
compute here but store at the outset

2839
02:06:28,238 --> 02:06:35,198
um stepping delta

2840
02:06:31,439 --> 02:06:35,198
x or whatever and stepping

2841
02:06:35,359 --> 02:06:40,000
delta y

2842
02:06:36,880 --> 02:06:42,078
which are going to be like we don't have

2843
02:06:40,000 --> 02:06:44,800
to compute this every time they're just

2844
02:06:42,078 --> 02:06:46,078
going to be like a fixed value

2845
02:06:44,800 --> 02:06:46,960
like so

2846
02:06:46,078 --> 02:06:49,679
um

2847
02:06:46,960 --> 02:06:52,158
that we add because it doesn't change

2848
02:06:49,679 --> 02:06:55,039
the amount that you step in x or y you

2849
02:06:52,158 --> 02:06:57,598
always step by one whole grid square so

2850
02:06:55,039 --> 02:07:00,399
these are computed a priori based on the

2851
02:06:57,599 --> 02:07:02,880
ray direction once it is known and for

2852
02:07:00,399 --> 02:07:05,598
each step along the grid we don't need

2853
02:07:02,880 --> 02:07:08,239
to like recompute that so it's literally

2854
02:07:05,599 --> 02:07:08,239
just this

2855
02:07:08,960 --> 02:07:13,118
and then these dxdy values are just the

2856
02:07:12,238 --> 02:07:15,198
sign

2857
02:07:13,118 --> 02:07:18,078
they're just going to be like the sign

2858
02:07:15,198 --> 02:07:20,719
of the ray direction

2859
02:07:18,078 --> 02:07:20,719
so whatever

2860
02:07:23,760 --> 02:07:28,239
whatever the sign is of the

2861
02:07:26,158 --> 02:07:30,399
corresponding ray direction and i don't

2862
02:07:28,238 --> 02:07:30,809
actually know

2863
02:07:30,399 --> 02:07:33,888
um

2864
02:07:30,810 --> 02:07:33,889
[Music]

2865
02:07:34,719 --> 02:07:37,920
i think we can just call

2866
02:07:38,840 --> 02:07:44,719
this right here right so

2867
02:07:41,840 --> 02:07:47,760
the sine of is all we really need here

2868
02:07:44,719 --> 02:07:49,359
so it's it's really like sine of the

2869
02:07:47,760 --> 02:07:51,360
other one

2870
02:07:49,359 --> 02:07:55,198
it's times the sine of of whatever the

2871
02:07:51,359 --> 02:07:58,319
ray d single is or the ray

2872
02:07:55,198 --> 02:08:01,359
of the opposite one so you know in the y

2873
02:07:58,319 --> 02:08:04,639
step case it's it's the y so we have the

2874
02:08:01,359 --> 02:08:07,279
radius singles x times the sine of the y

2875
02:08:04,639 --> 02:08:09,039
times however big the voxel is in that

2876
02:08:07,279 --> 02:08:12,319
direction

2877
02:08:09,039 --> 02:08:12,319
which is just cell dim

2878
02:08:16,078 --> 02:08:20,559
right

2879
02:08:18,000 --> 02:08:23,279
uh and i think that's it

2880
02:08:20,560 --> 02:08:26,079
all we need to know now is oh this is

2881
02:08:23,279 --> 02:08:28,800
stepping kirkp here

2882
02:08:26,078 --> 02:08:33,198
uh all we need to know now

2883
02:08:28,800 --> 02:08:34,840
is how far you would move in each case

2884
02:08:33,198 --> 02:08:38,000
and that's the end of

2885
02:08:34,840 --> 02:08:39,920
it again really simple code here right

2886
02:08:38,000 --> 02:08:42,719
if you look at it you know who knows if

2887
02:08:39,920 --> 02:08:44,800
we did it right we might have bugs

2888
02:08:42,719 --> 02:08:46,399
but in terms of conceptually what

2889
02:08:44,800 --> 02:08:48,079
actually had to happen there it's pretty

2890
02:08:46,399 --> 02:08:49,118
simple and there's not a whole lot of

2891
02:08:48,078 --> 02:08:50,960
code

2892
02:08:49,118 --> 02:08:54,078
right there's not a whole lot of code

2893
02:08:50,960 --> 02:08:56,319
involved so that seems to uh you know

2894
02:08:54,078 --> 02:08:59,439
that seems to bode well

2895
02:08:56,319 --> 02:09:00,880
uh for for what we're looking at here

2896
02:08:59,439 --> 02:09:05,198
so

2897
02:09:00,880 --> 02:09:08,800
walk table entry oops walk table entry

2898
02:09:05,198 --> 02:09:10,399
um so the s16s that we use here for our

2899
02:09:08,800 --> 02:09:13,360
d grid

2900
02:09:10,399 --> 02:09:15,039
uh which could just be s32s in this case

2901
02:09:13,359 --> 02:09:16,399
because we don't care about how big they

2902
02:09:15,039 --> 02:09:18,479
are now since they're just going to be

2903
02:09:16,399 --> 02:09:20,879
like local they're not stored in a table

2904
02:09:18,479 --> 02:09:23,879
and this will hopefully go away

2905
02:09:20,880 --> 02:09:23,880
um

2906
02:09:36,960 --> 02:09:42,480
so at this point those values are just

2907
02:09:39,439 --> 02:09:44,399
going to be whatever the actual span is

2908
02:09:42,479 --> 02:09:46,718
we know this from compute walk table

2909
02:09:44,399 --> 02:09:50,638
right like whatever the actual span is

2910
02:09:46,719 --> 02:09:51,679
it's step best dim right that step value

2911
02:09:50,639 --> 02:09:53,920
and so

2912
02:09:51,679 --> 02:09:53,920
uh

2913
02:09:55,118 --> 02:10:00,000
we need that i suppose the problem we

2914
02:09:57,439 --> 02:10:02,638
get there is it has to also be it has to

2915
02:10:00,000 --> 02:10:04,399
correspond to the sign correctly again

2916
02:10:02,639 --> 02:10:05,920
right

2917
02:10:04,399 --> 02:10:08,078
so that does

2918
02:10:05,920 --> 02:10:10,480
it is a little bit annoying

2919
02:10:08,078 --> 02:10:10,479
um

2920
02:10:13,439 --> 02:10:17,919
like it's not as free as we would like

2921
02:10:15,520 --> 02:10:17,920
it to be

2922
02:10:27,599 --> 02:10:34,239
right so we have the the

2923
02:10:30,960 --> 02:10:39,078
we have the voxel dimension

2924
02:10:34,238 --> 02:10:39,078
like the the spatial grid

2925
02:10:47,840 --> 02:10:50,078
and

2926
02:10:55,760 --> 02:11:01,119
i don't know

2927
02:10:57,198 --> 02:11:01,118
the voxel dim for the spatial grid

2928
02:11:03,359 --> 02:11:06,078
uh is

2929
02:11:06,960 --> 02:11:12,000
cell count right

2930
02:11:09,679 --> 02:11:14,480
so the cell count x is how much you

2931
02:11:12,000 --> 02:11:16,479
would move in x and the cell count y

2932
02:11:14,479 --> 02:11:19,678
times the cell count x is how much you

2933
02:11:16,479 --> 02:11:19,678
would move um

2934
02:11:21,039 --> 02:11:24,719
for a d step in y

2935
02:11:23,679 --> 02:11:26,960
and

2936
02:11:24,719 --> 02:11:29,520
those two would both be

2937
02:11:26,960 --> 02:11:31,679
you just need to negate them

2938
02:11:29,520 --> 02:11:34,159
um

2939
02:11:31,679 --> 02:11:36,800
like we can just

2940
02:11:34,158 --> 02:11:38,638
these are you know just basic values

2941
02:11:36,800 --> 02:11:40,960
and the problem is here you've got this

2942
02:11:38,639 --> 02:11:44,960
sort of sign you know you again have to

2943
02:11:40,960 --> 02:11:47,279
do this this sign check which seems bad

2944
02:11:44,960 --> 02:11:47,279
um

2945
02:11:47,359 --> 02:11:52,479
the the sign of one doesn't seem so bad

2946
02:11:50,158 --> 02:11:55,359
but this one kind of does

2947
02:11:52,479 --> 02:11:57,759
so these have to be selected based on

2948
02:11:55,359 --> 02:11:58,719
which direction the ray goes

2949
02:11:57,760 --> 02:12:01,599
um

2950
02:11:58,719 --> 02:12:04,719
which is which kind of sucks

2951
02:12:01,599 --> 02:12:08,239
right because it's a float check

2952
02:12:04,719 --> 02:12:10,560
you've gotta you gotta like send the

2953
02:12:08,238 --> 02:12:12,000
you've gotta send the sign bit over you

2954
02:12:10,560 --> 02:12:13,679
know what i mean

2955
02:12:12,000 --> 02:12:15,520
uh which which

2956
02:12:13,679 --> 02:12:17,679
is not good right

2957
02:12:15,520 --> 02:12:20,000
so you have this nasty problem of now

2958
02:12:17,679 --> 02:12:22,239
you're doing this which is ray d single

2959
02:12:20,000 --> 02:12:22,238
x

2960
02:12:22,800 --> 02:12:27,920
if it's less than zero then it's d grid

2961
02:12:24,960 --> 02:12:29,520
index x base otherwise it's the grid

2962
02:12:27,920 --> 02:12:31,679
index

2963
02:12:29,520 --> 02:12:34,719
uh

2964
02:12:31,679 --> 02:12:36,480
x base without the minus right that just

2965
02:12:34,719 --> 02:12:38,399
is crappy

2966
02:12:36,479 --> 02:12:40,158
um there's really no two ways about it

2967
02:12:38,399 --> 02:12:41,679
that's not good

2968
02:12:40,158 --> 02:12:43,439
i don't think

2969
02:12:41,679 --> 02:12:47,639
so we probably need to figure out a

2970
02:12:43,439 --> 02:12:47,638
better way to do that stepping

2971
02:12:48,319 --> 02:12:52,799
like it might almost be better to like

2972
02:12:50,238 --> 02:12:56,319
do it in the simdi registers and then

2973
02:12:52,800 --> 02:12:58,639
just move the value out

2974
02:12:56,319 --> 02:12:59,599
just one time to do the lookup or

2975
02:12:58,639 --> 02:13:02,800
something

2976
02:12:59,599 --> 02:13:03,679
it just that just seems bad

2977
02:13:02,800 --> 02:13:05,360
to me

2978
02:13:03,679 --> 02:13:06,239
you know what i mean

2979
02:13:05,359 --> 02:13:09,039
um

2980
02:13:06,238 --> 02:13:09,039
that just seems

2981
02:13:10,960 --> 02:13:15,960
that seems not

2982
02:13:12,960 --> 02:13:15,960
good

2983
02:13:23,520 --> 02:13:28,880
is grid index and sixteen is that the

2984
02:13:25,439 --> 02:13:28,879
price yeah it is okay

2985
02:13:29,599 --> 02:13:33,920
fine i don't care they can be a 16 if

2986
02:13:32,158 --> 02:13:35,519
you want

2987
02:13:33,920 --> 02:13:38,520
we'll probably change that eventually

2988
02:13:35,520 --> 02:13:38,520
but

2989
02:13:50,479 --> 02:13:53,959
so okay

2990
02:14:01,679 --> 02:14:03,520
oh

2991
02:14:02,479 --> 02:14:06,479
whoops

2992
02:14:03,520 --> 02:14:08,719
um okay so yeah uh at this point now we

2993
02:14:06,479 --> 02:14:10,479
have the problem of we can't actually

2994
02:14:08,719 --> 02:14:12,158
run both of these codes at the same time

2995
02:14:10,479 --> 02:14:13,678
because and actually add to the real

2996
02:14:12,158 --> 02:14:15,759
value so i probably need to introduce a

2997
02:14:13,679 --> 02:14:18,719
synthetic value here that we're checking

2998
02:14:15,760 --> 02:14:20,800
right um because the i can't add to the

2999
02:14:18,719 --> 02:14:22,960
grid index twice that would totally that

3000
02:14:20,800 --> 02:14:25,599
would totally break um

3001
02:14:22,960 --> 02:14:28,639
so we probably want a grid index that's

3002
02:14:25,599 --> 02:14:28,949
like our check grid index here

3003
02:14:28,639 --> 02:14:30,078
um

3004
02:14:28,949 --> 02:14:31,760
[Music]

3005
02:14:30,078 --> 02:14:34,238
that now we can go and see if this

3006
02:14:31,760 --> 02:14:36,159
produces similar results at all to the

3007
02:14:34,238 --> 02:14:39,158
other one that we had you know what i

3008
02:14:36,158 --> 02:14:39,158
mean

3009
02:14:46,639 --> 02:14:50,560
uh and so now if we run it it should

3010
02:14:48,479 --> 02:14:52,000
have the same behavior as before because

3011
02:14:50,560 --> 02:14:53,679
the all the lighting should still be

3012
02:14:52,000 --> 02:14:55,039
running through the same path as it was

3013
02:14:53,679 --> 02:14:56,719
previously

3014
02:14:55,039 --> 02:15:00,479
there shouldn't be any difference right

3015
02:14:56,719 --> 02:15:03,359
and so if you if you wait until that

3016
02:15:00,479 --> 02:15:05,118
annoying part of the bug goes away

3017
02:15:03,359 --> 02:15:07,519
um

3018
02:15:05,118 --> 02:15:09,598
then then we're fine right and it should

3019
02:15:07,520 --> 02:15:11,440
just be the same as it was which it does

3020
02:15:09,599 --> 02:15:14,480
appear to be right

3021
02:15:11,439 --> 02:15:16,719
uh and then if i go and i say let's

3022
02:15:14,479 --> 02:15:18,238
switch to the debug version

3023
02:15:16,719 --> 02:15:22,520
of the builds

3024
02:15:18,238 --> 02:15:22,519
and we build um

3025
02:15:23,118 --> 02:15:27,359
i would go ahead now and say we should

3026
02:15:25,840 --> 02:15:30,400
be able to

3027
02:15:27,359 --> 02:15:32,000
set a breakpoint and look at these step

3028
02:15:30,399 --> 02:15:33,439
differences

3029
02:15:32,000 --> 02:15:37,520
um to see

3030
02:15:33,439 --> 02:15:40,078
what we end up with right

3031
02:15:37,520 --> 02:15:42,320
so like at this point in the code

3032
02:15:40,078 --> 02:15:44,000
uh we have a check grid index

3033
02:15:42,319 --> 02:15:45,840
and a grid index

3034
02:15:44,000 --> 02:15:47,198
um and we should be able to now like

3035
02:15:45,840 --> 02:15:48,800
start to debug

3036
02:15:47,198 --> 02:15:53,319
those

3037
02:15:48,800 --> 02:15:53,320
you know what i mean um

3038
02:16:07,520 --> 02:16:13,360
you notice realized that what everything

3039
02:16:09,760 --> 02:16:13,360
i just said to you was a total lie

3040
02:16:17,198 --> 02:16:19,839
um

3041
02:16:20,960 --> 02:16:23,840
i have to remember to update remedy by

3042
02:16:22,399 --> 02:16:25,279
the way that bug got fixed where it

3043
02:16:23,840 --> 02:16:27,520
doesn't stop

3044
02:16:25,279 --> 02:16:29,679
the executable and i just forgot to

3045
02:16:27,520 --> 02:16:31,679
update we should update

3046
02:16:29,679 --> 02:16:33,679
so we hit that occasionally

3047
02:16:31,679 --> 02:16:35,439
um

3048
02:16:33,679 --> 02:16:37,760
i just realized that's totally wrong

3049
02:16:35,439 --> 02:16:40,639
what i said before the the this d grid

3050
02:16:37,760 --> 02:16:43,599
index x it's the other way around so

3051
02:16:40,638 --> 02:16:45,920
the y is is the one that steps by x and

3052
02:16:43,599 --> 02:16:47,599
the x steps by one i don't know why i

3053
02:16:45,920 --> 02:16:50,159
did a z step there for some reason

3054
02:16:47,599 --> 02:16:51,200
that's just you know addled brain

3055
02:16:50,159 --> 02:16:55,039
um

3056
02:16:51,200 --> 02:16:55,840
so let's try that one more time

3057
02:16:55,040 --> 02:16:57,679
i

3058
02:16:55,840 --> 02:16:59,280
and i don't know if i probably still

3059
02:16:57,679 --> 02:17:01,599
have to set the breakpoint i think i may

3060
02:16:59,280 --> 02:17:05,120
have removed it

3061
02:17:01,599 --> 02:17:06,960
but i still want that breakpoint

3062
02:17:05,120 --> 02:17:09,359
in the lighting code

3063
02:17:06,959 --> 02:17:09,358
please

3064
02:17:10,318 --> 02:17:14,799
so let's

3065
02:17:11,920 --> 02:17:17,359
go back and reset it so that i can look

3066
02:17:14,799 --> 02:17:19,599
at those two together

3067
02:17:17,359 --> 02:17:21,439
and

3068
02:17:19,599 --> 02:17:23,120
look at the differences between the grid

3069
02:17:21,439 --> 02:17:26,318
indexes

3070
02:17:23,120 --> 02:17:28,880
so like same piece of code

3071
02:17:26,318 --> 02:17:30,159
and i just wanted to look at these so

3072
02:17:28,879 --> 02:17:33,119
we're looking at the difference between

3073
02:17:30,159 --> 02:17:36,119
check grid index and grid index

3074
02:17:33,120 --> 02:17:36,120
um

3075
02:17:44,398 --> 02:17:48,318
that should this looks off

3076
02:17:46,799 --> 02:17:50,398
also

3077
02:17:48,318 --> 02:17:51,840
that's bad but hey look they're pretty

3078
02:17:50,398 --> 02:17:53,760
similar

3079
02:17:51,840 --> 02:17:56,000
they're actually exactly the same

3080
02:17:53,760 --> 02:17:57,679
so let's find out if this turns out to

3081
02:17:56,000 --> 02:18:00,478
be roughly correct most of the time

3082
02:17:57,679 --> 02:18:02,638
let's see how often we hit an assert

3083
02:18:00,478 --> 02:18:05,199
designed to catch them

3084
02:18:02,638 --> 02:18:08,398
diverging so if i go here and say assert

3085
02:18:05,200 --> 02:18:10,639
grid index equals check grid index

3086
02:18:08,398 --> 02:18:12,478
like how often does that hit all the

3087
02:18:10,638 --> 02:18:14,398
time a little bit of the time sometimes

3088
02:18:12,478 --> 02:18:16,398
etc

3089
02:18:14,398 --> 02:18:20,679
uh and i don't know so we're gonna find

3090
02:18:16,398 --> 02:18:20,679
out how often that assert hits

3091
02:18:24,318 --> 02:18:27,760
i definitely have to go let's just

3092
02:18:25,679 --> 02:18:30,318
update remedy while we're here uh

3093
02:18:27,760 --> 02:18:32,079
because we we do need that

3094
02:18:30,318 --> 02:18:34,239
uh to be patched

3095
02:18:32,079 --> 02:18:35,599
so hold on one second

3096
02:18:34,239 --> 02:18:36,840
i will

3097
02:18:35,599 --> 02:18:38,398
grab the new

3098
02:18:36,840 --> 02:18:40,159
version

3099
02:18:38,398 --> 02:18:41,679
um because like

3100
02:18:40,159 --> 02:18:44,959
that was causing us a huge amount of

3101
02:18:41,679 --> 02:18:48,478
problems and there's no real

3102
02:18:44,959 --> 02:18:48,478
need to keep suffering through that

3103
02:18:51,679 --> 02:18:55,439
so let's go ahead and pull down

3104
02:18:55,840 --> 02:18:59,318
an itch io

3105
02:19:10,239 --> 02:19:13,439
where

3106
02:19:11,200 --> 02:19:13,439
is

3107
02:19:13,760 --> 02:19:16,880
remedy no

3108
02:19:15,679 --> 02:19:19,439
remedy

3109
02:19:16,879 --> 02:19:23,839
is somewhere there it is

3110
02:19:19,439 --> 02:19:23,840
so i will download the latest version

3111
02:19:24,318 --> 02:19:27,679
which is 364

3112
02:19:28,398 --> 02:19:37,358
and i will save that to the drive

3113
02:19:32,159 --> 02:19:39,599
i will then take that said drive

3114
02:19:37,359 --> 02:19:39,599
and

3115
02:19:40,079 --> 02:19:45,558
plug it in

3116
02:19:42,558 --> 02:19:45,558
to

3117
02:19:51,120 --> 02:19:54,319
w

3118
02:19:53,280 --> 02:19:55,359
uh

3119
02:19:54,318 --> 02:19:58,000
apps

3120
02:19:55,359 --> 02:20:00,640
it's in here right yeah remedy bg

3121
02:19:58,000 --> 02:20:03,280
so i will go ahead and just

3122
02:20:00,639 --> 02:20:05,760
copy this

3123
02:20:03,280 --> 02:20:05,760
over

3124
02:20:07,600 --> 02:20:13,680
and i think that should do it

3125
02:20:11,040 --> 02:20:18,640
so that should be all we need to fix

3126
02:20:13,680 --> 02:20:19,840
that problem which is good hopefully

3127
02:20:18,639 --> 02:20:21,760
um

3128
02:20:19,840 --> 02:20:23,520
and

3129
02:20:21,760 --> 02:20:24,398
back we go

3130
02:20:23,520 --> 02:20:27,359
so

3131
02:20:24,398 --> 02:20:31,599
i open this up i run it

3132
02:20:27,359 --> 02:20:34,640
and i just look to see whether uh this

3133
02:20:31,600 --> 02:20:36,000
hits often or or not often

3134
02:20:34,639 --> 02:20:37,920
you know what i mean

3135
02:20:36,000 --> 02:20:40,799
and furthermore are they off by like one

3136
02:20:37,920 --> 02:20:43,600
step or are they off by like a lot steps

3137
02:20:40,799 --> 02:20:46,398
you know and and i don't know

3138
02:20:43,600 --> 02:20:49,439
so that looks pretty bad

3139
02:20:46,398 --> 02:20:51,039
i'm not sure what that would imply

3140
02:20:49,439 --> 02:20:54,040
exactly

3141
02:20:51,040 --> 02:20:54,040
um

3142
02:21:04,000 --> 02:21:06,879
it's just okay so it just picked

3143
02:21:05,600 --> 02:21:10,680
differently

3144
02:21:06,879 --> 02:21:10,679
in this case i guess

3145
02:21:23,280 --> 02:21:28,720
so honestly

3146
02:21:26,559 --> 02:21:31,439
that's a really hard one to call i don't

3147
02:21:28,719 --> 02:21:34,079
even know if that means that anything is

3148
02:21:31,439 --> 02:21:37,200
wrong here that could just be when the

3149
02:21:34,079 --> 02:21:39,280
two ways of checking diverge which might

3150
02:21:37,200 --> 02:21:42,319
be fine also the other one is

3151
02:21:39,280 --> 02:21:42,319
potentially buggy

3152
02:21:42,639 --> 02:21:46,719
so it's like

3153
02:21:45,520 --> 02:21:49,359
um

3154
02:21:46,719 --> 02:21:53,199
so i would say i'm just curious like

3155
02:21:49,359 --> 02:21:53,200
we'll save this for next weekend i think

3156
02:21:53,280 --> 02:21:59,040
in general but i'm curious to know like

3157
02:21:55,760 --> 02:22:00,159
what happens if we just swap these two

3158
02:21:59,040 --> 02:22:03,439
you know

3159
02:22:00,159 --> 02:22:03,439
so we go like all right

3160
02:22:05,439 --> 02:22:10,639
um grid index is now updated by our

3161
02:22:08,159 --> 02:22:10,959
weird one

3162
02:22:10,639 --> 02:22:14,219
um

3163
02:22:10,959 --> 02:22:14,219
[Music]

3164
02:22:18,719 --> 02:22:22,519
and and good luck

3165
02:22:23,920 --> 02:22:26,159
uh

3166
02:22:26,639 --> 02:22:30,879
you know what happens how bad is it how

3167
02:22:29,200 --> 02:22:33,600
far off is our new routine from our old

3168
02:22:30,879 --> 02:22:35,599
routine is it an absolute disaster

3169
02:22:33,600 --> 02:22:38,000
slight disaster of course i guess this

3170
02:22:35,600 --> 02:22:40,318
doesn't really tell us much because

3171
02:22:38,000 --> 02:22:40,318
um

3172
02:22:41,200 --> 02:22:44,960
we're still running in in slow mode so

3173
02:22:43,359 --> 02:22:46,640
we're not going to see like a huge

3174
02:22:44,959 --> 02:22:49,279
amount of anything really happening

3175
02:22:46,639 --> 02:22:49,279
there but

3176
02:22:49,760 --> 02:22:53,920
all right so now we're like not really

3177
02:22:51,600 --> 02:22:55,439
using the walk table except to compute t

3178
02:22:53,920 --> 02:22:57,280
terminate which is something we will

3179
02:22:55,439 --> 02:22:58,159
have to address later

3180
02:22:57,280 --> 02:23:00,720
um

3181
02:22:58,159 --> 02:23:04,079
but you know now we're in theory

3182
02:23:00,719 --> 02:23:06,000
operating without that actual uh piece

3183
02:23:04,079 --> 02:23:08,239
of the code like without the walk table

3184
02:23:06,000 --> 02:23:10,159
being necessary to do the spatial uh

3185
02:23:08,239 --> 02:23:12,000
lookups right

3186
02:23:10,159 --> 02:23:13,439
um and so we can sort of see what

3187
02:23:12,000 --> 02:23:15,840
happens with that i don't know that we

3188
02:23:13,439 --> 02:23:19,840
would expect much difference uh but it

3189
02:23:15,840 --> 02:23:19,840
is just one nice step forward right

3190
02:23:22,959 --> 02:23:26,959
and honestly

3191
02:23:24,239 --> 02:23:30,359
are we still are we still using

3192
02:23:26,959 --> 02:23:30,358
instant update

3193
02:23:35,040 --> 02:23:38,640
we are

3194
02:23:36,478 --> 02:23:43,039
so that was the bug

3195
02:23:38,639 --> 02:23:43,039
the lighting tables actually are a bug

3196
02:23:43,600 --> 02:23:48,479
it doesn't mean we don't have another

3197
02:23:45,040 --> 02:23:48,479
bug but it does look like

3198
02:23:52,398 --> 02:23:59,398
that particular bug gets fixed by

3199
02:23:55,520 --> 02:23:59,399
getting rid of the walk table

3200
02:24:00,398 --> 02:24:02,719
right

3201
02:24:06,000 --> 02:24:11,680
so our walk table was messed up

3202
02:24:09,200 --> 02:24:13,439
as we suspected and i do think i made

3203
02:24:11,680 --> 02:24:15,200
the right call because i think this is

3204
02:24:13,439 --> 02:24:16,960
simple enough that we should be pursuing

3205
02:24:15,200 --> 02:24:18,000
this one because it will simplify our

3206
02:24:16,959 --> 02:24:19,358
lives

3207
02:24:18,000 --> 02:24:21,120
right

3208
02:24:19,359 --> 02:24:22,720
so t terminate

3209
02:24:21,120 --> 02:24:24,560
is still a problem because we don't

3210
02:24:22,719 --> 02:24:26,559
actually have a way to update to

3211
02:24:24,559 --> 02:24:28,398
terminate at the moment

3212
02:24:26,559 --> 02:24:30,959
um and

3213
02:24:28,398 --> 02:24:30,959
i guess

3214
02:24:37,920 --> 02:24:42,559
the only reason that we care about

3215
02:24:39,439 --> 02:24:44,720
t-terminate at all

3216
02:24:42,559 --> 02:24:46,879
t terminate was was

3217
02:24:44,719 --> 02:24:47,679
there for only one reason

3218
02:24:46,879 --> 02:24:49,119
uh

3219
02:24:47,680 --> 02:24:51,359
and

3220
02:24:49,120 --> 02:24:51,359
like

3221
02:24:54,559 --> 02:24:57,840
t terminate was only there so that when

3222
02:24:56,959 --> 02:25:00,398
you

3223
02:24:57,840 --> 02:25:03,760
run out of time to sample something like

3224
02:25:00,398 --> 02:25:06,559
you you've gone some distance and you

3225
02:25:03,760 --> 02:25:08,639
haven't hit anything uh where do you

3226
02:25:06,559 --> 02:25:10,959
actually sample the lighting from at

3227
02:25:08,639 --> 02:25:12,799
that point and one answer is you don't

3228
02:25:10,959 --> 02:25:16,239
sample it at all but the way we chose to

3229
02:25:12,799 --> 02:25:18,398
do it was look if you check that far

3230
02:25:16,239 --> 02:25:19,840
away from where you are right now uh

3231
02:25:18,398 --> 02:25:22,879
eventually what you should just do is

3232
02:25:19,840 --> 02:25:25,920
sample the light that's at that place

3233
02:25:22,879 --> 02:25:26,719
and consider you getting the same light

3234
02:25:25,920 --> 02:25:29,520
uh

3235
02:25:26,719 --> 02:25:31,760
convected forward to you right

3236
02:25:29,520 --> 02:25:35,680
now you know we were doing that because

3237
02:25:31,760 --> 02:25:35,680
it was expensive to do something else

3238
02:25:36,000 --> 02:25:39,359
it's possible that we just should

3239
02:25:37,439 --> 02:25:41,680
consider that ray to have not hit

3240
02:25:39,359 --> 02:25:43,120
anything and don't actually run the rest

3241
02:25:41,680 --> 02:25:44,159
of the routine

3242
02:25:43,120 --> 02:25:46,960
um

3243
02:25:44,159 --> 02:25:49,039
you know that's possible

3244
02:25:46,959 --> 02:25:50,839
if we look at what happens with t

3245
02:25:49,040 --> 02:25:52,880
terminate for example

3246
02:25:50,840 --> 02:25:54,318
here i

3247
02:25:52,879 --> 02:25:58,799
it's

3248
02:25:54,318 --> 02:25:58,799
it's it's what is used right like

3249
02:26:03,760 --> 02:26:07,478
we we use

3250
02:26:16,159 --> 02:26:24,079
so probe sample p single

3251
02:26:20,559 --> 02:26:27,079
we use what ends up being the

3252
02:26:24,079 --> 02:26:27,079
uh

3253
02:26:45,439 --> 02:26:48,600
you know

3254
02:27:04,000 --> 02:27:07,359
anyway uh i had a thought there but i'm

3255
02:27:05,840 --> 02:27:09,280
gonna not i'm not gonna think that

3256
02:27:07,359 --> 02:27:12,079
particular thought so anyway if you look

3257
02:27:09,280 --> 02:27:14,239
at what happens here when we look at uh

3258
02:27:12,079 --> 02:27:16,559
updating probe p sample signal right

3259
02:27:14,239 --> 02:27:19,199
when we when we go through here and we

3260
02:27:16,559 --> 02:27:22,719
do like right here you can see us

3261
02:27:19,200 --> 02:27:22,720
actually doing the raycast test

3262
02:27:24,398 --> 02:27:27,599
excuse me

3263
02:27:25,760 --> 02:27:30,840
we end up in a path that's like did we

3264
02:27:27,600 --> 02:27:30,840
hit anything

3265
02:27:31,439 --> 02:27:34,800
in the path where we say like did we hit

3266
02:27:33,120 --> 02:27:38,079
anything

3267
02:27:34,799 --> 02:27:40,959
we update where we're going to sample

3268
02:27:38,079 --> 02:27:44,239
uh using this code so it's it's this

3269
02:27:40,959 --> 02:27:46,398
right pro probe sample piece single

3270
02:27:44,239 --> 02:27:48,639
excuse me

3271
02:27:46,398 --> 02:27:48,639
um

3272
02:27:49,359 --> 02:27:53,600
so

3273
02:27:50,318 --> 02:27:53,600
the question is

3274
02:27:55,439 --> 02:27:59,840
when we would normally fall out of this

3275
02:27:57,439 --> 02:27:59,840
loop

3276
02:28:04,478 --> 02:28:08,239
what we used to do is just say well

3277
02:28:06,318 --> 02:28:12,279
whatever the termination

3278
02:28:08,239 --> 02:28:12,280
location is for this thing

3279
02:28:14,559 --> 02:28:19,039
so all we really need is some way of

3280
02:28:17,200 --> 02:28:21,840
ensuring that we know

3281
02:28:19,040 --> 02:28:24,720
what where we would sample from

3282
02:28:21,840 --> 02:28:27,760
and we kind of know that like we could

3283
02:28:24,719 --> 02:28:31,840
just consider that location to be

3284
02:28:27,760 --> 02:28:34,398
wherever the cell center currently is

3285
02:28:31,840 --> 02:28:35,920
which we sort of know

3286
02:28:34,398 --> 02:28:38,639
i mean we don't really know we'd have to

3287
02:28:35,920 --> 02:28:41,840
keep updating it right

3288
02:28:38,639 --> 02:28:41,840
so it's like

3289
02:28:49,439 --> 02:28:55,840
also when this terminates probe piece

3290
02:28:51,840 --> 02:28:55,840
single would not be

3291
02:28:56,239 --> 02:29:00,799
yeah so i can see why this this wouldn't

3292
02:28:58,559 --> 02:29:02,959
quite work the same way but yeah you

3293
02:29:00,799 --> 02:29:05,279
could just say look probe sample p

3294
02:29:02,959 --> 02:29:08,398
single

3295
02:29:05,280 --> 02:29:10,560
what if it just never gets updated like

3296
02:29:08,398 --> 02:29:12,559
what if we just don't do that what if we

3297
02:29:10,559 --> 02:29:15,439
just don't sample

3298
02:29:12,559 --> 02:29:19,119
we don't use that convection process

3299
02:29:15,439 --> 02:29:22,120
is that just better if we don't do that

3300
02:29:19,120 --> 02:29:22,120
um

3301
02:29:32,318 --> 02:29:36,840
you know probably not but

3302
02:29:46,559 --> 02:29:51,439
so i guess what i would say here is well

3303
02:29:49,120 --> 02:29:54,000
you know we know

3304
02:29:51,439 --> 02:29:56,479
we know what grid cell we're in and we

3305
02:29:54,000 --> 02:29:57,920
could just sample from that grid cell i

3306
02:29:56,478 --> 02:29:59,760
guess

3307
02:29:57,920 --> 02:30:02,000
i don't i don't have a good i i don't

3308
02:29:59,760 --> 02:30:05,040
have a good idea here right but if if

3309
02:30:02,000 --> 02:30:06,719
you end up on a terminator

3310
02:30:05,040 --> 02:30:10,359
node

3311
02:30:06,719 --> 02:30:10,358
so you know

3312
02:30:25,840 --> 02:30:31,920
something like this i suppose

3313
02:30:29,120 --> 02:30:35,520
if we've gone too far or we hit the the

3314
02:30:31,920 --> 02:30:38,398
end then we need to have some value that

3315
02:30:35,520 --> 02:30:39,680
we like can step forward to

3316
02:30:38,398 --> 02:30:42,478
you know what i mean

3317
02:30:39,680 --> 02:30:44,880
and the question is where should that be

3318
02:30:42,478 --> 02:30:46,398
and you know maybe the answer is we

3319
02:30:44,879 --> 02:30:49,358
should just unpack

3320
02:30:46,398 --> 02:30:52,318
the ray index like we should just get

3321
02:30:49,359 --> 02:30:54,800
wherever we are in the thing

3322
02:30:52,318 --> 02:30:58,318
and unpack that or maybe the answer is

3323
02:30:54,799 --> 02:31:00,478
we track a t value forward as we step

3324
02:30:58,318 --> 02:31:04,398
i don't know

3325
02:31:00,478 --> 02:31:04,398
how smart that is though

3326
02:31:06,478 --> 02:31:10,599
i mean it's not that hard

3327
02:31:33,920 --> 02:31:37,680
it's not that hard because you know a

3328
02:31:36,079 --> 02:31:40,159
priori

3329
02:31:37,680 --> 02:31:42,960
how much each t-step is

3330
02:31:40,159 --> 02:31:43,920
so you know if you looked at t terminate

3331
02:31:42,959 --> 02:31:48,959
here

3332
02:31:43,920 --> 02:31:48,960
it's the same value either way like like

3333
02:31:53,439 --> 02:31:57,720
when you take a step forward

3334
02:32:00,318 --> 02:32:05,600
you know how far

3335
02:32:02,719 --> 02:32:09,039
in t the ray has to go

3336
02:32:05,600 --> 02:32:12,000
to move to the next cell over

3337
02:32:09,040 --> 02:32:14,960
because you know how far

3338
02:32:12,000 --> 02:32:16,398
you know the dot product of this of the

3339
02:32:14,959 --> 02:32:19,119
cell volume

3340
02:32:16,398 --> 02:32:22,318
with that t value

3341
02:32:19,120 --> 02:32:24,079
so you know i i can't say it's like my

3342
02:32:22,318 --> 02:32:26,079
favorite thing in the world but you

3343
02:32:24,079 --> 02:32:27,200
literally could just have one more of

3344
02:32:26,079 --> 02:32:29,840
these

3345
02:32:27,200 --> 02:32:29,840
that's like

3346
02:32:36,639 --> 02:32:41,358
this like that and it's just it sucks

3347
02:32:39,280 --> 02:32:43,840
because you've got too many things that

3348
02:32:41,359 --> 02:32:45,680
are like updating at that point

3349
02:32:43,840 --> 02:32:47,600
like like there's just too many

3350
02:32:45,680 --> 02:32:52,000
values here and it seems like you

3351
02:32:47,600 --> 02:32:56,800
probably would rather have less of those

3352
02:32:52,000 --> 02:33:00,000
um but that's really all you would need

3353
02:32:56,799 --> 02:33:02,079
so if you assumed that you took t

3354
02:33:00,000 --> 02:33:04,959
terminate and you said well we're going

3355
02:33:02,079 --> 02:33:08,079
to start out by saying

3356
02:33:04,959 --> 02:33:10,799
where is the t value along the ray for

3357
02:33:08,079 --> 02:33:12,239
this cell

3358
02:33:10,799 --> 02:33:14,879
yeah

3359
02:33:12,239 --> 02:33:17,879
so you basically say like t terminate

3360
02:33:14,879 --> 02:33:17,879
initial

3361
02:33:20,239 --> 02:33:25,840
uh and you know what that is it's it's

3362
02:33:23,280 --> 02:33:29,040
just the inner product

3363
02:33:25,840 --> 02:33:32,840
uh of the cell center

3364
02:33:29,040 --> 02:33:32,840
minus the ray origin

3365
02:33:34,478 --> 02:33:36,719
um

3366
02:33:38,879 --> 02:33:42,159
times the ray direction

3367
02:33:47,520 --> 02:33:51,680
sorry ray d single

3368
02:33:49,200 --> 02:33:54,640
so in other words to step

3369
02:33:51,680 --> 02:33:57,280
to step to the current center

3370
02:33:54,639 --> 02:33:58,879
where i we're going to step like

3371
02:33:57,280 --> 02:34:00,000
forwards or backwards it might actually

3372
02:33:58,879 --> 02:34:03,358
be backwards if we're pointing in the

3373
02:34:00,000 --> 02:34:04,398
wrong direction we step backwards in t

3374
02:34:03,359 --> 02:34:07,120
um

3375
02:34:04,398 --> 02:34:07,119
to hit that

3376
02:34:08,079 --> 02:34:12,079
um and i guess we don't even need to

3377
02:34:10,478 --> 02:34:14,559
talk about it as t-turning initial i

3378
02:34:12,079 --> 02:34:17,840
guess that's just t-terminate right it's

3379
02:34:14,559 --> 02:34:20,079
literally just this it's t terminate

3380
02:34:17,840 --> 02:34:22,719
um

3381
02:34:20,079 --> 02:34:26,000
and and and that's just that's this is

3382
02:34:22,719 --> 02:34:26,000
just it's just this value

3383
02:34:26,159 --> 02:34:31,439
it's it's that value spammed

3384
02:34:29,200 --> 02:34:33,280
um if we want this to be wide which

3385
02:34:31,439 --> 02:34:37,359
apparently we do

3386
02:34:33,280 --> 02:34:39,840
uh then it's just that value spammed

3387
02:34:37,359 --> 02:34:44,600
like like so i don't know if we have one

3388
02:34:39,840 --> 02:34:44,600
that that lofts up the entire thing

3389
02:34:49,439 --> 02:34:52,000
um

3390
02:34:52,959 --> 02:34:57,279
yeah it's just yeah if you just pass one

3391
02:34:55,200 --> 02:34:59,680
so like you know it's it's literally t

3392
02:34:57,280 --> 02:35:02,399
terminate would just start out

3393
02:34:59,680 --> 02:35:05,840
at whatever that value is

3394
02:35:02,398 --> 02:35:05,840
um i think that's just free

3395
02:35:09,359 --> 02:35:13,399
did i mess something up there

3396
02:35:18,959 --> 02:35:24,398
syntax error semicolon oh sorry about

3397
02:35:22,159 --> 02:35:24,398
that

3398
02:35:25,600 --> 02:35:29,120
um so we really just need to know the

3399
02:35:27,680 --> 02:35:32,159
two inner products with the ray

3400
02:35:29,120 --> 02:35:33,040
direction um for stepping the other way

3401
02:35:32,159 --> 02:35:36,239
right

3402
02:35:33,040 --> 02:35:38,840
so the amount of change the distance

3403
02:35:36,239 --> 02:35:40,559
along the ray you go in each

3404
02:35:38,840 --> 02:35:42,478
case

3405
02:35:40,559 --> 02:35:45,478
is

3406
02:35:42,478 --> 02:35:45,478
pre-computable

3407
02:35:47,760 --> 02:35:53,200
so the t-terminate step it's always

3408
02:35:50,719 --> 02:35:53,199
forward

3409
02:35:53,600 --> 02:35:57,600
um and it's always going to be the inner

3410
02:35:56,398 --> 02:35:59,840
product

3411
02:35:57,600 --> 02:36:03,520
uh of

3412
02:35:59,840 --> 02:36:03,520
whatever the ray direction is

3413
02:36:06,719 --> 02:36:10,879
times this at a particular step now it's

3414
02:36:09,040 --> 02:36:12,640
not really even the inner product

3415
02:36:10,879 --> 02:36:14,959
because you don't actually have to do

3416
02:36:12,639 --> 02:36:16,719
the entire thing right it's literally

3417
02:36:14,959 --> 02:36:18,478
always going to be zero everywhere

3418
02:36:16,719 --> 02:36:19,519
except for the one type of step you're

3419
02:36:18,478 --> 02:36:21,599
taking

3420
02:36:19,520 --> 02:36:23,200
so when you talk about like the cell

3421
02:36:21,600 --> 02:36:25,920
dimension if you're talking about how

3422
02:36:23,200 --> 02:36:28,880
far do we go along the ray if we want to

3423
02:36:25,920 --> 02:36:31,439
take one cell dimension x step well the

3424
02:36:28,879 --> 02:36:32,959
answer is you're just going to take

3425
02:36:31,439 --> 02:36:35,960
that times that component of the ray

3426
02:36:32,959 --> 02:36:35,959
direction

3427
02:36:36,478 --> 02:36:41,519
like like that's it because all the rest

3428
02:36:38,719 --> 02:36:43,438
of the of the values for self that

3429
02:36:41,520 --> 02:36:44,720
you're stepping zero in the other

3430
02:36:43,439 --> 02:36:47,600
directions

3431
02:36:44,719 --> 02:36:49,599
right so i believe it's literally just

3432
02:36:47,600 --> 02:36:51,840
those two values the like the ray d

3433
02:36:49,600 --> 02:36:51,840
single

3434
02:36:52,159 --> 02:36:58,159
uh in this case is is just

3435
02:36:55,920 --> 02:36:58,159
um

3436
02:36:59,760 --> 02:37:03,600
you you don't have to compute a full dot

3437
02:37:01,600 --> 02:37:04,800
product because you know that the cell

3438
02:37:03,600 --> 02:37:05,520
the cell dim

3439
02:37:04,799 --> 02:37:06,799
is

3440
02:37:05,520 --> 02:37:08,000
you're only stepping along one axis of

3441
02:37:06,799 --> 02:37:10,398
the cell dim the other ones are going to

3442
02:37:08,000 --> 02:37:12,959
be zero so it's always just going to be

3443
02:37:10,398 --> 02:37:14,799
that you know minor change that's all

3444
02:37:12,959 --> 02:37:16,398
that happens you don't have to do

3445
02:37:14,799 --> 02:37:18,879
anything else to compute

3446
02:37:16,398 --> 02:37:19,129
uh the actual value

3447
02:37:18,879 --> 02:37:20,478
so

3448
02:37:19,129 --> 02:37:21,599
[Music]

3449
02:37:20,478 --> 02:37:24,799
yeah

3450
02:37:21,600 --> 02:37:27,600
uh so anyway when you do t terminate uh

3451
02:37:24,799 --> 02:37:29,920
it's it's just gonna do a step and we

3452
02:37:27,600 --> 02:37:31,040
need those to be things we can add

3453
02:37:29,920 --> 02:37:34,719
together

3454
02:37:31,040 --> 02:37:37,280
so i don't actually know what the

3455
02:37:34,719 --> 02:37:39,840
because this wants to be an f-32

3456
02:37:37,280 --> 02:37:41,920
um i don't know that that you really

3457
02:37:39,840 --> 02:37:43,920
actually want to bother with keeping it

3458
02:37:41,920 --> 02:37:45,760
as an f324x but for now i'll just do

3459
02:37:43,920 --> 02:37:48,799
that because that's what

3460
02:37:45,760 --> 02:37:50,000
it apparently wants so that's fine um

3461
02:37:48,799 --> 02:37:52,799
these

3462
02:37:50,000 --> 02:37:57,280
these values just have to be um expanded

3463
02:37:52,799 --> 02:37:57,279
so when we when we c initially compute

3464
02:37:57,520 --> 02:38:00,880
uh what these two terminates are we need

3465
02:37:59,520 --> 02:38:02,720
to wrap them

3466
02:38:00,879 --> 02:38:04,159
so that they're replicated for wide so

3467
02:38:02,719 --> 02:38:05,519
that they flow through the four wide

3468
02:38:04,159 --> 02:38:08,159
path right

3469
02:38:05,520 --> 02:38:08,159
but that's it

3470
02:38:08,239 --> 02:38:14,478
um

3471
02:38:10,079 --> 02:38:15,600
whoopty do we now computed t terminate

3472
02:38:14,478 --> 02:38:17,679
um

3473
02:38:15,600 --> 02:38:19,600
and

3474
02:38:17,680 --> 02:38:21,040
so now we can also do the same check

3475
02:38:19,600 --> 02:38:22,960
that we were going to check before which

3476
02:38:21,040 --> 02:38:24,560
to see whether or not it actually seems

3477
02:38:22,959 --> 02:38:26,398
like it lines up

3478
02:38:24,559 --> 02:38:29,279
with the correct values

3479
02:38:26,398 --> 02:38:30,639
and i don't know

3480
02:38:29,280 --> 02:38:33,439
you know it's not going to be the same

3481
02:38:30,639 --> 02:38:36,159
anyway but either way i would say look

3482
02:38:33,439 --> 02:38:38,720
if we just turn off this now

3483
02:38:36,159 --> 02:38:42,039
um so t terminate is only being updated

3484
02:38:38,719 --> 02:38:42,039
by us

3485
02:38:43,280 --> 02:38:47,520
i want to say that will probably still

3486
02:38:45,760 --> 02:38:49,040
work maybe

3487
02:38:47,520 --> 02:38:50,880
um but of course it's hard to know

3488
02:38:49,040 --> 02:38:53,600
because our lighting still has the other

3489
02:38:50,879 --> 02:38:55,039
bug in it so you know who knows but i

3490
02:38:53,600 --> 02:38:57,040
want to say that you wouldn't see any

3491
02:38:55,040 --> 02:38:59,200
real difference in here

3492
02:38:57,040 --> 02:39:02,560
at that point but you know maybe there's

3493
02:38:59,200 --> 02:39:02,560
other problems i'm not sure

3494
02:39:07,439 --> 02:39:10,239
so

3495
02:39:08,559 --> 02:39:12,799
so i want to say and i'm just going to

3496
02:39:10,239 --> 02:39:15,199
make this command decision because hey

3497
02:39:12,799 --> 02:39:16,799
it's the end of the stream i say we just

3498
02:39:15,200 --> 02:39:18,800
pull out the walk tables they're

3499
02:39:16,799 --> 02:39:19,679
completely gone now

3500
02:39:18,799 --> 02:39:22,398
um

3501
02:39:19,680 --> 02:39:23,680
and and we call it a day so walk table

3502
02:39:22,398 --> 02:39:25,840
gone

3503
02:39:23,680 --> 02:39:28,800
compute walk table is gone

3504
02:39:25,840 --> 02:39:31,439
i'm just getting rid of all of it

3505
02:39:28,799 --> 02:39:34,159
and it's it's considered

3506
02:39:31,439 --> 02:39:37,200
it's considered un unacceptable to have

3507
02:39:34,159 --> 02:39:39,520
walk tables now because we made that so

3508
02:39:37,200 --> 02:39:42,880
simple that presumably

3509
02:39:39,520 --> 02:39:42,880
it just doesn't matter anymore

3510
02:39:48,159 --> 02:39:52,879
so i'm removing 100

3511
02:39:50,398 --> 02:39:54,879
of all like the compute walk table stuff

3512
02:39:52,879 --> 02:39:57,199
all that's just gone

3513
02:39:54,879 --> 02:39:59,039
um the sample direction table is still

3514
02:39:57,200 --> 02:40:00,720
there at the moment

3515
02:39:59,040 --> 02:40:02,960
um

3516
02:40:00,719 --> 02:40:02,959
but

3517
02:40:03,600 --> 02:40:07,840
where does that get copied should that

3518
02:40:05,120 --> 02:40:07,840
get copied

3519
02:40:08,799 --> 02:40:13,519
oh it looks like that push array does

3520
02:40:10,959 --> 02:40:15,679
the copy i guess

3521
02:40:13,520 --> 02:40:18,560
no it doesn't so when does that get

3522
02:40:15,680 --> 02:40:20,800
copied did i do we copy that in the walk

3523
02:40:18,559 --> 02:40:22,719
map version if so we should probably get

3524
02:40:20,799 --> 02:40:23,840
rid of that in fact

3525
02:40:22,719 --> 02:40:25,358
uh

3526
02:40:23,840 --> 02:40:27,600
entirely like we should also just get

3527
02:40:25,359 --> 02:40:30,559
rid of the sample direction table thing

3528
02:40:27,600 --> 02:40:32,880
and just use it instead of you know use

3529
02:40:30,559 --> 02:40:35,920
the actual baked one

3530
02:40:32,879 --> 02:40:37,519
so in the inl like this thing sample

3531
02:40:35,920 --> 02:40:40,719
direction table

3532
02:40:37,520 --> 02:40:41,600
and and now it's just a v3

3533
02:40:40,719 --> 02:40:44,000
right

3534
02:40:41,600 --> 02:40:45,439
it doesn't have any other

3535
02:40:44,000 --> 02:40:49,639
intervening data

3536
02:40:45,439 --> 02:40:49,639
so the sample direction table

3537
02:40:50,478 --> 02:40:55,438
now is just a static piece of data we

3538
02:40:53,439 --> 02:40:58,720
don't allocate anything to store it or

3539
02:40:55,439 --> 02:40:58,720
any of that sort of nonsense

3540
02:40:59,359 --> 02:41:03,840
so i think that's the end of that

3541
02:41:05,760 --> 02:41:08,398
right

3542
02:41:06,879 --> 02:41:09,920
okay

3543
02:41:08,398 --> 02:41:13,358
so now in theory we're running

3544
02:41:09,920 --> 02:41:15,040
completely without walk tables now um

3545
02:41:13,359 --> 02:41:17,439
i don't know how the profile's doing but

3546
02:41:15,040 --> 02:41:19,359
it seems like it's roughly where it was

3547
02:41:17,439 --> 02:41:21,359
so i think that's fine

3548
02:41:19,359 --> 02:41:23,840
we could probably actually do some

3549
02:41:21,359 --> 02:41:25,359
optimization work at some point

3550
02:41:23,840 --> 02:41:26,719
because now we've simplified things

3551
02:41:25,359 --> 02:41:28,960
quite a bit there's probably a lot of

3552
02:41:26,719 --> 02:41:31,199
craft we can pull out of here

3553
02:41:28,959 --> 02:41:32,639
um but anyway we're still at 30 frames a

3554
02:41:31,200 --> 02:41:34,640
second even with the debug system

3555
02:41:32,639 --> 02:41:35,519
running in no particular we even have

3556
02:41:34,639 --> 02:41:37,519
like

3557
02:41:35,520 --> 02:41:39,680
light validation is still turned on

3558
02:41:37,520 --> 02:41:40,960
there's a asserts are turned on

3559
02:41:39,680 --> 02:41:43,120
all of that's still turned on and we're

3560
02:41:40,959 --> 02:41:44,559
still running at 30 frames a second

3561
02:41:43,120 --> 02:41:45,520
with the full global illumination

3562
02:41:44,559 --> 02:41:47,680
running

3563
02:41:45,520 --> 02:41:48,800
so i would call that a pretty reasonable

3564
02:41:47,680 --> 02:41:50,960
victory

3565
02:41:48,799 --> 02:41:53,438
um the lighting looks awesome

3566
02:41:50,959 --> 02:41:56,879
so i think we're down to now just one

3567
02:41:53,439 --> 02:41:59,200
bug which is our light leak that like

3568
02:41:56,879 --> 02:42:00,318
over overbrighting weird nonsense that's

3569
02:41:59,200 --> 02:42:03,040
happening

3570
02:42:00,318 --> 02:42:06,719
um it's very strange right

3571
02:42:03,040 --> 02:42:06,720
you can see it gets that weird like

3572
02:42:08,000 --> 02:42:10,639
like

3573
02:42:08,799 --> 02:42:11,519
why does that movement

3574
02:42:10,639 --> 02:42:13,840
you know

3575
02:42:11,520 --> 02:42:16,800
change the total brightness of the those

3576
02:42:13,840 --> 02:42:19,359
lights like it's very strange so we have

3577
02:42:16,799 --> 02:42:20,639
one more really pretty serious bug uh

3578
02:42:19,359 --> 02:42:22,720
you know unless it's a confluence of

3579
02:42:20,639 --> 02:42:24,559
bugs maybe there's more than one bug

3580
02:42:22,719 --> 02:42:26,159
we have one pretty serious one so we've

3581
02:42:24,559 --> 02:42:28,799
got to go take care of that but

3582
02:42:26,159 --> 02:42:30,639
otherwise it's looking really cool like

3583
02:42:28,799 --> 02:42:31,920
love the look of it it's running really

3584
02:42:30,639 --> 02:42:33,599
quickly

3585
02:42:31,920 --> 02:42:35,200
so that's great and we removed the walk

3586
02:42:33,600 --> 02:42:37,439
tables which means we could add entropy

3587
02:42:35,200 --> 02:42:38,240
back in if we wanted to for free

3588
02:42:37,439 --> 02:42:40,479
um

3589
02:42:38,239 --> 02:42:42,079
so basically we're down to just one

3590
02:42:40,478 --> 02:42:43,358
one more and that's what we'll do next

3591
02:42:42,079 --> 02:42:45,039
weekend but at least we got rid of the

3592
02:42:43,359 --> 02:42:46,720
walk tables now as well

3593
02:42:45,040 --> 02:42:48,640
um so we could also that means get rid

3594
02:42:46,719 --> 02:42:50,079
of this entire table in the pre-compute

3595
02:42:48,639 --> 02:42:52,318
that that entire thing could go away as

3596
02:42:50,079 --> 02:42:55,200
well and we could just use like white

3597
02:42:52,318 --> 02:42:57,760
noise entropy or something that's you

3598
02:42:55,200 --> 02:43:01,760
know low cost and try that out just to

3599
02:42:57,760 --> 02:43:05,200
see what happens if we do that um

3600
02:43:01,760 --> 02:43:07,279
and you know we we might want to do that

3601
02:43:05,200 --> 02:43:09,359
uh as a thing that allows the lighting

3602
02:43:07,279 --> 02:43:11,120
to be scalable better more scalable

3603
02:43:09,359 --> 02:43:12,720
right

3604
02:43:11,120 --> 02:43:15,359
um

3605
02:43:12,719 --> 02:43:17,519
and and perhaps have less artifacts due

3606
02:43:15,359 --> 02:43:18,318
to directional issues

3607
02:43:17,520 --> 02:43:21,200
but

3608
02:43:18,318 --> 02:43:23,519
overall i'd say really looks really good

3609
02:43:21,200 --> 02:43:25,680
and remember that's without smoothing so

3610
02:43:23,520 --> 02:43:28,159
there's no temp this is that's 100

3611
02:43:25,680 --> 02:43:30,159
percent temporal and testing free it's

3612
02:43:28,159 --> 02:43:33,279
recomputing the entire lighting for the

3613
02:43:30,159 --> 02:43:34,799
entire system on every frame and so

3614
02:43:33,279 --> 02:43:36,720
we're in really good shape if we can

3615
02:43:34,799 --> 02:43:39,519
just go eliminate whatever that last

3616
02:43:36,719 --> 02:43:40,318
lightly energy leak bug is

3617
02:43:39,520 --> 02:43:41,600
um

3618
02:43:40,318 --> 02:43:43,920
we would get lighting that looks like

3619
02:43:41,600 --> 02:43:46,720
this and it's instantly updated that

3620
02:43:43,920 --> 02:43:48,239
there's no temporal smoothing applied to

3621
02:43:46,719 --> 02:43:51,199
that at all

3622
02:43:48,239 --> 02:43:51,619
so that's great like that's really good

3623
02:43:51,200 --> 02:43:53,040
um

3624
02:43:51,620 --> 02:43:54,399
[Music]

3625
02:43:53,040 --> 02:43:56,240
because that means it would update

3626
02:43:54,398 --> 02:43:59,119
instantly to lighting changes right

3627
02:43:56,239 --> 02:44:00,159
there'd be no there's no

3628
02:43:59,120 --> 02:44:01,439
lag

3629
02:44:00,159 --> 02:44:04,398
on the lighting

3630
02:44:01,439 --> 02:44:07,279
right which i think is pretty cool

3631
02:44:04,398 --> 02:44:08,559
uh so you know um i think we're in

3632
02:44:07,279 --> 02:44:10,960
really good shape

3633
02:44:08,559 --> 02:44:12,639
but it's you know that that

3634
02:44:10,959 --> 02:44:14,079
that energy bleed is gonna be hard to

3635
02:44:12,639 --> 02:44:17,278
track down those are

3636
02:44:14,079 --> 02:44:20,799
those are kind of really tough uh sorts

3637
02:44:17,279 --> 02:44:20,800
of bugs so you know

3638
02:44:25,120 --> 02:44:29,439
unfortunately that's that's not gonna be

3639
02:44:26,959 --> 02:44:30,879
an easy one to find but i'm i'd say

3640
02:44:29,439 --> 02:44:32,800
that's that's it for today that was

3641
02:44:30,879 --> 02:44:34,159
pretty good work i think i'm happy with

3642
02:44:32,799 --> 02:44:36,398
that

3643
02:44:34,159 --> 02:44:36,398
um

3644
02:44:38,799 --> 02:44:42,159
i think we can

3645
02:44:40,159 --> 02:44:43,920
yeah i think we'll be able to simplify

3646
02:44:42,159 --> 02:44:46,000
the lighting system even more now

3647
02:44:43,920 --> 02:44:48,079
because we just we just keep removing

3648
02:44:46,000 --> 02:44:50,079
pieces of it and it gets better right so

3649
02:44:48,079 --> 02:44:52,239
that's really good place to be

3650
02:44:50,079 --> 02:44:54,639
uh we can probably simplify some of how

3651
02:44:52,239 --> 02:44:57,039
these loops work and just get stuff down

3652
02:44:54,639 --> 02:44:58,799
to a more minimal state and as we do

3653
02:44:57,040 --> 02:45:00,880
that you know it also gets easier to

3654
02:44:58,799 --> 02:45:03,278
find the bugs in it

3655
02:45:00,879 --> 02:45:06,639
we're still spending a lot of time doing

3656
02:45:03,279 --> 02:45:08,319
the octahedral map down sampling that's

3657
02:45:06,639 --> 02:45:12,680
if i remember correctly still a really

3658
02:45:08,318 --> 02:45:12,680
big problem um

3659
02:45:14,239 --> 02:45:19,039
so there's that

3660
02:45:15,760 --> 02:45:21,040
but have not having to have the lighting

3661
02:45:19,040 --> 02:45:23,040
uh

3662
02:45:21,040 --> 02:45:24,720
not having to have that

3663
02:45:23,040 --> 02:45:26,720
the walk tables and the precomputed

3664
02:45:24,719 --> 02:45:31,119
stuff is just really nice

3665
02:45:26,719 --> 02:45:33,358
so i think that's probably very good

3666
02:45:31,120 --> 02:45:35,600
like we're probably in really good shape

3667
02:45:33,359 --> 02:45:38,479
here is what i would say

3668
02:45:35,600 --> 02:45:41,920
um but yeah like the diffuse waiting

3669
02:45:38,478 --> 02:45:43,519
stuff is still really expensive like so

3670
02:45:41,920 --> 02:45:45,439
i want to say that probably the ray

3671
02:45:43,520 --> 02:45:47,680
casting

3672
02:45:45,439 --> 02:45:49,439
is is now like you know fairly expensive

3673
02:45:47,680 --> 02:45:51,760
because we're doing a ton of it like we

3674
02:45:49,439 --> 02:45:53,600
have really we're you know we're doing

3675
02:45:51,760 --> 02:45:56,800
again no temporal smoothing so we're

3676
02:45:53,600 --> 02:45:59,279
doing a ton of raycasting

3677
02:45:56,799 --> 02:46:02,959
lots of rays

3678
02:45:59,279 --> 02:46:05,200
per octahedral map sample

3679
02:46:02,959 --> 02:46:05,199
but

3680
02:46:09,600 --> 02:46:12,318
i don't know

3681
02:46:13,520 --> 02:46:18,319
i don't think we separately at the

3682
02:46:15,200 --> 02:46:22,520
moment break out how much time is spent

3683
02:46:18,318 --> 02:46:22,519
in smoothing out the

3684
02:46:26,079 --> 02:46:29,600
in smoothing out those maps so i don't

3685
02:46:28,000 --> 02:46:31,120
actually know like as you can see all

3686
02:46:29,600 --> 02:46:33,359
the time is spent in the lighting like

3687
02:46:31,120 --> 02:46:35,040
the entire game is spent

3688
02:46:33,359 --> 02:46:37,600
all the cpu time is in lighting which is

3689
02:46:35,040 --> 02:46:40,479
what you expect but i don't even know

3690
02:46:37,600 --> 02:46:43,120
how much of that is actually raycasting

3691
02:46:40,478 --> 02:46:43,119
you know what i mean

3692
02:46:43,279 --> 02:46:47,840
like if we were to go into

3693
02:46:45,520 --> 02:46:50,399
uh the raycaster

3694
02:46:47,840 --> 02:46:54,478
and we were to change the

3695
02:46:50,398 --> 02:46:56,879
you know the raycast to be operating on

3696
02:46:54,478 --> 02:46:59,199
way less rays so like we just said oh

3697
02:46:56,879 --> 02:47:00,000
yeah like actually

3698
02:46:59,200 --> 02:47:02,960
um

3699
02:47:00,000 --> 02:47:04,559
you're only going to cast like one ray

3700
02:47:02,959 --> 02:47:05,599
instead

3701
02:47:04,559 --> 02:47:07,278
um

3702
02:47:05,600 --> 02:47:09,600
i don't actually know how much of a

3703
02:47:07,279 --> 02:47:11,520
speed improvement that gets us like

3704
02:47:09,600 --> 02:47:12,720
maybe a ton maybe not i don't really

3705
02:47:11,520 --> 02:47:14,399
know

3706
02:47:12,719 --> 02:47:15,920
um

3707
02:47:14,398 --> 02:47:20,239
so

3708
02:47:15,920 --> 02:47:21,120
yeah like compute light propagation work

3709
02:47:20,239 --> 02:47:23,520
like

3710
02:47:21,120 --> 02:47:27,760
how much does that go down by like

3711
02:47:23,520 --> 02:47:30,079
through three so that's that's around

3712
02:47:27,760 --> 02:47:32,159
three

3713
02:47:30,079 --> 02:47:35,840
30 million cycles is that right comma

3714
02:47:32,159 --> 02:47:35,840
comma 30 million cycles

3715
02:47:46,559 --> 02:47:49,840
and so now it's

3716
02:47:51,279 --> 02:47:57,200
400 million cycles

3717
02:47:53,680 --> 02:48:00,398
so it's it's a little over 10x

3718
02:47:57,200 --> 02:48:00,399
uh the cost

3719
02:48:00,639 --> 02:48:04,398
i could i could probably do it exactly

3720
02:48:02,239 --> 02:48:07,039
by just saying like okay we remove the

3721
02:48:04,398 --> 02:48:07,039
raycast

3722
02:48:12,959 --> 02:48:16,079
um

3723
02:48:13,760 --> 02:48:18,318
and it's around what is that eight

3724
02:48:16,079 --> 02:48:19,920
million cycles

3725
02:48:18,318 --> 02:48:21,760
so i guess it is mostly in the right

3726
02:48:19,920 --> 02:48:24,159
cast now that's actually good so i guess

3727
02:48:21,760 --> 02:48:25,359
we're not somehow we made it is that

3728
02:48:24,159 --> 02:48:27,039
really true

3729
02:48:25,359 --> 02:48:29,040
i thought it cost more than that i don't

3730
02:48:27,040 --> 02:48:31,279
know that i trust those timings i wonder

3731
02:48:29,040 --> 02:48:34,000
if maybe like actually

3732
02:48:31,279 --> 02:48:36,159
it was able to optimize some of that out

3733
02:48:34,000 --> 02:48:37,760
of the smoothing i don't know so i'm not

3734
02:48:36,159 --> 02:48:39,200
sure about i'm not sure how i feel about

3735
02:48:37,760 --> 02:48:40,559
those timings take that with a grain of

3736
02:48:39,200 --> 02:48:41,600
salt

3737
02:48:40,559 --> 02:48:42,879
um

3738
02:48:41,600 --> 02:48:45,840
but

3739
02:48:42,879 --> 02:48:45,839
anyway point being

3740
02:48:46,000 --> 02:48:49,040
uh

3741
02:48:46,879 --> 02:48:50,079
at 30 frames a second

3742
02:48:49,040 --> 02:48:52,720
we

3743
02:48:50,079 --> 02:48:54,959
would expect here that we could do a

3744
02:48:52,719 --> 02:48:56,478
fair bit we can also change this

3745
02:48:54,959 --> 02:48:58,559
raise per texel

3746
02:48:56,478 --> 02:49:00,719
value at the moment

3747
02:48:58,559 --> 02:49:02,879
um it's doing 16

3748
02:49:00,719 --> 02:49:04,239
right and if we did half that

3749
02:49:02,879 --> 02:49:05,759
we would expect to still probably be

3750
02:49:04,239 --> 02:49:07,359
able to have okay lighting if we added

3751
02:49:05,760 --> 02:49:09,760
some temporal smoothing and we'd get a

3752
02:49:07,359 --> 02:49:11,600
pretty big speed up so

3753
02:49:09,760 --> 02:49:12,639
oh wait not times not that's not what i

3754
02:49:11,600 --> 02:49:15,579
wanted

3755
02:49:12,639 --> 02:49:18,159
um so we would expect in general to

3756
02:49:15,579 --> 02:49:20,478
[Music]

3757
02:49:18,159 --> 02:49:20,478
um

3758
02:49:20,879 --> 02:49:26,159
to probably be able to have a favor oh

3759
02:49:22,879 --> 02:49:28,719
wow that's cool

3760
02:49:26,159 --> 02:49:30,159
yeah that the bug is so interesting like

3761
02:49:28,719 --> 02:49:31,840
it clearly has something to do with

3762
02:49:30,159 --> 02:49:33,119
direction as well that's really

3763
02:49:31,840 --> 02:49:35,600
interesting

3764
02:49:33,120 --> 02:49:37,120
must just be some stupid bug

3765
02:49:35,600 --> 02:49:39,120
like yeah

3766
02:49:37,120 --> 02:49:40,960
um but anyway

3767
02:49:39,120 --> 02:49:43,120
you can see here that like the lighting

3768
02:49:40,959 --> 02:49:44,719
at at half the samples is basically the

3769
02:49:43,120 --> 02:49:45,840
same it's going to be darker because

3770
02:49:44,719 --> 02:49:48,318
obviously

3771
02:49:45,840 --> 02:49:49,920
we're dividing by half but other than

3772
02:49:48,318 --> 02:49:52,478
that you know you just don't divide by

3773
02:49:49,920 --> 02:49:55,680
half if you if you actually just set

3774
02:49:52,478 --> 02:49:56,559
this value here to something else

3775
02:49:55,680 --> 02:49:59,040
um

3776
02:49:56,559 --> 02:50:01,680
so like this rayweight value right if i

3777
02:49:59,040 --> 02:50:04,640
said divide by two and oh by the way

3778
02:50:01,680 --> 02:50:07,639
also multiply the output by two

3779
02:50:04,639 --> 02:50:07,639
um

3780
02:50:16,879 --> 02:50:19,839
the bugs are so interesting aren't they

3781
02:50:18,318 --> 02:50:22,398
i can't wait till we find out what this

3782
02:50:19,840 --> 02:50:24,799
is it's going to be very it's going to

3783
02:50:22,398 --> 02:50:29,599
be very interesting because how are we

3784
02:50:24,799 --> 02:50:29,599
getting those like they're so structured

3785
02:50:30,959 --> 02:50:35,358
they're so structured like

3786
02:50:34,000 --> 02:50:38,639
it's going to be very interesting to

3787
02:50:35,359 --> 02:50:41,600
find out what that power leak is from

3788
02:50:38,639 --> 02:50:41,599
very interesting

3789
02:50:41,680 --> 02:50:46,079
it must be that like

3790
02:50:44,000 --> 02:50:50,920
the direction you're casting like

3791
02:50:46,079 --> 02:50:50,920
erroneously writes into like

3792
02:50:52,478 --> 02:50:55,199
i

3793
02:50:53,680 --> 02:50:58,079
like like i don't there's some kind of

3794
02:50:55,200 --> 02:50:59,680
weird like the direction

3795
02:50:58,079 --> 02:51:02,840
i wish i could think of like what that

3796
02:50:59,680 --> 02:51:05,920
would be what's that gonna

3797
02:51:02,840 --> 02:51:08,239
be i bet we should we should kind of be

3798
02:51:05,920 --> 02:51:12,680
able to figure it out i just for some

3799
02:51:08,239 --> 02:51:12,680
reason i just can't quite

3800
02:51:28,719 --> 02:51:32,000
yeah i don't know i can't quite figure

3801
02:51:30,559 --> 02:51:33,600
out what that's going to be but point

3802
02:51:32,000 --> 02:51:36,159
being i think the lighting would still

3803
02:51:33,600 --> 02:51:37,920
work just fine with less samples and we

3804
02:51:36,159 --> 02:51:39,600
already know that with half the samples

3805
02:51:37,920 --> 02:51:42,079
we'd be running at 60 frames a second

3806
02:51:39,600 --> 02:51:44,399
even with all the debug code in place

3807
02:51:42,079 --> 02:51:44,398
right

3808
02:51:44,959 --> 02:51:51,599
um with the debug code not in place

3809
02:51:49,520 --> 02:51:53,200
i don't even know like

3810
02:51:51,600 --> 02:51:55,520
if we turned off

3811
02:51:53,200 --> 02:51:57,279
light asserts or if we

3812
02:51:55,520 --> 02:51:58,720
cause actually i suppose at the moment

3813
02:51:57,279 --> 02:51:59,840
we actually do want those off because

3814
02:51:58,719 --> 02:52:00,799
we're not really doing anything with

3815
02:51:59,840 --> 02:52:02,960
that

3816
02:52:00,799 --> 02:52:05,039
at the moment um

3817
02:52:02,959 --> 02:52:06,719
if we turned off those asserts and we

3818
02:52:05,040 --> 02:52:08,319
also turned off the other internal

3819
02:52:06,719 --> 02:52:10,000
asserts i don't actually know how fast

3820
02:52:08,318 --> 02:52:12,398
we are but

3821
02:52:10,000 --> 02:52:14,079
probably pretty fast yeah i mean we

3822
02:52:12,398 --> 02:52:16,239
might actually be with everything turned

3823
02:52:14,079 --> 02:52:18,478
off i'm not sure we might actually be 16

3824
02:52:16,239 --> 02:52:22,719
60 frames a second

3825
02:52:18,478 --> 02:52:24,879
just even with even with 16 samples

3826
02:52:22,719 --> 02:52:25,920
per texel which is nuts

3827
02:52:24,879 --> 02:52:28,239
so

3828
02:52:25,920 --> 02:52:30,639
hey computers very fast and this is on

3829
02:52:28,239 --> 02:52:32,239
an old computer

3830
02:52:30,639 --> 02:52:34,719
which is kind of nuts

3831
02:52:32,239 --> 02:52:36,398
and it's all on the cpu so

3832
02:52:34,719 --> 02:52:38,318
computers man

3833
02:52:36,398 --> 02:52:40,239
you would think if you run a web program

3834
02:52:38,318 --> 02:52:43,119
you would think

3835
02:52:40,239 --> 02:52:45,920
uh that

3836
02:52:43,120 --> 02:52:45,920
it would be

3837
02:52:46,159 --> 02:52:50,478
that computers are super slow

3838
02:52:48,159 --> 02:52:52,000
but when you actually run code that does

3839
02:52:50,478 --> 02:52:53,760
a lot of work

3840
02:52:52,000 --> 02:52:55,200
uh it's actually nuts because you look

3841
02:52:53,760 --> 02:52:57,120
and computers are actually incredibly

3842
02:52:55,200 --> 02:52:59,920
fast like the amount of work we're

3843
02:52:57,120 --> 02:53:01,279
asking it to do is insane

3844
02:52:59,920 --> 02:53:03,520
you know

3845
02:53:01,279 --> 02:53:03,520
so

3846
02:53:07,680 --> 02:53:12,079
um so you know

3847
02:53:09,600 --> 02:53:13,680
not quite there 24 milliseconds frame we

3848
02:53:12,079 --> 02:53:15,200
need to be at 16 milliseconds frame so

3849
02:53:13,680 --> 02:53:16,880
who knows you know maybe we need less

3850
02:53:15,200 --> 02:53:18,880
samples to get there maybe that's too

3851
02:53:16,879 --> 02:53:21,358
expensive but who knows

3852
02:53:18,879 --> 02:53:24,959
uh we got a long ways to go before we

3853
02:53:21,359 --> 02:53:27,120
determine stuff like that um so but

3854
02:53:24,959 --> 02:53:28,159
yeah so really weird just whatever that

3855
02:53:27,120 --> 02:53:30,880
last bug it's going to be very

3856
02:53:28,159 --> 02:53:30,879
interesting to see

3857
02:53:31,600 --> 02:53:36,479
what it is

3858
02:53:33,040 --> 02:53:36,479
but all right that's it for today

3859
02:53:37,600 --> 02:53:42,239
yeah if if you if you use like a web

3860
02:53:40,398 --> 02:53:44,559
browser you'd think that computers are

3861
02:53:42,239 --> 02:53:45,600
really slow right

3862
02:53:44,559 --> 02:53:46,639
um

3863
02:53:45,600 --> 02:53:48,318
but

3864
02:53:46,639 --> 02:53:50,398
actually

3865
02:53:48,318 --> 02:53:52,239
computers are incredibly fast it's just

3866
02:53:50,398 --> 02:53:54,799
the programs that people write are

3867
02:53:52,239 --> 02:53:56,879
incredibly slow for no real reason

3868
02:53:54,799 --> 02:53:58,799
because you know

3869
02:53:56,879 --> 02:54:00,239
this is just kind of a tremendous amount

3870
02:53:58,799 --> 02:54:02,398
of work we're asking this thing to do

3871
02:54:00,239 --> 02:54:04,959
and it just eats it for breakfast it's

3872
02:54:02,398 --> 02:54:07,840
kind of nuts right

3873
02:54:04,959 --> 02:54:07,839
so

3874
02:54:09,040 --> 02:54:11,279
um

3875
02:54:12,159 --> 02:54:17,840
uh yes jira 33 uh that's exactly correct

3876
02:54:15,120 --> 02:54:19,520
the gpu shaders basically just sample a

3877
02:54:17,840 --> 02:54:21,120
voxel

3878
02:54:19,520 --> 02:54:22,640
um

3879
02:54:21,120 --> 02:54:24,319
it's a little more complicated than that

3880
02:54:22,639 --> 02:54:26,398
because the thing that is actually

3881
02:54:24,318 --> 02:54:28,959
getting sent down is an octahedral map

3882
02:54:26,398 --> 02:54:31,039
so it's not the same as a voxel sample

3883
02:54:28,959 --> 02:54:33,278
per se

3884
02:54:31,040 --> 02:54:35,600
but it is basically a voxel

3885
02:54:33,279 --> 02:54:38,479
interpolation like at each

3886
02:54:35,600 --> 02:54:40,800
at each node in the voxel

3887
02:54:38,478 --> 02:54:42,959
at each node in the 3d grid there's an

3888
02:54:40,799 --> 02:54:45,119
octahedral map for the inbound light at

3889
02:54:42,959 --> 02:54:46,000
that location

3890
02:54:45,120 --> 02:54:47,680
and

3891
02:54:46,000 --> 02:54:49,040
uh

3892
02:54:47,680 --> 02:54:51,279
that would be

3893
02:54:49,040 --> 02:54:51,279
the

3894
02:54:51,600 --> 02:54:55,920
like the gpu is having to interpolate

3895
02:54:54,799 --> 02:54:59,599
between

3896
02:54:55,920 --> 02:55:02,960
eight samples of octahedral maps so it's

3897
02:54:59,600 --> 02:55:05,920
you could think of it as the gpu samples

3898
02:55:02,959 --> 02:55:07,919
an octahedral map at each of the

3899
02:55:05,920 --> 02:55:10,000
corner like at each of the corners of

3900
02:55:07,920 --> 02:55:13,439
that cube that it's in

3901
02:55:10,000 --> 02:55:17,000
and then it interpolates the results

3902
02:55:13,439 --> 02:55:17,000
if that makes sense

3903
02:55:20,959 --> 02:55:24,559
i don't know if that makes any sense to

3904
02:55:22,159 --> 02:55:24,559
you but

3905
02:55:24,879 --> 02:55:27,759
that's what it's doing

3906
02:55:28,159 --> 02:55:34,318
and so the cpu does all the lighting

3907
02:55:30,318 --> 02:55:37,199
these the lighting could be moved

3908
02:55:34,318 --> 02:55:37,199
uh to

3909
02:55:37,439 --> 02:55:41,040
to the gpu

3910
02:55:39,600 --> 02:55:42,640
um

3911
02:55:41,040 --> 02:55:43,439
and

3912
02:55:42,639 --> 02:55:46,159
we

3913
02:55:43,439 --> 02:55:48,880
might do that someday

3914
02:55:46,159 --> 02:55:50,959
but i think it's better to do it on the

3915
02:55:48,879 --> 02:55:52,398
cpu for now because it was a very

3916
02:55:50,959 --> 02:55:54,959
complicated process to figure out how we

3917
02:55:52,398 --> 02:55:58,079
were going to do it

3918
02:55:54,959 --> 02:55:59,679
and if it was on the gpu gpu programming

3919
02:55:58,079 --> 02:56:02,000
is just really

3920
02:55:59,680 --> 02:56:03,680
sucks it's hard to debug

3921
02:56:02,000 --> 02:56:05,840
um

3922
02:56:03,680 --> 02:56:07,600
it's a lot more finicky right so doing

3923
02:56:05,840 --> 02:56:10,559
it on the cpu seems good and then if

3924
02:56:07,600 --> 02:56:12,399
later you want to drop it to the gpu

3925
02:56:10,559 --> 02:56:13,920
as long as you've been programming it in

3926
02:56:12,398 --> 02:56:15,599
such a way as it's expected to be

3927
02:56:13,920 --> 02:56:18,000
parallelized like that to a certain

3928
02:56:15,600 --> 02:56:19,840
extent it's probably not that bad

3929
02:56:18,000 --> 02:56:21,120
um but another way to look at it is cpus

3930
02:56:19,840 --> 02:56:22,239
are starting to have a lot of cores now

3931
02:56:21,120 --> 02:56:24,479
and what are you going to use those

3932
02:56:22,239 --> 02:56:25,840
cores for right in a game like handmade

3933
02:56:24,478 --> 02:56:27,438
hero there's not a lot of other stuff

3934
02:56:25,840 --> 02:56:29,120
going on so having it do the lighting

3935
02:56:27,439 --> 02:56:32,000
means there's more

3936
02:56:29,120 --> 02:56:33,680
horsepower on the cpu on the gpu to do

3937
02:56:32,000 --> 02:56:35,920
other things which maybe we just means

3938
02:56:33,680 --> 02:56:38,079
you know you run at a higher resolution

3939
02:56:35,920 --> 02:56:40,079
or whatever so i don't actually know

3940
02:56:38,079 --> 02:56:42,398
like whether you you know it depends on

3941
02:56:40,079 --> 02:56:44,079
the game some games

3942
02:56:42,398 --> 02:56:46,478
may want the lighting to run in one

3943
02:56:44,079 --> 02:56:48,239
place some one right in another the fact

3944
02:56:46,478 --> 02:56:51,199
that nvidia cards are now adding ray

3945
02:56:48,239 --> 02:56:53,760
tracing means that at the limit you know

3946
02:56:51,200 --> 02:56:55,600
handmade hero 2030

3947
02:56:53,760 --> 02:56:56,880
you probably want to run this on the gpu

3948
02:56:55,600 --> 02:56:58,960
because it's got ray tracing

3949
02:56:56,879 --> 02:57:00,719
acceleration right so it kind of becomes

3950
02:56:58,959 --> 02:57:03,119
a no-brainer at that point

3951
02:57:00,719 --> 02:57:06,639
but in the interim

3952
02:57:03,120 --> 02:57:06,640
it's just it's probably hard to say

3953
02:57:07,359 --> 02:57:10,640
uh it is not a spherical harmonics

3954
02:57:09,520 --> 02:57:13,600
encoding

3955
02:57:10,639 --> 02:57:14,799
it's literally an octahedral map so it

3956
02:57:13,600 --> 02:57:16,479
is a

3957
02:57:14,799 --> 02:57:18,478
encoding of

3958
02:57:16,478 --> 02:57:21,679
if you imagined a sphere

3959
02:57:18,478 --> 02:57:22,959
and you broke the sphere up into eight

3960
02:57:21,680 --> 02:57:25,200
octants

3961
02:57:22,959 --> 02:57:26,959
and then you stored texels at a certain

3962
02:57:25,200 --> 02:57:28,319
resolution

3963
02:57:26,959 --> 02:57:29,919
that actually

3964
02:57:28,318 --> 02:57:32,398
like

3965
02:57:29,920 --> 02:57:35,040
that are just what the inbound light is

3966
02:57:32,398 --> 02:57:37,680
at those positions on the sphere

3967
02:57:35,040 --> 02:57:39,840
so spherical harmonics is very different

3968
02:57:37,680 --> 02:57:41,439
spherical harmonics is when you store a

3969
02:57:39,840 --> 02:57:43,279
set of coefficients

3970
02:57:41,439 --> 02:57:44,079
and the coefficients

3971
02:57:43,279 --> 02:57:46,880
are

3972
02:57:44,079 --> 02:57:48,478
basically they multiply basis functions

3973
02:57:46,879 --> 02:57:49,599
that are three-dimensional lighting

3974
02:57:48,478 --> 02:57:52,239
shapes

3975
02:57:49,600 --> 02:57:53,680
that you then compose to determine

3976
02:57:52,239 --> 02:57:55,920
usually compose and then take the dot

3977
02:57:53,680 --> 02:57:57,359
product with

3978
02:57:55,920 --> 02:57:59,200
some direction to determine what the

3979
02:57:57,359 --> 02:58:01,200
light is in that direction they're very

3980
02:57:59,200 --> 02:58:03,120
very different right

3981
02:58:01,200 --> 02:58:04,800
um it's it's it's equivalent to the

3982
02:58:03,120 --> 02:58:06,720
difference like an octahedral map is

3983
02:58:04,799 --> 02:58:08,478
just storing the lighting

3984
02:58:06,719 --> 02:58:09,358
directly like how much light is coming

3985
02:58:08,478 --> 02:58:12,239
in

3986
02:58:09,359 --> 02:58:12,239
from each direction

3987
02:58:12,639 --> 02:58:17,278
so it's a lot like

3988
02:58:14,478 --> 02:58:20,000
octahedral maps are like an image

3989
02:58:17,279 --> 02:58:23,680
and spherical harmonics are like the fft

3990
02:58:20,000 --> 02:58:25,279
of that image kind of a thing right

3991
02:58:23,680 --> 02:58:26,479
it's that sort of a

3992
02:58:25,279 --> 02:58:28,800
difference

3993
02:58:26,478 --> 02:58:30,719
one is a series of coefficients on basis

3994
02:58:28,799 --> 02:58:32,398
functions that affect the whole thing

3995
02:58:30,719 --> 02:58:34,879
and the other is like

3996
02:58:32,398 --> 02:58:36,959
individual light values coming in in a

3997
02:58:34,879 --> 02:58:38,799
different textile so octahedral maps are

3998
02:58:36,959 --> 02:58:41,278
like way easier to understand than

3999
02:58:38,799 --> 02:58:42,559
spherical harmonics

4000
02:58:41,279 --> 02:58:44,960
visually

4001
02:58:42,559 --> 02:58:47,199
because human beings are not really used

4002
02:58:44,959 --> 02:58:48,639
to thinking of things as additions of

4003
02:58:47,200 --> 02:58:50,399
like lobes

4004
02:58:48,639 --> 02:58:52,398
right like you don't tend to think of

4005
02:58:50,398 --> 02:58:55,519
things as like oh okay

4006
02:58:52,398 --> 02:58:57,599
the inbound light is like

4007
02:58:55,520 --> 02:58:59,680
this shape plus negative of that shape

4008
02:58:57,600 --> 02:59:01,520
plus positive of this shape or whatever

4009
02:58:59,680 --> 02:59:03,120
right it's not how you think of things

4010
02:59:01,520 --> 02:59:05,200
it's way easier to think of like oh the

4011
02:59:03,120 --> 02:59:07,920
incoming light is like these color

4012
02:59:05,200 --> 02:59:09,359
values like in that direction it's this

4013
02:59:07,920 --> 02:59:10,960
value and in that is this value so an

4014
02:59:09,359 --> 02:59:12,479
octahedral map's like much easier to

4015
02:59:10,959 --> 02:59:14,719
understand

4016
02:59:12,478 --> 02:59:15,599
than cervical harmonics it might not be

4017
02:59:14,719 --> 02:59:17,438
as

4018
02:59:15,600 --> 02:59:19,040
good to compute with in certain

4019
02:59:17,439 --> 02:59:20,800
situations spherical harmonics may be

4020
02:59:19,040 --> 02:59:23,200
way more efficient

4021
02:59:20,799 --> 02:59:25,599
but in terms of like what you would

4022
02:59:23,200 --> 02:59:26,880
intuit

4023
02:59:25,600 --> 02:59:28,239
an octahedral map is fairly

4024
02:59:26,879 --> 02:59:29,759
straightforward to understand where

4025
02:59:28,239 --> 02:59:31,359
spherical harmonics are much more

4026
02:59:29,760 --> 02:59:33,279
difficult

4027
02:59:31,359 --> 02:59:34,239
to just intuitively think about what's

4028
02:59:33,279 --> 02:59:36,159
happening

4029
02:59:34,239 --> 02:59:37,680
like if you saw it

4030
02:59:36,159 --> 02:59:39,279
like looking at the three numbers of

4031
02:59:37,680 --> 02:59:40,840
circle harmonics would be impossible

4032
02:59:39,279 --> 02:59:44,079
like you'd just be like

4033
02:59:40,840 --> 02:59:45,760
okay i see three numbers i have no idea

4034
02:59:44,079 --> 02:59:48,239
like

4035
02:59:45,760 --> 02:59:49,840
what the actual lighting looks like

4036
02:59:48,239 --> 02:59:52,478
i mean you might have a vague sense of

4037
02:59:49,840 --> 02:59:53,920
like okay the first one is the average

4038
02:59:52,478 --> 02:59:55,760
light that's inbound so that's pretty

4039
02:59:53,920 --> 02:59:57,279
easy but then it's like okay that one's

4040
02:59:55,760 --> 02:59:59,359
sort of telling me like roughly how much

4041
02:59:57,279 --> 03:00:01,279
light comes from that side

4042
02:59:59,359 --> 03:00:03,680
versus that side it's like the

4043
03:00:01,279 --> 03:00:06,319
sightedness of the lighting right so you

4044
03:00:03,680 --> 03:00:07,600
could learn to like interpret the values

4045
03:00:06,318 --> 03:00:07,969
you know

4046
03:00:07,600 --> 03:00:09,840
um

4047
03:00:07,969 --> 03:00:12,559
[Music]

4048
03:00:09,840 --> 03:00:16,000
they do mean something but it's just not

4049
03:00:12,559 --> 03:00:18,318
very directly vis translatable to you

4050
03:00:16,000 --> 03:00:19,920
the first two coefficients three two or

4051
03:00:18,318 --> 03:00:21,439
three spherical hormone expressions are

4052
03:00:19,920 --> 03:00:23,279
probably not that hard to understand but

4053
03:00:21,439 --> 03:00:25,200
as you start getting down into lower

4054
03:00:23,279 --> 03:00:27,760
ones it's like okay

4055
03:00:25,200 --> 03:00:30,399
yeah i know what they are but

4056
03:00:27,760 --> 03:00:32,398
intuitively like developing a sense for

4057
03:00:30,398 --> 03:00:33,358
looking at eight spherical harmonics

4058
03:00:32,398 --> 03:00:34,799
numbers

4059
03:00:33,359 --> 03:00:36,880
what does that translate into in terms

4060
03:00:34,799 --> 03:00:39,278
of lighting is pretty freaking hard i

4061
03:00:36,879 --> 03:00:40,799
would argue right

4062
03:00:39,279 --> 03:00:43,040
now i don't work with filler harmonics

4063
03:00:40,799 --> 03:00:44,318
very often so maybe that's just because

4064
03:00:43,040 --> 03:00:46,080
i don't work with them enough maybe if

4065
03:00:44,318 --> 03:00:48,159
you work with them enough you would but

4066
03:00:46,079 --> 03:00:51,279
i really do feel like yeah octahedral

4067
03:00:48,159 --> 03:00:53,200
maps much easier to understand

4068
03:00:51,279 --> 03:00:54,640
intuitively then spherical harmonics

4069
03:00:53,200 --> 03:00:56,079
which are much harder because you have

4070
03:00:54,639 --> 03:00:59,278
to kind of reconstruct in your head

4071
03:00:56,079 --> 03:00:59,279
what's going on every time

4072
03:00:59,920 --> 03:01:02,159
so

4073
03:01:02,559 --> 03:01:07,119
all right folks that's it for today

4074
03:01:04,799 --> 03:01:10,159
um i will be back here next weekend when

4075
03:01:07,120 --> 03:01:12,000
we will when we will have to track down

4076
03:01:10,159 --> 03:01:13,840
our final bug i mean there's probably

4077
03:01:12,000 --> 03:01:15,840
other bugs in here but the final main

4078
03:01:13,840 --> 03:01:16,799
one like the one we can see

4079
03:01:15,840 --> 03:01:18,559
right

4080
03:01:16,799 --> 03:01:20,639
um so next weekend we will track down

4081
03:01:18,559 --> 03:01:23,119
the final bug we can see and then it's

4082
03:01:20,639 --> 03:01:24,639
probably time to just say okay that that

4083
03:01:23,120 --> 03:01:26,720
accomplished what we wanted like our

4084
03:01:24,639 --> 03:01:28,559
goal was to simplify the lighting down

4085
03:01:26,719 --> 03:01:31,519
to the point where we were happy with

4086
03:01:28,559 --> 03:01:33,359
like it and it was fine uh and i think

4087
03:01:31,520 --> 03:01:35,760
that is probably it

4088
03:01:33,359 --> 03:01:37,279
uh so we can go on to the next

4089
03:01:35,760 --> 03:01:39,040
simplification pass

4090
03:01:37,279 --> 03:01:41,760
which was not on lighting that would

4091
03:01:39,040 --> 03:01:43,120
just be simplifying the uh spatial stuff

4092
03:01:41,760 --> 03:01:43,920
to be only

4093
03:01:43,120 --> 03:01:46,840
one

4094
03:01:43,920 --> 03:01:49,840
you know one z sheet

4095
03:01:46,840 --> 03:01:52,000
i so

4096
03:01:49,840 --> 03:01:53,760
yeah like getting there

4097
03:01:52,000 --> 03:01:55,920
getting there running very efficiently

4098
03:01:53,760 --> 03:01:56,309
right now looks great

4099
03:01:55,920 --> 03:01:57,840
um

4100
03:01:56,309 --> 03:02:00,159
[Music]

4101
03:01:57,840 --> 03:02:02,559
so yeah not a lot of complaints there's

4102
03:02:00,159 --> 03:02:04,478
definitely you know is it a good engine

4103
03:02:02,559 --> 03:02:06,159
i mean not compared to what would happen

4104
03:02:04,478 --> 03:02:07,519
if i was actually concentrating on it

4105
03:02:06,159 --> 03:02:10,318
right like

4106
03:02:07,520 --> 03:02:12,960
at such a small time investment

4107
03:02:10,318 --> 03:02:14,239
in it and being so sporadic there's a

4108
03:02:12,959 --> 03:02:15,599
lot of things that are just like all

4109
03:02:14,239 --> 03:02:17,199
right that's not as good as it should be

4110
03:02:15,600 --> 03:02:19,760
for sure but you know in terms of the

4111
03:02:17,200 --> 03:02:20,960
final look of things it does look really

4112
03:02:19,760 --> 03:02:21,760
good

4113
03:02:20,959 --> 03:02:23,839
and

4114
03:02:21,760 --> 03:02:24,719
it does seem to play very well

4115
03:02:23,840 --> 03:02:26,960
so

4116
03:02:24,719 --> 03:02:28,959
you know i'm i'm optimistic that there's

4117
03:02:26,959 --> 03:02:30,719
nothing particularly

4118
03:02:28,959 --> 03:02:34,879
bad about the engine that would prevent

4119
03:02:30,719 --> 03:02:37,039
it from being you know interested right

4120
03:02:34,879 --> 03:02:37,039
so

4121
03:02:42,959 --> 03:02:47,759
uh no valbus z is

4122
03:02:46,559 --> 03:02:48,799
z is just

4123
03:02:47,760 --> 03:02:50,079
really makes things much more

4124
03:02:48,799 --> 03:02:51,278
complicated

4125
03:02:50,079 --> 03:02:53,600
like

4126
03:02:51,279 --> 03:02:55,840
you know you you could add z into the

4127
03:02:53,600 --> 03:02:59,840
raycaster again by just adding one more

4128
03:02:55,840 --> 03:02:59,840
check for movement in z

4129
03:02:59,920 --> 03:03:04,639
but then instead of one test value and a

4130
03:03:02,799 --> 03:03:06,799
cmov you now have

4131
03:03:04,639 --> 03:03:07,840
like three test

4132
03:03:06,799 --> 03:03:09,599
checks

4133
03:03:07,840 --> 03:03:11,520
that have to then

4134
03:03:09,600 --> 03:03:13,439
factor into multiple c cmobs or

4135
03:03:11,520 --> 03:03:15,279
something or you just use an actual

4136
03:03:13,439 --> 03:03:17,120
three-state if

4137
03:03:15,279 --> 03:03:18,479
picking between two options is a lot

4138
03:03:17,120 --> 03:03:21,600
easier than picking between three

4139
03:03:18,478 --> 03:03:23,840
options is i guess what i would say

4140
03:03:21,600 --> 03:03:23,840
um

4141
03:03:24,840 --> 03:03:31,520
so maybe it's fine if you add z in

4142
03:03:29,600 --> 03:03:34,318
or maybe the code just keeps getting

4143
03:03:31,520 --> 03:03:37,279
slower as the cpu struggles with that

4144
03:03:34,318 --> 03:03:39,519
like multiple chain c move

4145
03:03:37,279 --> 03:03:39,520
like

4146
03:03:39,600 --> 03:03:43,120
i don't know so so i i

4147
03:03:44,079 --> 03:03:47,359
i don't know

4148
03:03:45,760 --> 03:03:49,200
um

4149
03:03:47,359 --> 03:03:51,200
so so maybe it's fine

4150
03:03:49,200 --> 03:03:52,479
and maybe you said that in but the real

4151
03:03:51,200 --> 03:03:55,279
cost

4152
03:03:52,478 --> 03:03:57,438
is not that anyway like that's the thing

4153
03:03:55,279 --> 03:03:59,200
that makes the loop nastier but you

4154
03:03:57,439 --> 03:04:02,639
could do it and it's just a chain of

4155
03:03:59,200 --> 03:04:05,040
cmos right it's just like extra

4156
03:04:02,639 --> 03:04:07,519
the real cost is having multiple z

4157
03:04:05,040 --> 03:04:10,240
samples because it just multiplied you

4158
03:04:07,520 --> 03:04:12,720
know a cubic volume of samples is just

4159
03:04:10,239 --> 03:04:14,478
way more samples than a 2d volume of

4160
03:04:12,719 --> 03:04:16,239
samples right

4161
03:04:14,478 --> 03:04:18,559
and so really the thing that makes the

4162
03:04:16,239 --> 03:04:21,119
lighting so much easier in 2d than in 3d

4163
03:04:18,559 --> 03:04:22,559
is that you just don't have to compute

4164
03:04:21,120 --> 03:04:24,720
times z

4165
03:04:22,559 --> 03:04:26,559
instead of having to do a stack of eight

4166
03:04:24,719 --> 03:04:29,358
things you do a stack of two things

4167
03:04:26,559 --> 03:04:30,478
that's four times faster

4168
03:04:29,359 --> 03:04:32,960
right

4169
03:04:30,478 --> 03:04:35,920
for nothing like it's just a free 4x

4170
03:04:32,959 --> 03:04:37,679
faster so when you add z back in it just

4171
03:04:35,920 --> 03:04:39,760
becomes a lot more expensive there's

4172
03:04:37,680 --> 03:04:41,920
really no two ways about it right it's

4173
03:04:39,760 --> 03:04:44,239
just a higher multiple for anything

4174
03:04:41,920 --> 03:04:46,799
volumetric like that

4175
03:04:44,239 --> 03:04:49,359
so i think that's mostly it

4176
03:04:46,799 --> 03:04:51,358
so adding z back in

4177
03:04:49,359 --> 03:04:53,439
not hard

4178
03:04:51,359 --> 03:04:56,318
slows down the raycast a little bit but

4179
03:04:53,439 --> 03:04:58,000
then the real killer by far real killer

4180
03:04:56,318 --> 03:04:59,760
by far

4181
03:04:58,000 --> 03:05:02,959
uh

4182
03:04:59,760 --> 03:05:05,840
is is obviously just you know

4183
03:05:02,959 --> 03:05:05,839
the um

4184
03:05:06,159 --> 03:05:11,039
the the extra z sheets just way too many

4185
03:05:07,920 --> 03:05:13,279
samples it's way too many voxel cells

4186
03:05:11,040 --> 03:05:13,279
so

4187
03:05:13,520 --> 03:05:16,079
all right

4188
03:05:14,478 --> 03:05:18,159
that's it everybody

4189
03:05:16,079 --> 03:05:19,840
i will i guess i should look to see it's

4190
03:05:18,159 --> 03:05:21,680
like john streaming or anything it

4191
03:05:19,840 --> 03:05:23,359
doesn't look like it

4192
03:05:21,680 --> 03:05:25,279
um but anyway

4193
03:05:23,359 --> 03:05:26,880
uh that's it for today i'll see everyone

4194
03:05:25,279 --> 03:05:28,640
back here next week until then have fun

4195
03:05:26,879 --> 03:05:31,839
praying everyone i'll see you all on the

4196
03:05:28,639 --> 03:05:31,840
internet take it easy everybody

