1
00:00:00,199 --> 00:00:04,410
hello everyone and welcome to hand made

2
00:00:02,850 --> 00:00:07,349
here of sure we could a complete game

3
00:00:04,410 --> 00:00:10,559
live on stream today we're gonna do a

4
00:00:07,349 --> 00:00:14,099
longer stream than normal so I might

5
00:00:10,558 --> 00:00:16,169
actually do two days it's actually I

6
00:00:14,099 --> 00:00:18,000
might break even though you know days

7
00:00:16,170 --> 00:00:19,560
the wrong term for handmade hero since

8
00:00:18,000 --> 00:00:24,000
it doesn't really equate to anything

9
00:00:19,559 --> 00:00:29,219
that's day related but two sessions so

10
00:00:24,000 --> 00:00:30,868
I'm gonna go ahead and start doing some

11
00:00:29,219 --> 00:00:32,668
of the texture stuff that we want to do

12
00:00:30,868 --> 00:00:36,570
and I want to try and do that basically

13
00:00:32,668 --> 00:00:38,339
in one big in one big sort of changeover

14
00:00:36,570 --> 00:00:40,350
but that's going to be a lot of work to

15
00:00:38,340 --> 00:00:44,539
do there and so we're gonna see if we

16
00:00:40,350 --> 00:00:47,429
can get it done in two two long streams

17
00:00:44,539 --> 00:00:48,600
maybe we can maybe we can't it's

18
00:00:47,429 --> 00:00:52,679
anyone's guess but that's what we're

19
00:00:48,600 --> 00:00:55,230
gonna try so this is gonna be day 4 77

20
00:00:52,679 --> 00:00:57,929
I'll probably break when this is done

21
00:00:55,229 --> 00:01:00,299
and then restart adieu a day for 78 so

22
00:00:57,929 --> 00:01:02,820
we'll probably do two separate streams

23
00:01:00,299 --> 00:01:05,579
separately labelled streams I'm gonna go

24
00:01:02,820 --> 00:01:08,310
ahead and get started here for those of

25
00:01:05,579 --> 00:01:09,569
you who aren't familiar with what we've

26
00:01:08,310 --> 00:01:11,728
been working on right now who maybe

27
00:01:09,569 --> 00:01:15,569
haven't been following for the past few

28
00:01:11,728 --> 00:01:20,459
weeks we did an out we basically pulled

29
00:01:15,569 --> 00:01:22,048
a render out into its own completely

30
00:01:20,459 --> 00:01:24,478
reusable piece that doesn't actually

31
00:01:22,049 --> 00:01:29,400
require you to be running handmade hero

32
00:01:24,478 --> 00:01:31,250
at all and if you take a look here we

33
00:01:29,400 --> 00:01:34,350
actually now have this pretty cool thing

34
00:01:31,250 --> 00:01:36,390
called win32 renderer test and when I

35
00:01:34,349 --> 00:01:39,419
run win32 render a test you can see is

36
00:01:36,390 --> 00:01:42,118
we've got an entire hand made hero style

37
00:01:39,420 --> 00:01:44,250
scene that you can run completely

38
00:01:42,118 --> 00:01:47,340
separately now there's a couple things

39
00:01:44,250 --> 00:01:50,969
that we want to do here and to finish

40
00:01:47,340 --> 00:01:53,820
off our renderer section and I want to

41
00:01:50,969 --> 00:01:55,769
try and do that all today so the first

42
00:01:53,819 --> 00:01:57,989
thing that we want to do is just fix our

43
00:01:55,769 --> 00:02:00,060
API for calling primitives now I'm gonna

44
00:01:57,989 --> 00:02:01,500
talk about that in a second but we're

45
00:02:00,060 --> 00:02:03,210
gonna dovetail that with fixing the

46
00:02:01,500 --> 00:02:06,030
renderer so let me just show you real

47
00:02:03,209 --> 00:02:08,310
quickly where we're at on this and then

48
00:02:06,030 --> 00:02:10,348
I'll talk about that so what you can see

49
00:02:08,310 --> 00:02:12,719
here is if we open up our win32 render

50
00:02:10,348 --> 00:02:13,769
test example program this is an example

51
00:02:12,719 --> 00:02:15,599
of how i'm on win

52
00:02:13,770 --> 00:02:18,390
you could load and use our render very

53
00:02:15,599 --> 00:02:20,400
easily this little demarcation on the

54
00:02:18,389 --> 00:02:22,319
file all of this stuff is just some

55
00:02:20,400 --> 00:02:25,110
windows code that for opening like a

56
00:02:22,319 --> 00:02:26,849
window right and loading a bitmap so

57
00:02:25,110 --> 00:02:28,710
it's just a little bit of simple code

58
00:02:26,849 --> 00:02:30,449
that you need to start up your windows

59
00:02:28,710 --> 00:02:33,000
application has nothing to do with the

60
00:02:30,449 --> 00:02:36,119
renderer all the stuff for the renderer

61
00:02:33,000 --> 00:02:39,300
is basically right here here is our

62
00:02:36,120 --> 00:02:40,379
function that is called threaded at the

63
00:02:39,300 --> 00:02:43,020
moment you don't have to call it

64
00:02:40,379 --> 00:02:44,519
threaded but you can so you call in here

65
00:02:43,020 --> 00:02:46,980
and you can see everything that you do

66
00:02:44,520 --> 00:02:48,719
this is not related to the render it's

67
00:02:46,979 --> 00:02:51,689
just a call to initialize a some

68
00:02:48,719 --> 00:02:53,219
statistics keeping here is a texture

69
00:02:51,689 --> 00:02:56,009
cube that's part of the renderer you say

70
00:02:53,219 --> 00:02:57,599
hey I want a texture queue here is the

71
00:02:56,009 --> 00:02:58,530
render initialization part of the

72
00:02:57,599 --> 00:03:00,659
renderer

73
00:02:58,530 --> 00:03:02,069
this init test scene is just our demo

74
00:03:00,659 --> 00:03:04,199
scene so that again is not part of

75
00:03:02,069 --> 00:03:05,159
render this is not technically part of

76
00:03:04,199 --> 00:03:06,689
the renderer but it is part of the

77
00:03:05,159 --> 00:03:08,159
utility coax render you can just say I

78
00:03:06,689 --> 00:03:11,189
want a standard camera that's like

79
00:03:08,159 --> 00:03:13,500
viewing a scene and then we have some

80
00:03:11,189 --> 00:03:15,629
variables we set up inside the run loop

81
00:03:13,500 --> 00:03:17,819
we just ask windows what the size of

82
00:03:15,629 --> 00:03:19,979
things is and then we use a utility

83
00:03:17,819 --> 00:03:22,139
function in the renderer to fit a 16 by

84
00:03:19,979 --> 00:03:24,239
9 aspect ratio to it you don't have to

85
00:03:22,139 --> 00:03:26,969
like here like right here you can just

86
00:03:24,240 --> 00:03:28,890
use recommend max if you'd rather so we

87
00:03:26,969 --> 00:03:30,569
actually support either aspect ratio

88
00:03:28,889 --> 00:03:35,339
fitting your window or not depending on

89
00:03:30,569 --> 00:03:37,139
how your game wants to run we then do

90
00:03:35,340 --> 00:03:39,000
some camera parameter updating again

91
00:03:37,139 --> 00:03:39,958
this is totally up to the application as

92
00:03:39,000 --> 00:03:41,819
I leave you at the render it's just

93
00:03:39,959 --> 00:03:43,349
however the app wall separates camera we

94
00:03:41,819 --> 00:03:45,689
then do our render calls process the

95
00:03:43,349 --> 00:03:47,489
texture queue begin the frame we want

96
00:03:45,689 --> 00:03:48,780
vsync to be off if possible although

97
00:03:47,490 --> 00:03:51,090
it's not really possible in windowed

98
00:03:48,780 --> 00:03:52,229
mode on Windows 10 so it doesn't it

99
00:03:51,090 --> 00:03:54,539
won't actually do that but we're

100
00:03:52,229 --> 00:03:56,699
requesting it in case it can we then

101
00:03:54,539 --> 00:03:57,989
begin one group of render calls we say

102
00:03:56,699 --> 00:04:00,419
where we want to view that view the

103
00:03:57,990 --> 00:04:02,129
scene from we push a scene on we end the

104
00:04:00,419 --> 00:04:04,530
render group we end the frame and that's

105
00:04:02,129 --> 00:04:07,109
it very very simple to use this render

106
00:04:04,530 --> 00:04:08,550
now really simple understand here's our

107
00:04:07,110 --> 00:04:10,050
quick simple scene this is the only

108
00:04:08,550 --> 00:04:13,890
other place we call the renderer here

109
00:04:10,050 --> 00:04:21,389
here here here and here and that's to

110
00:04:13,889 --> 00:04:24,990
put elements onto that like that's

111
00:04:21,389 --> 00:04:26,789
basically to put our primitives into the

112
00:04:24,990 --> 00:04:31,439
render buffer so they can be rendered

113
00:04:26,790 --> 00:04:34,500
right and so what we want to do today is

114
00:04:31,439 --> 00:04:36,629
we want to do a combined update first we

115
00:04:34,500 --> 00:04:39,060
want to update these functions to be

116
00:04:36,629 --> 00:04:40,439
more in line with a finished API one

117
00:04:39,060 --> 00:04:42,780
that's been thought through a little bit

118
00:04:40,439 --> 00:04:44,790
and tuned because all the rest of our

119
00:04:42,779 --> 00:04:49,559
API is now kind of have and we have a

120
00:04:44,790 --> 00:04:53,189
pretty nice API now so all of that wants

121
00:04:49,560 --> 00:04:55,860
to be all of that that looks nice

122
00:04:53,189 --> 00:04:58,589
all of this wants to be as nice and it's

123
00:04:55,860 --> 00:05:01,050
probably ok as it is to a certain extent

124
00:04:58,589 --> 00:05:03,509
but it's not quite there yet

125
00:05:01,050 --> 00:05:05,040
for starters for example we want to

126
00:05:03,509 --> 00:05:08,370
support rotation and you'll notice we

127
00:05:05,040 --> 00:05:09,660
don't have a rotation sprite primitive

128
00:05:08,370 --> 00:05:14,340
in there now so you see how these things

129
00:05:09,660 --> 00:05:16,650
collapse into 2d that's purely how we're

130
00:05:14,339 --> 00:05:17,819
asking them to do like we're that's what

131
00:05:16,649 --> 00:05:20,459
we're requesting right now and obviously

132
00:05:17,819 --> 00:05:22,769
we don't want that so we want a

133
00:05:20,459 --> 00:05:26,370
primitive that supports rotation because

134
00:05:22,769 --> 00:05:27,569
it's easy enough for us to do so we'd

135
00:05:26,370 --> 00:05:30,090
like to be able to support stuff like

136
00:05:27,569 --> 00:05:31,740
that we'd also like these to be maybe a

137
00:05:30,089 --> 00:05:34,349
little more straightforward they're kind

138
00:05:31,740 --> 00:05:35,850
of complicated right now into terms of

139
00:05:34,350 --> 00:05:37,920
how they're used and maybe there's ways

140
00:05:35,850 --> 00:05:40,560
we could make that a little bit more

141
00:05:37,920 --> 00:05:43,710
sane but then the other really big thing

142
00:05:40,560 --> 00:05:46,350
we want to do is we want these textures

143
00:05:43,709 --> 00:05:46,889
to be things that are faster than they

144
00:05:46,350 --> 00:05:49,379
are right now

145
00:05:46,889 --> 00:05:52,680
so the way that we do our textures right

146
00:05:49,379 --> 00:05:54,360
now is very slow it's really the slow

147
00:05:52,680 --> 00:05:58,079
part of our render in terms of

148
00:05:54,360 --> 00:06:00,360
structural aspects these textures are

149
00:05:58,079 --> 00:06:02,279
created as separate textures and in

150
00:06:00,360 --> 00:06:05,340
order to make those textures work

151
00:06:02,279 --> 00:06:07,289
quickly we would have to count on the

152
00:06:05,339 --> 00:06:10,349
card supporting bind list textures which

153
00:06:07,290 --> 00:06:13,080
not all cards do certainly most modern

154
00:06:10,350 --> 00:06:15,000
cards do a card that came from today

155
00:06:13,079 --> 00:06:18,479
would almost certainly support behind

156
00:06:15,000 --> 00:06:20,100
those textures I guess I can't speak for

157
00:06:18,480 --> 00:06:21,300
like phone chips and stuff because

158
00:06:20,100 --> 00:06:23,370
there's a lot of those out there and out

159
00:06:21,300 --> 00:06:26,730
and or that much about them but I mean

160
00:06:23,370 --> 00:06:28,769
for thick you know basic gaming cards

161
00:06:26,730 --> 00:06:30,750
like you would see even integrated

162
00:06:28,769 --> 00:06:33,120
graphics I believe will typically

163
00:06:30,750 --> 00:06:34,500
support by on those textures now but as

164
00:06:33,120 --> 00:06:36,360
of say four years ago it wasn't

165
00:06:34,500 --> 00:06:38,870
necessarily true so there's probably a

166
00:06:36,360 --> 00:06:40,650
lot of cards out there that just don't

167
00:06:38,870 --> 00:06:42,240
so in order to make

168
00:06:40,649 --> 00:06:43,649
work better I think what we want to use

169
00:06:42,240 --> 00:06:45,509
as textures rays I've said that before

170
00:06:43,649 --> 00:06:46,799
texture rays are almost ubiquitous at

171
00:06:45,509 --> 00:06:48,900
this point it's pretty hard to go back

172
00:06:46,800 --> 00:06:53,430
to find a card that wouldn't support

173
00:06:48,899 --> 00:06:54,989
texture arrays so being able to turn

174
00:06:53,430 --> 00:06:57,030
these into something that's a texture

175
00:06:54,990 --> 00:06:58,949
array based thing that would probably be

176
00:06:57,029 --> 00:07:01,500
really good for us and so that's kind of

177
00:06:58,949 --> 00:07:06,000
where we want to go with that and that's

178
00:07:01,500 --> 00:07:07,470
a big change to our API I probably said

179
00:07:06,000 --> 00:07:09,600
that wrong that's a big change to our

180
00:07:07,470 --> 00:07:11,639
renderer it doesn't really change the

181
00:07:09,600 --> 00:07:13,110
API too much other than getting rid of

182
00:07:11,639 --> 00:07:15,680
one thing that I really wanted to get

183
00:07:13,110 --> 00:07:18,150
rid of which is this part right here

184
00:07:15,680 --> 00:07:20,970
when you load into the texture queue

185
00:07:18,149 --> 00:07:23,788
that aspect there of having to do this

186
00:07:20,970 --> 00:07:25,500
feed-forward thing this feedback word

187
00:07:23,788 --> 00:07:27,240
thing I wanted to fix and we'll see that

188
00:07:25,500 --> 00:07:28,430
mm-hmm we can fix that a little bit

189
00:07:27,240 --> 00:07:31,168
later

190
00:07:28,430 --> 00:07:32,788
but basically what I want to do here is

191
00:07:31,168 --> 00:07:34,198
I want to start looking at that texture

192
00:07:32,788 --> 00:07:36,839
array stuff and see what we can do about

193
00:07:34,199 --> 00:07:39,150
that and I feel like there'll be a bunch

194
00:07:36,839 --> 00:07:44,129
of things we can do there so that's

195
00:07:39,149 --> 00:07:46,168
really what we're looking at cleaning up

196
00:07:44,129 --> 00:07:49,469
those api's and as we do that moving to

197
00:07:46,168 --> 00:07:50,490
a texture array system and that will

198
00:07:49,470 --> 00:07:54,270
both increase our performance

199
00:07:50,490 --> 00:07:55,348
dramatically in the best case and clear

200
00:07:54,269 --> 00:07:59,129
the way for us being able to do

201
00:07:55,348 --> 00:08:01,228
performance optimizations but it also

202
00:07:59,129 --> 00:08:02,908
will just make the API easier to use so

203
00:08:01,228 --> 00:08:04,620
all of that stuff I kind of want do in

204
00:08:02,908 --> 00:08:06,389
one big push that's our big push we're

205
00:08:04,620 --> 00:08:08,939
gonna start today maybe we'll finish it

206
00:08:06,389 --> 00:08:11,129
maybe we won't but that's that's what

207
00:08:08,939 --> 00:08:13,110
we're doing and that's really the last

208
00:08:11,129 --> 00:08:15,719
thing on the renderer before I would

209
00:08:13,110 --> 00:08:17,848
consider the renderer pretty good there

210
00:08:15,720 --> 00:08:19,320
is a thing before saying it's finished

211
00:08:17,848 --> 00:08:20,908
and that's the lighting but we don't

212
00:08:19,319 --> 00:08:22,348
need to finish the lighting anytime soon

213
00:08:20,908 --> 00:08:25,620
we've got some basic lighting in there

214
00:08:22,348 --> 00:08:27,899
we can improve that over time as we get

215
00:08:25,620 --> 00:08:30,478
our scenes together in the game will

216
00:08:27,899 --> 00:08:33,299
ping pong back to the renderer to sort

217
00:08:30,478 --> 00:08:34,769
of make those lighting improvements and

218
00:08:33,299 --> 00:08:37,109
get something that we're happy with with

219
00:08:34,769 --> 00:08:38,848
lighting so that part is kind of a

220
00:08:37,110 --> 00:08:40,560
separate push at some point it's not

221
00:08:38,849 --> 00:08:42,990
something we're going to do now and it's

222
00:08:40,559 --> 00:08:45,329
not something that we need to have

223
00:08:42,990 --> 00:08:47,909
before we consider the renderer finished

224
00:08:45,330 --> 00:08:48,930
I mean for the purposes of this this

225
00:08:47,909 --> 00:08:52,360
pass

226
00:08:48,929 --> 00:08:53,979
okay um so the first thing I want to do

227
00:08:52,360 --> 00:08:56,830
is let's just start with something

228
00:08:53,980 --> 00:09:01,090
really simple okay and we'll let this

229
00:08:56,830 --> 00:09:02,770
drive sort of our meander through the

230
00:09:01,090 --> 00:09:06,879
codebase here and trying to make things

231
00:09:02,769 --> 00:09:08,769
work a little bit better like I said so

232
00:09:06,879 --> 00:09:10,450
at the moment what you can see is when

233
00:09:08,769 --> 00:09:12,730
we've got these calls here so one of our

234
00:09:10,450 --> 00:09:15,240
calls is push right push right as you

235
00:09:12,730 --> 00:09:17,529
can see it passes an x-axis and a y-axis

236
00:09:15,240 --> 00:09:21,610
and one of the things that happens here

237
00:09:17,529 --> 00:09:23,889
when we're doing this is that because

238
00:09:21,610 --> 00:09:26,169
we're just using global x and y-axes

239
00:09:23,889 --> 00:09:27,429
when we when we pass these through you

240
00:09:26,169 --> 00:09:29,889
can kind of see how these sprites

241
00:09:27,429 --> 00:09:33,309
collapse now why do they collapse

242
00:09:29,889 --> 00:09:34,480
okay what's what's happening there and

243
00:09:33,309 --> 00:09:36,099
again this has nothing to do with the

244
00:09:34,480 --> 00:09:38,800
renderer cuz the renderer just thinks

245
00:09:36,100 --> 00:09:40,570
about quads and so if you're just

246
00:09:38,799 --> 00:09:44,049
thinking about quads it's impossible to

247
00:09:40,570 --> 00:09:45,190
get this problem to be the renderers

248
00:09:44,049 --> 00:09:46,719
fault because the renderer is just

249
00:09:45,190 --> 00:09:49,840
rendering the quads you tell it to

250
00:09:46,720 --> 00:09:51,550
render you know that's all it's doing so

251
00:09:49,840 --> 00:09:53,110
that back-end is not the problem the

252
00:09:51,549 --> 00:09:55,659
problem is right here in the push sprite

253
00:09:53,110 --> 00:09:58,570
call it's how we're constructing that

254
00:09:55,659 --> 00:10:00,399
quad so if we pop over to Milton for a

255
00:09:58,570 --> 00:10:02,320
second and just do a little diagram so

256
00:10:00,399 --> 00:10:09,120
folks can be on the same page about

257
00:10:02,320 --> 00:10:09,120
what's going on here why are there two

258
00:10:09,179 --> 00:10:16,209
why are there two separate cursors I

259
00:10:13,889 --> 00:10:17,769
don't know what's going on there but I

260
00:10:16,210 --> 00:10:20,470
suspect it's not Milton's fault that

261
00:10:17,769 --> 00:10:27,939
looks like a Windows thing all right

262
00:10:20,470 --> 00:10:36,740
well anyway here's day 477 this is going

263
00:10:27,940 --> 00:10:40,790
to be camera matched quads

264
00:10:36,740 --> 00:10:44,269
and so what you can see when we run this

265
00:10:40,789 --> 00:10:47,299
is there's a number of issues that we

266
00:10:44,269 --> 00:10:50,000
want to address in terms of how you

267
00:10:47,299 --> 00:10:52,579
specify these sort of upright quads

268
00:10:50,000 --> 00:10:55,580
right and you can see here that we sort

269
00:10:52,580 --> 00:10:58,610
of have a notion you pass in a thing

270
00:10:55,580 --> 00:11:02,210
here that says what you want in terms of

271
00:10:58,610 --> 00:11:04,789
whether something's upright or not and

272
00:11:02,210 --> 00:11:06,889
then what we do is if something is not

273
00:11:04,789 --> 00:11:09,259
upright then we assume that you're

274
00:11:06,889 --> 00:11:11,149
giving us the actual axis for it if

275
00:11:09,259 --> 00:11:15,470
something is upright then we do this

276
00:11:11,149 --> 00:11:18,079
kind of like upright standing sort of

277
00:11:15,470 --> 00:11:20,720
separate thing that we do to make it

278
00:11:18,080 --> 00:11:22,160
look like a sprite card and just to

279
00:11:20,720 --> 00:11:24,680
underscore the difference between those

280
00:11:22,159 --> 00:11:28,370
two things what you can see here if I

281
00:11:24,679 --> 00:11:30,259
take the tree and I change that true to

282
00:11:28,370 --> 00:11:34,279
a false so that it's not thinking it's

283
00:11:30,259 --> 00:11:36,230
upright right now then what happens is

284
00:11:34,279 --> 00:11:38,569
when I run it you can see that the trees

285
00:11:36,230 --> 00:11:40,759
are kind of flat lying on the ground and

286
00:11:38,570 --> 00:11:43,400
furthermore you can see the z-fighting

287
00:11:40,759 --> 00:11:45,500
happening there that z-fighting is

288
00:11:43,399 --> 00:11:48,259
happening because those two planes are

289
00:11:45,500 --> 00:11:51,409
completely coincident so the z values of

290
00:11:48,259 --> 00:11:54,559
the tree and the z values of the the

291
00:11:51,409 --> 00:11:56,750
grass are completely equal theoretically

292
00:11:54,559 --> 00:11:58,819
but because of the weight it er aters

293
00:11:56,750 --> 00:12:00,679
work there they're going to oscillate in

294
00:11:58,820 --> 00:12:03,140
discrete space to be slightly different

295
00:12:00,679 --> 00:12:06,649
and that's where you get that Z fighting

296
00:12:03,139 --> 00:12:07,970
from right anyplace where that's not

297
00:12:06,649 --> 00:12:12,799
happening you don't get the Z fighting

298
00:12:07,970 --> 00:12:14,899
okay so that's what happens if we take

299
00:12:12,799 --> 00:12:16,939
out that part of the thing where we go

300
00:12:14,899 --> 00:12:18,289
from the you know we've got the sort of

301
00:12:16,940 --> 00:12:20,870
two different ways if that can be called

302
00:12:18,289 --> 00:12:23,689
there with the true and the false so the

303
00:12:20,870 --> 00:12:26,200
first thing that I'd like to do is I'd

304
00:12:23,690 --> 00:12:28,940
like to separate these two things out

305
00:12:26,200 --> 00:12:31,400
because I don't think we wanted one call

306
00:12:28,940 --> 00:12:33,230
for both of these things I think I would

307
00:12:31,399 --> 00:12:35,779
rather have two calls because they're

308
00:12:33,230 --> 00:12:40,070
really two different things I think I

309
00:12:35,779 --> 00:12:42,439
would like to have a push you know this

310
00:12:40,070 --> 00:12:46,340
is effectively a push quad or a push you

311
00:12:42,440 --> 00:12:49,850
know I don't I don't really know how to

312
00:12:46,340 --> 00:12:50,540
say it right but a push to D push to D

313
00:12:49,850 --> 00:12:52,220
plate

314
00:12:50,539 --> 00:12:57,829
call right it's a it's a thing that's

315
00:12:52,220 --> 00:13:00,350
gonna do not this right so something

316
00:12:57,830 --> 00:13:03,200
that here you pass in and you just say

317
00:13:00,350 --> 00:13:05,509
hey if you want to create one of these

318
00:13:03,200 --> 00:13:09,259
sprites we create one of these I don't

319
00:13:05,509 --> 00:13:10,730
know what that brown P is okay so that's

320
00:13:09,259 --> 00:13:12,139
just how we decided to position it we

321
00:13:10,730 --> 00:13:14,600
decided to raise this up off the ground

322
00:13:12,139 --> 00:13:15,769
so the ground P part is is not

323
00:13:14,600 --> 00:13:17,120
particularly relevant you know this

324
00:13:15,769 --> 00:13:21,079
would probably turn into something else

325
00:13:17,120 --> 00:13:22,940
like maybe this is a a center peak all

326
00:13:21,080 --> 00:13:24,980
and so if you want to push a sprite

327
00:13:22,940 --> 00:13:27,260
where you just said what the x-axis

328
00:13:24,980 --> 00:13:32,350
y-axis is and so on

329
00:13:27,259 --> 00:13:32,350
then you know maybe it looks like this

330
00:13:34,389 --> 00:13:39,319
and maybe this is you know if I push a

331
00:13:37,309 --> 00:13:41,629
sprite on and I just want to say what

332
00:13:39,320 --> 00:13:43,850
the x axis and y axis are and you just

333
00:13:41,629 --> 00:13:48,139
used those axes then it looks like this

334
00:13:43,850 --> 00:13:50,060
right and that to me would be clearer

335
00:13:48,139 --> 00:13:53,389
it's just a little bit nicer if we do it

336
00:13:50,059 --> 00:13:56,299
that way the menu vmax UV thing again

337
00:13:53,389 --> 00:13:58,549
also I don't know how necessary that

338
00:13:56,299 --> 00:14:00,829
really is in this case because again

339
00:13:58,549 --> 00:14:02,599
that doesn't really potentially need to

340
00:14:00,830 --> 00:14:05,570
be there we could just assume that's 0 &amp;

341
00:14:02,600 --> 00:14:08,450
1 in fact maybe I will do that for now

342
00:14:05,570 --> 00:14:10,550
where we maybe we move that in like this

343
00:14:08,450 --> 00:14:11,960
that's because the color is something

344
00:14:10,549 --> 00:14:14,589
that you'll probably always want to

345
00:14:11,960 --> 00:14:17,180
specify or often often want to specify

346
00:14:14,590 --> 00:14:21,139
but the the min and Max UV you're

347
00:14:17,179 --> 00:14:22,899
probably not necessarily that so we can

348
00:14:21,139 --> 00:14:24,919
have a lot of default parameters here

349
00:14:22,899 --> 00:14:27,829
because a lot of these things wouldn't

350
00:14:24,919 --> 00:14:29,899
have to be known and so that way when we

351
00:14:27,830 --> 00:14:31,160
do this yeah these can just go away and

352
00:14:29,899 --> 00:14:33,139
if you want to specify a color you can

353
00:14:31,159 --> 00:14:36,529
and so you know if you imagined us

354
00:14:33,139 --> 00:14:38,210
wanting to push one of these on here we

355
00:14:36,529 --> 00:14:40,339
could just say alright that's a push

356
00:14:38,210 --> 00:14:47,150
bright and that pushes a flat sprite

357
00:14:40,340 --> 00:14:49,759
into with the world P that pushes right

358
00:14:47,149 --> 00:14:51,889
on with the world position in the and

359
00:14:49,759 --> 00:14:53,299
it's just the world axes and whatever

360
00:14:51,889 --> 00:14:56,210
you specify are the axis that it

361
00:14:53,299 --> 00:14:57,859
actually uses right and furthermore we

362
00:14:56,210 --> 00:15:01,610
can we can make that a little bit more

363
00:14:57,860 --> 00:15:04,210
general there let me go ahead and where

364
00:15:01,610 --> 00:15:04,210
the words are

365
00:15:06,129 --> 00:15:10,778
what's going on here no none of this

366
00:15:11,679 --> 00:15:16,599
okay

367
00:15:12,970 --> 00:15:18,709
so in here where we do our push right

368
00:15:16,600 --> 00:15:20,629
don't ask me why I didn't just use the

369
00:15:18,708 --> 00:15:23,539
one that was over here what you can see

370
00:15:20,629 --> 00:15:26,870
here too is the x-axis and whacks come

371
00:15:23,539 --> 00:15:28,549
in as as two-dimensional and I don't

372
00:15:26,870 --> 00:15:31,370
really want that either

373
00:15:28,549 --> 00:15:33,620
so the way that these work right where

374
00:15:31,370 --> 00:15:36,528
they're being pushed off they're just

375
00:15:33,620 --> 00:15:38,480
assumed they're just assuming certain

376
00:15:36,528 --> 00:15:41,419
things about how they work and I don't

377
00:15:38,480 --> 00:15:43,819
really want to do that either so what

378
00:15:41,419 --> 00:15:53,599
I'm going to do here is say that these

379
00:15:43,818 --> 00:15:56,269
are going to be used directly and so

380
00:15:53,600 --> 00:15:58,430
this is if you just want a 2d sprite and

381
00:15:56,269 --> 00:15:59,929
you know probably most of the time

382
00:15:58,429 --> 00:16:01,669
you're going to specify that axis as

383
00:15:59,929 --> 00:16:06,739
well so I feel like these I must want to

384
00:16:01,669 --> 00:16:08,179
be probably up here like this because

385
00:16:06,740 --> 00:16:12,278
those are the more likely things to be

386
00:16:08,179 --> 00:16:15,318
specified and these are gonna be VIII's

387
00:16:12,278 --> 00:16:17,929
so this is a thing that literally takes

388
00:16:15,318 --> 00:16:20,778
a construction a direct construction

389
00:16:17,929 --> 00:16:23,558
from you and it goes from there don't

390
00:16:20,778 --> 00:16:33,620
ask me why do that there we go

391
00:16:23,558 --> 00:16:36,639
okay let's pop back here these are just

392
00:16:33,620 --> 00:16:36,639
scales on this

393
00:16:44,769 --> 00:16:49,279
- something like that

394
00:16:46,639 --> 00:16:51,590
and we could just make it so that you

395
00:16:49,279 --> 00:16:53,629
actually pass these in scaled but I'm

396
00:16:51,590 --> 00:16:54,830
just gonna say for now let's not do that

397
00:16:53,629 --> 00:17:00,200
because maybe we need them for other

398
00:16:54,830 --> 00:17:02,600
things we'll see now the Z bias doesn't

399
00:17:00,200 --> 00:17:04,759
come into play here because no one has

400
00:17:02,600 --> 00:17:08,390
specified one but I think we want to

401
00:17:04,759 --> 00:17:10,160
specify one and so the Z bias is also

402
00:17:08,390 --> 00:17:12,320
something that kind of as the sprite

403
00:17:10,160 --> 00:17:14,570
goes up you might want to it to have

404
00:17:12,319 --> 00:17:17,509
specified the problem is we don't really

405
00:17:14,569 --> 00:17:19,159
know what should have the Z bias and

406
00:17:17,509 --> 00:17:21,170
what shouldn't so I feel like in this

407
00:17:19,160 --> 00:17:24,110
case this has to be for non Z bias

408
00:17:21,170 --> 00:17:26,539
rendering I just don't see any way to

409
00:17:24,109 --> 00:17:28,250
really get around that because we would

410
00:17:26,539 --> 00:17:30,470
need to have I mean I guess you could

411
00:17:28,250 --> 00:17:34,099
pass in what effectively worm in UV and

412
00:17:30,470 --> 00:17:37,940
max UV kinds of things and then it would

413
00:17:34,099 --> 00:17:39,769
you could use those as Z biases but I

414
00:17:37,940 --> 00:17:41,600
think this is basically for non si bias

415
00:17:39,769 --> 00:17:44,240
rendering so this is if you're just

416
00:17:41,599 --> 00:17:45,769
pushing sprites down in general and you

417
00:17:44,240 --> 00:17:46,670
don't want to do anything fancy with

418
00:17:45,769 --> 00:17:50,059
them

419
00:17:46,670 --> 00:17:52,550
that's this call right and I think

420
00:17:50,059 --> 00:17:54,230
that's roughly what we would want we

421
00:17:52,549 --> 00:17:56,960
don't have much cost for that we're

422
00:17:54,230 --> 00:18:00,230
mostly doing sprite cards in this so I'm

423
00:17:56,960 --> 00:18:06,579
gonna call this thing like a push up

424
00:18:00,230 --> 00:18:12,829
right and it's just gonna always do this

425
00:18:06,579 --> 00:18:16,339
oops and this is gonna have a little bit

426
00:18:12,829 --> 00:18:20,839
more two teeth to it now right

427
00:18:16,339 --> 00:18:23,779
so when we call this function what's

428
00:18:20,839 --> 00:18:26,439
going on with this view I uh sir so

429
00:18:23,779 --> 00:18:29,089
that's actually set to a different thing

430
00:18:26,440 --> 00:18:31,090
looks like we edited that here that's

431
00:18:29,089 --> 00:18:34,549
our current tuning so let's keep that

432
00:18:31,089 --> 00:18:37,609
there we go and so I'm gonna go ahead

433
00:18:34,549 --> 00:18:40,849
and and make this look look a little bit

434
00:18:37,609 --> 00:18:43,369
like its own separate thing and so these

435
00:18:40,849 --> 00:18:45,049
folks here now are going to call this

436
00:18:43,369 --> 00:18:49,250
push up right call they're not going to

437
00:18:45,049 --> 00:18:50,539
call the push sprite call anymore

438
00:18:49,250 --> 00:18:52,809
they're gonna call the push up right

439
00:18:50,539 --> 00:18:52,809
call

440
00:18:54,420 --> 00:18:59,019
get that going and then we're going to

441
00:18:57,339 --> 00:19:00,879
tune that and I'll switch the trees back

442
00:18:59,019 --> 00:19:02,259
to that too in a second here once we

443
00:19:00,880 --> 00:19:04,900
actually decide what the function code

444
00:19:02,259 --> 00:19:07,539
looks like so now you can see we've got

445
00:19:04,900 --> 00:19:09,910
those the grass going through there the

446
00:19:07,539 --> 00:19:11,109
Krampus head also is but we aren't

447
00:19:09,910 --> 00:19:15,370
looking at the Krampus head in that

448
00:19:11,109 --> 00:19:18,849
particular view right now so that's fine

449
00:19:15,369 --> 00:19:21,639
now what I'd like to do is take a look

450
00:19:18,849 --> 00:19:23,349
at how we're doing that upright call and

451
00:19:21,640 --> 00:19:26,890
think about how we actually want this to

452
00:19:23,349 --> 00:19:29,289
work so to start with we look at what

453
00:19:26,890 --> 00:19:31,050
the calls are here's the like base P

454
00:19:29,289 --> 00:19:33,759
that's on the ground that we're doing

455
00:19:31,049 --> 00:19:36,789
here's the size that we want to be

456
00:19:33,759 --> 00:19:39,819
here's the min UV and Max UV again those

457
00:19:36,789 --> 00:19:43,359
I think could come in here and really be

458
00:19:39,819 --> 00:19:46,419
more like default because for us they're

459
00:19:43,359 --> 00:19:48,099
always going to be these parameters I

460
00:19:46,420 --> 00:19:49,390
think for other people maybe they

461
00:19:48,099 --> 00:19:52,029
wouldn't be if they're trying to pick

462
00:19:49,390 --> 00:19:53,710
sprites out of a texture Atlas or

463
00:19:52,029 --> 00:19:56,619
something like that that they're using

464
00:19:53,710 --> 00:19:58,809
they might want that to be the case I

465
00:19:56,619 --> 00:20:02,019
don't know but you know that's that's

466
00:19:58,809 --> 00:20:03,190
their choice and we can make that be

467
00:20:02,019 --> 00:20:07,990
something that they deal with later

468
00:20:03,190 --> 00:20:12,340
right okay so let's go ahead and and run

469
00:20:07,990 --> 00:20:14,140
this now so there's again the the grass

470
00:20:12,339 --> 00:20:15,490
just being the way that it was which is

471
00:20:14,140 --> 00:20:19,360
what I'm expecting I'm not expecting to

472
00:20:15,490 --> 00:20:21,039
see any change here so here we can start

473
00:20:19,359 --> 00:20:22,240
thinking about what we want this to

474
00:20:21,039 --> 00:20:25,119
actually look like now

475
00:20:22,240 --> 00:20:26,950
so in addition to the x-axis and y-axis

476
00:20:25,119 --> 00:20:29,289
when we're working on this stuff here

477
00:20:26,950 --> 00:20:31,450
what this also needs to be able to

478
00:20:29,289 --> 00:20:35,759
function properly is it needs to know

479
00:20:31,450 --> 00:20:35,759
what you expect the z-axis to be

480
00:20:40,890 --> 00:20:46,570
because right now it doesn't know

481
00:20:44,619 --> 00:20:49,269
and it also well I guess that's not true

482
00:20:46,569 --> 00:20:50,740
so we need a number of things really

483
00:20:49,269 --> 00:20:53,920
what we need here is to know what the

484
00:20:50,740 --> 00:20:56,190
camera looks like right we kind of need

485
00:20:53,920 --> 00:21:00,130
to know like what's the camera

486
00:20:56,190 --> 00:21:06,130
parameters for this scene so that we can

487
00:21:00,130 --> 00:21:09,040
face this sprite card towards it right

488
00:21:06,130 --> 00:21:13,600
so let's go over to Milton and sort of

489
00:21:09,039 --> 00:21:16,899
explain how that works so what we're

490
00:21:13,599 --> 00:21:19,808
doing right now and you can kind of see

491
00:21:16,900 --> 00:21:23,290
this you can kind of see this with the

492
00:21:19,808 --> 00:21:25,928
way this is working is we want to talk

493
00:21:23,289 --> 00:21:28,240
about a 2d sprite but we want to talk

494
00:21:25,929 --> 00:21:30,220
about it in a 3d world so we typically

495
00:21:28,240 --> 00:21:31,960
have something like here is a you know a

496
00:21:30,220 --> 00:21:35,049
cube or something that we've drawn and

497
00:21:31,960 --> 00:21:38,110
we want to place the sprite on this cube

498
00:21:35,049 --> 00:21:41,049
and we want to construct a sprite card

499
00:21:38,109 --> 00:21:44,678
that stands upright from the cube okay

500
00:21:41,049 --> 00:21:46,720
and we're doing that right now by a

501
00:21:44,679 --> 00:21:51,730
particular geometric construction that

502
00:21:46,720 --> 00:21:53,589
you can see here okay and if we skip

503
00:21:51,730 --> 00:21:55,509
this part just temporarily and then I'll

504
00:21:53,589 --> 00:21:57,759
come back to it explain what it does for

505
00:21:55,509 --> 00:22:02,410
those of you don't remember or never saw

506
00:21:57,759 --> 00:22:05,200
that part all we do is we take how big

507
00:22:02,410 --> 00:22:07,720
you wanted this right to be we multiply

508
00:22:05,200 --> 00:22:10,058
the input X and y-axis by those and we

509
00:22:07,720 --> 00:22:12,910
assume that the Z coordinate for it was

510
00:22:10,058 --> 00:22:16,119
nothing right so we assume that we're

511
00:22:12,910 --> 00:22:17,890
going to use the X and y axis as like

512
00:22:16,119 --> 00:22:24,389
three dimensional vectors that just have

513
00:22:17,890 --> 00:22:26,610
the first part in there okay and then we

514
00:22:24,390 --> 00:22:30,370
imagine right

515
00:22:26,609 --> 00:22:33,129
placing the points of the quad by

516
00:22:30,369 --> 00:22:37,719
starting at the ground position which is

517
00:22:33,130 --> 00:22:40,450
here going negative 0.5 along the x axis

518
00:22:37,720 --> 00:22:43,480
which is going to be this way right so

519
00:22:40,450 --> 00:22:47,440
we're going here half the width in the

520
00:22:43,480 --> 00:22:51,579
in the negative x-direction okay we

521
00:22:47,440 --> 00:22:52,360
imagine the min X min Y to be there we

522
00:22:51,579 --> 00:22:56,230
then

523
00:22:52,359 --> 00:22:57,699
the y-axis for the min x max y right and

524
00:22:56,230 --> 00:23:00,849
what does that do

525
00:22:57,700 --> 00:23:04,210
well the y-axis remember this is Z Z is

526
00:23:00,849 --> 00:23:07,058
up so Y is like going out back that way

527
00:23:04,210 --> 00:23:09,490
so this is going like over here and

528
00:23:07,058 --> 00:23:11,170
placing it here often the in the back I

529
00:23:09,490 --> 00:23:13,390
should maybe I could even do it this way

530
00:23:11,170 --> 00:23:16,330
let's say Y is that way and X is this

531
00:23:13,390 --> 00:23:19,480
way right lying down so it's going there

532
00:23:16,329 --> 00:23:22,928
then we're adding the x axis for our max

533
00:23:19,480 --> 00:23:25,390
X min Y so it's going over here to do

534
00:23:22,929 --> 00:23:30,269
that and then it's adding that Y axis

535
00:23:25,390 --> 00:23:33,640
again right to produce the Max version

536
00:23:30,269 --> 00:23:37,389
so if we did nothing at all this sprite

537
00:23:33,640 --> 00:23:41,230
would be lying down flat like that for

538
00:23:37,390 --> 00:23:48,190
the X and y axis but what we do instead

539
00:23:41,230 --> 00:23:50,769
is we actually take the 1 those those x

540
00:23:48,190 --> 00:23:55,390
and y axis that we had so again if we

541
00:23:50,769 --> 00:23:57,730
assume that the world X and Y axis look

542
00:23:55,390 --> 00:24:00,549
like this then what we were producing is

543
00:23:57,730 --> 00:24:03,849
something that looks like that if we

544
00:24:00,548 --> 00:24:05,619
take these axes and look at what's

545
00:24:03,849 --> 00:24:07,569
happening to them in this sort of

546
00:24:05,619 --> 00:24:09,789
upright code this thing that does the

547
00:24:07,569 --> 00:24:12,359
magic snip right what you can see is we

548
00:24:09,789 --> 00:24:16,240
produce a second set of x and y axes and

549
00:24:12,359 --> 00:24:22,629
those set of x and y axes actually use

550
00:24:16,240 --> 00:24:25,660
the y axis as the z okay so we take the

551
00:24:22,630 --> 00:24:29,620
x axis and we reinterpret it as if it's

552
00:24:25,660 --> 00:24:31,870
y was going up instead of out and we do

553
00:24:29,619 --> 00:24:33,668
the same for the y axis so what that

554
00:24:31,869 --> 00:24:36,009
does is it creates two sets of axes

555
00:24:33,669 --> 00:24:38,830
these are the original ones and here's

556
00:24:36,009 --> 00:24:41,730
the new ones so right this part is still

557
00:24:38,829 --> 00:24:50,649
the same but this part has changed ok

558
00:24:41,730 --> 00:24:51,849
then we blend between those two okay now

559
00:24:50,650 --> 00:24:54,280
let's keep going here because we

560
00:24:51,849 --> 00:24:56,230
actually have actually that's not true

561
00:24:54,279 --> 00:24:57,879
sorry we blend between those and this

562
00:24:56,230 --> 00:25:02,829
modified one here so we have to kind of

563
00:24:57,880 --> 00:25:04,929
talk about this one first - right ok so

564
00:25:02,829 --> 00:25:06,069
in the render group we also have the

565
00:25:04,929 --> 00:25:10,540
game transform

566
00:25:06,069 --> 00:25:13,599
x and y-axes right and what that is is

567
00:25:10,539 --> 00:25:22,329
that if you remember let's just jump

568
00:25:13,599 --> 00:25:24,369
back to the this right here is the

569
00:25:22,329 --> 00:25:28,240
camera transform it's got the X and y

570
00:25:24,369 --> 00:25:29,799
axis of the camera transform right and

571
00:25:28,240 --> 00:25:33,190
so what you can see us doing here is

572
00:25:29,799 --> 00:25:36,000
using the cameras x and y axes and what

573
00:25:33,190 --> 00:25:38,769
we're doing is we're blending between

574
00:25:36,000 --> 00:25:40,990
that what the transform would be for the

575
00:25:38,769 --> 00:25:44,639
camera and what the transform would be

576
00:25:40,990 --> 00:25:48,099
for a purely upright sprite okay now

577
00:25:44,640 --> 00:25:50,970
what that means is this is one set of

578
00:25:48,099 --> 00:25:54,519
axes the ones that are just world X&amp;Y

579
00:25:50,970 --> 00:25:56,799
and then the other one is for camera x

580
00:25:54,519 --> 00:25:59,500
and y in order to draw what that is I'm

581
00:25:56,799 --> 00:26:00,849
gonna have to give a little example in

582
00:25:59,500 --> 00:26:05,799
terms of the camera so let's say the

583
00:26:00,849 --> 00:26:07,719
cameras looking this way right I those

584
00:26:05,799 --> 00:26:12,899
axes are gonna look something like this

585
00:26:07,720 --> 00:26:15,670
right and one pointing straight up at us

586
00:26:12,900 --> 00:26:18,940
but the world ones are going to look

587
00:26:15,670 --> 00:26:23,140
more like this right because the world

588
00:26:18,940 --> 00:26:25,000
ones are aligned to the world grid so

589
00:26:23,140 --> 00:26:29,680
what we're doing is we're effectively

590
00:26:25,000 --> 00:26:31,869
blending some measure of the where these

591
00:26:29,680 --> 00:26:33,580
things would be in absolute sense versus

592
00:26:31,869 --> 00:26:35,439
where these things would be in a camera

593
00:26:33,579 --> 00:26:37,659
sense right we're blending between those

594
00:26:35,440 --> 00:26:40,900
two things to produce the final

595
00:26:37,660 --> 00:26:43,300
transform now what would it look like if

596
00:26:40,900 --> 00:26:48,759
we just used the full on-camera

597
00:26:43,299 --> 00:26:53,919
transform right I'm gonna set the T

598
00:26:48,759 --> 00:26:55,269
parameter here to a variable so we can

599
00:26:53,920 --> 00:26:57,789
see the difference pretty easily

600
00:26:55,269 --> 00:27:00,190
so here I've compiled I'm going to

601
00:26:57,789 --> 00:27:06,369
compile this and run it with the

602
00:27:00,190 --> 00:27:07,900
standard T this is this is that and what

603
00:27:06,369 --> 00:27:10,689
I'm going to do is first I'm going to

604
00:27:07,900 --> 00:27:13,950
show here is if we just use the world

605
00:27:10,690 --> 00:27:16,600
axes and if we just use the world axes

606
00:27:13,950 --> 00:27:19,110
what you can see is that these things

607
00:27:16,599 --> 00:27:21,419
are locked to their

608
00:27:19,109 --> 00:27:24,119
world alignment so as we rotate the

609
00:27:21,420 --> 00:27:27,539
camera they're not following the camera

610
00:27:24,119 --> 00:27:30,298
at all they're just purely cards in the

611
00:27:27,539 --> 00:27:34,319
world right there purely 2d cards fins

612
00:27:30,298 --> 00:27:41,220
sticking up in the world if I set this

613
00:27:34,319 --> 00:27:44,308
to 1.0 then now what we get is things

614
00:27:41,220 --> 00:27:47,400
that purely follow the camera right so

615
00:27:44,308 --> 00:27:49,859
here you can see that we are all the way

616
00:27:47,400 --> 00:27:55,530
the grass is always pointing directly

617
00:27:49,859 --> 00:27:57,839
toward us right and so that's that 1.0

618
00:27:55,529 --> 00:28:01,379
version the one that's always facing the

619
00:27:57,839 --> 00:28:03,990
camera that's really the one that we

620
00:28:01,380 --> 00:28:06,840
want to have so that our rotation works

621
00:28:03,990 --> 00:28:09,120
but remember there's a reason we didn't

622
00:28:06,839 --> 00:28:12,629
use it directly it's because we want a

623
00:28:09,119 --> 00:28:17,308
little bit of that parallax right and we

624
00:28:12,630 --> 00:28:21,630
want a little bit of that attenuation

625
00:28:17,308 --> 00:28:24,418
right so this that was happening before

626
00:28:21,630 --> 00:28:28,169
to our sprites that was the tuning we

627
00:28:24,419 --> 00:28:31,860
were wanting the camera by using a

628
00:28:28,169 --> 00:28:34,790
little bit of the world axes in addition

629
00:28:31,859 --> 00:28:36,959
to the camera axis got that for us right

630
00:28:34,789 --> 00:28:38,909
this kind of thing when we're looking

631
00:28:36,960 --> 00:28:40,950
here we get this kind of Bend now why

632
00:28:38,910 --> 00:28:43,110
didn't it do that well it did that

633
00:28:40,950 --> 00:28:44,730
because remember we were just all we

634
00:28:43,109 --> 00:28:48,869
were thinking about was the case where

635
00:28:44,730 --> 00:28:50,910
the camera x-axis is always the same so

636
00:28:48,869 --> 00:28:53,459
the camera x-axis and the world access

637
00:28:50,910 --> 00:28:56,340
are the same so the only change is the

638
00:28:53,460 --> 00:28:58,410
y-axis whether it was actually pointing

639
00:28:56,339 --> 00:29:00,480
and in this case it was the Z it we've

640
00:28:58,410 --> 00:29:02,669
changed it to the Z right because here

641
00:29:00,480 --> 00:29:05,480
this transform change it to be in the z

642
00:29:02,669 --> 00:29:07,740
axis so I should really say z axis right

643
00:29:05,480 --> 00:29:10,440
so we're talking about a case where the

644
00:29:07,740 --> 00:29:15,029
z axis points either straight up in

645
00:29:10,440 --> 00:29:18,929
world space or lies down somewhat based

646
00:29:15,029 --> 00:29:20,849
on how the camera is pointed right so

647
00:29:18,929 --> 00:29:23,759
that was really what we were doing is

648
00:29:20,849 --> 00:29:26,668
adjusting that fold over we were sort of

649
00:29:23,759 --> 00:29:28,619
from the side we were saying okay we've

650
00:29:26,669 --> 00:29:30,509
got one access that looks like this and

651
00:29:28,619 --> 00:29:32,159
one access looks like this this is the

652
00:29:30,509 --> 00:29:32,519
camera one this is the one that comes

653
00:29:32,160 --> 00:29:36,389
from

654
00:29:32,519 --> 00:29:39,899
render group and this is the world one

655
00:29:36,388 --> 00:29:42,028
right this is the one that's just zero

656
00:29:39,898 --> 00:29:44,518
zero one always okay

657
00:29:42,028 --> 00:29:47,729
and we were blending between those to

658
00:29:44,519 --> 00:29:52,709
get sort of a hybrid amount of lay down

659
00:29:47,729 --> 00:29:55,499
for our sprites okay and so the problem

660
00:29:52,709 --> 00:29:59,099
that we have is that we still want to

661
00:29:55,499 --> 00:30:04,499
produce this lying down effect but we

662
00:29:59,098 --> 00:30:07,078
don't want to produce any rotational we

663
00:30:04,499 --> 00:30:10,348
want the x axis to always be the cameras

664
00:30:07,078 --> 00:30:14,848
x axis so the problem that we have is

665
00:30:10,348 --> 00:30:18,028
the fact that this is wrong

666
00:30:14,848 --> 00:30:22,259
the the way the x axis is going is wrong

667
00:30:18,028 --> 00:30:27,358
we want this x axis to always be our x

668
00:30:22,259 --> 00:30:31,489
axis and we want the y axis to be the

669
00:30:27,358 --> 00:30:35,668
only thing that's changing right

670
00:30:31,489 --> 00:30:38,159
hopefully that makes some sense now what

671
00:30:35,669 --> 00:30:40,288
we could do is we could say all right

672
00:30:38,159 --> 00:30:43,129
well that's pretty easy right

673
00:30:40,288 --> 00:30:46,288
that just means this is always zero

674
00:30:43,128 --> 00:30:50,878
right I'd like done right problem solved

675
00:30:46,288 --> 00:30:55,138
so now we get the laydown effect and and

676
00:30:50,878 --> 00:31:00,868
the but we also get the facing the

677
00:30:55,138 --> 00:31:05,449
camera bit right although as I'm looking

678
00:31:00,868 --> 00:31:11,939
at it doesn't look like we do why not oh

679
00:31:05,450 --> 00:31:14,389
sorry wrong one we always want the

680
00:31:11,940 --> 00:31:14,389
cameras

681
00:31:16,500 --> 00:31:21,720
and so that would give us the correct

682
00:31:18,929 --> 00:31:26,100
sort of lie down effect where we want a

683
00:31:21,720 --> 00:31:27,808
hybrid in terms of the the lying down I

684
00:31:26,099 --> 00:31:30,329
should put the trees back in so that we

685
00:31:27,808 --> 00:31:31,918
can see it because we're using grass

686
00:31:30,329 --> 00:31:34,379
which is kind of small let me let me go

687
00:31:31,919 --> 00:31:36,210
ahead and put the trees correct here so

688
00:31:34,380 --> 00:31:40,710
that they can continue to do that so I'm

689
00:31:36,210 --> 00:31:42,900
gonna do a push up right here and let me

690
00:31:40,710 --> 00:31:52,380
just make sure this is correct

691
00:31:42,900 --> 00:31:54,059
I think that'll just work and so what

692
00:31:52,380 --> 00:31:56,760
you can see here is now the trees are

693
00:31:54,058 --> 00:31:58,678
rotating to face us which is what we

694
00:31:56,759 --> 00:32:02,129
expect to have happen when we move the

695
00:31:58,679 --> 00:32:04,380
camera but the trees also should are

696
00:32:02,130 --> 00:32:07,200
doing a little bit of the tilt that they

697
00:32:04,380 --> 00:32:09,149
should be doing right and that's what we

698
00:32:07,200 --> 00:32:12,169
want to see happening now unfortunately

699
00:32:09,148 --> 00:32:18,000
it's a little hard to see in this case

700
00:32:12,169 --> 00:32:19,610
so I do think we want to maybe try to

701
00:32:18,000 --> 00:32:21,509
construct a test that will let us know

702
00:32:19,609 --> 00:32:22,949
to what extent we're doing that

703
00:32:21,509 --> 00:32:28,349
correctly because we may still be doing

704
00:32:22,950 --> 00:32:30,330
it slightly incorrectly and I want to

705
00:32:28,349 --> 00:32:32,459
figure out a way to make sure that we're

706
00:32:30,329 --> 00:32:34,619
not like it's hard to really see whether

707
00:32:32,460 --> 00:32:37,220
those trees are tilting up as much as

708
00:32:34,619 --> 00:32:37,219
they should be

709
00:32:37,700 --> 00:32:46,069
and I don't know let me let's let's

710
00:32:42,000 --> 00:32:47,880
maybe see how they look when they pan I

711
00:32:46,069 --> 00:32:50,759
guess the other thing you could do is

712
00:32:47,880 --> 00:32:53,610
just draw some more like an upright just

713
00:32:50,759 --> 00:32:55,759
rectangle kind of a thing and see how

714
00:32:53,609 --> 00:32:59,000
that looks

715
00:32:55,759 --> 00:32:59,000
what just happened

716
00:33:01,720 --> 00:33:05,829
looks like our panning is busted

717
00:33:13,339 --> 00:33:20,990
oh that's not supposed to be a plus

718
00:33:18,349 --> 00:33:32,028
equals that's just supposed to be in

719
00:33:20,990 --> 00:33:35,359
equals so here where we've got the

720
00:33:32,028 --> 00:33:38,119
camera offset and we're setting that

721
00:33:35,359 --> 00:33:40,638
here the only problem is that will

722
00:33:38,119 --> 00:33:43,219
overwrite the drop shift so I feel like

723
00:33:40,638 --> 00:33:45,349
we didn't have a good way to really set

724
00:33:43,220 --> 00:33:51,589
that up this kind of needs to be an

725
00:33:45,349 --> 00:33:55,788
additional offset kind of a thing so I'm

726
00:33:51,589 --> 00:33:59,269
not sure what to do about that how we

727
00:33:55,788 --> 00:34:01,398
want to do that I feel like almost the

728
00:33:59,269 --> 00:34:14,329
dropship needs to be something specified

729
00:34:01,398 --> 00:34:18,648
separately so let's just do that you can

730
00:34:14,329 --> 00:34:20,690
do an offset and a shift and so here

731
00:34:18,648 --> 00:34:24,019
what I could do is say all right the

732
00:34:20,690 --> 00:34:27,460
result offset equals zero zero zero and

733
00:34:24,019 --> 00:34:27,460
the result shift equals

734
00:34:39,000 --> 00:34:46,289
that where we actually have the shipped

735
00:34:41,739 --> 00:34:46,289
in there and then when we use the offset

736
00:34:48,750 --> 00:34:55,690
we'll just add them together that way

737
00:34:53,230 --> 00:34:57,579
this can just cold set that and it will

738
00:34:55,690 --> 00:35:00,250
always still have the correct one I want

739
00:34:57,579 --> 00:35:02,259
to switch I want here this camera

740
00:35:00,250 --> 00:35:03,099
panning I want to start with panning

741
00:35:02,260 --> 00:35:05,470
because I think that's gonna make it

742
00:35:03,099 --> 00:35:07,269
easier for me to see so rather than have

743
00:35:05,469 --> 00:35:11,919
to wait for it to do its rotation I want

744
00:35:07,269 --> 00:35:13,869
to see the panning as we go and just see

745
00:35:11,920 --> 00:35:20,110
if it if it feels like it's doing its

746
00:35:13,869 --> 00:35:23,039
shifting properly it's kind of hard to

747
00:35:20,110 --> 00:35:23,039
say

748
00:35:36,130 --> 00:35:44,410
um I really don't think I'm gonna be

749
00:35:42,070 --> 00:35:47,500
able to tell so I think I'm gonna have

750
00:35:44,409 --> 00:35:50,920
to draw like some just like something

751
00:35:47,500 --> 00:35:52,690
that's a card okay I got I got a I'm

752
00:35:50,920 --> 00:35:56,559
gonna have to draw something that's like

753
00:35:52,690 --> 00:35:58,240
more rectangular so that I can see so

754
00:35:56,559 --> 00:36:00,940
I'm gonna replace the tree with a wall

755
00:35:58,239 --> 00:36:04,000
texture for now so I can see if it's

756
00:36:00,940 --> 00:36:06,039
actually getting a curve to it because I

757
00:36:04,000 --> 00:36:09,039
want to be able to debug that function

758
00:36:06,039 --> 00:36:14,550
and I feel like I won't be able to yeah

759
00:36:09,039 --> 00:36:17,409
so that's not getting a curve to it and

760
00:36:14,550 --> 00:36:21,010
so my question is why because I feel

761
00:36:17,409 --> 00:36:27,219
like it oh because I didn't set the T

762
00:36:21,010 --> 00:36:30,910
value back to 0.25 which is what yeah

763
00:36:27,219 --> 00:36:32,859
there we go so now I can see very

764
00:36:30,909 --> 00:36:35,859
clearly you know that getting that that

765
00:36:32,860 --> 00:36:41,800
sort of tilt to the side and then if I

766
00:36:35,860 --> 00:36:44,320
look at the rotation version here let me

767
00:36:41,800 --> 00:36:46,300
just set that to false and then when we

768
00:36:44,320 --> 00:36:48,850
look at the rotation it should still

769
00:36:46,300 --> 00:36:50,769
face the camera but this is still not

770
00:36:48,849 --> 00:36:52,630
going to be quite right and we'll talk

771
00:36:50,769 --> 00:36:54,159
about why in a second so now you can see

772
00:36:52,630 --> 00:36:56,380
that the cards are clearly facing the

773
00:36:54,159 --> 00:37:00,219
camera and they clearly have the sort of

774
00:36:56,380 --> 00:37:02,140
slanted vertical lines that we expect

775
00:37:00,219 --> 00:37:06,069
them to have and so that's you know

776
00:37:02,139 --> 00:37:07,359
that's exactly what we want so why am I

777
00:37:06,070 --> 00:37:08,950
suggesting that that's not sufficient

778
00:37:07,360 --> 00:37:10,360
and that we have a little bit more work

779
00:37:08,949 --> 00:37:11,679
to do well the reason I think we have a

780
00:37:10,360 --> 00:37:17,110
little bit more work to do is because

781
00:37:11,679 --> 00:37:19,419
this assumes that the x axis and y axes

782
00:37:17,110 --> 00:37:23,650
are 1 and 0 right

783
00:37:19,420 --> 00:37:26,550
now if we weren't going to use those so

784
00:37:23,650 --> 00:37:29,320
if I try to twist my tree around

785
00:37:26,550 --> 00:37:33,519
we'll just get complete nonsense right

786
00:37:29,320 --> 00:37:35,110
so here's an example of what happens let

787
00:37:33,519 --> 00:37:38,650
me go ahead over to the renderer test

788
00:37:35,110 --> 00:37:42,670
and ask it to output a tree that has

789
00:37:38,650 --> 00:37:46,110
some kind of a rotation to it so you

790
00:37:42,670 --> 00:37:46,110
know we'll say alright our tree color

791
00:37:46,400 --> 00:37:53,240
it's gonna remain white but now I'm

792
00:37:48,769 --> 00:37:55,219
gonna specify two axes like this right

793
00:37:53,239 --> 00:37:58,429
but what I want to do is I want to

794
00:37:55,219 --> 00:38:01,059
rotate the tree a little bit right so I

795
00:37:58,429 --> 00:38:05,419
want to like make the tree be sort of

796
00:38:01,059 --> 00:38:08,779
skewed over right and furthermore we

797
00:38:05,420 --> 00:38:10,970
don't we allow actual skewing and stuff

798
00:38:08,780 --> 00:38:13,430
so these don't even have to be unit axes

799
00:38:10,969 --> 00:38:15,889
so let's suppose that I just said all

800
00:38:13,429 --> 00:38:18,739
right the x-axis if from now on is going

801
00:38:15,889 --> 00:38:23,629
to be 0.5 F 0.5 s it's actually the

802
00:38:18,739 --> 00:38:27,739
diagonal going off to the side and then

803
00:38:23,630 --> 00:38:29,599
the y-axis would be negative 0.5 F 0.5 F

804
00:38:27,739 --> 00:38:33,589
so it's the kind of so now like we're

805
00:38:29,599 --> 00:38:35,389
kind of making a diamond shape well not

806
00:38:33,590 --> 00:38:38,030
a diamond shape but you know like a 45

807
00:38:35,389 --> 00:38:41,989
degree rotation and some scaling in

808
00:38:38,030 --> 00:38:46,040
there right as well so there's our

809
00:38:41,989 --> 00:38:49,189
there's our scaled folks and what I hope

810
00:38:46,039 --> 00:38:51,860
you can see I don't know if you can

811
00:38:49,190 --> 00:38:54,710
quite see it entirely but what I hope

812
00:38:51,860 --> 00:38:57,230
you can see is now we're getting some

813
00:38:54,710 --> 00:38:59,750
wrong results right do you see how

814
00:38:57,230 --> 00:39:01,550
they're kind of twisting like it's a

815
00:38:59,750 --> 00:39:03,860
little subtle but you can see the size

816
00:39:01,550 --> 00:39:07,130
is changing and they're collapsing a

817
00:39:03,860 --> 00:39:08,329
little right and that's because right

818
00:39:07,130 --> 00:39:09,619
you can really see it now right

819
00:39:08,329 --> 00:39:12,469
hopefully you can kind of see how it's

820
00:39:09,619 --> 00:39:15,380
it's collapsing that that's because we

821
00:39:12,469 --> 00:39:18,500
just made assumptions about what the

822
00:39:15,380 --> 00:39:20,900
axes were we're not supposed to be doing

823
00:39:18,500 --> 00:39:22,969
that the x and y axis that we get passed

824
00:39:20,900 --> 00:39:25,610
in are supposed to be sort of what you

825
00:39:22,969 --> 00:39:28,069
want your X&amp;Y axis of the sprite to be

826
00:39:25,610 --> 00:39:30,860
in the camera plane in the view space

827
00:39:28,070 --> 00:39:33,289
right so you're supposed to be able to

828
00:39:30,860 --> 00:39:35,300
pass whatever you want in there and all

829
00:39:33,289 --> 00:39:37,460
we're supposed to do is make sure that

830
00:39:35,300 --> 00:39:38,960
it lies down a little bit to get some of

831
00:39:37,460 --> 00:39:40,400
that perspective foreshortening but

832
00:39:38,960 --> 00:39:42,079
otherwise it should always be in that

833
00:39:40,400 --> 00:39:45,079
plane and we're definitely not doing

834
00:39:42,079 --> 00:39:48,889
that right now so what we need to do is

835
00:39:45,079 --> 00:39:53,170
we need to make a construction here that

836
00:39:48,889 --> 00:39:53,170
does that more correctly

837
00:39:56,460 --> 00:40:06,429
okay so if we take a look at what's

838
00:40:02,019 --> 00:40:10,480
going on in this construction what we

839
00:40:06,429 --> 00:40:14,349
can see is that really these this axis

840
00:40:10,480 --> 00:40:16,570
here we really want to construct this

841
00:40:14,349 --> 00:40:18,279
other set of glenn beck's so we know

842
00:40:16,570 --> 00:40:20,230
that these always face the camera right

843
00:40:18,280 --> 00:40:22,990
these are constructed purely from the

844
00:40:20,230 --> 00:40:25,690
camera so we know that these two axes

845
00:40:22,989 --> 00:40:30,669
are just always correct as far as the

846
00:40:25,690 --> 00:40:34,389
camera axis are concerned right that's

847
00:40:30,670 --> 00:40:36,369
what they always mean but if you look at

848
00:40:34,389 --> 00:40:39,789
what is happening here

849
00:40:36,369 --> 00:40:41,319
what you can see is that like sorry if

850
00:40:39,789 --> 00:40:43,840
you look at what's happening here you

851
00:40:41,320 --> 00:40:45,640
can see that these two axes are always

852
00:40:43,840 --> 00:40:49,660
constructed with built-in assumptions

853
00:40:45,639 --> 00:40:58,629
about what is the x and y axes it should

854
00:40:49,659 --> 00:41:01,449
be you know the x axis in this case is

855
00:40:58,630 --> 00:41:04,059
always constructed as if it was the

856
00:41:01,449 --> 00:41:05,799
world x axis and it doesn't think about

857
00:41:04,059 --> 00:41:06,429
any rotation that might have been with

858
00:41:05,800 --> 00:41:08,950
the camera

859
00:41:06,429 --> 00:41:11,919
what we know is that we always want the

860
00:41:08,949 --> 00:41:15,369
x axis to be following the camera so we

861
00:41:11,920 --> 00:41:20,650
still want this x axis to be a

862
00:41:15,369 --> 00:41:23,559
construction based on on the cameras x

863
00:41:20,650 --> 00:41:25,840
axis but furthermore this y axis right

864
00:41:23,559 --> 00:41:27,820
so this right here is a way of

865
00:41:25,840 --> 00:41:30,519
shortcutting that weight which we kind

866
00:41:27,820 --> 00:41:34,830
of did but this right here is assuming

867
00:41:30,519 --> 00:41:37,210
that the y axis is also in that same way

868
00:41:34,829 --> 00:41:40,299
always going to be aligned with the

869
00:41:37,210 --> 00:41:42,369
world z axis right and that's not

870
00:41:40,300 --> 00:41:44,470
necessarily going to be true so what we

871
00:41:42,369 --> 00:41:47,589
would rather do is have a way of

872
00:41:44,469 --> 00:41:50,289
constructing first of all taking the

873
00:41:47,590 --> 00:41:52,450
camera version of this into account we

874
00:41:50,289 --> 00:41:53,349
would like to take into account with the

875
00:41:52,449 --> 00:41:56,230
camera

876
00:41:53,349 --> 00:41:58,900
what would a slightly lied down version

877
00:41:56,230 --> 00:42:00,699
of this thing look like so that's all

878
00:41:58,900 --> 00:42:05,050
we're trying to do is do that slight lie

879
00:42:00,699 --> 00:42:07,659
down right and so what I think we want

880
00:42:05,050 --> 00:42:09,460
to do is fundamentally change the

881
00:42:07,659 --> 00:42:13,029
we're constructing these things in the

882
00:42:09,460 --> 00:42:15,880
first place rather than using these axes

883
00:42:13,030 --> 00:42:18,640
that are passed in at all I think what

884
00:42:15,880 --> 00:42:21,579
we want to do is construct our basis

885
00:42:18,639 --> 00:42:24,909
first that is a slightly lied down basis

886
00:42:21,579 --> 00:42:26,789
and then do the construction directly so

887
00:42:24,909 --> 00:42:29,259
I think this is what I'm gonna argue

888
00:42:26,789 --> 00:42:33,309
when we actually go to construct the

889
00:42:29,260 --> 00:42:36,789
x-axis y-axis thing for our sprite this

890
00:42:33,309 --> 00:42:45,869
is actually how we want to do it so this

891
00:42:36,789 --> 00:42:45,869
is like our hybrid x-axis right oops

892
00:43:02,338 --> 00:43:11,048
so we imagine that we've created some

893
00:43:06,460 --> 00:43:13,449
kind of hybrid axes here right and these

894
00:43:11,048 --> 00:43:16,389
hybrid axes are going to be the slightly

895
00:43:13,449 --> 00:43:19,088
lied down space so it's just the camera

896
00:43:16,389 --> 00:43:25,028
axes what lying down a little bit right

897
00:43:19,088 --> 00:43:28,058
and then the reason that I want to do it

898
00:43:25,028 --> 00:43:31,239
this way is then that takes these passed

899
00:43:28,059 --> 00:43:33,640
in axes out of this out of the

900
00:43:31,239 --> 00:43:34,750
construction entirely because again we

901
00:43:33,639 --> 00:43:36,940
don't care what they are

902
00:43:34,750 --> 00:43:38,949
we want the user to be able to specify

903
00:43:36,940 --> 00:43:40,568
those anyway they wish to spin their

904
00:43:38,949 --> 00:43:42,669
spray it around or turn it upside down

905
00:43:40,568 --> 00:43:45,400
or stretch it out along the x-axis Pinal

906
00:43:42,670 --> 00:43:47,349
on the y-axis all of those crazy or skew

907
00:43:45,400 --> 00:43:49,900
it they want to do whatever they want to

908
00:43:47,349 --> 00:43:52,809
do so let's just apply that at the very

909
00:43:49,900 --> 00:43:57,400
end and then what we'll do is we'll just

910
00:43:52,809 --> 00:43:59,559
tune this one part right here to take

911
00:43:57,400 --> 00:44:04,329
into account the line slight lying down

912
00:43:59,559 --> 00:44:07,210
that we actually want ok so that's what

913
00:44:04,329 --> 00:44:10,000
I'd like to do so this can go away did

914
00:44:07,210 --> 00:44:11,829
we eliminate that correctly in this case

915
00:44:10,000 --> 00:44:13,389
too right we did yeah that just is the

916
00:44:11,829 --> 00:44:17,470
size part there so that's good that can

917
00:44:13,389 --> 00:44:19,868
stay so what we want to do is create our

918
00:44:17,469 --> 00:44:21,099
axes here where we basically make

919
00:44:19,869 --> 00:44:22,720
through whatever

920
00:44:21,099 --> 00:44:24,210
that we're going to do and let's figure

921
00:44:22,719 --> 00:44:27,489
out what it is that we want to do here

922
00:44:24,210 --> 00:44:30,159
we want to figure out what these are and

923
00:44:27,489 --> 00:44:33,399
I'm gonna say ahead of time that the

924
00:44:30,159 --> 00:44:35,079
x-axis right like I said all the x-axis

925
00:44:33,400 --> 00:44:36,610
always wants to spin with the camera

926
00:44:35,079 --> 00:44:38,440
because this thing should always be

927
00:44:36,610 --> 00:44:40,780
facing the camera the only thing we want

928
00:44:38,440 --> 00:44:42,730
to do is lie down a bit so it's only the

929
00:44:40,780 --> 00:44:47,080
y-axis that will ever get a lerp to

930
00:44:42,730 --> 00:44:49,960
begin with so what that lets me know is

931
00:44:47,079 --> 00:44:53,769
that our x axis we know what it is right

932
00:44:49,960 --> 00:45:01,720
our x axis is just the x axis from the

933
00:44:53,769 --> 00:45:06,909
camera I guess I can leave this in here

934
00:45:01,719 --> 00:45:12,879
oops I guess I can leave this in here

935
00:45:06,909 --> 00:45:14,469
but our x axis is always this and so

936
00:45:12,880 --> 00:45:16,390
what we're really talking about here is

937
00:45:14,469 --> 00:45:20,649
how we're gonna get the y axis because

938
00:45:16,389 --> 00:45:26,230
our x axis is just known I'm having a

939
00:45:20,650 --> 00:45:27,880
bad cut-and-paste day right so when we

940
00:45:26,230 --> 00:45:30,340
construct whatever we're going to

941
00:45:27,880 --> 00:45:32,230
construct we know that our x axis that

942
00:45:30,340 --> 00:45:34,210
we're going to use is always just the

943
00:45:32,230 --> 00:45:36,820
cameras x axis because no matter how we

944
00:45:34,210 --> 00:45:39,220
look at this thing we never want it to

945
00:45:36,820 --> 00:45:41,950
do anything about the rotation around

946
00:45:39,219 --> 00:45:44,259
right so that's always aligned with the

947
00:45:41,949 --> 00:45:46,149
screen what we do want to do is take the

948
00:45:44,260 --> 00:45:48,040
y axis which is the upward one that runs

949
00:45:46,150 --> 00:45:49,900
along the upward direction of screen and

950
00:45:48,039 --> 00:45:53,920
lie that back into the screen a little

951
00:45:49,900 --> 00:45:56,440
bit so the question is if we want to

952
00:45:53,920 --> 00:45:57,789
lurk these things together and I don't

953
00:45:56,440 --> 00:45:59,740
know that we want to lurk them we may

954
00:45:57,789 --> 00:46:01,869
just want to rotate it into the screen a

955
00:45:59,739 --> 00:46:03,759
little bit so I'm not sure which one we

956
00:46:01,869 --> 00:46:06,309
want to do but let's suppose we stick

957
00:46:03,760 --> 00:46:09,400
with the looping how would we create an

958
00:46:06,309 --> 00:46:13,119
axis that's more lied down right like

959
00:46:09,400 --> 00:46:19,539
what would that look like exactly so

960
00:46:13,119 --> 00:46:21,549
that's the question right I and so let's

961
00:46:19,539 --> 00:46:24,989
talk about some simple ways we could do

962
00:46:21,550 --> 00:46:31,330
this first of all we know where is the

963
00:46:24,989 --> 00:46:32,979
the basic we know what the basic camera

964
00:46:31,329 --> 00:46:34,500
access would be right

965
00:46:32,980 --> 00:46:36,179
we know that this

966
00:46:34,500 --> 00:46:38,550
is what it would be if we weren't going

967
00:46:36,179 --> 00:46:40,889
to change it so if we were just gonna

968
00:46:38,550 --> 00:46:44,100
make it so that the camera it was a

969
00:46:40,889 --> 00:46:46,259
perfectly spaced perfectly camera facing

970
00:46:44,099 --> 00:46:49,019
sprite card we know that it would just

971
00:46:46,260 --> 00:46:51,510
be game xform that why because that's

972
00:46:49,019 --> 00:46:55,889
just that's just exactly what the

973
00:46:51,510 --> 00:46:58,290
screens y-axis is and then if we think

974
00:46:55,889 --> 00:47:00,299
about what we might want to do to make

975
00:46:58,289 --> 00:47:03,239
this axis lie back down to the screen

976
00:47:00,300 --> 00:47:06,870
what we could imagine is well okay what

977
00:47:03,239 --> 00:47:11,509
if we just actually did exactly that we

978
00:47:06,869 --> 00:47:15,480
said look we know that the z-axis right

979
00:47:11,510 --> 00:47:18,030
well the z-axis points back at us so if

980
00:47:15,480 --> 00:47:19,949
we were to subtract some amount of

981
00:47:18,030 --> 00:47:22,320
z-axis from this thing it would push

982
00:47:19,949 --> 00:47:24,529
this axis back into the screen right and

983
00:47:22,320 --> 00:47:30,110
just to show you what's happening there

984
00:47:24,530 --> 00:47:30,110
so for example if here is our camera

985
00:47:30,889 --> 00:47:38,549
here's the screen so we know that our

986
00:47:34,019 --> 00:47:42,590
y-axis this is our camera Y right so

987
00:47:38,550 --> 00:47:45,810
this is the one from the game transform

988
00:47:42,590 --> 00:47:47,730
so if this is our camera Y we know that

989
00:47:45,809 --> 00:47:50,489
this is our camera Z because the Z

990
00:47:47,730 --> 00:47:52,769
always points back towards the camera so

991
00:47:50,489 --> 00:47:56,129
if we were to subtract some amount of

992
00:47:52,769 --> 00:47:59,400
the z axis right that would push this

993
00:47:56,130 --> 00:48:02,099
back into the screen some distance and

994
00:47:59,400 --> 00:48:04,289
then if we wanted to ensure that this

995
00:48:02,099 --> 00:48:07,650
thing was normal we could normalize it

996
00:48:04,289 --> 00:48:10,739
to shrink it back down to a unit axis we

997
00:48:07,650 --> 00:48:15,210
could also not normalize it the choice

998
00:48:10,739 --> 00:48:16,799
is up to us right but what I'm gonna do

999
00:48:15,210 --> 00:48:20,039
first is I'm going to normalize it so

1000
00:48:16,800 --> 00:48:24,630
I'm gonna say let's try that first and

1001
00:48:20,039 --> 00:48:27,179
let's use those as our as our basis

1002
00:48:24,630 --> 00:48:30,119
right so let's start there and we have

1003
00:48:27,179 --> 00:48:31,619
to debug that a little bit but let's

1004
00:48:30,119 --> 00:48:34,230
start with that as the construction

1005
00:48:31,619 --> 00:48:35,969
we're going to try and what you can see

1006
00:48:34,230 --> 00:48:40,019
right now is we're getting that that

1007
00:48:35,969 --> 00:48:42,599
facing which we want where they are

1008
00:48:40,019 --> 00:48:44,190
turning to face us and we'll turn them

1009
00:48:42,599 --> 00:48:45,449
up right later to make sure we're also

1010
00:48:44,190 --> 00:48:46,889
getting that slant it's really hard to

1011
00:48:45,449 --> 00:48:48,279
read the slant on something that in fact

1012
00:48:46,889 --> 00:48:50,650
is already

1013
00:48:48,280 --> 00:48:53,890
you know rotated but you can also see

1014
00:48:50,650 --> 00:48:56,650
now we're not getting that collapse that

1015
00:48:53,889 --> 00:48:59,369
we were getting before so you can see

1016
00:48:56,650 --> 00:49:02,490
how that's an improvement there right

1017
00:48:59,369 --> 00:49:08,710
like that's that's looking right now

1018
00:49:02,489 --> 00:49:10,929
let's tilt them back straight up so

1019
00:49:08,710 --> 00:49:14,230
let's take out the part of this was that

1020
00:49:10,929 --> 00:49:16,299
was passing different axes and let's

1021
00:49:14,230 --> 00:49:20,650
make sure we're still getting a pleasing

1022
00:49:16,300 --> 00:49:31,269
amount of perspective in there and we'll

1023
00:49:20,650 --> 00:49:33,309
see how that goes right and I'm not sure

1024
00:49:31,269 --> 00:49:36,670
about that let's switch to panning I

1025
00:49:33,309 --> 00:49:38,230
should make a key that lets me switch to

1026
00:49:36,670 --> 00:49:39,849
panning because I feel like we're doing

1027
00:49:38,230 --> 00:49:43,829
it enough that it's a pain in the butt

1028
00:49:39,849 --> 00:49:43,829
to have to change it every time oops

1029
00:49:44,820 --> 00:49:50,230
what oh what am I doing here I want to

1030
00:49:48,519 --> 00:49:54,179
render tests but I'm not getting it oh

1031
00:49:50,230 --> 00:49:54,179
because it's right here that's why

1032
00:50:02,909 --> 00:50:06,009
[Applause]

1033
00:50:18,010 --> 00:50:35,230
so you know now that I think of it

1034
00:50:22,719 --> 00:50:38,230
though we are never quite going to get

1035
00:50:35,230 --> 00:50:44,010
the slanted look we're looking for but

1036
00:50:38,230 --> 00:50:55,990
the way I'm doing this because that

1037
00:50:44,010 --> 00:50:59,260
y-axis is still that y-axis really needs

1038
00:50:55,989 --> 00:51:02,289
to tilt more towards the world z-axis in

1039
00:50:59,260 --> 00:51:06,130
order for it to be more upright so I

1040
00:51:02,289 --> 00:51:07,750
kind of know that that lie-down is I

1041
00:51:06,130 --> 00:51:09,220
kind of thought it through wrong that

1042
00:51:07,750 --> 00:51:11,559
lie down although we made a good

1043
00:51:09,219 --> 00:51:17,439
function for doing the lie down that was

1044
00:51:11,559 --> 00:51:21,279
quite nice that's not really what we

1045
00:51:17,440 --> 00:51:23,380
needed there so it's more like we just

1046
00:51:21,280 --> 00:51:38,769
want to shift it towards the world's

1047
00:51:23,380 --> 00:51:47,050
z-axis I guess which would look like

1048
00:51:38,769 --> 00:51:53,019
that right so I'm just there blending it

1049
00:51:47,050 --> 00:51:54,310
towards the world z-axis and you can see

1050
00:51:53,019 --> 00:51:55,300
now we're getting a little bit more of

1051
00:51:54,309 --> 00:52:00,699
that I don't know that I'm getting

1052
00:51:55,300 --> 00:52:02,980
enough of that and also I suppose this

1053
00:52:00,699 --> 00:52:05,348
has to be normalized right as well I

1054
00:52:02,980 --> 00:52:11,380
want to make it a normal in that

1055
00:52:05,349 --> 00:52:12,849
direction and we'll see what the t-value

1056
00:52:11,380 --> 00:52:15,068
should be I'm not sure what it should be

1057
00:52:12,849 --> 00:52:18,510
yet we'll take a look I'm gonna probably

1058
00:52:15,068 --> 00:52:18,509
increase it a little more than that

1059
00:52:19,260 --> 00:52:24,750
let's see what happens if we blend

1060
00:52:21,639 --> 00:52:24,750
halfway between those two

1061
00:52:30,000 --> 00:52:38,239
so I feel like that's getting a

1062
00:52:33,030 --> 00:52:38,240
reasonable amount of that in there

1063
00:52:54,579 --> 00:52:58,179
let me just check to make sure our

1064
00:52:56,110 --> 00:53:00,160
construction is sound I'm gonna try

1065
00:52:58,179 --> 00:53:02,379
cranking it all the way so it's just

1066
00:53:00,159 --> 00:53:05,969
using the world z-axis to make sure that

1067
00:53:02,380 --> 00:53:05,970
we just end up with flat cards

1068
00:53:18,210 --> 00:53:21,960
that looks about right to me

1069
00:53:25,760 --> 00:53:28,930
yeah I think that's correct

1070
00:53:29,159 --> 00:53:33,719
so the question is to what extent is

1071
00:53:31,588 --> 00:53:36,298
that good or bad right look I don't know

1072
00:53:33,719 --> 00:53:38,338
how and I think that might be sort of an

1073
00:53:36,298 --> 00:53:41,429
artistic tuning issues so I kind of feel

1074
00:53:38,338 --> 00:53:47,130
like maybe this T parameter would want

1075
00:53:41,429 --> 00:53:50,460
to be controlled by the artist you know

1076
00:53:47,130 --> 00:53:54,088
what I'm saying or the programmer in an

1077
00:53:50,460 --> 00:54:01,170
aesthetic sense meaning I don't think we

1078
00:53:54,088 --> 00:54:02,548
want to prescribe that you know I feel

1079
00:54:01,170 --> 00:54:06,930
like that's something we're gonna want a

1080
00:54:02,548 --> 00:54:09,420
tune that's my assumption so if we

1081
00:54:06,929 --> 00:54:12,358
switch back to the trees here because I

1082
00:54:09,420 --> 00:54:16,159
think that's probably what we want again

1083
00:54:12,358 --> 00:54:18,268
very simple but I think it's correct I

1084
00:54:16,159 --> 00:54:26,420
think it's a reasonable way to

1085
00:54:18,268 --> 00:54:28,919
parameterize it oops

1086
00:54:26,420 --> 00:54:30,240
no no I did that it's not what I wanted

1087
00:54:28,920 --> 00:54:34,829
to do although I do want to test that

1088
00:54:30,239 --> 00:54:36,508
let's actually test that real quick make

1089
00:54:34,829 --> 00:54:40,039
sure we don't get any collapsing here I

1090
00:54:36,509 --> 00:54:40,039
don't think we should but

1091
00:54:47,280 --> 00:54:50,210
seems okay

1092
00:54:53,670 --> 00:55:02,700
they always seem to retain a reasonable

1093
00:54:57,989 --> 00:55:05,548
amount of their you know their surface

1094
00:55:02,699 --> 00:55:19,169
area um so if we go back and switch to

1095
00:55:05,548 --> 00:55:20,699
the tree texture here here's what it

1096
00:55:19,170 --> 00:55:25,200
looks like with the tree is currently

1097
00:55:20,699 --> 00:55:27,058
and you know I don't know again to what

1098
00:55:25,199 --> 00:55:29,689
extent that T value should really be

1099
00:55:27,059 --> 00:55:32,220
tuned you know when we're looking at it

1100
00:55:29,690 --> 00:55:35,789
rotation never looks particularly good

1101
00:55:32,219 --> 00:55:38,730
with sprite cards anyway so I don't know

1102
00:55:35,789 --> 00:55:41,909
that we care too much about this but you

1103
00:55:38,730 --> 00:55:44,190
know it's the kind of thing that we

1104
00:55:41,909 --> 00:55:46,889
should at least support so let's suppose

1105
00:55:44,190 --> 00:55:49,289
we set that to okay didn't mean to do

1106
00:55:46,889 --> 00:55:54,328
that let's suppose we set that T value

1107
00:55:49,289 --> 00:55:58,259
to 0.5 so here's one that has like sort

1108
00:55:54,329 --> 00:56:03,660
of a bit of the attenuation and a bit of

1109
00:55:58,260 --> 00:56:05,549
the camera in it like half in half and I

1110
00:56:03,659 --> 00:56:07,199
feel like that's a good that looks like

1111
00:56:05,548 --> 00:56:09,869
a pretty good happy medium between the

1112
00:56:07,199 --> 00:56:12,149
two but like I said maybe we'll sort of

1113
00:56:09,869 --> 00:56:14,338
specify that blending parameter as a

1114
00:56:12,150 --> 00:56:21,480
call to the function so that people who

1115
00:56:14,338 --> 00:56:24,179
are doing this you know to the extent

1116
00:56:21,480 --> 00:56:25,440
that they're that they want to tune this

1117
00:56:24,179 --> 00:56:27,149
they can sort of play with that T

1118
00:56:25,440 --> 00:56:29,670
parameter and get the things out of it I

1119
00:56:27,150 --> 00:56:33,180
also think that we probably want that

1120
00:56:29,670 --> 00:56:36,480
the Z bias to be parameterised on that

1121
00:56:33,179 --> 00:56:38,909
same t meaning that if this sprite card

1122
00:56:36,480 --> 00:56:41,130
was directly up and down you would not

1123
00:56:38,909 --> 00:56:43,199
want to apply an easy bias because the Z

1124
00:56:41,130 --> 00:56:48,000
sorting is actually 100% correct at that

1125
00:56:43,199 --> 00:56:50,848
point so I think what we want to do here

1126
00:56:48,000 --> 00:56:54,318
is say look when we lurk this thing we

1127
00:56:50,849 --> 00:56:59,548
also kind of are luring the Z bias right

1128
00:56:54,318 --> 00:57:05,219
and so the Z bias is going to be based

1129
00:56:59,548 --> 00:57:06,778
on this T value it will go up to you

1130
00:57:05,219 --> 00:57:11,129
know it will

1131
00:57:06,778 --> 00:57:13,978
it will get to that amount at the point

1132
00:57:11,130 --> 00:57:17,159
where you use the least amount of

1133
00:57:13,978 --> 00:57:25,108
blending so because this T value is sort

1134
00:57:17,159 --> 00:57:29,269
of the other way round trying to think

1135
00:57:25,108 --> 00:57:32,518
of how I want to say this so you know

1136
00:57:29,268 --> 00:57:35,488
the T value is going to go from one of

1137
00:57:32,518 --> 00:57:37,348
these things to the other and if we

1138
00:57:35,489 --> 00:57:43,739
freeze the T value such that it goes

1139
00:57:37,349 --> 00:57:54,359
from the like world Z which is this to

1140
00:57:43,739 --> 00:57:58,528
the lerp Z which is that if we phrase it

1141
00:57:54,358 --> 00:58:02,759
that way then I feel like we'll end up

1142
00:57:58,528 --> 00:58:04,768
in a situation where we get the this

1143
00:58:02,759 --> 00:58:07,019
parameter being more natural for the Z

1144
00:58:04,768 --> 00:58:12,358
bias as well because now the Z bias

1145
00:58:07,018 --> 00:58:15,268
increases as you go towards the camera Y

1146
00:58:12,358 --> 00:58:17,548
axis which is what we want now this

1147
00:58:15,268 --> 00:58:19,558
value although you know one thing that

1148
00:58:17,548 --> 00:58:24,688
that's worth mentioning is the degree to

1149
00:58:19,559 --> 00:58:27,119
which those axes are need biasing in

1150
00:58:24,688 --> 00:58:29,578
them is probably also kind of different

1151
00:58:27,119 --> 00:58:31,829
so I feel like this parameter might have

1152
00:58:29,579 --> 00:58:35,039
to be tuned as well although we could

1153
00:58:31,829 --> 00:58:40,829
possibly solve for it based on the

1154
00:58:35,039 --> 00:58:46,259
difference between the y axis in the

1155
00:58:40,829 --> 00:58:50,309
camera and the z axis in the world so

1156
00:58:46,259 --> 00:58:53,639
this you know parameter here could

1157
00:58:50,309 --> 00:58:56,569
really be based on the difference

1158
00:58:53,639 --> 00:58:56,568
between those two things

1159
00:58:59,639 --> 00:59:09,759
and that seems actually kind of

1160
00:59:04,269 --> 00:59:15,278
reasonable to me so if we assume that we

1161
00:59:09,760 --> 00:59:18,250
have a world up Vector here I kind of

1162
00:59:15,278 --> 00:59:20,798
want to say that this value here is like

1163
00:59:18,250 --> 00:59:23,920
the inner product of the world up Vector

1164
00:59:20,798 --> 00:59:41,858
and the you know and the camera up

1165
00:59:23,920 --> 00:59:45,269
Vector wait what just happened there how

1166
00:59:41,858 --> 00:59:45,269
did we end up with wait what

1167
00:59:46,980 --> 00:59:57,429
how did we end up with the lerp around

1168
00:59:50,739 --> 01:00:03,338
that somebody tell me what's happening

1169
00:59:57,429 --> 01:00:04,989
here that's an error right yeah okay I'm

1170
01:00:03,338 --> 01:00:11,199
having a bad cut-and-paste day I've said

1171
01:00:04,989 --> 01:00:15,038
it once I'll say it again um all right

1172
01:00:11,199 --> 01:00:18,429
so if we go from the world up Vector

1173
01:00:15,039 --> 01:00:22,690
where we would not need any bias to the

1174
01:00:18,429 --> 01:00:24,848
game X forums Y right then if we imagine

1175
01:00:22,690 --> 01:00:26,289
this is the camera up we can sort of

1176
01:00:24,849 --> 01:00:27,789
make this a little clearer what we're

1177
01:00:26,289 --> 01:00:30,069
doing here we're we're just blending two

1178
01:00:27,789 --> 01:00:33,369
up vectors together to get a different

1179
01:00:30,068 --> 01:00:36,940
up vector so assuming that we blend

1180
01:00:33,369 --> 01:00:45,849
these two together now we get a

1181
01:00:36,940 --> 01:00:52,389
situation where we sort of where we know

1182
01:00:45,849 --> 01:00:55,778
we could produce a measure of the need

1183
01:00:52,389 --> 01:01:00,129
for bias by looking at how those two

1184
01:00:55,778 --> 01:01:01,690
vectors relate right and so if they're

1185
01:01:00,130 --> 01:01:03,940
pretty close together we wouldn't need

1186
01:01:01,690 --> 01:01:05,940
much bias at all because the blend isn't

1187
01:01:03,940 --> 01:01:10,179
going to change the z-buffering

1188
01:01:05,940 --> 01:01:12,190
but if they are then we do if they're

1189
01:01:10,179 --> 01:01:13,568
quite different so I you know

1190
01:01:12,190 --> 01:01:15,010
I'm not sure about that we should

1191
01:01:13,568 --> 01:01:18,789
probably put to do in there - like tune

1192
01:01:15,010 --> 01:01:20,319
that value more as necessary but like

1193
01:01:18,789 --> 01:01:22,960
that seems like a pretty reasonable

1194
01:01:20,318 --> 01:01:25,929
approach to me and I don't know whether

1195
01:01:22,960 --> 01:01:26,920
it should be the inner product or not or

1196
01:01:25,929 --> 01:01:28,809
if it should be more of a distance

1197
01:01:26,920 --> 01:01:30,639
measure between the two vectors because

1198
01:01:28,809 --> 01:01:35,318
one of them falls off with the cosine

1199
01:01:30,639 --> 01:01:36,429
and one of them falls off without it

1200
01:01:35,318 --> 01:01:38,889
right you could you could linear as I

1201
01:01:36,429 --> 01:01:42,250
call so inverse cosine or you know

1202
01:01:38,889 --> 01:01:44,318
approximately inverse cosine that and so

1203
01:01:42,250 --> 01:01:50,550
it's hard to say like which which that

1204
01:01:44,318 --> 01:01:50,550
should really be at the end of the day

1205
01:01:50,760 --> 01:02:03,210
okay but I'm reasonably happy with that

1206
01:01:55,480 --> 01:02:03,210
and yeah I think that's probably okay

1207
01:02:12,338 --> 01:02:15,460
all right

1208
01:02:18,409 --> 01:02:36,379
okay so if we if we just want to leave

1209
01:02:33,110 --> 01:02:38,410
it like that which I think we do then

1210
01:02:36,380 --> 01:02:42,400
the only real thing we need in here is

1211
01:02:38,409 --> 01:02:45,589
the ability to specify a T value right

1212
01:02:42,400 --> 01:02:49,820
so what I want to do here is say look

1213
01:02:45,590 --> 01:02:53,539
that T value can be adjusted so if you

1214
01:02:49,820 --> 01:02:58,370
want to specify the T value for the

1215
01:02:53,539 --> 01:03:01,699
flattening this is the thing that

1216
01:02:58,369 --> 01:03:04,639
controls like t camera up and we'll set

1217
01:03:01,699 --> 01:03:07,279
it to 0.5 and we'll use that everywhere

1218
01:03:04,639 --> 01:03:10,219
right and that's the blending that ends

1219
01:03:07,280 --> 01:03:12,530
up getting done perspe right if you'd

1220
01:03:10,219 --> 01:03:14,869
like so different sprites can like lie

1221
01:03:12,530 --> 01:03:17,960
down to different amounts if you need

1222
01:03:14,869 --> 01:03:20,839
them to and off you go

1223
01:03:17,960 --> 01:03:26,059
I think that's pretty much everything

1224
01:03:20,840 --> 01:03:28,519
that all looks good to me so a couple of

1225
01:03:26,059 --> 01:03:30,860
things that happen here that are worth

1226
01:03:28,519 --> 01:03:33,079
noting so one is I feel like the render

1227
01:03:30,860 --> 01:03:37,370
group should have the world up Vector in

1228
01:03:33,079 --> 01:03:40,309
it so you know in case we ever want to

1229
01:03:37,369 --> 01:03:43,099
change that I just want to see like you

1230
01:03:40,309 --> 01:03:51,529
know in here we don't reference the

1231
01:03:43,099 --> 01:03:53,239
z-axis anywhere it looks like so I think

1232
01:03:51,530 --> 01:03:55,100
this is the only place we're talking

1233
01:03:53,239 --> 01:03:57,679
about world up so I think what we might

1234
01:03:55,099 --> 01:04:00,799
want to do is say look when you specify

1235
01:03:57,679 --> 01:04:04,239
one of these render groups you can

1236
01:04:00,800 --> 01:04:11,840
specify what that world up vector is

1237
01:04:04,239 --> 01:04:13,399
maybe it's in the render transform it's

1238
01:04:11,840 --> 01:04:15,650
hard to say whether it should be or not

1239
01:04:13,400 --> 01:04:17,930
I'm think it maybe would just be

1240
01:04:15,650 --> 01:04:20,329
something that'd be set in here you know

1241
01:04:17,929 --> 01:04:22,460
so maybe there's like a world up the

1242
01:04:20,329 --> 01:04:27,529
vector that's set in here and everyone

1243
01:04:22,460 --> 01:04:29,980
uses it and then when you do a you know

1244
01:04:27,530 --> 01:04:29,980
begin

1245
01:04:35,039 --> 01:04:39,279
when you do begin render group we'll

1246
01:04:37,239 --> 01:04:41,679
just set it and the only reason for that

1247
01:04:39,280 --> 01:04:43,570
is in case we want to be able to support

1248
01:04:41,679 --> 01:04:44,919
in the future changing the world up for

1249
01:04:43,570 --> 01:04:46,720
other people so it doesn't have to be

1250
01:04:44,920 --> 01:04:49,769
the z axis this would give them a

1251
01:04:46,719 --> 01:04:49,769
convenient place to do that

1252
01:04:49,900 --> 01:04:53,289
that doesn't so the rest of this stuff

1253
01:04:51,519 --> 01:04:54,909
doesn't break so then you would just use

1254
01:04:53,289 --> 01:04:59,500
like okay here's the world up Vector

1255
01:04:54,909 --> 01:05:04,029
right and then when you actually do a

1256
01:04:59,500 --> 01:05:11,610
begin render group we would just set it

1257
01:05:04,030 --> 01:05:14,290
inside here as part of the settings and

1258
01:05:11,610 --> 01:05:15,789
then we would never change it and most

1259
01:05:14,289 --> 01:05:18,159
people probably wouldn't because they'd

1260
01:05:15,789 --> 01:05:20,079
be following our conventions if they're

1261
01:05:18,159 --> 01:05:25,359
using our renderer but if they wanted to

1262
01:05:20,079 --> 01:05:38,289
do that they could and that seems worth

1263
01:05:25,360 --> 01:05:41,380
doing so I think that's basically it for

1264
01:05:38,289 --> 01:05:43,179
those calls I don't know what else we

1265
01:05:41,380 --> 01:05:45,579
would need here so let's think about

1266
01:05:43,179 --> 01:05:50,079
these calls a little bit we passed the

1267
01:05:45,579 --> 01:05:53,340
texture we passed the ground position in

1268
01:05:50,079 --> 01:05:56,219
the size and then pop optional a color

1269
01:05:53,340 --> 01:05:58,769
so I think that works pretty well I

1270
01:05:56,219 --> 01:06:02,889
don't really see any reason to complain

1271
01:05:58,769 --> 01:06:07,530
so my next question is well cubes right

1272
01:06:02,889 --> 01:06:07,529
they are cubes are going to be

1273
01:06:07,860 --> 01:06:15,579
potentially a different story so when

1274
01:06:12,789 --> 01:06:18,340
we're sending cubes down the question is

1275
01:06:15,579 --> 01:06:21,340
how are those specified and it looks

1276
01:06:18,340 --> 01:06:24,220
like they're just Center and out center

1277
01:06:21,340 --> 01:06:25,750
and radius and then we have a color at

1278
01:06:24,219 --> 01:06:31,689
the moment they also have an emissions

1279
01:06:25,750 --> 01:06:34,230
value which seems fine as far as storing

1280
01:06:31,690 --> 01:06:34,230
lighting is concerned

1281
01:06:41,550 --> 01:06:48,670
and I think that'll just be something

1282
01:06:43,809 --> 01:06:50,440
we'll address a little later on so I

1283
01:06:48,670 --> 01:06:54,430
think maybe the cubes are fine the only

1284
01:06:50,440 --> 01:06:57,420
question I have is so this thing right

1285
01:06:54,429 --> 01:07:01,889
here where we have these sort of like

1286
01:06:57,420 --> 01:07:01,889
texture coordinates for everything I

1287
01:07:01,980 --> 01:07:10,570
feel like that's something we want to

1288
01:07:04,659 --> 01:07:13,149
have as a like a fully programmable

1289
01:07:10,570 --> 01:07:16,450
thing so people are going to want to

1290
01:07:13,150 --> 01:07:18,880
pack you know control the texturing of

1291
01:07:16,449 --> 01:07:21,429
these cubes a little bit more than that

1292
01:07:18,880 --> 01:07:24,369
including us like not just not just

1293
01:07:21,429 --> 01:07:27,179
other people but us so I feel like we

1294
01:07:24,369 --> 01:07:29,489
want a structure that's like struct cube

1295
01:07:27,179 --> 01:07:32,859
texture layout or something like that

1296
01:07:29,489 --> 01:07:36,599
and you know you if you imagine taking

1297
01:07:32,860 --> 01:07:38,950
these things and putting them in here

1298
01:07:36,599 --> 01:07:42,119
just so we can specify what all these

1299
01:07:38,949 --> 01:07:42,119
texture coordinates should be

1300
01:07:56,519 --> 01:08:02,230
so if we look at the cube texture layout

1301
01:07:59,559 --> 01:08:05,409
we kind of need like a full fully like

1302
01:08:02,230 --> 01:08:09,809
articulated set of UV coordinates for

1303
01:08:05,409 --> 01:08:16,630
this thing and these have to kind of be

1304
01:08:09,809 --> 01:08:19,809
programmable in you know in a in a way

1305
01:08:16,630 --> 01:08:21,789
that fully says there's six phases to a

1306
01:08:19,810 --> 01:08:25,239
cube top bottom and then for around the

1307
01:08:21,789 --> 01:08:29,019
ring and we probably want all of those

1308
01:08:25,238 --> 01:08:34,419
right so when we go to talk about the

1309
01:08:29,020 --> 01:08:38,259
mid here mid mid mid mid we probably

1310
01:08:34,420 --> 01:08:46,350
want to have those actually be like mid

1311
01:08:38,259 --> 01:08:46,350
zero mid one mid two and so on right and

1312
01:08:51,930 --> 01:09:00,119
I guess I'm not sure how we want to talk

1313
01:08:55,500 --> 01:09:03,210
about those like you know maybe plus X

1314
01:09:00,119 --> 01:09:13,319
plus y negative x negative Y so maybe

1315
01:09:03,210 --> 01:09:24,810
it's like hey this is 0 this is 1 this

1316
01:09:13,319 --> 01:09:27,079
is 2 and this is 3 so you know the thing

1317
01:09:24,810 --> 01:09:27,080
goes

1318
01:09:39,009 --> 01:09:43,689
like that I guess now I don't think I

1319
01:09:41,770 --> 01:09:46,710
can actually do that quite yet because I

1320
01:09:43,689 --> 01:09:49,899
think these are actually dependent on

1321
01:09:46,710 --> 01:09:50,890
the way we do boxes so I think because

1322
01:09:49,899 --> 01:09:53,019
of the way we're doing lighting at the

1323
01:09:50,890 --> 01:09:55,090
moment which I you know we might change

1324
01:09:53,020 --> 01:09:56,320
in the future to make it

1325
01:09:55,090 --> 01:09:59,800
I hope our lighting gets better

1326
01:09:56,319 --> 01:10:01,179
obviously I think I'm just gonna leave

1327
01:09:59,800 --> 01:10:02,619
them in that order but you know that's

1328
01:10:01,180 --> 01:10:06,940
the order that they're going in now in

1329
01:10:02,619 --> 01:10:09,519
terms of the texture coordinates so you

1330
01:10:06,939 --> 01:10:11,949
could imagine each of these here now as

1331
01:10:09,520 --> 01:10:14,050
being something specified separately and

1332
01:10:11,949 --> 01:10:18,159
then what I'm gonna do is just say okay

1333
01:10:14,050 --> 01:10:20,550
let's suppose that we then create sort

1334
01:10:18,159 --> 01:10:27,519
of a cube texture layout thing here

1335
01:10:20,550 --> 01:10:35,590
that's like the default cube and the

1336
01:10:27,520 --> 01:10:37,960
default cube is looks like this right so

1337
01:10:35,590 --> 01:10:40,170
you start by saying what the bottom ones

1338
01:10:37,960 --> 01:10:40,170
are

1339
01:10:45,560 --> 01:10:55,920
you they then say what the the mid ones

1340
01:10:48,659 --> 01:10:57,680
are and this is just an array a four of

1341
01:10:55,920 --> 01:10:59,399
these because right now we're not

1342
01:10:57,680 --> 01:11:14,180
actually going to use different

1343
01:10:59,399 --> 01:11:14,179
coordinates okay

1344
01:11:18,260 --> 01:11:31,760
and then finally the top and then what

1345
01:11:29,369 --> 01:11:35,399
we can do is say you pass one of these

1346
01:11:31,760 --> 01:11:38,369
one of these cube texture layouts into

1347
01:11:35,399 --> 01:11:40,109
the function for when you want to

1348
01:11:38,369 --> 01:11:44,239
specify what the cube texture layout

1349
01:11:40,109 --> 01:11:44,239
actually is so you know

1350
01:11:55,609 --> 01:12:03,898
maybe I'll call the TV like that

1351
01:12:01,859 --> 01:12:06,029
so you'll see cube UV layout you'll pass

1352
01:12:03,899 --> 01:12:09,329
in one of these by default it can be the

1353
01:12:06,029 --> 01:12:13,168
default cube right but you can also pass

1354
01:12:09,328 --> 01:12:14,698
in your own cubes and then in here when

1355
01:12:13,168 --> 01:12:16,498
we look it up we'll just read out what

1356
01:12:14,698 --> 01:12:26,848
these values are so the UV layout will

1357
01:12:16,498 --> 01:12:31,828
come out of here and it it does seem so

1358
01:12:26,849 --> 01:12:34,288
if we ever changed to using instance

1359
01:12:31,828 --> 01:12:36,090
stuff we could also instance this

1360
01:12:34,288 --> 01:12:37,849
because it's going to be repeated pretty

1361
01:12:36,090 --> 01:12:39,630
often

1362
01:12:37,849 --> 01:12:42,810
probably

1363
01:12:39,630 --> 01:12:42,810
[Music]

1364
01:12:50,000 --> 01:12:55,640
just thinking that through it's like it

1365
01:12:53,180 --> 01:13:21,770
you could pretty easily use a lookup

1366
01:12:55,640 --> 01:13:24,170
table for this so I'll just say because

1367
01:13:21,770 --> 01:13:28,100
really this is gonna be self similar a

1368
01:13:24,170 --> 01:13:32,539
lot so a lot of cubes are going to have

1369
01:13:28,100 --> 01:13:35,920
similar UV layouts so sending down all

1370
01:13:32,539 --> 01:13:38,899
of this stuff as individual things

1371
01:13:35,920 --> 01:13:41,810
doesn't make a lot of sense in terms of

1372
01:13:38,899 --> 01:13:43,069
optimality like if we're just trying to

1373
01:13:41,810 --> 01:13:46,250
think about how you would make an

1374
01:13:43,069 --> 01:13:48,619
optimal renderer and so I don't know

1375
01:13:46,250 --> 01:13:51,350
that I ever want to go down that kind of

1376
01:13:48,619 --> 01:13:56,869
route like handmade Hiro is not gonna

1377
01:13:51,350 --> 01:13:59,120
have an optimal sort of you know

1378
01:13:56,869 --> 01:14:02,059
Hardware renderer because it's not

1379
01:13:59,119 --> 01:14:04,189
really supposed to be something where we

1380
01:14:02,060 --> 01:14:07,640
spend all of our time doing micro

1381
01:14:04,189 --> 01:14:09,679
optimizations on the renderer because

1382
01:14:07,640 --> 01:14:11,990
you can spend an eternity doing such

1383
01:14:09,680 --> 01:14:14,119
things and the problem is that you know

1384
01:14:11,989 --> 01:14:16,189
because hardware support is what it is

1385
01:14:14,119 --> 01:14:18,229
you end up in situations where you have

1386
01:14:16,189 --> 01:14:19,969
like 50 different paths in your renderer

1387
01:14:18,229 --> 01:14:21,919
depending on what sorts of things the

1388
01:14:19,970 --> 01:14:23,180
hardware you're on supports and I don't

1389
01:14:21,920 --> 01:14:25,880
know that that's a particularly useful

1390
01:14:23,180 --> 01:14:28,010
thing for us to be doing right um but

1391
01:14:25,880 --> 01:14:29,630
it's worth putting the traduz in because

1392
01:14:28,010 --> 01:14:31,610
at the end of handmade hero what i would

1393
01:14:29,630 --> 01:14:34,369
like to do is sort of have a list of

1394
01:14:31,609 --> 01:14:36,399
like hey folks you know if you're

1395
01:14:34,369 --> 01:14:38,569
looking for programming exercises to do

1396
01:14:36,399 --> 01:14:40,609
here are the sorts of things you could

1397
01:14:38,569 --> 01:14:42,380
do like add a path to handmade gyro

1398
01:14:40,609 --> 01:14:45,319
that's optimized for geometry shaders

1399
01:14:42,380 --> 01:14:48,050
right and then you have a bunch of sort

1400
01:14:45,319 --> 01:14:50,599
of notes in the code that are there to

1401
01:14:48,050 --> 01:14:53,869
let you know here's a place you could

1402
01:14:50,600 --> 01:14:56,150
improve the performance of this thing

1403
01:14:53,869 --> 01:14:57,920
and here's a way to try it right and I

1404
01:14:56,149 --> 01:14:59,179
think that'll be good for people so even

1405
01:14:57,920 --> 01:15:01,489
though I don't necessarily plan to do

1406
01:14:59,180 --> 01:15:03,699
some of those things I feel like they

1407
01:15:01,489 --> 01:15:08,420
are useful in the sense that

1408
01:15:03,698 --> 01:15:12,019
they could be good for people to you

1409
01:15:08,420 --> 01:15:13,639
know know where the where they can make

1410
01:15:12,020 --> 01:15:18,440
those contributions or higher and then

1411
01:15:13,639 --> 01:15:29,050
how right alright so let's let's go here

1412
01:15:18,439 --> 01:15:32,988
is cube UV layout that should do it

1413
01:15:29,050 --> 01:15:34,789
so here we're pushing the the cube on

1414
01:15:32,988 --> 01:15:36,408
here we're specifying all the parameters

1415
01:15:34,789 --> 01:15:38,719
here so if we want do that we would have

1416
01:15:36,408 --> 01:15:40,759
to do the default cube none of this

1417
01:15:38,719 --> 01:15:42,439
stuff is necessary like the emission

1418
01:15:40,760 --> 01:15:43,699
value will default to that anyway so I

1419
01:15:42,439 --> 01:15:52,729
feel like we can just get rid of that

1420
01:15:43,698 --> 01:15:55,279
and that would solve that problem let's

1421
01:15:52,729 --> 01:16:00,589
see here emission light store this is

1422
01:15:55,279 --> 01:16:04,210
default cube matching set default cube

1423
01:16:00,590 --> 01:16:04,210
UV just to make it a little bit clearer

1424
01:16:19,929 --> 01:16:37,429
this should be alright and so that just

1425
01:16:34,520 --> 01:16:42,080
lets us change the you've ease of the

1426
01:16:37,429 --> 01:16:46,489
cube a bit as necessary and so you know

1427
01:16:42,079 --> 01:16:48,319
we can construct different sorts of

1428
01:16:46,488 --> 01:16:53,178
layouts for the cube UVs

1429
01:16:48,319 --> 01:16:55,340
if we want to at that point and you know

1430
01:16:53,179 --> 01:16:57,649
maybe we do want to write as you can

1431
01:16:55,340 --> 01:16:59,239
imagine us sort of making walls out of

1432
01:16:57,649 --> 01:17:00,979
these things we might want to use the

1433
01:16:59,238 --> 01:17:05,149
different parts of that texture to kind

1434
01:17:00,979 --> 01:17:08,359
of slide around and make different ones

1435
01:17:05,149 --> 01:17:10,789
so just to underscore how that works and

1436
01:17:08,359 --> 01:17:13,729
to make sure that change we add it

1437
01:17:10,789 --> 01:17:17,179
actually does work you could imagine us

1438
01:17:13,729 --> 01:17:19,309
doing like in here all we know is like

1439
01:17:17,179 --> 01:17:20,690
that something is element wall let's say

1440
01:17:19,310 --> 01:17:23,210
right that's the only piece of

1441
01:17:20,689 --> 01:17:25,519
information that we actually have but

1442
01:17:23,210 --> 01:17:30,079
let's suppose we have like element you

1443
01:17:25,520 --> 01:17:32,510
know wall start an element wall and and

1444
01:17:30,079 --> 01:17:34,309
these are just like different types of

1445
01:17:32,510 --> 01:17:35,630
little wall pieces it's not going to be

1446
01:17:34,310 --> 01:17:38,270
correct because we're not really gonna

1447
01:17:35,630 --> 01:17:40,940
do anything with that but I'm just I

1448
01:17:38,270 --> 01:17:44,840
just want to show what that would look

1449
01:17:40,939 --> 01:17:51,799
like so if you imagine us taking that

1450
01:17:44,840 --> 01:17:58,730
default cube layout here and just

1451
01:17:51,800 --> 01:18:00,890
placing it into our own system what we

1452
01:17:58,729 --> 01:18:03,619
can do is say alright when we're gonna

1453
01:18:00,890 --> 01:18:05,869
draw one of these cubes there's a couple

1454
01:18:03,619 --> 01:18:08,710
different cube layouts we could use and

1455
01:18:05,869 --> 01:18:12,590
maybe they're just parameterised on this

1456
01:18:08,710 --> 01:18:14,119
so you know we just make them line up

1457
01:18:12,590 --> 01:18:17,150
with this thing or something right

1458
01:18:14,119 --> 01:18:18,710
I don't know we don't really have to do

1459
01:18:17,149 --> 01:18:25,420
that we could actually do it just fine

1460
01:18:18,710 --> 01:18:29,920
so we'll do like wall UV is this and

1461
01:18:25,420 --> 01:18:31,989
we'll start you V is something else so

1462
01:18:29,920 --> 01:18:37,118
in order to do the will start you V

1463
01:18:31,988 --> 01:18:39,849
these values would shift over so what

1464
01:18:37,118 --> 01:18:43,389
you can see here on the midline is it's

1465
01:18:39,850 --> 01:18:45,909
basically just using zero two zero two

1466
01:18:43,389 --> 01:18:48,760
point five so the wall start I believe

1467
01:18:45,908 --> 01:18:51,849
is just it's just this right it's just a

1468
01:18:48,760 --> 01:18:55,500
thing that that shifts it over by 0.25

1469
01:18:51,850 --> 01:18:57,699
and that's literally it

1470
01:18:55,500 --> 01:18:59,260
there's nothing else that has to happen

1471
01:18:57,698 --> 01:19:01,210
we're just shifting those texture

1472
01:18:59,260 --> 01:19:05,920
coordinates over to pick out the next

1473
01:19:01,210 --> 01:19:09,670
panel in the packed wall and that that's

1474
01:19:05,920 --> 01:19:11,949
right it's nothing special and wall End

1475
01:19:09,670 --> 01:19:13,810
is exactly the same as well the top and

1476
01:19:11,948 --> 01:19:16,539
bottom are don't change cuz those don't

1477
01:19:13,810 --> 01:19:18,429
change it all right but the same would

1478
01:19:16,539 --> 01:19:21,880
be true here right we're just sliding it

1479
01:19:18,429 --> 01:19:29,649
over to pick the last one and that's all

1480
01:19:21,880 --> 01:19:32,079
we're doing and if we wanted to get

1481
01:19:29,649 --> 01:19:33,729
creative you could see also generating

1482
01:19:32,079 --> 01:19:36,609
use of the macker pretty easily because

1483
01:19:33,729 --> 01:19:39,939
as you can see they're exactly the same

1484
01:19:36,609 --> 01:19:42,488
values the only difference between them

1485
01:19:39,939 --> 01:19:48,339
is what you specify as the x-coordinate

1486
01:19:42,488 --> 01:19:50,678
in the mid so anyway so that's well

1487
01:19:48,340 --> 01:19:52,329
start in wall and you've ease so now if

1488
01:19:50,679 --> 01:19:55,510
I built this you know no one would care

1489
01:19:52,329 --> 01:19:57,579
because it doesn't matter to the code at

1490
01:19:55,510 --> 01:20:00,219
all currently but let's suppose we made

1491
01:19:57,579 --> 01:20:03,279
it matter to the code so let's suppose

1492
01:20:00,219 --> 01:20:07,029
when we do place rectangular wall and

1493
01:20:03,279 --> 01:20:10,988
then what we do is in here we say you

1494
01:20:07,029 --> 01:20:19,960
know here's the thing that that place is

1495
01:20:10,988 --> 01:20:23,049
what it is if the Y so the Y doesn't

1496
01:20:19,960 --> 01:20:30,340
place end pieces but the X does so let's

1497
01:20:23,050 --> 01:20:32,980
just say if the X I'm gonna I'm gonna do

1498
01:20:30,340 --> 01:20:34,560
a little test here to say look the seen

1499
01:20:32,979 --> 01:20:38,799
element

1500
01:20:34,560 --> 01:20:40,570
LM type equals element wall

1501
01:20:38,800 --> 01:20:42,369
and then a place to tell them type in

1502
01:20:40,569 --> 01:20:45,489
here and then I'm just gonna do a thing

1503
01:20:42,369 --> 01:20:48,460
that says look if the x-axis is at its

1504
01:20:45,489 --> 01:20:54,069
min right now then the LM type equals

1505
01:20:48,460 --> 01:20:58,810
element wall start and if the x equals

1506
01:20:54,069 --> 01:21:02,799
max X then the LM type equals filament

1507
01:20:58,810 --> 01:21:06,039
wall end right and so that just gives us

1508
01:21:02,800 --> 01:21:09,539
the ability to set those now when we set

1509
01:21:06,039 --> 01:21:12,369
those again we're not actually using

1510
01:21:09,539 --> 01:21:15,449
those UVs anywhere so what we do have to

1511
01:21:12,369 --> 01:21:19,920
do is when we actually test these here

1512
01:21:15,449 --> 01:21:19,920
we just kind of need to say like look

1513
01:21:20,340 --> 01:21:28,210
this can loft out we need to be able to

1514
01:21:24,430 --> 01:21:30,100
pass different stuff in here so we need

1515
01:21:28,210 --> 01:21:33,039
to be able to say like okay this is

1516
01:21:30,100 --> 01:21:34,720
going to be the default cube although

1517
01:21:33,039 --> 01:21:37,000
actually we made one for these it's just

1518
01:21:34,720 --> 01:21:38,829
wall you'd be right but what we can do

1519
01:21:37,000 --> 01:21:40,930
here is dispatch on this thing and say

1520
01:21:38,829 --> 01:21:42,850
like look if it's a wall start or a wall

1521
01:21:40,930 --> 01:21:46,360
ends we can do something different here

1522
01:21:42,850 --> 01:21:47,920
well start UV well and UV and now we're

1523
01:21:46,359 --> 01:21:49,689
drawing potentially three different

1524
01:21:47,920 --> 01:21:54,010
types like I said these aren't going to

1525
01:21:49,689 --> 01:21:57,369
line up at all because that's this is

1526
01:21:54,010 --> 01:22:00,010
not how you would actually do this but

1527
01:21:57,369 --> 01:22:04,029
it should just let us see like you write

1528
01:22:00,010 --> 01:22:10,869
that we're getting one of these in each

1529
01:22:04,029 --> 01:22:15,000
case right and that's all I was trying

1530
01:22:10,869 --> 01:22:18,579
to do so just to get that basic you know

1531
01:22:15,000 --> 01:22:19,720
sort of starting and look in place and

1532
01:22:18,579 --> 01:22:21,489
as you can see they go the wrong

1533
01:22:19,720 --> 01:22:22,960
direction depending on which kind of

1534
01:22:21,489 --> 01:22:25,929
thing you were doing because we didn't

1535
01:22:22,960 --> 01:22:27,730
actually do you need to figure out which

1536
01:22:25,930 --> 01:22:29,500
face you're talking about as you go

1537
01:22:27,729 --> 01:22:32,529
around it so it's gonna be right from

1538
01:22:29,500 --> 01:22:34,390
from facing forwards it'll always be

1539
01:22:32,529 --> 01:22:37,899
right but from all the other directions

1540
01:22:34,390 --> 01:22:40,420
it'll be wrong right because of just the

1541
01:22:37,899 --> 01:22:44,259
fact that we didn't set those up so

1542
01:22:40,420 --> 01:22:45,489
that's all that is and we could also go

1543
01:22:44,260 --> 01:22:48,579
ahead and change this one now to

1544
01:22:45,489 --> 01:22:50,679
actually use the mid wall version so in

1545
01:22:48,579 --> 01:22:52,159
here like when we do this regular wall

1546
01:22:50,680 --> 01:22:56,180
UV this one actually

1547
01:22:52,159 --> 01:22:58,069
wants to be 0.5 to 0.75 because that's

1548
01:22:56,180 --> 01:23:01,430
the one for an actual wall run as

1549
01:22:58,069 --> 01:23:05,929
opposed to a wall end so we can do that

1550
01:23:01,430 --> 01:23:08,390
as well and now we know that that's

1551
01:23:05,930 --> 01:23:10,039
working correctly unless I'm missing

1552
01:23:08,390 --> 01:23:13,640
something that's not a very complete

1553
01:23:10,039 --> 01:23:17,750
test but it's good enough one for now we

1554
01:23:13,640 --> 01:23:19,220
can count on the person calling the

1555
01:23:17,750 --> 01:23:20,810
renderer to be able to texture their

1556
01:23:19,220 --> 01:23:24,530
cubes however they want to texture their

1557
01:23:20,810 --> 01:23:27,050
cubes which is what we wanted and so now

1558
01:23:24,529 --> 01:23:32,840
like yeah and if you look at it sort of

1559
01:23:27,050 --> 01:23:34,400
you can see it from a if you had all

1560
01:23:32,840 --> 01:23:42,860
these be the same height they would kind

1561
01:23:34,399 --> 01:23:45,199
of line up right no so that's Z Rand we

1562
01:23:42,859 --> 01:23:47,479
actually want that Z to not be so

1563
01:23:45,199 --> 01:23:55,010
another thing we probably should do

1564
01:23:47,479 --> 01:23:57,919
there just to test it is this Z value

1565
01:23:55,010 --> 01:24:07,930
should should really not do what it's

1566
01:23:57,920 --> 01:24:14,989
doing here so when we do this push cube

1567
01:24:07,930 --> 01:24:16,369
I'm gonna move this over well you know

1568
01:24:14,989 --> 01:24:18,289
I'm gonna do I'm gonna do it this way

1569
01:24:16,369 --> 01:24:26,199
I'm gonna say it's going to be equal to

1570
01:24:18,289 --> 01:24:26,199
zero point zero if it's a wall

1571
01:24:34,198 --> 01:24:42,939
so if that's any of these and I could

1572
01:24:41,618 --> 01:24:44,649
just make it is well function but I

1573
01:24:42,939 --> 01:24:48,549
don't really care enough in this this is

1574
01:24:44,649 --> 01:24:50,618
just the test code and that just will

1575
01:24:48,550 --> 01:24:54,130
line all the walls up so they're like an

1576
01:24:50,618 --> 01:24:56,079
equal height right and so you can kind

1577
01:24:54,130 --> 01:24:58,359
of see how that all kind of comes

1578
01:24:56,079 --> 01:25:02,050
together similarly I don't really want

1579
01:24:58,359 --> 01:25:04,149
the wall colors to vary so this are I

1580
01:25:02,050 --> 01:25:06,159
don't really want to have happen either

1581
01:25:04,149 --> 01:25:17,559
so one way to do this actually I suppose

1582
01:25:06,158 --> 01:25:21,009
would be to do it like this and then say

1583
01:25:17,560 --> 01:25:23,260
okay you can set these to their normal

1584
01:25:21,010 --> 01:25:25,000
things but you know z equals 0 and R

1585
01:25:23,260 --> 01:25:27,610
equals 1 in the case where this thing is

1586
01:25:25,000 --> 01:25:29,738
a wall because I don't want you to be

1587
01:25:27,609 --> 01:25:36,460
you know doing all kinds of funny

1588
01:25:29,738 --> 01:25:39,459
business and then you can see kind of

1589
01:25:36,460 --> 01:25:43,739
making that segmented wall but that it

1590
01:25:39,460 --> 01:25:43,739
lines up now you know

1591
01:25:55,389 --> 01:26:00,399
so that's that's all I'm talking about

1592
01:26:03,079 --> 01:26:08,309
and I think that's basically it that's

1593
01:26:06,000 --> 01:26:11,250
that's really all there is to that

1594
01:26:08,310 --> 01:26:13,320
that's all I wanted to do and so now we

1595
01:26:11,250 --> 01:26:15,770
kind of have a more complete test of

1596
01:26:13,319 --> 01:26:21,630
that and that's all good

1597
01:26:15,770 --> 01:26:23,880
so camera is panning it was true I'd

1598
01:26:21,630 --> 01:26:25,409
like to take a little look at the

1599
01:26:23,880 --> 01:26:28,100
panning version but then I think we're

1600
01:26:25,409 --> 01:26:28,099
pretty much done here

1601
01:26:45,139 --> 01:26:52,800
maybe I'll even go the extra mile who

1602
01:26:49,260 --> 01:26:56,760
knows and and push those up a little bit

1603
01:26:52,800 --> 01:26:59,300
so that they I'm just gonna a little

1604
01:26:56,760 --> 01:26:59,300
bump here

1605
01:27:07,409 --> 01:27:16,260
so that is I think pretty much concludes

1606
01:27:12,520 --> 01:27:18,790
our work with the renderer in that sense

1607
01:27:16,260 --> 01:27:25,630
and I think we want to move on to the

1608
01:27:18,789 --> 01:27:28,050
texture situation and I guess we could

1609
01:27:25,630 --> 01:27:32,590
also let take a little bit of a quick

1610
01:27:28,050 --> 01:27:40,449
benchmark just a really brief kind of

1611
01:27:32,590 --> 01:27:45,699
like just just a quick temperature test

1612
01:27:40,449 --> 01:27:48,039
to see how slow we are with the texture

1613
01:27:45,699 --> 01:27:51,039
changes and maybe we can go in and sort

1614
01:27:48,039 --> 01:27:54,909
of nerf the lighting computation in the

1615
01:27:51,039 --> 01:28:05,560
pixel shader as well just to see if we

1616
01:27:54,909 --> 01:28:07,420
can't get an idea of what our look of

1617
01:28:05,560 --> 01:28:08,650
how expensive our texture changes are so

1618
01:28:07,420 --> 01:28:12,840
that we know if we've done a good job

1619
01:28:08,649 --> 01:28:12,839
getting rid of them you know I'm saying

1620
01:28:27,039 --> 01:28:30,449
so I feel like this is good

1621
01:28:41,949 --> 01:28:44,500
I'm just gonna let it run through its

1622
01:28:43,390 --> 01:28:46,390
paces here and make sure nothing

1623
01:28:44,500 --> 01:28:48,539
untoward is happening I think we're good

1624
01:28:46,390 --> 01:28:48,539
to go

1625
01:28:55,800 --> 01:28:58,979
[Music]

1626
01:29:12,079 --> 01:29:18,260
so I feel like that's just that's all

1627
01:29:14,630 --> 01:29:20,300
good so what I'd like to do now is I'd

1628
01:29:18,260 --> 01:29:22,159
like to go ahead and test some of the

1629
01:29:20,300 --> 01:29:26,739
texture change stuff a little bit so we

1630
01:29:22,159 --> 01:29:29,389
have a way to stress it out already and

1631
01:29:26,739 --> 01:29:32,750
the way we can stress this out is just

1632
01:29:29,390 --> 01:29:35,240
by when we push our simple scene on we

1633
01:29:32,750 --> 01:29:38,390
had a way of doing a lot of grass cover

1634
01:29:35,239 --> 01:29:40,639
right it's this thing um so if I just

1635
01:29:38,390 --> 01:29:48,560
dump a ton of sprites in there we get a

1636
01:29:40,640 --> 01:29:53,420
lot slower and there you go you can see

1637
01:29:48,560 --> 01:29:55,840
how slow we get in this case and I'm

1638
01:29:53,420 --> 01:29:58,130
sure we can slow us down even more

1639
01:29:55,840 --> 01:29:59,960
you know just just push an arbitrary

1640
01:29:58,130 --> 01:30:05,480
number on there until you get slow

1641
01:29:59,960 --> 01:30:07,989
enough and what I'd like to do is find

1642
01:30:05,479 --> 01:30:10,189
out how much time we're spending in

1643
01:30:07,989 --> 01:30:13,399
different parts of the pipeline here to

1644
01:30:10,189 --> 01:30:15,229
just just to know who's at fault because

1645
01:30:13,399 --> 01:30:17,029
I would like to get us into a position

1646
01:30:15,229 --> 01:30:18,859
where texture changes are the expensive

1647
01:30:17,029 --> 01:30:23,960
part before we optimize our texture

1648
01:30:18,859 --> 01:30:27,409
changes you know just to make sure that

1649
01:30:23,960 --> 01:30:32,329
we can actually you know see what we're

1650
01:30:27,409 --> 01:30:37,039
actually doing so let's let's try

1651
01:30:32,329 --> 01:30:38,930
I know it's always sort of I know it's

1652
01:30:37,039 --> 01:30:41,029
always an exercise and frustration to

1653
01:30:38,930 --> 01:30:43,220
try to use any kind of anything that has

1654
01:30:41,029 --> 01:30:45,439
to do the GPU is always bad they're just

1655
01:30:43,220 --> 01:30:47,690
they're horrible they're not built like

1656
01:30:45,439 --> 01:30:49,489
CPUs they don't have proper debugging

1657
01:30:47,689 --> 01:30:52,789
they don't have proper profiling and

1658
01:30:49,489 --> 01:30:58,039
it's awful we know this but let's just

1659
01:30:52,789 --> 01:31:05,479
see if we can get some measure of that

1660
01:30:58,039 --> 01:31:07,310
going and hopefully maybe I don't know

1661
01:31:05,479 --> 01:31:11,599
we'll be able to do something where we

1662
01:31:07,310 --> 01:31:14,470
can at least say look here is how much

1663
01:31:11,600 --> 01:31:16,970
those texture changes are costing us and

1664
01:31:14,470 --> 01:31:18,020
you know they're bad I don't know if we

1665
01:31:16,970 --> 01:31:20,090
can make that happen

1666
01:31:18,020 --> 01:31:22,160
you know it's speculation on my part

1667
01:31:20,090 --> 01:31:23,539
that's ever even gonna happen on an

1668
01:31:22,159 --> 01:31:25,670
Nvidia part because Nvidia parts are

1669
01:31:23,539 --> 01:31:27,409
good at texture changes

1670
01:31:25,670 --> 01:31:30,529
so it's hard to say whether this would

1671
01:31:27,409 --> 01:31:34,760
really be the case or not I don't know

1672
01:31:30,529 --> 01:31:36,349
so we're gonna try this may not help but

1673
01:31:34,760 --> 01:31:40,360
we do need to do that stuff for texture

1674
01:31:36,350 --> 01:31:42,770
changes anyway why am I not able to oh

1675
01:31:40,359 --> 01:31:45,589
this is the the new product right right

1676
01:31:42,770 --> 01:31:47,450
okay um so I need to basically make one

1677
01:31:45,590 --> 01:31:49,909
of these things I'm gonna make I'm I am

1678
01:31:47,449 --> 01:31:53,599
gonna make this inside a handmade msec

1679
01:31:49,909 --> 01:31:58,630
proj and I'm just gonna make the win32

1680
01:31:53,600 --> 01:31:58,630
renderer test thing be what we're doing

1681
01:32:02,738 --> 01:32:07,269
I'm just gonna call it that because I

1682
01:32:05,750 --> 01:32:12,439
don't know what else to call it

1683
01:32:07,270 --> 01:32:15,310
I'm gonna pick the executable from the

1684
01:32:12,439 --> 01:32:15,309
build directory here

1685
01:32:19,279 --> 01:32:26,329
and as far as the working directory is

1686
01:32:22,130 --> 01:32:28,789
concerned I don't remember what we set

1687
01:32:26,329 --> 01:32:30,829
the working directory this thing to so

1688
01:32:28,789 --> 01:32:32,149
I'm just gonna look so we're I want to

1689
01:32:30,829 --> 01:32:36,920
make sure we always run it the exact

1690
01:32:32,149 --> 01:32:39,739
same way so it's in there so we're gonna

1691
01:32:36,920 --> 01:32:44,149
tell it to run it in there and that

1692
01:32:39,739 --> 01:32:55,729
should be it actually so hopefully we

1693
01:32:44,149 --> 01:32:59,319
can make this run what I don't know that

1694
01:32:55,729 --> 01:32:59,319
I really care about this

1695
01:33:07,119 --> 01:33:15,579
I guess I don't know if this needs to

1696
01:33:09,819 --> 01:33:17,349
access the network externally because it

1697
01:33:15,579 --> 01:33:19,029
should only need to use loopback so I'll

1698
01:33:17,350 --> 01:33:20,950
just try not allowing it through the

1699
01:33:19,029 --> 01:33:24,359
firewall first and we'll see if that

1700
01:33:20,949 --> 01:33:24,359
actually poses a problem

1701
01:33:36,010 --> 01:33:40,150
so it seems like it doesn't need that so

1702
01:33:38,078 --> 01:33:43,469
I'm just gonna skip that I assume that's

1703
01:33:40,149 --> 01:33:43,469
just for remote cap there

1704
01:33:51,699 --> 01:33:56,679
so what I can't say though is you know

1705
01:33:55,329 --> 01:33:58,479
I'm just I'm just testing to make sure

1706
01:33:56,680 --> 01:33:59,980
insights working it seems like it maybe

1707
01:33:58,479 --> 01:34:01,299
is working and it's taking a long time

1708
01:33:59,979 --> 01:34:02,769
caps the frame but that's probably just

1709
01:34:01,300 --> 01:34:08,890
because there's a lot of dispatches in

1710
01:34:02,770 --> 01:34:10,690
there so what I assume is that we're

1711
01:34:08,890 --> 01:34:13,510
really not seeing the texture change hit

1712
01:34:10,689 --> 01:34:14,949
that much at the moment because if I

1713
01:34:13,510 --> 01:34:19,239
looked at the you know if you look at

1714
01:34:14,949 --> 01:34:22,840
the little graph that was on the on the

1715
01:34:19,239 --> 01:34:26,979
overlay and the HUD it was showing that

1716
01:34:22,840 --> 01:34:29,260
the texture part was very was was

1717
01:34:26,979 --> 01:34:31,719
getting overstressed right or it looks

1718
01:34:29,260 --> 01:34:33,250
looked that way so I'm not sure that

1719
01:34:31,720 --> 01:34:37,360
we're really going to find that our

1720
01:34:33,250 --> 01:34:39,340
current problem is texture changes and

1721
01:34:37,359 --> 01:34:41,319
we've got some things that we probably

1722
01:34:39,340 --> 01:34:44,250
need to fix like the fact that we're

1723
01:34:41,319 --> 01:34:47,199
relying on multi sampling everywhere

1724
01:34:44,250 --> 01:34:51,340
instead of only in one pass and a bunch

1725
01:34:47,199 --> 01:34:52,809
of stuff like that so there's a number

1726
01:34:51,340 --> 01:35:01,779
of things that we probably want to do

1727
01:34:52,810 --> 01:35:07,480
and we will see what we could do about

1728
01:35:01,779 --> 01:35:10,050
those later I don't really know what

1729
01:35:07,479 --> 01:35:10,049
it's doing right now

1730
01:35:14,229 --> 01:35:20,149
but here's here's my guess because we

1731
01:35:18,139 --> 01:35:21,889
issue so many draw calls I'm guessing

1732
01:35:20,149 --> 01:35:24,559
that it's like doing a replay and doing

1733
01:35:21,889 --> 01:35:26,239
a screen capture of like every dispatch

1734
01:35:24,560 --> 01:35:30,500
so we're gonna end up with like 8

1735
01:35:26,238 --> 01:35:33,049
billion little tiny screen grabs of like

1736
01:35:30,500 --> 01:35:36,948
one piece of grass drawing you know I'm

1737
01:35:33,050 --> 01:35:39,560
saying so ironically although I'm not

1738
01:35:36,948 --> 01:35:41,750
sure that the actual dispatches are the

1739
01:35:39,560 --> 01:35:43,550
problem at the moment in our actual code

1740
01:35:41,750 --> 01:35:49,329
well they probably are the problem in

1741
01:35:43,550 --> 01:35:49,329
our capturing for whatever that's worth

1742
01:36:01,720 --> 01:36:07,010
so one thing we can also do is because

1743
01:36:04,100 --> 01:36:08,600
we draw so many grasses at once we could

1744
01:36:07,010 --> 01:36:11,480
also do a thing where we just check to

1745
01:36:08,600 --> 01:36:16,480
see whether the grasses are the same

1746
01:36:11,479 --> 01:36:19,549
grass and draw them in a batch as a test

1747
01:36:16,479 --> 01:36:23,000
right as just a way of seeing whether or

1748
01:36:19,550 --> 01:36:26,900
not this is the case this looks like we

1749
01:36:23,000 --> 01:36:29,090
could be here forever I'm not

1750
01:36:26,899 --> 01:36:33,949
anticipating this is ever gonna finish

1751
01:36:29,090 --> 01:36:36,470
in our lifetime so that's fine like I

1752
01:36:33,949 --> 01:36:39,729
said working with GPUs is terrible it

1753
01:36:36,470 --> 01:36:43,579
always is it's the worst part of the job

1754
01:36:39,729 --> 01:36:47,769
so yeah not sure what to do about that

1755
01:36:43,579 --> 01:36:47,769
I'm gonna go ahead and close this stuff

1756
01:36:48,189 --> 01:36:55,279
because it's not working and I'm gonna

1757
01:36:53,689 --> 01:36:58,849
go ahead and investigate this a little

1758
01:36:55,279 --> 01:37:04,099
bit differently like I said you can

1759
01:36:58,850 --> 01:37:07,700
never really GPUs are awful yeah kind of

1760
01:37:04,100 --> 01:37:14,990
wish they never happen um so let's go

1761
01:37:07,699 --> 01:37:18,050
ahead and pop over to the renderer and

1762
01:37:14,989 --> 01:37:20,689
what I want to do is I want to just look

1763
01:37:18,050 --> 01:37:25,730
at where we're doing those dispatches

1764
01:37:20,689 --> 01:37:28,309
and I'm gonna fake some coding here too

1765
01:37:25,729 --> 01:37:30,409
to aggregate batches before we actually

1766
01:37:28,310 --> 01:37:32,420
do the work of aggregating backs patches

1767
01:37:30,409 --> 01:37:34,579
just so we can see what the difference

1768
01:37:32,420 --> 01:37:38,420
is right that that's all I really want

1769
01:37:34,579 --> 01:37:40,399
to do so let's start with some of that

1770
01:37:38,420 --> 01:37:43,869
right

1771
01:37:40,399 --> 01:37:43,869
and and we can go from there

1772
01:37:48,109 --> 01:37:58,109
where's our where's our stuff here

1773
01:37:52,429 --> 01:38:01,590
whereas our Ryszard we're sort dirt is

1774
01:37:58,109 --> 01:38:05,519
like where's our dispatch so this is

1775
01:38:01,590 --> 01:38:08,969
where we dispatch everything and I just

1776
01:38:05,520 --> 01:38:16,139
want to see so when we do our drawing

1777
01:38:08,969 --> 01:38:18,989
here you can kind of see when we do what

1778
01:38:16,139 --> 01:38:23,480
we end up doing is we draw one triangle

1779
01:38:18,988 --> 01:38:26,218
strip and then we have to restart right

1780
01:38:23,479 --> 01:38:29,218
and the reason that we have to restart

1781
01:38:26,219 --> 01:38:33,500
our triangle strip is just because there

1782
01:38:29,219 --> 01:38:36,779
is no way to just send quads down like

1783
01:38:33,500 --> 01:38:38,969
for some unknown reason they got rid of

1784
01:38:36,779 --> 01:38:42,658
quads as a drawing method and I don't

1785
01:38:38,969 --> 01:38:46,078
know why because they are very efficient

1786
01:38:42,658 --> 01:38:48,420
for drawing sprites and I guess their

1787
01:38:46,078 --> 01:38:56,130
thinking was just well use a geometry

1788
01:38:48,420 --> 01:38:58,469
shader and and output them that way I

1789
01:38:56,130 --> 01:39:03,179
don't know but the problem that we will

1790
01:38:58,469 --> 01:39:05,328
have is that by calling GL draw rays

1791
01:39:03,179 --> 01:39:09,239
there's really no way for us to draw

1792
01:39:05,328 --> 01:39:12,779
multiple quads without doing more fancy

1793
01:39:09,238 --> 01:39:14,729
footwork here now what we can do is we

1794
01:39:12,779 --> 01:39:19,439
can sort of start to construct something

1795
01:39:14,729 --> 01:39:24,328
that would allow us to draw draw these

1796
01:39:19,439 --> 01:39:28,710
quads in a way that that doesn't occur

1797
01:39:24,328 --> 01:39:31,229
incur much of a penalty and that would

1798
01:39:28,710 --> 01:39:34,439
be by actually having an index buffer

1799
01:39:31,229 --> 01:39:38,638
that tracks as we sink the quads that

1800
01:39:34,439 --> 01:39:40,500
sort of tracks that and what I what I

1801
01:39:38,639 --> 01:39:44,279
want to know because I don't actually

1802
01:39:40,500 --> 01:39:47,609
know is whether primitive restart index

1803
01:39:44,279 --> 01:39:54,170
actually exists at the moment in terms

1804
01:39:47,609 --> 01:39:54,170
of like let me see here

1805
01:40:02,979 --> 01:40:11,928
so primitive restart is not an envy only

1806
01:40:09,109 --> 01:40:15,309
thing so I'm guessing I may be like have

1807
01:40:11,929 --> 01:40:15,310
the wrong name for it

1808
01:40:23,738 --> 01:40:30,218
hmm so I'm not sure how to search for

1809
01:40:27,039 --> 01:40:35,170
that because it was part of core and I'm

1810
01:40:30,219 --> 01:40:38,460
just not sure when it went in but quite

1811
01:40:35,170 --> 01:40:38,460
a few cards have it right

1812
01:40:48,520 --> 01:40:56,480
so I feel like it's a fairly highly

1813
01:40:51,439 --> 01:41:00,559
supported feature but I'm just not sure

1814
01:40:56,479 --> 01:41:03,709
I don't know about how much coverage

1815
01:41:00,560 --> 01:41:09,980
there is for a primitive restart but

1816
01:41:03,710 --> 01:41:11,420
basically what you can do is if you and

1817
01:41:09,979 --> 01:41:12,589
and you know now I think about it I

1818
01:41:11,420 --> 01:41:15,050
guess it doesn't really matter I mean

1819
01:41:12,590 --> 01:41:16,909
it's gonna save us only one index but

1820
01:41:15,050 --> 01:41:19,400
what you can do is if you want to do

1821
01:41:16,909 --> 01:41:22,389
something like send down quads you can

1822
01:41:19,399 --> 01:41:25,399
use a tri strip to send down four quads

1823
01:41:22,390 --> 01:41:29,539
four vertices that form the quad and

1824
01:41:25,399 --> 01:41:31,489
then a restart element that says okay

1825
01:41:29,539 --> 01:41:35,000
I'm gonna draw I want you to restart the

1826
01:41:31,489 --> 01:41:36,319
Tri strip right so we could do that but

1827
01:41:35,000 --> 01:41:38,180
in order to do that we have to switch to

1828
01:41:36,319 --> 01:41:41,779
having an index buffer in addition to a

1829
01:41:38,180 --> 01:41:44,180
vertex buffer and once we do that we can

1830
01:41:41,779 --> 01:41:46,250
just send down quads as six indices one

1831
01:41:44,180 --> 01:41:48,800
two three one two three and be done

1832
01:41:46,250 --> 01:41:51,560
anyway so we can probably just switch to

1833
01:41:48,800 --> 01:41:54,920
that and be fine with it

1834
01:41:51,560 --> 01:41:58,580
I'm interested to try that so what I

1835
01:41:54,920 --> 01:42:04,730
would like to do here is instead of GL

1836
01:41:58,579 --> 01:42:07,039
draw Ray's um Jill duck what's the dock

1837
01:42:04,729 --> 01:42:09,229
it's like open Jill dock it's like a

1838
01:42:07,039 --> 01:42:13,359
someone docks tachi oh that's and I'm

1839
01:42:09,229 --> 01:42:17,119
like it's it's got a good searchable 1su

1840
01:42:13,359 --> 01:42:19,339
GL draw arrays if you look at how it's

1841
01:42:17,119 --> 01:42:23,359
called it just assumes that you're going

1842
01:42:19,340 --> 01:42:27,670
to point to a array of vertices somehow

1843
01:42:23,359 --> 01:42:30,949
and those vertices are going to be

1844
01:42:27,670 --> 01:42:32,810
interpreted in order and what we'd like

1845
01:42:30,949 --> 01:42:35,000
to switch to is being able to send down

1846
01:42:32,810 --> 01:42:38,000
vertices and then indexes into that

1847
01:42:35,000 --> 01:42:41,539
vertex array and so if you look at how

1848
01:42:38,000 --> 01:42:43,310
this is is patched here what we'd like

1849
01:42:41,539 --> 01:42:46,909
is a call that allows us specify an

1850
01:42:43,310 --> 01:42:47,950
index buffer and sip don't know why that

1851
01:42:46,909 --> 01:42:53,639
did that okay there we go

1852
01:42:47,949 --> 01:42:56,729
and so I believe this is the

1853
01:42:53,640 --> 01:43:00,150
of the index buffer line I never

1854
01:42:56,729 --> 01:43:03,329
remember yeah so if we want to we can

1855
01:43:00,149 --> 01:43:08,309
call draw elements and pass an index

1856
01:43:03,329 --> 01:43:11,699
buffer as well and so when we call this

1857
01:43:08,310 --> 01:43:14,670
GL draw arrays we can instead call GL

1858
01:43:11,699 --> 01:43:17,699
draw elements and pass an index buffer

1859
01:43:14,670 --> 01:43:21,480
down so if we wanted to for example we

1860
01:43:17,699 --> 01:43:24,269
could do that right here where what we

1861
01:43:21,479 --> 01:43:30,269
could say is look instead of that call

1862
01:43:24,270 --> 01:43:33,210
let's use this call and then when we do

1863
01:43:30,270 --> 01:43:38,160
mode count type indices same basic idea

1864
01:43:33,210 --> 01:43:41,430
we want triangle strip actually no let's

1865
01:43:38,159 --> 01:43:45,319
do GL triangles instead write the number

1866
01:43:41,430 --> 01:43:47,789
of indices were going to send down now

1867
01:43:45,319 --> 01:43:49,649
because this count here like the number

1868
01:43:47,789 --> 01:43:51,720
of elements to be rendered before we're

1869
01:43:49,649 --> 01:43:55,979
doing four vertices we're gonna do six

1870
01:43:51,720 --> 01:43:58,140
indices now okay we're gonna see what

1871
01:43:55,979 --> 01:44:02,969
kind of indices were sending down let's

1872
01:43:58,140 --> 01:44:06,720
send down unsigned shorts more efficient

1873
01:44:02,970 --> 01:44:11,460
int is good it is probably what we want

1874
01:44:06,720 --> 01:44:14,460
for right now because we don't want to

1875
01:44:11,460 --> 01:44:16,109
have to break things up into bunches now

1876
01:44:14,460 --> 01:44:18,090
let's break them up into bunches anyway

1877
01:44:16,109 --> 01:44:21,719
so let's do short let's let's get our

1878
01:44:18,090 --> 01:44:25,319
short shirt on and then we want to pass

1879
01:44:21,720 --> 01:44:27,900
them down okay so what I'm gonna do is

1880
01:44:25,319 --> 01:44:30,299
I'm gonna draw by index I'm gonna create

1881
01:44:27,899 --> 01:44:32,969
some indices here and what I'm gonna do

1882
01:44:30,300 --> 01:44:35,820
is just create the indices that would

1883
01:44:32,970 --> 01:44:38,520
take four elements in Tri strip order

1884
01:44:35,819 --> 01:44:42,929
and I'm going to use those as indices to

1885
01:44:38,520 --> 01:44:48,840
draw actual triangles myself okay so a

1886
01:44:42,930 --> 01:44:53,640
tri strip is 0 1 2 3 that's how it's

1887
01:44:48,840 --> 01:44:55,260
constructed to draw quad 0 1 2 3 so what

1888
01:44:53,640 --> 01:44:58,680
we want to do is if we know we're

1889
01:44:55,260 --> 01:45:01,560
getting 0 1 2 3 down the pipe I'm just

1890
01:44:58,680 --> 01:45:04,770
gonna draw two triangles right well I

1891
01:45:01,560 --> 01:45:07,560
should actually drawn this way so I'm

1892
01:45:04,770 --> 01:45:10,380
going to draw 0 2 1

1893
01:45:07,560 --> 01:45:13,410
then I'm gonna draw one two three okay

1894
01:45:10,380 --> 01:45:15,840
to counterclockwise wound triangles out

1895
01:45:13,409 --> 01:45:19,319
of the that buffer and again exactly

1896
01:45:15,840 --> 01:45:23,520
what I just said zero to 1 and the other

1897
01:45:19,319 --> 01:45:26,250
trials to be one two three all right

1898
01:45:23,520 --> 01:45:29,630
and so we're we've done literally

1899
01:45:26,250 --> 01:45:31,939
nothing useful here at all other than

1900
01:45:29,630 --> 01:45:34,770
transform you note switch between

1901
01:45:31,939 --> 01:45:36,659
alright and we didn't even work why do

1902
01:45:34,770 --> 01:45:44,130
we not work that seems pretty

1903
01:45:36,659 --> 01:45:50,340
straightforward doesn't it triangles we

1904
01:45:44,130 --> 01:45:55,380
want six what is the problem here zero

1905
01:45:50,340 --> 01:45:59,420
to one I did have that right yeah what's

1906
01:45:55,380 --> 01:45:59,420
the try support it's not downward is it

1907
01:46:00,140 --> 01:46:03,920
it's not that is it

1908
01:46:05,569 --> 01:46:12,099
I honestly don't remember what order

1909
01:46:08,180 --> 01:46:12,100
they go in and I look it up

1910
01:46:19,810 --> 01:46:30,700
no it's ABCD I have that right it's

1911
01:46:25,729 --> 01:46:34,329
exactly as I drew it one two three four

1912
01:46:30,699 --> 01:46:38,439
don't ask me why they're drawn winding

1913
01:46:34,329 --> 01:46:43,670
clockwise because that is not oh because

1914
01:46:38,439 --> 01:46:46,119
all right they set them that way for

1915
01:46:43,670 --> 01:46:46,119
some reason

1916
01:46:52,359 --> 01:46:57,579
oh wait so this is only if it's

1917
01:46:55,119 --> 01:46:59,890
clockwise though so are they so it is

1918
01:46:57,579 --> 01:47:04,140
the upside-down way I don't know look I

1919
01:46:59,890 --> 01:47:04,140
someone show me what the actual order is

1920
01:47:06,149 --> 01:47:12,389
where is it done just just show me this

1921
01:47:08,500 --> 01:47:12,390
back why am I even looking at this I

1922
01:47:13,020 --> 01:47:18,210
don't care what anyone posts on the web

1923
01:47:15,340 --> 01:47:18,210
show me this back

1924
01:47:24,698 --> 01:47:39,639
here we go 1 2 3 4 5 here is the winding

1925
01:47:32,529 --> 01:47:47,948
1 to 3 3 to 4 so they actually put the

1926
01:47:39,640 --> 01:47:51,030
triangle out in clockwise order thick is

1927
01:47:47,948 --> 01:47:51,029
that true

1928
01:48:00,840 --> 01:48:06,810
they kind of dumbfounded right now

1929
01:48:18,010 --> 01:48:30,820
I don't know what to make of that

1930
01:48:24,060 --> 01:48:36,700
anyway either way this is sort of

1931
01:48:30,819 --> 01:48:39,130
irrelevant here but I don't know that

1932
01:48:36,699 --> 01:48:40,840
that's actually a problem if I disabled

1933
01:48:39,130 --> 01:48:43,150
GL coalface I'm just curious what

1934
01:48:40,840 --> 01:48:43,900
happens because we shouldn't we didn't

1935
01:48:43,149 --> 01:48:45,609
see anything

1936
01:48:43,899 --> 01:48:47,049
so that suggests that it's not just our

1937
01:48:45,609 --> 01:48:49,420
winding order that's wrong right

1938
01:48:47,050 --> 01:48:51,670
something else is wrong here I just

1939
01:48:49,420 --> 01:48:57,190
don't know what it is so I don't think

1940
01:48:51,670 --> 01:49:06,130
that's actually the problem the winding

1941
01:48:57,189 --> 01:49:13,289
order is a separate issue so I'm not

1942
01:49:06,130 --> 01:49:14,800
sure why our draw elements call is

1943
01:49:13,289 --> 01:49:19,029
erroneous here

1944
01:49:14,800 --> 01:49:21,970
I did say unsigned short and I specified

1945
01:49:19,029 --> 01:49:22,479
on the sign shorts I did say I wanted

1946
01:49:21,970 --> 01:49:30,130
six

1947
01:49:22,479 --> 01:49:32,669
oh it's how many elements though not how

1948
01:49:30,130 --> 01:49:32,670
many vertices

1949
01:49:41,689 --> 01:49:45,739
where's our draw on this call

1950
01:49:59,789 --> 01:50:04,170
what's the count in this case

1951
01:50:06,729 --> 01:50:09,369
this couldn't get starts tickets of

1952
01:50:07,960 --> 01:50:11,529
Jennifers by successfully transferring

1953
01:50:09,369 --> 01:50:15,510
elements for count vertices right so now

1954
01:50:11,529 --> 01:50:15,509
I specified the right thing six vertices

1955
01:50:22,199 --> 01:50:32,429
so I'm not sure why we're getting I'm

1956
01:50:30,579 --> 01:50:34,630
not sure why we're getting hosed there

1957
01:50:32,430 --> 01:50:40,950
because these two paths should be the

1958
01:50:34,630 --> 01:50:40,949
same now so if we are specifying these

1959
01:50:49,560 --> 01:50:58,530
like so versus like so

1960
01:51:00,159 --> 01:51:07,000
I'm not sure why it doesn't like our

1961
01:51:02,020 --> 01:51:10,990
index version maybe I need to use a

1962
01:51:07,000 --> 01:51:15,220
different call but open Jill's always a

1963
01:51:10,989 --> 01:51:17,699
little weird like that but feel like it

1964
01:51:15,220 --> 01:51:17,699
should be fine

1965
01:51:20,039 --> 01:51:24,659
because these all are basically the same

1966
01:51:22,000 --> 01:51:24,659
thing right

1967
01:51:36,929 --> 01:51:44,359
hmm all right so what's what did I screw

1968
01:51:40,590 --> 01:51:44,360
up here I'm curious

1969
01:52:05,500 --> 01:52:20,949
I suppose I don't know where we set the

1970
01:52:10,329 --> 01:52:30,699
oh this is the problem sorry about that

1971
01:52:20,949 --> 01:52:32,319
I forgot the hole we aren't setting the

1972
01:52:30,699 --> 01:52:33,909
array pointers there we just transfer

1973
01:52:32,319 --> 01:52:37,019
down the buffer so these all need to be

1974
01:52:33,909 --> 01:52:39,609
offset by vertex index here in this case

1975
01:52:37,020 --> 01:52:44,650
so in that case I am gonna go ahead and

1976
01:52:39,609 --> 01:52:46,149
make this an int temporarily but we'll

1977
01:52:44,649 --> 01:52:51,519
be able to fix that a little bit later I

1978
01:52:46,149 --> 01:52:56,079
think okay sorry that took so long

1979
01:52:51,520 --> 01:52:58,540
all right so now as you can see we've

1980
01:52:56,079 --> 01:53:02,289
got our our winding was in fact

1981
01:52:58,539 --> 01:53:03,539
backwards I do not understand why

1982
01:53:02,289 --> 01:53:06,899
they're wound that way too

1983
01:53:03,539 --> 01:53:11,079
to begin with but that's okay

1984
01:53:06,899 --> 01:53:14,529
I'm fine with that we're gonna still

1985
01:53:11,079 --> 01:53:18,399
have we have front face clockwise yet

1986
01:53:14,529 --> 01:53:20,349
okay so don't ask me why that's the case

1987
01:53:18,399 --> 01:53:23,710
but it's fine that it is we can just

1988
01:53:20,350 --> 01:53:27,510
reverse our winding and no one cares so

1989
01:53:23,710 --> 01:53:30,970
if I do 0 1 2 and then 1 3 2 instead

1990
01:53:27,510 --> 01:53:32,560
that'll reverse the winding and we'll

1991
01:53:30,970 --> 01:53:37,000
draw our quads in the order that we

1992
01:53:32,560 --> 01:53:40,330
expect and that's fine so now we are

1993
01:53:37,000 --> 01:53:44,590
drawing with indices here and if we want

1994
01:53:40,329 --> 01:53:46,329
to we can now go ahead and say well and

1995
01:53:44,590 --> 01:53:48,220
and you know what I think we're trying

1996
01:53:46,329 --> 01:53:49,779
to do for a break here so what I

1997
01:53:48,220 --> 01:53:53,110
probably should do is it's go to a brief

1998
01:53:49,779 --> 01:53:54,369
Q&amp;A before moving on and on the next

1999
01:53:53,109 --> 01:53:58,719
thing what we'll do is we'll switch over

2000
01:53:54,369 --> 01:54:01,300
to using a giant index buffer for

2001
01:53:58,720 --> 01:54:03,510
everything and then we'll move to a

2002
01:54:01,300 --> 01:54:08,159
texture array as well

2003
01:54:03,510 --> 01:54:08,159
let's go ahead and go to the Q&amp;A here

2004
01:54:24,680 --> 01:54:29,030
Martin says primitive restart indexes in

2005
01:54:27,020 --> 01:54:37,880
GL course since version 3.1 so we

2006
01:54:29,029 --> 01:54:40,099
probably could do it I thought you had

2007
01:54:37,880 --> 01:54:42,619
to bind a GL element array buffer to do

2008
01:54:40,100 --> 01:54:46,640
indexing is this not true if no buffer

2009
01:54:42,619 --> 01:54:49,819
is bound yes so my recollection and

2010
01:54:46,640 --> 01:54:56,600
again GL is kind of a crazy mass at this

2011
01:54:49,819 --> 01:54:57,679
point of lots of legacy features but one

2012
01:54:56,600 --> 01:55:00,620
of the next things about those legacy

2013
01:54:57,680 --> 01:55:02,420
features a lot of them still work so

2014
01:55:00,619 --> 01:55:03,829
when you're just kind of starting out if

2015
01:55:02,420 --> 01:55:05,600
you don't want to bind an array buffer

2016
01:55:03,829 --> 01:55:08,539
depending on whether you asked for a

2017
01:55:05,600 --> 01:55:11,300
core compatibility context I assume but

2018
01:55:08,539 --> 01:55:14,090
maybe not I don't know you can just call

2019
01:55:11,300 --> 01:55:16,279
draw elements with a pointer and that

2020
01:55:14,090 --> 01:55:19,250
draws it sucks the indices out of your

2021
01:55:16,279 --> 01:55:23,029
memory at that point so you don't need

2022
01:55:19,250 --> 01:55:26,359
to bind one now you probably want to

2023
01:55:23,029 --> 01:55:30,829
bind one and we're going to want to bind

2024
01:55:26,359 --> 01:55:33,250
one I believe but I don't think you have

2025
01:55:30,829 --> 01:55:33,250
to

2026
01:55:38,460 --> 01:55:41,730
using indicee seems to take a lot more

2027
01:55:40,229 --> 01:55:47,009
memory if the vertex a that contains

2028
01:55:41,729 --> 01:55:48,449
texture coordinates normals etc how do

2029
01:55:47,010 --> 01:55:50,789
you know when it's a good idea to render

2030
01:55:48,449 --> 01:55:54,300
by indices sorry I'm not sure that

2031
01:55:50,789 --> 01:55:58,500
statement sounds backwards to me using

2032
01:55:54,300 --> 01:56:00,750
indices doesn't take more or less memory

2033
01:55:58,500 --> 01:56:03,199
regardless of those things that you're

2034
01:56:00,750 --> 01:56:03,199
talking about

2035
01:56:03,810 --> 01:56:12,120
can you rephrase that question perhaps

2036
01:56:06,960 --> 01:56:14,819
or be more specific because so using

2037
01:56:12,119 --> 01:56:16,979
indices just takes however many bytes

2038
01:56:14,819 --> 01:56:18,509
and index takes you know in our case

2039
01:56:16,979 --> 01:56:24,359
it'll probably have taking two bytes per

2040
01:56:18,510 --> 01:56:28,079
index and so for every triangle you're

2041
01:56:24,359 --> 01:56:31,349
gonna have six indices two or five if

2042
01:56:28,079 --> 01:56:36,390
we've used primitive it restart so

2043
01:56:31,350 --> 01:56:43,140
you're talking about a six times two or

2044
01:56:36,390 --> 01:56:45,150
12 bytes per quad right so if you think

2045
01:56:43,140 --> 01:56:49,320
about what would happen if we didn't use

2046
01:56:45,149 --> 01:56:52,739
indices well if we want to draw a big

2047
01:56:49,319 --> 01:56:55,469
batch it would actually be way worse

2048
01:56:52,739 --> 01:56:58,829
than that because for every triangle we

2049
01:56:55,470 --> 01:57:01,530
have to send down three vertex 3 sets of

2050
01:56:58,829 --> 01:57:06,590
vertex data so we'd have to send down 6

2051
01:57:01,529 --> 01:57:06,590
whole vertices which are massive right

2052
01:57:06,890 --> 01:57:12,690
so indices actually save you a lot of

2053
01:57:09,840 --> 01:57:13,170
memory it's the other way around if that

2054
01:57:12,689 --> 01:57:18,000
makes sense

2055
01:57:13,170 --> 01:57:19,199
I want to regarding involve us

2056
01:57:18,000 --> 01:57:19,529
appreciating question if that's all

2057
01:57:19,199 --> 01:57:21,269
right

2058
01:57:19,529 --> 01:57:24,000
why were the next steps of investigation

2059
01:57:21,270 --> 01:57:25,500
into the message box call not working to

2060
01:57:24,000 --> 01:57:27,300
try to do it with an indirect call then

2061
01:57:25,500 --> 01:57:29,729
next to do it on another thread what was

2062
01:57:27,300 --> 01:57:31,980
the line of thinking so the line of

2063
01:57:29,729 --> 01:57:33,929
thinking was just I wanted to know if it

2064
01:57:31,979 --> 01:57:35,399
was the thread in particular that was

2065
01:57:33,930 --> 01:57:36,960
causing the problem like the which

2066
01:57:35,399 --> 01:57:39,439
thread he was calling it on in the state

2067
01:57:36,960 --> 01:57:39,439
that it was in

2068
01:57:43,420 --> 01:57:52,069
so what I wanted to do was move it off

2069
01:57:48,408 --> 01:57:53,269
that thread and there's another thing I

2070
01:57:52,069 --> 01:57:54,799
want to do if it still doesn't work

2071
01:57:53,270 --> 01:57:58,250
which is having passed zero for the

2072
01:57:54,800 --> 01:58:00,980
window handle on a separate thread and

2073
01:57:58,250 --> 01:58:05,029
I'm just like reducing the number of

2074
01:58:00,979 --> 01:58:09,098
possible problems sequentially to figure

2075
01:58:05,029 --> 01:58:09,099
out which one is causing the problem

2076
01:58:09,939 --> 01:58:13,399
what is your opinion on texture race

2077
01:58:12,020 --> 01:58:15,500
versus texture Atlas is why do you

2078
01:58:13,399 --> 01:58:17,388
choose to texture race so texture

2079
01:58:15,500 --> 01:58:20,510
atlases and texture arrays have

2080
01:58:17,389 --> 01:58:22,940
different trade-offs the reason I chose

2081
01:58:20,510 --> 01:58:26,860
texture arrays is because they I don't

2082
01:58:22,939 --> 01:58:31,638
want to say mipmap properly cuz that's a

2083
01:58:26,859 --> 01:58:34,189
kind of a bold statement they map better

2084
01:58:31,639 --> 01:58:37,880
than texture Atlas is so texture atlases

2085
01:58:34,189 --> 01:58:40,789
have a particularly nasty problem well

2086
01:58:37,880 --> 01:58:43,310
couple nasty problems one is that you

2087
01:58:40,789 --> 01:58:45,380
can't tile your textures so if you want

2088
01:58:43,310 --> 01:58:48,170
a repeating texture you can't do it with

2089
01:58:45,380 --> 01:58:51,560
an atlas because there's no way to

2090
01:58:48,170 --> 01:58:53,569
specify off atlas coordinates that would

2091
01:58:51,560 --> 01:58:57,110
wrap around into the chunk you're

2092
01:58:53,569 --> 01:58:58,609
actually using so there's that

2093
01:58:57,109 --> 01:59:02,689
limitation and the other limitation is

2094
01:58:58,609 --> 01:59:06,229
the fetching outside the Atlas will

2095
01:59:02,689 --> 01:59:11,299
actually cause you like fetching to the

2096
01:59:06,229 --> 01:59:12,888
side of your fetching outside of the

2097
01:59:11,300 --> 01:59:14,960
region of the Atlas you want will

2098
01:59:12,889 --> 01:59:17,779
actually pick up other pixel data rather

2099
01:59:14,960 --> 01:59:21,980
than nothing so you can't use clamp to

2100
01:59:17,779 --> 01:59:23,840
edge and with it with a texture Atlas

2101
01:59:21,979 --> 01:59:26,868
what happens is as you mipmap the

2102
01:59:23,840 --> 01:59:27,829
texture atlas those textures that are

2103
01:59:26,868 --> 01:59:32,329
next to each other

2104
01:59:27,829 --> 01:59:34,158
blur together and create a error in mid

2105
01:59:32,329 --> 01:59:36,500
mapping so you end up having to leave

2106
01:59:34,158 --> 01:59:38,960
tons of space in your texture atlas and

2107
01:59:36,500 --> 01:59:41,210
you waste a ton of space that way so

2108
01:59:38,960 --> 01:59:43,939
it's six of one half dozen of the other

2109
01:59:41,210 --> 01:59:48,889
because the strength of texture atlas is

2110
01:59:43,939 --> 01:59:53,509
is that you can place things arbitrarily

2111
01:59:48,889 --> 01:59:54,469
close together right like you can you

2112
01:59:53,510 --> 01:59:55,520
don't have to make everything be a

2113
01:59:54,469 --> 01:59:57,199
square right

2114
01:59:55,520 --> 01:59:58,910
but the downside is well you sort of

2115
01:59:57,199 --> 02:00:00,380
also can't because when you mipmap it

2116
01:59:58,909 --> 02:00:02,149
you'll get incorrect results if you

2117
02:00:00,380 --> 02:00:08,119
don't leave lots of empty space there so

2118
02:00:02,149 --> 02:00:11,779
it's hard to kind of it's hard to kind

2119
02:00:08,119 --> 02:00:14,239
of think that through I guess but that's

2120
02:00:11,779 --> 02:00:15,739
that's the you have to make a trade-off

2121
02:00:14,239 --> 02:00:17,300
you have to figure out which one you

2122
02:00:15,739 --> 02:00:20,769
want to use there and I think texture

2123
02:00:17,300 --> 02:00:20,770
arrays are kind of better in that case

2124
02:00:21,100 --> 02:00:24,590
does the window size have anything to do

2125
02:00:23,300 --> 02:00:27,770
the tuning of the T value in the

2126
02:00:24,590 --> 02:00:29,119
renderer no it shouldn't the T value in

2127
02:00:27,770 --> 02:00:32,090
the render has nothing to do with the

2128
02:00:29,119 --> 02:00:34,250
window size the window size is just how

2129
02:00:32,090 --> 02:00:36,560
big the thing appears on the user screen

2130
02:00:34,250 --> 02:00:41,390
but that the T value is strictly about

2131
02:00:36,560 --> 02:00:44,380
the ratio of the height in camera space

2132
02:00:41,390 --> 02:00:48,520
which is irrelevant at which in which

2133
02:00:44,380 --> 02:00:48,520
the screen size is not relevant

2134
02:00:57,560 --> 02:01:01,620
texture areas require all textures to be

2135
02:01:00,000 --> 02:01:04,199
the same size and have the same number

2136
02:01:01,619 --> 02:01:05,750
of MIT Maps though yes but that's fine

2137
02:01:04,199 --> 02:01:08,970
for our purposes

2138
02:01:05,750 --> 02:01:14,189
isn't that a significant limitation it's

2139
02:01:08,970 --> 02:01:15,869
I mean it's a limitation but it allows

2140
02:01:14,189 --> 02:01:18,059
you to do a lot of things you can't do

2141
02:01:15,869 --> 02:01:20,130
right like you can wrap your textures

2142
02:01:18,060 --> 02:01:23,490
and tie all the textures and you can get

2143
02:01:20,130 --> 02:01:25,590
clamped to zero properly in all cases

2144
02:01:23,489 --> 02:01:26,729
yeah whereas like you say atlases

2145
02:01:25,590 --> 02:01:28,470
require a bunch of pixel shader

2146
02:01:26,729 --> 02:01:32,309
instructions if you want to do a bunch

2147
02:01:28,470 --> 02:01:36,869
of that stuff so you know you will be

2148
02:01:32,310 --> 02:01:38,610
slower right because now you've got all

2149
02:01:36,869 --> 02:01:44,340
these operations happening inside the

2150
02:01:38,609 --> 02:01:47,420
texture atlas and you pay for those

2151
02:01:44,340 --> 02:01:47,420
they're not free

2152
02:01:51,380 --> 02:01:55,219
what are we going to mipmap and Hanuman

2153
02:01:53,539 --> 02:01:56,899
here will everything now we will

2154
02:01:55,219 --> 02:01:59,289
probably generate MIT maps for

2155
02:01:56,899 --> 02:01:59,289
everything

2156
02:01:59,319 --> 02:02:12,829
how long has Fall Break gonna be I don't

2157
02:02:02,270 --> 02:02:14,810
know just a couple weeks oh good

2158
02:02:12,829 --> 02:02:26,350
somebody rewrote the dependency Walker

2159
02:02:14,810 --> 02:02:26,350
for Windows 10 yeah I'm down with that

2160
02:02:33,698 --> 02:02:37,059
let's see

2161
02:02:54,710 --> 02:03:04,719
so let's go ahead and get this thing see

2162
02:03:02,179 --> 02:03:04,719
how it does

2163
02:03:23,180 --> 02:03:31,270
a PE view is that a thing that views

2164
02:03:28,130 --> 02:03:31,270
executables or something

2165
02:03:42,649 --> 02:03:50,738
oh that's a command-line utility maybe

2166
02:04:03,219 --> 02:04:09,750
can't say that's looking particularly

2167
02:04:06,310 --> 02:04:09,750
good at the moment

2168
02:04:16,050 --> 02:04:19,220
well that works better

2169
02:04:34,800 --> 02:04:39,480
do you know if texture sampling is

2170
02:04:36,840 --> 02:04:41,250
implemented in hardware well yeah of

2171
02:04:39,479 --> 02:04:43,519
course it's implemented in hardware what

2172
02:04:41,250 --> 02:04:43,520
do you mean

2173
02:04:53,319 --> 02:04:59,170
jus-just or i/o do you mean like is the

2174
02:04:56,649 --> 02:05:02,379
texture coordinates computed in hardware

2175
02:04:59,170 --> 02:05:14,440
maybe that part I guess I don't know

2176
02:05:02,380 --> 02:05:16,239
currently that's a good questions test

2177
02:05:14,439 --> 02:05:20,500
your sampling is almost certainly

2178
02:05:16,239 --> 02:05:25,649
implemented in hardware because it has

2179
02:05:20,500 --> 02:05:40,090
to be very fast but I don't know about

2180
02:05:25,649 --> 02:05:42,839
the UV coordinate editing that's a good

2181
02:05:40,090 --> 02:05:42,840
question

2182
02:05:48,550 --> 02:05:53,860
well here's what I would say though the

2183
02:05:51,250 --> 02:05:55,600
even if you implemented it yourself you

2184
02:05:53,859 --> 02:05:57,399
could implement it faster with the

2185
02:05:55,600 --> 02:06:01,630
texture array than you could with an

2186
02:05:57,399 --> 02:06:04,839
Atlas though right because an atlas has

2187
02:06:01,630 --> 02:06:07,539
to do a lot of crazy checking it can't

2188
02:06:04,840 --> 02:06:09,279
rely on the power of two mipmap stuff or

2189
02:06:07,539 --> 02:06:18,640
any of those things so it's gonna do

2190
02:06:09,279 --> 02:06:21,009
like real divides and I don't think I

2191
02:06:18,640 --> 02:06:23,920
don't think it matters where it's

2192
02:06:21,010 --> 02:06:26,579
implemented in hardware or not in that

2193
02:06:23,920 --> 02:06:29,800
sense how this is are just going to be

2194
02:06:26,579 --> 02:06:32,529
slower period right I mean cuz it's just

2195
02:06:29,800 --> 02:06:34,659
a harder it's more math to do an atlas

2196
02:06:32,529 --> 02:06:37,380
than it is to do a texture right text

2197
02:06:34,659 --> 02:06:43,229
array is just simpler its power of two

2198
02:06:37,380 --> 02:06:46,569
dimensionally and so all the standard

2199
02:06:43,229 --> 02:06:48,519
tricks apply like you don't have to do

2200
02:06:46,569 --> 02:06:52,199
any complex stuff like you would with an

2201
02:06:48,520 --> 02:06:52,200
atlas right

2202
02:06:56,868 --> 02:07:01,948
I've read the sequel ass this is just

2203
02:07:00,149 --> 02:07:04,319
about paradigms what sets apart the

2204
02:07:01,948 --> 02:07:06,089
functions you have made to construct

2205
02:07:04,319 --> 02:07:08,130
struck certain ways like get standard

2206
02:07:06,090 --> 02:07:10,020
camera from the methodology around

2207
02:07:08,130 --> 02:07:13,639
constructors in C++ that I presume you

2208
02:07:10,020 --> 02:07:21,119
dislike or are they actually similar um

2209
02:07:13,639 --> 02:07:25,529
so I guess it depends what you mean let

2210
02:07:21,118 --> 02:07:26,789
me let me pull up an example or the

2211
02:07:25,529 --> 02:07:29,189
example that you're talking about just

2212
02:07:26,789 --> 02:07:32,250
so we're clear so I assume you're

2213
02:07:29,189 --> 02:07:38,969
talking about this get standard camera

2214
02:07:32,250 --> 02:07:41,429
here so I'll start with the most the

2215
02:07:38,969 --> 02:07:47,389
simplest and most basic thing that I

2216
02:07:41,429 --> 02:07:49,739
think is terrible about C++ right so

2217
02:07:47,389 --> 02:08:02,010
let's look at how this would happen in

2218
02:07:49,738 --> 02:08:05,388
C++ with a constructor so this is a

2219
02:08:02,010 --> 02:08:05,389
constructor and it would look like this

2220
02:08:13,800 --> 02:08:24,070
right so this is what it would look like

2221
02:08:18,189 --> 02:08:29,649
if you were in C++ uh so first things

2222
02:08:24,069 --> 02:08:31,719
first I don't know if the user wants to

2223
02:08:29,649 --> 02:08:38,519
waste their time initializing this

2224
02:08:31,720 --> 02:08:41,860
object or not right I have no idea

2225
02:08:38,520 --> 02:08:46,740
there's a number of ways they might want

2226
02:08:41,859 --> 02:08:50,769
to initialize it so in the usage code

2227
02:08:46,739 --> 02:08:53,099
they might want to say some number of

2228
02:08:50,770 --> 02:08:53,100
things

2229
02:09:24,489 --> 02:09:29,289
these are all things I might want to say

2230
02:09:26,939 --> 02:09:31,000
right I might want to say give me

2231
02:09:29,289 --> 02:09:36,930
whatever the default is

2232
02:09:31,000 --> 02:09:36,930
give me zero give me uninitialized right

2233
02:09:40,140 --> 02:09:58,230
here's the C version and I could even

2234
02:09:46,930 --> 02:10:02,560
say default camera right so here's the C

2235
02:09:58,229 --> 02:10:05,049
version of this thing here's the

2236
02:10:02,560 --> 02:10:07,500
imaginary one that I wanted to write and

2237
02:10:05,050 --> 02:10:12,579
you can see they're actually fairly

2238
02:10:07,500 --> 02:10:15,489
close right where does it fall down well

2239
02:10:12,579 --> 02:10:18,189
mostly in this line and the reason that

2240
02:10:15,489 --> 02:10:23,920
it falls down is because C isn't smart

2241
02:10:18,189 --> 02:10:28,359
enough to overload on this right so I

2242
02:10:23,920 --> 02:10:31,029
can't I can't do that exactly because

2243
02:10:28,359 --> 02:10:34,389
it's not something I'm allowed to do in

2244
02:10:31,029 --> 02:10:36,399
that way so you know you're stuck with

2245
02:10:34,390 --> 02:10:43,900
that which is which is slightly less

2246
02:10:36,399 --> 02:10:45,639
good but it's almost the same so now if

2247
02:10:43,899 --> 02:10:49,929
we wanted to do this with constructors

2248
02:10:45,640 --> 02:10:52,510
how would we do it well now I end up in

2249
02:10:49,930 --> 02:10:57,610
a situation where I pretty much have to

2250
02:10:52,510 --> 02:11:01,210
make a totally separate set of typing

2251
02:10:57,609 --> 02:11:03,639
just to make that happen right I can't

2252
02:11:01,210 --> 02:11:05,680
do anything even close to this once I

2253
02:11:03,640 --> 02:11:08,350
have constructors because instructors

2254
02:11:05,680 --> 02:11:10,270
constructors are all implicitly named

2255
02:11:08,350 --> 02:11:11,620
the same thing as the class and use

2256
02:11:10,270 --> 02:11:12,310
there's no way to differentiate between

2257
02:11:11,619 --> 02:11:16,479
them

2258
02:11:12,310 --> 02:11:19,960
right like I have the this is now the

2259
02:11:16,479 --> 02:11:24,489
only thing I can do period I can't even

2260
02:11:19,960 --> 02:11:27,039
get the other ones at all right so what

2261
02:11:24,489 --> 02:11:29,710
I would need to do now is say well okay

2262
02:11:27,039 --> 02:11:35,050
I mean I suppose technically speaking I

2263
02:11:29,710 --> 02:11:37,868
can do this one still probably I don't

2264
02:11:35,050 --> 02:11:40,479
really remember Cassie plus plus

2265
02:11:37,868 --> 02:11:41,828
evolved a bit since a lot actually since

2266
02:11:40,479 --> 02:11:44,168
the last time I ever programmed in it

2267
02:11:41,828 --> 02:11:45,639
seriously I don't remember it wouldn't

2268
02:11:44,168 --> 02:11:48,099
have let you do this then but it

2269
02:11:45,639 --> 02:11:52,118
probably lets you do this now because we

2270
02:11:48,099 --> 02:11:53,769
haven't like unless we blocked which a

2271
02:11:52,118 --> 02:11:57,188
lot of people do but if we brought

2272
02:11:53,769 --> 02:12:00,610
blocked an operator equals down here or

2273
02:11:57,189 --> 02:12:05,489
something I think it would let us do

2274
02:12:00,609 --> 02:12:08,828
this because I think this is just an

2275
02:12:05,488 --> 02:12:14,558
assignment constructor at that point so

2276
02:12:08,828 --> 02:12:16,808
either that's gonna call this path which

2277
02:12:14,559 --> 02:12:19,360
we have not disallowed and so which will

2278
02:12:16,809 --> 02:12:21,070
be created correctly for us or it's

2279
02:12:19,359 --> 02:12:22,719
gonna call the operator equals I think

2280
02:12:21,069 --> 02:12:26,618
it's gonna call that one the copy

2281
02:12:22,719 --> 02:12:28,269
constructor by normal C++ rules so we

2282
02:12:26,618 --> 02:12:32,109
haven't disallowed that so that one will

2283
02:12:28,269 --> 02:12:34,869
work this one there is no zero zeros not

2284
02:12:32,109 --> 02:12:37,389
on the table so the question I'm sorry

2285
02:12:34,868 --> 02:12:40,268
there is no uninitialized so I can't

2286
02:12:37,389 --> 02:12:41,800
just not initialize it yet so the

2287
02:12:40,269 --> 02:12:42,729
question becomes well how would I do

2288
02:12:41,800 --> 02:12:45,219
that

2289
02:12:42,729 --> 02:12:47,619
right like how would I make an

2290
02:12:45,219 --> 02:12:49,748
uninitialized version and the answer is

2291
02:12:47,618 --> 02:12:52,688
now I have to make some monkey business

2292
02:12:49,748 --> 02:12:56,038
here that I I don't know I mean like

2293
02:12:52,689 --> 02:12:56,039
this I guess

2294
02:12:57,149 --> 02:13:06,309
so it's like okay

2295
02:12:59,760 --> 02:13:09,610
you know that's the uninitialized one I

2296
02:13:06,309 --> 02:13:13,510
guess the other thing I could do is use

2297
02:13:09,609 --> 02:13:17,859
a policemen operator to well that

2298
02:13:13,510 --> 02:13:23,409
doesn't really work in this case so like

2299
02:13:17,859 --> 02:13:29,228
I don't know I don't even know if this

2300
02:13:23,408 --> 02:13:30,728
actually works but this one I don't know

2301
02:13:29,229 --> 02:13:32,619
how to get this one to work at all I

2302
02:13:30,729 --> 02:13:35,649
don't know how to say I just I'm gonna

2303
02:13:32,618 --> 02:13:39,668
initialize this later right but let's

2304
02:13:35,649 --> 02:13:42,999
say that this did work right even if

2305
02:13:39,668 --> 02:13:44,769
this or not that it worked let's say

2306
02:13:42,998 --> 02:13:47,050
that this was acceptable to you this is

2307
02:13:44,769 --> 02:13:49,840
not acceptable to me as a syntax but

2308
02:13:47,050 --> 02:13:51,230
let's say that it was or that you went

2309
02:13:49,840 --> 02:13:54,860
out of your way to now do

2310
02:13:51,229 --> 02:13:57,259
like okay you know uninitialized or okay

2311
02:13:54,859 --> 02:14:06,469
let's say I do something less terrible

2312
02:13:57,260 --> 02:14:09,650
and I don't know right now the question

2313
02:14:06,470 --> 02:14:13,210
is well now I can't even make that

2314
02:14:09,649 --> 02:14:17,210
happen directly to this thing either

2315
02:14:13,210 --> 02:14:21,020
right I now have to do like well okay

2316
02:14:17,210 --> 02:14:24,279
let's create a new one of these and copy

2317
02:14:21,020 --> 02:14:26,989
construct it over or something right

2318
02:14:24,279 --> 02:14:29,000
which is what I'm doing here but it also

2319
02:14:26,988 --> 02:14:31,309
makes it hard for me to do the other way

2320
02:14:29,000 --> 02:14:32,988
round where if I didn't want to spent if

2321
02:14:31,310 --> 02:14:38,239
I didn't want to rely on that I could

2322
02:14:32,988 --> 02:14:41,119
have done this right um and that's nice

2323
02:14:38,238 --> 02:14:44,000
to have that flexibility here I would

2324
02:14:41,119 --> 02:14:48,559
now have to use a really ugly placement

2325
02:14:44,000 --> 02:14:51,738
new syntax which is like I don't even

2326
02:14:48,560 --> 02:14:53,650
remember what it is you know I'm talking

2327
02:14:51,738 --> 02:14:59,019
about there right it's it's horrible

2328
02:14:53,649 --> 02:14:59,019
place intact

2329
02:15:01,010 --> 02:15:09,689
it's this garbage here so

2330
02:15:06,529 --> 02:15:09,688
[Music]

2331
02:15:23,930 --> 02:15:26,860
here it is

2332
02:15:29,850 --> 02:15:37,000
so now you have to do this absolute

2333
02:15:33,399 --> 02:15:39,519
garbage right we're in order to get the

2334
02:15:37,000 --> 02:15:43,569
constructor called I have to do this so

2335
02:15:39,520 --> 02:15:47,320
I have to do new address of camera right

2336
02:15:43,569 --> 02:15:52,029
to get that to happen and then this is

2337
02:15:47,319 --> 02:15:58,869
the type here right so it's camera and

2338
02:15:52,029 --> 02:16:05,590
then that's my camera I mean I guess I

2339
02:15:58,869 --> 02:16:08,260
can just not do that right which is nuts

2340
02:16:05,590 --> 02:16:10,230
I mean I don't even know like so you can

2341
02:16:08,260 --> 02:16:13,270
see why this I just

2342
02:16:10,229 --> 02:16:15,519
there's no it's not like you can't do

2343
02:16:13,270 --> 02:16:17,230
the things it's just they did a terrible

2344
02:16:15,520 --> 02:16:25,350
job with that right I mean it's just

2345
02:16:17,229 --> 02:16:28,359
it's really dumb I mean if you even

2346
02:16:25,350 --> 02:16:30,370
thought about it for half a second what

2347
02:16:28,359 --> 02:16:32,350
you'd realize is there's just multiple

2348
02:16:30,369 --> 02:16:36,129
phases to the things that you do

2349
02:16:32,350 --> 02:16:37,960
destructs you declare their layout you

2350
02:16:36,129 --> 02:16:40,959
provide ways in which they can be

2351
02:16:37,959 --> 02:16:43,468
initialized you state when and where you

2352
02:16:40,959 --> 02:16:45,759
want them to be initialized right and

2353
02:16:43,468 --> 02:16:47,709
those things should just be exposed to

2354
02:16:45,760 --> 02:16:50,800
the to the programmer none of those

2355
02:16:47,709 --> 02:16:53,319
things were done here right you know if

2356
02:16:50,799 --> 02:16:58,949
that the half decent way to do this

2357
02:16:53,319 --> 02:16:58,949
would have been like you know like this

2358
02:17:12,359 --> 02:17:16,989
right and then you would have just done

2359
02:17:14,950 --> 02:17:19,389
like oh alright you know here's the

2360
02:17:16,989 --> 02:17:21,099
things that you can do for that or if

2361
02:17:19,388 --> 02:17:27,009
you didn't like that you could just do

2362
02:17:21,099 --> 02:17:28,719
it like this and like every would

2363
02:17:27,010 --> 02:17:31,450
wouldn't immediately know what that was

2364
02:17:28,718 --> 02:17:33,638
and you could have all of the options

2365
02:17:31,450 --> 02:17:35,679
that you wanted and furthermore if you

2366
02:17:33,638 --> 02:17:38,768
wanted to change it later you could just

2367
02:17:35,679 --> 02:17:39,849
call it right you just be like hey this

2368
02:17:38,769 --> 02:17:42,489
camera here

2369
02:17:39,849 --> 02:17:44,739
I want to reinitialize this camera so

2370
02:17:42,489 --> 02:17:46,478
it's like what's the what's the actual

2371
02:17:44,739 --> 02:17:49,148
camera that you're gonna do oh I'm gonna

2372
02:17:46,478 --> 02:17:51,358
do you know that and so I don't know

2373
02:17:49,148 --> 02:17:53,170
what you want the syntax to be here to

2374
02:17:51,359 --> 02:17:56,079
differentiate this from something that

2375
02:17:53,170 --> 02:17:58,210
returns the thing so maybe you could

2376
02:17:56,079 --> 02:18:02,968
just use your scope operator or the dot

2377
02:17:58,209 --> 02:18:06,669
if you wanted right or something here

2378
02:18:02,968 --> 02:18:08,319
you know or you could do that if you

2379
02:18:06,670 --> 02:18:11,950
wanted I don't care what you want the

2380
02:18:08,319 --> 02:18:13,989
syntax to be whatever you know whatever

2381
02:18:11,950 --> 02:18:15,700
you want in that case some way of

2382
02:18:13,989 --> 02:18:19,058
defining another one would be that I

2383
02:18:15,700 --> 02:18:20,679
suppose but just something halfway

2384
02:18:19,058 --> 02:18:22,929
decent would allow you to do this

2385
02:18:20,679 --> 02:18:26,398
another way to do it would just be to

2386
02:18:22,929 --> 02:18:30,040
say look it's actually we don't care

2387
02:18:26,398 --> 02:18:32,049
these could like define them that way

2388
02:18:30,040 --> 02:18:33,729
and let them actually be those functions

2389
02:18:32,049 --> 02:18:35,590
and just say that the definition of a

2390
02:18:33,728 --> 02:18:38,500
constructor is something inside the

2391
02:18:35,590 --> 02:18:42,340
class that returns that thing right and

2392
02:18:38,500 --> 02:18:44,590
then this just it does that it's like oh

2393
02:18:42,340 --> 02:18:53,679
I wanted one of those then you can also

2394
02:18:44,590 --> 02:18:57,250
do this if you wanted right all of these

2395
02:18:53,679 --> 02:18:59,888
things would be better the one lady is

2396
02:18:57,250 --> 02:19:02,200
so boneheaded it just I don't even know

2397
02:18:59,888 --> 02:19:04,898
it's like it's like the worst possible

2398
02:19:02,200 --> 02:19:07,269
thing so I just don't use it cuz it's

2399
02:19:04,898 --> 02:19:11,250
just stupid the syntax is bad it forces

2400
02:19:07,269 --> 02:19:11,250
you to do weird things to like try and

2401
02:19:11,609 --> 02:19:16,329
to do even the basic stuff like it's

2402
02:19:14,769 --> 02:19:18,790
just obvious

2403
02:19:16,329 --> 02:19:21,579
so there's an API principle that I

2404
02:19:18,790 --> 02:19:24,639
introduced called granularity right the

2405
02:19:21,579 --> 02:19:27,760
idea is that if you have a series of

2406
02:19:24,638 --> 02:19:30,549
operations you never make a feature of

2407
02:19:27,760 --> 02:19:32,590
your language or your API be that those

2408
02:19:30,549 --> 02:19:36,849
things are removed and you have to call

2409
02:19:32,590 --> 02:19:39,700
them at a coarser level so if allocation

2410
02:19:36,849 --> 02:19:42,790
and initialization are two things that

2411
02:19:39,700 --> 02:19:45,010
happen to objects you never say that

2412
02:19:42,790 --> 02:19:46,719
those two things happen together what

2413
02:19:45,010 --> 02:19:48,550
you do is you provide a way to do one

2414
02:19:46,718 --> 02:19:50,469
and you divide the way do the other and

2415
02:19:48,549 --> 02:19:53,438
those are both good you make them good

2416
02:19:50,469 --> 02:19:55,148
first then you provide a nice way of

2417
02:19:53,439 --> 02:19:58,148
doing them both at the same time for

2418
02:19:55,148 --> 02:20:00,869
when that is appropriate right and you

2419
02:19:58,148 --> 02:20:04,659
make all of those things good you never

2420
02:20:00,870 --> 02:20:06,609
start at the high level and say oh crap

2421
02:20:04,659 --> 02:20:08,609
sometimes now people don't want to do

2422
02:20:06,609 --> 02:20:11,229
them together we don't really like that

2423
02:20:08,609 --> 02:20:13,300
so we'll make this weird placement new

2424
02:20:11,228 --> 02:20:15,010
thing to sort of get around the facts

2425
02:20:13,299 --> 02:20:17,129
but it's kind of janky and weird or

2426
02:20:15,010 --> 02:20:21,040
whatever right and blah blah blah

2427
02:20:17,129 --> 02:20:22,509
you always build up from the steps that

2428
02:20:21,040 --> 02:20:24,850
you would do if you were doing it all

2429
02:20:22,510 --> 02:20:28,000
manually you always make those perfect

2430
02:20:24,850 --> 02:20:29,829
and then you condense condense condense

2431
02:20:28,000 --> 02:20:32,170
up higher and higher and higher until

2432
02:20:29,829 --> 02:20:35,079
you get to the you know the highest

2433
02:20:32,170 --> 02:20:37,359
level version of your API but they don't

2434
02:20:35,079 --> 02:20:39,969
do that in C++ C++ always goes the other

2435
02:20:37,359 --> 02:20:41,470
way around somebody has some idea about

2436
02:20:39,969 --> 02:20:43,059
how you should program you should

2437
02:20:41,469 --> 02:20:45,068
program with constructors and

2438
02:20:43,059 --> 02:20:48,369
destructors later on someone's like hey

2439
02:20:45,068 --> 02:20:50,199
man I don't want to initialize and

2440
02:20:48,370 --> 02:20:51,399
allocate this thing at the same time I

2441
02:20:50,200 --> 02:20:52,300
want to do those separately and they're

2442
02:20:51,398 --> 02:20:54,728
like oh okay

2443
02:20:52,299 --> 02:20:57,489
here's this jakie new syntax we did to

2444
02:20:54,728 --> 02:20:59,590
fix that problem and you're like oh well

2445
02:20:57,489 --> 02:21:06,189
but I want multiple ways of initializing

2446
02:20:59,590 --> 02:21:08,950
it and they're like oh huh well here's

2447
02:21:06,189 --> 02:21:11,439
this really janky way to fix that right

2448
02:21:08,950 --> 02:21:13,270
and they end up with this thing that is

2449
02:21:11,439 --> 02:21:15,520
like all these different patches on top

2450
02:21:13,270 --> 02:21:17,319
of patches to try and restore what the

2451
02:21:15,520 --> 02:21:19,569
basic functions that you already had

2452
02:21:17,318 --> 02:21:22,209
were that you lost when going to their

2453
02:21:19,568 --> 02:21:24,600
new higher-level feature right that's

2454
02:21:22,209 --> 02:21:24,599
just dumb

2455
02:21:43,250 --> 02:21:46,700
Martin said I was second Dutton excuse

2456
02:21:45,261 --> 02:21:48,021
independence Agra which it won't show

2457
02:21:46,700 --> 02:21:49,341
anything okay so it can't browse that

2458
02:21:48,021 --> 02:21:50,870
Matt that that's fine I mean I don't

2459
02:21:49,341 --> 02:21:53,899
care I don't need to browse dotnet

2460
02:21:50,870 --> 02:21:56,540
dependencies back to the message box pre

2461
02:21:53,899 --> 02:22:00,369
few man sir removing the filtering of

2462
02:21:56,540 --> 02:22:04,131
message oh X 738 made the window appear

2463
02:22:00,370 --> 02:22:05,480
huh all right so I guess ox7 38 actually

2464
02:22:04,130 --> 02:22:14,119
does need to be there even though it was

2465
02:22:05,479 --> 02:22:16,100
pretty bad and slowed us down are you

2466
02:22:14,120 --> 02:22:17,271
testing the renderer with the PNG asset

2467
02:22:16,101 --> 02:22:18,950
do you think the render would have

2468
02:22:17,271 --> 02:22:20,750
better performance with bitmap because

2469
02:22:18,950 --> 02:22:21,710
the decoding of that is easier than the

2470
02:22:20,750 --> 02:22:25,970
PNG one

2471
02:22:21,709 --> 02:22:29,359
oh no no so just to be clear the

2472
02:22:25,970 --> 02:22:31,341
performance of the render has nothing to

2473
02:22:29,360 --> 02:22:34,040
do with P&amp;G verse bitmap those are

2474
02:22:31,341 --> 02:22:35,960
loaded once and then used in memory

2475
02:22:34,040 --> 02:22:37,551
decompressed so there's no difference

2476
02:22:35,959 --> 02:22:43,069
between the asset whether it's loaded

2477
02:22:37,550 --> 02:22:44,600
from PNG or bitmap l : if it says I'm

2478
02:22:43,069 --> 02:22:47,979
not sure if it doesn't camera equals

2479
02:22:44,601 --> 02:22:50,239
brackets and C++ call the constructor I

2480
02:22:47,979 --> 02:22:57,470
don't know probably they did that

2481
02:22:50,239 --> 02:23:00,011
because it's bad right but but I don't

2482
02:22:57,470 --> 02:23:00,011
know what they did

2483
02:23:18,180 --> 02:23:22,180
cheaper cope says also placement new

2484
02:23:20,318 --> 02:23:23,439
returns a new object in terms of C

2485
02:23:22,180 --> 02:23:24,789
syphilis objects lifetimes so you

2486
02:23:23,439 --> 02:23:26,529
technically need to access it through

2487
02:23:24,789 --> 02:23:27,939
the pointer return so it's discussing

2488
02:23:26,529 --> 02:23:31,420
yeah I mean you probably don't actually

2489
02:23:27,939 --> 02:23:37,630
have to impractical what'd have to be

2490
02:23:31,420 --> 02:23:39,129
right dark he popped II do you think you

2491
02:23:37,629 --> 02:23:41,198
could submit a constructor like that cos

2492
02:23:39,129 --> 02:23:44,648
committee I don't know and I don't care

2493
02:23:41,199 --> 02:23:47,828
I mean getting off of C++ is a major

2494
02:23:44,648 --> 02:23:49,750
priority for me and so you know I I will

2495
02:23:47,828 --> 02:23:52,059
not be programming c++ five years from

2496
02:23:49,750 --> 02:23:54,279
now either I'll be on my own thing like

2497
02:23:52,059 --> 02:23:55,809
our internal stuff at Molly rocket will

2498
02:23:54,279 --> 02:23:58,899
grow to the point where we're only using

2499
02:23:55,809 --> 02:24:03,250
that or I'll be on ji but there is no

2500
02:23:58,898 --> 02:24:05,648
way I'm using C++ you know five years

2501
02:24:03,250 --> 02:24:06,818
from now I simply won't let it happen so

2502
02:24:05,648 --> 02:24:09,068
I don't care what the Super's loss

2503
02:24:06,818 --> 02:24:11,109
committee does they're hard to work with

2504
02:24:09,068 --> 02:24:13,538
they've been making bad decisions for

2505
02:24:11,109 --> 02:24:16,149
thirty years I don't there's an it's a

2506
02:24:13,539 --> 02:24:20,649
it's like rearranging the the chairs and

2507
02:24:16,148 --> 02:24:22,478
the Titanic right like they say I mean

2508
02:24:20,648 --> 02:24:23,648
it's working with the seagull stuff

2509
02:24:22,478 --> 02:24:26,828
committee would probably be more like

2510
02:24:23,648 --> 02:24:29,108
rearranging like the ice in the martini

2511
02:24:26,828 --> 02:24:33,699
or at my opponent padeen rearranging the

2512
02:24:29,109 --> 02:24:36,399
ice and the lemonade on that of someone

2513
02:24:33,699 --> 02:24:38,649
who's holding a glass of lemonade on a

2514
02:24:36,398 --> 02:24:40,118
deck chair on the Titanic like you're

2515
02:24:38,648 --> 02:24:41,559
not even going to move the chairs you're

2516
02:24:40,119 --> 02:24:49,199
gonna be able to get like an ice cube

2517
02:24:41,559 --> 02:24:49,198
moved around right so yeah

2518
02:24:58,729 --> 02:25:04,340
also I'd like to say some meta thing

2519
02:25:01,431 --> 02:25:08,420
about that so so one of the things also

2520
02:25:04,340 --> 02:25:10,579
that this is a meta thing that I find

2521
02:25:08,420 --> 02:25:16,129
kind of annoying so a lot of times

2522
02:25:10,579 --> 02:25:21,590
people all this this submit something

2523
02:25:16,129 --> 02:25:28,750
the C++ committee thing I use a similar

2524
02:25:21,590 --> 02:25:33,229
statement to one that I find equally

2525
02:25:28,750 --> 02:25:36,159
sort of misguided which is a lot of

2526
02:25:33,229 --> 02:25:38,449
times if you're using something like

2527
02:25:36,159 --> 02:25:41,750
commercial product like Visual Studio

2528
02:25:38,450 --> 02:25:44,570
and I'm like this thing sucks because of

2529
02:25:41,750 --> 02:25:48,319
X they're like well you know you should

2530
02:25:44,569 --> 02:25:51,409
have reported that or something and I

2531
02:25:48,319 --> 02:25:54,590
think that's kind of just fundamentally

2532
02:25:51,409 --> 02:25:57,579
annoying to me at a basic level and the

2533
02:25:54,590 --> 02:26:06,649
reason for that is because I don't want

2534
02:25:57,579 --> 02:26:09,590
to pay you to be m2 and then be your QA

2535
02:26:06,649 --> 02:26:14,810
department like I don't want to pay you

2536
02:26:09,590 --> 02:26:18,739
and be your designer the point of paying

2537
02:26:14,810 --> 02:26:21,590
for something is that you did the work

2538
02:26:18,739 --> 02:26:24,140
and you deliver me something good if I

2539
02:26:21,590 --> 02:26:27,710
have to design it for you or I have to

2540
02:26:24,140 --> 02:26:29,600
find the bugs for you then that's me

2541
02:26:27,709 --> 02:26:32,390
doing the work that you should have done

2542
02:26:29,601 --> 02:26:34,489
and nowadays what companies do is they

2543
02:26:32,390 --> 02:26:38,000
offload all of the work on to their

2544
02:26:34,489 --> 02:26:39,890
customers I have to report the bugs and

2545
02:26:38,000 --> 02:26:41,870
I have to do the profiling and point out

2546
02:26:39,890 --> 02:26:44,149
why it's slow and I have to argue with

2547
02:26:41,870 --> 02:26:46,101
you about why SQL shouldn't be installed

2548
02:26:44,149 --> 02:26:49,310
when the thing gets installed or

2549
02:26:46,101 --> 02:26:51,800
whatever right and that's fundamentally

2550
02:26:49,310 --> 02:26:55,069
annoying like I have a full-time job I

2551
02:26:51,799 --> 02:26:58,039
have two jobs really right arguably

2552
02:26:55,069 --> 02:27:00,709
possibly three I don't have time to fix

2553
02:26:58,040 --> 02:27:03,860
C++ I don't have time to fix Visual

2554
02:27:00,709 --> 02:27:09,169
Studio I need some competent people to

2555
02:27:03,860 --> 02:27:12,181
do something for once right so like C++

2556
02:27:09,170 --> 02:27:14,729
is an open standard so I don't sue

2557
02:27:12,181 --> 02:27:17,069
or blame them for being bad because

2558
02:27:14,729 --> 02:27:19,109
they're not really getting paid in a

2559
02:27:17,069 --> 02:27:20,761
sense but in another sense they are

2560
02:27:19,110 --> 02:27:22,141
because most of the people who do this

2561
02:27:20,761 --> 02:27:23,970
stuff are actually working at big

2562
02:27:22,140 --> 02:27:27,359
companies who do make money on this

2563
02:27:23,970 --> 02:27:28,529
stuff right so who knows but it's hard

2564
02:27:27,360 --> 02:27:31,081
to blame see what's plus too much

2565
02:27:28,530 --> 02:27:32,851
because you know it was what it was it's

2566
02:27:31,081 --> 02:27:35,251
not like Java where it was a company's

2567
02:27:32,851 --> 02:27:37,141
project or something but something like

2568
02:27:35,251 --> 02:27:40,081
Visual Studio is a commercial product

2569
02:27:37,140 --> 02:27:42,529
and I pay for it right I actually used

2570
02:27:40,081 --> 02:27:46,110
the professional vision version of that

2571
02:27:42,530 --> 02:27:48,150
you know what Molly I don't want to be

2572
02:27:46,110 --> 02:27:50,641
responsible for figuring out how to make

2573
02:27:48,149 --> 02:27:56,190
your product not be bad like that was

2574
02:27:50,640 --> 02:27:58,529
kind of supposed to be what I was paying

2575
02:27:56,190 --> 02:28:00,899
for and so this kind of notion that

2576
02:27:58,530 --> 02:28:04,739
nowadays it's all the community's

2577
02:28:00,899 --> 02:28:06,331
problem and it's never the company who

2578
02:28:04,739 --> 02:28:08,310
was supposed to just deliver something

2579
02:28:06,331 --> 02:28:12,091
good to begin with he's really annoying

2580
02:28:08,310 --> 02:28:14,489
and I feel like when you ship something

2581
02:28:12,091 --> 02:28:16,560
you should reverse that mentality the

2582
02:28:14,489 --> 02:28:18,449
mentality should be we are gonna figure

2583
02:28:16,560 --> 02:28:20,640
out how to actually deliver a high

2584
02:28:18,450 --> 02:28:24,931
quality thing and it's not up to our

2585
02:28:20,640 --> 02:28:26,600
customers to do that work for us and I

2586
02:28:24,931 --> 02:28:29,101
feel like that kind of used to be

2587
02:28:26,601 --> 02:28:31,471
because you couldn't patch very often

2588
02:28:29,101 --> 02:28:33,921
you shipped physical floppies you were

2589
02:28:31,470 --> 02:28:37,620
kind of forced to do a better job

2590
02:28:33,921 --> 02:28:43,171
nowadays forget it you know it's just

2591
02:28:37,620 --> 02:28:46,109
sad anyway it's time for lunch so or

2592
02:28:43,171 --> 02:28:52,140
break anyway so I'm gonna go ahead and

2593
02:28:46,110 --> 02:28:57,871
do that we'll be back here let's say 15

2594
02:28:52,140 --> 02:29:01,350
minutes or so maybe 20 and we'll do the

2595
02:28:57,870 --> 02:29:03,029
the sort of the foray into seeing seeing

2596
02:29:01,351 --> 02:29:05,661
how to speed up our rendering and

2597
02:29:03,030 --> 02:29:05,661
texture changes

