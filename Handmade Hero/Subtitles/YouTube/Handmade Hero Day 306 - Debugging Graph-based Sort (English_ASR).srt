1
00:00:00,000 --> 00:00:05,940
burning hello everyone and welcome to

2
00:00:04,410 --> 00:00:11,609
handmade here the show Rico complete

3
00:00:05,940 --> 00:00:14,638
game live on stream we actually we may

4
00:00:11,609 --> 00:00:17,129
we don't even know but yesterday we may

5
00:00:14,638 --> 00:00:20,339
have finished our sprite sorting first

6
00:00:17,129 --> 00:00:22,618
pass we don't know because we haven't

7
00:00:20,339 --> 00:00:24,329
actually gone and passed the requisite

8
00:00:22,618 --> 00:00:30,240
information down to it yet from the

9
00:00:24,329 --> 00:00:35,070
render layer we basically wrote the code

10
00:00:30,239 --> 00:00:38,070
that is necessary for doing all of the

11
00:00:35,070 --> 00:00:40,259
sorting for our sprites in the game but

12
00:00:38,070 --> 00:00:42,929
in order to do that we decided we needed

13
00:00:40,259 --> 00:00:45,780
the rectangular screen space area

14
00:00:42,929 --> 00:00:47,128
occupied by the sprite and that was not

15
00:00:45,780 --> 00:00:48,899
something we were traditionally passing

16
00:00:47,128 --> 00:00:50,909
to the renders the renderer although it

17
00:00:48,899 --> 00:00:52,948
knows that information I shouldn't say

18
00:00:50,909 --> 00:00:54,689
not passing the renderer that's not we

19
00:00:52,948 --> 00:00:57,000
work tricity passing down to the like

20
00:00:54,689 --> 00:00:59,670
render output layer the rasterizer I

21
00:00:57,000 --> 00:01:01,920
should say and so that needs to happen

22
00:00:59,670 --> 00:01:03,809
and it's not particularly difficult to

23
00:01:01,920 --> 00:01:05,760
do but we actually need to do it so

24
00:01:03,808 --> 00:01:08,039
before we can even test our sorting code

25
00:01:05,760 --> 00:01:11,460
and I mean presumably will have to debug

26
00:01:08,040 --> 00:01:12,719
it as well and all that good stuff we're

27
00:01:11,459 --> 00:01:15,809
going to need to start passing that

28
00:01:12,719 --> 00:01:17,789
information down and making sure we

29
00:01:15,810 --> 00:01:20,909
actually know what all the screen space

30
00:01:17,790 --> 00:01:24,990
rectangles are for our actual sprites so

31
00:01:20,909 --> 00:01:27,479
let's go ahead and do that now can't

32
00:01:24,989 --> 00:01:28,859
think of a reason not to today is day 3

33
00:01:27,478 --> 00:01:32,759
06 so if you're going to try and follow

34
00:01:28,859 --> 00:01:35,640
along at home unpacked a 305 source code

35
00:01:32,759 --> 00:01:37,769
that's where I'm starting right now and

36
00:01:35,640 --> 00:01:41,489
that is where you should be starting if

37
00:01:37,769 --> 00:01:46,649
you want to follow along alright so here

38
00:01:41,489 --> 00:01:48,719
we go if you remember where we left off

39
00:01:46,649 --> 00:01:50,460
we don't have any crash bugs or anything

40
00:01:48,719 --> 00:01:53,310
like this but as you can see all our

41
00:01:50,459 --> 00:01:54,539
lovely lovely sprites are gone and the

42
00:01:53,310 --> 00:01:57,540
reason for that is of course we're not

43
00:01:54,540 --> 00:01:59,909
even sorting our since we're not sorting

44
00:01:57,540 --> 00:02:01,590
anything correctly the clear is probably

45
00:01:59,909 --> 00:02:03,930
getting sorted to the front or something

46
00:02:01,590 --> 00:02:06,478
like this and so you know who knows

47
00:02:03,930 --> 00:02:08,250
anything can happen at that point so we

48
00:02:06,478 --> 00:02:10,590
have no idea what's going on in there at

49
00:02:08,250 --> 00:02:12,509
the moment so we got to start with

50
00:02:10,590 --> 00:02:13,439
passing correct data down see where we

51
00:02:12,509 --> 00:02:15,060
are there and then

52
00:02:13,439 --> 00:02:16,469
drop in and start debugging it and make

53
00:02:15,060 --> 00:02:20,219
sure that everything is actually working

54
00:02:16,469 --> 00:02:23,219
properly once we've got it having data

55
00:02:20,219 --> 00:02:25,919
that it can actually use so let's go

56
00:02:23,219 --> 00:02:28,379
into the code here there's inside render

57
00:02:25,919 --> 00:02:35,489
group we know that we've got the sort

58
00:02:28,379 --> 00:02:38,159
key we know that we we call the push

59
00:02:35,490 --> 00:02:42,180
render element only three times we call

60
00:02:38,159 --> 00:02:44,579
it for bitmaps in the well you know what

61
00:02:42,180 --> 00:02:48,030
I'll just show it to you we call it for

62
00:02:44,580 --> 00:02:50,490
bitmaps four rectangles and for the

63
00:02:48,030 --> 00:02:51,900
clear so here's the push render element

64
00:02:50,490 --> 00:02:53,460
for the bitmap here's the Bushmen of the

65
00:02:51,900 --> 00:02:55,080
rectangle here is to clear it since that

66
00:02:53,460 --> 00:02:56,969
seems to be going behind my head a lot

67
00:02:55,080 --> 00:03:00,240
I'm going to go ahead and jump over here

68
00:02:56,969 --> 00:03:03,569
real quick so that it's easier to see so

69
00:03:00,240 --> 00:03:06,090
for something like the clear well for

70
00:03:03,569 --> 00:03:08,669
the clear we kind of know what we would

71
00:03:06,090 --> 00:03:10,020
need right for the clear we know that

72
00:03:08,669 --> 00:03:12,959
we're going to take up the entire screen

73
00:03:10,020 --> 00:03:14,550
and so that means that the you know if

74
00:03:12,960 --> 00:03:16,050
our algum was working properly that

75
00:03:14,550 --> 00:03:18,900
means the clear should always be sorted

76
00:03:16,050 --> 00:03:20,370
behind everyone hopefully right because

77
00:03:18,900 --> 00:03:22,800
it will overlap with everything and need

78
00:03:20,370 --> 00:03:24,810
to get pushed back behind everything so

79
00:03:22,800 --> 00:03:26,250
when we're talking about the sort key

80
00:03:24,810 --> 00:03:29,129
that we're passing here trying to

81
00:03:26,250 --> 00:03:31,229
remember exactly how this worked out I

82
00:03:29,129 --> 00:03:34,469
believe the push render element for the

83
00:03:31,229 --> 00:03:36,509
sort key in here you can see that it's

84
00:03:34,469 --> 00:03:38,009
not actually passing screen area right

85
00:03:36,509 --> 00:03:40,049
so are not really setting the screen

86
00:03:38,009 --> 00:03:41,609
area that screen areas here by the way

87
00:03:40,050 --> 00:03:42,989
you'll have to excuse my typing to be

88
00:03:41,610 --> 00:03:45,180
about this little slow today I've got my

89
00:03:42,989 --> 00:03:47,250
fingers taped up which I can only use

90
00:03:45,180 --> 00:03:48,989
three fingers on my left hand so it

91
00:03:47,250 --> 00:03:56,909
makes it a little bit licks a little bit

92
00:03:48,989 --> 00:03:58,950
less let's use the word evolution which

93
00:03:56,909 --> 00:04:01,439
is not actually a word but it's a word

94
00:03:58,949 --> 00:04:03,539
that we just made up to mean that it's

95
00:04:01,439 --> 00:04:07,019
not as fast as it would be if your

96
00:04:03,539 --> 00:04:08,429
fingers weren't taped so there you go so

97
00:04:07,019 --> 00:04:09,659
let's pretend we were going to start

98
00:04:08,430 --> 00:04:11,760
passing the screen area down here

99
00:04:09,659 --> 00:04:13,769
because basically we know that if any

100
00:04:11,759 --> 00:04:15,149
render element wants to be sorted which

101
00:04:13,769 --> 00:04:16,739
all of them have to be four correct

102
00:04:15,150 --> 00:04:19,019
rendering we know that we're going to

103
00:04:16,738 --> 00:04:21,418
want to have our rectangle what did I

104
00:04:19,019 --> 00:04:23,069
call it rectangle too is it a rectangle

105
00:04:21,418 --> 00:04:24,629
to I or rectangle to I'm not really

106
00:04:23,069 --> 00:04:27,060
entirely certain which one we ended up

107
00:04:24,629 --> 00:04:29,339
using so let's take a look here

108
00:04:27,060 --> 00:04:32,040
we did a rectangle do so with a

109
00:04:29,339 --> 00:04:33,869
rectangle too I want to pass that down

110
00:04:32,040 --> 00:04:35,550
as the screen area and then I want to

111
00:04:33,870 --> 00:04:38,370
save it and now this should give me an

112
00:04:35,550 --> 00:04:40,500
error in the code anywhere that I don't

113
00:04:38,370 --> 00:04:42,810
currently pass that which is the three

114
00:04:40,500 --> 00:04:47,819
places we said before of course I should

115
00:04:42,810 --> 00:04:49,470
also jump back up there should also put

116
00:04:47,819 --> 00:04:53,099
an actual semicolon at the end of the

117
00:04:49,470 --> 00:04:55,230
line because hey that's important all

118
00:04:53,100 --> 00:04:58,650
right and why do I keep I don't want to

119
00:04:55,230 --> 00:05:03,300
be on that side of the screen bro there

120
00:04:58,649 --> 00:05:04,799
we go so yeah so here we go and now we

121
00:05:03,300 --> 00:05:06,210
have to go for each of these guys and

122
00:05:04,800 --> 00:05:08,220
figure out what it is now the easiest

123
00:05:06,209 --> 00:05:10,019
one should be the rectangle because the

124
00:05:08,220 --> 00:05:14,130
rectangle you mean here it is it's

125
00:05:10,019 --> 00:05:17,159
actually doing that information it's got

126
00:05:14,129 --> 00:05:18,810
you know the it's got the rectangle

127
00:05:17,160 --> 00:05:21,389
itself because that's exactly what it's

128
00:05:18,810 --> 00:05:23,850
going to fill so presumably when we do

129
00:05:21,389 --> 00:05:26,819
press render element here it should be

130
00:05:23,850 --> 00:05:28,530
fairly straightforward to go okay we

131
00:05:26,819 --> 00:05:30,269
know what the rectangle is that we're

132
00:05:28,529 --> 00:05:33,839
trying to fill let's just go ahead and

133
00:05:30,269 --> 00:05:35,668
and make it happen now I don't really

134
00:05:33,839 --> 00:05:37,500
have to guess about what that is because

135
00:05:35,668 --> 00:05:39,359
presumably if I went into the open

136
00:05:37,500 --> 00:05:41,610
gelcoat here and just took a look at

137
00:05:39,360 --> 00:05:43,979
what I actually do when we get the

138
00:05:41,610 --> 00:05:46,169
rectangle you can see okay it's a

139
00:05:43,978 --> 00:05:48,779
rectangle from P to P plus entry dim

140
00:05:46,168 --> 00:05:50,519
right so it's like the two corners so if

141
00:05:48,779 --> 00:05:53,339
I want to create screen area from that

142
00:05:50,519 --> 00:05:55,168
if I want to create you know one of

143
00:05:53,339 --> 00:06:00,750
these then what I should be able to do

144
00:05:55,168 --> 00:06:11,129
is pre multiply this dim here right so

145
00:06:00,750 --> 00:06:14,970
this is scaled dim hard to type with no

146
00:06:11,129 --> 00:06:17,459
fingers on so scale dim is going to be

147
00:06:14,970 --> 00:06:23,580
computed here screen area is going to be

148
00:06:17,459 --> 00:06:25,939
a rectangle min max and that rectangle

149
00:06:23,579 --> 00:06:29,300
min max is going to be the scale dim

150
00:06:25,939 --> 00:06:29,300
plus the p

151
00:06:30,110 --> 00:06:34,699
but of course that p should have been

152
00:06:32,300 --> 00:06:36,740
transformed first right so if you take a

153
00:06:34,699 --> 00:06:39,560
look at what happens here we're going to

154
00:06:36,740 --> 00:06:45,800
use the basis p instead so i want to use

155
00:06:39,560 --> 00:06:49,069
that transformed p instead of instead of

156
00:06:45,800 --> 00:06:50,780
using the other stuff okay so that's I

157
00:06:49,069 --> 00:06:52,519
think probably the correct screen area

158
00:06:50,779 --> 00:06:55,429
we'll have to verify it obviously but

159
00:06:52,519 --> 00:06:57,019
that seems correct to me now for push

160
00:06:55,430 --> 00:06:59,360
bitmap things are a little more

161
00:06:57,019 --> 00:07:02,569
complicated because for push-fit map we

162
00:06:59,360 --> 00:07:04,670
could be passing an x and y axis so at

163
00:07:02,569 --> 00:07:06,349
first like i did before where I kind of

164
00:07:04,670 --> 00:07:08,300
cheese doubt the sprite bound stuff we

165
00:07:06,350 --> 00:07:10,540
could do exactly the same cheesing here

166
00:07:08,300 --> 00:07:12,410
just to get things working but you know

167
00:07:10,540 --> 00:07:18,710
we're probably going to need tighter

168
00:07:12,410 --> 00:07:21,170
bounds eventually actually it's gonna be

169
00:07:18,709 --> 00:07:23,419
the opposite these bounds will be too

170
00:07:21,170 --> 00:07:33,860
tight they won't they won't extend as

171
00:07:23,420 --> 00:07:35,509
far as they probably need to so I'm

172
00:07:33,860 --> 00:07:38,199
going to take a rectangle to hear the

173
00:07:35,509 --> 00:07:44,990
screen area I'm going to pass that oops

174
00:07:38,199 --> 00:07:47,029
yeah I'm going to pass that through and

175
00:07:44,990 --> 00:07:48,550
then here inside the rectangle screen

176
00:07:47,029 --> 00:07:53,419
area part i'm going to do a rectangle

177
00:07:48,550 --> 00:07:57,310
min max and i'm going to just do exactly

178
00:07:53,420 --> 00:07:57,310
the same thing that we were doing before

179
00:07:57,579 --> 00:08:04,870
where we say like okay let's pretend

180
00:08:00,829 --> 00:08:11,419
that it's going to be Jim basis p and

181
00:08:04,870 --> 00:08:13,069
Jim basis B plus size so we'll assume

182
00:08:11,420 --> 00:08:14,870
that we've got the screen area here and

183
00:08:13,069 --> 00:08:17,089
the reason that this is not going to be

184
00:08:14,870 --> 00:08:20,389
quite right just to sort of give you a

185
00:08:17,089 --> 00:08:26,019
little background on that if you're not

186
00:08:20,389 --> 00:08:26,019
sure so oops

187
00:08:27,569 --> 00:08:33,569
so what's going to happen is in the case

188
00:08:31,180 --> 00:08:39,340
where we're drawing a regular sprite

189
00:08:33,570 --> 00:08:44,980
this will be correct so if we know that

190
00:08:39,340 --> 00:08:51,700
we've got an x axis of 10 and a y axis

191
00:08:44,980 --> 00:08:54,670
of 0 1 and we don't have to worry about

192
00:08:51,700 --> 00:08:57,129
any rotational effects then we know that

193
00:08:54,669 --> 00:08:58,809
this is going to be fine that's actually

194
00:08:57,129 --> 00:09:01,450
going to be the screen area of the

195
00:08:58,809 --> 00:09:04,659
sprite is going to be given by the P

196
00:09:01,450 --> 00:09:06,550
that's transformed plus that size is

197
00:09:04,659 --> 00:09:08,709
going to give us the two corners of our

198
00:09:06,549 --> 00:09:12,099
bounding box in screen space and we're

199
00:09:08,710 --> 00:09:14,980
good to go however if you imagine what

200
00:09:12,100 --> 00:09:17,019
happens were this to be rotated right so

201
00:09:14,980 --> 00:09:18,610
suppose our x-axis were not that suppose

202
00:09:17,019 --> 00:09:21,429
we had something that had been rotated

203
00:09:18,610 --> 00:09:23,649
on its side like this or furthermore it

204
00:09:21,429 --> 00:09:24,669
could be like sheared a little bit so it

205
00:09:23,649 --> 00:09:27,730
could even be something this kind of

206
00:09:24,669 --> 00:09:29,740
parallelogram e well now whatever that

207
00:09:27,730 --> 00:09:32,170
size used to be you know is maybe

208
00:09:29,740 --> 00:09:35,169
pointing to here well that is not

209
00:09:32,169 --> 00:09:39,729
actually the rectangle anymore because

210
00:09:35,169 --> 00:09:43,209
it's been sort of warped and so we don't

211
00:09:39,730 --> 00:09:45,129
really have any protection here we're

212
00:09:43,210 --> 00:09:47,170
going to have entirely wrong results if

213
00:09:45,129 --> 00:09:48,970
this thing's spinning around at all so

214
00:09:47,169 --> 00:09:50,709
for example let's take the worst

215
00:09:48,970 --> 00:09:53,410
possible case where this thing was

216
00:09:50,710 --> 00:09:55,450
rotated completely around we're going to

217
00:09:53,409 --> 00:09:57,279
pick this is the rectangle for the

218
00:09:55,450 --> 00:09:58,840
screen area but the actual rectangle is

219
00:09:57,279 --> 00:10:02,529
going to be here if we rotated it all

220
00:09:58,840 --> 00:10:04,269
the way round right furthermore the

221
00:10:02,529 --> 00:10:06,399
rotating rectangle could be much bigger

222
00:10:04,269 --> 00:10:08,829
or much smaller if we just pass bigger

223
00:10:06,399 --> 00:10:11,319
values here so for example if the x-axis

224
00:10:08,830 --> 00:10:13,060
and y-axis for three long instead of one

225
00:10:11,320 --> 00:10:14,500
long you know this is how big would

226
00:10:13,059 --> 00:10:17,679
actually appear but that's how big we

227
00:10:14,500 --> 00:10:19,600
would say it was so it's definitely not

228
00:10:17,679 --> 00:10:21,069
going to be acceptable to do this in the

229
00:10:19,600 --> 00:10:22,540
long term and we're going to run into

230
00:10:21,070 --> 00:10:24,550
bugs with that no question if we leave

231
00:10:22,539 --> 00:10:26,319
it like that but for the moment we

232
00:10:24,549 --> 00:10:28,479
aren't really using that very much only

233
00:10:26,320 --> 00:10:30,370
the hopping hero really uses that all

234
00:10:28,480 --> 00:10:31,779
that much and so we can get a quick

235
00:10:30,370 --> 00:10:35,560
sense of whether the album's working

236
00:10:31,779 --> 00:10:39,490
before we tackle that part any you know

237
00:10:35,559 --> 00:10:47,399
anymore so let's start with that

238
00:10:39,490 --> 00:10:51,330
want to come back to that soon ok so we

239
00:10:47,399 --> 00:10:55,958
I don't remember what we called that

240
00:10:51,330 --> 00:11:01,690
function so we're going to kind of have

241
00:10:55,958 --> 00:11:04,208
to look it up let's rekt min oh so we

242
00:11:01,690 --> 00:11:05,649
can actually do a recommend dim we've

243
00:11:04,208 --> 00:11:08,500
got a utility function that actually

244
00:11:05,649 --> 00:11:11,528
just does this automatically for us so

245
00:11:08,500 --> 00:11:13,360
recommend dim is better anyway so that's

246
00:11:11,528 --> 00:11:15,700
great to make sure parents for push

247
00:11:13,360 --> 00:11:18,159
render element does not take four

248
00:11:15,700 --> 00:11:20,649
arguments that's right brown screen area

249
00:11:18,159 --> 00:11:27,850
where's my push but what did i do here

250
00:11:20,649 --> 00:11:35,289
ah got to add to the macro add it to the

251
00:11:27,850 --> 00:11:37,750
macro added it to the macro people you

252
00:11:35,289 --> 00:11:39,549
know playdota may have impeccable micro

253
00:11:37,750 --> 00:11:45,940
but here on handmade hero we have

254
00:11:39,549 --> 00:11:52,389
impeccable macro uh i'm gonna go ahead

255
00:11:45,940 --> 00:11:54,279
and pass that down and i think we're all

256
00:11:52,389 --> 00:11:56,289
good now all we have to do is come up

257
00:11:54,278 --> 00:11:57,970
with a fake rectangle for our clear

258
00:11:56,289 --> 00:12:01,480
which should be the rectangle that

259
00:11:57,970 --> 00:12:03,339
represents the entire screen right and

260
00:12:01,480 --> 00:12:05,320
i'm hoping that that's actually not too

261
00:12:03,339 --> 00:12:07,089
hard to come by because presumably if we

262
00:12:05,320 --> 00:12:12,520
have a render group that's going to have

263
00:12:07,089 --> 00:12:14,079
to know stuff like what the what the the

264
00:12:12,519 --> 00:12:16,870
bounds of the entire screen are so i

265
00:12:14,078 --> 00:12:20,769
would think that we would have a way of

266
00:12:16,870 --> 00:12:22,870
figuring that out and it looks like so

267
00:12:20,769 --> 00:12:24,639
we will we do have an active camera

268
00:12:22,870 --> 00:12:28,870
transform which tells us what the screen

269
00:12:24,639 --> 00:12:30,909
center is unfortunately hmm there we go

270
00:12:28,870 --> 00:12:33,278
and we have the monitor half dim in

271
00:12:30,909 --> 00:12:34,870
meters so i suppose if we do meters two

272
00:12:33,278 --> 00:12:37,028
pixels on that then we would be able to

273
00:12:34,870 --> 00:12:39,039
figure out what our screen rectangle

274
00:12:37,028 --> 00:12:41,139
actually is however that does seem a

275
00:12:39,039 --> 00:12:42,519
little bit draconian and in screen space

276
00:12:41,139 --> 00:12:45,069
you'd think that we would just be sort

277
00:12:42,519 --> 00:12:48,220
of storing what that actually is so I'm

278
00:12:45,070 --> 00:12:49,690
gonna say rather than you know dealing

279
00:12:48,220 --> 00:12:51,950
with all that I feel like it'd be fairly

280
00:12:49,690 --> 00:12:56,480
easy to just do like screen area

281
00:12:51,950 --> 00:12:57,440
here right or something like that I feel

282
00:12:56,480 --> 00:13:06,529
like that would be relatively

283
00:12:57,440 --> 00:13:09,080
straightforward but you know what no I

284
00:13:06,529 --> 00:13:11,569
think that's fine so I'm just going to

285
00:13:09,080 --> 00:13:13,280
say let's go ahead and pass the screen

286
00:13:11,570 --> 00:13:15,379
area down here and then what we'll do is

287
00:13:13,279 --> 00:13:16,970
we'll just initialize that when we when

288
00:13:15,379 --> 00:13:18,830
we initially create the render group and

289
00:13:16,970 --> 00:13:20,149
then we'll just know that we always have

290
00:13:18,830 --> 00:13:21,410
a valid screen area that we can use

291
00:13:20,149 --> 00:13:22,819
because I'm pretty sure we just know

292
00:13:21,409 --> 00:13:24,829
that information at startup we don't

293
00:13:22,820 --> 00:13:32,510
just we just don't tend to preserve it

294
00:13:24,830 --> 00:13:36,710
now where was my almost there that we

295
00:13:32,509 --> 00:13:41,149
had does the render group just get

296
00:13:36,710 --> 00:13:47,269
cleared to zero no it can't this has to

297
00:13:41,149 --> 00:13:51,439
be set properly so where were we setting

298
00:13:47,269 --> 00:13:54,199
that what am I missing we must set that

299
00:13:51,440 --> 00:14:03,800
information somewhere I must have moved

300
00:13:54,200 --> 00:14:05,980
it somewhere accidentally where did it

301
00:14:03,799 --> 00:14:05,979
go

302
00:14:11,309 --> 00:14:22,769
hmm well since I still have not written

303
00:14:18,879 --> 00:14:29,769
a fine for for Cody yet let's do it here

304
00:14:22,769 --> 00:14:34,799
monitor half dim ah flogged those

305
00:14:29,769 --> 00:14:34,799
hamsters Microsoft you can do it

306
00:14:39,669 --> 00:14:51,179
it looks to me like we just don't ever

307
00:14:42,519 --> 00:15:01,210
initialize it at all maybe that's true I

308
00:14:51,179 --> 00:15:02,409
guess let's find out so if I want to

309
00:15:01,210 --> 00:15:06,519
find out I'm just going to go to

310
00:15:02,409 --> 00:15:16,929
handmade render group here where we

311
00:15:06,519 --> 00:15:18,819
actually create one of them so this gets

312
00:15:16,929 --> 00:15:26,589
passed update and render world gets past

313
00:15:18,820 --> 00:15:29,560
that from so does the render group

314
00:15:26,590 --> 00:15:30,970
actually come all the way down it's been

315
00:15:29,559 --> 00:15:33,849
a long time since we working on this

316
00:15:30,970 --> 00:15:37,170
code there was quite a break so I kind

317
00:15:33,850 --> 00:15:37,170
of forget some of the decisions we made

318
00:15:42,980 --> 00:15:55,310
hmm now there we go so it's right there

319
00:15:50,990 --> 00:15:56,659
what am I yeah was my search not working

320
00:15:55,309 --> 00:15:58,729
a reside tight I must have been typing

321
00:15:56,659 --> 00:16:00,469
something wrong because for some reason

322
00:15:58,730 --> 00:16:01,970
when i tried to search for this we

323
00:16:00,470 --> 00:16:03,440
didn't end up jumping to it I must have

324
00:16:01,970 --> 00:16:05,540
gotten a little bit backwards for some

325
00:16:03,440 --> 00:16:07,190
reason so begin render group is what I

326
00:16:05,539 --> 00:16:08,208
actually wanted to look at right this

327
00:16:07,190 --> 00:16:12,019
was the function that I was actually

328
00:16:08,208 --> 00:16:13,518
talking about and I feel like that

329
00:16:12,019 --> 00:16:18,769
should be here and render group that CBP

330
00:16:13,519 --> 00:16:20,720
right but it's not and so that's a

331
00:16:18,769 --> 00:16:24,078
little bit weird alright so let's find

332
00:16:20,720 --> 00:16:26,740
out where did that go did I accidentally

333
00:16:24,078 --> 00:16:26,739
misplace it

334
00:16:35,049 --> 00:16:46,758
what is going on I just did that search

335
00:16:38,750 --> 00:16:55,429
should I not so there's me searching for

336
00:16:46,759 --> 00:16:57,230
begin render group and it like can't

337
00:16:55,429 --> 00:17:04,909
find it oh because I mean not in

338
00:16:57,230 --> 00:17:08,480
rendered group there we go so what's

339
00:17:04,910 --> 00:17:12,140
interesting about this to me is does

340
00:17:08,480 --> 00:17:14,720
that it implies i guess it is true so

341
00:17:12,140 --> 00:17:16,699
even though perspective perspective

342
00:17:14,720 --> 00:17:18,019
actually sets the monitor half-demon

343
00:17:16,699 --> 00:17:19,970
meters kind of down here which is a

344
00:17:18,019 --> 00:17:22,220
little bit strange i'm kind of weirded

345
00:17:19,970 --> 00:17:23,838
out by that but that's okay anyway that

346
00:17:22,220 --> 00:17:25,880
was a little bit of it aside i apologize

347
00:17:23,838 --> 00:17:30,168
for that anyway point being inside begin

348
00:17:25,880 --> 00:17:33,440
render group we should have some way to

349
00:17:30,169 --> 00:17:35,120
figure out what the actual and i guess

350
00:17:33,440 --> 00:17:37,009
now i look at it it seems like we only

351
00:17:35,119 --> 00:17:38,629
actually pass this to prospective or

352
00:17:37,009 --> 00:17:41,119
orthographically past the pixel height

353
00:17:38,630 --> 00:17:42,950
in the pixel width I don't actually know

354
00:17:41,119 --> 00:17:44,149
why that was our decision we may want to

355
00:17:42,950 --> 00:17:46,610
revisit that because it seems like that

356
00:17:44,150 --> 00:17:49,309
should be there on startup but either

357
00:17:46,609 --> 00:17:53,359
way when we do this we can then

358
00:17:49,308 --> 00:17:58,069
therefore set a rectum in dim here where

359
00:17:53,359 --> 00:18:04,969
we just say like oh okay it's 002 you

360
00:17:58,069 --> 00:18:07,009
know pixel width pixel height and I

361
00:18:04,970 --> 00:18:09,829
don't know if we can v2i that can we we

362
00:18:07,009 --> 00:18:14,089
can so this will set that in both cases

363
00:18:09,829 --> 00:18:17,569
so that we have that information around

364
00:18:14,089 --> 00:18:21,519
for the clear and now I think we are

365
00:18:17,569 --> 00:18:26,869
passing our sort always down correctly

366
00:18:21,519 --> 00:18:28,460
right so that should be good okay so now

367
00:18:26,869 --> 00:18:30,379
we have to actually start debugging our

368
00:18:28,460 --> 00:18:31,880
actual code because now we've got actual

369
00:18:30,380 --> 00:18:35,120
screen areas that somebody set to

370
00:18:31,880 --> 00:18:37,730
something that means something so let's

371
00:18:35,119 --> 00:18:39,349
start by taking a look at these so our

372
00:18:37,730 --> 00:18:42,289
screen areas should have something in

373
00:18:39,349 --> 00:18:45,230
the we find plausible these are in you

374
00:18:42,289 --> 00:18:46,639
know basically in pixels and so we

375
00:18:45,230 --> 00:18:47,240
should be able to see something here

376
00:18:46,640 --> 00:18:49,910
that

377
00:18:47,240 --> 00:18:53,029
we think might be plausibly a pixel

378
00:18:49,910 --> 00:18:59,330
value and you know I don't know we'll

379
00:18:53,029 --> 00:19:02,480
find out so yeah like that that looks

380
00:18:59,329 --> 00:19:05,139
kind of wrong to me right like i like i

381
00:19:02,480 --> 00:19:09,079
feel like that can't possibly be a

382
00:19:05,140 --> 00:19:10,910
correct screen area value I mean what

383
00:19:09,079 --> 00:19:18,379
would we be passing that would have such

384
00:19:10,910 --> 00:19:21,230
a ridiculous coordinate right- 2076 28

385
00:19:18,380 --> 00:19:27,320
right so it's like basically the whole

386
00:19:21,230 --> 00:19:30,670
it's like a giant thing the size of an

387
00:19:27,319 --> 00:19:32,899
entire screen off to the left of us I

388
00:19:30,670 --> 00:19:34,789
like I don't know that doesn't seem

389
00:19:32,900 --> 00:19:36,110
particularly logical on the other hand

390
00:19:34,789 --> 00:19:41,450
it's possible that that's just because

391
00:19:36,109 --> 00:19:44,449
there's something that's very large in Z

392
00:19:41,450 --> 00:19:46,670
that's close to us that could have

393
00:19:44,450 --> 00:19:49,910
gotten blown out I suppose that is you

394
00:19:46,670 --> 00:19:52,640
know a theoretical possibility so you

395
00:19:49,910 --> 00:19:54,890
could look at the sort key and see what

396
00:19:52,640 --> 00:19:58,640
it is so it's zmax is actually 0 which

397
00:19:54,890 --> 00:20:01,070
would be right at the camera I feel like

398
00:19:58,640 --> 00:20:02,900
we're going to have to throw things away

399
00:20:01,069 --> 00:20:04,399
that are that close because we can't

400
00:20:02,900 --> 00:20:07,490
really be handing all of those to our

401
00:20:04,400 --> 00:20:09,769
sort to so to a certain extent that

402
00:20:07,490 --> 00:20:14,140
seems like a bit of a problem and in

403
00:20:09,769 --> 00:20:14,139
fact I'm going to take a look at that

404
00:20:14,740 --> 00:20:19,910
I'm going to take a look at that right

405
00:20:17,450 --> 00:20:21,289
here so we have our entity basis p

406
00:20:19,910 --> 00:20:23,540
result situation here where we have

407
00:20:21,289 --> 00:20:25,159
result valid equals true and then here

408
00:20:23,539 --> 00:20:27,710
we have result value equals true

409
00:20:25,160 --> 00:20:29,210
distance to pz greater than near clip

410
00:20:27,710 --> 00:20:33,529
plane so i guess the thing that I'm

411
00:20:29,210 --> 00:20:37,250
wondering is the near clip plane is

412
00:20:33,529 --> 00:20:39,889
almost certainly set you know so that 0

413
00:20:37,250 --> 00:20:42,380
would be clipped out of it right but in

414
00:20:39,890 --> 00:20:45,440
this case it looks like it's not doing

415
00:20:42,380 --> 00:20:47,210
that so that does seem a little bit

416
00:20:45,440 --> 00:20:49,340
weird now that could be just because the

417
00:20:47,210 --> 00:20:54,350
values that we're using for Z are not

418
00:20:49,339 --> 00:20:56,389
accurate let's say maybe but that just

419
00:20:54,349 --> 00:20:57,869
strikes me as a little bit odd you know

420
00:20:56,390 --> 00:21:01,240
we can close this

421
00:20:57,869 --> 00:21:04,839
okay that definitely strikes me as odd

422
00:21:01,240 --> 00:21:07,298
so I want to see well I want to see a

423
00:21:04,839 --> 00:21:09,220
couple things about that actually but I

424
00:21:07,298 --> 00:21:15,158
definitely want to kind of get some idea

425
00:21:09,220 --> 00:21:33,370
here of yet of who were actually dealing

426
00:21:15,159 --> 00:21:35,649
with let's take a look at be yeah yeah

427
00:21:33,369 --> 00:21:38,229
that makes me uncomfortable that's not

428
00:21:35,648 --> 00:21:41,259
great uh where are we at here by the way

429
00:21:38,230 --> 00:21:44,679
also is this just the first pair ok now

430
00:21:41,259 --> 00:21:50,200
we're so all the way up to the sort of

431
00:21:44,679 --> 00:21:51,880
the latest set I'm not sure what I

432
00:21:50,200 --> 00:21:54,519
wanted to bug first I can obviously go

433
00:21:51,880 --> 00:21:56,320
after the part we're at right now but

434
00:21:54,519 --> 00:21:57,730
I'm kind of just disquieted by those

435
00:21:56,319 --> 00:21:59,439
values and I want to make sure that I

436
00:21:57,730 --> 00:22:01,058
that I understand where they're coming

437
00:21:59,440 --> 00:22:03,548
from I don't feel like I really do right

438
00:22:01,058 --> 00:22:09,308
now so I'm going to try to take a look

439
00:22:03,548 --> 00:22:17,548
at what's going on with those and I'm

440
00:22:09,308 --> 00:22:23,619
gonna say I I'm going to say probably

441
00:22:17,548 --> 00:22:27,490
the best way to do that is to maybe take

442
00:22:23,619 --> 00:22:33,189
a look at the place where we're pushing

443
00:22:27,490 --> 00:22:35,259
render elements and say that inside here

444
00:22:33,190 --> 00:22:41,649
it's relatively cheap for me tubes

445
00:22:35,259 --> 00:22:44,109
that's not where I want to be inside

446
00:22:41,648 --> 00:22:46,178
here it's relatively cheap for me to do

447
00:22:44,109 --> 00:22:48,699
something where I look at what the area

448
00:22:46,179 --> 00:22:50,950
is that's passed into the screen area

449
00:22:48,700 --> 00:22:59,200
rectangle right I could do something

450
00:22:50,950 --> 00:23:02,980
where I say like assert get area of that

451
00:22:59,200 --> 00:23:05,470
screen area rectangle is you know less

452
00:23:02,980 --> 00:23:08,099
than you know 2,000 by 2,000 or

453
00:23:05,470 --> 00:23:08,100
something like this

454
00:23:09,569 --> 00:23:18,819
and I guess I don't know if we actually

455
00:23:15,430 --> 00:23:21,880
implemented an area get clamped rekt

456
00:23:18,819 --> 00:23:25,539
area has area it looks like we never

457
00:23:21,880 --> 00:23:26,800
really implemented a area function for

458
00:23:25,539 --> 00:23:30,250
these guys but I'm going to throw one in

459
00:23:26,799 --> 00:23:33,940
here so for this guy would be in line v

460
00:23:30,250 --> 00:23:35,920
to get area and here's a rectangle to

461
00:23:33,940 --> 00:23:38,289
and obviously the area of rectangle is

462
00:23:35,920 --> 00:23:40,000
just the width times the height so the

463
00:23:38,289 --> 00:23:44,069
result here is really straightforward

464
00:23:40,000 --> 00:23:44,069
it's just like what's the width and

465
00:23:46,890 --> 00:24:12,430
what's the height you have those yes oh

466
00:23:55,720 --> 00:24:13,900
no we don't we just have get dim so

467
00:24:12,430 --> 00:24:16,410
that's just the computation for the area

468
00:24:13,900 --> 00:24:25,000
right nothing particularly unusual there

469
00:24:16,410 --> 00:24:27,970
and if I actually don't make a typo and

470
00:24:25,000 --> 00:24:33,039
in theory that should give us what we

471
00:24:27,970 --> 00:24:35,759
need man I am just a mess today I think

472
00:24:33,039 --> 00:24:38,440
having the flipper hand is not helping

473
00:24:35,759 --> 00:24:40,089
so I'm hoping that this assertion will

474
00:24:38,440 --> 00:24:42,039
just fire when we get one of these

475
00:24:40,089 --> 00:24:43,480
particularly large screen areas the

476
00:24:42,039 --> 00:24:45,789
reason that I wanted to do that is

477
00:24:43,480 --> 00:24:47,710
because I just I don't really want to

478
00:24:45,789 --> 00:24:50,859
have to debug it so far down the line

479
00:24:47,710 --> 00:24:52,299
right so I wanted to be able to break

480
00:24:50,859 --> 00:24:56,039
when I have one of these giant

481
00:24:52,299 --> 00:24:56,039
rectangles because now you know

482
00:24:59,049 --> 00:25:05,210
now I can just go ahead and set the next

483
00:25:02,000 --> 00:25:08,799
statement here I can step out right and

484
00:25:05,210 --> 00:25:12,049
I can see who it was that was actually

485
00:25:08,799 --> 00:25:15,349
causing this to occur right like who is

486
00:25:12,049 --> 00:25:16,789
actually calling this function and

487
00:25:15,349 --> 00:25:18,259
obviously we're going to have this same

488
00:25:16,789 --> 00:25:25,420
problem unfortunately a couple more

489
00:25:18,259 --> 00:25:32,990
times I could probably skip the last

490
00:25:25,420 --> 00:25:35,890
push okay uh so I actually didn't want

491
00:25:32,990 --> 00:25:39,380
to go further at the moment that's okay

492
00:25:35,890 --> 00:25:43,660
uh so it's this part right here that

493
00:25:39,380 --> 00:25:43,660
that's causing it so I guess you know I

494
00:25:43,809 --> 00:25:50,299
guess I was worried for for not in this

495
00:25:47,509 --> 00:25:53,799
case those actually are valid like those

496
00:25:50,299 --> 00:25:56,299
should be that big that's actually true

497
00:25:53,799 --> 00:25:58,639
so I'm okay with that because those are

498
00:25:56,299 --> 00:26:01,129
our giant those are our giant sort of

499
00:25:58,640 --> 00:26:03,530
world pens the things that we draw to

500
00:26:01,130 --> 00:26:06,260
show where the simulation region is so I

501
00:26:03,529 --> 00:26:09,139
suppose that isn't actually concerning

502
00:26:06,259 --> 00:26:11,329
that's a valid that's a valid rectangle

503
00:26:09,140 --> 00:26:13,790
I'm not going to freak out about it i'm

504
00:26:11,329 --> 00:26:16,789
gonna i'm going to say that's okay so

505
00:26:13,789 --> 00:26:19,819
let me go ahead and turn that guy off

506
00:26:16,789 --> 00:26:21,980
and I'm now just going to look at the

507
00:26:19,819 --> 00:26:23,629
actual bug but I was a little nervous

508
00:26:21,980 --> 00:26:31,940
about that I just wanted to make sure I

509
00:26:23,630 --> 00:26:34,520
I was not not nuts alright so for some

510
00:26:31,940 --> 00:26:35,900
reason we have disabled the push struct

511
00:26:34,519 --> 00:26:38,420
there I guess because we hadn't finished

512
00:26:35,900 --> 00:26:41,470
yet so that looks like just a case of us

513
00:26:38,420 --> 00:26:44,509
having to re comment in the code right

514
00:26:41,470 --> 00:26:46,160
so that's that's not particularly

515
00:26:44,509 --> 00:26:51,460
exciting that might be the only problem

516
00:26:46,160 --> 00:26:51,460
there I doubt it but it might be right

517
00:26:52,240 --> 00:26:59,920
okay

518
00:26:55,029 --> 00:27:02,519
uh all right so a couple things about

519
00:26:59,920 --> 00:27:04,960
this first of all I really don't know

520
00:27:02,519 --> 00:27:08,309
what we're looking at but you can see

521
00:27:04,960 --> 00:27:11,980
we're running incredibly slowly right

522
00:27:08,309 --> 00:27:14,679
and one of the things about running this

523
00:27:11,980 --> 00:27:17,259
running incredibly slowly is I'm

524
00:27:14,680 --> 00:27:18,850
assuming and I don't know but that it's

525
00:27:17,259 --> 00:27:20,410
I'm assuming it's running incredibly

526
00:27:18,849 --> 00:27:23,079
slowly for the reason that I talked

527
00:27:20,410 --> 00:27:25,690
about before which is that we can't

528
00:27:23,079 --> 00:27:27,669
leave an N squared loop with this many

529
00:27:25,690 --> 00:27:31,840
elements going through it so I'm

530
00:27:27,670 --> 00:27:33,640
assuming that if we look to see what

531
00:27:31,839 --> 00:27:35,409
takes all the time it's going to be

532
00:27:33,640 --> 00:27:38,650
billed sprite graph but I don't know

533
00:27:35,410 --> 00:27:39,970
that for sure so let's first actually do

534
00:27:38,650 --> 00:27:41,350
that because I want to make sure that we

535
00:27:39,970 --> 00:27:43,990
actually do know what's going on for

536
00:27:41,349 --> 00:27:48,209
this entire process as we do the work of

537
00:27:43,990 --> 00:27:51,220
actually getting this you know correct

538
00:27:48,210 --> 00:27:55,980
let's time each of these for the walks

539
00:27:51,220 --> 00:27:59,230
right graph portion and the and the

540
00:27:55,980 --> 00:28:01,299
builds fry craft portion and also i'll

541
00:27:59,230 --> 00:28:05,230
go ahead and turn on while I'm at it

542
00:28:01,299 --> 00:28:16,089
I'll turn on for are you there you go I

543
00:28:05,230 --> 00:28:18,490
will turn on our debug view which

544
00:28:16,089 --> 00:28:20,139
handmade internal is actually on so I'm

545
00:28:18,490 --> 00:28:23,170
assuming that means it's still on but

546
00:28:20,140 --> 00:28:31,509
it's just not sorting to the front can i

547
00:28:23,170 --> 00:28:33,789
right about that oh oh the horror we

548
00:28:31,509 --> 00:28:35,140
can't actually see of course the

549
00:28:33,789 --> 00:28:38,799
hilarious thing is how much faster

550
00:28:35,140 --> 00:28:40,420
release mode runs but yet we can't

551
00:28:38,799 --> 00:28:41,730
actually see our debug hut overlay

552
00:28:40,420 --> 00:28:45,220
because it's kind of stuck to them

553
00:28:41,730 --> 00:28:46,599
sorting in the render engine obviously

554
00:28:45,220 --> 00:28:48,610
kind of really annoying because you can

555
00:28:46,599 --> 00:28:50,799
see the screens just a mess and until we

556
00:28:48,609 --> 00:28:53,409
get the start working our debug overlay

557
00:28:50,799 --> 00:28:57,879
display won't won't be correct either so

558
00:28:53,410 --> 00:29:02,050
that's kind of a little bit of a slap in

559
00:28:57,880 --> 00:29:06,100
the face there but we're not completely

560
00:29:02,049 --> 00:29:08,539
without ways that we can

561
00:29:06,099 --> 00:29:15,069
we're not complete without ways that we

562
00:29:08,539 --> 00:29:18,289
can fix that one thing we can do is I

563
00:29:15,069 --> 00:29:20,689
can sort of make it so that our debug

564
00:29:18,289 --> 00:29:22,490
overlay puts itself in a better position

565
00:29:20,690 --> 00:29:25,130
where we you know might be able to take

566
00:29:22,490 --> 00:29:28,460
a look at it since I only wanted to look

567
00:29:25,130 --> 00:29:31,580
at the speed I guess I'll postpone that

568
00:29:28,460 --> 00:29:33,319
for a little bit just to see if we can't

569
00:29:31,579 --> 00:29:36,049
get the sort working a little more

570
00:29:33,319 --> 00:29:37,819
correctly first and then maybe our debug

571
00:29:36,049 --> 00:29:39,319
thing will pop to the front I wanted to

572
00:29:37,819 --> 00:29:41,829
take a look at the speed originally but

573
00:29:39,319 --> 00:29:44,359
looks like maybe that's not in the cards

574
00:29:41,829 --> 00:29:46,519
all right I was surprised with how fast

575
00:29:44,359 --> 00:29:50,299
that ran with really with optimizations

576
00:29:46,519 --> 00:29:53,089
on but we'll take a little look at that

577
00:29:50,299 --> 00:29:54,680
in the future so as we can see we're

578
00:29:53,089 --> 00:29:56,179
still not really getting correct sorting

579
00:29:54,680 --> 00:29:58,220
results at all here and in fact we're

580
00:29:56,180 --> 00:30:00,680
getting some pretty non sequitur things

581
00:29:58,220 --> 00:30:02,839
like for example we have you know this

582
00:30:00,680 --> 00:30:06,049
big obviously in front things sorting

583
00:30:02,839 --> 00:30:08,269
behind this obviously not in front thing

584
00:30:06,049 --> 00:30:11,329
what is interesting about this is the

585
00:30:08,269 --> 00:30:13,879
sort does seem a lot more stable in a

586
00:30:11,329 --> 00:30:15,079
lot of cases like we're not getting a

587
00:30:13,880 --> 00:30:18,110
lot of flickering and stuff that we are

588
00:30:15,079 --> 00:30:20,480
still getting some and so I don't know

589
00:30:18,109 --> 00:30:22,879
but either way we obviously need to

590
00:30:20,480 --> 00:30:25,970
figure out why we're not getting a sort

591
00:30:22,880 --> 00:30:28,190
of a reasonable sword out of it and the

592
00:30:25,970 --> 00:30:29,900
only way I think we could reasonably do

593
00:30:28,190 --> 00:30:31,610
this because there's too much stuff on

594
00:30:29,900 --> 00:30:36,740
the screen right now I think what we

595
00:30:31,609 --> 00:30:39,049
need to do is maybe like turn off a lot

596
00:30:36,740 --> 00:30:41,690
of what we're doing and just focus on

597
00:30:39,049 --> 00:30:46,089
rendering a couple things and seeing

598
00:30:41,690 --> 00:30:50,059
what happens with those few things right

599
00:30:46,089 --> 00:30:52,250
so what I might say is well okay you

600
00:30:50,059 --> 00:30:56,089
know we've got update and render world

601
00:30:52,250 --> 00:30:58,309
here maybe I'll switch back inside I

602
00:30:56,089 --> 00:31:00,439
think it's in handmade CPP maybe i'll

603
00:30:58,309 --> 00:31:02,269
switch back to doing the title sequence

604
00:31:00,440 --> 00:31:03,830
the title sequence is kind of nice

605
00:31:02,269 --> 00:31:06,889
because it's just a bunch of big fat

606
00:31:03,829 --> 00:31:11,029
plates right there's not thousands of

607
00:31:06,890 --> 00:31:12,590
things going on and so maybe we can take

608
00:31:11,029 --> 00:31:15,680
a look at how the sorting routine

609
00:31:12,589 --> 00:31:17,839
performs on these and that will help us

610
00:31:15,680 --> 00:31:18,890
now of course one thing that's not great

611
00:31:17,839 --> 00:31:20,179
is these

612
00:31:18,890 --> 00:31:24,259
these actually appear to be sorting

613
00:31:20,180 --> 00:31:25,370
somewhat properly so that's less good it

614
00:31:24,259 --> 00:31:29,569
would have been nice of the first one

615
00:31:25,369 --> 00:31:32,750
was completely completely trashed but it

616
00:31:29,569 --> 00:31:36,740
looks like these are doing what they

617
00:31:32,750 --> 00:31:41,839
should do so yeah but I'm still going to

618
00:31:36,740 --> 00:31:45,259
step through them and see what we can

619
00:31:41,839 --> 00:31:48,259
see I would also point out that these

620
00:31:45,259 --> 00:31:50,059
are sorting very reliably incorrect you

621
00:31:48,259 --> 00:31:53,329
can see the drop shadow is sorting in

622
00:31:50,059 --> 00:31:54,769
front of the regular text and so it's

623
00:31:53,329 --> 00:31:56,649
kind of interesting to me just one of

624
00:31:54,769 --> 00:32:00,589
the things that's a little bit odd is

625
00:31:56,650 --> 00:32:02,480
it's interesting to me that the sort is

626
00:32:00,589 --> 00:32:05,379
working reliably for the background

627
00:32:02,480 --> 00:32:07,460
layers here and it's working unreliably

628
00:32:05,380 --> 00:32:15,050
exactly the opposite of what it should

629
00:32:07,460 --> 00:32:17,630
do for the for the text right for the UI

630
00:32:15,049 --> 00:32:19,789
overlay now one thing I'd mentioned is

631
00:32:17,630 --> 00:32:22,070
if you look at build sprite graph it's

632
00:32:19,789 --> 00:32:24,559
taking all the time that's exactly what

633
00:32:22,069 --> 00:32:28,220
I had suggested would happen that's

634
00:32:24,559 --> 00:32:30,289
where the N squared comes in and so

635
00:32:28,220 --> 00:32:32,269
that's good that's exactly what we want

636
00:32:30,289 --> 00:32:35,119
to see because we know how to optimize

637
00:32:32,269 --> 00:32:36,920
that and we can trivially make that much

638
00:32:35,119 --> 00:32:38,629
much faster so as long as that continues

639
00:32:36,920 --> 00:32:40,009
to be the case with the sort that the

640
00:32:38,630 --> 00:32:42,290
only problem is building the sprite

641
00:32:40,009 --> 00:32:43,309
graph we're going to be happy campers

642
00:32:42,289 --> 00:32:44,420
because that means we're really not

643
00:32:43,309 --> 00:32:45,799
going to have to worry too much when it

644
00:32:44,420 --> 00:32:47,570
comes time to optimize it we know

645
00:32:45,799 --> 00:32:52,789
exactly what we need to do if that

646
00:32:47,569 --> 00:32:55,009
changes what's not so good all right so

647
00:32:52,789 --> 00:32:57,200
I'm trying to see here like do any of

648
00:32:55,009 --> 00:32:58,819
these ever render wrong or all of the

649
00:32:57,200 --> 00:33:06,549
backgrounds rendering correctly at the

650
00:32:58,819 --> 00:33:10,960
moment I mean that all looks real good

651
00:33:06,549 --> 00:33:10,960
not seeing a lot of errors here

652
00:33:13,470 --> 00:33:16,850
and i'm not sure why

653
00:33:23,420 --> 00:33:42,320
come on Krampus now Krampus is rendered

654
00:33:27,319 --> 00:33:46,490
correctly it looks like well hmm all

655
00:33:42,319 --> 00:33:49,639
right uh well unfortunately you know

656
00:33:46,490 --> 00:33:51,470
those are working and I guess it's weird

657
00:33:49,640 --> 00:33:54,950
to say that unfortunately it's working

658
00:33:51,470 --> 00:33:57,140
but you know that's what can I say I

659
00:33:54,950 --> 00:33:59,090
guess one thing i could do is see if

660
00:33:57,140 --> 00:34:01,520
it's dependent on the ordering in here

661
00:33:59,089 --> 00:34:04,189
you know i could go ahead and say well

662
00:34:01,519 --> 00:34:07,190
you know if we've got intro layers one

663
00:34:04,190 --> 00:34:09,139
or whatever it is here what if I you

664
00:34:07,190 --> 00:34:12,289
know / muted the order a little bit here

665
00:34:09,139 --> 00:34:14,750
so what if i took and i moved eight you

666
00:34:12,289 --> 00:34:16,369
know up to the front is it just

667
00:34:14,750 --> 00:34:18,260
rendering is it because they happen to

668
00:34:16,369 --> 00:34:21,849
already be in the correct sort order is

669
00:34:18,260 --> 00:34:25,760
that why it's rendering them properly

670
00:34:21,849 --> 00:34:29,269
you know or or what's happening okay so

671
00:34:25,760 --> 00:34:33,350
so that's good so it looks like our sort

672
00:34:29,269 --> 00:34:34,759
is just a little busted right now and

673
00:34:33,349 --> 00:34:37,219
it's not doing what's supposed to do

674
00:34:34,760 --> 00:34:38,330
because you can see here it just it was

675
00:34:37,219 --> 00:34:39,829
just because these have to be in the

676
00:34:38,329 --> 00:34:41,269
right order I had a hunt that might be

677
00:34:39,829 --> 00:34:43,460
the case that's why I tried that and

678
00:34:41,269 --> 00:34:45,199
turns out I was right so that's great

679
00:34:43,460 --> 00:34:47,090
now we have a case where we can actually

680
00:34:45,199 --> 00:34:49,609
take a look at what's happening in the

681
00:34:47,090 --> 00:34:51,860
code that's very simple I can also go in

682
00:34:49,610 --> 00:34:55,160
and turn off handmade internal so I can

683
00:34:51,860 --> 00:34:58,160
go into the build up at I can turn off

684
00:34:55,159 --> 00:35:00,230
sort of our debug code right and what

685
00:34:58,159 --> 00:35:02,500
that means is now we're in a really nice

686
00:35:00,230 --> 00:35:05,090
situation because now when I'm running

687
00:35:02,500 --> 00:35:08,559
the number of things on the screen right

688
00:35:05,090 --> 00:35:11,090
now is really tiny right it's just a few

689
00:35:08,559 --> 00:35:13,460
bitmaps that I know are being blit in

690
00:35:11,090 --> 00:35:14,930
the right wrong order so I can set a

691
00:35:13,460 --> 00:35:17,269
breakpoint here and i can probably

692
00:35:14,929 --> 00:35:19,879
actually step through all eight of these

693
00:35:17,269 --> 00:35:21,769
things and see what the values are and

694
00:35:19,880 --> 00:35:23,960
just figure out whether we're making

695
00:35:21,769 --> 00:35:28,159
correct determinations about them or not

696
00:35:23,960 --> 00:35:31,329
right so let's take a look at what we

697
00:35:28,159 --> 00:35:31,329
actually see here

698
00:35:32,800 --> 00:35:39,530
so here we have an A and a B now we know

699
00:35:36,349 --> 00:35:45,019
that these two are going to to overlap

700
00:35:39,530 --> 00:35:46,670
each other I believe what's a little bit

701
00:35:45,019 --> 00:35:51,889
weird is they both look like they have

702
00:35:46,670 --> 00:35:53,740
the exact same screen area which I'll be

703
00:35:51,889 --> 00:35:58,608
honest doesn't make sense to me Oh

704
00:35:53,739 --> 00:36:02,829
fantastic well this is probably has

705
00:35:58,608 --> 00:36:06,440
nothing to do with anything bug wise oh

706
00:36:02,829 --> 00:36:08,059
well actually it might but that's just a

707
00:36:06,440 --> 00:36:09,019
we have a comparison by their you're

708
00:36:08,059 --> 00:36:11,389
never really supposed to compare

709
00:36:09,019 --> 00:36:13,789
something to itself and yet we totally

710
00:36:11,389 --> 00:36:15,858
were do you see how this we wrote this

711
00:36:13,789 --> 00:36:23,090
year we got new index a goes from zero

712
00:36:15,858 --> 00:36:25,400
to the input node count well we started

713
00:36:23,090 --> 00:36:26,750
off by comparing a with itself right we

714
00:36:25,400 --> 00:36:30,380
take whatever the indexes that we're on

715
00:36:26,750 --> 00:36:31,489
and we're going to make no BB that so

716
00:36:30,380 --> 00:36:32,960
we're going to ask whether a thing

717
00:36:31,489 --> 00:36:34,489
intersects itself and we're going to get

718
00:36:32,960 --> 00:36:36,829
back yes and we're going to add an in

719
00:36:34,489 --> 00:36:39,649
front of edge in one direction or the

720
00:36:36,829 --> 00:36:41,989
other from a node to itself that

721
00:36:39,650 --> 00:36:44,990
actually creates an immediate cycle and

722
00:36:41,989 --> 00:36:45,949
is a problem so you know that actually

723
00:36:44,989 --> 00:36:48,289
is saying we need to fix immediately

724
00:36:45,949 --> 00:36:53,149
that's definitely a bug and not a good

725
00:36:48,289 --> 00:36:55,489
and a bad one right not great not good

726
00:36:53,150 --> 00:36:57,530
so now let me just see what happens just

727
00:36:55,489 --> 00:37:01,519
why I now know also what our target is

728
00:36:57,530 --> 00:37:03,920
okay so same problem no change so that's

729
00:37:01,519 --> 00:37:05,480
good but now at least I should be able

730
00:37:03,920 --> 00:37:07,700
to look at an A and a B and C that

731
00:37:05,480 --> 00:37:11,030
they're different and they are which is

732
00:37:07,699 --> 00:37:13,368
what I wanted to see so we should know

733
00:37:11,030 --> 00:37:16,820
just like I'll verify this with a sort

734
00:37:13,369 --> 00:37:22,460
key but what we should see here is and

735
00:37:16,820 --> 00:37:25,039
we do we should see that B is well okay

736
00:37:22,460 --> 00:37:31,690
so let me take you back to this code

737
00:37:25,039 --> 00:37:34,690
here where where is it at there it is

738
00:37:31,690 --> 00:37:34,690
okay

739
00:37:37,150 --> 00:37:43,639
so I guess one thing that's a little bit

740
00:37:41,119 --> 00:37:45,349
confusing here is if these are rendered

741
00:37:43,639 --> 00:37:47,750
in order meaning if we go through and

742
00:37:45,349 --> 00:37:50,720
put them in order we push from the back

743
00:37:47,750 --> 00:37:54,980
of the stack down the render stack down

744
00:37:50,719 --> 00:37:57,169
to create our sort keys so it means that

745
00:37:54,980 --> 00:38:00,048
we're probably going to see this guy and

746
00:37:57,170 --> 00:38:01,250
this guy in order right the first person

747
00:38:00,048 --> 00:38:04,730
we're going to see is this second person

748
00:38:01,250 --> 00:38:08,509
to see is this so actually this guy is

749
00:38:04,730 --> 00:38:10,490
not involved in the sort right now in

750
00:38:08,509 --> 00:38:12,108
this comparison I think it's going to be

751
00:38:10,489 --> 00:38:16,189
these two guys right that's my

752
00:38:12,108 --> 00:38:17,960
assumption anyway but so if we see them

753
00:38:16,190 --> 00:38:20,630
we know that the way that we wanted

754
00:38:17,960 --> 00:38:22,880
these things sorted was we want the the

755
00:38:20,630 --> 00:38:24,980
higher Z values right the things because

756
00:38:22,880 --> 00:38:26,930
the whys aren't really that relevant in

757
00:38:24,980 --> 00:38:29,798
this case so we're taking a look

758
00:38:26,929 --> 00:38:32,179
strictly at Z values here presumably

759
00:38:29,798 --> 00:38:35,869
although I guess the other thing that we

760
00:38:32,179 --> 00:38:38,328
have to figure out here is are these set

761
00:38:35,869 --> 00:38:39,559
to to upright or not I assume they're

762
00:38:38,329 --> 00:38:40,970
going to be set to upright equals false

763
00:38:39,559 --> 00:38:45,140
but we can verify that in a second

764
00:38:40,969 --> 00:38:47,868
meaning are these Z sprites yes these

765
00:38:45,139 --> 00:38:51,230
are Z sprites so that's what we would

766
00:38:47,869 --> 00:38:53,539
have wanted so that's fine so we've got

767
00:38:51,230 --> 00:38:58,219
the Z Max's for these two guys one is

768
00:38:53,539 --> 00:38:59,990
negative 39 1 is negative 29 and so what

769
00:38:58,219 --> 00:39:02,989
we want to see in this case is we want

770
00:38:59,989 --> 00:39:05,838
to see the higher z-value be in front so

771
00:39:02,989 --> 00:39:08,659
a is the higher z value we want to see a

772
00:39:05,838 --> 00:39:11,750
be the thing that want a to come out in

773
00:39:08,659 --> 00:39:14,000
front we want to see them intersect they

774
00:39:11,750 --> 00:39:16,068
do so that's good we take the two

775
00:39:14,000 --> 00:39:19,130
indices we say a's and front bees and

776
00:39:16,068 --> 00:39:22,400
back at the moment that happens to be

777
00:39:19,130 --> 00:39:24,970
the correct sort order the initial guess

778
00:39:22,400 --> 00:39:29,568
so we don't want to swap them here and

779
00:39:24,969 --> 00:39:35,358
we don't so that's good we create a new

780
00:39:29,568 --> 00:39:38,630
edge we we push it on there we take a

781
00:39:35,358 --> 00:39:41,719
look at what the front whatever the

782
00:39:38,630 --> 00:39:45,380
fronts sprite actually is that's going

783
00:39:41,719 --> 00:39:48,288
to be node a and then we say well a is

784
00:39:45,380 --> 00:39:48,680
the one in front B is the one in back

785
00:39:48,289 --> 00:39:51,380
here

786
00:39:48,679 --> 00:39:53,449
her and then we say okay whoever was

787
00:39:51,380 --> 00:39:56,180
previously in the slot as the first edge

788
00:39:53,449 --> 00:39:58,399
in for the for the front most bright

789
00:39:56,179 --> 00:40:00,199
it's going to get replaced with our new

790
00:39:58,400 --> 00:40:03,980
edge and we're going to daisy-chain

791
00:40:00,199 --> 00:40:06,710
these on right so that looks roughly

792
00:40:03,980 --> 00:40:09,108
correct to me right and what we should

793
00:40:06,710 --> 00:40:12,139
see when we do this here is we should

794
00:40:09,108 --> 00:40:17,058
see only one time when is in front of

795
00:40:12,139 --> 00:40:18,230
fails and that's on the last one right

796
00:40:17,059 --> 00:40:28,700
that's when that's actually going to

797
00:40:18,230 --> 00:40:30,079
happen and there it is yep and so on

798
00:40:28,699 --> 00:40:32,659
this one it flips and that's because I

799
00:40:30,079 --> 00:40:34,339
changed the order of those guys and so

800
00:40:32,659 --> 00:40:35,719
now exactly the same thing is going to

801
00:40:34,338 --> 00:40:39,730
happen here right we're just going to

802
00:40:35,719 --> 00:40:42,889
come through and do exactly the same bit

803
00:40:39,730 --> 00:40:45,318
where we create these edges and so

804
00:40:42,889 --> 00:40:48,588
that's all fine I you know it's not the

805
00:40:45,318 --> 00:40:51,050
best it's an N squared blowout of stuff

806
00:40:48,588 --> 00:40:53,318
like I said but you know that's the part

807
00:40:51,050 --> 00:40:57,470
that will have to add that will have to

808
00:40:53,318 --> 00:40:58,730
make better later so once we create

809
00:40:57,469 --> 00:41:02,169
those it looks like we're putting the

810
00:40:58,730 --> 00:41:04,490
correct edges in there for the most part

811
00:41:02,170 --> 00:41:06,559
so I think the next thing to do is to

812
00:41:04,489 --> 00:41:08,838
take a look at what happens when we walk

813
00:41:06,559 --> 00:41:15,920
the graph to figure out why we're not

814
00:41:08,838 --> 00:41:18,139
getting what we expect to get right so

815
00:41:15,920 --> 00:41:21,980
here we go I'm going to go into walk

816
00:41:18,139 --> 00:41:23,808
sprite graph we're going to prep our

817
00:41:21,980 --> 00:41:25,280
things like you know preparing the out

818
00:41:23,809 --> 00:41:27,290
index array we haven't put anything in

819
00:41:25,280 --> 00:41:28,548
it yet we're going to step through here

820
00:41:27,289 --> 00:41:31,219
we're going to start with the first node

821
00:41:28,548 --> 00:41:32,809
we're going to call recursive walk we're

822
00:41:31,219 --> 00:41:34,308
going to verify that we haven't visited

823
00:41:32,809 --> 00:41:39,579
it and then we're going to say that we

824
00:41:34,309 --> 00:41:44,420
have visited it right now this first

825
00:41:39,579 --> 00:41:50,059
this first person here shouldn't have

826
00:41:44,420 --> 00:41:51,559
any edges coming into it it should only

827
00:41:50,059 --> 00:41:54,920
have edges going out of it because it's

828
00:41:51,559 --> 00:41:58,220
the frontmost thing so presumably we we

829
00:41:54,920 --> 00:42:00,980
see an a you know a next edge with same

830
00:41:58,219 --> 00:42:02,480
front which we did we're going to want

831
00:42:00,980 --> 00:42:05,389
to walk to what

832
00:42:02,480 --> 00:42:06,769
the one is that's behind it and let's

833
00:42:05,389 --> 00:42:11,779
just take a look at what that index

834
00:42:06,769 --> 00:42:15,860
actually is all right here we are on

835
00:42:11,780 --> 00:42:17,230
zero if I step in we stepped into 6 this

836
00:42:15,860 --> 00:42:19,760
is exactly what we would have expected

837
00:42:17,230 --> 00:42:22,699
the reason for that is these get pushed

838
00:42:19,760 --> 00:42:25,940
on to that edge list so what we would

839
00:42:22,699 --> 00:42:30,489
expect there is that index six which is

840
00:42:25,940 --> 00:42:34,880
0 1 2 3 4 5 6 is this guy right here

841
00:42:30,489 --> 00:42:38,269
right now that guy shouldn't really have

842
00:42:34,880 --> 00:42:41,000
any there's nobody who's more behind

843
00:42:38,269 --> 00:42:43,340
than him so in theory he shouldn't have

844
00:42:41,000 --> 00:42:45,170
any edges and he doesn't so the first

845
00:42:43,340 --> 00:42:49,809
thing that we tell the renderer to draw

846
00:42:45,170 --> 00:42:53,059
right is whatever this guy's offset is

847
00:42:49,809 --> 00:42:54,469
if that makes sense so the first thing

848
00:42:53,059 --> 00:42:57,130
that we tell the render to draw is

849
00:42:54,469 --> 00:42:57,129
number 6

850
00:43:04,519 --> 00:43:12,110
although wait do I have that right yeah

851
00:43:19,139 --> 00:43:26,969
I mean that seems correct alright so the

852
00:43:25,739 --> 00:43:31,799
first thing that we tell it to draw is

853
00:43:26,969 --> 00:43:33,719
number six we then do another recursive

854
00:43:31,800 --> 00:43:36,240
walk and this time we've got five now

855
00:43:33,719 --> 00:43:39,419
five should have an edge that goes to

856
00:43:36,239 --> 00:43:41,429
six potentially which is what it does

857
00:43:39,420 --> 00:43:45,090
however six has already been visited so

858
00:43:41,429 --> 00:43:49,440
we skip it right so now we're going to

859
00:43:45,090 --> 00:43:51,390
write five in there this is looking

860
00:43:49,440 --> 00:43:54,210
eerily like it's working correctly so

861
00:43:51,389 --> 00:43:55,949
I'm a little confused as to why we're

862
00:43:54,210 --> 00:43:59,670
seeing the results that we are seeing

863
00:43:55,949 --> 00:44:03,589
again it'll skip six here so you know

864
00:43:59,670 --> 00:44:07,440
that that looks naively like it did

865
00:44:03,590 --> 00:44:08,910
roughly the correct thing all of these

866
00:44:07,440 --> 00:44:11,010
guys should now actually be drawn so

867
00:44:08,909 --> 00:44:13,319
it'll skip all of these because

868
00:44:11,010 --> 00:44:17,460
everything is overlapping so the first

869
00:44:13,320 --> 00:44:20,039
graph walk does the correct thing and

870
00:44:17,460 --> 00:44:35,670
similarly if I look now it out index

871
00:44:20,039 --> 00:44:37,320
array oops I guess there's not really a

872
00:44:35,670 --> 00:44:41,309
lot of way that I can tell exactly what

873
00:44:37,320 --> 00:44:42,420
that is but yeah I I think that does go

874
00:44:41,309 --> 00:44:43,679
in the order that i would expect because

875
00:44:42,420 --> 00:44:47,820
they're going to go in increasing order

876
00:44:43,679 --> 00:44:53,129
right except for the last one which we

877
00:44:47,820 --> 00:44:56,010
moved right which is this guy so that

878
00:44:53,130 --> 00:45:02,340
looks exactly like what I would have

879
00:44:56,010 --> 00:45:09,090
expected like exactly so I have to admit

880
00:45:02,340 --> 00:45:11,760
I'm a little confused about why I'm

881
00:45:09,090 --> 00:45:18,019
getting weird results there that looks

882
00:45:11,760 --> 00:45:18,020
like a correct ordered sort to me and

883
00:45:24,248 --> 00:45:33,828
and I'm not sure I'm not sure where I

884
00:45:30,619 --> 00:45:35,539
went wrong so I gotta have to push

885
00:45:33,829 --> 00:45:39,259
forward a little bit maybe I'll see

886
00:45:35,539 --> 00:45:40,880
something in here I hope so i don't want

887
00:45:39,259 --> 00:45:45,318
to have to leave this as a cliffhanger

888
00:45:40,880 --> 00:45:57,710
for the weekend let's take a look at the

889
00:45:45,318 --> 00:46:01,909
sordid indices array yeah so again that

890
00:45:57,710 --> 00:46:03,588
looks that looks pretty good right i

891
00:46:01,909 --> 00:46:06,199
mean that looks to me like what i would

892
00:46:03,588 --> 00:46:14,719
expect I come through here and I say all

893
00:46:06,199 --> 00:46:18,368
right what's the what's the entry we're

894
00:46:14,719 --> 00:46:18,368
on I'm going to take

895
00:46:27,610 --> 00:46:35,740
that's not what I expected to see and 30

896
00:46:33,219 --> 00:46:40,889
because we overload entry here that's a

897
00:46:35,739 --> 00:46:40,889
little bit of a bizarre catch but okay

898
00:46:41,309 --> 00:46:55,570
there's that entry is 512 168 224 283 36

899
00:46:48,809 --> 00:47:01,929
so those all look you know that that all

900
00:46:55,570 --> 00:47:05,320
looks quite good to me so that is that

901
00:47:01,929 --> 00:47:07,480
is quite puzzling because that looked

902
00:47:05,320 --> 00:47:11,860
like everything was working correctly so

903
00:47:07,480 --> 00:47:16,900
I think we're gonna have to step it up a

904
00:47:11,860 --> 00:47:21,160
notch because I'm clearly wrong about

905
00:47:16,900 --> 00:47:23,500
that and I'm going to need some way of

906
00:47:21,159 --> 00:47:27,250
labeling these things in a way that I

907
00:47:23,500 --> 00:47:29,619
can more clearly tell what's going on so

908
00:47:27,250 --> 00:47:34,090
we did have a way of doing this if I

909
00:47:29,619 --> 00:47:43,679
remember correctly when we do our render

910
00:47:34,090 --> 00:47:43,680
entries and where were those let's see

911
00:47:58,929 --> 00:48:06,858
so inside here we did have a thing for

912
00:48:03,170 --> 00:48:10,188
debug tagging right when we do handmade

913
00:48:06,858 --> 00:48:11,778
slow and I don't really know that we

914
00:48:10,188 --> 00:48:13,608
have anything in particular right now

915
00:48:11,778 --> 00:48:20,778
that we are putting in the debug tag

916
00:48:13,608 --> 00:48:23,328
though but we can we set a group debug

917
00:48:20,778 --> 00:48:27,139
tagged as we go so what I'm going to do

918
00:48:23,329 --> 00:48:31,309
inside the intro layers bit here is I'm

919
00:48:27,139 --> 00:48:34,969
going to go ahead and just verify what

920
00:48:31,309 --> 00:48:36,798
these all are by when we actually let's

921
00:48:34,969 --> 00:48:42,048
see where they are update play intro

922
00:48:36,798 --> 00:48:43,338
cutscene rendered layered scene so here

923
00:48:42,048 --> 00:48:46,548
is our rendering where we loop through

924
00:48:43,338 --> 00:48:50,900
each of the scene layers and do our

925
00:48:46,548 --> 00:48:52,909
little dance right what I want to do

926
00:48:50,900 --> 00:48:56,150
here is before we actually issue the

927
00:48:52,909 --> 00:49:04,098
bitmap call I'm going to go ahead and

928
00:48:56,150 --> 00:49:08,269
set the render group debug tag not to

929
00:49:04,099 --> 00:49:10,969
equal the layer index just so I can

930
00:49:08,268 --> 00:49:14,629
verify that I actually know what it was

931
00:49:10,969 --> 00:49:21,849
right and so you know it starts at one

932
00:49:14,630 --> 00:49:27,769
and and so if I go back to my cut scene

933
00:49:21,849 --> 00:49:31,880
I can sort of say which one of these is

934
00:49:27,768 --> 00:49:36,169
which I can look at the debug tag for

935
00:49:31,880 --> 00:49:39,349
any entry and I can see you know I can

936
00:49:36,170 --> 00:49:40,699
see what it is if that makes sense now

937
00:49:39,349 --> 00:49:43,068
similarly that's going to be a little

938
00:49:40,699 --> 00:49:44,630
bit of a pain in the butt for us to read

939
00:49:43,068 --> 00:49:47,838
and the reason for that is because the

940
00:49:44,630 --> 00:49:51,979
sort key is not in a good place for that

941
00:49:47,838 --> 00:49:53,869
that makes sense because sorry should

942
00:49:51,978 --> 00:49:56,629
stay or key we're looking at the sort

943
00:49:53,869 --> 00:49:58,579
keys and we don't have access to the

944
00:49:56,630 --> 00:49:59,690
render group entry header in a

945
00:49:58,579 --> 00:50:01,640
convenient way at that

946
00:49:59,690 --> 00:50:04,550
point but what I can do pretty trivially

947
00:50:01,639 --> 00:50:06,368
there is I can just say like okay put

948
00:50:04,550 --> 00:50:10,220
the debug tag in both of these things

949
00:50:06,369 --> 00:50:12,650
right and so in the case where we're in

950
00:50:10,219 --> 00:50:14,179
the handmade slow path then when we're

951
00:50:12,650 --> 00:50:20,030
putting stuff in yer I can say well

952
00:50:14,179 --> 00:50:23,779
alright I you know keep the header and

953
00:50:20,030 --> 00:50:36,050
the entry so I can do it like this both

954
00:50:23,780 --> 00:50:38,089
having the debug tag there we go so now

955
00:50:36,050 --> 00:50:41,000
if i come through here i should be able

956
00:50:38,088 --> 00:50:43,369
to see this going again the same way but

957
00:50:41,000 --> 00:50:44,539
now the debug tags I think well let me

958
00:50:43,369 --> 00:50:48,349
make sure I'm in the right part of the

959
00:50:44,539 --> 00:50:49,519
scene here there we go now if i come

960
00:50:48,349 --> 00:50:52,039
through and I take a look at these I

961
00:50:49,519 --> 00:50:54,710
should be able to see the debug tags on

962
00:50:52,039 --> 00:50:56,690
them just to make sure so there's the

963
00:50:54,710 --> 00:50:58,190
debug tag of eight that's exactly what I

964
00:50:56,690 --> 00:50:59,300
thought I was going to see right

965
00:50:58,190 --> 00:51:03,108
remember I said I think they'll be in

966
00:50:59,300 --> 00:51:04,490
reverse order and so off we go I don't

967
00:51:03,108 --> 00:51:05,900
really care about this because i thought

968
00:51:04,489 --> 00:51:08,389
this function was working correctly so

969
00:51:05,900 --> 00:51:09,858
not to learn anything new by looking at

970
00:51:08,389 --> 00:51:11,239
that unfortunately at the moment so what

971
00:51:09,858 --> 00:51:14,469
I want to do is look at this when we

972
00:51:11,239 --> 00:51:17,779
actually go to build the output order I

973
00:51:14,469 --> 00:51:20,689
just want to see when i do the output

974
00:51:17,780 --> 00:51:22,849
what do I actually what order do I

975
00:51:20,690 --> 00:51:26,450
actually output in so here we're about

976
00:51:22,849 --> 00:51:28,490
to output somebody and so what I want to

977
00:51:26,449 --> 00:51:29,919
know is who is that somebody so the

978
00:51:28,489 --> 00:51:35,509
first thing that we're going to output

979
00:51:29,920 --> 00:51:42,139
debug tag wise is debug tag too so

980
00:51:35,510 --> 00:51:44,540
looking back here at the cutscene debug

981
00:51:42,139 --> 00:51:47,868
tag too would be this that's a perfectly

982
00:51:44,539 --> 00:51:50,179
reasonable choice give up tech 3 is this

983
00:51:47,869 --> 00:51:52,099
that's exactly what i thought four five

984
00:51:50,179 --> 00:51:56,989
six and when we get to the end we should

985
00:51:52,099 --> 00:52:03,160
output number eight right yeah I'm sorry

986
00:51:56,989 --> 00:52:03,159
numbers one yes

987
00:52:05,570 --> 00:52:16,380
so uh the only thing that I can think of

988
00:52:12,320 --> 00:52:24,570
well we'll we'll take a look at one more

989
00:52:16,380 --> 00:52:27,150
thing but so if I go ahead and run there

990
00:52:24,570 --> 00:52:27,930
we go we're still obviously not getting

991
00:52:27,150 --> 00:52:29,309
the correct drawer too though because

992
00:52:27,929 --> 00:52:32,579
I've just seeing this giant thing in my

993
00:52:29,309 --> 00:52:36,420
face so the question is what if we take

994
00:52:32,579 --> 00:52:37,739
a look at it the other way round so this

995
00:52:36,420 --> 00:52:40,349
is how it was before and it was

996
00:52:37,739 --> 00:52:42,899
rendering properly what does it out put

997
00:52:40,349 --> 00:52:47,130
in that case right because now we should

998
00:52:42,900 --> 00:52:49,500
see it out putting something something

999
00:52:47,130 --> 00:52:50,940
wrong I mean I mean we should be able to

1000
00:52:49,500 --> 00:52:53,039
see it out putting something other than

1001
00:52:50,940 --> 00:52:58,440
the draw out or we saw last time and so

1002
00:52:53,039 --> 00:53:00,300
let's take a look at that so the first

1003
00:52:58,440 --> 00:53:02,250
thing out well you know what I think we

1004
00:53:00,300 --> 00:53:04,950
might be in a in the gap initially let

1005
00:53:02,250 --> 00:53:07,860
me just make sure we get into the there

1006
00:53:04,949 --> 00:53:09,419
we go so the first thing in Ephesus new

1007
00:53:07,860 --> 00:53:16,349
book tag one that's what we expect two

1008
00:53:09,420 --> 00:53:19,079
three four five six seven eight so in

1009
00:53:16,349 --> 00:53:22,500
both cases it seems to be doing exactly

1010
00:53:19,079 --> 00:53:24,090
what I think it should be doing so again

1011
00:53:22,500 --> 00:53:25,769
this is almost like I talked about

1012
00:53:24,090 --> 00:53:27,420
yesterday this is one of those bugs

1013
00:53:25,769 --> 00:53:29,250
we're clearly one of my assumptions is

1014
00:53:27,420 --> 00:53:31,079
wrong because I have verified that the

1015
00:53:29,250 --> 00:53:32,969
code does exactly what I wanted the code

1016
00:53:31,079 --> 00:53:35,670
to do right I've looked at what the code

1017
00:53:32,969 --> 00:53:38,339
is doing and it does what I want so that

1018
00:53:35,670 --> 00:53:41,309
means there's something happening that's

1019
00:53:38,340 --> 00:53:43,829
probably relatively simple but that I am

1020
00:53:41,309 --> 00:53:45,690
not remembering or thinking about

1021
00:53:43,829 --> 00:53:47,940
correctly in terms of how the

1022
00:53:45,690 --> 00:53:50,250
surrounding code works such that what I

1023
00:53:47,940 --> 00:53:52,320
think the correct output of this code is

1024
00:53:50,250 --> 00:53:54,630
actually doesn't yield the correct

1025
00:53:52,320 --> 00:53:57,120
results right so i have to go kind of

1026
00:53:54,630 --> 00:53:58,710
figure out what that is and we're pretty

1027
00:53:57,119 --> 00:54:00,359
much out of time here but you know i'm

1028
00:53:58,710 --> 00:54:01,559
going to take out just a quick look now

1029
00:54:00,360 --> 00:54:05,809
that i've actually verified the best

1030
00:54:01,559 --> 00:54:05,809
case the interesting thing to me here is

1031
00:54:06,019 --> 00:54:13,820
sort of looking at how that sort is

1032
00:54:08,969 --> 00:54:16,169
operating what's interesting about it is

1033
00:54:13,820 --> 00:54:19,710
moving the things around

1034
00:54:16,170 --> 00:54:22,139
I'm wondering if my indexes are not what

1035
00:54:19,710 --> 00:54:24,240
I'm thinking they are quite correctly

1036
00:54:22,139 --> 00:54:29,818
right because if you think about how

1037
00:54:24,239 --> 00:54:32,368
this code is working I have this notion

1038
00:54:29,818 --> 00:54:34,079
of a sort sprite bound and that's the

1039
00:54:32,369 --> 00:54:35,338
thing that I'm actually sorting and at

1040
00:54:34,079 --> 00:54:37,650
this point it's gotten a little bit out

1041
00:54:35,338 --> 00:54:42,088
of hand like the offset blah blah blah

1042
00:54:37,650 --> 00:54:43,650
all that stuff to a certain extent I

1043
00:54:42,088 --> 00:54:45,210
think we can probably simplify this down

1044
00:54:43,650 --> 00:54:48,088
a little bit after we're done getting

1045
00:54:45,210 --> 00:54:49,798
this working but anyway I've got these

1046
00:54:48,088 --> 00:54:51,480
sorts bright bounds in those sorts of

1047
00:54:49,798 --> 00:54:55,949
right bounds where they're coming from

1048
00:54:51,480 --> 00:54:59,219
is inside the render group when we do a

1049
00:54:55,949 --> 00:55:00,868
push render element where's that at when

1050
00:54:59,219 --> 00:55:03,379
we do a push render element we push

1051
00:55:00,869 --> 00:55:06,298
these in pairs so I push the header I

1052
00:55:03,380 --> 00:55:08,910
put a push on like the the information

1053
00:55:06,298 --> 00:55:12,239
about the render the thing that needs to

1054
00:55:08,909 --> 00:55:14,159
get rendered and then i create the sort

1055
00:55:12,239 --> 00:55:17,879
sprite entry for it and its offset is

1056
00:55:14,159 --> 00:55:20,789
wherever the push buffer is at the

1057
00:55:17,880 --> 00:55:23,130
moment so it's wherever it's this right

1058
00:55:20,789 --> 00:55:27,960
it's where the it's where the the push

1059
00:55:23,130 --> 00:55:29,940
buffer actually goes so that's kind of a

1060
00:55:27,960 --> 00:55:31,380
index into it the thing you know

1061
00:55:29,940 --> 00:55:34,950
whatever I'm sorting that's that's

1062
00:55:31,380 --> 00:55:37,680
what's supposed to happen there right so

1063
00:55:34,949 --> 00:55:39,929
I've got all of those guys stacked up

1064
00:55:37,679 --> 00:55:42,108
and then when I come into the render

1065
00:55:39,929 --> 00:55:48,539
portion of things that I'm trying to

1066
00:55:42,108 --> 00:55:53,578
sort them all when I do my walk I'm I'm

1067
00:55:48,539 --> 00:55:57,119
sort of writing out the index of who at

1068
00:55:53,579 --> 00:55:59,269
whomever I'm ons whatever the offset is

1069
00:55:57,119 --> 00:56:01,680
that was recorded with that sprite bound

1070
00:55:59,269 --> 00:56:03,000
which is just a pointer you know it's

1071
00:56:01,679 --> 00:56:04,529
basically like an offset from the

1072
00:56:03,000 --> 00:56:05,849
beginning of the push buffer into the

1073
00:56:04,530 --> 00:56:09,990
the thing that actually needs to get

1074
00:56:05,849 --> 00:56:12,109
rendered right so what I'm trying to

1075
00:56:09,989 --> 00:56:15,259
figure out is since it looked to me like

1076
00:56:12,108 --> 00:56:19,529
changing the order in which those things

1077
00:56:15,260 --> 00:56:22,440
were changing the order of the of the of

1078
00:56:19,530 --> 00:56:25,650
pushing these things clearly change the

1079
00:56:22,440 --> 00:56:27,809
result the out the rendered result but

1080
00:56:25,650 --> 00:56:29,778
did not appear to actually change the

1081
00:56:27,809 --> 00:56:33,690
order in which I was drawing them

1082
00:56:29,778 --> 00:56:35,789
that was really pretty weird you know

1083
00:56:33,690 --> 00:56:37,588
what I mean I just I'm not sure I

1084
00:56:35,789 --> 00:56:50,579
understand how that was super possible

1085
00:56:37,588 --> 00:56:54,599
uh very very confusing I know what it

1086
00:56:50,579 --> 00:56:57,720
was right these don't actually contain

1087
00:56:54,599 --> 00:57:00,420
the bitmap IDs so that's actually pretty

1088
00:56:57,719 --> 00:57:02,909
basic yeah so moving this here just

1089
00:57:00,420 --> 00:57:04,680
means that this lip yet okay that makes

1090
00:57:02,909 --> 00:57:06,420
perfect sense since I don't put the

1091
00:57:04,679 --> 00:57:07,949
bitmap IDs in here they just correspond

1092
00:57:06,420 --> 00:57:09,869
directly to the thing that's in the file

1093
00:57:07,949 --> 00:57:11,788
moving this here just basically had the

1094
00:57:09,869 --> 00:57:15,900
effect of making all the layers be the

1095
00:57:11,789 --> 00:57:19,799
wrong settings right so that's actually

1096
00:57:15,900 --> 00:57:21,720
not a test I can do fortunately doing

1097
00:57:19,798 --> 00:57:24,739
that test did make me verify that we

1098
00:57:21,719 --> 00:57:27,568
actually are doing the correct sorting

1099
00:57:24,739 --> 00:57:29,130
so I guess in some sense now I know the

1100
00:57:27,568 --> 00:57:30,778
sword is working at least nominally

1101
00:57:29,130 --> 00:57:32,599
properly for a bunch of things stacked

1102
00:57:30,778 --> 00:57:34,980
on top of each other it worked correctly

1103
00:57:32,599 --> 00:57:36,390
that doesn't really tell me why it's

1104
00:57:34,980 --> 00:57:39,088
failing in the more complex scene

1105
00:57:36,389 --> 00:57:41,190
unfortunately so I guess we're going to

1106
00:57:39,088 --> 00:57:43,498
have to move up a level of complexity

1107
00:57:41,190 --> 00:57:48,210
here and start to look at what happens

1108
00:57:43,498 --> 00:57:51,659
in a more complicated scenario no one

1109
00:57:48,210 --> 00:57:54,059
ever said it was going to be easy okay

1110
00:57:51,659 --> 00:57:56,129
so that's fine that's actually good I'm

1111
00:57:54,059 --> 00:57:59,579
I'm okay with that it took me a little

1112
00:57:56,130 --> 00:58:01,108
too long it's been one of those days it

1113
00:57:59,579 --> 00:58:02,579
stick it's taken me a little bit too

1114
00:58:01,108 --> 00:58:08,730
long perhaps to figure out that that's

1115
00:58:02,579 --> 00:58:10,099
not a cause for concern but I'm happy we

1116
00:58:08,730 --> 00:58:19,338
step through it and watched it work

1117
00:58:10,099 --> 00:58:23,309
correctly so I want to re-enable this

1118
00:58:19,338 --> 00:58:25,679
stuff but I need to set us up for next

1119
00:58:23,309 --> 00:58:26,579
week in order to because we want you

1120
00:58:25,679 --> 00:58:30,210
know we're going to want to leave

1121
00:58:26,579 --> 00:58:31,859
ourselves ready to go for next week

1122
00:58:30,210 --> 00:58:35,759
getting the getting the sort stuff to

1123
00:58:31,858 --> 00:58:37,858
bugged and sped up I want to trim out a

1124
00:58:35,759 --> 00:58:39,630
bunch of stuff so instead of you know

1125
00:58:37,858 --> 00:58:43,880
all those extra screens I'm just going

1126
00:58:39,630 --> 00:58:46,470
to do one screen first

1127
00:58:43,880 --> 00:58:49,588
because and this is what i assumed to

1128
00:58:46,469 --> 00:58:52,709
would be the case uh just on just as one

1129
00:58:49,588 --> 00:58:57,029
screen the sorting is wrong right so

1130
00:58:52,710 --> 00:59:00,780
hopefully we can now kind of do it you

1131
00:58:57,030 --> 00:59:03,359
know winnow away the number of things

1132
00:59:00,780 --> 00:59:07,920
that are going on here to make it so

1133
00:59:03,358 --> 00:59:11,730
that we can quickly test the sorting in

1134
00:59:07,920 --> 00:59:13,440
in some easier way right so if i look at

1135
00:59:11,730 --> 00:59:17,250
what's happening first of all i could do

1136
00:59:13,440 --> 00:59:19,740
some fairly straightforward stuff trying

1137
00:59:17,250 --> 00:59:23,179
to see here when we do add standard room

1138
00:59:19,739 --> 00:59:25,439
and add wall and all that stuff i'm

1139
00:59:23,179 --> 00:59:31,139
thinking maybe one thing i could do is

1140
00:59:25,440 --> 00:59:39,088
say well okay obviously i can i could if

1141
00:59:31,139 --> 00:59:46,019
zero out all this stuff so now we just

1142
00:59:39,088 --> 00:59:54,900
have the hero right and it also looks

1143
00:59:46,019 --> 00:59:57,599
like well i'm interested to know if i go

1144
00:59:54,900 --> 01:00:00,750
into a standard room and i remove all

1145
00:59:57,599 --> 01:00:05,150
the Z tiles I'm interested to know what

1146
01:00:00,750 --> 01:00:05,150
happens so let's see here

1147
01:00:19,010 --> 01:00:24,740
so in here while we are adding stuff if

1148
01:00:22,849 --> 01:00:28,159
I just say you know what don't ever

1149
01:00:24,739 --> 01:00:30,519
actually create any ground identities

1150
01:00:28,159 --> 01:00:30,519
please

1151
01:00:39,670 --> 01:00:43,659
that is not what I would have expected

1152
01:00:46,690 --> 01:00:52,090
so somehow there are no clip wrecks all

1153
01:00:49,639 --> 01:00:52,089
of a sudden

1154
01:00:59,409 --> 01:01:03,149
I'm not exactly sure why not

1155
01:01:10,179 --> 01:01:19,149
tell me more because the presumably

1156
01:01:17,170 --> 01:01:25,119
there should always be at least one clip

1157
01:01:19,150 --> 01:01:28,119
wrecked right or is it not the case that

1158
01:01:25,119 --> 01:01:39,519
we always push a clip wrecked on at the

1159
01:01:28,119 --> 01:01:42,279
outset well let's take a look so inside

1160
01:01:39,519 --> 01:01:45,849
handmade render group when we do begin

1161
01:01:42,280 --> 01:01:50,350
render group what do we do about clip

1162
01:01:45,849 --> 01:01:51,969
Rex and I guess the other question is is

1163
01:01:50,349 --> 01:01:57,119
clip Brecht serio something that we were

1164
01:01:51,969 --> 01:01:57,119
special casing before in some other way

1165
01:02:06,739 --> 01:02:11,459
so it does look like we always expect

1166
01:02:09,028 --> 01:02:15,179
there to be at least one clip wrecked

1167
01:02:11,460 --> 01:02:17,940
right and it looks like when we do

1168
01:02:15,179 --> 01:02:21,449
perspective or orthographic we always at

1169
01:02:17,940 --> 01:02:23,579
least push one clip wrecked on so I'm

1170
01:02:21,449 --> 01:02:25,858
not sure exactly why it that suggests

1171
01:02:23,579 --> 01:02:28,410
that nobody is ever actually calling

1172
01:02:25,858 --> 01:02:31,889
perspective orthographic so I'm kind of

1173
01:02:28,409 --> 01:02:34,170
interested to see since I know

1174
01:02:31,889 --> 01:02:36,808
perspective should be getting called how

1175
01:02:34,170 --> 01:02:38,400
did we end up with no clip Rex so there

1176
01:02:36,809 --> 01:02:40,380
is current clip rectangle X right we

1177
01:02:38,400 --> 01:02:41,849
push the clip wrecked on there come

1178
01:02:40,380 --> 01:02:51,240
through here and we do whatever it is

1179
01:02:41,849 --> 01:03:00,750
we're doing and we can even see what

1180
01:02:51,239 --> 01:03:02,699
would it be render group so where's the

1181
01:03:00,750 --> 01:03:04,318
commands there's the commands so you can

1182
01:03:02,699 --> 01:03:12,838
see the commands here here's the current

1183
01:03:04,318 --> 01:03:16,579
clip rekt count is 1 so when we come

1184
01:03:12,838 --> 01:03:16,578
through here let's let's go ahead and

1185
01:03:17,449 --> 01:03:23,818
skip to the end we've got eight clip Rex

1186
01:03:20,579 --> 01:03:26,509
we're going to come through here after

1187
01:03:23,818 --> 01:03:30,710
having done that and temporary memory

1188
01:03:26,509 --> 01:03:33,150
checking our arenas all is good their

1189
01:03:30,710 --> 01:03:38,130
output some sound not like we played

1190
01:03:33,150 --> 01:03:42,180
anything and then that works fine ok so

1191
01:03:38,130 --> 01:03:49,559
now what is it the second time through

1192
01:03:42,179 --> 01:03:53,389
that we crash I guess so I know that I'm

1193
01:03:49,559 --> 01:03:53,390
passing in the render commands here

1194
01:03:53,509 --> 01:03:59,269
they'll start out with no clip Rex right

1195
01:04:03,460 --> 01:04:07,789
so I guess what happens there is if I

1196
01:04:05,960 --> 01:04:10,550
remove everything that the hero could

1197
01:04:07,789 --> 01:04:13,699
possibly stand on I guess the hero can't

1198
01:04:10,550 --> 01:04:17,210
be added so we pop back out and I'm

1199
01:04:13,699 --> 01:04:19,399
assuming that means we sort of exit the

1200
01:04:17,210 --> 01:04:22,900
cutscene here and we end up in a state

1201
01:04:19,400 --> 01:04:22,900
where we do play title screen

1202
01:04:39,420 --> 01:04:44,769
and i'm not sure i don't i guess i don't

1203
01:04:42,849 --> 01:04:54,670
know why we would ever get a case where

1204
01:04:44,769 --> 01:04:56,469
nobody calls a clip rekt push like at

1205
01:04:54,670 --> 01:04:59,409
some point presumably someone is going

1206
01:04:56,469 --> 01:05:04,509
to call perspective but i guess maybe

1207
01:04:59,409 --> 01:05:07,298
not always and apparently that's that's

1208
01:05:04,510 --> 01:05:11,440
my bad that's on me update and render

1209
01:05:07,298 --> 01:05:12,579
title screen it does a clear here but

1210
01:05:11,440 --> 01:05:18,099
you know what's interesting it never

1211
01:05:12,579 --> 01:05:19,599
actually sets the screen does it it's

1212
01:05:18,099 --> 01:05:21,220
getting into render group from somebody

1213
01:05:19,599 --> 01:05:24,760
else so the question is that the render

1214
01:05:21,219 --> 01:05:26,469
group ever actually have like any kind

1215
01:05:24,760 --> 01:05:28,270
of orthographic anything called I guess

1216
01:05:26,469 --> 01:05:33,818
it doesn't so this is just a straight-up

1217
01:05:28,269 --> 01:05:35,949
bug actually I don't really love the way

1218
01:05:33,818 --> 01:05:38,588
that works I feel like that's really

1219
01:05:35,949 --> 01:05:43,719
error-prone I feel like to a certain

1220
01:05:38,588 --> 01:05:46,298
degree when we call begin render group

1221
01:05:43,719 --> 01:05:49,118
I'm not really sure I understand why

1222
01:05:46,298 --> 01:05:51,788
begin render droop can't be the thing

1223
01:05:49,119 --> 01:05:54,039
that takes the screen size right like I

1224
01:05:51,789 --> 01:05:57,730
don't really know why that is and if we

1225
01:05:54,039 --> 01:05:59,890
take a look at the pixel width stuff I

1226
01:05:57,730 --> 01:06:01,778
guess it's just because we didn't want

1227
01:05:59,889 --> 01:06:05,440
to save it but there's no real reason

1228
01:06:01,778 --> 01:06:08,349
why we can't save that information you

1229
01:06:05,440 --> 01:06:10,088
know what I mean so it kind of feels

1230
01:06:08,349 --> 01:06:12,460
like that wants to be something that

1231
01:06:10,088 --> 01:06:14,798
gets that just gets initialized properly

1232
01:06:12,460 --> 01:06:17,230
inside begin render group like it seems

1233
01:06:14,798 --> 01:06:18,548
like it seems like that wants to move

1234
01:06:17,230 --> 01:06:20,579
here so i think i'm just going to move

1235
01:06:18,548 --> 01:06:26,460
it here and see if there's any reason

1236
01:06:20,579 --> 01:06:26,460
why we can't do that if that makes sense

1237
01:06:35,869 --> 01:06:40,950
especially since the screen area never

1238
01:06:37,980 --> 01:06:42,420
actually changes right it's not like

1239
01:06:40,949 --> 01:06:43,798
that's something that changes depending

1240
01:06:42,420 --> 01:06:46,230
on which projection we're using the

1241
01:06:43,798 --> 01:06:48,509
screen area stays the screen area and so

1242
01:06:46,230 --> 01:06:50,250
here you know if these functions want to

1243
01:06:48,510 --> 01:06:53,220
know that piece of information well they

1244
01:06:50,250 --> 01:07:00,929
can get it pretty easily right it can

1245
01:06:53,219 --> 01:07:05,518
easily get the pixel width yeah or the

1246
01:07:00,929 --> 01:07:10,548
pixel height without really having to do

1247
01:07:05,518 --> 01:07:10,548
much work you can just say oh that's the

1248
01:07:10,818 --> 01:07:14,028
under group

1249
01:07:22,699 --> 01:07:33,739
like so yeah and I guess these don't

1250
01:07:30,750 --> 01:07:43,139
have any real reason not to be our tues

1251
01:07:33,739 --> 01:07:46,019
so that seems reasonable to me let's see

1252
01:07:43,139 --> 01:07:47,429
if the rest of the code agrees because I

1253
01:07:46,019 --> 01:07:50,670
don't know if it does and then

1254
01:07:47,429 --> 01:07:54,690
furthermore that means this can just

1255
01:07:50,670 --> 01:08:01,440
automatically do the push for clip the

1256
01:07:54,690 --> 01:08:04,260
push clip wrecked at the outset and now

1257
01:08:01,440 --> 01:08:06,769
we're not in an invalid state ever which

1258
01:08:04,260 --> 01:08:06,770
is much better

1259
01:08:13,690 --> 01:08:28,279
none of the three overloads oh is that

1260
01:08:18,319 --> 01:08:30,858
so better apparently not oh you were

1261
01:08:28,279 --> 01:08:34,130
talking about this weren't you here we

1262
01:08:30,859 --> 01:08:39,620
go um that doesn't need to happen

1263
01:08:34,130 --> 01:08:47,210
anymore so perspective now doesn't need

1264
01:08:39,619 --> 01:09:02,989
to do that orthographic doesn't need to

1265
01:08:47,210 --> 01:09:04,609
do that yeah and so we need oh well

1266
01:09:02,989 --> 01:09:09,079
that's right below us there we just need

1267
01:09:04,609 --> 01:09:15,050
render commands with so that just seems

1268
01:09:09,079 --> 01:09:16,909
better all around now we saw the fact

1269
01:09:15,050 --> 01:09:19,579
that I deleted everything that our hero

1270
01:09:16,909 --> 01:09:21,710
could possibly stand on which isn't

1271
01:09:19,579 --> 01:09:25,069
going to be good it's going to kick us

1272
01:09:21,710 --> 01:09:29,210
out of the main game code so that's a

1273
01:09:25,069 --> 01:09:32,539
problem but at least we found a bug in

1274
01:09:29,210 --> 01:09:34,699
the process you got to make things a

1275
01:09:32,539 --> 01:09:36,588
little cleaner now and then if I pop

1276
01:09:34,699 --> 01:09:38,420
back now to where we were doing this and

1277
01:09:36,588 --> 01:09:40,338
I go to add standard room I'm going to

1278
01:09:38,420 --> 01:09:42,170
go ahead and give our hero one thing to

1279
01:09:40,338 --> 01:09:45,380
stand on that's because I'm a very

1280
01:09:42,170 --> 01:09:47,600
generous person obviously I'm going to

1281
01:09:45,380 --> 01:09:48,949
let him stand on one thing so I'm going

1282
01:09:47,600 --> 01:09:54,820
to say well okay get rid of the else

1283
01:09:48,949 --> 01:09:58,059
Clause but given the one tile at 22 and

1284
01:09:54,819 --> 01:09:58,059
there we go

1285
01:09:58,140 --> 01:10:03,130
so the interesting thing to note and

1286
01:10:01,359 --> 01:10:06,670
this is why I wanted to run this test is

1287
01:10:03,130 --> 01:10:10,420
it appears that our sort is handling our

1288
01:10:06,670 --> 01:10:12,340
Y sprites just fine like you'll notice

1289
01:10:10,420 --> 01:10:15,640
the whole left and right side of the

1290
01:10:12,340 --> 01:10:20,069
screen the trees are all correct on the

1291
01:10:15,640 --> 01:10:22,410
other hand RZ sprites are all messed up

1292
01:10:20,069 --> 01:10:25,659
so that tells me a piece of information

1293
01:10:22,409 --> 01:10:26,979
that I wanted to know so i think we'll

1294
01:10:25,659 --> 01:10:30,250
be able to make a little bit more

1295
01:10:26,979 --> 01:10:34,799
progress on this pretty soon but i'm way

1296
01:10:30,250 --> 01:10:37,869
over time so I'm going to end it now ok

1297
01:10:34,800 --> 01:10:42,810
I don't sorry I don't really have much

1298
01:10:37,869 --> 01:10:46,149
time for Q&amp;A I am yeah I'm Way over time

1299
01:10:42,810 --> 01:10:48,570
but I'm glad we got that straightened

1300
01:10:46,149 --> 01:10:48,569
out there

1301
01:10:54,060 --> 01:11:00,039
alright so let's defer questions until

1302
01:10:57,850 --> 01:11:03,100
monday when i'll have a chance to kind

1303
01:11:00,039 --> 01:11:06,269
of go over things a little bit more but

1304
01:11:03,100 --> 01:11:08,170
it looks like everything is now in in

1305
01:11:06,270 --> 01:11:09,640
reasonable shape and i think the sword

1306
01:11:08,170 --> 01:11:12,039
is sort of working but i think we have

1307
01:11:09,640 --> 01:11:14,020
our z comparison a little bit wrong so i

1308
01:11:12,039 --> 01:11:17,640
think we should be able to kind of like

1309
01:11:14,020 --> 01:11:19,480
get that corrected it not too much time

1310
01:11:17,640 --> 01:11:20,950
anyway thank you very much for joining

1311
01:11:19,479 --> 01:11:22,389
me for another episode of handmade hero

1312
01:11:20,949 --> 01:11:25,389
it's been a pleasure coding with you as

1313
01:11:22,390 --> 01:11:27,910
always if you would like to follow along

1314
01:11:25,390 --> 01:11:29,770
with the series at home you can always

1315
01:11:27,909 --> 01:11:33,159
pre-order the game on handmade hero or

1316
01:11:29,770 --> 01:11:34,750
it comes with a source code and so if

1317
01:11:33,159 --> 01:11:38,409
you want to follow along that's a great

1318
01:11:34,750 --> 01:11:39,640
way to do it we also have forum site you

1319
01:11:38,409 --> 01:11:41,199
can go to if you want to ask questions a

1320
01:11:39,640 --> 01:11:43,210
patreon page if you want to support the

1321
01:11:41,199 --> 01:11:44,710
video series we also have a schedule

1322
01:11:43,210 --> 01:11:46,210
about the tweets schedule you and a past

1323
01:11:44,710 --> 01:11:49,569
episodes guide if you're trying to catch

1324
01:11:46,210 --> 01:11:51,730
up on old editions of the series will be

1325
01:11:49,569 --> 01:11:54,009
back here next week probably starting

1326
01:11:51,729 --> 01:11:55,750
Monday check the tweet bot if you do

1327
01:11:54,010 --> 01:11:57,520
want to know when that is until then

1328
01:11:55,750 --> 01:11:59,140
have fun programming and I will see you

1329
01:11:57,520 --> 01:12:01,320
guys on the internet take it easy

1330
01:11:59,140 --> 01:12:01,320
everyone

