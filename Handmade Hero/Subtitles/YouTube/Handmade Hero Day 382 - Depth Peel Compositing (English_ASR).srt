1
00:00:02,899 --> 00:00:06,870
hello everyone and welcome to handmade

2
00:00:05,429 --> 00:00:10,349
Hero the show we could a complete-game

3
00:00:06,870 --> 00:00:15,178
live on stream yesterday we implemented

4
00:00:10,349 --> 00:00:18,719
depth feeling and surprisingly I it all

5
00:00:15,179 --> 00:00:21,899
went very well so it took a lot less

6
00:00:18,719 --> 00:00:23,309
time than I thought it would because

7
00:00:21,899 --> 00:00:25,679
since we don't have the ability to debug

8
00:00:23,309 --> 00:00:26,849
the GPU on this machine I thought we

9
00:00:25,679 --> 00:00:28,528
were going to end up with a lot of

10
00:00:26,849 --> 00:00:29,969
blackbox debugging to get that working

11
00:00:28,528 --> 00:00:33,869
but it turned out really that wasn't the

12
00:00:29,969 --> 00:00:36,030
case at all however we do still have

13
00:00:33,869 --> 00:00:37,229
something to debug for today which is

14
00:00:36,030 --> 00:00:40,439
the parts that come back to the depth

15
00:00:37,229 --> 00:00:44,308
feeling which is the thing that

16
00:00:40,439 --> 00:00:47,369
composites the to depth feel results

17
00:00:44,308 --> 00:00:49,259
back together again into a final image

18
00:00:47,369 --> 00:00:52,288
that is the only thing that as far as I

19
00:00:49,259 --> 00:00:53,519
know anyway that we have now to get

20
00:00:52,289 --> 00:00:56,160
working that we didn't have working

21
00:00:53,520 --> 00:00:59,250
before and so that's what we're working

22
00:00:56,159 --> 00:01:01,078
on today this is going to be a black box

23
00:00:59,250 --> 00:01:02,520
debugging session though as I had feared

24
00:01:01,079 --> 00:01:05,010
we would have to do during the death

25
00:01:02,520 --> 00:01:06,210
feeling but didn't have to because again

26
00:01:05,010 --> 00:01:08,728
we don't have the ability to debug

27
00:01:06,209 --> 00:01:10,019
anything on this machine normally and

28
00:01:08,728 --> 00:01:11,039
that's okay because it's good to show

29
00:01:10,019 --> 00:01:14,340
this sort of thing because sometimes

30
00:01:11,040 --> 00:01:16,110
when you are programming if you are an

31
00:01:14,340 --> 00:01:18,240
engine programmer as is what we do on

32
00:01:16,109 --> 00:01:20,459
the stream it is not always the case

33
00:01:18,239 --> 00:01:22,469
that you have good tools a lot of times

34
00:01:20,459 --> 00:01:24,688
you may be given a development

35
00:01:22,469 --> 00:01:26,069
environment to work with on say a new

36
00:01:24,688 --> 00:01:28,529
console that's coming out or something

37
00:01:26,069 --> 00:01:31,589
like this where the state of the tools

38
00:01:28,530 --> 00:01:33,509
is very poor and you don't have a lot in

39
00:01:31,590 --> 00:01:35,250
the way of debugging and you just have

40
00:01:33,509 --> 00:01:37,590
to make do with what you have and so

41
00:01:35,250 --> 00:01:39,180
this is not well well it's not really

42
00:01:37,590 --> 00:01:40,920
the way you should go about doing GPU

43
00:01:39,180 --> 00:01:42,899
programming on the PC these days because

44
00:01:40,920 --> 00:01:46,640
you could just go buy an nvidia card and

45
00:01:42,899 --> 00:01:49,379
use insight to do your basic debugging

46
00:01:46,640 --> 00:01:51,060
it's not the case that this kind of

47
00:01:49,379 --> 00:01:52,859
debugging is dead forever or anything

48
00:01:51,060 --> 00:01:54,899
like that blackbox debugging is

49
00:01:52,859 --> 00:01:56,609
definitely the kind of thing that always

50
00:01:54,899 --> 00:01:58,409
come back and rears its ugly head and

51
00:01:56,609 --> 00:02:01,379
probably will for as long as we still

52
00:01:58,409 --> 00:02:02,969
have technological progress in the

53
00:02:01,379 --> 00:02:05,280
hardware space because the bottom line

54
00:02:02,968 --> 00:02:08,368
is tools don't always come online as

55
00:02:05,280 --> 00:02:10,050
quick as you might want and so at least

56
00:02:08,368 --> 00:02:12,389
when you're on the front lines of

57
00:02:10,050 --> 00:02:13,540
development you find yourself in

58
00:02:12,389 --> 00:02:15,669
positions where you have to do

59
00:02:13,539 --> 00:02:18,250
to debugging without real debugger is

60
00:02:15,669 --> 00:02:19,929
fairly often so that's the position we

61
00:02:18,250 --> 00:02:22,209
find ourselves in today but fortunately

62
00:02:19,930 --> 00:02:23,709
for us as I said the depth feeling part

63
00:02:22,209 --> 00:02:25,420
of things went relatively smoothly and

64
00:02:23,709 --> 00:02:27,370
that's probably the more complicated one

65
00:02:25,419 --> 00:02:29,139
to debug because here we are not

66
00:02:27,370 --> 00:02:30,908
comparing depth values or anything like

67
00:02:29,139 --> 00:02:32,318
that we're just dealing with taking two

68
00:02:30,908 --> 00:02:34,568
color buffers and merging them together

69
00:02:32,318 --> 00:02:36,729
so hopefully this will not be

70
00:02:34,568 --> 00:02:38,469
particularly complicated by comparison

71
00:02:36,729 --> 00:02:40,539
but again it will still be something we

72
00:02:38,469 --> 00:02:43,810
have to do in a blackbox fashion if

73
00:02:40,539 --> 00:02:44,289
you're starting to debugging with me

74
00:02:43,810 --> 00:02:47,229
today

75
00:02:44,289 --> 00:02:48,848
today is day 382 so you'll want to start

76
00:02:47,229 --> 00:02:51,429
with day 381 source code for this

77
00:02:48,848 --> 00:02:53,888
debugging let's go ahead and take a look

78
00:02:51,430 --> 00:02:57,280
at where we left things I can sort of

79
00:02:53,889 --> 00:02:59,139
show you the situation as it stands let

80
00:02:57,280 --> 00:03:05,109
me go ahead and open for coder up here

81
00:02:59,139 --> 00:03:07,750
and our project here we go and now I

82
00:03:05,109 --> 00:03:09,669
will run it and basically what we're

83
00:03:07,750 --> 00:03:12,549
seeing here is we just have a black

84
00:03:09,669 --> 00:03:14,650
screen if we actually run the final

85
00:03:12,549 --> 00:03:16,299
composite the way that it is currently

86
00:03:14,650 --> 00:03:18,549
written right that's the bug is we're

87
00:03:16,299 --> 00:03:21,069
not seeing anything so something is like

88
00:03:18,549 --> 00:03:23,139
just fundamental is wrong with that call

89
00:03:21,068 --> 00:03:25,358
now if we look and just to give you a

90
00:03:23,139 --> 00:03:27,340
refresher in case you don't remember or

91
00:03:25,359 --> 00:03:29,199
weren't here yesterday with where we're

92
00:03:27,340 --> 00:03:31,750
at we have produced two frame buffers

93
00:03:29,199 --> 00:03:33,579
and here is a blit of the first frame

94
00:03:31,750 --> 00:03:36,400
buffer that we have produced and what

95
00:03:33,579 --> 00:03:41,620
this is is it's just the frontmost pixel

96
00:03:36,400 --> 00:03:43,750
so using the Z buffer we feed all of the

97
00:03:41,620 --> 00:03:46,030
sprites and all of the ground cubes

98
00:03:43,750 --> 00:03:47,949
right we feed all those to the GPU we

99
00:03:46,030 --> 00:03:50,859
let it use the Z buffer to pick

100
00:03:47,949 --> 00:03:54,040
whichever one is closest and we just

101
00:03:50,859 --> 00:03:56,409
keep the closest so there is no blending

102
00:03:54,039 --> 00:03:59,500
happening here just the closest and you

103
00:03:56,408 --> 00:04:01,509
can see that the fringing the sort of

104
00:03:59,500 --> 00:04:03,669
black pixel fringing you can see where

105
00:04:01,509 --> 00:04:06,429
the shadows would be is all black right

106
00:04:03,669 --> 00:04:08,379
and that's because those are all alpha

107
00:04:06,430 --> 00:04:10,659
values they have an alpha of something

108
00:04:08,378 --> 00:04:12,039
but they're not blending and this is

109
00:04:10,658 --> 00:04:13,539
important that's what we wanted we

110
00:04:12,039 --> 00:04:15,280
wanted a frame buffer that just had the

111
00:04:13,539 --> 00:04:17,199
color values of the frontmost pixel and

112
00:04:15,280 --> 00:04:19,658
the Alpha value of the frontmost pixel

113
00:04:17,199 --> 00:04:23,978
so that's what's in frame buffer zero

114
00:04:19,658 --> 00:04:26,500
then frame buffer one is the other frame

115
00:04:23,978 --> 00:04:27,479
buffer reproduced and what that is is

116
00:04:26,500 --> 00:04:30,540
it's whatever

117
00:04:27,480 --> 00:04:33,000
the one pixel behind the front buffer

118
00:04:30,540 --> 00:04:34,500
pixel was so we render the scene twice

119
00:04:33,000 --> 00:04:36,509
you render it first to get that front

120
00:04:34,500 --> 00:04:39,930
pixel and then to get the pixel that's

121
00:04:36,509 --> 00:04:42,120
one behind whatever that front pixel was

122
00:04:39,930 --> 00:04:44,519
and you can see what that going on here

123
00:04:42,120 --> 00:04:46,530
you can see right here a good example of

124
00:04:44,519 --> 00:04:48,539
that here are those trees that we were

125
00:04:46,529 --> 00:04:52,019
seeing instead of seeing the trees we're

126
00:04:48,540 --> 00:04:54,840
seeing the ground plates behind the tree

127
00:04:52,019 --> 00:04:57,599
right and so we're seeing straight

128
00:04:54,839 --> 00:05:00,089
through the true where the trees outline

129
00:04:57,600 --> 00:05:03,060
was and then where the trees were not

130
00:05:00,089 --> 00:05:04,619
we're seeing beyond the ground right

131
00:05:03,060 --> 00:05:06,120
because the ground was there so now

132
00:05:04,620 --> 00:05:08,340
we're seeing what was behind the ground

133
00:05:06,120 --> 00:05:10,079
and so that's exactly what we wanted

134
00:05:08,339 --> 00:05:12,899
these two frame buffers look basically

135
00:05:10,079 --> 00:05:15,089
right they basically what I wanted and

136
00:05:12,899 --> 00:05:17,069
so now our challenge is to take these

137
00:05:15,089 --> 00:05:19,500
two frame buffers which appear to have

138
00:05:17,069 --> 00:05:22,079
been generated correctly and we need to

139
00:05:19,500 --> 00:05:24,149
merge them together so that we can

140
00:05:22,079 --> 00:05:25,919
output the final result which is the

141
00:05:24,149 --> 00:05:28,229
front buffer blended with a back buffer

142
00:05:25,920 --> 00:05:30,120
based on that front buffers alpha value

143
00:05:28,230 --> 00:05:32,910
that's all we're trying to do very very

144
00:05:30,120 --> 00:05:34,740
simple to texture blend where we take

145
00:05:32,910 --> 00:05:37,200
you know you might think of it as a

146
00:05:34,740 --> 00:05:39,240
decal blend basically we're taking one

147
00:05:37,199 --> 00:05:41,430
texture and stamping it on to the other

148
00:05:39,240 --> 00:05:43,410
texture using the alpha value of the

149
00:05:41,430 --> 00:05:45,120
first texture to determine how much

150
00:05:43,410 --> 00:05:47,670
blending there should be that's all

151
00:05:45,120 --> 00:05:50,990
we're doing we're not doing anything

152
00:05:47,670 --> 00:05:53,819
else so it's pretty straightforward but

153
00:05:50,990 --> 00:05:55,650
we've got some problems here what the

154
00:05:53,819 --> 00:05:58,199
first thing I quickly hacked within at

155
00:05:55,649 --> 00:05:59,519
the end of last stream so it's not like

156
00:05:58,199 --> 00:06:01,050
we spent a lot of time on it we may find

157
00:05:59,519 --> 00:06:04,199
that there was just some very basic

158
00:06:01,050 --> 00:06:06,000
simple mistake but we have to figure out

159
00:06:04,199 --> 00:06:09,599
what's going on so here's what we know

160
00:06:06,000 --> 00:06:12,660
so far we have set ourselves up to try

161
00:06:09,600 --> 00:06:15,629
and pull from two textures and draw a

162
00:06:12,660 --> 00:06:16,830
single full screen quad which is

163
00:06:15,629 --> 00:06:19,110
obviously going to get drawn as two

164
00:06:16,829 --> 00:06:22,649
triangle since graphics cards don't draw

165
00:06:19,110 --> 00:06:27,449
claws they draw triangles well most of

166
00:06:22,649 --> 00:06:28,829
the time of you cards have implicit

167
00:06:27,449 --> 00:06:30,329
rasterizes on them and I think nowadays

168
00:06:28,829 --> 00:06:31,319
you could probably draw a quad if you

169
00:06:30,329 --> 00:06:33,629
really wanted to I don't know how much

170
00:06:31,319 --> 00:06:35,939
they expose that but that's neither here

171
00:06:33,629 --> 00:06:37,589
nor there the point is simply that this

172
00:06:35,939 --> 00:06:39,029
will get drawn as two triangles we're

173
00:06:37,589 --> 00:06:40,288
outputting it as a triangle strip

174
00:06:39,029 --> 00:06:42,388
because there is no such thing

175
00:06:40,288 --> 00:06:45,058
I feel quads and modern OpenGL after you

176
00:06:42,389 --> 00:06:47,189
move away from compatibility mode they

177
00:06:45,059 --> 00:06:49,020
got rid of quads entirely I have no idea

178
00:06:47,189 --> 00:06:51,360
why they got rid of Kwas entirely I

179
00:06:49,019 --> 00:06:53,338
literally could not tell you all I can

180
00:06:51,360 --> 00:06:54,569
say is that they don't have anymore so

181
00:06:53,338 --> 00:06:56,728
we're drawing a triangle strip that

182
00:06:54,569 --> 00:07:00,210
triangle strip consists of the four

183
00:06:56,728 --> 00:07:01,949
corners of the screen and it's using a

184
00:07:00,209 --> 00:07:04,528
shader called peel composite which we

185
00:07:01,949 --> 00:07:06,718
wrote whose only job is to pull from

186
00:07:04,528 --> 00:07:08,459
these two textures that were the frame

187
00:07:06,718 --> 00:07:12,509
buffers we just looked at and draw them

188
00:07:08,459 --> 00:07:14,278
to the screen now what we know from from

189
00:07:12,509 --> 00:07:16,830
just a few experiments last time and I

190
00:07:14,278 --> 00:07:23,118
can show you this if I set the clear

191
00:07:16,829 --> 00:07:26,218
color here and clear the color buffer

192
00:07:23,119 --> 00:07:30,360
what we will see is that we do at least

193
00:07:26,218 --> 00:07:32,998
get a red screen and what that tells me

194
00:07:30,360 --> 00:07:34,348
at least for the most part because if I

195
00:07:32,999 --> 00:07:36,330
was to take like you know let's say I

196
00:07:34,348 --> 00:07:38,069
took this GL viewport call and again

197
00:07:36,329 --> 00:07:40,199
just we're just playing around this just

198
00:07:38,069 --> 00:07:43,379
to sort of make sure we know what we're

199
00:07:40,199 --> 00:07:45,689
doing here if I was to sort of play with

200
00:07:43,379 --> 00:07:47,158
this call I just want to see it's the

201
00:07:45,689 --> 00:07:49,680
viewport because I don't know if the

202
00:07:47,158 --> 00:07:50,819
viewport the GL clear actually believes

203
00:07:49,680 --> 00:07:53,069
the viewport and it looks like it

204
00:07:50,819 --> 00:07:54,809
doesn't if I remember correctly and I

205
00:07:53,069 --> 00:07:57,088
don't know if I really do

206
00:07:54,809 --> 00:07:59,519
the only way to get clearing to respect

207
00:07:57,088 --> 00:08:02,908
the viewport is to actually have GL

208
00:07:59,519 --> 00:08:04,439
scissor enabled so if I want to play

209
00:08:02,908 --> 00:08:08,218
around with that I would have to sort of

210
00:08:04,439 --> 00:08:10,860
play with these two here and and put a

211
00:08:08,218 --> 00:08:15,899
scissor on as well so let's go ahead and

212
00:08:10,860 --> 00:08:18,658
see what that does here okay so lets me

213
00:08:15,899 --> 00:08:20,639
go ahead and let me divide the whip here

214
00:08:18,658 --> 00:08:22,408
just to see because i want to i want to

215
00:08:20,639 --> 00:08:24,449
make sure we know where our viewport

216
00:08:22,408 --> 00:08:25,978
actually is and that our viewport is

217
00:08:24,449 --> 00:08:28,709
correct because i don't know if it is or

218
00:08:25,978 --> 00:08:32,278
it isn't okay so what i want to do here

219
00:08:28,709 --> 00:08:38,668
is i just want to ensure that there's

220
00:08:32,278 --> 00:08:40,860
some sort of semblance anyway of of an

221
00:08:38,668 --> 00:08:43,228
understanding that we're setting the

222
00:08:40,860 --> 00:08:45,839
viewport correctly so what i'm doing

223
00:08:43,229 --> 00:08:47,579
here is i'm just playing with the

224
00:08:45,839 --> 00:08:49,620
parameters to the viewport and scissor

225
00:08:47,578 --> 00:08:54,059
call because i want to see that we've

226
00:08:49,620 --> 00:08:56,730
got that viewport set up properly right

227
00:08:54,059 --> 00:08:58,289
and that did i black solutely type

228
00:08:56,730 --> 00:09:03,870
written for one of those I think I may

229
00:08:58,289 --> 00:09:08,309
have so there's Jill scissor through our

230
00:09:03,870 --> 00:09:12,629
region min I take let me just back out

231
00:09:08,309 --> 00:09:14,849
here a little bit go at should be like

232
00:09:12,629 --> 00:09:20,070
that I don't know why I type divided by

233
00:09:14,850 --> 00:09:22,290
four there nobody knows so that's what I

234
00:09:20,070 --> 00:09:25,010
wanted to see again this is just me

235
00:09:22,289 --> 00:09:27,360
because you know black box debugging

236
00:09:25,009 --> 00:09:28,500
everything is on the table we don't know

237
00:09:27,360 --> 00:09:30,720
what's wrong right

238
00:09:28,500 --> 00:09:32,220
I know I've made a mistake somewhere or

239
00:09:30,720 --> 00:09:34,200
there's a driver bug some Eric we don't

240
00:09:32,220 --> 00:09:35,490
even know if it's our mistake but it's

241
00:09:34,200 --> 00:09:36,870
probably our mistake because we're not

242
00:09:35,490 --> 00:09:38,730
doing anything particularly complicated

243
00:09:36,870 --> 00:09:41,399
right but either way doesn't matter

244
00:09:38,730 --> 00:09:43,139
there is a mistake somewhere ours or

245
00:09:41,399 --> 00:09:44,909
theirs we don't know anything about

246
00:09:43,139 --> 00:09:47,009
where it is so I'm just starting from

247
00:09:44,909 --> 00:09:49,139
first principles and going okay let me

248
00:09:47,009 --> 00:09:51,689
verify that I even know where I am

249
00:09:49,139 --> 00:09:54,539
drawing to so with the with a clear of

250
00:09:51,690 --> 00:09:56,640
read of the color buffer bit and a

251
00:09:54,539 --> 00:09:58,829
viewport plus a scissor I can guarantee

252
00:09:56,639 --> 00:10:00,779
that now I at least know what the

253
00:09:58,830 --> 00:10:02,490
boundaries of the drawing region are

254
00:10:00,779 --> 00:10:04,919
because when I was seeing the whole

255
00:10:02,490 --> 00:10:08,100
screen red I had no way of knowing

256
00:10:04,919 --> 00:10:10,110
whether I was just seeing like a giant

257
00:10:08,100 --> 00:10:11,850
viewport that extended way beyond the

258
00:10:10,110 --> 00:10:13,649
screen and that we're just clearing a

259
00:10:11,850 --> 00:10:14,970
small portion of it or whether I was

260
00:10:13,649 --> 00:10:16,379
actually looking at the whole screen it

261
00:10:14,970 --> 00:10:18,120
looks like it was correct that the

262
00:10:16,379 --> 00:10:21,419
viewport was just the screen I'm going

263
00:10:18,120 --> 00:10:23,519
to leave these in place and just try to

264
00:10:21,419 --> 00:10:29,849
get the draw working to that smaller

265
00:10:23,519 --> 00:10:32,879
area for the time being okay so I want

266
00:10:29,850 --> 00:10:34,920
to look at a couple things here but

267
00:10:32,879 --> 00:10:36,840
again the first first things first I'm

268
00:10:34,919 --> 00:10:39,269
going to switch this clear now over to

269
00:10:36,840 --> 00:10:41,790
blue so that when it clears it's going

270
00:10:39,269 --> 00:10:43,829
to going to show blue and then I'm going

271
00:10:41,789 --> 00:10:45,209
to use red as the color that I draw in

272
00:10:43,830 --> 00:10:47,850
the shader so I'm going to pop over to

273
00:10:45,210 --> 00:10:50,700
the shader now and I'm going to I'm

274
00:10:47,850 --> 00:10:52,259
going to simplify the shader down until

275
00:10:50,700 --> 00:10:53,670
I know that the shader does literally

276
00:10:52,259 --> 00:10:55,799
nothing oops

277
00:10:53,669 --> 00:10:57,360
I'm in the wrong file till I know that

278
00:10:55,799 --> 00:10:59,579
the shader does literally nothing but

279
00:10:57,360 --> 00:11:02,009
draw red right I don't want the shader

280
00:10:59,580 --> 00:11:02,730
to do anything basically other than

281
00:11:02,009 --> 00:11:06,208
output

282
00:11:02,730 --> 00:11:07,740
bright red okay

283
00:11:06,208 --> 00:11:10,319
so what I want to do here is say alright

284
00:11:07,740 --> 00:11:12,299
let's make sure that we are always

285
00:11:10,320 --> 00:11:13,709
drawing pure red out and it looks like

286
00:11:12,299 --> 00:11:15,838
that's basically what we're doing here

287
00:11:13,708 --> 00:11:17,250
but I want to be even more explicit

288
00:11:15,839 --> 00:11:18,870
about it so what I'm going to do is I'm

289
00:11:17,250 --> 00:11:21,389
going to go and I'm getting completely

290
00:11:18,870 --> 00:11:24,600
Nerf everything in the shader so there's

291
00:11:21,389 --> 00:11:26,250
literally nothing in the shader now and

292
00:11:24,600 --> 00:11:30,120
then what I'm going to do is I'm going

293
00:11:26,250 --> 00:11:33,750
to set the shader explicitly to a full

294
00:11:30,120 --> 00:11:35,879
alpha red color and that result color is

295
00:11:33,750 --> 00:11:38,399
the only out we put so it should just

296
00:11:35,879 --> 00:11:40,559
draw pure red and if we go up here and

297
00:11:38,399 --> 00:11:42,019
look at the vertex shader the vertex

298
00:11:40,559 --> 00:11:45,239
shader just takes the position directly

299
00:11:42,019 --> 00:11:50,328
and outputs it so hopefully that as well

300
00:11:45,240 --> 00:11:52,680
would be a clear and unambiguous shader

301
00:11:50,328 --> 00:11:54,000
so now I have to see if it gives me any

302
00:11:52,679 --> 00:11:56,338
areas because I'm not using any of those

303
00:11:54,000 --> 00:11:58,409
values it isn't so in theory that shader

304
00:11:56,339 --> 00:12:01,350
is compiled properly again that's just

305
00:11:58,409 --> 00:12:04,230
you know in theory so now what we should

306
00:12:01,350 --> 00:12:06,329
see is this this program that we've

307
00:12:04,230 --> 00:12:09,329
created is something that you just draw

308
00:12:06,328 --> 00:12:12,599
red wherever it is right so it doesn't

309
00:12:09,328 --> 00:12:14,909
matter what you send down wherever it

310
00:12:12,600 --> 00:12:17,100
fills regardless of what the texture

311
00:12:14,909 --> 00:12:19,980
values are we should just be red and the

312
00:12:17,100 --> 00:12:21,690
reason that I'm doing that is again I

313
00:12:19,980 --> 00:12:24,060
want to take as much stuff out of the

314
00:12:21,690 --> 00:12:26,760
equation as possible and I just want to

315
00:12:24,059 --> 00:12:29,278
get it to where I see something red

316
00:12:26,759 --> 00:12:31,289
right because we know now that we're

317
00:12:29,278 --> 00:12:33,240
drawing to the right area of viewport

318
00:12:31,289 --> 00:12:34,919
wise but what we don't know is whether

319
00:12:33,240 --> 00:12:36,629
we're ever actually drawing anything

320
00:12:34,919 --> 00:12:39,088
through the shader and since the shader

321
00:12:36,629 --> 00:12:41,429
is set to pure red and I'm not seeing

322
00:12:39,089 --> 00:12:44,880
any red on the screen at all I can only

323
00:12:41,429 --> 00:12:47,429
assume that what I'm seeing here is some

324
00:12:44,879 --> 00:12:49,320
kind of a problem with the way I'm

325
00:12:47,429 --> 00:12:52,019
specifying the vertices like they're not

326
00:12:49,320 --> 00:12:55,740
actually being set to what I expect them

327
00:12:52,019 --> 00:12:58,049
to be or something right now the other

328
00:12:55,740 --> 00:13:00,750
thing I can do here is I can clear

329
00:12:58,049 --> 00:13:04,879
everything so I can clear the depth bit

330
00:13:00,750 --> 00:13:04,879
and the stencil bit oops

331
00:13:10,190 --> 00:13:14,060
and what that'll do is just verify it

332
00:13:12,440 --> 00:13:16,160
you know I thought I turned deaf testing

333
00:13:14,059 --> 00:13:18,259
off in Siri depth has to be up I just

334
00:13:16,159 --> 00:13:19,819
want to make sure and by clearing the

335
00:13:18,259 --> 00:13:21,439
depth buffer first I know that there's

336
00:13:19,820 --> 00:13:23,540
no Z buffer getting in the way and I've

337
00:13:21,440 --> 00:13:25,340
disabled the desktop def test here so in

338
00:13:23,539 --> 00:13:26,469
theory that should not be a problem but

339
00:13:25,340 --> 00:13:31,580
I just wanted to make absolutely

340
00:13:26,470 --> 00:13:32,720
positive okay all right so now we know

341
00:13:31,580 --> 00:13:34,430
we're drawing to the correct frame

342
00:13:32,720 --> 00:13:36,290
buffer and we know we're drawing to the

343
00:13:34,429 --> 00:13:37,459
correct region and the reason we know

344
00:13:36,289 --> 00:13:40,299
that is because we see the blue

345
00:13:37,460 --> 00:13:43,009
rectangle so I at least know that much

346
00:13:40,299 --> 00:13:45,529
we are not reading from these textures

347
00:13:43,009 --> 00:13:47,299
so in theory I can just get rid of these

348
00:13:45,529 --> 00:13:50,059
textures entirely because we're not

349
00:13:47,299 --> 00:13:51,859
reading from them and hopefully that

350
00:13:50,059 --> 00:13:54,219
will ensure that there's nothing weird

351
00:13:51,860 --> 00:13:56,419
going on in the texture side of things

352
00:13:54,220 --> 00:13:58,759
again those calls should have had no

353
00:13:56,419 --> 00:14:01,069
effect whatsoever and we're not seeing

354
00:13:58,759 --> 00:14:03,019
any effect there so that's good and so

355
00:14:01,070 --> 00:14:04,640
now we're just left with what I think is

356
00:14:03,019 --> 00:14:07,519
our fundamental problem and probably the

357
00:14:04,639 --> 00:14:08,840
was the original problem altogether the

358
00:14:07,519 --> 00:14:11,929
only problem that I think we actually

359
00:14:08,840 --> 00:14:13,850
have so far which is that I'm not

360
00:14:11,929 --> 00:14:15,620
actually specifying vertices correctly

361
00:14:13,850 --> 00:14:17,899
so they're not actually constituting

362
00:14:15,620 --> 00:14:21,950
triangles that we can actually see that

363
00:14:17,899 --> 00:14:23,569
is my assumption for what is wrong but I

364
00:14:21,950 --> 00:14:26,600
don't actually know that that's just my

365
00:14:23,570 --> 00:14:29,660
assumption so what I would like to do

366
00:14:26,600 --> 00:14:32,240
here is I would like to go into the use

367
00:14:29,659 --> 00:14:34,759
program begin of peel composite and I'd

368
00:14:32,240 --> 00:14:36,440
also like to just verify what some of

369
00:14:34,759 --> 00:14:37,850
the values that we're setting are to

370
00:14:36,440 --> 00:14:39,500
make sure that they're plausible and

371
00:14:37,850 --> 00:14:42,080
that there isn't some kind of an error

372
00:14:39,500 --> 00:14:45,019
value somewhere that we're not seeing

373
00:14:42,080 --> 00:14:47,960
right because even though we haven't set

374
00:14:45,019 --> 00:14:51,019
up to issue a hard error anytime that

375
00:14:47,960 --> 00:14:51,889
the OpenGL driver thinks that we've made

376
00:14:51,019 --> 00:14:55,610
a critical mistake

377
00:14:51,889 --> 00:14:57,529
we will see those but we could easily

378
00:14:55,610 --> 00:15:00,050
get in a situation where it returns a

379
00:14:57,529 --> 00:15:02,449
like oh I didn't find anything for this

380
00:15:00,049 --> 00:15:04,579
vertex stream that you asked for or

381
00:15:02,450 --> 00:15:06,860
something that is maybe a legal

382
00:15:04,580 --> 00:15:08,270
pass-through error right it may be not

383
00:15:06,860 --> 00:15:10,580
really technically an error in which

384
00:15:08,269 --> 00:15:12,439
case we wouldn't get notified about it

385
00:15:10,580 --> 00:15:14,389
or something right so I just want to

386
00:15:12,440 --> 00:15:16,880
come in here and make sure that the

387
00:15:14,389 --> 00:15:19,730
things that we are sending down that I

388
00:15:16,879 --> 00:15:21,389
do expect to be set are set so you can

389
00:15:19,730 --> 00:15:24,060
see for example transfer mine

390
00:15:21,389 --> 00:15:27,059
there is no transform set in this

391
00:15:24,059 --> 00:15:29,219
particular shader so I expect it to be

392
00:15:27,059 --> 00:15:33,149
all you know negative one basically and

393
00:15:29,220 --> 00:15:35,519
that's what it is so that's okay but for

394
00:15:33,149 --> 00:15:36,990
example this one well actually these are

395
00:15:35,519 --> 00:15:39,209
now because we remove them so those

396
00:15:36,990 --> 00:15:41,370
don't have to get set either but for

397
00:15:39,208 --> 00:15:43,018
example these right here should have

398
00:15:41,370 --> 00:15:44,820
values and you can see that they

399
00:15:43,019 --> 00:15:48,028
actually do appear to have values

400
00:15:44,820 --> 00:15:50,670
extreme zero stream 1 and stream 2 or

401
00:15:48,028 --> 00:15:52,828
rather location 1 1 2 &amp; 3

402
00:15:50,669 --> 00:15:55,889
does look correct there now what I don't

403
00:15:52,828 --> 00:15:57,659
know you know I don't know if location 1

404
00:15:55,889 --> 00:15:59,069
is the correct location obviously

405
00:15:57,659 --> 00:16:00,929
because there's no way for me to know

406
00:15:59,070 --> 00:16:04,040
that that's just what it told me but I

407
00:16:00,929 --> 00:16:06,778
assume that that's correct and you know

408
00:16:04,039 --> 00:16:08,129
there yet I assume that that is the

409
00:16:06,778 --> 00:16:10,379
correct value we don't really have any

410
00:16:08,129 --> 00:16:12,028
way of knowing and so here we go we're

411
00:16:10,379 --> 00:16:14,870
setting off sets into textured vertex

412
00:16:12,028 --> 00:16:20,850
we're using just a buffer that's already

413
00:16:14,870 --> 00:16:23,669
sort of set up here I believe although

414
00:16:20,850 --> 00:16:25,769
you know is this array buffer actually

415
00:16:23,669 --> 00:16:28,198
enabled and active I guess that's one

416
00:16:25,769 --> 00:16:34,679
thing I don't know let me make sure that

417
00:16:28,198 --> 00:16:36,179
we didn't miss something here so it

418
00:16:34,679 --> 00:16:38,578
doesn't look like it because it looks

419
00:16:36,179 --> 00:16:41,519
like we leave the the buffer bound the

420
00:16:38,578 --> 00:16:43,889
entire time for the most part so it

421
00:16:41,519 --> 00:16:45,149
looks like that should be fine I'm

422
00:16:43,889 --> 00:16:48,419
assuming that's something that happens

423
00:16:45,149 --> 00:16:51,089
in here I don't actually know but let's

424
00:16:48,419 --> 00:16:54,088
see so there's the old gen buffers and

425
00:16:51,089 --> 00:16:56,070
there's GL bind buffer so it looks like

426
00:16:54,089 --> 00:16:59,190
that is just always going to be active

427
00:16:56,070 --> 00:17:00,720
and in theory there's nothing else we

428
00:16:59,190 --> 00:17:04,890
need to really do there so that I

429
00:17:00,720 --> 00:17:06,900
believe should be fine so it seems like

430
00:17:04,890 --> 00:17:10,620
that use program begin is working

431
00:17:06,900 --> 00:17:13,019
relatively well and it seems like yeah I

432
00:17:10,619 --> 00:17:15,869
don't see any other particularly onerous

433
00:17:13,019 --> 00:17:18,150
things happening here so the next

434
00:17:15,869 --> 00:17:21,058
question is well are we sending down

435
00:17:18,150 --> 00:17:23,220
this vertex data correctly because maybe

436
00:17:21,058 --> 00:17:25,918
we're doing something stupid where we're

437
00:17:23,220 --> 00:17:28,819
not putting the data into you're not

438
00:17:25,919 --> 00:17:32,009
putting the vertex data into a format

439
00:17:28,819 --> 00:17:34,500
that works properly with the rest of the

440
00:17:32,009 --> 00:17:35,379
pipeline so let's take a look there let

441
00:17:34,500 --> 00:17:38,380
me

442
00:17:35,380 --> 00:17:40,990
this and let's just go take a quick look

443
00:17:38,380 --> 00:17:41,559
at what we're actually specifying in

444
00:17:40,990 --> 00:17:43,329
those terms

445
00:17:41,558 --> 00:17:45,279
so you can see here if this is the

446
00:17:43,329 --> 00:17:47,918
vertex code for our other shader the one

447
00:17:45,279 --> 00:17:49,569
that is working properly the one that's

448
00:17:47,919 --> 00:17:51,880
drawing all the sprites and that's or

449
00:17:49,569 --> 00:17:53,470
even drawing the faces of the cube so

450
00:17:51,880 --> 00:17:56,950
you can see that what happens when we do

451
00:17:53,470 --> 00:18:03,610
our vertex in ingress here is we create

452
00:17:56,950 --> 00:18:06,610
a vertex that's basically got you know

453
00:18:03,609 --> 00:18:08,740
what I was just thinking I don't know if

454
00:18:06,609 --> 00:18:11,319
the W coordinate of a vertex defaults to

455
00:18:08,740 --> 00:18:12,579
1 or not we're setting it to 1 here but

456
00:18:11,319 --> 00:18:14,980
we're not setting it to 1 the other one

457
00:18:12,579 --> 00:18:16,869
and if the W coordinate was 0 that would

458
00:18:14,980 --> 00:18:18,970
be a problem potentially for us because

459
00:18:16,869 --> 00:18:21,158
the W coordinate of 0 that doesn't go

460
00:18:18,970 --> 00:18:25,990
through a transform of any kind would

461
00:18:21,159 --> 00:18:28,900
end up dividing by 0 potentially so

462
00:18:25,990 --> 00:18:31,390
let's just double-check that right this

463
00:18:28,900 --> 00:18:35,669
right here where we specify this vert P

464
00:18:31,390 --> 00:18:38,830
it's a V for incoming and you know what

465
00:18:35,669 --> 00:18:41,169
actually it wouldn't even be the default

466
00:18:38,829 --> 00:18:43,418
value it's actually going to be a value

467
00:18:41,169 --> 00:18:47,230
right here so I think I think this is

468
00:18:43,419 --> 00:18:49,690
really my mistake this looks very very

469
00:18:47,230 --> 00:18:52,210
much like a suspicious maneuver here I

470
00:18:49,690 --> 00:18:53,980
kind of forgot we had this special

471
00:18:52,210 --> 00:18:56,230
vertex format that we've been using to

472
00:18:53,980 --> 00:18:58,808
do the biasing which means that we

473
00:18:56,230 --> 00:19:01,298
actually passed four values not three as

474
00:18:58,808 --> 00:19:03,579
a position so it's not even filling in a

475
00:19:01,298 --> 00:19:05,379
default value for W it's filling in our

476
00:19:03,579 --> 00:19:09,428
value for W and what you'll notice here

477
00:19:05,380 --> 00:19:12,070
is C will complete an incomplete

478
00:19:09,429 --> 00:19:13,780
initializer list like this with zeros

479
00:19:12,069 --> 00:19:16,538
and so what we're actually getting is

480
00:19:13,779 --> 00:19:18,908
this and that's a problem because the W

481
00:19:16,538 --> 00:19:20,619
coordinate is the synthetic divides it's

482
00:19:18,909 --> 00:19:23,230
going to happen with that W coordinate

483
00:19:20,619 --> 00:19:25,719
that's going to divide by 0 and probably

484
00:19:23,230 --> 00:19:27,460
not give us very happy results so what I

485
00:19:25,720 --> 00:19:30,460
would assume is that that right there

486
00:19:27,460 --> 00:19:34,360
may be a really big problem for us let's

487
00:19:30,460 --> 00:19:36,788
see what happens if we reenable that by

488
00:19:34,359 --> 00:19:39,548
putting a 1 in there so that's looking

489
00:19:36,788 --> 00:19:42,129
really good there we've got red coming

490
00:19:39,548 --> 00:19:44,798
and I assume that we're actually seeing

491
00:19:42,130 --> 00:19:46,630
the actual coverage region being the

492
00:19:44,798 --> 00:19:49,139
correct you know the whole viewport I'm

493
00:19:46,630 --> 00:19:50,940
going to just just see if that's true

494
00:19:49,140 --> 00:19:54,060
by switching these to something that has

495
00:19:50,940 --> 00:19:55,980
just just a tenth apron there on it

496
00:19:54,059 --> 00:19:58,470
right so we can kind of see what's going

497
00:19:55,980 --> 00:20:00,000
on and verify that it actually is

498
00:19:58,470 --> 00:20:02,039
drawing to the region I think it's

499
00:20:00,000 --> 00:20:04,950
trying to because again just like I did

500
00:20:02,039 --> 00:20:07,710
when I push that viewport in smaller

501
00:20:04,950 --> 00:20:09,390
than the screen to see that I could see

502
00:20:07,710 --> 00:20:11,220
the apron I want to do the same thing

503
00:20:09,390 --> 00:20:12,690
with the shader to make sure that I know

504
00:20:11,220 --> 00:20:14,730
that I'm passing down values that are

505
00:20:12,690 --> 00:20:16,740
lining up the way that I think it so

506
00:20:14,730 --> 00:20:19,079
that looks pretty good to me it does

507
00:20:16,740 --> 00:20:20,910
look like roughly 1/10 again that it

508
00:20:19,079 --> 00:20:23,039
should not be a symmetric apron it

509
00:20:20,910 --> 00:20:24,330
shouldn't be symmetric because we're

510
00:20:23,039 --> 00:20:25,859
talking about clip space where

511
00:20:24,329 --> 00:20:31,230
everything's negative 1 to 1 that means

512
00:20:25,859 --> 00:20:32,849
motion in X is going to be further it's

513
00:20:31,230 --> 00:20:34,349
going to move further than in Y because

514
00:20:32,849 --> 00:20:36,000
there's less total distance that's

515
00:20:34,349 --> 00:20:39,059
that's spanning that negative 1 to 1

516
00:20:36,000 --> 00:20:41,549
range so that looks like a fair apron to

517
00:20:39,059 --> 00:20:42,899
me it looks like what I would expect so

518
00:20:41,549 --> 00:20:44,970
I'm going to go ahead and change it back

519
00:20:42,900 --> 00:20:47,550
I think that's looking good and I'll

520
00:20:44,970 --> 00:20:49,620
also now go back and change the viewport

521
00:20:47,549 --> 00:20:52,950
to be specifying the correct viewport

522
00:20:49,619 --> 00:20:55,709
region by reel imitating these offsets

523
00:20:52,950 --> 00:20:58,830
that we had in here and restoring it to

524
00:20:55,710 --> 00:21:03,569
the correct oops

525
00:20:58,829 --> 00:21:05,549
restoring it to the correct size and so

526
00:21:03,569 --> 00:21:07,829
now I think if I can get rid of that

527
00:21:05,549 --> 00:21:09,779
scissor test there as well and I can

528
00:21:07,829 --> 00:21:12,859
also get rid of my clears and I should

529
00:21:09,779 --> 00:21:19,470
now be able to do just a straightforward

530
00:21:12,859 --> 00:21:21,479
use of of the shader to draw without any

531
00:21:19,470 --> 00:21:25,350
of these other business right I should

532
00:21:21,480 --> 00:21:27,089
now get a very clean result ok

533
00:21:25,349 --> 00:21:28,740
so now we're seeing full screen red

534
00:21:27,089 --> 00:21:31,169
that's great that's what I want to see

535
00:21:28,740 --> 00:21:33,180
that's exactly right so now I'm going to

536
00:21:31,170 --> 00:21:35,700
take out these gifts I'm going to allow

537
00:21:33,180 --> 00:21:37,440
the textures to get set again and again

538
00:21:35,700 --> 00:21:39,539
we're not reading from those textures so

539
00:21:37,440 --> 00:21:41,250
at this point nothing should happen we

540
00:21:39,539 --> 00:21:43,289
should just see a red screen and we do

541
00:21:41,250 --> 00:21:45,539
so those are not interfering which is

542
00:21:43,289 --> 00:21:48,710
great and now I want to go down here and

543
00:21:45,539 --> 00:21:51,029
I want to pull off some of these other

544
00:21:48,710 --> 00:21:53,670
things that we had first of all I'm

545
00:21:51,029 --> 00:21:56,399
going to take out the f0 oops that's the

546
00:21:53,670 --> 00:22:01,019
wrong f0 no that's right if 0 take out

547
00:21:56,400 --> 00:22:02,490
the f0 there we go and now we should see

548
00:22:01,019 --> 00:22:05,308
again that red

549
00:22:02,490 --> 00:22:09,120
with no errors hopefully yep and so now

550
00:22:05,308 --> 00:22:10,920
I'm going to take away the the rgba the

551
00:22:09,119 --> 00:22:13,439
part that's actually doing the the

552
00:22:10,920 --> 00:22:15,690
read/write and now we're going to see

553
00:22:13,440 --> 00:22:17,429
whatever the actual color the shader is

554
00:22:15,690 --> 00:22:19,190
producing which may be completely wrong

555
00:22:17,429 --> 00:22:21,929
but okay that's not too bad actually

556
00:22:19,190 --> 00:22:25,350
it's not what we want it's obviously

557
00:22:21,929 --> 00:22:27,330
still a little wrong but our composites

558
00:22:25,349 --> 00:22:29,849
actually working now and so that's good

559
00:22:27,329 --> 00:22:31,529
news so now we just have to debug the

560
00:22:29,849 --> 00:22:33,240
code in our shader which is where we

561
00:22:31,529 --> 00:22:35,039
wanted to be yesterday when we just kind

562
00:22:33,240 --> 00:22:36,900
of hacked it in if it had work the first

563
00:22:35,039 --> 00:22:38,159
time if I'd remember that 1.0 in there

564
00:22:36,900 --> 00:22:40,519
all the rest of our code was right

565
00:22:38,160 --> 00:22:42,540
Cheers

566
00:22:40,519 --> 00:22:46,049
this is water so I guess you don't

567
00:22:42,539 --> 00:22:47,909
technically cheers but eh whatever so it

568
00:22:46,049 --> 00:22:49,799
looks like the good news is almost

569
00:22:47,910 --> 00:22:52,230
everything's working correctly the bad

570
00:22:49,799 --> 00:22:55,289
news is we do have some work to do here

571
00:22:52,230 --> 00:22:57,179
in terms of figuring out how to do this

572
00:22:55,289 --> 00:23:00,058
blend properly and not messing anything

573
00:22:57,179 --> 00:23:01,769
up so let's start with the basics let's

574
00:23:00,058 --> 00:23:04,139
start with verifying that we can read

575
00:23:01,769 --> 00:23:05,789
from our frame buffers and write the

576
00:23:04,140 --> 00:23:08,850
results in without getting anything

577
00:23:05,789 --> 00:23:10,109
particularly strange happening okay and

578
00:23:08,849 --> 00:23:12,659
so the way that we're going to do that

579
00:23:10,109 --> 00:23:15,569
is in here where I've got my result

580
00:23:12,660 --> 00:23:17,730
color RGB what I want to do here is sort

581
00:23:15,569 --> 00:23:20,339
of comment out the actual code that's

582
00:23:17,730 --> 00:23:22,470
doing anything specific here and I want

583
00:23:20,339 --> 00:23:27,029
to just take a look at what peel 0 is

584
00:23:22,470 --> 00:23:29,549
right because that's that first frame

585
00:23:27,029 --> 00:23:31,740
buffer that should just have exactly

586
00:23:29,549 --> 00:23:33,990
what yet so you can see already we're

587
00:23:31,740 --> 00:23:36,150
off to a bad start in terms of our data

588
00:23:33,990 --> 00:23:37,620
because I'm looking at something here

589
00:23:36,150 --> 00:23:40,259
that's clearly not the right color

590
00:23:37,619 --> 00:23:42,389
values and so we've had a question to

591
00:23:40,259 --> 00:23:45,539
ask ourselves first which is why is our

592
00:23:42,390 --> 00:23:47,970
peel zero value coming out wrong and

593
00:23:45,539 --> 00:23:49,678
what I wonder here is I want to make

594
00:23:47,970 --> 00:23:52,350
sure that we're not it this is probably

595
00:23:49,679 --> 00:23:55,320
an sRGB issue of some kind although I

596
00:23:52,349 --> 00:23:56,939
don't really know so I want to I got

597
00:23:55,319 --> 00:23:58,639
some work to do here to figure out why

598
00:23:56,940 --> 00:24:01,860
we're seeing this sort of errant color

599
00:23:58,640 --> 00:24:03,240
stuff going on so the first thing I want

600
00:24:01,859 --> 00:24:05,279
to do is I want to take out the

601
00:24:03,240 --> 00:24:07,799
possibility that any of this other

602
00:24:05,279 --> 00:24:10,079
nonsense that we're doing is actually

603
00:24:07,799 --> 00:24:11,789
causing a problem so what I want to do

604
00:24:10,079 --> 00:24:12,710
is I'm just going to comment out well

605
00:24:11,789 --> 00:24:15,678
not really comment

606
00:24:12,710 --> 00:24:18,620
I'm going to f-zero out the code that

607
00:24:15,679 --> 00:24:20,450
does the you know srgb conversion just

608
00:24:18,619 --> 00:24:24,408
in case somehow those got set now they

609
00:24:20,450 --> 00:24:28,480
shouldn't be set as far as I know who

610
00:24:24,409 --> 00:24:30,890
although they may be getting said uh

611
00:24:28,480 --> 00:24:35,538
more on that in a minute

612
00:24:30,890 --> 00:24:38,450
actually yeah there's there's some

613
00:24:35,538 --> 00:24:39,919
complexity there okay so you can see

614
00:24:38,450 --> 00:24:41,149
that we get the right results there so

615
00:24:39,919 --> 00:24:42,559
when I was about to say this shouldn't

616
00:24:41,148 --> 00:24:44,538
do anything I was like glad I tested

617
00:24:42,558 --> 00:24:46,069
like no it did do something so what I've

618
00:24:44,538 --> 00:24:47,119
got to say when I kind of was like it

619
00:24:46,069 --> 00:24:49,490
won't do anything and then immediately

620
00:24:47,119 --> 00:24:51,798
thought oh wait maybe it will if you

621
00:24:49,490 --> 00:24:54,048
remember correctly AMD

622
00:24:51,798 --> 00:24:55,879
kind of gave us the middle finger a

623
00:24:54,048 --> 00:24:58,908
little bit before because we had tried

624
00:24:55,880 --> 00:25:01,278
to create our frame buffers with an sRGB

625
00:24:58,909 --> 00:25:03,890
format but it wasn't letting us do that

626
00:25:01,278 --> 00:25:07,278
when we were in multi sample land right

627
00:25:03,890 --> 00:25:08,980
if you remember correctly however now

628
00:25:07,278 --> 00:25:12,099
we've got a case where we're mixing

629
00:25:08,980 --> 00:25:14,450
textures and frame buffers together and

630
00:25:12,099 --> 00:25:16,219
the frame buffers that are doing the

631
00:25:14,450 --> 00:25:17,750
rights those didn't have srgb

632
00:25:16,220 --> 00:25:21,079
potentially set on them necessarily

633
00:25:17,750 --> 00:25:23,089
right or they may have but we're setting

634
00:25:21,079 --> 00:25:25,069
the flag here as if they weren't etc etc

635
00:25:23,089 --> 00:25:26,959
and again that's because we weren't

636
00:25:25,069 --> 00:25:30,710
getting a reliable answer from the AMD

637
00:25:26,960 --> 00:25:33,019
driver it's supposed to support that

638
00:25:30,710 --> 00:25:35,960
process for us it's supposed to support

639
00:25:33,019 --> 00:25:37,639
multi sample sRGB but it simply wouldn't

640
00:25:35,960 --> 00:25:40,069
let us create one we tried to create a

641
00:25:37,640 --> 00:25:41,809
surface multiple times we tried a lot of

642
00:25:40,069 --> 00:25:44,450
different ways and it never actually

643
00:25:41,808 --> 00:25:45,829
worked so if we come back here and we

644
00:25:44,450 --> 00:25:48,288
take a look at what we're seeing here

645
00:25:45,829 --> 00:25:52,970
this OpenGL default frame buffer texture

646
00:25:48,288 --> 00:25:54,829
format there that's kind of a big old

647
00:25:52,970 --> 00:25:56,600
red flag there because I think that

648
00:25:54,829 --> 00:25:59,869
default frame buffer textured format is

649
00:25:56,599 --> 00:26:01,908
getting set to not be srgb and that's

650
00:25:59,869 --> 00:26:04,308
going to cause us a bunch of problems so

651
00:26:01,909 --> 00:26:06,620
since it's set to not srgb that means

652
00:26:04,308 --> 00:26:09,139
the reads and writes won't actually go

653
00:26:06,619 --> 00:26:11,449
through the sRGB pack path on the frame

654
00:26:09,140 --> 00:26:13,070
buffer right but they will come in that

655
00:26:11,450 --> 00:26:15,319
way on the read like we could have all

656
00:26:13,069 --> 00:26:17,480
kinds of problems there so let's turn

657
00:26:15,319 --> 00:26:21,319
this off first and then let's go ahead

658
00:26:17,480 --> 00:26:23,750
and do our blend let's let's just not do

659
00:26:21,319 --> 00:26:25,939
any of the of the suggested stuff we'll

660
00:26:23,750 --> 00:26:27,378
let it go and let's just do our blend in

661
00:26:25,940 --> 00:26:33,288
see if the blend is working roughly

662
00:26:27,378 --> 00:26:36,048
correctly at that point right all right

663
00:26:33,288 --> 00:26:39,950
so this is looking pretty good it's not

664
00:26:36,048 --> 00:26:42,668
quite correct but it's looking close to

665
00:26:39,950 --> 00:26:45,470
correct we have some issues to address

666
00:26:42,669 --> 00:26:48,500
but some things are looking really nice

667
00:26:45,470 --> 00:26:50,288
and I think we just have a little bit

668
00:26:48,500 --> 00:26:52,490
more work to do in terms of our

669
00:26:50,288 --> 00:26:54,528
representation you can even see that

670
00:26:52,490 --> 00:26:56,899
those beautiful shadows are in there

671
00:26:54,528 --> 00:26:58,220
correctly in a lot of places which is

672
00:26:56,898 --> 00:26:59,959
kind of Awesome

673
00:26:58,220 --> 00:27:02,210
but we definitely have some places where

674
00:26:59,960 --> 00:27:03,889
we're getting some kind of nonsensical

675
00:27:02,210 --> 00:27:05,840
results you can see those like with the

676
00:27:03,888 --> 00:27:08,058
little heads the way they're kind of

677
00:27:05,839 --> 00:27:09,918
disappearing in weird ways and all sorts

678
00:27:08,058 --> 00:27:11,990
of other things like that so we have

679
00:27:09,919 --> 00:27:14,750
some strange things there now some

680
00:27:11,990 --> 00:27:17,569
things this scheme would not quite work

681
00:27:14,750 --> 00:27:18,980
properly for and one of the things that

682
00:27:17,569 --> 00:27:21,168
this scheme will not work properly for

683
00:27:18,980 --> 00:27:22,700
is too many things layered on top of

684
00:27:21,169 --> 00:27:24,919
each other that have alpha right because

685
00:27:22,700 --> 00:27:27,048
we're only processing one layer of alpha

686
00:27:24,919 --> 00:27:28,519
right now and for something like

687
00:27:27,048 --> 00:27:30,589
particle systems that's not going to

688
00:27:28,519 --> 00:27:32,480
necessarily cut it we probably don't

689
00:27:30,589 --> 00:27:34,819
want to do depth peeling any more than

690
00:27:32,480 --> 00:27:37,190
we're already doing it though in terms

691
00:27:34,819 --> 00:27:38,148
of if we want support particle systems

692
00:27:37,190 --> 00:27:40,278
what we should probably do is just

693
00:27:38,148 --> 00:27:42,138
handle particle systems in a separate

694
00:27:40,278 --> 00:27:43,429
pass or something like this so I'm not

695
00:27:42,138 --> 00:27:45,319
too worried about that because we can

696
00:27:43,429 --> 00:27:46,548
just split the particle systems off what

697
00:27:45,319 --> 00:27:47,750
I'm more worried about is some things

698
00:27:46,548 --> 00:27:49,460
that I think should be working and

699
00:27:47,750 --> 00:27:51,230
aren't working so what we really want to

700
00:27:49,460 --> 00:27:53,028
focus on now is a couple of those things

701
00:27:51,230 --> 00:27:54,950
so for example right here you can see

702
00:27:53,028 --> 00:27:57,378
something that I think should probably

703
00:27:54,950 --> 00:28:00,139
be working but isn't and that is the

704
00:27:57,378 --> 00:28:01,878
sort of halo around the hero's head

705
00:28:00,138 --> 00:28:04,008
where we got kind of a bright region and

706
00:28:01,878 --> 00:28:05,990
so what I think that bright region is is

707
00:28:04,009 --> 00:28:08,720
again I think that's a failure to be

708
00:28:05,990 --> 00:28:10,759
doing the srgb properly so I want to

709
00:28:08,720 --> 00:28:13,850
kind of go through and clean up the sRGB

710
00:28:10,759 --> 00:28:16,038
net and try to get that working a look a

711
00:28:13,849 --> 00:28:17,898
little more cleanly we also have some

712
00:28:16,038 --> 00:28:20,599
places where the shadows appear to be

713
00:28:17,898 --> 00:28:23,359
munched and I think I don't really know

714
00:28:20,599 --> 00:28:25,398
but my suspicion is yeah that's I think

715
00:28:23,359 --> 00:28:27,648
what that is is just if two shadows

716
00:28:25,398 --> 00:28:30,288
overlap each other the depth feeling

717
00:28:27,648 --> 00:28:32,349
scheme again won't really work and the

718
00:28:30,288 --> 00:28:35,269
reason that that def peeling scheme

719
00:28:32,349 --> 00:28:38,750
won't work in that case is just because

720
00:28:35,269 --> 00:28:39,859
we end up in a situation where we can't

721
00:28:38,750 --> 00:28:41,480
peel that mate

722
00:28:39,859 --> 00:28:43,250
right we've got too many things to peel

723
00:28:41,480 --> 00:28:44,929
now one of the interesting things about

724
00:28:43,250 --> 00:28:46,278
doing the DEF peeling is we're starting

725
00:28:44,929 --> 00:28:48,230
to put ourselves in a much more powerful

726
00:28:46,278 --> 00:28:50,390
situation in terms of making trade-offs

727
00:28:48,230 --> 00:28:51,740
though there which means that even

728
00:28:50,390 --> 00:28:53,480
though that sounds like it wouldn't work

729
00:28:51,740 --> 00:28:55,490
with only two death peels I think we may

730
00:28:53,480 --> 00:28:56,870
be able to instead of breaking our

731
00:28:55,490 --> 00:28:58,519
shadows into a separate pass or

732
00:28:56,869 --> 00:29:00,648
something like that we may actually be

733
00:28:58,519 --> 00:29:03,980
able to do something more clever there

734
00:29:00,648 --> 00:29:05,599
we may be able to do something fancy in

735
00:29:03,980 --> 00:29:09,110
like a softie gentleman kind of a way

736
00:29:05,599 --> 00:29:10,879
that will allow us to do something

737
00:29:09,109 --> 00:29:13,009
clever with multiple overlapping shadows

738
00:29:10,880 --> 00:29:14,450
such that even with only one def field

739
00:29:13,009 --> 00:29:21,558
we may be able to get away with

740
00:29:14,450 --> 00:29:23,179
something there so let's push forward a

741
00:29:21,558 --> 00:29:24,440
little bit so what I want to do now is

742
00:29:23,179 --> 00:29:27,769
this is looking pretty good and I don't

743
00:29:24,440 --> 00:29:29,028
really think I want that multi sampling

744
00:29:27,769 --> 00:29:30,769
to be happening anymore because it's

745
00:29:29,028 --> 00:29:33,798
looking like the DEF peel is way better

746
00:29:30,769 --> 00:29:35,388
than the multi sampling and even if we

747
00:29:33,798 --> 00:29:38,619
went to three depth peels I think that

748
00:29:35,388 --> 00:29:40,398
might not be too expensive if we had to

749
00:29:38,619 --> 00:29:41,839
compared to most sample I don't really

750
00:29:40,398 --> 00:29:43,699
know it's hard to know how much the

751
00:29:41,839 --> 00:29:45,138
multi sample costs we haven't done a lot

752
00:29:43,700 --> 00:29:47,600
of profiling of it so it's difficult to

753
00:29:45,138 --> 00:29:49,609
say but what I would like to do here is

754
00:29:47,599 --> 00:29:52,038
I would like to go ahead and if zero the

755
00:29:49,609 --> 00:29:53,990
set temporarily so where we do this test

756
00:29:52,038 --> 00:29:55,940
texture here what I'd like to do is just

757
00:29:53,990 --> 00:29:59,230
say you know what forget it

758
00:29:55,940 --> 00:30:05,899
let's just assume that you got that and

759
00:29:59,230 --> 00:30:08,929
let's let's just go with with the let's

760
00:30:05,898 --> 00:30:11,119
just go with the non multi sampling for

761
00:30:08,929 --> 00:30:13,309
now so let's see what happens if these

762
00:30:11,119 --> 00:30:15,528
get set to srgb I'm just curious what

763
00:30:13,308 --> 00:30:17,629
we're going to end up seeing here and so

764
00:30:15,528 --> 00:30:19,940
lo and behold it is exactly like I said

765
00:30:17,630 --> 00:30:22,159
if we do have the srgb enabled properly

766
00:30:19,940 --> 00:30:24,528
so that now we have srgb textures and an

767
00:30:22,159 --> 00:30:25,880
sRGB frame buffer what you can see and

768
00:30:24,528 --> 00:30:28,278
maybe this is a little bit too much to

769
00:30:25,880 --> 00:30:30,110
ask from the streaming situation so I

770
00:30:28,278 --> 00:30:33,528
guess when I say what you know you can

771
00:30:30,109 --> 00:30:36,500
see I guess what I mean is I can see the

772
00:30:33,528 --> 00:30:38,359
halo around the hero is now gone so the

773
00:30:36,500 --> 00:30:41,869
srgb is now working properly which

774
00:30:38,359 --> 00:30:43,819
exactly what I hope for and so that kind

775
00:30:41,869 --> 00:30:45,888
of takes care of that and so now we're

776
00:30:43,819 --> 00:30:48,349
just down to a few remaining problems

777
00:30:45,888 --> 00:30:51,469
there's a couple of things here that I'd

778
00:30:48,349 --> 00:30:53,799
like to take a look at and again I think

779
00:30:51,470 --> 00:30:55,910
I know what most of it is but you know

780
00:30:53,799 --> 00:30:58,309
we've got to take a closer look and also

781
00:30:55,910 --> 00:31:00,230
see what we can do to fix it so what you

782
00:30:58,309 --> 00:31:02,119
can see here is there's a few

783
00:31:00,230 --> 00:31:04,610
weirdnesses we're getting some fringing

784
00:31:02,119 --> 00:31:07,879
around the edges of the trees when

785
00:31:04,609 --> 00:31:10,129
they're not over something we drew and

786
00:31:07,880 --> 00:31:11,780
I'm not 100% certain why that is but I

787
00:31:10,130 --> 00:31:14,750
suspect this has to do with how the

788
00:31:11,779 --> 00:31:16,700
background colors are sums together and

789
00:31:14,750 --> 00:31:19,250
what I suspect is happening there is

790
00:31:16,700 --> 00:31:22,220
perhaps the clear color is not getting

791
00:31:19,250 --> 00:31:23,750
modulated properly or something else is

792
00:31:22,220 --> 00:31:27,049
happening they're not sure what's going

793
00:31:23,750 --> 00:31:32,089
on but I do feel like that's probably a

794
00:31:27,049 --> 00:31:36,500
problem so if in fact if you think about

795
00:31:32,089 --> 00:31:37,819
what needs to happen now I think I could

796
00:31:36,500 --> 00:31:38,960
pretty much just guess what's happening

797
00:31:37,819 --> 00:31:40,339
there directly I don't think I need to

798
00:31:38,960 --> 00:31:42,380
investigate it much further actually

799
00:31:40,339 --> 00:31:45,889
because I think it's actually it seems

800
00:31:42,380 --> 00:31:50,120
almost straightforward I think what's

801
00:31:45,890 --> 00:31:52,060
going on there is the we've got two

802
00:31:50,119 --> 00:31:55,069
buffers and we're adding them together

803
00:31:52,059 --> 00:31:57,230
when the alpha value in the top buffer

804
00:31:55,069 --> 00:31:58,700
is zero we need the color to also be

805
00:31:57,230 --> 00:32:01,460
zero because we're treating it as a

806
00:31:58,700 --> 00:32:02,779
premultiplied alpha and if we're

807
00:32:01,460 --> 00:32:04,850
treating it as a premultiplied alpha

808
00:32:02,779 --> 00:32:06,980
what's very important to get correct

809
00:32:04,849 --> 00:32:09,259
there is that we can't have anywhere

810
00:32:06,980 --> 00:32:12,410
where there's color in the buffer that

811
00:32:09,259 --> 00:32:14,930
wasn't multiplied by its alpha value the

812
00:32:12,410 --> 00:32:18,259
clear unfortunately will do exactly that

813
00:32:14,930 --> 00:32:21,710
so that top buffer that front buffer

814
00:32:18,259 --> 00:32:23,599
actually needs to be cleared to zero not

815
00:32:21,710 --> 00:32:26,569
the background color because it's

816
00:32:23,599 --> 00:32:30,740
supposed to be a premultiplied alpha

817
00:32:26,569 --> 00:32:32,119
target right so I think what we actually

818
00:32:30,740 --> 00:32:34,400
want to do here is in this targeting

819
00:32:32,119 --> 00:32:37,159
next thing what we want to do is say

820
00:32:34,400 --> 00:32:39,500
well only the final peel really wants to

821
00:32:37,160 --> 00:32:41,120
do that so what we want to do here is

822
00:32:39,500 --> 00:32:43,970
say where we do this clear with the

823
00:32:41,119 --> 00:32:46,069
clear depth clear color situation what

824
00:32:43,970 --> 00:32:47,500
we want to do is actually do this in

825
00:32:46,069 --> 00:32:50,480
sort of a

826
00:32:47,500 --> 00:32:52,430
predicated way where we're going to

827
00:32:50,480 --> 00:32:54,769
actually clear to pure zero if it's the

828
00:32:52,430 --> 00:32:57,320
top one because we don't want it to have

829
00:32:54,769 --> 00:32:59,779
data anywhere that it should show

830
00:32:57,319 --> 00:33:01,099
through to the bottom so what I'm going

831
00:32:59,779 --> 00:33:02,930
to do here is just say if the target

832
00:33:01,099 --> 00:33:04,949
index was greater than zero do the

833
00:33:02,930 --> 00:33:08,730
normal clear but other

834
00:33:04,950 --> 00:33:10,590
why don't right and so now hopefully I'm

835
00:33:08,730 --> 00:33:13,230
hoping the trees will show up properly

836
00:33:10,589 --> 00:33:14,819
the top and they do so that's great news

837
00:33:13,230 --> 00:33:17,519
in fact if I rotate them here you can

838
00:33:14,819 --> 00:33:19,230
see that that fringing is now gone and

839
00:33:17,519 --> 00:33:20,638
so that's really good and so we're

840
00:33:19,230 --> 00:33:21,960
starting to look really nice here

841
00:33:20,638 --> 00:33:24,329
actually everything's pretty smooth and

842
00:33:21,960 --> 00:33:26,819
so we're just you know honestly the only

843
00:33:24,329 --> 00:33:30,569
thing I really see now is though is when

844
00:33:26,819 --> 00:33:33,500
we've got multiple overlapping alpha you

845
00:33:30,569 --> 00:33:36,808
know elements that seems to be a problem

846
00:33:33,500 --> 00:33:40,909
so I guess what I'd like to do here is

847
00:33:36,808 --> 00:33:44,369
I'd like to figure out a way to maybe

848
00:33:40,909 --> 00:33:49,830
mitigate that problem so what I'm going

849
00:33:44,369 --> 00:33:52,168
to sort of say is what if we were to say

850
00:33:49,829 --> 00:33:56,220
something like instead of using the

851
00:33:52,169 --> 00:34:00,149
depth test on alpha things maybe we

852
00:33:56,220 --> 00:34:04,710
force alpha things not to go through the

853
00:34:00,148 --> 00:34:06,778
depth test on the peel and we use their

854
00:34:04,710 --> 00:34:11,720
alpha values to make a judgment call

855
00:34:06,778 --> 00:34:11,719
about them or something right

856
00:34:11,960 --> 00:34:18,179
basically what I'm saying is if we were

857
00:34:14,550 --> 00:34:19,919
to draw if we were to draw alpha objects

858
00:34:18,179 --> 00:34:21,510
in in a way that doesn't respect the

859
00:34:19,918 --> 00:34:23,579
depth buffer you know with that would

860
00:34:21,510 --> 00:34:26,610
that be sufficient

861
00:34:23,579 --> 00:34:26,610
[Music]

862
00:34:32,079 --> 00:34:35,630
so I want to think this out loud a

863
00:34:34,190 --> 00:34:36,918
little bit because I guess we actually

864
00:34:35,630 --> 00:34:38,240
have a number of different things we

865
00:34:36,918 --> 00:34:39,529
could do here and I really don't know

866
00:34:38,239 --> 00:34:42,799
which one of them would be the most

867
00:34:39,530 --> 00:34:51,679
logical there's a really simple one we

868
00:34:42,800 --> 00:34:53,450
can do but but there's a couple things

869
00:34:51,679 --> 00:34:54,829
so first of all one thing that I'm not

870
00:34:53,449 --> 00:34:56,178
really sure about is I'm not really sure

871
00:34:54,829 --> 00:35:00,440
about whether you can kill just the

872
00:34:56,179 --> 00:35:08,180
death right and that's so so you know I

873
00:35:00,440 --> 00:35:09,740
don't really know I don't know if you

874
00:35:08,179 --> 00:35:11,569
can do a predicated depth right so I

875
00:35:09,739 --> 00:35:14,029
just let me just talk this out with you

876
00:35:11,570 --> 00:35:15,830
so that you know where my head's at and

877
00:35:14,030 --> 00:35:18,380
what I'm so that what I'll do will make

878
00:35:15,829 --> 00:35:29,860
will make sense so here we are on day

879
00:35:18,380 --> 00:35:33,070
382 and we need to deal with alpha plus

880
00:35:29,860 --> 00:35:33,070
Z buffer

881
00:35:35,309 --> 00:35:38,759
because that was actually looking pretty

882
00:35:37,320 --> 00:35:40,380
nice and one of the interesting things

883
00:35:38,760 --> 00:35:42,900
about it too I don't know if you can see

884
00:35:40,380 --> 00:35:45,809
it because you know again there's some

885
00:35:42,900 --> 00:35:48,269
bugs in it the other way but you'll

886
00:35:45,809 --> 00:35:50,579
notice that now when are like those

887
00:35:48,269 --> 00:35:52,889
little head particles for example when

888
00:35:50,579 --> 00:35:55,559
those don't overlap we now have the full

889
00:35:52,889 --> 00:35:57,929
range of alpha and similarly remember

890
00:35:55,559 --> 00:36:00,509
how banded our shadows used to look now

891
00:35:57,929 --> 00:36:02,549
our shadows are perfect so basically

892
00:36:00,510 --> 00:36:04,800
with the exception of the overlapping

893
00:36:02,550 --> 00:36:06,870
alpha kites we're really nailing it with

894
00:36:04,800 --> 00:36:08,550
this depth feeling it just produces a

895
00:36:06,869 --> 00:36:11,250
much better image and again we've done

896
00:36:08,550 --> 00:36:13,289
nothing in terms of sorting here so

897
00:36:11,250 --> 00:36:13,920
we're just letting the GPU do all the

898
00:36:13,289 --> 00:36:17,340
dirty work

899
00:36:13,920 --> 00:36:19,470
and that's pretty great so I really like

900
00:36:17,340 --> 00:36:21,059
this one depth field solution but we

901
00:36:19,469 --> 00:36:23,909
could even consider going to more than

902
00:36:21,059 --> 00:36:26,250
one depth field but what I want to do

903
00:36:23,909 --> 00:36:27,480
now is just think it through what we

904
00:36:26,250 --> 00:36:31,409
might need to do because it seems like

905
00:36:27,480 --> 00:36:33,840
depth field for for sprites is like

906
00:36:31,409 --> 00:36:36,029
perfect right it seems like it does

907
00:36:33,840 --> 00:36:39,120
everything correct so the only problem

908
00:36:36,030 --> 00:36:40,440
is the def peel for alpha is not quite

909
00:36:39,119 --> 00:36:41,699
good enough because when we have two

910
00:36:40,440 --> 00:36:43,500
things that go over each other but for

911
00:36:41,699 --> 00:36:51,299
sprites where the alphas just on the

912
00:36:43,500 --> 00:36:52,739
edges it works great right so we have a

913
00:36:51,300 --> 00:36:55,710
couple options here let's just talk

914
00:36:52,739 --> 00:36:57,509
about them a little bit so first of all

915
00:36:55,710 --> 00:36:59,130
let me just say what the standard

916
00:36:57,510 --> 00:37:00,480
procedure is a lot of times when you're

917
00:36:59,130 --> 00:37:01,950
dealing with transparent objects a lot

918
00:37:00,480 --> 00:37:03,449
of times people Bend they're transparent

919
00:37:01,949 --> 00:37:05,969
objects and draw their transparent

920
00:37:03,449 --> 00:37:07,649
object in a separate path so what

921
00:37:05,969 --> 00:37:09,929
happens is you know we could do

922
00:37:07,650 --> 00:37:13,019
something like that and we have three

923
00:37:09,929 --> 00:37:17,369
passes and we composite those passes so

924
00:37:13,019 --> 00:37:23,670
for example pass zero here right is

925
00:37:17,369 --> 00:37:27,059
going to be our front pixels and they're

926
00:37:23,670 --> 00:37:29,490
the opaque pixels right so things that

927
00:37:27,059 --> 00:37:32,460
have that the only alpha on them is

928
00:37:29,489 --> 00:37:35,129
actually going to be when they blend out

929
00:37:32,460 --> 00:37:40,230
to something you know and then there's

930
00:37:35,130 --> 00:37:42,680
pass one which is our back pixels that

931
00:37:40,230 --> 00:37:42,679
are opaque

932
00:37:44,269 --> 00:37:53,780
and then path two would be the

933
00:37:48,559 --> 00:37:55,369
transparent objects and that way we

934
00:37:53,780 --> 00:37:56,870
would always basically like the

935
00:37:55,369 --> 00:38:00,019
transparent objects would just kind of

936
00:37:56,869 --> 00:38:02,029
mush together into that buffer and we

937
00:38:00,019 --> 00:38:03,500
could try to do something clever there

938
00:38:02,030 --> 00:38:04,910
with how we blend them together maybe

939
00:38:03,500 --> 00:38:06,980
just always use additive blending for

940
00:38:04,909 --> 00:38:08,989
our Translate stuff I don't know but

941
00:38:06,980 --> 00:38:10,699
again you know just thinking about how

942
00:38:08,989 --> 00:38:12,289
this would work we'd have problems here

943
00:38:10,699 --> 00:38:14,389
if we didn't want to sort these guys

944
00:38:12,289 --> 00:38:17,239
which I don't I want to let the z-buffer

945
00:38:14,389 --> 00:38:21,559
do it we'd have problems there where we

946
00:38:17,239 --> 00:38:25,129
have you know again those if we want to

947
00:38:21,559 --> 00:38:26,779
do shadow sprite compositing I feel like

948
00:38:25,130 --> 00:38:28,640
that's going to be a problem we probably

949
00:38:26,780 --> 00:38:30,320
have to have two passes one for additive

950
00:38:28,639 --> 00:38:32,449
one from subtractive or something like

951
00:38:30,320 --> 00:38:35,269
this for when shadows overlap each other

952
00:38:32,449 --> 00:38:37,369
and all these other sorts of things so

953
00:38:35,269 --> 00:38:39,530
what I wonder is if we're doing the

954
00:38:37,369 --> 00:38:41,539
peeling and we end up in a situation

955
00:38:39,530 --> 00:38:43,370
where we're doing these passes is there

956
00:38:41,539 --> 00:38:46,309
a way we could do something smarter I'm

957
00:38:43,369 --> 00:38:48,079
just interested to know could we do

958
00:38:46,309 --> 00:38:55,789
something smarter with the width the

959
00:38:48,079 --> 00:38:58,519
depth where could we do something where

960
00:38:55,789 --> 00:39:00,940
we use the fact that we know something's

961
00:38:58,519 --> 00:39:03,559
alpha or not to do something smarter

962
00:39:00,940 --> 00:39:07,720
when we're doing these passes when we're

963
00:39:03,559 --> 00:39:07,719
doing the two def peel passes right

964
00:39:07,809 --> 00:39:11,239
because let's take the case of two

965
00:39:09,769 --> 00:39:13,369
shadows that overlap each other for

966
00:39:11,239 --> 00:39:14,689
example right if we know we have

967
00:39:13,369 --> 00:39:16,969
multiple shadows that are overlapping

968
00:39:14,690 --> 00:39:18,980
each other we really only need to take

969
00:39:16,969 --> 00:39:21,230
the darkest one right so if we knew that

970
00:39:18,980 --> 00:39:23,780
the only thing that we ever had with

971
00:39:21,230 --> 00:39:28,070
shadows all we'd have to do is go well

972
00:39:23,780 --> 00:39:29,300
if I've got a shadow I could remember

973
00:39:28,070 --> 00:39:31,280
the fact that this is a shadow

974
00:39:29,300 --> 00:39:34,370
potentially right so write something

975
00:39:31,280 --> 00:39:36,590
into the depth buffer or the spare you

976
00:39:34,369 --> 00:39:38,809
know a piece of the buffer that we

977
00:39:36,590 --> 00:39:41,620
weren't using like say the Alpha value

978
00:39:38,809 --> 00:39:45,139
right because the the destination alpha

979
00:39:41,619 --> 00:39:47,900
on past one is not used like here we use

980
00:39:45,139 --> 00:39:50,900
the RGB and a of the front pixel right

981
00:39:47,900 --> 00:39:53,840
this uses everything but here we only

982
00:39:50,900 --> 00:39:56,960
care about the RGB a is not really used

983
00:39:53,840 --> 00:39:57,590
right and right now the only reason

984
00:39:56,960 --> 00:40:01,039
we're using

985
00:39:57,590 --> 00:40:02,870
Elsa at all is because in that pass we

986
00:40:01,039 --> 00:40:05,090
just save the alpha so we can back it

987
00:40:02,869 --> 00:40:06,529
out later but we could just back it out

988
00:40:05,090 --> 00:40:09,680
at the time we write it there's no need

989
00:40:06,530 --> 00:40:12,410
to actually store it here so we could we

990
00:40:09,679 --> 00:40:15,919
have a fourth channel where we could

991
00:40:12,409 --> 00:40:17,899
store information that we're not using

992
00:40:15,920 --> 00:40:19,789
and that information could be like a

993
00:40:17,900 --> 00:40:25,250
total shadow amount or who knows what

994
00:40:19,789 --> 00:40:27,139
right so we could do something there so

995
00:40:25,250 --> 00:40:29,059
if we were if we were just trying to

996
00:40:27,139 --> 00:40:31,190
render shadows there's no question that

997
00:40:29,059 --> 00:40:32,449
we could do that relatively cleanly but

998
00:40:31,190 --> 00:40:34,070
of course if we were just rendering

999
00:40:32,449 --> 00:40:36,199
shadows we could also just do them in a

1000
00:40:34,070 --> 00:40:38,720
second pass right if we if we already

1001
00:40:36,199 --> 00:40:40,939
bend our shadows we could do them here

1002
00:40:38,719 --> 00:40:42,589
so I don't know that that gets us out of

1003
00:40:40,940 --> 00:40:44,659
anything we could just do a shadow pass

1004
00:40:42,590 --> 00:40:49,579
basically right and that would be fine

1005
00:40:44,659 --> 00:40:53,869
but I don't know let's once we broaden

1006
00:40:49,579 --> 00:40:58,369
it out so we've got shadows and we've

1007
00:40:53,869 --> 00:41:00,650
got fading right is basically the two

1008
00:40:58,369 --> 00:41:02,179
things that we've got at the moment so

1009
00:41:00,650 --> 00:41:04,340
we've got things that that want to

1010
00:41:02,179 --> 00:41:06,710
darken what's underneath them and we've

1011
00:41:04,340 --> 00:41:10,900
got things that want to fade out so they

1012
00:41:06,710 --> 00:41:10,900
are there but they're fading out right

1013
00:41:23,190 --> 00:41:27,568
so it makes me wonder

1014
00:41:37,518 --> 00:41:44,699
it makes me wonder if we were to just do

1015
00:41:42,599 --> 00:41:46,979
a three pass solution where we do past

1016
00:41:44,699 --> 00:41:52,318
zero pass one as we're doing now and we

1017
00:41:46,978 --> 00:41:54,899
basically force anything that isn't part

1018
00:41:52,318 --> 00:41:59,088
of an opaque object so you know anything

1019
00:41:54,900 --> 00:41:59,088
that's got an alpha value on the object

1020
00:42:02,630 --> 00:42:08,519
I'm trying to think if that would be

1021
00:42:04,588 --> 00:42:09,900
sufficient I mean other thing we could

1022
00:42:08,518 --> 00:42:12,328
do is just say the heck with it and do a

1023
00:42:09,900 --> 00:42:14,278
bunch of def peels right just really

1024
00:42:12,329 --> 00:42:17,818
force the GPU to do to go crazy and

1025
00:42:14,278 --> 00:42:19,498
basically do effectively n depth fields

1026
00:42:17,818 --> 00:42:21,900
which is kind of like doing the atomic

1027
00:42:19,498 --> 00:42:25,848
version where we just do for death deals

1028
00:42:21,900 --> 00:42:25,849
and say the heck with it

1029
00:42:44,568 --> 00:42:53,748
I don't know I do not know well I do

1030
00:42:49,789 --> 00:42:57,709
know is I should have crossed my V to

1031
00:42:53,748 --> 00:43:00,078
distinguish it from a two so I'm really

1032
00:42:57,708 --> 00:43:04,038
not sure what to do here I really don't

1033
00:43:00,079 --> 00:43:07,239
know I would like a better idea of what

1034
00:43:04,039 --> 00:43:12,400
I should do here and I'm just not sure

1035
00:43:07,239 --> 00:43:12,400
what the what the cleanest approach is

1036
00:43:12,668 --> 00:43:17,358
because I don't know yet I'm curious to

1037
00:43:15,409 --> 00:43:21,278
just see if we could set this up to set

1038
00:43:17,358 --> 00:43:23,538
an arbitrary number of depth feels right

1039
00:43:21,278 --> 00:43:25,429
so I'm wondering what would happen if I

1040
00:43:23,539 --> 00:43:27,829
did that so let's say that we wanted to

1041
00:43:25,429 --> 00:43:30,588
do you know more depth deals than the

1042
00:43:27,829 --> 00:43:33,650
amount that we're currently doing you

1043
00:43:30,588 --> 00:43:36,188
know and so if we were going to do more

1044
00:43:33,650 --> 00:43:36,189
depth deals

1045
00:43:41,329 --> 00:43:47,929
I guess one thing that's kind of a

1046
00:43:43,730 --> 00:43:50,750
little bit interesting is I wonder if we

1047
00:43:47,929 --> 00:43:52,969
don't if we really don't have to do it

1048
00:43:50,750 --> 00:43:55,039
quite the way I was doing it because one

1049
00:43:52,969 --> 00:44:03,469
of the things with deaf peals is we need

1050
00:43:55,039 --> 00:44:05,719
to separate we need to separate deaf

1051
00:44:03,469 --> 00:44:07,969
buffers but do we really need to

1052
00:44:05,719 --> 00:44:10,609
separate frame buffers because I don't

1053
00:44:07,969 --> 00:44:12,589
think we actually do I think we can just

1054
00:44:10,610 --> 00:44:16,910
keep accumulating into a separate frame

1055
00:44:12,590 --> 00:44:19,579
buffer going from front to back and that

1056
00:44:16,909 --> 00:44:24,199
would allow us to not have to do a final

1057
00:44:19,579 --> 00:44:31,819
composite at all right to be clear about

1058
00:44:24,199 --> 00:44:36,049
what I'm talking about if we were to

1059
00:44:31,820 --> 00:44:40,550
draw the first frame the first peel we

1060
00:44:36,050 --> 00:44:43,280
know that's the front pixel right if we

1061
00:44:40,550 --> 00:44:45,019
simply drew onto the same frame buffer

1062
00:44:43,280 --> 00:44:47,810
again if we just draw to this frame

1063
00:44:45,019 --> 00:44:49,639
buffer again using the the depth peel

1064
00:44:47,809 --> 00:44:53,000
technique so we have a separate depth

1065
00:44:49,639 --> 00:44:55,940
buffer but if we just threw it on again

1066
00:44:53,000 --> 00:44:58,880
I feel like we could just use

1067
00:44:55,940 --> 00:45:01,760
destination alpha blending to do the

1068
00:44:58,880 --> 00:45:05,180
blend at that point all we do is use the

1069
00:45:01,760 --> 00:45:07,120
destinations alpha value to do one minus

1070
00:45:05,179 --> 00:45:09,319
whatever the value we're writing in and

1071
00:45:07,119 --> 00:45:12,079
write to the frame buffer using a

1072
00:45:09,320 --> 00:45:14,030
standard blend mode right using standard

1073
00:45:12,079 --> 00:45:16,219
blending and I feel like that would

1074
00:45:14,030 --> 00:45:19,160
allow us to accumulate depth field as

1075
00:45:16,219 --> 00:45:21,199
many times as we want and furthermore we

1076
00:45:19,159 --> 00:45:24,289
could actually make that be parameterize

1077
00:45:21,199 --> 00:45:26,359
on the frame rate so as the frame rate

1078
00:45:24,289 --> 00:45:28,489
degrades we'd you know on slower

1079
00:45:26,360 --> 00:45:30,890
machines we draw a fewer times and you

1080
00:45:28,489 --> 00:45:32,359
to have more artifacts but as if you

1081
00:45:30,889 --> 00:45:35,150
were on a higher-end machine it would do

1082
00:45:32,360 --> 00:45:40,849
more depth passes and improve the

1083
00:45:35,150 --> 00:45:42,230
quality does that make sense again I

1084
00:45:40,849 --> 00:45:44,150
don't really know if this is the

1085
00:45:42,230 --> 00:45:46,659
technique that anyone uses but it's just

1086
00:45:44,150 --> 00:45:46,660
kind of interesting

1087
00:45:49,289 --> 00:45:55,409
I feel like it's it's interesting I kind

1088
00:45:54,119 --> 00:45:56,519
of like it I kind of just want to go

1089
00:45:55,409 --> 00:45:58,349
with it

1090
00:45:56,519 --> 00:46:01,110
so let's imagine that we were going to

1091
00:45:58,349 --> 00:46:02,849
do that and let's imagine so so let's

1092
00:46:01,110 --> 00:46:04,740
pretend that that's basically just how

1093
00:46:02,849 --> 00:46:07,440
the renderer worked is we just keep

1094
00:46:04,739 --> 00:46:09,089
accumulating and we draw as many times

1095
00:46:07,440 --> 00:46:10,320
as we feel like we can based on the

1096
00:46:09,090 --> 00:46:12,930
quality of the machine that we're

1097
00:46:10,320 --> 00:46:16,110
running on so maybe we support like you

1098
00:46:12,929 --> 00:46:18,149
know eight separate depth peels right so

1099
00:46:16,110 --> 00:46:21,570
it's basically doing the same number of

1100
00:46:18,150 --> 00:46:23,220
fills as the multi sample one was but

1101
00:46:21,570 --> 00:46:25,800
now with perfect perfect alpha

1102
00:46:23,219 --> 00:46:27,899
compositing you know on a fast card we

1103
00:46:25,800 --> 00:46:29,370
could just go ahead and do that on a car

1104
00:46:27,900 --> 00:46:32,789
that was really slow maybe we only do

1105
00:46:29,369 --> 00:46:34,349
two or three depth fields and you know

1106
00:46:32,789 --> 00:46:35,820
occasionally you see some artifacts when

1107
00:46:34,349 --> 00:46:42,210
you have lots of things on top of each

1108
00:46:35,820 --> 00:46:43,769
other or something like this it's just

1109
00:46:42,210 --> 00:46:47,159
an interesting idea it's kind of like it

1110
00:46:43,769 --> 00:46:48,960
and so I'm gonna try it I don't have

1111
00:46:47,159 --> 00:46:50,909
anything else to say about it other than

1112
00:46:48,960 --> 00:46:53,190
that that I find it interesting and I

1113
00:46:50,909 --> 00:46:54,989
like experimenting with things that I

1114
00:46:53,190 --> 00:46:57,630
find interesting

1115
00:46:54,989 --> 00:47:01,079
so maybe what I'll do is I'll just say

1116
00:46:57,630 --> 00:47:03,360
that this max rendered target index is

1117
00:47:01,079 --> 00:47:05,759
is just always kind of going to be two

1118
00:47:03,360 --> 00:47:07,950
at this point because really what we're

1119
00:47:05,760 --> 00:47:10,160
talking about here is we're just going

1120
00:47:07,949 --> 00:47:13,500
to have like a ping-pong buffer scenario

1121
00:47:10,159 --> 00:47:16,500
and so when we do when we create these

1122
00:47:13,500 --> 00:47:19,260
we're actually not going to create a

1123
00:47:16,500 --> 00:47:22,860
separate frame buffer every time we're

1124
00:47:19,260 --> 00:47:24,990
just going to create the frame that

1125
00:47:22,860 --> 00:47:27,329
we're just going to create one image

1126
00:47:24,989 --> 00:47:29,909
frame buffer and the only thing that

1127
00:47:27,329 --> 00:47:36,210
we're really going to be doing having

1128
00:47:29,909 --> 00:47:37,949
more of is the is the depth buffer so

1129
00:47:36,210 --> 00:47:40,470
we're going to have to death buffers but

1130
00:47:37,949 --> 00:47:46,710
we're only going to have one image

1131
00:47:40,469 --> 00:47:48,959
buffer if that makes sense so let's see

1132
00:47:46,710 --> 00:47:52,110
what happens if we do that so what I'm

1133
00:47:48,960 --> 00:47:57,150
going to do here is say okay we're going

1134
00:47:52,110 --> 00:48:00,269
to take the the image buffer here which

1135
00:47:57,150 --> 00:48:02,250
is this part this this bit right here

1136
00:48:00,269 --> 00:48:02,849
and I'm just going to say instead of

1137
00:48:02,250 --> 00:48:06,630
calling

1138
00:48:02,849 --> 00:48:10,259
text image 2d I'm going to skip this

1139
00:48:06,630 --> 00:48:13,530
part of it this fine textured text

1140
00:48:10,260 --> 00:48:15,930
handle 0 gen textures thing I'm just

1141
00:48:13,530 --> 00:48:18,450
going to skip this part of creating this

1142
00:48:15,929 --> 00:48:20,399
image and I'm always well you know what

1143
00:48:18,449 --> 00:48:21,329
I'll even leave that in for now because

1144
00:48:20,400 --> 00:48:23,010
I guess I don't have to get rid of the

1145
00:48:21,329 --> 00:48:24,599
creation of it we can get rid of

1146
00:48:23,010 --> 00:48:26,460
creation later when I verify this to the

1147
00:48:24,599 --> 00:48:28,139
Technic I want to use what I'm going to

1148
00:48:26,460 --> 00:48:31,230
do is when we call GL frame vertex QD

1149
00:48:28,139 --> 00:48:33,329
rather than using the texture handle 0

1150
00:48:31,230 --> 00:48:36,269
that we actually created for this frame

1151
00:48:33,329 --> 00:48:38,309
buffer I'm actually going to use the

1152
00:48:36,269 --> 00:48:43,380
global frame buffer texture handle for

1153
00:48:38,309 --> 00:48:46,619
slot 0 always so we're always drawing to

1154
00:48:43,380 --> 00:48:50,720
the same color buffer we're not always

1155
00:48:46,619 --> 00:48:53,159
drawing to the same depth buffer right

1156
00:48:50,719 --> 00:48:56,129
that's basically all we're talking about

1157
00:48:53,159 --> 00:48:58,649
here so this way we can kind of swap

1158
00:48:56,130 --> 00:49:00,809
which one we're drawing to based on

1159
00:48:58,650 --> 00:49:03,180
which death buffer we want to use but

1160
00:49:00,809 --> 00:49:06,659
we're not going to change which color

1161
00:49:03,179 --> 00:49:08,669
buffer we write to so we write the first

1162
00:49:06,659 --> 00:49:10,139
one in and then we have that buffer we

1163
00:49:08,670 --> 00:49:14,670
switch to the other one so that we can

1164
00:49:10,139 --> 00:49:16,559
read from the the texture buffer and

1165
00:49:14,670 --> 00:49:19,970
then we can keep ping-ponging back and

1166
00:49:16,559 --> 00:49:22,049
forth and I think that it just work

1167
00:49:19,969 --> 00:49:23,730
alright so then the other thing that I

1168
00:49:22,050 --> 00:49:27,120
want to do is just change this shader

1169
00:49:23,730 --> 00:49:29,940
then to skip the read and just to just

1170
00:49:27,119 --> 00:49:32,759
all it's going to do is just bring just

1171
00:49:29,940 --> 00:49:34,769
that one basic texture to the front so

1172
00:49:32,760 --> 00:49:38,340
this stuff now would go away basically

1173
00:49:34,769 --> 00:49:41,340
and all we're going to do is we're going

1174
00:49:38,340 --> 00:49:44,010
to say hey let's take the the fragment

1175
00:49:41,340 --> 00:49:46,100
color from just one of the buffers right

1176
00:49:44,010 --> 00:49:50,040
so skip all that stuff and just say

1177
00:49:46,099 --> 00:49:55,559
result color equal to0 that's all we're

1178
00:49:50,039 --> 00:49:57,480
going to do right alright so now what we

1179
00:49:55,559 --> 00:49:59,460
need to do is we since since we're only

1180
00:49:57,480 --> 00:50:01,349
going to see frame buffer 1 we need to

1181
00:49:59,460 --> 00:50:04,559
now turn on blending and actually make

1182
00:50:01,349 --> 00:50:06,389
what I just said a reality so what we

1183
00:50:04,559 --> 00:50:09,449
need to do here is we need to re-enable

1184
00:50:06,389 --> 00:50:12,900
blending because we need to actually you

1185
00:50:09,449 --> 00:50:16,119
know operate on the frame buffer and so

1186
00:50:12,900 --> 00:50:19,119
we need to do is set the GL blend func

1187
00:50:16,119 --> 00:50:21,279
and we need to set it now to something a

1188
00:50:19,119 --> 00:50:24,190
little more sensible than this right so

1189
00:50:21,280 --> 00:50:27,300
the first time through we want to just

1190
00:50:24,190 --> 00:50:29,920
write it something like this basically

1191
00:50:27,300 --> 00:50:31,750
so we're not we have blending on but the

1192
00:50:29,920 --> 00:50:34,539
function actually doesn't do any

1193
00:50:31,750 --> 00:50:36,340
blending and in fact I guess what we

1194
00:50:34,539 --> 00:50:39,219
could do is actually disable the blend

1195
00:50:36,340 --> 00:50:41,170
entirely and set the other blends

1196
00:50:39,219 --> 00:50:43,989
function correctly I don't know how we

1197
00:50:41,170 --> 00:50:46,409
want to do this it's tough to say but

1198
00:50:43,989 --> 00:50:50,919
anyway we could disable the blend here

1199
00:50:46,409 --> 00:50:52,420
and then later switch it back on and so

1200
00:50:50,920 --> 00:51:02,680
to switch it back on what I'm going to

1201
00:50:52,420 --> 00:51:06,340
do here is say okay let's go to here so

1202
00:51:02,679 --> 00:51:09,940
when we end the peels right so we do the

1203
00:51:06,340 --> 00:51:14,769
begin peels and then feels when we jump

1204
00:51:09,940 --> 00:51:16,780
back to do this peel count here what I

1205
00:51:14,769 --> 00:51:19,179
want to do is it's the first peel and

1206
00:51:16,780 --> 00:51:22,000
we're going through right then we do

1207
00:51:19,179 --> 00:51:25,269
want to do no blending when it's the

1208
00:51:22,000 --> 00:51:27,969
second peel that we're coming through we

1209
00:51:25,269 --> 00:51:29,500
want to enable blending and we want to

1210
00:51:27,969 --> 00:51:31,509
set the blend function to be something

1211
00:51:29,500 --> 00:51:33,250
that's going to take the background the

1212
00:51:31,510 --> 00:51:35,320
pixels that are behind the ones and

1213
00:51:33,250 --> 00:51:37,809
blend them in with a destination alpha

1214
00:51:35,320 --> 00:51:43,660
so what we want to do there is say well

1215
00:51:37,809 --> 00:51:47,380
we want one - destination alpha for

1216
00:51:43,659 --> 00:51:48,969
whatever is currently coming in so the

1217
00:51:47,380 --> 00:51:50,680
background pixel is going to take it's

1218
00:51:48,969 --> 00:51:52,269
going to take the frame buffer which is

1219
00:51:50,679 --> 00:51:53,619
now the foreground pixel right thing

1220
00:51:52,269 --> 00:51:55,929
that's in front of us we're going to

1221
00:51:53,619 --> 00:51:57,940
modulate ourselves by that destination

1222
00:51:55,929 --> 00:52:00,399
alpha and then we're going to just take

1223
00:51:57,940 --> 00:52:02,200
whatever is in the front buffer is just

1224
00:52:00,400 --> 00:52:07,869
already pre multiplied so that we could

1225
00:52:02,199 --> 00:52:11,889
just take right and draw so that should

1226
00:52:07,869 --> 00:52:15,460
composite on top in theory and then what

1227
00:52:11,889 --> 00:52:21,449
we have to do is when we are so when

1228
00:52:15,460 --> 00:52:21,449
we're oh I put that in the wrong place

1229
00:52:23,769 --> 00:52:28,940
sorry this is actually the first time it

1230
00:52:27,019 --> 00:52:30,170
comes through it hits NPL so now it

1231
00:52:28,940 --> 00:52:34,730
needs to switch to the mode for the

1232
00:52:30,170 --> 00:52:36,440
second peel right so here we go so now

1233
00:52:34,730 --> 00:52:38,150
what I'm expecting is something kind of

1234
00:52:36,440 --> 00:52:42,289
similar to what we have before it's not

1235
00:52:38,150 --> 00:52:46,369
quite right here so I didn't I didn't

1236
00:52:42,289 --> 00:52:48,619
quite do it correctly but you're getting

1237
00:52:46,369 --> 00:52:54,049
closer so if we enable blend and we have

1238
00:52:48,619 --> 00:52:56,779
1 minus s alpha GL 1 here I'm going to

1239
00:52:54,050 --> 00:53:09,140
have to figure out why we're not quite

1240
00:52:56,780 --> 00:53:15,560
getting what I expect there and we are

1241
00:53:09,139 --> 00:53:17,539
drawing with no blending here correct so

1242
00:53:15,559 --> 00:53:20,420
that in theory should be filling the

1243
00:53:17,539 --> 00:53:22,940
destination alpha channel and we are

1244
00:53:20,420 --> 00:53:30,409
clearing the destination alpha to 0 as

1245
00:53:22,940 --> 00:53:40,429
well so that should be correct as far as

1246
00:53:30,409 --> 00:53:41,839
I know seems right to me but we're

1247
00:53:40,429 --> 00:53:43,609
definitely not getting what I would have

1248
00:53:41,840 --> 00:53:45,650
expected so what I would have expected

1249
00:53:43,610 --> 00:53:48,349
here is is basically the same thing we

1250
00:53:45,650 --> 00:53:51,619
had before what's a little weird about

1251
00:53:48,349 --> 00:53:54,170
it is we are getting sort of that in a

1252
00:53:51,619 --> 00:53:55,639
couple places so it's a little weird

1253
00:53:54,170 --> 00:53:59,139
because we're getting sort of that and

1254
00:53:55,639 --> 00:54:01,519
sort of not which is a little confusing

1255
00:53:59,139 --> 00:54:06,609
because I would have expected it to be

1256
00:54:01,519 --> 00:54:06,610
more wrong than that but at the moment

1257
00:54:06,909 --> 00:54:10,940
yeah at the moment I'm definitely seeing

1258
00:54:09,199 --> 00:54:12,439
some things that are like those

1259
00:54:10,940 --> 00:54:13,670
artifacts weren't there in the other

1260
00:54:12,440 --> 00:54:16,280
path and we should be able to get

1261
00:54:13,670 --> 00:54:18,980
literally exactly the same thing that we

1262
00:54:16,280 --> 00:54:20,750
got in the other path and so I want to

1263
00:54:18,980 --> 00:54:23,590
just figure out what I messed up there

1264
00:54:20,750 --> 00:54:27,590
because I definitely messed up something

1265
00:54:23,590 --> 00:54:30,200
so let's see here well I guess one thing

1266
00:54:27,590 --> 00:54:33,740
so here's one problem we don't want to

1267
00:54:30,199 --> 00:54:36,710
clear the other buffer anymore because

1268
00:54:33,739 --> 00:54:39,739
we only have one color buffer now

1269
00:54:36,710 --> 00:54:43,818
so we only want to set up we only want

1270
00:54:39,739 --> 00:54:53,209
to do the clear at all like this clear

1271
00:54:43,818 --> 00:54:56,029
needs to not happen right so we only

1272
00:54:53,210 --> 00:54:58,818
want to clear the depth buffer on any

1273
00:54:56,030 --> 00:55:01,400
buffers after the first buffer we don't

1274
00:54:58,818 --> 00:55:04,009
want to clear the color buffer because

1275
00:55:01,400 --> 00:55:07,730
that's just erroneous right now that

1276
00:55:04,010 --> 00:55:10,190
didn't help us at all but you know that

1277
00:55:07,730 --> 00:55:13,119
that was one of the artifacts we fixed

1278
00:55:10,190 --> 00:55:14,929
before us we have to keep that in place

1279
00:55:13,119 --> 00:55:18,050
so let's see now

1280
00:55:14,929 --> 00:55:19,519
so when we are doing those that seems

1281
00:55:18,050 --> 00:55:21,490
like it would be reasonable we're

1282
00:55:19,519 --> 00:55:27,588
drawing to the first frame buffer first

1283
00:55:21,489 --> 00:55:30,889
and we are drawing with blend disabled

1284
00:55:27,588 --> 00:55:32,568
which is what I would expect when we hit

1285
00:55:30,889 --> 00:55:34,848
the first set appeals we're not blending

1286
00:55:32,568 --> 00:55:38,719
so we should fill the buffer up with

1287
00:55:34,849 --> 00:55:42,440
colors I guess one thing I can try here

1288
00:55:38,719 --> 00:55:45,048
is just disable everything in the second

1289
00:55:42,440 --> 00:55:47,599
pass so what I can do is I can just say

1290
00:55:45,048 --> 00:55:51,980
hey you know what let's take a GL blend

1291
00:55:47,599 --> 00:55:55,099
song of zero one so it doesn't change

1292
00:55:51,980 --> 00:55:57,400
what's in the destination and that

1293
00:55:55,099 --> 00:56:01,609
should give me a little bit of a better

1294
00:55:57,400 --> 00:56:04,010
view of what got written first right so

1295
00:56:01,608 --> 00:56:07,239
that to me looks like exactly what I

1296
00:56:04,010 --> 00:56:10,490
wanted to see in that first frame buffer

1297
00:56:07,239 --> 00:56:13,189
so I don't see anything particularly odd

1298
00:56:10,489 --> 00:56:15,019
there to be concerned about so it looks

1299
00:56:13,190 --> 00:56:17,480
like it's the second pass that's really

1300
00:56:15,019 --> 00:56:19,489
doing the weird stuff whatever that

1301
00:56:17,480 --> 00:56:21,798
weird stuff is so I'm going to go ahead

1302
00:56:19,489 --> 00:56:26,209
and now do the opposite of what I just

1303
00:56:21,798 --> 00:56:30,318
did I'm going to set it so that now I

1304
00:56:26,210 --> 00:56:32,358
only see the second pass so this will

1305
00:56:30,318 --> 00:56:36,318
only draw what's in the second pass I

1306
00:56:32,358 --> 00:56:40,670
won't see anything that was in the first

1307
00:56:36,318 --> 00:56:43,179
pass and so looking at these honestly

1308
00:56:40,670 --> 00:56:43,180
again

1309
00:56:46,469 --> 00:57:03,159
that that looks correct

1310
00:56:49,449 --> 00:57:07,659
ah I know why I can't do this so because

1311
00:57:03,159 --> 00:57:10,529
I only want to render once the blend I

1312
00:57:07,659 --> 00:57:15,670
only want to render the closest thing in

1313
00:57:10,530 --> 00:57:17,500
right so that I can't just render

1314
00:57:15,670 --> 00:57:19,659
everything because the z-buffer is still

1315
00:57:17,500 --> 00:57:22,030
doing the sort and I only want to blend

1316
00:57:19,659 --> 00:57:26,589
the one that actually passes the the

1317
00:57:22,030 --> 00:57:30,250
front most pass right so I really don't

1318
00:57:26,590 --> 00:57:35,079
have the ability to do exactly what I

1319
00:57:30,250 --> 00:57:37,480
wanted to do which is to just sum into a

1320
00:57:35,079 --> 00:57:41,500
single color buffer I need to color

1321
00:57:37,480 --> 00:57:44,199
buffers all right so I do need to do the

1322
00:57:41,500 --> 00:57:49,469
death peel the same way that I was doing

1323
00:57:44,199 --> 00:57:49,469
it basically always

1324
00:57:58,679 --> 00:58:04,268
so if I want to do successive summations

1325
00:58:01,719 --> 00:58:07,868
I need to smack down the color buffers

1326
00:58:04,268 --> 00:58:09,429
so that they can be added together in

1327
00:58:07,869 --> 00:58:11,318
that way so I don't think there's any

1328
00:58:09,429 --> 00:58:14,889
way to do an incremental version like

1329
00:58:11,318 --> 00:58:18,579
that at the very least I would have to

1330
00:58:14,889 --> 00:58:21,009
do every time I did a depth peel I could

1331
00:58:18,579 --> 00:58:23,859
smack it down into the existing depth

1332
00:58:21,009 --> 00:58:27,759
peel but into the existing like

1333
00:58:23,858 --> 00:58:30,998
summation but I do have to use one extra

1334
00:58:27,759 --> 00:58:36,309
color buffer all the time right

1335
00:58:30,998 --> 00:58:40,358
I don't have the option of sort of doing

1336
00:58:36,309 --> 00:58:43,809
the I don't have the ability to do the

1337
00:58:40,358 --> 00:58:45,639
sort of cheesy always some into one

1338
00:58:43,809 --> 00:58:50,559
buffer thing because I need to let the Z

1339
00:58:45,639 --> 00:58:52,179
buffer do the sort every time yeah so

1340
00:58:50,559 --> 00:58:53,650
unfortunately that means I can't quite

1341
00:58:52,179 --> 00:58:56,528
go infinite like I was thinking before

1342
00:58:53,650 --> 00:58:58,450
without having a smack down you know a

1343
00:58:56,528 --> 00:59:00,518
thing that actually smooches down to

1344
00:58:58,449 --> 00:59:03,338
takes two color buffers and merges them

1345
00:59:00,518 --> 00:59:04,659
at the end of every peel that's not the

1346
00:59:03,338 --> 00:59:13,538
end of the world but it is more

1347
00:59:04,659 --> 00:59:19,298
expensive right so I'm trying to think

1348
00:59:13,539 --> 00:59:21,730
of how I want to do this it's obviously

1349
00:59:19,298 --> 00:59:24,309
more efficient to just do it in one so I

1350
00:59:21,730 --> 00:59:26,440
think what I might do then is I think

1351
00:59:24,309 --> 00:59:29,079
what I might do is say let's suppose we

1352
00:59:26,440 --> 00:59:31,329
want to do us four depth fields or

1353
00:59:29,079 --> 00:59:32,829
something right so I set max friend

1354
00:59:31,329 --> 00:59:35,170
wrote argot in next to three and I

1355
00:59:32,829 --> 00:59:38,318
generate that many of these buffers it's

1356
00:59:35,170 --> 00:59:40,869
more buffers than we actually need but

1357
00:59:38,318 --> 00:59:43,389
I'm just going to try it for now they

1358
00:59:40,869 --> 00:59:45,309
get cleared out so what I want to do

1359
00:59:43,389 --> 00:59:49,719
here is I want to say if render target

1360
00:59:45,309 --> 00:59:51,400
index equals max render target index

1361
00:59:49,719 --> 00:59:52,748
then we're at the last one and that's

1362
00:59:51,400 --> 00:59:55,150
make clear all the rest of them we got

1363
00:59:52,748 --> 00:59:58,959
cleared to zero I think it's how we want

1364
00:59:55,150 --> 01:00:01,838
it right then what I do here is I'd say

1365
00:59:58,960 --> 01:00:04,809
well okay we always want to bind the

1366
01:00:01,838 --> 01:00:09,250
peel count buffer whichever buffer that

1367
01:00:04,809 --> 01:00:16,870
is when we come through here

1368
01:00:09,250 --> 01:00:20,409
and we always want to pull when we when

1369
01:00:16,869 --> 01:00:22,630
we are doing that death test we always

1370
01:00:20,409 --> 01:00:27,369
want to pull from whatever the previous

1371
01:00:22,630 --> 01:00:29,019
rounds depth buffer was so in here where

1372
01:00:27,369 --> 01:00:31,630
we're doing peeling oh so we're already

1373
01:00:29,019 --> 01:00:33,420
and we're already doing that so that

1374
01:00:31,630 --> 01:00:36,610
would produce a number of of those

1375
01:00:33,420 --> 01:00:39,519
buffers and what we could do here is we

1376
01:00:36,610 --> 01:00:45,400
could do a four I loop right where we

1377
01:00:39,519 --> 01:00:48,130
set the active texture so we could say

1378
01:00:45,400 --> 01:00:55,150
oh you know peel index Max render target

1379
01:00:48,130 --> 01:00:56,920
index and we just set it this way so

1380
01:00:55,150 --> 01:00:59,920
that like sets up all of the peels

1381
01:00:56,920 --> 01:01:02,530
properly and we could wind down the

1382
01:00:59,920 --> 01:01:06,309
peels in the same way so we just say

1383
01:01:02,530 --> 01:01:07,930
like okay you know nuke the peels the

1384
01:01:06,309 --> 01:01:08,559
same I don't really know if I need to do

1385
01:01:07,929 --> 01:01:10,299
that or not

1386
01:01:08,559 --> 01:01:14,049
I never sure nope until what state needs

1387
01:01:10,300 --> 01:01:16,780
to get unset but you know you get the

1388
01:01:14,050 --> 01:01:19,660
idea so we could do something like this

1389
01:01:16,780 --> 01:01:21,700
and that would give us you know as many

1390
01:01:19,659 --> 01:01:23,829
of those as we wanted right we could we

1391
01:01:21,699 --> 01:01:25,869
could just do as many as you wanted but

1392
01:01:23,829 --> 01:01:28,029
the only downside there is that we do

1393
01:01:25,869 --> 01:01:29,799
then need to go like okay we need a

1394
01:01:28,030 --> 01:01:34,840
bunch of different samplers here right

1395
01:01:29,800 --> 01:01:37,180
we need all of these additional samplers

1396
01:01:34,840 --> 01:01:41,470
to get those additional depth feels

1397
01:01:37,179 --> 01:01:45,099
right so then we end up having to do you

1398
01:01:41,469 --> 01:01:47,019
know multiple peels there and I think in

1399
01:01:45,099 --> 01:01:51,610
this case if we always are just doing

1400
01:01:47,019 --> 01:01:53,559
the summation everything is modulated by

1401
01:01:51,610 --> 01:01:57,160
its alpha so I feel like only the final

1402
01:01:53,559 --> 01:02:04,320
peel needs to actually be the one that

1403
01:01:57,159 --> 01:02:11,279
gets the fix up for the Alpha I believe

1404
01:02:04,320 --> 01:02:11,280
right so oops

1405
01:02:15,170 --> 01:02:19,889
so we've got a modulator on there we

1406
01:02:17,969 --> 01:02:23,309
don't care about that so much so we're

1407
01:02:19,889 --> 01:02:27,299
adding peel we're adding each of these

1408
01:02:23,309 --> 01:02:36,809
peels together because those are all

1409
01:02:27,300 --> 01:02:38,280
they should all be well now so each one

1410
01:02:36,809 --> 01:02:40,170
of them is pre modulated by its own

1411
01:02:38,280 --> 01:02:41,910
alpha but it's not modulated by anyone

1412
01:02:40,170 --> 01:02:46,230
elses alpha so we need to add them

1413
01:02:41,909 --> 01:02:48,329
together in sort of a like you know

1414
01:02:46,230 --> 01:02:50,670
progressive fashion here so we need to

1415
01:02:48,329 --> 01:02:53,579
do is say well peel 0 is the color that

1416
01:02:50,670 --> 01:02:58,470
it should be so we need to modulae

1417
01:02:53,579 --> 01:03:02,880
what's underneath it by 1 minus PL alpha

1418
01:02:58,469 --> 01:03:05,549
right so everything that's underneath

1419
01:03:02,880 --> 01:03:07,950
peel 0 gets modulated by peeled zeros

1420
01:03:05,550 --> 01:03:12,420
alpha now everything that's under it

1421
01:03:07,949 --> 01:03:16,049
also happens to be like peel 1 right RGB

1422
01:03:12,420 --> 01:03:19,579
which now also has to modulate everyone

1423
01:03:16,050 --> 01:03:23,970
else by the inverse of its alpha right

1424
01:03:19,579 --> 01:03:29,130
so 1 minus peel ones alpha and you can

1425
01:03:23,969 --> 01:03:31,199
see how this kind of goes right so maybe

1426
01:03:29,130 --> 01:03:33,480
what we want to do here is kind of build

1427
01:03:31,199 --> 01:03:36,179
it up from the bottom to make it a

1428
01:03:33,480 --> 01:03:37,949
little cleaner to read so what we want

1429
01:03:36,179 --> 01:03:41,369
to do is say all right we know that peel

1430
01:03:37,949 --> 01:03:44,429
3 we've already adjusted the RGB of it

1431
01:03:41,369 --> 01:03:47,069
to be correct so we know that our result

1432
01:03:44,429 --> 01:03:50,129
color can start out being equal to peel

1433
01:03:47,070 --> 01:03:52,860
3 which is the bottom most of the layers

1434
01:03:50,130 --> 01:03:56,730
that we're processing so the next what

1435
01:03:52,860 --> 01:03:59,490
we do is we lever up one we say peel to

1436
01:03:56,730 --> 01:04:01,559
RGB we'll add that in and we'll take

1437
01:03:59,489 --> 01:04:05,969
whatever the thing is that we had

1438
01:04:01,559 --> 01:04:07,769
previously gathered and we'll modulate

1439
01:04:05,969 --> 01:04:11,069
that right then we'll do that

1440
01:04:07,769 --> 01:04:13,099
again and then we'll do that one more

1441
01:04:11,070 --> 01:04:13,100
time

1442
01:04:13,789 --> 01:04:19,619
and so in that way we sort of like take

1443
01:04:17,789 --> 01:04:21,360
the bottom one composited composite

1444
01:04:19,619 --> 01:04:23,880
composite it as if we're basically doing

1445
01:04:21,360 --> 01:04:31,140
the blending ourselves here

1446
01:04:23,880 --> 01:04:34,130
right so now of course we've got to

1447
01:04:31,139 --> 01:04:37,078
debug this nonsense that I've just made

1448
01:04:34,130 --> 01:04:40,200
but hopefully that won't be too hard all

1449
01:04:37,079 --> 01:04:41,880
right so let's just assume that this is

1450
01:04:40,199 --> 01:04:46,919
pretty reasonable here so we start with

1451
01:04:41,880 --> 01:04:49,710
peel threes colors we got a like in case

1452
01:04:46,920 --> 01:04:53,639
we do want to turn back on this stuff

1453
01:04:49,710 --> 01:04:58,619
let's go ahead and make sure that's

1454
01:04:53,639 --> 01:05:01,348
correct okay so we sample these peels

1455
01:04:58,619 --> 01:05:02,700
out here we're good to go I guess one of

1456
01:05:01,349 --> 01:05:15,989
the things is we've got to make sure

1457
01:05:02,699 --> 01:05:21,568
that all of these are correct and what I

1458
01:05:15,989 --> 01:05:23,519
want to do here is I just want to I just

1459
01:05:21,568 --> 01:05:25,710
want to go ahead and say like maybe

1460
01:05:23,518 --> 01:05:29,159
these things were going to be a little

1461
01:05:25,710 --> 01:05:32,818
bit more careful about now so I'm going

1462
01:05:29,159 --> 01:05:40,228
to go ahead and get rid of these parts

1463
01:05:32,818 --> 01:05:43,308
we don't use like so and I'm going to

1464
01:05:40,228 --> 01:05:43,308
put in here

1465
01:05:45,739 --> 01:06:03,269
this is maybe an array so in the OpenGL

1466
01:05:56,518 --> 01:06:04,468
program I'm going to call this oh well

1467
01:06:03,268 --> 01:06:07,828
you know what we still need a depth

1468
01:06:04,469 --> 01:06:08,940
sampler for the other one and what I'm

1469
01:06:07,829 --> 01:06:15,390
going to do here is I'm going to have a

1470
01:06:08,940 --> 01:06:17,249
peel sampler and make four of those now

1471
01:06:15,389 --> 01:06:19,858
we could actually use in a raid property

1472
01:06:17,248 --> 01:06:24,149
for these actually but I'm not going to

1473
01:06:19,858 --> 01:06:26,548
do that at the moment okay so we're

1474
01:06:24,150 --> 01:06:27,930
going to put these down here because

1475
01:06:26,548 --> 01:06:30,028
they're kind of special at this point

1476
01:06:27,929 --> 01:06:32,690
and what I'm going to do is I'm just

1477
01:06:30,028 --> 01:06:35,248
going to make it so that we kind of need

1478
01:06:32,690 --> 01:06:37,650
what I want to do at this point is I

1479
01:06:35,248 --> 01:06:41,929
want some way

1480
01:06:37,650 --> 01:06:45,028
setting these locations in a more useful

1481
01:06:41,929 --> 01:06:46,919
fashion because like right now we don't

1482
01:06:45,028 --> 01:06:50,579
really have the ability to do something

1483
01:06:46,920 --> 01:06:53,539
sensible with the OpenGL program in

1484
01:06:50,579 --> 01:06:56,099
terms of doing those settings right and

1485
01:06:53,539 --> 01:07:00,180
so what you'll notice is we kind of have

1486
01:06:56,099 --> 01:07:03,960
two different types of settings here if

1487
01:07:00,179 --> 01:07:06,210
we go if we go kind of look at how this

1488
01:07:03,960 --> 01:07:08,789
is working and see what happens in use

1489
01:07:06,210 --> 01:07:10,260
the program begin you can see that we've

1490
01:07:08,789 --> 01:07:13,680
got you know like a couple different

1491
01:07:10,260 --> 01:07:15,630
things that we've set here right and

1492
01:07:13,679 --> 01:07:17,068
then we've got these also these vertex

1493
01:07:15,630 --> 01:07:19,980
outside pointers which are sort of a

1494
01:07:17,068 --> 01:07:22,349
separate thing now the vertex that ships

1495
01:07:19,980 --> 01:07:24,599
we don't really change much nor do we

1496
01:07:22,349 --> 01:07:27,510
change the program handle much so those

1497
01:07:24,599 --> 01:07:28,650
can kind of say but if you look at

1498
01:07:27,510 --> 01:07:32,160
what's happening here we kind of have

1499
01:07:28,650 --> 01:07:39,088
two different programs right we've got

1500
01:07:32,159 --> 01:07:42,750
the OpenGL or we've got the the what's

1501
01:07:39,088 --> 01:07:45,150
the word for it V bias program you know

1502
01:07:42,750 --> 01:07:49,920
and then we've got the peel peel

1503
01:07:45,150 --> 01:07:52,680
composite program and they really now

1504
01:07:49,920 --> 01:08:01,019
are completely divergent right like this

1505
01:07:52,679 --> 01:08:03,088
wants those and this wants this right so

1506
01:08:01,019 --> 01:08:04,440
what we'd like to do is we'd like to

1507
01:08:03,088 --> 01:08:05,670
have some way ideally if we're going to

1508
01:08:04,440 --> 01:08:08,309
do a lot of these we'd probably want

1509
01:08:05,670 --> 01:08:09,930
some abstraction for this where we can

1510
01:08:08,309 --> 01:08:12,690
kind of say here's what each one takes

1511
01:08:09,929 --> 01:08:14,098
but in this case since there's so

1512
01:08:12,690 --> 01:08:15,539
divergent I don't know that I really

1513
01:08:14,099 --> 01:08:18,569
care about that so I'll probably just

1514
01:08:15,539 --> 01:08:22,048
make two different versions of the use

1515
01:08:18,569 --> 01:08:23,400
program thing right it doesn't seem like

1516
01:08:22,048 --> 01:08:27,619
it really makes much sense to do

1517
01:08:23,399 --> 01:08:31,198
anything fancier than that at the moment

1518
01:08:27,619 --> 01:08:34,289
at least I can't think of a reason why

1519
01:08:31,198 --> 01:08:36,539
we would if we have lots and lots of

1520
01:08:34,289 --> 01:08:37,979
shaders you'd want to figure out some

1521
01:08:36,539 --> 01:08:39,810
way of cleaning that up so that you

1522
01:08:37,979 --> 01:08:42,209
didn't have to constantly be fussing

1523
01:08:39,810 --> 01:08:43,859
with it but I don't really see that

1524
01:08:42,210 --> 01:08:44,850
being particularly useful thing to do at

1525
01:08:43,859 --> 01:08:48,569
the moment because we really just don't

1526
01:08:44,850 --> 01:08:51,000
have enough stuff to make that be

1527
01:08:48,569 --> 01:08:52,710
necessary right

1528
01:08:51,000 --> 01:08:57,630
so even in this case I think I may just

1529
01:08:52,710 --> 01:09:12,739
do it like this well you know what here

1530
01:08:57,630 --> 01:09:12,739
we'll do it like this or maybe like that

1531
01:09:18,680 --> 01:09:22,710
so since we've got some shared stuff

1532
01:09:21,000 --> 01:09:24,988
here let's just target the shared stuff

1533
01:09:22,710 --> 01:09:26,548
and make that easier and then in here

1534
01:09:24,988 --> 01:09:31,579
we'll actually call these what they are

1535
01:09:26,548 --> 01:09:31,579
you bias program you bias program

1536
01:09:31,729 --> 01:09:39,059
geocomposite program right and so now

1537
01:09:37,319 --> 01:09:41,310
what I want to do is say all right when

1538
01:09:39,060 --> 01:09:45,750
we do use program begin and use program

1539
01:09:41,310 --> 01:09:50,600
ends then in this in this sort of model

1540
01:09:45,750 --> 01:09:50,600
they're going to pass the common part

1541
01:09:50,899 --> 01:10:01,409
and then in here we just have use

1542
01:09:53,640 --> 01:10:05,219
programs again use program end for

1543
01:10:01,409 --> 01:10:09,149
basically like the other everyone else

1544
01:10:05,219 --> 01:10:11,189
right so we say ok we've got the V bias

1545
01:10:09,149 --> 01:10:12,839
program and you know what use program

1546
01:10:11,189 --> 01:10:14,729
end is the same for everybody so I guess

1547
01:10:12,840 --> 01:10:16,260
that one doesn't really matter so we

1548
01:10:14,729 --> 01:10:18,299
really just have a different use program

1549
01:10:16,260 --> 01:10:20,340
begin and we've got two different news

1550
01:10:18,300 --> 01:10:24,810
program begins we've got one for the V

1551
01:10:20,340 --> 01:10:28,619
bias program and one for the peel

1552
01:10:24,810 --> 01:10:30,870
composite program and both of them want

1553
01:10:28,619 --> 01:10:39,329
to do use program begin for the common

1554
01:10:30,869 --> 01:10:41,159
section and one of the nice things here

1555
01:10:39,329 --> 01:10:45,210
is render setup doesn't need to happen

1556
01:10:41,159 --> 01:10:46,619
for the comments section so actually I

1557
01:10:45,210 --> 01:10:48,480
think that doesn't get a pass through

1558
01:10:46,619 --> 01:10:50,340
only this one gets a pass through and

1559
01:10:48,479 --> 01:10:51,988
now we can eliminate that dead version

1560
01:10:50,340 --> 01:10:54,840
of the setup that was happening before

1561
01:10:51,988 --> 01:10:57,149
which is kind of nice too so then what

1562
01:10:54,840 --> 01:10:59,940
we can do is say alright we know that we

1563
01:10:57,149 --> 01:11:05,238
we know exactly what we're doing here we

1564
01:10:59,939 --> 01:11:05,238
can just say you know peel sampler

1565
01:11:06,519 --> 01:11:20,480
exactly can you do it this way so this

1566
01:11:18,828 --> 01:11:24,979
way no matter what we set that to that's

1567
01:11:20,479 --> 01:11:26,299
how many you know peels it'll do and you

1568
01:11:24,979 --> 01:11:27,828
know or we could parameterize with

1569
01:11:26,300 --> 01:11:31,179
something else later if we want to be

1570
01:11:27,828 --> 01:11:31,179
variable like I was talking about before

1571
01:11:34,149 --> 01:11:38,058
and then in the case of the Z bias

1572
01:11:36,710 --> 01:11:41,118
program now we've got all this other

1573
01:11:38,059 --> 01:11:44,449
nonsense that gets set and that one and

1574
01:11:41,118 --> 01:11:48,439
it can kind of come down here into a

1575
01:11:44,448 --> 01:11:51,018
place where it makes more sense right so

1576
01:11:48,439 --> 01:11:54,948
now that's looking much nicer right much

1577
01:11:51,019 --> 01:11:57,199
much nicer and I don't think we really

1578
01:11:54,948 --> 01:11:59,509
have to change much in the rest of the

1579
01:11:57,198 --> 01:12:01,250
code we now can get rid of the dead code

1580
01:11:59,510 --> 01:12:04,070
here of the setup that we were passing

1581
01:12:01,250 --> 01:12:06,649
as a dummy variable because now that

1582
01:12:04,069 --> 01:12:09,429
won't happen which is nice

1583
01:12:06,649 --> 01:12:09,429
and

1584
01:12:09,439 --> 01:12:19,129
and get rid of that and so now we need

1585
01:12:16,550 --> 01:12:22,630
to do is just this is a device program

1586
01:12:19,130 --> 01:12:25,210
not a regular program so that's fine and

1587
01:12:22,630 --> 01:12:44,109
these are always just going to be on

1588
01:12:25,210 --> 01:12:44,109
common right so that's all good

1589
01:12:47,079 --> 01:12:53,269
there we go and now what we want to do

1590
01:12:50,329 --> 01:12:55,430
is is these folks want to write directly

1591
01:12:53,270 --> 01:12:58,970
into their special kind of programs

1592
01:12:55,430 --> 01:13:01,369
that's for whatever they do and so you

1593
01:12:58,970 --> 01:13:05,360
know a couple of these will be common

1594
01:13:01,369 --> 01:13:09,050
going into the comment section such as

1595
01:13:05,359 --> 01:13:14,929
that the handle and the vertex IDs like

1596
01:13:09,050 --> 01:13:17,180
these like so and so that we could also

1597
01:13:14,930 --> 01:13:18,860
pull out right we could make that be

1598
01:13:17,180 --> 01:13:20,690
something that's shared between them I'm

1599
01:13:18,859 --> 01:13:22,039
not going to do that just yet

1600
01:13:20,689 --> 01:13:23,569
because it seems like kind of a waste of

1601
01:13:22,039 --> 01:13:25,569
that for a little bit but you know we do

1602
01:13:23,569 --> 01:13:30,710
this one more time and it probably would

1603
01:13:25,569 --> 01:13:37,099
start to make some sense you know all

1604
01:13:30,710 --> 01:13:40,189
right uh so peel composite program like

1605
01:13:37,100 --> 01:13:42,020
there we go and so now we've got a bunch

1606
01:13:40,189 --> 01:13:45,289
of the bugging work to do to get this to

1607
01:13:42,020 --> 01:13:47,960
work properly you can see we're still

1608
01:13:45,289 --> 01:13:50,180
drawing okay for the front buffer but

1609
01:13:47,960 --> 01:13:52,939
our peel composite is not doing anything

1610
01:13:50,180 --> 01:13:54,710
right which is fine right we we kind of

1611
01:13:52,939 --> 01:13:56,210
hack that stuff in there we need to be a

1612
01:13:54,710 --> 01:13:59,960
little more careful about what we're

1613
01:13:56,210 --> 01:14:02,149
doing so let's go ahead and and check

1614
01:13:59,960 --> 01:14:05,060
first of all I'm just going to go ahead

1615
01:14:02,149 --> 01:14:08,659
and rename this path here I want to look

1616
01:14:05,060 --> 01:14:12,980
at what each of the paths looks like so

1617
01:14:08,659 --> 01:14:16,430
here's peel 0 right that's the that's

1618
01:14:12,979 --> 01:14:18,699
the first peel there let's look at peel

1619
01:14:16,430 --> 01:14:18,700
1

1620
01:14:21,310 --> 01:14:26,800
again that looks pretty reasonable

1621
01:14:23,569 --> 01:14:32,599
nothing super out of the ordinary

1622
01:14:26,800 --> 01:14:35,060
we're still - not great not great so

1623
01:14:32,599 --> 01:14:37,489
what's going on with our peel - here oh

1624
01:14:35,060 --> 01:14:42,770
right we're not drawing anything to

1625
01:14:37,488 --> 01:14:45,888
those yet so this has to be a little bit

1626
01:14:42,770 --> 01:14:49,190
a little bit more sensible so peel count

1627
01:14:45,889 --> 01:14:52,340
I'm going to change the peel index at

1628
01:14:49,189 --> 01:14:56,809
the moment so let's go ahead and let's

1629
01:14:52,340 --> 01:14:58,760
let's fix that here to be peel index and

1630
01:14:56,810 --> 01:15:02,420
so when this goes through and does peel

1631
01:14:58,760 --> 01:15:04,969
indexed here what I want to do now is I

1632
01:15:02,420 --> 01:15:08,230
want this to be able to go higher so

1633
01:15:04,969 --> 01:15:12,050
effectively this will just keep looping

1634
01:15:08,229 --> 01:15:14,539
when we do open when we hit the end

1635
01:15:12,050 --> 01:15:18,469
we're going to keep looking looping

1636
01:15:14,539 --> 01:15:21,979
until the peel index reaches the final

1637
01:15:18,469 --> 01:15:23,840
you know the final render target so the

1638
01:15:21,979 --> 01:15:25,729
first time through it'll be at 0 second

1639
01:15:23,840 --> 01:15:27,770
time 3 will be at 1 next time it'll be 2

1640
01:15:25,729 --> 01:15:30,979
next it'll be a 3 and that'll be the end

1641
01:15:27,770 --> 01:15:33,650
and it'll flip to the last one I think

1642
01:15:30,979 --> 01:15:35,359
we want to wait to 1 after that if I'm

1643
01:15:33,649 --> 01:15:37,069
not mistaken because we want to draw to

1644
01:15:35,359 --> 01:15:41,000
each buffer so we actually want to do

1645
01:15:37,069 --> 01:15:44,599
the loop each time through so we want to

1646
01:15:41,000 --> 01:15:47,719
do like if it's less than or equal to

1647
01:15:44,599 --> 01:15:51,230
the max vendor target do this right and

1648
01:15:47,719 --> 01:15:53,630
then as soon as it exceeds that then we

1649
01:15:51,229 --> 01:15:55,988
will assert that that we're at that last

1650
01:15:53,630 --> 01:15:55,989
one

1651
01:16:03,329 --> 01:16:09,340
no no I'm incorrect because when we come

1652
01:16:07,960 --> 01:16:11,380
through here we actually increment it's

1653
01:16:09,340 --> 01:16:13,630
on the end so we want to wait till we

1654
01:16:11,380 --> 01:16:15,550
get to that last one and we've done the

1655
01:16:13,630 --> 01:16:18,489
last one then we are actually done and

1656
01:16:15,550 --> 01:16:20,529
we flip back to zero okay so let's see

1657
01:16:18,488 --> 01:16:24,579
what peel two looks like now there's

1658
01:16:20,529 --> 01:16:27,519
peel 2 again it's even further drilling

1659
01:16:24,579 --> 01:16:33,329
backwards and let's finally take a look

1660
01:16:27,520 --> 01:16:33,330
at now at the last view which is peel 3

1661
01:16:34,139 --> 01:16:38,710
so there's peel 3 and you can see it

1662
01:16:36,729 --> 01:16:40,779
gets really pretty far back

1663
01:16:38,710 --> 01:16:43,119
and so that's good news because again

1664
01:16:40,779 --> 01:16:45,158
like you know if only if it only takes

1665
01:16:43,119 --> 01:16:47,729
for depth deals to do a good composite

1666
01:16:45,158 --> 01:16:51,129
yeah I'm pretty happy with that

1667
01:16:47,729 --> 01:16:52,809
ok so we've got four valid peels what we

1668
01:16:51,130 --> 01:16:54,940
don't have is a compositor that works at

1669
01:16:52,810 --> 01:16:56,440
all our compositor is complete garbage

1670
01:16:54,939 --> 01:16:58,329
right now we can tell that because all

1671
01:16:56,439 --> 01:17:00,309
we see is a black screen and that's not

1672
01:16:58,329 --> 01:17:01,988
a very compelling composite if we were

1673
01:17:00,310 --> 01:17:03,400
to ship a game that just consisted of a

1674
01:17:01,988 --> 01:17:05,948
black screen with a framerate counter

1675
01:17:03,399 --> 01:17:07,479
while certain streamers would be very

1676
01:17:05,948 --> 01:17:09,609
happy to see that it hits 60 frames a

1677
01:17:07,479 --> 01:17:11,198
second perhaps they would not be very

1678
01:17:09,609 --> 01:17:18,670
happy with the fact that it was an

1679
01:17:11,198 --> 01:17:20,049
entirely black screen you may not be

1680
01:17:18,670 --> 01:17:21,190
surprised here as well that's not that

1681
01:17:20,050 --> 01:17:23,260
hard to hit 6 period second for the

1682
01:17:21,189 --> 01:17:25,269
black tree not that I'm certain that

1683
01:17:23,260 --> 01:17:27,820
some people couldn't quite do it so for

1684
01:17:25,270 --> 01:17:34,690
example I'm quite certain that a number

1685
01:17:27,819 --> 01:17:36,908
of games you see these days could could

1686
01:17:34,689 --> 01:17:38,109
manage to somehow still not hit 60

1687
01:17:36,908 --> 01:17:41,379
frames a second with a black screen but

1688
01:17:38,109 --> 01:17:44,469
you know what you can do let's go ahead

1689
01:17:41,380 --> 01:17:48,730
and take a look at what we messed up

1690
01:17:44,469 --> 01:17:51,969
here so I'm interested to know what's

1691
01:17:48,729 --> 01:17:54,968
going on it would appear and I guess I

1692
01:17:51,969 --> 01:17:58,119
don't know for sure but it would appear

1693
01:17:54,969 --> 01:18:06,250
that something is a bit suspicious

1694
01:17:58,119 --> 01:18:08,439
because I don't really understand when I

1695
01:18:06,250 --> 01:18:11,289
run this I'm just a little perplexed

1696
01:18:08,439 --> 01:18:14,829
because I'm looking at it here and I see

1697
01:18:11,289 --> 01:18:16,809
the this is it's not a completely black

1698
01:18:14,829 --> 01:18:20,429
screen the framerate counter is there

1699
01:18:16,809 --> 01:18:27,460
so everything that's drawn at the end is

1700
01:18:20,429 --> 01:18:31,719
working and if I look at the peeled zero

1701
01:18:27,460 --> 01:18:33,399
I see that framerate counter on PL zero

1702
01:18:31,719 --> 01:18:37,020
which is exactly where I would have

1703
01:18:33,399 --> 01:18:44,799
expected it it's not there on peel 1

1704
01:18:37,020 --> 01:18:51,070
right it's not there on peel - yeah and

1705
01:18:44,800 --> 01:18:52,869
it's not there on peel 3 so what's

1706
01:18:51,069 --> 01:18:56,948
interesting to me is how we're ending up

1707
01:18:52,868 --> 01:18:59,319
with black pixels when somehow the

1708
01:18:56,948 --> 01:19:01,839
framerate counter still shows through

1709
01:18:59,319 --> 01:19:04,509
properly and that's on peel 0 so if we

1710
01:19:01,840 --> 01:19:08,020
were just copying peel 0 in I would have

1711
01:19:04,510 --> 01:19:09,969
expected to see everything on peel 0 not

1712
01:19:08,020 --> 01:19:14,699
just the frame rate counter that's not

1713
01:19:09,969 --> 01:19:14,698
what I'm seeing so it's a bit odd to me

1714
01:19:15,179 --> 01:19:20,649
so this ought to be interesting let's

1715
01:19:18,550 --> 01:19:22,300
jump back here a second I just want to

1716
01:19:20,649 --> 01:19:24,549
make sure we are still creating all

1717
01:19:22,300 --> 01:19:27,219
those textures we are so that's good

1718
01:19:24,550 --> 01:19:31,150
just make sure of what was happening

1719
01:19:27,219 --> 01:19:34,480
there so let's let's hop down to

1720
01:19:31,149 --> 01:19:36,009
composite compile peel composite and

1721
01:19:34,479 --> 01:19:37,868
take a look at what I did for the code

1722
01:19:36,010 --> 01:19:40,570
here because I probably made some stupid

1723
01:19:37,868 --> 01:19:43,479
mistakes here if we're lucky they won't

1724
01:19:40,569 --> 01:19:45,429
be too hard to spot so let's take a look

1725
01:19:43,479 --> 01:19:47,649
at what we're doing here's our result

1726
01:19:45,429 --> 01:19:50,349
color in our result color just is a

1727
01:19:47,649 --> 01:19:53,589
successive it's a series of successive

1728
01:19:50,349 --> 01:19:56,860
blends with its you know the underlying

1729
01:19:53,590 --> 01:19:58,630
peel layers pretty pretty much right off

1730
01:19:56,859 --> 01:20:00,819
the bat what I'm going to do the same

1731
01:19:58,630 --> 01:20:02,260
sort of debugging I was doing before I'm

1732
01:20:00,819 --> 01:20:04,269
going to start by just looking at the

1733
01:20:02,260 --> 01:20:06,969
different peels see whether or not like

1734
01:20:04,270 --> 01:20:10,869
getting them right so here's me trying

1735
01:20:06,969 --> 01:20:12,788
to copy just peel 0 straight across and

1736
01:20:10,868 --> 01:20:14,889
I want to see what I'm getting so it's

1737
01:20:12,788 --> 01:20:18,309
interesting about this is if I copy peel

1738
01:20:14,889 --> 01:20:20,828
0 straight across I see effectively just

1739
01:20:18,309 --> 01:20:22,630
nothing on the screen which is not at

1740
01:20:20,828 --> 01:20:24,340
all what I would have expected right so

1741
01:20:22,630 --> 01:20:27,219
it's a little bit weird I don't really

1742
01:20:24,340 --> 01:20:28,420
understand what I'm seeing now I want to

1743
01:20:27,219 --> 01:20:30,069
take a look at what the alpha value is

1744
01:20:28,420 --> 01:20:30,880
because I don't know if blending is

1745
01:20:30,069 --> 01:20:32,679
still on

1746
01:20:30,880 --> 01:20:34,059
but let me just set the Alpha value to 1

1747
01:20:32,679 --> 01:20:41,500
because I really don't know what's going

1748
01:20:34,059 --> 01:20:44,020
on there right again like I just really

1749
01:20:41,500 --> 01:20:53,170
don't know so let me take a look at peel

1750
01:20:44,020 --> 01:20:55,590
1 so everything is basically black all

1751
01:20:53,170 --> 01:20:57,880
of our peels that we were just viewing

1752
01:20:55,590 --> 01:21:00,279
we're not actually getting them but we

1753
01:20:57,880 --> 01:21:04,179
are getting the frame rate counter which

1754
01:21:00,279 --> 01:21:05,948
is mystifying at best all of the peels

1755
01:21:04,179 --> 01:21:09,279
are black except for the frame rate

1756
01:21:05,948 --> 01:21:14,769
counter appears to be basically what

1757
01:21:09,279 --> 01:21:17,019
we're looking at right okay so how are

1758
01:21:14,770 --> 01:21:19,690
we getting that how is that happening

1759
01:21:17,020 --> 01:21:22,989
right what are we seeing here I have no

1760
01:21:19,689 --> 01:21:25,388
idea whatsoever because taking this

1761
01:21:22,988 --> 01:21:28,598
stuff out of the equation yeah I don't

1762
01:21:25,389 --> 01:21:30,219
know what's going on now what I could do

1763
01:21:28,599 --> 01:21:32,039
too is I could it's zero this stuff out

1764
01:21:30,219 --> 01:21:34,868
in case maybe there's some kind of a

1765
01:21:32,039 --> 01:21:36,479
NAND situation going on but even that I

1766
01:21:34,868 --> 01:21:38,738
don't think should have affected it I

1767
01:21:36,479 --> 01:21:40,928
don't anticipate that being a problem

1768
01:21:38,738 --> 01:21:42,729
I'm now going to go ahead and just take

1769
01:21:40,929 --> 01:21:44,408
it one step further I'm going to force

1770
01:21:42,729 --> 01:21:46,269
the color to read to verify that I'm

1771
01:21:44,408 --> 01:21:49,269
even seeing what I think I'm seeing in

1772
01:21:46,270 --> 01:21:52,179
this case so that's good so we are

1773
01:21:49,270 --> 01:21:53,590
actually filling the screen with what

1774
01:21:52,179 --> 01:21:55,750
the results are here it's just somehow

1775
01:21:53,590 --> 01:21:58,270
when we are sampling these actual

1776
01:21:55,750 --> 01:22:03,158
texture peels we're really getting

1777
01:21:58,270 --> 01:22:04,900
something that somehow only drew maybe

1778
01:22:03,158 --> 01:22:06,189
boggles the mind it's obviously

1779
01:22:04,899 --> 01:22:09,399
something that when I see it I'll be

1780
01:22:06,189 --> 01:22:11,138
like Oh duh but I really don't know

1781
01:22:09,399 --> 01:22:12,578
where it's coming from

1782
01:22:11,139 --> 01:22:14,170
because I don't understand how I'm

1783
01:22:12,578 --> 01:22:17,139
seeing that frame rate counter player

1784
01:22:14,170 --> 01:22:20,260
you know plain as day when if I draw the

1785
01:22:17,139 --> 01:22:22,000
frame buffers themselves I'm seeing all

1786
01:22:20,260 --> 01:22:24,909
the actual additional data in there

1787
01:22:22,000 --> 01:22:26,920
right it's a bit strange so the question

1788
01:22:24,908 --> 01:22:29,589
is how are we how is that happening

1789
01:22:26,920 --> 01:22:32,319
what's going on there so you can see me

1790
01:22:29,590 --> 01:22:34,270
binding the textures here I'm going

1791
01:22:32,319 --> 01:22:36,670
through each of the peels and I'm

1792
01:22:34,270 --> 01:22:39,579
binding the textures to the successive

1793
01:22:36,670 --> 01:22:41,050
texture units by using global frame

1794
01:22:39,578 --> 01:22:43,630
buffer textures with the peel index

1795
01:22:41,050 --> 01:22:44,469
which I believe is again correct I don't

1796
01:22:43,630 --> 01:22:47,770
think there's any

1797
01:22:44,469 --> 01:22:49,689
usual about that and I am Chi think

1798
01:22:47,770 --> 01:22:51,340
seeing those happen properly I'm going

1799
01:22:49,689 --> 01:22:53,349
to take a look at the used program begin

1800
01:22:51,340 --> 01:22:55,690
to see if there's anything weird going

1801
01:22:53,350 --> 01:22:56,949
on there that's setting things up

1802
01:22:55,689 --> 01:23:00,309
exactly the way I would have expected

1803
01:22:56,948 --> 01:23:03,369
and again it's just setting the various

1804
01:23:00,310 --> 01:23:05,590
peel samplers to to be what they are

1805
01:23:03,369 --> 01:23:08,948
right there's nothing again nothing

1806
01:23:05,590 --> 01:23:13,329
weird going on there we can bear who

1807
01:23:08,948 --> 01:23:13,899
through you can clearly verify that the

1808
01:23:13,329 --> 01:23:16,029
I don't know

1809
01:23:13,899 --> 01:23:17,979
so coming through here we also expect

1810
01:23:16,029 --> 01:23:20,170
blending to be disabled at this time

1811
01:23:17,979 --> 01:23:21,369
I'll double-check that it's disabled so

1812
01:23:20,170 --> 01:23:23,440
I'm going to go ahead and disable the

1813
01:23:21,369 --> 01:23:25,029
blend but I don't see what that would

1814
01:23:23,439 --> 01:23:26,649
have to do with anything and again it

1815
01:23:25,029 --> 01:23:27,759
doesn't have anything it doesn't do

1816
01:23:26,649 --> 01:23:30,429
anything which is what I would have

1817
01:23:27,760 --> 01:23:32,170
expected when we bind frame buffer zero

1818
01:23:30,430 --> 01:23:35,020
we should be writing clear of anything

1819
01:23:32,170 --> 01:23:37,960
we shouldn't be having any weirdness

1820
01:23:35,020 --> 01:23:41,560
there as far as I can imagine so this is

1821
01:23:37,960 --> 01:23:45,630
a real a real bizarre one I cannot could

1822
01:23:41,560 --> 01:23:48,160
not say really what's going on there if

1823
01:23:45,630 --> 01:23:50,380
we saw nothing I would have some

1824
01:23:48,159 --> 01:23:54,010
theories the fact that I see something

1825
01:23:50,380 --> 01:23:55,930
makes it pretty strange I'm going to go

1826
01:23:54,010 --> 01:24:00,579
ahead and regress now again I'm just

1827
01:23:55,930 --> 01:24:11,710
kind of grasping at straws here I have

1828
01:24:00,579 --> 01:24:13,238
no idea what's going on so what I'm

1829
01:24:11,710 --> 01:24:16,480
going to do here is I'm just going to go

1830
01:24:13,238 --> 01:24:19,349
ahead and gather up just that just the

1831
01:24:16,479 --> 01:24:19,349
very first texture

1832
01:24:22,739 --> 01:24:38,760
didn't quite it didn't tell me what

1833
01:24:24,840 --> 01:24:40,170
failed oh but I know what failed those

1834
01:24:38,760 --> 01:24:41,880
all need to be defined obviously you

1835
01:24:40,170 --> 01:24:43,529
can't just start talking about variables

1836
01:24:41,880 --> 01:24:45,449
that don't exist yet

1837
01:24:43,529 --> 01:24:48,359
so here is one that literally only

1838
01:24:45,449 --> 01:24:50,460
samples from the peel 0 sampler at that

1839
01:24:48,359 --> 01:24:53,789
frag UV and then it goes out and it

1840
01:24:50,460 --> 01:25:04,350
draws it right with this so what's

1841
01:24:53,789 --> 01:25:05,579
interesting about this to me what's

1842
01:25:04,350 --> 01:25:07,340
interesting about this to me is I'm

1843
01:25:05,579 --> 01:25:11,640
wondering if this is just a problem with

1844
01:25:07,340 --> 01:25:13,170
wrap around effectively so what I'm

1845
01:25:11,640 --> 01:25:17,340
interested what I'm interested to know

1846
01:25:13,170 --> 01:25:19,770
here is so if I turn on that frame

1847
01:25:17,340 --> 01:25:23,010
buffer blit and I look at what the frame

1848
01:25:19,770 --> 01:25:26,010
buffers are via that path right what we

1849
01:25:23,010 --> 01:25:29,190
know is that if I go via that path I see

1850
01:25:26,010 --> 01:25:32,760
a correct image this is what I expect to

1851
01:25:29,189 --> 01:25:35,659
be in peel 0 the fact that I don't get

1852
01:25:32,760 --> 01:25:38,640
anything when I come through this path

1853
01:25:35,659 --> 01:25:41,130
suggests to me that maybe I'm setting

1854
01:25:38,640 --> 01:25:49,380
some state that is not getting properly

1855
01:25:41,130 --> 01:25:52,529
unset later right so basically what I'm

1856
01:25:49,380 --> 01:25:58,890
wondering is let's suppose that I was to

1857
01:25:52,529 --> 01:26:06,420
do this first right so I'm just going to

1858
01:25:58,890 --> 01:26:08,910
do this first and then I'm still going

1859
01:26:06,420 --> 01:26:10,800
to do the blitt at the end I want to

1860
01:26:08,909 --> 01:26:13,409
know what I see now if I look at peels

1861
01:26:10,800 --> 01:26:14,369
are okay so what we're seeing I don't

1862
01:26:13,409 --> 01:26:16,619
know if you can see it but there's a

1863
01:26:14,369 --> 01:26:18,809
flash at the beginning of the correct

1864
01:26:16,619 --> 01:26:21,029
stuff and then it turns to incorrect

1865
01:26:18,810 --> 01:26:22,770
stuff and so what I think is happening

1866
01:26:21,029 --> 01:26:25,559
is the first frame is working properly

1867
01:26:22,770 --> 01:26:27,300
but we're leaving some state set that

1868
01:26:25,560 --> 01:26:31,590
wraps around to the next run of the

1869
01:26:27,300 --> 01:26:33,360
program that then causes us to fail the

1870
01:26:31,590 --> 01:26:35,190
next time through so I think we're just

1871
01:26:33,359 --> 01:26:36,899
leaving something set that we can't

1872
01:26:35,189 --> 01:26:39,149
leave

1873
01:26:36,899 --> 01:26:41,969
and so that's I think all we're really

1874
01:26:39,149 --> 01:26:44,189
chasing here so let's see if we can

1875
01:26:41,969 --> 01:26:47,239
figure out what's going on

1876
01:26:44,189 --> 01:26:50,759
with that with with regards to that so

1877
01:26:47,238 --> 01:26:54,079
the another question might be are we

1878
01:26:50,760 --> 01:26:58,199
doing these clears correctly every time

1879
01:26:54,079 --> 01:27:00,779
I think we are so I that doesn't look

1880
01:26:58,198 --> 01:27:02,129
particularly to fish so let's let's talk

1881
01:27:00,779 --> 01:27:04,319
about this here for a little bit let's

1882
01:27:02,130 --> 01:27:07,199
see what's going on we bind our frame

1883
01:27:04,319 --> 01:27:11,519
buffers in here we're doing our use

1884
01:27:07,198 --> 01:27:13,948
program begin use program and correctly

1885
01:27:11,520 --> 01:27:16,620
there we're setting our active textures

1886
01:27:13,948 --> 01:27:18,059
so I'm wondering if maybe it's just you

1887
01:27:16,619 --> 01:27:19,198
know what I think it is I think what

1888
01:27:18,060 --> 01:27:21,270
it's we're not setting the active

1889
01:27:19,198 --> 01:27:23,849
texture again so I think what's

1890
01:27:21,270 --> 01:27:26,250
happening is here right this active

1891
01:27:23,850 --> 01:27:28,650
texture where we used to go backwards so

1892
01:27:26,250 --> 01:27:31,170
it would set the active texture to zero

1893
01:27:28,649 --> 01:27:32,849
at the end we now aren't doing that so I

1894
01:27:31,170 --> 01:27:35,190
bet that was the only problem if that

1895
01:27:32,850 --> 01:27:36,810
active texture is not getting set yeah

1896
01:27:35,189 --> 01:27:38,729
so there we go

1897
01:27:36,810 --> 01:27:41,250
so that was the only problem with that

1898
01:27:38,729 --> 01:27:43,079
that that's a typical problem in OpenGL

1899
01:27:41,250 --> 01:27:44,488
because it's got so much state you know

1900
01:27:43,079 --> 01:27:46,500
you set something wrong and it carries

1901
01:27:44,488 --> 01:27:49,738
over the next frame and suddenly you get

1902
01:27:46,500 --> 01:27:51,988
these weird bugs you are expecting so

1903
01:27:49,738 --> 01:27:54,569
that's the okay par for the course no

1904
01:27:51,988 --> 01:27:56,250
real no real biggie there so let's go

1905
01:27:54,569 --> 01:27:58,198
ahead and allow our reads to continue

1906
01:27:56,250 --> 01:28:02,130
now and we'll enable this slowly one

1907
01:27:58,198 --> 01:28:04,500
step at a time to try and get back to

1908
01:28:02,130 --> 01:28:06,449
now to the composite pass and see what

1909
01:28:04,500 --> 01:28:09,658
happens so here we're going to run again

1910
01:28:06,448 --> 01:28:10,589
we're still seeing only buffer zero but

1911
01:28:09,658 --> 01:28:12,119
that's good because we're reading from

1912
01:28:10,590 --> 01:28:14,250
all of them doesn't seem like there's

1913
01:28:12,119 --> 01:28:16,349
any big problems happening there I'm

1914
01:28:14,250 --> 01:28:18,899
going to turn off the like sort of over

1915
01:28:16,350 --> 01:28:21,210
right at the end and here we go let's go

1916
01:28:18,899 --> 01:28:23,309
ahead and run that so now in theory we

1917
01:28:21,210 --> 01:28:25,109
are actually compositing we don't know

1918
01:28:23,310 --> 01:28:28,230
if we're compositing properly but we are

1919
01:28:25,109 --> 01:28:30,149
at least trying to composite and what

1920
01:28:28,229 --> 01:28:34,859
we're seeing here is it doesn't look

1921
01:28:30,149 --> 01:28:36,299
particularly good for us like it looks

1922
01:28:34,859 --> 01:28:38,369
like we're really only getting two

1923
01:28:36,300 --> 01:28:40,380
levels of it basically looks the same as

1924
01:28:38,369 --> 01:28:43,140
when we only composite it twice so I

1925
01:28:40,380 --> 01:28:45,719
think I'm not really doing the other

1926
01:28:43,140 --> 01:28:47,310
alpha composites properly possibly

1927
01:28:45,719 --> 01:28:49,920
because I'm not doing the premultiplied

1928
01:28:47,310 --> 01:28:51,420
alpha correctly but I'm not sure

1929
01:28:49,920 --> 01:28:53,670
so we need to take a little bit closer

1930
01:28:51,420 --> 01:28:55,409
look at that we also then need to

1931
01:28:53,670 --> 01:28:58,260
straighten out our shader SIM text read

1932
01:28:55,409 --> 01:29:02,119
sRGB let me go ahead and take a look by

1933
01:28:58,260 --> 01:29:05,430
the way at that caters semtex read srgb

1934
01:29:02,119 --> 01:29:13,260
that should be getting set correctly now

1935
01:29:05,430 --> 01:29:17,240
I believe so I think we can re-enable

1936
01:29:13,260 --> 01:29:17,239
this as well let's just double check

1937
01:29:19,430 --> 01:29:23,850
yeah

1938
01:29:21,689 --> 01:29:26,339
so now I think we're doing everything

1939
01:29:23,850 --> 01:29:28,800
it's except for actually respecting

1940
01:29:26,340 --> 01:29:32,760
those peel composites they're not

1941
01:29:28,800 --> 01:29:35,190
working properly and I am not sure why I

1942
01:29:32,760 --> 01:29:38,190
think I've got this set up properly but

1943
01:29:35,189 --> 01:29:40,500
I could be very wrong about that but

1944
01:29:38,189 --> 01:29:41,879
just to walk you through it again if you

1945
01:29:40,500 --> 01:29:44,340
imagine what's happening here I'm saying

1946
01:29:41,880 --> 01:29:45,029
whatever the third peel is we start with

1947
01:29:44,340 --> 01:29:47,460
that color

1948
01:29:45,029 --> 01:29:49,619
we then blend two on top of that so we

1949
01:29:47,460 --> 01:29:53,489
we take whatever the value was of two we

1950
01:29:49,619 --> 01:29:56,279
modulate away whatever the value of

1951
01:29:53,489 --> 01:29:59,489
three was there by the inverse of that

1952
01:29:56,279 --> 01:30:01,259
alpha of whatever pl2 was we then take

1953
01:29:59,489 --> 01:30:02,939
peel one and we do the same thing we put

1954
01:30:01,260 --> 01:30:06,390
that on top of whatever the combination

1955
01:30:02,939 --> 01:30:08,759
the resulting combination of the

1956
01:30:06,390 --> 01:30:12,240
previous view was and then finally again

1957
01:30:08,760 --> 01:30:15,409
we at the very end we just go ahead and

1958
01:30:12,239 --> 01:30:18,449
do that one more time four peels zero

1959
01:30:15,409 --> 01:30:20,430
and I feel like that should be doing the

1960
01:30:18,449 --> 01:30:22,529
compositing properly but I don't really

1961
01:30:20,430 --> 01:30:23,820
know so let's make sure we're creating

1962
01:30:22,529 --> 01:30:26,159
the peels the way that I think we should

1963
01:30:23,819 --> 01:30:28,739
be because if the Alpha values are

1964
01:30:26,159 --> 01:30:31,829
incorrect that would certainly do it

1965
01:30:28,739 --> 01:30:35,489
right so let's see what we're doing here

1966
01:30:31,829 --> 01:30:37,470
if we are doing depth feeling we we bind

1967
01:30:35,489 --> 01:30:39,449
whatever the previous depth texture was

1968
01:30:37,470 --> 01:30:41,460
obviously and that's fine

1969
01:30:39,449 --> 01:30:44,639
and that's what we would expect when we

1970
01:30:41,460 --> 01:30:46,319
do the Z bias depth field here program

1971
01:30:44,640 --> 01:30:48,810
that is using a different program we

1972
01:30:46,319 --> 01:30:51,210
could check to see whether that program

1973
01:30:48,810 --> 01:30:54,000
is correct we need to see blending

1974
01:30:51,210 --> 01:30:57,239
should always be off so GL blend should

1975
01:30:54,000 --> 01:31:00,130
always be off I think and it does look

1976
01:30:57,239 --> 01:31:03,228
like it is so that's fine

1977
01:31:00,130 --> 01:31:03,229
[Music]

1978
01:31:08,560 --> 01:31:12,050
and it's disabled entirely anyways it

1979
01:31:10,880 --> 01:31:13,730
doesn't even matter what the Alpha

1980
01:31:12,050 --> 01:31:15,619
function what the blend function

1981
01:31:13,729 --> 01:31:17,389
actually is so let's take a look at the

1982
01:31:15,619 --> 01:31:18,529
peeling program I don't know if maybe

1983
01:31:17,390 --> 01:31:19,420
there was something in there that could

1984
01:31:18,529 --> 01:31:22,069
have been wrong

1985
01:31:19,420 --> 01:31:24,529
obviously we discard the discard looks

1986
01:31:22,069 --> 01:31:36,349
like it was doing the right thing the

1987
01:31:24,529 --> 01:31:44,630
Alpha values get passed through without

1988
01:31:36,350 --> 01:31:46,789
the fog but but that seems fine I mean

1989
01:31:44,630 --> 01:31:48,859
that looks pretty reasonable that looks

1990
01:31:46,789 --> 01:31:57,289
like it should be writing out fair alpha

1991
01:31:48,859 --> 01:31:59,449
values and so I'm not really sure so you

1992
01:31:57,289 --> 01:32:01,850
know there is one more problem that we

1993
01:31:59,449 --> 01:32:10,389
have here that I'm not sure exactly how

1994
01:32:01,850 --> 01:32:10,390
we would mitigate it

1995
01:32:20,050 --> 01:32:25,960
so there is one more problem we have and

1996
01:32:23,819 --> 01:32:28,329
this could be the problem that we're

1997
01:32:25,960 --> 01:32:35,500
actually seeing in fact now that I think

1998
01:32:28,329 --> 01:32:39,210
about it so the other problem that we

1999
01:32:35,500 --> 01:32:39,210
have and this one's a little trickier

2000
01:32:45,149 --> 01:32:50,969
is when we are depth peeling we don't

2001
01:32:48,960 --> 01:32:53,399
really handle the case where two things

2002
01:32:50,970 --> 01:33:01,440
are at exactly the same depth and just

2003
01:32:53,399 --> 01:33:03,599
right on top of each other right and in

2004
01:33:01,439 --> 01:33:05,219
this case the only places that we're

2005
01:33:03,600 --> 01:33:09,480
really seeing errors right now are

2006
01:33:05,220 --> 01:33:12,590
exactly those cases right that is

2007
01:33:09,479 --> 01:33:12,589
exactly what we're seeing

2008
01:33:18,329 --> 01:33:22,710
like basically everywhere our shadows

2009
01:33:21,029 --> 01:33:26,969
are actually correct except where the V

2010
01:33:22,710 --> 01:33:28,529
values are identical I think don't quote

2011
01:33:26,970 --> 01:33:31,680
me on that but I think that's exactly

2012
01:33:28,529 --> 01:33:34,079
what we're seeing so in that case the

2013
01:33:31,680 --> 01:33:37,170
depth peeling isn't smart enough to

2014
01:33:34,079 --> 01:33:39,539
figure out what to do right because if

2015
01:33:37,170 --> 01:33:45,060
everything is at the same Z value you

2016
01:33:39,539 --> 01:33:45,539
would have that problem so let's just

2017
01:33:45,060 --> 01:33:47,340
see

2018
01:33:45,539 --> 01:33:49,619
I'm just curious for sake of argument

2019
01:33:47,340 --> 01:33:51,360
let's suppose that we went into the

2020
01:33:49,619 --> 01:33:53,039
particle systems for example where we do

2021
01:33:51,359 --> 01:33:57,420
see errors currently where those things

2022
01:33:53,039 --> 01:34:00,090
overlap and if we were to say well okay

2023
01:33:57,420 --> 01:34:01,529
what if we jittered the Z values of

2024
01:34:00,090 --> 01:34:04,980
those things so that they weren't

2025
01:34:01,529 --> 01:34:07,579
exactly at the exact same C so when we

2026
01:34:04,979 --> 01:34:11,699
do this push fit map call for example

2027
01:34:07,579 --> 01:34:15,689
here we're passing this p-value down the

2028
01:34:11,699 --> 01:34:17,760
p-values that we're using I yeah is it's

2029
01:34:15,689 --> 01:34:20,339
always but we're only operating in x and

2030
01:34:17,760 --> 01:34:23,430
y it never changes to z right so when

2031
01:34:20,340 --> 01:34:26,640
things respond the Z value is always set

2032
01:34:23,430 --> 01:34:30,000
to zero right you can see it here it's

2033
01:34:26,640 --> 01:34:34,760
never set to anything else so if we were

2034
01:34:30,000 --> 01:34:34,760
just to set the Z value randomly instead

2035
01:34:35,090 --> 01:34:43,020
like so would we get a more correct

2036
01:34:39,359 --> 01:34:49,679
behavior with our particles that's what

2037
01:34:43,020 --> 01:34:51,450
I'm interested in seeing right and it's

2038
01:34:49,680 --> 01:34:53,070
hard to say it still looks like they

2039
01:34:51,449 --> 01:34:56,130
have the similar problem I don't know if

2040
01:34:53,069 --> 01:34:59,359
that's enough separation let's just try

2041
01:34:56,130 --> 01:34:59,359
it with something really absurd

2042
01:35:11,720 --> 01:35:15,949
well so I don't know that still looks

2043
01:35:14,060 --> 01:35:17,960
kind of wrong so I'm wondering if we

2044
01:35:15,949 --> 01:35:20,599
really if we've just got a bug that's

2045
01:35:17,960 --> 01:35:23,090
separate from that because it does kind

2046
01:35:20,600 --> 01:35:24,470
of look like when they it looks like

2047
01:35:23,090 --> 01:35:28,039
whenever they pass through each other

2048
01:35:24,470 --> 01:35:30,980
you still get that bug and I don't know

2049
01:35:28,039 --> 01:35:34,279
I don't think that's the Z because I'm

2050
01:35:30,979 --> 01:35:36,259
now setting the Z randomly right for at

2051
01:35:34,279 --> 01:35:39,369
least I tried to maybe that's not

2052
01:35:36,260 --> 01:35:39,369
getting used I don't know

2053
01:35:50,588 --> 01:35:56,760
but I think it is because it's just

2054
01:35:52,779 --> 01:35:56,759
setting it's just using the particle Z

2055
01:35:57,448 --> 01:36:01,928
and so I feel like it's kind of correct

2056
01:36:00,248 --> 01:36:09,878
there like I feel like that's going to

2057
01:36:01,929 --> 01:36:12,099
use that's three value it's not a fair

2058
01:36:09,878 --> 01:36:14,168
test because I mean it's possible that

2059
01:36:12,099 --> 01:36:17,760
that's not really moving the Z values

2060
01:36:14,168 --> 01:36:17,760
like I would have wanted it to do

2061
01:36:52,979 --> 01:36:55,979
hmm

2062
01:37:00,979 --> 01:37:07,789
so I think we may need a more controlled

2063
01:37:03,409 --> 01:37:09,109
test case for this because I think it's

2064
01:37:07,789 --> 01:37:11,720
going to be too hard to guess what's

2065
01:37:09,109 --> 01:37:15,589
going on here with that a little bit

2066
01:37:11,720 --> 01:37:17,390
more context it does seem like you know

2067
01:37:15,590 --> 01:37:23,300
I feel like we definitely would have a

2068
01:37:17,390 --> 01:37:26,180
bug in the in the shadow case where the

2069
01:37:23,300 --> 01:37:29,060
Z values would be basically the same so

2070
01:37:26,180 --> 01:37:31,550
I do feel like that might be part of

2071
01:37:29,060 --> 01:37:34,039
what we're seeing in some cases but it

2072
01:37:31,550 --> 01:37:35,630
feels to me like we're getting bugs in

2073
01:37:34,039 --> 01:37:39,769
places where the Z value isn't

2074
01:37:35,630 --> 01:37:43,750
necessarily the same and so that feels

2075
01:37:39,770 --> 01:37:46,460
like not really what should be happening

2076
01:37:43,750 --> 01:37:50,569
I also feel like now that our that we're

2077
01:37:46,460 --> 01:37:54,230
using correct like we're actually using

2078
01:37:50,569 --> 01:37:57,409
correct v our particle spawn should be

2079
01:37:54,229 --> 01:37:58,699
fixed to you know instead of spawning up

2080
01:37:57,409 --> 01:38:00,739
in Y which is what they were doing

2081
01:37:58,699 --> 01:38:02,840
before they should spawn up in Z right

2082
01:38:00,739 --> 01:38:05,239
because that was what was supposed to be

2083
01:38:02,840 --> 01:38:07,640
happening and we were only using Y

2084
01:38:05,239 --> 01:38:08,960
because we didn't really have real V so

2085
01:38:07,640 --> 01:38:10,610
now that we have real V I feel like our

2086
01:38:08,960 --> 01:38:15,319
particles should be spawning upwards so

2087
01:38:10,609 --> 01:38:19,399
there they are right so that's better

2088
01:38:15,319 --> 01:38:21,409
right and so since we kind of want a

2089
01:38:19,399 --> 01:38:31,879
little bit of jitter there I feel like

2090
01:38:21,409 --> 01:38:34,420
we probably want to give it some more

2091
01:38:31,880 --> 01:38:34,420
like this

2092
01:38:40,510 --> 01:38:45,800
to know why I'm tuning this right now

2093
01:38:42,859 --> 01:38:51,109
obviously it's just you know sometimes

2094
01:38:45,800 --> 01:38:53,480
it's hard to wait why did we why is this

2095
01:38:51,109 --> 01:38:56,149
doing seven times that what why wouldn't

2096
01:38:53,479 --> 01:38:57,859
you just do why wouldn't you just make

2097
01:38:56,149 --> 01:38:59,029
that be seven I don't know what the deal

2098
01:38:57,859 --> 01:39:01,899
is with that but anywhere we're going to

2099
01:38:59,029 --> 01:39:01,899
fix that as well

2100
01:39:11,800 --> 01:39:15,610
so that's more correct right that's like

2101
01:39:14,050 --> 01:39:24,039
what the what it should actually be

2102
01:39:15,609 --> 01:39:26,109
doing there I feel like they want a lot

2103
01:39:24,039 --> 01:39:41,489
more poof to that they want to let

2104
01:39:26,109 --> 01:39:41,489
they're gonna want to if we're honest

2105
01:39:45,829 --> 01:39:50,180
now granted they should really not be

2106
01:39:47,029 --> 01:39:52,429
spawning a bunch of heads you know

2107
01:39:50,180 --> 01:39:54,650
that's true but if you imagine them

2108
01:39:52,430 --> 01:40:02,420
spawning something reasonable

2109
01:39:54,649 --> 01:40:06,859
I like how they fall down to the grant

2110
01:40:02,420 --> 01:40:08,899
to the floor below I wonder if we went

2111
01:40:06,859 --> 01:40:10,939
downstairs if we would just have stuff

2112
01:40:08,899 --> 01:40:14,779
falling through the floor that we would

2113
01:40:10,939 --> 01:40:17,629
then see like just coming at us like

2114
01:40:14,779 --> 01:40:19,219
from above I don't know if it makes it

2115
01:40:17,630 --> 01:40:27,010
down here it doesn't look like it does

2116
01:40:19,220 --> 01:40:27,010
oh yeah there's some over in the corner

2117
01:40:35,118 --> 01:40:38,719
pretty soon going to have to actually

2118
01:40:37,189 --> 01:40:42,229
write some code to let this guy move

2119
01:40:38,719 --> 01:40:43,340
around for real it's getting to be kind

2120
01:40:42,229 --> 01:40:47,448
of a world that you want to actually

2121
01:40:43,340 --> 01:40:55,010
explore and build some stuff in I hate

2122
01:40:47,448 --> 01:41:06,379
to say it I hate to say it but it's kind

2123
01:40:55,010 --> 01:41:08,599
of true um so yeah so I think we just

2124
01:41:06,380 --> 01:41:13,639
aren't doing the compositing math

2125
01:41:08,599 --> 01:41:16,039
correctly I think I think that's mostly

2126
01:41:13,639 --> 01:41:17,750
our problem here

2127
01:41:16,039 --> 01:41:23,000
and you can see when this guy jumps

2128
01:41:17,750 --> 01:41:25,189
behind the hero which I don't know if

2129
01:41:23,000 --> 01:41:28,010
you can see this but you get fringing on

2130
01:41:25,189 --> 01:41:31,579
him so it kind of feels like we're still

2131
01:41:28,010 --> 01:41:41,929
only getting one depth feel instead of

2132
01:41:31,579 --> 01:41:45,050
four and I don't think that the Z values

2133
01:41:41,929 --> 01:41:48,679
being equal can necessarily account for

2134
01:41:45,050 --> 01:41:50,360
that and maybe it can like maybe all of

2135
01:41:48,679 --> 01:41:56,810
those bugs are just because the Z values

2136
01:41:50,359 --> 01:42:04,539
are are the same but I don't know if

2137
01:41:56,810 --> 01:42:12,039
that's really plausible I you know it

2138
01:42:04,539 --> 01:42:19,039
seems probably a little bit not that

2139
01:42:12,039 --> 01:42:21,829
plausible so I want to see here let's

2140
01:42:19,039 --> 01:42:25,238
suppose that I stopped blending in any

2141
01:42:21,829 --> 01:42:25,238
of these other colors here

2142
01:42:31,520 --> 01:42:38,300
so that does not fill me with confidence

2143
01:42:34,189 --> 01:42:41,569
because the back peel should have

2144
01:42:38,300 --> 01:42:46,130
something in it and I'm asking anything

2145
01:42:41,569 --> 01:42:50,929
so ok let's turn off the invert the back

2146
01:42:46,130 --> 01:42:54,020
alpha you know computation so I'm seeing

2147
01:42:50,930 --> 01:42:56,030
nothing for PL 3 right I'm seeing I'm

2148
01:42:54,020 --> 01:42:59,650
seeing literally nothing if I just write

2149
01:42:56,029 --> 01:43:03,949
PL 3 I see nothing that is not good

2150
01:42:59,649 --> 01:43:15,289
what about peel - I see nothing for peel

2151
01:43:03,949 --> 01:43:17,599
2 so for some reason I'm not imagining

2152
01:43:15,289 --> 01:43:20,449
things when I say that it's like we only

2153
01:43:17,600 --> 01:43:24,740
have two peels because we only seem to

2154
01:43:20,449 --> 01:43:27,889
have two fields which ain't great so

2155
01:43:24,739 --> 01:43:31,729
let's see here we create some number of

2156
01:43:27,890 --> 01:43:33,680
render targets and those render targets

2157
01:43:31,729 --> 01:43:37,579
are supposed to all be roughly

2158
01:43:33,680 --> 01:43:40,190
equivalent we then go through and clear

2159
01:43:37,579 --> 01:43:43,729
all of them to zero except for the very

2160
01:43:40,189 --> 01:43:47,839
last one which again I I think is

2161
01:43:43,729 --> 01:43:52,489
correct but we're not we must not be

2162
01:43:47,840 --> 01:43:54,680
doing something right because you know

2163
01:43:52,489 --> 01:44:00,380
if we should at least see that clear

2164
01:43:54,680 --> 01:44:02,840
color come through right I mean it's

2165
01:44:00,380 --> 01:44:05,869
real weird so yeah when we're coming

2166
01:44:02,840 --> 01:44:09,350
through here any time to peel index 0 1

2167
01:44:05,869 --> 01:44:13,069
2 it should come through here do the

2168
01:44:09,350 --> 01:44:15,800
loop draw in there and set peeling equal

2169
01:44:13,069 --> 01:44:17,630
true and so when we're doing the rest of

2170
01:44:15,800 --> 01:44:21,020
this stuff in theory that should draw

2171
01:44:17,630 --> 01:44:22,609
right I mean I think that you know that

2172
01:44:21,020 --> 01:44:24,790
should be what's going on I don't know

2173
01:44:22,609 --> 01:44:27,920
maybe that's not what's going on

2174
01:44:24,789 --> 01:44:27,920
[Music]

2175
01:44:34,840 --> 01:44:39,130
I feel like feel active texture should

2176
01:44:37,720 --> 01:44:41,949
always be getting set correctly now

2177
01:44:39,130 --> 01:44:47,230
because we restore it at the end like we

2178
01:44:41,949 --> 01:44:49,210
should so that seems okay I don't see

2179
01:44:47,229 --> 01:44:56,469
why we would be having a problem with

2180
01:44:49,210 --> 01:45:00,489
that I would like to know what happens

2181
01:44:56,470 --> 01:45:03,180
if I just blip them directly so there's

2182
01:45:00,489 --> 01:45:12,250
steel zero

2183
01:45:03,180 --> 01:45:16,720
subscribe plz that's just just

2184
01:45:12,250 --> 01:45:20,020
straight-up weird so if I look at the

2185
01:45:16,720 --> 01:45:23,619
peeled here I am getting them so it's

2186
01:45:20,020 --> 01:45:28,540
like I'm not able to read from those

2187
01:45:23,619 --> 01:45:31,000
textures I wonder if that has something

2188
01:45:28,539 --> 01:45:33,550
to do with this card like is it possible

2189
01:45:31,000 --> 01:45:43,000
that this card is so old it can only

2190
01:45:33,550 --> 01:45:52,119
read from two textures at once I mean

2191
01:45:43,000 --> 01:45:55,029
that's really old but but that could be

2192
01:45:52,119 --> 01:45:57,670
the other problem is maybe I'm setting

2193
01:45:55,029 --> 01:46:01,809
it up wrong so maybe like I'm asking

2194
01:45:57,670 --> 01:46:05,310
when I do that shader compiled I'm

2195
01:46:01,810 --> 01:46:08,380
asking for the wrong name or something

2196
01:46:05,310 --> 01:46:12,510
or using the wrong is it are these

2197
01:46:08,380 --> 01:46:16,539
written wrong peels 0 1 2 3 sampler

2198
01:46:12,510 --> 01:46:18,489
let's let's just I mean I let's just

2199
01:46:16,539 --> 01:46:25,269
look at what that does when we compile

2200
01:46:18,489 --> 01:46:28,559
it right because I don't know let's just

2201
01:46:25,270 --> 01:46:28,560
hop in here and see what we get

2202
01:46:32,510 --> 01:46:44,670
so peel zero sampler and peel one

2203
01:46:35,880 --> 01:46:57,630
sampler got non values but those were

2204
01:46:44,670 --> 01:47:00,470
the two that we're working but what is

2205
01:46:57,630 --> 01:47:00,470
this

2206
01:47:08,729 --> 01:47:17,089
oh that's okay that's because we comment

2207
01:47:15,270 --> 01:47:19,470
easier than that all right that's fine

2208
01:47:17,090 --> 01:47:21,390
so yeah so now we know that's definitely

2209
01:47:19,470 --> 01:47:24,409
not the case because when it compiled it

2210
01:47:21,390 --> 01:47:27,450
it only did a read from one texture

2211
01:47:24,409 --> 01:47:33,000
right it compiled those other words out

2212
01:47:27,449 --> 01:47:40,260
entirely so it ain't that right so let's

2213
01:47:33,000 --> 01:47:43,500
see here when we come through we don't

2214
01:47:40,260 --> 01:47:47,970
want to be here we want to be back in

2215
01:47:43,500 --> 01:47:49,649
here so when we use this program let's

2216
01:47:47,970 --> 01:47:52,220
see if we're doing something stupid in

2217
01:47:49,649 --> 01:47:52,219
the binder

2218
01:47:59,609 --> 01:48:09,029
hello there we go

2219
01:48:03,079 --> 01:48:16,109
oops I wanted to look at that so here we

2220
01:48:09,029 --> 01:48:19,139
go we're going to call this successively

2221
01:48:16,109 --> 01:48:22,109
with the GL uniform is that the correct

2222
01:48:19,140 --> 01:48:28,020
GL uniform it looks like it is because

2223
01:48:22,109 --> 01:48:31,319
that's how we're binding these right so

2224
01:48:28,020 --> 01:48:35,010
that seems right where we just bind each

2225
01:48:31,319 --> 01:48:37,469
one to successively incrementing values

2226
01:48:35,010 --> 01:48:42,260
and then we just use like geo texture

2227
01:48:37,470 --> 01:48:42,260
plus the peel index to bind

2228
01:48:56,469 --> 01:49:00,719
sure seems right to me

2229
01:49:13,319 --> 01:49:22,019
the fact that it seems right doesn't

2230
01:49:16,229 --> 01:49:24,179
super help us because it's seeming right

2231
01:49:22,020 --> 01:49:27,750
and it being right are two very

2232
01:49:24,180 --> 01:49:38,159
different things and we are seeing a

2233
01:49:27,750 --> 01:49:42,630
black screen so what's going on why can

2234
01:49:38,159 --> 01:49:45,269
we only read from samplers 0 &amp; 1 and

2235
01:49:42,630 --> 01:49:54,930
when we read from 2 or 3 even if they're

2236
01:49:45,270 --> 01:49:56,820
the only sampler we see nothing is this

2237
01:49:54,930 --> 01:50:00,420
something that we've done incorrectly

2238
01:49:56,819 --> 01:50:01,799
when we were storing the values at the

2239
01:50:00,420 --> 01:50:04,260
beginning because you know we're kind of

2240
01:50:01,800 --> 01:50:08,750
a little bit legacy at this point when

2241
01:50:04,260 --> 01:50:12,329
we do the the render target index stuff

2242
01:50:08,750 --> 01:50:14,970
you know we do were we storing these

2243
01:50:12,329 --> 01:50:16,590
values in an inappropriate way so global

2244
01:50:14,970 --> 01:50:22,199
frame buffer textures global frame

2245
01:50:16,590 --> 01:50:27,150
buffer depth you know these get assigned

2246
01:50:22,199 --> 01:50:29,849
in some kind of weird way that doesn't

2247
01:50:27,149 --> 01:50:32,429
work properly or you know who knows what

2248
01:50:29,850 --> 01:50:34,289
here I guess I can check that pretty

2249
01:50:32,430 --> 01:50:37,980
easily by just looking at what that

2250
01:50:34,289 --> 01:50:39,600
value actually is that would that would

2251
01:50:37,979 --> 01:50:42,329
be pretty straightforward so if I came

2252
01:50:39,600 --> 01:50:43,710
in here I guess I could check this

2253
01:50:42,329 --> 01:50:45,119
anywhere don't have to check it at the

2254
01:50:43,710 --> 01:50:49,649
bind time but I'm going to check out the

2255
01:50:45,119 --> 01:50:51,359
bind time anyway so that comes through

2256
01:50:49,649 --> 01:50:52,589
here and and we're taking a look at what

2257
01:50:51,359 --> 01:50:54,659
we're binding

2258
01:50:52,590 --> 01:51:00,210
what does global flame buffer textures

2259
01:50:54,659 --> 01:51:02,159
look like I mean that looks pretty solid

2260
01:51:00,210 --> 01:51:03,239
right seven nine eleven and thirteen is

2261
01:51:02,159 --> 01:51:04,859
exactly if they were just getting

2262
01:51:03,239 --> 01:51:05,909
incremented if it's getting allocated in

2263
01:51:04,859 --> 01:51:11,219
order that's exactly what you would

2264
01:51:05,909 --> 01:51:15,389
expect to see so for some reason right I

2265
01:51:11,220 --> 01:51:18,780
can I can lit it here and if I blitt it

2266
01:51:15,390 --> 01:51:21,050
it's good if I copy it directly it's not

2267
01:51:18,779 --> 01:51:21,050
good

2268
01:51:30,939 --> 01:51:42,699
so one thing I do worry about a little

2269
01:51:33,680 --> 01:51:42,700
bit is we're not setting the myth map

2270
01:51:48,090 --> 01:51:55,400
so I mean we shouldn't really be getting

2271
01:51:56,750 --> 01:52:04,170
I'm just going to go ahead and make sure

2272
01:51:58,979 --> 01:52:06,239
these get set so you know one thing that

2273
01:52:04,170 --> 01:52:07,829
could be happy I don't see why it would

2274
01:52:06,239 --> 01:52:10,019
only happen for one and not the other

2275
01:52:07,829 --> 01:52:12,180
one is we could be getting a situation

2276
01:52:10,020 --> 01:52:16,910
where it tries to do mipmap sampling and

2277
01:52:12,180 --> 01:52:16,909
since there are no nip levels it doesn't

2278
01:52:17,600 --> 01:52:21,470
properly do that

2279
01:52:27,609 --> 01:52:31,369
yes so I don't know what's going on with

2280
01:52:30,079 --> 01:52:33,619
that that's a good question

2281
01:52:31,369 --> 01:52:35,210
so what I want to do here is again when

2282
01:52:33,619 --> 01:52:36,380
we're creating these I just want to make

2283
01:52:35,210 --> 01:52:38,779
sure that when we sample from them

2284
01:52:36,380 --> 01:52:40,340
they're not getting MIT mapped because

2285
01:52:38,779 --> 01:52:42,409
we don't generate any MIT maps for them

2286
01:52:40,340 --> 01:52:44,029
it shouldn't have mattered because if

2287
01:52:42,409 --> 01:52:47,359
we're seeing that none of them should be

2288
01:52:44,029 --> 01:52:48,829
getting that mapped but you know I don't

2289
01:52:47,359 --> 01:52:50,509
know I'm just worried about it so that

2290
01:52:48,829 --> 01:52:54,050
I'm going to do that anyway

2291
01:52:50,510 --> 01:52:55,940
so in here where we do after we've bound

2292
01:52:54,050 --> 01:52:58,670
the texture I'm going to set that

2293
01:52:55,939 --> 01:52:59,869
parameter just to ensure that it's never

2294
01:52:58,670 --> 01:53:02,659
can never do that

2295
01:52:59,869 --> 01:53:04,519
all right so that just basically turns

2296
01:53:02,659 --> 01:53:09,559
off any possible magnification or

2297
01:53:04,520 --> 01:53:11,840
magnification filters and we'll see what

2298
01:53:09,560 --> 01:53:13,850
happens I don't feel like that should

2299
01:53:11,840 --> 01:53:19,039
have anything to do with it but I just I

2300
01:53:13,850 --> 01:53:21,200
don't know okay apparently it did I have

2301
01:53:19,039 --> 01:53:26,060
no explanation for why that was the case

2302
01:53:21,199 --> 01:53:28,069
I can only tell you that apparently

2303
01:53:26,060 --> 01:53:31,400
those textures were trying to MIT and

2304
01:53:28,069 --> 01:53:33,500
the other ones weren't or these got set

2305
01:53:31,399 --> 01:53:37,609
somehow on textures on the other texture

2306
01:53:33,500 --> 01:53:40,640
handles prior that's really weird but

2307
01:53:37,609 --> 01:53:49,630
turning off MIT fetches it must have

2308
01:53:40,640 --> 01:53:54,590
just been mismatches yeah so okay that's

2309
01:53:49,630 --> 01:53:57,109
fine I guess so coming through here

2310
01:53:54,590 --> 01:53:58,970
let's just go ahead and and see if we

2311
01:53:57,109 --> 01:54:02,809
can re-enable some of these fetches here

2312
01:53:58,970 --> 01:54:03,800
so now can I fetch three correctly I'm

2313
01:54:02,810 --> 01:54:05,539
just wondering

2314
01:54:03,800 --> 01:54:08,869
so that looks like three pretty pretty

2315
01:54:05,539 --> 01:54:13,000
good can I re enable the alpha

2316
01:54:08,869 --> 01:54:18,260
adjustment for the background three I

2317
01:54:13,000 --> 01:54:19,760
can so that's good and then I don't

2318
01:54:18,260 --> 01:54:21,230
really know if that should be happening

2319
01:54:19,760 --> 01:54:23,690
we need to think about that math look

2320
01:54:21,229 --> 01:54:29,149
better what happens if I actually come

2321
01:54:23,689 --> 01:54:32,750
in here and try to do the full blend and

2322
01:54:29,149 --> 01:54:37,819
and did that does that work it does

2323
01:54:32,750 --> 01:54:40,310
appear to work and you know everything

2324
01:54:37,819 --> 01:54:45,559
looks quite nice doesn't it

2325
01:54:40,310 --> 01:54:50,090
I got to tell you what if we were to

2326
01:54:45,560 --> 01:54:51,680
turn off our render volumes here have

2327
01:54:50,090 --> 01:54:59,409
you have you have you wondered that

2328
01:54:51,680 --> 01:54:59,409
question if I was to just end if that

2329
01:55:00,760 --> 01:55:08,449
looks like we still are drawing that one

2330
01:55:03,260 --> 01:55:11,270
right there but that's looking like a

2331
01:55:08,449 --> 01:55:14,739
pretty respectable rendering right now

2332
01:55:11,270 --> 01:55:14,740
to be completely honest with you

2333
01:55:25,248 --> 01:55:29,288
that's looking pretty darn good folks

2334
01:55:29,889 --> 01:55:34,340
and I do think now we could play with

2335
01:55:32,719 --> 01:55:39,469
that effect that I wanted to play with

2336
01:55:34,340 --> 01:55:48,590
too which is that that effect right

2337
01:55:39,469 --> 01:55:50,479
there right and so what I'm interested

2338
01:55:48,590 --> 01:55:53,119
to see now is since we can play with

2339
01:55:50,479 --> 01:55:55,749
alpha a little bit more suppose I was to

2340
01:55:53,118 --> 01:55:58,069
make that be an outlet clip plane now

2341
01:55:55,748 --> 01:55:59,899
and so the way that we would do that

2342
01:55:58,069 --> 01:56:04,578
right is the same way we were doing the

2343
01:55:59,899 --> 01:56:10,788
fog before and so you know in the OpenGL

2344
01:56:04,578 --> 01:56:12,498
renderer right we would have we would

2345
01:56:10,788 --> 01:56:19,429
have sort of the same stuff that we were

2346
01:56:12,498 --> 01:56:27,828
doing with the fog where we've got where

2347
01:56:19,429 --> 01:56:29,809
is it so this bit right here so we kind

2348
01:56:27,828 --> 01:56:32,899
of have the like fog start distance fog

2349
01:56:29,809 --> 01:56:36,409
and distance right we would have a way

2350
01:56:32,899 --> 01:56:39,408
of saying like a you know clip alpha

2351
01:56:36,408 --> 01:56:44,179
start distance and clip alpha end

2352
01:56:39,408 --> 01:56:48,198
distance you know and those would they

2353
01:56:44,179 --> 01:56:49,969
would do exactly the same math so where

2354
01:56:48,198 --> 01:56:52,158
we have this fog distance here and we

2355
01:56:49,969 --> 01:56:55,158
have the fog amount we'd also have an

2356
01:56:52,158 --> 01:56:57,498
alpha amount and it would do a clamp gr1

2357
01:56:55,158 --> 01:57:00,469
map to range and it would be the clip

2358
01:56:57,498 --> 01:57:02,960
alpha start distance the saw distance

2359
01:57:00,469 --> 01:57:05,510
clip alpha and distance and we're just

2360
01:57:02,960 --> 01:57:07,099
taking another range there and producing

2361
01:57:05,510 --> 01:57:09,679
just like we produce the fog value we

2362
01:57:07,099 --> 01:57:12,288
produce an alpha value and then what we

2363
01:57:09,679 --> 01:57:15,788
can do is we look we're all ready we're

2364
01:57:12,288 --> 01:57:21,889
prepared to do it right

2365
01:57:15,788 --> 01:57:25,309
we already did exactly this we're just

2366
01:57:21,889 --> 01:57:30,559
going to take that alpha and multiply it

2367
01:57:25,309 --> 01:57:32,420
by that alpha that's log base alpha and

2368
01:57:30,559 --> 01:57:34,489
so if we want to do that right we just

2369
01:57:32,420 --> 01:57:35,420
need to add the ability to pass those

2370
01:57:34,488 --> 01:57:39,049
down

2371
01:57:35,420 --> 01:57:43,789
so there's the clip what would would I

2372
01:57:39,050 --> 01:57:52,010
call it clip alpha start distance and

2373
01:57:43,789 --> 01:57:54,408
clip alpha and so those those two values

2374
01:57:52,010 --> 01:58:03,020
are now getting like remembered you know

2375
01:57:54,408 --> 01:58:08,089
and we can have those on here as just

2376
01:58:03,020 --> 01:58:11,540
another thing that gets set like so and

2377
01:58:08,090 --> 01:58:13,400
so in the render group we would just put

2378
01:58:11,539 --> 01:58:18,649
those into the setup the render setup

2379
01:58:13,399 --> 01:58:19,879
and so it's literally just a copy and so

2380
01:58:18,649 --> 01:58:21,859
you can kind of see like what I'm doing

2381
01:58:19,880 --> 01:58:23,480
here you would if you have lots of

2382
01:58:21,859 --> 01:58:25,789
shaders this is the stuff that you would

2383
01:58:23,479 --> 01:58:27,379
need to start automating the ability to

2384
01:58:25,789 --> 01:58:28,939
define something in a shader and set it

2385
01:58:27,380 --> 01:58:30,859
somewhere else and not have to

2386
01:58:28,939 --> 01:58:32,779
constantly do all the piping by hand

2387
01:58:30,859 --> 01:58:36,349
because it you know can definitely drag

2388
01:58:32,779 --> 01:58:37,969
you down I don't mind doing this by hand

2389
01:58:36,350 --> 01:58:39,619
because I know we you know don't really

2390
01:58:37,969 --> 01:58:42,920
have very much hair so if we had 20

2391
01:58:39,618 --> 01:58:44,509
shaders it would start to get kind of

2392
01:58:42,920 --> 01:58:46,399
onerous right and at that point you kind

2393
01:58:44,510 --> 01:58:48,530
of want to you know do something a

2394
01:58:46,399 --> 01:58:50,089
little more reasonable so let's take a

2395
01:58:48,529 --> 01:58:54,500
look at the fog start distancing the fog

2396
01:58:50,090 --> 01:58:58,250
and distant stuff here I'm going to set

2397
01:58:54,500 --> 01:59:02,149
the clipped alpha start distance and

2398
01:58:58,250 --> 01:59:04,368
eclipse alpha end distance I'm just

2399
01:59:02,149 --> 01:59:06,948
going to yeah set those to basically be

2400
01:59:04,368 --> 01:59:08,658
nothing like they were before and so the

2401
01:59:06,948 --> 01:59:10,719
fog starts to since that stuff is just

2402
01:59:08,658 --> 01:59:13,099
hard coded here is you can kind of see

2403
01:59:10,719 --> 01:59:14,899
and so what I want to do is say well

2404
01:59:13,100 --> 01:59:17,750
whatever the near clip plane is is going

2405
01:59:14,899 --> 01:59:21,920
to be any time we're doing that fog the

2406
01:59:17,750 --> 01:59:23,300
fogging I'm going to go ahead and say

2407
01:59:21,920 --> 01:59:25,730
all right let's set the clip I also

2408
01:59:23,300 --> 01:59:27,199
start distance and set the clip alpha

2409
01:59:25,729 --> 01:59:29,388
start just misses even your clip plane

2410
01:59:27,198 --> 01:59:31,419
so it's right on there and we're going

2411
01:59:29,389 --> 01:59:35,179
to set the clip clip alpha end distance

2412
01:59:31,420 --> 01:59:37,760
to be you know where we want it to

2413
01:59:35,179 --> 01:59:39,770
actually start fading in or you know

2414
01:59:37,760 --> 01:59:41,869
which is shouldn't shouldn't be too far

2415
01:59:39,770 --> 01:59:43,219
off probably I don't know but we have

2416
01:59:41,868 --> 01:59:45,618
interesting thing here which is that the

2417
01:59:43,219 --> 01:59:49,010
start and end are kind of inverted so we

2418
01:59:45,618 --> 01:59:51,949
really want to do the opposite of that

2419
01:59:49,010 --> 01:59:54,079
we want to map the range backwards but

2420
01:59:51,949 --> 01:59:58,189
we can just do that directly in the

2421
01:59:54,079 --> 01:59:59,750
shader so I don't really know how we

2422
01:59:58,189 --> 02:00:03,259
want to do like in other words I think

2423
01:59:59,750 --> 02:00:03,680
we could just do this if that makes

2424
02:00:03,260 --> 02:00:06,020
sense

2425
02:00:03,680 --> 02:00:07,940
because we want it to fade out as a good

2426
02:00:06,020 --> 02:00:10,340
coaster I don't remember if the way we

2427
02:00:07,939 --> 02:00:13,639
wrote it will actually handle that or

2428
02:00:10,340 --> 02:00:15,680
not so we'll find out in a second but

2429
02:00:13,640 --> 02:00:16,820
let's go ahead and quickly just see if

2430
02:00:15,680 --> 02:00:18,170
we can get this working before I go to

2431
02:00:16,819 --> 02:00:21,649
the Q&amp;A because I'm just interested to

2432
02:00:18,170 --> 02:00:27,319
see that effect alpha amount is

2433
02:00:21,649 --> 02:00:38,179
undefined right you are sir and we do

2434
02:00:27,319 --> 02:00:48,170
apologize for that what we could do here

2435
02:00:38,180 --> 02:00:50,360
is to say screw it there we go okay so

2436
02:00:48,170 --> 02:00:52,460
now we have to see whether we can get

2437
02:00:50,359 --> 02:00:54,409
this effect working in a reasonable way

2438
02:00:52,460 --> 02:00:56,600
we are actually passing down values now

2439
02:00:54,409 --> 02:01:00,349
and it doesn't really appear to be doing

2440
02:00:56,600 --> 02:01:02,600
anything right so that doesn't look

2441
02:01:00,350 --> 02:01:03,890
particularly good so what I want to do

2442
02:01:02,600 --> 02:01:05,750
here is I want to play with this a

2443
02:01:03,890 --> 02:01:07,220
little bit more let's put it in the

2444
02:01:05,750 --> 02:01:09,380
right order because maybe that clamp

2445
02:01:07,220 --> 02:01:10,880
that clamp probably doesn't work right

2446
02:01:09,380 --> 02:01:11,840
if you specify than the opposite order I

2447
02:01:10,880 --> 02:01:14,770
don't really know if that's true or not

2448
02:01:11,840 --> 02:01:19,640
we probably wrote the clamp wrong

2449
02:01:14,770 --> 02:01:22,280
because we're just done so let's see if

2450
02:01:19,640 --> 02:01:25,100
we come through here yeah again I'm not

2451
02:01:22,279 --> 02:01:26,659
seeing any alpha there so I'm not

2452
02:01:25,100 --> 02:01:28,850
feeling very good about that

2453
02:01:26,659 --> 02:01:31,639
so just because I'm not really sure

2454
02:01:28,850 --> 02:01:33,200
what's going on there I'm going to play

2455
02:01:31,640 --> 02:01:35,300
with the shader a little bit directly

2456
02:01:33,199 --> 02:01:36,939
first to get it working there because I

2457
02:01:35,300 --> 02:01:39,710
would like to see what's happening

2458
02:01:36,939 --> 02:01:41,719
before I try to make sure the piping is

2459
02:01:39,710 --> 02:01:44,239
correct which is a separate issue right

2460
02:01:41,720 --> 02:01:47,180
so the first thing I want to do is again

2461
02:01:44,238 --> 02:01:50,949
same black box debugging techniques what

2462
02:01:47,180 --> 02:01:53,329
I would like to do here is say well okay

2463
02:01:50,949 --> 02:01:59,359
let's go back to the alpha amount

2464
02:01:53,329 --> 02:02:02,269
concept and we'll multiply by the alpha

2465
02:01:59,359 --> 02:02:02,569
amount and what I'm going to do is take

2466
02:02:02,270 --> 02:02:04,700
that

2467
02:02:02,569 --> 02:02:07,509
frag color I want to take else amount

2468
02:02:04,699 --> 02:02:09,710
and just reduce it so it's always have

2469
02:02:07,510 --> 02:02:12,020
so what I should see now is everything

2470
02:02:09,710 --> 02:02:15,770
should go to half alpha right and it

2471
02:02:12,020 --> 02:02:17,690
does so that's pretty cool and hey check

2472
02:02:15,770 --> 02:02:20,390
out how often this depth peeling is

2473
02:02:17,689 --> 02:02:22,639
right like we just set everything

2474
02:02:20,390 --> 02:02:24,619
outside and it worked like the whole

2475
02:02:22,640 --> 02:02:27,770
world is transparent and it basically

2476
02:02:24,619 --> 02:02:30,680
works like that's kind of nuts because

2477
02:02:27,770 --> 02:02:33,280
we're not sorting anything so that def

2478
02:02:30,680 --> 02:02:36,020
feeling is just great for these 2d games

2479
02:02:33,279 --> 02:02:38,269
you've got the fill rate to spare I kind

2480
02:02:36,020 --> 02:02:39,950
of feel like you should just do it and

2481
02:02:38,270 --> 02:02:41,840
you know on a higher-end hardware you

2482
02:02:39,949 --> 02:02:43,309
could use the Atomics but man that's

2483
02:02:41,840 --> 02:02:44,810
really compelling you just throw it in

2484
02:02:43,310 --> 02:02:46,310
there and it's like hey guess what I

2485
02:02:44,810 --> 02:02:51,500
sorted it for you

2486
02:02:46,310 --> 02:02:53,600
happy birthday so anyway obviously the

2487
02:02:51,500 --> 02:02:55,640
Alpha amount is working so our problem

2488
02:02:53,600 --> 02:02:58,430
here is that we're not actually mapping

2489
02:02:55,640 --> 02:03:00,650
this range quickly and so let's try to

2490
02:02:58,430 --> 02:03:02,750
figure out what's going on there so I

2491
02:03:00,649 --> 02:03:04,519
want to make the range go backwards so

2492
02:03:02,750 --> 02:03:08,710
basically as we get further along the

2493
02:03:04,520 --> 02:03:08,710
range the Alpha should get higher right

2494
02:03:10,180 --> 02:03:14,510
but actually that's okay so that's what

2495
02:03:13,340 --> 02:03:16,699
should happen so I think we're alright

2496
02:03:14,510 --> 02:03:18,619
so the clip alpha start distance should

2497
02:03:16,699 --> 02:03:20,269
be you know however far away we want to

2498
02:03:18,619 --> 02:03:24,500
start from the camera so let's say we

2499
02:03:20,270 --> 02:03:26,660
start at 1 and we go to 2 so that should

2500
02:03:24,500 --> 02:03:29,029
give us some fog between 1 and 2 where

2501
02:03:26,659 --> 02:03:31,670
it's alpha fog so that the Alpha of

2502
02:03:29,029 --> 02:03:33,949
stuff should come in at that point and

2503
02:03:31,670 --> 02:03:44,480
it doesn't which is just bizarre

2504
02:03:33,949 --> 02:03:50,750
oh I'm just stupid I am mister stupid

2505
02:03:44,479 --> 02:03:53,449
pants the third so that's just yeah

2506
02:03:50,750 --> 02:03:55,010
that's just me being dumb the these

2507
02:03:53,449 --> 02:03:57,050
aren't the near and far clip planes that

2508
02:03:55,010 --> 02:03:59,000
we're using so what we really want to do

2509
02:03:57,050 --> 02:04:00,829
is take the near clip plane and set the

2510
02:03:59,000 --> 02:04:02,569
alpha start to bat and then we want the

2511
02:04:00,829 --> 02:04:06,019
near clip plane which is actually pretty

2512
02:04:02,569 --> 02:04:08,119
far out it's not 0.1 stepping in set the

2513
02:04:06,020 --> 02:04:10,340
near clip plane plus you know I don't

2514
02:04:08,119 --> 02:04:11,840
know a quarter meter I'm not sure how

2515
02:04:10,340 --> 02:04:16,190
far and we want to go for the Alpha

2516
02:04:11,840 --> 02:04:17,719
probably not far anyway

2517
02:04:16,189 --> 02:04:19,009
that should be now more correct of

2518
02:04:17,719 --> 02:04:20,270
course I still don't seem like it works

2519
02:04:19,010 --> 02:04:22,310
so that wasn't the problem

2520
02:04:20,270 --> 02:04:25,040
that it was a problem but not the

2521
02:04:22,310 --> 02:04:26,840
problem apparently so let's go back here

2522
02:04:25,039 --> 02:04:28,969
and see what happens I'm going to start

2523
02:04:26,840 --> 02:04:35,719
it pretty far out so I'm going to start

2524
02:04:28,969 --> 02:04:36,920
it at four and and go to five and we

2525
02:04:35,719 --> 02:04:42,800
should be able to get some alpha

2526
02:04:36,920 --> 02:04:46,420
somewhere right like somehow it's just

2527
02:04:42,800 --> 02:04:49,460
not working at all and I don't know why

2528
02:04:46,420 --> 02:04:51,260
because it seems like we should be able

2529
02:04:49,460 --> 02:04:54,680
to get some values in here in the Alpha

2530
02:04:51,260 --> 02:04:57,440
amount and we know you know we know

2531
02:04:54,680 --> 02:04:59,060
we're getting we know that that if we do

2532
02:04:57,439 --> 02:05:01,129
get a value in the Alpha that it does

2533
02:04:59,060 --> 02:05:04,580
work because if we come in here and

2534
02:05:01,130 --> 02:05:08,029
again and we set alpha amount to 0.5 we

2535
02:05:04,579 --> 02:05:10,579
do see alpha happen right I mean it is

2536
02:05:08,029 --> 02:05:12,559
the contribution is happening so somehow

2537
02:05:10,579 --> 02:05:14,779
this clamps are one map to range for the

2538
02:05:12,560 --> 02:05:17,060
fog distance is never producing any

2539
02:05:14,779 --> 02:05:20,238
actual alpha so what if I just made it

2540
02:05:17,060 --> 02:05:21,920
the entire like a huge swath right and

2541
02:05:20,238 --> 02:05:30,529
what's our near clip plane set to right

2542
02:05:21,920 --> 02:05:33,409
now does anyone know so the near cliff

2543
02:05:30,529 --> 02:05:36,500
plane is the near clip plane is set to 5

2544
02:05:33,409 --> 02:05:38,809
so what if I just said start at the near

2545
02:05:36,500 --> 02:05:42,800
clip plane of 5 and go to 10 that's a

2546
02:05:38,810 --> 02:05:47,810
huge range we should see alpha or along

2547
02:05:42,800 --> 02:05:50,119
the whole way ok there we go there we go

2548
02:05:47,810 --> 02:05:53,390
so what's a little bit odd about that is

2549
02:05:50,119 --> 02:05:56,119
if five is the near clip plane and our

2550
02:05:53,390 --> 02:06:01,760
alpha should be zero there why are we

2551
02:05:56,119 --> 02:06:04,130
still seeing anything and what I'm

2552
02:06:01,760 --> 02:06:07,699
thinking is the problem there must be

2553
02:06:04,130 --> 02:06:11,539
our frag color when we pass down the

2554
02:06:07,698 --> 02:06:14,529
frag color ah when we pass down the frag

2555
02:06:11,539 --> 02:06:17,238
color we are not taking account of

2556
02:06:14,529 --> 02:06:20,000
premultiplied alpha so really we need to

2557
02:06:17,238 --> 02:06:21,649
multiply the entire fragment color by

2558
02:06:20,000 --> 02:06:26,300
that alpha mount because it's

2559
02:06:21,649 --> 02:06:29,529
premultiplied alpha lovely that's what I

2560
02:06:26,300 --> 02:06:32,090
wanted to see okay

2561
02:06:29,529 --> 02:06:33,619
so now let's back out these things to

2562
02:06:32,090 --> 02:06:37,010
something that maybe should make some

2563
02:06:33,619 --> 02:06:38,479
more sense we had a couple different

2564
02:06:37,010 --> 02:06:41,860
stupidities in there it was like a

2565
02:06:38,479 --> 02:06:41,859
festival of stupid

2566
02:06:49,529 --> 02:06:54,389
so now let's see if we can get something

2567
02:06:51,119 --> 02:06:57,979
working properly here so if it starts if

2568
02:06:54,390 --> 02:06:57,980
the fog starts at the near clip plane

2569
02:06:59,149 --> 02:07:08,879
start distance end distance and I don't

2570
02:07:04,470 --> 02:07:13,350
know extends for one unit presumably we

2571
02:07:08,880 --> 02:07:15,800
should see an alpha band there but we

2572
02:07:13,350 --> 02:07:15,800
still don't

2573
02:07:24,649 --> 02:07:36,429
hmm I wonder why not if I set this to

2574
02:07:28,219 --> 02:07:36,429
five and I set this to 10 what happens

2575
02:07:38,859 --> 02:07:42,219
still nothing

2576
02:07:45,158 --> 02:07:50,319
so here's a question am i setting those

2577
02:07:47,560 --> 02:07:52,570
properly in my haste did I forget to

2578
02:07:50,319 --> 02:07:52,920
actually set those I probably did didn't

2579
02:07:52,569 --> 02:08:00,429
I

2580
02:07:52,920 --> 02:08:12,929
yep nice job dude the festival of Sioux

2581
02:08:00,429 --> 02:08:12,929
City continues there we go you do oops

2582
02:08:12,988 --> 02:08:16,539
which by the way is another reason why

2583
02:08:15,158 --> 02:08:17,738
you want to automate these kinds of

2584
02:08:16,539 --> 02:08:19,000
processes for doing a lot of them

2585
02:08:17,738 --> 02:08:22,709
because it's easy to make a stupid error

2586
02:08:19,000 --> 02:08:26,560
like that all right so that's better and

2587
02:08:22,710 --> 02:08:30,250
a clip alpha start distance now should

2588
02:08:26,560 --> 02:08:31,929
properly be able to be set based on the

2589
02:08:30,250 --> 02:08:33,939
near cliff line so that whatever you set

2590
02:08:31,929 --> 02:08:39,039
it to it will fade out nearer than your

2591
02:08:33,939 --> 02:08:40,629
clip plane like so so now the problem we

2592
02:08:39,039 --> 02:08:42,429
have is in your clip plane is actually

2593
02:08:40,630 --> 02:08:47,350
fading those things out a little bit too

2594
02:08:42,429 --> 02:08:49,060
early right so we probably do want to

2595
02:08:47,350 --> 02:08:52,000
tighten this up a little bit and we

2596
02:08:49,060 --> 02:08:57,690
maybe need to put the near clip plane a

2597
02:08:52,000 --> 02:08:57,689
little bit further back to I don't know

2598
02:09:03,890 --> 02:09:08,869
so that's a pretty interesting effect

2599
02:09:05,840 --> 02:09:16,640
and so now the other thing that I'm

2600
02:09:08,869 --> 02:09:23,390
thinking right is I think we might also

2601
02:09:16,640 --> 02:09:27,410
be able to improve upon that upon that

2602
02:09:23,390 --> 02:09:32,150
technique a little further as well like

2603
02:09:27,409 --> 02:09:36,500
I think we may be able to make it do

2604
02:09:32,149 --> 02:09:38,869
some smarter stuff with with respect to

2605
02:09:36,500 --> 02:09:44,510
like fading out things that maybe we

2606
02:09:38,869 --> 02:09:53,149
don't quite want to maybe we don't quite

2607
02:09:44,510 --> 02:09:55,369
want to depth feel as much but yeah

2608
02:09:53,149 --> 02:09:57,789
anyway I'm going to go ahead go to the

2609
02:09:55,369 --> 02:09:57,789
Q&amp;A

2610
02:10:10,868 --> 02:10:16,238
so it doesn't seem to quite line up with

2611
02:10:13,960 --> 02:10:19,090
the near clip plane because if you look

2612
02:10:16,238 --> 02:10:23,500
it's like it's weird the the near clip

2613
02:10:19,090 --> 02:10:26,529
plane is like clipping stuff out oh yeah

2614
02:10:23,500 --> 02:10:28,060
you know why that would be - the reason

2615
02:10:26,529 --> 02:10:32,079
in your clip plane is clipping stuff out

2616
02:10:28,060 --> 02:10:34,780
is actually because the near clip plane

2617
02:10:32,079 --> 02:10:40,710
is going to clip without regard to the Z

2618
02:10:34,779 --> 02:10:40,710
bias so

2619
02:10:46,479 --> 02:10:51,819
that suggests split see here or with

2620
02:10:49,390 --> 02:10:54,030
regard to the Z bias I should say so if

2621
02:10:51,819 --> 02:10:56,739
I come in here I'm just curious to see

2622
02:10:54,029 --> 02:11:03,130
how did we actually do this flog a matte

2623
02:10:56,739 --> 02:11:04,750
fog distance is the Z vertex X Y Z so

2624
02:11:03,130 --> 02:11:10,539
the one that modified my scent - the

2625
02:11:04,750 --> 02:11:14,550
flower direction and that's not actually

2626
02:11:10,539 --> 02:11:19,239
the one getting pushed down now that

2627
02:11:14,550 --> 02:11:23,289
that should make us fog out faster

2628
02:11:19,239 --> 02:11:26,439
though so that's a little bit strange to

2629
02:11:23,289 --> 02:11:28,689
me but it does suggest that what we

2630
02:11:26,439 --> 02:11:31,629
really need to do here in terms of near

2631
02:11:28,689 --> 02:11:33,819
far clip plane is we actually need to

2632
02:11:31,630 --> 02:11:36,279
take that near clip plane and bring it

2633
02:11:33,819 --> 02:11:38,949
back in and do something where we leave

2634
02:11:36,279 --> 02:11:42,369
enough of a distance for the bias to

2635
02:11:38,949 --> 02:11:45,279
clear it right so I think we actually

2636
02:11:42,369 --> 02:11:48,010
want to do something here like possibly

2637
02:11:45,279 --> 02:11:50,729
even this much I think we want something

2638
02:11:48,010 --> 02:11:50,730
like this

2639
02:12:12,828 --> 02:12:22,808
we do get some some gunk in there that

2640
02:12:20,238 --> 02:12:22,808
we're getting there

2641
02:12:49,988 --> 02:12:54,099
could you try disabling the

2642
02:12:52,000 --> 02:12:55,840
randomization of the ground tiles II I'm

2643
02:12:54,100 --> 02:12:58,150
interested to see if that'll adversely

2644
02:12:55,840 --> 02:13:01,029
affect the sexiness of the depth peel I

2645
02:12:58,149 --> 02:13:03,609
think it would definitely make the depth

2646
02:13:01,029 --> 02:13:05,649
field less interesting I mean it also

2647
02:13:03,609 --> 02:13:06,609
makes the visuals less interesting you

2648
02:13:05,649 --> 02:13:08,439
know what I mean

2649
02:13:06,609 --> 02:13:10,509
one of the reasons I wanted those uneven

2650
02:13:08,439 --> 02:13:12,519
like those tiles like that is because it

2651
02:13:10,510 --> 02:13:14,079
just looks better and it can it gives

2652
02:13:12,520 --> 02:13:17,860
the player understanding of where the

2653
02:13:14,079 --> 02:13:24,250
tiles are in a nice 3d way instead of

2654
02:13:17,859 --> 02:13:27,609
only making it the about like a tile

2655
02:13:24,250 --> 02:13:31,390
bitmap or something but yeah if you just

2656
02:13:27,609 --> 02:13:37,139
want to see it become less sexy we can

2657
02:13:31,390 --> 02:13:37,140
totally do that by just taking out this

2658
02:13:39,270 --> 02:13:44,850
so now we're just a flat plane there

2659
02:13:44,909 --> 02:13:47,909
right

2660
02:13:55,219 --> 02:14:01,600
well it's still kind of cool honestly

2661
02:14:16,680 --> 02:14:25,250
so it's cooler than I thought it would

2662
02:14:19,289 --> 02:14:25,250
be I guess

2663
02:14:28,229 --> 02:14:35,309
the debug menu is broken now yeah so I

2664
02:14:32,090 --> 02:14:44,850
feel like probably the clip alpha stuff

2665
02:14:35,310 --> 02:14:47,760
is I needs to be not like we need a way

2666
02:14:44,850 --> 02:14:51,200
of turning off the clip alpha because

2667
02:14:47,760 --> 02:14:51,199
the clip alpha is going to zero out the

2668
02:14:51,560 --> 02:14:58,890
stuff in the debug menu so I guess the

2669
02:14:56,760 --> 02:15:00,539
one way to do that would be here is we

2670
02:14:58,890 --> 02:15:05,670
just say like hey the clip alpha

2671
02:15:00,539 --> 02:15:16,979
distance is actually like the flower

2672
02:15:05,670 --> 02:15:19,829
clip plane or something I think that'd

2673
02:15:16,979 --> 02:15:24,209
probably work I don't really know now

2674
02:15:19,829 --> 02:15:26,239
that did not work okay how would we do

2675
02:15:24,210 --> 02:15:26,239
that

2676
02:15:30,050 --> 02:15:41,570
um I feel like that should have worked

2677
02:15:33,859 --> 02:15:43,789
okay I guess I don't technically know

2678
02:15:41,569 --> 02:15:51,408
that it's that either so I should just

2679
02:15:43,789 --> 02:15:55,029
double-check so here's without that yeah

2680
02:15:51,408 --> 02:15:58,069
and that's so it is the clip alpha that

2681
02:15:55,029 --> 02:16:00,529
that creates the problem so you want

2682
02:15:58,069 --> 02:16:02,710
this to clip to one point oh right I set

2683
02:16:00,529 --> 02:16:08,269
it the wrong way sorry it needs to be

2684
02:16:02,710 --> 02:16:10,520
the near clip plane so it needs to be

2685
02:16:08,270 --> 02:16:16,849
like near clip plane you know -

2686
02:16:10,520 --> 02:16:19,040
something because you always want

2687
02:16:16,849 --> 02:16:23,119
everything that's drawn to be like in

2688
02:16:19,039 --> 02:16:25,238
front of the end you know so there you

2689
02:16:23,118 --> 02:16:25,238
go

2690
02:16:29,829 --> 02:16:33,909
pragma script says for depth feeling

2691
02:16:32,200 --> 02:16:36,159
would it be possible to discard all

2692
02:16:33,909 --> 02:16:40,379
pixels in the second layer that have an

2693
02:16:36,159 --> 02:16:42,489
alpha value of 255 in in the front layer

2694
02:16:40,379 --> 02:16:47,529
because they are not interesting for the

2695
02:16:42,489 --> 02:16:50,049
composition anyway yes we absolutely

2696
02:16:47,530 --> 02:16:54,719
could if we just wanted to save like

2697
02:16:50,049 --> 02:16:54,718
fillrate we could totally do that

2698
02:17:04,689 --> 02:17:16,540
unfortunately I don't really know how

2699
02:17:07,179 --> 02:17:23,679
you would do that without a little bit

2700
02:17:16,540 --> 02:17:25,840
of work so you don't get to use the like

2701
02:17:23,679 --> 02:17:28,329
I guess the question would be how do we

2702
02:17:25,840 --> 02:17:30,189
pipe that alpha value over there though

2703
02:17:28,329 --> 02:17:32,199
because since we're drawing in two

2704
02:17:30,189 --> 02:17:35,619
separate buffers we don't actually have

2705
02:17:32,199 --> 02:17:37,750
the Alpha value of what's in the other

2706
02:17:35,619 --> 02:17:40,290
deaf people before so we'd have to pipe

2707
02:17:37,750 --> 02:17:44,590
that buffer in and actually read from it

2708
02:17:40,290 --> 02:17:46,750
so I worry that the amount of savings

2709
02:17:44,590 --> 02:17:50,199
you would get from not doing the right

2710
02:17:46,750 --> 02:17:53,019
might be offset from having to have a

2711
02:17:50,199 --> 02:18:00,210
whole other texture query happen at

2712
02:17:53,019 --> 02:18:00,210
every pixel so it's not great you know

2713
02:18:00,540 --> 02:18:04,689
so I'm interested to know you can see we

2714
02:18:03,129 --> 02:18:08,170
still get some problems there with the

2715
02:18:04,689 --> 02:18:12,550
death feeling right where you forget

2716
02:18:08,170 --> 02:18:15,549
some black sort of crunchiness there and

2717
02:18:12,549 --> 02:18:17,968
I do wonder if we can improve that

2718
02:18:15,549 --> 02:18:17,968
further

2719
02:18:29,540 --> 02:18:35,120
I think we definitely have some problems

2720
02:18:32,179 --> 02:18:36,590
with the Alpha clip stuff so we need to

2721
02:18:35,120 --> 02:18:38,090
do some work on this probably next

2722
02:18:36,590 --> 02:18:40,340
weekend we'll just do some finishing

2723
02:18:38,090 --> 02:18:41,960
work on these shaders and stuff and try

2724
02:18:40,340 --> 02:18:47,659
to get it really dialed because we still

2725
02:18:41,959 --> 02:18:50,799
got some bugs we still got some some

2726
02:18:47,659 --> 02:18:50,799
definitely some bugs in there

2727
02:19:20,219 --> 02:19:25,590
Alex Calvo I'm behind on day 130 just

2728
02:19:24,149 --> 02:19:27,539
finished the Simbi threat introduction

2729
02:19:25,590 --> 02:19:29,520
what feature of the game eventually

2730
02:19:27,540 --> 02:19:37,830
forced you to use the GPU totally love

2731
02:19:29,520 --> 02:19:39,840
the software rendering I think it's

2732
02:19:37,829 --> 02:19:44,639
because I wanted to do pure I wanted to

2733
02:19:39,840 --> 02:19:47,819
do actual 3d I don't remember to be

2734
02:19:44,639 --> 02:19:49,649
honest we will definitely go back and do

2735
02:19:47,819 --> 02:19:52,140
a software renderer for the final

2736
02:19:49,649 --> 02:19:54,959
version as well so that you can still

2737
02:19:52,140 --> 02:19:57,299
switch between them right so we'll go

2738
02:19:54,959 --> 02:19:58,589
back and do like a def peeling one if

2739
02:19:57,299 --> 02:20:02,399
that turns out to be the final way we

2740
02:19:58,590 --> 02:20:05,370
render we'll do one of those where can

2741
02:20:02,399 --> 02:20:10,560
you go there's nowhere to go there's no

2742
02:20:05,370 --> 02:20:14,221
more stairs stairs to nowhere the bridge

2743
02:20:10,560 --> 02:20:16,890
to nowhere but I don't remember what it

2744
02:20:14,220 --> 02:20:18,239
may have also been a speed issue like we

2745
02:20:16,890 --> 02:20:21,629
may have been like we wanted to do

2746
02:20:18,239 --> 02:20:24,780
something speed wise that we couldn't do

2747
02:20:21,629 --> 02:20:28,920
I don't remember I really couldn't tell

2748
02:20:24,780 --> 02:20:31,641
you somebody probably mid below might

2749
02:20:28,920 --> 02:20:31,640
know better than I do

2750
02:20:43,040 --> 02:20:49,130
but it would be pretty easy to now to do

2751
02:20:45,409 --> 02:20:51,469
a a software rasterizer if we you know

2752
02:20:49,129 --> 02:20:56,809
to if we have it exactly this way in the

2753
02:20:51,469 --> 02:20:59,209
future because you know we know exactly

2754
02:20:56,809 --> 02:21:00,619
what we need to do now and we have

2755
02:20:59,209 --> 02:21:02,719
everything baked down to a pretty good

2756
02:21:00,620 --> 02:21:04,280
process so we could probably you know I

2757
02:21:02,719 --> 02:21:05,809
don't want to do it now because we may

2758
02:21:04,280 --> 02:21:07,220
still change some things about the

2759
02:21:05,809 --> 02:21:12,979
rendering as we go because we're still

2760
02:21:07,219 --> 02:21:14,420
kind of flexible in that way but it's

2761
02:21:12,979 --> 02:21:17,000
the game going to be more 3d gameplay

2762
02:21:14,420 --> 02:21:22,069
wise we planned I know it's still just

2763
02:21:17,000 --> 02:21:26,030
totally 2d so it's not going to change

2764
02:21:22,069 --> 02:21:28,159
gameplay wise at all it just I just feel

2765
02:21:26,030 --> 02:21:29,750
like it plays and feels better when

2766
02:21:28,159 --> 02:21:34,850
things are rendered in 3d for whatever

2767
02:21:29,750 --> 02:21:36,920
reason even with sprites they just feel

2768
02:21:34,850 --> 02:21:39,110
it just feels like a more coherent world

2769
02:21:36,920 --> 02:21:41,870
to me when the camera moves around and

2770
02:21:39,110 --> 02:21:43,989
to get a little bit of that depth you

2771
02:21:41,870 --> 02:21:43,990
know

2772
02:22:31,069 --> 02:22:37,219
and Napoleon yes Jeff feeling is being

2773
02:22:34,579 --> 02:22:41,120
used for objects for order independent

2774
02:22:37,219 --> 02:22:43,849
transparency with the sprites the only

2775
02:22:41,120 --> 02:22:48,579
problem we have right now is we don't

2776
02:22:43,850 --> 02:22:51,440
have a discriminator for depth

2777
02:22:48,579 --> 02:22:53,350
interpenetration so like if two shadows

2778
02:22:51,440 --> 02:22:58,700
are rendered at the exact same layer

2779
02:22:53,350 --> 02:23:04,190
exact same Z and they overlap you get a

2780
02:22:58,700 --> 02:23:06,050
problem you get a bug so we I don't know

2781
02:23:04,190 --> 02:23:07,909
what we want to do about that in the

2782
02:23:06,049 --> 02:23:09,289
future like I don't know how we want to

2783
02:23:07,909 --> 02:23:14,090
approach eliminating some of the

2784
02:23:09,290 --> 02:23:15,350
artifacting they're probably not

2785
02:23:14,090 --> 02:23:17,450
something I care about right now like

2786
02:23:15,350 --> 02:23:19,760
everything looks good enough right now

2787
02:23:17,450 --> 02:23:23,090
that I'm like okay we can put the real

2788
02:23:19,760 --> 02:23:25,430
art in here we can get the game all good

2789
02:23:23,090 --> 02:23:28,010
and like playable and fun and all that

2790
02:23:25,430 --> 02:23:29,479
stuff and then at the end we can go back

2791
02:23:28,010 --> 02:23:32,059
and go alright how are we going to iron

2792
02:23:29,479 --> 02:23:34,209
out the last few this view bugs and so

2793
02:23:32,059 --> 02:23:34,209
on

2794
02:23:44,379 --> 02:23:48,909
can you go into more detail on what

2795
02:23:46,420 --> 02:23:50,771
fixed layers two and three from being

2796
02:23:48,909 --> 02:23:52,119
all black it wasn't an old card only

2797
02:23:50,771 --> 02:23:54,790
being able to read two textures but I

2798
02:23:52,120 --> 02:23:55,990
missed the extras yes so sorry about

2799
02:23:54,790 --> 02:23:57,400
that I didn't really explain it for you

2800
02:23:55,989 --> 02:24:00,399
at the time because kind of a well known

2801
02:23:57,399 --> 02:24:03,310
bug amongst people who program OpenGL

2802
02:24:00,399 --> 02:24:04,920
they're just like yep that it's that one

2803
02:24:03,310 --> 02:24:10,989
again

2804
02:24:04,920 --> 02:24:14,649
by default when OpenGL starts up I it

2805
02:24:10,989 --> 02:24:18,101
assumes that textures arm it mapped it

2806
02:24:14,649 --> 02:24:20,529
assumes that they're map mapped so even

2807
02:24:18,101 --> 02:24:22,601
if a texture has never had any myth

2808
02:24:20,530 --> 02:24:25,721
level specified and we'll never have any

2809
02:24:22,601 --> 02:24:28,590
nip level specified OpenGL considers it

2810
02:24:25,720 --> 02:24:31,539
myth mapped until you tell it otherwise

2811
02:24:28,590 --> 02:24:34,210
what this means is that if the texture

2812
02:24:31,540 --> 02:24:36,070
ever gets sampled in a way that it

2813
02:24:34,209 --> 02:24:37,959
thinks it needs to sample from one of

2814
02:24:36,069 --> 02:24:40,959
the MIT maps of the texture instead of

2815
02:24:37,959 --> 02:24:43,629
the actual texture you will just get

2816
02:24:40,959 --> 02:24:45,909
black samples because there are no MIT

2817
02:24:43,629 --> 02:24:48,939
maps to the texture so basically we've

2818
02:24:45,909 --> 02:24:51,640
only specified one myth level myth level

2819
02:24:48,940 --> 02:24:54,489
zero or rather no myth levels the base

2820
02:24:51,640 --> 02:24:55,810
texture right it hasn't been missed down

2821
02:24:54,489 --> 02:24:59,470
so depending on how you want to use the

2822
02:24:55,810 --> 02:25:01,720
terminology level zero is the only zero

2823
02:24:59,470 --> 02:25:03,761
that's present so if the card ever wants

2824
02:25:01,720 --> 02:25:06,039
a sample from level one for some reason

2825
02:25:03,761 --> 02:25:09,880
it would get nothing because there's no

2826
02:25:06,040 --> 02:25:12,011
data there now the reason I didn't

2827
02:25:09,879 --> 02:25:13,779
suspect that right away is because I

2828
02:25:12,011 --> 02:25:15,460
would have assumed all the peels were at

2829
02:25:13,780 --> 02:25:18,550
the same nip level but apparently that's

2830
02:25:15,459 --> 02:25:20,289
not true for some reason and either that

2831
02:25:18,549 --> 02:25:22,119
reason is because there's some weird bug

2832
02:25:20,290 --> 02:25:26,380
going on in the driver or I don't know

2833
02:25:22,120 --> 02:25:27,940
what or somehow the fact that we wanted

2834
02:25:26,379 --> 02:25:30,760
no myth that we want to turn this

2835
02:25:27,940 --> 02:25:32,920
mapping off got set on text the first

2836
02:25:30,761 --> 02:25:34,239
two textures and not on the third and

2837
02:25:32,920 --> 02:25:40,601
fourth for some reason I don't know how

2838
02:25:34,239 --> 02:25:43,181
that could be possible either but yeah I

2839
02:25:40,601 --> 02:25:47,590
don't know so basically what I would say

2840
02:25:43,181 --> 02:25:49,750
is right now I couldn't tell you why

2841
02:25:47,590 --> 02:25:51,431
only two and three we're doing that but

2842
02:25:49,750 --> 02:25:56,021
I can tell you that what fixed it was

2843
02:25:51,431 --> 02:25:57,069
turning off the myth mapping so it seems

2844
02:25:56,021 --> 02:25:59,229
like it

2845
02:25:57,068 --> 02:26:01,028
some kind of a weird bug there in terms

2846
02:25:59,228 --> 02:26:02,738
of like thinking it was associated about

2847
02:26:01,029 --> 02:26:04,238
it shouldn't have thought it was

2848
02:26:02,738 --> 02:26:05,549
supposed example from the map so that's

2849
02:26:04,238 --> 02:26:08,288
weird too

2850
02:26:05,549 --> 02:26:18,969
because we are sampling basically

2851
02:26:08,289 --> 02:26:20,979
one-to-one so I really don't know but

2852
02:26:18,969 --> 02:26:23,799
that's what fixed it is turning off the

2853
02:26:20,978 --> 02:26:26,878
mid mapping and the way that we did that

2854
02:26:23,799 --> 02:26:29,738
was just setting the filter to GL linear

2855
02:26:26,879 --> 02:26:34,979
because it defaults to MIT map linear

2856
02:26:29,738 --> 02:26:34,978
MIT MIT linear textile linear right

2857
02:26:51,370 --> 02:26:57,229
do you actually have to have wireframe

2858
02:26:54,649 --> 02:27:03,140
models to be considered two and a half D

2859
02:26:57,229 --> 02:27:08,569
or would this count as well so two and a

2860
02:27:03,140 --> 02:27:10,280
half D I would say that that is not a

2861
02:27:08,569 --> 02:27:13,161
really well defined term in the industry

2862
02:27:10,281 --> 02:27:15,110
honestly but I would suspect that yes

2863
02:27:13,161 --> 02:27:18,440
this is two and a half D because there

2864
02:27:15,110 --> 02:27:20,781
are actual 3d objects in here and

2865
02:27:18,440 --> 02:27:24,591
everything is actually placed in 3d for

2866
02:27:20,781 --> 02:27:26,480
real so that's basically what two and a

2867
02:27:24,591 --> 02:27:28,101
half D is I think like two and a half C

2868
02:27:26,479 --> 02:27:30,171
is basically saying some things are 3d

2869
02:27:28,101 --> 02:27:33,261
some things are 2d is typically how I

2870
02:27:30,171 --> 02:27:35,390
interpret that phrase you know like doom

2871
02:27:33,261 --> 02:27:38,479
or something would be two and a half D

2872
02:27:35,390 --> 02:27:40,850
potentially right it does some things in

2873
02:27:38,479 --> 02:27:43,220
a 3d way and some things in a 2d way and

2874
02:27:40,851 --> 02:27:45,650
off you go even quake could be

2875
02:27:43,220 --> 02:27:47,180
considered to an after you in a sense a

2876
02:27:45,649 --> 02:27:49,550
weight Note could because they Denver

2877
02:27:47,181 --> 02:27:51,171
they they did full 3d and quake so is

2878
02:27:49,550 --> 02:27:52,430
there a two and a half D game like quake

2879
02:27:51,171 --> 02:27:56,271
traveling if there is a game that

2880
02:27:52,431 --> 02:27:58,761
rendered environments in 3d and the

2881
02:27:56,271 --> 02:28:00,320
sprites in 2d it probably was a few of

2882
02:27:58,761 --> 02:28:02,181
those but I can't think of them offhand

2883
02:28:00,319 --> 02:28:03,440
so there's a bunch of two and a half

2884
02:28:02,181 --> 02:28:04,881
these sorts of things like that and I

2885
02:28:03,440 --> 02:28:06,501
suspect we would follow that category

2886
02:28:04,880 --> 02:28:08,740
but I don't know it's not a real precise

2887
02:28:06,501 --> 02:28:08,740
term

2888
02:28:27,431 --> 02:28:35,120
you can refine your own render

2889
02:28:30,079 --> 02:28:40,880
definition for handmade hero or for

2890
02:28:35,120 --> 02:28:42,650
handmade development uh yeah I guess

2891
02:28:40,880 --> 02:28:45,350
what I would say is I don't know that

2892
02:28:42,649 --> 02:28:49,819
it's a really useful thing to categorize

2893
02:28:45,351 --> 02:28:51,980
stuff as anyway I mean this is a 3d

2894
02:28:49,819 --> 02:28:54,011
renderer it renders things in 3d some of

2895
02:28:51,979 --> 02:28:56,600
those things happen to sprite cards but

2896
02:28:54,011 --> 02:28:59,540
that's true in almost all 3d renders

2897
02:28:56,601 --> 02:29:02,870
like even fully the most 3d thing you

2898
02:28:59,540 --> 02:29:04,730
like battlefields 1 or whatever the most

2899
02:29:02,870 --> 02:29:06,891
recent like fancy graphics thing you've

2900
02:29:04,729 --> 02:29:08,989
seen probably uses sprite cards

2901
02:29:06,890 --> 02:29:09,770
somewhere for like particle systems or

2902
02:29:08,989 --> 02:29:12,319
something right

2903
02:29:09,771 --> 02:29:13,761
so I feel like really handmade hero for

2904
02:29:12,319 --> 02:29:15,890
all intensive purposes point is a 3d

2905
02:29:13,761 --> 02:29:17,569
game right and it's a free D game that

2906
02:29:15,890 --> 02:29:21,170
uses 2d sprite graphics in a bunch of

2907
02:29:17,569 --> 02:29:23,000
places but it's basically all 3d so I

2908
02:29:21,170 --> 02:29:24,920
don't even know did it make the

2909
02:29:23,000 --> 02:29:26,750
difference two and a half D 3d I don't

2910
02:29:24,920 --> 02:29:28,640
know two and a half D might be better

2911
02:29:26,750 --> 02:29:31,399
reserved for things like doom where you

2912
02:29:28,640 --> 02:29:35,050
can't rotate the camera like we can

2913
02:29:31,399 --> 02:29:35,050
rotate our camera right

2914
02:29:46,760 --> 02:29:53,101
Alex Kelbo is the floor below us being

2915
02:29:51,060 --> 02:29:56,670
drawn completely and the one we are on

2916
02:29:53,101 --> 02:29:58,771
top of and the one we were on on top of

2917
02:29:56,670 --> 02:30:00,239
it or is the one below being clipped so

2918
02:29:58,771 --> 02:30:05,880
that only the pixels we see through the

2919
02:30:00,239 --> 02:30:09,000
holes are drawn um so right now we do

2920
02:30:05,879 --> 02:30:13,140
not do anything to try and do clipping

2921
02:30:09,000 --> 02:30:17,540
two holes so the whole bottom floor is

2922
02:30:13,140 --> 02:30:22,739
being rendered and my you know

2923
02:30:17,540 --> 02:30:24,870
assumption is that we will never really

2924
02:30:22,739 --> 02:30:28,110
have a fill rate problem on handmade

2925
02:30:24,870 --> 02:30:30,030
here oh and maybe you know if we do have

2926
02:30:28,110 --> 02:30:31,351
a fill rate problem my anticipation is

2927
02:30:30,030 --> 02:30:34,141
it's going to come from something like a

2928
02:30:31,351 --> 02:30:35,460
orgy of particle effects which we won't

2929
02:30:34,140 --> 02:30:37,319
want to address in a different way

2930
02:30:35,459 --> 02:30:40,049
anyway that wouldn't have a lot to do

2931
02:30:37,319 --> 02:30:41,760
with layer clipping like that because

2932
02:30:40,049 --> 02:30:43,350
we're just not going to be stressing the

2933
02:30:41,760 --> 02:30:46,920
filler into the cards that much I don't

2934
02:30:43,351 --> 02:30:49,260
think even this old card is not really

2935
02:30:46,920 --> 02:30:55,140
caring about the fact that we're over

2936
02:30:49,260 --> 02:30:57,719
filling the screen four times and four

2937
02:30:55,140 --> 02:31:00,859
times times 4 times basically right like

2938
02:30:57,719 --> 02:31:02,909
16 times and it's just like whatever

2939
02:31:00,860 --> 02:31:04,500
so I don't think we're really going to

2940
02:31:02,909 --> 02:31:07,940
stress the fill rate that much unless we

2941
02:31:04,500 --> 02:31:07,940
get a particle system orgy in here

2942
02:31:37,979 --> 02:31:44,100
all right I'm going to wrap up

2943
02:31:56,000 --> 02:31:59,029
all right thank you everyone for joining

2944
02:31:57,648 --> 02:32:00,318
me for them sort of handmade here oh

2945
02:31:59,029 --> 02:32:02,300
it's been a pleasure coding with you as

2946
02:32:00,318 --> 02:32:03,738
always if you want to file long series

2947
02:32:02,299 --> 02:32:05,449
at home you can always peer to the game

2948
02:32:03,738 --> 02:32:06,648
on handmade hero org and it comes a

2949
02:32:05,450 --> 02:32:08,720
little source code so you can play

2950
02:32:06,648 --> 02:32:10,189
around with it we also have a forum site

2951
02:32:08,719 --> 02:32:12,139
you can go to if you want to ask

2952
02:32:10,189 --> 02:32:13,479
questions we have a patreon page if you

2953
02:32:12,139 --> 02:32:15,469
want to support the video series

2954
02:32:13,478 --> 02:32:16,818
schedule bot if you want to know when

2955
02:32:15,469 --> 02:32:19,639
we're going to be live and an episode

2956
02:32:16,818 --> 02:32:22,309
guide which you can go to if you want to

2957
02:32:19,639 --> 02:32:25,159
catch up on old episodes that's about it

2958
02:32:22,309 --> 02:32:26,988
for this week I don't remember what

2959
02:32:25,159 --> 02:32:30,469
schedule is for next week but check the

2960
02:32:26,988 --> 02:32:32,449
schedule bot I'll post it Friday we will

2961
02:32:30,469 --> 02:32:34,879
basically just do some cleanup next week

2962
02:32:32,450 --> 02:32:37,040
and then I think we are on to art

2963
02:32:34,879 --> 02:32:38,299
integration so I think we'll start

2964
02:32:37,040 --> 02:32:41,870
working on how we're going to plan to

2965
02:32:38,299 --> 02:32:44,898
get the new art in here because we kind

2966
02:32:41,870 --> 02:32:46,700
of have like everything penciled in the

2967
02:32:44,898 --> 02:32:48,170
camera works just fine you know we got a

2968
02:32:46,700 --> 02:32:50,149
plenty of work to do to improve it and

2969
02:32:48,170 --> 02:32:51,290
all that stuff but everything works

2970
02:32:50,148 --> 02:32:55,159
pretty good so I think at this point

2971
02:32:51,290 --> 02:32:57,770
you'll I start building out you know

2972
02:32:55,159 --> 02:32:59,238
actual game looking stuff and starting

2973
02:32:57,770 --> 02:33:00,560
to see like what we're missing you know

2974
02:32:59,238 --> 02:33:02,059
basically feel like you know what do we

2975
02:33:00,559 --> 02:33:04,850
need to improve in the engine that's

2976
02:33:02,059 --> 02:33:11,869
based on just actual stuff that we're

2977
02:33:04,850 --> 02:33:14,450
doing so hopefully you know hopefully we

2978
02:33:11,870 --> 02:33:16,910
will find that we've done a good job

2979
02:33:14,450 --> 02:33:18,649
giving ourselves a tool kit for for

2980
02:33:16,909 --> 02:33:20,689
putting the game together and those

2981
02:33:18,648 --> 02:33:23,238
things that we haven't built yet we can

2982
02:33:20,689 --> 02:33:24,170
find good ways to build that's about it

2983
02:33:23,238 --> 02:33:26,180
for this week

2984
02:33:24,170 --> 02:33:27,680
I will catch everyone next week until

2985
02:33:26,180 --> 02:33:28,880
then have fun programming and I'll see

2986
02:33:27,680 --> 02:33:31,720
everyone on the Internet

2987
02:33:28,879 --> 02:33:31,719
techies everyone

