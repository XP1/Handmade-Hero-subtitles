1
00:00:01,550 --> 00:00:05,609
hello everybody and welcome to handmade

2
00:00:03,810 --> 00:00:08,849
heroes show we code a complete game live

3
00:00:05,609 --> 00:00:10,440
on stream we are in the middle of

4
00:00:08,849 --> 00:00:14,429
updating our debug code so I'd like to

5
00:00:10,439 --> 00:00:16,469
get right into that and if if you want

6
00:00:14,429 --> 00:00:18,059
to follow along at home you can of

7
00:00:16,469 --> 00:00:20,759
course pre-order the game on handmade

8
00:00:18,059 --> 00:00:23,219
hero org which if you've done that you

9
00:00:20,760 --> 00:00:24,600
want to download a 248 source code

10
00:00:23,219 --> 00:00:29,428
because that's what I'm starting with

11
00:00:24,600 --> 00:00:31,019
today all right moving on let's see

12
00:00:29,428 --> 00:00:32,609
where we left off if I remember

13
00:00:31,018 --> 00:00:34,530
correctly there was something that I

14
00:00:32,609 --> 00:00:36,299
kind of want to do at the end of last

15
00:00:34,530 --> 00:00:38,460
stream and I put a little to-do in there

16
00:00:36,299 --> 00:00:40,229
for us so maybe that's actually the

17
00:00:38,460 --> 00:00:41,939
first thing that we'll do but let's just

18
00:00:40,229 --> 00:00:43,949
mention where we left off we were kind

19
00:00:41,939 --> 00:00:45,599
of starting to try and finish this stuff

20
00:00:43,950 --> 00:00:48,359
up and I found it was kind of in a state

21
00:00:45,600 --> 00:00:51,420
that was actually relatively usable so

22
00:00:48,359 --> 00:00:54,628
we're able to sort of go in here and and

23
00:00:51,420 --> 00:00:55,739
use this to create various systems but

24
00:00:54,628 --> 00:00:58,259
there's a couple of things we had to

25
00:00:55,738 --> 00:01:00,299
kind of clean up first of all we get

26
00:00:58,259 --> 00:01:01,619
this weird thing where all names are

27
00:01:00,299 --> 00:01:03,718
always forced through the hierarchy

28
00:01:01,619 --> 00:01:05,489
system so it creates these dummy nodes

29
00:01:03,719 --> 00:01:08,700
for things even if we didn't actually

30
00:01:05,489 --> 00:01:11,728
necessarily want that of course in this

31
00:01:08,700 --> 00:01:13,650
case we kind of do want that and so we

32
00:01:11,728 --> 00:01:15,900
have to kind of decide how we want those

33
00:01:13,650 --> 00:01:18,330
to go do we want to just always have

34
00:01:15,900 --> 00:01:20,070
data blocks for that purpose or how do

35
00:01:18,329 --> 00:01:21,658
we want to do it so we got that other

36
00:01:20,069 --> 00:01:23,429
thing we want to do is turn back on the

37
00:01:21,659 --> 00:01:25,590
profiling and make the profiling more

38
00:01:23,430 --> 00:01:26,729
usable since we're recording profile

39
00:01:25,590 --> 00:01:29,009
information but right now we're not

40
00:01:26,728 --> 00:01:31,950
really using it for anything and so in

41
00:01:29,009 --> 00:01:34,560
order to do that what I would like to do

42
00:01:31,950 --> 00:01:37,200
is just have a way of adding profilers

43
00:01:34,560 --> 00:01:40,500
into our into our sort of set of things

44
00:01:37,200 --> 00:01:43,079
here and doing that should be relatively

45
00:01:40,500 --> 00:01:45,989
straightforward because since we have a

46
00:01:43,078 --> 00:01:47,938
way of talking about these things so

47
00:01:45,989 --> 00:01:52,259
I'll just go ahead and load up handmade

48
00:01:47,938 --> 00:01:55,849
here I believe what I did was inside

49
00:01:52,259 --> 00:01:58,890
handmade dusty peepee I had a debug

50
00:01:55,849 --> 00:02:00,868
block here and what I want to be able to

51
00:01:58,890 --> 00:02:03,269
do is sort of just say okay whenever we

52
00:02:00,868 --> 00:02:05,280
have like this sort of stuff in like a

53
00:02:03,269 --> 00:02:07,679
debug block like this I want to just be

54
00:02:05,280 --> 00:02:10,560
able to say okay let's create a debug

55
00:02:07,680 --> 00:02:12,629
profile right here let's you know put it

56
00:02:10,560 --> 00:02:13,890
in this debug lock and what I want to do

57
00:02:12,628 --> 00:02:16,289
is just say what function

58
00:02:13,889 --> 00:02:19,679
I'm trying to profile let's let's just

59
00:02:16,289 --> 00:02:22,049
say so this is a time function right

60
00:02:19,680 --> 00:02:23,909
here and so what I'm gonna do is I'm

61
00:02:22,050 --> 00:02:26,969
gonna say hey let's go ahead and get

62
00:02:23,909 --> 00:02:29,879
that time function let's just have game

63
00:02:26,969 --> 00:02:31,889
update and render be timed and putting

64
00:02:29,879 --> 00:02:35,039
this profile so that's what I'd like to

65
00:02:31,889 --> 00:02:36,958
do of course if I compile that it's

66
00:02:35,039 --> 00:02:39,810
gonna be a pretty significant error

67
00:02:36,959 --> 00:02:43,500
because debug profile is not actually we

68
00:02:39,810 --> 00:02:45,300
have we have ever defined so I need to

69
00:02:43,500 --> 00:02:47,389
go into the interface and add the

70
00:02:45,300 --> 00:02:50,250
ability to sort of put that in there and

71
00:02:47,389 --> 00:02:52,229
so I think all that really has to happen

72
00:02:50,250 --> 00:02:53,310
is we just have to mirror exactly the

73
00:02:52,229 --> 00:02:55,709
way that we were doing these other

74
00:02:53,310 --> 00:02:57,120
things so when we say like the bug value

75
00:02:55,709 --> 00:03:01,259
or whatever that's really all we

76
00:02:57,120 --> 00:03:03,150
actually have to do I think so all I

77
00:03:01,259 --> 00:03:05,250
want to do is just have a pound to find

78
00:03:03,150 --> 00:03:06,840
here for debug profile I want to have

79
00:03:05,250 --> 00:03:09,479
the like function name that we're trying

80
00:03:06,840 --> 00:03:12,810
to start at so like where we are on the

81
00:03:09,479 --> 00:03:15,000
on the on the profiling and and so all

82
00:03:12,810 --> 00:03:20,370
that's gonna do is this I think

83
00:03:15,000 --> 00:03:24,150
oops this exact thing so it's literally

84
00:03:20,370 --> 00:03:27,150
just going to record you know this in

85
00:03:24,150 --> 00:03:30,450
here although like I think we'd probably

86
00:03:27,150 --> 00:03:33,030
want well I guess since it's already got

87
00:03:30,449 --> 00:03:35,339
an actual name here I suppose I can just

88
00:03:33,030 --> 00:03:41,060
say hey the function that you're trying

89
00:03:35,340 --> 00:03:41,060
to profile is this function right now I

90
00:03:41,509 --> 00:03:48,269
feel like that's pretty much all that

91
00:03:45,810 --> 00:03:51,479
should have to happen and so we can just

92
00:03:48,269 --> 00:03:53,310
pass here that what I wanted the type to

93
00:03:51,479 --> 00:03:55,679
be was that sort of trace type that we

94
00:03:53,310 --> 00:03:58,920
had right because we've got this this

95
00:03:55,680 --> 00:04:01,230
notion it's an interface we've got this

96
00:03:58,919 --> 00:04:03,569
notion of the counter thread list or

97
00:04:01,229 --> 00:04:05,609
whatever so we can say what we actually

98
00:04:03,569 --> 00:04:07,889
want that to be what I think I might do

99
00:04:05,610 --> 00:04:11,400
here is introduce another type which is

100
00:04:07,889 --> 00:04:14,009
just to say like I'm not gonna say

101
00:04:11,400 --> 00:04:17,269
specifically how I want this thing to be

102
00:04:14,009 --> 00:04:17,269
profile necessarily

103
00:04:18,959 --> 00:04:25,079
well maybe yeah well I don't know let's

104
00:04:22,089 --> 00:04:28,299
let's just say let's rien a belay

105
00:04:25,079 --> 00:04:29,709
counter function list and let's just say

106
00:04:28,300 --> 00:04:32,228
that that's what we want so we want a

107
00:04:29,709 --> 00:04:34,149
counter function list we want to say

108
00:04:32,228 --> 00:04:36,329
that this is the function name that'll

109
00:04:34,149 --> 00:04:38,679
be scoped to and so when we record that

110
00:04:36,329 --> 00:04:40,329
event it will go into the stream and

111
00:04:38,680 --> 00:04:42,879
that will allow us to pick it back up on

112
00:04:40,329 --> 00:04:44,829
the other side when the debug system

113
00:04:42,879 --> 00:04:48,150
encounters it and so when the debug

114
00:04:44,829 --> 00:04:50,800
sister encounters that written in there

115
00:04:48,149 --> 00:04:52,538
then all I need to do is tell it which

116
00:04:50,800 --> 00:04:53,800
is it's going to be in here right so

117
00:04:52,538 --> 00:04:55,538
we're going to come through here and

118
00:04:53,800 --> 00:04:57,579
we're gonna get down to the part where

119
00:04:55,538 --> 00:04:59,740
we you know we're inside a data block or

120
00:04:57,579 --> 00:05:02,528
something like that and we we see it and

121
00:04:59,740 --> 00:05:04,418
we would store that element here once we

122
00:05:02,528 --> 00:05:07,209
store that element inside the data block

123
00:05:04,418 --> 00:05:09,038
we should be able to encounter it when

124
00:05:07,209 --> 00:05:11,588
we are iterating over the elements and

125
00:05:09,038 --> 00:05:14,110
so all we need is something that can

126
00:05:11,588 --> 00:05:16,569
output that function list now I don't

127
00:05:14,110 --> 00:05:18,788
actually think we still have any actual

128
00:05:16,569 --> 00:05:21,069
drawing code for that you can see here

129
00:05:18,788 --> 00:05:25,028
where we've got this kind of like debug

130
00:05:21,069 --> 00:05:33,400
type counter thread list thing I feel

131
00:05:25,028 --> 00:05:36,639
like I feel like this calls debug draw

132
00:05:33,399 --> 00:05:43,109
event always it does not call debug draw

133
00:05:36,639 --> 00:05:45,939
element and so I don't really know I

134
00:05:43,110 --> 00:05:46,330
don't really know if that's a problem or

135
00:05:45,939 --> 00:05:55,610
not

136
00:05:46,329 --> 00:06:00,399
like I don't really know I guess

137
00:05:55,610 --> 00:06:03,680
I guess what I would say about that is

138
00:06:00,399 --> 00:06:07,279
maybe that doesn't really want to be

139
00:06:03,680 --> 00:06:07,579
part of the actual data blocks I don't

140
00:06:07,279 --> 00:06:09,258
know

141
00:06:07,579 --> 00:06:11,688
so the reason that's a little bit

142
00:06:09,259 --> 00:06:13,069
confusing is because we have a notion of

143
00:06:11,689 --> 00:06:15,259
two different things there's debug

144
00:06:13,069 --> 00:06:17,060
elements which can actually exist in

145
00:06:15,259 --> 00:06:18,710
sort of multiple hierarchies we can have

146
00:06:17,060 --> 00:06:20,209
like lots of those and then there's

147
00:06:18,709 --> 00:06:21,258
debug events which are things that came

148
00:06:20,209 --> 00:06:23,959
to the stream and that we're trying to

149
00:06:21,259 --> 00:06:25,699
record and so I think that maybe now

150
00:06:23,959 --> 00:06:27,529
that I think about it actually we may

151
00:06:25,699 --> 00:06:30,408
just want to make that create a debug

152
00:06:27,529 --> 00:06:35,089
element to not actually have it have to

153
00:06:30,408 --> 00:06:36,829
think about data blocks at all right so

154
00:06:35,089 --> 00:06:38,929
like you know when we're running through

155
00:06:36,829 --> 00:06:41,359
here and we see one we could just make

156
00:06:38,930 --> 00:06:42,829
that be its own element right so we do

157
00:06:41,360 --> 00:06:44,870
these these event types and we see the

158
00:06:42,829 --> 00:06:46,639
different kinds PM block and block open

159
00:06:44,870 --> 00:06:50,740
data block close data block we could

160
00:06:46,639 --> 00:06:56,509
just say oh okay when we see debug type

161
00:06:50,740 --> 00:07:00,860
what was that guy's name just like fun

162
00:06:56,509 --> 00:07:05,629
function dude right so counter function

163
00:07:00,860 --> 00:07:11,229
list when we see counter function list

164
00:07:05,629 --> 00:07:13,400
as something that we are going to add

165
00:07:11,228 --> 00:07:15,079
what we could do is say well whatever

166
00:07:13,399 --> 00:07:16,638
that debug element is because we've

167
00:07:15,079 --> 00:07:19,459
already got one for ourselves right

168
00:07:16,639 --> 00:07:20,990
we've already parsed out an element for

169
00:07:19,459 --> 00:07:24,378
ourselves it's this guy right here let's

170
00:07:20,990 --> 00:07:26,960
debug element what we could do is take

171
00:07:24,379 --> 00:07:30,830
that debug element and use that debug

172
00:07:26,959 --> 00:07:33,848
element as the one that creates the

173
00:07:30,829 --> 00:07:36,620
profile that might happen automatically

174
00:07:33,848 --> 00:07:38,088
now that I think about it so I don't

175
00:07:36,620 --> 00:07:41,139
really know that there's all that much

176
00:07:38,088 --> 00:07:41,139
you would have to do here

177
00:07:46,990 --> 00:07:55,150
so I'm going to start by seeing what

178
00:07:49,100 --> 00:07:55,150
that actually does some curious

179
00:08:02,228 --> 00:08:08,240
all right so what did we call that we

180
00:08:05,478 --> 00:08:09,889
called that guy a game update and render

181
00:08:08,240 --> 00:08:11,120
but I don't see him here which is a

182
00:08:09,889 --> 00:08:12,590
little bit odd because I feel like it

183
00:08:11,120 --> 00:08:17,478
should I've created a game update and

184
00:08:12,589 --> 00:08:20,089
render I guess because it's route it

185
00:08:17,478 --> 00:08:21,589
wouldn't that's actually okay so that's

186
00:08:20,089 --> 00:08:24,198
actually true so I suppose what I

187
00:08:21,589 --> 00:08:29,500
actually need to do is I need to

188
00:08:24,199 --> 00:08:29,500
actually do something that fit takes

189
00:08:30,639 --> 00:08:42,229
that does that insertion into the group

190
00:08:33,830 --> 00:08:45,500
so inside here debug CDP so inside here

191
00:08:42,229 --> 00:08:47,209
where I've got my Ellen from event when

192
00:08:45,500 --> 00:08:50,958
we do this sort of thing and we do add

193
00:08:47,208 --> 00:08:55,639
element to group this is the part that I

194
00:08:50,958 --> 00:08:57,379
guess is not really happening right it's

195
00:08:55,639 --> 00:08:59,569
getting a parent group but there isn't a

196
00:08:57,379 --> 00:09:01,039
parent group to get a della meant to

197
00:08:59,570 --> 00:09:07,670
group I want to see what what does that

198
00:09:01,039 --> 00:09:10,909
actually program to do so it shouldn't

199
00:09:07,669 --> 00:09:14,659
turn it the route I must set I want to

200
00:09:10,909 --> 00:09:16,730
set a breakpoint here I think I want to

201
00:09:14,659 --> 00:09:23,088
see what happens when we get this when

202
00:09:16,730 --> 00:09:25,670
they get this dude mark debug value is

203
00:09:23,089 --> 00:09:28,279
that mused anymore either

204
00:09:25,669 --> 00:09:31,278
speaking of cleanup do we need that

205
00:09:28,278 --> 00:09:34,360
still I want to take a look at what

206
00:09:31,278 --> 00:09:37,120
happens if I just get rid of that I

207
00:09:34,360 --> 00:09:40,690
don't think so

208
00:09:37,120 --> 00:09:40,690
so that's going to

209
00:09:42,269 --> 00:09:49,059
all right so yeah I feel like that

210
00:09:46,419 --> 00:09:51,339
should have inserted it but it didn't so

211
00:09:49,059 --> 00:09:53,169
I'm still a little hazy on on why so

212
00:09:51,340 --> 00:09:57,610
what I would like to do is say okay when

213
00:09:53,169 --> 00:09:59,069
we hit this because you'll note right I

214
00:09:57,610 --> 00:10:02,379
mean the reason I say that is because

215
00:09:59,070 --> 00:10:03,760
everyone else gets their stubs and I

216
00:10:02,379 --> 00:10:08,009
guess it's just because it only creates

217
00:10:03,759 --> 00:10:10,689
people in the node it only it only does

218
00:10:08,009 --> 00:10:12,669
the precursor so it only does global

219
00:10:10,690 --> 00:10:15,610
renderer and camera it never does the

220
00:10:12,669 --> 00:10:18,429
final one so for example I guess just to

221
00:10:15,610 --> 00:10:24,100
double-check that my understanding of

222
00:10:18,429 --> 00:10:28,019
that is correct you can kind of see here

223
00:10:24,100 --> 00:10:31,509
if I was to do something like this or

224
00:10:28,019 --> 00:10:33,100
that would it create the foo and my

225
00:10:31,509 --> 00:10:34,450
argument is yes it would create the foo

226
00:10:33,100 --> 00:10:39,129
and it just doesn't create the other

227
00:10:34,450 --> 00:10:41,350
part if that makes sense yeah so it does

228
00:10:39,129 --> 00:10:42,669
actually it so it is actually inserting

229
00:10:41,350 --> 00:10:44,980
it it just doesn't we don't ever

230
00:10:42,669 --> 00:10:46,509
actually see it because we have not

231
00:10:44,980 --> 00:10:50,769
actually done anything with it so I

232
00:10:46,509 --> 00:10:54,370
could do something like this where I say

233
00:10:50,769 --> 00:10:56,409
do you buy profile game I've eaten

234
00:10:54,370 --> 00:10:59,200
render the thing is I need to say where

235
00:10:56,409 --> 00:11:01,990
it's going to go and so I I would need

236
00:10:59,200 --> 00:11:04,780
to sort of expand the call to have some

237
00:11:01,990 --> 00:11:08,080
notion of what the function name was in

238
00:11:04,779 --> 00:11:09,639
addition right because we we need sort

239
00:11:08,080 --> 00:11:11,830
of like where does it go and what the

240
00:11:09,639 --> 00:11:14,230
function name is and so that I suppose

241
00:11:11,830 --> 00:11:17,910
is a good argument for the the data

242
00:11:14,230 --> 00:11:20,259
block that seems like a reasonable idea

243
00:11:17,909 --> 00:11:23,639
and I don't know if we support data

244
00:11:20,259 --> 00:11:23,639
blocks inside data blocks

245
00:11:26,089 --> 00:11:32,329
does anyone know if we support that I

246
00:11:29,328 --> 00:11:32,328
wonder

247
00:11:39,139 --> 00:11:54,149
I'm very curious to know what happens if

248
00:11:49,860 --> 00:11:55,079
we do that really hating the OpenGL

249
00:11:54,149 --> 00:12:02,639
startup time man

250
00:11:55,078 --> 00:12:11,549
it's brutal so it looks like the answer

251
00:12:02,639 --> 00:12:13,110
is no right because there's profile so

252
00:12:11,549 --> 00:12:18,599
it created a data block but it does not

253
00:12:13,110 --> 00:12:19,980
nest it right so I guess what that means

254
00:12:18,600 --> 00:12:22,670
is if you wanted that's that you would

255
00:12:19,980 --> 00:12:22,670
actually have to do that

256
00:12:29,980 --> 00:12:39,560
yeah interesting so I think I'm sort of

257
00:12:36,320 --> 00:12:42,950
getting where this is at now and it just

258
00:12:39,559 --> 00:12:44,689
needs a little it needs a little bit of

259
00:12:42,950 --> 00:12:46,040
a reorientation of its thinking right

260
00:12:44,690 --> 00:12:49,010
because you can kind of see how it just

261
00:12:46,039 --> 00:12:50,870
nothing ever quite works right the way

262
00:12:49,009 --> 00:12:53,000
that we might want it to so I'm going to

263
00:12:50,870 --> 00:12:54,500
stop for one second and just say well

264
00:12:53,000 --> 00:12:56,509
you know what let me finish getting the

265
00:12:54,500 --> 00:12:58,759
let me finish putting the the actual

266
00:12:56,509 --> 00:13:01,159
profile in there first just to have it

267
00:12:58,759 --> 00:13:02,779
displaying something and then I'm gonna

268
00:13:01,159 --> 00:13:05,000
try to focus on cleaning up that

269
00:13:02,779 --> 00:13:08,059
interface a little bit so we know

270
00:13:05,000 --> 00:13:10,460
exactly what we're actually gonna say as

271
00:13:08,059 --> 00:13:13,309
the final debug you know debug interface

272
00:13:10,460 --> 00:13:17,840
that that that all the codes gonna have

273
00:13:13,309 --> 00:13:21,109
to actually use so in theory all I would

274
00:13:17,840 --> 00:13:27,259
really need to do here is is that that

275
00:13:21,110 --> 00:13:31,310
function list that guy has to actually

276
00:13:27,259 --> 00:13:33,529
appear when we do a draw element so we

277
00:13:31,309 --> 00:13:37,209
do a debug draw element call we actually

278
00:13:33,529 --> 00:13:43,459
need to have this occur debug type

279
00:13:37,210 --> 00:13:45,200
counter function list and it would have

280
00:13:43,460 --> 00:13:48,470
to do this so I'm just I'm just gonna

281
00:13:45,200 --> 00:13:50,030
grab this so it's just gonna draw the

282
00:13:48,470 --> 00:13:52,820
exact same thing as the thread list so

283
00:13:50,029 --> 00:13:55,250
it's not really gonna drag draw func the

284
00:13:52,820 --> 00:14:00,910
function list at the moment but you know

285
00:13:55,250 --> 00:14:00,909
that's no biggie so let's see here

286
00:14:03,139 --> 00:14:10,579
I do not see my function list see if I'm

287
00:14:07,938 --> 00:14:13,448
actually oh and it is inside a datablock

288
00:14:10,578 --> 00:14:16,778
there right so technically it has to be

289
00:14:13,448 --> 00:14:16,778
up here

290
00:14:36,539 --> 00:14:43,990
so I do not see it but I don't know why

291
00:14:40,269 --> 00:14:49,449
so I'm gonna check to see whether we

292
00:14:43,990 --> 00:14:50,950
actually is that just because it never

293
00:14:49,450 --> 00:14:54,730
gets stored inside the data block

294
00:14:50,950 --> 00:14:56,530
because of the interception call like if

295
00:14:54,730 --> 00:14:57,730
I take care of that so it gets through

296
00:14:56,529 --> 00:15:09,360
the other one I guess that is what would

297
00:14:57,730 --> 00:15:09,360
add it yeah there it is

298
00:15:09,629 --> 00:15:16,480
all right so okay

299
00:15:14,049 --> 00:15:18,699
so I mean I roughly get how it's all

300
00:15:16,480 --> 00:15:20,470
working now and so now we just have to

301
00:15:18,700 --> 00:15:24,190
decide how to make this this stuff a

302
00:15:20,470 --> 00:15:25,870
little cleaner right because we're sort

303
00:15:24,190 --> 00:15:27,700
of on the cusp of it but it just it

304
00:15:25,870 --> 00:15:30,190
needs to get smushed down it's - it's

305
00:15:27,700 --> 00:15:32,620
just - all over the place at the moment

306
00:15:30,190 --> 00:15:34,740
and that's not gonna I'm not gonna be

307
00:15:32,620 --> 00:15:37,509
happy with that at all

308
00:15:34,740 --> 00:15:40,629
so let's bounce back here and let's just

309
00:15:37,509 --> 00:15:43,179
take a look at the interface stuff real

310
00:15:40,629 --> 00:15:45,580
quick and let's just decide or try to

311
00:15:43,179 --> 00:15:48,370
like play with the actual code that's

312
00:15:45,580 --> 00:15:50,520
being called and say okay if this is all

313
00:15:48,370 --> 00:15:52,060
that we're gonna have right this is

314
00:15:50,519 --> 00:15:54,970
everything's going to go through this

315
00:15:52,059 --> 00:15:57,009
from now on this is what we get how is

316
00:15:54,970 --> 00:15:59,410
this going to work we know we've got our

317
00:15:57,009 --> 00:16:01,240
timed function stuff and that's all fine

318
00:15:59,409 --> 00:16:04,029
so I feel like the time function stuff

319
00:16:01,240 --> 00:16:07,149
doesn't probably need to be touched the

320
00:16:04,029 --> 00:16:09,129
timers are probably okay and so all we

321
00:16:07,149 --> 00:16:10,600
really need to do now is figure out how

322
00:16:09,129 --> 00:16:13,689
to make sure that our data stuff comes

323
00:16:10,600 --> 00:16:16,659
out okay and let's think about how we

324
00:16:13,690 --> 00:16:18,910
want that to work right so if I'm

325
00:16:16,659 --> 00:16:22,209
constructing like a menu thing here that

326
00:16:18,909 --> 00:16:26,889
I want to have happen I probably want to

327
00:16:22,210 --> 00:16:28,540
do something you know where the end data

328
00:16:26,889 --> 00:16:31,929
block maybe the end data block is

329
00:16:28,539 --> 00:16:36,189
actually just implicit right so maybe it

330
00:16:31,929 --> 00:16:38,829
looks something like this right so maybe

331
00:16:36,190 --> 00:16:41,980
we just don't do begin end at the moment

332
00:16:38,830 --> 00:16:43,720
maybe we just do debug data block that's

333
00:16:41,980 --> 00:16:47,690
the data block right

334
00:16:43,720 --> 00:16:50,750
and these debug values

335
00:16:47,690 --> 00:16:52,370
I guess they can just be named these are

336
00:16:50,750 --> 00:16:54,289
just named weird because they used to

337
00:16:52,370 --> 00:16:55,730
have to have the underscores and I think

338
00:16:54,289 --> 00:16:59,169
we want to just say like that's just not

339
00:16:55,730 --> 00:17:05,059
we don't care about that anymore right

340
00:16:59,169 --> 00:17:08,059
and if we want to we could do this right

341
00:17:05,059 --> 00:17:09,859
and now these that that debug data block

342
00:17:08,059 --> 00:17:11,419
would be automatically closed like we

343
00:17:09,859 --> 00:17:13,009
could just make a little struck that had

344
00:17:11,420 --> 00:17:14,870
a constructor destructor pair like we

345
00:17:13,009 --> 00:17:17,959
did for the timed like we did for the

346
00:17:14,869 --> 00:17:19,938
time function so we could do that it's

347
00:17:17,959 --> 00:17:24,140
not the prettiest thing in the world but

348
00:17:19,939 --> 00:17:36,050
it's okay right and same thing if we

349
00:17:24,140 --> 00:17:38,420
want to do here like so and that seems

350
00:17:36,049 --> 00:17:39,889
ok so you know we can't do something

351
00:17:38,420 --> 00:17:41,630
like that and in this case the question

352
00:17:39,890 --> 00:17:43,640
is just how do we want to indicate the

353
00:17:41,630 --> 00:17:45,500
hierarchy do we want to use the

354
00:17:43,640 --> 00:17:47,300
underscores like we were doing before in

355
00:17:45,500 --> 00:17:49,819
this case since the data blocks these

356
00:17:47,299 --> 00:17:51,680
are just straight-up actual names we can

357
00:17:49,819 --> 00:17:53,720
actually just make these V strings

358
00:17:51,680 --> 00:17:55,850
first of all right we could just make

359
00:17:53,720 --> 00:17:57,740
this piece something like that and so

360
00:17:55,849 --> 00:17:59,269
here this way we could use underscores

361
00:17:57,740 --> 00:18:03,099
if we wanted to be able to talk about

362
00:17:59,269 --> 00:18:03,099
things underscores we could use a slash

363
00:18:03,250 --> 00:18:10,069
to sort of do a path like syntax right

364
00:18:07,460 --> 00:18:11,840
so we could do something like this and

365
00:18:10,069 --> 00:18:13,460
then you know we need this sort of debug

366
00:18:11,839 --> 00:18:15,889
pointer ID and the debug pointer ID

367
00:18:13,460 --> 00:18:21,680
thing is again it's just we need some

368
00:18:15,890 --> 00:18:23,300
kind of grids there right - we need

369
00:18:21,680 --> 00:18:25,250
grids so that we can recognize these

370
00:18:23,299 --> 00:18:28,009
data blocks uniquely across multiple

371
00:18:25,250 --> 00:18:30,410
runs of the program and there's two ways

372
00:18:28,009 --> 00:18:33,410
we could do that one way is with this

373
00:18:30,410 --> 00:18:35,150
with this string and the other one is by

374
00:18:33,410 --> 00:18:39,500
using the pointer the reason I'm not

375
00:18:35,150 --> 00:18:42,560
sure about using the string is just

376
00:18:39,500 --> 00:18:45,019
because I may want to talk about

377
00:18:42,559 --> 00:18:47,029
multiple debug blocks that all have the

378
00:18:45,019 --> 00:18:50,059
same name so for example if I'm talking

379
00:18:47,029 --> 00:18:51,859
about an entity I don't know like

380
00:18:50,059 --> 00:18:54,559
there's two different sort of notions of

381
00:18:51,859 --> 00:18:56,209
that and like the selected entity it's

382
00:18:54,559 --> 00:18:58,279
like there's the entity that's selected

383
00:18:56,210 --> 00:19:00,920
right now that I might be talking about

384
00:18:58,279 --> 00:19:03,079
or I might be talking about the

385
00:19:00,920 --> 00:19:04,610
concept of the selected entity and those

386
00:19:03,079 --> 00:19:07,429
are actually like two different things

387
00:19:04,609 --> 00:19:10,429
so I'm not really sure how that shakes

388
00:19:07,430 --> 00:19:12,769
out exactly and I don't know which one

389
00:19:10,430 --> 00:19:15,080
we would want to do I guess

390
00:19:12,769 --> 00:19:18,559
in the interest of making it a little

391
00:19:15,079 --> 00:19:19,519
bit again to reduce the complexity one

392
00:19:18,559 --> 00:19:21,049
way to think about reusing the

393
00:19:19,519 --> 00:19:23,210
complexity would just say well this is

394
00:19:21,049 --> 00:19:25,819
the simpler of the two and it just has

395
00:19:23,210 --> 00:19:27,799
to hash the string right in order to

396
00:19:25,819 --> 00:19:32,419
figure out it just have to use a hash of

397
00:19:27,799 --> 00:19:34,730
the string to look that up and you know

398
00:19:32,420 --> 00:19:37,340
maybe that's the best maybe that's the

399
00:19:34,730 --> 00:19:40,880
best option right that might be the way

400
00:19:37,339 --> 00:19:44,750
to go because again just simplifying

401
00:19:40,880 --> 00:19:47,750
things might be nicer than not so if we

402
00:19:44,750 --> 00:19:49,069
were gonna do it that way that's really

403
00:19:47,750 --> 00:19:50,569
totally simple we can just say there's a

404
00:19:49,069 --> 00:19:52,849
debug dative lock and then everything

405
00:19:50,569 --> 00:19:55,460
that we say after it kind of goes under

406
00:19:52,849 --> 00:19:57,439
it as a hierarchical element and we can

407
00:19:55,460 --> 00:19:59,600
add like slashes and stuff so that it

408
00:19:57,440 --> 00:20:01,610
can you know expand out into something

409
00:19:59,599 --> 00:20:03,669
that we can view easily that seems good

410
00:20:01,609 --> 00:20:06,259
enough debug value seems pretty

411
00:20:03,670 --> 00:20:08,990
reasonable and I don't think we need to

412
00:20:06,259 --> 00:20:11,329
edit that much so I feel like this is a

413
00:20:08,990 --> 00:20:12,890
pretty reasonable way like is there

414
00:20:11,329 --> 00:20:14,509
anything in particular that we would

415
00:20:12,890 --> 00:20:17,480
have been wanting to do that we couldn't

416
00:20:14,509 --> 00:20:18,559
do with that without you know that this

417
00:20:17,480 --> 00:20:20,000
would be a problem for I don't know

418
00:20:18,559 --> 00:20:24,799
let's take a look at what would happen

419
00:20:20,000 --> 00:20:27,440
if I actually want to make this work

420
00:20:24,799 --> 00:20:29,659
without these word names though right if

421
00:20:27,440 --> 00:20:30,980
I was gonna actually have this kind of

422
00:20:29,660 --> 00:20:34,160
come through I would have to do like

423
00:20:30,980 --> 00:20:36,769
okay this is debug renderer camera I

424
00:20:34,160 --> 00:20:40,100
guess is what that is and then I have to

425
00:20:36,769 --> 00:20:42,019
close this debug block and then I'd have

426
00:20:40,099 --> 00:20:49,129
to open another one and say like oh this

427
00:20:42,019 --> 00:20:51,859
is game ground chunks right and then

428
00:20:49,130 --> 00:21:02,330
here I'd have to say like oh this this

429
00:20:51,859 --> 00:21:04,089
data block is a renderer I guess this

430
00:21:02,329 --> 00:21:08,960
isn't

431
00:21:04,089 --> 00:21:15,649
global something like that

432
00:21:08,960 --> 00:21:17,990
I don't really know there's that crown

433
00:21:15,650 --> 00:21:21,820
chunks you can kind of see what I'm

434
00:21:17,990 --> 00:21:30,710
doing here right so there's the renderer

435
00:21:21,819 --> 00:21:32,000
probably would put that up here this way

436
00:21:30,710 --> 00:21:35,870
I can even kind of see it a little bit

437
00:21:32,000 --> 00:21:38,538
clearer right it's like a submenu and

438
00:21:35,869 --> 00:21:56,869
let's see globally I familiar follows

439
00:21:38,538 --> 00:22:05,720
hero so that's in AI and I guess it was

440
00:21:56,869 --> 00:22:15,609
an AI familiar even and this is in

441
00:22:05,720 --> 00:22:15,610
particles and this is in simulation

442
00:22:19,049 --> 00:22:30,659
right that's that's basically what we're

443
00:22:23,130 --> 00:22:33,750
looking at here so yeah so if you assume

444
00:22:30,660 --> 00:22:39,200
that this was like you know if that's

445
00:22:33,750 --> 00:22:42,119
reasonable then we would be you know

446
00:22:39,200 --> 00:22:44,039
that's that's not too bad right I mean

447
00:22:42,119 --> 00:22:46,859
we can we can handle that that's not

448
00:22:44,039 --> 00:22:55,349
that's not too too messy to work with I

449
00:22:46,859 --> 00:22:57,899
think it seems okay so yeah so let's

450
00:22:55,349 --> 00:22:59,609
assume that that's okay if that's okay

451
00:22:57,900 --> 00:23:01,800
then let's just kind of clean up a

452
00:22:59,609 --> 00:23:03,719
little bit of how it's going and I guess

453
00:23:01,799 --> 00:23:10,829
we just need to have a way for that grid

454
00:23:03,720 --> 00:23:14,930
to not be weird right yeah so if we come

455
00:23:10,829 --> 00:23:17,429
back over here for debug data block

456
00:23:14,930 --> 00:23:19,710
here's our begin data block in our end

457
00:23:17,430 --> 00:23:21,330
data block what we need to do here is we

458
00:23:19,710 --> 00:23:24,600
just need to make bound to find debug

459
00:23:21,329 --> 00:23:26,759
data block with the name of the data

460
00:23:24,599 --> 00:23:31,049
block has to basically be an

461
00:23:26,759 --> 00:23:33,059
instantiation of like exactly it has to

462
00:23:31,049 --> 00:23:36,720
do exactly the thing that we were doing

463
00:23:33,059 --> 00:23:38,879
here where we got a new timed block you

464
00:23:36,720 --> 00:23:40,680
can see how we did that it was it was

465
00:23:38,880 --> 00:23:42,570
this sort of thing which unfortunately

466
00:23:40,680 --> 00:23:45,960
means we got to do the ridiculous macro

467
00:23:42,569 --> 00:23:54,179
expansion that I hate thank you so much

468
00:23:45,960 --> 00:23:57,539
C++ for that so if we go back here to to

469
00:23:54,180 --> 00:23:59,009
data block we have to essentially copy

470
00:23:57,539 --> 00:24:04,829
the exact same thing so this is going to

471
00:23:59,009 --> 00:24:10,799
be like debug data block yeah debug data

472
00:24:04,829 --> 00:24:13,769
block although actually no we don't

473
00:24:10,799 --> 00:24:15,299
because you can only open because the

474
00:24:13,769 --> 00:24:16,680
way we're doing it here you only open

475
00:24:15,299 --> 00:24:18,240
one and you've got that you've got to

476
00:24:16,680 --> 00:24:21,690
have the bracket so that it'll close it

477
00:24:18,240 --> 00:24:23,670
when you're done with it so maybe we

478
00:24:21,690 --> 00:24:26,670
don't really have to do that what we

479
00:24:23,670 --> 00:24:28,950
could say is just like since we know

480
00:24:26,670 --> 00:24:30,640
that's the pattern we're using we don't

481
00:24:28,950 --> 00:24:38,519
have to worry about the time

482
00:24:30,640 --> 00:24:42,790
black thing that is potentially

483
00:24:38,519 --> 00:24:54,359
compelling right because so we could

484
00:24:42,789 --> 00:24:54,359
actually do debug datablock like so

485
00:24:57,839 --> 00:25:05,289
something like this and that would

486
00:25:03,549 --> 00:25:08,019
presumably just work because since these

487
00:25:05,289 --> 00:25:10,240
are always at us at the top of a scope

488
00:25:08,019 --> 00:25:12,910
we don't have to worry about you making

489
00:25:10,240 --> 00:25:14,200
that name unique like we did when we did

490
00:25:12,910 --> 00:25:17,170
the time block because we wanted the

491
00:25:14,200 --> 00:25:19,720
time blocks to be able to work inside so

492
00:25:17,170 --> 00:25:23,259
that's maybe what we should do

493
00:25:19,720 --> 00:25:24,610
I just makes the laser on us so here we

494
00:25:23,259 --> 00:25:25,869
would just have a set of beginning to

495
00:25:24,609 --> 00:25:29,500
the block end of a if we just we just

496
00:25:25,869 --> 00:25:31,419
have debug data block I don't know if we

497
00:25:29,500 --> 00:25:32,980
ever did begin array an end array it

498
00:25:31,420 --> 00:25:36,190
looks like that never actually did

499
00:25:32,980 --> 00:25:37,440
anything so I don't actually know if we

500
00:25:36,190 --> 00:25:41,080
were expecting that to do something

501
00:25:37,440 --> 00:25:44,830
maybe we were I don't know but if we

502
00:25:41,079 --> 00:25:46,659
have this for begin data block now then

503
00:25:44,829 --> 00:25:49,210
we just need this data block to actually

504
00:25:46,660 --> 00:25:51,250
do something so that is just going to be

505
00:25:49,210 --> 00:25:56,910
something which automatically opens and

506
00:25:51,250 --> 00:25:56,910
closes it so the constructor

507
00:26:04,839 --> 00:26:12,308
has to do this on end and this on began

508
00:26:12,788 --> 00:26:15,980
oops

509
00:26:13,909 --> 00:26:25,669
except I don't actually want to be a

510
00:26:15,980 --> 00:26:27,079
macro certainly and so I think that is

511
00:26:25,669 --> 00:26:30,919
just through what it should be so debug

512
00:26:27,079 --> 00:26:33,589
data block there's all that stuff so

513
00:26:30,919 --> 00:26:34,879
when we do in an open day to block we

514
00:26:33,589 --> 00:26:36,308
now know what the name is because we

515
00:26:34,878 --> 00:26:39,619
said the name is going to be passed in

516
00:26:36,308 --> 00:26:52,339
so that's easy enough we don't actually

517
00:26:39,619 --> 00:26:53,449
know we don't actually know some of the

518
00:26:52,339 --> 00:26:56,599
rest of this stuff and I guess the

519
00:26:53,450 --> 00:26:58,340
question is since this is in a macro I

520
00:26:56,599 --> 00:27:00,469
also don't know if we need to pass in

521
00:26:58,339 --> 00:27:02,109
some of the other stuff like the grid I

522
00:27:00,470 --> 00:27:05,000
don't think so really

523
00:27:02,109 --> 00:27:07,069
but like we would have to pass in all of

524
00:27:05,000 --> 00:27:08,990
this stuff like right because we'd want

525
00:27:07,069 --> 00:27:11,869
to know the the file and the line number

526
00:27:08,990 --> 00:27:13,788
potentially if that stuff ever gets

527
00:27:11,869 --> 00:27:15,829
saved I don't know if it does I guess it

528
00:27:13,788 --> 00:27:18,950
doesn't really get saved for just a

529
00:27:15,829 --> 00:27:20,538
generic debug event all that happens is

530
00:27:18,950 --> 00:27:24,379
just you get the event type in the block

531
00:27:20,538 --> 00:27:26,058
the unique file count or string stuff I

532
00:27:24,378 --> 00:27:28,939
don't know that we I don't know that we

533
00:27:26,058 --> 00:27:32,349
use that too much in fact I would like

534
00:27:28,940 --> 00:27:36,669
to know a little bit more about that

535
00:27:32,349 --> 00:27:36,668
what does good actually get used for

536
00:27:42,700 --> 00:27:53,169
let's see I can't actually see that

537
00:27:46,038 --> 00:27:57,490
because it's behind my head let's see

538
00:27:53,169 --> 00:27:57,490
do you bag ID from grid

539
00:28:08,529 --> 00:28:15,649
where are we this is an open data block

540
00:28:13,390 --> 00:28:17,570
so if we're an open data block we

541
00:28:15,650 --> 00:28:22,509
basically go through and we try to

542
00:28:17,569 --> 00:28:22,509
determine what the idea is from the grid

543
00:28:25,930 --> 00:28:32,450
so I don't really know like I feel like

544
00:28:30,069 --> 00:28:34,939
again I feel like this could be

545
00:28:32,450 --> 00:28:38,960
simplified down from where it is right

546
00:28:34,940 --> 00:28:41,509
now but I see why that has to be there

547
00:28:38,960 --> 00:28:43,880
right we do need some way of talking

548
00:28:41,509 --> 00:28:46,730
about particular data so unique file

549
00:28:43,880 --> 00:28:50,450
counter string right that sort of means

550
00:28:46,730 --> 00:28:53,059
that for any time you use record debug

551
00:28:50,450 --> 00:28:55,100
event since unique file counter string

552
00:28:53,059 --> 00:28:59,240
is going to be happening where the

553
00:28:55,099 --> 00:29:03,349
record debug event call happened you end

554
00:28:59,240 --> 00:29:06,250
up in a situation where like you can't

555
00:29:03,349 --> 00:29:09,709
actually in fact like in this

556
00:29:06,250 --> 00:29:12,259
circumstance this is just wrong right

557
00:29:09,710 --> 00:29:14,960
because this record debug event won't

558
00:29:12,259 --> 00:29:16,910
actually get a grid from here so you

559
00:29:14,960 --> 00:29:20,059
pretty much always need to have this

560
00:29:16,910 --> 00:29:21,769
pass-through get thread ID is fine event

561
00:29:20,059 --> 00:29:25,279
type is fine ret I see all of these

562
00:29:21,769 --> 00:29:27,529
things are fine event table stuff all of

563
00:29:25,279 --> 00:29:29,210
this stuff seems fine but unique file

564
00:29:27,529 --> 00:29:30,500
counter string I don't think can

565
00:29:29,210 --> 00:29:32,930
actually be there

566
00:29:30,500 --> 00:29:44,750
I think record debug event kind of needs

567
00:29:32,930 --> 00:29:48,799
you to pass that grid in you know I just

568
00:29:44,750 --> 00:29:52,160
feel like that's got to happen that's my

569
00:29:48,799 --> 00:29:54,440
guess anyway and so I don't know what

570
00:29:52,160 --> 00:29:57,620
the best way to do that would be but I

571
00:29:54,440 --> 00:30:00,320
just think that for example when you

572
00:29:57,619 --> 00:30:03,199
call into one of these things like n

573
00:30:00,319 --> 00:30:05,210
block I think it's got a it's got to do

574
00:30:03,200 --> 00:30:07,370
that I feel like that's got to happen

575
00:30:05,210 --> 00:30:09,710
because otherwise these aren't going to

576
00:30:07,369 --> 00:30:13,159
be correct so I don't know if you could

577
00:30:09,710 --> 00:30:16,309
do unique file counter string here like

578
00:30:13,160 --> 00:30:17,900
so what I probably could do is say well

579
00:30:16,309 --> 00:30:20,899
unique file counter string obviously is

580
00:30:17,900 --> 00:30:22,450
going to produce a string so what I

581
00:30:20,900 --> 00:30:36,788
could do is

582
00:30:22,450 --> 00:30:36,788
you know whoever calls timed block here

583
00:30:41,859 --> 00:30:56,359
has to pass that in which isn't my

584
00:30:50,329 --> 00:30:58,038
favorite to say the least right you can

585
00:30:56,359 --> 00:30:58,729
kind of see why I'm not thrilled about

586
00:30:58,038 --> 00:31:00,829
that

587
00:30:58,730 --> 00:31:02,509
what does begin block do it records you

588
00:31:00,829 --> 00:31:03,918
so they both they both record a debug

589
00:31:02,509 --> 00:31:05,919
event and they would end up recording a

590
00:31:03,919 --> 00:31:10,299
debug event with this is the location

591
00:31:05,919 --> 00:31:13,580
you know with that as the grid and

592
00:31:10,298 --> 00:31:15,889
that's just not what you would want so

593
00:31:13,579 --> 00:31:18,678
I'm not sure how to really get around

594
00:31:15,890 --> 00:31:22,929
that correctly and also there seems to

595
00:31:18,679 --> 00:31:22,929
be a pretty big proliferation

596
00:31:29,069 --> 00:31:33,409
of things here as well

597
00:31:44,538 --> 00:31:54,509
so I feel like maybe this should be cut

598
00:31:46,798 --> 00:31:58,168
down a bit and the other thing that

599
00:31:54,509 --> 00:32:00,629
could be plausible here is that if the

600
00:31:58,169 --> 00:32:03,090
time to vlog just remembered what these

601
00:32:00,630 --> 00:32:04,289
were it could remember the file name and

602
00:32:03,089 --> 00:32:08,428
the line number in the block name that

603
00:32:04,288 --> 00:32:10,500
came in here and if it did that then

604
00:32:08,429 --> 00:32:17,700
what it could do is say like oh okay if

605
00:32:10,500 --> 00:32:19,470
those just are stored as part of if

606
00:32:17,700 --> 00:32:22,528
those just come in to the time block

607
00:32:19,470 --> 00:32:36,960
here as part of it then they could be

608
00:32:22,528 --> 00:32:38,640
passed through as the grid yeah yeah so

609
00:32:36,960 --> 00:32:42,600
really what I have to do is untangle the

610
00:32:38,640 --> 00:32:47,009
stuff again not particularly glamorous

611
00:32:42,599 --> 00:32:48,538
but yeah this is why if you ever wonder

612
00:32:47,009 --> 00:32:49,740
why I love meta programming so much it's

613
00:32:48,538 --> 00:32:53,460
because you never have to deal with this

614
00:32:49,740 --> 00:32:56,069
ridiculousness I mean all of this stuff

615
00:32:53,460 --> 00:32:58,470
is completely unnecessary work it's just

616
00:32:56,069 --> 00:32:59,668
because C++ doesn't actually support any

617
00:32:58,470 --> 00:33:02,429
of the features you would actually want

618
00:32:59,669 --> 00:33:04,288
for marking up your code you will note

619
00:33:02,429 --> 00:33:05,580
that John showed the trivial meta

620
00:33:04,288 --> 00:33:06,960
programming example the other night in

621
00:33:05,579 --> 00:33:09,240
his programming language where you can

622
00:33:06,960 --> 00:33:10,740
just say hey if there's the part where

623
00:33:09,240 --> 00:33:12,298
I'm going to profile this function how

624
00:33:10,740 --> 00:33:15,240
about you insert the profiling code at

625
00:33:12,298 --> 00:33:19,079
that location write C++ status committee

626
00:33:15,240 --> 00:33:21,690
30 years hasn't managed it it was too

627
00:33:19,079 --> 00:33:24,538
hard for them but what are you gonna do

628
00:33:21,690 --> 00:33:26,700
all right so anyway working around that

629
00:33:24,538 --> 00:33:29,640
I just got to make it so that this stuff

630
00:33:26,700 --> 00:33:32,278
gets passed through so I think I'll keep

631
00:33:29,640 --> 00:33:33,830
this this notion this grid thing because

632
00:33:32,278 --> 00:33:36,808
it sort of smashes everything together

633
00:33:33,829 --> 00:33:40,139
into one piece which sort of seems like

634
00:33:36,808 --> 00:33:42,599
a good thing I suppose to just only have

635
00:33:40,140 --> 00:33:44,850
to record one pointer to one string and

636
00:33:42,599 --> 00:33:46,769
get all of that information and I also

637
00:33:44,849 --> 00:33:50,668
wonder if perhaps that isn't something

638
00:33:46,769 --> 00:33:52,519
that would be would be something to take

639
00:33:50,669 --> 00:33:54,840
to like the nth degree

640
00:33:52,519 --> 00:33:56,549
like if we know that this is always our

641
00:33:54,839 --> 00:33:58,970
format so we have a

642
00:33:56,549 --> 00:34:02,399
with pound B in there which is the

643
00:33:58,970 --> 00:34:05,370
number and then the block name we could

644
00:34:02,400 --> 00:34:08,700
also say that this is going to be okay

645
00:34:05,369 --> 00:34:11,699
then there's like a colon and after the

646
00:34:08,699 --> 00:34:18,138
colon then we have pound or then we have

647
00:34:11,699 --> 00:34:18,138
the name or something right and name

648
00:34:18,860 --> 00:34:37,139
could also be there like so so if we

649
00:34:34,289 --> 00:34:39,989
were to do that then we could get rid of

650
00:34:37,139 --> 00:34:42,090
block name right and we would only have

651
00:34:39,989 --> 00:34:44,579
like one thing which is just like what's

652
00:34:42,090 --> 00:34:46,350
the name of this thing right and it's

653
00:34:44,579 --> 00:34:50,009
the full name and has everything in it

654
00:34:46,349 --> 00:34:52,289
that you might want stored once and that

655
00:34:50,010 --> 00:34:55,679
way you just have just that one string

656
00:34:52,289 --> 00:34:57,509
pointer you also have so we'd have the

657
00:34:55,679 --> 00:34:59,880
clock the type the core I want to look

658
00:34:57,510 --> 00:35:02,070
at see what an event has in it here

659
00:34:59,880 --> 00:35:04,289
here's to do but I'm at the clock so

660
00:35:02,070 --> 00:35:07,410
this looks like we already had to do to

661
00:35:04,289 --> 00:35:09,358
remove it now we have I guess I'll keep

662
00:35:07,409 --> 00:35:12,949
it named quid just for now because that

663
00:35:09,358 --> 00:35:15,210
way we have less compile errors to fix

664
00:35:12,949 --> 00:35:17,429
so we've got the grid we've got the

665
00:35:15,210 --> 00:35:23,730
thread ID the core index and the type

666
00:35:17,429 --> 00:35:24,868
and so that's 264 's looks like we're a

667
00:35:23,730 --> 00:35:27,030
little unbalanced here you would think

668
00:35:24,869 --> 00:35:32,850
we would want a few more of these but I

669
00:35:27,030 --> 00:35:34,500
guess that's not in the mix right I mean

670
00:35:32,849 --> 00:35:36,929
we're we're missing some stuff here so

671
00:35:34,500 --> 00:35:39,449
that's a little odd but whatever so

672
00:35:36,929 --> 00:35:41,159
anyway this is still relatively small so

673
00:35:39,449 --> 00:35:43,219
that's good this is a little bit too

674
00:35:41,159 --> 00:35:45,989
much of a payload for it I would think

675
00:35:43,219 --> 00:35:48,929
so we probably at some point would want

676
00:35:45,989 --> 00:35:51,000
to make these not be quite so for a post

677
00:35:48,929 --> 00:35:55,139
if we were worried about it but I guess

678
00:35:51,000 --> 00:35:56,400
we're not so anyway this is fine that

679
00:35:55,139 --> 00:35:59,129
should give us all the information we

680
00:35:56,400 --> 00:36:02,160
actually care about and then we'll just

681
00:35:59,130 --> 00:36:06,710
count on parsing it after the fact so I

682
00:36:02,159 --> 00:36:09,368
think that's really all I want to do

683
00:36:06,710 --> 00:36:13,210
that seems reasonable

684
00:36:09,369 --> 00:36:16,838
and so in here the block name no longer

685
00:36:13,210 --> 00:36:18,489
has to get passed in it's just what type

686
00:36:16,838 --> 00:36:20,318
of event you're recording and the grid

687
00:36:18,489 --> 00:36:22,179
that you're recording there that's the

688
00:36:20,318 --> 00:36:23,639
only thing that you need to tell it so

689
00:36:22,179 --> 00:36:26,618
now when you have something like this

690
00:36:23,639 --> 00:36:28,088
that just sort of works actually

691
00:36:26,619 --> 00:36:35,410
shouldn't say grid this is actually just

692
00:36:28,088 --> 00:36:36,909
a name right oh no it is grid so

693
00:36:35,409 --> 00:36:38,409
something like this where you want to do

694
00:36:36,909 --> 00:36:40,449
a frame marker or you do the counter

695
00:36:38,409 --> 00:36:44,318
what you need to do here is just say

696
00:36:40,449 --> 00:36:55,058
like I guess we should call debug grid

697
00:36:44,318 --> 00:36:58,748
or something like this debug bug yeah

698
00:36:55,059 --> 00:37:00,640
not sure about that so in here what we

699
00:36:58,748 --> 00:37:03,028
would want to do is have this maybe be

700
00:37:00,639 --> 00:37:12,098
something that's a little easier to type

701
00:37:03,028 --> 00:37:21,248
so we can call this you know that's a

702
00:37:12,099 --> 00:37:24,190
debug name something like that that's

703
00:37:21,248 --> 00:37:26,199
use anywhere so here I can just say like

704
00:37:24,190 --> 00:37:27,849
record debug event and then I just say

705
00:37:26,199 --> 00:37:31,629
here's the debug name and that would

706
00:37:27,849 --> 00:37:34,869
wrap that up in all of the the niceties

707
00:37:31,630 --> 00:37:37,059
I believe so now we would get you know

708
00:37:34,869 --> 00:37:41,588
like the file name the line number the

709
00:37:37,059 --> 00:37:43,960
block name and then finally the I'm

710
00:37:41,588 --> 00:37:47,349
sorry the counter and then finally the

711
00:37:43,960 --> 00:37:49,929
actual frame marker part so that seems

712
00:37:47,349 --> 00:37:52,229
fine all right so let's pretend that

713
00:37:49,929 --> 00:37:54,578
that's good let's just pretend it's good

714
00:37:52,228 --> 00:37:57,098
I'm not saying it actually is let's

715
00:37:54,579 --> 00:37:59,349
pretend I also don't know what int

716
00:37:57,099 --> 00:38:00,910
counter equals counter is that some kind

717
00:37:59,349 --> 00:38:05,710
of flow-through thing where does the

718
00:38:00,909 --> 00:38:10,288
counter what what what is this what does

719
00:38:05,710 --> 00:38:10,289
this do does anyone know

720
00:38:11,719 --> 00:38:18,419
is that some kind of I don't think that

721
00:38:17,610 --> 00:38:21,840
does anything

722
00:38:18,420 --> 00:38:23,340
I think that's vestigial remain so I

723
00:38:21,840 --> 00:38:27,140
think we're literally just talking about

724
00:38:23,340 --> 00:38:27,140
this now right

725
00:38:32,599 --> 00:38:41,639
does that seem reasonable so the frame

726
00:38:39,570 --> 00:38:43,740
marker is just record this debug event

727
00:38:41,639 --> 00:38:46,679
and set the value to whatever the second

728
00:38:43,739 --> 00:38:48,869
two laps was that's our you know that's

729
00:38:46,679 --> 00:38:50,699
our frame counter and then we've got

730
00:38:48,869 --> 00:38:52,109
this record debug event where this is

731
00:38:50,699 --> 00:38:54,779
the thing that will actually do the work

732
00:38:52,110 --> 00:39:01,710
for us and you know off it goes and

733
00:38:54,780 --> 00:39:03,390
that's all fine and yeah and counter is

734
00:39:01,710 --> 00:39:04,769
just not used in there so I just don't

735
00:39:03,389 --> 00:39:07,049
think that has anything to do with

736
00:39:04,769 --> 00:39:08,880
anything I think we should ignore it so

737
00:39:07,050 --> 00:39:10,830
in here we've got our time to lock our

738
00:39:08,880 --> 00:39:12,510
time blocks like I said are going to be

739
00:39:10,829 --> 00:39:15,329
calling out to this guy right here I'm

740
00:39:12,510 --> 00:39:20,430
gonna move that up so I can actually see

741
00:39:15,329 --> 00:39:21,840
it here well actually I guess it's got

742
00:39:20,429 --> 00:39:24,569
to be below this call the macros so

743
00:39:21,840 --> 00:39:27,780
maybe I won't but anyway in time block

744
00:39:24,570 --> 00:39:29,519
that's gonna have to produce these grids

745
00:39:27,780 --> 00:39:33,090
now because everyone who has a record

746
00:39:29,519 --> 00:39:36,059
debug event now has to pass a debug name

747
00:39:33,090 --> 00:39:39,780
at the end so something like this where

748
00:39:36,059 --> 00:39:41,429
we have the begin block it's not going

749
00:39:39,780 --> 00:39:43,050
to pass this stuff anymore

750
00:39:41,429 --> 00:39:46,440
it's got to just pass the grid in

751
00:39:43,050 --> 00:39:49,890
directly right so any time you do that

752
00:39:46,440 --> 00:39:53,240
it's got to be this that's the only

753
00:39:49,889 --> 00:39:56,279
option and the same thing is true here

754
00:39:53,239 --> 00:40:00,809
so when you do a record debug events I

755
00:39:56,280 --> 00:40:02,160
don't actually know what exactly that's

756
00:40:00,809 --> 00:40:05,940
gonna do but it would have to take a

757
00:40:02,159 --> 00:40:08,730
good as well right so something like

758
00:40:05,940 --> 00:40:10,980
that again not sure what the deal is

759
00:40:08,730 --> 00:40:13,590
with the counter I guess this was

760
00:40:10,980 --> 00:40:17,490
something that we were using before but

761
00:40:13,590 --> 00:40:19,289
I do not know that must have just been a

762
00:40:17,489 --> 00:40:22,379
completely vestigial romaine from back

763
00:40:19,289 --> 00:40:23,440
when we were manually inserting the

764
00:40:22,380 --> 00:40:26,318
slots

765
00:40:23,440 --> 00:40:28,358
because now that we just do the atomic

766
00:40:26,318 --> 00:40:30,639
add to get the the location of this

767
00:40:28,358 --> 00:40:32,949
thing it just doesn't matter

768
00:40:30,639 --> 00:40:34,210
right so that's all there's just a ton

769
00:40:32,949 --> 00:40:35,259
of code I'm glad that we're cleaning

770
00:40:34,210 --> 00:40:36,490
this up because there's a ton of stuff

771
00:40:35,260 --> 00:40:38,950
here that we experimented with that we

772
00:40:36,489 --> 00:40:43,029
just don't need right I mean we just

773
00:40:38,949 --> 00:40:46,449
straight-up don't need it so so yeah so

774
00:40:43,030 --> 00:40:49,269
that's kind of good to know because yeah

775
00:40:46,449 --> 00:40:52,298
none of this stuff is necessary at all

776
00:40:49,269 --> 00:40:55,809
in fact I don't even know why we have

777
00:40:52,298 --> 00:40:57,849
two of these now to some degree because

778
00:40:55,809 --> 00:41:00,010
I mean I guess I can sort of see why we

779
00:40:57,849 --> 00:41:01,809
might want them just to make the

780
00:41:00,010 --> 00:41:03,339
beginning end block thing work properly

781
00:41:01,809 --> 00:41:05,289
but really now all this is going to be

782
00:41:03,338 --> 00:41:07,838
is when you pass the name here it's just

783
00:41:05,289 --> 00:41:09,430
gonna call begin block with debug name

784
00:41:07,838 --> 00:41:12,308
and the name you passed it I mean that's

785
00:41:09,429 --> 00:41:17,529
all it has to do right and the same is

786
00:41:12,309 --> 00:41:20,079
true of this guy really really

787
00:41:17,530 --> 00:41:22,329
straightforward so that kind of cleaned

788
00:41:20,079 --> 00:41:24,210
that up pretty nicely which is which is

789
00:41:22,329 --> 00:41:28,240
kind of cool I'm glad about that

790
00:41:24,210 --> 00:41:31,028
but anyway so now if we get into here if

791
00:41:28,239 --> 00:41:32,649
we get into this bid this here this is a

792
00:41:31,028 --> 00:41:34,690
little bit tougher course now we don't

793
00:41:32,650 --> 00:41:36,789
even have to store counter which is

794
00:41:34,690 --> 00:41:38,950
great because we don't store counter

795
00:41:36,789 --> 00:41:40,750
than this struck now is free right it

796
00:41:38,949 --> 00:41:42,159
doesn't take up any room on the stack if

797
00:41:40,750 --> 00:41:44,409
the optimizer is not smart enough to get

798
00:41:42,159 --> 00:41:46,058
rid of it it's never asked to take up

799
00:41:44,409 --> 00:41:46,449
any room on the stack which is kind of

800
00:41:46,059 --> 00:41:49,690
great

801
00:41:46,449 --> 00:41:51,848
and so now if we've got the time block

802
00:41:49,690 --> 00:41:55,510
stuff here when we do this

803
00:41:51,849 --> 00:41:57,579
initialization of the time block you can

804
00:41:55,510 --> 00:42:00,369
see the stuff that's passing we don't

805
00:41:57,579 --> 00:42:02,650
want to quite do it like this anymore

806
00:42:00,369 --> 00:42:05,588
what we wanted to in sit said is just

807
00:42:02,650 --> 00:42:08,170
say that well whatever our block is that

808
00:42:05,588 --> 00:42:10,929
we were trying to do it just has the

809
00:42:08,170 --> 00:42:12,460
grid and that's it right we don't need

810
00:42:10,929 --> 00:42:16,000
anything else because the only thing we

811
00:42:12,460 --> 00:42:19,650
need to do is call begin block with that

812
00:42:16,000 --> 00:42:23,949
grid that's there is nothing else to do

813
00:42:19,650 --> 00:42:26,318
right I mean that's that's all there is

814
00:42:23,949 --> 00:42:28,929
to it really straightforward so if we

815
00:42:26,318 --> 00:42:31,358
call begin block with that grid we can

816
00:42:28,929 --> 00:42:32,798
eliminate all of this stuff I guess we

817
00:42:31,358 --> 00:42:34,538
got to leave the to-do in there because

818
00:42:32,798 --> 00:42:36,559
we never actually do that we never

819
00:42:34,539 --> 00:42:39,199
actually did the hit count

820
00:42:36,559 --> 00:42:41,028
backing right I don't know if we care

821
00:42:39,199 --> 00:42:44,809
about that or not but we might want to

822
00:42:41,028 --> 00:42:48,380
at some point maybe when we get to the

823
00:42:44,809 --> 00:42:51,349
end of this and then when we do this

824
00:42:48,380 --> 00:42:56,209
this end block here I'm gonna just call

825
00:42:51,349 --> 00:42:58,189
this like a x block like that so that it

826
00:42:56,208 --> 00:43:01,639
can just say okay it's gonna you know

827
00:42:58,188 --> 00:43:03,228
that's gonna be the closing one that we

828
00:43:01,639 --> 00:43:05,150
don't care about it having unique grid

829
00:43:03,228 --> 00:43:06,348
we only care about this one we only care

830
00:43:05,150 --> 00:43:08,420
about the opening having any quit

831
00:43:06,349 --> 00:43:10,039
because that the closing can just refer

832
00:43:08,420 --> 00:43:11,298
back to the opening to know what it's

833
00:43:10,039 --> 00:43:14,209
wid would have been so that's pretty

834
00:43:11,298 --> 00:43:15,889
easy so that's time to lock in a

835
00:43:14,208 --> 00:43:18,169
nutshell there then when we get here

836
00:43:15,889 --> 00:43:21,108
we're like time function and all this

837
00:43:18,170 --> 00:43:22,789
nonsense right now all of this stuff

838
00:43:21,108 --> 00:43:25,068
should be actually really really

839
00:43:22,789 --> 00:43:26,329
straightforward in fact I don't think we

840
00:43:25,068 --> 00:43:28,159
need any of this because now that we

841
00:43:26,329 --> 00:43:29,959
have this function for doing stuff I

842
00:43:28,159 --> 00:43:30,828
feel like we should be able to just say

843
00:43:29,958 --> 00:43:35,208
oh okay

844
00:43:30,829 --> 00:43:43,179
if you're gonna call if you're gonna

845
00:43:35,208 --> 00:43:43,178
call time block or a time function then

846
00:43:44,619 --> 00:43:53,588
then all we need to do is just create

847
00:43:47,420 --> 00:43:53,588
one of these guys right actually

848
00:43:55,710 --> 00:44:04,869
before I say that now I lied so we still

849
00:44:03,219 --> 00:44:06,489
do need it for a number because we need

850
00:44:04,869 --> 00:44:11,309
to append a number on here if we want

851
00:44:06,489 --> 00:44:13,868
multiple of them so not quite a homerun

852
00:44:11,309 --> 00:44:16,569
we've still got to have this ridiculous

853
00:44:13,869 --> 00:44:19,210
macro for no real good reason but what

854
00:44:16,568 --> 00:44:21,400
you gonna do so what we can do here

855
00:44:19,210 --> 00:44:22,990
though is say alright all of the other

856
00:44:21,400 --> 00:44:25,150
stuff with the line and all that stuff

857
00:44:22,989 --> 00:44:27,459
that at least can go away because when

858
00:44:25,150 --> 00:44:30,880
we do this here all we really have to do

859
00:44:27,460 --> 00:44:35,139
is when you call time block and you say

860
00:44:30,880 --> 00:44:39,068
I guess name then what we call through

861
00:44:35,139 --> 00:44:41,139
here is just going to be debug name that

862
00:44:39,068 --> 00:44:43,358
name and similarly with the time

863
00:44:41,139 --> 00:44:46,179
function I think the exact same thing is

864
00:44:43,358 --> 00:44:49,139
what we would do we would just say that

865
00:44:46,179 --> 00:44:53,259
we would have debug name of a function

866
00:44:49,139 --> 00:44:55,989
like so and and then this stuff doesn't

867
00:44:53,260 --> 00:44:58,539
have to happen right and so the same is

868
00:44:55,989 --> 00:45:00,219
true for all of this this all goes away

869
00:44:58,539 --> 00:45:02,230
you don't need the counter of the file

870
00:45:00,219 --> 00:45:05,528
or the line or the block name we're just

871
00:45:02,230 --> 00:45:11,798
passing the grid and and then that's the

872
00:45:05,528 --> 00:45:14,170
end of it so I think that's like well

873
00:45:11,798 --> 00:45:17,920
basically does all the same stuff so no

874
00:45:14,170 --> 00:45:20,619
differences but at least now it's much

875
00:45:17,920 --> 00:45:23,318
much more straightforward and simple so

876
00:45:20,619 --> 00:45:25,240
we don't have you know sort of arbitrary

877
00:45:23,318 --> 00:45:26,619
nonsense happening in there that just

878
00:45:25,239 --> 00:45:32,199
makes things we're complicated for no

879
00:45:26,619 --> 00:45:34,180
reason at all alright so we now have I

880
00:45:32,199 --> 00:45:36,098
think all the stuff we wanted from here

881
00:45:34,179 --> 00:45:38,769
so that's all really good let me give

882
00:45:36,099 --> 00:45:42,519
that a quick compile and fix anything

883
00:45:38,769 --> 00:45:46,809
that's busted a syntax error string so

884
00:45:42,519 --> 00:45:50,250
end block is not happy with my string

885
00:45:46,809 --> 00:45:55,380
for some reason but I'm not sure why

886
00:45:50,250 --> 00:45:55,380
because begin block apparently was fine

887
00:45:55,650 --> 00:46:04,088
so what did I do wrong there begin block

888
00:45:59,829 --> 00:46:07,240
underscore is record debug event it's

889
00:46:04,088 --> 00:46:12,190
this call right here and

890
00:46:07,239 --> 00:46:18,939
that all seems fine end block is pretty

891
00:46:12,190 --> 00:46:28,300
right do it in block I'm not sure I see

892
00:46:18,940 --> 00:46:29,230
the problem let's take a look so in

893
00:46:28,300 --> 00:46:31,900
debug name

894
00:46:29,230 --> 00:46:35,039
we've got unique thought counter string

895
00:46:31,900 --> 00:46:40,720
it basically just passes four strings

896
00:46:35,039 --> 00:46:43,808
right file line counter in name so ABC a

897
00:46:40,719 --> 00:46:47,578
name which is F what we thought and in

898
00:46:43,809 --> 00:46:50,790
fact I guess I could more like this

899
00:46:47,579 --> 00:46:50,789
like so

900
00:46:55,429 --> 00:47:01,389
I don't see the problem here

901
00:47:12,130 --> 00:47:27,519
I don't see the problem to be completely

902
00:47:17,829 --> 00:47:29,789
honest with you so begin block works

903
00:47:27,519 --> 00:47:32,710
fine but that's what we would expect

904
00:47:29,789 --> 00:47:35,380
it's only when we try to actually create

905
00:47:32,710 --> 00:47:39,550
one of those debug names that we are

906
00:47:35,380 --> 00:47:46,660
unhappy OOP that's not what I'm going to

907
00:47:39,550 --> 00:47:48,670
do when it creates that end block it's

908
00:47:46,659 --> 00:47:50,769
unhappy of course it won't show me the

909
00:47:48,670 --> 00:47:51,250
expanded macro so I can't debug it of

910
00:47:50,769 --> 00:47:54,489
course

911
00:47:51,250 --> 00:47:56,260
because that would be way too easy I

912
00:47:54,489 --> 00:47:58,899
could run the preprocessor on it and

913
00:47:56,260 --> 00:48:00,370
just look at what it expanded to or I

914
00:47:58,900 --> 00:48:02,230
can try to work through it here so I'm

915
00:48:00,369 --> 00:48:04,210
gonna pass name in there we're gonna

916
00:48:02,230 --> 00:48:06,250
call a debug name with that string so

917
00:48:04,210 --> 00:48:11,769
it's gonna be passing four strings here

918
00:48:06,250 --> 00:48:21,730
I believe at least that's what I was

919
00:48:11,769 --> 00:48:24,489
hoping it would do and assuming that

920
00:48:21,730 --> 00:48:28,179
file works then that's definitely the

921
00:48:24,489 --> 00:48:32,849
case so I'm not sure what the problem is

922
00:48:28,179 --> 00:48:32,849
with that let's just try this

923
00:48:38,480 --> 00:48:45,690
missing before identifiers pound to find

924
00:48:41,369 --> 00:48:48,890
debug name it should be yeah that should

925
00:48:45,690 --> 00:48:48,889
be that's exactly what we would expect

926
00:48:50,329 --> 00:48:55,980
so it's literally just this one it's

927
00:48:54,269 --> 00:48:57,809
only end lock that's the problem so

928
00:48:55,980 --> 00:49:01,409
debug mean by itself is not a problem

929
00:48:57,809 --> 00:49:03,960
it's only end block that is the problem

930
00:49:01,409 --> 00:49:08,730
and end block is a problem for reasons

931
00:49:03,960 --> 00:49:11,220
that I don't necessarily understand so

932
00:49:08,730 --> 00:49:14,159
let's try just for sake of an argument

933
00:49:11,219 --> 00:49:16,318
let's try expanding this out a few times

934
00:49:14,159 --> 00:49:19,889
to see what actually happens so if I was

935
00:49:16,318 --> 00:49:24,960
to grab this so now instead of calling

936
00:49:19,889 --> 00:49:26,789
in block I'm going to call in block I'm

937
00:49:24,960 --> 00:49:32,900
gonna call em lock underscore and I'm

938
00:49:26,789 --> 00:49:35,099
just gonna pass time to block to it oops

939
00:49:32,900 --> 00:49:37,108
and just make sure I get same error and

940
00:49:35,099 --> 00:49:40,730
I do so n block with the debug name of

941
00:49:37,108 --> 00:49:43,230
time block is a problem for it clearly

942
00:49:40,730 --> 00:49:45,030
so just calling debug name with time

943
00:49:43,230 --> 00:49:48,139
block I'm wondering if that just by

944
00:49:45,030 --> 00:49:48,140
itself is enough

945
00:49:53,840 --> 00:50:04,590
and it looks like the answer is no so if

946
00:50:00,420 --> 00:50:08,849
I don't call through the macro then it's

947
00:50:04,590 --> 00:50:12,360
not a problem if I if I do call through

948
00:50:08,849 --> 00:50:20,759
the macro than it is a problem meaning I

949
00:50:12,360 --> 00:50:23,849
cannot do that for reasons that I am not

950
00:50:20,760 --> 00:50:25,980
sure what they are probably due to the

951
00:50:23,849 --> 00:50:32,759
vagaries of see macro expansion which

952
00:50:25,980 --> 00:50:34,230
are absurd just my guess so what is it

953
00:50:32,760 --> 00:50:36,450
that it doesn't like about that because

954
00:50:34,230 --> 00:50:39,929
it allows me to pass the file just fine

955
00:50:36,449 --> 00:50:42,779
here so is it just the fact that it's a

956
00:50:39,929 --> 00:50:47,669
parameter that's the problem for some

957
00:50:42,780 --> 00:50:50,550
reason I've got a B C and D those all

958
00:50:47,670 --> 00:50:52,710
look relatively straightforward assuming

959
00:50:50,550 --> 00:50:58,100
that D is an actual string which it is

960
00:50:52,710 --> 00:50:58,099
and that should be fine

961
00:51:06,260 --> 00:51:21,869
and passing record debug event that grid

962
00:51:18,750 --> 00:51:24,869
shouldn't have been tricky either so I'm

963
00:51:21,869 --> 00:51:29,338
not sure what the problem is they're not

964
00:51:24,869 --> 00:51:30,990
sure that's a good question I wonder if

965
00:51:29,338 --> 00:51:34,699
I can just be processed this file and

966
00:51:30,989 --> 00:51:37,979
see what it actually expands out to be

967
00:51:34,699 --> 00:51:41,480
that's always a little bit dicey of a

968
00:51:37,980 --> 00:51:50,088
proposition certainly let's take a look

969
00:51:41,480 --> 00:51:50,088
I might as well give a shot so let's see

970
00:51:50,719 --> 00:52:00,469
just I think less is on this machine

971
00:51:53,280 --> 00:52:00,470
less just gonna type it to less groups

972
00:52:03,019 --> 00:52:07,460
and then I'm gonna search for

973
00:52:18,360 --> 00:52:25,870
pre-process to standard out or

974
00:52:20,829 --> 00:52:27,549
pre-process to file so /e should be what

975
00:52:25,869 --> 00:52:29,650
we want and people I send out with no

976
00:52:27,550 --> 00:52:32,950
line directors probably want so slash EP

977
00:52:29,650 --> 00:52:33,579
is probably my best bet would be my

978
00:52:32,949 --> 00:52:39,099
guess

979
00:52:33,579 --> 00:52:43,960
right so if I come in here and do a

980
00:52:39,099 --> 00:52:49,119
slash EP of handmade CPP and I pipe that

981
00:52:43,960 --> 00:52:53,650
to pre-process temp or something in

982
00:52:49,119 --> 00:52:56,289
theory I should get you know again

983
00:52:53,650 --> 00:52:58,420
totally in theory I should get a file

984
00:52:56,289 --> 00:53:01,059
that shows me something of what happened

985
00:52:58,420 --> 00:53:03,220
in the preprocessor Oh fabulous and it

986
00:53:01,059 --> 00:53:05,469
includes all the blank lines of course

987
00:53:03,219 --> 00:53:09,839
well alright it doesn't matter we can

988
00:53:05,469 --> 00:53:11,639
still search for tilde timed lock

989
00:53:09,840 --> 00:53:14,850
presumably

990
00:53:11,639 --> 00:53:14,849
maybe not

991
00:53:20,119 --> 00:53:24,929
kind of need something I guess we need

992
00:53:23,219 --> 00:53:32,369
something that actually will have used

993
00:53:24,929 --> 00:53:34,289
it but shouldn't I see till the time

994
00:53:32,369 --> 00:53:36,239
block I mean shouldn't I be if if it

995
00:53:34,289 --> 00:53:40,730
actually pre processes it shouldn't I be

996
00:53:36,239 --> 00:53:40,729
able to see till the timed block summer

997
00:53:42,530 --> 00:54:03,390
feel like I should it's a bit weird some

998
00:53:59,760 --> 00:54:11,100
see runtime library stuff getting

999
00:54:03,389 --> 00:54:14,779
include it into our our code so like

1000
00:54:11,099 --> 00:54:14,779
it's time to block that in here at all

1001
00:54:15,230 --> 00:54:19,909
it does appear not to be in here at all

1002
00:54:20,030 --> 00:54:23,600
which is kind of odd

1003
00:54:24,519 --> 00:54:32,440
it should not have gotten removed ah yes

1004
00:54:28,929 --> 00:54:34,569
it should have you know why because I

1005
00:54:32,440 --> 00:54:37,210
did not specify the pound defined so all

1006
00:54:34,570 --> 00:54:37,690
of our debug code got removed that's

1007
00:54:37,210 --> 00:54:41,349
fine

1008
00:54:37,690 --> 00:54:45,670
easy enough to fix with a minus D and

1009
00:54:41,349 --> 00:54:48,329
made internal or actually how many

1010
00:54:45,670 --> 00:54:52,230
switches do we need to turn on debugging

1011
00:54:48,329 --> 00:54:57,159
just handmade internal and made internal

1012
00:54:52,230 --> 00:55:01,860
plus one now if I load pre-process now

1013
00:54:57,159 --> 00:55:03,819
we should get to time block there it is

1014
00:55:01,860 --> 00:55:07,019
alright so let's see what we actually

1015
00:55:03,820 --> 00:55:11,730
end up with when we pre process this

1016
00:55:07,019 --> 00:55:11,730
monstrosity I'm going to go ahead and

1017
00:55:12,090 --> 00:55:19,110
make these into separate lines just so

1018
00:55:15,099 --> 00:55:19,110
it's not too heinous to read there we go

1019
00:55:26,039 --> 00:55:42,110
oh wow okay that's kind of funny uh yeah

1020
00:55:39,829 --> 00:55:51,779
okay

1021
00:55:42,110 --> 00:55:56,099
so it looks like it actually inserted

1022
00:55:51,780 --> 00:55:58,920
this after thread ID equals uux and gets

1023
00:55:56,099 --> 00:56:03,000
ready it did event grid equals grid I

1024
00:55:58,920 --> 00:56:05,670
just was too dumb to do like this as a

1025
00:56:03,000 --> 00:56:08,460
separate thing so it just inserted

1026
00:56:05,670 --> 00:56:14,670
yeah it just insert it replaced that

1027
00:56:08,460 --> 00:56:17,849
with the actual grid kind of silly so

1028
00:56:14,670 --> 00:56:22,909
hopefully that's it then which means I

1029
00:56:17,849 --> 00:56:28,829
can just groups switch back to this I

1030
00:56:22,909 --> 00:56:33,569
would think that's that's eliris I like

1031
00:56:28,829 --> 00:56:36,869
that yeah I'm a fan I also think that

1032
00:56:33,570 --> 00:56:38,910
maybe if end block if n lock never

1033
00:56:36,869 --> 00:56:41,819
really cares about what its grid is then

1034
00:56:38,909 --> 00:56:44,279
really it should not need a name so this

1035
00:56:41,820 --> 00:56:47,730
is probably best to just do like you

1036
00:56:44,280 --> 00:56:50,250
know some generic name that we don't

1037
00:56:47,730 --> 00:56:51,990
care about because that way you know

1038
00:56:50,250 --> 00:56:53,340
nobody who actually ever calls end block

1039
00:56:51,989 --> 00:56:55,819
should care if they don't care they

1040
00:56:53,340 --> 00:56:58,920
don't care so you know forget about it

1041
00:56:55,820 --> 00:57:00,390
so that seems reasonable all right so

1042
00:56:58,920 --> 00:57:04,200
that was easy enough and hey you know

1043
00:57:00,389 --> 00:57:07,619
what i should mention something as an

1044
00:57:04,199 --> 00:57:10,409
aside here that is yet another bonus of

1045
00:57:07,619 --> 00:57:12,359
the unity style build like the order we

1046
00:57:10,409 --> 00:57:13,440
call it a single compilation unit build

1047
00:57:12,360 --> 00:57:16,730
i guess whatever you want to call it

1048
00:57:13,440 --> 00:57:19,200
single compilation unit build a scub

1049
00:57:16,730 --> 00:57:20,760
doesn't sound that good but single

1050
00:57:19,199 --> 00:57:22,529
compilation unit build if you want to

1051
00:57:20,760 --> 00:57:24,150
pre-process a file that's all you have

1052
00:57:22,530 --> 00:57:26,280
to do and you can pre-process the whole

1053
00:57:24,150 --> 00:57:27,720
thing normally it can be kind of

1054
00:57:26,280 --> 00:57:29,010
confusing if you want to pre-process a

1055
00:57:27,719 --> 00:57:30,750
file because you have to go figure out

1056
00:57:29,010 --> 00:57:32,400
how it was built in some big build

1057
00:57:30,750 --> 00:57:34,199
system and then just get the pre process

1058
00:57:32,400 --> 00:57:36,780
of that thing or whatever it's kind of

1059
00:57:34,199 --> 00:57:38,279
nice when you know that you can always

1060
00:57:36,780 --> 00:57:39,290
do a separate compile with different

1061
00:57:38,280 --> 00:57:41,720
switches as a pretty tree

1062
00:57:39,289 --> 00:57:45,559
thing to do alright looks like we're at

1063
00:57:41,719 --> 00:57:48,199
time so I'm gonna take a quick look here

1064
00:57:45,559 --> 00:57:50,690
at what we're doing before moving on

1065
00:57:48,199 --> 00:57:54,379
debug ID debug point or ID what is the

1066
00:57:50,690 --> 00:57:58,849
same for debug point or ID debug ID is

1067
00:57:54,380 --> 00:58:03,470
not defined is that true

1068
00:57:58,849 --> 00:58:03,920
it's right there what you complaining

1069
00:58:03,469 --> 00:58:05,149
about

1070
00:58:03,920 --> 00:58:09,280
oh it's you're just complaining about

1071
00:58:05,150 --> 00:58:14,450
something that we did up here probably

1072
00:58:09,280 --> 00:58:16,370
missing semicolon before or so what's

1073
00:58:14,449 --> 00:58:19,269
the problem is it just our data block

1074
00:58:16,369 --> 00:58:23,539
situation yes it is that's just that

1075
00:58:19,269 --> 00:58:25,969
there we go so we haven't done this the

1076
00:58:23,539 --> 00:58:30,139
stuff is not finished yet block name

1077
00:58:25,969 --> 00:58:39,529
unclear data for our time function let's

1078
00:58:30,139 --> 00:58:51,469
take a look at that so time function so

1079
00:58:39,530 --> 00:58:54,230
in time function where is block o so we

1080
00:58:51,469 --> 00:58:58,069
do time block with the name and we wrap

1081
00:58:54,230 --> 00:59:00,380
up the debug name so really this this is

1082
00:58:58,070 --> 00:59:03,280
not supposed to be it should just be

1083
00:59:00,380 --> 00:59:03,280
that right

1084
00:59:07,179 --> 00:59:12,579
and actually I think furthermore it

1085
00:59:09,489 --> 00:59:15,459
probably should just be ya know it cost

1086
00:59:12,579 --> 00:59:18,250
you so it should be that so it's that so

1087
00:59:15,460 --> 00:59:20,710
what's the problem their block name we

1088
00:59:18,250 --> 00:59:28,389
changed it we changed it to grid that's

1089
00:59:20,710 --> 00:59:31,360
so that's it okay so now I guess that's

1090
00:59:28,389 --> 00:59:33,699
about all there is to that these kind of

1091
00:59:31,360 --> 00:59:35,650
have to be fixed up so what I'm going to

1092
00:59:33,699 --> 00:59:39,279
do I guess because I don't really want

1093
00:59:35,650 --> 00:59:44,139
to go too long on that I'm just going to

1094
00:59:39,280 --> 00:59:49,660
go ahead and make our build up at not

1095
00:59:44,139 --> 00:59:56,019
run internal that way we'll still be

1096
00:59:49,659 --> 00:59:59,019
compiling I think all right so wait but

1097
00:59:56,019 --> 01:00:02,110
that's is that because we didn't pound

1098
00:59:59,019 --> 01:00:03,210
to fire those or something begin block

1099
01:00:02,110 --> 01:00:07,329
and block

1100
01:00:03,210 --> 01:00:08,409
where's the data block stuff so it

1101
01:00:07,329 --> 01:00:11,529
should have done this right if you did

1102
01:00:08,409 --> 01:00:13,089
but debug data block ah it's because we

1103
01:00:11,530 --> 01:00:16,540
got rid of these and haven't really done

1104
01:00:13,090 --> 01:00:23,940
anything with them yet okay so we have

1105
01:00:16,539 --> 01:00:23,940
to buck data block and that is that

1106
01:00:29,949 --> 01:00:35,449
let's connect to the Falcons being used

1107
01:00:32,150 --> 01:00:39,820
when in the process alright and platform

1108
01:00:35,449 --> 01:00:39,819
controls this is also a date block here

1109
01:00:45,429 --> 01:00:51,139
alright so I'm going to leave it like

1110
01:00:47,989 --> 01:00:52,879
that for now we should be okay just

1111
01:00:51,139 --> 01:00:55,759
running without made a debug information

1112
01:00:52,880 --> 01:01:04,539
and and then tomorrow we'll pick back up

1113
01:00:55,760 --> 01:01:04,540
and finish that clean up good deal

1114
01:02:00,670 --> 01:02:15,250
looking for cues John is struggling with

1115
01:02:10,039 --> 01:02:15,250
fonts alright

1116
01:02:15,400 --> 01:02:23,500
it can be kind of a chore to install

1117
01:02:17,960 --> 01:02:23,500
fonts on windows sometimes that is true

1118
01:02:25,510 --> 01:02:29,120
one time I could not figure out why a

1119
01:02:27,800 --> 01:02:32,830
font wasn't slowing it turns out you

1120
01:02:29,119 --> 01:02:32,829
cannot install a font from a substance

1121
01:02:42,230 --> 01:02:46,079
keep your Caleb how the heck do you

1122
01:02:44,338 --> 01:02:47,279
quickly get back into some obtuse code

1123
01:02:46,079 --> 01:02:49,349
that you have looked at in six months

1124
01:02:47,280 --> 01:02:51,000
well you saw it's kind of slow going

1125
01:02:49,349 --> 01:03:00,000
right it's like I got a kind of page it

1126
01:02:51,000 --> 01:03:01,500
back in a little bit that's okay there

1127
01:03:00,000 --> 01:03:03,179
isn't much to probably ask questions are

1128
01:03:01,500 --> 01:03:04,710
about the minute like we're at the

1129
01:03:03,179 --> 01:03:06,149
moment it's not a very complicated thing

1130
01:03:04,710 --> 01:03:08,190
so we could just end it early and that

1131
01:03:06,150 --> 01:03:11,880
we ever go watch John which seems like a

1132
01:03:08,190 --> 01:03:13,318
very good idea to me especially if he

1133
01:03:11,880 --> 01:03:16,108
needs to install fonts or something

1134
01:03:13,318 --> 01:03:23,480
maybe someone can help him who knows

1135
01:03:16,108 --> 01:03:23,480
font things Oh in sohbat

1136
01:03:33,039 --> 01:03:49,550
all right so um so I'll go ahead and

1137
01:03:40,489 --> 01:03:50,659
wrap up all right thank you everyone for

1138
01:03:49,550 --> 01:03:52,190
joining me for an episode of handmade

1139
01:03:50,659 --> 01:03:55,159
hero it's been a pleasure coding with

1140
01:03:52,190 --> 01:03:57,079
you as always if you would like to

1141
01:03:55,159 --> 01:03:58,909
follow along the series at home you can

1142
01:03:57,079 --> 01:04:00,409
of course pre-order the game on handmade

1143
01:03:58,909 --> 01:04:02,449
hero dot org and it comes with a source

1144
01:04:00,409 --> 01:04:04,190
code so you can download it and keep up

1145
01:04:02,449 --> 01:04:06,199
to date with what I'm doing and play

1146
01:04:04,190 --> 01:04:07,639
around with it at home we also have a

1147
01:04:06,199 --> 01:04:09,409
forum site you can go to ask questions

1148
01:04:07,639 --> 01:04:10,759
we have a patreon page can you support

1149
01:04:09,409 --> 01:04:13,549
the video serious we have a tweet bot

1150
01:04:10,760 --> 01:04:16,250
you can use to follow the schedule and

1151
01:04:13,550 --> 01:04:17,810
if you would like to use the editor that

1152
01:04:16,250 --> 01:04:19,190
we use here on stream it is actually

1153
01:04:17,809 --> 01:04:20,809
made by someone on the chat it's been

1154
01:04:19,190 --> 01:04:23,059
progress it's in development as we speak

1155
01:04:20,809 --> 01:04:26,539
it's called for coder you can type for

1156
01:04:23,059 --> 01:04:31,190
coder like I did into Google to find it

1157
01:04:26,539 --> 01:04:33,889
and if you pledge to support the project

1158
01:04:31,190 --> 01:04:37,670
you can get a copy early which is what

1159
01:04:33,889 --> 01:04:39,440
I'm using that's it for today john is

1160
01:04:37,670 --> 01:04:42,860
streaming some ji development stuff

1161
01:04:39,440 --> 01:04:44,090
right now so if you would like some more

1162
01:04:42,860 --> 01:04:46,430
programming in your evening I highly

1163
01:04:44,090 --> 01:04:47,660
recommend checking that out and taking a

1164
01:04:46,429 --> 01:04:50,269
look at where he's at with his

1165
01:04:47,659 --> 01:04:52,429
programming language development I will

1166
01:04:50,269 --> 01:04:54,829
be back here tomorrow at 5 p.m. Pacific

1167
01:04:52,429 --> 01:04:57,529
Daylight Time if you would like to see

1168
01:04:54,829 --> 01:04:58,670
us finish up the debug stuff so until

1169
01:04:57,530 --> 01:05:00,019
then have fun programming I'll see you

1170
01:04:58,670 --> 01:05:03,010
guys on the Internet or perhaps on John

1171
01:05:00,019 --> 01:05:03,009
stream take it easy everyone

