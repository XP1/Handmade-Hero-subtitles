1
00:00:01,159 --> 00:00:04,950
hello everyone and welcome to hand made

2
00:00:03,899 --> 00:00:08,820
here oh sure we could a complete-game

3
00:00:04,950 --> 00:00:12,509
live on stream we are gonna be doing

4
00:00:08,820 --> 00:00:13,559
some ray tracing work today we already

5
00:00:12,509 --> 00:00:14,940
know what we're doing because last

6
00:00:13,558 --> 00:00:17,160
weekend we stopped at a point where we

7
00:00:14,939 --> 00:00:18,989
had a couple things left to implement I

8
00:00:17,160 --> 00:00:22,050
would also mention our Kickstarter is

9
00:00:18,989 --> 00:00:26,070
almost done you can actually see there

10
00:00:22,050 --> 00:00:29,699
are like 25 hours left so by the end of

11
00:00:26,070 --> 00:00:31,890
tomorrow stream it will be over and so

12
00:00:29,699 --> 00:00:33,539
it's it's the last chance to get a bunch

13
00:00:31,890 --> 00:00:34,829
of these different versions of the comic

14
00:00:33,539 --> 00:00:38,189
over here so if you're interested in

15
00:00:34,829 --> 00:00:43,379
that check it out you've got exactly one

16
00:00:38,189 --> 00:00:44,820
day left let me just kind of jump back

17
00:00:43,378 --> 00:00:46,979
over to what we were doing here there's

18
00:00:44,820 --> 00:00:50,100
a couple different things we actually

19
00:00:46,979 --> 00:00:54,569
need to do it's fairly complicated this

20
00:00:50,100 --> 00:00:57,090
particular scheme in terms of the number

21
00:00:54,570 --> 00:00:59,009
of steps involved but the actual routine

22
00:00:57,090 --> 00:01:01,680
that does the Ray casting which is the

23
00:00:59,009 --> 00:01:04,469
part we care about is very very simple

24
00:01:01,679 --> 00:01:06,739
and in fact we already wrote that part

25
00:01:04,469 --> 00:01:10,109
if you take a look at the raycast

26
00:01:06,739 --> 00:01:14,399
routine here grid ray cast is the one in

27
00:01:10,109 --> 00:01:16,859
question you can see that you've got you

28
00:01:14,400 --> 00:01:18,600
know a fairly straightforward preamble

29
00:01:16,859 --> 00:01:20,549
that's based on the same as the other

30
00:01:18,599 --> 00:01:22,739
preamble but simpler doesn't have a

31
00:01:20,549 --> 00:01:25,049
stack you can see that it just has a

32
00:01:22,739 --> 00:01:27,329
walk index here it loads from a walk

33
00:01:25,049 --> 00:01:28,920
table which grid nodes to do it then

34
00:01:27,329 --> 00:01:31,408
looks in those grid nodes and tests all

35
00:01:28,920 --> 00:01:36,469
the leaves in those grid nodes it's just

36
00:01:31,409 --> 00:01:39,840
that one nested loop and that's it and

37
00:01:36,469 --> 00:01:46,680
after it's done it goes through and does

38
00:01:39,840 --> 00:01:47,820
the the work of producing the the hit oh

39
00:01:46,680 --> 00:01:49,979
it looks like we didn't quite finish

40
00:01:47,819 --> 00:01:51,599
this actually it looks like we were

41
00:01:49,978 --> 00:01:54,649
still working on how exactly we were

42
00:01:51,599 --> 00:01:54,649
going to do the downshift

43
00:01:59,709 --> 00:02:03,469
yeah no we will avoid doing gameplay

44
00:02:02,120 --> 00:02:06,020
code for as long as possible I hate

45
00:02:03,469 --> 00:02:07,579
gameplay code if we can just work on

46
00:02:06,019 --> 00:02:09,560
engines for the rest of our lives we'll

47
00:02:07,579 --> 00:02:11,750
be very happy

48
00:02:09,560 --> 00:02:17,900
gameplay code is for game designers they

49
00:02:11,750 --> 00:02:19,759
do that I don't like it ideally for me

50
00:02:17,900 --> 00:02:21,260
it's just like you know I can work on

51
00:02:19,759 --> 00:02:22,669
the engine all the time and then there's

52
00:02:21,259 --> 00:02:24,649
somebody who's a good game designer

53
00:02:22,669 --> 00:02:26,750
comes along and does you know whatever

54
00:02:24,650 --> 00:02:28,599
the design is that's their job

55
00:02:26,750 --> 00:02:32,180
games like Cody is incredibly simple

56
00:02:28,599 --> 00:02:35,650
it's much simpler than you know engine

57
00:02:32,180 --> 00:02:37,640
code but design is very hard and it's

58
00:02:35,650 --> 00:02:39,170
has nothing to do with programming

59
00:02:37,639 --> 00:02:40,579
really I mean it does in the sense that

60
00:02:39,169 --> 00:02:45,139
you have to be able to program to do it

61
00:02:40,580 --> 00:02:47,030
but you can't really employ programming

62
00:02:45,139 --> 00:02:48,229
skills to make good design doesn't work

63
00:02:47,030 --> 00:02:49,550
that way design is a different thing

64
00:02:48,229 --> 00:02:51,349
it's a different skill set it's like

65
00:02:49,550 --> 00:02:56,689
being an artist right so it's different

66
00:02:51,349 --> 00:03:02,479
still so good so anyway in terms of this

67
00:02:56,689 --> 00:03:04,879
routine we definitely have some issues

68
00:03:02,479 --> 00:03:06,319
we want to make decisions about now I

69
00:03:04,879 --> 00:03:09,379
guess because we've written most of it

70
00:03:06,319 --> 00:03:13,129
if I compile it here you can see there's

71
00:03:09,379 --> 00:03:16,699
almost nothing left that's not done it's

72
00:03:13,129 --> 00:03:19,789
just this one piece here where we try to

73
00:03:16,699 --> 00:03:21,589
figure out what the normal is so we've

74
00:03:19,789 --> 00:03:23,840
got a couple different ways we can do

75
00:03:21,590 --> 00:03:25,849
that and just to refresh your memory so

76
00:03:23,840 --> 00:03:29,000
coming out of here when we do this

77
00:03:25,849 --> 00:03:31,489
collision detection or I should say ray

78
00:03:29,000 --> 00:03:35,030
intersection what we're gonna have is

79
00:03:31,489 --> 00:03:39,530
for Ray intersection T values so four

80
00:03:35,030 --> 00:03:41,299
places the Ray intersected boxes and I'm

81
00:03:39,530 --> 00:03:43,819
some of them may be nothing they might

82
00:03:41,299 --> 00:03:46,219
be still at infinity so the Ray didn't

83
00:03:43,819 --> 00:03:49,039
hit anything but either way we've got

84
00:03:46,219 --> 00:03:51,949
four of them and when we get down to

85
00:03:49,039 --> 00:03:54,829
here we want to only process the closest

86
00:03:51,949 --> 00:03:56,899
one now if you take a look at this piece

87
00:03:54,830 --> 00:03:59,959
of the routine here what you can see is

88
00:03:56,900 --> 00:04:05,989
that actually what we do is we're taking

89
00:03:59,959 --> 00:04:09,230
a we're taking this particular these

90
00:04:05,989 --> 00:04:11,500
four lanes we are converting them down

91
00:04:09,229 --> 00:04:13,419
into a

92
00:04:11,500 --> 00:04:16,238
that we can test using a single

93
00:04:13,419 --> 00:04:18,789
instruction called min Posie PU 16 which

94
00:04:16,238 --> 00:04:23,199
produces whichever the smallest value is

95
00:04:18,790 --> 00:04:25,920
amongst the things in the Ray like so it

96
00:04:23,199 --> 00:04:29,110
of the four lanes whichever ones tiniest

97
00:04:25,920 --> 00:04:32,740
and then we have a shuffler that we load

98
00:04:29,110 --> 00:04:35,620
from a table that just says look if you

99
00:04:32,740 --> 00:04:39,100
want to take any of the lane values that

100
00:04:35,620 --> 00:04:43,360
you've got so things like the box man or

101
00:04:39,100 --> 00:04:46,750
the box max we can produce a vector

102
00:04:43,360 --> 00:04:48,879
quantity that now has the correct

103
00:04:46,750 --> 00:04:50,620
minimum value so out of the four lanes

104
00:04:48,879 --> 00:04:52,930
whichever one's the one that was the

105
00:04:50,620 --> 00:04:57,189
closest hit we can spam that out to all

106
00:04:52,930 --> 00:04:59,439
four and so we can do that just using a

107
00:04:57,189 --> 00:05:01,779
very simple shuffle you can actually see

108
00:04:59,439 --> 00:05:05,019
us doing this pea chef be here with the

109
00:05:01,779 --> 00:05:07,000
shuffler this leg picks the RF or the G

110
00:05:05,019 --> 00:05:08,889
or the B from the ref hit color based on

111
00:05:07,000 --> 00:05:12,610
whichever one was the closest hit like

112
00:05:08,889 --> 00:05:14,469
that's what that does okay so it's

113
00:05:12,610 --> 00:05:16,990
pretty straightforward what we're doing

114
00:05:14,470 --> 00:05:21,310
there the question is just when do you

115
00:05:16,990 --> 00:05:24,009
do it right so because of the way that

116
00:05:21,310 --> 00:05:25,629
the floating-point unit now works I

117
00:05:24,009 --> 00:05:27,849
shouldn't call it the floating-point

118
00:05:25,629 --> 00:05:30,790
unit because there's two in a sky like

119
00:05:27,850 --> 00:05:32,560
chip but the way that the AL use in

120
00:05:30,790 --> 00:05:34,390
skylake work with floating-point numbers

121
00:05:32,560 --> 00:05:35,829
actually there's more than two depending

122
00:05:34,389 --> 00:05:37,060
on how you want to look at it cuz

123
00:05:35,829 --> 00:05:38,589
there's a divider and stuff but it

124
00:05:37,060 --> 00:05:40,899
doesn't matter that's not a relevant

125
00:05:38,589 --> 00:05:43,799
that's not relevant here the relevant

126
00:05:40,899 --> 00:05:45,579
part is simply to say all of the

127
00:05:43,800 --> 00:05:47,770
floating-point operations that we're

128
00:05:45,579 --> 00:05:50,879
gonna do are four wide there's no way to

129
00:05:47,769 --> 00:05:53,949
do a single floating-point operation

130
00:05:50,879 --> 00:05:55,769
with some other thing unless you're

131
00:05:53,949 --> 00:05:59,439
gonna use like the x87 legacy hardware

132
00:05:55,769 --> 00:06:00,909
so really what you're doing in annex 64

133
00:05:59,439 --> 00:06:02,199
if you're doing a scalar multiply is

134
00:06:00,910 --> 00:06:03,910
you're still using the four-lane

135
00:06:02,199 --> 00:06:05,800
multiply you're just letting it know

136
00:06:03,910 --> 00:06:08,470
that if it wanted to it could like save

137
00:06:05,800 --> 00:06:10,300
power by not doing that right but it's

138
00:06:08,470 --> 00:06:15,310
still in the four-lane it's still using

139
00:06:10,300 --> 00:06:17,978
a register that's for wide so for our

140
00:06:15,310 --> 00:06:21,280
purposes we actually don't ever care if

141
00:06:17,978 --> 00:06:23,709
we do four multiplies or one multiply at

142
00:06:21,279 --> 00:06:25,119
the same time because they cost the same

143
00:06:23,709 --> 00:06:27,399
to us the actual run

144
00:06:25,120 --> 00:06:31,629
time penalty to us will be the same and

145
00:06:27,399 --> 00:06:35,500
so it's our decision when we try to move

146
00:06:31,629 --> 00:06:38,199
things from four wide to single because

147
00:06:35,500 --> 00:06:40,779
it doesn't matter and so we want to pick

148
00:06:38,199 --> 00:06:42,819
that point by whatever will give us the

149
00:06:40,779 --> 00:06:43,719
the best performance right because we

150
00:06:42,819 --> 00:06:46,060
can pick it however we want

151
00:06:43,720 --> 00:06:48,699
we unfortunately do have to do it and

152
00:06:46,060 --> 00:06:50,918
the reason is because we don't have any

153
00:06:48,699 --> 00:06:54,580
way of looking up into our voxel because

154
00:06:50,918 --> 00:06:56,469
that's a memory operation SSE even up

155
00:06:54,579 --> 00:06:59,139
through four until you get to like

156
00:06:56,470 --> 00:07:01,630
avx-512 doesn't have scatter gathers so

157
00:06:59,139 --> 00:07:04,990
you can't go grab multiple memory

158
00:07:01,629 --> 00:07:07,269
locations and put them into four lanes

159
00:07:04,990 --> 00:07:10,509
that's not an operation we actually have

160
00:07:07,269 --> 00:07:12,899
so by the time we get to voxel compute

161
00:07:10,509 --> 00:07:16,149
like compute voxel irradiance at that

162
00:07:12,899 --> 00:07:18,459
actual operation can only happen in

163
00:07:16,149 --> 00:07:20,978
scaler so by the time we get down here

164
00:07:18,459 --> 00:07:23,288
we have to have converted our four-wide

165
00:07:20,978 --> 00:07:25,569
code which we came out here from into

166
00:07:23,288 --> 00:07:27,430
one wide code in order to do compute

167
00:07:25,569 --> 00:07:29,680
voxel irradiance so that's just a

168
00:07:27,430 --> 00:07:39,310
requirement because we don't have any

169
00:07:29,680 --> 00:07:43,449
way of doing memory ops for wide and so

170
00:07:39,310 --> 00:07:45,160
I don't actually know when that place is

171
00:07:43,449 --> 00:07:46,990
and that's what we need to do here if

172
00:07:45,160 --> 00:07:49,630
you take a look at what I was sketching

173
00:07:46,990 --> 00:07:52,840
out in terms of solving for probe sample

174
00:07:49,629 --> 00:07:59,949
P or probe sample and what you can see

175
00:07:52,839 --> 00:08:02,918
is we mostly if you look we mostly have

176
00:07:59,949 --> 00:08:05,500
here a situation where we're trying to

177
00:08:02,918 --> 00:08:10,538
produce a normal but all we actually

178
00:08:05,500 --> 00:08:16,478
know about our hit detection is we know

179
00:08:10,538 --> 00:08:18,939
where we hit the box like we know the

180
00:08:16,478 --> 00:08:21,009
location where we hit the box and we

181
00:08:18,939 --> 00:08:23,969
know like the min and the max of the box

182
00:08:21,009 --> 00:08:27,639
in the center of the box and so on right

183
00:08:23,970 --> 00:08:31,330
so we need to figure out how we're going

184
00:08:27,639 --> 00:08:34,000
to produce a normal from that and one

185
00:08:31,329 --> 00:08:37,470
way that I hypothesized we could do it

186
00:08:34,000 --> 00:08:42,720
is by doing like a table load

187
00:08:37,470 --> 00:08:45,629
right so figure out some way to you know

188
00:08:42,720 --> 00:08:48,420
load out of a table based on some kind

189
00:08:45,629 --> 00:08:52,100
of a mask that comes out of you know a

190
00:08:48,419 --> 00:08:58,559
comparison or who knows what right and

191
00:08:52,100 --> 00:09:01,409
it's yeah it's hard to say like what

192
00:08:58,559 --> 00:09:02,849
would be the easiest way to do that or

193
00:09:01,409 --> 00:09:05,579
what would be the best way to do that

194
00:09:02,850 --> 00:09:07,430
and what we were hypothesizing here is

195
00:09:05,580 --> 00:09:10,980
that we would do some kind of comparison

196
00:09:07,429 --> 00:09:13,559
and produce like a sine mask or

197
00:09:10,980 --> 00:09:17,190
greater-than mask and see us like doing

198
00:09:13,559 --> 00:09:21,269
various things here presumably this was

199
00:09:17,190 --> 00:09:23,490
an mm comp here but that's what we need

200
00:09:21,269 --> 00:09:26,789
to think about now and the probe sample

201
00:09:23,490 --> 00:09:29,970
p on the other hand that's not so

202
00:09:26,789 --> 00:09:31,319
interesting either way because that's an

203
00:09:29,970 --> 00:09:32,850
extraction and we can either do the

204
00:09:31,320 --> 00:09:35,070
extraction here or we can do the

205
00:09:32,850 --> 00:09:37,950
extraction here we can do it either way

206
00:09:35,070 --> 00:09:40,650
and so I'm not sure either about that

207
00:09:37,950 --> 00:09:46,250
one but this is like probe sample P

208
00:09:40,649 --> 00:09:51,779
single so in order to do this we need to

209
00:09:46,250 --> 00:09:55,889
well I guess I could do it this way we

210
00:09:51,779 --> 00:09:59,459
need to extract 0 like from each of

211
00:09:55,889 --> 00:10:01,919
these right and we could make something

212
00:09:59,460 --> 00:10:03,690
that converts that like you know like an

213
00:10:01,919 --> 00:10:05,879
extract element kind of a thing that

214
00:10:03,690 --> 00:10:08,040
that that converts that I don't know if

215
00:10:05,879 --> 00:10:10,110
we want to do that or not but for like

216
00:10:08,039 --> 00:10:12,120
in fact if you look here you can see

217
00:10:10,110 --> 00:10:13,769
we're effectively doing that right like

218
00:10:12,120 --> 00:10:18,810
this this is what we're actually talking

219
00:10:13,769 --> 00:10:21,750
about here so when we do this and it

220
00:10:18,809 --> 00:10:24,959
looks like we've already shuffled our T

221
00:10:21,750 --> 00:10:28,320
ray here so if you've already shuffled T

222
00:10:24,960 --> 00:10:30,030
ray then this is going to produce result

223
00:10:28,320 --> 00:10:31,980
the correct results everywhere so it

224
00:10:30,029 --> 00:10:36,600
itself doesn't need to be shuffled so

225
00:10:31,980 --> 00:10:39,060
probe sample P if you just extract the

226
00:10:36,600 --> 00:10:44,149
individual low components from it like

227
00:10:39,059 --> 00:10:44,149
so you just have your answer right

228
00:10:47,119 --> 00:10:51,959
so this is probe sample piece single and

229
00:10:50,188 --> 00:10:54,328
at that point we know that really it's

230
00:10:51,958 --> 00:10:57,028
just probe sample n that we wouldn't

231
00:10:54,328 --> 00:10:58,979
have right so you can see here that

232
00:10:57,028 --> 00:11:00,990
probe sample n and this should really be

233
00:10:58,980 --> 00:11:03,959
called per sample and single probably

234
00:11:00,990 --> 00:11:05,428
because it's not a combined value even

235
00:11:03,958 --> 00:11:10,258
though we don't really build a combined

236
00:11:05,428 --> 00:11:12,778
value of that what you can see is the

237
00:11:10,259 --> 00:11:15,209
only real sticking point in terms of

238
00:11:12,778 --> 00:11:17,909
stuff we don't really know yet is how we

239
00:11:15,208 --> 00:11:26,008
would produce this normal and so we need

240
00:11:17,909 --> 00:11:28,740
some way of producing that now if these

241
00:11:26,009 --> 00:11:31,558
were spheres it would be easy because

242
00:11:28,740 --> 00:11:33,839
the Delta like if you just subtract the

243
00:11:31,558 --> 00:11:35,938
point you hit from the center of the

244
00:11:33,839 --> 00:11:37,759
sphere that's the normal you just have

245
00:11:35,938 --> 00:11:40,169
to normalize it but it's the correct

246
00:11:37,759 --> 00:11:41,639
direction and if you don't care about

247
00:11:40,169 --> 00:11:44,099
normalization well then you're

248
00:11:41,639 --> 00:11:45,240
completely done but all it's just a

249
00:11:44,100 --> 00:11:48,058
normalized operation that's the only

250
00:11:45,240 --> 00:11:50,610
thing you have to do unfortunately for

251
00:11:48,058 --> 00:11:53,338
us that is not the case and what we end

252
00:11:50,610 --> 00:11:56,159
up with here is a situation where we've

253
00:11:53,339 --> 00:11:58,889
hit a box we know the location on the

254
00:11:56,159 --> 00:12:02,039
box we've hit we know the center if we

255
00:11:58,889 --> 00:12:04,318
subtract the two of those we actually

256
00:12:02,039 --> 00:12:07,318
know that whatever value whatever the at

257
00:12:04,318 --> 00:12:11,490
highest absolute value is we do know

258
00:12:07,318 --> 00:12:13,948
that that is the component of the normal

259
00:12:11,490 --> 00:12:16,139
that is filled because a box an axis

260
00:12:13,948 --> 00:12:19,708
aligned bounding box the normal is just

261
00:12:16,139 --> 00:12:22,499
plus or minus one in one channel X Y or

262
00:12:19,708 --> 00:12:24,599
Z right that's it the rest of the values

263
00:12:22,499 --> 00:12:26,308
of zero that's an ax line bounding box

264
00:12:24,600 --> 00:12:28,259
has normals that are literally just like

265
00:12:26,308 --> 00:12:30,778
one zero zero negative 1 zero zero zero

266
00:12:28,259 --> 00:12:32,970
one zero zero negative 1 zero zero zero

267
00:12:30,778 --> 00:12:35,100
one zero zero negative one those are the

268
00:12:32,970 --> 00:12:38,189
normals that's all they can be so we're

269
00:12:35,100 --> 00:12:41,069
just trying to figure out which one we

270
00:12:38,188 --> 00:12:43,019
have now if we were to do so you look at

271
00:12:41,068 --> 00:12:44,818
what happens here we do a hit box radius

272
00:12:43,019 --> 00:12:45,990
and a hit box Center what are the

273
00:12:44,818 --> 00:12:50,519
interesting things about this is we

274
00:12:45,990 --> 00:12:52,909
don't really need the radius I don't

275
00:12:50,519 --> 00:12:52,909
think

276
00:12:56,948 --> 00:13:01,758
well we do so one of the big things here

277
00:13:00,049 --> 00:13:04,599
is I guess the reason we have the radius

278
00:13:01,759 --> 00:13:10,938
is if we both if we scale by the radius

279
00:13:04,600 --> 00:13:13,009
so so for example if I take the probe

280
00:13:10,938 --> 00:13:16,368
sample P and I subtract the hitbox

281
00:13:13,009 --> 00:13:19,009
center and then I scale that using the

282
00:13:16,369 --> 00:13:23,439
Hadamard product here then what I end up

283
00:13:19,009 --> 00:13:26,688
with is this scaled D value that now has

284
00:13:23,438 --> 00:13:29,169
inside it the values that would tell me

285
00:13:26,688 --> 00:13:32,599
if I took whichever one was maximum I

286
00:13:29,169 --> 00:13:36,229
would know which one was the correct

287
00:13:32,600 --> 00:13:39,860
normal at that point right the problem

288
00:13:36,230 --> 00:13:46,339
is its absolute value maximum right so

289
00:13:39,860 --> 00:13:48,139
it's not quite what I want now taking

290
00:13:46,339 --> 00:13:49,819
the absolute value maximum actually

291
00:13:48,139 --> 00:13:52,909
isn't particularly difficult and that's

292
00:13:49,818 --> 00:13:54,169
why we kind of did this thing here so

293
00:13:52,909 --> 00:13:56,480
let's actually see what would happen

294
00:13:54,169 --> 00:13:59,479
let's suppose we wanted to do an

295
00:13:56,480 --> 00:14:03,798
absolute value of the components of

296
00:13:59,480 --> 00:14:06,230
scaled D right and so we wanted to just

297
00:14:03,798 --> 00:14:07,698
start merging these together so in order

298
00:14:06,230 --> 00:14:13,490
to merge these together what I would

299
00:14:07,698 --> 00:14:15,318
want to do is because I now know I need

300
00:14:13,490 --> 00:14:17,209
to shuffle one of these right so I want

301
00:14:15,318 --> 00:14:21,769
to I want to shuffle the one of these

302
00:14:17,208 --> 00:14:23,088
that's I want to shuffle the values out

303
00:14:21,769 --> 00:14:26,568
of this so that I know that I'm only

304
00:14:23,089 --> 00:14:28,670
working with the closest hit and again

305
00:14:26,568 --> 00:14:30,798
I'm not sure in which order I should do

306
00:14:28,669 --> 00:14:32,990
this like maybe the answer is I should

307
00:14:30,798 --> 00:14:34,578
have shuffled these two because that's

308
00:14:32,990 --> 00:14:42,740
just two shuffles and then everything

309
00:14:34,578 --> 00:14:47,599
else works in scaler again it's really

310
00:14:42,740 --> 00:14:49,459
hard to say I'm not sure it's one of

311
00:14:47,600 --> 00:14:52,369
those confusing things the other thing

312
00:14:49,458 --> 00:14:54,378
is you we probably want to repack these

313
00:14:52,369 --> 00:14:57,970
slightly differently like we kind of

314
00:14:54,379 --> 00:15:02,119
want them now to be such that they're

315
00:14:57,970 --> 00:15:05,519
interleaved XYZ which we could actually

316
00:15:02,119 --> 00:15:12,690
do probably without

317
00:15:05,519 --> 00:15:15,720
much of an issue so yeah I guess maybe

318
00:15:12,690 --> 00:15:18,780
after you get to this point you want to

319
00:15:15,720 --> 00:15:22,470
interleave the XY and Z and you but you

320
00:15:18,779 --> 00:15:24,149
would need to shuffle them down and the

321
00:15:22,470 --> 00:15:30,269
question is just should you just shuffle

322
00:15:24,149 --> 00:15:32,730
these two first and I think I think it's

323
00:15:30,269 --> 00:15:34,649
it's better to shuffle after right

324
00:15:32,730 --> 00:15:37,950
because if you have to shuffle these two

325
00:15:34,649 --> 00:15:39,539
you're doing three shuffles tie plus

326
00:15:37,950 --> 00:15:41,490
three shovels that's six shuffles total

327
00:15:39,539 --> 00:15:43,349
and if you just shuffle the output

328
00:15:41,490 --> 00:15:46,710
you're only doing three shuffles so I

329
00:15:43,350 --> 00:15:53,940
think you win if you just wait right you

330
00:15:46,710 --> 00:15:56,430
just wait till the end on the other hand

331
00:15:53,940 --> 00:16:02,190
this does shuffled so if you shuffled

332
00:15:56,429 --> 00:16:09,419
this well that doesn't shovel that's

333
00:16:02,190 --> 00:16:11,190
technically an extract so hmm I think

334
00:16:09,419 --> 00:16:13,319
you should uh 'fl probably at the end so

335
00:16:11,190 --> 00:16:19,770
if you were to do that right the scaled

336
00:16:13,320 --> 00:16:26,610
D value is just the same thing that we

337
00:16:19,769 --> 00:16:33,000
did here so if I wanted to do a scale D

338
00:16:26,610 --> 00:16:35,970
single it would just be something like

339
00:16:33,000 --> 00:16:38,309
this and then the question is just like

340
00:16:35,970 --> 00:16:42,060
okay so if I extract those three and

341
00:16:38,309 --> 00:16:45,269
then I want to merge them right to do

342
00:16:42,059 --> 00:16:50,089
comparisons on then I need to do two

343
00:16:45,269 --> 00:16:50,090
operations to merge right

344
00:16:50,509 --> 00:16:54,990
so it seems actually like maybe you

345
00:16:53,279 --> 00:16:57,509
wouldn't quite do that you just do the

346
00:16:54,990 --> 00:16:59,399
merge directly so I guess I guess that

347
00:16:57,509 --> 00:17:00,929
tells me something I need to know we

348
00:16:59,399 --> 00:17:02,490
probably would do the merge directly

349
00:17:00,929 --> 00:17:05,309
here so what we would do is say all

350
00:17:02,490 --> 00:17:09,859
right these are our vectors right

351
00:17:05,309 --> 00:17:09,859
they're not they need to be shuffled

352
00:17:15,349 --> 00:17:22,469
so that we replicate out the lines but

353
00:17:18,509 --> 00:17:24,799
in addition we then want to merge them

354
00:17:22,470 --> 00:17:28,049
together probably so they go X Y Z zero

355
00:17:24,799 --> 00:17:30,779
would be my assumption so that we can

356
00:17:28,049 --> 00:17:35,159
then do things like use them Mothe mask

357
00:17:30,779 --> 00:17:37,319
on them or use the same technique we did

358
00:17:35,160 --> 00:17:41,400
here to find out which one is the

359
00:17:37,319 --> 00:17:52,889
minimum for example or which one is the

360
00:17:41,400 --> 00:17:56,700
maximum things like this so how would we

361
00:17:52,890 --> 00:18:00,030
do that the other option is again yeah

362
00:17:56,700 --> 00:18:02,549
we use a comparison to compare like X Y

363
00:18:00,029 --> 00:18:05,430
Z and Y Z X and then we use a table for

364
00:18:02,549 --> 00:18:08,819
that so like there if we knew that like

365
00:18:05,430 --> 00:18:11,730
X was less than Y and Y was less than Z

366
00:18:08,819 --> 00:18:13,799
or something you know an X and Z we'd

367
00:18:11,730 --> 00:18:16,440
have all three you know we'd have

368
00:18:13,799 --> 00:18:20,430
comparisons on all three pairs of values

369
00:18:16,440 --> 00:18:24,059
at that point XY X Z and Y Z and then we

370
00:18:20,430 --> 00:18:27,720
should be able to use that that actually

371
00:18:24,059 --> 00:18:29,839
seems pretty good right so yeah I think

372
00:18:27,720 --> 00:18:32,430
what we would want to do maybe is this I

373
00:18:29,839 --> 00:18:39,599
think what we had here was probably

374
00:18:32,430 --> 00:18:42,720
right I think we want to produce like X

375
00:18:39,599 --> 00:18:45,509
Y Z and Y Z X right and then what we

376
00:18:42,720 --> 00:18:46,660
would want to do is just do a comp right

377
00:18:45,509 --> 00:18:49,868
so

378
00:18:46,660 --> 00:18:49,869
[Music]

379
00:18:55,160 --> 00:19:03,330
something like this so that we can get a

380
00:19:01,140 --> 00:19:06,300
comp here and we just say alright the

381
00:19:03,329 --> 00:19:10,769
sign mask is just the pact XYZ the

382
00:19:06,299 --> 00:19:13,730
greater mask is like the you know comp

383
00:19:10,769 --> 00:19:16,349
and I guess we could do it that way and

384
00:19:13,730 --> 00:19:21,000
then we just look those up in the table

385
00:19:16,349 --> 00:19:24,048
as we expected seems plausible to me

386
00:19:21,000 --> 00:19:24,048
[Music]

387
00:19:24,170 --> 00:19:36,870
right seems plausible I mean is it the

388
00:19:34,380 --> 00:19:45,570
best way probably not we can probably

389
00:19:36,869 --> 00:19:48,000
get better here if we really want to and

390
00:19:45,569 --> 00:19:51,240
so then what we need to do is we just

391
00:19:48,000 --> 00:19:54,539
need to have some way of producing these

392
00:19:51,240 --> 00:19:59,009
we know that we can just shuffle this so

393
00:19:54,539 --> 00:20:02,430
if we have an X Y Z we can just shuffle

394
00:19:59,009 --> 00:20:07,890
the X Y Z around so to produce a Y Z X

395
00:20:02,430 --> 00:20:12,240
it would just be like a 1 to 0 right so

396
00:20:07,890 --> 00:20:15,330
we don't really have to to think about

397
00:20:12,240 --> 00:20:17,759
that very much we can make that out of

398
00:20:15,329 --> 00:20:20,129
this so this is really the one that's a

399
00:20:17,759 --> 00:20:28,230
little bit tricky because we have to

400
00:20:20,130 --> 00:20:29,860
merge three values and so for that we

401
00:20:28,230 --> 00:20:32,900
just need to

402
00:20:29,859 --> 00:20:32,899
[Music]

403
00:20:35,700 --> 00:20:40,230
so yeah again just trying to think this

404
00:20:38,460 --> 00:20:42,149
through a little bit more carefully yeah

405
00:20:40,230 --> 00:20:44,880
when I think about what's going on in

406
00:20:42,148 --> 00:20:47,428
there I'm not sure maybe there is an

407
00:20:44,880 --> 00:20:50,000
even better way to do it because the

408
00:20:47,429 --> 00:20:59,210
only thing we need to do actually is to

409
00:20:50,000 --> 00:20:59,210
knock out the values that are are not

410
00:21:03,859 --> 00:21:10,038
the only thing we would need to do is

411
00:21:06,269 --> 00:21:17,359
mask out the values that aren't the

412
00:21:10,038 --> 00:21:24,000
largest so actually if we were to do a

413
00:21:17,359 --> 00:21:27,178
comparison on them we probably wouldn't

414
00:21:24,000 --> 00:21:38,690
actually need to use the table because

415
00:21:27,179 --> 00:21:38,690
we could just knock out and normalize

416
00:21:44,880 --> 00:21:51,270
so I think actually we don't really need

417
00:21:48,880 --> 00:21:51,270
these

418
00:21:57,200 --> 00:22:10,730
I think all we need is one mask right so

419
00:22:01,400 --> 00:22:12,470
you would do this you would do like you

420
00:22:10,730 --> 00:22:13,970
would take the absolute value of it

421
00:22:12,470 --> 00:22:18,170
which just ends this is just a hand

422
00:22:13,970 --> 00:22:21,620
right to get rid of the high bit you

423
00:22:18,170 --> 00:22:25,850
would do the comparison and then you

424
00:22:21,619 --> 00:22:35,029
would just load out a mask right you

425
00:22:25,849 --> 00:22:37,730
just say like there'd be some clear mask

426
00:22:35,029 --> 00:22:44,289
that you would do where you would do a

427
00:22:37,730 --> 00:22:49,039
mauve mask on the pact on the comp and

428
00:22:44,289 --> 00:22:51,649
the the clear mask table would just have

429
00:22:49,039 --> 00:22:54,170
whatever the actual clearing mask is

430
00:22:51,650 --> 00:22:57,019
that you actually need you would then

431
00:22:54,170 --> 00:22:59,539
after loading that in you would just

432
00:22:57,019 --> 00:23:02,960
hand it out so you would say all right

433
00:22:59,539 --> 00:23:03,740
the pact XYZ equals the pact XYZ and the

434
00:23:02,960 --> 00:23:06,920
clear mask

435
00:23:03,740 --> 00:23:08,450
so now you've gotten rid of whatever the

436
00:23:06,920 --> 00:23:10,850
components are that aren't the greatest

437
00:23:08,450 --> 00:23:15,319
they aren't the highest component in

438
00:23:10,849 --> 00:23:20,059
there and after you've finished you just

439
00:23:15,319 --> 00:23:22,519
need to normalize that that one value so

440
00:23:20,059 --> 00:23:29,299
in order to do that you just need to

441
00:23:22,519 --> 00:23:31,730
divide by one in fact you can just do

442
00:23:29,299 --> 00:23:34,460
that first so you can say pact X Y Z

443
00:23:31,730 --> 00:23:41,110
equals like one overpacked X Y you know

444
00:23:34,460 --> 00:23:41,110
x equals one overpacked XYZ right I

445
00:23:41,500 --> 00:23:45,549
guess you don't even really need to do

446
00:23:43,369 --> 00:23:49,969
that you really just need the sign bit

447
00:23:45,549 --> 00:23:52,339
so I guess it's really just an or you

448
00:23:49,970 --> 00:23:56,750
just say all we have the vector of all

449
00:23:52,339 --> 00:24:00,559
ones right it's this so we can just say

450
00:23:56,750 --> 00:24:04,369
hey it's a vector of all ones and then

451
00:24:00,559 --> 00:24:08,259
we or in the signed bit from whatever

452
00:24:04,369 --> 00:24:08,259
the pact thing is

453
00:24:08,579 --> 00:24:25,308
and that's it right it's all ones we

454
00:24:18,589 --> 00:24:25,308
know that we would clear oops

455
00:24:35,480 --> 00:24:51,509
trying to think if there's a way to do

456
00:24:37,500 --> 00:24:53,339
this so I'm not sure if there's another

457
00:24:51,509 --> 00:24:57,058
way to do this but I'd have to think

458
00:24:53,339 --> 00:24:58,589
about it we just want all ones we want

459
00:24:57,058 --> 00:25:02,069
to take whatever their original sign was

460
00:24:58,589 --> 00:25:03,808
which is this and or it in so that way

461
00:25:02,069 --> 00:25:05,579
we preserve the sign and then we just

462
00:25:03,808 --> 00:25:12,148
clear out whatever the components are we

463
00:25:05,579 --> 00:25:18,960
don't want I think that's it I think

464
00:25:12,148 --> 00:25:21,808
that's it you don't need this and you

465
00:25:18,960 --> 00:25:25,470
don't really need this you would just

466
00:25:21,808 --> 00:25:29,538
say look there's a whatever so you'd

467
00:25:25,470 --> 00:25:29,538
you'd store it you'd say

468
00:25:44,720 --> 00:25:51,450
so you have the probe normal single here

469
00:25:47,759 --> 00:25:53,759
and it would be like a v3 but we know

470
00:25:51,450 --> 00:25:55,350
there's actually four values so we want

471
00:25:53,759 --> 00:26:01,650
to actually write like the whole thing

472
00:25:55,349 --> 00:26:23,789
like so and then we would just take just

473
00:26:01,650 --> 00:26:25,860
a one part of it I think that's it so it

474
00:26:23,789 --> 00:26:27,839
still feels a little overwrought I feel

475
00:26:25,859 --> 00:26:30,990
like we could do better than this if we

476
00:26:27,839 --> 00:26:33,179
put our minds to it but like roughly

477
00:26:30,990 --> 00:26:35,599
this is what we're talking about right

478
00:26:33,180 --> 00:26:35,600
and

479
00:26:44,390 --> 00:26:50,400
we can't quite do this this we need this

480
00:26:47,279 --> 00:27:07,230
to be a separate value right so the ABS

481
00:26:50,400 --> 00:27:14,040
pact XYZ is not the same Brent but that

482
00:27:07,230 --> 00:27:16,048
is that's basically what we would do and

483
00:27:14,039 --> 00:27:18,359
it just it bloats it out a little bit

484
00:27:16,048 --> 00:27:21,660
much right I'm not thrilled about it

485
00:27:18,359 --> 00:27:23,789
also I might want to check compute voxel

486
00:27:21,660 --> 00:27:31,470
irradiance at I'm not sure what this

487
00:27:23,789 --> 00:27:35,909
thing actually does here it's just

488
00:27:31,470 --> 00:27:45,029
trying to produce a voxel index and a

489
00:27:35,910 --> 00:27:47,400
txt why so we could again actually

490
00:27:45,029 --> 00:27:49,109
extract just at the end here and I'm not

491
00:27:47,400 --> 00:27:54,360
sure if that gets us anywhere

492
00:27:49,109 --> 00:27:57,839
I doubt it does but we can check and in

493
00:27:54,359 --> 00:28:01,469
terms of the normal the get octahedral

494
00:27:57,839 --> 00:28:03,720
offset probably also can't really be

495
00:28:01,470 --> 00:28:06,750
accelerated much so again I don't really

496
00:28:03,720 --> 00:28:16,289
think there's much we're gonna be able

497
00:28:06,750 --> 00:28:25,140
to do here this on the other hand could

498
00:28:16,289 --> 00:28:28,500
easily have been done wide so that may

499
00:28:25,140 --> 00:28:30,690
want to go anyway doesn't matter point

500
00:28:28,500 --> 00:28:33,630
being I think we're more or less there

501
00:28:30,690 --> 00:28:38,070
we just probably aren't quite great yet

502
00:28:33,630 --> 00:28:42,090
this is not the world's best code for

503
00:28:38,069 --> 00:28:44,159
this I I am quite sure but you know what

504
00:28:42,089 --> 00:28:46,199
you gonna do so we really just have two

505
00:28:44,160 --> 00:28:47,880
things to do one is we've got to figure

506
00:28:46,200 --> 00:28:51,440
out what the clear mask table should be

507
00:28:47,880 --> 00:28:53,840
it's just a 16 entry table

508
00:28:51,440 --> 00:28:56,450
we would fill with the correct mass

509
00:28:53,839 --> 00:28:59,869
values it's exactly the same as like

510
00:28:56,450 --> 00:29:02,379
this thing here it's just a different

511
00:28:59,869 --> 00:29:06,558
table right it's exactly the same idea

512
00:29:02,378 --> 00:29:09,949
and it would just have 16 values in it

513
00:29:06,558 --> 00:29:13,038
the easiest way to do this would

514
00:29:09,950 --> 00:29:16,090
probably be to do it this way where we

515
00:29:13,038 --> 00:29:19,490
would say that these are just masks and

516
00:29:16,089 --> 00:29:27,199
they're either going to be all F's or

517
00:29:19,490 --> 00:29:29,929
all zeros right and we would just have

518
00:29:27,200 --> 00:29:32,210
16 of them so depending on what the

519
00:29:29,929 --> 00:29:36,259
pattern of compares was you would just

520
00:29:32,210 --> 00:29:40,100
have you know 16 of these and a bunch of

521
00:29:36,259 --> 00:29:44,769
them would evaluate to that and a bunch

522
00:29:40,099 --> 00:29:48,500
of them would evaluate to this right and

523
00:29:44,769 --> 00:29:57,069
a bunch of them would evaluate to you

524
00:29:48,500 --> 00:29:57,069
know this so that enough F's yes

525
00:30:05,930 --> 00:30:18,240
so that's coops that's all we're talking

526
00:30:14,430 --> 00:30:20,460
about here and I don't know which ones

527
00:30:18,240 --> 00:30:22,440
go with which slots so we're gonna have

528
00:30:20,460 --> 00:30:25,380
to actually figure that out but in terms

529
00:30:22,440 --> 00:30:27,750
of which codes go where so this is like

530
00:30:25,380 --> 00:30:32,220
you know in each of these slots we would

531
00:30:27,750 --> 00:30:35,279
have you know a particular 16-bit value

532
00:30:32,220 --> 00:30:42,420
that goes in there and this will be like

533
00:30:35,279 --> 00:30:48,299
the bit pattern here right so it's like

534
00:30:42,420 --> 00:30:50,610
this that's the bit pattern for the

535
00:30:48,299 --> 00:30:54,649
first one it's first set we would have

536
00:30:50,609 --> 00:30:58,319
the same pattern again for the next set

537
00:30:54,650 --> 00:31:03,509
right and then we would have the same

538
00:30:58,319 --> 00:31:07,079
pattern again for the last set it's this

539
00:31:03,509 --> 00:31:12,869
whole thing repeated right in fact I can

540
00:31:07,079 --> 00:31:14,669
just do this one two three four one two

541
00:31:12,869 --> 00:31:21,869
three four one two three four one two

542
00:31:14,670 --> 00:31:25,850
three four yeah so all we would do is we

543
00:31:21,869 --> 00:31:28,139
just have to go then see which ones

544
00:31:25,849 --> 00:31:31,379
correspond here and so if you look at

545
00:31:28,140 --> 00:31:34,200
how the shuffling works and we do a

546
00:31:31,380 --> 00:31:38,130
comparison we're doing X Y Z versus Y Z

547
00:31:34,200 --> 00:31:40,259
X so X Y Z versus Y Z X means that like

548
00:31:38,130 --> 00:31:42,930
and here and if it was greater right

549
00:31:40,259 --> 00:31:45,480
because it's it's a greater than sign so

550
00:31:42,930 --> 00:31:53,220
in here we say if X Y Z is greater than

551
00:31:45,480 --> 00:32:00,569
Y Z X so the first slot right bit zero

552
00:31:53,220 --> 00:32:01,789
is X greater than Y I need a comment

553
00:32:00,569 --> 00:32:09,129
here

554
00:32:01,789 --> 00:32:11,119
the next bit is y greater than Z and the

555
00:32:09,130 --> 00:32:15,760
final bit that we actually care about is

556
00:32:11,119 --> 00:32:19,579
Z greater than X and then bit three is

557
00:32:15,759 --> 00:32:23,420
just going to be comparing like zero

558
00:32:19,579 --> 00:32:25,189
with zero and so--but three we should be

559
00:32:23,420 --> 00:32:27,680
able to guarantee that bit three is

560
00:32:25,190 --> 00:32:29,779
always zero if we want to because zero

561
00:32:27,680 --> 00:32:31,610
can't be greater than zero so if we want

562
00:32:29,779 --> 00:32:36,289
to we could say look let's make this

563
00:32:31,609 --> 00:32:39,859
table just be you know only eight long

564
00:32:36,289 --> 00:32:41,960
and say this is always zero we should be

565
00:32:39,859 --> 00:32:44,029
able to do that if we can't we can just

566
00:32:41,960 --> 00:32:56,059
duplicate the table right so it's not

567
00:32:44,029 --> 00:32:59,420
that big of a deal all right so given

568
00:32:56,059 --> 00:33:01,879
that we know these things what does this

569
00:32:59,420 --> 00:33:04,640
actually mean so if we have all zeros

570
00:33:01,880 --> 00:33:08,240
here this means that X is not greater

571
00:33:04,640 --> 00:33:10,940
than Y is y is not greater than Z and Z

572
00:33:08,240 --> 00:33:14,539
is not greater than X right that's what

573
00:33:10,940 --> 00:33:18,230
it's actually telling us so what we know

574
00:33:14,539 --> 00:33:23,240
from I mean if we take a look at where X

575
00:33:18,230 --> 00:33:25,640
is being compared against things if we I

576
00:33:23,240 --> 00:33:28,039
guess is that actually enough we might

577
00:33:25,640 --> 00:33:29,660
need bit three right I don't know if

578
00:33:28,039 --> 00:33:31,759
that tells us everything we need cuz

579
00:33:29,660 --> 00:33:33,590
let's look at what we would do like if

580
00:33:31,759 --> 00:33:36,859
we were gonna write this code normally

581
00:33:33,589 --> 00:33:39,079
we'd say if X is greater than Y then we

582
00:33:36,859 --> 00:33:44,539
just need to know if X is greater than Z

583
00:33:39,079 --> 00:33:46,879
or not right and in the other branch we

584
00:33:44,539 --> 00:33:50,089
would say if Y is greater than Z or not

585
00:33:46,880 --> 00:33:53,990
I think right so if X is greater than Y

586
00:33:50,089 --> 00:34:00,169
and X is greater than Z then it's X

587
00:33:53,990 --> 00:34:01,880
right if X was not greater than Z then

588
00:34:00,170 --> 00:34:05,269
oh well I guess we need one more thing

589
00:34:01,880 --> 00:34:12,160
right then we need if Y is greater than

590
00:34:05,269 --> 00:34:12,159
Z because now we know that sorry

591
00:34:13,550 --> 00:34:18,149
no we don't

592
00:34:15,030 --> 00:34:21,240
it's just Z so that would mean that Z is

593
00:34:18,148 --> 00:34:23,608
either equal to or greater than X and we

594
00:34:21,239 --> 00:34:28,289
know that Y yes so it's just it's Z at

595
00:34:23,608 --> 00:34:30,628
that point right if we know that Y is

596
00:34:28,289 --> 00:34:33,808
actually greater than X then if Y is

597
00:34:30,628 --> 00:34:36,980
greater than Z then it's Y otherwise at

598
00:34:33,809 --> 00:34:36,980
Z right

599
00:34:45,179 --> 00:34:54,838
am I wrong about this I feel like that's

600
00:34:52,260 --> 00:34:57,030
all we would need we don't care about

601
00:34:54,838 --> 00:34:57,750
tiebreakers if two things are equal we

602
00:34:57,030 --> 00:34:59,640
don't care

603
00:34:57,750 --> 00:35:01,559
that means you hit a corner of a box and

604
00:34:59,639 --> 00:35:06,328
we wouldn't care which normal you pick

605
00:35:01,559 --> 00:35:10,440
any normal would be fine I think that's

606
00:35:06,329 --> 00:35:13,800
fine so yeah so if we look at what this

607
00:35:10,440 --> 00:35:16,500
corresponds to X greater than Y zero it

608
00:35:13,800 --> 00:35:24,200
goes into this branch right so this is

609
00:35:16,500 --> 00:35:28,769
like bit zero is set and this is right

610
00:35:24,199 --> 00:35:35,460
bit zero is one bit zero is zero I guess

611
00:35:28,769 --> 00:35:36,599
we could do it this way right another

612
00:35:35,460 --> 00:35:42,088
way to do it would just say okay look

613
00:35:36,599 --> 00:35:46,019
zero I'm sorry zero one when we get in

614
00:35:42,088 --> 00:35:49,769
here now we know X greater than Z so

615
00:35:46,019 --> 00:35:57,420
that's actually the opposite of the last

616
00:35:49,769 --> 00:36:01,980
one right that is actually important so

617
00:35:57,420 --> 00:36:09,240
I think we actually want that that's

618
00:36:01,980 --> 00:36:11,159
easier to produce probably I think

619
00:36:09,239 --> 00:36:15,229
that's easier to for us to produce as

620
00:36:11,159 --> 00:36:15,230
well that might not be true

621
00:36:22,130 --> 00:36:26,160
so we may want to do it that way because

622
00:36:24,119 --> 00:36:27,869
that way each vector only has two

623
00:36:26,159 --> 00:36:33,358
components so they can be done with one

624
00:36:27,869 --> 00:36:36,030
shuffle potentially potentially so that

625
00:36:33,358 --> 00:36:38,338
may actually be better alright so in

626
00:36:36,030 --> 00:36:40,410
here let's do it that way and that way

627
00:36:38,338 --> 00:36:44,719
we don't have to have three values in

628
00:36:40,409 --> 00:36:44,719
each one so if we do X greater than Y

629
00:37:01,838 --> 00:37:08,259
so I guess another question is do I just

630
00:37:05,079 --> 00:37:09,369
do this in a simpler way that no it

631
00:37:08,259 --> 00:37:10,599
still seems like a probably more

632
00:37:09,369 --> 00:37:16,239
instructions though because if you don't

633
00:37:10,599 --> 00:37:17,559
ever make the make it packed value so

634
00:37:16,239 --> 00:37:20,289
another thing I was thinking is like

635
00:37:17,559 --> 00:37:21,910
well actually I mean the other thing we

636
00:37:20,289 --> 00:37:24,700
could do is just do these comparisons

637
00:37:21,909 --> 00:37:27,848
after the shuffling so we could do like

638
00:37:24,699 --> 00:37:33,298
three shuffles to produce xxx yyy ZZZ Z

639
00:37:27,849 --> 00:37:33,298
and then just do the comparisons there

640
00:37:33,420 --> 00:37:37,710
because there's only three comparisons

641
00:37:35,259 --> 00:37:37,710
right

642
00:37:52,559 --> 00:37:58,119
gosh that's a pretty tough call because

643
00:37:55,838 --> 00:38:07,779
those comparisons don't can be done

644
00:37:58,119 --> 00:38:29,800
serially right so for example if you've

645
00:38:07,780 --> 00:38:31,990
got these you can do like this I guess

646
00:38:29,800 --> 00:38:34,240
you'd have to do the absolute value a

647
00:38:31,989 --> 00:38:36,848
lot more times though so it does seem

648
00:38:34,239 --> 00:38:38,529
like you'd want to pack it first I don't

649
00:38:36,849 --> 00:38:40,510
know I'll sketch it out first just to

650
00:38:38,530 --> 00:38:44,019
make sure I'm not wrong I mean I could

651
00:38:40,510 --> 00:38:46,450
be very wrong about that but if this is

652
00:38:44,019 --> 00:38:49,059
all you actually wanted to do like based

653
00:38:46,449 --> 00:38:52,739
on that sort of arrangement of things

654
00:38:49,059 --> 00:38:55,989
you'd say okay I need to know this many

655
00:38:52,739 --> 00:38:58,779
different masks so I can figure out what

656
00:38:55,989 --> 00:39:01,029
you know I'm actually going to put into

657
00:38:58,780 --> 00:39:03,790
these things these would have to be

658
00:39:01,030 --> 00:39:05,740
absolute values right so you'd have to

659
00:39:03,789 --> 00:39:10,559
do an actual absolute value of each of

660
00:39:05,739 --> 00:39:10,559
these scale D values here

661
00:39:19,679 --> 00:39:26,049
so you'd need to produce this and it's

662
00:39:22,449 --> 00:39:28,449
expensive right it's gonna be three

663
00:39:26,050 --> 00:39:30,550
separate ands to do that so you're

664
00:39:28,449 --> 00:39:32,619
looking at something like this where do

665
00:39:30,550 --> 00:39:34,480
three separate shuffles three separate

666
00:39:32,619 --> 00:39:36,159
absolute values and then when you get

667
00:39:34,480 --> 00:39:42,809
down here you do three separate compares

668
00:39:36,159 --> 00:39:54,029
right at that point you would just do

669
00:39:42,809 --> 00:39:55,449
select to get your mask I guess I guess

670
00:39:54,030 --> 00:39:58,720
so

671
00:39:55,449 --> 00:40:02,639
the X greater than Y mask is going to be

672
00:39:58,719 --> 00:40:02,639
all ones or all zeros

673
00:40:09,559 --> 00:40:20,019
you

674
00:40:11,050 --> 00:40:22,150
oh well Lok hey so let's think about

675
00:40:20,019 --> 00:40:23,920
this for a second so if we then do the

676
00:40:22,150 --> 00:40:26,500
absolute value we now know we have four

677
00:40:23,920 --> 00:40:28,960
lanes one of them has the correct lane

678
00:40:26,500 --> 00:40:29,739
but we don't know which one yet right so

679
00:40:28,960 --> 00:40:32,409
just one of them

680
00:40:29,739 --> 00:40:34,389
we haven't shuffled if we do the

681
00:40:32,409 --> 00:40:37,179
comparisons we know that now we have one

682
00:40:34,389 --> 00:40:39,309
lane that has the answer in it right

683
00:40:37,179 --> 00:40:41,679
it's got all zeros are all ones for each

684
00:40:39,309 --> 00:40:45,190
of these and we need to merge those

685
00:40:41,679 --> 00:40:50,489
together to figure out which one we're

686
00:40:45,190 --> 00:40:53,230
actually going to use right in terms of

687
00:40:50,489 --> 00:40:57,159
whether we want the X as the wise or the

688
00:40:53,230 --> 00:40:59,500
Z's so what we would then do I guess is

689
00:40:57,159 --> 00:41:02,199
we do selects here so I probably

690
00:40:59,500 --> 00:41:05,429
shouldn't have deleted that little guy

691
00:41:02,199 --> 00:41:05,429
it was handy right

692
00:41:27,608 --> 00:41:39,409
so I think that's what we're talking

693
00:41:29,809 --> 00:41:42,679
about right seems good so if I do my X

694
00:41:39,409 --> 00:41:45,199
is greater than Y and I do my X is

695
00:41:42,679 --> 00:41:46,899
greater than Z that's the mask for X

696
00:41:45,199 --> 00:41:53,889
right

697
00:41:46,900 --> 00:42:00,410
so then you would also have the not uh

698
00:41:53,889 --> 00:42:03,259
the X Y and not this for Z so that's one

699
00:42:00,409 --> 00:42:07,029
two three four so you've got four masks

700
00:42:03,260 --> 00:42:10,180
right that you need it's not great but

701
00:42:07,030 --> 00:42:10,180
you know

702
00:42:17,889 --> 00:42:24,000
I don't know where our other select is

703
00:42:24,239 --> 00:42:36,039
it's there so yeah like you would then

704
00:42:30,130 --> 00:42:38,619
do something like this which is like I

705
00:42:36,039 --> 00:42:45,610
said maybe not the best thing we'll find

706
00:42:38,619 --> 00:42:48,059
out so here's our masks see how this

707
00:42:45,610 --> 00:42:48,059
works out

708
00:42:50,639 --> 00:42:57,250
all right so now we would need to select

709
00:42:53,760 --> 00:43:00,910
from one of these so we need to produce

710
00:42:57,250 --> 00:43:03,010
like our x value our Y value and our Z

711
00:43:00,909 --> 00:43:13,719
value that we actually care about here

712
00:43:03,010 --> 00:43:16,450
so in this case we need to do like so

713
00:43:13,719 --> 00:43:21,250
you know if I was to do something like

714
00:43:16,449 --> 00:43:25,230
this I guess it's going to select

715
00:43:21,250 --> 00:43:25,230
forward so we'll do it this way

716
00:43:37,000 --> 00:43:41,989
yeah

717
00:43:38,329 --> 00:43:44,780
so we need to know what the signs of

718
00:43:41,989 --> 00:43:48,828
these things are so they need to have

719
00:43:44,780 --> 00:43:51,290
their original sign bit board back in as

720
00:43:48,829 --> 00:43:53,390
well you can see that this is probably

721
00:43:51,289 --> 00:43:58,719
just a lot slower to do it this whole

722
00:43:53,389 --> 00:43:58,719
way right I mean it seems like it I

723
00:44:01,239 --> 00:44:07,549
don't know what what you folks think but

724
00:44:04,239 --> 00:44:09,409
it seems like sketching that out this is

725
00:44:07,550 --> 00:44:13,190
just the way I was saying to do it

726
00:44:09,409 --> 00:44:16,608
before is just better right I mean it

727
00:44:13,190 --> 00:44:18,260
just seems it seems like if you did it

728
00:44:16,608 --> 00:44:21,170
this way but you're just doing a lot

729
00:44:18,260 --> 00:44:22,569
more work if you don't compare

730
00:44:21,170 --> 00:44:25,639
well-packed

731
00:44:22,568 --> 00:44:30,469
because you don't really have to do a

732
00:44:25,639 --> 00:44:37,909
lot of unpacking so I think I think this

733
00:44:30,469 --> 00:44:40,909
is just worse I think it's just worse so

734
00:44:37,909 --> 00:44:43,969
I would say like okay let's suppose we

735
00:44:40,909 --> 00:44:51,199
want to do what we were going to do up

736
00:44:43,969 --> 00:44:53,989
here where we had so the XY the XY X

737
00:44:51,199 --> 00:44:57,730
thing so the only problem with that too

738
00:44:53,989 --> 00:45:01,159
is that like we kind of want the X Y Z

739
00:44:57,730 --> 00:45:04,699
because that's the actual thing we need

740
00:45:01,159 --> 00:45:06,710
to use later you know what I mean so it

741
00:45:04,699 --> 00:45:09,529
kind of seems like maybe I don't know

742
00:45:06,710 --> 00:45:12,170
like like although doing it this way

743
00:45:09,530 --> 00:45:14,359
seems I mean you can just do it this way

744
00:45:12,170 --> 00:45:19,760
and have it be not you know have it not

745
00:45:14,358 --> 00:45:21,650
be exactly the same pattern is the ifs

746
00:45:19,760 --> 00:45:24,020
in here because you can just swap these

747
00:45:21,650 --> 00:45:26,990
around like if if what you have is X Y Z

748
00:45:24,019 --> 00:45:28,219
and Y is the X then when you actually

749
00:45:26,989 --> 00:45:30,799
get to the point we need to do the X

750
00:45:28,219 --> 00:45:33,500
greater than C you can just do Z greater

751
00:45:30,800 --> 00:45:37,849
than X and and put the Z you know here

752
00:45:33,500 --> 00:45:40,608
and the X there right so we can do it

753
00:45:37,849 --> 00:45:41,930
either way and keep an X Y Z and the

754
00:45:40,608 --> 00:45:42,949
reason that I'm saying that I think I

755
00:45:41,929 --> 00:45:44,389
want that because it would be nice if

756
00:45:42,949 --> 00:45:46,579
you're going to do two for each but we

757
00:45:44,389 --> 00:45:50,569
need these packed later to do this

758
00:45:46,579 --> 00:45:53,059
or presumably now maybe you don't maybe

759
00:45:50,570 --> 00:45:55,039
you could do it in a slightly cleverer

760
00:45:53,059 --> 00:45:56,029
way but it seems like we need that so

761
00:45:55,039 --> 00:46:00,529
let's keep it this way

762
00:45:56,030 --> 00:46:11,000
so when we then go to do our table this

763
00:46:00,530 --> 00:46:12,350
is our clear mask table I also think

764
00:46:11,000 --> 00:46:13,610
don't we do we have a sign bit we

765
00:46:12,349 --> 00:46:17,420
probably have a sign bit value somewhere

766
00:46:13,610 --> 00:46:20,289
here but we'll make one so if we have to

767
00:46:17,420 --> 00:46:22,639
load out of our clear mask table here

768
00:46:20,289 --> 00:46:24,380
what we want to do is just track what

769
00:46:22,639 --> 00:46:28,369
these values are so in this case we know

770
00:46:24,380 --> 00:46:30,740
that the first bit would be one in this

771
00:46:28,369 --> 00:46:34,369
case the first bit would be zero when we

772
00:46:30,739 --> 00:46:42,529
get in here this would be the first bit

773
00:46:34,369 --> 00:46:47,059
is 1 the second bit is and I guess I'll

774
00:46:42,530 --> 00:46:49,400
do it this way right the second bit is y

775
00:46:47,059 --> 00:46:51,529
greater than Z so we don't know what

776
00:46:49,400 --> 00:46:54,889
that is but we know that the Z greater

777
00:46:51,530 --> 00:46:58,310
than X bit the other bit is also one and

778
00:46:54,889 --> 00:47:00,589
then this should always be 0 like we

779
00:46:58,309 --> 00:47:04,070
know that that value is always zero

780
00:47:00,590 --> 00:47:09,110
right so we'll basically do this or

781
00:47:04,070 --> 00:47:11,720
maybe this right and then in here we

782
00:47:09,110 --> 00:47:13,570
have the opposite so that's this so we

783
00:47:11,719 --> 00:47:15,349
just don't know what that middle bit is

784
00:47:13,570 --> 00:47:17,059
you know what I mean it could be

785
00:47:15,349 --> 00:47:19,730
anything because we don't know how Y

786
00:47:17,059 --> 00:47:22,549
compares to Z so in here we have a

787
00:47:19,730 --> 00:47:25,909
similar situation but it's blank blank

788
00:47:22,550 --> 00:47:30,590
zero and so then what we have is for the

789
00:47:25,909 --> 00:47:34,039
Y case in here we know that Y is greater

790
00:47:30,590 --> 00:47:36,829
than Z so it's brank it's it's who knows

791
00:47:34,039 --> 00:47:40,099
one zero in this case it's who knows

792
00:47:36,829 --> 00:47:42,860
zero zero right so then if we look up

793
00:47:40,099 --> 00:47:49,000
what those two correspond to here if we

794
00:47:42,860 --> 00:47:54,170
look we know that blank blank one is oh

795
00:47:49,000 --> 00:47:57,769
sorry one blank one is here and here

796
00:47:54,170 --> 00:47:59,420
right and so one blank one has to

797
00:47:57,769 --> 00:48:17,150
produce Z which would

798
00:47:59,420 --> 00:48:19,639
this and the same would be true here so

799
00:48:17,150 --> 00:48:21,889
any pattern that's one blank one has to

800
00:48:19,639 --> 00:48:26,389
produce Z any pattern that's zero blank

801
00:48:21,889 --> 00:48:33,318
one has to produce X right so zero blank

802
00:48:26,389 --> 00:48:34,608
one zero blank one and those already did

803
00:48:33,318 --> 00:48:36,889
produce X that just happens to be we

804
00:48:34,608 --> 00:48:40,818
wrote down the table anything that

805
00:48:36,889 --> 00:48:45,368
produces blank 1 0 has to be Y so blank

806
00:48:40,818 --> 00:48:45,369
1 0 has to be Y

807
00:48:52,090 --> 00:49:04,210
Blanc 1-0 Brent anything that ends in

808
00:48:59,440 --> 00:49:06,519
ten has to be why and then finally

809
00:49:04,210 --> 00:49:25,420
anything that's blank zero zero so this

810
00:49:06,519 --> 00:49:28,559
and this that has to be Z alright that

811
00:49:25,420 --> 00:49:32,970
is not why I wrote Y but I didn't do Y

812
00:49:28,559 --> 00:49:37,150
there we go so we've got two cases for X

813
00:49:32,969 --> 00:49:39,399
two cases for Y and then everything else

814
00:49:37,150 --> 00:49:48,369
is Z because those are the else clauses

815
00:49:39,400 --> 00:49:50,139
right if we're not sure what's going to

816
00:49:48,369 --> 00:49:51,730
happen with the high bit and we want to

817
00:49:50,139 --> 00:49:54,670
ensure we don't read off the table we

818
00:49:51,730 --> 00:49:59,559
can just duplicate this right so we can

819
00:49:54,670 --> 00:50:00,849
do this if we want to and that ensures

820
00:49:59,559 --> 00:50:02,889
that no matter what happens to that

821
00:50:00,849 --> 00:50:07,539
comparison we'll still get the same

822
00:50:02,889 --> 00:50:11,500
values in this particular case you can

823
00:50:07,539 --> 00:50:16,599
also see the effects of this so this is

824
00:50:11,500 --> 00:50:20,559
16 bytes so every four of these is a

825
00:50:16,599 --> 00:50:29,170
cache line right so it's also free to

826
00:50:20,559 --> 00:50:33,250
duplicate the table because it doesn't

827
00:50:29,170 --> 00:50:35,260
cost us anything right it's it's free we

828
00:50:33,250 --> 00:50:38,170
don't care what those values are they're

829
00:50:35,260 --> 00:50:41,020
never gonna get used or they are if we

830
00:50:38,170 --> 00:50:42,670
don't so it's we can make the table be

831
00:50:41,019 --> 00:50:44,739
this big and it doesn't cost us anything

832
00:50:42,670 --> 00:50:45,789
to do so and then we want to try and

833
00:50:44,739 --> 00:50:47,409
look up only into the bottom part

834
00:50:45,789 --> 00:50:51,190
because that obviously saves us a cache

835
00:50:47,409 --> 00:50:53,829
line to cache lines but we don't

836
00:50:51,190 --> 00:50:55,869
actually need to do that so if we have a

837
00:50:53,829 --> 00:50:58,690
situation where it's massively fast or

838
00:50:55,869 --> 00:51:01,000
not - for some reason then we could just

839
00:50:58,690 --> 00:51:02,409
avoid it right but it doesn't seem it

840
00:51:01,000 --> 00:51:04,480
seems like we would really want to not

841
00:51:02,409 --> 00:51:07,710
do that because we don't want to have to

842
00:51:04,480 --> 00:51:07,710
look up into a second half of the tea

843
00:51:18,909 --> 00:51:22,608
so we don't really need that but we can

844
00:51:21,409 --> 00:51:24,048
stick it in there for now just to

845
00:51:22,608 --> 00:51:25,728
eliminate a possible source of error and

846
00:51:24,048 --> 00:51:29,139
then later if we make sure everything's

847
00:51:25,728 --> 00:51:29,139
working correctly we should be fine

848
00:51:29,869 --> 00:51:40,969
this is probably just that and now we

849
00:51:39,409 --> 00:51:44,328
just have to actually pack this stuff

850
00:51:40,969 --> 00:51:46,688
together properly so there's a couple

851
00:51:44,329 --> 00:51:52,309
things one is that we need some way of

852
00:51:46,688 --> 00:51:54,018
actually loading out the like this we

853
00:51:52,309 --> 00:51:56,329
haven't written the other is we just

854
00:51:54,018 --> 00:52:00,108
need to actually produce these values

855
00:51:56,329 --> 00:52:01,699
here right so we need some way of doing

856
00:52:00,108 --> 00:52:05,418
the shuffles and all that stuff

857
00:52:01,699 --> 00:52:08,499
I thought we wrote a shuffle of one kind

858
00:52:05,418 --> 00:52:12,798
or another here here's a shuffle Forex

859
00:52:08,498 --> 00:52:15,408
right so I think that is just is just

860
00:52:12,798 --> 00:52:20,748
all we need absolute value already

861
00:52:15,409 --> 00:52:22,579
exists so absolute value is here so

862
00:52:20,748 --> 00:52:27,048
there you go

863
00:52:22,579 --> 00:52:29,329
and so the sign bit here right we should

864
00:52:27,048 --> 00:52:32,028
probably just go and in fact you can see

865
00:52:29,329 --> 00:52:34,969
it it actually does sign bit from is the

866
00:52:32,028 --> 00:52:42,559
thing so we can just do sign bit from

867
00:52:34,969 --> 00:52:45,798
this on the inside and then we're down

868
00:52:42,559 --> 00:52:48,109
to literally just these two right so

869
00:52:45,798 --> 00:52:49,938
let's start here the clear mask table

870
00:52:48,108 --> 00:52:51,828
loading out a clear mask here the

871
00:52:49,938 --> 00:52:58,248
problem with that is we actually need

872
00:52:51,829 --> 00:53:01,789
this to load as if it were a as if it

873
00:52:58,248 --> 00:53:10,518
were an mm 128 right so we need this to

874
00:53:01,789 --> 00:53:12,230
be an M load UPS like so right and I

875
00:53:10,518 --> 00:53:15,379
don't know

876
00:53:12,230 --> 00:53:17,650
what's what is complaining about tell me

877
00:53:15,380 --> 00:53:17,650
again

878
00:53:17,679 --> 00:53:25,250
cannot convert from a 32x to emaan 20

879
00:53:22,280 --> 00:53:33,530
wet oh sorry

880
00:53:25,250 --> 00:53:36,739
is this it do we have this in here yeah

881
00:53:33,530 --> 00:53:43,240
so it's that because we have our own

882
00:53:36,739 --> 00:53:43,239
type there right so we can do a load I

883
00:53:44,739 --> 00:53:49,098
don't know if we have a mask extract we

884
00:53:47,510 --> 00:53:51,020
should we should really clean this stuff

885
00:53:49,099 --> 00:53:54,769
up because we could do this all with our

886
00:53:51,019 --> 00:53:56,088
own types and it would be fine but I

887
00:53:54,769 --> 00:53:57,949
don't know if we actually have that it

888
00:53:56,088 --> 00:54:00,048
doesn't look like we do so we probably

889
00:53:57,949 --> 00:54:03,529
need to like add that like a thing to

890
00:54:00,048 --> 00:54:05,139
move the mask out but whatever all right

891
00:54:03,530 --> 00:54:08,420
so if we take a look at what's left

892
00:54:05,139 --> 00:54:10,639
here's our load I don't know what's the

893
00:54:08,420 --> 00:54:15,829
problem now

894
00:54:10,639 --> 00:54:18,108
this is comped up P so really we're just

895
00:54:15,829 --> 00:54:20,310
looking at a few last little things here

896
00:54:18,108 --> 00:54:24,000
probed and

897
00:54:20,309 --> 00:54:28,920
this is actually probe and single three

898
00:54:24,000 --> 00:54:30,659
so let's just get rid of that alright so

899
00:54:28,920 --> 00:54:38,099
now we just have to do the packing and

900
00:54:30,659 --> 00:54:39,569
the unaligned copy right and that's just

901
00:54:38,099 --> 00:54:42,659
to get this thing out into something

902
00:54:39,570 --> 00:54:45,660
that the rest of the code can use so

903
00:54:42,659 --> 00:54:47,579
when we want to do this packing I'm

904
00:54:45,659 --> 00:54:53,190
assuming this is literally just going to

905
00:54:47,579 --> 00:54:55,549
be some of these so if we do packed XYZ

906
00:54:53,190 --> 00:55:01,380
we would first need to do is shuffle

907
00:54:55,550 --> 00:55:03,420
where we have the scale D here and what

908
00:55:01,380 --> 00:55:07,660
we would want to do I guess is say well

909
00:55:03,420 --> 00:55:10,789
let's start by producing an XY vector

910
00:55:07,659 --> 00:55:10,789
[Music]

911
00:55:19,699 --> 00:55:35,699
we'd probably have to use the shuffler

912
00:55:22,380 --> 00:55:37,050
here as well so this is probably like so

913
00:55:35,699 --> 00:55:40,739
we're probably not gonna get away with

914
00:55:37,050 --> 00:55:43,200
anything other than doing that if we

915
00:55:40,739 --> 00:55:51,618
produce the XY vector here this would

916
00:55:43,199 --> 00:55:58,679
just be like okay you know it's just so

917
00:55:51,619 --> 00:56:00,570
that would be xx YY which is not really

918
00:55:58,679 --> 00:56:08,940
what we want so this is probably not

919
00:56:00,570 --> 00:56:12,840
right what we probably want is mm unpack

920
00:56:08,940 --> 00:56:15,679
I hate these intrinsic they're so obtuse

921
00:56:12,840 --> 00:56:18,480
hold on a second

922
00:56:15,679 --> 00:56:21,230
well it's the instructions learn and up

923
00:56:18,480 --> 00:56:21,230
twos to be fair

924
00:56:27,170 --> 00:56:39,119
okay so it's unpack lo PS is what we

925
00:56:32,159 --> 00:56:42,000
would want and so that'll give us X Y X

926
00:56:39,119 --> 00:56:45,659
Y right

927
00:56:42,000 --> 00:56:47,789
and then we just want the Z value to

928
00:56:45,659 --> 00:57:02,190
come in at the end so then we would just

929
00:56:47,789 --> 00:57:05,190
do like shuffle for X with the packed X

930
00:57:02,190 --> 00:57:09,119
Y Z taking the bottom two as you expect

931
00:57:05,190 --> 00:57:14,099
and then the Z value up on top just

932
00:57:09,119 --> 00:57:17,039
comes from scale dot Z right and we

933
00:57:14,099 --> 00:57:18,650
don't care what it puts in there you

934
00:57:17,039 --> 00:57:22,800
know I'm saying

935
00:57:18,650 --> 00:57:26,700
so that actually will have a Z value on

936
00:57:22,800 --> 00:57:30,450
top of it when we do the shuffle here

937
00:57:26,699 --> 00:57:34,649
let's think about this so to produce Y Z

938
00:57:30,449 --> 00:57:38,159
X from X Y Z we want Y Z and then we

939
00:57:34,650 --> 00:57:41,730
want to produce X and the final value

940
00:57:38,159 --> 00:57:44,579
since this is Z Z if we want to do Z is

941
00:57:41,730 --> 00:57:48,960
never greater than Z right what we would

942
00:57:44,579 --> 00:57:53,940
want to do is take the Z again so I

943
00:57:48,960 --> 00:57:58,559
think that means we can just say verify

944
00:57:53,940 --> 00:58:01,889
that bit four is always zero or I should

945
00:57:58,559 --> 00:58:07,049
say bit three is always zero and then

946
00:58:01,889 --> 00:58:09,900
remove this half the table so I think

947
00:58:07,050 --> 00:58:14,280
that's okay right and I think that gives

948
00:58:09,900 --> 00:58:16,440
us everything that we need there and I

949
00:58:14,280 --> 00:58:19,800
don't know that we again we don't really

950
00:58:16,440 --> 00:58:24,929
have one of those so it's unfortunate

951
00:58:19,800 --> 00:58:26,789
but whatever so the last thing that we

952
00:58:24,929 --> 00:58:29,009
need to do is a way to actually store

953
00:58:26,789 --> 00:58:30,599
this out let me just see what we've got

954
00:58:29,010 --> 00:58:33,510
for that already because we probably

955
00:58:30,599 --> 00:58:35,009
have a store you yeah so it's this so

956
00:58:33,510 --> 00:58:36,750
it's really just that we're going to

957
00:58:35,010 --> 00:58:37,340
take this value and we're gonna stick it

958
00:58:36,750 --> 00:58:40,010
in

959
00:58:37,340 --> 00:58:44,570
the slot that we made for it there it's

960
00:58:40,010 --> 00:58:45,050
probe and single for and then I think

961
00:58:44,570 --> 00:58:48,230
we're good

962
00:58:45,050 --> 00:58:51,200
so again not the world's greatest

963
00:58:48,230 --> 00:58:51,920
routine it's pretty ugly but if you

964
00:58:51,199 --> 00:58:54,049
actually look at the number of

965
00:58:51,920 --> 00:58:55,849
instructions that's not horrible could

966
00:58:54,050 --> 00:58:58,340
we probably get that down by you know

967
00:58:55,849 --> 00:59:00,230
even possibly get it down to about half

968
00:58:58,340 --> 00:59:02,120
the instructions if we really ground on

969
00:59:00,230 --> 00:59:04,940
this probably honestly we probably could

970
00:59:02,119 --> 00:59:06,230
do we care probably not because it's

971
00:59:04,940 --> 00:59:10,010
going to be stilled I think be quite

972
00:59:06,230 --> 00:59:12,409
small compared to the other way this is

973
00:59:10,010 --> 00:59:13,820
happening like this the number of ops

974
00:59:12,409 --> 00:59:15,559
this has to do is probably still gonna

975
00:59:13,820 --> 00:59:17,150
be quite a bit more but we don't know

976
00:59:15,559 --> 00:59:19,849
that for sure so we probably should

977
00:59:17,150 --> 00:59:21,470
grind on that at some point and try to

978
00:59:19,849 --> 00:59:24,349
clean it up to as clean as it possibly

979
00:59:21,469 --> 00:59:25,939
can be but I think we're good now in

980
00:59:24,349 --> 00:59:29,690
terms of actually having grid raycast

981
00:59:25,940 --> 00:59:31,400
produce reasonable values now the

982
00:59:29,690 --> 00:59:35,539
problem we're gonna have now is we need

983
00:59:31,400 --> 00:59:37,789
the actual tables that this uses so the

984
00:59:35,539 --> 00:59:39,590
grid raycast routine needs to actually

985
00:59:37,789 --> 00:59:42,800
have this stuff in it

986
00:59:39,590 --> 00:59:46,039
and if we look at how this is set up we

987
00:59:42,800 --> 00:59:48,769
need so in here for example these tables

988
00:59:46,039 --> 00:59:51,590
like the lighting spatial grid node and

989
00:59:48,769 --> 00:59:55,039
the lighting spatial grid leaf these

990
00:59:51,590 --> 00:59:57,800
things all now have to actually be set

991
00:59:55,039 --> 01:00:01,789
up right so we need all of these things

992
00:59:57,800 --> 01:00:04,880
to get generated somehow and we don't

993
01:00:01,789 --> 01:00:06,230
have a way of doing that yet so that's

994
01:00:04,880 --> 01:00:08,809
one thing we have to do and then the

995
01:00:06,230 --> 01:00:11,030
other thing we have to do is this walk

996
01:00:08,809 --> 01:00:14,210
table here where we're going to load up

997
01:00:11,030 --> 01:00:16,040
what the actual leaves are that we walk

998
01:00:14,210 --> 01:00:19,970
along that's also something that we have

999
01:00:16,039 --> 01:00:24,679
to do that table is a known table so

1000
01:00:19,969 --> 01:00:30,859
it's a table that we just have like when

1001
01:00:24,679 --> 01:00:33,619
we actually have our HH sphere code here

1002
01:00:30,860 --> 01:00:37,039
that that generates the spheres each one

1003
01:00:33,619 --> 01:00:40,909
of these is something that can now also

1004
01:00:37,039 --> 01:00:43,699
output one of these walk tables so we

1005
01:00:40,909 --> 01:00:46,069
will be able to get the walk table just

1006
01:00:43,699 --> 01:00:47,809
out of the spheres themselves and if we

1007
01:00:46,070 --> 01:00:50,130
look at like what HH sphere is

1008
01:00:47,809 --> 01:00:53,699
generating so

1009
01:00:50,130 --> 01:00:56,400
if we look for example in here where

1010
01:00:53,699 --> 01:00:59,399
it's doing these light sampling sphere

1011
01:00:56,400 --> 01:01:02,190
float tables this thing so when we do a

1012
01:00:59,400 --> 01:01:03,930
light sampling sphere in addition to the

1013
01:01:02,190 --> 01:01:10,019
sample Direction thing that we'll have

1014
01:01:03,929 --> 01:01:13,288
here it would also have a it would also

1015
01:01:10,018 --> 01:01:16,108
have a way of looking up the walk tables

1016
01:01:13,289 --> 01:01:18,749
for those directions so much the same

1017
01:01:16,108 --> 01:01:23,369
way as it has light sampling rate

1018
01:01:18,748 --> 01:01:26,478
bundles purse fear also what is this

1019
01:01:23,369 --> 01:01:26,479
padding for

1020
01:01:33,469 --> 01:01:38,169
I have no idea why there is padding in

1021
01:01:36,139 --> 01:01:38,170
here

1022
01:01:50,380 --> 01:02:01,329
I do not know what the point of that is

1023
01:01:56,429 --> 01:02:02,799
so that is beyond me so anyway you're

1024
01:02:01,329 --> 01:02:05,319
gonna load up the sample direction here

1025
01:02:02,800 --> 01:02:11,080
and then you also need another piece of

1026
01:02:05,320 --> 01:02:14,620
information which is the padding for I'm

1027
01:02:11,079 --> 01:02:16,750
sorry the walk table for these things so

1028
01:02:14,619 --> 01:02:19,299
what we probably would want to do

1029
01:02:16,750 --> 01:02:21,010
because like I said we're not casting

1030
01:02:19,300 --> 01:02:23,560
for raise at a time anymore if we do

1031
01:02:21,010 --> 01:02:27,040
this we would probably want to make a

1032
01:02:23,559 --> 01:02:30,340
separate kind of table and that table

1033
01:02:27,039 --> 01:02:34,440
would actually be you know a different

1034
01:02:30,340 --> 01:02:41,320
type of structure so in here it's like

1035
01:02:34,440 --> 01:02:50,050
light sample direction it would have in

1036
01:02:41,320 --> 01:02:56,559
it the direction the count and the

1037
01:02:50,050 --> 01:03:00,100
offset so you basically load these up

1038
01:02:56,559 --> 01:03:02,769
and they tell you like we're in the walk

1039
01:03:00,099 --> 01:03:04,929
table you're looking and what the actual

1040
01:03:02,769 --> 01:03:09,150
thing is so you'd load this would

1041
01:03:04,929 --> 01:03:12,639
literally be you know one 16 byte value

1042
01:03:09,150 --> 01:03:15,730
that has three floats for the direction

1043
01:03:12,639 --> 01:03:18,909
and an offset and account for the walk

1044
01:03:15,730 --> 01:03:23,130
this count is not going to be actual 16

1045
01:03:18,909 --> 01:03:27,670
bits you know it's it's more like this

1046
01:03:23,130 --> 01:03:28,990
right so it's hard to say exactly you

1047
01:03:27,670 --> 01:03:31,840
know do you need anything else in there

1048
01:03:28,989 --> 01:03:33,129
I'm not sure but the walk offset would

1049
01:03:31,840 --> 01:03:34,360
would after be 16 bits because there's

1050
01:03:33,130 --> 01:03:36,760
gonna be probably more than 200

1051
01:03:34,360 --> 01:03:37,090
centuries into this table but there you

1052
01:03:36,760 --> 01:03:39,430
go

1053
01:03:37,090 --> 01:03:41,590
so what you would actually be doing is

1054
01:03:39,429 --> 01:03:43,809
you'd be when you call grid raycast

1055
01:03:41,590 --> 01:03:48,820
you'd actually just be giving it this

1056
01:03:43,809 --> 01:03:50,590
instead would be my guess so rather than

1057
01:03:48,820 --> 01:03:53,700
any of this stuff you would probably do

1058
01:03:50,590 --> 01:03:53,700
something more like this

1059
01:03:59,949 --> 01:04:06,730
like that and then you would produce

1060
01:04:03,710 --> 01:04:08,690
these other values oops

1061
01:04:06,730 --> 01:04:12,740
you would produce these other values

1062
01:04:08,690 --> 01:04:16,130
synthetically by like unpacking so you

1063
01:04:12,739 --> 01:04:19,899
would say the radial is the sample

1064
01:04:16,130 --> 01:04:21,500
direction or this would actually be like

1065
01:04:19,900 --> 01:04:23,420
the rady

1066
01:04:21,500 --> 01:04:26,420
this whole thing is now the information

1067
01:04:23,420 --> 01:04:28,039
about the direction so the radial is

1068
01:04:26,420 --> 01:04:31,550
just the radii comes out of the sample

1069
01:04:28,039 --> 01:04:33,289
direction the walk count is just the

1070
01:04:31,550 --> 01:04:36,980
sample directions walk count so you're

1071
01:04:33,289 --> 01:04:40,880
just pulling that out and then the walk

1072
01:04:36,980 --> 01:04:48,010
table that you're looking in is just

1073
01:04:40,880 --> 01:04:48,010
whatever the sample Direction walk

1074
01:04:48,340 --> 01:05:07,250
offset is off of the solutions block

1075
01:04:54,500 --> 01:05:11,960
table right and I think that's it these

1076
01:05:07,250 --> 01:05:18,559
are constants actually so you don't

1077
01:05:11,960 --> 01:05:22,070
actually need this so that's probably

1078
01:05:18,559 --> 01:05:26,539
honestly just a global table that you're

1079
01:05:22,070 --> 01:05:33,369
walking through and I don't think you

1080
01:05:26,539 --> 01:05:36,708
need anything else yeah

1081
01:05:33,369 --> 01:05:39,440
all right so I think that's all you

1082
01:05:36,708 --> 01:05:41,899
would need to do the walk table here is

1083
01:05:39,440 --> 01:05:46,338
just a series of lookups so this would

1084
01:05:41,900 --> 01:05:48,380
be like a global u16 light sampling lakh

1085
01:05:46,338 --> 01:05:52,849
table and you just be looking up in

1086
01:05:48,380 --> 01:05:57,019
there and it's um who knows what this

1087
01:05:52,849 --> 01:05:59,989
value is right it's something we don't

1088
01:05:57,018 --> 01:06:01,548
know what it is and then this routine

1089
01:05:59,989 --> 01:06:06,759
would just operate if it had this

1090
01:06:01,548 --> 01:06:10,659
information I think that's what we want

1091
01:06:06,759 --> 01:06:10,659
looks right to me

1092
01:06:11,469 --> 01:06:19,039
yeah so I'm relatively happy with that I

1093
01:06:15,498 --> 01:06:26,139
think that's pretty good I don't

1094
01:06:19,039 --> 01:06:30,819
actually know I don't actually know

1095
01:06:26,139 --> 01:06:37,900
instinctively how well we've done here

1096
01:06:30,818 --> 01:06:37,900
maybe quite poor maybe not I'm not sure

1097
01:06:47,230 --> 01:06:52,159
this part looks very good I mean I could

1098
01:06:50,480 --> 01:06:53,449
be wrong about that assessment but this

1099
01:06:52,159 --> 01:07:00,618
part looks really good

1100
01:06:53,449 --> 01:07:03,068
you've got like one shuffle that's just

1101
01:07:00,619 --> 01:07:06,079
a shuffle so that's like one instruction

1102
01:07:03,068 --> 01:07:11,150
you've got another instruction another

1103
01:07:06,079 --> 01:07:13,339
instruction another instruction so

1104
01:07:11,150 --> 01:07:17,269
you're talking about four instructions

1105
01:07:13,338 --> 01:07:23,869
maybe latency like what like six maybe

1106
01:07:17,269 --> 01:07:25,670
seven cycles to downshift to no like

1107
01:07:23,869 --> 01:07:28,039
okay now we have something that can

1108
01:07:25,670 --> 01:07:28,750
produce the correct lane out of anything

1109
01:07:28,039 --> 01:07:31,639
we want

1110
01:07:28,750 --> 01:07:32,568
so that part seems pretty good I don't

1111
01:07:31,639 --> 01:07:34,578
know how much better you're

1112
01:07:32,568 --> 01:07:38,719
realistically going to ever get there I

1113
01:07:34,579 --> 01:07:42,410
mean seven cycles is pretty darn low so

1114
01:07:38,719 --> 01:07:45,019
I think mostly we're talking about this

1115
01:07:42,409 --> 01:07:49,279
part here as being the questionable part

1116
01:07:45,019 --> 01:07:52,880
and the bottom half looks fine the top

1117
01:07:49,280 --> 01:07:56,769
half like getting that normal just looks

1118
01:07:52,880 --> 01:07:56,769
really expensive you know

1119
01:08:26,079 --> 01:08:31,640
so here's some thoughts because I guess

1120
01:08:29,119 --> 01:08:34,550
I'd like to save I'd probably like to

1121
01:08:31,640 --> 01:08:38,270
save writing the table stuff for

1122
01:08:34,550 --> 01:08:45,880
tomorrow let's just think about this

1123
01:08:38,270 --> 01:08:49,040
normal computation a little bit more as

1124
01:08:45,880 --> 01:08:56,409
the tangle of cords on my desk grows

1125
01:08:49,039 --> 01:09:03,229
more and more absurd so if we were to go

1126
01:08:56,409 --> 01:09:10,039
here and I was to sort of blather on

1127
01:09:03,229 --> 01:09:15,079
about this particular problem what I

1128
01:09:10,039 --> 01:09:22,909
would say is like okay you know I know a

1129
01:09:15,079 --> 01:09:25,579
lot of things about this answer how many

1130
01:09:22,909 --> 01:09:29,439
of them can I use so if we imagine

1131
01:09:25,579 --> 01:09:29,439
here's our axis system

1132
01:09:36,238 --> 01:09:43,718
like so I what I know about this is if

1133
01:09:41,710 --> 01:09:46,179
you imagine whatever the raid erection

1134
01:09:43,719 --> 01:09:49,329
is so there's a Rea direction and it's

1135
01:09:46,179 --> 01:09:52,539
pointing in some way the normal is

1136
01:09:49,329 --> 01:09:54,158
always going to have the same sign as -

1137
01:09:52,539 --> 01:09:55,198
the raid erection because it can't not

1138
01:09:54,158 --> 01:09:59,589
right

1139
01:09:55,198 --> 01:10:01,599
so the normal whichever one it is when

1140
01:09:59,590 --> 01:10:04,960
we look here it can only be one of these

1141
01:10:01,600 --> 01:10:08,500
things so if the Ray is coming in at

1142
01:10:04,960 --> 01:10:19,658
like you know in this case what is it

1143
01:10:08,500 --> 01:10:21,488
it's negative z+ X right negative Y then

1144
01:10:19,658 --> 01:10:24,399
we know that the normal has to be the

1145
01:10:21,488 --> 01:10:29,169
opposite of that it has to be this sign

1146
01:10:24,399 --> 01:10:30,819
right so negative something could be

1147
01:10:29,170 --> 01:10:32,350
zero but it's negative something

1148
01:10:30,819 --> 01:10:34,840
positive something positive something

1149
01:10:32,350 --> 01:10:36,130
even if it's negative zero and that's

1150
01:10:34,840 --> 01:10:42,550
true right because this would be

1151
01:10:36,130 --> 01:10:45,789
positive X right wait how did I write

1152
01:10:42,550 --> 01:10:48,310
positive X this is going Wow slow

1153
01:10:45,789 --> 01:10:51,698
morning this is going the other way it's

1154
01:10:48,310 --> 01:10:55,659
going negative x negative x negative Y

1155
01:10:51,698 --> 01:10:57,819
negative Z so it's all positive right

1156
01:10:55,658 --> 01:10:59,259
and that is exactly what you see right

1157
01:10:57,819 --> 01:11:00,819
those are the only three normals you

1158
01:10:59,260 --> 01:11:05,230
could hit you can't hit these sides

1159
01:11:00,819 --> 01:11:08,198
because they're back facing right so we

1160
01:11:05,229 --> 01:11:10,709
know the sign is just whatever the

1161
01:11:08,198 --> 01:11:14,319
flipped bits of the raid erection were

1162
01:11:10,710 --> 01:11:20,439
so we can compute those directly so then

1163
01:11:14,319 --> 01:11:23,500
the only thing we need is to is to mask

1164
01:11:20,439 --> 01:11:27,488
out we just need to produce something

1165
01:11:23,500 --> 01:11:31,510
that masks out two of these things so we

1166
01:11:27,488 --> 01:11:34,329
would do if we had the value 1 1 1 we

1167
01:11:31,510 --> 01:11:41,289
can produce the correct signs by oaring

1168
01:11:34,329 --> 01:11:43,539
in the sign sorry by by oaring in the

1169
01:11:41,289 --> 01:11:48,880
inverse sign bit so we would not and

1170
01:11:43,539 --> 01:11:51,130
then or so like you know not or gives us

1171
01:11:48,880 --> 01:11:53,719
the sign bit

1172
01:11:51,130 --> 01:11:58,010
so that's two instructions for the sign

1173
01:11:53,719 --> 01:12:00,590
bit right but two instructions per

1174
01:11:58,010 --> 01:12:06,610
channel because there's XY and z

1175
01:12:00,590 --> 01:12:10,309
channels we could pack them I guess and

1176
01:12:06,609 --> 01:12:12,589
maybe we want to I don't know so we

1177
01:12:10,309 --> 01:12:16,940
packed those maybe we packed those first

1178
01:12:12,590 --> 01:12:20,300
then we do this line oh and we it's free

1179
01:12:16,939 --> 01:12:22,279
to pack them because we need them to be

1180
01:12:20,300 --> 01:12:24,139
separated well I don't know that we

1181
01:12:22,279 --> 01:12:27,109
actually do need them to be separated at

1182
01:12:24,139 --> 01:12:33,020
the moment for compute voxel we do

1183
01:12:27,109 --> 01:12:34,609
separate them yeah so hard to say but

1184
01:12:33,020 --> 01:12:36,500
something like two instructions for that

1185
01:12:34,609 --> 01:12:40,130
and so we're just looking for a good

1186
01:12:36,500 --> 01:12:42,469
cheap way to produce the mask that is

1187
01:12:40,130 --> 01:12:46,130
basically like then we need to do an and

1188
01:12:42,469 --> 01:12:48,078
here to knock out two of these right so

1189
01:12:46,130 --> 01:12:54,050
we need to knock out two of the normals

1190
01:12:48,078 --> 01:12:56,920
somehow two of the components and in

1191
01:12:54,050 --> 01:12:56,920
order to knock that out

1192
01:13:13,118 --> 01:13:19,130
in order to knock that out we really

1193
01:13:16,130 --> 01:13:20,420
kind of that's where we really start to

1194
01:13:19,130 --> 01:13:24,199
fall down because that's why we're

1195
01:13:20,420 --> 01:13:25,729
having to compute like the difference

1196
01:13:24,198 --> 01:13:29,118
between these two which is what we were

1197
01:13:25,729 --> 01:13:32,510
doing before and then we had to figure

1198
01:13:29,118 --> 01:13:35,868
out like well okay you know we we need

1199
01:13:32,510 --> 01:13:37,248
to normalize that by the box radius in

1200
01:13:35,868 --> 01:13:49,658
order to figure out which ones we should

1201
01:13:37,248 --> 01:13:53,139
get rid of so is there some better way

1202
01:13:49,658 --> 01:13:53,138
to do it

1203
01:14:45,000 --> 01:14:48,599
and enough

1204
01:15:05,359 --> 01:15:12,659
so one thing I will say is that it would

1205
01:15:09,630 --> 01:15:16,829
have been we could have gotten rid of

1206
01:15:12,659 --> 01:15:21,210
these P chef B's if it weren't for the

1207
01:15:16,829 --> 01:15:24,559
fact that the hitbox min and Max are not

1208
01:15:21,210 --> 01:15:24,560
P shift right

1209
01:15:48,479 --> 01:15:53,559
so here's another question are we

1210
01:15:51,880 --> 01:15:56,020
thinking about this at the wrong point

1211
01:15:53,560 --> 01:15:58,989
in the code so one of the things you can

1212
01:15:56,020 --> 01:16:08,380
see here is what we do is we keep the

1213
01:15:58,988 --> 01:16:11,428
box min in the Box max right but if we

1214
01:16:08,380 --> 01:16:14,199
look at what we actually determined here

1215
01:16:11,429 --> 01:16:19,449
one of the things that you can see is

1216
01:16:14,198 --> 01:16:27,509
the team in 3 and the team acts 3 that

1217
01:16:19,448 --> 01:16:27,509
was previously keeping so we know like

1218
01:16:33,010 --> 01:16:40,310
we know like we've done a comparison

1219
01:16:37,279 --> 01:16:46,130
here and we know we've picked a

1220
01:16:40,310 --> 01:16:56,420
particular T value right so we know

1221
01:16:46,130 --> 01:16:57,679
whether we've hit like I'm just trying

1222
01:16:56,420 --> 01:16:59,449
to look it through this through you can

1223
01:16:57,679 --> 01:17:04,369
see us loading the min and Max in right

1224
01:16:59,448 --> 01:17:06,139
and then we take the box min and Max and

1225
01:17:04,369 --> 01:17:08,689
we multiply by the inverse raid

1226
01:17:06,140 --> 01:17:12,940
dimension to see when we would hit the

1227
01:17:08,689 --> 01:17:12,939
mins and the maxes of these boxes

1228
01:17:31,300 --> 01:17:49,300
so maybe if we just saved some of that

1229
01:17:44,260 --> 01:17:52,050
instead we could extract the normal

1230
01:17:49,300 --> 01:17:52,050
directly

1231
01:18:04,039 --> 01:18:08,729
because the team in and the team

1232
01:18:06,300 --> 01:18:16,250
maxvalue are telling us the answer in a

1233
01:18:08,729 --> 01:18:18,599
sense right when we produce these two

1234
01:18:16,250 --> 01:18:23,609
we're saving you know when we produce

1235
01:18:18,600 --> 01:18:25,949
this team in in this team acts we're

1236
01:18:23,609 --> 01:18:28,259
producing them by comparing the X to the

1237
01:18:25,948 --> 01:18:31,500
Y and the Z and taking whichever one is

1238
01:18:28,260 --> 01:18:37,980
maximum but whichever one of those was

1239
01:18:31,500 --> 01:18:40,939
maximum is the answer as to who was the

1240
01:18:37,979 --> 01:18:40,939
normal right

1241
01:19:04,679 --> 01:19:14,998
and these are expensive

1242
01:19:07,828 --> 01:19:17,488
I mean storing this is expensive so it

1243
01:19:14,998 --> 01:19:20,448
seems like what maybe we could do is

1244
01:19:17,488 --> 01:19:22,948
just say what if we don't store this

1245
01:19:20,448 --> 01:19:26,698
like that's just not something we keep

1246
01:19:22,948 --> 01:19:30,379
and we do like a max extract a mask

1247
01:19:26,698 --> 01:19:30,379
extract on one of these

1248
01:19:43,809 --> 01:19:48,889
this feels like the right solution it's

1249
01:19:46,908 --> 01:19:53,019
just kind of hard in my head to

1250
01:19:48,889 --> 01:19:53,020
understand what's happening

1251
01:20:13,510 --> 01:20:23,980
but I think this will be better because

1252
01:20:16,760 --> 01:20:23,980
that is six selects operations right

1253
01:20:24,149 --> 01:20:27,259
[Music]

1254
01:20:30,819 --> 01:20:37,689
which by the way don't have to be done

1255
01:20:35,090 --> 01:20:37,690
this way anymore

1256
01:20:43,479 --> 01:20:50,329
we can do this in one instruction

1257
01:20:45,859 --> 01:20:54,380
instead of three instructions but even

1258
01:20:50,329 --> 01:20:59,420
so it's six instructions here and they

1259
01:20:54,380 --> 01:21:00,949
don't pipeline they are all on port five

1260
01:20:59,420 --> 01:21:05,329
fire member correctly like basically

1261
01:21:00,949 --> 01:21:07,159
shuffles are always port 5 or blends

1262
01:21:05,329 --> 01:21:10,930
right no wait you know that might not be

1263
01:21:07,159 --> 01:21:10,930
true let me see

1264
01:21:19,329 --> 01:21:30,908
nope I take it back so they do stack all

1265
01:21:27,939 --> 01:21:35,939
right so hard to say so those are pretty

1266
01:21:30,908 --> 01:21:39,009
cheap so it's only like two instructions

1267
01:21:35,939 --> 01:21:40,419
so I guess it would be pretty hard for

1268
01:21:39,010 --> 01:21:42,219
us to do unless we were really clever

1269
01:21:40,420 --> 01:21:43,539
it'd be pretty hard for us to do we'd

1270
01:21:42,219 --> 01:21:50,789
have to do it in two instructions in

1271
01:21:43,539 --> 01:21:50,789
order to not suck so how do we do that

1272
01:21:54,119 --> 01:22:06,399
how do we do that the team in 3x team in

1273
01:22:02,770 --> 01:22:08,550
3y team in 3z where we pick one of those

1274
01:22:06,399 --> 01:22:11,788
out

1275
01:22:08,550 --> 01:22:11,788
[Music]

1276
01:22:38,329 --> 01:22:41,750
yeah I don't know

1277
01:22:48,079 --> 01:22:54,260
I mean fundamentally we just need some

1278
01:22:51,800 --> 01:22:56,930
way of figuring out which one we picked

1279
01:22:54,260 --> 01:23:00,730
but we've filtered the values down to

1280
01:22:56,930 --> 01:23:04,100
get whichever one is the the actual hit

1281
01:23:00,729 --> 01:23:07,129
but we don't actually know which one we

1282
01:23:04,100 --> 01:23:08,720
picked right if we knew throughout these

1283
01:23:07,130 --> 01:23:12,829
operate like we're just keeping the

1284
01:23:08,720 --> 01:23:15,199
minimum value if we knew throughout

1285
01:23:12,829 --> 01:23:21,819
these operations which one we'd actually

1286
01:23:15,199 --> 01:23:21,819
taken that would do it but we don't

1287
01:23:28,659 --> 01:23:31,659
however

1288
01:23:41,769 --> 01:23:45,519
maybe that's not true

1289
01:23:51,899 --> 01:24:00,500
okay I think I've got it I think I've

1290
01:23:59,729 --> 01:24:04,469
got it

1291
01:24:00,500 --> 01:24:08,069
this may be me going totally nuts here

1292
01:24:04,470 --> 01:24:10,409
but hear me out previously we were

1293
01:24:08,069 --> 01:24:12,929
restoring six values that means if we

1294
01:24:10,409 --> 01:24:15,059
start any less than six values or

1295
01:24:12,930 --> 01:24:20,329
anywhere up to six values we haven't

1296
01:24:15,060 --> 01:24:20,330
taken a loss suppose we were to store

1297
01:24:20,449 --> 01:24:23,720
team in

1298
01:24:31,729 --> 01:24:46,459
well and actually also if we look here

1299
01:24:34,399 --> 01:24:49,939
we only take T min so T inside

1300
01:24:46,460 --> 01:24:52,270
we don't use so if you're inside

1301
01:24:49,939 --> 01:24:55,219
something casting out we ignore it right

1302
01:24:52,270 --> 01:24:58,670
in other words this is not used anymore

1303
01:24:55,220 --> 01:25:02,030
that was only for boxes that were like

1304
01:24:58,670 --> 01:25:05,449
container boxes so we don't need T

1305
01:25:02,029 --> 01:25:19,009
inside anymore so we're only taking the

1306
01:25:05,449 --> 01:25:23,239
T min value right so T Max is only there

1307
01:25:19,010 --> 01:25:26,770
as a check for collision we never record

1308
01:25:23,239 --> 01:25:31,729
that value we will only record team in

1309
01:25:26,770 --> 01:25:35,360
right we're actually loops we're

1310
01:25:31,729 --> 01:25:43,069
actually questioning that as well like

1311
01:25:35,359 --> 01:25:44,329
maybe we don't actually need that but I

1312
01:25:43,069 --> 01:25:45,289
don't know we'll leave that because we

1313
01:25:44,329 --> 01:25:47,600
don't really care about that for now

1314
01:25:45,289 --> 01:25:50,630
it's one to ops whatever we'll look at

1315
01:25:47,600 --> 01:25:53,060
that later um so what I would say is I

1316
01:25:50,630 --> 01:25:58,100
think we can do this since we only

1317
01:25:53,060 --> 01:26:07,480
record T min we can instead do a hit

1318
01:25:58,100 --> 01:26:14,810
like like hit team in and hit team in

1319
01:26:07,479 --> 01:26:20,179
X&amp;Y right so we could do this and what

1320
01:26:14,810 --> 01:26:24,789
we would do is just store when we had

1321
01:26:20,180 --> 01:26:24,789
done those comparisons just remember

1322
01:26:25,029 --> 01:26:28,630
what these were

1323
01:26:36,560 --> 01:26:41,880
right so we're just like all we're doing

1324
01:26:40,199 --> 01:26:45,809
there is remembering those two values

1325
01:26:41,880 --> 01:26:50,250
using two instructions to blend

1326
01:26:45,810 --> 01:26:54,180
instructions right so it's super super

1327
01:26:50,250 --> 01:26:56,279
super cheap we could recalculate them at

1328
01:26:54,180 --> 01:26:58,440
the end even if we wanted to I suppose

1329
01:26:56,279 --> 01:27:01,619
by just story but will mean F store the

1330
01:26:58,439 --> 01:27:15,989
Box know so yeah so right I mean I think

1331
01:27:01,619 --> 01:27:18,300
that's super cheap so we're storing way

1332
01:27:15,989 --> 01:27:22,559
less there we're just storing just with

1333
01:27:18,300 --> 01:27:25,170
the team in X and the team in Y are at

1334
01:27:22,560 --> 01:27:32,550
that point at the end when we get to

1335
01:27:25,170 --> 01:27:35,340
here we would say we don't need any of

1336
01:27:32,550 --> 01:27:39,440
this we don't need this we don't need

1337
01:27:35,340 --> 01:27:43,050
that or any of this we need none of that

1338
01:27:39,439 --> 01:27:49,319
all we actually have to do is just take

1339
01:27:43,050 --> 01:27:53,039
our hit team in and hit T max I'm sorry

1340
01:27:49,319 --> 01:27:57,779
hit team in X and hit team in Y and we

1341
01:27:53,039 --> 01:28:01,189
know that one of these X Y or Z will be

1342
01:27:57,779 --> 01:28:05,670
equal to the actual answer that we got

1343
01:28:01,189 --> 01:28:08,069
right so in other words when we found a

1344
01:28:05,670 --> 01:28:11,520
minimum T value we know that was either

1345
01:28:08,069 --> 01:28:13,469
the X the Y or the Z so at that point we

1346
01:28:11,520 --> 01:28:15,930
should be able to say well whatever our

1347
01:28:13,470 --> 01:28:20,789
T Ray was because our T ray has already

1348
01:28:15,930 --> 01:28:29,000
been shuffled up here we should be able

1349
01:28:20,789 --> 01:28:29,000
to say well figure out which one it was

1350
01:28:33,060 --> 01:28:39,100
because either it's going to be hit team

1351
01:28:35,859 --> 01:28:44,710
in X hit team in Y or neither of the two

1352
01:28:39,100 --> 01:28:47,560
in which case it was Z right we already

1353
01:28:44,710 --> 01:28:50,230
know the sign because the sign comes

1354
01:28:47,560 --> 01:28:55,470
from whatever the direction of the Ray

1355
01:28:50,229 --> 01:29:00,399
was right so if we extract the sign bit

1356
01:28:55,470 --> 01:29:04,630
from whatever the Ray dirrection is it's

1357
01:29:00,399 --> 01:29:06,879
the opposite sign of this that's all we

1358
01:29:04,630 --> 01:29:09,699
needed to know right it's whatever the

1359
01:29:06,880 --> 01:29:12,489
opposite sign of the Ray direction was

1360
01:29:09,699 --> 01:29:17,010
now we would need to pack the Ray

1361
01:29:12,489 --> 01:29:17,010
direction so we'd still need to do this

1362
01:29:18,810 --> 01:29:24,270
but otherwise it's it's correct and if

1363
01:29:21,909 --> 01:29:26,529
we wanted to keep all this wide we could

1364
01:29:24,270 --> 01:29:37,420
none of this is necessary now

1365
01:29:26,529 --> 01:29:48,009
I don't think pretty sure I don't think

1366
01:29:37,420 --> 01:29:50,470
we need any of this it's so we can get

1367
01:29:48,010 --> 01:29:52,690
the sign bit out of here and we can do

1368
01:29:50,470 --> 01:29:54,039
that I don't know exactly which ways we

1369
01:29:52,689 --> 01:29:55,179
want to do that I mean you can sort of

1370
01:29:54,039 --> 01:29:58,119
see it's a little bit of a mess it

1371
01:29:55,180 --> 01:30:04,720
depends on how you want to leave it but

1372
01:29:58,119 --> 01:30:06,069
you know we can either keep it wide or

1373
01:30:04,720 --> 01:30:08,440
we can collapse it down and I'd really

1374
01:30:06,069 --> 01:30:11,529
just don't know which one makes the most

1375
01:30:08,439 --> 01:30:13,089
sense I feel like maybe just keeping

1376
01:30:11,529 --> 01:30:14,679
everything wide because as soon as you

1377
01:30:13,090 --> 01:30:16,930
then start operating with them again

1378
01:30:14,680 --> 01:30:19,659
they're they need to be wired anyway and

1379
01:30:16,930 --> 01:30:21,970
blown out into different registers so it

1380
01:30:19,659 --> 01:30:24,789
may be that all of the the collapsing

1381
01:30:21,970 --> 01:30:27,460
down is just a fool's errand and that

1382
01:30:24,789 --> 01:30:32,769
you should just have compute voxel

1383
01:30:27,460 --> 01:30:35,230
radians at take wide in that's probably

1384
01:30:32,770 --> 01:30:39,640
true we'll look at that a little bit

1385
01:30:35,229 --> 01:30:44,988
later so let's see what goes on here

1386
01:30:39,640 --> 01:30:47,510
so if probe sample P is computed that's

1387
01:30:44,988 --> 01:30:49,189
all done already so ray D is the only

1388
01:30:47,510 --> 01:30:53,890
thing we would need and so let's just do

1389
01:30:49,189 --> 01:30:53,889
it wide we would have Radiesse right

1390
01:30:54,069 --> 01:31:03,799
rady y andrade easy the sign bits here

1391
01:31:01,189 --> 01:31:07,879
need to be knotted so they need to be

1392
01:31:03,800 --> 01:31:11,329
the opposite of what they are right so

1393
01:31:07,880 --> 01:31:13,579
you would need to take like the inverse

1394
01:31:11,329 --> 01:31:17,539
sign bit like from here where we're

1395
01:31:13,579 --> 01:31:19,430
doing sign bit from you can see here

1396
01:31:17,539 --> 01:31:24,500
like it's knocking out whatever the

1397
01:31:19,430 --> 01:31:27,500
other value was there so we also need to

1398
01:31:24,500 --> 01:31:31,430
do an xor with this so we would want to

1399
01:31:27,500 --> 01:31:33,800
do you know like inverse sign bit from

1400
01:31:31,430 --> 01:31:35,630
or something like that

1401
01:31:33,800 --> 01:31:39,440
and in here what we would do is say well

1402
01:31:35,630 --> 01:31:42,140
we load the mask right we and with the

1403
01:31:39,439 --> 01:31:58,089
mask and then we XOR with the mask to

1404
01:31:42,140 --> 01:32:00,440
flip it right so I think that's right

1405
01:31:58,090 --> 01:32:02,659
like that would like toggle a bit so

1406
01:32:00,439 --> 01:32:05,629
basically like you've got ones in the

1407
01:32:02,659 --> 01:32:06,710
high bit so anywhere there was a one

1408
01:32:05,630 --> 01:32:09,260
it'll become a zero anywhere it says

1409
01:32:06,710 --> 01:32:10,789
arabic oh my one you've got zeros

1410
01:32:09,260 --> 01:32:13,539
everywhere else so then everywhere that

1411
01:32:10,789 --> 01:32:15,500
there was zeros they would stay zero and

1412
01:32:13,539 --> 01:32:20,689
everywhere they were ones they would

1413
01:32:15,500 --> 01:32:22,789
stay ones I think that works so here we

1414
01:32:20,689 --> 01:32:27,488
would just say all right get the inverse

1415
01:32:22,789 --> 01:32:27,488
sign bit from each of these

1416
01:32:34,649 --> 01:32:41,649
there's our sign that's the sign of the

1417
01:32:38,590 --> 01:32:44,050
final result so we now know exactly what

1418
01:32:41,649 --> 01:32:47,229
the sign is and so now the only question

1419
01:32:44,050 --> 01:32:51,970
is what's the mask so you know if you

1420
01:32:47,229 --> 01:32:59,349
took the normal you now have basically

1421
01:32:51,970 --> 01:33:17,680
this I don't know how we want to produce

1422
01:32:59,350 --> 01:33:20,140
this but it's like written out so the

1423
01:33:17,680 --> 01:33:20,890
sign bit gets bored in and we just need

1424
01:33:20,140 --> 01:33:24,039
to know

1425
01:33:20,890 --> 01:33:26,740
in each case do we pick a 1 or a 0 right

1426
01:33:24,039 --> 01:33:29,739
so you're basically just you know you're

1427
01:33:26,739 --> 01:33:39,130
doing like this a select but since you

1428
01:33:29,739 --> 01:33:43,599
know one of the answers since you know

1429
01:33:39,130 --> 01:33:45,489
that you're either picking 0 or 1 we

1430
01:33:43,600 --> 01:33:47,800
should just be able to just do a

1431
01:33:45,489 --> 01:33:54,550
straight and we don't really need to do

1432
01:33:47,800 --> 01:34:04,739
a blend right so this is just like 1 and

1433
01:33:54,550 --> 01:34:04,739
mask in each case right

1434
01:34:19,538 --> 01:34:43,519
so okay so now we're getting somewhere

1435
01:34:40,328 --> 01:34:48,469
this is way way better than it was

1436
01:34:43,520 --> 01:34:53,659
unless I'm on total LSD trip here and

1437
01:34:48,469 --> 01:34:56,599
it's not actually correct so doing it

1438
01:34:53,658 --> 01:34:58,609
this way where we've got normals and we

1439
01:34:56,599 --> 01:35:00,920
just need to now know the masks the

1440
01:34:58,609 --> 01:35:08,710
question is what are these three masks

1441
01:35:00,920 --> 01:35:12,770
right so there's an X mask a Y mask and

1442
01:35:08,710 --> 01:35:13,698
a Z mask so we just need to figure out

1443
01:35:12,770 --> 01:35:17,000
what those are

1444
01:35:13,698 --> 01:35:20,509
well we know which ones we picked did we

1445
01:35:17,000 --> 01:35:24,020
right because we've got this so we can

1446
01:35:20,510 --> 01:35:29,090
just compare t-ray in each case so we

1447
01:35:24,020 --> 01:35:36,170
can say look the mat the mask for each

1448
01:35:29,090 --> 01:35:39,110
of these the X mask is going to be if

1449
01:35:36,170 --> 01:35:40,849
these things were equal right the Y mask

1450
01:35:39,109 --> 01:35:43,549
is going to be if these things were

1451
01:35:40,849 --> 01:35:47,449
equal and maybe we need to make sure

1452
01:35:43,550 --> 01:35:49,820
that we have not the X mask nodded off

1453
01:35:47,448 --> 01:35:52,689
here as well so it's a little bit hard

1454
01:35:49,819 --> 01:35:52,689
to say but

1455
01:35:59,368 --> 01:36:06,210
yeah so we just say look is it equal to

1456
01:36:03,029 --> 01:36:08,670
tear a in each of these cases and this

1457
01:36:06,210 --> 01:36:10,948
has to be piece shift by the shuffler in

1458
01:36:08,670 --> 01:36:16,079
order to make sure that we get the same

1459
01:36:10,948 --> 01:36:18,269
answer in all four lanes right if we

1460
01:36:16,079 --> 01:36:20,069
knew that we could never have the same

1461
01:36:18,270 --> 01:36:21,540
team in in both places because that

1462
01:36:20,069 --> 01:36:23,488
would produce a normal that kind of like

1463
01:36:21,539 --> 01:36:26,698
gives us the diagonal normal which is

1464
01:36:23,488 --> 01:36:28,439
actually right but we don't want to have

1465
01:36:26,698 --> 01:36:30,629
to deal with it like we don't want to

1466
01:36:28,439 --> 01:36:33,178
have to normalize the normal after this

1467
01:36:30,630 --> 01:36:35,368
like that's just wasted work for the

1468
01:36:33,179 --> 01:36:41,940
case where you happen to hit exactly on

1469
01:36:35,368 --> 01:36:50,339
the vertex you know so this is going to

1470
01:36:41,939 --> 01:36:57,079
be X or Y nodded right which I don't

1471
01:36:50,340 --> 01:36:57,079
know that we have yeah we don't so I

1472
01:36:58,039 --> 01:37:05,269
don't know if we have and not we do

1473
01:37:10,640 --> 01:37:16,160
so actually that's not true

1474
01:37:12,949 --> 01:37:16,159
there you go

1475
01:37:17,930 --> 01:37:45,920
so yeah right like holy cow is that

1476
01:37:38,729 --> 01:37:48,929
better way way way less instructions

1477
01:37:45,920 --> 01:37:51,840
than the old version way less

1478
01:37:48,930 --> 01:37:54,420
complicated and I think it does the

1479
01:37:51,840 --> 01:37:56,400
right thing we know the sign because the

1480
01:37:54,420 --> 01:38:07,050
sign always has to point in the opposite

1481
01:37:56,399 --> 01:38:10,979
direction right in theory we could even

1482
01:38:07,050 --> 01:38:14,329
put that into the mask maybe trying to

1483
01:38:10,979 --> 01:38:17,459
think I think that's fine

1484
01:38:14,329 --> 01:38:28,050
so I think that's just fine I think

1485
01:38:17,460 --> 01:38:29,460
that's just it yeah so I want to say

1486
01:38:28,050 --> 01:38:31,860
that's grid raycast

1487
01:38:29,460 --> 01:38:34,680
right I want to say that's the whole

1488
01:38:31,859 --> 01:38:37,889
thing now and boy is that simple

1489
01:38:34,680 --> 01:38:41,220
compared to what it was before right

1490
01:38:37,890 --> 01:38:43,260
that's like way way better and so when

1491
01:38:41,220 --> 01:38:47,090
we're doing compute voxel irradiance at

1492
01:38:43,260 --> 01:38:49,789
here how much time do I have left I

1493
01:38:47,090 --> 01:38:52,470
don't know how much time I have left

1494
01:38:49,789 --> 01:38:54,180
probably only five minutes when we're

1495
01:38:52,470 --> 01:38:58,710
doing compute voxel irradiance at we

1496
01:38:54,180 --> 01:39:03,000
just wouldn't like we would just change

1497
01:38:58,710 --> 01:39:05,840
this to take the non downshifted lanes

1498
01:39:03,000 --> 01:39:10,850
and then it would just do these ops on

1499
01:39:05,840 --> 01:39:10,850
f/32 sf32 for x's right

1500
01:39:27,719 --> 01:39:36,849
so I think that's it I'm pretty happy

1501
01:39:34,448 --> 01:39:42,509
about that that's like way way way

1502
01:39:36,849 --> 01:39:42,510
better than it was

1503
01:39:42,899 --> 01:39:49,090
that's probably how we should have been

1504
01:39:44,979 --> 01:39:51,579
doing it before and you just you

1505
01:39:49,090 --> 01:39:59,439
wouldn't like you wouldn't call pea chef

1506
01:39:51,578 --> 01:40:00,668
be in the other vert case right so this

1507
01:39:59,439 --> 01:40:03,539
is probably how we should have been

1508
01:40:00,668 --> 01:40:03,538
doing it the whole time

1509
01:40:12,229 --> 01:40:17,699
like that's like not a little bit better

1510
01:40:15,149 --> 01:40:19,729
that's like radically better that's like

1511
01:40:17,699 --> 01:40:22,439
so much better than the previous one

1512
01:40:19,729 --> 01:40:24,779
even just in terms of legibility it's

1513
01:40:22,439 --> 01:40:27,210
better let alone the fact that it's so

1514
01:40:24,779 --> 01:40:29,099
many fewer like gyrations and there's no

1515
01:40:27,210 --> 01:40:33,359
tables or anything so you don't even

1516
01:40:29,100 --> 01:40:37,620
have to worry about loads and things

1517
01:40:33,359 --> 01:40:38,559
happening in there it's like one two

1518
01:40:37,619 --> 01:40:41,769
three

1519
01:40:38,560 --> 01:40:41,770
[Music]

1520
01:40:41,889 --> 01:40:47,650
well maybe four let's say five six seven

1521
01:40:45,100 --> 01:40:49,780
eight nine ten eleven twelve thirteen

1522
01:40:47,649 --> 01:40:57,219
fourteen fifteen sixteen sixteen

1523
01:40:49,779 --> 01:40:58,960
instructions and that's it and you could

1524
01:40:57,219 --> 01:41:01,389
probably get it down a little bit more

1525
01:40:58,960 --> 01:41:07,020
this is probably not as clever as it

1526
01:41:01,389 --> 01:41:07,020
could be hmm excuse me

1527
01:41:09,579 --> 01:41:12,658
[Music]

1528
01:41:15,960 --> 01:41:23,069
like we probably could do something

1529
01:41:18,238 --> 01:41:27,209
slightly clever or as well but all right

1530
01:41:23,069 --> 01:41:31,349
all right all right all right so let's

1531
01:41:27,210 --> 01:41:35,489
just finish up the piping here so we

1532
01:41:31,350 --> 01:41:41,719
need these like when we do grid raycast

1533
01:41:35,488 --> 01:41:44,429
we need to pass like this thing and so

1534
01:41:41,719 --> 01:41:47,279
there would be four of these that would

1535
01:41:44,430 --> 01:41:49,140
be happening in here as well and so

1536
01:41:47,279 --> 01:41:55,738
right now we're just gonna pass nothings

1537
01:41:49,140 --> 01:41:57,810
to those and so in here rather than any

1538
01:41:55,738 --> 01:42:10,939
of these things we'll deal with these a

1539
01:41:57,810 --> 01:42:10,940
little bit later it's so it's just this

1540
01:42:15,229 --> 01:42:29,269
and that's what will have to be

1541
01:42:18,380 --> 01:42:31,800
generating in our table all right yeah

1542
01:42:29,270 --> 01:42:33,150
so we can also run this right now and

1543
01:42:31,800 --> 01:42:34,829
theoretically we shouldn't it should not

1544
01:42:33,149 --> 01:42:38,579
crash but it won't do anything because

1545
01:42:34,829 --> 01:42:41,488
there's nothing in those tables right so

1546
01:42:38,579 --> 01:42:43,590
it's it won't actually it won't actually

1547
01:42:41,488 --> 01:42:53,789
tell us anything it's meaningless but we

1548
01:42:43,590 --> 01:42:57,000
can run it anyway right and hey like

1549
01:42:53,789 --> 01:42:58,350
it's also like crazy fast because it's

1550
01:42:57,000 --> 01:43:00,869
not doing anything like it's not

1551
01:42:58,350 --> 01:43:02,400
actually testing so you're only like

1552
01:43:00,869 --> 01:43:04,829
what you're seeing there is the total

1553
01:43:02,399 --> 01:43:09,599
runtime cost for the like really

1554
01:43:04,829 --> 01:43:11,519
expensive diffuse blur which is actually

1555
01:43:09,600 --> 01:43:15,150
kind of a great thing to see now we kind

1556
01:43:11,520 --> 01:43:20,040
of know like it's 2.3 seconds in our

1557
01:43:15,149 --> 01:43:24,839
testbed for doing room to me for doing

1558
01:43:20,039 --> 01:43:30,689
just the for doing just the down set the

1559
01:43:24,840 --> 01:43:36,679
the blur the specular to diffuse all

1560
01:43:30,689 --> 01:43:36,678
right let's go ahead and go to cue /a

1561
01:43:55,250 --> 01:43:58,729
nice upgrade of the routine just wanna

1562
01:43:57,500 --> 01:43:59,899
let you know there's a double pea chef

1563
01:43:58,729 --> 01:44:01,009
in the creation of teary single oh

1564
01:43:59,899 --> 01:44:05,029
really

1565
01:44:01,010 --> 01:44:06,560
that was not my intention I've kind of

1566
01:44:05,029 --> 01:44:08,179
worked over this routine a few times

1567
01:44:06,560 --> 01:44:09,620
here so we haven't really had a chance

1568
01:44:08,180 --> 01:44:13,310
to go through it and make sure that

1569
01:44:09,619 --> 01:44:16,159
there's nothing stupid happening you are

1570
01:44:13,310 --> 01:44:23,750
correct sir that is not even remotely

1571
01:44:16,159 --> 01:44:27,500
necessary as for what it stands for it's

1572
01:44:23,750 --> 01:44:29,659
actually the pea doesn't stand for some

1573
01:44:27,500 --> 01:44:31,970
anything specific to this instruction

1574
01:44:29,659 --> 01:44:37,069
it's their instructions really chef B

1575
01:44:31,970 --> 01:44:41,409
which is shuffle bytes I believe because

1576
01:44:37,069 --> 01:44:44,479
it's a byte wise shuffle the pea is

1577
01:44:41,409 --> 01:44:47,659
actually the prefix that they they chose

1578
01:44:44,479 --> 01:44:50,809
when they were assigning this the SSE

1579
01:44:47,659 --> 01:44:55,069
instruction and mnemonics the pea just

1580
01:44:50,810 --> 01:44:59,390
stood for pact so what you will see if

1581
01:44:55,069 --> 01:45:03,289
you actually go look at the instruction

1582
01:44:59,390 --> 01:45:06,950
break down the way that it works is like

1583
01:45:03,289 --> 01:45:08,750
when you have for example like so let's

1584
01:45:06,949 --> 01:45:13,220
say we were just talking about the early

1585
01:45:08,750 --> 01:45:15,739
days so you only have like SSE MMX and

1586
01:45:13,220 --> 01:45:19,340
the base stuff I mean MMX would have

1587
01:45:15,739 --> 01:45:20,300
been the real early days in fact

1588
01:45:19,340 --> 01:45:22,579
actually we can probably do that with

1589
01:45:20,300 --> 01:45:24,739
just MMX so let's suppose you looked for

1590
01:45:22,579 --> 01:45:25,550
like add instructions right and I think

1591
01:45:24,739 --> 01:45:29,059
you could do some of this I haven't

1592
01:45:25,550 --> 01:45:31,279
looked a long time yet can so you have

1593
01:45:29,060 --> 01:45:36,530
to imagine like you're coming from x86

1594
01:45:31,279 --> 01:45:38,840
this is before x64 and you've got oops

1595
01:45:36,529 --> 01:45:40,609
you've got your add instructions that

1596
01:45:38,840 --> 01:45:43,100
the processor has so the x86 add

1597
01:45:40,609 --> 01:45:47,599
instruction it looks like this here's an

1598
01:45:43,100 --> 01:45:50,270
8-bit add right you add one register to

1599
01:45:47,600 --> 01:45:52,970
an immediate in this case right here's

1600
01:45:50,270 --> 01:45:56,810
an 8-bit immediate and at right to

1601
01:45:52,970 --> 01:46:00,920
register adds here's a you know 16-bit

1602
01:45:56,810 --> 01:46:03,340
memory to 16-bit register and so that's

1603
01:46:00,920 --> 01:46:08,649
your add instructions they're called add

1604
01:46:03,340 --> 01:46:11,529
right when you get to s mm x which mm x

1605
01:46:08,649 --> 01:46:13,988
is the first time that Intel had wide

1606
01:46:11,529 --> 01:46:16,868
instructions so more than one thing or

1607
01:46:13,988 --> 01:46:18,519
what could could happen like inside a

1608
01:46:16,868 --> 01:46:21,549
single register there could be more than

1609
01:46:18,520 --> 01:46:25,090
one value being added at once there's

1610
01:46:21,550 --> 01:46:28,659
boundaries in between them now you can

1611
01:46:25,090 --> 01:46:30,190
see that the multimedia registers here

1612
01:46:28,658 --> 01:46:33,908
that they're talking about like MMX

1613
01:46:30,189 --> 01:46:37,149
registers suddenly get a P in front of

1614
01:46:33,908 --> 01:46:42,039
it right and the P now stands for packed

1615
01:46:37,149 --> 01:46:44,289
so packed add bytes packed add keywords

1616
01:46:42,039 --> 01:46:45,880
doubles I don't know what the D was here

1617
01:46:44,289 --> 01:46:48,908
and all so I don't remember all of their

1618
01:46:45,880 --> 01:46:52,079
mnemonics this is saturating words

1619
01:46:48,908 --> 01:46:55,259
saturating bytes I believe right

1620
01:46:52,079 --> 01:46:58,840
saturated versus unsaturated and add an

1621
01:46:55,260 --> 01:47:02,289
unsaturated add is an add that wraps

1622
01:46:58,840 --> 01:47:04,480
around you add one to the highest value

1623
01:47:02,289 --> 01:47:08,889
you get the lowest value and start again

1624
01:47:04,479 --> 01:47:11,559
right so it wraps saturating adds they

1625
01:47:08,889 --> 01:47:12,909
go to the highest value and stop so if

1626
01:47:11,560 --> 01:47:15,389
you take the highest value and add one

1627
01:47:12,908 --> 01:47:20,049
to it you it remains the highest value

1628
01:47:15,389 --> 01:47:22,150
right and so originally in x86 there's

1629
01:47:20,050 --> 01:47:24,190
no such thing as a saturating add you

1630
01:47:22,149 --> 01:47:25,598
can look through all of the old x86

1631
01:47:24,189 --> 01:47:29,618
instructions there is no such thing as a

1632
01:47:25,599 --> 01:47:33,579
saturated wrap ads always wrap round but

1633
01:47:29,618 --> 01:47:35,769
in when they started doing multimedia

1634
01:47:33,579 --> 01:47:37,929
instructions they wanted to have it so

1635
01:47:35,770 --> 01:47:40,840
that like if you added two color values

1636
01:47:37,929 --> 01:47:43,210
together that would have overflowed

1637
01:47:40,840 --> 01:47:45,329
eight bits that they saturated why

1638
01:47:43,210 --> 01:47:47,560
because they didn't have any extra room

1639
01:47:45,329 --> 01:47:48,880
normally nowadays we always do

1640
01:47:47,560 --> 01:47:52,000
computation with Headroom so if you're

1641
01:47:48,880 --> 01:47:53,980
gonna do eight like bit computations you

1642
01:47:52,000 --> 01:47:55,238
do them in 16 bits so that you have room

1643
01:47:53,979 --> 01:47:57,819
and you could do something with the

1644
01:47:55,238 --> 01:47:59,319
values when they overflow the saturating

1645
01:47:57,819 --> 01:48:01,539
ads were an attempt to make it so that

1646
01:47:59,319 --> 01:48:02,590
you could do stuff on values we didn't

1647
01:48:01,539 --> 01:48:04,210
have an extra room right because this

1648
01:48:02,590 --> 01:48:06,190
was the early days you didn't have much

1649
01:48:04,210 --> 01:48:11,710
extra band we're trying to get every

1650
01:48:06,189 --> 01:48:14,408
last bit to count right so P chef B just

1651
01:48:11,710 --> 01:48:17,710
follows that naming construction if we

1652
01:48:14,408 --> 01:48:20,779
switch back to SSE instructions here

1653
01:48:17,710 --> 01:48:24,050
and we look at P Chef be what you can

1654
01:48:20,779 --> 01:48:26,899
see is all it's saying is it's packed

1655
01:48:24,050 --> 01:48:30,380
that's what the P stands for chef stands

1656
01:48:26,899 --> 01:48:34,159
for shuffle and B is the identifier for

1657
01:48:30,380 --> 01:48:35,810
8-bit values so bytes right if you were

1658
01:48:34,159 --> 01:48:37,970
going to shuffle something that was

1659
01:48:35,810 --> 01:48:40,970
different in that so if you were gonna

1660
01:48:37,970 --> 01:48:43,970
shuffle say 32-bit values or 16-bit

1661
01:48:40,970 --> 01:48:49,130
value D like chef W for like forward

1662
01:48:43,970 --> 01:48:54,730
which was like if they had a shop man I

1663
01:48:49,130 --> 01:48:57,800
don't even know if they do yeah so chef

1664
01:48:54,729 --> 01:49:00,319
w's are all here but since they only

1665
01:48:57,800 --> 01:49:03,739
work on half the value half the side of

1666
01:49:00,319 --> 01:49:11,769
the value usually it's high words low

1667
01:49:03,739 --> 01:49:11,769
words right etc hopefully that helps

1668
01:49:33,079 --> 01:49:36,659
hi Casey love your show lately you seem

1669
01:49:35,460 --> 01:49:38,130
to be having some problems with your

1670
01:49:36,659 --> 01:49:39,769
voice breaking coughing have you

1671
01:49:38,130 --> 01:49:43,560
considered visiting a speech therapist I

1672
01:49:39,770 --> 01:49:46,730
probably should but nowadays probably

1673
01:49:43,560 --> 01:49:46,730
not something I'm gonna be doing right

1674
01:49:51,140 --> 01:49:57,110
omit blo says the episode guide has been

1675
01:49:55,140 --> 01:50:04,800
updated

1676
01:49:57,109 --> 01:50:10,649
is this true midlow Oh interesting

1677
01:50:04,800 --> 01:50:13,230
oh look at that it's got all the

1678
01:50:10,649 --> 01:50:15,500
different sets in here now - that's kind

1679
01:50:13,229 --> 01:50:15,500
of cool

1680
01:50:21,229 --> 01:50:24,070
haha

1681
01:50:31,569 --> 01:50:37,630
that's cool my blue I'll have to check

1682
01:50:33,850 --> 01:50:39,900
out all the new additions to it that's

1683
01:50:37,630 --> 01:50:39,900
great

1684
01:50:42,060 --> 01:50:45,510
nice work ma'am

1685
01:51:02,619 --> 01:51:05,890
could you explain the math diagram

1686
01:51:04,390 --> 01:51:08,380
behind why the sign bits are the inverse

1687
01:51:05,890 --> 01:51:09,610
of the raised sign again I showed up

1688
01:51:08,380 --> 01:51:24,420
halfway through that and I think I'm

1689
01:51:09,609 --> 01:51:24,420
missing some context sure all right

1690
01:51:24,600 --> 01:51:31,200
so let's suppose I have two planes right

1691
01:51:40,248 --> 01:51:49,309
if you've never watched behind the curve

1692
01:51:43,279 --> 01:51:53,538
on Netflix you might want to check it

1693
01:51:49,309 --> 01:51:58,279
out it's it's about it's about the the

1694
01:51:53,538 --> 01:52:05,929
people who are trying to advance Flat

1695
01:51:58,279 --> 01:52:08,179
Earth theory as a alternative to the

1696
01:52:05,929 --> 01:52:13,670
scientific explanation that that the

1697
01:52:08,179 --> 01:52:18,408
earth is a roughly spherical shape which

1698
01:52:13,670 --> 01:52:21,590
is interesting because one of the odd

1699
01:52:18,408 --> 01:52:24,049
things about Flat Earth theory is we

1700
01:52:21,590 --> 01:52:28,670
don't really care what shape the earth

1701
01:52:24,050 --> 01:52:30,889
is anymore in that way like in the old

1702
01:52:28,670 --> 01:52:34,429
days when you were wondering what would

1703
01:52:30,889 --> 01:52:38,269
happen if you sailed too far in one

1704
01:52:34,429 --> 01:52:40,279
direction then what shape the earth is

1705
01:52:38,269 --> 01:52:42,260
is the way you're thinking about

1706
01:52:40,279 --> 01:52:44,029
geometry you're like ah is it does it

1707
01:52:42,260 --> 01:52:46,039
like wrap around or does we just do we

1708
01:52:44,029 --> 01:52:48,738
just hit like a wall and there's like

1709
01:52:46,038 --> 01:52:50,029
nothing after it or or there's a totally

1710
01:52:48,738 --> 01:52:55,069
different world after it like what

1711
01:52:50,029 --> 01:52:59,538
happens you know but like nowadays we're

1712
01:52:55,069 --> 01:53:02,689
struggling with things like okay so we

1713
01:52:59,538 --> 01:53:04,009
know topologically what happens when we

1714
01:53:02,689 --> 01:53:07,549
explore the earth because we did it

1715
01:53:04,010 --> 01:53:09,409
right and furthermore we also know what

1716
01:53:07,550 --> 01:53:11,208
happens observational II when we're

1717
01:53:09,408 --> 01:53:14,029
outside the earth looking back at it

1718
01:53:11,208 --> 01:53:16,219
because we did that too but what we

1719
01:53:14,029 --> 01:53:18,969
don't know is like what is the actual

1720
01:53:16,219 --> 01:53:21,618
like physical structure of the universe

1721
01:53:18,969 --> 01:53:25,420
right like we're we're trying we're

1722
01:53:21,618 --> 01:53:28,238
struggling with that we don't know but

1723
01:53:25,420 --> 01:53:32,958
flat or like the shape of the earth

1724
01:53:28,238 --> 01:53:36,319
that's not what we're trying to think

1725
01:53:32,958 --> 01:53:40,130
about right like they're still trying to

1726
01:53:36,319 --> 01:53:43,969
solve a problem whose solution doesn't

1727
01:53:40,130 --> 01:53:46,479
actually tell us anything mm-hmm like

1728
01:53:43,969 --> 01:53:46,479
it's it's

1729
01:53:48,090 --> 01:53:54,900
I I guess because people who are flat

1730
01:53:50,429 --> 01:53:57,510
earth theorists don't know about like

1731
01:53:54,899 --> 01:53:59,309
space-time and the other stuff like they

1732
01:53:57,510 --> 01:54:01,920
don't aren't able to guess to

1733
01:53:59,310 --> 01:54:04,710
conceptualize the kind of harder

1734
01:54:01,920 --> 01:54:08,908
problems that we're now facing they

1735
01:54:04,710 --> 01:54:11,219
think that somehow if someone was going

1736
01:54:08,908 --> 01:54:14,129
to have a conspiracy theory and lie

1737
01:54:11,219 --> 01:54:17,698
about something it would be that but

1738
01:54:14,130 --> 01:54:20,579
that's like so far back in the

1739
01:54:17,698 --> 01:54:23,549
conceptual realm that no one would

1740
01:54:20,579 --> 01:54:26,429
bother to lie about that right like

1741
01:54:23,550 --> 01:54:28,800
that's not if if the Knights Templar and

1742
01:54:26,429 --> 01:54:32,399
the Freemasons and everyone else got

1743
01:54:28,800 --> 01:54:35,460
together to like lie to society at large

1744
01:54:32,399 --> 01:54:39,388
about critical elements of how the

1745
01:54:35,460 --> 01:54:42,599
universe works the shape of the earth is

1746
01:54:39,389 --> 01:54:44,670
so far back on the list of things that

1747
01:54:42,599 --> 01:54:45,630
you wouldn't even bother lying about

1748
01:54:44,670 --> 01:54:48,960
that anymore

1749
01:54:45,630 --> 01:54:52,050
because there are so many things that we

1750
01:54:48,960 --> 01:54:54,618
now do that make that question

1751
01:54:52,050 --> 01:54:58,440
irrelevant that you'd be lying about

1752
01:54:54,618 --> 01:55:01,559
space-time right so it's kind of funny

1753
01:54:58,439 --> 01:55:04,138
to watch people construct a conspiracy

1754
01:55:01,560 --> 01:55:07,139
theory around something that would not

1755
01:55:04,139 --> 01:55:09,118
be something and all-knowing

1756
01:55:07,139 --> 01:55:11,969
all-powerful force would ever want to

1757
01:55:09,118 --> 01:55:14,639
lie about at this point because we don't

1758
01:55:11,969 --> 01:55:18,090
think about that anymore like we don't

1759
01:55:14,639 --> 01:55:22,079
use that knowledge anymore at all we use

1760
01:55:18,090 --> 01:55:25,020
way more advanced stuff that just that

1761
01:55:22,079 --> 01:55:27,359
is the thing that falls out of it so if

1762
01:55:25,020 --> 01:55:29,639
you were going to start doing if your

1763
01:55:27,359 --> 01:55:32,639
core goal at this point if you were

1764
01:55:29,639 --> 01:55:34,230
really actually very smart like you're

1765
01:55:32,639 --> 01:55:39,150
Stephen Wolfram and you're going to

1766
01:55:34,229 --> 01:55:42,868
develop a new kind of science you need

1767
01:55:39,149 --> 01:55:45,689
to start way further up and then

1768
01:55:42,868 --> 01:55:47,969
demonstrate that oh by the way that also

1769
01:55:45,689 --> 01:55:51,569
means the earth is flat but like that's

1770
01:55:47,969 --> 01:55:53,639
not that's you know just a thing that

1771
01:55:51,569 --> 01:55:55,590
falls out of the actual space-time

1772
01:55:53,639 --> 01:55:57,840
equations that we now are telling you to

1773
01:55:55,590 --> 01:56:02,029
use which which happen to end up you

1774
01:55:57,840 --> 01:56:04,369
know anyway so let's suppose

1775
01:56:02,029 --> 01:56:08,210
were let's suppose that the earth is

1776
01:56:04,369 --> 01:56:11,510
flat of course and the when the

1777
01:56:08,210 --> 01:56:15,560
Freemasons built the fake display system

1778
01:56:11,510 --> 01:56:18,940
that shows our heavens to us you know it

1779
01:56:15,560 --> 01:56:21,580
was this infinite flat plane right

1780
01:56:18,939 --> 01:56:25,250
that's above us and just very very large

1781
01:56:21,579 --> 01:56:27,319
um so let's suppose we are standing we

1782
01:56:25,250 --> 01:56:30,680
are the Freemasons so we're the only

1783
01:56:27,319 --> 01:56:32,359
peace people or the Knights in Flour

1784
01:56:30,680 --> 01:56:36,980
whoever else the people are that that

1785
01:56:32,359 --> 01:56:39,500
are the cuz the CIA so so out here in in

1786
01:56:36,979 --> 01:56:41,779
the place outside like you know this is

1787
01:56:39,500 --> 01:56:44,180
this is poor earth right oops sorry I

1788
01:56:41,779 --> 01:56:46,880
drew it as a sphere am i bad so earth is

1789
01:56:44,180 --> 01:56:49,990
in here and of course it's flat and so

1790
01:56:46,880 --> 01:56:53,449
there's these planes that we're keeping

1791
01:56:49,989 --> 01:56:56,300
earth people ignorant by displaying fake

1792
01:56:53,449 --> 01:57:02,599
heavens and stuff on them and then the

1793
01:56:56,300 --> 01:57:06,529
CIA freemasons Knights Templar whoever

1794
01:57:02,600 --> 01:57:08,960
else depending on how racist you are

1795
01:57:06,529 --> 01:57:13,670
there's probably other people in there I

1796
01:57:08,960 --> 01:57:15,590
don't even know but the horrible groups

1797
01:57:13,670 --> 01:57:18,980
that are keeping us from knowing the

1798
01:57:15,590 --> 01:57:21,140
truth about about things they can get

1799
01:57:18,979 --> 01:57:24,829
outside it right so there they can get

1800
01:57:21,140 --> 01:57:29,360
outside this fake thing so if they want

1801
01:57:24,829 --> 01:57:32,119
to then look in on this system then if

1802
01:57:29,359 --> 01:57:33,500
you assume that there were I mean I

1803
01:57:32,119 --> 01:57:34,849
don't know if the earth is flat then

1804
01:57:33,500 --> 01:57:36,949
theory you could maybe walk around to

1805
01:57:34,850 --> 01:57:38,840
the other side and see out we would need

1806
01:57:36,949 --> 01:57:40,909
maybe just for insurance purposes if

1807
01:57:38,840 --> 01:57:43,100
there's intrepid explorers we would need

1808
01:57:40,909 --> 01:57:46,279
you know two infinite planes one on

1809
01:57:43,100 --> 01:57:49,250
either side so when the CIA and their

1810
01:57:46,279 --> 01:57:52,219
orbital mind-control laser satellite is

1811
01:57:49,250 --> 01:57:55,670
out here somewhere looking in on the

1812
01:57:52,220 --> 01:57:57,949
system that they built then when you

1813
01:57:55,670 --> 01:58:00,980
think about which of these two planes

1814
01:57:57,949 --> 01:58:03,519
they're going to hit first what we could

1815
01:58:00,979 --> 01:58:06,879
say is the plane that's facing this way

1816
01:58:03,520 --> 01:58:08,840
versus the plane that's facing this way

1817
01:58:06,880 --> 01:58:10,369
so we're thinking about like all the

1818
01:58:08,840 --> 01:58:12,920
gears and machinery we're looking at

1819
01:58:10,369 --> 01:58:14,618
those right the lovely displays service

1820
01:58:12,920 --> 01:58:19,118
that the earth people sees on this side

1821
01:58:14,618 --> 01:58:22,960
um what we know is that whichever side

1822
01:58:19,118 --> 01:58:24,789
of this were on if we actually ever hit

1823
01:58:22,960 --> 01:58:26,770
this plane meaning we're not pointing

1824
01:58:24,789 --> 01:58:29,500
off in the opposite direction if we were

1825
01:58:26,770 --> 01:58:33,190
ever actually able to hit one of these

1826
01:58:29,500 --> 01:58:35,079
two planes we know we can only ever hit

1827
01:58:33,189 --> 01:58:39,250
the plane whose normal was pointing back

1828
01:58:35,079 --> 01:58:41,050
at us right because if we were here by

1829
01:58:39,250 --> 01:58:42,849
the time we got to the plane whose

1830
01:58:41,050 --> 01:58:45,070
normal is pointing the same direction as

1831
01:58:42,849 --> 01:58:47,800
us we would have hit the other plane

1832
01:58:45,069 --> 01:58:49,899
first right we would have hit this one

1833
01:58:47,800 --> 01:58:51,369
so we can't ever get to this one because

1834
01:58:49,899 --> 01:58:56,229
this infinite plane would have stopped

1835
01:58:51,368 --> 01:59:00,368
us right so how does that translate into

1836
01:58:56,229 --> 01:59:05,589
a box well a box is just a bunch of

1837
01:59:00,368 --> 01:59:08,679
infinite planes right in 2d it's two

1838
01:59:05,590 --> 01:59:15,159
sets of two infinite planes this set

1839
01:59:08,679 --> 01:59:17,319
here and this set here wherever we are

1840
01:59:15,158 --> 01:59:21,429
right you can see that this forms four

1841
01:59:17,319 --> 01:59:25,149
quadrants wherever we are in order to

1842
01:59:21,429 --> 01:59:27,730
get to whichever pair like of in order

1843
01:59:25,149 --> 01:59:31,629
to get to the one in each pair that is

1844
01:59:27,729 --> 01:59:33,459
first we know that we can never hit the

1845
01:59:31,630 --> 01:59:35,650
corresponding one first

1846
01:59:33,460 --> 01:59:39,789
so if I was going to hit this plane

1847
01:59:35,649 --> 01:59:42,339
first it's well whichever vertical plane

1848
01:59:39,789 --> 01:59:44,319
I'm looking at I know I'm going to be

1849
01:59:42,340 --> 01:59:49,150
hitting the 1 first whose normal points

1850
01:59:44,319 --> 01:59:51,250
back at me right whichever it is and if

1851
01:59:49,149 --> 01:59:55,179
I was pointing in the same direction as

1852
01:59:51,250 --> 01:59:59,500
that I'd never hit it I just walk off

1853
01:59:55,179 --> 02:00:02,800
into the distance right I will hit it

1854
01:59:59,500 --> 02:00:04,840
negative but of course we clamp T values

1855
02:00:02,800 --> 02:00:08,289
to zero in the Ray caster so you can't

1856
02:00:04,840 --> 02:00:11,469
ever get there same is true of this pair

1857
02:00:08,289 --> 02:00:12,789
I chant ever hit the one that's pointing

1858
02:00:11,469 --> 02:00:15,460
the same direction as me because I'll

1859
02:00:12,789 --> 02:00:17,500
hit the other one first will I hit this

1860
02:00:15,460 --> 02:00:22,448
one eventually sure will it be this the

1861
02:00:17,500 --> 02:00:26,500
earliest one no right so what we end up

1862
02:00:22,448 --> 02:00:27,960
learning is that for any given box no

1863
02:00:26,500 --> 02:00:30,239
matter how many dimensions

1864
02:00:27,960 --> 02:00:33,420
I draw it it is made up of pairs of

1865
02:00:30,239 --> 02:00:35,699
planes and no matter how I try to aim at

1866
02:00:33,420 --> 02:00:37,649
this thing if I will hit one of the

1867
02:00:35,699 --> 02:00:39,569
planes it will always be the one who's

1868
02:00:37,649 --> 02:00:46,129
pointing towards me not pointing away

1869
02:00:39,569 --> 02:00:49,500
from me as a result the sign of this

1870
02:00:46,130 --> 02:00:52,710
must always be the opposite of the sign

1871
02:00:49,500 --> 02:00:56,819
of this right whichever one I hit will

1872
02:00:52,710 --> 02:00:58,800
be pointing back towards me I'm pointing

1873
02:00:56,819 --> 02:01:01,559
one way it's pointing the other way in

1874
02:00:58,800 --> 02:01:04,920
all pairs of dimensions right or in all

1875
02:01:01,560 --> 02:01:08,850
dimensional pairs and that's true of any

1876
02:01:04,920 --> 02:01:11,430
dimensional shape right so when you are

1877
02:01:08,850 --> 02:01:13,530
constructing your flatter theory and I'm

1878
02:01:11,430 --> 02:01:15,360
sure all of you out there are because

1879
02:01:13,529 --> 02:01:18,469
now you know that the earth is flat and

1880
02:01:15,359 --> 02:01:20,579
certainly not round that would be absurd

1881
02:01:18,470 --> 02:01:27,020
that's just something you can take to

1882
02:01:20,579 --> 02:01:31,189
the bank in the n-dimensional flat earth

1883
02:01:27,020 --> 02:01:31,190
that we all know is true

1884
02:01:31,529 --> 02:01:37,349
you can tell all your flat earth friends

1885
02:01:34,829 --> 02:01:38,970
that the CIA Freemasons a knight Templar

1886
02:01:37,350 --> 02:01:42,450
when they're floating outside it will

1887
02:01:38,970 --> 02:01:46,350
always see the one of the two infinite

1888
02:01:42,449 --> 02:01:48,090
planes that they are that is has its

1889
02:01:46,350 --> 02:01:50,310
normal pointing back at them

1890
02:01:48,090 --> 02:01:52,199
not the other one because they can't

1891
02:01:50,310 --> 02:01:54,000
actually see through it I'm assuming

1892
02:01:52,199 --> 02:01:56,519
there's like a door here that the CIA

1893
02:01:54,000 --> 02:01:58,079
goes through or whatever that like I

1894
02:01:56,520 --> 02:02:00,540
don't know maybe like during an eclipse

1895
02:01:58,079 --> 02:02:03,949
like the CIA like goes in and out of

1896
02:02:00,539 --> 02:02:03,949
that door or something I'm not sure

1897
02:02:18,139 --> 02:02:28,440
it forms nine cop quadrants not four

1898
02:02:23,029 --> 02:02:30,509
quadrants oh I see you're saying you're

1899
02:02:28,439 --> 02:02:34,018
just talking about these other ones here

1900
02:02:30,510 --> 02:02:35,969
well these aren't really necessary I

1901
02:02:34,019 --> 02:02:39,179
mean is the way you could think about it

1902
02:02:35,969 --> 02:02:41,130
meaning whether or not we hit this

1903
02:02:39,179 --> 02:02:45,828
planar this plane is only based on

1904
02:02:41,130 --> 02:02:50,190
whether we're here or here right

1905
02:02:45,828 --> 02:02:52,109
it doesn't matter maybe to make this a

1906
02:02:50,189 --> 02:02:55,859
little bit more concrete suppose we're

1907
02:02:52,109 --> 02:02:57,630
here if we're here we can't hit one of

1908
02:02:55,859 --> 02:03:00,389
these planes first anyway because we'd

1909
02:02:57,630 --> 02:03:03,000
hit this one right so it literally

1910
02:03:00,389 --> 02:03:05,760
doesn't matter which one we shoot at

1911
02:03:03,000 --> 02:03:07,139
when we get to here probably should have

1912
02:03:05,760 --> 02:03:08,760
said that I'm sorry I was just thinking

1913
02:03:07,139 --> 02:03:12,300
about cases where you could actually hit

1914
02:03:08,760 --> 02:03:14,550
this part of the box right so in the

1915
02:03:12,300 --> 02:03:17,070
nine quadrants if you're in any of these

1916
02:03:14,550 --> 02:03:19,679
parts these parts are just fully

1917
02:03:17,069 --> 02:03:23,009
deterministic already if you are in any

1918
02:03:19,679 --> 02:03:24,599
of these four quadrants here or there

1919
02:03:23,010 --> 02:03:27,420
quadrants because there's four but

1920
02:03:24,599 --> 02:03:30,510
they're actually part of a octant I

1921
02:03:27,420 --> 02:03:33,510
guess if you're in one of these four of

1922
02:03:30,510 --> 02:03:36,110
the octants then you know immediately

1923
02:03:33,510 --> 02:03:40,739
what your normal is it's just this right

1924
02:03:36,109 --> 02:03:43,259
when you're in this octant any of the

1925
02:03:40,738 --> 02:03:48,268
four corner ones you can hit either of

1926
02:03:43,260 --> 02:03:51,000
these two right so when you're in a a

1927
02:03:48,269 --> 02:03:53,699
corner octant those are actually the

1928
02:03:51,000 --> 02:03:56,219
cases we are trying to handle if you

1929
02:03:53,698 --> 02:03:57,569
could only ever be in these four we

1930
02:03:56,219 --> 02:03:58,948
would have a much easier job because

1931
02:03:57,569 --> 02:04:01,859
then you know exactly what your normal

1932
02:03:58,948 --> 02:04:04,768
is just by the quadrant right because

1933
02:04:01,859 --> 02:04:06,420
there's no Ray the Ray that tried to hit

1934
02:04:04,769 --> 02:04:11,059
either of these two planes would miss

1935
02:04:06,420 --> 02:04:11,059
the Box entirely right

1936
02:04:16,670 --> 02:04:19,420
so

1937
02:04:37,469 --> 02:04:44,819
this doesn't have a really anything to

1938
02:04:39,630 --> 02:04:47,219
do with yeah with anything other than

1939
02:04:44,819 --> 02:04:50,458
just the fact that we know it asked me

1940
02:04:47,219 --> 02:04:52,769
pointing laughs direction even if this

1941
02:04:50,458 --> 02:04:57,988
were not access aligned you could just

1942
02:04:52,769 --> 02:05:00,300
transform it so it was right but the

1943
02:04:57,988 --> 02:05:02,428
property still holds even if you aren't

1944
02:05:00,300 --> 02:05:05,309
access aligned you just it's a dot

1945
02:05:02,429 --> 02:05:08,158
product equation now right so instead of

1946
02:05:05,309 --> 02:05:11,748
signs because the reason that happens is

1947
02:05:08,158 --> 02:05:17,848
because when you are access aligned

1948
02:05:11,748 --> 02:05:19,828
right sign equals dot product right so

1949
02:05:17,849 --> 02:05:24,288
the inner product and the sign are the

1950
02:05:19,828 --> 02:05:32,728
same quantity which is not true

1951
02:05:24,288 --> 02:05:35,639
shouldn't save quantity R this R let me

1952
02:05:32,729 --> 02:05:38,820
explain the whole thing if you have

1953
02:05:35,639 --> 02:05:42,889
access aligned vectors so I have a

1954
02:05:38,819 --> 02:05:46,018
vector that's like one zero zero right

1955
02:05:42,889 --> 02:05:50,159
if I have access aligned vectors than I

1956
02:05:46,019 --> 02:05:53,510
do an inner product then the sine here

1957
02:05:50,158 --> 02:05:57,149
right positive or negative here

1958
02:05:53,510 --> 02:06:00,059
translates directly into the positive or

1959
02:05:57,149 --> 02:06:03,018
negative of the dot product you know I'm

1960
02:06:00,059 --> 02:06:05,639
saying because these cannot contribute

1961
02:06:03,019 --> 02:06:08,070
so whatever the sign is here right

1962
02:06:05,639 --> 02:06:15,328
because the dot product is you know ax

1963
02:06:08,069 --> 02:06:18,359
BX + a YB y plus AZ BZ right if you know

1964
02:06:15,328 --> 02:06:22,529
a priori that you don't have two of your

1965
02:06:18,359 --> 02:06:24,868
terms then the sine of this is what

1966
02:06:22,529 --> 02:06:28,948
translates directly into the sine of

1967
02:06:24,868 --> 02:06:32,069
this so these two signs whatever the

1968
02:06:28,948 --> 02:06:34,618
sign of a ax is and BX those produce my

1969
02:06:32,069 --> 02:06:38,248
answer I don't need to know anything

1970
02:06:34,618 --> 02:06:43,768
about the other values at all right so

1971
02:06:38,248 --> 02:06:46,708
if I know that a is you know plus or

1972
02:06:43,769 --> 02:06:50,219
minus one and I know that a Y is zero

1973
02:06:46,708 --> 02:06:51,599
and a Z is zero then all I'm doing is

1974
02:06:50,219 --> 02:06:54,039
I'm saying okay

1975
02:06:51,599 --> 02:06:57,130
the dot product will be completely

1976
02:06:54,039 --> 02:06:59,738
determined by the sign and value of BX

1977
02:06:57,130 --> 02:07:02,050
and then I will either flip it or not

1978
02:06:59,738 --> 02:07:06,848
based on ax and that's the whole dot

1979
02:07:02,050 --> 02:07:08,920
product right so now if I say well I

1980
02:07:06,849 --> 02:07:10,779
want to do dot products with many of

1981
02:07:08,920 --> 02:07:13,960
these like I want to do a dot product

1982
02:07:10,779 --> 02:07:18,639
with plus or minus one zero zero zero

1983
02:07:13,960 --> 02:07:22,149
plus or minus one zero and zero zero

1984
02:07:18,639 --> 02:07:24,969
plus or minus one right so now I've got

1985
02:07:22,149 --> 02:07:27,519
you know all of the VEX of those are all

1986
02:07:24,969 --> 02:07:32,139
the vectors that are normals on this

1987
02:07:27,520 --> 02:07:35,619
thing right here here here here here

1988
02:07:32,139 --> 02:07:39,730
right so if I do dot products with all

1989
02:07:35,618 --> 02:07:41,319
of these vectors right then I know which

1990
02:07:39,729 --> 02:07:45,669
side of each of these things you're on

1991
02:07:41,319 --> 02:07:46,899
right I know which side of this you're

1992
02:07:45,670 --> 02:07:48,069
on I know which side of this you're on

1993
02:07:46,899 --> 02:07:49,929
notice art of this you're on and so on

1994
02:07:48,069 --> 02:07:52,118
right now in order to actually do the

1995
02:07:49,929 --> 02:07:55,179
side I need to take the vector relative

1996
02:07:52,118 --> 02:07:56,769
to this so I'm have to actually see what

1997
02:07:55,179 --> 02:08:01,329
you were relative to a point on the

1998
02:07:56,770 --> 02:08:03,610
plane for sure but you get the idea if I

1999
02:08:01,329 --> 02:08:06,760
was to construct the same algorithm but

2000
02:08:03,609 --> 02:08:09,519
things had to be spun so here's the axis

2001
02:08:06,760 --> 02:08:11,230
system but now my box is like this you

2002
02:08:09,520 --> 02:08:13,510
could still do similar things but you

2003
02:08:11,229 --> 02:08:16,928
have to actually take the dot products

2004
02:08:13,510 --> 02:08:20,380
right you couldn't cheat and just look

2005
02:08:16,929 --> 02:08:22,480
at signs anymore so one of the reasons

2006
02:08:20,380 --> 02:08:24,130
we like to rotate things into an access

2007
02:08:22,479 --> 02:08:25,598
aligned space or just construct the

2008
02:08:24,130 --> 02:08:27,400
algorithms in an axis line space to

2009
02:08:25,599 --> 02:08:29,770
begin with if we can if we look if we're

2010
02:08:27,399 --> 02:08:31,629
lucky which in this case we can is

2011
02:08:29,770 --> 02:08:34,420
because all of these dot products

2012
02:08:31,630 --> 02:08:35,260
degenerate down into just sines you're

2013
02:08:34,420 --> 02:08:37,810
just changing

2014
02:08:35,260 --> 02:08:40,389
you're either changing or not the sign

2015
02:08:37,810 --> 02:08:43,960
of a value right BX is coming in as a

2016
02:08:40,389 --> 02:08:46,690
real value from negative whatever to

2017
02:08:43,960 --> 02:08:49,750
positive whatever right that's a real

2018
02:08:46,689 --> 02:08:52,089
value but the only thing your dot

2019
02:08:49,750 --> 02:08:53,829
product is doing is plus or minus it's

2020
02:08:52,090 --> 02:08:55,739
just changing the sign either we flip

2021
02:08:53,829 --> 02:09:00,329
the sign or leave the sign the same and

2022
02:08:55,738 --> 02:09:03,459
so you can drastically optimize

2023
02:09:00,329 --> 02:09:04,630
operations that used to be whole dot

2024
02:09:03,460 --> 02:09:07,989
products doing

2025
02:09:04,630 --> 02:09:13,020
dot products of things by just using

2026
02:09:07,989 --> 02:09:16,619
sign flipping or sign over writing and

2027
02:09:13,020 --> 02:09:16,620
that's what we did here

2028
02:09:32,050 --> 02:09:35,350
is it faster do the matrix rotation of

2029
02:09:34,090 --> 02:09:36,489
the dot product though I guess there's

2030
02:09:35,350 --> 02:09:39,910
only one rotation and play of dot

2031
02:09:36,489 --> 02:09:41,439
products so if you're so if you're in a

2032
02:09:39,909 --> 02:09:43,119
situation like we are where all of our

2033
02:09:41,439 --> 02:09:44,439
boxes are access aligned anyway then

2034
02:09:43,119 --> 02:09:46,659
obviously it's free because now you

2035
02:09:44,439 --> 02:09:48,609
don't need to do a rotation if you're in

2036
02:09:46,659 --> 02:09:51,430
a situation where you're not that way so

2037
02:09:48,609 --> 02:09:53,619
you have rotated boxes and then you want

2038
02:09:51,430 --> 02:09:56,050
to do it then whether or not the

2039
02:09:53,619 --> 02:09:58,989
rotation is cheaper or not depends on

2040
02:09:56,050 --> 02:10:00,820
the algorithm it may be cheaper to just

2041
02:09:58,989 --> 02:10:03,309
constructor with the dot products it may

2042
02:10:00,819 --> 02:10:05,259
be cheaper to do one rotation first to

2043
02:10:03,310 --> 02:10:07,240
put it into an organized coordinate

2044
02:10:05,260 --> 02:10:08,949
system and then do it so it's really

2045
02:10:07,239 --> 02:10:10,899
just a case of looking at what the

2046
02:10:08,949 --> 02:10:14,380
algorithm does and seeing which one

2047
02:10:10,899 --> 02:10:20,469
makes more of the operations makes more

2048
02:10:14,380 --> 02:10:22,390
instructions in which one makes less all

2049
02:10:20,470 --> 02:10:24,690
right I think that's the end of the

2050
02:10:22,390 --> 02:10:24,690
queues

2051
02:10:30,809 --> 02:10:34,800
oh wait no there's one more if you're

2052
02:10:33,448 --> 02:10:37,859
curious about signed distance fields I

2053
02:10:34,800 --> 02:10:42,360
literally just I literally just did a QA

2054
02:10:37,859 --> 02:10:55,589
on signed distance fields like like

2055
02:10:42,359 --> 02:10:58,429
literally like two weeks ago it was a

2056
02:10:55,590 --> 02:10:58,429
question

2057
02:11:00,069 --> 02:11:14,579
to be not get this I mean here's another

2058
02:11:06,970 --> 02:11:14,579
one but I thought there was more

2059
02:11:18,699 --> 02:11:23,579
hmm hmm

2060
02:11:24,420 --> 02:11:28,199
might have been in the pre stream

2061
02:11:34,809 --> 02:11:46,179
might have been the pre stream you

2062
02:11:43,099 --> 02:11:46,179
missed it should have been here

2063
02:11:51,429 --> 02:11:57,670
alright I'm wrap it up it might still be

2064
02:11:55,658 --> 02:12:07,029
in the twitch vod's I don't know

2065
02:11:57,670 --> 02:12:08,109
those don't get annotated alright thank

2066
02:12:07,029 --> 02:12:09,250
you everyone for joining me for that

2067
02:12:08,109 --> 02:12:11,380
sort of handmade here at Sona pleasure

2068
02:12:09,250 --> 02:12:13,710
coding with you as always if you would

2069
02:12:11,380 --> 02:12:16,510
like to follow us at home you can always

2070
02:12:13,710 --> 02:12:18,250
go to handmade hero org and pre-order

2071
02:12:16,510 --> 02:12:21,130
the game it comes with the source code

2072
02:12:18,250 --> 02:12:23,079
so you can follow along with it

2073
02:12:21,130 --> 02:12:25,690
we also have a Kickstarter that it now

2074
02:12:23,079 --> 02:12:28,029
has probably less than 24 hours left if

2075
02:12:25,689 --> 02:12:31,329
you would like to get our comic now the

2076
02:12:28,029 --> 02:12:34,509
infinite now is the time I guess you get

2077
02:12:31,329 --> 02:12:37,630
23 hours left you can go check that out

2078
02:12:34,510 --> 02:12:38,770
it's got a cool trailer that will be

2079
02:12:37,630 --> 02:12:40,150
running for another 24 hours so about

2080
02:12:38,770 --> 02:12:43,420
time I'm back here tomorrow it will be

2081
02:12:40,149 --> 02:12:46,000
over well I guess it'll be during the

2082
02:12:43,420 --> 02:12:47,800
stream it will be over so do check that

2083
02:12:46,000 --> 02:12:49,420
out if you're interested that's it for

2084
02:12:47,800 --> 02:12:52,119
today I'll be back here tomorrow when I

2085
02:12:49,420 --> 02:12:53,679
will look at implementing the look-up

2086
02:12:52,119 --> 02:12:55,539
tables we need so that we can actually

2087
02:12:53,679 --> 02:12:57,699
start testing this routine which will be

2088
02:12:55,539 --> 02:12:58,719
a lot of debugging but hopefully we'll

2089
02:12:57,698 --> 02:13:00,279
end up with something significantly

2090
02:12:58,719 --> 02:13:02,500
faster we'll see we don't really know

2091
02:13:00,279 --> 02:13:06,329
that's it for today see everyone

2092
02:13:02,500 --> 02:13:06,329
tomorrow take it easy everybody

