1
00:00:00,380 --> 00:00:03,689
hello everyone and welcome to hand made

2
00:00:02,520 --> 00:00:07,500
here oh sure we could a complete-game

3
00:00:03,689 --> 00:00:09,960
live on stream I yesterday did some code

4
00:00:07,500 --> 00:00:12,690
that can load and dump our asset files

5
00:00:09,960 --> 00:00:15,420
and I want to also make something today

6
00:00:12,689 --> 00:00:17,939
which allows us to rewrite them so that

7
00:00:15,419 --> 00:00:19,679
anytime you want change versions or how

8
00:00:17,940 --> 00:00:21,420
they're laid out or optimize them or

9
00:00:19,679 --> 00:00:23,698
remove things or do anything we really

10
00:00:21,420 --> 00:00:26,519
want it's not a huge deal we can just do

11
00:00:23,699 --> 00:00:27,929
it and that's just kind of a nice thing

12
00:00:26,518 --> 00:00:29,759
I felt like it was worth showing how to

13
00:00:27,929 --> 00:00:31,768
do that because it's not that hard as

14
00:00:29,760 --> 00:00:34,380
you've seen it only takes a couple hours

15
00:00:31,768 --> 00:00:37,530
to build something like that if you

16
00:00:34,380 --> 00:00:39,540
remember correctly that's our HHA edit

17
00:00:37,530 --> 00:00:42,090
program which is this program right here

18
00:00:39,539 --> 00:00:43,670
and at the end of yesterday's stream we

19
00:00:42,090 --> 00:00:46,859
were taking a look at the dumps there

20
00:00:43,670 --> 00:00:48,689
and I was using tab you for that but you

21
00:00:46,859 --> 00:00:51,840
can really use anything you want to view

22
00:00:48,689 --> 00:00:52,890
those things where it up with that in

23
00:00:51,840 --> 00:00:57,300
the bonus pack

24
00:00:52,890 --> 00:00:59,308
so here's tab view right and if I go

25
00:00:57,299 --> 00:01:01,108
ahead and and take a look at some of the

26
00:00:59,308 --> 00:01:02,280
file dumps that we had you can sort of

27
00:01:01,109 --> 00:01:06,030
see where we were going with that

28
00:01:02,280 --> 00:01:08,040
here is the day directory here's the

29
00:01:06,030 --> 00:01:10,618
test fonts for example here's a dump of

30
00:01:08,040 --> 00:01:12,240
the test fonts HHA file and what you can

31
00:01:10,618 --> 00:01:15,049
see here is you know we've got a bunch

32
00:01:12,239 --> 00:01:17,929
of glyph it maps in here you can see

33
00:01:15,049 --> 00:01:21,330
them fairly straightforward right

34
00:01:17,930 --> 00:01:23,310
everything you would expect and you know

35
00:01:21,329 --> 00:01:24,989
it's also got the font information

36
00:01:23,310 --> 00:01:27,118
things like the descender is what the

37
00:01:24,989 --> 00:01:29,339
tags were for the font and all that sort

38
00:01:27,118 --> 00:01:31,409
of stuff so that gives us good

39
00:01:29,340 --> 00:01:33,630
confidence the main reason I wanted that

40
00:01:31,409 --> 00:01:35,219
was that just gives us some nice

41
00:01:33,629 --> 00:01:38,578
confidence that we're loading everything

42
00:01:35,219 --> 00:01:43,920
properly and now if I want to resave

43
00:01:38,578 --> 00:01:46,469
this file using the same code it should

44
00:01:43,920 --> 00:01:50,280
be fairly straightforward to do so right

45
00:01:46,469 --> 00:01:53,728
because now we know we've got this

46
00:01:50,280 --> 00:01:57,239
loaded HHA here that has imported all of

47
00:01:53,728 --> 00:01:59,549
the data from the v-0 file which means

48
00:01:57,239 --> 00:02:02,429
that now it's pretty easy for us to

49
00:01:59,549 --> 00:02:05,189
write out a different kind of file

50
00:02:02,430 --> 00:02:07,079
because we just iterate over this and

51
00:02:05,188 --> 00:02:10,378
then it doesn't matter whether we loaded

52
00:02:07,078 --> 00:02:13,229
a v-0 or v1 file right it doesn't matter

53
00:02:10,378 --> 00:02:15,750
which kind we did

54
00:02:13,229 --> 00:02:18,658
so if I then take a look here at the

55
00:02:15,750 --> 00:02:23,519
right HHA you can see here we got the

56
00:02:18,658 --> 00:02:25,378
read HHA and the right HHA so if I just

57
00:02:23,519 --> 00:02:27,719
make a thing here that allows me to

58
00:02:25,378 --> 00:02:31,649
write out the version of the file

59
00:02:27,719 --> 00:02:34,680
HHA v1 let's say like that and I pass it

60
00:02:31,650 --> 00:02:37,650
a test file what I need to do here is

61
00:02:34,680 --> 00:02:39,180
pass it something to take as the source

62
00:02:37,650 --> 00:02:41,039
and of course we already did the

63
00:02:39,180 --> 00:02:44,519
command-line necessary to like load that

64
00:02:41,039 --> 00:02:47,310
in I think we've got a rewrite command

65
00:02:44,519 --> 00:02:49,560
right that that we you know definitely

66
00:02:47,310 --> 00:02:52,019
do anything right now but we yeah you

67
00:02:49,560 --> 00:02:54,900
can see we like make the calls right it

68
00:02:52,019 --> 00:02:57,629
just doesn't do anything so if we take a

69
00:02:54,900 --> 00:03:00,810
look at right HHA here you can see that

70
00:02:57,628 --> 00:03:02,878
you know we're all set up to go we've

71
00:03:00,810 --> 00:03:04,439
opened a file for writing so the only

72
00:03:02,878 --> 00:03:07,169
thing we really need to do now is

73
00:03:04,439 --> 00:03:12,530
actually write something that does this

74
00:03:07,169 --> 00:03:15,869
output of the loaded HHA out into

75
00:03:12,530 --> 00:03:18,109
destination file writing it sequentially

76
00:03:15,870 --> 00:03:22,889
and so that's that's all we need to do

77
00:03:18,109 --> 00:03:25,590
again not particularly difficult all

78
00:03:22,889 --> 00:03:28,560
right so really all we need to do to

79
00:03:25,590 --> 00:03:33,930
write one of these HHA files is place

80
00:03:28,560 --> 00:03:36,120
the header information you know we know

81
00:03:33,930 --> 00:03:38,549
exactly how big the headers going to be

82
00:03:36,120 --> 00:03:40,799
because it's a fixed size once we know

83
00:03:38,549 --> 00:03:43,590
our asset count in our tag count both of

84
00:03:40,799 --> 00:03:44,700
which we know so if we just leave the

85
00:03:43,590 --> 00:03:45,959
space for the header and this is the

86
00:03:44,699 --> 00:03:47,789
same thing we did when we originally

87
00:03:45,959 --> 00:03:49,680
wrote HSA files if we just leave space

88
00:03:47,789 --> 00:03:52,138
for the header all we have to do is loop

89
00:03:49,680 --> 00:03:57,180
over everything we've got dump it all

90
00:03:52,139 --> 00:03:59,370
out into a big old mush and as we go

91
00:03:57,180 --> 00:04:02,609
every time we write out a piece of

92
00:03:59,370 --> 00:04:04,919
flexibly sized data all we have to do is

93
00:04:02,609 --> 00:04:07,950
just remember where we wrote it by

94
00:04:04,919 --> 00:04:11,250
putting it into our version of the

95
00:04:07,949 --> 00:04:14,039
header that we're going to save then at

96
00:04:11,250 --> 00:04:16,439
the very end when we're all done we just

97
00:04:14,039 --> 00:04:18,509
write out that header and we've

98
00:04:16,439 --> 00:04:20,788
completed reading the file that's really

99
00:04:18,509 --> 00:04:22,709
all there is to it it's pretty basic now

100
00:04:20,788 --> 00:04:24,029
it's not always so easy to write

101
00:04:22,709 --> 00:04:26,669
something like that for the simple

102
00:04:24,029 --> 00:04:29,099
reason that it's a lot of

103
00:04:26,670 --> 00:04:32,670
finicky byte manipulation kind of stuff

104
00:04:29,100 --> 00:04:36,120
right so all of our byte offsets that we

105
00:04:32,670 --> 00:04:37,800
write to tell you where things are have

106
00:04:36,120 --> 00:04:39,090
to be correct so you know maybe we can

107
00:04:37,800 --> 00:04:41,129
get some of those wrong or something

108
00:04:39,089 --> 00:04:43,609
like this but usually if you're careful

109
00:04:41,129 --> 00:04:49,889
it's really not a particularly big deal

110
00:04:43,610 --> 00:04:52,080
to verify them eventually right okay so

111
00:04:49,889 --> 00:04:55,409
what I'm gonna do is I'm gonna start by

112
00:04:52,079 --> 00:04:57,329
just doing the basics I'm going to say

113
00:04:55,410 --> 00:05:01,260
all right we've got a desk file pointer

114
00:04:57,329 --> 00:05:05,060
and I want to first move that pointer to

115
00:05:01,259 --> 00:05:09,300
a place where I can start writing my

116
00:05:05,060 --> 00:05:13,740
like my data smite my data information

117
00:05:09,300 --> 00:05:20,550
write my my my what's the word I'm

118
00:05:13,740 --> 00:05:23,490
looking for my I I want to be writing my

119
00:05:20,550 --> 00:05:26,460
flexible data store like the parts that

120
00:05:23,490 --> 00:05:28,290
come from bitmaps and strings and things

121
00:05:26,459 --> 00:05:30,329
that are just flexibly sized that are

122
00:05:28,290 --> 00:05:32,939
not like those even chunks right that's

123
00:05:30,329 --> 00:05:35,459
what I want to do I want to be able to

124
00:05:32,939 --> 00:05:39,870
just write those out and one of the

125
00:05:35,459 --> 00:05:44,250
things that I honestly cannot quite

126
00:05:39,870 --> 00:05:50,280
remember is I don't recall how we were

127
00:05:44,250 --> 00:05:58,649
doing appending can we quickly look at

128
00:05:50,279 --> 00:06:00,689
that how did we do that oh right we did

129
00:05:58,649 --> 00:06:02,339
that because these are relocatable so we

130
00:06:00,689 --> 00:06:04,110
just relocate them yeah all right so

131
00:06:02,339 --> 00:06:05,549
basically yeah we don't really have to

132
00:06:04,110 --> 00:06:07,020
think about anything other than what I

133
00:06:05,550 --> 00:06:08,910
just said it's really pretty

134
00:06:07,019 --> 00:06:11,729
straightforward so this should be pretty

135
00:06:08,910 --> 00:06:14,790
simple so let's go ahead and open up the

136
00:06:11,730 --> 00:06:17,330
file formats we've got here so here's

137
00:06:14,790 --> 00:06:21,600
the header file I'm sorry the header

138
00:06:17,329 --> 00:06:23,550
data so I'm gonna first clear it because

139
00:06:21,600 --> 00:06:25,080
we want to get rid of we want to make

140
00:06:23,550 --> 00:06:27,120
sure all the reserved fields are set to

141
00:06:25,079 --> 00:06:29,490
zero so that if we want to in the future

142
00:06:27,120 --> 00:06:32,040
we can look for optional things that we

143
00:06:29,490 --> 00:06:33,269
add there so for example let's say in

144
00:06:32,040 --> 00:06:35,730
the future you want to add a new array a

145
00:06:33,269 --> 00:06:38,009
fool array we want to put a zero in

146
00:06:35,730 --> 00:06:40,050
there for all existing files to make

147
00:06:38,009 --> 00:06:41,969
sure that we know there is no flu or

148
00:06:40,050 --> 00:06:43,860
in those files that way we don't have to

149
00:06:41,970 --> 00:06:45,900
bump the version number to add new

150
00:06:43,860 --> 00:06:48,000
things we only have to bump the version

151
00:06:45,899 --> 00:06:49,318
lever if we change the layout so it just

152
00:06:48,000 --> 00:06:53,339
makes it a little bit easier to maintain

153
00:06:49,319 --> 00:06:54,900
a binary file format right it's sort of

154
00:06:53,339 --> 00:06:56,848
like a little bit of a half way so you

155
00:06:54,899 --> 00:06:59,359
know if you're gonna have a binary file

156
00:06:56,848 --> 00:07:01,949
format you even have a text file format

157
00:06:59,360 --> 00:07:04,199
the bonus of a binary file format very

158
00:07:01,949 --> 00:07:08,460
easy to load it's quick there's no fuss

159
00:07:04,199 --> 00:07:10,710
etc but because there is no parser it's

160
00:07:08,459 --> 00:07:12,029
hard to insert new things into it

161
00:07:10,709 --> 00:07:15,060
because nobody's checking for anything

162
00:07:12,029 --> 00:07:16,468
right you just load and go so in a text

163
00:07:15,060 --> 00:07:19,199
file format the opposites true it's very

164
00:07:16,468 --> 00:07:21,269
slow laborious very error-prone but

165
00:07:19,199 --> 00:07:23,038
you've got this parser there doing all

166
00:07:21,269 --> 00:07:24,299
this parsing it's easy to throw new

167
00:07:23,038 --> 00:07:25,800
things into it because you can just look

168
00:07:24,300 --> 00:07:27,770
for a new symbol if you see it you

169
00:07:25,800 --> 00:07:30,569
process it if you don't you don't write

170
00:07:27,769 --> 00:07:32,370
well zeros are a way of kind of

171
00:07:30,569 --> 00:07:35,039
inserting half-and-half into like a

172
00:07:32,370 --> 00:07:37,228
binary file format inserting a zero

173
00:07:35,038 --> 00:07:39,568
point like a bunch of unused zero

174
00:07:37,228 --> 00:07:42,180
pointers is kind of like saying there's

175
00:07:39,569 --> 00:07:44,699
a bunch of symbols we could use here in

176
00:07:42,180 --> 00:07:46,978
a text parser right it's a bunch of

177
00:07:44,699 --> 00:07:49,348
options you're leaving for your future

178
00:07:46,978 --> 00:07:51,750
self to use so it's kind of a nice

179
00:07:49,348 --> 00:07:53,728
little half way it's like it doesn't

180
00:07:51,750 --> 00:07:56,908
suffer all the drawbacks of moving to a

181
00:07:53,728 --> 00:07:59,068
fully text file format which you know

182
00:07:56,908 --> 00:08:00,810
would then have lots of options but it

183
00:07:59,069 --> 00:08:02,550
also doesn't lock you down like a

184
00:08:00,810 --> 00:08:05,939
completely specified binary file format

185
00:08:02,550 --> 00:08:07,770
would where you can't add anything at

186
00:08:05,939 --> 00:08:10,589
all without breaking something

187
00:08:07,769 --> 00:08:13,829
right so it's you know there's degrees

188
00:08:10,589 --> 00:08:16,589
it's a continuum between binary and text

189
00:08:13,829 --> 00:08:20,310
and you can kind of float to a position

190
00:08:16,589 --> 00:08:22,888
that makes you happy in that sense right

191
00:08:20,310 --> 00:08:24,959
so I'm gonna go ahead and specify the

192
00:08:22,889 --> 00:08:30,900
magic value I'm gonna specify the

193
00:08:24,959 --> 00:08:32,639
version that we're writing here and then

194
00:08:30,899 --> 00:08:34,379
I need to specify the other things we've

195
00:08:32,639 --> 00:08:37,528
got like the tag count in the asset

196
00:08:34,379 --> 00:08:39,629
count and these of course are known to

197
00:08:37,528 --> 00:08:41,788
us because when we loaded we remember

198
00:08:39,629 --> 00:08:44,730
all these things so we can easily do

199
00:08:41,788 --> 00:08:46,198
them here we then have three things we

200
00:08:44,730 --> 00:08:49,320
don't know where they are at a tag array

201
00:08:46,198 --> 00:08:51,359
asset array in the annotations array so

202
00:08:49,320 --> 00:08:53,710
you know at the moment we don't really

203
00:08:51,360 --> 00:08:57,039
want to deal

204
00:08:53,710 --> 00:09:00,160
that yet so I'm just not going to write

205
00:08:57,039 --> 00:09:04,299
like I'm not going to do that however I

206
00:09:00,159 --> 00:09:05,829
am gonna do some things to prepare so

207
00:09:04,299 --> 00:09:08,139
I'm gonna get ready to have written

208
00:09:05,830 --> 00:09:12,160
these things so what I want to do is I

209
00:09:08,139 --> 00:09:15,069
want to first make the desk tags I want

210
00:09:12,159 --> 00:09:20,500
to make the desk assets and I want to

211
00:09:15,070 --> 00:09:23,470
make the desk annotations and what I'm

212
00:09:20,500 --> 00:09:25,419
doing here is to just preparing space

213
00:09:23,470 --> 00:09:29,080
because I know I'm gonna write these

214
00:09:25,419 --> 00:09:31,059
things and rather than do them after I

215
00:09:29,080 --> 00:09:33,940
write all the flexible data I want the

216
00:09:31,059 --> 00:09:37,779
arrays around first because those are

217
00:09:33,940 --> 00:09:42,780
rays are what I'm going to use to store

218
00:09:37,779 --> 00:09:47,139
where I wrote everything right so yeah

219
00:09:42,779 --> 00:09:48,279
that's just how that goes so what I'm

220
00:09:47,139 --> 00:09:51,960
going to do here is I'm just gonna

221
00:09:48,279 --> 00:09:51,959
malloc space for each of these things

222
00:09:53,580 --> 00:09:58,540
and what I'm gonna do is I'm gonna

223
00:09:56,019 --> 00:10:05,470
compute their sizes ahead of time right

224
00:09:58,539 --> 00:10:10,980
so I'm gonna say desk tags size desk

225
00:10:05,470 --> 00:10:14,440
assets sighs and just annotations oops

226
00:10:10,980 --> 00:10:16,570
annotations size like so so I'm gonna

227
00:10:14,440 --> 00:10:19,180
figure out how big each of these should

228
00:10:16,570 --> 00:10:21,510
be and of course that's really simple to

229
00:10:19,179 --> 00:10:29,469
do because we kind of know already

230
00:10:21,509 --> 00:10:30,970
exactly how it's going to go we know

231
00:10:29,470 --> 00:10:33,550
that each of these arrays stores

232
00:10:30,970 --> 00:10:36,310
something of this size and we know how

233
00:10:33,549 --> 00:10:39,219
many of each there are so we know that

234
00:10:36,309 --> 00:10:42,699
we're gonna be using the tag count maybe

235
00:10:39,220 --> 00:10:44,370
I'll do it this way instead we know that

236
00:10:42,700 --> 00:10:47,470
we're going to be doing the tag count

237
00:10:44,370 --> 00:10:48,429
for the tags and we know that the assets

238
00:10:47,470 --> 00:10:51,190
and annotations

239
00:10:48,429 --> 00:10:53,169
those are both going to come from

240
00:10:51,190 --> 00:10:55,120
however many assets are because there's

241
00:10:53,169 --> 00:10:57,429
one annotation per asset assuming that

242
00:10:55,120 --> 00:10:58,929
that array is present which in the

243
00:10:57,429 --> 00:11:01,719
future we can actually do a thing where

244
00:10:58,929 --> 00:11:03,239
we don't put that array in if we want to

245
00:11:01,720 --> 00:11:05,740
strip it out I

246
00:11:03,240 --> 00:11:07,450
we're just saying that's possible if we

247
00:11:05,740 --> 00:11:08,769
wanted to save space about I don't

248
00:11:07,450 --> 00:11:14,080
I think it's ever gonna matter but you

249
00:11:08,769 --> 00:11:16,210
could write okay so assuming that you've

250
00:11:14,080 --> 00:11:18,670
got this set up now what we can do is

251
00:11:16,210 --> 00:11:25,480
just pass these sizes in so we know that

252
00:11:18,669 --> 00:11:27,459
that's how many we have like so and once

253
00:11:25,480 --> 00:11:29,529
we've got those file once we've got

254
00:11:27,460 --> 00:11:31,090
those arrays ready we know that we can

255
00:11:29,529 --> 00:11:33,189
now store all our information in them so

256
00:11:31,090 --> 00:11:36,430
when we do our for I loops here over the

257
00:11:33,190 --> 00:11:37,990
tags and the assets we can you know do

258
00:11:36,429 --> 00:11:40,120
exactly what we want to do there which

259
00:11:37,990 --> 00:11:41,950
is stored where we wrote everything and

260
00:11:40,120 --> 00:11:44,769
other stuff like this but then when we

261
00:11:41,950 --> 00:11:47,410
get to the end now is when we would

262
00:11:44,769 --> 00:11:49,179
finally write them out now how am I

263
00:11:47,409 --> 00:11:50,679
gonna write them out well one of the

264
00:11:49,179 --> 00:11:52,989
things that I think is important to

265
00:11:50,679 --> 00:11:55,359
remember is all of the things that we're

266
00:11:52,990 --> 00:11:57,370
writing kind of take the same form they

267
00:11:55,360 --> 00:11:59,500
are something that has a particular size

268
00:11:57,370 --> 00:12:03,310
so we're we know we're going to write

269
00:11:59,500 --> 00:12:06,159
out a block and then somebody somewhere

270
00:12:03,309 --> 00:12:07,869
wants to know where we wrote it so for

271
00:12:06,159 --> 00:12:09,879
example when we write out the death tags

272
00:12:07,870 --> 00:12:12,250
array we know that the header wants to

273
00:12:09,879 --> 00:12:14,230
put those tags into the array right and

274
00:12:12,250 --> 00:12:17,250
so what we're going to do is we're going

275
00:12:14,230 --> 00:12:20,320
to put where we voted into here that

276
00:12:17,250 --> 00:12:22,330
naturally informs what the API should

277
00:12:20,320 --> 00:12:23,650
look like for writing this file because

278
00:12:22,330 --> 00:12:33,700
we know that what we're gonna do is

279
00:12:23,649 --> 00:12:36,490
something that looks like this right we

280
00:12:33,700 --> 00:12:42,580
know we've got desc tag size here we

281
00:12:36,490 --> 00:12:44,560
know that we've got the pointer to it we

282
00:12:42,580 --> 00:12:50,650
know we've got the assets here

283
00:12:44,559 --> 00:12:52,079
oops tests sighs just assets and we know

284
00:12:50,649 --> 00:12:55,990
they got the annotations tests

285
00:12:52,080 --> 00:12:59,020
annotations sighs yes annotations and

286
00:12:55,990 --> 00:13:01,379
like I said this is optional so if we

287
00:12:59,019 --> 00:13:05,049
wanted to we could do something like

288
00:13:01,379 --> 00:13:11,679
include annotations equals true and

289
00:13:05,049 --> 00:13:13,750
tests like this and so this actually is

290
00:13:11,679 --> 00:13:15,759
pretty easy for us to do now obviously

291
00:13:13,750 --> 00:13:17,470
it can't write to a file without knowing

292
00:13:15,759 --> 00:13:20,129
what the file is it's that dest file

293
00:13:17,470 --> 00:13:22,949
there so I can do this if I want

294
00:13:20,129 --> 00:13:25,379
- and just complete the API it's gonna

295
00:13:22,948 --> 00:13:29,609
be pretty clear what it would be like so

296
00:13:25,379 --> 00:13:31,110
right and so if I just used this right

297
00:13:29,610 --> 00:13:34,110
block function it should be pretty

298
00:13:31,110 --> 00:13:37,169
straightforward for me to complete

299
00:13:34,110 --> 00:13:39,778
everything that I wanted to do okay

300
00:13:37,169 --> 00:13:41,759
so similarly now if I'm up here with my

301
00:13:39,778 --> 00:13:45,360
4i loops I can just finish everything

302
00:13:41,759 --> 00:13:47,909
off let's suppose that I want to write

303
00:13:45,360 --> 00:13:50,940
all of the tags first so here's the tag

304
00:13:47,909 --> 00:13:56,009
index I'm going to loop over all of the

305
00:13:50,940 --> 00:14:04,709
tags and what I'm going to do is take

306
00:13:56,009 --> 00:14:14,190
the desk tag and I now also want the

307
00:14:04,708 --> 00:14:16,229
source tag and once I have these two I

308
00:14:14,190 --> 00:14:18,870
know that I'm just gonna copy the desk

309
00:14:16,230 --> 00:14:21,360
tag from I'm just gonna take the source

310
00:14:18,870 --> 00:14:22,889
tag and copy it into the desk tag now we

311
00:14:21,360 --> 00:14:25,199
know there's nothing else to do it's

312
00:14:22,889 --> 00:14:27,360
just too flat values so this is pretty

313
00:14:25,198 --> 00:14:29,370
straightforward it's that's basically it

314
00:14:27,360 --> 00:14:31,438
it doesn't need to write any blocks it

315
00:14:29,370 --> 00:14:33,389
doesn't need to allocating space so this

316
00:14:31,438 --> 00:14:35,009
array is very simple right now if the

317
00:14:33,389 --> 00:14:37,019
tag structure got more complicated we

318
00:14:35,009 --> 00:14:38,669
would put the logic in here but it at

319
00:14:37,019 --> 00:14:40,740
the moment it isn't so it just stays

320
00:14:38,669 --> 00:14:44,938
simple so all of our logic basically

321
00:14:40,740 --> 00:14:49,169
comes in the form of the asset

322
00:14:44,938 --> 00:14:51,208
processing so in here as a loop over the

323
00:14:49,169 --> 00:14:52,828
asset indices what I want to do is

324
00:14:51,208 --> 00:14:54,479
gather all the information that I might

325
00:14:52,828 --> 00:15:01,729
need so the first thing I need is the

326
00:14:54,480 --> 00:15:06,259
source asset I also need the annotation

327
00:15:01,730 --> 00:15:06,259
and I really need I guess this

328
00:15:10,759 --> 00:15:16,169
and then finally I need the destination

329
00:15:13,678 --> 00:15:17,698
asset and destination annotation that

330
00:15:16,169 --> 00:15:23,149
I'm writing right so I got the two

331
00:15:17,698 --> 00:15:23,149
sources now I have the two destinations

332
00:15:25,188 --> 00:15:45,509
right uh this is not what I meant to do

333
00:15:37,438 --> 00:15:48,058
that's what I meant to do there we go so

334
00:15:45,509 --> 00:15:49,619
this sets us up to start writing the

335
00:15:48,058 --> 00:15:51,269
assets but now we have to actually

336
00:15:49,619 --> 00:15:54,629
figure out how we're actually going to

337
00:15:51,269 --> 00:15:57,629
do that so if we look down here here's

338
00:15:54,629 --> 00:15:59,369
our HHA asset we know we can copy this

339
00:15:57,629 --> 00:16:01,709
directly and some of the things will

340
00:15:59,369 --> 00:16:04,709
work all of this stuff is correct that's

341
00:16:01,708 --> 00:16:08,219
right these are right these two things

342
00:16:04,708 --> 00:16:12,018
are not right well I guess the size is

343
00:16:08,220 --> 00:16:14,009
the offset is going to change right

344
00:16:12,019 --> 00:16:17,220
because it could be in a different

345
00:16:14,009 --> 00:16:18,959
location in this file than it was in the

346
00:16:17,220 --> 00:16:21,720
original file especially if we start

347
00:16:18,958 --> 00:16:23,698
doing things like merges or whatever and

348
00:16:21,720 --> 00:16:26,399
we may need to support a little bit more

349
00:16:23,698 --> 00:16:29,698
like if we did emerge one thing that

350
00:16:26,399 --> 00:16:33,178
you'll notice here is for example when

351
00:16:29,698 --> 00:16:34,678
we have this data store pointer all of

352
00:16:33,178 --> 00:16:38,938
this stuff is off of the data store

353
00:16:34,678 --> 00:16:40,918
pointer and that doesn't really help so

354
00:16:38,938 --> 00:16:42,958
you know one thing we could do here is

355
00:16:40,918 --> 00:16:46,110
change sort of the way we're doing this

356
00:16:42,958 --> 00:16:48,268
data store a little bit to make it more

357
00:16:46,110 --> 00:16:50,568
flexible now I'm not going to do that

358
00:16:48,269 --> 00:16:50,568
yet

359
00:16:56,690 --> 00:17:02,940
I'm just gonna kind of leave that for a

360
00:16:59,519 --> 00:17:04,379
moment but that is this is something

361
00:17:02,940 --> 00:17:07,590
that I think we can come back to and

362
00:17:04,380 --> 00:17:09,200
make better than it is right now and we

363
00:17:07,589 --> 00:17:12,349
can sort of see how we might do that a

364
00:17:09,200 --> 00:17:14,819
little later on right okay

365
00:17:12,349 --> 00:17:18,480
but at the moment for just rewriting the

366
00:17:14,819 --> 00:17:20,399
files when we load this stuff in here we

367
00:17:18,480 --> 00:17:21,599
can still use the distort as it is so

368
00:17:20,400 --> 00:17:23,070
the way that we need to use the

369
00:17:21,599 --> 00:17:25,199
datastore is that's how we can figure

370
00:17:23,069 --> 00:17:28,679
out what the asset data actually

371
00:17:25,200 --> 00:17:29,850
consists of right so what we want to do

372
00:17:28,680 --> 00:17:31,560
here is say okay

373
00:17:29,849 --> 00:17:34,019
let's write out this block we know we've

374
00:17:31,559 --> 00:17:37,019
got a source asset we know we've got a

375
00:17:34,019 --> 00:17:38,339
desk asset we can start by copying all

376
00:17:37,019 --> 00:17:40,650
the fields over because we know that

377
00:17:38,339 --> 00:17:42,509
most of them apply but then we have to

378
00:17:40,650 --> 00:17:45,840
kind of ping back and take a look okay

379
00:17:42,509 --> 00:17:48,629
so the data assets sorry the data offset

380
00:17:45,839 --> 00:17:51,209
is going to be wrong so we can take the

381
00:17:48,630 --> 00:17:53,610
data offset and say well we know that

382
00:17:51,210 --> 00:17:55,049
the data offset for this file is going

383
00:17:53,609 --> 00:17:57,869
to be whatever the result of the right

384
00:17:55,049 --> 00:17:59,369
block is when we write this out so what

385
00:17:57,869 --> 00:18:01,799
we could say is all right when we write

386
00:17:59,369 --> 00:18:08,789
this block out go ahead and say whatever

387
00:18:01,799 --> 00:18:10,379
the the the best asset data sizes

388
00:18:08,789 --> 00:18:12,509
whatever that size is that's how much

389
00:18:10,380 --> 00:18:15,480
we're gonna write out we know that the

390
00:18:12,509 --> 00:18:17,460
Deaf's annotations sorry the we know

391
00:18:15,480 --> 00:18:21,200
that the location of it is going to be

392
00:18:17,460 --> 00:18:24,690
that data store so the source data store

393
00:18:21,200 --> 00:18:26,430
plus whatever the old original offset

394
00:18:24,690 --> 00:18:28,529
was right because that's telling us

395
00:18:26,430 --> 00:18:31,289
where it was in the data store so the

396
00:18:28,529 --> 00:18:32,579
source assets data offset offset from

397
00:18:31,289 --> 00:18:35,250
the data store that's where the original

398
00:18:32,579 --> 00:18:37,529
block of data was and then we can just

399
00:18:35,250 --> 00:18:39,569
append that to our file so that copies

400
00:18:37,529 --> 00:18:41,730
the data out of the in memory block we

401
00:18:39,569 --> 00:18:43,200
loaded when we loaded the file out into

402
00:18:41,730 --> 00:18:45,509
the new file so now it's been written

403
00:18:43,200 --> 00:18:47,340
and we store where it was written that's

404
00:18:45,509 --> 00:18:49,140
really all we need to do for the asset

405
00:18:47,339 --> 00:18:52,769
it's the annotations that create more of

406
00:18:49,140 --> 00:18:55,440
a problem those are fairly extensive

407
00:18:52,769 --> 00:18:58,680
here and so we need to do a lot more

408
00:18:55,440 --> 00:19:01,529
work to write those out so here we have

409
00:18:58,680 --> 00:19:04,200
our deaths annotation that we need to

410
00:19:01,529 --> 00:19:09,029
fill out so effectively what we're

411
00:19:04,200 --> 00:19:11,130
looking at is some a big kind of giant

412
00:19:09,029 --> 00:19:12,480
just go ahead and prep this a big sort

413
00:19:11,130 --> 00:19:17,310
of thing that looks like this

414
00:19:12,480 --> 00:19:20,099
we don't need oops to set the zeros on

415
00:19:17,309 --> 00:19:22,169
these reserves because what we could do

416
00:19:20,099 --> 00:19:24,259
is just zero the entire array like

417
00:19:22,170 --> 00:19:31,259
that's what we should do

418
00:19:24,259 --> 00:19:32,819
let me do a bit here now well that's

419
00:19:31,259 --> 00:19:33,900
actually already gonna happen now I

420
00:19:32,819 --> 00:19:41,629
think about it so it's really only the

421
00:19:33,900 --> 00:19:41,630
annotation we need so I can just do this

422
00:19:42,589 --> 00:19:47,669
clear the whole annotation out and then

423
00:19:45,029 --> 00:19:52,049
we just set the parts that we actually

424
00:19:47,670 --> 00:19:57,990
care about it's a little overzealous

425
00:19:52,049 --> 00:20:00,629
there so in here we know that we've got

426
00:19:57,990 --> 00:20:03,240
kind of a number of different sorts of

427
00:20:00,630 --> 00:20:05,130
things restoring so let's take a look

428
00:20:03,240 --> 00:20:07,460
first of all we know that a bunch of

429
00:20:05,130 --> 00:20:11,160
them just come from the source

430
00:20:07,460 --> 00:20:12,539
annotation sooo for the ones that come

431
00:20:11,160 --> 00:20:14,790
from the source annotation we've got a

432
00:20:12,539 --> 00:20:18,839
pretty easy job right those just get

433
00:20:14,789 --> 00:20:22,470
copied directly in so things like the

434
00:20:18,839 --> 00:20:24,059
sprite sheet and the source file date

435
00:20:22,470 --> 00:20:29,819
like that sort of stuff right

436
00:20:24,059 --> 00:20:32,399
oops source file date source file

437
00:20:29,819 --> 00:20:34,829
checksum oh you know what I guess these

438
00:20:32,400 --> 00:20:37,890
reserves kind of have to be copied as

439
00:20:34,829 --> 00:20:40,230
well right so never mind I guess we will

440
00:20:37,890 --> 00:20:41,790
actually do those I didn't really think

441
00:20:40,230 --> 00:20:43,049
of it that way I should have thought of

442
00:20:41,789 --> 00:20:44,789
it that way because we want to copy

443
00:20:43,049 --> 00:20:46,740
reserves over even if we don't know what

444
00:20:44,789 --> 00:20:48,899
they are we want to preserve them right

445
00:20:46,740 --> 00:20:50,640
probably I don't know that we

446
00:20:48,900 --> 00:20:53,040
necessarily can it may be a fool's

447
00:20:50,640 --> 00:20:55,170
errand to bother so it may be that we

448
00:20:53,039 --> 00:20:56,430
actually want a strip and then I think

449
00:20:55,170 --> 00:20:58,730
about it we probably just want to strip

450
00:20:56,430 --> 00:20:58,730
them out

451
00:21:02,809 --> 00:21:07,200
yeah we probably just want to strip them

452
00:21:05,130 --> 00:21:08,850
out because assuming that they referred

453
00:21:07,200 --> 00:21:09,960
to something that was like an offset in

454
00:21:08,849 --> 00:21:13,289
the file or something

455
00:21:09,960 --> 00:21:16,289
we can't preserve that there's no way to

456
00:21:13,289 --> 00:21:18,180
preserve that information so that yeah

457
00:21:16,289 --> 00:21:21,869
that that doesn't actually work so never

458
00:21:18,180 --> 00:21:24,769
mind we won't be doing that so what we

459
00:21:21,869 --> 00:21:27,599
want to do now is actually write these

460
00:21:24,769 --> 00:21:30,869
in for the information here about the

461
00:21:27,599 --> 00:21:36,559
file rights of base name is base name

462
00:21:30,869 --> 00:21:36,559
where where is the base name count

463
00:21:37,579 --> 00:21:42,960
source file base name count we

464
00:21:41,250 --> 00:21:45,410
accidentally deleted that and I

465
00:21:42,960 --> 00:21:48,630
apologize so there it is

466
00:21:45,410 --> 00:21:52,830
so there we go so basically what this

467
00:21:48,630 --> 00:21:58,260
boils down to is a series of us writing

468
00:21:52,829 --> 00:22:03,329
these things out like so right so we

469
00:21:58,259 --> 00:22:06,539
copy these things like this and then we

470
00:22:03,329 --> 00:22:10,079
effectively have to write some strings

471
00:22:06,539 --> 00:22:13,799
out that come from actual like C string

472
00:22:10,079 --> 00:22:15,629
style stuff we've got here so again we

473
00:22:13,799 --> 00:22:18,629
pretty much just know what these are

474
00:22:15,630 --> 00:22:21,180
though so it's not particularly hard for

475
00:22:18,630 --> 00:22:23,730
us to do and furthermore we can probably

476
00:22:21,180 --> 00:22:25,730
just make this a bit of a utility here

477
00:22:23,730 --> 00:22:29,309
we could say something like write string

478
00:22:25,730 --> 00:22:31,680
and then include the count field as an

479
00:22:29,309 --> 00:22:35,490
address for it to fill out so this can

480
00:22:31,680 --> 00:22:37,860
be something that's fairly that's fairly

481
00:22:35,490 --> 00:22:40,319
automated for us we just say look source

482
00:22:37,859 --> 00:22:42,959
file base name is a string right the

483
00:22:40,319 --> 00:22:45,419
strings thick the count in here and

484
00:22:42,960 --> 00:22:52,740
that's you know have a little party

485
00:22:45,420 --> 00:22:54,690
right like so so that that's something

486
00:22:52,740 --> 00:23:01,799
we could easily do and probably should

487
00:22:54,690 --> 00:23:03,840
and you know and and did now yeah this

488
00:23:01,799 --> 00:23:06,599
is a little bit kind of annoying to copy

489
00:23:03,839 --> 00:23:11,429
but let's do it anyway so let's do that

490
00:23:06,599 --> 00:23:13,419
that that here we go and now I just have

491
00:23:11,430 --> 00:23:16,570
to change these

492
00:23:13,420 --> 00:23:22,289
to be the correct things so I want to do

493
00:23:16,569 --> 00:23:26,439
author name offset here author name

494
00:23:22,289 --> 00:23:32,549
author name count and this one is asset

495
00:23:26,440 --> 00:23:32,549
description offset asset description

496
00:23:33,029 --> 00:23:39,399
asset description account and you know

497
00:23:36,700 --> 00:23:41,230
we could make utility for this like we

498
00:23:39,400 --> 00:23:43,120
could make a bundle that's what a string

499
00:23:41,230 --> 00:23:46,059
is in the file and do some stuff but

500
00:23:43,119 --> 00:23:48,279
it's you want them inter lead it's it's

501
00:23:46,059 --> 00:23:49,569
a long story I don't think we really

502
00:23:48,279 --> 00:23:54,809
want to go down that road it's good

503
00:23:49,569 --> 00:23:58,240
enough as it is so it's fine so anyway

504
00:23:54,809 --> 00:23:59,289
this will write those strings out so

505
00:23:58,240 --> 00:24:00,700
soon we have right block and right

506
00:23:59,289 --> 00:24:03,399
string that will take care of the

507
00:24:00,700 --> 00:24:07,029
annotations for us and really at that

508
00:24:03,400 --> 00:24:09,490
point we've you know we're pretty much

509
00:24:07,029 --> 00:24:10,809
done I think I mean that's that's

510
00:24:09,490 --> 00:24:13,480
basically all there is to it

511
00:24:10,809 --> 00:24:16,329
so once we've written all of this stuff

512
00:24:13,480 --> 00:24:18,880
out all that really remains is to take

513
00:24:16,329 --> 00:24:20,859
care of the header so the first thing we

514
00:24:18,880 --> 00:24:22,450
need to do is respect the fact that the

515
00:24:20,859 --> 00:24:25,240
header can't be written till we know all

516
00:24:22,450 --> 00:24:27,759
the information so what we probably want

517
00:24:25,240 --> 00:24:30,130
to do is leave space for it first

518
00:24:27,759 --> 00:24:32,019
so we've got the header size we know

519
00:24:30,130 --> 00:24:34,240
that it's the size of whatever the

520
00:24:32,019 --> 00:24:36,609
header or struct is so what we can do

521
00:24:34,240 --> 00:24:39,970
first is just F seek our pointer for the

522
00:24:36,609 --> 00:24:42,939
Deaf's file forward by the header size

523
00:24:39,970 --> 00:24:45,309
so that it starts out with a header size

524
00:24:42,940 --> 00:24:49,120
chunk missing from the beginning of the

525
00:24:45,309 --> 00:24:51,250
file and we'll just rewrite that later

526
00:24:49,119 --> 00:24:53,799
on so we start there we do all of our

527
00:24:51,250 --> 00:24:56,170
rights after the fact and then finally

528
00:24:53,799 --> 00:24:58,659
at the end we can just F seek back to

529
00:24:56,170 --> 00:25:02,320
the beginning of the file like so and

530
00:24:58,660 --> 00:25:04,750
then write out the header block by

531
00:25:02,319 --> 00:25:07,740
saying look you remember that header we

532
00:25:04,750 --> 00:25:11,559
filled out we would like you to write it

533
00:25:07,740 --> 00:25:17,890
and by the way we can also double check

534
00:25:11,559 --> 00:25:20,289
here check header location we can do an

535
00:25:17,890 --> 00:25:22,090
assertion that makes sure that the

536
00:25:20,289 --> 00:25:23,829
header got written to block 0 because

537
00:25:22,089 --> 00:25:26,199
that's where it has to go like if it

538
00:25:23,829 --> 00:25:27,220
doesn't start at zero the game won't

539
00:25:26,200 --> 00:25:29,200
find it and that will

540
00:25:27,220 --> 00:25:32,470
be very useful but that's basically it

541
00:25:29,200 --> 00:25:34,960
that writes the file out I think with

542
00:25:32,470 --> 00:25:38,048
all of the data I don't think there's

543
00:25:34,960 --> 00:25:39,970
anything particularly fancy going on

544
00:25:38,048 --> 00:25:40,990
there otherwise they don't know if I've

545
00:25:39,970 --> 00:25:43,269
forgotten anything we'll have to

546
00:25:40,990 --> 00:25:46,620
double-check but then we can just go

547
00:25:43,269 --> 00:25:51,940
ahead here and say all right here's the

548
00:25:46,619 --> 00:25:54,149
the right string that's the string -

549
00:25:51,940 --> 00:25:54,150
right

550
00:25:56,609 --> 00:26:03,879
there's the destination count and the

551
00:25:59,919 --> 00:26:06,299
destination file like so and then of

552
00:26:03,880 --> 00:26:17,110
course we also have the right block

553
00:26:06,298 --> 00:26:20,619
that's got the size so yeah I think I

554
00:26:17,109 --> 00:26:22,689
should make these all be 32 now that I

555
00:26:20,619 --> 00:26:26,259
think about it just because we I don't

556
00:26:22,690 --> 00:26:29,558
think we support 30 64-bit sizes really

557
00:26:26,259 --> 00:26:31,808
anywhere currently everything's got to

558
00:26:29,558 --> 00:26:35,019
be 32-bit sizes you can have more than

559
00:26:31,808 --> 00:26:36,730
60 you can have like lots of 4 gigabyte

560
00:26:35,019 --> 00:26:38,589
chunks in the file so it could be way

561
00:26:36,730 --> 00:26:40,240
bigger than 4 gigabytes but nothing

562
00:26:38,589 --> 00:26:42,490
individually can be bigger than 4

563
00:26:40,240 --> 00:26:44,200
gigabytes currently so I think we're

564
00:26:42,490 --> 00:26:50,288
really looking at some more like that

565
00:26:44,200 --> 00:26:52,179
which is fine so there's the data and

566
00:26:50,288 --> 00:26:56,019
there's the desk file now these are

567
00:26:52,179 --> 00:26:59,440
really trivial for us to to write

568
00:26:56,019 --> 00:27:02,109
obviously the location in the file can

569
00:26:59,440 --> 00:27:02,679
be given to us by FTL which will say

570
00:27:02,109 --> 00:27:05,259
where it is

571
00:27:02,679 --> 00:27:06,788
so if I just want to find out where we

572
00:27:05,259 --> 00:27:08,619
are in the file that will tell me where

573
00:27:06,788 --> 00:27:11,259
we are in the file that's where we are

574
00:27:08,619 --> 00:27:14,609
going to write we can then do our F

575
00:27:11,259 --> 00:27:18,129
right we can pass the destination file

576
00:27:14,609 --> 00:27:21,668
the data the size write it out and then

577
00:27:18,130 --> 00:27:24,760
we can use that function to implement

578
00:27:21,669 --> 00:27:26,980
our string right as well so we don't

579
00:27:24,759 --> 00:27:28,990
have to write it twice right everything

580
00:27:26,980 --> 00:27:30,490
can go through the same path so when we

581
00:27:28,990 --> 00:27:32,349
want to write a block well we know the

582
00:27:30,490 --> 00:27:34,450
size of the string that's just whatever

583
00:27:32,349 --> 00:27:36,879
the count was we know the data from the

584
00:27:34,450 --> 00:27:38,860
string it's whatever the data was and so

585
00:27:36,880 --> 00:27:41,060
what we need to do is fill in desc count

586
00:27:38,859 --> 00:27:42,349
first with the size of the string

587
00:27:41,059 --> 00:27:43,819
so that that'll get written to the

588
00:27:42,349 --> 00:27:51,589
header properly and then we're done

589
00:27:43,819 --> 00:27:54,490
right okay uh let's see so yeah these

590
00:27:51,589 --> 00:27:58,519
have to be you thirty twos the moment

591
00:27:54,490 --> 00:28:01,120
when we write the block outs we need to

592
00:27:58,519 --> 00:28:07,960
pass the desk file which we didn't do

593
00:28:01,119 --> 00:28:07,959
let's see here that is a type vote

594
00:28:09,628 --> 00:28:22,719
this that way so the author name is not

595
00:28:22,089 --> 00:28:34,928
in there

596
00:28:22,720 --> 00:28:48,730
it's just author that's why what so it's

597
00:28:34,929 --> 00:28:55,600
yeah it's not names all right so that's

598
00:28:48,730 --> 00:28:58,899
supposed to write a file we could test

599
00:28:55,599 --> 00:29:00,638
it by using rewrite but we would have a

600
00:28:58,898 --> 00:29:01,928
problem which is that we'd have no idea

601
00:29:00,638 --> 00:29:03,849
if it rewrote it correctly

602
00:29:01,929 --> 00:29:08,440
the reason for that is that we don't

603
00:29:03,849 --> 00:29:11,288
load HH once currently so really the

604
00:29:08,440 --> 00:29:14,350
last thing we have to do now is make

605
00:29:11,288 --> 00:29:16,960
something that actually loads HH 1 HH a

606
00:29:14,349 --> 00:29:24,099
version 1 files this should be

607
00:29:16,960 --> 00:29:25,840
relatively straightforward because all

608
00:29:24,099 --> 00:29:28,329
of the stuff is in the right format so

609
00:29:25,839 --> 00:29:31,109
it should just be a case of literally

610
00:29:28,329 --> 00:29:34,990
just pointing to things

611
00:29:31,109 --> 00:29:38,229
yeah and that's about it so you know

612
00:29:34,990 --> 00:29:43,359
when we load the file the data store has

613
00:29:38,230 --> 00:29:51,909
already been loaded so in here if we

614
00:29:43,359 --> 00:29:54,089
just look at the data store of the file

615
00:29:51,909 --> 00:29:59,580
as a header we should be able to just

616
00:29:54,089 --> 00:30:02,250
put everything together so for example

617
00:29:59,579 --> 00:30:05,548
let's see here

618
00:30:02,250 --> 00:30:09,298
where's my HHA edit I just need to fill

619
00:30:05,548 --> 00:30:13,168
out all this stuff and make it be set

620
00:30:09,298 --> 00:30:16,829
correctly so actually let me swap those

621
00:30:13,169 --> 00:30:19,169
two okay so my head's not in the way so

622
00:30:16,829 --> 00:30:20,730
if I want to figure out for example if

623
00:30:19,169 --> 00:30:23,070
this thing has annotations

624
00:30:20,730 --> 00:30:25,048
I can just say header annotations equals

625
00:30:23,069 --> 00:30:25,769
true inside an if statement the if

626
00:30:25,048 --> 00:30:28,379
statement

627
00:30:25,769 --> 00:30:30,179
oops sorry hij the if statement would

628
00:30:28,380 --> 00:30:33,450
just be whether the annotation array had

629
00:30:30,179 --> 00:30:38,429
an offset right so if the annotations

630
00:30:33,450 --> 00:30:42,630
that's that's in this header here this

631
00:30:38,429 --> 00:30:44,880
thing if this was nonzero then it has

632
00:30:42,630 --> 00:30:46,799
them otherwise it doesn't right we know

633
00:30:44,880 --> 00:30:48,809
this is said already magic value and

634
00:30:46,798 --> 00:30:50,970
source version should also be set if I'm

635
00:30:48,808 --> 00:30:56,970
not mistaken those are set by the

636
00:30:50,970 --> 00:31:02,250
calling code right so the code where

637
00:30:56,970 --> 00:31:04,409
does the load read hhj code happen so

638
00:31:02,250 --> 00:31:06,450
you can see that gets set here right so

639
00:31:04,409 --> 00:31:10,020
the file and the magic value and the

640
00:31:06,450 --> 00:31:11,819
version number of those get read so we

641
00:31:10,019 --> 00:31:13,650
don't really have to worry about those

642
00:31:11,819 --> 00:31:16,859
it's the rest of the stuff that we have

643
00:31:13,650 --> 00:31:19,710
to actually do so let's go ahead and and

644
00:31:16,859 --> 00:31:21,839
fill those in now again it's pretty

645
00:31:19,710 --> 00:31:24,779
straightforward the tag count the tags

646
00:31:21,839 --> 00:31:27,750
the asset count and the assets we don't

647
00:31:24,779 --> 00:31:29,849
have to load anything now because it's

648
00:31:27,750 --> 00:31:31,558
just flat memory we can point to and

649
00:31:29,849 --> 00:31:33,629
it's all correct because it's the it

650
00:31:31,558 --> 00:31:40,048
does it's not doing an import it's

651
00:31:33,630 --> 00:31:42,720
actually just it's the correct stuff you

652
00:31:40,048 --> 00:31:45,470
know it's it's the file is right so we

653
00:31:42,720 --> 00:31:48,058
can go ahead and just cast these dupes

654
00:31:45,470 --> 00:31:51,029
we can just go ahead and cast the data

655
00:31:48,058 --> 00:31:54,089
store to those pieces of information and

656
00:31:51,029 --> 00:31:56,389
they're right so let's suppose I just

657
00:31:54,089 --> 00:32:00,329
look here and say well here's the oops

658
00:31:56,390 --> 00:32:05,210
header there's the tag count and we know

659
00:32:00,329 --> 00:32:10,189
that the tags offset from the datastore

660
00:32:05,210 --> 00:32:10,190
I'm just going to call that D let's say

661
00:32:14,410 --> 00:32:24,340
off of the data store that's the value

662
00:32:17,150 --> 00:32:27,500
we want same is true for the assets

663
00:32:24,339 --> 00:32:30,039
right and then the only thing we really

664
00:32:27,500 --> 00:32:32,210
have to process now is those annotations

665
00:32:30,039 --> 00:32:33,589
because everything else is now right

666
00:32:32,210 --> 00:32:35,360
like the assets and everything are

667
00:32:33,589 --> 00:32:37,399
correct so the only thing that we have

668
00:32:35,359 --> 00:32:40,009
to do now is actually allocate space for

669
00:32:37,400 --> 00:32:42,080
the annotations array and actually

670
00:32:40,009 --> 00:32:43,940
process that correctly so if this thing

671
00:32:42,079 --> 00:32:46,220
has annotations then what we need to do

672
00:32:43,940 --> 00:32:49,160
is say that we've got an HHA annotation

673
00:32:46,220 --> 00:32:52,579
that's a source annotation and that's

674
00:32:49,160 --> 00:33:00,410
going to be pointed to by whatever the

675
00:32:52,579 --> 00:33:09,789
header annotations pointer is right and

676
00:33:00,410 --> 00:33:09,790
we can do a for loop over them like so

677
00:33:15,240 --> 00:33:25,680
why did I do I keep getting confused

678
00:33:19,500 --> 00:33:27,539
between HHA and header there we go so I

679
00:33:25,680 --> 00:33:30,090
want to make two of these now I want to

680
00:33:27,539 --> 00:33:33,200
make a loaded HH annotation that I'm

681
00:33:30,089 --> 00:33:38,339
going to write into and I have a source

682
00:33:33,200 --> 00:33:39,809
8hh annotation right and so what I want

683
00:33:38,339 --> 00:33:43,199
to do here is I want to go ahead and

684
00:33:39,809 --> 00:33:45,899
load these in where I say all right each

685
00:33:43,200 --> 00:33:47,670
one of these things is going to be based

686
00:33:45,900 --> 00:33:51,120
off of one of these so I can say look

687
00:33:47,670 --> 00:33:54,000
annotation index get the one that we're

688
00:33:51,119 --> 00:33:55,859
reading from and then loaded HHA

689
00:33:54,000 --> 00:33:58,200
annotation test annotations that's just

690
00:33:55,859 --> 00:34:00,269
going to be the annotations plus

691
00:33:58,200 --> 00:34:02,309
annotation index and then I just have to

692
00:34:00,269 --> 00:34:06,319
load them in so we know exactly what

693
00:34:02,309 --> 00:34:06,319
we're loading in it's this set of things

694
00:34:06,500 --> 00:34:13,190
so we can just say jest annotation

695
00:34:09,480 --> 00:34:17,490
source validate your source annotation

696
00:34:13,190 --> 00:34:24,269
source file date and the same is true of

697
00:34:17,489 --> 00:34:26,569
the checksum same is true the

698
00:34:24,269 --> 00:34:26,570
spritesheet

699
00:34:37,010 --> 00:34:49,690
and so that copies those things in and

700
00:34:39,260 --> 00:34:53,740
then we need to load our strings out and

701
00:34:49,690 --> 00:34:53,740
again that's going to be pretty simple

702
00:34:55,838 --> 00:35:00,710
I'm gonna make a little utility function

703
00:34:58,130 --> 00:35:03,230
for it that basically passes the base

704
00:35:00,710 --> 00:35:06,650
pointer and then passes the two pieces

705
00:35:03,230 --> 00:35:13,300
of information we need for the string so

706
00:35:06,650 --> 00:35:20,858
that is the source file base name count

707
00:35:13,300 --> 00:35:20,859
and the source file face name offset

708
00:35:22,150 --> 00:35:28,869
okay um know which is the best like that

709
00:35:30,250 --> 00:35:34,420
so here we just load the strings in

710
00:35:50,079 --> 00:36:00,230
and think we're done so we just need

711
00:35:58,070 --> 00:36:02,539
this function to do our string D code

712
00:36:00,230 --> 00:36:04,460
for us and it's not really particularly

713
00:36:02,539 --> 00:36:07,460
interesting right all we're doing here

714
00:36:04,460 --> 00:36:09,829
is saying well we have a data store

715
00:36:07,460 --> 00:36:13,970
pointer I guess we'll just keep calling

716
00:36:09,829 --> 00:36:16,579
it D we have a count and we have an

717
00:36:13,969 --> 00:36:19,879
offset and all we're trying to do is

718
00:36:16,579 --> 00:36:21,289
construct the new string from that so

719
00:36:19,880 --> 00:36:22,670
what we want to do is say well the count

720
00:36:21,289 --> 00:36:25,610
of the string is just the count that

721
00:36:22,670 --> 00:36:29,480
we're told and the data for the string

722
00:36:25,610 --> 00:36:32,539
is just going to be going to be the

723
00:36:29,480 --> 00:36:37,820
offset off of the data store and that's

724
00:36:32,539 --> 00:36:40,059
it right so now we load it we're loading

725
00:36:37,820 --> 00:36:40,059
everything

726
00:36:40,119 --> 00:36:49,039
HHA Asset count but we don't actually

727
00:36:45,980 --> 00:36:55,150
set our annotations up at all so we need

728
00:36:49,039 --> 00:36:55,150
to allocate those here

729
00:37:00,900 --> 00:37:11,519
and that's all we need to do for that so

730
00:37:08,480 --> 00:37:14,250
that Malik's an array for us to put our

731
00:37:11,519 --> 00:37:17,489
loaded annotations in and it also tells

732
00:37:14,250 --> 00:37:22,289
us you know hey we we've got some

733
00:37:17,489 --> 00:37:25,379
annotations now I think that's it for

734
00:37:22,289 --> 00:37:27,119
reading v1 files I don't know that

735
00:37:25,380 --> 00:37:29,160
there's anything else particularly much

736
00:37:27,119 --> 00:37:31,559
in there but now we you know we've got

737
00:37:29,159 --> 00:37:34,710
bugs or whatever so we're gonna have to

738
00:37:31,559 --> 00:37:36,779
go in there and figure out anything we

739
00:37:34,710 --> 00:37:39,150
messed up let's go ahead and just try

740
00:37:36,780 --> 00:37:41,220
the basics we can go ahead and look at

741
00:37:39,150 --> 00:37:44,160
what happens if we try to rewrite one of

742
00:37:41,219 --> 00:37:47,250
our existing files for example so test

743
00:37:44,159 --> 00:37:50,639
one dot H H a let's just look at what

744
00:37:47,250 --> 00:37:57,360
that was originally right so here's our

745
00:37:50,639 --> 00:37:59,460
tab view and here's our test 1 h h a so

746
00:37:57,360 --> 00:38:01,950
you can see like what it thinks it has

747
00:37:59,460 --> 00:38:06,090
like some facing directions and some

748
00:38:01,949 --> 00:38:08,339
assets in here oh whoops this we didn't

749
00:38:06,090 --> 00:38:15,030
jump that one with the latest version of

750
00:38:08,340 --> 00:38:17,090
HHA edit it looks like let's try that

751
00:38:15,030 --> 00:38:17,090
again

752
00:38:20,650 --> 00:38:27,920
what am I missing shouldn't that give us

753
00:38:23,150 --> 00:38:40,130
a new shouldn't that tell us like what's

754
00:38:27,920 --> 00:38:43,180
contained in the assets I wanted to step

755
00:38:40,130 --> 00:38:43,180
in and see what's wrong there

756
00:39:03,329 --> 00:39:19,139
so we're not producing a dump file what

757
00:39:15,239 --> 00:39:20,969
did I mess up like did you notice it's

758
00:39:19,139 --> 00:39:24,139
not producing the dump file so

759
00:39:20,969 --> 00:39:24,139
something's busted Oh

760
00:39:34,449 --> 00:39:41,098
oh whoops so that's not how dump works

761
00:39:41,219 --> 00:39:52,358
we got to update our stuff here so

762
00:39:49,630 --> 00:39:54,099
really this should be we got a yeah the

763
00:39:52,358 --> 00:39:56,440
little switch parser probably would have

764
00:39:54,099 --> 00:40:02,880
been good so we need to do a thing here

765
00:39:56,440 --> 00:40:07,869
that's like print usage equals false and

766
00:40:02,880 --> 00:40:10,030
something like this because we got to

767
00:40:07,869 --> 00:40:11,798
make sure we know when we mess up the

768
00:40:10,030 --> 00:40:13,150
command line right like I don't want to

769
00:40:11,798 --> 00:40:20,349
be sitting there like that scratching my

770
00:40:13,150 --> 00:40:22,869
head going wait what happened so we want

771
00:40:20,349 --> 00:40:24,760
something like this it's like hey you

772
00:40:22,869 --> 00:40:28,900
messed up like that's not how you do a

773
00:40:24,760 --> 00:40:34,450
dump you do a dump like this so that's

774
00:40:28,900 --> 00:40:40,000
what I wanted and now we should be able

775
00:40:34,449 --> 00:40:43,480
to see all of the information right all

776
00:40:40,000 --> 00:40:45,699
right so let's launch another tab view

777
00:40:43,480 --> 00:40:48,099
here and let's do some stuff so let's

778
00:40:45,699 --> 00:40:49,838
assume well we should debug this first

779
00:40:48,099 --> 00:40:52,539
because we may just crash we don't know

780
00:40:49,838 --> 00:40:56,639
if it'll work at all right but so let's

781
00:40:52,539 --> 00:40:57,960
take test one dot H H a and do tests one

782
00:40:56,639 --> 00:41:01,960
V one

783
00:40:57,960 --> 00:41:04,358
HHA right and well it didn't crash so

784
00:41:01,960 --> 00:41:06,519
that's good so it rewrote the file and

785
00:41:04,358 --> 00:41:08,190
here's the rewritten file and it's

786
00:41:06,519 --> 00:41:12,009
slightly bigger than the original file

787
00:41:08,190 --> 00:41:15,068
which is actually okay because remember

788
00:41:12,010 --> 00:41:17,170
we added annotation to it right we graft

789
00:41:15,068 --> 00:41:19,719
on those strings so it should be a

790
00:41:17,170 --> 00:41:21,818
little bigger even if it's working

791
00:41:19,719 --> 00:41:26,409
correctly so that's not really a cause

792
00:41:21,818 --> 00:41:30,599
for concern that's actually totally fine

793
00:41:26,409 --> 00:41:38,739
so let's go to the tab view here and

794
00:41:30,599 --> 00:41:40,420
lunch it okay there we go

795
00:41:38,739 --> 00:41:45,209
let's go ahead and take a look at the

796
00:41:40,420 --> 00:41:48,960
other dump file and see if we can see

797
00:41:45,210 --> 00:41:52,500
ha what we got right so you produce a

798
00:41:48,960 --> 00:42:00,990
test 1v1 that HHA now I'm gonna go ahead

799
00:41:52,500 --> 00:42:03,000
and dump that one and I did it again

800
00:42:00,989 --> 00:42:05,818
well I should just I just make the dump

801
00:42:03,000 --> 00:42:09,329
work that way because I obviously want

802
00:42:05,818 --> 00:42:13,170
it to right so here's another dump file

803
00:42:09,329 --> 00:42:16,380
I it's only 5k but I guess the original

804
00:42:13,170 --> 00:42:17,579
was only 5k doesn't this look like more

805
00:42:16,380 --> 00:42:19,349
than 5k of data

806
00:42:17,579 --> 00:42:21,960
I guess just because it's all spread out

807
00:42:19,349 --> 00:42:22,920
with the indentations it looks bigger

808
00:42:21,960 --> 00:42:26,639
than it actually is

809
00:42:22,920 --> 00:42:29,068
all right so here we go so the first

810
00:42:26,639 --> 00:42:30,808
thing we'll notice is these things have

811
00:42:29,068 --> 00:42:33,028
changed they should have changed so

812
00:42:30,809 --> 00:42:34,920
that's okay the magic value is the same

813
00:42:33,028 --> 00:42:37,139
in both cases but the version has

814
00:42:34,920 --> 00:42:39,720
changed that's what we wanted let's take

815
00:42:37,139 --> 00:42:43,139
a look at the assets so you notice we

816
00:42:39,719 --> 00:42:44,939
now have these descriptions from the

817
00:42:43,139 --> 00:42:46,528
file fees were added before now they're

818
00:42:44,940 --> 00:42:47,190
from the file and they match which is

819
00:42:46,528 --> 00:42:51,809
good

820
00:42:47,190 --> 00:42:54,440
that's what I want right and it looks

821
00:42:51,809 --> 00:42:54,440
like

822
00:43:03,190 --> 00:43:21,619
so we lost the asset name somehow so

823
00:43:17,298 --> 00:43:26,239
we're not we do have at least one bug is

824
00:43:21,619 --> 00:43:32,230
the asset name most of the rest of the

825
00:43:26,239 --> 00:43:32,230
things look right to me

826
00:43:32,679 --> 00:43:38,629
the only so really the thing that I'm

827
00:43:35,449 --> 00:43:42,219
not seeing here is the asset name the

828
00:43:38,630 --> 00:43:43,660
author's right the description is right

829
00:43:42,219 --> 00:43:49,278
[Music]

830
00:43:43,659 --> 00:43:55,098
this the base file names right so really

831
00:43:49,278 --> 00:43:57,409
to me it just looks like we messed up we

832
00:43:55,099 --> 00:44:00,499
messed up the asset name somehow so

833
00:43:57,409 --> 00:44:06,588
that's the only thing I see wrong at the

834
00:44:00,498 --> 00:44:07,459
moment is that the asset name is is

835
00:44:06,588 --> 00:44:10,639
busted

836
00:44:07,460 --> 00:44:13,940
so when we're loading it in and we do a

837
00:44:10,639 --> 00:44:16,818
rough string we look at the asset name

838
00:44:13,940 --> 00:44:20,539
count asset name offset that and we

839
00:44:16,818 --> 00:44:24,440
assign the asset name that seems roughly

840
00:44:20,539 --> 00:44:27,920
correct right so I wouldn't imagine

841
00:44:24,440 --> 00:44:29,450
there'd be a lot of issue there so let's

842
00:44:27,920 --> 00:44:33,980
take a look at the writer did the writer

843
00:44:29,449 --> 00:44:37,489
mess that up yeah okay so we did the

844
00:44:33,980 --> 00:44:40,219
author twice is the problem rather than

845
00:44:37,489 --> 00:44:42,108
the asset name so that's I think the

846
00:44:40,219 --> 00:44:44,328
only bug that's pretty good if that's

847
00:44:42,108 --> 00:44:47,150
really the only bug we did all that and

848
00:44:44,329 --> 00:44:54,440
we only had one mess up that's pretty

849
00:44:47,150 --> 00:44:56,059
good so let's just fix that so here

850
00:44:54,440 --> 00:45:00,409
we're trying to say that the asset name

851
00:44:56,059 --> 00:45:02,749
off set is is that right and let's run

852
00:45:00,409 --> 00:45:05,748
the same thing again now and see whether

853
00:45:02,748 --> 00:45:08,379
or not we've got it correctly sussed out

854
00:45:05,748 --> 00:45:11,088
so here we'll we'll rewrite that oh

855
00:45:08,380 --> 00:45:13,150
we've got protection in there for not

856
00:45:11,088 --> 00:45:16,789
deleting something which is kind of nice

857
00:45:13,150 --> 00:45:19,400
so okay we've done it now let's dump

858
00:45:16,789 --> 00:45:22,059
and now we should be able to look and

859
00:45:19,400 --> 00:45:24,500
see if we've got that asset name

860
00:45:22,059 --> 00:45:26,360
properly restored so it looks like we

861
00:45:24,500 --> 00:45:30,170
did right

862
00:45:26,360 --> 00:45:35,870
we've got head cape and torso right head

863
00:45:30,170 --> 00:45:50,360
cape torso uh so that's pretty good to

864
00:45:35,869 --> 00:45:53,210
go yeah so that's all pretty good I

865
00:45:50,360 --> 00:46:01,269
think so the thing that we now we're now

866
00:45:53,210 --> 00:46:01,269
stuck we're now left with with a sort of

867
00:46:04,239 --> 00:46:10,039
we're left in sort of a weird position

868
00:46:07,150 --> 00:46:11,570
we might as well finish up making these

869
00:46:10,039 --> 00:46:15,409
things completely backwards compatible

870
00:46:11,570 --> 00:46:17,600
the thing that we have to do is right

871
00:46:15,409 --> 00:46:19,549
now we would no longer have a way to

872
00:46:17,599 --> 00:46:21,079
query anything by what type it was

873
00:46:19,550 --> 00:46:26,000
because we're effectively stripping out

874
00:46:21,079 --> 00:46:30,799
that type field right so now finally

875
00:46:26,000 --> 00:46:34,130
what we'd have to do is do like tag like

876
00:46:30,800 --> 00:46:40,970
type index or something or like basic

877
00:46:34,130 --> 00:46:45,010
type basic category or something right

878
00:46:40,969 --> 00:46:49,009
but whatever that thing was before and

879
00:46:45,010 --> 00:46:51,370
the basic category is like just whatever

880
00:46:49,010 --> 00:46:57,190
these things were you know what I mean

881
00:46:51,369 --> 00:46:57,190
so we could do something like you know I

882
00:47:03,159 --> 00:47:15,529
don't remember what this is called and

883
00:47:13,489 --> 00:47:18,169
so if we want to we can basically do

884
00:47:15,530 --> 00:47:21,050
like a tag welding operation here which

885
00:47:18,170 --> 00:47:23,510
does stick a new tag and everything and

886
00:47:21,050 --> 00:47:30,170
would allow us to still retain 100%

887
00:47:23,510 --> 00:47:32,060
backwards compatibility right so let's

888
00:47:30,170 --> 00:47:34,610
just do it and that's that'll finish up

889
00:47:32,059 --> 00:47:37,940
the day and then I think at that point

890
00:47:34,610 --> 00:47:42,380
we're free to just go hog-wild and do

891
00:47:37,940 --> 00:47:46,400
whatever we want right we can go back in

892
00:47:42,380 --> 00:47:53,019
to the asset system now we can use the

893
00:47:46,400 --> 00:47:59,360
data storage in the in the HSA file to

894
00:47:53,019 --> 00:48:04,369
actually record information about where

895
00:47:59,360 --> 00:48:06,380
things came from so we can go ahead and

896
00:48:04,369 --> 00:48:08,529
make that system be pretty sweet now I

897
00:48:06,380 --> 00:48:08,530
think

898
00:48:29,269 --> 00:48:43,980
all right so if I want I now have the

899
00:48:39,869 --> 00:48:46,710
ability to sort of specify what that

900
00:48:43,980 --> 00:48:52,740
property would be so that when these get

901
00:48:46,710 --> 00:48:55,440
imported to the type array stuff they

902
00:48:52,739 --> 00:48:57,149
can be set up properly so that just

903
00:48:55,440 --> 00:49:01,710
means that each of these things is going

904
00:48:57,150 --> 00:49:04,230
to have an additional tag grafted on to

905
00:49:01,710 --> 00:49:06,929
them which means that this stuff here

906
00:49:04,230 --> 00:49:09,929
has to continue to work properly and

907
00:49:06,929 --> 00:49:14,759
this stuff here has to be offset so like

908
00:49:09,929 --> 00:49:17,719
our tag importing has to be beefed up a

909
00:49:14,760 --> 00:49:17,720
bit right

910
00:49:29,429 --> 00:49:37,429
not sure exactly how I want to do this I

911
00:49:41,929 --> 00:49:54,989
do want to do one thing though

912
00:49:44,340 --> 00:50:04,130
I would like to truncate this before the

913
00:49:54,989 --> 00:50:04,129
extension so if you pass a string I

914
00:50:04,760 --> 00:50:12,930
would like to do something where we

915
00:50:06,510 --> 00:50:16,050
check and we get rid of any of the stuff

916
00:50:12,929 --> 00:50:19,519
that comes after the last period so

917
00:50:16,050 --> 00:50:19,519
pretty straightforward

918
00:50:31,769 --> 00:50:52,539
if we see a period we just set the new

919
00:50:36,909 --> 00:50:55,838
count and that's it so basically we look

920
00:50:52,539 --> 00:50:59,529
for the last period we could also do a

921
00:50:55,838 --> 00:51:01,779
thing here where we check for slashes so

922
00:50:59,530 --> 00:51:04,869
if we want to support file names the

923
00:51:01,780 --> 00:51:24,849
path and them basically what you could

924
00:51:04,869 --> 00:51:27,130
also do is say something like so

925
00:51:24,849 --> 00:51:30,160
basically you can't truncate if there's

926
00:51:27,130 --> 00:51:32,710
a period in in the file the you know if

927
00:51:30,159 --> 00:51:34,690
a slash comes after a period then forget

928
00:51:32,710 --> 00:51:39,490
those earlier periods you know what I

929
00:51:34,690 --> 00:51:42,929
mean so I just wanted that in there

930
00:51:39,489 --> 00:51:42,929
because I would like to get rid of

931
00:51:45,838 --> 00:51:53,730
mistake and I admit that probably should

932
00:51:51,429 --> 00:51:53,730
do this

933
00:52:11,289 --> 00:52:23,380
so that way when I do those conversions

934
00:52:15,780 --> 00:52:25,390
like when I do the rewrite here and do

935
00:52:23,380 --> 00:52:30,250
the dump

936
00:52:25,389 --> 00:52:34,359
then I should see in the name it's just

937
00:52:30,250 --> 00:52:37,050
no dot HHA right it's just the base name

938
00:52:34,360 --> 00:52:43,510
because that's what we've been going on

939
00:52:37,050 --> 00:52:46,810
at the moment right all right so that's

940
00:52:43,510 --> 00:52:54,010
pretty simple yeah we could also

941
00:52:46,809 --> 00:53:05,889
truncate it could also truncate

942
00:52:54,010 --> 00:53:06,700
pathnames here so you know we can have

943
00:53:05,889 --> 00:53:13,690
both of these

944
00:53:06,699 --> 00:53:18,009
I wonder why should call us maybe like

945
00:53:13,690 --> 00:53:22,590
truncate maybe let's call this remove

946
00:53:18,010 --> 00:53:22,590
extension and remove path

947
00:53:31,989 --> 00:53:39,130
so if we find one of these things then

948
00:53:34,778 --> 00:53:49,838
what we want to do is say well okay the

949
00:53:39,130 --> 00:53:56,289
the new count value gonna say zero cost

950
00:53:49,838 --> 00:53:57,639
a new start so if we encounter one of

951
00:53:56,289 --> 00:53:59,769
these then we know that the start is

952
00:53:57,639 --> 00:54:02,588
going to be the index that index plus

953
00:53:59,768 --> 00:54:05,409
one so then what we're gonna have to do

954
00:54:02,588 --> 00:54:08,048
is say all right the file name count

955
00:54:05,409 --> 00:54:09,998
minus equals the new start position and

956
00:54:08,048 --> 00:54:11,288
the file name data plus equals the new

957
00:54:09,998 --> 00:54:15,429
start position she was basically

958
00:54:11,289 --> 00:54:18,039
advancing to the path part and so that

959
00:54:15,429 --> 00:54:21,778
way we can say like alright yeah

960
00:54:18,039 --> 00:54:26,799
remove the path and remove the extension

961
00:54:21,778 --> 00:54:30,130
of this thing and then what I should be

962
00:54:26,798 --> 00:54:35,318
able to do is say well okay so even if I

963
00:54:30,130 --> 00:54:38,588
was to do something like this where I

964
00:54:35,318 --> 00:54:41,469
said oh yeah like go back a directory

965
00:54:38,588 --> 00:54:46,449
and then forwards a directory hopefully

966
00:54:41,469 --> 00:54:50,159
I would still get a path parse there oh

967
00:54:46,449 --> 00:54:50,159
well I've got to actually do it this way

968
00:54:51,358 --> 00:54:56,219
like that right

969
00:54:58,088 --> 00:55:03,578
and so then if I dump that hopefully

970
00:55:01,630 --> 00:55:04,900
will still get test one even though

971
00:55:03,579 --> 00:55:05,798
that's not what would have come in on

972
00:55:04,900 --> 00:55:07,599
the command line yeah

973
00:55:05,798 --> 00:55:09,998
so that just just cleans it up and

974
00:55:07,599 --> 00:55:12,068
produces just the name which is what we

975
00:55:09,998 --> 00:55:13,689
kind of said we were going with why well

976
00:55:12,068 --> 00:55:17,318
you know it's what we said we were gonna

977
00:55:13,690 --> 00:55:19,809
do so we did it uh so I think all of

978
00:55:17,318 --> 00:55:24,748
that is now good and I just want to add

979
00:55:19,809 --> 00:55:27,519
the I just want to add that tag back in

980
00:55:24,748 --> 00:55:29,949
so that we could still use the old files

981
00:55:27,518 --> 00:55:32,048
and so before we decide on a completely

982
00:55:29,949 --> 00:55:34,328
new set of tags and what we want to put

983
00:55:32,048 --> 00:55:35,768
in there we can still load the old tags

984
00:55:34,329 --> 00:55:37,869
just to verify that everything's working

985
00:55:35,768 --> 00:55:39,429
it's just nice because it doesn't cost

986
00:55:37,869 --> 00:55:41,709
me that much to add it here it's not a

987
00:55:39,429 --> 00:55:46,958
lot of work so I might as well do it

988
00:55:41,708 --> 00:55:50,348
right so we know we're gonna add one new

989
00:55:46,958 --> 00:55:54,098
one each time here so we know we're

990
00:55:50,349 --> 00:55:56,650
gonna have a lot more tags than than we

991
00:55:54,099 --> 00:56:00,160
used to so we're adding the asset count

992
00:55:56,650 --> 00:56:01,749
in then what we need to do as we loop

993
00:56:00,159 --> 00:56:05,440
over these here is now we actually have

994
00:56:01,748 --> 00:56:08,798
to copy the tags out so this this is not

995
00:56:05,440 --> 00:56:12,489
gonna cut it any more at all so we got

996
00:56:08,798 --> 00:56:16,690
elected ooh the copy for each of our

997
00:56:12,489 --> 00:56:19,599
assets here where we loop through and

998
00:56:16,690 --> 00:56:22,719
process the asset that is where we have

999
00:56:19,599 --> 00:56:26,469
to process the tag so what we need to do

1000
00:56:22,719 --> 00:56:32,289
is say for each tag that we would have

1001
00:56:26,469 --> 00:56:35,229
copied so this is like asset tag index

1002
00:56:32,289 --> 00:56:37,539
basically what we want to do here well I

1003
00:56:35,228 --> 00:56:40,088
guess now I guess we can still do it as

1004
00:56:37,539 --> 00:56:42,489
tag index so what we need to do here is

1005
00:56:40,088 --> 00:56:45,308
say well we've got the assets its source

1006
00:56:42,489 --> 00:56:47,829
asset we know that the first tag index

1007
00:56:45,309 --> 00:56:50,739
is this we know that the one passed last

1008
00:56:47,829 --> 00:56:53,349
tag index tells us what to loop to right

1009
00:56:50,739 --> 00:56:57,608
so we loop over all those tags we know

1010
00:56:53,349 --> 00:56:59,859
the source tag is here so the only

1011
00:56:57,608 --> 00:57:01,268
question is where is the death tag well

1012
00:56:59,858 --> 00:57:03,038
the death tag is just going to be

1013
00:57:01,268 --> 00:57:06,608
something probably that we do this with

1014
00:57:03,039 --> 00:57:10,360
right and then finally after we've added

1015
00:57:06,608 --> 00:57:12,099
all of those tags you know

1016
00:57:10,360 --> 00:57:18,610
and I guess I should probably just do

1017
00:57:12,099 --> 00:57:21,639
this right after we've added all of

1018
00:57:18,610 --> 00:57:39,940
those tags we have to add one additional

1019
00:57:21,639 --> 00:57:43,210
tag which is no ID and value so what we

1020
00:57:39,940 --> 00:57:45,639
want to do here is add this stuff in so

1021
00:57:43,210 --> 00:57:47,710
basically you know we know what the

1022
00:57:45,639 --> 00:57:49,839
original type ID was - think that's

1023
00:57:47,710 --> 00:57:52,539
we're gonna say that's the value of this

1024
00:57:49,840 --> 00:57:55,450
and we're gonna say like tag basic

1025
00:57:52,539 --> 00:58:01,659
category is the tag ID so we added that

1026
00:57:55,449 --> 00:58:06,339
category in that gives us the tag set

1027
00:58:01,659 --> 00:58:09,549
for this asset correctly and so then

1028
00:58:06,340 --> 00:58:11,980
what we need to do is set this up so it

1029
00:58:09,550 --> 00:58:15,660
pretty easy right we know the first tag

1030
00:58:11,980 --> 00:58:18,159
index is just whatever the tag index was

1031
00:58:15,659 --> 00:58:20,139
that we started with and then we know

1032
00:58:18,159 --> 00:58:22,420
the last tag index is just whatever the

1033
00:58:20,139 --> 00:58:25,119
tag was that we finished with so pretty

1034
00:58:22,420 --> 00:58:26,740
straightforward to set up right so the

1035
00:58:25,119 --> 00:58:27,969
only thing we really have to do is just

1036
00:58:26,739 --> 00:58:34,179
remember where the desk

1037
00:58:27,969 --> 00:58:36,279
tags are right so it's just a JJ tags I

1038
00:58:34,179 --> 00:58:44,379
probably just should have done a JJ tags

1039
00:58:36,280 --> 00:58:46,269
right so all I really have to do here is

1040
00:58:44,380 --> 00:58:49,059
just say alright the desk tag index

1041
00:58:46,269 --> 00:58:50,829
starts at 1 and goes up from there and

1042
00:58:49,059 --> 00:58:52,779
this should reserve the space for that

1043
00:58:50,829 --> 00:58:55,630
because the tag out in the file includes

1044
00:58:52,780 --> 00:59:01,200
the 0 so it should just work going

1045
00:58:55,630 --> 00:59:01,200
forward I think so that all seems fine

1046
00:59:03,360 --> 00:59:06,700
yeah I don't know if I'm missing

1047
00:59:05,110 --> 00:59:09,190
something there but I think that's

1048
00:59:06,699 --> 00:59:11,889
everything that we would have had to do

1049
00:59:09,190 --> 00:59:15,070
so let me delete that file let's rewrite

1050
00:59:11,889 --> 00:59:16,980
it and then dump it and see if it

1051
00:59:15,070 --> 00:59:20,410
actually did that at all

1052
00:59:16,980 --> 00:59:22,510
so if we look at the tags here you can

1053
00:59:20,409 --> 00:59:23,859
see what we've got it looks actually

1054
00:59:22,510 --> 00:59:27,970
correct

1055
00:59:23,860 --> 00:59:29,320
I that looks a little odd there's

1056
00:59:27,969 --> 00:59:35,859
another one

1057
00:59:29,320 --> 00:59:38,440
but maybe it's right we'll find out I'm

1058
00:59:35,860 --> 00:59:40,539
not sure we'll have to look into that we

1059
00:59:38,440 --> 00:59:41,980
now need to update the array again this

1060
00:59:40,539 --> 00:59:44,199
is one of those things where I say

1061
00:59:41,980 --> 00:59:46,150
C++ is awful because we shouldn't have

1062
00:59:44,199 --> 00:59:49,509
to do this this should have been

1063
00:59:46,150 --> 00:59:51,639
automated right and it's trivial like

1064
00:59:49,510 --> 00:59:57,100
every programming language except C++

1065
00:59:51,639 --> 00:59:59,199
automates that tributing so anyway we

1066
00:59:57,099 --> 01:00:00,639
get these unknowns here if I rerun it

1067
00:59:59,199 --> 01:00:03,119
now that we've added that entry those

1068
01:00:00,639 --> 01:00:05,710
should say basic category and they do

1069
01:00:03,119 --> 01:00:08,769
we've got an extra one here so that

1070
01:00:05,710 --> 01:00:09,909
feels like just to screw up so I should

1071
01:00:08,769 --> 01:00:13,440
go look and see

1072
01:00:09,909 --> 01:00:16,779
we must be allocating one too many tags

1073
01:00:13,440 --> 01:00:20,110
and oh and we are the reason that we are

1074
01:00:16,780 --> 01:00:22,530
is because of the phantom zero asset the

1075
01:00:20,110 --> 01:00:26,260
gift that keeps on giving

1076
01:00:22,530 --> 01:00:29,710
so we only need the asset count minus

1077
01:00:26,260 --> 01:00:31,300
one right because we don't need an extra

1078
01:00:29,710 --> 01:00:37,800
tag for the zero asset

1079
01:00:31,300 --> 01:00:42,340
it doesn't get any tags at all all right

1080
01:00:37,800 --> 01:00:45,730
so now if we go ahead delete rewrite and

1081
01:00:42,340 --> 01:00:48,780
dump we've got all of that information

1082
01:00:45,730 --> 01:00:52,449
in there and all the tags look good

1083
01:00:48,780 --> 01:00:55,050
everything looks good so this allows us

1084
01:00:52,449 --> 01:00:59,049
now if we want you to be able to load

1085
01:00:55,050 --> 01:01:01,570
version 1 in the game so let's go ahead

1086
01:00:59,050 --> 01:01:05,620
and try that so here's how we would do

1087
01:01:01,570 --> 01:01:09,100
this you can see we've got all of these

1088
01:01:05,619 --> 01:01:11,289
hhas in here so what I'm gonna do is we

1089
01:01:09,099 --> 01:01:16,630
could delete all this stuff out of here

1090
01:01:11,289 --> 01:01:22,449
- till we have just the hhas involved so

1091
01:01:16,630 --> 01:01:26,530
here I'll just make a v-0 directory and

1092
01:01:22,449 --> 01:01:28,960
I just I don't want that so I'm just

1093
01:01:26,530 --> 01:01:30,460
gonna move that out there as well test

1094
01:01:28,960 --> 01:01:34,449
that out I don't remember what this

1095
01:01:30,460 --> 01:01:36,730
thing was oops cuz you can't drag and

1096
01:01:34,449 --> 01:01:37,529
drop why can't why is 4 code or not a

1097
01:01:36,730 --> 01:01:41,139
drop tar

1098
01:01:37,530 --> 01:01:45,220
it should have drop files set or

1099
01:01:41,139 --> 01:01:47,739
something right hmm all right so I'm

1100
01:01:45,219 --> 01:01:49,919
gonna delete these dumps get them out of

1101
01:01:47,739 --> 01:01:49,919
there

1102
01:01:49,949 --> 01:01:59,409
delete this test and delete the import

1103
01:01:56,500 --> 01:02:02,380
test as well now we've got this test out

1104
01:01:59,409 --> 01:02:04,000
file I just want to know what it is it

1105
01:02:02,380 --> 01:02:14,519
was something we had done for testing

1106
01:02:04,000 --> 01:02:19,980
purposes so I don't know what that's for

1107
01:02:14,519 --> 01:02:19,980
and I don't care so that's gonna go away

1108
01:02:20,940 --> 01:02:28,539
so now we've got these and I want to

1109
01:02:24,489 --> 01:02:30,608
import them all to the new file format

1110
01:02:28,539 --> 01:02:36,029
so what I'm going to do is I'm just

1111
01:02:30,608 --> 01:02:36,029
going to use HH edit to rewrite them all

1112
01:02:40,800 --> 01:02:47,380
so again hopefully we're doing this

1113
01:02:44,139 --> 01:02:49,750
correctly don't really know well the

1114
01:02:47,380 --> 01:02:51,400
only real way to know is you know beyond

1115
01:02:49,750 --> 01:02:53,679
what we've already tried to validate is

1116
01:02:51,400 --> 01:02:57,180
to actually go and try them in the game

1117
01:02:53,679 --> 01:02:57,179
so that's why I want to do it

1118
01:03:07,659 --> 01:03:13,399
so now we have v1 versions of each of

1119
01:03:10,670 --> 01:03:17,260
those and I can just store these in v-0

1120
01:03:13,400 --> 01:03:19,760
there's our v1 versions of everything

1121
01:03:17,260 --> 01:03:21,560
and I should be able to dump all of

1122
01:03:19,760 --> 01:03:25,360
those so if I want to look at one of

1123
01:03:21,559 --> 01:03:28,538
these you know intro art v1

1124
01:03:25,360 --> 01:03:28,539
[Music]

1125
01:03:41,059 --> 01:03:52,849
here's the dump of that file and if I

1126
01:03:44,989 --> 01:03:54,609
bring up my tab views I should be able

1127
01:03:52,849 --> 01:03:59,289
to walk through it pretty easy

1128
01:03:54,610 --> 01:04:05,930
well tags look good there's the assets

1129
01:03:59,289 --> 01:04:13,159
they're all opening cutscenes and you

1130
01:04:05,929 --> 01:04:15,829
know everything seems kosher okay so

1131
01:04:13,159 --> 01:04:19,940
that seems good to me if we pop back

1132
01:04:15,829 --> 01:04:24,230
over to the game now of course that's

1133
01:04:19,940 --> 01:04:27,619
the unsaved change I don't know what the

1134
01:04:24,230 --> 01:04:31,510
unsane Jam was oh it was the test that

1135
01:04:27,619 --> 01:04:34,099
out probably I don't know anyway if I

1136
01:04:31,510 --> 01:04:38,480
pop back over to the game now though the

1137
01:04:34,099 --> 01:04:40,849
game wouldn't work right because it

1138
01:04:38,480 --> 01:04:45,010
doesn't know how to load those files

1139
01:04:40,849 --> 01:04:50,690
anymore so the game would break because

1140
01:04:45,010 --> 01:04:55,100
it's it it's expecting to load things

1141
01:04:50,690 --> 01:04:57,590
with a very specific structure and it

1142
01:04:55,099 --> 01:04:59,839
can't load them anymore right so now our

1143
01:04:57,590 --> 01:05:02,420
goal is just to bring the game up to the

1144
01:04:59,840 --> 01:05:05,539
new file format and we can just proceed

1145
01:05:02,420 --> 01:05:08,510
from there so doing that is the first

1146
01:05:05,539 --> 01:05:10,429
step is to make like eliminate there is

1147
01:05:08,510 --> 01:05:13,670
a part of the code remember where we

1148
01:05:10,429 --> 01:05:15,230
tried to put in the shim so this was

1149
01:05:13,670 --> 01:05:16,700
just saying like hey we don't want to

1150
01:05:15,230 --> 01:05:18,139
port to the new file format yet so

1151
01:05:16,699 --> 01:05:20,000
here's the thing that forces it to live

1152
01:05:18,139 --> 01:05:22,699
the old file format we want to get rid

1153
01:05:20,000 --> 01:05:26,210
of this so we want to go ahead and

1154
01:05:22,699 --> 01:05:28,909
compile that and now we should get

1155
01:05:26,210 --> 01:05:33,619
compile errors everywhere that we don't

1156
01:05:28,909 --> 01:05:35,389
that we we will get compile errors

1157
01:05:33,619 --> 01:05:38,420
everywhere that we need to update the

1158
01:05:35,389 --> 01:05:43,389
file format to do like something new

1159
01:05:38,420 --> 01:05:48,880
with it right so the the asset type here

1160
01:05:43,389 --> 01:05:52,909
oops is not really an asset type right

1161
01:05:48,880 --> 01:05:54,289
it's actually just a thing see it there

1162
01:05:52,909 --> 01:05:58,608
yeah

1163
01:05:54,289 --> 01:06:04,999
it's just a thing that we pass in its

1164
01:05:58,608 --> 01:06:25,668
it's really not where's my where these

1165
01:06:04,998 --> 01:06:26,898
defined here layered see there it is so

1166
01:06:25,668 --> 01:06:30,158
you can see here that all of these are

1167
01:06:26,898 --> 01:06:32,418
just set to asset opening cutscene

1168
01:06:30,159 --> 01:06:35,539
except for this one that's set to asset

1169
01:06:32,418 --> 01:06:39,739
none so really all that is is it's just

1170
01:06:35,539 --> 01:06:41,209
the thing that tells us which one of

1171
01:06:39,739 --> 01:06:44,749
those things we're looking for for the

1172
01:06:41,208 --> 01:06:47,328
old compatibility stuff so we can if we

1173
01:06:44,748 --> 01:06:51,708
want to in handmade NH just include the

1174
01:06:47,329 --> 01:06:53,959
old like handmade file formats 0h right

1175
01:06:51,708 --> 01:06:57,138
and as long as we make sure that v-0

1176
01:06:53,958 --> 01:06:58,818
always has that ID appended to it then

1177
01:06:57,139 --> 01:07:03,318
we can make sure that only the only

1178
01:06:58,818 --> 01:07:06,228
people who ever use it are people who

1179
01:07:03,318 --> 01:07:09,108
actually really want to write and it

1180
01:07:06,228 --> 01:07:12,078
because it'll still work just fine okay

1181
01:07:09,108 --> 01:07:14,989
super entity visible piece here again

1182
01:07:12,079 --> 01:07:16,339
like these are just old compatibility

1183
01:07:14,989 --> 01:07:20,958
ways of doing this but they're fine

1184
01:07:16,338 --> 01:07:25,568
right they will just get looked up

1185
01:07:20,958 --> 01:07:25,568
slightly differently at the moment

1186
01:07:29,130 --> 01:07:34,079
and then like I said the big thing we're

1187
01:07:31,768 --> 01:07:36,739
gonna have to do is figure out how we

1188
01:07:34,079 --> 01:07:39,298
want to actually look these things up

1189
01:07:36,739 --> 01:07:53,578
because that's probably going to change

1190
01:07:39,298 --> 01:07:56,659
a little bit now so I do think we're

1191
01:07:53,579 --> 01:07:56,660
going to want to pull this eventually

1192
01:07:57,199 --> 01:08:01,129
you know at some point

1193
01:08:10,010 --> 01:08:17,279
alright so the first thing to recognize

1194
01:08:14,760 --> 01:08:19,190
is the file header asset type count the

1195
01:08:17,279 --> 01:08:21,960
asset type count is not relevant anymore

1196
01:08:19,189 --> 01:08:24,269
we got rid of that so we just have

1197
01:08:21,960 --> 01:08:27,480
assets and we don't have to think about

1198
01:08:24,270 --> 01:08:30,900
it we don't have to think about that

1199
01:08:27,479 --> 01:08:34,468
part anymore right so that's kind of

1200
01:08:30,899 --> 01:08:37,710
nice it simplifies our loading too so

1201
01:08:34,469 --> 01:08:40,048
that's gonna be nice let's see here what

1202
01:08:37,710 --> 01:08:44,759
do we got this is just remember writing

1203
01:08:40,048 --> 01:08:48,359
the modifications app so if we're

1204
01:08:44,759 --> 01:08:50,880
writing the modifications out we would

1205
01:08:48,359 --> 01:08:56,670
still have to write out the so although

1206
01:08:50,880 --> 01:08:59,489
this is it necessary we still do we have

1207
01:08:56,670 --> 01:09:03,659
an additional one here we've got like

1208
01:08:59,488 --> 01:09:07,649
this stuff the annotations want to be

1209
01:09:03,659 --> 01:09:16,858
kept want to be preserved here as well

1210
01:09:07,649 --> 01:09:20,519
right trying to think like I kind of

1211
01:09:16,859 --> 01:09:29,609
feel like we almost want to have that

1212
01:09:20,520 --> 01:09:32,060
code shared that like the code for

1213
01:09:29,609 --> 01:09:34,679
loading and rewriting the annotations

1214
01:09:32,060 --> 01:09:37,310
feels like we just kind of want to share

1215
01:09:34,679 --> 01:09:37,310
that code

1216
01:09:41,640 --> 01:09:46,890
I mean there's two ways we can go with

1217
01:09:44,760 --> 01:09:49,289
it right one is we could weld the

1218
01:09:46,890 --> 01:09:51,720
annotations directly to the assets and

1219
01:09:49,289 --> 01:09:57,269
they're always just written with the

1220
01:09:51,720 --> 01:10:01,250
assets and the other is we just rewrite

1221
01:09:57,270 --> 01:10:03,870
the array thinking about it

1222
01:10:01,250 --> 01:10:05,729
rewriting the array does seem reasonable

1223
01:10:03,869 --> 01:10:08,369
because rewriting because you can just

1224
01:10:05,729 --> 01:10:10,289
yeah there's really no reason not to

1225
01:10:08,369 --> 01:10:13,500
just rewrite the array I guess because

1226
01:10:10,289 --> 01:10:16,050
the array references strings that we're

1227
01:10:13,500 --> 01:10:18,720
still there so you don't really have to

1228
01:10:16,050 --> 01:10:22,550
worry too much about that aspect of it

1229
01:10:18,720 --> 01:10:29,119
so I think it's fine the way it is I

1230
01:10:22,550 --> 01:10:31,949
think it's fine the way it is I'm gonna

1231
01:10:29,119 --> 01:10:33,239
I'm gonna nerf this temporarily and then

1232
01:10:31,949 --> 01:10:35,189
I'm gonna come back and add the

1233
01:10:33,239 --> 01:10:37,500
annotations to it because I think we can

1234
01:10:35,189 --> 01:10:40,710
just preserve those trivially and we

1235
01:10:37,500 --> 01:10:42,239
should because why not and that and

1236
01:10:40,710 --> 01:10:43,980
that's when we're gonna be able to weld

1237
01:10:42,239 --> 01:10:46,139
in the part about the checksums and

1238
01:10:43,979 --> 01:10:49,229
testing for the date as well which we do

1239
01:10:46,140 --> 01:10:56,220
want to do all right so asset type

1240
01:10:49,229 --> 01:11:06,169
arrays going away this right here

1241
01:10:56,220 --> 01:11:06,170
not a thing right so that's just gone

1242
01:11:12,020 --> 01:11:18,400
and this we kind of still do want to do

1243
01:11:14,448 --> 01:11:30,559
right like we want to do the annotation

1244
01:11:18,399 --> 01:11:32,289
or asset count annotations so we do you

1245
01:11:30,560 --> 01:11:44,360
know we do still want to be able to

1246
01:11:32,289 --> 01:11:47,448
retract the watermark in that way the

1247
01:11:44,359 --> 01:11:51,049
asset type counts here we don't need to

1248
01:11:47,448 --> 01:11:55,419
loop over this this way anymore we can

1249
01:11:51,050 --> 01:12:01,070
just loop over the asset index indices

1250
01:11:55,420 --> 01:12:05,719
directly and that is what we want to do

1251
01:12:01,069 --> 01:12:14,408
right so what we want to do here is like

1252
01:12:05,719 --> 01:12:14,408
nerf this part we want to grab this

1253
01:12:23,819 --> 01:12:30,759
yeah so this is just reading the data

1254
01:12:26,710 --> 01:12:33,670
from the file and then unpacking it

1255
01:12:30,760 --> 01:12:39,520
right that's all we're doing so we

1256
01:12:33,670 --> 01:12:42,670
really want to do this we don't have any

1257
01:12:39,520 --> 01:12:45,880
way to really handle this especially so

1258
01:12:42,670 --> 01:12:49,060
we kind of want to do that right and put

1259
01:12:45,880 --> 01:12:51,130
that in here so if the type is a if it's

1260
01:12:49,060 --> 01:13:00,670
a font glyph type then we need to be

1261
01:12:51,130 --> 01:13:05,909
able to set the bitmap ID offset why was

1262
01:13:00,670 --> 01:13:05,909
that stored in the file

1263
01:13:12,560 --> 01:13:16,030
what is that doing

1264
01:13:20,559 --> 01:13:24,128
what is that do it

1265
01:13:40,409 --> 01:13:47,000
but what so why would that have anything

1266
01:13:43,560 --> 01:13:54,090
to do with whether or not it was a font

1267
01:13:47,000 --> 01:14:02,220
like why isn't that just always I mean

1268
01:13:54,090 --> 01:14:06,239
that value that does not make any sense

1269
01:14:02,220 --> 01:14:10,070
at all so the bitmap IDs in the font are

1270
01:14:06,239 --> 01:14:15,300
going to be relative to the file right

1271
01:14:10,069 --> 01:14:18,299
so what I do not understand why why was

1272
01:14:15,300 --> 01:14:20,279
that just not always set like why did it

1273
01:14:18,300 --> 01:14:25,110
have to check to see if it was a font

1274
01:14:20,279 --> 01:14:28,710
glyph you know I'm saying like when you

1275
01:14:25,109 --> 01:14:32,880
come through on a file and you load the

1276
01:14:28,710 --> 01:14:35,189
file why isn't that just why isn't that

1277
01:14:32,880 --> 01:14:37,560
just the setting because you want to

1278
01:14:35,189 --> 01:14:40,049
know what the asset count was and you

1279
01:14:37,560 --> 01:14:43,250
want to subtract away

1280
01:14:40,050 --> 01:14:43,250
whatever the

1281
01:15:02,560 --> 01:15:08,740
yeah I don't and so like why aren't the

1282
01:15:06,579 --> 01:15:13,659
font bitmaps just like why isn't it just

1283
01:15:08,739 --> 01:15:22,210
this like why were we doing it any other

1284
01:15:13,659 --> 01:15:24,609
way than that I mean shouldn't if that

1285
01:15:22,210 --> 01:15:27,939
shouldn't that be the way that it's done

1286
01:15:24,609 --> 01:15:30,189
and I mean if you didn't do it this way

1287
01:15:27,939 --> 01:15:33,789
then it would just be wrong like the

1288
01:15:30,189 --> 01:15:37,689
file you couldn't have more than one

1289
01:15:33,789 --> 01:15:40,300
font per file right this just seems

1290
01:15:37,689 --> 01:15:46,000
really messed up to me and I don't know

1291
01:15:40,300 --> 01:15:52,869
why we would have done that that's super

1292
01:15:46,000 --> 01:16:02,819
spooky like if we and that's what I

1293
01:15:52,869 --> 01:16:02,819
wanted so if we dump that file out

1294
01:16:12,420 --> 01:16:21,310
oops no bad wrong stop that's gonna go

1295
01:16:18,909 --> 01:16:23,439
forever as window windows is super slow

1296
01:16:21,310 --> 01:16:25,360
at building those tab views so if you if

1297
01:16:23,439 --> 01:16:30,000
you handed a lot of data windows just

1298
01:16:25,359 --> 01:16:36,670
dies trying to populate the tree view

1299
01:16:30,000 --> 01:16:42,699
you know I'm saying they can't do it all

1300
01:16:36,670 --> 01:16:46,899
right so I'm just curious so if these

1301
01:16:42,699 --> 01:16:48,279
are the assets here right like like

1302
01:16:46,899 --> 01:16:50,439
there's two fonts in this file

1303
01:16:48,279 --> 01:16:51,519
aren't there maybe there aren't I mean I

1304
01:16:50,439 --> 01:16:54,809
thought there were I thought these are

1305
01:16:51,520 --> 01:16:54,810
two fonts right

1306
01:17:05,260 --> 01:17:09,780
these numbers don't make any sense I can

1307
01:17:07,329 --> 01:17:09,779
tell you that

1308
01:17:15,429 --> 01:17:19,639
we should maybe dump the glyph

1309
01:17:17,719 --> 01:17:25,849
information here so we can actually see

1310
01:17:19,639 --> 01:17:27,469
what it is cuz I do not I do not

1311
01:17:25,849 --> 01:17:35,659
fundamentally don't understand what's

1312
01:17:27,469 --> 01:17:37,550
going on there I'm just confused it

1313
01:17:35,658 --> 01:17:39,408
doesn't make sense to me why it would be

1314
01:17:37,550 --> 01:17:41,980
the way that it is it should just be a

1315
01:17:39,408 --> 01:17:44,479
file relative index for the glyph

1316
01:17:41,979 --> 01:17:46,759
full-stop and so all you should have to

1317
01:17:44,479 --> 01:17:50,059
know you shouldn't even need to know

1318
01:17:46,760 --> 01:17:53,170
font bitmap ID offset like you should

1319
01:17:50,060 --> 01:17:55,579
just have a thing that's like asset base

1320
01:17:53,170 --> 01:17:58,069
right like there's tag base there should

1321
01:17:55,578 --> 01:18:02,899
just be asset base and then all you do

1322
01:17:58,069 --> 01:18:07,009
is you add the glyph index to the font

1323
01:18:02,899 --> 01:18:11,779
to the asset base I mean that's all that

1324
01:18:07,010 --> 01:18:15,039
it should have done and I do not

1325
01:18:11,779 --> 01:18:15,039
understand why I didn't do that

1326
01:18:15,099 --> 01:18:31,060
maybe there was like a historical reason

1327
01:18:17,840 --> 01:18:31,060
why or something so I yeah I don't I

1328
01:18:31,328 --> 01:18:37,939
don't know man I think that should be

1329
01:18:35,118 --> 01:18:40,549
acid base I don't think it should be

1330
01:18:37,939 --> 01:18:42,319
font bitmap ID offset because the

1331
01:18:40,550 --> 01:18:44,570
bitmaps should all just be relative to

1332
01:18:42,319 --> 01:18:46,279
the file and so whatever file the font

1333
01:18:44,569 --> 01:18:49,819
is in it should just use the asset base

1334
01:18:46,279 --> 01:18:51,529
of that file that's what I claimed and

1335
01:18:49,819 --> 01:18:53,599
that's what I'm doing and I will just

1336
01:18:51,529 --> 01:18:56,618
make it work because that's the only

1337
01:18:53,599 --> 01:18:56,619
thing that makes any sense to me

1338
01:19:16,590 --> 01:19:21,059
so how does the tag

1339
01:19:26,770 --> 01:19:30,810
bass gets set up here

1340
01:19:50,829 --> 01:19:57,579
so yeah a lot of this stuff just doesn't

1341
01:19:53,180 --> 01:19:57,579
make sense me so the tag base is set up

1342
01:20:07,479 --> 01:20:11,679
oh wait no that that makes Ferguson

1343
01:20:09,130 --> 01:20:14,230
right I thought that was getting it out

1344
01:20:11,680 --> 01:20:18,310
of the header so yeah that's good

1345
01:20:14,229 --> 01:20:21,189
so as we do our asset camp here right

1346
01:20:18,310 --> 01:20:23,170
the base for loading these is whatever

1347
01:20:21,189 --> 01:20:28,329
the asset count or the tag count is

1348
01:20:23,170 --> 01:20:32,470
right so that's exactly what we want and

1349
01:20:28,329 --> 01:20:34,359
then we go ahead and add in the ones the

1350
01:20:32,470 --> 01:20:37,659
new ones here we don't bother with the

1351
01:20:34,359 --> 01:20:39,519
zero value honestly so now we know for

1352
01:20:37,659 --> 01:20:41,710
every file it has an asset base and a

1353
01:20:39,520 --> 01:20:43,180
tag base which is what we want right and

1354
01:20:41,710 --> 01:20:45,069
that's I feel like that's what it should

1355
01:20:43,180 --> 01:20:48,220
have been so it didn't really like the

1356
01:20:45,069 --> 01:20:53,259
fact that it wasn't that it was lame

1357
01:20:48,220 --> 01:21:01,320
right so anyway moving along so we've

1358
01:20:53,260 --> 01:21:01,320
got this very bad spelling

1359
01:21:09,890 --> 01:21:18,110
this is how you spell exercise just

1360
01:21:12,199 --> 01:21:20,470
guessing I was wondering do know why

1361
01:21:18,109 --> 01:21:30,859
swelled it that way

1362
01:21:20,470 --> 01:21:32,449
so anyway exercise for the reader can

1363
01:21:30,859 --> 01:21:34,309
still remain but everything else all

1364
01:21:32,449 --> 01:21:38,659
right so so I just that I don't know I'm

1365
01:21:34,310 --> 01:21:41,750
just gonna go ahead and claim that that

1366
01:21:38,659 --> 01:21:43,189
was because maybe we like because of the

1367
01:21:41,750 --> 01:21:46,520
way we came at it we originally were

1368
01:21:43,189 --> 01:21:49,279
only loading one kind of file and then

1369
01:21:46,520 --> 01:21:51,200
we added multiple files and I don't like

1370
01:21:49,279 --> 01:21:54,409
I was gonna claim that that was just

1371
01:21:51,199 --> 01:21:57,289
like vestigial remain kind of stuff

1372
01:21:54,409 --> 01:21:59,479
because I'm I mean obviously when you

1373
01:21:57,289 --> 01:22:01,970
output a file and you put bitmaps in it

1374
01:21:59,479 --> 01:22:03,949
all of the bitmap IDs in that file would

1375
01:22:01,970 --> 01:22:06,079
just be relative to the file so if you

1376
01:22:03,949 --> 01:22:09,800
know where the file got loaded in the

1377
01:22:06,079 --> 01:22:12,649
asset indices it's just a given like

1378
01:22:09,800 --> 01:22:14,779
it's it it shouldn't be any more

1379
01:22:12,649 --> 01:22:19,579
complicated than that so I feel like

1380
01:22:14,779 --> 01:22:21,979
that was just a mistake and so I'm just

1381
01:22:19,579 --> 01:22:25,399
not gonna yeah I'm just gonna say that

1382
01:22:21,979 --> 01:22:28,579
that's not the way that goes right so

1383
01:22:25,399 --> 01:22:30,379
when we load in our Rho J's here I think

1384
01:22:28,579 --> 01:22:33,559
we could do the same thing we were doing

1385
01:22:30,380 --> 01:22:40,869
before with the tags so I'm just gonna

1386
01:22:33,560 --> 01:22:40,870
say look if there were assets in here

1387
01:22:43,000 --> 01:22:46,930
then we're gonna load them in

1388
01:22:53,908 --> 01:23:03,988
I guess we don't use we do we ever

1389
01:23:01,939 --> 01:23:06,928
because we need these to be kind of

1390
01:23:03,988 --> 01:23:09,598
expanded I guess so there's no point in

1391
01:23:06,929 --> 01:23:10,889
us loading it off of the base value so I

1392
01:23:09,599 --> 01:23:14,849
guess now think about it we don't really

1393
01:23:10,889 --> 01:23:15,900
care too much about that specifically so

1394
01:23:14,849 --> 01:23:18,269
I suppose that's okay

1395
01:23:15,899 --> 01:23:20,359
this right here is now known it's the

1396
01:23:18,269 --> 01:23:22,889
file asset base so we don't need that

1397
01:23:20,359 --> 01:23:26,429
this we also don't need because we know

1398
01:23:22,889 --> 01:23:29,788
that it's all the assets in the file so

1399
01:23:26,429 --> 01:23:32,248
we're gonna load you know all of them so

1400
01:23:29,788 --> 01:23:36,988
it's really just like file asset counts

1401
01:23:32,248 --> 01:23:42,960
and that's just the file header asset

1402
01:23:36,988 --> 01:23:51,658
count minus one so we can just do if

1403
01:23:42,960 --> 01:23:53,189
file header count off we go and this is

1404
01:23:51,658 --> 01:23:55,589
already looking much better so that's

1405
01:23:53,189 --> 01:23:59,219
nice we can start the temporary memory

1406
01:23:55,590 --> 01:24:02,340
here and do our load into the temporary

1407
01:23:59,219 --> 01:24:07,229
memory which is what we do we've got the

1408
01:24:02,340 --> 01:24:12,679
file asset count and make a temporary

1409
01:24:07,229 --> 01:24:20,249
array for it we read that out this is

1410
01:24:12,679 --> 01:24:23,578
just just one write we skip the null we

1411
01:24:20,248 --> 01:24:32,010
load that many and we then loop over

1412
01:24:23,578 --> 01:24:37,889
them like so and we go through each

1413
01:24:32,010 --> 01:24:43,909
asset that we loaded grafting it on to

1414
01:24:37,889 --> 01:24:43,909
the assets that we already have right

1415
01:24:44,699 --> 01:24:53,960
yeah that's really all there is to

1416
01:24:47,159 --> 01:24:53,960
that's I think so all of this stuff

1417
01:24:55,819 --> 01:24:59,329
should be right

1418
01:25:07,140 --> 01:25:16,950
yeah everything else seems right

1419
01:25:13,329 --> 01:25:22,059
so that should load all the assets in

1420
01:25:16,949 --> 01:25:25,869
and off you go so we now know that the

1421
01:25:22,060 --> 01:25:28,900
asset type ID in this this kind of asset

1422
01:25:25,869 --> 01:25:34,180
type ID that we're talking about here is

1423
01:25:28,899 --> 01:25:36,339
actually not the that this piece of

1424
01:25:34,180 --> 01:25:39,280
information actually isn't like the font

1425
01:25:36,340 --> 01:25:43,210
or whatever this is actually now a tag

1426
01:25:39,279 --> 01:25:46,899
right it's a tag in that's in the actual

1427
01:25:43,210 --> 01:25:51,789
tag array so in order to figure out

1428
01:25:46,899 --> 01:25:54,399
what's going on there we need a we need

1429
01:25:51,789 --> 01:25:55,899
to look it up in the tag itself right so

1430
01:25:54,399 --> 01:25:59,319
we actually have a thing here that's

1431
01:25:55,899 --> 01:26:09,729
like you know ask that type ID v-0 type

1432
01:25:59,319 --> 01:26:11,109
ID equals asset type what was it so all

1433
01:26:09,729 --> 01:26:13,439
right so we're gonna load this we need

1434
01:26:11,109 --> 01:26:17,170
here and say okay we now know what the

1435
01:26:13,439 --> 01:26:19,809
type ID for this thing is if we don't

1436
01:26:17,170 --> 01:26:23,350
find a tag which is it's nothing if we

1437
01:26:19,810 --> 01:26:24,610
do find a tag in the tag array and I

1438
01:26:23,350 --> 01:26:27,340
guess I we're gonna search the tag right

1439
01:26:24,609 --> 01:26:30,130
here that has that then that's the tag

1440
01:26:27,340 --> 01:26:44,409
that we use for it so we can loop over

1441
01:26:30,130 --> 01:26:46,980
the tiger right here HHA asset first tag

1442
01:26:44,409 --> 01:26:46,979
index

1443
01:26:53,289 --> 01:27:06,729
I guess I actually want to just do it

1444
01:26:55,239 --> 01:27:08,409
this way if that's where the tags are so

1445
01:27:06,729 --> 01:27:11,309
now when I loop through these I can just

1446
01:27:08,409 --> 01:27:20,470
look and say well whatever the tag is

1447
01:27:11,310 --> 01:27:25,240
for this if the ID of that tag is the

1448
01:27:20,470 --> 01:27:43,199
basic category then the type ID equals

1449
01:27:25,239 --> 01:27:43,199
that tags value and that's it

1450
01:27:48,679 --> 01:27:56,969
so asset index and file is always gonna

1451
01:27:56,219 --> 01:27:59,300
be bat

1452
01:27:56,969 --> 01:27:59,300
oops

1453
01:28:10,578 --> 01:28:17,899
and I'll forget all right so we've now

1454
01:28:13,880 --> 01:28:21,380
recompiled the game for loading the one

1455
01:28:17,899 --> 01:28:23,328
asset files and what we want to do now

1456
01:28:21,380 --> 01:28:25,819
is just take a look to see whether any

1457
01:28:23,328 --> 01:28:27,019
of it works at all right we're already

1458
01:28:25,819 --> 01:28:28,488
compiled in debug mode

1459
01:28:27,020 --> 01:28:31,760
I believe so we should be able to step

1460
01:28:28,488 --> 01:28:35,299
through this code pretty easily so let's

1461
01:28:31,760 --> 01:28:40,309
just see what happens when we do we end

1462
01:28:35,300 --> 01:28:42,320
up with an asset set that's got you know

1463
01:28:40,309 --> 01:28:44,690
whatever in it it's got a bunch of files

1464
01:28:42,319 --> 01:28:47,299
let's take a look at what they are it

1465
01:28:44,689 --> 01:28:50,719
says six so I'm gonna go ahead and look

1466
01:28:47,300 --> 01:28:53,420
at see what the six files are if I go

1467
01:28:50,719 --> 01:28:58,130
and actually view how many files there

1468
01:28:53,420 --> 01:29:01,399
are in here I see there's one two three

1469
01:28:58,130 --> 01:29:04,219
four five files which is you know not

1470
01:29:01,399 --> 01:29:08,420
six so I believe that's because we just

1471
01:29:04,219 --> 01:29:10,730
leave files 0 as an on file right that's

1472
01:29:08,420 --> 01:29:14,239
the like I don't have a file file ok

1473
01:29:10,729 --> 01:29:17,598
empty slot so we start with file 1 we

1474
01:29:14,238 --> 01:29:23,209
say ok that starts at 1 1 there's the

1475
01:29:17,599 --> 01:29:26,449
watermark which is where the data can be

1476
01:29:23,210 --> 01:29:29,989
appended we've got the header here's the

1477
01:29:26,448 --> 01:29:36,308
tags and the assets in there it says

1478
01:29:29,988 --> 01:29:36,308
that this thing whatever this file was

1479
01:29:36,520 --> 01:29:41,559
and I don't remember what it was

1480
01:29:42,099 --> 01:29:50,119
actually it had 203 201 so I'm assuming

1481
01:29:47,059 --> 01:29:51,440
that must have been the fonts isn't that

1482
01:29:50,118 --> 01:29:53,630
the only thing well it could have any

1483
01:29:51,439 --> 01:29:54,888
inch of art suppose yeah it was probably

1484
01:29:53,630 --> 01:29:59,900
in short there's probably that many

1485
01:29:54,889 --> 01:30:02,359
bitmaps in there so you know seems

1486
01:29:59,899 --> 01:30:04,750
alright everything looks ok there I

1487
01:30:02,359 --> 01:30:04,750
guess

1488
01:30:10,430 --> 01:30:18,270
seems alright again yeah alright

1489
01:30:13,979 --> 01:30:22,649
so it seems reasonable coming through

1490
01:30:18,270 --> 01:30:26,600
here we load in the tag array let's make

1491
01:30:22,649 --> 01:30:26,599
sure the file could read that okay

1492
01:30:29,270 --> 01:30:34,920
where's the no errors there it is no

1493
01:30:31,890 --> 01:30:38,940
where's one look at the asset count just

1494
01:30:34,920 --> 01:30:45,119
200 of them seems reasonable we're gonna

1495
01:30:38,939 --> 01:30:48,139
go ahead and load that we have an end

1496
01:30:45,119 --> 01:30:48,140
temp remember yeah we do

1497
01:30:56,229 --> 01:31:00,209
everything seems pretty good here

1498
01:31:08,640 --> 01:31:11,780
seems pretty good

1499
01:31:24,100 --> 01:31:29,570
all right I mean it seems all right

1500
01:31:26,420 --> 01:31:33,149
let's see if we get any errors here so

1501
01:31:29,569 --> 01:31:34,899
we are able to load the whole thing

1502
01:31:33,149 --> 01:31:42,170
[Music]

1503
01:31:34,899 --> 01:31:44,539
which is good so look successful the

1504
01:31:42,170 --> 01:31:51,800
tags are operating properly the search

1505
01:31:44,539 --> 01:31:53,539
is operating properly so that imported

1506
01:31:51,800 --> 01:32:01,250
everything correctly as far as I can

1507
01:31:53,539 --> 01:32:05,479
tell right so off we go right so that's

1508
01:32:01,250 --> 01:32:08,659
good so I think that really does leave

1509
01:32:05,479 --> 01:32:11,569
us I I can do some more work today I can

1510
01:32:08,659 --> 01:32:16,609
put 15 minutes into cleaning up the

1511
01:32:11,569 --> 01:32:18,739
rewrite part let's let's make sure also

1512
01:32:16,609 --> 01:32:20,659
that we are running at a reasonable

1513
01:32:18,739 --> 01:32:22,130
speed and that there isn't something

1514
01:32:20,659 --> 01:32:25,069
weird going on with the debug builds

1515
01:32:22,130 --> 01:32:26,180
well I mean with the release build but I

1516
01:32:25,069 --> 01:32:32,750
assume that was just the debug build

1517
01:32:26,180 --> 01:32:34,430
there yeah so everything looks good

1518
01:32:32,750 --> 01:32:36,260
there the one thing that I do think we

1519
01:32:34,430 --> 01:32:41,510
need to bug you could see that the fonts

1520
01:32:36,260 --> 01:32:43,340
are messed up right so that offsets we

1521
01:32:41,510 --> 01:32:48,949
got to go find out what's the deal with

1522
01:32:43,340 --> 01:32:52,029
that offset something weird is going on

1523
01:32:48,949 --> 01:32:55,519
with that offset right and I do not know

1524
01:32:52,029 --> 01:32:59,619
because I was just totally confused as

1525
01:32:55,520 --> 01:33:02,620
to why it's even doing what it's doing I

1526
01:32:59,619 --> 01:33:02,619
need

1527
01:33:05,449 --> 01:33:18,710
I need some to go refresh my memory as

1528
01:33:17,239 --> 01:33:24,889
to what was even going on there with the

1529
01:33:18,710 --> 01:33:27,680
fonts so if you look for example what's

1530
01:33:24,890 --> 01:33:30,770
happening here you can see that we're

1531
01:33:27,680 --> 01:33:33,760
only off by one I think because if you

1532
01:33:30,770 --> 01:33:39,230
look at what these values are showing us

1533
01:33:33,760 --> 01:33:40,520
you can see the the letters NT and if

1534
01:33:39,229 --> 01:33:45,319
you think about was supposed to go there

1535
01:33:40,520 --> 01:33:47,630
was milliseconds M s so if M s was what

1536
01:33:45,319 --> 01:33:49,939
was supposed to go there and n T is what

1537
01:33:47,630 --> 01:33:55,550
is there it means that we are seeing a

1538
01:33:49,939 --> 01:33:59,629
font glyph that is one away from what we

1539
01:33:55,550 --> 01:34:02,210
actually wanted so that offset is pretty

1540
01:33:59,630 --> 01:34:05,260
straight forward it's just off by one it

1541
01:34:02,210 --> 01:34:05,260
seems right

1542
01:34:05,569 --> 01:34:12,500
so this when we're coming through here

1543
01:34:08,869 --> 01:34:16,489
to load these out and we use that asset

1544
01:34:12,500 --> 01:34:19,130
base the asset base tells us where the

1545
01:34:16,489 --> 01:34:21,469
offs that would be but I guess if we

1546
01:34:19,130 --> 01:34:27,109
think about it it doesn't include the

1547
01:34:21,470 --> 01:34:30,470
fact that there was a zero right so if

1548
01:34:27,109 --> 01:34:32,719
so you need there to be the asset base

1549
01:34:30,470 --> 01:34:35,000
says I loaded here but I didn't load my

1550
01:34:32,720 --> 01:34:35,390
array I actually loaded one off from

1551
01:34:35,000 --> 01:34:39,829
there

1552
01:34:35,390 --> 01:34:43,220
right so technically like the asset base

1553
01:34:39,829 --> 01:34:45,739
is not really the asset count it's

1554
01:34:43,220 --> 01:34:48,320
really the asset count minus one because

1555
01:34:45,739 --> 01:34:50,569
everything you would have loaded is what

1556
01:34:48,319 --> 01:34:54,289
you slid over by the fact that we

1557
01:34:50,569 --> 01:34:56,239
removed the zero so I think that was

1558
01:34:54,289 --> 01:34:58,600
probably the only problem and yes I'm

1559
01:34:56,239 --> 01:34:58,599
correct

1560
01:35:03,689 --> 01:35:07,009
so I think we're all good

1561
01:35:25,960 --> 01:35:30,220
and our frame display is looking bad

1562
01:35:33,039 --> 01:35:39,569
our OpenGL renderer commands this is

1563
01:35:36,970 --> 01:35:39,570
sucking

1564
01:35:46,630 --> 01:35:54,819
is just like inaccurate or something cuz

1565
01:35:50,479 --> 01:35:57,799
it doesn't seem right when I look here

1566
01:35:54,819 --> 01:36:01,219
like I guess because these are getting

1567
01:35:57,800 --> 01:36:02,810
summed up is why but you can see that

1568
01:36:01,220 --> 01:36:06,579
like most of our time is spent waiting

1569
01:36:02,810 --> 01:36:06,580
around for open jail at the moment

1570
01:36:12,960 --> 01:36:25,800
yeah anyway so yeah moving on we are

1571
01:36:24,300 --> 01:36:27,869
completely upgraded to our new file

1572
01:36:25,800 --> 01:36:30,090
format now and that means we can at this

1573
01:36:27,869 --> 01:36:34,649
point change this file format around

1574
01:36:30,090 --> 01:36:36,510
however we want to and you know decide

1575
01:36:34,649 --> 01:36:38,849
on what we're gonna have for our v1 file

1576
01:36:36,510 --> 01:36:41,760
format and just do the conversion and be

1577
01:36:38,850 --> 01:36:47,010
done with it now I so what I want to do

1578
01:36:41,760 --> 01:36:50,360
now is just finish up what we were

1579
01:36:47,010 --> 01:36:53,070
trying to do with the asset importing

1580
01:36:50,359 --> 01:36:55,049
when we import now we have the ability

1581
01:36:53,069 --> 01:36:57,029
to store those annotations that means

1582
01:36:55,050 --> 01:37:01,619
that I think and I could be wrong about

1583
01:36:57,029 --> 01:37:04,469
this but I think if I want to I can

1584
01:37:01,619 --> 01:37:08,069
actually drive the asset source file

1585
01:37:04,470 --> 01:37:18,930
stuff here this can actually just be

1586
01:37:08,069 --> 01:37:24,329
driven off of the this can be driven off

1587
01:37:18,930 --> 01:37:27,480
of what comes out of the HHA right and

1588
01:37:24,329 --> 01:37:30,539
so what that means is that all of the

1589
01:37:27,479 --> 01:37:32,789
stuff like the asset index stuff all of

1590
01:37:30,539 --> 01:37:35,100
this stuff can when we load and act

1591
01:37:32,789 --> 01:37:36,930
assets out of the file if it has the

1592
01:37:35,100 --> 01:37:39,840
annotation array we can populate our

1593
01:37:36,930 --> 01:37:41,730
asset source file information directly

1594
01:37:39,840 --> 01:37:43,680
out of the HHA which means we wouldn't

1595
01:37:41,729 --> 01:37:45,659
have to store any longer we won't you

1596
01:37:43,680 --> 01:37:47,280
destroy any sideband information which

1597
01:37:45,659 --> 01:37:49,170
is pretty awesome because it means like

1598
01:37:47,279 --> 01:37:53,460
if you get an HH a from somebody if you

1599
01:37:49,170 --> 01:37:58,770
just pass around in HH a then you're

1600
01:37:53,460 --> 01:38:00,720
done you don't need you you don't need

1601
01:37:58,770 --> 01:38:03,000
to pass around like a text file that

1602
01:38:00,720 --> 01:38:04,320
also says like where the stuff come from

1603
01:38:03,000 --> 01:38:09,810
I think it's all kind of embedded in

1604
01:38:04,319 --> 01:38:11,609
there which seems good so I don't know

1605
01:38:09,810 --> 01:38:14,840
how much time I got left here I guess I

1606
01:38:11,609 --> 01:38:17,969
got 10 minutes left

1607
01:38:14,840 --> 01:38:17,970
[Music]

1608
01:38:47,130 --> 01:38:53,199
so I'm not really sure what I want to do

1609
01:38:49,529 --> 01:38:54,609
I might just want to go to QA because I

1610
01:38:53,199 --> 01:38:58,979
think the next thing we're going to want

1611
01:38:54,609 --> 01:38:58,979
to do is probably gonna be

1612
01:39:00,000 --> 01:39:08,199
more involved than something we're going

1613
01:39:02,170 --> 01:39:10,779
to do in ten minutes because basically

1614
01:39:08,199 --> 01:39:13,059
the next thing we want to do is we want

1615
01:39:10,779 --> 01:39:14,679
to we want to make the writing in the

1616
01:39:13,060 --> 01:39:16,570
annotation stuff work but we kind of

1617
01:39:14,680 --> 01:39:17,950
want to then go we're gonna want to do

1618
01:39:16,569 --> 01:39:20,979
that which take the thing a while and

1619
01:39:17,949 --> 01:39:23,260
then we're gonna want to start figuring

1620
01:39:20,979 --> 01:39:26,379
out how to do the tag like we need to

1621
01:39:23,260 --> 01:39:29,039
start creating some stuff and figure out

1622
01:39:26,380 --> 01:39:31,359
how we want these tags to work because

1623
01:39:29,039 --> 01:39:34,060
like we need to start going like okay

1624
01:39:31,359 --> 01:39:37,149
let's let's try to put all the art

1625
01:39:34,060 --> 01:39:39,100
assets into the game and how what is the

1626
01:39:37,149 --> 01:39:42,309
way that we want to specify that

1627
01:39:39,100 --> 01:39:44,050
information right and we're gonna have

1628
01:39:42,310 --> 01:39:47,469
to spend some time iterating over that

1629
01:39:44,050 --> 01:39:51,579
and like figuring out like okay what's

1630
01:39:47,469 --> 01:39:54,399
the most like what is the most robust

1631
01:39:51,579 --> 01:39:56,920
way of saying stuff like okay that you

1632
01:39:54,399 --> 01:39:59,649
know trying to create a floor tile in

1633
01:39:56,920 --> 01:40:04,300
the room generator how do i articulate

1634
01:39:59,649 --> 01:40:07,500
to the game asset system what I want

1635
01:40:04,300 --> 01:40:10,900
this floor tile to look like right and

1636
01:40:07,500 --> 01:40:13,899
there's a huge continuum to like a very

1637
01:40:10,899 --> 01:40:16,960
vague set of things like it's sort of

1638
01:40:13,899 --> 01:40:18,939
indoors and it's supposed to be wooden

1639
01:40:16,960 --> 01:40:22,090
and it's but you know right and it fuzz

1640
01:40:18,939 --> 01:40:25,988
aliy matches on that all the way to like

1641
01:40:22,090 --> 01:40:32,619
I want it to be bitmap 37 right and in

1642
01:40:25,988 --> 01:40:34,659
finding that middle ground is now we

1643
01:40:32,619 --> 01:40:36,309
because we need now we need it we have

1644
01:40:34,659 --> 01:40:39,039
art assets we've got to finally say

1645
01:40:36,310 --> 01:40:40,840
here's how they get looked up so we got

1646
01:40:39,039 --> 01:40:42,600
to consolidate the tag system and figure

1647
01:40:40,840 --> 01:40:44,710
out exactly how that works

1648
01:40:42,600 --> 01:40:45,329
so they're going to see that for next

1649
01:40:44,710 --> 01:40:49,149
weekend

1650
01:40:45,329 --> 01:40:51,100
and and we can go from there so I'll go

1651
01:40:49,149 --> 01:40:52,449
to the Q&amp;A now because I just don't feel

1652
01:40:51,100 --> 01:40:54,850
like starting on something I can't

1653
01:40:52,449 --> 01:40:58,260
finish or at least get some reasonable

1654
01:40:54,850 --> 01:40:58,260
amount of the way through

1655
01:41:02,409 --> 01:41:09,699
I will answer question I see from the

1656
01:41:05,460 --> 01:41:11,680
restream there it said have you tried LD

1657
01:41:09,699 --> 01:41:14,649
be I use that at work and it seems to be

1658
01:41:11,680 --> 01:41:21,070
stable I've not I probably should

1659
01:41:14,649 --> 01:41:23,829
because gdb is just awful it crashes a

1660
01:41:21,069 --> 01:41:27,069
lot like one out of every three runs for

1661
01:41:23,829 --> 01:41:28,449
me or so on a totally vanilla system

1662
01:41:27,069 --> 01:41:30,399
doesn't even have a GPU

1663
01:41:28,449 --> 01:41:32,710
it's an Intel integrated graphics so

1664
01:41:30,399 --> 01:41:33,429
it's not even using any proprietary

1665
01:41:32,710 --> 01:41:36,850
drivers

1666
01:41:33,430 --> 01:41:40,210
it's just vanilla Ubuntu and like geni

1667
01:41:36,850 --> 01:41:42,970
be like just doesn't even work it

1668
01:41:40,210 --> 01:41:44,949
crashes all the time and and it's not an

1669
01:41:42,970 --> 01:41:48,010
oh and I should mention it's a command

1670
01:41:44,949 --> 01:41:51,189
line app like I was debugging a Camille

1671
01:41:48,010 --> 01:41:54,699
and it doesn't open a window doesn't

1672
01:41:51,189 --> 01:41:57,909
talk to X Windows at all right it was

1673
01:41:54,699 --> 01:42:00,729
just like a C runtime library simple

1674
01:41:57,909 --> 01:42:04,059
application it opens some sockets and it

1675
01:42:00,729 --> 01:42:08,649
calls malloc like that's it gdb crashed

1676
01:42:04,060 --> 01:42:12,070
all the time to be fair I guess it links

1677
01:42:08,649 --> 01:42:16,359
with curl and curl is probably a big

1678
01:42:12,069 --> 01:42:20,590
sprawl so maybe there but I mean curl

1679
01:42:16,359 --> 01:42:21,819
doesn't open a window right so how come

1680
01:42:20,590 --> 01:42:23,020
the shader debug window with the grass

1681
01:42:21,819 --> 01:42:24,759
makes transparent pictures around the

1682
01:42:23,020 --> 01:42:27,070
main character white because we use

1683
01:42:24,760 --> 01:42:29,619
depth peeling and we only have a few def

1684
01:42:27,069 --> 01:42:31,869
peels so when you start to put debug

1685
01:42:29,619 --> 01:42:34,329
overlays on top it takes up the depth

1686
01:42:31,869 --> 01:42:37,170
peel that you would have used there that

1687
01:42:34,329 --> 01:42:37,170
that's what's happening

1688
01:42:44,579 --> 01:42:49,359
why is that there is no file file there

1689
01:42:47,350 --> 01:42:51,700
if it's in the way all the time it's so

1690
01:42:49,359 --> 01:42:53,199
that you can use file index zero to say

1691
01:42:51,699 --> 01:43:00,849
that you didn't come from a file or that

1692
01:42:53,199 --> 01:43:02,529
you're not talking about a file if you

1693
01:43:00,850 --> 01:43:04,090
need to run a bunch of Redick

1694
01:43:02,529 --> 01:43:06,519
substitutions on huge chunks of your

1695
01:43:04,090 --> 01:43:10,960
codebase how do you go about it I don't

1696
01:43:06,520 --> 01:43:16,170
I'd never do that I agree it would be

1697
01:43:10,960 --> 01:43:20,289
nice to be able to do that sometimes but

1698
01:43:16,170 --> 01:43:23,260
you know I've never really the problem

1699
01:43:20,289 --> 01:43:25,180
is just that you really don't want to do

1700
01:43:23,260 --> 01:43:26,710
code base wide substitutions

1701
01:43:25,180 --> 01:43:29,409
automatically with something that

1702
01:43:26,710 --> 01:43:31,239
doesn't understand code and we don't

1703
01:43:29,409 --> 01:43:33,010
have that right now like they're you

1704
01:43:31,239 --> 01:43:34,719
know if I say I want to change the

1705
01:43:33,010 --> 01:43:37,360
global variable that's named this to

1706
01:43:34,720 --> 01:43:38,860
this that's a really easy change that

1707
01:43:37,359 --> 01:43:41,529
should just be make that should just

1708
01:43:38,859 --> 01:43:44,289
work but because text editors only know

1709
01:43:41,529 --> 01:43:47,079
text and this is code it doesn't work

1710
01:43:44,289 --> 01:43:50,289
right so I tend to just since I don't

1711
01:43:47,079 --> 01:43:52,809
often have to do what you're talking

1712
01:43:50,289 --> 01:43:55,689
about I just do them manually when they

1713
01:43:52,810 --> 01:43:58,330
come up so that I can inspect every file

1714
01:43:55,689 --> 01:44:03,659
and I go through the changes to make

1715
01:43:58,329 --> 01:44:06,550
sure that's nothing screwy happened and

1716
01:44:03,659 --> 01:44:10,680
I wish that were not the case but like

1717
01:44:06,550 --> 01:44:12,670
that is currently the way I do it and

1718
01:44:10,680 --> 01:44:14,710
and you know there's there's been

1719
01:44:12,670 --> 01:44:20,170
refactoring tools and stuff that people

1720
01:44:14,710 --> 01:44:22,390
have created and like you know IDE

1721
01:44:20,170 --> 01:44:23,739
plug-ins for this sort of thing my

1722
01:44:22,390 --> 01:44:25,329
experience with those is they're always

1723
01:44:23,739 --> 01:44:27,399
more trouble than they're worth again

1724
01:44:25,329 --> 01:44:29,800
because I do this sort of sync thing so

1725
01:44:27,399 --> 01:44:31,479
infrequently those tools tend to be kind

1726
01:44:29,800 --> 01:44:34,000
of crappy and then now this is another

1727
01:44:31,479 --> 01:44:36,189
thing got to maintain and the versions

1728
01:44:34,000 --> 01:44:38,289
get off and it doesn't work or doesn't

1729
01:44:36,189 --> 01:44:40,569
support something I'm doing or it gets

1730
01:44:38,289 --> 01:44:47,619
confused by a macro or you know it's

1731
01:44:40,569 --> 01:44:49,509
just people have tried to make things to

1732
01:44:47,619 --> 01:44:53,349
do those sorts of joys that they often

1733
01:44:49,510 --> 01:44:54,190
just aren't good enough if I guess what

1734
01:44:53,350 --> 01:44:58,000
I would say

1735
01:44:54,189 --> 01:44:59,679
to be what they don't save more time

1736
01:44:58,000 --> 01:45:07,710
than they waste because I just don't

1737
01:44:59,680 --> 01:45:07,710
have to do that very often so

1738
01:45:55,149 --> 01:46:00,819
and by the way you don't need to put Q

1739
01:45:58,060 --> 01:46:03,330
colon in front of things you can put at

1740
01:46:00,819 --> 01:46:05,920
handmade hero that actually does work

1741
01:46:03,329 --> 01:46:08,529
it's just the Q colons a lot more

1742
01:46:05,920 --> 01:46:10,180
convenient so the the thing does the

1743
01:46:08,529 --> 01:46:12,670
thing grabs Q :

1744
01:46:10,180 --> 01:46:14,800
and at handmade hero it will grab I

1745
01:46:12,670 --> 01:46:17,770
think it all it also grabs at senior

1746
01:46:14,800 --> 01:46:19,300
Tori so it basically like if you try to

1747
01:46:17,770 --> 01:46:20,800
address a question to me using the

1748
01:46:19,300 --> 01:46:22,960
traditional trick - which way it will

1749
01:46:20,800 --> 01:46:24,210
work it's just a lot more typing for you

1750
01:46:22,960 --> 01:46:26,890
for no reason

1751
01:46:24,210 --> 01:46:33,609
compared to Q : if you're on a tool that

1752
01:46:26,890 --> 01:46:35,039
doesn't use autocomplete right oh yes

1753
01:46:33,609 --> 01:46:38,469
thank you

1754
01:46:35,039 --> 01:46:41,710
somebody took my name for mentioning

1755
01:46:38,470 --> 01:46:43,470
that the glyph didn't it seem am I the

1756
01:46:41,710 --> 01:46:46,840
only person who felt like the glyph

1757
01:46:43,470 --> 01:46:48,250
stuff printed out wrong or if it didn't

1758
01:46:46,840 --> 01:46:52,690
print out wrong then something's weird

1759
01:46:48,250 --> 01:47:00,840
about it anyway where did we print that

1760
01:46:52,689 --> 01:47:08,879
out here it is okay so yeah it was just

1761
01:47:00,840 --> 01:47:12,989
backwards so that's at least reassuring

1762
01:47:08,880 --> 01:47:12,989
that was just a simple typo

1763
01:47:18,359 --> 01:47:24,479
viii till VTL MKS not really a question

1764
01:47:21,689 --> 01:47:26,639
but why efi what problem did they make

1765
01:47:24,479 --> 01:47:30,959
up to have efi solve are you referring

1766
01:47:26,640 --> 01:47:32,760
to the bio standard I just wanna make

1767
01:47:30,960 --> 01:47:38,310
sure I don't answer a question that's

1768
01:47:32,760 --> 01:47:39,030
not the one you had like are you

1769
01:47:38,310 --> 01:47:58,789
referring to

1770
01:47:39,029 --> 01:47:58,789
I referring to this stuff yeah so

1771
01:48:12,739 --> 01:48:27,420
where to start as with most things I

1772
01:48:22,250 --> 01:48:30,569
don't think if I was making up a problem

1773
01:48:27,420 --> 01:48:32,000
to solve I think it was solving a

1774
01:48:30,569 --> 01:48:36,630
problem right

1775
01:48:32,000 --> 01:48:42,000
pretty much everything standards wise

1776
01:48:36,630 --> 01:48:50,029
that we make is in is in response to a

1777
01:48:42,000 --> 01:48:50,029
real problem however like many things

1778
01:48:50,779 --> 01:48:56,399
rather than solve the problem that it

1779
01:48:54,149 --> 01:49:00,779
was in response to what they actually do

1780
01:48:56,399 --> 01:49:13,799
is just create a lot of problems you

1781
01:49:00,779 --> 01:49:16,949
know and so most of the time standards

1782
01:49:13,800 --> 01:49:18,900
are just a mixed bag in that way if you

1783
01:49:16,949 --> 01:49:23,670
take a look at the bias that was

1784
01:49:18,899 --> 01:49:26,699
originally before EFI it was pretty good

1785
01:49:23,670 --> 01:49:29,600
right it was really easy to say here's

1786
01:49:26,699 --> 01:49:31,639
how you do a disk i/o here's how you

1787
01:49:29,600 --> 01:49:36,510
switch the mode of the graphics card

1788
01:49:31,640 --> 01:49:38,250
right it's easy to read it's easy to

1789
01:49:36,510 --> 01:49:44,430
program for it was really kind of

1790
01:49:38,250 --> 01:49:46,640
enjoyable right and easy but hey I do

1791
01:49:44,430 --> 01:49:48,900
you want to know if there's a USB device

1792
01:49:46,640 --> 01:49:51,780
connected do you want to boot off the

1793
01:49:48,899 --> 01:49:54,179
USB device right that's something that

1794
01:49:51,779 --> 01:49:57,029
we do all the time now is boot off of a

1795
01:49:54,180 --> 01:49:59,789
USB Drive for example right well that's

1796
01:49:57,029 --> 01:50:04,639
not in the original BIOS stuff there

1797
01:49:59,789 --> 01:50:10,439
wasn't USB when the BIOS original IBM

1798
01:50:04,640 --> 01:50:14,220
BIOS stuff was specified right and so at

1799
01:50:10,439 --> 01:50:16,229
some point because remember the IBM PC

1800
01:50:14,220 --> 01:50:19,400
specification was originally created by

1801
01:50:16,229 --> 01:50:21,839
IBM that's why it was called IBM PC and

1802
01:50:19,399 --> 01:50:25,399
it was created at a time when there were

1803
01:50:21,840 --> 01:50:25,400
very very few things

1804
01:50:26,520 --> 01:50:31,989
- for the computer to do and so those

1805
01:50:30,819 --> 01:50:35,199
were the things that were in there you

1806
01:50:31,988 --> 01:50:39,309
know was there was a fixed keyboard kind

1807
01:50:35,199 --> 01:50:40,238
of interface a fixed Mouse if any you

1808
01:50:39,310 --> 01:50:41,739
know that I don't even think the mouse

1809
01:50:40,238 --> 01:50:45,339
made the mask may have not even been

1810
01:50:41,738 --> 01:50:47,289
there in the original ones you know and

1811
01:50:45,340 --> 01:50:50,230
so there were just a lot of things that

1812
01:50:47,289 --> 01:50:53,469
were really pretty under specified in

1813
01:50:50,229 --> 01:50:56,769
that original spec and so at some point

1814
01:50:53,469 --> 01:51:00,189
you know somebody has to say here's how

1815
01:50:56,770 --> 01:51:05,020
we're going to handle all these new

1816
01:51:00,189 --> 01:51:10,029
things and so EFI was necessary and UEFI

1817
01:51:05,020 --> 01:51:13,600
were necessary to address those missing

1818
01:51:10,029 --> 01:51:15,099
features as PC hardware started having

1819
01:51:13,600 --> 01:51:19,860
more and more things that needed to

1820
01:51:15,100 --> 01:51:23,020
happen at buy us time because you know

1821
01:51:19,859 --> 01:51:25,029
you can have drivers and stuff and do

1822
01:51:23,020 --> 01:51:27,190
things that way once the operating

1823
01:51:25,029 --> 01:51:29,500
system is actually booted but where does

1824
01:51:27,189 --> 01:51:32,409
the operating system come from right the

1825
01:51:29,500 --> 01:51:35,619
BIOS has to be able to bootstrap things

1826
01:51:32,409 --> 01:51:38,199
together and if you fundamentally don't

1827
01:51:35,619 --> 01:51:41,319
have a BIOS that understands a bunch of

1828
01:51:38,199 --> 01:51:45,670
things that happen in a modern PC then

1829
01:51:41,319 --> 01:51:47,529
that doesn't work so I totally

1830
01:51:45,670 --> 01:51:53,319
understand why you might think efi is

1831
01:51:47,529 --> 01:51:54,880
bad it's isn't good but that doesn't

1832
01:51:53,319 --> 01:51:58,059
mean that the thing that was before it

1833
01:51:54,880 --> 01:52:00,250
was sufficient it wasn't so really what

1834
01:51:58,060 --> 01:52:06,190
we would say is we wish they had made

1835
01:52:00,250 --> 01:52:07,750
you a UEFI better than it was but I

1836
01:52:06,189 --> 01:52:10,569
don't think you want to go back to the

1837
01:52:07,750 --> 01:52:12,189
time before it because then you'd be

1838
01:52:10,569 --> 01:52:16,779
giving up most of the things you can do

1839
01:52:12,189 --> 01:52:19,869
with your computer today you know you

1840
01:52:16,779 --> 01:52:24,369
would have to use a floppy drive to boot

1841
01:52:19,869 --> 01:52:26,229
and stuff right um well not really you

1842
01:52:24,369 --> 01:52:27,340
could boot off a hard drive but how

1843
01:52:26,229 --> 01:52:28,449
would you have installed the stuff on

1844
01:52:27,340 --> 01:52:30,819
the hard drive you would have had to

1845
01:52:28,449 --> 01:52:32,920
boot off a floppy and that floppy would

1846
01:52:30,819 --> 01:52:35,559
have to have contained drivers for your

1847
01:52:32,920 --> 01:52:37,719
USB stack which you then could plug a

1848
01:52:35,560 --> 01:52:39,010
drive into I'm not exaggerating that's

1849
01:52:37,719 --> 01:52:41,230
really what would have to have

1850
01:52:39,010 --> 01:52:45,760
the other thing you could have done was

1851
01:52:41,229 --> 01:52:48,848
they could have had a legacy mode that

1852
01:52:45,760 --> 01:52:51,340
if you that had a USB port that if you

1853
01:52:48,849 --> 01:52:54,309
plug to drive into it it had a driver

1854
01:52:51,340 --> 01:52:57,460
for the USB specifically on a by us on

1855
01:52:54,309 --> 01:53:01,300
that port that then made it look like an

1856
01:52:57,460 --> 01:53:04,328
old like 80 hard drives that worked with

1857
01:53:01,300 --> 01:53:06,460
the by us you know so you know you could

1858
01:53:04,328 --> 01:53:08,859
get around since but you see how janky

1859
01:53:06,460 --> 01:53:10,750
it is right like so it's not

1860
01:53:08,859 --> 01:53:12,609
unreasonable that they wanted to come up

1861
01:53:10,750 --> 01:53:14,679
with something new it's just that we you

1862
01:53:12,609 --> 01:53:19,538
know do would it be nice it'd have been

1863
01:53:14,679 --> 01:53:24,010
better sure not the same thing as saying

1864
01:53:19,538 --> 01:53:25,238
that it was superfluous darks bright

1865
01:53:24,010 --> 01:53:27,400
it's been even off time a question I

1866
01:53:25,238 --> 01:53:28,928
found you talk about gjk and implemented

1867
01:53:27,399 --> 01:53:30,729
it for my project but now I don't know

1868
01:53:28,929 --> 01:53:34,750
what to do to resolve collisions when I

1869
01:53:30,729 --> 01:53:36,968
detect them what should I tell I don't

1870
01:53:34,750 --> 01:53:40,679
know what do you want to do in your game

1871
01:53:36,969 --> 01:53:40,679
when things collide

1872
01:53:46,868 --> 01:53:53,609
I am NOT I'm not sure how to answer that

1873
01:53:51,429 --> 01:53:53,609
question

1874
01:54:03,909 --> 01:54:09,079
there are ways of extending gjk to find

1875
01:54:07,130 --> 01:54:11,029
the time of intersection which may help

1876
01:54:09,079 --> 01:54:15,350
you

1877
01:54:11,029 --> 01:54:18,649
you can add the motion vector into the

1878
01:54:15,350 --> 01:54:22,070
gjk solve and then back out of the gjk

1879
01:54:18,649 --> 01:54:23,629
solve and figure out which face you left

1880
01:54:22,069 --> 01:54:26,500
through there's there's some stuff you

1881
01:54:23,630 --> 01:54:26,500
can do there but

1882
01:54:53,420 --> 01:54:57,600
can you give advice for someone who

1883
01:54:55,618 --> 01:54:59,399
wants to drop out of college and just

1884
01:54:57,600 --> 01:55:05,429
finally get a programming job or is it a

1885
01:54:59,399 --> 01:55:09,738
big no-no nowadays to do so I so what I

1886
01:55:05,429 --> 01:55:13,770
can only tell you secondhand information

1887
01:55:09,738 --> 01:55:16,669
because I don't work with large hiring

1888
01:55:13,770 --> 01:55:19,889
organizations or anything like that

1889
01:55:16,670 --> 01:55:23,760
here's what I'll tell you from what I

1890
01:55:19,889 --> 01:55:27,359
have seen almost no interviewers or

1891
01:55:23,760 --> 01:55:32,100
hiring managers at software companies

1892
01:55:27,359 --> 01:55:33,750
care if you have a cs degree so it is

1893
01:55:32,100 --> 01:55:36,539
true that you'd probably don't need to

1894
01:55:33,750 --> 01:55:43,649
finish your CS degree to pass that part

1895
01:55:36,539 --> 01:55:49,738
if you are good but here is the rub in

1896
01:55:43,649 --> 01:55:54,238
order to get to that stage right you

1897
01:55:49,738 --> 01:55:57,149
would have had to go through some kind

1898
01:55:54,238 --> 01:55:59,729
of screening process through human

1899
01:55:57,149 --> 01:56:03,089
resources or however that company

1900
01:55:59,729 --> 01:56:05,189
screens their applicants if that company

1901
01:56:03,090 --> 01:56:06,960
screens their applicants based on

1902
01:56:05,189 --> 01:56:13,109
whether they have CS degrees you'll

1903
01:56:06,960 --> 01:56:15,779
never get the interview right so I think

1904
01:56:13,109 --> 01:56:18,299
you have to first sit back and ask

1905
01:56:15,779 --> 01:56:22,349
yourself where am I going to try and get

1906
01:56:18,300 --> 01:56:24,510
a job and what do I think the chances

1907
01:56:22,350 --> 01:56:28,940
are that I can ever get a foot in the

1908
01:56:24,510 --> 01:56:31,170
door there without a CS degree right

1909
01:56:28,939 --> 01:56:32,849
because remember there's a lot of things

1910
01:56:31,170 --> 01:56:34,550
that a CS degree gets you that have

1911
01:56:32,850 --> 01:56:36,750
nothing to do with programming

1912
01:56:34,550 --> 01:56:38,750
connections with you know that your

1913
01:56:36,750 --> 01:56:41,399
professor might have to get you a job

1914
01:56:38,750 --> 01:56:44,639
access to job fairs where people recruit

1915
01:56:41,399 --> 01:56:46,799
at your college campus just the fact

1916
01:56:44,639 --> 01:56:48,600
that you have a CS degree means you

1917
01:56:46,800 --> 01:56:51,779
might be able to apply for immigration

1918
01:56:48,600 --> 01:56:55,619
lotteries right like in the u.s. if you

1919
01:56:51,779 --> 01:56:58,889
have a degree and you're from outside

1920
01:56:55,618 --> 01:57:04,500
the US you are more likely I think to

1921
01:56:58,889 --> 01:57:06,719
get a limitation visas for working here

1922
01:57:04,500 --> 01:57:11,248
I don't know if that's still true but

1923
01:57:06,719 --> 01:57:14,880
it was true at the time there's there's

1924
01:57:11,248 --> 01:57:17,639
all kinds of reasons why a CS degree may

1925
01:57:14,880 --> 01:57:19,349
be important to your future that have

1926
01:57:17,639 --> 01:57:21,748
nothing to do with whether you learned

1927
01:57:19,349 --> 01:57:25,019
anything while you were there right so

1928
01:57:21,748 --> 01:57:27,118
you can't just think of the degree sadly

1929
01:57:25,019 --> 01:57:29,219
you know we think of college as a place

1930
01:57:27,118 --> 01:57:32,130
you go to learn stuff it's not only that

1931
01:57:29,219 --> 01:57:34,319
it's the first part of a filtering

1932
01:57:32,130 --> 01:57:36,300
process that other companies use to

1933
01:57:34,319 --> 01:57:38,099
determine who they're gonna hire and you

1934
01:57:36,300 --> 01:57:41,610
have to be aware of that just because

1935
01:57:38,099 --> 01:57:44,578
that seems unfair or unnecessary doesn't

1936
01:57:41,609 --> 01:57:52,639
matter because all that matters is that

1937
01:57:44,578 --> 01:57:55,109
it's true right right so you have to be

1938
01:57:52,639 --> 01:57:58,769
realistic when you're weighing your

1939
01:57:55,109 --> 01:58:00,448
options about that it may be true that C

1940
01:57:58,769 --> 01:58:01,590
s degree is a waste of time it may be

1941
01:58:00,448 --> 01:58:04,439
that you aren't going to learn anything

1942
01:58:01,590 --> 01:58:06,590
useful there I'm not saying that's true

1943
01:58:04,439 --> 01:58:09,779
I'm just saying let maybe that is true

1944
01:58:06,590 --> 01:58:12,239
but if that is true those are not the

1945
01:58:09,779 --> 01:58:15,868
that is not dispositive that does it

1946
01:58:12,238 --> 01:58:17,728
tell you therefore there's no reason to

1947
01:58:15,868 --> 01:58:20,670
stick it out and finish that's not true

1948
01:58:17,729 --> 01:58:24,630
there are a number of reasons why that

1949
01:58:20,670 --> 01:58:27,090
CS degree as simply a piece of paper may

1950
01:58:24,630 --> 01:58:30,538
be important to you so be sure you

1951
01:58:27,090 --> 01:58:33,869
understand those trade-offs before you

1952
01:58:30,538 --> 01:58:35,578
drop out of college or believe that your

1953
01:58:33,868 --> 01:58:38,478
CS degree is not going to be valuable to

1954
01:58:35,578 --> 01:58:41,908
you because it's not just what you learn

1955
01:58:38,479 --> 01:58:44,969
it's also what other people have put in

1956
01:58:41,908 --> 01:58:48,859
place as barriers that CS degrees allow

1957
01:58:44,969 --> 01:58:51,059
you to bypass so just keep that in mind

1958
01:58:48,859 --> 01:58:53,158
the second part of the question is how

1959
01:58:51,059 --> 01:58:59,460
do I get a programming job with that or

1960
01:58:53,158 --> 01:59:01,078
without the CS degree I think to a large

1961
01:58:59,460 --> 01:59:04,158
extent it depends on where you're what

1962
01:59:01,078 --> 01:59:04,158
kind of jobs are applying for

1963
01:59:05,809 --> 01:59:12,449
demonstrating that you have skills he's

1964
01:59:09,569 --> 01:59:14,759
a good way to go why should I hire you

1965
01:59:12,448 --> 01:59:18,238
there's tons of people out there who

1966
01:59:14,760 --> 01:59:19,909
program computers most of them are lousy

1967
01:59:18,238 --> 01:59:23,839
and I

1968
01:59:19,908 --> 01:59:28,518
want to hire them so my question is why

1969
01:59:23,840 --> 01:59:31,340
should I hire you right what makes me

1970
01:59:28,519 --> 01:59:33,409
think that you are going to be the kind

1971
01:59:31,340 --> 01:59:36,380
of person worth spending time on to

1972
01:59:33,408 --> 01:59:38,748
bring onto my team teach how to do what

1973
01:59:36,380 --> 01:59:42,998
we're doing and like that you will start

1974
01:59:38,748 --> 01:59:46,010
contributing if I can go to a webpage

1975
01:59:42,998 --> 01:59:49,458
like if you've got a blog or something

1976
01:59:46,010 --> 01:59:51,918
and I can see you have posted write-ups

1977
01:59:49,458 --> 01:59:53,328
about stuff that seems like you've done

1978
01:59:51,918 --> 01:59:55,458
investigation to things that you've

1979
01:59:53,328 --> 01:59:57,049
explored things that you know how to

1980
01:59:55,458 --> 01:59:59,238
program that you've made some

1981
01:59:57,050 --> 02:00:02,269
interesting programs that you understand

1982
01:59:59,238 --> 02:00:04,248
how they work right that can be a big

1983
02:00:02,269 --> 02:00:10,789
plus

1984
02:00:04,248 --> 02:00:13,038
I think programming is more like art in

1985
02:00:10,788 --> 02:00:16,668
that way in some cases that other people

1986
02:00:13,038 --> 02:00:20,779
think if I can see a portfolio of a

1987
02:00:16,668 --> 02:00:22,880
programmer I am much more likely to want

1988
02:00:20,779 --> 02:00:24,948
to talk to that programmer and ask them

1989
02:00:22,880 --> 02:00:27,559
questions and see if they're good then

1990
02:00:24,948 --> 02:00:31,069
if I just you know you just say I worked

1991
02:00:27,559 --> 02:00:34,729
here or I went to school here you know I

1992
02:00:31,069 --> 02:00:37,969
want to see some stuff you know and you

1993
02:00:34,729 --> 02:00:39,650
know at the pro level you can see the

1994
02:00:37,969 --> 02:00:43,340
like dream version of this like go look

1995
02:00:39,649 --> 02:00:46,219
at Fabien G's ins blog right let's say

1996
02:00:43,340 --> 02:00:48,469
you didn't know who he was and and his

1997
02:00:46,219 --> 02:00:50,389
resume comes across your desk it's not

1998
02:00:48,469 --> 02:00:51,859
going to because you know there's a line

1999
02:00:50,389 --> 02:00:54,078
a mile long of people who would want to

2000
02:00:51,859 --> 02:00:58,308
hire him if he ever left his current job

2001
02:00:54,078 --> 02:01:00,799
so not relevant but you get a look at

2002
02:00:58,309 --> 02:01:03,260
his blog and it's just entry after entry

2003
02:01:00,800 --> 02:01:05,869
of really detailed tactical analysis of

2004
02:01:03,260 --> 02:01:07,248
things you just know that person is

2005
02:01:05,868 --> 02:01:12,288
gonna be someone you're gonna want to

2006
02:01:07,248 --> 02:01:14,389
interview you know now there could still

2007
02:01:12,288 --> 02:01:15,889
be reasons why maybe a person with a

2008
02:01:14,389 --> 02:01:17,418
blog like that isn't someone you want to

2009
02:01:15,889 --> 02:01:19,550
hire maybe it turns out they don't do

2010
02:01:17,418 --> 02:01:21,618
work very much they just do blog entries

2011
02:01:19,550 --> 02:01:22,939
and stuff so they explore all these

2012
02:01:21,618 --> 02:01:26,509
topics but they don't never get anything

2013
02:01:22,939 --> 02:01:28,969
done right that could be true but you at

2014
02:01:26,510 --> 02:01:31,550
least know that person is worth your

2015
02:01:28,969 --> 02:01:32,929
time to interview so when you see

2016
02:01:31,550 --> 02:01:33,680
someone who's like here's all this stuff

2017
02:01:32,929 --> 02:01:35,090
I've got

2018
02:01:33,680 --> 02:01:37,460
check it out like I care a lot about

2019
02:01:35,090 --> 02:01:39,079
tech I do a lot of work programming I'm

2020
02:01:37,460 --> 02:01:43,310
really interested in learning new things

2021
02:01:39,079 --> 02:01:47,000
and figuring stuff out please talk to me

2022
02:01:43,310 --> 02:01:53,240
if if I can see that you've done stuff

2023
02:01:47,000 --> 02:01:55,640
I'm like ah right like good now I feel

2024
02:01:53,239 --> 02:01:57,979
comfortable saying let's spend an hour

2025
02:01:55,640 --> 02:02:01,970
talking to this person because I don't

2026
02:01:57,979 --> 02:02:04,609
any longer have to guess about whether

2027
02:02:01,970 --> 02:02:11,030
they might be the kind of person who

2028
02:02:04,609 --> 02:02:13,639
could you know who has the intellectual

2029
02:02:11,029 --> 02:02:18,109
curiosity necessary to be a contributing

2030
02:02:13,640 --> 02:02:21,920
member of a tech team so that's what I

2031
02:02:18,109 --> 02:02:23,989
would say first understand whether you

2032
02:02:21,920 --> 02:02:25,640
need to see us degree or not I'm not in

2033
02:02:23,989 --> 02:02:27,979
a position to be able to tell you that

2034
02:02:25,640 --> 02:02:30,770
because I think it's highly context

2035
02:02:27,979 --> 02:02:35,000
dependent you may need one you may not

2036
02:02:30,770 --> 02:02:36,830
and then second figure out why you are

2037
02:02:35,000 --> 02:02:38,960
different from every other person who's

2038
02:02:36,829 --> 02:02:40,519
applying for a programming job if you

2039
02:02:38,960 --> 02:02:44,060
can't answer that question fairly

2040
02:02:40,520 --> 02:02:46,640
definitively then you had better stay

2041
02:02:44,060 --> 02:02:48,200
with your cs2 tree right because if you

2042
02:02:46,640 --> 02:02:50,360
if you are not the point yet where you

2043
02:02:48,199 --> 02:02:53,720
could demonstrate why you are an

2044
02:02:50,359 --> 02:02:55,939
important person interview then you need

2045
02:02:53,720 --> 02:02:58,340
all the help you can get right you are

2046
02:02:55,939 --> 02:03:00,079
not in a position to drop out and try to

2047
02:02:58,340 --> 02:03:02,630
get a programming job if you're just

2048
02:03:00,079 --> 02:03:04,699
gonna look like everybody else so figure

2049
02:03:02,630 --> 02:03:07,539
that out figure out how you're gonna get

2050
02:03:04,699 --> 02:03:10,039
my attention and when I say that I mean

2051
02:03:07,539 --> 02:03:11,510
hrs or hiring managers attention not me

2052
02:03:10,039 --> 02:03:13,789
because I'm not gonna hire you obviously

2053
02:03:11,510 --> 02:03:18,320
but you know whoever it is that you're

2054
02:03:13,789 --> 02:03:19,729
trying to get a job from long boolean a

2055
02:03:18,319 --> 02:03:21,559
bit confused by our answer because I

2056
02:03:19,729 --> 02:03:23,539
have booted from USP on pre UEFI systems

2057
02:03:21,560 --> 02:03:26,080
I'm missing something I believe those

2058
02:03:23,539 --> 02:03:29,119
were exactly the kind as I described so

2059
02:03:26,079 --> 02:03:31,460
pre UEFI I believe the way that it

2060
02:03:29,119 --> 02:03:35,599
worked was the thing that I literally

2061
02:03:31,460 --> 02:03:39,260
said they had a certain USB port that if

2062
02:03:35,600 --> 02:03:43,579
you plugged the USB Drive into that port

2063
02:03:39,260 --> 02:03:46,369
it would make a if it had you know a

2064
02:03:43,579 --> 02:03:47,269
standard fat32 filesystem monitor

2065
02:03:46,369 --> 02:03:50,539
something

2066
02:03:47,270 --> 02:03:53,780
it would allow you to make it look like

2067
02:03:50,539 --> 02:03:56,420
a drive to legacy by us

2068
02:03:53,779 --> 02:03:58,699
and I'm pretty sure that's the only

2069
02:03:56,420 --> 02:04:00,470
reason that stuff worked it would like

2070
02:03:58,699 --> 02:04:04,309
basically make it if they basically

2071
02:04:00,470 --> 02:04:07,520
implemented us a USB Drive protocol for

2072
02:04:04,310 --> 02:04:09,350
a limited set of USB Drive scenarios on

2073
02:04:07,520 --> 02:04:12,890
to a port so if they just looked for

2074
02:04:09,350 --> 02:04:15,280
that when you plugged it in and went so

2075
02:04:12,890 --> 02:04:18,289
they basically what they had done is a

2076
02:04:15,279 --> 02:04:21,319
non-standard Yui

2077
02:04:18,289 --> 02:04:22,850
UEFI style boot right they because

2078
02:04:21,319 --> 02:04:24,710
there's nothing to stop a system

2079
02:04:22,850 --> 02:04:26,390
manufacturer from making their own bias

2080
02:04:24,710 --> 02:04:28,880
that does all this crazy stuff but that

2081
02:04:26,390 --> 02:04:31,490
no one can access so it just makes

2082
02:04:28,880 --> 02:04:34,460
everything kind of look like it used to

2083
02:04:31,489 --> 02:04:36,679
oh you plug in a USB mouse well we wired

2084
02:04:34,460 --> 02:04:39,170
that up to look like a ps2 Mouse right

2085
02:04:36,680 --> 02:04:42,320
they can do all that stuff and BIOSes

2086
02:04:39,170 --> 02:04:44,930
did but it's all non-standard and you

2087
02:04:42,319 --> 02:04:47,809
can't write anything like a Linux boot

2088
02:04:44,930 --> 02:04:49,010
loader that uses it or Windows can't

2089
02:04:47,810 --> 02:04:50,570
take advantage of that to help you

2090
02:04:49,010 --> 02:04:55,340
install the system and blah blah blah

2091
02:04:50,569 --> 02:04:57,139
right so it's it's just about

2092
02:04:55,340 --> 02:04:58,970
standardizing that so people can work

2093
02:04:57,140 --> 02:05:00,710
with it instead of just making entirely

2094
02:04:58,970 --> 02:05:01,970
custom to one bias and it can only do

2095
02:05:00,710 --> 02:05:04,130
the things that they decided to

2096
02:05:01,970 --> 02:05:13,190
implement in the way they decided to

2097
02:05:04,130 --> 02:05:14,510
implement them period right can you give

2098
02:05:13,189 --> 02:05:15,919
an overview how you've structured your

2099
02:05:14,510 --> 02:05:17,180
web programming and see I've heard you

2100
02:05:15,920 --> 02:05:19,190
mention it in some stream on how you

2101
02:05:17,180 --> 02:05:20,810
made certain components behind the

2102
02:05:19,189 --> 02:05:22,609
handmade here website in C or at least

2103
02:05:20,810 --> 02:05:25,820
more sanely program than most web

2104
02:05:22,609 --> 02:05:34,009
frameworks it really interests me could

2105
02:05:25,819 --> 02:05:40,399
you give me some ore info well I mean

2106
02:05:34,010 --> 02:05:42,980
sort of basically we have a a/c system

2107
02:05:40,399 --> 02:05:46,279
that generates all of the website that's

2108
02:05:42,979 --> 02:05:48,139
static so everything that doesn't and

2109
02:05:46,279 --> 02:05:51,380
static is a loose term here obviously

2110
02:05:48,140 --> 02:05:55,280
it's all updatable but static meaning it

2111
02:05:51,380 --> 02:05:58,789
doesn't change like minute to minute it

2112
02:05:55,279 --> 02:06:01,519
changes like day to day right so for

2113
02:05:58,789 --> 02:06:03,710
example the handmade hero's schedule

2114
02:06:01,520 --> 02:06:07,400
make change frequently or wet whether or

2115
02:06:03,710 --> 02:06:11,810
not I'm online streaming might change

2116
02:06:07,399 --> 02:06:13,789
frequently whereas the content of our

2117
02:06:11,810 --> 02:06:17,870
website might only change once a week

2118
02:06:13,789 --> 02:06:21,289
like when we post a blog or something so

2119
02:06:17,869 --> 02:06:24,729
there's a C system that just generates

2120
02:06:21,289 --> 02:06:27,948
all of the everything for the website

2121
02:06:24,729 --> 02:06:30,289
that doesn't change more frequently than

2122
02:06:27,948 --> 02:06:33,559
once a day or every day or two right or

2123
02:06:30,289 --> 02:06:38,238
you know week a month greater than day

2124
02:06:33,560 --> 02:06:41,810
granularity and all that stuff just gets

2125
02:06:38,238 --> 02:06:43,698
uploaded to a CDN just as a giant bulk

2126
02:06:41,810 --> 02:06:47,170
it's just like blah right here's the

2127
02:06:43,698 --> 02:06:50,899
whole site everything is generated so

2128
02:06:47,170 --> 02:06:52,670
that basically takes you know all of the

2129
02:06:50,899 --> 02:06:53,988
pieces and welds them together into

2130
02:06:52,670 --> 02:06:57,079
static pages so they can be served

2131
02:06:53,988 --> 02:06:59,419
quickly you know because obviously you

2132
02:06:57,079 --> 02:07:03,170
know the button bar at the top of 30

2133
02:06:59,420 --> 02:07:04,699
pages is the same but you don't want to

2134
02:07:03,170 --> 02:07:06,199
be pulling that in dynamically because

2135
02:07:04,698 --> 02:07:11,029
that just wastes time and it's a slower

2136
02:07:06,198 --> 02:07:13,069
page experience so that happens all that

2137
02:07:11,029 --> 02:07:15,559
stuff gets pushed the CDN then there's a

2138
02:07:13,069 --> 02:07:18,319
separate server for handling dynamic

2139
02:07:15,560 --> 02:07:21,500
stuff running a C program that basically

2140
02:07:18,319 --> 02:07:24,198
answers queries as just a simple Apache

2141
02:07:21,500 --> 02:07:26,479
cgi-bin I would like it to not be that

2142
02:07:24,198 --> 02:07:28,988
but I just haven't gone the extra mile

2143
02:07:26,479 --> 02:07:32,539
yet and made my own web server I

2144
02:07:28,988 --> 02:07:35,779
probably will someday because Apache is

2145
02:07:32,539 --> 02:07:38,238
a piece of crap and I hate it and the

2146
02:07:35,779 --> 02:07:43,340
configuration is ridiculous the way it

2147
02:07:38,238 --> 02:07:44,509
works and cgi-bin is garbage so I don't

2148
02:07:43,340 --> 02:07:48,020
like that either I don't like anything

2149
02:07:44,510 --> 02:07:50,480
about it I could split the difference in

2150
02:07:48,020 --> 02:07:52,310
make an Apache module but I really don't

2151
02:07:50,479 --> 02:07:53,479
kind of want to go down that route so at

2152
02:07:52,310 --> 02:07:55,870
some point I'll probably make something

2153
02:07:53,479 --> 02:07:59,209
that just sits on the ssl port and

2154
02:07:55,869 --> 02:08:03,198
watches for packets and responds to them

2155
02:07:59,210 --> 02:08:04,789
appropriately but at the moment i'm not

2156
02:08:03,198 --> 02:08:09,379
doing that at the moment I just run

2157
02:08:04,789 --> 02:08:11,210
Apache with a CGI bin what that does is

2158
02:08:09,380 --> 02:08:14,190
it just provides any dynamic stuff

2159
02:08:11,210 --> 02:08:20,060
it's a C program it knows when it gets a

2160
02:08:14,189 --> 02:08:28,379
request those requests are usually sent

2161
02:08:20,060 --> 02:08:31,620
as URL encodes pretty much exclusively

2162
02:08:28,380 --> 02:08:35,279
so the only communication into that is a

2163
02:08:31,619 --> 02:08:37,439
URL basically right it just it hits it

2164
02:08:35,279 --> 02:08:39,840
with URL it decodes the URL and figures

2165
02:08:37,439 --> 02:08:43,529
out the parameters are based on that it

2166
02:08:39,840 --> 02:08:45,180
then sends a JSON file back the reason

2167
02:08:43,529 --> 02:08:47,309
it sends a JSON files that seemed like

2168
02:08:45,180 --> 02:08:50,130
the most compatible thing like the web

2169
02:08:47,310 --> 02:08:53,910
browser just has a JSON parser in it so

2170
02:08:50,130 --> 02:08:56,760
you can don't have to add any additional

2171
02:08:53,909 --> 02:08:59,460
JavaScript code to parse something you

2172
02:08:56,760 --> 02:09:01,440
can just run the jace json parser so

2173
02:08:59,460 --> 02:09:04,439
again keeping it's all about keeping the

2174
02:09:01,439 --> 02:09:06,479
page size small for me so that seemed

2175
02:09:04,439 --> 02:09:09,059
like the simplest way so it sends a tiny

2176
02:09:06,479 --> 02:09:10,409
little json packet back with the

2177
02:09:09,060 --> 02:09:14,820
information that was requested and

2178
02:09:10,409 --> 02:09:16,948
that's it that's the entire web

2179
02:09:14,819 --> 02:09:22,109
architecture and by the way we have the

2180
02:09:16,948 --> 02:09:23,969
fastest page i've ever used like i go to

2181
02:09:22,109 --> 02:09:25,589
our web site on a mobile phone and i'm

2182
02:09:23,969 --> 02:09:28,140
like clicking the thing and it's so fast

2183
02:09:25,590 --> 02:09:30,029
and responsive and i then switch to like

2184
02:09:28,140 --> 02:09:31,289
twitter and it's nuts it takes like

2185
02:09:30,029 --> 02:09:34,439
seven years and i'm looking what is

2186
02:09:31,289 --> 02:09:36,539
going on right so i don't know what web

2187
02:09:34,439 --> 02:09:39,629
devs are ostensibly doing other than

2188
02:09:36,539 --> 02:09:43,560
sucking like it's just like the web

2189
02:09:39,630 --> 02:09:46,859
should be instant I can prove that

2190
02:09:43,560 --> 02:09:48,420
because ours is and I do not know why

2191
02:09:46,859 --> 02:09:51,479
nothing should be slower than our

2192
02:09:48,420 --> 02:09:54,180
website right I have no idea why

2193
02:09:51,479 --> 02:09:56,759
everything's so slow you go and you look

2194
02:09:54,180 --> 02:09:58,650
and it's nuts even the things that if

2195
02:09:56,760 --> 02:10:01,590
the things that we don't make on our

2196
02:09:58,649 --> 02:10:03,859
website are super slow YouTube we have

2197
02:10:01,590 --> 02:10:08,760
some embedded YouTube videos super slow

2198
02:10:03,859 --> 02:10:10,769
send owls purchase button super slow it

2199
02:10:08,760 --> 02:10:12,900
takes longer to push the send a purchase

2200
02:10:10,770 --> 02:10:20,060
button than it does to load our entire

2201
02:10:12,899 --> 02:10:20,059
page like eight times longer right

2202
02:10:26,279 --> 02:10:29,960
it's it's embarrassing

2203
02:10:38,899 --> 02:10:45,479
how about luring some online curses at

2204
02:10:42,838 --> 02:10:47,639
Python or something I have no idea what

2205
02:10:45,479 --> 02:10:48,659
that means you talked about people they

2206
02:10:47,639 --> 02:10:49,918
need to see the supposed to be hard for

2207
02:10:48,658 --> 02:10:51,648
angels did you mean

2208
02:10:49,918 --> 02:10:54,148
oopsie puss fuss with compile times

2209
02:10:51,649 --> 02:10:56,579
linked to lunch breaks do you think you

2210
02:10:54,149 --> 02:11:01,289
would need to bone up on nurses to do so

2211
02:10:56,578 --> 02:11:03,358
try yeah kind of I mean I think that any

2212
02:11:01,288 --> 02:11:05,958
project that takes longer than a few

2213
02:11:03,359 --> 02:11:08,669
seconds to compile is messed up right

2214
02:11:05,958 --> 02:11:11,760
like a ten-second compile is already a

2215
02:11:08,668 --> 02:11:13,559
bit too long and so if you're you know

2216
02:11:11,760 --> 02:11:17,128
if you can't compile your product in ten

2217
02:11:13,559 --> 02:11:19,399
seconds you got a big problem so I think

2218
02:11:17,128 --> 02:11:20,550
these soups evil ESCO bases are

2219
02:11:19,399 --> 02:11:22,679
ridiculous

2220
02:11:20,550 --> 02:11:24,149
right I think they're just wrong I think

2221
02:11:22,679 --> 02:11:30,479
they're just wrongheaded the way they're

2222
02:11:24,149 --> 02:11:33,749
designed but what me thinking they're

2223
02:11:30,479 --> 02:11:34,949
wrongheaded and that there are jobs to

2224
02:11:33,748 --> 02:11:35,398
work on them are two totally different

2225
02:11:34,948 --> 02:11:38,549
things

2226
02:11:35,399 --> 02:11:40,319
there are tons and tons and tons of code

2227
02:11:38,550 --> 02:11:43,378
bases like that out there that are

2228
02:11:40,319 --> 02:11:45,689
accused sprawling oop messes tons of

2229
02:11:43,378 --> 02:11:48,599
templates all over the place they take

2230
02:11:45,689 --> 02:11:51,269
forever to compile it's nuts there are

2231
02:11:48,599 --> 02:11:53,369
many many many jobs working on them so

2232
02:11:51,269 --> 02:11:57,208
if you are looking for a job and you're

2233
02:11:53,368 --> 02:11:58,889
not like some amazing superstar

2234
02:11:57,208 --> 02:12:02,368
programmer that everyone wants to hire

2235
02:11:58,889 --> 02:12:04,949
so you can just you know pick the three

2236
02:12:02,368 --> 02:12:08,969
places that don't have weird code bases

2237
02:12:04,948 --> 02:12:13,678
like that and be you know picky then you

2238
02:12:08,969 --> 02:12:15,719
need to know that stuff right because if

2239
02:12:13,679 --> 02:12:18,088
you don't know that stuff then you know

2240
02:12:15,719 --> 02:12:20,939
you you're not really qualified to work

2241
02:12:18,088 --> 02:12:22,738
there now you may still pass the

2242
02:12:20,939 --> 02:12:25,588
interview right so maybe you can learn

2243
02:12:22,738 --> 02:12:27,898
that stuff on the job right I don't know

2244
02:12:25,588 --> 02:12:30,748
but it's entirely possible that they

2245
02:12:27,899 --> 02:12:34,499
include sort of some at least basic OOP

2246
02:12:30,748 --> 02:12:36,478
C++ template nonsense in their

2247
02:12:34,498 --> 02:12:39,118
interviews or in their programming

2248
02:12:36,479 --> 02:12:40,530
problems they give you those and so I

2249
02:12:39,118 --> 02:12:43,139
don't think you really want to go into a

2250
02:12:40,529 --> 02:12:46,559
job interview not knowing that stuff

2251
02:12:43,139 --> 02:12:48,599
right I mean maybe this wasn't clear but

2252
02:12:46,559 --> 02:12:51,159
I actually know a ton about the original

2253
02:12:48,599 --> 02:12:52,930
C++ programming I mean I

2254
02:12:51,159 --> 02:12:54,880
written templatized math libraries I

2255
02:12:52,930 --> 02:12:56,579
wrote crazy I've done templatized

2256
02:12:54,880 --> 02:12:59,829
callback

2257
02:12:56,579 --> 02:13:05,760
funky doll that back in the day I just

2258
02:12:59,829 --> 02:13:08,260
thought it was bad so I stopped right so

2259
02:13:05,760 --> 02:13:10,000
saying that that's not the way I think

2260
02:13:08,260 --> 02:13:11,560
you should be programming because I feel

2261
02:13:10,000 --> 02:13:13,840
like it leads to bad results is

2262
02:13:11,560 --> 02:13:15,670
different from saying you can just not

2263
02:13:13,840 --> 02:13:17,560
learn it because unless you always

2264
02:13:15,670 --> 02:13:19,270
program it by yourself or you happen to

2265
02:13:17,560 --> 02:13:21,340
be lucky enough to be hired by a team

2266
02:13:19,270 --> 02:13:24,880
who's sensible which there aren't that

2267
02:13:21,340 --> 02:13:28,989
many of it's gonna it's gonna be

2268
02:13:24,880 --> 02:13:31,569
relevant you know it's gonna be relevant

2269
02:13:28,989 --> 02:13:33,130
and you have to be aware of that that's

2270
02:13:31,569 --> 02:13:35,289
why it's a job that's why you get paid

2271
02:13:33,130 --> 02:13:38,050
to do it right if it was always your way

2272
02:13:35,289 --> 02:13:42,210
all the time that's not a job anymore

2273
02:13:38,050 --> 02:13:46,960
right that's that's just recreational so

2274
02:13:42,210 --> 02:13:49,390
you know one of the ways that you earn

2275
02:13:46,960 --> 02:13:53,289
your money is by programming some stuff

2276
02:13:49,390 --> 02:14:02,320
you don't want to do right and you just

2277
02:13:53,289 --> 02:14:04,029
have to think of that is that way how

2278
02:14:02,319 --> 02:14:05,769
can you create an interesting portfolio

2279
02:14:04,029 --> 02:14:07,389
for back-end developers I can't make

2280
02:14:05,770 --> 02:14:12,840
fancy sites because I know nothing about

2281
02:14:07,390 --> 02:14:15,010
design well let's let's take a look

2282
02:14:12,840 --> 02:14:17,380
suppose on my back-end developer because

2283
02:14:15,010 --> 02:14:20,440
hey I was I did the backend for Molly

2284
02:14:17,380 --> 02:14:23,470
rocket comm right here's one of our

2285
02:14:20,439 --> 02:14:24,939
sites so suppose you don't know how to

2286
02:14:23,470 --> 02:14:26,260
make any of this stuff and you're like I

2287
02:14:24,939 --> 02:14:29,319
don't know I want to show my back-end

2288
02:14:26,260 --> 02:14:32,590
development skills whatever well here's

2289
02:14:29,319 --> 02:14:35,109
the people we tried to use for our

2290
02:14:32,590 --> 02:14:36,819
mailing list originally don't ever use

2291
02:14:35,109 --> 02:14:38,679
them for mailing lists they literally

2292
02:14:36,819 --> 02:14:41,019
are completely incompetent in all

2293
02:14:38,680 --> 02:14:43,150
possible ways I don't even want to go

2294
02:14:41,020 --> 02:14:46,990
into how many things are broken about

2295
02:14:43,149 --> 02:14:49,869
their service it's nuts it's really

2296
02:14:46,989 --> 02:14:51,369
really really bad and you won't know

2297
02:14:49,869 --> 02:14:53,800
that it's broken until you start

2298
02:14:51,369 --> 02:14:55,269
actually auditing it and figure out that

2299
02:14:53,800 --> 02:14:56,829
half of the people who try to sign up

2300
02:14:55,270 --> 02:14:59,770
for your mailing list don't actually get

2301
02:14:56,829 --> 02:15:02,079
signed up it's it's really bad there

2302
02:14:59,770 --> 02:15:03,700
they are really really bad all right so

2303
02:15:02,079 --> 02:15:05,050
let's take a look and see if they have a

2304
02:15:03,699 --> 02:15:12,970
demonstration

2305
02:15:05,050 --> 02:15:15,460
on here I just want to see if they've

2306
02:15:12,970 --> 02:15:23,460
got something where I can do like male

2307
02:15:15,460 --> 02:15:23,460
jet demo site like can we try one

2308
02:15:25,770 --> 02:15:31,330
unfortunately I'm I'm guessing that I

2309
02:15:27,789 --> 02:15:33,279
can't come on folks

2310
02:15:31,329 --> 02:15:35,489
you must have a demo site somewhere

2311
02:15:33,279 --> 02:15:35,489
right

2312
02:15:51,179 --> 02:15:57,359
I need to find a place where I can need

2313
02:15:56,219 --> 02:15:58,829
to find a place where I could sign up

2314
02:15:57,359 --> 02:16:00,619
for this for like a mailing list right

2315
02:15:58,829 --> 02:16:02,908
don't you have a mailing list somewhere

2316
02:16:00,619 --> 02:16:05,369
actually don't they have a mailing list

2317
02:16:02,908 --> 02:16:09,029
shouldn't a mailing list company have a

2318
02:16:05,369 --> 02:16:14,130
mailing list I can sign up for here it

2319
02:16:09,029 --> 02:16:16,559
is all right so let's suppose I want to

2320
02:16:14,130 --> 02:16:18,390
sign up for this mailing list right like

2321
02:16:16,560 --> 02:16:28,880
hey I want to sell it for the mint for

2322
02:16:18,390 --> 02:16:32,969
the mail jet newsletter right one two

2323
02:16:28,880 --> 02:16:36,360
done right so now we know like how long

2324
02:16:32,968 --> 02:16:40,250
that thing takes to two to go I suppose

2325
02:16:36,360 --> 02:16:40,250
I should have did that poorly

2326
02:16:52,099 --> 02:16:57,040
I'm trying to think if there's some way

2327
02:16:53,658 --> 02:16:57,039
I can make this trigger automatically

2328
02:17:01,058 --> 02:17:17,750
all right here we go so let's see where

2329
02:17:05,388 --> 02:17:19,698
we actually hit this button right trying

2330
02:17:17,750 --> 02:17:26,179
to see if there's a good click somewhere

2331
02:17:19,699 --> 02:17:30,949
here right there I think here it is user

2332
02:17:26,179 --> 02:17:34,579
verify right all right so we started

2333
02:17:30,949 --> 02:17:36,729
clicking somewhere in here see if I can

2334
02:17:34,579 --> 02:17:40,510
get a better

2335
02:17:36,728 --> 02:17:40,510
that's the reCAPTCHA

2336
02:17:51,988 --> 02:18:03,948
so it's something my count was about

2337
02:17:54,629 --> 02:18:07,289
right seems like maybe hard to say

2338
02:18:03,949 --> 02:18:09,510
transform time I need to get a good I

2339
02:18:07,290 --> 02:18:19,800
want to have a good way of measuring how

2340
02:18:09,510 --> 02:18:23,309
the performance is of this thing to

2341
02:18:19,799 --> 02:18:24,388
control II assume control eat stops it

2342
02:18:23,308 --> 02:18:31,488
to let's see

2343
02:18:24,388 --> 02:18:31,488
ready it doesn't

2344
02:18:37,280 --> 02:18:45,340
I really really want to get a good

2345
02:18:41,600 --> 02:18:45,340
performance thing of this here right

2346
02:18:47,860 --> 02:18:57,380
there should be a way that says profile

2347
02:18:50,209 --> 02:19:02,089
on click you know I'm Santa like I'm

2348
02:18:57,379 --> 02:19:03,949
gonna click please record this control

2349
02:19:02,090 --> 02:19:05,479
he just jumps up there so you have to

2350
02:19:03,950 --> 02:19:12,770
have the it looks like you have to have

2351
02:19:05,479 --> 02:19:14,719
the focus in here which is not great so

2352
02:19:12,770 --> 02:19:17,720
that's mostly it like we've mostly got

2353
02:19:14,719 --> 02:19:19,039
it here right now so you can see here

2354
02:19:17,719 --> 02:19:21,679
that's about the two seconds that I

2355
02:19:19,040 --> 02:19:25,000
thought right and you can see like

2356
02:19:21,680 --> 02:19:25,000
everything that's going on there right

2357
02:19:25,329 --> 02:19:29,959
I'm not sure why how long it takes for

2358
02:19:27,889 --> 02:19:31,369
the recapture to work there is there any

2359
02:19:29,959 --> 02:19:41,750
kind of event thing that I can look

2360
02:19:31,370 --> 02:19:43,520
interactions there we go mouse down so

2361
02:19:41,750 --> 02:19:45,049
you can see here it's it's roughly the

2362
02:19:43,520 --> 02:19:46,489
two seconds that I thought that's

2363
02:19:45,049 --> 02:19:48,890
perfect that's what I wanted there's the

2364
02:19:46,489 --> 02:19:53,030
mouse down right and then we know that

2365
02:19:48,890 --> 02:19:55,310
we get it right about there right so

2366
02:19:53,030 --> 02:19:58,851
that's where we actually start so we can

2367
02:19:55,310 --> 02:20:01,569
drag back to the mouse down which i

2368
02:19:58,851 --> 02:20:01,569
think was right here

2369
02:20:04,408 --> 02:20:14,969
and this is the performance for there

2370
02:20:08,329 --> 02:20:16,170
for you know for their website stuff now

2371
02:20:14,969 --> 02:20:17,579
what's interesting about this is you

2372
02:20:16,170 --> 02:20:19,889
notice it doesn't really work so that's

2373
02:20:17,579 --> 02:20:21,930
the first thing I can show you like so

2374
02:20:19,889 --> 02:20:24,510
now now that I've said that so there's

2375
02:20:21,930 --> 02:20:27,389
an example of a mailing list site and

2376
02:20:24,510 --> 02:20:31,228
you could go to MailChimp as well or

2377
02:20:27,389 --> 02:20:33,118
some other sites into it so there's an

2378
02:20:31,228 --> 02:20:35,789
example of a mailing with service you'll

2379
02:20:33,119 --> 02:20:39,000
notice it didn't even tell me that I was

2380
02:20:35,790 --> 02:20:42,330
already subscribed right so it didn't

2381
02:20:39,000 --> 02:20:46,590
tell me any information or anything when

2382
02:20:42,329 --> 02:20:48,090
I put my my email address in there so it

2383
02:20:46,590 --> 02:20:50,898
really was just two seconds and then

2384
02:20:48,090 --> 02:20:53,279
nothing happened like I don't even get

2385
02:20:50,898 --> 02:20:54,689
confirmation other than just that I

2386
02:20:53,279 --> 02:20:57,689
subscribed but that's not true because

2387
02:20:54,689 --> 02:21:01,619
obviously the second time I didn't also

2388
02:20:57,689 --> 02:21:03,658
subscribe right so it's a bit weird but

2389
02:21:01,619 --> 02:21:06,329
anyway so it's not great it took two

2390
02:21:03,658 --> 02:21:07,949
seconds so then you know let's go over

2391
02:21:06,329 --> 02:21:10,139
here two hours or whatever and let's

2392
02:21:07,949 --> 02:21:13,199
just see how we compare right what do we

2393
02:21:10,139 --> 02:21:16,978
do a good enough job to replace whatever

2394
02:21:13,199 --> 02:21:21,770
the other thing was so here's Casey moly

2395
02:21:16,978 --> 02:21:24,118
rocket comm record subscribe there we go

2396
02:21:21,770 --> 02:21:33,449
so let's see how our performance was

2397
02:21:24,119 --> 02:21:36,810
right where's our mouse down those are

2398
02:21:33,449 --> 02:21:39,899
all Mouse moves there's the mouse down

2399
02:21:36,809 --> 02:21:44,398
right here alright

2400
02:21:39,898 --> 02:21:46,789
now let's take a look at where it was

2401
02:21:44,398 --> 02:21:46,789
right there

2402
02:21:49,260 --> 02:21:52,439
right there

2403
02:21:56,540 --> 02:22:00,780
looks like the mousedown was right about

2404
02:21:59,370 --> 02:22:04,380
there you can see this that's right

2405
02:22:00,780 --> 02:22:10,790
button laid up

2406
02:22:04,379 --> 02:22:10,789
maybe Mouse down

2407
02:22:14,180 --> 02:22:22,250
looks like it's right there right so

2408
02:22:19,610 --> 02:22:24,829
here's our actual time slider you can

2409
02:22:22,250 --> 02:22:29,959
see it's maybe about 300 milliseconds I

2410
02:22:24,829 --> 02:22:33,139
think a little hard to say uh so we are

2411
02:22:29,959 --> 02:22:35,239
we're not quite ten times faster but

2412
02:22:33,139 --> 02:22:37,340
we're over five times faster then their

2413
02:22:35,239 --> 02:22:39,319
website is and we actually know what

2414
02:22:37,340 --> 02:22:43,250
happened right

2415
02:22:39,319 --> 02:22:51,829
so we also tell you there's a back-end

2416
02:22:43,250 --> 02:22:54,379
demo right record that show people put

2417
02:22:51,829 --> 02:22:57,260
this on a blog here we timed how long it

2418
02:22:54,379 --> 02:22:59,600
takes for the user response common sites

2419
02:22:57,260 --> 02:23:02,060
take two three four seconds maybe more

2420
02:22:59,601 --> 02:23:04,700
we take 200 milliseconds because our

2421
02:23:02,060 --> 02:23:09,260
back-end is awesome and we don't run 50

2422
02:23:04,700 --> 02:23:10,851
million lines of PHP code right plus we

2423
02:23:09,260 --> 02:23:12,739
tell you our back-end knows what's

2424
02:23:10,851 --> 02:23:20,060
happening theirs doesn't right I don't

2425
02:23:12,739 --> 02:23:25,579
know so I think you can make arguments

2426
02:23:20,060 --> 02:23:27,969
that again and just to be clear you

2427
02:23:25,579 --> 02:23:30,289
don't even have to necessarily be better

2428
02:23:27,969 --> 02:23:31,789
like the fact that we're way faster them

2429
02:23:30,290 --> 02:23:33,530
I think is cool because I like being

2430
02:23:31,790 --> 02:23:37,910
better than people who aren't good at

2431
02:23:33,530 --> 02:23:39,590
things but the point is just that you

2432
02:23:37,909 --> 02:23:42,530
look into it like you've demonstrated

2433
02:23:39,590 --> 02:23:44,000
that you can analyze the performance of

2434
02:23:42,530 --> 02:23:47,210
something you know how long something

2435
02:23:44,000 --> 02:23:50,810
could take you have some ideas about why

2436
02:23:47,209 --> 02:23:55,069
it you know why something did or didn't

2437
02:23:50,810 --> 02:23:59,299
work right you know how to investigate

2438
02:23:55,069 --> 02:24:01,069
problems whatever right like showing

2439
02:23:59,299 --> 02:24:02,869
that you know how to dig into the

2440
02:24:01,069 --> 02:24:04,219
technical details of something that you

2441
02:24:02,870 --> 02:24:06,890
understand the difference between your

2442
02:24:04,219 --> 02:24:09,979
product and competitors products you

2443
02:24:06,889 --> 02:24:11,779
know how to take assessments of

2444
02:24:09,979 --> 02:24:13,819
different aspects of the package to see

2445
02:24:11,780 --> 02:24:15,590
whether they're working these things are

2446
02:24:13,819 --> 02:24:18,170
things you can show you know how to do

2447
02:24:15,590 --> 02:24:19,159
you don't need a flashy website I mean

2448
02:24:18,170 --> 02:24:21,379
I'm not really a front-end developer

2449
02:24:19,159 --> 02:24:25,489
either right you know you can make flash

2450
02:24:21,379 --> 02:24:27,978
your websites than this to be sure right

2451
02:24:25,489 --> 02:24:30,439
but the

2452
02:24:27,978 --> 02:24:32,659
the point is just for the thing that

2453
02:24:30,439 --> 02:24:35,510
you're working on show you know how to

2454
02:24:32,659 --> 02:24:38,180
investigate it improve it understand

2455
02:24:35,510 --> 02:24:39,889
what's involved show how to analyze

2456
02:24:38,180 --> 02:24:42,380
other people's and yours and why are

2457
02:24:39,889 --> 02:24:44,329
yours better or different right or even

2458
02:24:42,379 --> 02:24:46,728
just this the same but you knew to look

2459
02:24:44,329 --> 02:24:50,510
at those features look we are comparable

2460
02:24:46,728 --> 02:24:52,539
to male Jets blah right does that make

2461
02:24:50,510 --> 02:24:52,540
sense

2462
02:25:01,629 --> 02:25:08,170
have you read out of tar pit no I have

2463
02:25:06,260 --> 02:25:10,279
not

2464
02:25:08,170 --> 02:25:14,689
have you checked out cor dot IO

2465
02:25:10,279 --> 02:25:23,149
webserver written in C I have not Apache

2466
02:25:14,689 --> 02:25:27,590
is also written in C is it not I use I

2467
02:25:23,148 --> 02:25:29,809
do use a C I use a a C based web server

2468
02:25:27,590 --> 02:25:44,809
internally for testing

2469
02:25:29,809 --> 02:25:47,148
it's called Mongoose lid micro HTTP D is

2470
02:25:44,809 --> 02:25:49,158
pretty good if far as I can tell okay

2471
02:25:47,148 --> 02:25:50,209
I ought to check it out do you have any

2472
02:25:49,158 --> 02:25:51,770
advice for putting are having trouble to

2473
02:25:50,209 --> 02:25:54,198
adjust to it OOP way of thinking on the

2474
02:25:51,770 --> 02:25:57,350
job and how to cope with or handle

2475
02:25:54,199 --> 02:25:58,880
patterns not really just I mean just

2476
02:25:57,350 --> 02:26:02,988
understand what they are they're

2477
02:25:58,879 --> 02:26:11,629
people's ways of applying boilerplate

2478
02:26:02,988 --> 02:26:13,129
code to a problem right so you just have

2479
02:26:11,629 --> 02:26:14,629
to understand you know it's the same as

2480
02:26:13,129 --> 02:26:15,889
speaking a foreign language right you

2481
02:26:14,629 --> 02:26:18,799
know if you go to France you have to

2482
02:26:15,889 --> 02:26:20,689
speak in French when you're in a new

2483
02:26:18,799 --> 02:26:23,238
code base you have to understand their

2484
02:26:20,689 --> 02:26:24,979
way of speaking you don't have to think

2485
02:26:23,238 --> 02:26:29,148
it's a good language but you do have to

2486
02:26:24,978 --> 02:26:30,260
understand how to speak it what kind of

2487
02:26:29,148 --> 02:26:31,639
products would be interesting for

2488
02:26:30,260 --> 02:26:33,439
recruiters to look at for example at the

2489
02:26:31,639 --> 02:26:35,269
moment I work on 3d rasterizer and x86

2490
02:26:33,439 --> 02:26:40,550
assembly using mode 13 with a DOS

2491
02:26:35,270 --> 02:26:42,109
emulator yeah again the project is

2492
02:26:40,549 --> 02:26:44,358
probably not the interesting thing

2493
02:26:42,109 --> 02:26:45,979
because unless you're so good that

2494
02:26:44,359 --> 02:26:47,568
you're gonna make something that like no

2495
02:26:45,978 --> 02:26:50,179
one else has ever made before in which

2496
02:26:47,568 --> 02:26:54,379
case you know obviously you're gonna get

2497
02:26:50,180 --> 02:26:57,170
a job it's not the project type that's

2498
02:26:54,379 --> 02:27:00,019
important it's the what you show about

2499
02:26:57,170 --> 02:27:01,850
what you knew and did right put up some

2500
02:27:00,020 --> 02:27:04,189
blog posts about you analyze it if

2501
02:27:01,850 --> 02:27:07,939
you're doing an x86 assembly mode 13

2502
02:27:04,189 --> 02:27:09,889
rasterizer show talk about the assembly

2503
02:27:07,939 --> 02:27:11,800
why did you make certain choices show

2504
02:27:09,889 --> 02:27:14,090
that you time different ways of doing it

2505
02:27:11,799 --> 02:27:14,659
what turned out to be fast what turned

2506
02:27:14,090 --> 02:27:17,090
out to be slow

2507
02:27:14,659 --> 02:27:18,890
under DOSBox you know do do something

2508
02:27:17,090 --> 02:27:21,079
that lets me know that you didn't just

2509
02:27:18,890 --> 02:27:25,699
copy it out of Michael Abrash his book

2510
02:27:21,079 --> 02:27:26,930
right but that's that's all you know you

2511
02:27:25,700 --> 02:27:29,720
just need to show that you were

2512
02:27:26,930 --> 02:27:32,390
intellectually curious you investigate

2513
02:27:29,719 --> 02:27:34,010
things you understand you don't just

2514
02:27:32,390 --> 02:27:36,590
cotton copy copy and paste you're not

2515
02:27:34,010 --> 02:27:38,960
just searching Stack Exchange right just

2516
02:27:36,590 --> 02:27:41,030
give me the what I need to understand

2517
02:27:38,959 --> 02:27:42,739
that you know what you are doing when

2518
02:27:41,030 --> 02:27:44,271
you come to a problem and you spend time

2519
02:27:42,739 --> 02:27:45,799
on it you come away with an

2520
02:27:44,271 --> 02:27:47,870
understanding of how it works and if you

2521
02:27:45,799 --> 02:27:50,119
approach it logically and intelligently

2522
02:27:47,870 --> 02:27:53,300
that's just really all you need to show

2523
02:27:50,120 --> 02:27:56,740
because most programmers don't anymore

2524
02:27:53,299 --> 02:27:56,739
not anymore you know

2525
02:28:18,770 --> 02:28:23,369
Upland cooter that's not technically a

2526
02:28:20,908 --> 02:28:25,529
data breach because it does not tell you

2527
02:28:23,369 --> 02:28:28,770
anything about whether that person

2528
02:28:25,529 --> 02:28:33,060
actually subscribed right they can't

2529
02:28:28,770 --> 02:28:38,369
necessarily tell you if the person

2530
02:28:33,059 --> 02:28:44,639
confirmed the thing right so I suppose

2531
02:28:38,369 --> 02:28:45,989
that's true right but it's not a data

2532
02:28:44,639 --> 02:28:47,670
breach because all it says is whether a

2533
02:28:45,988 --> 02:28:51,078
particular email address is on or off

2534
02:28:47,670 --> 02:28:55,818
the list which you can add one yourself

2535
02:28:51,078 --> 02:28:55,818
so you have no idea who added it right

2536
02:28:56,359 --> 02:29:02,460
but I agree that since mail jet does a

2537
02:29:00,449 --> 02:29:07,248
thing where you're not considered on the

2538
02:29:02,459 --> 02:29:07,248
list until you confirm the address

2539
02:29:14,299 --> 02:29:17,389
I suppose that is a data breach because

2540
02:29:16,129 --> 02:29:24,769
basically you're telling them whether

2541
02:29:17,389 --> 02:29:26,898
they confirmed or not sort of I mean I

2542
02:29:24,770 --> 02:29:29,260
don't know how what to think about that

2543
02:29:26,898 --> 02:29:29,260
right

2544
02:29:35,340 --> 02:29:39,699
I'm pretty sure we are GDP are compliant

2545
02:29:37,959 --> 02:29:44,169
I read it very carefully and it says as

2546
02:29:39,699 --> 02:29:48,010
long as the person has shown interest

2547
02:29:44,170 --> 02:29:49,600
then you can mail them and if you mail

2548
02:29:48,010 --> 02:29:54,609
them they have to be able to instantly

2549
02:29:49,600 --> 02:29:56,408
unsubscribe which they can right you do

2550
02:29:54,609 --> 02:29:57,460
not need to add an unchecked by default

2551
02:29:56,408 --> 02:29:59,949
checkbox

2552
02:29:57,459 --> 02:30:04,719
I challenge you to show me the place in

2553
02:29:59,949 --> 02:30:10,510
the gdpr where it said that I found no

2554
02:30:04,719 --> 02:30:12,789
such such thing and there's all you also

2555
02:30:10,510 --> 02:30:18,760
I did not find anything that said double

2556
02:30:12,790 --> 02:30:25,119
verification emails right because you're

2557
02:30:18,760 --> 02:30:27,040
gonna get one email either way so the

2558
02:30:25,119 --> 02:30:32,229
actual number of emails you send is not

2559
02:30:27,040 --> 02:30:34,090
different I do agree that maybe we

2560
02:30:32,228 --> 02:30:40,358
should not tell you if the person has

2561
02:30:34,090 --> 02:30:42,068
unsubscribed because unsubscribe

2562
02:30:40,359 --> 02:30:45,340
is an action that the person takes that

2563
02:30:42,068 --> 02:30:48,129
is verifiable to them like if you

2564
02:30:45,340 --> 02:30:50,199
unsubscribe you had to have received an

2565
02:30:48,129 --> 02:30:52,209
email at the address that has been

2566
02:30:50,199 --> 02:30:59,350
entered so that is tactically

2567
02:30:52,209 --> 02:31:02,318
information probably so we should

2568
02:30:59,350 --> 02:31:04,090
probably only say whether the email

2569
02:31:02,318 --> 02:31:07,719
address has ever been entered into the

2570
02:31:04,090 --> 02:31:11,199
form so for example if you unsubscribe I

2571
02:31:07,719 --> 02:31:12,158
don't know I don't know if there's a I

2572
02:31:11,199 --> 02:31:16,569
can't think of an address that's

2573
02:31:12,158 --> 02:31:20,228
unsubscribed at the moment but if you

2574
02:31:16,568 --> 02:31:25,198
unsubscribe from the mailing list we

2575
02:31:20,228 --> 02:31:25,198
probably shouldn't tell anyone else that

2576
02:31:26,488 --> 02:31:32,648
of course then I'm not sure how that

2577
02:31:28,828 --> 02:31:35,978
person here's a gdpr puzzle for you

2578
02:31:32,648 --> 02:31:37,930
how would that person ever get back on

2579
02:31:35,978 --> 02:31:39,188
the mailing list because once they tell

2580
02:31:37,930 --> 02:31:39,699
you that they don't want your email

2581
02:31:39,189 --> 02:31:41,828
anymore

2582
02:31:39,699 --> 02:31:43,960
you can't email them so if you don't

2583
02:31:41,828 --> 02:31:45,818
tell them on the website how would they

2584
02:31:43,959 --> 02:31:47,849
ever actually get back on the mailing

2585
02:31:45,818 --> 02:31:47,850
list

2586
02:31:48,389 --> 02:31:54,988
that's a little puzzle that's a little

2587
02:31:51,879 --> 02:31:54,989
puzzle European Union

2588
02:32:05,021 --> 02:32:09,890
what's the answer to that question I'm

2589
02:32:07,100 --> 02:32:16,940
really interested to know now does

2590
02:32:09,889 --> 02:32:20,539
anyone know because like what we do is

2591
02:32:16,940 --> 02:32:22,010
if you enter the email address it would

2592
02:32:20,540 --> 02:32:27,170
tell you that's unsubscribe so you have

2593
02:32:22,010 --> 02:32:29,030
to email us to say right but technically

2594
02:32:27,170 --> 02:32:31,010
now I think about we shouldn't do that

2595
02:32:29,030 --> 02:32:32,450
we should turn that off because it is

2596
02:32:31,010 --> 02:32:36,620
telling you whether somebody

2597
02:32:32,450 --> 02:32:38,329
unsubscribed if somebody unsubscribed we

2598
02:32:36,620 --> 02:32:39,980
can't mail them so if they put their

2599
02:32:38,329 --> 02:32:44,649
address in here to try to re-subscribe

2600
02:32:39,979 --> 02:32:44,649
we can tree subscribe them can we

2601
02:32:45,370 --> 02:32:52,700
because they told us never to email them

2602
02:32:49,209 --> 02:32:54,409
it just seems like you know yeah because

2603
02:32:52,700 --> 02:32:56,030
and that would be bad too because then

2604
02:32:54,409 --> 02:32:56,840
other people could just spam their email

2605
02:32:56,030 --> 02:32:58,130
address in there and they said they

2606
02:32:56,840 --> 02:32:59,210
didn't want to hear from us right so I

2607
02:32:58,129 --> 02:32:59,709
wouldn't really be comfortable doing

2608
02:32:59,209 --> 02:33:03,099
that

2609
02:32:59,709 --> 02:33:03,099
see what it says

2610
02:33:23,639 --> 02:33:27,059
let's see

2611
02:33:27,270 --> 02:33:30,700
[Music]

2612
02:33:41,409 --> 02:33:47,469
this link doesn't really say my guess is

2613
02:33:45,879 --> 02:33:50,459
like many things in the GDP are it's

2614
02:33:47,469 --> 02:33:50,459
under specified

2615
02:34:15,011 --> 02:34:19,121
I don't know maybe we should write a

2616
02:34:17,319 --> 02:34:26,581
blog post about it and then send it to

2617
02:34:19,120 --> 02:34:28,600
the EU be like hey what do you do here

2618
02:34:26,581 --> 02:34:33,540
right

2619
02:34:28,601 --> 02:34:40,001
if you unsubscribe from a mailing list

2620
02:34:33,540 --> 02:34:43,109
so you have a mailing list and you don't

2621
02:34:40,001 --> 02:34:47,319
want it to send any unnecessary emails

2622
02:34:43,110 --> 02:34:49,480
so you type in an email address you hit

2623
02:34:47,319 --> 02:34:52,001
subscribe the only thing the person will

2624
02:34:49,479 --> 02:34:58,120
receive is a mailing this email with an

2625
02:34:52,001 --> 02:34:59,771
unsubscribe button on it right you don't

2626
02:34:58,120 --> 02:35:02,890
want to say whether that person has ever

2627
02:34:59,771 --> 02:35:06,671
accepted any emails from you right

2628
02:35:02,890 --> 02:35:10,899
because that would leak data as pointed

2629
02:35:06,671 --> 02:35:12,130
out before so you just say whether an

2630
02:35:10,899 --> 02:35:13,630
email address has ever been entered into

2631
02:35:12,130 --> 02:35:15,520
the form because that's meaningless

2632
02:35:13,630 --> 02:35:16,779
anyone can enter anyone's email address

2633
02:35:15,521 --> 02:35:21,240
into the form you're not telling anyone

2634
02:35:16,780 --> 02:35:24,940
anything right but someone unsubscribes

2635
02:35:21,240 --> 02:35:27,069
from an email now you know that that

2636
02:35:24,940 --> 02:35:29,740
person actually unsubscribe because that

2637
02:35:27,069 --> 02:35:31,630
like we the unsubscribe link has a

2638
02:35:29,740 --> 02:35:38,440
unique cookie on it so that no one can

2639
02:35:31,630 --> 02:35:40,569
unsubscribe you other than you right if

2640
02:35:38,440 --> 02:35:43,899
someone hits that unsubscribe button we

2641
02:35:40,569 --> 02:35:46,421
can't send the emails anymore but we

2642
02:35:43,899 --> 02:35:48,190
also can't tell them that on the website

2643
02:35:46,421 --> 02:35:49,961
potentially because then someone else

2644
02:35:48,190 --> 02:35:52,331
could enter their email address and find

2645
02:35:49,960 --> 02:35:54,189
out that they are unsubscribed which I

2646
02:35:52,331 --> 02:35:57,011
don't know maybe that's not a gdpr

2647
02:35:54,190 --> 02:36:03,341
violation but it certainly is at least a

2648
02:35:57,011 --> 02:36:10,121
slight data leakage so what would the

2649
02:36:03,341 --> 02:36:13,211
gdpr prefer you do right and I don't

2650
02:36:10,120 --> 02:36:14,740
know I mean this is one of the problems

2651
02:36:13,210 --> 02:36:16,420
with government regulations they

2652
02:36:14,740 --> 02:36:17,860
oftentimes aren't actually practically

2653
02:36:16,421 --> 02:36:19,899
useful because the people who wrote them

2654
02:36:17,860 --> 02:36:22,751
don't really know very much about what

2655
02:36:19,899 --> 02:36:23,591
they're regulating a lot of the time and

2656
02:36:22,751 --> 02:36:25,060
they haven't thought it all the way

2657
02:36:23,591 --> 02:36:26,470
through so I don't know they probably

2658
02:36:25,060 --> 02:36:27,550
don't know but maybe they do know and if

2659
02:36:26,470 --> 02:36:28,838
they do know they could tell us and then

2660
02:36:27,550 --> 02:36:31,418
we could comply with it

2661
02:36:28,838 --> 02:36:32,949
whatever the opinion actually is maybe

2662
02:36:31,418 --> 02:36:35,408
the answer is it should be exact like it

2663
02:36:32,949 --> 02:36:36,970
is now because hey knowing that someone

2664
02:36:35,408 --> 02:36:40,708
else unsubscribed from an email address

2665
02:36:36,969 --> 02:36:40,708
really doesn't tell you anything right

2666
02:36:56,610 --> 02:37:06,210
if you have not previously unsubscribed

2667
02:37:00,920 --> 02:37:08,960
wait what that wasn't on the link was

2668
02:37:06,209 --> 02:37:12,949
right see that on the link you see here

2669
02:37:08,959 --> 02:37:12,949
oops wrong keyboard

2670
02:37:17,420 --> 02:37:22,340
yeah that's not in there anywhere

2671
02:37:44,389 --> 02:37:49,139
if he unsubscribes he has to accept the

2672
02:37:47,158 --> 02:37:51,000
terms again a checkbox when he enters

2673
02:37:49,139 --> 02:37:57,420
the email address and wants to subscribe

2674
02:37:51,000 --> 02:37:59,398
again yeah but okay so here's my opinion

2675
02:37:57,420 --> 02:38:00,988
on that like I disagree with that now

2676
02:37:59,398 --> 02:38:05,250
maybe the gdpr is just poorly

2677
02:38:00,988 --> 02:38:06,779
constructed but I think that's a really

2678
02:38:05,250 --> 02:38:10,609
bad policy if that's true

2679
02:38:06,779 --> 02:38:15,630
because anybody can fill out a form and

2680
02:38:10,609 --> 02:38:19,790
check that box right so if you don't

2681
02:38:15,629 --> 02:38:22,379
have a one-click permanent unsubscribe a

2682
02:38:19,790 --> 02:38:24,569
griefer can just sit there Ries absque

2683
02:38:22,379 --> 02:38:29,809
reiben you all day long and you'll just

2684
02:38:24,568 --> 02:38:29,809
keep getting confirmation emails right a

2685
02:38:29,869 --> 02:38:33,720
confirmation email is still an email

2686
02:38:32,010 --> 02:38:35,670
right that this is one of the thing I

2687
02:38:33,719 --> 02:38:37,408
think a lot of like regulations don't

2688
02:38:35,670 --> 02:38:39,449
understand a confirmation you must still

2689
02:38:37,408 --> 02:38:42,779
an email is an emailing didn't want

2690
02:38:39,449 --> 02:38:45,449
right so I feel like once somebody

2691
02:38:42,779 --> 02:38:46,920
subscribes to something or is subscribe

2692
02:38:45,449 --> 02:38:50,939
to something whether they did it or not

2693
02:38:46,920 --> 02:38:52,889
a pushing up there should be a button

2694
02:38:50,939 --> 02:38:54,988
you can push that blocks you from ever

2695
02:38:52,889 --> 02:39:04,500
getting email from that people again

2696
02:38:54,988 --> 02:39:06,238
right that are found that is what we

2697
02:39:04,500 --> 02:39:08,010
have but if someone's trying to

2698
02:39:06,238 --> 02:39:09,359
subscribe and they are not getting it

2699
02:39:08,010 --> 02:39:11,609
they may have forgotten that they on

2700
02:39:09,359 --> 02:39:13,350
subscribed or something and so I wanted

2701
02:39:11,609 --> 02:39:20,090
them to have some way of it telling you

2702
02:39:13,350 --> 02:39:20,090
here email us you know

2703
02:39:26,120 --> 02:39:31,670
you know what here's what we could do

2704
02:39:27,860 --> 02:39:34,190
maybe this is the best solution may be

2705
02:39:31,670 --> 02:39:39,200
the right solution is just to make the

2706
02:39:34,190 --> 02:39:42,649
email make the response to any email

2707
02:39:39,200 --> 02:39:46,220
address that has already been put on the

2708
02:39:42,649 --> 02:39:48,049
list or unsubscribed the same because

2709
02:39:46,219 --> 02:39:49,939
then you're not leaking any data then

2710
02:39:48,049 --> 02:39:52,699
all you're saying is at some point in

2711
02:39:49,940 --> 02:39:54,860
the past somebody put this email address

2712
02:39:52,700 --> 02:39:56,150
into this field but you have no idea

2713
02:39:54,860 --> 02:39:57,829
whether it was actually the person who

2714
02:39:56,149 --> 02:39:59,600
did it and you have no idea whether

2715
02:39:57,829 --> 02:40:01,700
they're so subscribed maybe it just says

2716
02:39:59,601 --> 02:40:03,590
this email address was already entered

2717
02:40:01,700 --> 02:40:07,040
into our system please email us if you

2718
02:40:03,590 --> 02:40:12,860
would like to make changes that doesn't

2719
02:40:07,040 --> 02:40:15,561
leak any data right I like that uh you

2720
02:40:12,860 --> 02:40:18,560
know I like that better I'm gonna change

2721
02:40:15,560 --> 02:40:22,819
it to that you know regardless I don't

2722
02:40:18,560 --> 02:40:25,279
really care whether that's required by

2723
02:40:22,819 --> 02:40:27,560
the GDP it's just better it's better to

2724
02:40:25,280 --> 02:40:31,101
not leak information so I'm just gonna

2725
02:40:27,560 --> 02:40:32,840
say that that is what it is because

2726
02:40:31,101 --> 02:40:34,700
that's the minimal that's the minimum

2727
02:40:32,840 --> 02:40:36,560
amount of information leakage I could

2728
02:40:34,700 --> 02:40:40,700
think of that still works and doesn't

2729
02:40:36,560 --> 02:40:44,379
ever allow confirmation emails to just

2730
02:40:40,700 --> 02:40:44,380
pile up by look at griefer

2731
02:40:55,399 --> 02:41:01,459
so at that's that's what I'm that's I'm

2732
02:40:58,021 --> 02:41:01,460
claiming that's the best solution

2733
02:41:11,380 --> 02:41:17,939
alright I'm done for the day

2734
02:41:14,739 --> 02:41:17,940
close it up

2735
02:41:34,500 --> 02:41:41,170
okay thank you for joining us from

2736
02:41:39,909 --> 02:41:42,909
episode of hand made here it's been a

2737
02:41:41,170 --> 02:41:44,319
pleasure coding with you as always if

2738
02:41:42,909 --> 02:41:46,629
you would like to follow along with

2739
02:41:44,319 --> 02:41:48,190
series at home you can always go to

2740
02:41:46,629 --> 02:41:50,920
handmade hero org and pre-order the game

2741
02:41:48,190 --> 02:41:53,771
it comes with the source code so that

2742
02:41:50,920 --> 02:41:56,560
you can play around with it yourself and

2743
02:41:53,771 --> 02:41:59,920
you can try things and and you know do

2744
02:41:56,560 --> 02:42:01,000
some experiments we also have obviously

2745
02:41:59,920 --> 02:42:03,310
have a mailing list you can sign up for

2746
02:42:01,000 --> 02:42:04,479
which we just showed demo if you want to

2747
02:42:03,310 --> 02:42:07,539
sign up for our mailing list it's right

2748
02:42:04,479 --> 02:42:09,639
there we also have a handmade hero

2749
02:42:07,540 --> 02:42:11,170
that's our handmade community fund you

2750
02:42:09,639 --> 02:42:13,090
could check out that's something that

2751
02:42:11,170 --> 02:42:15,101
funds various things like our anti

2752
02:42:13,090 --> 02:42:17,500
episode guide or the handmade Network

2753
02:42:15,101 --> 02:42:18,880
forum stuff like that and it also comes

2754
02:42:17,500 --> 02:42:21,310
with some fun stuff if you sign up for

2755
02:42:18,879 --> 02:42:22,810
that like that tab you app that I was

2756
02:42:21,310 --> 02:42:24,699
using today and a bunch of other things

2757
02:42:22,810 --> 02:42:27,039
old source code by me from the from the

2758
02:42:24,700 --> 02:42:28,990
good old days so check out that button

2759
02:42:27,040 --> 02:42:30,340
it's a pretty interesting thing to check

2760
02:42:28,989 --> 02:42:32,560
there's a little video on it as well

2761
02:42:30,340 --> 02:42:34,000
also got a watch page which is the thing

2762
02:42:32,560 --> 02:42:36,209
where you can watch the series it's got

2763
02:42:34,000 --> 02:42:38,799
a twitch viewer on it but it also has a

2764
02:42:36,209 --> 02:42:40,359
thing that shows the schedule so you

2765
02:42:38,799 --> 02:42:43,209
know went up when streams are going to

2766
02:42:40,360 --> 02:42:44,710
be coming and it's got a episode guide

2767
02:42:43,209 --> 02:42:46,089
on it which allows you to search the old

2768
02:42:44,709 --> 02:42:47,799
episodes which is pretty awesome you can

2769
02:42:46,090 --> 02:42:48,760
quickly get to old episodes so that's

2770
02:42:47,799 --> 02:42:50,049
pretty great too if you're trying to

2771
02:42:48,760 --> 02:42:52,060
watch old verses this series and you

2772
02:42:50,049 --> 02:42:53,379
only want to look at things that pertain

2773
02:42:52,060 --> 02:42:55,329
to a subject matter your particulars to

2774
02:42:53,379 --> 02:42:56,679
did finally click on the handmade hero

2775
02:42:55,329 --> 02:42:57,579
ahead if you want to check out some of

2776
02:42:56,680 --> 02:42:59,860
our other stuff

2777
02:42:57,579 --> 02:43:03,459
malee rocket we got other cool products

2778
02:42:59,860 --> 02:43:05,050
in the works for you to explore that's

2779
02:43:03,459 --> 02:43:07,149
it for this weekend I'll be back next

2780
02:43:05,049 --> 02:43:10,239
weekend where are we gonna have to

2781
02:43:07,149 --> 02:43:11,889
finally wrestle with the tagging problem

2782
02:43:10,239 --> 02:43:13,510
we're gonna have to decide how we're

2783
02:43:11,889 --> 02:43:15,100
gonna do that hopefully it's not that

2784
02:43:13,510 --> 02:43:16,780
bad hopefully we're just like hey this

2785
02:43:15,101 --> 02:43:18,460
looks good this is how we want to do it

2786
02:43:16,780 --> 02:43:20,489
convenient it lets us get our assets

2787
02:43:18,459 --> 02:43:22,689
into the game quickly happy birthday

2788
02:43:20,489 --> 02:43:24,280
maybe it'll be more of a struggle and we

2789
02:43:22,690 --> 02:43:25,480
you'll have to really fight tooth and

2790
02:43:24,280 --> 02:43:27,400
nail to find something that we think

2791
02:43:25,479 --> 02:43:29,049
works well and satisfies our other

2792
02:43:27,399 --> 02:43:31,779
constraints only one way to find out

2793
02:43:29,049 --> 02:43:33,670
come back here next week and we will see

2794
02:43:31,780 --> 02:43:35,079
until then thanks for joining me

2795
02:43:33,670 --> 02:43:37,440
everyone and I'll see you on the

2796
02:43:35,079 --> 02:43:37,440
Internet

