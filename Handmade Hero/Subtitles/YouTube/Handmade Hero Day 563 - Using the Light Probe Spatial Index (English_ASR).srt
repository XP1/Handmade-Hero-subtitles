1
00:00:00,060 --> 00:00:04,290
hello everyone and welcome to hand made

2
00:00:02,819 --> 00:00:08,369
here a sure weave code a complete game

3
00:00:04,290 --> 00:00:11,339
live on stream we are kind of add a

4
00:00:08,369 --> 00:00:12,599
little bit of crossroads today let me go

5
00:00:11,339 --> 00:00:18,359
ahead and run the game for you so I can

6
00:00:12,599 --> 00:00:20,278
explain what our situation is well John

7
00:00:18,359 --> 00:00:23,609
blissfully plays manifold garden we have

8
00:00:20,278 --> 00:00:28,170
to deal with our own sort of garden of

9
00:00:23,609 --> 00:00:30,720
troubles here so basically if you look

10
00:00:28,170 --> 00:00:32,070
at where we are with lighting which is

11
00:00:30,719 --> 00:00:35,399
what we're sort of grappling with at the

12
00:00:32,070 --> 00:00:39,299
moment here is a fresh builds and here's

13
00:00:35,399 --> 00:00:41,280
the game running so what we sort of did

14
00:00:39,299 --> 00:00:43,439
is stuff the lighting with just a

15
00:00:41,280 --> 00:00:45,299
generic sphere right now and you can see

16
00:00:43,439 --> 00:00:48,839
that we have two sort of things that we

17
00:00:45,299 --> 00:00:51,179
now want to move on to we have lighting

18
00:00:48,840 --> 00:00:54,180
sampling in there and it's pretty good

19
00:00:51,179 --> 00:00:56,909
like I'm not horrified by it but it's

20
00:00:54,179 --> 00:00:59,070
not great and the reason I say that is

21
00:00:56,909 --> 00:01:01,948
because you can see the voxel ization

22
00:00:59,070 --> 00:01:04,558
artifacts that you get from just

23
00:01:01,948 --> 00:01:06,420
straight trilinear sampling of your

24
00:01:04,558 --> 00:01:09,599
light which is what's happening here so

25
00:01:06,420 --> 00:01:11,579
you can see in the interior it's harder

26
00:01:09,599 --> 00:01:14,129
to see and that's because the I think

27
00:01:11,579 --> 00:01:15,840
there's it's less it's less obvious

28
00:01:14,129 --> 00:01:18,688
because it's more subtle it's still

29
00:01:15,840 --> 00:01:20,040
there right it's still there I can see

30
00:01:18,688 --> 00:01:21,239
the artifact now that I know that I'm

31
00:01:20,040 --> 00:01:23,310
looking for it I could see it in the

32
00:01:21,239 --> 00:01:25,349
interior right but where you can really

33
00:01:23,310 --> 00:01:27,299
see it is anywhere there's a harsher

34
00:01:25,349 --> 00:01:28,559
light transition so you can see here

35
00:01:27,299 --> 00:01:31,890
where we've got the fall-off of the

36
00:01:28,560 --> 00:01:36,390
light and you can kind of see how that's

37
00:01:31,890 --> 00:01:40,400
you know just around those edges you can

38
00:01:36,390 --> 00:01:42,840
see those really ugly blocky sort of

39
00:01:40,400 --> 00:01:44,728
traditional bilinear artifacts you'd see

40
00:01:42,840 --> 00:01:46,350
there try linear in this case but you're

41
00:01:44,728 --> 00:01:48,060
more familiar with them and and I'm more

42
00:01:46,349 --> 00:01:50,099
fillet them as bilinear artifacts as we

43
00:01:48,060 --> 00:01:53,490
see them much more often in that context

44
00:01:50,099 --> 00:01:56,429
trilinear cute you know voxel sampling

45
00:01:53,489 --> 00:01:58,140
is not a thing that we do that often by

46
00:01:56,430 --> 00:02:00,960
comparison to bilinear which is you know

47
00:01:58,140 --> 00:02:03,478
done everywhere so what we can see here

48
00:02:00,959 --> 00:02:06,599
is that our sampling isn't awful it does

49
00:02:03,478 --> 00:02:08,639
work but it's not great and so one thing

50
00:02:06,599 --> 00:02:10,859
that we probably have to keep on our

51
00:02:08,639 --> 00:02:12,988
radar if we don't do it right now is to

52
00:02:10,860 --> 00:02:13,740
make this better like we're gonna need a

53
00:02:12,989 --> 00:02:15,360
better

54
00:02:13,740 --> 00:02:18,240
scheme I think unless we just want to

55
00:02:15,360 --> 00:02:20,040
accept it that hey it's an indie game so

56
00:02:18,240 --> 00:02:22,260
it's maybe not as awesome as it could be

57
00:02:20,039 --> 00:02:24,629
if we had a dedicated graphics team who

58
00:02:22,259 --> 00:02:26,909
will solve this problem right but that's

59
00:02:24,629 --> 00:02:29,299
usually a poor excuse so we may want to

60
00:02:26,909 --> 00:02:32,609
go try and improve it ourselves however

61
00:02:29,300 --> 00:02:34,740
that said what we can say about it is

62
00:02:32,610 --> 00:02:36,420
there's really only one specific

63
00:02:34,740 --> 00:02:38,909
artifact that we're seeing right now and

64
00:02:36,419 --> 00:02:40,469
we kind of know what it is so it's

65
00:02:38,909 --> 00:02:42,449
entirely possible that we could just

66
00:02:40,469 --> 00:02:44,639
accept that artifact temporarily and

67
00:02:42,449 --> 00:02:47,129
move on to the actual lugging transport

68
00:02:44,639 --> 00:02:49,019
part get that working since that's a

69
00:02:47,129 --> 00:02:52,049
separate part of the puzzle and then

70
00:02:49,020 --> 00:02:54,450
from there we move on to trying to fix

71
00:02:52,050 --> 00:02:55,170
the sampling all of that is certainly

72
00:02:54,449 --> 00:02:58,409
possible

73
00:02:55,169 --> 00:03:03,839
I just don't know again because I'm not

74
00:02:58,409 --> 00:03:07,560
sure I just don't know how important

75
00:03:03,840 --> 00:03:09,689
that that particular part of it is so my

76
00:03:07,560 --> 00:03:11,819
guess is we should just move on to the

77
00:03:09,689 --> 00:03:13,079
light sampling for now I'm sorry love

78
00:03:11,819 --> 00:03:15,209
like simply we should move on to the

79
00:03:13,080 --> 00:03:18,150
light transport for now since we have to

80
00:03:15,210 --> 00:03:19,560
go to bring that code up to speed so I

81
00:03:18,150 --> 00:03:21,469
think we kind of want to do that and

82
00:03:19,560 --> 00:03:24,689
then from there we can go ahead and

83
00:03:21,469 --> 00:03:27,090
decide assess afterwards what we want to

84
00:03:24,689 --> 00:03:29,759
do to try and improve the sampling of

85
00:03:27,090 --> 00:03:32,610
the light information we do have from

86
00:03:29,759 --> 00:03:35,009
there right and we can see that even

87
00:03:32,610 --> 00:03:36,930
with the artifacts it at least still is

88
00:03:35,009 --> 00:03:41,340
pretty cool the way we can sample these

89
00:03:36,930 --> 00:03:42,810
lights and so once we get some actual

90
00:03:41,340 --> 00:03:43,950
transport in there where we're gonna

91
00:03:42,810 --> 00:03:46,050
have some more interesting things

92
00:03:43,949 --> 00:03:48,359
happening like shadowing and stuff like

93
00:03:46,050 --> 00:03:49,800
that so that you know you wouldn't see

94
00:03:48,360 --> 00:03:51,510
light kind of in this corridor and stuff

95
00:03:49,800 --> 00:03:54,890
like that it seems like it would be

96
00:03:51,509 --> 00:03:57,569
probably a pretty cool aesthetic as well

97
00:03:54,889 --> 00:03:58,679
and you know we'd have a number of

98
00:03:57,569 --> 00:04:00,060
different lighting environments as well

99
00:03:58,680 --> 00:04:03,780
obviously this one just has a light

100
00:04:00,060 --> 00:04:05,310
hovering above the character but you

101
00:04:03,780 --> 00:04:07,979
know we'd want lots of things like you

102
00:04:05,310 --> 00:04:09,300
know our lamps and specifically to be on

103
00:04:07,979 --> 00:04:11,310
and shining light and things like that

104
00:04:09,300 --> 00:04:13,709
so I mean I think it would create a nice

105
00:04:11,310 --> 00:04:16,290
lighting environment and so the question

106
00:04:13,709 --> 00:04:18,780
will just be how bad is the sampling and

107
00:04:16,290 --> 00:04:21,299
is there anything we can do that doesn't

108
00:04:18,779 --> 00:04:24,359
tank the frame rate that would that

109
00:04:21,298 --> 00:04:26,918
would be usable right so that's where

110
00:04:24,360 --> 00:04:29,139
we're at and with that in mind I want

111
00:04:26,918 --> 00:04:33,609
to just make a judgment call here and

112
00:04:29,139 --> 00:04:36,158
say let's do the lighting sampling and

113
00:04:33,610 --> 00:04:38,259
the the reason I want to go that route

114
00:04:36,158 --> 00:04:40,498
too is because one of the things about

115
00:04:38,259 --> 00:04:43,900
the lighting sampling that's worth

116
00:04:40,499 --> 00:04:46,180
that's worth noting is the light

117
00:04:43,899 --> 00:04:47,769
sampling itself we're gonna want to work

118
00:04:46,180 --> 00:04:50,019
on that algorithm for a little while and

119
00:04:47,769 --> 00:04:53,438
as we work on that algorithm we may also

120
00:04:50,019 --> 00:04:56,498
discover some things about the way we're

121
00:04:53,439 --> 00:04:59,080
working with lights that change or

122
00:04:56,499 --> 00:05:01,000
inform how we might sample it so it's

123
00:04:59,079 --> 00:05:02,318
possible that by ping-ponging back and

124
00:05:01,000 --> 00:05:05,439
forth between these two sides of the

125
00:05:02,319 --> 00:05:07,718
problem maybe we'll gain insight into

126
00:05:05,439 --> 00:05:10,000
the other side while working on one of

127
00:05:07,718 --> 00:05:12,668
the suck like you know side a the

128
00:05:10,000 --> 00:05:14,348
sampling maybe we'll gain insight into

129
00:05:12,668 --> 00:05:16,478
the sampling side while working on the

130
00:05:14,348 --> 00:05:18,310
transport side and maybe we'll gain from

131
00:05:16,478 --> 00:05:20,500
the transport side Lorcan sample size so

132
00:05:18,310 --> 00:05:22,449
ping-ponging back and forth between them

133
00:05:20,500 --> 00:05:24,338
maybe makes some sense as opposed to

134
00:05:22,449 --> 00:05:25,749
trying to get one perfect and then

135
00:05:24,338 --> 00:05:27,968
moving to the other one because for all

136
00:05:25,749 --> 00:05:30,909
we know they may be a little bit more

137
00:05:27,968 --> 00:05:32,709
intimately connected because again the

138
00:05:30,908 --> 00:05:35,379
transport side does have to itself

139
00:05:32,709 --> 00:05:37,870
sample lighting the sampling side has to

140
00:05:35,379 --> 00:05:41,080
reconstruct lighting which is what comes

141
00:05:37,870 --> 00:05:43,180
from the transport and so that interplay

142
00:05:41,079 --> 00:05:44,978
there is you know it's a process of

143
00:05:43,180 --> 00:05:47,110
gaining that understanding that we're

144
00:05:44,978 --> 00:05:49,959
trying to do here and so what we want to

145
00:05:47,110 --> 00:05:52,060
kind of work towards is getting both of

146
00:05:49,959 --> 00:05:55,718
those problems solved together as

147
00:05:52,060 --> 00:05:56,918
opposed to them being completely it's

148
00:05:55,718 --> 00:05:58,838
not like they're these disparate

149
00:05:56,918 --> 00:06:02,408
problems that that bear no relationship

150
00:05:58,838 --> 00:06:04,240
to each other right um and so if I go

151
00:06:02,408 --> 00:06:06,038
ahead and pop over to the lighting

152
00:06:04,240 --> 00:06:07,329
transport side of things and we start to

153
00:06:06,038 --> 00:06:10,360
think about well what are we going to do

154
00:06:07,329 --> 00:06:11,348
to make this stuff work right well you

155
00:06:10,360 --> 00:06:13,960
can see what we've got here is a

156
00:06:11,348 --> 00:06:16,688
beginning and lighting computation call

157
00:06:13,959 --> 00:06:18,668
and basically all that happens is the

158
00:06:16,689 --> 00:06:21,699
begin learning computation enables the

159
00:06:18,668 --> 00:06:23,560
lighting what I probably want to do when

160
00:06:21,699 --> 00:06:25,210
we end is disable the lighting but I

161
00:06:23,560 --> 00:06:27,459
don't know that we actually have such a

162
00:06:25,209 --> 00:06:28,269
thing at the moment is that how does

163
00:06:27,459 --> 00:06:30,728
that actually work

164
00:06:28,269 --> 00:06:33,968
we should probably should probably have

165
00:06:30,728 --> 00:06:35,168
it turned off you can see the enable

166
00:06:33,968 --> 00:06:36,310
lighting here I don't know there's a

167
00:06:35,168 --> 00:06:38,680
disabled letting so that definitely

168
00:06:36,310 --> 00:06:39,709
should probably do it's not important

169
00:06:38,680 --> 00:06:41,959
right now but you know

170
00:06:39,709 --> 00:06:43,909
something to think about um but

171
00:06:41,959 --> 00:06:45,620
basically as you can see here all begin

172
00:06:43,910 --> 00:06:49,130
Lenny combination does is say look start

173
00:06:45,620 --> 00:06:50,959
tracking lighting through the system

174
00:06:49,129 --> 00:06:52,909
that's that's all it does and so when

175
00:06:50,959 --> 00:06:54,799
you go to render you say begin lighting

176
00:06:52,910 --> 00:06:57,110
before you put down all the scene stuff

177
00:06:54,800 --> 00:06:59,150
and then the idea is afterwards when you

178
00:06:57,110 --> 00:07:01,430
call in lighting computation after that

179
00:06:59,149 --> 00:07:03,049
eventually we'll have a thing where we

180
00:07:01,430 --> 00:07:05,120
don't do any lighting on anything after

181
00:07:03,050 --> 00:07:07,509
it that's so that you can avoid doing

182
00:07:05,120 --> 00:07:10,160
lighting on things like the title screen

183
00:07:07,509 --> 00:07:12,680
like stamped the thing the stamping of

184
00:07:10,160 --> 00:07:14,539
the title screen or the the debug hood

185
00:07:12,680 --> 00:07:16,490
or whatever right so we don't always

186
00:07:14,538 --> 00:07:19,639
want lighting most of the time we are

187
00:07:16,490 --> 00:07:23,139
lighting but sometimes we don't want to

188
00:07:19,639 --> 00:07:25,490
and that's the important part there so

189
00:07:23,139 --> 00:07:26,900
moving on from fact we have begin

190
00:07:25,490 --> 00:07:28,490
landing computation and then we have end

191
00:07:26,899 --> 00:07:29,929
lighting computation at end lighting

192
00:07:28,490 --> 00:07:32,360
computations actually does all the work

193
00:07:29,930 --> 00:07:33,918
because only by the time we've gotten to

194
00:07:32,360 --> 00:07:35,120
the end of where we want to do our

195
00:07:33,918 --> 00:07:37,698
letting combination do we have all the

196
00:07:35,120 --> 00:07:39,860
information in between these two calls

197
00:07:37,699 --> 00:07:41,478
the exterior code has done all of the

198
00:07:39,860 --> 00:07:47,598
specification where are the light

199
00:07:41,478 --> 00:07:51,168
sources where are the looters that's

200
00:07:47,598 --> 00:07:54,800
basically what needs to be happening

201
00:07:51,168 --> 00:07:58,939
right and so as we move through this set

202
00:07:54,800 --> 00:08:00,889
of stuff what you can see here is we

203
00:07:58,939 --> 00:08:03,168
have this old sample table we were

204
00:08:00,889 --> 00:08:05,870
working on all of this stuff we kind of

205
00:08:03,168 --> 00:08:08,209
replaced because what we did is we made

206
00:08:05,870 --> 00:08:09,918
a generator that generates well

207
00:08:08,209 --> 00:08:12,739
distributed samples fears you can see

208
00:08:09,918 --> 00:08:15,889
that here at some point and that point

209
00:08:12,740 --> 00:08:17,538
is probably going to be very shortly you

210
00:08:15,889 --> 00:08:19,038
can see that there's a table of zeros

211
00:08:17,538 --> 00:08:22,219
here you may be wondering what that is

212
00:08:19,038 --> 00:08:23,990
and the answer is eventually what we're

213
00:08:22,220 --> 00:08:28,970
going to be doing is saying how to

214
00:08:23,990 --> 00:08:31,460
weight these samples when the calf raise

215
00:08:28,970 --> 00:08:33,800
how to weight these samples into which

216
00:08:31,459 --> 00:08:35,179
sides of the spheres and so on and we

217
00:08:33,799 --> 00:08:37,879
don't actually know if that's something

218
00:08:35,179 --> 00:08:40,879
we want to do yet so what we may want to

219
00:08:37,879 --> 00:08:42,320
do is just say each individual ray just

220
00:08:40,879 --> 00:08:43,788
goes to one side

221
00:08:42,320 --> 00:08:46,399
you know whichever side it left through

222
00:08:43,788 --> 00:08:49,009
so there would be no blending right and

223
00:08:46,399 --> 00:08:51,019
so eventually we may say look the way

224
00:08:49,009 --> 00:08:52,830
this actually works is actually just an

225
00:08:51,019 --> 00:08:56,909
int you know it looks like

226
00:08:52,830 --> 00:08:58,889
this right uh and so we don't really

227
00:08:56,909 --> 00:09:02,370
know exactly what we want to do there

228
00:08:58,889 --> 00:09:03,899
but we're going to work that out now but

229
00:09:02,370 --> 00:09:05,669
the important part is we already figured

230
00:09:03,899 --> 00:09:08,370
out how to do a well distributed

231
00:09:05,669 --> 00:09:11,309
sampling on the sphere and that is

232
00:09:08,370 --> 00:09:14,399
actually you can see it hovering right

233
00:09:11,309 --> 00:09:15,869
here right we debug through it just to

234
00:09:14,399 --> 00:09:17,578
make sure it has good coverage you can

235
00:09:15,870 --> 00:09:19,409
see we have a really nicely distributed

236
00:09:17,578 --> 00:09:22,409
set of points there again not white

237
00:09:19,409 --> 00:09:27,778
noise this is blue noise here or at

238
00:09:22,409 --> 00:09:30,059
least blue noise adjacent and so we have

239
00:09:27,778 --> 00:09:33,000
you know the first step of that problem

240
00:09:30,059 --> 00:09:35,789
sort of sorted but there's more to it

241
00:09:33,000 --> 00:09:38,909
left there's more to come basically and

242
00:09:35,789 --> 00:09:42,629
so we'll be taking a look at that as we

243
00:09:38,909 --> 00:09:44,458
go so inside and lighting computation

244
00:09:42,629 --> 00:09:46,620
now let's just go through really quickly

245
00:09:44,458 --> 00:09:49,409
what we're gonna be trying to accomplish

246
00:09:46,620 --> 00:09:51,509
here so what you can see in in letting

247
00:09:49,409 --> 00:09:53,250
computation this sample table stuff

248
00:09:51,509 --> 00:09:56,189
we're not going to need anymore because

249
00:09:53,250 --> 00:09:58,559
I believe this stuff is just kind of a

250
00:09:56,190 --> 00:10:00,329
holdover from when we were kind of you

251
00:09:58,559 --> 00:10:02,549
know screwing around with how we're

252
00:10:00,328 --> 00:10:06,389
gonna do this lighting so the sample

253
00:10:02,549 --> 00:10:08,399
table stuff which is here right I don't

254
00:10:06,389 --> 00:10:11,250
actually think we want that anymore

255
00:10:08,399 --> 00:10:12,958
right these things are I don't I don't

256
00:10:11,250 --> 00:10:14,610
even know what this stuff what were we

257
00:10:12,958 --> 00:10:17,909
doing here let's take a look I think

258
00:10:14,610 --> 00:10:19,528
this stuff is just just garbage now yes

259
00:10:17,909 --> 00:10:21,028
you can see this this stuff is just we

260
00:10:19,528 --> 00:10:23,399
don't we don't need this anymore it's

261
00:10:21,028 --> 00:10:25,230
not it's not actually being used it can

262
00:10:23,399 --> 00:10:28,259
go away right that was I think that was

263
00:10:25,230 --> 00:10:29,700
before we you know we had gone down the

264
00:10:28,259 --> 00:10:33,750
samplings fare route so I think we're

265
00:10:29,700 --> 00:10:35,759
good yeah that's all clean so when you

266
00:10:33,750 --> 00:10:37,919
take a look at an lighting computation

267
00:10:35,759 --> 00:10:39,629
there's some debug code in here but then

268
00:10:37,919 --> 00:10:42,360
basically the first thing that happens

269
00:10:39,629 --> 00:10:43,889
is what you would expect this code is

270
00:10:42,360 --> 00:10:45,419
test code in there to see what happens

271
00:10:43,889 --> 00:10:47,220
if you accumulate the lighting over time

272
00:10:45,419 --> 00:10:49,110
we've probably want to re-enable that

273
00:10:47,220 --> 00:10:50,610
testing as well because it's a good way

274
00:10:49,110 --> 00:10:52,820
to test to see that the light transport

275
00:10:50,610 --> 00:10:55,409
is unbiased which we probably want to be

276
00:10:52,820 --> 00:10:57,120
at least to a certain extent what you

277
00:10:55,409 --> 00:10:59,969
can see here is we've if zeroed out the

278
00:10:57,120 --> 00:11:01,769
part that actually does any work and

279
00:10:59,970 --> 00:11:03,660
that's because we aren't we weren't

280
00:11:01,769 --> 00:11:05,579
actually doing the lighting transfer

281
00:11:03,659 --> 00:11:08,129
anymore but then what we did is we

282
00:11:05,580 --> 00:11:10,129
have the code at the back end that's

283
00:11:08,129 --> 00:11:14,879
going to be responsible for outputting

284
00:11:10,129 --> 00:11:16,799
the actual information about what the

285
00:11:14,879 --> 00:11:17,490
graphics card needs to sample and if you

286
00:11:16,799 --> 00:11:20,519
take a look

287
00:11:17,490 --> 00:11:23,070
we've just have a ton of code stuck in

288
00:11:20,519 --> 00:11:25,740
here that's mostly all for debugging

289
00:11:23,070 --> 00:11:27,750
right here this right here is the thing

290
00:11:25,740 --> 00:11:30,180
that stuff's our voxel with fake values

291
00:11:27,750 --> 00:11:31,950
this stuff's our voxel with that orb

292
00:11:30,179 --> 00:11:34,019
that you saw there so that's based on

293
00:11:31,950 --> 00:11:36,390
the code that's producing this fake

294
00:11:34,019 --> 00:11:38,909
light this is not light transport it's

295
00:11:36,389 --> 00:11:41,279
just a sphere of light that we you know

296
00:11:38,909 --> 00:11:42,539
basically a distance fall-off light just

297
00:11:41,279 --> 00:11:43,980
stuffed in there that's why it doesn't

298
00:11:42,539 --> 00:11:46,379
do any shadowing and it's not doing any

299
00:11:43,980 --> 00:11:49,170
transport just stuffing the light into

300
00:11:46,379 --> 00:11:51,600
the voxel directly and so what we want

301
00:11:49,169 --> 00:11:52,889
to do now is start to move this function

302
00:11:51,600 --> 00:11:55,920
towards something that's actually going

303
00:11:52,889 --> 00:11:58,110
to produce some kind of lighting we can

304
00:11:55,919 --> 00:12:00,659
use and so the first thing I would like

305
00:11:58,110 --> 00:12:02,669
to do is take one step forward and

306
00:12:00,659 --> 00:12:04,649
that's probably what we'll do today the

307
00:12:02,669 --> 00:12:07,199
step I'd like to take is figuring out

308
00:12:04,649 --> 00:12:11,429
how we're going to go from light probes

309
00:12:07,200 --> 00:12:14,100
to voxels right because right now what

310
00:12:11,429 --> 00:12:16,559
we're actually doing like I just said

311
00:12:14,100 --> 00:12:18,840
we've got this thing at the end here

312
00:12:16,559 --> 00:12:21,869
right now we're actually doing is

313
00:12:18,840 --> 00:12:22,830
directly stuffing light into voxels

314
00:12:21,870 --> 00:12:25,860
right

315
00:12:22,830 --> 00:12:27,660
these voxels themselves are the things

316
00:12:25,860 --> 00:12:32,009
that are actually storing the light here

317
00:12:27,659 --> 00:12:33,719
the light probes are not right so we're

318
00:12:32,009 --> 00:12:35,399
not touching light probe information

319
00:12:33,720 --> 00:12:38,490
we're not even building like probe

320
00:12:35,399 --> 00:12:42,480
information all we're doing the entirety

321
00:12:38,490 --> 00:12:46,909
of the process is literally just us

322
00:12:42,480 --> 00:12:49,110
doing these doing these voxel stuffs

323
00:12:46,909 --> 00:12:51,120
directly into the lookup structure that

324
00:12:49,110 --> 00:12:53,310
the GPU actually uses for lighting and

325
00:12:51,120 --> 00:12:55,649
whether or not we want to do that long

326
00:12:53,309 --> 00:12:57,629
term we don't know but what we do know

327
00:12:55,649 --> 00:12:59,699
is that the very least if we want to

328
00:12:57,629 --> 00:13:02,189
actually have light probes that we place

329
00:12:59,700 --> 00:13:04,080
throughout the world where we think they

330
00:13:02,190 --> 00:13:06,210
make the most sense we're going to have

331
00:13:04,080 --> 00:13:08,100
to start with those and then move to

332
00:13:06,210 --> 00:13:09,960
voxels and if in the end we choose to

333
00:13:08,100 --> 00:13:11,610
remove the voxels and have the GPU work

334
00:13:09,960 --> 00:13:13,470
with the light probes directly that's

335
00:13:11,610 --> 00:13:15,840
fine but we still need to take the step

336
00:13:13,470 --> 00:13:17,639
of at least having the light probes be

337
00:13:15,840 --> 00:13:19,259
the thing that that is persistent right

338
00:13:17,639 --> 00:13:21,449
so I'd like to start with

339
00:13:19,259 --> 00:13:25,049
that step and furthermore we probably

340
00:13:21,450 --> 00:13:28,440
also want to start to think about how

341
00:13:25,049 --> 00:13:30,809
we're doing actual lights so right now

342
00:13:28,440 --> 00:13:34,470
we don't really have any idea of what a

343
00:13:30,809 --> 00:13:37,529
light is we may want to have lights be a

344
00:13:34,470 --> 00:13:40,950
first class citizen no particular limit

345
00:13:37,529 --> 00:13:43,559
on them just a way of saying this is a

346
00:13:40,950 --> 00:13:46,950
light because right now what happens is

347
00:13:43,559 --> 00:13:50,489
we actually do warrant to the renderer

348
00:13:46,950 --> 00:13:54,629
that there is a light here is a call but

349
00:13:50,490 --> 00:13:57,539
the light instead is just a cube right

350
00:13:54,629 --> 00:14:00,299
but I think that's a bad idea because

351
00:13:57,539 --> 00:14:02,490
since we are saying that the game will

352
00:14:00,299 --> 00:14:03,899
announce where the lights are even if

353
00:14:02,490 --> 00:14:05,940
there's a hundred of them it's going to

354
00:14:03,899 --> 00:14:08,490
tell us where they are specifically it's

355
00:14:05,940 --> 00:14:10,260
not gonna bury that information into

356
00:14:08,490 --> 00:14:12,690
some kind of hard to detect scenario

357
00:14:10,259 --> 00:14:14,189
since it is gonna tell us where the

358
00:14:12,690 --> 00:14:15,990
lights are and generally speaking that

359
00:14:14,190 --> 00:14:17,370
is what we want anyway like we know

360
00:14:15,990 --> 00:14:21,600
what's supposed to light up in the game

361
00:14:17,370 --> 00:14:25,409
and what's not we probably want to then

362
00:14:21,600 --> 00:14:27,120
take that light information and give it

363
00:14:25,409 --> 00:14:29,129
to the renderer so that it can bias the

364
00:14:27,120 --> 00:14:32,330
sampling towards hitting light sources

365
00:14:29,129 --> 00:14:35,340
right not biased in the sense of

366
00:14:32,330 --> 00:14:37,889
creating a biased renderer but biased in

367
00:14:35,340 --> 00:14:40,740
the sense that when it does importance

368
00:14:37,889 --> 00:14:42,480
based sampling it can know that it

369
00:14:40,740 --> 00:14:54,950
should try to aim for light sources

370
00:14:42,480 --> 00:14:57,750
write the word bias is difficult because

371
00:14:54,950 --> 00:15:00,450
there's a very specific definition of

372
00:14:57,750 --> 00:15:05,009
bias when it comes to talking about the

373
00:15:00,450 --> 00:15:07,230
output of a renderer that doesn't imply

374
00:15:05,009 --> 00:15:09,899
so for example let's suppose that we

375
00:15:07,230 --> 00:15:12,269
know that our renderer will go out of

376
00:15:09,899 --> 00:15:14,639
its way to try to see if it can hit

377
00:15:12,269 --> 00:15:17,100
light sources when it does its ray casts

378
00:15:14,639 --> 00:15:20,100
rather than using a perfectly even

379
00:15:17,100 --> 00:15:22,680
distribution of outgoing Ray's you would

380
00:15:20,100 --> 00:15:24,629
obviously call that biased sampling

381
00:15:22,679 --> 00:15:26,129
right I mean that's a you know

382
00:15:24,629 --> 00:15:28,679
intuitively that's a phrase you would

383
00:15:26,129 --> 00:15:30,210
use to describe it because it is biased

384
00:15:28,679 --> 00:15:32,189
towards trying to hit a light source

385
00:15:30,210 --> 00:15:34,800
right it obviously is

386
00:15:32,190 --> 00:15:37,170
not a uniform distribution it's not even

387
00:15:34,799 --> 00:15:38,939
a cosine weighted distribution it's very

388
00:15:37,169 --> 00:15:40,319
specifically a distribution weighted

389
00:15:38,940 --> 00:15:43,620
towards trying to get the light source

390
00:15:40,320 --> 00:15:46,290
right however there are plenty of

391
00:15:43,620 --> 00:15:49,139
examples of sampling schemes people have

392
00:15:46,289 --> 00:15:51,929
constructed pretty much all the ones

393
00:15:49,139 --> 00:15:54,929
used in production as far as I know that

394
00:15:51,929 --> 00:15:57,929
are biased in exactly that kind of way

395
00:15:54,929 --> 00:16:00,029
the trick is as long as you create the

396
00:15:57,929 --> 00:16:03,419
correct probability model on the back

397
00:16:00,029 --> 00:16:05,429
end biasing your sampling doesn't mean

398
00:16:03,419 --> 00:16:08,370
your rendering ends up being biased and

399
00:16:05,429 --> 00:16:11,879
what bias means in a renderer means over

400
00:16:08,370 --> 00:16:15,960
time as you a verge of sub subsequent

401
00:16:11,879 --> 00:16:17,429
rays biased or unbiased biased means you

402
00:16:15,960 --> 00:16:19,110
will converge to the wrong answer

403
00:16:17,429 --> 00:16:19,620
unbiased means you will converge to the

404
00:16:19,110 --> 00:16:22,470
right answer

405
00:16:19,620 --> 00:16:24,629
so a biased renderer if you run it

406
00:16:22,470 --> 00:16:27,600
forever and just keep accumulating

407
00:16:24,629 --> 00:16:29,909
results a biased renderer will converge

408
00:16:27,600 --> 00:16:31,500
towards an erroneous answer usually

409
00:16:29,909 --> 00:16:34,110
infinitely brighter infinitely dark I

410
00:16:31,500 --> 00:16:36,690
would assume but I guess that's not a

411
00:16:34,110 --> 00:16:38,970
story true whereas an unbiased ansel

412
00:16:36,690 --> 00:16:40,830
answer will return the correct answer if

413
00:16:38,970 --> 00:16:42,240
you ran it infinitely long that's the

414
00:16:40,830 --> 00:16:44,310
actual difference between the two and so

415
00:16:42,240 --> 00:16:48,389
the crucial thing you need to know is

416
00:16:44,309 --> 00:16:50,159
when you are biasing the sampling you

417
00:16:48,389 --> 00:16:51,720
need to know that your biasing the

418
00:16:50,159 --> 00:16:54,149
sampling and you need to account for

419
00:16:51,720 --> 00:16:56,550
that in how you combine those samples

420
00:16:54,149 --> 00:16:58,970
but that's really all there is to that

421
00:16:56,549 --> 00:17:01,919
and hopefully that makes some sense

422
00:16:58,970 --> 00:17:04,350
anyway so we probably want this

423
00:17:01,919 --> 00:17:05,879
information to come through and that's

424
00:17:04,349 --> 00:17:08,159
something that we should look at now as

425
00:17:05,880 --> 00:17:09,780
well so those are the things that I want

426
00:17:08,160 --> 00:17:11,519
to do start getting the light probes

427
00:17:09,779 --> 00:17:13,139
involved directly in here get them

428
00:17:11,519 --> 00:17:16,588
through to the voxels and we probably

429
00:17:13,140 --> 00:17:18,839
also want to start tracking those light

430
00:17:16,588 --> 00:17:21,000
sources so that we understand where the

431
00:17:18,838 --> 00:17:23,698
light sources are supposed to be when it

432
00:17:21,000 --> 00:17:24,959
comes to lighting time at the very least

433
00:17:23,699 --> 00:17:26,250
we're going to need that because we know

434
00:17:24,959 --> 00:17:28,140
they have to inject light into the

435
00:17:26,250 --> 00:17:29,220
system whereas nothing else does and so

436
00:17:28,140 --> 00:17:30,600
if we don't understand where a light

437
00:17:29,220 --> 00:17:31,680
source is we're not gonna be able to put

438
00:17:30,599 --> 00:17:35,339
light in the system at all and

439
00:17:31,680 --> 00:17:37,259
everything will just be dark so here we

440
00:17:35,339 --> 00:17:40,439
are in the end lighting computation as

441
00:17:37,259 --> 00:17:43,759
we move through here the first thing

442
00:17:40,440 --> 00:17:46,289
we're going to want to do is probably

443
00:17:43,759 --> 00:17:48,990
ignore these guys

444
00:17:46,289 --> 00:17:50,700
but continue to keep them out because

445
00:17:48,990 --> 00:17:52,890
what we want to do is just build the

446
00:17:50,700 --> 00:17:55,230
light prep set and then out out put it

447
00:17:52,890 --> 00:17:59,250
the spatial partition is not for the

448
00:17:55,230 --> 00:18:02,430
probes the spatial partition is going to

449
00:17:59,250 --> 00:18:05,910
be for the boxes I believe so let me see

450
00:18:02,430 --> 00:18:07,560
here is that correct yeah the spatial

451
00:18:05,910 --> 00:18:10,590
partition is just for doing the ray

452
00:18:07,559 --> 00:18:12,720
casting so that's just taking the base

453
00:18:10,589 --> 00:18:14,250
of the occluders and building a

454
00:18:12,720 --> 00:18:16,440
hierarchy so that they can be ray casted

455
00:18:14,250 --> 00:18:18,000
more quickly so we're basically looking

456
00:18:16,440 --> 00:18:20,970
at sort of the part that comes below

457
00:18:18,000 --> 00:18:23,490
here now as we're looking towards this

458
00:18:20,970 --> 00:18:25,350
these boxes here where we're looking at

459
00:18:23,490 --> 00:18:27,329
these box store directions and

460
00:18:25,349 --> 00:18:30,839
accumulation a lot of stuff we really

461
00:18:27,329 --> 00:18:32,399
don't want this stuff anymore so more

462
00:18:30,839 --> 00:18:34,289
what we need to look at here is how

463
00:18:32,400 --> 00:18:36,300
we're going to combine the light probe

464
00:18:34,289 --> 00:18:40,500
arrays so I'm going to go ahead and move

465
00:18:36,299 --> 00:18:42,569
this down because this is basically you

466
00:18:40,500 --> 00:18:44,250
know a non-issue for us now

467
00:18:42,569 --> 00:18:47,250
so I'm going to go ahead and move this

468
00:18:44,250 --> 00:18:49,109
down and kind of get it out of our way

469
00:18:47,250 --> 00:18:50,789
because this is not really relevant

470
00:18:49,109 --> 00:18:52,319
anymore and will eventually go away but

471
00:18:50,789 --> 00:18:54,930
we may want to look at how we were doing

472
00:18:52,319 --> 00:18:56,129
our averaging over time there so we'll

473
00:18:54,930 --> 00:18:59,400
you know we'll leave it there just in

474
00:18:56,130 --> 00:19:00,480
case we want it for reference later so

475
00:18:59,400 --> 00:19:04,170
we don't have to go dig it out of github

476
00:19:00,480 --> 00:19:07,319
or something here we've got how we were

477
00:19:04,170 --> 00:19:08,910
drawing some of our sample points here

478
00:19:07,319 --> 00:19:11,099
we don't really need that at the moment

479
00:19:08,910 --> 00:19:13,680
either but it's again it's some debug

480
00:19:11,099 --> 00:19:16,709
stuff for drawing so I'm gonna move that

481
00:19:13,680 --> 00:19:24,150
out of the way as well let's get this

482
00:19:16,710 --> 00:19:26,309
down here and this is what we're

483
00:19:24,150 --> 00:19:29,130
currently doing to draw our sampling

484
00:19:26,309 --> 00:19:30,629
sphere again not super concerned about

485
00:19:29,130 --> 00:19:31,980
that at the moment so we're gonna move

486
00:19:30,630 --> 00:19:33,000
that down here to I'm just gonna leave

487
00:19:31,980 --> 00:19:34,799
all this code down here just so I can

488
00:19:33,000 --> 00:19:38,640
see this function this is all kind of

489
00:19:34,799 --> 00:19:43,559
unrelated stuff at the moment and so

490
00:19:38,640 --> 00:19:44,820
here yeah we have you know so we're just

491
00:19:43,559 --> 00:19:46,919
looking at this as well

492
00:19:44,819 --> 00:19:50,389
none of this stuff we care about either

493
00:19:46,920 --> 00:19:53,730
so all this stuff can can pretty much go

494
00:19:50,390 --> 00:19:56,100
know what this nonsense is I don't think

495
00:19:53,730 --> 00:19:58,079
I care about any of this stuff yeah I

496
00:19:56,099 --> 00:19:59,519
don't care about any other stuff I'm

497
00:19:58,079 --> 00:20:01,879
gonna get rid of the cluster table stuff

498
00:19:59,519 --> 00:20:01,879
as well

499
00:20:04,259 --> 00:20:09,759
and what's the start point nonsense now

500
00:20:06,970 --> 00:20:11,650
okay so again just cleaning this stuff

501
00:20:09,759 --> 00:20:13,089
up here you can see us drawing our debug

502
00:20:11,650 --> 00:20:14,110
lines we want to keep that in there

503
00:20:13,089 --> 00:20:16,089
because we're probably gonna need those

504
00:20:14,109 --> 00:20:18,069
debug lines as we try to debug this

505
00:20:16,089 --> 00:20:20,799
whatever the new code is you're right so

506
00:20:18,069 --> 00:20:23,259
you want that in there this stuff here

507
00:20:20,799 --> 00:20:24,940
we don't care about this was the old way

508
00:20:23,259 --> 00:20:26,829
we were doing things so that goes away

509
00:20:24,940 --> 00:20:29,580
as well and so I think we want to start

510
00:20:26,829 --> 00:20:33,069
with all of that code out of the way and

511
00:20:29,579 --> 00:20:35,559
probably so probably that's really all

512
00:20:33,069 --> 00:20:37,149
we want and so we look here and we say

513
00:20:35,559 --> 00:20:39,519
all right we've got the accumulation

514
00:20:37,150 --> 00:20:41,080
stuff going on and that should in theory

515
00:20:39,519 --> 00:20:44,289
be not really doing anything anyway

516
00:20:41,079 --> 00:20:46,480
because accumulating is not going to be

517
00:20:44,289 --> 00:20:47,740
turned on at this particular moment as

518
00:20:46,480 --> 00:20:48,880
we're starting this but we do want to

519
00:20:47,740 --> 00:20:50,410
maintain that we probably ought to get

520
00:20:48,880 --> 00:20:54,610
that working again eventually to check

521
00:20:50,410 --> 00:20:56,529
our results and so we want the debug

522
00:20:54,609 --> 00:20:58,449
line output to be there and so then here

523
00:20:56,529 --> 00:21:01,000
is the part that outputs a sort of our

524
00:20:58,450 --> 00:21:03,009
test light at the moment that's all good

525
00:21:01,000 --> 00:21:04,240
and so now we want to do is put in the

526
00:21:03,009 --> 00:21:06,849
part that actually works with the

527
00:21:04,240 --> 00:21:10,779
lighting probes if we look at our game

528
00:21:06,849 --> 00:21:13,299
render commands what we can see here is

529
00:21:10,779 --> 00:21:15,430
we've got a light probe count and a max

530
00:21:13,299 --> 00:21:19,960
light probe count a light probe position

531
00:21:15,430 --> 00:21:25,560
right all this sort of stuff and what

532
00:21:19,960 --> 00:21:25,559
this tells us is effectively what we

533
00:21:26,279 --> 00:21:31,210
this is effectively an array that tells

534
00:21:28,809 --> 00:21:33,549
us what are all of the light probes that

535
00:21:31,210 --> 00:21:37,569
the game thinks are currently in like

536
00:21:33,549 --> 00:21:39,879
the active set right so this right here

537
00:21:37,569 --> 00:21:42,639
is our light probe position table it's

538
00:21:39,880 --> 00:21:44,620
where the light probes are this right

539
00:21:42,640 --> 00:21:47,050
here is our light probe irradiance table

540
00:21:44,619 --> 00:21:51,129
it's what we thought the light probes

541
00:21:47,049 --> 00:21:53,529
were last frame and again all that is is

542
00:21:51,130 --> 00:21:57,520
the incoming light at each of the six

543
00:21:53,529 --> 00:22:01,769
faces of the cube right so however many

544
00:21:57,519 --> 00:22:04,119
of these we actually used in this case

545
00:22:01,769 --> 00:22:05,859
that they're coming through here and

546
00:22:04,119 --> 00:22:08,949
those are the lighting values that we

547
00:22:05,859 --> 00:22:11,829
remember for them some of those lighting

548
00:22:08,950 --> 00:22:13,299
values will be full black they will just

549
00:22:11,829 --> 00:22:15,639
be zero zero zero

550
00:22:13,299 --> 00:22:17,440
those will be light probes that have not

551
00:22:15,640 --> 00:22:19,150
actually received an illumination yet

552
00:22:17,440 --> 00:22:21,299
either because they are new or because

553
00:22:19,150 --> 00:22:24,130
there's no light near them at the moment

554
00:22:21,299 --> 00:22:25,990
others of them will have a residual

555
00:22:24,130 --> 00:22:28,600
light value in it that is whatever their

556
00:22:25,990 --> 00:22:30,880
lighting value was last frame and since

557
00:22:28,599 --> 00:22:33,909
we smooth our values over time as I

558
00:22:30,880 --> 00:22:36,430
talked about yesterday those values will

559
00:22:33,910 --> 00:22:38,560
sort of be used to heavily weight the

560
00:22:36,430 --> 00:22:40,630
results so that we only update the

561
00:22:38,559 --> 00:22:43,389
results by a little bit on each frame

562
00:22:40,630 --> 00:22:45,790
right so that's kind of where we're

563
00:22:43,390 --> 00:22:48,280
starting and the light probe irradiance

564
00:22:45,789 --> 00:22:50,319
is a bit piggy right now because we're

565
00:22:48,279 --> 00:22:51,940
just using v3 s for it eventually I

566
00:22:50,319 --> 00:22:54,909
think we want to encode the lighting in

567
00:22:51,940 --> 00:22:57,130
there because we don't want to spend the

568
00:22:54,910 --> 00:22:58,930
extra bandwidth reading and writing that

569
00:22:57,130 --> 00:23:01,240
every frame so I think we're gonna want

570
00:22:58,930 --> 00:23:04,870
to sort of composite that down a little

571
00:23:01,240 --> 00:23:06,640
bit but otherwise I think this is

572
00:23:04,869 --> 00:23:08,439
basically where we're at and we kind of

573
00:23:06,640 --> 00:23:15,100
you know we'll have to see how it does

574
00:23:08,440 --> 00:23:17,470
so if we now go and we take a sort of a

575
00:23:15,099 --> 00:23:19,419
survey of this the lighting solution

576
00:23:17,470 --> 00:23:21,339
itself

577
00:23:19,420 --> 00:23:23,110
kind of needs to work with these light

578
00:23:21,339 --> 00:23:26,409
probes you can see here we've got the

579
00:23:23,109 --> 00:23:27,909
light probe counter right here and what

580
00:23:26,410 --> 00:23:30,790
I can do is I can just make sure that

581
00:23:27,910 --> 00:23:33,070
that's always the right size and then we

582
00:23:30,789 --> 00:23:35,799
can work with these the light probes

583
00:23:33,069 --> 00:23:37,299
themselves our position in a color if we

584
00:23:35,799 --> 00:23:39,519
assume that we're just always gonna be

585
00:23:37,299 --> 00:23:41,649
working with this we maybe can just use

586
00:23:39,519 --> 00:23:43,509
these directly I mean it certainly seems

587
00:23:41,650 --> 00:23:45,610
plausible so we may be able to do is

588
00:23:43,509 --> 00:23:47,829
just say look we don't really care about

589
00:23:45,609 --> 00:23:50,829
this it's not relevant we don't need a

590
00:23:47,829 --> 00:23:53,439
separate version we'll just work with

591
00:23:50,829 --> 00:23:54,909
the one that we've got here and we don't

592
00:23:53,440 --> 00:23:56,769
really need to know anything about these

593
00:23:54,910 --> 00:23:58,660
light probes other than their irradiance

594
00:23:56,769 --> 00:24:01,000
in their position for the most part

595
00:23:58,660 --> 00:24:03,790
right now there's one other piece of

596
00:24:01,000 --> 00:24:04,750
information we may need because one of

597
00:24:03,789 --> 00:24:09,730
the things that we don't necessarily

598
00:24:04,750 --> 00:24:11,289
know is how many samples we added to

599
00:24:09,730 --> 00:24:14,529
each light probe on this time for you

600
00:24:11,289 --> 00:24:23,490
but one thing we could do and maybe

601
00:24:14,529 --> 00:24:23,490
should do is just assume that we like

602
00:24:25,089 --> 00:24:36,609
if we just assume that any light that's

603
00:24:30,099 --> 00:24:39,878
actually active on this frame gets the

604
00:24:36,609 --> 00:24:43,178
same a uniform set of samples so one

605
00:24:39,878 --> 00:24:45,369
sample to each face of its cube if we

606
00:24:43,179 --> 00:24:48,340
just assume that then I think we don't

607
00:24:45,369 --> 00:24:55,229
need to track weights so we either send

608
00:24:48,339 --> 00:24:58,028
out 6 12 or 18 rays per probe right and

609
00:24:55,230 --> 00:25:01,569
we send one out of each of the faces of

610
00:24:58,028 --> 00:25:03,429
the cube if we assume that we maintain

611
00:25:01,569 --> 00:25:05,678
that sampling pattern then we wouldn't

612
00:25:03,429 --> 00:25:08,320
need to track a weighting value we would

613
00:25:05,679 --> 00:25:12,580
know that every ray that comes in is

614
00:25:08,319 --> 00:25:16,528
always waited the Zak same way right in

615
00:25:12,579 --> 00:25:19,898
other words the input values can be pre

616
00:25:16,528 --> 00:25:22,990
that can be adjusted ahead of time to

617
00:25:19,898 --> 00:25:25,118
account for what we're adding in and

618
00:25:22,990 --> 00:25:30,878
then that would just be the end of it

619
00:25:25,118 --> 00:25:34,509
right I think that pretty much just

620
00:25:30,878 --> 00:25:36,398
works and so basically you would sweep

621
00:25:34,509 --> 00:25:39,159
over the light probe irradiance table

622
00:25:36,398 --> 00:25:41,439
and you would knock it down by 0.95

623
00:25:39,159 --> 00:25:45,820
first and then you would just multiply

624
00:25:41,440 --> 00:25:48,669
your rays by 0.25 for to raise or 0.125

625
00:25:45,819 --> 00:25:51,220
for you know 24 rays or you know however

626
00:25:48,669 --> 00:25:54,429
many it is and you would just build the

627
00:25:51,220 --> 00:25:56,288
the temporal smoothing directly into it

628
00:25:54,429 --> 00:25:58,480
and so again that just removes a step

629
00:25:56,288 --> 00:25:59,798
that seems like a perfectly reasonable

630
00:25:58,480 --> 00:26:01,990
thing to guarantee because I don't think

631
00:25:59,798 --> 00:26:04,210
six arrays six rays at a time is a

632
00:26:01,990 --> 00:26:06,579
totally reasonable stepping increment I

633
00:26:04,210 --> 00:26:09,100
think so we'll just like say that that's

634
00:26:06,579 --> 00:26:10,558
true right and if we find that we really

635
00:26:09,099 --> 00:26:13,028
need things to be allowing two fours

636
00:26:10,558 --> 00:26:15,009
then we can just switch to octagonal

637
00:26:13,028 --> 00:26:17,710
sampling which maybe is something we

638
00:26:15,009 --> 00:26:19,569
want to do anyway because eights are

639
00:26:17,710 --> 00:26:23,639
better than sixes right they line up

640
00:26:19,569 --> 00:26:23,638
better with machine words and ALU sizes

641
00:26:26,839 --> 00:26:31,689
and so maybe we just start sampling the

642
00:26:29,240 --> 00:26:34,009
vertices of cubes in the future right

643
00:26:31,690 --> 00:26:39,650
and if we start sampling the vertices of

644
00:26:34,009 --> 00:26:40,849
cubes then it's a cos you know you think

645
00:26:39,650 --> 00:26:45,080
about there's no real reason you have to

646
00:26:40,849 --> 00:26:49,669
go up the center of a cube right I mean

647
00:26:45,079 --> 00:26:51,319
it's there I don't know anyway so that's

648
00:26:49,670 --> 00:26:55,670
all that's all I'm saying

649
00:26:51,319 --> 00:26:57,649
not complicated just just that's just

650
00:26:55,670 --> 00:27:01,190
saying what I'm saying nothing nothing

651
00:26:57,650 --> 00:27:02,660
weird all right so if we assume that all

652
00:27:01,190 --> 00:27:04,279
that's true and we have our light from

653
00:27:02,660 --> 00:27:06,920
radiant sense here and we're doing

654
00:27:04,279 --> 00:27:08,599
whatever we're doing and we come in here

655
00:27:06,920 --> 00:27:10,850
and we say we not gonna do weights we're

656
00:27:08,599 --> 00:27:12,799
just gonna make these things operate in

657
00:27:10,849 --> 00:27:15,199
place then if I go to the lighting

658
00:27:12,799 --> 00:27:20,829
system then what I expect to see here is

659
00:27:15,200 --> 00:27:20,830
basically this accumulation value right

660
00:27:22,839 --> 00:27:27,949
the accumulation the way we were doing

661
00:27:26,000 --> 00:27:31,460
the equation before I think what we want

662
00:27:27,950 --> 00:27:34,610
to kind of say here is that the blend

663
00:27:31,460 --> 00:27:38,809
the blending coefficients are just gonna

664
00:27:34,609 --> 00:27:42,349
be like specific to whether you've got

665
00:27:38,809 --> 00:27:44,480
permanent accumulation on or off if you

666
00:27:42,349 --> 00:27:47,059
look at the accumulation see here

667
00:27:44,480 --> 00:27:48,470
probably what we want to do is just

668
00:27:47,059 --> 00:27:53,240
think about the two values we're

669
00:27:48,470 --> 00:27:55,430
actually using and pass those down so we

670
00:27:53,240 --> 00:28:00,589
probably want something like this we

671
00:27:55,430 --> 00:28:02,750
want a preservation factor right so

672
00:28:00,589 --> 00:28:07,869
preservation see like irradiance

673
00:28:02,750 --> 00:28:16,039
preservation see and then we want a new

674
00:28:07,869 --> 00:28:18,219
or irradiance acquisition my stone that

675
00:28:16,039 --> 00:28:18,220
right

676
00:28:19,919 --> 00:28:24,219
yes you can tell I don't work for

677
00:28:22,179 --> 00:28:25,599
Silicon Valley firm otherwise I would

678
00:28:24,219 --> 00:28:26,699
know how to spell acquisition better

679
00:28:25,598 --> 00:28:29,439
than any other word

680
00:28:26,699 --> 00:28:31,089
so irradiance preservation C and

681
00:28:29,440 --> 00:28:32,469
irradiance acquisition C these are the

682
00:28:31,088 --> 00:28:35,769
two values that we're going to be using

683
00:28:32,469 --> 00:28:38,259
to blend things together and so we can

684
00:28:35,769 --> 00:28:39,548
set these to whatever we want and you

685
00:28:38,259 --> 00:28:41,440
can see we were sort of already doing a

686
00:28:39,548 --> 00:28:44,618
little bit of that here and so what we

687
00:28:41,440 --> 00:28:47,169
want to do is assume that our irradiance

688
00:28:44,618 --> 00:28:48,939
preservation value is going to be

689
00:28:47,169 --> 00:28:52,209
something like you know let's say we

690
00:28:48,940 --> 00:28:53,769
want to blend it over one sixtieth of a

691
00:28:52,209 --> 00:28:56,019
second that's all right let's say we

692
00:28:53,769 --> 00:29:00,669
want to blend it over 60 frames so it's

693
00:28:56,019 --> 00:29:02,078
one second on a 60 FPS machine right if

694
00:29:00,669 --> 00:29:02,979
we want to do that kind of plan than

695
00:29:02,078 --> 00:29:06,148
what we would say is well our

696
00:29:02,979 --> 00:29:15,068
acquisition amount is going to be one

697
00:29:06,148 --> 00:29:17,558
sixtieth of a second right and our our

698
00:29:15,068 --> 00:29:20,259
preservation count is going to be the

699
00:29:17,558 --> 00:29:22,088
opposite of that right so what we would

700
00:29:20,259 --> 00:29:24,669
also know here is that generally

701
00:29:22,088 --> 00:29:26,739
speaking we could say that our

702
00:29:24,669 --> 00:29:31,859
preservation amount is just going to be

703
00:29:26,739 --> 00:29:34,358
the sort of complement of whatever the

704
00:29:31,858 --> 00:29:37,689
the acquisition around to so we preserve

705
00:29:34,358 --> 00:29:39,038
whatever we don't acquire and so that's

706
00:29:37,690 --> 00:29:40,599
just another way of saying look we've

707
00:29:39,038 --> 00:29:42,038
got some of that we're gonna keep or

708
00:29:40,598 --> 00:29:44,108
some of that we're gonna add in we'll

709
00:29:42,038 --> 00:29:50,278
start and just make those two values and

710
00:29:44,108 --> 00:29:56,439
I'll note them here waiting for new rays

711
00:29:50,278 --> 00:29:59,078
waiting for old irradiance right so then

712
00:29:56,440 --> 00:30:02,019
when we have our should accumulate here

713
00:29:59,078 --> 00:30:03,848
I don't know that we really want should

714
00:30:02,019 --> 00:30:05,769
accumulate to even be there because I

715
00:30:03,848 --> 00:30:08,229
think we're sort of having this either

716
00:30:05,769 --> 00:30:10,628
way so I think if we have solution

717
00:30:08,229 --> 00:30:14,588
accumulating on all we really need to do

718
00:30:10,628 --> 00:30:18,519
here is say it's to set these values

719
00:30:14,588 --> 00:30:21,068
right so if we're trying to accumulate

720
00:30:18,519 --> 00:30:23,848
and our accumulation count is less than

721
00:30:21,068 --> 00:30:26,798
the amount that we wanted to do right

722
00:30:23,848 --> 00:30:29,769
then what we do is we just set it so our

723
00:30:26,798 --> 00:30:32,138
irradiance acquisition C is going to be

724
00:30:29,769 --> 00:30:32,410
1 over whatever this total acquisition

725
00:30:32,138 --> 00:30:35,769
can

726
00:30:32,410 --> 00:30:38,680
is supposed to be and then our acute

727
00:30:35,769 --> 00:30:42,009
irradiance preservation see right is

728
00:30:38,680 --> 00:30:43,960
just going to be one and so we keep

729
00:30:42,009 --> 00:30:45,910
whatever the old value is and week so

730
00:30:43,960 --> 00:30:47,740
it's not a moving average we keep

731
00:30:45,910 --> 00:30:49,570
whatever the old amount that we put in

732
00:30:47,740 --> 00:30:53,319
there is and we're just adding every

733
00:30:49,569 --> 00:30:56,439
time right to do a smooth accumulation

734
00:30:53,319 --> 00:30:58,779
gap on the other hand we're done then we

735
00:30:56,440 --> 00:31:01,620
just say oh well actually our

736
00:30:58,779 --> 00:31:04,180
acquisition see and in fact I suppose

737
00:31:01,619 --> 00:31:06,309
this can stay our preservation C is

738
00:31:04,180 --> 00:31:10,690
always one our radiance acquisition is

739
00:31:06,309 --> 00:31:12,579
either right a amount to contribute or

740
00:31:10,690 --> 00:31:14,680
if we're done accumulating we just set

741
00:31:12,579 --> 00:31:18,579
it to zero so this is if we want take a

742
00:31:14,680 --> 00:31:20,380
long-term average over 5000 frames to

743
00:31:18,579 --> 00:31:21,909
see what the result is just to see what

744
00:31:20,380 --> 00:31:25,150
whether the lighting converges to

745
00:31:21,910 --> 00:31:26,769
something stable right and so that's all

746
00:31:25,150 --> 00:31:29,320
we'd have to do there because now now we

747
00:31:26,769 --> 00:31:30,849
don't need this extra baggage when we do

748
00:31:29,319 --> 00:31:33,220
compute light propagation we can just

749
00:31:30,849 --> 00:31:35,469
say look the preservation will already

750
00:31:33,220 --> 00:31:39,640
have been factored in so it's really

751
00:31:35,470 --> 00:31:41,980
just acquisition for you now right and

752
00:31:39,640 --> 00:31:43,810
off you go now the problem that we will

753
00:31:41,980 --> 00:31:45,339
have here is that the way that we're

754
00:31:43,809 --> 00:31:51,099
doing our acquisition and our

755
00:31:45,339 --> 00:31:55,029
preservation we probably want to factor

756
00:31:51,099 --> 00:31:57,339
this in in the reverse order so we may

757
00:31:55,029 --> 00:32:01,299
want to do this a little bit more

758
00:31:57,339 --> 00:32:02,980
Squinkie in the future the reason I say

759
00:32:01,299 --> 00:32:04,569
that is because the simplest way to do

760
00:32:02,980 --> 00:32:06,940
this is now once we have this

761
00:32:04,569 --> 00:32:09,069
information what we would do is loop

762
00:32:06,940 --> 00:32:11,049
over all of the light probes and knock

763
00:32:09,069 --> 00:32:14,319
them down by the preservation

764
00:32:11,049 --> 00:32:16,690
coefficient right so what we'd want to

765
00:32:14,319 --> 00:32:20,289
do is say all right for each probe index

766
00:32:16,690 --> 00:32:23,410
here as we loop over the light probe

767
00:32:20,289 --> 00:32:26,379
count that we have so this is going to

768
00:32:23,410 --> 00:32:27,820
be in the you know commands here but I'm

769
00:32:26,380 --> 00:32:30,090
gonna actually just make that be a local

770
00:32:27,819 --> 00:32:30,089
variable

771
00:32:34,429 --> 00:32:42,419
and I'm gonna grab these other things

772
00:32:36,898 --> 00:32:43,768
out of here so here we've got our our

773
00:32:42,419 --> 00:32:47,819
light preposition air light Berber

774
00:32:43,769 --> 00:32:52,528
radiance so probe pee I'm gonna do probe

775
00:32:47,818 --> 00:32:56,338
count probe that's probe probe pee and

776
00:32:52,528 --> 00:33:00,568
our light probe irradiance and this will

777
00:32:56,338 --> 00:33:01,588
be our probe I or something right and so

778
00:33:00,568 --> 00:33:03,118
these will just pull these out into

779
00:33:01,588 --> 00:33:06,448
local variables so that they're easier

780
00:33:03,118 --> 00:33:08,278
to see and type and I'll take the probe

781
00:33:06,449 --> 00:33:11,099
position here and I'll take the light

782
00:33:08,278 --> 00:33:13,648
print irradiance here and so what I'd

783
00:33:11,098 --> 00:33:21,418
like to do is I'd like to go ahead and

784
00:33:13,648 --> 00:33:23,968
make this knock down the irradiance of

785
00:33:21,419 --> 00:33:26,609
each of the lights in question right so

786
00:33:23,969 --> 00:33:31,769
I'd like to say you know probe I

787
00:33:26,608 --> 00:33:39,898
oops like zero x equals irradiance

788
00:33:31,769 --> 00:33:41,519
preservation C and off we go right so I

789
00:33:39,898 --> 00:33:43,978
just want to knock those down by

790
00:33:41,519 --> 00:33:46,709
whatever the preservation value is and

791
00:33:43,979 --> 00:33:50,419
when I was trying to see before when I

792
00:33:46,709 --> 00:33:50,419
say you know and I'll put it to do here

793
00:34:00,640 --> 00:34:06,009
so we probably don't actually want to do

794
00:34:03,970 --> 00:34:09,220
this here it's going to be slower

795
00:34:06,009 --> 00:34:10,690
I would imagine to take the light probes

796
00:34:09,219 --> 00:34:12,699
and multiply them first by the

797
00:34:10,690 --> 00:34:16,358
preservation coefficient then do the

798
00:34:12,699 --> 00:34:17,949
light transport and then come back loop

799
00:34:16,358 --> 00:34:19,690
over the light probes again to voxel

800
00:34:17,949 --> 00:34:21,549
eyes them what we would rather do is

801
00:34:19,690 --> 00:34:24,070
multiply by the irradiance preservation

802
00:34:21,550 --> 00:34:26,320
coefficient when we actually do the

803
00:34:24,070 --> 00:34:28,720
voxel ization right but the problem is

804
00:34:26,320 --> 00:34:31,899
we have the irradiance acquisition value

805
00:34:28,719 --> 00:34:34,809
at you know baked in there

806
00:34:31,898 --> 00:34:37,480
and so what we probably want to do is

807
00:34:34,809 --> 00:34:40,599
take the irradiance preservation

808
00:34:37,480 --> 00:34:43,059
coefficient multiplied in the inverse of

809
00:34:40,599 --> 00:34:45,239
that to the irradiance acquisition so

810
00:34:43,059 --> 00:34:49,449
that we can just add in to the

811
00:34:45,239 --> 00:34:52,358
unadulterated values first and then do

812
00:34:49,449 --> 00:34:55,539
this to the accumulated values right

813
00:34:52,358 --> 00:34:57,549
because remember we should presumably be

814
00:34:55,539 --> 00:34:59,739
able to figure out how we would do that

815
00:34:57,550 --> 00:35:01,420
waiting now maybe we can't because

816
00:34:59,739 --> 00:35:04,989
things don't always distribute over sums

817
00:35:01,420 --> 00:35:06,220
the way we would like in fact I guess we

818
00:35:04,989 --> 00:35:09,519
could figure out whether we can right

819
00:35:06,219 --> 00:35:11,529
now but there probably is some way to do

820
00:35:09,519 --> 00:35:13,239
it is all I'm trying to say without

821
00:35:11,530 --> 00:35:15,480
creating a separate buffer let's take a

822
00:35:13,239 --> 00:35:15,479
look

823
00:35:34,030 --> 00:35:40,250
so let's assume that we want to

824
00:35:36,469 --> 00:35:42,739
accumulate these probe values and so

825
00:35:40,250 --> 00:35:45,800
what we have here is we have a

826
00:35:42,739 --> 00:35:49,129
preservation value right and we want to

827
00:35:45,800 --> 00:35:51,650
add an accumulation value and that's

828
00:35:49,130 --> 00:35:55,280
going to equal our new probe value right

829
00:35:51,650 --> 00:35:57,829
and so this is the the equation that

830
00:35:55,280 --> 00:35:59,240
we're trying to create and we know that

831
00:35:57,829 --> 00:36:01,670
we don't want to just add these two

832
00:35:59,239 --> 00:36:04,879
together we want the these contributions

833
00:36:01,670 --> 00:36:08,750
to be weighted in a particular way and

834
00:36:04,880 --> 00:36:12,289
so our goal here is we really what we

835
00:36:08,750 --> 00:36:15,440
want is not this equation we want the

836
00:36:12,289 --> 00:36:18,380
new probe value to be some kind of a

837
00:36:15,440 --> 00:36:21,070
weighting value so effectively we want

838
00:36:18,380 --> 00:36:24,289
and we know that that's it's a it's

839
00:36:21,070 --> 00:36:27,740
balanced I guess right we we pretty much

840
00:36:24,289 --> 00:36:34,279
know that what we actually want is you

841
00:36:27,739 --> 00:36:36,889
know T times P plus 1 minus T times a we

842
00:36:34,280 --> 00:36:38,150
we do want like a linear blend in here

843
00:36:36,889 --> 00:36:40,759
where we're saying we're going to keep

844
00:36:38,150 --> 00:36:42,440
you know 0.95 of this thing and so we

845
00:36:40,760 --> 00:36:44,380
want to add point 5 of this other thing

846
00:36:42,440 --> 00:36:47,358
right every step of the way

847
00:36:44,380 --> 00:36:51,369
so we know that we want something like

848
00:36:47,358 --> 00:36:55,400
this but the problem is rather than

849
00:36:51,369 --> 00:36:58,160
having each of these values what we

850
00:36:55,400 --> 00:37:02,240
actually want to know is is it possible

851
00:36:58,159 --> 00:37:05,659
to produce the value TP plus 1 minus T

852
00:37:02,239 --> 00:37:11,929
times a is it possible to produce this

853
00:37:05,659 --> 00:37:14,239
value right by instead computing a

854
00:37:11,929 --> 00:37:17,598
different form an equation of a

855
00:37:14,239 --> 00:37:21,289
different form which is just some other

856
00:37:17,599 --> 00:37:25,789
value right like with let's say we have

857
00:37:21,289 --> 00:37:28,279
a U and V values or something right some

858
00:37:25,789 --> 00:37:32,088
other value u that we're going to

859
00:37:28,280 --> 00:37:36,170
multiply these things by can we multiply

860
00:37:32,088 --> 00:37:43,219
at the end by U and instead compute P

861
00:37:36,170 --> 00:37:47,740
plus V times a right and so is it

862
00:37:43,219 --> 00:37:51,339
possible to get this result out of this

863
00:37:47,739 --> 00:37:54,099
equation when we can control U and V but

864
00:37:51,340 --> 00:37:56,410
not P an a right so we only get to set

865
00:37:54,099 --> 00:38:02,529
those two values these are whatever they

866
00:37:56,409 --> 00:38:06,670
are right that's the question and so you

867
00:38:02,530 --> 00:38:09,340
know I guess I would say looking at the

868
00:38:06,670 --> 00:38:16,059
way that this multiplies out what you

869
00:38:09,340 --> 00:38:19,960
see is TP plus 1 minus T a equals u P

870
00:38:16,059 --> 00:38:23,670
plus UV a right that's the distribution

871
00:38:19,960 --> 00:38:27,159
there and if we look at what these

872
00:38:23,670 --> 00:38:32,070
values end up being it looks to me like

873
00:38:27,159 --> 00:38:35,920
we would need u to be equal to T right

874
00:38:32,070 --> 00:38:44,650
it would seem and we would need u times

875
00:38:35,920 --> 00:38:48,550
V to be equal to 1 minus T right and so

876
00:38:44,650 --> 00:38:50,980
looking at that equation I don't you

877
00:38:48,550 --> 00:38:53,019
know my maths as the British would say

878
00:38:50,980 --> 00:38:55,869
is pretty weak but looking at that

879
00:38:53,019 --> 00:38:57,820
equation that suggests to me that if u v

880
00:38:55,869 --> 00:39:01,510
is focus opposed to be equal to 1 minus

881
00:38:57,820 --> 00:39:04,300
T and I know you has to equal T then

882
00:39:01,510 --> 00:39:08,260
that means that T times V equals 1 minus

883
00:39:04,300 --> 00:39:14,350
T right and so solving for V I would get

884
00:39:08,260 --> 00:39:17,500
1 minus T over T right and so if I

885
00:39:14,349 --> 00:39:21,670
didn't screw that up it means that we

886
00:39:17,500 --> 00:39:25,389
could set our values thus so that we

887
00:39:21,670 --> 00:39:31,358
produce a U and V value that can be used

888
00:39:25,389 --> 00:39:33,368
in this way right which allows us to

889
00:39:31,358 --> 00:39:36,519
multiply by one thing after the fact

890
00:39:33,369 --> 00:39:43,450
while simultaneously just summing using

891
00:39:36,519 --> 00:39:47,108
this value right so I think you know I I

892
00:39:43,449 --> 00:39:50,829
would argue not strenuously because like

893
00:39:47,108 --> 00:39:52,329
I said I'm not really a maths person but

894
00:39:50,829 --> 00:39:54,699
I would argue that that's a reasonable

895
00:39:52,329 --> 00:39:56,019
approach because the math seems to back

896
00:39:54,699 --> 00:39:58,629
up that there's really no reason I would

897
00:39:56,019 --> 00:40:00,070
have to do it the other way so I would

898
00:39:58,630 --> 00:40:01,509
think that if we started out with an

899
00:40:00,070 --> 00:40:04,899
irradiance acquisition in a Radian

900
00:40:01,509 --> 00:40:06,789
preservation see here that's the rates

901
00:40:04,898 --> 00:40:08,078
that we want to do it if I wanted and

902
00:40:06,789 --> 00:40:13,659
call it something else which is the

903
00:40:08,079 --> 00:40:16,809
irradiance blend factor right and this

904
00:40:13,659 --> 00:40:18,219
is effectively our T value in here we're

905
00:40:16,809 --> 00:40:20,349
basically saying this is how much

906
00:40:18,219 --> 00:40:23,199
preservation we want in a sense right

907
00:40:20,349 --> 00:40:24,519
would be what that is so maybe I

908
00:40:23,199 --> 00:40:26,528
actually start with irradiance

909
00:40:24,518 --> 00:40:31,468
preservation see as the thing we want to

910
00:40:26,528 --> 00:40:31,469
do and I'm gonna set that to sorry

911
00:40:33,929 --> 00:40:40,479
fifty-nine sixtieths right if that's the

912
00:40:37,418 --> 00:40:45,038
preservation factor then what we would

913
00:40:40,478 --> 00:40:49,478
end up with is irradiance Glenview and

914
00:40:45,039 --> 00:40:52,709
irradiance blend v looking at these

915
00:40:49,478 --> 00:40:55,718
equations here the outermost

916
00:40:52,708 --> 00:41:00,808
preservation value is going to have to

917
00:40:55,719 --> 00:41:03,278
be equal to that right so this this is

918
00:41:00,809 --> 00:41:05,109
straightly carried through this one is

919
00:41:03,278 --> 00:41:08,798
one minus that value over the value

920
00:41:05,108 --> 00:41:27,188
right so here we have and in fact i

921
00:41:08,798 --> 00:41:29,199
guess i could write it this way i'm

922
00:41:27,188 --> 00:41:33,478
going to actually call this the t

923
00:41:29,199 --> 00:41:33,479
irradiance preservation right

924
00:42:22,610 --> 00:42:31,289
makes sense so that just is my way of

925
00:42:27,659 --> 00:42:34,500
avoiding this problem entirely and so if

926
00:42:31,289 --> 00:42:38,130
we want to change how this is phrased

927
00:42:34,500 --> 00:42:39,480
here all I have to do is say okay since

928
00:42:38,130 --> 00:42:41,519
we're gonna multiply at the end by

929
00:42:39,480 --> 00:42:44,190
something that's something is just one I

930
00:42:41,519 --> 00:42:47,639
don't ever want you to change it and the

931
00:42:44,190 --> 00:42:49,200
acquisition value that we actually were

932
00:42:47,639 --> 00:42:53,369
using before that's the amount we

933
00:42:49,199 --> 00:42:56,939
multiply in again not going to be set

934
00:42:53,369 --> 00:43:01,859
that same way so you know when doing

935
00:42:56,940 --> 00:43:07,860
long term accumulation for testing we

936
00:43:01,860 --> 00:43:15,349
turn off the linear blend and instead

937
00:43:07,860 --> 00:43:15,349
just set the coefficients for long time

938
00:43:15,710 --> 00:43:23,460
right so I think this very very simple

939
00:43:19,949 --> 00:43:26,339
set of things allows us to do everything

940
00:43:23,460 --> 00:43:30,119
we want to do and this part here now can

941
00:43:26,340 --> 00:43:33,750
just be ignored right basically we don't

942
00:43:30,119 --> 00:43:35,549
have to care we can just at the end when

943
00:43:33,750 --> 00:43:37,050
we want to go through and do something

944
00:43:35,550 --> 00:43:40,410
with their light switch you know we do

945
00:43:37,050 --> 00:43:43,740
want to do you know here somewhere after

946
00:43:40,409 --> 00:43:45,179
we do our computations once we want to

947
00:43:43,739 --> 00:43:46,619
actually Vox lies these things or

948
00:43:45,179 --> 00:43:51,500
whatever gonna do with them we can do

949
00:43:46,619 --> 00:43:51,500
that blend value here

950
00:43:52,340 --> 00:44:01,860
and that way when we load them into the

951
00:43:59,730 --> 00:44:03,000
cache for vocalization or whatever we're

952
00:44:01,860 --> 00:44:05,160
gonna do to actually output them the

953
00:44:03,000 --> 00:44:08,369
graphics card at the same time we can do

954
00:44:05,159 --> 00:44:13,429
that blending that way we're not doing

955
00:44:08,369 --> 00:44:13,429
the blending as part of some you know

956
00:44:13,849 --> 00:44:18,329
some separate paths just waste time

957
00:44:16,380 --> 00:44:20,070
pulling them into the cache and then out

958
00:44:18,329 --> 00:44:21,840
of the cache again or whatever else

959
00:44:20,070 --> 00:44:23,340
right because we know where you need

960
00:44:21,840 --> 00:44:24,960
those values to come into registers for

961
00:44:23,340 --> 00:44:26,100
other purposes in a minute so we might

962
00:44:24,960 --> 00:44:29,309
as well just do the multiplication when

963
00:44:26,099 --> 00:44:32,039
they're already there and hot so that I

964
00:44:29,309 --> 00:44:34,049
think is pretty straightforward now all

965
00:44:32,039 --> 00:44:35,670
we need to do is decide okay yeah how

966
00:44:34,050 --> 00:44:39,150
are these things getting lined up and

967
00:44:35,670 --> 00:44:43,289
blended in and Voxx lized once we have

968
00:44:39,150 --> 00:44:45,690
these light probes and the answer to

969
00:44:43,289 --> 00:44:49,349
that question I think in this case is

970
00:44:45,690 --> 00:44:52,289
just well if we're looping over each

971
00:44:49,349 --> 00:44:53,909
light probe it's pretty cheap for us to

972
00:44:52,289 --> 00:44:56,159
voxel eyes it given the fact that we

973
00:44:53,909 --> 00:44:58,170
already not cheap but we already know

974
00:44:56,159 --> 00:45:00,899
how to do it because we wrote the voxel

975
00:44:58,170 --> 00:45:04,530
ization code to do this like add probe

976
00:45:00,900 --> 00:45:07,289
to spatial index stuff right so you can

977
00:45:04,530 --> 00:45:09,990
kind of see here where we're you know

978
00:45:07,289 --> 00:45:13,320
putting these these probe pieces of

979
00:45:09,989 --> 00:45:14,369
probe information into the voxel you can

980
00:45:13,320 --> 00:45:17,850
sort of see how we're doing that here

981
00:45:14,369 --> 00:45:20,880
and again that spatial index is

982
00:45:17,849 --> 00:45:22,589
something that I toyed with actually

983
00:45:20,880 --> 00:45:24,269
just sending down the spatial index and

984
00:45:22,590 --> 00:45:25,890
the reason we didn't do that is because

985
00:45:24,269 --> 00:45:27,920
we were looking at how expensive it

986
00:45:25,889 --> 00:45:30,059
would be to blend these probes together

987
00:45:27,920 --> 00:45:32,309
and it's you know it's pretty expensive

988
00:45:30,059 --> 00:45:34,679
per pixel to do that sort of stuff I

989
00:45:32,309 --> 00:45:36,659
feel like but it's always tempting to

990
00:45:34,679 --> 00:45:39,779
underestimate how fast GPUs are they're

991
00:45:36,659 --> 00:45:42,779
kind of incredibly fast and the fact

992
00:45:39,780 --> 00:45:44,340
that right now sampling from all of

993
00:45:42,780 --> 00:45:46,440
those voxels is apparently just a

994
00:45:44,340 --> 00:45:49,289
non-issue for the GPU it's really

995
00:45:46,440 --> 00:45:51,000
bizarre like how fast it is when you

996
00:45:49,289 --> 00:45:52,889
think about it and just looking at you

997
00:45:51,000 --> 00:45:54,269
know the fact that it's sampling from

998
00:45:52,889 --> 00:45:57,000
six voxels and try linearly

999
00:45:54,269 --> 00:46:01,980
interpolating all six voxels like right

1000
00:45:57,000 --> 00:46:04,409
now right is kind of ridiculous so you

1001
00:46:01,980 --> 00:46:07,340
know when we think about that kind of

1002
00:46:04,409 --> 00:46:07,339
going forwards right

1003
00:46:07,699 --> 00:46:14,429
it's kind of interesting what's going on

1004
00:46:09,900 --> 00:46:17,329
there Hoss again oh right that's the

1005
00:46:14,429 --> 00:46:20,789
edge of the lighting voxel right there

1006
00:46:17,329 --> 00:46:22,259
ha ha ha so at the edge of the lighting

1007
00:46:20,789 --> 00:46:24,090
voxel which you normally can't see if

1008
00:46:22,260 --> 00:46:26,850
you don't go the debug camera it just

1009
00:46:24,090 --> 00:46:29,570
it's a clamped edge so it just continues

1010
00:46:26,849 --> 00:46:32,190
to be lit for the rest of the place

1011
00:46:29,570 --> 00:46:35,430
continues to be lit man just like my

1012
00:46:32,190 --> 00:46:38,670
Friday nights um so anyway I think the

1013
00:46:35,429 --> 00:46:41,129
idea here is just that we really don't

1014
00:46:38,670 --> 00:46:44,220
know what we want to do here it's again

1015
00:46:41,130 --> 00:46:46,380
it's an experience with just how fast

1016
00:46:44,219 --> 00:46:48,659
GPUs can be in some of these

1017
00:46:46,380 --> 00:46:50,250
circumstances because maybe we just want

1018
00:46:48,659 --> 00:46:54,149
to keep what we were doing with our

1019
00:46:50,250 --> 00:46:55,619
spatial our probe spatial indexing I you

1020
00:46:54,150 --> 00:47:00,950
know I really I really just don't know

1021
00:46:55,619 --> 00:47:00,949
it's it's really hard to say so um I

1022
00:47:03,110 --> 00:47:09,960
think I'm gonna say let's just use the

1023
00:47:06,599 --> 00:47:13,170
spatial index that we have first we're

1024
00:47:09,960 --> 00:47:17,190
gonna use the spatial index to fill the

1025
00:47:13,170 --> 00:47:18,420
voxel and then when the time comes to

1026
00:47:17,190 --> 00:47:19,980
start looking at the sampling again

1027
00:47:18,420 --> 00:47:21,329
we'll figure out whether really what we

1028
00:47:19,980 --> 00:47:24,210
should be doing is just transmitting the

1029
00:47:21,329 --> 00:47:27,329
index voxel down and letting the GPU

1030
00:47:24,210 --> 00:47:28,500
deal with it right because based on

1031
00:47:27,329 --> 00:47:30,269
those sampling artifacts I was seeing

1032
00:47:28,500 --> 00:47:32,550
I'm thinking that we probably do want to

1033
00:47:30,269 --> 00:47:38,599
do that because there's a lot of reasons

1034
00:47:32,550 --> 00:47:38,600
why we would want to do that so you know

1035
00:47:38,659 --> 00:47:44,089
we'll we'll cross we'll burn that bridge

1036
00:47:41,369 --> 00:47:46,469
when we come to it so if we now go to

1037
00:47:44,090 --> 00:47:48,600
how this was working you can see this

1038
00:47:46,469 --> 00:47:49,980
add probe to spatial indexed stuff what

1039
00:47:48,599 --> 00:47:52,289
was that well that was the thing we

1040
00:47:49,980 --> 00:47:56,130
wrote where we have a light Pro spatial

1041
00:47:52,289 --> 00:47:58,889
index in here we can put in all of the

1042
00:47:56,130 --> 00:48:02,610
light probes and where they actually are

1043
00:47:58,889 --> 00:48:06,329
right and so if I was to call are the

1044
00:48:02,610 --> 00:48:08,099
already existing thing that that does

1045
00:48:06,329 --> 00:48:09,779
this right the ad preparation on this

1046
00:48:08,099 --> 00:48:14,880
and I don't actually know if we ever

1047
00:48:09,780 --> 00:48:16,860
called it we don't right so if we want

1048
00:48:14,880 --> 00:48:19,320
to do this I want to do ad probe the

1049
00:48:16,860 --> 00:48:22,829
spatial index right if I want to do

1050
00:48:19,320 --> 00:48:31,980
what I can do is here where we loop over

1051
00:48:22,829 --> 00:48:33,989
all of these I want to add them in the

1052
00:48:31,980 --> 00:48:35,880
spatial index here now what you might be

1053
00:48:33,989 --> 00:48:36,869
saying to me you might be saying KC and

1054
00:48:35,880 --> 00:48:39,510
you'd be using that because it's my

1055
00:48:36,869 --> 00:48:42,150
first name obviously um it'd be weird if

1056
00:48:39,510 --> 00:48:44,400
you said you know Brian or something cuz

1057
00:48:42,150 --> 00:48:45,539
that's not me but if you were talking to

1058
00:48:44,400 --> 00:48:47,789
me and use my first name and said well

1059
00:48:45,539 --> 00:48:49,349
KC you just said we don't want to make a

1060
00:48:47,789 --> 00:48:52,079
pre pass over these things which is not

1061
00:48:49,349 --> 00:48:54,230
really what I said remember I don't want

1062
00:48:52,079 --> 00:48:57,420
to pull the irradiance into the cache

1063
00:48:54,230 --> 00:48:59,519
this is pulling the positions into the

1064
00:48:57,420 --> 00:49:00,840
cache which is a separate array and it's

1065
00:48:59,519 --> 00:49:02,340
a separate array for a reason it's

1066
00:49:00,840 --> 00:49:03,870
because that way it doesn't pull the

1067
00:49:02,340 --> 00:49:05,280
irradiance into the cache if I don't

1068
00:49:03,869 --> 00:49:07,529
actually want to look at the irradiance

1069
00:49:05,280 --> 00:49:09,450
so when we add these probes the spatial

1070
00:49:07,530 --> 00:49:11,160
index we're only pulling in just their

1071
00:49:09,449 --> 00:49:13,949
location because that's the only thing

1072
00:49:11,159 --> 00:49:15,480
we actually need so here what I can do

1073
00:49:13,949 --> 00:49:19,219
is I can say add this probe to spatial

1074
00:49:15,480 --> 00:49:21,599
index the the spatial index here is

1075
00:49:19,219 --> 00:49:26,759
called the spatial index I think just

1076
00:49:21,599 --> 00:49:30,119
spatial probe index sorry so I want to

1077
00:49:26,760 --> 00:49:34,230
do a dupes ad probe - spatial index I

1078
00:49:30,119 --> 00:49:35,880
want to add it like that you can see

1079
00:49:34,230 --> 00:49:38,670
that we've got which index we're talking

1080
00:49:35,880 --> 00:49:40,769
about so it's this one that's actually

1081
00:49:38,670 --> 00:49:43,650
you 16 here because we don't allow more

1082
00:49:40,769 --> 00:49:45,300
than 6 5 5 3 6 probes at the moment we

1083
00:49:43,650 --> 00:49:48,750
didn't have a probe min P and a probe

1084
00:49:45,300 --> 00:49:55,460
max P like I said we need to add that P

1085
00:49:48,750 --> 00:49:55,460
in here on something hmm

1086
00:50:05,858 --> 00:50:11,259
in an old sign so what we want to do

1087
00:50:09,159 --> 00:50:14,248
here is say okay we've got this probe I

1088
00:50:11,259 --> 00:50:16,838
feel like this probably should have

1089
00:50:14,248 --> 00:50:19,598
passed the probe position in here I

1090
00:50:16,838 --> 00:50:22,058
don't feel like the probe mimpi probe

1091
00:50:19,599 --> 00:50:23,499
machspeed thing makes sense because in

1092
00:50:22,059 --> 00:50:25,150
the event when you need to do a

1093
00:50:23,498 --> 00:50:27,968
tiebreaker you needed to load the

1094
00:50:25,150 --> 00:50:30,068
p-value in anyway so I feel like this is

1095
00:50:27,969 --> 00:50:33,389
kind of stupid and wrong so I feel like

1096
00:50:30,068 --> 00:50:36,998
what we actually want here is a probe P

1097
00:50:33,389 --> 00:50:38,909
like like this value right these should

1098
00:50:36,998 --> 00:50:42,399
have been derived at the at the head end

1099
00:50:38,909 --> 00:50:46,778
you know I'm saying so like I feel like

1100
00:50:42,400 --> 00:50:52,509
these two values so I think what we want

1101
00:50:46,778 --> 00:50:55,690
is probe P minus radius and probe P plus

1102
00:50:52,509 --> 00:50:57,818
radius again I'm saying to you is what

1103
00:50:55,690 --> 00:51:01,269
we actually want and so I feel like this

1104
00:50:57,818 --> 00:51:03,190
should be passed down like that because

1105
00:51:01,268 --> 00:51:05,679
we're gonna have to look this thing up

1106
00:51:03,190 --> 00:51:07,298
to compute those values anyway and then

1107
00:51:05,679 --> 00:51:11,108
this thing just goes ahead and grabs it

1108
00:51:07,298 --> 00:51:14,798
again for no reason right and so I think

1109
00:51:11,108 --> 00:51:17,739
what we want to do is say this probe we

1110
00:51:14,798 --> 00:51:21,639
should never actually have to query

1111
00:51:17,739 --> 00:51:23,289
right so like this value here right you

1112
00:51:21,639 --> 00:51:25,389
can see that this probe was only ever

1113
00:51:23,289 --> 00:51:27,519
used to get that and so I don't think we

1114
00:51:25,389 --> 00:51:29,858
want that we need to look up probes in

1115
00:51:27,518 --> 00:51:32,618
this case to see which one is best and

1116
00:51:29,858 --> 00:51:35,259
if we really didn't want to bite that

1117
00:51:32,619 --> 00:51:37,690
which maybe sometimes we would we might

1118
00:51:35,259 --> 00:51:39,998
find that that's too expensive in and of

1119
00:51:37,690 --> 00:51:42,068
itself actually and so if it turns out

1120
00:51:39,998 --> 00:51:45,009
that that's actually not not going to

1121
00:51:42,068 --> 00:51:48,489
work for us then what we could do as

1122
00:51:45,009 --> 00:51:52,478
well is just say look inside here we'll

1123
00:51:48,489 --> 00:51:54,130
store one extra f30 tube so basically in

1124
00:51:52,478 --> 00:51:58,798
sight you know right like you can

1125
00:51:54,130 --> 00:52:01,509
imagine going into the spatial index and

1126
00:51:58,798 --> 00:52:05,349
instead of just a you sixteen there's

1127
00:52:01,509 --> 00:52:07,748
also like a right and we would just look

1128
00:52:05,349 --> 00:52:10,059
to see like okay in this cell what was

1129
00:52:07,748 --> 00:52:14,828
the most missing I don't know which of

1130
00:52:10,059 --> 00:52:16,150
those is worse I suspect that doing it

1131
00:52:14,829 --> 00:52:17,589
the way we're doing it's probably okay

1132
00:52:16,150 --> 00:52:19,539
at the moment so we're gonna leave it

1133
00:52:17,588 --> 00:52:22,449
with that but you get the idea

1134
00:52:19,539 --> 00:52:25,809
so now if I look up one of these spatial

1135
00:52:22,449 --> 00:52:29,049
probes so I go ahead and grab group I'm

1136
00:52:25,809 --> 00:52:34,750
sorry it's actually probed why do I call

1137
00:52:29,050 --> 00:52:37,269
it probe B from P so if I say probe P of

1138
00:52:34,750 --> 00:52:38,920
light probe index that gives me

1139
00:52:37,269 --> 00:52:42,360
well in fact I guess I don't even need

1140
00:52:38,920 --> 00:52:42,360
to do it there stir it right in line

1141
00:52:43,230 --> 00:52:49,360
each probes radius needs to fill the

1142
00:52:47,079 --> 00:52:51,730
voxel to a certain extent and it's hard

1143
00:52:49,360 --> 00:52:55,269
to know how big we want that to

1144
00:52:51,730 --> 00:52:57,490
necessarily pee but if we look at how

1145
00:52:55,269 --> 00:53:00,309
we're you know talking about these

1146
00:52:57,489 --> 00:53:02,559
values at the moment if I look at add

1147
00:53:00,309 --> 00:53:04,809
probe to spatial index we can see here

1148
00:53:02,559 --> 00:53:08,409
is the get center of call actually

1149
00:53:04,809 --> 00:53:11,940
produces a world space center so you

1150
00:53:08,409 --> 00:53:14,379
know if we look here you can see us

1151
00:53:11,940 --> 00:53:16,900
actually adding the cell dimension in

1152
00:53:14,380 --> 00:53:19,630
this is producing like the center of

1153
00:53:16,900 --> 00:53:22,690
this voxel right like where it at where

1154
00:53:19,630 --> 00:53:26,410
we actually think the voxel actually is

1155
00:53:22,690 --> 00:53:28,030
if that makes sense and so when we

1156
00:53:26,409 --> 00:53:29,739
actually do this ad prep of spatial

1157
00:53:28,030 --> 00:53:31,750
index presumably the probe radius is

1158
00:53:29,739 --> 00:53:33,369
actually in world space and so we would

1159
00:53:31,750 --> 00:53:35,440
just say like how big do we actually

1160
00:53:33,369 --> 00:53:38,349
want it to be and at the moment we don't

1161
00:53:35,440 --> 00:53:40,389
really know we can tune this value and

1162
00:53:38,349 --> 00:53:42,099
it's just how much coverage it's

1163
00:53:40,389 --> 00:53:46,239
expensive because as the bigger we make

1164
00:53:42,099 --> 00:53:47,559
it the the costlier it is to to build

1165
00:53:46,239 --> 00:53:52,000
the voxel in the first place because

1166
00:53:47,559 --> 00:53:54,759
each probe has to fill that many voxels

1167
00:53:52,000 --> 00:53:58,389
so it is an expensive operation to do

1168
00:53:54,760 --> 00:54:00,940
but the bigger it is the better the

1169
00:53:58,389 --> 00:54:05,109
lighting in a sense because it adds sort

1170
00:54:00,940 --> 00:54:08,650
of a fill region around each of the

1171
00:54:05,110 --> 00:54:11,079
light probes that will contain lighting

1172
00:54:08,650 --> 00:54:15,099
even if there was no probe in that

1173
00:54:11,079 --> 00:54:16,210
particular voxel square right so I don't

1174
00:54:15,099 --> 00:54:17,699
know what that needs to be set to at the

1175
00:54:16,210 --> 00:54:19,840
moment I'm going to use a one meter

1176
00:54:17,699 --> 00:54:22,179
probe radius in all directions at the

1177
00:54:19,840 --> 00:54:25,150
moment and so that's what we're actually

1178
00:54:22,179 --> 00:54:27,449
gonna look at there but who knows right

1179
00:54:25,150 --> 00:54:30,340
this is all kind of pretty

1180
00:54:27,449 --> 00:54:32,139
seat-of-the-pants and we're gonna have

1181
00:54:30,340 --> 00:54:33,640
to sort of deal with all of the

1182
00:54:32,139 --> 00:54:39,309
consequences

1183
00:54:33,639 --> 00:54:41,289
as we go right alright so moving forward

1184
00:54:39,309 --> 00:54:42,670
yeah we're going to have to correct a

1185
00:54:41,289 --> 00:54:43,840
bunch of stuff cuz we removed that light

1186
00:54:42,670 --> 00:54:45,190
prim strut because we're just kind of

1187
00:54:43,840 --> 00:54:47,590
working with them directly out of the

1188
00:54:45,190 --> 00:54:50,079
gate here I also think that maybe the

1189
00:54:47,590 --> 00:54:51,309
spatial probe in next thing doesn't I

1190
00:54:50,079 --> 00:54:52,569
feel like that could just be welded

1191
00:54:51,309 --> 00:54:54,420
directly into the like solution I don't

1192
00:54:52,570 --> 00:54:57,099
know why we actually made it a separate

1193
00:54:54,420 --> 00:54:59,889
thing that was probably unnecessary but

1194
00:54:57,099 --> 00:55:02,559
you know we'll see so when we do our add

1195
00:54:59,889 --> 00:55:06,098
probe to spatial index that should sort

1196
00:55:02,559 --> 00:55:10,929
of put that into our voxel now when we

1197
00:55:06,099 --> 00:55:12,910
go later on again this now doesn't

1198
00:55:10,929 --> 00:55:14,169
really have to be done in that way and

1199
00:55:12,909 --> 00:55:16,719
the reason on that to be done in that

1200
00:55:14,170 --> 00:55:18,909
way is when we go to output our voxel

1201
00:55:16,719 --> 00:55:22,509
now if we want to what we could do is

1202
00:55:18,909 --> 00:55:24,819
say well why don't we just actually like

1203
00:55:22,510 --> 00:55:34,570
get rid of all this nonsense completely

1204
00:55:24,820 --> 00:55:36,490
right and go and in here let's just pull

1205
00:55:34,570 --> 00:55:41,200
out the light probe that actually

1206
00:55:36,489 --> 00:55:44,829
belongs in this thing right so what we

1207
00:55:41,199 --> 00:55:51,129
could do is say all right we've got you

1208
00:55:44,829 --> 00:55:54,699
know like crevo rants values that we

1209
00:55:51,130 --> 00:55:56,559
want to deal with here we want to do the

1210
00:55:54,699 --> 00:55:58,329
ear blend you thing but then after that

1211
00:55:56,559 --> 00:56:02,139
what we want to do is just you know pack

1212
00:55:58,329 --> 00:56:13,960
them up right so these values here would

1213
00:56:02,139 --> 00:56:19,118
just be kind of copied verbatim directly

1214
00:56:13,960 --> 00:56:21,809
into here I think uh well you know I I

1215
00:56:19,119 --> 00:56:24,400
lied that's not true so we do have the

1216
00:56:21,809 --> 00:56:26,949
problem of having to encode these things

1217
00:56:24,400 --> 00:56:30,880
so really we are going to need a

1218
00:56:26,949 --> 00:56:33,129
slightly different algorithm for that so

1219
00:56:30,880 --> 00:56:35,349
I guess what I will do here is I'll do

1220
00:56:33,130 --> 00:56:37,720
this slightly differently I'll save it

1221
00:56:35,349 --> 00:56:41,039
in here what we want to do is we want to

1222
00:56:37,719 --> 00:56:41,039
do a light pack right

1223
00:56:42,429 --> 00:56:59,919
because that's what actually wants to

1224
00:56:44,260 --> 00:57:01,890
happen here like so here's our

1225
00:56:59,920 --> 00:57:05,019
irradiance packing that we wants to do

1226
00:57:01,889 --> 00:57:07,500
and here's the values we actually want

1227
00:57:05,019 --> 00:57:07,500
to keep

1228
00:57:23,659 --> 00:57:27,259
so we need to generate an irradiance

1229
00:57:25,940 --> 00:57:29,179
connect function and that irradiance

1230
00:57:27,260 --> 00:57:30,560
packs function needs to somehow figure

1231
00:57:29,179 --> 00:57:33,469
out how it's going to represent light

1232
00:57:30,559 --> 00:57:34,909
values in that way right and so what

1233
00:57:33,469 --> 00:57:45,829
that will look like is something like

1234
00:57:34,909 --> 00:57:48,829
this we get in the light intensity value

1235
00:57:45,829 --> 00:57:51,380
this value is something between zero and

1236
00:57:48,829 --> 00:57:54,230
like the max light intensity right I

1237
00:57:51,380 --> 00:57:56,780
mean could be anything really so it's

1238
00:57:54,230 --> 00:57:59,179
not zero to one if it was we just call

1239
00:57:56,780 --> 00:58:01,850
this and be done basically so what we

1240
00:57:59,179 --> 00:58:05,949
need to do is produce a value where we

1241
00:58:01,849 --> 00:58:12,589
slide the magnitude into the Alpha and

1242
00:58:05,949 --> 00:58:15,859
everything else is sort of everything

1243
00:58:12,590 --> 00:58:17,660
else is is just treated as the color

1244
00:58:15,860 --> 00:58:20,660
balance right the proportion of the

1245
00:58:17,659 --> 00:58:22,789
colors so if we want to do that you know

1246
00:58:20,659 --> 00:58:26,029
the fastest thing probably to do in this

1247
00:58:22,789 --> 00:58:33,440
particular circumstance right is to just

1248
00:58:26,030 --> 00:58:35,570
say well you know we could even

1249
00:58:33,440 --> 00:58:37,130
Euclidean norm these things like we

1250
00:58:35,570 --> 00:58:39,440
could do just a squared

1251
00:58:37,130 --> 00:58:43,250
you know without square rooting we could

1252
00:58:39,440 --> 00:58:47,450
just do a squared version and then

1253
00:58:43,250 --> 00:58:50,050
square root we could use a one norm for

1254
00:58:47,449 --> 00:58:54,559
them we could just use the maximum value

1255
00:58:50,050 --> 00:59:01,190
I guess I would probably go with maximum

1256
00:58:54,559 --> 00:59:04,000
value just offhand so I think what I

1257
00:59:01,190 --> 00:59:07,840
would probably do is say you know

1258
00:59:04,000 --> 00:59:07,840
whatever the max value is

1259
00:59:27,489 --> 00:59:38,449
so I want the element maximum which I

1260
00:59:30,798 --> 00:59:40,369
don't think we actually have so anyway I

1261
00:59:38,449 --> 00:59:42,348
want the maximum value here so I'm gonna

1262
00:59:40,369 --> 00:59:45,680
assume it's X and then I'm gonna say

1263
00:59:42,349 --> 00:59:49,460
look if the maximum value is less than

1264
00:59:45,679 --> 01:00:03,618
light why we take it actually I guess I

1265
00:59:49,460 --> 01:00:06,798
could write it this way I mean that's

1266
01:00:03,619 --> 01:00:09,349
actually what we want right and so I

1267
01:00:06,798 --> 01:00:11,420
think I don't have a triplicate version

1268
01:00:09,349 --> 01:00:14,660
of that so I'll just you know sort of do

1269
01:00:11,420 --> 01:00:17,869
the Korean version so producing the max

1270
01:00:14,659 --> 01:00:21,649
value there if the maximum value you

1271
01:00:17,869 --> 01:00:25,190
know the result here will be zero if the

1272
01:00:21,650 --> 01:00:27,528
maximum value is greater than zero then

1273
01:00:25,190 --> 01:00:30,309
we can actually do the PAC otherwise we

1274
01:00:27,528 --> 01:00:33,278
can't and it's just going to remain zero

1275
01:00:30,309 --> 01:00:35,329
it has no intensity it has no intensity

1276
01:00:33,278 --> 01:00:38,568
so we look through here and we say all

1277
01:00:35,329 --> 01:00:40,940
right if the if there is a max intensity

1278
01:00:38,568 --> 01:00:45,500
then we can do the pack the pack is

1279
01:00:40,940 --> 01:00:54,740
going to be whatever the incoming value

1280
01:00:45,500 --> 01:01:00,289
was X Y Z these are the color balance

1281
01:00:54,739 --> 01:01:02,598
values and then that maximum value it

1282
01:01:00,289 --> 01:01:06,170
would be going in here we need to

1283
01:01:02,599 --> 01:01:08,289
balance these out right so we need to

1284
01:01:06,170 --> 01:01:11,119
encode these in a way that actually

1285
01:01:08,289 --> 01:01:13,069
works with the encoding which is

1286
01:01:11,119 --> 01:01:14,838
supposed to put the magnitude in here so

1287
01:01:13,068 --> 01:01:17,210
what that means is the maximum value has

1288
01:01:14,838 --> 01:01:19,460
to come out we kind of need the in max V

1289
01:01:17,210 --> 01:01:22,909
right so the end of max V is going to be

1290
01:01:19,460 --> 01:01:25,039
1 over the maximum value we need these

1291
01:01:22,909 --> 01:01:29,210
guys to sort of represent that

1292
01:01:25,039 --> 01:01:32,570
max V right and furthermore we also sort

1293
01:01:29,210 --> 01:01:37,190
of need this max the value now to be

1294
01:01:32,570 --> 01:01:39,380
encoded between two between two ferns

1295
01:01:37,190 --> 01:01:42,679
right as it were

1296
01:01:39,380 --> 01:01:45,829
we need that max V value to be relative

1297
01:01:42,679 --> 01:01:51,799
to max light intensity so this value

1298
01:01:45,829 --> 01:01:55,279
here we need that to sort of be we need

1299
01:01:51,800 --> 01:01:57,050
this to be bounded in that in that space

1300
01:01:55,280 --> 01:02:00,019
because it's going to be reinterpreted

1301
01:01:57,050 --> 01:02:05,180
in that space so the max value that

1302
01:02:00,019 --> 01:02:09,110
comes out can't be you know it can't be

1303
01:02:05,179 --> 01:02:12,440
higher than this and the number from 0

1304
01:02:09,110 --> 01:02:15,470
to 1 that we encode is going to be

1305
01:02:12,440 --> 01:02:19,070
reinterpreted as part of this so we need

1306
01:02:15,469 --> 01:02:21,199
the max value to basically be like

1307
01:02:19,070 --> 01:02:29,180
divided by the max and tensity

1308
01:02:21,199 --> 01:02:34,069
and we need it to be clamped right so we

1309
01:02:29,179 --> 01:02:41,269
kind of need in here you know this you

1310
01:02:34,070 --> 01:02:43,190
know alpha value so we need this alpha

1311
01:02:41,269 --> 01:02:45,230
value here we need this thing to be

1312
01:02:43,190 --> 01:02:46,970
reinterpreted in terms of what

1313
01:02:45,230 --> 01:02:50,000
percentage of the max light intensity it

1314
01:02:46,969 --> 01:02:52,159
is and then we also need that value to

1315
01:02:50,000 --> 01:02:55,400
be clamped because it can't go out of

1316
01:02:52,159 --> 01:02:56,960
the range of an 8-bit value right again

1317
01:02:55,400 --> 01:02:59,119
a lot of dancing around here that we

1318
01:02:56,960 --> 01:03:01,699
have to do but that's just you know the

1319
01:02:59,119 --> 01:03:03,619
nature of trying to pack HDR values and

1320
01:03:01,699 --> 01:03:09,289
we can do a much better job of this in

1321
01:03:03,619 --> 01:03:10,819
Cindy certainly so when it comes time to

1322
01:03:09,289 --> 01:03:13,820
optimize this stuff assuming this shows

1323
01:03:10,820 --> 01:03:20,680
up on the profile this and if this part

1324
01:03:13,820 --> 01:03:26,050
is slow right you know off we would go

1325
01:03:20,679 --> 01:03:26,049
so anyway let's go ahead and yeah

1326
01:03:32,409 --> 01:03:50,899
all right so I think what we want to do

1327
01:03:36,739 --> 01:03:53,569
here is not sure which order I want to

1328
01:03:50,900 --> 01:03:54,829
take these things and uh so I think let

1329
01:03:53,570 --> 01:03:59,150
me just finish what I was doing here

1330
01:03:54,829 --> 01:04:01,119
before we go any further though so we we

1331
01:03:59,150 --> 01:04:04,130
have a probe in NextEra we need to use

1332
01:04:01,119 --> 01:04:05,929
to look up which light source we're

1333
01:04:04,130 --> 01:04:11,110
actually talking about and what I may do

1334
01:04:05,929 --> 01:04:11,109
is actually grab that out first right

1335
01:04:15,820 --> 01:04:23,650
and so here we have each of the light

1336
01:04:20,599 --> 01:04:23,650
values in question

1337
01:04:34,559 --> 01:04:40,509
and I think now that's basically what I

1338
01:04:38,650 --> 01:04:41,950
need right so I need to look up the

1339
01:04:40,509 --> 01:04:44,710
probe index which we haven't actually

1340
01:04:41,949 --> 01:04:46,149
pulled out of the voxel but we will we

1341
01:04:44,710 --> 01:04:50,679
need the irradiance pack each of these

1342
01:04:46,150 --> 01:04:52,150
values and before we do we want to let

1343
01:04:50,679 --> 01:04:55,659
multiply them by the bun coefficient so

1344
01:04:52,150 --> 01:04:59,769
they reduce down right then we're just

1345
01:04:55,659 --> 01:05:03,429
gonna stuff them as you can see right

1346
01:04:59,768 --> 01:05:06,098
into here and so I think that's pretty

1347
01:05:03,429 --> 01:05:09,009
much all there is to that getting the

1348
01:05:06,099 --> 01:05:15,059
light probe value out since we have you

1349
01:05:09,009 --> 01:05:15,059
know the x y&amp;z here if we look up that

1350
01:05:15,420 --> 01:05:33,789
spatial index let me just see where

1351
01:05:21,400 --> 01:05:36,730
we're at here so get corner light index

1352
01:05:33,789 --> 01:05:40,690
I'm not really sure we have to go check

1353
01:05:36,730 --> 01:05:42,250
to see I don't even understand what get

1354
01:05:40,690 --> 01:05:44,579
corner light index is supposed to do

1355
01:05:42,250 --> 01:05:44,579
here

1356
01:06:07,248 --> 01:06:13,168
like I'm not sure why that's called get

1357
01:06:09,418 --> 01:06:14,129
corner light index I think that was

1358
01:06:13,168 --> 01:06:17,418
probably because we were thinking about

1359
01:06:14,130 --> 01:06:17,419
this in terms of like

1360
01:06:43,050 --> 01:06:53,110
yeah I mean it looks sort of like what

1361
01:06:47,079 --> 01:06:58,119
we were doing there is saying so let me

1362
01:06:53,110 --> 01:07:07,329
let me take a look here so when we do

1363
01:06:58,119 --> 01:07:09,429
and probe spatial index I'm not sure why

1364
01:07:07,329 --> 01:07:12,789
we're calling it get corner light I

1365
01:07:09,429 --> 01:07:14,559
don't quite understand because if you

1366
01:07:12,789 --> 01:07:16,630
look at what's actually happening it's

1367
01:07:14,559 --> 01:07:19,389
just figuring out what the closest one

1368
01:07:16,630 --> 01:07:22,059
is to the cell center so it's not the

1369
01:07:19,389 --> 01:07:28,389
corner light index it's the center light

1370
01:07:22,059 --> 01:07:36,369
index right and so then when you say

1371
01:07:28,389 --> 01:07:44,319
like when you say get probe lighting for

1372
01:07:36,369 --> 01:07:47,230
and you know hear you say cell P you

1373
01:07:44,320 --> 01:07:50,500
know this is all totally fine the

1374
01:07:47,230 --> 01:07:54,840
problem is that when you looked it up in

1375
01:07:50,500 --> 01:08:01,360
the first place and you wanted to know

1376
01:07:54,840 --> 01:08:04,360
right like so get probe lighting for for

1377
01:08:01,360 --> 01:08:06,760
example right when you map this into the

1378
01:08:04,360 --> 01:08:09,340
grid you didn't actually want it to give

1379
01:08:06,760 --> 01:08:15,310
you the grid cell you were in you wanted

1380
01:08:09,340 --> 01:08:19,949
it to give you which probe was the one

1381
01:08:15,309 --> 01:08:23,500
that is less than your spatial partition

1382
01:08:19,949 --> 01:08:27,278
position in each direction which cubes

1383
01:08:23,500 --> 01:08:28,989
Center is the next one down right so I

1384
01:08:27,279 --> 01:08:31,589
do feel like we have sort of a

1385
01:08:28,989 --> 01:08:34,778
fundamental stupidity happening here

1386
01:08:31,588 --> 01:08:38,588
this probably has to get fixed

1387
01:08:34,779 --> 01:08:41,350
and so I will fix it but it looks like

1388
01:08:38,588 --> 01:08:43,119
we've written this a little bit bogus ly

1389
01:08:41,350 --> 01:08:44,380
which is probably because we just kind

1390
01:08:43,119 --> 01:08:46,088
of wrote it to get one in there and we

1391
01:08:44,380 --> 01:08:50,319
didn't think it through as good as we

1392
01:08:46,088 --> 01:08:52,269
probably should have right so you know

1393
01:08:50,319 --> 01:08:55,509
I'm not gonna harsh on us too much but

1394
01:08:52,270 --> 01:08:56,350
it's not great so in here what we really

1395
01:08:55,509 --> 01:08:58,119
you know

1396
01:08:56,350 --> 01:08:59,890
really not calling this is not really

1397
01:08:58,119 --> 01:09:03,130
corner light I think that's just dumb

1398
01:08:59,890 --> 01:09:05,740
that that's what that that is but so

1399
01:09:03,130 --> 01:09:07,840
we're gonna say get corner light index

1400
01:09:05,739 --> 01:09:12,969
this is going to be you 16 that's like

1401
01:09:07,840 --> 01:09:15,279
you know probed index pointer here we're

1402
01:09:12,970 --> 01:09:22,300
gonna get that actually I guess I could

1403
01:09:15,279 --> 01:09:26,559
just do this and so we pass here the

1404
01:09:22,300 --> 01:09:36,579
solution s probe spatial index or

1405
01:09:26,560 --> 01:09:38,830
whatever it was called and then we need

1406
01:09:36,579 --> 01:09:41,590
the actual cell coordinates and those

1407
01:09:38,829 --> 01:09:45,689
coordinates we know are bounded right so

1408
01:09:41,590 --> 01:09:45,690
we know that we're not going to get

1409
01:09:48,449 --> 01:09:53,260
anything out of bouncer because we're

1410
01:09:50,800 --> 01:09:58,539
only iterating over voxels that actually

1411
01:09:53,260 --> 01:10:02,289
exist so in this case rank we go through

1412
01:09:58,539 --> 01:10:05,079
and we we are sending out basically the

1413
01:10:02,289 --> 01:10:08,170
values based on what we find in the box

1414
01:10:05,079 --> 01:10:12,159
any particular location and that's based

1415
01:10:08,170 --> 01:10:14,350
on the whatever yeah like whatever it is

1416
01:10:12,159 --> 01:10:16,149
the the voxel ization of the probes to

1417
01:10:14,350 --> 01:10:17,890
begin with tells us is there that's what

1418
01:10:16,149 --> 01:10:21,159
we send out for our actual irradiance

1419
01:10:17,890 --> 01:10:23,650
right and so I think that's sufficient

1420
01:10:21,159 --> 01:10:25,300
the only thing now is we wouldn't

1421
01:10:23,649 --> 01:10:27,939
actually get any light even if all of

1422
01:10:25,300 --> 01:10:29,500
that worked correctly because none of

1423
01:10:27,939 --> 01:10:32,079
these probes has any irradiance in them

1424
01:10:29,500 --> 01:10:35,229
and so one thing we knew would need to

1425
01:10:32,079 --> 01:10:37,960
do at some point is actually assign some

1426
01:10:35,229 --> 01:10:39,639
irradiance to these probes and again

1427
01:10:37,960 --> 01:10:43,480
that's actually something we can sort of

1428
01:10:39,640 --> 01:10:46,270
crib now from from this previous voxel

1429
01:10:43,479 --> 01:10:48,489
stuffing what we can do is we could do

1430
01:10:46,270 --> 01:10:50,980
the same thing with our light probes so

1431
01:10:48,489 --> 01:10:54,579
here where we actually kick the probes

1432
01:10:50,979 --> 01:10:57,909
down we can put in some debug code here

1433
01:10:54,579 --> 01:10:59,800
that actually stuffs the irradiance of

1434
01:10:57,909 --> 01:11:04,659
those light probes sort of based on the

1435
01:10:59,800 --> 01:11:07,570
same stuff right if you want to so we

1436
01:11:04,659 --> 01:11:11,340
can just kind of say like hey this light

1437
01:11:07,569 --> 01:11:11,340
PE right like maybe we go

1438
01:11:13,800 --> 01:11:19,300
and so we have this this debug light key

1439
01:11:16,989 --> 01:11:20,889
here we're gonna grab that out and and

1440
01:11:19,300 --> 01:11:23,350
when we come through here we can say

1441
01:11:20,890 --> 01:11:26,320
well let's find out where ever this

1442
01:11:23,350 --> 01:11:42,610
light probe actually is which is you

1443
01:11:26,319 --> 01:11:44,229
know something like this and so if we

1444
01:11:42,609 --> 01:11:46,210
actually know where this is then we can

1445
01:11:44,229 --> 01:11:47,909
use the exact same like debug light

1446
01:11:46,210 --> 01:11:50,670
situation here

1447
01:11:47,909 --> 01:11:55,779
we can compute this same light situation

1448
01:11:50,670 --> 01:11:59,050
and sort of use that to stuff the values

1449
01:11:55,779 --> 01:12:06,269
of our of our light probe instead right

1450
01:11:59,050 --> 01:12:06,270
so if I was to take like this let's say

1451
01:12:07,289 --> 01:12:12,640
and stuff that in here then this becomes

1452
01:12:10,270 --> 01:12:16,030
debug code we can use to stuff the light

1453
01:12:12,640 --> 01:12:18,160
probe irradiance values as well looking

1454
01:12:16,029 --> 01:12:20,679
at them here we could say well the light

1455
01:12:18,159 --> 01:12:22,479
preparation svali in this case is going

1456
01:12:20,680 --> 01:12:25,240
to be you know wherever the light

1457
01:12:22,479 --> 01:12:26,859
position was which is this - whatever

1458
01:12:25,239 --> 01:12:29,739
our world space position is which is

1459
01:12:26,859 --> 01:12:34,979
that the distance is still the same the

1460
01:12:29,739 --> 01:12:34,979
N value is still also the same right

1461
01:12:35,699 --> 01:12:45,579
know why that is written twice but that

1462
01:12:43,239 --> 01:12:46,960
was just bad code before so we take the

1463
01:12:45,579 --> 01:12:50,140
you know this is the direction to the

1464
01:12:46,960 --> 01:12:51,699
light source we normalize it because

1465
01:12:50,140 --> 01:12:54,490
we're going to use it in a second

1466
01:12:51,699 --> 01:12:57,039
we do the light coloration here we do

1467
01:12:54,489 --> 01:13:00,369
need that light our C value but we can

1468
01:12:57,039 --> 01:13:02,859
again move those things up here so these

1469
01:13:00,369 --> 01:13:04,750
two values we can share between the two

1470
01:13:02,859 --> 01:13:08,679
sets of debug code just like we share

1471
01:13:04,750 --> 01:13:10,329
the light value right and so we can

1472
01:13:08,680 --> 01:13:12,640
compute all of the lighting information

1473
01:13:10,329 --> 01:13:16,500
this way and then all we have to do is

1474
01:13:12,640 --> 01:13:20,110
when we come down here we can just stuff

1475
01:13:16,500 --> 01:13:23,409
whatever these values are here right

1476
01:13:20,109 --> 01:13:26,829
into our actual irradiance table

1477
01:13:23,409 --> 01:13:30,989
so for the light irradiance here we

1478
01:13:26,829 --> 01:13:30,989
would just a light probe a radiance

1479
01:13:35,319 --> 01:13:43,479
that's our irradiance table and each of

1480
01:13:42,130 --> 01:13:50,770
these just tells us how much light there

1481
01:13:43,479 --> 01:13:53,349
should be so in this case we have each

1482
01:13:50,770 --> 01:14:05,260
direction we've got a you know the west

1483
01:13:53,350 --> 01:14:07,720
east south north down up and now we just

1484
01:14:05,260 --> 01:14:11,789
need some idea of like what the light

1485
01:14:07,720 --> 01:14:11,789
color actually is which should be fine

1486
01:14:12,149 --> 01:14:41,019
because and that's something we can also

1487
01:14:32,979 --> 01:14:42,759
set up here so that gives us a way of

1488
01:14:41,020 --> 01:14:44,590
stuffing our light irradiance values at

1489
01:14:42,760 --> 01:14:46,750
the outset and we can stuff the light

1490
01:14:44,590 --> 01:14:48,550
I'm sorry the light probe irradiance

1491
01:14:46,750 --> 01:14:50,560
values we can stuff the light probe

1492
01:14:48,550 --> 01:14:53,650
irradiance values first then we've

1493
01:14:50,560 --> 01:14:55,090
oxidize them later and now we can see

1494
01:14:53,649 --> 01:14:56,259
whether that pipeline is working

1495
01:14:55,090 --> 01:14:58,630
properly because if it is working

1496
01:14:56,260 --> 01:15:02,440
properly we should get some sort of a

1497
01:14:58,630 --> 01:15:04,989
lighting sort of a crappy spherical

1498
01:15:02,439 --> 01:15:08,109
lighting thing like we had before just

1499
01:15:04,989 --> 01:15:09,849
stuffed in there right and so this way

1500
01:15:08,109 --> 01:15:12,939
we can sort of debug that process as

1501
01:15:09,850 --> 01:15:15,930
well now building spatial index for

1502
01:15:12,939 --> 01:15:20,049
these things I believe like I don't know

1503
01:15:15,930 --> 01:15:24,220
when we actually if we if we ever tried

1504
01:15:20,050 --> 01:15:26,260
this or not I don't think we did and so

1505
01:15:24,220 --> 01:15:28,150
if you look at like the spatial index

1506
01:15:26,260 --> 01:15:29,800
stuff one of the things about it is I

1507
01:15:28,149 --> 01:15:33,250
don't think anyone ever initializes it

1508
01:15:29,800 --> 01:15:35,020
right so we kind of have to actually set

1509
01:15:33,250 --> 01:15:36,229
this stuff now right if we want to use

1510
01:15:35,020 --> 01:15:38,960
this thing we're

1511
01:15:36,229 --> 01:15:40,129
have to actually set it to something so

1512
01:15:38,960 --> 01:15:42,020
when we come through here we're gonna

1513
01:15:40,130 --> 01:15:43,659
set each of these values and the light

1514
01:15:42,020 --> 01:15:46,489
index as well has to kind of be

1515
01:15:43,659 --> 01:15:49,909
allocated or you know pointed to

1516
01:15:46,488 --> 01:15:52,729
something or something right so when we

1517
01:15:49,909 --> 01:15:54,409
do init lighting that has to happen and

1518
01:15:52,729 --> 01:15:56,899
you know looking through here it

1519
01:15:54,409 --> 01:15:59,269
obviously doesn't so you know one thing

1520
01:15:56,899 --> 01:16:06,049
we have to do here is say all right the

1521
01:15:59,270 --> 01:16:08,590
light in next year that has to be pushed

1522
01:16:06,050 --> 01:16:13,760
on there and we need you know to know

1523
01:16:08,590 --> 01:16:15,440
what the what the voxel size is actually

1524
01:16:13,760 --> 01:16:17,449
going to be and I believe that's

1525
01:16:15,439 --> 01:16:19,219
something that's just hard coded at the

1526
01:16:17,449 --> 01:16:21,738
moment to what its maximum actually is

1527
01:16:19,220 --> 01:16:24,890
so you look up here you can see what it

1528
01:16:21,738 --> 01:16:25,399
is so we need the like the cubed version

1529
01:16:24,890 --> 01:16:27,980
of that

1530
01:16:25,399 --> 01:16:30,939
right so the light lookup Fox will dim

1531
01:16:27,979 --> 01:16:34,789
that's gonna have to happen three times

1532
01:16:30,939 --> 01:16:37,699
or three you know it's cubed that's how

1533
01:16:34,789 --> 01:16:39,500
much we need for our storage there and

1534
01:16:37,699 --> 01:16:41,149
then when we come through to the end

1535
01:16:39,500 --> 01:16:43,220
letting computation we need this stuff

1536
01:16:41,149 --> 01:16:47,019
to be set up right like someone has to

1537
01:16:43,220 --> 01:16:49,520
set it up that that voxel ization and

1538
01:16:47,020 --> 01:16:51,560
the first thing we would need to do is

1539
01:16:49,520 --> 01:16:55,640
actually clear it as well so we would

1540
01:16:51,560 --> 01:16:58,220
need to do a zero array and we would

1541
01:16:55,640 --> 01:17:01,310
need to clear out the size we expect to

1542
01:16:58,220 --> 01:17:03,500
use and then we would also need to set

1543
01:17:01,310 --> 01:17:07,160
all of those other values that that we

1544
01:17:03,500 --> 01:17:10,729
care about so all of this stuff here we

1545
01:17:07,159 --> 01:17:12,139
would need to update now the total cell

1546
01:17:10,729 --> 01:17:15,889
counts I don't know who's actually using

1547
01:17:12,140 --> 01:17:19,520
that but I'm assuming that we could set

1548
01:17:15,890 --> 01:17:22,789
that as well so no one's using it at the

1549
01:17:19,520 --> 01:17:25,150
moment but we could it probably is handy

1550
01:17:22,789 --> 01:17:25,149
anyway

1551
01:17:33,350 --> 01:17:40,680
so the total cell count here is always

1552
01:17:36,270 --> 01:17:43,320
just this and so we kind of know that

1553
01:17:40,680 --> 01:17:47,400
that you know it's something we can lean

1554
01:17:43,319 --> 01:17:57,929
on there so when we want to clear this

1555
01:17:47,399 --> 01:18:04,859
array we can just say like hey it's this

1556
01:17:57,930 --> 01:18:06,659
many right but we also then every frame

1557
01:18:04,859 --> 01:18:08,969
we could you know we don't know if

1558
01:18:06,659 --> 01:18:11,819
someone has adjusted this stuff so we

1559
01:18:08,970 --> 01:18:14,159
also need to set all of the values that

1560
01:18:11,819 --> 01:18:16,649
have to do with the voxel ization we

1561
01:18:14,159 --> 01:18:27,210
need those values to be set in here

1562
01:18:16,649 --> 01:18:28,829
right so all of this stuff has to get

1563
01:18:27,210 --> 01:18:30,359
set before we can use the voxel

1564
01:18:28,829 --> 01:18:32,640
effectively because otherwise it won't

1565
01:18:30,359 --> 01:18:35,819
line up with what we're doing anyway and

1566
01:18:32,640 --> 01:18:37,500
so we need like we had down here where

1567
01:18:35,819 --> 01:18:41,759
we've got sort of this information

1568
01:18:37,500 --> 01:18:45,289
that's coming through from in set up you

1569
01:18:41,760 --> 01:18:45,289
know that stuff kind of has to be

1570
01:18:45,319 --> 01:18:50,849
captured as well just grab this stuff

1571
01:18:49,170 --> 01:18:57,810
here in fact this stuff could should be

1572
01:18:50,850 --> 01:19:00,350
kind of put up to the top and then down

1573
01:18:57,810 --> 01:19:00,350
here

1574
01:19:07,449 --> 01:19:11,590
so the in voxel dim and the voxel Minh

1575
01:19:10,300 --> 01:19:17,560
corner right those come through this up

1576
01:19:11,590 --> 01:19:20,380
so the the Fox Ulm in corner hoops comes

1577
01:19:17,560 --> 01:19:22,990
in here and then you know we need to

1578
01:19:20,380 --> 01:19:25,989
know the seldom in the inverse seldom

1579
01:19:22,989 --> 01:19:27,909
for our purposes and at the moment right

1580
01:19:25,989 --> 01:19:34,300
those are not things that we actually

1581
01:19:27,909 --> 01:19:37,420
know oh I guess they are no they're not

1582
01:19:34,300 --> 01:19:39,310
no no it's the dim power - that comes in

1583
01:19:37,420 --> 01:19:43,029
here right so we don't actually know

1584
01:19:39,310 --> 01:19:46,840
that so what we actually want to do here

1585
01:19:43,029 --> 01:19:48,489
is start to talk about like you know we

1586
01:19:46,840 --> 01:19:51,069
want to be able to compute these values

1587
01:19:48,489 --> 01:19:52,960
efficiently is the thing and what you

1588
01:19:51,069 --> 01:19:55,509
can see from some of these is it's kind

1589
01:19:52,960 --> 01:19:56,829
of hard to do that and some based on

1590
01:19:55,510 --> 01:19:59,440
what we actually know in some of these

1591
01:19:56,829 --> 01:20:01,210
cases because we're providing only the

1592
01:19:59,439 --> 01:20:02,739
minimal amount of information it's also

1593
01:20:01,210 --> 01:20:05,109
kind of scattered around a little bit

1594
01:20:02,739 --> 01:20:06,939
and so we end up in a situation where

1595
01:20:05,109 --> 01:20:08,949
like we're probably not doing this as

1596
01:20:06,939 --> 01:20:12,429
efficiently as we could be either way

1597
01:20:08,949 --> 01:20:14,710
but we'll you know get there as we go so

1598
01:20:12,430 --> 01:20:17,800
if we take a look at what we know the

1599
01:20:14,710 --> 01:20:27,100
inverse voxel dimension is well the

1600
01:20:17,800 --> 01:20:29,110
inverse voxel dimension the inverse box

1601
01:20:27,100 --> 01:20:30,190
of dimension here yeah that in fact that

1602
01:20:29,109 --> 01:20:32,469
doesn't even matter I don't even know

1603
01:20:30,189 --> 01:20:36,099
why we're looking at this value this is

1604
01:20:32,470 --> 01:20:37,300
not this is not relevant to us put that

1605
01:20:36,100 --> 01:20:41,090
back down here because we don't actually

1606
01:20:37,300 --> 01:20:43,159
want that there we go

1607
01:20:41,090 --> 01:20:45,349
so the imp total dim is really the thing

1608
01:20:43,158 --> 01:20:46,908
that that tells us the piece of

1609
01:20:45,349 --> 01:20:48,409
information we wanted but it doesn't

1610
01:20:46,908 --> 01:20:51,859
really tell it to us in the way we want

1611
01:20:48,408 --> 01:20:56,359
so if we take a look at how big a cell

1612
01:20:51,859 --> 01:20:58,519
is well right we know what the dimension

1613
01:20:56,359 --> 01:21:01,279
is and we know what the inverse of the

1614
01:20:58,520 --> 01:21:04,730
total dimension is so the inverse like

1615
01:21:01,279 --> 01:21:07,130
of a cell for example and the inverse of

1616
01:21:04,729 --> 01:21:08,539
the total dimension are related by to

1617
01:21:07,130 --> 01:21:11,179
each other by the dimension

1618
01:21:08,539 --> 01:21:13,550
unfortunately for dimple two is

1619
01:21:11,179 --> 01:21:16,279
something we don't actually know because

1620
01:21:13,550 --> 01:21:18,380
we only have the Vox Tim coming in and

1621
01:21:16,279 --> 01:21:20,868
in order to figure out what power of two

1622
01:21:18,380 --> 01:21:24,590
it is we would have to bit scan it which

1623
01:21:20,868 --> 01:21:26,750
seems bad which makes me think we maybe

1624
01:21:24,590 --> 01:21:28,400
want to specify the voxel size as a

1625
01:21:26,750 --> 01:21:31,429
power of two because it is something

1626
01:21:28,399 --> 01:21:33,379
that you do want to know and we know

1627
01:21:31,429 --> 01:21:35,779
that we can never really use a non power

1628
01:21:33,380 --> 01:21:37,069
of two you know in terms of the way the

1629
01:21:35,779 --> 01:21:38,210
graphics card is going to work we're

1630
01:21:37,069 --> 01:21:41,238
always going to want to send down

1631
01:21:38,210 --> 01:21:43,480
anything that's voxel we're gonna want

1632
01:21:41,238 --> 01:21:47,089
that to be a power of two for sure right

1633
01:21:43,479 --> 01:21:48,468
and also for the facility of working

1634
01:21:47,090 --> 01:21:50,690
with it on the CPU we probably also want

1635
01:21:48,469 --> 01:21:52,760
each dimension to be a power of two they

1636
01:21:50,689 --> 01:21:54,078
don't really have to all be the same but

1637
01:21:52,760 --> 01:21:56,840
they do all want to be a power of two

1638
01:21:54,078 --> 01:21:59,380
probably and so it's probably the case

1639
01:21:56,840 --> 01:22:02,360
that we you know looking at how this

1640
01:21:59,380 --> 01:22:03,828
this is shaking out I think that also

1641
01:22:02,359 --> 01:22:08,929
something we probably would want to fix

1642
01:22:03,828 --> 01:22:11,509
right but again moving forward with what

1643
01:22:08,929 --> 01:22:13,219
we have as we have it and maybe I'll

1644
01:22:11,510 --> 01:22:16,699
ping-pong back to the old way of doing

1645
01:22:13,219 --> 01:22:18,609
the test and and replay around with how

1646
01:22:16,698 --> 01:22:21,460
we're specifying some of these things

1647
01:22:18,609 --> 01:22:23,658
but for the moment just to you know play

1648
01:22:21,460 --> 01:22:26,170
with it here I'm gonna actually just

1649
01:22:23,658 --> 01:22:29,179
derive these values directly instead and

1650
01:22:26,170 --> 01:22:30,980
so what am I do here is when we did

1651
01:22:29,179 --> 01:22:38,059
enable lighting and we have light bounds

1652
01:22:30,979 --> 01:22:41,899
right you can see in here when we record

1653
01:22:38,059 --> 01:22:45,730
those light bounds right into the render

1654
01:22:41,899 --> 01:22:45,729
group I'm assuming

1655
01:22:55,649 --> 01:23:09,939
don't we have cuz in here I thought we

1656
01:22:59,020 --> 01:23:23,530
had to set I thought we had to set the M

1657
01:23:09,939 --> 01:23:24,609
seldom am I wrong about that so sorry

1658
01:23:23,529 --> 01:23:27,369
that's not that what I'm thinking of

1659
01:23:24,609 --> 01:23:29,579
what I actually mean is the voxel in

1660
01:23:27,369 --> 01:23:31,930
total done

1661
01:23:29,579 --> 01:23:33,819
somebody has to set that right I mean

1662
01:23:31,930 --> 01:23:36,970
it's getting set in the actual thing to

1663
01:23:33,819 --> 01:23:39,399
set light bounds that's what it is so

1664
01:23:36,970 --> 01:23:41,289
inside set light bounds here right when

1665
01:23:39,399 --> 01:23:43,329
you send these two things down I'm not

1666
01:23:41,289 --> 01:23:44,920
really convinced that right like this

1667
01:23:43,329 --> 01:23:49,390
seems to be sort of a little bit of the

1668
01:23:44,920 --> 01:23:51,850
issue so when we have that set light

1669
01:23:49,390 --> 01:23:54,070
bounds call I think that's kind of the

1670
01:23:51,850 --> 01:23:57,370
part that's a little bit sticky here and

1671
01:23:54,069 --> 01:23:59,699
so if you take a look at when this is

1672
01:23:57,369 --> 01:24:01,930
getting pushed on at the beginning I

1673
01:23:59,699 --> 01:24:04,510
feel like that's sort of more the thing

1674
01:24:01,930 --> 01:24:07,260
that we wanted to look at in the world

1675
01:24:04,510 --> 01:24:13,030
mode where it actually occurs so if I

1676
01:24:07,260 --> 01:24:14,710
look at set alight bounds if you look at

1677
01:24:13,029 --> 01:24:16,329
where that's actually happening you

1678
01:24:14,710 --> 01:24:17,800
could see that like begin lighting

1679
01:24:16,329 --> 01:24:20,470
computation is the thing that happens

1680
01:24:17,800 --> 01:24:23,829
right before it and so what I might say

1681
01:24:20,470 --> 01:24:27,220
is like maybe that is actually the way

1682
01:24:23,829 --> 01:24:29,260
this should work is instead of you know

1683
01:24:27,220 --> 01:24:32,260
this is maybe the wrong way to look at

1684
01:24:29,260 --> 01:24:35,310
it maybe what we actually want is this

1685
01:24:32,260 --> 01:24:35,310
call here

1686
01:24:41,010 --> 01:24:45,760
should actually be occurring in here so

1687
01:24:43,779 --> 01:24:49,899
like you know the lighting is enabled or

1688
01:24:45,760 --> 01:24:51,340
whatever and we are then gonna set the

1689
01:24:49,899 --> 01:24:52,869
light bounds or you know we could do

1690
01:24:51,340 --> 01:24:57,460
them in the opposite order or whatever

1691
01:24:52,869 --> 01:24:59,319
it has to happen right who knows but

1692
01:24:57,460 --> 01:25:01,000
that way inside begin letting

1693
01:24:59,319 --> 01:25:02,979
computation we can store more

1694
01:25:01,000 --> 01:25:05,680
information about what the heck we're

1695
01:25:02,979 --> 01:25:08,319
trying to do here so when we pass this

1696
01:25:05,680 --> 01:25:11,800
in you know we just pass light bounds

1697
01:25:08,319 --> 01:25:13,689
directly and this thing can store all of

1698
01:25:11,800 --> 01:25:16,300
the stuff that it wants to know about

1699
01:25:13,689 --> 01:25:17,979
the light bounds without having to like

1700
01:25:16,300 --> 01:25:22,029
sit around trying to reverse engineer

1701
01:25:17,979 --> 01:25:23,949
what the heck it was from inverted

1702
01:25:22,029 --> 01:25:28,000
versions of itself and everything else

1703
01:25:23,949 --> 01:25:29,710
right so if we were to switch to doing

1704
01:25:28,000 --> 01:25:31,510
it that way then this is kind of nice

1705
01:25:29,710 --> 01:25:33,640
because then inside begin lighting

1706
01:25:31,510 --> 01:25:36,250
computation what we can actually do is

1707
01:25:33,640 --> 01:25:44,680
set up all of this stuff in there right

1708
01:25:36,250 --> 01:25:46,899
so this can just happen in here we know

1709
01:25:44,680 --> 01:25:51,280
what the mid corner is because it's just

1710
01:25:46,899 --> 01:25:53,170
the light bounds men right we know what

1711
01:25:51,279 --> 01:26:02,769
the seldom is because it's this

1712
01:25:53,170 --> 01:26:05,109
dimension here divided by the number of

1713
01:26:02,770 --> 01:26:11,470
cells in each direction right so the

1714
01:26:05,109 --> 01:26:14,739
cell dimension is just the light dim you

1715
01:26:11,470 --> 01:26:17,050
know it's a Hadamard quotient right but

1716
01:26:14,739 --> 01:26:19,840
we'll deal with that in a second and the

1717
01:26:17,050 --> 01:26:23,320
intervals in V seldom is just 1.0

1718
01:26:19,840 --> 01:26:27,090
divided by and I get rid of that it's

1719
01:26:23,319 --> 01:26:27,090
just 1.0 divided by 2 seldom

1720
01:26:30,899 --> 01:26:36,729
right and so really that gives us a nice

1721
01:26:34,960 --> 01:26:38,980
way of pushing all of that information

1722
01:26:36,729 --> 01:26:40,839
down cleanly because now we're just

1723
01:26:38,979 --> 01:26:42,519
sending down one bounding value at the

1724
01:26:40,840 --> 01:26:44,470
start and then all of these sort of like

1725
01:26:42,520 --> 01:26:46,300
values that we're gonna need that are

1726
01:26:44,470 --> 01:26:48,400
dependent on that value just all get

1727
01:26:46,300 --> 01:26:51,220
computed in one place the problem that

1728
01:26:48,399 --> 01:26:53,979
we have is this dim pow2 bit because at

1729
01:26:51,220 --> 01:26:56,440
the moment we do know how big the voxel

1730
01:26:53,979 --> 01:27:00,250
actually is we just don't know what it's

1731
01:26:56,439 --> 01:27:03,069
actual power of two is and that makes it

1732
01:27:00,250 --> 01:27:04,270
a little bit harder right so when we

1733
01:27:03,069 --> 01:27:06,429
want to actually compute the seldom

1734
01:27:04,270 --> 01:27:08,860
that's not so bad because there we just

1735
01:27:06,430 --> 01:27:11,260
need the arbitrary let count and that we

1736
01:27:08,859 --> 01:27:15,130
do have right so we can do a Hadamard

1737
01:27:11,260 --> 01:27:22,420
quotient here do we have a had a marked

1738
01:27:15,130 --> 01:27:24,310
ocean don't all right so I guess we'll

1739
01:27:22,420 --> 01:27:25,420
have to do ahead of our product I'm not

1740
01:27:24,310 --> 01:27:28,720
gonna go right ahead of our quotient

1741
01:27:25,420 --> 01:27:38,170
just for this of the light dim and the

1742
01:27:28,720 --> 01:27:39,699
in cell count right and so we know some

1743
01:27:38,170 --> 01:27:41,829
of these things right like this right

1744
01:27:39,699 --> 01:27:45,250
here is the inverse cell count I mean

1745
01:27:41,829 --> 01:27:48,269
that's what that is so we know we can

1746
01:27:45,250 --> 01:27:57,430
actually create these things as

1747
01:27:48,270 --> 01:27:59,170
necessary the Box dim here is specified

1748
01:27:57,430 --> 01:28:01,869
as a part of the command structure

1749
01:27:59,170 --> 01:28:04,060
always so we know what that is going to

1750
01:28:01,869 --> 01:28:06,399
be and this is the inverse box um so I'm

1751
01:28:04,060 --> 01:28:11,820
going to call this box count here or a

1752
01:28:06,399 --> 01:28:14,019
cell count and inverse cell count right

1753
01:28:11,819 --> 01:28:16,869
so then when we come through here we can

1754
01:28:14,020 --> 01:28:18,160
say all right we know that the cell

1755
01:28:16,869 --> 01:28:19,510
dimension is going to be the height of

1756
01:28:18,159 --> 01:28:22,420
our product of whatever the total

1757
01:28:19,510 --> 01:28:24,039
lighting bound dim is right and the

1758
01:28:22,420 --> 01:28:25,750
inverse cell count because that will

1759
01:28:24,039 --> 01:28:27,970
divide it out we then know that the

1760
01:28:25,750 --> 01:28:30,369
inverse cell dimensions is what's the

1761
01:28:27,970 --> 01:28:34,659
opposite of this right so it's one over

1762
01:28:30,369 --> 01:28:36,460
that value and so the only thing we're

1763
01:28:34,659 --> 01:28:39,750
left with is this value here which we

1764
01:28:36,460 --> 01:28:43,090
don't know and this wants to be you know

1765
01:28:39,750 --> 01:28:44,170
set we kind of know vaguely what it is

1766
01:28:43,090 --> 01:28:46,600
right we know that

1767
01:28:44,170 --> 01:28:49,180
the cell counts and we could sort of

1768
01:28:46,600 --> 01:28:50,800
just do it this way where we say look at

1769
01:28:49,180 --> 01:28:52,990
the moment we kind of know what it is

1770
01:28:50,800 --> 01:28:56,500
it's just going to be whatever that cell

1771
01:28:52,989 --> 01:28:59,260
county is the power of two right and I

1772
01:28:56,500 --> 01:29:03,550
don't know if we actually have any

1773
01:28:59,260 --> 01:29:07,750
functions that do that scan yeah so we

1774
01:29:03,550 --> 01:29:11,110
do kind of know like we can find these

1775
01:29:07,750 --> 01:29:13,569
out right it's pretty easy for us to see

1776
01:29:11,109 --> 01:29:15,699
what they are so if we assumed it was a

1777
01:29:13,569 --> 01:29:17,259
power of two first then it's actually

1778
01:29:15,699 --> 01:29:32,170
not very hard for us to find out what

1779
01:29:17,260 --> 01:29:33,640
that power of two is yeah so I mean I

1780
01:29:32,170 --> 01:29:35,199
guess we could just stuff that the other

1781
01:29:33,640 --> 01:29:36,490
thing we could do here is just change

1782
01:29:35,199 --> 01:29:39,489
the way we're defining this right so

1783
01:29:36,489 --> 01:29:47,859
inside the render if we look up here and

1784
01:29:39,489 --> 01:29:56,699
we say I think this is just a saner way

1785
01:29:47,859 --> 01:30:00,579
to do it so this way we would say look

1786
01:29:56,699 --> 01:30:02,289
you know it's it's gonna be specified as

1787
01:30:00,579 --> 01:30:03,880
a power of two as well and so cure you

1788
01:30:02,289 --> 01:30:06,939
can just kind of get that information

1789
01:30:03,880 --> 01:30:08,409
out and maybe we hard code those a

1790
01:30:06,939 --> 01:30:09,969
little bit more maybe we make them

1791
01:30:08,409 --> 01:30:11,260
looser I don't know but you know at the

1792
01:30:09,970 --> 01:30:13,150
moment we'll do that and then we'll

1793
01:30:11,260 --> 01:30:15,010
maybe pass that down as something here

1794
01:30:13,149 --> 01:30:16,179
that we needed this code desperately

1795
01:30:15,010 --> 01:30:17,470
needs to be cleaned up I don't want to

1796
01:30:16,180 --> 01:30:19,210
start cleaning it up until we actually

1797
01:30:17,470 --> 01:30:20,740
know that we've got it the way we want

1798
01:30:19,210 --> 01:30:24,730
it because there I'm just like burning

1799
01:30:20,739 --> 01:30:26,439
time so in here now we can get all of

1800
01:30:24,729 --> 01:30:29,859
the information we need for our voxel

1801
01:30:26,439 --> 01:30:31,869
and it can least be set up properly it

1802
01:30:29,859 --> 01:30:34,809
can be cleared and then in here we can

1803
01:30:31,869 --> 01:30:37,359
voxel ice into it which we want and off

1804
01:30:34,810 --> 01:30:40,090
we go now it kind of doesn't make much

1805
01:30:37,359 --> 01:30:42,189
sense to do this clear to be completely

1806
01:30:40,090 --> 01:30:46,900
honest so I think what we'd probably

1807
01:30:42,189 --> 01:30:50,829
rather do is when we come up here and we

1808
01:30:46,899 --> 01:30:52,929
do the initial allocation right we know

1809
01:30:50,829 --> 01:30:55,090
that it will be cleared then so I think

1810
01:30:52,930 --> 01:30:57,610
what I'd rather do is when we process it

1811
01:30:55,090 --> 01:30:57,880
here I think this is probably the time

1812
01:30:57,609 --> 01:30:59,920
to

1813
01:30:57,880 --> 01:31:14,909
where it so what I think we should do is

1814
01:30:59,920 --> 01:31:14,908
say let's grab the probe pointer like so

1815
01:31:17,279 --> 01:31:22,539
and this can be made much faster because

1816
01:31:20,889 --> 01:31:24,100
right now we're doing a blind lookup

1817
01:31:22,539 --> 01:31:25,658
here whereas what we could be doing is

1818
01:31:24,100 --> 01:31:27,310
just stepping linearly through the

1819
01:31:25,658 --> 01:31:29,109
voxels so I could just increment this

1820
01:31:27,310 --> 01:31:30,340
pointer every time and be done you know

1821
01:31:29,109 --> 01:31:31,869
what I mean and in fact you know that

1822
01:31:30,340 --> 01:31:33,610
might be the smarter way to do it just

1823
01:31:31,869 --> 01:31:37,119
to start with so you we could do instead

1824
01:31:33,609 --> 01:31:39,639
is just say yeah forget about it let's

1825
01:31:37,119 --> 01:31:43,420
just assume that what we actually wanted

1826
01:31:39,639 --> 01:31:48,130
to do was take like a pointer here and

1827
01:31:43,420 --> 01:31:51,359
say let's start at the initial indexing

1828
01:31:48,130 --> 01:31:56,289
of this thing so we've got the solution

1829
01:31:51,359 --> 01:31:58,599
light probe index light index and we're

1830
01:31:56,289 --> 01:32:01,119
just gonna step it so each time we know

1831
01:31:58,600 --> 01:32:04,480
that the probe index is just the probe

1832
01:32:01,119 --> 01:32:05,710
in next pointer dereference trite so we

1833
01:32:04,479 --> 01:32:07,238
don't really have to do any work to get

1834
01:32:05,710 --> 01:32:08,679
that we don't have to caulk it corner

1835
01:32:07,238 --> 01:32:10,178
light index we don't even have to build

1836
01:32:08,679 --> 01:32:13,179
a cell cord or we're gonna do is just

1837
01:32:10,179 --> 01:32:15,550
look it up and then when we're done with

1838
01:32:13,179 --> 01:32:18,340
it right so now that we know what the

1839
01:32:15,550 --> 01:32:22,690
probe index actually is we can just go

1840
01:32:18,340 --> 01:32:27,639
ahead and clear it as well right so we

1841
01:32:22,689 --> 01:32:28,750
that way we are reading and clearing it

1842
01:32:27,639 --> 01:32:31,449
at the same time we don't need a

1843
01:32:28,750 --> 01:32:33,789
separate loop at the head end to like

1844
01:32:31,448 --> 01:32:37,599
deal with that right so we read and

1845
01:32:33,789 --> 01:32:40,539
clear and pack all in kind of one go and

1846
01:32:37,600 --> 01:32:42,789
I think that's probably better than the

1847
01:32:40,539 --> 01:32:46,469
alternative because we're not doing

1848
01:32:42,789 --> 01:32:51,158
separate passes for no reason all right

1849
01:32:46,469 --> 01:32:56,969
so now we we more or less know when we

1850
01:32:51,158 --> 01:33:01,198
do light probe calls we kind of need to

1851
01:32:56,969 --> 01:33:03,908
change these to be just passing the

1852
01:33:01,198 --> 01:33:07,119
information we actually have rather than

1853
01:33:03,908 --> 01:33:10,059
these false sort of probe pieces of

1854
01:33:07,119 --> 01:33:10,760
information which were which are gone

1855
01:33:10,060 --> 01:33:13,039
now

1856
01:33:10,760 --> 01:33:15,860
so if we look at how we wrote this code

1857
01:33:13,039 --> 01:33:18,979
let's sort of take it step by step and

1858
01:33:15,859 --> 01:33:20,809
and sort of replace it so in here where

1859
01:33:18,979 --> 01:33:24,229
we look we can see all of the sort of

1860
01:33:20,810 --> 01:33:26,900
the red nastiness here what we need to

1861
01:33:24,229 --> 01:33:30,199
do here is is get the light probe

1862
01:33:26,899 --> 01:33:33,439
position separately so we kind of have a

1863
01:33:30,199 --> 01:33:41,979
light probe P right that's going to be

1864
01:33:33,439 --> 01:33:44,569
coming this way actually and you know

1865
01:33:41,979 --> 01:33:48,139
these are probably things that we can

1866
01:33:44,569 --> 01:33:49,519
just have pointers I want to see these

1867
01:33:48,140 --> 01:33:51,350
can just be off of the solution as well

1868
01:33:49,520 --> 01:33:54,740
I think we probably want to do it

1869
01:33:51,350 --> 01:33:57,850
roughly like that and then you know we

1870
01:33:54,739 --> 01:34:03,139
know that the origin is just gonna be

1871
01:33:57,850 --> 01:34:09,829
looked up like this and then at some

1872
01:34:03,140 --> 01:34:11,329
point we're going to need ok so here's

1873
01:34:09,829 --> 01:34:15,229
like the sampling and whatever and at

1874
01:34:11,329 --> 01:34:19,670
some point we're going to need them

1875
01:34:15,229 --> 01:34:22,779
still not actually seeing it at some

1876
01:34:19,670 --> 01:34:24,920
point we're going to need the actual

1877
01:34:22,779 --> 01:34:27,199
compositing values you can see that

1878
01:34:24,920 --> 01:34:29,000
happening here but we really don't need

1879
01:34:27,199 --> 01:34:31,189
a position anymore after that so this

1880
01:34:29,000 --> 01:34:35,680
can just be a light proba radiance value

1881
01:34:31,189 --> 01:34:42,859
that comes back from this call right and

1882
01:34:35,680 --> 01:34:45,050
then I think we're pretty much done yeah

1883
01:34:42,859 --> 01:34:48,109
so I think we can just modify that code

1884
01:34:45,050 --> 01:34:50,210
to be pretty straightforward when we

1885
01:34:48,109 --> 01:34:52,250
call this we're really just asking for

1886
01:34:50,210 --> 01:34:55,399
the irradiance and so I think that

1887
01:34:52,250 --> 01:34:57,560
solves that problem the solution itself

1888
01:34:55,399 --> 01:34:59,119
needs to have the pointers to the actual

1889
01:34:57,560 --> 01:35:06,700
rays we care about here so we're gonna

1890
01:34:59,119 --> 01:35:09,699
need like you know the light probe P

1891
01:35:06,699 --> 01:35:09,699
here

1892
01:35:11,448 --> 01:35:18,169
and we're going to need the irradiance

1893
01:35:13,399 --> 01:35:20,988
as well and this is just to avoid having

1894
01:35:18,170 --> 01:35:23,569
to pass them down they are in the render

1895
01:35:20,988 --> 01:35:24,769
group so they're easy to come by but we

1896
01:35:23,569 --> 01:35:26,389
just don't want to have to pass those

1897
01:35:24,770 --> 01:35:27,710
around because we know that everybody

1898
01:35:26,390 --> 01:35:37,610
who's operating lighting solution is

1899
01:35:27,710 --> 01:35:39,948
going to have to have them right get

1900
01:35:37,609 --> 01:35:46,039
learning from probe again that is I

1901
01:35:39,948 --> 01:35:47,269
think just this and now we actually have

1902
01:35:46,039 --> 01:35:49,310
to change those things to work with

1903
01:35:47,270 --> 01:35:55,100
those so when we do this is actually

1904
01:35:49,310 --> 01:36:02,980
probe irradiance right in both cases and

1905
01:35:55,100 --> 01:36:13,010
light in this case just needs to be

1906
01:36:02,979 --> 01:36:15,559
replaced there instead of color and I

1907
01:36:13,010 --> 01:36:17,989
guess I don't really know like in terms

1908
01:36:15,560 --> 01:36:19,699
of the way that these are working does

1909
01:36:17,988 --> 01:36:22,039
anyone ever care about the position and

1910
01:36:19,698 --> 01:36:24,649
the answer seems to be no so I think

1911
01:36:22,039 --> 01:36:30,560
that pretty much all of these want to

1912
01:36:24,649 --> 01:36:32,689
work on like almost everybody wants to

1913
01:36:30,560 --> 01:36:37,310
work on just the probe irradiance

1914
01:36:32,689 --> 01:36:39,649
but but for this one right here which

1915
01:36:37,310 --> 01:36:41,960
needs the actual position right this

1916
01:36:39,649 --> 01:36:48,198
this one is the only one that actually

1917
01:36:41,960 --> 01:36:49,850
needs that position now I don't think it

1918
01:36:48,198 --> 01:36:52,488
makes any sense to actually call get

1919
01:36:49,850 --> 01:36:54,500
probe here but I mean maybe we will it

1920
01:36:52,488 --> 01:36:55,488
just it seems like kind of stupid but

1921
01:36:54,500 --> 01:36:57,500
you know whatever

1922
01:36:55,488 --> 01:36:59,718
so when we're actually calling that get

1923
01:36:57,500 --> 01:37:01,520
probe call here what we really want to

1924
01:36:59,719 --> 01:37:04,399
know is just what the existing probe P

1925
01:37:01,520 --> 01:37:07,400
is right so we really just want that is

1926
01:37:04,399 --> 01:37:09,049
all that we actually need and so here

1927
01:37:07,399 --> 01:37:11,238
what we want to know is just well we've

1928
01:37:09,050 --> 01:37:15,880
got the existing index all we really

1929
01:37:11,238 --> 01:37:15,879
want to know is like all right

1930
01:37:18,180 --> 01:37:24,159
you know what's its position and that's

1931
01:37:21,430 --> 01:37:27,300
just you know a pretty trivial thing to

1932
01:37:24,159 --> 01:37:32,199
implement so I think everybody else just

1933
01:37:27,300 --> 01:37:35,050
wants the irradiance value so I think

1934
01:37:32,199 --> 01:37:37,179
everybody else can just work right by

1935
01:37:35,050 --> 01:37:39,340
just replacing it with this for now and

1936
01:37:37,180 --> 01:37:43,210
again this code probably needs to be

1937
01:37:39,340 --> 01:37:45,550
like improved quite a bit

1938
01:37:43,210 --> 01:37:48,489
it's not great at the moment and so will

1939
01:37:45,550 --> 01:37:50,890
you know but that's the nature of code

1940
01:37:48,489 --> 01:37:53,619
it goes through some bad stapes before

1941
01:37:50,890 --> 01:37:56,410
it gets to a good state and that's just

1942
01:37:53,619 --> 01:38:01,300
how you have to program if you want to

1943
01:37:56,409 --> 01:38:02,949
program well if you try to make sure

1944
01:38:01,300 --> 01:38:05,020
that you start off with a good state you

1945
01:38:02,949 --> 01:38:12,189
will just always have either no code or

1946
01:38:05,020 --> 01:38:16,150
bad code all right so I think we're

1947
01:38:12,189 --> 01:38:20,500
mostly good this is this and this is

1948
01:38:16,149 --> 01:38:29,309
that what else we got here in the error

1949
01:38:20,500 --> 01:38:29,310
list same thing I think yeah

1950
01:38:30,000 --> 01:38:48,100
and this is again just alright this is

1951
01:38:45,970 --> 01:38:53,100
just a change of name there but I think

1952
01:38:48,100 --> 01:38:53,100
otherwise we're good what else you got

1953
01:38:53,880 --> 01:38:59,359
and

1954
01:38:55,409 --> 01:38:59,358
[Music]

1955
01:39:12,609 --> 01:39:18,569
so this needs a variable type obviously

1956
01:39:27,069 --> 01:39:32,380
I guess that needs to be casted to an

1957
01:39:29,770 --> 01:39:36,760
f32 because it's expressed as a double

1958
01:39:32,380 --> 01:39:40,680
at the moment the light prep index total

1959
01:39:36,760 --> 01:39:40,680
cell count here

1960
01:39:45,779 --> 01:40:03,119
spatial probe index alright sorry yeah

1961
01:39:58,359 --> 01:40:03,119
this just a lot of bookkeeping

1962
01:40:06,640 --> 01:40:09,819
[Music]

1963
01:40:20,829 --> 01:40:27,550
all right so the total cell count here

1964
01:40:30,729 --> 01:40:37,939
this push array needs which arena which

1965
01:40:34,609 --> 01:40:39,679
is easy enough the light bounds let me

1966
01:40:37,939 --> 01:40:43,189
call set light bounds this is just

1967
01:40:39,680 --> 01:40:45,110
called group not render group here we

1968
01:40:43,189 --> 01:40:48,039
don't have the commands readily

1969
01:40:45,109 --> 01:40:51,289
available so we really need that and

1970
01:40:48,039 --> 01:40:52,760
then this Vox dim here is supposed to be

1971
01:40:51,289 --> 01:40:55,899
cell count I changed the name of that

1972
01:40:52,760 --> 01:40:57,890
and didn't update it right

1973
01:40:55,899 --> 01:41:00,859
is there something what is it

1974
01:40:57,890 --> 01:41:06,260
complaining about here oh yes this is

1975
01:41:00,859 --> 01:41:08,359
backwards all right and so now I think

1976
01:41:06,260 --> 01:41:10,159
we've got those sorted out what else you

1977
01:41:08,359 --> 01:41:13,399
got for me an end lighting computation

1978
01:41:10,159 --> 01:41:15,949
we've got issues here it doesn't like

1979
01:41:13,399 --> 01:41:19,309
that : can't blame it I'm sure why there

1980
01:41:15,949 --> 01:41:20,359
is a column there the light probe count

1981
01:41:19,310 --> 01:41:24,740
here

1982
01:41:20,359 --> 01:41:25,849
we don't set a lot of these values so

1983
01:41:24,739 --> 01:41:27,590
we're gonna have to go make sure these

1984
01:41:25,850 --> 01:41:28,760
are set to we're just gonna have to go

1985
01:41:27,590 --> 01:41:38,569
through this and clean it up a little

1986
01:41:28,760 --> 01:41:41,739
bit and clamp oh one of the light RC

1987
01:41:38,569 --> 01:41:41,739
times the light dist

1988
01:41:44,270 --> 01:41:49,219
what is it complaining about oh there's

1989
01:41:47,420 --> 01:41:53,449
a previous value of it

1990
01:41:49,219 --> 01:41:56,230
sorry um I'm gonna call that light color

1991
01:41:53,449 --> 01:41:56,229
at the moment

1992
01:41:56,260 --> 01:42:04,640
oops so we can make that work

1993
01:42:01,760 --> 01:42:06,829
and then I don't know if we defined a v4

1994
01:42:04,640 --> 01:42:17,150
that's a v3 version we did so that

1995
01:42:06,829 --> 01:42:20,930
should work as well um so actually yeah

1996
01:42:17,149 --> 01:42:23,329
these this I was a little premature on

1997
01:42:20,930 --> 01:42:25,700
remember this actually store is full

1998
01:42:23,329 --> 01:42:29,960
values these aren't these don't have to

1999
01:42:25,699 --> 01:42:31,639
be packed or split in any way they're

2000
01:42:29,960 --> 01:42:33,380
not HDR values they can just be

2001
01:42:31,640 --> 01:42:36,980
arbitrary floats so it's actually just

2002
01:42:33,380 --> 01:42:38,920
the light color times the brightness in

2003
01:42:36,979 --> 01:42:41,059
that in that direction and we're done

2004
01:42:38,920 --> 01:42:52,940
let's see what else we got here that's

2005
01:42:41,060 --> 01:42:56,090
spatial probe index we don't need any of

2006
01:42:52,939 --> 01:42:58,669
this stuff turned on and then I think

2007
01:42:56,090 --> 01:43:00,440
we're compiling yep

2008
01:42:58,670 --> 01:43:02,630
and so the only other thing I want to do

2009
01:43:00,439 --> 01:43:04,609
here before we end for the day is we

2010
01:43:02,630 --> 01:43:07,100
just we didn't initialize these values

2011
01:43:04,609 --> 01:43:09,920
so they're not going to work right and

2012
01:43:07,100 --> 01:43:12,110
so what we want to do when we first

2013
01:43:09,920 --> 01:43:14,899
begin the lighting computation or really

2014
01:43:12,109 --> 01:43:16,429
we can do this at any time but so maybe

2015
01:43:14,899 --> 01:43:18,649
we do it here because we could do all of

2016
01:43:16,430 --> 01:43:21,260
them here what we want to do is make

2017
01:43:18,649 --> 01:43:23,509
sure we set all this crap right so all

2018
01:43:21,260 --> 01:43:25,100
of this stuff here that we're just kind

2019
01:43:23,510 --> 01:43:27,079
of duplicating because we want it to be

2020
01:43:25,100 --> 01:43:28,340
centrally indexable by anyone who just

2021
01:43:27,079 --> 01:43:29,659
gets a pointer to the lighting like

2022
01:43:28,340 --> 01:43:31,569
because we have multiple threads who

2023
01:43:29,659 --> 01:43:34,099
then come and have to look at this stuff

2024
01:43:31,569 --> 01:43:36,349
what we want to do here is say all right

2025
01:43:34,100 --> 01:43:39,860
like let's actually set all these values

2026
01:43:36,350 --> 01:43:44,270
so the light probe count needs to be

2027
01:43:39,859 --> 01:43:48,859
equal to the actual number of light

2028
01:43:44,270 --> 01:43:54,810
probes that got recorded right and the

2029
01:43:48,859 --> 01:44:00,439
light crimpy needs to be

2030
01:43:54,810 --> 01:44:00,440
said as well and the light provenience

2031
01:44:00,710 --> 01:44:04,430
needs to be set as well

2032
01:44:08,689 --> 01:44:15,359
kids get those wired up and then I think

2033
01:44:11,399 --> 01:44:17,460
you know we're fine and so this is gonna

2034
01:44:15,359 --> 01:44:18,929
be you know super buggy and crashing and

2035
01:44:17,460 --> 01:44:20,699
weird cuz we just kind of barter thing

2036
01:44:18,930 --> 01:44:23,520
up so I probably won't a bucket today I

2037
01:44:20,699 --> 01:44:24,989
think what I'd like to do is you know

2038
01:44:23,520 --> 01:44:27,780
next weekend we'll start playing around

2039
01:44:24,989 --> 01:44:30,829
fit try to smush that code down into

2040
01:44:27,779 --> 01:44:30,829
something more reasonable

2041
01:44:32,510 --> 01:44:37,409
well actually I take that back

2042
01:44:34,409 --> 01:44:39,449
I might debug just this because this is

2043
01:44:37,409 --> 01:44:42,239
probably pretty easy for me to debug

2044
01:44:39,449 --> 01:44:43,529
but smack the code down a little bit you

2045
01:44:42,239 --> 01:44:45,469
know kind of smooth it out a little bit

2046
01:44:43,529 --> 01:44:48,630
and then start to actually work on

2047
01:44:45,470 --> 01:44:51,180
getting the light transport up and

2048
01:44:48,630 --> 01:44:52,560
running because this is all this is

2049
01:44:51,180 --> 01:44:54,270
going to do now is just actually have

2050
01:44:52,560 --> 01:44:57,810
the light probes flow through properly

2051
01:44:54,270 --> 01:44:59,010
but that's all it will do right um so I

2052
01:44:57,810 --> 01:45:01,110
just want to take a quick look at that

2053
01:44:59,010 --> 01:45:03,210
well I'm still thinking about it

2054
01:45:01,109 --> 01:45:06,569
add probe to spatial index is here and

2055
01:45:03,210 --> 01:45:12,260
you could see it looping over the

2056
01:45:06,569 --> 01:45:14,579
indices in question the map into grid

2057
01:45:12,260 --> 01:45:22,140
the one thing I have question is is this

2058
01:45:14,579 --> 01:45:24,359
actually clamped yeah so this is not

2059
01:45:22,140 --> 01:45:25,800
clamped so you know that's why we're

2060
01:45:24,359 --> 01:45:29,519
getting that error this is just kind of

2061
01:45:25,800 --> 01:45:35,520
stupid right you want these things to be

2062
01:45:29,520 --> 01:45:38,100
clamped so that they yeah I mean this is

2063
01:45:35,520 --> 01:45:40,410
this is just kind of dumb so what you

2064
01:45:38,100 --> 01:45:42,360
want to do here for a map into grid and

2065
01:45:40,409 --> 01:45:47,460
you know if we look let me just take a

2066
01:45:42,359 --> 01:45:50,279
look at who's calling at the moment yeah

2067
01:45:47,460 --> 01:45:52,350
so what you probably want here is map

2068
01:45:50,279 --> 01:45:56,759
into grid is is something that probably

2069
01:45:52,350 --> 01:45:59,250
wants to be more of a like rejection

2070
01:45:56,760 --> 01:46:02,579
based thing probably but for the moment

2071
01:45:59,250 --> 01:46:03,600
I guess I won't do that and we'll kind

2072
01:46:02,579 --> 01:46:10,619
of think about it a little bit

2073
01:46:03,600 --> 01:46:16,079
differently but what we'll say is you

2074
01:46:10,619 --> 01:46:20,849
know when we do map into grid I will

2075
01:46:16,079 --> 01:46:22,199
then take the resulting UVW indices that

2076
01:46:20,850 --> 01:46:24,960
come in here which is probably not the

2077
01:46:22,199 --> 01:46:27,569
best name for those we'll take those

2078
01:46:24,960 --> 01:46:29,880
indices and we'll we'll floor them out

2079
01:46:27,569 --> 01:46:37,109
right so we'll say like or we'll

2080
01:46:29,880 --> 01:46:40,850
document will clamp them right - we have

2081
01:46:37,109 --> 01:46:43,500
a clamp for integers so like this right

2082
01:46:40,850 --> 01:46:55,260
so each of these values what we'll do is

2083
01:46:43,500 --> 01:46:59,989
we'll clamp them and we'll say that we

2084
01:46:55,260 --> 01:47:07,380
want them to clamp out between the dim

2085
01:46:59,989 --> 01:47:10,559
values here right so when we have the

2086
01:47:07,380 --> 01:47:13,619
spatial index dim power - nonsense here

2087
01:47:10,560 --> 01:47:19,550
right we're just gonna say look you

2088
01:47:13,619 --> 01:47:19,550
can't you can't go outside those bounds

2089
01:47:20,869 --> 01:47:27,269
now the clamp itself doesn't really do

2090
01:47:25,140 --> 01:47:31,020
quite exactly what we want because you

2091
01:47:27,270 --> 01:47:34,410
can see will allow the max value to

2092
01:47:31,020 --> 01:47:37,770
exist and we actually want the max value

2093
01:47:34,409 --> 01:47:39,840
to be out of bounds because there is no

2094
01:47:37,770 --> 01:47:42,840
cell there that's like the outer bound

2095
01:47:39,840 --> 01:47:46,140
of it right so we're actually clamping

2096
01:47:42,840 --> 01:47:49,409
to 1 minus that value and that's what we

2097
01:47:46,140 --> 01:47:50,520
actually want to return okay so yeah

2098
01:47:49,409 --> 01:47:51,989
like I said I wasn't gonna really do bug

2099
01:47:50,520 --> 01:47:53,820
it but I'm probably gonna bug a couple

2100
01:47:51,989 --> 01:47:57,149
things cuz that's obviously stupid right

2101
01:47:53,819 --> 01:47:58,920
so we're gonna fix that and we might fix

2102
01:47:57,149 --> 01:48:00,779
a couple if there's any other obviously

2103
01:47:58,920 --> 01:48:03,810
stupid things going on but we'll leave

2104
01:48:00,779 --> 01:48:07,159
the actual making of the code nice tall

2105
01:48:03,810 --> 01:48:07,160
till the next weekend

2106
01:48:07,770 --> 01:48:11,840
well what is this complaining about Oh

2107
01:48:13,819 --> 01:48:24,569
woops UVW is not sorry not what I wanted

2108
01:48:18,060 --> 01:48:32,940
to do I was trying to clamp the cell

2109
01:48:24,569 --> 01:48:38,819
coordinates not the location what's

2110
01:48:32,939 --> 01:48:40,649
interesting about the UVW is I mean in

2111
01:48:38,819 --> 01:48:42,569
some sense I feel like this probably

2112
01:48:40,649 --> 01:48:44,819
wants to actually be allowed to be

2113
01:48:42,569 --> 01:48:46,649
completely bogus like in other words it

2114
01:48:44,819 --> 01:48:48,840
probably wants to be computed afterward

2115
01:48:46,649 --> 01:48:51,949
but I don't know like maybe you want it

2116
01:48:48,840 --> 01:48:54,510
to always be zero to one anyway

2117
01:48:51,949 --> 01:49:00,359
that's really hard to say so I'm not

2118
01:48:54,510 --> 01:49:03,060
sure what that should be if you place it

2119
01:49:00,359 --> 01:49:05,250
up here yeah there's just you know I

2120
01:49:03,060 --> 01:49:06,780
don't know so I feel like maybe we want

2121
01:49:05,250 --> 01:49:27,569
it to always be more bounded I'm gonna

2122
01:49:06,779 --> 01:49:29,579
put two do on it so yeah you know what

2123
01:49:27,569 --> 01:49:31,469
do we want to do there I'm not sure we

2124
01:49:29,579 --> 01:49:33,510
could also clamp that value and then it

2125
01:49:31,470 --> 01:49:34,920
would always be correct I don't know we

2126
01:49:33,510 --> 01:49:39,239
want to do with that but you know we'll

2127
01:49:34,920 --> 01:49:41,250
see okay so actually not as bad as I was

2128
01:49:39,239 --> 01:49:42,989
expecting it's actually doing something

2129
01:49:41,250 --> 01:49:44,909
at the moment but yeah obviously totally

2130
01:49:42,989 --> 01:49:47,699
wrong but I'm gonna leave it there

2131
01:49:44,909 --> 01:49:52,889
because we'll go ahead and actually try

2132
01:49:47,699 --> 01:49:54,239
to work these out more directly in next

2133
01:49:52,890 --> 01:49:56,070
weekend when will actually start to work

2134
01:49:54,239 --> 01:49:58,590
on the light transport part we'll get

2135
01:49:56,069 --> 01:50:02,729
the light probe stuff cleaner and then

2136
01:49:58,590 --> 01:50:04,110
we will try to you know figure out how

2137
01:50:02,729 --> 01:50:06,299
we want to start doing the light

2138
01:50:04,109 --> 01:50:07,769
transport stuff we've got it sketched in

2139
01:50:06,300 --> 01:50:09,869
there like it's actually got some code

2140
01:50:07,770 --> 01:50:12,660
in there that sort of does it but that's

2141
01:50:09,869 --> 01:50:16,099
gonna have to start improving alright

2142
01:50:12,659 --> 01:50:16,099
let's go to quick QA

2143
01:51:11,590 --> 01:51:15,560
room why does the hand meet here I shall

2144
01:51:14,569 --> 01:51:19,009
not have the game development and

2145
01:51:15,560 --> 01:51:21,230
programming tags so it sometimes does

2146
01:51:19,010 --> 01:51:24,800
and sometimes doesn't is the answer

2147
01:51:21,229 --> 01:51:29,529
Roman basically the wait which chose to

2148
01:51:24,800 --> 01:51:29,529
implement their system because you know

2149
01:51:30,789 --> 01:51:38,449
that they are web programmers I guess is

2150
01:51:33,529 --> 01:51:41,029
that rather than allowing you to set

2151
01:51:38,449 --> 01:51:43,760
what your tags are going to be in some

2152
01:51:41,029 --> 01:51:45,170
kind of a like groups and then when you

2153
01:51:43,760 --> 01:51:46,760
start streaming you say which one it is

2154
01:51:45,170 --> 01:51:50,510
which is exactly what you would normally

2155
01:51:46,760 --> 01:51:52,640
do they just clear your tags every time

2156
01:51:50,510 --> 01:51:57,130
every time you broadcast they clear your

2157
01:51:52,640 --> 01:51:59,060
tags so the reason that we are not

2158
01:51:57,130 --> 01:52:01,640
labeled as game development programming

2159
01:51:59,060 --> 01:52:03,860
is because I got tired of every time

2160
01:52:01,640 --> 01:52:12,590
before I stream having to pick all of

2161
01:52:03,859 --> 01:52:14,829
our tags again right so I don't I just

2162
01:52:12,590 --> 01:52:17,650
got sick of it it was too rage-inducing

2163
01:52:14,829 --> 01:52:20,689
because every stream its exact same tags

2164
01:52:17,649 --> 01:52:22,279
we always do the same thing we do game

2165
01:52:20,689 --> 01:52:26,869
development and programming every stream

2166
01:52:22,279 --> 01:52:30,969
every time and I don't really want to

2167
01:52:26,869 --> 01:52:30,970
have to go set up our tags every time

2168
01:52:36,109 --> 01:52:42,859
Oh for debug techs no we haven't put in

2169
01:52:38,779 --> 01:52:45,039
a separate pipe for non lit rendering

2170
01:52:42,859 --> 01:52:45,039
yet

2171
01:53:04,029 --> 01:53:07,689
do you have any examples of good written

2172
01:53:05,920 --> 01:53:11,230
software open-source that you would

2173
01:53:07,689 --> 01:53:13,389
recommend someone to study or that you

2174
01:53:11,229 --> 01:53:22,029
yourself have studied in the past I

2175
01:53:13,390 --> 01:53:24,340
couldn't say for sure so I don't know I

2176
01:53:22,029 --> 01:53:27,789
don't spend a lot of time reading source

2177
01:53:24,340 --> 01:53:29,770
code I read mostly technical papers and

2178
01:53:27,789 --> 01:53:31,720
I just take people's word for it when I

2179
01:53:29,770 --> 01:53:35,800
read like here's how we it worked right

2180
01:53:31,720 --> 01:53:38,770
I don't usually go read their code but

2181
01:53:35,800 --> 01:53:42,670
you know I guess what I would say is I

2182
01:53:38,770 --> 01:53:45,820
would be shocked if say the doom and

2183
01:53:42,670 --> 01:53:49,029
quake source code wasn't really good

2184
01:53:45,819 --> 01:53:50,559
source code like I would be shocked if

2185
01:53:49,029 --> 01:53:52,059
it turned out that the doom source code

2186
01:53:50,560 --> 01:53:57,670
or the quake source code wasn't really

2187
01:53:52,060 --> 01:54:00,090
good I bet it is I just don't think you

2188
01:53:57,670 --> 01:54:02,920
can make doom and quake in that era

2189
01:54:00,090 --> 01:54:07,180
without the code being good I just don't

2190
01:54:02,920 --> 01:54:09,340
think it happens right so I would say

2191
01:54:07,180 --> 01:54:11,860
probably all right that's where I would

2192
01:54:09,340 --> 01:54:14,560
look first I didn't read them myself but

2193
01:54:11,859 --> 01:54:17,170
I you know I I would be pretty surprised

2194
01:54:14,560 --> 01:54:19,410
to find that that wasn't good source

2195
01:54:17,170 --> 01:54:19,409
code

2196
01:54:38,550 --> 01:54:45,630
where's the puss she is outside the room

2197
01:54:43,829 --> 01:54:47,519
that I am streaming from that is why the

2198
01:54:45,630 --> 01:54:50,520
puss is like I usually close the door if

2199
01:54:47,520 --> 01:54:52,140
the puss is already out there because

2200
01:54:50,520 --> 01:55:02,340
that way there's not as much noise

2201
01:54:52,140 --> 01:55:03,990
coming from outside but you know I don't

2202
01:55:02,340 --> 01:55:05,819
think this color scheme has a name I

2203
01:55:03,989 --> 01:55:08,029
made up this color scheme this is a new

2204
01:55:05,819 --> 01:55:08,029
one

2205
01:55:09,140 --> 01:55:17,430
so I made it up and balanced it out I

2206
01:55:14,420 --> 01:55:18,899
think I've done a future revision in the

2207
01:55:17,430 --> 01:55:25,680
clara scheme as well it's a little bit

2208
01:55:18,899 --> 01:55:28,969
different that's on my new editor but

2209
01:55:25,680 --> 01:55:28,970
it's pretty similar

2210
01:55:33,328 --> 01:55:38,769
alt overflow how can we improve the web

2211
01:55:36,130 --> 01:55:41,310
just burn it down man like the get rid

2212
01:55:38,770 --> 01:55:41,310
of all of it

2213
01:55:41,429 --> 01:55:47,230
start over and make things be

2214
01:55:44,020 --> 01:55:49,750
peer-to-peer again like just you know if

2215
01:55:47,229 --> 01:55:52,000
if Microsoft had actually known how to

2216
01:55:49,750 --> 01:55:54,429
make an operating system that could talk

2217
01:55:52,000 --> 01:55:55,719
to other that we're too computers could

2218
01:55:54,429 --> 01:56:00,880
talk to each other we wouldn't need any

2219
01:55:55,719 --> 01:56:02,889
garbage anyway so you know as far as I'm

2220
01:56:00,880 --> 01:56:05,650
concerned we're living in 1970 right now

2221
01:56:02,889 --> 01:56:08,409
and everyone has a terminal connected to

2222
01:56:05,649 --> 01:56:11,618
a mainframe and it sucks because it

2223
01:56:08,408 --> 01:56:16,000
always sucks it's never going to be good

2224
01:56:11,618 --> 01:56:18,368
ever in the history of mankind 3,000

2225
01:56:16,000 --> 01:56:20,469
years from now it will still suck to

2226
01:56:18,368 --> 01:56:24,158
connect to a mainframe for all the

2227
01:56:20,469 --> 01:56:26,980
reasons that it sucks latency that is

2228
01:56:24,158 --> 01:56:28,960
insurmountable but in like you can could

2229
01:56:26,979 --> 01:56:30,009
not it's insurmountable you can't you

2230
01:56:28,960 --> 01:56:31,868
can't nothing you can do about it right

2231
01:56:30,010 --> 01:56:33,190
it's the speed of light until someone

2232
01:56:31,868 --> 01:56:37,689
breaks the speed of light you're screwed

2233
01:56:33,189 --> 01:56:39,729
right the latency is bad the politics of

2234
01:56:37,689 --> 01:56:43,988
it are bad it centralizes the control of

2235
01:56:39,729 --> 01:56:46,928
things into a handful of people the the

2236
01:56:43,988 --> 01:56:49,209
ownership is bad it prevents you from

2237
01:56:46,929 --> 01:56:50,859
being able to actually like have your

2238
01:56:49,210 --> 01:56:51,810
own computing environment and control

2239
01:56:50,859 --> 01:56:54,848
how it works

2240
01:56:51,810 --> 01:56:56,469
we're in 1970 again somebody needs to be

2241
01:56:54,849 --> 01:57:00,550
Microsoft someone needs to be the

2242
01:56:56,469 --> 01:57:03,639
Microsoft of 1980 right and you need to

2243
01:57:00,550 --> 01:57:05,789
do that you need to be that in 2020 and

2244
01:57:03,639 --> 01:57:08,529
it's get rid of it get rid of it

2245
01:57:05,789 --> 01:57:11,529
does anyone connect to a VAX anymore no

2246
01:57:08,529 --> 01:57:13,359
and that's what we need we need someone

2247
01:57:11,529 --> 01:57:14,738
in 20 years to look back and go oh

2248
01:57:13,359 --> 01:57:16,899
that's weird like you mean to tell me

2249
01:57:14,738 --> 01:57:18,968
everyone there were these giant rooms

2250
01:57:16,899 --> 01:57:20,888
filled with computers and everyone like

2251
01:57:18,969 --> 01:57:22,480
called over what's essentially like a

2252
01:57:20,889 --> 01:57:24,969
phone line to them or something

2253
01:57:22,479 --> 01:57:27,009
that's absurd right we'd three let's say

2254
01:57:24,969 --> 01:57:29,560
the same thing about cloud computers

2255
01:57:27,010 --> 01:57:31,119
like there's a giant datacenter with

2256
01:57:29,560 --> 01:57:33,909
lots of computers in it you didn't just

2257
01:57:31,118 --> 01:57:37,179
have it at your house like what

2258
01:57:33,908 --> 01:57:39,879
and like you mean to tell me that you

2259
01:57:37,179 --> 01:57:42,069
used the like Internet backbone instead

2260
01:57:39,880 --> 01:57:43,929
of talking between you and the person

2261
01:57:42,069 --> 01:57:45,670
you're trying to talk to you like talk

2262
01:57:43,929 --> 01:57:46,720
to some giant corporation first you like

2263
01:57:45,670 --> 01:57:48,730
read all your messages

2264
01:57:46,720 --> 01:57:51,369
what and you'd be like you need that to

2265
01:57:48,729 --> 01:57:53,979
sound as stupid today as putting an

2266
01:57:51,369 --> 01:57:58,840
acoustic cup or mode em on your vt100

2267
01:57:53,979 --> 01:58:08,489
and calling evacs sounds to us today but

2268
01:57:58,840 --> 01:58:08,489
that's what you did in 1970 1975

2269
01:58:13,800 --> 01:58:18,420
someone had mentioned it a stream

2270
01:58:15,329 --> 01:58:23,819
perhaps you needed 1.0 - herb blend you

2271
01:58:18,420 --> 01:58:29,730
but I had one - herb lend you why would

2272
01:58:23,819 --> 01:58:31,619
that matter not sure why that would ever

2273
01:58:29,729 --> 01:58:34,439
matter in that circumstance so maybe you

2274
01:58:31,619 --> 01:58:36,720
guys are saying something I'm not

2275
01:58:34,439 --> 01:58:45,389
understanding but like you're talking

2276
01:58:36,720 --> 01:58:50,130
about this line of code right I thought

2277
01:58:45,390 --> 01:58:52,550
we're talking about or is there

2278
01:58:50,130 --> 01:58:52,550
something else

2279
01:59:09,329 --> 01:59:16,890
is DirectX dependent on the C runtime

2280
01:59:12,000 --> 01:59:18,869
can be used without it so I I'm not

2281
01:59:16,890 --> 01:59:22,940
really a DirectX expert because I don't

2282
01:59:18,869 --> 01:59:27,960
spend a lot of time programming it but

2283
01:59:22,939 --> 01:59:29,809
my assumption is that the reason that

2284
01:59:27,960 --> 01:59:32,520
there's some confusion about this is

2285
01:59:29,810 --> 01:59:36,840
because people don't differentiate

2286
01:59:32,520 --> 01:59:41,220
between direct X the hardware API and

2287
01:59:36,840 --> 01:59:44,279
direct X the library so if you're

2288
01:59:41,220 --> 01:59:46,500
talking about DirectX the like library

2289
01:59:44,279 --> 01:59:49,199
with all of the like tools and crap in

2290
01:59:46,500 --> 01:59:50,159
it and like the matrix routines or stuff

2291
01:59:49,199 --> 01:59:52,500
I mean I remember there being like a

2292
01:59:50,159 --> 01:59:54,449
bunch of stuff marked X that is almost

2293
01:59:52,500 --> 01:59:56,390
certainly dependent on the C runtime and

2294
01:59:54,449 --> 01:59:59,519
probably can't be used without it right

2295
01:59:56,390 --> 02:00:06,110
but DirectX the hardware API if you just

2296
01:59:59,520 --> 02:00:09,510
want to like get proc address or and and

2297
02:00:06,109 --> 02:00:12,989
you know get pointers to the comics that

2298
02:00:09,510 --> 02:00:16,260
implement DirectX or something that

2299
02:00:12,989 --> 02:00:17,519
should just work right you shouldn't

2300
02:00:16,260 --> 02:00:19,770
need anything you don't even need an

2301
02:00:17,520 --> 02:00:21,950
import library for that all you need to

2302
02:00:19,770 --> 02:00:26,040
know is the layout of the virtual table

2303
02:00:21,949 --> 02:00:27,059
so you need the H files and and you

2304
02:00:26,039 --> 02:00:30,390
could even cut and paste all the

2305
02:00:27,060 --> 02:00:33,480
definitions and you need to actually

2306
02:00:30,390 --> 02:00:34,740
query where those V tables are which I

2307
02:00:33,479 --> 02:00:40,589
think you could probably just you do

2308
02:00:34,739 --> 02:00:42,059
with get proc address I think now you

2309
02:00:40,590 --> 02:00:43,440
need to hard-code the grids and your app

2310
02:00:42,060 --> 02:00:45,000
as well I mean but that's what happens

2311
02:00:43,439 --> 02:00:46,259
anyway like that's in the H file it's

2312
02:00:45,000 --> 02:00:50,819
gonna hard code the grids that you query

2313
02:00:46,260 --> 02:00:53,610
for but I again not something I really

2314
02:00:50,819 --> 02:00:55,979
do but you should be able to do that

2315
02:00:53,609 --> 02:00:57,989
stuff so you shouldn't need to link with

2316
02:00:55,979 --> 02:00:59,250
the real DirectX library that might pull

2317
02:00:57,989 --> 02:01:01,519
in the C runtime lever and all that

2318
02:00:59,250 --> 02:01:01,520
garbage

2319
02:01:14,439 --> 02:01:19,250
so okay god I gotta answer some

2320
02:01:17,869 --> 02:01:20,479
questions about this line because I'm

2321
02:01:19,250 --> 02:01:23,260
not sure why this is causing so much

2322
02:01:20,479 --> 02:01:26,089
confusion so let me just walk through it

2323
02:01:23,260 --> 02:01:29,270
so key irradiance preservation is a

2324
02:01:26,090 --> 02:01:33,650
number that is between 0 &amp; 1 and you can

2325
02:01:29,270 --> 02:01:36,950
see that here right so herb lend you is

2326
02:01:33,649 --> 02:01:38,839
by default it's between 0 &amp; 1 it's it's

2327
02:01:36,949 --> 02:01:40,219
gonna be well I mean here is the actual

2328
02:01:38,840 --> 02:01:46,489
value I don't want to try and do that in

2329
02:01:40,219 --> 02:01:50,539
my head but you know it's it's this and

2330
02:01:46,488 --> 02:01:53,029
so if you think about what 1 minus herb

2331
02:01:50,539 --> 02:01:58,130
lend you is going to compute it's just

2332
02:01:53,029 --> 02:01:59,479
going to compute like 0.02 right it's

2333
02:01:58,130 --> 02:02:01,789
not quite that because you have this 3

2334
02:01:59,479 --> 02:02:05,149
repeating but you know it's within the

2335
02:02:01,789 --> 02:02:09,170
ballpark that's what 1 minus for a blend

2336
02:02:05,149 --> 02:02:11,359
view is going to do now in terms of what

2337
02:02:09,170 --> 02:02:13,340
happens with this expression this is a

2338
02:02:11,359 --> 02:02:15,380
floating point value and this is an

2339
02:02:13,340 --> 02:02:18,350
integer so it's going to convert this

2340
02:02:15,380 --> 02:02:20,060
integer to a floating point value now it

2341
02:02:18,350 --> 02:02:21,980
is true that you do need to watch out

2342
02:02:20,060 --> 02:02:24,710
for that sometimes if this is a variable

2343
02:02:21,979 --> 02:02:26,359
or something but in fact if it was a

2344
02:02:24,710 --> 02:02:28,730
variable I would have gotten a warning

2345
02:02:26,359 --> 02:02:31,429
so if for example I had done something

2346
02:02:28,729 --> 02:02:33,439
that couldn't see so like for example

2347
02:02:31,430 --> 02:02:35,600
let's suppose that I took solution debug

2348
02:02:33,439 --> 02:02:37,819
line count which is an integer and I put

2349
02:02:35,600 --> 02:02:40,250
it here it would have issued a warning I

2350
02:02:37,819 --> 02:02:41,929
believe and the warning is just that it

2351
02:02:40,250 --> 02:02:44,988
can't necessarily do that conversion I

2352
02:02:41,930 --> 02:02:46,880
think all right that's a little bit

2353
02:02:44,988 --> 02:02:48,169
weird so I'll be honest I'm not sure why

2354
02:02:46,880 --> 02:02:54,590
it didn't issue a warning I would have

2355
02:02:48,170 --> 02:03:00,579
wanted it to but it didn't did we turn

2356
02:02:54,590 --> 02:03:00,579
it off we may have turned it off

2357
02:03:04,289 --> 02:03:08,529
let's find out I really should REM these

2358
02:03:06,970 --> 02:03:10,539
in here so we know which ones they are

2359
02:03:08,529 --> 02:03:12,809
just for quick reference but let's take

2360
02:03:10,539 --> 02:03:12,810
a look

2361
02:03:24,520 --> 02:03:48,840
name the struct Union unreferenced

2362
02:03:36,970 --> 02:03:48,840
formal parameter local variable

2363
02:03:54,930 --> 02:04:08,260
removed function conditional expression

2364
02:04:04,239 --> 02:04:10,420
constant so I guess I'm not sure why

2365
02:04:08,260 --> 02:04:19,060
it's not warning us about conversion

2366
02:04:10,420 --> 02:04:25,710
there because it should be it can't it

2367
02:04:19,060 --> 02:04:29,200
can't represent an arbitrary you 32 and

2368
02:04:25,710 --> 02:04:32,109
I'm not sure why unless I'm missing one

2369
02:04:29,199 --> 02:04:35,109
of the warning disables I'm not sure why

2370
02:04:32,109 --> 02:04:38,109
it isn't warning because my recollection

2371
02:04:35,109 --> 02:04:39,639
is normally it does when it and I don't

2372
02:04:38,109 --> 02:04:42,880
really need it to because most the time

2373
02:04:39,640 --> 02:04:46,480
I'm okay with that but my assumption

2374
02:04:42,880 --> 02:04:54,630
there would be that that it's not really

2375
02:04:46,479 --> 02:04:54,629
a problem per se so let me just check

2376
02:05:11,979 --> 02:05:15,489
and you know the other thing I'm

2377
02:05:13,899 --> 02:05:28,018
thinking is I wonder if it's is it

2378
02:05:15,488 --> 02:05:31,118
because so it's because it's never used

2379
02:05:28,019 --> 02:05:32,619
it may just never actually be producing

2380
02:05:31,118 --> 02:05:36,578
this value the other thing I was

2381
02:05:32,618 --> 02:05:42,179
thinking so I also kind of wonder if

2382
02:05:36,578 --> 02:05:42,179
like we need to use it

2383
02:05:54,899 --> 02:06:00,549
yeah I got nothing I don't know why it

2384
02:05:57,430 --> 02:06:03,310
doesn't issue value an error there

2385
02:06:00,550 --> 02:06:08,079
because I would have assumed that we

2386
02:06:03,310 --> 02:06:10,750
would get an error on on that and I

2387
02:06:08,079 --> 02:06:13,659
don't know why we're not normally if you

2388
02:06:10,750 --> 02:06:17,920
do an in to float conversion implicitly

2389
02:06:13,659 --> 02:06:21,930
it will give you some warning at least

2390
02:06:17,920 --> 02:06:24,369
that was my recollection so you know I

2391
02:06:21,930 --> 02:06:27,700
mean I'm assuming unless unless I'm just

2392
02:06:24,369 --> 02:06:29,260
going crazy here at the very least you

2393
02:06:27,699 --> 02:06:31,630
know like that ain't gonna work

2394
02:06:29,260 --> 02:06:34,150
right you would think you'd tell us hey

2395
02:06:31,630 --> 02:06:36,970
I'm worried about this right yeah float

2396
02:06:34,149 --> 02:06:38,920
to you 32x and that's when it knows it

2397
02:06:36,970 --> 02:06:41,260
can do properly right it's looking at

2398
02:06:38,920 --> 02:06:44,520
the value 1.0 and it knows it can do it

2399
02:06:41,260 --> 02:06:49,570
so that's a little bit odd looking at

2400
02:06:44,520 --> 02:06:53,530
floats in here you know debug light P

2401
02:06:49,569 --> 02:06:56,710
maybe so if I said debug like P X equals

2402
02:06:53,529 --> 02:06:58,329
you know some value here then I'm

2403
02:06:56,710 --> 02:07:00,310
assuming that it wouldn't issue a value

2404
02:06:58,329 --> 02:07:02,229
if it it wouldn't issue an error if it

2405
02:07:00,310 --> 02:07:06,039
knows it can place the value in there

2406
02:07:02,229 --> 02:07:08,189
safely now I don't think it would be

2407
02:07:06,039 --> 02:07:11,109
able to put all values in there safely

2408
02:07:08,189 --> 02:07:14,619
because I don't think for example if I

2409
02:07:11,109 --> 02:07:16,299
was to do s 32 maximum it shouldn't be

2410
02:07:14,619 --> 02:07:18,369
able to represent that and I would hope

2411
02:07:16,300 --> 02:07:19,500
that it would give me an error maybe I'm

2412
02:07:18,369 --> 02:07:22,180
wrong

2413
02:07:19,500 --> 02:07:24,130
yeah that's really strange because I'm

2414
02:07:22,180 --> 02:07:25,480
pretty sure that there would be no way

2415
02:07:24,130 --> 02:07:29,619
for it to actually do this operation

2416
02:07:25,479 --> 02:07:31,959
right this operation doesn't work and I

2417
02:07:29,619 --> 02:07:33,970
don't I would have expected us to have

2418
02:07:31,960 --> 02:07:35,289
turned it off in here and that's why

2419
02:07:33,970 --> 02:07:38,140
it's not happening

2420
02:07:35,289 --> 02:07:40,989
but that doesn't seem to be the case is

2421
02:07:38,140 --> 02:07:45,579
there some other - WD that we're doing

2422
02:07:40,989 --> 02:07:47,170
that I missed yeah I mean I don't know

2423
02:07:45,579 --> 02:07:49,539
that's really strange to me I guess it's

2424
02:07:47,170 --> 02:07:51,730
all I would say because like for example

2425
02:07:49,539 --> 02:07:53,619
if we look at what actually happens here

2426
02:07:51,729 --> 02:07:58,199
I mean let's just do it right so let me

2427
02:07:53,619 --> 02:08:01,149
go ahead and set this to minus OD right

2428
02:07:58,199 --> 02:08:02,679
and let's go ahead and run the code to

2429
02:08:01,149 --> 02:08:06,339
that point and I'll just kind of show

2430
02:08:02,680 --> 02:08:08,409
you what I'm trying to say here so if we

2431
02:08:06,340 --> 02:08:10,659
were to set a breakpoint

2432
02:08:08,409 --> 02:08:12,069
where we were going to run that that

2433
02:08:10,659 --> 02:08:15,789
particular piece of code where we do

2434
02:08:12,069 --> 02:08:20,409
this assignment here right so if we look

2435
02:08:15,789 --> 02:08:22,090
at what we expect to find here I guess I

2436
02:08:20,409 --> 02:08:23,260
should probably also put s for you max

2437
02:08:22,090 --> 02:08:25,810
market that's well I can't probably look

2438
02:08:23,260 --> 02:08:28,150
at that in the butter yeah so if I was

2439
02:08:25,810 --> 02:08:29,890
to also have the value here and you know

2440
02:08:28,149 --> 02:08:33,369
now I can just do it directly so we'll

2441
02:08:29,890 --> 02:08:36,340
do it this way test Val equals s what

2442
02:08:33,369 --> 02:08:41,680
say you 32 max right and test float

2443
02:08:36,340 --> 02:08:45,640
equals test Val I can also do it the

2444
02:08:41,680 --> 02:08:53,230
final way and say you know round-trip

2445
02:08:45,640 --> 02:08:55,329
equals new 32 test float right so if we

2446
02:08:53,229 --> 02:08:58,209
watch what happens here and we just look

2447
02:08:55,329 --> 02:08:59,880
at the you know the process of shuffling

2448
02:08:58,210 --> 02:09:08,020
these things around

2449
02:08:59,880 --> 02:09:14,470
hey look I finally got the warrant so

2450
02:09:08,020 --> 02:09:17,770
now I got the warning that was the

2451
02:09:14,470 --> 02:09:20,670
warning I was talking about so let me

2452
02:09:17,770 --> 02:09:20,670
see how smart it is

2453
02:09:32,710 --> 02:09:46,250
yeah so I'm just really confused I don't

2454
02:09:36,770 --> 02:09:48,530
quite get I don't quite get it how it's

2455
02:09:46,250 --> 02:09:51,409
- yeah all right

2456
02:09:48,529 --> 02:09:54,409
so just to be clear this is what I would

2457
02:09:51,409 --> 02:09:56,059
expect if it sees a value if the

2458
02:09:54,409 --> 02:09:58,189
compiler sees a value it knows it can

2459
02:09:56,060 --> 02:10:00,260
convert to a float exactly I would

2460
02:09:58,189 --> 02:10:02,988
expect it to just accept that value and

2461
02:10:00,260 --> 02:10:05,869
that's what I assume it's doing here if

2462
02:10:02,988 --> 02:10:10,039
you use a value that it doesn't know

2463
02:10:05,869 --> 02:10:12,079
which in this case right

2464
02:10:10,039 --> 02:10:14,180
it maybe does or doesn't it depends on

2465
02:10:12,079 --> 02:10:16,100
how much analysis is going to do is it

2466
02:10:14,180 --> 02:10:17,900
going to look and see that test val is

2467
02:10:16,100 --> 02:10:20,480
set to five or not and the answer

2468
02:10:17,899 --> 02:10:21,949
appears to be not right because it looks

2469
02:10:20,479 --> 02:10:26,238
in it things I can't do this even though

2470
02:10:21,949 --> 02:10:28,250
this was possible right so it is

2471
02:10:26,238 --> 02:10:29,779
assuming that's an analysis problem so

2472
02:10:28,250 --> 02:10:31,789
it's going like oh I convert it I can

2473
02:10:29,779 --> 02:10:32,539
convert a constant to an f32 and I know

2474
02:10:31,789 --> 02:10:34,609
it's fine

2475
02:10:32,539 --> 02:10:36,260
but I can't just convert some random u3

2476
02:10:34,609 --> 02:10:38,119
to it and I didn't go to look to see

2477
02:10:36,260 --> 02:10:41,570
that that would actually work so you

2478
02:10:38,119 --> 02:10:43,250
know what I'm saying so this is what I

2479
02:10:41,569 --> 02:10:45,559
would have expected but what I don't

2480
02:10:43,250 --> 02:10:48,829
understand is why I can't put do that

2481
02:10:45,560 --> 02:10:53,000
same thing here so integral conversion

2482
02:10:48,829 --> 02:11:00,710
side it looks like this is not an error

2483
02:10:53,000 --> 02:11:04,010
or something yeah so somehow when it

2484
02:11:00,710 --> 02:11:06,439
does the integral promotion right it

2485
02:11:04,010 --> 02:11:08,600
doesn't think that either of these two

2486
02:11:06,439 --> 02:11:10,699
is a problem like no matter what it

2487
02:11:08,600 --> 02:11:12,170
decided to do here if it decided to

2488
02:11:10,699 --> 02:11:13,970
convert them both to integers or it gets

2489
02:11:12,170 --> 02:11:17,750
decided to convert them both to floats

2490
02:11:13,970 --> 02:11:18,980
there's a problem right in either case

2491
02:11:17,750 --> 02:11:20,869
it should have been giving you the same

2492
02:11:18,979 --> 02:11:22,909
warning it was giving me here because

2493
02:11:20,869 --> 02:11:25,039
all I did was the exact same operation

2494
02:11:22,909 --> 02:11:28,750
right here's test values as a float

2495
02:11:25,039 --> 02:11:33,010
here's test values as a float again

2496
02:11:28,750 --> 02:11:36,409
right so I don't really know and

2497
02:11:33,010 --> 02:11:41,900
furthermore I'm assuming I can provoke

2498
02:11:36,409 --> 02:11:44,510
the air nope so literally it just

2499
02:11:41,899 --> 02:11:44,750
doesn't think casting test value an f32

2500
02:11:44,510 --> 02:11:46,579
is

2501
02:11:44,750 --> 02:11:52,039
problem right up into the point where

2502
02:11:46,579 --> 02:11:54,829
you actually assign it I guess I am no

2503
02:11:52,039 --> 02:11:57,399
idea like I I can't even hazard a guess

2504
02:11:54,829 --> 02:12:02,569
as to why that's the case

2505
02:11:57,399 --> 02:12:04,099
good luck right so I have no idea what's

2506
02:12:02,569 --> 02:12:06,859
going on there I really couldn't tell

2507
02:12:04,100 --> 02:12:08,030
you I'm happy to write it this way if it

2508
02:12:06,859 --> 02:12:10,399
makes you feel more comfortable but

2509
02:12:08,029 --> 02:12:12,380
either way one should have been fine and

2510
02:12:10,399 --> 02:12:14,179
it's just moving that to an integer from

2511
02:12:12,380 --> 02:12:17,270
integer to a float which is fine but

2512
02:12:14,180 --> 02:12:19,610
let's talk about this part here so if I

2513
02:12:17,270 --> 02:12:20,870
force it to do this conversion and you

2514
02:12:19,609 --> 02:12:23,149
can see that it's complaining about it

2515
02:12:20,869 --> 02:12:25,939
which makes perfect sense if I force it

2516
02:12:23,149 --> 02:12:28,699
to do the conversion like so I just want

2517
02:12:25,939 --> 02:12:31,969
to show you why this is relevant in in

2518
02:12:28,699 --> 02:12:34,849
some way so when we actually go and look

2519
02:12:31,970 --> 02:12:38,000
at what happens here what you can see in

2520
02:12:34,850 --> 02:12:40,550
this particular case right if I inspect

2521
02:12:38,000 --> 02:12:42,560
the actual values that we get like you

2522
02:12:40,550 --> 02:12:47,390
know it that the CPU is actually going

2523
02:12:42,560 --> 02:12:50,500
to use if I look at each of these things

2524
02:12:47,390 --> 02:12:54,280
I don't know yeah there we go

2525
02:12:50,500 --> 02:12:54,279
well actually let me do this

2526
02:13:03,569 --> 02:13:07,658
so if we were to look at these actual

2527
02:13:05,590 --> 02:13:11,319
values what you can do is you can see

2528
02:13:07,658 --> 02:13:14,908
what they actually each gets set to and

2529
02:13:11,319 --> 02:13:18,609
what you can see here is the actual

2530
02:13:14,908 --> 02:13:20,319
mantissa of this thing is gonna be you

2531
02:13:18,609 --> 02:13:23,049
know right here and it's gonna be set

2532
02:13:20,319 --> 02:13:25,479
it's 24 bits right so I think usually

2533
02:13:23,050 --> 02:13:27,969
and so it's gonna be set in such a way

2534
02:13:25,479 --> 02:13:31,598
that we can actually directly encode

2535
02:13:27,969 --> 02:13:34,149
this value without any loss right so for

2536
02:13:31,599 --> 02:13:37,510
0 a at the head end of my float is going

2537
02:13:34,149 --> 02:13:41,229
to perfectly transpose to right so the

2538
02:13:37,510 --> 02:13:43,960
power of the thing the remainder of a

2539
02:13:41,229 --> 02:13:51,218
power of 2 is going to be like 1 because

2540
02:13:43,960 --> 02:13:53,579
the actual the actual power of 2 that

2541
02:13:51,219 --> 02:13:57,219
I'm trying to raise this thing to

2542
02:13:53,579 --> 02:14:06,729
presumably is 2 like right because I

2543
02:13:57,219 --> 02:14:08,889
want to write it here there we go

2544
02:14:06,729 --> 02:14:14,738
so I want to write this as something

2545
02:14:08,889 --> 02:14:16,569
that is raised to a power and then I

2546
02:14:14,738 --> 02:14:20,229
want to encode it as 1 point something

2547
02:14:16,569 --> 02:14:22,929
right so what I have to do is I first

2548
02:14:20,229 --> 02:14:26,919
have to figure out how would I represent

2549
02:14:22,929 --> 02:14:29,529
5 as something raised to a power right

2550
02:14:26,920 --> 02:14:34,329
and it's a little hard to read this way

2551
02:14:29,529 --> 02:14:36,158
because this is like I don't know

2552
02:14:34,329 --> 02:14:39,158
exactly how this is choosing to write

2553
02:14:36,158 --> 02:14:42,279
this out if that is already in power of

2554
02:14:39,158 --> 02:14:45,238
2 in binary form or hexadecimal form I

2555
02:14:42,279 --> 02:14:45,238
guess it might be

2556
02:14:50,889 --> 02:14:58,659
although I don't know I mean bear with

2557
02:14:55,300 --> 02:15:00,250
me here Romney was right this out I'm

2558
02:14:58,658 --> 02:15:01,779
not sure what I've never actually tried

2559
02:15:00,250 --> 02:15:05,979
this feature in remedy so I don't

2560
02:15:01,779 --> 02:15:08,170
actually know what it's doing but if I

2561
02:15:05,979 --> 02:15:10,448
have an integer right and I want to

2562
02:15:08,170 --> 02:15:12,520
represent five and I'm gonna put it into

2563
02:15:10,448 --> 02:15:16,000
a thing I know that I've got like a 1 a

2564
02:15:12,520 --> 02:15:17,590
2 and a 4 you know and some other things

2565
02:15:16,000 --> 02:15:19,929
that I can use to represent it so I'm

2566
02:15:17,590 --> 02:15:22,719
looking for values here that can add to

2567
02:15:19,929 --> 02:15:25,420
that right so I know I want to set the 1

2568
02:15:22,719 --> 02:15:28,179
and I want to set the 4 because 1 plus 4

2569
02:15:25,420 --> 02:15:30,789
equals 5 and I don't want to set the 2

2570
02:15:28,179 --> 02:15:32,980
so this is what I end up in with my

2571
02:15:30,789 --> 02:15:36,310
integer so the encoding for an integer

2572
02:15:32,979 --> 02:15:38,198
is 1 0 1 in binary and in fact I don't

2573
02:15:36,310 --> 02:15:41,739
know I might be able to get that to be

2574
02:15:38,198 --> 02:15:42,849
shown in remedy I guess not III guess

2575
02:15:41,738 --> 02:15:45,609
they don't I don't know if it has a

2576
02:15:42,850 --> 02:15:47,289
binary specifier but that's what this

2577
02:15:45,609 --> 02:15:51,639
would look like if we actually looked at

2578
02:15:47,289 --> 02:15:54,310
it in binary right so then if I want to

2579
02:15:51,639 --> 02:15:56,859
look at what the float encoding is gonna

2580
02:15:54,310 --> 02:15:58,900
be well the floating coding is the same

2581
02:15:56,859 --> 02:16:00,759
as like when you look at scientific

2582
02:15:58,899 --> 02:16:03,579
notation for a number I'm gonna have

2583
02:16:00,760 --> 02:16:07,590
something like you know 5e 3 or

2584
02:16:03,579 --> 02:16:10,539
something you know like the you know 12

2585
02:16:07,590 --> 02:16:14,380
times 10 to the 3rd or whatever right

2586
02:16:10,539 --> 02:16:17,079
it's this kind of notation but in you

2587
02:16:14,380 --> 02:16:19,779
know in human form we always use tens as

2588
02:16:17,079 --> 02:16:22,420
our base in floating-point form we use

2589
02:16:19,779 --> 02:16:24,609
twos as our base right so what we want

2590
02:16:22,420 --> 02:16:29,590
to do is represent this number as one

2591
02:16:24,609 --> 02:16:32,500
point something right times two to the

2592
02:16:29,590 --> 02:16:33,880
something you know I'm saying that's

2593
02:16:32,500 --> 02:16:36,849
what we're actually trying to represent

2594
02:16:33,879 --> 02:16:39,728
this as and the one point something is

2595
02:16:36,849 --> 02:16:44,829
binary right this is it's not one point

2596
02:16:39,728 --> 02:16:46,388
you know 2 3 4 whatever it's 1.01 101

2597
02:16:44,829 --> 02:16:48,968
right it's a binary floating-point

2598
02:16:46,388 --> 02:16:52,898
number not a decimal floating point

2599
02:16:48,968 --> 02:16:54,848
number right so if we look at what 5 has

2600
02:16:52,898 --> 02:16:58,420
to be in this particular circumstance

2601
02:16:54,849 --> 02:17:00,189
right then what we need to do is create

2602
02:16:58,420 --> 02:17:02,319
a number that will be like one point

2603
02:17:00,189 --> 02:17:04,599
blah that when we raise it to some power

2604
02:17:02,319 --> 02:17:07,209
of 2 it will slide it over

2605
02:17:04,599 --> 02:17:09,398
into the correct position right so this

2606
02:17:07,209 --> 02:17:12,428
is the number we actually wanted we want

2607
02:17:09,398 --> 02:17:14,108
101 point nothing right that's what

2608
02:17:12,429 --> 02:17:16,148
we're looking for in binary because we

2609
02:17:14,109 --> 02:17:19,899
just said that that's what it was so we

2610
02:17:16,148 --> 02:17:23,618
would expect to see in the mantissa 1.01

2611
02:17:19,898 --> 02:17:25,058
nothing times 2 to the power that will

2612
02:17:23,619 --> 02:17:29,920
slide this in the correct direction

2613
02:17:25,058 --> 02:17:32,429
right so we want this to go 1 2 over

2614
02:17:29,920 --> 02:17:36,308
right we want this 2 to the 2 right and

2615
02:17:32,429 --> 02:17:40,238
furthermore that 2 value as you might

2616
02:17:36,308 --> 02:17:42,818
expect that to value is encoded as in a

2617
02:17:40,238 --> 02:17:44,590
special way in that upper 8 bits right

2618
02:17:42,818 --> 02:17:46,599
the first bit is the sign bit and then

2619
02:17:44,590 --> 02:17:51,609
the other 7 or encoding is like what is

2620
02:17:46,599 --> 02:17:53,019
it's like 127 is 0 so you know or

2621
02:17:51,609 --> 02:17:54,460
something like this I don't remember the

2622
02:17:53,019 --> 02:17:57,969
exact encoding off the top of my head

2623
02:17:54,459 --> 02:18:00,988
right and so if you actually look at

2624
02:17:57,968 --> 02:18:08,528
what the value is that we got here right

2625
02:18:00,988 --> 02:18:10,689
if you correct here if you look at the

2626
02:18:08,529 --> 02:18:14,019
actual value that we got what we would

2627
02:18:10,689 --> 02:18:16,179
see is well a right is again I wish I

2628
02:18:14,019 --> 02:18:20,260
could show some binary because a is just

2629
02:18:16,179 --> 02:18:22,719
the accessible encoding of 10 right like

2630
02:18:20,260 --> 02:18:24,969
it's you know it's just you know because

2631
02:18:22,718 --> 02:18:26,500
we've consolidated XS but you can't see

2632
02:18:24,968 --> 02:18:27,879
what it is we go like 0 1 2 3 provides

2633
02:18:26,500 --> 02:18:31,599
any 9 10

2634
02:18:27,879 --> 02:18:34,959
right so the a is just the accessible

2635
02:18:31,599 --> 02:18:39,599
encoding of 10 and so I assume what's

2636
02:18:34,959 --> 02:18:42,728
going on here is that the the

2637
02:18:39,599 --> 02:18:44,260
floating-point value as we see it if you

2638
02:18:42,728 --> 02:18:50,618
look at how many zeros there are there's

2639
02:18:44,260 --> 02:18:54,449
1 2 3 4 5 and then the a right so this

2640
02:18:50,619 --> 02:18:58,139
is actually the part of the mantissa

2641
02:18:54,449 --> 02:19:06,840
starts at that 10 it's going to be 1 0

2642
02:18:58,138 --> 02:19:10,718
and that's totally wrong why I said that

2643
02:19:06,840 --> 02:19:14,290
10 value that's encoded there is encoded

2644
02:19:10,718 --> 02:19:18,349
in binary right so that 10 is going to

2645
02:19:14,290 --> 02:19:22,340
be the 8 plus the 2

2646
02:19:18,350 --> 02:19:26,120
which are set such that we get the 1:01

2647
02:19:22,340 --> 02:19:27,380
I believe although well that's not

2648
02:19:26,120 --> 02:19:30,380
actually true because the one is

2649
02:19:27,379 --> 02:19:31,879
implicit so actually that's not true

2650
02:19:30,379 --> 02:19:36,859
either I should continue drawing this

2651
02:19:31,879 --> 02:19:39,170
out I hate having to do this kind of

2652
02:19:36,860 --> 02:19:41,030
stuff stuff I'm horrible at all right

2653
02:19:39,170 --> 02:19:42,710
anyway let's let's continues through

2654
02:19:41,030 --> 02:19:46,460
because if it confuses me it probably

2655
02:19:42,709 --> 02:19:47,750
confuses plenty of people so anyway what

2656
02:19:46,459 --> 02:19:50,899
I was trying to say there is like okay

2657
02:19:47,750 --> 02:19:52,940
so we got the a value there right and

2658
02:19:50,899 --> 02:19:55,761
the a value as we know in binary right

2659
02:19:52,940 --> 02:19:58,489
that that equals ten in our language

2660
02:19:55,761 --> 02:20:00,771
right but we need to encode that into

2661
02:19:58,489 --> 02:20:03,649
binary so if you look at binary like I

2662
02:20:00,771 --> 02:20:05,540
just said before we've got one two four

2663
02:20:03,649 --> 02:20:07,970
eight and some things we don't need

2664
02:20:05,540 --> 02:20:10,730
anymore to make ten all we need to do to

2665
02:20:07,970 --> 02:20:12,590
make it a ten value here is we just need

2666
02:20:10,729 --> 02:20:14,359
a 2 and an 8 right we don't need the 1

2667
02:20:12,590 --> 02:20:16,280
in the 4 for anything because wouldn't

2668
02:20:14,360 --> 02:20:20,391
really help us at all right so we know

2669
02:20:16,280 --> 02:20:23,120
we've got that value which happens to be

2670
02:20:20,390 --> 02:20:27,261
exactly what we want right we've got a 1

2671
02:20:23,120 --> 02:20:30,110
0 1 and furthermore I guess we have it

2672
02:20:27,261 --> 02:20:32,450
in the position that we would want now

2673
02:20:30,110 --> 02:20:35,511
the thing that I don't super understand

2674
02:20:32,450 --> 02:20:37,340
is why like this gets into the like I

2675
02:20:35,511 --> 02:20:38,931
only pop into floating-point encodings

2676
02:20:37,340 --> 02:20:40,431
when I absolutely have to and so my

2677
02:20:38,931 --> 02:20:44,090
knowledge them is just super rusty and

2678
02:20:40,431 --> 02:20:46,190
bad but the thing I don't understand is

2679
02:20:44,090 --> 02:20:48,140
why we didn't only need to encode the 0

2680
02:20:46,190 --> 02:20:50,721
1 I'm not sure why we need to encode

2681
02:20:48,140 --> 02:20:52,819
this at all because to my mind it seems

2682
02:20:50,720 --> 02:20:54,590
like the mantissa is always expected to

2683
02:20:52,819 --> 02:20:56,959
be 1 and we just need this and then we

2684
02:20:54,590 --> 02:20:59,899
slide it up the 1 shouldn't have had to

2685
02:20:56,959 --> 02:21:03,199
have been encoded so I'm not sure why

2686
02:20:59,899 --> 02:21:06,379
we're seeing that and honestly it just

2687
02:21:03,200 --> 02:21:07,880
confuses me so we should probably look

2688
02:21:06,379 --> 02:21:11,449
at the floating-point encoding thing and

2689
02:21:07,879 --> 02:21:12,680
look at why because it doesn't make

2690
02:21:11,450 --> 02:21:17,181
sense

2691
02:21:12,681 --> 02:21:21,021
I don't quite get it right I don't quite

2692
02:21:17,181 --> 02:21:22,159
get why that would be the case like just

2693
02:21:21,021 --> 02:21:25,239
just being honest

2694
02:21:22,159 --> 02:21:25,239
I don't understand

2695
02:21:27,761 --> 02:21:33,950
yeah so I don't I don't quite get it I

2696
02:21:30,890 --> 02:21:35,779
don't know why it looks like that it's a

2697
02:21:33,950 --> 02:21:36,650
little confusing to me because I would

2698
02:21:35,780 --> 02:21:40,040
have thought that it would have been

2699
02:21:36,649 --> 02:21:43,720
coded the other way I simply floating

2700
02:21:40,040 --> 02:21:43,721
point in coding

2701
02:21:45,879 --> 02:21:49,179
[Music]

2702
02:21:58,620 --> 02:22:05,160
all right so if we look at single

2703
02:22:03,450 --> 02:22:07,950
precision floats there's eight bits of

2704
02:22:05,159 --> 02:22:11,450
exponent exactly like we said and 24

2705
02:22:07,950 --> 02:22:11,450
bits of the significand

2706
02:22:16,639 --> 02:22:20,659
let me take a quick look here

2707
02:22:30,689 --> 02:22:37,770
oh so that's a bad part of my remember

2708
02:22:34,709 --> 02:22:40,948
there so that explains part of it right

2709
02:22:37,770 --> 02:22:43,199
away actually so I was thinking that the

2710
02:22:40,949 --> 02:22:49,529
sign bit counted against the exponent it

2711
02:22:43,199 --> 02:22:52,109
doesn't the exponents eight bits of it's

2712
02:22:49,529 --> 02:22:54,359
eight bits of exponent after the sign

2713
02:22:52,109 --> 02:22:57,840
bit so there's nine bits taken up so

2714
02:22:54,359 --> 02:23:01,350
that actually is is probably where that

2715
02:22:57,840 --> 02:23:08,398
extra one is coming from right so if we

2716
02:23:01,350 --> 02:23:10,290
look the at maybe I'm wrong about that

2717
02:23:08,398 --> 02:23:13,799
too but we'll just see in a second so if

2718
02:23:10,290 --> 02:23:23,790
we look at what this value actually says

2719
02:23:13,799 --> 02:23:38,818
it is here address of test float like a

2720
02:23:23,790 --> 02:23:41,069
memory window here this yeah so if we

2721
02:23:38,818 --> 02:23:43,738
just look at the address of test float

2722
02:23:41,068 --> 02:23:46,769
there what you can see is it's like zero

2723
02:23:43,738 --> 02:23:49,469
four zero a zero zero zero zero right

2724
02:23:46,770 --> 02:23:51,000
although I guess it maybe is the other

2725
02:23:49,469 --> 02:23:53,849
way round because I'm assuming this is

2726
02:23:51,000 --> 02:23:58,829
going in byte order so it'd be zero zero

2727
02:23:53,850 --> 02:24:01,260
zero zero a zero four zero right so if

2728
02:23:58,829 --> 02:24:03,109
we encode what that or if we decode

2729
02:24:01,260 --> 02:24:05,670
rather what that value actually

2730
02:24:03,109 --> 02:24:08,760
represents there and I go back to my

2731
02:24:05,670 --> 02:24:18,389
little drawing board here right so if

2732
02:24:08,760 --> 02:24:20,340
we're looking at what 0 0 0 0 a 0 4 0 if

2733
02:24:18,389 --> 02:24:23,129
we look at what this actually decodes to

2734
02:24:20,340 --> 02:24:24,119
in binary right like each of these and I

2735
02:24:23,129 --> 02:24:26,719
probably should write these a little

2736
02:24:24,119 --> 02:24:26,720
further apart

2737
02:24:35,280 --> 02:24:41,390
right so if we look at what these

2738
02:24:37,649 --> 02:24:44,100
actually decode to well zero zero and

2739
02:24:41,389 --> 02:24:49,859
hexadecimal right each one of these is

2740
02:24:44,100 --> 02:24:56,190
four bits so this is just like binary

2741
02:24:49,860 --> 02:24:57,750
all zeros right same thing here so we

2742
02:24:56,190 --> 02:25:01,020
know this entire part of the binary

2743
02:24:57,750 --> 02:25:02,909
number is zero and how many bits do we

2744
02:25:01,020 --> 02:25:05,700
have here well this is 8 and this is 8

2745
02:25:02,909 --> 02:25:07,260
so the bottom 16 we know are zeros so

2746
02:25:05,700 --> 02:25:10,320
now we're looking at this part we know

2747
02:25:07,260 --> 02:25:13,139
we start with four zeros right and then

2748
02:25:10,319 --> 02:25:14,729
we have a witch like we said if we look

2749
02:25:13,139 --> 02:25:17,969
at what the bits actually are of like

2750
02:25:14,729 --> 02:25:21,090
one two four eight right then we know

2751
02:25:17,969 --> 02:25:24,090
that a wants to encode 10 and so we want

2752
02:25:21,090 --> 02:25:25,770
to encode a 0 here a 1 here of 0 here

2753
02:25:24,090 --> 02:25:30,899
and a 1 here so we're looking at that

2754
02:25:25,770 --> 02:25:32,940
value then we have four more zeros then

2755
02:25:30,899 --> 02:25:36,149
we have a 4 so that's just the third one

2756
02:25:32,940 --> 02:25:38,130
is set so we have a 0 a 0 a 1 and a 0

2757
02:25:36,149 --> 02:25:40,889
and this is the binary number we're

2758
02:25:38,129 --> 02:25:43,829
actually looking at now if we look at

2759
02:25:40,889 --> 02:25:46,619
where our exponent actually sits right

2760
02:25:43,829 --> 02:25:47,969
what I said is we have 24 bits of

2761
02:25:46,620 --> 02:25:49,440
mantissa but the first one is 1 that

2762
02:25:47,969 --> 02:25:50,789
means we only have 23 bits so I should

2763
02:25:49,440 --> 02:25:52,649
have known even when I said that that I

2764
02:25:50,790 --> 02:25:57,450
was wrong about the sign bit but either

2765
02:25:52,649 --> 02:26:00,149
way right so this is 16 bits and we have

2766
02:25:57,450 --> 02:26:02,820
23 total bits of significant to make a

2767
02:26:00,149 --> 02:26:04,920
24 bit mantissa with one assumed in the

2768
02:26:02,819 --> 02:26:07,709
upper place where would we be well

2769
02:26:04,920 --> 02:26:13,049
there's 4 more to get to 20 and then 23

2770
02:26:07,709 --> 02:26:16,250
3 more so it's 7 1 2 3 4 5 6 7 exactly

2771
02:26:13,049 --> 02:26:21,569
as I thought would be the answer right

2772
02:26:16,250 --> 02:26:24,989
so the one happens to be in the right

2773
02:26:21,569 --> 02:26:27,090
place in just this number 5 which was

2774
02:26:24,989 --> 02:26:29,729
what was screwing with us

2775
02:26:27,090 --> 02:26:31,710
but actually the 1 is implicit

2776
02:26:29,729 --> 02:26:37,350
we're not encoding it that's part of the

2777
02:26:31,709 --> 02:26:39,959
exponent which is here right so here is

2778
02:26:37,350 --> 02:26:42,659
that 5 encoded it's an implicit 1

2779
02:26:39,959 --> 02:26:45,389
followed by a 0 and a 1 and nothing else

2780
02:26:42,659 --> 02:26:47,250
right all the rest of this would have

2781
02:26:45,389 --> 02:26:48,930
been actual data that we could have used

2782
02:26:47,250 --> 02:26:50,728
to store actual information

2783
02:26:48,930 --> 02:26:53,609
but all the floating-point number is

2784
02:26:50,728 --> 02:26:56,608
it's the integer you wanted slid down

2785
02:26:53,609 --> 02:26:57,869
with a one at the head right so if you

2786
02:26:56,609 --> 02:26:59,939
want to encode integer as a floating

2787
02:26:57,869 --> 02:27:02,880
point value what's the highest bit

2788
02:26:59,939 --> 02:27:05,818
that's set you slide it down till that

2789
02:27:02,879 --> 02:27:07,559
one is gonna go into the implicit slot

2790
02:27:05,818 --> 02:27:09,148
which means well get rid of it and all

2791
02:27:07,559 --> 02:27:13,458
the rest of the bits just go into the

2792
02:27:09,148 --> 02:27:15,719
significant right they go in here okay

2793
02:27:13,459 --> 02:27:18,569
we get the implicit one that would have

2794
02:27:15,719 --> 02:27:20,488
gone here that means we can use this for

2795
02:27:18,568 --> 02:27:22,680
our exponent now what's our exponent

2796
02:27:20,488 --> 02:27:24,779
well it's the encoding of how far we had

2797
02:27:22,680 --> 02:27:27,840
to slide the number down we know we had

2798
02:27:24,779 --> 02:27:30,270
to slide it two places down right so we

2799
02:27:27,840 --> 02:27:33,148
want to encode the exponent of positive

2800
02:27:30,270 --> 02:27:35,369
two but lo and behold when we get down

2801
02:27:33,148 --> 02:27:37,260
here what we find and remember the sign

2802
02:27:35,369 --> 02:27:39,840
bit is also in here so this guy right

2803
02:27:37,260 --> 02:27:42,148
here that's the sign so obviously it's

2804
02:27:39,840 --> 02:27:43,350
zero because you know it's it's not

2805
02:27:42,148 --> 02:27:45,778
negative right

2806
02:27:43,350 --> 02:27:49,529
I believe that becomes set to one when

2807
02:27:45,779 --> 02:27:50,760
it's negative so obviously what we need

2808
02:27:49,529 --> 02:27:53,130
to do here is encode that to what the

2809
02:27:50,760 --> 02:27:55,289
problem is this is encoded the exponents

2810
02:27:53,129 --> 02:27:58,288
encoded in a super weird way because

2811
02:27:55,289 --> 02:28:00,479
they don't want to actually have to you

2812
02:27:58,289 --> 02:28:01,409
know I guess process it the way we might

2813
02:28:00,478 --> 02:28:03,568
normally think about it

2814
02:28:01,408 --> 02:28:04,529
I only know why they chose some of the

2815
02:28:03,568 --> 02:28:05,538
things you can go read about the history

2816
02:28:04,529 --> 02:28:07,168
by Triple E floating point

2817
02:28:05,539 --> 02:28:09,119
standardization is pretty interesting

2818
02:28:07,168 --> 02:28:11,789
actually but what you can see here is

2819
02:28:09,119 --> 02:28:16,168
they range from negative 126 to 127

2820
02:28:11,789 --> 02:28:19,619
right and it says here that negative 127

2821
02:28:16,168 --> 02:28:22,949
all zeros and 128 all ones are reserved

2822
02:28:19,619 --> 02:28:26,789
for special numbers but that means that

2823
02:28:22,949 --> 02:28:29,668
we start it's a it's a biased value it

2824
02:28:26,789 --> 02:28:32,970
doesn't it's not two's complement right

2825
02:28:29,668 --> 02:28:38,129
it's a biased value instead so zero

2826
02:28:32,969 --> 02:28:40,260
means negative 127 right not zero so

2827
02:28:38,129 --> 02:28:41,759
unlike two's complement we're actually

2828
02:28:40,260 --> 02:28:44,939
just shifting the range over and then it

2829
02:28:41,760 --> 02:28:47,130
just goes so what that means is that if

2830
02:28:44,939 --> 02:28:50,220
negative 127 is zero and we want to

2831
02:28:47,129 --> 02:28:52,769
encode two we need to add 127 and we're

2832
02:28:50,219 --> 02:28:54,748
gonna end up with what like 129 right

2833
02:28:52,770 --> 02:28:58,979
it's the value we actually need this

2834
02:28:54,748 --> 02:29:01,828
stuff in here makes sense and so how

2835
02:28:58,978 --> 02:29:02,810
would we encode 129 right what would we

2836
02:29:01,828 --> 02:29:04,671
actually do to encode

2837
02:29:02,810 --> 02:29:07,970
twenty-nine well again remember your

2838
02:29:04,671 --> 02:29:17,171
binary I want to encode 129 I have eight

2839
02:29:07,970 --> 02:29:20,421
bits to do it well 1 2 4 8 16 32 64 128

2840
02:29:17,171 --> 02:29:21,829
how do i encode 129 well thankfully

2841
02:29:20,421 --> 02:29:23,541
that's a little bit like shooting fish

2842
02:29:21,829 --> 02:29:25,489
in a barrel because it turns out that

2843
02:29:23,540 --> 02:29:28,970
128 is right there

2844
02:29:25,489 --> 02:29:30,619
so one added to 128 produces my 129 I

2845
02:29:28,970 --> 02:29:33,140
don't really have to go very far through

2846
02:29:30,620 --> 02:29:34,971
the list right so I know these will all

2847
02:29:33,140 --> 02:29:37,100
be zeros and this will be a 1 and this

2848
02:29:34,970 --> 02:29:39,290
will be a 1 and hey lo and behold what's

2849
02:29:37,101 --> 02:29:43,851
sitting right here exactly that value

2850
02:29:39,290 --> 02:29:46,100
right so that's how the actual encoding

2851
02:29:43,851 --> 02:29:47,900
process works but what that means if you

2852
02:29:46,101 --> 02:29:50,391
look at just literally that little

2853
02:29:47,899 --> 02:29:51,921
digression that we had there which I'm

2854
02:29:50,390 --> 02:29:53,931
really glad we did because again like I

2855
02:29:51,921 --> 02:29:55,190
say those I'm really rusty at some of

2856
02:29:53,931 --> 02:29:57,261
those sorts of things and they fall out

2857
02:29:55,190 --> 02:29:58,851
of my brain so it it helps me to go over

2858
02:29:57,261 --> 02:30:00,801
them it helps me as much as it helps you

2859
02:29:58,851 --> 02:30:02,329
because now I remember it more solidly

2860
02:30:00,800 --> 02:30:05,180
and maybe I won't forget it again for

2861
02:30:02,329 --> 02:30:08,479
another 5 years or something all right

2862
02:30:05,181 --> 02:30:11,989
so anyway what we know is that this

2863
02:30:08,479 --> 02:30:15,199
value has to be something reasonable

2864
02:30:11,989 --> 02:30:17,720
right I can't just shove any old value

2865
02:30:15,200 --> 02:30:20,601
in here and expect it to work because if

2866
02:30:17,720 --> 02:30:24,140
I make a value that's high enough that

2867
02:30:20,601 --> 02:30:26,150
it can't represent that number if it's

2868
02:30:24,140 --> 02:30:29,841
enough bits to represent the number

2869
02:30:26,149 --> 02:30:33,380
right then it won't work so let's see

2870
02:30:29,841 --> 02:30:37,069
what actually happens here when I write

2871
02:30:33,380 --> 02:30:39,199
5 and I set the breakpoint here what I

2872
02:30:37,069 --> 02:30:41,421
will see is when we go through what

2873
02:30:39,200 --> 02:30:43,041
happens to this number my round trip

2874
02:30:41,421 --> 02:30:45,380
value will be the same as that value

2875
02:30:43,040 --> 02:30:48,829
that I put in so when I look at the test

2876
02:30:45,380 --> 02:30:50,989
Val and I look at Boop's test Val and I

2877
02:30:48,829 --> 02:30:53,120
look at the round trip I get 5 in both

2878
02:30:50,989 --> 02:30:54,591
cases and that's because floating point

2879
02:30:53,120 --> 02:31:00,291
can represent the number 5

2880
02:30:54,591 --> 02:31:02,421
exactly right not an issue however ok if

2881
02:31:00,290 --> 02:31:03,829
I was to put in another number I might

2882
02:31:02,421 --> 02:31:05,271
not get that result now you might be

2883
02:31:03,829 --> 02:31:07,700
thinking well I just need to make one

2884
02:31:05,271 --> 02:31:09,650
big enough right so what if I just did

2885
02:31:07,700 --> 02:31:13,490
one that required 26 bits to represent

2886
02:31:09,649 --> 02:31:14,899
right surely that won't work and then

2887
02:31:13,489 --> 02:31:16,440
when it rounds just afloat it'll break

2888
02:31:14,899 --> 02:31:18,959
but action

2889
02:31:16,440 --> 02:31:21,540
not true and what you can see here is

2890
02:31:18,959 --> 02:31:23,159
when I actually run it that I shouldn't

2891
02:31:21,540 --> 02:31:24,750
unless I'm gonna be totally embarrassed

2892
02:31:23,159 --> 02:31:26,629
here and it's not correct but I should

2893
02:31:24,750 --> 02:31:29,579
get the same number back right and I do

2894
02:31:26,629 --> 02:31:32,789
the reason for this is because remember

2895
02:31:29,579 --> 02:31:37,200
we have this arbitrary exponent so

2896
02:31:32,790 --> 02:31:39,240
actually even though it takes 26 bits to

2897
02:31:37,200 --> 02:31:41,250
represent this number normally since I

2898
02:31:39,239 --> 02:31:46,229
have an exponent and there's only one

2899
02:31:41,250 --> 02:31:48,690
bit set right when I go to do this it

2900
02:31:46,229 --> 02:31:51,029
just encodes the entire number into the

2901
02:31:48,690 --> 02:31:54,360
exponent it just says oh it's the

2902
02:31:51,030 --> 02:31:58,590
exponents 20 what did I say the

2903
02:31:54,360 --> 02:32:01,260
exponents 26 right so all it has to do

2904
02:31:58,590 --> 02:32:04,530
is encode 26 here nothing here and it's

2905
02:32:01,260 --> 02:32:06,210
done right so that was very very simple

2906
02:32:04,530 --> 02:32:08,970
it actually isn't hard represent that

2907
02:32:06,209 --> 02:32:10,919
how do I break it all I've got to do is

2908
02:32:08,969 --> 02:32:12,929
just stick those bits far enough apart

2909
02:32:10,920 --> 02:32:14,639
so this is the real weakness of

2910
02:32:12,930 --> 02:32:17,310
floating-point values compared to

2911
02:32:14,639 --> 02:32:20,639
integers in this case integers can store

2912
02:32:17,310 --> 02:32:24,319
a number where there's a bit set 31

2913
02:32:20,639 --> 02:32:27,149
places away from another bit set right a

2914
02:32:24,319 --> 02:32:29,670
floating point value can only store a

2915
02:32:27,149 --> 02:32:32,969
number where there's a bit set and then

2916
02:32:29,670 --> 02:32:37,379
there's 23 places to the next bit set

2917
02:32:32,969 --> 02:32:39,599
right so if I spread out my bits by 26

2918
02:32:37,379 --> 02:32:41,159
places as I have here or 25 places you

2919
02:32:39,600 --> 02:32:42,960
might say or 24 depending on really

2920
02:32:41,159 --> 02:32:45,180
comes inside the outside right there's a

2921
02:32:42,959 --> 02:32:47,250
fence posting nominate your problem

2922
02:32:45,180 --> 02:32:49,050
there right but let's suppose I just

2923
02:32:47,250 --> 02:32:51,299
spread it out by some number of bits

2924
02:32:49,049 --> 02:32:54,959
clearly larger than the 23 that I could

2925
02:32:51,299 --> 02:32:57,270
use then when I do it now I'm in a bit

2926
02:32:54,959 --> 02:33:00,810
of trouble and what will happen is that

2927
02:32:57,271 --> 02:33:04,500
I won't get garbage right but I'll lose

2928
02:33:00,810 --> 02:33:07,199
the bits on the end so that bit that I

2929
02:33:04,500 --> 02:33:10,829
word in there right you see it it got

2930
02:33:07,200 --> 02:33:15,990
lopped off it can't remember what

2931
02:33:10,829 --> 02:33:17,549
happened down there right and so that's

2932
02:33:15,989 --> 02:33:19,680
the real weakness of floating point

2933
02:33:17,549 --> 02:33:21,420
values and so when you have implicit

2934
02:33:19,680 --> 02:33:23,880
conversions that go between float and

2935
02:33:21,420 --> 02:33:26,760
integer if you're going from the

2936
02:33:23,879 --> 02:33:28,379
direction integer to float you have to

2937
02:33:26,760 --> 02:33:29,521
worry about numbers that are spread

2938
02:33:28,379 --> 02:33:31,739
apart by more

2939
02:33:29,521 --> 02:33:34,561
and the significant the number of bits

2940
02:33:31,739 --> 02:33:37,470
right those numbers will get truncated

2941
02:33:34,560 --> 02:33:39,630
and that's the problem if you're going

2942
02:33:37,470 --> 02:33:41,909
from floating-point to integer then you

2943
02:33:39,630 --> 02:33:44,039
have to worry about where the actual

2944
02:33:41,909 --> 02:33:46,909
decimal point is because those were are

2945
02:33:44,040 --> 02:33:49,650
the bits that will get truncated right

2946
02:33:46,909 --> 02:33:50,460
if that makes sense and then the other

2947
02:33:49,649 --> 02:33:51,511
thing of course you have to worry about

2948
02:33:50,460 --> 02:33:53,189
is that the exponents really high

2949
02:33:51,511 --> 02:33:58,771
because the exponents really high then

2950
02:33:53,190 --> 02:34:01,560
the you know the that that number there

2951
02:33:58,771 --> 02:34:02,790
it needs to put it in like the 78th bit

2952
02:34:01,560 --> 02:34:05,729
but that isn't doesn't exist in

2953
02:34:02,790 --> 02:34:06,721
interested right so again hopefully that

2954
02:34:05,729 --> 02:34:08,579
gives you some appreciation for what's

2955
02:34:06,720 --> 02:34:10,109
going on here and why I don't think it

2956
02:34:08,579 --> 02:34:11,761
would be any problem to just put a 1

2957
02:34:10,110 --> 02:34:14,610
here because when that converts to

2958
02:34:11,761 --> 02:34:15,841
floating-point it's exact and there

2959
02:34:14,610 --> 02:34:17,851
isn't a difference really between

2960
02:34:15,841 --> 02:34:20,101
running and one and a 1.0 F in this

2961
02:34:17,851 --> 02:34:21,989
particular case I don't think why the

2962
02:34:20,101 --> 02:34:23,730
compiler is choosing to output the

2963
02:34:21,989 --> 02:34:25,470
warnings that it's outputting I don't

2964
02:34:23,729 --> 02:34:28,409
really know that seemed a little bit

2965
02:34:25,470 --> 02:34:33,659
weird to me and so I really couldn't

2966
02:34:28,409 --> 02:34:38,709
tell you why it shows the warnings it

2967
02:34:33,659 --> 02:34:42,250
did hopefully that helps let's go again

2968
02:34:38,709 --> 02:34:42,250
[Music]

2969
02:34:47,659 --> 02:34:56,840
hopefully that's that's enough of a

2970
02:34:49,579 --> 02:34:59,898
digression to there and for asking what

2971
02:34:56,840 --> 02:35:15,889
debugger it is it's remedy it's it's

2972
02:34:59,898 --> 02:35:18,170
this debugger it's 20 bucks it's you

2973
02:35:15,889 --> 02:35:21,289
know for all intents and purposes these

2974
02:35:18,170 --> 02:35:22,760
days for me it's it's has all the

2975
02:35:21,290 --> 02:35:24,170
features I actually need there's some

2976
02:35:22,760 --> 02:35:28,100
features that vigil studio has that it

2977
02:35:24,170 --> 02:35:31,819
doesn't have so but it's it basically

2978
02:35:28,100 --> 02:35:34,189
meets my needs and it is way better to

2979
02:35:31,819 --> 02:35:38,989
use in Visual Studio all of the crap

2980
02:35:34,189 --> 02:35:41,750
about Visual Studio is gone and you know

2981
02:35:38,989 --> 02:35:43,250
even just basic stuff like you know if

2982
02:35:41,750 --> 02:35:45,079
you come in here and you look at like

2983
02:35:43,250 --> 02:35:47,809
the light like this light probe in next

2984
02:35:45,079 --> 02:35:49,250
thing right so one thing that you'll

2985
02:35:47,809 --> 02:35:50,600
notice happens in Visual Studio these

2986
02:35:49,250 --> 02:35:50,898
days it's just absolutely drives me

2987
02:35:50,600 --> 02:35:53,659
insane

2988
02:35:50,898 --> 02:35:56,059
it's like when you actually run the

2989
02:35:53,659 --> 02:35:58,879
program the watch window doesn't update

2990
02:35:56,059 --> 02:36:01,309
for like a few seconds half the time

2991
02:35:58,879 --> 02:36:04,219
here you can just whale on the f5 key

2992
02:36:01,309 --> 02:36:06,170
and look like the number goes up like

2993
02:36:04,219 --> 02:36:07,819
that's actually usable I can just watch

2994
02:36:06,170 --> 02:36:09,469
if I wanted to get to one I could stop

2995
02:36:07,819 --> 02:36:12,139
on the one I want it you know it's just

2996
02:36:09,469 --> 02:36:15,199
like it's actually usable again it's one

2997
02:36:12,139 --> 02:36:17,059
executable no installer you just put it

2998
02:36:15,200 --> 02:36:18,260
on your machine and run it it saves your

2999
02:36:17,059 --> 02:36:21,170
window layout doesn't all get all

3000
02:36:18,260 --> 02:36:23,689
screwed up all the time it's nice and

3001
02:36:21,170 --> 02:36:25,540
fast it boots instantly you don't have

3002
02:36:23,689 --> 02:36:28,420
to wait with there's no splash screen

3003
02:36:25,540 --> 02:36:32,210
and so for me it's just like

3004
02:36:28,420 --> 02:36:33,850
for 20 bucks it's like the best 20 bucks

3005
02:36:32,209 --> 02:36:36,409
you'll ever spend if you debug programs

3006
02:36:33,850 --> 02:36:38,030
yes once in a while if you need some

3007
02:36:36,409 --> 02:36:39,590
specific feature like downloading stuff

3008
02:36:38,030 --> 02:36:41,689
from Microsoft symbol server or

3009
02:36:39,590 --> 02:36:43,489
something you might have to switch back

3010
02:36:41,689 --> 02:36:45,829
to visual studio debugger at that day

3011
02:36:43,489 --> 02:36:48,619
but for everything else you can pretty

3012
02:36:45,829 --> 02:36:50,090
much just use this and and I really

3013
02:36:48,620 --> 02:36:51,860
haven't had much problems with it and

3014
02:36:50,090 --> 02:36:53,719
new features are coming so someday maybe

3015
02:36:51,860 --> 02:36:55,399
I won't even have to add that caveat

3016
02:36:53,719 --> 02:36:56,629
it'll just be good enough that there's

3017
02:36:55,398 --> 02:36:59,359
no reason to ever switch to visual

3018
02:36:56,629 --> 02:37:01,309
studio because honestly visual studio is

3019
02:36:59,360 --> 02:37:04,220
not that good of a debugger it's not

3020
02:37:01,309 --> 02:37:12,439
windbg it has a small subset of the

3021
02:37:04,219 --> 02:37:14,510
features of windbg right so have you

3022
02:37:12,439 --> 02:37:16,100
tried clion if the bugger is awesome

3023
02:37:14,510 --> 02:37:23,779
somehow I doubt that

3024
02:37:16,100 --> 02:37:26,930
but no I haven't what's cly on so like

3025
02:37:23,779 --> 02:37:28,430
here's what I'll say I can pretty much

3026
02:37:26,930 --> 02:37:31,760
guarantee you this debugger isn't

3027
02:37:28,430 --> 02:37:35,119
awesome like the chances that this is

3028
02:37:31,760 --> 02:37:41,389
awesome seem so low to me but maybe it

3029
02:37:35,119 --> 02:37:48,439
is I don't know I don't know how to like

3030
02:37:41,389 --> 02:37:50,680
see is there like a survey to actually

3031
02:37:48,439 --> 02:37:50,680
like

3032
02:38:35,010 --> 02:38:39,659
man I guess I can search for certain

3033
02:38:37,090 --> 02:38:39,659
things and see

3034
02:38:54,280 --> 02:38:58,420
so I'm assuming I mean can you see the

3035
02:38:56,799 --> 02:39:01,319
assembly at the same time that you can

3036
02:38:58,420 --> 02:39:01,319
see the

3037
02:39:07,179 --> 02:39:10,228
the regular source

3038
02:39:24,159 --> 02:39:28,569
I mean unless I'm mistaken isn't this

3039
02:39:27,250 --> 02:39:39,370
saying that you can't even look at the

3040
02:39:28,569 --> 02:39:42,159
disassembly of your own code wonder if I

3041
02:39:39,370 --> 02:39:47,079
I feel like I tried this on Linux one

3042
02:39:42,159 --> 02:39:52,898
time did this actually ever get

3043
02:39:47,079 --> 02:40:02,409
implemented I mean yeah like okay so and

3044
02:39:52,898 --> 02:40:07,659
what about like the register view what

3045
02:40:02,409 --> 02:40:09,809
does that look like doesn't even have

3046
02:40:07,659 --> 02:40:09,809
one

3047
02:40:14,460 --> 02:40:19,850
I mean okay so just to be clear like I

3048
02:40:19,970 --> 02:40:24,511
could try it sometime

3049
02:40:22,021 --> 02:40:27,541
on stream just as an entertainment

3050
02:40:24,511 --> 02:40:29,251
exercise I suppose but like if you can't

3051
02:40:27,540 --> 02:40:31,470
step through assembly language as part

3052
02:40:29,251 --> 02:40:34,530
of your daily process automatically in

3053
02:40:31,470 --> 02:40:36,479
your own code with source highlighted at

3054
02:40:34,530 --> 02:40:39,661
the same time and you can't have a

3055
02:40:36,479 --> 02:40:41,939
register window then this is not a

3056
02:40:39,661 --> 02:40:45,239
serious debugger right this is I mean I

3057
02:40:41,940 --> 02:40:47,791
wouldn't even start trying it if it

3058
02:40:45,239 --> 02:40:50,341
can't do those things and my assumption

3059
02:40:47,790 --> 02:40:52,050
I think I tried this because I remember

3060
02:40:50,341 --> 02:40:53,631
trying a bunch of debuggers on Linux

3061
02:40:52,050 --> 02:40:56,430
trying to find one that was any good I

3062
02:40:53,630 --> 02:40:57,810
think I tried that one and I remember it

3063
02:40:56,431 --> 02:41:00,149
being so slow as to be almost like

3064
02:40:57,810 --> 02:41:03,210
unusable anyway so I'm guessing that

3065
02:41:00,149 --> 02:41:05,761
like no I'm guessing this debugger is so

3066
02:41:03,210 --> 02:41:08,970
far from awesome that it would not even

3067
02:41:05,761 --> 02:41:13,461
be it would not even get the a in

3068
02:41:08,970 --> 02:41:13,460
awesome let alone defining final E

3069
02:41:22,470 --> 02:41:27,689
I mean it definitely would not be a

3070
02:41:25,979 --> 02:41:29,699
replacement for remedy if it can't even

3071
02:41:27,690 --> 02:41:32,069
show like assembly language as I'm

3072
02:41:29,700 --> 02:41:37,230
debugging right cuz that's like critical

3073
02:41:32,069 --> 02:41:38,761
I don't want my assembly view to be only

3074
02:41:37,229 --> 02:41:40,800
when it can't find the source code

3075
02:41:38,761 --> 02:41:43,710
because assembly is critical to see all

3076
02:41:40,800 --> 02:41:47,310
the time like I look at it every couple

3077
02:41:43,709 --> 02:41:51,899
days right sometimes all day I'm looking

3078
02:41:47,310 --> 02:41:53,640
at just the assembly all right let's go

3079
02:41:51,899 --> 02:41:55,229
ahead and wind dance the long stream

3080
02:41:53,640 --> 02:41:56,431
today thank you everyone for joining me

3081
02:41:55,229 --> 02:41:57,750
for this on a handmade here at sometimes

3082
02:41:56,431 --> 02:41:58,649
our coding with you is always if you

3083
02:41:57,750 --> 02:41:59,640
would like to follow the series at home

3084
02:41:58,649 --> 02:42:01,319
you can always peer to the game on

3085
02:41:59,640 --> 02:42:02,850
handmade here org comes the source code

3086
02:42:01,319 --> 02:42:05,250
so you can play around with it I

3087
02:42:02,851 --> 02:42:06,569
you got all week to put the lighting in

3088
02:42:05,250 --> 02:42:09,899
actually if you want to start playing

3089
02:42:06,569 --> 02:42:12,149
around we just started the probe stuff I

3090
02:42:09,899 --> 02:42:15,630
love you back here next weekend probably

3091
02:42:12,149 --> 02:42:18,659
I think hopefully I'm assuming I'll be

3092
02:42:15,630 --> 02:42:20,579
back here next week to work on getting

3093
02:42:18,659 --> 02:42:22,619
that letting stuff implemented fully

3094
02:42:20,579 --> 02:42:24,120
until then have fun programming everyone

3095
02:42:22,620 --> 02:42:26,421
and I'll see you on the Internet take it

3096
02:42:24,120 --> 02:42:26,421
easy everybody

