1
00:00:00,030 --> 00:00:03,750
hello everyone and welcome to hand made

2
00:00:02,250 --> 00:00:08,400
here on the show Rico to complete game

3
00:00:03,750 --> 00:00:09,089
live on stream today we are back last

4
00:00:08,400 --> 00:00:11,550
weekend

5
00:00:09,089 --> 00:00:14,730
kind of took the weekend off we had only

6
00:00:11,550 --> 00:00:17,789
one stream last weekend and because John

7
00:00:14,730 --> 00:00:20,219
blow was trolling us with dota things on

8
00:00:17,789 --> 00:00:22,590
the chat we decided to make a dota hero

9
00:00:20,219 --> 00:00:24,899
generator which actually you can now see

10
00:00:22,589 --> 00:00:26,278
running I cut and paste a result from it

11
00:00:24,899 --> 00:00:29,189
every day I got a hook it up I'm gonna

12
00:00:26,278 --> 00:00:31,679
hook it up to a tweet bot but if you're

13
00:00:29,189 --> 00:00:33,058
interested we've got it it's here and

14
00:00:31,678 --> 00:00:36,509
you can see that it's created some

15
00:00:33,058 --> 00:00:40,019
pretty high quality it's created some

16
00:00:36,509 --> 00:00:42,750
pretty high quality heroes for us with

17
00:00:40,020 --> 00:00:47,520
some pretty great spells a croc with

18
00:00:42,750 --> 00:00:51,000
shrapnel for example always great really

19
00:00:47,520 --> 00:00:54,539
helps with the with your micro I guess I

20
00:00:51,000 --> 00:00:57,000
would say proximity crush really really

21
00:00:54,539 --> 00:00:59,730
powerful for teamfights I think if I'm

22
00:00:57,000 --> 00:01:02,189
not mistaken and then who could of

23
00:00:59,729 --> 00:01:05,429
course forget lumira one of the most

24
00:01:02,189 --> 00:01:07,500
interesting heroes our latest hero with

25
00:01:05,430 --> 00:01:09,930
such wondrous abilities as walrus

26
00:01:07,500 --> 00:01:12,109
bringer bear of the demonic restoration

27
00:01:09,930 --> 00:01:14,549
and of course cursed bolt ransack

28
00:01:12,109 --> 00:01:16,009
chemical dream also I don't know if he

29
00:01:14,549 --> 00:01:18,960
just kind of trips out or something

30
00:01:16,009 --> 00:01:21,420
point being that is what we did last

31
00:01:18,959 --> 00:01:24,868
weekend so we didn't really do any work

32
00:01:21,420 --> 00:01:26,700
I mean unless you count that as work so

33
00:01:24,868 --> 00:01:29,430
this weekend we're back doing what we're

34
00:01:26,700 --> 00:01:32,240
supposed to be doing which is finishing

35
00:01:29,430 --> 00:01:34,530
the lighting for our game system and

36
00:01:32,239 --> 00:01:37,798
we're gonna go ahead and get right into

37
00:01:34,530 --> 00:01:38,969
that today we more or less finished the

38
00:01:37,799 --> 00:01:41,189
part we were working on the weekend

39
00:01:38,969 --> 00:01:43,500
prior and we were ready to move on to

40
00:01:41,188 --> 00:01:45,989
the next part and that next part is

41
00:01:43,500 --> 00:01:48,409
exactly what we want to do today and

42
00:01:45,989 --> 00:01:51,478
specifically what we were doing was

43
00:01:48,409 --> 00:01:52,890
fixing the light distribution and so

44
00:01:51,478 --> 00:01:56,670
what we want to be able to do now is

45
00:01:52,890 --> 00:01:59,579
start to actually do the plumbing to get

46
00:01:56,670 --> 00:02:01,228
our probes into the system draw their

47
00:01:59,578 --> 00:02:04,309
results so we can see whether they're

48
00:02:01,228 --> 00:02:06,780
actually convecting light properly and

49
00:02:04,310 --> 00:02:08,939
that's pretty much all we really want to

50
00:02:06,780 --> 00:02:12,360
do this weekend once we've gotten that

51
00:02:08,939 --> 00:02:13,280
then we can flip over to the GPU side of

52
00:02:12,360 --> 00:02:14,720
things

53
00:02:13,280 --> 00:02:16,580
and worry about how we're actually going

54
00:02:14,719 --> 00:02:21,379
to sample these things at runtime to

55
00:02:16,580 --> 00:02:23,709
light our entities in the world so if I

56
00:02:21,379 --> 00:02:27,590
go ahead and open up our lighting system

57
00:02:23,709 --> 00:02:31,580
again remember we did the the sort of

58
00:02:27,590 --> 00:02:34,159
basic work that we needed to do to just

59
00:02:31,580 --> 00:02:38,719
see that these light probes are you know

60
00:02:34,159 --> 00:02:40,340
happening at all right so if we run our

61
00:02:38,719 --> 00:02:42,259
game you can see this running this is in

62
00:02:40,340 --> 00:02:45,140
debug mode here so it's a little bit

63
00:02:42,259 --> 00:02:46,939
slow framerate wise but you can see that

64
00:02:45,139 --> 00:02:50,238
as I spin around there's these sort of

65
00:02:46,939 --> 00:02:51,650
purple floating points and those purple

66
00:02:50,239 --> 00:02:54,110
floating points are just the places

67
00:02:51,650 --> 00:02:56,209
where we've sort of provisionally have

68
00:02:54,110 --> 00:02:58,819
the level generator stick lighting

69
00:02:56,209 --> 00:03:00,620
probes so you can see at the moment we

70
00:02:58,818 --> 00:03:03,530
don't stick any lighting probes out in

71
00:03:00,620 --> 00:03:05,239
the filler apron regions we do put

72
00:03:03,530 --> 00:03:07,699
lighting probes on the interior and we

73
00:03:05,239 --> 00:03:10,610
put two per tile this is probably

74
00:03:07,699 --> 00:03:12,679
overkill and we probably don't need to

75
00:03:10,610 --> 00:03:14,840
or even want to distribute them this way

76
00:03:12,680 --> 00:03:17,599
and also we probably want to scatter

77
00:03:14,840 --> 00:03:20,000
some light probes out in the outer area

78
00:03:17,599 --> 00:03:21,469
as well although probably not many

79
00:03:20,000 --> 00:03:22,819
because we don't really want to spend a

80
00:03:21,469 --> 00:03:24,650
lot of time computing lighting in the

81
00:03:22,819 --> 00:03:27,099
apron since it's just supposed to be

82
00:03:24,650 --> 00:03:29,689
like a dark inaccessible area outside

83
00:03:27,099 --> 00:03:32,419
the sort of region the player hops

84
00:03:29,689 --> 00:03:33,949
around in anyway so that's what we're

85
00:03:32,419 --> 00:03:37,339
working on right now and so what I'd

86
00:03:33,949 --> 00:03:39,379
like to shoot for as our next goal in

87
00:03:37,340 --> 00:03:41,900
life is embedding is very complicated I

88
00:03:39,379 --> 00:03:44,449
say this very often letting is very

89
00:03:41,900 --> 00:03:46,909
complicated and so as a result you want

90
00:03:44,449 --> 00:03:49,879
to typically break it into pieces that

91
00:03:46,909 --> 00:03:51,769
you can sort of independently verify or

92
00:03:49,879 --> 00:03:54,799
at least nominally working if not bug

93
00:03:51,769 --> 00:03:56,450
free and so that you don't spend your

94
00:03:54,799 --> 00:03:58,370
time trying to figure out where the

95
00:03:56,449 --> 00:04:02,328
problem is let alone what the problem is

96
00:03:58,370 --> 00:04:04,370
when you have a bug so what I want to do

97
00:04:02,329 --> 00:04:05,060
is I want to get us to a point where

98
00:04:04,370 --> 00:04:06,890
we're not

99
00:04:05,060 --> 00:04:08,959
there's no GPU involvement whatsoever

100
00:04:06,889 --> 00:04:11,539
other than just drawing our debug

101
00:04:08,959 --> 00:04:14,180
information and I want to be able to

102
00:04:11,539 --> 00:04:16,879
compute these light probes the colors of

103
00:04:14,180 --> 00:04:18,918
these light probes on the the various

104
00:04:16,879 --> 00:04:21,319
sides of the cube and play around with

105
00:04:18,918 --> 00:04:25,490
that until I can look at it here and

106
00:04:21,319 --> 00:04:26,750
sort of at least be able to argue with a

107
00:04:25,490 --> 00:04:30,259
straight face

108
00:04:26,750 --> 00:04:33,920
that the lighting on the probe debug

109
00:04:30,259 --> 00:04:36,139
markers looks like some lighting you

110
00:04:33,920 --> 00:04:37,939
would actually expect from the placement

111
00:04:36,139 --> 00:04:40,579
of the lights in the world and the

112
00:04:37,939 --> 00:04:43,339
occluders right and the reason I want to

113
00:04:40,579 --> 00:04:46,519
do that is because until I can see that

114
00:04:43,339 --> 00:04:48,619
that looks okay there's no real point in

115
00:04:46,519 --> 00:04:51,769
working on the GPU thing that samples

116
00:04:48,620 --> 00:04:53,990
them because we would have no idea if we

117
00:04:51,769 --> 00:04:56,240
then just get bad results we have no

118
00:04:53,990 --> 00:04:57,710
idea who's at fault is it the sampler

119
00:04:56,240 --> 00:04:59,329
that's at fault or is it the lighting

120
00:04:57,709 --> 00:05:01,879
propagation that's a fault is it the

121
00:04:59,329 --> 00:05:04,039
bookkeeping that's a fault right and so

122
00:05:01,879 --> 00:05:06,649
we're trying to slice this problem up

123
00:05:04,040 --> 00:05:08,990
into chunks because the smaller we can

124
00:05:06,649 --> 00:05:10,669
make those chunks the easier real time

125
00:05:08,990 --> 00:05:12,290
we will have debugging because there's

126
00:05:10,670 --> 00:05:15,620
just less things we have to consider

127
00:05:12,290 --> 00:05:16,910
right and so you know that's just kind

128
00:05:15,620 --> 00:05:19,009
of the case with things like lighting

129
00:05:16,910 --> 00:05:21,169
where we don't have easy ways to like

130
00:05:19,009 --> 00:05:22,730
test it or you know right can't really

131
00:05:21,168 --> 00:05:24,680
it's very hard to write like a unit test

132
00:05:22,730 --> 00:05:26,390
for things like lighting I mean the

133
00:05:24,680 --> 00:05:29,240
Cornell box is like the best thing we've

134
00:05:26,389 --> 00:05:32,389
got so far two piece unit test for

135
00:05:29,240 --> 00:05:35,240
lighting right it's very hard for

136
00:05:32,389 --> 00:05:37,389
something that's an approximate artistic

137
00:05:35,240 --> 00:05:39,319
only solution we know we're not really

138
00:05:37,389 --> 00:05:41,779
simulating lighting the way it works in

139
00:05:39,319 --> 00:05:44,029
the real world that's way too expensive

140
00:05:41,779 --> 00:05:47,029
for a modern computer to contemplate in

141
00:05:44,029 --> 00:05:49,189
real time and so what we're trying to do

142
00:05:47,029 --> 00:05:52,579
here is just say look because this is an

143
00:05:49,189 --> 00:05:54,829
artistic process we will know visually

144
00:05:52,579 --> 00:05:57,310
whether it looks like a usable lighting

145
00:05:54,829 --> 00:06:00,609
solution let's try to figure out ways to

146
00:05:57,310 --> 00:06:04,310
bucket that up into ones we can visually

147
00:06:00,610 --> 00:06:07,189
verify and then after we're done with

148
00:06:04,310 --> 00:06:09,949
that we can progress to the next stage

149
00:06:07,189 --> 00:06:11,719
having some confidence that the bugs in

150
00:06:09,949 --> 00:06:13,849
the previous stage at least aren't

151
00:06:11,720 --> 00:06:18,740
producing any things that will confound

152
00:06:13,850 --> 00:06:22,189
us right okay so what we need to do now

153
00:06:18,740 --> 00:06:24,168
is start to work through the plumbing of

154
00:06:22,189 --> 00:06:27,978
this system and there's a couple aspects

155
00:06:24,168 --> 00:06:29,779
of this that we need to do first of all

156
00:06:27,978 --> 00:06:31,609
we need to actually build our table of

157
00:06:29,779 --> 00:06:33,918
light probes if I'm not mistaken right

158
00:06:31,610 --> 00:06:36,650
now we we don't really have a way to do

159
00:06:33,918 --> 00:06:39,049
that we do know that there are light

160
00:06:36,649 --> 00:06:40,579
probes in our system we are ready to

161
00:06:39,050 --> 00:06:42,110
build a set of light

162
00:06:40,579 --> 00:06:44,990
probes for the lighting system to work

163
00:06:42,110 --> 00:06:46,848
with but to the best of my knowledge we

164
00:06:44,990 --> 00:06:49,069
never actually did any code that

165
00:06:46,848 --> 00:06:50,959
actually puts that light probe table to

166
00:06:49,069 --> 00:06:52,669
use we just have entities that draw

167
00:06:50,959 --> 00:06:54,560
themselves as those little purple

168
00:06:52,668 --> 00:06:57,079
markers that are like these are the

169
00:06:54,560 --> 00:06:59,089
light probes and then we have a light

170
00:06:57,079 --> 00:07:00,709
probe system in the lining that will

171
00:06:59,089 --> 00:07:02,209
iterate over them and try to move light

172
00:07:00,709 --> 00:07:04,098
around with them but we don't actually

173
00:07:02,209 --> 00:07:06,918
plug those together so we need to do

174
00:07:04,098 --> 00:07:08,899
that we also need to actually call the

175
00:07:06,918 --> 00:07:11,120
function that inserts these probes into

176
00:07:08,899 --> 00:07:13,878
the spatial index I don't think we did

177
00:07:11,120 --> 00:07:16,280
that right I think we wrote some code

178
00:07:13,879 --> 00:07:20,110
that does it but we don't actually have

179
00:07:16,279 --> 00:07:22,399
anybody use it yet right and then third

180
00:07:20,110 --> 00:07:27,050
we're gonna have to build some of these

181
00:07:22,399 --> 00:07:30,049
additional support structures so for

182
00:07:27,050 --> 00:07:32,000
example we've got lighting samples right

183
00:07:30,050 --> 00:07:35,348
like this sample table of 16 light

184
00:07:32,000 --> 00:07:37,399
directions that we're using for lighting

185
00:07:35,348 --> 00:07:40,128
although actually I thought that was

186
00:07:37,399 --> 00:07:42,378
this so I'm not sure what this is right

187
00:07:40,129 --> 00:07:43,699
now maybe it glows after this I don't

188
00:07:42,379 --> 00:07:46,039
really remember it doesn't matter

189
00:07:43,699 --> 00:07:49,278
point being we need to go back to the

190
00:07:46,038 --> 00:07:53,329
code that generates the directions to

191
00:07:49,278 --> 00:07:55,699
sample lighting wise and we need that to

192
00:07:53,329 --> 00:08:01,689
remember for each individual lighting

193
00:07:55,699 --> 00:08:05,139
direction which of the light directions

194
00:08:01,689 --> 00:08:08,028
corresponds which of those sample lines

195
00:08:05,139 --> 00:08:12,800
corresponds to which directional

196
00:08:08,028 --> 00:08:17,360
contribution for a probe and at the

197
00:08:12,800 --> 00:08:20,150
moment unfortunately for us we don't

198
00:08:17,360 --> 00:08:24,278
really again we don't really know how we

199
00:08:20,149 --> 00:08:24,278
want to keep this lighting information

200
00:08:24,639 --> 00:08:30,949
stored right it's entirely possible that

201
00:08:28,430 --> 00:08:34,370
we would like to store it in some way

202
00:08:30,949 --> 00:08:36,680
other than 6 light 6 rough light

203
00:08:34,370 --> 00:08:40,549
directions you know what I mean

204
00:08:36,679 --> 00:08:46,838
and if you look for example the paper

205
00:08:40,549 --> 00:08:46,838
that I mentioned the other day which

206
00:08:47,929 --> 00:08:59,149
I'll be honest I don't really I don't

207
00:08:55,589 --> 00:09:03,959
really remember where was here it is I

208
00:08:59,149 --> 00:09:06,360
guess I do remember where was so if we

209
00:09:03,958 --> 00:09:08,008
take a look at like the the paper that I

210
00:09:06,360 --> 00:09:11,850
mentioned the other day that was talking

211
00:09:08,009 --> 00:09:13,259
about light probes and again light

212
00:09:11,850 --> 00:09:16,170
probes are very common thing they aren't

213
00:09:13,259 --> 00:09:21,419
invented by this paper they are like old

214
00:09:16,169 --> 00:09:24,378
right just in terms of giving you some

215
00:09:21,419 --> 00:09:28,649
information about how these things work

216
00:09:24,379 --> 00:09:31,920
when they're used in sort of 3d triple-a

217
00:09:28,649 --> 00:09:33,990
sorts of games and so on you can see

218
00:09:31,919 --> 00:09:36,750
here where we're talking about spherical

219
00:09:33,990 --> 00:09:40,948
irradiance the question is how do you

220
00:09:36,750 --> 00:09:44,179
store these things and in terms of how

221
00:09:40,948 --> 00:09:46,109
they store them I'm not sure let's see

222
00:09:44,179 --> 00:09:48,419
spiracle distributions at the street

223
00:09:46,110 --> 00:09:50,610
clothes would be combined blah blah blah

224
00:09:48,419 --> 00:09:58,338
blah let's see we encode straight

225
00:09:50,610 --> 00:10:01,860
irradiance in eleven eleven ten at 8x8

226
00:09:58,339 --> 00:10:09,420
octahedral resolution so they basically

227
00:10:01,860 --> 00:10:17,039
use a little 8x8 square that I assume

228
00:10:09,419 --> 00:10:19,828
just source the color so I mean it looks

229
00:10:17,039 --> 00:10:21,059
like them and just from looking at it it

230
00:10:19,828 --> 00:10:22,769
looks like they're doing roughly what

231
00:10:21,059 --> 00:10:27,719
we're doing just a little better right

232
00:10:22,769 --> 00:10:31,049
or more more detail right we're just

233
00:10:27,720 --> 00:10:32,759
using six samples they're using 64 right

234
00:10:31,049 --> 00:10:34,528
and that's understandable because

235
00:10:32,759 --> 00:10:36,870
they're trying to eat up GPU power right

236
00:10:34,528 --> 00:10:39,149
I mean they're trying to make the best

237
00:10:36,870 --> 00:10:41,459
lighting they can and I want to say

238
00:10:39,149 --> 00:10:46,919
these guys are in video rights

239
00:10:41,458 --> 00:10:50,308
yeah well okay not just Nvidia but at

240
00:10:46,919 --> 00:10:52,229
least half Nvidia so they're trying to

241
00:10:50,308 --> 00:10:54,000
you know get as much power out of this

242
00:10:52,230 --> 00:10:57,300
as they can and so they're probably

243
00:10:54,000 --> 00:10:58,350
doing you know a lot more than what we

244
00:10:57,299 --> 00:10:59,250
would necessarily want to do they're

245
00:10:58,350 --> 00:11:01,170
also targeting the

246
00:10:59,250 --> 00:11:03,899
latest stuff as much as possible right

247
00:11:01,169 --> 00:11:05,339
um so there but it looks like they're

248
00:11:03,899 --> 00:11:08,039
doing exact what we're doing so maybe

249
00:11:05,340 --> 00:11:09,810
that's fine but I just wanted to give

250
00:11:08,039 --> 00:11:13,230
you some perspective on what some people

251
00:11:09,809 --> 00:11:14,699
are otherwise doing a spherical basis

252
00:11:13,230 --> 00:11:19,110
function the circle harmonics for

253
00:11:14,700 --> 00:11:20,610
example there's just there's just a lot

254
00:11:19,110 --> 00:11:23,220
of ways we could store it that's all I

255
00:11:20,610 --> 00:11:24,930
wanted to say and so I don't know if the

256
00:11:23,220 --> 00:11:29,009
way that we're picking is the smartest

257
00:11:24,929 --> 00:11:31,349
way for us it's hard to say and when we

258
00:11:29,009 --> 00:11:32,789
go to do sampling you know we may find

259
00:11:31,350 --> 00:11:34,139
that it's too expensive to sample or

260
00:11:32,789 --> 00:11:37,980
it's too expensive the store or whatever

261
00:11:34,139 --> 00:11:39,509
and we might want to adjust that method

262
00:11:37,980 --> 00:11:40,909
so instead of using the six faces of a

263
00:11:39,509 --> 00:11:43,980
cube maybe we want to do something

264
00:11:40,909 --> 00:11:45,689
smarter or maybe there's some way we

265
00:11:43,980 --> 00:11:48,379
could do something you know that that's

266
00:11:45,690 --> 00:11:51,450
going to be a quicker to sample in store

267
00:11:48,379 --> 00:11:53,220
so that's all I wanted to keep you aware

268
00:11:51,450 --> 00:11:54,750
of but at the moment we're gonna do it

269
00:11:53,220 --> 00:11:57,570
that way just because it's something

270
00:11:54,750 --> 00:11:58,799
simple and we can visualize it easy we

271
00:11:57,570 --> 00:12:00,420
can write something that just draws

272
00:11:58,799 --> 00:12:02,669
different colors on the side of a cube

273
00:12:00,419 --> 00:12:06,120
for example and that would give us the

274
00:12:02,669 --> 00:12:07,529
information that we need for determining

275
00:12:06,120 --> 00:12:10,799
whether our lighting seems to be working

276
00:12:07,529 --> 00:12:13,709
at all or not so what I want to do now

277
00:12:10,799 --> 00:12:15,299
is just start on that process which is

278
00:12:13,710 --> 00:12:19,019
gonna be kind of slow but we're gonna go

279
00:12:15,299 --> 00:12:21,870
ahead and just take it slow and the

280
00:12:19,019 --> 00:12:23,909
first problem that I think I would see

281
00:12:21,870 --> 00:12:25,679
here one of the things that I don't

282
00:12:23,909 --> 00:12:27,419
super like if you look at how these

283
00:12:25,679 --> 00:12:29,879
light probes are stored we've got sort

284
00:12:27,419 --> 00:12:33,000
of a six wide piece of color information

285
00:12:29,879 --> 00:12:35,639
here and what I don't super love about

286
00:12:33,000 --> 00:12:41,460
it is if you go look at how we actually

287
00:12:35,639 --> 00:12:43,980
use our hits right if we come in here

288
00:12:41,460 --> 00:12:46,500
you can see us doing or our Ray

289
00:12:43,980 --> 00:12:48,629
intersection and we then downshift a

290
00:12:46,500 --> 00:12:51,330
scalar which we're doing primarily just

291
00:12:48,629 --> 00:12:54,120
because we can't do memory lookups and

292
00:12:51,330 --> 00:12:59,250
Simbi it's really the the sort of bane

293
00:12:54,120 --> 00:13:02,100
of the pre a V X 512 instruction set

294
00:12:59,250 --> 00:13:03,990
it just wasn't well designed for this

295
00:13:02,100 --> 00:13:08,100
part of the of the process unfortunately

296
00:13:03,990 --> 00:13:09,419
I that's neither here nor there but

297
00:13:08,100 --> 00:13:11,100
point being when we have to downshift

298
00:13:09,419 --> 00:13:13,110
here you can see what we're doing we

299
00:13:11,100 --> 00:13:15,629
take four rays at a time

300
00:13:13,110 --> 00:13:18,209
right and we break them up into their

301
00:13:15,629 --> 00:13:19,769
individual single rays and then we do

302
00:13:18,208 --> 00:13:22,078
our lookups right we just try to figure

303
00:13:19,769 --> 00:13:25,919
out you know where we're going to how

304
00:13:22,078 --> 00:13:28,289
this transfer PPS is going to work and

305
00:13:25,919 --> 00:13:30,659
you can see it accumulating that PPS in

306
00:13:28,289 --> 00:13:33,269
here and that this right here is the

307
00:13:30,659 --> 00:13:35,189
part the sample point durand X that

308
00:13:33,269 --> 00:13:40,740
point right there is just the thing that

309
00:13:35,190 --> 00:13:42,779
lets us know which one of these samples

310
00:13:40,740 --> 00:13:47,278
it should be added into now the thing

311
00:13:42,778 --> 00:13:50,909
that I think we want to look at though

312
00:13:47,278 --> 00:13:54,088
is that when we sample a particular

313
00:13:50,909 --> 00:14:00,028
direction sometimes those directions are

314
00:13:54,089 --> 00:14:01,890
going to be kind of they're going to be

315
00:14:00,028 --> 00:14:06,179
shooting out towards the corners of the

316
00:14:01,889 --> 00:14:11,370
cube right and one question I have and

317
00:14:06,179 --> 00:14:18,269
I'm not sure like I'm not sure what the

318
00:14:11,370 --> 00:14:24,209
right approach is is how do we actually

319
00:14:18,269 --> 00:14:26,909
want to record sample directions we can

320
00:14:24,208 --> 00:14:31,139
just sample into the face of the cube

321
00:14:26,909 --> 00:14:33,870
that you left through but it might be

322
00:14:31,139 --> 00:14:36,000
smarter for us to just average like when

323
00:14:33,870 --> 00:14:38,990
we take let me just draw this out here

324
00:14:36,000 --> 00:14:38,990
so you know what I'm talking about

325
00:14:57,500 --> 00:15:08,100
so if we imagine we've got a cube right

326
00:15:04,700 --> 00:15:09,390
and we sample some direction but that

327
00:15:08,100 --> 00:15:10,829
direction like let's say we're starting

328
00:15:09,389 --> 00:15:12,509
from the center here right and that

329
00:15:10,828 --> 00:15:15,088
direction kind of goes off through like

330
00:15:12,509 --> 00:15:17,490
almost a corner of the cube then the

331
00:15:15,089 --> 00:15:19,440
question is like you know do we really

332
00:15:17,490 --> 00:15:21,209
just want to attribute to one side if we

333
00:15:19,440 --> 00:15:25,320
left directly through the middle of that

334
00:15:21,208 --> 00:15:28,289
cube sure but if it's off here or here

335
00:15:25,320 --> 00:15:32,010
or worse yet here how come we don't add

336
00:15:28,289 --> 00:15:35,458
any into like these right and so another

337
00:15:32,009 --> 00:15:39,419
way we could choose to have this work is

338
00:15:35,458 --> 00:15:42,389
we could choose to like place this

339
00:15:39,419 --> 00:15:45,059
information like distribute this

340
00:15:42,389 --> 00:15:49,049
information out to the sides of the cube

341
00:15:45,059 --> 00:15:51,359
as like a blending value right so we

342
00:15:49,049 --> 00:15:54,838
could say that you know this one goes

343
00:15:51,360 --> 00:15:59,129
you know 33% to this face 33% to this

344
00:15:54,839 --> 00:16:00,510
face and 33% to this face right now the

345
00:15:59,129 --> 00:16:04,470
reason that I find this sort of

346
00:16:00,509 --> 00:16:07,198
confusing is because we are also then on

347
00:16:04,470 --> 00:16:10,350
the back end going to blend their two

348
00:16:07,198 --> 00:16:13,349
right so when we sample on the back end

349
00:16:10,350 --> 00:16:15,570
and we say okay we have some lighting

350
00:16:13,350 --> 00:16:16,920
information that we generated right so

351
00:16:15,570 --> 00:16:18,750
we did all the sampling and then we

352
00:16:16,919 --> 00:16:20,219
produced a single cube with a color per

353
00:16:18,750 --> 00:16:21,600
face you know here's color zero or is

354
00:16:20,220 --> 00:16:25,920
color one yours color two or something

355
00:16:21,600 --> 00:16:27,420
right and then we shoot array for

356
00:16:25,919 --> 00:16:28,860
sampling the light we're sitting we

357
00:16:27,419 --> 00:16:33,479
don't shoot the Ray we were just gonna

358
00:16:28,860 --> 00:16:35,220
sample this lighting from this cube if

359
00:16:33,480 --> 00:16:40,800
we're going towards a corner we already

360
00:16:35,220 --> 00:16:44,670
do a 33% C zero plus 33 percent C one

361
00:16:40,799 --> 00:16:50,490
plus 33 percent C two right so we're

362
00:16:44,669 --> 00:16:53,729
already doing that blend to produce the

363
00:16:50,490 --> 00:16:55,019
result from those so we you know when we

364
00:16:53,730 --> 00:16:57,810
go to look at the lighting in that

365
00:16:55,019 --> 00:17:00,240
direction that's what we get and so the

366
00:16:57,809 --> 00:17:05,009
question is what produces the best

367
00:17:00,240 --> 00:17:08,549
result here from this process you know

368
00:17:05,009 --> 00:17:11,250
and I really don't know you can see the

369
00:17:08,549 --> 00:17:14,159
kind of problem that you get

370
00:17:11,250 --> 00:17:17,789
potentially with not blending if you

371
00:17:14,160 --> 00:17:20,009
just use equal weighting as you kind of

372
00:17:17,789 --> 00:17:22,559
shoot out through this cube then the

373
00:17:20,009 --> 00:17:26,009
problem is as you get towards the the

374
00:17:22,559 --> 00:17:28,829
end you're causing light that may be

375
00:17:26,009 --> 00:17:32,069
coming from over here to contribute just

376
00:17:28,829 --> 00:17:34,980
as highly to a sample direction that may

377
00:17:32,069 --> 00:17:36,990
be over here right and if I was to sort

378
00:17:34,980 --> 00:17:39,120
of draw this in 2d so it's easier for

379
00:17:36,990 --> 00:17:41,870
you to see what I'm talking about let's

380
00:17:39,119 --> 00:17:45,419
suppose that we have a light probe right

381
00:17:41,869 --> 00:17:47,549
and here is one side of the light primp

382
00:17:45,420 --> 00:17:50,610
so here's my light probe and here's one

383
00:17:47,549 --> 00:17:53,819
side of it I'm looking out this way at

384
00:17:50,609 --> 00:17:56,129
the very edge of this thing right and

385
00:17:53,819 --> 00:17:58,769
also out the middle I'm sampling these

386
00:17:56,130 --> 00:18:01,080
rays and I get some results so maybe

387
00:17:58,769 --> 00:18:03,509
there's a red light here there's a green

388
00:18:01,079 --> 00:18:06,419
light here and there's a blue light here

389
00:18:03,509 --> 00:18:10,019
right well what I would like to do in

390
00:18:06,420 --> 00:18:11,759
the future when I then have a surface in

391
00:18:10,019 --> 00:18:14,670
this area and it's pointing this way and

392
00:18:11,759 --> 00:18:17,609
I want a sample what's the lighting here

393
00:18:14,670 --> 00:18:20,400
well ideally the best result would be

394
00:18:17,609 --> 00:18:22,799
for me to get heavily blue right like

395
00:18:20,400 --> 00:18:26,880
mostly blue light and not a lot of red

396
00:18:22,799 --> 00:18:28,980
light from that right and so if we

397
00:18:26,880 --> 00:18:30,600
assume that this side is sort of also

398
00:18:28,980 --> 00:18:31,589
hitting the blue a little bit right

399
00:18:30,599 --> 00:18:34,289
because this blue lights over here

400
00:18:31,589 --> 00:18:38,099
somewhere this is gonna be blue but this

401
00:18:34,289 --> 00:18:40,559
is gonna be roughly white right so I'm

402
00:18:38,099 --> 00:18:43,289
gonna blend a lot of white in here for

403
00:18:40,559 --> 00:18:45,450
that a 50% white 50% blue for this

404
00:18:43,289 --> 00:18:50,970
sample even though what I really wanted

405
00:18:45,450 --> 00:18:52,500
was mostly blue right now I don't know

406
00:18:50,970 --> 00:18:55,890
that there's that much we can really do

407
00:18:52,500 --> 00:18:58,619
to fix that but again if these things

408
00:18:55,890 --> 00:19:01,050
were weighted then this would get added

409
00:18:58,619 --> 00:19:02,819
a lot less in there so it would be

410
00:19:01,049 --> 00:19:06,329
mostly green and blue that would be

411
00:19:02,819 --> 00:19:08,069
added to this face and this face right

412
00:19:06,329 --> 00:19:09,779
and so when you sample that direction

413
00:19:08,069 --> 00:19:11,549
you get more of it and there being less

414
00:19:09,779 --> 00:19:15,990
light contribution from our because that

415
00:19:11,549 --> 00:19:17,789
would be mostly added here right so this

416
00:19:15,990 --> 00:19:20,789
would be more B this would be more R

417
00:19:17,789 --> 00:19:24,460
this would be more G which is probably

418
00:19:20,789 --> 00:19:29,829
more what we want so I really again

419
00:19:24,460 --> 00:19:32,140
I just don't really know what we want to

420
00:19:29,829 --> 00:19:34,990
do there but just from looking at it it

421
00:19:32,140 --> 00:19:45,190
kind of seems to me like we would rather

422
00:19:34,990 --> 00:19:48,549
have a blended a blended gather as well

423
00:19:45,190 --> 00:19:52,240
as a blended sample just personally so

424
00:19:48,549 --> 00:19:53,859
it kind of seems like this process wants

425
00:19:52,240 --> 00:19:57,309
to look a little bit different you know

426
00:19:53,859 --> 00:20:04,869
it probably wants to look kind of more

427
00:19:57,309 --> 00:20:07,569
like this and each one of these things

428
00:20:04,869 --> 00:20:12,219
maybe this accumulated PPS as we

429
00:20:07,569 --> 00:20:16,809
accumulate in here some kind of a

430
00:20:12,220 --> 00:20:18,519
transfer we would want to accumulate the

431
00:20:16,809 --> 00:20:22,000
way to normalize like we used to and

432
00:20:18,519 --> 00:20:29,170
just wait each one of these by some kind

433
00:20:22,000 --> 00:20:30,700
of pre computed probe contribution so

434
00:20:29,170 --> 00:20:32,470
remember we know like those directions

435
00:20:30,700 --> 00:20:35,110
if these things are going out in and

436
00:20:32,470 --> 00:20:37,600
when we store those rays sample

437
00:20:35,109 --> 00:20:40,179
directions what we would do is store how

438
00:20:37,599 --> 00:20:42,609
they get accumulated back in so like

439
00:20:40,180 --> 00:20:50,769
each of these things right would be that

440
00:20:42,609 --> 00:20:52,949
way uh that just seems better right to

441
00:20:50,769 --> 00:20:52,950
me

442
00:21:03,630 --> 00:21:08,710
and I just think that's probably what

443
00:21:06,130 --> 00:21:10,720
you would want to do so you know looking

444
00:21:08,710 --> 00:21:15,420
at this we would sort of say all right

445
00:21:10,720 --> 00:21:15,420
there's going to be an accumulated PPS

446
00:21:18,450 --> 00:21:24,220
it's going to be something like this

447
00:21:20,730 --> 00:21:26,140
right so you're gonna grab that out

448
00:21:24,220 --> 00:21:35,079
there and then you're going to do

449
00:21:26,140 --> 00:21:37,540
something like this just so we build

450
00:21:35,079 --> 00:21:47,369
that base pointer once and then we

451
00:21:37,539 --> 00:21:47,369
access it off of here right and that way

452
00:21:50,519 --> 00:21:56,710
now we have each of these sort of PPS

453
00:21:54,000 --> 00:21:58,930
ones it's kind of off of the base one

454
00:21:56,710 --> 00:22:00,880
and then we just need weighting values

455
00:21:58,930 --> 00:22:03,160
for these and we're going to need to

456
00:22:00,880 --> 00:22:06,120
remember how much weight we did because

457
00:22:03,160 --> 00:22:09,250
now we do need to sort of renormalize

458
00:22:06,119 --> 00:22:12,309
those values possibly to be honest

459
00:22:09,250 --> 00:22:15,190
though I'm not super sure how much we

460
00:22:12,309 --> 00:22:17,889
really need to do in terms of

461
00:22:15,190 --> 00:22:21,580
renormalization it feels sort of like

462
00:22:17,890 --> 00:22:23,860
that's unnecessary because you know

463
00:22:21,579 --> 00:22:27,549
we're just taking the incoming light and

464
00:22:23,859 --> 00:22:30,309
so if we just always multiply by the Ray

465
00:22:27,549 --> 00:22:32,490
weight it should generally speaking just

466
00:22:30,309 --> 00:22:35,679
average out over time you would think

467
00:22:32,490 --> 00:22:38,440
maybe that's not true but it feels like

468
00:22:35,680 --> 00:22:45,880
it's an unnecessary step to accumulate

469
00:22:38,440 --> 00:22:51,029
the weighting on these things so I might

470
00:22:45,880 --> 00:22:51,030
just say let's see if we can skip it

471
00:23:13,259 --> 00:23:18,219
so I'm just gonna say that because I'm

472
00:23:15,578 --> 00:23:20,608
just not sure and we kind of have to

473
00:23:18,219 --> 00:23:23,078
look at it a little bit more detail but

474
00:23:20,608 --> 00:23:24,728
anyway assuming that we are going to do

475
00:23:23,078 --> 00:23:28,448
something roughly like this what we need

476
00:23:24,729 --> 00:23:33,519
now is a contribution sample value and

477
00:23:28,449 --> 00:23:36,639
so back here where we had sample point

478
00:23:33,519 --> 00:23:39,578
dur index what I actually want there is

479
00:23:36,638 --> 00:23:41,258
just a blending value right so I really

480
00:23:39,578 --> 00:23:45,959
just want something that looks like this

481
00:23:41,259 --> 00:23:50,229
so for each sample point in the set I

482
00:23:45,959 --> 00:23:52,328
have like how it should be blended in

483
00:23:50,229 --> 00:23:54,940
and when you look at these you can see

484
00:23:52,328 --> 00:23:56,979
it looks like we've got sort of sets of

485
00:23:54,940 --> 00:23:59,259
these guys and so what I kind of want to

486
00:23:56,979 --> 00:24:01,058
do is just say the sample like this

487
00:23:59,259 --> 00:24:03,038
should sort of be its own bundle

488
00:24:01,058 --> 00:24:08,578
probably so there should be something

489
00:24:03,038 --> 00:24:13,328
here like a lighting sample light

490
00:24:08,578 --> 00:24:16,719
sampling sphere something like that

491
00:24:13,328 --> 00:24:28,418
right and then these things here where

492
00:24:16,719 --> 00:24:29,949
we have these sample ray bits here we'll

493
00:24:28,419 --> 00:24:31,749
just call these sampling spheres and

494
00:24:29,949 --> 00:24:34,179
we'll make as many of these as we want

495
00:24:31,749 --> 00:24:35,949
so okay you know we do 16 or whatever

496
00:24:34,179 --> 00:24:39,278
and that's fine

497
00:24:35,949 --> 00:24:41,579
and so these are actually just 18 and 6

498
00:24:39,278 --> 00:24:47,440
right I'm sorry

499
00:24:41,578 --> 00:24:50,259
18 18 6 right so for each of these we

500
00:24:47,440 --> 00:24:53,469
have for our sample point in its really

501
00:24:50,259 --> 00:24:57,489
sampled direction and that's this right

502
00:24:53,469 --> 00:25:00,899
here for our sample direction that we're

503
00:24:57,489 --> 00:25:04,419
heading out in we have our like

504
00:25:00,898 --> 00:25:05,788
contribute are like cubed side weight

505
00:25:04,419 --> 00:25:08,549
right

506
00:25:05,788 --> 00:25:12,388
and so for each one of these we want to

507
00:25:08,548 --> 00:25:16,138
go ahead and use the correct

508
00:25:12,388 --> 00:25:17,668
corresponding weight as we go so we're

509
00:25:16,138 --> 00:25:20,269
just like looking up which weight we

510
00:25:17,669 --> 00:25:27,840
need to use here to blend this thing in

511
00:25:20,269 --> 00:25:30,839
and off we go so that's how we would

512
00:25:27,839 --> 00:25:33,298
update and to get the cube side weight

513
00:25:30,839 --> 00:25:36,569
there we just need to go like okay the

514
00:25:33,298 --> 00:25:40,378
cube size cube side weight just equals

515
00:25:36,569 --> 00:25:43,648
whatever our sampling spheres cube side

516
00:25:40,378 --> 00:25:45,628
weight was right and so now we can look

517
00:25:43,648 --> 00:25:48,658
in here where we're sort of doing these

518
00:25:45,628 --> 00:25:51,358
lookups like this we can make this be

519
00:25:48,659 --> 00:25:53,190
based on the sample sphere now which is

520
00:25:51,358 --> 00:25:56,878
better right so now what we do is say

521
00:25:53,190 --> 00:26:00,179
all right when we would normally go to

522
00:25:56,878 --> 00:26:02,939
get this der sample index nonsense here

523
00:26:00,179 --> 00:26:05,909
which you know is the probe index this

524
00:26:02,940 --> 00:26:08,129
this crap here this as you can see light

525
00:26:05,909 --> 00:26:10,169
probe index plus sample point entropy

526
00:26:08,128 --> 00:26:12,509
the sample point entropy is like a fixed

527
00:26:10,169 --> 00:26:14,788
value up here right so the light probe

528
00:26:12,509 --> 00:26:17,210
index plus the sample probe entropy

529
00:26:14,788 --> 00:26:23,128
ANDed with a sample pattern mask is

530
00:26:17,210 --> 00:26:25,169
actually something we can just have out

531
00:26:23,128 --> 00:26:27,449
here if I'm not mistaken right because

532
00:26:25,169 --> 00:26:30,359
nothing in here actually ever alters any

533
00:26:27,450 --> 00:26:32,788
of that so what we want to do is each

534
00:26:30,358 --> 00:26:36,689
time through once we compute whatever

535
00:26:32,788 --> 00:26:38,579
this Dorris ample index lookup value is

536
00:26:36,690 --> 00:26:40,440
that's what we want to go get our

537
00:26:38,579 --> 00:26:41,638
sampling sphere right so that's where we

538
00:26:40,440 --> 00:26:45,179
want to go like okay

539
00:26:41,638 --> 00:26:47,758
sampling sphere spheres plus der sample

540
00:26:45,179 --> 00:26:51,298
index is going to be our light sampling

541
00:26:47,759 --> 00:26:52,470
sphere and so we're just picking which

542
00:26:51,298 --> 00:26:54,058
one of these spheres we're going to use

543
00:26:52,470 --> 00:26:55,710
for sampling and we can generate as many

544
00:26:54,058 --> 00:26:59,638
as them as we think we need to ensure a

545
00:26:55,710 --> 00:27:00,840
fairly random coverage but off we go so

546
00:26:59,638 --> 00:27:02,579
once we have one of those sampling

547
00:27:00,839 --> 00:27:04,499
Spears you can use it for everything so

548
00:27:02,579 --> 00:27:10,470
here for example we would do sampling

549
00:27:04,499 --> 00:27:13,889
sphere and then when we want to get like

550
00:27:10,470 --> 00:27:16,950
our sample Direction we just use the Ray

551
00:27:13,888 --> 00:27:19,349
index here and this ray count right we

552
00:27:16,950 --> 00:27:22,500
need to make sure that we know

553
00:27:19,349 --> 00:27:24,269
that our ray count is always not as bad

554
00:27:22,500 --> 00:27:27,599
right as well actually can see it right

555
00:27:24,269 --> 00:27:38,430
here so we just need our ray count to

556
00:27:27,599 --> 00:27:39,359
always here be yeah so I mean here we

557
00:27:38,430 --> 00:27:41,610
say look all right we've got our

558
00:27:39,359 --> 00:27:48,179
sampling sphere we need our sampling

559
00:27:41,609 --> 00:27:49,889
spheres sample direction that's gonna be

560
00:27:48,180 --> 00:27:51,840
the ray count because that's how many

561
00:27:49,890 --> 00:27:55,710
that we can pull out of that sampling

562
00:27:51,839 --> 00:27:59,459
sphere and then we just send all those

563
00:27:55,710 --> 00:28:00,960
rays down right so I think that's

564
00:27:59,460 --> 00:28:02,700
roughly what we're talking about here

565
00:28:00,960 --> 00:28:04,230
and these are constant so they should be

566
00:28:02,700 --> 00:28:07,080
able to be optimized away by the

567
00:28:04,230 --> 00:28:08,910
compiler into just constant computations

568
00:28:07,079 --> 00:28:12,000
because they don't change their their

569
00:28:08,910 --> 00:28:14,150
you know based on the structure size so

570
00:28:12,000 --> 00:28:17,970
I think that's all we need to do there

571
00:28:14,150 --> 00:28:21,030
and that you know gets us started with

572
00:28:17,970 --> 00:28:23,880
that bit of sampling right now we have a

573
00:28:21,029 --> 00:28:26,190
problem here obviously which is that

574
00:28:23,880 --> 00:28:28,800
when we are actually generating these

575
00:28:26,190 --> 00:28:32,700
sampling spheres we kind of had our

576
00:28:28,799 --> 00:28:35,940
pattern generator here right and one of

577
00:28:32,700 --> 00:28:37,590
the things that you could see about our

578
00:28:35,940 --> 00:28:39,390
pattern generators is our pattern

579
00:28:37,589 --> 00:28:42,599
generator is always generated only

580
00:28:39,390 --> 00:28:44,600
hemispherical patterns and obviously we

581
00:28:42,599 --> 00:28:49,469
don't want that so if you look here

582
00:28:44,599 --> 00:28:53,039
where we've got our generator for 64 I

583
00:28:49,470 --> 00:28:57,930
guess which I don't know why it would be

584
00:28:53,039 --> 00:29:06,319
generating 64 of anything because we

585
00:28:57,930 --> 00:29:06,320
don't have anything of that multiple

586
00:29:10,109 --> 00:29:16,439
I'm not sure what the goal was here I

587
00:29:20,940 --> 00:29:26,860
don't quite know why it looks like that

588
00:29:24,539 --> 00:29:30,849
to be completely honest with you

589
00:29:26,859 --> 00:29:35,319
but either way when you look at for

590
00:29:30,849 --> 00:29:38,259
example for example our Plus on sampled

591
00:29:35,319 --> 00:29:40,679
generator you can see here we're

592
00:29:38,259 --> 00:29:44,109
generating random bilaterals right and

593
00:29:40,680 --> 00:29:46,060
we are then looking to see whether or

594
00:29:44,109 --> 00:29:49,059
not we have anything in the set that's

595
00:29:46,059 --> 00:29:51,879
too close and off we go

596
00:29:49,059 --> 00:29:54,909
and then you can see here like where we

597
00:29:51,880 --> 00:29:58,630
are actually just you can even see us

598
00:29:54,910 --> 00:30:00,370
here we're just using we're using sort

599
00:29:58,630 --> 00:30:03,820
of a method where we generate stuff on

600
00:30:00,369 --> 00:30:08,109
the disk and then we loft it up into Z

601
00:30:03,819 --> 00:30:09,789
to generate a hemisphere right and again

602
00:30:08,109 --> 00:30:11,859
I don't think we want to do this anymore

603
00:30:09,789 --> 00:30:14,940
so I think what we want to do here is we

604
00:30:11,859 --> 00:30:17,409
want to just generate points that are

605
00:30:14,940 --> 00:30:25,090
randomly pointing in arbitrary

606
00:30:17,410 --> 00:30:30,670
directions and then we want to we want

607
00:30:25,089 --> 00:30:32,919
to just keep the entire sphere so I'm

608
00:30:30,670 --> 00:30:35,230
gonna go ahead and look here this this

609
00:30:32,920 --> 00:30:38,769
point where we loft them up just isn't

610
00:30:35,230 --> 00:30:41,650
necessary right so I'm gonna go ahead

611
00:30:38,769 --> 00:30:43,599
and start to cut these routines I don't

612
00:30:41,650 --> 00:30:45,580
really care about these other pattern

613
00:30:43,599 --> 00:30:46,869
generators here I don't think they're

614
00:30:45,579 --> 00:30:50,049
actually being used anymore they were

615
00:30:46,869 --> 00:30:52,269
just as when we were actually sort of

616
00:30:50,049 --> 00:30:55,599
playing with our different options there

617
00:30:52,269 --> 00:31:00,099
I don't think we care about this anymore

618
00:30:55,599 --> 00:31:04,889
I mean I guess I could keep them but I'm

619
00:31:00,099 --> 00:31:04,889
not going to bother well

620
00:31:17,539 --> 00:31:21,079
it would be yeah you know what I'm not

621
00:31:19,579 --> 00:31:23,119
gonna it's just it's just more work

622
00:31:21,079 --> 00:31:25,039
Vince than it's worth so I'm gonna go

623
00:31:23,119 --> 00:31:26,449
ahead and say look we're gonna get rid

624
00:31:25,039 --> 00:31:28,460
of the lighting pattern generator stuff

625
00:31:26,450 --> 00:31:30,500
and just simplify this code down because

626
00:31:28,460 --> 00:31:35,500
I want the Poisson generator pretty much

627
00:31:30,500 --> 00:31:35,500
period so we're just going to do this

628
00:31:36,339 --> 00:31:43,279
and these folks are gonna go away

629
00:31:39,339 --> 00:31:50,089
and then the generate Poisson samples

630
00:31:43,279 --> 00:31:56,808
now is I think we can just use sort of a

631
00:31:50,089 --> 00:32:00,379
regular sort of a regular thing where we

632
00:31:56,808 --> 00:32:07,250
just generate samples in the cube will

633
00:32:00,380 --> 00:32:09,350
normalize that so then we have a you

634
00:32:07,250 --> 00:32:12,200
know some random direction we don't want

635
00:32:09,349 --> 00:32:17,480
it to be zero zero zero so we probably

636
00:32:12,200 --> 00:32:21,130
want to avoid having it be vats one way

637
00:32:17,480 --> 00:32:21,130
to do that would probably be to say like

638
00:32:24,880 --> 00:32:28,150
like this

639
00:32:34,390 --> 00:32:39,320
so we'll just say alright we're gonna

640
00:32:36,710 --> 00:32:40,759
keep trying to generate points assuming

641
00:32:39,319 --> 00:32:43,399
that we've got one that's reasonable

642
00:32:40,759 --> 00:32:46,250
we'll take P and we'll multiply it by

643
00:32:43,400 --> 00:32:54,650
one over P squared to renormalize it

644
00:32:46,250 --> 00:32:57,200
right so you know will normalize P this

645
00:32:54,650 --> 00:33:02,150
way then we'll just check to see whether

646
00:32:57,200 --> 00:33:04,340
or not it's it's valid here and off we

647
00:33:02,150 --> 00:33:08,440
will go so well you know what we were

648
00:33:04,339 --> 00:33:08,439
already doing that never mind

649
00:33:12,220 --> 00:33:18,069
like I but I want to do this first so I

650
00:33:14,750 --> 00:33:18,069
think we still yeah you know what I

651
00:33:18,670 --> 00:33:23,000
think we still want this this way all

652
00:33:22,670 --> 00:33:24,890
right

653
00:33:23,000 --> 00:33:28,670
so valid we're just going to presume to

654
00:33:24,890 --> 00:33:30,770
be true and then we're going to do our

655
00:33:28,670 --> 00:33:32,420
test over the existing points to see

656
00:33:30,769 --> 00:33:35,180
whether they meet the minimum distance

657
00:33:32,420 --> 00:33:36,680
squared that we've set up this minimum

658
00:33:35,180 --> 00:33:39,500
distance squared is probably going to

659
00:33:36,680 --> 00:33:41,090
have to be adjusted but that's okay and

660
00:33:39,500 --> 00:33:43,430
then we record our points in here for

661
00:33:41,089 --> 00:33:45,799
ones that are valid and so that's good

662
00:33:43,430 --> 00:33:47,509
enough for our plus on samples it's not

663
00:33:45,799 --> 00:33:49,069
a good way to generate plots on samples

664
00:33:47,509 --> 00:33:52,460
and we should probably put it to do in

665
00:33:49,069 --> 00:33:57,109
here like the D okay see we could put a

666
00:33:52,460 --> 00:34:01,130
much more efficient plus on noise

667
00:33:57,109 --> 00:34:04,639
generator in here and probably should at

668
00:34:01,130 --> 00:34:07,820
some point because this is like the

669
00:34:04,640 --> 00:34:10,789
slowest possible way to do that we would

670
00:34:07,819 --> 00:34:16,159
get rid of this we don't need any of

671
00:34:10,789 --> 00:34:19,250
these anymore I'm not sure yeah that's

672
00:34:16,159 --> 00:34:23,750
probably all just fine we don't need any

673
00:34:19,250 --> 00:34:27,349
of this and then when we do our generate

674
00:34:23,750 --> 00:34:30,679
lighting pattern stuff in here we can

675
00:34:27,349 --> 00:34:33,759
just say we don't need any of this we

676
00:34:30,679 --> 00:34:33,760
can just say all right

677
00:34:38,460 --> 00:34:44,619
we need to generate multiple ones of

678
00:34:41,559 --> 00:34:48,519
these obviously and so what we want to

679
00:34:44,619 --> 00:34:50,079
do here is I don't know why yeah it

680
00:34:48,519 --> 00:34:52,599
looks like we cuz we are generator just

681
00:34:50,079 --> 00:34:55,090
works in regular values and then we copy

682
00:34:52,599 --> 00:35:04,659
them out so what we want to do here is

683
00:34:55,090 --> 00:35:06,039
say I don't know that we really need to

684
00:35:04,659 --> 00:35:07,869
do bundling of race in some predictions

685
00:35:06,039 --> 00:35:09,550
but maybe we do that would potentially

686
00:35:07,869 --> 00:35:11,559
speed things up since we cast multiple

687
00:35:09,550 --> 00:35:14,500
rays at a time if we always cast like

688
00:35:11,559 --> 00:35:22,659
you know the Rays that go out one side

689
00:35:14,500 --> 00:35:24,519
of the cube we probably could avoid we

690
00:35:22,659 --> 00:35:25,960
could probably process things quicker

691
00:35:24,519 --> 00:35:28,570
because we wouldn't have rays falling

692
00:35:25,960 --> 00:35:29,860
out of the active set and stuff as soon

693
00:35:28,570 --> 00:35:31,570
because they probably tend to hit

694
00:35:29,860 --> 00:35:32,860
similar things at similar distances if

695
00:35:31,570 --> 00:35:35,769
they go in the same direction most the

696
00:35:32,860 --> 00:35:38,110
time so this to do should probably stay

697
00:35:35,769 --> 00:35:39,610
but either way as we go through this

698
00:35:38,110 --> 00:35:40,960
version index thing what we really need

699
00:35:39,610 --> 00:35:43,380
to do here is just grab our sampling

700
00:35:40,960 --> 00:35:43,380
sphere now

701
00:35:55,570 --> 00:36:01,070
so this is getting whichever one we're

702
00:35:58,099 --> 00:36:07,400
working on right now and then this code

703
00:36:01,070 --> 00:36:09,830
stays basically the same so we come

704
00:36:07,400 --> 00:36:12,950
through here and we basically build you

705
00:36:09,829 --> 00:36:16,610
know this this desk up but what we don't

706
00:36:12,949 --> 00:36:20,629
have yet is we want this cube side wait

707
00:36:16,610 --> 00:36:22,519
here as we go through our direction

708
00:36:20,630 --> 00:36:33,500
index right

709
00:36:22,519 --> 00:36:36,530
we want our well interestingly if that's

710
00:36:33,500 --> 00:36:41,590
gonna be 18 though I'm not sure how we

711
00:36:36,530 --> 00:36:47,680
picked that but this generator here

712
00:36:41,590 --> 00:36:53,090
needs to generate like enough to fill

713
00:36:47,679 --> 00:36:56,389
this sampling set right just looking at

714
00:36:53,090 --> 00:37:07,100
this so four times during Dex whatever

715
00:36:56,389 --> 00:37:10,460
this sample Direction here is right

716
00:37:07,099 --> 00:37:12,289
needs to ensure that this has enough of

717
00:37:10,460 --> 00:37:15,019
it and at the moment it doesn't it

718
00:37:12,289 --> 00:37:19,159
doesn't actually right because if it was

719
00:37:15,019 --> 00:37:21,170
18 18 times four it's going to be more

720
00:37:19,159 --> 00:37:24,649
than 64 which means it would require

721
00:37:21,170 --> 00:37:28,519
more than what we've got in this array

722
00:37:24,650 --> 00:37:33,800
for sampling so that seems like a bit of

723
00:37:28,519 --> 00:37:36,050
an issue and I don't know exactly how we

724
00:37:33,800 --> 00:37:39,200
want to do that you look at how the

725
00:37:36,050 --> 00:37:46,220
point count works out here and I mean I

726
00:37:39,199 --> 00:37:48,679
could just say but you do have a problem

727
00:37:46,219 --> 00:37:51,379
which is like this value we don't know

728
00:37:48,679 --> 00:37:56,000
what this should be like if you want to

729
00:37:51,380 --> 00:37:58,730
insert you know 300 points then their

730
00:37:56,000 --> 00:38:00,500
minimum distance has to be smaller than

731
00:37:58,730 --> 00:38:03,650
if you were only going to insert 64

732
00:38:00,500 --> 00:38:06,880
points right so that value we would have

733
00:38:03,650 --> 00:38:06,880
to adjust as well

734
00:38:31,510 --> 00:38:36,650
and again one thing we could do is we

735
00:38:34,460 --> 00:38:38,809
could just spam that many points out

736
00:38:36,650 --> 00:38:41,660
randomly onto the sphere and then use

737
00:38:38,809 --> 00:38:44,420
some kind of iterative repulsion to like

738
00:38:41,659 --> 00:38:46,969
push them to whatever their natural

739
00:38:44,420 --> 00:38:48,889
distance is and that's totally fine too

740
00:38:46,969 --> 00:38:51,108
and that might be something we want to

741
00:38:48,889 --> 00:38:58,068
do because again we can pre-compute

742
00:38:51,108 --> 00:38:59,659
all of these and furthermore I think

743
00:38:58,068 --> 00:39:02,929
there's some other stuff that we

744
00:38:59,659 --> 00:39:04,788
probably want to do here like probably

745
00:39:02,929 --> 00:39:06,469
what we want to do since we know we're

746
00:39:04,789 --> 00:39:08,809
iterating over these sample directions

747
00:39:06,469 --> 00:39:12,019
is we probably want to produce a blue

748
00:39:08,809 --> 00:39:14,390
noise pattern over the sphere that is

749
00:39:12,019 --> 00:39:17,389
the complete set of blue noise samples

750
00:39:14,389 --> 00:39:20,778
and then each one of our sampling

751
00:39:17,389 --> 00:39:25,338
spheres that we take is a slice through

752
00:39:20,778 --> 00:39:32,239
there that picks like the set of points

753
00:39:25,338 --> 00:39:34,429
that would be in the remaining set and

754
00:39:32,239 --> 00:39:36,139
that are all as far away from each other

755
00:39:34,429 --> 00:39:38,480
as possible you know what I'm saying

756
00:39:36,139 --> 00:39:41,328
so that basically we maximize on any

757
00:39:38,480 --> 00:39:43,940
given frame on any given frame we are

758
00:39:41,329 --> 00:39:47,809
always sending out a set of well

759
00:39:43,940 --> 00:39:50,599
distributed rays but also across frames

760
00:39:47,809 --> 00:39:53,269
we are also distributing so we're not

761
00:39:50,599 --> 00:39:55,190
like casting in the same direction as we

762
00:39:53,269 --> 00:39:57,889
cast it on the previous frame you and

763
00:39:55,190 --> 00:40:00,230
I'm saying and as I'm saying all of this

764
00:39:57,889 --> 00:40:02,629
it's making me just want to just do this

765
00:40:00,230 --> 00:40:06,559
correctly the first time and so I think

766
00:40:02,630 --> 00:40:08,599
I will I think that's exactly what I

767
00:40:06,559 --> 00:40:09,890
want to do and so what I think I'm going

768
00:40:08,599 --> 00:40:14,568
to do is just we're gonna make a little

769
00:40:09,889 --> 00:40:19,848
a little generator I think is what I'd

770
00:40:14,568 --> 00:40:20,389
like so like for example I'm going to go

771
00:40:19,849 --> 00:40:23,119
into hand

772
00:40:20,389 --> 00:40:25,699
made code and you know we have like our

773
00:40:23,119 --> 00:40:29,240
little utilities and whatever so I'm

774
00:40:25,699 --> 00:40:31,129
gonna make HH sphere dot CPP and we're

775
00:40:29,239 --> 00:40:32,959
gonna just do this inside there and

776
00:40:31,130 --> 00:40:36,980
we're just gonna generate these things

777
00:40:32,960 --> 00:40:39,528
as a totally totally separate pass on

778
00:40:36,980 --> 00:40:43,880
the system that you can then just like

779
00:40:39,528 --> 00:40:46,278
load in and use right as as just like an

780
00:40:43,880 --> 00:40:48,798
include file so what I want to do here

781
00:40:46,278 --> 00:40:54,289
is like have a pound include that's

782
00:40:48,798 --> 00:40:58,130
something like handmade sampling spheres

783
00:40:54,289 --> 00:41:00,410
IML and that handmade sampling spheres

784
00:40:58,130 --> 00:41:01,700
that INL would just be like the

785
00:41:00,409 --> 00:41:05,358
directions that we've you know

786
00:41:01,699 --> 00:41:08,239
effectively precomputed right and in

787
00:41:05,358 --> 00:41:12,679
there furthermore what I would like is

788
00:41:08,239 --> 00:41:19,399
actually I kind of want that to be put

789
00:41:12,679 --> 00:41:21,018
like maybe right here even and so that

790
00:41:19,400 --> 00:41:25,608
it's you know it's got the information

791
00:41:21,018 --> 00:41:29,118
there but then that will define the rest

792
00:41:25,608 --> 00:41:31,788
of our stuff so in light sampling sphere

793
00:41:29,119 --> 00:41:33,559
here when we're talking about like how

794
00:41:31,789 --> 00:41:34,339
many things there are and and all that

795
00:41:33,559 --> 00:41:38,180
sort of stuff

796
00:41:34,338 --> 00:41:41,690
maybe that that is actually that

797
00:41:38,179 --> 00:41:45,348
information is actually encoded into

798
00:41:41,690 --> 00:41:48,079
that I am L right so like this structure

799
00:41:45,349 --> 00:41:50,809
here with the sample direction in the

800
00:41:48,079 --> 00:41:54,798
cube side weight like maybe those are

801
00:41:50,809 --> 00:41:56,569
just those are actually inside defined

802
00:41:54,798 --> 00:42:01,250
inside handmade sampling spheres and

803
00:41:56,568 --> 00:42:05,298
that way when we change how we build the

804
00:42:01,250 --> 00:42:08,179
sampling spheres we thought this code

805
00:42:05,298 --> 00:42:11,268
automatically adjusts how many rays it

806
00:42:08,179 --> 00:42:16,068
thinks it needs or has or wants or

807
00:42:11,268 --> 00:42:17,659
whatever else right and similarly in

808
00:42:16,068 --> 00:42:19,969
here where we've got light sampling

809
00:42:17,659 --> 00:42:21,949
sphere you know that maybe is just that

810
00:42:19,969 --> 00:42:25,088
and then maybe there's a pound of fine

811
00:42:21,949 --> 00:42:25,088
that's like you know

812
00:42:28,199 --> 00:42:34,299
you know I'm saying to you and so then

813
00:42:31,360 --> 00:42:37,059
that value whatever this value ends up

814
00:42:34,300 --> 00:42:42,280
being can be generated as well and then

815
00:42:37,059 --> 00:42:45,969
anyone in here who was doing in like an

816
00:42:42,280 --> 00:42:58,000
array count on the sampling spheres here

817
00:42:45,969 --> 00:42:59,739
is not going to do that anymore so can't

818
00:42:58,000 --> 00:43:01,869
see anything cuz my head's in the way so

819
00:42:59,739 --> 00:43:05,919
that for example this right here is

820
00:43:01,869 --> 00:43:09,269
actually just going to be oops no that's

821
00:43:05,920 --> 00:43:09,269
not that's not one I take it back

822
00:43:16,349 --> 00:43:28,569
well there must be somebody because we

823
00:43:18,789 --> 00:43:31,059
do there's that mod of it right huh in a

824
00:43:28,570 --> 00:43:33,010
rate cast it should have done one I mean

825
00:43:31,059 --> 00:43:35,219
not in recast right here it should done

826
00:43:33,010 --> 00:43:35,220
one

827
00:43:42,619 --> 00:43:54,088
so it's this right here

828
00:43:44,750 --> 00:44:07,170
right and so that thing needs to needs

829
00:43:54,088 --> 00:44:09,239
to be this alright so that's fine and

830
00:44:07,170 --> 00:44:11,670
what we want to do now is have this

831
00:44:09,239 --> 00:44:13,409
handmade sampling sphere is that INL we

832
00:44:11,670 --> 00:44:14,548
want this to have this piece of

833
00:44:13,409 --> 00:44:19,199
information in it

834
00:44:14,548 --> 00:44:20,460
right that's what I wanted to do and so

835
00:44:19,199 --> 00:44:22,409
we would have like a handmade sphere

836
00:44:20,460 --> 00:44:24,088
thing it'll generate these out and those

837
00:44:22,409 --> 00:44:27,269
will that'll be our sample table that we

838
00:44:24,088 --> 00:44:29,639
use at run time for the sampling if I go

839
00:44:27,269 --> 00:44:38,038
ahead and cut this out and actually make

840
00:44:29,639 --> 00:44:40,858
one of these then we can just sort of

841
00:44:38,039 --> 00:44:42,630
imagine what this should look like it

842
00:44:40,858 --> 00:44:44,578
should have these two things in it it

843
00:44:42,630 --> 00:44:46,500
should have one of these struts and then

844
00:44:44,579 --> 00:44:50,028
it should have like the set of light

845
00:44:46,500 --> 00:44:50,028
sample spheres so it should have

846
00:44:53,960 --> 00:44:57,380
something like this

847
00:45:02,000 --> 00:45:07,489
and so in here we've got our sample

848
00:45:03,619 --> 00:45:14,599
directions and then we've got our cube

849
00:45:07,489 --> 00:45:21,559
weights the sample directions we need 18

850
00:45:14,599 --> 00:45:24,199
of them they're v3 for X's so they look

851
00:45:21,559 --> 00:45:29,389
like this so that means we've got you

852
00:45:24,199 --> 00:45:49,460
know three things of four things right

853
00:45:29,389 --> 00:45:53,239
so we've got four wide X is 4 wide wise

854
00:45:49,460 --> 00:45:54,230
4 wide Z's for the v3 if that makes

855
00:45:53,239 --> 00:45:59,719
sense

856
00:45:54,230 --> 00:46:08,179
and then we've got 18 of those right so

857
00:45:59,719 --> 00:46:12,109
if we were to break this apart we'd want

858
00:46:08,179 --> 00:46:15,789
18 of these and then inside here we

859
00:46:12,110 --> 00:46:15,789
would have 18 by 6

860
00:46:26,570 --> 00:46:29,570
right

861
00:46:32,909 --> 00:46:50,670
and that would close off I think that's

862
00:46:40,019 --> 00:46:55,230
all we really need and then we have that

863
00:46:50,670 --> 00:46:57,450
many of those sampling spheres so I

864
00:46:55,230 --> 00:46:59,940
think that's what I want and if we

865
00:46:57,449 --> 00:47:04,139
contemplate having this I can now

866
00:46:59,940 --> 00:47:09,960
because we've got one now right I can go

867
00:47:04,139 --> 00:47:12,329
ahead and make this thing so I can go

868
00:47:09,960 --> 00:47:17,789
ahead and fix my compile bugs and get it

869
00:47:12,329 --> 00:47:19,110
actually compiling right and make sure

870
00:47:17,789 --> 00:47:21,980
that that's all going to be fine

871
00:47:19,110 --> 00:47:21,980
which I assume it is

872
00:47:29,300 --> 00:47:39,860
so in the cube side wait for the

873
00:47:32,809 --> 00:47:45,049
sampling sphere so the way that this is

874
00:47:39,860 --> 00:47:46,160
indexed is each ray is shooting out one

875
00:47:45,050 --> 00:47:51,019
of these things

876
00:47:46,159 --> 00:47:53,299
so for each ray and then sub ray we have

877
00:47:51,019 --> 00:48:00,860
to know what the weight is for that

878
00:47:53,300 --> 00:48:07,880
thing right so in here we may we're

879
00:48:00,860 --> 00:48:10,849
probably down yeah so this is not not

880
00:48:07,880 --> 00:48:13,519
quite gonna cut it right so for each of

881
00:48:10,849 --> 00:48:16,009
these things for every sample direction

882
00:48:13,519 --> 00:48:19,730
that we have here so however many this

883
00:48:16,010 --> 00:48:22,130
number is here we've got 18 sample

884
00:48:19,730 --> 00:48:24,650
directions but they're four wide so

885
00:48:22,130 --> 00:48:27,260
really we have four times 18 sample

886
00:48:24,650 --> 00:48:30,170
directions which means that we need four

887
00:48:27,260 --> 00:48:35,780
times 18 cube side wait right so you

888
00:48:30,170 --> 00:48:37,820
need you need that right because for

889
00:48:35,780 --> 00:48:41,630
every one of those that you grab you

890
00:48:37,820 --> 00:48:43,400
need to actually grab four of them so in

891
00:48:41,630 --> 00:48:45,050
here where you do like cube side wait

892
00:48:43,400 --> 00:48:47,660
you would have to say all right the

893
00:48:45,050 --> 00:48:50,780
sampling sphere we want to take the cube

894
00:48:47,659 --> 00:48:59,179
side wait and we want to move it

895
00:48:50,780 --> 00:49:03,380
forwards by four times the four times

896
00:48:59,179 --> 00:49:06,859
the rate index plus the sub ray right to

897
00:49:03,380 --> 00:49:09,320
get to the right one which way we're

898
00:49:06,860 --> 00:49:10,760
talking about here and then we can use

899
00:49:09,320 --> 00:49:18,320
the cube side wait from there which

900
00:49:10,760 --> 00:49:22,820
isn't great right but I think that's

901
00:49:18,320 --> 00:49:24,740
what we actually need and for the cube

902
00:49:22,820 --> 00:49:26,269
side wait this doesn't have to be a plus

903
00:49:24,739 --> 00:49:28,009
anymore I mean it's it's this we're

904
00:49:26,269 --> 00:49:30,489
actually looking it up and getting back

905
00:49:28,010 --> 00:49:33,710
an array of six so that's actually a a

906
00:49:30,489 --> 00:49:36,109
dereference for pattern name we know

907
00:49:33,710 --> 00:49:38,929
needs we're not gonna do that anymore we

908
00:49:36,110 --> 00:49:40,700
just gonna generate these offline and

909
00:49:38,929 --> 00:49:42,319
the generate lighting pattern call

910
00:49:40,699 --> 00:49:44,649
doesn't really need to be there anymore

911
00:49:42,320 --> 00:49:51,430
all we really need to do is say that our

912
00:49:44,650 --> 00:49:55,460
sampling spheres just plugs into this

913
00:49:51,429 --> 00:49:57,710
right because that and that's going to

914
00:49:55,460 --> 00:50:00,679
be like something that we output from

915
00:49:57,710 --> 00:50:03,050
our routine so I think that's what we

916
00:50:00,679 --> 00:50:07,699
actually want to do and now I can go

917
00:50:03,050 --> 00:50:11,390
create that sampling first lookup table

918
00:50:07,699 --> 00:50:12,949
and what I'd like to do now is just have

919
00:50:11,389 --> 00:50:14,449
a way of visualizing it so I can see

920
00:50:12,949 --> 00:50:21,439
whether I think our sampling sirs are

921
00:50:14,449 --> 00:50:23,989
any good so if we look here at our and

922
00:50:21,440 --> 00:50:26,119
our startup what I want is show me the

923
00:50:23,989 --> 00:50:28,219
show me the sampling sphere and we did

924
00:50:26,119 --> 00:50:30,380
some code for this I don't know if it

925
00:50:28,219 --> 00:50:32,029
still works because it's like old we had

926
00:50:30,380 --> 00:50:35,570
sort of had some code that would just

927
00:50:32,030 --> 00:50:36,920
draw the sampling sphere and I don't

928
00:50:35,570 --> 00:50:38,870
actually know if that's still in here

929
00:50:36,920 --> 00:50:41,269
anywhere right it might be it might not

930
00:50:38,869 --> 00:50:43,909
be let me take a look

931
00:50:41,269 --> 00:50:49,400
so if it wasn't here it would it would

932
00:50:43,909 --> 00:50:53,469
be drawing the debug lines right and I

933
00:50:49,400 --> 00:50:59,119
don't know if that's anywhere in here

934
00:50:53,469 --> 00:51:02,869
this is so we we have things that draw

935
00:50:59,119 --> 00:51:08,119
our debug lines and that's all fine but

936
00:51:02,869 --> 00:51:10,190
we don't actually have we don't actually

937
00:51:08,119 --> 00:51:13,159
have anything that outputs the debug

938
00:51:10,190 --> 00:51:14,240
lines from our sample spheres so I guess

939
00:51:13,159 --> 00:51:18,009
what I would say is we just need

940
00:51:14,239 --> 00:51:18,009
something that will do that and

941
00:51:21,280 --> 00:51:28,100
presumably that wouldn't be too hard as

942
00:51:25,090 --> 00:51:32,030
far as whether the debug lines are on or

943
00:51:28,099 --> 00:51:37,059
off we probably just need to hard code

944
00:51:32,030 --> 00:51:37,060
that on for now so you know

945
00:51:44,630 --> 00:51:50,369
yeah I think what I do here say look

946
00:51:47,789 --> 00:51:52,829
let's turn debug lines on just

947
00:51:50,369 --> 00:51:53,909
permanently for right now and then I'm

948
00:51:52,829 --> 00:51:56,579
just gonna have something that pushes

949
00:51:53,909 --> 00:51:59,190
those debug lines on there

950
00:51:56,579 --> 00:52:03,659
in fact this looks like the code we want

951
00:51:59,190 --> 00:52:06,289
right basically wait why is it doing a

952
00:52:03,659 --> 00:52:06,289
push cube

953
00:52:10,760 --> 00:52:14,950
I don't know what that codes still doing

954
00:52:12,710 --> 00:52:14,949
in here

955
00:52:24,170 --> 00:52:31,769
so this this actually looks a push line

956
00:52:28,139 --> 00:52:33,359
segment it looks like we weren't using

957
00:52:31,769 --> 00:52:35,400
debug lines it looks like we were just

958
00:52:33,360 --> 00:52:37,140
using push line segments so it looks

959
00:52:35,400 --> 00:52:38,940
like we do actually have the code that

960
00:52:37,139 --> 00:52:43,219
we that we need here right I mean this

961
00:52:38,940 --> 00:52:43,220
is all that code you can sort of see it

962
00:52:43,730 --> 00:52:50,630
so I think we can just use it I think

963
00:52:48,630 --> 00:52:56,250
this is exactly what we want right here

964
00:52:50,630 --> 00:52:57,900
we don't need this stuff I'm not sure

965
00:52:56,250 --> 00:52:59,849
why we have any of this is still in here

966
00:52:57,900 --> 00:53:04,139
this this is not gonna ever be useful

967
00:52:59,849 --> 00:53:05,639
for anyone yes so you can see both of

968
00:53:04,139 --> 00:53:07,949
these here's one that draws them with

969
00:53:05,639 --> 00:53:09,779
little cubes here's one that draws a

970
00:53:07,949 --> 00:53:16,889
little line segments I don't know which

971
00:53:09,780 --> 00:53:19,490
one we want but probably doesn't much

972
00:53:16,889 --> 00:53:22,619
matter so in here I'm going to do point

973
00:53:19,489 --> 00:53:35,399
index here we're gonna take one of these

974
00:53:22,619 --> 00:53:38,639
lighting spheres we'll just take a look

975
00:53:35,400 --> 00:53:40,099
at the first one at the moment but we

976
00:53:38,639 --> 00:53:42,900
may want to wrap this in a four I loop

977
00:53:40,099 --> 00:53:45,929
pretty soon we're then going to go here

978
00:53:42,900 --> 00:53:49,079
and say alright let's make sure knows

979
00:53:45,929 --> 00:53:52,799
that we're going to draw six of these

980
00:53:49,079 --> 00:53:55,739
quads for however many total raise there

981
00:53:52,800 --> 00:54:00,330
are while we're in here I'm gonna do

982
00:53:55,739 --> 00:54:03,089
like sampling total rays per spear and

983
00:54:00,329 --> 00:54:05,429
I'm just gonna say that we're gonna have

984
00:54:03,090 --> 00:54:06,780
like pound two finds that so that we can

985
00:54:05,429 --> 00:54:10,529
look up all of the information that we

986
00:54:06,780 --> 00:54:15,390
want so in here we're gonna have like a

987
00:54:10,530 --> 00:54:18,390
light sampling Rabin Dalls Perce fear

988
00:54:15,389 --> 00:54:21,170
and total raise for serious this is

989
00:54:18,389 --> 00:54:21,170
going to be 18

990
00:54:23,820 --> 00:54:36,120
right and this is going to be like four

991
00:54:26,909 --> 00:54:38,399
times eighteen four four times this and

992
00:54:36,119 --> 00:54:41,339
that way you can just know what these

993
00:54:38,400 --> 00:54:46,800
are um so if I want the total raise for

994
00:54:41,340 --> 00:54:48,120
a sphere I'm just gonna say that so

995
00:54:46,800 --> 00:54:50,100
we're gonna say look we're gonna output

996
00:54:48,119 --> 00:54:52,109
this many cubes there's six faces of a

997
00:54:50,099 --> 00:54:54,150
cube and we know we want light samung

998
00:54:52,110 --> 00:54:58,050
total rays worth of them we're gonna go

999
00:54:54,150 --> 00:55:00,030
through and draw for each one of the

1000
00:54:58,050 --> 00:55:04,110
sample points which again is the number

1001
00:55:00,030 --> 00:55:06,540
of bundles because we do four per and

1002
00:55:04,110 --> 00:55:08,910
then we're gonna extract just the

1003
00:55:06,539 --> 00:55:11,360
components there we're gonna use our

1004
00:55:08,909 --> 00:55:14,879
debug color table here it looks like

1005
00:55:11,360 --> 00:55:18,630
probably I don't really know if I

1006
00:55:14,880 --> 00:55:20,519
actually want that color table so for

1007
00:55:18,630 --> 00:55:24,690
the moment I think I might actually just

1008
00:55:20,519 --> 00:55:27,509
do this but we can do that later for

1009
00:55:24,690 --> 00:55:30,030
some reason I actually want that and

1010
00:55:27,510 --> 00:55:32,100
then in here we'll do for our normal

1011
00:55:30,030 --> 00:55:34,470
we're gonna get the component out of the

1012
00:55:32,099 --> 00:55:41,610
sampling sphere so here's our sample

1013
00:55:34,469 --> 00:55:43,559
Direction 0 sorry point index and we're

1014
00:55:41,610 --> 00:55:44,789
gonna get the comp index out of it we're

1015
00:55:43,559 --> 00:55:47,940
then going to push the cube on there

1016
00:55:44,789 --> 00:55:50,309
this start point I don't know where that

1017
00:55:47,940 --> 00:55:52,230
came from or what that's supposed to be

1018
00:55:50,309 --> 00:55:54,090
or why but it looks like it was just set

1019
00:55:52,230 --> 00:55:56,240
to be a little bit off the ground which

1020
00:55:54,090 --> 00:55:59,700
is probably fine I'm gonna go ahead and

1021
00:55:56,239 --> 00:56:02,369
compile this and what we should see is

1022
00:55:59,699 --> 00:56:04,889
nothing really because we just got

1023
00:56:02,369 --> 00:56:06,569
garbage in there for now but then I want

1024
00:56:04,889 --> 00:56:10,799
to go generate some points and see if we

1025
00:56:06,570 --> 00:56:13,920
can get them being displayed so get

1026
00:56:10,800 --> 00:56:16,289
current quads takes what it takes to

1027
00:56:13,920 --> 00:56:19,139
render group the quad counts and the

1028
00:56:16,289 --> 00:56:24,300
render of texture in this case it's just

1029
00:56:19,139 --> 00:56:27,559
the white texture because we don't want

1030
00:56:24,300 --> 00:56:27,560
to put any textures on these things

1031
00:56:30,869 --> 00:56:45,309
push cube actually why do we even need

1032
00:56:37,300 --> 00:56:47,710
this I think we do push cube yeah push

1033
00:56:45,309 --> 00:56:49,210
cable just do what we needed to do so I

1034
00:56:47,710 --> 00:56:52,389
don't know think this just this is just

1035
00:56:49,210 --> 00:56:54,820
code from long ago just hasn't been

1036
00:56:52,389 --> 00:57:00,789
updated ever since we can just have the

1037
00:56:54,820 --> 00:57:02,620
push cube do that yeah so that's the

1038
00:57:00,789 --> 00:57:10,269
starting location the radius of the

1039
00:57:02,619 --> 00:57:13,650
thing is just going to be this I don't

1040
00:57:10,269 --> 00:57:22,869
know what else we need there but

1041
00:57:13,650 --> 00:57:24,789
probably nothing and now we should well

1042
00:57:22,869 --> 00:57:27,819
we're not really gonna see much but what

1043
00:57:24,789 --> 00:57:29,679
I can do temporarily to get this working

1044
00:57:27,820 --> 00:57:33,190
you can you can see it it's right there

1045
00:57:29,679 --> 00:57:34,539
right so I think what I'm gonna do is

1046
00:57:33,190 --> 00:57:40,030
just go ahead and write that generator

1047
00:57:34,539 --> 00:57:45,449
load it in here and let it look you know

1048
00:57:40,030 --> 00:57:51,810
but it looked like it looks alright uh

1049
00:57:45,449 --> 00:57:55,779
so if I go ahead and load up h/h sphere

1050
00:57:51,809 --> 00:57:58,230
which is this code I know now what I

1051
00:57:55,780 --> 00:58:01,540
wanted to generate which is this code

1052
00:57:58,230 --> 00:58:03,490
right and so all I need to do here is

1053
00:58:01,539 --> 00:58:07,139
just actually make something that will

1054
00:58:03,489 --> 00:58:13,149
output this this file exactly this way

1055
00:58:07,139 --> 00:58:15,789
so I'm gonna make like a output blah

1056
00:58:13,150 --> 00:58:18,070
function here temporarily and I'm just

1057
00:58:15,789 --> 00:58:20,309
gonna make this thing print this stuff

1058
00:58:18,070 --> 00:58:20,309
out

1059
00:58:23,889 --> 00:58:50,779
something like this and so in here you

1060
00:58:27,860 --> 00:58:52,160
know we know we want this right so we

1061
00:58:50,780 --> 00:59:00,830
pretty much know that this has to be a

1062
00:58:52,159 --> 00:59:09,170
power of two right our raid bundles

1063
00:59:00,829 --> 00:59:11,000
first fear is like whatever we want and

1064
00:59:09,170 --> 00:59:12,500
then this stuff is actually just wrote

1065
00:59:11,000 --> 00:59:20,920
because it's sort of calculated right

1066
00:59:12,500 --> 00:59:20,920
there right so we'll print out all that

1067
00:59:21,820 --> 00:59:28,010
looking at this it turns out this is

1068
00:59:24,590 --> 00:59:30,980
actually fine and we really don't

1069
00:59:28,010 --> 00:59:32,720
actually need it to be in there but

1070
00:59:30,980 --> 00:59:34,579
because we're just defining everything

1071
00:59:32,719 --> 00:59:35,809
in that file I think I'm gonna go ahead

1072
00:59:34,579 --> 00:59:37,219
and keep doing that because it'll just

1073
00:59:35,809 --> 00:59:39,440
make it a little bit easier and it won't

1074
00:59:37,219 --> 00:59:41,599
create like a tangle of includes it'll

1075
00:59:39,440 --> 00:59:44,480
just like have it in the correct place

1076
00:59:41,599 --> 00:59:46,699
and be done with it right but you can

1077
00:59:44,480 --> 00:59:48,320
see that it's actually wrote there's now

1078
00:59:46,699 --> 00:59:51,649
that it's based entirely on those pound

1079
00:59:48,320 --> 00:59:54,230
of fines you don't actually need it the

1080
00:59:51,650 --> 01:00:01,210
generator to actually change the nature

1081
00:59:54,230 --> 01:00:01,210
of the structure at all but you know

1082
01:00:02,829 --> 01:00:09,500
okay so that's like the preamble and now

1083
01:00:07,250 --> 01:00:11,530
we get to the actual part that we care

1084
01:00:09,500 --> 01:00:11,530
about

1085
01:00:14,809 --> 01:00:32,130
which is this table and we need 18 of

1086
01:00:28,108 --> 01:00:33,808
these guys right so we just need this to

1087
01:00:32,130 --> 01:00:44,460
be inside a four I loop that we're gonna

1088
01:00:33,809 --> 01:00:48,900
print out so and then we need to do the

1089
01:00:44,460 --> 01:01:03,659
same thing so this is like what we were

1090
01:00:48,900 --> 01:01:09,809
estimating there so this is four times

1091
01:01:03,659 --> 01:01:15,868
18 of these right so we just need to

1092
01:01:09,809 --> 01:01:26,069
print out lots of those this opening so

1093
01:01:15,869 --> 01:01:28,470
just looking at how this goes I think we

1094
01:01:26,068 --> 01:01:34,409
need an extra bracket set here there

1095
01:01:28,469 --> 01:01:40,230
right so when we see 18 of these we mean

1096
01:01:34,409 --> 01:01:42,568
18 sets of three right so this is

1097
01:01:40,230 --> 01:01:45,210
correct but this bracket should actually

1098
01:01:42,568 --> 01:01:52,250
be holding it should be one more bracket

1099
01:01:45,210 --> 01:01:52,250
level I think right I think it's that

1100
01:01:53,139 --> 01:02:04,150
and then you close that bracket and open

1101
01:01:59,469 --> 01:02:06,338
another one for these guys and then you

1102
01:02:04,150 --> 01:02:21,160
close that bracket and then you close

1103
01:02:06,338 --> 01:02:22,328
these two brackets and just again

1104
01:02:21,159 --> 01:02:25,328
looking at this so you're saying like

1105
01:02:22,329 --> 01:02:28,390
look we're making one array of light

1106
01:02:25,329 --> 01:02:31,568
sampling spheres which is this first

1107
01:02:28,389 --> 01:02:34,690
bracket here for each light sampling

1108
01:02:31,568 --> 01:02:37,119
sphere that we want to do there is a

1109
01:02:34,690 --> 01:02:38,889
bracket so it's this and since we know

1110
01:02:37,119 --> 01:02:41,170
we want multiple of these we're actually

1111
01:02:38,889 --> 01:02:43,088
gonna put this whole thing inside of for

1112
01:02:41,170 --> 01:02:44,099
a loop eventually right that's gonna

1113
01:02:43,088 --> 01:02:47,739
happen like this

1114
01:02:44,099 --> 01:02:50,710
so each one of these is a light sampling

1115
01:02:47,739 --> 01:02:53,768
sphere each one of these right here this

1116
01:02:50,710 --> 01:02:57,778
is the array of sample directions and

1117
01:02:53,768 --> 01:03:02,739
this is the array of cube side weights

1118
01:02:57,778 --> 01:03:05,440
right and so here for example where we

1119
01:03:02,739 --> 01:03:13,209
look at these that's gonna be this way

1120
01:03:05,440 --> 01:03:18,190
but this is actually going to look like

1121
01:03:13,210 --> 01:03:19,690
that that's my argument I'm sticking

1122
01:03:18,190 --> 01:03:23,019
with it for now the compiler will tell

1123
01:03:19,690 --> 01:03:25,028
us if we're wrong I'm saying but I think

1124
01:03:23,018 --> 01:03:27,788
that's roughly what we're looking at and

1125
01:03:25,028 --> 01:03:29,949
so what we need to do here is we need to

1126
01:03:27,789 --> 01:03:32,528
pass some information to this thing just

1127
01:03:29,949 --> 01:03:38,018
some basics right we need to know what

1128
01:03:32,528 --> 01:03:39,608
the light sampling sphere count is we

1129
01:03:38,018 --> 01:03:42,758
need to know what the Ray bundles for

1130
01:03:39,608 --> 01:03:44,650
sphere is right and then when we come

1131
01:03:42,759 --> 01:03:47,528
down here we need to loop over those

1132
01:03:44,650 --> 01:03:50,460
things so the light sampling sphere

1133
01:03:47,528 --> 01:03:50,460
count for example

1134
01:03:55,139 --> 01:04:00,608
we're gonna print out that mini spheres

1135
01:03:58,500 --> 01:04:12,070
for each of these we need to know how

1136
01:04:00,608 --> 01:04:14,588
many ray bundles there are so that's

1137
01:04:12,070 --> 01:04:17,320
printing these out right and then

1138
01:04:14,588 --> 01:04:19,659
finally down here we need to print out 4

1139
01:04:17,320 --> 01:04:22,660
times the Ray bud

1140
01:04:19,659 --> 01:04:28,899
which again is is you know computable by

1141
01:04:22,659 --> 01:04:34,379
us so we might as well just do this and

1142
01:04:28,900 --> 01:04:46,960
that's for our like cubes or our weight

1143
01:04:34,380 --> 01:04:49,920
next and so we print out one of those

1144
01:04:46,960 --> 01:04:53,470
for each one of the bundles for now and

1145
01:04:49,920 --> 01:04:55,119
again I'm not that's the only part that

1146
01:04:53,469 --> 01:04:56,829
I really don't like so far about what

1147
01:04:55,119 --> 01:04:59,710
we're doing I don't like how much

1148
01:04:56,829 --> 01:05:02,858
bookkeeping is of is required in like

1149
01:04:59,710 --> 01:05:09,088
the spheres and I think that that's

1150
01:05:02,858 --> 01:05:12,369
where something like spherical harmonics

1151
01:05:09,088 --> 01:05:14,349
actually works nicely is because you

1152
01:05:12,369 --> 01:05:15,490
just have some coefficients and you

1153
01:05:14,349 --> 01:05:18,369
don't really have to think too hard

1154
01:05:15,489 --> 01:05:20,799
about what those coefficients mean

1155
01:05:18,369 --> 01:05:22,930
during most computations you can just

1156
01:05:20,800 --> 01:05:26,589
kind of store your stuff in there that

1157
01:05:22,929 --> 01:05:29,199
just is kind of a nicer way to think

1158
01:05:26,588 --> 01:05:31,150
about things sometimes so you know I

1159
01:05:29,199 --> 01:05:35,949
don't like having to store all these

1160
01:05:31,150 --> 01:05:37,450
like you know I would rather have

1161
01:05:35,949 --> 01:05:41,588
something that you could just somehow

1162
01:05:37,449 --> 01:05:44,649
use those normal directions just

1163
01:05:41,588 --> 01:05:46,449
directly and that's something that you

1164
01:05:44,650 --> 01:05:48,019
know I'm just red flagging right I'm

1165
01:05:46,449 --> 01:05:49,349
just saying like you know

1166
01:05:48,019 --> 01:06:02,289
[Music]

1167
01:05:49,349 --> 01:06:05,380
watch out this looks wrong right uh so

1168
01:06:02,289 --> 01:06:15,159
anyway moving on what I want to do now

1169
01:06:05,380 --> 01:06:18,400
is I want to I want to output this fear

1170
01:06:15,159 --> 01:06:20,259
I know like this and I just want to have

1171
01:06:18,400 --> 01:06:22,869
someplace said it's going to go and I'm

1172
01:06:20,260 --> 01:06:24,400
gonna pass it this information which i

1173
01:06:22,869 --> 01:06:28,059
think is the only pieces of information

1174
01:06:24,400 --> 01:06:29,530
it actually needs so we I mean who knows

1175
01:06:28,059 --> 01:06:32,409
what we're gonna do how many of these

1176
01:06:29,530 --> 01:06:34,690
were gonna do for right now let's just

1177
01:06:32,409 --> 01:06:38,019
say it's 16 and 18 cuz I think that's

1178
01:06:34,690 --> 01:06:39,909
what we had in our thing before but

1179
01:06:38,019 --> 01:06:42,159
don't matter now because we should be

1180
01:06:39,909 --> 01:06:43,839
able to just like set these with abandon

1181
01:06:42,159 --> 01:06:47,469
and we should be able to make our stuff

1182
01:06:43,840 --> 01:06:49,210
work either way right so when we do our

1183
01:06:47,469 --> 01:06:50,859
outputs to your IML we need to pass

1184
01:06:49,210 --> 01:06:53,019
those two things in and then we also

1185
01:06:50,860 --> 01:06:57,070
need like this file like where's this

1186
01:06:53,019 --> 01:07:03,820
crap going to actually go so that'll be

1187
01:06:57,070 --> 01:07:10,030
like the output of of our thing so let's

1188
01:07:03,820 --> 01:07:11,769
do that and so in here we need some way

1189
01:07:10,030 --> 01:07:14,290
of saying like what the thing is that

1190
01:07:11,769 --> 01:07:15,940
we're gonna try and output in this case

1191
01:07:14,289 --> 01:07:19,690
I'll just read that from aargh so I'll

1192
01:07:15,940 --> 01:07:22,090
say like you know maybe the art count is

1193
01:07:19,690 --> 01:07:24,369
just a thing that tells you maybe

1194
01:07:22,090 --> 01:07:26,559
exactly this information so maybe you

1195
01:07:24,369 --> 01:07:28,420
need like three arguments to it the

1196
01:07:26,559 --> 01:07:33,670
samplings to account the bundles for

1197
01:07:28,420 --> 01:07:36,070
sphere and then just where to write the

1198
01:07:33,670 --> 01:07:40,050
thing so if that was the case we would

1199
01:07:36,070 --> 01:07:45,519
need our our count to be four right and

1200
01:07:40,050 --> 01:07:48,000
otherwise we'd like say hey man I'm not

1201
01:07:45,519 --> 01:07:48,000
gonna work

1202
01:08:00,119 --> 01:08:05,050
something like this

1203
01:08:01,750 --> 01:08:07,869
no I'm saying to you and so when we

1204
01:08:05,050 --> 01:08:09,460
print out that usage information we just

1205
01:08:07,869 --> 01:08:11,108
expect the person is going to be able to

1206
01:08:09,460 --> 01:08:13,150
put it in in exactly that way so that

1207
01:08:11,108 --> 01:08:17,729
then when we come through here when we

1208
01:08:13,150 --> 01:08:17,730
create these things we would say

1209
01:08:21,149 --> 01:08:42,479
something like this I you know I mean

1210
01:08:47,310 --> 01:08:52,779
wow that's some good spelling today and

1211
01:08:50,798 --> 01:08:55,229
I think that's all we really care about

1212
01:08:52,779 --> 01:08:55,230
here

1213
01:09:13,779 --> 01:09:18,259
and then we can just report an error if

1214
01:09:15,979 --> 01:09:20,059
we can't get that for some reason but

1215
01:09:18,259 --> 01:09:24,198
this would basically be the entirety of

1216
01:09:20,060 --> 01:09:25,880
the function and then we just need to

1217
01:09:24,198 --> 01:09:28,369
write the generator the way we want to

1218
01:09:25,880 --> 01:09:32,239
write it and this theory would write it

1219
01:09:28,369 --> 01:09:35,179
out for us so let's start by kind of

1220
01:09:32,238 --> 01:09:46,129
like working our way towards getting

1221
01:09:35,179 --> 01:09:47,600
this compiling if I go look at one of

1222
01:09:46,130 --> 01:09:50,770
these guys if I just bulk import

1223
01:09:47,600 --> 01:09:55,789
everything well we don't need Windows

1224
01:09:50,770 --> 01:09:59,800
but if I bulk import everything else and

1225
01:09:55,789 --> 01:09:59,800
I just go down here and and we look at

1226
01:10:01,929 --> 01:10:07,390
let's say one of these things right so

1227
01:10:12,130 --> 01:10:17,300
in here we want to compile our sampling

1228
01:10:14,658 --> 01:10:22,429
generator we can do our compile

1229
01:10:17,300 --> 01:10:25,219
it's called HH sphere and that's it in

1230
01:10:22,429 --> 01:10:27,170
theory that should now get compiled if

1231
01:10:25,219 --> 01:10:30,289
we look in here can't find the random

1232
01:10:27,170 --> 01:10:33,250
series so you know I guess we would just

1233
01:10:30,289 --> 01:10:33,250
need handmade random

1234
01:10:43,329 --> 01:10:56,899
and it's handmade Cindy right yeah which

1235
01:10:52,220 --> 01:11:01,280
we would have made it anyway looks like

1236
01:10:56,899 --> 01:11:03,920
there isn't one of these um so compiling

1237
01:11:01,279 --> 01:11:06,409
that's if we then look here you know

1238
01:11:03,920 --> 01:11:09,680
this has some residual in there we don't

1239
01:11:06,409 --> 01:11:11,569
care about that just quite yet so I'm

1240
01:11:09,680 --> 01:11:16,550
gonna go ahead and and nerf that out but

1241
01:11:11,569 --> 01:11:18,979
now we should get our oops we should get

1242
01:11:16,550 --> 01:11:24,440
our sphere generator you know doing it's

1243
01:11:18,979 --> 01:11:27,019
its little thing and if we go actually

1244
01:11:24,439 --> 01:11:29,929
invoke it now we should be able to start

1245
01:11:27,020 --> 01:11:33,380
like debugging that and getting our

1246
01:11:29,930 --> 01:11:38,110
sphere include file written to do that

1247
01:11:33,380 --> 01:11:42,800
we could just go to the temp directory

1248
01:11:38,109 --> 01:11:44,899
build a chaser deck see it should tell

1249
01:11:42,800 --> 01:11:47,119
us this right because we didn't give him

1250
01:11:44,899 --> 01:11:50,539
any parameters if we say we want 16

1251
01:11:47,119 --> 01:11:53,390
spheres and 18 ray bundles and we say

1252
01:11:50,539 --> 01:11:55,850
that it goes to handmade sphered INL or

1253
01:11:53,390 --> 01:11:59,180
something like this then it should

1254
01:11:55,850 --> 01:12:02,360
generate that file for us and there it

1255
01:11:59,180 --> 01:12:06,800
is so we now have it outputting

1256
01:12:02,359 --> 01:12:09,219
something who knows if that something is

1257
01:12:06,800 --> 01:12:11,600
correct looks like we forgot to indent

1258
01:12:09,220 --> 01:12:13,699
some of our lines there but that's ok

1259
01:12:11,600 --> 01:12:15,440
and this is basically just a giant data

1260
01:12:13,699 --> 01:12:17,779
table right it doesn't do anything else

1261
01:12:15,439 --> 01:12:19,669
but it looks like it put out everything

1262
01:12:17,779 --> 01:12:24,590
correctly like there's the count and the

1263
01:12:19,670 --> 01:12:27,289
mask and off we go and that should be

1264
01:12:24,590 --> 01:12:28,610
ready to pound include so now what we

1265
01:12:27,289 --> 01:12:31,010
want to do is fill it out with some

1266
01:12:28,609 --> 01:12:33,889
actual data try including it and see

1267
01:12:31,010 --> 01:12:35,090
what happens if I want to I can roll

1268
01:12:33,890 --> 01:12:39,380
that into the build process as well

1269
01:12:35,090 --> 01:12:41,539
which I probably do want to do but one

1270
01:12:39,380 --> 01:12:43,909
step at a time so here's our generate

1271
01:12:41,539 --> 01:12:46,310
lighting pattern call our generate

1272
01:12:43,909 --> 01:12:51,889
lighting pattern call wants to have some

1273
01:12:46,310 --> 01:12:52,380
way you know of of storing the stuff

1274
01:12:51,890 --> 01:12:55,020
that it

1275
01:12:52,380 --> 01:12:56,489
creates right so you can see it creating

1276
01:12:55,020 --> 01:12:59,430
like temp stuff here but we needed to

1277
01:12:56,489 --> 01:13:04,199
actually create real stuff so we needed

1278
01:12:59,430 --> 01:13:11,909
to call generate Plus on samples like

1279
01:13:04,199 --> 01:13:14,340
this and we need it to actually put them

1280
01:13:11,909 --> 01:13:17,970
somewhere after it's done we know that

1281
01:13:14,340 --> 01:13:21,539
this temp storage here for example we

1282
01:13:17,970 --> 01:13:24,780
actually need that to be a certain size

1283
01:13:21,539 --> 01:13:26,880
because once we get told how many light

1284
01:13:24,779 --> 01:13:29,519
sampling spheres there are and how many

1285
01:13:26,880 --> 01:13:31,440
rate bundles for a sphere there are we

1286
01:13:29,520 --> 01:13:33,330
need to start like working with that so

1287
01:13:31,439 --> 01:13:35,909
if we assume that in here when we do

1288
01:13:33,329 --> 01:13:42,359
generate lighting pattern that someone's

1289
01:13:35,909 --> 01:13:43,710
gonna tell us like this right then what

1290
01:13:42,359 --> 01:13:46,259
we need to do is we need to make sure

1291
01:13:43,710 --> 01:13:49,680
that in here we have four times the rate

1292
01:13:46,260 --> 01:13:53,570
bundles Purse fear as storage space that

1293
01:13:49,680 --> 01:13:57,450
we can use to like output this data and

1294
01:13:53,569 --> 01:14:00,029
furthermore we need to like that's like

1295
01:13:57,449 --> 01:14:02,369
just some temp information right we need

1296
01:14:00,029 --> 01:14:07,380
to do that for each of these so as we go

1297
01:14:02,369 --> 01:14:10,199
through here and do you know that as

1298
01:14:07,380 --> 01:14:12,150
well as we go through the light sampling

1299
01:14:10,199 --> 01:14:15,389
store account we need to like we need to

1300
01:14:12,149 --> 01:14:17,579
work with these things together now what

1301
01:14:15,390 --> 01:14:19,440
I'm suggesting and I think this is a

1302
01:14:17,579 --> 01:14:22,170
good idea but maybe it's dumb I just

1303
01:14:19,439 --> 01:14:24,029
think it's a good idea what I'm

1304
01:14:22,170 --> 01:14:25,920
suggesting is I want to change up the

1305
01:14:24,029 --> 01:14:28,519
way that we were creating these so

1306
01:14:25,920 --> 01:14:31,590
before we were creating each sphere

1307
01:14:28,520 --> 01:14:35,240
separately so we we don't consider the

1308
01:14:31,590 --> 01:14:39,060
spheres together we consider them as

1309
01:14:35,239 --> 01:14:41,189
discrete units and we go from there

1310
01:14:39,060 --> 01:14:47,340
but what I'd rather do what I'd much

1311
01:14:41,189 --> 01:14:50,159
rather do is take and cover the sphere

1312
01:14:47,340 --> 01:14:57,270
with densely sampled points dead densely

1313
01:14:50,159 --> 01:14:59,789
sampled blue noise and then extract

1314
01:14:57,270 --> 01:15:02,070
slices from it that are all sort of

1315
01:14:59,789 --> 01:15:04,489
uniformly distributed to some sense to

1316
01:15:02,069 --> 01:15:04,489
some degree

1317
01:15:07,139 --> 01:15:11,889
now we know how to do this in a variety

1318
01:15:10,479 --> 01:15:17,319
of ways the only thing I'm not sure

1319
01:15:11,889 --> 01:15:20,560
about is the slicing right because what

1320
01:15:17,319 --> 01:15:22,420
I want to do is take a blue noise sphere

1321
01:15:20,560 --> 01:15:25,780
and break it in you know

1322
01:15:22,420 --> 01:15:27,550
then pull it apart into a number of

1323
01:15:25,779 --> 01:15:29,649
spheres that combine back to the

1324
01:15:27,550 --> 01:15:32,469
original sphere each one of which is

1325
01:15:29,649 --> 01:15:33,969
roughly blue noise shaped and I think

1326
01:15:32,469 --> 01:15:36,219
the way you could do that is just by

1327
01:15:33,969 --> 01:15:39,039
always picking the furthest point or

1328
01:15:36,219 --> 01:15:49,420
something which is n Square D to a

1329
01:15:39,039 --> 01:15:51,189
certain extent the naive way meaning if

1330
01:15:49,420 --> 01:15:52,599
we literally if we literally didn't

1331
01:15:51,189 --> 01:15:55,210
classify the points at all and just

1332
01:15:52,599 --> 01:16:01,900
every pick of a point look for the

1333
01:15:55,210 --> 01:16:08,230
furthest point away that might be

1334
01:16:01,899 --> 01:16:09,789
prohibitively slow or it might not be I

1335
01:16:08,229 --> 01:16:11,379
mean as you crank these numbers it might

1336
01:16:09,789 --> 01:16:13,750
be but we know they can't be that high

1337
01:16:11,380 --> 01:16:16,690
to begin with because the rate bundles

1338
01:16:13,750 --> 01:16:18,099
for sphere has to be pretty low and how

1339
01:16:16,689 --> 01:16:19,419
many of them do we really need at the

1340
01:16:18,099 --> 01:16:22,239
end of the day so I don't know we'll see

1341
01:16:19,420 --> 01:16:25,149
I'll start with a naive solution we'll

1342
01:16:22,238 --> 01:16:27,698
see how it goes so let's start with

1343
01:16:25,149 --> 01:16:29,979
white noise and go from there

1344
01:16:27,698 --> 01:16:33,368
what I want to do first is allocate some

1345
01:16:29,979 --> 01:16:36,848
space so I'm just gonna say okay we've

1346
01:16:33,368 --> 01:16:41,948
got our vertex storage so these are our

1347
01:16:36,849 --> 01:16:47,739
directions all of them and I want to

1348
01:16:41,948 --> 01:16:51,309
make a total ray count right so total

1349
01:16:47,738 --> 01:16:54,488
Direction count is going to be however

1350
01:16:51,310 --> 01:16:56,469
many spheres we have thumbs

1351
01:16:54,488 --> 01:16:59,408
however many bundles we have times four

1352
01:16:56,469 --> 01:17:05,340
right and then what I'm gonna do is

1353
01:16:59,408 --> 01:17:09,029
allocate space for exactly that many I'm

1354
01:17:05,340 --> 01:17:09,029
then just going to loop

1355
01:17:09,588 --> 01:17:19,010
over each of them and I'm going to just

1356
01:17:15,198 --> 01:17:23,538
set each direction completely randomly

1357
01:17:19,010 --> 01:17:35,719
first right so in order to do that I'm

1358
01:17:23,538 --> 01:17:37,849
gonna do just a standard thing you've

1359
01:17:35,719 --> 01:17:41,708
seen me do multiple times before

1360
01:17:37,849 --> 01:17:46,578
it's just hey create three bilaterals

1361
01:17:41,708 --> 01:17:48,019
that gives me a white noise to a certain

1362
01:17:46,578 --> 01:17:50,448
extent to the extent that our random

1363
01:17:48,019 --> 01:17:53,030
number generator isn't busted it gives

1364
01:17:50,448 --> 01:17:58,668
me white noise inside a cube I can then

1365
01:17:53,029 --> 01:18:08,029
normalize that and take you know I can

1366
01:17:58,668 --> 01:18:09,889
keep it if it actually the only time

1367
01:18:08,029 --> 01:18:12,168
that would fail is if it was zero zero

1368
01:18:09,889 --> 01:18:16,458
zero right otherwise it will always

1369
01:18:12,168 --> 01:18:17,809
produce some direction I and so all I

1370
01:18:16,458 --> 01:18:20,358
really need to do is just guard against

1371
01:18:17,809 --> 01:18:23,088
that one specific case and otherwise my

1372
01:18:20,359 --> 01:18:27,109
white noise is fine so if here I do

1373
01:18:23,088 --> 01:18:29,349
total Direction counts maybe I'll do

1374
01:18:27,109 --> 01:18:29,349
this

1375
01:18:37,060 --> 01:18:46,340
or this will just go through here and

1376
01:18:42,560 --> 01:18:49,510
say okay actually you know what I'm not

1377
01:18:46,340 --> 01:18:51,289
gonna do that I'm just gonna do this

1378
01:18:49,510 --> 01:18:54,170
okay

1379
01:18:51,289 --> 01:18:58,300
we'll go through and say okay if length

1380
01:18:54,170 --> 01:19:00,619
squared er is greater than you know or

1381
01:18:58,300 --> 01:19:02,090
it's greater than anything because it's

1382
01:19:00,619 --> 01:19:03,220
been normalized so if it just didn't

1383
01:19:02,090 --> 01:19:05,750
come out to be zero

1384
01:19:03,220 --> 01:19:07,460
then we increment otherwise we don't

1385
01:19:05,750 --> 01:19:12,470
write so we're just gonna go through

1386
01:19:07,460 --> 01:19:14,569
here see the white noise out first and

1387
01:19:12,470 --> 01:19:17,630
then what we're gonna do is for each

1388
01:19:14,569 --> 01:19:22,399
sphere we're gonna extract points from

1389
01:19:17,630 --> 01:19:25,640
here into the spheres so what I'll

1390
01:19:22,399 --> 01:19:29,899
probably do is have another thing that

1391
01:19:25,640 --> 01:19:33,020
we create here that's something like you

1392
01:19:29,899 --> 01:19:36,079
know was this point used in a sphere yet

1393
01:19:33,020 --> 01:19:38,090
or not and what I'll do there is say

1394
01:19:36,079 --> 01:19:41,710
okay oh and I can use my own because I

1395
01:19:38,090 --> 01:19:41,710
forgot me we've got our types in here

1396
01:19:42,579 --> 01:19:48,739
all right so I'm gonna go ahead and

1397
01:19:45,619 --> 01:19:52,849
allocate another right here which is

1398
01:19:48,739 --> 01:19:55,039
just one of these things right and so

1399
01:19:52,850 --> 01:19:57,770
I'm gonna allocate all of those in each

1400
01:19:55,039 --> 01:20:00,619
one of these as we go I'm also gonna say

1401
01:19:57,770 --> 01:20:04,060
like oh okay oh you know what I forgot

1402
01:20:00,619 --> 01:20:04,059
to do here got to actually record this

1403
01:20:08,250 --> 01:20:17,590
we all try to avoid care here by doing

1404
01:20:11,229 --> 01:20:19,959
this so that we'll initialize a table

1405
01:20:17,590 --> 01:20:21,670
all to false saying we haven't used any

1406
01:20:19,960 --> 01:20:23,189
of these yet and it will initialize all

1407
01:20:21,670 --> 01:20:25,029
of the directions to white noise

1408
01:20:23,189 --> 01:20:28,678
pointing in random white noise

1409
01:20:25,029 --> 01:20:31,750
directions on the sphere right and

1410
01:20:28,679 --> 01:20:34,329
they're not really white noise on the

1411
01:20:31,750 --> 01:20:36,279
sphere because it's a cube that's been

1412
01:20:34,329 --> 01:20:38,319
projected to a sphere so it's really

1413
01:20:36,279 --> 01:20:39,880
white noise in a cube projected to a

1414
01:20:38,319 --> 01:20:41,170
sphere which is not the same thing it

1415
01:20:39,880 --> 01:20:43,000
doesn't matter because we don't want

1416
01:20:41,170 --> 01:20:44,739
white noise anyway so we don't really

1417
01:20:43,000 --> 01:20:45,850
care what our initial seat is because

1418
01:20:44,738 --> 01:20:48,488
we're going to be cleaning that up and

1419
01:20:45,850 --> 01:20:50,219
doing different things with it so you

1420
01:20:48,488 --> 01:20:52,839
know we can kind of ignore that for now

1421
01:20:50,219 --> 01:20:55,060
we then have to go through and create

1422
01:20:52,840 --> 01:20:58,500
our individual spheres so now we have

1423
01:20:55,060 --> 01:21:01,539
our you know sphere index equals zero

1424
01:20:58,500 --> 01:21:07,300
experience less some light sampling

1425
01:21:01,539 --> 01:21:11,019
sphere count and now for each sphere we

1426
01:21:07,300 --> 01:21:15,329
need to pull out enough vertices so we

1427
01:21:11,020 --> 01:21:22,390
need to pull out like we would right

1428
01:21:15,329 --> 01:21:25,119
here so here in our sphere index as we

1429
01:21:22,390 --> 01:21:28,810
go through what we want to be able to do

1430
01:21:25,119 --> 01:21:31,119
is pull out the exact number of

1431
01:21:28,810 --> 01:21:39,910
directions that we expect to have which

1432
01:21:31,119 --> 01:21:41,409
is this right so what we want to do is

1433
01:21:39,909 --> 01:21:43,389
and I'm going to call this bundle index

1434
01:21:41,409 --> 01:21:50,139
because it's not a direction index it's

1435
01:21:43,390 --> 01:21:51,610
a bundle it's four directions at once so

1436
01:21:50,140 --> 01:21:54,600
for each of these are going to say okay

1437
01:21:51,609 --> 01:21:54,599
there's the bundle index

1438
01:22:01,699 --> 01:22:08,880
like so and then what we need to do is

1439
01:22:07,109 --> 01:22:11,429
transform this into something that's

1440
01:22:08,880 --> 01:22:13,920
going to pick these in in an actual

1441
01:22:11,430 --> 01:22:16,770
intelligent way now the first thing I'm

1442
01:22:13,920 --> 01:22:19,140
going to do is to just take them

1443
01:22:16,770 --> 01:22:22,860
randomly and that way we can just get a

1444
01:22:19,140 --> 01:22:24,990
white noise you know n spheres all of

1445
01:22:22,859 --> 01:22:26,819
them white noise again it's cubic white

1446
01:22:24,989 --> 01:22:30,599
noise projected so it's not white noise

1447
01:22:26,819 --> 01:22:32,609
on the sphere but it's similar it's it's

1448
01:22:30,600 --> 01:22:36,000
related to that by a projection function

1449
01:22:32,609 --> 01:22:37,710
I just get that drawing and in the game

1450
01:22:36,000 --> 01:22:40,350
and then we have to come back here and

1451
01:22:37,710 --> 01:22:43,170
start to actually make this do something

1452
01:22:40,350 --> 01:22:45,360
intelligent to reduce good noise that we

1453
01:22:43,170 --> 01:22:48,390
actually want sliced in a way that we

1454
01:22:45,359 --> 01:22:51,719
actually want so going through each of

1455
01:22:48,390 --> 01:22:54,210
these what I need to do is first of all

1456
01:22:51,720 --> 01:22:57,119
have someplace that these are stored and

1457
01:22:54,210 --> 01:22:59,100
so that is something that I guess we

1458
01:22:57,119 --> 01:23:02,579
would expect this to probably pass in

1459
01:22:59,100 --> 01:23:06,539
and so I don't know how we actually want

1460
01:23:02,579 --> 01:23:08,729
to store this that's kind of a good

1461
01:23:06,539 --> 01:23:10,590
question but I guess what I'd probably

1462
01:23:08,729 --> 01:23:17,269
say is we might just want to do a thing

1463
01:23:10,590 --> 01:23:21,710
here where we have something like this

1464
01:23:17,270 --> 01:23:24,840
and in here we're gonna want to store

1465
01:23:21,710 --> 01:23:28,050
the component information now we don't

1466
01:23:24,840 --> 01:23:30,900
need any of this stuff because we're

1467
01:23:28,050 --> 01:23:34,590
just printing these things out so we can

1468
01:23:30,899 --> 01:23:36,170
actually not bother you know no I look

1469
01:23:34,590 --> 01:23:40,880
at it I'm like we don't really need to

1470
01:23:36,170 --> 01:23:43,699
store them in actual v3 for X's we can

1471
01:23:40,880 --> 01:23:46,289
but we don't actually have to for any

1472
01:23:43,699 --> 01:23:49,409
real reason right there's there's no

1473
01:23:46,289 --> 01:23:52,199
actual reason that we need to do that so

1474
01:23:49,409 --> 01:23:53,489
instead what we could do is store them

1475
01:23:52,199 --> 01:23:55,109
as something else I don't know how I

1476
01:23:53,489 --> 01:23:56,639
feel about that either way I suppose

1477
01:23:55,109 --> 01:24:03,599
what we probably want to do is just do

1478
01:23:56,640 --> 01:24:06,329
it like this and say alright you know

1479
01:24:03,600 --> 01:24:09,810
we've got this we know this is what we

1480
01:24:06,329 --> 01:24:10,859
want to actually print out and so what

1481
01:24:09,810 --> 01:24:26,690
we're going to do

1482
01:24:10,859 --> 01:24:26,689
is store like or maybe just that

1483
01:24:33,618 --> 01:24:38,429
something like this and then these here

1484
01:24:36,810 --> 01:24:40,170
right we know how many there are

1485
01:24:38,429 --> 01:24:45,029
supposed to be so we just be doing this

1486
01:24:40,170 --> 01:24:51,510
right and so maybe this is just

1487
01:24:45,029 --> 01:24:53,670
something that gets passed in and that

1488
01:24:51,510 --> 01:24:58,139
way in here when we write the stuff out

1489
01:24:53,670 --> 01:25:01,319
we just write it out right and so here

1490
01:24:58,139 --> 01:25:12,659
in our sphere stores we can just go for

1491
01:25:01,319 --> 01:25:15,420
each sphere and that plucks out each

1492
01:25:12,658 --> 01:25:17,908
individual sphere store that we want we

1493
01:25:15,420 --> 01:25:21,149
then go through here and fill out that

1494
01:25:17,908 --> 01:25:22,948
thing and we can do that by just writing

1495
01:25:21,149 --> 01:25:25,769
to the sample direction and writing to

1496
01:25:22,948 --> 01:25:32,488
the weights so here we would say sphere

1497
01:25:25,770 --> 01:25:35,130
sample Direction bundle index and this

1498
01:25:32,488 --> 01:25:39,868
can stay the same it would not be temp

1499
01:25:35,130 --> 01:25:41,460
though we would actually want to have

1500
01:25:39,868 --> 01:25:43,920
like four things that we actually

1501
01:25:41,460 --> 01:25:48,149
grabbed here right so we would want to

1502
01:25:43,920 --> 01:25:51,600
take these directions here and actually

1503
01:25:48,149 --> 01:25:55,009
get them somehow now for now I won't

1504
01:25:51,600 --> 01:25:58,050
again I won't bother actually doing that

1505
01:25:55,010 --> 01:26:01,139
but we'll want to do that in the future

1506
01:25:58,050 --> 01:26:03,329
right but it would look like this where

1507
01:26:01,139 --> 01:26:05,670
we grab these things out you know four

1508
01:26:03,329 --> 01:26:07,500
at a time and furthermore we would want

1509
01:26:05,670 --> 01:26:09,449
to advance by the sphere amount inside

1510
01:26:07,500 --> 01:26:13,189
the direction so we'd probably for now

1511
01:26:09,448 --> 01:26:13,189
also want to do like this

1512
01:26:19,590 --> 01:26:26,349
right now again that's kind of stupid

1513
01:26:24,069 --> 01:26:27,759
because you know even at first we

1514
01:26:26,349 --> 01:26:28,989
probably want to go ahead and just

1515
01:26:27,760 --> 01:26:31,599
simplify that just so it's a little

1516
01:26:28,988 --> 01:26:41,799
easier on the eyes so we'd probably do

1517
01:26:31,599 --> 01:26:43,659
something more like this we load up a

1518
01:26:41,800 --> 01:26:47,139
particular direction that we're getting

1519
01:26:43,658 --> 01:26:49,598
our v3 out of right and then each one

1520
01:26:47,139 --> 01:27:03,880
through here we just probably do

1521
01:26:49,599 --> 01:27:05,889
something like this right and and again

1522
01:27:03,880 --> 01:27:08,859
we don't really care what's going on

1523
01:27:05,889 --> 01:27:11,699
here it doesn't really matter but it'd

1524
01:27:08,859 --> 01:27:17,738
be something along those lines

1525
01:27:11,698 --> 01:27:19,538
furthermore in here for the weights we

1526
01:27:17,738 --> 01:27:21,399
know that we need six of those as well

1527
01:27:19,538 --> 01:27:23,618
at the moment we don't know what they

1528
01:27:21,399 --> 01:27:25,948
are so we would just do something like

1529
01:27:23,618 --> 01:27:25,948
this

1530
01:27:41,479 --> 01:27:47,549
again all good nothing particularly

1531
01:27:44,909 --> 01:27:53,689
weird happening here so I think that's

1532
01:27:47,550 --> 01:27:56,670
mostly what we want I will probably just

1533
01:27:53,689 --> 01:28:07,129
put nonsense into our random seed for

1534
01:27:56,670 --> 01:28:07,130
now and I think we're good to go

1535
01:28:07,460 --> 01:28:11,789
so I think that roughly does what we

1536
01:28:10,020 --> 01:28:13,320
want and so now we just have to fill out

1537
01:28:11,789 --> 01:28:15,869
the rest of the program to print it and

1538
01:28:13,319 --> 01:28:17,189
I think that'll even leave us a little

1539
01:28:15,869 --> 01:28:19,050
time today to start playing with this

1540
01:28:17,189 --> 01:28:21,869
but then tomorrow we can pick it up and

1541
01:28:19,050 --> 01:28:27,119
actually produce some good sampling

1542
01:28:21,869 --> 01:28:29,760
spheres for us to use that that you know

1543
01:28:27,119 --> 01:28:32,970
fit the nice sampling criteria that we

1544
01:28:29,760 --> 01:28:34,409
would hope for so in here if we've got

1545
01:28:32,970 --> 01:28:36,630
our sphere store I'm gonna go ahead and

1546
01:28:34,409 --> 01:28:39,720
just pass that along so in here I'm just

1547
01:28:36,630 --> 01:28:41,279
gonna say all right when we output this

1548
01:28:39,720 --> 01:28:43,590
stuff we're gonna output our sphere

1549
01:28:41,279 --> 01:28:46,529
store and then in here I'm gonna

1550
01:28:43,590 --> 01:28:49,670
actually allocate this sphere store and

1551
01:28:46,529 --> 01:28:52,380
the storage for it into the system so

1552
01:28:49,670 --> 01:28:54,739
the first thing we need to add is for

1553
01:28:52,380 --> 01:29:01,020
these spheres we need to print them out

1554
01:28:54,739 --> 01:29:02,729
sensibly so we've got the loop over all

1555
01:29:01,020 --> 01:29:04,770
the spheres needs to pluck out which

1556
01:29:02,729 --> 01:29:07,349
sphere we're actually talking about we

1557
01:29:04,770 --> 01:29:09,990
then need to go over each ray bundle for

1558
01:29:07,350 --> 01:29:15,300
the sphere and pluck that out so that's

1559
01:29:09,989 --> 01:29:17,670
a v3 for X and that's just the sphere

1560
01:29:15,300 --> 01:29:19,230
sample direction I don't know what we

1561
01:29:17,670 --> 01:29:22,739
called that up here sample Direction

1562
01:29:19,229 --> 01:29:25,859
mewn rhai bundle index that gives us out

1563
01:29:22,739 --> 01:29:28,019
the one we wanted to print and so then

1564
01:29:25,859 --> 01:29:32,750
we just need to actually print it using

1565
01:29:28,020 --> 01:29:35,750
a bunch of crappy percent s like so

1566
01:29:32,750 --> 01:29:35,750
right

1567
01:29:38,859 --> 01:29:42,549
and I don't know how we want to do this

1568
01:29:40,449 --> 01:29:45,550
we could actually write a for loop it

1569
01:29:42,550 --> 01:29:46,960
might not really be worth it but once we

1570
01:29:45,550 --> 01:29:49,390
get the bundled and we don't really need

1571
01:29:46,960 --> 01:29:51,699
an address or their once we get the

1572
01:29:49,390 --> 01:29:54,760
bundle we can just pull out the ones

1573
01:29:51,699 --> 01:29:57,939
that we want so I think in this case

1574
01:29:54,760 --> 01:30:00,100
where we've got our cindy code here if

1575
01:29:57,939 --> 01:30:02,859
you look at how v3 4x works you can see

1576
01:30:00,100 --> 01:30:04,450
that we've got an e that a picks out

1577
01:30:02,859 --> 01:30:06,489
which one of the three you're looking

1578
01:30:04,449 --> 01:30:08,319
for so we would basically say okay we're

1579
01:30:06,489 --> 01:30:11,289
printing the first one now then inside

1580
01:30:08,319 --> 01:30:14,319
there you've got an e which says which

1581
01:30:11,289 --> 01:30:17,609
member right and so that we would look

1582
01:30:14,319 --> 01:30:22,090
like that again it just it's just this

1583
01:30:17,609 --> 01:30:23,500
the whole way right so I don't think I'm

1584
01:30:22,090 --> 01:30:25,270
going to bother with a for loop it's

1585
01:30:23,500 --> 01:30:31,500
just more typing that's worth because C

1586
01:30:25,270 --> 01:30:31,500
is too frigging verbose all the time but

1587
01:30:31,920 --> 01:30:39,159
still not particularly difficult and

1588
01:30:35,850 --> 01:30:41,410
that should be fine that prints out the

1589
01:30:39,159 --> 01:30:44,739
REA directions as v3 for X's that can

1590
01:30:41,409 --> 01:30:47,920
then get loaded back in hopefully as M

1591
01:30:44,739 --> 01:30:53,170
128 later on in the process in here

1592
01:30:47,920 --> 01:30:55,600
where we have our wait bundle index that

1593
01:30:53,170 --> 01:30:57,489
needs to get printed out in exactly the

1594
01:30:55,600 --> 01:31:01,960
same way so we've got our cube store

1595
01:30:57,489 --> 01:31:04,000
cube that's going to be sphere cube

1596
01:31:01,960 --> 01:31:08,350
weights or just weights I think we

1597
01:31:04,000 --> 01:31:11,470
called it weight bundle index and then

1598
01:31:08,350 --> 01:31:13,480
in here again it's just looking up the

1599
01:31:11,470 --> 01:31:17,199
elements of that cube that we print out

1600
01:31:13,479 --> 01:31:19,259
one at a time again don't really need

1601
01:31:17,199 --> 01:31:19,260
that

1602
01:31:21,029 --> 01:31:31,199
and so in here we've just got our 5 4 3

1603
01:31:25,979 --> 01:31:33,539
2 1 weights and then I think that prints

1604
01:31:31,199 --> 01:31:35,909
everything out that it should right and

1605
01:31:33,539 --> 01:31:37,649
so now all I have to do is allocate some

1606
01:31:35,909 --> 01:31:39,659
space for that and actually call the

1607
01:31:37,649 --> 01:31:42,149
functions we don't currently call the

1608
01:31:39,659 --> 01:31:44,250
generator we're gonna have to so here's

1609
01:31:42,149 --> 01:31:45,029
the JIT here is that right let's go

1610
01:31:44,250 --> 01:31:48,779
ahead and call it

1611
01:31:45,029 --> 01:31:51,170
we know the light sampling counts like

1612
01:31:48,779 --> 01:31:53,099
so and we'll have our spheres there

1613
01:31:51,170 --> 01:31:56,460
first thing I need to do is allocate

1614
01:31:53,100 --> 01:31:59,700
space to store the spheres in order to

1615
01:31:56,460 --> 01:32:03,079
do that I have to allocate space for the

1616
01:31:59,699 --> 01:32:03,079
number of spheres we expect to have

1617
01:32:04,579 --> 01:32:11,550
right oops and then I need to allocate

1618
01:32:08,369 --> 01:32:13,859
space why is it's having some trouble

1619
01:32:11,550 --> 01:32:15,510
with that and then I need to loop over

1620
01:32:13,859 --> 01:32:17,130
each sphere and allocate space for the

1621
01:32:15,510 --> 01:32:31,890
things that the sphere needs to store

1622
01:32:17,130 --> 01:32:36,140
right so for each sphere we just need

1623
01:32:31,890 --> 01:32:36,140
two arrays we need a sampling direction

1624
01:32:36,470 --> 01:32:48,119
and we need our weights again each of

1625
01:32:39,779 --> 01:32:49,920
these is a pretty simple malloc in this

1626
01:32:48,119 --> 01:32:52,409
case we're looking at Ray bundles purse

1627
01:32:49,920 --> 01:32:56,880
fear times the size of each individual

1628
01:32:52,409 --> 01:33:01,789
bundle and in the weights case we're

1629
01:32:56,880 --> 01:33:01,789
looking at the number of bundles period

1630
01:33:08,319 --> 01:33:23,658
sorry the number of bundles times the

1631
01:33:11,719 --> 01:33:25,250
number of rays per bundle right then

1632
01:33:23,658 --> 01:33:27,618
when we do our output sphere I just need

1633
01:33:25,250 --> 01:33:30,649
to pass this along and now I think this

1634
01:33:27,618 --> 01:33:33,170
is ready to run I do think so in our

1635
01:33:30,649 --> 01:33:36,078
cube for each bundle you can see this is

1636
01:33:33,170 --> 01:33:39,408
actually not right then because the

1637
01:33:36,078 --> 01:33:42,859
weights we need to write out more than

1638
01:33:39,408 --> 01:33:45,698
that number of weights right so for here

1639
01:33:42,859 --> 01:33:48,348
we need to for each one of the

1640
01:33:45,698 --> 01:33:53,058
directions that we actually picked up in

1641
01:33:48,349 --> 01:33:54,199
there like I don't know whichever you

1642
01:33:53,059 --> 01:34:05,710
want to call it I don't want to call a

1643
01:33:54,198 --> 01:34:08,629
slice index but like something like that

1644
01:34:05,710 --> 01:34:18,069
so for each bundle component we actually

1645
01:34:08,630 --> 01:34:18,069
need to compute this

1646
01:34:24,679 --> 01:34:30,750
because remember they're just there's

1647
01:34:27,988 --> 01:34:37,729
one of these for every ray and there are

1648
01:34:30,750 --> 01:34:42,750
four rays per sample direction bundle I

1649
01:34:37,729 --> 01:34:46,198
think that's it now so running this

1650
01:34:42,750 --> 01:34:48,719
we're gonna have to debug now and so

1651
01:34:46,198 --> 01:34:50,479
what I would like to do is maybe SiC

1652
01:34:48,719 --> 01:34:54,500
remedy on it so I could step through it

1653
01:34:50,479 --> 01:34:57,408
and see what's up in order to do that

1654
01:34:54,500 --> 01:35:03,630
I'm just gonna go ahead and call remedy

1655
01:34:57,408 --> 01:35:05,908
on it like so and in here I noticed by

1656
01:35:03,630 --> 01:35:08,130
the way I don't know I don't think this

1657
01:35:05,908 --> 01:35:13,769
is our fault it might be let me just

1658
01:35:08,130 --> 01:35:15,900
double check first before I ask ya um I

1659
01:35:13,770 --> 01:35:18,090
wanted to mention that it looks like

1660
01:35:15,899 --> 01:35:20,549
remedy no longer can take stuff from the

1661
01:35:18,090 --> 01:35:22,380
command line for some reason and I don't

1662
01:35:20,550 --> 01:35:26,070
know if maybe that's cuz I don't know

1663
01:35:22,380 --> 01:35:28,469
the arguments but George are you are you

1664
01:35:26,069 --> 01:35:31,250
with us today I don't know if George's

1665
01:35:28,469 --> 01:35:35,550
here I was wondering if there was a way

1666
01:35:31,250 --> 01:35:42,510
to get remedy to take that I and it

1667
01:35:35,550 --> 01:35:44,520
might be that that there's special flags

1668
01:35:42,510 --> 01:35:46,860
now cuz remedy has a bunch of command

1669
01:35:44,520 --> 01:35:48,780
line options so it probably is no longer

1670
01:35:46,859 --> 01:35:53,219
sufficient to just pass that but I'm

1671
01:35:48,779 --> 01:35:57,179
curious what you do pass maybe it's in

1672
01:35:53,219 --> 01:36:01,819
the docs I don't know but just something

1673
01:35:57,179 --> 01:36:01,819
to think about or to tell me about

1674
01:36:12,100 --> 01:36:19,450
maybe put it in quotes or maybe it just

1675
01:36:14,619 --> 01:36:22,979
can't do that like have the arguments

1676
01:36:19,449 --> 01:36:22,979
get passed you know I'm saying to you

1677
01:36:34,260 --> 01:36:42,969
so it looks like it just can't handle

1678
01:36:36,729 --> 01:36:46,869
arguments at the moment right so yeah it

1679
01:36:42,969 --> 01:36:49,210
would be cool because I'm 99% positive

1680
01:36:46,869 --> 01:36:51,130
that that used to work so I think it

1681
01:36:49,210 --> 01:36:53,439
might just have been a regression went

1682
01:36:51,130 --> 01:36:55,719
cuz remedy gained a bunch of powerful

1683
01:36:53,439 --> 01:36:57,099
command line features actually you

1684
01:36:55,719 --> 01:36:58,449
didn't see you can like drive it you can

1685
01:36:57,100 --> 01:36:59,739
add and remove breakpoints and stuff

1686
01:36:58,449 --> 01:37:01,210
from the command line for like a running

1687
01:36:59,738 --> 01:37:04,449
instance so all this stuff is like

1688
01:37:01,210 --> 01:37:06,730
pretty cool and probably what happened

1689
01:37:04,449 --> 01:37:08,109
is when that went in the command line

1690
01:37:06,729 --> 01:37:10,029
parsing had to get a little bit more

1691
01:37:08,109 --> 01:37:12,789
fancy and so it probably doesn't work

1692
01:37:10,029 --> 01:37:15,009
with the old thing anymore just for

1693
01:37:12,789 --> 01:37:17,439
reference you you might you might need a

1694
01:37:15,010 --> 01:37:20,949
command because it might not be obvious

1695
01:37:17,439 --> 01:37:22,719
like how to like like if you just send

1696
01:37:20,949 --> 01:37:24,639
that crap down it might not be obvious

1697
01:37:22,719 --> 01:37:25,930
to remedy what's going on I mean maybe

1698
01:37:24,640 --> 01:37:27,340
you could just say if I don't see

1699
01:37:25,930 --> 01:37:28,900
command is the first thing then the rest

1700
01:37:27,340 --> 01:37:30,699
of the things are arguments I don't know

1701
01:37:28,899 --> 01:37:32,679
but something to think about

1702
01:37:30,699 --> 01:37:36,130
cuz it would be fine as well if you just

1703
01:37:32,680 --> 01:37:38,770
did you know that or something you write

1704
01:37:36,130 --> 01:37:40,150
or you know it doesn't really need to do

1705
01:37:38,770 --> 01:37:41,500
anything specific but I thought I'd

1706
01:37:40,149 --> 01:37:44,619
mention it because I did notice that the

1707
01:37:41,500 --> 01:37:46,180
other day it's something I rarely do but

1708
01:37:44,619 --> 01:37:51,099
it does seem like it it gets it has

1709
01:37:46,180 --> 01:37:52,180
trouble sometimes with that alright but

1710
01:37:51,100 --> 01:37:54,460
I don't care about any of that right now

1711
01:37:52,180 --> 01:37:57,340
because again not really a problem

1712
01:37:54,460 --> 01:37:59,409
it's it takes like 10 seconds to just

1713
01:37:57,340 --> 01:38:01,060
put it in here but it was just a feature

1714
01:37:59,409 --> 01:38:04,750
that remedy did have so I figured we

1715
01:38:01,060 --> 01:38:08,920
might as well report it to get reacted

1716
01:38:04,750 --> 01:38:11,590
alright so here in the settings I'm just

1717
01:38:08,920 --> 01:38:13,719
asking you to do in the temp directory

1718
01:38:11,590 --> 01:38:16,000
I'm asking it to output that handmaid

1719
01:38:13,719 --> 01:38:18,489
certify and now I'm gonna start stepping

1720
01:38:16,000 --> 01:38:19,930
in and you can see it running here just

1721
01:38:18,488 --> 01:38:22,449
gonna make sure that it actually gets

1722
01:38:19,930 --> 01:38:23,950
the information that we think it does

1723
01:38:22,449 --> 01:38:27,729
but we kind of already know that that

1724
01:38:23,949 --> 01:38:33,250
was working it's light samplings ear

1725
01:38:27,729 --> 01:38:35,979
count and array bundles Paris here so

1726
01:38:33,250 --> 01:38:38,738
these are the numbers we expected to get

1727
01:38:35,979 --> 01:38:39,529
we're going to allocate our information

1728
01:38:38,738 --> 01:38:41,750
here

1729
01:38:39,529 --> 01:38:45,170
then start to generate the pattern so

1730
01:38:41,750 --> 01:38:46,819
now we should have fears that kind of go

1731
01:38:45,170 --> 01:38:49,300
out to the correct number so like for

1732
01:38:46,819 --> 01:38:52,219
example spear 15 should actually have

1733
01:38:49,300 --> 01:38:57,250
you know space reserved for stuff and it

1734
01:38:52,219 --> 01:38:57,250
appears to but sphere 16 should not

1735
01:38:57,849 --> 01:39:03,889
although it might point to stuff anyway

1736
01:39:01,158 --> 01:39:04,488
if it's just in that page so it's hard

1737
01:39:03,889 --> 01:39:06,650
to tell

1738
01:39:04,488 --> 01:39:09,529
yeah there we go so the sphere 16

1739
01:39:06,649 --> 01:39:10,848
doesn't that's nice so then we could

1740
01:39:09,529 --> 01:39:13,059
kind of come out here and say alright

1741
01:39:10,849 --> 01:39:15,170
let's look at generate lighting pattern

1742
01:39:13,059 --> 01:39:17,599
that's going to Matlock some temp

1743
01:39:15,170 --> 01:39:23,719
storage for the directions it's going to

1744
01:39:17,599 --> 01:39:33,288
populate that let's take a look at what

1745
01:39:23,719 --> 01:39:35,420
wrote oops again totally fine if I look

1746
01:39:33,288 --> 01:39:38,420
at this that's like a sort of an array

1747
01:39:35,420 --> 01:39:39,949
of stuff what I should see now is when

1748
01:39:38,420 --> 01:39:43,069
we come around will populate the next

1749
01:39:39,948 --> 01:39:46,308
one and we do populate the next one and

1750
01:39:43,069 --> 01:39:51,038
we do so you know that's all fine

1751
01:39:46,309 --> 01:39:56,000
the total Direction counts in this case

1752
01:39:51,038 --> 01:39:58,059
should be 16 times 18 times 4 and that

1753
01:39:56,000 --> 01:40:03,349
looks about right

1754
01:39:58,059 --> 01:40:06,230
yep and so that should just populate our

1755
01:40:03,349 --> 01:40:08,360
entire array and then when we go to

1756
01:40:06,229 --> 01:40:09,799
print it out I didn't actually step

1757
01:40:08,359 --> 01:40:10,848
through that code but in theory it

1758
01:40:09,800 --> 01:40:13,340
should just print out all of those

1759
01:40:10,849 --> 01:40:17,690
values let's take a look and see if it

1760
01:40:13,340 --> 01:40:21,860
did if I go in and here to for coder I'm

1761
01:40:17,689 --> 01:40:24,229
gonna close this out cuz I don't eat it

1762
01:40:21,859 --> 01:40:30,649
and I'm gonna load out of the temp

1763
01:40:24,229 --> 01:40:33,019
directory that IML file they probably

1764
01:40:30,649 --> 01:40:39,288
should have s after them so the compiler

1765
01:40:33,020 --> 01:40:40,219
doesn't complain I but you know that

1766
01:40:39,288 --> 01:40:44,078
looks about right

1767
01:40:40,219 --> 01:40:47,659
you know I mean who who's to say but

1768
01:40:44,078 --> 01:40:50,609
sure right

1769
01:40:47,659 --> 01:40:55,139
so I think we're roughly generating the

1770
01:40:50,609 --> 01:40:58,049
correct stuff now and I just need to put

1771
01:40:55,140 --> 01:40:59,490
some s in the print out routine but

1772
01:40:58,050 --> 01:41:00,000
other than that I think we're ready to

1773
01:40:59,489 --> 01:41:02,099
go

1774
01:41:00,000 --> 01:41:05,250
and we're just about at the end of the

1775
01:41:02,100 --> 01:41:09,480
session anyway so that's a good time to

1776
01:41:05,250 --> 01:41:11,159
wrap that up but let's see if we can't

1777
01:41:09,479 --> 01:41:13,169
just load these into our render a test

1778
01:41:11,159 --> 01:41:16,829
draw them and verify that we've actually

1779
01:41:13,170 --> 01:41:23,329
generated some spheres for sampling so

1780
01:41:16,829 --> 01:41:23,329
in h h sphere if we look at our

1781
01:41:27,170 --> 01:41:36,270
printouts really what we need is just

1782
01:41:30,539 --> 01:41:37,829
these things have to be percent FF so

1783
01:41:36,270 --> 01:41:41,220
really all I'm doing is like replacing

1784
01:41:37,829 --> 01:41:43,039
percent F with % FF just to stick the F

1785
01:41:41,220 --> 01:41:48,180
at the end of it

1786
01:41:43,039 --> 01:41:55,079
right just pretty basic that's all I

1787
01:41:48,180 --> 01:41:58,050
really need to do there and if we if we

1788
01:41:55,079 --> 01:42:00,029
were to add this in now to the hand mate

1789
01:41:58,050 --> 01:42:00,810
here a build process I should be able to

1790
01:42:00,029 --> 01:42:03,960
use that

1791
01:42:00,810 --> 01:42:07,470
IML file right I do want to save this to

1792
01:42:03,960 --> 01:42:10,680
our debug directory that's HH sphere dot

1793
01:42:07,470 --> 01:42:13,110
our GD r d gb that way at when we need

1794
01:42:10,680 --> 01:42:16,650
to debug it we can switch quickly using

1795
01:42:13,109 --> 01:42:18,239
this menu which I like so if we run Hana

1796
01:42:16,649 --> 01:42:19,259
me here now we shouldn't see anything

1797
01:42:18,239 --> 01:42:20,969
different because we're using the same

1798
01:42:19,260 --> 01:42:23,280
INL files we're using before which

1799
01:42:20,970 --> 01:42:25,020
doesn't have anything in it but what I'd

1800
01:42:23,279 --> 01:42:27,569
like to do now is replace that INL file

1801
01:42:25,020 --> 01:42:30,420
with one that we've generated in order

1802
01:42:27,569 --> 01:42:31,739
to do that I'm just gonna for now use

1803
01:42:30,420 --> 01:42:34,020
the command line because I want to play

1804
01:42:31,739 --> 01:42:36,300
around a little bit more so what I'm

1805
01:42:34,020 --> 01:42:38,160
gonna do here is I'm going to run this

1806
01:42:36,300 --> 01:42:43,230
command and I'm just gonna have it

1807
01:42:38,159 --> 01:42:46,769
overwrite our file so basically the W

1808
01:42:43,229 --> 01:42:49,769
hand-made code handmade sampling spheres

1809
01:42:46,770 --> 01:42:55,260
that I know that will overwrite it and

1810
01:42:49,770 --> 01:42:57,060
so now if I actually build we should be

1811
01:42:55,260 --> 01:42:59,900
including it and so you can see we've

1812
01:42:57,060 --> 01:43:18,010
got a compile error there oops this

1813
01:42:59,899 --> 01:43:18,009
is old news there we go

1814
01:43:18,250 --> 01:43:27,050
it's telling me I have too many

1815
01:43:20,770 --> 01:43:36,460
initializers but who is that actually

1816
01:43:27,050 --> 01:43:45,230
referring to in 8 comma 11 too many

1817
01:43:36,460 --> 01:43:47,829
initializers this is a struct what is it

1818
01:43:45,229 --> 01:43:47,829
talking about

1819
01:43:55,889 --> 01:44:07,710
I don't follow is it just reporting that

1820
01:44:04,289 --> 01:44:09,029
error weirdly or something because why

1821
01:44:07,710 --> 01:44:11,010
would it be complaining about too many

1822
01:44:09,029 --> 01:44:12,960
initializers in something that isn't an

1823
01:44:11,010 --> 01:44:15,139
initialization if it was complaining

1824
01:44:12,960 --> 01:44:17,639
down here that's what we would expect

1825
01:44:15,139 --> 01:44:19,230
but does it look like it is I'm gonna

1826
01:44:17,639 --> 01:44:26,639
build from the command line just to

1827
01:44:19,229 --> 01:44:29,908
double check cuz it looks like it's only

1828
01:44:26,639 --> 01:44:32,159
complaining about it on that line and I

1829
01:44:29,908 --> 01:44:35,819
have no idea what that is complaining

1830
01:44:32,158 --> 01:44:39,448
about light sampling rate bundles first

1831
01:44:35,819 --> 01:44:41,009
fear I mean that should just be an 18

1832
01:44:39,448 --> 01:44:52,500
right in other words we're just talking

1833
01:44:41,010 --> 01:44:55,930
about that I don't get it

1834
01:44:52,500 --> 01:44:55,930
[Music]

1835
01:44:59,359 --> 01:45:09,589
oh okay so I guess my first question is

1836
01:45:07,579 --> 01:45:13,760
is this just the compiler outputting a

1837
01:45:09,590 --> 01:45:17,150
really busted error so for example if I

1838
01:45:13,760 --> 01:45:21,230
was to get rid of the actual

1839
01:45:17,149 --> 01:45:28,189
initializers in the file so does the

1840
01:45:21,229 --> 01:45:29,779
error go away it does so it seems like

1841
01:45:28,189 --> 01:45:32,779
it's trying to tell me that there are

1842
01:45:29,779 --> 01:45:35,389
too many initializers in here and it

1843
01:45:32,779 --> 01:45:40,250
just got really confused about how to do

1844
01:45:35,390 --> 01:45:42,140
that I guess I'm not sure so let's go

1845
01:45:40,250 --> 01:45:43,909
ahead and put these back in and see if

1846
01:45:42,140 --> 01:45:47,630
we can figure out exactly where it's

1847
01:45:43,909 --> 01:45:49,369
complaining so we know that we need n of

1848
01:45:47,630 --> 01:45:51,440
these sampling directions so for light

1849
01:45:49,369 --> 01:45:54,920
sampling spheres let's look at what

1850
01:45:51,439 --> 01:45:57,169
we've got this outer bracket here is the

1851
01:45:54,920 --> 01:45:59,239
sampling sphere contain like contains a

1852
01:45:57,170 --> 01:46:02,329
sampling spirit this contains a sample

1853
01:45:59,239 --> 01:46:09,139
directions so for each sample direction

1854
01:46:02,329 --> 01:46:21,710
we would expect to see 18 V 3 4 X's 1 2

1855
01:46:09,140 --> 01:46:24,170
3 4 5 so we do see exactly 18 let's see

1856
01:46:21,710 --> 01:46:25,760
if these look reasonable because we

1857
01:46:24,170 --> 01:46:33,319
don't know maybe these themselves are

1858
01:46:25,760 --> 01:46:36,320
busted so in this case we've got 1 2 3

1859
01:46:33,319 --> 01:46:38,539
each one has four things in it so that

1860
01:46:36,319 --> 01:46:41,569
all seems good I'm wondering if maybe

1861
01:46:38,539 --> 01:46:44,989
the problem is that because it's a union

1862
01:46:41,569 --> 01:46:46,609
it's having trouble with that and I

1863
01:46:44,989 --> 01:46:50,899
could see that because it's let me just

1864
01:46:46,609 --> 01:46:55,130
jump to 3 3 B 3 4 X here I could see

1865
01:46:50,899 --> 01:46:59,539
that because it probably doesn't know

1866
01:46:55,130 --> 01:47:05,869
how to initialize that properly for the

1867
01:46:59,539 --> 01:47:07,039
v3 for X e values there like maybe it's

1868
01:47:05,869 --> 01:47:10,119
just confused

1869
01:47:07,039 --> 01:47:10,119
what it should do

1870
01:47:17,310 --> 01:47:24,729
and I don't know

1871
01:47:21,529 --> 01:47:24,728
[Music]

1872
01:47:36,729 --> 01:47:42,699
this is always the problem with C++

1873
01:47:39,300 --> 01:47:44,349
nonsense you just want to say I'm trying

1874
01:47:42,698 --> 01:47:47,198
to input this data and I want you to

1875
01:47:44,349 --> 01:47:50,708
build it into this type please just do

1876
01:47:47,198 --> 01:47:51,189
it but that's always easier said than

1877
01:47:50,708 --> 01:47:53,708
done

1878
01:47:51,189 --> 01:47:57,819
I think that's probably what we're

1879
01:47:53,708 --> 01:48:01,118
seeing here I couldn't say for sure but

1880
01:47:57,819 --> 01:48:06,359
that's my guess and in order to test

1881
01:48:01,118 --> 01:48:06,359
that guess I guess I'll just do this

1882
01:48:21,238 --> 01:48:27,248
because that's essentially what we have

1883
01:48:23,708 --> 01:48:29,349
here and so if I took out the Unionists

1884
01:48:27,248 --> 01:48:31,630
of this and just changed it to that I'm

1885
01:48:29,349 --> 01:48:36,458
wondering if now we still get the same

1886
01:48:31,630 --> 01:48:37,239
error or not and let's look so here

1887
01:48:36,458 --> 01:48:38,979
we're still getting too many

1888
01:48:37,238 --> 01:48:41,049
initializers that's actually reassuring

1889
01:48:38,979 --> 01:48:42,519
because if that's actually the case that

1890
01:48:41,050 --> 01:48:44,349
means it's not the Union it's just

1891
01:48:42,519 --> 01:48:46,809
something else so let's take a look at

1892
01:48:44,349 --> 01:48:50,619
what actually is happening there for the

1893
01:48:46,809 --> 01:48:53,590
light sampling sphere we have four

1894
01:48:50,618 --> 01:48:58,658
things that's our guess right we have

1895
01:48:53,590 --> 01:49:00,729
three things here if I put it calm in

1896
01:48:58,658 --> 01:49:03,908
there even though you don't really need

1897
01:49:00,729 --> 01:49:07,260
one I have three things inside this so

1898
01:49:03,908 --> 01:49:13,208
that's our guests our outer guess right

1899
01:49:07,260 --> 01:49:14,289
and then I need 18 of those which is

1900
01:49:13,208 --> 01:49:17,559
what this looks like

1901
01:49:14,288 --> 01:49:19,478
again not really seeing where the

1902
01:49:17,559 --> 01:49:21,909
problem is it would be really helpful if

1903
01:49:19,479 --> 01:49:24,760
the compiler actually output a useful

1904
01:49:21,908 --> 01:49:28,629
error for us but it's really adamant

1905
01:49:24,760 --> 01:49:32,920
about not doing that and I don't know

1906
01:49:28,630 --> 01:49:35,679
why so I'm gonna keep going down this

1907
01:49:32,920 --> 01:49:38,458
road I'm gonna go ahead and clip out

1908
01:49:35,679 --> 01:49:38,458
everything else

1909
01:49:47,039 --> 01:49:52,300
so now we're just working with this and

1910
01:49:49,600 --> 01:49:53,890
I'm going to eliminate all of these so

1911
01:49:52,300 --> 01:50:03,220
we're just gonna see if we can give it

1912
01:49:53,890 --> 01:50:06,880
to do one thing right so again here's

1913
01:50:03,220 --> 01:50:09,220
our light sampling sphere because this

1914
01:50:06,880 --> 01:50:11,380
is an array of light sampling spheres so

1915
01:50:09,220 --> 01:50:19,150
this is the light sampling sphere this

1916
01:50:11,380 --> 01:50:22,539
is our guess right no sorry this is our

1917
01:50:19,149 --> 01:50:26,139
sample direction we need 18 of them or

1918
01:50:22,539 --> 01:50:36,899
no more than 18 of them this is our

1919
01:50:26,140 --> 01:50:36,900
guess yeah and this is our guest to

1920
01:50:42,300 --> 01:50:46,029
so what am I missing folks what's the

1921
01:50:45,399 --> 01:50:49,920
problem

1922
01:50:46,029 --> 01:50:54,809
that looks totally correct right I mean

1923
01:50:49,920 --> 01:50:54,810
isn't that exactly what we said we had I

1924
01:50:59,609 --> 01:51:12,929
guess I'll start start small is this a

1925
01:51:04,569 --> 01:51:12,929
guest - do you think that's a guest -

1926
01:51:18,119 --> 01:51:33,760
you let me know compiler because I have

1927
01:51:20,619 --> 01:51:36,750
no idea there do you know do them that

1928
01:51:33,760 --> 01:51:36,750
is or don't you

1929
01:51:38,880 --> 01:51:45,400
so it thinks that - guess it thought

1930
01:51:43,029 --> 01:51:47,979
that was fine right it thought that was

1931
01:51:45,399 --> 01:51:50,829
totally fine didn't have any problem

1932
01:51:47,979 --> 01:51:56,669
with that okay so now let's try a guess

1933
01:51:50,829 --> 01:52:00,960
a guess needs to have three of these

1934
01:51:56,670 --> 01:52:00,960
right so it should look like this

1935
01:52:07,479 --> 01:52:17,179
so it doesn't think it doesn't think

1936
01:52:11,390 --> 01:52:19,670
that should be happening right it it

1937
01:52:17,180 --> 01:52:23,090
doesn't like that it says there's too

1938
01:52:19,670 --> 01:52:25,130
many initializers and here it's actually

1939
01:52:23,090 --> 01:52:26,569
able for whatever reason it's actually

1940
01:52:25,130 --> 01:52:29,390
able to report the error in what looks

1941
01:52:26,569 --> 01:52:32,750
like more of the correct spot right it's

1942
01:52:29,390 --> 01:52:39,650
actually at least flagging this which is

1943
01:52:32,750 --> 01:52:41,569
something so here's our random test it

1944
01:52:39,649 --> 01:52:43,879
should have three guests twos in it

1945
01:52:41,569 --> 01:52:48,829
here's one of them here's two of them

1946
01:52:43,880 --> 01:52:53,600
here's three of them where is the too

1947
01:52:48,829 --> 01:52:58,238
many initializers where do you guys see

1948
01:52:53,600 --> 01:52:58,239
it because I don't see it

1949
01:53:12,699 --> 01:53:20,000
if I double bracket it but you shouldn't

1950
01:53:17,060 --> 01:53:22,400
have to do that because we didn't have

1951
01:53:20,000 --> 01:53:30,890
to do that before right but it looks

1952
01:53:22,399 --> 01:53:33,229
like it wants that extra bracket but

1953
01:53:30,890 --> 01:53:37,369
before it was an array and we didn't put

1954
01:53:33,229 --> 01:53:48,789
the bracket in right so I mean in other

1955
01:53:37,369 --> 01:53:51,979
words if you don't put a bracket there

1956
01:53:48,789 --> 01:53:55,939
which you don't why do you put a bracket

1957
01:53:51,979 --> 01:53:58,909
here it's totally wrong like these are

1958
01:53:55,939 --> 01:54:01,699
both exactly the same thing and yet for

1959
01:53:58,909 --> 01:54:04,789
some reason this one needs double

1960
01:54:01,699 --> 01:54:08,000
brackets and this one needs no brackets

1961
01:54:04,789 --> 01:54:10,519
right now one pair of brackets is

1962
01:54:08,000 --> 01:54:13,939
correct because this is an additional

1963
01:54:10,520 --> 01:54:17,680
layer right it's an additional array so

1964
01:54:13,939 --> 01:54:24,229
instead of just these brackets who knows

1965
01:54:17,680 --> 01:54:26,990
anyway stupid garbage no one cares

1966
01:54:24,229 --> 01:54:29,629
going back to h8 sphere all that means

1967
01:54:26,989 --> 01:54:32,300
is that if that is the in fact the only

1968
01:54:29,630 --> 01:54:35,239
problem we just need to spam brackets in

1969
01:54:32,300 --> 01:54:40,070
here for no friggin reason so inside our

1970
01:54:35,239 --> 01:54:42,469
Vieth are v3 for here I just have to put

1971
01:54:40,069 --> 01:54:45,859
an additional bracket set around this I

1972
01:54:42,470 --> 01:54:50,780
think for no reason I believe that is

1973
01:54:45,859 --> 01:54:54,679
what we learned but who knows

1974
01:54:50,779 --> 01:54:57,559
alright so in here I'm going to run this

1975
01:54:54,680 --> 01:55:01,100
again to generate a different version of

1976
01:54:57,560 --> 01:55:03,890
this file I'm gonna kill this buffer and

1977
01:55:01,100 --> 01:55:07,600
let it load the new one in and we'll see

1978
01:55:03,890 --> 01:55:07,600
if it thinks that's fine right

1979
01:55:11,590 --> 01:55:28,550
it didn't look like it even loaded that

1980
01:55:13,819 --> 01:55:34,069
one in so looking at this now we've got

1981
01:55:28,550 --> 01:55:35,860
this magical extra one here right and of

1982
01:55:34,069 --> 01:55:38,210
course I don't know how many more

1983
01:55:35,859 --> 01:55:40,639
friggin extra brackets it's gonna want

1984
01:55:38,210 --> 01:55:42,139
us to put into this nonsense because if

1985
01:55:40,639 --> 01:55:43,940
that needed extra brackets then

1986
01:55:42,139 --> 01:55:48,199
everything probably needs extra brackets

1987
01:55:43,939 --> 01:55:50,089
at some level would be my suspicion but

1988
01:55:48,198 --> 01:55:52,279
I don't actually know but it looks like

1989
01:55:50,090 --> 01:55:55,940
it's still complaining about two main

1990
01:55:52,279 --> 01:56:09,768
initializers it's gonna flaming now on

1991
01:55:55,939 --> 01:56:12,710
the v3 4x and I'm not sure I want to go

1992
01:56:09,769 --> 01:56:14,329
ahead and just again clip this out I'm

1993
01:56:12,710 --> 01:56:18,469
gonna try and work this one backwards

1994
01:56:14,328 --> 01:56:20,328
now to see if I can get rid of the error

1995
01:56:18,469 --> 01:56:22,729
in here and then know exactly how many

1996
01:56:20,328 --> 01:56:30,219
more ridiculous pairs of brackets for no

1997
01:56:22,729 --> 01:56:32,599
reason I have to add alright so in here

1998
01:56:30,219 --> 01:56:34,099
by the way all this is absolutely absurd

1999
01:56:32,599 --> 01:56:38,269
that the programmer has to do this at

2000
01:56:34,099 --> 01:56:40,760
all it's absolutely ridiculous data

2001
01:56:38,269 --> 01:56:44,860
status pecking in C is absolute garbage

2002
01:56:40,760 --> 01:56:48,920
and it only gets worse in C++ so anyway

2003
01:56:44,859 --> 01:56:51,710
that aside if we compile this which is

2004
01:56:48,920 --> 01:56:54,609
the minimal set now we just add brackets

2005
01:56:51,710 --> 01:56:54,609
till this works I guess

2006
01:57:01,270 --> 01:57:15,790
such a piece of garbage just total

2007
01:57:06,859 --> 01:57:19,250
frickin garbage there we go all right

2008
01:57:15,789 --> 01:57:21,850
there is our generate sphere here's me

2009
01:57:19,250 --> 01:57:21,850
running it

2010
01:57:23,630 --> 01:57:36,140
I need this to reload did I put that in

2011
01:57:27,890 --> 01:57:37,400
the right place it's the triples yeah

2012
01:57:36,140 --> 01:57:40,060
and so we're probably gonna have to

2013
01:57:37,399 --> 01:57:42,500
double even more of those now

2014
01:57:40,060 --> 01:57:45,860
actually you know what let me save this

2015
01:57:42,500 --> 01:57:46,760
one and let me actually make multiple of

2016
01:57:45,859 --> 01:57:50,349
each of them now because we're probably

2017
01:57:46,760 --> 01:57:50,350
gonna have to double the outer ones too

2018
01:58:05,840 --> 01:58:08,840
to

2019
01:58:21,429 --> 01:58:26,690
so I'm tempted you just say that this

2020
01:58:23,658 --> 01:58:28,759
entire thing is stupid and I don't want

2021
01:58:26,689 --> 01:58:31,759
to deal with it so I'm guessing that

2022
01:58:28,760 --> 01:58:34,190
rather than try to make C++ actually do

2023
01:58:31,760 --> 01:58:35,810
something right at all here maybe I

2024
01:58:34,189 --> 01:58:42,198
should just flatten these things down

2025
01:58:35,810 --> 01:58:44,480
because this is ridiculous how just take

2026
01:58:42,198 --> 01:58:47,750
the things and put them in the freaking

2027
01:58:44,479 --> 01:58:51,529
it's just an array of numbers what is

2028
01:58:47,750 --> 01:58:53,630
wrong with you it's so dumb it can't

2029
01:58:51,529 --> 01:58:55,969
even report where it thinks the error is

2030
01:58:53,630 --> 01:58:59,409
and it doesn't need any of these

2031
01:58:55,969 --> 01:59:04,789
brackets it should just take the data

2032
01:58:59,408 --> 01:59:06,170
absolutely absurd anyway all right so

2033
01:59:04,789 --> 01:59:08,929
now it thinks that this is a problem

2034
01:59:06,170 --> 01:59:12,829
suddenly who knows why

2035
01:59:08,929 --> 01:59:22,429
right just magical the unicorn shot in

2036
01:59:12,829 --> 01:59:23,719
the wrong place today there we go yeah

2037
01:59:22,429 --> 01:59:25,819
and it can't seem to figure out what

2038
01:59:23,719 --> 01:59:30,319
goes on there I'm just wondering if like

2039
01:59:25,819 --> 01:59:33,229
we just need every pair of brackets to

2040
01:59:30,319 --> 01:59:34,849
be doubled or something like this I I

2041
01:59:33,229 --> 01:59:37,509
really just have no idea what it's

2042
01:59:34,850 --> 01:59:40,310
thinking none whatsoever

2043
01:59:37,510 --> 01:59:44,690
so let's see how could I define this

2044
01:59:40,310 --> 01:59:47,480
let's suppose that we need to do this

2045
01:59:44,689 --> 01:59:49,519
differently let's suppose that C++ is

2046
01:59:47,479 --> 01:59:53,658
just so broken that you just don't even

2047
01:59:49,520 --> 01:59:56,000
bother right what would we do well we

2048
01:59:53,658 --> 01:59:59,119
need two tables we need tables of

2049
01:59:56,000 --> 02:00:02,779
weights and we need tables of sample

2050
01:59:59,119 --> 02:00:06,319
directions right and so if we wanted to

2051
02:00:02,779 --> 02:00:08,509
do that really we could just not define

2052
02:00:06,319 --> 02:00:10,340
this and we could just say that we were

2053
02:00:08,510 --> 02:00:12,829
pointing to it because we know that the

2054
02:00:10,340 --> 02:00:19,909
data layout would be the same it's just

2055
02:00:12,829 --> 02:00:22,550
a large array of f/32 right so in theory

2056
02:00:19,908 --> 02:00:25,099
if I make sure that the alignment is

2057
02:00:22,550 --> 02:00:28,690
correct I should be able to just dump a

2058
02:00:25,100 --> 02:00:31,579
giant array of floats instead and then

2059
02:00:28,689 --> 02:00:34,029
C++ could try to get its head

2060
02:00:31,578 --> 02:00:36,649
out of its anus and we could actually

2061
02:00:34,029 --> 02:00:39,979
program instead of meant handling this

2062
02:00:36,649 --> 02:00:42,019
stupid compiler all day long so in order

2063
02:00:39,979 --> 02:00:45,109
to do that all we would really need to

2064
02:00:42,020 --> 02:00:47,690
do is just this right here's our light

2065
02:00:45,109 --> 02:00:49,429
sampling sphere table guess what it's a

2066
02:00:47,689 --> 02:00:51,828
giant array of floats because that's the

2067
02:00:49,429 --> 02:00:54,770
best darkness trout strips true strips

2068
02:00:51,828 --> 02:00:56,389
ugly stepchild can do and so when we

2069
02:00:54,770 --> 02:00:58,790
come through here I'm just gonna dump

2070
02:00:56,389 --> 02:01:01,130
them all out right I'm just gonna dump

2071
02:00:58,789 --> 02:01:02,779
float after float after float and I'm

2072
02:01:01,130 --> 02:01:09,650
just gonna dump them in the order that I

2073
02:01:02,779 --> 02:01:15,559
know that they should be right so

2074
02:01:09,649 --> 02:01:23,238
there's all of the floats for this no

2075
02:01:15,559 --> 02:01:31,250
more of that here's all the floats for

2076
02:01:23,238 --> 02:01:33,828
this and then we close it off so that

2077
02:01:31,250 --> 02:01:36,050
produces the same layout that we want

2078
02:01:33,828 --> 02:01:46,000
right it gives us what we actually

2079
02:01:36,050 --> 02:01:46,000
needed like so of course they run it

2080
02:01:50,149 --> 02:01:54,529
and now what you can see is lo and

2081
02:01:52,310 --> 02:01:57,080
behold the C compiler was able to

2082
02:01:54,529 --> 02:02:00,800
actually do its job for a change what a

2083
02:01:57,079 --> 02:02:06,738
shock high C compiler thanks for coming

2084
02:02:00,800 --> 02:02:10,429
to work today and then if I go load up

2085
02:02:06,738 --> 02:02:12,829
that file we now see it's just a giant

2086
02:02:10,429 --> 02:02:16,489
dump of floats which you know is about

2087
02:02:12,829 --> 02:02:18,559
all that that it can handle right I'd

2088
02:02:16,488 --> 02:02:21,319
like to put an intern on that so I think

2089
02:02:18,560 --> 02:02:22,909
inside h/h sphere I'm gonna add I think

2090
02:02:21,319 --> 02:02:24,859
we have a thing called global we can

2091
02:02:22,908 --> 02:02:27,289
just put in there so when we grab that

2092
02:02:24,859 --> 02:02:29,750
light sampling sphere table what I'd

2093
02:02:27,289 --> 02:02:32,510
like to do is also align it I don't know

2094
02:02:29,750 --> 02:02:37,460
if we actually have in our platform code

2095
02:02:32,510 --> 02:02:42,889
a way to specifically align things I'm

2096
02:02:37,460 --> 02:02:46,099
gonna look we don't really have a deco

2097
02:02:42,889 --> 02:02:48,500
spec align and we kind of need one in

2098
02:02:46,099 --> 02:02:50,389
this particular case because without a

2099
02:02:48,500 --> 02:02:53,329
deco spec of line I don't think it's

2100
02:02:50,389 --> 02:02:57,010
gonna know what's going on I'll try to

2101
02:02:53,329 --> 02:02:59,929
putting that in just to give you some

2102
02:02:57,010 --> 02:03:02,090
perspective on that the reason is

2103
02:02:59,929 --> 02:03:05,210
because we don't know what the compiler

2104
02:03:02,090 --> 02:03:06,380
is gonna do as far as loads we don't

2105
02:03:05,210 --> 02:03:08,739
know if it's gonna try and use the line

2106
02:03:06,380 --> 02:03:12,560
loads I don't need it to do that because

2107
02:03:08,738 --> 02:03:17,388
unaligned loads are just fine for our

2108
02:03:12,560 --> 02:03:22,340
purposes but just in case I need to to

2109
02:03:17,389 --> 02:03:23,690
put one of these into the declaration of

2110
02:03:22,340 --> 02:03:26,659
the variable to make sure that they're

2111
02:03:23,689 --> 02:03:31,039
aligned to a 16 byte boundary so that

2112
02:03:26,658 --> 02:03:35,348
aligned load Cindy loads won't fault so

2113
02:03:31,039 --> 02:03:39,260
I just need this to get that alignment

2114
02:03:35,349 --> 02:03:40,460
specifier placed in there and you know

2115
02:03:39,260 --> 02:03:42,730
that would look something like this

2116
02:03:40,460 --> 02:03:42,730
right

2117
02:03:51,609 --> 02:03:58,369
and now what I can do is actually just

2118
02:03:56,000 --> 02:04:01,399
print out some ridiculous nonsense here

2119
02:03:58,369 --> 02:04:05,059
as well and say okay after you define

2120
02:04:01,399 --> 02:04:12,289
the table we can just make this thing

2121
02:04:05,060 --> 02:04:14,390
point to this other thing right so all

2122
02:04:12,289 --> 02:04:16,699
I'm gonna do is make it so it outputs

2123
02:04:14,390 --> 02:04:18,710
the table as this giant floating point

2124
02:04:16,699 --> 02:04:25,579
array of garbage and then I'm just gonna

2125
02:04:18,710 --> 02:04:31,939
straight-up cast it and that's gonna be

2126
02:04:25,579 --> 02:04:38,329
the end of it what a waste of time such

2127
02:04:31,939 --> 02:04:39,799
a garbage language alright so now I'm

2128
02:04:38,329 --> 02:04:45,649
going to go ahead and generate our our

2129
02:04:39,800 --> 02:04:48,800
file again I'm going to compile and I

2130
02:04:45,649 --> 02:04:52,909
think we should now be working okay but

2131
02:04:48,800 --> 02:04:58,779
we'll see oops put that inside actually

2132
02:04:52,909 --> 02:05:02,930
have to go outside and in theory now

2133
02:04:58,779 --> 02:05:04,609
that should allow us to effectively

2134
02:05:02,930 --> 02:05:08,000
we're just defining it as a giant array

2135
02:05:04,609 --> 02:05:10,399
of floats but then we're using it as if

2136
02:05:08,000 --> 02:05:12,619
it was an actual lighting spirit table

2137
02:05:10,399 --> 02:05:17,649
right so we have to get that cast

2138
02:05:12,619 --> 02:05:17,649
working properly what's the problem here

2139
02:05:21,140 --> 02:05:27,920
initializing handmade lighting 16 what

2140
02:05:28,699 --> 02:05:41,840
should I forget a I did just forgot

2141
02:05:33,180 --> 02:05:44,810
something : uh all right so now

2142
02:05:41,840 --> 02:05:53,640
hopefully we're good to go

2143
02:05:44,810 --> 02:05:58,440
nope not quite ah that should be like

2144
02:05:53,640 --> 02:06:00,360
that we just want to point her now all

2145
02:05:58,439 --> 02:06:01,979
right so that took way longer than it

2146
02:06:00,359 --> 02:06:04,649
should have because we thought

2147
02:06:01,979 --> 02:06:07,500
temporarily that C++ might do something

2148
02:06:04,649 --> 02:06:09,569
smart some day but it doesn't so why

2149
02:06:07,500 --> 02:06:10,949
bother I should have just done the float

2150
02:06:09,569 --> 02:06:13,649
table to begin with because we know that

2151
02:06:10,949 --> 02:06:17,460
would work so now I think we're good to

2152
02:06:13,649 --> 02:06:18,869
go I think we I think we have our

2153
02:06:17,460 --> 02:06:21,060
pipeline flowing tomorrow we can

2154
02:06:18,869 --> 02:06:24,599
concentrate on actually creating some

2155
02:06:21,060 --> 02:06:26,130
useful values in our table for now we

2156
02:06:24,600 --> 02:06:29,370
want to see if we can get anything here

2157
02:06:26,130 --> 02:06:31,770
printing out or started drawing spheres

2158
02:06:29,369 --> 02:06:33,539
sampling spheres and what you can see

2159
02:06:31,770 --> 02:06:35,730
there is we've got a sampling sphere

2160
02:06:33,539 --> 02:06:37,350
exactly as we wanted there's our points

2161
02:06:35,729 --> 02:06:39,629
around the sphere and what I'd like to

2162
02:06:37,350 --> 02:06:42,600
do just really quickly before going to

2163
02:06:39,630 --> 02:06:44,970
the QA where hopefully all of the

2164
02:06:42,600 --> 02:06:47,610
questions are why does c++ suck so badly

2165
02:06:44,970 --> 02:06:49,500
and my answer will be because it

2166
02:06:47,609 --> 02:06:51,509
requires people who know what they're

2167
02:06:49,500 --> 02:06:55,170
doing to make a language that works I'm

2168
02:06:51,510 --> 02:06:57,600
going to go ahead and draw all of them

2169
02:06:55,170 --> 02:07:00,060
so all of the spheres that we actually

2170
02:06:57,600 --> 02:07:02,730
created I'm going to draw them all like

2171
02:07:00,060 --> 02:07:05,520
on top of each other right I'm gonna

2172
02:07:02,729 --> 02:07:08,959
also kill this buffer so in here where

2173
02:07:05,520 --> 02:07:08,960
we loop over

2174
02:07:13,538 --> 02:07:28,069
I'm just gonna do it over all the

2175
02:07:16,130 --> 02:07:29,779
spheres like that

2176
02:07:28,069 --> 02:07:33,078
and so here we're we're just using the

2177
02:07:29,779 --> 02:07:35,210
first one I'm going to do all of them

2178
02:07:33,078 --> 02:07:41,359
and the other thing I'm going to do is

2179
02:07:35,210 --> 02:07:45,460
I'm going to look at our color table and

2180
02:07:41,359 --> 02:07:48,768
I'm gonna get a debug color off of the

2181
02:07:45,460 --> 02:07:50,510
sphere so we can in the future like

2182
02:07:48,769 --> 02:07:52,309
right now we don't expect to anything

2183
02:07:50,510 --> 02:07:54,019
else in here but in the future what we'd

2184
02:07:52,309 --> 02:07:56,630
like to see is those colors themselves

2185
02:07:54,019 --> 02:07:58,809
are equally distributed sort of so we

2186
02:07:56,630 --> 02:08:01,489
kind of want to see that our spheres

2187
02:07:58,809 --> 02:08:06,139
have that nice property to them as well

2188
02:08:01,488 --> 02:08:07,518
right so there's our sphere and that's

2189
02:08:06,139 --> 02:08:09,498
exactly what we wanted

2190
02:08:07,519 --> 02:08:10,880
I'm gonna lift that up off the ground a

2191
02:08:09,498 --> 02:08:12,439
little bit because it's a little hard

2192
02:08:10,880 --> 02:08:14,630
for me to see the whole sphere remember

2193
02:08:12,439 --> 02:08:18,408
we were using a hemisphere before hand

2194
02:08:14,630 --> 02:08:26,929
and now we're actually sampling in an

2195
02:08:18,408 --> 02:08:30,828
entire sphere so what is that don't know

2196
02:08:26,929 --> 02:08:33,949
what's going on there hold that one

2197
02:08:30,828 --> 02:08:36,439
quick second there we go

2198
02:08:33,948 --> 02:08:37,969
but I think we're all done with the sort

2199
02:08:36,439 --> 02:08:39,678
of annoying plumbing part of things now

2200
02:08:37,969 --> 02:08:41,448
so we really just have to focus on

2201
02:08:39,679 --> 02:08:44,899
creating a nice distribution now but

2202
02:08:41,448 --> 02:08:47,719
there we go right so there's our

2203
02:08:44,899 --> 02:08:49,609
sampling and you can cut you can see

2204
02:08:47,719 --> 02:08:51,469
it's not very well distributed right now

2205
02:08:49,609 --> 02:08:55,219
right you can you can actually see that

2206
02:08:51,469 --> 02:08:58,269
I may want this that to be even higher

2207
02:08:55,219 --> 02:08:58,269
up honestly

2208
02:09:03,189 --> 02:09:06,658
just to get it out of the way

2209
02:09:14,139 --> 02:09:19,618
so there's our sphere right kind of

2210
02:09:16,600 --> 02:09:19,619
floating up in the middle of nowhere

2211
02:09:24,670 --> 02:09:29,520
you can see it's got some big holes in

2212
02:09:26,770 --> 02:09:29,520
it right

2213
02:09:31,929 --> 02:09:35,500
and again it's gonna under sample

2214
02:09:33,850 --> 02:09:44,949
because it's white noise on a cube

2215
02:09:35,500 --> 02:09:49,689
projected on to a sphere right so that's

2216
02:09:44,948 --> 02:09:52,738
our job for tomorrow I I'm gonna go

2217
02:09:49,689 --> 02:09:52,738
ahead and go to a Q and a

2218
02:11:00,429 --> 02:11:03,550
have you considered using Julian

2219
02:11:02,260 --> 02:11:04,869
language to do any sort of game develop

2220
02:11:03,550 --> 02:11:09,699
a I've never been heard of Julie

2221
02:11:04,869 --> 02:11:14,319
language I think coder I'm surprised the

2222
02:11:09,698 --> 02:11:15,219
cast works as an initializer why are you

2223
02:11:14,319 --> 02:11:17,469
surprised

2224
02:11:15,219 --> 02:11:19,260
you can always cast a pointer to

2225
02:11:17,469 --> 02:11:21,550
anything to a pointer to anything else

2226
02:11:19,260 --> 02:11:23,409
because all you're doing is just telling

2227
02:11:21,550 --> 02:11:24,880
it to reinterpret the pointer but the

2228
02:11:23,408 --> 02:11:27,339
value stays the same so the compiler is

2229
02:11:24,880 --> 02:11:29,289
like okay it's the same value right just

2230
02:11:27,340 --> 02:11:30,940
copies one pull up it copies one eight

2231
02:11:29,289 --> 02:11:35,050
byte value to another eight byte value

2232
02:11:30,939 --> 02:11:37,359
that's it so it doesn't actually do

2233
02:11:35,050 --> 02:11:39,159
anything it's not actually converting

2234
02:11:37,359 --> 02:11:41,079
anything in an initializer it's not

2235
02:11:39,158 --> 02:11:43,170
looking at the data at all you know I'm

2236
02:11:41,079 --> 02:11:49,329
saying to you

2237
02:11:43,170 --> 02:11:50,590
it's just copying the pointer and this

2238
02:11:49,329 --> 02:11:53,948
gets not even copying the pointer

2239
02:11:50,590 --> 02:11:55,329
because it's just a hard-coded number

2240
02:11:53,948 --> 02:11:59,408
where the array is so it's just saying

2241
02:11:55,329 --> 02:12:03,329
hey off you go why does he Sasebo suck

2242
02:11:59,408 --> 02:12:03,329
so badly good question

2243
02:12:10,789 --> 02:12:15,769
I don't know I don't know how they are

2244
02:12:13,760 --> 02:12:21,739
so bad at so many things

2245
02:12:15,770 --> 02:12:24,080
I don't know it's like in order to

2246
02:12:21,739 --> 02:12:27,819
contribute to the C++ language fact you

2247
02:12:24,079 --> 02:12:27,819
have to had to pass some kind of like

2248
02:12:28,449 --> 02:12:37,670
you know decathlon of of stupidity where

2249
02:12:36,470 --> 02:12:40,310
you have to prove that you're stupid

2250
02:12:37,670 --> 02:12:44,020
along many axes so that you won't

2251
02:12:40,310 --> 02:12:44,020
accidentally do something right

2252
02:12:47,739 --> 02:12:55,670
Martin's was asking if we can use seeps

2253
02:12:51,039 --> 02:12:57,109
C++ 11 a line as yeah if if that's well

2254
02:12:55,670 --> 02:12:59,390
enough supported and you would know

2255
02:12:57,109 --> 02:13:01,969
better than I'm Martin's cuz you

2256
02:12:59,390 --> 02:13:05,570
I feel like do a lot more platform work

2257
02:13:01,970 --> 02:13:08,750
than I do these days but if you think

2258
02:13:05,569 --> 02:13:10,880
that's okay I'm totally fine with it so

2259
02:13:08,750 --> 02:13:15,609
you're doing saying that in here instead

2260
02:13:10,880 --> 02:13:15,609
of a deco specular line you want

2261
02:13:23,988 --> 02:13:31,329
this just making sure I get I'm

2262
02:13:28,069 --> 02:13:31,329
understanding the request right

2263
02:13:49,238 --> 02:13:55,738
just waiting for Martins to confirm

2264
02:13:51,189 --> 02:13:55,739
that's what he wanted me to do

2265
02:14:01,210 --> 02:14:06,279
what advice would you give to bjorn

2266
02:14:03,010 --> 02:14:08,610
history strip a take real-world

2267
02:14:06,279 --> 02:14:10,479
programming more seriously right

2268
02:14:08,609 --> 02:14:15,698
programming is not a theoretical

2269
02:14:10,479 --> 02:14:17,678
exercise you know it's like plumbing or

2270
02:14:15,698 --> 02:14:19,359
something like it actually has to move

2271
02:14:17,679 --> 02:14:21,908
the water around the pipes like you

2272
02:14:19,359 --> 02:14:24,250
can't just theorize what might be nice

2273
02:14:21,908 --> 02:14:27,009
and then not look at what the actual

2274
02:14:24,250 --> 02:14:32,469
practical consequences of people trying

2275
02:14:27,010 --> 02:14:34,390
to do actual work you know are and like

2276
02:14:32,469 --> 02:14:36,158
C++ with it's ridiculous set of

2277
02:14:34,390 --> 02:14:39,400
undefined behaviors and it's like

2278
02:14:36,158 --> 02:14:40,719
hamstrung feature set that always seems

2279
02:14:39,399 --> 02:14:49,089
to have something wrong with it it's

2280
02:14:40,719 --> 02:14:51,579
just such garbage if you're to make this

2281
02:14:49,090 --> 02:14:52,929
a more 3d game how would you go about

2282
02:14:51,579 --> 02:14:54,760
modifying the renderer to support

2283
02:14:52,929 --> 02:14:57,699
submissions of these would you keep the

2284
02:14:54,760 --> 02:15:00,280
single vertex lever set up no if you're

2285
02:14:57,698 --> 02:15:02,139
trying to push like large 3d models down

2286
02:15:00,279 --> 02:15:04,420
a pipeline what you typically need to do

2287
02:15:02,140 --> 02:15:06,820
is do you know how we've got the

2288
02:15:04,420 --> 02:15:08,800
textures set up right now you would set

2289
02:15:06,819 --> 02:15:13,029
up one of those for the models as well

2290
02:15:08,800 --> 02:15:17,020
so you would basically have a parallel

2291
02:15:13,029 --> 02:15:20,349
thing to our texture like our texture

2292
02:15:17,020 --> 02:15:22,659
cache system right you have a parallel

2293
02:15:20,350 --> 02:15:24,610
thing to that for your models and every

2294
02:15:22,658 --> 02:15:26,379
time you need to use a model that wasn't

2295
02:15:24,609 --> 02:15:29,619
in the cache you would try to load it

2296
02:15:26,380 --> 02:15:32,050
into the 3d memory the memory on the 3d

2297
02:15:29,619 --> 02:15:34,269
card and whenever you wanted to draw it

2298
02:15:32,050 --> 02:15:36,219
you would reference that so so you don't

2299
02:15:34,270 --> 02:15:37,719
want to be like sending down all the

2300
02:15:36,219 --> 02:15:39,340
vertices every frame like that's not

2301
02:15:37,719 --> 02:15:40,810
gonna work so you have to just treat

2302
02:15:39,340 --> 02:15:45,150
them like you treat textures they're

2303
02:15:40,810 --> 02:15:45,150
basically just vertex textures right

2304
02:15:46,500 --> 02:15:50,380
what happened for you to turn on

2305
02:15:48,369 --> 02:15:52,448
co-sister RC well nothing happened it

2306
02:15:50,380 --> 02:15:56,880
caused me a turn on see below so harshly

2307
02:15:52,448 --> 02:15:59,169
I always rant about C++ just stupid

2308
02:15:56,880 --> 02:16:03,630
compiler being bad about just getting

2309
02:15:59,170 --> 02:16:03,630
data in there right

2310
02:16:09,359 --> 02:16:21,089
okay so looks like they want this before

2311
02:16:19,829 --> 02:16:25,399
the type although I don't know if it

2312
02:16:21,090 --> 02:16:25,400
matters so this what we're talking about

2313
02:16:28,100 --> 02:16:32,000
you just want you want that

2314
02:16:50,468 --> 02:16:54,189
that's story fine by me

2315
02:17:03,421 --> 02:17:07,979
since we're asking off two other

2316
02:17:04,921 --> 02:17:09,450
questions is SP IR V in the direction of

2317
02:17:07,979 --> 02:17:11,189
getting programmable Isis for graphics

2318
02:17:09,450 --> 02:17:14,671
hardware or am i incorrect thoughts on

2319
02:17:11,190 --> 02:17:17,819
experimental no SP IR V is is just an

2320
02:17:14,671 --> 02:17:19,950
intermediate representation of shaders

2321
02:17:17,819 --> 02:17:25,649
it doesn't really have anything to do

2322
02:17:19,950 --> 02:17:30,659
with programmable Isis for GPUs you can

2323
02:17:25,649 --> 02:17:34,440
think of SP IR V sort of as like clang

2324
02:17:30,659 --> 02:17:37,530
IR if you're familiar with that or just

2325
02:17:34,440 --> 02:17:39,690
generally when your compiler ingests

2326
02:17:37,530 --> 02:17:42,121
code normally so you know I give it one

2327
02:17:39,690 --> 02:17:45,001
of these C files and I say compile this

2328
02:17:42,120 --> 02:17:46,769
it doesn't just read the C file as text

2329
02:17:45,001 --> 02:17:50,371
and then spit machine code out the back

2330
02:17:46,770 --> 02:17:52,591
it reads it in it builds a bunch of

2331
02:17:50,370 --> 02:17:54,599
intermediate you know data structures

2332
02:17:52,591 --> 02:17:56,069
that it uses to like analyze the code

2333
02:17:54,600 --> 02:17:59,610
and think about what it should do and

2334
02:17:56,069 --> 02:18:02,341
then eventually run something after it's

2335
02:17:59,610 --> 02:18:04,260
gone through transformations and bunged

2336
02:18:02,341 --> 02:18:06,780
around and all sorts of stuff eventually

2337
02:18:04,260 --> 02:18:08,729
it will kick out some machine code when

2338
02:18:06,780 --> 02:18:10,260
we say a programmable eisah for graphics

2339
02:18:08,729 --> 02:18:13,949
hardware we're talking about a spec for

2340
02:18:10,260 --> 02:18:17,309
that machine code SP ir v is like the

2341
02:18:13,950 --> 02:18:20,551
compiler internal structures so SP ir v

2342
02:18:17,309 --> 02:18:22,831
is saying look let the shader get

2343
02:18:20,550 --> 02:18:24,659
compiled into an intermediate format

2344
02:18:22,831 --> 02:18:26,159
then we'll hand that to the graphics

2345
02:18:24,659 --> 02:18:28,739
card and the graphics card will actually

2346
02:18:26,159 --> 02:18:31,409
generate something that map's it to its

2347
02:18:28,739 --> 02:18:36,030
eisah so it's really SP r v doesn't

2348
02:18:31,409 --> 02:18:39,719
really have anything to do with getting

2349
02:18:36,030 --> 02:18:42,390
graphics hardware more programmable from

2350
02:18:39,719 --> 02:18:43,529
a direct programming standpoint in fact

2351
02:18:42,389 --> 02:18:45,659
it's the opposite of that

2352
02:18:43,530 --> 02:18:47,850
it's an insulation layer that prevents

2353
02:18:45,659 --> 02:18:50,690
you from actually programming the

2354
02:18:47,850 --> 02:18:50,690
graphics hardware right

2355
02:18:53,120 --> 02:18:59,730
what do you think about rust I've never

2356
02:18:55,709 --> 02:19:01,019
used rust my only thoughts on it are

2357
02:18:59,729 --> 02:19:02,550
from looking at the things that people

2358
02:19:01,020 --> 02:19:07,530
talk about it doesn't sound like a

2359
02:19:02,550 --> 02:19:12,629
language that really has much of a clue

2360
02:19:07,530 --> 02:19:14,670
about things I care about it seems like

2361
02:19:12,629 --> 02:19:16,920
yet another C++ to me but you know I

2362
02:19:14,670 --> 02:19:18,930
haven't used it yet so maybe I would

2363
02:19:16,920 --> 02:19:19,979
think it was great but I could pretty

2364
02:19:18,930 --> 02:19:21,750
much tell you right now I wouldn't I

2365
02:19:19,979 --> 02:19:23,100
would probably think it sucks it's

2366
02:19:21,750 --> 02:19:31,559
probably slightly better than C++ though

2367
02:19:23,100 --> 02:19:35,520
because most languages are what happened

2368
02:19:31,559 --> 02:19:36,989
to Sean McGrath I don't know did

2369
02:19:35,520 --> 02:19:39,319
something did something happen to sean

2370
02:19:36,989 --> 02:19:39,319
McGrath

2371
02:19:52,289 --> 02:19:57,600
August 30th all right there there are

2372
02:19:55,469 --> 02:20:02,760
some swears on there yes I should put

2373
02:19:57,600 --> 02:20:08,068
that on the stream sorry kids you had a

2374
02:20:02,760 --> 02:20:11,300
post from today or yesterday so I'm not

2375
02:20:08,068 --> 02:20:11,299
sure ting about what happened to him

2376
02:20:11,389 --> 02:20:19,108
maybe you mean something specific I

2377
02:20:13,439 --> 02:20:22,229
don't know can you build an entire game

2378
02:20:19,109 --> 02:20:26,670
and a data or data oriented mindset well

2379
02:20:22,228 --> 02:20:28,228
I do really I'm a CS student and I want

2380
02:20:26,670 --> 02:20:29,488
to learn about rigid body physics it

2381
02:20:28,228 --> 02:20:31,469
seems resources I've found the internet

2382
02:20:29,488 --> 02:20:34,020
are very basic tutorials or advanced

2383
02:20:31,469 --> 02:20:36,538
academic papers is there a resource I

2384
02:20:34,020 --> 02:20:46,649
can use with a not a steep learning

2385
02:20:36,539 --> 02:20:48,859
curve you know there probably is that's

2386
02:20:46,648 --> 02:20:51,599
a good question

2387
02:20:48,859 --> 02:20:56,609
it probably is but I don't know what it

2388
02:20:51,600 --> 02:21:01,619
is light sampling sphere has no padding

2389
02:20:56,609 --> 02:21:05,309
then it shouldn't but we can make sure I

2390
02:21:01,619 --> 02:21:09,689
mean we'll look right but it shouldn't

2391
02:21:05,309 --> 02:21:12,528
really have I don't think but we can

2392
02:21:09,689 --> 02:21:12,529
double-check right

2393
02:21:21,360 --> 02:21:35,480
you know we don't know like you know we

2394
02:21:24,090 --> 02:21:39,630
may have to do some padding on here so

2395
02:21:35,479 --> 02:21:42,289
in order to maintain this alignment we

2396
02:21:39,629 --> 02:21:46,079
need this stuff to multiply out okay and

2397
02:21:42,290 --> 02:21:58,140
so when we do the total raised purse

2398
02:21:46,079 --> 02:22:00,510
fear that 18 times 6 that is probably

2399
02:21:58,139 --> 02:22:02,879
not what we want right so we probably

2400
02:22:00,510 --> 02:22:12,630
want to do here is we probably want to

2401
02:22:02,879 --> 02:22:17,039
include you know whatever gets us back

2402
02:22:12,629 --> 02:22:19,920
to a 16 byte boundary because I don't

2403
02:22:17,040 --> 02:22:23,521
know that we actually are on one at that

2404
02:22:19,920 --> 02:22:27,120
point these obviously will always be but

2405
02:22:23,521 --> 02:22:30,150
these are not and so that would be the

2406
02:22:27,120 --> 02:22:32,311
only thing right so effectively like

2407
02:22:30,149 --> 02:22:37,459
whatever it would take to bump us up

2408
02:22:32,310 --> 02:22:41,100
properly to the next like aligned number

2409
02:22:37,459 --> 02:22:48,239
is what we would want and we want that

2410
02:22:41,100 --> 02:22:49,229
either way so like you know this may do

2411
02:22:48,239 --> 02:22:53,879
it for us

2412
02:22:49,229 --> 02:22:54,689
and then you know the cast might also do

2413
02:22:53,879 --> 02:22:58,109
it for us

2414
02:22:54,690 --> 02:22:59,460
in both cases but we need we need to put

2415
02:22:58,110 --> 02:23:01,140
in the padding there either way like

2416
02:22:59,459 --> 02:23:02,639
either the compiler has to do it for us

2417
02:23:01,139 --> 02:23:05,629
or we have to it and if we do it we know

2418
02:23:02,639 --> 02:23:05,629
that it would be good right

2419
02:23:06,450 --> 02:23:11,990
so that alignment padding should

2420
02:23:08,100 --> 02:23:11,989
probably be there and

2421
02:23:15,579 --> 02:23:21,789
well we're thinking about election

2422
02:23:17,420 --> 02:23:21,790
powder just put it in there but I I

2423
02:23:27,909 --> 02:23:35,771
guess what we would want it to be is

2424
02:23:31,390 --> 02:23:40,069
just whatever the next padded number is

2425
02:23:35,771 --> 02:23:47,601
so like you know I assume you would want

2426
02:23:40,069 --> 02:23:51,140
this again I don't really want any of

2427
02:23:47,601 --> 02:23:52,970
this but because it's I don't know if

2428
02:23:51,140 --> 02:23:58,029
the compiler will generate aligned loads

2429
02:23:52,969 --> 02:23:58,029
like I don't want it to but it might I

2430
02:23:58,271 --> 02:24:07,880
just I'm trying to be overly cautious

2431
02:24:01,101 --> 02:24:10,190
right so in there we need to pad it out

2432
02:24:07,879 --> 02:24:13,609
to make it so that will always be

2433
02:24:10,190 --> 02:24:16,819
loading off an aligned value for each

2434
02:24:13,610 --> 02:24:18,950
light sampling sphere and to do that we

2435
02:24:16,819 --> 02:24:22,010
know that this was aligned because each

2436
02:24:18,950 --> 02:24:24,351
one of these is for floats so it's 16

2437
02:24:22,010 --> 02:24:28,250
bytes each one of these is each one of

2438
02:24:24,351 --> 02:24:30,710
these is not right and so what we want

2439
02:24:28,250 --> 02:24:37,521
to do is we want to say well ok we know

2440
02:24:30,709 --> 02:24:41,509
there's this many right we know that's

2441
02:24:37,521 --> 02:24:43,880
how many there are of the cube side sort

2442
02:24:41,510 --> 02:24:46,969
of bundles we know each one has six in

2443
02:24:43,879 --> 02:24:49,909
it right and so that is gonna produce

2444
02:24:46,969 --> 02:24:52,489
some number that's not a multiple of 16

2445
02:24:49,909 --> 02:24:55,459
bytes so we need to do is find like the

2446
02:24:52,489 --> 02:24:58,601
next multiple of 16 bytes that it is so

2447
02:24:55,459 --> 02:25:02,209
to do that I can just round up basically

2448
02:24:58,601 --> 02:25:05,360
and then truncate so I should be able to

2449
02:25:02,209 --> 02:25:08,390
just do like you know something like

2450
02:25:05,360 --> 02:25:11,630
this to basically say give me however

2451
02:25:08,390 --> 02:25:13,609
many of these like floats I would need

2452
02:25:11,629 --> 02:25:17,509
to round up to 16 bytes but in this case

2453
02:25:13,610 --> 02:25:20,230
since I'm adding since I'm doing this in

2454
02:25:17,510 --> 02:25:25,780
F 32 s which I probably want to stick to

2455
02:25:20,229 --> 02:25:28,609
these are actually not it's not 16 right

2456
02:25:25,780 --> 02:25:31,399
it's actually just going to be like 3

2457
02:25:28,609 --> 02:25:32,869
not three kind of a thing so I'm not

2458
02:25:31,398 --> 02:25:35,180
sure which way we want to do that for

2459
02:25:32,869 --> 02:25:37,340
now I think what I might do is say let's

2460
02:25:35,180 --> 02:25:41,479
just make this padding be actually in

2461
02:25:37,340 --> 02:25:43,010
bytes which seems maybe like that's more

2462
02:25:41,478 --> 02:25:45,858
flexible it's just easier to calculate

2463
02:25:43,010 --> 02:25:49,248
really and so in here we would just say

2464
02:25:45,859 --> 02:25:51,619
look it's four times the total number of

2465
02:25:49,248 --> 02:25:57,109
floats we have rounded up and then

2466
02:25:51,619 --> 02:25:58,879
truncated to the to the sixteen right so

2467
02:25:57,109 --> 02:26:00,738
we could do that that's one way to do it

2468
02:25:58,879 --> 02:26:02,329
another way to do it is to do it in

2469
02:26:00,738 --> 02:26:04,128
f-302s which I again like I said I think

2470
02:26:02,328 --> 02:26:05,628
it's a little bit better and we know we

2471
02:26:04,129 --> 02:26:07,579
don't really need the flexibility so

2472
02:26:05,629 --> 02:26:11,600
here we would just add three and and

2473
02:26:07,578 --> 02:26:13,609
three and do it just in float so I think

2474
02:26:11,600 --> 02:26:16,939
that's what we would want

2475
02:26:13,609 --> 02:26:20,470
oops sorry it's not it's not total

2476
02:26:16,939 --> 02:26:20,470
raised for sphere it's

2477
02:26:35,170 --> 02:26:39,789
it's that I believe

2478
02:26:50,310 --> 02:26:58,079
I need like a revert function which I

2479
02:26:55,649 --> 02:27:04,829
don't have right now don't know why but

2480
02:26:58,079 --> 02:27:08,629
I don't have an old build but alright so

2481
02:27:04,829 --> 02:27:13,431
in theory that would do it

2482
02:27:08,629 --> 02:27:13,430
that is not right at all

2483
02:27:20,610 --> 02:27:27,170
I I'm just getting a little sleepy

2484
02:27:30,409 --> 02:27:41,399
alright oops so I think that's what we

2485
02:27:37,379 --> 02:27:44,069
want for padding to ensure that we're

2486
02:27:41,399 --> 02:27:51,739
always going to be able to be on the

2487
02:27:44,069 --> 02:27:54,750
correct line and so in here right we get

2488
02:27:51,739 --> 02:27:57,090
off of this member we know we're aligned

2489
02:27:54,750 --> 02:28:00,079
we come into this member we have light

2490
02:27:57,090 --> 02:28:11,850
sampling total rays for spirit times 6

2491
02:28:00,079 --> 02:28:13,620
which is 6 times 4 times 18 right and so

2492
02:28:11,850 --> 02:28:17,940
then we need to know how many would put

2493
02:28:13,620 --> 02:28:20,910
us up to the next 64 byte boundary and

2494
02:28:17,940 --> 02:28:25,829
we're computing that as 3 so let's see

2495
02:28:20,909 --> 02:28:30,149
if that's actually true so if we look at

2496
02:28:25,829 --> 02:28:36,090
cube side wait it's gonna be 4 times 4

2497
02:28:30,149 --> 02:28:40,799
times 18 times 6 that's the number of

2498
02:28:36,090 --> 02:28:46,560
actual bytes so we're saying that if we

2499
02:28:40,799 --> 02:28:49,409
add 3 that doesn't look right

2500
02:28:46,560 --> 02:28:51,680
to me at all did I actually do that math

2501
02:28:49,409 --> 02:28:51,680
right

2502
02:28:56,059 --> 02:29:02,279
yes I did that math wrong don't program

2503
02:29:00,629 --> 02:29:04,409
when you're done for the day that's the

2504
02:29:02,280 --> 02:29:05,850
that's pretty much the rules here so you

2505
02:29:04,409 --> 02:29:08,489
can see what I did here is I computed

2506
02:29:05,850 --> 02:29:09,809
like what the next bump would be but

2507
02:29:08,489 --> 02:29:12,329
that's not actually what we want to do

2508
02:29:09,809 --> 02:29:15,629
for alignment this is where we are going

2509
02:29:12,329 --> 02:29:17,728
to be right and so what we actually want

2510
02:29:15,629 --> 02:29:19,829
here is I don't know why I was doing

2511
02:29:17,728 --> 02:29:21,920
that at all that was just kind of off in

2512
02:29:19,829 --> 02:29:24,840
left field this is the actual number

2513
02:29:21,920 --> 02:29:27,629
that we've advanced so far it's four

2514
02:29:24,840 --> 02:29:30,299
times the rate battlesphere times six we

2515
02:29:27,629 --> 02:29:32,309
want to get up to the next value so all

2516
02:29:30,299 --> 02:29:34,318
we really need to do is look at what

2517
02:29:32,309 --> 02:29:36,989
it's low bytes are and figure out how

2518
02:29:34,318 --> 02:29:40,829
far we have to go to get there right so

2519
02:29:36,989 --> 02:29:44,100
it's really just four - whatever that

2520
02:29:40,829 --> 02:29:46,978
lobe that low value is right because

2521
02:29:44,100 --> 02:29:50,370
whatever that low whatever those bottom

2522
02:29:46,978 --> 02:29:52,469
two bits are well bottom two bits of

2523
02:29:50,370 --> 02:29:53,130
this value because it's in multiples of

2524
02:29:52,469 --> 02:29:55,529
four bytes

2525
02:29:53,129 --> 02:29:57,358
whatever those bottom two bits are we

2526
02:29:55,530 --> 02:30:00,930
just want to get to the next even

2527
02:29:57,359 --> 02:30:03,450
multiple of them right so I believe

2528
02:30:00,930 --> 02:30:05,870
that's actually what we want not the

2529
02:30:03,450 --> 02:30:09,380
thing I wrote before which was kind of

2530
02:30:05,870 --> 02:30:09,380
out of left field

2531
02:30:15,109 --> 02:30:24,329
so here we should get so in this case it

2532
02:30:18,809 --> 02:30:26,670
said there was no there was no on

2533
02:30:24,329 --> 02:30:34,469
alignment there right meaning it thought

2534
02:30:26,670 --> 02:30:36,540
this was a multiple of four right and so

2535
02:30:34,469 --> 02:30:38,549
when it did the padding again it found

2536
02:30:36,540 --> 02:30:42,720
that this value is zero so if we

2537
02:30:38,549 --> 02:30:44,699
actually want to not put padding in when

2538
02:30:42,719 --> 02:30:46,849
we don't need to we would have to do

2539
02:30:44,700 --> 02:30:46,850
this

2540
02:31:02,921 --> 02:31:07,671
so essentially what we do is we say look

2541
02:31:05,569 --> 02:31:09,649
where are we in terms of alignment if

2542
02:31:07,671 --> 02:31:11,841
we're already aligned we don't need to

2543
02:31:09,649 --> 02:31:13,460
do one of these if we aren't then we

2544
02:31:11,841 --> 02:31:15,470
just need to give ourselves however much

2545
02:31:13,460 --> 02:31:17,359
we would need and so to answer the

2546
02:31:15,470 --> 02:31:20,720
question it looks like we magically just

2547
02:31:17,360 --> 02:31:22,521
picked numbers where that worked so we

2548
02:31:20,720 --> 02:31:24,680
don't really need the padding it would

2549
02:31:22,521 --> 02:31:27,381
seem let's see if that's actually true

2550
02:31:24,681 --> 02:31:31,040
now that we kind of like I have my wits

2551
02:31:27,380 --> 02:31:33,529
about me again temporarily I so if we do

2552
02:31:31,040 --> 02:31:37,400
four times the the sphere number right

2553
02:31:33,530 --> 02:31:39,500
times six its 432 we want to know

2554
02:31:37,399 --> 02:31:42,770
whether that's a multiple of four right

2555
02:31:39,500 --> 02:31:45,050
because and it is so we don't actually

2556
02:31:42,771 --> 02:31:48,950
need the padding unless somebody sets

2557
02:31:45,050 --> 02:31:51,560
this number to something else right so

2558
02:31:48,950 --> 02:31:53,120
it's good that we put that in there we

2559
02:31:51,560 --> 02:31:56,511
do want to be able to check for that

2560
02:31:53,120 --> 02:32:04,061
padding but in this particular case we

2561
02:31:56,511 --> 02:32:04,060
don't actually need it right yeah

2562
02:32:11,219 --> 02:32:14,649
so if we look at those sampling sir you

2563
02:32:13,389 --> 02:32:16,449
can see that doesn't have the padding in

2564
02:32:14,649 --> 02:32:20,760
there now does that make sense but

2565
02:32:16,450 --> 02:32:20,760
you're right it it would need that there

2566
02:32:55,129 --> 02:32:58,550
all of her the best cat says the one

2567
02:32:57,260 --> 02:33:00,529
thing rest has it makes it better than

2568
02:32:58,549 --> 02:33:05,509
C++ no header files that's enough right

2569
02:33:00,529 --> 02:33:07,578
there again it's it's not though like

2570
02:33:05,510 --> 02:33:09,199
I'm not gonna go through the trouble of

2571
02:33:07,578 --> 02:33:11,238
switching everything I do over to

2572
02:33:09,199 --> 02:33:15,770
another programming language just for no

2573
02:33:11,238 --> 02:33:18,408
header files you know that's just not

2574
02:33:15,770 --> 02:33:20,689
enough of a win it's it's good and you

2575
02:33:18,408 --> 02:33:22,538
obviously would want that in any new

2576
02:33:20,689 --> 02:33:27,199
language because header files are absurd

2577
02:33:22,539 --> 02:33:33,399
but you know it's not enough you would

2578
02:33:27,199 --> 02:33:41,658
need a significantly greater you know

2579
02:33:33,398 --> 02:33:43,430
efficiency boost than bad so and what

2580
02:33:41,658 --> 02:33:44,719
will def s that learning curve seems

2581
02:33:43,430 --> 02:33:46,068
through the case with most complicated

2582
02:33:44,719 --> 02:33:48,049
programming topics this is referring

2583
02:33:46,068 --> 02:33:49,189
back to the rigidbody stuff I think how

2584
02:33:48,049 --> 02:33:51,618
did you learn these topics when you

2585
02:33:49,189 --> 02:33:54,260
started out slowly and just by reading a

2586
02:33:51,619 --> 02:33:58,189
lot and practicing like doing stuff

2587
02:33:54,260 --> 02:34:00,949
myself you know rigid body dynamics is

2588
02:33:58,189 --> 02:34:02,838
pretty bad when I learned it it was way

2589
02:34:00,949 --> 02:34:04,939
worse because there were no nobody had

2590
02:34:02,838 --> 02:34:06,978
done physics game engines at all pretty

2591
02:34:04,939 --> 02:34:08,779
much Looking Glass was one of the only

2592
02:34:06,978 --> 02:34:12,318
people that really did anything serious

2593
02:34:08,779 --> 02:34:13,998
in that direction so it was really bad

2594
02:34:12,318 --> 02:34:15,680
you had to like basically learn it out

2595
02:34:13,998 --> 02:34:17,628
of mechanics textbooks that weren't

2596
02:34:15,680 --> 02:34:21,918
written in a computational mindset at

2597
02:34:17,629 --> 02:34:23,390
all nowadays a lot of that stuff's a lot

2598
02:34:21,918 --> 02:34:25,279
easier because you can at least go look

2599
02:34:23,389 --> 02:34:28,068
at papers that just are like oh hey

2600
02:34:25,279 --> 02:34:29,569
here's how we implement our rigid body

2601
02:34:28,068 --> 02:34:31,609
dynamics you can also go look at like

2602
02:34:29,568 --> 02:34:34,760
public domain physics libraries even and

2603
02:34:31,609 --> 02:34:36,559
just see what they do right so there's a

2604
02:34:34,760 --> 02:34:42,350
lot more resources now but I admit it's

2605
02:34:36,559 --> 02:34:44,028
always a little hard right it's it's

2606
02:34:42,350 --> 02:34:45,828
always a case that when you're learning

2607
02:34:44,029 --> 02:34:48,379
something new it's hard to like put

2608
02:34:45,828 --> 02:34:50,628
yourself in the right mindset and it's

2609
02:34:48,379 --> 02:34:52,879
hard to like know what it is you don't

2610
02:34:50,629 --> 02:34:54,640
know you know and you got to muddle your

2611
02:34:52,879 --> 02:34:58,300
way through it and kind of like just

2612
02:34:54,639 --> 02:35:03,278
work on getting small individual pieces

2613
02:34:58,299 --> 02:35:03,278
at a time right so

2614
02:35:16,250 --> 02:35:19,549
all right

2615
02:35:19,690 --> 02:35:22,780
[Music]

2616
02:35:28,870 --> 02:35:31,971
thanks everyone for joining me for those

2617
02:35:30,921 --> 02:35:33,681
set of handmade here at sort of pleasure

2618
02:35:31,970 --> 02:35:35,779
coding with us always it's not been a

2619
02:35:33,681 --> 02:35:37,940
pleasure coding with yarn straw strip in

2620
02:35:35,780 --> 02:35:40,671
the C++ gang but then again it never is

2621
02:35:37,940 --> 02:35:41,690
what can you do I will be back here

2622
02:35:40,671 --> 02:35:43,280
tomorrow when we'll work on our

2623
02:35:41,690 --> 02:35:46,251
distribution of our points on the sphere

2624
02:35:43,280 --> 02:35:49,070
which is all we really need in order for

2625
02:35:46,251 --> 02:35:51,409
us to be happy campers with our sphere

2626
02:35:49,069 --> 02:35:53,300
IML file which we can then use for a

2627
02:35:51,409 --> 02:35:54,409
lighting sampling with some relative

2628
02:35:53,300 --> 02:35:57,050
certainty that it's doing a good job

2629
02:35:54,409 --> 02:35:59,810
covering the samples that we actually

2630
02:35:57,050 --> 02:36:00,979
need that's it for today I'll be back

2631
02:35:59,810 --> 02:36:03,261
here tomorrow hope see back for that

2632
02:36:00,979 --> 02:36:04,369
till then obviously if you want to

2633
02:36:03,261 --> 02:36:05,479
follow along the source code at home you

2634
02:36:04,370 --> 02:36:07,131
can always pre-order the game on

2635
02:36:05,479 --> 02:36:08,149
handmade hero dot org and it comes to

2636
02:36:07,130 --> 02:36:10,550
the source code so if you want to play

2637
02:36:08,149 --> 02:36:12,290
around with it check that out

2638
02:36:10,550 --> 02:36:13,279
I'll be back here tomorrow till then

2639
02:36:12,290 --> 02:36:14,119
have fun programming and I'll see

2640
02:36:13,280 --> 02:36:17,051
everyone on the Internet

2641
02:36:14,120 --> 02:36:17,051
to use everybody

