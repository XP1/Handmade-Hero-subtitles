1
00:00:00,060 --> 00:00:03,540
hello everyone and welcome to handmade

2
00:00:02,370 --> 00:00:06,660
Hero the show where we code a complete

3
00:00:03,540 --> 00:00:09,059
game live on stream today we are going

4
00:00:06,660 --> 00:00:10,530
to be doing I think I'm gonna play

5
00:00:09,058 --> 00:00:12,599
around with a couple things in the

6
00:00:10,529 --> 00:00:13,678
lighting right now I've gotten the

7
00:00:12,599 --> 00:00:15,630
architecture to a place where I'm pretty

8
00:00:13,679 --> 00:00:17,850
happy with it actually and so now we

9
00:00:15,630 --> 00:00:21,179
just start working on like turning the

10
00:00:17,850 --> 00:00:22,320
crank on variants and speed and so I've

11
00:00:21,179 --> 00:00:24,329
got some ideas about how I want to do

12
00:00:22,320 --> 00:00:26,789
that but we've got a couple of different

13
00:00:24,329 --> 00:00:29,250
things I won't try there so specifically

14
00:00:26,789 --> 00:00:30,300
the two things I want to try today which

15
00:00:29,250 --> 00:00:31,379
I don't know if I'll get to both of them

16
00:00:30,300 --> 00:00:33,899
but we'll get to both of them over the

17
00:00:31,379 --> 00:00:38,159
next two days hopefully is I'd like to

18
00:00:33,899 --> 00:00:41,579
try playing around with not casting the

19
00:00:38,159 --> 00:00:43,979
entire hierarchy basically things that

20
00:00:41,579 --> 00:00:47,670
are far away treating them as more

21
00:00:43,979 --> 00:00:48,898
aggregate elements for example I'd like

22
00:00:47,670 --> 00:00:50,340
to play around with that a little bit

23
00:00:48,899 --> 00:00:52,378
today and then the other thing I'd like

24
00:00:50,340 --> 00:00:53,940
to do is I'd like to put in something

25
00:00:52,378 --> 00:00:57,058
where we can draw our hierarchy because

26
00:00:53,939 --> 00:00:58,890
again right now because we still we were

27
00:00:57,058 --> 00:01:00,329
still trying to lock down how we were

28
00:00:58,890 --> 00:01:04,379
doing our light transport which I think

29
00:01:00,329 --> 00:01:08,189
now I'm pretty happy with what I'd like

30
00:01:04,379 --> 00:01:10,049
to I had never really gotten to the

31
00:01:08,188 --> 00:01:11,309
point of let's look at our spatial harpy

32
00:01:10,049 --> 00:01:13,229
and see if it's actually doing the work

33
00:01:11,310 --> 00:01:14,939
we think it's doing and if we can

34
00:01:13,228 --> 00:01:16,769
improve it etcetera we never did that

35
00:01:14,938 --> 00:01:18,149
right so we just threw one in there and

36
00:01:16,769 --> 00:01:19,289
we're like okay we got to put we know we

37
00:01:18,150 --> 00:01:21,210
need a hierarchy in here so let's put

38
00:01:19,290 --> 00:01:23,070
one in but we haven't actually gone and

39
00:01:21,209 --> 00:01:24,149
really done much with it so that's

40
00:01:23,069 --> 00:01:25,199
another thing that we have to do so

41
00:01:24,150 --> 00:01:30,180
those are two things we're gonna be

42
00:01:25,200 --> 00:01:36,950
doing today is day 429 Sauve 428 source

43
00:01:30,180 --> 00:01:40,170
code is what I'm looking at here alright

44
00:01:36,950 --> 00:01:44,759
and so then as of last week we had

45
00:01:40,170 --> 00:01:46,439
gotten to the point where we were pretty

46
00:01:44,759 --> 00:01:51,180
happy with how the light transport was

47
00:01:46,438 --> 00:01:53,309
stabilizing I think we are still yeah I

48
00:01:51,180 --> 00:01:55,640
think we are still using a high number

49
00:01:53,310 --> 00:01:59,030
of bounces that I remember correctly

50
00:01:55,640 --> 00:01:59,030
because we're in

51
00:02:02,109 --> 00:02:09,949
they count hoops you can see here that

52
00:02:06,409 --> 00:02:11,240
we crank the rate count up to 256 and if

53
00:02:09,949 --> 00:02:12,859
we take a look at what's happening here

54
00:02:11,240 --> 00:02:15,020
so this is a pretty slow running versus

55
00:02:12,860 --> 00:02:16,520
gaming mouses optimized you can kind of

56
00:02:15,020 --> 00:02:18,800
see that the lighting is actually pretty

57
00:02:16,520 --> 00:02:20,870
stable here though with the way things

58
00:02:18,800 --> 00:02:23,000
are going so if this were running at

59
00:02:20,870 --> 00:02:25,219
60fps we would probably just call it

60
00:02:23,000 --> 00:02:26,479
done and so the real problem here that

61
00:02:25,219 --> 00:02:29,560
we're looking at is just the fact that

62
00:02:26,479 --> 00:02:33,859
we can't get that stable of a variance

63
00:02:29,560 --> 00:02:38,780
without the speed hit now we certainly

64
00:02:33,860 --> 00:02:40,459
can just go ahead and crank up the rate

65
00:02:38,780 --> 00:02:42,849
count to something like 286 and then do

66
00:02:40,459 --> 00:02:45,110
like more parallelism and more optimal

67
00:02:42,849 --> 00:02:47,479
calculations that would probably be fine

68
00:02:45,110 --> 00:02:49,580
for this scene but then again once we

69
00:02:47,479 --> 00:02:52,879
start adding more stuff into the mix it

70
00:02:49,580 --> 00:02:54,440
becomes more problematic right so when

71
00:02:52,879 --> 00:02:56,719
we drop the Ray count down to something

72
00:02:54,439 --> 00:02:59,180
more manageable such as this and now you

73
00:02:56,719 --> 00:03:00,590
can see that we are running more at like

74
00:02:59,180 --> 00:03:03,110
we're running at 60 frames a second here

75
00:03:00,590 --> 00:03:05,000
now and this is totally acceptable frame

76
00:03:03,110 --> 00:03:06,620
rate but you can sort of see how we get

77
00:03:05,000 --> 00:03:08,629
this flicker in there now that flicker

78
00:03:06,620 --> 00:03:10,370
you know you could always just say that

79
00:03:08,629 --> 00:03:12,229
all the lights in the game or fire and

80
00:03:10,370 --> 00:03:14,629
they have a natural flicker to them you

81
00:03:12,229 --> 00:03:17,238
can solve problems in tech with fiction

82
00:03:14,629 --> 00:03:19,129
and that's always fine too I don't

83
00:03:17,239 --> 00:03:21,439
discourage people from doing that

84
00:03:19,129 --> 00:03:24,019
because hey man it's all black arts when

85
00:03:21,439 --> 00:03:25,579
we're trying to do things like simulate

86
00:03:24,019 --> 00:03:28,789
lighting or things like this that we

87
00:03:25,579 --> 00:03:30,260
know to be intractable problems at 60

88
00:03:28,789 --> 00:03:31,789
frames per second currently anyway

89
00:03:30,259 --> 00:03:33,169
everything is an approximation so

90
00:03:31,789 --> 00:03:33,560
whatever solution you want to use it's

91
00:03:33,169 --> 00:03:38,298
fine

92
00:03:33,560 --> 00:03:39,920
but at least for the time being I'm not

93
00:03:38,299 --> 00:03:41,659
gonna go ahead and go that route yet

94
00:03:39,919 --> 00:03:44,889
because there's still a lot more we can

95
00:03:41,659 --> 00:03:48,620
do here to try and work out what we're

96
00:03:44,889 --> 00:03:50,988
to try and improve the stability of the

97
00:03:48,620 --> 00:03:53,810
solution and so I'd like to go ahead and

98
00:03:50,989 --> 00:03:57,079
do that and so that's mainly what we're

99
00:03:53,810 --> 00:03:59,000
talking about here is is going ahead and

100
00:03:57,079 --> 00:04:03,109
figuring out how to continue to improve

101
00:03:59,000 --> 00:04:06,799
upon that sort of that stability and

102
00:04:03,109 --> 00:04:08,450
just making it more clean so a couple of

103
00:04:06,799 --> 00:04:09,889
things we can do now let's talk about

104
00:04:08,449 --> 00:04:14,719
what those are and the things that I

105
00:04:09,889 --> 00:04:17,389
want to sort of get underway here

106
00:04:14,719 --> 00:04:19,399
I'm gonna load up Milton which by the

107
00:04:17,389 --> 00:04:22,909
way Milton's been awesome ever since

108
00:04:19,399 --> 00:04:26,289
that they found the bug in in the ape in

109
00:04:22,910 --> 00:04:28,760
the what's that thing called Penn

110
00:04:26,290 --> 00:04:30,770
there's some kind of Penn thing that it

111
00:04:28,759 --> 00:04:35,659
uses I think it was from papaya

112
00:04:30,769 --> 00:04:36,799
originally I'm sorry I don't remember

113
00:04:35,660 --> 00:04:39,350
what it was but ever since they found

114
00:04:36,800 --> 00:04:43,220
the bug in that milton's been super

115
00:04:39,350 --> 00:04:46,370
stable just a pleasure to use it's nuts

116
00:04:43,220 --> 00:04:47,960
to think about how I don't even know can

117
00:04:46,370 --> 00:04:50,840
we look out here it's nice to think

118
00:04:47,959 --> 00:04:54,799
about how big this thing is is there a

119
00:04:50,839 --> 00:04:56,839
way to zoom level one one one one one is

120
00:04:54,800 --> 00:05:00,319
what we're on I guess it's nuts to look

121
00:04:56,839 --> 00:05:02,899
at like how much stuff this thing does

122
00:05:00,319 --> 00:05:05,029
it's like super good and it's very fast

123
00:05:02,899 --> 00:05:07,429
like think about all this stuff that's

124
00:05:05,029 --> 00:05:09,799
in here how much pen strokes there are

125
00:05:07,430 --> 00:05:15,500
and it just kind of handles it all it's

126
00:05:09,800 --> 00:05:18,829
just a good program I think that I don't

127
00:05:15,500 --> 00:05:20,569
know sir if you did a fantastic job

128
00:05:18,829 --> 00:05:22,189
getting this thing going I mean look at

129
00:05:20,569 --> 00:05:23,060
all this stuff and it just kind of runs

130
00:05:22,189 --> 00:05:25,430
right through it

131
00:05:23,060 --> 00:05:27,379
it saves incrementally perfectly -

132
00:05:25,430 --> 00:05:30,560
there's no lag on save anymore he's just

133
00:05:27,379 --> 00:05:32,329
this is a good program you know it's

134
00:05:30,560 --> 00:05:36,589
just a really good program look at look

135
00:05:32,329 --> 00:05:44,959
at that that's great you know very very

136
00:05:36,589 --> 00:05:47,168
well done anyway let's go back here here

137
00:05:44,959 --> 00:05:47,168
we go

138
00:05:48,910 --> 00:06:00,500
so I just want to talk about some

139
00:05:55,660 --> 00:06:03,910
lighting bombs that we could make so

140
00:06:00,500 --> 00:06:03,910
let's talk about a couple of these here

141
00:06:05,050 --> 00:06:09,970
so one thing I talked about is

142
00:06:07,069 --> 00:06:09,969
stratified sampling

143
00:06:11,980 --> 00:06:16,750
let's talk about that too

144
00:06:22,660 --> 00:06:35,750
Multi red sampling and number three I

145
00:06:31,879 --> 00:06:43,788
think I mentioned this before it's

146
00:06:35,750 --> 00:06:45,050
bi-directional so we've got a number of

147
00:06:43,788 --> 00:06:46,719
different things we can be doing here

148
00:06:45,050 --> 00:06:49,400
that again are not these are not

149
00:06:46,720 --> 00:06:52,220
optimizations in the I'm gonna go ahead

150
00:06:49,399 --> 00:06:54,918
and try to save cycles specifically on

151
00:06:52,220 --> 00:06:57,919
some given algorithm sense this is more

152
00:06:54,918 --> 00:07:01,279
about algorithmic optimization just can

153
00:06:57,918 --> 00:07:06,139
we be doing something smarter that works

154
00:07:01,279 --> 00:07:07,879
better you know and and produces a more

155
00:07:06,139 --> 00:07:12,220
stable result just by doing the math

156
00:07:07,879 --> 00:07:15,050
differently right or whatever so let's

157
00:07:12,220 --> 00:07:17,840
talk about stratified sampling so right

158
00:07:15,050 --> 00:07:20,449
now what we're doing is on any given

159
00:07:17,839 --> 00:07:22,189
frame if we imagine the Hemisphere and

160
00:07:20,449 --> 00:07:24,348
I'll draw it in 2d but obviously it's

161
00:07:22,189 --> 00:07:25,968
actually three dimensional z-- right so

162
00:07:24,348 --> 00:07:28,848
it's it's a you know it's actually a

163
00:07:25,968 --> 00:07:32,990
proper hemisphere not a hema circle or a

164
00:07:28,848 --> 00:07:36,019
semicircle so if you imagine we have a

165
00:07:32,990 --> 00:07:38,718
surface with this normal and we go to

166
00:07:36,019 --> 00:07:41,538
sample it I mentioned this briefly the

167
00:07:38,718 --> 00:07:51,079
other day right now we're using pure

168
00:07:41,538 --> 00:07:52,908
white noise and you know I'm gonna even

169
00:07:51,079 --> 00:07:54,199
put that in quotes because we're not

170
00:07:52,908 --> 00:07:57,019
even really using that if you remember

171
00:07:54,199 --> 00:07:59,180
we've never really even gotten a proper

172
00:07:57,019 --> 00:08:02,750
random number generator in here we just

173
00:07:59,180 --> 00:08:04,639
have a table right because I just said

174
00:08:02,750 --> 00:08:06,139
let's deal will deal with random number

175
00:08:04,639 --> 00:08:08,598
generation later cuz we want to kind of

176
00:08:06,139 --> 00:08:10,189
talk about that as a topic so you know

177
00:08:08,598 --> 00:08:12,168
this we're just using this table and

178
00:08:10,189 --> 00:08:13,759
that's not a very good way to do it cuz

179
00:08:12,168 --> 00:08:16,639
the period of this thing is pretty short

180
00:08:13,759 --> 00:08:18,050
right now we don't know that that's

181
00:08:16,639 --> 00:08:21,319
necessarily a problem for us in practice

182
00:08:18,050 --> 00:08:22,968
right now but that could be too so using

183
00:08:21,319 --> 00:08:24,650
a proper random number generator that we

184
00:08:22,968 --> 00:08:28,300
have some work guarantees about and that

185
00:08:24,649 --> 00:08:31,489
has a longer period might be helpful but

186
00:08:28,300 --> 00:08:33,168
even if we had proper pure white noise

187
00:08:31,490 --> 00:08:35,009
that was act that we actually measured

188
00:08:33,168 --> 00:08:38,129
and where nu was good

189
00:08:35,009 --> 00:08:40,860
an input white noise might not be the

190
00:08:38,129 --> 00:08:43,769
best thing for us for sampling the

191
00:08:40,860 --> 00:08:46,669
incoming light now why the answer is

192
00:08:43,769 --> 00:08:50,819
because white noise is a completely

193
00:08:46,669 --> 00:08:53,879
truly random in the semantic sense of

194
00:08:50,820 --> 00:08:56,900
the word so when you say random what

195
00:08:53,879 --> 00:09:00,330
you're thinking about in your head is no

196
00:08:56,899 --> 00:09:03,360
coherence no correlation no properties

197
00:09:00,330 --> 00:09:07,290
at all right you're thinking that that

198
00:09:03,360 --> 00:09:09,860
from one to the next the information

199
00:09:07,289 --> 00:09:12,899
you're getting out of a random source

200
00:09:09,860 --> 00:09:14,129
you can say nothing about it relative to

201
00:09:12,899 --> 00:09:17,730
the previous thing right it's like

202
00:09:14,129 --> 00:09:19,309
cryptographically andum miss in a sense

203
00:09:17,730 --> 00:09:21,240
you're talking about something

204
00:09:19,309 --> 00:09:25,289
unpredictable we can't say anything

205
00:09:21,240 --> 00:09:27,240
about it now a good white noise

206
00:09:25,289 --> 00:09:29,039
generator is something that is very

207
00:09:27,240 --> 00:09:32,039
close to that now we know that we can't

208
00:09:29,039 --> 00:09:35,789
really get true unpredictable stuff out

209
00:09:32,039 --> 00:09:38,809
of a deterministic machine so unless we

210
00:09:35,789 --> 00:09:42,449
use for example the Rd R and instruction

211
00:09:38,809 --> 00:09:45,359
or something like this on the Intel CPU

212
00:09:42,450 --> 00:09:48,270
which maybe produces real randomness I'm

213
00:09:45,360 --> 00:09:51,180
not really sure they I don't think they

214
00:09:48,269 --> 00:09:53,399
will tell anyone how it works so that's

215
00:09:51,179 --> 00:09:55,409
I don't really know but ignoring that

216
00:09:53,399 --> 00:09:58,590
fact anything we're doing that's

217
00:09:55,409 --> 00:10:00,149
pseudo-random is obviously not truly

218
00:09:58,590 --> 00:10:03,330
white noise it's not truly unpredictable

219
00:10:00,149 --> 00:10:05,850
but its goal is to be as close to white

220
00:10:03,330 --> 00:10:08,160
noise as possible as close to completely

221
00:10:05,850 --> 00:10:10,379
unpredictable as possible and what does

222
00:10:08,159 --> 00:10:12,899
that mean well it means that as the

223
00:10:10,379 --> 00:10:18,600
number of samples you take out of the

224
00:10:12,899 --> 00:10:22,559
white noise goes down right you end up

225
00:10:18,600 --> 00:10:26,159
with highly potentially biased placement

226
00:10:22,559 --> 00:10:31,289
on your hemisphere why because let's say

227
00:10:26,159 --> 00:10:33,809
we only take two samples right well

228
00:10:31,289 --> 00:10:35,789
intuitively we know we'd like to take

229
00:10:33,809 --> 00:10:39,569
like one sample this way in one sample

230
00:10:35,789 --> 00:10:42,029
that way ish because if we don't sample

231
00:10:39,570 --> 00:10:44,070
one direction at all then we're very

232
00:10:42,029 --> 00:10:45,990
likely to have variance that goes we're

233
00:10:44,070 --> 00:10:47,970
just if the light source was over here

234
00:10:45,990 --> 00:10:48,779
and we're shooting this way we won't see

235
00:10:47,970 --> 00:10:51,899
it at all

236
00:10:48,779 --> 00:10:53,789
right so coverage is kind of important

237
00:10:51,899 --> 00:10:55,709
to us when we're sampling this

238
00:10:53,789 --> 00:10:58,589
hemisphere we need some coverage a

239
00:10:55,710 --> 00:11:00,870
little bit at least but what we know

240
00:10:58,590 --> 00:11:03,269
about white noise is it's not even

241
00:11:00,870 --> 00:11:06,029
remotely interested in that a truly

242
00:11:03,269 --> 00:11:08,429
random sequence will just as likely pick

243
00:11:06,029 --> 00:11:10,169
two things here as it will pick a thing

244
00:11:08,429 --> 00:11:12,870
here in thing here because the first

245
00:11:10,169 --> 00:11:16,740
first one should have no relationship to

246
00:11:12,870 --> 00:11:19,950
the second one now it's not true that

247
00:11:16,740 --> 00:11:22,230
maybe if you take any two it is more

248
00:11:19,950 --> 00:11:24,300
likely that one will be here than then

249
00:11:22,230 --> 00:11:25,830
two in there slightly more likely in

250
00:11:24,299 --> 00:11:28,649
white noise because once you consider

251
00:11:25,830 --> 00:11:30,389
two at a time it's different right but

252
00:11:28,649 --> 00:11:31,829
once you know that one is here for

253
00:11:30,389 --> 00:11:34,289
example that doesn't increase the

254
00:11:31,830 --> 00:11:36,420
likelihood that one will be here here

255
00:11:34,289 --> 00:11:38,429
right it's like a coin toss just because

256
00:11:36,419 --> 00:11:40,169
you know one came up heads doesn't mean

257
00:11:38,429 --> 00:11:43,709
the next one is now more likely to come

258
00:11:40,169 --> 00:11:45,500
up tails right I know that's a little

259
00:11:43,710 --> 00:11:48,330
confusing but that statistics for you

260
00:11:45,500 --> 00:11:51,960
our probability I should say but the

261
00:11:48,330 --> 00:11:53,490
plane is regardless of how you want to

262
00:11:51,960 --> 00:11:56,850
think about the marginal probabilities

263
00:11:53,490 --> 00:11:59,970
there the overall effect is that the

264
00:11:56,850 --> 00:12:02,519
algorithm does not overwhelmingly prefer

265
00:11:59,970 --> 00:12:05,340
an even distribution across the

266
00:12:02,519 --> 00:12:07,139
hemisphere because by nature a random

267
00:12:05,340 --> 00:12:09,960
distribution is not supposed to

268
00:12:07,139 --> 00:12:13,319
guarantee evenness if it did it would be

269
00:12:09,960 --> 00:12:18,019
much more predictable than white noise

270
00:12:13,320 --> 00:12:20,820
is then randomness is right

271
00:12:18,019 --> 00:12:28,590
so what stratified sampling or other

272
00:12:20,820 --> 00:12:34,350
forms of biased sampling do is they say

273
00:12:28,590 --> 00:12:38,790
look we may want randomness for certain

274
00:12:34,350 --> 00:12:41,399
purposes the purpose we want randomness

275
00:12:38,789 --> 00:12:43,319
for in this scheme is because we know

276
00:12:41,399 --> 00:12:45,959
we're not going to cast an infinity of

277
00:12:43,320 --> 00:12:48,030
raise or close to infinity of raise so

278
00:12:45,960 --> 00:12:51,540
we know that we can't use a complete

279
00:12:48,029 --> 00:12:54,059
coverage so over time we would like to

280
00:12:51,539 --> 00:12:56,250
get a complete coverage by randomly

281
00:12:54,059 --> 00:12:58,979
moving around the space that's what we

282
00:12:56,250 --> 00:13:02,129
want the randomness for but on any given

283
00:12:58,980 --> 00:13:02,440
frame in order to retain a fairly good

284
00:13:02,129 --> 00:13:04,480
pick

285
00:13:02,440 --> 00:13:06,760
sure of what the lighting is we don't

286
00:13:04,480 --> 00:13:09,399
want all of our casts to end up going in

287
00:13:06,759 --> 00:13:11,580
one direction so we want to force the

288
00:13:09,399 --> 00:13:15,909
randomness to work within say

289
00:13:11,580 --> 00:13:18,310
compartments of the hemisphere so that

290
00:13:15,909 --> 00:13:21,009
we know we're not gonna be randomly

291
00:13:18,309 --> 00:13:23,169
clumping on certain frames which will

292
00:13:21,009 --> 00:13:25,269
drastically bias what we think the

293
00:13:23,169 --> 00:13:27,039
lighting is on that frame versus on

294
00:13:25,269 --> 00:13:29,500
another frame where the distribution may

295
00:13:27,039 --> 00:13:32,649
have been more even so stratified

296
00:13:29,500 --> 00:13:35,169
sampling says let's make compartments of

297
00:13:32,649 --> 00:13:36,970
the hemisphere and force the white noise

298
00:13:35,169 --> 00:13:40,689
to be distributed over that atmosphere

299
00:13:36,970 --> 00:13:45,190
more cleanly right in a way that is less

300
00:13:40,690 --> 00:13:47,650
random but perhaps better so we are

301
00:13:45,190 --> 00:13:50,440
reducing the randomness in an attempt to

302
00:13:47,649 --> 00:13:53,439
try and make things more consistent

303
00:13:50,440 --> 00:13:55,570
right now there's two ways we can do

304
00:13:53,440 --> 00:13:58,420
this as stratified sampling isn't maybe

305
00:13:55,570 --> 00:14:03,340
necessarily the only word right so I've

306
00:13:58,419 --> 00:14:05,399
talked about blue noise in the past so

307
00:14:03,340 --> 00:14:08,019
white noise is just dart throwing

308
00:14:05,399 --> 00:14:10,329
randomness I don't know I just get a

309
00:14:08,019 --> 00:14:12,039
bunch of points right some of those

310
00:14:10,330 --> 00:14:13,509
points are very close together some of

311
00:14:12,039 --> 00:14:15,370
those points are very far apart and

312
00:14:13,509 --> 00:14:18,970
that's just how it goes that's white

313
00:14:15,370 --> 00:14:22,560
noise purely random blue noise on the

314
00:14:18,970 --> 00:14:24,910
other hand once I throw down a dart I

315
00:14:22,559 --> 00:14:27,579
restrict the ring around the dart and

316
00:14:24,909 --> 00:14:31,389
say no one can throw a dart anywhere in

317
00:14:27,580 --> 00:14:32,950
here right so what that gives me is it

318
00:14:31,389 --> 00:14:36,179
gives me a distribution where I know

319
00:14:32,950 --> 00:14:37,300
that all the points are somewhat

320
00:14:36,179 --> 00:14:40,149
separated

321
00:14:37,299 --> 00:14:43,449
I cannot cluster around a particular

322
00:14:40,149 --> 00:14:48,100
area right blue noise is not technically

323
00:14:43,450 --> 00:14:53,110
stratified sampling stratified sampling

324
00:14:48,100 --> 00:14:55,000
means random within buckets so you can

325
00:14:53,110 --> 00:14:58,089
still have some clumping here in a

326
00:14:55,000 --> 00:14:59,860
stratified sample right or you might not

327
00:14:58,089 --> 00:15:01,060
have clumping within the buckets but you

328
00:14:59,860 --> 00:15:02,200
may say well I'm gonna pick something

329
00:15:01,059 --> 00:15:03,909
random in this bucket so here in this

330
00:15:02,200 --> 00:15:05,470
bucket and the two things in either

331
00:15:03,909 --> 00:15:06,309
bucket happen to end up very close to

332
00:15:05,470 --> 00:15:09,519
each other because I'm not checking

333
00:15:06,309 --> 00:15:11,259
within the buckets right so stratified

334
00:15:09,519 --> 00:15:13,569
sampling and blue noise are actually a

335
00:15:11,259 --> 00:15:15,669
bit different technically oftentimes

336
00:15:13,570 --> 00:15:16,240
stratified sampling does not indicate a

337
00:15:15,669 --> 00:15:18,338
minimum

338
00:15:16,240 --> 00:15:21,399
distance between points blue noise does

339
00:15:18,339 --> 00:15:24,459
blue noise says no two points can be

340
00:15:21,399 --> 00:15:28,450
closer than this period that's the

341
00:15:24,458 --> 00:15:35,619
definition of it right this is also

342
00:15:28,450 --> 00:15:38,580
called for some reason Plus on disk let

343
00:15:35,620 --> 00:15:38,580
me just get these up for you

344
00:15:48,000 --> 00:16:04,330
know that ya know it's a see there you

345
00:15:57,789 --> 00:16:08,409
go so hmm what you can see here plays

346
00:16:04,330 --> 00:16:11,770
different kinds so blue noise is the

347
00:16:08,409 --> 00:16:17,139
name that's used for this pattern of

348
00:16:11,769 --> 00:16:21,490
sort of random but not if you will that

349
00:16:17,139 --> 00:16:23,889
has points that are required to be a

350
00:16:21,490 --> 00:16:25,259
certain distance from each other and the

351
00:16:23,889 --> 00:16:28,870
reason that this is an interesting

352
00:16:25,259 --> 00:16:30,819
phenomenon for a lot of reasons is

353
00:16:28,870 --> 00:16:35,379
because it actually came from the

354
00:16:30,820 --> 00:16:40,180
retinal cells you can you can see them

355
00:16:35,379 --> 00:16:45,100
saying that here see Oh Tom Mitchell is

356
00:16:40,179 --> 00:16:48,959
here he was the person who originally

357
00:16:45,100 --> 00:16:48,960
taught me about blue noise in fact

358
00:16:49,679 --> 00:16:57,729
anyway he was an 18 to 18 t guy he then

359
00:16:53,019 --> 00:17:00,819
went to UM he then went to Microsoft

360
00:16:57,730 --> 00:17:02,139
Research and he's retired now I haven't

361
00:17:00,820 --> 00:17:05,019
seen him in a while I tried to email him

362
00:17:02,139 --> 00:17:08,529
actually 2-3 years ago and never heard

363
00:17:05,019 --> 00:17:12,129
back I hope he's doing okay anyway he's

364
00:17:08,529 --> 00:17:14,399
a great guy and he was doing originally

365
00:17:12,130 --> 00:17:16,270
taught me about blue noise and anyway he

366
00:17:14,400 --> 00:17:19,060
originally started looking into blue

367
00:17:16,269 --> 00:17:21,699
noise specifically because it's the way

368
00:17:19,059 --> 00:17:25,240
that your eye the cells in your eye are

369
00:17:21,699 --> 00:17:27,970
set up and it helps eliminate regular

370
00:17:25,240 --> 00:17:32,339
patterns because if you imagine setting

371
00:17:27,970 --> 00:17:32,339
up the samples for things in your eye

372
00:17:32,369 --> 00:17:36,489
however getting off-topic here but this

373
00:17:34,509 --> 00:17:38,200
is interesting stuff to me if you

374
00:17:36,490 --> 00:17:40,210
imagine the way that your eye works

375
00:17:38,200 --> 00:17:43,720
right it's essentially like a like a

376
00:17:40,210 --> 00:17:45,250
photograph plane where you've got an

377
00:17:43,720 --> 00:17:46,809
image that's going through a lens like

378
00:17:45,250 --> 00:17:48,579
like light that's going through a lens

379
00:17:46,809 --> 00:17:50,649
and it's hitting this sort of film back

380
00:17:48,579 --> 00:17:52,689
almost and the film back is your retinal

381
00:17:50,650 --> 00:17:54,280
cells right and they're sort of

382
00:17:52,690 --> 00:17:55,690
developing the image if you will they're

383
00:17:54,279 --> 00:17:57,160
taking the light that comes in and then

384
00:17:55,690 --> 00:17:57,519
your optic nerve is like counting it

385
00:17:57,160 --> 00:17:59,290
right

386
00:17:57,519 --> 00:18:01,690
saying like how much of that light is

387
00:17:59,289 --> 00:18:03,399
hitting it if you imagine placing those

388
00:18:01,690 --> 00:18:07,840
cells regularly if they were highly

389
00:18:03,400 --> 00:18:11,140
regularly set up right then what happens

390
00:18:07,839 --> 00:18:13,029
is as a shape moves across it but as the

391
00:18:11,140 --> 00:18:15,100
light moves across it you would see

392
00:18:13,029 --> 00:18:17,170
regular patterns like stair stepping and

393
00:18:15,099 --> 00:18:19,689
stuff like this because you're always

394
00:18:17,170 --> 00:18:21,340
gonna do sort of that that linear

395
00:18:19,690 --> 00:18:22,720
filtering between the two as it moves

396
00:18:21,339 --> 00:18:24,699
from one to the other you're gonna see

397
00:18:22,720 --> 00:18:27,190
these sort of regular stair stepping

398
00:18:24,700 --> 00:18:30,190
patterns as a shape for example but that

399
00:18:27,190 --> 00:18:32,950
looks like that you'll see the sort of

400
00:18:30,190 --> 00:18:34,750
gradual regular pattern of it getting

401
00:18:32,950 --> 00:18:39,970
dimmer dimmer dimmer dimmer across each

402
00:18:34,750 --> 00:18:43,089
row right if instead they're set up in a

403
00:18:39,970 --> 00:18:46,180
blue noise pattern like this sort of

404
00:18:43,089 --> 00:18:54,490
thing then because you now don't have

405
00:18:46,180 --> 00:18:56,140
any particularly regular way because

406
00:18:54,490 --> 00:18:58,480
it's always a little bit random you'll

407
00:18:56,140 --> 00:19:00,190
always get some noise in there that

408
00:18:58,480 --> 00:19:01,660
makes it so you don't see repeating

409
00:19:00,190 --> 00:19:03,400
patterns because there is no way to

410
00:19:01,660 --> 00:19:05,920
construct a repeating pattern unless the

411
00:19:03,400 --> 00:19:08,500
thing that's coming in is the exact blue

412
00:19:05,920 --> 00:19:11,350
noise complement of them of the surf of

413
00:19:08,500 --> 00:19:14,009
the cells themselves right which never

414
00:19:11,349 --> 00:19:15,789
happens not really possible right so

415
00:19:14,009 --> 00:19:17,650
essentially what a blue noise pattern

416
00:19:15,789 --> 00:19:20,319
does is it makes it so that you get the

417
00:19:17,650 --> 00:19:22,540
most pleasing anti-aliasing possible on

418
00:19:20,319 --> 00:19:27,250
your image because nothing can produce a

419
00:19:22,539 --> 00:19:29,259
regular pattern for you to pick out um

420
00:19:27,250 --> 00:19:31,359
so blue noise is in effect the holy

421
00:19:29,259 --> 00:19:33,609
grail of sampling pretty much always

422
00:19:31,359 --> 00:19:35,789
it's always what you would use if you

423
00:19:33,609 --> 00:19:39,099
could now it's much harder to generate

424
00:19:35,789 --> 00:19:41,139
than anything else because it's by

425
00:19:39,099 --> 00:19:44,019
default something that only is defined

426
00:19:41,140 --> 00:19:48,550
by a constraint applied to white noise

427
00:19:44,019 --> 00:19:49,869
effectively it's basically saying take a

428
00:19:48,549 --> 00:19:54,250
white noise pattern and remove all the

429
00:19:49,869 --> 00:19:58,149
points that are too close that's kind of

430
00:19:54,250 --> 00:20:00,490
how it's defined and you can generate

431
00:19:58,150 --> 00:20:02,140
them in quicker ways in fact I talked

432
00:20:00,490 --> 00:20:04,680
about that in my articles on how the

433
00:20:02,140 --> 00:20:07,150
witness grass planting system works

434
00:20:04,680 --> 00:20:08,529
which I always meant to do a second

435
00:20:07,150 --> 00:20:09,970
update too because I actually updated

436
00:20:08,529 --> 00:20:11,980
the witnesses

437
00:20:09,970 --> 00:20:15,839
grass planting system subsequent to that

438
00:20:11,980 --> 00:20:23,980
but that's the whole nother story anyway

439
00:20:15,839 --> 00:20:25,419
sooo what we have here is kind of a an

440
00:20:23,980 --> 00:20:27,640
argument for what we want to do

441
00:20:25,420 --> 00:20:29,740
optimally which is if we could sample

442
00:20:27,640 --> 00:20:32,800
these hemispheres with a nice plus on

443
00:20:29,740 --> 00:20:34,299
disk or blue noise pattern we would be

444
00:20:32,799 --> 00:20:35,730
the happiest possible people because

445
00:20:34,299 --> 00:20:42,819
then we would sort of know that we were

446
00:20:35,730 --> 00:20:44,289
maximizing our samples right maximizing

447
00:20:42,819 --> 00:20:47,019
them from a perspective of not knowing

448
00:20:44,289 --> 00:20:48,879
what we're aiming at now there's this

449
00:20:47,019 --> 00:20:52,180
concepts of concept of important

450
00:20:48,880 --> 00:20:54,490
sampling which is to say that we may not

451
00:20:52,180 --> 00:20:56,080
really want to cover things uniformly it

452
00:20:54,490 --> 00:20:57,460
may be that we know we should cover

453
00:20:56,079 --> 00:21:02,139
things more in one direction or another

454
00:20:57,460 --> 00:21:03,789
that's a separate issue that's sort of

455
00:21:02,140 --> 00:21:05,530
saying that if we have information about

456
00:21:03,789 --> 00:21:06,940
where we're likely to get more signal

457
00:21:05,529 --> 00:21:09,970
maybe we should aim more heavily there

458
00:21:06,940 --> 00:21:11,980
right and that's fine but what we're

459
00:21:09,970 --> 00:21:13,870
talking about is in the absence of the

460
00:21:11,980 --> 00:21:15,910
guidance or even once we have the

461
00:21:13,869 --> 00:21:18,189
guidance how do we then distribute our

462
00:21:15,910 --> 00:21:21,580
samples along the area that the guidance

463
00:21:18,190 --> 00:21:23,350
wants us to use right and the answer is

464
00:21:21,579 --> 00:21:24,909
always blue noise if you could you'd

465
00:21:23,349 --> 00:21:27,039
always use a blue noise pattern in a

466
00:21:24,910 --> 00:21:30,850
sample if you could again blue noise

467
00:21:27,039 --> 00:21:32,619
potentially adjusted by some bias if you

468
00:21:30,849 --> 00:21:34,240
know you want to shoot one area more

469
00:21:32,619 --> 00:21:35,679
heavily you still want blue noise but

470
00:21:34,240 --> 00:21:37,450
you just kind of shrink so they're

471
00:21:35,680 --> 00:21:39,039
closer together towards one and further

472
00:21:37,450 --> 00:21:40,269
away towards the other you would still

473
00:21:39,039 --> 00:21:44,139
use blue noise because it's always

474
00:21:40,269 --> 00:21:49,089
better pretty much you never really want

475
00:21:44,140 --> 00:21:51,340
white noise so given that fact how would

476
00:21:49,089 --> 00:21:52,720
we do this in practice how would we get

477
00:21:51,339 --> 00:21:54,099
something that was gonna do the

478
00:21:52,720 --> 00:21:56,200
stratified sampling well we've got two

479
00:21:54,099 --> 00:22:00,789
options one is we can really do blue

480
00:21:56,200 --> 00:22:02,769
noise and if we want to do blue noise

481
00:22:00,789 --> 00:22:05,889
the cost there is that we can only have

482
00:22:02,769 --> 00:22:07,210
a limited number of patterns the other

483
00:22:05,890 --> 00:22:09,520
is that we can do stratified sampling

484
00:22:07,210 --> 00:22:12,190
then we can do random every frame now

485
00:22:09,519 --> 00:22:14,589
what do I mean by this well let's

486
00:22:12,190 --> 00:22:17,110
suppose we want to do stratified

487
00:22:14,589 --> 00:22:19,959
sampling it's trivial right all we have

488
00:22:17,109 --> 00:22:21,279
to do is define how we're going to you

489
00:22:19,960 --> 00:22:24,100
know talk about quadrants let's say we

490
00:22:21,279 --> 00:22:27,639
divide the hemisphere into four pieces

491
00:22:24,099 --> 00:22:30,129
and we just do white noise in each piece

492
00:22:27,640 --> 00:22:32,080
right to white noise samples in each

493
00:22:30,130 --> 00:22:34,210
piece there's some free stratified

494
00:22:32,079 --> 00:22:36,429
sampling right maybe we think a little

495
00:22:34,210 --> 00:22:41,620
further and we say well we've got a cone

496
00:22:36,430 --> 00:22:43,660
that's facing sort of outwards like the

497
00:22:41,619 --> 00:22:46,599
main cone of interest and then we've got

498
00:22:43,660 --> 00:22:50,890
sort of the the area around the cone so

499
00:22:46,599 --> 00:22:53,740
maybe we shoot you know say eight if we

500
00:22:50,890 --> 00:22:56,440
do sixteen rays maybe we shoot eight out

501
00:22:53,740 --> 00:22:59,230
the cone randomly white noise and then

502
00:22:56,440 --> 00:23:01,090
we do you know four around the the I'm

503
00:22:59,230 --> 00:23:02,920
sorry eight around the cone by just

504
00:23:01,089 --> 00:23:07,179
picking white noise around each of the

505
00:23:02,920 --> 00:23:08,320
octants right so it's pretty easy to

506
00:23:07,180 --> 00:23:09,970
imagine how we would implement

507
00:23:08,319 --> 00:23:11,289
stratified sampling it's not much

508
00:23:09,970 --> 00:23:13,120
different than what we have now you just

509
00:23:11,289 --> 00:23:15,339
throw it in there and go okay rather

510
00:23:13,119 --> 00:23:17,469
than just say pick any random thing on

511
00:23:15,339 --> 00:23:18,789
the hemisphere we're just gonna say pick

512
00:23:17,470 --> 00:23:20,890
something close to a particular

513
00:23:18,789 --> 00:23:25,569
direction on the hemisphere with white

514
00:23:20,890 --> 00:23:26,890
noise and I forget so a stratified

515
00:23:25,569 --> 00:23:29,319
sampling is for you trios how we do it

516
00:23:26,890 --> 00:23:31,720
but blue noise it's very expensive to

517
00:23:29,319 --> 00:23:34,109
create much more expensive to create so

518
00:23:31,720 --> 00:23:36,910
we probably can't create it every frame

519
00:23:34,109 --> 00:23:39,129
but what we can do is say what if we

520
00:23:36,910 --> 00:23:43,540
created let's say 16 different blue

521
00:23:39,130 --> 00:23:45,660
noise patterns maybe and then what we

522
00:23:43,539 --> 00:23:46,869
did is just rotated them or something

523
00:23:45,660 --> 00:23:49,509
right

524
00:23:46,869 --> 00:23:52,719
rotate them randomly per place that

525
00:23:49,509 --> 00:23:55,089
we're sampling you know because a blue

526
00:23:52,720 --> 00:23:55,779
Tomi's pattern you can rotate it all any

527
00:23:55,089 --> 00:23:58,569
way you want

528
00:23:55,779 --> 00:23:59,950
it'll still be blue noise so we could do

529
00:23:58,569 --> 00:24:02,500
something like that right spin it around

530
00:23:59,950 --> 00:24:03,700
the normal those sorts of things and it

531
00:24:02,500 --> 00:24:05,740
doesn't cost as much as you would think

532
00:24:03,700 --> 00:24:07,299
because it's only costs one rotation

533
00:24:05,740 --> 00:24:10,210
like all we have to do is construct the

534
00:24:07,299 --> 00:24:11,950
coordinate frame for the blue noise in a

535
00:24:10,210 --> 00:24:15,039
rotated fashion which would cost us like

536
00:24:11,950 --> 00:24:17,259
one sign in one cosign which is a little

537
00:24:15,039 --> 00:24:20,470
expensive you know but it's not the end

538
00:24:17,259 --> 00:24:22,690
of the world so you know we could

539
00:24:20,470 --> 00:24:24,819
imagine doing blue noise by picking a

540
00:24:22,690 --> 00:24:27,880
random angle of rotation so that part's

541
00:24:24,819 --> 00:24:29,649
white noise and won't destroy our blue

542
00:24:27,880 --> 00:24:32,770
noise pattern and does inject a fair bit

543
00:24:29,650 --> 00:24:34,120
of randomness and then we have a few

544
00:24:32,769 --> 00:24:35,109
patterns if we need more than that we

545
00:24:34,119 --> 00:24:36,669
have you know a couple different

546
00:24:35,109 --> 00:24:37,490
patterns let's say I don't know maybe we

547
00:24:36,670 --> 00:24:42,500
don't and we just have

548
00:24:37,490 --> 00:24:44,120
we just use randomness on it right so

549
00:24:42,500 --> 00:24:45,980
there are ways we can get blue noise

550
00:24:44,119 --> 00:24:47,239
into a real annoy real time algorithm

551
00:24:45,980 --> 00:24:48,620
even though we probably don't want to

552
00:24:47,240 --> 00:24:49,970
actually create the blue noise every

553
00:24:48,619 --> 00:24:52,789
frame because that might introduce too

554
00:24:49,970 --> 00:24:56,179
much overhead into the system we

555
00:24:52,789 --> 00:24:57,678
certainly can still get the benefits of

556
00:24:56,179 --> 00:24:59,480
blue noise that for at least some of

557
00:24:57,679 --> 00:25:04,280
them if we're willing to do some pre

558
00:24:59,480 --> 00:25:05,420
computation and a little bit of setup so

559
00:25:04,279 --> 00:25:07,129
which of those that we want to do I

560
00:25:05,420 --> 00:25:07,670
don't know but you know those are our

561
00:25:07,130 --> 00:25:09,170
options

562
00:25:07,670 --> 00:25:10,519
we could probably try the stratified

563
00:25:09,170 --> 00:25:12,529
sampling one first because it's much

564
00:25:10,519 --> 00:25:13,849
easier and then think about the blue

565
00:25:12,529 --> 00:25:18,230
noise one maybe a little bit later if we

566
00:25:13,849 --> 00:25:20,659
think it's worth it right all right

567
00:25:18,230 --> 00:25:22,880
let's go to multi rate sampling so multi

568
00:25:20,660 --> 00:25:24,290
risk sampling is and unfortunately I

569
00:25:22,880 --> 00:25:26,750
come through ho for the area I would

570
00:25:24,289 --> 00:25:29,329
have used to illustrate it my bad

571
00:25:26,750 --> 00:25:32,420
pretend this isn't here so multi risk

572
00:25:29,329 --> 00:25:42,619
sampling is just saying well okay so you

573
00:25:32,420 --> 00:25:43,850
know I've got these reflectors and I

574
00:25:42,619 --> 00:25:47,209
want to compute the ludie for a point

575
00:25:43,849 --> 00:25:51,740
well okay so I do a raycast and I find

576
00:25:47,210 --> 00:25:53,420
that I missed these reflectors right so

577
00:25:51,740 --> 00:25:54,799
I'm in this part of spatial hierarchy

578
00:25:53,420 --> 00:25:56,779
and now I got a test against all of

579
00:25:54,799 --> 00:25:58,399
these right cuz I missed these two here

580
00:25:56,779 --> 00:26:00,710
if I hit one of these great I could stop

581
00:25:58,400 --> 00:26:05,300
early maybe but now I got to test all

582
00:26:00,710 --> 00:26:06,710
the guys in this thing right well what

583
00:26:05,299 --> 00:26:08,569
if instead of doing that we just said

584
00:26:06,710 --> 00:26:10,220
look when you get far when you get a

585
00:26:08,569 --> 00:26:14,779
certain distance away let's say this is

586
00:26:10,220 --> 00:26:16,819
you know maybe this is the sphere here

587
00:26:14,779 --> 00:26:18,649
or something when you get a certain

588
00:26:16,819 --> 00:26:20,329
distance away like if the center of the

589
00:26:18,650 --> 00:26:23,570
thing is further than a certain amount

590
00:26:20,329 --> 00:26:25,220
from the point just use an aggregate

591
00:26:23,569 --> 00:26:27,950
understanding of the lighting for this

592
00:26:25,220 --> 00:26:32,170
region as your output rather than

593
00:26:27,950 --> 00:26:35,390
testing the things in it right just just

594
00:26:32,170 --> 00:26:38,600
compute an aggregate value I don't know

595
00:26:35,390 --> 00:26:41,990
how just by an average of the light in

596
00:26:38,599 --> 00:26:43,189
the region right not my problem I don't

597
00:26:41,990 --> 00:26:45,140
know how we're gonna do it we're gonna

598
00:26:43,190 --> 00:26:46,910
do something that produces an average

599
00:26:45,140 --> 00:26:49,490
value for each of our bounding boxes and

600
00:26:46,910 --> 00:26:51,320
rather than descend through the spatial

601
00:26:49,490 --> 00:26:53,720
hierarchy we will only

602
00:26:51,319 --> 00:26:55,279
descend into ones that are close enough

603
00:26:53,720 --> 00:26:56,600
and ones that aren't close enough we

604
00:26:55,279 --> 00:27:03,740
just use the aggregate value as the

605
00:26:56,599 --> 00:27:06,139
output done right so that's something we

606
00:27:03,740 --> 00:27:08,390
could consider now I don't know how much

607
00:27:06,140 --> 00:27:11,830
it will affect our results but it's an

608
00:27:08,390 --> 00:27:11,830
example of something we could do

609
00:27:12,940 --> 00:27:21,830
and this improves our variance

610
00:27:16,789 --> 00:27:23,240
potentially in two ways actually the

611
00:27:21,829 --> 00:27:25,399
first thing it does is it reduces

612
00:27:23,240 --> 00:27:27,920
variance because now you're using a

613
00:27:25,400 --> 00:27:29,600
smooth average of a number of reflectors

614
00:27:27,920 --> 00:27:31,220
which means that it doesn't matter

615
00:27:29,599 --> 00:27:33,799
whether I was shooting this ray or this

616
00:27:31,220 --> 00:27:36,680
ray they're both gonna get the same

617
00:27:33,799 --> 00:27:38,779
result back from the sky right and that

618
00:27:36,680 --> 00:27:40,549
reduces variance because now you're not

619
00:27:38,779 --> 00:27:42,920
talking about missing this guy and

620
00:27:40,549 --> 00:27:44,750
hitting this right so that you get two

621
00:27:42,920 --> 00:27:46,690
very different results based on a very

622
00:27:44,750 --> 00:27:49,460
small and angular change again

623
00:27:46,690 --> 00:27:51,320
introducing variance in the system what

624
00:27:49,460 --> 00:27:53,000
we're saying is look we know we're never

625
00:27:51,319 --> 00:27:53,990
gonna shoot enough rays to really

626
00:27:53,000 --> 00:27:55,339
capture what's happening out here

627
00:27:53,990 --> 00:27:57,529
because it's so far away we'd have to

628
00:27:55,339 --> 00:28:00,439
shoot tons of rays a really tight angle

629
00:27:57,529 --> 00:28:02,539
to capture all that lighting let's just

630
00:28:00,440 --> 00:28:05,539
figure out what generally that is

631
00:28:02,539 --> 00:28:07,430
sending back and use that and this is

632
00:28:05,539 --> 00:28:09,349
very similar to the concept of voxel

633
00:28:07,430 --> 00:28:12,320
cone tracing right which we know is used

634
00:28:09,349 --> 00:28:15,379
in high-end engines to do you know

635
00:28:12,319 --> 00:28:17,809
reflection kind of stuff and bounce

636
00:28:15,380 --> 00:28:19,310
lighting it's very similar to that voxel

637
00:28:17,809 --> 00:28:21,950
cone tracing concept it's saying look

638
00:28:19,309 --> 00:28:25,039
when we get further away from things we

639
00:28:21,950 --> 00:28:27,080
don't need to know really specifically

640
00:28:25,039 --> 00:28:29,389
where we were casting because generally

641
00:28:27,079 --> 00:28:31,519
speaking it's a tiny ant part of our

642
00:28:29,390 --> 00:28:33,320
hemisphere just give us the general

643
00:28:31,519 --> 00:28:34,910
light that's coming back that's what we

644
00:28:33,319 --> 00:28:36,829
wanted anyway and we're just never gonna

645
00:28:34,910 --> 00:28:38,660
shoot enough rays to capture it so if we

646
00:28:36,829 --> 00:28:40,730
can just smooth out those regions and

647
00:28:38,660 --> 00:28:47,710
just get the result comes back with one

648
00:28:40,730 --> 00:28:50,029
ray it's pretty good right so that's

649
00:28:47,710 --> 00:28:52,460
what we can do with that bi-directional

650
00:28:50,029 --> 00:28:53,899
sampling finally is just the observation

651
00:28:52,460 --> 00:28:56,900
that right now what we're doing is we're

652
00:28:53,900 --> 00:28:59,830
saying look we find a path to transfer

653
00:28:56,900 --> 00:29:03,769
light between two surfaces right now and

654
00:28:59,829 --> 00:29:05,179
then we only use one direction of that

655
00:29:03,769 --> 00:29:06,170
we just say okay

656
00:29:05,180 --> 00:29:07,580
we know that lights gonna get

657
00:29:06,170 --> 00:29:10,550
transferred from this point to this

658
00:29:07,579 --> 00:29:13,669
point why not just say look it transfers

659
00:29:10,549 --> 00:29:15,139
the other way - right and the reason

660
00:29:13,670 --> 00:29:17,120
again that reduces our variance is

661
00:29:15,140 --> 00:29:18,890
because for the same number of Ray casts

662
00:29:17,119 --> 00:29:21,349
we get twice the amount of light

663
00:29:18,890 --> 00:29:25,190
transport so it's as if we cast twice as

664
00:29:21,349 --> 00:29:26,449
many Ray's effectively right now it's a

665
00:29:25,190 --> 00:29:27,799
little bit cheeky of me to say that

666
00:29:26,450 --> 00:29:29,390
reduces our variance we don't really

667
00:29:27,799 --> 00:29:30,740
know that reduces our variance actually

668
00:29:29,390 --> 00:29:33,680
it could increase our parents for all I

669
00:29:30,740 --> 00:29:36,079
know because there's nothing that says

670
00:29:33,680 --> 00:29:41,029
it's gonna really decrease the variance

671
00:29:36,079 --> 00:29:44,089
because that transport could be an

672
00:29:41,029 --> 00:29:44,660
unlikely path in which case counting it

673
00:29:44,089 --> 00:29:47,209
twice

674
00:29:44,660 --> 00:29:50,990
is worse than counting at once in a

675
00:29:47,210 --> 00:29:52,309
sense right so we don't really know that

676
00:29:50,990 --> 00:29:55,190
I reserved variance but what you can

677
00:29:52,309 --> 00:29:57,109
generally say is that if in general we

678
00:29:55,190 --> 00:30:00,039
have set up the rest of the scheme to

679
00:29:57,109 --> 00:30:04,279
reduce variance in general then using

680
00:30:00,039 --> 00:30:07,430
the paths more efficiently should in

681
00:30:04,279 --> 00:30:09,589
theory over the grand scheme of things

682
00:30:07,430 --> 00:30:11,269
reduce the variance because we're just

683
00:30:09,589 --> 00:30:13,369
getting more Ray casts effectively at

684
00:30:11,269 --> 00:30:14,960
that point so if we generally expect an

685
00:30:13,369 --> 00:30:17,149
individual ray cast to reduce our

686
00:30:14,960 --> 00:30:18,350
variance then we would expect doubling

687
00:30:17,150 --> 00:30:19,610
the number of ray casts we're

688
00:30:18,349 --> 00:30:22,069
effectively getting to reduce our

689
00:30:19,609 --> 00:30:25,219
variance in general as opposed to make

690
00:30:22,069 --> 00:30:27,470
exacerbating right on average again not

691
00:30:25,220 --> 00:30:28,940
an any given ray may do the opposite of

692
00:30:27,470 --> 00:30:35,230
that so it's hard to say definitively

693
00:30:28,940 --> 00:30:35,230
that that's the case right okay

694
00:30:37,140 --> 00:30:43,710
so I think that is most of what I wanted

695
00:30:41,670 --> 00:30:46,410
to talk about and so those are the

696
00:30:43,710 --> 00:30:48,690
things that I'd like to explore now we

697
00:30:46,410 --> 00:30:50,700
don't really necessarily have any way of

698
00:30:48,690 --> 00:30:53,820
predicting how these are going to affect

699
00:30:50,700 --> 00:30:56,250
us because again lighting is one of

700
00:30:53,819 --> 00:30:59,789
those massive problems that's just very

701
00:30:56,250 --> 00:31:02,490
amorphous we don't know anything about

702
00:30:59,789 --> 00:31:05,460
what the solution looks like unless

703
00:31:02,490 --> 00:31:07,740
we're casting you know millions and

704
00:31:05,460 --> 00:31:09,419
millions of rays and so when we're

705
00:31:07,740 --> 00:31:11,339
talking about casting such a small

706
00:31:09,419 --> 00:31:15,360
number of rays it's really more of a

707
00:31:11,339 --> 00:31:17,369
hack at that point and we have to

708
00:31:15,359 --> 00:31:20,569
explore our options in a very

709
00:31:17,369 --> 00:31:23,308
experimental way we don't really know

710
00:31:20,569 --> 00:31:26,189
when you get time to casting so few rays

711
00:31:23,308 --> 00:31:29,149
you don't really know what you're

712
00:31:26,190 --> 00:31:32,669
dealing with in terms of the math right

713
00:31:29,150 --> 00:31:34,798
you can sort of try to do your best to

714
00:31:32,669 --> 00:31:36,330
approximate the real answer but at some

715
00:31:34,798 --> 00:31:38,609
level what you're really aiming for it's

716
00:31:36,329 --> 00:31:40,889
not the real answer anyway it's sort of

717
00:31:38,609 --> 00:31:46,709
the smoothest answer that still has

718
00:31:40,890 --> 00:31:48,780
effects you cared about right so I think

719
00:31:46,710 --> 00:31:53,190
it's best to kind of remember that we're

720
00:31:48,779 --> 00:31:55,048
in that sort of uncharted area so yeah

721
00:31:53,190 --> 00:31:57,720
the other thing I can do right now is

722
00:31:55,048 --> 00:32:00,869
also say if we take a look at world mode

723
00:31:57,720 --> 00:32:03,029
and I'm gonna go to screen index here if

724
00:32:00,869 --> 00:32:05,089
I crank up the number of screens a

725
00:32:03,029 --> 00:32:10,619
little bit just so we have that that

726
00:32:05,089 --> 00:32:13,470
existing slowness you can see that that

727
00:32:10,619 --> 00:32:15,599
in this case where we're running it at a

728
00:32:13,470 --> 00:32:24,720
much slower frame rate here when we get

729
00:32:15,599 --> 00:32:26,548
more of these into the mix and if I take

730
00:32:24,720 --> 00:32:29,339
a look at the profiler right you can see

731
00:32:26,548 --> 00:32:32,759
that we've got 81% of time spent in

732
00:32:29,339 --> 00:32:36,000
compute like propagation right so even

733
00:32:32,759 --> 00:32:39,450
in the case where we're only casting 16

734
00:32:36,000 --> 00:32:43,140
Ray's per per attempt you can see that

735
00:32:39,450 --> 00:32:45,870
this still is pretty costly right once

736
00:32:43,140 --> 00:32:47,520
you get enough stuff in there so the

737
00:32:45,869 --> 00:32:49,949
thing that I'd like to try first I think

738
00:32:47,519 --> 00:32:55,589
is to see what I can do

739
00:32:49,950 --> 00:32:56,669
if the multi-resolution stuff just

740
00:32:55,589 --> 00:32:59,158
coming interested to play without a

741
00:32:56,669 --> 00:33:01,409
little bit I'd like to see if we can get

742
00:32:59,159 --> 00:33:02,730
the multi-resolution stuff working then

743
00:33:01,409 --> 00:33:04,260
from there we'll start looking at the

744
00:33:02,730 --> 00:33:05,490
stratified sampling and then finally

745
00:33:04,259 --> 00:33:07,648
when we're done with everything I think

746
00:33:05,490 --> 00:33:11,000
I'll try to add some bi-directional Ness

747
00:33:07,648 --> 00:33:13,528
to it that's my current thinking anyway

748
00:33:11,000 --> 00:33:16,710
and then once we're done with all of

749
00:33:13,528 --> 00:33:18,179
that we will be able to move on to the

750
00:33:16,710 --> 00:33:19,829
final step of lighting which is

751
00:33:18,179 --> 00:33:22,380
distributing and using our lighting

752
00:33:19,829 --> 00:33:23,970
points effectively which i think will be

753
00:33:22,380 --> 00:33:25,830
a really nice touch because it'll smooth

754
00:33:23,970 --> 00:33:27,778
out things like these walls instead of

755
00:33:25,829 --> 00:33:29,548
them having different lighting across

756
00:33:27,778 --> 00:33:32,909
them they'll have a nice uniform light

757
00:33:29,548 --> 00:33:34,829
across them which I think we want our

758
00:33:32,909 --> 00:33:38,159
games look is supposed to be kind of

759
00:33:34,829 --> 00:33:41,038
averting so at some level I guess I'm

760
00:33:38,159 --> 00:33:42,990
not 100% sure that's what we want but I

761
00:33:41,038 --> 00:33:44,129
do suspect it's what we want because I

762
00:33:42,990 --> 00:33:46,859
think we want the art

763
00:33:44,130 --> 00:33:48,778
to emphasize the blockiness not the

764
00:33:46,859 --> 00:33:52,558
lighting necessarily to emphasize the

765
00:33:48,778 --> 00:33:55,888
blockiness if that makes sense but you

766
00:33:52,558 --> 00:33:59,339
know that's obviously up to us we can

767
00:33:55,888 --> 00:34:01,469
always decide not to smooth it and use

768
00:33:59,339 --> 00:34:03,178
blockier lighting if we decide that that

769
00:34:01,470 --> 00:34:06,509
is a nicer look for the game for

770
00:34:03,179 --> 00:34:08,878
whatever reason so anyway I think that's

771
00:34:06,509 --> 00:34:13,079
where we're at so let's go ahead and

772
00:34:08,878 --> 00:34:16,648
take a look at how we might do that so

773
00:34:13,079 --> 00:34:19,039
the simplest way to do that is to go

774
00:34:16,648 --> 00:34:22,648
ahead and take a look at these lighting

775
00:34:19,039 --> 00:34:25,588
systems here we've got this lighting

776
00:34:22,648 --> 00:34:28,259
block and in it it's kind of got a bunch

777
00:34:25,588 --> 00:34:30,389
of information right it's got a ref C

778
00:34:28,260 --> 00:34:30,690
and an emission and all this stuff right

779
00:34:30,389 --> 00:34:32,639
now

780
00:34:30,690 --> 00:34:35,039
those don't get used if you're an

781
00:34:32,639 --> 00:34:36,389
aggregate lighting block so if you were

782
00:34:35,039 --> 00:34:43,739
one of the lighting blocks that's just

783
00:34:36,389 --> 00:34:45,899
used for sorting what you can see here

784
00:34:43,739 --> 00:34:48,838
is inside raycast recurse then what's

785
00:34:45,898 --> 00:34:51,809
going to happen is as you're testing the

786
00:34:48,838 --> 00:34:55,009
phases of the Ray what you can see here

787
00:34:51,809 --> 00:34:57,809
is that you know in the case where

788
00:34:55,010 --> 00:34:59,700
there's two separate places where this

789
00:34:57,809 --> 00:35:02,969
can happen in the case where you're

790
00:34:59,699 --> 00:35:03,839
inside a particular box then obviously

791
00:35:02,969 --> 00:35:05,759
you

792
00:35:03,840 --> 00:35:07,740
to recurse and that is always gonna be

793
00:35:05,760 --> 00:35:09,570
correct right like if you're casting

794
00:35:07,739 --> 00:35:10,739
from within a box are always gonna go

795
00:35:09,570 --> 00:35:12,300
below it so we don't really need to look

796
00:35:10,739 --> 00:35:14,639
at that case but let's look at this case

797
00:35:12,300 --> 00:35:17,250
in the case where we're ray casting

798
00:35:14,639 --> 00:35:19,109
against the box here then what you can

799
00:35:17,250 --> 00:35:22,409
see is if we find that we hit a

800
00:35:19,110 --> 00:35:24,780
particular one of the Box faces then we

801
00:35:22,409 --> 00:35:27,210
recurse into it if the box has children

802
00:35:24,780 --> 00:35:33,570
now what I'm proposing here is we say

803
00:35:27,210 --> 00:35:35,880
well okay we've got a t-value right what

804
00:35:33,570 --> 00:35:38,190
we could do instead is say if that T

805
00:35:35,880 --> 00:35:38,789
value is greater than a certain distance

806
00:35:38,190 --> 00:35:43,530
away

807
00:35:38,789 --> 00:35:46,739
don't recurse down the box right just

808
00:35:43,530 --> 00:35:49,560
don't do it if the T value is is too far

809
00:35:46,739 --> 00:35:55,489
away let's just pretend we hit a box

810
00:35:49,559 --> 00:36:00,949
here and have that box be have that box

811
00:35:55,489 --> 00:36:04,500
be used in some other fashion right I

812
00:36:00,949 --> 00:36:07,829
that's all I'm saying now the problem

813
00:36:04,500 --> 00:36:09,179
with this that we see is that we sort of

814
00:36:07,829 --> 00:36:10,590
have two different once we have two

815
00:36:09,179 --> 00:36:11,789
different types of boxes it becomes a

816
00:36:10,590 --> 00:36:17,280
little harder to figure out what the

817
00:36:11,789 --> 00:36:19,170
light transport is exactly and there's

818
00:36:17,280 --> 00:36:21,060
two ways that we can do this one way you

819
00:36:19,170 --> 00:36:24,300
can do this is just to set up synthetic

820
00:36:21,059 --> 00:36:26,279
lighting for these lighting boxes and I

821
00:36:24,300 --> 00:36:28,080
think that might be the best way to do

822
00:36:26,280 --> 00:36:32,460
it it's hard to say but it might be

823
00:36:28,079 --> 00:36:34,019
right and and so you know one way we

824
00:36:32,460 --> 00:36:36,480
could do this to just say look let's

825
00:36:34,019 --> 00:36:39,210
just set up synthetic light indices so

826
00:36:36,480 --> 00:36:42,150
much like we add lighting boxes we'll

827
00:36:39,210 --> 00:36:45,300
add lighting points as well maybe one

828
00:36:42,150 --> 00:36:48,090
light point per side of the box right

829
00:36:45,300 --> 00:36:50,250
and then when we build the box we will

830
00:36:48,090 --> 00:36:54,829
set those lighting points to be averages

831
00:36:50,250 --> 00:36:57,420
or something like this that allow us to

832
00:36:54,829 --> 00:37:00,119
send out the right average lighting out

833
00:36:57,420 --> 00:37:03,150
that direction right you know just just

834
00:37:00,119 --> 00:37:04,429
basic basic simple some kind of simple

835
00:37:03,150 --> 00:37:07,289
thing like that

836
00:37:04,429 --> 00:37:11,489
then what we would do is when we return

837
00:37:07,289 --> 00:37:13,650
one of these we just return the we just

838
00:37:11,489 --> 00:37:15,479
returned the box right here it's the

839
00:37:13,650 --> 00:37:17,700
same with this so it's almost instead of

840
00:37:15,480 --> 00:37:20,460
box child count it would just be an and

841
00:37:17,699 --> 00:37:23,969
it's like box child count and we're

842
00:37:20,460 --> 00:37:27,900
close enough to the box then the curse

843
00:37:23,969 --> 00:37:29,219
otherwise just return it right uh and

844
00:37:27,900 --> 00:37:30,630
that seems like a pretty compelling

845
00:37:29,219 --> 00:37:32,429
solution to me because it keeps the

846
00:37:30,630 --> 00:37:34,710
algorithm very simple none of the code

847
00:37:32,429 --> 00:37:37,889
really has to change the only thing we

848
00:37:34,710 --> 00:37:41,039
need to do to some of the other parts of

849
00:37:37,889 --> 00:37:43,558
the system is back where we actually do

850
00:37:41,039 --> 00:37:45,808
the lighting test routines there are

851
00:37:43,559 --> 00:37:47,910
some places where we loop over our point

852
00:37:45,809 --> 00:37:51,269
counts all we really have to do here is

853
00:37:47,909 --> 00:37:54,750
make sure this point count is not

854
00:37:51,269 --> 00:37:56,880
modified so we'll add points as in an

855
00:37:54,750 --> 00:37:58,650
extended sense so we sort of have an

856
00:37:56,880 --> 00:38:00,210
original like we have an original box

857
00:37:58,650 --> 00:38:05,849
count we'd have an original point count

858
00:38:00,210 --> 00:38:07,199
right and we would just know that there

859
00:38:05,849 --> 00:38:09,059
these additional points after it that

860
00:38:07,199 --> 00:38:14,939
we're assuming you're not going to be

861
00:38:09,059 --> 00:38:18,150
involved so I think we can just do that

862
00:38:14,940 --> 00:38:19,289
let me just verify that fact but in here

863
00:38:18,150 --> 00:38:20,818
for example inside compute light

864
00:38:19,289 --> 00:38:22,829
propagation what you can see here is

865
00:38:20,818 --> 00:38:25,019
when we go through this algorithm all we

866
00:38:22,829 --> 00:38:26,849
do is we say look did we get a box back

867
00:38:25,019 --> 00:38:30,259
if we got a box back we just do our

868
00:38:26,849 --> 00:38:33,690
thing right

869
00:38:30,260 --> 00:38:36,510
so really that's all we have to do and

870
00:38:33,690 --> 00:38:38,880
it I mean yeah that would be all there

871
00:38:36,510 --> 00:38:41,970
is to it so I think that's pretty much

872
00:38:38,880 --> 00:38:47,160
it there's nothing there's nothing else

873
00:38:41,969 --> 00:38:50,519
that we would have to do and yeah it

874
00:38:47,159 --> 00:38:52,529
feels pretty straightforward to me so I

875
00:38:50,519 --> 00:38:58,289
feel like that's the right solution to

876
00:38:52,530 --> 00:38:59,660
this when we come in through split box

877
00:38:58,289 --> 00:39:02,789
and what we could do here is just have

878
00:38:59,659 --> 00:39:03,899
you know a you sixteen point count and a

879
00:39:02,789 --> 00:39:07,588
you 16

880
00:39:03,900 --> 00:39:09,000
you know extended point count and so

881
00:39:07,588 --> 00:39:10,828
when we come through here and we set the

882
00:39:09,000 --> 00:39:12,690
point count I could also say all right

883
00:39:10,829 --> 00:39:16,470
the extended point count equals the

884
00:39:12,690 --> 00:39:21,869
point count but then I can add past the

885
00:39:16,469 --> 00:39:24,419
point count as we go so yeah so off we

886
00:39:21,869 --> 00:39:26,880
go you know we do this this point counts

887
00:39:24,420 --> 00:39:28,829
it you know we see the points and do

888
00:39:26,880 --> 00:39:30,358
whatever we want to there and then when

889
00:39:28,829 --> 00:39:31,440
we come in to build spatial partition

890
00:39:30,358 --> 00:39:36,269
for lighting we just

891
00:39:31,440 --> 00:39:38,250
add points so in here for example you

892
00:39:36,269 --> 00:39:40,079
can see us creating boxes you know

893
00:39:38,250 --> 00:39:46,139
here's an example of us creating a box

894
00:39:40,079 --> 00:39:48,869
right where we do add box storage and

895
00:39:46,139 --> 00:39:51,900
what we could do is add points now as

896
00:39:48,869 --> 00:39:53,789
well right so you know we could just add

897
00:39:51,900 --> 00:39:57,660
six points or something like that when

898
00:39:53,789 --> 00:39:59,579
we add one of these boxes right so maybe

899
00:39:57,659 --> 00:40:05,179
inside split box that's what happens

900
00:39:59,579 --> 00:40:05,180
maybe that seems pretty fair I guess

901
00:40:13,760 --> 00:40:22,380
take a look here yeah so you can see

902
00:40:19,530 --> 00:40:26,220
here where we call split box recursively

903
00:40:22,380 --> 00:40:33,838
we basically create the box here and

904
00:40:26,219 --> 00:40:38,879
then we add the two boxes to it and then

905
00:40:33,838 --> 00:40:41,690
in the case otherwise we just record the

906
00:40:38,880 --> 00:40:44,190
box references here right

907
00:40:41,690 --> 00:40:47,269
so either we use the boxes that if we

908
00:40:44,190 --> 00:40:51,028
get passed or we put them in here right

909
00:40:47,269 --> 00:40:55,380
so what we could do for that is I think

910
00:40:51,028 --> 00:40:57,059
just again say alright if the source

911
00:40:55,380 --> 00:41:00,119
count is greater than four then we know

912
00:40:57,059 --> 00:41:01,920
this is going to be a well I guess in

913
00:41:00,119 --> 00:41:04,108
any I guess in any case where we call

914
00:41:01,920 --> 00:41:08,180
split box actually we're gonna want this

915
00:41:04,108 --> 00:41:08,179
so I guess this just happens period

916
00:41:11,130 --> 00:41:15,440
yeah I think this just happens period so

917
00:41:13,409 --> 00:41:23,940
in any case where we called split box

918
00:41:15,440 --> 00:41:26,759
we're gonna need to create these yeah so

919
00:41:23,940 --> 00:41:30,150
inside here we have when we do build

920
00:41:26,759 --> 00:41:33,420
space partition for lighting inside here

921
00:41:30,150 --> 00:41:34,619
where we do our root box you can see us

922
00:41:33,420 --> 00:41:36,450
get the root box here and then we split

923
00:41:34,619 --> 00:41:39,450
the root box so that means every box

924
00:41:36,449 --> 00:41:41,518
that is an on that's not an actual leaf

925
00:41:39,449 --> 00:41:43,768
node that has actual light information

926
00:41:41,518 --> 00:41:45,328
will come through this path and when it

927
00:41:43,768 --> 00:41:48,238
gets down to here I think we just want

928
00:41:45,329 --> 00:41:50,999
to do it right here so at the very end

929
00:41:48,239 --> 00:41:54,420
when we know exactly what our child

930
00:41:50,998 --> 00:41:56,879
stuff is then we can compute the

931
00:41:54,420 --> 00:41:57,869
lighting I think at that point so let's

932
00:41:56,880 --> 00:42:00,028
go ahead and do that

933
00:41:57,869 --> 00:42:04,650
so here what we're gonna do is compute

934
00:42:00,028 --> 00:42:11,130
the aggregate lighting for this

935
00:42:04,650 --> 00:42:13,410
container box right partition box and so

936
00:42:11,130 --> 00:42:15,930
the parent box now you know should have

937
00:42:13,409 --> 00:42:18,389
it should have a light this light index

938
00:42:15,929 --> 00:42:19,768
here should be just garbage there's

939
00:42:18,389 --> 00:42:21,210
nothing in it because never it's never

940
00:42:19,768 --> 00:42:22,468
been used and never gonna get used in

941
00:42:21,210 --> 00:42:24,469
the current version I don't what we're

942
00:42:22,469 --> 00:42:27,088
gonna do is now start using that right

943
00:42:24,469 --> 00:42:32,130
so we want to just set these lighting

944
00:42:27,088 --> 00:42:34,199
indices to sort of be incremental and

945
00:42:32,130 --> 00:42:36,599
this is kind of a dumb thing but it's

946
00:42:34,199 --> 00:42:40,618
just what we have to do so we've got 1 2

947
00:42:36,599 --> 00:42:44,880
3 4 5 6 of them and what we're gonna do

948
00:42:40,619 --> 00:42:45,869
again is just set them like so right in

949
00:42:44,880 --> 00:42:47,190
fact we could do this a little more

950
00:42:45,869 --> 00:42:52,400
efficiently without actually doing the

951
00:42:47,190 --> 00:42:52,400
back reference by just doing this

952
00:42:53,659 --> 00:43:00,629
something like that so we can say our

953
00:42:57,690 --> 00:43:07,019
light index equals the extended point

954
00:43:00,630 --> 00:43:09,289
count something like this and then at

955
00:43:07,018 --> 00:43:09,288
the end

956
00:43:10,389 --> 00:43:18,639
right so we do something like that which

957
00:43:13,269 --> 00:43:25,360
just assigns one light point per you

958
00:43:18,639 --> 00:43:27,069
know per side so one light point on the

959
00:43:25,360 --> 00:43:30,579
top bottom one light point on each of

960
00:43:27,070 --> 00:43:32,680
the four sides east west north south so

961
00:43:30,579 --> 00:43:36,670
there's the entire assignment right

962
00:43:32,679 --> 00:43:39,309
along the parent box so we do something

963
00:43:36,670 --> 00:43:41,860
that then we and I guess this one

964
00:43:39,309 --> 00:43:43,449
technically we don't need one for the

965
00:43:41,860 --> 00:43:45,700
six the six is just the terminators so

966
00:43:43,449 --> 00:43:49,210
we just assign a light zero one two

967
00:43:45,699 --> 00:43:51,969
three four five like so and then we're

968
00:43:49,210 --> 00:43:54,220
done so now this has light points but we

969
00:43:51,969 --> 00:43:57,609
need to actually compute the aggregate

970
00:43:54,219 --> 00:44:00,039
version of each of those right so we

971
00:43:57,610 --> 00:44:02,860
need to seed those with some actual

972
00:44:00,039 --> 00:44:05,590
information because now if we look in

973
00:44:02,860 --> 00:44:08,440
here there's information for each of

974
00:44:05,590 --> 00:44:11,470
those points we haven't set it though to

975
00:44:08,440 --> 00:44:13,150
anything that we don't we don't know any

976
00:44:11,469 --> 00:44:16,599
of these values and we need to know

977
00:44:13,150 --> 00:44:20,740
these values for those points in order

978
00:44:16,599 --> 00:44:22,960
to do anything useful with them right so

979
00:44:20,739 --> 00:44:25,179
if you take a look in here all of the

980
00:44:22,960 --> 00:44:27,400
initial points all got seeded with

981
00:44:25,179 --> 00:44:29,500
something and and our points that we've

982
00:44:27,400 --> 00:44:31,300
added will not have been seeded with

983
00:44:29,500 --> 00:44:33,750
anything and so if you take a look at

984
00:44:31,300 --> 00:44:36,580
this code here we need a way of

985
00:44:33,750 --> 00:44:46,239
replicating that for each of these light

986
00:44:36,579 --> 00:44:47,980
points right but it's not this right we

987
00:44:46,239 --> 00:44:49,419
need to set all these values but we need

988
00:44:47,980 --> 00:44:51,340
to have a different way of setting them

989
00:44:49,420 --> 00:44:54,880
because this is not you know this is not

990
00:44:51,340 --> 00:44:57,400
useful right so we need to figure out a

991
00:44:54,880 --> 00:44:59,920
way to set all these values and luckily

992
00:44:57,400 --> 00:45:02,019
we pretty much know at least one simple

993
00:44:59,920 --> 00:45:05,889
way to do it now there could be more

994
00:45:02,019 --> 00:45:08,170
it's that you could imagine a lot of

995
00:45:05,889 --> 00:45:12,609
different ways of of doing this

996
00:45:08,170 --> 00:45:14,050
particular thing because the way that

997
00:45:12,610 --> 00:45:15,820
I'm gonna propose doing it now is

998
00:45:14,050 --> 00:45:18,430
actually not very accurate and probably

999
00:45:15,820 --> 00:45:23,890
not very good and so we probably want to

1000
00:45:18,429 --> 00:45:26,230
investigate ways of doing it better

1001
00:45:23,889 --> 00:45:29,348
you know I'm gonna just start with a

1002
00:45:26,230 --> 00:45:36,068
simple one so what I would say first is

1003
00:45:29,349 --> 00:45:38,650
look here's what's happening we've got

1004
00:45:36,068 --> 00:45:42,369
some boxes and now we want to enclose

1005
00:45:38,650 --> 00:45:44,108
those boxes in another box we did that

1006
00:45:42,369 --> 00:45:46,599
spatial partition wise so that's all

1007
00:45:44,108 --> 00:45:48,940
fine but what we have to do now is say

1008
00:45:46,599 --> 00:45:52,599
ok we want there to be a point let's say

1009
00:45:48,940 --> 00:45:54,639
here and we want it to encapsulate how

1010
00:45:52,599 --> 00:45:57,730
much light is generally leaving this box

1011
00:45:54,639 --> 00:45:59,018
in this direction so the simplest

1012
00:45:57,730 --> 00:46:01,028
possible way to do this is let's just

1013
00:45:59,018 --> 00:46:06,659
take all of the surfaces that are facing

1014
00:46:01,028 --> 00:46:11,528
that direction and average them together

1015
00:46:06,659 --> 00:46:13,538
right really really simple really really

1016
00:46:11,528 --> 00:46:13,838
stupid not very accurate but there you

1017
00:46:13,539 --> 00:46:19,059
go

1018
00:46:13,838 --> 00:46:21,429
right entirely plausible so we can do

1019
00:46:19,059 --> 00:46:23,589
that another thing we could do is weight

1020
00:46:21,429 --> 00:46:25,058
it by how close they are to this so

1021
00:46:23,588 --> 00:46:26,528
things that are really close to this

1022
00:46:25,059 --> 00:46:28,000
will contribute more because you have a

1023
00:46:26,528 --> 00:46:30,369
higher chance if you're coming in

1024
00:46:28,000 --> 00:46:31,630
through here of hitting them before

1025
00:46:30,369 --> 00:46:35,769
hitting something else because they're

1026
00:46:31,630 --> 00:46:41,200
closer so we could wait by distance as

1027
00:46:35,768 --> 00:46:42,548
well both of those two things so I might

1028
00:46:41,199 --> 00:46:44,139
do that right I might wait by the

1029
00:46:42,548 --> 00:46:45,759
distance but then you know otherwise

1030
00:46:44,139 --> 00:46:46,808
it's just an average that's the simplest

1031
00:46:45,759 --> 00:46:49,210
way I think it's pretty good way it

1032
00:46:46,809 --> 00:46:50,880
doesn't cost us very much to do right it

1033
00:46:49,210 --> 00:46:54,670
will not affect the runtime of this

1034
00:46:50,880 --> 00:46:58,480
routine hardly at all there is another

1035
00:46:54,670 --> 00:47:01,329
way we could do it and this way is much

1036
00:46:58,480 --> 00:47:03,460
more involved but if we wanted to be

1037
00:47:01,329 --> 00:47:06,609
accurate we could do it and what that is

1038
00:47:03,460 --> 00:47:10,509
is let's run the Ray casting recursively

1039
00:47:06,608 --> 00:47:13,480
right so let's take the things that are

1040
00:47:10,509 --> 00:47:18,880
inside a box which we know is something

1041
00:47:13,480 --> 00:47:22,380
around you know 4 to 8 I think I'm not

1042
00:47:18,880 --> 00:47:22,380
sure what a requirement is

1043
00:47:26,880 --> 00:47:31,809
no it's zero to four so if anything has

1044
00:47:29,829 --> 00:47:42,519
more than four things inside it it

1045
00:47:31,809 --> 00:47:44,230
splits them right so we come through

1046
00:47:42,519 --> 00:47:46,179
here the root box has you know look

1047
00:47:44,230 --> 00:47:47,380
whatever it is 100 boxes entered or

1048
00:47:46,179 --> 00:47:49,089
something like this says if it's greater

1049
00:47:47,380 --> 00:47:53,349
than four then you need to split them

1050
00:47:49,090 --> 00:47:57,220
into two halves right and create two

1051
00:47:53,349 --> 00:47:58,989
boxes that have each 50 and then those

1052
00:47:57,219 --> 00:48:05,489
will get split and so on

1053
00:47:58,989 --> 00:48:05,489
so actually it has between 2 &amp; 4 right

1054
00:48:07,230 --> 00:48:14,679
it has between 2 &amp; 4 and it at any given

1055
00:48:12,010 --> 00:48:16,960
time right and it's a it's a KD tree

1056
00:48:14,679 --> 00:48:19,839
here looks like because it takes a dim

1057
00:48:16,960 --> 00:48:21,490
dimension index so it basically runs

1058
00:48:19,840 --> 00:48:24,720
through and it's gonna split it's gonna

1059
00:48:21,489 --> 00:48:24,719
look you know like this

1060
00:48:30,289 --> 00:48:38,028
that sort of thing depending on the

1061
00:48:33,079 --> 00:48:41,390
distribution of things so if we know

1062
00:48:38,028 --> 00:48:43,400
that we only have two things you know or

1063
00:48:41,389 --> 00:48:45,199
four things per box you could imagine

1064
00:48:43,400 --> 00:48:47,949
running a little ray cast it just cast

1065
00:48:45,199 --> 00:48:52,159
an additional safe 64 rays or something

1066
00:48:47,949 --> 00:48:54,318
around to see who can see which parts of

1067
00:48:52,159 --> 00:48:56,629
the external box and then you just

1068
00:48:54,318 --> 00:48:58,489
actually do a ray cast to figure out how

1069
00:48:56,630 --> 00:49:02,989
much light generally is hitting this

1070
00:48:58,489 --> 00:49:06,199
thing we could do that right totally

1071
00:49:02,989 --> 00:49:08,329
possible I'm not going to do it because

1072
00:49:06,199 --> 00:49:10,759
it just adds more computation to our

1073
00:49:08,329 --> 00:49:12,890
system and we don't know that it's

1074
00:49:10,759 --> 00:49:14,329
necessary but if we really wanted to try

1075
00:49:12,889 --> 00:49:16,159
and get an accurate estimation of the

1076
00:49:14,329 --> 00:49:18,349
light that was leaving that's what we

1077
00:49:16,159 --> 00:49:20,328
would want to do and so we may find that

1078
00:49:18,349 --> 00:49:22,219
this is just not in that averaging is

1079
00:49:20,329 --> 00:49:24,410
just not an adequate substitute for

1080
00:49:22,219 --> 00:49:26,150
actual light transport in our game most

1081
00:49:24,409 --> 00:49:28,248
of the time in which case we may have to

1082
00:49:26,150 --> 00:49:30,829
do something more fancy that does cost

1083
00:49:28,248 --> 00:49:32,208
more but still not as much as actually

1084
00:49:30,829 --> 00:49:33,919
doing the ray cast entirely on

1085
00:49:32,208 --> 00:49:35,568
everything all the time because once

1086
00:49:33,918 --> 00:49:37,998
when you subdivide again it's much

1087
00:49:35,568 --> 00:49:40,248
cheaper to do a ray cast on four boxes

1088
00:49:37,998 --> 00:49:50,418
than it is to do one on hundreds of

1089
00:49:40,248 --> 00:49:52,639
boxes okay so let's try the averaging

1090
00:49:50,418 --> 00:49:53,989
version first because I think that's the

1091
00:49:52,639 --> 00:49:56,150
simplest so we're just going to do that

1092
00:49:53,989 --> 00:49:59,019
so what I'm going to do is I'm going to

1093
00:49:56,150 --> 00:50:04,099
step through the light indices for the

1094
00:49:59,018 --> 00:50:06,108
box here so I'm going to start with the

1095
00:50:04,099 --> 00:50:09,759
surface index and I'm gonna loop through

1096
00:50:06,108 --> 00:50:12,400
all the surfaces of the box like so

1097
00:50:09,759 --> 00:50:14,599
right so this is exactly equivalent

1098
00:50:12,400 --> 00:50:18,079
really to how we're stepping through it

1099
00:50:14,599 --> 00:50:20,568
here and so I do actually also want to

1100
00:50:18,079 --> 00:50:22,909
get the surface information out as well

1101
00:50:20,568 --> 00:50:25,518
just so that I can correctly set the

1102
00:50:22,909 --> 00:50:27,650
location of this point because people

1103
00:50:25,518 --> 00:50:29,088
are using that location now it doesn't

1104
00:50:27,650 --> 00:50:30,679
really need to be set because since

1105
00:50:29,088 --> 00:50:32,509
we're only using that position as an

1106
00:50:30,679 --> 00:50:36,190
average it doesn't really matter as much

1107
00:50:32,509 --> 00:50:39,849
but again you know there's

1108
00:50:36,190 --> 00:50:41,710
there's implications right in terms of

1109
00:50:39,849 --> 00:50:43,989
how the normals work out and and that

1110
00:50:41,710 --> 00:50:47,170
sort of thing so I just I'm gonna try

1111
00:50:43,989 --> 00:50:48,759
and set it accurately anyway all right

1112
00:50:47,170 --> 00:50:50,170
so if we come through here we need to

1113
00:50:48,760 --> 00:50:51,820
love which lighting point we're setting

1114
00:50:50,170 --> 00:50:55,630
and unfortunately for us that's pretty

1115
00:50:51,820 --> 00:50:56,890
easy it's just gonna be the light index

1116
00:50:55,630 --> 00:51:00,160
for this surface because there's only

1117
00:50:56,889 --> 00:51:02,289
one surface so all we have to do is just

1118
00:51:00,159 --> 00:51:03,609
pull out whatever that one was what we

1119
00:51:02,289 --> 00:51:04,989
assigned up here and that's the one that

1120
00:51:03,610 --> 00:51:06,970
we're gonna set we also know what

1121
00:51:04,989 --> 00:51:08,619
surface are on but because we know that

1122
00:51:06,969 --> 00:51:11,049
we're the parent box here so we can just

1123
00:51:08,619 --> 00:51:11,710
use this information directly and then

1124
00:51:11,050 --> 00:51:14,320
we've got it

1125
00:51:11,710 --> 00:51:17,949
setting the point is pretty trivial all

1126
00:51:14,320 --> 00:51:22,840
we have to do is just take the surface P

1127
00:51:17,949 --> 00:51:24,039
here and not modify it right because I

1128
00:51:22,840 --> 00:51:29,590
believe the surface P is just the

1129
00:51:24,039 --> 00:51:32,519
correct P in this case right the

1130
00:51:29,590 --> 00:51:35,590
reflected color here is just going to be

1131
00:51:32,519 --> 00:51:37,900
the average of the ones underneath us I

1132
00:51:35,590 --> 00:51:51,340
believe so we just need to loop through

1133
00:51:37,900 --> 00:51:55,389
the boxes and average them oops let's

1134
00:51:51,340 --> 00:52:01,269
also get our light index out here I'm

1135
00:51:55,389 --> 00:52:03,309
gonna call this a sine light index just

1136
00:52:01,269 --> 00:52:05,500
to avoid confusion of what's going on

1137
00:52:03,309 --> 00:52:11,320
there and I'm gonna go ahead and get

1138
00:52:05,500 --> 00:52:13,650
this light index out here so we can use

1139
00:52:11,320 --> 00:52:13,650
it everywhere

1140
00:52:15,840 --> 00:52:22,170
that gives us a little bit in there

1141
00:52:18,000 --> 00:52:25,500
right so when we go through this what I

1142
00:52:22,170 --> 00:52:27,329
want to do now is say okay I've got my

1143
00:52:25,500 --> 00:52:28,920
individual lighting system now I want to

1144
00:52:27,329 --> 00:52:31,829
average all the rest of the stuff is

1145
00:52:28,920 --> 00:52:38,490
just gonna be averaged together now I

1146
00:52:31,829 --> 00:52:40,860
don't need to know average I don't need

1147
00:52:38,489 --> 00:52:44,899
to know values for any of the other

1148
00:52:40,860 --> 00:52:53,640
things because I don't

1149
00:52:44,900 --> 00:52:55,710
Wow so I'm not sure what we would want

1150
00:52:53,639 --> 00:52:57,449
to do with average direction to light I

1151
00:52:55,710 --> 00:53:00,210
think it just doesn't matter cuz it

1152
00:52:57,449 --> 00:53:02,279
should never get used really so I think

1153
00:53:00,210 --> 00:53:04,260
what I could say is look some of these

1154
00:53:02,280 --> 00:53:06,269
things just don't matter so what I'm

1155
00:53:04,260 --> 00:53:08,340
gonna do is just set it to be directly

1156
00:53:06,269 --> 00:53:12,389
outward from the surface right because I

1157
00:53:08,340 --> 00:53:15,390
don't think we care similarly like

1158
00:53:12,389 --> 00:53:17,460
accumulated weight and stuff like that I

1159
00:53:15,389 --> 00:53:21,329
don't think we ever care what those get

1160
00:53:17,460 --> 00:53:23,250
set to an accumulated PPS we don't care

1161
00:53:21,329 --> 00:53:28,139
either because I'm pretty sure all we

1162
00:53:23,250 --> 00:53:32,309
care about is a mission and initial also

1163
00:53:28,139 --> 00:53:34,829
I'll keep these cleared but I don't even

1164
00:53:32,309 --> 00:53:36,599
know that they would ever get played

1165
00:53:34,829 --> 00:53:38,579
with so we'll look at that a little

1166
00:53:36,599 --> 00:53:41,489
later when we're done with things and

1167
00:53:38,579 --> 00:53:42,869
see do we care what these get set to but

1168
00:53:41,489 --> 00:53:44,399
mostly I think these don't matter

1169
00:53:42,869 --> 00:53:47,519
because since we don't ever use the

1170
00:53:44,400 --> 00:53:51,590
results of this light and we don't cast

1171
00:53:47,519 --> 00:53:59,009
from it it shouldn't really matter right

1172
00:53:51,590 --> 00:54:01,320
but these other folks here these need to

1173
00:53:59,010 --> 00:54:04,740
be average so the reflected color the

1174
00:54:01,320 --> 00:54:06,720
emission and the initial those are the

1175
00:54:04,739 --> 00:54:09,419
ones we want to look at people

1176
00:54:06,719 --> 00:54:13,529
underneath us and figure out what they

1177
00:54:09,420 --> 00:54:19,010
should be based on that so that puts us

1178
00:54:13,530 --> 00:54:23,400
into a loop here over our children and

1179
00:54:19,010 --> 00:54:26,600
you can see us up here with that

1180
00:54:23,400 --> 00:54:26,599
information right

1181
00:54:33,239 --> 00:54:38,019
so we have the child index I guess we

1182
00:54:36,159 --> 00:54:39,730
know it this way so we know that this is

1183
00:54:38,019 --> 00:54:44,219
our first child index we know that our

1184
00:54:39,730 --> 00:54:48,460
child index our children run this way

1185
00:54:44,219 --> 00:54:50,679
like so so we can go through our child

1186
00:54:48,460 --> 00:54:53,260
indices here and just do our summation

1187
00:54:50,679 --> 00:54:55,000
over all of our children that may only

1188
00:54:53,260 --> 00:54:57,010
be two children but again I'm doing this

1189
00:54:55,000 --> 00:54:58,809
in a more general case here because we

1190
00:54:57,010 --> 00:55:01,660
haven't investigated this facial Harkey

1191
00:54:58,809 --> 00:55:03,819
much yet we may not want only two

1192
00:55:01,659 --> 00:55:05,739
children per box we may want more like

1193
00:55:03,818 --> 00:55:07,599
eight children per box or something for

1194
00:55:05,739 --> 00:55:09,699
all we know so I'd like to have this

1195
00:55:07,599 --> 00:55:11,528
routine be flexible and be able to work

1196
00:55:09,699 --> 00:55:13,899
no matter how many children are in a box

1197
00:55:11,528 --> 00:55:16,059
whether there's four or two or eight or

1198
00:55:13,900 --> 00:55:17,858
sixteen or a hundred it should just work

1199
00:55:16,059 --> 00:55:20,589
because we're gonna want to play around

1200
00:55:17,858 --> 00:55:22,598
the spacial hierarchy a little bit later

1201
00:55:20,588 --> 00:55:25,108
as we tune the lighting and I don't want

1202
00:55:22,599 --> 00:55:28,059
to have this routine break at that point

1203
00:55:25,108 --> 00:55:30,038
so yeah so now what I want to do here

1204
00:55:28,059 --> 00:55:31,630
and I guess I can pull this out because

1205
00:55:30,039 --> 00:55:33,039
really that's happening at the end when

1206
00:55:31,630 --> 00:55:36,490
we assign what I want to do now is

1207
00:55:33,039 --> 00:55:42,430
create those averages so we have the ref

1208
00:55:36,489 --> 00:55:46,449
see we have the emission PBS and we have

1209
00:55:42,429 --> 00:55:48,009
the initial PBS again I don't know that

1210
00:55:46,449 --> 00:55:49,929
initial PPS is really going to matter

1211
00:55:48,010 --> 00:55:52,210
here I don't think it really gets used

1212
00:55:49,929 --> 00:55:54,000
emission PPS has really looked at use so

1213
00:55:52,210 --> 00:55:56,349
we may not have to do that one either

1214
00:55:54,000 --> 00:55:59,980
but I'm gonna compute it anyway just

1215
00:55:56,349 --> 00:56:02,650
because we don't know yet and we - well

1216
00:55:59,980 --> 00:56:04,690
it's not gonna cost much to do and we

1217
00:56:02,650 --> 00:56:07,539
can always eliminate it later if it

1218
00:56:04,690 --> 00:56:13,869
turns out we don't care so what I want

1219
00:56:07,539 --> 00:56:15,130
to do is set these based on the average

1220
00:56:13,869 --> 00:56:16,930
and we're gonna use the same technique

1221
00:56:15,130 --> 00:56:20,170
we've used everywhere else you want to

1222
00:56:16,929 --> 00:56:21,699
do something like that which is that we

1223
00:56:20,170 --> 00:56:25,180
want to do the reflected the emission

1224
00:56:21,699 --> 00:56:27,338
the initial all as weighted sums that we

1225
00:56:25,179 --> 00:56:28,750
then undo the weighting you know we we

1226
00:56:27,338 --> 00:56:31,929
normalized for the weighting at the end

1227
00:56:28,750 --> 00:56:36,219
based on the accumulated weight so we've

1228
00:56:31,929 --> 00:56:40,618
got a total weight here and then what

1229
00:56:36,219 --> 00:56:40,618
we'll do is compute the inverse weight

1230
00:56:48,599 --> 00:56:56,950
at the end to give us our normalization

1231
00:56:53,798 --> 00:57:01,838
coefficient right so then once we're in

1232
00:56:56,949 --> 00:57:03,460
here we know we want to take all of

1233
00:57:01,838 --> 00:57:06,929
those surfaces that are on the same

1234
00:57:03,460 --> 00:57:06,929
plane the same direction as ours

1235
00:57:08,170 --> 00:57:15,220
and we want to take those services and

1236
00:57:11,400 --> 00:57:17,039
and basically we want to take all of

1237
00:57:15,219 --> 00:57:19,419
those services and average them together

1238
00:57:17,039 --> 00:57:22,960
potentially based on the distance that

1239
00:57:19,420 --> 00:57:25,900
we are from them right so we know our

1240
00:57:22,960 --> 00:57:27,130
point P is here we know that we're ly

1241
00:57:25,900 --> 00:57:28,599
getting other point piece that we're

1242
00:57:27,130 --> 00:57:30,278
going to sum and we can take the

1243
00:57:28,599 --> 00:57:34,690
distance between them and use that as a

1244
00:57:30,278 --> 00:57:37,679
scaling coefficient right so we want all

1245
00:57:34,690 --> 00:57:37,679
of these to start out zero

1246
00:57:57,570 --> 00:58:02,289
so all these are going to start out zero

1247
00:58:00,429 --> 00:58:06,069
then we go through the child indices one

1248
00:58:02,289 --> 00:58:07,389
by one and we're gonna sum up the points

1249
00:58:06,070 --> 00:58:10,330
that they have on this particular

1250
00:58:07,389 --> 00:58:14,219
surface so we need a child point index

1251
00:58:10,329 --> 00:58:14,219
here and we're going to loop over that

1252
00:58:16,559 --> 00:58:23,049
and then do that summation so again we

1253
00:58:20,170 --> 00:58:25,720
need a distance or you know a weight

1254
00:58:23,050 --> 00:58:31,870
that we'll compute here we'll add the

1255
00:58:25,719 --> 00:58:35,969
total 8 like so and then we will sum

1256
00:58:31,869 --> 00:58:35,969
each of these based on that weight so

1257
00:58:43,110 --> 00:58:47,380
when we take a look at what these values

1258
00:58:45,219 --> 00:58:49,599
are here where we do the various weight

1259
00:58:47,380 --> 00:58:51,940
summations here and we do the the total

1260
00:58:49,599 --> 00:58:54,190
weight with the summation what we need

1261
00:58:51,940 --> 00:58:55,840
to do is we need to have a way of

1262
00:58:54,190 --> 00:58:56,860
accessing the correct child points but

1263
00:58:55,840 --> 00:59:00,670
after that it should be fairly

1264
00:58:56,860 --> 00:59:01,530
straightforward because we know each of

1265
00:59:00,670 --> 00:59:04,000
these points

1266
00:59:01,530 --> 00:59:05,769
has that information on it so you can

1267
00:59:04,000 --> 00:59:08,559
see the lining point here has like the

1268
00:59:05,769 --> 00:59:12,670
ref C so I can just say like okay the

1269
00:59:08,559 --> 00:59:16,299
child point ref C goes in there

1270
00:59:12,670 --> 00:59:19,240
we know this solution emission PP s for

1271
00:59:16,300 --> 00:59:21,010
the child point index gives us what we

1272
00:59:19,239 --> 00:59:22,569
want there and the initial people yes to

1273
00:59:21,010 --> 00:59:24,010
checkpoint index gives us what we want

1274
00:59:22,570 --> 00:59:28,059
there so that's pretty straightforward

1275
00:59:24,010 --> 00:59:28,420
and then we get the total weight and off

1276
00:59:28,059 --> 00:59:30,699
we go

1277
00:59:28,420 --> 00:59:32,050
so this is the entire structure of their

1278
00:59:30,699 --> 00:59:33,939
teen all we really need to do is know

1279
00:59:32,050 --> 00:59:36,010
how to find this point and so in order

1280
00:59:33,940 --> 00:59:38,190
to do that we need to get the box that

1281
00:59:36,010 --> 00:59:46,630
we're talking about here the child box

1282
00:59:38,190 --> 00:59:48,909
so we need a lighting box and for that

1283
00:59:46,630 --> 00:59:51,099
we're gonna have to grab the box out of

1284
00:59:48,909 --> 00:59:55,019
the box array here right exactly the way

1285
00:59:51,099 --> 00:59:55,019
that we were doing it right here

1286
00:59:59,030 --> 01:00:02,760
so that gives us the channel box in

1287
01:00:01,349 --> 01:00:04,440
question and then once we have the child

1288
01:00:02,760 --> 01:00:06,510
box we know which what it's child

1289
01:00:04,440 --> 01:00:09,240
indices are by just looking here right

1290
01:00:06,510 --> 01:00:10,589
so we know that the child point the

1291
01:00:09,239 --> 01:00:16,199
point index that we're going to start

1292
01:00:10,588 --> 01:00:20,630
with is going to be the child box light

1293
01:00:16,199 --> 01:00:23,338
index for whichever surface we're on

1294
01:00:20,630 --> 01:00:24,900
right so if we're on surface three we

1295
01:00:23,338 --> 01:00:28,108
get that we start at that weight index

1296
01:00:24,900 --> 01:00:31,680
and then we know that the child point

1297
01:00:28,108 --> 01:00:35,699
index has to go from there to the one

1298
01:00:31,679 --> 01:00:38,608
that's in front of it right so the the

1299
01:00:35,699 --> 01:00:40,618
next one in the array we subtract out

1300
01:00:38,608 --> 01:00:47,239
the previous one that gives us our count

1301
01:00:40,619 --> 01:00:49,710
right oh no what am i this is just this

1302
01:00:47,239 --> 01:00:56,399
we know we go until the next one in the

1303
01:00:49,710 --> 01:00:58,710
array so that's really all we need to do

1304
01:00:56,400 --> 01:01:02,480
there we'll loop over those points now

1305
01:00:58,710 --> 01:01:02,480
we can get our actual child point out

1306
01:01:10,010 --> 01:01:14,940
this gives us the child point and once

1307
01:01:13,559 --> 01:01:16,590
we have the child point we can compute

1308
01:01:14,940 --> 01:01:19,590
the weight however we wish I'm gonna use

1309
01:01:16,590 --> 01:01:21,630
that same function we used before which

1310
01:01:19,590 --> 01:01:26,579
is to say we're just going to take the

1311
01:01:21,630 --> 01:01:29,099
distance between the two points and use

1312
01:01:26,579 --> 01:01:32,610
that as a divisor so I'm going to take

1313
01:01:29,099 --> 01:01:36,839
the point that we're talking about and

1314
01:01:32,610 --> 01:01:42,390
the child point and I'll just use the

1315
01:01:36,840 --> 01:01:43,860
distance squared right so the the leg

1316
01:01:42,389 --> 01:01:47,579
square between those points is how I'll

1317
01:01:43,860 --> 01:01:50,690
weight them and that's really it that's

1318
01:01:47,579 --> 01:01:50,690
the end of the story

1319
01:01:55,940 --> 01:02:02,220
I don't know how Add Box Storage got

1320
01:01:58,559 --> 01:02:10,079
deleted there must have been typos we

1321
01:02:02,219 --> 01:02:18,119
certainly didn't mean to and these are

1322
01:02:10,079 --> 01:02:22,559
you 16 so I believe that now when we run

1323
01:02:18,119 --> 01:02:24,389
this we are now computing aggregate box

1324
01:02:22,559 --> 01:02:26,269
lighting now again one of the problems

1325
01:02:24,389 --> 01:02:29,420
is we don't actually know that we are

1326
01:02:26,269 --> 01:02:33,059
and when we look here you know you see

1327
01:02:29,420 --> 01:02:35,400
the lighting solution all we see is the

1328
01:02:33,059 --> 01:02:38,699
total lighting solution we don't get to

1329
01:02:35,400 --> 01:02:40,829
see that spatial hierarchy um so what

1330
01:02:38,699 --> 01:02:43,500
I'd like to do is I'd like to go ahead

1331
01:02:40,829 --> 01:02:46,199
and see if we can now move to you know

1332
01:02:43,500 --> 01:02:47,369
again computing the lighting now using

1333
01:02:46,199 --> 01:02:50,159
that our information is going to be

1334
01:02:47,369 --> 01:02:54,000
trivial inside here all we're gonna do

1335
01:02:50,159 --> 01:02:56,099
is just do a return if T force this case

1336
01:02:54,000 --> 01:02:57,599
we're gonna add like one less than here

1337
01:02:56,099 --> 01:03:00,000
and that's all we'll have to do to use

1338
01:02:57,599 --> 01:03:06,299
the multi-resolution lighting sample so

1339
01:03:00,000 --> 01:03:08,670
it's great right but if we do that maybe

1340
01:03:06,300 --> 01:03:12,019
it just works brilliantly all of a

1341
01:03:08,670 --> 01:03:15,420
sudden and it's fantastic

1342
01:03:12,019 --> 01:03:17,369
great yay for us but chances are it

1343
01:03:15,420 --> 01:03:18,900
won't work perfectly I mean right we're

1344
01:03:17,369 --> 01:03:21,829
dealing with complex stuff with a lot of

1345
01:03:18,900 --> 01:03:24,389
inter relations and

1346
01:03:21,829 --> 01:03:28,289
we're not even gonna know if we computed

1347
01:03:24,389 --> 01:03:30,690
those values right you know and so what

1348
01:03:28,289 --> 01:03:33,059
I think we need to do is we just have to

1349
01:03:30,690 --> 01:03:39,000
have a way of showing our space

1350
01:03:33,059 --> 01:03:42,090
spaceship spatial hierarchy in more

1351
01:03:39,000 --> 01:03:49,409
detail and in order to do that we're

1352
01:03:42,090 --> 01:03:51,090
gonna need some way of in order to do

1353
01:03:49,409 --> 01:03:53,909
that we're gonna need some way of sort

1354
01:03:51,090 --> 01:03:56,250
of stepping through it somehow right and

1355
01:03:53,909 --> 01:03:59,449
so what I want to do is just add some

1356
01:03:56,250 --> 01:04:02,130
simple ways we could do that hopefully

1357
01:03:59,449 --> 01:04:04,710
maybe inside out put Lennie points for

1358
01:04:02,130 --> 01:04:06,329
example so in output lighting points

1359
01:04:04,710 --> 01:04:15,809
that's the thing that gets run when I

1360
01:04:06,329 --> 01:04:17,909
hit the f1 key so that's this thing so

1361
01:04:15,809 --> 01:04:21,059
what I'm thinking is maybe we can use

1362
01:04:17,909 --> 01:04:23,369
this to our advantage here so let's

1363
01:04:21,059 --> 01:04:28,429
suppose we did output Lennie points and

1364
01:04:23,369 --> 01:04:30,659
we were going to do it this way where we

1365
01:04:28,429 --> 01:04:34,379
go through the boxes and you can see

1366
01:04:30,659 --> 01:04:37,170
this kind of does a nice it does nice

1367
01:04:34,380 --> 01:04:39,480
work that way it goes through each of

1368
01:04:37,170 --> 01:04:40,680
the boxes and sort of puts the

1369
01:04:39,480 --> 01:04:42,329
information out there now why that's

1370
01:04:40,679 --> 01:04:44,669
timed I don't know because it's not

1371
01:04:42,329 --> 01:04:49,650
normally called but I guess let's take a

1372
01:04:44,670 --> 01:04:51,720
look here you know it doesn't it doesn't

1373
01:04:49,650 --> 01:04:53,789
really take any time and it wouldn't be

1374
01:04:51,719 --> 01:04:55,409
called normally anyway right output

1375
01:04:53,789 --> 01:04:57,449
learning points is it's right here and

1376
01:04:55,409 --> 01:04:58,859
it just doesn't get called normally so I

1377
01:04:57,449 --> 01:05:01,079
don't really care about this ping of

1378
01:04:58,860 --> 01:05:02,550
time function I'm rid of that and what

1379
01:05:01,079 --> 01:05:05,819
I'm going to do here is I'm going to go

1380
01:05:02,550 --> 01:05:09,320
ahead and say that this is going to have

1381
01:05:05,820 --> 01:05:09,320
a recursive function now

1382
01:05:12,340 --> 01:05:20,019
and what I want to do is I want to make

1383
01:05:15,730 --> 01:05:21,760
it so that inside here where we output

1384
01:05:20,019 --> 01:05:25,570
one of these boxes we can actually

1385
01:05:21,760 --> 01:05:29,380
choose to or not to descend into the sub

1386
01:05:25,570 --> 01:05:31,960
boxes of that box that's my general idea

1387
01:05:29,380 --> 01:05:35,710
here so what we're gonna do is we're

1388
01:05:31,960 --> 01:05:38,860
gonna say output letting points recurse

1389
01:05:35,710 --> 01:05:41,920
on this particular box and then we're

1390
01:05:38,860 --> 01:05:44,829
gonna have a depth function here let's

1391
01:05:41,920 --> 01:05:49,510
say and what I'm gonna do is say well if

1392
01:05:44,829 --> 01:05:50,769
the depth value is zero then I'm going

1393
01:05:49,510 --> 01:05:52,150
to do the thing that we were doing

1394
01:05:50,769 --> 01:05:58,090
before right

1395
01:05:52,150 --> 01:05:59,530
so we'll we'll do the the the push of

1396
01:05:58,090 --> 01:06:00,400
the lighting elements if the depth is

1397
01:05:59,530 --> 01:06:02,320
zero

1398
01:06:00,400 --> 01:06:04,900
but if the depth is not zero then what

1399
01:06:02,320 --> 01:06:09,280
I'm gonna do is just call this on the

1400
01:06:04,900 --> 01:06:11,079
sub components right so we have one

1401
01:06:09,280 --> 01:06:12,519
other problem I wanna deal with which is

1402
01:06:11,079 --> 01:06:14,710
that we may not have any sub components

1403
01:06:12,519 --> 01:06:23,469
if you don't have any second photos then

1404
01:06:14,710 --> 01:06:25,510
I will let this case happen so if the

1405
01:06:23,469 --> 01:06:31,779
child count is zero meaning I'm sorry if

1406
01:06:25,510 --> 01:06:33,430
the child count yeah if the child count

1407
01:06:31,780 --> 01:06:35,290
is zero then I know that we can't

1408
01:06:33,429 --> 01:06:39,519
recurse on this box it doesn't have any

1409
01:06:35,289 --> 01:06:41,980
sub boxes so we'll do it but if it does

1410
01:06:39,519 --> 01:06:44,139
have children and the depth value that

1411
01:06:41,980 --> 01:06:46,000
we're passing in is high enough then

1412
01:06:44,139 --> 01:06:52,829
what I'm going to do is I'm going to say

1413
01:06:46,000 --> 01:06:52,829
okay let's continue down

1414
01:07:04,730 --> 01:07:09,110
and so all I'm gonna do here is take the

1415
01:07:09,199 --> 01:07:17,579
boxes and I'm gonna do the plus cloud

1416
01:07:14,489 --> 01:07:19,079
index here and again we also need to

1417
01:07:17,579 --> 01:07:22,730
take into account whatever the first one

1418
01:07:19,079 --> 01:07:25,079
is but that's it

1419
01:07:22,730 --> 01:07:27,510
and then we're gonna do is a minute past

1420
01:07:25,079 --> 01:07:29,219
depth minus 1 so that it will continue

1421
01:07:27,510 --> 01:07:32,580
to reduce the depth as we recurse

1422
01:07:29,219 --> 01:07:34,619
downwards and that's all right that's it

1423
01:07:32,579 --> 01:07:36,750
so then what I'm going to do is I'm

1424
01:07:34,619 --> 01:07:40,650
going to call output letting points

1425
01:07:36,750 --> 01:07:42,059
recurse you know and I guess I don't

1426
01:07:40,650 --> 01:07:43,289
know why I removed time function of this

1427
01:07:42,059 --> 01:07:45,570
I guess we can still time the whole

1428
01:07:43,289 --> 01:07:49,889
thing you want to I don't know why we

1429
01:07:45,570 --> 01:07:51,990
would but we could and so what I'm going

1430
01:07:49,889 --> 01:07:53,629
to do here is just pass the things we

1431
01:07:51,989 --> 01:07:56,879
need which is the group in the solution

1432
01:07:53,630 --> 01:08:01,769
and then I'm gonna pass the root box and

1433
01:07:56,880 --> 01:08:05,130
the depth right so we actually I do need

1434
01:08:01,769 --> 01:08:06,869
to pass these two things in addition to

1435
01:08:05,130 --> 01:08:09,840
our two operative parameters the Box in

1436
01:08:06,869 --> 01:08:12,420
the depth so the box in this case is

1437
01:08:09,840 --> 01:08:19,020
going to be the root box all right it's

1438
01:08:12,420 --> 01:08:21,600
gonna be this one and the depth is going

1439
01:08:19,020 --> 01:08:22,920
to be in this case just everything right

1440
01:08:21,600 --> 01:08:25,470
we're just gonna let's just just do

1441
01:08:22,920 --> 01:08:27,659
everything right so I don't know how

1442
01:08:25,470 --> 01:08:29,159
many of these we have but we know it's

1443
01:08:27,659 --> 01:08:30,899
not going to be more than that because 2

1444
01:08:29,159 --> 01:08:34,559
to the 256 is more than like the memory

1445
01:08:30,899 --> 01:08:37,710
in the machine so it doesn't matter so

1446
01:08:34,560 --> 01:08:39,810
inside here we just have two things get

1447
01:08:37,710 --> 01:08:41,460
the element with that we need that's

1448
01:08:39,810 --> 01:08:43,048
just these constants that we had

1449
01:08:41,460 --> 01:08:48,359
specified so that needs to go out here

1450
01:08:43,048 --> 01:08:53,420
we got the white bitmap that comes out

1451
01:08:48,359 --> 01:08:53,420
of the command Q here that again also

1452
01:08:53,659 --> 01:08:56,739
come through

1453
01:08:54,779 --> 01:08:58,750
[Music]

1454
01:08:56,739 --> 01:09:01,899
these I suppose only have to happen and

1455
01:08:58,750 --> 01:09:05,199
we're actually outputting as well and

1456
01:09:01,899 --> 01:09:16,809
then we need to pass the group here and

1457
01:09:05,199 --> 01:09:18,309
the solution and in theory now if I

1458
01:09:16,810 --> 01:09:20,470
haven't messed anything up this should

1459
01:09:18,310 --> 01:09:23,020
still do exactly what did before it's

1460
01:09:20,470 --> 01:09:25,570
just doing it recursively well or it's

1461
01:09:23,020 --> 01:09:28,480
not so yeah if I messed anything up part

1462
01:09:25,569 --> 01:09:30,069
turns out to be important um so let's

1463
01:09:28,479 --> 01:09:32,500
see what's going on here if the depth

1464
01:09:30,069 --> 01:09:34,689
equals zero what do we pass for depth

1465
01:09:32,500 --> 01:09:37,539
it's very high so that won't happen

1466
01:09:34,689 --> 01:09:40,599
or the box trial count equals zero which

1467
01:09:37,539 --> 01:09:42,250
should not be the case then we come in

1468
01:09:40,600 --> 01:09:46,620
through here otherwise assuming we have

1469
01:09:42,250 --> 01:09:46,619
children and we go through each of them

1470
01:10:02,779 --> 01:10:08,500
that should be right shouldn't it

1471
01:10:21,430 --> 01:10:38,250
I couldn't tell you why that wasn't

1472
01:10:33,460 --> 01:10:38,250
working but it's definitely not working

1473
01:10:46,960 --> 01:10:53,140
let's take a look at that I'm gonna step

1474
01:10:50,529 --> 01:10:55,359
on in there obviously it's something

1475
01:10:53,140 --> 01:10:56,800
pretty stupid but sometimes the only way

1476
01:10:55,359 --> 01:11:00,099
to tell what you did stupid is to just

1477
01:10:56,800 --> 01:11:03,400
go go on into the debugger and see what

1478
01:11:00,100 --> 01:11:13,300
you did stupid the debugger or stupid

1479
01:11:03,399 --> 01:11:18,339
finder what happened there so reason

1480
01:11:13,300 --> 01:11:20,829
that my breakpoint didn't hit oh this is

1481
01:11:18,340 --> 01:11:27,840
that okay this is that new thing where

1482
01:11:20,829 --> 01:11:30,369
Visual Studio 20 whatever this is 2017

1483
01:11:27,840 --> 01:11:32,909
does not do breakpoints in the same

1484
01:11:30,369 --> 01:11:36,550
place as it used to it does them there

1485
01:11:32,908 --> 01:11:40,089
yeah I do not know what the deal is that

1486
01:11:36,550 --> 01:11:42,250
but they decide to change that um so

1487
01:11:40,090 --> 01:11:47,140
okay when we break here on this line

1488
01:11:42,250 --> 01:11:48,460
output loading points recurse let's take

1489
01:11:47,140 --> 01:11:50,380
a look at what's going on here so we're

1490
01:11:48,460 --> 01:11:53,020
gonna start at the root box index which

1491
01:11:50,380 --> 01:11:55,260
is set to box zero apparently is that

1492
01:11:53,020 --> 01:11:55,260
correct

1493
01:12:17,300 --> 01:12:26,029
so that doesn't seem right because ad

1494
01:12:22,198 --> 01:12:26,029
box reference should have

1495
01:12:38,779 --> 01:12:48,579
ah right right right these are in

1496
01:12:41,210 --> 01:12:56,149
directed ah yes

1497
01:12:48,579 --> 01:13:03,920
hmm always fun so yeah we have to

1498
01:12:56,149 --> 01:13:05,479
actually in direct those I never love

1499
01:13:03,920 --> 01:13:09,260
that but yeah we don't have any other

1500
01:13:05,479 --> 01:13:13,009
really way of doing it right we have to

1501
01:13:09,260 --> 01:13:15,730
do everything through the Box table so

1502
01:13:13,010 --> 01:13:17,840
both of those routines have to do that

1503
01:13:15,729 --> 01:13:19,309
see I told you we would have got

1504
01:13:17,840 --> 01:13:26,900
something wrong if we didn't visualize

1505
01:13:19,310 --> 01:13:28,640
it and we did I think John Carmack is

1506
01:13:26,899 --> 01:13:30,710
the person who said time spent making

1507
01:13:28,640 --> 01:13:35,030
visualizations has never wasted

1508
01:13:30,710 --> 01:13:37,369
something close to that uh so I believe

1509
01:13:35,029 --> 01:13:39,829
we have our utility function for this so

1510
01:13:37,369 --> 01:13:41,659
we really just have to use it it's

1511
01:13:39,829 --> 01:13:46,970
pretty straightforward it's just that

1512
01:13:41,659 --> 01:13:50,329
right so that's pretty easy to do but we

1513
01:13:46,970 --> 01:13:51,949
have to do that everywhere so in here we

1514
01:13:50,329 --> 01:13:55,250
also have to do that so when we go to

1515
01:13:51,949 --> 01:13:58,099
get this one we would have to do the

1516
01:13:55,250 --> 01:14:04,100
same thing right so we need to do like a

1517
01:13:58,100 --> 01:14:09,220
get box here and then in our building

1518
01:14:04,100 --> 01:14:09,220
routine same thing applies right

1519
01:14:26,738 --> 01:14:31,488
yep

1520
01:14:28,628 --> 01:14:34,248
alright so in the building routine the

1521
01:14:31,488 --> 01:14:37,428
same thing applies just making sure

1522
01:14:34,248 --> 01:14:40,429
so in here for example where we go to do

1523
01:14:37,429 --> 01:14:49,418
our summation when we do a child box we

1524
01:14:40,429 --> 01:14:49,418
have to do a get box like so right I

1525
01:14:51,038 --> 01:14:56,018
think that's the only thing that we did

1526
01:14:53,208 --> 01:14:56,019
stupidly

1527
01:15:11,779 --> 01:15:18,590
I probably don't need to be in debug

1528
01:15:13,908 --> 01:15:20,618
mode anymore but it's just yeah there we

1529
01:15:18,590 --> 01:15:20,619
go

1530
01:15:22,630 --> 01:15:30,260
so what I want to do now is besides

1531
01:15:27,800 --> 01:15:33,380
turning us back to release mode build

1532
01:15:30,260 --> 01:15:39,170
what I'd like to do is I'd like to go

1533
01:15:33,380 --> 01:15:43,000
ahead and figure out how to make the

1534
01:15:39,170 --> 01:15:46,130
lighting drawn this now that I have a

1535
01:15:43,000 --> 01:15:48,948
way of doing this recursively I'd like

1536
01:15:46,130 --> 01:15:51,190
to go ahead and allow make there be a

1537
01:15:48,948 --> 01:15:53,750
way to control that depth

1538
01:15:51,189 --> 01:15:55,460
luck with the keyboard right so I can

1539
01:15:53,750 --> 01:15:58,538
sort of step down the depth and step up

1540
01:15:55,460 --> 01:16:00,500
the depth to see what our

1541
01:15:58,538 --> 01:16:02,238
multi-resolution lighting actually looks

1542
01:16:00,500 --> 01:16:03,349
like which you know would give us a

1543
01:16:02,238 --> 01:16:07,250
little bit more of an idea of what's

1544
01:16:03,349 --> 01:16:09,230
going on so inside the lighting solution

1545
01:16:07,250 --> 01:16:22,880
I'm just gonna have a little debug value

1546
01:16:09,229 --> 01:16:25,098
here and what I want to do is I want to

1547
01:16:22,880 --> 01:16:31,489
make it so that when we do this depth

1548
01:16:25,099 --> 01:16:33,319
here I'm gonna use debug box draw depth

1549
01:16:31,488 --> 01:16:36,288
and so what should happen now is that

1550
01:16:33,319 --> 01:16:38,210
should be set to zero right because we

1551
01:16:36,288 --> 01:16:40,519
never initialize it so when I do this we

1552
01:16:38,210 --> 01:16:43,880
should just have like the the outer box

1553
01:16:40,520 --> 01:16:47,179
basically should be the only thing on

1554
01:16:43,880 --> 01:16:52,300
the table right and what you can see

1555
01:16:47,179 --> 01:16:58,010
here is the this is the outer box right

1556
01:16:52,300 --> 01:17:00,650
and we we ideally want these elements to

1557
01:16:58,010 --> 01:17:04,449
be bigger because the box itself is

1558
01:17:00,649 --> 01:17:06,710
bigger or we're never gonna see it right

1559
01:17:04,448 --> 01:17:10,519
so what I want to do here is I want to

1560
01:17:06,710 --> 01:17:13,069
adjust this information this element

1561
01:17:10,520 --> 01:17:16,699
with element height to be proportional

1562
01:17:13,069 --> 01:17:20,689
to the size of the actual box so that it

1563
01:17:16,698 --> 01:17:23,268
makes some sense right so if we want if

1564
01:17:20,689 --> 01:17:25,599
we were imagining that it was two five

1565
01:17:23,269 --> 01:17:27,940
was the size that was correct for

1566
01:17:25,600 --> 01:17:29,410
whatever those box sizes were we want to

1567
01:17:27,939 --> 01:17:32,079
make sure that we think about what that

1568
01:17:29,409 --> 01:17:33,880
means so it probably meant that those

1569
01:17:32,079 --> 01:17:37,569
boxes were one point something long and

1570
01:17:33,880 --> 01:17:38,650
not sure how long they were but we want

1571
01:17:37,569 --> 01:17:41,019
to sort of have something that's going

1572
01:17:38,649 --> 01:17:42,460
to be proportional to the box size so

1573
01:17:41,020 --> 01:17:44,830
what I'm going to say here is I'm going

1574
01:17:42,460 --> 01:17:49,119
to say all right let's look at the box

1575
01:17:44,829 --> 01:17:53,039
itself and how big its surface was and

1576
01:17:49,119 --> 01:17:55,439
that's what we'll assign these points to

1577
01:17:53,039 --> 01:17:58,840
but that's that's how big the points

1578
01:17:55,439 --> 01:18:03,639
will get assigned to be so if we take a

1579
01:17:58,840 --> 01:18:13,239
look at the box surface call light box

1580
01:18:03,640 --> 01:18:15,490
surface so if we take a look at this guy

1581
01:18:13,239 --> 01:18:17,199
right here we've got the half width and

1582
01:18:15,489 --> 01:18:25,269
the half height what I'm gonna do is

1583
01:18:17,199 --> 01:18:27,489
just take those values and probably just

1584
01:18:25,270 --> 01:18:30,960
divide them again by two right just to

1585
01:18:27,489 --> 01:18:34,840
make them a little smaller than that and

1586
01:18:30,960 --> 01:18:37,149
that'll serve for the moment anyway as

1587
01:18:34,840 --> 01:18:39,279
our understanding of how big we want

1588
01:18:37,149 --> 01:18:40,449
these things to be now I could also make

1589
01:18:39,279 --> 01:18:43,559
it proportional how many lights there

1590
01:18:40,449 --> 01:18:49,449
are but at the moment I'm not going to

1591
01:18:43,560 --> 01:18:52,720
all right so here's our root box and so

1592
01:18:49,449 --> 01:18:54,550
this MMus encapsulate the entire letting

1593
01:18:52,720 --> 01:18:56,650
solution and now what I'd like to do is

1594
01:18:54,550 --> 01:18:59,350
be able to get sort of lower down into

1595
01:18:56,649 --> 01:19:00,819
it again if I wanted to I could make

1596
01:18:59,350 --> 01:19:03,579
this a little more accurate potentially

1597
01:19:00,819 --> 01:19:10,259
by again using that light point count so

1598
01:19:03,579 --> 01:19:10,260
I could say something like you know

1599
01:19:11,789 --> 01:19:15,930
point count equals

1600
01:19:19,340 --> 01:19:26,699
that which is the number of points on

1601
01:19:21,720 --> 01:19:30,750
the surface and then I could say size

1602
01:19:26,699 --> 01:19:34,289
ratio equals fair points or 1.0 or

1603
01:19:30,750 --> 01:19:40,560
something what do I really want to say

1604
01:19:34,289 --> 01:19:42,869
there so maybe Oh 1.8 I don't know

1605
01:19:40,560 --> 01:19:44,940
something like that and then I could say

1606
01:19:42,869 --> 01:19:47,789
well if the point count is greater than

1607
01:19:44,939 --> 01:19:50,460
one so there's more than one point then

1608
01:19:47,789 --> 01:19:51,810
we'll just divide the size ratio by that

1609
01:19:50,460 --> 01:19:54,899
point count because we don't really know

1610
01:19:51,810 --> 01:19:56,640
what else we would do necessarily it's

1611
01:19:54,899 --> 01:19:58,769
probably not the best way to do this but

1612
01:19:56,640 --> 01:20:00,390
it's good enough for now and then we'll

1613
01:19:58,770 --> 01:20:02,010
just say that we have a size ratio that

1614
01:20:00,390 --> 01:20:04,320
multiplies these here and that's just

1615
01:20:02,010 --> 01:20:06,869
our sort of poor way of getting some

1616
01:20:04,319 --> 01:20:11,519
related size and so now when we look at

1617
01:20:06,869 --> 01:20:13,949
the box we can actually see here's our

1618
01:20:11,520 --> 01:20:15,120
thing the white is not involved in lying

1619
01:20:13,949 --> 01:20:17,609
solution because it's too far away from

1620
01:20:15,119 --> 01:20:19,699
the visible area there's our lighting

1621
01:20:17,609 --> 01:20:22,979
box which is what we would expect right

1622
01:20:19,699 --> 01:20:24,569
and there's the sum amount of lighting

1623
01:20:22,979 --> 01:20:26,819
now the first thing that I notice here

1624
01:20:24,569 --> 01:20:28,799
is the lighting on this box isn't

1625
01:20:26,819 --> 01:20:31,170
fabulous I don't know maybe it's not as

1626
01:20:28,800 --> 01:20:33,449
bad as I think but there could be some

1627
01:20:31,170 --> 01:20:36,630
bugs in here it does correctly seem to

1628
01:20:33,449 --> 01:20:38,010
give more weight to here so you can kind

1629
01:20:36,630 --> 01:20:39,329
of see that where the light is it

1630
01:20:38,010 --> 01:20:41,220
actually is a little bit brighter so I

1631
01:20:39,329 --> 01:20:42,930
don't know maybe it's not wrong but it

1632
01:20:41,220 --> 01:20:44,730
does seem like over on this side it

1633
01:20:42,930 --> 01:20:48,030
should be darker than it is and it's not

1634
01:20:44,729 --> 01:20:50,309
so I'm not sure about that maybe we've

1635
01:20:48,029 --> 01:20:52,170
got the weighting information incorrect

1636
01:20:50,310 --> 01:20:54,210
here or maybe something else is busted

1637
01:20:52,170 --> 01:20:55,829
but I think it's probably worth checking

1638
01:20:54,210 --> 01:20:56,970
that a little bit and figuring out

1639
01:20:55,829 --> 01:20:58,529
what's going on there because it could

1640
01:20:56,970 --> 01:20:59,520
be that something's busted now we'll get

1641
01:20:58,529 --> 01:21:01,769
a little bit more information about

1642
01:20:59,520 --> 01:21:03,660
whether something is busted now as I go

1643
01:21:01,770 --> 01:21:07,020
and add the ability for us to adjust

1644
01:21:03,659 --> 01:21:09,000
that value so what I'm gonna do here is

1645
01:21:07,020 --> 01:21:12,060
along with where we have our F keys

1646
01:21:09,000 --> 01:21:15,329
pressed what we can do here is again add

1647
01:21:12,060 --> 01:21:19,470
in some F key information maybe f5 and

1648
01:21:15,329 --> 01:21:23,149
f6 to allow us to step that lighting in

1649
01:21:19,470 --> 01:21:27,539
and out so here on the lighting solution

1650
01:21:23,149 --> 01:21:28,809
what we want to do is what's that called

1651
01:21:27,539 --> 01:21:35,649
solution

1652
01:21:28,810 --> 01:21:37,420
I don't remember test lighting so what I

1653
01:21:35,649 --> 01:21:42,009
want to do here is inside that test

1654
01:21:37,420 --> 01:21:50,739
lighting I want to take the debug box

1655
01:21:42,010 --> 01:21:55,440
draw depth and I want to modify it so if

1656
01:21:50,739 --> 01:21:55,439
we hit f5 if this is greater than zero

1657
01:21:56,310 --> 01:22:03,360
then I just want to subtract it and in

1658
01:22:02,050 --> 01:22:09,090
the other case I just want to add to it

1659
01:22:03,359 --> 01:22:09,089
and that's it that's all I want to do

1660
01:22:15,810 --> 01:22:20,500
and now in theory what we should be able

1661
01:22:18,640 --> 01:22:21,760
to do is use a five and a six so if a to

1662
01:22:20,500 --> 01:22:23,319
five nothing should happen because we

1663
01:22:21,760 --> 01:22:24,730
should be at the lowest level ready if I

1664
01:22:23,319 --> 01:22:28,389
hit a six we should be able to see our

1665
01:22:24,729 --> 01:22:30,069
next two boxes down and then so on and

1666
01:22:28,390 --> 01:22:32,770
so forth

1667
01:22:30,069 --> 01:22:34,449
and so what you can see here is I

1668
01:22:32,770 --> 01:22:36,940
definitely think we've got bugs in here

1669
01:22:34,449 --> 01:22:41,769
because these don't seem like fair

1670
01:22:36,939 --> 01:22:43,689
representations of the lighting right so

1671
01:22:41,770 --> 01:22:45,790
if I toggle back and forth and you take

1672
01:22:43,689 --> 01:22:49,210
a look at what lighting elements are

1673
01:22:45,789 --> 01:22:50,649
being summed here while this does look

1674
01:22:49,210 --> 01:22:52,239
like a box that correctly in caps like

1675
01:22:50,649 --> 01:22:57,779
this there's definitely some lighting

1676
01:22:52,239 --> 01:22:57,779
here and yet the lighting on this well

1677
01:22:59,550 --> 01:23:05,400
yeah it's just I mean it just doesn't

1678
01:23:01,810 --> 01:23:07,720
seem to make a lot of sense does it I

1679
01:23:05,399 --> 01:23:12,939
mean those are the boxes that are

1680
01:23:07,720 --> 01:23:15,490
included here and somehow this boxes

1681
01:23:12,939 --> 01:23:17,409
says that all of the things inside it

1682
01:23:15,489 --> 01:23:22,449
have no light at all but yet you can see

1683
01:23:17,409 --> 01:23:24,340
that there's light in them right and so

1684
01:23:22,449 --> 01:23:28,090
it seems like maybe we're only getting

1685
01:23:24,340 --> 01:23:31,090
the emission value here and no reflected

1686
01:23:28,090 --> 01:23:32,909
value at all but we should be accounting

1687
01:23:31,090 --> 01:23:37,239
the reflecting value from last frame

1688
01:23:32,909 --> 01:23:39,789
right I mean in fact if you look at it

1689
01:23:37,239 --> 01:23:42,099
it's very clearly giving us that because

1690
01:23:39,789 --> 01:23:45,609
look at where the lights are here's

1691
01:23:42,100 --> 01:23:48,070
lights that are emitting and when I go

1692
01:23:45,609 --> 01:23:50,529
ahead here and start to put these

1693
01:23:48,069 --> 01:23:52,979
together you can see that the boxes that

1694
01:23:50,529 --> 01:23:55,659
don't have emitters have nothing right

1695
01:23:52,979 --> 01:23:57,250
so I think we've got a bug where we're

1696
01:23:55,659 --> 01:23:59,050
only counting emission and we're not

1697
01:23:57,250 --> 01:24:03,670
counting secondary emission so

1698
01:23:59,050 --> 01:24:04,960
transmitted emission and so let's take a

1699
01:24:03,670 --> 01:24:06,399
look at like what's happening there or

1700
01:24:04,960 --> 01:24:08,260
why that's happening so that we can

1701
01:24:06,399 --> 01:24:11,829
understand a little bit better so when

1702
01:24:08,260 --> 01:24:14,320
we're doing our recursive output you can

1703
01:24:11,829 --> 01:24:16,300
see we do accumulated PPS and emission

1704
01:24:14,319 --> 01:24:20,439
PPS are the two things we add together

1705
01:24:16,300 --> 01:24:22,390
here and so what do we need to do I

1706
01:24:20,439 --> 01:24:26,219
guess so that that's probably the

1707
01:24:22,390 --> 01:24:26,220
problem since we're cold setting that

1708
01:24:35,838 --> 01:24:38,689
well I don't know if that's true let's

1709
01:24:37,458 --> 01:24:40,368
go ahead and look so we know that

1710
01:24:38,689 --> 01:24:42,378
accumulated PPS is going to be nothing

1711
01:24:40,368 --> 01:24:45,168
we know that admission PPS is going to

1712
01:24:42,378 --> 01:24:46,639
be whatever started out as right so that

1713
01:24:45,168 --> 01:24:50,929
explains the results for seeing if

1714
01:24:46,639 --> 01:24:53,389
emission PPS never got modified let's

1715
01:24:50,929 --> 01:24:56,328
see what happens so here you can see

1716
01:24:53,389 --> 01:24:59,149
that we sum our emission PPS we sum our

1717
01:24:56,328 --> 01:25:01,308
initial PPS here and then I guess the

1718
01:24:59,149 --> 01:25:03,649
problem is that's actually the value

1719
01:25:01,309 --> 01:25:05,838
that we want to be drawing right it's

1720
01:25:03,649 --> 01:25:08,119
the initial PPS that we actually wanted

1721
01:25:05,838 --> 01:25:10,099
so I think what we probably have to do

1722
01:25:08,118 --> 01:25:13,098
here and this sort of answers our

1723
01:25:10,099 --> 01:25:15,229
question is the accumulated PPS kind of

1724
01:25:13,099 --> 01:25:23,538
has to be set to the initial PPS as well

1725
01:25:15,229 --> 01:25:26,359
I guess yeah I don't know any other way

1726
01:25:23,538 --> 01:25:29,889
to do it and that I guess should draw

1727
01:25:26,359 --> 01:25:29,889
more fairly what's happening here

1728
01:25:36,380 --> 01:25:41,779
so again here's that initial box here's

1729
01:25:40,310 --> 01:25:46,280
what we're looking at in terms of the

1730
01:25:41,779 --> 01:25:50,750
lighting solution there so there's the

1731
01:25:46,279 --> 01:25:52,899
initial box and let's go ahead and step

1732
01:25:50,750 --> 01:25:52,899
down

1733
01:25:59,439 --> 01:26:04,169
it does seem a little weird right I mean

1734
01:26:01,840 --> 01:26:04,170
doesn't

1735
01:26:15,529 --> 01:26:22,840
it doesn't really seem like a fair

1736
01:26:18,649 --> 01:26:22,839
average to me

1737
01:26:33,340 --> 01:26:38,230
like where is that light coming from

1738
01:26:39,429 --> 01:26:45,158
you know why is that suddenly pure

1739
01:26:42,920 --> 01:26:45,158
bright

1740
01:26:52,810 --> 01:26:57,140
is it because there's a light in there

1741
01:26:55,310 --> 01:27:00,310
that's getting averaged all of a sudden

1742
01:26:57,140 --> 01:27:00,310
I guess that is why

1743
01:27:06,380 --> 01:27:10,079
so let's try it let's just see if it's

1744
01:27:08,699 --> 01:27:13,970
fair if we don't draw that because

1745
01:27:10,079 --> 01:27:13,970
that's not really relevant I suppose

1746
01:27:21,800 --> 01:27:31,500
so I guess what I'll say here is let's

1747
01:27:24,300 --> 01:27:42,409
not add that in unless this is a leaf

1748
01:27:31,500 --> 01:27:42,409
box does that fix that problem all right

1749
01:27:43,069 --> 01:27:48,889
that does not seem to fix that problem I

1750
01:27:52,670 --> 01:27:57,720
do that right so we're drawing the

1751
01:27:55,590 --> 01:28:00,960
lighting points we start with the

1752
01:27:57,720 --> 01:28:05,130
accumulated PPS if the child account of

1753
01:28:00,960 --> 01:28:07,020
a box is zero then its emission PPS is

1754
01:28:05,130 --> 01:28:10,640
included otherwise the mission PPS is

1755
01:28:07,020 --> 01:28:10,640
not included right

1756
01:28:19,659 --> 01:28:23,779
so I mean you know I can and I can

1757
01:28:22,279 --> 01:28:27,579
double-check this by just saying look we

1758
01:28:23,779 --> 01:28:27,579
never at it it's just not even in there

1759
01:28:31,779 --> 01:28:38,590
yeah so so in that case we're still

1760
01:28:35,390 --> 01:28:43,010
getting sort of the accumulated values

1761
01:28:38,590 --> 01:28:49,069
themselves are blown out in that

1762
01:28:43,010 --> 01:28:51,320
summation which just seems weird right

1763
01:28:49,069 --> 01:28:52,279
cuz these are averages and so especially

1764
01:28:51,319 --> 01:28:54,139
when they're not taking into account

1765
01:28:52,279 --> 01:29:00,109
that a mission people yes so something

1766
01:28:54,140 --> 01:29:15,460
seems busted here let's see why that's

1767
01:29:00,109 --> 01:29:20,289
happening so everything that we some is

1768
01:29:15,460 --> 01:29:20,289
definitely multiplied by the wait

1769
01:29:35,699 --> 01:29:48,849
right the ref see the emission and the

1770
01:29:39,779 --> 01:29:50,619
initial they all get normalized so I'm

1771
01:29:48,850 --> 01:29:59,430
not sure why we would be getting that

1772
01:29:50,619 --> 01:29:59,430
sort of aggressive over-counting there I

1773
01:30:01,920 --> 01:30:07,659
guess since I mean given that the value

1774
01:30:05,350 --> 01:30:09,850
is so much higher it's possible that it

1775
01:30:07,659 --> 01:30:19,569
just is naturally dominating the average

1776
01:30:09,850 --> 01:30:25,140
I guess but that doesn't I don't know if

1777
01:30:19,569 --> 01:30:25,139
I really believe that you know

1778
01:30:28,689 --> 01:30:32,710
it seems a little far-fetched

1779
01:30:51,979 --> 01:30:56,419
I suppose part of it could be that maybe

1780
01:30:54,590 --> 01:30:58,039
the fall-off is too steep I mean we

1781
01:30:56,420 --> 01:31:10,329
could be we could try doing actual

1782
01:30:58,039 --> 01:31:10,329
length but again I'm not really sure

1783
01:31:13,149 --> 01:31:17,269
not sure what a good way to approach

1784
01:31:15,439 --> 01:31:23,089
that would be debugging wise because it

1785
01:31:17,270 --> 01:31:24,500
definitely seems wrong to me but it

1786
01:31:23,090 --> 01:31:27,369
could be that I'm just misunderstanding

1787
01:31:24,500 --> 01:31:27,368
something as well

1788
01:31:43,369 --> 01:31:47,849
it could be that they're just so bright

1789
01:31:45,720 --> 01:31:50,520
they dominate the average I could be

1790
01:31:47,850 --> 01:31:52,260
willing to believe that it's just I

1791
01:31:50,520 --> 01:31:54,090
don't really want to assume that that's

1792
01:31:52,260 --> 01:31:55,619
true and then have that turn out to be a

1793
01:31:54,090 --> 01:32:00,750
bad bug that's in there that we're just

1794
01:31:55,619 --> 01:32:03,059
missing right so I don't know so here's

1795
01:32:00,750 --> 01:32:05,010
what I'll say we don't know much time of

1796
01:32:03,060 --> 01:32:06,210
I want to say that let's just assume we

1797
01:32:05,010 --> 01:32:11,270
need to do a little bit more work on

1798
01:32:06,210 --> 01:32:11,270
that still some not 100% happy with that

1799
01:32:12,439 --> 01:32:19,019
but that's okay so what I'd like to do

1800
01:32:15,090 --> 01:32:20,159
here is just go ahead and and finish the

1801
01:32:19,020 --> 01:32:22,050
part that I was going to say before

1802
01:32:20,159 --> 01:32:23,519
which is let's just go ahead and use

1803
01:32:22,050 --> 01:32:26,070
that now

1804
01:32:23,520 --> 01:32:29,760
and see what difference that makes so

1805
01:32:26,069 --> 01:32:33,479
here where we do if box child count what

1806
01:32:29,760 --> 01:32:42,360
we'll do is we'll say okay and close

1807
01:32:33,479 --> 01:32:45,509
enough right and so what we can do here

1808
01:32:42,359 --> 01:32:47,460
is now introduce an expression - close

1809
01:32:45,510 --> 01:32:50,190
enough that we'll make it so that we

1810
01:32:47,460 --> 01:32:53,460
don't recurse if something is too far

1811
01:32:50,189 --> 01:32:56,389
away okay so here we're doing our

1812
01:32:53,460 --> 01:32:59,819
lighting and we're doing it that way

1813
01:32:56,390 --> 01:33:01,260
where we always use everything and now

1814
01:32:59,819 --> 01:33:03,359
I'm going to just try adding in an

1815
01:33:01,260 --> 01:33:06,390
expression that will make it so that we

1816
01:33:03,359 --> 01:33:12,319
won't do that right so if we say that

1817
01:33:06,390 --> 01:33:15,119
well okay let's suppose that tier a is

1818
01:33:12,319 --> 01:33:16,590
less than some value is how we're gonna

1819
01:33:15,119 --> 01:33:19,769
do that I don't know what the value

1820
01:33:16,590 --> 01:33:22,829
should be I have no idea let's say that

1821
01:33:19,770 --> 01:33:24,360
the value has to be six meters or

1822
01:33:22,829 --> 01:33:27,000
something like this

1823
01:33:24,359 --> 01:33:30,000
in order for us to recurse now we should

1824
01:33:27,000 --> 01:33:31,439
get a very different result from the

1825
01:33:30,000 --> 01:33:32,850
system in theory although I guess I

1826
01:33:31,439 --> 01:33:37,469
don't actually know if that's quite far

1827
01:33:32,850 --> 01:33:39,300
enough but you can imagine us playing

1828
01:33:37,470 --> 01:33:40,230
with this value now to see what the

1829
01:33:39,300 --> 01:33:46,230
difference is

1830
01:33:40,229 --> 01:33:50,909
okay so let's see here is our total ray

1831
01:33:46,229 --> 01:33:52,469
count it's I'm sorry a ray cast box

1832
01:33:50,909 --> 01:33:57,210
count it's

1833
01:33:52,470 --> 01:34:02,240
1 million I think want to be able to see

1834
01:33:57,210 --> 01:34:08,250
these at the same time I can't do that

1835
01:34:02,239 --> 01:34:12,779
multi-monitor all right so it's 1

1836
01:34:08,250 --> 01:34:16,979
million ish right here's if it's just 2

1837
01:34:12,779 --> 01:34:18,509
meters away there you go so that drops

1838
01:34:16,979 --> 01:34:22,889
it down it doesn't drop it down as much

1839
01:34:18,510 --> 01:34:29,369
as I would have thought though put it

1840
01:34:22,890 --> 01:34:30,840
back up to 10 so the effects are smaller

1841
01:34:29,369 --> 01:34:32,159
than I would have thought they were

1842
01:34:30,840 --> 01:34:37,619
although that could just be because

1843
01:34:32,159 --> 01:34:39,630
we're in not as big of a space like we

1844
01:34:37,619 --> 01:34:42,029
you know we're still for whatever reason

1845
01:34:39,630 --> 01:34:46,609
this particular creation here did not

1846
01:34:42,029 --> 01:34:46,609
really yeah

1847
01:34:47,819 --> 01:34:51,840
didn't really create a very wide room I

1848
01:34:50,038 --> 01:35:06,268
could I could go through and oh you know

1849
01:34:51,840 --> 01:35:08,788
why we can make the room real big

1850
01:35:06,269 --> 01:35:11,219
actually can't wait so let's suppose I

1851
01:35:08,788 --> 01:35:13,768
just do a screen index of one but I make

1852
01:35:11,219 --> 01:35:16,069
the room like 32 by 32 or something does

1853
01:35:13,769 --> 01:35:16,070
that work

1854
01:35:22,539 --> 01:35:28,340
it's not 2-minute we never really did

1855
01:35:26,810 --> 01:35:30,350
the world creation stuff that we need to

1856
01:35:28,340 --> 01:35:32,329
do in order to make sure that we can

1857
01:35:30,350 --> 01:35:34,460
like the world building stuff is still a

1858
01:35:32,329 --> 01:35:44,479
bit busted but okay there we go

1859
01:35:34,460 --> 01:35:50,119
there's a much larger room oh that's a

1860
01:35:44,479 --> 01:35:53,779
very large room so there's a much larger

1861
01:35:50,119 --> 01:35:56,059
room you can see the area that this is

1862
01:35:53,779 --> 01:35:58,519
the box that we've just arbitrarily set

1863
01:35:56,060 --> 01:36:02,090
up for lighting so the area outside it

1864
01:35:58,520 --> 01:36:08,960
doesn't get lighting and off we go

1865
01:36:02,090 --> 01:36:10,909
so at the moment there's our raycast box

1866
01:36:08,960 --> 01:36:21,670
count I'm gonna turn this off

1867
01:36:10,909 --> 01:36:21,670
I just sang oops didn't mean to do that

1868
01:36:22,270 --> 01:36:26,170
then to just make it be true

1869
01:36:29,739 --> 01:36:34,000
and if I look at the total ray can't

1870
01:36:31,630 --> 01:36:35,500
cast box count here which I think that

1871
01:36:34,000 --> 01:36:37,390
is the thing that comes through here

1872
01:36:35,500 --> 01:36:40,739
right we increment this every time

1873
01:36:37,390 --> 01:36:40,740
through yeah

1874
01:36:43,050 --> 01:36:47,500
so if I crank that number down quite a

1875
01:36:45,489 --> 01:36:51,909
bit we should cast a lot fewer boxes

1876
01:36:47,500 --> 01:37:06,189
right well I don't know about a lot here

1877
01:36:51,909 --> 01:37:07,329
but so from one point 1 million why are

1878
01:37:06,189 --> 01:37:11,250
we getting I don't know why we're

1879
01:37:07,329 --> 01:37:11,250
getting that it's really annoying

1880
01:37:16,270 --> 01:37:22,909
so that number just doesn't decrease

1881
01:37:19,039 --> 01:37:25,149
very much so I feel like something weird

1882
01:37:22,908 --> 01:37:25,149
is happening

1883
01:37:35,639 --> 01:37:38,449
because

1884
01:37:41,920 --> 01:37:45,550
I guess unless our spacial hierarchy is

1885
01:37:44,229 --> 01:37:48,329
just maybe our state shark is just

1886
01:37:45,550 --> 01:37:48,329
really good

1887
01:37:57,899 --> 01:38:02,729
I mean this is incredibly you can even

1888
01:38:01,079 --> 01:38:14,039
see the results of how the lighting is

1889
01:38:02,729 --> 01:38:20,849
very bucketed here I'm surprised to see

1890
01:38:14,039 --> 01:38:24,469
because we know that the well I guess

1891
01:38:20,850 --> 01:38:28,440
the fact that solution point count says

1892
01:38:24,469 --> 01:38:30,448
what it says maybe has something to do

1893
01:38:28,439 --> 01:38:43,559
with it point count should not be that

1894
01:38:30,448 --> 01:38:49,129
number let's go look at that where is

1895
01:38:43,560 --> 01:38:49,130
that value getting output

1896
01:39:04,630 --> 01:39:17,409
so what's happening here are how are we

1897
01:39:11,078 --> 01:39:20,399
getting that value solution point count

1898
01:39:17,408 --> 01:39:25,379
should be a sane value but it's not

1899
01:39:20,399 --> 01:39:28,859
right I want to see what's up at that

1900
01:39:25,380 --> 01:39:28,859
that's definitely bad

1901
01:39:39,810 --> 01:39:48,030
so the point count is 3457 supposedly

1902
01:39:54,149 --> 01:40:09,359
yet we're seeing that value what on

1903
01:40:00,899 --> 01:40:14,509
earth is going on there do we have a bug

1904
01:40:09,359 --> 01:40:17,899
in how we output you six teens could be

1905
01:40:14,510 --> 01:40:17,900
let's find out

1906
01:40:34,219 --> 01:40:41,779
looks like it now I don't know why there

1907
01:40:38,960 --> 01:40:52,880
because the box count is also a year 16

1908
01:40:41,779 --> 01:40:56,899
is it not so that seems a little bit

1909
01:40:52,880 --> 01:40:59,029
weird but it could be because it's

1910
01:40:56,899 --> 01:41:00,979
padded so it could be that since there's

1911
01:40:59,029 --> 01:41:03,158
another thing in fact I guess I can test

1912
01:41:00,979 --> 01:41:03,158
that

1913
01:41:12,869 --> 01:41:17,359
so let's suppose that we did exactly

1914
01:41:15,119 --> 01:41:20,689
that and we said all right we're

1915
01:41:17,359 --> 01:41:27,799
outputting the solution point count and

1916
01:41:20,689 --> 01:41:27,799
what we see when we go through here so

1917
01:41:28,640 --> 01:41:39,510
is this garbage value now we go ahead

1918
01:41:33,449 --> 01:41:42,329
and Pat it inside here so we say there's

1919
01:41:39,510 --> 01:41:49,110
just a huge gap of zeroes in between

1920
01:41:42,329 --> 01:41:52,739
there now what happens yeah so there's

1921
01:41:49,109 --> 01:41:56,609
definitely some problem with how we were

1922
01:41:52,739 --> 01:41:59,489
doing that we must cast to a u-32

1923
01:41:56,609 --> 01:42:02,960
pointer somewhere in the debug interface

1924
01:41:59,489 --> 01:42:02,960
for you 16

1925
01:42:36,908 --> 01:42:42,029
so we're passing the pointer to the

1926
01:42:39,279 --> 01:42:42,029
value

1927
01:43:00,789 --> 01:43:06,729
and I guess it must be choosing the u32

1928
01:43:03,909 --> 01:43:15,970
version so I'm wondering here suppose I

1929
01:43:06,729 --> 01:43:21,609
do this so we don't have a youth 16

1930
01:43:15,970 --> 01:43:23,800
version yeah so it looks like it's

1931
01:43:21,609 --> 01:43:26,259
because we don't have a 60 version it's

1932
01:43:23,800 --> 01:43:31,050
treating it like a u-32 which is you

1933
01:43:26,260 --> 01:43:31,050
know completely wrong

1934
01:43:44,359 --> 01:43:49,609
so we can make a custom version of one

1935
01:43:47,279 --> 01:43:49,609
of these

1936
01:43:59,560 --> 01:44:28,050
and that would be like something like

1937
01:44:09,909 --> 01:44:33,930
this right oops where we have the like

1938
01:44:28,050 --> 01:44:36,880
type of the thing and an AZ type right

1939
01:44:33,930 --> 01:44:40,150
and then we said well the type of the

1940
01:44:36,880 --> 01:44:43,630
thing is gonna be one of these and then

1941
01:44:40,149 --> 01:45:03,899
you know we'll write it back by casting

1942
01:44:43,630 --> 01:45:03,900
it and you know your mileage may vary

1943
01:45:04,560 --> 01:45:11,550
what was the question macro redefinition

1944
01:45:09,130 --> 01:45:11,550
OOP sorry

1945
01:45:18,859 --> 01:45:32,688
and when we set the type it's gotta be

1946
01:45:23,059 --> 01:45:35,748
that one uh so yeah I mean we can do

1947
01:45:32,689 --> 01:45:38,989
that and that's all fine and that would

1948
01:45:35,748 --> 01:45:40,698
probably just solve the problem if

1949
01:45:38,988 --> 01:45:48,549
anyone cared I don't know that anyone

1950
01:45:40,698 --> 01:45:48,549
does but probably we work with u16s now

1951
01:45:48,908 --> 01:45:55,129
Hey look

1952
01:45:51,819 --> 01:46:01,009
so for three thousand four hundred and

1953
01:45:55,130 --> 01:46:05,288
fifty seven points I and we're casting

1954
01:46:01,010 --> 01:46:05,289
sixteen raise four point at the moment

1955
01:46:06,819 --> 01:46:09,819
right

1956
01:46:18,899 --> 01:46:29,859
so that's 55,000 points at 55,000

1957
01:46:25,210 --> 01:46:33,609
initial raise so 55,000 is like in this

1958
01:46:29,859 --> 01:46:36,189
range here so if I were to heavily

1959
01:46:33,609 --> 01:46:38,500
restrict that distance I would actually

1960
01:46:36,189 --> 01:46:43,299
have expected it to be quite a bit less

1961
01:46:38,500 --> 01:46:44,948
than that value when I do the raycast

1962
01:46:43,300 --> 01:46:49,239
and I'm not seeing that which is just a

1963
01:46:44,948 --> 01:46:53,678
little bit odd right so let's see I just

1964
01:46:49,238 --> 01:46:56,019
force it to always hit the top one what

1965
01:46:53,679 --> 01:46:57,670
happens other than the fact that we

1966
01:46:56,020 --> 01:47:01,000
crash in that we should probably switch

1967
01:46:57,670 --> 01:47:02,199
to using conserved DLLs so we don't have

1968
01:47:01,000 --> 01:47:07,658
to worry about string preservation

1969
01:47:02,198 --> 01:47:10,388
anymore so how many do we cast now yeah

1970
01:47:07,658 --> 01:47:12,629
that just that seems really strange so

1971
01:47:10,389 --> 01:47:14,819
that means that we're in enough boxes

1972
01:47:12,630 --> 01:47:18,578
[Music]

1973
01:47:14,819 --> 01:47:21,399
just by default to have to iterate over

1974
01:47:18,578 --> 01:47:28,719
that many children even if I'm all the

1975
01:47:21,399 --> 01:47:32,500
way out here in the corner right and I

1976
01:47:28,719 --> 01:47:35,739
just don't know what to make of that but

1977
01:47:32,500 --> 01:47:38,819
it sure seems like a bug like if we're

1978
01:47:35,738 --> 01:47:38,819
never recursing

1979
01:47:46,930 --> 01:47:58,890
then I don't see how we get that far

1980
01:47:49,569 --> 01:47:58,889
down the down the road no I'm Santa

1981
01:48:06,260 --> 01:48:10,500
because in theory this is only happening

1982
01:48:08,969 --> 01:48:13,380
if we're actually inside it

1983
01:48:10,500 --> 01:48:15,149
maybe this check is wrong is this firing

1984
01:48:13,380 --> 01:48:17,699
like way more often than it should

1985
01:48:15,149 --> 01:48:26,819
because this should only recurse on

1986
01:48:17,698 --> 01:48:28,408
boxes that we actually are inside where

1987
01:48:26,819 --> 01:48:32,149
the the thing that's casting the array

1988
01:48:28,408 --> 01:48:32,149
is inside the actual box

1989
01:48:39,359 --> 01:48:43,289
and so that if I'm out in the corner

1990
01:48:41,550 --> 01:48:45,420
that should only be accounting for a

1991
01:48:43,289 --> 01:48:49,680
very small number of actual boxes

1992
01:48:45,420 --> 01:48:54,390
involved right we could test that if we

1993
01:48:49,680 --> 01:48:56,490
wanted to but just like yeah you know if

1994
01:48:54,390 --> 01:49:00,420
we look at how many things we'd have to

1995
01:48:56,489 --> 01:49:07,319
expand it be like the only box that we'd

1996
01:49:00,420 --> 01:49:10,170
be inside of for any given point it just

1997
01:49:07,319 --> 01:49:14,369
seems like it would be well we know it

1998
01:49:10,170 --> 01:49:17,720
would be four but I guess it's includes

1999
01:49:14,369 --> 01:49:20,689
it includes the whole path downward

2000
01:49:17,720 --> 01:49:23,159
maybe that's enough to make it like 10

2001
01:49:20,689 --> 01:49:27,469
because if it was 10 then I guess that's

2002
01:49:23,159 --> 01:49:27,470
where you get that multiplier for

2003
01:49:34,488 --> 01:49:43,399
well what am I saying look at the total

2004
01:49:36,800 --> 01:49:44,960
array count it's huge hmm yeah okay

2005
01:49:43,399 --> 01:49:47,000
let's let's investigate this further

2006
01:49:44,960 --> 01:49:50,140
I'm obviously confused about how this is

2007
01:49:47,000 --> 01:49:52,609
working which is not good

2008
01:49:50,140 --> 01:49:54,380
so let's investigate this a little bit

2009
01:49:52,609 --> 01:49:56,479
further and I'll just return it to its

2010
01:49:54,380 --> 01:49:58,750
original state so this this is just

2011
01:49:56,479 --> 01:50:04,789
doing the same all lighting no changes

2012
01:49:58,750 --> 01:50:07,340
how many rays are we casting like how

2013
01:50:04,789 --> 01:50:09,529
many rays are getting cast here so when

2014
01:50:07,340 --> 01:50:13,069
we look at total array count here is the

2015
01:50:09,529 --> 01:50:15,079
number so that should be the ray count

2016
01:50:13,069 --> 01:50:16,719
like you know what we would expect to

2017
01:50:15,079 --> 01:50:19,460
see or what I'm expecting to see

2018
01:50:16,719 --> 01:50:22,609
erroneously obviously is that's the

2019
01:50:19,460 --> 01:50:26,000
number of points we have right so the

2020
01:50:22,609 --> 01:50:28,039
number of points then needs to each one

2021
01:50:26,000 --> 01:50:31,880
of those is going to get cast 16 rays

2022
01:50:28,039 --> 01:50:33,529
right so I would expect 55,000 so

2023
01:50:31,880 --> 01:50:35,600
obviously I'm thinking of the ray count

2024
01:50:33,529 --> 01:50:39,609
wrong why am I thinking of the ray count

2025
01:50:35,600 --> 01:50:39,610
wrong so here we are

2026
01:50:43,238 --> 01:50:49,519
let's take a look here's our sample set

2027
01:50:46,060 --> 01:50:51,440
here's our read count so for each sample

2028
01:50:49,520 --> 01:50:56,060
point which is the point count wide

2029
01:50:51,439 --> 01:50:58,189
we're gonna do that many Ray's yeah

2030
01:50:56,060 --> 01:51:01,239
sample the hemisphere called a ray cast

2031
01:50:58,189 --> 01:51:05,569
do this and then we're so is the exit

2032
01:51:01,238 --> 01:51:08,929
right so how could we get anything other

2033
01:51:05,569 --> 01:51:13,699
than sample point x ray count like how

2034
01:51:08,930 --> 01:51:15,920
do we get something else out of that and

2035
01:51:13,699 --> 01:51:19,699
I guess the answer is because of the

2036
01:51:15,920 --> 01:51:24,079
recursion so we should probably change

2037
01:51:19,699 --> 01:51:27,050
this this total ray count is a little

2038
01:51:24,079 --> 01:51:29,738
misleading that's really not what that

2039
01:51:27,050 --> 01:51:29,739
value means

2040
01:51:33,170 --> 01:51:40,850
so recast point count would really be

2041
01:51:36,389 --> 01:51:40,850
the thing let's rename these better

2042
01:52:05,829 --> 01:52:22,359
all right so here's what we're gonna do

2043
01:52:08,719 --> 01:52:22,359
we're going to have a maybe total Ray

2044
01:52:24,039 --> 01:52:30,109
initiated let's say so like this is how

2045
01:52:27,829 --> 01:52:41,590
many we're going to start or like total

2046
01:52:30,109 --> 01:52:41,589
casts initiated then we're going to have

2047
01:52:43,840 --> 01:52:48,579
total cast recursions

2048
01:53:03,359 --> 01:53:16,759
and then we'll have total box

2049
01:53:07,829 --> 01:53:27,869
this is tested why these are - duze

2050
01:53:16,760 --> 01:53:30,060
these are notes okay so these are what

2051
01:53:27,869 --> 01:53:31,829
let's just clean this up so we're not

2052
01:53:30,060 --> 01:53:35,060
confused about the statistics were

2053
01:53:31,829 --> 01:53:35,059
actually looking at right

2054
01:53:35,390 --> 01:53:43,440
so in recast for curse we're talking

2055
01:53:37,949 --> 01:53:51,179
about total recursions right total box

2056
01:53:43,439 --> 01:53:56,909
is tested is in here and then we could

2057
01:53:51,180 --> 01:54:01,789
further split that actually so we could

2058
01:53:56,909 --> 01:54:08,460
call these total partitions tested and

2059
01:54:01,789 --> 01:54:10,829
total Leafs tested we could do like

2060
01:54:08,460 --> 01:54:13,050
these as two different values so we

2061
01:54:10,829 --> 01:54:18,479
could say something like total

2062
01:54:13,050 --> 01:54:23,210
partitions used in total leaves used or

2063
01:54:18,479 --> 01:54:23,209
something like that Wow

2064
01:54:23,449 --> 01:54:27,979
I'm not sure how we want to do this

2065
01:54:38,090 --> 01:54:45,239
so in here we could just say well

2066
01:54:40,529 --> 01:54:54,210
alright you know if box you know child

2067
01:54:45,239 --> 01:54:56,039
count else right so we'll say this is

2068
01:54:54,210 --> 01:54:59,420
the total number of partitions we tested

2069
01:54:56,039 --> 01:54:59,420
this is the total number of Leafs

2070
01:55:00,470 --> 01:55:11,460
probably should say leaves and then we

2071
01:55:09,000 --> 01:55:13,229
know the total number Curzon's is the

2072
01:55:11,460 --> 01:55:14,640
number of like steps through that I

2073
01:55:13,229 --> 01:55:16,229
don't know that we actually do we care

2074
01:55:14,640 --> 01:55:20,070
about that value that value seems

2075
01:55:16,229 --> 01:55:21,269
irrelevant like who cares I don't know

2076
01:55:20,069 --> 01:55:23,670
that we care about that so let's get rid

2077
01:55:21,270 --> 01:55:30,350
of that so I think that's mostly what we

2078
01:55:23,670 --> 01:55:34,399
want and then in here we'll deuce

2079
01:55:30,350 --> 01:55:36,690
solution total cast initiated plus plus

2080
01:55:34,399 --> 01:55:40,979
because that's how we know we initiated

2081
01:55:36,689 --> 01:55:45,029
a cast this will not have any summations

2082
01:55:40,979 --> 01:55:48,509
tonight at all and then we will just

2083
01:55:45,029 --> 01:55:52,079
update this to reflect that so inside

2084
01:55:48,510 --> 01:55:55,680
lighting test we'll do total cast

2085
01:55:52,079 --> 01:56:02,789
initiated total partitions tested and

2086
01:55:55,680 --> 01:56:08,119
total leaves tested their total pass

2087
01:56:02,789 --> 01:56:11,779
initiated total petitions tested total

2088
01:56:08,119 --> 01:56:11,779
we use tested

2089
01:56:15,979 --> 01:56:24,839
all right uh I did that wrong sorry

2090
01:56:24,060 --> 01:56:36,480
about that

2091
01:56:24,840 --> 01:56:41,989
I meant to do this Cass initiated total

2092
01:56:36,479 --> 01:56:41,989
partitions tested to the leaves tested

2093
01:56:44,239 --> 01:56:50,090
and let's see if I can look at these

2094
01:56:46,590 --> 01:56:50,090
stats and make more sense of them now

2095
01:56:52,729 --> 01:56:55,709
all right

2096
01:56:54,119 --> 01:56:58,170
so fifty-five thousand two hundred and

2097
01:56:55,710 --> 01:56:59,970
ninety-six cast initiated now is exactly

2098
01:56:58,170 --> 01:57:01,590
what I would have hoped right so at

2099
01:56:59,970 --> 01:57:05,039
least we now know that that value is

2100
01:57:01,590 --> 01:57:07,199
sane total partitions tested tells us

2101
01:57:05,039 --> 01:57:11,609
how many boxes were checking that are

2102
01:57:07,199 --> 01:57:13,619
not actual leaf boxes right and that

2103
01:57:11,609 --> 01:57:16,139
says that we're doing eight hundred and

2104
01:57:13,619 --> 01:57:21,800
fifty seven thousand of those partition

2105
01:57:16,140 --> 01:57:24,990
checks which is really high right so

2106
01:57:21,800 --> 01:57:28,230
what I would now expect is that if I

2107
01:57:24,989 --> 01:57:32,189
were to I would have expected myself to

2108
01:57:28,229 --> 01:57:35,789
be able to reduce the number of

2109
01:57:32,189 --> 01:57:39,569
partitions tested by doing that early

2110
01:57:35,789 --> 01:57:41,850
out check that's saying four right in

2111
01:57:39,569 --> 01:57:44,460
other words if we go through here by the

2112
01:57:41,850 --> 01:57:46,289
way what's our profile say here's sixty

2113
01:57:44,460 --> 01:57:49,649
seven so actually this is still really

2114
01:57:46,289 --> 01:57:50,090
fast just kind of surprising but anyway

2115
01:57:49,649 --> 01:57:53,789
whatever

2116
01:57:50,090 --> 01:57:56,909
so that total partitions tested number

2117
01:57:53,789 --> 01:57:58,800
being very high again that just seems

2118
01:57:56,909 --> 01:58:03,750
like kind of a bit of a weird scenario

2119
01:57:58,800 --> 01:58:06,329
because I would have expected now when I

2120
01:58:03,750 --> 01:58:08,279
go through and request a smaller number

2121
01:58:06,329 --> 01:58:09,840
of those that we would have seen more of

2122
01:58:08,279 --> 01:58:11,039
an effect on the numbers but we weren't

2123
01:58:09,840 --> 01:58:11,940
releasing more effect on the numbers and

2124
01:58:11,039 --> 01:58:14,789
so that's the part that's a little

2125
01:58:11,939 --> 01:58:17,009
confusing but anyway so if we go ahead

2126
01:58:14,789 --> 01:58:19,079
and look at red cast or curse now and

2127
01:58:17,010 --> 01:58:23,220
come here and actually do force it so

2128
01:58:19,079 --> 01:58:25,170
that it's never going to recurse on

2129
01:58:23,220 --> 01:58:27,650
anything other than the box that you are

2130
01:58:25,170 --> 01:58:31,889
physically inside

2131
01:58:27,649 --> 01:58:33,658
right I would have expected total

2132
01:58:31,889 --> 01:58:36,029
partitions tested to go down quite a bit

2133
01:58:33,658 --> 01:58:38,729
but actually total partition tested

2134
01:58:36,029 --> 01:58:41,069
hardly went down at all which suggests

2135
01:58:38,729 --> 01:58:43,709
to me that for most people most of the

2136
01:58:41,069 --> 01:58:47,009
boxes tested are ones they are inside

2137
01:58:43,710 --> 01:58:51,868
and I just don't understand that it

2138
01:58:47,010 --> 01:58:58,739
seems almost like there's a bug in this

2139
01:58:51,868 --> 01:59:00,598
check or something because it just

2140
01:58:58,738 --> 01:59:02,908
doesn't eat you know it doesn't seem

2141
01:59:00,599 --> 01:59:05,369
like you could be inside more than half

2142
01:59:02,908 --> 01:59:07,828
of the partitions you check I mean if

2143
01:59:05,368 --> 01:59:10,979
anything the definition of where you are

2144
01:59:07,828 --> 01:59:15,658
at inna for a point it can't be in less

2145
01:59:10,979 --> 01:59:18,289
than a half the boxes right I'm sorry in

2146
01:59:15,658 --> 01:59:21,149
more than half the boxes how could it be

2147
01:59:18,289 --> 01:59:23,309
it can only be in half of them if

2148
01:59:21,149 --> 01:59:25,738
they're split binary even the best case

2149
01:59:23,309 --> 01:59:30,179
scenario where you only had one split

2150
01:59:25,738 --> 01:59:31,738
you can only be in half right but it

2151
01:59:30,179 --> 01:59:34,969
should be drastically less than half if

2152
01:59:31,738 --> 01:59:38,218
you go down more than two splits worth

2153
01:59:34,969 --> 01:59:40,319
so that seems busted and I'm kind of

2154
01:59:38,219 --> 01:59:44,630
wondering if like is in rectangle Center

2155
01:59:40,319 --> 01:59:44,630
half to him somehow wrong

2156
02:00:02,449 --> 02:00:05,769
because that's pretty strange

2157
02:00:24,198 --> 02:00:36,238
so let's think about this for a second

2158
02:00:26,340 --> 02:00:38,690
so the box radius let's take a look at

2159
02:00:36,238 --> 02:00:38,689
that function

2160
02:00:52,658 --> 02:01:06,579
I mean it looks pretty sane subtracting

2161
02:01:03,090 --> 02:01:12,100
the Ray origin from the center of the

2162
02:01:06,579 --> 02:01:13,899
box pretty reasonable and then you're

2163
02:01:12,100 --> 02:01:17,560
seeing whether the absolute value of the

2164
02:01:13,899 --> 02:01:23,589
result is less than the radius on all

2165
02:01:17,560 --> 02:01:24,880
axes so you know if the the distance

2166
02:01:23,590 --> 02:01:28,630
some question there is less than each

2167
02:01:24,880 --> 02:01:29,109
case or the X Y and the Z then you're

2168
02:01:28,630 --> 02:01:32,079
good

2169
02:01:29,109 --> 02:01:34,420
certainly seems right so I guess we'll

2170
02:01:32,079 --> 02:01:38,859
have to leave this for tomorrow

2171
02:01:34,420 --> 02:01:41,469
and that's fine but I I mean again

2172
02:01:38,859 --> 02:01:47,289
totally possible it's correct just

2173
02:01:41,469 --> 02:01:48,760
doesn't seem plausible to me in that way

2174
02:01:47,289 --> 02:01:51,039
so take a look at the number of leaves

2175
02:01:48,760 --> 02:01:54,940
tested as well so the number of Leafs

2176
02:01:51,039 --> 02:01:57,609
tests that there are right 209,000 in

2177
02:01:54,939 --> 02:01:59,439
this case so we go in here and now we

2178
02:01:57,609 --> 02:02:02,319
say all right now you can test like way

2179
02:01:59,439 --> 02:02:05,109
more leaves right test them all go all

2180
02:02:02,319 --> 02:02:10,779
the way down right total number of

2181
02:02:05,109 --> 02:02:13,599
leaves tested doesn't even double it

2182
02:02:10,779 --> 02:02:15,519
just seems odd and so I feel like I'm

2183
02:02:13,600 --> 02:02:16,960
really want to dig into that code a

2184
02:02:15,520 --> 02:02:19,330
little bit and find out if there's just

2185
02:02:16,960 --> 02:02:24,250
something fundamentally screwed up

2186
02:02:19,329 --> 02:02:27,029
happening there that's that is making us

2187
02:02:24,250 --> 02:02:33,310
test in a way that isn't you know isn't

2188
02:02:27,029 --> 02:02:37,658
congruent or isn't what we would expect

2189
02:02:33,310 --> 02:02:41,469
right because you would expect a pretty

2190
02:02:37,658 --> 02:02:44,079
large number of leaves to be no longer

2191
02:02:41,469 --> 02:02:47,069
tested in that scenario that just seems

2192
02:02:44,079 --> 02:02:47,069
real weird

2193
02:02:51,560 --> 02:02:55,550
I mean I guess you know what it could be

2194
02:02:53,689 --> 02:02:56,599
is just that most of the time the angle

2195
02:02:55,550 --> 02:03:00,560
that you're testing just hits the

2196
02:02:56,600 --> 02:03:05,180
skylight in which case you just don't

2197
02:03:00,560 --> 02:03:07,270
recurse so I guess I could believe that

2198
02:03:05,180 --> 02:03:10,430
[Music]

2199
02:03:07,270 --> 02:03:12,230
in this case you know and especially I

2200
02:03:10,430 --> 02:03:14,810
suppose you know maybe if I go in and

2201
02:03:12,229 --> 02:03:32,209
add if I allow it to add another layer

2202
02:03:14,810 --> 02:03:35,210
on top see here something we have a lot

2203
02:03:32,210 --> 02:03:40,579
of like extraneous part room here so let

2204
02:03:35,210 --> 02:03:45,140
me try to make that not so big so if I

2205
02:03:40,579 --> 02:03:49,630
hopefully here can add you know I want

2206
02:03:45,140 --> 02:03:49,630
room like on top of me so I mean

2207
02:03:59,510 --> 02:04:05,239
that looks like it's always sideways so

2208
02:04:10,488 --> 02:04:25,848
can I set the direction to always be

2209
02:04:16,460 --> 02:04:25,849
like one way

2210
02:04:26,960 --> 02:04:29,829
there we go

2211
02:04:31,219 --> 02:04:35,960
so now there's like more stuff in there

2212
02:04:33,469 --> 02:04:38,239
right and you got people bouncing

2213
02:04:35,960 --> 02:04:39,859
between these two you know what I might

2214
02:04:38,238 --> 02:04:42,669
want to go the other way so maybe make

2215
02:04:39,859 --> 02:04:42,670
it stack on top

2216
02:04:47,859 --> 02:04:53,049
so now you've got at least like a lot

2217
02:04:50,630 --> 02:04:55,609
less hitting the skylight in this case

2218
02:04:53,050 --> 02:04:57,980
and so if we take a look at that value

2219
02:04:55,609 --> 02:05:01,210
here I wonder if it changes

2220
02:04:57,979 --> 02:05:04,159
significantly now depending on that

2221
02:05:01,210 --> 02:05:07,069
piece of information so if in here we

2222
02:05:04,159 --> 02:05:08,569
were to say quote for close this and

2223
02:05:07,069 --> 02:05:11,359
we're looking at you know I don't know

2224
02:05:08,569 --> 02:05:13,899
how many seven hundred thirty thousand

2225
02:05:11,359 --> 02:05:15,679
leaves tested there and I say okay let's

2226
02:05:13,899 --> 02:05:17,839
stop doing that

2227
02:05:15,680 --> 02:05:19,520
does that go down that's really annoying

2228
02:05:17,840 --> 02:05:22,880
me

2229
02:05:19,520 --> 02:05:26,450
does that go down and it that goes down

2230
02:05:22,880 --> 02:05:29,359
quite a bit more right so that's a

2231
02:05:26,449 --> 02:05:30,739
little more plausible there I guess when

2232
02:05:29,359 --> 02:05:32,299
you when you say like look don't even

2233
02:05:30,739 --> 02:05:35,599
really do raycasting sort of do

2234
02:05:32,300 --> 02:05:37,760
completely fake so I could believe that

2235
02:05:35,600 --> 02:05:39,500
was a little bit more plausible let me

2236
02:05:37,760 --> 02:05:42,230
go ahead and see what happens now if I

2237
02:05:39,500 --> 02:05:44,090
put in like a fair check of some kind so

2238
02:05:42,229 --> 02:05:48,769
I say like okay you know it's five

2239
02:05:44,090 --> 02:05:50,949
meters see what happens to the lighting

2240
02:05:48,770 --> 02:05:50,950
now

2241
02:05:53,659 --> 02:06:04,639
and that actually works pretty well I

2242
02:05:57,670 --> 02:06:07,779
think actually in terms of of

2243
02:06:04,640 --> 02:06:07,780
compartmentalizing it

2244
02:06:37,248 --> 02:06:42,788
all right so it may be that that's okay

2245
02:06:40,130 --> 02:06:45,319
I still want to go a little bit more

2246
02:06:42,788 --> 02:06:48,590
in-depth on that because I'm just not

2247
02:06:45,319 --> 02:06:53,658
100% certain that I'm really getting

2248
02:06:48,590 --> 02:06:59,119
what I expect there so you know I would

2249
02:06:53,658 --> 02:07:01,189
yeah I would like to get I would like to

2250
02:06:59,118 --> 02:07:03,078
get a little more information on that I

2251
02:07:01,189 --> 02:07:09,399
also want to know so is this a reliable

2252
02:07:03,078 --> 02:07:11,719
crash case now so if I this just crash

2253
02:07:09,399 --> 02:07:12,920
it doesn't always crash unfortunately

2254
02:07:11,719 --> 02:07:16,849
because I'm gonna say it would be nice

2255
02:07:12,920 --> 02:07:18,380
to go fix that crash but it looks like

2256
02:07:16,849 --> 02:07:20,619
it's a little bit less reliable than

2257
02:07:18,380 --> 02:07:20,618
that

2258
02:07:28,109 --> 02:07:40,710
uh all right so let's go ahead and go to

2259
02:07:30,510 --> 02:07:43,100
quick Q&amp;A here and then yeah what's

2260
02:07:40,710 --> 02:07:43,100
going on

2261
02:07:50,569 --> 02:07:53,769
we're get that word

2262
02:07:58,680 --> 02:08:02,680
[Music]

2263
02:09:02,488 --> 02:09:06,839
Jeff look can you explain why the debug

2264
02:09:04,710 --> 02:09:08,880
was oh yeah yes I can

2265
02:09:06,840 --> 02:09:10,230
sorry I just since we were in the

2266
02:09:08,880 --> 02:09:14,219
lighting I didn't take much time to

2267
02:09:10,229 --> 02:09:15,659
explain what I was doing there so um the

2268
02:09:14,219 --> 02:09:17,039
way the debug system works obviously

2269
02:09:15,659 --> 02:09:19,769
since it's kind of like an annotation

2270
02:09:17,039 --> 02:09:21,390
system that sits on top of things what

2271
02:09:19,770 --> 02:09:24,120
it does is when you come through the

2272
02:09:21,390 --> 02:09:25,920
debug system you announced to the debug

2273
02:09:24,119 --> 02:09:28,439
system the data that you wanted it to

2274
02:09:25,920 --> 02:09:30,869
look at and it looks at it but we only

2275
02:09:28,439 --> 02:09:32,369
have in the debug system a few different

2276
02:09:30,869 --> 02:09:35,279
types that it handles and you can see

2277
02:09:32,369 --> 02:09:38,609
them here and you can see that there is

2278
02:09:35,279 --> 02:09:39,899
no u16 isn't a type it doesn't have 16

2279
02:09:38,609 --> 02:09:42,659
bit integer support it only has like

2280
02:09:39,899 --> 02:09:46,439
32-bit integers as a thing unsigned and

2281
02:09:42,659 --> 02:09:49,889
signed right so what was happening

2282
02:09:46,439 --> 02:09:52,979
before was that when you passed a u16 it

2283
02:09:49,890 --> 02:09:54,480
would just find the closest match to the

2284
02:09:52,979 --> 02:09:56,369
overloaded functions and you can see

2285
02:09:54,479 --> 02:09:59,129
there's a macro here actually was this

2286
02:09:56,369 --> 02:10:00,869
one that we just used to make a few

2287
02:09:59,130 --> 02:10:04,469
different versions of the routine that

2288
02:10:00,869 --> 02:10:07,260
picks up a value for the debug system it

2289
02:10:04,469 --> 02:10:08,909
would use the u-32 version problem or it

2290
02:10:07,260 --> 02:10:11,219
may have used this the sign 32 version

2291
02:10:08,909 --> 02:10:12,750
actually based on C's integral promotion

2292
02:10:11,219 --> 02:10:14,039
rules but that's neither here or there a

2293
02:10:12,750 --> 02:10:15,930
point being it would use a 32-bit

2294
02:10:14,039 --> 02:10:18,269
version so what do we do is it would

2295
02:10:15,930 --> 02:10:22,560
call one of these routines that had say

2296
02:10:18,270 --> 02:10:24,870
s 32 in here which means that when it

2297
02:10:22,560 --> 02:10:26,969
went to do the value to pick up the

2298
02:10:24,869 --> 02:10:28,769
value right here this line right here or

2299
02:10:26,969 --> 02:10:31,170
this line right here so either wrote

2300
02:10:28,770 --> 02:10:32,489
back if you were doing modification it

2301
02:10:31,170 --> 02:10:34,590
with the debug system or if you just

2302
02:10:32,488 --> 02:10:38,579
create keeping it right which would be

2303
02:10:34,590 --> 02:10:40,890
this case so if you're keeping the debug

2304
02:10:38,579 --> 02:10:44,219
value it would go okay into the event

2305
02:10:40,890 --> 02:10:46,380
store the value that I got but change it

2306
02:10:44,219 --> 02:10:48,539
to the type that I'm pointing to that I

2307
02:10:46,380 --> 02:10:50,579
said I was which would be you 32 or an

2308
02:10:48,539 --> 02:10:52,469
s3 2 in this case that meant that it

2309
02:10:50,579 --> 02:10:54,180
picked up not only this 16-bit integer

2310
02:10:52,469 --> 02:10:57,180
that we're talking about but also the

2311
02:10:54,180 --> 02:10:59,900
next 16 bits that were there now in the

2312
02:10:57,180 --> 02:11:01,010
case of certain elements of the system

2313
02:10:59,899 --> 02:11:03,929
[Music]

2314
02:11:01,010 --> 02:11:06,539
like box count that's actually fine

2315
02:11:03,930 --> 02:11:10,920
because the next thing is a pointer

2316
02:11:06,539 --> 02:11:13,590
which is 8 bytes long and sees padding

2317
02:11:10,920 --> 02:11:16,439
rules for structures is that if you have

2318
02:11:13,590 --> 02:11:18,479
a thing that's say 2 byte aligned

2319
02:11:16,439 --> 02:11:20,010
like a 16-bit integer followed by

2320
02:11:18,479 --> 02:11:22,708
something that's eight byte aligned like

2321
02:11:20,010 --> 02:11:24,840
a pointer pad out to the next eight byte

2322
02:11:22,708 --> 02:11:27,719
boundary so there actually would have

2323
02:11:24,840 --> 02:11:29,819
been six bytes worth of zeros following

2324
02:11:27,719 --> 02:11:31,769
the box count here so when we output it

2325
02:11:29,819 --> 02:11:34,469
we would just get zero and even though

2326
02:11:31,769 --> 02:11:36,900
it was taking a 32-bit or a four byte

2327
02:11:34,469 --> 02:11:38,399
slice of the Dana it was fine because

2328
02:11:36,899 --> 02:11:40,708
was padded with zero so it still looked

2329
02:11:38,399 --> 02:11:42,988
like the right value on the other hand

2330
02:11:40,708 --> 02:11:44,998
down here what happened was when I had

2331
02:11:42,988 --> 02:11:46,708
the point count I then added another you

2332
02:11:44,998 --> 02:11:48,599
16 which is the extended point count so

2333
02:11:46,708 --> 02:11:50,938
we could track that value that meant

2334
02:11:48,599 --> 02:11:52,229
that there were two valid 16-bit values

2335
02:11:50,939 --> 02:11:54,689
next to each other which meant that

2336
02:11:52,229 --> 02:11:56,729
there was no pad anymore there was a pad

2337
02:11:54,689 --> 02:11:58,949
previously when we had this now there's

2338
02:11:56,729 --> 02:12:01,559
no pad what that means is the debug

2339
02:11:58,948 --> 02:12:03,178
system will take four bytes the next two

2340
02:12:01,559 --> 02:12:05,969
bytes after that the first two bytes

2341
02:12:03,179 --> 02:12:09,118
actually had data in it which would give

2342
02:12:05,969 --> 02:12:10,618
it the wrong 32-bit value right so the

2343
02:12:09,118 --> 02:12:12,109
only thing we had to do to fix that was

2344
02:12:10,618 --> 02:12:14,728
just to make a version that actually

2345
02:12:12,109 --> 02:12:16,918
respected the 16-bit value and you can

2346
02:12:14,729 --> 02:12:18,749
see that I did that here so what I did

2347
02:12:16,918 --> 02:12:22,229
is I said look let's actually use the

2348
02:12:18,748 --> 02:12:24,208
16-bit value correctly and just use have

2349
02:12:22,229 --> 02:12:25,889
the processor up convert it inside a

2350
02:12:24,208 --> 02:12:28,198
register which is what's happening here

2351
02:12:25,889 --> 02:12:29,849
so that it just expands out with zero

2352
02:12:28,198 --> 02:12:31,078
padding and does what we wanted to do in

2353
02:12:29,849 --> 02:12:33,449
the first place so that's all I did

2354
02:12:31,078 --> 02:12:35,808
there was allowed that conversion to

2355
02:12:33,448 --> 02:12:35,808
work properly

2356
02:12:47,100 --> 02:12:53,430
how likely is a lighting system GPU port

2357
02:12:50,720 --> 02:12:55,740
you could definitely run on the GPU I

2358
02:12:53,430 --> 02:12:59,630
don't know that we want it to I'm not

2359
02:12:55,739 --> 02:12:59,630
sure how to make that decision exactly

2360
02:12:59,930 --> 02:13:05,760
it may be smarter for us to just do a

2361
02:13:02,579 --> 02:13:10,710
multi-threaded CPU version it might be

2362
02:13:05,760 --> 02:13:15,500
that that's just fast enough but I don't

2363
02:13:10,710 --> 02:13:15,500
know it's pretty hard to say

2364
02:13:18,020 --> 02:13:21,780
gram fie off topic did you ever find out

2365
02:13:20,489 --> 02:13:24,599
if it's necessary for CPUs to have name

2366
02:13:21,779 --> 02:13:30,090
registers but no I am still really

2367
02:13:24,600 --> 02:13:31,410
curious to know if that's true this is

2368
02:13:30,090 --> 02:13:33,210
one of those things that's just like I

2369
02:13:31,409 --> 02:13:34,769
wish I knew someone who was really

2370
02:13:33,210 --> 02:13:36,840
really good at hardware design so I

2371
02:13:34,770 --> 02:13:40,200
could ask them because it's the kind of

2372
02:13:36,840 --> 02:13:41,819
question that only an expert extremely

2373
02:13:40,199 --> 02:13:44,630
good extremely smart hardware designer

2374
02:13:41,819 --> 02:13:47,399
could ask could could answer right

2375
02:13:44,630 --> 02:13:49,230
because the orthodoxy is one thing and

2376
02:13:47,399 --> 02:13:51,679
then knowing whether the orthodoxy is

2377
02:13:49,229 --> 02:13:53,909
just because of historical precedent is

2378
02:13:51,680 --> 02:13:57,020
another right and it's a very

2379
02:13:53,909 --> 02:14:00,920
complicated question with a lot of

2380
02:13:57,020 --> 02:14:00,920
details right

2381
02:14:00,979 --> 02:14:09,359
and so I don't really know I don't have

2382
02:14:07,020 --> 02:14:15,210
a gut feeling either way what I can say

2383
02:14:09,359 --> 02:14:18,259
is that it makes obvious sense to me why

2384
02:14:15,210 --> 02:14:21,989
named registers came into existence and

2385
02:14:18,260 --> 02:14:24,360
why they persisted for a long time what

2386
02:14:21,989 --> 02:14:28,500
I don't know is whether they still make

2387
02:14:24,359 --> 02:14:34,349
sense now that CPUs are so overly

2388
02:14:28,500 --> 02:14:39,689
complicated right and and I don't know

2389
02:14:34,350 --> 02:14:42,000
and there were computers way long ago in

2390
02:14:39,689 --> 02:14:45,119
the era where I think named registers

2391
02:14:42,000 --> 02:14:48,539
were the right decision obviously that

2392
02:14:45,119 --> 02:14:52,319
didn't use name registers and at that

2393
02:14:48,539 --> 02:14:54,569
point I can understand why those

2394
02:14:52,319 --> 02:14:56,069
machines didn't find favor I don't think

2395
02:14:54,569 --> 02:15:00,869
was accidental that that wasn't the

2396
02:14:56,069 --> 02:15:02,920
preferred method but

2397
02:15:00,869 --> 02:15:05,859
nowadays I don't know if the same thing

2398
02:15:02,920 --> 02:15:08,199
is true however I also don't see anyone

2399
02:15:05,859 --> 02:15:10,329
proposing this so I'm guessing that

2400
02:15:08,199 --> 02:15:12,429
either that just means that it's just

2401
02:15:10,329 --> 02:15:14,019
stupid right and if you're a really good

2402
02:15:12,430 --> 02:15:15,820
hardware designer you know it's dumb in

2403
02:15:14,020 --> 02:15:18,580
which case I really just want someone to

2404
02:15:15,819 --> 02:15:21,549
walk me through exactly why not curse

2405
02:15:18,579 --> 02:15:23,170
orally why but really why because curse

2406
02:15:21,550 --> 02:15:24,699
orally I don't think there is a reason

2407
02:15:23,170 --> 02:15:25,750
why I think it is only a reason why when

2408
02:15:24,699 --> 02:15:32,679
you really get down to the Nitty Gritty

2409
02:15:25,750 --> 02:15:35,500
right or they it's just something that's

2410
02:15:32,680 --> 02:15:37,090
too far from the current designs and you

2411
02:15:35,500 --> 02:15:39,789
don't want to take a risk on doing that

2412
02:15:37,090 --> 02:15:41,560
new design right I see some of the chat

2413
02:15:39,789 --> 02:15:45,010
brought off the mill CPU mill CPU still

2414
02:15:41,560 --> 02:15:48,880
uses named registers they're just named

2415
02:15:45,010 --> 02:15:51,039
based on their frequency of use right so

2416
02:15:48,880 --> 02:15:53,380
it's it's still basically a named

2417
02:15:51,039 --> 02:15:55,210
register machine for all intents and

2418
02:15:53,380 --> 02:15:57,100
purposes because you still have a

2419
02:15:55,210 --> 02:16:00,369
limited number of names and they still

2420
02:15:57,100 --> 02:16:02,980
are specific to what's happening inside

2421
02:16:00,369 --> 02:16:05,349
the CPU so they don't correspond to

2422
02:16:02,979 --> 02:16:07,509
memory and that's the key difference

2423
02:16:05,350 --> 02:16:10,720
that I was talking about

2424
02:16:07,510 --> 02:16:17,050
I was basically asking is there a reason

2425
02:16:10,720 --> 02:16:20,560
why we don't have register to memory

2426
02:16:17,050 --> 02:16:23,110
correspondence in modern CPUs because

2427
02:16:20,560 --> 02:16:25,780
everything else does right so nowadays

2428
02:16:23,109 --> 02:16:28,420
like every last thing in the CPU

2429
02:16:25,779 --> 02:16:33,159
actually does correspond to a memory

2430
02:16:28,420 --> 02:16:35,559
location except for the registers right

2431
02:16:33,159 --> 02:16:39,549
so like the level 1 cache for example

2432
02:16:35,559 --> 02:16:41,469
knows exactly where that thing would

2433
02:16:39,549 --> 02:16:44,949
live in memory if it was to be put back

2434
02:16:41,469 --> 02:16:49,090
right registers are the only things that

2435
02:16:44,950 --> 02:16:52,240
don't know that and I don't know if

2436
02:16:49,090 --> 02:16:54,540
that's actually the right decision the

2437
02:16:52,239 --> 02:16:57,280
argument for why it's the right decision

2438
02:16:54,540 --> 02:16:58,750
makes a lot of sense in the old days I

2439
02:16:57,280 --> 02:17:01,600
just don't know if it makes a lot of

2440
02:16:58,750 --> 02:17:03,729
sense now and I suspect that the

2441
02:17:01,600 --> 02:17:05,380
argument so it may be that it is the

2442
02:17:03,729 --> 02:17:06,850
right decision now but the argument

2443
02:17:05,379 --> 02:17:10,559
should look totally different than it

2444
02:17:06,850 --> 02:17:10,559
used to look right

2445
02:17:13,159 --> 02:17:23,659
so that's all long billion do you think

2446
02:17:22,250 --> 02:17:25,218
arranging pixels on LCD monitors in a

2447
02:17:23,659 --> 02:17:33,218
blue glowing blue image pattern would be

2448
02:17:25,218 --> 02:17:38,629
an improvement visually so the answer is

2449
02:17:33,218 --> 02:17:43,339
that it would absolutely be and improve

2450
02:17:38,629 --> 02:17:46,009
a huge improvement visually probably if

2451
02:17:43,340 --> 02:17:49,460
you knew what the pattern was and the

2452
02:17:46,010 --> 02:17:51,889
GPU used it for sampling if that makes

2453
02:17:49,459 --> 02:17:54,439
sense I don't think you can scatter

2454
02:17:51,889 --> 02:17:58,369
pixels in a blue noise pattern and then

2455
02:17:54,440 --> 02:18:02,090
render to them as if they're square that

2456
02:17:58,370 --> 02:18:04,130
may be a problem now if the monitor is

2457
02:18:02,090 --> 02:18:05,329
dense enough it might not matter but

2458
02:18:04,129 --> 02:18:16,929
then again if it's dense enough it might

2459
02:18:05,329 --> 02:18:16,929
not matter at all right so right

2460
02:18:19,739 --> 02:18:27,010
after enough memory is slow yes I know

2461
02:18:23,409 --> 02:18:28,440
memory is slow that really doesn't have

2462
02:18:27,010 --> 02:18:30,639
anything to do with whether your

2463
02:18:28,440 --> 02:18:37,270
registers know where they live in memory

2464
02:18:30,639 --> 02:18:39,779
or not right all right I'm gonna go

2465
02:18:37,270 --> 02:18:39,780
ahead and COEs down

2466
02:18:49,430 --> 02:18:52,950
all right thank you everyone for joining

2467
02:18:51,510 --> 02:18:54,091
me for those some handmade hero it's

2468
02:18:52,950 --> 02:18:55,770
been a pleasure coding with you as

2469
02:18:54,091 --> 02:18:57,180
always if you would like to follow

2470
02:18:55,770 --> 02:19:00,030
series at home you can always pair to

2471
02:18:57,180 --> 02:19:01,530
the game on handmade hero org and it

2472
02:19:00,030 --> 02:19:03,091
comes with a source code so you can play

2473
02:19:01,530 --> 02:19:05,610
around with it yourself and do your own

2474
02:19:03,091 --> 02:19:08,220
experimentation which is a good way to

2475
02:19:05,610 --> 02:19:11,909
learn I'll be back here tomorrow to work

2476
02:19:08,219 --> 02:19:14,909
on more lighting until then if you want

2477
02:19:11,909 --> 02:19:17,610
to play around the lighting yourself you

2478
02:19:14,909 --> 02:19:18,930
can let me know what you find hope see

2479
02:19:17,610 --> 02:19:20,610
you back here tomorrow for that until

2480
02:19:18,930 --> 02:19:22,620
then have fun programming everyone and

2481
02:19:20,610 --> 02:19:24,860
I'll see you on the Internet take it

2482
02:19:22,620 --> 02:19:24,860
easy everybody

