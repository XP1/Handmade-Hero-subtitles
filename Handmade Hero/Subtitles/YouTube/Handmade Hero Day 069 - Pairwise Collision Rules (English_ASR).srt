1
00:00:00,030 --> 00:00:04,770
yeah there we go hello everyone and

2
00:00:02,459 --> 00:00:06,060
welcome to handmade hero the show where

3
00:00:04,769 --> 00:00:09,570
we code a complete game from scratch

4
00:00:06,059 --> 00:00:10,980
live on Twitch we don't use any engines

5
00:00:09,570 --> 00:00:13,530
or any libraries we code everything

6
00:00:10,980 --> 00:00:15,089
ourselves here and that's our goal this

7
00:00:13,529 --> 00:00:16,618
is an educational program what we're

8
00:00:15,089 --> 00:00:19,829
trying to do is basically show how every

9
00:00:16,618 --> 00:00:22,439
single part of a game works and so each

10
00:00:19,829 --> 00:00:25,919
day we take an hour to code something

11
00:00:22,439 --> 00:00:28,740
and it's some new part of our game some

12
00:00:25,920 --> 00:00:30,570
new aspect of our game so that we can

13
00:00:28,739 --> 00:00:33,210
kind of see the entire process and again

14
00:00:30,570 --> 00:00:35,579
I do it all without really any

15
00:00:33,210 --> 00:00:39,058
preparation so that you can see how I

16
00:00:35,579 --> 00:00:41,189
would actually approach it warts and all

17
00:00:39,058 --> 00:00:42,808
in a real professional environment right

18
00:00:41,189 --> 00:00:45,000
I don't go write the code first and then

19
00:00:42,808 --> 00:00:47,070
just type it in here I actually go

20
00:00:45,000 --> 00:00:49,049
through the whole mental process of how

21
00:00:47,070 --> 00:00:50,789
do I figure out what to code how do I do

22
00:00:49,049 --> 00:00:53,849
plug it when I make mistakes all that

23
00:00:50,789 --> 00:00:55,140
kind of stuff that's what we do and

24
00:00:53,850 --> 00:00:58,320
that's been going pretty well so I'm

25
00:00:55,140 --> 00:01:00,600
pretty happy with it and and we've got

26
00:00:58,320 --> 00:01:02,520
plenty of stuff that we've got to do so

27
00:01:00,600 --> 00:01:04,079
let's go ahead and get started if you

28
00:01:02,520 --> 00:01:06,150
have pre-ordered the game on handmade

29
00:01:04,079 --> 00:01:08,849
hero org obviously you get full access

30
00:01:06,150 --> 00:01:10,590
to the source code here since we there

31
00:01:08,849 --> 00:01:12,359
is no game yet there's just source code

32
00:01:10,590 --> 00:01:13,439
so you can go ahead and download that

33
00:01:12,359 --> 00:01:15,030
source code anytime you want you'll get

34
00:01:13,438 --> 00:01:15,679
a link in your email if you have done

35
00:01:15,030 --> 00:01:19,159
that

36
00:01:15,680 --> 00:01:22,460
today is day 69 so you want to download

37
00:01:19,159 --> 00:01:24,600
roll the source zip will have day 68

38
00:01:22,459 --> 00:01:27,959
source code in it you want to start with

39
00:01:24,599 --> 00:01:29,548
day 68 source code because that's what

40
00:01:27,959 --> 00:01:31,140
I'm starting with today so if you're

41
00:01:29,549 --> 00:01:32,490
trying to follow along with that today's

42
00:01:31,140 --> 00:01:33,750
video that's the one you're gonna start

43
00:01:32,489 --> 00:01:37,199
with if you want to code along with me

44
00:01:33,750 --> 00:01:39,030
at home so if I remember correctly we

45
00:01:37,200 --> 00:01:41,670
were right at the point yesterday where

46
00:01:39,030 --> 00:01:44,280
we wanted to start talking about doing a

47
00:01:41,670 --> 00:01:47,009
sort of more collision response code

48
00:01:44,280 --> 00:01:48,659
more handling of collisions and so what

49
00:01:47,009 --> 00:01:51,349
we had yesterday is we had just gotten

50
00:01:48,659 --> 00:01:54,960
to the point where when two entities

51
00:01:51,349 --> 00:01:56,699
sort of collide on the screen we know

52
00:01:54,959 --> 00:01:58,859
that they do that right and then we have

53
00:01:56,700 --> 00:02:01,109
we want to respond to that in some way

54
00:01:58,859 --> 00:02:03,328
and we're about to deal with sort of all

55
00:02:01,109 --> 00:02:05,909
of the complexities that come with that

56
00:02:03,328 --> 00:02:08,128
collision response now one of the things

57
00:02:05,909 --> 00:02:10,200
that we haven't addressed yet and that

58
00:02:08,128 --> 00:02:12,098
was kind of where we left it was we

59
00:02:10,199 --> 00:02:15,609
don't really know what to do

60
00:02:12,098 --> 00:02:17,589
with things we don't really have a

61
00:02:15,610 --> 00:02:18,879
strategy for dealing with when things

62
00:02:17,590 --> 00:02:22,030
hit other things but should just pass

63
00:02:18,878 --> 00:02:23,949
through them right so for example if I

64
00:02:22,030 --> 00:02:26,019
had this little test I could fire this

65
00:02:23,949 --> 00:02:29,139
little rock sprite out from my guy as a

66
00:02:26,019 --> 00:02:32,319
little testing that we were doing and it

67
00:02:29,139 --> 00:02:33,818
hits me and it gets stuck on the edge of

68
00:02:32,318 --> 00:02:34,839
me right I've got a little bounding box

69
00:02:33,818 --> 00:02:37,238
and when it hits the edge of that

70
00:02:34,840 --> 00:02:38,709
bounding box it gets stuck on me and

71
00:02:37,239 --> 00:02:40,000
that stops it from going forwards

72
00:02:38,709 --> 00:02:40,989
anymore because it just keeps hitting me

73
00:02:40,000 --> 00:02:43,180
and hitting me and hitting me and

74
00:02:40,989 --> 00:02:44,259
hitting me and hitting me which is kind

75
00:02:43,180 --> 00:02:46,019
of what our collision Tector supposed to

76
00:02:44,259 --> 00:02:49,298
do it's not supposed to let things go

77
00:02:46,019 --> 00:02:51,158
through bounding boxes right that's what

78
00:02:49,299 --> 00:02:53,469
we coded it to do but in this case we

79
00:02:51,158 --> 00:02:58,078
basically need some way of making that

80
00:02:53,469 --> 00:03:00,908
work right we need some way of getting

81
00:02:58,079 --> 00:03:02,680
the code smart enough to know that

82
00:03:00,908 --> 00:03:05,048
sometimes we want things to pass through

83
00:03:02,680 --> 00:03:07,239
things and sometimes we don't and maybe

84
00:03:05,049 --> 00:03:09,819
we even want something as complicated as

85
00:03:07,239 --> 00:03:11,950
whether or not something can pass

86
00:03:09,818 --> 00:03:13,689
through something else is dependent on

87
00:03:11,949 --> 00:03:18,039
which two things collided right you

88
00:03:13,689 --> 00:03:20,919
could imagine that certain entities can

89
00:03:18,039 --> 00:03:23,318
pass through magical doors and others

90
00:03:20,919 --> 00:03:24,760
can't let's say right so we may have a

91
00:03:23,318 --> 00:03:28,298
situation with collision detection where

92
00:03:24,759 --> 00:03:31,030
even just the notion of what can pass

93
00:03:28,299 --> 00:03:35,159
through what is entirely a gameplay

94
00:03:31,030 --> 00:03:35,159
decision that involves a bunch of logic

95
00:03:35,549 --> 00:03:44,650
right and that's the kind of thing that

96
00:03:40,889 --> 00:03:46,239
we we want to take a look at today right

97
00:03:44,650 --> 00:03:47,769
how do we enable that how do we make

98
00:03:46,239 --> 00:03:50,349
that clean how do we make it so it's not

99
00:03:47,769 --> 00:03:51,849
all janky and hacky again our collision

100
00:03:50,348 --> 00:03:53,590
detector isn't a final collision

101
00:03:51,848 --> 00:03:54,789
detector so there's plenty of problems

102
00:03:53,590 --> 00:03:57,509
with just a collision detector because

103
00:03:54,789 --> 00:03:59,858
we haven't really written a full one yet

104
00:03:57,509 --> 00:04:02,078
but ignoring those problems with that

105
00:03:59,859 --> 00:04:04,389
I'm just talking about the logic of what

106
00:04:02,079 --> 00:04:07,389
happens we want that to be nice and

107
00:04:04,389 --> 00:04:09,699
clean so that the logic is generally

108
00:04:07,389 --> 00:04:11,949
flawless so if the collision detector

109
00:04:09,699 --> 00:04:13,840
itself when we actually make the

110
00:04:11,949 --> 00:04:15,729
bulletproof version of that it's not

111
00:04:13,840 --> 00:04:17,379
hamstrung by the fact that there's all

112
00:04:15,729 --> 00:04:19,750
this kind of weird not really that

113
00:04:17,379 --> 00:04:21,788
reliable way that things do or don't

114
00:04:19,750 --> 00:04:23,079
collide and you know we end up having

115
00:04:21,788 --> 00:04:24,909
all these bugs and the shipping thing

116
00:04:23,079 --> 00:04:25,990
where it's like people report Oh

117
00:04:24,910 --> 00:04:27,280
I tried to fire the thing and it

118
00:04:25,990 --> 00:04:29,019
disappeared halfway through because of

119
00:04:27,279 --> 00:04:30,639
some you know like weird like collision

120
00:04:29,019 --> 00:04:33,479
II bug sorts of stuff so we want to make

121
00:04:30,639 --> 00:04:36,669
that code work in sort of a nice way

122
00:04:33,480 --> 00:04:38,350
that's that's not going to cause us

123
00:04:36,670 --> 00:04:41,170
problems and that we can add things to

124
00:04:38,350 --> 00:04:44,050
when we need to and and it's not this

125
00:04:41,170 --> 00:04:45,750
huge deal to add them right so basically

126
00:04:44,050 --> 00:04:48,400
the first thing I want to take a look at

127
00:04:45,750 --> 00:04:49,990
and I think we've got our important in

128
00:04:48,399 --> 00:04:51,069
here yeah so need our closure table here

129
00:04:49,990 --> 00:04:52,420
so the first thing that I want to take a

130
00:04:51,069 --> 00:04:55,680
look at I'll delete this to do because

131
00:04:52,420 --> 00:04:57,819
it's basically what we're doing today is

132
00:04:55,680 --> 00:04:59,410
we sort of started on this handle

133
00:04:57,819 --> 00:05:02,019
collision path and what we do is we have

134
00:04:59,410 --> 00:05:04,330
a collision thing here and we've got the

135
00:05:02,019 --> 00:05:06,039
stops on collision thing right and we

136
00:05:04,329 --> 00:05:07,599
were sort of saying like okay the the

137
00:05:06,040 --> 00:05:10,120
flag that says whether an entity

138
00:05:07,600 --> 00:05:12,939
collides is telling us whether or not

139
00:05:10,120 --> 00:05:14,980
when an entity hits something whether it

140
00:05:12,939 --> 00:05:16,750
stops or not and so the first thing I'd

141
00:05:14,980 --> 00:05:20,560
like to do today is let's go ahead and

142
00:05:16,750 --> 00:05:23,500
change that concept right and say

143
00:05:20,560 --> 00:05:25,660
whether or not something stops on

144
00:05:23,500 --> 00:05:29,170
collision let's just make that a factor

145
00:05:25,660 --> 00:05:31,570
that gets computed in the collision so

146
00:05:29,170 --> 00:05:34,150
basically we don't even have to change

147
00:05:31,569 --> 00:05:36,699
the rule right now we could make it so

148
00:05:34,149 --> 00:05:40,299
that essentially we'd get sort of a

149
00:05:36,699 --> 00:05:42,550
thing in handle collision right we can

150
00:05:40,300 --> 00:05:45,009
make it so that we we sort of do it the

151
00:05:42,550 --> 00:05:47,168
same thing in here and so it's still

152
00:05:45,009 --> 00:05:49,629
based on that flag but I just want to

153
00:05:47,168 --> 00:05:53,289
make it so that it could be procedural

154
00:05:49,629 --> 00:05:54,909
if we wanted to so stops on collision is

155
00:05:53,290 --> 00:05:57,640
now going to be something right that

156
00:05:54,910 --> 00:06:00,340
gets done in this particular call so

157
00:05:57,639 --> 00:06:01,870
something you know like this I'm not

158
00:06:00,339 --> 00:06:03,579
saying this is actually how we should

159
00:06:01,870 --> 00:06:05,350
necessarily do it but something that

160
00:06:03,579 --> 00:06:07,629
looks like this where when a collision

161
00:06:05,350 --> 00:06:10,840
gets handled whether or not the

162
00:06:07,629 --> 00:06:13,240
collision handling code said so is what

163
00:06:10,839 --> 00:06:14,589
will determine whether we stopped the

164
00:06:13,240 --> 00:06:22,240
thing from going in the direction it was

165
00:06:14,589 --> 00:06:23,889
going right so that's step one of the

166
00:06:22,240 --> 00:06:26,860
process right and that's a pretty easy

167
00:06:23,889 --> 00:06:28,719
step to do the other part of the step is

168
00:06:26,860 --> 00:06:30,730
taking a look at sort of the bug we

169
00:06:28,720 --> 00:06:32,260
already have now and that we actually

170
00:06:30,730 --> 00:06:33,789
talked about solving this way back and

171
00:06:32,259 --> 00:06:35,168
we started this and we kind of decided

172
00:06:33,788 --> 00:06:37,269
to go off on a tangent cuz I wanted to

173
00:06:35,168 --> 00:06:38,288
fix a bunch of things with how we did

174
00:06:37,269 --> 00:06:39,639
things so we did the sim

175
00:06:38,288 --> 00:06:40,959
and stuff we inserted that in there

176
00:06:39,639 --> 00:06:44,019
because it was the next logical thing to

177
00:06:40,959 --> 00:06:46,269
do well way back when I talked about the

178
00:06:44,019 --> 00:06:48,399
concept that we kind of want to have a

179
00:06:46,269 --> 00:06:50,438
more robust way of thinking about when

180
00:06:48,399 --> 00:06:52,749
entities hit each other and just to

181
00:06:50,439 --> 00:06:57,039
refresh your memory for people who

182
00:06:52,749 --> 00:06:58,838
didn't basically have that sort of down

183
00:06:57,038 --> 00:07:01,180
necessarily let's go ahead and make a

184
00:06:58,838 --> 00:07:03,788
little space here where are we in our in

185
00:07:01,180 --> 00:07:07,059
our whiteboard is there day 68 let's go

186
00:07:03,788 --> 00:07:09,579
over here oh I guess I kind of need to

187
00:07:07,059 --> 00:07:11,199
zoom out I wish how is there a way to

188
00:07:09,579 --> 00:07:13,658
look remember what the current zoom

189
00:07:11,199 --> 00:07:14,649
level is I don't actually know I guess

190
00:07:13,658 --> 00:07:17,168
not

191
00:07:14,649 --> 00:07:20,740
so here's our whiteboard let's go let's

192
00:07:17,168 --> 00:07:23,889
go find a location oops let's go find a

193
00:07:20,740 --> 00:07:25,629
location that would be fine for this day

194
00:07:23,889 --> 00:07:30,848
so I'll just I'll just zoom in over here

195
00:07:25,629 --> 00:07:33,399
right for day 69 say it's right here I

196
00:07:30,848 --> 00:07:36,430
guess this is probably is that probably

197
00:07:33,399 --> 00:07:38,110
how big things were before I don't

198
00:07:36,430 --> 00:07:39,908
actually know so let's go over here I

199
00:07:38,110 --> 00:07:42,809
need some way of remembering the zoom

200
00:07:39,908 --> 00:07:45,098
level is that a thing is that this 100%

201
00:07:42,809 --> 00:07:46,240
okay so I guess I just want that to be a

202
00:07:45,098 --> 00:07:48,938
hundred percent is that what that does

203
00:07:46,240 --> 00:07:50,918
no that's a pasady so I don't know is

204
00:07:48,939 --> 00:07:52,088
there is there even a zoom I don't

205
00:07:50,918 --> 00:07:54,748
actually know if there's even a thing

206
00:07:52,088 --> 00:07:58,418
that that says what the zoom should be

207
00:07:54,749 --> 00:08:01,149
I'm not sure I I really don't know

208
00:07:58,418 --> 00:08:05,019
erasers presets that's just all brush

209
00:08:01,149 --> 00:08:07,028
stuff view yeah I don't know if somebody

210
00:08:05,019 --> 00:08:09,098
happens to know write it on the forums

211
00:08:07,028 --> 00:08:10,300
or tell me in the Q&amp;A if there's any in

212
00:08:09,098 --> 00:08:12,038
this thing if there's any way to like

213
00:08:10,300 --> 00:08:17,079
save the zoom level that would be kind

214
00:08:12,038 --> 00:08:18,248
of nice anyway here on day 69 let's go

215
00:08:17,079 --> 00:08:19,748
ahead and talk about what I was saying

216
00:08:18,249 --> 00:08:22,869
for us so what I was saying before is

217
00:08:19,749 --> 00:08:25,300
the approach I'm gonna take first to

218
00:08:22,869 --> 00:08:28,599
this problem is all right so I've got

219
00:08:25,300 --> 00:08:30,430
mr. hero here and he throws a sword at

220
00:08:28,598 --> 00:08:35,468
you know and then there's a monster

221
00:08:30,430 --> 00:08:37,839
right here who's you know basically like

222
00:08:35,469 --> 00:08:40,509
mad or whatever and the swords gonna go

223
00:08:37,839 --> 00:08:44,350
it's gonna hit the mon-star right so

224
00:08:40,509 --> 00:08:47,470
this is a monster and this is a hero and

225
00:08:44,350 --> 00:08:49,870
this is a sword and so what happens is

226
00:08:47,470 --> 00:08:51,860
our collision routines all there you

227
00:08:49,870 --> 00:08:54,379
know all their job is

228
00:08:51,860 --> 00:08:55,879
to basically take some representation of

229
00:08:54,379 --> 00:08:57,679
each of these things and tell us when

230
00:08:55,879 --> 00:08:59,299
they hit right it's supposed to

231
00:08:57,679 --> 00:09:01,549
basically say okay if this is traveling

232
00:08:59,299 --> 00:09:03,379
in this line then I know that at this

233
00:09:01,549 --> 00:09:05,089
particular time when the sword gets to

234
00:09:03,379 --> 00:09:06,740
here it's gonna hit this Monstar and

235
00:09:05,090 --> 00:09:08,810
when the sword starts out if the sword

236
00:09:06,740 --> 00:09:11,330
started out here it's it's touching the

237
00:09:08,809 --> 00:09:12,769
hero right so what I want to do is be

238
00:09:11,330 --> 00:09:14,780
able to write logic that basically says

239
00:09:12,769 --> 00:09:16,759
when a hero throws a sword I don't care

240
00:09:14,779 --> 00:09:19,009
if it hits the hero don't consider that

241
00:09:16,759 --> 00:09:24,039
a problem right so I want to be able to

242
00:09:19,009 --> 00:09:27,019
say things like okay hero versus sword

243
00:09:24,039 --> 00:09:28,069
you know ignore that don't even think of

244
00:09:27,019 --> 00:09:29,659
that as a collision don't you think

245
00:09:28,070 --> 00:09:31,010
that's a possible collision when this

246
00:09:29,659 --> 00:09:33,350
hero throws this sword now

247
00:09:31,009 --> 00:09:37,789
I don't want to say necessarily all

248
00:09:33,350 --> 00:09:39,320
heroes I want to say this hero right so

249
00:09:37,789 --> 00:09:41,120
it's specific it's not necessarily a

250
00:09:39,320 --> 00:09:42,530
type it's not about the fact that he was

251
00:09:41,120 --> 00:09:44,299
a hero it's the fact that he's the guy

252
00:09:42,529 --> 00:09:45,889
who threw the sword if the Monstar threw

253
00:09:44,299 --> 00:09:47,449
the sword it'd be the monster that I

254
00:09:45,889 --> 00:09:49,490
don't care about right so this is a

255
00:09:47,450 --> 00:09:52,040
specific object this is an entity I want

256
00:09:49,490 --> 00:09:53,480
to say and this is not all swords if

257
00:09:52,039 --> 00:09:55,309
there's another sword that's coming at

258
00:09:53,480 --> 00:09:58,850
the hero I want to know if they hit so I

259
00:09:55,309 --> 00:10:00,979
want to know this sword right I want to

260
00:09:58,850 --> 00:10:03,170
say this hero versus this sword don't do

261
00:10:00,980 --> 00:10:06,769
that that's just a logical that's what

262
00:10:03,169 --> 00:10:09,019
my brain wants to say similarly when

263
00:10:06,769 --> 00:10:11,149
this monster gets hit with this sword I

264
00:10:09,019 --> 00:10:14,090
then probably want to say alright if

265
00:10:11,149 --> 00:10:15,529
this sword at that point is done meaning

266
00:10:14,090 --> 00:10:17,360
if the sword is like a one use thing it

267
00:10:15,529 --> 00:10:20,929
hits a monster and then it disappears or

268
00:10:17,360 --> 00:10:23,629
whatever right it shows some damage

269
00:10:20,929 --> 00:10:25,189
effect and the sword stops goes away

270
00:10:23,629 --> 00:10:27,610
goes back to the hero essentially so

271
00:10:25,190 --> 00:10:29,780
they could throw it again whatever

272
00:10:27,610 --> 00:10:31,190
that's fine we don't to do anything

273
00:10:29,779 --> 00:10:32,870
because on that collision the sword goes

274
00:10:31,190 --> 00:10:35,540
away there's no more logic involved but

275
00:10:32,870 --> 00:10:37,639
if the sword is to continue through the

276
00:10:35,539 --> 00:10:39,049
monster so it's a piercing it has like a

277
00:10:37,639 --> 00:10:40,639
piercing property or something so it

278
00:10:39,049 --> 00:10:42,589
hits the monster it does damage to the

279
00:10:40,639 --> 00:10:46,429
monster and if there's another mon-star

280
00:10:42,590 --> 00:10:48,920
if there's mon-star to over here right

281
00:10:46,429 --> 00:10:50,599
and maybe this is a really evil monster

282
00:10:48,919 --> 00:10:54,909
maybe this is let's say that this is

283
00:10:50,600 --> 00:10:57,259
actually a super evil monster so it's a

284
00:10:54,909 --> 00:10:59,209
it's like a mimic it's a it's a thing

285
00:10:57,259 --> 00:11:01,830
that pretends to be other things and

286
00:10:59,210 --> 00:11:05,639
then attacks you or whatever right and

287
00:11:01,830 --> 00:11:08,370
and what was the name of that oh right

288
00:11:05,639 --> 00:11:10,319
it's a it's the super fish monster right

289
00:11:08,370 --> 00:11:11,429
it pretends to be something else and

290
00:11:10,320 --> 00:11:12,030
then it attacks you when you least

291
00:11:11,429 --> 00:11:13,799
expect it

292
00:11:12,029 --> 00:11:15,299
so there's another monster over here and

293
00:11:13,799 --> 00:11:19,039
we want the sword to go through it and

294
00:11:15,299 --> 00:11:21,389
hit this guy so once it hits this dude

295
00:11:19,039 --> 00:11:23,250
every frame thereafter our collision

296
00:11:21,389 --> 00:11:26,850
detector would keep reporting that hit

297
00:11:23,250 --> 00:11:27,990
right if we didn't do something about it

298
00:11:26,850 --> 00:11:29,519
and that would be problematic for our

299
00:11:27,990 --> 00:11:31,230
collision code cuz every frame would

300
00:11:29,519 --> 00:11:32,610
think it hit the monster it would think

301
00:11:31,230 --> 00:11:34,139
to do whatever supposed to do and hit

302
00:11:32,610 --> 00:11:36,060
the monster and if that's like subtract

303
00:11:34,139 --> 00:11:38,220
the hit point it's gonna take off as

304
00:11:36,059 --> 00:11:39,089
many hit points as frames it as it goes

305
00:11:38,220 --> 00:11:42,920
through the monster there's all these

306
00:11:39,090 --> 00:11:45,060
problems right so we have issues there

307
00:11:42,919 --> 00:11:46,919
so the other thing that we want to do is

308
00:11:45,059 --> 00:11:52,079
once it hits a monster we won't want to

309
00:11:46,919 --> 00:11:55,379
say like you know on hit Monstar versus

310
00:11:52,080 --> 00:12:03,150
sword right and against this Monstar

311
00:11:55,379 --> 00:12:05,340
versus this sword right ignore so that's

312
00:12:03,149 --> 00:12:07,740
another thing that we want to do and so

313
00:12:05,340 --> 00:12:10,620
essentially what I'd like to do here is

314
00:12:07,740 --> 00:12:12,480
I'd like to try and again I've never

315
00:12:10,620 --> 00:12:14,789
actually written code this way before

316
00:12:12,480 --> 00:12:15,840
it's not something I've actually done so

317
00:12:14,789 --> 00:12:17,699
I'm kind of interested to see how it

318
00:12:15,840 --> 00:12:18,629
works and I often clients will be doing

319
00:12:17,700 --> 00:12:19,860
stuff like that in the stream so that

320
00:12:18,629 --> 00:12:21,840
you can see how I work through new

321
00:12:19,860 --> 00:12:23,279
problems not just problems in the same

322
00:12:21,840 --> 00:12:25,920
way that I've done them in some other

323
00:12:23,279 --> 00:12:27,240
way in some other case so the thing that

324
00:12:25,919 --> 00:12:28,229
I was thinking about to try first for

325
00:12:27,240 --> 00:12:30,289
this and I explained it on a previous

326
00:12:28,230 --> 00:12:32,610
stream is let's just make this explicit

327
00:12:30,289 --> 00:12:35,699
let's just go ahead and actually just

328
00:12:32,610 --> 00:12:37,230
write code that does exactly this so in

329
00:12:35,700 --> 00:12:39,300
our collision response routines and

330
00:12:37,230 --> 00:12:40,769
anywhere whe else what we want like when

331
00:12:39,299 --> 00:12:43,649
you throw a sword you can literally just

332
00:12:40,769 --> 00:12:45,870
add rules to the system that tell you

333
00:12:43,649 --> 00:12:48,179
this and the collisions vector will obey

334
00:12:45,870 --> 00:12:50,100
them so when a hero throws the sword we

335
00:12:48,179 --> 00:12:58,620
add a rule that says this here on this

336
00:12:50,100 --> 00:13:00,509
sword can't collide right let's just do

337
00:12:58,620 --> 00:13:06,240
it and then we'll see how that actually

338
00:13:00,509 --> 00:13:08,429
goes right that's my theory and I don't

339
00:13:06,240 --> 00:13:11,940
know how well that'll work but it seems

340
00:13:08,429 --> 00:13:14,309
like it seems like a good way to start

341
00:13:11,940 --> 00:13:15,570
because usually if you can make code

342
00:13:14,309 --> 00:13:17,849
explicit

343
00:13:15,570 --> 00:13:20,519
if you can make it do things the way

344
00:13:17,850 --> 00:13:22,860
that you want to state them directly

345
00:13:20,519 --> 00:13:24,448
that is usually the most versatile most

346
00:13:22,860 --> 00:13:25,949
easy understand most easy to debug way

347
00:13:24,448 --> 00:13:27,479
because then there's not all these weird

348
00:13:25,948 --> 00:13:29,419
implicit rules that you've basically

349
00:13:27,480 --> 00:13:32,250
tuned you know code that you've sort of

350
00:13:29,419 --> 00:13:36,750
crafted to do essentially what we just

351
00:13:32,250 --> 00:13:37,828
wrote but in an indirect way so I'm

352
00:13:36,750 --> 00:13:42,120
going to try that and that's going to be

353
00:13:37,828 --> 00:13:43,799
the topic of today's stream all right so

354
00:13:42,120 --> 00:13:44,129
let's take a look how are we gonna do

355
00:13:43,799 --> 00:13:46,258
that

356
00:13:44,129 --> 00:13:49,909
what I want to do is basically do that

357
00:13:46,259 --> 00:13:52,589
right here okay so we already have

358
00:13:49,909 --> 00:13:55,528
essentially one implicit rule we already

359
00:13:52,589 --> 00:13:57,930
did sort of one part of this which was

360
00:13:55,528 --> 00:14:00,208
saying that when I test an entity I

361
00:13:57,929 --> 00:14:03,588
don't want to test the entity against

362
00:14:00,208 --> 00:14:05,849
itself meaning an e cannot self collide

363
00:14:03,589 --> 00:14:08,160
so what we did there is we said all

364
00:14:05,850 --> 00:14:09,480
right when we loop through for any given

365
00:14:08,159 --> 00:14:11,309
entity right here we are in our move

366
00:14:09,480 --> 00:14:14,940
entity routine removing this entity

367
00:14:11,309 --> 00:14:16,229
it's called enemy when entity moves we

368
00:14:14,940 --> 00:14:18,360
loop through the other entities that we

369
00:14:16,230 --> 00:14:19,199
want to test called test entity and

370
00:14:18,360 --> 00:14:20,639
right now we don't have a facial

371
00:14:19,198 --> 00:14:22,139
partition that's why we say expansion

372
00:14:20,639 --> 00:14:23,370
here we want it we're looping over all

373
00:14:22,139 --> 00:14:24,448
the entities in the same region and

374
00:14:23,370 --> 00:14:27,600
later we probably only want to do the

375
00:14:24,448 --> 00:14:29,189
ones that are close to you but that's

376
00:14:27,600 --> 00:14:30,360
not a that's an optimization that has

377
00:14:29,190 --> 00:14:33,540
nothing to do with the logic that's just

378
00:14:30,360 --> 00:14:36,899
optimization so what we do is we then

379
00:14:33,539 --> 00:14:37,860
say if the entity is not equal to the

380
00:14:36,899 --> 00:14:39,208
one we're testing us if there are

381
00:14:37,860 --> 00:14:40,769
different entities then we'll do the

382
00:14:39,208 --> 00:14:42,299
test but if they're the same entity

383
00:14:40,769 --> 00:14:44,639
don't do the test and that was sort of

384
00:14:42,299 --> 00:14:46,439
one of these rules essentially that's

385
00:14:44,639 --> 00:14:47,579
universal for all entities we don't want

386
00:14:46,440 --> 00:14:48,360
them to collide against themselves

387
00:14:47,578 --> 00:14:53,159
because that's a meaningless statement

388
00:14:48,360 --> 00:14:54,480
right obviously an entity always is

389
00:14:53,159 --> 00:14:55,860
colliding with itself so if you had

390
00:14:54,480 --> 00:14:58,139
something you wanted to do on that

391
00:14:55,860 --> 00:14:59,250
condition you just put it in its update

392
00:14:58,139 --> 00:15:00,750
call because if you know it's always

393
00:14:59,250 --> 00:15:05,909
gonna happen you don't have to test for

394
00:15:00,750 --> 00:15:07,559
it right and so given that placement

395
00:15:05,909 --> 00:15:09,629
what we really want to do is we want to

396
00:15:07,559 --> 00:15:11,338
upgrade this to basically say should

397
00:15:09,629 --> 00:15:13,948
these empties collide so we want a

398
00:15:11,339 --> 00:15:16,350
should collide call right which takes

399
00:15:13,948 --> 00:15:18,179
two entities and figures out whether

400
00:15:16,350 --> 00:15:20,550
those two entities should collide with

401
00:15:18,179 --> 00:15:22,528
each other if it were if it returns true

402
00:15:20,549 --> 00:15:24,929
we'll assume that we actually do want to

403
00:15:22,528 --> 00:15:27,360
do that test if it returns false we'll

404
00:15:24,929 --> 00:15:29,239
assume that it wouldn't and what we can

405
00:15:27,360 --> 00:15:32,449
also do is roll this test in

406
00:15:29,240 --> 00:15:34,669
right so basically the collision

407
00:15:32,448 --> 00:15:36,649
detector now will be completely dumb as

408
00:15:34,669 --> 00:15:39,799
far as any is concerned it will just

409
00:15:36,649 --> 00:15:42,438
call out to some kind of grand notion a

410
00:15:39,799 --> 00:15:44,419
predicate function basically that's just

411
00:15:42,438 --> 00:15:46,578
there to know whether two things should

412
00:15:44,419 --> 00:15:47,899
collide and in that way anywhere else in

413
00:15:46,578 --> 00:15:49,578
the code that we want to know whether

414
00:15:47,899 --> 00:15:51,379
two entities could collide or not if we

415
00:15:49,578 --> 00:15:52,878
have logic that that you know needs to

416
00:15:51,379 --> 00:15:54,110
know these sorts of things it can just

417
00:15:52,879 --> 00:15:55,579
call that same function then we know

418
00:15:54,110 --> 00:15:57,678
everyone's always asking the same

419
00:15:55,578 --> 00:15:59,599
question they give to entities they can

420
00:15:57,678 --> 00:16:02,470
get back a yes-or-no answer whether or

421
00:15:59,600 --> 00:16:05,509
not the two things will collide right

422
00:16:02,470 --> 00:16:10,519
and so that's what we want to do there

423
00:16:05,509 --> 00:16:11,959
now we have one other sort of yep and I

424
00:16:10,519 --> 00:16:13,249
guess we have one other thing that that

425
00:16:11,958 --> 00:16:15,318
doesn't address which is you know

426
00:16:13,249 --> 00:16:17,629
whether things stopped on the motion or

427
00:16:15,318 --> 00:16:19,278
not but that's the job of the collision

428
00:16:17,629 --> 00:16:21,079
response routine so we're breaking into

429
00:16:19,278 --> 00:16:23,600
two pieces there's whether or not we

430
00:16:21,078 --> 00:16:25,039
want to register the fact that they

431
00:16:23,600 --> 00:16:26,928
collided and then there's what do we

432
00:16:25,039 --> 00:16:28,849
want to do on it and what we want to do

433
00:16:26,928 --> 00:16:31,188
on it is handled down here so this is

434
00:16:28,850 --> 00:16:33,199
strictly telling us whether an event

435
00:16:31,188 --> 00:16:36,198
could occur when these two things touch

436
00:16:33,198 --> 00:16:37,639
and that event could be about physically

437
00:16:36,198 --> 00:16:38,688
colliding with the things but it could

438
00:16:37,639 --> 00:16:41,959
also be that they're just passing

439
00:16:38,688 --> 00:16:43,490
through but we want to note it right so

440
00:16:41,958 --> 00:16:45,078
that's what we're gonna do here so if we

441
00:16:43,490 --> 00:16:47,899
take a look at what this should be we

442
00:16:45,078 --> 00:16:50,928
already know potentially one of the

443
00:16:47,899 --> 00:16:53,360
things that it should do right oops so

444
00:16:50,928 --> 00:16:57,078
if I take this out here and say yeah

445
00:16:53,360 --> 00:16:59,778
should collide sim entity a Simmons TP

446
00:16:57,078 --> 00:17:01,068
right then what I could do is just start

447
00:16:59,778 --> 00:17:04,759
by saying well we know one thing which

448
00:17:01,068 --> 00:17:10,759
is this right so let's go ahead and move

449
00:17:04,759 --> 00:17:12,980
that out there like so okay all right so

450
00:17:10,759 --> 00:17:15,288
basically we know that if two things are

451
00:17:12,980 --> 00:17:17,328
going to do colliding right then this

452
00:17:15,288 --> 00:17:19,158
this collides flag I don't know how much

453
00:17:17,328 --> 00:17:21,558
we want to deal with that anymore but we

454
00:17:19,159 --> 00:17:25,278
know at the very least both of these

455
00:17:21,558 --> 00:17:26,720
things should not nothing neither of

456
00:17:25,278 --> 00:17:30,380
them should be non spatial entities

457
00:17:26,720 --> 00:17:32,298
right in other words both entities have

458
00:17:30,380 --> 00:17:34,070
to be spatial in order for the tooth for

459
00:17:32,298 --> 00:17:36,769
the things to collide and that gets us

460
00:17:34,069 --> 00:17:38,388
out of that business essentially of

461
00:17:36,769 --> 00:17:41,658
testing this now we could still do this

462
00:17:38,388 --> 00:17:43,250
here as sort of a special case if we

463
00:17:41,659 --> 00:17:46,820
wanted to where we basically

464
00:17:43,250 --> 00:17:49,759
are quickly getting out of this routine

465
00:17:46,819 --> 00:17:53,240
so we could say right here note you know

466
00:17:49,759 --> 00:17:57,980
this is just an optimization to avoid

467
00:17:53,240 --> 00:18:02,630
entering the loop in the case where the

468
00:17:57,980 --> 00:18:03,769
test entity is non-spatial right this is

469
00:18:02,630 --> 00:18:04,460
just an early out but we really don't

470
00:18:03,769 --> 00:18:05,779
need it anymore

471
00:18:04,460 --> 00:18:07,069
meaning we could get rid of that and the

472
00:18:05,779 --> 00:18:08,359
code would still function properly but

473
00:18:07,069 --> 00:18:11,799
we may just want to do a little pre

474
00:18:08,359 --> 00:18:14,509
checking there to see right so anyway

475
00:18:11,799 --> 00:18:16,220
we've got this test we can basically say

476
00:18:14,509 --> 00:18:19,400
if either of these two things are

477
00:18:16,220 --> 00:18:20,630
non-spatial then we know that we

478
00:18:19,400 --> 00:18:23,060
wouldn't have to do this but if either

479
00:18:20,630 --> 00:18:29,810
of them are then then we need to

480
00:18:23,059 --> 00:18:31,789
actually do the check all right so we've

481
00:18:29,809 --> 00:18:33,859
got our result here we assume that they

482
00:18:31,789 --> 00:18:35,690
don't need to return true assuming that

483
00:18:33,859 --> 00:18:37,369
they're both facial and then we return

484
00:18:35,690 --> 00:18:41,000
that right and so that would be one way

485
00:18:37,369 --> 00:18:42,529
of us testing that and again that should

486
00:18:41,000 --> 00:18:44,690
just kind of work and do the same thing

487
00:18:42,529 --> 00:18:46,309
that we were doing before okay we still

488
00:18:44,690 --> 00:18:51,230
have our stops on collision thing so

489
00:18:46,309 --> 00:18:52,730
that would be this right but yeah on the

490
00:18:51,230 --> 00:18:55,099
stops on collision front

491
00:18:52,730 --> 00:18:56,509
we don't really quite know how exactly

492
00:18:55,099 --> 00:18:58,519
we haven't talked about how we want to

493
00:18:56,509 --> 00:19:01,160
deal with this yet but we could say that

494
00:18:58,519 --> 00:19:03,170
basically it's not really about the

495
00:19:01,160 --> 00:19:06,710
entity flag anymore we could say that

496
00:19:03,170 --> 00:19:09,160
stops on collision is just whether you

497
00:19:06,710 --> 00:19:17,539
know the I guess we'll do the a type

498
00:19:09,160 --> 00:19:19,759
equals entity oops and made H and made H

499
00:19:17,539 --> 00:19:23,680
there we go things that stop on

500
00:19:19,759 --> 00:19:29,269
collision are basically the hero right I

501
00:19:23,680 --> 00:19:30,380
guess and let's see here get if this is

502
00:19:29,269 --> 00:19:31,519
not the way we want to do this I don't

503
00:19:30,380 --> 00:19:32,960
even know why I'm typing this in right

504
00:19:31,519 --> 00:19:37,160
now I just kind of wanted to go do the

505
00:19:32,960 --> 00:19:40,220
other thing so let's see the the

506
00:19:37,160 --> 00:19:46,400
familiar and the Monstar all right

507
00:19:40,220 --> 00:19:48,410
familiar and the Monstar right those are

508
00:19:46,400 --> 00:19:49,970
the things that stop on collision and we

509
00:19:48,410 --> 00:19:51,470
did this kind of sorting thing I don't

510
00:19:49,970 --> 00:19:53,329
even you know what I'm not even gonna

511
00:19:51,470 --> 00:19:54,480
I'm not gonna do that yet that's not

512
00:19:53,329 --> 00:19:55,589
even the way we want to write it

513
00:19:54,480 --> 00:19:57,779
it's not I'm gonna do that we're just

514
00:19:55,589 --> 00:19:59,189
going to return false for now and then

515
00:19:57,779 --> 00:20:04,349
the next thing we'll do is we'll come in

516
00:19:59,190 --> 00:20:05,940
here and do that so to do real stops on

517
00:20:04,349 --> 00:20:08,969
collision cuz that's gonna be a property

518
00:20:05,940 --> 00:20:10,380
identity property comparison thing so I

519
00:20:08,970 --> 00:20:12,630
don't want to pretend that that would be

520
00:20:10,380 --> 00:20:15,840
something useful all right okay

521
00:20:12,630 --> 00:20:17,160
and so what we need to do now is

522
00:20:15,839 --> 00:20:20,009
actually kind of build these things out

523
00:20:17,160 --> 00:20:22,580
and make something logical about go on

524
00:20:20,009 --> 00:20:24,509
there right so mm-hmm

525
00:20:22,579 --> 00:20:26,909
let's tackle this one piece at a time

526
00:20:24,509 --> 00:20:28,410
what we do know is we want to have a way

527
00:20:26,910 --> 00:20:29,669
to write these but these rules that I

528
00:20:28,410 --> 00:20:30,900
talked about in the whiteboard we want

529
00:20:29,669 --> 00:20:32,700
to write that into the should collide

530
00:20:30,900 --> 00:20:36,210
function so basically what we want to do

531
00:20:32,700 --> 00:20:40,350
here is say you know in this section we

532
00:20:36,210 --> 00:20:44,039
wanted to do that'll basically do look

533
00:20:40,349 --> 00:20:47,969
in a rules table to see if we should

534
00:20:44,039 --> 00:20:49,769
collide right and that'll be that and

535
00:20:47,970 --> 00:20:53,970
then the other thing that we want to do

536
00:20:49,769 --> 00:20:55,918
is probably we want it we want to sort

537
00:20:53,970 --> 00:20:57,329
of formalize this this handle collision

538
00:20:55,919 --> 00:20:58,290
thing here so we can make the stops on

539
00:20:57,329 --> 00:21:00,480
collision think I'm a little more

540
00:20:58,289 --> 00:21:02,129
logical so on handle collision I'm

541
00:21:00,480 --> 00:21:04,048
trying to think of whether I just want

542
00:21:02,130 --> 00:21:05,220
to return that boolean whether a boolean

543
00:21:04,048 --> 00:21:06,750
is sufficient or whether I want to

544
00:21:05,220 --> 00:21:08,720
return a package of information that

545
00:21:06,750 --> 00:21:14,869
says what should happen

546
00:21:08,720 --> 00:21:17,220
hmm I guess for now since I don't know

547
00:21:14,869 --> 00:21:18,719
I'll just leave it with the boolean but

548
00:21:17,220 --> 00:21:20,130
in the future maybe we want to return a

549
00:21:18,720 --> 00:21:21,269
little more information there I'm not

550
00:21:20,130 --> 00:21:23,760
sure

551
00:21:21,269 --> 00:21:25,558
and so I'll also move this to do for

552
00:21:23,759 --> 00:21:27,509
stairs up here because really that will

553
00:21:25,558 --> 00:21:29,039
be something that happens in the handle

554
00:21:27,509 --> 00:21:33,450
collision when we actually handle stairs

555
00:21:29,039 --> 00:21:34,950
and stuff so I think this will be fine

556
00:21:33,450 --> 00:21:36,840
but what I would like to do is the

557
00:21:34,950 --> 00:21:38,580
sorting stuff I'm gonna get rid of the

558
00:21:36,839 --> 00:21:41,039
sorting stuff in here I'm gonna move the

559
00:21:38,579 --> 00:21:42,539
sorting stuff that basically was about

560
00:21:41,039 --> 00:21:44,519
doing the dispatch I'm gonna say that

561
00:21:42,539 --> 00:21:46,950
handle collision actually just takes the

562
00:21:44,519 --> 00:21:48,839
things directly right and and we'll deal

563
00:21:46,950 --> 00:21:51,058
with that kind of up here if it wants to

564
00:21:48,839 --> 00:21:52,740
sort them it can sort them and so handle

565
00:21:51,058 --> 00:21:58,889
pollution will just pass the two

566
00:21:52,740 --> 00:22:01,519
entities into it like so what are they

567
00:21:58,890 --> 00:22:12,750
they're entity

568
00:22:01,519 --> 00:22:13,680
and hid and so basically yeah there we

569
00:22:12,750 --> 00:22:15,869
go

570
00:22:13,680 --> 00:22:17,310
basically this is the setup that I think

571
00:22:15,869 --> 00:22:20,119
that I want to use to go ahead and write

572
00:22:17,309 --> 00:22:23,279
the code so the way the code works is

573
00:22:20,119 --> 00:22:25,019
when we are moving in entity at least at

574
00:22:23,279 --> 00:22:26,670
the moment we go through some number of

575
00:22:25,019 --> 00:22:29,039
iterations trying to move them to the

576
00:22:26,670 --> 00:22:30,300
new location that they should go we have

577
00:22:29,039 --> 00:22:32,519
a movement cap which we implemented

578
00:22:30,299 --> 00:22:35,129
yesterday so I can only go a certain

579
00:22:32,519 --> 00:22:37,500
distance if they've got a moving cap on

580
00:22:35,130 --> 00:22:38,820
but that's separate issue so what we do

581
00:22:37,500 --> 00:22:40,440
is we go through all the entities and we

582
00:22:38,819 --> 00:22:42,599
say if these two entities should collide

583
00:22:40,440 --> 00:22:44,759
then we actually test to see if they

584
00:22:42,599 --> 00:22:47,490
could collide and we set the the

585
00:22:44,759 --> 00:22:49,170
collision time based on that then we

586
00:22:47,490 --> 00:22:50,910
come out here if we actually did collide

587
00:22:49,170 --> 00:22:54,180
with someone we handled that collision

588
00:22:50,910 --> 00:22:56,670
and if that collision handling code

589
00:22:54,180 --> 00:22:59,670
decided that we should actually go ahead

590
00:22:56,670 --> 00:23:01,680
and stop the thing where it was we will

591
00:22:59,670 --> 00:23:03,150
update the Delta to not allow them to

592
00:23:01,680 --> 00:23:05,940
move in that direction anymore and then

593
00:23:03,150 --> 00:23:07,380
we continue our iteration right so very

594
00:23:05,940 --> 00:23:09,809
very straightforward and so now

595
00:23:07,380 --> 00:23:12,750
basically all of our stuff is broken

596
00:23:09,809 --> 00:23:13,919
into these two sort of routines I'm

597
00:23:12,750 --> 00:23:14,940
going to put them the opposite order

598
00:23:13,920 --> 00:23:17,580
because this is how they actually are

599
00:23:14,940 --> 00:23:19,220
logically or organized we essentially

600
00:23:17,579 --> 00:23:21,509
have one function that needs to

601
00:23:19,220 --> 00:23:24,180
determine whether checking should occur

602
00:23:21,509 --> 00:23:28,230
at all and then we have another function

603
00:23:24,180 --> 00:23:29,759
which basically says ok what do we do

604
00:23:28,230 --> 00:23:34,049
when two things actually do collide

605
00:23:29,759 --> 00:23:37,079
right so let's start with the should

606
00:23:34,049 --> 00:23:38,609
collide anytime two things are spatial

607
00:23:37,079 --> 00:23:40,589
we're basically saying they can collide

608
00:23:38,609 --> 00:23:42,269
and so then the other thing that we're

609
00:23:40,589 --> 00:23:44,189
going to do here is basically look for

610
00:23:42,269 --> 00:23:46,049
any rules because I think that's all we

611
00:23:44,190 --> 00:23:49,769
have right now it's basically like two

612
00:23:46,049 --> 00:23:52,019
things should collide if if both of them

613
00:23:49,769 --> 00:23:53,490
are spatial I can't think of anything

614
00:23:52,019 --> 00:23:55,650
right now that we have that doesn't

615
00:23:53,490 --> 00:23:56,910
actually at least have events that

616
00:23:55,650 --> 00:23:57,990
happen on collision because the sword is

617
00:23:56,910 --> 00:24:00,000
something that passes through things but

618
00:23:57,990 --> 00:24:03,059
we want to do stuff on it so everything

619
00:24:00,000 --> 00:24:04,589
in our game so far collides and so all

620
00:24:03,059 --> 00:24:06,329
we really need at this point is the

621
00:24:04,589 --> 00:24:07,740
table and so I'm going to do a very

622
00:24:06,329 --> 00:24:09,659
simple version of the table first but

623
00:24:07,740 --> 00:24:12,569
we're probably gonna want to do a more

624
00:24:09,660 --> 00:24:14,340
complicated version of the table

625
00:24:12,569 --> 00:24:16,119
in a little bit

626
00:24:14,339 --> 00:24:17,319
something that's a little bit smarter

627
00:24:16,119 --> 00:24:19,209
than this it's gonna be like a really

628
00:24:17,319 --> 00:24:20,529
stupid version of this table right but

629
00:24:19,210 --> 00:24:21,870
I'm just just to get it working so that

630
00:24:20,529 --> 00:24:23,980
we don't have to think about it too much

631
00:24:21,869 --> 00:24:27,099
because we probably want to organize it

632
00:24:23,980 --> 00:24:29,620
to be fast and this this ain't gonna be

633
00:24:27,099 --> 00:24:31,178
that so all right so basically what

634
00:24:29,619 --> 00:24:33,609
we've got here is we're gonna have a

635
00:24:31,179 --> 00:24:34,990
little collision rule so we'll do it

636
00:24:33,609 --> 00:24:38,139
basically say there's a collision rule

637
00:24:34,990 --> 00:24:40,960
here and we'll call this a pairwise

638
00:24:38,140 --> 00:24:42,370
collision roll I guess and so what this

639
00:24:40,960 --> 00:24:45,819
will be is this will this will

640
00:24:42,369 --> 00:24:48,369
essentially say we've got you know in

641
00:24:45,819 --> 00:24:50,349
and the index storage index a and

642
00:24:48,369 --> 00:24:53,168
storage index B like these two guys

643
00:24:50,349 --> 00:24:54,939
right and we're basically saying that

644
00:24:53,169 --> 00:25:01,570
they should or shouldn't collide it's

645
00:24:54,940 --> 00:25:03,340
what I would say right and so for now I

646
00:25:01,569 --> 00:25:06,490
guess we'll just or a rule should

647
00:25:03,339 --> 00:25:08,589
collide and so what we want to do is

648
00:25:06,490 --> 00:25:10,150
basically look this up and I'm gonna do

649
00:25:08,589 --> 00:25:12,428
the dumbest like I said dumbest possible

650
00:25:10,150 --> 00:25:14,650
thing will have this pairwise collision

651
00:25:12,429 --> 00:25:17,200
rule I'm just gonna sort of store

652
00:25:14,650 --> 00:25:19,090
I might even store just a linked list of

653
00:25:17,200 --> 00:25:21,340
these things I'm trying to think of what

654
00:25:19,089 --> 00:25:22,329
I want to actually do here because I

655
00:25:21,339 --> 00:25:24,548
think what I probably want to do

656
00:25:22,329 --> 00:25:27,009
eventually is have a hash table and I

657
00:25:24,548 --> 00:25:30,369
want to probably hash on on storage

658
00:25:27,009 --> 00:25:31,839
index a yeah I mean that's probably what

659
00:25:30,369 --> 00:25:33,959
I want to do so you know we're probably

660
00:25:31,839 --> 00:25:36,668
want to do something like this right

661
00:25:33,960 --> 00:25:38,470
something like this and then there's

662
00:25:36,669 --> 00:25:39,610
just this is just like like a hash in

663
00:25:38,470 --> 00:25:42,220
here that Jacek says we've got a

664
00:25:39,609 --> 00:25:45,189
pairwise collision rule and you know

665
00:25:42,220 --> 00:25:49,630
we've got some hash table of said rules

666
00:25:45,190 --> 00:25:51,700
right and so we've got collision rule

667
00:25:49,630 --> 00:25:56,559
hash right and that's going to be

668
00:25:51,700 --> 00:25:58,360
something right so that seems fine and I

669
00:25:56,558 --> 00:26:00,339
guess I don't even really care how big

670
00:25:58,359 --> 00:26:01,389
this is it doesn't even really matter I

671
00:26:00,339 --> 00:26:02,949
don't know we're not really doing

672
00:26:01,390 --> 00:26:04,570
anything particularly intelligent here

673
00:26:02,950 --> 00:26:05,558
so we'll just do the same thing we did

674
00:26:04,569 --> 00:26:09,178
before

675
00:26:05,558 --> 00:26:11,289
it must be power to right like so and

676
00:26:09,179 --> 00:26:13,540
I'm just gonna store those things in

677
00:26:11,289 --> 00:26:15,548
there so what we'll do is anytime that

678
00:26:13,539 --> 00:26:18,009
we want to know about this pairwise

679
00:26:15,548 --> 00:26:21,129
collision rule thing we're just going to

680
00:26:18,009 --> 00:26:23,440
go ahead and say let's go ahead and look

681
00:26:21,130 --> 00:26:26,500
in that table so this is gonna have to

682
00:26:23,440 --> 00:26:26,769
know about our game state right so this

683
00:26:26,500 --> 00:26:31,359
is

684
00:26:26,769 --> 00:26:32,619
game stake here game state and it's

685
00:26:31,359 --> 00:26:35,259
gonna go ahead and look in that table

686
00:26:32,619 --> 00:26:37,329
and say okay well we'll do the same

687
00:26:35,259 --> 00:26:40,089
sorting that we did here right we'll

688
00:26:37,329 --> 00:26:41,889
basically do the same kind of sorting

689
00:26:40,089 --> 00:26:44,139
technique we want to look up in the hash

690
00:26:41,890 --> 00:26:45,340
table based on a stable index for when

691
00:26:44,140 --> 00:26:48,340
two things are gonna collide with each

692
00:26:45,339 --> 00:26:50,679
other so since they're stored on storage

693
00:26:48,339 --> 00:26:52,720
index what we'll do is we'll just say if

694
00:26:50,680 --> 00:26:54,580
the storage index will sort them so that

695
00:26:52,720 --> 00:26:56,380
a is always the one with the lower

696
00:26:54,579 --> 00:26:58,629
storage index right so we know we're

697
00:26:56,380 --> 00:26:59,530
always looking up and if you don't if

698
00:26:58,630 --> 00:27:01,390
you've never done that kind of thing

699
00:26:59,529 --> 00:27:05,230
before it's a pretty standard scheme

700
00:27:01,390 --> 00:27:06,310
right I have two things I've got a and B

701
00:27:05,230 --> 00:27:08,559
right

702
00:27:06,309 --> 00:27:09,849
I want to hash I want to look up

703
00:27:08,559 --> 00:27:12,250
something on both of them

704
00:27:09,849 --> 00:27:15,189
so I basically want to do a query which

705
00:27:12,250 --> 00:27:19,599
says you know or a map right which

706
00:27:15,190 --> 00:27:22,779
basically Maps you know a B to a single

707
00:27:19,599 --> 00:27:24,549
boolean value right and the problem with

708
00:27:22,779 --> 00:27:27,309
this is if I just wrote it like this

709
00:27:24,549 --> 00:27:29,829
then map a B would not return the same

710
00:27:27,309 --> 00:27:32,230
thing as map BA right those would be two

711
00:27:29,829 --> 00:27:34,449
distinct entries if I was just doing

712
00:27:32,230 --> 00:27:37,390
them you know kind of as whichever one

713
00:27:34,450 --> 00:27:39,430
came first and since nobody knows which

714
00:27:37,390 --> 00:27:40,990
of these like you know if we just kind

715
00:27:39,430 --> 00:27:42,789
of took well whatever the routine

716
00:27:40,990 --> 00:27:43,329
happens to pass is the first one of the

717
00:27:42,789 --> 00:27:45,339
second one

718
00:27:43,329 --> 00:27:46,869
we'd have two entries one for when they

719
00:27:45,339 --> 00:27:48,279
were passed in this order and when when

720
00:27:46,869 --> 00:27:49,659
they were passed in this order so we

721
00:27:48,279 --> 00:27:51,490
want to do is make sure we always pass

722
00:27:49,660 --> 00:27:53,680
them in a stable order and the easiest

723
00:27:51,490 --> 00:27:56,559
way to do that is just to compare some

724
00:27:53,680 --> 00:27:58,480
known value in them and swap them around

725
00:27:56,559 --> 00:28:00,639
so that we know they always get passed

726
00:27:58,480 --> 00:28:02,529
no matter who passes them in the same

727
00:28:00,640 --> 00:28:04,150
order and so that's what I'm doing here

728
00:28:02,529 --> 00:28:05,440
I'm just basically saying okay let's

729
00:28:04,150 --> 00:28:07,450
swap them so they're always in the same

730
00:28:05,440 --> 00:28:09,490
order and then I'll look up in the hash

731
00:28:07,450 --> 00:28:12,850
table to see whether there's an entry

732
00:28:09,490 --> 00:28:16,329
for these two guys right hopefully that

733
00:28:12,849 --> 00:28:18,099
makes some reasonable sense so we're

734
00:28:16,329 --> 00:28:19,179
gonna do should collide we swap the

735
00:28:18,099 --> 00:28:21,039
things first so that we know that

736
00:28:19,180 --> 00:28:23,350
they're always in the right order and

737
00:28:21,039 --> 00:28:25,329
then what we do is we take a look into

738
00:28:23,349 --> 00:28:26,949
the table and we could actually say

739
00:28:25,329 --> 00:28:29,289
perhaps even that the table is

740
00:28:26,950 --> 00:28:31,930
authoritative for now which is if

741
00:28:29,289 --> 00:28:35,649
there's an entry in the table then you

742
00:28:31,930 --> 00:28:37,750
use that otherwise you don't right and

743
00:28:35,650 --> 00:28:39,690
so we'll just say for now we'll do a

744
00:28:37,750 --> 00:28:41,429
found

745
00:28:39,690 --> 00:28:43,259
actually I guess we could do it actually

746
00:28:41,429 --> 00:28:45,899
just we'll do it this way where we do it

747
00:28:43,259 --> 00:28:47,128
afterwards so we'll go ahead and say all

748
00:28:45,898 --> 00:28:49,589
right let's take a look in that

749
00:28:47,128 --> 00:28:52,859
collision rule hash will basically say

750
00:28:49,589 --> 00:28:54,839
we have a hash function here where we

751
00:28:52,859 --> 00:28:57,178
basically say you know we have a hash

752
00:28:54,839 --> 00:28:58,589
bucket right for this guy and I've

753
00:28:57,179 --> 00:28:59,820
already gone over hash tables so I won't

754
00:28:58,589 --> 00:29:00,720
belabor that point again we're doing

755
00:28:59,819 --> 00:29:02,970
exactly the same thing we did before

756
00:29:00,720 --> 00:29:04,500
we'll just take the storage index and

757
00:29:02,970 --> 00:29:05,960
this entity we won't even bother trying

758
00:29:04,500 --> 00:29:08,250
to do any kind of hashing on it yet

759
00:29:05,960 --> 00:29:10,139
we'll put in the Hat the thing that I

760
00:29:08,250 --> 00:29:12,628
always love although we may never do it

761
00:29:10,138 --> 00:29:14,158
with better hash function it's in every

762
00:29:12,628 --> 00:29:15,418
code base and no one ever actually us to

763
00:29:14,159 --> 00:29:17,309
do it because hash tables are so darn

764
00:29:15,419 --> 00:29:19,019
fast compared to everything else in your

765
00:29:17,308 --> 00:29:20,788
code oftentimes you never bother going

766
00:29:19,019 --> 00:29:23,819
to write a better hash function but you

767
00:29:20,788 --> 00:29:26,490
know it's there and then we go ahead and

768
00:29:23,819 --> 00:29:30,599
we'll say whatever that size of the hash

769
00:29:26,490 --> 00:29:33,690
table is a collision rule hash we'll go

770
00:29:30,599 --> 00:29:35,369
ahead and and and that with with the

771
00:29:33,690 --> 00:29:37,620
value so that produces that mask for a

772
00:29:35,369 --> 00:29:40,288
hash table there right that basically

773
00:29:37,619 --> 00:29:41,819
wraps us into the hash table so we go

774
00:29:40,288 --> 00:29:45,119
ahead and we get that rule out we've got

775
00:29:41,819 --> 00:29:47,939
our pairwise collision rule like so and

776
00:29:45,119 --> 00:29:49,319
we basically want to loop through that

777
00:29:47,940 --> 00:29:53,278
in fact I guess I could do this with a

778
00:29:49,319 --> 00:29:55,079
for loop here so we start here we keep

779
00:29:53,278 --> 00:30:01,409
going really cool to a little next in

780
00:29:55,079 --> 00:30:05,548
hash right next in hash and in the case

781
00:30:01,409 --> 00:30:11,669
where whatever the rule is storage index

782
00:30:05,548 --> 00:30:13,408
a equals a storage index all right so if

783
00:30:11,669 --> 00:30:18,659
I find a match just looking for that

784
00:30:13,409 --> 00:30:20,278
match I find a match that has both a and

785
00:30:18,659 --> 00:30:22,230
B in it then I just assume that the

786
00:30:20,278 --> 00:30:24,808
result is whatever the rule said right

787
00:30:22,230 --> 00:30:27,179
so the rule just straight-up overrides

788
00:30:24,808 --> 00:30:29,849
whatever I might have computed in

789
00:30:27,179 --> 00:30:35,038
whatever this logic ends up to be right

790
00:30:29,849 --> 00:30:37,798
so to do property based logic it was

791
00:30:35,038 --> 00:30:39,480
here so basically like we probably want

792
00:30:37,798 --> 00:30:41,429
to make this more complicated than it is

793
00:30:39,480 --> 00:30:42,628
right now eventually doing things with

794
00:30:41,429 --> 00:30:44,220
enemies to determine whether they should

795
00:30:42,628 --> 00:30:45,839
collide based on some properties of the

796
00:30:44,220 --> 00:30:48,000
two entities but for right now we don't

797
00:30:45,839 --> 00:30:49,589
have that we don't have any really rules

798
00:30:48,000 --> 00:30:50,190
we want to implement so but they will go

799
00:30:49,589 --> 00:30:54,329
there eventually

800
00:30:50,190 --> 00:30:58,110
so assuming that we you know we already

801
00:30:54,329 --> 00:31:00,599
set that to something then what we do is

802
00:30:58,109 --> 00:31:02,339
we'd go ahead and check in our hash

803
00:31:00,599 --> 00:31:04,139
table look through the hash table right

804
00:31:02,339 --> 00:31:06,119
grab out the first one that's in that

805
00:31:04,140 --> 00:31:08,970
whatever bucket we should be in hashing

806
00:31:06,119 --> 00:31:11,279
off of a go through each of those rules

807
00:31:08,970 --> 00:31:12,900
and when we find one that matches we

808
00:31:11,279 --> 00:31:15,000
just override it and in the case where

809
00:31:12,900 --> 00:31:22,640
we find a rule that overrides me to stop

810
00:31:15,000 --> 00:31:22,640
right okay

811
00:31:22,920 --> 00:31:28,110
so we kind of have there's there's a

812
00:31:26,400 --> 00:31:29,610
nasty thing here in fact I'm kind of

813
00:31:28,109 --> 00:31:30,779
glad we started down this road actually

814
00:31:29,609 --> 00:31:31,949
because this is gonna kind of be an

815
00:31:30,779 --> 00:31:33,269
interesting programming problem because

816
00:31:31,950 --> 00:31:35,309
there's a thing that I haven't actually

817
00:31:33,269 --> 00:31:37,889
considered here when I started writing

818
00:31:35,309 --> 00:31:39,750
this but actually is going to make this

819
00:31:37,890 --> 00:31:40,860
a more interesting data structure than

820
00:31:39,750 --> 00:31:46,140
just something that we've done before

821
00:31:40,859 --> 00:31:49,889
right we actually technically have a

822
00:31:46,140 --> 00:31:53,009
problem in terms of who we want to look

823
00:31:49,890 --> 00:31:58,770
up on because when we add these rules to

824
00:31:53,009 --> 00:32:01,319
the system right we kind of want also to

825
00:31:58,769 --> 00:32:04,200
be able to pull them out based on the

826
00:32:01,319 --> 00:32:07,769
entity as well right we want to be able

827
00:32:04,200 --> 00:32:10,890
to say when the sword when this sword is

828
00:32:07,769 --> 00:32:11,819
done you know comes out of existence you

829
00:32:10,890 --> 00:32:12,990
know it doesn't really come out of

830
00:32:11,819 --> 00:32:15,689
existence but when it goes back to the

831
00:32:12,990 --> 00:32:17,579
player we can get rid of all of those

832
00:32:15,690 --> 00:32:20,820
collision rules that were on that sword

833
00:32:17,579 --> 00:32:24,149
right and so we kinda have to think

834
00:32:20,819 --> 00:32:29,220
about how exactly we want that pull that

835
00:32:24,150 --> 00:32:31,170
sort of removal to work and so there's a

836
00:32:29,220 --> 00:32:34,019
couple different ways that we could do

837
00:32:31,170 --> 00:32:35,700
it obviously but it's kind of a tricky

838
00:32:34,019 --> 00:32:37,109
problem like I'm not sure what the most

839
00:32:35,700 --> 00:32:39,539
efficient way to handle that would be

840
00:32:37,109 --> 00:32:41,549
one way is to thread it again

841
00:32:39,539 --> 00:32:44,009
so we basically can pull things out by

842
00:32:41,549 --> 00:32:47,039
an entity thread so in addition to being

843
00:32:44,009 --> 00:32:50,970
linked by hash you're also linked by

844
00:32:47,039 --> 00:32:54,349
entity but I'm trying to think if

845
00:32:50,970 --> 00:32:57,269
there's if there's clever or cleverer

846
00:32:54,349 --> 00:32:59,789
ways of doing that and I'm not entirely

847
00:32:57,269 --> 00:33:03,599
sure so for now we'll just start with

848
00:32:59,789 --> 00:33:04,079
that well finish getting this working

849
00:33:03,599 --> 00:33:05,279
but then

850
00:33:04,079 --> 00:33:07,949
let's think about whether we want to

851
00:33:05,279 --> 00:33:09,509
kind of upgrade sort of how we're

852
00:33:07,950 --> 00:33:10,830
storing that because we want it to sort

853
00:33:09,509 --> 00:33:12,480
of be able to do both things and we'll

854
00:33:10,829 --> 00:33:14,639
see I'll so if you don't know exactly

855
00:33:12,480 --> 00:33:16,980
I'm talking about it's okay we'll get to

856
00:33:14,640 --> 00:33:18,630
it in a second here so there's our

857
00:33:16,980 --> 00:33:20,759
should collide right that basically

858
00:33:18,630 --> 00:33:24,090
tells us what should be going on there

859
00:33:20,759 --> 00:33:26,640
and so you know we we now have a trivial

860
00:33:24,089 --> 00:33:27,539
way of avoiding two things from from

861
00:33:26,640 --> 00:33:30,150
colliding with each other in that

862
00:33:27,539 --> 00:33:32,430
particular case right and so I think

863
00:33:30,150 --> 00:33:33,690
that actually should be mostly what we

864
00:33:32,430 --> 00:33:36,120
would need to get started with this

865
00:33:33,690 --> 00:33:39,269
collision rule hash episodes a member of

866
00:33:36,119 --> 00:33:42,750
game state and state let's see here

867
00:33:39,269 --> 00:33:45,690
storage index a absurdity story index

868
00:33:42,750 --> 00:33:48,900
and then our should collide takes the

869
00:33:45,690 --> 00:33:51,120
game state now so of course this guy

870
00:33:48,900 --> 00:33:53,850
doesn't have that so this actually takes

871
00:33:51,119 --> 00:33:58,169
a game state well there we go which

872
00:33:53,849 --> 00:34:00,689
means we have to pass it here like so so

873
00:33:58,170 --> 00:34:02,490
there we go and now we're in theory

874
00:34:00,690 --> 00:34:04,650
actually checking this stuff properly oh

875
00:34:02,490 --> 00:34:06,930
well but of course I can't just randomly

876
00:34:04,650 --> 00:34:08,579
change my memory layout we don't support

877
00:34:06,930 --> 00:34:11,130
hot loading on memory layout changes at

878
00:34:08,579 --> 00:34:12,869
the moment so yeah so now what we want

879
00:34:11,130 --> 00:34:14,640
to do is we should be able to add a rule

880
00:34:12,869 --> 00:34:16,440
that would allow us to stop having that

881
00:34:14,639 --> 00:34:17,879
weird bug where we kind of get stuck in

882
00:34:16,440 --> 00:34:19,650
there and we could also make it so

883
00:34:17,880 --> 00:34:21,090
familiars can pass to do the hero now

884
00:34:19,650 --> 00:34:22,320
pretty easily by making it so that

885
00:34:21,090 --> 00:34:23,940
familiars can pass through the hero but

886
00:34:22,320 --> 00:34:25,530
not other stuff that would also be

887
00:34:23,940 --> 00:34:27,300
something that we could add pretty

888
00:34:25,530 --> 00:34:28,710
trivial like this familiar can go

889
00:34:27,300 --> 00:34:31,470
through this hero and so on

890
00:34:28,710 --> 00:34:33,900
right so let's see how we can actually

891
00:34:31,469 --> 00:34:35,879
add that let's see how we can do that

892
00:34:33,900 --> 00:34:37,889
with our pairwise collision rule stuff

893
00:34:35,880 --> 00:34:40,140
so now what we need is we need a way to

894
00:34:37,889 --> 00:34:45,000
add that so we've got our should collide

895
00:34:40,139 --> 00:34:47,129
right sim region we've got our should

896
00:34:45,000 --> 00:34:50,489
collide call we also need a way to

897
00:34:47,130 --> 00:34:52,829
basically say you know add collision

898
00:34:50,489 --> 00:34:56,219
rule something like this where we can

899
00:34:52,829 --> 00:34:59,130
basically pass in this and say should

900
00:34:56,219 --> 00:35:01,079
collide and now that collision rule will

901
00:34:59,130 --> 00:35:04,349
you know get added to the to the list

902
00:35:01,079 --> 00:35:05,759
it's the exact same thing like we're

903
00:35:04,349 --> 00:35:10,920
just going to grab the hash bucket out

904
00:35:05,760 --> 00:35:14,580
we're gonna look to see basically which

905
00:35:10,920 --> 00:35:15,809
one there is and unfortunately I guess I

906
00:35:14,579 --> 00:35:17,429
don't know if I want to share this code

907
00:35:15,809 --> 00:35:17,880
or not it's such a small piece of code

908
00:35:17,429 --> 00:35:19,769
but

909
00:35:17,880 --> 00:35:21,660
maybe you know we kind of want to share

910
00:35:19,769 --> 00:35:23,579
that we'll see how it goes

911
00:35:21,659 --> 00:35:25,859
what I want to do here is say all right

912
00:35:23,579 --> 00:35:28,789
when we add that collision rule I'll at

913
00:35:25,860 --> 00:35:32,400
least do the due diligence and assume

914
00:35:28,789 --> 00:35:33,300
that you know that could already be in

915
00:35:32,400 --> 00:35:36,210
there and that you're just trying to

916
00:35:33,300 --> 00:35:38,100
override an existing collision rule so

917
00:35:36,210 --> 00:35:40,940
that I won't keep adding new rules I'll

918
00:35:38,099 --> 00:35:44,730
look to see first if that rule is there

919
00:35:40,940 --> 00:35:46,230
and and I guess I need to do this as

920
00:35:44,730 --> 00:35:47,550
well to make sure that switch happens

921
00:35:46,230 --> 00:35:49,409
I'd like to pull that code out I don't

922
00:35:47,550 --> 00:35:52,500
like the fact that that's duplicated so

923
00:35:49,409 --> 00:35:54,679
you probably want to get a little we

924
00:35:52,500 --> 00:35:59,280
probably want to collapse this to do

925
00:35:54,679 --> 00:36:00,269
collapse this with should collide and so

926
00:35:59,280 --> 00:36:02,370
we're have to think about exactly how

927
00:36:00,269 --> 00:36:04,050
that's gonna go but anyway when we have

928
00:36:02,369 --> 00:36:07,559
the a and the B's will do the same sort

929
00:36:04,050 --> 00:36:09,150
there will look them up again and

930
00:36:07,559 --> 00:36:11,400
basically what we'll do is we'll see

931
00:36:09,150 --> 00:36:14,190
whether or not we found it so we'll do

932
00:36:11,400 --> 00:36:16,110
pairwise collision rule found equals

933
00:36:14,190 --> 00:36:17,730
zero when we get here we'll do found

934
00:36:16,110 --> 00:36:23,250
equals rules because we found it and

935
00:36:17,730 --> 00:36:25,559
then if if we do not find one we will go

936
00:36:23,250 --> 00:36:28,050
ahead and add one so we'll basically say

937
00:36:25,559 --> 00:36:29,969
that you know whatever is in the hash

938
00:36:28,050 --> 00:36:32,010
bucket right now we just need to do that

939
00:36:29,969 --> 00:36:33,750
chaining we're doing this this next in

940
00:36:32,010 --> 00:36:35,010
hash thing right

941
00:36:33,750 --> 00:36:36,809
we're basically to go ahead and chain

942
00:36:35,010 --> 00:36:39,540
that on there so what we'll do is we'll

943
00:36:36,809 --> 00:36:41,429
say if we haven't found one then we're

944
00:36:39,539 --> 00:36:44,570
just going to make a new one so we need

945
00:36:41,429 --> 00:36:48,210
to do one of our our pushes here right

946
00:36:44,570 --> 00:36:50,039
we need to do a push and then we'll will

947
00:36:48,210 --> 00:36:53,369
basically get a new one out and then

948
00:36:50,039 --> 00:36:56,210
what we do is we say whatever was

949
00:36:53,369 --> 00:36:59,069
previously in the hash at that location

950
00:36:56,210 --> 00:37:00,510
we push that down we the new entry that

951
00:36:59,070 --> 00:37:02,160
we're gonna put into the location here

952
00:37:00,510 --> 00:37:04,230
is going to become the prime the first

953
00:37:02,159 --> 00:37:05,789
one and we'll point to whatever one was

954
00:37:04,230 --> 00:37:08,849
in there before right I'm doing that

955
00:37:05,789 --> 00:37:10,380
standard thing where basically we've

956
00:37:08,849 --> 00:37:12,989
done exactly this sort of thing before

957
00:37:10,380 --> 00:37:16,289
right I have a table of pointers here

958
00:37:12,989 --> 00:37:19,169
right here's my this is my my hash right

959
00:37:16,289 --> 00:37:21,000
each one of these is 0 at the start when

960
00:37:19,170 --> 00:37:23,360
we go to add something into it we take

961
00:37:21,000 --> 00:37:25,860
whatever the pointer was that was there

962
00:37:23,360 --> 00:37:27,240
we're going to put a new pointer into

963
00:37:25,860 --> 00:37:28,920
its place we're gonna make a new thing

964
00:37:27,239 --> 00:37:30,778
right we're gonna put a new pointer into

965
00:37:28,920 --> 00:37:33,028
its place and point to whatever the

966
00:37:30,778 --> 00:37:35,518
first thing was now if there already was

967
00:37:33,028 --> 00:37:37,380
something there then when we put the

968
00:37:35,518 --> 00:37:39,838
when we set the pointer equal to some

969
00:37:37,380 --> 00:37:41,579
new thing we need to make sure that this

970
00:37:39,838 --> 00:37:44,248
guy gets saved so we make the next

971
00:37:41,579 --> 00:37:46,140
pointer of the thing we insert point to

972
00:37:44,248 --> 00:37:47,668
whatever was there before right

973
00:37:46,139 --> 00:37:50,639
so we're basically inserting it the

974
00:37:47,668 --> 00:37:53,219
heavy always insert in between at the

975
00:37:50,639 --> 00:37:54,748
head of the hash table in between you

976
00:37:53,219 --> 00:37:56,579
know we basically insert right at the

977
00:37:54,748 --> 00:37:57,658
beginning so that everything that was

978
00:37:56,579 --> 00:38:01,199
there before I just kind of gets pushed

979
00:37:57,659 --> 00:38:02,489
down right pretty simple so the next

980
00:38:01,199 --> 00:38:04,079
thing in the hash is going to be

981
00:38:02,489 --> 00:38:08,099
whatever was the first thing in the hash

982
00:38:04,079 --> 00:38:10,079
before and then whatever the the head

983
00:38:08,099 --> 00:38:12,298
pointer of the thing points now to us

984
00:38:10,079 --> 00:38:13,859
right so we overwrite whatever was the

985
00:38:12,298 --> 00:38:15,929
thing that was there before the pointer

986
00:38:13,858 --> 00:38:18,509
to it we overwrite it with a pointer to

987
00:38:15,929 --> 00:38:20,659
ourselves right so all we really need

988
00:38:18,509 --> 00:38:23,039
now is to actually go grab that arena

989
00:38:20,659 --> 00:38:25,019
again we can use the World Arena for

990
00:38:23,039 --> 00:38:26,880
this because this is sort of a permanent

991
00:38:25,018 --> 00:38:29,068
thing that stays around these rules are

992
00:38:26,880 --> 00:38:31,409
important to the gameplay so we've got

993
00:38:29,068 --> 00:38:34,978
our World Arena we can push into the

994
00:38:31,409 --> 00:38:36,659
World Arena something that is the size

995
00:38:34,978 --> 00:38:38,668
of a pairwise collision rule and now

996
00:38:36,659 --> 00:38:40,079
we've got a new one right like so I

997
00:38:38,668 --> 00:38:42,958
believe that's all we need to do for

998
00:38:40,079 --> 00:38:44,669
that push what is it called

999
00:38:42,958 --> 00:38:47,338
I don't remember I never remember what

1000
00:38:44,668 --> 00:38:48,389
we called that it's called push struct

1001
00:38:47,338 --> 00:38:52,588
yes

1002
00:38:48,389 --> 00:38:54,808
push struct yeah so we do our push truck

1003
00:38:52,588 --> 00:38:57,418
to get the new one and then assuming

1004
00:38:54,809 --> 00:38:59,159
that we at this point we now want to

1005
00:38:57,418 --> 00:39:01,348
assert that we definitely have one right

1006
00:38:59,159 --> 00:39:02,849
although we could actually do an if

1007
00:39:01,349 --> 00:39:04,709
found here to allow out of memory

1008
00:39:02,849 --> 00:39:05,818
scenarios which you know like I said we

1009
00:39:04,708 --> 00:39:07,768
haven't really gotten to how we're

1010
00:39:05,818 --> 00:39:09,058
handling memory policy yet so it's not

1011
00:39:07,768 --> 00:39:10,889
that big of a deal we'll look at all our

1012
00:39:09,059 --> 00:39:11,849
push trucks later and decide how we want

1013
00:39:10,889 --> 00:39:14,908
to handle it cuz there won't be that

1014
00:39:11,849 --> 00:39:16,259
many of them and so basically assuming

1015
00:39:14,909 --> 00:39:18,150
that we found it we said it should

1016
00:39:16,259 --> 00:39:22,918
collide equal to the should collide and

1017
00:39:18,150 --> 00:39:26,599
we set its a and B equal to our a and B

1018
00:39:22,918 --> 00:39:30,358
as well so this is storage index a and

1019
00:39:26,599 --> 00:39:35,660
this is storage index B and so storage

1020
00:39:30,358 --> 00:39:37,460
and that's a oops in storage index B

1021
00:39:35,659 --> 00:39:39,649
so I think that's all we need to do

1022
00:39:37,460 --> 00:39:42,860
really to add a collision rule and so

1023
00:39:39,650 --> 00:39:45,559
let's go ahead and check that out inside

1024
00:39:42,860 --> 00:39:48,410
our handmade CBP when we actually create

1025
00:39:45,559 --> 00:39:53,929
the hero right so when we do add player

1026
00:39:48,409 --> 00:39:56,839
like so what we could do is say all

1027
00:39:53,929 --> 00:39:59,299
right when we add a player let's go

1028
00:39:56,840 --> 00:40:00,860
ahead and say that because I think don't

1029
00:39:59,300 --> 00:40:02,810
we add a sword when do we add the sword

1030
00:40:00,860 --> 00:40:04,220
there we go we add the sword so we add

1031
00:40:02,809 --> 00:40:06,469
the sword let's go ahead and add a

1032
00:40:04,219 --> 00:40:10,099
collision rule that basically says that

1033
00:40:06,469 --> 00:40:11,539
whatever our sword was oh you know what

1034
00:40:10,099 --> 00:40:15,079
I just realized too

1035
00:40:11,539 --> 00:40:16,670
this should actually probably not be we

1036
00:40:15,079 --> 00:40:19,549
don't want to have to have these in the

1037
00:40:16,670 --> 00:40:21,769
sim group like we want these to just we

1038
00:40:19,550 --> 00:40:23,960
actually want this to just be storage

1039
00:40:21,769 --> 00:40:25,789
index a and storage index B because we

1040
00:40:23,960 --> 00:40:28,220
want to be able to call this outside of

1041
00:40:25,789 --> 00:40:30,619
of stimulation we want to be able to

1042
00:40:28,219 --> 00:40:33,500
call it at any time so really we don't

1043
00:40:30,619 --> 00:40:36,380
want this we just want we just want to

1044
00:40:33,500 --> 00:40:39,079
work this way right so we have storage

1045
00:40:36,380 --> 00:40:41,619
index B Storage index a and then we have

1046
00:40:39,079 --> 00:40:46,969
our temp the equals storage index a

1047
00:40:41,619 --> 00:40:50,989
storage index a equals storage index B

1048
00:40:46,969 --> 00:40:55,009
and then storage index B equals 10 right

1049
00:40:50,989 --> 00:40:59,809
so we swap those around so then these

1050
00:40:55,010 --> 00:41:02,210
become this way instead right that way

1051
00:40:59,809 --> 00:41:03,650
we just don't have entities anymore and

1052
00:41:02,210 --> 00:41:05,809
that's nicer because now we can call it

1053
00:41:03,650 --> 00:41:09,139
from anywhere so basically we have at

1054
00:41:05,809 --> 00:41:13,070
that point we have our soared low index

1055
00:41:09,139 --> 00:41:16,879
and our our hero low index as well

1056
00:41:13,070 --> 00:41:18,680
entity low index like that and we passed

1057
00:41:16,880 --> 00:41:19,940
that game stayed in there and then we

1058
00:41:18,679 --> 00:41:23,779
say that those two things should not

1059
00:41:19,940 --> 00:41:26,480
collide right and in theory that might

1060
00:41:23,780 --> 00:41:28,970
work but who knows we'll find out

1061
00:41:26,480 --> 00:41:30,559
so I still am colliding properly of

1062
00:41:28,969 --> 00:41:31,549
course our collision detector is awful

1063
00:41:30,559 --> 00:41:33,320
at this point we should really probably

1064
00:41:31,550 --> 00:41:35,990
go in and just fix that collision thing

1065
00:41:33,320 --> 00:41:37,370
so people can't get stuck in things but

1066
00:41:35,989 --> 00:41:38,659
yeah so we got a bunch of work to do to

1067
00:41:37,369 --> 00:41:40,789
fix that sort of stuff we'll look at

1068
00:41:38,659 --> 00:41:42,799
that in a second but basically now we

1069
00:41:40,789 --> 00:41:45,019
should get into a situation where yeah

1070
00:41:42,800 --> 00:41:46,789
that thing does not collide anymore

1071
00:41:45,019 --> 00:41:49,070
of course it does collide with the tree

1072
00:41:46,789 --> 00:41:50,900
which creates a problem for us

1073
00:41:49,070 --> 00:41:54,559
because now the thing can't get past the

1074
00:41:50,900 --> 00:41:56,480
tree which is not what we wanted but

1075
00:41:54,559 --> 00:41:58,820
that's a separate issue all right so

1076
00:41:56,480 --> 00:42:01,070
let's get let's go fix that problem

1077
00:41:58,820 --> 00:42:03,010
in fact I guess we can fix it probably

1078
00:42:01,070 --> 00:42:05,289
without actually doing anything here

1079
00:42:03,010 --> 00:42:07,790
all right that's that was pretty funny

1080
00:42:05,289 --> 00:42:11,179
so when two things should collide we

1081
00:42:07,789 --> 00:42:13,789
could also say that basically inside our

1082
00:42:11,179 --> 00:42:17,000
hand a collision if if any of them is a

1083
00:42:13,789 --> 00:42:20,809
sword then we don't want stop on

1084
00:42:17,000 --> 00:42:24,760
collision to happen so actually now that

1085
00:42:20,809 --> 00:42:26,480
I think about it what's going on here oh

1086
00:42:24,760 --> 00:42:29,090
I see

1087
00:42:26,480 --> 00:42:31,849
so I got I guess I see what sort of the

1088
00:42:29,090 --> 00:42:34,430
problem is right when two things hit

1089
00:42:31,849 --> 00:42:36,589
each other we don't actually have a way

1090
00:42:34,429 --> 00:42:39,049
of saying okay we want this thing to go

1091
00:42:36,590 --> 00:42:41,539
through so when stops on collision is

1092
00:42:39,050 --> 00:42:44,390
not true at that point we essentially

1093
00:42:41,539 --> 00:42:46,460
have a rule that we want to obey which

1094
00:42:44,389 --> 00:42:52,400
says these two things you know this

1095
00:42:46,460 --> 00:42:54,019
should pass through right this thing

1096
00:42:52,400 --> 00:42:57,400
should pass through the thing that it

1097
00:42:54,019 --> 00:42:57,400
just hit if that makes sense

1098
00:43:00,309 --> 00:43:08,570
okay so we can do that we've got issues

1099
00:43:06,409 --> 00:43:09,980
to deal with now at this point but you

1100
00:43:08,570 --> 00:43:10,760
know let's let's just go ahead and

1101
00:43:09,980 --> 00:43:13,880
follow this through to its logical

1102
00:43:10,760 --> 00:43:15,140
conclusion so we'll add a collision real

1103
00:43:13,880 --> 00:43:19,309
cure we'll say all right we've got the

1104
00:43:15,139 --> 00:43:20,900
game state the game state is going to

1105
00:43:19,309 --> 00:43:23,059
say from now on these two enemies can

1106
00:43:20,900 --> 00:43:25,940
hate each other so entity storage index

1107
00:43:23,059 --> 00:43:28,429
and hit entity storage index just can't

1108
00:43:25,940 --> 00:43:30,349
can't collide right and so we'll just

1109
00:43:28,429 --> 00:43:32,210
say that that's true right and there hey

1110
00:43:30,349 --> 00:43:34,099
look our sword goes right through stuff

1111
00:43:32,210 --> 00:43:35,659
now now of course we're not sorting yet

1112
00:43:34,099 --> 00:43:36,259
so it doesn't draw on top of them or

1113
00:43:35,659 --> 00:43:39,079
anything like that

1114
00:43:36,260 --> 00:43:41,090
but now it works but we've got a slight

1115
00:43:39,079 --> 00:43:42,769
problem here which is that we're kind of

1116
00:43:41,090 --> 00:43:44,450
again this is the part that I was

1117
00:43:42,769 --> 00:43:47,920
talking about before we have this

1118
00:43:44,449 --> 00:43:51,079
problem where we don't really want to

1119
00:43:47,920 --> 00:43:53,180
keep accruing these collision rules

1120
00:43:51,079 --> 00:43:54,799
right because as we do this we'll just

1121
00:43:53,179 --> 00:43:56,269
add more and more collision rules as the

1122
00:43:54,800 --> 00:43:58,490
sword goes through more and more things

1123
00:43:56,269 --> 00:44:00,530
more and more different entities right

1124
00:43:58,489 --> 00:44:02,778
will end up in a situation where we just

1125
00:44:00,530 --> 00:44:04,099
fill up our entire memory well

1126
00:44:02,778 --> 00:44:05,989
maybe not because memory is huge these

1127
00:44:04,099 --> 00:44:08,778
days but just in terms of thinking about

1128
00:44:05,989 --> 00:44:11,208
it from a more efficiency standpoint we

1129
00:44:08,778 --> 00:44:12,739
don't really just want to add collision

1130
00:44:11,208 --> 00:44:14,118
rules so that we eventually have a rule

1131
00:44:12,739 --> 00:44:15,798
for everything that the sword has

1132
00:44:14,119 --> 00:44:17,329
touched ever and gone through and all

1133
00:44:15,798 --> 00:44:21,849
that sort of stuff so what I'd like to

1134
00:44:17,329 --> 00:44:24,289
do is I'd like to be able to remove I

1135
00:44:21,849 --> 00:44:26,298
threw that I was going so fast that it

1136
00:44:24,289 --> 00:44:29,119
actually end up going backwards which is

1137
00:44:26,298 --> 00:44:31,130
pretty funny that's pretty funny it's

1138
00:44:29,119 --> 00:44:32,809
gonna take that guy a while to disappear

1139
00:44:31,130 --> 00:44:35,179
because of how slow he's actually moving

1140
00:44:32,809 --> 00:44:36,528
come on go I want to throw another one

1141
00:44:35,179 --> 00:44:38,689
there we go

1142
00:44:36,528 --> 00:44:40,568
so what we want to do is have some kind

1143
00:44:38,688 --> 00:44:43,188
of a same policy where we basically say

1144
00:44:40,568 --> 00:44:45,708
things that are doing this sort of

1145
00:44:43,188 --> 00:44:48,048
behavior should have some time when

1146
00:44:45,708 --> 00:44:50,118
their collision rules get cleaned up so

1147
00:44:48,048 --> 00:44:52,938
as we add things when you know when they

1148
00:44:50,119 --> 00:44:54,769
go through we won't just accrue them

1149
00:44:52,938 --> 00:44:56,899
forever that seems like a better idea

1150
00:44:54,768 --> 00:45:00,618
right than doing it this way

1151
00:44:56,900 --> 00:45:02,298
that's just my assumption so yeah so now

1152
00:45:00,619 --> 00:45:03,919
everybody can go through everything

1153
00:45:02,298 --> 00:45:05,268
because everyone has that false and

1154
00:45:03,918 --> 00:45:07,368
we're just accruing collision rules like

1155
00:45:05,268 --> 00:45:08,658
crazy and I want something to stop that

1156
00:45:07,369 --> 00:45:11,059
that makes sense

1157
00:45:08,659 --> 00:45:14,028
however one thing we also can do let's

1158
00:45:11,059 --> 00:45:16,429
go ahead and exit there one thing that

1159
00:45:14,028 --> 00:45:18,619
we can do first is we can make this

1160
00:45:16,429 --> 00:45:20,719
handle collision call actually do stops

1161
00:45:18,619 --> 00:45:22,669
on collision in a slightly more

1162
00:45:20,719 --> 00:45:26,059
meaningful way we could do it where it

1163
00:45:22,668 --> 00:45:32,778
basically says okay you know if the a

1164
00:45:26,059 --> 00:45:37,039
type equals and the type sword then then

1165
00:45:32,778 --> 00:45:39,380
stops on collision is false false

1166
00:45:37,039 --> 00:45:41,719
otherwise stops um collision equals true

1167
00:45:39,380 --> 00:45:44,599
so basically everything but swords have

1168
00:45:41,719 --> 00:45:46,938
to stop and we'll talk about you know

1169
00:45:44,599 --> 00:45:48,619
we'll figure out what's gonna happen to

1170
00:45:46,938 --> 00:45:50,958
other stuff later but now at this point

1171
00:45:48,619 --> 00:45:54,409
in theory I should still stop right

1172
00:45:50,958 --> 00:45:56,058
which I do but my sword won't stop when

1173
00:45:54,409 --> 00:45:58,099
it goes through things which it doesn't

1174
00:45:56,059 --> 00:46:01,159
and so that's good and everyone's happy

1175
00:45:58,099 --> 00:46:03,289
about that okay so I think we're in good

1176
00:46:01,159 --> 00:46:06,019
shape now and of course our Monstar also

1177
00:46:03,289 --> 00:46:07,669
sort of works to some degree but of

1178
00:46:06,018 --> 00:46:09,798
course we get that collision rule thing

1179
00:46:07,668 --> 00:46:11,838
happening I don't know why did our that

1180
00:46:09,798 --> 00:46:14,449
was pretty interesting why did our sword

1181
00:46:11,838 --> 00:46:16,458
disappear the first time oh because it

1182
00:46:14,449 --> 00:46:16,610
does this if we we have a rule in there

1183
00:46:16,458 --> 00:46:20,359
for

1184
00:46:16,610 --> 00:46:22,280
make any non-spatial but we yeah we want

1185
00:46:20,360 --> 00:46:23,720
to actually women you hit a monster we

1186
00:46:22,280 --> 00:46:24,890
wanted to say that it does stop at that

1187
00:46:23,719 --> 00:46:27,049
point because that is how we were

1188
00:46:24,889 --> 00:46:30,619
actually doing it so that we wouldn't

1189
00:46:27,050 --> 00:46:32,930
had that rule right that makes some

1190
00:46:30,619 --> 00:46:35,179
sense yeah of course we don't actually

1191
00:46:32,929 --> 00:46:37,639
want it to do that what we want to do is

1192
00:46:35,179 --> 00:46:39,589
leave it spatial and have it just go

1193
00:46:37,639 --> 00:46:40,940
through so we want to actually do that

1194
00:46:39,590 --> 00:46:42,289
but I just thought it would be

1195
00:46:40,940 --> 00:46:44,119
interesting to see what would happen

1196
00:46:42,289 --> 00:46:45,349
there so now we should be able to file

1197
00:46:44,119 --> 00:46:48,859
the sword through the guy and you'll

1198
00:46:45,349 --> 00:46:52,699
notice that even though oh and so yeah

1199
00:46:48,860 --> 00:46:54,019
there we go this is an even more serious

1200
00:46:52,699 --> 00:46:55,819
manifestation of the problem I was

1201
00:46:54,019 --> 00:46:57,409
talking about which is like once we've

1202
00:46:55,820 --> 00:46:58,850
said that the sword can pass through the

1203
00:46:57,409 --> 00:47:00,199
guy it can pass through forever so you

1204
00:46:58,849 --> 00:47:03,259
can never hit him again with the same

1205
00:47:00,199 --> 00:47:04,279
sword right so that's another reason why

1206
00:47:03,260 --> 00:47:06,170
we need to clean them up it's not just

1207
00:47:04,280 --> 00:47:07,970
efficiency right it's an actual rule

1208
00:47:06,170 --> 00:47:09,590
that we don't want we want to say that

1209
00:47:07,969 --> 00:47:11,929
that rule only exists for when the sword

1210
00:47:09,590 --> 00:47:13,370
is essentially in flight right and when

1211
00:47:11,929 --> 00:47:16,039
the sword stops we want to reset its

1212
00:47:13,369 --> 00:47:17,960
collision rules to be no and so that's

1213
00:47:16,039 --> 00:47:20,090
the next thing to think about right as

1214
00:47:17,960 --> 00:47:22,130
part of this system how do we want to

1215
00:47:20,090 --> 00:47:23,570
handle that so if we want to have this

1216
00:47:22,130 --> 00:47:24,860
sort of flexibility where we can stab

1217
00:47:23,570 --> 00:47:26,360
these collision rules we also need the

1218
00:47:24,860 --> 00:47:28,519
ability to pull them off because

1219
00:47:26,360 --> 00:47:29,840
essentially when that when we did that

1220
00:47:28,519 --> 00:47:33,199
processing here when we were basically

1221
00:47:29,840 --> 00:47:34,940
saying okay you know the sword becomes

1222
00:47:33,199 --> 00:47:36,500
non-spatial right we've got the

1223
00:47:34,940 --> 00:47:41,000
simulation for the sword we say make

1224
00:47:36,500 --> 00:47:43,610
entity non-spatial when that happens we

1225
00:47:41,000 --> 00:47:45,409
want to clear out all of its collision

1226
00:47:43,610 --> 00:47:47,030
rules and then when you throw it we want

1227
00:47:45,409 --> 00:47:48,769
to put them into effect right so when we

1228
00:47:47,030 --> 00:47:50,150
throw it you add flesh and rules to it

1229
00:47:48,769 --> 00:47:51,949
and they give crews amount of time and

1230
00:47:50,150 --> 00:47:54,260
then when it comes back we want them to

1231
00:47:51,949 --> 00:48:00,529
go away right so we want to do something

1232
00:47:54,260 --> 00:48:03,170
like clear collision rules for right we

1233
00:48:00,530 --> 00:48:08,090
want to do something like this game

1234
00:48:03,170 --> 00:48:11,750
state entity storage index and then when

1235
00:48:08,090 --> 00:48:14,030
we do our add collision rule for the

1236
00:48:11,750 --> 00:48:17,650
sword we actually want that to be when

1237
00:48:14,030 --> 00:48:19,820
we throw it right so when we do our

1238
00:48:17,650 --> 00:48:21,920
Artie sword

1239
00:48:19,820 --> 00:48:24,019
and we go ahead and we actually throw

1240
00:48:21,920 --> 00:48:25,430
that sword we want to do it here when we

1241
00:48:24,019 --> 00:48:26,900
make the thing spatial we want to add

1242
00:48:25,429 --> 00:48:30,838
the collision rule that basically says

1243
00:48:26,900 --> 00:48:33,358
okay you know the entity

1244
00:48:30,838 --> 00:48:36,719
that's that's thrilling the sword and

1245
00:48:33,358 --> 00:48:39,298
the sword itself those two things should

1246
00:48:36,719 --> 00:48:41,670
never collide with each other right so

1247
00:48:39,298 --> 00:48:43,588
that's what we actually want to do but

1248
00:48:41,670 --> 00:48:48,298
clear collision rules for is kind of a

1249
00:48:43,588 --> 00:48:50,038
nasty problem right and yeah and we

1250
00:48:48,298 --> 00:48:52,288
should try to think about that so we've

1251
00:48:50,039 --> 00:48:54,028
got our add collision rule and we've got

1252
00:48:52,289 --> 00:48:55,949
our clear collision rules for if these

1253
00:48:54,028 --> 00:48:57,719
by the way should probably go they don't

1254
00:48:55,949 --> 00:48:58,920
really belong here they're not about sim

1255
00:48:57,719 --> 00:49:01,469
regions at all

1256
00:48:58,920 --> 00:49:06,778
so basically I want to do this sort of

1257
00:49:01,469 --> 00:49:08,519
thing storage index like so so I'm gonna

1258
00:49:06,778 --> 00:49:12,179
go ahead and pull these out at

1259
00:49:08,518 --> 00:49:17,058
collisional for like so I'm gonna go

1260
00:49:12,179 --> 00:49:20,518
ahead and pull these out to here right

1261
00:49:17,059 --> 00:49:23,160
and this is the sort of thing where

1262
00:49:20,518 --> 00:49:25,698
double indexing is kind of nice right if

1263
00:49:23,159 --> 00:49:27,929
you imagine you have a more sort of

1264
00:49:25,699 --> 00:49:30,358
built out system so you're thinking of

1265
00:49:27,929 --> 00:49:32,038
things more in terms of a database and

1266
00:49:30,358 --> 00:49:32,880
you've got systems that you use for this

1267
00:49:32,039 --> 00:49:35,160
sort of stuff already that you've

1268
00:49:32,880 --> 00:49:36,838
written this is the kind of query that's

1269
00:49:35,159 --> 00:49:38,219
much easier to do and we're having to

1270
00:49:36,838 --> 00:49:39,568
write it ourselves that's just part of

1271
00:49:38,219 --> 00:49:40,679
the writing everything from scratch you

1272
00:49:39,568 --> 00:49:41,940
have to write everything once but it's

1273
00:49:40,679 --> 00:49:44,940
something that's worth pointing out

1274
00:49:41,940 --> 00:49:47,278
right that querying on one or another

1275
00:49:44,940 --> 00:49:49,108
thing it's something that like systems

1276
00:49:47,278 --> 00:49:50,789
oftentimes will make easy like a

1277
00:49:49,108 --> 00:49:52,170
database makes that very easy but other

1278
00:49:50,789 --> 00:49:57,509
kinds of structures often make it kind

1279
00:49:52,170 --> 00:49:58,979
of hard C++ style coding in general

1280
00:49:57,509 --> 00:50:00,179
often makes it hard and I'm not talking

1281
00:49:58,978 --> 00:50:02,068
about auditory impaired anything like

1282
00:50:00,179 --> 00:50:03,358
that but just the way people tend to

1283
00:50:02,068 --> 00:50:05,369
write things and see where you kind of

1284
00:50:03,358 --> 00:50:07,889
have the index as primary it stores the

1285
00:50:05,369 --> 00:50:09,838
things they typically don't tend to have

1286
00:50:07,889 --> 00:50:10,170
being able to look up on two different

1287
00:50:09,838 --> 00:50:12,208
things

1288
00:50:10,170 --> 00:50:14,130
that's tends to be kind of a harder

1289
00:50:12,208 --> 00:50:15,659
thing to write whereas if you're used to

1290
00:50:14,130 --> 00:50:17,009
using say my sequel or something like

1291
00:50:15,659 --> 00:50:18,328
this it's an easy thing right you can

1292
00:50:17,009 --> 00:50:20,489
just say I want an index on both of

1293
00:50:18,329 --> 00:50:22,019
these things so just worth kind of like

1294
00:50:20,489 --> 00:50:23,099
noting that this is one of those double

1295
00:50:22,018 --> 00:50:24,328
index and kind of problems because what

1296
00:50:23,099 --> 00:50:28,048
we'd like to be able to do here is say

1297
00:50:24,329 --> 00:50:31,709
well I don't actually care which of

1298
00:50:28,048 --> 00:50:36,088
these two the sword was the sword was I

1299
00:50:31,708 --> 00:50:40,919
want to remove all of them right I'd

1300
00:50:36,088 --> 00:50:44,690
like to remove them all and so I there's

1301
00:50:40,920 --> 00:50:47,970
a couple ways we could approach this

1302
00:50:44,690 --> 00:50:49,858
one is we could have an opinion about

1303
00:50:47,969 --> 00:50:52,108
the sorts of people who have these rules

1304
00:50:49,858 --> 00:50:57,268
and just always do the hash on the

1305
00:50:52,108 --> 00:51:00,808
proper one another is we basically do

1306
00:50:57,268 --> 00:51:02,818
the hash in both directions I guess so

1307
00:51:00,809 --> 00:51:05,339
we would first hashed on it as if it was

1308
00:51:02,818 --> 00:51:07,829
a and then hash on it as if it was B

1309
00:51:05,338 --> 00:51:12,778
which seems like a pretty easy thing to

1310
00:51:07,829 --> 00:51:13,890
do in other words well no I guess you

1311
00:51:12,778 --> 00:51:15,539
can't really do that either so this is

1312
00:51:13,889 --> 00:51:18,538
always hashed on a and we don't know

1313
00:51:15,539 --> 00:51:21,539
what a actually is we don't know like

1314
00:51:18,539 --> 00:51:23,940
say that this was always be in the rule

1315
00:51:21,539 --> 00:51:25,819
we don't know what it's a actually was

1316
00:51:23,940 --> 00:51:28,170
so there's no way for us to do that so

1317
00:51:25,818 --> 00:51:29,759
yeah we would have to literally go

1318
00:51:28,170 --> 00:51:32,099
through the whole hash table if we

1319
00:51:29,759 --> 00:51:34,019
wanted to remove the collision rules for

1320
00:51:32,099 --> 00:51:37,019
something which maybe isn't a big deal

1321
00:51:34,018 --> 00:51:38,608
but it could be very expensive right

1322
00:51:37,018 --> 00:51:40,858
depending on how many things are in that

1323
00:51:38,608 --> 00:51:42,210
hash table I don't know if we want to do

1324
00:51:40,858 --> 00:51:44,369
that or not

1325
00:51:42,210 --> 00:51:46,949
we can do it pretty trivially here you

1326
00:51:44,369 --> 00:51:49,230
know we could do it in a very expensive

1327
00:51:46,949 --> 00:51:53,239
way the very expensive way is just this

1328
00:51:49,230 --> 00:51:56,880
way right so we would basically say okay

1329
00:51:53,239 --> 00:51:58,649
we have a hash index right a hash bucket

1330
00:51:56,880 --> 00:52:01,259
the hash bucket equals zero the hash

1331
00:51:58,650 --> 00:52:03,930
bucket is less than whatever the size of

1332
00:52:01,259 --> 00:52:06,568
the collision rule hash is and then for

1333
00:52:03,929 --> 00:52:08,038
each one of those buckets we then check

1334
00:52:06,568 --> 00:52:09,659
all of the entries in the bucket this

1335
00:52:08,039 --> 00:52:11,910
would be searching the entire hash table

1336
00:52:09,659 --> 00:52:13,588
and every time we find something that

1337
00:52:11,909 --> 00:52:16,250
actually has this storage

1338
00:52:13,588 --> 00:52:19,349
index in it we have to remove it right

1339
00:52:16,250 --> 00:52:20,670
and so the way that we would do that is

1340
00:52:19,349 --> 00:52:26,490
we would essentially do something like

1341
00:52:20,670 --> 00:52:28,588
this right we'd say if if either of the

1342
00:52:26,489 --> 00:52:31,229
two things right if the the storage

1343
00:52:28,588 --> 00:52:32,788
index a or the storage index B if either

1344
00:52:31,230 --> 00:52:34,650
of them equals a storage index we're

1345
00:52:32,789 --> 00:52:36,210
looking for then we need to remove it

1346
00:52:34,650 --> 00:52:39,900
otherwise we don't need to remove it

1347
00:52:36,210 --> 00:52:42,000
right and so the way that that would

1348
00:52:39,900 --> 00:52:45,480
work is we actually want to be able to

1349
00:52:42,000 --> 00:52:47,849
set the pointer properly to skip this

1350
00:52:45,480 --> 00:52:48,750
particular one and of course like I

1351
00:52:47,849 --> 00:52:50,250
always do

1352
00:52:48,750 --> 00:52:52,650
this will probably be a free store

1353
00:52:50,250 --> 00:52:54,599
situation so we basically have first

1354
00:52:52,650 --> 00:52:57,309
free collision rule here right so

1355
00:52:54,599 --> 00:52:58,809
anytime we get rid of one we just

1356
00:52:57,309 --> 00:53:00,610
give it back so the next time someone

1357
00:52:58,809 --> 00:53:02,710
actually uses it in a hash it'll get

1358
00:53:00,610 --> 00:53:04,450
used right so we have this collision

1359
00:53:02,710 --> 00:53:07,659
rule we'll say all right you know we'll

1360
00:53:04,449 --> 00:53:08,919
go ahead and we'll look for it the sort

1361
00:53:07,659 --> 00:53:10,539
of tricky way to do this here would

1362
00:53:08,920 --> 00:53:13,030
basically say instead of walking by

1363
00:53:10,539 --> 00:53:15,489
pointer I'll walk by pointer to pointer

1364
00:53:13,030 --> 00:53:18,160
so I start by saying all right I'm gonna

1365
00:53:15,489 --> 00:53:18,849
look to see what that first one is in

1366
00:53:18,159 --> 00:53:21,730
the hash bucket

1367
00:53:18,849 --> 00:53:23,529
I will then say all right I'll walk as

1368
00:53:21,730 --> 00:53:25,210
long as it's the thing that it's

1369
00:53:23,530 --> 00:53:28,150
pointing to is not no and so then I look

1370
00:53:25,210 --> 00:53:31,150
to see if the one that I'm looking at

1371
00:53:28,150 --> 00:53:34,269
right if the this one happens to be the

1372
00:53:31,150 --> 00:53:37,119
one that I'm that I want right and I'll

1373
00:53:34,269 --> 00:53:39,550
say that my pair wise decision rule next

1374
00:53:37,119 --> 00:53:41,259
rule right whatever that is left I guess

1375
00:53:39,550 --> 00:53:43,390
I don't even need to do that right so

1376
00:53:41,260 --> 00:53:48,310
then what I do is I say okay I'm gonna

1377
00:53:43,389 --> 00:53:51,639
walk these guys mm-hmm I'm gonna see if

1378
00:53:48,309 --> 00:53:54,250
I actually got got one that matches what

1379
00:53:51,639 --> 00:53:55,659
I need to do is patch the pointer so

1380
00:53:54,250 --> 00:53:57,489
that the pointer who was pointing to

1381
00:53:55,659 --> 00:53:59,019
this now points is the thing that's

1382
00:53:57,489 --> 00:54:01,439
after it which removes it from the list

1383
00:53:59,019 --> 00:54:04,449
right so I need to basically say that

1384
00:54:01,440 --> 00:54:06,760
the pointer that was pointing to the

1385
00:54:04,449 --> 00:54:09,789
rule that I'm looking at right now I

1386
00:54:06,760 --> 00:54:13,600
want to make that guy actually point to

1387
00:54:09,789 --> 00:54:14,829
whoever was next in the hash right so

1388
00:54:13,599 --> 00:54:16,929
basically the way that I'm removing

1389
00:54:14,829 --> 00:54:19,090
these guys is I'm saying well okay you

1390
00:54:16,929 --> 00:54:21,009
know I've got pointers

1391
00:54:19,090 --> 00:54:26,019
I've got like a linked list like so

1392
00:54:21,010 --> 00:54:27,790
right and what I want to do is each one

1393
00:54:26,019 --> 00:54:29,949
of these guys actually has the pointer

1394
00:54:27,789 --> 00:54:32,019
in there right this is the the hash

1395
00:54:29,949 --> 00:54:33,909
table let's say this is a link and so on

1396
00:54:32,019 --> 00:54:35,619
so what I'm doing is I'm looking at this

1397
00:54:33,909 --> 00:54:39,129
pointer I'm saying if the thing that I

1398
00:54:35,619 --> 00:54:41,529
point to matches that I want to set this

1399
00:54:39,130 --> 00:54:43,329
pointer to point to whoever the next

1400
00:54:41,530 --> 00:54:44,680
person in the link was to skip this guy

1401
00:54:43,329 --> 00:54:49,719
so that I can remove him from the list

1402
00:54:44,679 --> 00:54:53,759
right so basically saying like okay you

1403
00:54:49,719 --> 00:54:57,549
know as a pointer right this pointer

1404
00:54:53,760 --> 00:55:01,120
will now point to whatever was next in

1405
00:54:57,550 --> 00:55:02,740
the hash table so there we go so that's

1406
00:55:01,119 --> 00:55:05,139
how that would remove it from the list

1407
00:55:02,739 --> 00:55:06,789
and then of course I also want to put it

1408
00:55:05,139 --> 00:55:09,190
on the free Storace or the first free

1409
00:55:06,789 --> 00:55:10,529
collision rule so basically like what

1410
00:55:09,190 --> 00:55:13,050
I'll do is I'll just store it

1411
00:55:10,530 --> 00:55:17,460
I'll say pairwise collision rule removed

1412
00:55:13,050 --> 00:55:19,740
rule equals whatever was the thing we

1413
00:55:17,460 --> 00:55:21,900
removed now it's basically been removed

1414
00:55:19,739 --> 00:55:24,359
and then I can say all right

1415
00:55:21,900 --> 00:55:26,369
my removed rule next in hash equals

1416
00:55:24,360 --> 00:55:28,140
whatever that first free was whatever

1417
00:55:26,369 --> 00:55:29,159
was on the free list before it's exactly

1418
00:55:28,139 --> 00:55:31,019
the same way we did it free list

1419
00:55:29,159 --> 00:55:35,429
previously and then the removed rule

1420
00:55:31,019 --> 00:55:37,050
mm-hmm sorry then the the head pointer

1421
00:55:35,429 --> 00:55:38,819
just points to removed rule so that puts

1422
00:55:37,050 --> 00:55:40,830
things on the free list and then we can

1423
00:55:38,820 --> 00:55:43,320
also use the things on the free list so

1424
00:55:40,829 --> 00:55:47,569
now instead of doing this push struct

1425
00:55:43,320 --> 00:55:49,170
what we would do is basically do

1426
00:55:47,570 --> 00:55:53,039
actually I guess I could do it right

1427
00:55:49,170 --> 00:55:57,920
here you can just say if not found then

1428
00:55:53,039 --> 00:56:00,480
found goes push direct so and we can say

1429
00:55:57,920 --> 00:56:05,909
this is going to be first free collision

1430
00:56:00,480 --> 00:56:09,059
rule like so I guess I can do this put

1431
00:56:05,909 --> 00:56:10,589
this way so we grab the first thing off

1432
00:56:09,059 --> 00:56:12,000
the free list if there actually was

1433
00:56:10,590 --> 00:56:13,740
something on the free list and that's

1434
00:56:12,000 --> 00:56:16,380
fine and we'll basically just set the

1435
00:56:13,739 --> 00:56:19,469
free list to point to the next thing

1436
00:56:16,380 --> 00:56:21,570
that was there otherwise we'll go ahead

1437
00:56:19,469 --> 00:56:23,579
and make a new one and then when we free

1438
00:56:21,570 --> 00:56:26,519
them we free them right and so we just

1439
00:56:23,579 --> 00:56:28,590
use again a very simple scheme and off

1440
00:56:26,519 --> 00:56:30,480
you go nothing particularly interesting

1441
00:56:28,590 --> 00:56:32,579
going on there

1442
00:56:30,480 --> 00:56:37,320
what is this complaining about identify

1443
00:56:32,579 --> 00:56:39,599
are not found ah yes because we don't

1444
00:56:37,320 --> 00:56:43,500
actually we need to actually make these

1445
00:56:39,599 --> 00:56:45,710
things be available to other people so

1446
00:56:43,500 --> 00:56:48,230
I'll go ahead and put them in here oh

1447
00:56:45,710 --> 00:56:51,750
boy

1448
00:56:48,230 --> 00:56:54,869
look so and stay with clear collision

1449
00:56:51,750 --> 00:56:57,750
rules for you go other people might want

1450
00:56:54,869 --> 00:57:00,029
to call these there we go oops

1451
00:56:57,750 --> 00:57:05,849
interval we haven't written any interval

1452
00:57:00,030 --> 00:57:07,590
code yet internal so that'll add things

1453
00:57:05,849 --> 00:57:08,880
back to the free list in that case we

1454
00:57:07,590 --> 00:57:11,309
haven't quite finished this loop yet

1455
00:57:08,880 --> 00:57:15,539
though so clear collision rules for we

1456
00:57:11,309 --> 00:57:17,820
go through them we remove ones that

1457
00:57:15,539 --> 00:57:19,349
matched and in this case we have done

1458
00:57:17,820 --> 00:57:21,120
everything I think that we needed to do

1459
00:57:19,349 --> 00:57:22,089
probably the left step through it I just

1460
00:57:21,119 --> 00:57:23,440
make sure again

1461
00:57:22,090 --> 00:57:26,110
this on stream while I'm talking is a

1462
00:57:23,440 --> 00:57:29,590
little bit daunting and on the brain but

1463
00:57:26,110 --> 00:57:31,329
in the case where we where we didn't

1464
00:57:29,590 --> 00:57:34,390
match we want to make it equal to the

1465
00:57:31,329 --> 00:57:36,549
next in hash right we want to take the

1466
00:57:34,389 --> 00:57:39,009
address of that so that we're we can

1467
00:57:36,550 --> 00:57:42,250
advance the point forward right so that

1468
00:57:39,010 --> 00:57:44,440
would would do our hash bucket this I'm

1469
00:57:42,250 --> 00:57:46,389
pretty sure that's probably most of what

1470
00:57:44,440 --> 00:57:48,030
we need to do so let's go ahead and step

1471
00:57:46,389 --> 00:57:50,920
through that and see how that worked

1472
00:57:48,030 --> 00:57:52,810
just so we can kind of see but again

1473
00:57:50,920 --> 00:57:55,530
this is not particularly good I guess I

1474
00:57:52,809 --> 00:57:59,759
should also put in that to do so to do

1475
00:57:55,530 --> 00:58:03,910
need to make a better data structure

1476
00:57:59,760 --> 00:58:07,810
that allows removal of collision rules

1477
00:58:03,909 --> 00:58:10,359
without searching the entire table right

1478
00:58:07,809 --> 00:58:12,219
because that's not really the way we

1479
00:58:10,360 --> 00:58:17,610
would like things to go if we could help

1480
00:58:12,219 --> 00:58:20,109
it alright so there's our our stuff

1481
00:58:17,610 --> 00:58:22,870
let's go ahead and get things started

1482
00:58:20,110 --> 00:58:24,220
here why am i okay so we haven't

1483
00:58:22,869 --> 00:58:26,289
actually added any collision rules yet

1484
00:58:24,219 --> 00:58:29,199
so let's go ahead and shoot that sort

1485
00:58:26,289 --> 00:58:31,150
out so here we go on our ad right we

1486
00:58:29,199 --> 00:58:33,399
want to do our swap because we always

1487
00:58:31,150 --> 00:58:37,210
want our storage entity our storage

1488
00:58:33,400 --> 00:58:39,130
indices to be in the right order so we

1489
00:58:37,210 --> 00:58:41,139
always want a to be lower than the-- so

1490
00:58:39,130 --> 00:58:43,059
that's what it did which is good we're

1491
00:58:41,139 --> 00:58:45,460
gonna grab out that collision rule hash

1492
00:58:43,059 --> 00:58:46,809
bucket and just take a look at it there

1493
00:58:45,460 --> 00:58:49,449
was nothing else because this is the

1494
00:58:46,809 --> 00:58:50,139
first rule we've ever added if it hasn't

1495
00:58:49,449 --> 00:58:52,000
been found

1496
00:58:50,139 --> 00:58:53,500
we're gonna try and grab the first one

1497
00:58:52,000 --> 00:58:55,300
the first free one

1498
00:58:53,500 --> 00:58:57,610
we couldn't obviously get one because

1499
00:58:55,300 --> 00:59:00,130
there's nothing in there yet and so what

1500
00:58:57,610 --> 00:59:02,349
we do instead is we grab a new rule off

1501
00:59:00,130 --> 00:59:05,890
of our arena basic is use a little bit

1502
00:59:02,349 --> 00:59:07,960
of our of our storage space and then we

1503
00:59:05,889 --> 00:59:10,779
go ahead and set the pointer to whatever

1504
00:59:07,960 --> 00:59:13,840
was in the free of this before and we

1505
00:59:10,780 --> 00:59:16,890
set the pointer to be the hash

1506
00:59:13,840 --> 00:59:21,490
Buckethead pointer to be us right

1507
00:59:16,889 --> 00:59:23,259
assuming that we actually found it which

1508
00:59:21,489 --> 00:59:24,309
of course would always happen in a case

1509
00:59:23,260 --> 00:59:25,330
where we didn't run out of memory or

1510
00:59:24,309 --> 00:59:27,699
something

1511
00:59:25,329 --> 00:59:30,639
we then initialize it so now we've got a

1512
00:59:27,699 --> 00:59:33,369
nice rule set up and we're done right so

1513
00:59:30,639 --> 00:59:34,989
that's all we had to do there and then

1514
00:59:33,369 --> 00:59:35,630
presumably the same thing will happen

1515
00:59:34,989 --> 00:59:37,159
again

1516
00:59:35,630 --> 00:59:38,990
hopefully we'll get a similar situation

1517
00:59:37,159 --> 00:59:41,539
where the storage index now this this is

1518
00:59:38,989 --> 00:59:44,329
gonna store off a different guy so this

1519
00:59:41,539 --> 00:59:47,000
will still not find anybody again there

1520
00:59:44,329 --> 00:59:49,730
is no free nobody on the free store yet

1521
00:59:47,000 --> 00:59:51,980
cuz we haven't eliminated anybody so off

1522
00:59:49,730 --> 00:59:54,440
we go adding another collision rule this

1523
00:59:51,980 --> 00:59:57,019
time this time it is okay so I think

1524
00:59:54,440 --> 00:59:58,280
that's the sword right and probably some

1525
00:59:57,019 --> 01:00:00,409
wall that's hitting or something like

1526
00:59:58,280 --> 01:00:02,330
that so we want it that's good now we

1527
01:00:00,409 --> 01:00:04,789
can actually see it look for a rule I

1528
01:00:02,329 --> 01:00:06,980
think oh no I guess not so I guess we

1529
01:00:04,789 --> 01:00:08,289
always I guess it was 92 zeros or a 4

1530
01:00:06,980 --> 01:00:11,960
that was added before I was the hero

1531
01:00:08,289 --> 01:00:13,969
yeah too bad alright so there we go

1532
01:00:11,960 --> 01:00:17,289
at least I think that's true which I

1533
01:00:13,969 --> 01:00:19,159
guess we should probably double check I

1534
01:00:17,289 --> 01:00:20,239
wasn't quite paying attention which all

1535
01:00:19,159 --> 01:00:21,799
the rules we should have checked to make

1536
01:00:20,239 --> 01:00:23,599
sure that that was going in the right

1537
01:00:21,800 --> 01:00:25,280
hash bucket there I would have liked to

1538
01:00:23,599 --> 01:00:26,480
have gotten that ok so then when we do

1539
01:00:25,280 --> 01:00:28,370
our clear collision rules for

1540
01:00:26,480 --> 01:00:30,530
essentially almost all of these are not

1541
01:00:28,369 --> 01:00:32,029
going to hit right so what we want to do

1542
01:00:30,530 --> 01:00:34,070
is we want to kind of find when we

1543
01:00:32,030 --> 01:00:35,570
actually get inside this loop at some

1544
01:00:34,070 --> 01:00:38,000
point right so here's where we actually

1545
01:00:35,570 --> 01:00:40,789
had a hash bucket that actually had

1546
01:00:38,000 --> 01:00:43,250
something in it which is what we want to

1547
01:00:40,789 --> 01:00:44,539
see so what's our hash bucket which one

1548
01:00:43,250 --> 01:00:48,170
are we looking at we're looking at hash

1549
01:00:44,539 --> 01:00:53,119
bucket 41 and so we have collision rule

1550
01:00:48,170 --> 01:00:55,340
hash and we've got hash bucket so here's

1551
01:00:53,119 --> 01:00:57,079
that first hash bucket and as you can

1552
01:00:55,340 --> 01:00:58,280
see there isn't anything next so what we

1553
01:00:57,079 --> 01:01:01,250
should see is this guy should get

1554
01:00:58,280 --> 01:01:03,860
returned to the free list and it should

1555
01:01:01,250 --> 01:01:07,929
then write a null pointer in there so

1556
01:01:03,860 --> 01:01:10,010
we've got first free collision rule so

1557
01:01:07,929 --> 01:01:11,000
there's nothing in there right now what

1558
01:01:10,010 --> 01:01:12,470
we want to see is we want to see this

1559
01:01:11,000 --> 01:01:14,030
guy move over to here and the rest of it

1560
01:01:12,469 --> 01:01:16,879
get cleaned up so it should match it

1561
01:01:14,030 --> 01:01:19,130
does match we go ahead and say pairwise

1562
01:01:16,880 --> 01:01:21,079
collision rule removed rule equals rule

1563
01:01:19,130 --> 01:01:22,430
so basically that rule is just the rule

1564
01:01:21,079 --> 01:01:25,369
that we're looking at right which is

1565
01:01:22,429 --> 01:01:26,509
fine we then say the pointer whatever

1566
01:01:25,369 --> 01:01:28,849
the pointer was that we're putting which

1567
01:01:26,510 --> 01:01:30,440
is this one right here right we want

1568
01:01:28,849 --> 01:01:31,849
that to now point to the next one which

1569
01:01:30,440 --> 01:01:34,000
was this so this should now become a

1570
01:01:31,849 --> 01:01:36,199
null right and it does so that's nice

1571
01:01:34,000 --> 01:01:38,420
and now we want to make sure that our

1572
01:01:36,199 --> 01:01:40,339
removed rural stores whoever was in here

1573
01:01:38,420 --> 01:01:41,659
which would also be no so that's not

1574
01:01:40,340 --> 01:01:43,490
gonna do anything exactly but then we

1575
01:01:41,659 --> 01:01:45,289
want to push this guy in the free list

1576
01:01:43,489 --> 01:01:46,369
which we did right and so now he's on

1577
01:01:45,289 --> 01:01:48,009
the free list so it just moved him out

1578
01:01:46,369 --> 01:01:50,409
of the hash table into the free list

1579
01:01:48,010 --> 01:01:51,850
and that's the end of that right so now

1580
01:01:50,409 --> 01:01:52,899
let's make sure that that works when

1581
01:01:51,849 --> 01:01:54,130
there's something already on the free

1582
01:01:52,900 --> 01:01:55,809
list which is what's gonna happen here

1583
01:01:54,130 --> 01:01:57,700
right we're gonna go ahead and remove

1584
01:01:55,809 --> 01:02:01,110
that one guy again and now we want to

1585
01:01:57,699 --> 01:02:03,609
see our first Creek collision rule right

1586
01:02:01,110 --> 01:02:05,200
what we should now see is when this guy

1587
01:02:03,610 --> 01:02:06,880
gets pushed on here it should be chained

1588
01:02:05,199 --> 01:02:08,529
right so there should be the other guy

1589
01:02:06,880 --> 01:02:11,230
should be on here and there he is right

1590
01:02:08,530 --> 01:02:13,180
and so those guys chained together and

1591
01:02:11,230 --> 01:02:14,650
off we go so that looks good but what

1592
01:02:13,179 --> 01:02:17,319
we'd like to do is also double check

1593
01:02:14,650 --> 01:02:18,430
that our free list removal is working so

1594
01:02:17,320 --> 01:02:20,800
when when things want to come off that

1595
01:02:18,429 --> 01:02:22,719
free list if that works as well so now

1596
01:02:20,800 --> 01:02:23,860
we should do is we can see the opposite

1597
01:02:22,719 --> 01:02:26,199
happened we should pull somebody off

1598
01:02:23,860 --> 01:02:28,539
this list so found is going to be this

1599
01:02:26,199 --> 01:02:30,789
guy right here so assuming that we found

1600
01:02:28,539 --> 01:02:32,409
him what we want to do is advance that

1601
01:02:30,789 --> 01:02:34,029
pointer that first free collision rule

1602
01:02:32,409 --> 01:02:36,549
equals the next in hash so this could

1603
01:02:34,030 --> 01:02:38,410
move up right and it did and so that's

1604
01:02:36,550 --> 01:02:41,260
what we wanted so that's good there

1605
01:02:38,409 --> 01:02:43,239
looks like anyway and so off we go and

1606
01:02:41,260 --> 01:02:47,070
so let's see how if there's any bugs in

1607
01:02:43,239 --> 01:02:49,359
that I don't know there might be ooh

1608
01:02:47,070 --> 01:02:52,930
that was weird what just happened there

1609
01:02:49,360 --> 01:02:56,050
I didn't like that at all there was a oh

1610
01:02:52,929 --> 01:02:59,460
that was probably the stuck key but okay

1611
01:02:56,050 --> 01:03:04,840
but so we have a bug here what's our bug

1612
01:02:59,460 --> 01:03:10,690
push rect draw hit points hit point max

1613
01:03:04,840 --> 01:03:13,660
oh yeah okay well I guess we when we do

1614
01:03:10,690 --> 01:03:15,639
our if we shoot the the guy enough times

1615
01:03:13,659 --> 01:03:18,069
to actually make his hit points go to

1616
01:03:15,639 --> 01:03:19,569
two negative we never actually really

1617
01:03:18,070 --> 01:03:21,610
wrote any of this code but we just sort

1618
01:03:19,570 --> 01:03:23,740
of did a hit point max you're not ever

1619
01:03:21,610 --> 01:03:26,470
supposed to actually do this but I

1620
01:03:23,739 --> 01:03:28,169
should probably just double check since

1621
01:03:26,469 --> 01:03:31,659
the code exists now let's let's make it

1622
01:03:28,170 --> 01:03:35,260
not do something ridiculous that's going

1623
01:03:31,659 --> 01:03:37,299
to cause assertions so there we go so I

1624
01:03:35,260 --> 01:03:39,010
think now we should be in a case where

1625
01:03:37,300 --> 01:03:41,650
we can hit the monster multiple times

1626
01:03:39,010 --> 01:03:43,180
and we can now so that's good but it's

1627
01:03:41,650 --> 01:03:45,039
not a great data structure we didn't do

1628
01:03:43,179 --> 01:03:47,230
a fabulous job there that's something

1629
01:03:45,039 --> 01:03:48,489
that we should go ahead and and think

1630
01:03:47,230 --> 01:03:50,230
about improving when we do our final

1631
01:03:48,489 --> 01:03:51,699
engine components I feel like that would

1632
01:03:50,230 --> 01:03:53,650
be a good idea

1633
01:03:51,699 --> 01:03:55,960
so hey guess what we're pretty much

1634
01:03:53,650 --> 01:03:59,740
right on time I said I would go about 20

1635
01:03:55,960 --> 01:04:01,720
22 minutes later then we then we said

1636
01:03:59,739 --> 01:04:02,949
we're gonna do because I took a bunch of

1637
01:04:01,719 --> 01:04:04,779
after getting telling a story that had

1638
01:04:02,949 --> 01:04:08,439
nothing to do with programming and so

1639
01:04:04,780 --> 01:04:10,660
now would probably be a good time for us

1640
01:04:08,440 --> 01:04:13,809
to start the Q&amp;A and we'll still do

1641
01:04:10,659 --> 01:04:16,329
about 15 minutes QA I feel like to get

1642
01:04:13,809 --> 01:04:17,409
some Q&amp;A in here just because we told a

1643
01:04:16,329 --> 01:04:18,699
story at the beginning of the show

1644
01:04:17,409 --> 01:04:21,879
doesn't mean that there shouldn't be any

1645
01:04:18,699 --> 01:04:28,299
Q&amp;A so if you could I will go ahead and

1646
01:04:21,880 --> 01:04:30,430
start the Q&amp;A like so and if you could

1647
01:04:28,300 --> 01:04:31,539
please prefix your questions with Q : so

1648
01:04:30,429 --> 01:04:34,389
I can see them that'd be great and if

1649
01:04:31,539 --> 01:04:36,429
you could leave stuff that's off topic

1650
01:04:34,389 --> 01:04:37,659
ask those during the pre stream we

1651
01:04:36,429 --> 01:04:39,669
always talk about off stomach steps just

1652
01:04:37,659 --> 01:04:40,809
come like 15 minutes before a scheduled

1653
01:04:39,670 --> 01:04:43,119
start time and we can talk about

1654
01:04:40,809 --> 01:04:44,710
whatever but for during this Q&amp;A please

1655
01:04:43,119 --> 01:04:45,789
try to keep the questions to stuff that

1656
01:04:44,710 --> 01:04:47,079
are about the programming we did today

1657
01:04:45,789 --> 01:04:49,989
or the program that we've done on a

1658
01:04:47,079 --> 01:04:51,549
previous day and future looking stuff or

1659
01:04:49,989 --> 01:04:57,299
just questions about general things try

1660
01:04:51,550 --> 01:04:57,300
to move those to the pre stream so yeah

1661
01:05:02,719 --> 01:05:07,319
let's see what stops us from programming

1662
01:05:05,400 --> 01:05:08,849
a game that directly boots into BIOS

1663
01:05:07,320 --> 01:05:11,640
hooks up to hardware as low as possible

1664
01:05:08,849 --> 01:05:13,619
basically so basically the thing that

1665
01:05:11,639 --> 01:05:16,879
that prevents that is the fact that we

1666
01:05:13,619 --> 01:05:19,619
all have different computers right so

1667
01:05:16,880 --> 01:05:21,420
this is why I keep saying that one of

1668
01:05:19,619 --> 01:05:24,119
our big things in the future is to port

1669
01:05:21,420 --> 01:05:25,559
to unknown platform where we can

1670
01:05:24,119 --> 01:05:27,359
actually do exactly what you just said

1671
01:05:25,559 --> 01:05:28,559
that's why I said probably it'll be the

1672
01:05:27,360 --> 01:05:31,320
Raspberry Pi or something but I don't

1673
01:05:28,559 --> 01:05:33,210
know I'm actually in the process of

1674
01:05:31,320 --> 01:05:35,309
trying to get stuff like that figured

1675
01:05:33,210 --> 01:05:36,750
out talking to people and sort of figure

1676
01:05:35,309 --> 01:05:39,269
out what platforms we can use for that

1677
01:05:36,750 --> 01:05:41,250
and because that is what we'd like to do

1678
01:05:39,269 --> 01:05:43,019
eventually we'd like to go ahead and

1679
01:05:41,250 --> 01:05:44,610
pick a platform so that all of us can go

1680
01:05:43,019 --> 01:05:46,259
ahead anyone who wants to palette can go

1681
01:05:44,610 --> 01:05:47,760
by that platform help me be like a

1682
01:05:46,260 --> 01:05:49,770
relatively low-cost homebrew kind of

1683
01:05:47,760 --> 01:05:51,440
platform everyone can buy that platform

1684
01:05:49,769 --> 01:05:54,150
and then we will actually do that that

1685
01:05:51,440 --> 01:05:55,590
exactly that way the reason that we're

1686
01:05:54,150 --> 01:05:57,720
not doing that currently is because it's

1687
01:05:55,590 --> 01:05:58,950
almost impossible now everyone's

1688
01:05:57,719 --> 01:06:01,109
machines are totally different do you

1689
01:05:58,949 --> 01:06:03,149
have you have UEFI BIOS or not what kind

1690
01:06:01,110 --> 01:06:05,789
of graphics card is in there how does it

1691
01:06:03,150 --> 01:06:08,940
get initialized like you know all of

1692
01:06:05,789 --> 01:06:10,739
these sorts of things are just dos was

1693
01:06:08,940 --> 01:06:13,530
DOS we could have done it if was in the

1694
01:06:10,739 --> 01:06:16,259
dass days now in in the modern days it

1695
01:06:13,530 --> 01:06:17,640
would just be so much overhead of trying

1696
01:06:16,260 --> 01:06:19,140
to get everyone on the same page and

1697
01:06:17,639 --> 01:06:20,609
writing all things just to get like USB

1698
01:06:19,139 --> 01:06:23,460
keyboard input right would take us

1699
01:06:20,610 --> 01:06:25,110
forever so I didn't want to go that

1700
01:06:23,460 --> 01:06:27,150
route off the bat but that is what we

1701
01:06:25,110 --> 01:06:29,789
want to do eventually and so after we

1702
01:06:27,150 --> 01:06:31,110
are finished with the game porting it to

1703
01:06:29,789 --> 01:06:33,779
a platform where we can boot directly

1704
01:06:31,110 --> 01:06:36,510
into the BIOS is wrecked directly from

1705
01:06:33,780 --> 01:06:38,519
by us into our game is absolutely

1706
01:06:36,510 --> 01:06:39,930
something that we will do and so I

1707
01:06:38,519 --> 01:06:41,190
haven't decided exactly what platform

1708
01:06:39,929 --> 01:06:42,000
that's gonna be we'll probably take a

1709
01:06:41,190 --> 01:06:43,440
little bit of a wait-and-see approach

1710
01:06:42,000 --> 01:06:45,449
because you have a long time before the

1711
01:06:43,440 --> 01:06:47,099
game will be done but by the time the

1712
01:06:45,449 --> 01:06:49,710
game is sort of wrapping up I will have

1713
01:06:47,099 --> 01:06:52,860
a very specific answer for if you want

1714
01:06:49,710 --> 01:06:54,240
to do handmade fully handmade hero where

1715
01:06:52,860 --> 01:06:56,430
we'll go ahead and drop down that extra

1716
01:06:54,239 --> 01:06:57,779
level I will have some kind of

1717
01:06:56,429 --> 01:06:58,949
announcement before then about like

1718
01:06:57,780 --> 01:07:00,570
here's the platform that we're gonna be

1719
01:06:58,949 --> 01:07:04,099
doing if you want to do it by this

1720
01:07:00,570 --> 01:07:04,100
platform and get ready right

1721
01:07:10,610 --> 01:07:20,789
let's see do I ever use function

1722
01:07:13,920 --> 01:07:23,220
pointers so occasionally there's times

1723
01:07:20,789 --> 01:07:28,019
when function pointers are useful in

1724
01:07:23,219 --> 01:07:29,279
this particular case you know the

1725
01:07:28,019 --> 01:07:31,170
problem with function pointers is they

1726
01:07:29,280 --> 01:07:33,600
can't persist they're not stable right

1727
01:07:31,170 --> 01:07:36,389
function pointers change every time you

1728
01:07:33,599 --> 01:07:38,159
recompile your program so I tend to

1729
01:07:36,389 --> 01:07:40,319
prefer switch statements because the

1730
01:07:38,159 --> 01:07:42,480
thing that you're switching on persists

1731
01:07:40,320 --> 01:07:44,610
like you could write it to disk and it

1732
01:07:42,480 --> 01:07:46,440
works you can stream it over a network

1733
01:07:44,610 --> 01:07:48,360
and it works even if the to binary is

1734
01:07:46,440 --> 01:07:49,800
were compiled differently whereas if you

1735
01:07:48,360 --> 01:07:51,420
use a function pointer it's always

1736
01:07:49,800 --> 01:07:52,920
unstable so the only time you can really

1737
01:07:51,420 --> 01:07:55,710
use function pointers is by building a

1738
01:07:52,920 --> 01:08:00,050
table first and then using an index into

1739
01:07:55,710 --> 01:08:00,050
the table you know what I mean so

1740
01:08:01,639 --> 01:08:09,000
because most things you want to do in

1741
01:08:04,530 --> 01:08:12,210
games have to be saved you know saved

1742
01:08:09,000 --> 01:08:15,989
games are very important Network

1743
01:08:12,210 --> 01:08:18,088
communication is important stability

1744
01:08:15,989 --> 01:08:19,229
across builds is important function

1745
01:08:18,088 --> 01:08:21,028
pointers tend to get used less

1746
01:08:19,229 --> 01:08:22,259
frequently because of that because if

1747
01:08:21,029 --> 01:08:24,029
you use them you then have to introduce

1748
01:08:22,260 --> 01:08:25,859
a layer that's does it stabilizes them

1749
01:08:24,029 --> 01:08:27,990
often times and so usually it's just

1750
01:08:25,859 --> 01:08:30,240
more efficient to not to just use that

1751
01:08:27,989 --> 01:08:32,250
layer directly whatever the enum is that

1752
01:08:30,239 --> 01:08:33,838
you were using that would have allowed

1753
01:08:32,250 --> 01:08:36,810
you to serialize those function pointers

1754
01:08:33,838 --> 01:08:38,670
properly you can just not do that just

1755
01:08:36,810 --> 01:08:41,370
switch off the enum and it's way more

1756
01:08:38,670 --> 01:08:42,690
efficient right and so it's not so much

1757
01:08:41,369 --> 01:08:43,920
that I don't like function pointers I

1758
01:08:42,689 --> 01:08:45,358
like them just fine it's that there's

1759
01:08:43,920 --> 01:08:46,470
these downsides of function pointers for

1760
01:08:45,359 --> 01:08:48,298
the types of code that we're writing

1761
01:08:46,470 --> 01:08:50,609
that make it so that I rarely that

1762
01:08:48,298 --> 01:08:51,720
they're rarely a win but that doesn't

1763
01:08:50,609 --> 01:08:53,250
mean if they wouldn't be a win in other

1764
01:08:51,720 --> 01:08:55,730
scenarios that didn't have those kind of

1765
01:08:53,250 --> 01:08:55,729
constraints

1766
01:09:07,880 --> 01:09:11,730
should the throne Indy have the players

1767
01:09:09,989 --> 01:09:13,619
Direction speed added to its throne

1768
01:09:11,729 --> 01:09:19,039
speed and distance so you cannot catch

1769
01:09:13,619 --> 01:09:21,510
your own throws well right now we do ad

1770
01:09:19,039 --> 01:09:26,670
that is what's going on right now if I

1771
01:09:21,510 --> 01:09:31,140
understand you correctly we have right

1772
01:09:26,670 --> 01:09:34,829
like if you take a look in here when we

1773
01:09:31,140 --> 01:09:39,088
have D sword so the sword has whatever

1774
01:09:34,829 --> 01:09:40,739
your speed is plus whatever the speed of

1775
01:09:39,088 --> 01:09:44,189
the sword should be that's how it works

1776
01:09:40,739 --> 01:09:45,479
currently but that's a game design thing

1777
01:09:44,189 --> 01:09:46,469
we haven't we don't even know that

1778
01:09:45,479 --> 01:09:48,750
there's gonna be swords in this game

1779
01:09:46,470 --> 01:09:49,829
right so that's not really something

1780
01:09:48,750 --> 01:09:51,720
we're thinking about right now that was

1781
01:09:49,829 --> 01:09:53,729
just how we happen to do it cuz someone

1782
01:09:51,720 --> 01:09:55,890
was asking about it and so we showed how

1783
01:09:53,729 --> 01:09:57,089
to do it but yeah that's not really

1784
01:09:55,890 --> 01:09:59,010
something that we're thinking about I

1785
01:09:57,090 --> 01:10:02,039
mean it's not even a sword right now

1786
01:09:59,010 --> 01:10:03,090
it's a rock technically we're calling it

1787
01:10:02,039 --> 01:10:04,319
a sword because that was what we were

1788
01:10:03,090 --> 01:10:05,159
thinking of conceptually but yes so we

1789
01:10:04,319 --> 01:10:06,269
don't actually know if that's gonna

1790
01:10:05,159 --> 01:10:07,859
something that's in the game right we

1791
01:10:06,270 --> 01:10:10,320
haven't decided those sorts of things on

1792
01:10:07,859 --> 01:10:12,089
the stream yet so I don't really want to

1793
01:10:10,319 --> 01:10:14,460
talk too much about how to make that

1794
01:10:12,090 --> 01:10:16,199
work well because we don't even know in

1795
01:10:14,460 --> 01:10:18,119
order to know what should happen with

1796
01:10:16,199 --> 01:10:19,529
something like throwing a projectile you

1797
01:10:18,119 --> 01:10:20,880
need to have an understanding of the

1798
01:10:19,529 --> 01:10:24,739
game design and we haven't progressed to

1799
01:10:20,880 --> 01:10:24,739
that point yet right

1800
01:10:35,060 --> 01:10:39,750
could you explain again why you should

1801
01:10:37,739 --> 01:10:45,389
order the entities before processing the

1802
01:10:39,750 --> 01:10:49,020
properties yeah so well we haven't quite

1803
01:10:45,390 --> 01:10:51,840
gotten to where that's useful yet but

1804
01:10:49,020 --> 01:10:54,750
basically we may not have to actually do

1805
01:10:51,840 --> 01:10:56,550
that animal collision we'll find out but

1806
01:10:54,750 --> 01:10:58,770
basically the reason we want to do that

1807
01:10:56,550 --> 01:11:01,380
is if we end up doing a dispatch table

1808
01:10:58,770 --> 01:11:04,740
for them then we want to be able to

1809
01:11:01,380 --> 01:11:08,760
dispatch based on a stable ordering of

1810
01:11:04,739 --> 01:11:10,409
them right so let's say that we had this

1811
01:11:08,760 --> 01:11:12,480
was that upper triangular thing right

1812
01:11:10,409 --> 01:11:18,170
let's say that we wanted to make a

1813
01:11:12,479 --> 01:11:22,739
routine right called like sword hits

1814
01:11:18,170 --> 01:11:24,930
Monstar right and that does a thing

1815
01:11:22,739 --> 01:11:30,859
where you basically have a pointer to a

1816
01:11:24,930 --> 01:11:33,390
sword right and a pointer to the Monstar

1817
01:11:30,859 --> 01:11:40,199
we don't want to also have to write

1818
01:11:33,390 --> 01:11:41,820
Monstar hits sword right so really all

1819
01:11:40,199 --> 01:11:43,050
we're gonna do eventually and we haven't

1820
01:11:41,819 --> 01:11:44,969
actually done it so you can ignore it's

1821
01:11:43,050 --> 01:11:46,050
not even you can even just wait it's not

1822
01:11:44,970 --> 01:11:47,900
even something we've actually done yet

1823
01:11:46,050 --> 01:11:50,909
this is meaningless stuff at the moment

1824
01:11:47,899 --> 01:11:53,039
basically all we're trying to do is say

1825
01:11:50,909 --> 01:11:54,989
we just want to write one of them so

1826
01:11:53,039 --> 01:11:56,850
what we should do is pick a universal

1827
01:11:54,989 --> 01:11:59,849
ordering for our stuff like sword always

1828
01:11:56,850 --> 01:12:01,590
comes before Monstar or whatever so that

1829
01:11:59,850 --> 01:12:03,120
we know we only ever write sword hits

1830
01:12:01,590 --> 01:12:04,619
monster and we never write monster hits

1831
01:12:03,119 --> 01:12:06,750
sword because if a sword in a monster

1832
01:12:04,619 --> 01:12:08,579
collide it's always sort hit Monstar

1833
01:12:06,750 --> 01:12:10,050
that's the only thing the sort is there

1834
01:12:08,579 --> 01:12:11,970
for it's so that we don't have to think

1835
01:12:10,050 --> 01:12:13,590
about things in both directions we know

1836
01:12:11,970 --> 01:12:15,810
that we just only have one which is when

1837
01:12:13,590 --> 01:12:17,550
this hits that and we know that if we

1838
01:12:15,810 --> 01:12:19,470
have the opposite we would flip them so

1839
01:12:17,550 --> 01:12:23,750
that we'd still call this hits that

1840
01:12:19,470 --> 01:12:23,750
instead of that hits this that's all

1841
01:12:30,458 --> 01:12:34,279
isn't there a potential bug and move

1842
01:12:32,569 --> 01:12:35,840
entity if an entity happens to spend the

1843
01:12:34,279 --> 01:12:38,208
whole distance limit which gets set to

1844
01:12:35,840 --> 01:12:41,059
0-0 and then considered as unlimited in

1845
01:12:38,208 --> 01:12:43,819
the next frame so no I don't believe so

1846
01:12:41,059 --> 01:12:46,788
because the way that that's designed to

1847
01:12:43,819 --> 01:12:47,988
work is that if your entity has some

1848
01:12:46,788 --> 01:12:49,908
kind of a movement limit

1849
01:12:47,988 --> 01:12:51,138
you're supposed to be processing that in

1850
01:12:49,908 --> 01:12:52,728
your update call so you're supposed to

1851
01:12:51,139 --> 01:12:55,399
do something when distance limit hits

1852
01:12:52,729 --> 01:12:59,530
zero right now if we decide that we

1853
01:12:55,399 --> 01:13:02,149
don't like that then you know we could

1854
01:12:59,529 --> 01:13:04,448
we could change that rule to be when you

1855
01:13:02,149 --> 01:13:06,919
hit zero you can no longer move at all

1856
01:13:04,448 --> 01:13:09,228
but we have to actually find an anywhere

1857
01:13:06,918 --> 01:13:10,429
that is actually important right and so

1858
01:13:09,229 --> 01:13:12,109
the reason we don't have that bug is

1859
01:13:10,429 --> 01:13:13,550
basically because the entity types if

1860
01:13:12,109 --> 01:13:15,260
you're so with the movement limit you're

1861
01:13:13,550 --> 01:13:17,989
supposed to respond to having the

1862
01:13:15,260 --> 01:13:19,668
distance limit run out and if you don't

1863
01:13:17,988 --> 01:13:22,098
respond to it then it seems as sane a

1864
01:13:19,668 --> 01:13:25,279
default to me as anything else that now

1865
01:13:22,099 --> 01:13:26,869
you can move right that's totally fine

1866
01:13:25,279 --> 01:13:28,998
too because what was the limit there for

1867
01:13:26,868 --> 01:13:30,469
you know you have to have some kind of

1868
01:13:28,998 --> 01:13:33,228
idea it presumably was there because

1869
01:13:30,469 --> 01:13:34,908
something happens when you stop and so

1870
01:13:33,229 --> 01:13:36,439
you should have an event there and if

1871
01:13:34,908 --> 01:13:38,029
some reason you forgot to put the event

1872
01:13:36,439 --> 01:13:40,550
there then allowing it to move again

1873
01:13:38,029 --> 01:13:44,569
doesn't seem any stupider than leaving

1874
01:13:40,550 --> 01:13:47,538
it where it was but yeah so I feel like

1875
01:13:44,569 --> 01:13:49,518
that's fine and it avoids introducing

1876
01:13:47,538 --> 01:13:51,139
some other constant value that's like a

1877
01:13:49,519 --> 01:13:53,809
crazy value that's meant to indicate

1878
01:13:51,139 --> 01:13:54,739
that you don't move but if we find that

1879
01:13:53,809 --> 01:13:56,208
we don't like that we can certainly

1880
01:13:54,738 --> 01:13:57,678
change it right it's trivial for us to

1881
01:13:56,208 --> 01:14:03,069
make a constant value here there's just

1882
01:13:57,679 --> 01:14:03,069
some special thing that's like unlimited

1883
01:14:07,569 --> 01:14:12,799
can the discarded next pointers in the

1884
01:14:09,979 --> 01:14:16,848
hash function become a memory problem I

1885
01:14:12,800 --> 01:14:21,199
don't I don't know exactly what you mean

1886
01:14:16,849 --> 01:14:22,429
but basically we're based the the memory

1887
01:14:21,198 --> 01:14:25,158
if you if you want to think about

1888
01:14:22,429 --> 01:14:28,460
temporarily what the memory implications

1889
01:14:25,158 --> 01:14:29,779
of a hash plus free list are they have a

1890
01:14:28,460 --> 01:14:31,760
really nice they have really nice

1891
01:14:29,779 --> 01:14:33,679
behavior so basically what happens is

1892
01:14:31,760 --> 01:14:36,110
you have if you look if you think about

1893
01:14:33,679 --> 01:14:37,520
how your memory gets used right you have

1894
01:14:36,109 --> 01:14:40,960
a fixed amount of memory for the hash

1895
01:14:37,520 --> 01:14:44,119
size so there's the hash memory right

1896
01:14:40,960 --> 01:14:47,658
right so we'll call that we'll call that

1897
01:14:44,118 --> 01:14:51,289
H right and then we have the memory for

1898
01:14:47,658 --> 01:14:53,420
the links right like so and that's

1899
01:14:51,289 --> 01:14:55,519
basically like the size of the links

1900
01:14:53,420 --> 01:14:59,000
times L so that's proportionate to L

1901
01:14:55,520 --> 01:15:01,300
which is a variable right times the size

1902
01:14:59,000 --> 01:15:04,219
of the links so basically the the hash

1903
01:15:01,300 --> 01:15:06,679
to do this scheme you basically have the

1904
01:15:04,219 --> 01:15:08,658
hash times the number of links times the

1905
01:15:06,679 --> 01:15:10,039
size for links this is your memory usage

1906
01:15:08,658 --> 01:15:11,809
right that's your memory usage for the

1907
01:15:10,039 --> 01:15:15,979
hash table plus the free list to store

1908
01:15:11,810 --> 01:15:18,920
these things what happens is the maximum

1909
01:15:15,979 --> 01:15:20,988
amount of Link's you can ever have in a

1910
01:15:18,920 --> 01:15:23,719
system at a time so whatever the

1911
01:15:20,988 --> 01:15:25,939
gameplay ends up making this maximum B

1912
01:15:23,719 --> 01:15:28,760
that's the maximum this will ever be

1913
01:15:25,939 --> 01:15:30,919
right because it can never be more than

1914
01:15:28,760 --> 01:15:33,619
that because every time one of these is

1915
01:15:30,920 --> 01:15:36,260
freed it goes to the free list so once

1916
01:15:33,618 --> 01:15:38,149
you once you've hit your maximum

1917
01:15:36,260 --> 01:15:39,650
scenario once you have a scenario where

1918
01:15:38,149 --> 01:15:43,609
the most number of rules are in play as

1919
01:15:39,649 --> 01:15:45,198
possible so L max h plus the maximum L

1920
01:15:43,609 --> 01:15:48,109
that are in play at any time times s

1921
01:15:45,198 --> 01:15:50,598
that's the total footprint you will

1922
01:15:48,109 --> 01:15:53,029
never use more than that that will get

1923
01:15:50,599 --> 01:15:55,190
allocated for you dynamically as you

1924
01:15:53,029 --> 01:15:58,969
push out and then it will just stay

1925
01:15:55,189 --> 01:16:00,289
reserved from then on right because

1926
01:15:58,969 --> 01:16:01,670
every time something gets freed it goes

1927
01:16:00,289 --> 01:16:04,460
on the free list when it gets used it

1928
01:16:01,670 --> 01:16:06,440
comes back in so you never thrash

1929
01:16:04,460 --> 01:16:08,359
remember you never fragment you're

1930
01:16:06,439 --> 01:16:11,388
always perfectly utilizing the memory

1931
01:16:08,359 --> 01:16:14,269
that you have and it grows to the total

1932
01:16:11,389 --> 01:16:17,389
maximum usage in any gameplay scenario

1933
01:16:14,270 --> 01:16:19,639
and stops so even I like these even in

1934
01:16:17,389 --> 01:16:21,409
dynamic memory allocation

1935
01:16:19,639 --> 01:16:23,000
so even if we decide at the end of this

1936
01:16:21,408 --> 01:16:24,589
game that we don't care about a fixed

1937
01:16:23,000 --> 01:16:26,118
memory footprint and we just want to

1938
01:16:24,590 --> 01:16:27,289
allow the game to grow to however much

1939
01:16:26,118 --> 01:16:30,259
memory it wants

1940
01:16:27,289 --> 01:16:32,060
I still like these schemes because it

1941
01:16:30,260 --> 01:16:34,400
means that they grow to the total size

1942
01:16:32,060 --> 01:16:38,449
they need to be and stay there which is

1943
01:16:34,399 --> 01:16:46,539
nice I like that and they never fragment

1944
01:16:38,448 --> 01:16:50,899
I have two game play requests a

1945
01:16:46,539 --> 01:16:53,300
non-euclidean room and a monster that

1946
01:16:50,899 --> 01:16:55,638
spans multiple rooms vertically are

1947
01:16:53,300 --> 01:16:57,260
those things possible

1948
01:16:55,639 --> 01:17:00,380
a monster that spans multiple rooms

1949
01:16:57,260 --> 01:17:02,719
vertically is trivial because we don't

1950
01:17:00,380 --> 01:17:04,250
think about rooms in terms of how any of

1951
01:17:02,719 --> 01:17:06,590
the gameplay code works a room is

1952
01:17:04,250 --> 01:17:09,020
strictly a camera concept at the moment

1953
01:17:06,590 --> 01:17:12,260
so a monster that spans multiple rooms

1954
01:17:09,020 --> 01:17:15,619
vertically is easy or horizontally or

1955
01:17:12,260 --> 01:17:19,219
any other way you want a non-euclidean

1956
01:17:15,618 --> 01:17:21,710
room is definitely something that we

1957
01:17:19,219 --> 01:17:26,439
don't support right now in any

1958
01:17:21,710 --> 01:17:26,439
particular way oh wait do we

1959
01:17:34,770 --> 01:17:39,310
so yes we could support a non-euclidean

1960
01:17:37,448 --> 01:17:41,259
room the way we would support a

1961
01:17:39,310 --> 01:17:44,230
non-euclidean room is by mapping tile

1962
01:17:41,260 --> 01:17:50,500
chunks by by changing the mapping of

1963
01:17:44,229 --> 01:17:54,968
tile chunks to not be in order so we

1964
01:17:50,500 --> 01:17:58,448
could do a non-euclidean room I will add

1965
01:17:54,969 --> 01:18:00,250
that to my reminders text file to show

1966
01:17:58,448 --> 01:18:02,049
how to do that I don't necessarily want

1967
01:18:00,250 --> 01:18:04,319
to make design decisions around that

1968
01:18:02,050 --> 01:18:10,449
because I don't think it's particularly

1969
01:18:04,319 --> 01:18:12,698
important for gameplay but I will write

1970
01:18:10,448 --> 01:18:14,559
it down so if at some point it becomes a

1971
01:18:12,698 --> 01:18:16,299
good time to maybe say let's do a little

1972
01:18:14,560 --> 01:18:18,719
bit of a non-euclidean thing here we

1973
01:18:16,300 --> 01:18:20,710
could probably do something like that

1974
01:18:18,719 --> 01:18:23,859
the thing that we couldn't do very

1975
01:18:20,710 --> 01:18:26,289
easily is a non-euclidean room that

1976
01:18:23,859 --> 01:18:35,618
wasn't an even number of tile chunks

1977
01:18:26,289 --> 01:18:41,189
wide I think that would be hard but yeah

1978
01:18:35,618 --> 01:18:43,059
I think we could do it the other way I

1979
01:18:41,189 --> 01:18:44,529
think I don't know I have to think about

1980
01:18:43,060 --> 01:18:45,670
that so I wrote it down I don't really

1981
01:18:44,529 --> 01:18:46,750
want to make design decisions based on

1982
01:18:45,670 --> 01:18:48,399
that because that's not a big part of

1983
01:18:46,750 --> 01:18:50,289
this game and it would be something that

1984
01:18:48,399 --> 01:18:51,969
would have affect other things that we

1985
01:18:50,289 --> 01:18:53,590
could do it definitely something that

1986
01:18:51,969 --> 01:18:55,329
would introduce a bunch of trade-offs so

1987
01:18:53,590 --> 01:18:58,569
I'd rather not make a bunch of decisions

1988
01:18:55,329 --> 01:18:59,738
based on that but I'll write it down and

1989
01:18:58,569 --> 01:19:00,939
if it turns out that something we could

1990
01:18:59,738 --> 01:19:02,500
handle in the future that wouldn't

1991
01:19:00,939 --> 01:19:05,189
jeopardize a bunch of other stuff we

1992
01:19:02,500 --> 01:19:05,189
could take a look at it

1993
01:19:11,899 --> 01:19:18,719
our render is reusable sure I mean

1994
01:19:16,439 --> 01:19:22,079
that's what a graphics card is it's a

1995
01:19:18,719 --> 01:19:24,448
giant reusable renderer so yeah

1996
01:19:22,079 --> 01:19:26,550
vendors are definitely reusable it

1997
01:19:24,448 --> 01:19:28,469
depends to what degree you needed to

1998
01:19:26,550 --> 01:19:31,679
take advantage of certain aspects of the

1999
01:19:28,469 --> 01:19:33,300
game that they were rendering to get

2000
01:19:31,679 --> 01:19:36,090
performance that's really the thing that

2001
01:19:33,300 --> 01:19:39,980
determines how reusable they are but

2002
01:19:36,090 --> 01:19:39,980
sure renders are often reusable

2003
01:19:48,840 --> 01:20:00,060
so I think I think that is all of the

2004
01:19:56,819 --> 01:20:08,729
questions I don't see anymore so it

2005
01:20:00,060 --> 01:20:11,539
looks pretty good yeah all right well I

2006
01:20:08,729 --> 01:20:16,459
guess that's the end of today's episode

2007
01:20:11,539 --> 01:20:18,689
let's go ahead and wrap things up here

2008
01:20:16,460 --> 01:20:22,800
so we've actually done this that's

2009
01:20:18,689 --> 01:20:26,099
that's done these are done we did some

2010
01:20:22,800 --> 01:20:28,440
to do's there so we basically you know

2011
01:20:26,100 --> 01:20:31,140
we've got stuff straightened out here

2012
01:20:28,439 --> 01:20:32,309
but of course we I guess technically we

2013
01:20:31,140 --> 01:20:33,960
kind of accomplished everything that we

2014
01:20:32,310 --> 01:20:36,000
want to accomplish it's just we don't

2015
01:20:33,960 --> 01:20:37,619
have a very efficient way of dealing

2016
01:20:36,000 --> 01:20:40,800
with with clearing those collision rules

2017
01:20:37,619 --> 01:20:44,010
for like the sword so that's a little

2018
01:20:40,800 --> 01:20:45,119
bit of an issue and I don't know so it's

2019
01:20:44,010 --> 01:20:47,159
something we you know we've done our

2020
01:20:45,119 --> 01:20:49,619
first pass maybe we need to think about

2021
01:20:47,159 --> 01:20:51,809
it more maybe we'll let it go for a

2022
01:20:49,619 --> 01:20:54,479
while like I said and we'll sort of see

2023
01:20:51,810 --> 01:20:56,310
how things shape up as we sort of do

2024
01:20:54,479 --> 01:20:58,500
more stuff with collisions and more

2025
01:20:56,310 --> 01:21:00,390
gameplay maybe that will inform our

2026
01:20:58,500 --> 01:21:01,680
decisions it'll let us know do we care

2027
01:21:00,390 --> 01:21:03,090
about this performance-wise do we even

2028
01:21:01,680 --> 01:21:03,930
want these collision rules maybe we

2029
01:21:03,090 --> 01:21:05,940
handle it in a different way in the

2030
01:21:03,930 --> 01:21:07,200
future because you know the game design

2031
01:21:05,939 --> 01:21:08,939
sort of dictates that way but it looks

2032
01:21:07,199 --> 01:21:10,800
like we did the thing we wanted to do

2033
01:21:08,939 --> 01:21:11,759
which was give ourselves an easy system

2034
01:21:10,800 --> 01:21:13,190
where we can just add and remove

2035
01:21:11,760 --> 01:21:15,570
collision rules that's not a big deal

2036
01:21:13,189 --> 01:21:18,449
and so we've done that and that's good

2037
01:21:15,569 --> 01:21:22,739
and I'm happy about that so we'll be

2038
01:21:18,449 --> 01:21:26,279
back here tomorrow and I'm trying to

2039
01:21:22,739 --> 01:21:29,429
think what's the next thing on our list

2040
01:21:26,279 --> 01:21:32,159
of things to do I think probably what we

2041
01:21:29,430 --> 01:21:34,409
should do is allow the monster to die if

2042
01:21:32,159 --> 01:21:36,539
you if you heard it and then maybe we'll

2043
01:21:34,409 --> 01:21:38,189
rights a little bit of AI pathfinding

2044
01:21:36,539 --> 01:21:39,930
code for the monster maybe it's time to

2045
01:21:38,189 --> 01:21:41,960
add some path finding where he can find

2046
01:21:39,930 --> 01:21:44,579
his way around because that's a big if

2047
01:21:41,960 --> 01:21:45,930
and then we should probably start moving

2048
01:21:44,579 --> 01:21:47,729
on to animation because we've we've

2049
01:21:45,930 --> 01:21:49,650
pretty much done a fair bit of specking

2050
01:21:47,729 --> 01:21:50,789
on this sort of stuff I feel like we're

2051
01:21:49,649 --> 01:21:52,349
getting into the part where we would

2052
01:21:50,789 --> 01:21:54,359
start writing things for real like you

2053
01:21:52,350 --> 01:21:55,770
know start fixing the collision detector

2054
01:21:54,359 --> 01:21:57,509
to be like fully featured and all that

2055
01:21:55,770 --> 01:21:59,400
stuff and we're kind of pushing up on

2056
01:21:57,510 --> 01:22:00,060
that like real code boundary and again

2057
01:21:59,399 --> 01:22:01,559
we're just trying to make sure

2058
01:22:00,060 --> 01:22:02,489
everything expect for us before we

2059
01:22:01,560 --> 01:22:05,460
actually take that plunge

2060
01:22:02,488 --> 01:22:07,439
make something fully featured so I think

2061
01:22:05,460 --> 01:22:09,389
maybe you know we should move on and and

2062
01:22:07,439 --> 01:22:11,488
get a little bit more done in each arena

2063
01:22:09,389 --> 01:22:12,300
and then start coming back a lot of

2064
01:22:11,488 --> 01:22:15,359
things down because we're getting pretty

2065
01:22:12,300 --> 01:22:17,248
far in in a lot of I'm a lot of backsies

2066
01:22:15,359 --> 01:22:18,569
so that's good but it also means that we

2067
01:22:17,248 --> 01:22:19,828
want to make sure that we don't neglect

2068
01:22:18,569 --> 01:22:21,210
anything first you want to get

2069
01:22:19,828 --> 01:22:23,429
everything sort of fleshed out before we

2070
01:22:21,210 --> 01:22:26,698
really commit to doing something first

2071
01:22:23,429 --> 01:22:27,960
for real so anyway thank you very much

2072
01:22:26,698 --> 01:22:30,538
for joining me it's a pleasure coding

2073
01:22:27,960 --> 01:22:31,889
with you as always here on some morning

2074
01:22:30,538 --> 01:22:34,380
handmade hero action I will be back here

2075
01:22:31,889 --> 01:22:37,230
tomorrow same time 9:00 a.m. Pacific

2076
01:22:34,380 --> 01:22:38,130
Standard Time tomorrow so if you would

2077
01:22:37,229 --> 01:22:39,569
like to come back for some more

2078
01:22:38,130 --> 01:22:41,489
programming I think maybe what we'll do

2079
01:22:39,569 --> 01:22:42,988
is start that pathfinding Monstar

2080
01:22:41,488 --> 01:22:44,908
behavior stuff that seems like a good

2081
01:22:42,988 --> 01:22:46,408
place to go next because we haven't

2082
01:22:44,908 --> 01:22:47,729
really just you know worked on how we're

2083
01:22:46,408 --> 01:22:49,738
gonna do pathfinding which is gonna be

2084
01:22:47,729 --> 01:22:51,388
an issue cuz we basically we don't have

2085
01:22:49,738 --> 01:22:53,638
grids anymore we've got just a free

2086
01:22:51,389 --> 01:22:54,630
freeform world so we need to kind of

2087
01:22:53,639 --> 01:22:55,889
think about that and figure out how

2088
01:22:54,630 --> 01:22:57,599
we're gonna deal with it and I don't

2089
01:22:55,889 --> 01:23:00,420
know so that's something we have to dive

2090
01:22:57,599 --> 01:23:02,730
into so that's cool come back tomorrow

2091
01:23:00,420 --> 01:23:04,170
we'll take a look at that if you would

2092
01:23:02,729 --> 01:23:05,248
like to follow along at home with a

2093
01:23:04,170 --> 01:23:06,719
source code you could do that by

2094
01:23:05,248 --> 01:23:09,809
pre-ordering the game on handmade hero

2095
01:23:06,719 --> 01:23:11,368
org and that'll get you a link in your

2096
01:23:09,809 --> 01:23:13,829
email which allows you to download the

2097
01:23:11,368 --> 01:23:16,259
source code every every day after I

2098
01:23:13,828 --> 01:23:17,399
finish I upload it if you would like to

2099
01:23:16,260 --> 01:23:18,900
support the video series we do have a

2100
01:23:17,399 --> 01:23:21,149
patreon you can subscribe to as well on

2101
01:23:18,899 --> 01:23:23,158
here we also have a news and forum site

2102
01:23:21,149 --> 01:23:24,689
you can go to that has a bunch of great

2103
01:23:23,158 --> 01:23:25,948
resources on it it's got ports to Mac

2104
01:23:24,689 --> 01:23:28,259
and Linux that community members have

2105
01:23:25,948 --> 01:23:30,238
done also port to iOS now and to Android

2106
01:23:28,260 --> 01:23:31,409
so people who are looking to sort of run

2107
01:23:30,238 --> 01:23:33,238
on other platforms that's a great place

2108
01:23:31,408 --> 01:23:35,429
to go it also has a discussion forum and

2109
01:23:33,238 --> 01:23:37,078
an episode guide that has like time

2110
01:23:35,429 --> 01:23:38,760
marked indices that you can go to and

2111
01:23:37,078 --> 01:23:40,799
use it's a pretty handy thing to go to

2112
01:23:38,760 --> 01:23:42,809
how their command checking it out and

2113
01:23:40,800 --> 01:23:44,699
also there's a tweet bot that tweets the

2114
01:23:42,809 --> 01:23:47,340
schedule so if you want to check that

2115
01:23:44,698 --> 01:23:49,049
out go to the tweets that's an easy

2116
01:23:47,340 --> 01:23:50,699
thing to subscribe to that allows you to

2117
01:23:49,050 --> 01:23:52,230
know kind of when the stream is is gonna

2118
01:23:50,698 --> 01:23:53,460
be every week so you can if you want to

2119
01:23:52,229 --> 01:23:56,788
catch a live one you kind of know when

2120
01:23:53,460 --> 01:23:58,408
your options are so that's it thanks for

2121
01:23:56,788 --> 01:24:00,300
joining me hopefully I see a tear

2122
01:23:58,408 --> 01:24:02,399
tomorrow morning have a great rest of

2123
01:24:00,300 --> 01:24:04,460
your Thursday and I'll see you guys

2124
01:24:02,399 --> 01:24:04,460
later

