1
00:00:00,000 --> 00:00:04,080
hello everyone and welcome to handmade

2
00:00:01,439 --> 00:00:05,759
Hero show recode a complete game live on

3
00:00:04,080 --> 00:00:07,349
stream we got a little off-topic during

4
00:00:05,759 --> 00:00:08,940
the pre stream and ended up looking at

5
00:00:07,349 --> 00:00:10,679
some weird meal hash stuff that's just

6
00:00:08,939 --> 00:00:15,178
out goes sometimes

7
00:00:10,679 --> 00:00:18,629
today we are going to try to improve our

8
00:00:15,179 --> 00:00:21,510
art pipeline situation a little bit we

9
00:00:18,629 --> 00:00:23,309
kind of decided that mostly the way we

10
00:00:21,510 --> 00:00:27,359
had architected our matching is probably

11
00:00:23,309 --> 00:00:28,890
good enough for what we want but there's

12
00:00:27,359 --> 00:00:30,480
still some subtlety there and so what we

13
00:00:28,890 --> 00:00:33,120
want to do is we want to go through and

14
00:00:30,480 --> 00:00:36,270
decorate our rooms with imported art

15
00:00:33,119 --> 00:00:39,750
textures and the goal here is to figure

16
00:00:36,270 --> 00:00:42,350
out how we're going to import those

17
00:00:39,750 --> 00:00:45,628
textures in such a way that we that they

18
00:00:42,350 --> 00:00:49,920
correctly get the tags and asset types

19
00:00:45,628 --> 00:00:52,349
associated with them that we want and in

20
00:00:49,920 --> 00:00:54,809
theory that's not gonna be too hard but

21
00:00:52,350 --> 00:00:57,179
in practice there may be its some

22
00:00:54,808 --> 00:00:59,729
subtleties mainly all of this stuff

23
00:00:57,179 --> 00:01:03,058
stems from the fact that files on a hard

24
00:00:59,729 --> 00:01:04,978
drive the concept was made a long time

25
00:01:03,058 --> 00:01:07,349
ago it hasn't really been improved much

26
00:01:04,978 --> 00:01:09,118
it's still kind of crappy and so really

27
00:01:07,349 --> 00:01:12,118
basic stuff that you would want to do as

28
00:01:09,118 --> 00:01:15,228
a developer such as associate a few

29
00:01:12,118 --> 00:01:19,409
enums with a file that merged when you

30
00:01:15,228 --> 00:01:21,750
build is totally unlike theirs it's

31
00:01:19,409 --> 00:01:22,890
completely not anywhere you have to

32
00:01:21,750 --> 00:01:25,590
build you do all that kind of stuff

33
00:01:22,890 --> 00:01:29,310
yourself right all you get when you open

34
00:01:25,590 --> 00:01:31,469
a file is just some contents right and

35
00:01:29,310 --> 00:01:33,840
if it's a PNG then you just get the PNG

36
00:01:31,469 --> 00:01:36,170
and there's no way to say like I want to

37
00:01:33,840 --> 00:01:38,728
have a little thing where you know if I

38
00:01:36,170 --> 00:01:41,340
right-click on that PNG I can put in

39
00:01:38,728 --> 00:01:42,868
some some information so typically what

40
00:01:41,340 --> 00:01:44,189
ends up happening right is people have

41
00:01:42,868 --> 00:01:46,109
all these text files they end up

42
00:01:44,188 --> 00:01:48,029
associating with the PNG and that

43
00:01:46,109 --> 00:01:50,879
specifies the extra information that it

44
00:01:48,030 --> 00:01:53,129
actually needs to bind to the game or in

45
00:01:50,879 --> 00:01:55,709
our case but I'm hoping we can do more

46
00:01:53,129 --> 00:01:59,158
so is actually just use a series of kind

47
00:01:55,709 --> 00:02:00,359
of template not C++ template but the

48
00:01:59,159 --> 00:02:03,450
literal meaning of template meaning a

49
00:02:00,359 --> 00:02:05,670
prefab sort of thing templates that you

50
00:02:03,450 --> 00:02:07,770
can basically put in the file name is

51
00:02:05,670 --> 00:02:10,318
what I'm sort of thinking that'll sort

52
00:02:07,769 --> 00:02:11,639
of say here's the way this PNG should be

53
00:02:10,318 --> 00:02:14,759
interpreted and

54
00:02:11,639 --> 00:02:16,379
it will be interpreted that way so if I

55
00:02:14,759 --> 00:02:20,219
go ahead and get started here I could

56
00:02:16,379 --> 00:02:21,810
show you what I'm talking about we did

57
00:02:20,219 --> 00:02:25,310
the work yesterday to make sure that

58
00:02:21,810 --> 00:02:28,140
this stuff works the way we want it to

59
00:02:25,310 --> 00:02:30,870
but we don't actually have the import

60
00:02:28,139 --> 00:02:34,679
story straightened out yet so here is

61
00:02:30,870 --> 00:02:37,860
our orphanage and the walls currently

62
00:02:34,680 --> 00:02:41,189
are red the florists green and the

63
00:02:37,860 --> 00:02:45,110
passageways in between rooms those are

64
00:02:41,189 --> 00:02:48,060
blue you can see that right now right

65
00:02:45,110 --> 00:02:52,380
and so we just want to do a very simple

66
00:02:48,060 --> 00:02:58,680
task we want to make it so that those

67
00:02:52,379 --> 00:03:02,930
walls actually use a texture from our

68
00:02:58,680 --> 00:03:05,939
art set here right which is one of these

69
00:03:02,930 --> 00:03:11,310
like black orphanage right and we would

70
00:03:05,939 --> 00:03:13,500
like the the floor to use this and we

71
00:03:11,310 --> 00:03:16,349
would like maybe other parts of the

72
00:03:13,500 --> 00:03:21,299
floor as we deem it necessary to use

73
00:03:16,349 --> 00:03:25,139
this so like stone and wood we will

74
00:03:21,299 --> 00:03:30,349
ourselves specify you know maybe which

75
00:03:25,139 --> 00:03:33,179
ones we wants and then that will be the

76
00:03:30,349 --> 00:03:35,370
that will be respected by the game

77
00:03:33,180 --> 00:03:37,370
engine it will put them on there and we

78
00:03:35,370 --> 00:03:40,170
pretty much have how we want to do that

79
00:03:37,370 --> 00:03:43,920
but we don't know how to associate the

80
00:03:40,169 --> 00:03:46,319
file with how we wanted to do that so

81
00:03:43,919 --> 00:03:48,539
where's that gonna happen well if you

82
00:03:46,319 --> 00:03:51,689
look at what happens inside the asset

83
00:03:48,539 --> 00:03:56,099
system you can see that we've got this

84
00:03:51,689 --> 00:03:57,870
notion of an import path here where we

85
00:03:56,099 --> 00:04:00,900
can call check for our changes and it

86
00:03:57,870 --> 00:04:03,000
actually will look through this

87
00:04:00,900 --> 00:04:05,610
directory and it will look for any

88
00:04:03,000 --> 00:04:07,949
changes now none of these things are

89
00:04:05,610 --> 00:04:10,650
actually things that our game has

90
00:04:07,949 --> 00:04:15,298
imported yet so all of them will come up

91
00:04:10,650 --> 00:04:17,548
as not found right but we've never

92
00:04:15,299 --> 00:04:19,889
figured out how we're actually going to

93
00:04:17,548 --> 00:04:23,370
import those now in some sort of way

94
00:04:19,889 --> 00:04:24,939
that makes sense we did a little test

95
00:04:23,370 --> 00:04:26,920
where we could do the hand

96
00:04:24,939 --> 00:04:29,889
here and we did you know we did him

97
00:04:26,920 --> 00:04:34,900
import that and the way that that was

98
00:04:29,889 --> 00:04:36,729
working was when you you set wasn't say

99
00:04:34,899 --> 00:04:37,959
in actually no I take that back

100
00:04:36,730 --> 00:04:41,670
we didn't set in the properties anymore

101
00:04:37,959 --> 00:04:44,769
it's just automatic if you create inside

102
00:04:41,670 --> 00:04:47,410
the data directory when you start up the

103
00:04:44,769 --> 00:04:51,729
game what you can see here is there's a

104
00:04:47,410 --> 00:04:55,060
local HHA file if the game sees a local

105
00:04:51,730 --> 00:04:58,629
HHA file that you have started it will

106
00:04:55,060 --> 00:05:00,670
pack new art assets into it so all you

107
00:04:58,629 --> 00:05:02,649
really have to do is create one of those

108
00:05:00,670 --> 00:05:05,080
and if you do create one of those it

109
00:05:02,649 --> 00:05:06,609
will start importing and then if you

110
00:05:05,079 --> 00:05:08,349
ever want to stop and importing you can

111
00:05:06,610 --> 00:05:10,240
just rename that file to like finish

112
00:05:08,350 --> 00:05:12,970
that HHI or whatever and now that's a

113
00:05:10,240 --> 00:05:15,040
finished art file you can distribute and

114
00:05:12,970 --> 00:05:16,900
you could create another local HHA file

115
00:05:15,040 --> 00:05:19,620
to then pack more assets into on the fly

116
00:05:16,899 --> 00:05:24,939
if you wanted to but you know your

117
00:05:19,620 --> 00:05:33,790
that's choice is yours right um so what

118
00:05:24,939 --> 00:05:37,149
happens here is this pretty convenient

119
00:05:33,790 --> 00:05:39,910
because I can delete that file right

120
00:05:37,149 --> 00:05:43,599
it's gone and then if I run the game

121
00:05:39,910 --> 00:05:45,340
there won't be a hand anymore right

122
00:05:43,600 --> 00:05:47,200
let's see it's not there anymore because

123
00:05:45,339 --> 00:05:49,409
that was imported little it's not really

124
00:05:47,199 --> 00:05:51,789
a hand it was a little it was a little

125
00:05:49,410 --> 00:05:58,380
flaming thing we imported it doesn't

126
00:05:51,790 --> 00:06:00,250
matter anyway so that being in there

127
00:05:58,379 --> 00:06:03,279
because we haven't created a look-alike

128
00:06:00,250 --> 00:06:06,310
say it won't run the import we have our

129
00:06:03,279 --> 00:06:08,769
HHA edit utility right and so we can

130
00:06:06,310 --> 00:06:11,740
always that we wrote we can always

131
00:06:08,769 --> 00:06:14,859
create a new local dot HHA and now we've

132
00:06:11,740 --> 00:06:17,139
got one if we now run will run the

133
00:06:14,860 --> 00:06:18,759
import so right now it's importing it's

134
00:06:17,139 --> 00:06:22,870
done importing so now i've got that

135
00:06:18,759 --> 00:06:25,289
little weird thing back right so we did

136
00:06:22,870 --> 00:06:27,550
all the work to make all of that stuff

137
00:06:25,290 --> 00:06:30,069
happen and the only thing that we

138
00:06:27,550 --> 00:06:33,430
haven't done now is figured out some way

139
00:06:30,069 --> 00:06:37,659
to actually associate the things that

140
00:06:33,430 --> 00:06:39,699
get imported with the tags

141
00:06:37,660 --> 00:06:43,689
and types and all that stuff that we

142
00:06:39,699 --> 00:06:46,379
actually want we even put in ways to do

143
00:06:43,689 --> 00:06:50,949
that we just haven't defined any right

144
00:06:46,379 --> 00:06:57,610
so I don't remember what that was called

145
00:06:50,949 --> 00:07:02,639
but it had a name here somewhere it was

146
00:06:57,610 --> 00:07:02,639
like tag array or something tags that

147
00:07:03,149 --> 00:07:12,699
I'm just gonna look import grid tags so

148
00:07:11,290 --> 00:07:15,790
we define this thing called import grid

149
00:07:12,699 --> 00:07:20,199
tags and would import grid tag grid tags

150
00:07:15,790 --> 00:07:22,060
does is it tells you how the image is

151
00:07:20,199 --> 00:07:24,310
gonna be broken up if the image is gonna

152
00:07:22,060 --> 00:07:26,949
be broken up which you know maybe it

153
00:07:24,310 --> 00:07:31,959
will maybe it won't be so we had a way

154
00:07:26,949 --> 00:07:36,370
of doing that and we at the moment don't

155
00:07:31,959 --> 00:07:39,370
have anything for just single big images

156
00:07:36,370 --> 00:07:47,230
right so if we look at what happens say

157
00:07:39,370 --> 00:07:51,189
with with this this is just 1 4096 by

158
00:07:47,230 --> 00:07:53,410
4096 bitmap and when we import one of

159
00:07:51,189 --> 00:07:56,560
these we don't really need it to be

160
00:07:53,410 --> 00:08:01,600
imported as separate bitmaps I don't

161
00:07:56,560 --> 00:08:03,970
think now we could write I mean we could

162
00:08:01,600 --> 00:08:06,340
do that we could break it up into

163
00:08:03,970 --> 00:08:09,940
separate bitmaps I just don't know if we

164
00:08:06,339 --> 00:08:11,169
want to the top pieces and the bottom

165
00:08:09,939 --> 00:08:14,259
pieces

166
00:08:11,170 --> 00:08:14,259
[Music]

167
00:08:16,629 --> 00:08:21,279
I mean we it just doesn't seem like it

168
00:08:19,720 --> 00:08:23,620
makes much sense and part of the reasons

169
00:08:21,279 --> 00:08:25,089
because this is like longer you know

170
00:08:23,620 --> 00:08:32,320
what I mean

171
00:08:25,089 --> 00:08:35,399
and so it just doesn't seem like yeah

172
00:08:32,320 --> 00:08:35,400
it's it's hard to say

173
00:08:39,370 --> 00:08:43,240
I mean on the one hand there are some

174
00:08:41,860 --> 00:08:44,800
additional things you might want to do

175
00:08:43,240 --> 00:08:49,149
like for example you might want to

176
00:08:44,799 --> 00:08:50,829
expand or contract like if you were

177
00:08:49,149 --> 00:08:53,350
trying to make this be a sort of

178
00:08:50,830 --> 00:08:54,940
repeating text or somehow I don't really

179
00:08:53,350 --> 00:08:56,769
know that we want to do that I think if

180
00:08:54,940 --> 00:08:59,230
you just stretch it a little bit or it's

181
00:08:56,769 --> 00:09:03,039
probably fine so you know I would say if

182
00:08:59,230 --> 00:09:04,180
we just leave it at that we just can

183
00:09:03,039 --> 00:09:06,219
just treat that whole thing as one

184
00:09:04,179 --> 00:09:09,819
bitmap right and we already use it that

185
00:09:06,220 --> 00:09:13,089
way so it's easy enough to do so really

186
00:09:09,820 --> 00:09:16,778
there's an import grid tags thing right

187
00:09:13,089 --> 00:09:18,970
but there's also another kind of thing

188
00:09:16,778 --> 00:09:21,519
where we just pass a single import grid

189
00:09:18,970 --> 00:09:23,830
tag and that's all it actually needs and

190
00:09:21,519 --> 00:09:26,439
I think that's the path we need to

191
00:09:23,830 --> 00:09:29,710
implement today did I not I didn't load

192
00:09:26,440 --> 00:09:33,070
our project file if that's the path we

193
00:09:29,710 --> 00:09:34,990
need to modify today because that's the

194
00:09:33,070 --> 00:09:38,800
one that we would use for walls and

195
00:09:34,990 --> 00:09:41,200
stuff like that so process tiled export

196
00:09:38,799 --> 00:09:42,969
is the thing that uses the grid tags and

197
00:09:41,200 --> 00:09:46,120
is fairly complicated here right you can

198
00:09:42,970 --> 00:09:47,889
sort of see if that makes sense we would

199
00:09:46,120 --> 00:09:51,610
want another path here that's like

200
00:09:47,889 --> 00:09:54,549
processed single image import or

201
00:09:51,610 --> 00:09:56,019
something like this that that wouldn't

202
00:09:54,549 --> 00:09:58,990
go through that path right that doesn't

203
00:09:56,019 --> 00:10:00,970
actually need to do that uh and looking

204
00:09:58,990 --> 00:10:02,289
at the like the way this one goes it's

205
00:10:00,970 --> 00:10:03,790
yeah like it's a little bit more

206
00:10:02,289 --> 00:10:05,740
complicated probably than it would need

207
00:10:03,789 --> 00:10:08,740
to be and you can see here we've even

208
00:10:05,740 --> 00:10:12,190
got sort of a stub out for that so we

209
00:10:08,740 --> 00:10:13,360
want to we want to have some notion of

210
00:10:12,190 --> 00:10:15,730
which of those were doing and

211
00:10:13,360 --> 00:10:19,240
fortunately we know we know that by

212
00:10:15,730 --> 00:10:23,320
what's here block would always come in

213
00:10:19,240 --> 00:10:28,240
as one big thing right whereas character

214
00:10:23,320 --> 00:10:32,980
or item or obstacles would come in as

215
00:10:28,240 --> 00:10:33,970
multiple right so I think that you know

216
00:10:32,980 --> 00:10:36,220
it won't be too hard for us to

217
00:10:33,970 --> 00:10:38,709
differentiate between them so let's

218
00:10:36,220 --> 00:10:45,250
suppose we have one here which is just a

219
00:10:38,708 --> 00:10:47,769
process let's say a single tile import

220
00:10:45,250 --> 00:10:50,289
and I want to distinguish this between

221
00:10:47,769 --> 00:10:51,370
so there's two types of images we might

222
00:10:50,289 --> 00:10:53,409
want to load in

223
00:10:51,370 --> 00:10:55,570
one type of an image is one that we're

224
00:10:53,409 --> 00:10:59,079
going to mush down to a single 512 by

225
00:10:55,570 --> 00:11:01,960
512 texture and another is like a flat

226
00:10:59,080 --> 00:11:05,050
image we might use for a cutscene right

227
00:11:01,960 --> 00:11:08,920
so we've got two kinds of flat imports

228
00:11:05,049 --> 00:11:13,149
we might do and that's fairly important

229
00:11:08,919 --> 00:11:16,750
right okay so what I would like to do

230
00:11:13,149 --> 00:11:21,250
here is I would like to sort of grab

231
00:11:16,750 --> 00:11:23,289
this part out probably and see if I can

232
00:11:21,250 --> 00:11:26,500
just reuse it because all of this stuff

233
00:11:23,289 --> 00:11:31,980
is the same and I don't really want to

234
00:11:26,500 --> 00:11:34,690
be doing you know too much of that right

235
00:11:31,980 --> 00:11:42,580
so what I'd rather do here is something

236
00:11:34,690 --> 00:11:44,410
like this let's say I don't know what

237
00:11:42,580 --> 00:11:48,009
just happened there did I actually cut

238
00:11:44,409 --> 00:11:53,350
that properly yeah like can I just pull

239
00:11:48,009 --> 00:11:56,169
this out into a shared piece of code

240
00:11:53,350 --> 00:11:58,990
that actually extracts one of these

241
00:11:56,169 --> 00:12:03,579
things from an image that's already done

242
00:11:58,990 --> 00:12:06,039
you know what I mean and then have both

243
00:12:03,580 --> 00:12:08,170
of these call it so you know right here

244
00:12:06,039 --> 00:12:10,799
where it would have done it it does the

245
00:12:08,169 --> 00:12:14,679
like you know do the rest of the stuff

246
00:12:10,799 --> 00:12:17,919
and right here we're where we would call

247
00:12:14,679 --> 00:12:21,549
it same thing right and similarly we've

248
00:12:17,919 --> 00:12:23,589
got this down sample where we're doing

249
00:12:21,549 --> 00:12:26,259
sort of this this down sample in place

250
00:12:23,590 --> 00:12:28,690
you can see that this down sample just

251
00:12:26,259 --> 00:12:32,049
writes directly to the pixel buffer in

252
00:12:28,690 --> 00:12:33,580
both cases you know I'm saying so the

253
00:12:32,049 --> 00:12:35,309
source in the destination are actually

254
00:12:33,580 --> 00:12:38,350
the same pixel buffer and pixel buffer

255
00:12:35,309 --> 00:12:40,119
so what that means is because you know

256
00:12:38,350 --> 00:12:43,389
we're gonna want to use this for both

257
00:12:40,120 --> 00:12:46,810
routines this is also something that we

258
00:12:43,389 --> 00:12:50,590
would like to have and so if I if I kind

259
00:12:46,809 --> 00:12:57,479
of go like this and make our down sample

260
00:12:50,590 --> 00:12:57,480
by to also something that can be called

261
00:13:02,409 --> 00:13:14,179
on the pixel buffer then that gives us

262
00:13:05,419 --> 00:13:17,299
this and so I think that's mostly what

263
00:13:14,179 --> 00:13:21,879
we want and what we could do to is say

264
00:13:17,299 --> 00:13:21,879
well we just want to down sample it

265
00:13:22,419 --> 00:13:39,549
until it fits probably I'm not sure what

266
00:13:32,840 --> 00:13:39,550
our approach would be there

267
00:13:42,339 --> 00:13:46,520
I'm not sure what I approach to be there

268
00:13:44,450 --> 00:13:50,200
so I'm gonna say well downsample it so

269
00:13:46,519 --> 00:13:50,199
if it's that maybe dumb

270
00:13:50,360 --> 00:13:58,580
[Music]

271
00:13:51,669 --> 00:14:05,319
in fact that is probably dumb but I'm

272
00:13:58,580 --> 00:14:05,320
just gonna claim that I can do it anyway

273
00:14:12,669 --> 00:14:24,079
yeah so this might be more like down

274
00:14:18,889 --> 00:14:26,179
sample until Fitz and and we'll yeah you

275
00:14:24,080 --> 00:14:30,770
know like just you know I'm saying to

276
00:14:26,179 --> 00:14:32,539
you so you can basically give it an

277
00:14:30,769 --> 00:14:35,720
image and say I want this thing to fit

278
00:14:32,539 --> 00:14:38,990
in here so just keep you know reducing

279
00:14:35,720 --> 00:14:43,550
the size till it does um and we could

280
00:14:38,990 --> 00:14:47,000
make that more you know we could we

281
00:14:43,549 --> 00:14:49,370
could do that in a more filter filter

282
00:14:47,000 --> 00:14:51,169
down sampling by two each time is not

283
00:14:49,370 --> 00:14:52,909
the best way to do it right finding the

284
00:14:51,169 --> 00:14:55,669
exact down sample that would do it and

285
00:14:52,909 --> 00:14:59,269
then down sampling would be better you

286
00:14:55,669 --> 00:15:00,919
know what I mean so we could improve

287
00:14:59,269 --> 00:15:03,139
that some day if we really felt like it

288
00:15:00,919 --> 00:15:04,759
as well so we want to do down sample

289
00:15:03,139 --> 00:15:07,730
until it fits and then we want to do do

290
00:15:04,759 --> 00:15:08,870
the rest of the stuff and same thing

291
00:15:07,730 --> 00:15:10,959
here we want to be down somewhat Fitz

292
00:15:08,870 --> 00:15:13,759
and then do the rest of the stuff right

293
00:15:10,958 --> 00:15:23,299
and so this is going to be a while loop

294
00:15:13,759 --> 00:15:29,809
here that kind of tries to get this

295
00:15:23,299 --> 00:15:31,759
thing small enough like so and so

296
00:15:29,809 --> 00:15:34,789
instead of this being a for I equals

297
00:15:31,759 --> 00:15:38,958
down sample to or whatever actually I

298
00:15:34,789 --> 00:15:43,099
can just get rid of this instead it's

299
00:15:38,958 --> 00:15:46,338
just going to loop until the the size is

300
00:15:43,100 --> 00:15:50,329
exceeds the size that we are going to

301
00:15:46,339 --> 00:15:54,290
pack right and as it goes down the the

302
00:15:50,328 --> 00:15:55,459
dims divided and we probably want to

303
00:15:54,289 --> 00:15:57,949
make this handle

304
00:15:55,460 --> 00:16:00,769
rectangles because there's no reason not

305
00:15:57,950 --> 00:16:03,350
to do that so we probably want to make

306
00:16:00,769 --> 00:16:08,120
this a little bit a little bit saucy err

307
00:16:03,350 --> 00:16:11,470
in that sense right so let's go ahead

308
00:16:08,120 --> 00:16:14,060
and say that downsample to it so it fits

309
00:16:11,470 --> 00:16:19,910
probably takes some kind of an image or

310
00:16:14,059 --> 00:16:23,179
something right we we've got just like

311
00:16:19,909 --> 00:16:26,199
image pixels thing so let me take a look

312
00:16:23,179 --> 00:16:28,909
at where that's defined here right here

313
00:16:26,200 --> 00:16:32,390
so we've got this image 3 2 with high

314
00:16:28,909 --> 00:16:33,980
pixels right so in theory inside here

315
00:16:32,389 --> 00:16:41,259
what we could do is say that the down

316
00:16:33,980 --> 00:16:46,879
sample to fit bit just takes an image 32

317
00:16:41,259 --> 00:16:49,519
and says here's the thing to to down

318
00:16:46,879 --> 00:16:52,730
sample maybe we'll say that will write

319
00:16:49,519 --> 00:16:55,970
back or well you know we could do is say

320
00:16:52,730 --> 00:17:00,320
source image and then have the desk

321
00:16:55,970 --> 00:17:03,639
image come back and then we could say mm

322
00:17:00,320 --> 00:17:08,058
the maximum width and the maximum height

323
00:17:03,639 --> 00:17:12,308
and so this while loop here could be

324
00:17:08,058 --> 00:17:15,740
like while the width of the desk image

325
00:17:12,308 --> 00:17:19,099
right which will set up snot at some

326
00:17:15,740 --> 00:17:22,939
point while the width of that is greater

327
00:17:19,099 --> 00:17:27,139
than the max width or the height is

328
00:17:22,939 --> 00:17:31,400
greater than the max height keep on

329
00:17:27,140 --> 00:17:33,620
going you know I'm saying to you so this

330
00:17:31,400 --> 00:17:38,660
image here is just going to be equal to

331
00:17:33,619 --> 00:17:45,909
the source whatever got passed in which

332
00:17:38,660 --> 00:17:45,910
by the way is like a sprite dim right

333
00:17:46,920 --> 00:17:52,330
it's like sprite in my sprite dim here

334
00:17:49,509 --> 00:17:55,299
cuz that's like yeah although you know

335
00:17:52,329 --> 00:17:57,099
the this actually has like a min this

336
00:17:55,299 --> 00:17:59,440
actually has like a min Max X and

337
00:17:57,099 --> 00:18:05,259
everything I kind of feel like you'd

338
00:17:59,440 --> 00:18:11,039
want to just make the image be that

339
00:18:05,259 --> 00:18:14,259
thing we'll cross that bridge in come to

340
00:18:11,039 --> 00:18:18,399
so anyway we do a process single tile

341
00:18:14,259 --> 00:18:22,349
import or or the multi tile imports

342
00:18:18,400 --> 00:18:22,350
you're probably called multi tile import

343
00:18:23,700 --> 00:18:33,549
presumably this takes all the same stuff

344
00:18:27,089 --> 00:18:36,279
except for this that's probably just

345
00:18:33,549 --> 00:18:39,279
going to be like here's the tags that

346
00:18:36,279 --> 00:18:44,680
we're using I suppose is probably just

347
00:18:39,279 --> 00:18:47,559
now and the rest of this stuff is

348
00:18:44,680 --> 00:18:49,240
probably the same so you know we down

349
00:18:47,559 --> 00:18:53,169
sample the image till it fits in

350
00:18:49,240 --> 00:18:59,009
whatever are required tile sizes there

351
00:18:53,170 --> 00:18:59,009
and I feel like we set that

352
00:19:06,089 --> 00:19:16,439
so interestingly enough we meet our

353
00:19:12,420 --> 00:19:19,050
texture array 512 by 512 but we shrank

354
00:19:16,440 --> 00:19:23,150
everything down by 2 so does that mean

355
00:19:19,049 --> 00:19:23,149
it should really have been 256 by 256

356
00:19:33,659 --> 00:19:36,659
like

357
00:19:37,829 --> 00:19:59,639
it seems like it I'm not sure about that

358
00:19:49,429 --> 00:20:01,798
but here's what I will say this so the

359
00:19:59,640 --> 00:20:05,309
texture rate dim is not necessarily

360
00:20:01,798 --> 00:20:08,490
something that we want to base our art

361
00:20:05,308 --> 00:20:11,190
import on because you know we want the

362
00:20:08,490 --> 00:20:14,190
hhas to be the maximum resolution that

363
00:20:11,190 --> 00:20:16,590
you might run the game at to be to

364
00:20:14,190 --> 00:20:22,380
support that texture radium might be set

365
00:20:16,589 --> 00:20:24,240
to something less than that right so I

366
00:20:22,380 --> 00:20:30,620
don't really know what we want to do

367
00:20:24,240 --> 00:20:34,620
there that's kind of a tough question

368
00:20:30,619 --> 00:20:36,418
but I guess like that's sort of more of

369
00:20:34,619 --> 00:20:40,439
a thing that should be defined in the

370
00:20:36,419 --> 00:20:41,759
HHA file format I feel like you know I

371
00:20:40,440 --> 00:20:45,830
feel like that's something that should

372
00:20:41,759 --> 00:20:45,829
be specified and here more

373
00:20:56,730 --> 00:21:11,730
so I don't really know I'm gonna go

374
00:21:00,940 --> 00:21:11,730
ahead and set it to 512 why not

375
00:21:18,809 --> 00:21:30,369
so I'm gonna claim that I can go ahead

376
00:21:21,670 --> 00:21:33,490
and do this where I down sample this

377
00:21:30,369 --> 00:21:37,329
thing I send it off for processing and

378
00:21:33,490 --> 00:21:40,150
then I'm done and basically the exact

379
00:21:37,329 --> 00:21:47,169
same thing would happen here now I think

380
00:21:40,150 --> 00:21:49,440
that means I can if I want to just do

381
00:21:47,170 --> 00:21:49,440
this

382
00:22:02,130 --> 00:22:11,799
so I could build another image out of

383
00:22:04,720 --> 00:22:14,919
that and just do this here right and the

384
00:22:11,798 --> 00:22:19,839
grid tags here would be the tags that I

385
00:22:14,919 --> 00:22:37,419
would pass and everything else would

386
00:22:19,839 --> 00:22:41,619
just work this you know something like

387
00:22:37,419 --> 00:22:46,590
that I don't know what the image is here

388
00:22:41,619 --> 00:22:46,589
that we're even using just image right

389
00:22:51,808 --> 00:22:56,918
so we could make a thing that says like

390
00:22:54,398 --> 00:22:59,138
hey give me the sub image of whatever

391
00:22:56,919 --> 00:23:02,519
this is so we'll just use that separate

392
00:22:59,138 --> 00:23:05,829
region and then we'll pass it to this

393
00:23:02,519 --> 00:23:09,548
that way multi tile import and single

394
00:23:05,829 --> 00:23:11,470
tile import are actually the same and

395
00:23:09,548 --> 00:23:15,369
they both just do the down sample the

396
00:23:11,470 --> 00:23:18,579
foot fit and then and then they do the

397
00:23:15,369 --> 00:23:20,908
do the rest of the stuff you know aspect

398
00:23:18,579 --> 00:23:20,908
of it

399
00:23:28,640 --> 00:23:30,670
Oh

400
00:23:33,630 --> 00:23:36,679
[Music]

401
00:23:39,960 --> 00:23:48,090
so here we need to be a little bit more

402
00:23:44,028 --> 00:23:53,349
specific about how we are doing these

403
00:23:48,089 --> 00:23:56,470
dimensions so in here we need to have

404
00:23:53,349 --> 00:23:56,469
[Music]

405
00:24:01,220 --> 00:24:11,278
something like this

406
00:24:02,999 --> 00:24:12,960
I guess the result gives us that so

407
00:24:11,278 --> 00:24:24,269
we're sort of saying look the result

408
00:24:12,960 --> 00:24:29,629
with is this thing you know like this so

409
00:24:24,269 --> 00:24:34,980
then what we want to do is divide these

410
00:24:29,628 --> 00:24:37,439
and really that may be the backwards way

411
00:24:34,980 --> 00:24:43,740
to do it so you might really want to do

412
00:24:37,440 --> 00:24:51,149
it like this and then assign them at the

413
00:24:43,740 --> 00:24:53,868
end you know I'm saying and then in here

414
00:24:51,148 --> 00:25:00,168
you're gonna loop over whichever ones

415
00:24:53,868 --> 00:25:03,538
you've acted the new ones you know and

416
00:25:00,169 --> 00:25:05,730
this on this one on the other hand on

417
00:25:03,538 --> 00:25:12,388
the the advance is gonna be on the old

418
00:25:05,730 --> 00:25:16,798
ones you know and that would down sample

419
00:25:12,388 --> 00:25:20,058
in place and keep going as long as you

420
00:25:16,798 --> 00:25:22,859
wanted and the source pointer just

421
00:25:20,058 --> 00:25:24,028
remains the same because the the start

422
00:25:22,859 --> 00:25:26,490
of the image is always in the same place

423
00:25:24,028 --> 00:25:30,798
so that's fine but each time through it

424
00:25:26,490 --> 00:25:30,798
would contract contract contract right

425
00:25:35,180 --> 00:25:39,019
and I think that's really all there is

426
00:25:37,220 --> 00:25:44,690
to that I don't think there's much more

427
00:25:39,019 --> 00:25:46,750
to it so this one here we need to make

428
00:25:44,690 --> 00:25:54,190
it you know it's going to look like this

429
00:25:46,750 --> 00:25:59,349
and I think this is just like you know

430
00:25:54,190 --> 00:26:05,410
right image to HHA or something I mean

431
00:25:59,349 --> 00:26:09,849
and it takes probably all the same stuff

432
00:26:05,410 --> 00:26:14,720
tags tags so it's going to look at that

433
00:26:09,849 --> 00:26:16,669
the align percentage part we're gonna

434
00:26:14,720 --> 00:26:18,829
have to make some way of setting the

435
00:26:16,670 --> 00:26:20,120
align percentages and I think we're

436
00:26:18,829 --> 00:26:23,720
probably just gonna have to set them

437
00:26:20,119 --> 00:26:25,669
ourselves so I don't really know I'm not

438
00:26:23,720 --> 00:26:35,059
sure how we would get that information

439
00:26:25,670 --> 00:26:37,870
in any good way so that's that's a

440
00:26:35,059 --> 00:26:37,869
little bit tough

441
00:26:44,000 --> 00:26:50,599
I mean I guess what I would say is I

442
00:26:48,019 --> 00:26:52,549
feel like if the asset actually already

443
00:26:50,599 --> 00:26:54,139
existed we'd want to use that and you

444
00:26:52,549 --> 00:26:56,569
know honestly it looks like we already

445
00:26:54,140 --> 00:26:58,250
did so it looks like we already did

446
00:26:56,569 --> 00:26:59,779
preserve the align percentage so that's

447
00:26:58,250 --> 00:27:01,849
good so that way we could make a little

448
00:26:59,779 --> 00:27:04,250
tool in the game that sets the alignment

449
00:27:01,849 --> 00:27:06,589
points and adjust them and then it would

450
00:27:04,250 --> 00:27:09,650
write it back to the HHA and we wouldn't

451
00:27:06,589 --> 00:27:11,209
have to if you really are tacit it would

452
00:27:09,650 --> 00:27:12,980
just keep whatever your old aligned

453
00:27:11,210 --> 00:27:14,269
percentages which is probably what you

454
00:27:12,980 --> 00:27:16,279
want and then you'd only have to update

455
00:27:14,269 --> 00:27:18,139
it again if you actually wanted to

456
00:27:16,279 --> 00:27:19,369
change it because the artist had like

457
00:27:18,140 --> 00:27:24,050
change what it looks like or something

458
00:27:19,369 --> 00:27:26,029
and that seems good so when we come in

459
00:27:24,049 --> 00:27:28,039
here when we look at the data size the

460
00:27:26,029 --> 00:27:29,359
data size is going to be I mean we

461
00:27:28,039 --> 00:27:32,089
should just make this part of the image

462
00:27:29,359 --> 00:27:34,339
right like there should just be a call

463
00:27:32,089 --> 00:27:38,389
that says how big is the image that that

464
00:27:34,339 --> 00:27:42,009
seems pretty like straightforward you

465
00:27:38,390 --> 00:27:42,009
know you should be able to just do like

466
00:27:42,640 --> 00:27:45,970
something like

467
00:27:52,549 --> 00:28:00,109
pass me one of these and it just does

468
00:28:00,380 --> 00:28:11,750
right and that way I can just say how

469
00:28:07,049 --> 00:28:14,039
big is the thing we're saving you know

470
00:28:11,750 --> 00:28:16,380
and then it'll tell me and then I

471
00:28:14,039 --> 00:28:24,470
reserve them enough space to store that

472
00:28:16,380 --> 00:28:24,470
if I need to and and off I go

473
00:28:29,299 --> 00:28:34,470
translate the title index into tags it's

474
00:28:31,980 --> 00:28:36,690
the name of the file probably using

475
00:28:34,470 --> 00:28:40,829
something past 13 we're already doing

476
00:28:36,690 --> 00:28:43,680
that so that's to do is done it's not

477
00:28:40,829 --> 00:28:57,960
relevant anymore the bitmap dimensions

478
00:28:43,680 --> 00:29:03,810
here we know what they are and I think

479
00:28:57,960 --> 00:29:07,700
that just does it so image pixels is

480
00:29:03,809 --> 00:29:15,470
actually what we'd be writing out here

481
00:29:07,700 --> 00:29:15,470
and I think I think that's it

482
00:29:16,778 --> 00:29:20,069
so I believe that's correct

483
00:29:26,839 --> 00:29:31,279
I don't I don't think there's anything

484
00:29:29,420 --> 00:29:33,259
weird about that so I think we're pretty

485
00:29:31,279 --> 00:29:36,529
much good to go and so that function

486
00:29:33,259 --> 00:29:38,869
right image to HHA is what we would do

487
00:29:36,529 --> 00:29:43,450
in both cases that's what we would do

488
00:29:38,869 --> 00:29:45,649
here and it's also what we would do here

489
00:29:43,450 --> 00:29:47,090
well actually get this call serious we

490
00:29:45,650 --> 00:29:50,509
don't need to do that so we're really

491
00:29:47,089 --> 00:30:03,669
just down to this guy and it just needs

492
00:29:50,509 --> 00:30:03,670
to take this like region oops

493
00:30:03,789 --> 00:30:14,059
and so if we have one of these I guess I

494
00:30:12,799 --> 00:30:16,460
don't really need to set it equal in

495
00:30:14,059 --> 00:30:18,769
that case so we know the width is going

496
00:30:16,460 --> 00:30:20,630
to be the max X minus the min X and we

497
00:30:18,769 --> 00:30:24,230
know that the height is gonna be the max

498
00:30:20,630 --> 00:30:30,830
Y minus the min Y so at well you know

499
00:30:24,230 --> 00:30:38,200
what so here's the thing though without

500
00:30:30,829 --> 00:30:38,199
a stride that wouldn't actually work

501
00:30:47,109 --> 00:30:54,398
you know I'm saying because you can't

502
00:30:51,970 --> 00:30:56,649
take a slice of an image out if you

503
00:30:54,398 --> 00:31:02,408
don't record the fact that the stride

504
00:30:56,648 --> 00:31:05,709
was actually different so it kind of

505
00:31:02,409 --> 00:31:08,950
seems like in order to do it that way we

506
00:31:05,710 --> 00:31:10,720
would yeah we would need to have a way

507
00:31:08,950 --> 00:31:13,058
to do stride in there which we don't

508
00:31:10,720 --> 00:31:14,999
and similarly I feel like this routine

509
00:31:13,058 --> 00:31:17,710
would need that too right because

510
00:31:14,999 --> 00:31:24,069
otherwise it's going to overwrite that

511
00:31:17,710 --> 00:31:27,100
part of the image so yeah I mean I am

512
00:31:24,069 --> 00:31:31,599
not necessarily certain we care about

513
00:31:27,099 --> 00:31:33,998
that so I think I might not bother to do

514
00:31:31,599 --> 00:31:47,138
it that way I think I'd just copy it out

515
00:31:33,999 --> 00:31:48,730
oh and we do so I guess I was one ahead

516
00:31:47,138 --> 00:31:55,479
of myself because the thing that I just

517
00:31:48,730 --> 00:31:59,759
said I needed to do we do great I mean

518
00:31:55,480 --> 00:31:59,759
that's very nice

519
00:32:10,048 --> 00:32:17,650
the only thing is it doesn't copy it out

520
00:32:12,700 --> 00:32:19,269
once it knows how big it is which I kind

521
00:32:17,650 --> 00:32:29,159
of feel like it's what we would want to

522
00:32:19,269 --> 00:32:29,158
do ya know sans here

523
00:32:29,880 --> 00:32:37,059
so I feel like this is not really what

524
00:32:33,339 --> 00:32:44,079
we would want here and this should

525
00:32:37,058 --> 00:32:47,319
actually be like a separate loop that's

526
00:32:44,079 --> 00:32:54,369
what I say so I'm thinking that it's

527
00:32:47,319 --> 00:32:56,649
more like this you know so when we go to

528
00:32:54,369 --> 00:33:01,029
process one of these it actually gets

529
00:32:56,650 --> 00:33:04,470
pushed on here you know what I mean and

530
00:33:01,029 --> 00:33:08,048
this loop does the copy at that point

531
00:33:04,470 --> 00:33:13,600
now I realize that's a little piggy you

532
00:33:08,048 --> 00:33:18,929
know but I'm not super certain that

533
00:33:13,599 --> 00:33:21,308
there's a reason not to do it that way

534
00:33:18,929 --> 00:33:24,850
because that way you extract just the

535
00:33:21,308 --> 00:33:26,529
parts that you actually wanted the down

536
00:33:24,849 --> 00:33:28,389
sample I suppose could be made to do

537
00:33:26,529 --> 00:33:31,298
that as well but again it seems like it

538
00:33:28,390 --> 00:33:34,960
over complicates things a little bit so

539
00:33:31,298 --> 00:33:37,658
I feel like in here where we do this you

540
00:33:34,960 --> 00:33:41,370
know I would just assume do this twice

541
00:33:37,659 --> 00:33:54,789
so when we actually do get one of these

542
00:33:41,369 --> 00:33:59,859
we just do it like this and we don't

543
00:33:54,788 --> 00:34:05,140
need to do any of this work we're just

544
00:33:59,859 --> 00:34:07,349
doing that and this doesn't do any of

545
00:34:05,140 --> 00:34:07,350
this

546
00:34:09,639 --> 00:34:16,219
you know I mean so this is strictly a

547
00:34:12,920 --> 00:34:21,680
loop to check what the bounds are this

548
00:34:16,219 --> 00:34:26,179
is a loop to write out what we're

549
00:34:21,679 --> 00:34:31,159
looking for and in this case we're

550
00:34:26,179 --> 00:34:33,609
actually going to start at the min X you

551
00:34:31,159 --> 00:34:33,609
know what I mean

552
00:34:48,190 --> 00:35:00,470
and the only thing I think we want to do

553
00:34:52,789 --> 00:35:04,519
here is we wanted to have there be some

554
00:35:00,469 --> 00:35:06,649
extra space in the image right so when

555
00:35:04,519 --> 00:35:18,739
we actually go to take it we wanted to

556
00:35:06,650 --> 00:35:23,360
kind of Pat it out right so I mean I

557
00:35:18,739 --> 00:35:25,219
think we want to adjust these for that

558
00:35:23,360 --> 00:35:28,039
purpose you know what I mean

559
00:35:25,219 --> 00:35:31,000
so I think what we'd want to say here is

560
00:35:28,039 --> 00:35:31,000
just that like

561
00:35:39,260 --> 00:35:47,750
we assume this includes the padding when

562
00:35:43,039 --> 00:35:49,909
we actually compute the values I mean I

563
00:35:47,750 --> 00:35:51,829
mean I think that's what we want and you

564
00:35:49,909 --> 00:35:57,578
know we're gonna we're going to create

565
00:35:51,829 --> 00:35:57,579
this image here to store it

566
00:36:20,369 --> 00:36:38,700
I should probably just even make one of

567
00:36:23,460 --> 00:36:41,130
these right I mean why not if you want

568
00:36:38,699 --> 00:37:04,169
to make an image you can just do this

569
00:36:41,130 --> 00:37:05,700
and say well okay seem good that way

570
00:37:04,170 --> 00:37:08,338
those are always consistent with each

571
00:37:05,699 --> 00:37:10,649
other and you can just say here like

572
00:37:08,338 --> 00:37:15,239
what's the arena that you wanted to push

573
00:37:10,650 --> 00:37:20,599
them on that way here I can just say

574
00:37:15,239 --> 00:37:24,288
this is push image and you know the

575
00:37:20,599 --> 00:37:24,289
these are the dimensions

576
00:37:30,909 --> 00:37:37,230
and that should just work right oops

577
00:37:39,000 --> 00:37:47,920
okay so yeah

578
00:37:42,940 --> 00:37:49,179
moving along okay we'll have to resolve

579
00:37:47,920 --> 00:37:53,889
some of those but really want to look at

580
00:37:49,179 --> 00:37:55,449
that just just so just yet so if we're

581
00:37:53,889 --> 00:37:58,029
gonna do this right we push one of these

582
00:37:55,449 --> 00:38:01,328
on there we've got the pixel buffer now

583
00:37:58,030 --> 00:38:02,740
which we can write to we we could you

584
00:38:01,329 --> 00:38:04,510
know we probably should have a get pixel

585
00:38:02,739 --> 00:38:06,279
pointer thing as well here we can call

586
00:38:04,510 --> 00:38:09,730
on this we're just given an x and a y

587
00:38:06,280 --> 00:38:17,220
and it goes but all I was going to say

588
00:38:09,730 --> 00:38:20,048
here was actually that when we've done

589
00:38:17,219 --> 00:38:21,969
when we've done this border stuff I

590
00:38:20,048 --> 00:38:24,940
think what we want to do here is invert

591
00:38:21,969 --> 00:38:27,789
the sense of these and say look if it's

592
00:38:24,940 --> 00:38:30,548
greater than equal to border Jim then

593
00:38:27,789 --> 00:38:33,789
we're good we can just subtract border

594
00:38:30,548 --> 00:38:36,489
dim from it if it's not we issue an

595
00:38:33,789 --> 00:38:39,429
error and it's zero you know I'm saying

596
00:38:36,489 --> 00:38:41,169
and that means that we'll copy that

597
00:38:39,429 --> 00:38:43,719
region which i think is what we actually

598
00:38:41,170 --> 00:38:48,430
want to do there right we want we want

599
00:38:43,719 --> 00:38:50,828
to include the border you know and I

600
00:38:48,429 --> 00:38:52,868
think we weren't doing that we were

601
00:38:50,829 --> 00:38:54,849
extracting without including the border

602
00:38:52,869 --> 00:38:58,000
which is not actually what we wanted to

603
00:38:54,849 --> 00:39:04,710
do so I think this is actually what's

604
00:38:58,000 --> 00:39:04,710
supposed to happen so you know again

605
00:39:07,789 --> 00:39:32,150
I guess I should say since this is the

606
00:39:25,369 --> 00:39:34,369
maximum value you can have if you're

607
00:39:32,150 --> 00:39:38,690
less than that you're fine if you're not

608
00:39:34,369 --> 00:39:50,389
then you need to write set it to two one

609
00:39:38,690 --> 00:39:54,619
- well no cuz that's an interesting

610
00:39:50,389 --> 00:39:57,920
question so in this case max X is set to

611
00:39:54,619 --> 00:40:01,039
what exactly it's set to the one year

612
00:39:57,920 --> 00:40:04,010
act the pixel you're actually on not one

613
00:40:01,039 --> 00:40:06,679
passed the pixel you're actually on so

614
00:40:04,010 --> 00:40:09,320
in this case yeah it has to be less than

615
00:40:06,679 --> 00:40:13,179
it and a half set it but what that means

616
00:40:09,320 --> 00:40:16,460
is that in here where we do Max and min

617
00:40:13,179 --> 00:40:19,119
it's actually a plus one right because

618
00:40:16,460 --> 00:40:26,510
we're saying the max X and the max Y are

619
00:40:19,119 --> 00:40:28,309
actually not are there they would both

620
00:40:26,510 --> 00:40:31,550
be set to the same value if there's one

621
00:40:28,309 --> 00:40:33,170
pixel which means that when you subtract

622
00:40:31,550 --> 00:40:36,920
the two you'll get zero but you really

623
00:40:33,170 --> 00:40:42,070
wanted to represent a width of 1 so that

624
00:40:36,920 --> 00:40:46,659
is why like I have to add one in that

625
00:40:42,070 --> 00:40:46,660
part of it if that makes sense

626
00:40:54,039 --> 00:40:58,028
of course then I think about that's

627
00:40:55,940 --> 00:41:04,150
that's still not right for this part

628
00:40:58,028 --> 00:41:04,150
what I actually want to do here is say I

629
00:41:08,858 --> 00:41:15,348
guess this is yeah this is that what I

630
00:41:13,789 --> 00:41:16,940
really want to say here is look if it's

631
00:41:15,349 --> 00:41:20,240
less than that then you can you can

632
00:41:16,940 --> 00:41:23,690
increment it if it's not then you

633
00:41:20,239 --> 00:41:28,879
actually need whatever that tyldum is

634
00:41:23,690 --> 00:41:38,599
and this this tyldum here right it needs

635
00:41:28,880 --> 00:41:40,250
to be that minus one so another part of

636
00:41:38,599 --> 00:41:45,019
the problem here is these aren't right

637
00:41:40,250 --> 00:41:50,119
either because we need to do the top

638
00:41:45,018 --> 00:41:54,768
corner of the image plus that so we need

639
00:41:50,119 --> 00:41:55,338
we actually need this as well right that

640
00:41:54,768 --> 00:42:01,429
makes sense

641
00:41:55,338 --> 00:42:10,900
we need like that Plus this to step to

642
00:42:01,429 --> 00:42:17,149
the tile and similarly for min X we need

643
00:42:10,900 --> 00:42:20,750
this right so we need to step to the X

644
00:42:17,150 --> 00:42:24,230
in my index tile and then into the min X

645
00:42:20,750 --> 00:42:26,920
min why I believe because these are

646
00:42:24,230 --> 00:42:33,849
actually not absolute they're relative

647
00:42:26,920 --> 00:42:36,920
you know for whatever that's worth so

648
00:42:33,849 --> 00:42:40,838
all right so when that does the scan off

649
00:42:36,920 --> 00:42:43,789
we go and this needs to happen in the Y

650
00:42:40,838 --> 00:42:45,798
exactly the same way so if it's greater

651
00:42:43,789 --> 00:42:49,509
than the border dim here then that's

652
00:42:45,798 --> 00:42:54,798
fine we can just subtract the border dim

653
00:42:49,509 --> 00:42:56,659
otherwise I've got to be 0 maybe I'll

654
00:42:54,798 --> 00:42:58,130
put that first since might as well put

655
00:42:56,659 --> 00:43:00,179
the action first and put the error

656
00:42:58,130 --> 00:43:02,460
message second

657
00:43:00,179 --> 00:43:07,679
and then again same thing here if we're

658
00:43:02,460 --> 00:43:13,170
within the tolerance there we'll just

659
00:43:07,679 --> 00:43:15,389
set our max wide it looks right to be

660
00:43:13,170 --> 00:43:18,750
out by however much the border is

661
00:43:15,389 --> 00:43:24,059
otherwise we have to set it till the

662
00:43:18,750 --> 00:43:32,940
tiled n minus one which is you know the

663
00:43:24,059 --> 00:43:35,190
furthest out we can set it yet another

664
00:43:32,940 --> 00:43:37,170
way there's probably a better way to do

665
00:43:35,190 --> 00:43:39,360
that too another way to do it is to

666
00:43:37,170 --> 00:43:42,119
inflate all of these and then test but

667
00:43:39,360 --> 00:43:43,530
you know six of one half dozen the other

668
00:43:42,119 --> 00:43:44,579
and this one of you means you can use

669
00:43:43,530 --> 00:43:47,580
you thirty two instead of nest

670
00:43:44,579 --> 00:43:51,539
thirty-two so that seems good so that

671
00:43:47,579 --> 00:43:54,900
should extract to a separate image and

672
00:43:51,539 --> 00:43:57,779
then process when we press the single

673
00:43:54,900 --> 00:44:01,200
tile import we need to be able to

674
00:43:57,780 --> 00:44:04,019
specify the source in terms of the

675
00:44:01,199 --> 00:44:06,059
import tiles which means we need the X

676
00:44:04,019 --> 00:44:08,460
index and the Y index to get passed here

677
00:44:06,059 --> 00:44:15,929
so when we Pat process single tile

678
00:44:08,460 --> 00:44:21,380
import we will pass in these are tile X

679
00:44:15,929 --> 00:44:26,629
and X and tile line index right and

680
00:44:21,380 --> 00:44:29,430
those won't actually take on any value

681
00:44:26,630 --> 00:44:31,320
of importance when we're doing just one

682
00:44:29,429 --> 00:44:33,869
but when we're going from a grid they

683
00:44:31,320 --> 00:44:35,820
will they're just there to store which

684
00:44:33,869 --> 00:44:44,690
part of the grid it came from you know

685
00:44:35,820 --> 00:44:44,690
what I mean so in here right this part

686
00:44:45,769 --> 00:44:54,079
has that stored in this tube

687
00:45:03,019 --> 00:45:15,440
let's see what else we got these are

688
00:45:05,880 --> 00:45:27,599
just naming differences let's see and

689
00:45:15,440 --> 00:45:30,778
these are just that so the grid tag

690
00:45:27,599 --> 00:45:35,160
array information here really is stuff

691
00:45:30,778 --> 00:45:37,199
that should probably be separated so it

692
00:45:35,159 --> 00:45:38,818
could be passed as a separate thing is

693
00:45:37,199 --> 00:45:41,399
what I'm guessing

694
00:45:38,818 --> 00:45:45,318
so in here where we have the you know

695
00:45:41,400 --> 00:45:51,500
like this stuff this should be like

696
00:45:45,318 --> 00:45:51,500
import source info or something

697
00:45:57,500 --> 00:46:05,489
something like that so that information

698
00:46:02,599 --> 00:46:08,809
comes off of like another thing that we

699
00:46:05,489 --> 00:46:13,649
could fill out separately as necessary

700
00:46:08,809 --> 00:46:15,390
and really maybe would be more more

701
00:46:13,650 --> 00:46:18,028
appropriate to not have it on there at

702
00:46:15,389 --> 00:46:27,230
all and you just pass it separately

703
00:46:18,028 --> 00:46:34,019
right so something like this where

704
00:46:27,230 --> 00:46:39,269
you've you've got the tags and the info

705
00:46:34,019 --> 00:46:42,809
and off you go right so let's see here

706
00:46:39,269 --> 00:46:44,880
we want to pass those two things when we

707
00:46:42,809 --> 00:46:46,230
write things to HHA which means that

708
00:46:44,880 --> 00:46:52,798
they would have to be passed here as

709
00:46:46,230 --> 00:46:55,949
well like so and so that looks like this

710
00:46:52,798 --> 00:47:01,949
and that means this would also take one

711
00:46:55,949 --> 00:47:04,109
of those and whenever it calls through

712
00:47:01,949 --> 00:47:14,009
to process the import it's going to pass

713
00:47:04,110 --> 00:47:18,570
that info as well right so the grid tag

714
00:47:14,010 --> 00:47:21,680
array I'm not sure where it actually

715
00:47:18,570 --> 00:47:24,890
sets that information

716
00:47:21,679 --> 00:47:24,889
[Music]

717
00:47:52,780 --> 00:47:57,869
I'll be honest I'm not sure what we're

718
00:47:55,210 --> 00:47:57,869
doing here

719
00:48:05,469 --> 00:48:10,299
I mean doesn't even look like we set any

720
00:48:08,289 --> 00:48:19,449
of that stuff so we didn't set the name

721
00:48:10,300 --> 00:48:26,800
the description or the author right we

722
00:48:19,449 --> 00:48:29,379
basically set nothing so I think this

723
00:48:26,800 --> 00:48:33,550
was just kind of a hack to test whether

724
00:48:29,380 --> 00:48:36,700
that thing was working and it doesn't

725
00:48:33,550 --> 00:48:43,510
really look like we did anything with it

726
00:48:36,699 --> 00:48:45,939
right so I think yeah like we just never

727
00:48:43,510 --> 00:48:52,660
did anything here other than test it

728
00:48:45,940 --> 00:48:56,460
which is what this was and so I mean you

729
00:48:52,659 --> 00:49:02,828
know this is about all we would have had

730
00:48:56,460 --> 00:49:11,349
is that so we want to actually start

731
00:49:02,829 --> 00:49:17,310
filling that out I think we've got most

732
00:49:11,349 --> 00:49:17,309
of the flow right now on that import

733
00:49:17,739 --> 00:49:29,058
[Music]

734
00:49:19,400 --> 00:49:33,440
we have source image what else pixel

735
00:49:29,059 --> 00:49:36,670
buffer for downsample yeah so in this

736
00:49:33,440 --> 00:49:43,009
case we are trying to down sample from

737
00:49:36,670 --> 00:49:49,480
result pixels we don't need to convert

738
00:49:43,009 --> 00:49:49,480
those to you for your twos however and

739
00:49:52,239 --> 00:50:02,959
here I think that's a little good pixel

740
00:49:58,699 --> 00:50:09,108
buffer dest pixel this is tile image

741
00:50:02,960 --> 00:50:15,199
pixels and that should work as well I

742
00:50:09,108 --> 00:50:27,380
think I hope processed out import

743
00:50:15,199 --> 00:50:32,719
identify are not found that's true we

744
00:50:27,380 --> 00:50:36,108
can pass the info along here and now we

745
00:50:32,719 --> 00:50:38,929
sort of have to do when we do update

746
00:50:36,108 --> 00:50:44,318
package from PNG is we're gonna have to

747
00:50:38,929 --> 00:50:44,318
make this thing know what's going on now

748
00:50:49,000 --> 00:50:52,880
we should probably just test the code

749
00:50:51,440 --> 00:50:54,889
path that we have right now because they

750
00:50:52,880 --> 00:50:56,420
made a substantial number of changes and

751
00:50:54,889 --> 00:50:57,799
probably broke some things so we

752
00:50:56,420 --> 00:50:59,510
probably should just step through their

753
00:50:57,800 --> 00:51:05,240
I should probably compile in debug mode

754
00:50:59,510 --> 00:51:07,130
as well and just make sure that's

755
00:51:05,239 --> 00:51:08,389
working first but then I think we're

756
00:51:07,130 --> 00:51:12,349
ready to go because I think that

757
00:51:08,389 --> 00:51:14,659
actually yes like I said so I think we

758
00:51:12,349 --> 00:51:18,769
want to just get that debug cleaned up

759
00:51:14,659 --> 00:51:20,809
and then I think we're ready to go with

760
00:51:18,769 --> 00:51:23,929
a single tile import so we can just call

761
00:51:20,809 --> 00:51:29,389
that and pass it the tags that we want

762
00:51:23,929 --> 00:51:32,409
to associate with with it and that will

763
00:51:29,389 --> 00:51:35,420
put things on the walls like we wanted

764
00:51:32,409 --> 00:51:38,569
and I think that's basically it so I

765
00:51:35,420 --> 00:51:40,280
think that's the work we needed to do so

766
00:51:38,570 --> 00:51:43,519
let's just go ahead and debug it and

767
00:51:40,280 --> 00:51:47,150
then I think we're you know we're done

768
00:51:43,519 --> 00:51:50,030
with that and we'll have to move on to

769
00:51:47,150 --> 00:51:51,740
the next step which is getting the other

770
00:51:50,030 --> 00:51:53,180
things but got plenty debugging to do

771
00:51:51,739 --> 00:51:58,909
here so let's just go ahead and get that

772
00:51:53,179 --> 00:52:01,909
going so let's start by looking at what

773
00:51:58,909 --> 00:52:03,649
we ended up with here so we came through

774
00:52:01,909 --> 00:52:05,420
here and I was saying we need to get a

775
00:52:03,650 --> 00:52:08,119
tiled image that can extract these

776
00:52:05,420 --> 00:52:12,110
things and so it looks like we did that

777
00:52:08,119 --> 00:52:16,009
okay so here's our table image 840 by

778
00:52:12,110 --> 00:52:21,620
704 so you know does that does it make

779
00:52:16,010 --> 00:52:23,090
sense with doesn't it looking at these

780
00:52:21,619 --> 00:52:24,619
bounds here it certainly makes sense

781
00:52:23,090 --> 00:52:26,930
that looks like how big of an image we

782
00:52:24,619 --> 00:52:30,559
would have wanted to a certain degree

783
00:52:26,929 --> 00:52:33,019
right so that seems fine and the

784
00:52:30,559 --> 00:52:35,389
question here is you know we're not

785
00:52:33,019 --> 00:52:36,789
faulting on the read so we got the

786
00:52:35,389 --> 00:52:41,569
source code we're focusing on the right

787
00:52:36,789 --> 00:52:44,659
so you know what's going wrong well you

788
00:52:41,570 --> 00:52:46,190
know this one's a little bit of a fish

789
00:52:44,659 --> 00:52:48,079
in a barrel probably because you can see

790
00:52:46,190 --> 00:52:49,789
like I just didn't update the routine to

791
00:52:48,079 --> 00:52:52,789
actually step over the image that we're

792
00:52:49,789 --> 00:52:54,769
working with it's still using tyldum

793
00:52:52,789 --> 00:52:56,420
which is no longer applicable because I

794
00:52:54,769 --> 00:52:59,929
I'm now actually extracting the

795
00:52:56,420 --> 00:53:02,210
rectangle not just an arbitrary tile

796
00:52:59,929 --> 00:53:05,029
dimension and so

797
00:53:02,210 --> 00:53:06,980
you know there's not a lot of mystery to

798
00:53:05,030 --> 00:53:10,670
why that wouldn't work because it's just

799
00:53:06,980 --> 00:53:14,108
totally wrong so if we actually step

800
00:53:10,670 --> 00:53:16,760
over the image itself and do it that way

801
00:53:14,108 --> 00:53:18,889
then in theory we should be in better

802
00:53:16,760 --> 00:53:24,290
shape at least as far as the crashing is

803
00:53:18,889 --> 00:53:25,309
concerned so let's try that out and you

804
00:53:24,289 --> 00:53:27,050
know it's a little bit hard for us to

805
00:53:25,309 --> 00:53:30,108
see whether something worked or not but

806
00:53:27,050 --> 00:53:32,150
you know we'll we'll find out I guess so

807
00:53:30,108 --> 00:53:35,739
it looks like it actually did work to be

808
00:53:32,150 --> 00:53:35,740
honest because that's it right

809
00:53:36,608 --> 00:53:44,329
so it's close to working but what I will

810
00:53:40,338 --> 00:53:46,460
say is it did not it does not seem to

811
00:53:44,329 --> 00:53:49,670
have associated things quite right

812
00:53:46,460 --> 00:53:51,260
because it should show different

813
00:53:49,670 --> 00:53:53,510
directions and it doesn't look like it's

814
00:53:51,260 --> 00:53:56,510
showing different directions right now

815
00:53:53,510 --> 00:54:00,109
so I'm not certain it actually did do

816
00:53:56,510 --> 00:54:01,730
quite what it should have done and we

817
00:54:00,108 --> 00:54:04,460
probably want to take a look at that a

818
00:54:01,730 --> 00:54:05,900
little more carefully one thing I would

819
00:54:04,460 --> 00:54:09,429
be interested in is whether or not

820
00:54:05,900 --> 00:54:09,430
that's an offset problem

821
00:54:12,130 --> 00:54:17,349
I'm curious here

822
00:54:26,280 --> 00:54:30,760
so I think we're reading from the right

823
00:54:29,260 --> 00:54:35,470
place though because if we look at where

824
00:54:30,760 --> 00:54:37,270
we're reading here image dot pixels we

825
00:54:35,469 --> 00:54:41,349
are offsetting by the tile dimensions

826
00:54:37,269 --> 00:54:47,250
and then by the rectangle area that we

827
00:54:41,349 --> 00:54:50,500
want to extract so it does seem in

828
00:54:47,250 --> 00:54:59,400
general that there's nothing weird going

829
00:54:50,500 --> 00:55:02,400
on there right that all seems totally

830
00:54:59,400 --> 00:55:02,400
fine

831
00:55:10,239 --> 00:55:26,559
yeah and then when we do this and we do

832
00:55:14,119 --> 00:55:26,559
our down sample and come through here so

833
00:55:29,228 --> 00:55:33,728
how are we passing the tags

834
00:55:42,889 --> 00:55:50,940
so we did properly extract the tags

835
00:55:47,269 --> 00:55:55,400
right and we're gonna use this on on the

836
00:55:50,940 --> 00:55:55,400
one on this thing properly it would seem

837
00:55:55,610 --> 00:56:09,870
yeah I can't say I really see what why

838
00:56:07,500 --> 00:56:18,900
that would be failing I want to take a

839
00:56:09,869 --> 00:56:21,119
quick look at the hand here so just

840
00:56:18,900 --> 00:56:23,550
looking at what the image actually is ie

841
00:56:21,119 --> 00:56:26,059
I want to open it actually in cube so I

842
00:56:23,550 --> 00:56:29,160
can see without all the Microsoft

843
00:56:26,059 --> 00:56:32,489
nonsense going on there I'd like to see

844
00:56:29,159 --> 00:56:38,549
what the image looks like in terms of

845
00:56:32,489 --> 00:56:39,899
the yeah okay so it looks like let's

846
00:56:38,550 --> 00:56:45,150
just let's just take a quick look at

847
00:56:39,900 --> 00:56:47,690
which one we're getting out of these

848
00:56:45,150 --> 00:56:47,690
four

849
00:57:01,969 --> 00:57:07,659
so there is more than there are more

850
00:57:04,579 --> 00:57:18,190
there's there are more than one of them

851
00:57:07,659 --> 00:57:18,190
right happening there

852
00:57:24,530 --> 00:57:36,769
so when I push up I am getting the one

853
00:57:32,300 --> 00:57:37,760
presumably that well actually do I I

854
00:57:36,769 --> 00:57:42,889
don't know which one of those is

855
00:57:37,760 --> 00:57:48,050
supposed to be the up direction be

856
00:57:42,889 --> 00:57:52,789
completely honest with you let me look

857
00:57:48,050 --> 00:57:57,590
at the because we had a template in here

858
00:57:52,789 --> 00:58:02,659
right it's so it should be that one so

859
00:57:57,590 --> 00:58:09,530
it's down left up right or I guess from

860
00:58:02,659 --> 00:58:21,889
the top down it's right up down right up

861
00:58:09,530 --> 00:58:28,490
left down so let's see right should be

862
00:58:21,889 --> 00:58:31,539
that one and it's actually is that one

863
00:58:28,489 --> 00:58:38,259
but it's upside down

864
00:58:31,539 --> 00:58:38,259
right down

865
00:58:43,699 --> 00:58:57,299
you see it looks like they're just

866
00:58:46,019 --> 00:58:58,800
upside-down right so it does look like

867
00:58:57,300 --> 00:59:01,950
it's picking the right ones but it looks

868
00:58:58,800 --> 00:59:04,740
like they're upside down which I'll be

869
00:59:01,949 --> 00:59:06,989
honest I don't actually know which way

870
00:59:04,739 --> 00:59:08,969
we were orienting this thing in the

871
00:59:06,989 --> 00:59:15,089
first place like I have no idea what the

872
00:59:08,969 --> 00:59:26,369
rotation on the hand even was so that's

873
00:59:15,090 --> 00:59:27,870
a little bit difficult to even say but

874
00:59:26,369 --> 00:59:30,480
we may have a problem there where we're

875
00:59:27,869 --> 00:59:31,109
interpreting the PNG like the wrong way

876
00:59:30,480 --> 00:59:34,039
round

877
00:59:31,110 --> 00:59:34,039
yeah I'm saying

878
00:59:42,280 --> 00:59:48,160
so there's some other things about this

879
00:59:44,320 --> 00:59:50,289
just real quick I probably will move on

880
00:59:48,159 --> 00:59:52,839
to the room based stuff and then solve

881
00:59:50,289 --> 00:59:54,639
this a little bit later but there's

882
00:59:52,840 --> 01:00:04,630
another thing about this that's a little

883
00:59:54,639 --> 01:00:07,659
bit squirrely which is maybe maybe the

884
01:00:04,630 --> 01:00:09,820
resizing really shouldn't do what I'm

885
01:00:07,659 --> 01:00:14,170
doing maybe we should just only resize a

886
01:00:09,820 --> 01:00:16,420
fixed number of times and the reason is

887
01:00:14,170 --> 01:00:17,829
because if some of these can shrink more

888
01:00:16,420 --> 01:00:21,970
that have to shrink more than others

889
01:00:17,829 --> 01:00:23,739
then the sizing that we use they'll be

890
01:00:21,969 --> 01:00:29,679
off so we need to kind of shrink them

891
01:00:23,739 --> 01:00:37,719
all by the same amount if you will and

892
01:00:29,679 --> 01:00:40,809
so yeah like I may want to change the

893
01:00:37,719 --> 01:00:43,089
down sample to fit part of things and

894
01:00:40,809 --> 01:00:46,509
say that down sample to fit actually

895
01:00:43,090 --> 01:00:54,970
maybe you shouldn't do this instead

896
01:00:46,510 --> 01:00:57,750
should just just do the twice to do

897
01:00:54,969 --> 01:00:57,750
Casey

898
01:00:58,150 --> 01:01:08,200
should we really do the down sample to

899
01:01:03,010 --> 01:01:11,340
fit because it seems like that is

900
01:01:08,199 --> 01:01:11,339
actually bad

901
01:01:20,480 --> 01:01:29,849
for like the things you know just it

902
01:01:26,010 --> 01:01:33,170
seems like yeah we it seems like we need

903
01:01:29,849 --> 01:01:33,170
to do this a little bit differently so

904
01:01:33,349 --> 01:01:41,039
what I'm thinking is is maybe we say

905
01:01:37,070 --> 01:01:42,809
what those dimensions actually are so do

906
01:01:41,039 --> 01:01:50,989
we have a V to you in this code base I

907
01:01:42,809 --> 01:01:50,989
don't really remember now

908
01:01:54,269 --> 01:02:03,250
we know what I want to do is basically

909
01:02:00,429 --> 01:02:06,548
ask what the dimensions of a thing would

910
01:02:03,250 --> 01:02:09,639
be like so I want to do a thing here

911
01:02:06,548 --> 01:02:20,530
that would say something like oh well

912
01:02:09,639 --> 01:02:22,568
actually look I basically want to ask

913
01:02:20,530 --> 01:02:26,048
how many times to downsample something

914
01:02:22,568 --> 01:02:27,400
and then maybe pass that in so maybe

915
01:02:26,048 --> 01:02:33,429
what I want to do is this

916
01:02:27,400 --> 01:02:36,940
get down sample count you know and say

917
01:02:33,429 --> 01:02:52,358
all right you know you say that and you

918
01:02:36,940 --> 01:02:56,369
say you say look you don't need to down

919
01:02:52,358 --> 01:03:00,420
sample it at all we're gonna keep going

920
01:02:56,369 --> 01:03:03,910
here we'll say with equal source with

921
01:03:00,420 --> 01:03:13,900
height equal source height we'll just

922
01:03:03,909 --> 01:03:17,368
say keep going until you hit the desired

923
01:03:13,900 --> 01:03:17,369
amount and this could be done

924
01:03:24,949 --> 01:03:28,139
we could do this in close form but

925
01:03:26,940 --> 01:03:30,960
instead we'll just do a loop like we

926
01:03:28,139 --> 01:03:32,309
could just instead do a scan and say

927
01:03:30,960 --> 01:03:33,750
look how many times we're gonna have to

928
01:03:32,309 --> 01:03:35,429
down stable this thing in order to fit

929
01:03:33,750 --> 01:03:37,380
in there then we can just say like

930
01:03:35,429 --> 01:03:40,019
that's how many times we want the down

931
01:03:37,380 --> 01:03:43,410
sample it so that we can down sample to

932
01:03:40,019 --> 01:03:45,599
fit if we want but we'll just say

933
01:03:43,409 --> 01:03:47,609
actually I can just say look down sample

934
01:03:45,599 --> 01:03:50,130
and this is how many times we want a

935
01:03:47,610 --> 01:03:55,200
down sample so then here this is just

936
01:03:50,130 --> 01:03:57,300
like alright for down sample index

937
01:03:55,199 --> 01:03:59,849
equals zero down sample index lesson

938
01:03:57,300 --> 01:04:06,420
down sample account plus plus down

939
01:03:59,849 --> 01:04:11,429
sample index go nuts and it'll just do

940
01:04:06,420 --> 01:04:13,769
that many down samples right that seems

941
01:04:11,429 --> 01:04:15,839
a little bit better because then that we

942
01:04:13,769 --> 01:04:19,170
have the opportunity to be more specific

943
01:04:15,840 --> 01:04:21,390
if we say processed I'll import here and

944
01:04:19,170 --> 01:04:24,599
we do the down sample to fit inside the

945
01:04:21,389 --> 01:04:27,629
sprite thing instead of doing it that

946
01:04:24,599 --> 01:04:31,319
way we could say instead we know how

947
01:04:27,630 --> 01:04:32,730
much we want to down sample ahead of

948
01:04:31,320 --> 01:04:35,070
time and we're going to use that or

949
01:04:32,730 --> 01:04:39,449
something right and so I'm gonna take

950
01:04:35,070 --> 01:04:40,650
the opportunity here to just go that is

951
01:04:39,449 --> 01:04:42,089
going to be different between the two

952
01:04:40,650 --> 01:04:44,160
paths now so we're gonna do them

953
01:04:42,090 --> 01:04:48,240
separately

954
01:04:44,159 --> 01:04:56,730
and so this one will actually do the

955
01:04:48,239 --> 01:05:00,449
down sample to fit call by asking is it

956
01:04:56,730 --> 01:05:05,130
a get down sample count for fit

957
01:05:00,449 --> 01:05:07,829
maybe so here we're just gonna say yeah

958
01:05:05,130 --> 01:05:15,059
look you need to tell us how to fit this

959
01:05:07,829 --> 01:05:17,909
thing in and then we're gonna do that so

960
01:05:15,059 --> 01:05:21,299
that'll do that and then we'll process

961
01:05:17,909 --> 01:05:28,049
it we don't need these because they're

962
01:05:21,300 --> 01:05:31,200
always zero right so a single tile

963
01:05:28,050 --> 01:05:32,850
import does that but the multi tell

964
01:05:31,199 --> 01:05:35,129
import needs to scale all of these

965
01:05:32,849 --> 01:05:36,358
things the same way so what it's going

966
01:05:35,130 --> 01:05:39,028
to do instead is

967
01:05:36,358 --> 01:05:41,009
say downsample this thing always two

968
01:05:39,028 --> 01:05:44,130
times because that's our definition of

969
01:05:41,009 --> 01:05:46,230
what you would do right another way to

970
01:05:44,130 --> 01:05:48,838
say that would be down sample it to make

971
01:05:46,230 --> 01:05:51,269
sure that you fit this thing but just

972
01:05:48,838 --> 01:05:53,608
based on the import tyldum so instead we

973
01:05:51,268 --> 01:05:57,209
could say look the down sample count is

974
01:05:53,608 --> 01:06:08,659
based on this so if you were going to

975
01:05:57,210 --> 01:06:08,659
try to fit a an example image right so

976
01:06:15,259 --> 01:06:24,420
so something that was the tile dim right

977
01:06:18,989 --> 01:06:28,470
just the test image maybe we'll call

978
01:06:24,420 --> 01:06:30,720
this size test so if you were going to

979
01:06:28,469 --> 01:06:33,568
try and do the science test image how

980
01:06:30,719 --> 01:06:38,939
many times would you have to sample that

981
01:06:33,568 --> 01:06:42,748
down in order to get to what would fit

982
01:06:38,940 --> 01:06:46,829
and then we will sample everybody by

983
01:06:42,748 --> 01:06:48,899
that and that way all of the sprites

984
01:06:46,829 --> 01:06:50,220
shrink uniformly and you won't get one

985
01:06:48,900 --> 01:06:52,230
of them that happens to just have a

986
01:06:50,219 --> 01:06:54,328
shape that fits better sampling

987
01:06:52,230 --> 01:06:59,190
differently which is what I didn't want

988
01:06:54,329 --> 01:07:05,940
to have happen right so we can get rid

989
01:06:59,190 --> 01:07:13,650
of this now and say this is that this is

990
01:07:05,940 --> 01:07:18,088
that and these are lows and then we've

991
01:07:13,650 --> 01:07:19,410
got both paths right so I think that's

992
01:07:18,088 --> 01:07:22,318
okay

993
01:07:19,409 --> 01:07:24,058
I don't think there's anything else in

994
01:07:22,318 --> 01:07:27,509
particular we need to worry about there

995
01:07:24,059 --> 01:07:30,900
I and off we go

996
01:07:27,509 --> 01:07:35,099
so John sampling here is the tile image

997
01:07:30,900 --> 01:07:37,108
not the source image and actually this

998
01:07:35,099 --> 01:07:39,380
is not the tile image it's the best

999
01:07:37,108 --> 01:07:44,719
image

1000
01:07:39,380 --> 01:07:46,579
I think that's all good we'll see in a

1001
01:07:44,719 --> 01:07:50,449
second so let me go ahead and just

1002
01:07:46,579 --> 01:07:54,559
verify that that works at all let me go

1003
01:07:50,449 --> 01:07:56,210
local HHA and then create one I am a

1004
01:07:54,559 --> 01:07:59,509
little concerned that everything's

1005
01:07:56,210 --> 01:08:01,818
upside-down like I said originally so I

1006
01:07:59,509 --> 01:08:05,079
think we may have a bug in terms of how

1007
01:08:01,818 --> 01:08:06,949
we're interpreting our images but that's

1008
01:08:05,079 --> 01:08:10,818
you know neither here nor there

1009
01:08:06,949 --> 01:08:14,449
um so now what I'd like to do is go

1010
01:08:10,818 --> 01:08:24,350
ahead and and import those other the

1011
01:08:14,449 --> 01:08:28,429
block sort I'm looking for the I want to

1012
01:08:24,350 --> 01:08:32,359
import those blocks that go on the

1013
01:08:28,429 --> 01:08:34,908
orphanage walls right so here we've got

1014
01:08:32,359 --> 01:08:37,159
a multi tile import we now know we also

1015
01:08:34,908 --> 01:08:38,719
have the ability to do a single tile

1016
01:08:37,158 --> 01:08:41,000
import and that's what's gonna happen

1017
01:08:38,719 --> 01:08:49,789
with these because they don't obey that

1018
01:08:41,000 --> 01:08:51,619
same tiling process so if we were gonna

1019
01:08:49,789 --> 01:08:55,579
have one of those coming here it would

1020
01:08:51,619 --> 01:08:57,500
look basically the same but again it

1021
01:08:55,579 --> 01:09:11,929
would it would just use one of the tags

1022
01:08:57,500 --> 01:09:14,420
here and so this are not really sure why

1023
01:09:11,929 --> 01:09:17,569
we just why we don't just have this

1024
01:09:14,420 --> 01:09:18,840
welded in there I think we wouldn't want

1025
01:09:17,569 --> 01:09:22,050
to

1026
01:09:18,840 --> 01:09:22,050
[Music]

1027
01:09:27,670 --> 01:09:33,250
and so here's one thing maybe I did kind

1028
01:09:30,789 --> 01:09:35,260
of was a little hasty there so if we

1029
01:09:33,250 --> 01:09:37,659
always wanted to just pass a grid tag

1030
01:09:35,260 --> 01:09:43,329
array and it just only has one in the

1031
01:09:37,659 --> 01:09:46,739
zero zero slot that might simplify our

1032
01:09:43,329 --> 01:09:46,739
lives here a little bit

1033
01:10:08,449 --> 01:10:12,670
but I'm just not sure I feel about it

1034
01:10:15,069 --> 01:10:20,539
I'm gonna go ahead and say let's not

1035
01:10:17,659 --> 01:10:25,849
bother with this garbage right now

1036
01:10:20,539 --> 01:10:29,479
anyway I would like to know what the

1037
01:10:25,850 --> 01:10:33,740
result here is for because no one's

1038
01:10:29,479 --> 01:10:38,689
using it so that doesn't really make a

1039
01:10:33,739 --> 01:10:40,130
lot of sense either so I would say but

1040
01:10:38,689 --> 01:10:47,329
if that's what we're doing let's just

1041
01:10:40,130 --> 01:10:51,289
paste this in here and so if we make a

1042
01:10:47,329 --> 01:10:55,640
read stream here I want to just have

1043
01:10:51,289 --> 01:10:59,989
some way of taking you know taking this

1044
01:10:55,640 --> 01:11:02,210
and and using it it we have pretty much

1045
01:10:59,989 --> 01:11:05,979
all of the things that we actually

1046
01:11:02,210 --> 01:11:12,439
needed the import grid tags part of this

1047
01:11:05,979 --> 01:11:16,089
is just exactly right the file part I

1048
01:11:12,439 --> 01:11:16,089
think just works

1049
01:11:16,180 --> 01:11:19,180
probably

1050
01:11:26,899 --> 01:11:33,719
yeah that that seems like it would just

1051
01:11:31,619 --> 01:11:35,640
work and so what we really need to do is

1052
01:11:33,720 --> 01:11:38,159
just have the way of differentiate

1053
01:11:35,640 --> 01:11:41,490
between these based on the name so file

1054
01:11:38,159 --> 01:11:48,510
buffer is the thing that goes right here

1055
01:11:41,489 --> 01:11:52,289
I believe I'm not sure where that's

1056
01:11:48,510 --> 01:11:53,880
coming from though let me back this out

1057
01:11:52,289 --> 01:12:00,060
one level so I can look at exactly what

1058
01:11:53,880 --> 01:12:05,510
we were passing down there so we're

1059
01:12:00,060 --> 01:12:08,510
passing contents is its file buffer

1060
01:12:05,510 --> 01:12:08,510
right

1061
01:12:12,479 --> 01:12:18,070
so we want file buffer to be what we

1062
01:12:16,090 --> 01:12:31,769
made the reason amount of the asset

1063
01:12:18,069 --> 01:12:31,768
source file is is match

1064
01:12:36,319 --> 01:12:39,319
right

1065
01:12:41,470 --> 01:12:53,170
so in here the asset source file that

1066
01:12:44,619 --> 01:12:57,279
we're calling is actually that the image

1067
01:12:53,170 --> 01:13:06,640
is always image and the tempering is ten

1068
01:12:57,279 --> 01:13:10,239
Terina makes sense so if we just get rid

1069
01:13:06,640 --> 01:13:17,440
of this now it's just down to that and

1070
01:13:10,239 --> 01:13:18,969
we paste that in and I think because the

1071
01:13:17,439 --> 01:13:20,199
temporary nough is actually something we

1072
01:13:18,970 --> 01:13:23,470
constructed here it's got to be

1073
01:13:20,199 --> 01:13:29,050
addressed there so many of the tags has

1074
01:13:23,470 --> 01:13:31,300
to be and tags like so and so now the

1075
01:13:29,050 --> 01:13:33,400
big problem is just that single tile

1076
01:13:31,300 --> 01:13:35,980
import we need to actually determine

1077
01:13:33,399 --> 01:13:37,449
which of these we're gonna do right but

1078
01:13:35,979 --> 01:13:49,389
if we actually just compile now we

1079
01:13:37,449 --> 01:13:51,970
should be fine here anyway and content

1080
01:13:49,390 --> 01:13:55,890
stream temporary nough that needs to be

1081
01:13:51,970 --> 01:14:01,300
an address and I think then we're good

1082
01:13:55,890 --> 01:14:04,600
so yeah so now the question is just as

1083
01:14:01,300 --> 01:14:06,730
we go through each of these what we now

1084
01:14:04,600 --> 01:14:12,789
need to do is actually make this tag

1085
01:14:06,729 --> 01:14:18,759
stuff do something useful so yeah for

1086
01:14:12,789 --> 01:14:22,960
starters the import source info we know

1087
01:14:18,760 --> 01:14:28,630
that's the same the whole time so really

1088
01:14:22,960 --> 01:14:33,300
that's just up here and what we need to

1089
01:14:28,630 --> 01:14:33,300
get there is just some idea of

1090
01:14:37,939 --> 01:14:51,159
of where we would get you know name

1091
01:14:42,159 --> 01:14:56,449
description and author right and

1092
01:14:51,159 --> 01:15:01,849
unfortunately we don't really have a way

1093
01:14:56,449 --> 01:15:06,979
of doing that we could use the username

1094
01:15:01,850 --> 01:15:12,829
of the person has the author in terms of

1095
01:15:06,979 --> 01:15:16,279
the name of the asset like a lot of

1096
01:15:12,829 --> 01:15:18,800
stuff we just don't have and you know it

1097
01:15:16,279 --> 01:15:19,609
could be things that's annotated after

1098
01:15:18,800 --> 01:15:28,930
the fact

1099
01:15:19,609 --> 01:15:28,929
but I mean yeah like

1100
01:15:38,939 --> 01:15:44,579
I don't I don't really know what to make

1101
01:15:41,279 --> 01:15:47,939
of that I think we just were kind of

1102
01:15:44,579 --> 01:15:50,789
overly you know we wanted and I agree

1103
01:15:47,939 --> 01:15:53,309
with this still we wanted to make sure

1104
01:15:50,789 --> 01:15:58,948
you could put stuff into the hhas to

1105
01:15:53,310 --> 01:16:01,530
annotate them so you know for each of

1106
01:15:58,948 --> 01:16:05,159
the assets you can name it have a

1107
01:16:01,529 --> 01:16:10,769
description and have an author but we

1108
01:16:05,159 --> 01:16:18,500
don't really have that for any of these

1109
01:16:10,770 --> 01:16:18,500
things we could name them something

1110
01:16:20,899 --> 01:16:27,089
based on the file name we won't get a

1111
01:16:24,659 --> 01:16:30,059
get a description out of it so I would

1112
01:16:27,090 --> 01:16:33,239
say description is probably not on the

1113
01:16:30,060 --> 01:16:42,989
table the author is gonna be an

1114
01:16:33,238 --> 01:16:43,738
irreverent ear so we kind of know what

1115
01:16:42,988 --> 01:16:46,709
that is

1116
01:16:43,738 --> 01:16:49,229
but we don't really know like we don't

1117
01:16:46,710 --> 01:16:51,899
know that if someone else was running

1118
01:16:49,229 --> 01:16:54,448
the game and I'm not sure how they would

1119
01:16:51,899 --> 01:16:56,759
articulate to us who it was who did the

1120
01:16:54,448 --> 01:16:58,589
artwork in the first place and I would

1121
01:16:56,760 --> 01:17:09,500
assume that PNG doesn't have that

1122
01:16:58,590 --> 01:17:09,500
information either which is not great

1123
01:17:11,390 --> 01:17:25,920
[Music]

1124
01:17:16,210 --> 01:17:30,880
the username you know is something and

1125
01:17:25,920 --> 01:17:33,760
so the you know the rest of it could be

1126
01:17:30,880 --> 01:17:41,559
sort of in here as a specialized er of

1127
01:17:33,760 --> 01:17:43,929
some kind I don't know I mean I'd like

1128
01:17:41,559 --> 01:17:45,520
to have a way to stamp those accurately

1129
01:17:43,929 --> 01:17:48,908
but I just don't know how to do it

1130
01:17:45,520 --> 01:17:52,270
because I mean who knows like that

1131
01:17:48,908 --> 01:17:53,948
information is just not there and so we

1132
01:17:52,270 --> 01:17:56,590
could have something that likes stamps

1133
01:17:53,948 --> 01:17:59,469
that information on after the fact with

1134
01:17:56,590 --> 01:18:01,360
like a tool or something but in terms of

1135
01:17:59,469 --> 01:18:05,828
having it automatically happen on import

1136
01:18:01,359 --> 01:18:08,078
there's just no way to know like I you

1137
01:18:05,828 --> 01:18:10,599
know I have no idea how I would get that

1138
01:18:08,078 --> 01:18:15,630
it would be nice but it's not really

1139
01:18:10,599 --> 01:18:19,059
realistic I don't think so I don't know

1140
01:18:15,630 --> 01:18:22,960
I guess I'll leave that for now and just

1141
01:18:19,059 --> 01:18:33,940
say to do how are we going to do this

1142
01:18:22,960 --> 01:18:37,538
eventually a dialog box and ask you know

1143
01:18:33,939 --> 01:18:43,839
like who wrote who made this art asset

1144
01:18:37,538 --> 01:18:45,819
that you're importing I don't know uh so

1145
01:18:43,840 --> 01:18:47,170
what this part on the other hand we

1146
01:18:45,819 --> 01:18:49,719
might be able do something about so

1147
01:18:47,170 --> 01:18:52,109
we'll leave that for a second do we have

1148
01:18:49,719 --> 01:18:55,189
a Rhapsody in here

1149
01:18:52,109 --> 01:18:55,188
[Music]

1150
01:18:58,238 --> 01:19:08,269
yeah uh so yeah like you know that parts

1151
01:19:04,939 --> 01:19:09,229
a little Squinkie but yeah it's just how

1152
01:19:08,270 --> 01:19:12,260
it goes sometimes

1153
01:19:09,229 --> 01:19:15,709
so we then want to go ahead and and

1154
01:19:12,260 --> 01:19:19,000
figure out the tag situation right and

1155
01:19:15,710 --> 01:19:23,118
so here's I guess how we'll do this

1156
01:19:19,000 --> 01:19:27,578
let's start parsing out these things so

1157
01:19:23,118 --> 01:19:33,439
of the things we've got block character

1158
01:19:27,578 --> 01:19:36,349
cover hand item obstacle and title

1159
01:19:33,439 --> 01:19:40,009
screen so title screen is just a bad

1160
01:19:36,349 --> 01:19:44,449
name so I'm gonna rename title screen

1161
01:19:40,010 --> 01:19:47,090
and I'm going to rename it to something

1162
01:19:44,448 --> 01:19:51,669
that will actually allow us to know what

1163
01:19:47,090 --> 01:19:55,880
it is so I'm gonna call it a plate right

1164
01:19:51,670 --> 01:19:58,219
and so what a plate is is a plate is

1165
01:19:55,880 --> 01:20:00,380
something that's just like a cutscene

1166
01:19:58,219 --> 01:20:02,510
thing or just something that just gets

1167
01:20:00,380 --> 01:20:06,319
splattered on the screen that doesn't

1168
01:20:02,510 --> 01:20:09,770
have anything else associated with it in

1169
01:20:06,319 --> 01:20:12,649
terms of a structure right so we don't

1170
01:20:09,770 --> 01:20:14,780
know what it is we just know it's a big

1171
01:20:12,649 --> 01:20:17,388
image and we are not going to subdivide

1172
01:20:14,779 --> 01:20:19,689
it up or think of it like a mapped cube

1173
01:20:17,389 --> 01:20:23,770
or separate tiles or anything right so

1174
01:20:19,689 --> 01:20:28,158
we're gonna have block character cover

1175
01:20:23,770 --> 01:20:32,210
hand item or obstacles or plate right

1176
01:20:28,158 --> 01:20:35,029
and that's what we're gonna do so in

1177
01:20:32,210 --> 01:20:37,429
here what I'm gonna do is do this

1178
01:20:35,029 --> 01:20:40,069
strings equals pieces and do this this

1179
01:20:37,429 --> 01:20:42,859
sort of description on it now I don't

1180
01:20:40,069 --> 01:20:45,618
really want this to be giant inside this

1181
01:20:42,859 --> 01:20:47,359
nonsense inside this routine so what I'm

1182
01:20:45,618 --> 01:20:51,529
gonna do instead is put that decryption

1183
01:20:47,359 --> 01:20:53,558
of the name in here and I should say

1184
01:20:51,529 --> 01:20:55,819
parsing in the name it's not encrypted

1185
01:20:53,559 --> 01:20:57,230
I'm gonna put that in a separate

1186
01:20:55,819 --> 01:20:59,408
function just so doesn't get out of hand

1187
01:20:57,229 --> 01:21:04,189
because it's gonna be this huge like

1188
01:20:59,408 --> 01:21:07,578
disentanglement of art specific stuff

1189
01:21:04,189 --> 01:21:10,719
right so we're gonna have something

1190
01:21:07,578 --> 01:21:14,840
interior that looks like that

1191
01:21:10,720 --> 01:21:19,310
you know and what I want to do in here

1192
01:21:14,840 --> 01:21:23,060
is say let's do an if on you know parse

1193
01:21:19,310 --> 01:21:27,560
pieces and that will like right into our

1194
01:21:23,060 --> 01:21:29,780
tags array and into our info array so we

1195
01:21:27,560 --> 01:21:32,150
can basically parse out like what the

1196
01:21:29,779 --> 01:21:38,539
heck it is we're doing you know what I

1197
01:21:32,149 --> 01:21:40,219
mean and so we'll start with that and we

1198
01:21:38,539 --> 01:21:42,260
have a little bit more we need to do

1199
01:21:40,220 --> 01:21:45,199
here because we need also for it to tell

1200
01:21:42,260 --> 01:21:46,640
us how big the thing is so again like I

1201
01:21:45,199 --> 01:21:48,319
said we might want to kind of change a

1202
01:21:46,640 --> 01:21:49,340
little bit of how I was doing it I may

1203
01:21:48,319 --> 01:21:55,489
have jumped the gun a little bit there

1204
01:21:49,340 --> 01:21:57,500
but well-well fix it don't worry so once

1205
01:21:55,489 --> 01:21:59,929
we get in here we just need a thing that

1206
01:21:57,500 --> 01:22:02,750
will decrypt these properly so if we've

1207
01:21:59,930 --> 01:22:04,700
got you know parse pieces that's gonna

1208
01:22:02,750 --> 01:22:07,010
return a boolean and the boolean is just

1209
01:22:04,699 --> 01:22:10,909
like you know can I import this do I

1210
01:22:07,010 --> 01:22:13,310
even know what the heck it is right and

1211
01:22:10,909 --> 01:22:15,529
if I don't then we just don't write and

1212
01:22:13,310 --> 01:22:17,270
maybe we put an error in there somewhere

1213
01:22:15,529 --> 01:22:22,099
where we're just like look I don't know

1214
01:22:17,270 --> 01:22:25,400
what the heck this thing is and maybe

1215
01:22:22,100 --> 01:22:28,970
that actually goes in here right so

1216
01:22:25,399 --> 01:22:33,199
maybe there's like an air stream that we

1217
01:22:28,970 --> 01:22:37,970
write to and that air stream you know we

1218
01:22:33,199 --> 01:22:40,309
can we can report our errors when we

1219
01:22:37,970 --> 01:22:42,409
parse things so in here we're gonna have

1220
01:22:40,310 --> 01:22:49,570
into our air stream we're gonna write

1221
01:22:42,409 --> 01:22:53,139
like unrecognized type of import artwork

1222
01:22:49,569 --> 01:22:57,170
and when we look and we see these pieces

1223
01:22:53,140 --> 01:23:01,360
we can now enumerate the ones that we

1224
01:22:57,170 --> 01:23:01,359
actually care about so there's block

1225
01:23:03,430 --> 01:23:07,210
there's character

1226
01:23:10,149 --> 01:23:38,449
there is cover hand item obstacles and

1227
01:23:29,590 --> 01:23:40,850
plate I and you know since these have

1228
01:23:38,449 --> 01:23:44,599
different import processes that kind of

1229
01:23:40,850 --> 01:23:48,039
have to to go along with them there let

1230
01:23:44,600 --> 01:23:51,280
me this does not belong here anymore

1231
01:23:48,039 --> 01:24:08,449
wait where did hand come I deleted hand

1232
01:23:51,279 --> 01:24:11,599
no okay it's right here so if we look at

1233
01:24:08,449 --> 01:24:15,619
the parse pieces thing we would want to

1234
01:24:11,600 --> 01:24:19,340
see which kind of thing it was and how

1235
01:24:15,619 --> 01:24:21,939
we needed to import it and we possibly

1236
01:24:19,340 --> 01:24:21,940
need to

1237
01:24:28,010 --> 01:24:34,420
we possibly need to switch on that so we

1238
01:24:30,949 --> 01:24:34,420
may have to do something like this you

1239
01:24:46,539 --> 01:24:59,029
know I mean so we would want to be able

1240
01:24:55,970 --> 01:25:01,310
to say here's the multi tile one here's

1241
01:24:59,029 --> 01:25:06,229
the single tile one there's also the

1242
01:25:01,310 --> 01:25:07,760
plate one where we get you know one of

1243
01:25:06,229 --> 01:25:11,599
these things that doesn't get resized

1244
01:25:07,760 --> 01:25:13,159
like we just we just take it or maybe it

1245
01:25:11,600 --> 01:25:16,370
does get resized but it doesn't get

1246
01:25:13,159 --> 01:25:17,659
resized to those limits you know what I

1247
01:25:16,369 --> 01:25:19,609
mean

1248
01:25:17,659 --> 01:25:23,300
so there's there's basically like one

1249
01:25:19,609 --> 01:25:27,739
more of these that's the least processed

1250
01:25:23,300 --> 01:25:28,369
version that basically says if you get

1251
01:25:27,739 --> 01:25:33,889
this

1252
01:25:28,369 --> 01:25:34,819
we don't down sample or we down sample

1253
01:25:33,890 --> 01:25:40,820
only once

1254
01:25:34,819 --> 01:25:43,670
like what's the res on this thing yes if

1255
01:25:40,819 --> 01:25:46,319
we don't sample like one time you know

1256
01:25:43,670 --> 01:25:49,430
on those

1257
01:25:46,319 --> 01:25:49,429
[Music]

1258
01:25:55,069 --> 01:26:06,899
so here we do something like asset max

1259
01:25:58,859 --> 01:26:23,279
plate them you know and it would do its

1260
01:26:06,899 --> 01:26:25,019
thing there and you know you know maybe

1261
01:26:23,279 --> 01:26:34,829
that's the maximum plate them I don't

1262
01:26:25,020 --> 01:26:36,570
know so I think that's roughly what

1263
01:26:34,829 --> 01:26:43,229
we're looking for

1264
01:26:36,569 --> 01:26:45,630
and since all of those now fall in line

1265
01:26:43,229 --> 01:26:49,439
with that the next thing we just have to

1266
01:26:45,630 --> 01:26:52,789
do is actually provide some tagging

1267
01:26:49,439 --> 01:26:57,559
ability for each of these things right

1268
01:26:52,789 --> 01:27:02,000
now what I can do is make these pieces

1269
01:26:57,560 --> 01:27:09,720
return something like you know you know

1270
01:27:02,000 --> 01:27:11,369
import type here and we can have you

1271
01:27:09,720 --> 01:27:15,119
know one of the import types is multi

1272
01:27:11,369 --> 01:27:18,359
tile one of the import types is single

1273
01:27:15,119 --> 01:27:20,640
tile and one of the import types is

1274
01:27:18,359 --> 01:27:28,589
plate and then of course there's like

1275
01:27:20,640 --> 01:27:32,240
import type none you know I mean so here

1276
01:27:28,590 --> 01:27:32,239
it can return one of these

1277
01:27:39,149 --> 01:27:49,079
and that way just kind of knows what

1278
01:27:42,810 --> 01:27:50,760
it's dealing with so that way when we do

1279
01:27:49,079 --> 01:27:53,250
the import it will say like okay which

1280
01:27:50,760 --> 01:27:54,390
kind should I import and we can make

1281
01:27:53,250 --> 01:27:56,489
sure that everything's set up properly

1282
01:27:54,390 --> 01:27:58,650
for that and off we go

1283
01:27:56,489 --> 01:28:00,569
so in this case if we want to allow

1284
01:27:58,649 --> 01:28:04,889
hands to be imported then what we can do

1285
01:28:00,569 --> 01:28:07,469
is say import type multi tile and you

1286
01:28:04,890 --> 01:28:11,100
know that's what it will that's the path

1287
01:28:07,470 --> 01:28:13,350
that it will try to to take right and

1288
01:28:11,100 --> 01:28:17,850
you know when we do this parse pieces

1289
01:28:13,350 --> 01:28:20,610
we've got sort of the stuff that's

1290
01:28:17,850 --> 01:28:25,289
getting set here the destination info

1291
01:28:20,609 --> 01:28:27,960
and the destination tag array those will

1292
01:28:25,289 --> 01:28:37,500
get set we then need the piece stuff

1293
01:28:27,960 --> 01:28:40,189
which is this and piece count I don't

1294
01:28:37,500 --> 01:28:40,189
think we care about

1295
01:28:48,969 --> 01:29:05,460
so I think that's all fine and then that

1296
01:29:00,698 --> 01:29:05,460
asset struct it's gotta be able to grab

1297
01:29:08,609 --> 01:29:14,948
so I think we can make that be the locus

1298
01:29:12,640 --> 01:29:17,739
of the parsing as far as errors are

1299
01:29:14,948 --> 01:29:20,279
concerned when you actually get one of

1300
01:29:17,738 --> 01:29:23,419
these files

1301
01:29:20,279 --> 01:29:23,420
[Music]

1302
01:29:24,210 --> 01:29:34,359
it just has a stream for that so we can

1303
01:29:28,300 --> 01:29:36,579
just pass a stream and so then when we

1304
01:29:34,359 --> 01:29:41,710
call this function we need to pass the

1305
01:29:36,579 --> 01:29:49,930
assets the pieces and the errors for

1306
01:29:41,710 --> 01:29:52,869
that particular one like so and then in

1307
01:29:49,930 --> 01:29:56,289
here what we actually want to do is like

1308
01:29:52,869 --> 01:30:02,519
you know use this thing where we say

1309
01:29:56,289 --> 01:30:07,029
what's the import type and we ask it so

1310
01:30:02,520 --> 01:30:09,699
and it tells us so then here we can just

1311
01:30:07,029 --> 01:30:17,969
say look if we were supposed to import

1312
01:30:09,698 --> 01:30:17,969
it then we will

1313
01:30:29,270 --> 01:30:35,480
and I think that should do it

1314
01:30:46,800 --> 01:30:57,538
in this case the tags we only have one

1315
01:30:53,099 --> 01:31:02,730
of them so when we import that we really

1316
01:30:57,538 --> 01:31:21,359
just want to use tag zero zero so and

1317
01:31:02,729 --> 01:31:23,218
the same would would be true here I'm

1318
01:31:21,359 --> 01:31:26,839
not sure what the other thing that was

1319
01:31:23,219 --> 01:31:29,730
complaining about was looks like nothing

1320
01:31:26,840 --> 01:31:35,099
so that would import all of the

1321
01:31:29,729 --> 01:31:38,189
different hands in theory and we can

1322
01:31:35,099 --> 01:31:39,679
already kind of maybe look at that as

1323
01:31:38,189 --> 01:31:43,408
[Music]

1324
01:31:39,679 --> 01:31:50,190
reason why we need to start thinking a

1325
01:31:43,408 --> 01:31:52,018
little harder about how this I mean we

1326
01:31:50,189 --> 01:31:53,609
want when this imports hands now to be

1327
01:31:52,019 --> 01:31:57,269
able to select the hand that we actually

1328
01:31:53,609 --> 01:31:59,219
wanted using tags right and so we want

1329
01:31:57,269 --> 01:32:02,130
to be able to do that and right now we

1330
01:31:59,219 --> 01:32:07,219
can't actually do that so that's

1331
01:32:02,130 --> 01:32:07,219
definitely something we want to improve

1332
01:32:08,779 --> 01:32:13,599
yeah

1333
01:32:10,380 --> 01:32:13,600
[Music]

1334
01:32:19,770 --> 01:32:24,219
so we need to make it a little bit more

1335
01:32:22,300 --> 01:32:29,489
we need to make it a little easier here

1336
01:32:24,219 --> 01:32:29,489
to define what all these tags are

1337
01:32:38,420 --> 01:32:46,949
and I'm not sure exactly how we want to

1338
01:32:41,130 --> 01:32:48,690
do that look I don't really want to have

1339
01:32:46,949 --> 01:32:50,789
to define these all in different places

1340
01:32:48,689 --> 01:32:54,629
but it seems like that would be the only

1341
01:32:50,789 --> 01:32:56,310
really weighted well you know you could

1342
01:32:54,630 --> 01:32:58,199
just redefine them here every time cuz

1343
01:32:56,310 --> 01:33:00,539
you're gonna have to anyway so I guess

1344
01:32:58,199 --> 01:33:02,340
you just do begin tag array and Tiger a

1345
01:33:00,539 --> 01:33:04,229
and you just do it right in here is the

1346
01:33:02,340 --> 01:33:06,300
best way to do it because you're gonna

1347
01:33:04,229 --> 01:33:08,189
have to do that anyway based on the way

1348
01:33:06,300 --> 01:33:11,880
that I kind of wanted it to work out

1349
01:33:08,189 --> 01:33:13,409
going forward all right so let's

1350
01:33:11,880 --> 01:33:15,420
actually do the hands then because I

1351
01:33:13,409 --> 01:33:18,599
want to do it we got to do this for the

1352
01:33:15,420 --> 01:33:23,279
blocks and for the hands so we've got

1353
01:33:18,600 --> 01:33:24,560
like a fire hand a glove hand right and

1354
01:33:23,279 --> 01:33:31,729
[Music]

1355
01:33:24,560 --> 01:33:31,730
and a skeleton hand and so

1356
01:33:47,498 --> 01:33:54,648
what I want to do is I want to have

1357
01:33:51,439 --> 01:33:57,079
these instead of naming themselves that

1358
01:33:54,649 --> 01:34:03,219
way I want them to sort of just have the

1359
01:33:57,078 --> 01:34:03,219
tags in the file name yeah I mean

1360
01:34:14,899 --> 01:34:20,210
and this again is the part that I say is

1361
01:34:18,890 --> 01:34:22,869
so delicate

1362
01:34:20,210 --> 01:34:22,869
really

1363
01:34:34,180 --> 01:34:42,400
but you'll have to just bear with me

1364
01:34:36,920 --> 01:34:46,670
here so let's suppose that we wanted to

1365
01:34:42,399 --> 01:34:49,359
to talk about this right so the first

1366
01:34:46,670 --> 01:34:52,869
thing I'll say is that's not really fire

1367
01:34:49,359 --> 01:34:56,750
even if it was right like it's more like

1368
01:34:52,869 --> 01:34:58,159
undead energy or something and

1369
01:34:56,750 --> 01:35:00,590
furthermore this would probably not

1370
01:34:58,159 --> 01:35:03,019
really be that way like we'd probably

1371
01:35:00,590 --> 01:35:04,190
get rid of those and like I probably

1372
01:35:03,020 --> 01:35:05,720
have an or move that and we'd probably

1373
01:35:04,189 --> 01:35:08,629
just do that with a particle system so

1374
01:35:05,720 --> 01:35:09,980
they would animate but regardless of

1375
01:35:08,630 --> 01:35:11,720
that part of it let's just assume

1376
01:35:09,979 --> 01:35:13,519
because we still need the interior piece

1377
01:35:11,720 --> 01:35:15,680
which is like the little like solid part

1378
01:35:13,520 --> 01:35:17,000
that's just floating there so let's

1379
01:35:15,680 --> 01:35:18,740
suppose that we were going to do that

1380
01:35:17,000 --> 01:35:21,710
like I don't know what that stuff is

1381
01:35:18,739 --> 01:35:24,670
it's like dark energy or something right

1382
01:35:21,710 --> 01:35:31,489
it's like it's like some kind of like

1383
01:35:24,670 --> 01:35:40,579
necro energy so this is really like dark

1384
01:35:31,489 --> 01:35:43,069
energy one like that's a hand that has

1385
01:35:40,579 --> 01:35:48,680
dark energy of one so what that looks

1386
01:35:43,069 --> 01:35:52,069
like and I don't know that you know how

1387
01:35:48,680 --> 01:35:53,329
else to really talk about it but you

1388
01:35:52,069 --> 01:35:58,369
know another way to say it would be

1389
01:35:53,329 --> 01:36:07,609
fingers zero right like this is one that

1390
01:35:58,369 --> 01:36:11,329
doesn't have any fingers and it has dark

1391
01:36:07,609 --> 01:36:15,130
energy this one is has a glove and it

1392
01:36:11,329 --> 01:36:15,130
has fingers right

1393
01:36:18,619 --> 01:36:21,460
I'm sorry

1394
01:36:26,720 --> 01:36:39,470
this one has fingers and it doesn't have

1395
01:36:35,329 --> 01:36:44,090
any flesh right so it's like it's got

1396
01:36:39,470 --> 01:36:48,070
bones but no flesh I'm not sure how you

1397
01:36:44,090 --> 01:36:48,069
would necessarily specify that

1398
01:37:02,300 --> 01:37:06,760
probably just the fact that it has bones

1399
01:37:11,090 --> 01:37:16,100
so I guess another way to say this would

1400
01:37:13,520 --> 01:37:18,650
be a little bit different that's I don't

1401
01:37:16,100 --> 01:37:27,770
know what that really is other than like

1402
01:37:18,649 --> 01:37:34,789
you know it's it's this dude his little

1403
01:37:27,770 --> 01:37:43,630
floating hand and so I'm not really sure

1404
01:37:34,789 --> 01:37:50,960
what you call that you know you know

1405
01:37:43,630 --> 01:37:52,850
maybe I'll just call it bones and so

1406
01:37:50,960 --> 01:37:57,350
that one's just bones that's all it's

1407
01:37:52,850 --> 01:37:59,480
got this one's got a glove and maybe

1408
01:37:57,350 --> 01:38:00,980
that's really all it's got to right I

1409
01:37:59,479 --> 01:38:03,919
mean doesn't have anything else that we

1410
01:38:00,979 --> 01:38:05,959
could really say about it although I

1411
01:38:03,920 --> 01:38:08,569
guess like I said we could say that the

1412
01:38:05,960 --> 01:38:10,270
glove has individual fingers is one way

1413
01:38:08,569 --> 01:38:13,460
to talk about that glove so I don't know

1414
01:38:10,270 --> 01:38:15,980
so those are just some examples of ways

1415
01:38:13,460 --> 01:38:21,050
I could name things and if we always

1416
01:38:15,979 --> 01:38:23,539
wanted to have them be one we could omit

1417
01:38:21,050 --> 01:38:25,789
that meaning if they were if they're

1418
01:38:23,539 --> 01:38:28,090
just binary tags and we don't like have

1419
01:38:25,789 --> 01:38:36,920
like a certain amount of them really

1420
01:38:28,090 --> 01:38:38,060
then you could it so I suppose another

1421
01:38:36,920 --> 01:38:40,190
way to that would be like you know you

1422
01:38:38,060 --> 01:38:42,620
could just do it like this and say if

1423
01:38:40,189 --> 01:38:48,519
you wanted to add a number you can you

1424
01:38:42,619 --> 01:38:48,519
don't have to write

1425
01:38:55,819 --> 01:39:03,389
and so then we instantiate an entity if

1426
01:38:59,998 --> 01:39:15,300
we added the property to the entity and

1427
01:39:03,389 --> 01:39:17,099
said you know this this entity has you

1428
01:39:15,300 --> 01:39:20,010
know this this entity has a glove and

1429
01:39:17,099 --> 01:39:22,619
fingers it's gonna pick this one because

1430
01:39:20,010 --> 01:39:24,149
that's the one that it has if you didn't

1431
01:39:22,618 --> 01:39:25,228
say fingers in just said glove it still

1432
01:39:24,149 --> 01:39:27,209
picked that one cuz doesn't have any

1433
01:39:25,229 --> 01:39:29,519
other options to use but if you drew

1434
01:39:27,208 --> 01:39:30,840
another one here that was a glove that

1435
01:39:29,519 --> 01:39:34,260
didn't have fingers that would pick that

1436
01:39:30,840 --> 01:39:43,739
one instead right and so I think that's

1437
01:39:34,260 --> 01:39:48,748
roughly what we want I think so that in

1438
01:39:43,738 --> 01:39:52,168
here where we say block you know again

1439
01:39:48,748 --> 01:39:56,398
I'm really not quite sure what the level

1440
01:39:52,168 --> 01:40:00,569
of asset type should really be I don't

1441
01:39:56,399 --> 01:40:02,179
want what just happened at all I hate

1442
01:40:00,569 --> 01:40:04,618
this file explorer

1443
01:40:02,179 --> 01:40:18,349
there we go that's I'm like I don't want

1444
01:40:04,618 --> 01:40:18,348
any of that I yes I just so

1445
01:40:21,310 --> 01:40:28,470
in terms of the basic category right if

1446
01:40:24,579 --> 01:40:32,019
we stop looking at the legacy categories

1447
01:40:28,470 --> 01:40:34,900
although hand is still a valid one you

1448
01:40:32,020 --> 01:40:48,820
know it could be that we literally are

1449
01:40:34,899 --> 01:40:53,170
talking about this maybe that does stay

1450
01:40:48,819 --> 01:40:57,099
in here but you know maybe a block is

1451
01:40:53,170 --> 01:40:58,720
just a block and we don't like it's it's

1452
01:40:57,100 --> 01:41:07,890
literally just the things that are on

1453
01:40:58,720 --> 01:41:07,890
there right it's literally these things

1454
01:41:18,979 --> 01:41:26,359
and I don't know so you know we've got

1455
01:41:30,020 --> 01:41:39,090
block item character cover item plate

1456
01:41:33,300 --> 01:41:41,279
and obstacle and maybe you don't

1457
01:41:39,090 --> 01:41:43,020
actually do this so everything you

1458
01:41:41,279 --> 01:41:45,868
instantiate just has to have the right

1459
01:41:43,020 --> 01:41:57,860
properties to pick something from the

1460
01:41:45,868 --> 01:42:00,448
set you know and so four characters

1461
01:41:57,859 --> 01:42:02,279
there just in two halves so you got the

1462
01:42:00,448 --> 01:42:07,319
bottom and the top which is really just

1463
01:42:02,279 --> 01:42:11,729
head and torso right are the two parts

1464
01:42:07,319 --> 01:42:15,539
there so really we don't need that so

1465
01:42:11,729 --> 01:42:29,609
we're really talking about this and this

1466
01:42:15,539 --> 01:42:35,639
and this will still be used at least for

1467
01:42:29,609 --> 01:42:38,549
the time being right so will those at

1468
01:42:35,639 --> 01:42:45,000
least temporarily the rest of this stuff

1469
01:42:38,550 --> 01:42:47,010
would not be used and so then the like

1470
01:42:45,000 --> 01:42:49,050
basic category is just which one of

1471
01:42:47,010 --> 01:42:50,639
those things you were trying to say what

1472
01:42:49,050 --> 01:42:52,199
what that you were using because they

1473
01:42:50,639 --> 01:42:56,460
sort of have different formats to a

1474
01:42:52,198 --> 01:42:58,678
certain extent but that's basically it

1475
01:42:56,460 --> 01:43:02,189
and then when you parse them in it just

1476
01:42:58,679 --> 01:43:07,560
uses the back part of the name so it

1477
01:43:02,189 --> 01:43:12,529
just says like okay you know parse this

1478
01:43:07,560 --> 01:43:12,530
stuff and that's what that's what it is

1479
01:43:14,170 --> 01:43:20,380
I don't know and so if we did it that

1480
01:43:18,520 --> 01:43:23,980
way then you know then you've got the

1481
01:43:20,380 --> 01:43:28,960
tags that try to specify what's going on

1482
01:43:23,979 --> 01:43:32,889
and so you know the tag array which is

1483
01:43:28,960 --> 01:43:34,689
this stuff that then gets all of the

1484
01:43:32,890 --> 01:43:38,949
other things in it so basically you

1485
01:43:34,689 --> 01:43:42,789
would have in here all the stuff I just

1486
01:43:38,948 --> 01:43:43,869
said so there's something that's like it

1487
01:43:42,789 --> 01:43:49,119
doesn't have bones

1488
01:43:43,869 --> 01:43:59,349
does it have dark energy does it have

1489
01:43:49,119 --> 01:44:08,050
gloves this does it have fingers and you

1490
01:43:59,350 --> 01:44:12,760
know whatever else we add and that's

1491
01:44:08,050 --> 01:44:14,380
what we would do right I and those are

1492
01:44:12,760 --> 01:44:16,000
just the properties that we had and they

1493
01:44:14,380 --> 01:44:17,739
would just go into the game and you

1494
01:44:16,000 --> 01:44:19,960
would just add new properties as you

1495
01:44:17,738 --> 01:44:21,309
want them to distinguish between things

1496
01:44:19,960 --> 01:44:22,510
that you feel like need to be

1497
01:44:21,310 --> 01:44:23,920
distinguished in a different way than

1498
01:44:22,510 --> 01:44:32,320
ways that are already currently in

1499
01:44:23,920 --> 01:44:40,050
existence right so I think that's what

1500
01:44:32,319 --> 01:44:40,049
you would do so this just ends up being

1501
01:44:45,100 --> 01:44:51,950
one past last tag index was two there's

1502
01:44:49,850 --> 01:44:53,990
two der tags I guess anything so

1503
01:44:51,949 --> 01:44:56,359
basically this just has to be something

1504
01:44:53,989 --> 01:45:01,789
a little bit better and then I think

1505
01:44:56,359 --> 01:45:04,639
we're mostly done right so what you need

1506
01:45:01,789 --> 01:45:08,359
to do here is you just need to say I'm

1507
01:45:04,640 --> 01:45:17,050
gonna add whatever the tag is and you

1508
01:45:08,359 --> 01:45:22,670
know it's always type ID equals asset

1509
01:45:17,050 --> 01:45:28,760
hand and then in here we just need to

1510
01:45:22,670 --> 01:45:31,430
say what the tag set is let's just real

1511
01:45:28,760 --> 01:45:36,590
quick look at what that is inside the

1512
01:45:31,430 --> 01:45:38,510
info structure here so if this is an

1513
01:45:36,590 --> 01:45:50,630
import grid tag then I think what we

1514
01:45:38,510 --> 01:45:52,730
want to do is just say okay well I mean

1515
01:45:50,630 --> 01:45:56,300
I guess I can leave that as it is but

1516
01:45:52,729 --> 01:45:59,479
we're just gonna say tag equals end tags

1517
01:45:56,300 --> 01:46:09,770
or something and we just say like okay

1518
01:45:59,479 --> 01:46:12,079
begin tags you know add tag add tag

1519
01:46:09,770 --> 01:46:18,230
whatever write something like this end

1520
01:46:12,079 --> 01:46:21,199
tag and it's a hand write and then this

1521
01:46:18,229 --> 01:46:22,669
will set everything up for us so we need

1522
01:46:21,199 --> 01:46:24,559
to sort of do this where we just like

1523
01:46:22,670 --> 01:46:30,710
here's the tags that we're adding this

1524
01:46:24,560 --> 01:46:34,430
thing begin and end them and go from

1525
01:46:30,710 --> 01:46:37,189
there right so I think that's all we

1526
01:46:34,430 --> 01:46:40,350
really need to do and

1527
01:46:37,189 --> 01:46:40,349
[Music]

1528
01:46:42,149 --> 01:46:47,079
you know we again this can all sort of

1529
01:46:45,310 --> 01:46:49,600
be done ahead of time and then just

1530
01:46:47,079 --> 01:46:50,590
referenced sort of well no it can't

1531
01:46:49,600 --> 01:46:53,079
because you're reading it from the file

1532
01:46:50,590 --> 01:46:54,640
name so assuming that you're actually

1533
01:46:53,079 --> 01:46:56,260
gonna do it that way then you do need to

1534
01:46:54,640 --> 01:46:58,030
begin in tags you need to add the

1535
01:46:56,260 --> 01:46:59,739
individual tags the tags need to come

1536
01:46:58,029 --> 01:47:06,670
from whatever the pieces are that you're

1537
01:46:59,738 --> 01:47:10,419
actually processing here right so the

1538
01:47:06,670 --> 01:47:11,770
direction tag in this case we can get

1539
01:47:10,420 --> 01:47:15,060
rid of sort of the thing that was doing

1540
01:47:11,770 --> 01:47:15,060
the dirt agz bit

1541
01:47:33,829 --> 01:47:39,739
and what we want to do here is just say

1542
01:47:36,380 --> 01:47:43,250
this is the actual set of tags that we

1543
01:47:39,739 --> 01:47:45,889
wanted to make and so the Y index is the

1544
01:47:43,250 --> 01:47:50,149
thing that tells us here which one we're

1545
01:47:45,890 --> 01:47:57,530
actually trying to do so we're talking

1546
01:47:50,149 --> 01:48:01,339
about this right and off we go so let's

1547
01:47:57,529 --> 01:48:03,460
think about this for a second that tag

1548
01:48:01,340 --> 01:48:12,260
is facing direction its value is this

1549
01:48:03,460 --> 01:48:17,600
its basic category is asset hand oh so

1550
01:48:12,260 --> 01:48:19,220
wait if that's already set I guess we

1551
01:48:17,600 --> 01:48:21,140
just have to set it in two places which

1552
01:48:19,220 --> 01:48:23,360
is kind of annoying but we can wrap that

1553
01:48:21,140 --> 01:48:26,869
into the end tags bit so that's really

1554
01:48:23,359 --> 01:48:29,420
not the end of the world um so when we

1555
01:48:26,869 --> 01:48:33,739
begin the tags here we just have to make

1556
01:48:29,420 --> 01:48:35,329
sure that we know how many we need which

1557
01:48:33,739 --> 01:48:39,760
shouldn't be too hard and then we can

1558
01:48:35,329 --> 01:48:39,760
just put the system on and finish right

1559
01:48:45,019 --> 01:48:48,019
yeah

1560
01:48:51,029 --> 01:48:55,979
and and that should be it so let's go

1561
01:48:54,210 --> 01:49:00,469
ahead and make that happen

1562
01:48:55,979 --> 01:49:00,468
I want to make like an end tags here and

1563
01:49:01,250 --> 01:49:13,408
that would be what would actually do

1564
01:49:04,139 --> 01:49:22,710
this stuff and it would also be what

1565
01:49:13,408 --> 01:49:24,089
would actually set this stuff and it

1566
01:49:22,710 --> 01:49:26,730
would return that so you'd basically

1567
01:49:24,090 --> 01:49:32,328
have an import grid tag that's like the

1568
01:49:26,729 --> 01:49:35,488
result here you would be returning it

1569
01:49:32,328 --> 01:49:37,948
inside here you'd want to say look the

1570
01:49:35,488 --> 01:49:41,129
type ID of this thing is whatever type

1571
01:49:37,948 --> 01:49:42,719
ID you told me it's also the type ID

1572
01:49:41,130 --> 01:49:45,569
that I would set here is the basic

1573
01:49:42,719 --> 01:49:47,038
category we could be more explicit and

1574
01:49:45,569 --> 01:49:49,229
say that's actually a category because

1575
01:49:47,038 --> 01:49:51,118
that's really what it is now the first

1576
01:49:49,229 --> 01:49:52,828
tag index and the one passed last tag

1577
01:49:51,118 --> 01:49:56,250
index are going to be based on how many

1578
01:49:52,828 --> 01:49:58,590
we actually used and here where we do

1579
01:49:56,250 --> 01:50:00,448
our end tags you're gonna have to pass

1580
01:49:58,590 --> 01:50:02,969
in whatever that category actually was

1581
01:50:00,448 --> 01:50:05,819
so this is an asset basic category

1582
01:50:02,969 --> 01:50:07,020
category and then we just need like some

1583
01:50:05,819 --> 01:50:08,719
little builder thing that lets us know

1584
01:50:07,020 --> 01:50:11,820
how many of these tags we actually used

1585
01:50:08,719 --> 01:50:14,908
so then we can do begin tags end tags we

1586
01:50:11,819 --> 01:50:17,488
can pass asset hand there right we can

1587
01:50:14,908 --> 01:50:28,259
add the tags for facing direction as we

1588
01:50:17,488 --> 01:50:30,678
go so this would actually look like this

1589
01:50:28,260 --> 01:50:30,679
right

1590
01:50:37,689 --> 01:50:42,949
and we're really only doing four of

1591
01:50:40,878 --> 01:50:44,418
these at the moment so know why we

1592
01:50:42,948 --> 01:50:46,188
decided to do that there but let's do

1593
01:50:44,418 --> 01:50:48,859
this right

1594
01:50:46,189 --> 01:50:53,929
so we're gonna take one of these and

1595
01:50:48,859 --> 01:50:57,799
divide out the rotation amount I really

1596
01:50:53,929 --> 01:51:00,979
don't like that I think that was a dumb

1597
01:50:57,800 --> 01:51:01,729
idea by the way I think it should just

1598
01:51:00,979 --> 01:51:03,139
be zero to one

1599
01:51:01,729 --> 01:51:07,729
but we'll talk about that some other

1600
01:51:03,139 --> 01:51:09,319
time so anyway when we actually go in

1601
01:51:07,729 --> 01:51:10,820
here to do the beak in tags we would add

1602
01:51:09,319 --> 01:51:13,099
the facing Direction tags it would

1603
01:51:10,819 --> 01:51:15,889
automatically add the category tag and

1604
01:51:13,099 --> 01:51:17,479
know what that was and so then the only

1605
01:51:15,889 --> 01:51:20,328
other tags we need to add now are the

1606
01:51:17,479 --> 01:51:23,689
ones that we actually parsed out right

1607
01:51:20,328 --> 01:51:28,340
so they're the things that actually you

1608
01:51:23,689 --> 01:51:37,878
know come from the pieces structure

1609
01:51:28,340 --> 01:51:40,969
right so in here we don't need any of

1610
01:51:37,878 --> 01:51:43,698
this anymore although this may be

1611
01:51:40,969 --> 01:51:48,498
something that we need to kind of put up

1612
01:51:43,698 --> 01:51:51,518
here and begin tags and we're gonna how

1613
01:51:48,498 --> 01:51:57,529
to deal with some of that so it's fine

1614
01:51:51,519 --> 01:52:00,829
but essentially what we're doing is this

1615
01:51:57,529 --> 01:52:02,868
and we want to add the tags that we know

1616
01:52:00,828 --> 01:52:06,228
we want to add based on the template and

1617
01:52:02,868 --> 01:52:11,179
then we also want to add the tags from

1618
01:52:06,229 --> 01:52:12,860
the rest of the parse right and so the

1619
01:52:11,179 --> 01:52:16,248
way that this works you could kind of

1620
01:52:12,859 --> 01:52:17,958
see here where we're looping through

1621
01:52:16,248 --> 01:52:20,958
this and we're doing that scan for

1622
01:52:17,958 --> 01:52:24,368
underscores and then we update the

1623
01:52:20,958 --> 01:52:28,849
string hash value nonsense stuff right

1624
01:52:24,368 --> 01:52:32,898
so probably we really don't want to do

1625
01:52:28,849 --> 01:52:34,458
that anymore like we probably want to

1626
01:52:32,899 --> 01:52:39,369
let this thing parse and we probably

1627
01:52:34,458 --> 01:52:41,389
want to have it parse slowly and pigley

1628
01:52:39,368 --> 01:52:44,558
just to make things a little bit easier

1629
01:52:41,389 --> 01:52:44,559
on us on ourselves

1630
01:53:09,729 --> 01:53:17,269
so I guess what I'd say about that is

1631
01:53:12,770 --> 01:53:19,610
this part should probably go and that so

1632
01:53:17,270 --> 01:53:22,790
the piece cat stuff should probably not

1633
01:53:19,609 --> 01:53:25,699
really be a thing when we go to do the

1634
01:53:22,789 --> 01:53:28,819
parse pieces what we'd want to do here

1635
01:53:25,699 --> 01:53:39,260
is actually just send in the file itself

1636
01:53:28,819 --> 01:53:41,179
the full filename I think so that yeah I

1637
01:53:39,260 --> 01:53:43,159
mean that's just it's like what we're

1638
01:53:41,180 --> 01:53:46,900
doing here right we want to just kind of

1639
01:53:43,159 --> 01:53:50,149
say look you can parse the whole thing

1640
01:53:46,899 --> 01:53:52,579
yourself and we're not well we're just

1641
01:53:50,149 --> 01:53:55,159
gonna do it many times and it's gonna be

1642
01:53:52,579 --> 01:53:57,829
piggy and it's fine

1643
01:53:55,159 --> 01:53:59,779
so I would say yeah like since this is

1644
01:53:57,829 --> 01:54:03,769
only on import I'm fine with it being

1645
01:53:59,779 --> 01:54:05,920
piggy for now so I would say we just

1646
01:54:03,770 --> 01:54:17,690
have a thing here that's like hey let's

1647
01:54:05,920 --> 01:54:24,289
parse the thing that we get as it comes

1648
01:54:17,689 --> 01:54:27,199
in I don't know what all that but we'll

1649
01:54:24,289 --> 01:54:31,010
first parse it to get this stuff out and

1650
01:54:27,199 --> 01:54:33,859
then go you know further from there so

1651
01:54:31,010 --> 01:54:43,180
the way I'd like to do that is I like to

1652
01:54:33,859 --> 01:54:43,179
say probably something like this

1653
01:54:54,618 --> 01:54:58,889
so I'd like to do something where we

1654
01:54:56,578 --> 01:55:18,179
read a token out of the file name and

1655
01:54:58,889 --> 01:55:20,939
then use it something like that so we

1656
01:55:18,179 --> 01:55:25,679
kind of grab pieces out of the text as

1657
01:55:20,939 --> 01:55:26,939
we go and then in here where we do sort

1658
01:55:25,679 --> 01:55:30,899
of begin tags

1659
01:55:26,939 --> 01:55:42,479
maybe we just say look parse the rest of

1660
01:55:30,899 --> 01:55:47,010
this thing uh and add all those in you

1661
01:55:42,479 --> 01:55:50,369
know what I mean and then we'll add any

1662
01:55:47,010 --> 01:55:52,909
additional tags that we want to add on

1663
01:55:50,368 --> 01:55:58,438
top of it and then we'll close it off

1664
01:55:52,908 --> 01:56:03,418
right that seems reasonable to me

1665
01:55:58,439 --> 01:56:05,719
reasonable to me and so when we go

1666
01:56:03,418 --> 01:56:10,528
through parsing these out we'll just say

1667
01:56:05,719 --> 01:56:14,819
yeah you know there's a way to grab the

1668
01:56:10,529 --> 01:56:19,349
next one of these off of the list and

1669
01:56:14,819 --> 01:56:21,389
you know there's a thing in here that

1670
01:56:19,349 --> 01:56:25,828
just has whatever the text of the thing

1671
01:56:21,389 --> 01:56:27,239
is and we don't have to really think

1672
01:56:25,828 --> 01:56:29,128
about it too much harder than that at

1673
01:56:27,238 --> 01:56:31,948
the moment but we'll probably make this

1674
01:56:29,128 --> 01:56:33,418
a little bit better once we go to do

1675
01:56:31,948 --> 01:56:39,828
like sort of something a little more

1676
01:56:33,418 --> 01:56:43,038
real but what we can do here is just say

1677
01:56:39,828 --> 01:56:48,238
you know there's a there's a source and

1678
01:56:43,038 --> 01:56:52,889
the source is going to get advanced by

1679
01:56:48,238 --> 01:56:54,268
scanning for the next whatever right in

1680
01:56:52,889 --> 01:56:57,538
this case we'll just use underscores

1681
01:56:54,269 --> 01:56:59,869
like we were and then we're going to

1682
01:56:57,538 --> 01:56:59,868
return

1683
01:57:03,189 --> 01:57:10,339
so when we you know parse this forward

1684
01:57:07,609 --> 01:57:12,439
what we do is say use the same

1685
01:57:10,340 --> 01:57:16,100
construction we were using before to

1686
01:57:12,439 --> 01:57:17,719
scan you know through it

1687
01:57:16,100 --> 01:57:20,600
actually I guess we don't do that

1688
01:57:17,719 --> 01:57:22,880
because here we actually know so we kind

1689
01:57:20,600 --> 01:57:29,410
of know what the index is I think about

1690
01:57:22,880 --> 01:57:31,819
it right

1691
01:57:29,409 --> 01:57:36,289
so as we scan through here we just say

1692
01:57:31,819 --> 01:57:37,639
look if the one we're on is is an ending

1693
01:57:36,289 --> 01:57:39,380
piece and we don't have to check for

1694
01:57:37,640 --> 01:57:44,300
this anymore because we know we would

1695
01:57:39,380 --> 01:57:47,329
know when we got there right so if we

1696
01:57:44,300 --> 01:57:53,390
see that we've got one of these then we

1697
01:57:47,329 --> 01:57:56,988
just remember it right and we say the

1698
01:57:53,390 --> 01:58:03,320
result is just gonna be however many in

1699
01:57:56,988 --> 01:58:06,589
we are right and the data is just going

1700
01:58:03,319 --> 01:58:14,929
to be the same as whatever the source

1701
01:58:06,590 --> 01:58:19,250
was you know I'm saying and then we can

1702
01:58:14,930 --> 01:58:20,449
exit if we well and then we can update

1703
01:58:19,250 --> 01:58:22,520
the source right in there as well so

1704
01:58:20,448 --> 01:58:27,738
then we would say well the source count

1705
01:58:22,520 --> 01:58:32,870
is gonna be less by however many this

1706
01:58:27,738 --> 01:58:36,589
thing was plus the one we're on and the

1707
01:58:32,869 --> 01:58:40,640
data is gonna be the same right so the

1708
01:58:36,590 --> 01:58:42,949
source is gonna go the sides gonna go

1709
01:58:40,640 --> 01:58:44,000
down by that much and the data will go

1710
01:58:42,948 --> 01:58:48,639
forward by that much

1711
01:58:44,000 --> 01:58:50,689
and then here what we would do is say

1712
01:58:48,640 --> 01:58:55,940
well actually I guess we don't even have

1713
01:58:50,689 --> 01:58:57,710
to say it we can just do this so if we

1714
01:58:55,939 --> 01:59:02,059
never find an underscore we just return

1715
01:58:57,710 --> 01:59:04,939
whatever the input is I and advance by

1716
01:59:02,060 --> 01:59:06,770
that much at the end right so what we

1717
01:59:04,939 --> 01:59:09,979
could do is say something like this

1718
01:59:06,770 --> 01:59:13,830
which is to say that look whatever we

1719
01:59:09,979 --> 01:59:17,609
find will advance by that

1720
01:59:13,829 --> 01:59:20,369
and the only time we won't do that is if

1721
01:59:17,609 --> 01:59:26,069
there wasn't any advancement to actually

1722
01:59:20,369 --> 01:59:28,489
make right a la guess that doesn't quite

1723
01:59:26,069 --> 01:59:33,840
work in the case where you just have a

1724
01:59:28,489 --> 01:59:35,369
like a set of underscores so I guess

1725
01:59:33,840 --> 01:59:38,390
what you would have to say there it's

1726
01:59:35,369 --> 01:59:41,750
just like look if the source had a count

1727
01:59:38,390 --> 01:59:51,450
then whatever we're gonna do here do it

1728
01:59:41,750 --> 01:59:55,460
right and if it didn't then just return

1729
01:59:51,449 --> 01:59:58,739
it and I think that does the right thing

1730
01:59:55,460 --> 02:00:01,560
so that allows us to just keep going and

1731
01:59:58,739 --> 02:00:03,179
I suppose if we then didn't want to do

1732
02:00:01,560 --> 02:00:04,650
anything fancier the tokens we could

1733
02:00:03,180 --> 02:00:10,740
actually make these just be strings

1734
02:00:04,649 --> 02:00:15,539
themselves and keep it simple I'm not

1735
02:00:10,739 --> 02:00:17,760
really sure I want that because I might

1736
02:00:15,539 --> 02:00:22,260
want to have numbers in there like I

1737
02:00:17,760 --> 02:00:27,090
said so you know I'm you know I think I

1738
02:00:22,260 --> 02:00:30,630
want to do that probably and then just

1739
02:00:27,090 --> 02:00:34,409
what we'll do pretty much always when we

1740
02:00:30,630 --> 02:00:38,819
return is just actually set that value

1741
02:00:34,409 --> 02:00:46,109
to one and we'll deal with that later so

1742
02:00:38,819 --> 02:00:49,259
I want to do this and then we'll just

1743
02:00:46,109 --> 02:00:50,699
return those as we go so as you pop

1744
02:00:49,260 --> 02:00:54,030
things off the string

1745
02:00:50,699 --> 02:00:55,949
it just goes ahead and gives you back

1746
02:00:54,029 --> 02:00:59,699
those values and then you can you can

1747
02:00:55,949 --> 02:01:04,039
parse them incrementally and have a

1748
02:00:59,699 --> 02:01:08,880
little bit of a party right so I think

1749
02:01:04,039 --> 02:01:13,140
that's mostly what we would need to do

1750
02:01:08,880 --> 02:01:15,930
and ice yeah I don't think there's

1751
02:01:13,140 --> 02:01:19,230
really anything much else to it so then

1752
02:01:15,930 --> 02:01:23,579
in here what I want to do is I would

1753
02:01:19,229 --> 02:01:26,099
like to parse it so when we actually pop

1754
02:01:23,579 --> 02:01:27,569
that off and then we use it later in

1755
02:01:26,100 --> 02:01:32,900
here what I can do

1756
02:01:27,569 --> 02:01:32,899
is just sort of loop through and say

1757
02:01:42,529 --> 02:01:51,408
like that so these are the tags

1758
02:01:52,130 --> 02:02:01,909
I'll keep grabbing tokens off the tag

1759
02:01:55,319 --> 02:02:03,359
string if the name token has a count

1760
02:02:01,908 --> 02:02:07,649
we're good

1761
02:02:03,359 --> 02:02:10,139
otherwise we bail any here we can look

1762
02:02:07,649 --> 02:02:13,649
for the different kinds of tags that we

1763
02:02:10,139 --> 02:02:16,590
have you know what I mean so really what

1764
02:02:13,649 --> 02:02:21,089
we do here is just say we'd probably

1765
02:02:16,590 --> 02:02:23,639
make one of these sort of things that's

1766
02:02:21,090 --> 02:02:36,949
just like a tag mapping so we'd probably

1767
02:02:23,639 --> 02:02:43,699
say something like tag like named tag

1768
02:02:36,948 --> 02:02:47,908
good name tag right so we'd have a name

1769
02:02:43,698 --> 02:02:55,559
and we'd have an asset tag associated

1770
02:02:47,908 --> 02:02:57,409
with it right so inside wherever that

1771
02:02:55,560 --> 02:03:15,860
tag array

1772
02:02:57,409 --> 02:03:19,460
is assets you know we have something and

1773
02:03:15,859 --> 02:03:21,949
this is again why C and C++ are very bad

1774
02:03:19,460 --> 02:03:24,500
they have no way of just generating this

1775
02:03:21,949 --> 02:03:26,329
it should just be directly created from

1776
02:03:24,500 --> 02:03:29,810
here right

1777
02:03:26,329 --> 02:03:31,340
but hey forty years is a long time to

1778
02:03:29,810 --> 02:03:33,289
figure out that language is supposed to

1779
02:03:31,340 --> 02:03:39,220
have an inspection name so yeah what do

1780
02:03:33,289 --> 02:03:41,840
you do um so here's our name tags and

1781
02:03:39,220 --> 02:03:43,909
what I want to do is just say which are

1782
02:03:41,840 --> 02:03:45,619
the ones that were you know we've got at

1783
02:03:43,909 --> 02:03:49,430
the moment I'm just gonna say that we

1784
02:03:45,619 --> 02:03:52,550
have these and I'm just gonna give them

1785
02:03:49,430 --> 02:03:54,350
those actual names now I don't actually

1786
02:03:52,550 --> 02:03:57,350
want to do rap Z because this is

1787
02:03:54,350 --> 02:03:59,090
actually a string constant so if you

1788
02:03:57,350 --> 02:04:01,340
look at like something like this I

1789
02:03:59,090 --> 02:04:03,230
actually want the constant version that

1790
02:04:01,340 --> 02:04:04,520
just defines it in place I just want

1791
02:04:03,229 --> 02:04:06,709
this to be a table that's compiled and I

1792
02:04:04,520 --> 02:04:11,570
don't want to call anything so I just

1793
02:04:06,710 --> 02:04:14,239
want it to look like that right and so

1794
02:04:11,569 --> 02:04:16,279
in here where we say like hand bones

1795
02:04:14,239 --> 02:04:20,569
like bones would be a tag that comes in

1796
02:04:16,279 --> 02:04:29,090
there right and so here what did we call

1797
02:04:20,569 --> 02:04:30,349
it just dark energy and maybe you don't

1798
02:04:29,090 --> 02:04:33,340
even need to call out dark energy maybe

1799
02:04:30,350 --> 02:04:33,340
we should just call it dark

1800
02:04:47,189 --> 02:04:52,058
you know I'm saying and so that just

1801
02:04:50,380 --> 02:04:54,159
gives us a way of translating between

1802
02:04:52,059 --> 02:04:55,719
these two in some way that that we can

1803
02:04:54,158 --> 02:04:58,629
easily add to because we're gonna have a

1804
02:04:55,719 --> 02:05:02,469
lot of these so let's suppose that it's

1805
02:04:58,630 --> 02:05:05,800
just that and so dark is just dark

1806
02:05:02,469 --> 02:05:07,899
energy and we again don't have to be

1807
02:05:05,800 --> 02:05:10,150
one-to-one like if we wanted to we could

1808
02:05:07,899 --> 02:05:14,649
allow either of those in case like you

1809
02:05:10,149 --> 02:05:16,618
just forget which one is which right and

1810
02:05:14,649 --> 02:05:20,170
so what we want to do here is just say

1811
02:05:16,618 --> 02:05:23,109
this array of tags we want to figure out

1812
02:05:20,170 --> 02:05:26,889
which one it is and so what we can say

1813
02:05:23,109 --> 02:05:30,880
is just look give us a way of switching

1814
02:05:26,889 --> 02:05:33,909
between those right so tag ID from here

1815
02:05:30,880 --> 02:05:45,368
is the string we just do a for I loop

1816
02:05:33,908 --> 02:05:47,259
over the ones that we've got and you'll

1817
02:05:45,368 --> 02:05:49,269
notice that you couldn't do this if you

1818
02:05:47,260 --> 02:05:52,869
just used an array that had the same

1819
02:05:49,270 --> 02:05:54,429
index as each of the things so if we

1820
02:05:52,868 --> 02:05:56,948
just made a mirroring thing with the

1821
02:05:54,429 --> 02:05:59,649
strings it's not as powerful so you kind

1822
02:05:56,948 --> 02:06:01,538
of want this to actually have a mapping

1823
02:05:59,649 --> 02:06:04,328
switch you can have more than one string

1824
02:06:01,538 --> 02:06:06,550
defined for every ID because you might

1825
02:06:04,328 --> 02:06:09,788
just want to have a quick way of saying

1826
02:06:06,550 --> 02:06:12,130
oh the artist typed gloved instead of

1827
02:06:09,788 --> 02:06:13,929
glove let's just accept that as glove

1828
02:06:12,130 --> 02:06:17,219
instead of forcing people to rename

1829
02:06:13,929 --> 02:06:17,219
files for no reason right

1830
02:06:20,840 --> 02:06:26,960
and so in here we're just gonna say if

1831
02:06:23,949 --> 02:06:29,329
strings are equal not know if we have a

1832
02:06:26,960 --> 02:06:30,949
lowercase looks like we don't but we

1833
02:06:29,329 --> 02:06:35,630
would probably do lowercase here if we

1834
02:06:30,949 --> 02:06:44,149
had it we'll just say hey if the strings

1835
02:06:35,630 --> 02:06:50,449
are equal then that's the tag ID there's

1836
02:06:44,149 --> 02:07:01,039
got to be a nun said the priest or there

1837
02:06:50,449 --> 02:07:07,010
doesn't wow what how did we not have a

1838
02:07:01,039 --> 02:07:09,310
zero tag ID people who is responsible

1839
02:07:07,010 --> 02:07:09,310
for this

1840
02:07:12,430 --> 02:07:31,690
that is super terrible now a fan of that

1841
02:07:22,779 --> 02:07:36,909
not a fan at all I'm gonna do this here

1842
02:07:31,689 --> 02:07:36,909
because it'll work but

1843
02:07:42,479 --> 02:07:56,159
I would like that to be zero okay it's

1844
02:07:52,560 --> 02:07:59,160
not zero oh well so we do result here

1845
02:07:56,159 --> 02:08:01,199
and we do the name tags for whichever

1846
02:07:59,159 --> 02:08:03,269
the one is that we're on and we returned

1847
02:08:01,199 --> 02:08:08,159
that ID that gives us a way to decrypt

1848
02:08:03,270 --> 02:08:10,350
that right and so all we're doing here

1849
02:08:08,159 --> 02:08:11,970
is just saying if the name you gave us

1850
02:08:10,350 --> 02:08:13,739
matches the name of the table then we

1851
02:08:11,970 --> 02:08:16,890
return it otherwise we have no idea what

1852
02:08:13,738 --> 02:08:18,869
it is so you know don't ask us so in

1853
02:08:16,890 --> 02:08:20,579
here when we say we're gonna begin these

1854
02:08:18,869 --> 02:08:23,460
tags we're just going to go ahead and

1855
02:08:20,579 --> 02:08:25,260
parse them one at a time and when we see

1856
02:08:23,460 --> 02:08:28,770
each individual name token come out

1857
02:08:25,260 --> 02:08:35,130
we're just gonna ask you to tell us what

1858
02:08:28,770 --> 02:08:36,900
it is please right because the only

1859
02:08:35,130 --> 02:08:41,489
things that we're gonna understand at

1860
02:08:36,899 --> 02:08:43,049
this point is the thing the the the ones

1861
02:08:41,488 --> 02:08:44,399
are in that table like maybe in the

1862
02:08:43,050 --> 02:08:47,460
future we'll do other stuff but the

1863
02:08:44,399 --> 02:08:49,649
moment we definitely don't so what we

1864
02:08:47,460 --> 02:08:56,579
want to do is say give us a tag ID if

1865
02:08:49,649 --> 02:08:58,829
the tag ID is not equal to tag none then

1866
02:08:56,579 --> 02:09:01,769
we can process it otherwise maybe we

1867
02:08:58,829 --> 02:09:03,119
give an error maybe we don't I don't

1868
02:09:01,770 --> 02:09:09,840
really know how we want to deal with

1869
02:09:03,119 --> 02:09:18,840
that my inclination is to say that we

1870
02:09:09,840 --> 02:09:20,819
don't recognize the tag name and maybe

1871
02:09:18,840 --> 02:09:23,690
we even print out the tag name I don't

1872
02:09:20,819 --> 02:09:27,289
know that's maybe getting a little saucy

1873
02:09:23,689 --> 02:09:30,289
but you know we could do it

1874
02:09:27,289 --> 02:09:30,289
potentially

1875
02:09:33,550 --> 02:09:48,329
I think out F let's just do this so it

1876
02:09:37,689 --> 02:09:48,329
would be that right yeah right

1877
02:09:51,750 --> 02:09:58,390
mmm the problem with it is we don't

1878
02:09:57,579 --> 02:10:02,229
actually

1879
02:09:58,390 --> 02:10:06,430
oops sorry the problem with it is we

1880
02:10:02,229 --> 02:10:09,939
don't actually have like we want to be

1881
02:10:06,430 --> 02:10:13,600
able to just print out length strings in

1882
02:10:09,939 --> 02:10:18,759
in the out F right that work that we're

1883
02:10:13,600 --> 02:10:27,640
looking at there look in here you know

1884
02:10:18,760 --> 02:10:31,020
so like our format string list you know

1885
02:10:27,640 --> 02:10:34,020
it's got all this mumbo-jumbo in there

1886
02:10:31,020 --> 02:10:34,020
and

1887
02:10:39,328 --> 02:10:46,488
but when we print things out you know we

1888
02:10:43,769 --> 02:10:46,489
can do

1889
02:10:56,350 --> 02:11:01,100
it looks like we can do that right we

1890
02:10:59,210 --> 02:11:03,260
can we can't actually read it in that

1891
02:11:01,100 --> 02:11:05,090
way if we want to the other thing we

1892
02:11:03,260 --> 02:11:12,739
could do is add something here that is

1893
02:11:05,090 --> 02:11:15,140
designed to print those specifically but

1894
02:11:12,739 --> 02:11:17,090
it looks like we could do that so if we

1895
02:11:15,140 --> 02:11:19,789
wanted to again there we can just say

1896
02:11:17,090 --> 02:11:22,850
like alright well you know print it out

1897
02:11:19,789 --> 02:11:39,260
there it is the problem with that is

1898
02:11:22,850 --> 02:11:44,079
that strings themselves this is too

1899
02:11:39,260 --> 02:11:46,550
large right so it would not properly

1900
02:11:44,079 --> 02:11:48,439
this will not properly get converted to

1901
02:11:46,550 --> 02:11:51,320
a 32-bit value because it's a 64-bit

1902
02:11:48,439 --> 02:11:53,569
value and that wouldn't get downcast so

1903
02:11:51,319 --> 02:11:58,009
what you again have to do is you have to

1904
02:11:53,569 --> 02:12:01,609
like remember here this is why again C

1905
02:11:58,010 --> 02:12:06,710
and C++ terrible at this if you want to

1906
02:12:01,609 --> 02:12:09,319
have a way and do not say i/o streams

1907
02:12:06,710 --> 02:12:12,500
because that doesn't solve this problem

1908
02:12:09,319 --> 02:12:15,170
iOS dreams are a different way of doing

1909
02:12:12,500 --> 02:12:18,199
things but if you actually want to have

1910
02:12:15,170 --> 02:12:20,149
a function that just takes a variable

1911
02:12:18,199 --> 02:12:22,579
number of parameters there's no way to

1912
02:12:20,149 --> 02:12:25,609
push the types of those parameters on

1913
02:12:22,579 --> 02:12:30,100
before the types without doing a lot of

1914
02:12:25,609 --> 02:12:35,739
really disgusting stuff because again I

1915
02:12:30,100 --> 02:12:35,740
don't know who works on C++ but they are

1916
02:12:36,189 --> 02:12:41,869
often some la-la land where people don't

1917
02:12:38,899 --> 02:12:46,129
actually program stuff for a living so

1918
02:12:41,869 --> 02:12:47,390
anyway we can do that but it's a little

1919
02:12:46,130 --> 02:12:50,829
ugly so if we were gonna print out

1920
02:12:47,390 --> 02:12:50,829
strings we should add you know

1921
02:12:55,359 --> 02:13:01,250
because that's just too error-prone in

1922
02:12:57,859 --> 02:13:02,989
my opinion anyway so if we look at what

1923
02:13:01,250 --> 02:13:06,970
this is doing assuming that the tag idea

1924
02:13:02,989 --> 02:13:06,969
that we have on there is is actually

1925
02:13:07,659 --> 02:13:16,939
valid then we can go ahead and do an ad

1926
02:13:11,210 --> 02:13:23,630
tag and we know the tag ID and the name

1927
02:13:16,939 --> 02:13:26,569
token gives us the value like so

1928
02:13:23,630 --> 02:13:28,970
so mostly then what we have to do is

1929
02:13:26,569 --> 02:13:34,250
just actually figure out the right way

1930
02:13:28,970 --> 02:13:46,490
to build this tag array and yeah you

1931
02:13:34,250 --> 02:13:48,260
know for every tagging value that we

1932
02:13:46,489 --> 02:13:50,389
have we need some way of actually

1933
02:13:48,260 --> 02:13:53,539
pushing it on there

1934
02:13:50,390 --> 02:13:53,539
[Music]

1935
02:13:57,399 --> 02:14:25,609
what is asset oh yeah that's don't need

1936
02:14:01,969 --> 02:14:27,198
to say that twice sue I think mostly

1937
02:14:25,609 --> 02:14:29,829
what we've got to do now is just make

1938
02:14:27,198 --> 02:14:33,889
sure that we've got everything we need

1939
02:14:29,829 --> 02:14:36,979
to actually add a raise of tags that

1940
02:14:33,890 --> 02:14:40,780
makes sense not sure why I'm not able to

1941
02:14:36,979 --> 02:14:40,779
jump to error there there we go

1942
02:14:44,948 --> 02:14:59,089
this is actually an array lookup and I

1943
02:14:53,600 --> 02:15:02,120
think that should do it now when we are

1944
02:14:59,090 --> 02:15:09,440
parsing these we do want I think an

1945
02:15:02,119 --> 02:15:14,599
error stream to be passed in so we also

1946
02:15:09,439 --> 02:15:16,759
need the asset structure because without

1947
02:15:14,600 --> 02:15:23,079
it we would not be able to reserve any

1948
02:15:16,760 --> 02:15:23,079
tags right so we got to do that as well

1949
02:15:28,300 --> 02:15:32,329
this part here we haven't done yep I

1950
02:15:31,220 --> 02:15:45,530
just want to preserve it for posterity

1951
02:15:32,329 --> 02:15:48,680
uh so we need to have this obey the

1952
02:15:45,529 --> 02:15:52,849
standard way we're looking at it and

1953
02:15:48,680 --> 02:16:05,510
this is you know whatever this is do

1954
02:15:52,850 --> 02:16:14,120
that in a second and I think that should

1955
02:16:05,510 --> 02:16:17,690
be okay so this we know is four and I

1956
02:16:14,119 --> 02:16:20,409
think that's everything so we've got

1957
02:16:17,689 --> 02:16:20,409
begin tags

1958
02:16:29,828 --> 02:16:39,939
and we've got everything else this just

1959
02:16:32,290 --> 02:16:42,309
has to be named token text and then

1960
02:16:39,939 --> 02:16:45,219
we've got a nice little way to read

1961
02:16:42,308 --> 02:16:45,759
everything from the file name and go

1962
02:16:45,218 --> 02:16:56,169
from there

1963
02:16:45,760 --> 02:16:59,739
parse pieces in this case I don't really

1964
02:16:56,170 --> 02:17:12,939
want it to pass the address of a string

1965
02:16:59,739 --> 02:17:16,718
what was it trying to do there oh so

1966
02:17:12,939 --> 02:17:18,849
that's not an actual string it's just a

1967
02:17:16,718 --> 02:17:22,358
care star but I would like it to be a

1968
02:17:18,849 --> 02:17:26,710
string so I want to capture that into a

1969
02:17:22,359 --> 02:17:30,579
string for it to use right like so so

1970
02:17:26,709 --> 02:17:36,518
I'm just gonna do that so that gets us

1971
02:17:30,579 --> 02:17:39,579
down to where we could we're within

1972
02:17:36,519 --> 02:17:42,489
striking distance of having the parsing

1973
02:17:39,579 --> 02:17:46,718
work we just need the tags to actually

1974
02:17:42,489 --> 02:17:49,659
be a thing right sue

1975
02:17:46,718 --> 02:17:52,869
asset and errors here we've got errors

1976
02:17:49,659 --> 02:17:55,329
and we've got assets so we just do this

1977
02:17:52,870 --> 02:17:58,149
so really all we're talking about is how

1978
02:17:55,329 --> 02:18:03,489
do we do the addition right how do we do

1979
02:17:58,148 --> 02:18:05,349
the addition here and so we kind of want

1980
02:18:03,489 --> 02:18:08,530
to do like a little builder thing I

1981
02:18:05,349 --> 02:18:11,079
think and maybe what we could do here is

1982
02:18:08,530 --> 02:18:14,019
just say look we know there's only so

1983
02:18:11,079 --> 02:18:16,450
many tags we're gonna allow on here so

1984
02:18:14,019 --> 02:18:18,130
we could just cheese out and say like

1985
02:18:16,450 --> 02:18:21,870
that's how it works right

1986
02:18:18,129 --> 02:18:21,869
like we could just say

1987
02:18:25,920 --> 02:18:36,058
buffer them up then do reserves and go

1988
02:18:28,739 --> 02:18:38,010
or we could just stream them out I'm

1989
02:18:36,058 --> 02:18:45,659
really not sure which one of those two I

1990
02:18:38,010 --> 02:18:55,139
want to do let's just stream them out

1991
02:18:45,659 --> 02:18:57,329
for now maybe and I guess the other

1992
02:18:55,138 --> 02:19:00,509
thing is we may not want to allow the

1993
02:18:57,329 --> 02:19:03,808
import to complete in cases where we

1994
02:19:00,510 --> 02:19:05,610
don't recognize like the tags or

1995
02:19:03,808 --> 02:19:07,888
something I guess we'll cross that

1996
02:19:05,610 --> 02:19:13,170
bridge when we come to it so when we do

1997
02:19:07,888 --> 02:19:15,808
a begin tag ad tag in this case I'm

1998
02:19:13,170 --> 02:19:18,870
gonna say like maybe there's just a

1999
02:19:15,808 --> 02:19:30,179
little builder here that that that goes

2000
02:19:18,870 --> 02:19:32,160
on right and so maybe you know that is

2001
02:19:30,179 --> 02:19:36,808
something that you pass in the headend

2002
02:19:32,159 --> 02:19:39,750
or maybe not I'm not sure but let's say

2003
02:19:36,808 --> 02:19:41,159
it looks something like that and and

2004
02:19:39,750 --> 02:19:41,849
maybe furthermore it looks something

2005
02:19:41,159 --> 02:19:45,119
like that

2006
02:19:41,849 --> 02:19:53,670
so we've got a little thing here this is

2007
02:19:45,120 --> 02:19:56,970
the tag builder doodad and get something

2008
02:19:53,670 --> 02:19:58,860
that just makes this easy inside here

2009
02:19:56,969 --> 02:19:59,938
we're just going to store the stuff that

2010
02:19:58,860 --> 02:20:03,930
we actually need

2011
02:19:59,939 --> 02:20:07,170
so probably the assets probably the

2012
02:20:03,930 --> 02:20:16,200
first tag index and probably the tag

2013
02:20:07,170 --> 02:20:21,930
output something like this so when you

2014
02:20:16,200 --> 02:20:25,409
actually send one of these down and you

2015
02:20:21,930 --> 02:20:27,300
want to add a tag what its gonna do is

2016
02:20:25,409 --> 02:20:30,000
something like this right it's gonna say

2017
02:20:27,299 --> 02:20:33,840
give me the tag for the current tag

2018
02:20:30,000 --> 02:20:39,000
index and then go ahead and increment

2019
02:20:33,840 --> 02:20:39,930
that right then set that tag stuff to

2020
02:20:39,000 --> 02:20:44,699
what ever it should

2021
02:20:39,930 --> 02:20:47,068
right so for some reason we seem to have

2022
02:20:44,699 --> 02:20:49,710
deleted the code where we were setting

2023
02:20:47,068 --> 02:20:51,059
tags before but you know it's pretty

2024
02:20:49,709 --> 02:20:56,369
straightforward it's just an ID and a

2025
02:20:51,059 --> 02:21:03,659
value right so if we quick look at one

2026
02:20:56,370 --> 02:21:06,149
of those looks like yeah so it's just an

2027
02:21:03,659 --> 02:21:09,920
ID and a value so if it's just an ID and

2028
02:21:06,148 --> 02:21:14,129
a value we just assign them off to go

2029
02:21:09,920 --> 02:21:16,439
and then we go ahead and well I guess we

2030
02:21:14,129 --> 02:21:17,849
don't have to return the tag right so

2031
02:21:16,439 --> 02:21:20,639
the only thing we have to do here is

2032
02:21:17,850 --> 02:21:22,350
issue an error if we can't right so we

2033
02:21:20,639 --> 02:21:25,559
need to check to make sure that we could

2034
02:21:22,350 --> 02:21:29,068
actually right but if we can right then

2035
02:21:25,559 --> 02:21:33,180
we're done in here where we do the begin

2036
02:21:29,068 --> 02:21:37,139
tag stuff this has to actually set that

2037
02:21:33,180 --> 02:21:41,068
up so this is the tag builder here the

2038
02:21:37,139 --> 02:21:44,340
tag builder well I'll just I'll call

2039
02:21:41,068 --> 02:21:45,930
this builder in this case is going to

2040
02:21:44,340 --> 02:21:48,960
store the assets because we're gonna

2041
02:21:45,930 --> 02:21:55,920
need that it's gonna store the first tag

2042
02:21:48,959 --> 02:21:58,619
index which comes from here and I don't

2043
02:21:55,920 --> 02:22:03,659
know that I actually want to do reserve

2044
02:21:58,620 --> 02:22:06,960
tags so I think this is gonna have to be

2045
02:22:03,659 --> 02:22:09,059
more special purpose than that right so

2046
02:22:06,959 --> 02:22:10,978
in this case we've got reserve tags as a

2047
02:22:09,059 --> 02:22:12,238
function here which like looks to see

2048
02:22:10,978 --> 02:22:13,349
whether it can actually do this but

2049
02:22:12,238 --> 02:22:15,750
we're actually going to do this as a

2050
02:22:13,350 --> 02:22:19,800
two-step process so we're actually gonna

2051
02:22:15,750 --> 02:22:22,040
do here is say look the first tag is the

2052
02:22:19,799 --> 02:22:25,108
tag count that's just what's going down

2053
02:22:22,040 --> 02:22:27,810
we know what the max tag count is so

2054
02:22:25,109 --> 02:22:29,970
here we're just gonna say look if the

2055
02:22:27,809 --> 02:22:34,829
max tag count would allow us to write

2056
02:22:29,969 --> 02:22:37,679
this thing so if the tag has less than

2057
02:22:34,829 --> 02:22:40,590
the max tag count go nuts otherwise

2058
02:22:37,680 --> 02:22:44,010
maybe not right that's sorry that's

2059
02:22:40,590 --> 02:22:47,880
correct tag index otherwise no dice

2060
02:22:44,010 --> 02:22:50,550
right and so here you know maybe we want

2061
02:22:47,879 --> 02:22:52,289
to do issue an error

2062
02:22:50,549 --> 02:22:54,389
but we probably don't want to issue an

2063
02:22:52,290 --> 02:22:56,280
error they're actually probably what we

2064
02:22:54,389 --> 02:22:59,789
want to do is say builder error equals

2065
02:22:56,280 --> 02:23:03,750
true and that way we can just actually

2066
02:22:59,790 --> 02:23:05,730
have that as a separate thing that gets

2067
02:23:03,750 --> 02:23:07,620
handled later that's the way I would

2068
02:23:05,729 --> 02:23:09,869
probably prefer to do it so we add all

2069
02:23:07,620 --> 02:23:12,180
those tags in there then at the end what

2070
02:23:09,870 --> 02:23:14,370
we do is we finally go to write this

2071
02:23:12,180 --> 02:23:16,590
thing out then we can say well the first

2072
02:23:14,370 --> 02:23:22,980
time in the tag index is whatever the

2073
02:23:16,590 --> 02:23:24,989
Builder says it is right so this is

2074
02:23:22,979 --> 02:23:27,299
builder first tag index right because

2075
02:23:24,989 --> 02:23:30,119
that's the thing that we actually set up

2076
02:23:27,299 --> 02:23:32,729
here we need to set that cur tag index

2077
02:23:30,120 --> 02:23:35,640
to be equal to the first tag so this is

2078
02:23:32,729 --> 02:23:38,069
basically you know we just start at

2079
02:23:35,639 --> 02:23:41,129
whatever the count is and we go from

2080
02:23:38,069 --> 02:23:43,139
there when we actually go to finish up

2081
02:23:41,129 --> 02:23:45,479
then we just say well one passed the

2082
02:23:43,139 --> 02:23:52,770
last tag index is just going to be

2083
02:23:45,479 --> 02:23:55,889
whatever the current tag was right and

2084
02:23:52,771 --> 02:24:00,570
then we're done when we do this though

2085
02:23:55,889 --> 02:24:04,500
we may have had an error so we may want

2086
02:24:00,569 --> 02:24:06,810
to in here have some way of issuing an

2087
02:24:04,500 --> 02:24:08,280
error out to the stream errors so you

2088
02:24:06,810 --> 02:24:11,399
know maybe what I'll say is here we'll

2089
02:24:08,280 --> 02:24:14,100
just say when we end you can send errors

2090
02:24:11,399 --> 02:24:16,409
down and in this case what we'll do is

2091
02:24:14,100 --> 02:24:19,470
when we encounter an error of that form

2092
02:24:16,409 --> 02:24:22,739
we will issue it so if in here we see

2093
02:24:19,469 --> 02:24:29,069
that the builder had an error on it we

2094
02:24:22,739 --> 02:24:33,289
will do out F errors you know out of tag

2095
02:24:29,069 --> 02:24:33,289
space or something like this right

2096
02:24:38,049 --> 02:24:42,438
and that should let us continue to sort

2097
02:24:40,670 --> 02:24:43,760
of just work that and we can make a

2098
02:24:42,439 --> 02:24:45,800
thing that maybe in Crete you know

2099
02:24:43,760 --> 02:24:47,809
reallocates the tag array or something

2100
02:24:45,799 --> 02:24:51,108
like this I don't know exactly how we

2101
02:24:47,809 --> 02:24:52,969
want to do that but we can we can

2102
02:24:51,109 --> 02:25:10,309
probably work on making it so if that

2103
02:24:52,969 --> 02:25:13,969
error can't really happen in practice so

2104
02:25:10,309 --> 02:25:15,590
I think that would just work and that

2105
02:25:13,969 --> 02:25:20,108
would be the end of it right so that

2106
02:25:15,590 --> 02:25:22,609
should associate what we wanted I think

2107
02:25:20,109 --> 02:25:44,710
that should associate what we wanted in

2108
02:25:22,609 --> 02:25:44,710
this case go in builder and yeah

2109
02:25:54,209 --> 02:25:58,509
and I guess I will leave the asset ID on

2110
02:25:57,248 --> 02:26:01,748
the end because it just looked better

2111
02:25:58,509 --> 02:26:04,119
down there and it was easier so I guess

2112
02:26:01,748 --> 02:26:06,189
we'll just do that we could actually

2113
02:26:04,119 --> 02:26:09,668
have everything down on that one in fact

2114
02:26:06,189 --> 02:26:13,838
if we wanted to in fact maybe that's

2115
02:26:09,668 --> 02:26:25,748
what we should do so we just say hey we

2116
02:26:13,838 --> 02:26:27,908
do an end tags it looked like that we

2117
02:26:25,748 --> 02:26:29,529
pass the rest of the things like we

2118
02:26:27,908 --> 02:26:30,998
passed the type and the file name in

2119
02:26:29,529 --> 02:26:34,238
there and we just do the parsing in

2120
02:26:30,998 --> 02:26:37,238
there right so begin tags doesn't do

2121
02:26:34,238 --> 02:26:41,020
anything like it just does that and then

2122
02:26:37,238 --> 02:26:43,179
in here we go through and add all the

2123
02:26:41,020 --> 02:26:45,399
rest of the tags so we add the basic

2124
02:26:43,179 --> 02:26:50,259
category and then we add all these other

2125
02:26:45,398 --> 02:26:53,618
things in and the tag string actually

2126
02:26:50,259 --> 02:26:55,658
comes in here right so everything's in

2127
02:26:53,619 --> 02:26:57,459
in tags and the only thing that's in

2128
02:26:55,658 --> 02:26:59,498
begin tags is just just to get things

2129
02:26:57,459 --> 02:27:15,729
started by passing the assets in and

2130
02:26:59,498 --> 02:27:17,770
that's it that seems fine and I guess we

2131
02:27:15,728 --> 02:27:23,038
don't care about that either so I think

2132
02:27:17,770 --> 02:27:23,039
that's maybe we needed

2133
02:27:28,299 --> 02:27:34,939
might be us so we spammed a lot of stuff

2134
02:27:32,450 --> 02:27:36,320
in there let's before ending for the day

2135
02:27:34,940 --> 02:27:37,521
because I know we went overtime but I

2136
02:27:36,319 --> 02:27:41,270
just was in the middle of it didn't

2137
02:27:37,521 --> 02:27:46,909
really feel like stopping um let's just

2138
02:27:41,271 --> 02:27:49,579
go ahead and just try real quick

2139
02:27:46,909 --> 02:27:52,760
to step through that right cuz I just

2140
02:27:49,579 --> 02:27:54,860
want to see I just want to get rid of

2141
02:27:52,760 --> 02:27:57,979
the basic bugs and then we'll leave the

2142
02:27:54,860 --> 02:27:59,960
rest for next week which is using the

2143
02:27:57,979 --> 02:28:05,060
system and finding out if it actually is

2144
02:27:59,959 --> 02:28:08,449
what we want or not alright so if we're

2145
02:28:05,060 --> 02:28:12,709
gonna do this import let me force it to

2146
02:28:08,450 --> 02:28:15,800
re-import everything that we've got so

2147
02:28:12,709 --> 02:28:16,489
all the hands will get reread and we'll

2148
02:28:15,799 --> 02:28:24,140
see what they do

2149
02:28:16,489 --> 02:28:26,271
so in here when we when we go to do

2150
02:28:24,140 --> 02:28:29,840
parse pieces I want to see what happens

2151
02:28:26,271 --> 02:28:32,480
so for starters it's you know we're

2152
02:28:29,840 --> 02:28:34,130
passing in this file name and that's got

2153
02:28:32,479 --> 02:28:38,270
a you know plate title screen right it's

2154
02:28:34,129 --> 02:28:40,489
got the whole thing in there so the

2155
02:28:38,271 --> 02:28:44,150
first thing I want to do is just make

2156
02:28:40,489 --> 02:28:46,549
sure that pop token works right so let's

2157
02:28:44,149 --> 02:28:49,789
see what happens so here's the result

2158
02:28:46,549 --> 02:28:53,060
that it's considering right now which is

2159
02:28:49,790 --> 02:28:55,130
to say it's the whole thing it's gonna

2160
02:28:53,060 --> 02:28:56,720
look for an underscore it's gonna look

2161
02:28:55,129 --> 02:28:59,779
for five characters and not find it but

2162
02:28:56,720 --> 02:29:02,409
then it is gonna find it right and now

2163
02:28:59,780 --> 02:29:07,190
it's made a result which is five long

2164
02:29:02,409 --> 02:29:09,140
plae right that's correct but now we

2165
02:29:07,190 --> 02:29:13,510
have to make sure that it correctly

2166
02:29:09,140 --> 02:29:18,649
removes from the source is this right

2167
02:29:13,510 --> 02:29:21,739
the word plate and the underscore and it

2168
02:29:18,649 --> 02:29:23,329
did right so that's good and now we can

2169
02:29:21,739 --> 02:29:25,220
look at what we've got and we see we

2170
02:29:23,329 --> 02:29:28,280
have a plate well it doesn't matter

2171
02:29:25,220 --> 02:29:32,060
because we're not actually using that

2172
02:29:28,280 --> 02:29:34,489
path so we we leave and off we go

2173
02:29:32,060 --> 02:29:36,949
right so now let's take a look at the

2174
02:29:34,489 --> 02:29:38,539
path assuming that works that actually

2175
02:29:36,950 --> 02:29:40,820
involves thing we do recognize which is

2176
02:29:38,540 --> 02:29:42,860
here and so now we want to do

2177
02:29:40,819 --> 02:29:45,770
actually build the tag array out of

2178
02:29:42,860 --> 02:29:47,450
what's left right so we look at the file

2179
02:29:45,771 --> 02:29:49,971
name that we've got here it's just glove

2180
02:29:47,450 --> 02:29:52,700
fingers we want to now make sure that we

2181
02:29:49,970 --> 02:29:57,500
build a tag set that has glove and

2182
02:29:52,700 --> 02:30:00,320
fingers in it right so let's go ahead

2183
02:29:57,500 --> 02:30:02,810
and try to do that we start by creating

2184
02:30:00,319 --> 02:30:05,329
a tag builder we're going to add one of

2185
02:30:02,810 --> 02:30:07,220
these tags in there right so which is

2186
02:30:05,329 --> 02:30:09,560
what we're gonna do here 4:27 we're

2187
02:30:07,220 --> 02:30:12,109
gonna add one and then we're gonna write

2188
02:30:09,560 --> 02:30:16,220
it in to the tag array which should be

2189
02:30:12,110 --> 02:30:18,021
fine we then got to do our parse again

2190
02:30:16,220 --> 02:30:21,439
we added another tag there which again

2191
02:30:18,021 --> 02:30:24,739
also fine so let's see what we get when

2192
02:30:21,440 --> 02:30:27,380
we pop the first name token we get glove

2193
02:30:24,739 --> 02:30:30,800
which is what we want let's see if we

2194
02:30:27,379 --> 02:30:33,020
could recognize glove though we do so

2195
02:30:30,800 --> 02:30:35,779
that's good we then go to add that tag

2196
02:30:33,021 --> 02:30:38,000
as a one so it has a glove tag of one

2197
02:30:35,780 --> 02:30:40,070
that's exactly what we wanted we now

2198
02:30:38,000 --> 02:30:43,280
come back around parse the next thing

2199
02:30:40,069 --> 02:30:47,000
out fingers is what we wanted do we find

2200
02:30:43,280 --> 02:30:50,110
it we do so we have that one and now we

2201
02:30:47,000 --> 02:30:53,030
should get okay so there we've got a bug

2202
02:30:50,110 --> 02:30:59,021
we should have gotten for this next name

2203
02:30:53,030 --> 02:31:02,450
token nothing right but instead we got

2204
02:30:59,021 --> 02:31:06,230
73 which is not a particularly

2205
02:31:02,450 --> 02:31:12,650
compelling number to receive you know

2206
02:31:06,229 --> 02:31:15,430
I'm saying to you so our our pop token

2207
02:31:12,649 --> 02:31:15,431
is busted

2208
02:31:29,250 --> 02:31:34,219
and I'm not sure why

2209
02:31:36,840 --> 02:31:39,978
that was the case

2210
02:31:50,040 --> 02:31:59,461
so let's try that again shall we

2211
02:31:55,069 --> 02:32:01,529
it's the first time we enter n tags so

2212
02:31:59,460 --> 02:32:02,130
it should be pretty easy to just do that

2213
02:32:01,530 --> 02:32:08,271
again

2214
02:32:02,130 --> 02:32:08,270
so here's us grabbing glove right

2215
02:32:09,601 --> 02:32:17,280
and what's the tag string here is this

2216
02:32:13,440 --> 02:32:19,771
right so let's grab let's see what

2217
02:32:17,280 --> 02:32:26,159
happens when we grab fingers so here's a

2218
02:32:19,771 --> 02:32:34,820
source right we go through here and we

2219
02:32:26,159 --> 02:32:34,819
don't find anything oh right

2220
02:32:39,549 --> 02:32:43,849
[Music]

2221
02:32:49,770 --> 02:32:56,020
so I was a little too clever and you can

2222
02:32:54,520 --> 02:32:59,350
see that this plus one is wrong here

2223
02:32:56,020 --> 02:33:00,670
right we have a seven and that's all we

2224
02:32:59,350 --> 02:33:04,120
should remove so it's just the it's the

2225
02:33:00,670 --> 02:33:08,379
last one that's the problem so when we

2226
02:33:04,120 --> 02:33:10,750
don't find so we really do want those

2227
02:33:08,379 --> 02:33:14,519
two cases I guess I can't figure out a

2228
02:33:10,750 --> 02:33:33,879
way to be more clever there as much as I

2229
02:33:14,520 --> 02:33:36,840
want to so when we come in here I guess

2230
02:33:33,879 --> 02:33:36,839
what I would say is

2231
02:33:48,799 --> 02:34:02,619
is the source count well so if if the

2232
02:33:58,549 --> 02:34:02,619
source count is valid

2233
02:34:07,681 --> 02:34:14,931
you

2234
02:34:09,710 --> 02:34:17,180
I think I should not write it that way

2235
02:34:14,931 --> 02:34:18,621
but if the result count is valid then

2236
02:34:17,181 --> 02:34:20,841
the really only question is do you use

2237
02:34:18,620 --> 02:34:31,609
plus one or not to get rid of this or

2238
02:34:20,841 --> 02:34:38,390
don't you right and the answer I think

2239
02:34:31,610 --> 02:34:42,671
is just you have the one if you can so I

2240
02:34:38,390 --> 02:34:42,671
still could be a little clever I suppose

2241
02:34:43,149 --> 02:34:52,270
I don't really know if I need to be or

2242
02:34:46,431 --> 02:34:52,271
not I mean here's the clever or way I

2243
02:34:59,681 --> 02:35:08,569
guess clever is in some pretty

2244
02:35:04,521 --> 02:35:13,121
questionable quotes there but you know

2245
02:35:08,569 --> 02:35:18,140
what do you do so if we happen here and

2246
02:35:13,120 --> 02:35:22,149
jump to end tags unless you if we get

2247
02:35:18,140 --> 02:35:27,620
this time so there's our five

2248
02:35:22,149 --> 02:35:32,661
there's our our sorry our glove and

2249
02:35:27,620 --> 02:35:37,040
there's our end so so that's fine so now

2250
02:35:32,661 --> 02:35:40,610
we've imported the glove and I think

2251
02:35:37,040 --> 02:35:47,750
we're probably fine when we're done

2252
02:35:40,610 --> 02:35:52,331
importing the glove are we stuck

2253
02:35:47,751 --> 02:35:55,541
somewhere here no we're still running

2254
02:35:52,331 --> 02:35:55,540
there we go

2255
02:35:56,470 --> 02:36:01,819
so in theory now - like if we wanted to

2256
02:36:00,021 --> 02:36:06,110
put some properties on this glove we

2257
02:36:01,819 --> 02:36:07,819
could write it doesn't look like the

2258
02:36:06,110 --> 02:36:09,621
facing directions working right there so

2259
02:36:07,819 --> 02:36:11,921
I think we still maybe have a little bit

2260
02:36:09,620 --> 02:36:11,920
of an issue

2261
02:36:24,159 --> 02:36:29,799
I think I mean that looks like we're

2262
02:36:27,399 --> 02:36:37,209
adding it correctly but I'm not entirely

2263
02:36:29,799 --> 02:36:40,329
sure so we do zero the imported max and

2264
02:36:37,209 --> 02:36:44,649
we just set the ones that are in the

2265
02:36:40,329 --> 02:36:48,129
zero column with and the why we just go

2266
02:36:44,649 --> 02:36:49,810
ahead and set those I don't know it

2267
02:36:48,129 --> 02:36:52,420
doesn't look like the facing directions

2268
02:36:49,810 --> 02:37:01,750
really being used to pick though is the

2269
02:36:52,420 --> 02:37:04,540
weird part and I'm not sure why so I'm

2270
02:37:01,750 --> 02:37:08,170
trying to think if there's a reason why

2271
02:37:04,540 --> 02:37:23,170
the tags are wouldn't be obeyed in this

2272
02:37:08,170 --> 02:37:25,360
case it is the first tag but that should

2273
02:37:23,170 --> 02:37:30,340
be fine I don't see why that would cause

2274
02:37:25,360 --> 02:37:33,940
a problem and let's see how we extract

2275
02:37:30,340 --> 02:37:36,159
them here we do first tag index and Kurt

2276
02:37:33,940 --> 02:37:39,239
again this is the one pass so that all

2277
02:37:36,159 --> 02:37:39,239
seems legit

2278
02:37:48,841 --> 02:37:55,940
oh but we need to advance tag count

2279
02:37:53,341 --> 02:37:55,940
itself

2280
02:37:56,060 --> 02:38:01,790
so actually Kurt AG index isn't a thing

2281
02:38:03,229 --> 02:38:15,300
so actually when we do this ab tag here

2282
02:38:06,569 --> 02:38:17,640
it's it's really just this right so as

2283
02:38:15,300 --> 02:38:20,369
we go we increment the tag count each

2284
02:38:17,640 --> 02:38:22,949
time in the actual asset structure and

2285
02:38:20,370 --> 02:38:31,410
then we do one pass last tag count it's

2286
02:38:22,950 --> 02:38:34,891
it's really this right and so the

2287
02:38:31,409 --> 02:38:41,700
Builder itself doesn't even need that

2288
02:38:34,890 --> 02:38:45,029
particular piece of information that can

2289
02:38:41,700 --> 02:38:47,721
actually go away so they were just over

2290
02:38:45,030 --> 02:38:51,471
writing their the tags were over writing

2291
02:38:47,720 --> 02:38:51,470
each other right

2292
02:38:57,090 --> 02:39:09,510
so I think that's good and off we go

2293
02:39:03,439 --> 02:39:12,658
so now it should import those and and we

2294
02:39:09,510 --> 02:39:17,578
should have our different versions of

2295
02:39:12,658 --> 02:39:20,158
our different hands there right looks

2296
02:39:17,578 --> 02:39:22,529
like we've got a scaling bug in there

2297
02:39:20,158 --> 02:39:27,629
but I think now we're pretty good like

2298
02:39:22,529 --> 02:39:32,279
that's and I've saw that but you can see

2299
02:39:27,629 --> 02:39:35,778
there's like a a weird like dimensional

2300
02:39:32,279 --> 02:39:39,510
issue happening with one of those guys

2301
02:39:35,779 --> 02:39:41,420
so but I think other than that we're

2302
02:39:39,510 --> 02:39:48,630
probably in good shape here and I just

2303
02:39:41,420 --> 02:39:56,359
I'm not 100% certain but if we were to

2304
02:39:48,629 --> 02:40:06,509
go in here I'm just curious to the

2305
02:39:56,359 --> 02:40:11,059
entity set and when we do our rendering

2306
02:40:06,510 --> 02:40:16,880
and put in the facing Direction tag here

2307
02:40:11,059 --> 02:40:16,879
I'm just curious if we were to do this

2308
02:40:18,290 --> 02:40:28,310
what happens right just curious if we

2309
02:40:25,049 --> 02:40:28,309
get any better matching there

2310
02:40:33,398 --> 02:40:37,329
doesn't look like it

2311
02:40:43,510 --> 02:40:56,189
oh yeah

2312
02:40:59,370 --> 02:41:03,729
so unfortunately yeah it doesn't look

2313
02:41:01,600 --> 02:41:05,770
like that did not work first time

2314
02:41:03,728 --> 02:41:09,119
unfortunately I was kind of hoping we

2315
02:41:05,770 --> 02:41:13,390
could do a match here on one of these

2316
02:41:09,120 --> 02:41:15,910
but it doesn't look like it although to

2317
02:41:13,389 --> 02:41:17,889
be fair you know I'm not 100% certain

2318
02:41:15,909 --> 02:41:23,289
what we want to do next is actually

2319
02:41:17,889 --> 02:41:28,449
print out what the assets themselves

2320
02:41:23,290 --> 02:41:30,100
actually have in terms of their what

2321
02:41:28,450 --> 02:41:33,010
they have in terms of their tags on them

2322
02:41:30,100 --> 02:41:36,010
right and I think I'll stop short of

2323
02:41:33,010 --> 02:41:37,600
that so I think we did all the work we

2324
02:41:36,010 --> 02:41:41,170
need to do but of course we've got some

2325
02:41:37,600 --> 02:41:46,180
debugging to do I think we also did all

2326
02:41:41,170 --> 02:41:49,090
the work we need to do for our our wall

2327
02:41:46,180 --> 02:41:53,380
pieces because now because that's all

2328
02:41:49,090 --> 02:42:00,700
done blocks don't have a grid so really

2329
02:41:53,379 --> 02:42:06,398
all we would do there is just this we'd

2330
02:42:00,700 --> 02:42:09,700
say they have a single tag at 0-0 that

2331
02:42:06,398 --> 02:42:14,260
gets used right we'd say begin the tags

2332
02:42:09,700 --> 02:42:20,260
we don't have anything to add right and

2333
02:42:14,260 --> 02:42:23,200
then it would just use what all whatever

2334
02:42:20,260 --> 02:42:27,460
the actual blocks filename had in it

2335
02:42:23,200 --> 02:42:29,380
would be what it would use and then you

2336
02:42:27,459 --> 02:42:31,148
know you're you're pretty much done in

2337
02:42:29,379 --> 02:42:33,159
fact we could even just try this one

2338
02:42:31,148 --> 02:42:33,699
because this would show something on the

2339
02:42:33,159 --> 02:42:37,959
walls

2340
02:42:33,700 --> 02:42:39,819
it just won't match properly because we

2341
02:42:37,959 --> 02:42:41,978
can't add the ability to specify any

2342
02:42:39,818 --> 02:42:44,559
properties to it because it's gonna it

2343
02:42:41,978 --> 02:42:45,909
doesn't look like our tag stuff got set

2344
02:42:44,559 --> 02:42:49,000
properly or isn't getting matched

2345
02:42:45,909 --> 02:42:51,850
properly one of the other but this would

2346
02:42:49,000 --> 02:42:54,250
presumably import a block that means

2347
02:42:51,850 --> 02:42:57,059
that when we actually create the rooms

2348
02:42:54,250 --> 02:42:59,728
for example we can at least

2349
02:42:57,059 --> 02:43:02,340
now that they are in fact blocks so

2350
02:42:59,728 --> 02:43:03,920
instead of saying asset grass here you

2351
02:43:02,340 --> 02:43:08,520
know we could just say asset block

2352
02:43:03,920 --> 02:43:12,290
instead and then you know if we import

2353
02:43:08,520 --> 02:43:15,020
blocks they should in theory show up

2354
02:43:12,290 --> 02:43:20,609
right mm-hmm

2355
02:43:15,020 --> 02:43:23,340
famous last words um but yeah we've got

2356
02:43:20,609 --> 02:43:24,779
a lot of work to do there so I'm not

2357
02:43:23,340 --> 02:43:26,369
actually sure and that actually didn't

2358
02:43:24,779 --> 02:43:27,899
take very long so I think for some

2359
02:43:26,369 --> 02:43:31,489
reason we didn't actually import that

2360
02:43:27,898 --> 02:43:41,269
block so I will look at that one as well

2361
02:43:31,488 --> 02:43:41,270
parse pieces oops just want to make sure

2362
02:43:42,920 --> 02:43:58,439
and go so we do get here yeah yeah so

2363
02:43:55,500 --> 02:44:00,260
when we get to the block parser let's

2364
02:43:58,439 --> 02:44:06,180
just see what it does I just want to

2365
02:44:00,260 --> 02:44:16,350
have some some clue so let's go into end

2366
02:44:06,180 --> 02:44:18,029
tags and see oh well that's still okay I

2367
02:44:16,350 --> 02:44:19,590
mean yeah it doesn't know what these are

2368
02:44:18,029 --> 02:44:22,109
but that actually we know that because

2369
02:44:19,590 --> 02:44:27,000
we didn't add any of those tags in but

2370
02:44:22,109 --> 02:44:28,619
it should still produce the basic

2371
02:44:27,000 --> 02:44:31,648
category correctly so it should still

2372
02:44:28,619 --> 02:44:35,970
have added it to that right which is the

2373
02:44:31,648 --> 02:44:42,209
asset block so that should actually

2374
02:44:35,969 --> 02:44:44,158
still be fine I think right so I feel

2375
02:44:42,209 --> 02:44:46,879
like it should still have added

2376
02:44:44,158 --> 02:44:46,879
something

2377
02:44:51,030 --> 02:44:58,150
yeah so so we did import those correctly

2378
02:44:55,360 --> 02:45:01,690
which means that probably our renderer

2379
02:44:58,149 --> 02:45:04,750
just at the moment doesn't actually put

2380
02:45:01,690 --> 02:45:07,479
cubes down with the texture yeah so if

2381
02:45:04,750 --> 02:45:18,280
we just matched on the texture

2382
02:45:07,478 --> 02:45:36,760
I guess we're fine it's been a long time

2383
02:45:18,280 --> 02:45:38,860
but so we need to actually get the we

2384
02:45:36,760 --> 02:45:44,340
need to actually get a resolved bitmap

2385
02:45:38,860 --> 02:45:44,340
ID to push the cube down which is fine

2386
02:45:48,659 --> 02:45:54,430
so it takes a renderer texture but we

2387
02:45:52,420 --> 02:45:55,780
don't actually have one of those we just

2388
02:45:54,430 --> 02:45:58,569
have a bitmap addy we don't really know

2389
02:45:55,780 --> 02:46:05,290
if it's been loaded so if you look at

2390
02:45:58,569 --> 02:46:12,699
like push bitmap for example or word is

2391
02:46:05,290 --> 02:46:14,700
push it does an actual check in there to

2392
02:46:12,700 --> 02:46:17,799
determine whether or not it has to

2393
02:46:14,700 --> 02:46:17,799
[Music]

2394
02:46:19,590 --> 02:46:24,040
whether it can actually render in an eye

2395
02:46:21,790 --> 02:46:25,840
it's actually this one here right so it

2396
02:46:24,040 --> 02:46:27,370
first looks to see whether it can get it

2397
02:46:25,840 --> 02:46:30,909
and then it checks it does the missing

2398
02:46:27,370 --> 02:46:32,770
resource count so we want to do that and

2399
02:46:30,909 --> 02:46:36,039
you can see we've got one here that does

2400
02:46:32,770 --> 02:46:38,229
that push cube but we didn't actually we

2401
02:46:36,040 --> 02:46:39,880
haven't updated that to actually support

2402
02:46:38,228 --> 02:46:43,359
the full set of things can pass the

2403
02:46:39,879 --> 02:46:46,420
renderer which we need now so if we

2404
02:46:43,360 --> 02:46:49,329
actually do update it to be that way and

2405
02:46:46,420 --> 02:46:51,850
say all right here's the actual set of

2406
02:46:49,329 --> 02:46:53,469
things we need and the only difference

2407
02:46:51,850 --> 02:46:57,600
is that we're gonna pass one of these

2408
02:46:53,469 --> 02:46:57,599
instead you know what I mean

2409
02:46:59,818 --> 02:47:13,420
then we can use the full deal and I

2410
02:47:10,870 --> 02:47:15,510
think that'd be fine don't quote me on

2411
02:47:13,420 --> 02:47:15,510
that

2412
02:47:19,620 --> 02:47:25,600
yes so we're now at least getting

2413
02:47:22,478 --> 02:47:29,528
bitmaps on there but it's picking

2414
02:47:25,600 --> 02:47:32,380
something that doesn't have content to

2415
02:47:29,529 --> 02:47:33,880
it right so we have to go check to make

2416
02:47:32,379 --> 02:47:36,488
sure that there actually is something

2417
02:47:33,879 --> 02:47:41,728
good in the bitmap but I think that you

2418
02:47:36,488 --> 02:47:41,728
know that's probably just a bud with the

2419
02:47:42,629 --> 02:47:47,589
with that asset import that we're

2420
02:47:45,040 --> 02:47:51,040
working on right now probably not with

2421
02:47:47,590 --> 02:47:52,898
the entity renderer so when we loop

2422
02:47:51,040 --> 02:47:55,149
through here presumably getting that

2423
02:47:52,898 --> 02:47:56,469
match for the asset category actually

2424
02:47:55,148 --> 02:47:58,299
does Ford backs like now we don't

2425
02:47:56,469 --> 02:47:59,858
actually know we could check and see it

2426
02:47:58,299 --> 02:48:04,148
might be that when we go to do that push

2427
02:47:59,859 --> 02:48:07,840
cube we're actually getting an on we

2428
02:48:04,148 --> 02:48:09,849
might be getting no match back right but

2429
02:48:07,840 --> 02:48:12,969
you know like I said I think it's at

2430
02:48:09,850 --> 02:48:15,818
this point it's too late in the day to

2431
02:48:12,969 --> 02:48:17,829
keep going so I think I'd stop and then

2432
02:48:15,818 --> 02:48:22,019
just pick it up because I think we're

2433
02:48:17,829 --> 02:48:24,549
just in debugging land now there is no

2434
02:48:22,020 --> 02:48:26,920
there's no more actual code to write

2435
02:48:24,549 --> 02:48:28,209
there's just a bugging so if we come

2436
02:48:26,920 --> 02:48:31,059
here oops

2437
02:48:28,209 --> 02:48:37,349
did not I didn't hit any of those keys

2438
02:48:31,059 --> 02:48:37,350
that you're saying I hit so I want to I

2439
02:48:39,270 --> 02:48:47,250
want to break there but you're not

2440
02:48:41,559 --> 02:48:47,250
letting me why aren't you letting me

2441
02:48:47,399 --> 02:48:57,659
oh because I'm not in debugging and we

2442
02:48:55,500 --> 02:49:00,180
all know it's impossible for the for the

2443
02:48:57,659 --> 02:49:15,780
compiler to tell where anything that it

2444
02:49:00,180 --> 02:49:26,190
generated win right so if we what the

2445
02:49:15,780 --> 02:49:30,140
heck someone want to tell me why we're

2446
02:49:26,190 --> 02:49:30,140
not what is happening

2447
02:49:36,470 --> 02:49:44,399
so you're saying it's not possible to

2448
02:49:39,630 --> 02:49:49,380
ever have a piece type of cube okay

2449
02:49:44,399 --> 02:49:50,310
we're on the line oh you know what I

2450
02:49:49,380 --> 02:49:52,859
know what that is

2451
02:49:50,310 --> 02:49:55,199
Visual Studio changed it so that if you

2452
02:49:52,860 --> 02:49:56,011
if you you used to have to set a

2453
02:49:55,200 --> 02:50:01,290
breakpoint

2454
02:49:56,011 --> 02:50:05,940
on this line they just keep making this

2455
02:50:01,290 --> 02:50:08,280
thing worse whatever

2456
02:50:05,940 --> 02:50:09,480
so the bitmap ID here is always zero so

2457
02:50:08,280 --> 02:50:13,440
it looks like actually it's a match

2458
02:50:09,479 --> 02:50:18,079
failure right so the problem here looks

2459
02:50:13,440 --> 02:50:18,079
like that the asset category is failing

2460
02:50:18,501 --> 02:50:23,940
like we're not actually getting anything

2461
02:50:20,940 --> 02:50:25,890
in that asset category right so when it

2462
02:50:23,940 --> 02:50:30,421
says get best match from it basically

2463
02:50:25,890 --> 02:50:32,181
says there isn't one um so it must mean

2464
02:50:30,421 --> 02:50:35,399
that when we categorize these things

2465
02:50:32,181 --> 02:50:37,319
we're doing it wrong so we're going into

2466
02:50:35,399 --> 02:50:43,609
here and we're saying get best matched

2467
02:50:37,319 --> 02:50:48,060
asset but there is no asset of that type

2468
02:50:43,610 --> 02:50:53,310
now is that a save and restore issue or

2469
02:50:48,060 --> 02:50:55,949
is that a match issue so what I'm

2470
02:50:53,310 --> 02:51:00,029
interested to know is if I was in the

2471
02:50:55,950 --> 02:51:04,110
asset system here when we go to actually

2472
02:51:00,030 --> 02:51:08,761
finish these off and we do the import

2473
02:51:04,110 --> 02:51:12,860
right what do we actually what is going

2474
02:51:08,761 --> 02:51:12,860
on with the break points

2475
02:51:19,129 --> 02:51:26,059
this thing's gonna be unusable pretty

2476
02:51:21,350 --> 02:51:29,989
soon I sure hope someone finishes

2477
02:51:26,059 --> 02:51:31,069
assembly view in C GD b or c DB or

2478
02:51:29,989 --> 02:51:32,420
whatever that when it's on handmade

2479
02:51:31,069 --> 02:51:32,840
network cuz i got a switch off this

2480
02:51:32,420 --> 02:51:39,170
thing

2481
02:51:32,840 --> 02:51:43,159
it's like unusable alright so let me see

2482
02:51:39,170 --> 02:51:45,710
what we're actually exporting here if we

2483
02:51:43,159 --> 02:51:48,969
look at the okay so this is a glove i

2484
02:51:45,709 --> 02:51:48,969
want to look at an actual block

2485
02:52:10,879 --> 02:52:14,420
so I'll do it here

2486
02:52:19,158 --> 02:52:24,199
when we finished parsing the pieces oh

2487
02:52:26,568 --> 02:52:34,769
well that would be one reason to say the

2488
02:52:31,738 --> 02:52:42,148
least we never told it how you would

2489
02:52:34,770 --> 02:52:44,369
import a block did we all right so now

2490
02:52:42,148 --> 02:52:57,180
in theory we should actually be able to

2491
02:52:44,369 --> 02:53:00,779
import a block in theory but again we

2492
02:52:57,180 --> 02:53:03,300
have some bug with our tag processing so

2493
02:53:00,779 --> 02:53:08,100
we know that we're not really quite

2494
02:53:03,299 --> 02:53:11,488
there yet in terms of what we need to do

2495
02:53:08,100 --> 02:53:16,199
for importing things and having them

2496
02:53:11,488 --> 02:53:18,590
match properly so we you know we're just

2497
02:53:16,199 --> 02:53:23,569
gonna get whatever the first thing is

2498
02:53:18,590 --> 02:53:30,380
and it looks like we probably did right

2499
02:53:23,568 --> 02:53:36,689
it looks like we we actually got dirt

2500
02:53:30,379 --> 02:53:42,089
right so it looks like we actually did

2501
02:53:36,689 --> 02:53:44,220
get the first one so let's just see I

2502
02:53:42,090 --> 02:53:46,889
don't imagine we'll have any better luck

2503
02:53:44,219 --> 02:53:53,728
with this than before but let's suppose

2504
02:53:46,889 --> 02:53:58,228
we did oh and we can't really hmm so we

2505
02:53:53,728 --> 02:54:01,709
didn't put any actual tags on these so

2506
02:53:58,228 --> 02:54:03,688
let's suppose we did this just to see if

2507
02:54:01,709 --> 02:54:05,549
they're lined up properly cuz I can't

2508
02:54:03,689 --> 02:54:08,520
tell with just the dirt ones pretty

2509
02:54:05,549 --> 02:54:11,519
pretty straightforward right

2510
02:54:08,520 --> 02:54:15,470
so if temporarily I just said like I

2511
02:54:11,520 --> 02:54:15,470
don't know these things are just like

2512
02:54:23,270 --> 02:54:27,770
right there like non files or something

2513
02:54:28,338 --> 02:54:34,738
so we just said like look don't you know

2514
02:54:30,959 --> 02:54:37,829
don't process those leave those leave

2515
02:54:34,738 --> 02:54:39,509
those alone would we get if we just had

2516
02:54:37,828 --> 02:54:41,609
one so we don't have to worry about

2517
02:54:39,509 --> 02:54:44,218
processing tags or having the tags be

2518
02:54:41,609 --> 02:54:46,498
bad would we would they be mapped

2519
02:54:44,218 --> 02:54:48,298
properly like did they load properly or

2520
02:54:46,498 --> 02:54:51,918
are they upside down which was something

2521
02:54:48,299 --> 02:54:51,919
I was thinking could easily be the case

2522
02:54:52,879 --> 02:54:59,789
and it looks to me like they probably

2523
02:54:55,709 --> 02:55:06,679
are we set the colors kind of weird in

2524
02:54:59,789 --> 02:55:06,679
here so I probably should go fix that

2525
02:55:10,279 --> 02:55:17,069
oops so in here we've got these like

2526
02:55:14,578 --> 02:55:21,298
srgb linearized things that we were

2527
02:55:17,068 --> 02:55:22,769
doing all kinds of nonsense with and so

2528
02:55:21,299 --> 02:55:24,629
I think what I'll do here is just say

2529
02:55:22,770 --> 02:55:33,060
like look let's pretend that everything

2530
02:55:24,629 --> 02:55:34,949
is fine and it's not that at all but I I

2531
02:55:33,059 --> 02:55:38,728
feel like we probably haven't upside

2532
02:55:34,949 --> 02:55:41,489
down like we're oriented opposite the

2533
02:55:38,728 --> 02:55:42,688
way we should be on the PNG versus

2534
02:55:41,488 --> 02:55:48,389
textures because they're bottom-up

2535
02:55:42,689 --> 02:55:52,199
versus top-down right and so and we're

2536
02:55:48,389 --> 02:55:54,858
also blue right which doesn't make a lot

2537
02:55:52,199 --> 02:55:54,859
of sense here

2538
02:56:12,139 --> 02:56:17,209
it's I'm not sure how we're getting

2539
02:56:14,180 --> 02:56:19,729
quite so much light in there it's very

2540
02:56:17,209 --> 02:56:23,629
unusual hold on a second I'm gonna turn

2541
02:56:19,729 --> 02:56:25,789
on the full speed build

2542
02:56:23,629 --> 02:56:27,529
yes so that we got some really peculiar

2543
02:56:25,790 --> 02:56:31,490
stuff going on right so we've got a lot

2544
02:56:27,530 --> 02:56:45,739
of bugs to sort that's okay that's not

2545
02:56:31,489 --> 02:56:47,690
that hard so yeah it looks like it looks

2546
02:56:45,739 --> 02:56:50,449
like those are probably not quite

2547
02:56:47,690 --> 02:56:54,649
aligned right and the tops versus

2548
02:56:50,450 --> 02:56:57,980
bottoms aspect of it I think we're

2549
02:56:54,649 --> 02:57:04,670
looking at the bottom so I do think our

2550
02:56:57,979 --> 02:57:07,850
bitmaps are flipped right with you know

2551
02:57:04,670 --> 02:57:09,819
how they should have been why we're

2552
02:57:07,850 --> 02:57:14,780
getting such massive over bright

2553
02:57:09,819 --> 02:57:17,020
brightness in this case I don't know

2554
02:57:14,780 --> 02:57:20,860
[Music]

2555
02:57:17,021 --> 02:57:20,860
it's a little weird

2556
02:57:25,469 --> 02:57:36,389
so I'm not I'm not sure what's going on

2557
02:57:27,270 --> 02:57:39,359
there and I'm also not sure why things

2558
02:57:36,389 --> 02:57:42,119
would be blue so a lot of things I do

2559
02:57:39,359 --> 02:57:43,439
not understand about what I'm seeing so

2560
02:57:42,120 --> 02:57:45,149
there's a ton of bug stuff in there I

2561
02:57:43,439 --> 02:57:47,939
don't know why I'm refusing to stop the

2562
02:57:45,148 --> 02:57:49,858
stream today I just I think I was in too

2563
02:57:47,939 --> 02:57:52,500
much of programming mood I have like

2564
02:57:49,859 --> 02:57:55,040
dinner plans later as well so probably

2565
02:57:52,500 --> 02:57:55,040
this is bad

2566
02:57:55,850 --> 02:58:09,890
just in general let's see

2567
02:58:17,989 --> 02:58:21,478
yeah so so I probably got to call it

2568
02:58:21,149 --> 02:58:27,629
quits

2569
02:58:21,478 --> 02:58:29,699
um so that's unfortunate because I would

2570
02:58:27,629 --> 02:58:32,699
like to get the rest of that working but

2571
02:58:29,700 --> 02:58:40,470
unfortunately not in the works at the

2572
02:58:32,700 --> 02:58:43,470
moment but yeah that's very close to

2573
02:58:40,469 --> 02:58:45,978
working and I think mostly we just have

2574
02:58:43,469 --> 02:58:48,239
to go through this stuff and clean it up

2575
02:58:45,978 --> 02:58:49,319
and do the debugging necessary because

2576
02:58:48,239 --> 02:58:51,329
there's a lot of stuff that has to

2577
02:58:49,319 --> 02:58:54,840
happen in there right that's happening

2578
02:58:51,329 --> 02:59:02,489
in there now that needs to be done

2579
02:58:54,840 --> 02:59:09,000
carefully I do know we do a swap R &amp; B

2580
02:59:02,489 --> 02:59:12,680
in here but it's weird that we're doing

2581
02:59:09,000 --> 02:59:12,680
a swap R&amp;B and

2582
02:59:21,638 --> 02:59:27,218
and we're getting the wrong color image

2583
02:59:24,939 --> 02:59:33,429
on the on the way out that's pretty

2584
02:59:27,218 --> 02:59:34,778
bizarre result to have and I'm not sure

2585
02:59:33,429 --> 02:59:36,309
where that's coming from

2586
02:59:34,779 --> 02:59:40,889
it could have something to do with how

2587
02:59:36,309 --> 02:59:40,888
we're doing the down sample stuff here

2588
02:59:41,218 --> 02:59:48,148
one example of how this would go wrong

2589
02:59:44,259 --> 02:59:48,148
is if we were accidentally

2590
02:59:55,290 --> 03:00:08,101
if we were accidentally somehow passing

2591
02:59:57,810 --> 03:00:09,479
like the source pointer instill it

2592
03:00:08,101 --> 03:00:15,329
wouldn't make sense how that could

2593
03:00:09,479 --> 03:00:17,869
really happen but yeah but I really just

2594
03:00:15,329 --> 03:00:17,870
don't know

2595
03:00:29,979 --> 03:00:35,119
sorry so I'm gonna call it and I'll let

2596
03:00:33,889 --> 03:00:37,909
anyone who's feeling particularly

2597
03:00:35,120 --> 03:00:40,280
intrepid go ahead and debug it on their

2598
03:00:37,909 --> 03:00:44,059
own for a while but we'll have to pick

2599
03:00:40,280 --> 03:00:50,720
this back up because I gotta go so I

2600
03:00:44,059 --> 03:00:52,659
will bid you farewell for today let me

2601
03:00:50,719 --> 03:00:55,879
go ahead and close down the stream here

2602
03:00:52,659 --> 03:00:58,819
and just say thanks for joining me for

2603
03:00:55,879 --> 03:01:01,609
those sort of handmade hero and I think

2604
03:00:58,819 --> 03:01:04,520
basically next weekend will probably

2605
03:01:01,610 --> 03:01:08,271
just be a debugging weekend we got a

2606
03:01:04,521 --> 03:01:10,340
clean that code up do any refinement

2607
03:01:08,271 --> 03:01:13,130
that we need to do on it make sure

2608
03:01:10,340 --> 03:01:15,500
there's no bugs in there for importing

2609
03:01:13,129 --> 03:01:18,259
down sampling parsing the tags and all

2610
03:01:15,500 --> 03:01:20,840
that stuff and then get all of those art

2611
03:01:18,260 --> 03:01:25,069
in our assets importing cleanly with the

2612
03:01:20,840 --> 03:01:27,440
right tag sets reliable and so on and

2613
03:01:25,069 --> 03:01:28,930
verify that we can update them so it's

2614
03:01:27,440 --> 03:01:33,200
basically just going to be a weekend of

2615
03:01:28,930 --> 03:01:35,600
debugging and code cleanup but that's

2616
03:01:33,200 --> 03:01:37,280
good I mean you want to do that so

2617
03:01:35,600 --> 03:01:40,850
hopefully I'll see you back here for

2618
03:01:37,280 --> 03:01:44,120
that and then we should be on I guess at

2619
03:01:40,850 --> 03:01:48,500
that point we're gonna have to be onto

2620
03:01:44,120 --> 03:01:50,540
some entity stuff and also we'll have to

2621
03:01:48,500 --> 03:01:53,930
communicate back to Ana the sorts of

2622
03:01:50,540 --> 03:01:57,260
things we want to do with the art in

2623
03:01:53,930 --> 03:01:59,271
terms of modifications so we'll start on

2624
03:01:57,260 --> 03:02:01,729
that stuff plenty of stuff to do which

2625
03:01:59,271 --> 03:02:04,100
is always good hope see you back here

2626
03:02:01,729 --> 03:02:05,689
for that until then have fun programming

2627
03:02:04,100 --> 03:02:08,050
and I'll see you on the Internet take it

2628
03:02:05,690 --> 03:02:08,050
easy everybody

