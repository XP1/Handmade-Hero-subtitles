1
00:00:02,720 --> 00:00:06,720
hello everyone and welcome to handmade

2
00:00:05,219 --> 00:00:09,779
hero the show we could a complete game

3
00:00:06,719 --> 00:00:11,759
live on stream yesterday we were in the

4
00:00:09,779 --> 00:00:13,500
process of fixing some bugs just like

5
00:00:11,759 --> 00:00:14,370
bugs that we have on our bug list that I

6
00:00:13,500 --> 00:00:20,579
thought it would be a good time to

7
00:00:14,369 --> 00:00:22,469
finish sort of cleaning those up and I

8
00:00:20,579 --> 00:00:24,118
would like to keep on doing that because

9
00:00:22,469 --> 00:00:26,070
we've got a few more issues on the

10
00:00:24,118 --> 00:00:27,750
issues list that I think are things that

11
00:00:26,070 --> 00:00:30,719
are worth cleaning up now they're kind

12
00:00:27,750 --> 00:00:33,030
of small isolated things that kind of

13
00:00:30,719 --> 00:00:35,789
makes sense I don't like leaving bugs in

14
00:00:33,030 --> 00:00:38,850
the code in fact on handmade hero I

15
00:00:35,789 --> 00:00:41,609
actually am fairly pat usually quite a

16
00:00:38,850 --> 00:00:43,379
bit past my comfort level on that

17
00:00:41,609 --> 00:00:44,820
because typically when I programming I

18
00:00:43,378 --> 00:00:47,570
really don't leave bugs and code at all

19
00:00:44,820 --> 00:00:50,549
but on handmade hero I kind of try to

20
00:00:47,570 --> 00:00:54,390
bundle things up and so go to you know I

21
00:00:50,549 --> 00:00:56,549
try not to jump all around more than I

22
00:00:54,390 --> 00:00:59,549
already have to to just show reasonable

23
00:00:56,549 --> 00:01:00,718
game programming happen so I'd like to

24
00:00:59,549 --> 00:01:02,759
kind of go through these and just get

25
00:01:00,719 --> 00:01:03,989
rid of some more of them that are pretty

26
00:01:02,759 --> 00:01:05,579
reason to get through you know we don't

27
00:01:03,988 --> 00:01:06,658
have a huge bug list or anything but you

28
00:01:05,579 --> 00:01:08,340
know there's plenty things on here that

29
00:01:06,659 --> 00:01:12,540
just really you know probably should be

30
00:01:08,340 --> 00:01:15,840
taken care of so let's go ahead and and

31
00:01:12,540 --> 00:01:16,740
dive in on those today is day 3 23 so if

32
00:01:15,840 --> 00:01:19,799
you're trying to follow along at home

33
00:01:16,739 --> 00:01:21,060
you want to do day 322 source code

34
00:01:19,799 --> 00:01:22,140
that's what you want to start with

35
00:01:21,060 --> 00:01:26,219
because that's what I'm starting with

36
00:01:22,140 --> 00:01:30,900
here on day 3 23 so let's take a look

37
00:01:26,219 --> 00:01:37,170
inside the ye olde project here get it

38
00:01:30,900 --> 00:01:40,229
going just get it on going and hello

39
00:01:37,170 --> 00:01:42,478
hello a visual studio wake up okay and

40
00:01:40,228 --> 00:01:43,920
so my understanding was although we did

41
00:01:42,478 --> 00:01:45,509
a bunch of debugging yesterday there is

42
00:01:43,920 --> 00:01:48,299
one thing that I think we didn't finish

43
00:01:45,509 --> 00:01:50,879
a Kim the guy who maintains I think the

44
00:01:48,299 --> 00:01:54,689
sdl port right now was saying that we

45
00:01:50,879 --> 00:01:59,968
didn't handle the the walking up the

46
00:01:54,688 --> 00:02:02,669
stairs case he was saying correctly when

47
00:01:59,968 --> 00:02:04,500
the aspect ratio changes so you can see

48
00:02:02,670 --> 00:02:07,649
there the the walking up the stairs case

49
00:02:04,500 --> 00:02:09,090
was handled properly in this case so now

50
00:02:07,649 --> 00:02:12,879
let's go ahead and change the aspect

51
00:02:09,090 --> 00:02:18,060
ratio and just see what happens right

52
00:02:12,879 --> 00:02:18,060
and let's go ahead here you know I

53
00:02:29,479 --> 00:02:33,318
you know what I shouldn't be thinking in

54
00:02:31,189 --> 00:02:35,090
my head this is this is the stream I

55
00:02:33,318 --> 00:02:37,518
think out that I'll think out loud later

56
00:02:35,090 --> 00:02:39,590
anyway point being so in theory if we

57
00:02:37,519 --> 00:02:40,760
change the aspect ratio there's

58
00:02:39,590 --> 00:02:43,009
something that we're doing wrong here

59
00:02:40,759 --> 00:02:45,079
with respect yeah and you can kind of

60
00:02:43,009 --> 00:02:50,689
see it doing a pretty crazy flip their

61
00:02:45,080 --> 00:02:52,459
right so we've got some some work to do

62
00:02:50,689 --> 00:02:54,019
here we're definitely not setting up our

63
00:02:52,459 --> 00:02:56,509
render targets the way that we need to

64
00:02:54,019 --> 00:02:58,519
set up our render targets let's double

65
00:02:56,509 --> 00:03:00,018
check to see what happens if we do that

66
00:02:58,519 --> 00:03:03,079
in the software render because I don't

67
00:03:00,019 --> 00:03:05,299
know for broken in both or just one in

68
00:03:03,079 --> 00:03:07,280
this case I assume that we're only

69
00:03:05,299 --> 00:03:09,109
broken in yeah we're so we're only

70
00:03:07,280 --> 00:03:11,269
broken in the hardware renderer which is

71
00:03:09,109 --> 00:03:13,250
what we would expect so let's go take a

72
00:03:11,269 --> 00:03:15,739
look at what's going on in the the

73
00:03:13,250 --> 00:03:17,840
hardware renderer path for that blending

74
00:03:15,739 --> 00:03:23,829
and see if we can't clean that up first

75
00:03:17,840 --> 00:03:32,000
I don't know I don't know if that bug is

76
00:03:23,829 --> 00:03:35,180
actually on here that might not be on

77
00:03:32,000 --> 00:03:39,680
here so this this may just be an on this

78
00:03:35,180 --> 00:03:45,859
is just a bug that's that's not listed I

79
00:03:39,680 --> 00:03:47,689
guess yeah so so this isn't this is not

80
00:03:45,859 --> 00:03:50,659
in there I guess yes I'm just looking

81
00:03:47,689 --> 00:03:53,030
right at it and missing it so anyway in

82
00:03:50,659 --> 00:03:54,650
here we we know what case we're talking

83
00:03:53,030 --> 00:03:56,989
about right so at least there's no

84
00:03:54,650 --> 00:03:59,000
mystery here we know we're talking about

85
00:03:56,989 --> 00:04:00,859
the render entity blend render target

86
00:03:59,000 --> 00:04:02,449
case and we don't necessarily know

87
00:04:00,859 --> 00:04:05,180
exactly what's failing because there's a

88
00:04:02,449 --> 00:04:07,729
number of things that are based like

89
00:04:05,180 --> 00:04:09,620
that are sort of go into making this

90
00:04:07,729 --> 00:04:12,500
work correctly but one thing that I

91
00:04:09,620 --> 00:04:15,620
would point out kind of obviously is

92
00:04:12,500 --> 00:04:18,949
that the the GL viewport is not working

93
00:04:15,620 --> 00:04:23,209
correctly right like I'll just point out

94
00:04:18,949 --> 00:04:25,069
here when I start going up these stairs

95
00:04:23,209 --> 00:04:26,209
here oh well I'm in nevermind i'm

96
00:04:25,069 --> 00:04:28,129
already in the software nurse that's why

97
00:04:26,209 --> 00:04:30,198
I mean the harbor ridge that's fine when

98
00:04:28,129 --> 00:04:33,519
I start going up the stairs you can see

99
00:04:30,199 --> 00:04:36,169
that it pops down to the bottom right

100
00:04:33,519 --> 00:04:39,019
during that transition and so what that

101
00:04:36,168 --> 00:04:43,339
means is is the actual base drawing is

102
00:04:39,019 --> 00:04:45,168
able to draw sort of outside of

103
00:04:43,339 --> 00:04:48,409
where the the viewport region should

104
00:04:45,168 --> 00:04:51,229
even be and I don't have any idea how

105
00:04:48,410 --> 00:04:56,120
that's happening exactly because in

106
00:04:51,230 --> 00:04:58,610
theory that should that when we do our

107
00:04:56,120 --> 00:05:00,949
bind render target right we're doing our

108
00:04:58,610 --> 00:05:03,680
mess our mind frame buffer we're setting

109
00:05:00,949 --> 00:05:07,160
up the viewport and the scissor region

110
00:05:03,680 --> 00:05:09,228
very specifically there now I guess one

111
00:05:07,160 --> 00:05:11,840
thing that I didn't think of is this

112
00:05:09,228 --> 00:05:15,039
scissor here for the clip wrecked I

113
00:05:11,839 --> 00:05:18,379
guess maybe one thing that we're we're

114
00:05:15,040 --> 00:05:20,300
messing up there is our scissor is the

115
00:05:18,379 --> 00:05:22,189
scissor relative to the viewport or is

116
00:05:20,300 --> 00:05:23,540
this is ur not relatively report because

117
00:05:22,189 --> 00:05:25,160
the scissor isn't relative to the

118
00:05:23,540 --> 00:05:27,590
viewport then we would have to take into

119
00:05:25,160 --> 00:05:32,240
account the draw region correctly when

120
00:05:27,589 --> 00:05:33,918
we set up the scissor so that I don't

121
00:05:32,240 --> 00:05:36,740
think would cause the problem that we're

122
00:05:33,918 --> 00:05:39,649
seeing but I do because we're I it's

123
00:05:36,740 --> 00:05:41,569
actually moved down so that's a separate

124
00:05:39,649 --> 00:05:48,469
thing but I do want to just look up GL

125
00:05:41,569 --> 00:05:50,360
scissor on Doc's GL so that I can verify

126
00:05:48,470 --> 00:05:55,490
to myself that those are being called

127
00:05:50,360 --> 00:05:57,439
prepped properly let's see runs erectile

128
00:05:55,490 --> 00:05:59,569
in window coordinates the first two

129
00:05:57,439 --> 00:06:00,889
arguments X and Y so it's a lower left

130
00:05:59,569 --> 00:06:04,430
grandmas with and high space for the

131
00:06:00,889 --> 00:06:06,800
width of hide the box so window

132
00:06:04,430 --> 00:06:09,680
coordinates are those related to the

133
00:06:06,800 --> 00:06:12,110
viewport or not I wish they defined

134
00:06:09,680 --> 00:06:13,550
their terms were clearly in the docs you

135
00:06:12,110 --> 00:06:14,810
always end up having to go look back at

136
00:06:13,550 --> 00:06:16,970
the spec and stop to figure out what

137
00:06:14,810 --> 00:06:19,038
they mean for window coordinates right

138
00:06:16,970 --> 00:06:20,539
is that in the viewport space or that

139
00:06:19,038 --> 00:06:23,629
outside the viewport space I have no

140
00:06:20,538 --> 00:06:24,949
idea right but anyway what's the window

141
00:06:23,629 --> 00:06:27,759
coordinates have integer values at the

142
00:06:24,949 --> 00:06:30,079
shared corners of frame buffer pixels a

143
00:06:27,759 --> 00:06:32,990
last modification of only the lower left

144
00:06:30,079 --> 00:06:36,168
pixel in the window so that that sounds

145
00:06:32,990 --> 00:06:38,000
like you know if i had to guess the

146
00:06:36,168 --> 00:06:40,810
scissor rectangle and the viewport

147
00:06:38,000 --> 00:06:43,550
rectangle are separate so i can set my

148
00:06:40,810 --> 00:06:44,990
viewport and my scissor separately and

149
00:06:43,550 --> 00:06:47,629
they both are in window coordinates

150
00:06:44,990 --> 00:06:51,620
which means that this scissor should

151
00:06:47,629 --> 00:06:54,740
technically be done in the end up buying

152
00:06:51,620 --> 00:06:56,870
frame buffer call or rather I should say

153
00:06:54,740 --> 00:06:59,960
in the space of the frame buffer

154
00:06:56,870 --> 00:07:03,530
right so we really I'm sorry in the

155
00:06:59,959 --> 00:07:05,269
space of the the draw region right so I

156
00:07:03,529 --> 00:07:07,069
think technically what we want to do

157
00:07:05,269 --> 00:07:11,560
here is say that whatever the draw

158
00:07:07,069 --> 00:07:16,909
region was if that if we're in our if

159
00:07:11,560 --> 00:07:19,129
we're in the target 0 we need to

160
00:07:16,910 --> 00:07:22,160
actually you know sort of unify those

161
00:07:19,129 --> 00:07:29,149
clipping rectangles right so we want to

162
00:07:22,160 --> 00:07:37,310
do something like a rectangle like clip

163
00:07:29,149 --> 00:07:39,469
wrecked equals intersection or I guess

164
00:07:37,310 --> 00:07:41,629
is not even intersection it's really

165
00:07:39,470 --> 00:07:43,490
just an offset because we know that the

166
00:07:41,629 --> 00:07:45,500
clip wrecked fits inside the draw region

167
00:07:43,490 --> 00:07:49,280
so it's really just like I need to

168
00:07:45,500 --> 00:07:51,439
offset the clip wrecked by that by that

169
00:07:49,279 --> 00:07:54,769
amount right and I think we might even

170
00:07:51,439 --> 00:07:56,120
have a way to do that right yeah so we

171
00:07:54,769 --> 00:08:11,180
can just say the clip wrecked is an

172
00:07:56,120 --> 00:08:12,829
offset of the clip wrecked right by the

173
00:08:11,180 --> 00:08:14,389
minimum corner of the draw region

174
00:08:12,829 --> 00:08:17,449
because I need to move that clip wrecked

175
00:08:14,389 --> 00:08:20,149
get up in that case so what I could do

176
00:08:17,449 --> 00:08:24,139
here just say well the clip wrecked is

177
00:08:20,149 --> 00:08:27,679
either equal to itself in the case where

178
00:08:24,139 --> 00:08:29,329
the where the render target index

179
00:08:27,680 --> 00:08:35,240
whatever that render target index is

180
00:08:29,329 --> 00:08:40,789
right let's go ahead and get that out

181
00:08:35,240 --> 00:08:43,100
there I or even better this way this

182
00:08:40,789 --> 00:08:45,529
will work in both cases I'll say assume

183
00:08:43,100 --> 00:08:52,100
that's the clip wrecked and then if

184
00:08:45,529 --> 00:08:53,389
we're going to this is kind of a

185
00:08:52,100 --> 00:08:54,680
complicated it because I need to make

186
00:08:53,389 --> 00:09:01,850
sure we work here so I really need to

187
00:08:54,679 --> 00:09:05,029
say if we have a valid render target

188
00:09:01,850 --> 00:09:07,659
index here at right assuming that that's

189
00:09:05,029 --> 00:09:07,659
true at all

190
00:09:13,578 --> 00:09:22,789
wait do I need to do that now I don't

191
00:09:16,019 --> 00:09:22,789
need to do that I take it back

192
00:09:28,620 --> 00:09:32,429
so I guess now that I think about it

193
00:09:30,539 --> 00:09:37,860
there's a couple things that we really

194
00:09:32,429 --> 00:09:39,629
doing here quite right so when we do the

195
00:09:37,860 --> 00:09:41,460
use render targets thing and we do the

196
00:09:39,629 --> 00:09:43,769
if the render target is greater than so

197
00:09:41,460 --> 00:09:44,940
we kind of need I'm just trying to

198
00:09:43,769 --> 00:09:46,529
figure how to handle both those cases

199
00:09:44,940 --> 00:09:48,210
the clip breck things fairly simple

200
00:09:46,529 --> 00:09:49,769
right I can set the clip wrecked and

201
00:09:48,210 --> 00:09:52,639
normally we would just use that clip

202
00:09:49,769 --> 00:10:00,929
wrecked if we didn't have the sort of

203
00:09:52,639 --> 00:10:03,029
problem with with with handling aspect

204
00:10:00,929 --> 00:10:05,579
ratios and all that sort of stuff so

205
00:10:03,029 --> 00:10:07,139
what we need to do is if we know we're

206
00:10:05,580 --> 00:10:08,730
in the space of one of those separate

207
00:10:07,139 --> 00:10:10,860
render targets which therefore doesn't

208
00:10:08,730 --> 00:10:12,810
need to use like the whole screen it's

209
00:10:10,860 --> 00:10:14,870
it's sort of our contained one then we

210
00:10:12,809 --> 00:10:17,729
can just use the clip wrecked directly

211
00:10:14,870 --> 00:10:19,590
but if we aren't doing that then we need

212
00:10:17,730 --> 00:10:21,570
to make sure that we use the sort of

213
00:10:19,590 --> 00:10:25,800
normal space of the clip wrecked and so

214
00:10:21,570 --> 00:10:28,620
what I need to do is say you know if we

215
00:10:25,799 --> 00:10:30,059
are using the render targets right or i

216
00:10:28,620 --> 00:10:32,159
should say if we're not using the render

217
00:10:30,059 --> 00:10:35,069
targets we know we always have to offset

218
00:10:32,159 --> 00:10:37,909
or if we are using the render targets

219
00:10:35,070 --> 00:10:42,150
and the render target index in this case

220
00:10:37,909 --> 00:10:44,969
equals zero in both those cases then i

221
00:10:42,149 --> 00:10:48,539
need to actually make the clip rekt

222
00:10:44,970 --> 00:10:51,060
equal the offset of itself with wherever

223
00:10:48,539 --> 00:10:53,129
the draw region is right and then

224
00:10:51,059 --> 00:10:55,619
regardless of what i do i always do want

225
00:10:53,129 --> 00:10:57,689
to set the scissor right so i think

226
00:10:55,620 --> 00:10:58,950
that's the more correct thing to do

227
00:10:57,690 --> 00:11:02,300
there I don't know whether they're

228
00:10:58,950 --> 00:11:05,940
rectangle two eyes or not yeah they are

229
00:11:02,299 --> 00:11:10,589
so I think that's right and let me look

230
00:11:05,940 --> 00:11:13,440
at rectangle too I hear oops too I so

231
00:11:10,590 --> 00:11:16,820
here we got a bunch of random stuff I'm

232
00:11:13,440 --> 00:11:19,820
going to say that we've got a in line

233
00:11:16,820 --> 00:11:24,870
and I don't know if we have do we have a

234
00:11:19,820 --> 00:11:28,320
v2 I do we have an integer v2 I we don't

235
00:11:24,870 --> 00:11:30,409
really do we we just have regular v2s I

236
00:11:28,320 --> 00:11:36,420
don't think we ever actually talk about

237
00:11:30,409 --> 00:11:38,639
v2 eyes yeah all right then I won't do

238
00:11:36,419 --> 00:11:42,500
that I'll just say like okay when we do

239
00:11:38,639 --> 00:11:42,500
the offset of the flip wrecked

240
00:11:46,169 --> 00:11:55,449
I'm interested to know if get mean how

241
00:11:52,750 --> 00:11:57,940
are we calling offset on a rectangle to

242
00:11:55,450 --> 00:12:05,080
I if we didn't define offset of a

243
00:11:57,940 --> 00:12:11,700
rectangle to I do we somewhere we only

244
00:12:05,080 --> 00:12:14,139
have rectangle to and rectangle three I

245
00:12:11,700 --> 00:12:20,740
guess it just never finished compiling

246
00:12:14,139 --> 00:12:22,210
this thing there we go so it just

247
00:12:20,740 --> 00:12:24,879
couldn't resolve the function

248
00:12:22,210 --> 00:12:27,639
overloading so I was like that seems

249
00:12:24,879 --> 00:12:29,860
really weird okay so if I have rectangle

250
00:12:27,639 --> 00:12:31,379
2i and I want to do an offset call to it

251
00:12:29,860 --> 00:12:33,460
which is what I would like to do here I

252
00:12:31,379 --> 00:12:38,080
can just say like all right I've got an

253
00:12:33,460 --> 00:12:43,210
offset call rectangle 2i and then a SI 2

254
00:12:38,080 --> 00:12:46,509
x 3 2 y and so the result is just equal

255
00:12:43,210 --> 00:12:58,920
to whatever we pass in and then all of

256
00:12:46,509 --> 00:13:01,299
the values right just get added to right

257
00:12:58,919 --> 00:13:05,699
so in this case we've got the draw

258
00:13:01,299 --> 00:13:09,370
region in X and the draw region min Y

259
00:13:05,700 --> 00:13:12,700
and that should give us the actual clip

260
00:13:09,370 --> 00:13:15,909
region that we need so i think that's

261
00:13:12,700 --> 00:13:18,460
correct I think that is is the correct

262
00:13:15,909 --> 00:13:19,809
way to look at the clip region that we

263
00:13:18,460 --> 00:13:25,050
weren't sort of specifying correctly

264
00:13:19,809 --> 00:13:25,049
before and now in theory we are I think

265
00:13:25,980 --> 00:13:32,560
and of course the slight problem with

266
00:13:29,919 --> 00:13:35,409
that is that's going to persist so what

267
00:13:32,559 --> 00:13:38,199
we also need to do I suppose is when we

268
00:13:35,409 --> 00:13:40,719
do our initial clear we would have to

269
00:13:38,200 --> 00:13:44,200
set our scissor correctly as well if

270
00:13:40,720 --> 00:13:46,899
that makes sense so when we do our clear

271
00:13:44,200 --> 00:13:49,509
we have to do sort of a scissor that

272
00:13:46,899 --> 00:13:53,620
allows us to clear the entire region

273
00:13:49,509 --> 00:13:55,698
whatever that is and so I'm not sure

274
00:13:53,620 --> 00:13:57,379
what the easiest way to do that is with

275
00:13:55,698 --> 00:13:59,269
out necessarily knowing what it is so I

276
00:13:57,379 --> 00:14:01,339
think we may have to just kind of bite

277
00:13:59,269 --> 00:14:02,749
the bullet here and say yeah we have to

278
00:14:01,339 --> 00:14:04,819
clear the whole region and in order to

279
00:14:02,749 --> 00:14:06,409
clear the whole region we have to know

280
00:14:04,818 --> 00:14:09,078
the size now what we could do is set the

281
00:14:06,409 --> 00:14:11,418
scissor wider than the window or

282
00:14:09,078 --> 00:14:13,638
something like that too I don't know but

283
00:14:11,418 --> 00:14:15,859
in order to clear everything what we

284
00:14:13,639 --> 00:14:20,470
could do is is is literally just do the

285
00:14:15,859 --> 00:14:20,470
check if it's greater than 0 and C right

286
00:14:21,009 --> 00:14:31,399
so we could say here you know something

287
00:14:28,999 --> 00:14:33,558
like this if the target index is 0 then

288
00:14:31,399 --> 00:14:35,448
we know that we need a frame buffer

289
00:14:33,558 --> 00:14:38,600
that's got the sort of the window width

290
00:14:35,448 --> 00:14:41,358
if you will so you know get with draw

291
00:14:38,600 --> 00:14:43,480
region good height well actually

292
00:14:41,359 --> 00:14:52,910
snotting the drow region it's it's

293
00:14:43,480 --> 00:14:55,609
bigger than the draw region so I guess I

294
00:14:52,909 --> 00:15:03,409
don't know that we even pass that value

295
00:14:55,609 --> 00:15:05,569
down here unfortunately and I suppose we

296
00:15:03,409 --> 00:15:08,118
will have to so we'll probably have to

297
00:15:05,568 --> 00:15:10,068
actually do window with window height

298
00:15:08,119 --> 00:15:13,428
and those are different from the drawer

299
00:15:10,068 --> 00:15:14,928
region if that makes sense let me take a

300
00:15:13,428 --> 00:15:17,889
look at where we use window within

301
00:15:14,928 --> 00:15:17,889
window height here

302
00:15:24,899 --> 00:15:33,669
yeah uh so we and I don't know if all we

303
00:15:31,149 --> 00:15:35,769
use it for is that too I don't know it

304
00:15:33,669 --> 00:15:38,829
seems like if we are trying to do a

305
00:15:35,769 --> 00:15:43,929
particular render size to its feels to

306
00:15:38,830 --> 00:15:47,550
me like these could also just be like

307
00:15:43,929 --> 00:15:47,549
how are we setting our viewport up here

308
00:15:55,230 --> 00:16:02,409
when we set our viewport we set our

309
00:15:59,980 --> 00:16:07,750
viewport based on whatever the size of

310
00:16:02,409 --> 00:16:10,120
these guys actually is so you know if

311
00:16:07,750 --> 00:16:11,799
the target in does grades are we sit so

312
00:16:10,120 --> 00:16:13,600
we are sort of saying let's pretend it's

313
00:16:11,799 --> 00:16:18,750
always the draw region so I guess that's

314
00:16:13,600 --> 00:16:18,750
okay I guess I'm okay with that

315
00:16:27,309 --> 00:16:33,229
and so when we actually go to clear

316
00:16:30,500 --> 00:16:36,110
these we want to set the scissor again

317
00:16:33,230 --> 00:16:42,769
to get with the drawer region get height

318
00:16:36,110 --> 00:16:44,240
of the dro region for these but in order

319
00:16:42,769 --> 00:16:47,360
to clear the whole thing we want to

320
00:16:44,240 --> 00:16:50,000
clear the window size which means when

321
00:16:47,360 --> 00:16:52,820
we actually call this we need to

322
00:16:50,000 --> 00:16:55,789
actually know how big the actual window

323
00:16:52,820 --> 00:16:57,200
is which again we don't really know so

324
00:16:55,789 --> 00:16:58,909
we have to kind of pass this we used to

325
00:16:57,200 --> 00:17:00,379
pass it and then we stopped passing it

326
00:16:58,909 --> 00:17:02,120
it makes me think we want to probably

327
00:17:00,379 --> 00:17:03,439
bundle these because you can see how

328
00:17:02,120 --> 00:17:05,329
they kind of have to cascade down a

329
00:17:03,440 --> 00:17:07,460
little bit like that which I don't love

330
00:17:05,329 --> 00:17:09,559
but you know for now I'm just going to

331
00:17:07,460 --> 00:17:13,309
do the simplest thing until I'm

332
00:17:09,559 --> 00:17:16,069
absolutely sure back that makes sense so

333
00:17:13,309 --> 00:17:25,429
yeah so let's see here I think this is

334
00:17:16,069 --> 00:17:29,349
dimension right let's see yeah so

335
00:17:25,430 --> 00:17:29,350
dimension width and dimension height

336
00:17:30,039 --> 00:17:36,680
should probably just take whatever that

337
00:17:32,240 --> 00:17:43,180
is and pass it down but cannot convert 5

338
00:17:36,680 --> 00:17:49,130
from memory into you 32 * what happened

339
00:17:43,180 --> 00:17:52,549
all right it's right there okay so let's

340
00:17:49,130 --> 00:17:55,010
see here now I reset the scissor anytime

341
00:17:52,549 --> 00:17:57,109
we clear so in theory we should always

342
00:17:55,009 --> 00:17:59,779
clear the entire back buffer which we

343
00:17:57,109 --> 00:18:01,669
are now right because that scissor one

344
00:17:59,779 --> 00:18:03,649
of the problems with OpenGL in the way

345
00:18:01,670 --> 00:18:05,900
that it you know kind of is when you use

346
00:18:03,650 --> 00:18:07,700
the original kinda sits very stateful so

347
00:18:05,900 --> 00:18:10,430
that scissor rectangle that we set will

348
00:18:07,700 --> 00:18:11,809
persist to the next frame and that's why

349
00:18:10,430 --> 00:18:13,190
we were getting some clearing bugs is

350
00:18:11,809 --> 00:18:15,169
because it's whatever the scissor was

351
00:18:13,190 --> 00:18:16,640
the last time through is what the clear

352
00:18:15,170 --> 00:18:19,789
would pick up and you definitely don't

353
00:18:16,640 --> 00:18:21,770
want that right okay so at least we're

354
00:18:19,789 --> 00:18:24,529
setting the scissor now more correctly

355
00:18:21,769 --> 00:18:26,389
which means and now I am getting exactly

356
00:18:24,529 --> 00:18:28,399
what I expected this was the part that I

357
00:18:26,390 --> 00:18:31,040
was trying to fix first now we cannot

358
00:18:28,400 --> 00:18:32,180
draw down here which is what I was like

359
00:18:31,039 --> 00:18:33,589
I didn't like the fact or do I'm like

360
00:18:32,180 --> 00:18:35,690
we're not setting our scissor regions

361
00:18:33,589 --> 00:18:38,359
properly and like now I think we are

362
00:18:35,690 --> 00:18:39,769
right so we fixed that but we still have

363
00:18:38,359 --> 00:18:40,289
one other problem which is that when

364
00:18:39,769 --> 00:18:42,539
we're doing

365
00:18:40,289 --> 00:18:45,299
the split but you can see that the the

366
00:18:42,539 --> 00:18:47,609
actual screen it's part portion of the

367
00:18:45,299 --> 00:18:51,149
actual original drawing is getting

368
00:18:47,609 --> 00:18:54,899
offset downward so it's like it's offset

369
00:18:51,150 --> 00:18:58,920
is incorrect now and so i'm not sure why

370
00:18:54,900 --> 00:19:00,420
we're getting that effect and so we kind

371
00:18:58,920 --> 00:19:02,880
of need to figure out where that's

372
00:19:00,420 --> 00:19:19,890
coming from as well so let's take a look

373
00:19:02,880 --> 00:19:22,230
here in handmade open jail i I'm not one

374
00:19:19,890 --> 00:19:35,850
hundred percent certain how that

375
00:19:22,230 --> 00:19:38,670
displacement would happen because my

376
00:19:35,849 --> 00:19:41,099
feeling is it probably has nothing to do

377
00:19:38,670 --> 00:19:43,080
with this operation meaning I think we

378
00:19:41,099 --> 00:19:45,240
could probably just not do this at all

379
00:19:43,079 --> 00:19:47,009
and still get the problem happening I

380
00:19:45,240 --> 00:19:53,400
because it would have to be something

381
00:19:47,009 --> 00:19:57,720
about setting up the viewport on target

382
00:19:53,400 --> 00:19:59,759
zero in light of that is when is what

383
00:19:57,720 --> 00:20:02,779
has to be happening I think and the

384
00:19:59,759 --> 00:20:05,339
reason I think that is just because I

385
00:20:02,779 --> 00:20:07,440
otherwise how would it get shifted down

386
00:20:05,339 --> 00:20:09,119
because that that operation just alpha

387
00:20:07,440 --> 00:20:11,309
blends something over the top that

388
00:20:09,119 --> 00:20:13,349
shouldn't be sufficient yeah and you can

389
00:20:11,309 --> 00:20:16,259
see it happen there right so it has

390
00:20:13,349 --> 00:20:19,469
nothing to do with this fact I think all

391
00:20:16,259 --> 00:20:22,349
it is is when you are toggling between

392
00:20:19,470 --> 00:20:25,470
those something's wrong with our bind

393
00:20:22,349 --> 00:20:28,559
call so when we do our opengl buying

394
00:20:25,470 --> 00:20:31,950
frame buffer we're not like properly

395
00:20:28,559 --> 00:20:33,960
setting that up i guess right something

396
00:20:31,950 --> 00:20:37,110
is getting set wrong i'm not sure

397
00:20:33,960 --> 00:20:43,259
exactly what that's causing that sort of

398
00:20:37,109 --> 00:20:45,569
jump to occur there so yeah so i'm going

399
00:20:43,259 --> 00:20:48,269
to take a quick look and see what's

400
00:20:45,569 --> 00:20:50,669
happening in the the bind call to see if

401
00:20:48,269 --> 00:20:53,129
i can get any sort of idea about why

402
00:20:50,670 --> 00:20:58,560
that would be happening

403
00:20:53,130 --> 00:21:00,120
I mean you can see that when we bind a

404
00:20:58,559 --> 00:21:02,519
target that's not zero we're going to

405
00:21:00,119 --> 00:21:05,579
make the viewport be the whole size but

406
00:21:02,519 --> 00:21:07,559
when we bind a target that is zero we it

407
00:21:05,579 --> 00:21:11,909
looks like we're doing the proper sort

408
00:21:07,559 --> 00:21:16,829
of min x-men why from the draw region so

409
00:21:11,910 --> 00:21:20,130
i'm not sure why we would be getting why

410
00:21:16,829 --> 00:21:30,629
would be getting that but getting that

411
00:21:20,130 --> 00:21:38,070
we appear to be so yeah i guess one

412
00:21:30,630 --> 00:21:43,320
thing that i ah that's the problem we

413
00:21:38,069 --> 00:21:46,619
also have our transform here i wonder if

414
00:21:43,319 --> 00:21:49,379
our transform is a problem because the

415
00:21:46,619 --> 00:21:53,369
transform has the width and the height

416
00:21:49,380 --> 00:22:03,150
in it now but that wouldn't cause an

417
00:21:53,369 --> 00:22:08,879
offset so what width and height are we

418
00:22:03,150 --> 00:22:16,580
using we're using the width and the

419
00:22:08,880 --> 00:22:16,580
height now that's that should be okay

420
00:22:38,490 --> 00:22:45,549
so here's something that vaguely tickles

421
00:22:41,859 --> 00:22:47,949
my memory so here's one thing that I

422
00:22:45,549 --> 00:22:50,589
would like to try I'm going to move this

423
00:22:47,950 --> 00:22:52,390
opengl screen space call down here so

424
00:22:50,589 --> 00:22:54,399
that we set the matrix every time

425
00:22:52,390 --> 00:23:01,420
through just because i want to see what

426
00:22:54,400 --> 00:23:09,700
happens of course i have to actually hit

427
00:23:01,420 --> 00:23:12,180
my jump alright so good now let's try

428
00:23:09,700 --> 00:23:12,180
this one

429
00:23:15,740 --> 00:23:25,130
alright so still getting the offset

430
00:23:17,569 --> 00:23:26,808
there I feel like there was some thing

431
00:23:25,130 --> 00:23:29,540
that I'm vaguely remembering about

432
00:23:26,808 --> 00:23:32,509
OpenGL we're like the view port and the

433
00:23:29,539 --> 00:23:35,539
scissor or for the perspective matrix

434
00:23:32,509 --> 00:23:39,079
are somehow dependent on each other in

435
00:23:35,539 --> 00:23:40,490
some way that's not obvious I sort of

436
00:23:39,079 --> 00:23:42,289
getting that vague like thing in the

437
00:23:40,490 --> 00:23:45,640
back of my mind hopefully that's not

438
00:23:42,289 --> 00:23:49,389
what's happening here but I'm just I'm

439
00:23:45,640 --> 00:23:51,650
little bit nervous about that okay so

440
00:23:49,390 --> 00:23:53,690
the first question i guess i have is

441
00:23:51,650 --> 00:23:56,090
maybe do we know that our viewport is

442
00:23:53,690 --> 00:23:58,279
being set correctly like maybe i'm just

443
00:23:56,089 --> 00:23:59,599
straight up setting it wrong because it

444
00:23:58,279 --> 00:24:02,329
looks like what's happening is the

445
00:23:59,599 --> 00:24:05,269
viewport is not getting reset when we

446
00:24:02,329 --> 00:24:07,220
switch back to target zero right that's

447
00:24:05,269 --> 00:24:09,230
what it looks like is happening because

448
00:24:07,220 --> 00:24:11,029
we would get the results that we're

449
00:24:09,230 --> 00:24:14,599
seeing that that's exactly what we would

450
00:24:11,029 --> 00:24:21,889
get if the if the viewport was only

451
00:24:14,599 --> 00:24:25,459
changed on if if the if the viewport was

452
00:24:21,890 --> 00:24:29,270
only doing this right and didn't get set

453
00:24:25,460 --> 00:24:34,970
back to this that is exactly what we

454
00:24:29,269 --> 00:24:39,960
would get right so I'm curious to know

455
00:24:34,970 --> 00:24:45,180
how that's happening like why we're not

456
00:24:39,960 --> 00:24:49,140
seeing it gets reset and I suppose I can

457
00:24:45,180 --> 00:24:52,160
verify that I mean not really verify it

458
00:24:49,140 --> 00:24:56,040
i suppose but i can at least test that

459
00:24:52,160 --> 00:25:01,830
by never doing that other view view port

460
00:24:56,039 --> 00:25:04,399
call yeah and then we can verify that

461
00:25:01,829 --> 00:25:10,439
you know the other ones wrong obviously

462
00:25:04,400 --> 00:25:12,240
but ours is not so that's good so it

463
00:25:10,440 --> 00:25:14,430
looks like we're calling that one and

464
00:25:12,240 --> 00:25:16,200
then either we're not calling the other

465
00:25:14,430 --> 00:25:18,630
one and should like maybes for some

466
00:25:16,200 --> 00:25:20,460
reason this call isn't happening which I

467
00:25:18,630 --> 00:25:23,160
don't know why or this call is not

468
00:25:20,460 --> 00:25:28,680
having the effect that the call should

469
00:25:23,160 --> 00:25:31,050
actually have right and i'm not sure why

470
00:25:28,680 --> 00:25:32,990
it wouldn't especially because this is

471
00:25:31,049 --> 00:25:48,930
the call that we actually are calling

472
00:25:32,990 --> 00:25:52,019
right every time right so we call that

473
00:25:48,930 --> 00:25:54,870
for each clear and then we call that to

474
00:25:52,019 --> 00:25:57,389
set up you know this is the call that we

475
00:25:54,869 --> 00:26:00,719
use to set up the frame buffer so i'm

476
00:25:57,390 --> 00:26:03,240
not sure why we would ever why having

477
00:26:00,720 --> 00:26:07,440
its flip like that would ever cause us

478
00:26:03,240 --> 00:26:11,569
to you know why having a second one

479
00:26:07,440 --> 00:26:11,570
makes that occur

480
00:26:15,769 --> 00:26:26,869
I don't know ah but maybe I do so we

481
00:26:24,230 --> 00:26:32,650
would never call it a second time in

482
00:26:26,869 --> 00:26:32,649
here we'd never call it in here right

483
00:26:37,390 --> 00:26:55,340
see that's the thing we would never call

484
00:26:40,910 --> 00:26:57,170
it even one time yeah so maybe we just

485
00:26:55,339 --> 00:27:03,049
have it straight up wrong so here is

486
00:26:57,170 --> 00:27:04,700
OpenGL buying frame buffer right and I'm

487
00:27:03,049 --> 00:27:06,470
going to force it through that's the

488
00:27:04,700 --> 00:27:08,480
thing as we weren't we weren't calling

489
00:27:06,470 --> 00:27:10,460
the right path we were calling this Pat

490
00:27:08,480 --> 00:27:13,430
but we were we had a set of spurious

491
00:27:10,460 --> 00:27:16,150
call there so let's see what happens if

492
00:27:13,430 --> 00:27:16,150
I just do it here

493
00:27:23,410 --> 00:27:29,740
well now that looks that looks right

494
00:27:29,769 --> 00:27:41,420
okay it looks that fixed the bug so just

495
00:27:34,190 --> 00:27:43,490
the fact that we had to bind it it was

496
00:27:41,420 --> 00:27:48,050
using the viewport from the last time

497
00:27:43,490 --> 00:27:49,819
around wasn't it we just were never it's

498
00:27:48,049 --> 00:27:52,750
the same exact bug as the scissor bone

499
00:27:49,819 --> 00:27:55,700
right it was calling GL viewport and

500
00:27:52,750 --> 00:27:58,609
never it was never initializing the call

501
00:27:55,700 --> 00:28:01,279
to GL viewport right because before you

502
00:27:58,609 --> 00:28:03,769
saw what happened there right before I

503
00:28:01,279 --> 00:28:06,319
was only setting the target frame buffer

504
00:28:03,769 --> 00:28:08,569
and I was assuming that we had set the

505
00:28:06,319 --> 00:28:11,299
the viewport up here but we never did

506
00:28:08,569 --> 00:28:14,089
because I took I took that out with the

507
00:28:11,299 --> 00:28:17,509
new viewport setting thing so this would

508
00:28:14,089 --> 00:28:19,759
never actually happen otherwise so you

509
00:28:17,509 --> 00:28:21,650
know what I should do I should take a

510
00:28:19,759 --> 00:28:24,589
page from the PlayBook that we had up

511
00:28:21,650 --> 00:28:26,660
here and say look we've got a current

512
00:28:24,589 --> 00:28:29,119
frame buffer thing happening right and

513
00:28:26,660 --> 00:28:34,580
we're sort of tracking that that current

514
00:28:29,119 --> 00:28:35,719
frame buffer situation and it's and I

515
00:28:34,579 --> 00:28:40,429
guess it's not really current frame

516
00:28:35,720 --> 00:28:43,430
buffer it's like current render target

517
00:28:40,430 --> 00:28:45,890
index we should set it to a bogus value

518
00:28:43,430 --> 00:28:47,570
and we should just that way we know

519
00:28:45,890 --> 00:28:49,190
we're always going through the same path

520
00:28:47,569 --> 00:28:51,109
instead of two different possible paths

521
00:28:49,190 --> 00:28:56,410
based on whether we hit this one or the

522
00:28:51,109 --> 00:28:56,409
one above it right so I want to do that

523
00:29:04,160 --> 00:29:08,279
that way it's all nicely self-contained

524
00:29:06,599 --> 00:29:09,990
and we know that we're always going

525
00:29:08,279 --> 00:29:12,329
through the same path so that's what was

526
00:29:09,990 --> 00:29:14,789
happening we worked on the wraparound

527
00:29:12,329 --> 00:29:16,470
the next time we would draw a frame it

528
00:29:14,789 --> 00:29:18,569
was still using whatever the viewport

529
00:29:16,470 --> 00:29:21,600
was from the last frame now if you never

530
00:29:18,569 --> 00:29:23,970
had more than one viewport well then you

531
00:29:21,599 --> 00:29:26,730
wouldn't have a problem right because

532
00:29:23,970 --> 00:29:28,440
you never have to worry about setting it

533
00:29:26,730 --> 00:29:31,710
to the wrong one and then using it right

534
00:29:28,440 --> 00:29:33,660
on the next train but we didn't have we

535
00:29:31,710 --> 00:29:35,279
once we hit the situation where we had

536
00:29:33,660 --> 00:29:38,220
more than one viewport it was just going

537
00:29:35,279 --> 00:29:41,730
to be wrong okay so i think that's

538
00:29:38,220 --> 00:29:43,710
that's all better like I said that one

539
00:29:41,730 --> 00:29:46,558
wasn't on the issues list but someone I

540
00:29:43,710 --> 00:29:52,370
think Kim had mentioned it so that's

541
00:29:46,558 --> 00:29:54,058
good all right so let's try wrong pitch

542
00:29:52,369 --> 00:29:55,619
probably would have been never has

543
00:29:54,058 --> 00:29:57,119
problem to a president retires for

544
00:29:55,619 --> 00:29:59,489
blender to the pitch to advance a source

545
00:29:57,119 --> 00:30:00,719
has been assigned the value of the fish

546
00:29:59,490 --> 00:30:06,230
need to advances so this was looks like

547
00:30:00,720 --> 00:30:06,230
a typo and they're talking about in here

548
00:30:06,289 --> 00:30:14,730
where we do is the source ray advanced

549
00:30:12,420 --> 00:30:16,140
yeah okay so you can see it here it

550
00:30:14,730 --> 00:30:19,349
would just like some copypasta there

551
00:30:16,140 --> 00:30:23,420
we've got the desk target pitch should

552
00:30:19,349 --> 00:30:26,129
have been the source target pitch right

553
00:30:23,420 --> 00:30:27,660
so I assume that that is the only thing

554
00:30:26,130 --> 00:30:30,240
that they were talking about in that bug

555
00:30:27,660 --> 00:30:32,190
and that wasn't causing a problem

556
00:30:30,240 --> 00:30:33,839
because hey all of the render targets

557
00:30:32,190 --> 00:30:35,370
have the same pitch so technically you

558
00:30:33,839 --> 00:30:38,399
really don't need a multiple pitches but

559
00:30:35,369 --> 00:30:40,769
just in case they ever did it would have

560
00:30:38,400 --> 00:30:42,660
been wrong so at least now we've got

561
00:30:40,769 --> 00:30:45,240
that it's a bug that we don't have to

562
00:30:42,660 --> 00:30:51,890
solve later right so let me try hopping

563
00:30:45,240 --> 00:30:51,890
up the stairs here let's see here

564
00:30:54,420 --> 00:31:19,170
all right um so yeah so we'll try that

565
00:31:21,630 --> 00:31:30,730
and switch back to the issues so let's

566
00:31:25,960 --> 00:31:34,390
see uh what else we got here let's see

567
00:31:30,730 --> 00:31:38,289
so we got a bunch of OpenGL like stuff

568
00:31:34,390 --> 00:31:39,940
here so let's see are from iffy Swiss

569
00:31:38,289 --> 00:31:42,460
check also apparently some cars foot

570
00:31:39,940 --> 00:31:43,990
experience for our from the interview we

571
00:31:42,460 --> 00:31:45,160
fix the typo and we check for the

572
00:31:43,990 --> 00:31:46,359
extension but we couldn't find an

573
00:31:45,160 --> 00:31:48,970
arbiter so we're not to do about that

574
00:31:46,359 --> 00:31:52,359
Minnesota version so this got reopened

575
00:31:48,970 --> 00:31:53,440
here there is no ARB texture srgb

576
00:31:52,359 --> 00:31:55,629
exception because s true beauty textures

577
00:31:53,440 --> 00:31:57,549
move directly the core from ex extension

578
00:31:55,630 --> 00:31:58,960
so determine support for SOA retextures

579
00:31:57,549 --> 00:32:02,349
you need to check if the ex isn't

580
00:31:58,960 --> 00:32:15,210
present or if the OpenGL version is

581
00:32:02,349 --> 00:32:17,679
greater than or equal to 2.1 you know I

582
00:32:15,210 --> 00:32:22,150
really wish people took API design more

583
00:32:17,680 --> 00:32:23,850
seriously I mean really guys really do

584
00:32:22,150 --> 00:32:29,470
you really think this was a good idea

585
00:32:23,849 --> 00:32:34,599
all right so all right so let's go take

586
00:32:29,470 --> 00:32:37,569
a look at that uh now I don't even know

587
00:32:34,599 --> 00:32:40,480
how to check the core version I think

588
00:32:37,569 --> 00:32:42,669
you have to look at what the vendor

589
00:32:40,480 --> 00:32:46,029
version string thing comes back let's

590
00:32:42,670 --> 00:32:52,410
take a look in here where's my info call

591
00:32:46,029 --> 00:32:52,410
yeah so when we get the version

592
00:32:53,920 --> 00:33:07,480
here I I mean are we supposed to parse

593
00:32:58,930 --> 00:33:22,299
the version string is that really is

594
00:33:07,480 --> 00:33:25,930
that really a good idea I mean I guess

595
00:33:22,299 --> 00:33:30,519
we could look and see if the first part

596
00:33:25,930 --> 00:33:35,440
of string is you know higher than to

597
00:33:30,519 --> 00:33:37,960
higher than or equal to 2 and if it's

598
00:33:35,440 --> 00:33:40,690
you know only equal to 2 then we'd have

599
00:33:37,960 --> 00:33:47,309
to look at the point to see if it was

600
00:33:40,690 --> 00:33:47,309
point one that just seems crazy

601
00:34:10,159 --> 00:34:27,740
I mean I don't know what else to do you

602
00:34:16,219 --> 00:34:30,730
know I I don't know if there's an open

603
00:34:27,739 --> 00:34:35,689
gel way to get let me see if there's a

604
00:34:30,730 --> 00:34:38,418
get integer V for it because I'd rather

605
00:34:35,690 --> 00:34:49,599
not have a parser in here just to

606
00:34:38,418 --> 00:34:53,808
determine their like a GL get here it is

607
00:34:49,599 --> 00:35:03,760
yeah so is there like a version in the

608
00:34:53,809 --> 00:35:03,760
GL get into juvie like somewhere version

609
00:35:04,780 --> 00:35:14,510
okay whoo I was a little nervous there

610
00:35:10,449 --> 00:35:18,798
all right uh so at least we could say

611
00:35:14,510 --> 00:35:25,039
after we do this we could say okay you

612
00:35:18,798 --> 00:35:32,980
know GL get integer with GL major

613
00:35:25,039 --> 00:35:36,020
version get into Giorgio minor version

614
00:35:32,980 --> 00:35:38,900
and we could then do some testing on

615
00:35:36,019 --> 00:35:47,420
those that's at least something so let's

616
00:35:38,900 --> 00:35:49,250
go ahead and see get integer V and we

617
00:35:47,420 --> 00:35:53,869
are going to go ahead and pass chillin

618
00:35:49,250 --> 00:35:55,849
major you know and minor will assume one

619
00:35:53,869 --> 00:36:01,490
point 0 because I think windows always

620
00:35:55,849 --> 00:36:03,019
has at least that and so will do the get

621
00:36:01,489 --> 00:36:06,709
integer fees on those and then we can

622
00:36:03,019 --> 00:36:14,449
say all right if the major version is

623
00:36:06,710 --> 00:36:17,778
greater than or equal to 3 right or the

624
00:36:14,449 --> 00:36:20,358
major version equals 2 and the minor

625
00:36:17,778 --> 00:36:23,150
version is greater than or equal to 1 I

626
00:36:20,358 --> 00:36:24,029
guess that's what Martin's was saying is

627
00:36:23,150 --> 00:36:29,280
the is

628
00:36:24,030 --> 00:36:34,200
magic so if we're basically greater than

629
00:36:29,280 --> 00:36:35,100
open Jill you know I guess I could say

630
00:36:34,199 --> 00:36:37,319
it this way to make a little more

631
00:36:35,099 --> 00:36:41,539
current if we're higher than version 2

632
00:36:37,320 --> 00:36:48,390
or we're on version 2.1 right or better

633
00:36:41,539 --> 00:37:08,750
then we know that we have our srgb

634
00:36:48,389 --> 00:37:12,000
textures right so I think that's right

635
00:37:08,750 --> 00:37:14,099
but we'll take a look undeclared

636
00:37:12,000 --> 00:37:17,960
identified GL major version in jail

637
00:37:14,099 --> 00:37:17,960
minor version okay

638
00:37:24,800 --> 00:37:37,280
let me grab that for you so let me step

639
00:37:32,840 --> 00:37:41,630
into that and see what happens here so

640
00:37:37,280 --> 00:37:45,140
we come through here we're going to hit

641
00:37:41,630 --> 00:37:49,400
this we got a major of three and a minor

642
00:37:45,139 --> 00:37:51,230
of zero so that's fine we go ahead and

643
00:37:49,400 --> 00:37:53,480
look here at me say okay the major is

644
00:37:51,230 --> 00:37:54,800
greater than two in this case so we're

645
00:37:53,480 --> 00:37:55,880
going to do this we don't care but

646
00:37:54,800 --> 00:37:57,170
otherwise we would have looked to see if

647
00:37:55,880 --> 00:37:59,059
the major is equal to or the minor was

648
00:37:57,170 --> 00:38:04,730
greater than equal to one right so I

649
00:37:59,059 --> 00:38:07,549
think that's right and then we'll we'll

650
00:38:04,730 --> 00:38:10,400
consider that set but that wasn't the

651
00:38:07,550 --> 00:38:16,760
only thing in this bug assuming that we

652
00:38:10,400 --> 00:38:18,920
got that right so we've got the wiggle

653
00:38:16,760 --> 00:38:21,230
version of the frame buffer extension

654
00:38:18,920 --> 00:38:24,470
has the same problem needs to check our

655
00:38:21,230 --> 00:38:25,789
professor be as well as xed okay so

656
00:38:24,469 --> 00:38:29,769
let's take a look at what's happening in

657
00:38:25,789 --> 00:38:38,659
that one so in win32 handmade we have

658
00:38:29,769 --> 00:38:46,099
srgb let's take a look at that so in

659
00:38:38,659 --> 00:38:49,369
here we've got wiggle through the ARB

660
00:38:46,099 --> 00:38:59,239
framebuffer srgb so it's it's just the

661
00:38:49,369 --> 00:39:02,869
same exact name looks like alright so in

662
00:38:59,239 --> 00:39:04,549
theory we have fixed those and by fixed

663
00:39:02,869 --> 00:39:07,219
as I mean sort of like provisionally fix

664
00:39:04,550 --> 00:39:09,050
them because the people who raided them

665
00:39:07,219 --> 00:39:11,329
laugh to test since we don't really know

666
00:39:09,050 --> 00:39:12,980
if they're broken or not right we're

667
00:39:11,329 --> 00:39:19,869
just sort of hypothesizing that we fix

668
00:39:12,980 --> 00:39:19,869
them but we don't know okay so

669
00:39:47,119 --> 00:39:53,309
so we'll let that be reopened by anyone

670
00:39:50,969 --> 00:39:54,808
who can actually test it for us if it

671
00:39:53,309 --> 00:39:58,890
fight if they find that that's still not

672
00:39:54,809 --> 00:40:01,109
actually doing the checks properly all

673
00:39:58,889 --> 00:40:02,788
right so let's keep going here check GL

674
00:40:01,108 --> 00:40:04,588
and it fall back I can't find it now but

675
00:40:02,789 --> 00:40:07,589
i believe martins posted a control flow

676
00:40:04,588 --> 00:40:11,250
bug with what happens if the ARB pixel

677
00:40:07,588 --> 00:40:13,608
format choosing fails and so let's take

678
00:40:11,250 --> 00:40:13,608
a look at that

679
00:40:22,380 --> 00:40:27,780
here it is small bug when calling win32

680
00:40:25,289 --> 00:40:29,579
set pixel format in the wind 3d opengl

681
00:40:27,780 --> 00:40:31,710
function it is called only for the

682
00:40:29,579 --> 00:40:33,000
modern context if creating the modern

683
00:40:31,710 --> 00:40:35,429
condo sales this function won't be

684
00:40:33,000 --> 00:40:41,929
called and creating the regular context

685
00:40:35,429 --> 00:40:48,809
will fail so yeah so we want to do that

686
00:40:41,929 --> 00:40:51,480
where we do create context let's see so

687
00:40:48,809 --> 00:40:54,929
we do the create context here and we do

688
00:40:51,480 --> 00:40:57,630
wiggle make current this is the

689
00:40:54,929 --> 00:41:00,179
preliminary context where we try to get

690
00:40:57,630 --> 00:41:03,030
the extensions which is not really what

691
00:41:00,179 --> 00:41:06,089
we're looking for we want the actual

692
00:41:03,030 --> 00:41:09,360
Nick call so we say if we've got it we

693
00:41:06,090 --> 00:41:14,280
set the pixel format and we do a quick

694
00:41:09,360 --> 00:41:16,980
context attribs ARB otherwise we do will

695
00:41:14,280 --> 00:41:22,710
create context here so I'm thinking

696
00:41:16,980 --> 00:41:26,550
win32 set pixel format I don't think we

697
00:41:22,710 --> 00:41:31,320
ever don't want to call it right so I

698
00:41:26,550 --> 00:41:34,050
feel like we could just do that you know

699
00:41:31,320 --> 00:41:37,080
here right I mean there's no reason why

700
00:41:34,050 --> 00:41:38,700
we would do it later I don't think so i

701
00:41:37,079 --> 00:41:40,559
think that would then make sure it

702
00:41:38,699 --> 00:41:42,179
always gets called so I'm that was just

703
00:41:40,559 --> 00:41:48,449
a cut and paste problem where we didn't

704
00:41:42,179 --> 00:41:50,960
do that right so okay I believe that's

705
00:41:48,449 --> 00:41:50,960
fixed

706
00:41:57,010 --> 00:42:01,660
so I'll go ahead and put that in here

707
00:42:18,309 --> 00:42:25,070
all right so that bug is in theory fixed

708
00:42:22,780 --> 00:42:26,510
again in theory because we're not really

709
00:42:25,070 --> 00:42:30,200
testing these these are just kind of

710
00:42:26,510 --> 00:42:33,550
preliminary fixes uh and let's see the

711
00:42:30,199 --> 00:42:33,549
necessary described pixel format

712
00:42:38,219 --> 00:42:43,899
so I was not sure about this one to be

713
00:42:42,010 --> 00:42:46,920
honest with you because I thought you

714
00:42:43,900 --> 00:42:50,470
did need to do it but maybe you don't

715
00:42:46,920 --> 00:42:55,930
and so let's see here in described pixel

716
00:42:50,469 --> 00:42:58,119
format when we pass that suggested pixel

717
00:42:55,929 --> 00:43:00,460
format the suggestion was that you could

718
00:42:58,119 --> 00:43:02,589
just not do that right that you could

719
00:43:00,460 --> 00:43:06,639
essentially just pass garbage right and

720
00:43:02,590 --> 00:43:09,940
do this and I don't know whether that's

721
00:43:06,639 --> 00:43:19,839
true or not I'm a little nervous about

722
00:43:09,940 --> 00:43:22,059
it to be honest because I don't know if

723
00:43:19,840 --> 00:43:28,690
if it always is really completely

724
00:43:22,059 --> 00:43:30,130
superfluous so to be honest I think I

725
00:43:28,690 --> 00:43:37,960
might just leave it in there I don't

726
00:43:30,130 --> 00:43:39,250
know maybe I shouldn't let's see I mean

727
00:43:37,960 --> 00:43:55,470
I guess another question is can you just

728
00:43:39,250 --> 00:43:55,469
pass 0 like can you do that

729
00:43:55,739 --> 00:44:00,969
apparently you can so is that an

730
00:43:59,019 --> 00:44:07,230
optional parameter of set pixel format

731
00:44:00,969 --> 00:44:07,230
basically at least on this card

732
00:44:21,699 --> 00:44:27,019
so it's not technically defined as an

733
00:44:24,679 --> 00:44:31,789
optional parameter but it is apparently

734
00:44:27,019 --> 00:44:39,320
only used in a very specific not a case

735
00:44:31,789 --> 00:44:41,210
that is not related to ours right so you

736
00:44:39,320 --> 00:44:43,970
know what I'm going to say though for

737
00:44:41,210 --> 00:44:46,820
completeness that we should just leave

738
00:44:43,969 --> 00:44:48,230
it this way because just because it

739
00:44:46,820 --> 00:44:50,330
doesn't have any effect it's not

740
00:44:48,230 --> 00:44:51,860
technically an optional parameter so i

741
00:44:50,329 --> 00:45:16,250
think i'm going to resolve won't fix

742
00:44:51,860 --> 00:45:17,420
that one so i'll make a note of it but i

743
00:45:16,250 --> 00:45:20,980
think i'm going to leave that in because

744
00:45:17,420 --> 00:45:20,980
i don't see a real reason not to

745
00:45:54,090 --> 00:45:58,710
so I'm just going to close that one as

746
00:45:56,289 --> 00:46:02,619
basically like I'm not going to fix it

747
00:45:58,710 --> 00:46:09,610
okay let's go back to the issues list

748
00:46:02,619 --> 00:46:10,569
getting smaller so we've got not going

749
00:46:09,610 --> 00:46:12,789
to touch that one cuz that's going to

750
00:46:10,570 --> 00:46:14,380
take a while so that'll have to be a

751
00:46:12,789 --> 00:46:16,029
separate one let's take a look at some

752
00:46:14,380 --> 00:46:19,210
of these other ones so use render

753
00:46:16,030 --> 00:46:20,950
targets we still call the writer target

754
00:46:19,210 --> 00:46:22,960
stuff so what I'm going to actually test

755
00:46:20,949 --> 00:46:25,419
that one so that we can actually get

756
00:46:22,960 --> 00:46:27,610
some crashes and make sure that we've

757
00:46:25,420 --> 00:46:35,050
got it so this is basically when we

758
00:46:27,610 --> 00:46:40,269
don't have render targets right so I'm

759
00:46:35,050 --> 00:46:48,300
going to go ahead and take a look at

760
00:46:40,269 --> 00:46:50,650
will get proc address here there it is

761
00:46:48,300 --> 00:46:54,310
so what I'm going to do is I'm just

762
00:46:50,650 --> 00:46:58,329
going to assume temporarily that we

763
00:46:54,309 --> 00:47:01,469
don't have GL ARB frame buffer object in

764
00:46:58,329 --> 00:47:01,469
fact I guess I can do that here

765
00:47:10,489 --> 00:47:15,799
so now in theory we should just crash

766
00:47:16,820 --> 00:47:21,300
because we're not obey we're not

767
00:47:19,500 --> 00:47:24,329
actually doing that check we should just

768
00:47:21,300 --> 00:47:28,650
jump to an invalid location or something

769
00:47:24,329 --> 00:47:30,659
right and yeah and we do so here where

770
00:47:28,650 --> 00:47:33,930
we try to call Geo frame buffers we just

771
00:47:30,659 --> 00:47:35,969
jump into no-man's land so let's go

772
00:47:33,929 --> 00:47:37,589
ahead and now try to make it so that we

773
00:47:35,969 --> 00:47:39,269
do run properly or at least as close

774
00:47:37,590 --> 00:47:41,940
properly as you can without those render

775
00:47:39,269 --> 00:47:47,130
targets and let's take a look at how

776
00:47:41,940 --> 00:47:51,740
that that would go so here we are with

777
00:47:47,130 --> 00:47:58,349
use render targets in use render targets

778
00:47:51,739 --> 00:48:01,469
we wait Matt refer again so you're going

779
00:47:58,349 --> 00:48:03,960
to targets command red mesh or one if

780
00:48:01,469 --> 00:48:07,739
the max render target index is greater

781
00:48:03,960 --> 00:48:12,170
than or equal to the global frame buffer

782
00:48:07,739 --> 00:48:12,169
count how did we get in here

783
00:48:24,530 --> 00:48:36,860
because the global frame buffer count oh

784
00:48:27,849 --> 00:48:39,170
but it's greater than or equal to so the

785
00:48:36,860 --> 00:48:42,349
max render target II index should have

786
00:48:39,170 --> 00:48:46,849
really been zero that's what actually

787
00:48:42,349 --> 00:48:50,119
should be happening there right so yeah

788
00:48:46,849 --> 00:48:52,369
so that's much better okay so I think

789
00:48:50,119 --> 00:48:55,819
then we just have to deal with the bind

790
00:48:52,369 --> 00:49:00,650
frame buffer call Joe buying frame

791
00:48:55,820 --> 00:49:05,480
buffer and in vine frame buffer I guess

792
00:49:00,650 --> 00:49:12,160
we're just going to say well the target

793
00:49:05,480 --> 00:49:12,159
index you know if GL bind frame buffer

794
00:49:13,239 --> 00:49:18,969
chardon x equals zero so we'll just

795
00:49:15,829 --> 00:49:23,179
always force it to render to target zero

796
00:49:18,969 --> 00:49:28,759
in these cases I guess however we do we

797
00:49:23,179 --> 00:49:31,069
may want to just not like you know we

798
00:49:28,760 --> 00:49:32,540
may want to throw away all rendering

799
00:49:31,070 --> 00:49:34,789
that isn't because like weeks since we

800
00:49:32,539 --> 00:49:37,219
can't support it i'm thinking maybe what

801
00:49:34,789 --> 00:49:39,980
we do is say if we r you know going to

802
00:49:37,219 --> 00:49:41,809
do GL buying frame buffer if we can do

803
00:49:39,980 --> 00:49:44,030
it will set the viewport to this if we

804
00:49:41,809 --> 00:49:52,940
can't do it will set the viewport to

805
00:49:44,030 --> 00:49:54,500
like nothing you know I don't know

806
00:49:52,940 --> 00:49:57,309
that's not that compelling either to me

807
00:49:54,500 --> 00:49:57,309
to be honest

808
00:50:19,469 --> 00:50:31,958
I'm not sure what the best way to handle

809
00:50:21,849 --> 00:50:33,909
this is I guess we can handle it

810
00:50:31,958 --> 00:50:35,889
explicitly here by saying if we're using

811
00:50:33,909 --> 00:50:38,048
render targets then we will do the open

812
00:50:35,889 --> 00:50:39,969
jail by and frame buffer there and that

813
00:50:38,048 --> 00:50:41,708
would be fine and then down here when we

814
00:50:39,969 --> 00:50:43,659
would would be doing an opengl buying

815
00:50:41,708 --> 00:50:47,048
frame buffer I guess what we actually

816
00:50:43,659 --> 00:50:48,669
want to do here is say you know if we're

817
00:50:47,048 --> 00:50:50,978
try for actually trying to do is render

818
00:50:48,668 --> 00:50:54,429
targets then we want to bind the frame

819
00:50:50,978 --> 00:50:57,518
buffer otherwise we want to actually

820
00:50:54,429 --> 00:50:58,898
kill this guy if he's trying to draw to

821
00:50:57,518 --> 00:51:04,328
something other than the one that he

822
00:50:58,898 --> 00:51:06,518
needs to draw to write so you know I

823
00:51:04,329 --> 00:51:09,489
guess what I would say is we'd want to

824
00:51:06,518 --> 00:51:11,318
say we'd want to enclose this whole

825
00:51:09,489 --> 00:51:14,438
thing order to issue a continued

826
00:51:11,318 --> 00:51:19,088
basically right we'd want to say you

827
00:51:14,438 --> 00:51:30,608
know don't do whatever it is that you're

828
00:51:19,088 --> 00:51:32,798
about to do if this guy's render target

829
00:51:30,608 --> 00:51:35,318
index is would it be would have been

830
00:51:32,798 --> 00:51:36,579
invalid another way I guess to look at

831
00:51:35,318 --> 00:51:39,898
it would be to actually put it up here

832
00:51:36,579 --> 00:51:42,759
right so we would say you know if

833
00:51:39,898 --> 00:51:46,268
whatever this guy's render target index

834
00:51:42,759 --> 00:51:49,228
actually is I guess we only really pull

835
00:51:46,268 --> 00:51:49,228
it out in this case

836
00:51:54,059 --> 00:51:59,519
and we really don't want to access it

837
00:51:56,369 --> 00:52:03,500
every time probably yeah this is just a

838
00:51:59,519 --> 00:52:03,500
little janky so I mean I guess

839
00:52:08,530 --> 00:52:14,170
I mean I guess the part is I don't

840
00:52:10,989 --> 00:52:16,809
really want to have to do this this is

841
00:52:14,170 --> 00:52:20,079
what the code would suggest that I do is

842
00:52:16,809 --> 00:52:25,420
basically look at whatever the clip

843
00:52:20,079 --> 00:52:26,650
rectangle is that we're getting whatever

844
00:52:25,420 --> 00:52:39,119
the clip bricked is that we're getting

845
00:52:26,650 --> 00:52:39,119
if it's render target index is in range

846
00:52:39,480 --> 00:52:53,889
then we're okay right and so I don't

847
00:52:51,849 --> 00:52:58,059
super love that but I think that's like

848
00:52:53,889 --> 00:52:59,859
roughly correct at least in theory and

849
00:52:58,059 --> 00:53:02,099
then I guess yeah at the end the global

850
00:52:59,860 --> 00:53:07,390
blind frame buffers have to be

851
00:53:02,099 --> 00:53:16,630
predicated on that and then that may be

852
00:53:07,389 --> 00:53:18,549
it and so now you know it's a it's a

853
00:53:16,630 --> 00:53:21,070
really graceful fall back to I guess you

854
00:53:18,550 --> 00:53:23,650
know that that it just pops in now if we

855
00:53:21,070 --> 00:53:26,650
don't have multiple render targets so I

856
00:53:23,650 --> 00:53:28,180
feel like that's okay I don't know if

857
00:53:26,650 --> 00:53:31,440
that's the most efficient way to do this

858
00:53:28,179 --> 00:53:40,199
so what I might say to hear is like well

859
00:53:31,440 --> 00:53:44,889
you know we could say you know assert

860
00:53:40,199 --> 00:53:50,460
clip render target index is less than

861
00:53:44,889 --> 00:53:50,460
equal to maximum target index certainly

862
00:53:54,608 --> 00:54:03,380
but in this case we could say if we're

863
00:53:58,219 --> 00:54:05,778
going to use render targets or right so

864
00:54:03,380 --> 00:54:07,130
essentially saying like hey if we know

865
00:54:05,778 --> 00:54:09,318
that we're in render target mode they

866
00:54:07,130 --> 00:54:14,599
just assume that these that you should

867
00:54:09,318 --> 00:54:18,558
process this so that we won't check

868
00:54:14,599 --> 00:54:20,650
every time if we don't have to I don't

869
00:54:18,559 --> 00:54:20,650
know

870
00:54:30,309 --> 00:54:44,329
so I think that's okay oops and in

871
00:54:41,898 --> 00:54:53,618
theory that should now work correctly in

872
00:54:44,329 --> 00:54:58,699
both cases but let's make sure yeah okay

873
00:54:53,619 --> 00:55:00,439
so I think that's all for that one I do

874
00:54:58,699 --> 00:55:03,168
want to check since we were monkeying

875
00:55:00,438 --> 00:55:05,418
with the blind calls there I do want to

876
00:55:03,168 --> 00:55:08,898
check to make sure that it's not that I

877
00:55:05,418 --> 00:55:11,768
do want to check to make sure that this

878
00:55:08,898 --> 00:55:11,768
guy works okay

879
00:55:23,519 --> 00:55:38,530
and he does appear to so that seems good

880
00:55:33,030 --> 00:55:40,890
all right all right so i think that's

881
00:55:38,530 --> 00:55:40,890
good

882
00:55:56,170 --> 00:56:02,619
what else do we have four issues so

883
00:56:00,250 --> 00:56:04,809
asynchronous textures download we're not

884
00:56:02,619 --> 00:56:10,420
going to do today for sure I really got

885
00:56:04,809 --> 00:56:12,700
what like two minutes left I think so

886
00:56:10,420 --> 00:56:16,809
but we might be able to look at this one

887
00:56:12,699 --> 00:56:19,000
pack entity into chunk list so that

888
00:56:16,809 --> 00:56:21,010
might be good and I think that's the

889
00:56:19,000 --> 00:56:24,460
only one that's really a short one so

890
00:56:21,010 --> 00:56:25,780
let's take a look at that one mocks from

891
00:56:24,460 --> 00:56:29,679
the forums the linked list doesn't

892
00:56:25,780 --> 00:56:30,880
change I believe the pack edited to trim

893
00:56:29,679 --> 00:56:31,960
function is bugging at the code it

894
00:56:30,880 --> 00:56:33,548
creates the first block of Chuck will

895
00:56:31,960 --> 00:56:34,900
also be called there's no room left at

896
00:56:33,548 --> 00:56:38,199
that point the new block should chain

897
00:56:34,900 --> 00:56:39,309
the old block but this is not done this

898
00:56:38,199 --> 00:56:41,019
reference for that remembering it I

899
00:56:39,309 --> 00:56:42,069
think it should become this or something

900
00:56:41,019 --> 00:56:44,048
like that hopefully this will prevent

901
00:56:42,068 --> 00:56:48,239
any future problems so let's take a look

902
00:56:44,048 --> 00:56:48,239
at that that's pack entity a chunk

903
00:56:56,548 --> 00:57:02,920
alright so here is the part they were

904
00:57:00,608 --> 00:57:06,400
talking about first free block is this

905
00:57:02,920 --> 00:57:10,960
one I believe right yeah so he's talking

906
00:57:06,400 --> 00:57:13,568
about this right here and so let's take

907
00:57:10,960 --> 00:57:17,679
a look at what this is doing we've got

908
00:57:13,568 --> 00:57:20,619
if there is no first block or there is

909
00:57:17,679 --> 00:57:22,179
no room right so we have either the case

910
00:57:20,619 --> 00:57:25,358
where we have an allocated a chunk at

911
00:57:22,179 --> 00:57:27,009
all or there isn't any room in this

912
00:57:25,358 --> 00:57:29,768
particular chunk for whatever it is that

913
00:57:27,010 --> 00:57:32,170
we're trying to pack into it then we

914
00:57:29,768 --> 00:57:36,098
look to see if there isn't a first free

915
00:57:32,170 --> 00:57:39,510
block available then we create one on

916
00:57:36,099 --> 00:57:42,460
the free store which seems totally fine

917
00:57:39,510 --> 00:57:45,069
right because now we've just got one

918
00:57:42,460 --> 00:57:47,409
sitting there we take the first block

919
00:57:45,068 --> 00:57:50,259
yeah and we immediately clobber it which

920
00:57:47,409 --> 00:57:53,469
is not good right that is not what we

921
00:57:50,260 --> 00:57:56,650
wanted to do so what we want to do there

922
00:57:53,469 --> 00:57:59,308
is something more like we want to kind

923
00:57:56,650 --> 00:58:07,200
of push that down if there was one there

924
00:57:59,309 --> 00:58:13,680
so we want to do like chunk first block

925
00:58:07,199 --> 00:58:16,989
next I don't even know this doesn't look

926
00:58:13,679 --> 00:58:20,078
this whole thing doesn't really look all

927
00:58:16,989 --> 00:58:23,979
that right to me but anyway so the the

928
00:58:20,079 --> 00:58:30,970
chunking in question here right I'm

929
00:58:23,980 --> 00:58:32,679
sorry the block there's basically you

930
00:58:30,969 --> 00:58:34,808
know there's a new block so look take

931
00:58:32,679 --> 00:58:38,618
that and it's going to be a world-first

932
00:58:34,809 --> 00:58:40,509
free block right so let's just name

933
00:58:38,619 --> 00:58:41,680
these what they're actually to be so

934
00:58:40,509 --> 00:58:44,980
this is the new block that we're going

935
00:58:41,679 --> 00:58:49,960
to use and then world first free block

936
00:58:44,980 --> 00:58:51,579
is just going to be whatever the the

937
00:58:49,960 --> 00:58:55,949
next thing was after that so that just

938
00:58:51,579 --> 00:58:58,450
pops it off of the free list right and

939
00:58:55,949 --> 00:59:00,368
we're saying that there has to be one

940
00:58:58,449 --> 00:59:04,000
because we always allocate a new one all

941
00:59:00,369 --> 00:59:05,769
right so that's all fine and then what

942
00:59:04,000 --> 00:59:08,858
we need to do is we need to actually set

943
00:59:05,768 --> 00:59:10,899
a chunk first block to something Val

944
00:59:08,858 --> 00:59:13,409
it so chunk first block is going to

945
00:59:10,900 --> 00:59:17,230
become whatever the new block is right

946
00:59:13,409 --> 00:59:20,858
but we want to remember whatever the new

947
00:59:17,230 --> 00:59:22,719
block actually we want to remember

948
00:59:20,858 --> 00:59:25,358
whatever is supposed to come after that

949
00:59:22,719 --> 00:59:27,998
block right so we want to take whatever

950
00:59:25,358 --> 00:59:29,858
the first block was and chain that on to

951
00:59:27,998 --> 00:59:32,048
the end of us before we set ourselves as

952
00:59:29,858 --> 00:59:35,498
the new head pointer I think that's

953
00:59:32,048 --> 00:59:36,730
really probably all we needed there I

954
00:59:35,498 --> 00:59:43,748
don't know if that's similar to what he

955
00:59:36,730 --> 00:59:46,528
was suggesting yes but he he did it a

956
00:59:43,748 --> 00:59:52,838
slightly different way but yes basically

957
00:59:46,528 --> 00:59:53,920
so I think that's it and we don't have

958
00:59:52,838 --> 00:59:55,710
much a way of testing that right now

959
00:59:53,920 --> 00:59:58,568
because we don't stress test the entity

960
00:59:55,710 --> 01:00:02,588
occupancy system at all we haven't

961
00:59:58,568 --> 01:00:06,538
really done much with that all right but

962
01:00:02,588 --> 01:00:06,538
I believe that's okay oops

963
01:00:20,469 --> 01:00:24,649
okay so let me just take a quick gander

964
01:00:23,239 --> 01:00:29,779
back of that just to make sure that I I

965
01:00:24,650 --> 01:00:31,940
believe that was a reasonable fix again

966
01:00:29,780 --> 01:00:34,130
we grab the new block off of the first

967
01:00:31,940 --> 01:00:37,429
of the free block list and we advance

968
01:00:34,130 --> 01:00:41,300
the free block point or forwards one we

969
01:00:37,429 --> 01:00:43,369
then say that whatever the first block

970
01:00:41,300 --> 01:00:45,410
is for this chunk we make that our next

971
01:00:43,369 --> 01:00:46,789
pointer and then we make ourselves words

972
01:00:45,409 --> 01:00:49,190
yes so I think that's pretty reasonable

973
01:00:46,789 --> 01:00:51,949
we then clear that block which seems

974
01:00:49,190 --> 01:00:53,630
fine all right so let's go ahead and go

975
01:00:51,949 --> 01:00:55,869
to the QA I think we're done with most

976
01:00:53,630 --> 01:00:55,869
of these

977
01:01:16,039 --> 01:01:20,309
so that's pretty good we're down to not

978
01:01:18,179 --> 01:01:29,460
too many more issues this is not really

979
01:01:20,309 --> 01:01:32,190
an issue right but yeah all the rest of

980
01:01:29,460 --> 01:01:36,690
them are and this one is these two are

981
01:01:32,190 --> 01:01:38,369
basically project things so really it's

982
01:01:36,690 --> 01:01:42,260
this one this one in this one are the

983
01:01:38,369 --> 01:01:42,260
three that we actually have to do

984
01:02:40,068 --> 01:02:43,940
snoring tortoise not sure what the

985
01:02:42,289 --> 01:02:46,489
minimum open Jill version the games for

986
01:02:43,940 --> 01:02:49,309
its but according to https open Jill org

987
01:02:46,489 --> 01:02:50,778
wiki get contacts info the GL major

988
01:02:49,309 --> 01:02:55,910
version jilla minders are only available

989
01:02:50,778 --> 01:03:03,650
in OpenGL 3.1 above oh well that means

990
01:02:55,909 --> 01:03:06,969
we will have to parse then I guess which

991
01:03:03,650 --> 01:03:06,969
sounds awful

992
01:03:12,820 --> 01:03:17,360
I mean that just seems really

993
01:03:15,650 --> 01:03:19,789
error-prone because we don't even know

994
01:03:17,360 --> 01:03:23,710
what the format of that string is right

995
01:03:19,789 --> 01:03:23,710
we have an example of what it is

996
01:03:32,929 --> 01:03:39,848
but if we're not going to do that right

997
01:03:35,119 --> 01:03:39,849
then we would have to actually do like a

998
01:03:50,199 --> 01:03:53,230
you know

999
01:04:00,389 --> 01:04:15,210
it's the name of the what's the version

1000
01:04:02,010 --> 01:04:25,049
here let's see result that version so we

1001
01:04:15,210 --> 01:04:32,480
have to do something like if at zero

1002
01:04:25,048 --> 01:04:47,509
equals dot you know major at equals

1003
01:04:32,480 --> 01:04:47,510
minor at equals and something like this

1004
01:04:52,480 --> 01:05:00,320
so we could do something well actually

1005
01:04:54,679 --> 01:05:02,480
you know what I probably do so we could

1006
01:05:00,320 --> 01:05:04,700
say like okay if we found that then we

1007
01:05:02,480 --> 01:05:14,630
would basically just say like okay the

1008
01:05:04,699 --> 01:05:18,409
dot is a is here and the minor at is you

1009
01:05:14,630 --> 01:05:20,300
know one pass here and we break and then

1010
01:05:18,409 --> 01:05:23,389
we just say well if we found the minor

1011
01:05:20,300 --> 01:05:27,619
at you know I don't know what we'd say

1012
01:05:23,389 --> 01:05:30,739
something like the major version the

1013
01:05:27,619 --> 01:05:33,530
minor version we assume or one in zero

1014
01:05:30,739 --> 01:05:37,489
or something assuming that we found the

1015
01:05:33,530 --> 01:05:44,260
minor at we'd say major equals parse you

1016
01:05:37,489 --> 01:05:47,059
know opengl parse number a major at and

1017
01:05:44,260 --> 01:05:52,700
then we'd say something like the minor

1018
01:05:47,059 --> 01:05:54,489
version minor at like that and then we'd

1019
01:05:52,699 --> 01:05:57,889
need a little thing here that parses an

1020
01:05:54,489 --> 01:05:59,389
integer can't believe anyone ever

1021
01:05:57,889 --> 01:06:02,179
thought this was an okay thing to have

1022
01:05:59,389 --> 01:06:04,338
in an API but i don't even want to know

1023
01:06:02,179 --> 01:06:11,049
and I stopped asking these kind of

1024
01:06:04,338 --> 01:06:14,469
questions a long time ago so this is a

1025
01:06:11,050 --> 01:06:14,470
like the string

1026
01:06:19,719 --> 01:06:31,069
and so then we've got a results right

1027
01:06:25,099 --> 01:06:39,789
we're just going to do like a while you

1028
01:06:31,070 --> 01:06:46,059
know at is greater than or equal to 0

1029
01:06:39,789 --> 01:06:50,599
and star at is less than or equal to 9

1030
01:06:46,059 --> 01:06:52,130
we're assuming it's a digit so we're

1031
01:06:50,599 --> 01:06:54,049
going to take whatever the result was

1032
01:06:52,130 --> 01:06:55,490
and multiply it by 10 right because

1033
01:06:54,050 --> 01:06:56,900
we're parsing a string so the first

1034
01:06:55,489 --> 01:06:58,789
thing we get is going to see we're going

1035
01:06:56,900 --> 01:07:01,400
to read it in and we're going to zoom

1036
01:06:58,789 --> 01:07:02,840
it's a digit and then every place we

1037
01:07:01,400 --> 01:07:05,360
move over it means that the digits we

1038
01:07:02,840 --> 01:07:06,470
saw before hand go up by a power of 10

1039
01:07:05,360 --> 01:07:10,869
right so we take whatever our

1040
01:07:06,469 --> 01:07:26,419
accumulator x 10 and then we add in

1041
01:07:10,869 --> 01:07:28,700
whatever app was right I guess so let's

1042
01:07:26,420 --> 01:07:32,289
take a look at that that beautiful piece

1043
01:07:28,699 --> 01:07:37,250
of code that shining stellar example

1044
01:07:32,289 --> 01:07:39,469
let's go ahead and take a look where's

1045
01:07:37,250 --> 01:07:42,849
my open drill there it is I was already

1046
01:07:39,469 --> 01:07:42,849
in it well there you go

1047
01:07:47,889 --> 01:07:54,679
alright so we're coming here and let's

1048
01:07:52,429 --> 01:07:59,869
see if we correctly identified our major

1049
01:07:54,679 --> 01:08:01,730
at minor at we did so that's good I

1050
01:07:59,869 --> 01:08:05,029
don't know why I guess I don't need the

1051
01:08:01,730 --> 01:08:07,250
dot so we can pull that out of the code

1052
01:08:05,030 --> 01:08:18,739
and I was thinking I might need that but

1053
01:08:07,250 --> 01:08:26,689
I guess I don't so assuming that I

1054
01:08:18,739 --> 01:08:30,889
actually caught those out oh and you

1055
01:08:26,689 --> 01:08:35,899
know might help if you put a plus in

1056
01:08:30,890 --> 01:08:38,960
there somewhere folks there we go could

1057
01:08:35,899 --> 01:08:42,199
be in that loop a long time but I want

1058
01:08:38,960 --> 01:08:53,359
to actually go see what that did there

1059
01:08:42,199 --> 01:08:57,550
we go so major and minor here majors 3-0

1060
01:08:53,359 --> 01:09:05,800
so I think we're good so there you go

1061
01:08:57,550 --> 01:09:07,909
all right um so I guess that's okay

1062
01:09:05,800 --> 01:09:10,100
hopefully that that helps thanks for

1063
01:09:07,909 --> 01:09:13,869
pointing that out that would explain why

1064
01:09:10,100 --> 01:09:13,870
they weren't defined anywhere

1065
01:09:35,890 --> 01:09:40,160
let's see so I'm designing a 3d game

1066
01:09:38,659 --> 01:09:41,869
engine and want to first write a

1067
01:09:40,159 --> 01:09:43,488
software renderer for it to learn more

1068
01:09:41,869 --> 01:09:46,430
about renderers do you think I should go

1069
01:09:43,488 --> 01:09:51,798
straight for open Jill or suffer render

1070
01:09:46,430 --> 01:09:52,940
and thin OpenGL I'm not sure I

1071
01:09:51,798 --> 01:09:54,560
understand the question because it seems

1072
01:09:52,939 --> 01:09:56,149
like you said in the predicate to the

1073
01:09:54,560 --> 01:09:58,969
question that you wanted to write us off

1074
01:09:56,149 --> 01:10:05,359
for render so if you want to write us

1075
01:09:58,969 --> 01:10:10,730
off for a renderer then you should write

1076
01:10:05,359 --> 01:10:13,119
a software renderer I guess is what I

1077
01:10:10,729 --> 01:10:13,119
would say

1078
01:10:27,819 --> 01:10:32,618
yeah and insofar as I didn't want to use

1079
01:10:30,340 --> 01:10:36,690
scanf because it's just going to be

1080
01:10:32,618 --> 01:10:39,339
another thing we have to remove when I

1081
01:10:36,689 --> 01:10:41,019
when I remove the sea runtime library so

1082
01:10:39,340 --> 01:10:43,980
if it's easy enough to write a parser I

1083
01:10:41,020 --> 01:10:43,980
just write it

1084
01:12:21,198 --> 01:12:35,268
all right I know speaking more questions

1085
01:12:23,988 --> 01:12:37,518
so I'm going to wrap it up all right

1086
01:12:35,269 --> 01:12:39,289
everyone thank you very much for joining

1087
01:12:37,519 --> 01:12:40,550
me for another sort of handmade hero

1088
01:12:39,288 --> 01:12:42,978
it's been a pleasure coating with you as

1089
01:12:40,550 --> 01:12:46,670
always if you would like to follow along

1090
01:12:42,979 --> 01:12:48,199
at home you can always go to handmade

1091
01:12:46,670 --> 01:12:50,149
here at work and pre-order the game it

1092
01:12:48,198 --> 01:12:52,219
comes the source code so that you can

1093
01:12:50,149 --> 01:12:53,538
experiment yourself and you know you can

1094
01:12:52,219 --> 01:12:56,719
find bugs and report about the issues

1095
01:12:53,538 --> 01:12:58,158
page too so I can fix them a bunch of

1096
01:12:56,719 --> 01:13:01,038
those were reported by people who play

1097
01:12:58,158 --> 01:13:02,328
with a source code we also forum site if

1098
01:13:01,038 --> 01:13:03,649
you want to ask questions we have a

1099
01:13:02,328 --> 01:13:05,719
patreon page to my support the video

1100
01:13:03,649 --> 01:13:07,609
series a schedule bot if you want to

1101
01:13:05,719 --> 01:13:10,219
know what we're going to be live and in

1102
01:13:07,609 --> 01:13:14,118
past episodes guide or you can go to

1103
01:13:10,219 --> 01:13:16,300
catch up on old old stuff we did that's

1104
01:13:14,118 --> 01:13:18,708
about it I'll be back here next week

1105
01:13:16,300 --> 01:13:20,538
until then and do you wanna know when

1106
01:13:18,708 --> 01:13:22,099
check the schedule bot until then have

1107
01:13:20,538 --> 01:13:23,389
fun programming this weekend and I'll

1108
01:13:22,099 --> 01:13:25,748
see you guys on the internet piggies

1109
01:13:23,389 --> 01:13:25,748
everyone

