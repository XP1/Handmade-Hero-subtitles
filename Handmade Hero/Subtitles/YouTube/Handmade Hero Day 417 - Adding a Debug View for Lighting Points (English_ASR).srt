1
00:00:01,520 --> 00:00:07,589
alright hello everyone and welcome to

2
00:00:04,830 --> 00:00:10,199
handmade Hero the stream where we

3
00:00:07,589 --> 00:00:13,190
implement an entire game or in this case

4
00:00:10,199 --> 00:00:16,048
an entire lighting system from scratch

5
00:00:13,189 --> 00:00:17,608
and we are kind of getting close to

6
00:00:16,048 --> 00:00:19,618
having good lighting solution I think

7
00:00:17,609 --> 00:00:21,480
actually it's been a bit of a long road

8
00:00:19,618 --> 00:00:22,189
but you know it's converging on what I

9
00:00:21,480 --> 00:00:26,189
wanted

10
00:00:22,189 --> 00:00:29,278
now we today pretty much our job is to

11
00:00:26,189 --> 00:00:30,810
get some debug stuff working drawing

12
00:00:29,278 --> 00:00:34,109
some debug stuff in the lighting

13
00:00:30,809 --> 00:00:36,000
solution so that we can converge on good

14
00:00:34,109 --> 00:00:38,939
lighting right right now I think we're

15
00:00:36,000 --> 00:00:40,829
mostly set up for doing the lighting

16
00:00:38,939 --> 00:00:43,259
that I want but I think we've got a lot

17
00:00:40,829 --> 00:00:44,340
of bugs in there and we just have tuning

18
00:00:43,259 --> 00:00:46,710
to do as well even if we didn't have

19
00:00:44,340 --> 00:00:49,320
bugs so we kind of have to go through

20
00:00:46,710 --> 00:00:55,320
and actually like do that work we also

21
00:00:49,320 --> 00:00:57,210
did the beginnings I trying to remember

22
00:00:55,320 --> 00:00:59,759
exactly what how far we got but we did

23
00:00:57,210 --> 00:01:01,679
the beginnings last week well the other

24
00:00:59,759 --> 00:01:03,329
part of it which is sending down

25
00:01:01,679 --> 00:01:04,948
lighting information separately from

26
00:01:03,329 --> 00:01:07,170
rendering information which again is

27
00:01:04,948 --> 00:01:08,879
also crucial because one of the things

28
00:01:07,170 --> 00:01:11,129
that we need to be able to do since we

29
00:01:08,879 --> 00:01:13,769
are two and a half the game with mixed

30
00:01:11,129 --> 00:01:15,899
mirror look mixed 3d 2d we need to be

31
00:01:13,769 --> 00:01:17,879
able to replace our sprite cards with

32
00:01:15,900 --> 00:01:19,859
actual 3d geometry that can catch light

33
00:01:17,879 --> 00:01:21,539
just simple things like a cube or a

34
00:01:19,859 --> 00:01:24,118
sphere or something like this that can

35
00:01:21,540 --> 00:01:28,159
catch light and so we really want to be

36
00:01:24,118 --> 00:01:30,688
able to keep that in mind as we're as

37
00:01:28,159 --> 00:01:33,630
we're sort of going and we did part of

38
00:01:30,688 --> 00:01:36,359
that work last week we did the part

39
00:01:33,629 --> 00:01:39,089
where we can put in arbitrary lighting

40
00:01:36,359 --> 00:01:40,379
samples per surface so that's half of it

41
00:01:39,090 --> 00:01:42,060
which is saying where we want the light

42
00:01:40,379 --> 00:01:44,578
to be collected we need the other half

43
00:01:42,060 --> 00:01:47,310
of it now which is let's say where we

44
00:01:44,578 --> 00:01:49,199
want our blockers to be we want to do

45
00:01:47,310 --> 00:01:50,728
that in a separate stream from our

46
00:01:49,200 --> 00:01:54,240
actual geometry that gets rendered so

47
00:01:50,728 --> 00:01:56,849
that's really all we have to do so let's

48
00:01:54,239 --> 00:01:59,459
go ahead and get started here today is

49
00:01:56,849 --> 00:02:01,349
day 4:17 so if you're starting with

50
00:01:59,459 --> 00:02:03,509
source code from day 4:16 you should be

51
00:02:01,349 --> 00:02:05,819
able to follow along directly with where

52
00:02:03,509 --> 00:02:08,868
I am and I'm gonna go ahead here and

53
00:02:05,819 --> 00:02:08,868
open up

54
00:02:10,129 --> 00:02:14,240
well I'm gonna wait a while for a visual

55
00:02:12,379 --> 00:02:17,000
studio to open up it's thinking about it

56
00:02:14,240 --> 00:02:21,920
it's working real hard there it goes and

57
00:02:17,000 --> 00:02:28,430
I'm gonna go ahead and load up our

58
00:02:21,919 --> 00:02:32,539
project and build it okay so now I'm

59
00:02:28,430 --> 00:02:34,370
running and we actually found oddly

60
00:02:32,539 --> 00:02:37,549
enough that the lighting solution runs

61
00:02:34,370 --> 00:02:40,009
so quickly at the moment that we can

62
00:02:37,550 --> 00:02:41,540
even run its CPU side now it's very

63
00:02:40,009 --> 00:02:43,489
flickery of course because it's

64
00:02:41,539 --> 00:02:46,699
completely stochastically sampled and we

65
00:02:43,490 --> 00:02:49,430
haven't tuned it at all but you know

66
00:02:46,699 --> 00:02:51,109
even just looking at this what what I

67
00:02:49,430 --> 00:02:52,310
kind of realized you know after we're

68
00:02:51,110 --> 00:02:55,730
gonna have to do work obviously to get

69
00:02:52,310 --> 00:02:56,900
our lighting solution to be nicer and

70
00:02:55,729 --> 00:02:57,919
that's what we're doing the debug for

71
00:02:56,900 --> 00:02:59,599
today because I think we've got some

72
00:02:57,919 --> 00:03:01,129
problems in there but as we sort those

73
00:02:59,599 --> 00:03:03,139
problems out one of the interesting

74
00:03:01,129 --> 00:03:04,969
things that you notice about it is it's

75
00:03:03,139 --> 00:03:06,739
running so fast right now that it even

76
00:03:04,969 --> 00:03:10,580
runs 60 frames a second almost on the

77
00:03:06,740 --> 00:03:12,469
CPU side even even as unoptimized right

78
00:03:10,580 --> 00:03:14,960
it's not even we didn't even do

79
00:03:12,469 --> 00:03:19,550
multi-threaded or Cindy it runs just

80
00:03:14,960 --> 00:03:21,170
fine this way on the small scene as we

81
00:03:19,550 --> 00:03:22,670
improve that that means I think we're in

82
00:03:21,169 --> 00:03:25,759
good shape for it it already looks

83
00:03:22,669 --> 00:03:27,679
pretty good to me like if we you imagine

84
00:03:25,759 --> 00:03:30,500
doing some temporal filtering on that

85
00:03:27,680 --> 00:03:34,159
flicker you know this is really close to

86
00:03:30,500 --> 00:03:36,379
usable so that was a pretty big win for

87
00:03:34,159 --> 00:03:37,939
us and I'm pretty excited about that

88
00:03:36,379 --> 00:03:39,500
because I think it's gonna mean that we

89
00:03:37,939 --> 00:03:40,879
will converge on a really nice lighting

90
00:03:39,500 --> 00:03:42,680
solution here that we can actually use

91
00:03:40,879 --> 00:03:44,090
then we don't have to stress too hard

92
00:03:42,680 --> 00:03:46,040
about because it's like way too slow or

93
00:03:44,090 --> 00:03:47,270
something so on certainly on modern

94
00:03:46,039 --> 00:03:49,459
machines I think we'll be able to turn

95
00:03:47,270 --> 00:03:51,469
on full lighting you know with global

96
00:03:49,460 --> 00:03:53,090
illumination like we have here and it'll

97
00:03:51,469 --> 00:03:54,289
be pretty good now we're not out of the

98
00:03:53,090 --> 00:03:56,090
woods yet like I said there's still a

99
00:03:54,289 --> 00:03:57,829
ways to go to make everything nice and

100
00:03:56,090 --> 00:03:59,210
clean and not flickery and higher

101
00:03:57,830 --> 00:04:01,010
lighting quality and blah blah blah so

102
00:03:59,210 --> 00:04:03,290
we got a bunch of stuff to do but this

103
00:04:01,009 --> 00:04:04,849
is just very promising right and it is

104
00:04:03,289 --> 00:04:06,500
already capturing most of the light

105
00:04:04,849 --> 00:04:08,479
things we want you can see that there's

106
00:04:06,500 --> 00:04:09,860
Bounce lighting happening there these

107
00:04:08,479 --> 00:04:11,899
tiles are getting the blue light

108
00:04:09,860 --> 00:04:13,340
reflected off of these reflectors we're

109
00:04:11,900 --> 00:04:17,389
getting the shadowing that we want so

110
00:04:13,340 --> 00:04:19,488
over here we don't have any of that sort

111
00:04:17,389 --> 00:04:20,689
of light coming in and again we're not

112
00:04:19,488 --> 00:04:21,619
trying to do an accurate lighting

113
00:04:20,689 --> 00:04:23,149
solution here we're just trying to add

114
00:04:21,620 --> 00:04:24,079
character to our scenes by having some

115
00:04:23,149 --> 00:04:26,239
nice global illumination

116
00:04:24,079 --> 00:04:27,740
there so that you can have like stuff

117
00:04:26,240 --> 00:04:29,389
wedding like a projectile goes you get

118
00:04:27,740 --> 00:04:31,340
some nice things going and I don't care

119
00:04:29,389 --> 00:04:33,199
if the lighting is too blocky because

120
00:04:31,339 --> 00:04:34,369
the game is a blot you know it's built

121
00:04:33,199 --> 00:04:35,538
under these little blocks that you're

122
00:04:34,370 --> 00:04:37,819
hopping around on it's supposed to

123
00:04:35,538 --> 00:04:39,378
reinforce the blocky feel it's supposed

124
00:04:37,819 --> 00:04:41,569
to be isn't that minecraft or anything

125
00:04:39,379 --> 00:04:44,090
but it's fairly blocky in terms of the

126
00:04:41,569 --> 00:04:46,908
art style so I don't need these to be

127
00:04:44,089 --> 00:04:48,589
smooth anyway so I don't care how smooth

128
00:04:46,908 --> 00:04:50,120
we get those I just want to make sure we

129
00:04:48,589 --> 00:04:52,068
get some more smoothness in the actual

130
00:04:50,120 --> 00:04:53,538
let examples here that I'm not seeing I

131
00:04:52,069 --> 00:04:55,370
think that's because of bugs that we

132
00:04:53,538 --> 00:04:57,680
have in how we're distributing the light

133
00:04:55,370 --> 00:05:00,530
and tuning we need to do there because

134
00:04:57,680 --> 00:05:01,968
again we are doing sort of a little bit

135
00:05:00,529 --> 00:05:03,888
new stuff now that we haven't debugged

136
00:05:01,968 --> 00:05:05,810
so everything is looking pretty good to

137
00:05:03,889 --> 00:05:07,879
me I'm pretty happy with where this is

138
00:05:05,810 --> 00:05:10,009
going I do think we will probably need

139
00:05:07,879 --> 00:05:11,599
to make a larger scene also we could

140
00:05:10,009 --> 00:05:14,210
slow things down a bit later to make a

141
00:05:11,598 --> 00:05:15,560
larger scene and then as so as we do

142
00:05:14,209 --> 00:05:18,079
optimizations we have something that's

143
00:05:15,560 --> 00:05:19,430
really slow to work on what I'll do is

144
00:05:18,079 --> 00:05:21,829
I'll just turn up the generator so we

145
00:05:19,430 --> 00:05:25,430
generate like a you know big set of

146
00:05:21,829 --> 00:05:27,079
rooms so that we can test you know doing

147
00:05:25,430 --> 00:05:29,300
some of that stuff a little bit more

148
00:05:27,079 --> 00:05:30,500
dynamically but you know otherwise I

149
00:05:29,300 --> 00:05:31,819
think we're pretty good and really the

150
00:05:30,500 --> 00:05:36,439
main things that I want to do like I

151
00:05:31,819 --> 00:05:38,000
said is I really want to get that I want

152
00:05:36,439 --> 00:05:40,550
to get replacement geometry for like the

153
00:05:38,000 --> 00:05:43,098
trees and the hero sprite those sorts of

154
00:05:40,550 --> 00:05:44,300
things with the hero sprites turned off

155
00:05:43,098 --> 00:05:45,740
right now but when we turn it back on

156
00:05:44,300 --> 00:05:46,278
it'll be this big flat card here and

157
00:05:45,740 --> 00:05:47,569
that's no good

158
00:05:46,278 --> 00:05:49,728
so we won't replace the geometry of the

159
00:05:47,569 --> 00:05:51,830
trees and hero sprite we want to get the

160
00:05:49,728 --> 00:05:54,288
lighting tuned and and then I think

161
00:05:51,829 --> 00:05:56,838
we're in good shape to do just like put

162
00:05:54,288 --> 00:05:58,459
it down on the GPU or multi I don't know

163
00:05:56,838 --> 00:06:04,668
maybe multi-threaded on the CPU is the

164
00:05:58,459 --> 00:06:06,709
right way to go I it could be I mean I

165
00:06:04,668 --> 00:06:08,568
don't think it is I think we want that

166
00:06:06,709 --> 00:06:10,038
done on the GPU but you never know it's

167
00:06:08,569 --> 00:06:11,900
hard to say lighting is the kind of

168
00:06:10,038 --> 00:06:13,759
thing that does a lot of random geometry

169
00:06:11,899 --> 00:06:16,218
access and you know sometimes it's just

170
00:06:13,759 --> 00:06:17,900
not the kind of thing that GPUs like and

171
00:06:16,218 --> 00:06:19,430
so I don't really know that'll be in it

172
00:06:17,899 --> 00:06:20,929
that'll really into anything fine when

173
00:06:19,430 --> 00:06:22,939
it comes when we get one that we're like

174
00:06:20,930 --> 00:06:26,810
happy with it'll be pretty interesting

175
00:06:22,939 --> 00:06:28,519
to go okay what's the you know what's

176
00:06:26,810 --> 00:06:29,930
the right way to make this fast and I'm

177
00:06:28,519 --> 00:06:32,689
not sure so we'll have to see when we

178
00:06:29,930 --> 00:06:35,000
have the finished version what what

179
00:06:32,689 --> 00:06:36,228
feels like the right way to go so I'm

180
00:06:35,000 --> 00:06:37,579
going to go ahead and go to the render

181
00:06:36,228 --> 00:06:39,019
group here and and

182
00:06:37,579 --> 00:06:40,550
and what I'm kind of looking at here is

183
00:06:39,019 --> 00:06:43,579
if I remember correctly from where we

184
00:06:40,550 --> 00:06:44,689
left off last week and maybe some of you

185
00:06:43,579 --> 00:06:45,949
remember better than I do because of

186
00:06:44,689 --> 00:06:46,879
course I program all we can a completely

187
00:06:45,949 --> 00:06:48,199
different codebase on completely

188
00:06:46,879 --> 00:06:50,150
different things so sometimes it falls

189
00:06:48,199 --> 00:06:51,199
out of the mental cache but if I

190
00:06:50,149 --> 00:06:52,818
remember correctly what we're doing is

191
00:06:51,199 --> 00:06:55,848
you know we've got this

192
00:06:52,819 --> 00:06:58,759
these extractors here instead of

193
00:06:55,848 --> 00:07:00,199
specifying vertices separately what we

194
00:06:58,759 --> 00:07:01,819
did is we actually just used the same

195
00:07:00,199 --> 00:07:03,020
extractor and place the points in the

196
00:07:01,819 --> 00:07:04,490
same place as we were placing them

197
00:07:03,019 --> 00:07:05,508
before we reduced the subdivision a

198
00:07:04,490 --> 00:07:07,939
little because we were just doing four

199
00:07:05,509 --> 00:07:09,680
points per quad we may up that in the

200
00:07:07,939 --> 00:07:11,389
future you know again the idea is that

201
00:07:09,680 --> 00:07:12,800
you can specify it separately so you

202
00:07:11,389 --> 00:07:14,000
know the generator as it generates the

203
00:07:12,800 --> 00:07:15,439
world can actually be dynamically

204
00:07:14,000 --> 00:07:17,449
deciding where to put these sample

205
00:07:15,439 --> 00:07:21,110
points which is great because it means

206
00:07:17,449 --> 00:07:22,639
we have a lot of freedom to sort of

207
00:07:21,110 --> 00:07:24,020
micromanage the lighting which is what I

208
00:07:22,639 --> 00:07:25,250
wanted because you know lighting like I

209
00:07:24,019 --> 00:07:26,930
said letting is something we just don't

210
00:07:25,250 --> 00:07:28,968
have great solutions for yet so

211
00:07:26,930 --> 00:07:30,199
everything's always a hack that's why

212
00:07:28,968 --> 00:07:31,639
you see all these ridiculous things like

213
00:07:30,199 --> 00:07:33,319
screen space ambient occlusion and all

214
00:07:31,639 --> 00:07:35,269
this nutso stuff going on it's because

215
00:07:33,319 --> 00:07:37,310
there is no perfect solution to lighting

216
00:07:35,269 --> 00:07:38,750
real time ray tracing distributed ray

217
00:07:37,310 --> 00:07:40,639
tracing is the only solution we have

218
00:07:38,750 --> 00:07:42,228
that we know about that would be like a

219
00:07:40,639 --> 00:07:44,060
full lighting solution and it's just not

220
00:07:42,228 --> 00:07:47,089
right it's not feasible it's not fast

221
00:07:44,060 --> 00:07:48,228
enough right so we're always doing a

222
00:07:47,089 --> 00:07:49,788
little bit of hacking and that's just

223
00:07:48,228 --> 00:07:50,930
something that is good to remember when

224
00:07:49,788 --> 00:07:52,788
you're designing a lighting scheme being

225
00:07:50,930 --> 00:07:55,009
able to put in points where you can hack

226
00:07:52,788 --> 00:07:56,240
at it places where you can special case

227
00:07:55,009 --> 00:07:57,800
things places where you can manually

228
00:07:56,240 --> 00:07:59,389
specify it places where it need

229
00:07:57,800 --> 00:08:00,889
improvement all that sort of stuff can

230
00:07:59,389 --> 00:08:02,000
be really helpful because you know

231
00:08:00,889 --> 00:08:03,588
you're not going to get a perfect

232
00:08:02,000 --> 00:08:05,449
solution you just know that going into

233
00:08:03,588 --> 00:08:11,389
it so don't expect it don't expect to

234
00:08:05,449 --> 00:08:16,330
get there right so designing in a little

235
00:08:11,389 --> 00:08:19,218
bit of flex is good so okay here we go

236
00:08:16,329 --> 00:08:21,038
we got our X 7 or Y sub here we're

237
00:08:19,218 --> 00:08:23,810
subsampling the lights we're putting in

238
00:08:21,038 --> 00:08:26,689
these points that we're gonna be working

239
00:08:23,810 --> 00:08:29,300
with and what we know is there are four

240
00:08:26,689 --> 00:08:31,098
points per surface we sent down that

241
00:08:29,300 --> 00:08:34,639
it's hard-coded right now to generate

242
00:08:31,098 --> 00:08:36,588
that amount so what we should be seeing

243
00:08:34,639 --> 00:08:39,769
and the reason I say I want to move very

244
00:08:36,589 --> 00:08:41,719
quickly to a debug view of these because

245
00:08:39,769 --> 00:08:44,839
what we should be seeing is some

246
00:08:41,719 --> 00:08:46,550
interpolation of lighting on here so on

247
00:08:44,839 --> 00:08:50,029
a given surface I should see a color

248
00:08:46,549 --> 00:08:51,629
wash right now what I'm seeing instead

249
00:08:50,028 --> 00:08:55,259
is a solid

250
00:08:51,629 --> 00:08:58,169
color as if each individual one of these

251
00:08:55,259 --> 00:09:00,059
panels only had one lighting sample and

252
00:08:58,169 --> 00:09:02,099
the whole panel was getting lit by that

253
00:09:00,059 --> 00:09:05,099
sample right you can see very clearly

254
00:09:02,100 --> 00:09:06,810
that that is what I'm the output I'm

255
00:09:05,100 --> 00:09:09,509
getting and that doesn't match the

256
00:09:06,809 --> 00:09:11,159
output I was expecting to get and even

257
00:09:09,509 --> 00:09:13,409
though that doesn't always mean there's

258
00:09:11,159 --> 00:09:14,879
a bug you pretty much anytime you get

259
00:09:13,409 --> 00:09:16,589
output that's very different from what

260
00:09:14,879 --> 00:09:18,990
you'd expected you need to investigate

261
00:09:16,590 --> 00:09:20,370
because you probably have a bug but even

262
00:09:18,990 --> 00:09:22,500
if you don't have a bug you at least

263
00:09:20,370 --> 00:09:23,850
have some assumptions that you've made

264
00:09:22,500 --> 00:09:26,399
that are incorrect and you need to

265
00:09:23,850 --> 00:09:29,639
educate yourself what those are so what

266
00:09:26,399 --> 00:09:31,500
I'm gonna do is investigate here so that

267
00:09:29,639 --> 00:09:33,600
I can figure out if I have a bug or just

268
00:09:31,500 --> 00:09:35,610
a misunderstanding of what I myself

269
00:09:33,600 --> 00:09:37,019
wrote because you know these things get

270
00:09:35,610 --> 00:09:38,310
complicated sometimes you think you

271
00:09:37,019 --> 00:09:40,980
wrote something that should do something

272
00:09:38,309 --> 00:09:43,079
you write it correctly and it doesn't do

273
00:09:40,980 --> 00:09:44,970
that thing it turns out to just because

274
00:09:43,080 --> 00:09:47,310
you misunderstood that what would really

275
00:09:44,970 --> 00:09:48,899
happen when this thing occurs right so

276
00:09:47,309 --> 00:09:51,029
you you can have those two paths there's

277
00:09:48,899 --> 00:09:52,470
a bug which is just you failed to write

278
00:09:51,029 --> 00:09:54,449
the thing correctly and you need to fix

279
00:09:52,470 --> 00:09:55,740
it or there's hey this thing doesn't

280
00:09:54,450 --> 00:09:56,879
quite work the way you thought and now

281
00:09:55,740 --> 00:09:58,080
you need to readjust your thinking

282
00:09:56,879 --> 00:09:59,399
because otherwise you can't make the

283
00:09:58,080 --> 00:10:00,930
right modifications to it to get it to

284
00:09:59,399 --> 00:10:03,000
do what you actually needed right

285
00:10:00,929 --> 00:10:05,489
so whichever one it is doesn't matter we

286
00:10:03,000 --> 00:10:08,480
got to find it so let's go in oh and by

287
00:10:05,490 --> 00:10:10,950
the way someone was suggesting that this

288
00:10:08,480 --> 00:10:12,870
on the forums that this sample

289
00:10:10,950 --> 00:10:15,000
hemisphere function isn't uniform that's

290
00:10:12,870 --> 00:10:18,509
correct in fact that's why there's a

291
00:10:15,000 --> 00:10:20,340
to-do on here so I we don't know whether

292
00:10:18,509 --> 00:10:23,009
we'll care about that eventually it's

293
00:10:20,340 --> 00:10:24,360
not that non-uniform but it's a bit a

294
00:10:23,009 --> 00:10:25,799
little bit non-uniform the reason for

295
00:10:24,360 --> 00:10:28,590
that is because it does a cube and then

296
00:10:25,799 --> 00:10:30,809
projects the cube onto a sphere and when

297
00:10:28,590 --> 00:10:34,530
you wrap a cube on to a sphere you you

298
00:10:30,809 --> 00:10:37,589
get bunching along the cube boundaries

299
00:10:34,529 --> 00:10:39,750
right so you will get a cube that's more

300
00:10:37,590 --> 00:10:41,759
densely sample along like you'll get a

301
00:10:39,750 --> 00:10:44,879
hemisphere that's more densely sampled

302
00:10:41,759 --> 00:10:46,319
around the lines of the cube but that

303
00:10:44,879 --> 00:10:49,950
doesn't mean you want to replace it you

304
00:10:46,320 --> 00:10:51,900
have to remember that for approximate

305
00:10:49,950 --> 00:10:55,470
lighting you're you care about speed a

306
00:10:51,899 --> 00:10:58,470
lot and sometimes doing uniform sampling

307
00:10:55,470 --> 00:11:02,129
that's slower connect to be worse than

308
00:10:58,470 --> 00:11:03,450
doing more samples that are biased and

309
00:11:02,129 --> 00:11:05,278
you really don't know till you work up

310
00:11:03,450 --> 00:11:07,170
with it so

311
00:11:05,278 --> 00:11:08,759
don't want to jump to conclusions here

312
00:11:07,169 --> 00:11:10,559
so the person who's asking on the forums

313
00:11:08,759 --> 00:11:12,539
don't jump to conclusions about wanting

314
00:11:10,559 --> 00:11:14,878
to put in a much slower which it would

315
00:11:12,539 --> 00:11:16,649
be if we made a uniform one version of

316
00:11:14,879 --> 00:11:18,120
this because we don't know yet whether

317
00:11:16,649 --> 00:11:22,889
that's a good decision if the time is

318
00:11:18,120 --> 00:11:24,720
not now to look at that all right so

319
00:11:22,889 --> 00:11:26,399
here's our compute light propagation

320
00:11:24,720 --> 00:11:28,410
we're not going to modify that right now

321
00:11:26,399 --> 00:11:30,778
because we want to investigate it as it

322
00:11:28,409 --> 00:11:32,278
is at the moment and so what we want to

323
00:11:30,778 --> 00:11:34,409
do here is we want to have a way that we

324
00:11:32,278 --> 00:11:45,528
could flip between our lighting quads

325
00:11:34,409 --> 00:11:45,528
and our our normal scene right all right

326
00:11:45,708 --> 00:11:51,448
so here is our output lighting car quads

327
00:11:48,629 --> 00:11:53,339
function and what we want to do here is

328
00:11:51,448 --> 00:11:58,919
we want to I think clean up some of this

329
00:11:53,339 --> 00:12:01,230
stuff we kind of want to go through and

330
00:11:58,919 --> 00:12:04,349
just say look I'm pretty sure we don't

331
00:12:01,230 --> 00:12:06,028
want the voxel thing in here anymore so

332
00:12:04,350 --> 00:12:07,680
I'm just gonna go ahead and say look we

333
00:12:06,028 --> 00:12:10,078
keep backups from every day if I need to

334
00:12:07,679 --> 00:12:13,258
go get old code I will so I'm just gonna

335
00:12:10,078 --> 00:12:16,528
go ahead and and get rid of some of this

336
00:12:13,259 --> 00:12:18,949
stuff right we just don't we don't need

337
00:12:16,528 --> 00:12:18,948
this anymore

338
00:12:27,370 --> 00:12:30,129
so what I want to do here is I want to

339
00:12:28,990 --> 00:12:32,470
kind of just sort of start to clean this

340
00:12:30,129 --> 00:12:33,610
up and I want to get a good debug view

341
00:12:32,470 --> 00:12:35,320
in here that we can quickly switch

342
00:12:33,610 --> 00:12:36,550
between it was kind of drinking before

343
00:12:35,320 --> 00:12:38,590
because we never really spent the time

344
00:12:36,549 --> 00:12:41,019
to get it right I'd like to get it right

345
00:12:38,590 --> 00:12:42,970
now and make make this stuff work the

346
00:12:41,019 --> 00:12:48,220
way it should so I'm gonna just trim out

347
00:12:42,970 --> 00:12:50,920
some of this code here right that we

348
00:12:48,220 --> 00:12:54,790
don't need anymore I don't need any of

349
00:12:50,919 --> 00:12:57,789
this voxel filling stuff all of this

350
00:12:54,789 --> 00:13:00,159
stuff that can go away so here's what

351
00:12:57,789 --> 00:13:02,079
we're kind of looking at here and and we

352
00:13:00,159 --> 00:13:04,120
can also clean up some of this the

353
00:13:02,080 --> 00:13:07,930
lighting stuff as well we just don't

354
00:13:04,120 --> 00:13:09,070
need a lot of this stuff right so we

355
00:13:07,929 --> 00:13:10,359
just need to push those lighting

356
00:13:09,070 --> 00:13:12,100
textures it's like the only thing that

357
00:13:10,360 --> 00:13:13,930
we need to push and and they can have

358
00:13:12,100 --> 00:13:15,279
some stuff removed from there too so

359
00:13:13,929 --> 00:13:17,199
again just cleaning this up and then

360
00:13:15,279 --> 00:13:18,399
adding a debug view to it is all I'm

361
00:13:17,200 --> 00:13:20,470
really trying to accomplish right now

362
00:13:18,399 --> 00:13:23,100
and that's just to inspect our lighting

363
00:13:20,470 --> 00:13:24,940
as we can then debug and refine it

364
00:13:23,100 --> 00:13:27,159
because I like the way it's looking

365
00:13:24,940 --> 00:13:28,690
right now and I just now I want to I'm

366
00:13:27,159 --> 00:13:31,480
at the point where I want to turn the

367
00:13:28,690 --> 00:13:33,100
dial and and start improving this scheme

368
00:13:31,480 --> 00:13:34,509
rather than continuing to investigate

369
00:13:33,100 --> 00:13:37,750
other schemes I'm pretty happy with

370
00:13:34,509 --> 00:13:40,330
where this is go so we really don't need

371
00:13:37,750 --> 00:13:42,399
any of this stuff right we're just C and

372
00:13:40,330 --> 00:13:46,170
D are the only two things we're using

373
00:13:42,399 --> 00:13:51,909
right now we don't need my mug off the

374
00:13:46,169 --> 00:13:56,589
table I really don't want to break that

375
00:13:51,909 --> 00:14:00,759
mug because I like that mug it's what I

376
00:13:56,590 --> 00:14:03,580
have coffee in so what I want to do is

377
00:14:00,759 --> 00:14:05,559
just clean that up get rid of it and

378
00:14:03,580 --> 00:14:08,350
remove all the stuff that was dependent

379
00:14:05,559 --> 00:14:10,000
on it right so these things here that

380
00:14:08,350 --> 00:14:11,529
were previously dependent on it I want

381
00:14:10,000 --> 00:14:14,909
to get rid of those I don't want to take

382
00:14:11,529 --> 00:14:14,909
those as function calls anymore

383
00:14:15,460 --> 00:14:21,940
I want to remove anything that was

384
00:14:19,809 --> 00:14:28,179
dependent on it here we don't care about

385
00:14:21,940 --> 00:14:29,470
that let's see what else we've got all

386
00:14:28,179 --> 00:14:34,139
right so that's all good

387
00:14:29,470 --> 00:14:37,129
in the actual thing that we submit I

388
00:14:34,139 --> 00:14:40,159
feel like are we still submitting

389
00:14:37,129 --> 00:14:43,899
that stuff down though where's our red

390
00:14:40,159 --> 00:14:47,750
no there's we need to remove it from

391
00:14:43,899 --> 00:14:51,620
from one of these things as well because

392
00:14:47,750 --> 00:14:53,179
there's a there's an additional lighting

393
00:14:51,620 --> 00:14:56,179
transfer thing here so we want to get

394
00:14:53,179 --> 00:14:59,149
rid of these and that and we just want

395
00:14:56,179 --> 00:15:00,649
this thing this render entry lighting

396
00:14:59,149 --> 00:15:03,439
transfer is the only thing we actually

397
00:15:00,649 --> 00:15:05,659
want and that means we can remove some

398
00:15:03,440 --> 00:15:08,600
of these textures to here like we don't

399
00:15:05,659 --> 00:15:11,209
need to bind this P next texture we

400
00:15:08,600 --> 00:15:16,759
don't need to divine this lighting

401
00:15:11,210 --> 00:15:18,170
lookup either and that's good too one of

402
00:15:16,759 --> 00:15:20,779
the nice things about that is it gets us

403
00:15:18,169 --> 00:15:24,019
out of the 3d lookup space although I'll

404
00:15:20,779 --> 00:15:26,629
be honest we still may need that for the

405
00:15:24,019 --> 00:15:28,730
ray tracing side of things so we may

406
00:15:26,629 --> 00:15:30,860
still and have to have a sort of like

407
00:15:28,730 --> 00:15:32,139
hierarchical structure for that we don't

408
00:15:30,860 --> 00:15:34,879
really know what's gonna happen there

409
00:15:32,139 --> 00:15:36,799
but for the lighting look up at least we

410
00:15:34,879 --> 00:15:38,960
got out of the 3d texture business and

411
00:15:36,799 --> 00:15:41,329
that's probably a good thing because you

412
00:15:38,960 --> 00:15:43,280
know the less you can rely on 3d

413
00:15:41,330 --> 00:15:46,100
textures are better things that grow as

414
00:15:43,279 --> 00:15:51,620
the cube of a size is always a little

415
00:15:46,100 --> 00:15:54,230
bit always a little bit worse than it is

416
00:15:51,620 --> 00:15:55,700
something that doesn't right it's you

417
00:15:54,230 --> 00:15:58,970
would you would prefer to always be 2d

418
00:15:55,700 --> 00:16:00,950
if you could be we also don't need these

419
00:15:58,970 --> 00:16:02,060
light buffers there's a lot once once we

420
00:16:00,950 --> 00:16:03,530
are finished with the lighting we're

421
00:16:02,059 --> 00:16:03,949
gonna be able to clean out a lot of

422
00:16:03,529 --> 00:16:05,809
cruft

423
00:16:03,950 --> 00:16:07,879
which will be nice just things that we

424
00:16:05,809 --> 00:16:14,419
just simply don't need anymore

425
00:16:07,879 --> 00:16:23,899
and that's pretty cool I always find

426
00:16:14,419 --> 00:16:27,969
that to be quite nice those yep okay P

427
00:16:23,899 --> 00:16:27,970
next and look up

428
00:16:34,110 --> 00:16:38,379
and we really don't need to do this

429
00:16:36,370 --> 00:16:42,789
anymore but we'll leave it there because

430
00:16:38,379 --> 00:16:43,958
it doesn't hurt and so now we have to

431
00:16:42,789 --> 00:16:45,219
kind of rebind these a little bit more

432
00:16:43,958 --> 00:16:47,018
carefully here

433
00:16:45,220 --> 00:16:50,860
so technically lighting si will now

434
00:16:47,019 --> 00:16:53,078
become two texts or two I believe and

435
00:16:50,860 --> 00:16:57,879
letting D will become texture three

436
00:16:53,078 --> 00:17:02,349
right like so we we will not have any

437
00:16:57,879 --> 00:17:03,820
other textures in there there we go and

438
00:17:02,350 --> 00:17:05,799
now I need to make sure that those are

439
00:17:03,820 --> 00:17:14,350
still lined up properly in the actual Z

440
00:17:05,799 --> 00:17:16,119
bias shader so those will be in here Vox

441
00:17:14,349 --> 00:17:18,099
Minh corner and just cell dim or no long

442
00:17:16,119 --> 00:17:19,599
getting passed down the peanut sampler

443
00:17:18,099 --> 00:17:22,509
and the look up sampler no longer

444
00:17:19,599 --> 00:17:25,269
getting passed down in there and so

445
00:17:22,509 --> 00:17:27,068
those get removed from here right so you

446
00:17:25,269 --> 00:17:28,480
got the C sampler and the T sampler and

447
00:17:27,068 --> 00:17:32,920
that's going to be it none of those

448
00:17:28,480 --> 00:17:35,079
other folks are there and I don't know

449
00:17:32,920 --> 00:17:37,269
if I've trimmed everything out now I may

450
00:17:35,079 --> 00:17:39,308
have trimmed too much out we'll see in a

451
00:17:37,269 --> 00:17:42,039
second but hopefully well yeah we'll get

452
00:17:39,308 --> 00:17:45,730
some errors here that will tell us what

453
00:17:42,039 --> 00:17:49,210
stuff is missing okay so let's see what

454
00:17:45,730 --> 00:17:52,120
we got here program errors should have

455
00:17:49,210 --> 00:17:53,769
all the errors I think I got a look in

456
00:17:52,119 --> 00:18:01,899
the individual so let's see we're checks

457
00:17:53,769 --> 00:18:07,200
errors Ragman errors look up sampler and

458
00:18:01,900 --> 00:18:12,880
P next sampler are still in there

459
00:18:07,200 --> 00:18:14,860
let's see sampler ah yes so we can clamp

460
00:18:12,880 --> 00:18:16,929
we can get rid of like this stuff like

461
00:18:14,859 --> 00:18:21,250
the clamp locks unbox a light that stuff

462
00:18:16,929 --> 00:18:25,059
can just get removed that's good

463
00:18:21,250 --> 00:18:27,099
and yeah so all of this stuff that we

464
00:18:25,058 --> 00:18:31,389
used to be doing can also get removed

465
00:18:27,099 --> 00:18:34,178
goodbye there you go

466
00:18:31,390 --> 00:18:35,890
and again you can see just even from the

467
00:18:34,179 --> 00:18:37,419
look of it this is just so much cleaner

468
00:18:35,890 --> 00:18:40,080
so if we can make this lighting scheme

469
00:18:37,419 --> 00:18:42,759
work you can just see how much sort of

470
00:18:40,079 --> 00:18:46,509
effort we're saving just in the basic

471
00:18:42,759 --> 00:18:47,230
like execution of the shader will be

472
00:18:46,509 --> 00:18:51,460
simpler there

473
00:18:47,230 --> 00:19:04,900
right Phoenix center is that still in

474
00:18:51,460 --> 00:19:06,400
here oh wait what Oh hmm all right maybe

475
00:19:04,900 --> 00:19:10,330
I was I was a little overzealous there

476
00:19:06,400 --> 00:19:15,100
so we do still need the light position

477
00:19:10,329 --> 00:19:21,399
so so I guess we need to still have one

478
00:19:15,099 --> 00:19:26,439
of these four light positions gosh I

479
00:19:21,400 --> 00:19:28,690
really wish we could have these in a

480
00:19:26,440 --> 00:19:30,880
more compact format than to having a

481
00:19:28,690 --> 00:19:33,120
sample from three separate textures you

482
00:19:30,880 --> 00:19:38,919
know I wish we could just have a buffer

483
00:19:33,119 --> 00:19:40,509
you know we probably could right just

484
00:19:38,919 --> 00:19:42,520
have a buffer that has these three

485
00:19:40,509 --> 00:19:46,390
things in it because fundamentally

486
00:19:42,519 --> 00:19:49,089
speaking right we just want to do a

487
00:19:46,390 --> 00:19:52,390
buffer fetch you know I just don't know

488
00:19:49,089 --> 00:20:02,379
that you could do that in the in the

489
00:19:52,390 --> 00:20:03,850
fragment shader in OpenGL 3 I so you

490
00:20:02,380 --> 00:20:06,910
know what what I'm trying to say here is

491
00:20:03,849 --> 00:20:10,329
just that this stuff is just not really

492
00:20:06,910 --> 00:20:12,429
any of it none of this is F is what we

493
00:20:10,329 --> 00:20:14,769
really want what we really want is just

494
00:20:12,429 --> 00:20:19,000
a lighting Texel like this thing you

495
00:20:14,769 --> 00:20:21,069
know once right now like to UM textured

496
00:20:19,000 --> 00:20:21,700
vertex I don't know where that guy went

497
00:20:21,069 --> 00:20:23,259
here it is

498
00:20:21,700 --> 00:20:26,200
what we really want is what are these

499
00:20:23,259 --> 00:20:29,349
textured vertex things right that's what

500
00:20:26,200 --> 00:20:32,080
we actually wanted and we just want that

501
00:20:29,349 --> 00:20:33,759
to be something that we can specify as a

502
00:20:32,079 --> 00:20:35,230
buffer right I mean we just want to be

503
00:20:33,759 --> 00:20:37,690
able to say here's a position of the

504
00:20:35,230 --> 00:20:42,099
light here's the you know direction of

505
00:20:37,690 --> 00:20:44,470
the light and here's the color you know

506
00:20:42,099 --> 00:20:47,079
that's what we want to specify per light

507
00:20:44,470 --> 00:20:49,269
per light point coming down because

508
00:20:47,079 --> 00:20:52,089
that's what we fetch in here you know

509
00:20:49,269 --> 00:20:53,980
and so it would be nice to go to do one

510
00:20:52,089 --> 00:20:56,230
look up and get all those things back

511
00:20:53,980 --> 00:20:58,269
rather than we sampling from all these

512
00:20:56,230 --> 00:21:00,829
textures which just creates a lot of

513
00:20:58,269 --> 00:21:02,839
overhead but I just funded

514
00:21:00,829 --> 00:21:04,210
we don't know if we're allowed to fetch

515
00:21:02,839 --> 00:21:06,079
from a buffer in a fragment shader

516
00:21:04,210 --> 00:21:09,220
because that sort of thing is a

517
00:21:06,079 --> 00:21:15,949
relatively new addition and I don't know

518
00:21:09,220 --> 00:21:25,690
just a LSL version sample from buffer in

519
00:21:15,950 --> 00:21:25,690
fragment shader so let's see here so

520
00:21:31,329 --> 00:21:41,658
three quick reference card cuz I don't

521
00:21:39,288 --> 00:21:44,119
think you can so I think you know I I

522
00:21:41,659 --> 00:21:46,370
just don't know any other way to do it I

523
00:21:44,119 --> 00:21:48,138
guess is what I'm saying then still

524
00:21:46,369 --> 00:21:51,459
having one I would like to roll them all

525
00:21:48,138 --> 00:21:54,619
into one but I just don't think you can

526
00:21:51,460 --> 00:22:02,870
and I'm not sure so let's take a look

527
00:21:54,619 --> 00:22:09,788
let's see here per fragment operations

528
00:22:02,869 --> 00:22:09,788
that's not so that's

529
00:22:11,740 --> 00:22:14,838
[Music]

530
00:22:23,548 --> 00:22:29,398
I mean because in a sense you could just

531
00:22:26,638 --> 00:22:31,408
contribute as a uniform right as well

532
00:22:29,398 --> 00:22:35,368
and then you just find a buffer to the

533
00:22:31,409 --> 00:22:36,989
uniform but those usually have very like

534
00:22:35,368 --> 00:22:41,519
uniforms oftentimes have very hard

535
00:22:36,989 --> 00:22:44,249
constraints on how long they can be in

536
00:22:41,519 --> 00:22:45,628
earlier versions of geocells well so I

537
00:22:44,249 --> 00:22:47,819
just don't know if that's gonna be

538
00:22:45,628 --> 00:22:53,898
something we can actually if we're

539
00:22:47,819 --> 00:22:53,898
allowed to use right so let's see here

540
00:23:02,089 --> 00:23:08,819
yeah this is one of those questions

541
00:23:06,480 --> 00:23:11,099
that's really hard to answer I wish I

542
00:23:08,819 --> 00:23:12,178
could have done a search on it but it

543
00:23:11,099 --> 00:23:19,918
doesn't look like there's any

544
00:23:12,179 --> 00:23:23,149
information in the search shader access

545
00:23:19,919 --> 00:23:23,149
to buffer

546
00:23:33,650 --> 00:23:38,269
yeah so you can just see like we should

547
00:23:36,470 --> 00:23:40,308
probably stick with textures right

548
00:23:38,269 --> 00:23:45,470
because if you look at it this is what

549
00:23:40,308 --> 00:23:47,690
we want basically I think probably again

550
00:23:45,470 --> 00:23:50,269
I just am not sure what the easiest way

551
00:23:47,690 --> 00:23:54,410
to do this would be but I think you'd

552
00:23:50,269 --> 00:23:59,599
have to be up to version four before you

553
00:23:54,410 --> 00:24:05,259
can really count on this being available

554
00:23:59,599 --> 00:24:05,259
right let's see here

555
00:24:13,960 --> 00:24:19,279
so yes so I'm just I'm just not gonna do

556
00:24:17,150 --> 00:24:23,210
it I'm gonna I'll I'll put it back in

557
00:24:19,279 --> 00:24:25,700
the an array for the position looking at

558
00:24:23,210 --> 00:24:28,940
cuz this is what we want here looking at

559
00:24:25,700 --> 00:24:35,180
that it's like so we've got essentially

560
00:24:28,940 --> 00:24:36,860
two sets of four element wide things but

561
00:24:35,180 --> 00:24:38,630
I don't think again because they have to

562
00:24:36,859 --> 00:24:42,250
be textures I don't think I can pack

563
00:24:38,630 --> 00:24:48,610
those together in any better way really

564
00:24:42,250 --> 00:24:48,609
you know so like looking at this right

565
00:24:49,420 --> 00:24:56,210
these two could be packed together if

566
00:24:52,849 --> 00:24:58,519
they weren't heterogeneous types but I

567
00:24:56,210 --> 00:25:04,130
just don't see any real way to do that

568
00:24:58,519 --> 00:25:12,319
and similarly like I could I could stick

569
00:25:04,130 --> 00:25:14,510
two different color values in there are

570
00:25:12,319 --> 00:25:16,099
other ways to pack this so I don't know

571
00:25:14,509 --> 00:25:19,519
like one way to do it would be with two

572
00:25:16,099 --> 00:25:21,230
V for textures right like one way to do

573
00:25:19,519 --> 00:25:29,269
it would be to say all right we've got a

574
00:25:21,230 --> 00:25:34,700
V for like light zero and a V for of

575
00:25:29,269 --> 00:25:38,299
light data one so two for wide float

576
00:25:34,700 --> 00:25:44,930
textures right we could do that and

577
00:25:38,299 --> 00:25:46,849
these would just be that would get rid

578
00:25:44,930 --> 00:25:48,560
of the concept of max light power right

579
00:25:46,849 --> 00:25:50,509
the light could be any floating-point

580
00:25:48,559 --> 00:25:54,529
number that you wanted and the way this

581
00:25:50,509 --> 00:25:56,049
would be packed would be like pxpypz

582
00:25:54,529 --> 00:26:01,279
[Music]

583
00:25:56,049 --> 00:26:06,829
Direction X and this would be like color

584
00:26:01,279 --> 00:26:08,210
our color G color B Direction Y and then

585
00:26:06,829 --> 00:26:10,159
you just have two textures

586
00:26:08,210 --> 00:26:11,930
they're both floating-point textures you

587
00:26:10,160 --> 00:26:14,000
can now have floating-point color values

588
00:26:11,930 --> 00:26:16,160
right so that you don't have max light

589
00:26:14,000 --> 00:26:18,410
power anymore the power is what the

590
00:26:16,160 --> 00:26:20,060
light is just whatever it is and then

591
00:26:18,410 --> 00:26:22,670
you have the direction X Direction Y you

592
00:26:20,059 --> 00:26:23,960
recover the xethru normalization because

593
00:26:22,670 --> 00:26:26,960
you know the direction has to be a

594
00:26:23,960 --> 00:26:27,480
normal that cuts this down to two

595
00:26:26,960 --> 00:26:29,490
texture

596
00:26:27,480 --> 00:26:30,870
samples seems better than me because we

597
00:26:29,490 --> 00:26:34,170
were gonna need floating points for the

598
00:26:30,869 --> 00:26:35,699
position or the this either way so we're

599
00:26:34,170 --> 00:26:38,009
gonna need a wide format either way

600
00:26:35,700 --> 00:26:40,230
could we could go to 16 bit obviously

601
00:26:38,009 --> 00:26:41,460
per channel so to 32 bit but for now so

602
00:26:40,230 --> 00:26:43,829
I think that's I think I like that

603
00:26:41,460 --> 00:26:47,549
better so I think I do want to still cut

604
00:26:43,829 --> 00:26:49,619
down all of my textures that way - just

605
00:26:47,549 --> 00:26:51,659
- and then we'll send that down that

606
00:26:49,619 --> 00:26:54,059
gets rid of the max light power as well

607
00:26:51,660 --> 00:26:56,759
so it also kind of buys us something

608
00:26:54,059 --> 00:26:58,079
nice there and then we just have to 1d

609
00:26:56,759 --> 00:27:00,180
textures and again those sectors are

610
00:26:58,079 --> 00:27:02,099
quite small because they're 1d so let's

611
00:27:00,180 --> 00:27:07,140
say even if we doubled this and we went

612
00:27:02,099 --> 00:27:08,759
up to having 16,000 light source things

613
00:27:07,140 --> 00:27:09,990
which you know I don't know that we're

614
00:27:08,759 --> 00:27:12,779
ever gonna have that much but let's say

615
00:27:09,990 --> 00:27:16,440
we actually did again they're only one D

616
00:27:12,779 --> 00:27:18,149
so we're talking about eight floats each

617
00:27:16,440 --> 00:27:20,549
one of those floats is four wide that's

618
00:27:18,150 --> 00:27:21,090
only a half mega texture data really not

619
00:27:20,549 --> 00:27:24,359
a big deal

620
00:27:21,089 --> 00:27:25,589
right so again I feel like minimizing

621
00:27:24,359 --> 00:27:33,809
number of textures there's just better

622
00:27:25,589 --> 00:27:34,709
less samplers less fuss seems like a

623
00:27:33,809 --> 00:27:37,440
good plan

624
00:27:34,710 --> 00:27:39,180
well I forgot we have this new oops yeah

625
00:27:37,440 --> 00:27:42,299
we have this new speed crunch thing that

626
00:27:39,180 --> 00:27:45,019
someone sent that's a better calculator

627
00:27:42,299 --> 00:27:47,849
I should probably leave that up instead

628
00:27:45,019 --> 00:27:50,400
so I like that and that way we only have

629
00:27:47,849 --> 00:27:51,809
two textures still and that's good so

630
00:27:50,400 --> 00:27:53,970
I'm gonna go ahead and and try playing

631
00:27:51,809 --> 00:27:57,240
with that a little bit and see if we

632
00:27:53,970 --> 00:27:59,370
can't make that work out and I'm gonna

633
00:27:57,240 --> 00:28:01,230
call these things that we push on here

634
00:27:59,369 --> 00:28:05,489
I'm just gonna call them the same thing

635
00:28:01,230 --> 00:28:18,960
so we've got light data zero and light

636
00:28:05,490 --> 00:28:22,250
data one okay zero data one actually I

637
00:28:18,960 --> 00:28:22,250
guess we probably want that both here

638
00:28:32,329 --> 00:28:40,740
what does the problem cannot grow it

639
00:28:34,859 --> 00:28:46,049
from f32 oh never mind actually made

640
00:28:40,740 --> 00:28:52,410
those type of same alright so in the

641
00:28:46,049 --> 00:28:54,299
decode power function now I guess that

642
00:28:52,410 --> 00:28:55,980
just isn't necessary anymore because if

643
00:28:54,299 --> 00:28:59,579
we look at where that was being used

644
00:28:55,980 --> 00:29:01,920
right decode power was just something

645
00:28:59,579 --> 00:29:05,609
that we're using for decoding the packed

646
00:29:01,920 --> 00:29:10,590
versions anyway so in here this should

647
00:29:05,609 --> 00:29:12,929
be fine so okay in in this we don't

648
00:29:10,589 --> 00:29:21,119
actually have one of these things so

649
00:29:12,930 --> 00:29:28,920
that's fine it's gonna be this and we

650
00:29:21,119 --> 00:29:30,509
did we are not clamping anymore so what

651
00:29:28,920 --> 00:29:34,200
was this doing here output letting

652
00:29:30,509 --> 00:29:35,549
textures this is packing these down and

653
00:29:34,200 --> 00:29:37,740
we don't really want them packed down we

654
00:29:35,549 --> 00:29:39,389
don't want the length this this is not

655
00:29:37,740 --> 00:29:43,079
like we don't want any of this anymore

656
00:29:39,390 --> 00:29:48,420
actually so the incident light is just

657
00:29:43,079 --> 00:29:50,129
the emit see right in fact we don't even

658
00:29:48,420 --> 00:29:51,539
need to yeah this just does not need to

659
00:29:50,130 --> 00:29:55,080
be processed and it's not going to be

660
00:29:51,539 --> 00:29:58,859
packed right so what we need to do here

661
00:29:55,079 --> 00:30:03,960
is we need to grab the location as well

662
00:29:58,859 --> 00:30:05,909
as the average direction and we need to

663
00:30:03,960 --> 00:30:10,559
pack these together so really what we're

664
00:30:05,910 --> 00:30:15,930
doing here is two packs down light data

665
00:30:10,559 --> 00:30:19,849
zero light data one and what I want that

666
00:30:15,930 --> 00:30:23,299
to do again is I want that to follow

667
00:30:19,849 --> 00:30:23,299
this recommendation

668
00:30:24,700 --> 00:30:32,559
that I put here which is pxpypz DX and

669
00:30:28,460 --> 00:30:36,650
CRC GCB right

670
00:30:32,559 --> 00:30:41,720
so yeah let's go ahead and put those in

671
00:30:36,650 --> 00:30:43,610
there I we know that we've got P dot X P

672
00:30:41,720 --> 00:30:50,059
dot y p dot Z we'll have to fetch that

673
00:30:43,609 --> 00:30:55,459
out and then we've got our color so CR c

674
00:30:50,059 --> 00:30:57,589
g CP and then we need our x that's why

675
00:30:55,460 --> 00:30:59,779
it's the only thing we don't have here

676
00:30:57,589 --> 00:31:04,569
is our position but that's okay because

677
00:30:59,779 --> 00:31:07,579
we can easily get the position the

678
00:31:04,569 --> 00:31:10,480
lighting solution has these letting

679
00:31:07,579 --> 00:31:12,799
points in it and it should just be

680
00:31:10,480 --> 00:31:14,360
accessible right off that if i remember

681
00:31:12,799 --> 00:31:19,819
correctly

682
00:31:14,359 --> 00:31:21,139
so where is letting point there it is so

683
00:31:19,819 --> 00:31:25,460
that's all we need right there

684
00:31:21,140 --> 00:31:28,820
it's just that p value and i think

685
00:31:25,460 --> 00:31:30,769
that's it right so that should get

686
00:31:28,819 --> 00:31:36,950
everything at and packed into those

687
00:31:30,769 --> 00:31:41,750
lighting data structures and ready for

688
00:31:36,950 --> 00:31:45,920
submission uh this is no longer relevant

689
00:31:41,750 --> 00:31:49,029
to anybody so it should go away deleting

690
00:31:45,920 --> 00:31:52,700
code is always a good sign in my opinion

691
00:31:49,029 --> 00:31:55,039
and then we need to make all of this

692
00:31:52,700 --> 00:32:00,380
stuff line up with what we said so we've

693
00:31:55,039 --> 00:32:02,359
got light data zero light data one and

694
00:32:00,380 --> 00:32:11,690
these two are now both gonna submit

695
00:32:02,359 --> 00:32:14,779
floats for element floats zero one and

696
00:32:11,690 --> 00:32:21,230
they're both 1d this is all correct so

697
00:32:14,779 --> 00:32:23,450
all of that stuff is fine and yeah off

698
00:32:21,230 --> 00:32:25,849
we go so now we have to modify the

699
00:32:23,450 --> 00:32:29,690
opengl side of things because it's

700
00:32:25,849 --> 00:32:33,709
getting those lighting samples coming

701
00:32:29,690 --> 00:32:35,720
down so we need light k20 and light one

702
00:32:33,710 --> 00:32:39,319
in here to be

703
00:32:35,720 --> 00:32:41,659
our new buffer names and then in here we

704
00:32:39,319 --> 00:32:53,778
need to allocate those properly late

705
00:32:41,659 --> 00:32:55,639
pick 0 K 2 1 0 J 2 1 and again we are

706
00:32:53,778 --> 00:32:57,829
going to modify this because now it's

707
00:32:55,638 --> 00:33:01,819
going to be a 32f texture it's gonna be

708
00:32:57,829 --> 00:33:03,109
a GL float:right so those are just the

709
00:33:01,819 --> 00:33:04,609
same as we were doing before only now we

710
00:33:03,109 --> 00:33:06,558
just got two textures of exactly the

711
00:33:04,609 --> 00:33:09,288
same kind if we could we just say this

712
00:33:06,558 --> 00:33:11,960
texture had eight elements right but we

713
00:33:09,288 --> 00:33:18,378
can't so we just do two that have four

714
00:33:11,960 --> 00:33:22,000
elements each alright so oops gotta do

715
00:33:18,378 --> 00:33:24,859
the bind properly here like two to one

716
00:33:22,000 --> 00:33:28,519
light g20 so we've combined both of

717
00:33:24,859 --> 00:33:30,319
these noob or didn't and now we need to

718
00:33:28,519 --> 00:33:32,500
adjust the shader to account for that

719
00:33:30,319 --> 00:33:35,569
properly so there's like two to zero and

720
00:33:32,500 --> 00:33:37,429
light dataone and those are in slots two

721
00:33:35,569 --> 00:33:41,298
and three so we I should have a slot 0

722
00:33:37,429 --> 00:33:46,159
and 1 and a slot 2 and 3 don't ask me

723
00:33:41,298 --> 00:33:53,569
why I keep typing why so now if I go

724
00:33:46,159 --> 00:33:56,000
back and look at the white see here go

725
00:33:53,569 --> 00:33:58,548
grab this stuff so now this shader needs

726
00:33:56,000 --> 00:34:01,159
to be reworked a little bit so you can

727
00:33:58,548 --> 00:34:04,579
see in here when we do the compile

728
00:34:01,159 --> 00:34:06,350
Xevious program our sampler is well

729
00:34:04,579 --> 00:34:07,849
that's the vertex shader so we don't

730
00:34:06,349 --> 00:34:09,648
really have to do anything there but in

731
00:34:07,849 --> 00:34:12,230
here our samples are C slam 4 and D

732
00:34:09,648 --> 00:34:15,559
sampler so this is like like zero

733
00:34:12,230 --> 00:34:17,119
sampler and this is like one sampler we

734
00:34:15,559 --> 00:34:22,578
need those to be coming through in the

735
00:34:17,119 --> 00:34:30,079
right slots so we've got them here like

736
00:34:22,579 --> 00:34:32,899
stereo sampler like one sampler I don't

737
00:34:30,079 --> 00:34:36,068
know what this debug light P thing is

738
00:34:32,898 --> 00:34:36,068
but we're not using it anymore

739
00:34:39,148 --> 00:34:51,789
that was what we used to have a debug

740
00:34:41,260 --> 00:34:54,250
light that we moved around and all this

741
00:34:51,789 --> 00:34:56,500
stuff like the multi grid up and down we

742
00:34:54,250 --> 00:34:58,269
we just jettisoned all of that stuff

743
00:34:56,500 --> 00:35:01,358
those were experiments that I didn't

744
00:34:58,269 --> 00:35:02,769
pursue past the initial phase so that

745
00:35:01,358 --> 00:35:05,319
stuff can all go to it's gonna be really

746
00:35:02,769 --> 00:35:07,269
nice to like lock this down real

747
00:35:05,320 --> 00:35:08,769
actively soon when we're like ah now we

748
00:35:07,269 --> 00:35:09,670
have our lighting solution and we don't

749
00:35:08,769 --> 00:35:12,670
have to worry about any of this stuff

750
00:35:09,670 --> 00:35:14,349
anymore all right so those are our two

751
00:35:12,670 --> 00:35:16,539
lighting samplers and they're in slots 2

752
00:35:14,349 --> 00:35:17,940
&amp; 3 as they were supposed to be where we

753
00:35:16,539 --> 00:35:20,170
bound them right so they're right there

754
00:35:17,940 --> 00:35:22,630
and then all we need to do is actually

755
00:35:20,170 --> 00:35:24,250
to code those properly right so in here

756
00:35:22,630 --> 00:35:26,430
where we do our fetching here we get out

757
00:35:24,250 --> 00:35:32,980
the light indices we then need to fetch

758
00:35:26,429 --> 00:35:41,858
like a 2-0 light data one and those get

759
00:35:32,980 --> 00:35:43,420
fetched off of these samplers right and

760
00:35:41,858 --> 00:35:44,789
so then what we can do is say well we

761
00:35:43,420 --> 00:35:47,019
can now to code these based on the

762
00:35:44,789 --> 00:35:48,519
encoding that we said before the

763
00:35:47,019 --> 00:35:53,440
position value is going to be light

764
00:35:48,519 --> 00:35:55,599
dated zero RGB the light direction here

765
00:35:53,440 --> 00:36:00,070
which is this value that's going to be

766
00:35:55,599 --> 00:36:02,579
light data ones RGB oh sorry the light

767
00:36:00,070 --> 00:36:05,200
color it's gonna be light data ones RGB

768
00:36:02,579 --> 00:36:07,869
which is in here somewhere we don't need

769
00:36:05,199 --> 00:36:09,789
the max power multiplier anymore

770
00:36:07,869 --> 00:36:11,289
in fact because it's now a

771
00:36:09,789 --> 00:36:13,719
floating-point value so that just

772
00:36:11,289 --> 00:36:15,509
becomes the simple multiply and then we

773
00:36:13,719 --> 00:36:18,459
need to reconstruct the light d

774
00:36:15,510 --> 00:36:20,890
reconstructing the light D is going to

775
00:36:18,460 --> 00:36:22,960
involve a couple steps the first one is

776
00:36:20,889 --> 00:36:24,489
the XY value in fact I suppose we should

777
00:36:22,960 --> 00:36:25,659
say X Y Z I'm here to make it a little

778
00:36:24,489 --> 00:36:28,868
clearer that those are positions going

779
00:36:25,659 --> 00:36:31,480
through the XY reconstruction is gonna

780
00:36:28,869 --> 00:36:36,670
have to start I guess we could actually

781
00:36:31,480 --> 00:36:38,019
write it out this way now remember I

782
00:36:36,670 --> 00:36:41,980
only packed two of the valley

783
00:36:38,019 --> 00:36:44,320
two of the three values I need so the X

784
00:36:41,980 --> 00:36:47,650
Y Z so in the Alpha Channel of each of

785
00:36:44,320 --> 00:36:50,789
these right I packed the X in here and

786
00:36:47,650 --> 00:36:53,249
the Y in here the D value I don't have a

787
00:36:50,789 --> 00:36:56,369
z-value I don't have so the question is

788
00:36:53,248 --> 00:36:58,728
where am I going to get it what we're

789
00:36:56,369 --> 00:37:01,349
just going to do here is the very simple

790
00:36:58,728 --> 00:37:03,659
you know exactly what you would expect

791
00:37:01,349 --> 00:37:08,449
we're just going to go ahead and use

792
00:37:03,659 --> 00:37:08,449
exploit the fact that these are normals

793
00:37:20,889 --> 00:37:24,940
so we're gonna do some z-value

794
00:37:22,119 --> 00:37:29,139
reconstruction here what we know is we

795
00:37:24,940 --> 00:37:31,360
had an X a Y and a Z right and we only

796
00:37:29,139 --> 00:37:34,179
stored these two so we're looking for

797
00:37:31,360 --> 00:37:36,700
this right well what we know is that

798
00:37:34,179 --> 00:37:39,460
since this thing is a normal right since

799
00:37:36,699 --> 00:37:42,099
this is a normal we're talking about

800
00:37:39,460 --> 00:37:47,139
here we know the length of the normal is

801
00:37:42,099 --> 00:37:54,880
1 so we know that the length of X you

802
00:37:47,139 --> 00:37:56,230
know X the length of X Y Z equals 1 what

803
00:37:54,880 --> 00:37:57,579
that means is that if we take the

804
00:37:56,230 --> 00:38:01,750
Pythagorean theorem and say well the

805
00:37:57,579 --> 00:38:02,980
length of something you know he's the

806
00:38:01,750 --> 00:38:05,710
square root of x squared plus y squared

807
00:38:02,980 --> 00:38:08,519
plus Z squared right and we know that

808
00:38:05,710 --> 00:38:12,070
that equals 1 well we should be able to

809
00:38:08,519 --> 00:38:16,239
figure out some way of solving for this

810
00:38:12,070 --> 00:38:17,710
Z squared right so in our case what we

811
00:38:16,239 --> 00:38:19,149
can do is just say well it's pretty easy

812
00:38:17,710 --> 00:38:20,920
to square both sides of this thing

813
00:38:19,150 --> 00:38:22,780
because this side is 1 and has no

814
00:38:20,920 --> 00:38:24,430
variables on it right so that means x

815
00:38:22,780 --> 00:38:27,100
squared plus y squared plus Z squared

816
00:38:24,429 --> 00:38:28,809
has to equal 1 right because it doesn't

817
00:38:27,099 --> 00:38:30,429
matter whether it squared or not the

818
00:38:28,809 --> 00:38:31,840
square of 1 is 1 so that basically means

819
00:38:30,429 --> 00:38:34,029
it's just this without the square root

820
00:38:31,840 --> 00:38:36,309
equals 1 that makes it pretty trivial

821
00:38:34,030 --> 00:38:41,560
for us to go OK Z squared therefore must

822
00:38:36,309 --> 00:38:43,150
equal X minus this quantity right

823
00:38:41,559 --> 00:38:44,739
because this was the quantity on the

824
00:38:43,150 --> 00:38:47,889
other side if we subtract it here we

825
00:38:44,739 --> 00:38:50,669
just get this simple arithmetic right so

826
00:38:47,889 --> 00:38:53,619
the Z value must be the square root of x

827
00:38:50,670 --> 00:38:59,769
I'm sorry of the square root of 1 minus

828
00:38:53,619 --> 00:39:02,099
x squared plus y squared makes sense so

829
00:38:59,769 --> 00:39:05,340
that's just some really simple you know

830
00:39:02,099 --> 00:39:09,250
algebra whatever you want to call it

831
00:39:05,340 --> 00:39:11,710
maths and so what we can do here is say

832
00:39:09,250 --> 00:39:20,650
well alright we've we need to take the

833
00:39:11,710 --> 00:39:22,449
square root of 1 minus like DX times

834
00:39:20,650 --> 00:39:23,619
like we have a square function it

835
00:39:22,449 --> 00:39:28,500
doesn't matter I'll just do it manually

836
00:39:23,619 --> 00:39:28,500
plus light D Y times light

837
00:39:30,239 --> 00:39:37,389
right and now we know that you you look

838
00:39:35,559 --> 00:39:40,269
at this you can sort of say well alright

839
00:39:37,389 --> 00:39:42,518
is this is this dicey right because we

840
00:39:40,268 --> 00:39:44,709
could get a negative value here and the

841
00:39:42,518 --> 00:39:48,368
answer is like not unless something goes

842
00:39:44,710 --> 00:39:50,199
horribly wrong because we know that each

843
00:39:48,369 --> 00:39:52,239
of these values has to be less than one

844
00:39:50,199 --> 00:39:55,509
because a normal can't have any

845
00:39:52,239 --> 00:39:57,880
component greater than one right because

846
00:39:55,509 --> 00:40:01,539
the maximum you can have would just be 1

847
00:39:57,880 --> 00:40:03,338
0 0 or 0 1 0 or 0 0 1 because can only

848
00:40:01,539 --> 00:40:04,690
be one long so if there's a 1 in a

849
00:40:03,338 --> 00:40:06,578
channel nothing else can be equal to

850
00:40:04,690 --> 00:40:10,179
anything and there's certainly no where

851
00:40:06,579 --> 00:40:13,719
to get longer than 1 so something that's

852
00:40:10,179 --> 00:40:17,139
1 or less than 1 squared right plus

853
00:40:13,719 --> 00:40:22,179
something that's 1 or less than 1

854
00:40:17,139 --> 00:40:26,318
squared we we I guess why I say is we

855
00:40:22,179 --> 00:40:28,478
have to assume the property of the

856
00:40:26,318 --> 00:40:31,028
normal that it's length has to be less

857
00:40:28,478 --> 00:40:32,949
than 1 to mean that no matter what these

858
00:40:31,028 --> 00:40:34,719
values are set to be when we add them

859
00:40:32,949 --> 00:40:36,639
together the same will be true right

860
00:40:34,719 --> 00:40:39,789
because remember if x squared plus y

861
00:40:36,639 --> 00:40:42,489
squared plus Z squared has to equal 1

862
00:40:39,789 --> 00:40:45,069
then x squared plus y squared without

863
00:40:42,489 --> 00:40:47,440
adding Z squared couldn't be more than 1

864
00:40:45,068 --> 00:40:48,940
right because the square of a value is

865
00:40:47,440 --> 00:40:51,880
always positive and if we're adding that

866
00:40:48,940 --> 00:40:52,150
and still equaling 1 then if we take it

867
00:40:51,880 --> 00:40:55,119
away

868
00:40:52,150 --> 00:40:58,930
it can only be less right so we know

869
00:40:55,119 --> 00:41:01,298
this value has to itself be either 1 or

870
00:40:58,929 --> 00:41:03,159
less than 1 it can't be more than 1 so

871
00:41:01,298 --> 00:41:04,659
in theory this square root unless we had

872
00:41:03,159 --> 00:41:06,219
a really bad numerical precision thing

873
00:41:04,659 --> 00:41:07,659
happened where we I don't know did it

874
00:41:06,219 --> 00:41:08,829
really bad normalizing somehow had

875
00:41:07,659 --> 00:41:12,248
values that were greater than what I

876
00:41:08,829 --> 00:41:14,079
don't know I don't think it's likely we

877
00:41:12,248 --> 00:41:15,848
could never get anything other than 0

878
00:41:14,079 --> 00:41:19,660
here for example would be the lowest

879
00:41:15,849 --> 00:41:21,910
value we could ever get right which

880
00:41:19,659 --> 00:41:23,739
would be 1 minus 1 right and the square

881
00:41:21,909 --> 00:41:26,469
root of 0 of course is 0 and that's

882
00:41:23,739 --> 00:41:29,349
correct because if we had a 1 let's say

883
00:41:26,469 --> 00:41:30,969
X was 1 we get 1 times 1 and we know Y

884
00:41:29,349 --> 00:41:33,548
would be 0 in that case because all the

885
00:41:30,969 --> 00:41:36,940
values in X we get 1 times 1 plus 0

886
00:41:33,548 --> 00:41:40,298
times 0 right so it would be 1 minus 1

887
00:41:36,940 --> 00:41:41,858
and that would be 0 that would make Z

888
00:41:40,298 --> 00:41:42,559
equal to 0 it's exact what we want

889
00:41:41,858 --> 00:41:45,409
because X is

890
00:41:42,559 --> 00:41:49,299
Z has to be zero there's no more room to

891
00:41:45,409 --> 00:41:49,299
have the normal be anything else right

892
00:41:49,690 --> 00:41:53,659
so that's how we would reconstruct this

893
00:41:52,219 --> 00:41:57,379
and that gives us back all of the

894
00:41:53,659 --> 00:42:00,559
variables that we wanted we don't care

895
00:41:57,380 --> 00:42:02,930
about this at all does render setup

896
00:42:00,559 --> 00:42:09,769
still have a debug light P in it because

897
00:42:02,929 --> 00:42:21,829
if so it does go away cuz we don't need

898
00:42:09,769 --> 00:42:24,469
a debug light anymore all right so now

899
00:42:21,829 --> 00:42:25,009
we got a debug it which hopefully won't

900
00:42:24,469 --> 00:42:26,659
be too bad

901
00:42:25,010 --> 00:42:36,950
Swizzle mask element not present in

902
00:42:26,659 --> 00:42:56,079
operand mmm what what was wrong with my

903
00:42:36,949 --> 00:42:59,599
use of the dot a Swizzle oh yeah sorry

904
00:42:56,079 --> 00:43:01,360
those are from the v4 is not the VIII's

905
00:42:59,599 --> 00:43:05,049
my bad

906
00:43:01,360 --> 00:43:05,050
let's try that one more time

907
00:43:06,769 --> 00:43:15,440
there we go uh so that's kind of

908
00:43:11,119 --> 00:43:17,210
interesting we have now like just by

909
00:43:15,440 --> 00:43:19,059
Rhian coding those we must have had a

910
00:43:17,210 --> 00:43:21,639
bug in how we were encoding them before

911
00:43:19,059 --> 00:43:26,139
because now that we're encoding them

912
00:43:21,639 --> 00:43:30,139
directly we do get color washes now

913
00:43:26,139 --> 00:43:33,429
which is not what I was expecting so we

914
00:43:30,139 --> 00:43:35,750
must have accidentally fixed a bug

915
00:43:33,429 --> 00:43:37,219
unless we introduced a bug that's

916
00:43:35,750 --> 00:43:39,739
generating color washes but the color

917
00:43:37,219 --> 00:43:42,739
washes actually look somewhat correct

918
00:43:39,739 --> 00:43:44,000
here for the sample points that we gave

919
00:43:42,739 --> 00:43:47,329
which are not particularly good sample

920
00:43:44,000 --> 00:43:49,849
points right so that's a little bit

921
00:43:47,329 --> 00:43:51,319
weird but we must have fixed the bug our

922
00:43:49,849 --> 00:43:55,400
wave that we were coding light powers

923
00:43:51,320 --> 00:44:00,820
must have been wrong I'm guessing that's

924
00:43:55,400 --> 00:44:06,289
interesting okay well that's fine

925
00:44:00,820 --> 00:44:08,900
so anyway now that we've got that

926
00:44:06,289 --> 00:44:11,719
encoded what I want to do is what I set

927
00:44:08,900 --> 00:44:13,760
out to do originally but I'm kind of

928
00:44:11,719 --> 00:44:15,769
glad we did that because that puts us in

929
00:44:13,760 --> 00:44:23,000
a much better position Towe don't we

930
00:44:15,769 --> 00:44:24,559
where before what I'd like to do now is

931
00:44:23,000 --> 00:44:26,420
I'd like to go ahead and draw those

932
00:44:24,559 --> 00:44:39,110
sample points have a way of drawing out

933
00:44:26,420 --> 00:44:41,119
the sample points so what we want to do

934
00:44:39,110 --> 00:44:45,370
here again is we want to have ways in

935
00:44:41,119 --> 00:44:49,659
which we can intentionally not draw

936
00:44:45,369 --> 00:44:49,659
lighting for these particular samples

937
00:44:49,900 --> 00:44:55,910
and just output solid color values that

938
00:44:54,500 --> 00:44:58,250
get interpreted directly and remember we

939
00:44:55,909 --> 00:44:59,539
did the work last weekend to make it so

940
00:44:58,250 --> 00:45:01,280
that we could draw things that did not

941
00:44:59,539 --> 00:45:03,019
have lighting again that's why now

942
00:45:01,280 --> 00:45:07,610
remember before it was actually lighting

943
00:45:03,019 --> 00:45:09,559
our text remember that well now we've

944
00:45:07,610 --> 00:45:12,559
got a way to not do that right which is

945
00:45:09,559 --> 00:45:15,559
this and that's really good so I'm happy

946
00:45:12,559 --> 00:45:17,570
about that and we can now leverage that

947
00:45:15,559 --> 00:45:20,338
fact again when we do our debug drawing

948
00:45:17,570 --> 00:45:21,809
because that allows us to

949
00:45:20,338 --> 00:45:23,460
avoid the problem of having what we're

950
00:45:21,809 --> 00:45:25,109
what is trying to be debug display get

951
00:45:23,460 --> 00:45:27,179
them affected by the lighting

952
00:45:25,108 --> 00:45:28,528
computation which is literally what

953
00:45:27,179 --> 00:45:33,989
we're trying to debug so we really don't

954
00:45:28,528 --> 00:45:35,818
want that to be true right okay so now

955
00:45:33,989 --> 00:45:37,349
let's start to clean this code up so

956
00:45:35,818 --> 00:45:40,108
we've got two pieces of the code they're

957
00:45:37,349 --> 00:45:42,660
interacting to create this situation

958
00:45:40,108 --> 00:45:45,358
here so we've got our F key pressed

959
00:45:42,659 --> 00:45:47,129
stuff here so let's take a look at that

960
00:45:45,358 --> 00:45:52,170
sorry I'm a little stuffy today as I

961
00:45:47,130 --> 00:45:54,420
almost always am I went an allergy sort

962
00:45:52,170 --> 00:45:58,409
of person it's not great it's not

963
00:45:54,420 --> 00:46:00,719
pleasant so anyway what I want to do

964
00:45:58,409 --> 00:46:02,190
here is is go ahead and and figure out

965
00:46:00,719 --> 00:46:03,838
how exactly this stuff is gonna work

966
00:46:02,190 --> 00:46:06,298
we're running the lighting every time

967
00:46:03,838 --> 00:46:12,748
now so I think what we want to do is

968
00:46:06,298 --> 00:46:14,489
just sort of change some of these way

969
00:46:12,748 --> 00:46:16,738
these keys are working oh I didn't

970
00:46:14,489 --> 00:46:19,528
realize that the iteration count there

971
00:46:16,739 --> 00:46:28,499
could be beefed up I wonder what happens

972
00:46:19,528 --> 00:46:30,869
if I adjust that whoa that's weird so we

973
00:46:28,498 --> 00:46:35,639
have some weird bugs there oh no that

974
00:46:30,869 --> 00:46:37,858
just reduces it to zero you can see that

975
00:46:35,639 --> 00:46:39,989
we have like a power leakage problem

976
00:46:37,858 --> 00:46:41,098
which I think I know why that is because

977
00:46:39,989 --> 00:46:43,889
we're not being particularly careful

978
00:46:41,099 --> 00:46:47,309
with that but as we increase the

979
00:46:43,889 --> 00:46:50,518
iteration count everything gets brighter

980
00:46:47,309 --> 00:46:52,589
right which is not we don't really want

981
00:46:50,518 --> 00:46:54,449
that we want a solution that doesn't do

982
00:46:52,588 --> 00:46:55,858
stuff like that so this will be good as

983
00:46:54,449 --> 00:47:00,058
we debug this will get much better with

984
00:46:55,858 --> 00:47:02,298
lighting results so there's just a first

985
00:47:00,059 --> 00:47:02,298
bounce

986
00:47:03,059 --> 00:47:09,070
right you can see you don't get any

987
00:47:05,619 --> 00:47:10,569
secondary lighting here's the second

988
00:47:09,070 --> 00:47:12,039
pants and you can see you can see the

989
00:47:10,570 --> 00:47:12,900
blue lighting come in here right can you

990
00:47:12,039 --> 00:47:16,239
guys see that

991
00:47:12,900 --> 00:47:18,400
so no indirect lighting all the light is

992
00:47:16,239 --> 00:47:20,309
coming from a white light source now we

993
00:47:18,400 --> 00:47:23,500
get indirect lighting we get that blue

994
00:47:20,309 --> 00:47:25,210
and you can even see it here like so

995
00:47:23,500 --> 00:47:27,369
what happens is this and this is what's

996
00:47:25,210 --> 00:47:28,900
so cool about lighting right and it's

997
00:47:27,369 --> 00:47:30,789
why I'm really glad we're doing this cuz

998
00:47:28,900 --> 00:47:31,930
I don't I don't know I know there's some

999
00:47:30,789 --> 00:47:33,250
folks who just want to do game

1000
00:47:31,929 --> 00:47:34,509
programming stuff and they don't like

1001
00:47:33,250 --> 00:47:35,500
this are technical stuff but a fortune

1002
00:47:34,510 --> 00:47:36,940
that's not what this series is about

1003
00:47:35,500 --> 00:47:39,909
right this series is about technical

1004
00:47:36,940 --> 00:47:41,619
minutiae that's why I do it right I'm

1005
00:47:39,909 --> 00:47:45,159
not a game designer so I don't care

1006
00:47:41,619 --> 00:47:47,079
about game code in the slightest but I

1007
00:47:45,159 --> 00:47:49,269
love that right so we're gonna have as

1008
00:47:47,079 --> 00:47:50,409
we get this working really well you can

1009
00:47:49,269 --> 00:47:52,030
kind of see the kind of lighting

1010
00:47:50,409 --> 00:47:53,259
subtleties that this adds to the scene

1011
00:47:52,030 --> 00:47:55,480
that are just really kind of nice

1012
00:47:53,260 --> 00:47:57,490
so that first bounce gives you the blue

1013
00:47:55,480 --> 00:47:59,349
light here it also lights these services

1014
00:47:57,489 --> 00:48:00,669
that surface would get no light so if we

1015
00:47:59,349 --> 00:48:02,589
just did direct lighting the surface

1016
00:48:00,670 --> 00:48:03,970
gets no light now that we do it this

1017
00:48:02,590 --> 00:48:06,400
it's starting to get light from the

1018
00:48:03,969 --> 00:48:09,819
bounce off of these right and off of via

1019
00:48:06,400 --> 00:48:11,619
this and then now it's redistributing

1020
00:48:09,820 --> 00:48:14,410
its light to its nearby tiles and now

1021
00:48:11,619 --> 00:48:16,449
you get a red bounce light that's a

1022
00:48:14,409 --> 00:48:19,179
bounce off of a surface that couldn't

1023
00:48:16,449 --> 00:48:21,069
even have been seen itself on the first

1024
00:48:19,179 --> 00:48:23,289
one so you just add these really nice

1025
00:48:21,070 --> 00:48:26,830
lighting cues right and you can kind of

1026
00:48:23,289 --> 00:48:28,750
see as we get this going better it's

1027
00:48:26,829 --> 00:48:31,329
it's just really kind of cool I think

1028
00:48:28,750 --> 00:48:33,340
what this the character this will add to

1029
00:48:31,329 --> 00:48:35,289
the game so if you imagine us just kind

1030
00:48:33,340 --> 00:48:38,320
of getting this nicely tuned getting rid

1031
00:48:35,289 --> 00:48:40,029
of the flicker and and having those kind

1032
00:48:38,320 --> 00:48:42,370
of nice lighting effects in the game as

1033
00:48:40,030 --> 00:48:44,680
subtle lights as you move through the

1034
00:48:42,369 --> 00:48:47,949
environment as projectiles move to the

1035
00:48:44,679 --> 00:48:49,419
environment whatever I just think that

1036
00:48:47,949 --> 00:48:51,460
adds so much character to a scene and

1037
00:48:49,420 --> 00:48:53,740
just makes it feel so interesting and

1038
00:48:51,460 --> 00:48:55,119
reactive and you know I mean that's why

1039
00:48:53,739 --> 00:48:57,369
you're playing a game in the first place

1040
00:48:55,119 --> 00:49:00,099
right a lot of people don't appreciate

1041
00:48:57,369 --> 00:49:02,019
the degree to which audio visuals impact

1042
00:49:00,099 --> 00:49:04,029
your gameplay experience but they do you

1043
00:49:02,019 --> 00:49:05,530
could just go play a board game if you

1044
00:49:04,030 --> 00:49:08,230
didn't want audio visual feedback

1045
00:49:05,530 --> 00:49:10,890
immediate fast audio visual feedback the

1046
00:49:08,230 --> 00:49:12,969
whole point of playing a video game is

1047
00:49:10,889 --> 00:49:14,739
that you have this immediate

1048
00:49:12,969 --> 00:49:16,108
audio-visual feedback and that it's rich

1049
00:49:14,739 --> 00:49:18,149
and interesting

1050
00:49:16,108 --> 00:49:19,739
play a card game or a board game if you

1051
00:49:18,150 --> 00:49:21,088
don't want that right it it's

1052
00:49:19,739 --> 00:49:22,889
fundamentally not a video game

1053
00:49:21,088 --> 00:49:27,958
experience if you don't have this kind

1054
00:49:22,889 --> 00:49:35,219
of rich AV because that's what defines a

1055
00:49:27,958 --> 00:49:40,458
video game as compared to a a non video

1056
00:49:35,219 --> 00:49:42,389
game right so it is sometimes overlooked

1057
00:49:40,458 --> 00:49:46,259
everything works together in a video

1058
00:49:42,389 --> 00:49:47,879
game there isn't one important part the

1059
00:49:46,259 --> 00:49:51,208
gameplay is just as important as

1060
00:49:47,880 --> 00:49:53,278
everything else but it is not the it's

1061
00:49:51,208 --> 00:49:55,889
not uniquely important everything works

1062
00:49:53,278 --> 00:49:57,748
together to create the game experience

1063
00:49:55,889 --> 00:49:59,759
and if any one of those things is lousy

1064
00:49:57,748 --> 00:50:04,498
the game is worse than it should be

1065
00:49:59,759 --> 00:50:08,039
right everything should work together to

1066
00:50:04,498 --> 00:50:12,178
form the game experience okay so anyway

1067
00:50:08,039 --> 00:50:13,559
let's go ahead and and finish this up so

1068
00:50:12,179 --> 00:50:15,959
our submission looks like it's working

1069
00:50:13,559 --> 00:50:18,239
nicely here this is some stuff that we

1070
00:50:15,958 --> 00:50:19,649
can optimize more for example we will

1071
00:50:18,239 --> 00:50:21,389
probably just have this generated on the

1072
00:50:19,650 --> 00:50:23,509
GPU in the future so that's what we'll

1073
00:50:21,389 --> 00:50:26,129
you know be looking towards certainly

1074
00:50:23,509 --> 00:50:29,938
this output lighting call now we kind of

1075
00:50:26,130 --> 00:50:32,640
need to make this stuff make a little

1076
00:50:29,938 --> 00:50:34,078
more sense here so output lighting and

1077
00:50:32,639 --> 00:50:35,639
output lighting textures and all this

1078
00:50:34,079 --> 00:50:38,729
stuff we need to kind of clean up the

1079
00:50:35,639 --> 00:50:47,038
way this is working so output letting

1080
00:50:38,728 --> 00:50:48,688
textures so you can see right here how

1081
00:50:47,039 --> 00:50:53,929
this is going this is happening every

1082
00:50:48,688 --> 00:50:59,879
frame oops

1083
00:50:53,929 --> 00:51:02,910
whether you push f1 or not and so this

1084
00:50:59,880 --> 00:51:05,789
is doing the recomputation of that and

1085
00:51:02,909 --> 00:51:07,889
it's doing that output every every frame

1086
00:51:05,789 --> 00:51:09,449
we could do it only once in a while with

1087
00:51:07,889 --> 00:51:11,098
the f1 key if we wanted to in fact I

1088
00:51:09,449 --> 00:51:13,608
guess I'll leave you know I'll leave

1089
00:51:11,099 --> 00:51:13,609
that in there

1090
00:51:15,619 --> 00:51:19,519
just in case we do want to do that but

1091
00:51:17,599 --> 00:51:21,200
so this is happening every frame and so

1092
00:51:19,518 --> 00:51:24,018
the part that we want to determine a

1093
00:51:21,199 --> 00:51:27,288
little bit earlier here right is what

1094
00:51:24,018 --> 00:51:30,768
actually is getting output every time

1095
00:51:27,289 --> 00:51:32,719
and we don't really need to do it the

1096
00:51:30,768 --> 00:51:35,149
way we were doing it here that that

1097
00:51:32,719 --> 00:51:37,999
doesn't need to be an if-else kind of a

1098
00:51:35,150 --> 00:51:40,369
thing right we can continue doing the

1099
00:51:37,998 --> 00:51:41,689
simulation potentially because it

1100
00:51:40,369 --> 00:51:45,200
doesn't really matter if that's going on

1101
00:51:41,690 --> 00:51:46,579
behind the scenes I suppose I'm not sure

1102
00:51:45,199 --> 00:51:51,439
maybe that's the wrong way to think

1103
00:51:46,579 --> 00:51:55,849
about it but either way if we decide to

1104
00:51:51,440 --> 00:51:58,429
do a if we decide to switch to show

1105
00:51:55,849 --> 00:52:01,548
lighting here then really all that has

1106
00:51:58,429 --> 00:52:09,169
to happen is that keyboard has to be

1107
00:52:01,548 --> 00:52:11,288
here to toggle right so if you hit the

1108
00:52:09,170 --> 00:52:16,210
f1 key we have to switch between

1109
00:52:11,289 --> 00:52:19,519
outputting the lighting directly and

1110
00:52:16,210 --> 00:52:21,639
doing the push lighting here right so

1111
00:52:19,518 --> 00:52:24,409
what we want to do is we want probably

1112
00:52:21,639 --> 00:52:26,088
at we probably want this to be a little

1113
00:52:24,409 --> 00:52:31,728
bit more sensible let's go ahead and

1114
00:52:26,088 --> 00:52:33,469
grab this here so we want this output

1115
00:52:31,728 --> 00:52:36,968
lighting to be like output lighting

1116
00:52:33,469 --> 00:52:39,139
sample or output letting points probably

1117
00:52:36,969 --> 00:52:41,298
and then in the future we'll probably

1118
00:52:39,139 --> 00:52:45,348
want output letting occluders to also be

1119
00:52:41,298 --> 00:52:53,239
in there so we can debug inspect either

1120
00:52:45,349 --> 00:52:55,400
of them right so let's go ahead and

1121
00:52:53,239 --> 00:53:00,829
actually just make sure that it works

1122
00:52:55,400 --> 00:53:02,329
without this first and so now we should

1123
00:53:00,829 --> 00:53:03,950
be able to do right is we should be able

1124
00:53:02,329 --> 00:53:05,420
to toggle between those two modes at any

1125
00:53:03,949 --> 00:53:08,088
time so we're you know we're looking at

1126
00:53:05,420 --> 00:53:10,249
the lighting solution here we hit f1 we

1127
00:53:08,088 --> 00:53:13,998
look at the debug we hit f1 we're back I

1128
00:53:10,248 --> 00:53:17,478
don't know why it flashes once there

1129
00:53:13,998 --> 00:53:19,159
probably because nothing's been

1130
00:53:17,478 --> 00:53:20,838
downloaded yet to that I'm not sure

1131
00:53:19,159 --> 00:53:26,509
let's go look and see if that makes

1132
00:53:20,838 --> 00:53:28,308
sense or not but that sets us up to

1133
00:53:26,509 --> 00:53:29,599
actually put in something that displays

1134
00:53:28,309 --> 00:53:31,340
there's lighting points there

1135
00:53:29,599 --> 00:53:33,199
and so what I'm gonna do here is just

1136
00:53:31,340 --> 00:53:34,519
going to loop over those letting points

1137
00:53:33,199 --> 00:53:36,679
so you know exactly the way we were

1138
00:53:34,519 --> 00:53:38,840
doing it here where we output them right

1139
00:53:36,679 --> 00:53:41,029
what we're gonna do is we're gonna do

1140
00:53:38,840 --> 00:53:44,720
something very similar but instead we're

1141
00:53:41,030 --> 00:53:56,900
going to just you know do output draws

1142
00:53:44,719 --> 00:53:59,449
on them right okay so the first thing we

1143
00:53:56,900 --> 00:54:01,550
want to do here is turn off the the

1144
00:53:59,449 --> 00:54:03,169
secondary lighting of that and I think

1145
00:54:01,550 --> 00:54:05,660
that happens automatically right so you

1146
00:54:03,170 --> 00:54:08,180
can see if show lighting if we're not in

1147
00:54:05,659 --> 00:54:09,619
show lighting mode then letting gets

1148
00:54:08,179 --> 00:54:13,460
enabled but if we aren't relating mode

1149
00:54:09,619 --> 00:54:14,509
then we won't be right and so I think we

1150
00:54:13,460 --> 00:54:17,599
could even move that down because

1151
00:54:14,510 --> 00:54:20,330
nothing gets drawn up here

1152
00:54:17,599 --> 00:54:22,250
I don't think pretty sure so that that

1153
00:54:20,329 --> 00:54:28,750
could if it wanted to kind of stay up

1154
00:54:22,250 --> 00:54:33,070
here could be moved down I could do that

1155
00:54:28,750 --> 00:54:35,150
so it'll enable lighting in this case

1156
00:54:33,070 --> 00:54:39,740
but it will enable lighting in the other

1157
00:54:35,150 --> 00:54:41,510
case so I think that's all good and then

1158
00:54:39,739 --> 00:54:48,589
all we have to do in here is we have to

1159
00:54:41,510 --> 00:54:50,930
actually we have to actually output this

1160
00:54:48,590 --> 00:54:55,430
for real so we know that we want to

1161
00:54:50,929 --> 00:54:58,429
output point count number of quads right

1162
00:54:55,429 --> 00:55:00,559
that's what we want to output and then

1163
00:54:58,429 --> 00:55:03,379
we want to effectively do what we were

1164
00:55:00,559 --> 00:55:05,960
doing here but we want to do it based on

1165
00:55:03,380 --> 00:55:09,800
the data we have now not the data that

1166
00:55:05,960 --> 00:55:11,360
we used to be outputting right so we

1167
00:55:09,800 --> 00:55:16,820
need to figure out how to we're going to

1168
00:55:11,360 --> 00:55:21,530
do that we can delete this code here and

1169
00:55:16,820 --> 00:55:26,900
we can also make the bitmap call up

1170
00:55:21,530 --> 00:55:28,580
there and out okay so we just need to

1171
00:55:26,900 --> 00:55:32,030
make sure that this stuff all makes some

1172
00:55:28,579 --> 00:55:33,739
sense we've got this UV stuff that that

1173
00:55:32,030 --> 00:55:35,090
again is gonna be ignore because there's

1174
00:55:33,739 --> 00:55:37,069
no texture on these so we're just

1175
00:55:35,090 --> 00:55:39,079
setting it to nothing so all we have to

1176
00:55:37,070 --> 00:55:40,519
worry about is drawing the P values and

1177
00:55:39,079 --> 00:55:43,098
the C values those are the two things

1178
00:55:40,519 --> 00:55:44,268
that we need to output

1179
00:55:43,099 --> 00:55:47,509
and we need to figure out good ways to

1180
00:55:44,268 --> 00:55:49,358
output those okay so the p-value is

1181
00:55:47,509 --> 00:55:52,099
pretty easy we already know what that is

1182
00:55:49,358 --> 00:55:56,808
the C value is is perhaps a little bit

1183
00:55:52,099 --> 00:55:59,180
harder right now like you can see what

1184
00:55:56,809 --> 00:56:00,589
happens here we could just take exactly

1185
00:55:59,179 --> 00:56:03,259
what we were taking before where we have

1186
00:56:00,588 --> 00:56:04,460
this p value we don't have element

1187
00:56:03,259 --> 00:56:05,719
widths or Heights anymore because

1188
00:56:04,460 --> 00:56:07,608
remember these are lighting sample

1189
00:56:05,719 --> 00:56:10,009
points they know they're not occluder so

1190
00:56:07,608 --> 00:56:13,548
they're just out locus so this width and

1191
00:56:10,009 --> 00:56:16,998
height we can just call these element

1192
00:56:13,548 --> 00:56:18,829
with an element height basically and the

1193
00:56:16,998 --> 00:56:20,509
X and Y axis are going to have to be

1194
00:56:18,829 --> 00:56:22,849
generated in in asked in a different way

1195
00:56:20,509 --> 00:56:24,318
as well so this is this is a little bit

1196
00:56:22,849 --> 00:56:28,338
of work here it's not much it won't be

1197
00:56:24,318 --> 00:56:29,690
hard but it's just a little bit work so

1198
00:56:28,338 --> 00:56:31,639
what we want to do is pick an element

1199
00:56:29,690 --> 00:56:33,739
with and we want that element with to

1200
00:56:31,639 --> 00:56:37,278
probably be pretty tiny right

1201
00:56:33,739 --> 00:56:39,528
we just want little tiny like little

1202
00:56:37,278 --> 00:56:41,509
tiny squares that just are at the sample

1203
00:56:39,528 --> 00:56:43,460
points so we can see them all we don't

1204
00:56:41,509 --> 00:56:44,690
want these like big surface anymore

1205
00:56:43,460 --> 00:56:46,489
because they're not these are not the

1206
00:56:44,690 --> 00:56:49,068
occluders these are not things that are

1207
00:56:46,489 --> 00:56:51,380
getting that are going to intercept rays

1208
00:56:49,068 --> 00:56:56,119
that are doing samples these are sample

1209
00:56:51,380 --> 00:56:58,068
points they are individual like light

1210
00:56:56,119 --> 00:56:59,420
collecting locations that we've

1211
00:56:58,068 --> 00:57:01,248
scattered out and that we will use to

1212
00:56:59,420 --> 00:57:04,430
interpolate so we just want to see

1213
00:57:01,248 --> 00:57:06,108
little markers so we can look at the

1214
00:57:04,429 --> 00:57:09,889
lighting of the scene as we go through

1215
00:57:06,108 --> 00:57:11,598
right so what I want to do is is just

1216
00:57:09,889 --> 00:57:13,248
keep those free tiny will tune those as

1217
00:57:11,599 --> 00:57:14,749
we see it maybe we want it to be a

1218
00:57:13,248 --> 00:57:17,298
little bigger than that maybe we don't I

1219
00:57:14,748 --> 00:57:19,218
don't know don't ask me why that

1220
00:57:17,298 --> 00:57:21,079
negative 0.3 was in the area of know

1221
00:57:19,219 --> 00:57:23,690
it's probably historical reasons that

1222
00:57:21,079 --> 00:57:25,880
have long been forgotten so what we want

1223
00:57:23,690 --> 00:57:28,639
to do here is is generate in X and y

1224
00:57:25,880 --> 00:57:30,380
axis and the question is how do we want

1225
00:57:28,639 --> 00:57:31,728
to generate that X and y axis well we

1226
00:57:30,380 --> 00:57:34,369
can just use I think the original

1227
00:57:31,728 --> 00:57:37,629
normals that we had in here I seem to

1228
00:57:34,369 --> 00:57:39,890
recall us storing that information and

1229
00:57:37,630 --> 00:57:41,960
yeah there they are they're duplicated

1230
00:57:39,889 --> 00:57:43,578
out from the lighting surface so what I

1231
00:57:41,960 --> 00:57:46,369
can do here is I can say that we have a

1232
00:57:43,579 --> 00:57:49,130
normal and then what we can do is we can

1233
00:57:46,369 --> 00:57:50,390
generate an X and y axis from that

1234
00:57:49,130 --> 00:57:52,160
normal the other thing we could do is

1235
00:57:50,389 --> 00:57:53,358
look up the surface index in fact that

1236
00:57:52,159 --> 00:57:55,940
might be smarter because that actually

1237
00:57:53,358 --> 00:57:57,049
has the x and y axis in it so that

1238
00:57:55,940 --> 00:57:58,909
they'll be aligned to the sir

1239
00:57:57,050 --> 00:58:01,460
just that they were on that sounds like

1240
00:57:58,909 --> 00:58:05,239
a better idea to me so hey if it sounds

1241
00:58:01,460 --> 00:58:12,740
like a better idea to me let's do it

1242
00:58:05,239 --> 00:58:14,779
so solution surfaces I guess we got a we

1243
00:58:12,739 --> 00:58:17,659
probably want to grab these actually out

1244
00:58:14,780 --> 00:58:21,890
as bullying in Syria so let's let's do

1245
00:58:17,659 --> 00:58:22,279
that so we can access multiple things

1246
00:58:21,889 --> 00:58:28,539
awesome

1247
00:58:22,280 --> 00:58:31,580
oops so there we go

1248
00:58:28,539 --> 00:58:34,690
grab the point out and then we need to

1249
00:58:31,579 --> 00:58:40,730
grab the surface lighting surface

1250
00:58:34,690 --> 00:58:46,460
surface will solution surfaces plus the

1251
00:58:40,730 --> 00:58:47,929
surface index so so for now we'll just

1252
00:58:46,460 --> 00:58:49,460
grab that out the future maybe we won't

1253
00:58:47,929 --> 00:58:52,159
have ax this in which case we'll have to

1254
00:58:49,460 --> 00:58:54,800
change and generate them from the normal

1255
00:58:52,159 --> 00:58:57,259
which we can do it's not hard but there

1256
00:58:54,800 --> 00:59:00,470
we go so we get the x-axis the y-axis

1257
00:58:57,260 --> 00:59:03,050
out of the surface we don't need the

1258
00:59:00,469 --> 00:59:04,339
normal we do have the emission color and

1259
00:59:03,050 --> 00:59:05,690
abstraction alight here we don't

1260
00:59:04,340 --> 00:59:08,450
actually we're not going to be actually

1261
00:59:05,690 --> 00:59:09,470
using that average Direction annoyed for

1262
00:59:08,449 --> 00:59:10,750
anything here because we don't have a

1263
00:59:09,469 --> 00:59:13,909
way to really output that at the moment

1264
00:59:10,750 --> 00:59:15,920
it would be nice if we did so I'm gonna

1265
00:59:13,909 --> 00:59:19,789
put it to do here Casey

1266
00:59:15,920 --> 00:59:25,970
draw a quad that extends in this

1267
00:59:19,789 --> 00:59:30,079
direction maybe we've got a line segment

1268
00:59:25,969 --> 00:59:32,539
call we should probably use it so that

1269
00:59:30,079 --> 00:59:35,599
you know let's look at that in a second

1270
00:59:32,539 --> 00:59:39,440
get this working first so we've got the

1271
00:59:35,599 --> 00:59:43,130
the color value here this stuff we're

1272
00:59:39,440 --> 00:59:44,659
not touching so we've got the front

1273
00:59:43,130 --> 00:59:47,599
emitter that's like a clamp version of

1274
00:59:44,659 --> 00:59:49,609
these so we need to do that again and we

1275
00:59:47,599 --> 00:59:51,139
don't have a way of rendering any really

1276
00:59:49,610 --> 00:59:52,490
bright stuff so we're just gonna have to

1277
00:59:51,139 --> 00:59:55,699
do the standard clamp here we could

1278
00:59:52,489 --> 00:59:57,229
scale the values down if we want to but

1279
00:59:55,699 --> 01:00:01,009
you know we'll have to see what happens

1280
00:59:57,230 --> 01:00:05,510
there so then we got to do these encodes

1281
01:00:01,010 --> 01:00:10,670
here the C 0 C 1 C 2 C 3 stuff that

1282
01:00:05,510 --> 01:00:15,710
stuff looks like it can all stay the

1283
01:00:10,670 --> 01:00:21,050
same to me we don't have a transparency

1284
01:00:15,710 --> 01:00:27,079
value anymore so I think this can

1285
01:00:21,050 --> 01:00:28,130
literally just be this right that all

1286
01:00:27,079 --> 01:00:31,750
looks pretty good

1287
01:00:28,130 --> 01:00:34,010
so the emit see here I'll just grab that

1288
01:00:31,750 --> 01:00:36,320
the way we were grabbing it there's the

1289
01:00:34,010 --> 01:00:38,810
emit see we do in the clamps and put it

1290
01:00:36,320 --> 01:00:40,690
into the v4 then we pack it down and

1291
01:00:38,809 --> 01:00:45,799
send it into the standard quad pipeline

1292
01:00:40,690 --> 01:00:50,320
nothing out of the ordinary there and so

1293
01:00:45,800 --> 01:00:51,730
I think that is most of it

1294
01:00:50,320 --> 01:00:54,338
[Music]

1295
01:00:51,730 --> 01:00:59,338
yeah I really don't see anything else we

1296
01:00:54,338 --> 01:00:59,338
need to do there so that should generate

1297
01:00:59,789 --> 01:01:04,390
sort of a sea of points for us of course

1298
01:01:02,798 --> 01:01:06,400
we may have made some mistakes in there

1299
01:01:04,389 --> 01:01:09,608
but here's what we're you know normally

1300
01:01:06,400 --> 01:01:11,200
rendering here's our sea of points right

1301
01:01:09,608 --> 01:01:13,750
you can see where our lighting samples

1302
01:01:11,199 --> 01:01:16,358
are and I feel like there may be a

1303
01:01:13,750 --> 01:01:20,139
little too small so I went a little bit

1304
01:01:16,358 --> 01:01:22,869
overboard there let's go ahead and beef

1305
01:01:20,139 --> 01:01:26,650
them up a little see if that helps

1306
01:01:22,869 --> 01:01:28,710
that's pretty good right so here you can

1307
01:01:26,650 --> 01:01:33,068
see all of our lighting sample points

1308
01:01:28,710 --> 01:01:34,780
and we turn off the simulation we're in

1309
01:01:33,068 --> 01:01:38,739
this mode I don't love that so I think

1310
01:01:34,780 --> 01:01:43,000
maybe what we'll do is not do that

1311
01:01:38,739 --> 01:01:53,500
and we'll let this fall through so the

1312
01:01:43,000 --> 01:01:56,619
problem here well hmm so the problem

1313
01:01:53,500 --> 01:01:59,409
here is this wants to render in line I

1314
01:01:56,619 --> 01:02:04,298
don't know if we can make a trash render

1315
01:01:59,409 --> 01:02:12,358
group for this stuff let's see here how

1316
01:02:04,298 --> 01:02:15,788
does that work so yeah I mean normally

1317
01:02:12,358 --> 01:02:25,230
normally we do have the ability to do a

1318
01:02:15,789 --> 01:02:28,750
non sim step right because this is it so

1319
01:02:25,230 --> 01:02:33,010
you know we should be able to do this

1320
01:02:28,750 --> 01:02:38,639
begins him either way because no

1321
01:02:33,010 --> 01:02:38,640
rendering has happened yet so this stuff

1322
01:02:39,659 --> 01:02:43,288
really could be

1323
01:02:45,480 --> 01:02:50,400
you know where that happens essentially

1324
01:02:50,699 --> 01:02:55,719
so what we could do here is say look

1325
01:02:53,380 --> 01:02:59,289
this is not what we actually want to do

1326
01:02:55,719 --> 01:03:03,549
right we're gonna leave this stuff out

1327
01:02:59,289 --> 01:03:04,869
doing it's doing its thing right and

1328
01:03:03,550 --> 01:03:09,310
what I'm going to do is going to put

1329
01:03:04,869 --> 01:03:17,259
this inside of here so once we actually

1330
01:03:09,309 --> 01:03:19,029
do do the do this part of it we'll

1331
01:03:17,260 --> 01:03:23,890
switch between which kind of sim we're

1332
01:03:19,030 --> 01:03:25,990
doing right so if we take a look here at

1333
01:03:23,889 --> 01:03:29,139
who needs the render group it's really

1334
01:03:25,989 --> 01:03:31,750
just here and here and the particles are

1335
01:03:29,139 --> 01:03:33,839
disabled at the moment so we should be

1336
01:03:31,750 --> 01:03:45,550
able to do something where we do like

1337
01:03:33,840 --> 01:03:47,860
that I think can the render group be

1338
01:03:45,550 --> 01:03:52,210
passed as a zero here probably guessing

1339
01:03:47,860 --> 01:03:57,420
it can be because otherwise how would we

1340
01:03:52,210 --> 01:03:59,829
do it right yeah these are all optional

1341
01:03:57,420 --> 01:04:01,869
so we can pass the zero render group

1342
01:03:59,829 --> 01:04:04,480
there which is all we would really have

1343
01:04:01,869 --> 01:04:07,179
to do so you know what I could do

1344
01:04:04,480 --> 01:04:12,730
actually I can do this really

1345
01:04:07,179 --> 01:04:15,089
straightforward I think I think we can

1346
01:04:12,730 --> 01:04:15,090
just you

1347
01:04:22,500 --> 01:04:39,159
something like this so didn't want to do

1348
01:04:36,159 --> 01:04:47,019
that I hit the P key instead of the hit

1349
01:04:39,159 --> 01:04:49,348
the wrong key so what I can do here just

1350
01:04:47,019 --> 01:04:49,349
say all right

1351
01:05:06,050 --> 01:05:11,180
I think that gives me what I want so

1352
01:05:10,099 --> 01:05:12,619
what I can do is make a temporary

1353
01:05:11,179 --> 01:05:16,419
variable here called use render group

1354
01:05:12,619 --> 01:05:19,210
which I can set to 0 if I want to right

1355
01:05:16,420 --> 01:05:22,430
so basically what I'll do is if we are

1356
01:05:19,210 --> 01:05:24,199
going to output the lighting points then

1357
01:05:22,429 --> 01:05:27,710
I'll just set use render group to 0 so

1358
01:05:24,199 --> 01:05:29,809
all this stuff when it goes through will

1359
01:05:27,710 --> 01:05:34,480
not actually effect it won't actually

1360
01:05:29,809 --> 01:05:37,960
affect the render group at all right I

1361
01:05:34,480 --> 01:05:37,960
think that'll work

1362
01:05:48,960 --> 01:06:06,789
except that that should be their regular

1363
01:05:52,358 --> 01:06:12,639
render well that didn't do what I had

1364
01:06:06,789 --> 01:06:18,089
hoped and I guess I can see why so the

1365
01:06:12,639 --> 01:06:18,088
problem is the lighting will get updated

1366
01:06:22,108 --> 01:06:30,389
yeah I see what the problem is

1367
01:06:27,130 --> 01:06:32,980
so what I really have to do is erase

1368
01:06:30,389 --> 01:06:35,969
what's been pushed so far which which

1369
01:06:32,980 --> 01:06:39,490
really isn't gonna work

1370
01:06:35,969 --> 01:06:42,518
so I guess we really can't avoid having

1371
01:06:39,489 --> 01:06:50,739
it just be stationary which is

1372
01:06:42,518 --> 01:06:52,868
unfortunate we would have to do things

1373
01:06:50,739 --> 01:06:54,639
further down the pipeline because by the

1374
01:06:52,869 --> 01:06:56,740
time it gets to the lighting test here

1375
01:06:54,639 --> 01:06:59,048
when it recomputes the lighting test it

1376
01:06:56,739 --> 01:07:07,358
will have only had the point geometry

1377
01:06:59,048 --> 01:07:09,338
which is not what it needs yeah so

1378
01:07:07,358 --> 01:07:15,489
there's no real way to cleanly do that

1379
01:07:09,338 --> 01:07:16,808
at the moment unfortunately so that's

1380
01:07:15,489 --> 01:07:22,709
pretty much the way it's gonna have to

1381
01:07:16,809 --> 01:07:22,710
stay at the moment which is too bad

1382
01:07:29,440 --> 01:07:35,450
not the end of the world that's not what

1383
01:07:31,699 --> 01:07:37,129
I would have preferred all right so here

1384
01:07:35,449 --> 01:07:38,598
we can see all those samples I'm still

1385
01:07:37,130 --> 01:07:41,470
going to say maybe even just a little

1386
01:07:38,599 --> 01:07:41,470
bit bigger on those samples

1387
01:07:51,920 --> 01:07:58,519
so here we can see all of the lighting

1388
01:07:54,920 --> 01:08:03,769
sample points that we sent down and we

1389
01:07:58,519 --> 01:08:11,570
can kind of see where that light is

1390
01:08:03,769 --> 01:08:16,850
getting spread through right and so if I

1391
01:08:11,570 --> 01:08:20,500
go through and I take a look at the

1392
01:08:16,850 --> 01:08:20,500
bounces so here's the first one

1393
01:08:20,560 --> 01:08:28,609
here's the second one you can see

1394
01:08:26,140 --> 01:08:31,100
everywhere it ended up spreading out too

1395
01:08:28,609 --> 01:08:39,530
and I'll be honest that doesn't look

1396
01:08:31,100 --> 01:08:42,590
super correct to me you know I I it's

1397
01:08:39,529 --> 01:08:45,050
possible that none of the random rays

1398
01:08:42,590 --> 01:08:47,630
that were sent out from say this surface

1399
01:08:45,050 --> 01:08:50,779
up here it's possible that none of them

1400
01:08:47,630 --> 01:08:53,569
hit these closer to these they only hit

1401
01:08:50,779 --> 01:08:57,920
closer to the bottom it just doesn't

1402
01:08:53,569 --> 01:08:59,659
seem likely you know and maybe we have

1403
01:08:57,920 --> 01:09:03,109
to draw the Rays themselves to really

1404
01:08:59,659 --> 01:09:08,599
know but it just doesn't seem likely so

1405
01:09:03,109 --> 01:09:12,829
that seems a bit odd just so we're on

1406
01:09:08,600 --> 01:09:16,820
the same page there right so one bounce

1407
01:09:12,829 --> 01:09:19,640
two bounces now and even now it's still

1408
01:09:16,819 --> 01:09:24,679
not still hasn't hit nothing has hit

1409
01:09:19,640 --> 01:09:26,720
those so it honestly it looks kind of

1410
01:09:24,680 --> 01:09:29,539
like it only ever adds to I think maybe

1411
01:09:26,720 --> 01:09:31,039
our pick the way we're picking which

1412
01:09:29,539 --> 01:09:34,010
point to add to when we hit the surface

1413
01:09:31,039 --> 01:09:36,729
may be buggy that's what I'm thinking

1414
01:09:34,010 --> 01:09:36,730
just in my head right now

1415
01:09:38,920 --> 01:09:43,100
yeah I mean I think that's oh I think

1416
01:09:41,630 --> 01:09:44,239
that's almost certainly the case so I

1417
01:09:43,100 --> 01:09:46,670
want to go look at that right now

1418
01:09:44,239 --> 01:09:49,579
because even before we get any further

1419
01:09:46,670 --> 01:09:51,890
into this letting debugging and

1420
01:09:49,579 --> 01:09:57,350
refinement I feel like this part of our

1421
01:09:51,890 --> 01:10:01,760
code is busted at the moment so I'm not

1422
01:09:57,350 --> 01:10:03,770
sure why but it definitely looks that

1423
01:10:01,760 --> 01:10:08,920
way it looks a lot

1424
01:10:03,770 --> 01:10:14,060
like this picking process is not working

1425
01:10:08,920 --> 01:10:18,440
for whatever reason so you can see

1426
01:10:14,060 --> 01:10:21,500
what's going on here we do a test to see

1427
01:10:18,439 --> 01:10:26,089
if the raycast that we did hit a surface

1428
01:10:21,500 --> 01:10:29,270
when we find the surface that it hit we

1429
01:10:26,090 --> 01:10:33,170
loop so the surface point index thing

1430
01:10:29,270 --> 01:10:36,830
here we loop over however many lights

1431
01:10:33,170 --> 01:10:39,520
that surface supposedly had on it we

1432
01:10:36,829 --> 01:10:42,680
grab the point index of each of those

1433
01:10:39,520 --> 01:10:44,690
right by starting at the light index

1434
01:10:42,680 --> 01:10:48,020
that that service starts at and adding

1435
01:10:44,689 --> 01:10:50,899
you know 0 1 2 3 up to however many it's

1436
01:10:48,020 --> 01:10:53,600
supposed to have and we have initialized

1437
01:10:50,899 --> 01:10:55,429
the closest distance squared to f/32 max

1438
01:10:53,600 --> 01:10:57,230
so it's you know it will always be

1439
01:10:55,430 --> 01:10:57,560
higher than anything you could throw at

1440
01:10:57,229 --> 01:11:04,129
it

1441
01:10:57,560 --> 01:11:06,740
anything other value um oh I see exactly

1442
01:11:04,130 --> 01:11:09,949
the problem here don't know no I don't

1443
01:11:06,739 --> 01:11:11,719
know I take it back no no so then we we

1444
01:11:09,949 --> 01:11:14,059
do this light index + or any extra dump

1445
01:11:11,720 --> 01:11:16,070
that we do lighting point star hit point

1446
01:11:14,060 --> 01:11:18,160
equal solution points plus point index

1447
01:11:16,069 --> 01:11:23,149
so that should dereference that

1448
01:11:18,159 --> 01:11:28,250
particular point right we then take the

1449
01:11:23,149 --> 01:11:30,409
distance between the Rays location which

1450
01:11:28,250 --> 01:11:31,729
you know maybe we should verify we

1451
01:11:30,409 --> 01:11:34,000
actually are getting that that could be

1452
01:11:31,729 --> 01:11:37,119
wrong maybe that's computed improperly

1453
01:11:34,000 --> 01:11:41,289
would be one way this could be failing

1454
01:11:37,119 --> 01:11:45,079
the raised position - the the hit point

1455
01:11:41,289 --> 01:11:50,720
position and we see which one of those

1456
01:11:45,079 --> 01:11:54,289
is least I we then record the point

1457
01:11:50,720 --> 01:11:55,850
index that that was as the closest point

1458
01:11:54,289 --> 01:12:01,069
index and we record the closest distance

1459
01:11:55,850 --> 01:12:05,090
squared as its distance now that looks

1460
01:12:01,069 --> 01:12:09,130
pretty straightforward to me assuming

1461
01:12:05,090 --> 01:12:09,130
accumulate sample works properly does it

1462
01:12:09,829 --> 01:12:15,800
it looks like it so I guess what I would

1463
01:12:12,770 --> 01:12:17,420
say is also we replicated the surface

1464
01:12:15,800 --> 01:12:26,630
end didn't we so we don't actually need

1465
01:12:17,420 --> 01:12:32,630
service in here because that could just

1466
01:12:26,630 --> 01:12:35,539
come from the point now yeah um so what

1467
01:12:32,630 --> 01:12:41,000
I'm wondering is yeah did we some how is

1468
01:12:35,539 --> 01:12:50,149
this not the real you know what I think

1469
01:12:41,000 --> 01:12:55,939
I think this wood is the so this is the

1470
01:12:50,149 --> 01:13:04,250
relative origin I think we don't want

1471
01:12:55,939 --> 01:13:11,929
that right so we never actually did

1472
01:13:04,250 --> 01:13:13,010
compute that value so I think that's

1473
01:13:11,930 --> 01:13:18,409
what's happening I think this is Ray

1474
01:13:13,010 --> 01:13:26,239
Origin plus T ray x ray D I think is

1475
01:13:18,409 --> 01:13:28,550
what we actually need here and to be

1476
01:13:26,239 --> 01:13:30,500
fair since relative origin is just the

1477
01:13:28,550 --> 01:13:32,720
Ray origin minus the source P what we

1478
01:13:30,500 --> 01:13:37,699
could do too is just re reconstruct it

1479
01:13:32,720 --> 01:13:40,550
right it beer AP and we just need to add

1480
01:13:37,699 --> 01:13:42,619
the source P back in right so this this

1481
01:13:40,550 --> 01:13:44,390
value is missing from that computation

1482
01:13:42,619 --> 01:13:47,840
right because it's been subtracted out

1483
01:13:44,390 --> 01:13:51,320
here so it just needs to get added back

1484
01:13:47,840 --> 01:13:53,569
in so that's the same value with with

1485
01:13:51,319 --> 01:13:57,319
one must multiply so that seems good

1486
01:13:53,569 --> 01:14:02,420
right but now let's take a look at what

1487
01:13:57,319 --> 01:14:05,539
we've got here and already it looks much

1488
01:14:02,420 --> 01:14:08,239
more correct right so here's that first

1489
01:14:05,539 --> 01:14:13,369
one and hey lo and behold my intuition

1490
01:14:08,239 --> 01:14:16,729
was correct these sample points are now

1491
01:14:13,369 --> 01:14:20,239
getting lit which they weren't before so

1492
01:14:16,729 --> 01:14:22,039
that's pretty good and then if I add in

1493
01:14:20,239 --> 01:14:22,738
one more iteration here so there's what

1494
01:14:22,039 --> 01:14:26,159
iteration

1495
01:14:22,738 --> 01:14:29,218
at a second iteration in now the bounces

1496
01:14:26,159 --> 01:14:35,849
are letting up all the points which is

1497
01:14:29,219 --> 01:14:36,510
exactly what we would want so that looks

1498
01:14:35,850 --> 01:14:42,710
much better

1499
01:14:36,510 --> 01:14:45,270
to me right that looks much more sane

1500
01:14:42,710 --> 01:14:48,000
and so I think we need to work on the

1501
01:14:45,270 --> 01:14:50,850
algorithm now but at least now that that

1502
01:14:48,000 --> 01:14:53,279
was definitely a bug and exactly as I

1503
01:14:50,850 --> 01:14:55,200
suspected having some debug code in

1504
01:14:53,279 --> 01:14:56,880
there made it really easy to find I

1505
01:14:55,199 --> 01:14:59,609
don't think we would have found that

1506
01:14:56,880 --> 01:15:11,430
without that code right so there's one

1507
01:14:59,609 --> 01:15:16,738
bounce there's two bounces not there's

1508
01:15:11,430 --> 01:15:19,020
three and so on so again one of the nice

1509
01:15:16,738 --> 01:15:22,369
things too about the having this scheme

1510
01:15:19,020 --> 01:15:25,290
that has lighting samples that are

1511
01:15:22,369 --> 01:15:27,659
basically controllable separately per

1512
01:15:25,289 --> 01:15:29,729
surface is that it does mean we can also

1513
01:15:27,659 --> 01:15:32,010
over tessellate like we can put more

1514
01:15:29,729 --> 01:15:34,709
samples on surfaces that we care more

1515
01:15:32,010 --> 01:15:37,020
about and less samples on services that

1516
01:15:34,710 --> 01:15:38,310
we care less about now one of the things

1517
01:15:37,020 --> 01:15:40,320
that's interesting here is I feel like

1518
01:15:38,310 --> 01:15:41,760
we're not probably having enough samples

1519
01:15:40,319 --> 01:15:44,579
taken especially because how fast this

1520
01:15:41,760 --> 01:15:48,989
is running which we don't really want it

1521
01:15:44,579 --> 01:15:52,738
to run this fast I think we do want to

1522
01:15:48,988 --> 01:15:54,569
do a thing where we up this rate count

1523
01:15:52,738 --> 01:15:56,699
right so I don't know what the best rate

1524
01:15:54,569 --> 01:16:00,090
count value is but we want these to be

1525
01:15:56,699 --> 01:16:00,539
higher certainly then than they were

1526
01:16:00,090 --> 01:16:04,529
before

1527
01:16:00,539 --> 01:16:06,269
so here's a slower version that's

1528
01:16:04,529 --> 01:16:09,029
running I'm not sure how many bounce

1529
01:16:06,270 --> 01:16:11,700
this is so here's one bounce running

1530
01:16:09,029 --> 01:16:12,960
with with sort of more samples and

1531
01:16:11,699 --> 01:16:16,229
here's two bouncers running with more

1532
01:16:12,960 --> 01:16:17,699
samples right and I'm just looking at

1533
01:16:16,229 --> 01:16:20,519
what ends up happening with the lighting

1534
01:16:17,699 --> 01:16:23,880
on these I'm interested to know why the

1535
01:16:20,520 --> 01:16:26,180
lighting is so different between some of

1536
01:16:23,880 --> 01:16:26,180
these

1537
01:16:32,069 --> 01:16:39,009
and I guess that's just because of the

1538
01:16:35,079 --> 01:16:41,189
randomness of how the light happens to

1539
01:16:39,010 --> 01:16:41,190
go

1540
01:17:02,238 --> 01:17:20,039
yeah so yeah I think the most sensible

1541
01:17:10,529 --> 01:17:27,529
thing to do now is just to take a look

1542
01:17:20,039 --> 01:17:30,510
at at the lighting algorithm itself and

1543
01:17:27,529 --> 01:17:33,479
start to improve the quality of how

1544
01:17:30,510 --> 01:17:37,739
we're distributing light in general

1545
01:17:33,479 --> 01:17:40,079
right what we'd like to do is try to

1546
01:17:37,738 --> 01:17:44,399
figure out some ways to make it more

1547
01:17:40,079 --> 01:17:48,899
energy neutral like our ideally what we

1548
01:17:44,399 --> 01:17:51,299
would like is some way of saying well if

1549
01:17:48,899 --> 01:17:53,009
you run this thing for four iterations

1550
01:17:51,300 --> 01:17:55,050
where you run it for eight iterations

1551
01:17:53,010 --> 01:17:56,789
you'll still get roughly the same

1552
01:17:55,050 --> 01:17:58,829
brightness of light you'll just get it

1553
01:17:56,789 --> 01:18:02,010
distributed more correctly than it was

1554
01:17:58,829 --> 01:18:02,340
before you know that's what we would

1555
01:18:02,010 --> 01:18:05,940
like

1556
01:18:02,340 --> 01:18:08,130
we'd like a way of saying that that were

1557
01:18:05,939 --> 01:18:10,259
the total amount of light in the scene

1558
01:18:08,130 --> 01:18:15,569
isn't gonna just keep going up and up

1559
01:18:10,260 --> 01:18:19,079
the more iterations you run Oh we'd like

1560
01:18:15,569 --> 01:18:23,340
to be sort of unbiased in sort of the

1561
01:18:19,079 --> 01:18:26,158
more sampling meaning of the term where

1562
01:18:23,340 --> 01:18:28,829
we converge towards a correct solution

1563
01:18:26,158 --> 01:18:30,569
from no particular side like it's just

1564
01:18:28,829 --> 01:18:32,399
kind of like generally averages out to

1565
01:18:30,569 --> 01:18:34,380
the correct solution so we oscillate

1566
01:18:32,399 --> 01:18:37,219
around it rather than something that's

1567
01:18:34,380 --> 01:18:40,889
always gonna keep going higher or lower

1568
01:18:37,219 --> 01:18:43,948
coming up from one side always right

1569
01:18:40,889 --> 01:18:47,639
we'd like something that produces

1570
01:18:43,948 --> 01:18:49,769
correct results on average rather than

1571
01:18:47,639 --> 01:18:51,690
something that kind of just randomly

1572
01:18:49,770 --> 01:18:52,980
bouncing light around and hey we sort of

1573
01:18:51,689 --> 01:18:55,859
tweaked it till it were looked okay

1574
01:18:52,979 --> 01:18:59,218
right so I think we'd like to improve

1575
01:18:55,859 --> 01:19:00,779
that solution as as we can and what I

1576
01:18:59,219 --> 01:19:04,619
would like to do is I'd like to make it

1577
01:19:00,779 --> 01:19:06,869
possible to run the bounces so in this

1578
01:19:04,619 --> 01:19:09,539
mode you know I can continuously hit the

1579
01:19:06,869 --> 01:19:12,719
keys to like change how many iterations

1580
01:19:09,539 --> 01:19:14,519
were doing there and what I think I

1581
01:19:12,719 --> 01:19:19,020
would like to do is I think I'd like

1582
01:19:14,520 --> 01:19:22,080
to make it so that we can do that same

1583
01:19:19,020 --> 01:19:24,510
key presses in here and so what what

1584
01:19:22,079 --> 01:19:28,739
that would require is when I get that

1585
01:19:24,510 --> 01:19:37,100
key press run it once with the correct

1586
01:19:28,739 --> 01:19:37,099
geometry and then go right so basically

1587
01:19:37,159 --> 01:19:47,489
when you hit one of these there's like a

1588
01:19:42,229 --> 01:19:54,000
recompute lighting this false compute

1589
01:19:47,489 --> 01:19:55,800
but it's true like so and so then when

1590
01:19:54,000 --> 01:19:59,939
we come through here we would say like

1591
01:19:55,800 --> 01:20:01,949
okay if we're not recomputing the

1592
01:19:59,939 --> 01:20:05,069
lighting and we're showing the lighting

1593
01:20:01,949 --> 01:20:09,210
then do this thing right otherwise do

1594
01:20:05,069 --> 01:20:11,960
the other path and that way we can just

1595
01:20:09,210 --> 01:20:15,119
sort of make it really easy to quickly

1596
01:20:11,960 --> 01:20:21,539
do that in the other mode without having

1597
01:20:15,119 --> 01:20:23,729
to do the little Toggl dance right so

1598
01:20:21,539 --> 01:20:25,769
one bounce to bounce three bounds for

1599
01:20:23,729 --> 01:20:31,769
bounce right and it just like it does

1600
01:20:25,770 --> 01:20:36,420
that quick flash rerender so that it's

1601
01:20:31,770 --> 01:20:40,100
pretty easy to do that cycling so that's

1602
01:20:36,420 --> 01:20:40,100
that's all I really wanted it to do

1603
01:20:40,279 --> 01:20:45,269
and those sample points are still too

1604
01:20:42,840 --> 01:20:47,789
small you know I was saying we did wand

1605
01:20:45,270 --> 01:20:50,220
him small and it came back to bite me

1606
01:20:47,789 --> 01:20:55,909
because it turns out we really want them

1607
01:20:50,220 --> 01:20:59,640
pretty big so I keep up in the size here

1608
01:20:55,909 --> 01:21:02,000
till we get something that's it's nice

1609
01:20:59,640 --> 01:21:02,000
and big

1610
01:21:04,239 --> 01:21:10,069
it's pretty good so now we can sort of

1611
01:21:08,329 --> 01:21:11,300
see this a little bit better detail as I

1612
01:21:10,069 --> 01:21:14,149
kind of go out so there's the first

1613
01:21:11,300 --> 01:21:18,289
bounce second bounce third bounce bounce

1614
01:21:14,149 --> 01:21:20,869
bounce rate like so and let's take a

1615
01:21:18,289 --> 01:21:25,699
look at how that bounce works out when

1616
01:21:20,869 --> 01:21:29,329
we're over like here let's say so

1617
01:21:25,699 --> 01:21:33,079
there's no bounces first bounce second

1618
01:21:29,329 --> 01:21:36,229
bounce third bounce right and you can

1619
01:21:33,079 --> 01:21:38,300
kind of see again that these are bounces

1620
01:21:36,229 --> 01:21:40,639
off of this colored light source right

1621
01:21:38,300 --> 01:21:43,100
that's the blue light so it's getting

1622
01:21:40,640 --> 01:21:45,079
pure light on it but when it reflects

1623
01:21:43,100 --> 01:21:47,450
light out because remember these are not

1624
01:21:45,079 --> 01:21:50,329
showing what the surface will show these

1625
01:21:47,449 --> 01:21:52,970
are showing what light hit there so it

1626
01:21:50,329 --> 01:21:56,390
was white light that hit here but it was

1627
01:21:52,970 --> 01:21:58,250
blue light that hit here right and as

1628
01:21:56,390 --> 01:22:00,560
that goes you can see that it continues

1629
01:21:58,250 --> 01:22:03,590
to add more light bounce light off of

1630
01:22:00,560 --> 01:22:06,380
these surfaces as well you can kind of

1631
01:22:03,590 --> 01:22:09,350
see that happening right we need to get

1632
01:22:06,380 --> 01:22:13,010
rid of that little snake dude he keeps

1633
01:22:09,350 --> 01:22:16,539
jumping around making it uneven for us

1634
01:22:13,010 --> 01:22:16,539
to look at what the lighting solution is

1635
01:22:24,890 --> 01:22:40,650
all right now there should be no snake

1636
01:22:27,149 --> 01:22:45,059
dude um so yeah now so there you can see

1637
01:22:40,649 --> 01:22:51,359
a lighting solution in place and if we

1638
01:22:45,060 --> 01:22:53,430
look at the bounce sequence here first

1639
01:22:51,359 --> 01:23:05,219
bounce second bounce third bounce fourth

1640
01:22:53,430 --> 01:23:07,950
bounce right with just bounce and so

1641
01:23:05,220 --> 01:23:10,800
that's what we're looking at so what we

1642
01:23:07,949 --> 01:23:13,559
want to do here is I think we want to

1643
01:23:10,800 --> 01:23:17,550
start to try and get that lighting

1644
01:23:13,560 --> 01:23:19,920
bouncing to work better and I think we

1645
01:23:17,550 --> 01:23:25,730
want a couple things to do here so first

1646
01:23:19,920 --> 01:23:25,730
of all we need to think about this from

1647
01:23:27,020 --> 01:23:35,130
we're kind of a weird like hybrid

1648
01:23:29,750 --> 01:23:37,850
concept right we are sort of a ray

1649
01:23:35,130 --> 01:23:42,060
tracer sort of we're sort of a like

1650
01:23:37,850 --> 01:23:44,610
render first lighting model right but

1651
01:23:42,060 --> 01:23:47,730
we're sort of half a radiosity solution

1652
01:23:44,609 --> 01:23:49,349
as well so we're kind of doing a

1653
01:23:47,729 --> 01:23:51,209
radiosity saw because at the end of the

1654
01:23:49,350 --> 01:23:53,910
day we're producing lighting samples

1655
01:23:51,210 --> 01:23:56,279
that are then used later so instead of

1656
01:23:53,909 --> 01:23:58,409
actually producing the light that is

1657
01:23:56,279 --> 01:24:00,420
going to be shot towards the viewers eye

1658
01:23:58,409 --> 01:24:02,639
and counted like we would be doing an

1659
01:24:00,420 --> 01:24:05,220
array tracer we're really using the ray

1660
01:24:02,640 --> 01:24:08,070
tracing to produce a radiosity solution

1661
01:24:05,220 --> 01:24:09,720
which is just remembering what light was

1662
01:24:08,069 --> 01:24:13,889
incident on a surface or an irradiance

1663
01:24:09,720 --> 01:24:16,140
cache remembering what light was instead

1664
01:24:13,890 --> 01:24:18,539
of surface so that somebody later can

1665
01:24:16,140 --> 01:24:23,160
come and use that information to

1666
01:24:18,539 --> 01:24:24,840
properly light the scene right so we're

1667
01:24:23,159 --> 01:24:28,319
kind of in the middle of those two and

1668
01:24:24,840 --> 01:24:32,930
we need to just be aware of that what we

1669
01:24:28,319 --> 01:24:32,929
want to do here is we want to

1670
01:24:33,239 --> 01:24:38,849
start to think about how we're gonna do

1671
01:24:35,279 --> 01:24:40,139
that conservation of energy there so

1672
01:24:38,850 --> 01:24:42,930
that we don't just keep getting brighter

1673
01:24:40,140 --> 01:24:45,150
and that sort of stuff and and and also

1674
01:24:42,930 --> 01:24:49,230
we want to keep in mind how we get a

1675
01:24:45,149 --> 01:24:50,750
skylight in there all right so let's

1676
01:24:49,229 --> 01:24:52,829
talk about this real quick

1677
01:24:50,750 --> 01:25:01,909
how much time do we have we have about

1678
01:24:52,829 --> 01:25:01,909
15 minutes I think yes let's see here

1679
01:25:08,720 --> 01:25:17,150
one seven oh wait I already did that so

1680
01:25:14,010 --> 01:25:17,150
this right here is just

1681
01:25:28,000 --> 01:25:32,420
so I'm gonna put that in big ol quotes

1682
01:25:30,618 --> 01:25:34,309
the reason I'm going to put that in

1683
01:25:32,420 --> 01:25:35,960
quotes is because we're not really going

1684
01:25:34,310 --> 01:25:37,489
to be doing anything hardcore here

1685
01:25:35,960 --> 01:25:39,679
probably but we are going to start

1686
01:25:37,488 --> 01:25:42,649
trying to think about this concept sort

1687
01:25:39,679 --> 01:25:45,770
of in a loose sense because we actually

1688
01:25:42,649 --> 01:25:50,029
care in this case we're not just doing

1689
01:25:45,770 --> 01:25:51,980
it for big technical fun we actually do

1690
01:25:50,029 --> 01:25:53,809
need this to be true to make our letting

1691
01:25:51,979 --> 01:25:56,598
solution reasonable and what we mean by

1692
01:25:53,810 --> 01:25:58,159
this is so the way our current scheme is

1693
01:25:56,599 --> 01:26:00,590
working is let's say we have a light

1694
01:25:58,158 --> 01:26:03,579
source here that's shining down on the

1695
01:26:00,590 --> 01:26:09,199
scene we've got a reflector and another

1696
01:26:03,579 --> 01:26:11,269
reflector right ok so what we do on our

1697
01:26:09,198 --> 01:26:14,779
iterations is we shoot light and we add

1698
01:26:11,270 --> 01:26:16,909
the light to this thing which now can

1699
01:26:14,779 --> 01:26:19,368
collect some light and it then becomes a

1700
01:26:16,908 --> 01:26:21,439
light itself which can then shoot light

1701
01:26:19,368 --> 01:26:24,769
as well and this ven becomes a light

1702
01:26:21,439 --> 01:26:27,289
itself which can shoot light at no time

1703
01:26:24,770 --> 01:26:29,540
do we diminish that amount of light so

1704
01:26:27,289 --> 01:26:32,300
basically the more iterations we run

1705
01:26:29,539 --> 01:26:34,219
iteration one right added some light to

1706
01:26:32,300 --> 01:26:36,590
the system iteration two added more

1707
01:26:34,219 --> 01:26:38,539
light to the system so it's not moving

1708
01:26:36,590 --> 01:26:42,349
light around so much as it's actually

1709
01:26:38,539 --> 01:26:43,939
adding light to the scene literally

1710
01:26:42,349 --> 01:26:46,819
adding it so the amount of light you

1711
01:26:43,939 --> 01:26:47,719
have in iteration one is less than the

1712
01:26:46,819 --> 01:26:49,880
amount of light you have in the

1713
01:26:47,719 --> 01:26:52,099
iteration 2 is less than the amount of

1714
01:26:49,880 --> 01:26:55,909
light you have an iteration 3 and so on

1715
01:26:52,099 --> 01:27:00,050
and so on so what I want to do here is I

1716
01:26:55,908 --> 01:27:01,908
want to have a way where we can conserve

1717
01:27:00,050 --> 01:27:04,429
the amount of energy that's in the scene

1718
01:27:01,908 --> 01:27:06,888
so when you put a certain amount of

1719
01:27:04,429 --> 01:27:09,199
light energy in you get a certain amount

1720
01:27:06,889 --> 01:27:11,539
of light energy out no matter how many

1721
01:27:09,198 --> 01:27:12,979
iterations you happen to run now the

1722
01:27:11,539 --> 01:27:14,420
light may spread out differently

1723
01:27:12,979 --> 01:27:15,888
depending on how many iterations you run

1724
01:27:14,420 --> 01:27:18,829
and in fact it better otherwise those

1725
01:27:15,889 --> 01:27:20,900
iterations aren't doing anything but we

1726
01:27:18,829 --> 01:27:25,250
need some way of making the total light

1727
01:27:20,899 --> 01:27:26,868
energy to make sure that the total

1728
01:27:25,250 --> 01:27:27,679
amount of light energy is not increasing

1729
01:27:26,868 --> 01:27:30,559
right

1730
01:27:27,679 --> 01:27:32,989
so one way we could do this is split in

1731
01:27:30,560 --> 01:27:34,789
half the amount that we send out versus

1732
01:27:32,988 --> 01:27:38,839
the amount that we keep on any giving

1733
01:27:34,789 --> 01:27:40,099
light iteration for example right so

1734
01:27:38,840 --> 01:27:41,369
let's say for example we take a

1735
01:27:40,099 --> 01:27:42,869
particular light source

1736
01:27:41,368 --> 01:27:45,898
you say okay that light source is going

1737
01:27:42,868 --> 01:27:49,889
to emit 50% of its light and it's gonna

1738
01:27:45,899 --> 01:27:52,229
keep 50% of its light right in that case

1739
01:27:49,889 --> 01:27:55,788
we know that no matter what happens we

1740
01:27:52,229 --> 01:27:59,280
will never add more light to the scene

1741
01:27:55,788 --> 01:28:01,529
than we had originally this would be a

1742
01:27:59,279 --> 01:28:04,498
very simple way for us to conserve the

1743
01:28:01,529 --> 01:28:06,779
energy that we have so I'm gonna try

1744
01:28:04,498 --> 01:28:08,668
something like that first to see if we

1745
01:28:06,779 --> 01:28:10,078
can even out the amount of energy so

1746
01:28:08,668 --> 01:28:13,708
that will stay uniform throughout the

1747
01:28:10,078 --> 01:28:18,058
process so let's see how we would do

1748
01:28:13,708 --> 01:28:22,279
that here we are so I'm gonna take a

1749
01:28:18,059 --> 01:28:22,279
drink as my throat let's try it out

1750
01:28:29,479 --> 01:28:37,489
all right so what I'm gonna do here is

1751
01:28:35,060 --> 01:28:41,240
just going to go into the light

1752
01:28:37,489 --> 01:28:42,380
propagation system and I'm gonna take a

1753
01:28:41,239 --> 01:28:46,399
look at how we're actually doing this

1754
01:28:42,380 --> 01:28:47,810
distribution okay so what you can see is

1755
01:28:46,399 --> 01:28:50,089
we're looking for surfaces to send light

1756
01:28:47,810 --> 01:28:53,810
from and anything that's got some a

1757
01:28:50,090 --> 01:28:55,779
mission to send we're gonna use so what

1758
01:28:53,810 --> 01:28:58,220
we do here is we say okay we're gonna

1759
01:28:55,779 --> 01:29:00,979
take a sample direction we're gonna

1760
01:28:58,220 --> 01:29:02,510
raycast out and if we hit something then

1761
01:29:00,979 --> 01:29:04,039
what we're gonna do is we're gonna

1762
01:29:02,510 --> 01:29:06,340
accumulate some light into that thing

1763
01:29:04,039 --> 01:29:10,609
right and the amount that we're gonna

1764
01:29:06,340 --> 01:29:13,430
send is this emit see right here and

1765
01:29:10,609 --> 01:29:20,869
this power right how is that power

1766
01:29:13,430 --> 01:29:23,810
getting interpolated right here so it's

1767
01:29:20,869 --> 01:29:25,970
basically just yeah it's just whatever

1768
01:29:23,810 --> 01:29:29,240
the light color we sent down was the

1769
01:29:25,970 --> 01:29:33,260
power is is implicit in that so we could

1770
01:29:29,239 --> 01:29:35,239
actually like we could if we wanted to

1771
01:29:33,260 --> 01:29:36,400
we could have rolled these into one but

1772
01:29:35,239 --> 01:29:40,279
it doesn't matter

1773
01:29:36,399 --> 01:29:42,529
so we have the emit see right and we

1774
01:29:40,279 --> 01:29:44,599
know how much power we're going to use

1775
01:29:42,529 --> 01:29:46,489
here the amount of power that we're

1776
01:29:44,600 --> 01:29:48,380
going to use here is 1 over the rate

1777
01:29:46,489 --> 01:29:50,000
count so if every ray hit that's how

1778
01:29:48,380 --> 01:29:52,819
much power we would we would dissipate

1779
01:29:50,000 --> 01:29:54,560
the total amount of light from the light

1780
01:29:52,819 --> 01:29:57,380
source right but we don't necessarily

1781
01:29:54,560 --> 01:30:00,289
want to do that anymore what I'd rather

1782
01:29:57,380 --> 01:30:05,210
do is say okay what we're gonna do

1783
01:30:00,289 --> 01:30:07,729
instead is we're going to emit only 50%

1784
01:30:05,210 --> 01:30:10,460
of the light source this is power let's

1785
01:30:07,729 --> 01:30:11,929
say and we'll keep 50% now you can see

1786
01:30:10,460 --> 01:30:13,130
how that would play out down here like

1787
01:30:11,930 --> 01:30:15,260
right right now we're doing a source

1788
01:30:13,130 --> 01:30:17,480
emit see point index plus Destin so

1789
01:30:15,260 --> 01:30:19,820
they're just purely summing up how much

1790
01:30:17,479 --> 01:30:22,789
light I got this frame versus how much I

1791
01:30:19,819 --> 01:30:24,859
had you know and so on what I'd rather

1792
01:30:22,789 --> 01:30:27,760
do here is say okay what we want to do

1793
01:30:24,859 --> 01:30:30,829
is modify the source emit see probably

1794
01:30:27,760 --> 01:30:35,690
by how much ever much light it sent out

1795
01:30:30,829 --> 01:30:38,149
and the Destin at sea will get added to

1796
01:30:35,689 --> 01:30:40,099
it afterwards right so what we could do

1797
01:30:38,149 --> 01:30:42,949
is say okay when we update this value

1798
01:30:40,100 --> 01:30:43,370
what we're gonna do is say we've got an

1799
01:30:42,949 --> 01:30:47,859
amount

1800
01:30:43,369 --> 01:31:00,019
that's coming in so it's like light

1801
01:30:47,859 --> 01:31:01,189
absorption right or light retention so

1802
01:31:00,020 --> 01:31:04,910
what we want to do is say there's a

1803
01:31:01,189 --> 01:31:08,839
certain amount of light retention maybe

1804
01:31:04,909 --> 01:31:10,939
it's half like I said maybe it's not but

1805
01:31:08,840 --> 01:31:12,319
we'll see so then in here what we're

1806
01:31:10,939 --> 01:31:16,699
gonna say is we're only going to

1807
01:31:12,319 --> 01:31:18,319
dissipate 1 minus the total the the

1808
01:31:16,699 --> 01:31:20,720
light retention factor that we're gonna

1809
01:31:18,319 --> 01:31:25,460
keep in this light itself we will only

1810
01:31:20,720 --> 01:31:28,730
send out that much light and some light

1811
01:31:25,460 --> 01:31:30,439
gets lost right because if a ray doesn't

1812
01:31:28,729 --> 01:31:34,539
hit that light would get lost

1813
01:31:30,439 --> 01:31:41,210
what that means is we may have to adjust

1814
01:31:34,539 --> 01:31:43,519
to only get rid of light that actually

1815
01:31:41,210 --> 01:31:45,560
didn't get to that that if it actually

1816
01:31:43,520 --> 01:31:46,730
got sent somewhere right because now you

1817
01:31:45,560 --> 01:31:48,800
can see we have the opposite problem

1818
01:31:46,729 --> 01:31:50,419
which is the light gets dimmer and

1819
01:31:48,800 --> 01:31:52,880
dimmer as we go and the reason for that

1820
01:31:50,420 --> 01:31:56,930
of course is that it's sending light out

1821
01:31:52,880 --> 01:31:58,279
of the scene right so that's actually

1822
01:31:56,930 --> 01:32:00,200
good it means we're doing the right

1823
01:31:58,279 --> 01:32:02,689
thing here it's just we need a way of

1824
01:32:00,199 --> 01:32:05,300
making sure that we keep distributing

1825
01:32:02,689 --> 01:32:08,449
the light we have if we can't have you

1826
01:32:05,300 --> 01:32:11,300
know how should I say this we yeah we

1827
01:32:08,449 --> 01:32:15,529
need that light to basically be retained

1828
01:32:11,300 --> 01:32:19,909
if it doesn't have a hit now the problem

1829
01:32:15,529 --> 01:32:25,159
with doing that is we don't have a way

1830
01:32:19,909 --> 01:32:26,720
of saying oh we need to we need to keep

1831
01:32:25,159 --> 01:32:28,970
more of it because we're not writing to

1832
01:32:26,720 --> 01:32:30,920
source in it up here but that's ok

1833
01:32:28,970 --> 01:32:33,140
because remember the Destin Mitzi is

1834
01:32:30,920 --> 01:32:34,760
getting accumulated for this point so

1835
01:32:33,140 --> 01:32:38,000
what we can do is we could say all right

1836
01:32:34,760 --> 01:32:44,440
let's remember how much power we have

1837
01:32:38,000 --> 01:32:49,189
left right

1838
01:32:44,439 --> 01:32:50,689
and let's just add that in so what we

1839
01:32:49,189 --> 01:32:54,519
could do is we can even get rid of this

1840
01:32:50,689 --> 01:32:57,589
plus equals entirely right we could say

1841
01:32:54,520 --> 01:32:59,630
get rid of that it's just equals the

1842
01:32:57,590 --> 01:33:01,699
desk and what we could say is let's try

1843
01:32:59,630 --> 01:33:05,930
to remember how much power we didn't

1844
01:33:01,699 --> 01:33:07,250
distribute okay so what we could say is

1845
01:33:05,930 --> 01:33:10,340
alright we've got a light retention

1846
01:33:07,250 --> 01:33:12,170
value we know that our retained power is

1847
01:33:10,340 --> 01:33:16,310
going to be the light retention amount

1848
01:33:12,170 --> 01:33:20,539
by default and then every time we miss

1849
01:33:16,310 --> 01:33:22,220
array we will add that power back in so

1850
01:33:20,539 --> 01:33:31,670
when we come through here and we say

1851
01:33:22,220 --> 01:33:32,900
like okay this actually needs to be in

1852
01:33:31,670 --> 01:33:35,510
here

1853
01:33:32,899 --> 01:33:37,489
so we're deciding that we're gonna take

1854
01:33:35,510 --> 01:33:40,220
one of these guys we're gonna update

1855
01:33:37,489 --> 01:33:43,969
their emission right so we have two

1856
01:33:40,220 --> 01:33:45,230
options two paths we can go down one and

1857
01:33:43,970 --> 01:33:46,699
you actually you know what I could do

1858
01:33:45,229 --> 01:33:50,599
here I could do this a little bit saucy

1859
01:33:46,699 --> 01:33:52,579
ER right I could say also the retained

1860
01:33:50,600 --> 01:33:54,500
power I could also make this be

1861
01:33:52,579 --> 01:33:57,289
something that gets subtracted from

1862
01:33:54,500 --> 01:33:59,720
every time we hit so we could see the

1863
01:33:57,289 --> 01:34:02,960
retained power is the full power of the

1864
01:33:59,720 --> 01:34:07,550
light source right it keeps all of it by

1865
01:34:02,960 --> 01:34:09,619
default and so then when we're done here

1866
01:34:07,550 --> 01:34:13,940
what we would do is say okay the

1867
01:34:09,619 --> 01:34:18,019
destination the Destiny see right so the

1868
01:34:13,939 --> 01:34:20,449
decimate see of this emitter is going to

1869
01:34:18,020 --> 01:34:24,080
be equal to its emit C times its

1870
01:34:20,449 --> 01:34:25,489
retained power so by default it will

1871
01:34:24,079 --> 01:34:27,260
retain everything and just keep a 1

1872
01:34:25,489 --> 01:34:30,920
point out so then what we'll do is we'll

1873
01:34:27,260 --> 01:34:33,199
say every time we hit right every time

1874
01:34:30,920 --> 01:34:35,029
we do an accumulate sample we know we're

1875
01:34:33,199 --> 01:34:37,069
passing down this power value so let's

1876
01:34:35,029 --> 01:34:43,399
just subtract that out of its retained

1877
01:34:37,069 --> 01:34:45,559
power right like so so now every time

1878
01:34:43,399 --> 01:34:48,710
array hits we retract that amount of

1879
01:34:45,560 --> 01:34:50,330
power out so by the maximum amount we

1880
01:34:48,710 --> 01:34:52,460
can possibly send out is the light

1881
01:34:50,329 --> 01:34:54,199
retention amount but if we don't send

1882
01:34:52,460 --> 01:34:57,260
out that much will still retain that

1883
01:34:54,199 --> 01:34:57,738
light on our surface right so we'll

1884
01:34:57,260 --> 01:34:59,980
either

1885
01:34:57,738 --> 01:35:02,268
send the lights somewhere or we won't

1886
01:34:59,979 --> 01:35:05,078
but it shouldn't get dimmer now

1887
01:35:02,269 --> 01:35:07,190
hopefully although it does seem to get a

1888
01:35:05,078 --> 01:35:11,779
little dimmer we'll have to find out

1889
01:35:07,189 --> 01:35:13,759
what's going on there it could just be

1890
01:35:11,779 --> 01:35:18,158
that the the light ends up collecting in

1891
01:35:13,760 --> 01:35:20,210
particular places now there's something

1892
01:35:18,158 --> 01:35:21,738
something going on there you can see we

1893
01:35:20,210 --> 01:35:23,960
lose a little bit so we're off by

1894
01:35:21,738 --> 01:35:27,129
something in the equation somewhere

1895
01:35:23,960 --> 01:35:32,630
there's a little bit of cruft in there

1896
01:35:27,130 --> 01:35:34,400
right but we're getting there right so

1897
01:35:32,630 --> 01:35:40,760
now we can kind of see that we've got

1898
01:35:34,399 --> 01:35:42,558
some some more conservation of energy

1899
01:35:40,760 --> 01:35:44,960
definitely that's not quite right yet

1900
01:35:42,559 --> 01:35:47,480
still gets dimmer then then we would

1901
01:35:44,960 --> 01:35:49,399
like right we also don't know that we

1902
01:35:47,479 --> 01:35:52,368
want our retention factor to be this

1903
01:35:49,399 --> 01:35:53,899
high like we might want to retain less

1904
01:35:52,368 --> 01:35:56,118
of the light right it may be do we want

1905
01:35:53,899 --> 01:35:57,589
to send out 75% but of course I think

1906
01:35:56,118 --> 01:35:59,808
like I said we've still got bugs in here

1907
01:35:57,590 --> 01:36:07,909
so it's hard to gauge correctly at this

1908
01:35:59,809 --> 01:36:09,469
point right there you can kind of see

1909
01:36:07,908 --> 01:36:11,960
that light getting lost in there right

1910
01:36:09,469 --> 01:36:13,399
all right so let's figure out how we're

1911
01:36:11,960 --> 01:36:17,210
getting a leakage here look what's

1912
01:36:13,399 --> 01:36:20,058
happening there okay

1913
01:36:17,210 --> 01:36:22,189
so we're stepping through here and we're

1914
01:36:20,059 --> 01:36:24,619
saying that the amount of power that

1915
01:36:22,189 --> 01:36:28,549
we're going to send out is going to be 1

1916
01:36:24,618 --> 01:36:31,848
- light retention divided by the rate

1917
01:36:28,550 --> 01:36:33,230
count right whatever that that rate

1918
01:36:31,849 --> 01:36:37,819
count is because that's how many we're

1919
01:36:33,229 --> 01:36:40,038
sending out here right per per iteration

1920
01:36:37,819 --> 01:36:43,518
or whatever right um

1921
01:36:40,038 --> 01:36:48,198
I guess one thing I don't know is as the

1922
01:36:43,519 --> 01:36:51,219
rate count drops down what's the minimum

1923
01:36:48,198 --> 01:36:55,149
the Ray Kappe it may be the rate count

1924
01:36:51,219 --> 01:36:55,149
how does the rate count get modified

1925
01:36:55,849 --> 01:37:01,998
if rape count is less it's greater than

1926
01:36:59,118 --> 01:37:03,799
eight let's say because it keeps

1927
01:37:01,998 --> 01:37:13,188
dropping down with each one and that may

1928
01:37:03,800 --> 01:37:14,659
be part of it too alright so there we go

1929
01:37:13,189 --> 01:37:18,829
now we know we're always sending out

1930
01:37:14,658 --> 01:37:21,488
some rays right all right so we're

1931
01:37:18,828 --> 01:37:23,748
losing energy why are we losing energy

1932
01:37:21,488 --> 01:37:24,948
it could just be floating-point nonsense

1933
01:37:23,748 --> 01:37:31,429
but you know it's probably something

1934
01:37:24,948 --> 01:37:35,988
real so I guess one problem is the power

1935
01:37:31,429 --> 01:37:40,219
that we add always gets attenuated by

1936
01:37:35,988 --> 01:37:42,138
the angular angular fall-off so that is

1937
01:37:40,219 --> 01:37:43,189
probably where we're losing our power

1938
01:37:42,139 --> 01:37:46,130
right

1939
01:37:43,189 --> 01:37:47,959
so in accumulate sample for example and

1940
01:37:46,130 --> 01:37:49,729
actually the problem the kumite sample

1941
01:37:47,958 --> 01:37:52,038
is that never really worked out to be a

1942
01:37:49,729 --> 01:37:53,769
very good out of line function because

1943
01:37:52,038 --> 01:37:56,748
it kind of always needs to be in line

1944
01:37:53,769 --> 01:37:58,579
which is not great for us but you can

1945
01:37:56,748 --> 01:38:06,849
see here that the actual power that we

1946
01:37:58,578 --> 01:38:09,288
add is affected by the angular fall-off

1947
01:38:06,849 --> 01:38:12,409
so what we might want to do is say well

1948
01:38:09,288 --> 01:38:16,099
okay the angular fall-off there is going

1949
01:38:12,408 --> 01:38:18,698
to have to be taken into account so

1950
01:38:16,099 --> 01:38:23,769
maybe we say something more like this

1951
01:38:18,698 --> 01:38:26,748
and we say we don't dissipate that power

1952
01:38:23,769 --> 01:38:36,889
we only dissipate power we actually used

1953
01:38:26,748 --> 01:38:39,889
right and it's better but it's still not

1954
01:38:36,889 --> 01:38:42,168
right we're still losing too much power

1955
01:38:39,889 --> 01:38:44,418
there right I don't think that's an

1956
01:38:42,168 --> 01:38:47,090
accidental function I think that that

1957
01:38:44,418 --> 01:38:50,198
looks to me like we're we're still

1958
01:38:47,090 --> 01:38:50,199
having issues right

1959
01:38:51,260 --> 01:38:58,719
but that's definitely one source of it

1960
01:38:52,908 --> 01:39:01,998
so here is we now know exactly how much

1961
01:38:58,719 --> 01:39:04,340
light we're actually adding here and so

1962
01:39:01,998 --> 01:39:09,708
we should end up with keeping as much

1963
01:39:04,340 --> 01:39:13,279
retained power as we as was actually

1964
01:39:09,708 --> 01:39:18,679
kept right we've given away this much we

1965
01:39:13,279 --> 01:39:27,439
keep this much retained uhm so yeah what

1966
01:39:18,679 --> 01:39:40,658
else happens here anything else so I

1967
01:39:27,439 --> 01:39:44,268
don't see so I don't really see a

1968
01:39:40,658 --> 01:39:46,578
problem here immediately so I'm not sure

1969
01:39:44,269 --> 01:39:50,570
where I'm losing the rest of my power

1970
01:39:46,578 --> 01:39:53,929
here so I'm coming through this each

1971
01:39:50,569 --> 01:39:56,988
iteration and I've got my power

1972
01:39:53,929 --> 01:39:58,760
retention here I'm basically saying that

1973
01:39:56,988 --> 01:40:04,009
the power that I'm going to distribute

1974
01:39:58,760 --> 01:40:08,708
per Rey is however much light retention

1975
01:40:04,010 --> 01:40:12,349
I want it divided by the Ray count right

1976
01:40:08,708 --> 01:40:14,208
and I'm saying I'm gonna retain 1.0 of

1977
01:40:12,349 --> 01:40:15,860
my power by default so if we never

1978
01:40:14,208 --> 01:40:17,809
actually admitted everything the power

1979
01:40:15,859 --> 01:40:19,908
should remain the same because it would

1980
01:40:17,809 --> 01:40:22,639
always just be omit C times retained

1981
01:40:19,908 --> 01:40:24,679
power and power retained powers one so

1982
01:40:22,639 --> 01:40:28,819
emit seed estimate C is just going to be

1983
01:40:24,679 --> 01:40:34,279
the source of it see oh there it is

1984
01:40:28,819 --> 01:40:35,630
reflection color that is the problem

1985
01:40:34,279 --> 01:40:37,458
right there

1986
01:40:35,630 --> 01:40:42,190
so we don't want to do this how to mark

1987
01:40:37,458 --> 01:40:42,189
product right we want to do this

1988
01:40:46,800 --> 01:40:58,270
okay oh so close we get out many

1989
01:40:54,640 --> 01:41:00,700
iterations before losing power now but

1990
01:40:58,270 --> 01:41:02,770
it still looks like that that's probably

1991
01:41:00,699 --> 01:41:05,199
not just a numerical precision that

1992
01:41:02,770 --> 01:41:09,640
still looks like we've got something

1993
01:41:05,199 --> 01:41:12,989
janky happening in there to me I could

1994
01:41:09,640 --> 01:41:23,800
be wrong but that looks like that to me

1995
01:41:12,989 --> 01:41:27,880
I mean it does take a really long time

1996
01:41:23,800 --> 01:41:31,810
before you use it up but I'm gonna keep

1997
01:41:27,880 --> 01:41:33,520
huntin anyway just to make sure so yes

1998
01:41:31,810 --> 01:41:34,420
so this way we're taking the original

1999
01:41:33,520 --> 01:41:36,580
source and we're just saying they

2000
01:41:34,420 --> 01:41:39,180
retained power times that should should

2001
01:41:36,579 --> 01:41:41,829
be enough to keep us from losing light

2002
01:41:39,180 --> 01:41:49,659
because we're adding that power to other

2003
01:41:41,829 --> 01:41:51,670
light sources as we go it could be that

2004
01:41:49,659 --> 01:41:54,399
we're just at the point where it's you

2005
01:41:51,670 --> 01:41:56,260
know it's numerical precision makes it

2006
01:41:54,399 --> 01:41:58,059
so that there's not much we can do to

2007
01:41:56,260 --> 01:42:01,289
get it something that doesn't lose a

2008
01:41:58,060 --> 01:42:01,289
little bit right

2009
01:42:13,369 --> 01:42:17,840
and so that light absorption so now you

2010
01:42:16,250 --> 01:42:20,479
know what so here's the other thing so

2011
01:42:17,840 --> 01:42:22,520
since we are bouncing the light we're

2012
01:42:20,479 --> 01:42:23,599
bouncing is gonna be modified by the

2013
01:42:22,520 --> 01:42:25,340
reflection color

2014
01:42:23,600 --> 01:42:34,940
we're actually bouncing less light than

2015
01:42:25,340 --> 01:42:38,930
we originally had so we kind of need to

2016
01:42:34,939 --> 01:42:50,059
retain that light in us would be the way

2017
01:42:38,930 --> 01:42:51,980
we'd have to do it that's kind of a

2018
01:42:50,060 --> 01:42:54,170
tricky thing do you see what I'm saying

2019
01:42:51,979 --> 01:42:56,869
so we're gonna send out light that's

2020
01:42:54,170 --> 01:43:01,310
been pretty much it's been multiplied by

2021
01:42:56,869 --> 01:43:04,849
our reflection color right that's the

2022
01:43:01,310 --> 01:43:06,650
light color we're gonna send out and so

2023
01:43:04,850 --> 01:43:10,010
that means that by default we've

2024
01:43:06,649 --> 01:43:11,779
absorbed some of that light and every

2025
01:43:10,010 --> 01:43:14,930
time we send it out we're gonna absorb

2026
01:43:11,779 --> 01:43:17,179
it because we're counting that power

2027
01:43:14,930 --> 01:43:24,950
against us so we're limiting some of

2028
01:43:17,180 --> 01:43:29,030
that power from us that we can't send

2029
01:43:24,949 --> 01:43:30,920
out again so what's the best way to

2030
01:43:29,029 --> 01:43:32,329
handle that I mean one way to look at it

2031
01:43:30,920 --> 01:43:35,149
is to do it more accurately where we're

2032
01:43:32,329 --> 01:43:38,630
just actually absorbing that color of

2033
01:43:35,149 --> 01:43:46,929
light and so what we're sending out is

2034
01:43:38,630 --> 01:43:46,930
the other colors how would this work

2035
01:43:50,090 --> 01:43:54,480
the other way is to just normalize the

2036
01:43:52,770 --> 01:43:56,310
amount of power and say well whatever

2037
01:43:54,479 --> 01:44:07,189
the power actually is that we're sending

2038
01:43:56,310 --> 01:44:07,190
out is that much less than what we had

2039
01:44:48,149 --> 01:44:53,250
so I can't say I really know the right

2040
01:44:51,039 --> 01:44:55,510
way to capture that piece of information

2041
01:44:53,250 --> 01:44:58,239
hopefully everyone understands what I'm

2042
01:44:55,510 --> 01:45:00,070
talking about namely that the Hadamard

2043
01:44:58,239 --> 01:45:03,159
product here is taking whatever the

2044
01:45:00,069 --> 01:45:07,869
source emit color is that we have which

2045
01:45:03,159 --> 01:45:09,609
is our light that we received we're

2046
01:45:07,869 --> 01:45:15,699
modifying it by our reflection color

2047
01:45:09,609 --> 01:45:19,569
which degrades its energy right and so

2048
01:45:15,699 --> 01:45:22,359
I'm just not entirely certain how to

2049
01:45:19,569 --> 01:45:25,869
record that degradation should I just

2050
01:45:22,359 --> 01:45:28,509
try to measure that degradation and when

2051
01:45:25,869 --> 01:45:34,210
I subtract the power from it modify it

2052
01:45:28,510 --> 01:45:36,880
so for example like make a retention

2053
01:45:34,210 --> 01:45:38,739
coefficient here the retention

2054
01:45:36,880 --> 01:45:41,230
coefficient is going to be equal to

2055
01:45:38,739 --> 01:45:48,489
something like the length of the

2056
01:45:41,229 --> 01:45:58,809
emission reflection amount and so you

2057
01:45:48,489 --> 01:46:00,609
know whatever that length is whatever

2058
01:45:58,810 --> 01:46:06,400
the sort of amount of power that is

2059
01:46:00,609 --> 01:46:10,149
going to be lost by this we modify the

2060
01:46:06,399 --> 01:46:13,029
retained power by that right so when we

2061
01:46:10,149 --> 01:46:15,759
when we subtract away that light power

2062
01:46:13,029 --> 01:46:23,369
we've got baked into it the concept that

2063
01:46:15,760 --> 01:46:23,369
it's the light itself is not uniform I

2064
01:46:23,550 --> 01:46:28,210
don't know that that as written is

2065
01:46:26,079 --> 01:46:29,979
definitely not going to work but I'm

2066
01:46:28,210 --> 01:46:33,550
just wondering if something similar to

2067
01:46:29,979 --> 01:46:35,739
that can work because this would have

2068
01:46:33,550 --> 01:46:37,060
values that are over 1 and stuff so I

2069
01:46:35,739 --> 01:46:39,010
don't that's just going to be a

2070
01:46:37,060 --> 01:46:41,220
nightmare I think probably but I'm not

2071
01:46:39,010 --> 01:46:41,220
sure

2072
01:46:44,760 --> 01:47:00,520
yeah that still gets down to zero

2073
01:46:47,260 --> 01:47:01,570
eventually looks like anyway yeah so so

2074
01:47:00,520 --> 01:47:03,790
I definitely need a different way of

2075
01:47:01,569 --> 01:47:07,149
counting photons right and I may need to

2076
01:47:03,789 --> 01:47:08,979
count them on the red green and blue

2077
01:47:07,149 --> 01:47:12,009
channel separately the problem is I

2078
01:47:08,979 --> 01:47:13,389
don't want the color to shift because

2079
01:47:12,010 --> 01:47:23,739
surfaces are supposed to be the color

2080
01:47:13,390 --> 01:47:27,100
that they are but I guess in some sense

2081
01:47:23,738 --> 01:47:28,599
that's okay because the it's that's

2082
01:47:27,100 --> 01:47:30,670
actually correct I mean what a red

2083
01:47:28,600 --> 01:47:32,350
surface does is it absorbs green and

2084
01:47:30,670 --> 01:47:34,359
blue photons so the green and blue

2085
01:47:32,350 --> 01:47:36,760
photons that hit it aren't going to

2086
01:47:34,359 --> 01:47:41,319
bounce back out again right but they are

2087
01:47:36,760 --> 01:47:45,010
going to stay there so I think I just

2088
01:47:41,319 --> 01:47:47,590
need my my retained power to be wide

2089
01:47:45,010 --> 01:47:52,440
right I think I just need my retained

2090
01:47:47,590 --> 01:47:52,440
power to look like this right

2091
01:47:57,279 --> 01:48:05,699
I think so basically when we come

2092
01:48:02,529 --> 01:48:08,800
through here and we say source emits e

2093
01:48:05,699 --> 01:48:11,979
times retained power I think maybe what

2094
01:48:08,800 --> 01:48:18,820
I need to do is just say like maybe just

2095
01:48:11,979 --> 01:48:23,219
call this retain color really and say

2096
01:48:18,819 --> 01:48:26,529
that we just take the color that we had

2097
01:48:23,220 --> 01:48:30,610
that the the the light we had coming in

2098
01:48:26,529 --> 01:48:32,679
the literal value of it right and when

2099
01:48:30,609 --> 01:48:34,989
we do this retained power here what we

2100
01:48:32,680 --> 01:48:36,610
say is like okay actually what's gonna

2101
01:48:34,989 --> 01:48:40,029
happen is we're gonna subtract retain a

2102
01:48:36,609 --> 01:48:43,960
color and the retained color value is

2103
01:48:40,029 --> 01:48:47,170
going to be you know whatever we

2104
01:48:43,960 --> 01:48:49,510
actually added right so the result here

2105
01:48:47,170 --> 01:48:53,380
is the power times the light color like

2106
01:48:49,510 --> 01:48:56,010
so we add that to our desk and we return

2107
01:48:53,380 --> 01:48:59,010
it to subtract it away from what we had

2108
01:48:56,010 --> 01:48:59,010
right

2109
01:49:00,840 --> 01:49:13,900
does that help let's find out again we

2110
01:49:11,319 --> 01:49:15,909
get really far down before we start to

2111
01:49:13,899 --> 01:49:19,659
really lose power but we still are

2112
01:49:15,909 --> 01:49:21,880
losing a little bit of power so maybe

2113
01:49:19,659 --> 01:49:24,039
we're close I think it's probably it's

2114
01:49:21,880 --> 01:49:29,199
time we're supposed to be doing QA here

2115
01:49:24,039 --> 01:49:38,409
I think in three minutes right we're not

2116
01:49:29,199 --> 01:49:42,039
in QA are we are we in QA so that's a

2117
01:49:38,409 --> 01:49:45,250
lot closer right so this way we start

2118
01:49:42,039 --> 01:49:47,859
with what we had right we're then gonna

2119
01:49:45,250 --> 01:49:52,989
try to omit some of it this is what

2120
01:49:47,859 --> 01:49:55,059
we're gonna try to omit any time we send

2121
01:49:52,989 --> 01:49:57,219
light to someone else we subtract that

2122
01:49:55,060 --> 01:50:02,400
light from us and we no longer retain

2123
01:49:57,220 --> 01:50:02,400
that you know

2124
01:50:05,630 --> 01:50:13,800
that seems like it would work pretty

2125
01:50:08,969 --> 01:50:26,118
well it doesn't seem like that has a lot

2126
01:50:13,800 --> 01:50:26,119
of holes in it I don't think

2127
01:50:31,760 --> 01:50:39,170
so I think that may be more what we're

2128
01:50:34,579 --> 01:50:48,500
going for here so let's take a look at

2129
01:50:39,170 --> 01:50:51,319
our lighting samples right so if I start

2130
01:50:48,500 --> 01:50:53,449
out there's our first bounce direct

2131
01:50:51,319 --> 01:50:56,029
lighting there's our second bounce with

2132
01:50:53,449 --> 01:50:59,000
some indirect third bounce fourth bounds

2133
01:50:56,029 --> 01:51:01,099
fifth bounce that looks really nice and

2134
01:50:59,000 --> 01:51:03,319
even so I'm gonna go ahead and call that

2135
01:51:01,100 --> 01:51:21,310
victory for now because it really looks

2136
01:51:03,319 --> 01:51:21,309
pretty good to me I would say

2137
01:51:36,038 --> 01:51:45,849
now the problem with it of course is

2138
01:51:43,328 --> 01:51:48,458
that you can see the yellow you can see

2139
01:51:45,849 --> 01:51:51,849
the light shift because as these

2140
01:51:48,458 --> 01:51:55,510
surfaces can only send out those values

2141
01:51:51,849 --> 01:51:57,578
their colors will shift towards the

2142
01:51:55,510 --> 01:52:02,530
complementary color of the color they

2143
01:51:57,578 --> 01:52:05,768
send out right and that's not really

2144
01:52:02,529 --> 01:52:08,978
what we actually want to record for

2145
01:52:05,769 --> 01:52:10,739
purposes of like things that are in this

2146
01:52:08,979 --> 01:52:15,838
area that don't happen to be that color

2147
01:52:10,738 --> 01:52:15,838
right we want to use the light color

2148
01:52:18,118 --> 01:52:32,469
that was incident on the light so we

2149
01:52:22,389 --> 01:52:35,019
almost really need like two like two

2150
01:52:32,469 --> 01:52:40,149
values there right so I don't know again

2151
01:52:35,019 --> 01:52:43,208
that this keeps the this keeps the power

2152
01:52:40,149 --> 01:52:44,319
quite well but it's just not not quite

2153
01:52:43,208 --> 01:52:46,208
there so I think we kind of need to

2154
01:52:44,319 --> 01:52:50,010
sleep on this we're pretty close though

2155
01:52:46,208 --> 01:52:50,010
I'll go ahead and go to the QA

2156
01:53:16,710 --> 01:53:21,779
and you know main goal at this point is

2157
01:53:19,109 --> 01:53:23,969
just gonna be to start reducing the

2158
01:53:21,779 --> 01:53:27,229
flicker I think and then we're getting

2159
01:53:23,970 --> 01:53:27,230
pretty pretty good

2160
01:53:40,279 --> 01:53:44,759
sudonym 73 Cimmerian am i right in

2161
01:53:43,319 --> 01:53:47,279
thinking that you're taking into account

2162
01:53:44,760 --> 01:53:48,930
the geometric cosine theta factor on the

2163
01:53:47,279 --> 01:53:52,559
receiving surface but not on the

2164
01:53:48,930 --> 01:53:54,470
emitting surface yes you are correct in

2165
01:53:52,560 --> 01:53:58,080
that thinking

2166
01:53:54,470 --> 01:53:59,699
draaga in a tree like blacksmithing you

2167
01:53:58,079 --> 01:54:01,199
use your tools to make better tools over

2168
01:53:59,699 --> 01:54:02,909
time do you think programming should be

2169
01:54:01,199 --> 01:54:04,139
like this where you build tools that you

2170
01:54:02,909 --> 01:54:05,729
reuse every project or should you

2171
01:54:04,140 --> 01:54:12,000
rebuild most of your code every project

2172
01:54:05,729 --> 01:54:13,709
I so I think it's not feasible to

2173
01:54:12,000 --> 01:54:16,229
rebuild most of your code every project

2174
01:54:13,710 --> 01:54:17,069
I just don't think you can these days

2175
01:54:16,229 --> 01:54:21,029
right

2176
01:54:17,069 --> 01:54:22,649
I think rebuilding code rebuilding the

2177
01:54:21,029 --> 01:54:25,229
entire code base every project would be

2178
01:54:22,649 --> 01:54:27,779
great in a world where you just had a

2179
01:54:25,229 --> 01:54:30,209
team your team had 30 amazing

2180
01:54:27,779 --> 01:54:32,579
programmers on it and you just had tons

2181
01:54:30,210 --> 01:54:34,770
of coding power and you're just kept

2182
01:54:32,579 --> 01:54:38,189
refining things and you know the person

2183
01:54:34,770 --> 01:54:39,510
who wrote the entity system for last

2184
01:54:38,189 --> 01:54:40,710
game writes a new one this game and a

2185
01:54:39,510 --> 01:54:41,579
new and the next game a new in the next

2186
01:54:40,710 --> 01:54:43,199
game it just keeps getting better and

2187
01:54:41,579 --> 01:54:44,100
better that would be a great world right

2188
01:54:43,199 --> 01:54:50,760
everything would just be great but

2189
01:54:44,100 --> 01:54:55,260
that's not reality right that's not what

2190
01:54:50,760 --> 01:55:02,220
you typically have usually you don't

2191
01:54:55,260 --> 01:55:04,020
have the ability to usually you just

2192
01:55:02,220 --> 01:55:06,480
don't have the ability to rewrite

2193
01:55:04,020 --> 01:55:12,630
everything there's too much code in too

2194
01:55:06,479 --> 01:55:15,419
little time too few coding resources so

2195
01:55:12,630 --> 01:55:17,520
I just don't think it's practical I

2196
01:55:15,420 --> 01:55:19,140
think you have to you know first time

2197
01:55:17,520 --> 01:55:20,550
out if you're doing a whole new codebase

2198
01:55:19,140 --> 01:55:22,770
and yet you got to write what you can

2199
01:55:20,550 --> 01:55:25,470
write but I think the next time out you

2200
01:55:22,770 --> 01:55:27,330
want to only choose a few things to

2201
01:55:25,470 --> 01:55:29,850
rewrite the things that most need

2202
01:55:27,329 --> 01:55:31,920
improvement and try to keep the other

2203
01:55:29,850 --> 01:55:34,730
things if you have to make modifications

2204
01:55:31,920 --> 01:55:39,420
to them make them but don't rewrite them

2205
01:55:34,729 --> 01:55:40,919
because you don't want to be your time

2206
01:55:39,420 --> 01:55:42,899
as a finite resource and you need to

2207
01:55:40,920 --> 01:55:46,380
focus it on where you can make the

2208
01:55:42,899 --> 01:55:47,789
biggest differences so rewriting

2209
01:55:46,380 --> 01:55:49,859
everything from scratch every time

2210
01:55:47,789 --> 01:55:51,899
probably just isn't the best

2211
01:55:49,859 --> 01:55:53,609
choice there it's probably better to

2212
01:55:51,899 --> 01:55:54,899
focus your resources on doing a really

2213
01:55:53,609 --> 01:55:57,750
good job on a few things

2214
01:55:54,899 --> 01:56:02,129
and not spreading it out over all the

2215
01:55:57,750 --> 01:56:03,630
things so at least for me I try to limit

2216
01:56:02,130 --> 01:56:06,750
the number of times I have to rewrite

2217
01:56:03,630 --> 01:56:08,279
everything because that's just a way too

2218
01:56:06,750 --> 01:56:10,260
much programming especially for a single

2219
01:56:08,279 --> 01:56:11,698
programmer to do now if you have a

2220
01:56:10,260 --> 01:56:12,989
bigger team and lots of really good

2221
01:56:11,698 --> 01:56:16,500
programmers at your disposal that

2222
01:56:12,988 --> 01:56:21,089
equation may change but that is just not

2223
01:56:16,500 --> 01:56:23,279
very likely plus there are other

2224
01:56:21,090 --> 01:56:24,960
ancillary concerns there such as it

2225
01:56:23,279 --> 01:56:26,189
sometimes is very hard to redo

2226
01:56:24,960 --> 01:56:29,429
everything at once because you don't

2227
01:56:26,189 --> 01:56:31,169
have any sticking point right when

2228
01:56:29,429 --> 01:56:32,609
you're going to do a new revenging

2229
01:56:31,170 --> 01:56:34,529
sometimes it helps to keep the core of

2230
01:56:32,609 --> 01:56:36,929
the old engine to have things that know

2231
01:56:34,529 --> 01:56:38,670
how things will interact right um so

2232
01:56:36,929 --> 01:56:40,469
it's not always possible to rewrite

2233
01:56:38,670 --> 01:56:43,440
everything anyway in that sense you may

2234
01:56:40,469 --> 01:56:48,510
it may be better the other way around I

2235
01:56:43,439 --> 01:56:49,979
I don't know it's hard to say suitum

2236
01:56:48,510 --> 01:56:51,600
seriously that may explain why it wasn't

2237
01:56:49,979 --> 01:56:56,309
energy preserving is that actually

2238
01:56:51,600 --> 01:56:59,400
correct though I thought that on the

2239
01:56:56,310 --> 01:57:05,489
emission side you're not usually taking

2240
01:56:59,399 --> 01:57:09,799
into account the angle Plus if anything

2241
01:57:05,488 --> 01:57:09,799
that would lose us energy wouldn't it

2242
01:57:19,029 --> 01:57:23,988
more 85 could you explain the purpose of

2243
01:57:21,710 --> 01:57:26,630
multiple pointer levels like void star

2244
01:57:23,988 --> 01:57:29,178
star star star star whatever is it just

2245
01:57:26,630 --> 01:57:30,949
array of array of array of array I can't

2246
01:57:29,179 --> 01:57:38,390
think of a viable example can you give

2247
01:57:30,948 --> 01:57:39,919
one of pointers to pointers how many can

2248
01:57:38,390 --> 01:57:43,969
you be specific about how many levels

2249
01:57:39,920 --> 01:57:46,760
deep you want an example like is void

2250
01:57:43,969 --> 01:57:48,939
star star also confusing to you or is

2251
01:57:46,760 --> 01:57:51,289
only void star star star star star

2252
01:57:48,939 --> 01:57:53,089
confusing to you like is it only when it

2253
01:57:51,289 --> 01:58:02,390
gets to five that you're not sure what

2254
01:57:53,090 --> 01:58:03,739
the example would be empty s MOX is the

2255
01:58:02,390 --> 01:58:06,020
direction of the light correctly

2256
01:58:03,738 --> 01:58:07,939
calculated if you only take positive Z

2257
01:58:06,020 --> 01:58:15,170
into account magazine is also correct

2258
01:58:07,939 --> 01:58:20,319
nor oh that's a very good point that is

2259
01:58:15,170 --> 01:58:24,408
a very good point my friend know we

2260
01:58:20,319 --> 01:58:28,269
thank you for catching that we do need a

2261
01:58:24,408 --> 01:58:28,269
sign here because this

2262
01:58:41,439 --> 01:58:52,249
there we go so this right here is

2263
01:58:49,668 --> 01:58:54,800
technically positive or negative you're

2264
01:58:52,248 --> 01:58:57,978
right so when we reconstruct this we

2265
01:58:54,800 --> 01:59:00,559
actually need to do that properly right

2266
01:58:57,979 --> 01:59:02,628
and fortunately for us we have a lot of

2267
01:59:00,559 --> 01:59:06,168
extra information here at our disposal

2268
01:59:02,628 --> 01:59:07,819
which it just happens to be handy but

2269
01:59:06,168 --> 01:59:10,809
for example light color what we can do

2270
01:59:07,819 --> 01:59:14,498
is pack that into say the r-value right

2271
01:59:10,809 --> 01:59:19,989
so what we could do here is say if light

2272
01:59:14,498 --> 01:59:23,658
c dot r is less than zero light c dot r

2273
01:59:19,988 --> 01:59:26,509
equals negative light c dot R and light

2274
01:59:23,658 --> 01:59:28,819
B dot Z equals negative light T dot Z

2275
01:59:26,510 --> 01:59:30,469
right so what we can do is encode the

2276
01:59:28,819 --> 01:59:33,799
sign of Z which we don't know

2277
01:59:30,469 --> 01:59:38,529
unfortunately at this point right we can

2278
01:59:33,800 --> 01:59:40,989
encode that into the R value and and

2279
01:59:38,529 --> 01:59:45,800
have our cake and eat it too if you will

2280
01:59:40,988 --> 01:59:49,458
so inside render group here let's go to

2281
01:59:45,800 --> 01:59:57,829
platform so in this light data we will

2282
01:59:49,458 --> 02:00:00,050
do like sine DZ times C R right so when

2283
01:59:57,828 --> 02:00:03,648
we pack that down what we can then do is

2284
02:00:00,050 --> 02:00:06,320
say all right that color value when we

2285
02:00:03,649 --> 02:00:09,559
pack it in here what we can do is say

2286
02:00:06,319 --> 02:00:13,639
that that's not the function this is the

2287
02:00:09,559 --> 02:00:17,269
function here what we can do is say all

2288
02:00:13,639 --> 02:00:24,260
right the sine of DZ we'll multiply that

2289
02:00:17,269 --> 02:00:28,369
by that they know why we're still doing

2290
02:00:24,260 --> 02:00:30,289
that back out isn't for it we will take

2291
02:00:28,368 --> 02:00:34,339
that sign and we'll put it in there

2292
02:00:30,288 --> 02:00:38,408
right all right so that's we don't have

2293
02:00:34,340 --> 02:00:38,409
a sine function so we'll just do if d

2294
02:00:38,800 --> 02:00:49,570
let's see is less than zero you got C

2295
02:00:44,100 --> 02:00:51,789
times equal are negative du Z see that R

2296
02:00:49,569 --> 02:00:55,920
equals negative two that are right so we

2297
02:00:51,789 --> 02:00:55,920
just flip the sign of the red channel

2298
02:00:57,329 --> 02:01:05,189
and off we go so that that was just a

2299
02:01:01,779 --> 02:01:07,359
straight-up bug with the light direction

2300
02:01:05,189 --> 02:01:10,509
so thanks very much for that catch

2301
02:01:07,359 --> 02:01:12,659
that's like totally just me not thinking

2302
02:01:10,510 --> 02:01:12,659
it through

2303
02:01:29,109 --> 02:01:32,500
in the case of the red wall only being

2304
02:01:30,970 --> 02:01:33,940
lit by the third or fourth bounce

2305
02:01:32,500 --> 02:01:35,229
shouldn't the red well not reflect any

2306
02:01:33,939 --> 02:01:38,079
red light because the blue wall is

2307
02:01:35,229 --> 02:01:40,569
mostly only reflecting blue light well

2308
02:01:38,079 --> 02:01:42,880
sort of but not necessarily the reason

2309
02:01:40,569 --> 02:01:45,549
is because there's more than just that

2310
02:01:42,880 --> 02:01:48,250
that's affecting the red wall so like

2311
02:01:45,550 --> 02:01:51,820
all of these surfaces can distribute

2312
02:01:48,250 --> 02:01:55,000
light to the red wall right so like for

2313
02:01:51,819 --> 02:01:57,309
example here all of these can light this

2314
02:01:55,000 --> 02:02:02,680
wall so you don't actually need the blue

2315
02:01:57,310 --> 02:02:04,960
wall to bounce does that make sense

2316
02:02:02,680 --> 02:02:08,980
if it was only the blue wall then yes

2317
02:02:04,960 --> 02:02:12,250
the red wall would never get lit at all

2318
02:02:08,979 --> 02:02:15,299
if it wasn't indirect light but it has

2319
02:02:12,250 --> 02:02:15,300
these Gray's here

2320
02:02:26,269 --> 02:02:29,570
Oh student observant searcing yeah but

2321
02:02:28,158 --> 02:02:33,170
think back the original problem was that

2322
02:02:29,569 --> 02:02:35,840
the solution was blowing up well yeah

2323
02:02:33,170 --> 02:02:38,149
the problem is the original solution I

2324
02:02:35,840 --> 02:02:39,349
just constantly a community to light

2325
02:02:38,149 --> 02:02:42,819
though so it would blow up no matter

2326
02:02:39,349 --> 02:02:45,288
what the light transfer was here I'm Sam

2327
02:02:42,819 --> 02:02:47,328
because all it did was add light it

2328
02:02:45,288 --> 02:02:51,979
never had a way of removing light from

2329
02:02:47,328 --> 02:02:54,439
the system at all so you would always

2330
02:02:51,979 --> 02:02:57,018
keep the light you had and add any light

2331
02:02:54,439 --> 02:02:59,448
that came in so that's gonna blow up no

2332
02:02:57,019 --> 02:03:01,159
matter what right

2333
02:02:59,448 --> 02:03:03,649
and we didn't try to do a version that

2334
02:03:01,158 --> 02:03:08,839
only sent out exactly the same amount of

2335
02:03:03,649 --> 02:03:11,779
light because we don't have a way to do

2336
02:03:08,840 --> 02:03:14,840
that since it's not a closed environment

2337
02:03:11,779 --> 02:03:17,238
we have to check to see whether we hit

2338
02:03:14,840 --> 02:03:18,949
and only subtract that light away

2339
02:03:17,238 --> 02:03:20,928
because we don't know how much will

2340
02:03:18,948 --> 02:03:26,779
otherwise all of it just goes out from

2341
02:03:20,929 --> 02:03:28,460
the atmosphere right at the moment more

2342
02:03:26,779 --> 02:03:33,828
85 avoid star starters clear everything

2343
02:03:28,460 --> 02:03:40,730
above is bogus so star star star so

2344
02:03:33,828 --> 02:03:43,759
triple you'd say was bogus so you're

2345
02:03:40,729 --> 02:03:49,279
basically saying void star star star

2346
02:03:43,760 --> 02:03:54,498
this is this is the bogus part so

2347
02:03:49,279 --> 02:03:56,868
basically you're asking if the address

2348
02:03:54,498 --> 02:03:59,389
of the address of the address of a

2349
02:03:56,868 --> 02:04:02,920
pointer right I guess or sorry the

2350
02:03:59,389 --> 02:04:08,300
address of the address of a pointer and

2351
02:04:02,920 --> 02:04:10,699
the answer of course is like you know

2352
02:04:08,300 --> 02:04:18,559
maybe so maybe not it depends you could

2353
02:04:10,698 --> 02:04:20,029
end up in this situation so what we're

2354
02:04:18,559 --> 02:04:22,969
talking about here is we have a location

2355
02:04:20,029 --> 02:04:26,479
that's got a pointer in it right so

2356
02:04:22,969 --> 02:04:30,710
here's our void star whatever it is so

2357
02:04:26,479 --> 02:04:34,578
this is the data that we're actually

2358
02:04:30,710 --> 02:04:36,800
talking about here right and so in this

2359
02:04:34,578 --> 02:04:39,420
case we may say well all right let's

2360
02:04:36,800 --> 02:04:42,390
suppose we had a system where we

2361
02:04:39,420 --> 02:04:44,429
modifying ones of these so let's say

2362
02:04:42,390 --> 02:04:48,900
there's just an array of pointers going

2363
02:04:44,429 --> 02:04:53,069
down right we're trying to modify well

2364
02:04:48,899 --> 02:04:56,339
all right let's say we had a pointer

2365
02:04:53,069 --> 02:04:58,049
here that points to the one that we're

2366
02:04:56,340 --> 02:05:03,480
modifying right now so maybe we're in a

2367
02:04:58,050 --> 02:05:05,429
for loop or something right and now

2368
02:05:03,479 --> 02:05:07,738
let's say we have a function that we do

2369
02:05:05,429 --> 02:05:09,480
with this pointer that advances it and

2370
02:05:07,738 --> 02:05:11,459
maybe it advances it it doesn't just go

2371
02:05:09,479 --> 02:05:15,329
linearly advanced by something so we

2372
02:05:11,460 --> 02:05:18,750
have in advance and it needs to take a

2373
02:05:15,329 --> 02:05:22,859
void star star star the pointer right

2374
02:05:18,750 --> 02:05:24,510
and it's like you know star a plus plus

2375
02:05:22,859 --> 02:05:27,000
to like move this thing down or

2376
02:05:24,510 --> 02:05:28,739
something right so it's advanced this is

2377
02:05:27,000 --> 02:05:32,520
void star star a or something we say

2378
02:05:28,738 --> 02:05:36,000
advance address of a right so you could

2379
02:05:32,520 --> 02:05:40,850
imagine a case where three trip stars is

2380
02:05:36,000 --> 02:05:40,850
not that bizarre right

2381
02:05:58,920 --> 02:06:02,319
sudonym sandy just a suggestion the

2382
02:06:01,119 --> 02:06:03,939
ultimate solution might be to use

2383
02:06:02,319 --> 02:06:05,109
temporal coherence do one bounce for

2384
02:06:03,939 --> 02:06:10,529
frame and use the previous frame

2385
02:06:05,109 --> 02:06:14,439
solution for the indirect lighting term

2386
02:06:10,529 --> 02:06:17,469
yes that is almost certainly something

2387
02:06:14,439 --> 02:06:21,579
we will do the problem that we will have

2388
02:06:17,470 --> 02:06:23,170
and we are gonna have to figure out a

2389
02:06:21,579 --> 02:06:27,189
good way to solve it it's gonna be nasty

2390
02:06:23,170 --> 02:06:30,730
is figuring out frame to frame what

2391
02:06:27,189 --> 02:06:33,009
lighting samples correspond and the

2392
02:06:30,729 --> 02:06:36,429
reason for that is just because the

2393
02:06:33,010 --> 02:06:44,070
environment we could match up probably

2394
02:06:36,430 --> 02:06:45,720
by rote but the sprites we can't so I

2395
02:06:44,069 --> 02:06:48,670
don't know

2396
02:06:45,720 --> 02:06:51,130
we definitely need temporal smoothing

2397
02:06:48,670 --> 02:06:54,000
anyway but I'm not sure how we're gonna

2398
02:06:51,130 --> 02:06:54,000
do it exactly

2399
02:07:01,408 --> 02:07:05,638
Dirk and Dario two weeks ago I asked

2400
02:07:03,929 --> 02:07:06,779
about sound input I just want to specify

2401
02:07:05,639 --> 02:07:08,699
that I was thinking about the data

2402
02:07:06,779 --> 02:07:10,170
structure to store the sound input so

2403
02:07:08,698 --> 02:07:11,638
like you have it set up with the

2404
02:07:10,170 --> 02:07:14,779
platform layer handling the sound input

2405
02:07:11,639 --> 02:07:14,779
and passing it to the game

2406
02:07:25,429 --> 02:07:32,779
uh well I think all you really have to

2407
02:07:28,969 --> 02:07:34,579
do is the game just provides a buffer or

2408
02:07:32,779 --> 02:07:36,460
the platform layer provides a buffer

2409
02:07:34,579 --> 02:07:41,238
that's like here's the sound I recorded

2410
02:07:36,460 --> 02:07:56,739
last rain right that that should be it

2411
02:07:41,238 --> 02:07:56,738
I think all right I'm gonna shut it down

2412
02:08:12,349 --> 02:08:16,139
all right thank you very much everyone

2413
02:08:14,939 --> 02:08:17,279
for joining me for the upside of

2414
02:08:16,139 --> 02:08:19,770
handmade hero it's been a pleasure

2415
02:08:17,279 --> 02:08:21,328
coding with you as always if you would

2416
02:08:19,770 --> 02:08:23,040
like to follow along the series you can

2417
02:08:21,328 --> 02:08:24,929
always peer to the game on handmade hero

2418
02:08:23,039 --> 02:08:28,019
org and it comes with the full source

2419
02:08:24,929 --> 02:08:29,609
code so you can follow along home let's

2420
02:08:28,020 --> 02:08:30,900
have a forum site you can go to if you

2421
02:08:29,609 --> 02:08:32,639
want to ask questions we have a

2422
02:08:30,899 --> 02:08:35,069
contribution page if you want to donate

2423
02:08:32,639 --> 02:08:37,679
to projects that support handmade hero

2424
02:08:35,069 --> 02:08:41,578
like the episode guide which is right

2425
02:08:37,679 --> 02:08:43,828
here or the handmade Network which does

2426
02:08:41,578 --> 02:08:46,558
the forums there's also a schedule bot

2427
02:08:43,828 --> 02:08:48,389
which tells you I'm gonna be live and a

2428
02:08:46,559 --> 02:08:49,800
if you refresh this page a little

2429
02:08:48,389 --> 02:08:52,800
countdown timer which tells you we're

2430
02:08:49,800 --> 02:08:54,750
gonna be live as well that's it for

2431
02:08:52,800 --> 02:08:57,690
today I'll be back tomorrow when we can

2432
02:08:54,750 --> 02:09:01,020
try to do a little bit more work with

2433
02:08:57,689 --> 02:09:03,750
our lighting solution and start to sort

2434
02:09:01,020 --> 02:09:06,230
of narrow in on a good final like

2435
02:09:03,750 --> 02:09:07,979
approach we're going to use that we can

2436
02:09:06,229 --> 02:09:11,189
start to think about how we're going to

2437
02:09:07,979 --> 02:09:13,589
accelerate and to the pseudonym 73's

2438
02:09:11,189 --> 02:09:15,569
point at the end of the stream how we

2439
02:09:13,590 --> 02:09:19,860
might break that out into something that

2440
02:09:15,569 --> 02:09:22,618
is more coherent over time and isn't

2441
02:09:19,859 --> 02:09:24,808
doesn't require within a single frame us

2442
02:09:22,618 --> 02:09:27,389
to cast the number of race it would take

2443
02:09:24,809 --> 02:09:28,679
to make it clean so we'll be doing that

2444
02:09:27,389 --> 02:09:30,690
tomorrow hope to see you back here for

2445
02:09:28,679 --> 02:09:32,489
that until then have fun programming and

2446
02:09:30,689 --> 02:09:35,000
I'll see everyone on the Internet

2447
02:09:32,488 --> 02:09:35,000
take it easy everybody

