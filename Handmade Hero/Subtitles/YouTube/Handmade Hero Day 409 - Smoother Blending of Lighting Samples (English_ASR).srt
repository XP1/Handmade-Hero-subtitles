1
00:00:01,970 --> 00:00:06,389
hello everybody and welcome to handmade

2
00:00:04,650 --> 00:00:10,199
Hero the show we code a complete game

3
00:00:06,389 --> 00:00:12,839
live on stream we have to do some

4
00:00:10,199 --> 00:00:15,359
thinking today about how we want to

5
00:00:12,839 --> 00:00:18,448
proceed with our lighting now that

6
00:00:15,359 --> 00:00:21,149
things are actually working in the

7
00:00:18,449 --> 00:00:23,279
OpenGL driver and we sort of have the

8
00:00:21,149 --> 00:00:25,948
nice luxury of actually being able to

9
00:00:23,278 --> 00:00:28,230
debug our graphics card stuff now and

10
00:00:25,949 --> 00:00:29,939
you can even crash and we can still

11
00:00:28,230 --> 00:00:32,340
stream because we're now on two separate

12
00:00:29,939 --> 00:00:33,929
machines one for streaming and one for

13
00:00:32,340 --> 00:00:38,700
programming and one of the things that

14
00:00:33,929 --> 00:00:43,619
happens not to it's not too infrequent

15
00:00:38,700 --> 00:00:45,570
actually when you have a when you have

16
00:00:43,619 --> 00:00:48,238
to do sort of graphics code that's a

17
00:00:45,570 --> 00:00:50,670
little unusual or does anything that

18
00:00:48,238 --> 00:00:52,198
could be a little squirrely you often

19
00:00:50,670 --> 00:00:54,300
will crash your graphics driver that's

20
00:00:52,198 --> 00:00:55,530
just something that can happen and so

21
00:00:54,299 --> 00:00:56,849
it's pretty nice now not to have to

22
00:00:55,530 --> 00:00:59,308
worry about that we can just crash the

23
00:00:56,850 --> 00:01:04,308
graphics driver all we want and it's no

24
00:00:59,308 --> 00:01:04,308
big deal so when we left off yesterday

25
00:01:05,269 --> 00:01:10,199
we get this running here when we left

26
00:01:08,849 --> 00:01:11,879
off yesterday we were kind of playing

27
00:01:10,200 --> 00:01:14,219
around with the way these things kind of

28
00:01:11,879 --> 00:01:16,109
get set into voxels and as you can see

29
00:01:14,219 --> 00:01:17,819
we sort of we ended up in a position

30
00:01:16,109 --> 00:01:20,030
where we now can play around with the

31
00:01:17,819 --> 00:01:22,889
lighting and try to for how we're gonna

32
00:01:20,030 --> 00:01:24,900
get these sort of voxel based samples in

33
00:01:22,890 --> 00:01:28,609
there we sort of have two separate

34
00:01:24,900 --> 00:01:31,740
problems that we need to address and

35
00:01:28,609 --> 00:01:36,509
also I should mention that I think I I

36
00:01:31,739 --> 00:01:40,978
was kind of sitting around thinking

37
00:01:36,509 --> 00:01:42,750
about some stuff that I like I was

38
00:01:40,978 --> 00:01:45,569
wondering about some depth occlusion

39
00:01:42,750 --> 00:01:46,890
stuff today actually I think last night

40
00:01:45,569 --> 00:01:48,989
as I was falling asleep I was thinking

41
00:01:46,890 --> 00:01:52,228
about it and after this I would also

42
00:01:48,989 --> 00:01:54,089
like to revisit how we're doing 2d

43
00:01:52,228 --> 00:01:55,828
sprite compositing into the 3d world

44
00:01:54,090 --> 00:01:57,509
because I thought of some things that I

45
00:01:55,828 --> 00:01:59,328
didn't try there and I would be

46
00:01:57,509 --> 00:02:01,920
interested in trying them at some point

47
00:01:59,328 --> 00:02:03,599
so I have to remember to do that just

48
00:02:01,920 --> 00:02:05,640
put a little mental to do in there like

49
00:02:03,599 --> 00:02:08,128
something I wanted to think about a

50
00:02:05,640 --> 00:02:10,318
little bit more just kind of work work

51
00:02:08,128 --> 00:02:12,689
through it a little bit differently than

52
00:02:10,318 --> 00:02:15,079
we had been but that's neither here nor

53
00:02:12,689 --> 00:02:18,449
there anyway

54
00:02:15,080 --> 00:02:21,000
so the situation as it stands right now

55
00:02:18,449 --> 00:02:22,919
is we backed off we we kind of like went

56
00:02:21,000 --> 00:02:24,479
down to a coarser grain thing and sort

57
00:02:22,919 --> 00:02:25,829
of took a look at what that would look

58
00:02:24,479 --> 00:02:27,959
like if we had smaller and smaller

59
00:02:25,830 --> 00:02:31,340
voxels just so we could sort of see what

60
00:02:27,960 --> 00:02:33,510
the difference was with various lighting

61
00:02:31,340 --> 00:02:38,550
you know different Lighting's we could

62
00:02:33,509 --> 00:02:40,079
use and the way that we're storing

63
00:02:38,550 --> 00:02:42,000
things right now is we have a voxel

64
00:02:40,080 --> 00:02:43,170
lookup that allows any pixel that wants

65
00:02:42,000 --> 00:02:45,990
to try to figure out what its lighting

66
00:02:43,169 --> 00:02:49,229
value would be to go ahead and calculate

67
00:02:45,990 --> 00:02:52,379
the lighting if it wants to from any

68
00:02:49,229 --> 00:02:54,689
number of sources based on a linked list

69
00:02:52,379 --> 00:02:56,849
that's invoke CIL's that it can look up

70
00:02:54,689 --> 00:02:59,069
into based on its position so any

71
00:02:56,849 --> 00:03:00,989
particular point in here right there's a

72
00:02:59,069 --> 00:03:04,699
voxel and you can see it because we now

73
00:03:00,990 --> 00:03:07,920
have sort of chunked lighting in here

74
00:03:04,699 --> 00:03:11,939
there's a voxel at each sort of position

75
00:03:07,919 --> 00:03:14,159
that's about you know sort of a square

76
00:03:11,939 --> 00:03:15,329
this big and it's a fairly elongated

77
00:03:14,159 --> 00:03:18,629
because there's less of them in Z so

78
00:03:15,330 --> 00:03:21,090
there's like they're longer than Z and

79
00:03:18,629 --> 00:03:22,590
what you do is wherever you are in the

80
00:03:21,090 --> 00:03:26,159
voxel you can look up and get a linked

81
00:03:22,590 --> 00:03:28,050
list of computed reflect reflection

82
00:03:26,159 --> 00:03:30,299
points like basically points where the

83
00:03:28,050 --> 00:03:33,180
lighting has been computed that you can

84
00:03:30,300 --> 00:03:34,739
interpolate between and the problem that

85
00:03:33,180 --> 00:03:36,629
we're going to have with this obviously

86
00:03:34,739 --> 00:03:40,500
we have some work to do to try and make

87
00:03:36,629 --> 00:03:42,810
this work cleanly but the problem that

88
00:03:40,500 --> 00:03:44,430
we're gonna have with this is as we want

89
00:03:42,810 --> 00:03:46,349
to interpolate the lighting we're gonna

90
00:03:44,430 --> 00:03:48,540
have problems where we have to make sure

91
00:03:46,349 --> 00:03:51,030
that our voxel is about the same density

92
00:03:48,539 --> 00:03:51,629
as a lot of examples that we've put into

93
00:03:51,030 --> 00:03:53,909
it

94
00:03:51,629 --> 00:03:56,250
hopefully the leg samples actually are a

95
00:03:53,909 --> 00:03:58,229
little more dense than the voxel itself

96
00:03:56,250 --> 00:04:00,930
so that when things are interpolating

97
00:03:58,229 --> 00:04:03,959
they can always have some points to

98
00:04:00,930 --> 00:04:05,250
interpolate between now the first thing

99
00:04:03,959 --> 00:04:06,959
I want to do today before we get any

100
00:04:05,250 --> 00:04:11,669
further into this is just try doing a

101
00:04:06,959 --> 00:04:14,670
basic trilinear blend so for any given

102
00:04:11,669 --> 00:04:18,389
pixel wherever it is it'll do the

103
00:04:14,669 --> 00:04:20,219
lighting on essentially like a the same

104
00:04:18,389 --> 00:04:23,370
way that we would sample a texture if

105
00:04:20,220 --> 00:04:27,090
you will or something like this where we

106
00:04:23,370 --> 00:04:28,019
blend between the lighting sample the

107
00:04:27,089 --> 00:04:29,939
computed lighting sample

108
00:04:28,019 --> 00:04:35,519
values in each of the four voxels or

109
00:04:29,939 --> 00:04:36,959
something like this right and I guess

110
00:04:35,519 --> 00:04:38,639
what I should do first is kind of go

111
00:04:36,959 --> 00:04:41,638
over what the problems are that we're

112
00:04:38,639 --> 00:04:43,408
gonna have why we you know why this is a

113
00:04:41,639 --> 00:04:45,780
bit of a tricky situation that's gonna

114
00:04:43,408 --> 00:04:50,069
require some finesse to try and get

115
00:04:45,779 --> 00:04:50,609
right and so on and so forth so here we

116
00:04:50,069 --> 00:04:55,530
are

117
00:04:50,610 --> 00:04:58,800
I'm day 409 by the way can you is there

118
00:04:55,529 --> 00:05:02,818
a way to get Milton to not have a title

119
00:04:58,800 --> 00:05:04,650
bar or anything probably not that's

120
00:05:02,819 --> 00:05:09,090
gonna say we have this sort of nice for

121
00:05:04,649 --> 00:05:11,908
coder when we when we load up the code

122
00:05:09,089 --> 00:05:16,829
here we have the sort of no nice no

123
00:05:11,908 --> 00:05:19,050
title bar thing I leave the file bar up

124
00:05:16,829 --> 00:05:20,728
for people because they asked for it but

125
00:05:19,050 --> 00:05:23,310
normally on my dead machine I get rid of

126
00:05:20,728 --> 00:05:26,339
that too so you get this short of just a

127
00:05:23,310 --> 00:05:28,019
nice screen of just just the code it

128
00:05:26,339 --> 00:05:29,489
would be kind of neat for Milton to get

129
00:05:28,019 --> 00:05:31,378
rid of its title bar too because then

130
00:05:29,490 --> 00:05:35,218
you could have like nothing right it'd

131
00:05:31,379 --> 00:05:36,509
just be a big blackboard but that's kind

132
00:05:35,218 --> 00:05:38,279
of a minor thing I should just go do it

133
00:05:36,509 --> 00:05:43,800
myself the source code is available send

134
00:05:38,279 --> 00:05:46,619
a pull request anyway on day 409 what I

135
00:05:43,800 --> 00:05:55,228
wanted to talk about here is the light

136
00:05:46,620 --> 00:05:57,389
interpolation and so the problem that we

137
00:05:55,228 --> 00:06:01,800
have with light interpolation is we have

138
00:05:57,389 --> 00:06:04,620
the idea and I'll draw sort of a voxel

139
00:06:01,800 --> 00:06:10,079
trilinear case here so that we can sort

140
00:06:04,620 --> 00:06:12,209
of work towards that we have a voxel and

141
00:06:10,079 --> 00:06:14,038
we've got somewhere in this voxel we

142
00:06:12,209 --> 00:06:18,810
have a pixel that we're trying to light

143
00:06:14,038 --> 00:06:21,959
on the screen right and so what it knows

144
00:06:18,810 --> 00:06:23,879
is it knows we're in the voxel it lands

145
00:06:21,959 --> 00:06:26,399
so it knows for example that it's in

146
00:06:23,879 --> 00:06:28,680
this cube of the voxel well it's not

147
00:06:26,399 --> 00:06:34,109
really cubed because it's it's i think

148
00:06:28,680 --> 00:06:37,439
the z direction is less sampled i don't

149
00:06:34,110 --> 00:06:39,899
remember exactly how we left it set up

150
00:06:37,439 --> 00:06:41,250
but point is it's probably about a cube

151
00:06:39,899 --> 00:06:43,050
it's more like a

152
00:06:41,250 --> 00:06:47,220
it's a right rectangular prism of some

153
00:06:43,050 --> 00:06:48,810
kind so anyway we have this this place

154
00:06:47,220 --> 00:06:50,640
where we want to compute the lighting

155
00:06:48,810 --> 00:06:53,850
and we know that it's inside a

156
00:06:50,639 --> 00:06:55,589
particular cube of the voxel or right

157
00:06:53,850 --> 00:06:57,480
rectangular prism as the case may be and

158
00:06:55,589 --> 00:07:00,179
what we want to do is we want to then

159
00:06:57,480 --> 00:07:04,740
take some measure of the lighting we've

160
00:07:00,180 --> 00:07:07,319
computed and apply it to this pixel that

161
00:07:04,740 --> 00:07:11,550
we're trying to light now all we have

162
00:07:07,319 --> 00:07:14,790
inside this text box low rather is a

163
00:07:11,550 --> 00:07:18,030
linked list right so we've got a linked

164
00:07:14,790 --> 00:07:19,710
list of lighting samples and the

165
00:07:18,029 --> 00:07:23,399
lighting samples have like a position

166
00:07:19,709 --> 00:07:25,859
and a color right so they sort of say

167
00:07:23,399 --> 00:07:28,289
well you know I was over here and I was

168
00:07:25,860 --> 00:07:31,560
this color or I was over here and I was

169
00:07:28,290 --> 00:07:34,169
this color or whatever and so there's a

170
00:07:31,560 --> 00:07:37,860
lot of different ways that we can try to

171
00:07:34,168 --> 00:07:40,079
work with this right so let's start with

172
00:07:37,860 --> 00:07:43,169
the simplest possible thing we could do

173
00:07:40,079 --> 00:07:46,800
and the one that would be the cleanest

174
00:07:43,168 --> 00:07:49,379
to implement and easiest right and who

175
00:07:46,800 --> 00:07:51,090
knows maybe it's even like what we

176
00:07:49,379 --> 00:07:53,610
should do I mean it could be that it's

177
00:07:51,089 --> 00:07:56,009
fine but it has some drawbacks and I'll

178
00:07:53,610 --> 00:07:58,110
say what they're in second so one thing

179
00:07:56,009 --> 00:08:00,779
we could do is say well just forget it

180
00:07:58,110 --> 00:08:03,840
like don't bother storing this

181
00:08:00,779 --> 00:08:06,569
information at all let's just store

182
00:08:03,839 --> 00:08:09,149
whatever the average color value was

183
00:08:06,569 --> 00:08:13,620
that right and then just use that as the

184
00:08:09,149 --> 00:08:16,589
lighting done right if we did that so

185
00:08:13,620 --> 00:08:20,970
each voxel positioned just all the voxel

186
00:08:16,589 --> 00:08:24,689
had in it was knowledge of what its

187
00:08:20,970 --> 00:08:28,080
color value should be light wise then in

188
00:08:24,689 --> 00:08:31,889
each of these locations I would have one

189
00:08:28,079 --> 00:08:35,218
color and so I could just take using

190
00:08:31,889 --> 00:08:38,519
trilinear interpolation on these eight

191
00:08:35,219 --> 00:08:40,740
samples I could just take whatever the

192
00:08:38,519 --> 00:08:43,158
location of the pixel being filled was

193
00:08:40,740 --> 00:08:45,799
and know what it's lighting contribution

194
00:08:43,158 --> 00:08:51,149
what kind of light it was receiving

195
00:08:45,799 --> 00:08:53,609
strictly based on that right that would

196
00:08:51,149 --> 00:08:56,039
be all I would need to do

197
00:08:53,610 --> 00:08:57,810
and so that's one thing that we could do

198
00:08:56,039 --> 00:08:59,759
and if we were gonna do that then what

199
00:08:57,809 --> 00:09:01,409
we would do is rather than store rather

200
00:08:59,759 --> 00:09:03,179
than compute with the reflected light

201
00:09:01,409 --> 00:09:04,919
was at those points we just record the

202
00:09:03,179 --> 00:09:09,449
incident light at those points during

203
00:09:04,919 --> 00:09:10,740
our letting pass and that's what we

204
00:09:09,450 --> 00:09:13,140
would store here so we know that the

205
00:09:10,740 --> 00:09:16,519
generalized like amount of incident

206
00:09:13,139 --> 00:09:16,519
light at this point is blah

207
00:09:16,639 --> 00:09:21,059
now we chose to do something a little

208
00:09:19,289 --> 00:09:26,939
bit better than that in terms of what we

209
00:09:21,059 --> 00:09:28,889
store Jimmy which is that inside here

210
00:09:26,940 --> 00:09:30,480
what we actually store is a position and

211
00:09:28,889 --> 00:09:32,309
a color which is to say that we have

212
00:09:30,480 --> 00:09:36,149
multiple pieces of information about

213
00:09:32,309 --> 00:09:38,578
where inside this box all our samples

214
00:09:36,149 --> 00:09:40,740
were taken so that if we for example

215
00:09:38,578 --> 00:09:42,269
took one thing on this side of the box

216
00:09:40,740 --> 00:09:44,490
law and one thing on this side of the

217
00:09:42,269 --> 00:09:48,000
voxel then we could use interpolation

218
00:09:44,490 --> 00:09:49,860
within the voxel itself without looking

219
00:09:48,000 --> 00:09:51,690
outside the voxel to actually give more

220
00:09:49,860 --> 00:09:56,550
information about how color varies over

221
00:09:51,690 --> 00:09:58,589
the voxel interior to its own volume we

222
00:09:56,549 --> 00:10:00,028
could actually vary it based on

223
00:09:58,589 --> 00:10:01,709
information strictly related to this

224
00:10:00,028 --> 00:10:03,179
voxel without even ever looking outside

225
00:10:01,708 --> 00:10:08,549
the voxel which gives us even more

226
00:10:03,179 --> 00:10:11,939
information right and so the problem

227
00:10:08,549 --> 00:10:14,328
with that is that once we have a

228
00:10:11,940 --> 00:10:17,279
particular piece of information

229
00:10:14,328 --> 00:10:20,069
regarding what happens inside the voxel

230
00:10:17,278 --> 00:10:23,730
we now no longer really have any way to

231
00:10:20,070 --> 00:10:26,670
figure out what we would do about when

232
00:10:23,730 --> 00:10:29,459
we get to the edges of the voxel right

233
00:10:26,669 --> 00:10:31,409
because let's take the simpler case to

234
00:10:29,458 --> 00:10:33,239
draw where we were doing this as

235
00:10:31,409 --> 00:10:35,789
bilinear interpolation because there's

236
00:10:33,240 --> 00:10:37,709
the problem exists in in any dimension

237
00:10:35,789 --> 00:10:43,799
it doesn't matter whether you're in 1d

238
00:10:37,708 --> 00:10:46,859
2d 3d etc so if I'm in two dimensions

239
00:10:43,799 --> 00:10:48,569
and I had exactly the same scenario then

240
00:10:46,860 --> 00:10:50,250
what I was proposing is the first and

241
00:10:48,570 --> 00:10:52,260
easy solution is if we pretend that

242
00:10:50,250 --> 00:10:55,610
there is an incident light value at the

243
00:10:52,259 --> 00:10:58,439
center of each of the quad of the

244
00:10:55,610 --> 00:11:00,180
squares of my quadrilateral here for by

245
00:10:58,440 --> 00:11:02,250
the interpolation and I've got a

246
00:11:00,179 --> 00:11:03,750
particular pixel I want to fill then

247
00:11:02,250 --> 00:11:05,940
it's a simple case of bilinear

248
00:11:03,750 --> 00:11:07,289
interpolation as we said before to

249
00:11:05,940 --> 00:11:09,210
figure out what the color

250
00:11:07,289 --> 00:11:11,849
or into this case incident light should

251
00:11:09,210 --> 00:11:13,259
be at this point because bilinear

252
00:11:11,850 --> 00:11:15,029
interpolation is very straightforward

253
00:11:13,259 --> 00:11:18,389
and we know that it will be continuous

254
00:11:15,029 --> 00:11:20,309
right when I get to here I will be set

255
00:11:18,389 --> 00:11:23,069
up to be exactly on this line so that

256
00:11:20,309 --> 00:11:24,419
when I get when I continue across and

257
00:11:23,070 --> 00:11:26,129
try to figure out pixels over here or

258
00:11:24,419 --> 00:11:28,259
whatever it will be continuous the

259
00:11:26,129 --> 00:11:29,970
entire way right it's always blending

260
00:11:28,259 --> 00:11:31,559
between two things and when it gets to

261
00:11:29,970 --> 00:11:33,899
the you know to the one of them it's

262
00:11:31,559 --> 00:11:35,189
exactly at that one and then starts

263
00:11:33,899 --> 00:11:36,949
blending towards the other one so

264
00:11:35,190 --> 00:11:40,620
there's no like there's no

265
00:11:36,950 --> 00:11:42,450
discontinuities in the blending at like

266
00:11:40,620 --> 00:11:44,879
boundaries where something like bad

267
00:11:42,450 --> 00:11:51,090
where you'll get like an edge and ng

268
00:11:44,879 --> 00:11:53,610
artifact you don't like right so the

269
00:11:51,090 --> 00:11:56,190
next question is well what about you

270
00:11:53,610 --> 00:11:57,509
know sort of the more the fancier

271
00:11:56,190 --> 00:11:59,820
approach or the more detailed approach

272
00:11:57,509 --> 00:12:02,569
where we store multiple like samples per

273
00:11:59,820 --> 00:12:05,460
voxel in a linked list like we're doing

274
00:12:02,570 --> 00:12:07,740
so in the 2d case what that would end up

275
00:12:05,460 --> 00:12:09,480
looking like is rather than having

276
00:12:07,740 --> 00:12:10,769
things in the center you might still

277
00:12:09,480 --> 00:12:13,080
have some things in the center who knows

278
00:12:10,769 --> 00:12:14,730
where you have them but you have

279
00:12:13,080 --> 00:12:17,730
something more like this where there's

280
00:12:14,730 --> 00:12:20,370
sort of a scatter shot right amount of

281
00:12:17,730 --> 00:12:22,980
stuff in here

282
00:12:20,370 --> 00:12:25,259
and there's no real rhyme or reason to

283
00:12:22,980 --> 00:12:27,480
where it necessarily is right it could

284
00:12:25,259 --> 00:12:30,330
be anywhere inside here we don't really

285
00:12:27,480 --> 00:12:32,820
know and so the problem with this

286
00:12:30,330 --> 00:12:35,100
becomes when I have someone let's say I

287
00:12:32,820 --> 00:12:37,320
take roughly the same position I want to

288
00:12:35,100 --> 00:12:39,840
compute this pixel and what its color

289
00:12:37,320 --> 00:12:43,050
value is and I don't really know how to

290
00:12:39,840 --> 00:12:46,139
do that because I don't have any way to

291
00:12:43,049 --> 00:12:48,029
do bilinear interpolation on it right so

292
00:12:46,139 --> 00:12:50,370
what I need to do instead is I need to

293
00:12:48,029 --> 00:12:53,159
have some way of interpolating various

294
00:12:50,370 --> 00:12:55,289
scattered sample points and what I did

295
00:12:53,159 --> 00:12:58,049
just through and really quickly was

296
00:12:55,289 --> 00:13:00,089
essentially a radial fall-off so that

297
00:12:58,049 --> 00:13:02,729
what I did is I took you know the

298
00:13:00,090 --> 00:13:05,490
distance from each sample to the place

299
00:13:02,730 --> 00:13:08,720
we were trying to sample and I let it

300
00:13:05,490 --> 00:13:13,110
fall I let the contribution of each one

301
00:13:08,720 --> 00:13:15,779
fall off as it gets further away now

302
00:13:13,110 --> 00:13:17,490
that actually works just fine you know a

303
00:13:15,779 --> 00:13:21,088
radial fall-off weighted contribution

304
00:13:17,490 --> 00:13:23,850
like we did is a totally fine way of

305
00:13:21,089 --> 00:13:25,529
coming up points certainly but the

306
00:13:23,850 --> 00:13:28,620
problem with it is that it doesn't

307
00:13:25,528 --> 00:13:30,870
actually help you avoid the

308
00:13:28,620 --> 00:13:33,058
discontinuities that will happen once

309
00:13:30,870 --> 00:13:36,240
certain points fall out of your sample

310
00:13:33,058 --> 00:13:40,379
set and the reason for that is because

311
00:13:36,240 --> 00:13:43,709
let's say we end up sampling pixels

312
00:13:40,379 --> 00:13:45,990
along a line here and our range of

313
00:13:43,708 --> 00:13:48,929
fetching is one voxel to either side

314
00:13:45,990 --> 00:13:51,659
well I'm going to actually weight the

315
00:13:48,929 --> 00:13:54,388
contribution of this point right up till

316
00:13:51,659 --> 00:13:56,100
I get to this voxel boundary and then as

317
00:13:54,389 --> 00:13:58,829
soon as I cross the VAX abound reaiiy

318
00:13:56,100 --> 00:14:01,620
will no longer consider this point which

319
00:13:58,828 --> 00:14:03,508
means that at the point when I when it

320
00:14:01,620 --> 00:14:07,110
would have fallen out I had better have

321
00:14:03,509 --> 00:14:09,899
driven its contribution to zero but I

322
00:14:07,110 --> 00:14:12,949
didn't do that right I didn't have any

323
00:14:09,899 --> 00:14:17,818
guarantee that a samples radius was

324
00:14:12,948 --> 00:14:20,159
confined so what we probably would need

325
00:14:17,818 --> 00:14:22,679
to do if we wanted to make that work is

326
00:14:20,159 --> 00:14:24,360
we'd need to force you know if we

327
00:14:22,679 --> 00:14:26,818
weren't gonna do anything fancier in the

328
00:14:24,360 --> 00:14:29,610
scheme we would need to make it so that

329
00:14:26,818 --> 00:14:33,389
each individual lighting sample how to

330
00:14:29,610 --> 00:14:36,058
fall off that was no more than a voxel

331
00:14:33,389 --> 00:14:38,100
and a half basically right or one voxel

332
00:14:36,058 --> 00:14:40,019
depending on how tightly we wanted them

333
00:14:38,100 --> 00:14:42,480
controlled we would need to make sure

334
00:14:40,019 --> 00:14:45,448
that when you are fetching voxels from

335
00:14:42,480 --> 00:14:48,928
neighbor voxel boundaries you don't

336
00:14:45,448 --> 00:14:51,599
consider any voxel that could fall out

337
00:14:48,928 --> 00:14:53,850
as you cross into the next boundary so

338
00:14:51,600 --> 00:14:55,589
basically if you imagine that a voxel

339
00:14:53,850 --> 00:14:59,550
the furthest possible voxel and the

340
00:14:55,589 --> 00:15:03,149
closest possible voxel right let's do

341
00:14:59,549 --> 00:15:05,899
this so imagine the closest possible

342
00:15:03,149 --> 00:15:08,458
voxel is right here on the corner right

343
00:15:05,899 --> 00:15:14,938
and what's gonna happen is as soon as I

344
00:15:08,458 --> 00:15:16,739
cross out of here right as I'm sampling

345
00:15:14,938 --> 00:15:20,248
in this direction as I'm stepping

346
00:15:16,740 --> 00:15:23,220
through pixels this way let's say this

347
00:15:20,249 --> 00:15:26,550
voxel right here had better not have a

348
00:15:23,220 --> 00:15:29,278
radius that can extend out into here

349
00:15:26,549 --> 00:15:32,548
right because if it did then its

350
00:15:29,278 --> 00:15:34,059
contribution would be nonzero some some

351
00:15:32,548 --> 00:15:35,649
actual nonzero

352
00:15:34,059 --> 00:15:36,909
value right at the edge and then as soon

353
00:15:35,649 --> 00:15:39,250
as it crosses over it would become

354
00:15:36,909 --> 00:15:42,120
instantaneously zero so rather than

355
00:15:39,250 --> 00:15:44,019
having a fall-off that looks you know

356
00:15:42,120 --> 00:15:45,669
like this or something

357
00:15:44,019 --> 00:15:47,679
it's gonna have a fall-off that looks

358
00:15:45,669 --> 00:15:50,620
like that right and that you will

359
00:15:47,679 --> 00:15:56,049
perceive as a discontinuity in the

360
00:15:50,620 --> 00:15:58,509
lighting very very obviously right so

361
00:15:56,049 --> 00:16:01,509
that is kind of what we're trying to

362
00:15:58,509 --> 00:16:03,909
deal with here right is making sure that

363
00:16:01,509 --> 00:16:07,990
we would have some kind of a blending

364
00:16:03,909 --> 00:16:10,990
scheme that isn't going to have that

365
00:16:07,990 --> 00:16:12,669
problem and I think that so the easiest

366
00:16:10,990 --> 00:16:14,289
thing we can do to fix it right now to

367
00:16:12,669 --> 00:16:17,409
just try and move it to something a

368
00:16:14,289 --> 00:16:19,779
little more sane is to make sure that

369
00:16:17,409 --> 00:16:24,399
the radius we take whatever the smallest

370
00:16:19,779 --> 00:16:25,959
radius is in our voxel dimension and we

371
00:16:24,399 --> 00:16:29,259
just make sure that things can't

372
00:16:25,960 --> 00:16:33,670
contribute past that right so that

373
00:16:29,259 --> 00:16:35,799
they're never going to have a have more

374
00:16:33,669 --> 00:16:37,479
than one of those radii so we can see

375
00:16:35,799 --> 00:16:38,709
what kind of a difference that makes we

376
00:16:37,480 --> 00:16:40,690
don't really know whether our code is

377
00:16:38,710 --> 00:16:43,090
bug free yet because we haven't really

378
00:16:40,690 --> 00:16:44,680
spent much time playing with it so we

379
00:16:43,090 --> 00:16:46,090
don't know if there's other problems in

380
00:16:44,679 --> 00:16:48,069
here as well but you can see that

381
00:16:46,090 --> 00:16:50,710
there's very clear voxel boundary

382
00:16:48,070 --> 00:16:52,510
problems right you can see we're not

383
00:16:50,710 --> 00:16:54,430
drawing those voxel boundaries that's

384
00:16:52,509 --> 00:16:58,330
just lighting discontinuity that you're

385
00:16:54,429 --> 00:17:02,079
seeing there right so we can take a look

386
00:16:58,330 --> 00:17:05,620
to see what would happen if we changed

387
00:17:02,080 --> 00:17:08,500
our shaders to have that property so

388
00:17:05,619 --> 00:17:12,279
when we compute the Z bias program I'm

389
00:17:08,500 --> 00:17:17,079
sorry when we compute the lighting in

390
00:17:12,279 --> 00:17:20,559
the Z virus program if we wanted to make

391
00:17:17,079 --> 00:17:22,659
sure that that lighting would would not

392
00:17:20,559 --> 00:17:26,169
pose a problem then what we can do is in

393
00:17:22,660 --> 00:17:28,210
here we have the inverse cell dimension

394
00:17:26,170 --> 00:17:31,720
and the voxel mid-corner

395
00:17:28,210 --> 00:17:35,620
what we could do is figure out a useful

396
00:17:31,720 --> 00:17:37,990
way of talking about distance that was

397
00:17:35,619 --> 00:17:41,679
sort of mapped into the voxel to begin

398
00:17:37,990 --> 00:17:44,049
with and I guess what we could do is

399
00:17:41,680 --> 00:17:46,690
multiply by the voxel inverse seldom

400
00:17:44,049 --> 00:17:47,980
before we compute the distance for

401
00:17:46,690 --> 00:17:51,190
example would be

402
00:17:47,980 --> 00:17:53,620
one way to do that so when we do this

403
00:17:51,190 --> 00:17:56,830
subtraction for example here we've come

404
00:17:53,619 --> 00:17:59,699
up with a distance what we could do here

405
00:17:56,829 --> 00:18:03,970
you say all right what we want to do is

406
00:17:59,700 --> 00:18:07,090
is multiply this by the voxel inverse

407
00:18:03,970 --> 00:18:08,950
cell dimension so now we know that all

408
00:18:07,089 --> 00:18:10,720
of these distances are going to

409
00:18:08,950 --> 00:18:14,590
effectively be expanded or contracted

410
00:18:10,720 --> 00:18:19,450
properly so that a distance of one in

411
00:18:14,589 --> 00:18:21,789
any direction of the voxel is is going

412
00:18:19,450 --> 00:18:25,450
to mean we went to what we went one

413
00:18:21,789 --> 00:18:28,928
whole voxels worth of space right then

414
00:18:25,450 --> 00:18:30,400
when we do our clamping to make sure we

415
00:18:28,929 --> 00:18:33,540
clamp between zero and one

416
00:18:30,400 --> 00:18:36,820
in theory I think that would do it now

417
00:18:33,539 --> 00:18:39,940
unfortunately we're not actually we're

418
00:18:36,819 --> 00:18:43,710
not square right so I don't really know

419
00:18:39,940 --> 00:18:47,919
if that's okay um that's a very

420
00:18:43,710 --> 00:18:50,019
interesting that's a very interesting

421
00:18:47,919 --> 00:18:52,000
color pattern so what I will say about

422
00:18:50,019 --> 00:18:53,759
that is it did sort of do what I wanted

423
00:18:52,000 --> 00:18:56,259
to do which is sit for voids the

424
00:18:53,759 --> 00:18:58,990
discontinuity unfortunately it creates a

425
00:18:56,259 --> 00:19:02,339
very weird effect so I'm not sure we

426
00:18:58,990 --> 00:19:05,558
really want to do that quite that way

427
00:19:02,339 --> 00:19:12,609
but it's kind of interesting that is

428
00:19:05,558 --> 00:19:15,308
very look at that that's very odd so

429
00:19:12,609 --> 00:19:16,479
maybe that's not the best idea I have to

430
00:19:15,308 --> 00:19:18,519
think this through a little bit of

431
00:19:16,480 --> 00:19:21,220
whether that's even really the correct

432
00:19:18,519 --> 00:19:23,889
way to do it but point being we can also

433
00:19:21,220 --> 00:19:26,500
test it slightly differently here we can

434
00:19:23,890 --> 00:19:28,809
do when we do our length squared we

435
00:19:26,500 --> 00:19:35,019
could say well whatever the voxel size

436
00:19:28,808 --> 00:19:37,599
is supposed to be we can whatever the

437
00:19:35,019 --> 00:19:40,058
smallest voxel size is we can go ahead

438
00:19:37,599 --> 00:19:42,939
and make sure that we don't blend at any

439
00:19:40,058 --> 00:19:44,379
further than that right and so the way

440
00:19:42,940 --> 00:19:46,210
that we would do that is we just say

441
00:19:44,380 --> 00:19:47,500
well the distance squared function that

442
00:19:46,210 --> 00:19:53,529
we're going to come in here when we take

443
00:19:47,500 --> 00:19:55,210
the length squared of of this when we

444
00:19:53,529 --> 00:19:59,769
take the length squared of the Delta we

445
00:19:55,210 --> 00:20:01,340
can just divide that by the max distance

446
00:19:59,769 --> 00:20:03,170
squared right

447
00:20:01,339 --> 00:20:04,669
and that'll make sure that that will be

448
00:20:03,170 --> 00:20:06,080
orbit you know we can even just make

449
00:20:04,670 --> 00:20:08,120
coefficient so we have to do it divide

450
00:20:06,079 --> 00:20:14,179
obviously we could just do it something

451
00:20:08,119 --> 00:20:16,069
here we do this norm constant right so

452
00:20:14,180 --> 00:20:18,410
we just have to compute some value that

453
00:20:16,069 --> 00:20:22,639
whenever we cut a length squared that

454
00:20:18,410 --> 00:20:26,560
length squared is going to be some

455
00:20:22,640 --> 00:20:29,480
arbitrary value right it can be

456
00:20:26,559 --> 00:20:32,779
arbitrarily far so it doesn't have to be

457
00:20:29,480 --> 00:20:35,420
something that's just a voxel size right

458
00:20:32,779 --> 00:20:38,960
and so what we want to do here is say

459
00:20:35,420 --> 00:20:43,190
well okay we want to make sure that we

460
00:20:38,960 --> 00:20:46,220
force the value to be clamped at a

461
00:20:43,190 --> 00:20:49,070
particular position I guess you know the

462
00:20:46,220 --> 00:20:52,850
other thing we could do here too is we

463
00:20:49,069 --> 00:20:54,289
could adjust this value as well in fact

464
00:20:52,849 --> 00:20:56,209
I guess that's really all we have to do

465
00:20:54,289 --> 00:20:58,909
after we compute the length squared

466
00:20:56,210 --> 00:21:00,890
we're gonna take our sort of value and

467
00:20:58,910 --> 00:21:02,150
that's the maximum distance really all

468
00:21:00,890 --> 00:21:04,070
we have to do is this because this is

469
00:21:02,150 --> 00:21:10,730
already our maximum distance here right

470
00:21:04,069 --> 00:21:12,919
so our max blend distance is then gonna

471
00:21:10,730 --> 00:21:15,589
get subtracted by the distance squared

472
00:21:12,920 --> 00:21:17,870
in this case if we wanted to keep it

473
00:21:15,589 --> 00:21:21,769
squared we'd have to square it so really

474
00:21:17,869 --> 00:21:23,419
you know it'd be that but subtracting

475
00:21:21,769 --> 00:21:26,059
two Squared's really isn't something you

476
00:21:23,420 --> 00:21:27,230
can quite do that way so if we really

477
00:21:26,059 --> 00:21:30,379
wanted to be act about this we would

478
00:21:27,230 --> 00:21:32,690
probably also want to square root the

479
00:21:30,380 --> 00:21:35,060
distance I'm not sure how sane that is

480
00:21:32,690 --> 00:21:36,440
in terms of performance but it's

481
00:21:35,059 --> 00:21:38,149
probably not too expensive in shaders

482
00:21:36,440 --> 00:21:39,460
these days probably just for

483
00:21:38,150 --> 00:21:44,210
instructions or something like that

484
00:21:39,460 --> 00:21:46,690
maybe even less maybe just two anyway so

485
00:21:44,210 --> 00:21:48,769
when we do a max blend distance here

486
00:21:46,690 --> 00:21:56,259
what we could do is square root the

487
00:21:48,769 --> 00:21:58,819
distance squared something like this and

488
00:21:56,259 --> 00:22:01,129
and actually get an accurate fall-off

489
00:21:58,819 --> 00:22:04,069
that's based on a linearized radius as

490
00:22:01,130 --> 00:22:05,240
well and again I don't really know to

491
00:22:04,069 --> 00:22:10,269
what extent we want to do that or not

492
00:22:05,240 --> 00:22:10,269
but we can I should probably put in

493
00:22:16,299 --> 00:22:29,419
something like that to keep it the same

494
00:22:19,549 --> 00:22:31,519
as our other code so that just leaves us

495
00:22:29,420 --> 00:22:34,310
with the problem of having to pass max

496
00:22:31,519 --> 00:22:36,019
blend distance in again max blend

497
00:22:34,309 --> 00:22:38,179
distance in this case is just a maximum

498
00:22:36,019 --> 00:22:39,470
side of a voxel the problem is we don't

499
00:22:38,180 --> 00:22:41,299
actually know what the maximum side of

500
00:22:39,470 --> 00:22:43,339
the voxel is because we're only past the

501
00:22:41,299 --> 00:22:47,450
inverse cell dimension now what we can

502
00:22:43,339 --> 00:22:49,369
do is invert it and get that right we'd

503
00:22:47,450 --> 00:22:54,590
rather just pass it in but we can if we

504
00:22:49,369 --> 00:22:57,349
need to we could actually pass that

505
00:22:54,589 --> 00:23:00,679
value right or figure it out because we

506
00:22:57,349 --> 00:23:04,279
know that the max blend distance is just

507
00:23:00,680 --> 00:23:09,529
going to be the minimum value right and

508
00:23:04,279 --> 00:23:10,099
did I define a I defined I mean I didn't

509
00:23:09,529 --> 00:23:13,220
do that either

510
00:23:10,099 --> 00:23:14,899
well it's just going to be the minimum

511
00:23:13,220 --> 00:23:21,380
value which I believe we can just use

512
00:23:14,900 --> 00:23:32,810
min of whatever the inverse cell DIMMs

513
00:23:21,380 --> 00:23:35,240
are so each of these inverse L dims if

514
00:23:32,809 --> 00:23:37,909
we were to just invert them like so

515
00:23:35,240 --> 00:23:40,789
right and get back the actual cell

516
00:23:37,910 --> 00:23:42,590
dimension then we would just take

517
00:23:40,789 --> 00:23:44,990
whichever the minimum was and that's how

518
00:23:42,589 --> 00:23:46,579
far we want to go now in our case

519
00:23:44,990 --> 00:23:47,990
there's no point in doing this divide

520
00:23:46,579 --> 00:23:49,490
three times and then taking the minimum

521
00:23:47,990 --> 00:23:51,019
because we know that whatever the

522
00:23:49,490 --> 00:23:53,930
maximum value is will produce the

523
00:23:51,019 --> 00:23:56,139
minimum value here so what we could do

524
00:23:53,930 --> 00:24:04,430
is just say 1 over the maximum value of

525
00:23:56,140 --> 00:24:06,200
the cell dims themselves right so that

526
00:24:04,430 --> 00:24:08,690
ways like whatever your highest number

527
00:24:06,200 --> 00:24:11,720
is we'll do 1 over that and that will

528
00:24:08,690 --> 00:24:13,850
give us our lowest number and that would

529
00:24:11,720 --> 00:24:15,860
be the maximum blend distance there's no

530
00:24:13,849 --> 00:24:17,659
sense in doing this math over and over

531
00:24:15,859 --> 00:24:21,500
again every pixel so this is really

532
00:24:17,660 --> 00:24:23,090
something that should just happen and be

533
00:24:21,500 --> 00:24:25,980
passed down

534
00:24:23,089 --> 00:24:27,808
but you know right now I'm just kind of

535
00:24:25,980 --> 00:24:29,250
hacking it in there to see whether it's

536
00:24:27,808 --> 00:24:40,490
something we care about at all

537
00:24:29,250 --> 00:24:40,490
oops it's Vox in seldom

538
00:24:50,460 --> 00:25:03,269
yeah so anyway I what you can sort of

539
00:24:58,710 --> 00:25:05,819
see happening here is this is roughly

540
00:25:03,269 --> 00:25:11,099
done exactly what I wanted to do I guess

541
00:25:05,819 --> 00:25:13,289
you could say so if you look at what's

542
00:25:11,099 --> 00:25:15,569
happening here we're getting kind of

543
00:25:13,289 --> 00:25:19,829
exactly what I would have wanted to have

544
00:25:15,569 --> 00:25:21,689
happen which is that we are keeping

545
00:25:19,829 --> 00:25:23,849
everything constrained to about one

546
00:25:21,690 --> 00:25:27,120
voxel size and there's no

547
00:25:23,849 --> 00:25:28,709
discontinuities so I really can't

548
00:25:27,119 --> 00:25:31,559
complain about that that's basically

549
00:25:28,710 --> 00:25:36,509
what I wanted the problem of course as

550
00:25:31,559 --> 00:25:39,450
you can see is that the samples are so

551
00:25:36,509 --> 00:25:41,819
sparse that there aren't even samples in

552
00:25:39,450 --> 00:25:43,650
some of these voxels right there aren't

553
00:25:41,819 --> 00:25:46,679
even samples at a lot of these voxel

554
00:25:43,650 --> 00:25:48,240
locations and so as a result what

555
00:25:46,680 --> 00:25:51,450
happens is when we try to blend together

556
00:25:48,240 --> 00:25:53,190
we just get nothing so you know there's

557
00:25:51,450 --> 00:25:56,759
nothing in this voxel right here for

558
00:25:53,190 --> 00:26:00,809
example and it creates just a little

559
00:25:56,759 --> 00:26:03,960
pools of contribution with nothing to

560
00:26:00,809 --> 00:26:05,399
blend them to right and if you're

561
00:26:03,960 --> 00:26:08,670
wondering why they don't blend out to

562
00:26:05,400 --> 00:26:12,390
zero the reason is because we normalize

563
00:26:08,670 --> 00:26:14,279
the lighting right we are we're blending

564
00:26:12,390 --> 00:26:16,650
together only insofar as there are

565
00:26:14,279 --> 00:26:19,049
multiple samples we don't include

566
00:26:16,650 --> 00:26:20,820
nothing as a valid sample in the current

567
00:26:19,049 --> 00:26:23,819
state because we really don't ever want

568
00:26:20,819 --> 00:26:28,369
to be in that position so again you know

569
00:26:23,819 --> 00:26:28,369
what we can do here of course is we can

570
00:26:28,700 --> 00:26:36,660
drop the size of the voxel down to

571
00:26:33,450 --> 00:26:38,549
something very low and that allows us to

572
00:26:36,660 --> 00:26:42,660
always have enough samples but then we

573
00:26:38,549 --> 00:26:44,430
start having this problem also of of the

574
00:26:42,660 --> 00:26:46,920
voxel not really doing much work for us

575
00:26:44,430 --> 00:26:49,470
and so we kind of have to sort of think

576
00:26:46,920 --> 00:26:54,000
about how we're gonna do something a

577
00:26:49,470 --> 00:26:56,900
little bit more sane with that right but

578
00:26:54,000 --> 00:26:56,900
let me go ahead and

579
00:27:08,259 --> 00:27:14,779
so now we this is with the voxel

580
00:27:10,789 --> 00:27:17,990
dimension dropped very low and you can

581
00:27:14,779 --> 00:27:22,250
sort of see that with with how low the

582
00:27:17,990 --> 00:27:24,140
voxel dimension has been dropped you can

583
00:27:22,250 --> 00:27:26,029
sort of see that now we have we always

584
00:27:24,140 --> 00:27:32,330
have multiple lighting samples

585
00:27:26,029 --> 00:27:35,928
everywhere in the in the scene right and

586
00:27:32,329 --> 00:27:37,720
I guess like it's kind of hard to tell

587
00:27:35,929 --> 00:27:40,570
whether this is a particularly good

588
00:27:37,720 --> 00:27:42,410
interpolation of those samples however

589
00:27:40,569 --> 00:27:44,240
because one of the problems we have

590
00:27:42,410 --> 00:27:48,620
right now that we probably would have to

591
00:27:44,240 --> 00:27:51,069
fix is just not like we have to have

592
00:27:48,619 --> 00:27:54,349
some method whereby we could visualize

593
00:27:51,069 --> 00:27:57,649
where our samples are so we can toggle

594
00:27:54,349 --> 00:28:05,629
between that you know in some kind of

595
00:27:57,650 --> 00:28:07,220
relatively clean way because you see you

596
00:28:05,630 --> 00:28:10,490
get a lot of these sort of bubbly

597
00:28:07,220 --> 00:28:12,740
effects here and that's actually just

598
00:28:10,490 --> 00:28:14,779
you know I don't know that that's

599
00:28:12,740 --> 00:28:17,269
necessarily anything buggy because

600
00:28:14,779 --> 00:28:20,470
that's probably what you would expect to

601
00:28:17,269 --> 00:28:28,009
see in the circumstance where you had a

602
00:28:20,470 --> 00:28:30,140
a radial basis sort of a radial fall-off

603
00:28:28,009 --> 00:28:33,379
for how you were summing things together

604
00:28:30,140 --> 00:28:38,750
right that's not that that's not that

605
00:28:33,380 --> 00:28:40,160
strange that make sense so yes so we

606
00:28:38,750 --> 00:28:42,400
kind of just need to figure out some

607
00:28:40,160 --> 00:28:45,290
ways here that we're gonna be able to

608
00:28:42,400 --> 00:28:46,970
again to get around that so a couple

609
00:28:45,289 --> 00:28:48,859
different things we could do like I said

610
00:28:46,970 --> 00:28:50,929
before we could just try to do lighting

611
00:28:48,859 --> 00:28:54,168
computation at the voxel boundaries

612
00:28:50,929 --> 00:28:56,750
themselves right so that we always try

613
00:28:54,169 --> 00:29:00,140
to do stuff that you know ends up

614
00:28:56,750 --> 00:29:02,329
creating a light an incident light value

615
00:29:00,140 --> 00:29:04,370
at individual voxels and then we try

616
00:29:02,329 --> 00:29:06,649
linear interpolate between those that's

617
00:29:04,369 --> 00:29:11,569
a totally sane way to try and go about

618
00:29:06,650 --> 00:29:12,090
it you know and I'm not sure whether

619
00:29:11,569 --> 00:29:14,099
that's

620
00:29:12,089 --> 00:29:20,158
same I'm not sure how saying that is

621
00:29:14,099 --> 00:29:23,158
specifically I will say that yeah it's

622
00:29:20,159 --> 00:29:25,679
sort of working okay I mean you know

623
00:29:23,159 --> 00:29:27,059
it's not that far from a usable solution

624
00:29:25,679 --> 00:29:30,778
at this point which is kind of nice like

625
00:29:27,058 --> 00:29:32,428
it sort of does work in terms of you

626
00:29:30,778 --> 00:29:34,230
know when I'm down here and I recompute

627
00:29:32,429 --> 00:29:35,730
the lighting and this light is here like

628
00:29:34,230 --> 00:29:39,599
it kind of does look like it's roughly

629
00:29:35,730 --> 00:29:45,028
confined to that or whatever right so

630
00:29:39,599 --> 00:29:47,548
that's not bad but yeah but anyway but

631
00:29:45,028 --> 00:29:50,460
we're still pretty far away from having

632
00:29:47,548 --> 00:29:53,639
something that I really consider good so

633
00:29:50,460 --> 00:29:55,230
yeah anyway so the question is just how

634
00:29:53,640 --> 00:29:57,210
do we move forward from that and I'm not

635
00:29:55,230 --> 00:29:59,490
sure right I'm not sure exactly what the

636
00:29:57,210 --> 00:30:02,429
easiest way to to go forward from that

637
00:29:59,490 --> 00:30:04,230
is whether I should try to figure out a

638
00:30:02,429 --> 00:30:08,309
good way to integrate these samples

639
00:30:04,230 --> 00:30:10,079
together and still keep multiple samples

640
00:30:08,308 --> 00:30:11,220
for voxel or whether I should assume

641
00:30:10,079 --> 00:30:13,589
that we're just going to compute

642
00:30:11,220 --> 00:30:15,210
lighting in the voxel itself and let

643
00:30:13,589 --> 00:30:25,849
everyone try to compute their lighting

644
00:30:15,210 --> 00:30:29,289
from that yeah and I don't really know

645
00:30:25,849 --> 00:30:29,289
[Music]

646
00:30:34,140 --> 00:30:36,200
you

647
00:30:37,750 --> 00:30:44,410
so there's a couple things here the

648
00:30:42,849 --> 00:30:47,939
first thing that I'd like to take a look

649
00:30:44,410 --> 00:30:53,650
at is we may be kind of doubly

650
00:30:47,940 --> 00:30:57,220
contributing here because we record the

651
00:30:53,650 --> 00:30:59,680
lighting values at these locations and

652
00:30:57,220 --> 00:31:01,779
then we also multiply by the lighting

653
00:30:59,680 --> 00:31:03,220
values at these locations I'm kind of

654
00:31:01,779 --> 00:31:05,889
interested to know what happens if I

655
00:31:03,220 --> 00:31:08,460
just use the lighting sums directly I'm

656
00:31:05,890 --> 00:31:08,460
just curious

657
00:31:11,339 --> 00:31:21,339
okay so we're not we are not storing the

658
00:31:15,549 --> 00:31:29,409
lighting premultiplied by it the surface

659
00:31:21,339 --> 00:31:31,929
we are just storing we're just storing

660
00:31:29,410 --> 00:31:34,029
the light value so that's good that

661
00:31:31,930 --> 00:31:35,830
means that our colors are not sort of

662
00:31:34,029 --> 00:31:42,399
double like getting double weighted

663
00:31:35,829 --> 00:31:45,339
right which is what we want good so this

664
00:31:42,400 --> 00:31:54,190
remains a valid calculation and I am

665
00:31:45,339 --> 00:31:56,829
happy about that so I guess my next

666
00:31:54,190 --> 00:32:00,250
question is if we were to do some denser

667
00:31:56,829 --> 00:32:08,079
lighting sampling we're computing

668
00:32:00,250 --> 00:32:10,900
lighting at all of the vertices and I

669
00:32:08,079 --> 00:32:13,470
guess I'm not really sure why we get

670
00:32:10,900 --> 00:32:15,759
some of the patterns we get there though

671
00:32:13,470 --> 00:32:17,200
well actually that does look kind of

672
00:32:15,759 --> 00:32:21,789
accurate because we're moving little

673
00:32:17,200 --> 00:32:23,319
tiny lights around one of the problems

674
00:32:21,789 --> 00:32:25,389
we have is our lighting computation

675
00:32:23,319 --> 00:32:27,730
itself has not been GPU accelerated yet

676
00:32:25,390 --> 00:32:29,560
so I can only take it periodically which

677
00:32:27,730 --> 00:32:33,220
means we can't see really how it moves

678
00:32:29,559 --> 00:32:34,929
you know and that affects the

679
00:32:33,220 --> 00:32:36,700
interpolation obviously like whether the

680
00:32:34,930 --> 00:32:39,789
interpolation would look good in motion

681
00:32:36,700 --> 00:32:41,140
we don't really know either but one

682
00:32:39,789 --> 00:32:43,000
thing that's definitely true is we're

683
00:32:41,140 --> 00:32:46,060
just not getting a lot of bounce either

684
00:32:43,000 --> 00:32:50,559
like you know the lighting here doesn't

685
00:32:46,059 --> 00:32:51,240
really flood in much in the way that we

686
00:32:50,559 --> 00:32:53,369
might want it

687
00:32:51,240 --> 00:32:56,000
to either which is not perhaps the best

688
00:32:53,369 --> 00:32:56,000
thing in the world

689
00:33:04,029 --> 00:33:13,450
and you can see that these patterns are

690
00:33:06,009 --> 00:33:15,279
kind of weird they don't make a huge

691
00:33:13,450 --> 00:33:16,809
amount of sense to me I'm assuming

692
00:33:15,279 --> 00:33:19,740
that's because of the way the fall-off

693
00:33:16,809 --> 00:33:22,329
is written right now when things kind of

694
00:33:19,740 --> 00:33:32,200
combined together there's probably a

695
00:33:22,329 --> 00:33:34,659
little bit of weirdness there so I'd

696
00:33:32,200 --> 00:33:45,730
like to look at the samples again if

697
00:33:34,660 --> 00:33:49,600
possible or perhaps even just adjust the

698
00:33:45,730 --> 00:33:50,860
samples so let's suppose that we were

699
00:33:49,599 --> 00:33:52,299
going to do something a little bit more

700
00:33:50,859 --> 00:34:02,379
Squinkie there

701
00:33:52,299 --> 00:34:07,230
we're inside the like voxel let's try to

702
00:34:02,380 --> 00:34:07,230
make the voxels still be relatively

703
00:34:08,128 --> 00:34:11,549
relatively large

704
00:34:23,349 --> 00:34:28,969
and so I believe you know this is

705
00:34:26,628 --> 00:34:32,929
roughly just looking at the lighting

706
00:34:28,969 --> 00:34:35,029
samples right like this is more or less

707
00:34:32,929 --> 00:34:43,220
telling us exactly what where our

708
00:34:35,030 --> 00:34:44,780
lighting samples were I think I don't

709
00:34:43,219 --> 00:34:49,730
know that that's necessarily true but I

710
00:34:44,780 --> 00:34:51,409
think that's true and so you know the

711
00:34:49,730 --> 00:34:53,750
lighting samples are getting placed sort

712
00:34:51,409 --> 00:35:04,610
of at these four points on a cube right

713
00:34:53,750 --> 00:35:07,190
and so you know what you'd want to do

714
00:35:04,610 --> 00:35:20,720
here is you want to just kind of look up

715
00:35:07,190 --> 00:35:22,340
the ones that are related to you I mean

716
00:35:20,719 --> 00:35:24,409
you really just want to fill between

717
00:35:22,340 --> 00:35:26,000
these for example in these cases right I

718
00:35:24,409 --> 00:35:27,889
mean what you really want is to just

719
00:35:26,000 --> 00:35:32,030
kind of say well alright I've got these

720
00:35:27,889 --> 00:35:35,509
and let me let me just kind of fill

721
00:35:32,030 --> 00:35:37,490
those in but the tough part right comes

722
00:35:35,510 --> 00:35:39,890
when you know you want to do sort of

723
00:35:37,489 --> 00:35:42,618
these corners here you want this to kind

724
00:35:39,889 --> 00:35:44,839
of fill down to this light here and I

725
00:35:42,619 --> 00:35:47,630
don't know it's just it's kind of tricky

726
00:35:44,840 --> 00:35:49,789
so figuring out how to like gather these

727
00:35:47,630 --> 00:35:51,108
back up is a kind of nasty problem which

728
00:35:49,789 --> 00:35:52,639
is not surprising there's a lot of

729
00:35:51,108 --> 00:35:55,880
Papers written on this sort of thing for

730
00:35:52,639 --> 00:35:58,670
lighting gather kinds of filtering to

731
00:35:55,880 --> 00:36:00,108
try and figure out you know from

732
00:35:58,670 --> 00:36:01,550
multiple lighting samples what the

733
00:36:00,108 --> 00:36:03,409
lighting value at some new points should

734
00:36:01,550 --> 00:36:10,510
be is actually you know it's not easy

735
00:36:03,409 --> 00:36:10,509
obviously but

736
00:36:17,719 --> 00:36:31,318
and I guess I'm not really sure to to be

737
00:36:21,869 --> 00:36:33,150
honest so I guess I see what's happening

738
00:36:31,318 --> 00:36:34,800
here so these are bright because there's

739
00:36:33,150 --> 00:36:37,410
these yellow lights that are here and

740
00:36:34,800 --> 00:36:39,000
they're lighting up the red and these

741
00:36:37,409 --> 00:36:40,889
are bright from this guy so that's why

742
00:36:39,000 --> 00:36:51,719
you kind of have these two two bands

743
00:36:40,889 --> 00:36:55,710
there that's all right yeah so here's

744
00:36:51,719 --> 00:37:01,500
what I'll say looking at this right it

745
00:36:55,710 --> 00:37:04,800
is still the case that these these

746
00:37:01,500 --> 00:37:07,139
lookups just aren't grade right because

747
00:37:04,800 --> 00:37:11,010
let's suppose you outputted a scene that

748
00:37:07,139 --> 00:37:13,679
looks like this I would argue that

749
00:37:11,010 --> 00:37:15,900
actually you this is probably dense

750
00:37:13,679 --> 00:37:18,449
enough of a lighting computation to be

751
00:37:15,900 --> 00:37:26,490
okay you know

752
00:37:18,449 --> 00:37:29,308
I mean I would say that that's a that's

753
00:37:26,489 --> 00:37:32,219
a totally reasonable amount of lighting

754
00:37:29,309 --> 00:37:35,730
to be able to interpolate between to get

755
00:37:32,219 --> 00:37:38,568
some kind of a relative idea of words of

756
00:37:35,730 --> 00:37:41,250
what the color of the service should be

757
00:37:38,568 --> 00:37:44,068
and so the voxel lookup scheme just

758
00:37:41,250 --> 00:37:45,780
isn't really sufficient here like what

759
00:37:44,068 --> 00:37:50,429
you really want to be able to do is is

760
00:37:45,780 --> 00:37:53,609
sort of more of a give me the view of my

761
00:37:50,429 --> 00:37:56,578
closest points and that's not

762
00:37:53,608 --> 00:37:58,769
necessarily what the voxel is gonna be

763
00:37:56,579 --> 00:38:03,589
good at is the only problem because the

764
00:37:58,769 --> 00:38:08,009
voxel is always a fixed size whoo-hoo

765
00:38:03,588 --> 00:38:10,798
you know the voxels always a fixed size

766
00:38:08,010 --> 00:38:13,250
and so there's not much it can really do

767
00:38:10,798 --> 00:38:13,250
about that

768
00:38:15,750 --> 00:38:22,000
you know it's not gonna be able to

769
00:38:18,010 --> 00:38:26,619
really adjust so you kind of want there

770
00:38:22,000 --> 00:38:28,239
to be more of a I guess almost more of a

771
00:38:26,619 --> 00:38:30,099
flood fill kind of a thing like if you

772
00:38:28,239 --> 00:38:32,229
were gonna use a voxel you kind of want

773
00:38:30,099 --> 00:38:34,838
all of the voxel cells to eventually get

774
00:38:32,230 --> 00:38:37,329
pointers into them that tell you you

775
00:38:34,838 --> 00:38:44,019
know other points where the closest

776
00:38:37,329 --> 00:38:47,190
points are and at that point it really

777
00:38:44,019 --> 00:38:54,608
does seem like you just want to compute

778
00:38:47,190 --> 00:38:56,820
coloring for each voxel in some other

779
00:38:54,608 --> 00:38:56,819
way

780
00:39:10,690 --> 00:39:15,650
yeah so I don't know so I'm kind of

781
00:39:13,190 --> 00:39:17,389
leaning towards saying you know we

782
00:39:15,650 --> 00:39:19,338
probably want to do some kind of

783
00:39:17,389 --> 00:39:22,279
pre-processing on the voxel there and

784
00:39:19,338 --> 00:39:24,828
maybe send something down for the voxel

785
00:39:22,280 --> 00:39:28,730
where the voxel is kind of more of a

786
00:39:24,829 --> 00:39:33,289
just each voxel cell says a rough in

787
00:39:28,730 --> 00:39:35,210
radiant direction and the reason that

788
00:39:33,289 --> 00:39:37,429
I'm a little hesitant about that is just

789
00:39:35,210 --> 00:39:39,619
because you get into situations where

790
00:39:37,429 --> 00:39:43,308
you have a single voxel cell that has

791
00:39:39,619 --> 00:39:45,019
more than one like primary piece of

792
00:39:43,309 --> 00:39:46,309
information in it that's important you

793
00:39:45,019 --> 00:39:48,289
know

794
00:39:46,309 --> 00:39:50,510
so in that case having you know the

795
00:39:48,289 --> 00:39:55,358
linked list I was kind of thinking would

796
00:39:50,510 --> 00:39:58,280
be the way to get around that problem

797
00:39:55,358 --> 00:39:59,929
but I'm just afraid that storing these

798
00:39:58,280 --> 00:40:04,339
things and like this maybe isn't the

799
00:39:59,929 --> 00:40:06,699
best idea I don't know I'm kind of

800
00:40:04,338 --> 00:40:10,578
should to know what an on gradient Wash

801
00:40:06,699 --> 00:40:14,419
version would look like I want to know

802
00:40:10,579 --> 00:40:18,289
also where if we flood fill with closest

803
00:40:14,420 --> 00:40:21,619
point basically what that looks like so

804
00:40:18,289 --> 00:40:23,808
rather than doing you know a light sum

805
00:40:21,619 --> 00:40:24,588
like we're doing if we just picked the

806
00:40:23,809 --> 00:40:25,730
closest point

807
00:40:24,588 --> 00:40:27,380
I wonder what that'd be like I also

808
00:40:25,730 --> 00:40:32,809
don't like how many voxels we have to

809
00:40:27,380 --> 00:40:35,838
look in you know there's just a lot of

810
00:40:32,809 --> 00:40:40,369
them and that doesn't seem good either

811
00:40:35,838 --> 00:40:43,608
so I think what I may do let's start

812
00:40:40,369 --> 00:40:49,059
with sort of something simple which is

813
00:40:43,608 --> 00:40:52,630
let's start by just summing eight voxels

814
00:40:49,059 --> 00:40:55,220
total and we'll go from there

815
00:40:52,630 --> 00:40:57,289
so in other words we're gonna start by

816
00:40:55,219 --> 00:40:59,469
doing something that's like this sort of

817
00:40:57,289 --> 00:40:59,469
thing

818
00:41:12,829 --> 00:41:16,679
let's just get this down to a more

819
00:41:14,849 --> 00:41:20,039
manageable number one two three four

820
00:41:16,679 --> 00:41:22,259
five six seven eight I so if we sum the

821
00:41:20,039 --> 00:41:24,269
voxel lighting let's assume that we're

822
00:41:22,260 --> 00:41:27,240
going to compute a voxel that's like our

823
00:41:24,269 --> 00:41:31,170
base voxel and we're gonna go up one in

824
00:41:27,239 --> 00:41:37,789
each direction right but not back one so

825
00:41:31,170 --> 00:41:37,789
we will do you know this sort of a thing

826
00:41:43,550 --> 00:41:50,340
and let's assume that what we'll do

827
00:41:46,469 --> 00:41:53,549
there is we'll look to see which voxel

828
00:41:50,340 --> 00:41:58,559
we're talking about when we produce our

829
00:41:53,550 --> 00:42:00,600
voxel I so if you imagine that this were

830
00:41:58,559 --> 00:42:03,239
the voxel just taken in cross-section

831
00:42:00,599 --> 00:42:09,119
there what we want to do is say well

832
00:42:03,239 --> 00:42:10,589
okay do it this way before what we were

833
00:42:09,119 --> 00:42:13,109
doing is let's say gathering all of

834
00:42:10,590 --> 00:42:15,960
these let's start by just saying okay

835
00:42:13,110 --> 00:42:18,150
we're only gonna gather let's take the

836
00:42:15,960 --> 00:42:20,639
center point of a voxel and say if

837
00:42:18,150 --> 00:42:24,240
you're in you know if you're on this

838
00:42:20,639 --> 00:42:26,609
side of it right then we're gonna use

839
00:42:24,239 --> 00:42:29,149
these voxels but if you're on this side

840
00:42:26,610 --> 00:42:31,590
of it then we're gonna use these voxels

841
00:42:29,150 --> 00:42:34,289
you know what I'm saying

842
00:42:31,590 --> 00:42:37,640
so basically break it up into so that

843
00:42:34,289 --> 00:42:39,750
we're talking about like the center

844
00:42:37,639 --> 00:42:43,199
wherever the point is that we're looking

845
00:42:39,750 --> 00:42:46,320
at we're gonna go back to the like half

846
00:42:43,199 --> 00:42:48,179
voxel boundary and use the voxels that

847
00:42:46,320 --> 00:42:53,039
make sense for that particular

848
00:42:48,179 --> 00:42:56,210
interpolant right and another way to say

849
00:42:53,039 --> 00:42:59,550
that and perhaps an easier way to

850
00:42:56,210 --> 00:43:02,280
envision it as well is if we just said

851
00:42:59,550 --> 00:43:04,620
well okay maybe we just go ahead and say

852
00:43:02,280 --> 00:43:08,160
that voxels at our sampled at their

853
00:43:04,619 --> 00:43:10,019
corner and are inserted into on their

854
00:43:08,159 --> 00:43:13,319
corner so on the insertion side we could

855
00:43:10,019 --> 00:43:16,320
do it that way that way we're always

856
00:43:13,320 --> 00:43:18,600
just taking the that that way this math

857
00:43:16,320 --> 00:43:21,390
is actually already correct because

858
00:43:18,599 --> 00:43:24,630
whatever the floor is if the samples

859
00:43:21,389 --> 00:43:25,828
were here here here and here then

860
00:43:24,630 --> 00:43:28,289
whatever the floor

861
00:43:25,829 --> 00:43:30,028
is is already you know you're in this

862
00:43:28,289 --> 00:43:31,380
voxel so now you already know your inter

863
00:43:30,028 --> 00:43:33,719
plating between those four points

864
00:43:31,380 --> 00:43:39,778
correctly and that's where you should be

865
00:43:33,719 --> 00:43:42,630
right so basically what we could do is

866
00:43:39,778 --> 00:43:44,639
is that I don't know if we really want

867
00:43:42,630 --> 00:43:47,009
to we don't have to do it that way what

868
00:43:44,639 --> 00:43:54,088
we would do is just in is just increment

869
00:43:47,009 --> 00:43:56,278
by a half voxel before flooring and we

870
00:43:54,088 --> 00:43:58,318
would get the same answer so we could

871
00:43:56,278 --> 00:44:04,409
just do it so that things are still

872
00:43:58,318 --> 00:44:06,239
voxel based I don't know but there's not

873
00:44:04,409 --> 00:44:07,828
much of a difference there either way we

874
00:44:06,239 --> 00:44:10,349
just have to make sure that we insert

875
00:44:07,829 --> 00:44:11,969
the you can see that the lights are kind

876
00:44:10,349 --> 00:44:15,028
of clipped now we just have to make sure

877
00:44:11,969 --> 00:44:17,009
that we insert the lights on on the half

878
00:44:15,028 --> 00:44:19,739
boundary or look up on the half boundary

879
00:44:17,009 --> 00:44:23,759
since I kind of want the voxel

880
00:44:19,739 --> 00:44:25,619
dimensions in here anyway I think I'm

881
00:44:23,759 --> 00:44:27,478
just gonna say let's start passing those

882
00:44:25,619 --> 00:44:31,140
down and then we can use them you know

883
00:44:27,478 --> 00:44:33,268
uniforms don't cost a whole lot to have

884
00:44:31,139 --> 00:44:35,909
so I think I'm just gonna say let's have

885
00:44:33,268 --> 00:44:39,468
the cell dim in here as well and that

886
00:44:35,909 --> 00:44:41,699
way when I go to do the flooring hmm

887
00:44:39,469 --> 00:44:43,499
excuse me

888
00:44:41,699 --> 00:44:44,969
well actually know what we've worked I

889
00:44:43,498 --> 00:44:46,738
don't even I still don't really need it

890
00:44:44,969 --> 00:44:47,940
though I'm kind of fine trying to find

891
00:44:46,739 --> 00:44:49,829
an excuse to have the cell game in there

892
00:44:47,940 --> 00:44:51,749
but I don't really need it because since

893
00:44:49,829 --> 00:44:53,818
I multiplied by the inverse dim I can

894
00:44:51,748 --> 00:44:57,028
just add point five at that point right

895
00:44:53,818 --> 00:44:58,440
before the flooring so before I floor

896
00:44:57,028 --> 00:45:01,170
the point to find out which ones I'm

897
00:44:58,440 --> 00:45:03,289
gonna look towards I could just do you

898
00:45:01,170 --> 00:45:03,289
know

899
00:45:07,550 --> 00:45:16,200
that right and that makes sure that I'm

900
00:45:12,329 --> 00:45:19,049
gonna be in the right based on voxel

901
00:45:16,199 --> 00:45:25,919
centers I would be in the right the

902
00:45:19,050 --> 00:45:28,310
right region but yeah again that's not

903
00:45:25,920 --> 00:45:30,360
really gonna help us too terribly much

904
00:45:28,309 --> 00:45:34,710
until we have something a little more

905
00:45:30,360 --> 00:45:37,079
sane to use there because if we don't

906
00:45:34,710 --> 00:45:40,800
actually do light samples at the Centers

907
00:45:37,079 --> 00:45:44,369
of each of our voxels then we yet would

908
00:45:40,800 --> 00:45:46,440
have a problem so let's try though just

909
00:45:44,369 --> 00:45:50,279
putting light samples at the Centers of

910
00:45:46,440 --> 00:45:52,139
the voxels I mean it seems reasonable

911
00:45:50,280 --> 00:45:56,700
enough there's not that many of them

912
00:45:52,139 --> 00:46:00,269
even at the moment even if we did them

913
00:45:56,699 --> 00:46:02,730
all but I what I could do first is just

914
00:46:00,269 --> 00:46:04,259
say any voxel that actually is sort of

915
00:46:02,730 --> 00:46:07,230
in the region of something we could put

916
00:46:04,260 --> 00:46:08,490
something in and do a lot of computation

917
00:46:07,230 --> 00:46:15,420
there so we don't have to have quite so

918
00:46:08,489 --> 00:46:17,639
many but yeah so all I was trying to say

919
00:46:15,420 --> 00:46:19,349
here was if we wanted to make it so that

920
00:46:17,639 --> 00:46:20,699
we're based off centers of voxels so

921
00:46:19,349 --> 00:46:21,960
that we know that like if there was a

922
00:46:20,699 --> 00:46:22,559
letting sample at the center of each

923
00:46:21,960 --> 00:46:25,019
voxel

924
00:46:22,559 --> 00:46:27,360
and we wanted to go within them just

925
00:46:25,019 --> 00:46:31,170
adding the 0.5 keeps the flooring value

926
00:46:27,360 --> 00:46:34,410
so that as I get up to here

927
00:46:31,170 --> 00:46:38,099
I would actually move forward so let me

928
00:46:34,409 --> 00:46:39,750
just make sure I'm doing this right so

929
00:46:38,099 --> 00:46:44,069
normally when we floor right it's gonna

930
00:46:39,750 --> 00:46:48,119
keep us inside this voxel for anywhere

931
00:46:44,070 --> 00:46:55,470
inside the voxel right so the voxels are

932
00:46:48,119 --> 00:46:56,849
gonna be this one are gonna be these you

933
00:46:55,469 --> 00:46:58,649
know what I think about it's actually

934
00:46:56,849 --> 00:47:02,400
subtracting 0.5 is the way that I

935
00:46:58,650 --> 00:47:03,809
actually was drawing it though so it's

936
00:47:02,400 --> 00:47:08,130
not actually adding 0.5 I've got it

937
00:47:03,809 --> 00:47:09,989
going the wrong way because what I said

938
00:47:08,130 --> 00:47:12,210
I wanted to have happen was that if I

939
00:47:09,989 --> 00:47:14,789
was in here I wanted to be these which

940
00:47:12,210 --> 00:47:17,610
means this voxel this voxel this voxel

941
00:47:14,789 --> 00:47:20,269
and this voxel if I went here I wanted

942
00:47:17,610 --> 00:47:22,519
it to be these

943
00:47:20,269 --> 00:47:24,619
so I actually want to subtract point

944
00:47:22,519 --> 00:47:26,599
five beforehand not add point five

945
00:47:24,619 --> 00:47:29,509
that's actually what I would want to do

946
00:47:26,599 --> 00:47:30,889
to make sure that I have the voxels that

947
00:47:29,510 --> 00:47:35,480
I wanted because I'm actually going

948
00:47:30,889 --> 00:47:38,409
backwards not forwards right no I didn't

949
00:47:35,480 --> 00:47:38,409
like that at all what did I do

950
00:47:45,498 --> 00:47:57,179
that's a bit strange why didn't it huh

951
00:47:54,978 --> 00:48:00,239
I'm not sure why I thought everything

952
00:47:57,179 --> 00:48:02,940
was out in the other case that's a

953
00:48:00,239 --> 00:48:04,829
little bit weird but anyway this is the

954
00:48:02,940 --> 00:48:06,479
case where we that I was discussing

955
00:48:04,829 --> 00:48:11,068
where it would where it would pick the

956
00:48:06,478 --> 00:48:15,058
right voxels for blending the center

957
00:48:11,068 --> 00:48:16,528
points of those voxels so yeah if we

958
00:48:15,059 --> 00:48:17,789
want do something like this the key here

959
00:48:16,528 --> 00:48:19,889
would be we'd need to make sure that

960
00:48:17,789 --> 00:48:22,920
each voxel though does have something

961
00:48:19,889 --> 00:48:25,318
there in order to bi-linear between them

962
00:48:22,920 --> 00:48:27,210
and if we wanted to then bilinear

963
00:48:25,318 --> 00:48:30,088
instead of doing it we could write the

964
00:48:27,210 --> 00:48:33,929
bilinear code right now so you know the

965
00:48:30,088 --> 00:48:35,849
light sum or whatever would just change

966
00:48:33,929 --> 00:48:38,159
to being something where it would

967
00:48:35,849 --> 00:48:40,289
normalize itself after the fact so for

968
00:48:38,159 --> 00:48:42,389
example if we wanted to do that here

969
00:48:40,289 --> 00:48:48,119
what we could do is something like this

970
00:48:42,389 --> 00:48:50,400
where to me when we go to some of the

971
00:48:48,119 --> 00:48:52,680
voxel lighting up we do the sort of

972
00:48:50,400 --> 00:48:54,269
blending inside here and we'll figure

973
00:48:52,679 --> 00:48:57,389
out you know at some point how that's

974
00:48:54,268 --> 00:49:00,298
supposed to work but we would maybe

975
00:48:57,389 --> 00:49:04,379
figure out the blending based on the

976
00:49:00,298 --> 00:49:05,210
centroid of the voxel as well if that

977
00:49:04,380 --> 00:49:14,489
makes sense

978
00:49:05,210 --> 00:49:16,440
like we we would probably want to we

979
00:49:14,489 --> 00:49:18,298
would probably want to compute the

980
00:49:16,440 --> 00:49:21,420
lighting value at the centroid of the

981
00:49:18,298 --> 00:49:24,449
voxel and blend between those it's kind

982
00:49:21,420 --> 00:49:26,548
of hard to say well let's keep going

983
00:49:24,449 --> 00:49:27,509
with this here this is a bit wonky but

984
00:49:26,548 --> 00:49:32,690
I'm gonna do it anyway

985
00:49:27,509 --> 00:49:35,219
so anyway we have our result value here

986
00:49:32,690 --> 00:49:37,200
you can see us computing it and what I

987
00:49:35,219 --> 00:49:40,409
want to do is at the end I want to

988
00:49:37,199 --> 00:49:42,629
normalize the result value so I'm just

989
00:49:40,409 --> 00:49:45,028
gonna say if the result value had

990
00:49:42,630 --> 00:49:47,579
anything at all then I'm going to take

991
00:49:45,028 --> 00:49:52,409
the result value RGB and multiply it by

992
00:49:47,579 --> 00:49:54,210
the result value a over you know I say 1

993
00:49:52,409 --> 00:49:55,998
over the results H and normalize it so

994
00:49:54,210 --> 00:49:58,108
that now no matter how many things we

995
00:49:55,998 --> 00:50:00,748
weighted together we will always

996
00:49:58,108 --> 00:50:03,170
up with an even wait I'll get rid of

997
00:50:00,748 --> 00:50:03,169
this stuff

998
00:50:07,679 --> 00:50:13,139
and then we just need to actually use it

999
00:50:11,159 --> 00:50:18,538
down here still so this this still wants

1000
00:50:13,139 --> 00:50:20,818
to be Jimmy I use let's see

1001
00:50:18,539 --> 00:50:23,579
and so in here when we get these voxel

1002
00:50:20,818 --> 00:50:25,230
values back like these are gonna be a

1003
00:50:23,579 --> 00:50:27,480
little bit more complicated now so this

1004
00:50:25,230 --> 00:50:30,329
these are like each of these is going to

1005
00:50:27,480 --> 00:50:32,039
be a light value we don't need an alpha

1006
00:50:30,329 --> 00:50:33,359
value because we wouldn't really be

1007
00:50:32,039 --> 00:50:35,489
using alpha anymore

1008
00:50:33,358 --> 00:50:38,489
so we'd really just be returning just

1009
00:50:35,489 --> 00:50:43,289
the RGB value what we'd want to do here

1010
00:50:38,489 --> 00:50:47,298
is say okay we're gonna capture each of

1011
00:50:43,289 --> 00:50:47,299
these separately

1012
00:51:09,820 --> 00:51:15,080
right this would be us capturing each

1013
00:51:12,440 --> 00:51:17,090
voxel value that we could get so this

1014
00:51:15,079 --> 00:51:18,619
computes the eight voxels that are in

1015
00:51:17,090 --> 00:51:21,019
our neighborhood what they're letting

1016
00:51:18,619 --> 00:51:30,950
contribution is and then we can lurk

1017
00:51:21,019 --> 00:51:32,750
between them right I think we defined

1018
00:51:30,949 --> 00:51:46,389
our own lerp that has the order that I

1019
00:51:32,750 --> 00:51:46,389
like right didn't we yes so we can do

1020
00:51:47,889 --> 00:51:55,519
based on the Vox the fractional amount

1021
00:51:50,929 --> 00:52:00,858
of Z you know we can do each one of

1022
00:51:55,519 --> 00:52:06,489
these and all I'm gonna do here right

1023
00:52:00,858 --> 00:52:06,489
all I'm doing is taking the various

1024
00:52:08,079 --> 00:52:17,869
voxel pieces and doing lerp salong them

1025
00:52:11,380 --> 00:52:19,460
along the edges so those lips that would

1026
00:52:17,869 --> 00:52:21,500
take Z out of the equation because now

1027
00:52:19,460 --> 00:52:24,320
we've got basically we've we've taken

1028
00:52:21,500 --> 00:52:27,159
our cube and we've lurked all of the Z

1029
00:52:24,320 --> 00:52:32,690
lines so that now we just have a square

1030
00:52:27,159 --> 00:52:37,069
then we would do the same thing it's

1031
00:52:32,690 --> 00:52:38,329
just successive right so take Z out of

1032
00:52:37,070 --> 00:52:41,590
the equation

1033
00:52:38,329 --> 00:52:41,590
now we're taking

1034
00:52:44,719 --> 00:53:14,429
why out of the equation and so hope you

1035
00:53:13,289 --> 00:53:16,619
can see kind of what I was doing there

1036
00:53:14,429 --> 00:53:18,509
I'm just saying like alright look we

1037
00:53:16,619 --> 00:53:20,400
need to do a trial interpolation so

1038
00:53:18,510 --> 00:53:21,480
first let's produce a bilinear

1039
00:53:20,400 --> 00:53:23,579
interpolation from the trial

1040
00:53:21,480 --> 00:53:25,949
interpolation by taking the Z coordinate

1041
00:53:23,579 --> 00:53:30,710
fractional bit which I need to actually

1042
00:53:25,949 --> 00:53:30,710
produce here oops

1043
00:53:33,590 --> 00:53:36,829
so if I

1044
00:53:39,998 --> 00:53:46,538
take the vox position do the floor of it

1045
00:53:52,389 --> 00:54:09,259
like so and also have a box F like so

1046
00:54:07,818 --> 00:54:13,489
this is basically saying what's the

1047
00:54:09,259 --> 00:54:16,548
fractional amount that's left over so we

1048
00:54:13,489 --> 00:54:19,400
can interpolate by that so we take the

1049
00:54:16,548 --> 00:54:21,980
points of our cube and we say alright

1050
00:54:19,400 --> 00:54:25,400
each one of those we're going to take

1051
00:54:21,980 --> 00:54:28,818
the Z spans on the cube and lurk between

1052
00:54:25,400 --> 00:54:30,380
those to produce a square right then

1053
00:54:28,818 --> 00:54:31,548
we're going to take those in to produce

1054
00:54:30,380 --> 00:54:37,539
a line and then we're going to take that

1055
00:54:31,548 --> 00:54:37,538
to produce our point and that's it

1056
00:54:51,670 --> 00:55:02,019
1:22 huh unexpected opening brace hmm

1057
00:55:03,278 --> 00:55:10,460
you did not expect my opening brace well

1058
00:55:08,719 --> 00:55:24,230
why didn't you expect my opening brace

1059
00:55:10,460 --> 00:55:31,970
oh I see so here's the the while loop

1060
00:55:24,230 --> 00:55:34,159
did not have the brace in there yeah so

1061
00:55:31,969 --> 00:55:37,578
that does not look like I did that right

1062
00:55:34,159 --> 00:55:40,548
however because that should have

1063
00:55:37,579 --> 00:55:46,309
produced a more by linearly blended

1064
00:55:40,548 --> 00:55:48,500
result which it doesn't oh I know why

1065
00:55:46,309 --> 00:55:52,430
because it's still also this is not

1066
00:55:48,500 --> 00:55:54,230
actually yeah this is this is not just

1067
00:55:52,429 --> 00:55:55,879
blurring these together it's still doing

1068
00:55:54,230 --> 00:55:58,608
the contribution based on the distance

1069
00:55:55,880 --> 00:56:00,140
so what I want to do here is just sort

1070
00:55:58,608 --> 00:56:01,788
of smack these together and pretend that

1071
00:56:00,139 --> 00:56:04,159
each voxel has sort of a constant

1072
00:56:01,789 --> 00:56:05,809
illumination at it so in order to do

1073
00:56:04,159 --> 00:56:08,199
something like that again yeah I can get

1074
00:56:05,809 --> 00:56:10,759
rid of a lot of this code temporarily

1075
00:56:08,199 --> 00:56:14,358
and just say like okay when we go

1076
00:56:10,759 --> 00:56:16,068
through here and we look at the light

1077
00:56:14,358 --> 00:56:20,179
values rather than having the

1078
00:56:16,068 --> 00:56:24,159
contribution amount let's just blend

1079
00:56:20,179 --> 00:56:24,159
them together directly like that

1080
00:56:30,358 --> 00:56:35,798
so that still doesn't look right to me

1081
00:56:33,099 --> 00:56:38,759
because now we should be properly

1082
00:56:35,798 --> 00:56:38,759
handling the case

1083
00:56:39,958 --> 00:56:43,690
well properly handling the case is

1084
00:56:42,068 --> 00:56:46,748
little bit wrong but we should blend to

1085
00:56:43,690 --> 00:56:49,329
zero in Kate like we should be seeing an

1086
00:56:46,748 --> 00:56:51,368
actual even blend so let's debug this

1087
00:56:49,329 --> 00:56:54,400
and get this down to the point where we

1088
00:56:51,369 --> 00:56:55,239
don't see errors like that yet because

1089
00:56:54,400 --> 00:56:59,440
if we take a look at what's happening

1090
00:56:55,239 --> 00:57:02,228
here if if we're if we've eliminated the

1091
00:56:59,440 --> 00:57:04,719
position of like if we eliminated world

1092
00:57:02,228 --> 00:57:07,538
P right because you can see world P now

1093
00:57:04,719 --> 00:57:12,579
no longer appears anywhere in the some

1094
00:57:07,539 --> 00:57:14,920
code so since world P is no longer in

1095
00:57:12,579 --> 00:57:18,959
here we expect some voxel light should

1096
00:57:14,920 --> 00:57:26,108
return the same lighting value

1097
00:57:18,958 --> 00:57:28,389
regardless of what who calls it right no

1098
00:57:26,108 --> 00:57:30,369
matter when you ask as long as you ask

1099
00:57:28,389 --> 00:57:31,929
for a particular voxels lighting value

1100
00:57:30,369 --> 00:57:33,729
your you should get the same thing out

1101
00:57:31,929 --> 00:57:37,690
you should never get a you know a

1102
00:57:33,728 --> 00:57:40,268
different value out then in for two

1103
00:57:37,690 --> 00:57:41,858
different pixels that you're trying to

1104
00:57:40,268 --> 00:57:45,368
sample you should always get the same

1105
00:57:41,858 --> 00:57:47,528
one out so when we call it here when we

1106
00:57:45,369 --> 00:57:51,910
produce whatever the voxel fractional

1107
00:57:47,528 --> 00:57:53,650
amount is we should be able to do stable

1108
00:57:51,909 --> 00:57:56,068
bilinear so that you always get

1109
00:57:53,650 --> 00:58:02,528
predictable values as you go through

1110
00:57:56,068 --> 00:58:04,858
right so that tells me that I'm not

1111
00:58:02,528 --> 00:58:10,380
quite doing this blend properly I

1112
00:58:04,858 --> 00:58:16,558
believe and so we need to figure out why

1113
00:58:10,380 --> 00:58:16,559
so first off when we do our vox p here

1114
00:58:18,750 --> 00:58:26,190
I believe that shouldn't that looks like

1115
00:58:24,179 --> 00:58:31,079
it would produce the correct value we're

1116
00:58:26,190 --> 00:58:32,579
starting at the negative 0.5 for the for

1117
00:58:31,079 --> 00:58:36,079
the range there in terms of producing

1118
00:58:32,579 --> 00:58:42,420
the flooring value which seems correct

1119
00:58:36,079 --> 00:58:47,159
and once we produce a florid value ah so

1120
00:58:42,420 --> 00:58:49,230
this is backwards we actually want to

1121
00:58:47,159 --> 00:58:50,670
subtract the floor from the p-value to

1122
00:58:49,230 --> 00:58:53,400
give us the fractional amount is

1123
00:58:50,670 --> 00:58:54,409
positive not negative so that would have

1124
00:58:53,400 --> 00:58:56,490
been a big problem there

1125
00:58:54,409 --> 00:58:59,940
let me just protect the rest of it here

1126
00:58:56,489 --> 00:59:03,179
the box index is just being produced

1127
00:58:59,940 --> 00:59:04,740
from turning that into an integer which

1128
00:59:03,179 --> 00:59:06,989
it already is has been florid so it's

1129
00:59:04,739 --> 00:59:10,289
just converting from float to int we're

1130
00:59:06,989 --> 00:59:12,000
then summing the the voxel lights in

1131
00:59:10,289 --> 00:59:14,190
each of those locations which again now

1132
00:59:12,000 --> 00:59:15,900
if we if we stuck with exactly this

1133
00:59:14,190 --> 00:59:17,610
scheme we wouldn't even need to store

1134
00:59:15,900 --> 00:59:20,420
linked lists anymore we just put the

1135
00:59:17,610 --> 00:59:22,559
lighting values directly in the voxel

1136
00:59:20,420 --> 00:59:25,170
although we might still want link list

1137
00:59:22,559 --> 00:59:28,309
to keep the voxels sparse if we if we

1138
00:59:25,170 --> 00:59:32,369
store a lot of lighting data in there

1139
00:59:28,309 --> 00:59:34,230
okay so that's more correct like that

1140
00:59:32,369 --> 00:59:37,559
looks more like what I would expect to

1141
00:59:34,230 --> 00:59:40,289
see right and looking through here right

1142
00:59:37,559 --> 00:59:43,079
you can kind of see now we always have a

1143
00:59:40,289 --> 00:59:49,980
stable by linearly filtered lighting no

1144
00:59:43,079 --> 00:59:54,329
matter where we are right so that all

1145
00:59:49,980 --> 00:59:57,030
looks about right again the problem with

1146
00:59:54,329 --> 01:00:00,509
that of course is that we don't really

1147
00:59:57,030 --> 01:00:02,310
get if we were to try and use this

1148
01:00:00,510 --> 01:00:04,920
scheme as the way we were interpolating

1149
01:00:02,309 --> 01:00:07,759
our lighting we of course end up in the

1150
01:00:04,920 --> 01:00:10,639
problem again of this light map

1151
01:00:07,760 --> 01:00:14,340
resolution is just not particularly high

1152
01:00:10,639 --> 01:00:15,629
and it's regular and we have to figure

1153
01:00:14,340 --> 01:00:18,300
out some way to make sure we always get

1154
01:00:15,630 --> 01:00:20,220
samples the voxels and so on and so

1155
01:00:18,300 --> 01:00:22,320
forth right I just wanted to sort of get

1156
01:00:20,219 --> 01:00:24,569
what that would look like so I think

1157
01:00:22,320 --> 01:00:30,539
that is roughly what we would want to do

1158
01:00:24,570 --> 01:00:32,070
anyway in terms of figuring out how

1159
01:00:30,539 --> 01:00:32,519
we're going to interpolate though I

1160
01:00:32,070 --> 01:00:35,010
think

1161
01:00:32,519 --> 01:00:40,889
you only want to look at eight voxels at

1162
01:00:35,010 --> 01:00:45,350
a time looking at 16 just seems too much

1163
01:00:40,889 --> 01:00:45,349
that just seems like like way too much

1164
01:00:47,329 --> 01:00:56,250
actually it was more than that it's 27

1165
01:00:50,000 --> 01:01:00,329
right how many was it we did to all

1166
01:00:56,250 --> 01:01:04,530
permutations so we did yeah we did 3

1167
01:01:00,329 --> 01:01:06,000
times 3 times 3 it was 27 so I think we

1168
01:01:04,530 --> 01:01:07,680
want to keep it to something like that

1169
01:01:06,000 --> 01:01:09,389
but whether or not we want to still try

1170
01:01:07,679 --> 01:01:11,519
and use more information about where

1171
01:01:09,389 --> 01:01:13,109
those lighting samples are I'm still up

1172
01:01:11,519 --> 01:01:15,090
in the air about that because I feel

1173
01:01:13,110 --> 01:01:23,640
like I don't know that still might be

1174
01:01:15,090 --> 01:01:25,320
kind of necessary so what we could do in

1175
01:01:23,639 --> 01:01:27,089
this case is yeah we I mean we could

1176
01:01:25,320 --> 01:01:31,140
still try to do something where we're

1177
01:01:27,090 --> 01:01:34,200
we're lurking between these values but

1178
01:01:31,139 --> 01:01:35,789
we still make the values B we could

1179
01:01:34,199 --> 01:01:40,019
still use the lighting information in

1180
01:01:35,789 --> 01:01:41,699
computing so we basically say okay what

1181
01:01:40,019 --> 01:01:43,440
would the lighting be if I was in this

1182
01:01:41,699 --> 01:01:44,849
voxel okay what would the lighting be if

1183
01:01:43,440 --> 01:01:46,590
I was in this voxel what would the

1184
01:01:44,849 --> 01:01:51,420
letting be if I was in this voxel right

1185
01:01:46,590 --> 01:01:53,039
we still could interpolate that if we

1186
01:01:51,420 --> 01:01:56,519
were so inclined I don't know that we

1187
01:01:53,039 --> 01:02:00,300
are but we could and so we could do is

1188
01:01:56,519 --> 01:02:07,280
this if we make this in theory we could

1189
01:02:00,300 --> 01:02:07,280
make this still take that into account I

1190
01:02:09,619 --> 01:02:17,039
mean that is still possible so if we

1191
01:02:12,420 --> 01:02:19,889
wanted to we could still do it I think

1192
01:02:17,039 --> 01:02:23,130
the old-school way if we wanted to and

1193
01:02:19,889 --> 01:02:27,059
it would not really pose a problem right

1194
01:02:23,130 --> 01:02:30,180
so we could still say okay can compute a

1195
01:02:27,059 --> 01:02:32,130
contribution here and that contribution

1196
01:02:30,179 --> 01:02:35,940
in theory could be anything you want I

1197
01:02:32,130 --> 01:02:39,539
think so because since we're doing the

1198
01:02:35,940 --> 01:02:42,059
bilinear it will always properly fade at

1199
01:02:39,539 --> 01:02:43,769
that point on the way out so I think you

1200
01:02:42,059 --> 01:02:47,579
could compute the contribution anyway

1201
01:02:43,769 --> 01:02:55,409
you wanted probably

1202
01:02:47,579 --> 01:03:08,940
I mean don't quote me on that but that

1203
01:02:55,409 --> 01:03:10,589
seems like that seems like correct so if

1204
01:03:08,940 --> 01:03:12,780
you wanted to take the contribution of

1205
01:03:10,590 --> 01:03:16,019
something and say that it's whatever the

1206
01:03:12,780 --> 01:03:17,400
length was and then oops and you know we

1207
01:03:16,019 --> 01:03:19,409
could even say just I don't know what

1208
01:03:17,400 --> 01:03:22,680
over the length I think we can make up

1209
01:03:19,409 --> 01:03:23,849
any value we want here and you know who

1210
01:03:22,679 --> 01:03:25,049
know we have to start we'd have to

1211
01:03:23,849 --> 01:03:26,670
actually go try to think about what the

1212
01:03:25,050 --> 01:03:29,370
correct value what the correct rating

1213
01:03:26,670 --> 01:03:31,740
would be but in theory you should just

1214
01:03:29,369 --> 01:03:36,719
be able to just do whatever you want and

1215
01:03:31,739 --> 01:03:39,089
then you the bilinear takes care of the

1216
01:03:36,719 --> 01:03:40,949
fact that you are computing it

1217
01:03:39,090 --> 01:03:42,570
differently in different areas so you

1218
01:03:40,949 --> 01:03:43,799
don't actually get any discontinuities

1219
01:03:42,570 --> 01:03:48,480
and that does appear to be the case

1220
01:03:43,800 --> 01:03:51,570
right so at that point we really just

1221
01:03:48,480 --> 01:03:53,670
have a lighting sample problem and I

1222
01:03:51,570 --> 01:03:55,140
don't know again like yeah so we could

1223
01:03:53,670 --> 01:03:56,730
take a look one more time at what

1224
01:03:55,139 --> 01:03:59,309
happens if we just force a lot of

1225
01:03:56,730 --> 01:04:01,650
samples into the same place

1226
01:03:59,309 --> 01:04:08,579
let's keep let's keep the Z sampling up

1227
01:04:01,650 --> 01:04:09,930
a bit because I feel like you know what

1228
01:04:08,579 --> 01:04:11,460
why do I keep changing this I don't even

1229
01:04:09,929 --> 01:04:13,440
know why we don't even really need this

1230
01:04:11,460 --> 01:04:15,740
right now this is not necessary just go

1231
01:04:13,440 --> 01:04:15,740
do that

1232
01:04:23,289 --> 01:04:33,670
that's a little bit odd I'm not sure

1233
01:04:26,650 --> 01:04:35,800
exactly what we're seeing there I think

1234
01:04:33,670 --> 01:04:37,570
that's just our blend amount not being

1235
01:04:35,800 --> 01:04:41,070
particularly smart so maybe that one

1236
01:04:37,570 --> 01:04:43,090
over is not really great let's let's

1237
01:04:41,070 --> 01:04:48,690
let's try and fuss with that a little

1238
01:04:43,090 --> 01:04:56,289
bit so let's say our contribution is

1239
01:04:48,690 --> 01:04:57,550
gonna still be one minus the length that

1240
01:04:56,289 --> 01:04:59,650
might be a little more saying I should

1241
01:04:57,550 --> 01:05:01,119
really think a little harder about what

1242
01:04:59,650 --> 01:05:06,490
we want to do for blending because I'm

1243
01:05:01,119 --> 01:05:14,500
kind of just just ad hoc here that looks

1244
01:05:06,489 --> 01:05:22,000
a little nasty why are we getting and I

1245
01:05:14,500 --> 01:05:24,219
guess we don't really we don't really

1246
01:05:22,000 --> 01:05:27,039
need to renormalize unless we're over

1247
01:05:24,219 --> 01:05:36,309
one would be the other weird thing like

1248
01:05:27,039 --> 01:05:40,960
we could do this as well right which is

1249
01:05:36,309 --> 01:05:43,570
kind of even weirder that fall-off seems

1250
01:05:40,960 --> 01:05:44,829
a little too stiff as well potentially I

1251
01:05:43,570 --> 01:05:50,950
don't know like maybe it should be

1252
01:05:44,829 --> 01:05:53,079
something more you know where lights

1253
01:05:50,949 --> 01:05:59,049
have a bigger radius than one just

1254
01:05:53,079 --> 01:06:03,358
making stuff up but something like that

1255
01:05:59,050 --> 01:06:03,359
starts to look pretty reasonable right

1256
01:06:03,659 --> 01:06:11,279
you know it's not going to win it any

1257
01:06:06,639 --> 01:06:14,019
awards for best lighting certainly but

1258
01:06:11,280 --> 01:06:16,950
it's you know getting to be something a

1259
01:06:14,019 --> 01:06:16,949
little more useable

1260
01:06:32,139 --> 01:06:38,019
right I mean that that is lighting you

1261
01:06:34,480 --> 01:06:39,610
could actually start to use you know and

1262
01:06:38,019 --> 01:06:42,699
we haven't really taken into account

1263
01:06:39,610 --> 01:06:44,200
than normal stuff yet either so we have

1264
01:06:42,699 --> 01:06:48,449
to kind of think about this a little bit

1265
01:06:44,199 --> 01:06:52,449
more and work on our lighting

1266
01:06:48,449 --> 01:07:02,469
computation as well but you know we're

1267
01:06:52,449 --> 01:07:04,779
getting there and again a lot of that

1268
01:07:02,469 --> 01:07:06,579
problem just seemed a lot of it tends to

1269
01:07:04,780 --> 01:07:09,700
be like how are we gonna bin enough

1270
01:07:06,579 --> 01:07:16,659
stuff into enough places to really get

1271
01:07:09,699 --> 01:07:19,239
it going okay right but you know that's

1272
01:07:16,659 --> 01:07:21,250
that's starting to be plausible to me

1273
01:07:19,239 --> 01:07:27,639
right look I think we're starting to get

1274
01:07:21,250 --> 01:07:30,579
somewhere so if we had a if we turn turn

1275
01:07:27,639 --> 01:07:32,199
the crank a little bit on this one start

1276
01:07:30,579 --> 01:07:35,710
to get a little bit further down maybe

1277
01:07:32,199 --> 01:07:37,299
figure out start to look at how we're

1278
01:07:35,710 --> 01:07:41,230
computing our lighting and maybe write

1279
01:07:37,300 --> 01:07:45,160
some things into the into the voxels

1280
01:07:41,230 --> 01:07:46,449
that tell us directional information you

1281
01:07:45,159 --> 01:07:52,649
know I could see this being something

1282
01:07:46,449 --> 01:07:52,649
that is not completely useless right

1283
01:07:52,679 --> 01:07:58,599
because like for example if we knew the

1284
01:07:55,840 --> 01:08:00,430
directional the the incidence direction

1285
01:07:58,599 --> 01:08:06,299
here we'd also know stuff about like

1286
01:08:00,429 --> 01:08:08,049
this should not be lit down here right

1287
01:08:06,300 --> 01:08:09,460
but right now it doesn't know that

1288
01:08:08,050 --> 01:08:11,260
because it doesn't know what direction

1289
01:08:09,460 --> 01:08:13,179
lights coming from and furthermore we

1290
01:08:11,260 --> 01:08:16,960
can't differentiate between like these

1291
01:08:13,179 --> 01:08:18,489
sort of siding pieces here right not

1292
01:08:16,960 --> 01:08:19,840
that we really care about underside

1293
01:08:18,489 --> 01:08:22,269
lighting too much because we'll never

1294
01:08:19,840 --> 01:08:24,760
see it but I mean you know it could

1295
01:08:22,270 --> 01:08:25,990
cause other problems like it well you

1296
01:08:24,760 --> 01:08:28,030
know you'd have the same problem if you

1297
01:08:25,989 --> 01:08:30,969
were on the other side like over here on

1298
01:08:28,029 --> 01:08:32,679
a thin thing in fact you can sort of see

1299
01:08:30,970 --> 01:08:34,930
that happening right now right see how

1300
01:08:32,680 --> 01:08:37,200
that's lit and we don't want that to be

1301
01:08:34,930 --> 01:08:37,200
lit

1302
01:08:39,118 --> 01:08:44,068
so but that like I said that's kind of

1303
01:08:42,538 --> 01:08:45,688
getting there like I feel like we're

1304
01:08:44,069 --> 01:08:47,099
sort of getting a little bit closer now

1305
01:08:45,689 --> 01:08:50,579
we've got a way to kind of smear

1306
01:08:47,099 --> 01:08:52,649
lighting out into the environment and

1307
01:08:50,578 --> 01:08:54,588
produce something that you know could be

1308
01:08:52,649 --> 01:08:58,259
could potentially start to use game wise

1309
01:08:54,588 --> 01:09:00,929
and and that is a good thing I think

1310
01:08:58,259 --> 01:09:03,719
right now it's a little too soft and

1311
01:09:00,929 --> 01:09:07,408
again we don't know the direction from

1312
01:09:03,719 --> 01:09:09,599
which the light hits the surfaces yet

1313
01:09:07,408 --> 01:09:11,698
and that creates a problem because

1314
01:09:09,599 --> 01:09:13,559
without that piece of information we

1315
01:09:11,698 --> 01:09:17,728
don't actually have a way to compute

1316
01:09:13,559 --> 01:09:19,229
what the lighting should be how the

1317
01:09:17,729 --> 01:09:21,569
lighting should attenuate based on

1318
01:09:19,229 --> 01:09:23,338
surface angle and we do want that as

1319
01:09:21,569 --> 01:09:26,729
well and the reason we want that right

1320
01:09:23,338 --> 01:09:28,618
is to so we could differentiate surfaces

1321
01:09:26,729 --> 01:09:30,389
like here so you can kind of see how

1322
01:09:28,618 --> 01:09:31,978
this is all just really smooth but there

1323
01:09:30,389 --> 01:09:33,449
should have been a hard edge there cuz

1324
01:09:31,979 --> 01:09:35,519
this is a hard edge so the lighting

1325
01:09:33,448 --> 01:09:37,408
should change on the surface a little

1326
01:09:35,519 --> 01:09:43,979
bit more dramatically than than it does

1327
01:09:37,408 --> 01:09:56,488
so that's another one all right all

1328
01:09:43,979 --> 01:09:58,439
right stretch time okay all right so

1329
01:09:56,488 --> 01:10:00,299
we've got a little bit time left so

1330
01:09:58,439 --> 01:10:02,909
maybe what I'll I think what I might try

1331
01:10:00,300 --> 01:10:03,929
to do is I think I will try to go put in

1332
01:10:02,908 --> 01:10:06,719
a little bit of directional information

1333
01:10:03,929 --> 01:10:07,439
there I think that sounds like a good

1334
01:10:06,719 --> 01:10:10,019
plan to me

1335
01:10:07,439 --> 01:10:13,039
so in other words when we store these

1336
01:10:10,019 --> 01:10:16,349
light things in here we've got the color

1337
01:10:13,038 --> 01:10:19,438
I may try to store the direction as well

1338
01:10:16,349 --> 01:10:25,469
so what I'll do is I'll just say like

1339
01:10:19,439 --> 01:10:27,300
okay you know we send down the this

1340
01:10:25,469 --> 01:10:34,649
light data with stuff and I would like

1341
01:10:27,300 --> 01:10:36,840
to also send down I'd like to also send

1342
01:10:34,649 --> 01:10:38,309
down a light direction trying to think

1343
01:10:36,840 --> 01:10:40,760
of what the best way to send that down

1344
01:10:38,309 --> 01:10:40,760
would be

1345
01:10:45,119 --> 01:10:49,329
and if you look at this stuff you can

1346
01:10:47,829 --> 01:10:50,829
easily see how there's a lot of ways

1347
01:10:49,329 --> 01:10:53,800
that we can make this smaller and more

1348
01:10:50,829 --> 01:10:56,680
efficient as we would go forward when

1349
01:10:53,800 --> 01:10:59,230
when and if we need to so for example if

1350
01:10:56,680 --> 01:11:04,000
we do have that sort of lighting Texel

1351
01:10:59,229 --> 01:11:08,949
thing you can see how the lighting Texel

1352
01:11:04,000 --> 01:11:12,250
that's sort of discussed there it has a

1353
01:11:08,949 --> 01:11:14,679
full floating-point value for its

1354
01:11:12,250 --> 01:11:16,149
position but we probably don't need a

1355
01:11:14,680 --> 01:11:18,159
full floating-point value for its

1356
01:11:16,149 --> 01:11:20,829
position because remember it's confined

1357
01:11:18,159 --> 01:11:23,649
to a particular voxel we know that it's

1358
01:11:20,829 --> 01:11:26,710
in a particular voxel so we could just

1359
01:11:23,649 --> 01:11:28,869
have that position be relative to the

1360
01:11:26,710 --> 01:11:31,750
voxel corner at which point we could

1361
01:11:28,869 --> 01:11:35,739
probably store it at sixteen bits per

1362
01:11:31,750 --> 01:11:38,100
coordinate maybe even eight bits per

1363
01:11:35,739 --> 01:11:40,119
coordinate and be fine because

1364
01:11:38,100 --> 01:11:42,850
quantizing those values probably

1365
01:11:40,119 --> 01:11:45,309
wouldn't matter right we don't need to

1366
01:11:42,850 --> 01:11:47,800
know precisely where this lighting was

1367
01:11:45,310 --> 01:11:49,120
computed we can know like approximately

1368
01:11:47,800 --> 01:11:51,489
where it's computed and that would be

1369
01:11:49,119 --> 01:11:55,649
fine so you know we can imagine getting

1370
01:11:51,489 --> 01:11:58,689
that down to like au 32 even probably

1371
01:11:55,649 --> 01:12:00,879
for the position and the same would

1372
01:11:58,689 --> 01:12:03,129
probably be true for the direction so

1373
01:12:00,880 --> 01:12:05,289
I'm not gonna do that right now

1374
01:12:03,130 --> 01:12:08,380
but it's just worth noting that we could

1375
01:12:05,289 --> 01:12:10,149
do that so if we needed to in the future

1376
01:12:08,380 --> 01:12:13,960
we could easily do something where we

1377
01:12:10,149 --> 01:12:18,819
had more information here about what was

1378
01:12:13,960 --> 01:12:21,250
going on in that respect right so what

1379
01:12:18,819 --> 01:12:29,769
I'm gonna try doing here is I'm gonna

1380
01:12:21,250 --> 01:12:34,229
say let's go ahead and make a V for like

1381
01:12:29,770 --> 01:12:34,230
directional piece of information here

1382
01:12:37,948 --> 01:12:42,419
I don't know why I'm bothering to keep

1383
01:12:40,859 --> 01:12:44,788
track of how big these things are this

1384
01:12:42,420 --> 01:12:46,979
is not 8 megabytes anymore this is

1385
01:12:44,788 --> 01:12:49,948
something we don't know what it is I

1386
01:12:46,979 --> 01:12:51,929
mean we know it's 8 times 8 times 8

1387
01:12:49,948 --> 01:12:54,779
times 2 so we actually do know what it

1388
01:12:51,929 --> 01:13:00,630
is I guess we were keeping score 8 times

1389
01:12:54,779 --> 01:13:05,069
8 times 8 times 2 its 1024 so it's like

1390
01:13:00,630 --> 01:13:16,529
birth that really is that really that

1391
01:13:05,069 --> 01:13:18,090
small so that's fine and based on how

1392
01:13:16,529 --> 01:13:21,658
few lighting samples we're taking that

1393
01:13:18,090 --> 01:13:24,269
make sense right we don't need a voxel

1394
01:13:21,658 --> 01:13:26,279
to be huge if we're only taking 4096

1395
01:13:24,269 --> 01:13:27,958
lighting samples at maximum if we were

1396
01:13:26,279 --> 01:13:32,998
able to increase that lighting sample

1397
01:13:27,958 --> 01:13:34,439
number up to a higher number that would

1398
01:13:32,998 --> 01:13:37,288
probably argue for increasing the

1399
01:13:34,439 --> 01:13:40,198
resolution of the voxel because the only

1400
01:13:37,288 --> 01:13:42,889
point again the voxel is pointless we

1401
01:13:40,198 --> 01:13:44,908
wouldn't use the voxel for any purpose

1402
01:13:42,889 --> 01:13:47,458
if we didn't have to care about

1403
01:13:44,908 --> 01:13:48,988
computation time the voxel is purely

1404
01:13:47,458 --> 01:13:51,090
there to make sure we don't spend a ton

1405
01:13:48,988 --> 01:13:53,069
of time looking at letting samples that

1406
01:13:51,090 --> 01:13:55,578
are far away right that's the only

1407
01:13:53,069 --> 01:13:59,578
reason it's there so it only needs to be

1408
01:13:55,578 --> 01:14:02,158
it only needs to do that and in order to

1409
01:13:59,578 --> 01:14:04,738
do that effectively it just needs to

1410
01:14:02,158 --> 01:14:06,029
have a size proportional to the number

1411
01:14:04,738 --> 01:14:12,388
of lights that are actually being

1412
01:14:06,029 --> 01:14:14,868
computed right right now our lighting

1413
01:14:12,389 --> 01:14:18,059
computation is not particularly good

1414
01:14:14,868 --> 01:14:23,308
that is some old water I'm not drinking

1415
01:14:18,059 --> 01:14:24,900
that and so we don't really need the Vox

1416
01:14:23,309 --> 01:14:25,949
will be particularly big in the future

1417
01:14:24,899 --> 01:14:27,988
we're gonna have to tune these a little

1418
01:14:25,948 --> 01:14:28,948
bit more intelligently and you know

1419
01:14:27,988 --> 01:14:33,089
figure out what we're doing with them

1420
01:14:28,948 --> 01:14:35,609
but for now that's fine all right so

1421
01:14:33,090 --> 01:14:38,159
there we go that's our current situation

1422
01:14:35,609 --> 01:14:40,198
let's see if we can fill out this G with

1423
01:14:38,158 --> 01:14:41,308
something reasonable if I was going to

1424
01:14:40,198 --> 01:14:42,899
fill out this D with something

1425
01:14:41,309 --> 01:14:45,420
reasonable then what I would be able to

1426
01:14:42,899 --> 01:14:47,578
do is stuff a value in here where in

1427
01:14:45,420 --> 01:14:50,498
addition to C sampler we would have D

1428
01:14:47,578 --> 01:14:55,448
sampler like so

1429
01:14:50,498 --> 01:14:59,228
it's you know I if we wanted to we could

1430
01:14:55,448 --> 01:15:01,058
actually make the C value B well I don't

1431
01:14:59,229 --> 01:15:04,150
know what we really could let's leave it

1432
01:15:01,059 --> 01:15:05,769
at this so anyway if we have a D sampler

1433
01:15:04,149 --> 01:15:08,049
in there then when we actually look up

1434
01:15:05,769 --> 01:15:09,820
the color value for the light we can

1435
01:15:08,050 --> 01:15:14,429
actually look up the directional you for

1436
01:15:09,819 --> 01:15:17,018
the light so here's the light D like so

1437
01:15:14,429 --> 01:15:19,479
and once we look up that lighting value

1438
01:15:17,019 --> 01:15:22,559
in there we are able to use that as part

1439
01:15:19,479 --> 01:15:25,420
of the attenuation or any other kind of

1440
01:15:22,559 --> 01:15:29,710
value we would want so once we have the

1441
01:15:25,420 --> 01:15:32,469
contribute a stonking sample that we're

1442
01:15:29,710 --> 01:15:34,618
taking we could also add in something

1443
01:15:32,469 --> 01:15:35,920
there where we multiply the contribu

1444
01:15:34,618 --> 01:15:38,259
bias

1445
01:15:35,920 --> 01:15:40,719
you know the cosine for example again do

1446
01:15:38,260 --> 01:15:43,630
we have the macros for that yet we don't

1447
01:15:40,719 --> 01:15:46,328
have any macros

1448
01:15:43,630 --> 01:15:50,469
all right anyway where we have a cosine

1449
01:15:46,328 --> 01:15:51,728
so that we can take well I guess we

1450
01:15:50,469 --> 01:15:54,309
don't actually be cosine it when I said

1451
01:15:51,729 --> 01:15:56,889
that this will produce cosine for us so

1452
01:15:54,309 --> 01:15:59,260
we can take the inner product of the

1453
01:15:56,889 --> 01:16:02,078
lighting direction so we know where the

1454
01:15:59,260 --> 01:16:05,019
light is coming from and whatever the

1455
01:16:02,078 --> 01:16:06,969
world normal is so that'll give us a

1456
01:16:05,019 --> 01:16:08,979
cosine they'll tell us how coincident

1457
01:16:06,969 --> 01:16:12,809
those two are and as we get further away

1458
01:16:08,979 --> 01:16:17,219
the lighting will contribute less right

1459
01:16:12,809 --> 01:16:20,409
so that's really all we need to do to

1460
01:16:17,219 --> 01:16:22,059
get to get that working that's that's

1461
01:16:20,408 --> 01:16:24,158
really about it so most of the work is

1462
01:16:22,059 --> 01:16:28,960
going to be plumbing here of getting

1463
01:16:24,158 --> 01:16:30,399
that D value down to the system so let's

1464
01:16:28,960 --> 01:16:33,069
go ahead and take a look at the render

1465
01:16:30,399 --> 01:16:35,228
group entry here we just need some way

1466
01:16:33,069 --> 01:16:37,748
of passing down whatever this is going

1467
01:16:35,229 --> 01:16:40,510
to be so we just need something that

1468
01:16:37,748 --> 01:16:47,158
like passes down a pointer value to that

1469
01:16:40,510 --> 01:16:47,159
to that D there and yeah

1470
01:16:53,238 --> 01:16:56,238
oops

1471
01:16:57,408 --> 01:17:07,408
no we're push lighting is there it is so

1472
01:17:06,270 --> 01:17:14,909
really all we need to do here is just

1473
01:17:07,408 --> 01:17:19,198
copy that pointer out and that's gonna

1474
01:17:14,908 --> 01:17:21,569
be an f32 here so and when we have those

1475
01:17:19,198 --> 01:17:23,879
values in the opengl side of things we

1476
01:17:21,569 --> 01:17:28,380
just need a way of making sure that

1477
01:17:23,880 --> 01:17:31,920
those get pushed through I think that's

1478
01:17:28,380 --> 01:17:36,618
all we have to do there and then when we

1479
01:17:31,920 --> 01:17:36,618
actually sort of set up the SI sampler

1480
01:17:41,420 --> 01:17:44,420
doo-doo-doo

1481
01:17:52,449 --> 01:18:01,439
where is it there it is when we actually

1482
01:17:56,170 --> 01:18:01,440
submit these textures yeah we have to

1483
01:18:01,529 --> 01:18:07,300
put lighting D in there and this one's

1484
01:18:05,529 --> 01:18:10,090
gonna be it's not going to be the same

1485
01:18:07,300 --> 01:18:14,680
format right this one's gonna be floats

1486
01:18:10,090 --> 01:18:17,890
for now and the internal storage format

1487
01:18:14,680 --> 01:18:33,159
for it is a log S it's specified

1488
01:18:17,890 --> 01:18:34,630
elsewhere yeah so we've got these sort

1489
01:18:33,159 --> 01:18:40,960
of hard-coded here

1490
01:18:34,630 --> 01:18:46,840
active texture 2 3 &amp; 4 which we it isn't

1491
01:18:40,960 --> 01:18:50,859
fabulous so we kind of just made those

1492
01:18:46,840 --> 01:18:55,360
line up just out of whimsy there that's

1493
01:18:50,859 --> 01:18:57,509
alright I mean what could possibly go

1494
01:18:55,359 --> 01:18:57,509
wrong

1495
01:18:57,750 --> 01:19:05,710
I'm sure it will be fine yeah anyway let

1496
01:19:04,210 --> 01:19:12,880
me actually go ahead and finish this

1497
01:19:05,710 --> 01:19:15,130
though so when we bind this guy this is

1498
01:19:12,880 --> 01:19:18,279
gonna be exactly the same code as this

1499
01:19:15,130 --> 01:19:20,560
only it's gonna be float instead so this

1500
01:19:18,279 --> 01:19:23,009
is a floating point texture like I said

1501
01:19:20,560 --> 01:19:25,780
we probably don't really want to do that

1502
01:19:23,010 --> 01:19:27,699
you know to be honest we don't yeah we

1503
01:19:25,779 --> 01:19:33,689
really don't need to do these as floats

1504
01:19:27,699 --> 01:19:36,309
at all but but for now we just are so I

1505
01:19:33,689 --> 01:19:37,779
feel like we don't want to introduce

1506
01:19:36,310 --> 01:19:39,700
complexity of like figuring out

1507
01:19:37,779 --> 01:19:41,769
quantization and stuff like this for no

1508
01:19:39,699 --> 01:19:44,319
reason so that's why I'm just at the

1509
01:19:41,770 --> 01:19:46,210
moment leaving everything in its normal

1510
01:19:44,319 --> 01:19:48,399
form without trying to smack anything

1511
01:19:46,210 --> 01:19:50,619
down into a smaller space or quantize

1512
01:19:48,399 --> 01:19:52,089
something that we don't need to just

1513
01:19:50,619 --> 01:19:53,289
because as we're experimenting with

1514
01:19:52,090 --> 01:19:55,360
lighting I don't want to introduce

1515
01:19:53,289 --> 01:19:58,390
additional things that could create bugs

1516
01:19:55,359 --> 01:20:00,969
which then we think are yielding

1517
01:19:58,390 --> 01:20:02,230
improper results or throw away some

1518
01:20:00,970 --> 01:20:03,190
experiment cuz it doesn't work when it

1519
01:20:02,229 --> 01:20:04,449
turns out the only reason it doesn't

1520
01:20:03,189 --> 01:20:05,198
work is because we had like a bug and

1521
01:20:04,449 --> 01:20:07,359
how we require

1522
01:20:05,198 --> 01:20:08,708
or something like that so that's the

1523
01:20:07,359 --> 01:20:10,978
only reason I'm keeping something like

1524
01:20:08,708 --> 01:20:14,198
this in floats we absolutely don't need

1525
01:20:10,979 --> 01:20:16,510
vectors in here and we probably won't

1526
01:20:14,198 --> 01:20:20,018
you know in the final version Everest or

1527
01:20:16,510 --> 01:20:22,809
anything like that but just you know

1528
01:20:20,019 --> 01:20:26,590
keep that in mind that's that's what's

1529
01:20:22,809 --> 01:20:29,010
you know that's what's going on okay so

1530
01:20:26,590 --> 01:20:32,260
now that we've got that straightened out

1531
01:20:29,010 --> 01:20:33,760
I just I'm not sure that it's gonna find

1532
01:20:32,260 --> 01:20:36,248
those correctly let me look at how that

1533
01:20:33,760 --> 01:20:46,510
was working so if we take a look at

1534
01:20:36,248 --> 01:20:53,889
lighting see I guess it really just does

1535
01:20:46,510 --> 01:20:55,630
depend on the order so it would just

1536
01:20:53,889 --> 01:20:58,208
knew that it was gonna be like okay

1537
01:20:55,630 --> 01:20:59,769
texture sampler def sampler Phoenix and

1538
01:20:58,208 --> 01:21:01,988
pursue sampler do simply look up sampler

1539
01:20:59,769 --> 01:21:09,219
somehow it knew that these were where

1540
01:21:01,988 --> 01:21:11,488
those were gonna be uh which is kind of

1541
01:21:09,219 --> 01:21:11,489
nuts

1542
01:21:15,319 --> 01:21:17,380
you

1543
01:21:21,130 --> 01:21:24,180
[Music]

1544
01:21:26,729 --> 01:21:35,829
so here's the Z bias program right and

1545
01:21:31,149 --> 01:21:39,609
you can kind of see you can see in here

1546
01:21:35,828 --> 01:21:41,799
it's gonna call us use program began and

1547
01:21:39,609 --> 01:21:44,649
that's gonna go through here for each of

1548
01:21:41,800 --> 01:21:47,920
these GL uniforms and it's gonna set the

1549
01:21:44,649 --> 01:21:55,779
sampler index to be like 0 1 2 3 4 5 6 7

1550
01:21:47,920 --> 01:21:58,090
right so it literally sets them in this

1551
01:21:55,779 --> 01:22:01,868
in that order that they showed up here

1552
01:21:58,090 --> 01:22:04,389
right it's texture sampler depth sampler

1553
01:22:01,868 --> 01:22:07,268
next sampler see sampler D sampler look

1554
01:22:04,389 --> 01:22:11,800
up sampler I mean that's that's the

1555
01:22:07,269 --> 01:22:13,659
order they're gonna go in so if I look

1556
01:22:11,800 --> 01:22:16,719
up lighting see where that's actually

1557
01:22:13,658 --> 01:22:21,788
it's let's see where that's actually

1558
01:22:16,719 --> 01:22:24,158
getting bound in here then it's texture

1559
01:22:21,788 --> 01:22:26,978
sampler depth sampler P neck sampler see

1560
01:22:24,158 --> 01:22:32,679
a sampler put any you know hey it does

1561
01:22:26,979 --> 01:22:42,999
line up so you know I guess that just

1562
01:22:32,679 --> 01:22:46,599
works alright implicit castrum Veck for

1563
01:22:42,998 --> 01:22:50,319
Tyvek 3 sorry about that

1564
01:22:46,599 --> 01:22:52,349
I didn't mean to that should be right in

1565
01:22:50,319 --> 01:22:52,349
here

1566
01:23:08,639 --> 01:23:18,539
okay so now at least in theory we are

1567
01:23:17,368 --> 01:23:21,868
taking into account the lighting

1568
01:23:18,539 --> 01:23:25,170
direction everything will be black as it

1569
01:23:21,868 --> 01:23:27,089
was there because even if we did

1570
01:23:25,170 --> 01:23:28,529
everything right we are not filling out

1571
01:23:27,090 --> 01:23:32,850
that lighting direction with any

1572
01:23:28,529 --> 01:23:34,319
information so what we want to do now is

1573
01:23:32,850 --> 01:23:35,639
we want to figure out a way when we

1574
01:23:34,319 --> 01:23:38,519
compute the lighting to put something

1575
01:23:35,639 --> 01:23:40,079
useful in there right so when we're

1576
01:23:38,520 --> 01:23:41,639
packing this stuff down and we're

1577
01:23:40,079 --> 01:23:44,550
setting the stuff up right here you can

1578
01:23:41,639 --> 01:23:46,800
see us doing this computation you can

1579
01:23:44,550 --> 01:23:51,260
see us computing the color value that

1580
01:23:46,800 --> 01:23:54,360
we're gonna have here and you can see us

1581
01:23:51,260 --> 01:23:57,000
sort of sticking that value into desc

1582
01:23:54,359 --> 01:24:02,219
see what we need to do here is stick

1583
01:23:57,000 --> 01:24:05,789
some value into into the directional

1584
01:24:02,219 --> 01:24:07,948
component right now the problem with

1585
01:24:05,789 --> 01:24:10,050
this is it's harder than it looks

1586
01:24:07,948 --> 01:24:11,460
because I don't think we tracked this

1587
01:24:10,050 --> 01:24:13,829
information so we're gonna have to

1588
01:24:11,460 --> 01:24:16,939
actually do some work to go in and put

1589
01:24:13,829 --> 01:24:20,189
in tracking this information I believe

1590
01:24:16,939 --> 01:24:24,178
but in terms of like render elements

1591
01:24:20,189 --> 01:24:29,460
here I don't remember where we defined

1592
01:24:24,179 --> 01:24:32,130
lighting elements I'm going to look so

1593
01:24:29,460 --> 01:24:33,868
here's the lighting elements and what

1594
01:24:32,130 --> 01:24:37,469
you can see from the lighting elements

1595
01:24:33,868 --> 01:24:44,339
is that although they store they're

1596
01:24:37,469 --> 01:24:50,340
normal they don't store a any particular

1597
01:24:44,340 --> 01:24:58,710
idea of what direction they're incident

1598
01:24:50,340 --> 01:25:02,610
light came from right and so the actual

1599
01:24:58,710 --> 01:25:05,600
amount of color that they should be

1600
01:25:02,609 --> 01:25:07,979
proof that they want to say is here

1601
01:25:05,600 --> 01:25:10,980
we're not really tracking that quite

1602
01:25:07,979 --> 01:25:13,019
right yet so we kind of have to go back

1603
01:25:10,979 --> 01:25:14,609
into the lighting computation code which

1604
01:25:13,020 --> 01:25:16,440
is okay because that's code now that we

1605
01:25:14,609 --> 01:25:19,889
actually have to start improving and

1606
01:25:16,439 --> 01:25:22,079
probably turn into GPU side code I'm

1607
01:25:19,889 --> 01:25:22,380
guessing I'm not sure because it depends

1608
01:25:22,079 --> 01:25:25,319
on how

1609
01:25:22,380 --> 01:25:27,150
we want to do this long-term but we need

1610
01:25:25,319 --> 01:25:30,329
to do something with that code so that

1611
01:25:27,149 --> 01:25:32,339
it runs in real time or runs over a

1612
01:25:30,329 --> 01:25:33,869
series of frames and gradually updates

1613
01:25:32,340 --> 01:25:35,279
its results or whatever else we're going

1614
01:25:33,869 --> 01:25:36,719
to decide to do with it but whatever we

1615
01:25:35,279 --> 01:25:40,309
decide to do with it we have to make it

1616
01:25:36,719 --> 01:25:42,270
so that it outputs solutions every frame

1617
01:25:40,310 --> 01:25:49,489
rather than being something that you hit

1618
01:25:42,270 --> 01:25:52,530
f1 to do right so if we're gonna do that

1619
01:25:49,488 --> 01:25:54,089
we need to go look at how our lighting

1620
01:25:52,529 --> 01:25:56,189
is being computed and when our lettings

1621
01:25:54,090 --> 01:25:59,029
being computed we need to sort of put

1622
01:25:56,189 --> 01:25:59,029
that information in there

1623
01:25:59,270 --> 01:26:07,080
so let's where's that's not what I

1624
01:26:04,260 --> 01:26:09,650
wanted let's go into render group here

1625
01:26:07,079 --> 01:26:16,738
where the lighting is getting computed

1626
01:26:09,649 --> 01:26:18,479
which is here and we're skipping the

1627
01:26:16,738 --> 01:26:20,759
ambient occlusion right that doesn't

1628
01:26:18,479 --> 01:26:22,019
actually occur yet and here's the

1629
01:26:20,760 --> 01:26:23,880
compute lighting so you can see what it

1630
01:26:22,020 --> 01:26:26,940
does is it has some number of iterations

1631
01:26:23,880 --> 01:26:29,520
it goes through each of the elements it

1632
01:26:26,939 --> 01:26:34,229
casts out a bunch of rays to see what it

1633
01:26:29,520 --> 01:26:39,270
can hit and retrieve and then when it's

1634
01:26:34,229 --> 01:26:41,519
done it goes through each of the well I

1635
01:26:39,270 --> 01:26:42,929
should say that this source index here

1636
01:26:41,520 --> 01:26:45,179
is it going through those to see whether

1637
01:26:42,929 --> 01:26:48,929
there's any shadowing when it actually

1638
01:26:45,179 --> 01:26:51,929
finds something that if that it hits it

1639
01:26:48,929 --> 01:26:55,590
goes ahead and accumulates the color

1640
01:26:51,929 --> 01:27:00,179
value from whatever the this particular

1641
01:26:55,590 --> 01:27:03,779
one was right so let's take a look here

1642
01:27:00,179 --> 01:27:07,190
so here's the ray caster right it's

1643
01:27:03,779 --> 01:27:10,300
gonna cast some number of rays from

1644
01:27:07,189 --> 01:27:10,299
[Music]

1645
01:27:17,969 --> 01:27:22,380
wait what is it gonna do

1646
01:27:37,560 --> 01:27:45,420
this is very weird how did we end up

1647
01:27:43,920 --> 01:27:48,480
with this structured like this this is

1648
01:27:45,420 --> 01:27:50,130
the the problem of having to have two or

1649
01:27:48,479 --> 01:27:53,689
three months out for however long it was

1650
01:27:50,130 --> 01:27:53,690
with the Intel chip fiasco

1651
01:27:53,840 --> 01:27:59,010
so we're looping over each of our

1652
01:27:56,550 --> 01:28:01,710
iterations which makes sense we're

1653
01:27:59,010 --> 01:28:03,300
taking each destination so that we're

1654
01:28:01,710 --> 01:28:08,029
going to update our lighting elements

1655
01:28:03,300 --> 01:28:10,409
right we're taking a set of rays and

1656
01:28:08,029 --> 01:28:17,789
initializing some directions we might

1657
01:28:10,409 --> 01:28:20,399
cast you know off those rays and then

1658
01:28:17,789 --> 01:28:29,600
rather than looping over the Rays we

1659
01:28:20,399 --> 01:28:34,729
decided to loop over the sources and

1660
01:28:29,600 --> 01:28:38,420
then test whether the Rays hit for that

1661
01:28:34,729 --> 01:28:38,419
particular ray

1662
01:28:46,479 --> 01:28:50,750
it's just a strange way for me to have

1663
01:28:49,220 --> 01:28:51,980
structured this and I realized we were

1664
01:28:50,750 --> 01:28:54,050
playing around this code a bunch so

1665
01:28:51,979 --> 01:28:56,599
maybe I hadn't you know maybe we kind of

1666
01:28:54,050 --> 01:29:01,820
backed into it but it seems like you

1667
01:28:56,600 --> 01:29:05,770
would loop over the Rays first and you

1668
01:29:01,819 --> 01:29:05,769
would loop over the sources second

1669
01:29:07,359 --> 01:29:11,899
because otherwise you're computing the

1670
01:29:09,649 --> 01:29:14,719
transference like why are you computing

1671
01:29:11,899 --> 01:29:21,949
all of this stuff if you're never gonna

1672
01:29:14,720 --> 01:29:24,530
use it right you only do this I mean

1673
01:29:21,949 --> 01:29:26,029
you're granted the optimizer probably

1674
01:29:24,529 --> 01:29:28,369
doesn't have any trouble figuring that

1675
01:29:26,029 --> 01:29:30,469
out because you can see that the only

1676
01:29:28,369 --> 01:29:32,869
place that result is used is inside here

1677
01:29:30,470 --> 01:29:37,880
so there's no real problem with that

1678
01:29:32,869 --> 01:29:40,729
like it's not you know it's not awful or

1679
01:29:37,880 --> 01:29:42,800
anything but it's just strange like I'm

1680
01:29:40,729 --> 01:29:44,859
not sure why you would be doing it that

1681
01:29:42,800 --> 01:29:44,860
way

1682
01:29:51,270 --> 01:29:58,980
I'm not sure why you do it that way and

1683
01:29:53,640 --> 01:30:01,230
I'm also not sure why you would store

1684
01:29:58,979 --> 01:30:03,049
all the Rays simultaneous like that

1685
01:30:01,229 --> 01:30:06,569
because if you just looped over the Rays

1686
01:30:03,050 --> 01:30:11,630
then you don't care you don't have to

1687
01:30:06,569 --> 01:30:11,630
store them in a separate array right

1688
01:30:25,180 --> 01:30:34,539
that is to some really strange stuff

1689
01:30:30,579 --> 01:30:37,039
that is that is just purely peculiar I

1690
01:30:34,539 --> 01:30:40,699
feel like we should reorganize that to

1691
01:30:37,039 --> 01:30:44,719
be clear because again I just don't see

1692
01:30:40,699 --> 01:30:46,399
any reason for it to look like that it's

1693
01:30:44,719 --> 01:30:47,449
very counterintuitive and I realized

1694
01:30:46,399 --> 01:30:51,649
that the reason for that is probably

1695
01:30:47,449 --> 01:30:53,359
because we added we started with a sort

1696
01:30:51,649 --> 01:30:55,039
of bi-directional radius transfer kind

1697
01:30:53,359 --> 01:30:58,009
of structure which is dest source N

1698
01:30:55,039 --> 01:31:02,000
squared and then we added the REA check

1699
01:30:58,010 --> 01:31:04,400
inside so it makes sense I guess why end

1700
01:31:02,000 --> 01:31:05,930
up this way based on we did it but just

1701
01:31:04,399 --> 01:31:07,429
because we did it that way doesn't mean

1702
01:31:05,930 --> 01:31:10,940
we should leave it that way so it kind

1703
01:31:07,430 --> 01:31:12,739
of feels like this should get unspun I

1704
01:31:10,939 --> 01:31:14,659
don't know want to know if I want to do

1705
01:31:12,738 --> 01:31:16,699
that right now because we might want to

1706
01:31:14,659 --> 01:31:18,619
wait till next weekend to start that but

1707
01:31:16,699 --> 01:31:21,550
that's probably something we should do

1708
01:31:18,619 --> 01:31:21,550
I'm gonna put a little

1709
01:31:43,159 --> 01:31:47,670
so yeah I think that's probably because

1710
01:31:45,869 --> 01:31:49,229
I don't see any benefit to doing it the

1711
01:31:47,670 --> 01:31:56,850
way that we're doing it it seems just

1712
01:31:49,229 --> 01:31:59,099
purely it seems like just purely more

1713
01:31:56,850 --> 01:32:00,570
work so I'm just gonna assume that that

1714
01:31:59,100 --> 01:32:01,860
was because of the way we happen to do

1715
01:32:00,569 --> 01:32:02,840
it and that there's no good reason for

1716
01:32:01,859 --> 01:32:06,149
it

1717
01:32:02,840 --> 01:32:08,909
anyway point being when we actually do

1718
01:32:06,149 --> 01:32:13,229
this summation and we're accumulating

1719
01:32:08,909 --> 01:32:16,050
our results into a qmc one of the things

1720
01:32:13,229 --> 01:32:20,039
that we do that we can tell about that I

1721
01:32:16,050 --> 01:32:21,690
suppose at this point is well let me

1722
01:32:20,039 --> 01:32:23,988
take a look at where Kim's he's even

1723
01:32:21,689 --> 01:32:23,988
used

1724
01:32:38,319 --> 01:32:45,250
you know I don't it's just even right

1725
01:32:42,239 --> 01:32:46,750
because if this accumulator is getting

1726
01:32:45,250 --> 01:32:50,109
this doesn't even really make sense to

1727
01:32:46,750 --> 01:32:53,140
me so in order for the closest hit ray

1728
01:32:50,109 --> 01:32:55,029
index stuff to work you have to have

1729
01:32:53,140 --> 01:32:59,200
checked all the sources first but this

1730
01:32:55,029 --> 01:33:01,389
looks like your accumulator it looks

1731
01:32:59,199 --> 01:33:06,059
like this would be order dependent right

1732
01:33:01,390 --> 01:33:06,060
like yeah this is just not right

1733
01:33:18,229 --> 01:33:23,589
I mean that just does not make any sense

1734
01:33:21,020 --> 01:33:23,590
to me whatsoever

1735
01:33:34,939 --> 01:33:38,599
so I I mean I yeah but that really

1736
01:33:37,310 --> 01:33:41,030
doesn't make any sense to me so I think

1737
01:33:38,600 --> 01:33:45,340
that's just kind of bogus and probably

1738
01:33:41,029 --> 01:33:45,340
not something that we really want to use

1739
01:33:47,739 --> 01:33:53,869
because you can see this closest hit Rea

1740
01:33:51,380 --> 01:33:55,970
index equals tear a thing we're

1741
01:33:53,869 --> 01:33:58,069
accumulating a value but we don't yet

1742
01:33:55,970 --> 01:34:02,600
know what the closest hit value is going

1743
01:33:58,069 --> 01:34:04,489
to be right so in order to know that

1744
01:34:02,600 --> 01:34:07,180
this is the closest value we have to

1745
01:34:04,489 --> 01:34:12,559
have looped over all the sources first

1746
01:34:07,180 --> 01:34:17,140
right and this would have to be Akuma C

1747
01:34:12,560 --> 01:34:24,380
equals result not plus equals result

1748
01:34:17,140 --> 01:34:26,600
right and we would need to store one

1749
01:34:24,380 --> 01:34:29,270
result per Rey yeah this is just this is

1750
01:34:26,600 --> 01:34:37,670
just kind of garbage like I don't think

1751
01:34:29,270 --> 01:34:40,090
that is it all sane I'm pretty sure it's

1752
01:34:37,670 --> 01:34:40,090
not saying

1753
01:34:43,659 --> 01:34:49,630
I'm just gonna edit this now because why

1754
01:34:47,569 --> 01:34:49,630
not

1755
01:34:53,739 --> 01:35:02,449
so if we take a look what's going on

1756
01:34:56,210 --> 01:35:06,949
here what I want to do is produce our

1757
01:35:02,449 --> 01:35:10,819
piece of rate information so forget that

1758
01:35:06,949 --> 01:35:12,170
like that's done that's over so what we

1759
01:35:10,819 --> 01:35:15,109
want to do here is we want to produce a

1760
01:35:12,170 --> 01:35:19,430
redirection right we want a Rea

1761
01:35:15,109 --> 01:35:22,579
direction here all right and we want to

1762
01:35:19,430 --> 01:35:23,840
loop over a number of rays so how many

1763
01:35:22,579 --> 01:35:25,010
race we're gonna do I don't know

1764
01:35:23,840 --> 01:35:27,680
actually you know I guess I shouldn't

1765
01:35:25,010 --> 01:35:32,539
believe that quite we're going to see

1766
01:35:27,680 --> 01:35:36,920
how many we're doing eight rays all

1767
01:35:32,539 --> 01:35:39,939
right so we're doing a trays and then

1768
01:35:36,920 --> 01:35:41,720
here we've got a ray direction and

1769
01:35:39,939 --> 01:35:44,989
that's the right direction that we

1770
01:35:41,720 --> 01:35:50,869
picked all right we've got a closest hit

1771
01:35:44,989 --> 01:35:52,609
let's just keep one of our f/32 max and

1772
01:35:50,869 --> 01:35:54,939
then we're going to do this nonsense

1773
01:35:52,609 --> 01:35:54,939
here

1774
01:36:00,179 --> 01:36:06,000
okay so we computed our array direction

1775
01:36:08,849 --> 01:36:14,770
we don't need an accumulator because

1776
01:36:12,149 --> 01:36:18,460
that well I mean we do but it's gonna go

1777
01:36:14,770 --> 01:36:22,690
outside right so for a particular array

1778
01:36:18,460 --> 01:36:24,609
we go through and we now test all the

1779
01:36:22,689 --> 01:36:35,019
sources to see whatever the closest hit

1780
01:36:24,609 --> 01:36:36,729
was right to camera looks like something

1781
01:36:35,020 --> 01:36:39,099
that can be computed outside it's not

1782
01:36:36,729 --> 01:36:45,488
dependent on the Ray so then we do

1783
01:36:39,099 --> 01:36:47,260
through all of our sources and we really

1784
01:36:45,488 --> 01:36:49,328
don't need anything but the light

1785
01:36:47,260 --> 01:36:54,010
distance here

1786
01:36:49,328 --> 01:36:55,840
so this ref C emits C stuff can go in

1787
01:36:54,010 --> 01:36:58,539
here so really all we're doing is

1788
01:36:55,840 --> 01:37:02,050
checking to make sure the light is not

1789
01:36:58,539 --> 01:37:03,729
on top of us right but assuming the

1790
01:37:02,050 --> 01:37:06,639
light's not on top of us then off we

1791
01:37:03,729 --> 01:37:09,968
would go we don't really need to do that

1792
01:37:06,639 --> 01:37:11,800
yet though I don't think because we can

1793
01:37:09,969 --> 01:37:16,658
actually do this stuff now on the

1794
01:37:11,800 --> 01:37:20,260
outside so for each source ray we would

1795
01:37:16,658 --> 01:37:23,529
just go through and say all right we

1796
01:37:20,260 --> 01:37:25,000
know what the ray source n is because

1797
01:37:23,529 --> 01:37:27,279
whatever the Ray direction is time

1798
01:37:25,000 --> 01:37:30,069
source and there it is we can do this

1799
01:37:27,279 --> 01:37:33,750
testing all just works and then if we

1800
01:37:30,069 --> 01:37:42,279
eventually make it into the closest it

1801
01:37:33,750 --> 01:37:45,090
stuff here where we know we've hit this

1802
01:37:42,279 --> 01:37:45,090
particular source

1803
01:37:47,420 --> 01:37:51,748
sorry I don't know why white did what I

1804
01:37:50,158 --> 01:38:09,498
just did there I didn't mean to do that

1805
01:37:51,748 --> 01:38:09,498
I meant to do I meant to do that

1806
01:38:10,078 --> 01:38:14,840
so we loop through the source indices

1807
01:38:17,118 --> 01:38:23,998
and we just figure out which one the

1808
01:38:19,380 --> 01:38:27,510
closest it was right so we would just

1809
01:38:23,998 --> 01:38:31,109
keep instead of an array of these we

1810
01:38:27,510 --> 01:38:43,289
just keep one and we'd also keep like a

1811
01:38:31,109 --> 01:38:45,808
you know source hit so on so that

1812
01:38:43,288 --> 01:38:48,809
figures out for this Rea who did we

1813
01:38:45,809 --> 01:38:51,360
actually hit and when we know who we

1814
01:38:48,809 --> 01:38:54,989
actually hit out here you know if source

1815
01:38:51,359 --> 01:38:56,639
it is not equal to what we set it to at

1816
01:38:54,988 --> 01:39:01,978
the beginning so if we actually found a

1817
01:38:56,639 --> 01:39:09,319
hit then and only then would we come

1818
01:39:01,979 --> 01:39:09,320
through and do this stuff right

1819
01:39:14,579 --> 01:39:19,539
so in the case where we actually have a

1820
01:39:17,229 --> 01:39:21,579
valid hit and we know it's the closest

1821
01:39:19,539 --> 01:39:26,500
hit then we would actually come through

1822
01:39:21,579 --> 01:39:35,948
here and compute the lighting transfer

1823
01:39:26,500 --> 01:39:45,579
between the two of them right and then I

1824
01:39:35,948 --> 01:39:49,019
think we're actually done it's just a

1825
01:39:45,579 --> 01:39:49,019
qmc ever set to anything

1826
01:39:57,418 --> 01:40:01,948
so as we come through here yet this this

1827
01:39:59,698 --> 01:40:10,859
right here would be like the qmc plus

1828
01:40:01,948 --> 01:40:12,388
equals total light I guess right so

1829
01:40:10,859 --> 01:40:17,130
that's all of the lighting contribution

1830
01:40:12,389 --> 01:40:19,559
that comes in and then when we're done

1831
01:40:17,130 --> 01:40:21,899
with all that and we've accumulated all

1832
01:40:19,559 --> 01:40:25,229
of it across all of the Rays for that

1833
01:40:21,899 --> 01:40:30,329
destiny oops for that destination then

1834
01:40:25,229 --> 01:40:33,168
it would get summed in I think that's

1835
01:40:30,328 --> 01:40:33,168
actually correct

1836
01:40:44,369 --> 01:40:47,470
[Music]

1837
01:40:50,449 --> 01:41:02,029
so yeah this to light here gets

1838
01:40:57,890 --> 01:41:04,880
normalized eventually by the light

1839
01:41:02,029 --> 01:41:09,460
distance do we actually use to light in

1840
01:41:04,880 --> 01:41:09,460
here no we don't so this is actually

1841
01:41:25,538 --> 01:41:29,929
in here and the only problem that we're

1842
01:41:27,828 --> 01:41:31,429
having to make sure we don't test it

1843
01:41:29,929 --> 01:41:33,439
against itself because it will always be

1844
01:41:31,429 --> 01:41:37,998
its own closest hit since it's right on

1845
01:41:33,439 --> 01:41:39,829
top of itself obviously so in here we

1846
01:41:37,998 --> 01:41:44,378
have to do a thing that's like if source

1847
01:41:39,828 --> 01:41:44,378
index is not equal to desk index right

1848
01:41:53,039 --> 01:41:56,180
[Music]

1849
01:41:56,590 --> 01:42:07,668
so now that's reorganized to be more

1850
01:41:59,118 --> 01:42:12,469
sane here we're taking however many rays

1851
01:42:07,668 --> 01:42:15,858
we're doing and we're sort of waiting by

1852
01:42:12,469 --> 01:42:19,029
that I guess we just need to have that

1853
01:42:15,859 --> 01:42:19,030
be a constant

1854
01:42:37,300 --> 01:42:42,170
and off we go

1855
01:42:39,488 --> 01:42:43,939
now in order to see whether I just

1856
01:42:42,170 --> 01:42:46,539
completely ruined all of our code or not

1857
01:42:43,939 --> 01:42:52,399
obviously we have to stop doing this

1858
01:42:46,539 --> 01:42:54,140
because that will kill any we are still

1859
01:42:52,399 --> 01:42:56,899
not setting those D values so that would

1860
01:42:54,140 --> 01:42:58,670
immediately kill anything that we did so

1861
01:42:56,899 --> 01:43:00,829
hey there we go now we've actually got

1862
01:42:58,670 --> 01:43:01,579
our lighting back and I think it's

1863
01:43:00,829 --> 01:43:05,359
actually working

1864
01:43:01,579 --> 01:43:07,809
more correctly now perhaps although I

1865
01:43:05,359 --> 01:43:10,609
don't actually know because I'm not sure

1866
01:43:07,810 --> 01:43:12,260
like it's kind of hard to tell without a

1867
01:43:10,609 --> 01:43:15,229
more we don't really have good lighting

1868
01:43:12,260 --> 01:43:17,449
testing code at the moment we don't have

1869
01:43:15,229 --> 01:43:20,000
like a Cornell box or something we can

1870
01:43:17,448 --> 01:43:22,039
set up to see whether our lighting is

1871
01:43:20,000 --> 01:43:23,779
getting better or worse when we make

1872
01:43:22,039 --> 01:43:28,460
changes like that but it looks roughly

1873
01:43:23,779 --> 01:43:32,779
the same to me and so we haven't

1874
01:43:28,460 --> 01:43:34,090
destroyed it too much anyway so that's

1875
01:43:32,779 --> 01:43:36,319
the good news

1876
01:43:34,090 --> 01:43:39,170
all right so now that we took care of

1877
01:43:36,319 --> 01:43:41,649
that how much time do we have left here

1878
01:43:39,170 --> 01:43:45,380
what's the status

1879
01:43:41,649 --> 01:43:46,698
13:11 so we've got four minutes left so

1880
01:43:45,380 --> 01:43:49,969
we're not gonna get very much done in

1881
01:43:46,698 --> 01:43:52,579
four minutes but that's okay let's go

1882
01:43:49,969 --> 01:43:54,920
ahead and try to do this so we've got

1883
01:43:52,579 --> 01:43:59,000
our D value here and I'm what I'm gonna

1884
01:43:54,920 --> 01:44:06,289
do for our D value is I'm gonna say that

1885
01:43:59,000 --> 01:44:08,448
for these lighting elements we we really

1886
01:44:06,289 --> 01:44:10,460
want to sort of start to converge on

1887
01:44:08,448 --> 01:44:13,159
like a more sane structure for these

1888
01:44:10,460 --> 01:44:16,579
letting elements and figure out what

1889
01:44:13,159 --> 01:44:18,819
we're trying to actually say here and so

1890
01:44:16,579 --> 01:44:21,710
what I want to do is have some way of

1891
01:44:18,819 --> 01:44:26,948
producing like okay you know for the

1892
01:44:21,710 --> 01:44:30,920
lighting we want to canonical values

1893
01:44:26,948 --> 01:44:39,229
there's like a you know incident light

1894
01:44:30,920 --> 01:44:41,739
and a you know I I think technically

1895
01:44:39,229 --> 01:44:44,239
it's it's generally called a vent normal

1896
01:44:41,739 --> 01:44:47,239
but I don't really love that term so I'm

1897
01:44:44,239 --> 01:44:53,449
gonna call it like average direction to

1898
01:44:47,239 --> 01:44:56,119
lighting to light and so the two values

1899
01:44:53,449 --> 01:44:59,479
that we need is like an RGB value that's

1900
01:44:56,119 --> 01:45:05,960
like here is how the light is is you

1901
01:44:59,479 --> 01:45:09,549
know kind of coming in incident - oh did

1902
01:45:05,960 --> 01:45:09,550
we just lose our net connection ooh

1903
01:45:15,050 --> 01:45:19,550
so I guess I'm talking to myself here

1904
01:45:17,750 --> 01:45:21,529
looks like the net went down I'm looking

1905
01:45:19,550 --> 01:45:24,949
at it here and and all of my programs

1906
01:45:21,529 --> 01:45:29,359
are basically on the left here saying as

1907
01:45:24,949 --> 01:45:32,479
of about two minutes ago three minutes

1908
01:45:29,359 --> 01:45:34,839
ago everything is down and that's that's

1909
01:45:32,479 --> 01:45:34,839
not good

1910
01:45:37,479 --> 01:45:44,359
yeah well so sorry there will apparently

1911
01:45:42,020 --> 01:45:47,000
not be any QA but the recording is still

1912
01:45:44,359 --> 01:45:48,349
up so the YouTube will have the correct

1913
01:45:47,000 --> 01:45:50,000
video so sorry if anyone was watching

1914
01:45:48,350 --> 01:45:57,410
the stream it looks like network

1915
01:45:50,000 --> 01:46:01,430
providers has has gone down anyway so

1916
01:45:57,409 --> 01:46:04,159
what I want curious I want a value that

1917
01:46:01,430 --> 01:46:07,310
says here is how much light is incident

1918
01:46:04,159 --> 01:46:10,159
on this location and I want another

1919
01:46:07,310 --> 01:46:14,690
value which is like if you had to tell

1920
01:46:10,159 --> 01:46:17,510
me one general direction where the light

1921
01:46:14,689 --> 01:46:19,609
was coming from and you know obviously

1922
01:46:17,510 --> 01:46:21,590
the light comes from many different

1923
01:46:19,609 --> 01:46:24,139
directions so it's not like you can

1924
01:46:21,590 --> 01:46:25,340
really say definitively here is where

1925
01:46:24,140 --> 01:46:26,810
the light it's coming from because the

1926
01:46:25,340 --> 01:46:28,610
light is coming from everywhere but if

1927
01:46:26,810 --> 01:46:31,310
you had to say one general direction

1928
01:46:28,609 --> 01:46:37,299
where the lighting was coming from where

1929
01:46:31,310 --> 01:46:40,280
would that be something like that right

1930
01:46:37,300 --> 01:46:41,930
and we probably want that average

1931
01:46:40,279 --> 01:46:46,099
direction to light to be something that

1932
01:46:41,930 --> 01:46:48,110
comes that's gonna be more sophisticated

1933
01:46:46,100 --> 01:46:49,910
eventually and sort of give us a little

1934
01:46:48,109 --> 01:46:52,579
more information about how we should

1935
01:46:49,909 --> 01:46:53,689
attenuate the light based on facing

1936
01:46:52,579 --> 01:46:54,969
direction because that's really what we

1937
01:46:53,689 --> 01:46:56,589
want so if the direct if

1938
01:46:54,969 --> 01:46:59,679
lighting is coming sort of evenly from

1939
01:46:56,590 --> 01:47:03,099
everywhere we would maybe have a tuning

1940
01:46:59,679 --> 01:47:04,748
value and maybe what's that's what our

1941
01:47:03,099 --> 01:47:08,969
fourth parameter is but anyway that's

1942
01:47:04,748 --> 01:47:10,840
what we sort of need to to get to right

1943
01:47:08,969 --> 01:47:14,739
and that's what we'll talk about next

1944
01:47:10,840 --> 01:47:19,300
week and I won't I'll just leave the

1945
01:47:14,738 --> 01:47:21,908
lighting where it is today okay so

1946
01:47:19,300 --> 01:47:23,860
technically this is the QA I can't take

1947
01:47:21,908 --> 01:47:25,359
QA because as far as I can tell all of

1948
01:47:23,859 --> 01:47:27,368
the internet stuff is down so I'll have

1949
01:47:25,359 --> 01:47:31,268
to contact the internet provider to find

1950
01:47:27,368 --> 01:47:33,038
out what happened but you know we will

1951
01:47:31,269 --> 01:47:37,449
get to that at some point

1952
01:47:33,038 --> 01:47:45,069
until then yeah I will just close the

1953
01:47:37,448 --> 01:47:46,029
stream as normal thank you everybody for

1954
01:47:45,069 --> 01:47:47,228
joining me for another episode of

1955
01:47:46,029 --> 01:47:49,300
handmade here it's Mel Patrick coding

1956
01:47:47,229 --> 01:47:50,440
with you as always if you would like to

1957
01:47:49,300 --> 01:47:54,130
follow along series at home you always

1958
01:47:50,439 --> 01:47:55,899
can by pre-ordering the game on handmade

1959
01:47:54,130 --> 01:47:57,400
hero or get comes the source code so you

1960
01:47:55,899 --> 01:47:58,808
can play around with it you also have a

1961
01:47:57,399 --> 01:48:01,328
forum site you can go to if you want to

1962
01:47:58,809 --> 01:48:03,760
ask questions we have a patreon page you

1963
01:48:01,328 --> 01:48:05,349
can go to transport the series and we

1964
01:48:03,760 --> 01:48:08,380
have a schedule bot that tells you when

1965
01:48:05,349 --> 01:48:09,760
our episodes are gonna be live if you

1966
01:48:08,380 --> 01:48:11,769
want to catch them live there's an

1967
01:48:09,760 --> 01:48:14,050
episode guide it's down at the moment so

1968
01:48:11,769 --> 01:48:15,219
you can only get it's not quite up to

1969
01:48:14,050 --> 01:48:17,349
date yet I don't know what's happening

1970
01:48:15,219 --> 01:48:18,939
server wise I don't run that stuff but

1971
01:48:17,349 --> 01:48:22,179
hopefully that'll be back and functional

1972
01:48:18,939 --> 01:48:26,439
again soon but that's about it I will be

1973
01:48:22,179 --> 01:48:28,269
back here next weekend when we'll take a

1974
01:48:26,439 --> 01:48:31,178
little closer look at the lighting until

1975
01:48:28,269 --> 01:48:33,219
then have fun programming and I'll see

1976
01:48:31,179 --> 01:48:34,989
everyone on the Internet assuming my

1977
01:48:33,219 --> 01:48:38,038
internet connection comes back at some

1978
01:48:34,988 --> 01:48:38,038
point take it easy everybody

