1
00:00:01,040 --> 00:00:07,200
okay so it's a little late start here

2
00:00:03,810 --> 00:00:10,290
523 so we're going to go to 623 all

3
00:00:07,200 --> 00:00:11,969
right hello everyone and welcome to

4
00:00:10,289 --> 00:00:15,419
handmade hero the code or we code a

5
00:00:11,968 --> 00:00:20,809
complete game live on stream we are now

6
00:00:15,419 --> 00:00:23,910
in the position to start playing with

7
00:00:20,809 --> 00:00:27,299
like some UI stuff a lot of people have

8
00:00:23,910 --> 00:00:30,089
asked about you I stuff before probably

9
00:00:27,300 --> 00:00:36,079
because of my reputation for IM gooey

10
00:00:30,089 --> 00:00:38,609
things we get that question a lot and

11
00:00:36,079 --> 00:00:40,770
honestly handmade hero is not really a

12
00:00:38,609 --> 00:00:42,988
game that involves any kind of you I in

13
00:00:40,770 --> 00:00:44,520
that sense there's no buttons or widgets

14
00:00:42,988 --> 00:00:46,769
in the gameplay for handmade hero you

15
00:00:44,520 --> 00:00:49,140
are direct control of a character and so

16
00:00:46,770 --> 00:00:51,300
the early isn't any particular reason

17
00:00:49,140 --> 00:00:54,120
why we would be implementing any real

18
00:00:51,299 --> 00:00:56,640
sorts of you I in this game but since we

19
00:00:54,119 --> 00:00:59,820
do have debug code in the game now and

20
00:00:56,640 --> 00:01:01,799
we do want to be able to use that debug

21
00:00:59,820 --> 00:01:05,250
code effectively that tends to be

22
00:01:01,799 --> 00:01:09,359
something where you I wants to be

23
00:01:05,250 --> 00:01:10,890
available to the game right and so what

24
00:01:09,359 --> 00:01:13,590
we're trying to do in this circumstance

25
00:01:10,890 --> 00:01:17,609
is we're trying to make user interface

26
00:01:13,590 --> 00:01:20,159
like UI code right whose goal is very

27
00:01:17,609 --> 00:01:22,799
specific normally if you're trying to

28
00:01:20,159 --> 00:01:26,009
make end user facing UI code what you're

29
00:01:22,799 --> 00:01:28,200
trying to do is make it be as usable as

30
00:01:26,009 --> 00:01:29,609
possible for the you know for the

31
00:01:28,200 --> 00:01:31,380
customer right for whoever you're

32
00:01:29,609 --> 00:01:33,179
shipping this to whatever that that is

33
00:01:31,379 --> 00:01:34,469
right if it's a game than the player if

34
00:01:33,180 --> 00:01:37,350
it's you know some business software

35
00:01:34,469 --> 00:01:41,069
than whatever right the person who's

36
00:01:37,349 --> 00:01:43,649
buying that thing but in the situation

37
00:01:41,069 --> 00:01:45,269
for you I in this case what we're

38
00:01:43,649 --> 00:01:47,670
actually concerned about since we're the

39
00:01:45,269 --> 00:01:49,949
only people using the UI we're only

40
00:01:47,670 --> 00:01:52,500
really concerned about two things can we

41
00:01:49,950 --> 00:01:54,570
use it quickly enough to make it be

42
00:01:52,500 --> 00:01:57,060
usable for the purpose that we need that

43
00:01:54,569 --> 00:01:58,618
we need it for and since we wrote it we

44
00:01:57,060 --> 00:02:00,329
know exactly how to use it doesn't need

45
00:01:58,618 --> 00:02:01,709
to be discoverable it doesn't need to be

46
00:02:00,328 --> 00:02:04,949
easy to use it just needs to be

47
00:02:01,709 --> 00:02:06,000
efficient enough that we can use it and

48
00:02:04,950 --> 00:02:08,489
then the other thing and the most

49
00:02:06,000 --> 00:02:11,848
important thing is that it should be

50
00:02:08,489 --> 00:02:13,830
extremely low implementation costs

51
00:02:11,848 --> 00:02:15,750
because we don't want

52
00:02:13,830 --> 00:02:19,740
to be spending a ton of our programming

53
00:02:15,750 --> 00:02:22,050
time building UI or fussing with you I

54
00:02:19,740 --> 00:02:24,960
that nobody is ever going to see except

55
00:02:22,050 --> 00:02:26,130
us we don't care how janky it is because

56
00:02:24,960 --> 00:02:28,650
we're the only people are going to see

57
00:02:26,129 --> 00:02:30,930
it so any time that we spent making me

58
00:02:28,650 --> 00:02:32,569
why like prettier or fancier or more

59
00:02:30,930 --> 00:02:35,969
functional or any of that sort of stuff

60
00:02:32,569 --> 00:02:39,180
is probably wasted we have to have some

61
00:02:35,969 --> 00:02:41,280
kind of a good case for spending any

62
00:02:39,180 --> 00:02:42,689
time on it so what we want to do is try

63
00:02:41,280 --> 00:02:46,110
to figure out like essentially the

64
00:02:42,689 --> 00:02:49,199
highest leverage way of implementing the

65
00:02:46,110 --> 00:02:50,670
UI in any particular case what is the

66
00:02:49,199 --> 00:02:52,829
way that we can write the minimal amount

67
00:02:50,669 --> 00:02:55,649
of code into the game and get the

68
00:02:52,830 --> 00:03:03,900
highest number of debug UI features out

69
00:02:55,650 --> 00:03:09,540
of it right that is what we're trying to

70
00:03:03,900 --> 00:03:11,280
do so with that in mind you've kind of

71
00:03:09,539 --> 00:03:13,560
already seen me sketch out a little bit

72
00:03:11,280 --> 00:03:15,330
of that we implemented some stuff last

73
00:03:13,560 --> 00:03:17,670
week just a little light stuff like

74
00:03:15,330 --> 00:03:19,739
being able to hover over things to see

75
00:03:17,669 --> 00:03:21,389
what they were doing and also to be able

76
00:03:19,739 --> 00:03:23,640
to let click on things too like drill

77
00:03:21,389 --> 00:03:25,229
down into them and I don't know if you

78
00:03:23,639 --> 00:03:27,899
noticed but of course when I implemented

79
00:03:25,229 --> 00:03:30,750
those I didn't do anything unusual I

80
00:03:27,900 --> 00:03:35,010
didn't create some giant you I hierarchy

81
00:03:30,750 --> 00:03:37,680
I didn't go cutie on it and have 800,000

82
00:03:35,009 --> 00:03:40,439
classes just to implement a button all I

83
00:03:37,680 --> 00:03:43,050
did was I put an if statement into the

84
00:03:40,439 --> 00:03:45,840
code that said if you are hovering over

85
00:03:43,050 --> 00:03:47,820
this rectangle right now and you you you

86
00:03:45,840 --> 00:03:49,590
know it becomes the like hot rectangle

87
00:03:47,819 --> 00:03:51,479
and if you click the button then it

88
00:03:49,590 --> 00:03:55,650
executes some action on that rectangle

89
00:03:51,479 --> 00:03:58,379
right that's all I did and that is the

90
00:03:55,650 --> 00:04:00,450
attitudes I think you want to take for

91
00:03:58,379 --> 00:04:02,579
making debug you I in the game you want

92
00:04:00,449 --> 00:04:04,500
to make the thing that is the easiest to

93
00:04:02,580 --> 00:04:07,769
implement that doesn't cost you any time

94
00:04:04,500 --> 00:04:09,449
that doesn't lead to let code rot or

95
00:04:07,769 --> 00:04:11,039
anything that just you know is nice and

96
00:04:09,449 --> 00:04:13,409
tightly bundled with the actual output

97
00:04:11,039 --> 00:04:15,689
code so at the rendering and the UI line

98
00:04:13,409 --> 00:04:17,399
up nicely and if you so that you can

99
00:04:15,689 --> 00:04:19,500
expand on how you're rendering things

100
00:04:17,399 --> 00:04:21,418
and trivially have the UI kind of follow

101
00:04:19,500 --> 00:04:24,529
along with it all that sort of stuff is

102
00:04:21,418 --> 00:04:24,529
really what you should be shooting for

103
00:04:25,250 --> 00:04:33,829
and that is exactly how we are going to

104
00:04:30,199 --> 00:04:37,519
continue progressing down sort of that

105
00:04:33,829 --> 00:04:40,009
path of of implementing this debug you I

106
00:04:37,519 --> 00:04:43,490
up to the point where we feel like it's

107
00:04:40,009 --> 00:04:46,219
good enough for us to use on the project

108
00:04:43,490 --> 00:04:48,139
so we're going to take a slight step

109
00:04:46,220 --> 00:04:50,330
back from what we were working on last

110
00:04:48,139 --> 00:04:51,469
week because like I kind of just shove

111
00:04:50,329 --> 00:04:52,699
some things in at the end because it was

112
00:04:51,470 --> 00:04:54,320
kind of wrapping up we could take a

113
00:04:52,699 --> 00:04:57,500
slight step back and what we're going to

114
00:04:54,319 --> 00:05:00,259
do first is say all right we need a

115
00:04:57,500 --> 00:05:02,418
little bit of debug you I hear the very

116
00:05:00,259 --> 00:05:03,949
first and most obvious thing that we

117
00:05:02,418 --> 00:05:06,560
should probably do before we go any

118
00:05:03,949 --> 00:05:09,680
further he's have a way of turning this

119
00:05:06,560 --> 00:05:14,389
profile view on and off right because

120
00:05:09,680 --> 00:05:17,540
right now you know the if you if I run

121
00:05:14,389 --> 00:05:22,849
the game right let me just bring it up

122
00:05:17,540 --> 00:05:24,379
here we now have profile bars all over

123
00:05:22,850 --> 00:05:26,120
everything and we were playing around

124
00:05:24,379 --> 00:05:28,159
with those and that was all fine but the

125
00:05:26,120 --> 00:05:32,060
problem with that is that we can't see

126
00:05:28,160 --> 00:05:33,890
the game right so at the very least we

127
00:05:32,060 --> 00:05:36,410
are going to obviously need some way of

128
00:05:33,889 --> 00:05:38,509
saying whether we want to draw any of

129
00:05:36,410 --> 00:05:40,010
this stuff or not because if we are in a

130
00:05:38,509 --> 00:05:42,709
situation where we're working on the

131
00:05:40,009 --> 00:05:45,199
game and don't really care very much

132
00:05:42,709 --> 00:05:47,089
about seeing profiling and detail or any

133
00:05:45,199 --> 00:05:49,610
of that stuff then either a we want the

134
00:05:47,089 --> 00:05:52,489
profiling to go away completely like

135
00:05:49,610 --> 00:05:54,110
just gone or you know we also probably

136
00:05:52,490 --> 00:05:56,180
would want to consider something like a

137
00:05:54,110 --> 00:05:58,910
collapsed view that's just a very small

138
00:05:56,180 --> 00:06:00,918
sort of extremely small debug monitoring

139
00:05:58,910 --> 00:06:03,380
monitoring version that just sits in the

140
00:06:00,918 --> 00:06:05,060
corner end is designed to only draw

141
00:06:03,379 --> 00:06:07,159
whatever is necessary to alert us to a

142
00:06:05,060 --> 00:06:09,949
potential problem that we might have

143
00:06:07,160 --> 00:06:11,510
missed so for example frame spikes or

144
00:06:09,949 --> 00:06:13,819
things like that just show the total

145
00:06:11,509 --> 00:06:15,709
amount of time for the you know frame

146
00:06:13,819 --> 00:06:18,259
retirement maybe goes in there so we can

147
00:06:15,709 --> 00:06:20,029
say oh wait we saw a you know something

148
00:06:18,259 --> 00:06:23,409
weird happening there so that we can go

149
00:06:20,029 --> 00:06:23,409
grab it right something like that

150
00:06:25,100 --> 00:06:31,320
so that to me is more you know what we

151
00:06:28,259 --> 00:06:34,949
want to focus on so I want to start

152
00:06:31,319 --> 00:06:36,870
putting in a more solid concept of the

153
00:06:34,949 --> 00:06:38,668
debug rendering stuff so that we can get

154
00:06:36,870 --> 00:06:41,100
to the point where something like that

155
00:06:38,668 --> 00:06:44,039
is as nice as Eva believe a solid story

156
00:06:41,100 --> 00:06:46,260
for how adding things to that you I kind

157
00:06:44,040 --> 00:06:48,030
of like comes in and you'll notice up to

158
00:06:46,259 --> 00:06:50,189
this point in handmade hero when we had

159
00:06:48,029 --> 00:06:52,619
debugging features and things like that

160
00:06:50,189 --> 00:06:54,480
that we wanted to implement you'll

161
00:06:52,620 --> 00:06:56,340
notice we also kind of have this problem

162
00:06:54,480 --> 00:06:58,439
of they just kind of always had to be

163
00:06:56,339 --> 00:07:01,168
shoehorned in there and we never really

164
00:06:58,439 --> 00:07:04,918
had a good way of like turning views on

165
00:07:01,168 --> 00:07:07,109
and off now that may not be such a big

166
00:07:04,918 --> 00:07:08,969
deal actually if you think about the

167
00:07:07,110 --> 00:07:12,750
fact that we have live coding ability

168
00:07:08,970 --> 00:07:14,810
but there is a problem there is a short

169
00:07:12,750 --> 00:07:18,029
comment coming with live coding ability

170
00:07:14,810 --> 00:07:19,680
while live coding ability does totally

171
00:07:18,029 --> 00:07:21,289
solve our problems in terms of like

172
00:07:19,680 --> 00:07:23,340
tuning a particular piece of code

173
00:07:21,290 --> 00:07:24,810
because we're working on that particular

174
00:07:23,339 --> 00:07:26,429
piece of code that particular piece of

175
00:07:24,810 --> 00:07:29,399
time at that particular time and it all

176
00:07:26,430 --> 00:07:31,500
makes sense live coding doesn't help us

177
00:07:29,399 --> 00:07:33,389
if we have a number of different debug

178
00:07:31,500 --> 00:07:34,529
like visualization kind of things that

179
00:07:33,389 --> 00:07:36,930
we might want to turn on and off for

180
00:07:34,529 --> 00:07:40,049
example if we want to draw like entity

181
00:07:36,930 --> 00:07:41,519
bounding boxes right yes I could make

182
00:07:40,050 --> 00:07:43,680
that be just a live code editing thing

183
00:07:41,519 --> 00:07:45,930
where I just go back into the code right

184
00:07:43,680 --> 00:07:48,629
I change the entity bounding box thing

185
00:07:45,930 --> 00:07:51,600
and then I come back that's a totally

186
00:07:48,629 --> 00:07:53,850
valid way to do that but that's a lot

187
00:07:51,600 --> 00:07:55,830
slower and less convenient than if we

188
00:07:53,850 --> 00:07:57,330
just knew we had a list of things we

189
00:07:55,829 --> 00:07:58,859
could turn on where we could just

190
00:07:57,329 --> 00:08:00,870
quickly go click on them and say I want

191
00:07:58,860 --> 00:08:02,759
Andy bounding boxes on right now right

192
00:08:00,870 --> 00:08:05,038
so there's this concept of like

193
00:08:02,759 --> 00:08:06,629
collating that stuff into one place and

194
00:08:05,038 --> 00:08:08,849
so there's a couple different ways we

195
00:08:06,629 --> 00:08:10,228
could do that but it's a very least even

196
00:08:08,850 --> 00:08:12,570
if we decide we don't necessarily want

197
00:08:10,228 --> 00:08:14,490
debug UI for it if we want to have it so

198
00:08:12,569 --> 00:08:16,259
that it still goes to the live code

199
00:08:14,490 --> 00:08:17,639
editing then what I think we want to do

200
00:08:16,259 --> 00:08:20,099
is that the very least make a file

201
00:08:17,639 --> 00:08:22,500
that's got all of those debug switches

202
00:08:20,100 --> 00:08:28,200
in there in some kind of like way that's

203
00:08:22,500 --> 00:08:29,720
easier to to deal with right so that

204
00:08:28,199 --> 00:08:32,960
they can all be kind of scene and and

205
00:08:29,720 --> 00:08:36,410
touched quickly you know what I mean

206
00:08:32,960 --> 00:08:39,259
so I feel like that's just kind of a you

207
00:08:36,409 --> 00:08:41,539
know kind of an obvious sort of thing

208
00:08:39,259 --> 00:08:43,069
adjunct thing that we want to do so

209
00:08:41,539 --> 00:08:44,449
let's start working on that again I

210
00:08:43,070 --> 00:08:46,220
don't have anything in particular in

211
00:08:44,450 --> 00:08:48,950
mind I'm just going to go ahead and

212
00:08:46,220 --> 00:08:51,800
start doing some code transformations

213
00:08:48,950 --> 00:08:54,740
that I think will get us there because

214
00:08:51,799 --> 00:08:56,809
you know I know roughly I need some kind

215
00:08:54,740 --> 00:08:58,940
of some buttons or something I need some

216
00:08:56,809 --> 00:09:01,189
way of starting to interact with this

217
00:08:58,940 --> 00:09:02,840
thing so let me just open up handmade

218
00:09:01,190 --> 00:09:05,960
debug again as I should I should mention

219
00:09:02,840 --> 00:09:07,879
its day 1 90 so if you did a pre order

220
00:09:05,960 --> 00:09:10,009
on him my dear org you treat you want to

221
00:09:07,879 --> 00:09:11,450
follow along at home day 1 89 source

222
00:09:10,009 --> 00:09:14,120
code is the source code that i'm

223
00:09:11,450 --> 00:09:15,620
starting with here on day 1 90 so unpack

224
00:09:14,120 --> 00:09:20,179
that into a directory if you want to be

225
00:09:15,620 --> 00:09:22,159
lined up with us alright so in handmade

226
00:09:20,179 --> 00:09:25,009
debug first thing i want to do and i

227
00:09:22,159 --> 00:09:26,719
said i wanted to do this originally is i

228
00:09:25,009 --> 00:09:28,519
want to get rid of these global

229
00:09:26,720 --> 00:09:30,620
variables here because we just kind of

230
00:09:28,519 --> 00:09:32,569
threw them in there when we were kind of

231
00:09:30,620 --> 00:09:35,120
working with it before we already have

232
00:09:32,570 --> 00:09:36,860
the concept of debug state now we really

233
00:09:35,120 --> 00:09:39,080
don't need these global variables for

234
00:09:36,860 --> 00:09:41,240
anything so I feel like now would be

235
00:09:39,080 --> 00:09:43,340
probably a good time to sort of clear

236
00:09:41,240 --> 00:09:45,529
that out right to sort of stop dealing

237
00:09:43,340 --> 00:09:47,629
with any of those global variables

238
00:09:45,529 --> 00:09:50,209
because we did the work already to have

239
00:09:47,629 --> 00:09:51,439
debug state that's stored so I'm going

240
00:09:50,210 --> 00:09:53,210
to go ahead and get rid of those and

241
00:09:51,440 --> 00:09:54,710
also if i remember correctly I feel like

242
00:09:53,210 --> 00:09:56,870
the fact that we were using those global

243
00:09:54,710 --> 00:09:58,940
variables also meant that our loop live

244
00:09:56,870 --> 00:10:02,659
code editing would break the debug

245
00:09:58,940 --> 00:10:04,100
system right I I don't really remember

246
00:10:02,659 --> 00:10:05,449
if this is true but I feel like it

247
00:10:04,100 --> 00:10:07,639
should have been true because the local

248
00:10:05,450 --> 00:10:08,629
variables would not get reset properly I

249
00:10:07,639 --> 00:10:11,059
don't actually know if that's the case

250
00:10:08,629 --> 00:10:13,039
but here I'm going to recompile yeah so

251
00:10:11,059 --> 00:10:15,679
when I recompile right the debug system

252
00:10:13,039 --> 00:10:18,559
gets hosed right and so that's not a

253
00:10:15,679 --> 00:10:20,569
good that's not a good thing so again

254
00:10:18,559 --> 00:10:22,879
that's another reason we want to do it

255
00:10:20,570 --> 00:10:24,290
even if just not to just get the things

256
00:10:22,879 --> 00:10:25,549
out of a global scope so we just don't

257
00:10:24,289 --> 00:10:28,099
have these names floating around to the

258
00:10:25,549 --> 00:10:29,990
global scope for no reason besides that

259
00:10:28,100 --> 00:10:30,889
is just pretty easy for us to do so the

260
00:10:29,990 --> 00:10:32,299
first thing I'm going to do is I'm just

261
00:10:30,889 --> 00:10:35,720
going to go ahead and move these guys in

262
00:10:32,299 --> 00:10:38,449
here and go ahead and do a kill wrecked

263
00:10:35,720 --> 00:10:40,550
on that and then move it over okay so

264
00:10:38,450 --> 00:10:41,720
now I've got these guys in here and now

265
00:10:40,549 --> 00:10:43,099
what I have to do is come through here

266
00:10:41,720 --> 00:10:44,750
and make sure that everyone who uses

267
00:10:43,100 --> 00:10:46,259
that stuff which is all going to be a

268
00:10:44,750 --> 00:10:48,239
compile error is

269
00:10:46,259 --> 00:10:50,789
I'm going to have some kind of ability

270
00:10:48,239 --> 00:10:52,290
to call through the debug state now i

271
00:10:50,789 --> 00:10:57,058
guess i have a problem which is that the

272
00:10:52,289 --> 00:10:59,068
font ID defines are not above the sky so

273
00:10:57,058 --> 00:11:01,048
they can't actually be used i'm not sure

274
00:10:59,068 --> 00:11:03,538
what the most effective way is to to

275
00:11:01,048 --> 00:11:05,220
deal with that but i assume that that is

276
00:11:03,538 --> 00:11:06,629
in the file format stuff and the file

277
00:11:05,220 --> 00:11:08,100
format stuff doesn't have any code in it

278
00:11:06,629 --> 00:11:10,558
so it's pretty free i think for me

279
00:11:08,100 --> 00:11:11,970
probably to put it up there so now i

280
00:11:10,558 --> 00:11:13,259
hear what we need to do is we need to

281
00:11:11,970 --> 00:11:15,178
make sure that we can get at the debug

282
00:11:13,259 --> 00:11:18,839
state so i'm going to go ahead and grab

283
00:11:15,178 --> 00:11:20,548
that out there we go there's that debug

284
00:11:18,839 --> 00:11:22,529
state I don't remember what I call that

285
00:11:20,548 --> 00:11:24,869
down these other things so I call that

286
00:11:22,528 --> 00:11:26,068
debug state typically I do so I'm just

287
00:11:24,869 --> 00:11:28,229
going to call it debug state here as

288
00:11:26,068 --> 00:11:30,118
well and debug state now just kind of

289
00:11:28,229 --> 00:11:32,038
needs to store this sort of stuff we

290
00:11:30,119 --> 00:11:33,809
don't really need to call it global

291
00:11:32,038 --> 00:11:36,208
anymore but I'll keep calling it that

292
00:11:33,808 --> 00:11:37,318
for the temporary time being just when

293
00:11:36,208 --> 00:11:38,969
I'm doing this port and then we can

294
00:11:37,318 --> 00:11:41,838
decide if we want to change the names of

295
00:11:38,970 --> 00:11:44,819
some of those things in the future right

296
00:11:41,839 --> 00:11:46,709
so I'm going to go ahead and and change

297
00:11:44,818 --> 00:11:48,238
these guys here debug render group i'm

298
00:11:46,708 --> 00:11:49,588
not sure where that's coming from that

299
00:11:48,239 --> 00:11:52,109
must be defined elsewhere us we should

300
00:11:49,589 --> 00:11:54,929
also probably make that be something

301
00:11:52,109 --> 00:11:57,209
that click that pulls inside as well so

302
00:11:54,928 --> 00:12:00,588
we'll handle that in a second so there's

303
00:11:57,208 --> 00:12:04,979
that left edge there's the font ID

304
00:12:00,589 --> 00:12:07,679
there's that font scale so i think most

305
00:12:04,980 --> 00:12:09,899
of that is probably okay let's let the

306
00:12:07,678 --> 00:12:14,119
compiler guide us through the rest of

307
00:12:09,899 --> 00:12:17,328
this year okay so debug text out at

308
00:12:14,119 --> 00:12:17,329
let's see

309
00:12:21,730 --> 00:12:25,879
so I feel like in general the debug

310
00:12:24,230 --> 00:12:27,769
state probably doesn't want I feel like

311
00:12:25,879 --> 00:12:29,089
the debug state pointer is probably the

312
00:12:27,769 --> 00:12:32,178
one thing that we're going to want to be

313
00:12:29,089 --> 00:12:35,929
global there right because what happens

314
00:12:32,178 --> 00:12:39,318
here is the debug state global is really

315
00:12:35,928 --> 00:12:40,909
just the game memory global you know if

316
00:12:39,318 --> 00:12:43,428
you have the game memory global than you

317
00:12:40,909 --> 00:12:46,938
know what it is and so every time on

318
00:12:43,428 --> 00:12:49,159
entry into anything as long as we make

319
00:12:46,938 --> 00:12:50,899
sure that that gets set right when we do

320
00:12:49,159 --> 00:12:53,749
debug global memory equals memory this

321
00:12:50,899 --> 00:12:56,089
stuff right here having debug global

322
00:12:53,749 --> 00:12:57,409
memory is all we really need in order to

323
00:12:56,089 --> 00:12:59,869
make sure this stuff gets processed

324
00:12:57,409 --> 00:13:01,759
correctly all the time so probably what

325
00:12:59,869 --> 00:13:03,139
I want to do instead of having this past

326
00:13:01,759 --> 00:13:04,789
and now that i think about it right

327
00:13:03,139 --> 00:13:07,399
because I probably want to do something

328
00:13:04,789 --> 00:13:09,708
where I always just get from the debug

329
00:13:07,399 --> 00:13:12,049
global memory I always just get the

330
00:13:09,708 --> 00:13:13,789
debug state out of that right so I

331
00:13:12,049 --> 00:13:18,578
always just have a thing here which is

332
00:13:13,789 --> 00:13:22,578
like you know get debug State you know

333
00:13:18,578 --> 00:13:26,149
or debug get state something like that

334
00:13:22,578 --> 00:13:32,979
and then that function is just a known

335
00:13:26,149 --> 00:13:37,339
in line that doesn't take anything and

336
00:13:32,980 --> 00:13:41,839
uses that debug global memory there to

337
00:13:37,339 --> 00:13:47,029
get the debug state so what this would

338
00:13:41,839 --> 00:13:51,549
essentially do is just say okay as we

339
00:13:47,028 --> 00:13:56,509
saw down here right oops wrong place

340
00:13:51,548 --> 00:13:58,399
where is it where is it here it is as we

341
00:13:56,509 --> 00:14:00,350
saw down here right if we know what the

342
00:13:58,399 --> 00:14:02,958
game memory is then we know what the

343
00:14:00,350 --> 00:14:05,449
debug storage is so it's always pretty

344
00:14:02,958 --> 00:14:07,849
free for us to just say anybody who

345
00:14:05,448 --> 00:14:09,588
wants to can get it like this and we

346
00:14:07,850 --> 00:14:12,499
have the debug global memory and so we

347
00:14:09,589 --> 00:14:14,420
can access it off of that right and that

348
00:14:12,499 --> 00:14:16,819
will always give us that debug storage

349
00:14:14,419 --> 00:14:18,318
so that is the easy way to make sure

350
00:14:16,818 --> 00:14:19,759
that that always works and then we only

351
00:14:18,318 --> 00:14:22,399
have to make sure that one global

352
00:14:19,759 --> 00:14:24,589
variable is updated on entry into the

353
00:14:22,399 --> 00:14:26,839
game system which is pretty pretty easy

354
00:14:24,589 --> 00:14:28,220
to ensure and then we know that

355
00:14:26,839 --> 00:14:30,110
everything else will work as long as

356
00:14:28,220 --> 00:14:32,209
that's the case and then everybody else

357
00:14:30,110 --> 00:14:33,050
should probably do an if on it so if

358
00:14:32,208 --> 00:14:34,549
there is no

359
00:14:33,049 --> 00:14:37,969
it's running without debug services it

360
00:14:34,549 --> 00:14:41,569
just won't do anything right and that'll

361
00:14:37,970 --> 00:14:45,769
be fine so I think that's sufficient at

362
00:14:41,570 --> 00:14:47,510
least I assume it should be and I think

363
00:14:45,769 --> 00:14:49,519
that's all we really need now the debug

364
00:14:47,509 --> 00:14:52,429
render group I feel like the debug

365
00:14:49,519 --> 00:14:54,310
render group should also be should be

366
00:14:52,429 --> 00:14:58,099
something that's actually just done a

367
00:14:54,309 --> 00:14:59,509
little more directly I'm not sure where

368
00:14:58,100 --> 00:15:01,250
that's actually getting to find I don't

369
00:14:59,509 --> 00:15:04,759
remember where we put that it's been a

370
00:15:01,250 --> 00:15:06,769
while so it's right here so I feel like

371
00:15:04,759 --> 00:15:09,649
that is something that we want to just

372
00:15:06,769 --> 00:15:11,299
go ahead and pull inside as well so i'm

373
00:15:09,649 --> 00:15:14,000
going to go ahead and finish this stuff

374
00:15:11,299 --> 00:15:15,289
but then i want to make sure that we we

375
00:15:14,000 --> 00:15:17,839
address that other one as well because i

376
00:15:15,289 --> 00:15:21,110
want everything to go through a single

377
00:15:17,839 --> 00:15:24,470
sort of uniform path that looks like

378
00:15:21,110 --> 00:15:26,329
this everywhere always right so i really

379
00:15:24,470 --> 00:15:28,610
want it to be like that and then instead

380
00:15:26,328 --> 00:15:30,169
of having an if debug render group will

381
00:15:28,610 --> 00:15:31,879
just get rid of that and it we assume

382
00:15:30,169 --> 00:15:34,870
that once we get the debug state we have

383
00:15:31,879 --> 00:15:37,549
the render group if that makes sense

384
00:15:34,870 --> 00:15:38,929
okay so if we have the debug state now

385
00:15:37,549 --> 00:15:42,828
we should be able to get all the rest of

386
00:15:38,929 --> 00:15:56,449
the variables debug state font ID month

387
00:15:42,828 --> 00:15:59,750
ID lot scale scale same thing here every

388
00:15:56,450 --> 00:16:01,310
town and again i'm not really doing

389
00:15:59,750 --> 00:16:03,708
anything other than just moving these

390
00:16:01,309 --> 00:16:06,139
global variables into things that are

391
00:16:03,708 --> 00:16:10,609
referenced directly so that we know that

392
00:16:06,139 --> 00:16:13,639
it's all kosher there we go let's see

393
00:16:10,610 --> 00:16:15,110
push font again same thing here we've

394
00:16:13,639 --> 00:16:16,759
already got in the debug overlay we

395
00:16:15,110 --> 00:16:19,669
already have this information so you

396
00:16:16,759 --> 00:16:21,528
don't actually have to query it although

397
00:16:19,669 --> 00:16:24,049
it does mean that debug overlay doesn't

398
00:16:21,528 --> 00:16:26,028
actually need to take game memory for

399
00:16:24,049 --> 00:16:28,399
any particular reason actually what we

400
00:16:26,028 --> 00:16:30,259
can do instead is just do this and then

401
00:16:28,399 --> 00:16:32,509
we know that that's just going to use

402
00:16:30,259 --> 00:16:34,069
the exact same path that everybody else

403
00:16:32,509 --> 00:16:37,490
does and i like that a little bit better

404
00:16:34,070 --> 00:16:40,560
so we just do this and then we'd you

405
00:16:37,490 --> 00:16:47,379
know we do it this way

406
00:16:40,559 --> 00:16:51,429
okay so that seems fine and debug state

407
00:16:47,379 --> 00:16:59,559
left edge there yeah and debug steak

408
00:16:51,429 --> 00:17:01,359
little tight okay debug overlay the

409
00:16:59,559 --> 00:17:04,688
function yes that's true do you look

410
00:17:01,360 --> 00:17:08,078
overlay does not take that anymore thank

411
00:17:04,689 --> 00:17:16,509
you for mentioning it that is just this

412
00:17:08,078 --> 00:17:18,818
now and now we're done okay so i think

413
00:17:16,509 --> 00:17:21,160
we should be in reasonable shape and so

414
00:17:18,818 --> 00:17:22,509
yeah nothing has been altered at all so

415
00:17:21,160 --> 00:17:25,058
now we're just operating without the

416
00:17:22,509 --> 00:17:26,949
global variables i don't actually think

417
00:17:25,058 --> 00:17:28,960
however that we have fixed the problem

418
00:17:26,949 --> 00:17:31,150
quite yet because if i was to recompile

419
00:17:28,960 --> 00:17:33,429
the debug render group will go away

420
00:17:31,150 --> 00:17:37,509
right so that's why i say that's we also

421
00:17:33,429 --> 00:17:39,400
want to fix that one so even though we

422
00:17:37,509 --> 00:17:41,589
moved the rest of those variables in

423
00:17:39,400 --> 00:17:43,120
those were not really the entirety of

424
00:17:41,589 --> 00:17:45,639
the problem we need to make sure that we

425
00:17:43,119 --> 00:17:47,079
don't use anymore global variables so

426
00:17:45,640 --> 00:17:49,179
that we don't have any complex with that

427
00:17:47,079 --> 00:17:51,189
so that's okay this stuff is totally

428
00:17:49,179 --> 00:17:53,048
fine here all we really need to do and

429
00:17:51,190 --> 00:17:54,640
we can get rid of that to do as well is

430
00:17:53,048 --> 00:17:57,308
make sure that our debug state stores

431
00:17:54,640 --> 00:17:59,770
that stuff as well so we have a render

432
00:17:57,308 --> 00:18:02,769
group in here and we'll call you know

433
00:17:59,769 --> 00:18:04,839
that that will will use and we'll just

434
00:18:02,769 --> 00:18:07,298
make sure that that gets initialized in

435
00:18:04,839 --> 00:18:09,308
some kind of reasonable way and so I'll

436
00:18:07,298 --> 00:18:11,859
pre declare these guys since we actually

437
00:18:09,308 --> 00:18:13,210
use them in the debug system and then

438
00:18:11,859 --> 00:18:15,219
we'll go through here and try to figure

439
00:18:13,210 --> 00:18:16,710
out what the best way is to organize

440
00:18:15,220 --> 00:18:19,660
this so that we know that it gets

441
00:18:16,710 --> 00:18:26,740
initialized properly and so on so you

442
00:18:19,660 --> 00:18:31,240
can see in here inside the the render

443
00:18:26,740 --> 00:18:32,769
group allocation and everything else we

444
00:18:31,240 --> 00:18:34,900
allocate stuff out of the transient

445
00:18:32,769 --> 00:18:37,269
arena for the debug render group that

446
00:18:34,900 --> 00:18:38,950
doesn't really make a whole lot of sense

447
00:18:37,269 --> 00:18:42,220
it's not a particularly useful thing to

448
00:18:38,950 --> 00:18:46,179
do I don't think so at the end of the

449
00:18:42,220 --> 00:18:48,700
day I would rather not I would rather

450
00:18:46,179 --> 00:18:52,500
not do that I'd rather have that pull

451
00:18:48,700 --> 00:18:54,900
out of the debug memory it's

452
00:18:52,500 --> 00:18:57,240
health and so in order to do that I

453
00:18:54,900 --> 00:18:59,880
think we want to move this out and we

454
00:18:57,240 --> 00:19:02,069
need to get the asset information in but

455
00:18:59,880 --> 00:19:05,010
i believe that debug reset actually does

456
00:19:02,069 --> 00:19:06,779
that right it gets past the game assets

457
00:19:05,009 --> 00:19:08,519
already so what I think we should

458
00:19:06,779 --> 00:19:11,399
probably do is just move this out

459
00:19:08,519 --> 00:19:14,369
entirely and do that allocation in the

460
00:19:11,400 --> 00:19:16,500
debug reset and the debug reset will

461
00:19:14,369 --> 00:19:17,639
just if there isn't one yet it will just

462
00:19:16,500 --> 00:19:20,339
make sure that it does it at that time

463
00:19:17,640 --> 00:19:22,590
so inside debug reset we have the

464
00:19:20,339 --> 00:19:24,089
information that we need so in here I

465
00:19:22,589 --> 00:19:26,399
feel like we could do something where we

466
00:19:24,089 --> 00:19:29,909
just say okay you know if the debug

467
00:19:26,400 --> 00:19:32,700
state render group does not exist we'll

468
00:19:29,910 --> 00:19:35,340
just create it at that time using the

469
00:19:32,700 --> 00:19:37,019
resources that we have you know what I

470
00:19:35,339 --> 00:19:39,750
mean because we know that we're

471
00:19:37,019 --> 00:19:42,389
initializing things at this point and we

472
00:19:39,750 --> 00:19:43,920
should be fine if that makes sense that

473
00:19:42,390 --> 00:19:46,200
seems like a reasonable thing to do I

474
00:19:43,920 --> 00:19:48,090
guess I don't know for sure but it seems

475
00:19:46,200 --> 00:19:50,100
like a reasonable thing to do so if we

476
00:19:48,089 --> 00:19:51,839
were going to delegate this this here we

477
00:19:50,099 --> 00:19:55,500
would pass the assets and then we would

478
00:19:51,839 --> 00:19:57,119
need an arena and again we have an arena

479
00:19:55,500 --> 00:19:59,789
in here but it's the collation arena at

480
00:19:57,119 --> 00:20:02,369
the moment so again this debug state

481
00:19:59,789 --> 00:20:05,039
kind of wants to make sure that the

482
00:20:02,369 --> 00:20:07,589
debug state is is more of a real thing

483
00:20:05,039 --> 00:20:08,730
right and so I think what I'd also like

484
00:20:07,589 --> 00:20:10,109
to do is make it so that it doesn't

485
00:20:08,730 --> 00:20:12,210
really matter what order you call these

486
00:20:10,109 --> 00:20:13,589
functions in I'd like to make sure that

487
00:20:12,210 --> 00:20:15,090
no matter what order you call them in

488
00:20:13,589 --> 00:20:17,129
you can still make sure that this stuff

489
00:20:15,089 --> 00:20:18,389
kind of works properly and so in order

490
00:20:17,130 --> 00:20:21,180
to do that I'm going to use another

491
00:20:18,390 --> 00:20:23,640
thing another little common convention

492
00:20:21,180 --> 00:20:24,840
that I often use which is that what I'd

493
00:20:23,640 --> 00:20:26,340
like to do is every time you go to get

494
00:20:24,839 --> 00:20:27,689
the debug state it'll just quickly check

495
00:20:26,339 --> 00:20:29,909
to see position size it's not initialize

496
00:20:27,690 --> 00:20:33,509
it will initialize it that way everyone

497
00:20:29,910 --> 00:20:37,950
who does this will always get the the

498
00:20:33,509 --> 00:20:40,410
debug state will always have the ability

499
00:20:37,950 --> 00:20:42,420
to do the initialization right so I want

500
00:20:40,410 --> 00:20:45,330
everyone to come through here if that

501
00:20:42,420 --> 00:20:47,610
makes sense I want everyone to always

502
00:20:45,329 --> 00:20:50,009
check all of the stuff that we might do

503
00:20:47,609 --> 00:20:51,179
we'll look at this in a second I'm just

504
00:20:50,009 --> 00:20:52,349
throwing everything up there and what

505
00:20:51,180 --> 00:20:54,390
kind of then organized in a minute and

506
00:20:52,349 --> 00:20:56,909
you know I want everyone to kind of go

507
00:20:54,390 --> 00:21:01,200
through there so inside debug game frame

508
00:20:56,910 --> 00:21:03,060
end you know that's a that's a thing

509
00:21:01,200 --> 00:21:04,500
that actually doesn't use the global

510
00:21:03,059 --> 00:21:06,129
memory because it has the memory passed

511
00:21:04,500 --> 00:21:08,650
into it right

512
00:21:06,130 --> 00:21:10,600
and so what I might also say is like we

513
00:21:08,650 --> 00:21:13,300
could just double this up so that

514
00:21:10,599 --> 00:21:15,459
actually there's one that takes a void

515
00:21:13,299 --> 00:21:20,710
and the one that takes avoid all that

516
00:21:15,460 --> 00:21:27,819
does is that just does a debug get state

517
00:21:20,710 --> 00:21:29,559
with the global memory like so but if

518
00:21:27,819 --> 00:21:34,389
you happen to know what the game memory

519
00:21:29,559 --> 00:21:37,149
is then you can just call it directly

520
00:21:34,390 --> 00:21:38,920
and that way we can also do things like

521
00:21:37,150 --> 00:21:40,840
have if we if we have more information

522
00:21:38,920 --> 00:21:42,160
about what the memory is we don't have

523
00:21:40,839 --> 00:21:43,509
to count on the global being initialized

524
00:21:42,160 --> 00:21:45,340
which might gives us a little bit more

525
00:21:43,509 --> 00:21:49,900
flexibility depending on the

526
00:21:45,339 --> 00:21:53,859
circumstance right so yeah in that

527
00:21:49,900 --> 00:21:55,570
situation here we would just call diva

528
00:21:53,859 --> 00:22:01,599
get state and then we would pass it the

529
00:21:55,569 --> 00:22:04,869
memory like so and now we have a little

530
00:22:01,599 --> 00:22:07,649
bit more insurance there okay so let's

531
00:22:04,869 --> 00:22:09,759
well you know what this I guess there

532
00:22:07,650 --> 00:22:11,830
there's some things in there but before

533
00:22:09,759 --> 00:22:13,089
I I go back to that what I'd like to do

534
00:22:11,829 --> 00:22:16,839
is just make sure the initialization

535
00:22:13,089 --> 00:22:18,250
code works relatively well so what I'd

536
00:22:16,839 --> 00:22:21,069
like to do here is say that we have a

537
00:22:18,250 --> 00:22:23,950
debug arena and I'd like to kind of get

538
00:22:21,069 --> 00:22:25,240
that arena into more of a sort of the

539
00:22:23,950 --> 00:22:26,769
standard way that we've been doing

540
00:22:25,240 --> 00:22:29,289
things where we kind of have a tiered

541
00:22:26,769 --> 00:22:31,930
access so in here I'd like to have the

542
00:22:29,289 --> 00:22:35,819
debug arena something like that and I'd

543
00:22:31,930 --> 00:22:39,279
like to initialize the arena like so so

544
00:22:35,819 --> 00:22:41,769
that we use the whole thing for this

545
00:22:39,279 --> 00:22:44,740
debug arena and then the collation arena

546
00:22:41,769 --> 00:22:47,500
can just be a sub arena out of that

547
00:22:44,740 --> 00:22:49,569
right you remember we had the concept of

548
00:22:47,500 --> 00:22:52,029
the sub arenas here where I can just say

549
00:22:49,569 --> 00:22:53,950
okay I want to reserve some of the

550
00:22:52,029 --> 00:22:58,420
memory from it I'm going to go ahead and

551
00:22:53,950 --> 00:23:02,259
say that you know just got to move out

552
00:22:58,420 --> 00:23:05,259
as well we go so I want a collation

553
00:23:02,259 --> 00:23:07,809
arena and I'm going to have some kind of

554
00:23:05,259 --> 00:23:11,339
a size to that but it's going to be

555
00:23:07,809 --> 00:23:14,319
allocated out of the debug arena right

556
00:23:11,339 --> 00:23:16,299
it's going to have a size that we

557
00:23:14,319 --> 00:23:18,129
prescribe which I don't know really what

558
00:23:16,299 --> 00:23:19,048
we want it to be and I don't care what

559
00:23:18,130 --> 00:23:21,330
the alignment of it

560
00:23:19,048 --> 00:23:23,220
right although maybe you know what for

561
00:23:21,329 --> 00:23:24,298
this in this case for collation I don't

562
00:23:23,220 --> 00:23:26,759
know that we would want the alignment to

563
00:23:24,298 --> 00:23:30,019
be 16 so maybe we want the alignment to

564
00:23:26,759 --> 00:23:32,909
be for 16 may be a little aggressive so

565
00:23:30,019 --> 00:23:37,710
you know we've got this guy we're doing

566
00:23:32,909 --> 00:23:39,350
the the arena collation here and how

567
00:23:37,710 --> 00:23:42,480
much do we want for that I don't know

568
00:23:39,349 --> 00:23:44,730
maybe we just give that 32 megabytes of

569
00:23:42,480 --> 00:23:45,960
memory I'm not sure again I'm not sure

570
00:23:44,730 --> 00:23:47,759
what we want to do about collation in

571
00:23:45,960 --> 00:23:52,308
the long run so for right now we'll just

572
00:23:47,759 --> 00:23:54,358
leave it at that okay so when we do our

573
00:23:52,308 --> 00:23:55,648
the rest of our stuff here that'll work

574
00:23:54,358 --> 00:23:57,509
so then what I want to do is move this

575
00:23:55,648 --> 00:24:01,138
up here and say okay we've got our

576
00:23:57,509 --> 00:24:03,028
render debug group I'm sorry debug

577
00:24:01,138 --> 00:24:04,709
render group what we want to do is say

578
00:24:03,028 --> 00:24:07,499
okay if we're not Alicia lized than we

579
00:24:04,710 --> 00:24:09,298
need to also initialize our render group

580
00:24:07,499 --> 00:24:10,798
now we know that this is the first time

581
00:24:09,298 --> 00:24:12,418
we're doing anything so we need to

582
00:24:10,798 --> 00:24:14,730
initialize it we could say how many

583
00:24:12,419 --> 00:24:16,710
megabytes we want that to be we can say

584
00:24:14,730 --> 00:24:24,450
that we want it to come out of the debug

585
00:24:16,710 --> 00:24:29,999
arena right and and yeah that's really

586
00:24:24,450 --> 00:24:33,269
all we need to do I think so now when we

587
00:24:29,999 --> 00:24:37,889
do this stuff I don't really know it

588
00:24:33,269 --> 00:24:40,558
kind of feels it kind of feels like this

589
00:24:37,888 --> 00:24:43,798
stuff wants to be kind of wrapped inside

590
00:24:40,558 --> 00:24:45,749
the debug code you know it's kind of

591
00:24:43,798 --> 00:24:47,759
weird that it's sitting out here for no

592
00:24:45,749 --> 00:24:50,579
apparent reason so I kind of feel like

593
00:24:47,759 --> 00:24:53,278
we we want these to be just debug begins

594
00:24:50,579 --> 00:24:55,378
and ends you know what I mean we want

595
00:24:53,278 --> 00:24:58,378
this to just be like the debug render

596
00:24:55,378 --> 00:25:00,178
group this stuff that's that's happening

597
00:24:58,378 --> 00:25:05,038
right here I feel like she just kind of

598
00:25:00,179 --> 00:25:08,460
be wrapped in up in the debug CPP you

599
00:25:05,038 --> 00:25:11,368
know that just seems like just the

600
00:25:08,460 --> 00:25:12,720
logical thing to do to me I don't know

601
00:25:11,368 --> 00:25:14,158
how you guys feel about that but that's

602
00:25:12,720 --> 00:25:18,569
kind of the way I feel about it you know

603
00:25:14,159 --> 00:25:21,960
and so debug reset I think should

604
00:25:18,569 --> 00:25:25,138
probably just be should include this

605
00:25:21,960 --> 00:25:27,269
stuff right so you just you just call it

606
00:25:25,138 --> 00:25:30,778
and you don't have to check you just

607
00:25:27,269 --> 00:25:32,849
call it and this thing you know knows

608
00:25:30,778 --> 00:25:35,970
that this is all set up

609
00:25:32,849 --> 00:25:37,529
right I feel like that's just fine I

610
00:25:35,970 --> 00:25:39,779
don't feel like anything weird I don't

611
00:25:37,529 --> 00:25:45,889
think that really makes any sense to not

612
00:25:39,779 --> 00:25:49,920
do right so then when we get to the end

613
00:25:45,890 --> 00:25:52,140
this where we do the debug overlay let's

614
00:25:49,920 --> 00:25:54,810
just go ahead and put debug overlay

615
00:25:52,140 --> 00:25:57,180
let's let's put that in here so debug

616
00:25:54,809 --> 00:26:00,389
overlay this can just be a time function

617
00:25:57,180 --> 00:26:02,070
right instead of a timed block and then

618
00:26:00,390 --> 00:26:05,520
let's just make sure we actually do this

619
00:26:02,069 --> 00:26:07,019
stuff you know in here so we'll just go

620
00:26:05,519 --> 00:26:09,420
ahead and make sure that stuff actually

621
00:26:07,019 --> 00:26:11,759
happens that way we can just say okay

622
00:26:09,420 --> 00:26:13,800
debug overlay and it does its thing I

623
00:26:11,759 --> 00:26:15,779
don't know that there's any reason why

624
00:26:13,799 --> 00:26:19,950
we can't just do that so I feel like

625
00:26:15,779 --> 00:26:21,569
that's what we will do alright hopefully

626
00:26:19,950 --> 00:26:23,519
that all makes again I'm not doing any

627
00:26:21,569 --> 00:26:24,990
I'm just consolidating things like I

628
00:26:23,519 --> 00:26:26,549
said this week I want to do you I work

629
00:26:24,990 --> 00:26:28,349
so I was trying to clean up how this is

630
00:26:26,549 --> 00:26:31,139
working now that we kind of have it all

631
00:26:28,349 --> 00:26:34,849
organized so that i can make sure that

632
00:26:31,140 --> 00:26:38,160
there's nothing weird happening right

633
00:26:34,849 --> 00:26:39,629
okay oh so yeah we got it we got to

634
00:26:38,160 --> 00:26:43,019
figure out how to get the assets in

635
00:26:39,630 --> 00:26:51,660
there reliably hmm that's a little

636
00:26:43,019 --> 00:26:54,480
harder and to be fair one of the things

637
00:26:51,660 --> 00:26:57,050
about the the debug assets it's kind of

638
00:26:54,480 --> 00:27:00,660
annoying is really we don't necessarily

639
00:26:57,049 --> 00:27:02,970
want to have to use assets in the debug

640
00:27:00,660 --> 00:27:04,769
system because if like the asset system

641
00:27:02,970 --> 00:27:07,549
is broken it means that we wouldn't see

642
00:27:04,769 --> 00:27:10,980
our fonts at all you know what I mean

643
00:27:07,549 --> 00:27:12,599
which is kind of a bummer so oftentimes

644
00:27:10,980 --> 00:27:14,940
the way that you actually do this is you

645
00:27:12,599 --> 00:27:16,769
wouldn't have the assets be used in the

646
00:27:14,940 --> 00:27:18,299
debug system at all what you do is you

647
00:27:16,769 --> 00:27:22,049
make a little thing that like packs up

648
00:27:18,299 --> 00:27:25,319
some font into the executable itself

649
00:27:22,049 --> 00:27:30,539
that you can just load out of a static

650
00:27:25,319 --> 00:27:32,909
array right and so you know that's

651
00:27:30,539 --> 00:27:35,339
something that probably would be nice to

652
00:27:32,910 --> 00:27:36,480
do but in this particular case I think

653
00:27:35,339 --> 00:27:39,059
we're going to struggle through it this

654
00:27:36,480 --> 00:27:40,559
way anyway just because it's probably a

655
00:27:39,059 --> 00:27:43,589
lot of extra work to go ahead and do all

656
00:27:40,559 --> 00:27:45,970
that stuff for for that purpose but

657
00:27:43,589 --> 00:27:51,609
we'll think about it

658
00:27:45,970 --> 00:27:54,170
okay so restart collation debug and

659
00:27:51,609 --> 00:27:59,689
debug get it for an up-down that's true

660
00:27:54,170 --> 00:28:03,170
that has not been found I feel like this

661
00:27:59,690 --> 00:28:04,490
stuff is is stuff that really we're

662
00:28:03,170 --> 00:28:05,990
going to be getting rid of soon anyway

663
00:28:04,490 --> 00:28:09,440
because we want it the frame processing

664
00:28:05,990 --> 00:28:12,289
to be more incremental but for now it

665
00:28:09,440 --> 00:28:14,450
should be okay so if we're doing restart

666
00:28:12,289 --> 00:28:17,299
collation here then we know that the

667
00:28:14,450 --> 00:28:19,789
current event array index is actually

668
00:28:17,299 --> 00:28:21,740
going to always be 0 because we just

669
00:28:19,789 --> 00:28:23,359
started so we know that it's that's

670
00:28:21,740 --> 00:28:26,120
already 0 so we really don't need that

671
00:28:23,359 --> 00:28:30,099
particular piece of information for all

672
00:28:26,119 --> 00:28:30,099
intents and purposes I should think

673
00:28:46,339 --> 00:28:50,939
hmm i say i need to think this through a

674
00:28:49,470 --> 00:28:53,130
little more about exactly how I want to

675
00:28:50,940 --> 00:28:55,289
do some of this stuff but for now I

676
00:28:53,130 --> 00:28:57,450
think this is this is fine for

677
00:28:55,289 --> 00:29:00,960
restarting the collision that's probably

678
00:28:57,450 --> 00:29:03,330
fine and yeah so we're just the assets

679
00:29:00,960 --> 00:29:05,940
that's a problem there so for right now

680
00:29:03,329 --> 00:29:06,899
I think I want to defer that because I

681
00:29:05,940 --> 00:29:09,080
want to think about that a little bit

682
00:29:06,900 --> 00:29:12,560
more so what I want to do here is just

683
00:29:09,079 --> 00:29:17,519
go ahead and port the rest of this stuff

684
00:29:12,559 --> 00:29:28,799
so debug state render group that doesn't

685
00:29:17,519 --> 00:29:34,650
need to happen see assets we start

686
00:29:28,799 --> 00:29:42,409
collation render group debug state

687
00:29:34,650 --> 00:29:42,410
render group oops and same thing here

688
00:29:44,359 --> 00:29:47,359
yeah

689
00:29:50,359 --> 00:30:04,439
last one well not really trance state

690
00:30:00,690 --> 00:30:07,110
high priority queue that is true we do

691
00:30:04,440 --> 00:30:09,059
not have the high priority queue so we

692
00:30:07,109 --> 00:30:11,369
would have to get past the high priority

693
00:30:09,059 --> 00:30:16,409
queue there that is that is definitely

694
00:30:11,369 --> 00:30:20,429
the case let's see debug state debug

695
00:30:16,410 --> 00:30:23,340
render group alright so I think we're

696
00:30:20,430 --> 00:30:24,930
all good there so now we just gotta we

697
00:30:23,339 --> 00:30:26,429
gotta think this through a little bit so

698
00:30:24,930 --> 00:30:30,000
we need to be passed some other things

699
00:30:26,430 --> 00:30:32,519
here we need to be passed what what we

700
00:30:30,000 --> 00:30:35,250
need to actually accomplish that

701
00:30:32,519 --> 00:30:37,829
information now although I guess I don't

702
00:30:35,250 --> 00:30:42,000
know now that I think about it let me

703
00:30:37,829 --> 00:30:44,059
take a look here game memory so actually

704
00:30:42,000 --> 00:30:46,980
we we do have that information right

705
00:30:44,059 --> 00:30:50,099
that's just in the global game memory

706
00:30:46,980 --> 00:30:52,470
there so we actually can just use that

707
00:30:50,099 --> 00:30:53,969
directly because in here we know that

708
00:30:52,470 --> 00:30:56,370
we've got the debug state and we know

709
00:30:53,970 --> 00:30:58,650
that we would have right the high

710
00:30:56,369 --> 00:31:01,609
priority queue information already set

711
00:30:58,650 --> 00:31:07,320
up so if we want to we can just do this

712
00:31:01,609 --> 00:31:09,740
right where we do handmade H oops we can

713
00:31:07,319 --> 00:31:13,710
say that we just kind of grab that out

714
00:31:09,740 --> 00:31:19,700
you know of this thing move this down

715
00:31:13,710 --> 00:31:19,700
here so the high priority queue

716
00:31:22,019 --> 00:31:28,559
can be set pretty much any time so when

717
00:31:25,829 --> 00:31:30,509
we do our initialization we can just say

718
00:31:28,559 --> 00:31:32,369
oh yeah okay the debug state high

719
00:31:30,509 --> 00:31:33,629
priority Q equals whatever the high

720
00:31:32,369 --> 00:31:39,419
priority queue was there and now it

721
00:31:33,630 --> 00:31:41,550
knows right and then I think the only

722
00:31:39,420 --> 00:31:43,440
thing we would have to do is get past

723
00:31:41,549 --> 00:31:48,389
the draw buffer that we are compositing

724
00:31:43,440 --> 00:31:52,950
on top of that's really just about it so

725
00:31:48,390 --> 00:31:57,540
let's take a look at what draw buffer is

726
00:31:52,950 --> 00:31:59,549
find as is it just an image it's a

727
00:31:57,539 --> 00:32:02,369
loaded bitmap so really all we have to

728
00:31:59,549 --> 00:32:05,490
do is say okay we've got the draw buffer

729
00:32:02,369 --> 00:32:06,959
here so debug overlay needs to be given

730
00:32:05,490 --> 00:32:09,750
the thing that it's supposed to overlay

731
00:32:06,960 --> 00:32:17,940
on top of or on top of which video is

732
00:32:09,750 --> 00:32:23,819
supposed to be overlaid and now we just

733
00:32:17,940 --> 00:32:28,620
pass it in there right so now we just

734
00:32:23,819 --> 00:32:31,019
have this this issue of the assets and

735
00:32:28,619 --> 00:32:33,750
i'm not sure what I really how I'm not

736
00:32:31,019 --> 00:32:35,809
sure how I feel about this I'm just not

737
00:32:33,750 --> 00:32:35,809
sure

738
00:32:44,679 --> 00:32:53,330
it's a bit of a conundrum it's konnen

739
00:32:48,919 --> 00:32:55,700
drama chol in that sense again because

740
00:32:53,329 --> 00:32:57,949
the only real reason that we have the

741
00:32:55,700 --> 00:33:00,200
assets is for the fonts although to be

742
00:32:57,950 --> 00:33:01,999
fair maybe the debug system wants to be

743
00:33:00,200 --> 00:33:03,469
able to draw like textures and like a

744
00:33:01,999 --> 00:33:05,419
little viewer so you can see what they

745
00:33:03,469 --> 00:33:07,159
look like or things like that so I guess

746
00:33:05,419 --> 00:33:09,649
it's not that unusual that the debug

747
00:33:07,159 --> 00:33:12,950
system would want access to the asset

748
00:33:09,648 --> 00:33:15,378
system but it does mean that we have

749
00:33:12,950 --> 00:33:17,690
this problem of we don't really know

750
00:33:15,378 --> 00:33:19,189
exactly when the debug States going to

751
00:33:17,690 --> 00:33:21,409
be initialized so what we could do I

752
00:33:19,190 --> 00:33:24,139
suppose is force the debug state

753
00:33:21,409 --> 00:33:26,299
initialization to happen at a known time

754
00:33:24,138 --> 00:33:30,199
when we know the assets are configured

755
00:33:26,298 --> 00:33:31,848
up but that's a little again it's a

756
00:33:30,200 --> 00:33:34,278
little janky especially in the cases

757
00:33:31,848 --> 00:33:37,908
where maybe we start to have situations

758
00:33:34,278 --> 00:33:40,429
where there could be you know threads

759
00:33:37,909 --> 00:33:43,450
involved I don't know but but thinking

760
00:33:40,429 --> 00:33:46,159
it through a little more I suppose

761
00:33:43,450 --> 00:33:47,960
everything goes into buffers for the

762
00:33:46,159 --> 00:33:49,339
debug system so far and we could just

763
00:33:47,960 --> 00:33:50,659
assume that things generally are going

764
00:33:49,338 --> 00:33:52,759
to go into buffers because they have to

765
00:33:50,659 --> 00:33:55,639
be thread-safe anyway and so at that

766
00:33:52,759 --> 00:33:58,190
point it's not such a big idea big deal

767
00:33:55,638 --> 00:34:00,398
to say that things have to happen so we

768
00:33:58,190 --> 00:34:02,960
could still leave we could leave this

769
00:34:00,398 --> 00:34:06,488
essentially the way it is we could do

770
00:34:02,960 --> 00:34:09,559
something like this where we say okay

771
00:34:06,489 --> 00:34:13,190
there's like a debug initialized call

772
00:34:09,559 --> 00:34:21,109
that has to happen and you know it does

773
00:34:13,190 --> 00:34:23,720
something like this like so and when you

774
00:34:21,108 --> 00:34:25,578
do debug get state actually what happens

775
00:34:23,719 --> 00:34:28,730
is it just asserts that nobody ever

776
00:34:25,579 --> 00:34:30,798
tries to do that when the debug thing

777
00:34:28,730 --> 00:34:34,010
has not been initialized yet you know

778
00:34:30,798 --> 00:34:36,168
what I'm saying so basically debug

779
00:34:34,010 --> 00:34:38,569
initialize just takes the game memory

780
00:34:36,168 --> 00:34:40,759
and maybe that can actually just beat a

781
00:34:38,568 --> 00:34:44,079
call that actually sets everything up in

782
00:34:40,760 --> 00:34:46,700
terms of the debug global memory as well

783
00:34:44,079 --> 00:34:52,010
in fact we could make it so that the

784
00:34:46,699 --> 00:34:53,879
initialized state kind of runs off of

785
00:34:52,010 --> 00:34:58,900
that

786
00:34:53,880 --> 00:35:00,460
in some way we think about this a little

787
00:34:58,900 --> 00:35:05,230
bit more so if you take a look at

788
00:35:00,460 --> 00:35:07,329
handmade hero dot CPP the way this is

789
00:35:05,230 --> 00:35:09,099
working is at the top of it you know we

790
00:35:07,329 --> 00:35:13,619
assign the debug global memory like this

791
00:35:09,099 --> 00:35:16,029
and so I feel like at that point you

792
00:35:13,619 --> 00:35:18,759
could really just make it be that that's

793
00:35:16,030 --> 00:35:20,980
the best of debug initialize call right

794
00:35:18,760 --> 00:35:23,560
I assume although well if it's got to

795
00:35:20,980 --> 00:35:25,900
get past the assets right the assets

796
00:35:23,559 --> 00:35:27,519
don't get initialized still down here so

797
00:35:25,900 --> 00:35:30,220
technically this is the earliest that

798
00:35:27,519 --> 00:35:32,940
they could actually be initialized in

799
00:35:30,219 --> 00:35:34,959
that sense right is after these happen

800
00:35:32,940 --> 00:35:37,690
so I don't know that's kind of a little

801
00:35:34,960 --> 00:35:43,530
bit tricky but we could make it so that

802
00:35:37,690 --> 00:35:43,530
we call debug initialize here right and

803
00:35:44,250 --> 00:35:48,960
you know maybe i'll call this debug

804
00:35:46,239 --> 00:35:57,389
start in debug end or something as well

805
00:35:48,960 --> 00:35:57,389
just for fun down

806
00:35:58,260 --> 00:36:04,320
and you know if I'm going to do that I

807
00:36:01,530 --> 00:36:09,900
could just say all right debug start is

808
00:36:04,320 --> 00:36:21,630
formally is actually going to be this

809
00:36:09,900 --> 00:36:27,990
guy right here all right something like

810
00:36:21,630 --> 00:36:29,550
this and it will be the one thing that

811
00:36:27,989 --> 00:36:31,169
doesn't go through this because it's

812
00:36:29,550 --> 00:36:34,380
allowed to be uninitialized if that

813
00:36:31,170 --> 00:36:37,050
makes sense delete that and so in debug

814
00:36:34,380 --> 00:36:38,700
start and we got man we got 20 minutes

815
00:36:37,050 --> 00:36:40,680
right because of the late start today so

816
00:36:38,699 --> 00:36:42,119
we've got another 20 minutes to go even

817
00:36:40,679 --> 00:36:47,909
though it says during a begins now it is

818
00:36:42,119 --> 00:36:50,489
not true so if we're in here we know

819
00:36:47,909 --> 00:36:51,929
that we can get the assets now we know

820
00:36:50,489 --> 00:36:53,519
that that initialization would happen at

821
00:36:51,929 --> 00:36:55,859
a good time for us we know that we kind

822
00:36:53,519 --> 00:36:59,849
of set all of our stuff up and that's

823
00:36:55,860 --> 00:37:10,440
kind of nice right so if we are to go

824
00:36:59,849 --> 00:37:16,319
that route yeah if we are to go that

825
00:37:10,440 --> 00:37:22,590
route then I think we should be in good

826
00:37:16,320 --> 00:37:28,200
shape and when we do our debug start

827
00:37:22,590 --> 00:37:30,269
debug and the weird thing about debug

828
00:37:28,199 --> 00:37:32,669
end is it's not really debug and frame

829
00:37:30,269 --> 00:37:35,070
it's just the part where we draw you

830
00:37:32,670 --> 00:37:37,710
know so it's the sort of the debug

831
00:37:35,070 --> 00:37:39,390
drawing and so it's a little bit of a

832
00:37:37,710 --> 00:37:40,920
misnomer there but that's just the

833
00:37:39,389 --> 00:37:42,389
nature of debug code it's kind of a

834
00:37:40,920 --> 00:37:44,250
little nasty how it integrates in

835
00:37:42,389 --> 00:37:48,029
because it's kind of trying to like

836
00:37:44,250 --> 00:37:52,440
capture as much as possible that makes

837
00:37:48,030 --> 00:37:53,760
any sense so yeah so I think that would

838
00:37:52,440 --> 00:37:57,539
probably be okay let's take a look at

839
00:37:53,760 --> 00:37:59,130
where that gets us so far okay so we've

840
00:37:57,539 --> 00:38:02,039
got to buy start to bug and that's all

841
00:37:59,130 --> 00:38:05,099
fine in here when we call debug start

842
00:38:02,039 --> 00:38:07,500
this could also take the game memory so

843
00:38:05,099 --> 00:38:09,119
that's not a big deal either although it

844
00:38:07,500 --> 00:38:10,650
doesn't well it doesn't really need it I

845
00:38:09,119 --> 00:38:11,880
guess because it's but we know that the

846
00:38:10,650 --> 00:38:14,338
cave of global memory has

847
00:38:11,880 --> 00:38:17,640
be set every frame anyway due to the

848
00:38:14,338 --> 00:38:21,778
live code editing so that's fine this

849
00:38:17,639 --> 00:38:31,429
guy is all good you just got to grab it

850
00:38:21,778 --> 00:38:34,579
out of there see same thing here and

851
00:38:31,429 --> 00:38:37,469
then restart collation just needs to be

852
00:38:34,579 --> 00:38:41,278
predefined so that it can be called up

853
00:38:37,469 --> 00:38:42,358
there to initialize things and like I

854
00:38:41,278 --> 00:38:43,739
said that's something that I think we

855
00:38:42,358 --> 00:38:46,489
want to kind of improve a little bit the

856
00:38:43,739 --> 00:38:50,659
way that works anyway so debug start and

857
00:38:46,489 --> 00:38:58,949
debug end just need to get pre declared

858
00:38:50,659 --> 00:39:08,548
because they replace these two guys here

859
00:38:58,949 --> 00:39:12,118
we go okay and I think that's just about

860
00:39:08,548 --> 00:39:13,858
get so hey we're still drawing we got

861
00:39:12,119 --> 00:39:16,019
the deep the fonts working in debug and

862
00:39:13,858 --> 00:39:17,880
all that stuff seems to be fine so let's

863
00:39:16,018 --> 00:39:22,768
see now if we can get our loop live code

864
00:39:17,880 --> 00:39:25,710
editing working if I recompile this now

865
00:39:22,768 --> 00:39:27,179
I'm totally fine so that's great we can

866
00:39:25,710 --> 00:39:29,159
just keep going with that now so that we

867
00:39:27,179 --> 00:39:30,659
don't have to worry loop live coding and

868
00:39:29,159 --> 00:39:32,159
debug services will be nice and

869
00:39:30,659 --> 00:39:35,338
harmonious with each other and that is a

870
00:39:32,159 --> 00:39:37,920
good thing right that's all all nice and

871
00:39:35,338 --> 00:39:40,108
dandy and in fact exhume we could

872
00:39:37,920 --> 00:39:42,028
probably even just do this and and

873
00:39:40,108 --> 00:39:44,210
doesn't even bat an eyelash so that's

874
00:39:42,028 --> 00:39:49,619
all pretty great that is what we want

875
00:39:44,210 --> 00:39:52,588
that is happiness and goodness so yeah

876
00:39:49,619 --> 00:39:54,960
so I think that's all fine let's go

877
00:39:52,588 --> 00:39:57,199
ahead and keep going with that now that

878
00:39:54,960 --> 00:40:00,179
we've got those things kind of

879
00:39:57,199 --> 00:40:02,639
reorganized a little bit more let's try

880
00:40:00,179 --> 00:40:07,108
and make something let's just let's just

881
00:40:02,639 --> 00:40:09,389
try to get our UI story a little bit

882
00:40:07,108 --> 00:40:11,400
straighter right so again just a little

883
00:40:09,389 --> 00:40:12,808
bit of baby step what I'm going to do is

884
00:40:11,400 --> 00:40:16,338
I'm just going to make it so that the

885
00:40:12,809 --> 00:40:16,339
the profile view

886
00:40:19,639 --> 00:40:25,980
can maybe can maybe happen can maybe

887
00:40:23,849 --> 00:40:28,318
like be resized or something right I

888
00:40:25,980 --> 00:40:29,639
just want that those profile bars I'm

889
00:40:28,318 --> 00:40:32,308
just going to play with that a little

890
00:40:29,639 --> 00:40:34,529
bit so let's say for example that we

891
00:40:32,309 --> 00:40:39,109
would do something like rectangle too

892
00:40:34,530 --> 00:40:42,000
and we wanted to make like a profile

893
00:40:39,108 --> 00:40:44,548
wrecked or something something like that

894
00:40:42,000 --> 00:40:46,710
so I'm just going to make a rectangle

895
00:40:44,548 --> 00:40:49,769
and I'm gonna say that the rectangle is

896
00:40:46,710 --> 00:40:52,880
supposed to go that's where like the the

897
00:40:49,769 --> 00:40:58,170
profiler stuff is supposed to be drawn

898
00:40:52,880 --> 00:41:01,740
so if i do that if i come into our debug

899
00:40:58,170 --> 00:41:03,329
and you can see and in fact i just got

900
00:41:01,739 --> 00:41:05,219
some residual coding here that we may

901
00:41:03,329 --> 00:41:06,210
want it well I guess we might want some

902
00:41:05,219 --> 00:41:08,068
stuff from it that's why it's still

903
00:41:06,210 --> 00:41:10,679
there so you can see when we do this

904
00:41:08,068 --> 00:41:12,329
drawing stuff right we have a bunch of

905
00:41:10,679 --> 00:41:14,190
information about how this is going to

906
00:41:12,329 --> 00:41:16,880
be drawn and we've got some like scaling

907
00:41:14,190 --> 00:41:20,159
stuff and all that sort of thing in here

908
00:41:16,880 --> 00:41:23,030
what we could do presumably this I can't

909
00:41:20,159 --> 00:41:26,940
think of any reason why we can't do this

910
00:41:23,030 --> 00:41:30,720
is we push an orthographic transform on

911
00:41:26,940 --> 00:41:35,068
right like there's our orthographic

912
00:41:30,719 --> 00:41:36,629
transform it seems to me like we could

913
00:41:35,068 --> 00:41:39,179
pretty easily just make that

914
00:41:36,630 --> 00:41:43,920
orthographic transform be something that

915
00:41:39,179 --> 00:41:47,940
actually happens kind of like in the

916
00:41:43,920 --> 00:41:51,210
middle of the actual code so you know if

917
00:41:47,940 --> 00:41:53,338
I'm if I'm in here and I'm like

918
00:41:51,210 --> 00:41:55,470
rendering this stuff you know I could

919
00:41:53,338 --> 00:41:57,808
say that i'm just going to before i do

920
00:41:55,469 --> 00:42:00,179
before i draw this stuff you know I've

921
00:41:57,809 --> 00:42:03,089
got an orthographic transform that gets

922
00:42:00,179 --> 00:42:04,889
kind of stuffed on here right so in

923
00:42:03,088 --> 00:42:08,599
theory i'm just going to i'm just going

924
00:42:04,889 --> 00:42:12,379
to see what happens here in theory i

925
00:42:08,599 --> 00:42:12,380
could do something like this

926
00:42:17,019 --> 00:42:20,780
well actually let me just do it this way

927
00:42:19,039 --> 00:42:21,920
to make sure it works first but I could

928
00:42:20,780 --> 00:42:24,200
just do some like this where I push an

929
00:42:21,920 --> 00:42:26,539
orthographic transform on you know and

930
00:42:24,199 --> 00:42:28,399
here is me just like setting up the

931
00:42:26,539 --> 00:42:30,909
exact same transform so in theory I

932
00:42:28,400 --> 00:42:33,519
should just get like exactly the same

933
00:42:30,909 --> 00:42:39,019
what does it complaining about

934
00:42:33,519 --> 00:42:40,849
conversion from ro32 in 30 I love how

935
00:42:39,019 --> 00:42:42,409
like visual studio doesn't even tell you

936
00:42:40,849 --> 00:42:44,719
which argument like they couldn't even

937
00:42:42,409 --> 00:42:45,949
figure out which argument it was that

938
00:42:44,719 --> 00:42:51,500
had the conversion so you have to guess

939
00:42:45,949 --> 00:42:57,049
it's like thanks guys from our 3 to 2 in

940
00:42:51,500 --> 00:42:58,460
32 so didn't we just copy this whit what

941
00:42:57,050 --> 00:43:01,910
do we what are you talking about where's

942
00:42:58,460 --> 00:43:05,269
the where's the sure so it's int

943
00:43:01,909 --> 00:43:13,699
int real so what oh so I should not have

944
00:43:05,269 --> 00:43:17,289
done that that was a mistake so these

945
00:43:13,699 --> 00:43:17,289
really it's really the other way round

946
00:43:19,150 --> 00:43:26,480
soaps so in theory if i run this should

947
00:43:22,760 --> 00:43:27,980
run and it does and that's good but now

948
00:43:26,480 --> 00:43:29,869
i'm going to just see what happens if i

949
00:43:27,980 --> 00:43:31,789
just say oh yeah won't you just make

950
00:43:29,869 --> 00:43:36,849
that be like half the height that it was

951
00:43:31,789 --> 00:43:36,849
or something right oops put that here

952
00:43:42,170 --> 00:43:47,639
why does that take integers because that

953
00:43:45,719 --> 00:43:54,209
doesn't really make any sense I feel

954
00:43:47,639 --> 00:44:00,210
like that's busted in my opinion oh and

955
00:43:54,210 --> 00:44:02,070
I guess I see why so the orthographic

956
00:44:00,210 --> 00:44:04,619
thing I probably just forgot how we

957
00:44:02,070 --> 00:44:06,030
implemented this so pixel width pixel

958
00:44:04,619 --> 00:44:09,029
height and then meters two pixels the

959
00:44:06,030 --> 00:44:11,040
scale is actually baked into here so

960
00:44:09,030 --> 00:44:13,140
that makes sense so really we don't need

961
00:44:11,039 --> 00:44:19,610
to do any of that we can just do this

962
00:44:13,139 --> 00:44:19,609
and I just make it half the size like so

963
00:44:20,809 --> 00:44:30,509
right okay so that makes that guy

964
00:44:27,780 --> 00:44:32,670
smaller right and in fact I can

965
00:44:30,510 --> 00:44:34,320
presumably just make him as small as I

966
00:44:32,670 --> 00:44:36,889
want right like if I want to make him

967
00:44:34,320 --> 00:44:39,120
even smaller now he's even smaller right

968
00:44:36,889 --> 00:44:40,500
because since the renderer like has

969
00:44:39,119 --> 00:44:42,630
everything going through a transform

970
00:44:40,500 --> 00:44:45,119
it's really not a big deal to have that

971
00:44:42,630 --> 00:44:47,130
happen now the problem that we will have

972
00:44:45,119 --> 00:44:50,730
and you can actually already see it is

973
00:44:47,130 --> 00:44:54,660
that we don't actually transform the

974
00:44:50,730 --> 00:44:56,940
mouse into that space at all so we have

975
00:44:54,659 --> 00:44:59,339
the mouse position we just use the mouse

976
00:44:56,940 --> 00:45:01,139
position directly to check for like hit

977
00:44:59,340 --> 00:45:04,110
testing and stuff like this and that's

978
00:45:01,139 --> 00:45:07,109
not useful right that's not going to cut

979
00:45:04,110 --> 00:45:09,360
it we need to like figure out where the

980
00:45:07,110 --> 00:45:10,320
mouse would be in the transform space so

981
00:45:09,360 --> 00:45:11,519
that's another thing that we're going to

982
00:45:10,320 --> 00:45:12,660
have to watch out for but at the moment

983
00:45:11,519 --> 00:45:14,190
i'm not going to concerned about that

984
00:45:12,659 --> 00:45:18,179
i'm just going to focus on sort of this

985
00:45:14,190 --> 00:45:21,329
other separate part okay so transfer

986
00:45:18,179 --> 00:45:23,399
minus we can pretty easily transform

987
00:45:21,329 --> 00:45:26,039
this guy by using the orthographic

988
00:45:23,400 --> 00:45:28,829
transform to change his shape as well

989
00:45:26,039 --> 00:45:30,900
and we can also leave to shape the same

990
00:45:28,829 --> 00:45:33,539
in addition like we can do something

991
00:45:30,900 --> 00:45:35,849
like this leaf is shaped the same but

992
00:45:33,539 --> 00:45:38,699
also control what what his actual

993
00:45:35,849 --> 00:45:42,960
placement on the screen is right so I'm

994
00:45:38,699 --> 00:45:45,839
going to go ahead and do that one we've

995
00:45:42,960 --> 00:45:48,990
got like the chart left and we've got

996
00:45:45,840 --> 00:45:54,140
the chart bottom here somewhere chart

997
00:45:48,989 --> 00:45:54,139
top right so if I want to have some way

998
00:45:57,710 --> 00:46:03,179
to move this around I can just make it

999
00:46:01,440 --> 00:46:04,619
so that like I said I've got like a

1000
00:46:03,179 --> 00:46:07,139
rectangle here or whatever that i've

1001
00:46:04,619 --> 00:46:09,809
defined called profile wrecked i could

1002
00:46:07,139 --> 00:46:12,509
just make it so that the data actually

1003
00:46:09,809 --> 00:46:18,360
comes from there so you know somewhere i

1004
00:46:12,510 --> 00:46:21,420
set the profile wrecked oops min x or i

1005
00:46:18,360 --> 00:46:24,960
guess i could just do profile articles

1006
00:46:21,420 --> 00:46:26,849
recommend max and i can just set this to

1007
00:46:24,960 --> 00:46:28,769
something you know whatever i actually

1008
00:46:26,849 --> 00:46:33,599
want the min-max to be you know maybe i

1009
00:46:28,769 --> 00:46:35,519
want the thing to be 10 f 2 200 200 so

1010
00:46:33,599 --> 00:46:37,349
like a little 200 x 200 square up in the

1011
00:46:35,519 --> 00:46:40,949
corner or maybe it's a little bit

1012
00:46:37,349 --> 00:46:42,659
further down something like that I can

1013
00:46:40,949 --> 00:46:45,839
if I want to just get all of the

1014
00:46:42,659 --> 00:46:49,949
parameters out of that for this

1015
00:46:45,840 --> 00:46:51,990
particular thing right so how would I do

1016
00:46:49,949 --> 00:46:55,589
that I guess I would just go the chart

1017
00:46:51,989 --> 00:46:57,149
top is going to be whatever this profile

1018
00:46:55,590 --> 00:46:58,800
wrecked says it is oh and I guess I

1019
00:46:57,150 --> 00:47:01,019
shouldn't say if it so if it's actually

1020
00:46:58,800 --> 00:47:03,030
5,200 it's actually going to be down at

1021
00:47:01,019 --> 00:47:04,829
the bottom corner always going from the

1022
00:47:03,030 --> 00:47:07,950
top down that's that's just an old

1023
00:47:04,829 --> 00:47:11,159
school program or problem so the chart

1024
00:47:07,949 --> 00:47:15,750
top right is just going to be whatever

1025
00:47:11,159 --> 00:47:17,759
the profile wrecked max why is that's

1026
00:47:15,750 --> 00:47:19,710
just going to be the top and then the

1027
00:47:17,760 --> 00:47:24,380
left is going to be whatever the min x

1028
00:47:19,710 --> 00:47:27,320
is right so that would start with that

1029
00:47:24,380 --> 00:47:32,430
recommend max no overloaded function

1030
00:47:27,320 --> 00:47:34,850
right got to put some v2s in here got

1031
00:47:32,429 --> 00:47:34,849
about that

1032
00:47:35,409 --> 00:47:55,449
there we go yeah yeah okay and so if we

1033
00:47:49,838 --> 00:47:58,298
take a look at that right and again it's

1034
00:47:55,449 --> 00:47:59,439
actually like that's these I always

1035
00:47:58,298 --> 00:48:02,650
forget our court assistance from that

1036
00:47:59,440 --> 00:48:05,409
from the center in this case so 5050 is

1037
00:48:02,650 --> 00:48:07,838
actually going to be like up 50 and over

1038
00:48:05,409 --> 00:48:12,269
50 from the center in theory right

1039
00:48:07,838 --> 00:48:15,849
pixels so I'm not sure if that's exactly

1040
00:48:12,269 --> 00:48:17,619
yeah so that's probably about right it's

1041
00:48:15,849 --> 00:48:23,039
hard to say it looks like it's a little

1042
00:48:17,619 --> 00:48:25,990
off but yeah that's basically the idea

1043
00:48:23,039 --> 00:48:28,539
and then for the scale right we could

1044
00:48:25,989 --> 00:48:31,179
also say like okay whatever the scale is

1045
00:48:28,539 --> 00:48:32,859
our chart with of a thousand we could

1046
00:48:31,179 --> 00:48:34,960
just use whatever the width of this

1047
00:48:32,858 --> 00:48:38,078
thing is whatever the width of our

1048
00:48:34,960 --> 00:48:40,298
profile wrecked is to scale but since

1049
00:48:38,079 --> 00:48:43,089
this chart already got the scaling built

1050
00:48:40,298 --> 00:48:45,519
into it right oops we don't have a

1051
00:48:43,088 --> 00:48:52,108
getwidth function on our and our wrecked

1052
00:48:45,519 --> 00:48:54,400
and our rectangles that's kind of crazy

1053
00:48:52,108 --> 00:49:00,630
get min corner match-winner let's get

1054
00:48:54,400 --> 00:49:00,630
dim so there's the width

1055
00:49:00,969 --> 00:49:07,789
and so now right like yeah the thing is

1056
00:49:03,889 --> 00:49:09,710
is super tiny because now we've set the

1057
00:49:07,789 --> 00:49:11,329
width to be only however much we

1058
00:49:09,710 --> 00:49:16,400
specified in there and that's all fine

1059
00:49:11,329 --> 00:49:18,679
but we also have the problem that we

1060
00:49:16,400 --> 00:49:20,329
don't respect the height of this thing

1061
00:49:18,679 --> 00:49:23,089
right so again if we wanted to operate

1062
00:49:20,329 --> 00:49:24,860
kind of in a box that we could control

1063
00:49:23,090 --> 00:49:27,620
the size of we would need to like shrink

1064
00:49:24,860 --> 00:49:29,630
the width and the height of things in

1065
00:49:27,619 --> 00:49:31,069
order to fit into the box so that's

1066
00:49:29,630 --> 00:49:33,230
another thing that we have to do i do

1067
00:49:31,070 --> 00:49:37,460
want to know though I'm a little bit

1068
00:49:33,230 --> 00:49:42,230
confused is that really 200 pixels worth

1069
00:49:37,460 --> 00:49:44,090
of width it seems a little bit not so

1070
00:49:42,230 --> 00:49:47,650
much oh right because it's actually only

1071
00:49:44,090 --> 00:49:52,180
150 because this was wrecked min max

1072
00:49:47,650 --> 00:49:57,920
yeah so you know how it is anyway so

1073
00:49:52,179 --> 00:50:00,109
yeah that all looks fine so if we wanted

1074
00:49:57,920 --> 00:50:02,480
to change how the height got interpreted

1075
00:50:00,110 --> 00:50:04,730
we know that we have a certain number of

1076
00:50:02,480 --> 00:50:06,800
lanes and we also know that we have a

1077
00:50:04,730 --> 00:50:09,500
certain number of frames that we're

1078
00:50:06,800 --> 00:50:11,600
going to draw so if we just go ahead and

1079
00:50:09,500 --> 00:50:14,179
back solve for how many of those we want

1080
00:50:11,599 --> 00:50:17,839
to have right if we just come up and do

1081
00:50:14,179 --> 00:50:21,199
something like this we now know what the

1082
00:50:17,840 --> 00:50:24,289
max frame count is and we know what the

1083
00:50:21,199 --> 00:50:27,169
lane count is so assuming that the max

1084
00:50:24,289 --> 00:50:29,300
frame you know we could do something

1085
00:50:27,170 --> 00:50:32,230
like this where we just go okay we need

1086
00:50:29,300 --> 00:50:34,460
to know what the lane height is right

1087
00:50:32,230 --> 00:50:36,110
what we could do is say all right the

1088
00:50:34,460 --> 00:50:40,849
lane height we're just going to assume

1089
00:50:36,110 --> 00:50:42,530
that the lane height is zero and then

1090
00:50:40,849 --> 00:50:44,329
we're going to do assuming that the max

1091
00:50:42,530 --> 00:50:45,890
frame count is greater than zero so that

1092
00:50:44,329 --> 00:50:47,809
we won't divide by zero we'll just say

1093
00:50:45,889 --> 00:50:51,319
that the lane height is going to be

1094
00:50:47,809 --> 00:50:53,619
whatever the max frame is times the lane

1095
00:50:51,320 --> 00:50:53,620
count

1096
00:50:55,280 --> 00:51:03,650
right that's how many lanes we have to

1097
00:50:57,860 --> 00:51:07,400
draw and then we're just going to say

1098
00:51:03,650 --> 00:51:09,619
that however big that that's you know

1099
00:51:07,400 --> 00:51:13,010
how many total we have to draw so

1100
00:51:09,619 --> 00:51:15,230
however big that actually is going to be

1101
00:51:13,010 --> 00:51:17,630
well I guess we also have this space and

1102
00:51:15,230 --> 00:51:19,789
concern here right so we have lain

1103
00:51:17,630 --> 00:51:21,440
height x laying count and we've got this

1104
00:51:19,789 --> 00:51:22,309
this sort of spacing that produces the

1105
00:51:21,440 --> 00:51:24,740
bar height we've got this sort of

1106
00:51:22,309 --> 00:51:28,400
spacing here so as a constant of for

1107
00:51:24,739 --> 00:51:30,139
that gets added in here right so we want

1108
00:51:28,400 --> 00:51:32,480
to discuss by that as well so we want to

1109
00:51:30,139 --> 00:51:34,509
talk about basically like you know bar

1110
00:51:32,480 --> 00:51:38,289
spacing equals four point 0 or something

1111
00:51:34,510 --> 00:51:45,080
Laura spacing so this is actually like

1112
00:51:38,289 --> 00:51:47,900
bar plus spacing like that so this is

1113
00:51:45,079 --> 00:51:52,840
plus bar spacing but we want to do here

1114
00:51:47,900 --> 00:51:55,280
is back solve for bar height right or

1115
00:51:52,840 --> 00:51:57,880
rather I should say backs all four lane

1116
00:51:55,280 --> 00:52:01,430
height so we know how big the lanes are

1117
00:51:57,880 --> 00:52:06,200
so to do that we know we have this many

1118
00:52:01,429 --> 00:52:07,579
of them we know that for everyone well I

1119
00:52:06,199 --> 00:52:09,409
guess we also we kind of need to do this

1120
00:52:07,579 --> 00:52:13,789
in two stages we know we have this many

1121
00:52:09,409 --> 00:52:17,719
blocks right and we know we have a the

1122
00:52:13,789 --> 00:52:20,269
get dim of the profile wrecked we know

1123
00:52:17,719 --> 00:52:23,179
we have this much total space right

1124
00:52:20,269 --> 00:52:26,300
that's the entire height of the chart so

1125
00:52:23,179 --> 00:52:29,859
if we divide that by max-frame now we

1126
00:52:26,300 --> 00:52:33,320
know how big each block of bars could be

1127
00:52:29,860 --> 00:52:36,050
but we have to then say ok the bar

1128
00:52:33,320 --> 00:52:37,550
height itself we know their spacing in

1129
00:52:36,050 --> 00:52:41,030
between them so we would need to

1130
00:52:37,550 --> 00:52:46,130
subtract away right the bar spacing from

1131
00:52:41,030 --> 00:52:47,750
that result because each one of those

1132
00:52:46,130 --> 00:52:49,970
bar blocks has this extra mount there

1133
00:52:47,750 --> 00:52:52,070
and then that total amount that we have

1134
00:52:49,969 --> 00:52:53,599
left over and there's a little bit of

1135
00:52:52,070 --> 00:52:54,980
there's a fence post thing we could do

1136
00:52:53,599 --> 00:52:55,909
there because it's not in one hundred

1137
00:52:54,980 --> 00:52:58,969
percent correct but we can talk about

1138
00:52:55,909 --> 00:53:01,039
that a second if we then divide that by

1139
00:52:58,969 --> 00:53:05,329
how many lanes we want that would give

1140
00:53:01,039 --> 00:53:09,130
us that would give us what we're looking

1141
00:53:05,329 --> 00:53:09,130
for for the total a hang

1142
00:53:14,239 --> 00:53:22,229
so yeah yeah so now we're getting a

1143
00:53:20,730 --> 00:53:24,690
little bit closer to what we where we

1144
00:53:22,230 --> 00:53:26,340
want to be but we kind of have some more

1145
00:53:24,690 --> 00:53:29,490
work to do here but point being where

1146
00:53:26,340 --> 00:53:31,920
you know we're getting there slowly so

1147
00:53:29,489 --> 00:53:33,599
what I want to do now is I want to start

1148
00:53:31,920 --> 00:53:34,920
debugging this and then also have a way

1149
00:53:33,599 --> 00:53:38,849
that we can sort of test moving it

1150
00:53:34,920 --> 00:53:41,130
around what I'd like to do is I'd like

1151
00:53:38,849 --> 00:53:43,199
to draw whatever the rectangle is so

1152
00:53:41,130 --> 00:53:47,700
this rectangle right here I'd like to be

1153
00:53:43,199 --> 00:53:49,559
able to do like a push rect outline on

1154
00:53:47,699 --> 00:53:51,059
that or I guess I don't even really have

1155
00:53:49,559 --> 00:53:52,949
to do a push back to outline I'm just

1156
00:53:51,059 --> 00:53:55,739
going to do a push rekt first before we

1157
00:53:52,949 --> 00:53:58,799
draw anything else I'll do a push rekt

1158
00:53:55,739 --> 00:54:03,000
of this guy so when we do this push

1159
00:53:58,800 --> 00:54:08,580
wrecked here's the render group let's go

1160
00:54:03,000 --> 00:54:10,500
ahead and do push wrecked so when we do

1161
00:54:08,579 --> 00:54:15,230
push wrecked I need to pass it to that

1162
00:54:10,500 --> 00:54:18,599
group I need to pass it the rectangle I

1163
00:54:15,230 --> 00:54:19,980
need to pass at the Z and then I need to

1164
00:54:18,599 --> 00:54:22,069
pass it a color and what I'm going to do

1165
00:54:19,980 --> 00:54:27,150
is I'm going to pass it just like

1166
00:54:22,070 --> 00:54:33,620
essentially a sort of a black overlay

1167
00:54:27,150 --> 00:54:36,059
right so there's our our supposed

1168
00:54:33,619 --> 00:54:37,440
rectangle and this confirms what I

1169
00:54:36,059 --> 00:54:40,049
thought before which is that our

1170
00:54:37,440 --> 00:54:43,309
rectangle is kind of busted so I don't

1171
00:54:40,050 --> 00:54:47,370
understand like a rectangle min max if

1172
00:54:43,309 --> 00:54:49,110
if that's actually correct I guess well

1173
00:54:47,369 --> 00:54:51,000
you know what I guess it could be is 50

1174
00:54:49,110 --> 00:54:52,230
pixels only that many all right so I

1175
00:54:51,000 --> 00:54:55,619
guess that is actually correct that's

1176
00:54:52,230 --> 00:54:56,940
that's that may actually be correct so

1177
00:54:55,619 --> 00:54:58,380
we're all good here the only thing

1178
00:54:56,940 --> 00:55:00,480
that's a little janky is we go outside

1179
00:54:58,380 --> 00:55:02,160
of the rectangle because our current

1180
00:55:00,480 --> 00:55:05,909
definition is we don't actually sort of

1181
00:55:02,159 --> 00:55:07,559
stopped anyone at the moment from you

1182
00:55:05,909 --> 00:55:09,809
know if you if you take more time than

1183
00:55:07,559 --> 00:55:11,429
you're supposed to we don't stop you

1184
00:55:09,809 --> 00:55:12,630
from drawing outside the bounds which I

1185
00:55:11,429 --> 00:55:13,859
don't know that I necessarily even want

1186
00:55:12,630 --> 00:55:15,750
to fix because that's kind of something

1187
00:55:13,860 --> 00:55:16,860
I wanted to see there but we could try

1188
00:55:15,750 --> 00:55:19,500
to make it a little bit more prettier

1189
00:55:16,860 --> 00:55:23,120
later on so that's also totally

1190
00:55:19,500 --> 00:55:23,119
reasonable what

1191
00:55:25,000 --> 00:55:35,360
that is super weird oh wow so we have a

1192
00:55:32,510 --> 00:55:37,580
bug we have a total bug there that's

1193
00:55:35,360 --> 00:55:40,280
pretty interesting you can see that we

1194
00:55:37,579 --> 00:55:44,059
like when you click the button when we

1195
00:55:40,280 --> 00:55:46,370
do resetting ah look at that check that

1196
00:55:44,059 --> 00:55:49,309
out remember I was saying that you find

1197
00:55:46,369 --> 00:55:53,000
problems in debug stuff I just want to

1198
00:55:49,309 --> 00:56:00,469
show you this so when the left mouse

1199
00:55:53,000 --> 00:56:04,219
button goes down mouse but when we do

1200
00:56:00,469 --> 00:56:07,759
refresh collation we had this like giant

1201
00:56:04,219 --> 00:56:09,949
spike happening in the frame thing right

1202
00:56:07,760 --> 00:56:11,180
oh well I guess it's not a bug now I

1203
00:56:09,949 --> 00:56:13,339
think about it's not even really a bug

1204
00:56:11,179 --> 00:56:14,869
that's just what would happen right so

1205
00:56:13,340 --> 00:56:17,210
if you take a look at what happens here

1206
00:56:14,869 --> 00:56:20,630
when I click the left mouse button it

1207
00:56:17,210 --> 00:56:22,550
Rico lates all of those frames right

1208
00:56:20,630 --> 00:56:23,930
because that's kind of the way we have

1209
00:56:22,550 --> 00:56:25,940
it set and you can look at you can see

1210
00:56:23,929 --> 00:56:28,849
it taking all this time to go Rico late

1211
00:56:25,940 --> 00:56:30,889
the frames which pushes out the time

1212
00:56:28,849 --> 00:56:33,319
when it does the render to one whole

1213
00:56:30,889 --> 00:56:35,599
frame afterwards basically right that's

1214
00:56:33,320 --> 00:56:37,039
just kind of that's kind of cool all

1215
00:56:35,599 --> 00:56:38,539
right so let's let's try to solve the

1216
00:56:37,039 --> 00:56:40,509
one obvious bug that we do have here

1217
00:56:38,539 --> 00:56:43,070
before I guess we're almost out of time

1218
00:56:40,510 --> 00:56:45,230
we're not drawing high enough so I just

1219
00:56:43,070 --> 00:56:49,660
need to kind of like get my math in

1220
00:56:45,230 --> 00:56:53,480
order here for the max frame situation

1221
00:56:49,659 --> 00:56:55,339
okay so we have our max frame thing here

1222
00:56:53,480 --> 00:56:58,699
this is how many frames were going to do

1223
00:56:55,340 --> 00:57:02,690
we have our lame cat our lane count her

1224
00:56:58,699 --> 00:57:04,669
Lane count like that so we get how the

1225
00:57:02,690 --> 00:57:05,960
total width we have and we know that we

1226
00:57:04,670 --> 00:57:07,789
have this many frames that have to fit

1227
00:57:05,960 --> 00:57:09,559
in there so we find out how much this is

1228
00:57:07,789 --> 00:57:13,690
basically this divide tells us how many

1229
00:57:09,559 --> 00:57:16,190
frames how many pixels per frame we have

1230
00:57:13,690 --> 00:57:17,210
we then subtract away the bar spacing

1231
00:57:16,190 --> 00:57:19,039
from that because we know that we're

1232
00:57:17,210 --> 00:57:21,650
going to put that much space in between

1233
00:57:19,039 --> 00:57:24,590
them so we only have the residual of

1234
00:57:21,650 --> 00:57:27,980
that left and then we divide by the lane

1235
00:57:24,590 --> 00:57:30,470
count and we get the lane height so pro

1236
00:57:27,980 --> 00:57:32,449
Lena that then we come back through here

1237
00:57:30,469 --> 00:57:32,709
we say okay we have the lane eight times

1238
00:57:32,449 --> 00:57:35,529
the

1239
00:57:32,710 --> 00:57:37,869
in count that's how big each individual

1240
00:57:35,530 --> 00:57:40,480
frames but you know the S we called that

1241
00:57:37,869 --> 00:57:43,780
a bar for no real apparent reason that's

1242
00:57:40,480 --> 00:57:45,760
how big those should be and that you

1243
00:57:43,780 --> 00:57:51,760
know that looks pretty okay to me I'm

1244
00:57:45,760 --> 00:57:53,530
not sure why short height bars plus beta

1245
00:57:51,760 --> 00:57:57,790
times do a state frame that's actually

1246
00:57:53,530 --> 00:58:01,869
wrong I don't know if we actually ever

1247
00:57:57,789 --> 00:58:03,730
used chart anywhere do we yeah we don't

1248
00:58:01,869 --> 00:58:05,588
really ever use it anywhere so it's not

1249
00:58:03,730 --> 00:58:07,480
actually important but that's actually

1250
00:58:05,588 --> 00:58:08,619
wrong this is actually max frame here

1251
00:58:07,480 --> 00:58:11,679
right cuz that's how many we're actually

1252
00:58:08,619 --> 00:58:14,440
gonna draw that's the chart with which

1253
00:58:11,679 --> 00:58:17,319
we knew that's the chart top which we

1254
00:58:14,440 --> 00:58:18,700
also knew that's the scale which only

1255
00:58:17,320 --> 00:58:20,800
affects the left right so yeah I'm not

1256
00:58:18,699 --> 00:58:22,960
sure I'm not sure I understand exactly

1257
00:58:20,800 --> 00:58:25,510
so I'm just going to go ahead and break

1258
00:58:22,960 --> 00:58:28,780
this out and just take a look so if we

1259
00:58:25,510 --> 00:58:35,109
do get dim dives Mac frame look there

1260
00:58:28,780 --> 00:58:38,250
this is basically pixels per frame plus

1261
00:58:35,108 --> 00:58:42,789
facing then we have pixels per frame

1262
00:58:38,250 --> 00:58:49,179
which is that minus however much there

1263
00:58:42,789 --> 00:58:50,440
is in between each bar and then after

1264
00:58:49,179 --> 00:58:53,519
we're done with that we have the lane

1265
00:58:50,440 --> 00:58:57,159
height itself which is just the pixels

1266
00:58:53,519 --> 00:58:59,070
per frame / the lane count and I'd like

1267
00:58:57,159 --> 00:59:03,129
to just I just want to go ahead and see

1268
00:58:59,070 --> 00:59:09,550
you know what what what what happens

1269
00:59:03,130 --> 00:59:12,579
there this is bars the spacing spacing

1270
00:59:09,550 --> 00:59:16,839
bar height plus bar spacing and that all

1271
00:59:12,579 --> 00:59:18,279
seems Lane height x lane count yeah I

1272
00:59:16,838 --> 00:59:19,869
mean that seems reasonable alright so

1273
00:59:18,280 --> 00:59:20,980
let's go ahead and take a look I'm just

1274
00:59:19,869 --> 00:59:22,838
going to step in there and see if I

1275
00:59:20,980 --> 00:59:26,460
could see what the problem is before we

1276
00:59:22,838 --> 00:59:26,460
go to the QA right

1277
00:59:29,079 --> 00:59:39,829
let's go in here pixels plus spacing is

1278
00:59:32,449 --> 00:59:44,599
15 pixels per frame so what is debug

1279
00:59:39,829 --> 00:59:46,789
State profile wrecked so what does this

1280
00:59:44,599 --> 00:59:48,650
say it basically says that we've got you

1281
00:59:46,789 --> 00:59:51,679
know we should have 150 pixels to play

1282
00:59:48,650 --> 00:59:54,889
with right and whats max frame max frame

1283
00:59:51,679 --> 00:59:57,319
is 10 so 15 pixels per bar does sound

1284
00:59:54,889 --> 01:00:00,469
right we then subtract away the bar

1285
00:59:57,320 --> 01:00:03,350
spacing and we get 11 pixels we then

1286
01:00:00,469 --> 01:00:08,119
divide by the lane count of nine right

1287
01:00:03,349 --> 01:00:09,739
and we get 1 point 2 pixels per let's

1288
01:00:08,119 --> 01:00:13,099
see what we do here we then say the bar

1289
01:00:09,739 --> 01:00:17,329
height is 11 which is correct bars plus

1290
01:00:13,099 --> 01:00:21,380
spacing is 15 right which is correct so

1291
01:00:17,329 --> 01:00:25,159
the chart height total is 150 so that's

1292
01:00:21,380 --> 01:00:28,519
actually computing it correctly are we

1293
01:00:25,159 --> 01:00:34,429
drawing it wrong so let's see how we

1294
01:00:28,519 --> 01:00:36,199
draw here bar spacing times 4 ah so

1295
01:00:34,429 --> 01:00:38,359
that's the problem we're just drawing it

1296
01:00:36,199 --> 01:00:40,519
wrong we change the meaning of that and

1297
01:00:38,360 --> 01:00:43,910
I didn't propagate it down so it's

1298
01:00:40,519 --> 01:00:48,289
really just bars plus facing just needs

1299
01:00:43,909 --> 01:00:54,230
to be propagated down like so bars

1300
01:00:48,289 --> 01:00:57,349
facing is that not in there yet there we

1301
01:00:54,230 --> 01:00:59,300
are and so now we've got our stuff sort

1302
01:00:57,349 --> 01:01:01,849
of sitting in a little window which is

1303
01:00:59,300 --> 01:01:07,210
cool and yeah I'm going to go ahead and

1304
01:01:01,849 --> 01:01:10,670
go to the QA if that makes sense and

1305
01:01:07,210 --> 01:01:13,010
take some questions here because we did

1306
01:01:10,670 --> 01:01:14,450
plenty on this dream and feel like I

1307
01:01:13,010 --> 01:01:16,070
said we're kind of in that mode where

1308
01:01:14,449 --> 01:01:18,500
we're going to kind of over the course

1309
01:01:16,070 --> 01:01:20,059
of this week drive the debug system into

1310
01:01:18,500 --> 01:01:22,219
a state where it's more of an actual

1311
01:01:20,059 --> 01:01:25,460
little kind of UI system that can sort

1312
01:01:22,219 --> 01:01:27,739
of place things properly and not be

1313
01:01:25,460 --> 01:01:29,539
quite so ad hoc because we kind of know

1314
01:01:27,739 --> 01:01:30,829
what we need now in the structure is

1315
01:01:29,539 --> 01:01:32,389
there so we can just kind of start

1316
01:01:30,829 --> 01:01:33,559
placing things so if you have any

1317
01:01:32,389 --> 01:01:36,579
questions about what we were doing go

1318
01:01:33,559 --> 01:01:36,579
ahead and cue it

1319
01:01:39,750 --> 01:01:44,199
midlo I appreciate that there are more

1320
01:01:42,369 --> 01:01:46,210
robust ways of implementing such things

1321
01:01:44,199 --> 01:01:48,609
but would it be practical to use the

1322
01:01:46,210 --> 01:01:51,579
debug data to drive some of the game's

1323
01:01:48,610 --> 01:01:54,039
visual effects EG fire or more likely

1324
01:01:51,579 --> 01:01:56,739
some otherworldly magical entity or the

1325
01:01:54,039 --> 01:01:58,269
display on an in-game computer maybe it

1326
01:01:56,739 --> 01:02:02,859
could be sort of an easter egg for those

1327
01:01:58,269 --> 01:02:04,869
of us who know how the games made well

1328
01:02:02,860 --> 01:02:07,120
the reason that i would be less inclined

1329
01:02:04,869 --> 01:02:09,309
to do that is because it's going to take

1330
01:02:07,119 --> 01:02:11,139
a big chunk of memory and it takes a

1331
01:02:09,309 --> 01:02:12,880
bunch of extra cycles and stuff to

1332
01:02:11,139 --> 01:02:14,469
collect this information so the idea

1333
01:02:12,880 --> 01:02:17,440
would be that when you ship the game

1334
01:02:14,469 --> 01:02:20,919
it's compiled out so presumably it won't

1335
01:02:17,440 --> 01:02:22,929
actually be in there but maybe you know

1336
01:02:20,920 --> 01:02:24,700
maybe that's a bad decision and maybe

1337
01:02:22,929 --> 01:02:26,829
since this is a project that's about

1338
01:02:24,699 --> 01:02:29,109
education we should have a way for you

1339
01:02:26,829 --> 01:02:32,099
to get at the debug code in the game to

1340
01:02:29,110 --> 01:02:36,849
try and encourage people to play with it

1341
01:02:32,099 --> 01:02:39,579
so you know if if that's the route we go

1342
01:02:36,849 --> 01:02:47,860
then yes we certainly could tie it to

1343
01:02:39,579 --> 01:02:49,659
something let's see Elvin there are

1344
01:02:47,860 --> 01:02:51,160
magenta spikes in the debug graph that

1345
01:02:49,659 --> 01:02:52,539
happened so fast we don't have time to

1346
01:02:51,159 --> 01:02:54,670
click on them how do we plan to catch

1347
01:02:52,539 --> 01:02:57,550
those having the ability to step frame

1348
01:02:54,670 --> 01:02:59,349
by frame could be useful another idea is

1349
01:02:57,550 --> 01:03:02,170
to have the debug text left off at the

1350
01:02:59,349 --> 01:03:04,199
last repetition we hovered well don't

1351
01:03:02,170 --> 01:03:07,210
forget we can always pause it and

1352
01:03:04,199 --> 01:03:10,000
although we only see a few frames here

1353
01:03:07,210 --> 01:03:11,230
we actually have 64 of them so what

1354
01:03:10,000 --> 01:03:12,519
we're going to be doing with this debug

1355
01:03:11,230 --> 01:03:14,019
you I is will be able to just kind of

1356
01:03:12,519 --> 01:03:16,030
grab this and scroll back to the one

1357
01:03:14,019 --> 01:03:17,650
that was a spike so anytime we see that

1358
01:03:16,030 --> 01:03:20,980
spike will be able to just go like that

1359
01:03:17,650 --> 01:03:22,329
and grab it right even if it went off

1360
01:03:20,980 --> 01:03:24,550
because we've got a pretty big back

1361
01:03:22,329 --> 01:03:26,949
buffer and we can always make those back

1362
01:03:24,550 --> 01:03:28,720
buffers arbitrarily bigger on a machine

1363
01:03:26,949 --> 01:03:29,829
that has you know a ton of memory

1364
01:03:28,719 --> 01:03:32,169
because like if you're dead machine

1365
01:03:29,829 --> 01:03:33,489
that's like 32 gigs of memory because

1366
01:03:32,170 --> 01:03:35,650
it's like some fancy dead machine or

1367
01:03:33,489 --> 01:03:38,979
whatever you can just dedicate like you

1368
01:03:35,650 --> 01:03:40,570
know twenty four gigabytes to debug back

1369
01:03:38,980 --> 01:03:42,369
buffer and you could store every frames

1370
01:03:40,570 --> 01:03:43,960
all the events from every frame for the

1371
01:03:42,369 --> 01:03:46,449
entire game in there if you wanted and

1372
01:03:43,960 --> 01:03:48,220
scroll back as far as you wanted so

1373
01:03:46,449 --> 01:03:50,759
there's no like limits on that we can we

1374
01:03:48,219 --> 01:03:50,759
can have a party

1375
01:04:03,139 --> 01:04:06,650
any other q's

1376
01:04:20,539 --> 01:04:28,028
numark to use there's no more accusers

1377
01:04:25,489 --> 01:04:28,028
no more q's

1378
01:04:38,190 --> 01:04:53,170
alright well no Marquess we will wrap it

1379
01:04:41,858 --> 01:04:53,949
up doo-doo-doo oops okay thank you

1380
01:04:53,170 --> 01:04:55,180
everyone for joining me for another

1381
01:04:53,949 --> 01:04:57,969
episode of handmade here it's been a

1382
01:04:55,179 --> 01:04:59,469
pleasure coding with you as always if

1383
01:04:57,969 --> 01:05:01,179
you would like to follow along the tour

1384
01:04:59,469 --> 01:05:04,239
code at home you can always pre-order

1385
01:05:01,179 --> 01:05:05,828
handmade hero the game on ham a hero org

1386
01:05:04,239 --> 01:05:07,239
and it comes to the source code which I

1387
01:05:05,829 --> 01:05:08,559
update every night so you can always

1388
01:05:07,239 --> 01:05:10,629
stay up to date with what we're coding

1389
01:05:08,559 --> 01:05:12,039
and play round source code at home so as

1390
01:05:10,630 --> 01:05:14,950
you can do your own experiments and

1391
01:05:12,039 --> 01:05:16,210
learn things we also have a forum site

1392
01:05:14,949 --> 01:05:17,649
you can go to if you want to ask

1393
01:05:16,210 --> 01:05:20,769
questions or if you want to look at an

1394
01:05:17,650 --> 01:05:22,559
antidepressant ain by the community we

1395
01:05:20,769 --> 01:05:24,969
have a patreon page if you want to

1396
01:05:22,559 --> 01:05:26,109
support the video series you can put you

1397
01:05:24,969 --> 01:05:28,899
can subscribe to that we also have a

1398
01:05:26,108 --> 01:05:30,068
tweet bot which will tweet the schedule

1399
01:05:28,900 --> 01:05:32,108
so you could always make sure you're

1400
01:05:30,068 --> 01:05:34,719
catching the stream live if you want to

1401
01:05:32,108 --> 01:05:36,130
be you'll know when it is up so

1402
01:05:34,719 --> 01:05:37,838
definitely check those out if you're

1403
01:05:36,130 --> 01:05:40,720
interested I will be back here tomorrow

1404
01:05:37,838 --> 01:05:42,460
5pm pacific daylight time for those of

1405
01:05:40,719 --> 01:05:44,858
you interested in seeing the debug

1406
01:05:42,460 --> 01:05:47,528
system become something more you I

1407
01:05:44,858 --> 01:05:49,630
friendly that is what we will be doing

1408
01:05:47,528 --> 01:05:51,010
this week and so it should be pretty fun

1409
01:05:49,630 --> 01:05:52,420
so tomorrow we'll kind of get some

1410
01:05:51,010 --> 01:05:55,028
little kind of windowing stuff happening

1411
01:05:52,420 --> 01:05:56,470
in there and we can go from there so

1412
01:05:55,028 --> 01:06:00,028
hopefully I'll see you back here from

1413
01:05:56,469 --> 01:06:01,778
that for that until then have fun

1414
01:06:00,028 --> 01:06:05,400
programming and i'll see you guys on the

1415
01:06:01,778 --> 01:06:05,400
internet take it degrees everyone

