1
00:00:00,979 --> 00:00:04,258
alright hello everyone and welcome to

2
00:00:03,120 --> 00:00:06,060
hand made here the show recode a

3
00:00:04,259 --> 00:00:07,890
complete game live on stream today I

4
00:00:06,059 --> 00:00:09,388
would like to pick up where we left off

5
00:00:07,889 --> 00:00:11,099
last weekend and do a little bit of

6
00:00:09,388 --> 00:00:14,820
testing in terms of how we're doing our

7
00:00:11,099 --> 00:00:17,250
integration so there was some confusion

8
00:00:14,820 --> 00:00:21,118
as well and I just wanted to clear this

9
00:00:17,250 --> 00:00:25,170
up just so everyone's kind of clear on

10
00:00:21,118 --> 00:00:26,670
what's going on I'm gonna go to the

11
00:00:25,170 --> 00:00:28,109
blackboard a little bit and just say a

12
00:00:26,670 --> 00:00:29,519
couple things real quick because there

13
00:00:28,109 --> 00:00:31,289
was a bunch of confusion about this

14
00:00:29,518 --> 00:00:34,259
someone filed a github bug report which

15
00:00:31,289 --> 00:00:35,730
was not correct which ironically

16
00:00:34,259 --> 00:00:39,269
mentioned the Stack Exchange

17
00:00:35,729 --> 00:00:41,279
thread that actually was correct they

18
00:00:39,270 --> 00:00:49,980
just read the stock exchange thread

19
00:00:41,280 --> 00:00:51,840
wrong what can you do so so we're going

20
00:00:49,979 --> 00:00:52,890
to talk just really briefly because we

21
00:00:51,840 --> 00:00:54,210
talked about before I just want to

22
00:00:52,890 --> 00:00:56,009
re-emphasize it because I think it's not

23
00:00:54,210 --> 00:01:01,320
coming through let's talk about

24
00:00:56,009 --> 00:01:03,869
hemisphere integration alright so what

25
00:01:01,320 --> 00:01:06,420
we're doing here on handmade hero in

26
00:01:03,869 --> 00:01:09,750
terms of solving for the lighting right

27
00:01:06,420 --> 00:01:12,510
is we have a hemisphere and we're trying

28
00:01:09,750 --> 00:01:15,688
to sample the light over the entire

29
00:01:12,510 --> 00:01:18,210
hemisphere right so our goal is if we

30
00:01:15,688 --> 00:01:20,819
had an infinite amount of computing

31
00:01:18,209 --> 00:01:23,158
power we would literally want to check

32
00:01:20,819 --> 00:01:25,978
what the incoming light was in an

33
00:01:23,159 --> 00:01:28,650
infinite number of directions everywhere

34
00:01:25,978 --> 00:01:30,150
on this hemisphere right and for each

35
00:01:28,650 --> 00:01:32,790
one of those we would multiply the

36
00:01:30,150 --> 00:01:35,310
incoming light by an infinitesimal

37
00:01:32,790 --> 00:01:38,610
quantity but that quantity would still

38
00:01:35,310 --> 00:01:39,930
be proportional to cosine theta why is

39
00:01:38,609 --> 00:01:42,569
it proportional cosine theta because

40
00:01:39,930 --> 00:01:46,259
when you have light shining on a surface

41
00:01:42,569 --> 00:01:49,500
if you imagine a beam of light shining

42
00:01:46,259 --> 00:01:53,519
on a surface the degree to which it can

43
00:01:49,500 --> 00:01:57,868
illuminate that surface depends entirely

44
00:01:53,519 --> 00:01:59,670
on the angle at which it comes right so

45
00:01:57,868 --> 00:02:02,280
if you take a look at the aperture of

46
00:01:59,670 --> 00:02:04,170
light that will illuminate the same size

47
00:02:02,280 --> 00:02:06,030
on the surface so let's say we've got

48
00:02:04,170 --> 00:02:08,189
this size here on the surface in

49
00:02:06,030 --> 00:02:10,439
question if the light is shining

50
00:02:08,189 --> 00:02:12,840
directly down you will notice that you

51
00:02:10,439 --> 00:02:13,800
get a much bigger aperture than if the

52
00:02:12,840 --> 00:02:17,520
light is shining

53
00:02:13,800 --> 00:02:19,830
in right this length is smaller than

54
00:02:17,520 --> 00:02:21,780
this length how much smaller well it

55
00:02:19,830 --> 00:02:25,950
happens to be proportional to the cosine

56
00:02:21,780 --> 00:02:29,520
of the angle right because as this goes

57
00:02:25,949 --> 00:02:35,159
to their right we're gonna find that the

58
00:02:29,520 --> 00:02:39,030
the when we draw the triangle that says

59
00:02:35,159 --> 00:02:41,400
what that proportion is right the angle

60
00:02:39,030 --> 00:02:45,960
that we rotate this down by will change

61
00:02:41,400 --> 00:02:52,650
how long this length is right it's it's

62
00:02:45,960 --> 00:02:56,310
that part of the triangle right wait no

63
00:02:52,650 --> 00:02:59,670
no no no so everyone that part of the

64
00:02:56,310 --> 00:03:01,830
triangle sorry I had that I had that

65
00:02:59,669 --> 00:03:03,929
horribly wrong that was there's a very

66
00:03:01,830 --> 00:03:07,920
bad drawing let me actually drop that

67
00:03:03,930 --> 00:03:10,050
for you again so I should see why I cut

68
00:03:07,919 --> 00:03:14,489
I cut the corner there and and made

69
00:03:10,050 --> 00:03:20,010
myself do something horrifically let me

70
00:03:14,490 --> 00:03:21,959
draw it out full I deserve it now okay

71
00:03:20,009 --> 00:03:23,639
so in the case where we're shining

72
00:03:21,959 --> 00:03:25,890
directly on it right obviously it's

73
00:03:23,639 --> 00:03:27,269
gonna be the same size so that's gonna

74
00:03:25,889 --> 00:03:28,679
be a 1 so that's not really that

75
00:03:27,270 --> 00:03:30,390
interesting so the question is as it

76
00:03:28,680 --> 00:03:32,370
comes down here how much light is

77
00:03:30,389 --> 00:03:35,069
actually coming in right how much of the

78
00:03:32,370 --> 00:03:38,009
cosine is actually getting shown on here

79
00:03:35,069 --> 00:03:40,590
right and what we want to do is take a

80
00:03:38,009 --> 00:03:45,599
look at that angle which is this angle

81
00:03:40,590 --> 00:03:48,629
right here it's the angle off of off of

82
00:03:45,599 --> 00:03:51,509
this right and what we're looking for in

83
00:03:48,629 --> 00:03:53,370
this case is we're looking for figuring

84
00:03:51,509 --> 00:03:54,810
out what that infinitesimal shaft of

85
00:03:53,370 --> 00:03:56,640
light is that's kind of coming up like

86
00:03:54,810 --> 00:03:58,800
this right we're looking at we're

87
00:03:56,639 --> 00:04:02,238
looking at a measure of that proportion

88
00:03:58,800 --> 00:04:03,989
that's changing as it as it comes down

89
00:04:02,239 --> 00:04:06,659
and we want to figure out what that is

90
00:04:03,989 --> 00:04:09,629
now in this particular case right we

91
00:04:06,659 --> 00:04:11,219
don't have any not like the hypotenuse

92
00:04:09,629 --> 00:04:13,049
is sort of out of the equation because

93
00:04:11,219 --> 00:04:15,209
we're just talking about a hypotenuse of

94
00:04:13,050 --> 00:04:17,939
1 here we're just talking about well

95
00:04:15,209 --> 00:04:19,680
whatever the incoming value is so we

96
00:04:17,939 --> 00:04:21,600
just want to know what the ratio is of

97
00:04:19,680 --> 00:04:23,069
whatever the incoming light is to how

98
00:04:21,600 --> 00:04:26,970
much we think would fall on the surface

99
00:04:23,069 --> 00:04:27,629
right and so what we want to know is

100
00:04:26,970 --> 00:04:30,390
from

101
00:04:27,629 --> 00:04:34,110
triangle which we have just the angle of

102
00:04:30,389 --> 00:04:35,129
the light versus the normal right and I

103
00:04:34,110 --> 00:04:36,810
saw they should draw that the other way

104
00:04:35,129 --> 00:04:38,969
around because usually we we would like

105
00:04:36,810 --> 00:04:40,980
to although it doesn't matter which one

106
00:04:38,970 --> 00:04:42,990
we do because we can always change it we

107
00:04:40,980 --> 00:04:44,460
would like to be able to just do one dot

108
00:04:42,990 --> 00:04:46,620
product and get it so the angle we'd

109
00:04:44,459 --> 00:04:51,120
actually like to measure is this right

110
00:04:46,620 --> 00:04:53,220
so this angle here is actually sort of

111
00:04:51,120 --> 00:04:56,370
the inverse of this right it's the it's

112
00:04:53,220 --> 00:05:00,420
the 90 degrees minus theta right or PI

113
00:04:56,370 --> 00:05:02,790
over 2 minus theta right because we know

114
00:05:00,420 --> 00:05:06,330
that this angle is PI over 2 it's 90

115
00:05:02,790 --> 00:05:08,010
degrees and so we know that we could

116
00:05:06,329 --> 00:05:10,979
look at either one of these whichever

117
00:05:08,009 --> 00:05:12,959
one we want to write but this is the one

118
00:05:10,980 --> 00:05:14,910
that we want to do because if we are

119
00:05:12,959 --> 00:05:16,560
going to do dot product based lighting

120
00:05:14,910 --> 00:05:18,510
where we have the normal pointing out

121
00:05:16,560 --> 00:05:21,389
this way and the light pointing out this

122
00:05:18,509 --> 00:05:23,189
way we know that the normal transpose

123
00:05:21,389 --> 00:05:25,259
the light is the operation that's

124
00:05:23,189 --> 00:05:26,939
fastest for us to do so we'd like it to

125
00:05:25,259 --> 00:05:32,310
be proportional to this angle if

126
00:05:26,939 --> 00:05:34,139
possible right okay so obviously just

127
00:05:32,310 --> 00:05:36,030
intuitively speaking this makes some

128
00:05:34,139 --> 00:05:37,589
sense then because if these are pointed

129
00:05:36,029 --> 00:05:40,019
directly at each other it's going to be

130
00:05:37,589 --> 00:05:42,239
one right and in what its going to be

131
00:05:40,019 --> 00:05:44,549
measuring actually in that particular

132
00:05:42,240 --> 00:05:47,519
case is it's going to be measuring this

133
00:05:44,550 --> 00:05:51,509
length right which is completely one as

134
00:05:47,519 --> 00:05:54,449
we come down all the way to here we know

135
00:05:51,509 --> 00:05:56,430
that this cosine because that'll make

136
00:05:54,449 --> 00:05:59,339
this be PI over two when it gets to here

137
00:05:56,430 --> 00:06:01,560
will be zero again exactly what we want

138
00:05:59,339 --> 00:06:04,259
we want it to go from one to zero so

139
00:06:01,560 --> 00:06:06,860
it's doing the right sort of directional

140
00:06:04,259 --> 00:06:10,289
fall-off the question is is it computing

141
00:06:06,860 --> 00:06:13,080
it is the the cosine the correct

142
00:06:10,290 --> 00:06:14,939
fall-off between one and zero for the

143
00:06:13,079 --> 00:06:17,699
light given that we're trying to do is

144
00:06:14,939 --> 00:06:20,519
measure how a shaft would change between

145
00:06:17,699 --> 00:06:23,490
here and here if the the proportion was

146
00:06:20,519 --> 00:06:25,169
the same in the bottom so assuming that

147
00:06:23,490 --> 00:06:30,389
we're talking about something like this

148
00:06:25,170 --> 00:06:32,759
and we want to say okay if I were to

149
00:06:30,389 --> 00:06:34,500
construct one that looks like this right

150
00:06:32,759 --> 00:06:37,259
then I want to get an answer

151
00:06:34,500 --> 00:06:38,910
proportional to that and if I was to

152
00:06:37,259 --> 00:06:40,019
construct one that looks like this so

153
00:06:38,910 --> 00:06:42,150
you know

154
00:06:40,019 --> 00:06:44,788
as the angle comes down here right and

155
00:06:42,149 --> 00:06:46,679
I'm projecting ASEC essentially what

156
00:06:44,788 --> 00:06:49,439
this is I'm projecting it over here

157
00:06:46,680 --> 00:06:51,000
right like that because when I dot

158
00:06:49,439 --> 00:06:52,589
parked these two things together that's

159
00:06:51,000 --> 00:06:54,300
what I'm gonna get right I'm going to

160
00:06:52,589 --> 00:06:55,109
get the projection of this and I should

161
00:06:54,300 --> 00:07:02,310
have drawn that a little bit differently

162
00:06:55,110 --> 00:07:04,199
as it comes down these are both the unit

163
00:07:02,310 --> 00:07:06,930
length vectors right so as they come

164
00:07:04,199 --> 00:07:08,669
down they're gonna form circle I'm gonna

165
00:07:06,930 --> 00:07:12,120
project this over and I'm gonna get

166
00:07:08,668 --> 00:07:15,049
essentially that value right so I'm

167
00:07:12,120 --> 00:07:19,800
going to be end up measuring that

168
00:07:15,050 --> 00:07:21,538
thickness there and so in a sense I mean

169
00:07:19,800 --> 00:07:24,689
there's not a lot we can really say

170
00:07:21,538 --> 00:07:26,969
about that other than if you looked at

171
00:07:24,689 --> 00:07:30,240
how this was structured since we know

172
00:07:26,970 --> 00:07:33,020
this was unit to begin with right we're

173
00:07:30,240 --> 00:07:35,400
talking about some fixed unit here right

174
00:07:33,019 --> 00:07:37,348
and we're talking about you know

175
00:07:35,399 --> 00:07:39,448
everything is basically proportional to

176
00:07:37,348 --> 00:07:42,269
one here we're basically talking about a

177
00:07:39,449 --> 00:07:45,509
square in a sense and so measuring this

178
00:07:42,269 --> 00:07:48,448
fall off as we go down is going to be

179
00:07:45,509 --> 00:07:50,490
roughly the same I know that's not

180
00:07:48,449 --> 00:07:54,538
particularly convincing but if we

181
00:07:50,490 --> 00:07:59,759
imagine for example these looking like

182
00:07:54,538 --> 00:08:02,788
this right as they go like that if that

183
00:07:59,759 --> 00:08:05,550
makes sense then if we're trying to

184
00:08:02,788 --> 00:08:08,519
figure out what proportion of the light

185
00:08:05,550 --> 00:08:10,590
they're actually shining up we could do

186
00:08:08,519 --> 00:08:12,329
the more complicated version of this

187
00:08:10,589 --> 00:08:14,989
constancy if there's a good way I can

188
00:08:12,329 --> 00:08:14,990
illustrate this

189
00:08:21,379 --> 00:08:30,120
yeah if we wanted to construct this

190
00:08:25,500 --> 00:08:33,179
actual triangle here right what you can

191
00:08:30,120 --> 00:08:36,330
see is that there's a right angle that

192
00:08:33,179 --> 00:08:39,418
would be formed to find this length

193
00:08:36,330 --> 00:08:41,970
itself right and so we know that the

194
00:08:39,418 --> 00:08:45,210
angle in question is actually this angle

195
00:08:41,970 --> 00:08:45,690
because this shaft is bending down this

196
00:08:45,210 --> 00:08:47,910
way

197
00:08:45,690 --> 00:08:49,110
so the right angle let me draw that a

198
00:08:47,909 --> 00:08:53,309
little bit bigger down here so you can

199
00:08:49,110 --> 00:08:56,669
actually see it here's the original

200
00:08:53,309 --> 00:08:58,649
shaft of light coming down and we're

201
00:08:56,669 --> 00:09:03,750
basically saying it's gonna Bend outward

202
00:08:58,649 --> 00:09:08,579
like that okay and what we want to find

203
00:09:03,750 --> 00:09:11,460
is we want to find how this amount

204
00:09:08,580 --> 00:09:13,410
changed right how the width of that

205
00:09:11,460 --> 00:09:15,600
light that's coming in changed and

206
00:09:13,409 --> 00:09:19,259
there's the you know there's the 90

207
00:09:15,600 --> 00:09:21,470
degree angle so if this angle here is

208
00:09:19,259 --> 00:09:24,029
the theta that we're measuring right

209
00:09:21,470 --> 00:09:28,170
then you know you can look at which

210
00:09:24,029 --> 00:09:32,399
angles are inside here and say well this

211
00:09:28,169 --> 00:09:34,889
angle is PI over 2 right minus theta

212
00:09:32,399 --> 00:09:37,529
because we know that that angle is Theta

213
00:09:34,889 --> 00:09:39,960
so the angle that would complete the

214
00:09:37,529 --> 00:09:43,620
rest of the 90 returned is PI over 2

215
00:09:39,960 --> 00:09:47,490
minus theta right and furthermore we

216
00:09:43,620 --> 00:09:49,529
know that this angle has to these all

217
00:09:47,490 --> 00:09:51,509
have to sum up to the total sum for the

218
00:09:49,529 --> 00:09:54,809
interior of the circle of for the

219
00:09:51,509 --> 00:09:58,679
triangle right so we know that we have

220
00:09:54,809 --> 00:10:00,149
this angle which is PI over 2 right that

221
00:09:58,679 --> 00:10:02,639
we know that angle sine of degrees

222
00:10:00,149 --> 00:10:05,309
because we dropped it you know it's

223
00:10:02,639 --> 00:10:07,350
perpendicular on purpose we know that

224
00:10:05,309 --> 00:10:15,479
this angle is PI over 2 minus theta

225
00:10:07,350 --> 00:10:17,790
right makes sense and we know that the

226
00:10:15,480 --> 00:10:20,009
entire interior of the circle would have

227
00:10:17,789 --> 00:10:21,990
to add up that's good circle the entire

228
00:10:20,009 --> 00:10:23,819
interior of the triangle would have the

229
00:10:21,990 --> 00:10:27,690
the internals the triangle would have to

230
00:10:23,820 --> 00:10:29,490
add up to PI so if we actually want to

231
00:10:27,690 --> 00:10:31,950
know what this angle is well this angle

232
00:10:29,490 --> 00:10:33,450
also will end up being theta right

233
00:10:31,950 --> 00:10:35,580
because if you take a look

234
00:10:33,450 --> 00:10:39,450
what this simplifies down to we end up

235
00:10:35,580 --> 00:10:45,870
with 2 pi over 2 minus theta right or

236
00:10:39,450 --> 00:10:47,970
theta minus I'm sorry

237
00:10:45,870 --> 00:10:49,500
pi minus theta right which is on this

238
00:10:47,970 --> 00:10:55,350
side of thing and we know that we need

239
00:10:49,500 --> 00:11:01,440
this thing to add up to PI right I got

240
00:10:55,350 --> 00:11:03,659
actually put my yeah did I say that

241
00:11:01,440 --> 00:11:05,370
correctly iPod in second

242
00:11:03,659 --> 00:11:14,909
wow I'm having a rough morning I don't

243
00:11:05,370 --> 00:11:16,169
know why anyway so yeah no I think I

244
00:11:14,909 --> 00:11:18,480
said that correctly anyway doesn't

245
00:11:16,169 --> 00:11:20,099
matter so anyway when we actually look

246
00:11:18,480 --> 00:11:22,320
at what what's going to happen here the

247
00:11:20,100 --> 00:11:25,080
point of this is all just to figure out

248
00:11:22,320 --> 00:11:26,580
that ok so if we actually wanted to look

249
00:11:25,080 --> 00:11:30,090
at what happens when we take cosine

250
00:11:26,580 --> 00:11:32,129
theta right we get we do get this by

251
00:11:30,090 --> 00:11:35,820
taking cosine theta it's just in a very

252
00:11:32,129 --> 00:11:38,279
roundabout sort of old trigonometric

253
00:11:35,820 --> 00:11:41,970
Annamma tree sort of calculation sort of

254
00:11:38,279 --> 00:11:44,039
way right we it's it's weird because the

255
00:11:41,970 --> 00:11:46,740
angle that we're measuring is actually

256
00:11:44,039 --> 00:11:49,740
the one up here which appears to not

257
00:11:46,740 --> 00:11:52,289
really be super related because your it

258
00:11:49,740 --> 00:11:54,779
looks like your cosine theta term is

259
00:11:52,289 --> 00:11:57,209
actually going to take that right

260
00:11:54,779 --> 00:11:59,309
because when you construct the triangle

261
00:11:57,210 --> 00:12:00,480
you're looking at this triangle up here

262
00:11:59,309 --> 00:12:02,219
because this is where the theta is that

263
00:12:00,480 --> 00:12:06,570
we're measuring because this is the

264
00:12:02,220 --> 00:12:08,310
normal and this is the light and so it's

265
00:12:06,570 --> 00:12:11,879
a bit weird but the reason that we're

266
00:12:08,309 --> 00:12:13,289
measuring that is just because I if you

267
00:12:11,879 --> 00:12:16,110
actually go ahead and propagate the

268
00:12:13,289 --> 00:12:18,329
angles through it ends up being the

269
00:12:16,110 --> 00:12:21,509
correct angle to use the cosine for it

270
00:12:18,330 --> 00:12:26,550
to get this length anyway even though

271
00:12:21,509 --> 00:12:28,740
that may seem kind of strange right so

272
00:12:26,549 --> 00:12:30,719
yeah I don't know why you went on that

273
00:12:28,740 --> 00:12:32,519
tangent probably because I'm was so

274
00:12:30,720 --> 00:12:35,129
sleepy this morning I made a sloppy

275
00:12:32,519 --> 00:12:39,000
mistake here and then felt like I needed

276
00:12:35,129 --> 00:12:40,529
the punishment all right so forget

277
00:12:39,000 --> 00:12:43,980
everything I just said that was all just

278
00:12:40,529 --> 00:12:45,839
for me to reinforce the fact that we

279
00:12:43,980 --> 00:12:46,830
have to multiply incoming light by

280
00:12:45,840 --> 00:12:48,990
cosine theta

281
00:12:46,830 --> 00:12:51,509
in order to know how much of that light

282
00:12:48,990 --> 00:12:54,959
we can actually absorb or bounce as a

283
00:12:51,509 --> 00:12:57,389
surface right so whenever we take one of

284
00:12:54,958 --> 00:12:59,579
these in incoming light directions

285
00:12:57,389 --> 00:13:02,879
whatever the light value that comes in

286
00:12:59,580 --> 00:13:06,269
from this thing has to be proportional

287
00:13:02,879 --> 00:13:08,519
to n dot L in terms of how much light we

288
00:13:06,269 --> 00:13:10,110
actually receive now remember this has

289
00:13:08,519 --> 00:13:12,299
nothing to do with how much light we

290
00:13:10,110 --> 00:13:14,070
actually want to reflect afterwards

291
00:13:12,299 --> 00:13:16,199
because every surface has its own

292
00:13:14,070 --> 00:13:18,149
reflectance function and this is not the

293
00:13:16,200 --> 00:13:20,430
reflectance function this is just the

294
00:13:18,149 --> 00:13:21,480
light reception function this is just

295
00:13:20,429 --> 00:13:24,449
the thing that says how much of the

296
00:13:21,480 --> 00:13:27,420
light we can get out of what's coming

297
00:13:24,450 --> 00:13:29,700
towards us from that direction how much

298
00:13:27,419 --> 00:13:31,528
we reflect is a separate function that's

299
00:13:29,700 --> 00:13:35,759
about the properties of the material

300
00:13:31,528 --> 00:13:38,278
right totally separate so this is just a

301
00:13:35,759 --> 00:13:41,028
term that's about the fundamental nature

302
00:13:38,278 --> 00:13:44,519
of of how light coming in at an angle

303
00:13:41,028 --> 00:13:46,649
cannot come in at as you cannot receive

304
00:13:44,519 --> 00:13:48,450
as much of it from a particular angle as

305
00:13:46,649 --> 00:13:51,659
another angle based on how wide that

306
00:13:48,450 --> 00:13:54,028
aperture is so since we knew this is the

307
00:13:51,659 --> 00:13:55,528
fundamental law right that no matter

308
00:13:54,028 --> 00:13:58,230
what surface we're talking about we have

309
00:13:55,528 --> 00:13:59,669
to obey that means that as we take our

310
00:13:58,230 --> 00:14:01,528
integral which you know would be a

311
00:13:59,669 --> 00:14:03,120
double integral over the hemisphere if

312
00:14:01,528 --> 00:14:04,500
we were going to literally take all of

313
00:14:03,120 --> 00:14:08,250
the incoming light of the hemisphere

314
00:14:04,500 --> 00:14:09,000
right we'd have two angles who knows

315
00:14:08,250 --> 00:14:11,458
what they are

316
00:14:09,000 --> 00:14:13,259
I probably shouldn't use those two we'll

317
00:14:11,458 --> 00:14:15,750
just use a and B because theta was the

318
00:14:13,259 --> 00:14:19,169
angle we were using for the for the you

319
00:14:15,750 --> 00:14:22,278
know this n dot L here so we have two

320
00:14:19,169 --> 00:14:25,799
angles right let's say the you know the

321
00:14:22,278 --> 00:14:27,088
orbit around and the azimuth right so

322
00:14:25,799 --> 00:14:28,769
you know maybe something that's like

323
00:14:27,089 --> 00:14:31,050
talking about how far

324
00:14:28,769 --> 00:14:32,610
oops around we go and then something

325
00:14:31,049 --> 00:14:35,458
that talks about how far up we go to

326
00:14:32,610 --> 00:14:37,829
like make our you know to make our

327
00:14:35,458 --> 00:14:40,739
vector so if we were to take the

328
00:14:37,828 --> 00:14:43,319
integral over the entire Hemisphere we

329
00:14:40,740 --> 00:14:47,089
would need to know some measure of the

330
00:14:43,320 --> 00:14:49,649
incoming light so whatever that is right

331
00:14:47,089 --> 00:14:51,959
that's some magic function that we don't

332
00:14:49,649 --> 00:14:53,850
really know that's proportional to a and

333
00:14:51,958 --> 00:14:55,469
B that we're trying to sample but we

334
00:14:53,850 --> 00:14:57,240
always know that we would have to

335
00:14:55,470 --> 00:14:59,430
multiply it by n transpose L on the

336
00:14:57,240 --> 00:15:00,629
outside which is that cosine theta term

337
00:14:59,429 --> 00:15:03,149
right

338
00:15:00,629 --> 00:15:05,458
so every sample we take or every

339
00:15:03,149 --> 00:15:08,730
integral we do would have to have that

340
00:15:05,458 --> 00:15:10,229
in there and again the reason for that

341
00:15:08,730 --> 00:15:14,339
is just because we're trying to mimic

342
00:15:10,230 --> 00:15:16,159
that winnowing of the of the aperture of

343
00:15:14,339 --> 00:15:18,930
life that can come in at that angle so

344
00:15:16,159 --> 00:15:21,059
once we know that this is what this

345
00:15:18,929 --> 00:15:23,068
always looks like it always looks like

346
00:15:21,059 --> 00:15:24,539
some kind of a summation right if we

347
00:15:23,068 --> 00:15:26,939
were to do this discrete it's just some

348
00:15:24,539 --> 00:15:28,169
kind of a summation and you could think

349
00:15:26,940 --> 00:15:30,509
of this summation just virtually a

350
00:15:28,169 --> 00:15:32,370
summation over the hemisphere right even

351
00:15:30,509 --> 00:15:33,930
if we don't write it math wise if it's

352
00:15:32,370 --> 00:15:36,690
just like some summation over the

353
00:15:33,929 --> 00:15:39,088
hemisphere of n transpose L times some

354
00:15:36,690 --> 00:15:42,630
function on the hemisphere that we're

355
00:15:39,089 --> 00:15:46,410
sampling as much as we can write this

356
00:15:42,629 --> 00:15:51,480
term is always there so what I was

357
00:15:46,409 --> 00:15:56,338
trying to say last time was if you look

358
00:15:51,480 --> 00:15:59,159
at how this works it's taking a sampling

359
00:15:56,339 --> 00:16:03,720
of things on the hemisphere and then

360
00:15:59,159 --> 00:16:06,659
weighting them by cosine theta right but

361
00:16:03,720 --> 00:16:07,829
since this sampling is not sufficient

362
00:16:06,659 --> 00:16:10,620
right

363
00:16:07,828 --> 00:16:13,979
meaning we know that we're taking not

364
00:16:10,620 --> 00:16:15,929
all of the samples we're taking less

365
00:16:13,980 --> 00:16:18,509
samples than the total Hemisphere we're

366
00:16:15,929 --> 00:16:20,909
not doing a real integral right we're

367
00:16:18,509 --> 00:16:26,399
not accounting for all the light since

368
00:16:20,909 --> 00:16:29,969
we know this is a sparse sample what we

369
00:16:26,399 --> 00:16:33,539
can do instead of taking a uniform

370
00:16:29,970 --> 00:16:36,060
sparse sample right one that samples the

371
00:16:33,539 --> 00:16:40,409
hemisphere uniformly so one that kind of

372
00:16:36,059 --> 00:16:41,818
goes like okay let's just sample around

373
00:16:40,409 --> 00:16:44,219
this Hemisphere and make sure that we

374
00:16:41,818 --> 00:16:46,318
sample very true so there's no bias in

375
00:16:44,220 --> 00:16:49,410
the sampling if we are going to do a

376
00:16:46,318 --> 00:16:51,599
uniform sampling of the hemisphere then

377
00:16:49,409 --> 00:16:53,159
we have to multiply by n transpose L

378
00:16:51,600 --> 00:16:57,269
because that's what the equation

379
00:16:53,159 --> 00:17:00,360
mandates but if we were to bias this

380
00:16:57,269 --> 00:17:03,688
sampling then that would not necessarily

381
00:17:00,360 --> 00:17:07,409
be true anymore because whatever the

382
00:17:03,688 --> 00:17:10,949
bias is will affect how we are summing

383
00:17:07,409 --> 00:17:12,329
the terms now let me give you an example

384
00:17:10,949 --> 00:17:13,709
of this that doesn't have to do with

385
00:17:12,328 --> 00:17:14,700
hemispheres and lighting because I think

386
00:17:13,709 --> 00:17:17,970
that's maybe

387
00:17:14,700 --> 00:17:21,509
where people are getting hung up let's

388
00:17:17,970 --> 00:17:24,750
suppose that we have a function that we

389
00:17:21,509 --> 00:17:28,529
know exactly what it is let's suppose it

390
00:17:24,750 --> 00:17:32,400
just looks like that right that's our

391
00:17:28,529 --> 00:17:34,670
function here zero here's one and it

392
00:17:32,400 --> 00:17:37,530
goes from zero to one as well right so

393
00:17:34,670 --> 00:17:40,050
if we were to say here's the x-axis

394
00:17:37,529 --> 00:17:42,450
twice if we were to say f of X you know

395
00:17:40,049 --> 00:17:43,079
f of X just equals x right so as it

396
00:17:42,450 --> 00:17:47,519
comes up

397
00:17:43,079 --> 00:17:50,699
we're just sampling it like so right now

398
00:17:47,519 --> 00:17:54,029
if I were to say that we had some reason

399
00:17:50,700 --> 00:17:56,220
why our sampling wanted to have an

400
00:17:54,029 --> 00:17:58,589
equation in it right so you can see this

401
00:17:56,220 --> 00:18:02,250
like n transpose L term was happening

402
00:17:58,589 --> 00:18:03,689
right so maybe I want to say that we're

403
00:18:02,250 --> 00:18:05,309
want to sample this function but our

404
00:18:03,690 --> 00:18:07,980
sampling much like the hemisphere

405
00:18:05,309 --> 00:18:10,200
sampling has some inbound law on it

406
00:18:07,980 --> 00:18:14,430
that's going to weight the samples right

407
00:18:10,200 --> 00:18:17,580
and let's say the weighting term is X so

408
00:18:14,430 --> 00:18:19,560
when we take our integral or our sample

409
00:18:17,579 --> 00:18:22,409
summation right so our summation here

410
00:18:19,559 --> 00:18:24,839
and we want to sample over all the X's

411
00:18:22,410 --> 00:18:27,330
what we're actually gonna do is say X f

412
00:18:24,839 --> 00:18:31,679
of X right is what we actually want a

413
00:18:27,329 --> 00:18:34,799
sample so then what will happen is if we

414
00:18:31,680 --> 00:18:37,710
picked a uniform sampling of X's right

415
00:18:34,799 --> 00:18:41,669
if we said oh here here here here here

416
00:18:37,710 --> 00:18:44,850
and here right so we got like 0 0.1 0.2

417
00:18:41,670 --> 00:18:48,330
0.3 0.4 right we got like 10 samples

418
00:18:44,849 --> 00:18:50,909
uniformly spaced right and we sum those

419
00:18:48,329 --> 00:18:53,849
up what we would get is a bunch of sums

420
00:18:50,910 --> 00:18:55,860
of x squared right which is what we

421
00:18:53,849 --> 00:18:58,049
which is what we're doing here

422
00:18:55,859 --> 00:19:00,419
and what we expect so we would expect to

423
00:18:58,049 --> 00:19:04,470
see essentially the integral from 0 to 1

424
00:19:00,420 --> 00:19:07,710
right of X f of X which actually equals

425
00:19:04,470 --> 00:19:09,569
the integral from 0 to 1 of just x

426
00:19:07,710 --> 00:19:11,490
squared because we know what this is

427
00:19:09,569 --> 00:19:16,619
it's just X right we can substitute it

428
00:19:11,490 --> 00:19:19,859
in okay so we can do that and we can

429
00:19:16,619 --> 00:19:21,329
produce we know what this is right we

430
00:19:19,859 --> 00:19:22,829
know what that integral would actually

431
00:19:21,329 --> 00:19:25,049
be and we're so we're trying to produce

432
00:19:22,829 --> 00:19:28,829
that integral

433
00:19:25,049 --> 00:19:32,069
integral of x-squared there right but if

434
00:19:28,829 --> 00:19:34,829
instead we wanted to just optimize out

435
00:19:32,069 --> 00:19:39,269
this term so we don't want to multiply

436
00:19:34,829 --> 00:19:43,769
by X anymore right then what we can do

437
00:19:39,269 --> 00:19:46,440
is bias our sampling so that the bias

438
00:19:43,769 --> 00:19:48,660
lines up with how this term would have

439
00:19:46,440 --> 00:19:51,330
multiplied out so think about it the X

440
00:19:48,660 --> 00:19:54,360
term is gonna mean that anything down

441
00:19:51,329 --> 00:19:56,549
here is not gonna get weighted hardly at

442
00:19:54,359 --> 00:19:59,250
all when we sample because it's going to

443
00:19:56,549 --> 00:20:02,789
be zero or close to zero so if we just

444
00:19:59,250 --> 00:20:05,220
don't take any samples out here and take

445
00:20:02,789 --> 00:20:10,289
a lot more samples up here where it

446
00:20:05,220 --> 00:20:12,839
would be close to one right we're going

447
00:20:10,289 --> 00:20:15,509
to end up with the same effect because

448
00:20:12,839 --> 00:20:17,429
we're going to overweight the values

449
00:20:15,509 --> 00:20:19,200
that are on the high side and

450
00:20:17,430 --> 00:20:23,880
underweight the ones that are on the low

451
00:20:19,200 --> 00:20:29,700
side thereby mimicking what X does right

452
00:20:23,880 --> 00:20:32,760
we're mimicking what X does assuming we

453
00:20:29,700 --> 00:20:34,740
are mimicking what X does so we don't

454
00:20:32,759 --> 00:20:38,460
have to multiply by it because as we

455
00:20:34,740 --> 00:20:41,250
move these samples around we can cut we

456
00:20:38,460 --> 00:20:43,140
can make them line up in places where

457
00:20:41,250 --> 00:20:46,579
those samples will mimic the behavior of

458
00:20:43,140 --> 00:20:52,830
X just by virtue of their density right

459
00:20:46,579 --> 00:20:58,289
so if we make our sample density equal

460
00:20:52,829 --> 00:20:59,909
to our weighting coefficient right then

461
00:20:58,289 --> 00:21:01,649
we can just remove the weighting

462
00:20:59,910 --> 00:21:04,500
coefficient that's all it's saying if

463
00:21:01,650 --> 00:21:06,600
you have a constant on the outside of

464
00:21:04,500 --> 00:21:09,539
your integral or your sampling or your

465
00:21:06,599 --> 00:21:11,669
summation or whatever if you instead of

466
00:21:09,539 --> 00:21:13,889
actually doing the multiply just move

467
00:21:11,670 --> 00:21:17,550
the samples to be the same distribution

468
00:21:13,890 --> 00:21:19,710
as that weighting would have done then

469
00:21:17,549 --> 00:21:22,919
you're automatically going to have that

470
00:21:19,710 --> 00:21:24,420
same effect right another way to look at

471
00:21:22,920 --> 00:21:29,220
this is let's say you're taking an

472
00:21:24,420 --> 00:21:31,830
average how do you take an average well

473
00:21:29,220 --> 00:21:34,650
you take a bunch of things and you

474
00:21:31,829 --> 00:21:38,308
divide by the number that you got right

475
00:21:34,650 --> 00:21:41,580
so I take you know 3 plus 6 plus 9

476
00:21:38,308 --> 00:21:42,118
right and I divide by three and what do

477
00:21:41,579 --> 00:21:45,449
I get

478
00:21:42,118 --> 00:21:53,848
right I get 18 divided by three right or

479
00:21:45,450 --> 00:21:55,469
six right that's my average right and so

480
00:21:53,848 --> 00:21:57,509
if you think about what this kind of

481
00:21:55,469 --> 00:21:59,278
thing does if you look at what we're

482
00:21:57,509 --> 00:22:01,278
doing here we're essentially taking a

483
00:21:59,278 --> 00:22:04,888
weight which is one-third and

484
00:22:01,278 --> 00:22:07,979
multiplying it by each of the terms that

485
00:22:04,888 --> 00:22:10,048
we're adding together right so this

486
00:22:07,979 --> 00:22:12,028
becomes 1 this becomes 2 and this

487
00:22:10,048 --> 00:22:18,569
becomes 3 you add those together you get

488
00:22:12,028 --> 00:22:21,088
6 right well if I wanted to change my

489
00:22:18,569 --> 00:22:24,329
average to some kind of a weighted

490
00:22:21,088 --> 00:22:26,128
average right so you know this was

491
00:22:24,329 --> 00:22:27,569
clearly you know this is a continuous

492
00:22:26,128 --> 00:22:30,838
number line that we're doing here right

493
00:22:27,569 --> 00:22:39,408
you know maybe I've got 1 plus 2 Plus 3

494
00:22:30,838 --> 00:22:39,408
plus I need more numbers 1 plus 2 plus 3

495
00:22:45,250 --> 00:22:49,179
so if I'm taking some kind of an average

496
00:22:47,079 --> 00:22:51,599
like this and I have a weight that I'm

497
00:22:49,179 --> 00:22:54,880
going to multiply by each of them right

498
00:22:51,599 --> 00:22:56,829
if I start with a uniform set of samples

499
00:22:54,880 --> 00:22:59,169
right in this case and maybe this is

500
00:22:56,829 --> 00:23:04,149
like just the numbers from some one to

501
00:22:59,169 --> 00:23:05,679
ten right or something like that so if I

502
00:23:04,150 --> 00:23:07,960
have a uniform set of samples like this

503
00:23:05,679 --> 00:23:10,538
then I would expect and I multiply them

504
00:23:07,960 --> 00:23:12,788
by uniform weight so my weight is going

505
00:23:10,538 --> 00:23:16,150
to be well I can't okay so let me get

506
00:23:12,788 --> 00:23:17,500
rid of the 10 there right all right

507
00:23:16,150 --> 00:23:23,309
maybe it's a better thing to do to get

508
00:23:17,500 --> 00:23:23,308
rid of the zero we've the tenon

509
00:23:30,490 --> 00:23:34,149
and so if I want to go here and say all

510
00:23:32,558 --> 00:23:36,460
right let's take the average of these

511
00:23:34,148 --> 00:23:39,099
numbers so I'm gonna need one-tenth as

512
00:23:36,460 --> 00:23:40,750
my weighting coefficient right then I'm

513
00:23:39,099 --> 00:23:42,308
gonna get you know one tenth of one and

514
00:23:40,750 --> 00:23:45,609
one tenth of - one tenth of three went

515
00:23:42,308 --> 00:23:57,548
to the four etc etc right and so when I

516
00:23:45,609 --> 00:24:00,339
actually add these up right and then I

517
00:23:57,548 --> 00:24:02,230
divide by my weighting coefficient then

518
00:24:00,339 --> 00:24:04,329
I get whatever my average point would

519
00:24:02,230 --> 00:24:05,409
have been right and I need the zero in

520
00:24:04,329 --> 00:24:12,220
there to actually balance this out but I

521
00:24:05,409 --> 00:24:13,840
ran out of room for it right if that

522
00:24:12,220 --> 00:24:16,778
makes sense

523
00:24:13,839 --> 00:24:19,599
so you know if I had ad in there then we

524
00:24:16,778 --> 00:24:21,990
would have had the eleven numbers and we

525
00:24:19,599 --> 00:24:25,298
could get the five out of it right

526
00:24:21,990 --> 00:24:27,429
anyway so if I take the numbers between

527
00:24:25,298 --> 00:24:30,009
zero and ten inclusive and I divide by

528
00:24:27,429 --> 00:24:32,320
it evenly so each one of these got one

529
00:24:30,009 --> 00:24:34,089
eleventh and pretend my zeros back in

530
00:24:32,319 --> 00:24:37,869
there just because I want that even five

531
00:24:34,089 --> 00:24:39,699
for fun then you can kind of see okay

532
00:24:37,869 --> 00:24:42,489
all I'm doing here is I'm doing that

533
00:24:39,700 --> 00:24:46,269
same sum right I'm doing a sum of

534
00:24:42,490 --> 00:24:50,440
samples of X right as X goes from zero

535
00:24:46,269 --> 00:24:52,089
to ten in integer steps right and for

536
00:24:50,440 --> 00:24:55,990
each of those I'm doing a weight

537
00:24:52,089 --> 00:25:00,069
whatever the weight is times my my f of

538
00:24:55,990 --> 00:25:02,829
X which is just X a my weight in this

539
00:25:00,069 --> 00:25:07,629
case is just one so I'm just doing that

540
00:25:02,829 --> 00:25:09,308
average right well if now I wanted to

541
00:25:07,630 --> 00:25:11,049
change this weighting to what we were

542
00:25:09,308 --> 00:25:14,200
saying before right so my weighting is

543
00:25:11,048 --> 00:25:16,148
going to be X so I have an uneven

544
00:25:14,200 --> 00:25:18,850
weighting of how I want these terms to

545
00:25:16,148 --> 00:25:21,189
go then when we do it I've got it's

546
00:25:18,849 --> 00:25:23,259
going to be a worse equation here but

547
00:25:21,190 --> 00:25:25,570
we're gonna get the same sort of thing

548
00:25:23,259 --> 00:25:29,919
right I'm gonna get 1 times 1/2 times 2

549
00:25:25,569 --> 00:25:36,769
3 times 3 4 times 4 5 times 5 6 times 6

550
00:25:29,919 --> 00:25:42,670
7 times 7 8 times 8 9 times 9

551
00:25:36,769 --> 00:25:47,089
10 times 10 right so there's my waiting

552
00:25:42,670 --> 00:25:50,929
and that's my answer for that waiting

553
00:25:47,089 --> 00:25:52,849
right if that makes sense and so what

554
00:25:50,929 --> 00:25:55,370
you can see there too is the waiting

555
00:25:52,849 --> 00:25:57,409
obviously gets a lot it's it's much more

556
00:25:55,369 --> 00:25:59,689
affected by the higher numbers than the

557
00:25:57,410 --> 00:26:02,690
lower numbers because the waiting is

558
00:25:59,690 --> 00:26:04,400
higher on the higher numbers right so

559
00:26:02,690 --> 00:26:06,950
you know this is going to be multiplied

560
00:26:04,400 --> 00:26:09,080
by 10 and this one's long any multiplied

561
00:26:06,950 --> 00:26:10,549
by one so even regardless what these

562
00:26:09,079 --> 00:26:14,960
samples are this is going to have a lot

563
00:26:10,549 --> 00:26:16,700
more weight up there so if I wanted to

564
00:26:14,960 --> 00:26:18,950
now what I could do is skew my

565
00:26:16,700 --> 00:26:22,220
distribution so that I instead of

566
00:26:18,950 --> 00:26:24,230
multiplying by X I just concentrate all

567
00:26:22,220 --> 00:26:25,850
of my samples up here I could do that

568
00:26:24,230 --> 00:26:27,650
now one of the things that's a little

569
00:26:25,849 --> 00:26:29,119
bit confusing is we kind of have to deal

570
00:26:27,650 --> 00:26:34,040
with distributions that are going to be

571
00:26:29,119 --> 00:26:36,169
normal right so one of the problems with

572
00:26:34,039 --> 00:26:37,819
duplicating these results here is that

573
00:26:36,170 --> 00:26:39,890
we would want to normalize this number

574
00:26:37,819 --> 00:26:41,899
out first so we'd have to know okay

575
00:26:39,890 --> 00:26:43,490
what's the integral what you know what

576
00:26:41,900 --> 00:26:46,100
are we actually dealing with here in

577
00:26:43,490 --> 00:26:47,808
terms of 1/2 of the total amount of

578
00:26:46,099 --> 00:26:49,819
weight right because remember this is

579
00:26:47,808 --> 00:26:52,460
our total total amount of weight is 55

580
00:26:49,819 --> 00:26:55,519
right so really we would want to look at

581
00:26:52,460 --> 00:26:57,829
that number which is the normalized

582
00:26:55,519 --> 00:27:00,679
version if you take a look at because

583
00:26:57,829 --> 00:27:01,369
the weight wants to totally sum to 1 if

584
00:27:00,679 --> 00:27:03,200
that makes sense

585
00:27:01,369 --> 00:27:05,058
so in this case here we would probably

586
00:27:03,200 --> 00:27:07,009
say our answer was more like 7 because

587
00:27:05,058 --> 00:27:10,039
we'd really want to do something like

588
00:27:07,009 --> 00:27:14,929
the weight over the total weight which

589
00:27:10,039 --> 00:27:16,970
in this case again was 55 right so the

590
00:27:14,929 --> 00:27:18,860
idea here now if we want to simplify

591
00:27:16,970 --> 00:27:22,640
this process rather than multiplying

592
00:27:18,859 --> 00:27:25,009
everything by this weighting value which

593
00:27:22,640 --> 00:27:26,090
is you know some x over 55 here or

594
00:27:25,009 --> 00:27:28,460
whatever which is what you know whatever

595
00:27:26,089 --> 00:27:30,558
the X is my over 55 if we want to get

596
00:27:28,460 --> 00:27:32,960
rid of the of having to multiply by that

597
00:27:30,558 --> 00:27:34,940
value what I can do instead is just

598
00:27:32,960 --> 00:27:38,000
sample what the function is going to be

599
00:27:34,940 --> 00:27:38,360
more heavily on this end then on that

600
00:27:38,000 --> 00:27:42,619
end

601
00:27:38,359 --> 00:27:44,569
right if that makes sense and so then

602
00:27:42,619 --> 00:27:48,619
what I could do is change my weight back

603
00:27:44,569 --> 00:27:49,909
to a uniform weight right so instead you

604
00:27:48,619 --> 00:27:50,419
know if I'm going to still take 10

605
00:27:49,910 --> 00:27:52,670
sample

606
00:27:50,420 --> 00:27:56,150
changed the weight back to one over ten

607
00:27:52,670 --> 00:27:57,320
right or one over eleven if there's 11

608
00:27:56,150 --> 00:28:01,009
samples however many we're going to take

609
00:27:57,319 --> 00:28:04,730
right change the weight back to that and

610
00:28:01,009 --> 00:28:07,039
then just sample biased by whatever the

611
00:28:04,730 --> 00:28:10,039
function we're using before which is the

612
00:28:07,039 --> 00:28:12,259
X right so since we know that the X is

613
00:28:10,039 --> 00:28:14,990
going to be higher up here you can even

614
00:28:12,259 --> 00:28:17,779
see since the answer was 7 here if we

615
00:28:14,990 --> 00:28:20,690
just take sort of samples that tend to

616
00:28:17,779 --> 00:28:23,180
skew up around there we would end up

617
00:28:20,690 --> 00:28:25,630
with an answer in here even though we're

618
00:28:23,180 --> 00:28:29,360
not actually multiplying by this anymore

619
00:28:25,630 --> 00:28:33,350
right and that's all we're trying to do

620
00:28:29,359 --> 00:28:35,990
with our weighting function we're trying

621
00:28:33,349 --> 00:28:39,259
to observe the fact that when you take

622
00:28:35,990 --> 00:28:42,019
some function and you weight it by a

623
00:28:39,259 --> 00:28:43,910
certain skew so that it shifts towards

624
00:28:42,019 --> 00:28:47,210
some distribution of its numbers right

625
00:28:43,910 --> 00:28:48,710
in this case you know you can kind of

626
00:28:47,210 --> 00:28:50,930
see exactly what would happen normally

627
00:28:48,710 --> 00:28:53,420
it should have landed right about here

628
00:28:50,930 --> 00:28:55,640
on an even weighting of these values

629
00:28:53,420 --> 00:28:58,700
instead it's going to land right about

630
00:28:55,640 --> 00:29:02,990
here because we've shifted it up by if

631
00:28:58,700 --> 00:29:05,259
effectively squaring it right that's

632
00:29:02,990 --> 00:29:07,910
really all that we're talking about

633
00:29:05,259 --> 00:29:10,970
taking samples that look like that and

634
00:29:07,910 --> 00:29:14,840
turning them into samples that look like

635
00:29:10,970 --> 00:29:19,460
that right so that we get answers that

636
00:29:14,839 --> 00:29:23,569
that shift upward anyway I realize this

637
00:29:19,460 --> 00:29:25,670
kind of weird thing I'm not sure how to

638
00:29:23,569 --> 00:29:31,460
write the more mathematically concise

639
00:29:25,670 --> 00:29:36,470
version of it because it's a discrete

640
00:29:31,460 --> 00:29:39,920
process so I mean one way to think about

641
00:29:36,470 --> 00:29:44,480
it would be that the sampling function

642
00:29:39,920 --> 00:29:46,370
that you use has a bias in it and you

643
00:29:44,480 --> 00:29:49,940
could think about that bias as being

644
00:29:46,369 --> 00:29:54,519
written into the equation so for example

645
00:29:49,940 --> 00:29:54,519
if you were talking about it like this

646
00:29:55,779 --> 00:30:00,220
so here's our Hemisphere sampling

647
00:30:05,000 --> 00:30:09,480
so if you were talking about it like

648
00:30:07,470 --> 00:30:13,230
this this is the function that you're

649
00:30:09,480 --> 00:30:15,870
doing the reason that this FA B just

650
00:30:13,230 --> 00:30:19,019
looks like an FA B term is because the

651
00:30:15,869 --> 00:30:21,239
bias is assumed not to be there so like

652
00:30:19,019 --> 00:30:25,440
it is assumed to be no sampling bias

653
00:30:21,240 --> 00:30:28,799
right but if you imagined writing the

654
00:30:25,440 --> 00:30:32,670
sampling bias in it so let's suppose we

655
00:30:28,799 --> 00:30:37,710
were going to replace F of B with a

656
00:30:32,670 --> 00:30:41,430
different function write GA of B and GA

657
00:30:37,710 --> 00:30:43,950
of B equals FA of B whatever the

658
00:30:41,430 --> 00:30:46,710
function was but it's biased so that its

659
00:30:43,950 --> 00:30:48,660
results come back with the inverse

660
00:30:46,710 --> 00:30:53,130
sampling right so they come back

661
00:30:48,660 --> 00:30:54,960
proportional to 1 over cosine theta then

662
00:30:53,130 --> 00:31:03,330
you could see that when you substitute

663
00:30:54,960 --> 00:31:08,460
this in right um

664
00:31:03,329 --> 00:31:09,869
I guess that's kind of not exactly the

665
00:31:08,460 --> 00:31:12,559
right way I should have written it let

666
00:31:09,869 --> 00:31:12,559
me write that slightly differently

667
00:31:16,220 --> 00:31:19,410
let me write that the backwards way

668
00:31:18,509 --> 00:31:21,390
because I think that would be a little

669
00:31:19,410 --> 00:31:23,610
better so if this is the integral that

670
00:31:21,390 --> 00:31:25,890
we want we're saying we essentially want

671
00:31:23,609 --> 00:31:29,729
to know what we would have to produce

672
00:31:25,890 --> 00:31:36,810
here right if we wanted these two things

673
00:31:29,730 --> 00:31:39,180
to be equal right so we want to take an

674
00:31:36,809 --> 00:31:40,980
integral of some function that will

675
00:31:39,180 --> 00:31:45,000
equal the integral of this function

676
00:31:40,980 --> 00:31:46,470
times the cosine theta right and so when

677
00:31:45,000 --> 00:31:49,589
you look at these two things it just

678
00:31:46,470 --> 00:31:55,200
means that G a of B has to equal cosine

679
00:31:49,589 --> 00:31:59,819
theta FA of B right and then we know it

680
00:31:55,200 --> 00:32:02,039
in order to figure out you know what

681
00:31:59,819 --> 00:32:05,189
this function has to be it has to be the

682
00:32:02,039 --> 00:32:07,409
cosine weighted version of this right

683
00:32:05,190 --> 00:32:10,529
that's just what that ends up being

684
00:32:07,410 --> 00:32:13,890
equal to right it's it's it's exactly

685
00:32:10,529 --> 00:32:16,170
written out you know in that way so if

686
00:32:13,890 --> 00:32:18,780
we can come up with another function

687
00:32:16,170 --> 00:32:22,230
which just happens to have that same

688
00:32:18,779 --> 00:32:23,849
that bias already built in then we know

689
00:32:22,230 --> 00:32:25,920
that we wouldn't have to do this anymore

690
00:32:23,849 --> 00:32:28,079
right we wouldn't have to multiply it by

691
00:32:25,920 --> 00:32:30,509
cuz the actual function actually has it

692
00:32:28,079 --> 00:32:34,109
in there already which is why we say

693
00:32:30,509 --> 00:32:37,140
that if we took our sampling and biased

694
00:32:34,109 --> 00:32:39,179
it so that it takes samples close to

695
00:32:37,140 --> 00:32:40,980
where the cosine theta is one and very

696
00:32:39,180 --> 00:32:44,730
few samples close to where cosine theta

697
00:32:40,980 --> 00:32:46,529
is zero which is down here right that we

698
00:32:44,730 --> 00:32:50,160
expect to get the same answer on the way

699
00:32:46,529 --> 00:32:51,990
out hopefully that makes some sense and

700
00:32:50,160 --> 00:32:56,400
I probably did a horrible job explaining

701
00:32:51,990 --> 00:32:59,670
that it felt like I did probably because

702
00:32:56,400 --> 00:33:01,500
I'm not a ray tracing guy so if I spent

703
00:32:59,670 --> 00:33:02,880
all all my time working on this I

704
00:33:01,500 --> 00:33:05,700
probably would have thought of good ways

705
00:33:02,880 --> 00:33:09,690
to think about that that are clearer to

706
00:33:05,700 --> 00:33:13,350
understand but I'm not so what can you

707
00:33:09,690 --> 00:33:16,980
do we tried to do this at the end of the

708
00:33:13,349 --> 00:33:18,959
previous stream and we haven't quite

709
00:33:16,980 --> 00:33:22,610
gotten there yet so if you remember the

710
00:33:18,960 --> 00:33:22,610
what we were doing in the code here

711
00:33:27,539 --> 00:33:33,759
let's see we put in here we go generate

712
00:33:31,420 --> 00:33:35,920
loading pattern so we put a little thing

713
00:33:33,759 --> 00:33:40,990
in the code here that just tried doing

714
00:33:35,920 --> 00:33:43,420
these samples you can see them do it i

715
00:33:40,990 --> 00:33:45,400
we didn't quite get stable enough

716
00:33:43,420 --> 00:33:46,779
results and we don't really know why now

717
00:33:45,400 --> 00:33:49,210
there's couple of reasons we might not

718
00:33:46,779 --> 00:33:51,279
get stable results one reason might be

719
00:33:49,210 --> 00:33:53,410
that we are doing things correctly and

720
00:33:51,279 --> 00:33:55,299
we just aren't taking enough samples

721
00:33:53,410 --> 00:33:57,790
another reason is we have a bug right

722
00:33:55,299 --> 00:33:59,799
and so we need to investigate this a

723
00:33:57,789 --> 00:34:02,440
little bit further what I'm going to do

724
00:33:59,799 --> 00:34:06,339
first so if you take a look here this is

725
00:34:02,440 --> 00:34:08,050
the random bilateral samples I want to

726
00:34:06,339 --> 00:34:11,469
see what happens with the minimum

727
00:34:08,050 --> 00:34:13,929
maximum testing if we just crank up the

728
00:34:11,469 --> 00:34:14,589
sample count really dramatically here if

729
00:34:13,929 --> 00:34:17,260
that makes sense

730
00:34:14,590 --> 00:34:19,840
and take a look at what the average is

731
00:34:17,260 --> 00:34:21,840
at that point so in this sample count

732
00:34:19,840 --> 00:34:28,750
here I'm gonna just crank it up

733
00:34:21,840 --> 00:34:32,909
massively like so and I want to see if

734
00:34:28,750 --> 00:34:40,360
this converges and this is just taking

735
00:34:32,909 --> 00:34:45,820
random samples sampling a there we go

736
00:34:40,360 --> 00:34:47,200
sampling a a pattern of randomness and

737
00:34:45,820 --> 00:34:50,309
looking at what the minimum and maximum

738
00:34:47,199 --> 00:34:50,309
averages are

739
00:35:00,070 --> 00:35:05,380
what is happening and then not

740
00:35:02,809 --> 00:35:05,380
terminating

741
00:35:12,989 --> 00:35:18,709
- is 10:24 too much on that what's our

742
00:35:16,230 --> 00:35:18,710
sample cam

743
00:35:26,019 --> 00:35:32,929
that's kind of ridiculous that that

744
00:35:29,119 --> 00:35:35,529
would be taking that long what's

745
00:35:32,929 --> 00:35:35,529
happening here

746
00:35:44,550 --> 00:35:52,460
it's a very slow function but I guess it

747
00:35:48,030 --> 00:35:55,619
is taking that long oh you know why

748
00:35:52,460 --> 00:35:58,199
because we're actually doing 1024 tests

749
00:35:55,619 --> 00:36:00,420
of it so that all right I agree that may

750
00:35:58,199 --> 00:36:05,009
have been a little bit much let's tone

751
00:36:00,420 --> 00:36:05,970
it down a little but only a little we

752
00:36:05,010 --> 00:36:15,630
could also just compile with

753
00:36:05,969 --> 00:36:17,429
optimizations on I suppose but all right

754
00:36:15,630 --> 00:36:19,970
so I just want to look at what these

755
00:36:17,429 --> 00:36:19,969
values are

756
00:36:28,460 --> 00:36:34,050
so the sample count here would also have

757
00:36:31,469 --> 00:36:36,809
to be higher to get the actual average

758
00:36:34,050 --> 00:36:39,390
right but I still so something seems a

759
00:36:36,809 --> 00:36:41,279
little bit off because I feel like once

760
00:36:39,389 --> 00:36:43,469
we take enough samples we should be

761
00:36:41,280 --> 00:36:45,360
getting a fairly accurate result unless

762
00:36:43,469 --> 00:36:49,949
it might be that our random number

763
00:36:45,360 --> 00:37:01,530
generator isn't great either but we'll

764
00:36:49,949 --> 00:37:02,129
see so let's do less tests and more

765
00:37:01,530 --> 00:37:07,620
samples

766
00:37:02,130 --> 00:37:16,320
I want a like densely sample of the

767
00:37:07,619 --> 00:37:20,460
hemisphere right so now we're seven cows

768
00:37:16,320 --> 00:37:22,050
4096 we have a lot less tests but here's

769
00:37:20,460 --> 00:37:24,720
our min test average and here's our max

770
00:37:22,050 --> 00:37:26,519
test average and what you can see is

771
00:37:24,719 --> 00:37:29,579
they're still pretty bad right they're

772
00:37:26,519 --> 00:37:31,050
still fairly divergent at which again

773
00:37:29,579 --> 00:37:33,449
makes me wonder like if we've got

774
00:37:31,050 --> 00:37:35,340
something habitually wrong happening

775
00:37:33,449 --> 00:37:37,519
here I'm gonna keep upping the sample

776
00:37:35,340 --> 00:37:37,519
count

777
00:37:48,210 --> 00:37:54,690
and I just want to see okay so they're

778
00:37:51,179 --> 00:38:02,338
they're starting to converge more at a

779
00:37:54,690 --> 00:38:05,510
very very high sample count right let me

780
00:38:02,338 --> 00:38:05,509
run more tests and make sure

781
00:38:16,949 --> 00:38:26,069
yeah so okay so basically at that sample

782
00:38:20,039 --> 00:38:31,710
count at 65,000 samples we start to

783
00:38:26,070 --> 00:38:38,900
converge on an answer right which is

784
00:38:31,710 --> 00:38:42,360
pretty bad right it's not not great and

785
00:38:38,900 --> 00:38:43,769
that's a smooth function that's easy to

786
00:38:42,360 --> 00:38:45,090
integrate that's just I guess goes to

787
00:38:43,769 --> 00:38:48,210
show you just how hard it is to

788
00:38:45,090 --> 00:38:49,230
integrate over a hemisphere unless

789
00:38:48,210 --> 00:38:51,030
there's some kind of bug here now the

790
00:38:49,230 --> 00:38:54,869
other thing is we don't know how our

791
00:38:51,030 --> 00:38:57,360
random function is so you know what I'd

792
00:38:54,869 --> 00:38:59,519
like to do as well since we've got right

793
00:38:57,360 --> 00:39:05,700
now we have X or shift in there but X or

794
00:38:59,519 --> 00:39:09,659
shift is not particularly good right

795
00:39:05,699 --> 00:39:11,819
here's our here's our X or shift what

796
00:39:09,659 --> 00:39:14,369
I'd like to do is I'd like to go ahead

797
00:39:11,820 --> 00:39:18,269
and see if we could do a more precise

798
00:39:14,369 --> 00:39:23,789
version of that maybe taking the PCG

799
00:39:18,269 --> 00:39:26,659
stuff for example and having them one of

800
00:39:23,789 --> 00:39:26,659
these that works a little bit better

801
00:39:42,030 --> 00:39:46,829
so if I remember correctly

802
00:39:52,110 --> 00:39:55,260
[Music]

803
00:40:21,980 --> 00:40:33,949
I want to check because we are taking a

804
00:40:27,769 --> 00:40:40,099
set of these together and I seem to

805
00:40:33,949 --> 00:40:46,250
remember there being some some thing

806
00:40:40,099 --> 00:40:48,289
that needed to happen that is what we're

807
00:40:46,250 --> 00:40:49,940
talking about so k-dimensional equal

808
00:40:48,289 --> 00:40:52,219
distribution is just talking about the

809
00:40:49,940 --> 00:40:56,329
fact that if we were to take several of

810
00:40:52,219 --> 00:40:59,419
these numbers and make sure that if we

811
00:40:56,329 --> 00:41:02,389
use them as euclidean parameters right

812
00:40:59,420 --> 00:41:08,510
like XYZ that they produce equal

813
00:41:02,389 --> 00:41:10,849
distributions in space and we actually

814
00:41:08,510 --> 00:41:13,430
do care about that in this case right

815
00:41:10,849 --> 00:41:16,940
and what you can see here is it says you

816
00:41:13,429 --> 00:41:19,339
know that there's something specific we

817
00:41:16,940 --> 00:41:23,349
need to know about that I'm not sure

818
00:41:19,340 --> 00:41:23,350
where it talks about that let's see

819
00:41:40,389 --> 00:41:43,989
although we can achieve real indicators

820
00:41:42,159 --> 00:41:45,670
for arbitrary K using the counted

821
00:41:43,989 --> 00:41:48,429
assists there is a better method of LSU

822
00:41:45,670 --> 00:41:50,470
extension ethic suppose we have a B bit

823
00:41:48,429 --> 00:41:51,879
generator producing Arabic values which

824
00:41:50,469 --> 00:41:53,349
we shall call the base generator the

825
00:41:51,880 --> 00:41:56,170
extended generic consists of those B

826
00:41:53,349 --> 00:41:57,969
bits of state and K additional arbitrage

827
00:41:56,170 --> 00:41:59,740
issues we'll call the extension array we

828
00:41:57,969 --> 00:42:01,859
use the state of the base generator to

829
00:41:59,739 --> 00:42:03,849
choose a value from the extension array

830
00:42:01,860 --> 00:42:05,079
bypassing the base interest rate through

831
00:42:03,849 --> 00:42:06,250
a selector function of the final output

832
00:42:05,079 --> 00:42:08,259
of the comparator is produced by X

833
00:42:06,250 --> 00:42:09,760
soaring the selected value from the

834
00:42:08,260 --> 00:42:13,360
extension array with the random number

835
00:42:09,760 --> 00:42:17,680
produced by the base generator we stated

836
00:42:13,360 --> 00:42:19,300
using formalizations so we would need we

837
00:42:17,679 --> 00:42:21,039
need sort of an out-of-band thing for

838
00:42:19,300 --> 00:42:22,360
that so there is gonna be an arbitrary

839
00:42:21,039 --> 00:42:25,210
function but for simplicity let us

840
00:42:22,360 --> 00:42:27,519
assume that K equals to the X and that

841
00:42:25,210 --> 00:42:29,949
selection really drops bits to choose X

842
00:42:27,519 --> 00:42:31,659
from the state to obvious choice for

843
00:42:29,949 --> 00:42:33,189
choosing X fix our taking the higher two

844
00:42:31,659 --> 00:42:34,629
bits and take the lorda bits if we wish

845
00:42:33,190 --> 00:42:36,760
to perform party tricks like the ones

846
00:42:34,630 --> 00:42:38,260
just in section 4 3 4 did you load a

847
00:42:36,760 --> 00:42:39,490
bits because they will access all the

848
00:42:38,260 --> 00:42:45,760
elements the extension array before

849
00:42:39,489 --> 00:42:47,259
anyone once repeat start we have an

850
00:42:45,760 --> 00:42:49,030
output function that uniformly in that

851
00:42:47,260 --> 00:42:52,170
state is combined and must have final

852
00:42:49,030 --> 00:42:52,170
extension area advances

853
00:43:01,518 --> 00:43:03,578
you

854
00:43:07,780 --> 00:43:15,040
in figure 16 tip of one p cg x sh r s 64

855
00:43:12,699 --> 00:43:18,279
32 is shown with two-dimensional and

856
00:43:15,039 --> 00:43:22,539
1024 dimensional eco distribution using

857
00:43:18,280 --> 00:43:24,730
this mechanism x2 so we're mostly

858
00:43:22,539 --> 00:43:37,079
interested we don't need quite so much

859
00:43:24,730 --> 00:43:40,690
but let's take a look at where is that o

860
00:43:37,079 --> 00:43:43,139
figure 16 I don't know where figure 16

861
00:43:40,690 --> 00:43:43,139
is

862
00:44:08,539 --> 00:44:13,880
well unfortunately I don't see any

863
00:44:30,460 --> 00:44:40,000
I don't really see a lot of like there's

864
00:44:37,570 --> 00:44:42,930
no plotting in here of exactly how bad

865
00:44:40,000 --> 00:44:45,309
it would be if we just used a basic PC G

866
00:44:42,929 --> 00:44:48,969
versus trying to use an extension array

867
00:44:45,309 --> 00:44:50,949
I guess what I would want to do is I

868
00:44:48,969 --> 00:44:54,039
want to go ahead and take a look at this

869
00:44:50,949 --> 00:44:57,639
random bilateral and I would like to

870
00:44:54,039 --> 00:45:02,800
plot it if that makes sense so I can

871
00:44:57,639 --> 00:45:09,429
actually see what's going on when the

872
00:45:02,800 --> 00:45:11,080
sampling density gets up higher I'd like

873
00:45:09,429 --> 00:45:14,649
to see what the density is

874
00:45:11,079 --> 00:45:17,049
if it tends to be very clumpy or not and

875
00:45:14,650 --> 00:45:21,070
then if I was to improve the random

876
00:45:17,050 --> 00:45:24,119
number generator just for the version

877
00:45:21,070 --> 00:45:27,280
just for this test would it change

878
00:45:24,119 --> 00:45:30,190
that's what I want to see cuz I'm not

879
00:45:27,280 --> 00:45:33,160
sure I have a good sense from just from

880
00:45:30,190 --> 00:45:35,980
the paper just how bad the K dimensional

881
00:45:33,159 --> 00:45:46,989
distribution is if I don't do the more

882
00:45:35,980 --> 00:45:48,789
advanced version so yeah so if I wanted

883
00:45:46,989 --> 00:45:51,399
to draw this we already have the ability

884
00:45:48,789 --> 00:45:56,588
to output these points right I'm doing

885
00:45:51,400 --> 00:46:02,019
it here essentially with this sample

886
00:45:56,588 --> 00:46:04,230
points situation so if we I assume run

887
00:46:02,019 --> 00:46:04,230
this

888
00:46:12,170 --> 00:46:17,570
and I could probably get rid of the test

889
00:46:14,630 --> 00:46:19,809
case now as well but we should be seeing

890
00:46:17,570 --> 00:46:22,940
somewhere in here

891
00:46:19,809 --> 00:46:25,909
the yeah there they are all of the

892
00:46:22,940 --> 00:46:27,679
points getting drawn right and so those

893
00:46:25,909 --> 00:46:29,809
are its currently drawing our sample

894
00:46:27,679 --> 00:46:34,480
points what I want to do is have it draw

895
00:46:29,809 --> 00:46:39,139
random points and I just want to see

896
00:46:34,480 --> 00:46:50,329
what that looks like so if I if 0 this

897
00:46:39,139 --> 00:46:51,710
out here and I make one of these what I

898
00:46:50,329 --> 00:46:54,650
could do is just say like alright let's

899
00:46:51,710 --> 00:46:56,090
just write those to a table when I

900
00:46:54,650 --> 00:46:57,889
generate them and then I'll draw them I

901
00:46:56,090 --> 00:47:02,300
can't draw quite so many but I'll draw

902
00:46:57,889 --> 00:47:05,349
some right in fact I don't really want

903
00:47:02,300 --> 00:47:05,350
to copy this one I want to copy

904
00:47:18,469 --> 00:47:35,730
so if I imagine taking this test series

905
00:47:29,608 --> 00:47:40,528
here and doing exactly the same I'll

906
00:47:35,730 --> 00:47:42,858
literally copy the code here from that

907
00:47:40,528 --> 00:47:42,858
in it

908
00:48:00,039 --> 00:48:08,200
so this will just go ahead and draw that

909
00:48:13,960 --> 00:48:30,880
so yeah that's it I don't really want

910
00:48:17,568 --> 00:48:30,880
line segment if there's my direction and

911
00:48:37,690 --> 00:48:44,929
here's where we'll draw so if I go ahead

912
00:48:41,838 --> 00:48:47,659
and say we've got draw point counts

913
00:48:44,929 --> 00:48:50,328
let's say we draw 1024 of these I don't

914
00:48:47,659 --> 00:49:02,509
know if that'll blow out how much buffer

915
00:48:50,329 --> 00:49:05,180
space we have but once we push one of

916
00:49:02,509 --> 00:49:08,480
these on the start point can stay the

917
00:49:05,179 --> 00:49:13,028
same the normal is just direction here

918
00:49:08,480 --> 00:49:13,028
and I think that should basically do it

919
00:49:22,949 --> 00:49:30,089
and I suppose the other thing I don't

920
00:49:26,199 --> 00:49:33,129
really know at the moment unfortunately

921
00:49:30,090 --> 00:49:35,140
is I don't actually know whether this is

922
00:49:33,130 --> 00:49:38,170
a fair way of generating hemisphere

923
00:49:35,139 --> 00:49:46,329
points so I may also be creating a

924
00:49:38,170 --> 00:49:51,039
problem that way I'm not sure so let's

925
00:49:46,329 --> 00:49:59,679
play around this a little bit all right

926
00:49:51,039 --> 00:50:03,610
so if I do draw a point count here so we

927
00:49:59,679 --> 00:50:10,960
can draw like a lot of these you can see

928
00:50:03,610 --> 00:50:12,880
the sphere here and you know would I

929
00:50:10,960 --> 00:50:14,980
immediately say that it's got a problem

930
00:50:12,880 --> 00:50:17,460
I'm not sure but it kind of looks like

931
00:50:14,980 --> 00:50:17,460
it might

932
00:50:25,659 --> 00:50:33,980
just in terms of weather that you know

933
00:50:30,349 --> 00:50:39,618
how good that random covering is like I

934
00:50:33,980 --> 00:50:42,858
said I don't really know whether this is

935
00:50:39,619 --> 00:50:47,170
a fair way of producing points on a

936
00:50:42,858 --> 00:50:47,170
sphere I could take a look

937
00:51:00,440 --> 00:51:06,880
it's incorrect selects for coordinates

938
00:51:02,059 --> 00:51:06,880
that's okay we don't do that

939
00:51:12,539 --> 00:51:19,289
so they say it's spherical coordinates

940
00:51:15,159 --> 00:51:19,289
proportionable this is one way to do it

941
00:51:53,880 --> 00:52:00,530
so they definitely give ones here that

942
00:51:57,050 --> 00:52:00,530
do it

943
00:52:12,280 --> 00:52:18,280
three gaussian random variables XY and z

944
00:52:15,760 --> 00:52:21,610
then the distribution of vectors is this

945
00:52:18,280 --> 00:52:23,590
so we're definitely wrong because if

946
00:52:21,610 --> 00:52:25,630
because we are not picking Gaussian

947
00:52:23,590 --> 00:52:32,559
we're picking white noise on negative 1

948
00:52:25,630 --> 00:52:34,539
to 1 in theory in theory so for uniform

949
00:52:32,559 --> 00:52:38,190
distributed random numbers they're

950
00:52:34,539 --> 00:52:41,190
suggesting you do this and then that

951
00:52:38,190 --> 00:52:41,190
right

952
00:52:57,739 --> 00:53:06,079
so we could just do this is pretty

953
00:52:59,849 --> 00:53:06,079
straightforward right

954
00:53:09,559 --> 00:53:16,079
so maybe let's try this in C I'm just

955
00:53:13,619 --> 00:53:21,950
curious you can see what that one looked

956
00:53:16,079 --> 00:53:21,949
like right so let's do a little f0 here

957
00:53:40,039 --> 00:53:51,509
all right sweet wants two random numbers

958
00:53:43,789 --> 00:53:54,269
X 1 and X 2 and those are both supposed

959
00:53:51,510 --> 00:54:05,119
to be random bilaterals according to the

960
00:53:54,269 --> 00:54:05,119
text according to mrsa glia or mrsa glia

961
00:54:09,358 --> 00:54:11,929
yeah

962
00:54:19,320 --> 00:54:22,640
George Mossad Leah

963
00:54:30,750 --> 00:54:39,559
from Ohio State University all right so

964
00:54:37,289 --> 00:54:44,639
if we were to follow his formula then we

965
00:54:39,559 --> 00:55:07,170
want to reject pairs that have a length

966
00:54:44,639 --> 00:55:08,339
squared greater than one so and it says

967
00:55:07,170 --> 00:55:13,858
reject anything that's greater than

968
00:55:08,340 --> 00:55:14,789
equal to one and then we just generate

969
00:55:13,858 --> 00:55:18,029
the points directly

970
00:55:14,789 --> 00:55:19,440
supposedly without normalizing because

971
00:55:18,030 --> 00:55:29,070
the normalization is already built into

972
00:55:19,440 --> 00:55:35,190
the equations so our X is two times x

973
00:55:29,070 --> 00:55:44,130
one times square root and it looks like

974
00:55:35,190 --> 00:55:51,088
that value is actually the same so let's

975
00:55:44,130 --> 00:55:55,380
just call that X let's call that root so

976
00:55:51,088 --> 00:56:00,570
it's two times X 1 and then 2 times X 2

977
00:55:55,380 --> 00:56:04,250
times the same root term and then Z is

978
00:56:00,570 --> 00:56:04,250
special as it always is

979
00:56:08,280 --> 00:56:39,780
and that's just x1 yes so it's actually

980
00:56:13,190 --> 00:56:43,230
this term right here and that's in

981
00:56:39,780 --> 00:56:47,640
theory the algorithm if I didn't make a

982
00:56:43,230 --> 00:56:50,420
mistake in translation and we can take a

983
00:56:47,639 --> 00:56:50,420
look at what that looks like

984
00:56:52,219 --> 00:57:02,939
and I wouldn't say that that looks any

985
00:56:58,500 --> 00:57:14,130
different to me I would say that looks

986
00:57:02,940 --> 00:57:16,619
about the same so given the fact that

987
00:57:14,130 --> 00:57:25,019
I'm seeing roughly the same thing with

988
00:57:16,619 --> 00:57:28,969
both of these oops I did that a little

989
00:57:25,019 --> 00:57:28,969
bit poorly there

990
00:57:54,510 --> 00:58:00,299
yeah now I should be able to run either

991
00:57:57,969 --> 00:58:00,298
of these

992
00:58:09,860 --> 00:58:25,500
so yeah like looking at that and looking

993
00:58:21,510 --> 00:58:28,130
at that I mean they're definitely

994
00:58:25,500 --> 00:58:28,130
different

995
00:58:46,230 --> 00:58:54,389
oh but you know what the this is doing

996
00:58:52,079 --> 00:58:59,789
the whole sphere and we only want the

997
00:58:54,389 --> 00:59:04,529
hemisphere so I suppose in that case we

998
00:58:59,789 --> 00:59:07,829
have to modify that formula a little bit

999
00:59:04,530 --> 00:59:11,130
differently right because in this case

1000
00:59:07,829 --> 00:59:14,550
here the Z value can range you know all

1001
00:59:11,130 --> 00:59:27,019
the way and we don't really want it to

1002
00:59:14,550 --> 00:59:27,019
do that right so we want this term here

1003
00:59:29,358 --> 00:59:36,569
we want that term there to only be able

1004
00:59:32,280 --> 00:59:43,079
to go up to one that's all right go to

1005
00:59:36,570 --> 00:59:44,550
0.5 so I believe and yeah we never want

1006
00:59:43,079 --> 00:59:46,859
it to get all the way up to one so I

1007
00:59:44,550 --> 00:59:53,640
believe that the correct modification to

1008
00:59:46,858 --> 00:59:57,179
his routine is that for a hemisphere and

1009
00:59:53,639 --> 00:59:58,379
so that's the hemisphere version right

1010
00:59:57,179 --> 01:00:03,328
you can see what I mean by that because

1011
00:59:58,380 --> 01:00:08,190
you can see here in this case the Z

1012
01:00:03,329 --> 01:00:11,670
coordinate is 1 minus 2 x square right

1013
01:00:08,190 --> 01:00:14,849
and so if if you normally let this value

1014
01:00:11,670 --> 01:00:16,980
go from 0 to 1 this will go from 1 to

1015
01:00:14,849 --> 01:00:20,039
negative 1 which would be the whole

1016
01:00:16,980 --> 01:00:22,500
hemisphere but if we just cap it so it

1017
01:00:20,039 --> 01:00:24,539
can only go from 0 to 0.5 that will make

1018
01:00:22,500 --> 01:00:26,489
this go from 1 to 0 which gives us a

1019
01:00:24,539 --> 01:00:29,818
hemisphere so I just made that slight

1020
01:00:26,489 --> 01:00:32,608
modification to his routine pretty basic

1021
01:00:29,818 --> 01:00:39,059
all right so you know that's what that

1022
01:00:32,608 --> 01:00:40,529
routine looks like that's what our

1023
01:00:39,059 --> 01:00:43,068
tunics like I don't see a lot of

1024
01:00:40,530 --> 01:00:43,069
difference there

1025
01:00:46,360 --> 01:00:53,140
at least visually nothing jumps out at

1026
01:00:48,670 --> 01:00:54,730
me so I'm going to just double-check

1027
01:00:53,139 --> 01:00:58,500
what happens if we change our random

1028
01:00:54,730 --> 01:00:58,500
number to a different

1029
01:01:09,030 --> 01:01:22,530
I don't know what I want to call this

1030
01:01:14,369 --> 01:01:24,239
exactly but in our randomness you know

1031
01:01:22,530 --> 01:01:28,110
we have this one which is just using an

1032
01:01:24,239 --> 01:01:30,959
X or shift and what I want to do is

1033
01:01:28,110 --> 01:01:34,050
create a different one that creates

1034
01:01:30,960 --> 01:01:35,429
that's an on X or shift that's well I

1035
01:01:34,050 --> 01:01:39,630
shouldn't say an onyx worship that does

1036
01:01:35,429 --> 01:01:41,309
that PCG version in order to do that

1037
01:01:39,630 --> 01:01:43,890
what I'm going to do is say okay let's

1038
01:01:41,309 --> 01:01:46,619
say we've got a random serious PCG here

1039
01:01:43,889 --> 01:01:54,359
or something in fact I could just say

1040
01:01:46,619 --> 01:01:57,000
random serious PCG and then just have

1041
01:01:54,360 --> 01:02:01,800
the functions work the same so if I have

1042
01:01:57,000 --> 01:02:05,400
a random serious PCG this one will

1043
01:02:01,800 --> 01:02:13,340
operate on something fancier

1044
01:02:05,400 --> 01:02:13,340
we'll try putting this eight in like so

1045
01:02:15,860 --> 01:02:21,559
and we'll have random next few 32 much

1046
01:02:19,019 --> 01:02:21,559
like we did

1047
01:02:35,869 --> 01:02:42,229
all right so what we want to do here is

1048
01:02:42,349 --> 01:02:54,088
I'm gonna start with the same thing that

1049
01:02:44,639 --> 01:02:57,179
we had before but I'm gonna try and do a

1050
01:02:54,088 --> 01:03:00,268
better random number generator than the

1051
01:02:57,179 --> 01:03:01,649
one that we had and then we can swap

1052
01:03:00,268 --> 01:03:04,409
between them and see which which one

1053
01:03:01,650 --> 01:03:05,548
works out so if we go ahead and so we've

1054
01:03:04,409 --> 01:03:06,778
got two ways of picking things on the

1055
01:03:05,548 --> 01:03:07,798
sphere we can touch screen and now we

1056
01:03:06,778 --> 01:03:09,929
could touch me to different round of

1057
01:03:07,798 --> 01:03:13,380
numbers as well and then I can just see

1058
01:03:09,929 --> 01:03:16,248
to convince myself that we're okay so 32

1059
01:03:13,380 --> 01:03:18,900
bit output 64 bit state is what I wanted

1060
01:03:16,248 --> 01:03:22,468
and the reason that I want that is

1061
01:03:18,900 --> 01:03:25,528
because I 64 bit state with 32 bit

1062
01:03:22,469 --> 01:03:28,349
output on PSG's is like the better in

1063
01:03:25,528 --> 01:03:31,409
terms of randomness it performs better

1064
01:03:28,349 --> 01:03:32,880
because it has just more bits to store

1065
01:03:31,409 --> 01:03:39,649
as it goes forward compared to the

1066
01:03:32,880 --> 01:03:42,298
number it needs to actually generate so

1067
01:03:39,650 --> 01:03:44,939
let's pick this one because it's the

1068
01:03:42,298 --> 01:03:47,869
most random one this one is a more for

1069
01:03:44,938 --> 01:03:52,259
speed I guess so we'll see

1070
01:03:47,869 --> 01:03:53,670
so let's see suppose for except to

1071
01:03:52,259 --> 01:03:55,289
improve the high bits and randomly

1072
01:03:53,670 --> 01:03:58,499
rotate other bits with six bits of state

1073
01:03:55,289 --> 01:04:06,079
13 on forestry code tricity as this and

1074
01:03:58,498 --> 01:04:06,078
so the rotation we do have

1075
01:04:17,719 --> 01:04:22,899
we do have in this case it looks like

1076
01:04:35,349 --> 01:04:48,309
I guess the idea is that the rotation

1077
01:04:44,280 --> 01:04:52,420
only happens on the 32-bit output which

1078
01:04:48,309 --> 01:04:54,340
is actually kind of nice I didn't quite

1079
01:04:52,420 --> 01:04:59,500
realize that I've never done this one

1080
01:04:54,340 --> 01:05:02,320
the 64-bit 32-bit because if you look at

1081
01:04:59,500 --> 01:05:07,989
the way this is written here the 32-bit

1082
01:05:02,320 --> 01:05:11,019
rotation doesn't ever have to update the

1083
01:05:07,989 --> 01:05:14,349
64-bit state so you never need a 64-bit

1084
01:05:11,019 --> 01:05:16,239
rotate which is kind of nice because I

1085
01:05:14,349 --> 01:05:18,940
don't know if there is a 64-bit rotate

1086
01:05:16,239 --> 01:05:23,619
on the x64 there might be I've certainly

1087
01:05:18,940 --> 01:05:26,170
never called it there is a 64-bit rotate

1088
01:05:23,619 --> 01:05:29,109
I believe though I mean a 32-bit rotate

1089
01:05:26,170 --> 01:05:30,280
I believe correctly this is neither here

1090
01:05:29,110 --> 01:05:35,890
nor there because the rotation is

1091
01:05:30,280 --> 01:05:36,970
actually not hard to code in emulated

1092
01:05:35,889 --> 01:05:38,549
basically right because you just do

1093
01:05:36,969 --> 01:05:40,689
multiple shifts and or in order together

1094
01:05:38,550 --> 01:05:43,060
but it's just kind of interesting I

1095
01:05:40,690 --> 01:05:46,050
didn't know that so now if you look at

1096
01:05:43,059 --> 01:05:50,380
what's happening here right it's taking

1097
01:05:46,050 --> 01:05:51,880
the sort of a fairly straightforward

1098
01:05:50,380 --> 01:05:53,829
thing you're doing here which is the

1099
01:05:51,880 --> 01:05:57,250
state X sword with itself shifted out of

1100
01:05:53,829 --> 01:06:00,819
18 shift it down again 27 and then it's

1101
01:05:57,250 --> 01:06:06,010
taking and extracting the high bits of

1102
01:06:00,820 --> 01:06:12,250
the state basically bits 59 60 61 I'm

1103
01:06:06,010 --> 01:06:16,060
sorry 60 61 62 63 and it's using those

1104
01:06:12,250 --> 01:06:19,539
to create no I was right sorry 59 60 61

1105
01:06:16,059 --> 01:06:23,500
62 C 3 to create a number between 0 and

1106
01:06:19,539 --> 01:06:25,449
31 to use as the rotation right so it's

1107
01:06:23,500 --> 01:06:28,929
using the high bits of the state to

1108
01:06:25,449 --> 01:06:34,659
rotate the low bits of the state

1109
01:06:28,929 --> 01:06:36,429
basically if that makes sense and then

1110
01:06:34,659 --> 01:06:40,420
here's a version of that that doesn't

1111
01:06:36,429 --> 01:06:41,829
use a rotation it says here it has

1112
01:06:40,420 --> 01:06:43,180
slightly worse petitions there's a

1113
01:06:41,829 --> 01:06:45,719
school performance but it's got slightly

1114
01:06:43,179 --> 01:06:45,719
better speed

1115
01:06:47,739 --> 01:06:53,789
so yeah so anyway if we look at this one

1116
01:06:50,820 --> 01:06:58,539
this is pretty easy to implement right

1117
01:06:53,789 --> 01:07:00,309
it's after we do we're gonna have to do

1118
01:06:58,539 --> 01:07:02,559
our X or shift part of this because we

1119
01:07:00,309 --> 01:07:08,500
got to do it X or shift 64 here right so

1120
01:07:02,559 --> 01:07:14,079
we'll do that in a second but once we

1121
01:07:08,500 --> 01:07:17,608
have the result probably just call this

1122
01:07:14,079 --> 01:07:21,730
the state once we have the state vector

1123
01:07:17,608 --> 01:07:23,440
the idea behind these per muted random

1124
01:07:21,730 --> 01:07:25,210
number generators is just to take a

1125
01:07:23,440 --> 01:07:27,039
random number that isn't particularly

1126
01:07:25,210 --> 01:07:28,480
good like the one that comes out of X or

1127
01:07:27,039 --> 01:07:35,230
shift which we'll do in a second here

1128
01:07:28,480 --> 01:07:36,460
right the X or shift goes here what we

1129
01:07:35,230 --> 01:07:38,710
want to do is take something that was

1130
01:07:36,460 --> 01:07:40,210
like a 64-bit XOR shift and now we want

1131
01:07:38,710 --> 01:07:42,670
to make it a much better random number

1132
01:07:40,210 --> 01:07:44,949
by using the bits in it to produce a

1133
01:07:42,670 --> 01:07:48,220
better random number out of it right and

1134
01:07:44,949 --> 01:07:49,719
that's what these PSG's do and so what

1135
01:07:48,219 --> 01:07:54,189
they do is they say alright let's take

1136
01:07:49,719 --> 01:07:58,719
it let's do the state X sword with the

1137
01:07:54,190 --> 01:08:05,338
state shifted down by 18 and then what

1138
01:07:58,719 --> 01:08:08,079
we want to do is shift that down by 27

1139
01:08:05,338 --> 01:08:14,820
and then what we want to do is do the

1140
01:08:08,079 --> 01:08:14,819
rotation I lost my place there

1141
01:08:18,319 --> 01:08:39,690
sorry about that here it is and I do the

1142
01:08:26,909 --> 01:08:43,619
rotation by the top fits like so now we

1143
01:08:39,689 --> 01:08:47,919
have a rotate as you can see I don't

1144
01:08:43,619 --> 01:08:50,979
remember which one she wanted us to do

1145
01:08:47,920 --> 01:08:50,979
[Music]

1146
01:08:51,920 --> 01:08:59,640
clockwise rotation so I guess I would

1147
01:08:57,479 --> 01:09:04,108
interpret clockwise rotation as a

1148
01:08:59,640 --> 01:09:06,300
rightward rotation not sure what

1149
01:09:04,109 --> 01:09:13,470
clockwise means in this case but I

1150
01:09:06,300 --> 01:09:16,819
assume it means going this way so I'm

1151
01:09:13,470 --> 01:09:16,819
gonna go ahead and say it's rotate right

1152
01:09:17,899 --> 01:09:24,119
like so and so in this case after this

1153
01:09:21,630 --> 01:09:25,980
has been done we want to convert this to

1154
01:09:24,119 --> 01:09:29,640
a u 32 because remember this is actually

1155
01:09:25,979 --> 01:09:40,259
a 64-bit value and we want this to be

1156
01:09:29,640 --> 01:09:42,300
assigned value I guess in this case this

1157
01:09:40,260 --> 01:09:44,940
will not give us a signed result so it

1158
01:09:42,300 --> 01:09:47,130
should never be signed but that's just

1159
01:09:44,939 --> 01:09:48,479
this expects an integer anyway so that's

1160
01:09:47,130 --> 01:09:51,569
just what we're gonna have to use there

1161
01:09:48,479 --> 01:09:54,269
and so then I believe this gives us the

1162
01:09:51,569 --> 01:09:57,350
result that we want here let me go ahead

1163
01:09:54,270 --> 01:10:01,730
and give a compilation here I

1164
01:09:57,350 --> 01:10:01,730
accidentally I did

1165
01:10:04,630 --> 01:10:15,079
yeah and so now if I want to actually do

1166
01:10:12,470 --> 01:10:19,520
the random bilateral version here which

1167
01:10:15,079 --> 01:10:21,890
is this I can take these two and these

1168
01:10:19,520 --> 01:10:24,260
are the same and the only difference is

1169
01:10:21,890 --> 01:10:27,230
which kind of random number generator

1170
01:10:24,260 --> 01:10:30,949
it's calling so this should be exactly

1171
01:10:27,229 --> 01:10:33,529
the same right so now we have one that

1172
01:10:30,949 --> 01:10:37,159
uses the PCG there but we are not

1173
01:10:33,529 --> 01:10:39,050
actually producing the xor state here

1174
01:10:37,159 --> 01:10:50,829
what is this thing so we need to

1175
01:10:39,050 --> 01:10:50,829
implement that unreachable code oh

1176
01:10:52,060 --> 01:10:57,620
because it actually figured out that

1177
01:10:54,319 --> 01:11:00,469
this wouldn't terminate that's amazing

1178
01:10:57,619 --> 01:11:03,019
is that actually what it did that's kind

1179
01:11:00,470 --> 01:11:05,000
of amazing it figured out that this

1180
01:11:03,020 --> 01:11:06,860
would never produce a value that would

1181
01:11:05,000 --> 01:11:12,520
pass this check because that was a

1182
01:11:06,859 --> 01:11:14,960
constant do you think that is awesome

1183
01:11:12,520 --> 01:11:17,480
right I mean the compiler actually

1184
01:11:14,960 --> 01:11:19,939
figured out that because we never modify

1185
01:11:17,479 --> 01:11:24,319
that state value that we'd never get out

1186
01:11:19,939 --> 01:11:26,269
of this loop I think that's what it did

1187
01:11:24,319 --> 01:11:30,639
anyway all right so let's take a look at

1188
01:11:26,270 --> 01:11:30,640
we need an X or shift 64 now in here

1189
01:11:41,460 --> 01:11:53,510
let's see that's a 128 X or shift

1190
01:12:02,279 --> 01:12:15,550
but what is the 64-bit version of X or

1191
01:12:08,800 --> 01:12:18,190
shift we have a 32-bit and a 128 unless

1192
01:12:15,550 --> 01:12:21,029
that extra shift 128 is actually 64-bit

1193
01:12:18,189 --> 01:12:24,719
it's no it's not it's at that that's

1194
01:12:21,029 --> 01:12:24,719
that's correctly

1195
01:12:39,250 --> 01:12:43,739
am I missing something fair

1196
01:12:52,149 --> 01:12:55,960
maybe they're too uh well maybe they're

1197
01:12:54,099 --> 01:12:58,679
only talking about X or shifting only

1198
01:12:55,960 --> 01:12:58,679
the top 32

1199
01:13:18,069 --> 01:13:32,529
I'm not sure if we were only gonna use a

1200
01:13:29,460 --> 01:13:34,630
60 32-bit xor chef because and it

1201
01:13:32,529 --> 01:13:38,609
doesn't look like there is a 64-bit

1202
01:13:34,630 --> 01:13:38,609
extra shift only 128 and 32

1203
01:13:40,229 --> 01:13:45,929
I'm not sure exactly what she's

1204
01:13:43,000 --> 01:13:45,930
referring to in here

1205
01:13:56,399 --> 01:13:59,969
let's take a look back

1206
01:14:54,899 --> 01:14:58,889
so let's take a look

1207
01:15:13,409 --> 01:15:16,729
here's an actual implementation

1208
01:15:55,529 --> 01:16:02,939
so the magic constant there's a little

1209
01:15:59,920 --> 01:16:09,029
odd since it's not explained anywhere

1210
01:16:02,939 --> 01:16:12,879
the this right here is the rotation as

1211
01:16:09,029 --> 01:16:18,519
you would expect the rotation to be so

1212
01:16:12,880 --> 01:16:21,880
this part is exactly what we wrote here

1213
01:16:18,520 --> 01:16:23,560
this rotate right right in fact let me

1214
01:16:21,880 --> 01:16:24,940
isolate it for you there so you can see

1215
01:16:23,560 --> 01:16:35,380
what I'm talking about

1216
01:16:24,939 --> 01:16:43,569
so this internal value if we just grab

1217
01:16:35,380 --> 01:16:46,810
that out of here so this right here is

1218
01:16:43,569 --> 01:16:51,519
just taking that right there that's the

1219
01:16:46,810 --> 01:16:54,370
rotate amount right and you can see it

1220
01:16:51,520 --> 01:16:56,740
doing a rotation rather than calling the

1221
01:16:54,369 --> 01:16:58,739
actual rotate on the chip because that

1222
01:16:56,739 --> 01:17:02,079
doesn't exist in see she's just doing

1223
01:16:58,739 --> 01:17:03,849
the rotation manually the remember I

1224
01:17:02,079 --> 01:17:05,050
said a few minutes ago you don't have to

1225
01:17:03,850 --> 01:17:07,720
worry too much about that because you

1226
01:17:05,050 --> 01:17:09,310
can just do it yourself but since we

1227
01:17:07,720 --> 01:17:11,280
have a 32-bit rotate we can just use it

1228
01:17:09,310 --> 01:17:15,580
it's not a big deal one way or the other

1229
01:17:11,279 --> 01:17:18,340
so this part right here is the part that

1230
01:17:15,579 --> 01:17:21,189
we're interested in and you can see that

1231
01:17:18,340 --> 01:17:28,449
as far as X or ship is concerned it's

1232
01:17:21,189 --> 01:17:34,179
just doing that right so the X or shift

1233
01:17:28,449 --> 01:17:35,979
part is exactly at like that's the exact

1234
01:17:34,180 --> 01:17:38,380
part that we wrote down from the

1235
01:17:35,979 --> 01:17:40,319
equation that you have there so this is

1236
01:17:38,380 --> 01:17:43,449
the only part that I'm not sure about

1237
01:17:40,319 --> 01:17:48,849
right I don't quite know where she got

1238
01:17:43,449 --> 01:17:51,840
the magic constant from to advance the

1239
01:17:48,850 --> 01:17:51,840
internal state there

1240
01:18:07,538 --> 01:18:13,130
looks like if someone wants to

1241
01:18:09,319 --> 01:18:16,279
implemented in Java or rest I don't know

1242
01:18:13,130 --> 01:18:17,719
she's taking contributions still yeah so

1243
01:18:16,279 --> 01:18:19,849
I'm not sure about that one part right

1244
01:18:17,719 --> 01:18:37,328
there but I guess that rules the X or

1245
01:18:19,849 --> 01:18:37,328
shift into it and I guess

1246
01:18:45,679 --> 01:18:52,039
yeah I guess I don't undersell I would

1247
01:18:49,579 --> 01:18:54,710
like to see a bigger more full

1248
01:18:52,039 --> 01:18:59,539
explanation of this part right here so

1249
01:18:54,710 --> 01:19:02,529
for example this rng inc or one it's not

1250
01:18:59,539 --> 01:19:07,579
really discussed what that is

1251
01:19:02,529 --> 01:19:09,259
or why you would or it with one because

1252
01:19:07,579 --> 01:19:11,479
you could have just stored it or with

1253
01:19:09,260 --> 01:19:14,650
one so there's more to it than that

1254
01:19:11,479 --> 01:19:17,658
right like that's not a complete

1255
01:19:14,649 --> 01:19:20,719
understanding of what's going on there I

1256
01:19:17,658 --> 01:19:24,339
don't imagine there's any more comments

1257
01:19:20,719 --> 01:19:24,340
in here but if there are

1258
01:19:31,698 --> 01:19:34,629
of course it is

1259
01:19:36,599 --> 01:19:42,270
let's take a look cuz I'd like to

1260
01:19:41,039 --> 01:19:43,679
understand where that's coming from I

1261
01:19:42,270 --> 01:19:48,179
don't really like it when I don't know

1262
01:19:43,679 --> 01:19:52,260
what something's supposed to do I feel

1263
01:19:48,179 --> 01:20:03,618
like that just leads to problems hello

1264
01:19:52,260 --> 01:20:03,619
windows maybe I won't create a folder

1265
01:20:16,050 --> 01:20:19,050
okay

1266
01:20:20,550 --> 01:20:26,880
and you want to explain what's happening

1267
01:20:22,350 --> 01:20:29,570
right now they went from Microsoft what

1268
01:20:26,880 --> 01:20:29,569
is happening right now

1269
01:20:39,569 --> 01:20:47,519
let's kill Visual Studio for starters

1270
01:20:52,389 --> 01:20:56,929
so this is still working it's just some

1271
01:20:55,519 --> 01:21:05,409
maybe explore and you see it could there

1272
01:20:56,929 --> 01:21:05,408
we go my lord all I wanted to do was

1273
01:21:06,279 --> 01:21:21,609
unpack this file can it do it now no

1274
01:21:15,229 --> 01:21:28,219
it's so I just can't hit new okay I

1275
01:21:21,609 --> 01:21:32,408
don't even know what to say windows it

1276
01:21:28,219 --> 01:21:32,408
can't even create a new director anymore

1277
01:21:56,899 --> 01:22:01,710
unbelievable okay so here we are on the

1278
01:21:59,789 --> 01:22:03,390
W Drive I'm gonna just make it from the

1279
01:22:01,710 --> 01:22:08,220
command line cuz apparently that's all

1280
01:22:03,390 --> 01:22:10,260
we can do I will go ahead and do we have

1281
01:22:08,220 --> 01:22:12,390
a 7-zip command line we do I guess but

1282
01:22:10,260 --> 01:22:16,320
it's not in the path I must see if I can

1283
01:22:12,390 --> 01:22:19,590
unzip it using Explorer hope springs

1284
01:22:16,319 --> 01:22:22,079
eternal I guess at this point and we'll

1285
01:22:19,590 --> 01:22:39,750
just see if that'll work

1286
01:22:22,079 --> 01:22:43,380
so here I go hey what do you know these

1287
01:22:39,750 --> 01:22:46,829
gentleman Microsoft every version of

1288
01:22:43,380 --> 01:22:49,140
Windows they break something new all

1289
01:22:46,829 --> 01:22:50,460
right so if we want to take a look at

1290
01:22:49,140 --> 01:22:51,930
this cuz I just wanted to see if there

1291
01:22:50,460 --> 01:22:53,909
was any more explanation in here of

1292
01:22:51,930 --> 01:22:55,740
where the magic constants are coming

1293
01:22:53,909 --> 01:22:58,619
from like I assume there's some kind of

1294
01:22:55,739 --> 01:23:00,599
a fold-down of something talked about in

1295
01:22:58,619 --> 01:23:02,369
the paper you know for optimality or

1296
01:23:00,600 --> 01:23:06,930
something like that but if I take a look

1297
01:23:02,369 --> 01:23:09,170
at what's going on here let's just take

1298
01:23:06,930 --> 01:23:09,170
a look

1299
01:23:14,319 --> 01:23:21,018
so it looks like the the in the actual

1300
01:23:18,800 --> 01:23:24,050
and petition here it does do exactly

1301
01:23:21,019 --> 01:23:26,929
what I said which was boring in the one

1302
01:23:24,050 --> 01:23:31,909
bit free so you notice the or is does

1303
01:23:26,929 --> 01:23:34,069
not appear here I don't know why her

1304
01:23:31,908 --> 01:23:35,509
other version doesn't have that probably

1305
01:23:34,069 --> 01:23:37,969
because she was wanted you to be able to

1306
01:23:35,510 --> 01:23:40,940
put anything in there even an even

1307
01:23:37,969 --> 01:23:43,130
number and then she would just put the

1308
01:23:40,939 --> 01:23:45,439
or in there so this is probably just a

1309
01:23:43,130 --> 01:23:49,219
more optimized version for when she

1310
01:23:45,439 --> 01:23:49,969
knows she's the one who initialized the

1311
01:23:49,219 --> 01:23:52,670
values

1312
01:23:49,969 --> 01:23:54,198
I guess cuz this is the more sensible

1313
01:23:52,670 --> 01:23:55,880
way to write it and that is how she

1314
01:23:54,198 --> 01:23:59,888
wrote it so I'm not sure why that other

1315
01:23:55,880 --> 01:24:01,760
one had something else going on

1316
01:23:59,889 --> 01:24:04,989
unfortunately we still don't know really

1317
01:24:01,760 --> 01:24:04,989
where that came from

1318
01:24:18,309 --> 01:24:22,949
and we're really no closer to knowing

1319
01:24:27,618 --> 01:24:35,768
I mean I guess she just picked a basic

1320
01:24:31,429 --> 01:24:35,769
linear congruential generator there

1321
01:24:44,889 --> 01:24:52,328
is which one of those was picked talked

1322
01:24:49,279 --> 01:24:52,328
about in here

1323
01:25:00,880 --> 01:25:17,869
let's see so that number itself appears

1324
01:25:10,969 --> 01:25:19,909
nowhere in the paper but it might be

1325
01:25:17,869 --> 01:25:21,559
just referenced in the paper to a

1326
01:25:19,909 --> 01:25:24,819
previous random number generator that

1327
01:25:21,560 --> 01:25:24,820
uses that constant

1328
01:26:27,639 --> 01:26:40,458
so yeah I mean it's this is just an LCG

1329
01:26:31,939 --> 01:26:44,168
step but I just don't see I just don't

1330
01:26:40,458 --> 01:26:53,179
see where in here it talks about the

1331
01:26:44,168 --> 01:26:56,689
particular choice I mean we could look

1332
01:26:53,179 --> 01:27:02,359
in here for the multiple good stuff for

1333
01:26:56,689 --> 01:27:05,829
good lcg's 25 so we could look at that

1334
01:27:02,359 --> 01:27:05,829
reference let's take a look here

1335
01:27:18,960 --> 01:27:23,239
that may not be online now unfortunately

1336
01:27:50,840 --> 01:27:56,960
oh man all right the search isn't going

1337
01:27:53,238 --> 01:28:06,169
to work it doesn't correctly identify

1338
01:27:56,960 --> 01:28:08,380
those numbers that's weird that's pretty

1339
01:28:06,170 --> 01:28:08,380
funny

1340
01:28:17,260 --> 01:28:23,900
so yeah it doesn't appear to be a direct

1341
01:28:20,949 --> 01:28:27,139
pull from this table but it could be a

1342
01:28:23,899 --> 01:28:31,389
fold you know of constants from this

1343
01:28:27,140 --> 01:28:31,390
table so it's hard to say

1344
01:29:00,420 --> 01:29:03,420
yeah

1345
01:29:08,488 --> 01:29:12,839
so we're gonna have to do some more

1346
01:29:11,430 --> 01:29:15,539
digging if we want to figure out where

1347
01:29:12,840 --> 01:29:17,100
that's from that's the only part that's

1348
01:29:15,539 --> 01:29:20,430
a little confusing here because I'm not

1349
01:29:17,100 --> 01:29:27,570
really sure how this LCG so you know the

1350
01:29:20,430 --> 01:29:32,880
XOR shift is pretty clear right but the

1351
01:29:27,569 --> 01:29:33,779
this particular LCG update step I don't

1352
01:29:32,880 --> 01:29:36,899
quite know

1353
01:29:33,779 --> 01:29:36,898
[Music]

1354
01:29:48,159 --> 01:29:54,809
I don't quite know where that's coming

1355
01:29:52,689 --> 01:29:54,809
from

1356
01:30:07,679 --> 01:30:14,399
so I guess one thing I could do is

1357
01:30:11,559 --> 01:30:14,400
search for it

1358
01:30:26,770 --> 01:30:28,800
Oh

1359
01:30:37,029 --> 01:30:54,349
interesting so there's our answer so

1360
01:30:50,390 --> 01:30:57,710
it's actually from the I guess original

1361
01:30:54,350 --> 01:30:59,780
Knuth version here although I guess it's

1362
01:30:57,710 --> 01:31:02,149
this it's actually this one since the

1363
01:30:59,779 --> 01:31:06,800
increment he has an increment and we

1364
01:31:02,149 --> 01:31:13,519
don't if that makes sense so I guess

1365
01:31:06,800 --> 01:31:15,440
we're actually talking about this one

1366
01:31:13,520 --> 01:31:18,430
more directly perhaps because it sounds

1367
01:31:15,439 --> 01:31:21,859
like the increment version which is this

1368
01:31:18,430 --> 01:31:23,570
is actually fine to be anything in our

1369
01:31:21,859 --> 01:31:30,819
version where it was a specific version

1370
01:31:23,569 --> 01:31:30,819
in in the mx1 right so

1371
01:31:50,699 --> 01:32:05,099
I guess that gives us everything we need

1372
01:31:57,390 --> 01:32:09,260
to know basically those are all our

1373
01:32:05,100 --> 01:32:12,780
pieces we're doing the Knuth style

1374
01:32:09,260 --> 01:32:17,900
linear congruential generator followed

1375
01:32:12,779 --> 01:32:24,210
by an X or shift followed by a PCG

1376
01:32:17,899 --> 01:32:26,719
rotation or shift and rotation and I

1377
01:32:24,210 --> 01:32:26,720
think that's it

1378
01:32:27,710 --> 01:32:34,980
so in theory if I want to improve the

1379
01:32:30,960 --> 01:32:38,489
quality of this thing then I should be

1380
01:32:34,979 --> 01:32:49,889
able to do so the basic version of it

1381
01:32:38,489 --> 01:32:53,090
would look something like this and then

1382
01:32:49,890 --> 01:32:53,090
we don't actually

1383
01:32:58,569 --> 01:33:03,969
really have a use for this right now but

1384
01:33:01,029 --> 01:33:07,500
it could what that sort of suggests to a

1385
01:33:03,970 --> 01:33:09,909
certain degree is that if we want to

1386
01:33:07,500 --> 01:33:14,680
pick those random numbers we may want to

1387
01:33:09,909 --> 01:33:16,809
use three different streams for better K

1388
01:33:14,680 --> 01:33:18,130
dimensional distribution right like we

1389
01:33:16,810 --> 01:33:20,410
were talking about before in order when

1390
01:33:18,130 --> 01:33:21,970
we pick our XY z-- and Z's may be a

1391
01:33:20,409 --> 01:33:24,609
better way to do that would be to pick

1392
01:33:21,970 --> 01:33:26,409
them from three different stream

1393
01:33:24,609 --> 01:33:31,000
selectors so that they're not picking

1394
01:33:26,409 --> 01:33:38,109
from the same series in order so put

1395
01:33:31,000 --> 01:33:40,238
that on the table this state update we

1396
01:33:38,109 --> 01:33:43,299
can use the old state as does she

1397
01:33:40,238 --> 01:33:44,679
because again she says to maximize ILP

1398
01:33:43,300 --> 01:33:47,619
what she means by that is instruction

1399
01:33:44,680 --> 01:33:50,050
level parallelism the idea here is that

1400
01:33:47,619 --> 01:33:51,609
if we use the state as it comes in we're

1401
01:33:50,050 --> 01:33:53,170
getting the previous random number

1402
01:33:51,609 --> 01:33:54,639
generator act the previous round number

1403
01:33:53,170 --> 01:33:57,579
in the series actually we don't care

1404
01:33:54,640 --> 01:33:59,650
whether we use I minus one or I and the

1405
01:33:57,579 --> 01:34:01,720
point is these computations can start

1406
01:33:59,649 --> 01:34:03,309
before this one finishes that does the

1407
01:34:01,720 --> 01:34:06,699
update so it's just better to use the

1408
01:34:03,310 --> 01:34:09,180
old state than the new state right since

1409
01:34:06,699 --> 01:34:12,970
we don't care whether we use you know

1410
01:34:09,180 --> 01:34:15,970
random number 0 1 2 3 4 5 6 7 8 9 or 1 2

1411
01:34:12,970 --> 01:34:18,100
3 4 5 7 8 9 10 we don't care which which

1412
01:34:15,970 --> 01:34:21,010
one we use we might as well always use

1413
01:34:18,100 --> 01:34:26,380
the the one that's one back if that

1414
01:34:21,010 --> 01:34:34,289
makes sense so I think that's basically

1415
01:34:26,380 --> 01:34:38,190
it and yeah I think that's basically it

1416
01:34:34,289 --> 01:34:42,729
so I want to go ahead and take a look at

1417
01:34:38,189 --> 01:34:45,009
at the the version of this now when we

1418
01:34:42,729 --> 01:34:47,069
do this and how much time you got about

1419
01:34:45,010 --> 01:34:50,140
15 minutes left

1420
01:34:47,069 --> 01:34:50,139
[Music]

1421
01:34:56,779 --> 01:35:02,539
and that uh looks pretty good to me so I

1422
01:35:00,409 --> 01:35:04,609
think that's fine

1423
01:35:02,539 --> 01:35:08,750
in order to random seed one of these

1424
01:35:04,609 --> 01:35:10,729
things though we have to have a seed

1425
01:35:08,750 --> 01:35:12,649
function here how are we doing this

1426
01:35:10,729 --> 01:35:18,799
before yeah we had random seed so we

1427
01:35:12,649 --> 01:35:21,559
need a random seed PCG basically one of

1428
01:35:18,800 --> 01:35:25,880
these and that takes the state and a

1429
01:35:21,560 --> 01:35:29,630
selector and the idea here again is that

1430
01:35:25,880 --> 01:35:33,470
the what it's doing the increment it

1431
01:35:29,630 --> 01:35:35,659
really wants to toggle the that bottom

1432
01:35:33,470 --> 01:35:38,210
one on and off it looks like because

1433
01:35:35,659 --> 01:35:40,880
again the the one always gets ordered in

1434
01:35:38,210 --> 01:35:43,399
here so it's a 1 and then any other

1435
01:35:40,880 --> 01:35:46,100
random bits you want but you're not

1436
01:35:43,399 --> 01:35:54,349
allowed to ever have an even number as

1437
01:35:46,100 --> 01:35:59,510
the increment or for whatever reason so

1438
01:35:54,350 --> 01:36:01,940
when we do a seed state equals the state

1439
01:35:59,510 --> 01:36:05,260
and the selector equals the selector but

1440
01:36:01,939 --> 01:36:10,119
we're going to shove the selector up

1441
01:36:05,260 --> 01:36:13,640
into the we're gonna move it up one

1442
01:36:10,119 --> 01:36:16,519
place when we get it and then make sure

1443
01:36:13,640 --> 01:36:17,930
the bottom bid is always 1 and remember

1444
01:36:16,520 --> 01:36:19,340
that was the part that was a little

1445
01:36:17,930 --> 01:36:26,260
weird about why it was being done in the

1446
01:36:19,340 --> 01:36:28,460
external code that was this part this

1447
01:36:26,260 --> 01:36:30,530
that was the part I was like why are we

1448
01:36:28,460 --> 01:36:32,149
oaring it every time and I guess that's

1449
01:36:30,529 --> 01:36:33,829
just so you can put anything you want in

1450
01:36:32,149 --> 01:36:35,210
here but it's a better way obviously

1451
01:36:33,829 --> 01:36:36,559
just two or at first and then you don't

1452
01:36:35,210 --> 01:36:38,210
have to do that every time right so

1453
01:36:36,560 --> 01:36:44,240
there's no reason not to just do it like

1454
01:36:38,210 --> 01:36:47,350
that alright so if we took that

1455
01:36:44,239 --> 01:36:47,349
[Music]

1456
01:36:50,739 --> 01:36:56,439
I'm making up complete nonsense there I

1457
01:36:56,680 --> 01:37:06,409
second let's see if we get any better

1458
01:37:04,069 --> 01:37:09,079
results here we probably should test

1459
01:37:06,409 --> 01:37:11,590
these random number generators at some

1460
01:37:09,079 --> 01:37:11,590
point as well

1461
01:37:23,090 --> 01:37:34,250
but I just want to take a look and see

1462
01:37:25,319 --> 01:37:34,250
oh my that's awesome

1463
01:37:37,789 --> 01:37:43,800
that is extremely cool not what we

1464
01:37:40,739 --> 01:37:51,899
wanted but very interesting so I have to

1465
01:37:43,800 --> 01:37:53,220
go yeah I have to go back over here and

1466
01:37:51,899 --> 01:38:06,689
make sure I didn't mess anything up here

1467
01:37:53,220 --> 01:38:07,920
um so these I think I don't see anything

1468
01:38:06,689 --> 01:38:13,099
weird happening here although I don't

1469
01:38:07,920 --> 01:38:13,100
know if I have to make sure it will do

1470
01:38:14,569 --> 01:38:29,099
this in 64-bit though but I think it

1471
01:38:19,079 --> 01:38:36,600
will this is wrong and probably had a

1472
01:38:29,100 --> 01:38:44,100
lot to do with it yes unsurprisingly so

1473
01:38:36,600 --> 01:38:46,110
that is the PCG version of things and in

1474
01:38:44,100 --> 01:38:48,920
theory I wrote this so that we can just

1475
01:38:46,109 --> 01:39:03,019
swap between them by changing this to

1476
01:38:48,920 --> 01:39:03,020
not be PC j-just look a little better

1477
01:39:06,630 --> 01:39:17,440
you know maybe it does but again not not

1478
01:39:14,229 --> 01:39:19,689
horrible so I guess on the whole it's

1479
01:39:17,439 --> 01:39:21,339
pretty hard to say I don't see a lot of

1480
01:39:19,689 --> 01:39:22,809
difference amongst these random number

1481
01:39:21,340 --> 01:39:25,300
generators for our purpose

1482
01:39:22,810 --> 01:39:27,300
let me also try one more thing before we

1483
01:39:25,300 --> 01:39:30,010
conclude for the day

1484
01:39:27,300 --> 01:39:43,630
let me try having a different series for

1485
01:39:30,010 --> 01:39:49,530
each of these well that was a incredibly

1486
01:39:43,630 --> 01:39:49,529
non-random set of numbers to put in

1487
01:40:16,020 --> 01:40:21,130
because I'm just curious what happens if

1488
01:40:18,310 --> 01:40:33,850
we do that if there's any major

1489
01:40:21,130 --> 01:40:36,300
difference between those or if it mostly

1490
01:40:33,850 --> 01:40:36,300
looks the same

1491
01:40:45,710 --> 01:41:25,590
and I honestly don't see a lot of

1492
01:40:48,779 --> 01:41:27,210
difference so I mean I could believe

1493
01:41:25,590 --> 01:41:30,300
that there was a imperceptible

1494
01:41:27,210 --> 01:41:31,800
difference between those two I cannot

1495
01:41:30,300 --> 01:41:35,340
believe that there is a significant

1496
01:41:31,800 --> 01:41:37,440
difference between those so as far as

1497
01:41:35,340 --> 01:41:39,739
I'm concerned I don't think we really

1498
01:41:37,439 --> 01:41:39,738
care

1499
01:41:46,939 --> 01:41:55,369
I mean it looks fine the the non-pc g1

1500
01:41:53,000 --> 01:41:57,319
looks just as good so as far as I can

1501
01:41:55,369 --> 01:41:59,510
tell that part is just not super

1502
01:41:57,319 --> 01:42:01,579
relevant like it doesn't look like our

1503
01:41:59,510 --> 01:42:05,800
randomness could be really doing all

1504
01:42:01,579 --> 01:42:10,189
that much damage maybe there's a slight

1505
01:42:05,800 --> 01:42:23,060
bias there but it really just does not

1506
01:42:10,189 --> 01:42:28,759
seem particularly bad to me so yeah I'm

1507
01:42:23,060 --> 01:42:30,380
gonna go and go to the QA because the

1508
01:42:28,760 --> 01:42:31,880
next thing we're gonna do then is just

1509
01:42:30,380 --> 01:42:34,039
go back to the other routine there so

1510
01:42:31,880 --> 01:42:35,829
I'm pretty satisfied that the randomness

1511
01:42:34,039 --> 01:42:40,130
doesn't really make a difference there

1512
01:42:35,829 --> 01:42:43,460
unless I did something wrong in my test

1513
01:42:40,130 --> 01:42:45,230
but visually speaking if there was a

1514
01:42:43,460 --> 01:42:49,760
strong difference between those two I

1515
01:42:45,229 --> 01:42:56,709
should be able to see it and I don't see

1516
01:42:49,760 --> 01:42:56,710
it so that part yeah we'll see

1517
01:43:02,279 --> 01:43:06,309
loketh or you can't have an even number

1518
01:43:04,269 --> 01:43:08,979
as a selector because then the ones that

1519
01:43:06,309 --> 01:43:10,958
would never flip and your period would

1520
01:43:08,979 --> 01:43:13,449
get cut down a few orders of magnitude

1521
01:43:10,958 --> 01:43:20,139
the paper goes over that at some point

1522
01:43:13,448 --> 01:43:21,969
if I remember correctly yeah I guess

1523
01:43:20,139 --> 01:43:26,489
that's true because the X or shift

1524
01:43:21,969 --> 01:43:26,489
doesn't modify the actual state value

1525
01:43:29,849 --> 01:43:43,949
when you write the state part did I have

1526
01:43:33,609 --> 01:43:47,229
a typo there oh I do I do not know why I

1527
01:43:43,948 --> 01:43:48,759
typed it that way let me double check to

1528
01:43:47,229 --> 01:43:51,909
make sure that didn't make a significant

1529
01:43:48,759 --> 01:43:53,469
difference I don't think it will because

1530
01:43:51,908 --> 01:44:03,219
actually that selector can be any value

1531
01:43:53,469 --> 01:44:06,899
I I believe here's the normal version so

1532
01:44:03,219 --> 01:44:06,899
that's using the old way

1533
01:44:07,139 --> 01:44:16,088
here's the PCG version and again pretty

1534
01:44:13,179 --> 01:44:19,469
similar looking if anything I would have

1535
01:44:16,088 --> 01:44:24,509
called it worse for our purposes anyway

1536
01:44:19,469 --> 01:44:24,509
let's try yeah

1537
01:44:32,380 --> 01:44:35,890
so I got nothing

1538
01:44:48,618 --> 01:44:55,799
so yeah so I think like what seems to be

1539
01:44:54,809 --> 01:44:58,409
the case here

1540
01:44:55,800 --> 01:45:01,139
unless I'm missing something is that our

1541
01:44:58,408 --> 01:45:04,429
particular choice of entropy doesn't

1542
01:45:01,139 --> 01:45:04,429
really affect this much

1543
01:45:15,448 --> 01:45:20,498
and look uh sir says the basic piece of

1544
01:45:17,679 --> 01:45:21,878
GPC g32 you're using will only be K

1545
01:45:20,498 --> 01:45:24,188
dimension equal distributed for simple

1546
01:45:21,878 --> 01:45:26,618
u-32 you three two tuples each you

1547
01:45:24,189 --> 01:45:28,359
thirty-two will appear two to the thirty

1548
01:45:26,618 --> 01:45:30,878
two times within the two statistics for

1549
01:45:28,359 --> 01:45:33,489
a period you'll need pc g 64 or an

1550
01:45:30,878 --> 01:45:36,878
extension array if you want KD equi

1551
01:45:33,488 --> 01:45:38,348
equidistant for v3 or more however it

1552
01:45:36,878 --> 01:45:40,059
probably doesn't actually matter free

1553
01:45:38,349 --> 01:45:41,319
rejection because you're unlikely to see

1554
01:45:40,059 --> 01:45:43,479
the time your loop around yeah the

1555
01:45:41,319 --> 01:45:52,389
generator can't loop around in in our

1556
01:45:43,479 --> 01:45:54,729
case right what is your opinion of

1557
01:45:52,389 --> 01:45:56,828
events ystem z-- and how would you

1558
01:45:54,729 --> 01:45:58,780
implement one I'm sorry I'm not sure

1559
01:45:56,828 --> 01:46:04,029
what you mean by an event system that's

1560
01:45:58,779 --> 01:46:06,148
a pretty broad term can you be more

1561
01:46:04,029 --> 01:46:06,148
specific

1562
01:46:42,199 --> 01:46:48,960
is there a way the slack channel can be

1563
01:46:45,000 --> 01:46:50,520
set up that way as newbies can catch up

1564
01:46:48,960 --> 01:46:52,770
and have a place ask questions as I'm

1565
01:46:50,520 --> 01:46:54,030
finding it hard to keep up the earlier

1566
01:46:52,770 --> 01:46:58,650
videos with that a lot of side

1567
01:46:54,029 --> 01:47:01,399
researching well there are forums if

1568
01:46:58,649 --> 01:47:01,399
that's what you mean

1569
01:47:02,510 --> 01:47:09,409
are you talking about actual like voice

1570
01:47:05,039 --> 01:47:09,409
chat or something

1571
01:47:21,260 --> 01:47:24,320
what are we sampling it for what I

1572
01:47:22,789 --> 01:47:26,720
missed out on that part we are just

1573
01:47:24,319 --> 01:47:28,369
trying to make sure that our lighting

1574
01:47:26,720 --> 01:47:30,699
sampling is correct for our lighting

1575
01:47:28,369 --> 01:47:30,699
system

1576
01:47:53,470 --> 01:47:58,150
so why opt for PCG or else visionary

1577
01:47:56,500 --> 01:47:59,770
rather than just hashing the time for a

1578
01:47:58,149 --> 01:48:02,229
random number

1579
01:47:59,770 --> 01:48:06,900
well because hashing the time is

1580
01:48:02,229 --> 01:48:14,250
incredibly expensive and also the time

1581
01:48:06,899 --> 01:48:18,789
is not random if you use it but you know

1582
01:48:14,250 --> 01:48:21,729
let me say this alternately so let's

1583
01:48:18,789 --> 01:48:23,829
suppose you get the time the time on the

1584
01:48:21,729 --> 01:48:27,549
system will only be accurate to a

1585
01:48:23,829 --> 01:48:30,819
certain degree right so if you want it

1586
01:48:27,550 --> 01:48:33,279
so time meaning the actual time you're

1587
01:48:30,819 --> 01:48:35,049
only gonna get it once every you know

1588
01:48:33,279 --> 01:48:37,389
millisecond or something or you know

1589
01:48:35,050 --> 01:48:39,909
some some the actual system time is not

1590
01:48:37,390 --> 01:48:42,039
accurate to to very high right it's less

1591
01:48:39,909 --> 01:48:44,319
than a millisecond it's probably lower

1592
01:48:42,039 --> 01:48:47,470
than that but so you'd have to be

1593
01:48:44,319 --> 01:48:48,599
talking about like are DTSC and are DTSC

1594
01:48:47,470 --> 01:48:53,050
isn't random

1595
01:48:48,600 --> 01:48:55,780
so hashing it to make it into a random

1596
01:48:53,050 --> 01:48:57,550
number would just be another exercise in

1597
01:48:55,779 --> 01:48:59,289
having a random number generator right

1598
01:48:57,550 --> 01:49:01,690
so you'd still do all the work you're

1599
01:48:59,289 --> 01:49:03,369
just doing extra work by calling already

1600
01:49:01,689 --> 01:49:09,429
TSC which you don't need to do because

1601
01:49:03,369 --> 01:49:12,449
it doesn't add entropy right I don't

1602
01:49:09,430 --> 01:49:12,450
know if that makes any sense but

1603
01:49:17,750 --> 01:49:23,479
Oh an event system for communicating

1604
01:49:19,850 --> 01:49:24,770
between interacting systems I mean I

1605
01:49:23,479 --> 01:49:27,409
don't know that there's really much to

1606
01:49:24,770 --> 01:49:28,940
say about it it's just a enum that says

1607
01:49:27,409 --> 01:49:30,619
what the event is and then a package

1608
01:49:28,939 --> 01:49:32,899
that has the information and I don't

1609
01:49:30,619 --> 01:49:34,430
know that there's a lot to it I don't

1610
01:49:32,899 --> 01:49:35,960
tend to think of that as a critically

1611
01:49:34,430 --> 01:49:37,310
important thing like if you've got two

1612
01:49:35,960 --> 01:49:38,689
systems that need to communicate just

1613
01:49:37,310 --> 01:49:41,330
whatever they're trying to communicate I

1614
01:49:38,689 --> 01:49:43,339
just usually send it directly in you

1615
01:49:41,329 --> 01:49:45,199
know like a you know a linked list queue

1616
01:49:43,340 --> 01:49:46,550
or something that's that's really all I

1617
01:49:45,199 --> 01:49:52,340
do I don't I don't get particularly

1618
01:49:46,550 --> 01:49:53,989
fancy in Monte Carlo estimates usually

1619
01:49:52,340 --> 01:49:56,360
error scales like 1 over square root

1620
01:49:53,989 --> 01:49:59,059
samples for 1024 samples one expects

1621
01:49:56,359 --> 01:50:01,509
error in the order of 0.03 and for

1622
01:49:59,060 --> 01:50:03,650
65,000 one expects error on the order of

1623
01:50:01,510 --> 01:50:06,380
0.003 therefore seem to theory you're

1624
01:50:03,649 --> 01:50:11,149
seeing is pretty reasonable yeah it

1625
01:50:06,380 --> 01:50:13,190
might be um but I don't know like I said

1626
01:50:11,149 --> 01:50:15,469
I wanted to make sure we didn't have any

1627
01:50:13,189 --> 01:50:23,960
problems first before I conclude that

1628
01:50:15,470 --> 01:50:26,030
it's okay what would you consider the

1629
01:50:23,960 --> 01:50:27,920
most performant rng despite the accuracy

1630
01:50:26,029 --> 01:50:29,509
I don't know I'm not an expert I know

1631
01:50:27,920 --> 01:50:35,720
almost nothing about random number

1632
01:50:29,510 --> 01:50:38,390
generators so I I really couldn't tell

1633
01:50:35,720 --> 01:50:42,320
you I use X or shift myself a lot

1634
01:50:38,390 --> 01:50:46,910
because it's simple and it's possible to

1635
01:50:42,319 --> 01:50:48,710
do it in sim D PSG's you can't do in sim

1636
01:50:46,909 --> 01:50:51,970
D really because variable shift isn't

1637
01:50:48,710 --> 01:50:59,980
there so like if you're doing SSE 2 or 4

1638
01:50:51,970 --> 01:50:59,980
you can't do a variable shift so yeah

1639
01:51:10,569 --> 01:51:19,579
well when you work on tomorrow I'm just

1640
01:51:13,189 --> 01:51:25,250
gonna take a look at the difference

1641
01:51:19,579 --> 01:51:29,949
between our I'm going to rewrite those

1642
01:51:25,250 --> 01:51:33,140
other routines that we're finding our

1643
01:51:29,949 --> 01:51:35,149
integration test and I'm going to make

1644
01:51:33,140 --> 01:51:38,860
sure that they tend to converge to the

1645
01:51:35,149 --> 01:51:43,609
same output because right now I think I

1646
01:51:38,859 --> 01:51:48,219
I suspect and I could be wrong but I

1647
01:51:43,609 --> 01:51:52,489
suspect that the criteria for blue noise

1648
01:51:48,220 --> 01:51:54,680
fort the cosine distribution so I think

1649
01:51:52,489 --> 01:51:56,869
we need to generate blue noise on the

1650
01:51:54,680 --> 01:52:05,869
sphere directly and then have a cosign

1651
01:51:56,869 --> 01:52:08,630
waiting I'm pretty sure I I'm just

1652
01:52:05,869 --> 01:52:10,699
guessing but I believe we have a problem

1653
01:52:08,630 --> 01:52:14,170
of the following form and I want to

1654
01:52:10,699 --> 01:52:14,170
track it down before we go any further

1655
01:52:15,039 --> 01:52:24,229
so I believe we have a problem that

1656
01:52:17,600 --> 01:52:27,260
looks like conventional wisdom is well

1657
01:52:24,229 --> 01:52:29,629
if you want to generate cosine theta

1658
01:52:27,260 --> 01:52:31,130
distributed points on the on the sphere

1659
01:52:29,630 --> 01:52:34,130
so that you get more points at the top

1660
01:52:31,130 --> 01:52:37,310
and less points at the periphery right

1661
01:52:34,130 --> 01:52:39,440
pointing this way if you want cosine

1662
01:52:37,310 --> 01:52:42,530
gender and a cosine theta fell off of

1663
01:52:39,439 --> 01:52:44,629
them then what you need to do is you

1664
01:52:42,529 --> 01:52:46,519
generate points on a disc that are

1665
01:52:44,630 --> 01:52:49,310
equally distributed and then you project

1666
01:52:46,520 --> 01:52:51,850
them up to the hemisphere which is what

1667
01:52:49,310 --> 01:52:56,330
we did and that gives you a cosine

1668
01:52:51,850 --> 01:52:59,480
weighty distribution now that is if the

1669
01:52:56,329 --> 01:53:03,559
points in this in the disc are randomly

1670
01:52:59,479 --> 01:53:05,599
chosen but blue noise isn't random blue

1671
01:53:03,560 --> 01:53:09,230
noises blue noise not white noise so

1672
01:53:05,600 --> 01:53:11,630
this is for white noise and white noise

1673
01:53:09,229 --> 01:53:14,089
is just wherever right it's completely

1674
01:53:11,630 --> 01:53:17,420
random blue noise if we look at the disk

1675
01:53:14,090 --> 01:53:20,260
it forces things to be spaced

1676
01:53:17,420 --> 01:53:20,260
reasonably

1677
01:53:25,100 --> 01:53:35,699
right what that means is there will be

1678
01:53:29,609 --> 01:53:39,719
more points on the outer edge right then

1679
01:53:35,698 --> 01:53:42,448
on the inside because as you get further

1680
01:53:39,719 --> 01:53:44,189
there's more area of the shape towards

1681
01:53:42,448 --> 01:53:46,649
the perimeter than there is in the

1682
01:53:44,189 --> 01:53:49,879
center that's just the property of

1683
01:53:46,649 --> 01:53:49,879
solids right

1684
01:53:50,210 --> 01:54:01,260
so for a k-dimensional shape the higher

1685
01:53:57,270 --> 01:54:04,469
K is every as you go from one D to 2 to

1686
01:54:01,260 --> 01:54:08,460
3 to 4 T to 5 to 260 270 280 290 that's

1687
01:54:04,469 --> 01:54:13,198
either side etc more and more of the

1688
01:54:08,460 --> 01:54:15,210
total volume is at the border right so

1689
01:54:13,198 --> 01:54:18,929
it's not that bad in 2d buts bad it's

1690
01:54:15,210 --> 01:54:21,420
worse in 3d very bad in 4d by 5 D 60 70

1691
01:54:18,930 --> 01:54:23,010
all the shape is that the border all of

1692
01:54:21,420 --> 01:54:29,760
the volume is at the border all of it

1693
01:54:23,010 --> 01:54:31,590
right it's it's why you know the it's

1694
01:54:29,760 --> 01:54:37,110
the standard pizza thing right if I take

1695
01:54:31,590 --> 01:54:40,170
a look at the if I take a look at a

1696
01:54:37,109 --> 01:54:42,779
circle if I take a look at our half R

1697
01:54:40,170 --> 01:54:45,659
and R if I take a look at these two

1698
01:54:42,779 --> 01:54:48,539
circles and I say what's the area of the

1699
01:54:45,659 --> 01:54:55,309
outer side and the inner side right well

1700
01:54:48,539 --> 01:54:58,680
PI R over 2 squared is this thing right

1701
01:54:55,310 --> 01:55:01,320
PI R squared is the outer circle so this

1702
01:54:58,680 --> 01:55:06,630
is the inner circle this is the outer

1703
01:55:01,319 --> 01:55:14,009
circle okay so the area of the inner one

1704
01:55:06,630 --> 01:55:17,969
is PI R squared over 4 right does that

1705
01:55:14,010 --> 01:55:22,619
make sense because it's PI R squared and

1706
01:55:17,969 --> 01:55:24,210
R in this case is R / - right

1707
01:55:22,619 --> 01:55:29,219
whereas the outer circle is PI R squared

1708
01:55:24,210 --> 01:55:30,300
but the the area in here this part is

1709
01:55:29,219 --> 01:55:32,850
going to be subtracted away so it's

1710
01:55:30,300 --> 01:55:35,150
actually PI R squared for the for the

1711
01:55:32,850 --> 01:55:35,150
ring

1712
01:55:35,640 --> 01:55:43,829
it's PI R squared minus PI R squared

1713
01:55:39,300 --> 01:55:46,590
over four right otherwise known as four

1714
01:55:43,829 --> 01:55:49,829
PI R squared over four minus PI R

1715
01:55:46,590 --> 01:55:56,579
squared over four which is three PI R

1716
01:55:49,829 --> 01:56:06,448
squared over four for three loops three

1717
01:55:56,579 --> 01:56:14,219
quarters PI R squared right so the inner

1718
01:56:06,448 --> 01:56:16,738
one is 1/4 PI R squared would be one way

1719
01:56:14,219 --> 01:56:21,539
to think of it versus three quarters PI

1720
01:56:16,738 --> 01:56:24,769
R squared right and like which one of

1721
01:56:21,539 --> 01:56:28,590
those is bigger well like that one right

1722
01:56:24,770 --> 01:56:30,239
so what I'm trying to get out here is

1723
01:56:28,590 --> 01:56:32,369
that if you look at how this

1724
01:56:30,238 --> 01:56:38,428
distribution ends up being weighted if

1725
01:56:32,369 --> 01:56:40,769
you assume that we are forcing even

1726
01:56:38,429 --> 01:56:43,170
coverage across the whole thing there's

1727
01:56:40,770 --> 01:56:46,620
a lot more points in that outer ring

1728
01:56:43,170 --> 01:56:48,810
than in the interior where as if we were

1729
01:56:46,619 --> 01:56:50,670
randomly picking points I don't know

1730
01:56:48,810 --> 01:56:54,870
that that would necessarily be true it

1731
01:56:50,670 --> 01:56:57,090
probably is but I'm not sure so I I

1732
01:56:54,869 --> 01:57:01,319
can't say for sure whether R the fact

1733
01:56:57,090 --> 01:57:02,819
that we have an equal coverage biases

1734
01:57:01,319 --> 01:57:04,109
things towards the outside because

1735
01:57:02,819 --> 01:57:05,779
there's more room to put them out there

1736
01:57:04,109 --> 01:57:10,219
and we're going to put them out there as

1737
01:57:05,779 --> 01:57:12,750
opposed to if we just randomly pick them

1738
01:57:10,219 --> 01:57:15,569
so this should be true for white noise

1739
01:57:12,750 --> 01:57:17,939
or blue noise I think but it's pretty

1740
01:57:15,569 --> 01:57:20,429
complicated and I just I can't guarantee

1741
01:57:17,939 --> 01:57:23,399
that I just don't know if it's true and

1742
01:57:20,429 --> 01:57:25,670
so without looking into it I can't say

1743
01:57:23,399 --> 01:57:25,670
for sure

1744
01:57:30,310 --> 01:57:34,000
can you see the current state of the

1745
01:57:31,600 --> 01:57:40,120
lighting yes I we do have a test we can

1746
01:57:34,000 --> 01:57:42,729
move around here so the white area

1747
01:57:40,119 --> 01:57:44,979
outside is the area that's outside the

1748
01:57:42,729 --> 01:57:46,119
visible region in the game so we aren't

1749
01:57:44,979 --> 01:57:48,159
running the lighting on it and the

1750
01:57:46,119 --> 01:57:55,809
inside is the area that we are running

1751
01:57:48,159 --> 01:58:02,529
the lighting on and I can move this

1752
01:57:55,810 --> 01:58:05,530
light around so you can kind of see how

1753
01:58:02,529 --> 01:58:07,750
that lighting is being calculated right

1754
01:58:05,529 --> 01:58:10,750
now we're not really using the lighting

1755
01:58:07,750 --> 01:58:12,939
points maximally because the renderer

1756
01:58:10,750 --> 01:58:15,850
doesn't really use them distributed the

1757
01:58:12,939 --> 01:58:18,819
way that it should so we will be doing a

1758
01:58:15,850 --> 01:58:21,190
few things to make it smooth through

1759
01:58:18,819 --> 01:58:22,659
here which we may or may not want I

1760
01:58:21,189 --> 01:58:24,029
don't know how much we want to reinforce

1761
01:58:22,659 --> 01:58:28,180
the blockiness

1762
01:58:24,029 --> 01:58:30,189
of the game's geometry we may want to

1763
01:58:28,180 --> 01:58:35,770
reinforce it in which case we would not

1764
01:58:30,189 --> 01:58:38,319
do what I just said but you know there

1765
01:58:35,770 --> 01:58:39,489
you go so the lighting seems to be

1766
01:58:38,319 --> 01:58:41,469
working pretty good right now but we

1767
01:58:39,488 --> 01:58:42,968
just don't have a handle on whether our

1768
01:58:41,469 --> 01:58:44,260
sampling weighting is correct and so

1769
01:58:42,969 --> 01:58:47,520
that's the part that I wanted to take a

1770
01:58:44,260 --> 01:58:47,520
look at right

1771
01:59:03,859 --> 01:59:08,339
is there an intention to support shows

1772
01:59:06,029 --> 01:59:09,988
from the point lights no because we

1773
01:59:08,340 --> 01:59:12,300
don't have any point lights we only have

1774
01:59:09,988 --> 01:59:14,158
area lights so we just use diffuse

1775
01:59:12,300 --> 01:59:20,639
lighting right now and we're not going

1776
01:59:14,158 --> 01:59:21,929
to do direct shadowing and again that's

1777
01:59:20,639 --> 01:59:24,060
because we don't currently have a

1778
01:59:21,929 --> 01:59:26,940
concept of a light source everything in

1779
01:59:24,060 --> 01:59:31,039
the game is gives a light source in a

1780
01:59:26,939 --> 01:59:31,039
sense so lighting comes from everywhere

1781
01:59:56,229 --> 02:00:03,599
be near a marching volumetric fluid

1782
01:59:59,470 --> 02:00:03,600
stuff no I don't think so

1783
02:00:20,868 --> 02:00:26,328
all right click we are out of questions

1784
02:00:42,250 --> 02:00:45,729
all right thank you everyone for joining

1785
02:00:44,140 --> 02:00:46,960
me for another episode of hand made here

1786
02:00:45,729 --> 02:00:49,479
it's a pleasure coding with you as

1787
02:00:46,960 --> 02:00:52,420
always if you want to play around the

1788
02:00:49,479 --> 02:00:53,949
source code at home you can always go to

1789
02:00:52,420 --> 02:00:55,480
the game on handmade hero or gonna come

1790
02:00:53,949 --> 02:00:58,899
to the source code if you want to play

1791
02:00:55,479 --> 02:01:01,329
around with it tomorrow we will take a

1792
02:00:58,899 --> 02:01:04,479
look at the actual integration thing

1793
02:01:01,329 --> 02:01:06,640
again and see whether or not we think we

1794
02:01:04,479 --> 02:01:08,739
need to modify it in some way to make it

1795
02:01:06,640 --> 02:01:10,060
more accurate because right now I'm

1796
02:01:08,739 --> 02:01:12,989
still a little concerned that it's not

1797
02:01:10,060 --> 02:01:15,490
really doing a properly cosine weighted

1798
02:01:12,989 --> 02:01:17,050
distribution on the sphere due to what

1799
02:01:15,489 --> 02:01:18,880
happens when you project blue noise on a

1800
02:01:17,050 --> 02:01:21,130
disc up to a hemisphere I'm just not

1801
02:01:18,880 --> 02:01:22,680
sure about it I have a bad feeling about

1802
02:01:21,130 --> 02:01:24,640
it

1803
02:01:22,680 --> 02:01:26,590
so that's we're gonna take a look at I

1804
02:01:24,640 --> 02:01:28,530
think we've eliminated the entropy

1805
02:01:26,590 --> 02:01:30,550
source as a problem today I'm pretty

1806
02:01:28,529 --> 02:01:33,789
confident that we're not having any

1807
02:01:30,550 --> 02:01:35,050
significant error coming from that so I

1808
02:01:33,789 --> 02:01:37,210
think we can just rule that out now and

1809
02:01:35,050 --> 02:01:39,369
we can just look at the blue noise

1810
02:01:37,210 --> 02:01:42,640
projection part and figure out if that's

1811
02:01:39,369 --> 02:01:43,599
okay so that's about it I'll be back

1812
02:01:42,640 --> 02:01:45,460
here tomorrow hope to see you all for

1813
02:01:43,600 --> 02:01:47,079
that until then have fun programming and

1814
02:01:45,460 --> 02:01:49,560
I'll see everyone on the Internet take

1815
02:01:47,079 --> 02:01:49,559
it easy everybody

