1
00:00:00,890 --> 00:00:04,949
hello everyone and welcome to hand made

2
00:00:03,870 --> 00:00:08,039
here of the show where we code a

3
00:00:04,950 --> 00:00:12,300
complete game live on stream no engine

4
00:00:08,039 --> 00:00:15,480
no libraries it's just us here and right

5
00:00:12,300 --> 00:00:18,990
now we are we're kind of a little bit of

6
00:00:15,480 --> 00:00:21,420
a of a wind and we did a bunch of work

7
00:00:18,989 --> 00:00:23,570
to both make our renderer operate in

8
00:00:21,420 --> 00:00:25,490
Sindhi and to make the renderer operate

9
00:00:23,570 --> 00:00:27,750
multi-threaded which turned out to be

10
00:00:25,489 --> 00:00:30,390
actually incredibly beneficial because

11
00:00:27,750 --> 00:00:34,140
our renderer now runs 1920 by 1080 at 60

12
00:00:30,390 --> 00:00:36,750
frames a second which was so far in a

13
00:00:34,140 --> 00:00:41,820
way above what I was planning on making

14
00:00:36,750 --> 00:00:45,570
sure we hit I was thinking we would just

15
00:00:41,820 --> 00:00:47,730
try to maybe do a quarter of that at 30

16
00:00:45,570 --> 00:00:50,399
frames a second so I was we were 8 times

17
00:00:47,729 --> 00:00:54,689
faster right now than I was thinking our

18
00:00:50,399 --> 00:00:57,570
target would be and I don't know what to

19
00:00:54,689 --> 00:00:59,218
make of that other than God gosh

20
00:00:57,570 --> 00:01:02,909
machines are fast I guess is what I'd

21
00:00:59,219 --> 00:01:04,760
say but we do have now a bunch of sort

22
00:01:02,909 --> 00:01:07,530
of cleanup work that we have to do

23
00:01:04,760 --> 00:01:08,609
because we kind of were like pushing

24
00:01:07,530 --> 00:01:10,019
through the renderer and doing

25
00:01:08,609 --> 00:01:11,159
explorations there to try and get things

26
00:01:10,019 --> 00:01:13,319
going but now we kind of want to

27
00:01:11,159 --> 00:01:15,240
solidify the render into something that

28
00:01:13,319 --> 00:01:17,599
actually renders the the game reliably

29
00:01:15,239 --> 00:01:19,408
in the way that we want it to and so

30
00:01:17,599 --> 00:01:21,959
there's a couple things that have to

31
00:01:19,409 --> 00:01:24,060
happen for that and we kind of want to

32
00:01:21,959 --> 00:01:25,469
go through and sort those out so we're

33
00:01:24,060 --> 00:01:29,280
gonna do that that is what we're going

34
00:01:25,469 --> 00:01:31,530
to do now and if you would like to join

35
00:01:29,280 --> 00:01:34,140
me as we do that at home today is day

36
00:01:31,530 --> 00:01:37,140
1:30 which means you can unpack day 1:29

37
00:01:34,140 --> 00:01:38,849
source code and you will if you start

38
00:01:37,140 --> 00:01:39,719
with that you will start exactly where I

39
00:01:38,849 --> 00:01:42,539
am

40
00:01:39,719 --> 00:01:48,899
right now so let's go ahead and open

41
00:01:42,540 --> 00:01:52,200
things up here ok and so where we left

42
00:01:48,899 --> 00:01:55,290
off yesterday we had gotten to the point

43
00:01:52,200 --> 00:01:56,159
where we you know we have these sort of

44
00:01:55,290 --> 00:01:57,630
splatty

45
00:01:56,159 --> 00:01:59,609
things happening right these little

46
00:01:57,629 --> 00:02:01,978
these little splat patterns that we were

47
00:01:59,609 --> 00:02:04,739
making our ground tiles in and I noticed

48
00:02:01,978 --> 00:02:06,239
that we had some seams in them and so

49
00:02:04,739 --> 00:02:08,519
what I wanted to do now that we've got

50
00:02:06,239 --> 00:02:10,919
the the renderer kind of working the way

51
00:02:08,520 --> 00:02:11,719
that we expected to and stuff I would

52
00:02:10,919 --> 00:02:14,239
like to go in

53
00:02:11,719 --> 00:02:15,560
investigate to see if we can figure out

54
00:02:14,240 --> 00:02:18,469
if there's anything in particular

55
00:02:15,560 --> 00:02:21,740
happening with these seams that should

56
00:02:18,469 --> 00:02:24,770
concern us and there's a couple reasons

57
00:02:21,740 --> 00:02:27,680
why that's gonna be a little bit of look

58
00:02:24,770 --> 00:02:29,960
it's gonna take some work for for

59
00:02:27,680 --> 00:02:32,030
starters we don't actually know where

60
00:02:29,960 --> 00:02:33,590
the seams are coming from there could be

61
00:02:32,030 --> 00:02:35,780
tons of places where those seams are

62
00:02:33,590 --> 00:02:37,670
coming from we could have a bug in our

63
00:02:35,780 --> 00:02:40,370
source art where it doesn't have

64
00:02:37,669 --> 00:02:42,949
completely smooth alpha right we could

65
00:02:40,370 --> 00:02:44,900
have a bug in our code that actually

66
00:02:42,949 --> 00:02:47,049
blitz these tiles to the screen such

67
00:02:44,900 --> 00:02:49,189
that they're not meeting up perfectly

68
00:02:47,050 --> 00:02:50,930
which would mean that like actually we

69
00:02:49,189 --> 00:02:52,639
would be seamless if they were put into

70
00:02:50,930 --> 00:02:54,230
a different location we could have a

71
00:02:52,639 --> 00:02:56,509
problem with the way that we're doing

72
00:02:54,229 --> 00:02:59,750
our splats such that when we produce a

73
00:02:56,509 --> 00:03:01,639
ground tile we're not correctly layering

74
00:02:59,750 --> 00:03:04,849
in the other splats from the other tiles

75
00:03:01,639 --> 00:03:07,669
there's just a ton of places where that

76
00:03:04,849 --> 00:03:11,359
that you know that problem could be

77
00:03:07,669 --> 00:03:13,699
occurring right and so it's like I said

78
00:03:11,360 --> 00:03:15,200
very difficult for us to kind of start

79
00:03:13,699 --> 00:03:17,719
to think about what is actually going on

80
00:03:15,199 --> 00:03:20,379
there so what I'd like to do is start

81
00:03:17,719 --> 00:03:23,989
doing some experiments so I can try to

82
00:03:20,379 --> 00:03:25,969
get you know just to see kind of like

83
00:03:23,989 --> 00:03:27,349
you know basically taking the thing and

84
00:03:25,969 --> 00:03:29,719
shaking it a little and seeing if we can

85
00:03:27,349 --> 00:03:31,039
hear anything rattle around inside so

86
00:03:29,719 --> 00:03:32,599
that I can see whether there is

87
00:03:31,039 --> 00:03:35,150
something in particular that I should be

88
00:03:32,599 --> 00:03:36,739
looking for or if I need to really just

89
00:03:35,150 --> 00:03:40,849
do a completely general walkthrough

90
00:03:36,739 --> 00:03:43,009
right and so the first thing that I'm

91
00:03:40,849 --> 00:03:47,239
going to do to try and take the source

92
00:03:43,009 --> 00:03:48,439
art out of the equation is I would like

93
00:03:47,239 --> 00:03:50,539
to play around a little with what

94
00:03:48,439 --> 00:03:52,579
sourced art is actually being used so

95
00:03:50,539 --> 00:03:56,329
that we can see and there's something

96
00:03:52,580 --> 00:03:57,830
that's kind of unusual I would say about

97
00:03:56,330 --> 00:04:01,219
the patterns that I'm seeing here and I

98
00:03:57,830 --> 00:04:04,459
want to point it out to you just so you

99
00:04:01,219 --> 00:04:07,159
can kind of be on a similar page right

100
00:04:04,459 --> 00:04:09,409
and the thing that I find that's pretty

101
00:04:07,159 --> 00:04:12,439
unusual about what I'm seeing is like

102
00:04:09,409 --> 00:04:15,430
you know when I look and you can kind of

103
00:04:12,439 --> 00:04:18,709
see here I wonder if we should maybe

104
00:04:15,430 --> 00:04:20,030
zoom in on this in fact I think maybe we

105
00:04:18,709 --> 00:04:22,129
should so that we can see it a little

106
00:04:20,029 --> 00:04:23,629
bit more carefully let me go ahead and

107
00:04:22,129 --> 00:04:27,949
and

108
00:04:23,629 --> 00:04:32,779
to make a little smaller version of our

109
00:04:27,949 --> 00:04:34,639
window here so in the renderer now we

110
00:04:32,779 --> 00:04:37,939
should be able to zoom in essentially

111
00:04:34,639 --> 00:04:40,399
for free right because since we pass a

112
00:04:37,939 --> 00:04:44,420
focal length in when we do our

113
00:04:40,399 --> 00:04:46,219
perspective transform right we can in

114
00:04:44,420 --> 00:04:51,590
fact I'll go ahead and put those here we

115
00:04:46,220 --> 00:04:56,780
have a focal length right and we also

116
00:04:51,589 --> 00:05:01,310
have a distance above-ground right so if

117
00:04:56,779 --> 00:05:03,859
we want to we can go ahead and change

118
00:05:01,310 --> 00:05:05,660
that distance above-ground right so you

119
00:05:03,860 --> 00:05:07,220
know here it is at nine or whatever but

120
00:05:05,660 --> 00:05:10,280
if we wanted to move closer we could

121
00:05:07,220 --> 00:05:11,990
change it to five right and so we have

122
00:05:10,279 --> 00:05:14,509
the ability to just kind of now that our

123
00:05:11,990 --> 00:05:16,400
renderer actually works and does all

124
00:05:14,509 --> 00:05:18,889
kinds of fancy things we can do stuff

125
00:05:16,399 --> 00:05:23,239
like that and it's no big deal and so

126
00:05:18,889 --> 00:05:27,079
you know zooming in on this and looking

127
00:05:23,240 --> 00:05:30,400
at it right I have to say that even just

128
00:05:27,079 --> 00:05:34,490
just looking at it right now and kind of

129
00:05:30,399 --> 00:05:39,589
eyeballing it I would say that it it

130
00:05:34,490 --> 00:05:41,329
looks to me a lot like this it looks to

131
00:05:39,589 --> 00:05:45,859
me a lot like this is just a little bit

132
00:05:41,329 --> 00:05:47,449
too low right it looks like it's a UH or

133
00:05:45,860 --> 00:05:48,770
I should say or this is too high right

134
00:05:47,449 --> 00:05:51,199
it looks to me like if this were just

135
00:05:48,769 --> 00:05:52,609
moved down a little bit you would not

136
00:05:51,199 --> 00:05:55,159
have this problem I'm gonna go ahead and

137
00:05:52,610 --> 00:05:58,220
zoom in even further just so we can

138
00:05:55,160 --> 00:06:00,860
really see what's going on there but I

139
00:05:58,220 --> 00:06:03,110
don't know if you can kind of see I feel

140
00:06:00,860 --> 00:06:05,509
like this right here if this removed

141
00:06:03,110 --> 00:06:07,580
down in this line were to continue right

142
00:06:05,509 --> 00:06:10,159
that this would kind of be in the

143
00:06:07,579 --> 00:06:12,680
correct place a little bit lower and so

144
00:06:10,160 --> 00:06:15,170
you know I don't really know for sure I

145
00:06:12,680 --> 00:06:17,689
can't say for sure but I'm just looking

146
00:06:15,170 --> 00:06:20,870
at it it feels a little bit like that's

147
00:06:17,689 --> 00:06:23,810
the case to me and so maybe that is the

148
00:06:20,870 --> 00:06:25,129
first thing that I will do to try and

149
00:06:23,810 --> 00:06:27,230
look for the problem is see whether

150
00:06:25,129 --> 00:06:30,079
these things are lining up properly and

151
00:06:27,230 --> 00:06:31,460
so in order to do that the first thing

152
00:06:30,079 --> 00:06:33,050
that I'm going to try is when we

153
00:06:31,459 --> 00:06:34,668
actually render these ground tiles I'm

154
00:06:33,050 --> 00:06:36,540
going to see what happens if I start

155
00:06:34,668 --> 00:06:38,039
moving them to separating them

156
00:06:36,540 --> 00:06:41,129
a little bit further from where they

157
00:06:38,040 --> 00:06:44,069
should be according to what would line

158
00:06:41,129 --> 00:06:45,779
up and when I do that I want to see what

159
00:06:44,069 --> 00:06:49,019
I'm looking for is I want to see whether

160
00:06:45,779 --> 00:06:51,149
I see but a crack between them or not

161
00:06:49,019 --> 00:06:53,579
because I should see a crack form

162
00:06:51,149 --> 00:06:55,469
between them when I separate them but if

163
00:06:53,579 --> 00:06:57,930
they continue to sort of separate and

164
00:06:55,470 --> 00:06:59,760
draw into the gap that I know that the

165
00:06:57,930 --> 00:07:01,350
way that I'm drawing them they're

166
00:06:59,759 --> 00:07:02,969
actually being drawn too close together

167
00:07:01,350 --> 00:07:05,430
and they're overlapping each other which

168
00:07:02,970 --> 00:07:07,260
is not I want them to abut right and so

169
00:07:05,430 --> 00:07:10,290
that would you know just that alone

170
00:07:07,259 --> 00:07:12,689
would definitely cause a scene so let's

171
00:07:10,290 --> 00:07:14,819
go ahead and and look at where we're

172
00:07:12,689 --> 00:07:16,529
calling that right so here's our ground

173
00:07:14,819 --> 00:07:17,819
chunk rendering and when we do the

174
00:07:16,529 --> 00:07:20,429
ground chunk rendering we're pushing it

175
00:07:17,819 --> 00:07:22,980
on here and we're calling ground side in

176
00:07:20,430 --> 00:07:24,509
meters which looks like exactly what we

177
00:07:22,980 --> 00:07:28,170
would have expected it to be so that

178
00:07:24,509 --> 00:07:30,959
that seems pretty good when we do the

179
00:07:28,170 --> 00:07:32,910
push bitmap call so it feels like it

180
00:07:30,959 --> 00:07:34,049
should be roughly the right thing in

181
00:07:32,910 --> 00:07:36,120
fact you know what I could do that's

182
00:07:34,050 --> 00:07:37,860
even easier than that what I could do is

183
00:07:36,120 --> 00:07:40,680
start to multiply this by a value to

184
00:07:37,860 --> 00:07:42,330
shrink them down right so let me go

185
00:07:40,680 --> 00:07:44,939
ahead and multiply that by something to

186
00:07:42,329 --> 00:07:46,560
shrink them down okay so now what I'm

187
00:07:44,939 --> 00:07:49,889
going to do is I'm going to back them up

188
00:07:46,560 --> 00:07:51,980
until they just exactly touch and then

189
00:07:49,889 --> 00:07:55,289
I'm going to see you know is that number

190
00:07:51,980 --> 00:07:58,460
actually the right is that actually at

191
00:07:55,290 --> 00:08:02,000
1.0 or is it a little bit past 1.0 right

192
00:07:58,459 --> 00:08:02,000
if that makes sense

193
00:08:02,540 --> 00:08:11,189
all right so at nine nine nine nine

194
00:08:06,980 --> 00:08:13,379
there they go they've joined right so it

195
00:08:11,189 --> 00:08:16,110
looks like we're actually we're drawing

196
00:08:13,379 --> 00:08:19,050
them at the right size right there's no

197
00:08:16,110 --> 00:08:21,199
they are they are exactly a budding

198
00:08:19,050 --> 00:08:27,750
there doesn't appear to be anything

199
00:08:21,199 --> 00:08:29,050
funky going on with that right far as I

200
00:08:27,750 --> 00:08:32,860
can tell

201
00:08:29,050 --> 00:08:35,408
that looks totally fine so I I don't

202
00:08:32,860 --> 00:08:37,120
think we have any problem with our pixel

203
00:08:35,408 --> 00:08:38,439
fill here although there is one thing

204
00:08:37,120 --> 00:08:40,658
that we don't quite do yet with our

205
00:08:38,440 --> 00:08:42,640
pixel fill that we probably do need to

206
00:08:40,658 --> 00:08:45,220
do for to be absolutely perfect but in

207
00:08:42,639 --> 00:08:47,889
terms of visible artifacts I don't think

208
00:08:45,220 --> 00:08:50,079
that's actually causing any you can see

209
00:08:47,889 --> 00:08:52,838
this guy this flat right here for

210
00:08:50,078 --> 00:08:54,849
example also has that seam and again if

211
00:08:52,839 --> 00:08:57,970
I if I change it so that we just

212
00:08:54,850 --> 00:09:00,009
separate them even a baby bit you can

213
00:08:57,970 --> 00:09:04,829
see that there's nothing there so so

214
00:09:00,009 --> 00:09:07,809
it's not it's not a case of that right

215
00:09:04,828 --> 00:09:09,338
so now the the next thing that we have

216
00:09:07,809 --> 00:09:11,169
to think about right and and I'm I'm

217
00:09:09,339 --> 00:09:13,029
hoping that this has something to do

218
00:09:11,169 --> 00:09:16,169
with it because we kind of need to go

219
00:09:13,028 --> 00:09:20,289
address this in general anyway and that

220
00:09:16,169 --> 00:09:23,500
is that you remember inside the renderer

221
00:09:20,289 --> 00:09:26,500
we did not actually figure out what we

222
00:09:23,500 --> 00:09:29,078
were going to do with with the tiling in

223
00:09:26,500 --> 00:09:30,399
here and so this is kind of and in fact

224
00:09:29,078 --> 00:09:32,500
now that I think about it there's a

225
00:09:30,399 --> 00:09:35,320
there's a couple things that we have to

226
00:09:32,500 --> 00:09:37,480
talk about here and in fact one of them

227
00:09:35,320 --> 00:09:40,060
would cause the seam one of them will

228
00:09:37,480 --> 00:09:41,589
definitely cause the seam so now that I

229
00:09:40,059 --> 00:09:43,088
think about it we would have had a scene

230
00:09:41,589 --> 00:09:45,100
from this even if we didn't have a scene

231
00:09:43,089 --> 00:09:46,930
from anything else so this is kind of

232
00:09:45,100 --> 00:09:48,909
interesting and we'll have to talk about

233
00:09:46,929 --> 00:09:50,949
that in a second but if you remember

234
00:09:48,909 --> 00:09:52,360
here right we had this formalized

235
00:09:50,950 --> 00:09:53,980
texture boundaries thing and we never

236
00:09:52,360 --> 00:09:57,430
really did that and so you know if you

237
00:09:53,980 --> 00:10:01,089
think about what happens here if we're

238
00:09:57,429 --> 00:10:03,129
not exactly sampling the textures 100%

239
00:10:01,089 --> 00:10:06,430
properly then obviously we're going to

240
00:10:03,129 --> 00:10:08,078
have a problem with that and we need to

241
00:10:06,429 --> 00:10:11,319
figure out what we're going to do to

242
00:10:08,078 --> 00:10:13,120
address that because the bilinear you

243
00:10:11,320 --> 00:10:15,540
know implies a lot of stuff here

244
00:10:13,120 --> 00:10:17,860
so let me go to the blackboard and

245
00:10:15,539 --> 00:10:19,750
explain what I was just realizing there

246
00:10:17,860 --> 00:10:22,269
because I feel like that's that's going

247
00:10:19,750 --> 00:10:24,159
to be crucial to us getting us into a

248
00:10:22,269 --> 00:10:29,528
state where it is perfectly seen three

249
00:10:24,159 --> 00:10:31,149
seam free so there's day 1:30 and what I

250
00:10:29,528 --> 00:10:33,360
want to talk about here is I want to

251
00:10:31,149 --> 00:10:35,470
talk about bilinear filtering and the

252
00:10:33,360 --> 00:10:38,009
implications it has for rendering things

253
00:10:35,470 --> 00:10:38,009
and tiles

254
00:10:38,720 --> 00:10:46,340
okay so here's what we currently have

255
00:10:42,419 --> 00:10:48,870
right we currently have some tiles and

256
00:10:46,340 --> 00:10:50,550
let's say for the sake of argument right

257
00:10:48,870 --> 00:10:52,049
that these tiles don't have a lot of

258
00:10:50,549 --> 00:10:53,339
pixels in them now we made our tiles

259
00:10:52,049 --> 00:10:55,709
much bigger than this our tiles or

260
00:10:53,340 --> 00:10:58,320
something like 256 by 256 but let's say

261
00:10:55,710 --> 00:11:01,620
they were actually just 6x6 which is

262
00:10:58,320 --> 00:11:04,680
what I happen to draw here right and so

263
00:11:01,620 --> 00:11:07,409
right up abutting next to this guy right

264
00:11:04,679 --> 00:11:13,559
is gonna be another right there's

265
00:11:07,409 --> 00:11:15,629
another dude in here okay and so here's

266
00:11:13,559 --> 00:11:18,479
one ground chunk and here's the next

267
00:11:15,629 --> 00:11:22,769
ground chunk now there's a couple things

268
00:11:18,480 --> 00:11:24,600
if I want these to actually be when we

269
00:11:22,769 --> 00:11:26,309
draw them on the screen if I want these

270
00:11:24,600 --> 00:11:28,560
to actually be correct there's a couple

271
00:11:26,309 --> 00:11:30,449
things that have to be true the first

272
00:11:28,559 --> 00:11:32,159
thing is that I have to properly draw

273
00:11:30,450 --> 00:11:34,850
two all the pixels which we just checked

274
00:11:32,159 --> 00:11:38,129
and the second thing is that the the

275
00:11:34,850 --> 00:11:39,659
color values that are chosen for the

276
00:11:38,129 --> 00:11:43,649
pixels that happen to be like right

277
00:11:39,659 --> 00:11:45,149
around here have to line up exactly at

278
00:11:43,649 --> 00:11:47,370
the edge with the same colors that would

279
00:11:45,149 --> 00:11:50,009
be chosen here so like the pixels chosen

280
00:11:47,370 --> 00:11:52,110
here have to be the exact you know they

281
00:11:50,009 --> 00:11:55,019
have to be exactly on the function right

282
00:11:52,110 --> 00:11:56,490
if the if the if the if the color values

283
00:11:55,019 --> 00:11:58,409
if let's say this was grayscale or

284
00:11:56,490 --> 00:12:00,629
something right and the color value

285
00:11:58,409 --> 00:12:02,429
curve kind of looked like this we have

286
00:12:00,629 --> 00:12:04,320
to make sure that we are like producing

287
00:12:02,429 --> 00:12:06,809
pixels that are right along the color

288
00:12:04,320 --> 00:12:09,030
values right and that there isn't some

289
00:12:06,809 --> 00:12:12,719
discontinuous step that would be

290
00:12:09,029 --> 00:12:14,970
perceptible at this boundary right the

291
00:12:12,720 --> 00:12:16,200
example would be suppose you know if you

292
00:12:14,970 --> 00:12:17,639
think of this more as a function or

293
00:12:16,200 --> 00:12:19,290
something like this that you could

294
00:12:17,639 --> 00:12:20,879
visualize a little bit more easily in 1d

295
00:12:19,289 --> 00:12:23,339
you know suppose that I were to draw a

296
00:12:20,879 --> 00:12:24,990
sine wave of grayscale values right in

297
00:12:23,340 --> 00:12:28,920
there so you know actually I guess it

298
00:12:24,990 --> 00:12:30,690
would look more like this right so if we

299
00:12:28,919 --> 00:12:34,409
were if we were to have white here and

300
00:12:30,690 --> 00:12:37,170
black down here you know if I were to

301
00:12:34,409 --> 00:12:39,000
draw this in and we were to take samples

302
00:12:37,169 --> 00:12:40,559
at these you know we were drawing these

303
00:12:39,000 --> 00:12:44,070
in here or whatever we would want to

304
00:12:40,559 --> 00:12:45,959
make sure that as we redrew this on to

305
00:12:44,070 --> 00:12:48,089
the screen that we didn't have some

306
00:12:45,960 --> 00:12:49,620
discontinuous jump across this boundary

307
00:12:48,089 --> 00:12:51,930
that was different from the jump it was

308
00:12:49,620 --> 00:12:54,629
here right so when it's filling

309
00:12:51,929 --> 00:12:57,870
and it's going like okay you know I was

310
00:12:54,629 --> 00:13:00,120
here and then I was here right if the

311
00:12:57,870 --> 00:13:02,519
next one is over here you're gonna see

312
00:13:00,120 --> 00:13:03,659
that is wrong right or if it's like

313
00:13:02,519 --> 00:13:05,189
right here or something

314
00:13:03,659 --> 00:13:07,439
you're gonna see that's wrong because

315
00:13:05,190 --> 00:13:09,149
the person's expecting it to look like

316
00:13:07,440 --> 00:13:10,800
it was at a different place right

317
00:13:09,149 --> 00:13:12,720
because they'll see that discontinuity

318
00:13:10,799 --> 00:13:15,449
it's a little hard to understand I guess

319
00:13:12,720 --> 00:13:16,740
but you know when you're talking about

320
00:13:15,450 --> 00:13:18,240
looking at something like a seam you

321
00:13:16,740 --> 00:13:20,759
know you can imagine things a little

322
00:13:18,240 --> 00:13:22,320
more dramatic right if a line was

323
00:13:20,759 --> 00:13:24,389
passing through these pixels like this

324
00:13:22,320 --> 00:13:26,220
you couldn't then have the line kind of

325
00:13:24,389 --> 00:13:28,199
pass through like that over here right

326
00:13:26,220 --> 00:13:30,120
because you'd see that little jump no

327
00:13:28,200 --> 00:13:33,149
matter how tiny it is you know unless it

328
00:13:30,120 --> 00:13:37,620
was it's essentially well below a pixel

329
00:13:33,149 --> 00:13:39,149
you have that problem right and so the

330
00:13:37,620 --> 00:13:41,190
reason that I bring all this up is

331
00:13:39,149 --> 00:13:47,399
because we actually have a problem here

332
00:13:41,190 --> 00:13:53,070
that we are not addressing right the

333
00:13:47,399 --> 00:13:55,620
problem is that we have a function that

334
00:13:53,070 --> 00:13:58,709
we're actually using to reconstruct

335
00:13:55,620 --> 00:14:01,560
smooth colors from a bitmap right it's

336
00:13:58,708 --> 00:14:03,359
our bilinear filtering function right so

337
00:14:01,559 --> 00:14:05,429
our whole thing does this by linear

338
00:14:03,360 --> 00:14:07,409
filter function where it blends whenever

339
00:14:05,429 --> 00:14:09,359
you ask for like a color here it blends

340
00:14:07,409 --> 00:14:12,778
between these four colors to produce

341
00:14:09,360 --> 00:14:14,639
what the color is right and so think

342
00:14:12,778 --> 00:14:17,730
about what that does on the edge here

343
00:14:14,639 --> 00:14:20,220
okay what that needs to do on the edge

344
00:14:17,730 --> 00:14:23,070
here is as you start drawing out to this

345
00:14:20,220 --> 00:14:25,470
edge this edge actually needs to produce

346
00:14:23,070 --> 00:14:28,589
the halfway point between this pixel and

347
00:14:25,470 --> 00:14:31,970
this pixel but the problem is this pixel

348
00:14:28,589 --> 00:14:35,130
exists in a different bitmap right

349
00:14:31,970 --> 00:14:37,860
because here is this is tile B and this

350
00:14:35,129 --> 00:14:40,379
is tile a so how is the renderer ever

351
00:14:37,860 --> 00:14:43,850
going to know what color to produce out

352
00:14:40,379 --> 00:14:45,809
here right it can't possibly know

353
00:14:43,850 --> 00:14:48,680
hopefully you can see why that's a

354
00:14:45,809 --> 00:14:48,679
little bit of a problem right

355
00:14:51,659 --> 00:14:58,240
so we have a pretty significant problem

356
00:14:54,220 --> 00:15:01,930
that we would have to that we have to

357
00:14:58,240 --> 00:15:04,450
resolve their we have to find a way that

358
00:15:01,929 --> 00:15:05,949
we can fix this this problem you know we

359
00:15:04,450 --> 00:15:09,220
have to find a way that we can do our

360
00:15:05,950 --> 00:15:12,129
sampling in a way that doesn't have this

361
00:15:09,220 --> 00:15:15,550
issue and so what I think I might

362
00:15:12,129 --> 00:15:17,669
propose because I don't think I can't

363
00:15:15,549 --> 00:15:20,139
think of a lot of reasons not to do it

364
00:15:17,669 --> 00:15:22,569
what I might propose for this game is

365
00:15:20,139 --> 00:15:25,059
that instead of our texture mapping

366
00:15:22,570 --> 00:15:28,390
being based on texture mapping an entire

367
00:15:25,059 --> 00:15:30,699
rectangle like this what I'm thinking is

368
00:15:28,389 --> 00:15:33,340
what if we were to base it on on texture

369
00:15:30,700 --> 00:15:37,840
mapping a rectangle that had one pixels

370
00:15:33,340 --> 00:15:40,420
worth of stuff around it right so what

371
00:15:37,840 --> 00:15:44,350
we would actually do is we actually have

372
00:15:40,419 --> 00:15:46,629
you know this here is so instead of if

373
00:15:44,350 --> 00:15:50,139
we had a six pixel bitmap we would

374
00:15:46,629 --> 00:15:53,470
actually interpret it right as four

375
00:15:50,139 --> 00:15:58,720
pixels by four pixels with a one pixel

376
00:15:53,470 --> 00:16:01,600
border all the way around it okay does

377
00:15:58,720 --> 00:16:05,649
that make sense and so this one pixel

378
00:16:01,600 --> 00:16:07,180
border everywhere around it stores what

379
00:16:05,649 --> 00:16:10,269
the color would be in the adjoining

380
00:16:07,179 --> 00:16:13,149
thing so that when we then draw another

381
00:16:10,269 --> 00:16:16,029
one next to it right we just make sure

382
00:16:13,149 --> 00:16:18,159
that it has in that border pixel a copy

383
00:16:16,029 --> 00:16:20,339
of what the other person's pixel would

384
00:16:18,159 --> 00:16:24,189
have been so that the function is

385
00:16:20,340 --> 00:16:26,670
reconstructed properly hopefully that

386
00:16:24,190 --> 00:16:26,670
makes some sense

387
00:16:27,870 --> 00:16:37,799
so that's what I would propose this also

388
00:16:34,620 --> 00:16:39,779
works out kind of nicely actually

389
00:16:37,799 --> 00:16:42,029
now that I think about it the reason it

390
00:16:39,779 --> 00:16:44,250
works out kind of nicely is in order to

391
00:16:42,029 --> 00:16:46,500
get proper anti-aliasing for our sprites

392
00:16:44,250 --> 00:16:48,690
we want a one pixel border around all of

393
00:16:46,500 --> 00:16:50,669
them that is filled with nothing so that

394
00:16:48,690 --> 00:16:51,990
it always bilinear is out two to zero so

395
00:16:50,669 --> 00:16:54,889
that way we're always fetching into the

396
00:16:51,990 --> 00:16:58,889
texture we don't have any hard borders

397
00:16:54,889 --> 00:17:00,629
so I feel like you know that's probably

398
00:16:58,889 --> 00:17:02,549
something that we would want anyway I'm

399
00:17:00,629 --> 00:17:03,809
just thinking I mean I'm percent

400
00:17:02,549 --> 00:17:04,889
positive I think that's high so we want

401
00:17:03,809 --> 00:17:06,769
anyway so I feel like what we'll

402
00:17:04,890 --> 00:17:08,850
probably do is we'll just go with this

403
00:17:06,769 --> 00:17:10,170
so that's something we definitely have

404
00:17:08,849 --> 00:17:11,459
to fix so since it's something we

405
00:17:10,170 --> 00:17:18,269
definitely have to fix I'm just going to

406
00:17:11,460 --> 00:17:19,680
go ahead and fix it so yeah so first

407
00:17:18,269 --> 00:17:21,779
thing I'm going to do to fix that is

408
00:17:19,680 --> 00:17:24,210
think about how we're doing our UVs here

409
00:17:21,779 --> 00:17:28,740
right what I want to do is make it so

410
00:17:24,210 --> 00:17:31,950
our UVs are at that first pixel when

411
00:17:28,740 --> 00:17:34,170
they're at 0 0 right and so what that

412
00:17:31,950 --> 00:17:38,309
means is that when we actually sample

413
00:17:34,170 --> 00:17:41,460
into a texture when we have our 0 0 it's

414
00:17:38,309 --> 00:17:43,500
actually not going to be at it's not

415
00:17:41,460 --> 00:17:47,370
gonna be at the bottom corner rectangle

416
00:17:43,500 --> 00:17:52,130
quickly yeah so let's go in here and

417
00:17:47,369 --> 00:17:55,049
take a look at that right so here we go

418
00:17:52,130 --> 00:17:57,660
in here here's our textile fetch right

419
00:17:55,049 --> 00:18:05,149
you can see our fetching and when we do

420
00:17:57,660 --> 00:18:09,269
the fetching we're doing enough of our

421
00:18:05,150 --> 00:18:11,759
fetch XXY right and so what we want to

422
00:18:09,269 --> 00:18:12,150
do here is we want to do in fact our

423
00:18:11,759 --> 00:18:18,629
width

424
00:18:12,150 --> 00:18:24,530
m2 and our height ma m2 I think is

425
00:18:18,630 --> 00:18:24,530
actually kind of correct

426
00:18:24,930 --> 00:18:29,440
that's that's actually getting pretty

427
00:18:26,890 --> 00:18:33,190
close correct but let's just let's just

428
00:18:29,440 --> 00:18:39,580
finish so what we want to do here is say

429
00:18:33,190 --> 00:18:41,980
okay well yes so we want to say is the

430
00:18:39,579 --> 00:18:44,019
zero zero coordinate of this would be

431
00:18:41,980 --> 00:18:46,059
like right here so this would be the

432
00:18:44,019 --> 00:18:49,269
zero zero texture coordinate right and

433
00:18:46,059 --> 00:18:50,679
this is like a non you know this is this

434
00:18:49,269 --> 00:18:53,680
is a value that no one would ever be

435
00:18:50,680 --> 00:18:55,420
allowed to actually sample from it's

436
00:18:53,680 --> 00:18:57,130
strictly there because we will be

437
00:18:55,420 --> 00:18:59,350
sampling kind of back from it or

438
00:18:57,130 --> 00:19:02,350
whatever so the zero zero value is

439
00:18:59,349 --> 00:19:05,559
actually gonna sample you know starting

440
00:19:02,349 --> 00:19:07,119
starting from this guy now I got to

441
00:19:05,559 --> 00:19:09,419
think about this a little bit let's

442
00:19:07,119 --> 00:19:11,649
think about this a little carefully here

443
00:19:09,420 --> 00:19:12,789
because we also have another thing which

444
00:19:11,650 --> 00:19:16,150
we need to think about which is the

445
00:19:12,789 --> 00:19:17,470
pixels themselves right so let's suppose

446
00:19:16,150 --> 00:19:21,009
we're bleeding this and we're bleeding

447
00:19:17,470 --> 00:19:23,620
it you know to an actual place where

448
00:19:21,009 --> 00:19:25,960
it's it's completely aligned so we're

449
00:19:23,619 --> 00:19:28,899
doing this and we want to draw you know

450
00:19:25,960 --> 00:19:36,519
we want to draw from here so if we were

451
00:19:28,900 --> 00:19:39,430
to pass in a fill like so right this

452
00:19:36,519 --> 00:19:42,220
would be whatever this pixel coordinate

453
00:19:39,430 --> 00:19:44,410
is right and this would be whatever this

454
00:19:42,220 --> 00:19:46,029
pixel coordinate is at the center so

455
00:19:44,410 --> 00:19:49,269
let's say that we're talking about the

456
00:19:46,029 --> 00:19:52,480
center of a pixel right and so if

457
00:19:49,269 --> 00:19:55,210
something's one two three wide it would

458
00:19:52,480 --> 00:19:57,400
be that big and if it's four wide right

459
00:19:55,210 --> 00:20:05,559
it would be out to here right

460
00:19:57,400 --> 00:20:12,460
one two three four like so so I have to

461
00:20:05,559 --> 00:20:17,529
think about that one two three four

462
00:20:12,460 --> 00:20:21,490
yes so if we assume that we're using

463
00:20:17,529 --> 00:20:23,200
again that that's sort of if we assume

464
00:20:21,490 --> 00:20:25,390
that we're using that fill rule where

465
00:20:23,200 --> 00:20:31,509
we're basically saying if you know if

466
00:20:25,390 --> 00:20:33,670
your maximum is less than the pixel then

467
00:20:31,509 --> 00:20:35,589
you wouldn't fill it right so something

468
00:20:33,670 --> 00:20:38,659
that's four wide would just barely not

469
00:20:35,589 --> 00:20:41,089
fill this guy so I think that's a

470
00:20:38,659 --> 00:20:44,679
pretty traditional way of doing pixel

471
00:20:41,089 --> 00:20:46,608
centers I am NOT mr. pixel center so

472
00:20:44,679 --> 00:20:53,210
someone who's a graphics expert can

473
00:20:46,608 --> 00:20:55,819
correct me if I'm wrong but so if we

474
00:20:53,210 --> 00:20:57,679
were to draw it to that pixel then

475
00:20:55,819 --> 00:21:01,028
drawing to that pixel I guess what I'm

476
00:20:57,679 --> 00:21:05,359
saying is we'd want that to map to here

477
00:21:01,028 --> 00:21:07,460
right and then when we specify this guy

478
00:21:05,358 --> 00:21:11,148
here right

479
00:21:07,460 --> 00:21:13,489
I would guess it would map to there all

480
00:21:11,148 --> 00:21:17,148
right so let me see what that actually

481
00:21:13,489 --> 00:21:19,720
gives us so if this is a right then

482
00:21:17,148 --> 00:21:22,189
we're sampling right in the middle of a

483
00:21:19,720 --> 00:21:26,239
which is what I think we would want to

484
00:21:22,190 --> 00:21:27,889
do again we have to kind of back this

485
00:21:26,239 --> 00:21:29,389
out into the actual calculation in a

486
00:21:27,888 --> 00:21:31,339
minute but we would want to set up right

487
00:21:29,388 --> 00:21:35,028
in the middle of a here we would want a

488
00:21:31,339 --> 00:21:37,398
sample right in the middle of B see B C

489
00:21:35,028 --> 00:21:39,288
and D and that's good and this would

490
00:21:37,398 --> 00:21:44,168
actually start to sample the in-between

491
00:21:39,288 --> 00:21:48,558
of these two as it goes that way right

492
00:21:44,169 --> 00:21:50,359
so I think that is correct because that

493
00:21:48,558 --> 00:21:52,368
is what would guarantee a stability to

494
00:21:50,358 --> 00:21:54,648
do both blitz so what you can see here

495
00:21:52,368 --> 00:21:56,388
is there's like a point five offset

496
00:21:54,648 --> 00:22:00,408
between these two things in some sense

497
00:21:56,388 --> 00:22:04,278
right meaning that we want a sample

498
00:22:00,409 --> 00:22:07,580
right in the middle of a which in the

499
00:22:04,278 --> 00:22:11,450
middle of a is actually this is actually

500
00:22:07,579 --> 00:22:13,970
zero zero in the bitmap sense right so

501
00:22:11,450 --> 00:22:16,940
if our texture coordinates are 0 0 here

502
00:22:13,970 --> 00:22:23,298
that's actually negative 0.5 negative

503
00:22:16,940 --> 00:22:25,399
0.5 in pin texels right because the text

504
00:22:23,298 --> 00:22:28,460
will look up has to use integers if that

505
00:22:25,398 --> 00:22:30,228
makes sense so we want the integer 0 0

506
00:22:28,460 --> 00:22:33,499
to line up right here

507
00:22:30,229 --> 00:22:35,989
essentially so I think that's roughly

508
00:22:33,499 --> 00:22:40,249
correct with the pixel centers so I'm

509
00:22:35,989 --> 00:22:42,950
going to try to make that work that way

510
00:22:40,249 --> 00:22:45,979
and I believe we're already doing pixel

511
00:22:42,950 --> 00:22:48,200
centers this way if I'm not mistaken

512
00:22:45,979 --> 00:22:51,619
meaning that the pixels coordinate is

513
00:22:48,200 --> 00:22:52,309
right at its center that's already sort

514
00:22:51,618 --> 00:22:56,179
of the way we were

515
00:22:52,309 --> 00:23:01,250
conceptualizing it but yeah III guess I

516
00:22:56,180 --> 00:23:03,789
haven't been 100% thorough on that we do

517
00:23:01,250 --> 00:23:06,170
need to do something for our fill rule

518
00:23:03,789 --> 00:23:08,659
right now I think we would fill these

519
00:23:06,170 --> 00:23:11,480
pixels and we probably don't want to do

520
00:23:08,660 --> 00:23:13,250
that but that's a separate issue anyway

521
00:23:11,480 --> 00:23:14,509
although I guess the Alpha there would

522
00:23:13,250 --> 00:23:18,259
be zero anyway doesn't matter

523
00:23:14,509 --> 00:23:20,119
point being so if we're gonna do this we

524
00:23:18,259 --> 00:23:22,549
first need to figure out how to adjust

525
00:23:20,119 --> 00:23:25,759
these texture coordinates right and so

526
00:23:22,549 --> 00:23:27,740
at a what we want to produce if if we

527
00:23:25,759 --> 00:23:29,329
were in this scenario right the reason I

528
00:23:27,740 --> 00:23:31,220
say that we want to bias it is because

529
00:23:29,329 --> 00:23:34,549
remember we're gonna do a bilinear blend

530
00:23:31,220 --> 00:23:36,470
right so we have memory right we've got

531
00:23:34,549 --> 00:23:41,960
our memory out here that actually has

532
00:23:36,470 --> 00:23:45,140
the texture things in it a b c d e f

533
00:23:41,960 --> 00:23:48,460
right and if we fetch from zero zero

534
00:23:45,140 --> 00:23:53,060
we're gonna get a right and if we fetch

535
00:23:48,460 --> 00:23:55,490
from you know 0.5 0.5 we're still gonna

536
00:23:53,059 --> 00:23:58,039
get a right but we're gonna grab some of

537
00:23:55,490 --> 00:24:00,980
B F and E right we're gonna go halfway

538
00:23:58,039 --> 00:24:02,990
to them right and that's not what we

539
00:24:00,980 --> 00:24:05,809
actually wanted what we actually want

540
00:24:02,990 --> 00:24:10,519
now is we want zero zero to sort of to

541
00:24:05,809 --> 00:24:13,250
to map to and in between we want zero

542
00:24:10,519 --> 00:24:15,079
zero to be the in between of whatever

543
00:24:13,250 --> 00:24:17,809
these negative pixels are these border

544
00:24:15,079 --> 00:24:19,159
pixels and a right that's what zero zero

545
00:24:17,809 --> 00:24:25,399
should be it should actually be a blend

546
00:24:19,160 --> 00:24:27,980
and point 5.5 of a Texel which again we

547
00:24:25,400 --> 00:24:31,509
don't know if this is a 4x4 then what's

548
00:24:27,980 --> 00:24:36,740
0.5 of that it's going to be point zero

549
00:24:31,509 --> 00:24:39,710
soaps 0.5 of a Texel in UV coordinates

550
00:24:36,740 --> 00:24:43,359
is going to be 0.5 divided by 4 right so

551
00:24:39,710 --> 00:24:46,670
0.1 something if that makes sense

552
00:24:43,359 --> 00:24:49,250
so in UV coordinates right we need to do

553
00:24:46,670 --> 00:24:51,710
that we need to do that bias right we

554
00:24:49,250 --> 00:24:55,390
need to bias it by that half Texel

555
00:24:51,710 --> 00:24:55,390
that's just something we have to do

556
00:24:55,880 --> 00:25:02,970
okay so let's take a look at how we

557
00:24:59,940 --> 00:25:06,920
might do that it's kind of fun to have

558
00:25:02,970 --> 00:25:06,920
this guy so giant he's huge

559
00:25:07,579 --> 00:25:16,799
alright so what I want to do here is I

560
00:25:14,910 --> 00:25:18,870
want to say okay first of all we'll deal

561
00:25:16,799 --> 00:25:20,279
with the scaling a little bit later

562
00:25:18,869 --> 00:25:22,919
we'll talk about scaling a little bit

563
00:25:20,279 --> 00:25:25,019
later but what we want to do here before

564
00:25:22,920 --> 00:25:27,539
we do our fetch right when we compute

565
00:25:25,019 --> 00:25:31,230
the UV coordinates we want to be able to

566
00:25:27,539 --> 00:25:34,950
bias the UV coordinates in Texel space

567
00:25:31,230 --> 00:25:37,799
in order to get them into this correct

568
00:25:34,950 --> 00:25:40,019
position here right so we want to bias

569
00:25:37,799 --> 00:25:43,769
them in texture space we want to bias

570
00:25:40,019 --> 00:25:47,819
them I think by negative 0.5 negative

571
00:25:43,769 --> 00:25:50,099
0.5 right from where they were but we

572
00:25:47,819 --> 00:25:52,279
also want to account for the phantom row

573
00:25:50,099 --> 00:25:55,769
of pixels that's going to be there right

574
00:25:52,279 --> 00:26:01,139
that we're not mapping so we really want

575
00:25:55,769 --> 00:26:04,049
to add 0.5 0.5 because you know we're

576
00:26:01,140 --> 00:26:06,090
starting here and we want to to bias by

577
00:26:04,049 --> 00:26:08,490
0.5 point 5 so we want to to basically

578
00:26:06,089 --> 00:26:11,669
say like we want to bias by 1 and then

579
00:26:08,490 --> 00:26:13,109
subtract 0.5 right of a Texel so after

580
00:26:11,670 --> 00:26:14,820
we've already multiplied by the width to

581
00:26:13,109 --> 00:26:17,699
put us into textile space I think that's

582
00:26:14,819 --> 00:26:18,929
what we want to do right now I don't

583
00:26:17,700 --> 00:26:20,430
know if we actually have that value

584
00:26:18,930 --> 00:26:24,630
loaded it seems like a value that we

585
00:26:20,430 --> 00:26:26,190
might keep loaded let's see here for you

586
00:26:24,630 --> 00:26:30,210
know for other reasons but I don't

587
00:26:26,190 --> 00:26:33,509
actually remember it doesn't look like

588
00:26:30,210 --> 00:26:35,130
we have 1/2 here I do not do not see it

589
00:26:33,509 --> 00:26:38,730
so I'm going to go ahead and introduce

590
00:26:35,130 --> 00:26:42,210
one I'm just gonna introduce 1/2 right

591
00:26:38,730 --> 00:26:44,730
and that's just 0.5 and so what I want

592
00:26:42,210 --> 00:26:47,640
to do now when we compute our fetch

593
00:26:44,730 --> 00:26:51,960
coordinates again I want to go ahead and

594
00:26:47,640 --> 00:26:56,460
and compute those I want to go ahead and

595
00:26:51,960 --> 00:27:00,329
compute those with a bias and so in here

596
00:26:56,460 --> 00:27:03,430
we basically have an mm add PS right and

597
00:27:00,329 --> 00:27:09,730
I'm gonna bias them right

598
00:27:03,430 --> 00:27:15,910
see here like so so this is sea bias

599
00:27:09,730 --> 00:27:26,400
texture coordinates by plus or by minus

600
00:27:15,910 --> 00:27:32,820
one texels plus 0.5 texels to produce

601
00:27:26,400 --> 00:27:35,980
proper alignment or sampling all right

602
00:27:32,819 --> 00:27:37,539
so if we assume that we do that right

603
00:27:35,980 --> 00:27:40,269
and so we assume that we're going to

604
00:27:37,539 --> 00:27:42,279
step it properly so that that is aligned

605
00:27:40,269 --> 00:27:44,889
there then the other question I have is

606
00:27:42,279 --> 00:27:47,230
how far we want it to actually go and

607
00:27:44,890 --> 00:27:51,190
again I think we're actually doing that

608
00:27:47,230 --> 00:27:52,960
properly already by saying the width

609
00:27:51,190 --> 00:27:56,710
minus 2 because whatever the width of

610
00:27:52,960 --> 00:27:59,170
this texture actually is right we want

611
00:27:56,710 --> 00:28:02,140
to take out two of the pixels basically

612
00:27:59,170 --> 00:28:03,880
right we want we want to not count two

613
00:28:02,140 --> 00:28:06,970
rows and two columns right so I think

614
00:28:03,880 --> 00:28:11,260
with minus two is actually the proper

615
00:28:06,970 --> 00:28:13,470
thing that we would want to have happen

616
00:28:11,259 --> 00:28:13,470
there

617
00:28:14,950 --> 00:28:24,069
yeah so that seems reasonable oh I don't

618
00:28:21,009 --> 00:28:26,259
know no no I did that I did that wrong

619
00:28:24,069 --> 00:28:29,289
I'm sorry I take it back

620
00:28:26,259 --> 00:28:32,079
I take it back we are trying to put

621
00:28:29,289 --> 00:28:34,539
ourselves into pixel space so this is

622
00:28:32,079 --> 00:28:41,460
not it's it's the other it's the other

623
00:28:34,539 --> 00:28:46,178
way around right so we are here right

624
00:28:41,460 --> 00:28:50,558
and we have this phantom row of pixels

625
00:28:46,179 --> 00:28:54,910
so we want zero zero to map to one one

626
00:28:50,558 --> 00:29:03,279
right right - point five point five so

627
00:28:54,910 --> 00:29:06,000
it's actually just adding maybe maybe I

628
00:29:03,279 --> 00:29:06,000
did do it correctly

629
00:29:12,339 --> 00:29:22,158
I've confused my own self let me say it

630
00:29:17,599 --> 00:29:25,819
one more time so this is the way it goes

631
00:29:22,159 --> 00:29:29,390
sometimes so here's our phantom pixel in

632
00:29:25,819 --> 00:29:35,269
the texture map we want zero zero to map

633
00:29:29,390 --> 00:29:38,090
to here right which is in pixel chord in

634
00:29:35,269 --> 00:29:43,658
texels in the bitmap it's point five

635
00:29:38,089 --> 00:29:46,279
point five so I feel like I I just I

636
00:29:43,659 --> 00:29:48,860
guess I did it sort of properly by

637
00:29:46,279 --> 00:29:53,149
accident bias the texture coordinates to

638
00:29:48,859 --> 00:29:59,269
start on the boundary between the

639
00:29:53,150 --> 00:30:02,720
zeroeth and first pixels guess I'll say

640
00:29:59,269 --> 00:30:12,190
this 0 0 &amp; 1 1 pixel right and I think

641
00:30:02,720 --> 00:30:16,669
that is what does that right yeah I

642
00:30:12,190 --> 00:30:17,480
think that is what does that so that

643
00:30:16,669 --> 00:30:19,730
seems right to me

644
00:30:17,480 --> 00:30:21,470
alright I wrote the right code or well

645
00:30:19,730 --> 00:30:25,370
it's probably very premature to say

646
00:30:21,470 --> 00:30:27,440
that's right I wrote some code and and

647
00:30:25,369 --> 00:30:31,759
it was you know not what I expected it

648
00:30:27,440 --> 00:30:33,940
to be alright anyway so all that did was

649
00:30:31,759 --> 00:30:35,990
introduced that little bit of bias there

650
00:30:33,940 --> 00:30:39,919
and so that shouldn't really change

651
00:30:35,990 --> 00:30:42,319
anything all that much but now we at

652
00:30:39,919 --> 00:30:46,549
least have that phantom set of pixels

653
00:30:42,319 --> 00:30:48,379
and and that again we can sort of try to

654
00:30:46,548 --> 00:30:49,490
debug later with little structure to

655
00:30:48,380 --> 00:30:52,130
make sure that it's actually working

656
00:30:49,490 --> 00:30:58,400
and then in terms of how big this

657
00:30:52,130 --> 00:31:01,460
actually is in terms of how big it

658
00:30:58,400 --> 00:31:06,140
actually is like I said before I feel

659
00:31:01,460 --> 00:31:08,569
like it's still correct in terms of the

660
00:31:06,140 --> 00:31:12,730
width - and hide - - so I think that was

661
00:31:08,569 --> 00:31:14,379
actually right so that's my assumption

662
00:31:12,730 --> 00:31:16,089
can't say for sure whether it's correct

663
00:31:14,380 --> 00:31:18,520
but I think that's basically what we

664
00:31:16,089 --> 00:31:24,339
wanted to do in terms of textile centers

665
00:31:18,519 --> 00:31:27,160
alright so going back to the the chunk

666
00:31:24,339 --> 00:31:29,139
rendering now what this implies right is

667
00:31:27,160 --> 00:31:31,090
that we need essentially an apron when

668
00:31:29,140 --> 00:31:34,270
we do Phil Gramm chunk we need an apron

669
00:31:31,089 --> 00:31:36,339
of pixels around the thing to make sure

670
00:31:34,269 --> 00:31:38,859
that it's always got whatever the

671
00:31:36,339 --> 00:31:40,209
neighboring pixel is and so really all

672
00:31:38,859 --> 00:31:43,929
that is is when we set up this

673
00:31:40,210 --> 00:31:48,039
orthographic render right we just need

674
00:31:43,930 --> 00:31:50,830
to make sure that our size is actually 2

675
00:31:48,039 --> 00:31:54,279
pixels less in terms or I should say 2

676
00:31:50,829 --> 00:31:56,079
pixels more than it would actually

677
00:31:54,279 --> 00:31:59,369
otherwise be right because we're gonna

678
00:31:56,079 --> 00:32:03,720
grinder into this but we need to capture

679
00:31:59,369 --> 00:32:08,589
essentially a different area into that

680
00:32:03,720 --> 00:32:12,519
so this is what we are you know

681
00:32:08,589 --> 00:32:18,519
ostensibly capturing right but what we

682
00:32:12,519 --> 00:32:19,930
actually want to do in terms of this is

683
00:32:18,519 --> 00:32:22,750
how much you want to capture but we want

684
00:32:19,930 --> 00:32:24,759
an extra apron around it right so what

685
00:32:22,750 --> 00:32:29,500
we really want to do is say well not

686
00:32:24,759 --> 00:32:33,640
quite we actually want the width here

687
00:32:29,500 --> 00:32:34,119
right to be as if you added two pixels

688
00:32:33,640 --> 00:32:37,840
to it

689
00:32:34,119 --> 00:32:41,319
right and knowing how much to pixels is

690
00:32:37,839 --> 00:32:43,539
in terms of meters again we would have

691
00:32:41,319 --> 00:32:45,299
to know what the pixels 2 meters is here

692
00:32:43,539 --> 00:32:47,859
which happens to be what we're actually

693
00:32:45,299 --> 00:32:51,549
computing if that makes sense because

694
00:32:47,859 --> 00:32:58,629
right here we've got our meters 2 pixels

695
00:32:51,549 --> 00:33:03,399
right our original value is this so this

696
00:32:58,630 --> 00:33:06,300
is like original meters 2 pixels and so

697
00:33:03,400 --> 00:33:06,300
what we would want to do

698
00:33:11,190 --> 00:33:20,440
let me actually draw out the map a lot

699
00:33:15,460 --> 00:33:22,720
of finicky math today all right so we've

700
00:33:20,440 --> 00:33:28,600
got a thing here that we're drawing in

701
00:33:22,720 --> 00:33:30,880
right and it's 256 by 256 but what we

702
00:33:28,599 --> 00:33:34,769
want to do is make sure that the actual

703
00:33:30,880 --> 00:33:37,600
region that that occupies in world space

704
00:33:34,769 --> 00:33:39,460
so you know this this region maps to

705
00:33:37,599 --> 00:33:44,079
some to some area of the ground right

706
00:33:39,460 --> 00:33:47,460
that's going to be drawn at 255 254 by

707
00:33:44,079 --> 00:33:54,269
254 right so we need to do is make sure

708
00:33:47,460 --> 00:33:54,269
that actually this 254 by 254 region

709
00:33:54,630 --> 00:34:02,850
right 254 by 254 the Tiffany for my 24

710
00:33:59,710 --> 00:34:09,898
region is what actually has to map to

711
00:34:02,849 --> 00:34:13,659
the the Tiffany 4 by 254 region actually

712
00:34:09,898 --> 00:34:17,168
needs to be the full size and meters

713
00:34:13,659 --> 00:34:18,940
right so we do our meters to pixels I

714
00:34:17,168 --> 00:34:21,730
guess all we really have to do is say Oh

715
00:34:18,940 --> 00:34:25,119
pretend that you had 2 less pixels here

716
00:34:21,730 --> 00:34:27,070
right and figure out whatever that you

717
00:34:25,119 --> 00:34:29,529
know take what whatever you thought you

718
00:34:27,070 --> 00:34:32,740
were going to cover and cover 2 pixels

719
00:34:29,530 --> 00:34:36,760
less than that right and I think that

720
00:34:32,739 --> 00:34:40,000
will give us that that apron around the

721
00:34:36,760 --> 00:34:41,320
edge right so I got actually we've run

722
00:34:40,000 --> 00:34:46,929
it to see what that will actually do

723
00:34:41,320 --> 00:34:48,070
since grand chunks don't get redone of

724
00:34:46,929 --> 00:34:50,679
course now I don't remember where the

725
00:34:48,070 --> 00:34:55,210
seam was let's go down to where the seam

726
00:34:50,679 --> 00:34:59,789
was there it is and hey look the seam is

727
00:34:55,210 --> 00:35:04,940
gone what do you know

728
00:34:59,789 --> 00:35:07,529
that was surprisingly easy

729
00:35:04,940 --> 00:35:08,579
a lot of finicky math there where you

730
00:35:07,530 --> 00:35:18,060
have to kind of think it through but

731
00:35:08,579 --> 00:35:21,420
then it ends up being to love that we

732
00:35:18,059 --> 00:35:24,480
added point five in one place and we

733
00:35:21,420 --> 00:35:28,110
subtracted two in another and suddenly

734
00:35:24,480 --> 00:35:36,420
all the seams are gone ladies and

735
00:35:28,110 --> 00:35:37,980
gentlemen you know that is something

736
00:35:36,420 --> 00:35:41,700
that's so satisfying when you're

737
00:35:37,980 --> 00:35:43,619
programming when you're just like okay I

738
00:35:41,699 --> 00:35:45,299
thought it through I knew what was

739
00:35:43,619 --> 00:35:47,159
supposed to happen I figured out a

740
00:35:45,300 --> 00:35:50,910
problem and I corrected it and it

741
00:35:47,159 --> 00:35:54,359
actually worked when you did it when you

742
00:35:50,909 --> 00:35:58,589
when you thought it through right just

743
00:35:54,360 --> 00:36:01,530
super satisfying so there we go

744
00:35:58,590 --> 00:36:02,789
I it looks like we got rid of a fair bit

745
00:36:01,530 --> 00:36:04,560
of the seeming I don't know if we've got

746
00:36:02,789 --> 00:36:07,650
rid of all of it it's a little hard to

747
00:36:04,559 --> 00:36:09,619
tell now because again some of that is

748
00:36:07,650 --> 00:36:11,730
it's hard to say whether it's art or not

749
00:36:09,619 --> 00:36:15,109
and that kind of looks like that's

750
00:36:11,730 --> 00:36:19,050
probably art but it's really hard to say

751
00:36:15,110 --> 00:36:21,420
so but the hard seams that I was seeing

752
00:36:19,050 --> 00:36:24,180
before are now gone and so that's at

753
00:36:21,420 --> 00:36:25,860
least a good thing and like so like

754
00:36:24,179 --> 00:36:27,929
something like that right there I can't

755
00:36:25,860 --> 00:36:29,640
quite tell if that's something that

756
00:36:27,929 --> 00:36:33,089
would that is a reasonable or

757
00:36:29,639 --> 00:36:34,609
unreasonable in terms of seeming so we I

758
00:36:33,090 --> 00:36:37,140
think we might still have you know

759
00:36:34,610 --> 00:36:39,539
something that maybe isn't necessarily

760
00:36:37,139 --> 00:36:41,759
about the sampling boundary but that is

761
00:36:39,539 --> 00:36:45,000
producing some harder seams than we

762
00:36:41,760 --> 00:36:50,870
might want right just trying to look

763
00:36:45,000 --> 00:36:54,389
around so if I turn off the red green

764
00:36:50,869 --> 00:36:58,339
stuff here that we were using are kind

765
00:36:54,389 --> 00:37:07,909
of like pink dye if you will

766
00:36:58,340 --> 00:37:07,910
ahead and do this here we go

767
00:37:15,289 --> 00:37:22,079
yeah so it looks pretty much like what

768
00:37:20,369 --> 00:37:24,179
we would expect now now again in order

769
00:37:22,079 --> 00:37:25,769
to make a good ground we're gonna want

770
00:37:24,179 --> 00:37:28,529
to do something other than completely

771
00:37:25,769 --> 00:37:30,300
random splatting so we certainly aren't

772
00:37:28,530 --> 00:37:32,010
done with our ground generation by any

773
00:37:30,300 --> 00:37:33,600
stretch of the imagination oh hey look

774
00:37:32,010 --> 00:37:35,370
there's a little like area that didn't

775
00:37:33,599 --> 00:37:36,900
get filled there speaking of other

776
00:37:35,369 --> 00:37:41,519
reasons why you don't want to use pure

777
00:37:36,900 --> 00:37:42,990
random so yeah so we got so we've got

778
00:37:41,519 --> 00:37:44,429
work to do on a ground generation but

779
00:37:42,989 --> 00:37:47,369
that's like more of a world generation

780
00:37:44,429 --> 00:37:49,649
time thing so but it's definitely

781
00:37:47,369 --> 00:37:52,769
looking a lot more seemed free we've

782
00:37:49,650 --> 00:37:54,420
gotten rid of the systematic texture

783
00:37:52,769 --> 00:37:56,670
same problem that we were having there

784
00:37:54,420 --> 00:37:58,349
and so you can kind of see like that I'm

785
00:37:56,670 --> 00:38:01,320
not sure if that's an art seam or not

786
00:37:58,349 --> 00:38:03,360
right look I don't know exactly what

787
00:38:01,320 --> 00:38:08,610
that looks like so that's a little bit

788
00:38:03,360 --> 00:38:10,650
hard to tell what exactly the art has in

789
00:38:08,610 --> 00:38:13,980
it and what it doesn't so that's that's

790
00:38:10,650 --> 00:38:16,320
a little bit of an issue but yeah anyway

791
00:38:13,980 --> 00:38:18,360
that's looking good and so I'm happy

792
00:38:16,320 --> 00:38:21,660
that we got rid of our primary rendering

793
00:38:18,360 --> 00:38:23,070
artifact there so yes so at the moment

794
00:38:21,659 --> 00:38:24,690
though of course we have another problem

795
00:38:23,070 --> 00:38:26,100
which is that our ground chunks also

796
00:38:24,690 --> 00:38:27,960
aren't sorted so we're seeing the

797
00:38:26,099 --> 00:38:29,639
background chunks right now sort of the

798
00:38:27,960 --> 00:38:33,119
front ones which makes it pretty darn

799
00:38:29,639 --> 00:38:35,819
trippy to look at right but but that's

800
00:38:33,119 --> 00:38:38,730
just the way it goes so these guys

801
00:38:35,820 --> 00:38:40,980
that's that's looking nice I'm liking

802
00:38:38,730 --> 00:38:44,460
that a lot and now we've got our our

803
00:38:40,980 --> 00:38:45,570
pixels and texels corresponding a little

804
00:38:44,460 --> 00:38:47,849
bit more what I wanted them to

805
00:38:45,570 --> 00:38:50,880
correspond s so it's and that also by

806
00:38:47,849 --> 00:38:54,679
the way what I what I showed there is as

807
00:38:50,880 --> 00:38:58,260
close as I remember it the OpenGL pixel

808
00:38:54,679 --> 00:39:00,000
10 Texel standard so you know when we

809
00:38:58,260 --> 00:39:03,330
render it on hardware it should look the

810
00:39:00,000 --> 00:39:04,619
same pixel what pixel to pixel unless I

811
00:39:03,329 --> 00:39:06,929
messed something up but that was that's

812
00:39:04,619 --> 00:39:09,529
as I remember the closest I remembered

813
00:39:06,929 --> 00:39:09,529
to it

814
00:39:09,548 --> 00:39:15,170
so yeah I don't know how are you feeling

815
00:39:13,670 --> 00:39:16,699
about this I don't even know what I

816
00:39:15,170 --> 00:39:19,068
probably should be doing right now to be

817
00:39:16,699 --> 00:39:23,150
completely honest with you because I'm

818
00:39:19,068 --> 00:39:24,650
wondering at this point you know we're

819
00:39:23,150 --> 00:39:26,869
zipping around here and we're generating

820
00:39:24,650 --> 00:39:29,209
these ground chunks so nicely I mean if

821
00:39:26,869 --> 00:39:30,619
that just this is so cool like this is

822
00:39:29,208 --> 00:39:33,288
this is getting to be a real engine

823
00:39:30,619 --> 00:39:40,278
people it's doing all sorts of fancy

824
00:39:33,289 --> 00:39:46,489
things here anyway if I change to using

825
00:39:40,278 --> 00:39:48,998
a very high off the ground camera what

826
00:39:46,489 --> 00:39:48,999
is happening

827
00:39:51,710 --> 00:40:03,139
oh right yes okay well that's what I

828
00:39:58,820 --> 00:40:04,849
should be doing now now we know so right

829
00:40:03,139 --> 00:40:08,809
so the thing that I need to do is

830
00:40:04,849 --> 00:40:10,880
everybody for their queries actually

831
00:40:08,809 --> 00:40:12,769
uses what this value is like the

832
00:40:10,880 --> 00:40:14,780
distance you know above ground for the

833
00:40:12,769 --> 00:40:17,150
queries for like getting the unprojected

834
00:40:14,780 --> 00:40:20,269
get the camera rectangle at distance and

835
00:40:17,150 --> 00:40:22,160
that stuff so that was why you couldn't

836
00:40:20,269 --> 00:40:23,989
use that one for debugging and you have

837
00:40:22,159 --> 00:40:28,429
to change if you want to use the debug

838
00:40:23,989 --> 00:40:30,409
camera you have to use in the in the get

839
00:40:28,429 --> 00:40:34,399
render entity basis you have to do this

840
00:40:30,409 --> 00:40:36,559
right so that way it still reports the

841
00:40:34,400 --> 00:40:38,660
camera to the game as if it wasn't that

842
00:40:36,559 --> 00:40:40,429
right but there it goes

843
00:40:38,659 --> 00:40:42,259
so yeah so that was a little bit of a

844
00:40:40,429 --> 00:40:45,019
stupidity on my part but what are you

845
00:40:42,260 --> 00:40:47,240
gonna do anyway so if we take a look at

846
00:40:45,019 --> 00:40:49,730
what's going on here right you can kind

847
00:40:47,239 --> 00:40:51,679
of see how cool this is already it's

848
00:40:49,730 --> 00:40:57,559
just on-demand generating these guys

849
00:40:51,679 --> 00:41:00,710
right and so you know one one thing that

850
00:40:57,559 --> 00:41:03,019
we could plausibly think about doing now

851
00:41:00,710 --> 00:41:04,429
and I don't know if this is the best

852
00:41:03,019 --> 00:41:06,889
possible use of our of our time right

853
00:41:04,429 --> 00:41:08,569
but we only got seven now I got 17

854
00:41:06,889 --> 00:41:12,259
minutes left because we started 10

855
00:41:08,570 --> 00:41:14,210
minutes late is we get that little kick

856
00:41:12,260 --> 00:41:15,950
up right when we go to generate those

857
00:41:14,210 --> 00:41:18,800
ground chunks now part of that is just

858
00:41:15,949 --> 00:41:20,989
because we're massively over filling on

859
00:41:18,800 --> 00:41:22,760
the ground chunks really we don't need

860
00:41:20,989 --> 00:41:24,169
to do a hundred splats to generate a

861
00:41:22,760 --> 00:41:27,440
ground chunk if we were doing a more

862
00:41:24,170 --> 00:41:30,079
sane generation pattern we would need

863
00:41:27,440 --> 00:41:32,539
far fewer so some of it you know we

864
00:41:30,079 --> 00:41:34,848
could take care of that way but since we

865
00:41:32,539 --> 00:41:36,469
just wrote that threading code it sort

866
00:41:34,849 --> 00:41:38,420
of begs the question should we

867
00:41:36,469 --> 00:41:42,459
potentially just have the chunk filling

868
00:41:38,420 --> 00:41:46,010
happening on another thread right

869
00:41:42,460 --> 00:41:47,599
because now we know that we've got you

870
00:41:46,010 --> 00:41:49,790
know a thread system we could have it

871
00:41:47,599 --> 00:41:51,019
just sit there and actually have some

872
00:41:49,789 --> 00:41:52,940
other thread that's working on filling

873
00:41:51,019 --> 00:41:54,858
those ground trunks and you know I don't

874
00:41:52,940 --> 00:41:56,329
know that's that's certainly something

875
00:41:54,858 --> 00:41:58,579
we could think about doing and it might

876
00:41:56,329 --> 00:42:00,559
be fun because we've got that hiccup and

877
00:41:58,579 --> 00:42:03,289
that hiccup is annoying right you don't

878
00:42:00,559 --> 00:42:04,670
want that in the game and so you know

879
00:42:03,289 --> 00:42:07,548
it's a question of how do we

880
00:42:04,670 --> 00:42:09,559
to deal with it it's pretty cool how

881
00:42:07,548 --> 00:42:11,719
this works I'm really enjoying this for

882
00:42:09,559 --> 00:42:15,200
whatever reason I think it's just kind

883
00:42:11,719 --> 00:42:16,879
of fun when you get into a nice

884
00:42:15,199 --> 00:42:19,250
situation where you're like generating

885
00:42:16,880 --> 00:42:20,599
things on demand because then it opens

886
00:42:19,250 --> 00:42:23,059
up just a lot of possibilities for us

887
00:42:20,599 --> 00:42:24,890
down the road with whatever we really

888
00:42:23,059 --> 00:42:26,900
want to do in terms of how we draw the

889
00:42:24,889 --> 00:42:28,608
ground we just have a lot of leeway

890
00:42:26,900 --> 00:42:30,318
there now because since it's all

891
00:42:28,608 --> 00:42:32,029
generated on demand we can do all sorts

892
00:42:30,318 --> 00:42:33,529
of things and basically create a

893
00:42:32,030 --> 00:42:35,390
completely unique ground texture

894
00:42:33,530 --> 00:42:37,190
everywhere in the world that that has

895
00:42:35,389 --> 00:42:40,219
whatever sorts of stuff we want in it

896
00:42:37,190 --> 00:42:42,798
you know and it can use the underlying

897
00:42:40,219 --> 00:42:54,649
geometry to do whatever kinds of

898
00:42:42,798 --> 00:42:56,269
fanciness we want it to do so yeah maybe

899
00:42:54,650 --> 00:42:58,700
it's really stupid idea but we could

900
00:42:56,269 --> 00:43:01,579
certainly look at doing that where we

901
00:42:58,699 --> 00:43:06,469
fill the ground chunk on a separate

902
00:43:01,579 --> 00:43:15,079
thread I have to think about how we

903
00:43:06,469 --> 00:43:17,149
would want to do that exactly there's a

904
00:43:15,079 --> 00:43:19,099
couple different things and so you know

905
00:43:17,150 --> 00:43:20,960
maybe it's a good idea to start doing

906
00:43:19,099 --> 00:43:24,500
that because we'd have to think about it

907
00:43:20,960 --> 00:43:27,650
in terms of queue work and how we would

908
00:43:24,500 --> 00:43:30,440
want it to happen so maybe that is a

909
00:43:27,650 --> 00:43:33,460
useful thing for us to do I'm not

910
00:43:30,440 --> 00:43:35,869
entirely certain I guess the other thing

911
00:43:33,460 --> 00:43:37,130
no I mean yeah you know just thinking

912
00:43:35,869 --> 00:43:38,269
about that maybe it is just good because

913
00:43:37,130 --> 00:43:39,769
we're gonna have to do it eventually

914
00:43:38,269 --> 00:43:41,389
we're gonna have to deal with this sort

915
00:43:39,769 --> 00:43:42,889
of thing eventually the other thing we

916
00:43:41,389 --> 00:43:44,179
could do is start playing with the asset

917
00:43:42,889 --> 00:43:45,949
loading I suppose that's the other

918
00:43:44,179 --> 00:43:47,500
threading sort of thing we could do if

919
00:43:45,949 --> 00:43:50,629
we were going to go down that route but

920
00:43:47,500 --> 00:43:54,079
so if we look at how this thing is

921
00:43:50,630 --> 00:43:58,220
working here where we've got the tiled

922
00:43:54,079 --> 00:44:00,519
render group to output stuff uh what we

923
00:43:58,219 --> 00:44:02,750
would have to start doing is

924
00:44:00,519 --> 00:44:04,280
partitioning our threads into stuff

925
00:44:02,750 --> 00:44:08,210
that's doing background work and stuff

926
00:44:04,280 --> 00:44:11,960
that's doing foreground work right and

927
00:44:08,210 --> 00:44:13,789
so you know what we probably want to do

928
00:44:11,960 --> 00:44:15,260
like we already kind of set up to this

929
00:44:13,789 --> 00:44:17,869
to have a foreground thread in a

930
00:44:15,260 --> 00:44:18,260
background sorry a foreground crew in a

931
00:44:17,869 --> 00:44:29,000
back

932
00:44:18,260 --> 00:44:31,880
q right we have where is it where is our

933
00:44:29,000 --> 00:44:35,210
Q here we go

934
00:44:31,880 --> 00:44:37,608
so we have our Q's here and we have our

935
00:44:35,210 --> 00:44:40,490
high priority Q you know we could have a

936
00:44:37,608 --> 00:44:45,170
low priority Q right and we could just

937
00:44:40,489 --> 00:44:48,799
say that you know there's stuff that

938
00:44:45,170 --> 00:44:52,490
goes on the low priority Q will kind of

939
00:44:48,800 --> 00:44:54,200
like happen maybe like only one thread

940
00:44:52,489 --> 00:44:56,269
is dedicated to servicing the low

941
00:44:54,199 --> 00:45:00,919
priority Q or something like this right

942
00:44:56,269 --> 00:45:02,809
I don't really know but let's just say

943
00:45:00,920 --> 00:45:04,220
like I said I don't know I don't even

944
00:45:02,809 --> 00:45:08,659
know why I'm doing this right now I just

945
00:45:04,219 --> 00:45:11,539
felt like maybe we should so we'll just

946
00:45:08,659 --> 00:45:18,319
say like low Q and maybe this needs to

947
00:45:11,539 --> 00:45:22,250
be hyper - Q right whipper - Q so here

948
00:45:18,320 --> 00:45:24,140
we go we should probably get rid of this

949
00:45:22,250 --> 00:45:30,349
at some point I don't even know why

950
00:45:24,139 --> 00:45:33,469
that's there right so here we go we've

951
00:45:30,349 --> 00:45:37,069
got high priority queue and we've got

952
00:45:33,469 --> 00:45:41,089
low priority queue when we go through

953
00:45:37,070 --> 00:45:43,930
and we create these things here I want

954
00:45:41,090 --> 00:45:46,579
to I guess I probably want this to be

955
00:45:43,929 --> 00:45:48,199
I'm just compression oriented

956
00:45:46,579 --> 00:45:50,000
programming like I always say I

957
00:45:48,199 --> 00:45:52,579
basically just want something that's

958
00:45:50,000 --> 00:45:55,070
going to create one of these queues so

959
00:45:52,579 --> 00:45:59,659
there's a platform work queue and I'm

960
00:45:55,070 --> 00:46:00,530
gonna create it right and so make queue

961
00:45:59,659 --> 00:46:03,399
or something

962
00:46:00,530 --> 00:46:08,660
maybe I'll just pass it in say you know

963
00:46:03,400 --> 00:46:11,510
went through to make queue right and all

964
00:46:08,659 --> 00:46:15,319
that's gonna do is just this right it's

965
00:46:11,510 --> 00:46:17,270
just gonna do this this stuff that we

966
00:46:15,320 --> 00:46:19,580
were doing for the queue and it'll take

967
00:46:17,269 --> 00:46:22,690
with it what the thread count should be

968
00:46:19,579 --> 00:46:22,690
for that queue and

969
00:46:35,480 --> 00:46:41,280
I'm trying to decide whether I want this

970
00:46:37,559 --> 00:46:42,329
tool to steal threads or not well we'll

971
00:46:41,280 --> 00:46:45,090
leave that for later

972
00:46:42,329 --> 00:46:46,500
so anyway for right now we'll leave them

973
00:46:45,090 --> 00:46:48,930
completely segregated and we'll see

974
00:46:46,500 --> 00:46:51,840
whether we want to do it in a little bit

975
00:46:48,929 --> 00:46:54,269
of a fancier fashion so primarily the

976
00:46:51,840 --> 00:46:55,230
thing that I'm concerned about the

977
00:46:54,269 --> 00:46:56,940
reason that I'm segregating these

978
00:46:55,230 --> 00:46:58,800
because what we could do is we could

979
00:46:56,940 --> 00:47:01,920
make it the other way we could do it is

980
00:46:58,800 --> 00:47:04,500
make it so that basically the there's a

981
00:47:01,920 --> 00:47:07,409
set of threads waiting and those threads

982
00:47:04,500 --> 00:47:08,940
all just pull off of the high priority

983
00:47:07,409 --> 00:47:11,250
queue if something's there or the low

984
00:47:08,940 --> 00:47:13,289
priority queue if something's not on the

985
00:47:11,250 --> 00:47:14,820
high party cue the problem with that is

986
00:47:13,289 --> 00:47:16,829
that if we have things that take a long

987
00:47:14,820 --> 00:47:18,420
time on the low priority queue they will

988
00:47:16,829 --> 00:47:22,440
starve out the high priority queue

989
00:47:18,420 --> 00:47:24,720
potentially and ruin our performance so

990
00:47:22,440 --> 00:47:27,059
I am gonna keep them segregated for a

991
00:47:24,719 --> 00:47:29,159
little bit and you know if we decide

992
00:47:27,059 --> 00:47:30,869
that we want to change that we always

993
00:47:29,159 --> 00:47:32,759
can't change that it's not a big deal

994
00:47:30,869 --> 00:47:35,670
the platform code has I mean the the

995
00:47:32,760 --> 00:47:37,560
game code doesn't really know what we're

996
00:47:35,670 --> 00:47:39,930
doing down in here so we can feel free

997
00:47:37,559 --> 00:47:45,539
to tweak it as we see fit right as

998
00:47:39,929 --> 00:47:49,619
things go so here's the thread count is

999
00:47:45,539 --> 00:47:53,219
gonna come from here now and we'll put

1000
00:47:49,619 --> 00:47:56,400
this in here so we'll have the thread

1001
00:47:53,219 --> 00:47:58,819
info what wait what is thread info even

1002
00:47:56,400 --> 00:47:58,820
do Oh

1003
00:47:59,119 --> 00:48:04,380
thread info thread info is just the

1004
00:48:02,610 --> 00:48:07,890
thing that we pass and what is in the

1005
00:48:04,380 --> 00:48:10,140
thread info nothing except the logical

1006
00:48:07,889 --> 00:48:11,670
thread index and a queue so I'm gonna

1007
00:48:10,139 --> 00:48:13,679
change that since the logical thread

1008
00:48:11,670 --> 00:48:15,570
index isn't even used at this point I'm

1009
00:48:13,679 --> 00:48:18,750
just gonna go ahead and say that this

1010
00:48:15,570 --> 00:48:20,789
platform work queue that is what

1011
00:48:18,750 --> 00:48:24,329
actually gets passed here so here's the

1012
00:48:20,789 --> 00:48:26,150
queue so we don't actually need any of

1013
00:48:24,329 --> 00:48:31,469
this anymore at least not for the moment

1014
00:48:26,150 --> 00:48:33,240
so that goes away entirely goodbye and

1015
00:48:31,469 --> 00:48:35,129
then we don't care about this at all so

1016
00:48:33,239 --> 00:48:38,369
now we have the thread count we don't

1017
00:48:35,130 --> 00:48:40,890
care about this that's not relevant at

1018
00:48:38,369 --> 00:48:42,569
all you don't care about any of this and

1019
00:48:40,889 --> 00:48:46,369
all we do here is instead of info we

1020
00:48:42,570 --> 00:48:46,370
just passed the cue pointer

1021
00:48:46,500 --> 00:48:50,429
and what is else is a cue have in it

1022
00:48:48,420 --> 00:48:52,079
that might need to be initialized I

1023
00:48:50,429 --> 00:48:54,719
think nothing they all initialize to

1024
00:48:52,079 --> 00:48:58,230
zero right yeah so they are all clear to

1025
00:48:54,719 --> 00:49:00,329
zero so that's all fine and dandy so we

1026
00:48:58,230 --> 00:49:03,929
make two cues here and then what we need

1027
00:49:00,329 --> 00:49:07,469
to do is we need to actually initialize

1028
00:49:03,929 --> 00:49:10,519
them right high priority queue low

1029
00:49:07,469 --> 00:49:10,519
priority queue and

1030
00:49:12,389 --> 00:49:17,210
we don't actually really need to clear

1031
00:49:14,610 --> 00:49:24,059
those to zero do we because we don't

1032
00:49:17,210 --> 00:49:25,889
actually you do we actually ever care no

1033
00:49:24,059 --> 00:49:28,289
we don't

1034
00:49:25,889 --> 00:49:30,629
so actually we could actually just do

1035
00:49:28,289 --> 00:49:33,480
this a little bit differently we could

1036
00:49:30,630 --> 00:49:37,050
do it this way where instead we just say

1037
00:49:33,480 --> 00:49:45,990
oh yeah you know the queue gets

1038
00:49:37,050 --> 00:49:49,800
initialized here like so just to all

1039
00:49:45,989 --> 00:49:52,619
zeros but not that giant entry list of

1040
00:49:49,800 --> 00:49:54,030
things because that way we don't just

1041
00:49:52,619 --> 00:49:58,409
spend a bunch of time clearing for no

1042
00:49:54,030 --> 00:50:00,360
reason so we can initialize those we

1043
00:49:58,409 --> 00:50:05,309
make the threads we kick off the threads

1044
00:50:00,360 --> 00:50:07,590
and now we've got a queue right and so

1045
00:50:05,309 --> 00:50:12,710
that should be fine let's go ahead and

1046
00:50:07,590 --> 00:50:12,710
compile that this has got to be an arrow

1047
00:50:14,000 --> 00:50:19,469
and that's got to take an address so

1048
00:50:17,070 --> 00:50:22,740
then what we could say is like oh yeah

1049
00:50:19,469 --> 00:50:24,389
okay so you know instead the high

1050
00:50:22,739 --> 00:50:26,009
priority queue is gonna be six threads

1051
00:50:24,389 --> 00:50:28,980
in the low pair to queue is gonna be two

1052
00:50:26,010 --> 00:50:33,380
threads or something like that right and

1053
00:50:28,980 --> 00:50:37,199
then when we run it off we go

1054
00:50:33,380 --> 00:50:39,180
seems fine right and everyone's happy

1055
00:50:37,199 --> 00:50:41,189
and so now we've got another cue that

1056
00:50:39,179 --> 00:50:46,469
can have some stuff in it the work can

1057
00:50:41,190 --> 00:50:48,059
be done and let's just go ahead and and

1058
00:50:46,469 --> 00:50:51,179
make that happen

1059
00:50:48,059 --> 00:50:53,820
so if we go in here now to handmade CPP

1060
00:50:51,179 --> 00:50:58,859
and I take a look at Phil ground chunk

1061
00:50:53,820 --> 00:51:03,900
right when we do a tiled render group to

1062
00:50:58,860 --> 00:51:06,329
output what we want to do is now instead

1063
00:51:03,900 --> 00:51:11,280
of passing the render queue we want to

1064
00:51:06,329 --> 00:51:14,400
do like the low priority queue right so

1065
00:51:11,280 --> 00:51:16,860
the trans State when that takes the

1066
00:51:14,400 --> 00:51:20,900
render queue it's going to take the low

1067
00:51:16,860 --> 00:51:23,250
priority queue as well Oh prairie queue

1068
00:51:20,900 --> 00:51:24,110
priority queue probably should just call

1069
00:51:23,250 --> 00:51:25,159
that the hyper

1070
00:51:24,110 --> 00:51:27,110
- I don't know why I called it the

1071
00:51:25,159 --> 00:51:30,440
render queue doesn't even make any sense

1072
00:51:27,110 --> 00:51:31,550
really it's not like you could couldn't

1073
00:51:30,440 --> 00:51:35,769
use it for something else

1074
00:51:31,550 --> 00:51:52,810
high priority queue low priority queue

1075
00:51:35,769 --> 00:51:52,809
um yeah so what that that i think i

1076
00:51:53,829 --> 00:51:59,389
think is really all we would need to do

1077
00:51:56,690 --> 00:52:02,030
to get things started but we will have

1078
00:51:59,389 --> 00:52:04,279
obviously well you know and i'm just

1079
00:52:02,030 --> 00:52:06,769
gonna do it and then I'll show you the

1080
00:52:04,280 --> 00:52:09,019
problem that we're gonna have which is

1081
00:52:06,769 --> 00:52:11,840
kind of I don't know what it'll actually

1082
00:52:09,019 --> 00:52:14,900
do I'm kind of interested to know but

1083
00:52:11,840 --> 00:52:17,329
anyway so we have a couple things we

1084
00:52:14,900 --> 00:52:21,050
have to do here first of all our render

1085
00:52:17,329 --> 00:52:23,119
targets have to be aligned that was one

1086
00:52:21,050 --> 00:52:24,740
of our requirements for them right and

1087
00:52:23,119 --> 00:52:26,329
so one of the things that we have to do

1088
00:52:24,739 --> 00:52:27,679
here is when we actually allocate these

1089
00:52:26,329 --> 00:52:34,480
ground chunks they're going to have to

1090
00:52:27,679 --> 00:52:39,559
be aligned right and so when we do our

1091
00:52:34,480 --> 00:52:42,590
our initial ground chunk creation right

1092
00:52:39,559 --> 00:52:45,860
in here when we do make empty bitmap

1093
00:52:42,590 --> 00:52:49,039
that's that's got to actually give us an

1094
00:52:45,860 --> 00:52:51,110
aligned bitmap right because everything

1095
00:52:49,039 --> 00:52:52,909
needs to be aligned to those two there

1096
00:52:51,110 --> 00:52:59,050
Cindy boundaries to the 16 byte

1097
00:52:52,909 --> 00:53:01,519
boundaries so in ground buffer bitmap I

1098
00:52:59,050 --> 00:53:04,400
have two in fact

1099
00:53:01,519 --> 00:53:06,079
why is that working I guess it just

1100
00:53:04,400 --> 00:53:07,579
happens to be now that I think about it

1101
00:53:06,079 --> 00:53:08,809
we had to do that before that has

1102
00:53:07,579 --> 00:53:11,299
nothing to do with the threading that's

1103
00:53:08,809 --> 00:53:14,420
just because the renderer is accelerated

1104
00:53:11,300 --> 00:53:16,460
right so that should have been already a

1105
00:53:14,420 --> 00:53:19,159
problem let's see what what does it make

1106
00:53:16,460 --> 00:53:22,449
empty bitmap doing when it allocates

1107
00:53:19,159 --> 00:53:25,699
this stuff it just does a push sighs

1108
00:53:22,449 --> 00:53:27,799
yeah it just it just goes ahead and does

1109
00:53:25,699 --> 00:53:31,849
a push sighs but it never actually

1110
00:53:27,800 --> 00:53:37,130
ensures that it's aligned right which is

1111
00:53:31,849 --> 00:53:39,489
kind of ridiculous so okay that's a

1112
00:53:37,130 --> 00:53:39,490
little odd

1113
00:53:40,719 --> 00:53:45,188
one has to admit that it's a little odd

1114
00:53:43,489 --> 00:53:47,509
right

1115
00:53:45,188 --> 00:53:48,768
are we admitting that has anyone else

1116
00:53:47,509 --> 00:53:51,858
admit I don't know if anyone's made that

1117
00:53:48,768 --> 00:53:55,518
I hope you're admitting it but I don't

1118
00:53:51,858 --> 00:53:57,259
know if you are so well what I would

1119
00:53:55,518 --> 00:53:59,508
like to do here is I would like this to

1120
00:53:57,259 --> 00:54:01,728
start passing alignment so I guess maybe

1121
00:53:59,509 --> 00:54:03,769
yeah I guess I guess we'll stick with

1122
00:54:01,728 --> 00:54:07,009
the thread thing but that's a pretty big

1123
00:54:03,768 --> 00:54:08,628
to-do item so I don't know how we want

1124
00:54:07,009 --> 00:54:10,039
to mark off this is a to-do item

1125
00:54:08,628 --> 00:54:11,958
normally I have a little pen and paper

1126
00:54:10,039 --> 00:54:14,479
here maybe I will just use a pen and

1127
00:54:11,958 --> 00:54:17,418
paper which I have here and start that

1128
00:54:14,478 --> 00:54:20,328
for handmade hero so let's see what

1129
00:54:17,418 --> 00:54:22,699
we've got here I'm gonna write down our

1130
00:54:20,329 --> 00:54:32,479
first official to-do item on the paper

1131
00:54:22,699 --> 00:54:40,128
which is push size alignment and ground

1132
00:54:32,478 --> 00:54:41,298
chunk allocation us but it's working

1133
00:54:40,128 --> 00:54:43,759
properly because I guess things just

1134
00:54:41,298 --> 00:54:48,278
happen to be 16 by the line so far and

1135
00:54:43,759 --> 00:54:48,278
we just didn't hit that which is odd

1136
00:54:48,639 --> 00:54:53,869
computers are complex sometimes things

1137
00:54:51,768 --> 00:54:55,098
just go your way and you look into

1138
00:54:53,869 --> 00:54:59,989
something that should have been broken

1139
00:54:55,099 --> 00:55:01,818
and just isn't but anyway so yeah what I

1140
00:54:59,989 --> 00:55:05,449
want to do now is I need to kick off

1141
00:55:01,818 --> 00:55:06,708
rendering on these guys right and so if

1142
00:55:05,449 --> 00:55:08,599
you remember the way that we could do

1143
00:55:06,708 --> 00:55:12,678
this before we have a way to push things

1144
00:55:08,599 --> 00:55:16,699
on a cue right we just do platform hat

1145
00:55:12,679 --> 00:55:18,349
entry like so and that just is one of

1146
00:55:16,699 --> 00:55:22,729
these guys it's one of these do tiled

1147
00:55:18,349 --> 00:55:24,679
render work things and so what I'm going

1148
00:55:22,728 --> 00:55:27,378
to do temporarily and this is not a

1149
00:55:24,679 --> 00:55:28,519
really a long-term solution here and it

1150
00:55:27,378 --> 00:55:29,538
actually does also suggest there's

1151
00:55:28,518 --> 00:55:31,358
probably one other thing we want to do

1152
00:55:29,539 --> 00:55:35,389
to our queue but we'll get to that later

1153
00:55:31,358 --> 00:55:36,558
is we've got a fill ground chunk well I

1154
00:55:35,389 --> 00:55:41,899
guess it's actually just fill ground

1155
00:55:36,559 --> 00:55:43,669
chunk see here yeah Ram chunk where is

1156
00:55:41,898 --> 00:55:46,969
Phil Gramm shucks Phil Gramm chunk there

1157
00:55:43,668 --> 00:55:49,458
we go so what we want to do here is we

1158
00:55:46,969 --> 00:55:51,489
want to make the stuff that happens

1159
00:55:49,458 --> 00:55:53,649
inside phil gramm chunk

1160
00:55:51,489 --> 00:55:57,278
we want that to be callable from the

1161
00:55:53,650 --> 00:55:59,170
work you write and so what we need to do

1162
00:55:57,278 --> 00:56:04,349
there all of this stuff is pretty much

1163
00:55:59,170 --> 00:56:04,349
wrote right for the most part

1164
00:56:05,159 --> 00:56:15,109
right it just doesn't begin temporary

1165
00:56:07,920 --> 00:56:15,110
memory for I guess for the render buffer

1166
00:56:16,460 --> 00:56:26,329
yeah then it just does arena allocation

1167
00:56:23,730 --> 00:56:32,519
and the arena allocation is just for

1168
00:56:26,329 --> 00:56:36,360
that render group right yeah so I think

1169
00:56:32,519 --> 00:56:38,309
really the primary thing that we would

1170
00:56:36,360 --> 00:56:40,140
need to do here is we just need to have

1171
00:56:38,309 --> 00:56:42,029
a way of kicking this off so that I

1172
00:56:40,139 --> 00:56:43,469
guess I won't try to do that we're not

1173
00:56:42,030 --> 00:56:45,120
gonna fit that all into two minutes I

1174
00:56:43,469 --> 00:56:46,409
mean maybe I could but I wouldn't be

1175
00:56:45,119 --> 00:56:48,269
able to talk at all during the entire

1176
00:56:46,409 --> 00:56:50,309
time because that actually gets into

1177
00:56:48,269 --> 00:56:54,420
also extending our temporary memory

1178
00:56:50,309 --> 00:57:00,150
stuff to be a little bit more a little

1179
00:56:54,420 --> 00:57:02,670
more flexible well yeah that's mostly

1180
00:57:00,150 --> 00:57:06,780
what we'd have to do in order to do the

1181
00:57:02,670 --> 00:57:10,710
top render work is we'd have to put that

1182
00:57:06,780 --> 00:57:12,860
in here so I'll go ahead and and just

1183
00:57:10,710 --> 00:57:18,809
comment this out and maybe we'll do that

1184
00:57:12,860 --> 00:57:23,750
we'll do that soon why did I paste that

1185
00:57:18,809 --> 00:57:23,750
that's not what I wanted to do there

1186
00:57:28,210 --> 00:57:39,829
what just happened wait a minute

1187
00:57:37,400 --> 00:57:43,670
oh right cuz that's calling the

1188
00:57:39,829 --> 00:57:48,489
low-priority kid that I did not actually

1189
00:57:43,670 --> 00:57:48,490
mean to do let's put that back on there

1190
00:57:51,190 --> 00:57:56,389
wait a minute how is this possible

1191
00:57:53,630 --> 00:58:01,849
you're telling me just because I happen

1192
00:57:56,389 --> 00:58:04,099
to mention that the thing is now it is

1193
00:58:01,849 --> 00:58:08,029
not a line it's actually complaining

1194
00:58:04,099 --> 00:58:13,190
about the alignment just now that can't

1195
00:58:08,030 --> 00:58:16,400
be true like I just said I only just

1196
00:58:13,190 --> 00:58:20,000
said oh wait this isn't aligned why was

1197
00:58:16,400 --> 00:58:23,809
that working before and now it actually

1198
00:58:20,000 --> 00:58:24,619
is not working how is that even how how

1199
00:58:23,809 --> 00:58:31,549
does that happen

1200
00:58:24,619 --> 00:58:33,710
I mean seriously people and you know

1201
00:58:31,550 --> 00:58:36,670
what's probably hilarious about that let

1202
00:58:33,710 --> 00:58:36,670
me see if I'm actually right

1203
00:58:45,210 --> 00:58:52,599
man that is hysterical okay this has

1204
00:58:50,650 --> 00:58:56,380
been a great hand made hero so did you

1205
00:58:52,599 --> 00:58:58,240
guys catch what happens there so like I

1206
00:58:56,380 --> 00:58:59,530
said we shouldn't have been able to

1207
00:58:58,239 --> 00:59:01,149
render the ground chunks with our

1208
00:58:59,530 --> 00:59:03,609
renderer because it should have been

1209
00:59:01,150 --> 00:59:07,090
unaligned but it just so happened that

1210
00:59:03,608 --> 00:59:08,980
it was on a 16 byte boundary anyway as I

1211
00:59:07,090 --> 00:59:11,019
was saying that I happen to be adding

1212
00:59:08,980 --> 00:59:12,550
the low priority queue the low priority

1213
00:59:11,019 --> 00:59:13,929
queue is on the transient state

1214
00:59:12,550 --> 00:59:15,940
structure which happens to be in the

1215
00:59:13,929 --> 00:59:19,059
same place right that's in the memory

1216
00:59:15,940 --> 00:59:22,030
arena the transient arena that happens

1217
00:59:19,059 --> 00:59:24,880
to be where we are allocating our ground

1218
00:59:22,030 --> 00:59:28,720
chunks from so by adding another eight

1219
00:59:24,880 --> 00:59:32,680
byte pointer that pushed it out of

1220
00:59:28,719 --> 00:59:37,719
alignment to 16 - right so we could just

1221
00:59:32,679 --> 00:59:40,899
add if we wanted to right we could add

1222
00:59:37,719 --> 00:59:42,579
one more 8 byte pad to the structure and

1223
00:59:40,900 --> 00:59:44,410
that would force all our ground chunks

1224
00:59:42,579 --> 00:59:46,210
into alignment so I guess now that I

1225
00:59:44,409 --> 00:59:48,279
think about it it's not that odd because

1226
00:59:46,210 --> 00:59:50,530
since all of our stuff is really gonna

1227
00:59:48,280 --> 00:59:53,830
be aligned to eight bytes probably since

1228
00:59:50,530 --> 00:59:56,650
we're compiling in 64-bit mode we had a

1229
00:59:53,829 --> 00:59:59,710
50-50 chance that our ground chokes

1230
00:59:56,650 --> 01:00:01,329
would be aligned right oh that's great

1231
00:59:59,710 --> 01:00:04,108
that's definitely where I'm ending it

1232
01:00:01,329 --> 01:00:11,699
and going the QA because that is

1233
01:00:04,108 --> 01:00:11,699
hilarious I love that that's so great

1234
01:00:16,469 --> 01:00:30,969
let's go to the Q and the a if you have

1235
01:00:27,369 --> 01:00:42,279
questions please put Q colon in front of

1236
01:00:30,969 --> 01:00:43,000
them so I will see them how are you

1237
01:00:42,280 --> 01:00:46,050
doing out there

1238
01:00:43,000 --> 01:00:46,050
what's going on

1239
01:00:50,719 --> 01:00:55,489
girl and uh boom good stream today

1240
01:00:52,579 --> 01:00:58,760
sometimes it goes really great yes

1241
01:00:55,489 --> 01:01:03,049
sometimes you luck out and sometimes you

1242
01:00:58,760 --> 01:01:04,609
don't right and that's programming and

1243
01:01:03,050 --> 01:01:06,950
the stream captures that right the

1244
01:01:04,608 --> 01:01:10,789
stream captures days when when you get

1245
01:01:06,949 --> 01:01:12,230
something to eat and it's cool and the

1246
01:01:10,789 --> 01:01:13,579
stream also captions days when you're

1247
01:01:12,230 --> 01:01:23,329
just staring something going what is

1248
01:01:13,579 --> 01:01:25,280
going on here so the ground chunks

1249
01:01:23,329 --> 01:01:36,650
rendered differently every time you go

1250
01:01:25,280 --> 01:01:41,150
upstairs and come back down no they

1251
01:01:36,650 --> 01:01:42,858
don't it's the same there based on their

1252
01:01:41,150 --> 01:01:45,050
coordinates in the world so they're

1253
01:01:42,858 --> 01:01:46,759
always exactly the same when you come

1254
01:01:45,050 --> 01:01:47,960
back to a region that's obviously what

1255
01:01:46,760 --> 01:01:51,170
we want because we want to look familiar

1256
01:01:47,960 --> 01:01:52,639
right because I mean we're just

1257
01:01:51,170 --> 01:01:54,318
splatting things in there really milling

1258
01:01:52,639 --> 01:01:57,139
that right now but what we're going to

1259
01:01:54,318 --> 01:01:59,210
do eventually is is be thoughtful about

1260
01:01:57,139 --> 01:02:00,710
how we compose that ground texture so

1261
01:01:59,210 --> 01:02:02,599
that it looks meaningful to the player

1262
01:02:00,710 --> 01:02:10,550
like whatever the region is that we're

1263
01:02:02,599 --> 01:02:12,170
on Abner coin break could you can you

1264
01:02:10,550 --> 01:02:14,480
address the recurring question the

1265
01:02:12,170 --> 01:02:15,950
stream isn't about making games I'm

1266
01:02:14,480 --> 01:02:18,588
tired of trying to explain what the

1267
01:02:15,949 --> 01:02:20,318
stream is about so the stream is about

1268
01:02:18,588 --> 01:02:23,659
making games it's about making games

1269
01:02:20,318 --> 01:02:25,250
from scratch there are lots of streams

1270
01:02:23,659 --> 01:02:27,108
that are about how to load up unity and

1271
01:02:25,250 --> 01:02:29,690
like drop some entities in but you know

1272
01:02:27,108 --> 01:02:31,608
I mean that's really not all that

1273
01:02:29,690 --> 01:02:33,950
difficult and so what this stream is

1274
01:02:31,608 --> 01:02:36,828
supposed to do is to teach like how

1275
01:02:33,949 --> 01:02:38,809
unity was built right because obviously

1276
01:02:36,829 --> 01:02:40,910
people need to be able to make game

1277
01:02:38,809 --> 01:02:43,880
engines otherwise we wouldn't have any

1278
01:02:40,909 --> 01:02:45,469
game engines like Unreal Engine or the

1279
01:02:43,880 --> 01:02:48,829
engine or the crisis engine or the

1280
01:02:45,469 --> 01:02:50,748
source engine or countless of the custom

1281
01:02:48,829 --> 01:02:53,539
engines that are out there for you know

1282
01:02:50,748 --> 01:02:56,238
specific games I don't know like

1283
01:02:53,539 --> 01:03:00,769
whatever Grand Theft Auto five uses the

1284
01:02:56,239 --> 01:03:04,220
Frostbite engine so this stream is about

1285
01:03:00,768 --> 01:03:08,629
the whole process and we will do the the

1286
01:03:04,219 --> 01:03:10,608
kinds of stuff later on where you know

1287
01:03:08,630 --> 01:03:13,369
once we're done with engine work we'll

1288
01:03:10,608 --> 01:03:16,058
do work on you know game stuff that

1289
01:03:13,369 --> 01:03:18,798
looks a lot more like just working on

1290
01:03:16,059 --> 01:03:22,130
you know what you might see if you were

1291
01:03:18,798 --> 01:03:24,079
using a store-bought engine but saying

1292
01:03:22,130 --> 01:03:26,140
that working making an actual game from

1293
01:03:24,079 --> 01:03:29,660
scratch isn't about making games is is

1294
01:03:26,139 --> 01:03:30,739
really strange because if you if there

1295
01:03:29,659 --> 01:03:31,818
weren't people who knew how to do all

1296
01:03:30,739 --> 01:03:34,460
the things that I'm talking about on the

1297
01:03:31,818 --> 01:03:36,079
stream here you would know nobody would

1298
01:03:34,460 --> 01:03:37,970
be able to make any games right I mean

1299
01:03:36,079 --> 01:03:40,430
all of this stuff is actually required

1300
01:03:37,969 --> 01:03:42,048
to make a game and the only reason that

1301
01:03:40,429 --> 01:03:44,179
you don't have to know it all is because

1302
01:03:42,048 --> 01:03:45,409
you can go license something that might

1303
01:03:44,179 --> 01:03:47,478
do some of it for you

1304
01:03:45,409 --> 01:03:48,679
but of course if you do that you also

1305
01:03:47,478 --> 01:03:50,268
put yourself at a pretty significant

1306
01:03:48,679 --> 01:03:52,808
disadvantage because everyone else

1307
01:03:50,268 --> 01:03:55,218
that's the exact same tool you do right

1308
01:03:52,809 --> 01:03:56,719
so you're never gonna be able to do

1309
01:03:55,219 --> 01:03:59,119
anything technologically to

1310
01:03:56,719 --> 01:04:01,068
differentiate yourself from another game

1311
01:03:59,119 --> 01:04:02,829
that also uses unity or that also uses

1312
01:04:01,068 --> 01:04:06,380
Unreal Engine 4 because guess what

1313
01:04:02,829 --> 01:04:07,818
that's all you got so it's important to

1314
01:04:06,380 --> 01:04:09,019
know these things I think in general a

1315
01:04:07,818 --> 01:04:10,038
few if you care a lot about game

1316
01:04:09,018 --> 01:04:11,088
development I think you should know

1317
01:04:10,039 --> 01:04:14,329
these things

1318
01:04:11,088 --> 01:04:21,018
because they're important right and they

1319
01:04:14,329 --> 01:04:22,190
they have a lot to bear on they have a

1320
01:04:21,018 --> 01:04:24,618
lot to do with the future of game

1321
01:04:22,190 --> 01:04:26,028
development right they have a lot to do

1322
01:04:24,619 --> 01:04:27,650
with who will make the engines of the

1323
01:04:26,028 --> 01:04:30,170
future who will make technological

1324
01:04:27,650 --> 01:04:31,818
advances nobody who doesn't know the

1325
01:04:30,170 --> 01:04:33,318
stuff that I'm teaching on handmade hero

1326
01:04:31,818 --> 01:04:35,239
is ever gonna make a significant engine

1327
01:04:33,318 --> 01:04:38,420
advancement right because anyone who can

1328
01:04:35,239 --> 01:04:40,599
do something beyond what we're currently

1329
01:04:38,420 --> 01:04:42,979
doing with things like unity and unreal

1330
01:04:40,599 --> 01:04:45,950
they all are gonna know all this stuff

1331
01:04:42,978 --> 01:04:49,818
right this is like you know handmade

1332
01:04:45,949 --> 01:04:51,288
hero is like the compulsories for an

1333
01:04:49,818 --> 01:04:54,558
engine developer you should be able to

1334
01:04:51,289 --> 01:04:56,430
do absolutely everything in here if

1335
01:04:54,559 --> 01:04:59,940
you're gonna be on an engine team right

1336
01:04:56,429 --> 01:05:01,440
and and I don't think that's a any kind

1337
01:04:59,940 --> 01:05:03,749
of extraordinary statement like I feel

1338
01:05:01,440 --> 01:05:05,700
like any good engine program I know if I

1339
01:05:03,748 --> 01:05:07,618
was like would you feel comfortable

1340
01:05:05,699 --> 01:05:10,048
making handmade here from scratch they

1341
01:05:07,619 --> 01:05:13,140
would be like certainly right you know

1342
01:05:10,048 --> 01:05:14,400
of course and so I feel like you know

1343
01:05:13,139 --> 01:05:17,368
are they gonna do it exactly the same

1344
01:05:14,400 --> 01:05:19,499
way I do know because every programmer

1345
01:05:17,369 --> 01:05:26,009
has a different style right but they

1346
01:05:19,498 --> 01:05:27,989
would be able to achieve the results how

1347
01:05:26,009 --> 01:05:31,349
long have you worked on this project a

1348
01:05:27,989 --> 01:05:34,739
hundred and thirty hours ish something

1349
01:05:31,349 --> 01:05:37,230
like that so so that's three so three

1350
01:05:34,739 --> 01:05:40,858
weeks of programming time if we were

1351
01:05:37,230 --> 01:05:43,259
working for 40 hour weeks it would be

1352
01:05:40,858 --> 01:05:45,719
three weeks so we're three week three

1353
01:05:43,259 --> 01:05:48,650
work weeks into the project roughly a

1354
01:05:45,719 --> 01:05:48,649
little more than that

1355
01:06:00,840 --> 01:06:05,890
how are you deciding what gets cute or

1356
01:06:03,159 --> 01:06:08,139
not on high versus low so the idea is

1357
01:06:05,889 --> 01:06:10,150
that anything that needs to be computed

1358
01:06:08,139 --> 01:06:12,099
this frame is a high priority item and

1359
01:06:10,150 --> 01:06:14,050
anything that could be computed sort of

1360
01:06:12,099 --> 01:06:22,150
in across a couple frames is going to be

1361
01:06:14,050 --> 01:06:23,800
low how are you going to implement

1362
01:06:22,150 --> 01:06:26,760
seamless tiles with what yangshin lee

1363
01:06:23,800 --> 01:06:29,710
creates so that is what we're doing here

1364
01:06:26,760 --> 01:06:32,260
we are taking artwork that she made and

1365
01:06:29,710 --> 01:06:32,860
we're splatting it in to create seamless

1366
01:06:32,260 --> 01:06:35,560
tiles

1367
01:06:32,860 --> 01:06:37,870
she made the splats now we haven't

1368
01:06:35,559 --> 01:06:39,099
actually done the work to create useful

1369
01:06:37,869 --> 01:06:40,539
things out of the splats we're just

1370
01:06:39,099 --> 01:06:42,579
randomly throwing them on there so

1371
01:06:40,539 --> 01:06:46,659
that's not particular useful but when

1372
01:06:42,579 --> 01:06:48,730
I'm saving how we would do more logical

1373
01:06:46,659 --> 01:06:55,379
creation of stuff underneath with the

1374
01:06:48,730 --> 01:06:55,380
splats until we get to world creation I

1375
01:06:56,639 --> 01:07:01,929
don't see any object-oriented patterns

1376
01:06:59,440 --> 01:07:04,079
are using object orientation no we are

1377
01:07:01,929 --> 01:07:04,079
not

1378
01:07:08,260 --> 01:07:13,350
I assume the yellow cyan magenta squares

1379
01:07:11,800 --> 01:07:15,850
are for debugging what do they represent

1380
01:07:13,349 --> 01:07:20,860
yes so we're in the camera zoomed out

1381
01:07:15,849 --> 01:07:26,259
mode here right and so if we if we

1382
01:07:20,860 --> 01:07:28,300
change to to actually viewing the game

1383
01:07:26,260 --> 01:07:30,130
right

1384
01:07:28,300 --> 01:07:33,370
you know this is what it would actually

1385
01:07:30,130 --> 01:07:35,800
look like and you can kind of see that

1386
01:07:33,369 --> 01:07:38,079
the yellow square is right around the

1387
01:07:35,800 --> 01:07:42,820
border if that makes sense

1388
01:07:38,079 --> 01:07:45,549
and so what the squares are for is when

1389
01:07:42,820 --> 01:07:48,789
we want to do some debugging work and we

1390
01:07:45,550 --> 01:07:50,470
take a look out here this yellow square

1391
01:07:48,789 --> 01:07:54,130
represents what the player will see on

1392
01:07:50,469 --> 01:07:56,980
the screen this cyan square represents

1393
01:07:54,130 --> 01:07:59,380
the simulation boundaries so we're

1394
01:07:56,980 --> 01:08:00,760
simulating everything in this region so

1395
01:07:59,380 --> 01:08:02,349
that things that are off-screen can

1396
01:08:00,760 --> 01:08:06,700
still like walk on screen and stuff and

1397
01:08:02,349 --> 01:08:09,460
the purple boundary is the region where

1398
01:08:06,699 --> 01:08:11,919
we consider things so that stuff in this

1399
01:08:09,460 --> 01:08:13,240
region as it moves outside might hit

1400
01:08:11,920 --> 01:08:15,480
something in here but these are not

1401
01:08:13,239 --> 01:08:18,099
actively simulated if that makes sense

1402
01:08:15,480 --> 01:08:21,338
so yeah so that's that's basically what

1403
01:08:18,100 --> 01:08:23,950
we're trying to do with those with those

1404
01:08:21,338 --> 01:08:25,750
regions and they'll come into play more

1405
01:08:23,949 --> 01:08:27,608
later when we're actually working on the

1406
01:08:25,750 --> 01:08:31,239
game game part of the game and not the

1407
01:08:27,609 --> 01:08:33,190
engine because you know again when

1408
01:08:31,239 --> 01:08:35,858
there's stuff like a eyes that have to

1409
01:08:33,189 --> 01:08:37,358
walk around or whatever it's important

1410
01:08:35,859 --> 01:08:38,770
to make sure that we can see that

1411
01:08:37,359 --> 01:08:43,859
they're properly being simulated out

1412
01:08:38,770 --> 01:08:43,859
here when they're not on screen

1413
01:08:46,390 --> 01:08:52,560
you always say we who is we well it's me

1414
01:08:49,659 --> 01:08:52,559
and everyone on the chat

1415
01:09:13,179 --> 01:09:24,619
looking for some looking for some on

1416
01:09:19,429 --> 01:09:25,850
topic questions you say three work weeks

1417
01:09:24,619 --> 01:09:29,259
but do you feel like you can maintain

1418
01:09:25,850 --> 01:09:31,520
this pace eight hours a day well okay

1419
01:09:29,259 --> 01:09:32,929
obviously yes because when I'm normally

1420
01:09:31,520 --> 01:09:38,719
programming I don't have to explain it

1421
01:09:32,929 --> 01:09:42,020
all what I'm doing it so like yeah maybe

1422
01:09:38,719 --> 01:09:44,630
it would be hard to program for eight

1423
01:09:42,020 --> 01:09:46,009
hours straight every day but the amount

1424
01:09:44,630 --> 01:09:48,109
of programming I do on the stream would

1425
01:09:46,009 --> 01:09:53,710
not take me an hour it would take me

1426
01:09:48,109 --> 01:09:55,670
like 15 minutes right a lot of the time

1427
01:09:53,710 --> 01:09:57,439
sometimes you know if I have to think

1428
01:09:55,670 --> 01:09:59,420
something if there's something I have to

1429
01:09:57,439 --> 01:10:00,559
think through then maybe that takes the

1430
01:09:59,420 --> 01:10:01,909
same amount of time because I'm going to

1431
01:10:00,560 --> 01:10:05,120
draw up like explaining it on the

1432
01:10:01,909 --> 01:10:07,698
blackboard is the same as me working it

1433
01:10:05,119 --> 01:10:09,260
on a piece of paper so that part math

1434
01:10:07,698 --> 01:10:10,279
I'll be okay but the vast majority of

1435
01:10:09,260 --> 01:10:11,539
things that I explain to things I

1436
01:10:10,279 --> 01:10:14,960
already know one could just type in and

1437
01:10:11,539 --> 01:10:17,359
so those I take a massive hit on the

1438
01:10:14,960 --> 01:10:18,800
stream so so I think I think it's

1439
01:10:17,359 --> 01:10:21,289
totally fair to say that it Maps

1440
01:10:18,800 --> 01:10:23,750
basically to work hours because normally

1441
01:10:21,289 --> 01:10:25,039
I'm Way faster at coding than what you

1442
01:10:23,750 --> 01:10:27,319
see on the stream because on the stream

1443
01:10:25,039 --> 01:10:28,488
I have to explain it and I can't

1444
01:10:27,319 --> 01:10:31,009
concentrate not because I have to talk

1445
01:10:28,488 --> 01:10:32,839
to so I'm also at a disadvantage in

1446
01:10:31,010 --> 01:10:35,239
terms of remembering where everything is

1447
01:10:32,840 --> 01:10:37,340
and I work full time to the day normally

1448
01:10:35,238 --> 01:10:38,750
so I'm also have to page in this code

1449
01:10:37,340 --> 01:10:40,969
since it's not the code that I normally

1450
01:10:38,750 --> 01:10:43,238
work out so yeah I think it's very fair

1451
01:10:40,969 --> 01:10:43,239
to say

1452
01:10:51,210 --> 01:10:54,420
it seems like the ground checks are only

1453
01:10:53,369 --> 01:10:56,189
getting generated when they would

1454
01:10:54,420 --> 01:10:57,569
actually be visible not before when you

1455
01:10:56,189 --> 01:10:59,189
get the ground check into low partic you

1456
01:10:57,569 --> 01:11:00,359
will empty ground be visible for one or

1457
01:10:59,189 --> 01:11:04,488
two frames while they're being generated

1458
01:11:00,359 --> 01:11:07,349
yeah so what I what we will want to do

1459
01:11:04,488 --> 01:11:09,179
once we have them generated is we'll

1460
01:11:07,350 --> 01:11:11,190
want to sort of see what our typical

1461
01:11:09,180 --> 01:11:13,260
event horizon is for generating ground

1462
01:11:11,189 --> 01:11:15,359
chunks and we'll want to cue them up a

1463
01:11:13,260 --> 01:11:19,489
little early which is pretty easy right

1464
01:11:15,359 --> 01:11:19,488
we just use a slightly bigger region

1465
01:11:37,130 --> 01:11:41,670
do you think at the end near end someone

1466
01:11:40,380 --> 01:11:43,170
like John blow would be interested in

1467
01:11:41,670 --> 01:11:44,909
making a game at the handmade hero

1468
01:11:43,170 --> 01:11:47,819
engine in a similar format to see how

1469
01:11:44,909 --> 01:11:52,819
the game design phase evolves the engine

1470
01:11:47,819 --> 01:11:52,819
I don't know you'd have to ask him

1471
01:11:55,880 --> 01:12:01,020
alright I think that's it for on-topic

1472
01:11:58,470 --> 01:12:03,530
questions am I correct about that I

1473
01:12:01,020 --> 01:12:03,530
think

1474
01:12:17,979 --> 01:12:29,369
anyone anyone No looks okay alright well

1475
01:12:25,469 --> 01:12:31,750
we will go ahead and wrap things up then

1476
01:12:29,369 --> 01:12:42,189
let's go ahead and save everything out

1477
01:12:31,750 --> 01:12:43,390
here there we go close alright thank you

1478
01:12:42,189 --> 01:12:44,529
for joining me for another episode of

1479
01:12:43,390 --> 01:12:47,860
handmade hero it's been a pleasure

1480
01:12:44,529 --> 01:12:50,039
coding with you as always if you would

1481
01:12:47,859 --> 01:12:52,059
like to follow along with code at home

1482
01:12:50,039 --> 01:12:53,649
you can always go to handmade here at

1483
01:12:52,060 --> 01:12:54,820
Oregon pre-order the game and it comes

1484
01:12:53,649 --> 01:12:56,198
with a source code so you can download

1485
01:12:54,819 --> 01:12:57,789
it every night after I'm done here I

1486
01:12:56,198 --> 01:13:00,159
upload it and then you can download it

1487
01:12:57,789 --> 01:13:01,539
and it's all good so if you want to play

1488
01:13:00,159 --> 01:13:04,119
around with it at home that's an easy

1489
01:13:01,539 --> 01:13:05,649
way to do it you can also go to the our

1490
01:13:04,119 --> 01:13:07,510
forums page if you have questions and

1491
01:13:05,649 --> 01:13:11,198
you can ask questions on the forum you

1492
01:13:07,510 --> 01:13:16,230
can also go to there's like an annotated

1493
01:13:11,198 --> 01:13:18,609
episode guide and there is a like a

1494
01:13:16,229 --> 01:13:19,629
ports page and a resources page there's

1495
01:13:18,609 --> 01:13:21,039
all kinds of stuff on there that you

1496
01:13:19,630 --> 01:13:22,390
might want to check out we also have a

1497
01:13:21,039 --> 01:13:23,439
patreon page if you want to support the

1498
01:13:22,390 --> 01:13:25,660
video series it's always much

1499
01:13:23,439 --> 01:13:26,559
appreciated and we have a tweet bot that

1500
01:13:25,659 --> 01:13:28,719
tweets the schedule at you if you're

1501
01:13:26,560 --> 01:13:30,520
trying to catch the series live you can

1502
01:13:28,719 --> 01:13:31,929
subscribe to the to the the Twitter feed

1503
01:13:30,520 --> 01:13:35,290
and it'll tell you whenever it's going

1504
01:13:31,929 --> 01:13:38,409
live so that's about yet we are off

1505
01:13:35,289 --> 01:13:40,000
tomorrow as I will not be here tomorrow

1506
01:13:38,409 --> 01:13:42,309
evening so we're off tomorrow but we

1507
01:13:40,000 --> 01:13:44,409
will be back here on Monday so I hope to

1508
01:13:42,310 --> 01:13:45,610
see you all then when we'll go ahead and

1509
01:13:44,409 --> 01:13:47,590
start playing with that low priority

1510
01:13:45,609 --> 01:13:49,420
queue and see if we can't get our grand

1511
01:13:47,590 --> 01:13:51,190
chunks to move off of the main thread so

1512
01:13:49,420 --> 01:13:55,060
we won't have those hiccups which would

1513
01:13:51,189 --> 01:14:00,069
be good all right thanks everyone and I

1514
01:13:55,060 --> 01:14:03,640
will see you tomorrow oh no I won't I

1515
01:14:00,069 --> 01:14:05,380
will see you Monday all right take it

1516
01:14:03,640 --> 01:14:07,449
easy everyone and have a good weekend I

1517
01:14:05,380 --> 01:14:08,679
suppose well I well since we're in

1518
01:14:07,448 --> 01:14:12,089
America see you tomorrow have a good

1519
01:14:08,679 --> 01:14:12,090
weekend and I'll see you on Monday

