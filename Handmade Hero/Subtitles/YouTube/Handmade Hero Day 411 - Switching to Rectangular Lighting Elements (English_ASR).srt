1
00:00:03,620 --> 00:00:07,048
alright hello everyone and welcome to

2
00:00:05,819 --> 00:00:09,750
hand made here on the show we code a

3
00:00:07,049 --> 00:00:12,388
complete game live on stream we are in

4
00:00:09,750 --> 00:00:16,019
the middle of working out how to do

5
00:00:12,388 --> 00:00:19,640
lighting we kind of came to a nice place

6
00:00:16,019 --> 00:00:22,679
on last stream where we had finished

7
00:00:19,640 --> 00:00:25,589
sort of updating our code to track

8
00:00:22,679 --> 00:00:28,739
incident light and incident lighting

9
00:00:25,589 --> 00:00:30,990
direction and we actually didn't have a

10
00:00:28,739 --> 00:00:33,149
chance to debug it at all

11
00:00:30,989 --> 00:00:35,850
so this stream what we're gonna do is

12
00:00:33,149 --> 00:00:39,289
start taking a look at that lighting

13
00:00:35,850 --> 00:00:41,520
solution and you know working through

14
00:00:39,289 --> 00:00:44,450
trying to verify that we've actually

15
00:00:41,520 --> 00:00:48,870
produced something that it's working and

16
00:00:44,450 --> 00:00:50,789
it doesn't have obvious bugs in it now

17
00:00:48,869 --> 00:00:53,549
one of the problems with doing anything

18
00:00:50,789 --> 00:00:55,679
like this is that unlike code that has

19
00:00:53,549 --> 00:00:57,890
well-defined inputs and outputs lighting

20
00:00:55,679 --> 00:01:00,869
code is a lot more squirrelly than that

21
00:00:57,890 --> 00:01:06,810
this is why for example if you've ever

22
00:01:00,869 --> 00:01:10,819
seen the Cornell box for example which

23
00:01:06,810 --> 00:01:14,100
is it's this famous sort of rendering

24
00:01:10,819 --> 00:01:16,379
there have been attempts at various

25
00:01:14,099 --> 00:01:18,780
times to try and produce what are called

26
00:01:16,379 --> 00:01:21,658
ground truth images where we take a

27
00:01:18,780 --> 00:01:25,320
photograph of something in the real

28
00:01:21,659 --> 00:01:28,250
world and you can kind of see know if we

29
00:01:25,319 --> 00:01:31,559
actually I can get the actual photograph

30
00:01:28,250 --> 00:01:32,849
on here presumably we can I don't know

31
00:01:31,560 --> 00:01:35,540
if it's if it's here somewhere

32
00:01:32,849 --> 00:01:35,539
see

33
00:01:44,269 --> 00:01:51,289
so this is not the original but people

34
00:01:48,859 --> 00:01:55,670
have done actual photographs of a real

35
00:01:51,290 --> 00:01:57,290
box that really looks like this but

36
00:01:55,670 --> 00:01:59,900
that's very simple to construct you know

37
00:01:57,290 --> 00:02:02,270
one red wall one green wall and sent

38
00:01:59,900 --> 00:02:05,620
some white walls with two cubes in it

39
00:02:02,269 --> 00:02:09,019
well two bright rectangular prisms in it

40
00:02:05,620 --> 00:02:11,750
and then when you render you see if you

41
00:02:09,020 --> 00:02:13,550
can produce something that looks similar

42
00:02:11,750 --> 00:02:15,680
to that and you can kind of tell whether

43
00:02:13,550 --> 00:02:17,420
whether or not your lighting solution is

44
00:02:15,680 --> 00:02:19,689
making sense or not and whether or not

45
00:02:17,419 --> 00:02:22,219
you're close to how light should be

46
00:02:19,689 --> 00:02:24,139
transported so obviously you know there

47
00:02:22,219 --> 00:02:27,319
are sort of approaches you can try to

48
00:02:24,139 --> 00:02:29,599
take that at least are sort of about

49
00:02:27,319 --> 00:02:32,599
figuring out whether you have bugs by

50
00:02:29,599 --> 00:02:35,150
comparing to some kind of known output

51
00:02:32,599 --> 00:02:38,500
but even then it's a pretty rough

52
00:02:35,150 --> 00:02:41,090
scenario now why is this it's because

53
00:02:38,500 --> 00:02:43,189
lighting has so many things involved in

54
00:02:41,090 --> 00:02:45,729
it and they're so difficult to

55
00:02:43,189 --> 00:02:48,889
individually analyze in any real way

56
00:02:45,729 --> 00:02:53,000
that it's very difficult to know whether

57
00:02:48,889 --> 00:02:54,579
you've got mistakes in the program and

58
00:02:53,000 --> 00:02:56,930
also whether or not you're using

59
00:02:54,580 --> 00:02:58,790
algorithms that sufficiently describe

60
00:02:56,930 --> 00:03:00,920
the behavior of the light that you're

61
00:02:58,789 --> 00:03:03,650
interested in capturing this is made

62
00:03:00,919 --> 00:03:06,439
even more difficult in scenarios like we

63
00:03:03,650 --> 00:03:08,030
have in handmade hero where we know that

64
00:03:06,439 --> 00:03:09,709
we're not going to be able to capture

65
00:03:08,030 --> 00:03:13,400
realistic lighting because we're trying

66
00:03:09,709 --> 00:03:17,209
to solve this in real time and we simply

67
00:03:13,400 --> 00:03:18,650
don't have the ability to produce a

68
00:03:17,209 --> 00:03:20,150
fully accurate solution so what we're

69
00:03:18,650 --> 00:03:22,549
looking for as well as an approximate

70
00:03:20,150 --> 00:03:24,260
solution so our situation is

71
00:03:22,549 --> 00:03:26,689
particularly difficult because we really

72
00:03:24,259 --> 00:03:28,849
don't have much to go on to know whether

73
00:03:26,689 --> 00:03:30,530
our code is working or not and so we

74
00:03:28,849 --> 00:03:32,479
have to sort of take you the approach of

75
00:03:30,530 --> 00:03:35,830
looking at various pieces and seeing

76
00:03:32,479 --> 00:03:39,619
whether they produce sane results and

77
00:03:35,830 --> 00:03:42,790
just going from there there is no right

78
00:03:39,620 --> 00:03:45,769
right answer we can easily compare it to

79
00:03:42,789 --> 00:03:48,709
because you know one of the problem with

80
00:03:45,769 --> 00:03:50,659
with a hack that you're using to try and

81
00:03:48,709 --> 00:03:53,330
get something to run in real time that

82
00:03:50,659 --> 00:03:57,229
doesn't run in real time is that you

83
00:03:53,330 --> 00:03:59,480
also now no longer have some even

84
00:03:57,229 --> 00:04:01,818
of what the actual correct output should

85
00:03:59,479 --> 00:04:05,090
be the correct output for a hack is

86
00:04:01,818 --> 00:04:06,500
something that looks ok right I mean

87
00:04:05,090 --> 00:04:08,479
that's sort of the definition of it is

88
00:04:06,500 --> 00:04:11,209
that you run it and the lighting looks

89
00:04:08,479 --> 00:04:14,030
Pleasant right like it looks good enough

90
00:04:11,209 --> 00:04:15,920
that you're willing to make it be what

91
00:04:14,030 --> 00:04:19,220
the game uses for its lighting that's

92
00:04:15,919 --> 00:04:21,439
about all you can say about it

93
00:04:19,220 --> 00:04:24,710
right and so that's kind of the issue

94
00:04:21,439 --> 00:04:26,719
that we face when debugging this and

95
00:04:24,709 --> 00:04:29,359
again there are so many different

96
00:04:26,720 --> 00:04:32,000
aspects of it involved that it's just a

97
00:04:29,360 --> 00:04:34,479
really difficult problem for example

98
00:04:32,000 --> 00:04:38,089
we've got voxel acceleration structure

99
00:04:34,478 --> 00:04:40,339
that we use to do the the lighting per

100
00:04:38,089 --> 00:04:42,259
pixel we've got the actual purpose of

101
00:04:40,339 --> 00:04:43,819
lighting computation we have the

102
00:04:42,259 --> 00:04:46,250
lighting transport that's happening on

103
00:04:43,819 --> 00:04:47,478
the CPU we have the final gather that's

104
00:04:46,250 --> 00:04:49,490
happening on the CPU we have the

105
00:04:47,478 --> 00:04:51,949
extraction process that turns the scene

106
00:04:49,490 --> 00:04:54,590
into lighting elements and all of those

107
00:04:51,949 --> 00:04:56,900
things can be buggy and more importantly

108
00:04:54,589 --> 00:04:59,750
in addition to them being buggy all of

109
00:04:56,899 --> 00:05:01,728
those things could also have algorithmic

110
00:04:59,750 --> 00:05:03,889
shortcomings that are important to

111
00:05:01,728 --> 00:05:06,769
address like some places where we have

112
00:05:03,889 --> 00:05:09,889
cut corners may in fact be places where

113
00:05:06,769 --> 00:05:11,359
corners cannot be cut or may be places

114
00:05:09,889 --> 00:05:13,550
where the way we cut the corners is

115
00:05:11,360 --> 00:05:17,030
simply not good enough and we need to

116
00:05:13,550 --> 00:05:20,210
figure out some other option some other

117
00:05:17,029 --> 00:05:21,949
way of producing an approximate result

118
00:05:20,209 --> 00:05:23,989
that's more accurate or doesn't have

119
00:05:21,949 --> 00:05:26,449
certain artifacts and so we just have a

120
00:05:23,990 --> 00:05:28,490
lot in the mix and that is why do buggin

121
00:05:26,449 --> 00:05:30,529
this kind of code is difficult and more

122
00:05:28,490 --> 00:05:33,769
importantly broadening the discussion

123
00:05:30,529 --> 00:05:36,319
outside of just debugging it's why in a

124
00:05:33,769 --> 00:05:38,889
broader sense developing this kind of

125
00:05:36,319 --> 00:05:41,389
code is hard there isn't some clean

126
00:05:38,889 --> 00:05:42,860
specification that we can look at and

127
00:05:41,389 --> 00:05:47,509
say well the code is correct when it

128
00:05:42,860 --> 00:05:49,810
meets this exact set of outputs in like

129
00:05:47,509 --> 00:05:53,029
a unit testing sense or something right

130
00:05:49,810 --> 00:05:54,560
there is no well to find output all we

131
00:05:53,029 --> 00:05:56,629
really know is that we want something

132
00:05:54,560 --> 00:06:00,620
that looks pleasant and makes the game

133
00:05:56,629 --> 00:06:03,110
feel nice when you're playing it and so

134
00:06:00,620 --> 00:06:05,810
that's what our job is and it's and it's

135
00:06:03,110 --> 00:06:07,879
not a particularly pleasant one but that

136
00:06:05,810 --> 00:06:09,228
is what we must do if we want some nice

137
00:06:07,879 --> 00:06:10,990
real-time lighting in the game and so

138
00:06:09,228 --> 00:06:14,058
that is what we're going to do

139
00:06:10,990 --> 00:06:16,338
I'm on day four eleven here so you want

140
00:06:14,059 --> 00:06:19,189
to start with day 410 source code if you

141
00:06:16,338 --> 00:06:22,668
are following along at home I'm gonna

142
00:06:19,189 --> 00:06:25,278
open up visual studio which I did after

143
00:06:22,668 --> 00:06:27,620
yesterday remember to register or

144
00:06:25,278 --> 00:06:29,418
whatever it asked me to do there so it

145
00:06:27,620 --> 00:06:31,399
is good to go I also changed the font

146
00:06:29,418 --> 00:06:32,990
size which people were requesting so

147
00:06:31,399 --> 00:06:34,848
they could see it better again this is a

148
00:06:32,990 --> 00:06:36,710
new machine we installed just a few

149
00:06:34,848 --> 00:06:41,300
weeks ago so it kind of had to be reset

150
00:06:36,709 --> 00:06:45,308
up like the old one so if we take a look

151
00:06:41,300 --> 00:06:47,930
at what's going on if I run the program

152
00:06:45,309 --> 00:06:51,529
you can kind of see that we've got our

153
00:06:47,930 --> 00:06:53,658
sort of unlit world here and if I hit f1

154
00:06:51,528 --> 00:06:55,430
it will do one lighting computation on

155
00:06:53,658 --> 00:06:57,288
the CPU side where it which is where

156
00:06:55,430 --> 00:06:59,538
we're debugging it at the moment

157
00:06:57,288 --> 00:07:02,329
and we can kind of take a look and see

158
00:06:59,538 --> 00:07:04,968
what were what we're getting for

159
00:07:02,329 --> 00:07:07,008
lighting results here right and even

160
00:07:04,968 --> 00:07:10,490
though this was the first time we really

161
00:07:07,009 --> 00:07:11,930
ran all the code that we typed in one of

162
00:07:10,490 --> 00:07:15,740
the interesting things about it is it's

163
00:07:11,930 --> 00:07:20,028
really not that bad it's got some issues

164
00:07:15,740 --> 00:07:22,399
to it that are difficult to explain away

165
00:07:20,028 --> 00:07:24,769
and so I think we do have some problems

166
00:07:22,399 --> 00:07:28,639
with the shadowing the reason I say that

167
00:07:24,769 --> 00:07:36,498
is because you can see there it's really

168
00:07:28,639 --> 00:07:38,478
kind of a tough tough situation you can

169
00:07:36,499 --> 00:07:41,059
see how light is propagating beyond the

170
00:07:38,478 --> 00:07:43,550
blockers here this is fairly bright out

171
00:07:41,059 --> 00:07:45,559
here and really that should be dark

172
00:07:43,550 --> 00:07:48,978
because here's the light source and it

173
00:07:45,559 --> 00:07:50,539
can't really get over there right but of

174
00:07:48,978 --> 00:07:52,639
course the thing that is also a little

175
00:07:50,538 --> 00:07:56,748
bit difficult and it's important to

176
00:07:52,639 --> 00:07:58,819
remember here is that that we are not

177
00:07:56,749 --> 00:08:00,620
computing lighting on this actual scene

178
00:07:58,819 --> 00:08:04,189
we are computing lighting on the

179
00:08:00,620 --> 00:08:06,860
synthetic blockers that we got and so I

180
00:08:04,189 --> 00:08:09,979
think when you know and those little

181
00:08:06,860 --> 00:08:12,408
synthetic reflectors were kind of

182
00:08:09,978 --> 00:08:15,168
weirdly shaped right and and we may need

183
00:08:12,408 --> 00:08:18,319
to kind of work on getting those things

184
00:08:15,168 --> 00:08:20,120
to be more accurate descriptions of the

185
00:08:18,319 --> 00:08:23,539
scene if we want the lighting to be okay

186
00:08:20,120 --> 00:08:24,500
so what I want to start by doing is I'd

187
00:08:23,538 --> 00:08:26,180
like to switch

188
00:08:24,500 --> 00:08:30,670
back to a mode where we can visualize

189
00:08:26,180 --> 00:08:33,680
the actual lighting elements themselves

190
00:08:30,670 --> 00:08:35,149
because I think we need to do that in

191
00:08:33,679 --> 00:08:36,949
order to start assessing whether or not

192
00:08:35,149 --> 00:08:38,809
the shadowing is working correctly and

193
00:08:36,950 --> 00:08:40,190
other things like that so as we start to

194
00:08:38,809 --> 00:08:42,408
construct test cases I think it's gonna

195
00:08:40,190 --> 00:08:46,040
be important to be looking at the actual

196
00:08:42,408 --> 00:08:49,100
geometry we're doing rather than the

197
00:08:46,039 --> 00:08:50,449
geometry of the game which is it not the

198
00:08:49,100 --> 00:08:53,000
Jean tree we're using for actual

199
00:08:50,450 --> 00:08:54,379
lighting now maybe we should be using

200
00:08:53,000 --> 00:08:56,379
the geometry of the game for actual

201
00:08:54,379 --> 00:08:59,409
lighting that's sort of a separate issue

202
00:08:56,379 --> 00:09:03,799
but you know that's that's sort of

203
00:08:59,409 --> 00:09:07,490
neither here nor there so anyway when we

204
00:09:03,799 --> 00:09:10,099
output our lighting in here we've kind

205
00:09:07,490 --> 00:09:11,899
of got this output text or debug stuff

206
00:09:10,100 --> 00:09:14,330
and output lighting quads output letting

207
00:09:11,899 --> 00:09:18,350
verts what I might want to do is

208
00:09:14,330 --> 00:09:21,830
actually run one of these instead so

209
00:09:18,350 --> 00:09:23,269
when we do output lighting I believe

210
00:09:21,830 --> 00:09:27,980
that is I don't even think that's

211
00:09:23,269 --> 00:09:31,850
getting called at the moment so if I

212
00:09:27,980 --> 00:09:33,860
were to run output lighting here

213
00:09:31,850 --> 00:09:36,139
I believe what it's currently set to do

214
00:09:33,860 --> 00:09:40,750
in the textures mode is it's actually

215
00:09:36,139 --> 00:09:43,189
set to output the voxels so if we take

216
00:09:40,750 --> 00:09:45,230
the world and run the lighting solution

217
00:09:43,190 --> 00:09:49,460
then what we're actually going to get

218
00:09:45,230 --> 00:09:53,269
here is just the location of the voxels

219
00:09:49,460 --> 00:09:58,220
in the voxel grid and we're gonna we're

220
00:09:53,269 --> 00:10:00,350
gonna show one cube well they're not

221
00:09:58,220 --> 00:10:04,220
really cubes but we're gonna show one

222
00:10:00,350 --> 00:10:07,580
voxel element at the center of the voxel

223
00:10:04,220 --> 00:10:10,610
in every case where there was some

224
00:10:07,580 --> 00:10:12,050
lighting element in that voxel and you

225
00:10:10,610 --> 00:10:13,930
can see that that looks roughly correct

226
00:10:12,049 --> 00:10:16,939
so I'm not really concerned about that

227
00:10:13,929 --> 00:10:19,579
that's part of the algorithm seems fine

228
00:10:16,940 --> 00:10:21,080
we have issues to address in terms of

229
00:10:19,580 --> 00:10:23,240
how we're sampling around them the

230
00:10:21,080 --> 00:10:25,490
voxels and how big the voxels should be

231
00:10:23,240 --> 00:10:28,430
and stuff like that but for the moment

232
00:10:25,490 --> 00:10:31,879
that's really not the concern so I want

233
00:10:28,429 --> 00:10:35,958
to switch to trying to output the

234
00:10:31,879 --> 00:10:39,549
reflectors here and what I'm gonna do

235
00:10:35,958 --> 00:10:43,669
there is when we run

236
00:10:39,549 --> 00:10:47,208
this code I want to look at these actual

237
00:10:43,669 --> 00:10:51,229
pieces that we've created which are the

238
00:10:47,208 --> 00:10:53,028
things we're actually running the

239
00:10:51,230 --> 00:10:55,159
lighting solution on now you have to

240
00:10:53,028 --> 00:10:57,350
recall that we're we're not even really

241
00:10:55,159 --> 00:11:00,169
drawing these in the quite the way that

242
00:10:57,350 --> 00:11:02,540
they would be drawn these would actually

243
00:11:00,169 --> 00:11:04,789
be discs so where these are just sort of

244
00:11:02,539 --> 00:11:06,919
like little quads that's what I render

245
00:11:04,789 --> 00:11:09,198
attempts to draw we just drew quads that

246
00:11:06,919 --> 00:11:11,659
are roughly approximating where the disc

247
00:11:09,198 --> 00:11:21,379
would be but the lighting solution is

248
00:11:11,659 --> 00:11:24,189
happening entirely on these yeah it's

249
00:11:21,379 --> 00:11:26,600
happening entirely on these reflectors

250
00:11:24,190 --> 00:11:31,040
now I'm already seeing something

251
00:11:26,600 --> 00:11:34,579
particularly odd here which is that if

252
00:11:31,039 --> 00:11:37,669
we take a look at what we're seeing from

253
00:11:34,578 --> 00:11:39,739
these we actually don't see any light

254
00:11:37,669 --> 00:11:42,198
out in the areas where we were seeing

255
00:11:39,740 --> 00:11:45,440
light before now there's a little bit

256
00:11:42,198 --> 00:11:48,948
right that leaked out in here but not a

257
00:11:45,440 --> 00:11:51,890
whole lot right most of it the light was

258
00:11:48,948 --> 00:11:54,349
actually correctly shadowed even though

259
00:11:51,889 --> 00:11:57,049
we really haven't built geometry that's

260
00:11:54,350 --> 00:12:00,379
particularly correct so you know we

261
00:11:57,049 --> 00:12:02,899
probably need to spam more reflectors in

262
00:12:00,379 --> 00:12:07,929
a lot of these places in order to really

263
00:12:02,899 --> 00:12:11,269
make this work right but even so even

264
00:12:07,929 --> 00:12:14,328
accounting for that you can kind of see

265
00:12:11,269 --> 00:12:17,839
that it did it wasn't that bad in terms

266
00:12:14,328 --> 00:12:22,149
of how it actually worked here with

267
00:12:17,839 --> 00:12:22,149
these reflectors right

268
00:12:28,720 --> 00:12:36,320
so just looking at this that starts to

269
00:12:33,799 --> 00:12:41,120
raise some questions to me as to why if

270
00:12:36,320 --> 00:12:54,770
I actually go in here and tell it not to

271
00:12:41,120 --> 00:12:56,779
do any of this stuff right so if I tell

272
00:12:54,769 --> 00:12:59,629
it not to do any of that stuff why we're

273
00:12:56,779 --> 00:13:05,509
getting all of this light out here right

274
00:12:59,629 --> 00:13:10,490
and that suggests to me again if I just

275
00:13:05,509 --> 00:13:12,769
like update the code here that suggests

276
00:13:10,490 --> 00:13:14,960
to me that the reflection pass is

277
00:13:12,769 --> 00:13:16,970
actually not producing as bad a results

278
00:13:14,960 --> 00:13:19,940
as it we would be led to believe from

279
00:13:16,970 --> 00:13:22,670
that and then it appears like it's

280
00:13:19,940 --> 00:13:27,040
mostly the final gather pass that's

281
00:13:22,669 --> 00:13:30,979
producing that bleed through lighting

282
00:13:27,039 --> 00:13:32,089
now the question is why is that and I

283
00:13:30,980 --> 00:13:35,360
think there's a couple of reasons that

284
00:13:32,090 --> 00:13:39,290
could be now one is that the that path

285
00:13:35,360 --> 00:13:41,060
is operating improperly like one

286
00:13:39,289 --> 00:13:43,669
possibility is certainly that the final

287
00:13:41,059 --> 00:13:47,299
gather is just wrong okay I mean

288
00:13:43,669 --> 00:13:49,099
certainly option and if we take a look

289
00:13:47,299 --> 00:13:51,199
at it here here's the gather final

290
00:13:49,100 --> 00:13:54,259
lighting so one possibility is that's

291
00:13:51,200 --> 00:13:57,230
just wrong right it just it is not

292
00:13:54,259 --> 00:13:59,120
working properly and it's allowing light

293
00:13:57,230 --> 00:14:00,789
to be transferred in situations where

294
00:13:59,120 --> 00:14:05,240
light should not be transferred

295
00:14:00,789 --> 00:14:07,279
certainly possible however I'm not sure

296
00:14:05,240 --> 00:14:09,980
that that's the most likely explanation

297
00:14:07,279 --> 00:14:13,490
it could also be that there's another

298
00:14:09,980 --> 00:14:16,759
explanation and that explanation is that

299
00:14:13,490 --> 00:14:19,879
the reason the final gather is able to

300
00:14:16,759 --> 00:14:23,299
gather light past the shadowing is

301
00:14:19,879 --> 00:14:25,580
because it is casting more Rays and it's

302
00:14:23,299 --> 00:14:29,750
able right it's casting twice the number

303
00:14:25,580 --> 00:14:35,420
of rays so it's able to generate enough

304
00:14:29,750 --> 00:14:40,440
rays to see through the holes right in

305
00:14:35,419 --> 00:14:42,319
in the geometry now I will admit

306
00:14:40,440 --> 00:14:44,640
that doesn't seem like a very plausible

307
00:14:42,320 --> 00:14:47,310
explanation why does it not seem like a

308
00:14:44,639 --> 00:14:53,699
very plausible - well because if I run

309
00:14:47,309 --> 00:14:55,469
this right and I look here you know some

310
00:14:53,700 --> 00:14:59,430
of it seems a little bit plausible the

311
00:14:55,470 --> 00:15:02,370
fact that these are red lights here have

312
00:14:59,429 --> 00:15:05,429
gotten through does suggest that the Ray

313
00:15:02,370 --> 00:15:08,669
probing is able to sort of get through

314
00:15:05,429 --> 00:15:13,109
the geometry even in the other one right

315
00:15:08,669 --> 00:15:16,529
so you know I I do think that lends some

316
00:15:13,110 --> 00:15:18,680
credence to it but when I turn that off

317
00:15:16,529 --> 00:15:21,299
when we look at the final result here

318
00:15:18,679 --> 00:15:23,279
the the thing that kind of makes me a

319
00:15:21,299 --> 00:15:25,799
little suspicious is that it doesn't

320
00:15:23,279 --> 00:15:30,120
really get that dim back here either

321
00:15:25,799 --> 00:15:31,589
right it's pretty bright now I guess I

322
00:15:30,120 --> 00:15:33,539
could believe that that was enough

323
00:15:31,590 --> 00:15:36,780
dimmer I mean this is fairly bright

324
00:15:33,539 --> 00:15:39,209
white over here and this is blue which

325
00:15:36,779 --> 00:15:42,019
is suggesting that it's coming from more

326
00:15:39,210 --> 00:15:46,290
of a bounce sort of a thing I don't know

327
00:15:42,019 --> 00:15:51,319
but it's definitely the case that I you

328
00:15:46,289 --> 00:15:53,669
know I'm just a little suspicious pish

329
00:15:51,320 --> 00:15:56,790
so I'm gonna go ahead and take a look at

330
00:15:53,669 --> 00:15:59,159
this a little more carefully and we're

331
00:15:56,789 --> 00:16:01,889
gonna start to run through this code and

332
00:15:59,159 --> 00:16:03,539
maybe construct some testing like we can

333
00:16:01,889 --> 00:16:07,019
maybe construct some situations to see

334
00:16:03,539 --> 00:16:08,819
what's happening more explicitly so that

335
00:16:07,019 --> 00:16:12,059
we can verify that this is working

336
00:16:08,820 --> 00:16:14,010
better so I'm it's just to try to keep

337
00:16:12,059 --> 00:16:15,919
my mental process out loud here so

338
00:16:14,009 --> 00:16:19,919
people can hear what I'm going through

339
00:16:15,919 --> 00:16:21,599
and how I'm analyzing the problem the

340
00:16:19,919 --> 00:16:26,039
first thing that's a little that I just

341
00:16:21,600 --> 00:16:28,649
kind of want to get that I wanted to

342
00:16:26,039 --> 00:16:32,639
test is I immediately thought in my head

343
00:16:28,649 --> 00:16:33,659
this is a bit concerning to me the the

344
00:16:32,639 --> 00:16:36,210
way we're doing the raycast

345
00:16:33,659 --> 00:16:39,000
so what I looked as I was looking going

346
00:16:36,210 --> 00:16:42,000
like okay I saw what was happening in

347
00:16:39,000 --> 00:16:43,889
that scene and I was like I'm not sure

348
00:16:42,000 --> 00:16:46,589
that these blockers are actually

349
00:16:43,889 --> 00:16:52,759
blocking rays that are going from behind

350
00:16:46,589 --> 00:16:53,860
them right and if you take a look at

351
00:16:52,759 --> 00:16:58,870
what

352
00:16:53,860 --> 00:17:03,419
running here I'm sorry that into

353
00:16:58,870 --> 00:17:03,419
position that there we go why are you

354
00:17:04,019 --> 00:17:09,689
guys have to wait for the camera to get

355
00:17:06,220 --> 00:17:12,160
into place what did I do

356
00:17:09,689 --> 00:17:14,610
how did I break it I haven't even done

357
00:17:12,160 --> 00:17:14,610
anything yet

358
00:17:27,500 --> 00:17:31,940
you just go grab this here real quick

359
00:17:42,079 --> 00:17:45,139
all right

360
00:17:48,950 --> 00:17:55,230
there we go uh so if we take a look at

361
00:17:53,609 --> 00:17:56,849
what's going on here I was like well

362
00:17:55,230 --> 00:18:00,120
when these things are looking through

363
00:17:56,849 --> 00:18:02,009
here I wonder if they're properly like

364
00:18:00,119 --> 00:18:04,019
of what if they're properly hitting the

365
00:18:02,009 --> 00:18:07,170
backsides of things and I remembered

366
00:18:04,019 --> 00:18:11,150
that we decided that we didn't want to

367
00:18:07,170 --> 00:18:14,990
have things that were one sided anymore

368
00:18:11,150 --> 00:18:14,990
that's our e to side anymore

369
00:18:19,160 --> 00:18:26,009
so things that are two-sided like you

370
00:18:23,849 --> 00:18:27,750
know treating a card as if it as if it

371
00:18:26,009 --> 00:18:30,690
hit from both sides we're not doing that

372
00:18:27,750 --> 00:18:33,180
anymore so actually these things are the

373
00:18:30,690 --> 00:18:42,590
only parts that you can hit so if I

374
00:18:33,180 --> 00:18:48,440
switch it back to the reflector output

375
00:18:42,589 --> 00:18:54,750
here right we've got all these sort of

376
00:18:48,440 --> 00:18:57,090
cards in here and if I look for example

377
00:18:54,750 --> 00:18:58,170
if these the only things that they can

378
00:18:57,089 --> 00:19:00,299
that will prevent them bringing the

379
00:18:58,170 --> 00:19:02,070
light source is this row and this row

380
00:19:00,299 --> 00:19:03,180
well this top part too but that's not

381
00:19:02,069 --> 00:19:06,329
really in the way of the light source

382
00:19:03,180 --> 00:19:08,039
right so it's really just these and I

383
00:19:06,329 --> 00:19:10,230
guess these interior ones would also

384
00:19:08,039 --> 00:19:15,450
count if you happen to hit them so

385
00:19:10,230 --> 00:19:17,370
looking from someone here right it would

386
00:19:15,450 --> 00:19:19,740
be pretty easy to shoot through and hit

387
00:19:17,369 --> 00:19:21,479
this light source because none of these

388
00:19:19,740 --> 00:19:22,950
these aren't really blocking you that

389
00:19:21,480 --> 00:19:26,460
much right there's this giant hole in

390
00:19:22,950 --> 00:19:30,000
here so I feel like we do kind of have a

391
00:19:26,460 --> 00:19:33,450
little bit of a problem there where we

392
00:19:30,000 --> 00:19:35,400
don't really our our model is not

393
00:19:33,450 --> 00:19:37,069
sufficient to really capture the

394
00:19:35,400 --> 00:19:40,350
lighting that we're interested in right

395
00:19:37,069 --> 00:19:43,889
we need some way of making this more

396
00:19:40,349 --> 00:19:47,389
robust and that may mean having a ray

397
00:19:43,890 --> 00:19:47,390
cast that's more accurate right

398
00:19:53,190 --> 00:20:01,380
and that that could be a bit tricky but

399
00:19:56,690 --> 00:20:03,410
I feel like we may want to do that so

400
00:20:01,380 --> 00:20:07,440
here's some things I'm thinking of

401
00:20:03,410 --> 00:20:08,730
so first off we know we have a bunch we

402
00:20:07,440 --> 00:20:11,210
know we have essentially two different

403
00:20:08,730 --> 00:20:18,240
things we're trying to recast against

404
00:20:11,210 --> 00:20:20,340
one of them is like a cube right one of

405
00:20:18,240 --> 00:20:23,009
them is is you know a right rectangular

406
00:20:20,339 --> 00:20:27,329
prism and that's what most of the sort

407
00:20:23,009 --> 00:20:32,069
of ground is made out of so you know if

408
00:20:27,329 --> 00:20:35,099
I if I switch back to not showing the

409
00:20:32,069 --> 00:20:37,889
lighting here so I could just set show

410
00:20:35,099 --> 00:20:41,879
lighting on and off in fact do I do I

411
00:20:37,890 --> 00:20:46,700
have a thing set a way to toggle that

412
00:20:41,880 --> 00:20:46,700
like an f2 or something

413
00:20:53,779 --> 00:20:59,690
like if I do this I'm just curious what

414
00:20:56,089 --> 00:21:05,329
happens if I hit f1 again I already

415
00:20:59,690 --> 00:21:07,190
dirty addressed this okay alright so I

416
00:21:05,329 --> 00:21:08,480
actually can switch between this all I

417
00:21:07,190 --> 00:21:13,190
want all right

418
00:21:08,480 --> 00:21:14,360
that makes it nice so you know if we

419
00:21:13,190 --> 00:21:15,860
take a look at what the actual world is

420
00:21:14,359 --> 00:21:18,949
made out of there's a lot of these sort

421
00:21:15,859 --> 00:21:21,139
of cube elements right and if I switch

422
00:21:18,950 --> 00:21:22,279
back here I see that I've generated

423
00:21:21,140 --> 00:21:24,770
these cube elements into all these

424
00:21:22,279 --> 00:21:29,359
little reflectors it it begs the

425
00:21:24,769 --> 00:21:32,420
question like for the purposes of Ray

426
00:21:29,359 --> 00:21:34,939
casting shouldn't I just be able to use

427
00:21:32,420 --> 00:21:37,940
the actual actual elements that would

428
00:21:34,940 --> 00:21:40,730
line up perfectly with this right and so

429
00:21:37,940 --> 00:21:44,210
it seems like part of the problem is

430
00:21:40,730 --> 00:21:49,370
that look we want to do you know

431
00:21:44,210 --> 00:21:51,019
transmission here and we have some

432
00:21:49,369 --> 00:21:53,119
things which are arbitrarily shaped

433
00:21:51,019 --> 00:21:55,789
those are our sprites which can have any

434
00:21:53,119 --> 00:21:59,119
kind of shape really because whatever

435
00:21:55,789 --> 00:22:03,950
the shape of the the bitmap is that's

436
00:21:59,119 --> 00:22:05,149
what they're gonna do right but we also

437
00:22:03,950 --> 00:22:10,910
have a bunch of structure geometry

438
00:22:05,150 --> 00:22:13,850
that's kind of cube like right and so

439
00:22:10,910 --> 00:22:16,820
picking a disk is not a particularly

440
00:22:13,849 --> 00:22:20,990
good choice for the ray casting because

441
00:22:16,819 --> 00:22:25,819
we can't fit disks to cubes and cover

442
00:22:20,990 --> 00:22:29,660
them correctly right disks fit circular

443
00:22:25,819 --> 00:22:32,750
things cubes are not circular

444
00:22:29,660 --> 00:22:36,259
so it might be a better idea to switch

445
00:22:32,750 --> 00:22:39,650
to a reflection element whose shape is

446
00:22:36,259 --> 00:22:42,470
going to line up with the cube like a

447
00:22:39,650 --> 00:22:50,300
flat plate is probably a much better

448
00:22:42,470 --> 00:22:55,339
choice and we do have at least at the

449
00:22:50,299 --> 00:22:57,470
moment we also have the luxury of not

450
00:22:55,339 --> 00:23:00,139
even needing that flat plate to be

451
00:22:57,470 --> 00:23:03,380
arbitrarily oriented right the flat

452
00:23:00,140 --> 00:23:07,040
plate is also kind of in a situation

453
00:23:03,380 --> 00:23:09,650
where it could be axis aligned right

454
00:23:07,039 --> 00:23:13,129
none of our pubes ever break access

455
00:23:09,650 --> 00:23:15,290
alignment in the game that may not be

456
00:23:13,130 --> 00:23:18,230
true forever we may end up with some

457
00:23:15,289 --> 00:23:19,970
rotating stuff at some point right

458
00:23:18,230 --> 00:23:22,759
so we may not want to bake that

459
00:23:19,970 --> 00:23:24,470
assumption in too hard but it is an

460
00:23:22,759 --> 00:23:26,539
option right at least everything that we

461
00:23:24,470 --> 00:23:30,920
were considering building so far has

462
00:23:26,539 --> 00:23:33,200
that property to it right so what we'd

463
00:23:30,920 --> 00:23:35,539
like to do is go ahead and maybe do that

464
00:23:33,200 --> 00:23:37,759
first like that seems like maybe the

465
00:23:35,539 --> 00:23:40,399
saner thing to do first is create

466
00:23:37,759 --> 00:23:44,029
something that can do that intersection

467
00:23:40,400 --> 00:23:45,920
test and maybe then from there we can

468
00:23:44,029 --> 00:23:48,170
start to debug this a little bit more

469
00:23:45,920 --> 00:23:49,970
because at the moment I'm just thinking

470
00:23:48,170 --> 00:23:51,950
well you know I can start to construct

471
00:23:49,970 --> 00:23:54,710
some cases here and maybe start to debug

472
00:23:51,950 --> 00:23:57,289
the lighting code but really it seems

473
00:23:54,710 --> 00:24:00,259
like a lot of the problem for the most

474
00:23:57,289 --> 00:24:02,059
part is just that like even if the

475
00:24:00,259 --> 00:24:05,599
lighting solution were correct our

476
00:24:02,059 --> 00:24:10,250
geometry is so wrong that it just

477
00:24:05,599 --> 00:24:11,959
doesn't seem like it's gonna that

478
00:24:10,250 --> 00:24:16,509
doesn't seem like it's gonna ever

479
00:24:11,960 --> 00:24:22,009
produce an acceptable lighting solution

480
00:24:16,509 --> 00:24:27,019
with the way it's broken up right so

481
00:24:22,009 --> 00:24:30,230
let's suppose that we wanted to do

482
00:24:27,019 --> 00:24:33,769
better intersection testing in this case

483
00:24:30,230 --> 00:24:38,329
right I'm gonna need Milton for this cuz

484
00:24:33,769 --> 00:24:40,900
I want to draw it out and today's day

485
00:24:38,329 --> 00:24:40,899
4:11

486
00:24:59,640 --> 00:25:08,790
so I don't know what this is but let's

487
00:25:01,529 --> 00:25:17,099
just say this is a rectangle we could

488
00:25:08,789 --> 00:25:18,960
also use a square all right so what we

489
00:25:17,099 --> 00:25:21,599
want to do here is say let's suppose we

490
00:25:18,960 --> 00:25:23,548
have a rectangle somewhere and we're ray

491
00:25:21,599 --> 00:25:29,879
casting against it what we want to do is

492
00:25:23,548 --> 00:25:32,849
say where does the where does the Ray

493
00:25:29,880 --> 00:25:37,410
intersect the rectangle if it intersects

494
00:25:32,849 --> 00:25:40,168
the rectangle and these are kind of easy

495
00:25:37,410 --> 00:25:43,679
questions to ask in series but harder to

496
00:25:40,169 --> 00:25:45,390
ask together right so if we just look at

497
00:25:43,679 --> 00:25:47,340
this question it's like oh well I don't

498
00:25:45,390 --> 00:25:49,590
know how do I know if it did this or

499
00:25:47,339 --> 00:25:52,349
that or whatever right and miss the

500
00:25:49,589 --> 00:25:55,709
rectangle so let's break the problem

501
00:25:52,349 --> 00:25:58,079
down from the fairly complex case of

502
00:25:55,710 --> 00:26:02,039
Desiree hit a rectangle to something

503
00:25:58,079 --> 00:26:04,859
easier to deal with so let's take some

504
00:26:02,039 --> 00:26:08,789
assumptions first to make this a little

505
00:26:04,859 --> 00:26:13,939
bit simpler so first for any rectangle

506
00:26:08,789 --> 00:26:13,940
we can't assume that it looked like this

507
00:26:21,140 --> 00:26:26,030
right we can assume that the rectangle

508
00:26:23,329 --> 00:26:28,399
had a width and a height that we specify

509
00:26:26,029 --> 00:26:30,950
we can assume that's aligned with the x

510
00:26:28,400 --> 00:26:33,530
and y axes now why can we assume that

511
00:26:30,950 --> 00:26:39,080
well we can assume that because any ray

512
00:26:33,529 --> 00:26:44,058
and any sort of origin and direction of

513
00:26:39,079 --> 00:26:46,939
array could be rotated into the space of

514
00:26:44,058 --> 00:26:50,869
the rectangle right so to begin our

515
00:26:46,940 --> 00:26:53,750
analysis we could assume that that were

516
00:26:50,869 --> 00:27:00,048
true right we could assume that we'd

517
00:26:53,750 --> 00:27:03,048
already put it into a space where we had

518
00:27:00,048 --> 00:27:05,660
X and y and this were expressed and you

519
00:27:03,048 --> 00:27:07,759
know this was Z and this were expressed

520
00:27:05,660 --> 00:27:10,640
completely relative to the rectangles

521
00:27:07,759 --> 00:27:12,829
own reference frame right now we may not

522
00:27:10,640 --> 00:27:14,630
want to actually do that transform

523
00:27:12,829 --> 00:27:16,399
explicitly because we may want to try

524
00:27:14,630 --> 00:27:17,929
and bake it down to the simplest set of

525
00:27:16,400 --> 00:27:19,790
equations this is Ray casting it's

526
00:27:17,929 --> 00:27:23,120
expensive we want to make it as cheap as

527
00:27:19,789 --> 00:27:25,339
possible cause lots of rays are cast so

528
00:27:23,119 --> 00:27:27,168
I mean I usually want to do that but

529
00:27:25,339 --> 00:27:29,178
just for purposes of our thinking

530
00:27:27,169 --> 00:27:34,130
process we could assume that was the

531
00:27:29,179 --> 00:27:35,809
case right so we already know how to

532
00:27:34,130 --> 00:27:40,760
take the intersection of a ray with a

533
00:27:35,808 --> 00:27:43,220
plane right so ray versus plane this

534
00:27:40,759 --> 00:27:45,619
we've already done because that's what

535
00:27:43,220 --> 00:27:47,120
we had to do in our existing ray cast if

536
00:27:45,619 --> 00:27:53,808
I remember collect correctly right I

537
00:27:47,119 --> 00:27:56,178
mean we wrote this ray cast here and you

538
00:27:53,808 --> 00:27:58,789
can see us doing exactly this you can

539
00:27:56,179 --> 00:28:04,540
see us taking the time at which the ray

540
00:27:58,789 --> 00:28:04,539
hits the plane of the circle right

541
00:28:08,808 --> 00:28:14,579
so if you don't remember this go back to

542
00:28:11,278 --> 00:28:20,159
it but you can see right here this is us

543
00:28:14,579 --> 00:28:25,439
computing for for a conical you know for

544
00:28:20,159 --> 00:28:33,539
a disc this is us computing we're on the

545
00:28:25,440 --> 00:28:37,710
the plane of the disk we hit so if we

546
00:28:33,538 --> 00:28:41,819
already have this answer right then we

547
00:28:37,710 --> 00:28:46,169
effectively know we're in here the ray

548
00:28:41,819 --> 00:28:48,470
hits so in order to test whether or not

549
00:28:46,169 --> 00:28:51,120
we hit a rectangle instead of a cone

550
00:28:48,470 --> 00:28:52,798
instead of a disk it's not that

551
00:28:51,119 --> 00:28:56,609
difficult right if it was already

552
00:28:52,798 --> 00:29:00,388
oriented properly all we do was take the

553
00:28:56,609 --> 00:29:02,219
distance in X and the distance sorry the

554
00:29:00,388 --> 00:29:04,769
distance in X and the distance in Y and

555
00:29:02,220 --> 00:29:06,298
we would see whether it exceeded half

556
00:29:04,769 --> 00:29:08,069
the width in either direction and half

557
00:29:06,298 --> 00:29:10,918
the height in either direction if it

558
00:29:08,069 --> 00:29:12,960
exceeded one of those it was outside if

559
00:29:10,919 --> 00:29:17,038
it didn't exceed either of them then

560
00:29:12,960 --> 00:29:19,379
it's inside right so much like in the

561
00:29:17,038 --> 00:29:21,148
disk case we just checked what the

562
00:29:19,378 --> 00:29:23,490
distance was from the center right

563
00:29:21,148 --> 00:29:24,989
because that right since this is how you

564
00:29:23,490 --> 00:29:26,878
would do a circle we can just see what

565
00:29:24,990 --> 00:29:28,679
the distance is we know we're inside for

566
00:29:26,878 --> 00:29:33,658
a rectangle all we need to do is take an

567
00:29:28,679 --> 00:29:35,970
axial distance right but of course we

568
00:29:33,659 --> 00:29:41,100
have a problem since we don't actually

569
00:29:35,970 --> 00:29:42,179
know what our x and y axes since we

570
00:29:41,099 --> 00:29:44,128
don't actually know that our x and y

571
00:29:42,179 --> 00:29:45,389
axes are aligned in this way in fact we

572
00:29:44,128 --> 00:29:50,158
know effectively that they're not

573
00:29:45,388 --> 00:29:52,949
aligned in this way we can't do that

574
00:29:50,159 --> 00:29:55,169
simple check right we can't just say is

575
00:29:52,950 --> 00:29:58,048
it you know what's the X distance what's

576
00:29:55,169 --> 00:30:00,778
the Y distance because we didn't first

577
00:29:58,048 --> 00:30:03,628
do this transform what we're actually

578
00:30:00,778 --> 00:30:05,669
gonna have is just some rectangle

579
00:30:03,628 --> 00:30:08,609
floating in space and a point on we know

580
00:30:05,669 --> 00:30:10,919
it's on the plane so how do we then do

581
00:30:08,609 --> 00:30:12,719
this measurement well like I said we

582
00:30:10,919 --> 00:30:13,919
could transform the whole problem we

583
00:30:12,720 --> 00:30:15,569
could compute a transform that

584
00:30:13,919 --> 00:30:17,759
transforms the Ray into the point of

585
00:30:15,569 --> 00:30:19,648
thing and then do a Pablo plow right way

586
00:30:17,759 --> 00:30:21,509
too much work we don't need to do all

587
00:30:19,648 --> 00:30:24,659
that right the Ray intersects

588
00:30:21,509 --> 00:30:26,700
test already placed us down there we

589
00:30:24,660 --> 00:30:28,500
know we're on the plane in order to

590
00:30:26,700 --> 00:30:32,460
define this rectangle in the first place

591
00:30:28,500 --> 00:30:35,430
we would need an X and y-axis right I

592
00:30:32,460 --> 00:30:38,370
mean that's that's how we would define

593
00:30:35,430 --> 00:30:40,920
the rectangle so if our rectangle

594
00:30:38,369 --> 00:30:44,309
elements just store their x and y axes

595
00:30:40,920 --> 00:30:46,950
themselves then the inner product will

596
00:30:44,309 --> 00:30:49,799
give us exactly what we want that sort

597
00:30:46,950 --> 00:30:52,170
of does the local transform to put just

598
00:30:49,799 --> 00:30:54,480
the point in the plane into the space of

599
00:30:52,170 --> 00:30:59,600
the rectangle so if we know we have a

600
00:30:54,480 --> 00:30:59,599
unit axis in either direction here right

601
00:31:06,079 --> 00:31:13,349
so if we know we take a unit axis in

602
00:31:11,250 --> 00:31:15,750
either of these directions and we took

603
00:31:13,349 --> 00:31:18,419
the inner product with it then we would

604
00:31:15,750 --> 00:31:20,190
know that we got exactly what we

605
00:31:18,420 --> 00:31:25,860
expected right we would know that we got

606
00:31:20,190 --> 00:31:28,070
a we would know that we got the x

607
00:31:25,859 --> 00:31:34,469
coordinate right now we can do something

608
00:31:28,069 --> 00:31:37,200
potentially a little weirder here and so

609
00:31:34,470 --> 00:31:41,789
let me kind of give you a little

610
00:31:37,200 --> 00:31:43,920
background on this so think about what

611
00:31:41,789 --> 00:31:45,839
we're gonna have to do here right and

612
00:31:43,920 --> 00:31:47,880
let me explain the process explicitly

613
00:31:45,839 --> 00:31:49,980
for anyone who's a little hazy on

614
00:31:47,880 --> 00:31:51,330
exactly what's going on we've done this

615
00:31:49,980 --> 00:31:52,920
many times on handmade here but not

616
00:31:51,329 --> 00:31:54,059
everyone watches every episode obviously

617
00:31:52,920 --> 00:31:56,820
there's a lot of it so I'll just try to

618
00:31:54,059 --> 00:32:01,529
explain it briefly if we have a unit

619
00:31:56,819 --> 00:32:04,049
axis right so basically if we have an

620
00:32:01,529 --> 00:32:06,389
x-axis and a y-axis if we know that the

621
00:32:04,049 --> 00:32:09,440
length of these axes is both equal to 1

622
00:32:06,390 --> 00:32:12,930
right so we know that these are 1 long

623
00:32:09,440 --> 00:32:16,529
then the inner product of the axis with

624
00:32:12,930 --> 00:32:18,390
some point whatever the point is right

625
00:32:16,529 --> 00:32:21,629
so if I take the point and the inner

626
00:32:18,390 --> 00:32:24,030
product with say this x axis I know that

627
00:32:21,630 --> 00:32:26,850
I'm going to get the length of the point

628
00:32:24,029 --> 00:32:29,069
vector like right the length of the x

629
00:32:26,849 --> 00:32:31,500
axis times the cosine of the angle

630
00:32:29,069 --> 00:32:34,559
between them right that angle right

631
00:32:31,500 --> 00:32:35,400
there right I know this is what I'm

632
00:32:34,559 --> 00:32:37,769
going to get

633
00:32:35,400 --> 00:32:40,280
well if we know that this is unit length

634
00:32:37,769 --> 00:32:43,740
then we know that that term equals one

635
00:32:40,279 --> 00:32:46,558
okay and if we know the length of this

636
00:32:43,740 --> 00:32:47,759
right then we know that we're well in

637
00:32:46,558 --> 00:32:49,410
fact Burgas we know the length of this

638
00:32:47,759 --> 00:32:51,210
we know that what we'll end up with is

639
00:32:49,410 --> 00:32:54,769
the length of P times the cosine of

640
00:32:51,210 --> 00:32:57,539
theta now the cosine of theta is

641
00:32:54,769 --> 00:33:01,950
explicitly this leg of the triangle

642
00:32:57,539 --> 00:33:04,529
right right cosine of theta is the thing

643
00:33:01,950 --> 00:33:06,930
that if multiplied by this length will

644
00:33:04,529 --> 00:33:08,519
give us this length that's that's just

645
00:33:06,930 --> 00:33:11,789
triangles that's just right triangles

646
00:33:08,519 --> 00:33:13,769
right if I've got an angle here and I

647
00:33:11,789 --> 00:33:16,529
have a hypotenuse we know that this is

648
00:33:13,769 --> 00:33:18,269
hypothesis this side is hypotenuse

649
00:33:16,529 --> 00:33:20,220
cosine theta we know that this side is

650
00:33:18,269 --> 00:33:23,460
hypotenuse sine theta that's just right

651
00:33:20,220 --> 00:33:27,929
triangles right that's Pythagoras and

652
00:33:23,460 --> 00:33:30,569
and everybody else so if we know that

653
00:33:27,929 --> 00:33:33,330
that's true that means that this right

654
00:33:30,569 --> 00:33:35,069
here this P transpose X is the length of

655
00:33:33,329 --> 00:33:37,949
B cosine theta which is exactly the

656
00:33:35,069 --> 00:33:39,480
measurement of P along the x axis we've

657
00:33:37,950 --> 00:33:40,410
done this many times on hand made here

658
00:33:39,480 --> 00:33:44,279
right this should be familiar to

659
00:33:40,410 --> 00:33:46,110
everybody so if we had unit axes in both

660
00:33:44,279 --> 00:33:49,139
directions we know that we could just do

661
00:33:46,109 --> 00:33:51,719
P transpose X P transpose Y right and

662
00:33:49,140 --> 00:33:54,150
this would give us exactly what we

663
00:33:51,720 --> 00:33:56,970
wanted up here it would give us the x

664
00:33:54,150 --> 00:34:00,210
and y coordinates in the space of the

665
00:33:56,970 --> 00:34:04,140
rectangle which we could then compare to

666
00:34:00,210 --> 00:34:06,660
the width and height right so if we

667
00:34:04,140 --> 00:34:10,648
wanted to what we could store is x axis

668
00:34:06,660 --> 00:34:13,679
and width Y axis and height right and

669
00:34:10,648 --> 00:34:16,710
then we would just do this and see

670
00:34:13,679 --> 00:34:19,889
whether it falls between is greater than

671
00:34:16,710 --> 00:34:22,409
negative 1/2 the width and less than the

672
00:34:19,889 --> 00:34:24,000
width less than half the width you know

673
00:34:22,409 --> 00:34:27,599
in between the two right so it's it's

674
00:34:24,000 --> 00:34:30,750
this negative width is less than or

675
00:34:27,599 --> 00:34:33,329
equal to P transpose X is less than or

676
00:34:30,750 --> 00:34:36,989
equal to width and these need to both be

677
00:34:33,329 --> 00:34:38,159
over to right because we're going half

678
00:34:36,989 --> 00:34:42,589
the width one side half throat the other

679
00:34:38,159 --> 00:34:42,590
side and P transpose Y

680
00:34:45,139 --> 00:34:54,539
right I know what happened there to my

681
00:34:49,320 --> 00:34:56,460
why uh so anyway this is what we're

682
00:34:54,539 --> 00:35:01,289
talking about okay so hopefully that

683
00:34:56,460 --> 00:35:02,909
makes sense to everybody now this tells

684
00:35:01,289 --> 00:35:05,130
us whether we're inside the rectangle

685
00:35:02,909 --> 00:35:08,429
but it involves a bunch of comparisons

686
00:35:05,130 --> 00:35:10,559
right so it might be more interesting if

687
00:35:08,429 --> 00:35:12,149
we didn't have to have these extra

688
00:35:10,559 --> 00:35:12,869
variables lying around and could just do

689
00:35:12,150 --> 00:35:20,220
something a little bit more

690
00:35:12,869 --> 00:35:29,460
straightforward right okay well you can

691
00:35:20,219 --> 00:35:32,849
see that this is an equation itself

692
00:35:29,460 --> 00:35:36,449
right and if we multiply each of these

693
00:35:32,849 --> 00:35:40,679
parts of this inequality by the same

694
00:35:36,449 --> 00:35:43,980
value if it's a positive value we don't

695
00:35:40,679 --> 00:35:46,409
change the truth of it right so we could

696
00:35:43,980 --> 00:35:48,449
multiply each of these by like two for

697
00:35:46,409 --> 00:35:51,059
example and it would still be the same

698
00:35:48,449 --> 00:35:56,069
equation it would just have a two in

699
00:35:51,059 --> 00:35:59,489
each of the terms but it's still true so

700
00:35:56,070 --> 00:36:03,780
if we wanted to we could go ahead and

701
00:35:59,489 --> 00:36:07,049
take this requirement and multiply it by

702
00:36:03,780 --> 00:36:09,900
two over the width right if we wanted to

703
00:36:07,050 --> 00:36:12,300
right we could say multiply this by two

704
00:36:09,900 --> 00:36:14,220
over the width multiply this by two over

705
00:36:12,300 --> 00:36:16,650
the width multiply this by two over the

706
00:36:14,219 --> 00:36:18,269
width right and what would happen is we

707
00:36:16,650 --> 00:36:22,460
would get negative 1 less than or equal

708
00:36:18,269 --> 00:36:28,679
to 2 over the width times P transpose X

709
00:36:22,460 --> 00:36:30,750
less than equal to 1 right so now our

710
00:36:28,679 --> 00:36:34,429
comparison is with a constant and it's

711
00:36:30,750 --> 00:36:34,429
the same constant on either side right

712
00:36:34,489 --> 00:36:39,629
rather than the variable on either side

713
00:36:37,139 --> 00:36:43,019
it's the same thing it's just between

714
00:36:39,630 --> 00:36:45,480
negative 1 and 1 so the question is

715
00:36:43,019 --> 00:36:47,610
should we just do this well we just

716
00:36:45,480 --> 00:36:49,590
store 2 over the width and we multiplied

717
00:36:47,610 --> 00:36:53,340
by P transpose X and that sounds good

718
00:36:49,590 --> 00:36:56,039
right well remember we know that this

719
00:36:53,340 --> 00:36:58,660
equation here the reason we ended up

720
00:36:56,039 --> 00:37:03,489
with this was because we had lengths of

721
00:36:58,659 --> 00:37:06,369
length of X cosine theta and length of X

722
00:37:03,489 --> 00:37:09,759
dropped out of the equation because its

723
00:37:06,369 --> 00:37:11,769
length was 1 leaving us with only length

724
00:37:09,760 --> 00:37:13,540
of P cosine X which we know is the

725
00:37:11,769 --> 00:37:16,440
x-coordinate we were looking for right

726
00:37:13,539 --> 00:37:20,110
the x-coordinate of the point

727
00:37:16,440 --> 00:37:22,929
what if since we don't actually want

728
00:37:20,110 --> 00:37:25,990
that what we actually want is the two

729
00:37:22,929 --> 00:37:29,469
over width multiplied version of the

730
00:37:25,989 --> 00:37:32,919
coordinate to do our comparison what if

731
00:37:29,469 --> 00:37:35,919
we just stored the x-axis pre x 2 over

732
00:37:32,920 --> 00:37:39,329
the width then this term drops out and

733
00:37:35,920 --> 00:37:42,010
we're just left with the dot product of

734
00:37:39,329 --> 00:37:45,489
our special axis we'll call that X prime

735
00:37:42,010 --> 00:37:50,320
maybe you know if X prime equals two

736
00:37:45,489 --> 00:37:53,289
over width times X right we would just

737
00:37:50,320 --> 00:37:57,750
be left with this so now we can do one

738
00:37:53,289 --> 00:38:01,360
inner product and just test you know

739
00:37:57,750 --> 00:38:07,869
inner product absolute value test for

740
00:38:01,360 --> 00:38:10,500
less than one that's it right and that's

741
00:38:07,869 --> 00:38:10,500
pretty cheap

742
00:38:16,400 --> 00:38:21,139
so if we chose to do this which I think

743
00:38:19,460 --> 00:38:23,599
we should choose to do as you can tell

744
00:38:21,139 --> 00:38:26,420
by my sort of explaining it on the

745
00:38:23,599 --> 00:38:28,490
blackboard if we chose to do this then

746
00:38:26,420 --> 00:38:32,298
we could have lots of little rectangular

747
00:38:28,489 --> 00:38:35,298
elements they could be oriented any way

748
00:38:32,298 --> 00:38:42,588
they want and we only really pay the

749
00:38:35,298 --> 00:38:45,528
cost of storing two extra axes and doing

750
00:38:42,588 --> 00:38:47,480
two extra inner products twigs doing

751
00:38:45,528 --> 00:38:49,278
extra products and one comparison now we

752
00:38:47,480 --> 00:38:52,429
also but we also save a length squared

753
00:38:49,278 --> 00:38:54,498
so in some sense this is almost a wash

754
00:38:52,429 --> 00:38:55,818
the rectangle version is probably almost

755
00:38:54,498 --> 00:38:56,929
as cheap as the circular version the

756
00:38:55,818 --> 00:38:59,268
difference is just the storage is a

757
00:38:56,929 --> 00:39:00,858
little more expensive now we can

758
00:38:59,268 --> 00:39:02,118
optimize the storage more if we really

759
00:39:00,858 --> 00:39:04,548
wanted to so if it comes down to a

760
00:39:02,119 --> 00:39:05,838
storage issue we have options since we

761
00:39:04,548 --> 00:39:08,748
know we have to store the normal to the

762
00:39:05,838 --> 00:39:09,828
surface right because that's what gives

763
00:39:08,748 --> 00:39:11,149
us that's what allows us to do all our

764
00:39:09,829 --> 00:39:11,568
reflection computations in the first

765
00:39:11,150 --> 00:39:13,278
place

766
00:39:11,568 --> 00:39:14,599
and it tells it defines what plane it's

767
00:39:13,278 --> 00:39:17,389
in so it's how we do our beginning of

768
00:39:14,599 --> 00:39:20,059
array cast as well we obviously could

769
00:39:17,389 --> 00:39:22,848
just store the x-axis just the x axis

770
00:39:20,059 --> 00:39:24,829
and then cross-product the x axis with

771
00:39:22,849 --> 00:39:26,690
the to get the y axis cross mount the x

772
00:39:24,829 --> 00:39:28,309
axis with the z axis to get the y axis

773
00:39:26,690 --> 00:39:29,838
I'm not gonna do that because I don't

774
00:39:28,309 --> 00:39:31,249
think the extra storage is gonna be that

775
00:39:29,838 --> 00:39:32,480
big of a deal and that way we don't have

776
00:39:31,248 --> 00:39:33,558
to spend a lot of time doing extra cross

777
00:39:32,480 --> 00:39:35,239
products and then have a coefficient

778
00:39:33,559 --> 00:39:37,130
that tells you how long the y axis would

779
00:39:35,239 --> 00:39:40,068
be after you did that buh-buh-buh a lot

780
00:39:37,130 --> 00:39:42,710
right so I think all we want to do is

781
00:39:40,068 --> 00:39:44,449
store our premultiplied x and y axes and

782
00:39:42,710 --> 00:39:46,400
then I think we're pretty much done

783
00:39:44,449 --> 00:39:48,078
right we just do two over the width

784
00:39:46,400 --> 00:39:52,759
times the x axis two over the Heights

785
00:39:48,079 --> 00:39:55,670
time the y axis and we're done I'm gonna

786
00:39:52,759 --> 00:39:57,769
start out not doing that

787
00:39:55,670 --> 00:40:00,079
the reason I'm gonna start out not doing

788
00:39:57,768 --> 00:40:03,318
that is because we want to store our

789
00:40:00,079 --> 00:40:05,269
debug we want be able to draw the debug

790
00:40:03,318 --> 00:40:07,940
shapes that we're using so we're gonna

791
00:40:05,268 --> 00:40:11,719
want to not have to invert those at

792
00:40:07,940 --> 00:40:14,950
first but just so you can see we have a

793
00:40:11,719 --> 00:40:17,509
very clear path to a very easy way

794
00:40:14,949 --> 00:40:20,419
mathematically speaking of testing this

795
00:40:17,509 --> 00:40:23,449
and so when the time comes to sort of

796
00:40:20,420 --> 00:40:25,700
optimize this down it's not gonna be a

797
00:40:23,449 --> 00:40:29,179
huge disaster it's pretty straight

798
00:40:25,699 --> 00:40:30,199
forward any way you slice it okay so

799
00:40:29,179 --> 00:40:34,250
let's

800
00:40:30,199 --> 00:40:37,129
I'm moving to that scheme first thing

801
00:40:34,250 --> 00:40:40,969
I'm gonna do is I'm gonna change our

802
00:40:37,130 --> 00:40:44,420
extraction process so what I want to do

803
00:40:40,969 --> 00:40:46,250
here is go into render group and we kind

804
00:40:44,420 --> 00:40:50,260
of have these extract reflectors from

805
00:40:46,250 --> 00:40:54,170
quads extract reflectors from verts and

806
00:40:50,260 --> 00:40:59,680
what I want to do here is I want to try

807
00:40:54,170 --> 00:41:04,010
and figure out a way of making these

808
00:40:59,679 --> 00:41:05,539
reflectors just I'm gonna change

809
00:41:04,010 --> 00:41:11,320
fundamentally the way we're doing this

810
00:41:05,539 --> 00:41:11,320
so even before we change two rectangles

811
00:41:12,159 --> 00:41:20,389
no you know what let me do in the

812
00:41:15,108 --> 00:41:24,049
opposite order let's remove our extract

813
00:41:20,389 --> 00:41:25,578
from verts entirely we're just not gonna

814
00:41:24,050 --> 00:41:27,349
do this anymore

815
00:41:25,579 --> 00:41:29,720
we're gonna do extract from quads and

816
00:41:27,349 --> 00:41:33,019
the first thing I will do is I'll make

817
00:41:29,719 --> 00:41:34,549
it so that we extract exact quads so

818
00:41:33,019 --> 00:41:36,650
when we render the scene with the

819
00:41:34,550 --> 00:41:38,359
lighting it will line up exactly with

820
00:41:36,650 --> 00:41:39,440
all the quads right because now we'll be

821
00:41:38,358 --> 00:41:43,309
able to do that they don't have to be

822
00:41:39,440 --> 00:41:44,630
discs right so if we did that that's

823
00:41:43,309 --> 00:41:46,969
we're gonna do first and then what I'll

824
00:41:44,630 --> 00:41:49,670
do is the next step will be dicing those

825
00:41:46,969 --> 00:41:52,129
up into small enough ones that they that

826
00:41:49,670 --> 00:41:53,720
were satisfied with them with how with

827
00:41:52,130 --> 00:41:56,930
how granular the lighting solution would

828
00:41:53,719 --> 00:42:00,889
be I think that's a good idea okay

829
00:41:56,929 --> 00:42:08,118
so if we take a look at this when we

830
00:42:00,889 --> 00:42:10,848
call our extraction function here I'm

831
00:42:08,119 --> 00:42:14,420
gonna use quads and I'm gonna go ahead

832
00:42:10,849 --> 00:42:15,619
and and get that working I don't even

833
00:42:14,420 --> 00:42:17,119
know if that we haven't called that in a

834
00:42:15,619 --> 00:42:21,230
long time I don't even know if it works

835
00:42:17,119 --> 00:42:24,440
with disks it does okay so there those

836
00:42:21,230 --> 00:42:26,449
are our disks there and here's the

837
00:42:24,440 --> 00:42:28,460
lighting solution that comes from that

838
00:42:26,449 --> 00:42:30,259
and so that looks okay right nothing

839
00:42:28,460 --> 00:42:32,480
particularly bizarre there those disks

840
00:42:30,260 --> 00:42:34,460
do look roughly correct but as you can

841
00:42:32,480 --> 00:42:37,068
see their disks so they don't even

842
00:42:34,460 --> 00:42:38,599
remotely fit the geometry even if we

843
00:42:37,068 --> 00:42:40,009
dice them they would they would not be

844
00:42:38,599 --> 00:42:43,930
particularly good and have lots of holes

845
00:42:40,010 --> 00:42:47,720
so let's go up now and fix that output

846
00:42:43,929 --> 00:42:49,159
I'll go ahead and put it over here let's

847
00:42:47,719 --> 00:42:51,199
go ahead and fix that extraction now to

848
00:42:49,159 --> 00:42:56,230
use exact quads all right so if we

849
00:42:51,199 --> 00:42:59,179
wanted to do that let me go ahead and

850
00:42:56,230 --> 00:43:00,139
take the letting elements here so if we

851
00:42:59,179 --> 00:43:02,179
wanted to do that what we're really

852
00:43:00,139 --> 00:43:05,808
going to look at here is we've got a

853
00:43:02,179 --> 00:43:08,598
normal and we've got our vector right

854
00:43:05,809 --> 00:43:10,490
that our vector is the radius so what we

855
00:43:08,599 --> 00:43:12,769
want to do is change this to width and a

856
00:43:10,489 --> 00:43:15,649
height and expand this to have an x-axis

857
00:43:12,769 --> 00:43:16,969
and a y-axis right and like I said

858
00:43:15,650 --> 00:43:19,240
before that width and the height is not

859
00:43:16,969 --> 00:43:22,969
necessary and neither is the y-axis

860
00:43:19,239 --> 00:43:26,269
really all we need is a multiplier that

861
00:43:22,969 --> 00:43:28,848
would tell us what to do to create a dot

862
00:43:26,269 --> 00:43:34,039
proximal y-axis from the normal in the

863
00:43:28,849 --> 00:43:37,280
x-axis so really we're only adding if we

864
00:43:34,039 --> 00:43:40,369
if we want to be minimal having a normal

865
00:43:37,280 --> 00:43:41,660
plus of radius is for floats and we're

866
00:43:40,369 --> 00:43:45,500
basically going from those four floats

867
00:43:41,659 --> 00:43:47,239
to having a normal a x-axis and a

868
00:43:45,500 --> 00:43:49,460
coefficient so we're really only adding

869
00:43:47,239 --> 00:43:52,729
three floats because we're going from

870
00:43:49,460 --> 00:43:54,318
four floats to seven floats right so

871
00:43:52,730 --> 00:43:57,170
we're not even quite doubling the size

872
00:43:54,318 --> 00:43:59,989
of it and again we've got a lot of other

873
00:43:57,170 --> 00:44:01,548
stuff we're storing here potentially so

874
00:43:59,989 --> 00:44:02,779
we're not doubling the size of the

875
00:44:01,548 --> 00:44:04,460
structure by any stretch of the

876
00:44:02,780 --> 00:44:08,240
imagination we're only doubling the size

877
00:44:04,460 --> 00:44:13,608
of the sort of I don't know if you want

878
00:44:08,239 --> 00:44:15,368
to call it a local geometry storage so

879
00:44:13,608 --> 00:44:18,019
it's not that bad

880
00:44:15,369 --> 00:44:20,059
you're regardless and even in this more

881
00:44:18,019 --> 00:44:22,369
piggy format here

882
00:44:20,059 --> 00:44:27,170
we're not geez I should put on my pick

883
00:44:22,369 --> 00:44:30,349
hat so even in the piggy format that

884
00:44:27,170 --> 00:44:32,358
we're using now again we've got kind of

885
00:44:30,349 --> 00:44:34,760
a lot of buffer sort of stuff we have to

886
00:44:32,358 --> 00:44:39,170
do here so I'm not even 100% certain

887
00:44:34,760 --> 00:44:41,450
that this is a something to even think

888
00:44:39,170 --> 00:44:43,369
about it also what you know most of

889
00:44:41,449 --> 00:44:45,439
stuff as I just try to point out things

890
00:44:43,369 --> 00:44:47,539
that when we get further down the line

891
00:44:45,440 --> 00:44:49,450
you know what our options are and

892
00:44:47,539 --> 00:44:52,400
whether

893
00:44:49,449 --> 00:44:55,189
should be nervous or not about about

894
00:44:52,400 --> 00:44:57,410
what's going on so okay so let's suppose

895
00:44:55,190 --> 00:44:59,088
we want to extract this quad directly

896
00:44:57,409 --> 00:45:02,000
well all right what we're gonna have to

897
00:44:59,088 --> 00:45:05,568
do here is say we have these vertices

898
00:45:02,000 --> 00:45:07,940
and the vertices tell us what the the

899
00:45:05,568 --> 00:45:13,960
quad is shaped like we need to assume

900
00:45:07,940 --> 00:45:17,179
that the quad is is roughly is not

901
00:45:13,960 --> 00:45:19,278
particularly skewed because right now

902
00:45:17,179 --> 00:45:23,358
we're sort of we don't really want to

903
00:45:19,278 --> 00:45:26,088
have to deal with skewed quadrilaterals

904
00:45:23,358 --> 00:45:27,558
even though we may want to support them

905
00:45:26,088 --> 00:45:29,210
in the future and could support them

906
00:45:27,559 --> 00:45:31,460
potentially by doing a little bit more

907
00:45:29,210 --> 00:45:34,759
math when we're doing our testing we

908
00:45:31,460 --> 00:45:36,588
don't really want to necessarily think

909
00:45:34,759 --> 00:45:38,778
about that yet and make sure we handle

910
00:45:36,588 --> 00:45:42,018
that so we're just gonna only do this as

911
00:45:38,778 --> 00:45:45,440
if we're handling right angle quads

912
00:45:42,018 --> 00:45:47,149
right but it's not too much more work to

913
00:45:45,440 --> 00:45:48,679
handle skewed ones either so it's not

914
00:45:47,150 --> 00:45:50,420
it's really just making sure you think

915
00:45:48,679 --> 00:45:51,889
it through properly so we can't even

916
00:45:50,420 --> 00:45:53,298
handle this when we want to do like

917
00:45:51,889 --> 00:45:54,379
squash and stretch we could we could

918
00:45:53,298 --> 00:45:57,139
handle those exactly if you really

919
00:45:54,380 --> 00:46:00,048
wanted to as well anyway so when we get

920
00:45:57,139 --> 00:46:01,848
these vertices out you can see us

921
00:46:00,048 --> 00:46:05,389
computing them here and we already

922
00:46:01,849 --> 00:46:09,079
compute these spans right so we compute

923
00:46:05,389 --> 00:46:11,000
the length of 0 to 1 which would give us

924
00:46:09,079 --> 00:46:14,990
one of our axes there from vertex

925
00:46:11,000 --> 00:46:17,568
herbivore x1 and we also do span 0 to 3

926
00:46:14,989 --> 00:46:20,868
and that gives us the other one right so

927
00:46:17,568 --> 00:46:24,980
these two together if we assume the coop

928
00:46:20,869 --> 00:46:27,048
the quad is wound which we know that we

929
00:46:24,980 --> 00:46:31,579
always try to do so if we assume this

930
00:46:27,048 --> 00:46:34,150
wound counterclockwise right then we can

931
00:46:31,579 --> 00:46:38,778
assume without any loss of generality

932
00:46:34,150 --> 00:46:42,019
that 0 1 and we don't care about 2 &amp; 3

933
00:46:38,778 --> 00:46:45,619
here right we can assume that picking

934
00:46:42,018 --> 00:46:47,959
the y-axis as 0 2 3 and the x-axis is 0

935
00:46:45,619 --> 00:46:51,769
to 1 would be a totally reasonable thing

936
00:46:47,960 --> 00:46:54,139
to do right so in this case when we

937
00:46:51,768 --> 00:46:58,578
compute these spans we could then say

938
00:46:54,139 --> 00:47:01,400
immediately that the x-axis was going to

939
00:46:58,579 --> 00:47:03,590
be span 1 0

940
00:47:01,400 --> 00:47:07,130
and the y-axis was going to be span

941
00:47:03,590 --> 00:47:10,789
three zero now these have a link to them

942
00:47:07,130 --> 00:47:13,700
now the length is the entirety of the

943
00:47:10,789 --> 00:47:17,449
distance right and we don't actually

944
00:47:13,699 --> 00:47:20,149
want that as the length of the as the

945
00:47:17,449 --> 00:47:22,250
width and we don't want the axis to have

946
00:47:20,150 --> 00:47:23,840
that baked in we want to store these two

947
00:47:22,250 --> 00:47:25,699
separately right because we're sort of

948
00:47:23,840 --> 00:47:29,840
doing the fully blown out Pig format

949
00:47:25,699 --> 00:47:31,519
first not the more compact baked the

950
00:47:29,840 --> 00:47:33,710
multiplication into the length of the

951
00:47:31,519 --> 00:47:35,719
axis to simplify the equations version

952
00:47:33,710 --> 00:47:37,099
right that's an optimization and while

953
00:47:35,719 --> 00:47:38,929
we're debugging things we don't want to

954
00:47:37,099 --> 00:47:40,369
over optimize it even though we know we

955
00:47:38,929 --> 00:47:41,539
probably want to optimize it in the

956
00:47:40,369 --> 00:47:44,509
future it's not really pretty mature

957
00:47:41,539 --> 00:47:46,159
optimization in the sense of you might

958
00:47:44,510 --> 00:47:48,170
not want to optimize it's like we pretty

959
00:47:46,159 --> 00:47:49,369
much w1 optimize it but it's premature

960
00:47:48,170 --> 00:47:51,110
up times in the fact that it will make

961
00:47:49,369 --> 00:47:52,670
our debugging harder if we pre bacon

962
00:47:51,110 --> 00:47:55,670
these things because those are just more

963
00:47:52,670 --> 00:47:57,260
things that can go wrong so rather we

964
00:47:55,670 --> 00:48:00,590
would rather get it working with the

965
00:47:57,260 --> 00:48:02,960
clear easy to understand formula first

966
00:48:00,590 --> 00:48:05,059
and then bacon all the you know

967
00:48:02,960 --> 00:48:06,679
craziness and that way we can just tell

968
00:48:05,059 --> 00:48:08,869
whether we break it when we do the

969
00:48:06,679 --> 00:48:11,029
optimization that's a lot easier way to

970
00:48:08,869 --> 00:48:12,559
approach the debugging than trying to do

971
00:48:11,030 --> 00:48:15,320
it all at once so pretty much for

972
00:48:12,559 --> 00:48:18,049
optimization in this case still correct

973
00:48:15,320 --> 00:48:19,070
term for what we are trying to avoid but

974
00:48:18,050 --> 00:48:21,950
it's a different kind of people to

975
00:48:19,070 --> 00:48:23,690
premature optimization then then certain

976
00:48:21,949 --> 00:48:25,399
other cases right sometimes premature

977
00:48:23,690 --> 00:48:27,110
authorization means you shouldn't even

978
00:48:25,400 --> 00:48:29,210
optimize it that's it at all in this

979
00:48:27,110 --> 00:48:32,510
case you probably should but not right

980
00:48:29,210 --> 00:48:34,340
now all right

981
00:48:32,510 --> 00:48:38,060
so coming through here we've got our

982
00:48:34,340 --> 00:48:41,750
x-axis y-axis we know what the length of

983
00:48:38,059 --> 00:48:44,299
these needs to be it needs to be one so

984
00:48:41,750 --> 00:48:46,880
if we were to take the length of the

985
00:48:44,300 --> 00:48:49,910
x-axis and the length of the y-axis we

986
00:48:46,880 --> 00:48:51,890
would get our width and height right so

987
00:48:49,909 --> 00:48:53,389
we would know that our element width is

988
00:48:51,889 --> 00:48:55,250
going to be the length of the x-axis and

989
00:48:53,389 --> 00:48:57,109
our element height is going to be equal

990
00:48:55,250 --> 00:48:59,119
to length of the y-axis what we don't

991
00:48:57,110 --> 00:49:01,610
have yet is the normalized versions of

992
00:48:59,119 --> 00:49:06,769
these x and y axes now I'm gonna go

993
00:49:01,610 --> 00:49:10,180
ahead and say I'm just going to use

994
00:49:06,769 --> 00:49:10,179
normalizer 0 here

995
00:49:13,610 --> 00:49:20,309
because I can

996
00:49:15,210 --> 00:49:26,720
but when optimizing make sure we

997
00:49:20,309 --> 00:49:28,769
actually just used the length station

998
00:49:26,719 --> 00:49:31,049
but you know it's a little bit redundant

999
00:49:28,769 --> 00:49:32,550
because since we already computed the

1000
00:49:31,050 --> 00:49:34,019
length year we could just divide by the

1001
00:49:32,550 --> 00:49:35,670
length here I'm not doing that because

1002
00:49:34,019 --> 00:49:37,530
we'd have to check to see if zero and

1003
00:49:35,670 --> 00:49:38,940
blah blah blah so you know when we

1004
00:49:37,530 --> 00:49:42,780
actually want to streamline this routine

1005
00:49:38,940 --> 00:49:44,639
that's something we'll want to do so now

1006
00:49:42,780 --> 00:49:47,519
we need to know where the location of

1007
00:49:44,639 --> 00:49:49,049
this thing is and this is gonna be

1008
00:49:47,519 --> 00:49:50,880
really pretty straightforward we don't

1009
00:49:49,050 --> 00:49:55,470
have an element R anymore that's what we

1010
00:49:50,880 --> 00:49:57,360
deleted but we do have an easy ability

1011
00:49:55,469 --> 00:50:00,419
to compute this now what we want to do

1012
00:49:57,360 --> 00:50:03,150
is just say well we've got our x-axis

1013
00:50:00,420 --> 00:50:05,130
and we've got our y-axis if we just go

1014
00:50:03,150 --> 00:50:07,289
half way along each we will be at the

1015
00:50:05,130 --> 00:50:11,250
center of this thing so we're pretty

1016
00:50:07,289 --> 00:50:12,960
much done at that point right so that's

1017
00:50:11,250 --> 00:50:16,980
really all there is to it for the

1018
00:50:12,960 --> 00:50:21,329
extraction that plucks out the x axis

1019
00:50:16,980 --> 00:50:23,789
the y axis and gives us the centroid as

1020
00:50:21,329 --> 00:50:26,369
well so that's all good so really all we

1021
00:50:23,789 --> 00:50:31,800
need to do now is anytime we were using

1022
00:50:26,369 --> 00:50:33,719
this we now need to do it the way that

1023
00:50:31,800 --> 00:50:38,280
we said before so we now need to use

1024
00:50:33,719 --> 00:50:40,500
this new encoding to do rendering of

1025
00:50:38,280 --> 00:50:43,380
quads when we're trying to draw these in

1026
00:50:40,500 --> 00:50:45,150
a debug setting and we need to use the

1027
00:50:43,380 --> 00:50:47,430
fact that it's a quad those axes in the

1028
00:50:45,150 --> 00:50:49,230
width and so on we need to use those for

1029
00:50:47,429 --> 00:50:50,429
testing when we test the Ray

1030
00:50:49,230 --> 00:50:52,769
intersection well here's the Ray

1031
00:50:50,429 --> 00:50:58,289
intersection and you can see that this

1032
00:50:52,769 --> 00:51:00,719
disc squared cone crap right this stuff

1033
00:50:58,289 --> 00:51:01,769
is now irrelevant right we don't care

1034
00:51:00,719 --> 00:51:05,099
about any of this anymore

1035
00:51:01,769 --> 00:51:08,759
this stuff is all not on the table so we

1036
00:51:05,099 --> 00:51:10,799
have this Ray P that is the position of

1037
00:51:08,760 --> 00:51:13,350
the when the Ray hits the plane sort of

1038
00:51:10,800 --> 00:51:15,330
the Ray in plane might be the weight

1039
00:51:13,349 --> 00:51:17,819
right way to to look at it or where the

1040
00:51:15,329 --> 00:51:19,590
Ray intersects the plane so what we want

1041
00:51:17,820 --> 00:51:24,410
to do here is exactly the equation that

1042
00:51:19,590 --> 00:51:27,079
I talked about up in here

1043
00:51:24,409 --> 00:51:29,690
we want to do this but like I said we

1044
00:51:27,079 --> 00:51:31,730
didn't bake it in yet so we're really

1045
00:51:29,690 --> 00:51:34,909
gonna be doing this one down here right

1046
00:51:31,730 --> 00:51:37,039
we're gonna be doing this style negative

1047
00:51:34,909 --> 00:51:39,079
half less than or equal to the value

1048
00:51:37,039 --> 00:51:41,269
less than go to half right that's what

1049
00:51:39,079 --> 00:51:43,639
we want to do so the first thing I'm

1050
00:51:41,269 --> 00:51:48,139
going to do is I'm gonna compute those

1051
00:51:43,639 --> 00:51:49,429
half a values and one thing you know you

1052
00:51:48,139 --> 00:51:50,569
could look at to simplify this equation

1053
00:51:49,429 --> 00:51:53,359
is you could just multiply everything by

1054
00:51:50,570 --> 00:51:57,830
two right so really we could just say if

1055
00:51:53,360 --> 00:52:00,200
twice this value is between H and H

1056
00:51:57,829 --> 00:52:03,139
right so what I'm going to do here is

1057
00:52:00,199 --> 00:52:05,329
just say you know X check equals

1058
00:52:03,139 --> 00:52:08,650
something and Y check equals something

1059
00:52:05,329 --> 00:52:11,329
and those will be the values we'll test

1060
00:52:08,650 --> 00:52:12,889
and what we'll do is we'll multiply them

1061
00:52:11,329 --> 00:52:16,190
by two so that we don't have to divide

1062
00:52:12,889 --> 00:52:17,629
the other stuff by two right so we know

1063
00:52:16,190 --> 00:52:19,610
this is an inner product and we know

1064
00:52:17,630 --> 00:52:22,099
this is an inner product the question is

1065
00:52:19,610 --> 00:52:24,200
what is the inner product well the

1066
00:52:22,099 --> 00:52:28,549
position of the Ray needs to be relative

1067
00:52:24,199 --> 00:52:31,519
to the point where testing against it is

1068
00:52:28,550 --> 00:52:33,680
right you can see here that we do the

1069
00:52:31,519 --> 00:52:37,369
relative source P and it's basically

1070
00:52:33,679 --> 00:52:41,029
wherever the like the Ray origin is and

1071
00:52:37,369 --> 00:52:45,920
we have the source position here I can't

1072
00:52:41,030 --> 00:52:49,030
say why we quite did it that way instead

1073
00:52:45,920 --> 00:52:49,030
of the other way around

1074
00:52:56,590 --> 00:53:03,470
because I guess you because you wouldn't

1075
00:52:58,760 --> 00:53:10,010
have the negative in here so that is

1076
00:53:03,469 --> 00:53:15,079
just kind of weird like why did we I'm

1077
00:53:10,010 --> 00:53:17,330
not sure why we freeze it this way right

1078
00:53:15,079 --> 00:53:20,119
like I would have preferred this be

1079
00:53:17,329 --> 00:53:23,090
flipped which we could easily do if you

1080
00:53:20,119 --> 00:53:25,190
take the rel source P if you were to

1081
00:53:23,090 --> 00:53:27,619
negate this this just wouldn't eat a

1082
00:53:25,190 --> 00:53:30,320
negative now right so like it's just

1083
00:53:27,619 --> 00:53:33,619
wasteful unless I'm missing something

1084
00:53:30,320 --> 00:53:35,630
that that is the preferable way to put

1085
00:53:33,619 --> 00:53:39,710
it so you basically put the Ray origin

1086
00:53:35,630 --> 00:53:40,910
in the space of the plane and then this

1087
00:53:39,710 --> 00:53:43,039
inner product here doesn't have to have

1088
00:53:40,909 --> 00:53:57,379
a negative because it's just the

1089
00:53:43,039 --> 00:53:59,690
relative origin right why am i on the

1090
00:53:57,380 --> 00:54:04,460
caps lock I got a ton by I hate caps

1091
00:53:59,690 --> 00:54:06,380
lock so the relative origin there yeah

1092
00:54:04,460 --> 00:54:08,150
we just compute that's what the D value

1093
00:54:06,380 --> 00:54:09,890
would be we then take the negative D

1094
00:54:08,150 --> 00:54:13,550
value over the source end and that tells

1095
00:54:09,889 --> 00:54:19,838
us where we're actually hitting this

1096
00:54:13,550 --> 00:54:28,099
thing right and yeah I think that's

1097
00:54:19,838 --> 00:54:31,039
pretty much all we need yeah and so then

1098
00:54:28,099 --> 00:54:35,539
we just take the the T ray that gives us

1099
00:54:31,039 --> 00:54:39,170
the rapey there that is already relative

1100
00:54:35,539 --> 00:54:42,239
again so we don't that Ray position

1101
00:54:39,170 --> 00:54:42,239
[Music]

1102
00:54:51,619 --> 00:54:59,729
yeah this this looks a little this looks

1103
00:54:54,088 --> 00:55:01,739
a little Squinkie to me I want to make

1104
00:54:59,728 --> 00:55:04,018
sure this is all correct that rate

1105
00:55:01,739 --> 00:55:05,579
position normally you would have to take

1106
00:55:04,018 --> 00:55:09,268
the rate you know if you actually wanted

1107
00:55:05,579 --> 00:55:19,190
the full rate position right you would

1108
00:55:09,268 --> 00:55:19,189
have to do that right

1109
00:55:24,409 --> 00:55:30,469
and I guess we just made the

1110
00:55:27,000 --> 00:55:33,329
optimization of taking that out because

1111
00:55:30,469 --> 00:55:35,849
you were then going to subtract it away

1112
00:55:33,329 --> 00:55:40,559
anyway right you're going to want the

1113
00:55:35,849 --> 00:55:46,079
origin to be relative to the source P so

1114
00:55:40,559 --> 00:55:47,429
I think that's okay but I want to do

1115
00:55:46,079 --> 00:55:49,650
this one more time I'm just not

1116
00:55:47,429 --> 00:55:58,919
comfortable with it quite like that so I

1117
00:55:49,650 --> 00:56:01,519
want to do this one more time expand it

1118
00:55:58,920 --> 00:56:04,349
out entirely I guess is what I would say

1119
00:56:01,519 --> 00:56:06,179
all right so if we take the rate

1120
00:56:04,349 --> 00:56:08,759
position and we say that it's ray origin

1121
00:56:06,179 --> 00:56:10,529
plus T ray x ray D which is the equation

1122
00:56:08,760 --> 00:56:14,790
for the Ray it starts at this location

1123
00:56:10,530 --> 00:56:16,830
it goes this far along this direction if

1124
00:56:14,789 --> 00:56:19,469
I then say you know and again like I

1125
00:56:16,829 --> 00:56:22,319
said I don't want to do this if I then

1126
00:56:19,469 --> 00:56:25,049
want to know what my x and y parameters

1127
00:56:22,320 --> 00:56:28,500
are then what those are going to be is

1128
00:56:25,050 --> 00:56:32,670
those are going to be the source

1129
00:56:28,500 --> 00:56:35,190
position right whatever that source

1130
00:56:32,670 --> 00:56:37,829
position is that's the center of my

1131
00:56:35,190 --> 00:56:41,070
rectangle I want to take the Ray

1132
00:56:37,829 --> 00:56:43,500
position itself and I want to figure out

1133
00:56:41,070 --> 00:56:50,250
where that is relative to the source

1134
00:56:43,500 --> 00:56:53,250
position right and I want to take the

1135
00:56:50,250 --> 00:56:55,349
inner product of that with the x axis

1136
00:56:53,250 --> 00:56:59,820
that I've got for the y axis that I got

1137
00:56:55,349 --> 00:57:05,630
and then I want to do a X check it's

1138
00:56:59,820 --> 00:57:09,769
greater than or equal to negative width

1139
00:57:05,630 --> 00:57:15,440
and X check is less than or equal to

1140
00:57:09,769 --> 00:57:15,440
weight right

1141
00:57:18,469 --> 00:57:34,338
and we could use an absolute value here

1142
00:57:20,150 --> 00:57:35,329
if we want to as well probably right so

1143
00:57:34,338 --> 00:57:36,769
that's what we want to do we want to

1144
00:57:35,329 --> 00:57:39,680
take a look at where the rate position

1145
00:57:36,769 --> 00:57:42,019
is relative to the the center of this

1146
00:57:39,679 --> 00:57:44,449
rectangle and we want to dot product

1147
00:57:42,019 --> 00:57:47,088
that take the inner product with each of

1148
00:57:44,449 --> 00:57:50,088
our axes and then take a look at whether

1149
00:57:47,088 --> 00:57:54,349
or not the result then falls within the

1150
00:57:50,088 --> 00:57:58,219
boundaries that we specified right now

1151
00:57:54,349 --> 00:58:01,760
in order to do that I have to do ray p-

1152
00:57:58,219 --> 00:58:04,219
source P right which means that I'm

1153
00:58:01,760 --> 00:58:07,040
taking whatever this equation was here

1154
00:58:04,219 --> 00:58:09,379
and I'm subtracting source P away from

1155
00:58:07,039 --> 00:58:13,420
it and you can see that ray origin -

1156
00:58:09,380 --> 00:58:13,420
source P right in other words this is

1157
00:58:13,750 --> 00:58:25,880
that and what you can see is we've

1158
00:58:21,739 --> 00:58:32,899
already got that ready to go so we want

1159
00:58:25,880 --> 00:58:36,800
to put that in here and honestly I don't

1160
00:58:32,900 --> 00:58:38,960
know that maybe we did it right before

1161
00:58:36,800 --> 00:58:40,099
but that seems right to me and it didn't

1162
00:58:38,960 --> 00:58:41,269
look like the equations were quite right

1163
00:58:40,099 --> 00:58:44,390
before I don't maybe we had a bug in

1164
00:58:41,269 --> 00:58:46,579
here I'm not sure maybe it's because it

1165
00:58:44,389 --> 00:58:47,809
was a cone we were doing something

1166
00:58:46,579 --> 00:58:49,339
slightly differently there I don't know

1167
00:58:47,809 --> 00:58:51,639
but this looks like the correct version

1168
00:58:49,338 --> 00:58:56,539
for this right

1169
00:58:51,639 --> 00:58:58,338
to me anyway because I do think you want

1170
00:58:56,539 --> 00:58:59,568
that rail you really do need that rail

1171
00:58:58,338 --> 00:59:02,539
origin there and I think that's

1172
00:58:59,568 --> 00:59:04,818
important so I don't know we may have

1173
00:59:02,539 --> 00:59:07,250
had a bug in there I'm not sure but

1174
00:59:04,818 --> 00:59:10,369
hopefully we don't have a bug now but

1175
00:59:07,250 --> 00:59:13,429
we'll debug that in a little bit we now

1176
00:59:10,369 --> 00:59:16,608
have to deal with the fact that when we

1177
00:59:13,429 --> 00:59:19,250
actually output this stuff right you can

1178
00:59:16,608 --> 00:59:21,078
see we need to do something with it

1179
00:59:19,250 --> 00:59:24,949
right so when we output our lighting

1180
00:59:21,079 --> 00:59:28,390
quads for example I don't know what

1181
00:59:24,949 --> 00:59:28,389
output lighting verts does

1182
00:59:28,409 --> 00:59:32,579
output lighting verts is irrelevant now

1183
00:59:30,719 --> 00:59:39,209
so that's just shouldn't even be in

1184
00:59:32,579 --> 00:59:48,480
there that was when we were lighting

1185
00:59:39,210 --> 00:59:50,460
directly from those so output lighting

1186
00:59:48,480 --> 00:59:52,500
quads is the only thing that we will

1187
00:59:50,460 --> 00:59:54,030
still would still be supporting so we do

1188
00:59:52,500 --> 00:59:59,659
output letting quads we go through

1189
00:59:54,030 --> 01:00:02,640
drawing each of these elements and I

1190
00:59:59,659 --> 01:00:04,829
don't really think we have any other

1191
01:00:02,639 --> 01:00:13,139
options here like this stuff just has to

1192
01:00:04,829 --> 01:00:14,340
kind of be done this way right and so

1193
01:00:13,139 --> 01:00:18,089
what we have to do is we have to make

1194
01:00:14,340 --> 01:00:20,750
reconstruct our quad here to draw it so

1195
01:00:18,090 --> 01:00:23,039
when we produce our X and our Y here

1196
01:00:20,750 --> 01:00:25,289
what we actually want to do is this

1197
01:00:23,039 --> 01:00:27,300
stuff is no longer relevant like we

1198
01:00:25,289 --> 01:00:29,099
don't have to synthetically produce an X

1199
01:00:27,300 --> 01:00:34,530
into y axis anymore because we actually

1200
01:00:29,099 --> 01:00:36,269
have them and so these can all kind of

1201
01:00:34,530 --> 01:00:40,280
go away what we really want to say is

1202
01:00:36,269 --> 01:00:44,489
just well it's just the element x axis

1203
01:00:40,280 --> 01:00:46,380
and the element y axis and since we're

1204
01:00:44,489 --> 01:00:53,659
going to expand out by those we want to

1205
01:00:46,380 --> 01:00:53,660
multiply by the width and height right

1206
01:00:55,679 --> 01:01:03,759
and again those need to be halved and

1207
01:01:01,000 --> 01:01:04,929
the reason for that is because again

1208
01:01:03,760 --> 01:01:06,490
we're storing the width in height but

1209
01:01:04,929 --> 01:01:09,099
we're going out in both directions as

1210
01:01:06,489 --> 01:01:16,359
them so we need to make sure that we

1211
01:01:09,099 --> 01:01:20,440
account for that all right so let's take

1212
01:01:16,360 --> 01:01:28,090
a look so here's our result and we seem

1213
01:01:20,440 --> 01:01:29,769
to be oh right this is the equation this

1214
01:01:28,090 --> 01:01:32,800
this produces a diamond shape which is

1215
01:01:29,769 --> 01:01:35,920
not what we want so what we really want

1216
01:01:32,800 --> 01:01:39,039
to do here is is you know a plus X plus

1217
01:01:35,920 --> 01:01:40,750
y we want to go both right so we want to

1218
01:01:39,039 --> 01:01:42,489
start in fact I would probably start it

1219
01:01:40,750 --> 01:01:44,559
at minus minus so I'd say we want to go

1220
01:01:42,489 --> 01:01:47,349
negative x negative Y right then we want

1221
01:01:44,559 --> 01:01:49,420
to go across X but stayed on the bottom

1222
01:01:47,349 --> 01:01:52,630
Y then we want to go across sexing up

1223
01:01:49,420 --> 01:01:54,849
right and then we want to come back on

1224
01:01:52,630 --> 01:01:56,320
the top and that would produce our are

1225
01:01:54,849 --> 01:01:58,569
winding they're assuming that we're

1226
01:01:56,320 --> 01:02:01,539
still winding counterclockwise I never

1227
01:01:58,570 --> 01:02:05,680
know with this way we did the quads

1228
01:02:01,539 --> 01:02:07,989
Eggman but okay so if we take a look at

1229
01:02:05,679 --> 01:02:09,849
what we've produced here what we can see

1230
01:02:07,989 --> 01:02:15,689
is like I'm pretty happy with that

1231
01:02:09,849 --> 01:02:18,969
actually that looks exactly right I mean

1232
01:02:15,690 --> 01:02:27,789
pretty much everything here is what I

1233
01:02:18,969 --> 01:02:29,500
would expect it to look like yeah I mean

1234
01:02:27,789 --> 01:02:33,880
that's all that's all pretty much

1235
01:02:29,500 --> 01:02:35,440
correct right and if we take a look at

1236
01:02:33,880 --> 01:02:37,780
our lighting solution now actually it's

1237
01:02:35,440 --> 01:02:39,070
it's considerably better there's still

1238
01:02:37,780 --> 01:02:40,420
some stuff that doesn't make a whole lot

1239
01:02:39,070 --> 01:02:42,100
of sense I'm not sure where the light is

1240
01:02:40,420 --> 01:02:43,720
coming from back here so I do wonder if

1241
01:02:42,099 --> 01:02:46,000
we've got some bugs in there

1242
01:02:43,719 --> 01:02:49,649
but we do we seem to have a lot better

1243
01:02:46,000 --> 01:02:49,650
lighting solution than we had originally

1244
01:02:49,860 --> 01:02:56,349
just in terms of again that sort of not

1245
01:02:54,130 --> 01:02:58,840
having the light leaking now the only

1246
01:02:56,349 --> 01:03:00,909
thing that's odd though here is that

1247
01:02:58,840 --> 01:03:03,340
we're not or I shouldn't say odd is the

1248
01:03:00,909 --> 01:03:05,679
wrong term probably the only thing

1249
01:03:03,340 --> 01:03:07,890
that's that's not really representative

1250
01:03:05,679 --> 01:03:10,858
at this point is we don't have enough

1251
01:03:07,889 --> 01:03:19,858
yet so this is still too few quads

1252
01:03:10,858 --> 01:03:23,608
really for what we want this is this

1253
01:03:19,858 --> 01:03:25,798
doesn't break you know here are the

1254
01:03:23,608 --> 01:03:27,808
actual lighting elements each one of

1255
01:03:25,798 --> 01:03:30,239
these lighting elements can only compute

1256
01:03:27,809 --> 01:03:32,278
one color value and that's obviously not

1257
01:03:30,239 --> 01:03:35,999
sufficient like we want to break each of

1258
01:03:32,278 --> 01:03:38,429
these big cubes up you know into a lot

1259
01:03:35,998 --> 01:03:40,159
more lighting elements like tinier

1260
01:03:38,429 --> 01:03:45,449
lighting elements you know what I mean

1261
01:03:40,159 --> 01:03:47,129
where we compute the lighting and it's

1262
01:03:45,449 --> 01:03:48,989
kind of a little bit tricky we're

1263
01:03:47,130 --> 01:03:51,150
probably going to need to do something

1264
01:03:48,989 --> 01:03:53,789
fairly smart here to figure out how to

1265
01:03:51,150 --> 01:03:55,200
break them up because we also don't

1266
01:03:53,789 --> 01:03:57,809
probably want to spend a lot of time

1267
01:03:55,199 --> 01:03:59,009
with elements that are like not gonna

1268
01:03:57,809 --> 01:04:01,019
contribute to the lighting like

1269
01:03:59,009 --> 01:04:03,748
underneath here or whatever right like

1270
01:04:01,018 --> 01:04:05,729
the bottom ones so you know we may want

1271
01:04:03,748 --> 01:04:08,399
to just not put bottom elements in much

1272
01:04:05,730 --> 01:04:10,259
like bottom elements things that are

1273
01:04:08,400 --> 01:04:11,940
pointing downward like wouldn't get

1274
01:04:10,259 --> 01:04:13,230
subdivided at all but things that are

1275
01:04:11,940 --> 01:04:15,059
pointing up or get subdividing quite a

1276
01:04:13,230 --> 01:04:19,710
bit right cuz it's just in terms of what

1277
01:04:15,059 --> 01:04:21,660
you can and can't see you know so yeah

1278
01:04:19,710 --> 01:04:24,298
so the first thing I'd like to do is

1279
01:04:21,659 --> 01:04:27,118
just subdivide these guys a little bit

1280
01:04:24,298 --> 01:04:28,798
and so you know the easiest way to do

1281
01:04:27,119 --> 01:04:33,568
that is when we do this extract

1282
01:04:28,798 --> 01:04:35,639
reflectors bit we have to start thinking

1283
01:04:33,568 --> 01:04:37,679
about this a little bit more carefully

1284
01:04:35,639 --> 01:04:39,420
so when we have this element count right

1285
01:04:37,679 --> 01:04:42,239
and we say that it's just going to be

1286
01:04:39,420 --> 01:04:44,880
equal to the quad count what we want to

1287
01:04:42,239 --> 01:04:53,099
do is is also do an assertion here

1288
01:04:44,880 --> 01:04:55,588
probably the element count is less than

1289
01:04:53,099 --> 01:04:58,380
like how many we have because it's a

1290
01:04:55,588 --> 01:05:02,298
fixed array at the moment right I don't

1291
01:04:58,380 --> 01:05:02,298
think we allocate space for it

1292
01:05:07,050 --> 01:05:10,320
what just happened

1293
01:05:17,710 --> 01:05:26,588
hold on second yes so you can see here

1294
01:05:25,389 --> 01:05:27,848
we got an only count but it's a fixed

1295
01:05:26,588 --> 01:05:30,099
size array at the moment right we don't

1296
01:05:27,849 --> 01:05:32,950
allocate space why would I know it just

1297
01:05:30,099 --> 01:05:36,640
happened we got a there was a weird like

1298
01:05:32,949 --> 01:05:38,439
hang there oh no in fact I guess it

1299
01:05:36,639 --> 01:05:39,429
wasn't a hanging it was just I was

1300
01:05:38,440 --> 01:05:45,970
looking at the screen and wasn't

1301
01:05:39,429 --> 01:05:48,009
rotating it alright so what we want to

1302
01:05:45,969 --> 01:05:50,169
do now is take a look at this and start

1303
01:05:48,010 --> 01:05:52,540
subdividing these guys so that we can

1304
01:05:50,170 --> 01:05:54,550
have a better lighting solution now in

1305
01:05:52,539 --> 01:05:56,409
order to tell how things are subdivided

1306
01:05:54,550 --> 01:05:59,619
I'm gonna need some way of actually

1307
01:05:56,409 --> 01:06:02,319
seeing what's going on which is easier

1308
01:05:59,619 --> 01:06:06,490
said than done in this case so what I'm

1309
01:06:02,320 --> 01:06:09,910
gonna do is shrink them just a tiny bit

1310
01:06:06,489 --> 01:06:15,309
when we output them only so in here when

1311
01:06:09,909 --> 01:06:17,710
I multiply by 0.5 right I'm gonna

1312
01:06:15,309 --> 01:06:21,549
actually do something here where I do

1313
01:06:17,710 --> 01:06:24,880
half the width minus a little bit and

1314
01:06:21,550 --> 01:06:27,250
half the height minus a little bit so

1315
01:06:24,880 --> 01:06:28,269
what hopefully that will do again only

1316
01:06:27,250 --> 01:06:31,358
when I'm drawing so we're still

1317
01:06:28,269 --> 01:06:32,980
computing with full width ones but

1318
01:06:31,358 --> 01:06:36,848
hopefully what this will do right is

1319
01:06:32,980 --> 01:06:39,369
we'll be able to see like a gap

1320
01:06:36,849 --> 01:06:43,680
everywhere right so you can kind of see

1321
01:06:39,369 --> 01:06:51,550
like these gaps now in in the geometry

1322
01:06:43,679 --> 01:06:54,519
maybe you need a slightly bigger gap and

1323
01:06:51,550 --> 01:06:57,280
once I've got that gap in the geometry I

1324
01:06:54,519 --> 01:07:01,239
can see now where all the lighting

1325
01:06:57,280 --> 01:07:03,339
surfaces actually are and I can kind of

1326
01:07:01,239 --> 01:07:06,669
go like alright well if I subdivided

1327
01:07:03,338 --> 01:07:11,259
this I would into like four I would see

1328
01:07:06,670 --> 01:07:12,639
lines down the middle and it would be

1329
01:07:11,260 --> 01:07:14,950
clear you know that it had actually

1330
01:07:12,639 --> 01:07:16,358
worked whereas before if I subdivided

1331
01:07:14,949 --> 01:07:17,739
all I could really see was the lighting

1332
01:07:16,358 --> 01:07:22,750
solution getting having more resolution

1333
01:07:17,739 --> 01:07:24,098
but you know that's not super clear so

1334
01:07:22,750 --> 01:07:27,639
that's the only thing I want to do there

1335
01:07:24,099 --> 01:07:29,050
so let's say for example right now let's

1336
01:07:27,639 --> 01:07:31,670
just say that we were going to dice them

1337
01:07:29,050 --> 01:07:33,589
up a bit by

1338
01:07:31,670 --> 01:07:36,230
applying by for how many elements there

1339
01:07:33,588 --> 01:07:38,900
were right and if we want to do that

1340
01:07:36,230 --> 01:07:49,940
then what we do is say well okay we know

1341
01:07:38,900 --> 01:08:01,068
that we know that after we sort of

1342
01:07:49,940 --> 01:08:08,838
constructed this right just gonna grab

1343
01:08:01,068 --> 01:08:13,489
this out here what we could do is just

1344
01:08:08,838 --> 01:08:17,000
create sort of a tiled set of elements

1345
01:08:13,489 --> 01:08:24,829
in place right so if I want to right in

1346
01:08:17,000 --> 01:08:29,899
here I could just say all right for each

1347
01:08:24,829 --> 01:08:32,329
of these that we were outputting before

1348
01:08:29,899 --> 01:08:40,099
maybe I output significantly more of

1349
01:08:32,329 --> 01:08:42,289
them right I don't know that we need to

1350
01:08:40,100 --> 01:08:48,829
keep storing original vertices either at

1351
01:08:42,289 --> 01:08:50,689
this point or original bitmap let me

1352
01:08:48,829 --> 01:08:53,439
just hold on one second let me just see

1353
01:08:50,689 --> 01:08:53,439
if I can get rid of that

1354
01:09:10,038 --> 01:09:13,038
right

1355
01:09:14,198 --> 01:09:20,108
so if I just was to get rid of that now

1356
01:09:18,279 --> 01:09:21,759
since we don't really care about the

1357
01:09:20,109 --> 01:09:28,088
original bitmap or the original vertices

1358
01:09:21,759 --> 01:09:30,298
because we don't reopen it does anyone

1359
01:09:28,088 --> 01:09:30,298
care

1360
01:09:51,269 --> 01:09:56,369
yeah so I think we can just do commands

1361
01:09:53,759 --> 01:10:07,908
wait bitmap since it's the only we just

1362
01:09:56,368 --> 01:10:07,908
we only do the white bitmap here and the

1363
01:10:11,538 --> 01:10:25,889
yeah and this we don't need anymore at

1364
01:10:14,038 --> 01:10:29,759
all right so I guess the only thing we

1365
01:10:25,889 --> 01:10:33,859
need to store is the UVs if we were

1366
01:10:29,760 --> 01:10:36,030
gonna still use UV but we're not right

1367
01:10:33,859 --> 01:10:39,988
because these things don't have any

1368
01:10:36,029 --> 01:10:43,979
textures on them so we can get rid of

1369
01:10:39,988 --> 01:10:45,209
that too I think we're good I think we

1370
01:10:43,979 --> 01:10:46,768
just get rid of all that stuff because

1371
01:10:45,210 --> 01:10:48,239
we don't use that anymore the lighting

1372
01:10:46,769 --> 01:10:49,949
is computed per pixel so we don't need

1373
01:10:48,238 --> 01:10:51,899
to have a mode where we send that any of

1374
01:10:49,948 --> 01:10:56,819
that down so I think we're just good to

1375
01:10:51,899 --> 01:10:59,368
go like there we go I don't know why

1376
01:10:56,819 --> 01:11:02,248
sometimes the framerate is very very is

1377
01:10:59,368 --> 01:11:04,049
is like locked at 60 Hertz and other

1378
01:11:02,248 --> 01:11:05,609
times it's not and I have no idea what

1379
01:11:04,050 --> 01:11:12,960
the difference is that makes me pretty

1380
01:11:05,609 --> 01:11:15,538
worried oh you know what it's just how

1381
01:11:12,960 --> 01:11:17,519
soon did we are cuz the per pixel cost

1382
01:11:15,538 --> 01:11:20,420
is still pretty high and I'm optimised I

1383
01:11:17,519 --> 01:11:24,150
think it's mostly what's going on there

1384
01:11:20,420 --> 01:11:25,920
yeah okay that makes sense when we get

1385
01:11:24,149 --> 01:11:27,268
here we've just got enough stuff that's

1386
01:11:25,920 --> 01:11:33,420
actually rendering right what we're down

1387
01:11:27,269 --> 01:11:39,429
here it's very little yeah that's fine

1388
01:11:33,420 --> 01:11:41,859
all right so let's see when we do our

1389
01:11:39,429 --> 01:11:43,750
output letting quads now everything is

1390
01:11:41,859 --> 01:11:45,399
nice and clean there and so we should be

1391
01:11:43,750 --> 01:11:46,960
fine to like subdivide our lighting

1392
01:11:45,399 --> 01:11:49,479
elements now into something a little bit

1393
01:11:46,960 --> 01:11:53,380
more fancy so if we wanted to we could

1394
01:11:49,479 --> 01:12:10,689
do something where we do a little bit

1395
01:11:53,380 --> 01:12:12,909
more like this so here we would do sort

1396
01:12:10,689 --> 01:12:16,658
of subdivision along the X and the y of

1397
01:12:12,908 --> 01:12:18,759
one of these things the element X and Y

1398
01:12:16,658 --> 01:12:24,969
axis is going to be the same let me go

1399
01:12:18,760 --> 01:12:26,710
ahead and grab this this thing out here

1400
01:12:24,969 --> 01:12:28,119
because el-amin is not going to be

1401
01:12:26,710 --> 01:12:29,948
elements plus quad and X any more

1402
01:12:28,119 --> 01:12:31,359
elements is just going to be whatever it

1403
01:12:29,948 --> 01:12:34,469
is and we're going to output a bunch of

1404
01:12:31,359 --> 01:12:34,469
them right

1405
01:12:41,130 --> 01:12:54,119
so yeah if we just say that we're gonna

1406
01:12:52,079 --> 01:12:57,029
do two by two then we know that X sub

1407
01:12:54,119 --> 01:12:58,890
count times y sub count times the quad

1408
01:12:57,029 --> 01:13:00,179
count is how many of these things we're

1409
01:12:58,890 --> 01:13:08,060
going to have this is a fixed

1410
01:13:00,180 --> 01:13:14,270
subdivision and then all we have to do

1411
01:13:08,060 --> 01:13:17,160
is actually do the subdivision here and

1412
01:13:14,270 --> 01:13:20,219
in order to do that we need to introduce

1413
01:13:17,159 --> 01:13:21,479
some notion of how we're gonna subdivide

1414
01:13:20,219 --> 01:13:24,420
the width and height and how we're going

1415
01:13:21,479 --> 01:13:27,059
to move between each of these now all of

1416
01:13:24,420 --> 01:13:29,069
this stuff will say the same right the

1417
01:13:27,060 --> 01:13:31,110
emission values are the same the normal

1418
01:13:29,069 --> 01:13:32,159
is the same the color value is all the

1419
01:13:31,109 --> 01:13:34,738
same because these are all the same

1420
01:13:32,159 --> 01:13:37,710
surface so the only and the x and y axis

1421
01:13:34,738 --> 01:13:39,839
is also the same right so literally all

1422
01:13:37,710 --> 01:13:43,260
this stuff is the same the only thing

1423
01:13:39,840 --> 01:13:46,219
that changes is we now have a subdivided

1424
01:13:43,260 --> 01:13:46,219
with tonight right

1425
01:13:48,770 --> 01:13:53,340
and that's pretty obvious what that is

1426
01:13:51,180 --> 01:13:58,199
right the width is just going to be

1427
01:13:53,340 --> 01:14:00,360
divided by the subdivision count and so

1428
01:13:58,198 --> 01:14:01,829
is the height right so all we have to do

1429
01:14:00,359 --> 01:14:04,559
to compute those to just go well we're

1430
01:14:01,829 --> 01:14:05,819
gonna divide these by however many

1431
01:14:04,560 --> 01:14:07,500
subdivisions there are and that's how

1432
01:14:05,819 --> 01:14:09,238
many each of them is going to be and so

1433
01:14:07,500 --> 01:14:13,829
the elements themselves are just going

1434
01:14:09,238 --> 01:14:14,909
to only be that you know wider high so

1435
01:14:13,829 --> 01:14:16,829
then the only other really thing we need

1436
01:14:14,909 --> 01:14:17,849
to do is put it in the right place in

1437
01:14:16,829 --> 01:14:20,219
order to put it put in the right place

1438
01:14:17,850 --> 01:14:23,699
we need to start at the base vertex and

1439
01:14:20,219 --> 01:14:30,500
rather than going out by half we need to

1440
01:14:23,698 --> 01:14:30,500
go out by half of the sub width right

1441
01:14:33,020 --> 01:14:35,050
I

1442
01:14:41,609 --> 01:14:49,828
in fact that was wrong before that

1443
01:14:47,130 --> 01:14:53,250
should have been half width times x-axis

1444
01:14:49,828 --> 01:14:54,630
in half height times y-axis so

1445
01:14:53,250 --> 01:15:07,289
everything should have been in a

1446
01:14:54,630 --> 01:15:09,630
slightly wrong place but it wasn't Oh No

1447
01:15:07,289 --> 01:15:11,908
okay so it would have been because we

1448
01:15:09,630 --> 01:15:14,159
hadn't done this part yet we had still

1449
01:15:11,908 --> 01:15:16,408
left the X and y axis equal to these and

1450
01:15:14,158 --> 01:15:18,000
it was only the element X and y-axis

1451
01:15:16,408 --> 01:15:23,488
that were different so that was okay

1452
01:15:18,000 --> 01:15:25,469
right we're fine so Europe e 1/2 the sub

1453
01:15:23,488 --> 01:15:28,078
width times the x axis and 1/2 a sub

1454
01:15:25,469 --> 01:15:29,789
height times the y axis that would put

1455
01:15:28,078 --> 01:15:31,889
us at the position of the first one but

1456
01:15:29,789 --> 01:15:35,099
we know we've got multiple ones to do

1457
01:15:31,889 --> 01:15:38,039
here right so we actually want to take

1458
01:15:35,099 --> 01:15:39,960
and when we're multiplying by the sub

1459
01:15:38,039 --> 01:15:42,510
with it's actually 0.5 we're actually

1460
01:15:39,960 --> 01:15:44,578
also going to take our X sub and add it

1461
01:15:42,510 --> 01:15:47,300
so it'll be like one point five two

1462
01:15:44,578 --> 01:15:52,289
point five as we move through our

1463
01:15:47,300 --> 01:16:01,320
various sub divisions in x and y so it's

1464
01:15:52,289 --> 01:16:02,969
going to look like this right and now I

1465
01:16:01,319 --> 01:16:04,139
think we have something that should

1466
01:16:02,969 --> 01:16:05,368
produce roughly the right results of

1467
01:16:04,139 --> 01:16:08,760
course there might be bugs in it in

1468
01:16:05,368 --> 01:16:10,558
which case it won't but hey that looks

1469
01:16:08,760 --> 01:16:12,929
about right so you can see that

1470
01:16:10,559 --> 01:16:16,230
everything got subdivided into smaller

1471
01:16:12,929 --> 01:16:18,328
sections right in theory we can change

1472
01:16:16,229 --> 01:16:19,738
that number to anything that we want of

1473
01:16:18,328 --> 01:16:21,658
course we have to have enough room to

1474
01:16:19,738 --> 01:16:23,578
store it and it makes our process slower

1475
01:16:21,658 --> 01:16:25,500
at like the lighting computation gets

1476
01:16:23,578 --> 01:16:27,899
slower and slower right

1477
01:16:25,500 --> 01:16:29,849
and yeah so eventually going to hit this

1478
01:16:27,899 --> 01:16:33,238
assertion where we don't have room to

1479
01:16:29,849 --> 01:16:35,760
store it and so we can make our a little

1480
01:16:33,238 --> 01:16:37,819
bit more lighting elements if we wanted

1481
01:16:35,760 --> 01:16:37,820
to

1482
01:16:38,118 --> 01:16:42,649
are these all controlled by the same

1483
01:16:46,630 --> 01:16:52,279
so really this is the value that should

1484
01:16:49,219 --> 01:16:53,840
be controlling all these right the light

1485
01:16:52,279 --> 01:16:57,408
data with that's how many of these

1486
01:16:53,840 --> 01:17:00,710
reflectors we're gonna have if that

1487
01:16:57,408 --> 01:17:11,448
makes sense so if we go in here and we

1488
01:17:00,710 --> 01:17:13,819
set this to be that presumably nobody

1489
01:17:11,448 --> 01:17:16,908
complains yeah so if we want to make

1490
01:17:13,819 --> 01:17:21,408
more here you know maybe we allow these

1491
01:17:16,908 --> 01:17:23,988
to be bigger I don't know but that would

1492
01:17:21,408 --> 01:17:26,238
allow us more subdivisions and of course

1493
01:17:23,988 --> 01:17:28,069
it takes longer to compute the lighting

1494
01:17:26,238 --> 01:17:30,979
result but again the lighting result

1495
01:17:28,069 --> 01:17:32,719
gets better at that point so here you

1496
01:17:30,979 --> 01:17:37,279
can see like a much more subdivided

1497
01:17:32,719 --> 01:17:40,158
version of of the solution and you know

1498
01:17:37,279 --> 01:17:45,158
this is is probably something we could

1499
01:17:40,158 --> 01:17:45,158
now debug fairly reasonably well right

1500
01:17:47,800 --> 01:17:58,130
it seems to me like it sort of still got

1501
01:17:52,429 --> 01:18:00,408
bugs in it I would say but I think those

1502
01:17:58,130 --> 01:18:02,118
bugs are now not gonna be related to the

1503
01:18:00,408 --> 01:18:03,948
fact that the geometry doesn't fit

1504
01:18:02,118 --> 01:18:06,170
properly or that it's not sampled

1505
01:18:03,948 --> 01:18:09,229
densely enough it seems pretty good to

1506
01:18:06,170 --> 01:18:11,960
me so I feel like we should now be able

1507
01:18:09,229 --> 01:18:16,038
to move on to actually making sure that

1508
01:18:11,960 --> 01:18:18,349
things aren't too buggy um what it looks

1509
01:18:16,038 --> 01:18:21,559
like here to me it's it's kind of a hard

1510
01:18:18,349 --> 01:18:24,078
to say obviously but what it looks like

1511
01:18:21,559 --> 01:18:25,880
here to me is maybe either we've got

1512
01:18:24,078 --> 01:18:27,019
some bugs in the raycasting so that

1513
01:18:25,880 --> 01:18:29,719
stuff's getting through that shouldn't

1514
01:18:27,020 --> 01:18:30,920
get through that's entirely possible but

1515
01:18:29,719 --> 01:18:34,219
the other thing that may be happening

1516
01:18:30,920 --> 01:18:36,859
here is we are not properly attenuating

1517
01:18:34,219 --> 01:18:40,219
our transfer function so that we're

1518
01:18:36,859 --> 01:18:42,618
getting when you do get an indirect

1519
01:18:40,219 --> 01:18:47,359
bounce the indirect bounce is too

1520
01:18:42,618 --> 01:18:49,960
powerful right that's another thing that

1521
01:18:47,359 --> 01:18:49,960
seems plausible

1522
01:18:52,279 --> 01:18:59,368
so so I'm not sure we've got a long ways

1523
01:18:55,920 --> 01:19:01,889
to go obviously but at least now we've

1524
01:18:59,368 --> 01:19:13,578
got stable geometry that that you know

1525
01:19:01,889 --> 01:19:13,578
makes makes reasonable sense right

1526
01:19:14,389 --> 01:19:20,880
and so again mainly what I'm concerned

1527
01:19:16,679 --> 01:19:24,029
about there is like I don't really know

1528
01:19:20,880 --> 01:19:29,279
why those are getting lighting involved

1529
01:19:24,029 --> 01:19:30,809
in them so that's a bit weird and you

1530
01:19:29,279 --> 01:19:32,399
know we've got a lot of we we don't even

1531
01:19:30,809 --> 01:19:33,690
have our interpolation story kind of

1532
01:19:32,399 --> 01:19:36,058
straightened out yet either so we just

1533
01:19:33,689 --> 01:19:37,948
we've got a long ways to go but we're

1534
01:19:36,059 --> 01:19:40,409
definitely getting closer to having

1535
01:19:37,948 --> 01:19:44,299
something that's sane but we still have

1536
01:19:40,408 --> 01:19:44,299
a long ways to go all right so I think

1537
01:19:44,510 --> 01:19:49,650
trying to think if there's anything else

1538
01:19:46,618 --> 01:19:51,118
I want to do before moving on I don't

1539
01:19:49,649 --> 01:19:53,789
know if we should maybe go to the Q&amp;A

1540
01:19:51,118 --> 01:19:55,439
now because I think the next thing we're

1541
01:19:53,789 --> 01:19:59,460
gonna want to do is it's gonna be pretty

1542
01:19:55,439 --> 01:20:01,678
involved so maybe I'll maybe I'll just

1543
01:19:59,460 --> 01:20:03,539
go to the Q&amp;A now then because I think

1544
01:20:01,679 --> 01:20:11,250
that's that's pretty much it for right

1545
01:20:03,539 --> 01:20:17,269
now let me see if I could still launch

1546
01:20:11,250 --> 01:20:17,270
it can I still launch the Q&amp;A

1547
01:20:22,600 --> 01:20:29,150
so I can launch it from the hero side of

1548
01:20:27,859 --> 01:20:32,779
things that can't launch it from the

1549
01:20:29,149 --> 01:20:36,159
twitch side maybe I'm not sure was it

1550
01:20:32,779 --> 01:20:36,159
sure all right

1551
01:20:49,750 --> 01:21:04,489
right and k'nuckles yes I am doing No

1552
01:20:56,689 --> 01:21:06,379
Shave November and although the the my

1553
01:21:04,489 --> 01:21:08,590
hair got kind of messed up by the pig

1554
01:21:06,380 --> 01:21:08,590
hat

1555
01:21:57,090 --> 01:22:02,539
so we have no questions that will make

1556
01:22:00,060 --> 01:22:02,539
it simple

1557
01:22:15,520 --> 01:22:19,330
for word rendering or deferred rendering

1558
01:22:17,350 --> 01:22:28,180
at the moment we are using forward

1559
01:22:19,329 --> 01:22:33,819
rendering we can potentially use some

1560
01:22:28,180 --> 01:22:36,460
deferred rendering a little later on it

1561
01:22:33,819 --> 01:22:43,179
depends how we wanted it depends on how

1562
01:22:36,460 --> 01:22:46,180
we choose to do the lighting exactly it

1563
01:22:43,180 --> 01:22:47,770
kind of remains to be seen moving to

1564
01:22:46,180 --> 01:22:50,140
deferred rendering is something you can

1565
01:22:47,770 --> 01:22:52,030
only really do once you're sure of how

1566
01:22:50,140 --> 01:22:56,380
you're exactly going to render

1567
01:22:52,029 --> 01:22:59,369
everything in the pipeline so it's a

1568
01:22:56,380 --> 01:22:59,369
little premature to say

1569
01:23:05,109 --> 01:23:08,469
with the subdivision of the rectangles

1570
01:23:07,149 --> 01:23:09,879
be something that you would do in a

1571
01:23:08,470 --> 01:23:20,140
tessellation shader if you were using

1572
01:23:09,880 --> 01:23:21,940
OpenGL so I think it's gonna depend on

1573
01:23:20,140 --> 01:23:29,770
who is making that decision and where

1574
01:23:21,939 --> 01:23:31,750
and I don't really know so we may find

1575
01:23:29,770 --> 01:23:33,930
that we can make determinations about

1576
01:23:31,750 --> 01:23:39,970
how to tessellate things for lighting

1577
01:23:33,930 --> 01:23:41,920
based solely on the input geometry but

1578
01:23:39,970 --> 01:23:44,350
we may not we may find that there's

1579
01:23:41,920 --> 01:23:46,779
actually a lot of hinting involved in

1580
01:23:44,350 --> 01:23:52,390
that or game specific knowledge in which

1581
01:23:46,779 --> 01:23:54,219
case you know we may send down some kind

1582
01:23:52,390 --> 01:23:57,940
of a diced version ourselves I'm not

1583
01:23:54,220 --> 01:23:59,440
sure certainly the way we're doing it

1584
01:23:57,939 --> 01:24:02,049
right now where we're just arbitrarily

1585
01:23:59,439 --> 01:24:05,009
dicing them up obviously that could be

1586
01:24:02,050 --> 01:24:05,010
done in the tessellation shader

1587
01:24:21,800 --> 01:24:28,800
are you going to be implementing shadow

1588
01:24:24,060 --> 01:24:31,260
maps I don't know that's a good question

1589
01:24:28,800 --> 01:24:33,239
I don't think so

1590
01:24:31,260 --> 01:24:34,949
only because I don't know that we're

1591
01:24:33,239 --> 01:24:36,840
doing much in the way of like really

1592
01:24:34,949 --> 01:24:38,519
direct lighting like that we're kind of

1593
01:24:36,840 --> 01:24:44,789
just going for like a washy kind of

1594
01:24:38,520 --> 01:24:46,920
lighting and I I just don't know if

1595
01:24:44,789 --> 01:24:49,159
shadow maps are gonna be relevant so

1596
01:24:46,920 --> 01:24:52,579
really I mostly just want sort of a

1597
01:24:49,159 --> 01:24:55,319
gentle global illumination bounce look

1598
01:24:52,579 --> 01:24:59,449
and I'm not sure whether shadow Maps is

1599
01:24:55,319 --> 01:24:59,449
really gonna be useful I'm not sure

1600
01:25:06,229 --> 01:25:10,679
question anymore hand made ray episodes

1601
01:25:08,850 --> 01:25:13,020
yeah at some point we'll probably do

1602
01:25:10,680 --> 01:25:14,250
some more handmade ray work and then to

1603
01:25:13,020 --> 01:25:16,310
remember when someone took your ray

1604
01:25:14,250 --> 01:25:19,109
tracer a few steps further on Twitter

1605
01:25:16,310 --> 01:25:20,789
what do you do to move to this picture

1606
01:25:19,109 --> 01:25:22,529
from the one you stopped at I think they

1607
01:25:20,789 --> 01:25:25,560
just changed the parameters I don't

1608
01:25:22,529 --> 01:25:26,819
think they actually did any thing

1609
01:25:25,560 --> 01:25:29,360
further they just kind of made a nice

1610
01:25:26,819 --> 01:25:29,359
scene with it

1611
01:25:38,750 --> 01:25:48,449
is my keyboard any good well I mean I'm

1612
01:25:46,170 --> 01:25:52,710
not sure ting about any good I love my

1613
01:25:48,449 --> 01:25:54,329
keyboard but keyboards are a very

1614
01:25:52,710 --> 01:25:56,460
personal thing

1615
01:25:54,329 --> 01:25:58,319
everybody likes different stuff you know

1616
01:25:56,460 --> 01:26:00,420
some people are like I want the old IBM

1617
01:25:58,319 --> 01:26:04,019
spring keyboards and they go for cherry

1618
01:26:00,420 --> 01:26:06,000
MX blue or something even more violent

1619
01:26:04,020 --> 01:26:10,440
than that some people like a stream Li

1620
01:26:06,000 --> 01:26:12,960
light touch keyboard I personally prefer

1621
01:26:10,439 --> 01:26:14,519
these these are razor this is a razor

1622
01:26:12,960 --> 01:26:17,699
keyboard

1623
01:26:14,520 --> 01:26:19,110
I think it's they have their own kind of

1624
01:26:17,699 --> 01:26:22,289
switches they're called orange I think

1625
01:26:19,109 --> 01:26:25,049
razor orange switches I believe are the

1626
01:26:22,289 --> 01:26:28,109
ones that are in here and I like those

1627
01:26:25,050 --> 01:26:31,710
switches that's just--that's I like the

1628
01:26:28,109 --> 01:26:34,079
feel of those switches I don't think

1629
01:26:31,710 --> 01:26:36,149
there's a right answer to keyboards you

1630
01:26:34,079 --> 01:26:40,439
know I think it's just whatever you like

1631
01:26:36,149 --> 01:26:46,500
to type on so you know I'm I certainly

1632
01:26:40,439 --> 01:26:50,039
can't recommend a particular keyboard to

1633
01:26:46,500 --> 01:26:52,770
someone because you know what they want

1634
01:26:50,039 --> 01:26:55,800
in a feel is not necessarily what I want

1635
01:26:52,770 --> 01:26:57,720
and so it doesn't you know translate but

1636
01:26:55,800 --> 01:26:58,739
if you like this kind of feel then it's

1637
01:26:57,720 --> 01:27:00,949
you know it's great keyboard if you

1638
01:26:58,739 --> 01:27:00,949
don't

1639
01:27:06,699 --> 01:27:11,269
baba says so as far as now if I would

1640
01:27:09,859 --> 01:27:13,399
want to plan a real time rendering

1641
01:27:11,270 --> 01:27:15,620
system there should have been some

1642
01:27:13,399 --> 01:27:21,199
differences or for now the light bounces

1643
01:27:15,619 --> 01:27:23,119
can also be used in that situation well

1644
01:27:21,199 --> 01:27:24,859
yes so what we've got now I think we

1645
01:27:23,119 --> 01:27:30,229
could do in real time if we move to the

1646
01:27:24,859 --> 01:27:32,149
GPU or even just optimize on the CPU but

1647
01:27:30,229 --> 01:27:34,459
it's kind of N squared e right now and

1648
01:27:32,149 --> 01:27:36,889
what we'll probably do when we move to

1649
01:27:34,460 --> 01:27:38,930
real time is use when you're looking

1650
01:27:36,890 --> 01:27:42,829
further away you use more aggregated

1651
01:27:38,930 --> 01:27:44,600
elements probably so you know the

1652
01:27:42,829 --> 01:27:50,059
problem would be one more step involved

1653
01:27:44,600 --> 01:27:51,650
there in making the rate trace faster so

1654
01:27:50,060 --> 01:27:55,250
you Bob wah is there a specific reason

1655
01:27:51,649 --> 01:27:56,599
to recalculate 1.0 over 255 rather than

1656
01:27:55,250 --> 01:27:58,460
store it as a value or does the compiler

1657
01:27:56,600 --> 01:28:01,190
optimize it away yeah compiler will

1658
01:27:58,460 --> 01:28:03,500
optimize a float divide that's a

1659
01:28:01,189 --> 01:28:07,659
constant it will produce the divided

1660
01:28:03,500 --> 01:28:07,659
constant as far as I know

1661
01:28:15,210 --> 01:28:19,448
through 25 I'm a new see a student with

1662
01:28:17,920 --> 01:28:20,739
limited free time to recommend watching

1663
01:28:19,448 --> 01:28:22,448
your series from the beginning or would

1664
01:28:20,738 --> 01:28:23,828
time be better spent working on a new

1665
01:28:22,448 --> 01:28:27,638
project in using your videos to learn

1666
01:28:23,828 --> 01:28:29,380
something as needed um I couldn't really

1667
01:28:27,639 --> 01:28:31,538
tell you it kind of depends on what

1668
01:28:29,380 --> 01:28:34,479
you're looking to do I guess what I

1669
01:28:31,538 --> 01:28:36,488
would say is the series is designed

1670
01:28:34,479 --> 01:28:38,650
specifically to be something that shows

1671
01:28:36,488 --> 01:28:41,228
the process of making a game not

1672
01:28:38,649 --> 01:28:45,219
something that's designed to be a random

1673
01:28:41,229 --> 01:28:47,380
access thing so you know maybe you can

1674
01:28:45,219 --> 01:28:49,149
use it as random access certainly there

1675
01:28:47,380 --> 01:28:50,559
are some things that are explained in it

1676
01:28:49,149 --> 01:28:51,879
that way like there's certain episodes

1677
01:28:50,559 --> 01:28:53,920
where we have just an entire black/white

1678
01:28:51,880 --> 01:28:55,779
episode just like devoted to me

1679
01:28:53,920 --> 01:28:57,849
discussing you know camera transforms or

1680
01:28:55,779 --> 01:29:00,219
something and that probably works fine

1681
01:28:57,849 --> 01:29:01,900
for that but mostly that's not what the

1682
01:29:00,219 --> 01:29:04,899
series is for most of this series is

1683
01:29:01,899 --> 01:29:06,518
just for you to see how game programming

1684
01:29:04,899 --> 01:29:09,158
works in general and how a game

1685
01:29:06,519 --> 01:29:11,440
programmer approaches working on various

1686
01:29:09,158 --> 01:29:14,408
parts of the problem because that's what

1687
01:29:11,439 --> 01:29:16,359
I thought was really necessary meaning

1688
01:29:14,408 --> 01:29:17,529
you know I think any individual thing

1689
01:29:16,359 --> 01:29:18,908
you need to know about game development

1690
01:29:17,529 --> 01:29:21,009
you should be able to find an article or

1691
01:29:18,908 --> 01:29:22,960
on it somewhere right or a lecture on it

1692
01:29:21,010 --> 01:29:24,639
somewhere so that's less interesting

1693
01:29:22,960 --> 01:29:26,229
it's more about seeing how you go

1694
01:29:24,639 --> 01:29:28,630
through the actual day-to-day work of

1695
01:29:26,229 --> 01:29:31,989
like putting things together and

1696
01:29:28,630 --> 01:29:36,578
approaching problems is really what the

1697
01:29:31,988 --> 01:29:40,779
series is more for so you know I you can

1698
01:29:36,578 --> 01:29:43,179
you can kind of take that as my general

1699
01:29:40,779 --> 01:29:45,248
overview on it and what you find useful

1700
01:29:43,179 --> 01:29:46,929
about the series is kind of depends on

1701
01:29:45,248 --> 01:29:49,078
you and and what you end up wanting to

1702
01:29:46,929 --> 01:29:49,078
do

1703
01:29:52,329 --> 01:29:55,989
I was wondering what sort of data

1704
01:29:54,670 --> 01:29:57,850
structures or algorithms you would

1705
01:29:55,989 --> 01:30:03,609
recommend to learn to get a wider grasp

1706
01:29:57,850 --> 01:30:05,680
on programming uh I mean that's kind of

1707
01:30:03,609 --> 01:30:07,750
a that that question is kind of a little

1708
01:30:05,680 --> 01:30:09,789
ambiguous right like what do you mean by

1709
01:30:07,750 --> 01:30:10,840
wider grasp on programming and what do

1710
01:30:09,789 --> 01:30:12,220
you mean by data structures and

1711
01:30:10,840 --> 01:30:13,569
algorithms right data structures and

1712
01:30:12,220 --> 01:30:16,659
algorithms could mean a very narrow

1713
01:30:13,569 --> 01:30:20,590
thing which is like ways of storing

1714
01:30:16,659 --> 01:30:27,569
traditional data so you know things like

1715
01:30:20,590 --> 01:30:30,159
a heap and a disjoint set forest right a

1716
01:30:27,569 --> 01:30:31,359
directed acyclic graph you know those

1717
01:30:30,159 --> 01:30:35,170
are data structures and algorithms

1718
01:30:31,359 --> 01:30:40,899
traditional things like how do I sort

1719
01:30:35,170 --> 01:30:42,520
something right and so I don't know if

1720
01:30:40,899 --> 01:30:45,909
that's if you mean that or do you mean

1721
01:30:42,520 --> 01:30:48,160
more like wider like kind of pie in the

1722
01:30:45,909 --> 01:30:51,880
sky things like a rapidly exploring

1723
01:30:48,159 --> 01:30:59,859
random tree or the metropolis algorithm

1724
01:30:51,880 --> 01:31:04,960
or you know the simplex method LZ

1725
01:30:59,859 --> 01:31:12,099
compression so I'm not sure but in

1726
01:31:04,960 --> 01:31:14,880
general I would say that I don't think

1727
01:31:12,100 --> 01:31:24,730
there's a specific set of those perhaps

1728
01:31:14,880 --> 01:31:29,380
regardless of what you want probably the

1729
01:31:24,729 --> 01:31:34,000
right answer is always it's almost never

1730
01:31:29,380 --> 01:31:37,720
a bad idea to pick some new sort of area

1731
01:31:34,000 --> 01:31:39,699
and go read up on lots of things in that

1732
01:31:37,720 --> 01:31:41,340
area that people have done and try

1733
01:31:39,699 --> 01:31:49,119
implementing some of them yourselves

1734
01:31:41,340 --> 01:31:51,819
yourself it's always good and it doesn't

1735
01:31:49,119 --> 01:31:54,369
really matter which ones you're doing

1736
01:31:51,819 --> 01:31:55,840
because either you're gonna find

1737
01:31:54,369 --> 01:31:58,630
something new and interesting that you

1738
01:31:55,840 --> 01:32:01,119
find useful or you're gonna be surprised

1739
01:31:58,630 --> 01:32:03,789
and find that everything is crap and if

1740
01:32:01,119 --> 01:32:05,778
you find that everything is crap then

1741
01:32:03,789 --> 01:32:07,219
that just gives you a good reason to

1742
01:32:05,779 --> 01:32:08,929
study that problem further and see if

1743
01:32:07,219 --> 01:32:20,298
you can figure out how to do something

1744
01:32:08,929 --> 01:32:21,979
good right so you know I've had both

1745
01:32:20,298 --> 01:32:24,109
experiences and I found them both to be

1746
01:32:21,979 --> 01:32:25,369
good like there's times when I've

1747
01:32:24,109 --> 01:32:26,869
learned things I like oh that's really

1748
01:32:25,368 --> 01:32:28,038
cool and that I've learned how to

1749
01:32:26,868 --> 01:32:29,658
approach a problem that I didn't know

1750
01:32:28,038 --> 01:32:30,948
how to approach before by reading what

1751
01:32:29,658 --> 01:32:32,838
other people have done in an area and

1752
01:32:30,948 --> 01:32:35,328
just studying the various approaches

1753
01:32:32,838 --> 01:32:36,729
that they had done and then I've also

1754
01:32:35,328 --> 01:32:38,628
had the opposite where I went and

1755
01:32:36,729 --> 01:32:39,798
expected something to be solved I read a

1756
01:32:38,628 --> 01:32:41,748
bunch about it turned out it totally

1757
01:32:39,798 --> 01:32:43,248
wasn't solved and then I ended up going

1758
01:32:41,748 --> 01:32:45,668
and solving it myself and coming up with

1759
01:32:43,248 --> 01:32:47,988
something new right and both are great

1760
01:32:45,668 --> 01:32:50,979
both are great practice both are

1761
01:32:47,988 --> 01:32:50,978
rewarding and interesting

1762
01:32:59,899 --> 01:33:03,619
in my previous question I was wrong I

1763
01:33:01,399 --> 01:33:06,679
wanted I wanted to ask if we want to

1764
01:33:03,619 --> 01:33:08,599
physically based rendering uh okay um no

1765
01:33:06,680 --> 01:33:10,310
I don't think so

1766
01:33:08,600 --> 01:33:11,810
physically based rendering is a little

1767
01:33:10,310 --> 01:33:13,460
bit too much I think to attempt with

1768
01:33:11,810 --> 01:33:15,289
this and also since we don't have any

1769
01:33:13,460 --> 01:33:17,480
real surface descriptions in our art is

1770
01:33:15,289 --> 01:33:19,039
gonna be kind of cartoony I don't think

1771
01:33:17,479 --> 01:33:21,169
that we want to go to physically based

1772
01:33:19,039 --> 01:33:22,100
in that sense because it's probably just

1773
01:33:21,170 --> 01:33:26,149
a waste of time

1774
01:33:22,100 --> 01:33:28,039
however that said as I kind of mentioned

1775
01:33:26,149 --> 01:33:30,739
we started the lighting keeping

1776
01:33:28,039 --> 01:33:33,350
physically-based rules in mind is always

1777
01:33:30,739 --> 01:33:38,409
kind of good on lighting so I feel like

1778
01:33:33,350 --> 01:33:40,880
you kind of want to know in general like

1779
01:33:38,409 --> 01:33:42,380
for this particular thing like you know

1780
01:33:40,880 --> 01:33:42,710
cosine attenuation and that sort of

1781
01:33:42,380 --> 01:33:44,869
stuff

1782
01:33:42,710 --> 01:33:46,699
you kind of want to know roughly what's

1783
01:33:44,869 --> 01:33:49,189
going on you know the Frenette or

1784
01:33:46,699 --> 01:33:51,439
whatever other sorts of things you want

1785
01:33:49,189 --> 01:33:53,029
to be aware of them because sometimes

1786
01:33:51,439 --> 01:33:55,489
they're important for your lighting look

1787
01:33:53,029 --> 01:33:57,439
and you don't want to just have no idea

1788
01:33:55,489 --> 01:33:59,359
like you don't want to be completely ad

1789
01:33:57,439 --> 01:34:01,460
hoc right I mean even the way we're

1790
01:33:59,359 --> 01:34:02,719
doing shadowing is is right you know

1791
01:34:01,460 --> 01:34:04,069
like in a sense it's the way you would

1792
01:34:02,720 --> 01:34:06,260
do physically based rendering you would

1793
01:34:04,069 --> 01:34:07,399
sample the lighting with multiple rays

1794
01:34:06,260 --> 01:34:10,579
or something like this you know you want

1795
01:34:07,399 --> 01:34:12,649
to you want to have some grounding in

1796
01:34:10,579 --> 01:34:18,590
the actual way light works usually

1797
01:34:12,649 --> 01:34:20,649
usually not always toasty stomp which

1798
01:34:18,590 --> 01:34:23,750
physics engine if any will you implement

1799
01:34:20,649 --> 01:34:25,819
we don't really do much physics other

1800
01:34:23,750 --> 01:34:27,470
than the basic movement stuff so we're

1801
01:34:25,819 --> 01:34:29,779
pretty much done with physics like we

1802
01:34:27,470 --> 01:34:30,829
won't be doing much else in physics are

1803
01:34:29,779 --> 01:34:32,449
you planning to have any procedural

1804
01:34:30,829 --> 01:34:33,470
generation your levels later we actually

1805
01:34:32,449 --> 01:34:37,849
have procedural generations and our

1806
01:34:33,470 --> 01:34:39,500
levels already it's just not designed to

1807
01:34:37,850 --> 01:34:41,480
generate any gameplay stuff because we

1808
01:34:39,500 --> 01:34:42,800
haven't gotten there yet but all of the

1809
01:34:41,479 --> 01:34:44,269
stuff in Hammond here was a little

1810
01:34:42,800 --> 01:34:45,680
generator thing already that just

1811
01:34:44,270 --> 01:34:49,160
generates some random stuff for us to

1812
01:34:45,680 --> 01:34:50,539
hop around in you once said you want to

1813
01:34:49,159 --> 01:34:51,500
use Vulcan on handmade here oh is that

1814
01:34:50,539 --> 01:34:52,670
still on the table or you're sticking

1815
01:34:51,500 --> 01:34:54,739
with um gel we're be sticking with

1816
01:34:52,670 --> 01:34:56,960
OpenGL I've Vulcan ended up being a real

1817
01:34:54,739 --> 01:35:01,579
pooper of an API so I have no interest

1818
01:34:56,960 --> 01:35:03,409
in showing it k'nuckles asked what are

1819
01:35:01,579 --> 01:35:05,329
things you've solved yourself I did a

1820
01:35:03,409 --> 01:35:10,220
lecture that kind of talked about some

1821
01:35:05,329 --> 01:35:13,329
of them in a limited sense that you can

1822
01:35:10,220 --> 01:35:13,329
watch actually if you want to

1823
01:35:24,519 --> 01:35:31,789
so this lecture why it listed the same

1824
01:35:29,719 --> 01:35:34,090
lecture twice I'm not sure I guess it's

1825
01:35:31,788 --> 01:35:37,599
one is in a list and one isn't that's

1826
01:35:34,090 --> 01:35:40,010
Google has trouble searching its own

1827
01:35:37,599 --> 01:35:43,069
stuff I guess

1828
01:35:40,010 --> 01:35:46,429
but this lecture right here is one that

1829
01:35:43,069 --> 01:35:51,170
talks about both situations really ones

1830
01:35:46,429 --> 01:35:55,158
where I did something in ones where I

1831
01:35:51,170 --> 01:35:58,069
learned something so it's kind of both

1832
01:35:55,158 --> 01:36:00,698
of those things I just talked about so

1833
01:35:58,069 --> 01:36:00,698
that's a good one

1834
01:36:20,180 --> 01:36:23,970
yeah Kaneko's I was actually surprised

1835
01:36:22,649 --> 01:36:25,349
that you asked that in fact because I

1836
01:36:23,970 --> 01:36:28,440
was almost sure you had already seen

1837
01:36:25,350 --> 01:36:33,000
that video so I was I'm like you should

1838
01:36:28,439 --> 01:36:37,469
already know some so I guess I would say

1839
01:36:33,000 --> 01:36:39,659
how could you sir jalapenos but haha

1840
01:36:37,470 --> 01:36:41,760
yeah I didn't have any anything in mind

1841
01:36:39,659 --> 01:36:43,859
just where to go after having learned

1842
01:36:41,760 --> 01:36:46,020
the basics of coding like the stuff you

1843
01:36:43,859 --> 01:36:47,789
mentioned but also where to start to

1844
01:36:46,020 --> 01:36:49,560
slowly understand I think the more

1845
01:36:47,789 --> 01:36:50,909
complex algorithms like there's probably

1846
01:36:49,560 --> 01:36:52,050
a hundred ways to sort something trees

1847
01:36:50,909 --> 01:36:55,319
etcetera but to get the basic

1848
01:36:52,050 --> 01:36:56,610
understanding where should I start um if

1849
01:36:55,319 --> 01:36:58,079
you want the basic understanding

1850
01:36:56,609 --> 01:37:03,179
I would actually start with the

1851
01:36:58,079 --> 01:37:06,059
algorithms book probably you know I can

1852
01:37:03,180 --> 01:37:09,000
show you the one that I learned out of I

1853
01:37:06,060 --> 01:37:12,060
can't say it's fantastic but just to

1854
01:37:09,000 --> 01:37:21,119
give you a big idea of what we're

1855
01:37:12,060 --> 01:37:24,410
talking about you know it's gonna be one

1856
01:37:21,119 --> 01:37:24,409
of those ones it's hard to find right

1857
01:37:28,180 --> 01:37:38,670
oh that's not it that's not it sir

1858
01:37:42,960 --> 01:37:56,079
that's it so this is the one that I

1859
01:37:47,680 --> 01:38:00,340
learned out of but I mean I don't know

1860
01:37:56,079 --> 01:38:01,960
right like I couldn't tell you whether

1861
01:38:00,340 --> 01:38:05,190
it's particularly good relative to other

1862
01:38:01,960 --> 01:38:14,529
ones because I only read this one and

1863
01:38:05,189 --> 01:38:16,839
it's good enough I didn't find any huge

1864
01:38:14,529 --> 01:38:19,750
problem with it so it seems like a

1865
01:38:16,840 --> 01:38:23,380
pretty good one to use but there's

1866
01:38:19,750 --> 01:38:24,819
probably better ones right and people

1867
01:38:23,380 --> 01:38:26,500
may be on the stream could recommend

1868
01:38:24,819 --> 01:38:27,899
better ones but you know it's got

1869
01:38:26,500 --> 01:38:31,449
everything in there that's the basics

1870
01:38:27,899 --> 01:38:34,719
you know you've got your crazy stuff

1871
01:38:31,449 --> 01:38:36,729
like median finding and the Ackermann

1872
01:38:34,720 --> 01:38:39,300
function and junk like this but then

1873
01:38:36,729 --> 01:38:44,409
you've also got all your simple stuff

1874
01:38:39,300 --> 01:38:50,590
your heaps you know your binary tree

1875
01:38:44,409 --> 01:38:52,210
whatever so that's the one you're

1876
01:38:50,590 --> 01:38:58,750
reading right now all right well what's

1877
01:38:52,210 --> 01:39:00,130
the problem in you've already you've

1878
01:38:58,750 --> 01:39:02,760
already got something that teaches you

1879
01:39:00,130 --> 01:39:02,760
the algorithms

1880
01:39:26,840 --> 01:39:34,380
so much a shortcut ah all right well I

1881
01:39:31,680 --> 01:39:37,350
mean it I don't mean to to be skeptical

1882
01:39:34,380 --> 01:39:38,880
here but this book is really pretty

1883
01:39:37,350 --> 01:39:41,280
brief like I don't know that there's

1884
01:39:38,880 --> 01:39:42,539
much of a shortcut like I mean most of

1885
01:39:41,279 --> 01:39:44,939
these algorithms are defining like five

1886
01:39:42,539 --> 01:39:46,939
pages or something how much of a

1887
01:39:44,939 --> 01:39:53,579
shortcut are you looking for I mean I

1888
01:39:46,939 --> 01:39:56,909
this book being incredibly concise you

1889
01:39:53,579 --> 01:39:59,369
know we it would barely dwell on an

1890
01:39:56,909 --> 01:40:05,539
algorithm for hardly any time at all are

1891
01:39:59,369 --> 01:40:05,539
you finding it somehow to be lengthy

1892
01:40:06,500 --> 01:40:11,340
viii made you once mentioned a numerical

1893
01:40:09,539 --> 01:40:14,909
book oh yeah those are the foremen act

1894
01:40:11,340 --> 01:40:19,890
in books those aren't for data

1895
01:40:14,909 --> 01:40:20,939
structures and algorithms those are for

1896
01:40:19,890 --> 01:40:25,469
people in shouldn't working with

1897
01:40:20,939 --> 01:40:27,899
floating-point arithmetic specifically

1898
01:40:25,469 --> 01:40:30,569
so those those are not algorithms the

1899
01:40:27,899 --> 01:40:31,889
algorithm he doesn't cover anything

1900
01:40:30,569 --> 01:40:34,349
relating to data structures and

1901
01:40:31,890 --> 01:40:40,560
algorithms what he covers is how to look

1902
01:40:34,350 --> 01:40:43,440
at equations and solve them in and break

1903
01:40:40,560 --> 01:40:45,150
down the operations of the equations

1904
01:40:43,439 --> 01:40:47,698
you're trying to solve instead of

1905
01:40:45,149 --> 01:40:49,799
solving them in the obvious way which

1906
01:40:47,698 --> 01:40:52,859
can produce numerically unstable results

1907
01:40:49,800 --> 01:40:55,230
solve them in non-obvious ways that

1908
01:40:52,859 --> 01:40:57,779
produce much more stable results and are

1909
01:40:55,229 --> 01:40:59,879
oftentimes faster as well but you know

1910
01:40:57,779 --> 01:41:05,750
at the very least not any more expensive

1911
01:40:59,880 --> 01:41:05,750
to do right so

1912
01:41:08,170 --> 01:41:13,869
and he's and there's there's more than

1913
01:41:12,159 --> 01:41:18,399
one on here

1914
01:41:13,869 --> 01:41:19,059
real computing made real yeah is also

1915
01:41:18,399 --> 01:41:21,429
there

1916
01:41:19,060 --> 01:41:35,970
I don't know that he's done any other

1917
01:41:21,430 --> 01:41:35,970
ones I can't remember but right

1918
01:41:45,000 --> 01:41:50,488
and Stan pancakes I don't know if I

1919
01:41:47,159 --> 01:41:53,880
agree with thing just read commute

1920
01:41:50,488 --> 01:41:57,629
I think Knuth is definitely more

1921
01:41:53,880 --> 01:41:59,100
advanced like if you're looking for just

1922
01:41:57,630 --> 01:42:01,940
the basics I think you want something

1923
01:41:59,100 --> 01:42:06,239
more like that rivals book

1924
01:42:01,939 --> 01:42:10,019
Knuth is definitely like when you're

1925
01:42:06,238 --> 01:42:12,119
looking to be real serious on it because

1926
01:42:10,020 --> 01:42:13,770
he takes a lot of detours he goes

1927
01:42:12,119 --> 01:42:16,640
through a lot of other stuff he

1928
01:42:13,770 --> 01:42:19,469
discusses a lot of points that are not

1929
01:42:16,640 --> 01:42:23,310
necessarily important just for the basic

1930
01:42:19,469 --> 01:42:28,680
understanding of algorithms you know and

1931
01:42:23,310 --> 01:42:32,780
so while like Knuth is probably

1932
01:42:28,680 --> 01:42:34,890
something that yeah most people should

1933
01:42:32,779 --> 01:42:38,130
be familiar you know familiarize

1934
01:42:34,890 --> 01:42:40,260
themselves with and know about so they

1935
01:42:38,130 --> 01:42:42,390
know when to read it it's definitely not

1936
01:42:40,260 --> 01:42:44,369
Oh Sammy says he was kidding okay good

1937
01:42:42,390 --> 01:42:45,690
because it's definitely not the kind of

1938
01:42:44,369 --> 01:42:49,710
thing that a beginner should be

1939
01:42:45,689 --> 01:42:52,289
presented with as their only option some

1940
01:42:49,710 --> 01:42:56,219
people who are you know particularly

1941
01:42:52,289 --> 01:42:57,600
good at reading programming because

1942
01:42:56,219 --> 01:42:59,520
there's there's different ways that you

1943
01:42:57,600 --> 01:43:00,539
know you get into programming right some

1944
01:42:59,520 --> 01:43:01,590
people are good at reading books by

1945
01:43:00,539 --> 01:43:03,750
parents of you'll aren't you know

1946
01:43:01,590 --> 01:43:05,159
whatever if you're really good about

1947
01:43:03,750 --> 01:43:06,659
reading books on programming then you

1948
01:43:05,159 --> 01:43:09,719
know Knuth may be a great place to start

1949
01:43:06,659 --> 01:43:14,909
it's tons of material it's it's exciting

1950
01:43:09,719 --> 01:43:16,170
like there's so much there you know and

1951
01:43:14,909 --> 01:43:18,930
it's the seminal part of the history of

1952
01:43:16,170 --> 01:43:19,890
computing maybe it's a good bet but if

1953
01:43:18,930 --> 01:43:26,400
you kind of don't really know what

1954
01:43:19,890 --> 01:43:28,980
you're doing you know and you're just

1955
01:43:26,399 --> 01:43:31,109
like I'd like to get some basic

1956
01:43:28,979 --> 01:43:34,079
instruction and how algorithms work and

1957
01:43:31,109 --> 01:43:38,210
stuff it's just it's not I don't think

1958
01:43:34,079 --> 01:43:38,210
the right choice you know

1959
01:43:58,710 --> 01:44:01,460
yeah

1960
01:44:13,010 --> 01:44:18,500
and koneko you know what i might

1961
01:44:15,229 --> 01:44:19,879
recommend in in in all seriousness like

1962
01:44:18,500 --> 01:44:23,630
i'm not this is not even a joke

1963
01:44:19,880 --> 01:44:28,579
recommendation at all is if you've got

1964
01:44:23,630 --> 01:44:32,239
internet access where you are that comes

1965
01:44:28,579 --> 01:44:34,309
for example through a wireless router go

1966
01:44:32,239 --> 01:44:38,000
into the wireless router and like see if

1967
01:44:34,310 --> 01:44:40,070
it's got the like parental lock settings

1968
01:44:38,000 --> 01:44:42,590
or i don't even know what they're called

1969
01:44:40,069 --> 01:44:45,920
these days that let you just turn the

1970
01:44:42,590 --> 01:44:48,920
router off for specific hours and then

1971
01:44:45,920 --> 01:44:51,739
just from 9:00 in the morning to 5:00 at

1972
01:44:48,920 --> 01:44:57,109
night just turn up have it like block

1973
01:44:51,739 --> 01:44:59,269
all access the internet i find that's a

1974
01:44:57,109 --> 01:45:03,139
fantastic way to like learn and get

1975
01:44:59,270 --> 01:45:05,000
stuff done because it forces you to

1976
01:45:03,140 --> 01:45:06,829
program the old way where you just had

1977
01:45:05,000 --> 01:45:08,390
nothing to go on and you have to just

1978
01:45:06,829 --> 01:45:09,890
like program and there's no thing to

1979
01:45:08,390 --> 01:45:10,910
look at there's nothing to read and

1980
01:45:09,890 --> 01:45:12,079
nothing is in coming and there's no

1981
01:45:10,909 --> 01:45:16,750
messages or anything you're just

1982
01:45:12,079 --> 01:45:19,250
concentrating it's the way i still work

1983
01:45:16,750 --> 01:45:22,760
my deb machine is not connected to the

1984
01:45:19,250 --> 01:45:24,170
internet so I still program for two to

1985
01:45:22,760 --> 01:45:27,650
four hours at a time with no

1986
01:45:24,170 --> 01:45:32,329
distractions and honestly I don't know

1987
01:45:27,649 --> 01:45:33,679
any other way to do it I really just

1988
01:45:32,329 --> 01:45:34,970
don't think people get very much done

1989
01:45:33,680 --> 01:45:39,740
these days compared to what they used to

1990
01:45:34,970 --> 01:45:42,500
get done and it shows you know and I

1991
01:45:39,739 --> 01:45:45,199
think it's because there's just too much

1992
01:45:42,500 --> 01:45:47,239
crap like you know programming is an

1993
01:45:45,199 --> 01:45:48,889
intense mental exercise and if you're

1994
01:45:47,239 --> 01:45:53,149
sitting around like looking at Facebook

1995
01:45:48,890 --> 01:45:57,050
or something I you're just not gonna do

1996
01:45:53,149 --> 01:45:59,359
very well and so I feel like you can set

1997
01:45:57,050 --> 01:46:01,190
yourself up for success by just getting

1998
01:45:59,359 --> 01:46:01,670
rid of it the nice part about the

1999
01:46:01,189 --> 01:46:03,829
Internet

2000
01:46:01,670 --> 01:46:05,539
is this trivial to turn it off it's got

2001
01:46:03,829 --> 01:46:07,279
to come in from somewhere and if you

2002
01:46:05,539 --> 01:46:11,529
just disable whatever devices is coming

2003
01:46:07,279 --> 01:46:11,529
in from that's it

2004
01:46:21,130 --> 01:46:25,420
and yet like I said if you do have

2005
01:46:23,560 --> 01:46:27,160
multiple people who depend on the

2006
01:46:25,420 --> 01:46:29,260
internet that live in the same places

2007
01:46:27,159 --> 01:46:31,569
you you can usually still get around

2008
01:46:29,260 --> 01:46:33,190
that because most routers have like

2009
01:46:31,569 --> 01:46:40,179
parental controls that will lock out

2010
01:46:33,189 --> 01:46:41,949
specific machines you know so you can

2011
01:46:40,180 --> 01:46:44,650
even go in there and just program you

2012
01:46:41,949 --> 01:46:46,359
know take your machine give it a defined

2013
01:46:44,649 --> 01:46:48,939
lease like put the MAC address for your

2014
01:46:46,359 --> 01:46:51,329
machine into the router and say this MAC

2015
01:46:48,939 --> 01:46:54,460
address always gets IP address blah and

2016
01:46:51,329 --> 01:46:56,729
then lock that IP address down to not

2017
01:46:54,460 --> 01:47:05,949
have internet access between those hours

2018
01:46:56,729 --> 01:47:07,449
right and that's it better yet have one

2019
01:47:05,949 --> 01:47:08,889
of your flatmates do it and have them

2020
01:47:07,449 --> 01:47:11,139
change the internet password on the

2021
01:47:08,890 --> 01:47:12,579
router so now you can't get the internet

2022
01:47:11,140 --> 01:47:19,260
no matter what you do you can't even

2023
01:47:12,579 --> 01:47:19,260
turn it back on right problem solved and

2024
01:47:22,979 --> 01:47:28,389
I can't recommend it enough if you do it

2025
01:47:26,409 --> 01:47:30,250
for a few weeks and you find that you

2026
01:47:28,390 --> 01:47:32,950
just can't do it

2027
01:47:30,250 --> 01:47:34,779
then you know that's fine that probably

2028
01:47:32,949 --> 01:47:36,220
means you're not a super you're not

2029
01:47:34,779 --> 01:47:38,710
someone who really loves programming all

2030
01:47:36,220 --> 01:47:43,630
that much which by the way is not a

2031
01:47:38,710 --> 01:47:44,890
problem most people I think who work in

2032
01:47:43,630 --> 01:47:49,750
programming these days don't love

2033
01:47:44,890 --> 01:47:51,670
programming anyway but if you do give it

2034
01:47:49,750 --> 01:47:55,319
a couple of weeks you may find that you

2035
01:47:51,670 --> 01:47:58,840
just actually really enjoy it

2036
01:47:55,319 --> 01:48:00,250
and you don't miss it because actually

2037
01:47:58,840 --> 01:48:02,440
like most of these things like Twitter

2038
01:48:00,250 --> 01:48:05,619
just mostly what they do is remind you

2039
01:48:02,439 --> 01:48:07,960
that people are awful you know and your

2040
01:48:05,619 --> 01:48:09,069
computer isn't awful it's especially not

2041
01:48:07,960 --> 01:48:10,899
awful it's not connect to the internet

2042
01:48:09,069 --> 01:48:14,889
because Microsoft can't update its

2043
01:48:10,899 --> 01:48:16,569
stupid operating system and you can't

2044
01:48:14,890 --> 01:48:17,950
get viruses and you can't do anything

2045
01:48:16,569 --> 01:48:21,549
else when you're not connected to the

2046
01:48:17,949 --> 01:48:22,630
Internet right so a computer that is not

2047
01:48:21,550 --> 01:48:23,980
connect to the Internet is actually

2048
01:48:22,630 --> 01:48:25,930
quite a bit better than a computer that

2049
01:48:23,979 --> 01:48:27,519
is and is actually quite rewarding it

2050
01:48:25,930 --> 01:48:29,380
doesn't change from day to day it's the

2051
01:48:27,520 --> 01:48:32,920
same

2052
01:48:29,380 --> 01:48:35,260
so yeah I would get basically say that

2053
01:48:32,920 --> 01:48:37,119
like you know a good part of the joy of

2054
01:48:35,260 --> 01:48:38,530
programming is being with a computer

2055
01:48:37,119 --> 01:48:42,569
that is not connected to anything else

2056
01:48:38,529 --> 01:48:47,170
and just having fun working with it and

2057
01:48:42,569 --> 01:48:49,179
so at first if you're really used to

2058
01:48:47,170 --> 01:48:51,359
like programming with like Facebook up

2059
01:48:49,180 --> 01:48:54,520
all the time or whatever the hell else

2060
01:48:51,359 --> 01:49:01,109
then yeah it's gonna be a little you're

2061
01:48:54,520 --> 01:49:03,790
gonna have to like detox or whatever but

2062
01:49:01,109 --> 01:49:05,199
after that detox if you were somebody

2063
01:49:03,789 --> 01:49:07,119
who would actually really enjoy

2064
01:49:05,199 --> 01:49:08,349
programming I think you will find that

2065
01:49:07,119 --> 01:49:14,729
you really just don't miss it

2066
01:49:08,350 --> 01:49:14,730
I mean

2067
01:49:27,378 --> 01:49:33,590
and serial Quiller we say if you have

2068
01:49:32,328 --> 01:49:34,759
enough space and budget having a

2069
01:49:33,590 --> 01:49:35,840
separate room and dust machine for

2070
01:49:34,760 --> 01:49:39,498
dwelling but you never use for anything

2071
01:49:35,840 --> 01:49:40,998
else totally agree and that is exactly

2072
01:49:39,498 --> 01:49:42,378
what I have set up at this office like

2073
01:49:40,998 --> 01:49:46,569
this machine that I'm on the stream from

2074
01:49:42,378 --> 01:49:48,918
right now is connected the internet and

2075
01:49:46,569 --> 01:49:51,018
it's not my work machine it's in the

2076
01:49:48,918 --> 01:49:54,590
back room my machine out there that I

2077
01:49:51,019 --> 01:49:55,550
actually program on for a living not

2078
01:49:54,590 --> 01:49:57,260
connect to the internet it's not even

2079
01:49:55,550 --> 01:50:00,260
plugged into it it never goes on the

2080
01:49:57,260 --> 01:50:01,969
internet it's on a separate local

2081
01:50:00,260 --> 01:50:07,369
network that only connects machines that

2082
01:50:01,969 --> 01:50:09,769
aren't on the network right and and

2083
01:50:07,368 --> 01:50:11,748
again that's that's not for security I

2084
01:50:09,769 --> 01:50:14,449
mean that obviously is a good practice I

2085
01:50:11,748 --> 01:50:17,748
suppose for security but we don't do

2086
01:50:14,448 --> 01:50:19,759
anything security sensitive here so it's

2087
01:50:17,748 --> 01:50:21,260
not for security it's just because I

2088
01:50:19,760 --> 01:50:22,969
find that's the only way to be

2089
01:50:21,260 --> 01:50:26,090
productive is to not have those things

2090
01:50:22,969 --> 01:50:28,569
and I find that I enjoy it much better

2091
01:50:26,090 --> 01:50:28,569
right

2092
01:50:38,340 --> 01:50:42,210
and k'nuckles also remember I said that

2093
01:50:40,590 --> 01:50:44,369
plugged into the internet it is plugged

2094
01:50:42,210 --> 01:50:46,079
into plugged into the local network and

2095
01:50:44,369 --> 01:50:51,119
I do have a server so I actually do use

2096
01:50:46,079 --> 01:50:53,939
source code control so I know you were

2097
01:50:51,119 --> 01:50:56,309
joking but I I'm still using source code

2098
01:50:53,939 --> 01:50:59,539
control actually I just it's on a local

2099
01:50:56,310 --> 01:50:59,539
server not on the Internet

2100
01:51:12,670 --> 01:51:18,579
yeah it is senior it's a new version of

2101
01:51:14,859 --> 01:51:22,389
see mirror see mirror too but it is

2102
01:51:18,579 --> 01:51:23,439
still source code control right I mean

2103
01:51:22,389 --> 01:51:30,760
Sumeria is the source code control

2104
01:51:23,439 --> 01:51:33,519
program it's still see mirror yeah it's

2105
01:51:30,760 --> 01:51:37,420
Samira - which is like a complete

2106
01:51:33,520 --> 01:51:41,550
rewrite there's no there's no shared

2107
01:51:37,420 --> 01:51:41,550
code in it it's see mirror - and it's

2108
01:51:43,109 --> 01:51:47,969
it's baller if you don't mind me saying

2109
01:52:04,520 --> 01:52:09,860
yeah I mean I wouldn't want to use get

2110
01:52:07,100 --> 01:52:13,970
because I have very specific preferences

2111
01:52:09,859 --> 01:52:17,029
for source code control but I guess what

2112
01:52:13,970 --> 01:52:19,039
I would say is get is still fine even in

2113
01:52:17,029 --> 01:52:21,409
that scenario right meaning like if you

2114
01:52:19,039 --> 01:52:23,539
like get or are at least okay with it

2115
01:52:21,409 --> 01:52:24,739
you can still run get on a local network

2116
01:52:23,539 --> 01:52:27,140
just fine right

2117
01:52:24,739 --> 01:52:29,929
so whatever and that's true of most

2118
01:52:27,140 --> 01:52:31,520
source code control like you know pretty

2119
01:52:29,930 --> 01:52:33,950
much whatever source code control you're

2120
01:52:31,520 --> 01:52:39,170
using it probably has a local network

2121
01:52:33,949 --> 01:52:44,510
version right we're gonna share SEMA or

2122
01:52:39,170 --> 01:52:49,159
two at some point probably not I maybe

2123
01:52:44,510 --> 01:52:50,869
eventually there's one more sort of like

2124
01:52:49,159 --> 01:52:52,579
switch will probably do it Molly rocket

2125
01:52:50,869 --> 01:52:56,599
in the future assuming we stay in

2126
01:52:52,579 --> 01:52:59,210
business long enough that's Morse has a

2127
01:52:56,600 --> 01:53:01,910
more sort of constantly running server

2128
01:52:59,210 --> 01:53:03,500
based thing to it and at that point

2129
01:53:01,909 --> 01:53:07,430
maybe I'd really see me or two I'm not

2130
01:53:03,500 --> 01:53:09,199
sure but no I'm not planning on

2131
01:53:07,430 --> 01:53:12,520
releasing senior to that's kind of an

2132
01:53:09,199 --> 01:53:12,519
internal thing only at the moment

2133
01:53:23,560 --> 01:53:29,840
and paid source code control episodes

2134
01:53:27,520 --> 01:53:34,090
yes the well the source code control

2135
01:53:29,840 --> 01:53:36,650
that my rocket is handmade it's true I

2136
01:53:34,090 --> 01:53:38,300
still have one more upgrade to do to it

2137
01:53:36,649 --> 01:53:41,388
the only thing it doesn't do now is its

2138
01:53:38,300 --> 01:53:42,590
own storage I wanted to get it to the

2139
01:53:41,389 --> 01:53:44,989
place where it does its own storage

2140
01:53:42,590 --> 01:53:52,400
right now it still uses the operating

2141
01:53:44,988 --> 01:53:54,319
system storage which I don't love Kevin

2142
01:53:52,399 --> 01:53:55,638
so you never access MSDN the OpenGL

2143
01:53:54,319 --> 01:53:59,868
documentation or other degradation your

2144
01:53:55,639 --> 01:54:01,639
work machine so I do access the OpenGL

2145
01:53:59,868 --> 01:54:03,408
documentation all the time on my work

2146
01:54:01,639 --> 01:54:07,969
machine I just have all the specs

2147
01:54:03,408 --> 01:54:12,529
downloaded and in a directory MSDN

2148
01:54:07,969 --> 01:54:16,310
I pretty much don't access because I

2149
01:54:12,529 --> 01:54:18,050
know it so well and I've programmed it

2150
01:54:16,310 --> 01:54:26,260
so many times that I pretty much just

2151
01:54:18,050 --> 01:54:29,929
use the windows headers now so yeah but

2152
01:54:26,260 --> 01:54:32,440
if I am working on something where I

2153
01:54:29,929 --> 01:54:35,149
need to do research I will write down

2154
01:54:32,439 --> 01:54:37,219
the things I need to research and

2155
01:54:35,149 --> 01:54:39,109
research them later so for example if I

2156
01:54:37,219 --> 01:54:40,219
need to know how to do something that I

2157
01:54:39,109 --> 01:54:42,109
think I'm gonna have to read through a

2158
01:54:40,219 --> 01:54:44,359
bunch of MSDN stuff I'll write it down

2159
01:54:42,109 --> 01:54:48,069
and I'll do it at night

2160
01:54:44,359 --> 01:54:50,509
I never plug the machine in to get it

2161
01:54:48,069 --> 01:54:53,590
I'll just go to like my laptop or

2162
01:54:50,510 --> 01:54:53,590
something and do it there

2163
01:54:56,488 --> 01:55:00,419
I would like to program without being

2164
01:54:59,010 --> 01:55:02,340
connected to the Internet but how do you

2165
01:55:00,420 --> 01:55:03,868
do it without Stack Overflow or other

2166
01:55:02,340 --> 01:55:07,860
references just breaking that reliance

2167
01:55:03,868 --> 01:55:09,808
just come from practicing experience so

2168
01:55:07,859 --> 01:55:15,149
what I would say is you don't really

2169
01:55:09,809 --> 01:55:16,619
have to break that reliance entirely it

2170
01:55:15,149 --> 01:55:18,899
depends on the circumstance so if you've

2171
01:55:16,618 --> 01:55:20,518
noticed on stream you'll see when I

2172
01:55:18,899 --> 01:55:22,948
search for things and when I don't write

2173
01:55:20,519 --> 01:55:26,940
the time that I search for things is

2174
01:55:22,948 --> 01:55:28,979
typically when I have to use someone

2175
01:55:26,939 --> 01:55:31,018
else's stuff and it's not working right

2176
01:55:28,979 --> 01:55:32,308
so I'm trying to call some things and

2177
01:55:31,019 --> 01:55:33,719
windows and they're not working or I'm

2178
01:55:32,309 --> 01:55:35,998
trying to call some things in OpenGL and

2179
01:55:33,719 --> 01:55:37,618
they're not working right and there I

2180
01:55:35,998 --> 01:55:41,238
want to try and see if someone already

2181
01:55:37,618 --> 01:55:45,179
knows why this thing isn't working so

2182
01:55:41,238 --> 01:55:46,498
that's still okay because you will find

2183
01:55:45,179 --> 01:55:47,908
that there are things that are broken

2184
01:55:46,498 --> 01:55:50,519
that there's really no way you could

2185
01:55:47,908 --> 01:55:52,379
have guessed and you have to ask around

2186
01:55:50,519 --> 01:55:53,760
or talk to driver people about it or

2187
01:55:52,380 --> 01:55:55,889
whatever and you know the Internet's

2188
01:55:53,760 --> 01:55:59,998
good for that so you're not trying to

2189
01:55:55,889 --> 01:56:01,498
break that that you just again write

2190
01:55:59,998 --> 01:56:02,819
that down when you're doing it move on

2191
01:56:01,498 --> 01:56:05,578
to whatever the next thing is on your

2192
01:56:02,819 --> 01:56:07,109
to-do list and then that night send out

2193
01:56:05,578 --> 01:56:12,479
the mail and do the googling or whatever

2194
01:56:07,109 --> 01:56:14,488
else you need to do right reliance on

2195
01:56:12,479 --> 01:56:17,488
Stack Overflow or something like that

2196
01:56:14,488 --> 01:56:19,259
for basic programming is bad that's

2197
01:56:17,488 --> 01:56:21,839
definitely true

2198
01:56:19,260 --> 01:56:24,360
the reason it's bad is because Stack

2199
01:56:21,840 --> 01:56:26,788
Overflow is highly variable right

2200
01:56:24,359 --> 01:56:27,420
sometimes on Stack Overflow the answer

2201
01:56:26,788 --> 01:56:29,429
is correct

2202
01:56:27,420 --> 01:56:32,010
sometimes on Stack Overflow the answer

2203
01:56:29,429 --> 01:56:34,408
is wrong and the problem with relying on

2204
01:56:32,010 --> 01:56:37,409
it is you don't yet know which is right

2205
01:56:34,408 --> 01:56:42,149
and which is wrong so I would highly

2206
01:56:37,408 --> 01:56:44,819
recommend getting developing a

2207
01:56:42,149 --> 01:56:47,488
discipline of exploration that does not

2208
01:56:44,819 --> 01:56:50,578
involve assuming that Stack Overflow has

2209
01:56:47,488 --> 01:56:52,379
an answer on it you should for any

2210
01:56:50,578 --> 01:56:55,288
programming thing that's about actual

2211
01:56:52,380 --> 01:56:57,359
programming you should try to figure out

2212
01:56:55,288 --> 01:57:01,559
ways that you can pull from diverse

2213
01:56:57,359 --> 01:57:05,399
resources do your own testing read up on

2214
01:57:01,559 --> 01:57:07,139
it separately right and come up with a

2215
01:57:05,399 --> 01:57:08,119
good methodology for becoming a

2216
01:57:07,139 --> 01:57:10,010
programmer who knows

2217
01:57:08,119 --> 01:57:12,050
that stuff without having to rely on

2218
01:57:10,010 --> 01:57:17,360
stock exchange right that's pretty

2219
01:57:12,050 --> 01:57:19,880
crucial and some of that happens online

2220
01:57:17,359 --> 01:57:22,670
some of that happens offline like I said

2221
01:57:19,880 --> 01:57:23,720
the point of having an isolated machine

2222
01:57:22,670 --> 01:57:25,489
are not using the internet when you're

2223
01:57:23,720 --> 01:57:26,930
programming is not because you should

2224
01:57:25,489 --> 01:57:29,599
never read about what other people have

2225
01:57:26,930 --> 01:57:33,440
done you should the point is to segment

2226
01:57:29,600 --> 01:57:35,240
that reading from the programming so

2227
01:57:33,439 --> 01:57:37,609
that you still spend time trying to

2228
01:57:35,239 --> 01:57:40,130
solve problems yourself you still spend

2229
01:57:37,609 --> 01:57:42,349
time analyzing problems yourself you

2230
01:57:40,130 --> 01:57:45,590
still send time developing without that

2231
01:57:42,350 --> 01:57:48,350
constant reading and looking at other

2232
01:57:45,590 --> 01:57:50,539
people's stuff but you still then want

2233
01:57:48,350 --> 01:57:54,200
to supplement that at night with reading

2234
01:57:50,539 --> 01:57:58,430
about what other people have done so

2235
01:57:54,199 --> 01:58:00,139
again you know it's not about staying

2236
01:57:58,430 --> 01:58:06,320
isolated all the time it's about making

2237
01:58:00,140 --> 01:58:09,430
sure you're not always connected alright

2238
01:58:06,319 --> 01:58:09,429
I think I'm going to shut things down

2239
01:58:14,078 --> 01:58:18,250
okay thank you everyone for joining me

2240
01:58:17,139 --> 01:58:19,599
for another episode of hand made here

2241
01:58:18,250 --> 01:58:21,279
it's been a pleasure coding with you as

2242
01:58:19,599 --> 01:58:22,449
always if you would like to follow on

2243
01:58:21,279 --> 01:58:24,189
the series at home you can always peer

2244
01:58:22,448 --> 01:58:25,299
to the game on handmade hero org and it

2245
01:58:24,189 --> 01:58:27,368
comes with all the source code so you

2246
01:58:25,300 --> 01:58:30,130
can play around with it and conduct your

2247
01:58:27,368 --> 01:58:32,109
own experiments if you want to ask

2248
01:58:30,130 --> 01:58:33,190
questions we have a forum site if you

2249
01:58:32,109 --> 01:58:35,348
want support the video series you have a

2250
01:58:33,189 --> 01:58:36,339
patreon page if you want to find out

2251
01:58:35,349 --> 01:58:37,630
where we're live we're on the schedule

2252
01:58:36,340 --> 01:58:40,360
bot and if you want to catch up on old

2253
01:58:37,630 --> 01:58:44,279
episodes we have a episode guide that is

2254
01:58:40,359 --> 01:58:46,689
it for today I will be back next week

2255
01:58:44,279 --> 01:58:48,880
when we will start debugging our

2256
01:58:46,689 --> 01:58:51,158
lighting code now that we have it

2257
01:58:48,880 --> 01:58:52,480
properly subdivided into geometry we

2258
01:58:51,158 --> 01:58:54,759
should be able to start seeing whether

2259
01:58:52,479 --> 01:58:56,198
we can get some good results and

2260
01:58:54,760 --> 01:58:59,110
figuring out what we're gonna have to do

2261
01:58:56,198 --> 01:59:01,899
to make sure our lighting looks cool and

2262
01:58:59,109 --> 01:59:04,598
is useful all right that's about it for

2263
01:59:01,899 --> 01:59:05,979
today hope see you back here next week

2264
01:59:04,599 --> 01:59:07,029
until then have fun programming and I'll

2265
01:59:05,979 --> 01:59:09,988
see everyone on the Internet

2266
01:59:07,029 --> 01:59:09,988
take it easy everybody

