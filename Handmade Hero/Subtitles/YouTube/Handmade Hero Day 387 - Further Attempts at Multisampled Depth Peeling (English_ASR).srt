1
00:00:02,178 --> 00:00:06,509
hello everybody and welcome to handmade

2
00:00:04,559 --> 00:00:11,099
hero share we code a complete game live

3
00:00:06,509 --> 00:00:14,820
on stream today I think we really just

4
00:00:11,099 --> 00:00:17,250
have to fuss a little bit with our we

5
00:00:14,820 --> 00:00:20,689
built sort of a customized multi sample

6
00:00:17,250 --> 00:00:24,629
buffer resolution scheme last weekend

7
00:00:20,689 --> 00:00:29,189
but we only just got everything finished

8
00:00:24,629 --> 00:00:31,739
up I guess we did it on Sunday we tried

9
00:00:29,189 --> 00:00:33,600
this we only got everything finished up

10
00:00:31,739 --> 00:00:34,649
by the end of the stream we didn't have

11
00:00:33,600 --> 00:00:38,219
a chance to actually play with

12
00:00:34,649 --> 00:00:40,170
algorithms for doing what we were trying

13
00:00:38,219 --> 00:00:41,910
to do we only had time to get it you

14
00:00:40,170 --> 00:00:46,920
know the pipeline setup for doing it and

15
00:00:41,909 --> 00:00:51,359
that kind of thing so today I think the

16
00:00:46,920 --> 00:00:52,770
only thing we really want to do is try

17
00:00:51,359 --> 00:00:55,469
to figure out if there's some kind of

18
00:00:52,770 --> 00:01:00,840
custom resolution scheme we can use to

19
00:00:55,469 --> 00:01:15,810
make that work it's an almond milk day

20
00:01:00,840 --> 00:01:18,509
today so yeah this is going to be one

21
00:01:15,810 --> 00:01:20,609
where it would be nice to have drawing

22
00:01:18,509 --> 00:01:23,969
so I may just try to draw without the

23
00:01:20,609 --> 00:01:27,030
cursor it could be fun who knows we'll

24
00:01:23,969 --> 00:01:31,679
see anyway let's go ahead and get

25
00:01:27,030 --> 00:01:34,228
started here so let me show you where we

26
00:01:31,680 --> 00:01:38,460
were at last time I believe we left it

27
00:01:34,228 --> 00:01:41,519
so that we were booting into the the

28
00:01:38,459 --> 00:01:42,750
multi sample resolution version of the

29
00:01:41,519 --> 00:01:46,228
game because there's a hint you can

30
00:01:42,750 --> 00:01:49,430
toggle on and off oops let me do that

31
00:01:46,228 --> 00:01:49,429
again I meant kind of desk

32
00:01:50,368 --> 00:01:54,359
but we aren't really doing it right yet

33
00:01:52,349 --> 00:01:56,699
are right the wrong term here because we

34
00:01:54,359 --> 00:02:00,659
don't actually know what algorithm we

35
00:01:56,700 --> 00:02:05,040
would use all we know is that we might

36
00:02:00,659 --> 00:02:06,570
be able to do better than the default so

37
00:02:05,040 --> 00:02:08,610
I believe this is our custom

38
00:02:06,569 --> 00:02:13,318
multi-resolution resolved here that's

39
00:02:08,610 --> 00:02:16,319
happening and what you can see is if I

40
00:02:13,318 --> 00:02:17,848
turn it off so this is this is I'm not

41
00:02:16,318 --> 00:02:19,378
going to turn off the custom one I'm

42
00:02:17,848 --> 00:02:21,929
just going to turn off multi sampling

43
00:02:19,378 --> 00:02:24,030
right so if you notice when I turn off

44
00:02:21,930 --> 00:02:25,920
multi sampling right we've done a really

45
00:02:24,030 --> 00:02:27,479
good job I think at this point render

46
00:02:25,919 --> 00:02:29,458
wise because everything is looking

47
00:02:27,479 --> 00:02:32,639
really good and I'm really happy with

48
00:02:29,459 --> 00:02:35,459
what we did and you know I think it's

49
00:02:32,639 --> 00:02:37,318
ready to put the art in there happy with

50
00:02:35,459 --> 00:02:39,900
all that so the only thing that I

51
00:02:37,318 --> 00:02:44,488
thought was really objectionable was

52
00:02:39,900 --> 00:02:45,959
these sort of jagged lines on the

53
00:02:44,489 --> 00:02:48,780
geometric primitives for the ground

54
00:02:45,959 --> 00:02:50,069
right and like I said even though we're

55
00:02:48,780 --> 00:02:53,189
going to be texture mapping stuff onto

56
00:02:50,068 --> 00:02:54,268
that ground those hard edges I think

57
00:02:53,189 --> 00:02:56,280
what still remains you can imagine you

58
00:02:54,269 --> 00:02:58,319
put a texture on this or other stuff

59
00:02:56,280 --> 00:03:00,419
you'd still go sorry I just now there's

60
00:02:58,318 --> 00:03:01,789
some ground cover stamping sort of stuff

61
00:03:00,419 --> 00:03:05,488
that we're probably going to be doing

62
00:03:01,789 --> 00:03:07,889
and so I feel like you know maybe that

63
00:03:05,489 --> 00:03:09,810
would hide these edges so it might be

64
00:03:07,889 --> 00:03:11,369
that we're you know going a little bit

65
00:03:09,810 --> 00:03:13,620
too far in terms of trying to create a

66
00:03:11,370 --> 00:03:16,140
bit of quality but I don't know I I want

67
00:03:13,620 --> 00:03:18,569
to at least have some confidence that

68
00:03:16,139 --> 00:03:19,979
you know let's say this was a dungeon

69
00:03:18,568 --> 00:03:21,829
area and this was some kind of a stone

70
00:03:19,979 --> 00:03:24,090
tile well there's not going to be any

71
00:03:21,830 --> 00:03:26,700
fringing of that it's just going to be a

72
00:03:24,090 --> 00:03:30,000
hard edge on the on that tile and I feel

73
00:03:26,699 --> 00:03:31,229
like that's going to cause problems if

74
00:03:30,000 --> 00:03:33,658
we don't have a way to smooth that out

75
00:03:31,229 --> 00:03:37,229
if we just want really high fidelity or

76
00:03:33,658 --> 00:03:40,560
high quality rather on the on the

77
00:03:37,229 --> 00:03:42,628
graphics there so we can't turn on multi

78
00:03:40,560 --> 00:03:44,969
sampling and what that will do is

79
00:03:42,628 --> 00:03:47,459
that'll sort of help smooth out all

80
00:03:44,969 --> 00:03:49,859
those edges and that's nice but the

81
00:03:47,459 --> 00:03:52,019
problem that we get with that is that

82
00:03:49,860 --> 00:03:54,689
the resolve the multi sample resolved

83
00:03:52,019 --> 00:03:56,549
leads to poor results with the depth

84
00:03:54,688 --> 00:03:58,348
feeling and this is somewhat

85
00:03:56,549 --> 00:04:00,569
understandable because death feeling is

86
00:03:58,348 --> 00:04:03,509
requiring you know the whole concept of

87
00:04:00,568 --> 00:04:08,369
depth feeling is assuming that you have

88
00:04:03,509 --> 00:04:10,289
one pixel per def sample one color value

89
00:04:08,370 --> 00:04:12,959
for the pixel one depth sample for the

90
00:04:10,289 --> 00:04:14,579
pixel and so when you move to a multi

91
00:04:12,959 --> 00:04:18,209
see if this game the problem is that you

92
00:04:14,580 --> 00:04:20,819
end up having up more than what right

93
00:04:18,209 --> 00:04:24,090
you end up having multiple color and

94
00:04:20,819 --> 00:04:25,839
depth samples per pixel and in order to

95
00:04:24,089 --> 00:04:29,619
move to the next step

96
00:04:25,839 --> 00:04:32,709
in the in the scheme you know for desk

97
00:04:29,620 --> 00:04:34,629
you language each peel in order to move

98
00:04:32,709 --> 00:04:36,668
to the next step in the scheme you need

99
00:04:34,629 --> 00:04:38,649
only one you need to have some

100
00:04:36,668 --> 00:04:41,789
understanding of which what the

101
00:04:38,649 --> 00:04:47,069
particular sample was and furthermore

102
00:04:41,790 --> 00:04:49,450
there's not really a way to do this with

103
00:04:47,069 --> 00:04:53,529
you know well I shouldn't say there's

104
00:04:49,449 --> 00:04:56,259
not a way to do it i if we wanted to

105
00:04:53,529 --> 00:04:59,349
just persist the multi sampling through

106
00:04:56,259 --> 00:05:00,819
the entire scheme we end up in sort of

107
00:04:59,350 --> 00:05:02,020
an unfortunate position and the reason

108
00:05:00,819 --> 00:05:05,649
that we end up in an unfortunate

109
00:05:02,019 --> 00:05:08,969
position that is that the whole point of

110
00:05:05,649 --> 00:05:11,829
multi sampling versus just over sampling

111
00:05:08,970 --> 00:05:15,010
is that you only pay for the over

112
00:05:11,829 --> 00:05:17,529
sampling at the edges of things so the

113
00:05:15,009 --> 00:05:20,379
whole point of using multi sampling is

114
00:05:17,529 --> 00:05:22,418
that on cards let's do it smartly you

115
00:05:20,379 --> 00:05:24,819
will not be paying for over sampling in

116
00:05:22,418 --> 00:05:26,859
here for example because since one

117
00:05:24,819 --> 00:05:29,199
geometric primitive is covering this

118
00:05:26,860 --> 00:05:31,870
whole thing you will not pay for over

119
00:05:29,199 --> 00:05:35,469
sampling here you might write along this

120
00:05:31,870 --> 00:05:37,930
diagonal because this diagonal is

121
00:05:35,470 --> 00:05:40,450
there's two primitives right there right

122
00:05:37,930 --> 00:05:42,939
one triangle one triangle that form the

123
00:05:40,449 --> 00:05:45,819
quad but inside the triangle you will

124
00:05:42,939 --> 00:05:48,579
not pay for multi sampling because the

125
00:05:45,819 --> 00:05:51,449
triangle covers the entire pixel so it

126
00:05:48,579 --> 00:05:54,069
runs as fast as it would more or less

127
00:05:51,449 --> 00:05:55,569
than if you weren't multi sampling and

128
00:05:54,069 --> 00:05:58,000
so that's an important speed win

129
00:05:55,569 --> 00:06:00,279
especially on modern hardware this this

130
00:05:58,000 --> 00:06:03,699
piece of hardware is nuts it's from a

131
00:06:00,279 --> 00:06:05,918
decade ago so it's not particularly good

132
00:06:03,699 --> 00:06:12,699
test case but just in general I think

133
00:06:05,918 --> 00:06:14,909
what we would find unless I'm very much

134
00:06:12,699 --> 00:06:18,879
an error we would have to test fit but

135
00:06:14,910 --> 00:06:22,780
my assumption certainly is that what we

136
00:06:18,879 --> 00:06:26,560
would find if we went through and tested

137
00:06:22,779 --> 00:06:28,299
the two types of methodologies is that

138
00:06:26,560 --> 00:06:30,280
multi sampling would be significantly

139
00:06:28,300 --> 00:06:33,848
faster than over sampling and over

140
00:06:30,279 --> 00:06:37,269
sampling would just be if we rendered it

141
00:06:33,848 --> 00:06:38,539
a much higher resolution than we were

142
00:06:37,269 --> 00:06:41,029
planning to use say

143
00:06:38,540 --> 00:06:46,040
a you know we were planning to use 1920

144
00:06:41,029 --> 00:06:48,319
by 1080 and we just render at two or

145
00:06:46,040 --> 00:06:51,740
three times that resolution Meany in

146
00:06:48,319 --> 00:06:54,379
both dimensions and then downsampled and

147
00:06:51,740 --> 00:06:56,090
that has the benefit of just working

148
00:06:54,379 --> 00:06:57,680
correctly with gut feeling because

149
00:06:56,089 --> 00:06:59,209
you're now just one depth sample per

150
00:06:57,680 --> 00:07:01,160
pixel still all the time until you

151
00:06:59,209 --> 00:07:03,680
finally smush everything down the whole

152
00:07:01,160 --> 00:07:05,600
pipeline runs in a higher resolution it

153
00:07:03,680 --> 00:07:10,220
runs in 4k or something right and then

154
00:07:05,600 --> 00:07:13,939
down sampled but again that will just

155
00:07:10,220 --> 00:07:16,160
literally be at least if not worse you

156
00:07:13,939 --> 00:07:19,209
know n times slower where n is the

157
00:07:16,160 --> 00:07:22,250
number of pixels that there are and

158
00:07:19,209 --> 00:07:24,349
where m is the multiplier on how many

159
00:07:22,250 --> 00:07:26,350
pixels there are so if we were to double

160
00:07:24,350 --> 00:07:30,140
the resolution in X and Y for example

161
00:07:26,350 --> 00:07:32,510
which would just be 2 X in either

162
00:07:30,139 --> 00:07:34,039
direction that's 4x more pixels so it

163
00:07:32,509 --> 00:07:36,920
will be 4 times slower to run in that

164
00:07:34,040 --> 00:07:38,689
and at least theoretically the multi

165
00:07:36,920 --> 00:07:46,069
sampling version will not be 4 times

166
00:07:38,689 --> 00:07:49,939
slower it he will be a little slower but

167
00:07:46,069 --> 00:07:52,129
not that much because it's not you know

168
00:07:49,939 --> 00:07:53,480
most of the slowness does not come for

169
00:07:52,129 --> 00:07:56,389
doing more pixels because it's actually

170
00:07:53,480 --> 00:07:58,100
not doing that many more samples

171
00:07:56,389 --> 00:08:00,769
especially because our primitives are

172
00:07:58,100 --> 00:08:03,770
very large in anime hero so there's not

173
00:08:00,769 --> 00:08:05,839
a lot of edges on them but the point

174
00:08:03,769 --> 00:08:09,889
here is basically that you know when we

175
00:08:05,839 --> 00:08:12,169
are doing the the main bulk of those

176
00:08:09,889 --> 00:08:13,759
things although we are not going to pay

177
00:08:12,170 --> 00:08:15,439
for the more pixels we are going to pay

178
00:08:13,759 --> 00:08:19,039
for the more memory bandwidth because

179
00:08:15,439 --> 00:08:22,339
the multi samples multi sample buffer is

180
00:08:19,040 --> 00:08:24,560
larger than a non multi sample buffer so

181
00:08:22,339 --> 00:08:26,929
we will be paying a cache and memory

182
00:08:24,560 --> 00:08:28,490
bandwidth cost one way or the other so

183
00:08:26,930 --> 00:08:33,289
it will get a little slower it's not

184
00:08:28,490 --> 00:08:34,940
free but it's not 100% the cost of over

185
00:08:33,289 --> 00:08:37,490
sampling in fact it's probably not even

186
00:08:34,940 --> 00:08:39,050
close so I do think we want to at least

187
00:08:37,490 --> 00:08:40,399
try to get multi sampling working

188
00:08:39,049 --> 00:08:42,049
instead of just going for something like

189
00:08:40,399 --> 00:08:45,019
over sampling which would be quite a bit

190
00:08:42,049 --> 00:08:47,359
more expensive but work properly to the

191
00:08:45,019 --> 00:08:50,000
scheme so what we try to do to

192
00:08:47,360 --> 00:08:51,680
ameliorate some of the problems here

193
00:08:50,000 --> 00:08:54,350
that we see with the

194
00:08:51,679 --> 00:08:56,269
with the multi sampling specifically

195
00:08:54,350 --> 00:08:57,528
look up in the trees I don't know if you

196
00:08:56,269 --> 00:08:59,360
can kind of see what's going on there

197
00:08:57,528 --> 00:09:01,129
let's say I move over here so you can

198
00:08:59,360 --> 00:09:04,818
see it move a bit but you can see a lot

199
00:09:01,129 --> 00:09:06,259
of kind of like it's not leaves it's not

200
00:09:04,818 --> 00:09:08,049
really traditional z-fighting but it's

201
00:09:06,259 --> 00:09:12,589
like I think a form of z-fighting

202
00:09:08,049 --> 00:09:14,899
right where the depth buffer itself go

203
00:09:12,589 --> 00:09:17,119
ahead make a place where we can zoom in

204
00:09:14,899 --> 00:09:19,129
and out where the depth buffer itself

205
00:09:17,119 --> 00:09:22,490
during that sort of resolution from

206
00:09:19,129 --> 00:09:24,589
multisample to nan is like picking you

207
00:09:22,490 --> 00:09:27,799
know values that that exhibit this

208
00:09:24,589 --> 00:09:31,119
problem that sort of fight back and

209
00:09:27,799 --> 00:09:34,969
forth about who's the closer pixel and

210
00:09:31,119 --> 00:09:38,389
so you end up you know we what we want

211
00:09:34,970 --> 00:09:40,910
to do is pick something reasonable when

212
00:09:38,389 --> 00:09:43,698
we do our resolve and not have that kind

213
00:09:40,909 --> 00:09:45,409
of problem occur and again because

214
00:09:43,698 --> 00:09:48,008
everything else is looking pretty good

215
00:09:45,409 --> 00:09:50,990
you know I'm not seeing a lot of

216
00:09:48,009 --> 00:09:52,970
artifacts in anywhere else so you know

217
00:09:50,990 --> 00:09:54,799
when you do the multi sampling it looks

218
00:09:52,970 --> 00:09:57,528
like we would just pretty much have what

219
00:09:54,799 --> 00:10:01,639
we wanted if we could just figure out a

220
00:09:57,528 --> 00:10:05,289
way to stop that sort of nasty effect

221
00:10:01,639 --> 00:10:08,959
from happening with the with the resolve

222
00:10:05,289 --> 00:10:12,110
so we have the the custom resolve

223
00:10:08,958 --> 00:10:15,649
working here right here is a custom

224
00:10:12,110 --> 00:10:17,089
resolve right here that I'm on and if

225
00:10:15,649 --> 00:10:21,558
you take a look at this custom resolve

226
00:10:17,089 --> 00:10:23,660
what we have is we've got the color

227
00:10:21,558 --> 00:10:25,610
buffer and the depth buffer oh and you

228
00:10:23,659 --> 00:10:27,129
know what before I forget let me do one

229
00:10:25,610 --> 00:10:31,370
thing that people were asking for

230
00:10:27,129 --> 00:10:36,649
apparently because we switch to using

231
00:10:31,370 --> 00:10:38,600
sampler ms multi sample right sample two

232
00:10:36,649 --> 00:10:42,649
DMS because we need that to do the

233
00:10:38,600 --> 00:10:44,540
custom result and the the multi sample

234
00:10:42,649 --> 00:10:48,289
the custom resolve functions are only

235
00:10:44,539 --> 00:10:50,928
available in shader one-five-zero so

236
00:10:48,289 --> 00:10:53,990
really we kind of need to specify that

237
00:10:50,928 --> 00:10:56,740
version when we do the multi sampling

238
00:10:53,990 --> 00:10:59,688
now we only need it for that shader so

239
00:10:56,740 --> 00:11:01,698
thankfully we can still if you run with

240
00:10:59,688 --> 00:11:03,769
multi simply turned off you could still

241
00:11:01,698 --> 00:11:04,969
run in version one three zero if your

242
00:11:03,769 --> 00:11:07,730
card only supported

243
00:11:04,970 --> 00:11:09,050
three zero right so that's kind of nice

244
00:11:07,730 --> 00:11:11,539
now the graphics card should have

245
00:11:09,049 --> 00:11:13,068
complained about that but I guess this

246
00:11:11,539 --> 00:11:15,230
graphics card compiler doesn't really

247
00:11:13,068 --> 00:11:17,088
check that I didn't have ever checking

248
00:11:15,230 --> 00:11:19,100
for that so since the card happens to

249
00:11:17,089 --> 00:11:20,870
know to be same sampler to DMS

250
00:11:19,100 --> 00:11:22,370
it's just worked even though we had

251
00:11:20,870 --> 00:11:24,980
version one three yo it's not supposed

252
00:11:22,370 --> 00:11:26,360
to but it did other people who compiled

253
00:11:24,980 --> 00:11:29,778
on more stringent cars probably on

254
00:11:26,360 --> 00:11:31,399
NVIDIA driver or something got that

255
00:11:29,778 --> 00:11:33,679
error so they just let me know so

256
00:11:31,399 --> 00:11:34,970
hopefully that'll help them make sure

257
00:11:33,679 --> 00:11:37,008
that that compiles properly on their

258
00:11:34,970 --> 00:11:39,278
machines but shader compiler not their

259
00:11:37,009 --> 00:11:41,509
regular compiled stuff obviously

260
00:11:39,278 --> 00:11:45,318
so you can kind of see here what we're

261
00:11:41,509 --> 00:11:49,039
doing our resolve loops over the sample

262
00:11:45,318 --> 00:11:51,169
count we look up the various samples for

263
00:11:49,039 --> 00:11:53,750
you know we're looking at the same pixel

264
00:11:51,169 --> 00:11:56,349
we look up each sample we look up the

265
00:11:53,750 --> 00:11:59,750
depth sample and the color sample and

266
00:11:56,350 --> 00:12:01,069
then we need to output something so what

267
00:11:59,750 --> 00:12:03,198
we're doing right now is just a

268
00:12:01,068 --> 00:12:06,469
straight-up average I'm sorry a straight

269
00:12:03,198 --> 00:12:10,549
up a pic of whatever the closest depth

270
00:12:06,470 --> 00:12:12,709
value was right and the problem with

271
00:12:10,549 --> 00:12:15,828
that is when we pick the closest depth

272
00:12:12,708 --> 00:12:18,078
value what we're essentially doing and

273
00:12:15,828 --> 00:12:20,208
let me see if I can I'm gonna try was

274
00:12:18,078 --> 00:12:23,088
going to try I know it's a bad idea I'm

275
00:12:20,208 --> 00:12:26,088
just going to try to do a drawing I it

276
00:12:23,089 --> 00:12:27,889
without the really having a drawing

277
00:12:26,089 --> 00:12:31,220
program of functioning drawing program

278
00:12:27,889 --> 00:12:35,360
I'm gonna try it because you only live

279
00:12:31,220 --> 00:12:40,970
once here I'm saying alright so let's go

280
00:12:35,360 --> 00:12:47,000
ahead and load okay so here's me doing

281
00:12:40,970 --> 00:12:49,459
an offset drawing sit here so what day

282
00:12:47,000 --> 00:12:57,110
is today today is day three eighty seven

283
00:12:49,458 --> 00:12:59,359
so day whoa now it's on oh that's

284
00:12:57,110 --> 00:13:01,068
because it lost connection I tell you it

285
00:12:59,360 --> 00:13:03,259
like we just really need to go into

286
00:13:01,068 --> 00:13:05,990
Milton and fix whatever the bugs are

287
00:13:03,259 --> 00:13:09,919
here like you can see that when it loses

288
00:13:05,990 --> 00:13:12,558
focus like when my when my program when

289
00:13:09,919 --> 00:13:15,049
seamier when when this happens it

290
00:13:12,558 --> 00:13:17,568
appears to lose focus right and you can

291
00:13:15,049 --> 00:13:18,379
see that now it's locked on properly and

292
00:13:17,568 --> 00:13:20,000
I think that's

293
00:13:18,379 --> 00:13:21,500
because now it's not getting tablet

294
00:13:20,000 --> 00:13:23,779
input it's getting like mouse input or

295
00:13:21,500 --> 00:13:27,399
something right and then when I real

296
00:13:23,779 --> 00:13:30,409
aunt it you can see when I relaunch it

297
00:13:27,399 --> 00:13:32,120
it's back again right the pressure

298
00:13:30,409 --> 00:13:34,459
sensitivity has returned it's getting

299
00:13:32,120 --> 00:13:38,450
tablet input but now the offset is back

300
00:13:34,460 --> 00:13:40,940
right it's very strange and so I know

301
00:13:38,450 --> 00:13:42,680
that's fixable I just don't know what

302
00:13:40,940 --> 00:13:44,060
the problem actually is all right so

303
00:13:42,679 --> 00:13:45,439
this is going to be some of the worst

304
00:13:44,059 --> 00:13:47,859
writing you've ever seen from me and

305
00:13:45,440 --> 00:13:47,860
that's saying something

306
00:14:08,529 --> 00:14:11,740
there we go

307
00:14:12,089 --> 00:14:22,949
all right so the problem here that we're

308
00:14:15,929 --> 00:14:26,128
you know experiencing is we have inside

309
00:14:22,948 --> 00:14:28,049
our pixel we've got a few sample points

310
00:14:26,129 --> 00:14:31,009
right I think in our case we actually

311
00:14:28,049 --> 00:14:36,120
have eight so there's quite a few of

312
00:14:31,009 --> 00:14:37,050
these bad boys in there right that's

313
00:14:36,120 --> 00:14:40,039
eight right there

314
00:14:37,049 --> 00:14:42,778
one two three four five six seven eight

315
00:14:40,039 --> 00:14:46,379
so at each of these samples we have a

316
00:14:42,778 --> 00:14:51,058
color and a depth value right now

317
00:14:46,379 --> 00:14:53,039
remember in cases where a pixel was

318
00:14:51,058 --> 00:14:54,838
entirely covered by a single primitive

319
00:14:53,039 --> 00:14:56,698
we effectively only have one sample

320
00:14:54,839 --> 00:14:59,100
because all eight samples in the multi

321
00:14:56,698 --> 00:15:02,458
sample buffer will have the same depth

322
00:14:59,100 --> 00:15:03,870
and the same color so in that case is

323
00:15:02,458 --> 00:15:05,758
trivial because pretty much whatever

324
00:15:03,870 --> 00:15:08,149
scheme we pick will produce the right

325
00:15:05,759 --> 00:15:10,680
answer which is just that answer right

326
00:15:08,149 --> 00:15:12,480
so the case that we're concerned about

327
00:15:10,679 --> 00:15:15,058
is the case where these eight samples

328
00:15:12,480 --> 00:15:16,678
have different values now some of them

329
00:15:15,058 --> 00:15:20,519
may have the same value and some of them

330
00:15:16,678 --> 00:15:23,249
may have different values and we have to

331
00:15:20,519 --> 00:15:25,669
figure out what to do about this so I

332
00:15:23,249 --> 00:15:31,980
think the problems that we're seeing is

333
00:15:25,669 --> 00:15:34,318
for example in our trees we've got a

334
00:15:31,980 --> 00:15:36,600
situation where remember we have the Z

335
00:15:34,318 --> 00:15:38,938
bias program happening and what the Z

336
00:15:36,600 --> 00:15:41,550
bias program does is as we go up the

337
00:15:38,938 --> 00:15:43,379
drawing disease even though it's a flat

338
00:15:41,549 --> 00:15:44,969
white card that's camera aligned so the

339
00:15:43,379 --> 00:15:46,769
Z relative the camera should be the same

340
00:15:44,970 --> 00:15:48,990
whole way we don't use it the same out

341
00:15:46,769 --> 00:15:51,720
the whole way what we actually do is we

342
00:15:48,990 --> 00:15:54,839
artificially boost the Z value get it

343
00:15:51,720 --> 00:15:56,370
make closer to the to the camera which

344
00:15:54,839 --> 00:15:59,069
in this case I guess is actually making

345
00:15:56,370 --> 00:16:03,299
it less right because if you remember

346
00:15:59,068 --> 00:16:06,178
our convention for Z here is that the

347
00:16:03,299 --> 00:16:08,729
lower depth is closer to the camera so

348
00:16:06,178 --> 00:16:13,769
we actually subtract from the Z value

349
00:16:08,730 --> 00:16:16,438
and make it get closer right and so what

350
00:16:13,769 --> 00:16:20,370
that means is that down at the bottom

351
00:16:16,438 --> 00:16:22,198
right in here we're starting off at a

352
00:16:20,370 --> 00:16:25,340
certain Z value and ending in another V

353
00:16:22,198 --> 00:16:28,159
value in here there's like those shadow

354
00:16:25,340 --> 00:16:31,450
is there down at the bottom here right

355
00:16:28,159 --> 00:16:34,509
the three shadow those shadow pixels

356
00:16:31,450 --> 00:16:38,450
therefore are all at different Z values

357
00:16:34,509 --> 00:16:41,240
what that means is that where we hit the

358
00:16:38,450 --> 00:16:42,970
edge now I just want to pull in the

359
00:16:41,240 --> 00:16:45,590
darkness just want to say one more time

360
00:16:42,970 --> 00:16:48,250
multi sampling when you're inside a

361
00:16:45,590 --> 00:16:50,810
primitive just writes all the samples

362
00:16:48,250 --> 00:16:54,850
normally if there isn't some reason for

363
00:16:50,809 --> 00:16:58,489
it not to so I just want to be clear in

364
00:16:54,850 --> 00:17:00,440
inside the primitive in here there is no

365
00:16:58,490 --> 00:17:02,629
problem or you know where I drew it

366
00:17:00,440 --> 00:17:05,390
right here for example no problem it's

367
00:17:02,629 --> 00:17:07,039
only on the edge and the reason that the

368
00:17:05,390 --> 00:17:08,840
edges the problem is because we're the

369
00:17:07,039 --> 00:17:10,190
edge of the primitive is that's where

370
00:17:08,839 --> 00:17:11,449
multi sampling takes a because remember

371
00:17:10,190 --> 00:17:18,200
the point of multi center needs to

372
00:17:11,450 --> 00:17:21,110
smooth primitive edges right so at the

373
00:17:18,200 --> 00:17:25,819
edges what happens is we're going to

374
00:17:21,109 --> 00:17:29,889
write all of these samples and some of

375
00:17:25,819 --> 00:17:33,859
them right will go to something else and

376
00:17:29,890 --> 00:17:36,230
some of them won't right so some of them

377
00:17:33,859 --> 00:17:38,839
will go to our primitive some of them

378
00:17:36,230 --> 00:17:40,370
will go to something else the problem I

379
00:17:38,839 --> 00:17:42,470
believe we're having and we did some

380
00:17:40,369 --> 00:17:44,000
work to verify this last weekend so I'm

381
00:17:42,470 --> 00:17:45,500
fairly confident and although we haven't

382
00:17:44,000 --> 00:17:50,890
proven it beyond the shadow of a doubt

383
00:17:45,500 --> 00:17:54,019
pun intended is that these samples here

384
00:17:50,890 --> 00:17:57,170
when they're written at the edge for the

385
00:17:54,019 --> 00:18:00,200
three sprite they're all going to get a

386
00:17:57,170 --> 00:18:02,840
different Z value right because remember

387
00:18:00,200 --> 00:18:05,269
our Z shader is now operating our Z by a

388
00:18:02,839 --> 00:18:07,429
shader is now operating per sample so

389
00:18:05,269 --> 00:18:09,740
the Z value of each of these is going to

390
00:18:07,430 --> 00:18:12,860
be slightly different so I think what

391
00:18:09,740 --> 00:18:14,960
happens is when it goes to do the depth

392
00:18:12,859 --> 00:18:16,849
feeling it goes out okay

393
00:18:14,960 --> 00:18:18,620
well what's the closest one well the

394
00:18:16,849 --> 00:18:20,990
closest one obviously is going to be the

395
00:18:18,619 --> 00:18:23,989
highest one up right it's going to be

396
00:18:20,990 --> 00:18:27,079
that one so it's like oh okay I found it

397
00:18:23,990 --> 00:18:29,029
that's the closest one put that into the

398
00:18:27,079 --> 00:18:31,220
depth field buffer then the next round

399
00:18:29,029 --> 00:18:33,440
of depth feeling it goes well what's the

400
00:18:31,220 --> 00:18:36,110
closest one now well the closest one now

401
00:18:33,440 --> 00:18:38,690
is now a multi sample from the same

402
00:18:36,109 --> 00:18:41,899
primitive so instead of P

403
00:18:38,690 --> 00:18:43,789
away the primitive what we actually did

404
00:18:41,900 --> 00:18:45,740
is just gathered multiple samples and

405
00:18:43,789 --> 00:18:47,569
think of it since we're at 8x over

406
00:18:45,740 --> 00:18:49,819
sampling and we're only deaf peeling

407
00:18:47,569 --> 00:18:52,220
away four layers we basically just end

408
00:18:49,819 --> 00:18:54,439
up in a situation where all of our deaf

409
00:18:52,220 --> 00:18:57,519
peels record the same damn primitive

410
00:18:54,440 --> 00:19:00,230
right and that's just not helpful

411
00:18:57,519 --> 00:19:02,629
because what we want to do is we want to

412
00:19:00,230 --> 00:19:04,400
peel away primitives so we need to do is

413
00:19:02,630 --> 00:19:07,820
try to come up with some metric that

414
00:19:04,400 --> 00:19:11,390
inside a pixel will discard values from

415
00:19:07,819 --> 00:19:15,379
the same primitive unfortunately I don't

416
00:19:11,390 --> 00:19:20,720
really know any way to do this directly

417
00:19:15,380 --> 00:19:24,020
right what I want to do is say write all

418
00:19:20,720 --> 00:19:28,839
of the samples with the exact same Z and

419
00:19:24,019 --> 00:19:32,359
color value if you're coming from this

420
00:19:28,839 --> 00:19:37,279
same sample right from the same

421
00:19:32,359 --> 00:19:39,649
primitive and I just don't know how to

422
00:19:37,279 --> 00:19:43,099
do that right in other words what I want

423
00:19:39,650 --> 00:19:48,350
it to do is I want it to just I want it

424
00:19:43,099 --> 00:19:52,449
to write the same value for the Z that

425
00:19:48,349 --> 00:19:56,299
it would write for the entire pixel and

426
00:19:52,450 --> 00:19:59,420
because there is no way that I can find

427
00:19:56,299 --> 00:20:01,519
to do that like I was unable to find any

428
00:19:59,420 --> 00:20:04,039
way to force it to always write the same

429
00:20:01,519 --> 00:20:06,529
Z value for all the edges just generate

430
00:20:04,039 --> 00:20:08,930
what you like don't interpolate Z per

431
00:20:06,529 --> 00:20:11,109
sample that's all I wanted right I just

432
00:20:08,930 --> 00:20:14,570
want it to not interpolate Z per sample

433
00:20:11,109 --> 00:20:17,599
just and this would be I think fairly

434
00:20:14,569 --> 00:20:23,599
easy for it to do it's not available

435
00:20:17,599 --> 00:20:27,740
right and barring that you know if it

436
00:20:23,599 --> 00:20:34,549
wasn't going to write Z per sample then

437
00:20:27,740 --> 00:20:36,710
just a well okay you know here's a

438
00:20:34,549 --> 00:20:39,250
question for you because I thought we

439
00:20:36,710 --> 00:20:39,250
tried this

440
00:20:43,798 --> 00:20:49,119
because I thought we tried this didn't

441
00:20:46,058 --> 00:20:52,990
last weekend I remember us trying this

442
00:20:49,119 --> 00:20:56,259
where we wrote we overrode what the

443
00:20:52,990 --> 00:20:58,569
sample Z was right we said we passed

444
00:20:56,259 --> 00:21:00,390
down a sample Z and we said all right

445
00:20:58,569 --> 00:21:03,730
here's the Z that you're going to use

446
00:21:00,390 --> 00:21:07,240
and that way it wouldn't take multiple

447
00:21:03,730 --> 00:21:10,870
samples for it I thought that's what we

448
00:21:07,240 --> 00:21:13,630
did and I don't and I guess you know now

449
00:21:10,869 --> 00:21:14,889
I'm thinking about I I can't remember us

450
00:21:13,630 --> 00:21:18,250
having any luck with that

451
00:21:14,890 --> 00:21:19,809
and I feel like there should have been a

452
00:21:18,250 --> 00:21:24,359
way to do that but I guess now that I

453
00:21:19,808 --> 00:21:26,379
think about it I other than relying on

454
00:21:24,359 --> 00:21:29,769
centroids and stuff like that I guess

455
00:21:26,380 --> 00:21:33,840
there's no real way I guess there's no

456
00:21:29,769 --> 00:21:33,839
real way to force flood all the samples

457
00:21:42,659 --> 00:21:48,759
yeah I just don't know I so it leads us

458
00:21:47,048 --> 00:21:55,629
in the nnv opposition I mean that's what

459
00:21:48,759 --> 00:21:57,940
we want and I feel like if we were in

460
00:21:55,630 --> 00:22:00,820
you know I feel like there must be some

461
00:21:57,940 --> 00:22:04,690
way to do that I wanna I want to pull a

462
00:22:00,819 --> 00:22:06,700
graphics one of those softer graphics

463
00:22:04,690 --> 00:22:13,570
gentlemen aside and just ask because I'm

464
00:22:06,700 --> 00:22:19,720
sure they would know I don't know claim

465
00:22:13,569 --> 00:22:21,548
just be like hey all I want to do is I

466
00:22:19,720 --> 00:22:24,839
want to make sure that all of the Z

467
00:22:21,548 --> 00:22:29,918
values generated from a single

468
00:22:24,839 --> 00:22:33,490
invocation of the fragment shader always

469
00:22:29,919 --> 00:22:35,379
have the exact same sample value Z

470
00:22:33,490 --> 00:22:36,759
values of the samples because that's all

471
00:22:35,378 --> 00:22:38,378
we wanted right

472
00:22:36,759 --> 00:22:39,519
I don't even care the color values can

473
00:22:38,378 --> 00:22:42,579
be different I don't even care about

474
00:22:39,519 --> 00:22:47,679
that I just need the Z values to be the

475
00:22:42,579 --> 00:22:50,589
same so the depth feeling will work but

476
00:22:47,679 --> 00:22:52,600
yeah all right so what we need to do

477
00:22:50,589 --> 00:22:54,519
here let's just try this technique

478
00:22:52,599 --> 00:22:56,918
anyway even though really what I want is

479
00:22:54,519 --> 00:22:59,620
not this but if I recall correctly we

480
00:22:56,919 --> 00:23:01,149
tried to make that to convince the

481
00:22:59,619 --> 00:23:08,648
graphics card to do that and it wouldn't

482
00:23:01,148 --> 00:23:13,058
do it so if we look here and we're going

483
00:23:08,648 --> 00:23:15,099
to do a this text will stretch to grab

484
00:23:13,058 --> 00:23:20,378
out our depth values what I want to do

485
00:23:15,099 --> 00:23:23,558
here is say well okay I we're averaging

486
00:23:20,378 --> 00:23:27,009
the colors together for this hmm

487
00:23:23,558 --> 00:23:30,329
and really I don't know that that's what

488
00:23:27,009 --> 00:23:33,788
we wanted to do because this is this is

489
00:23:30,329 --> 00:23:35,349
Jimmy picking a single depth value but

490
00:23:33,788 --> 00:23:37,509
averaging the colors which doesn't make

491
00:23:35,349 --> 00:23:41,288
a whole lot of sense so that's probably

492
00:23:37,509 --> 00:23:43,538
should get fixed but what we want to do

493
00:23:41,288 --> 00:23:49,269
here is is let's let's say that we just

494
00:23:43,538 --> 00:23:50,408
want to pick a representative sample so

495
00:23:49,269 --> 00:23:54,009
what I want to do for picking a

496
00:23:50,409 --> 00:23:54,400
representative sample I think is I want

497
00:23:54,009 --> 00:23:59,799
to

498
00:23:54,400 --> 00:24:03,580
pick a sample that's going to be the

499
00:23:59,799 --> 00:24:07,990
farthest back sample of the clothes

500
00:24:03,579 --> 00:24:10,750
samples right and this is kind of a

501
00:24:07,990 --> 00:24:15,430
weird thing to say but what I'm assuming

502
00:24:10,750 --> 00:24:17,289
right is that what I have here is I've

503
00:24:15,430 --> 00:24:21,308
got two primitives and let's say I'm

504
00:24:17,289 --> 00:24:28,808
looking from the top down here as to the

505
00:24:21,308 --> 00:24:32,829
cameras up here and I'm looking down and

506
00:24:28,808 --> 00:24:36,879
I've got two primitives all right like

507
00:24:32,829 --> 00:24:39,039
this now the problem is because again of

508
00:24:36,880 --> 00:24:40,300
the Z bias in this case but we would

509
00:24:39,039 --> 00:24:42,220
have this problem if we had other

510
00:24:40,299 --> 00:24:45,000
primitives and we do sort of have other

511
00:24:42,220 --> 00:24:47,558
primitives like the sides of the cubes

512
00:24:45,000 --> 00:24:52,539
the problem here is that they're sort of

513
00:24:47,558 --> 00:24:56,379
on an angle right they're slanted like

514
00:24:52,539 --> 00:25:00,629
that so I'm looking down at these two

515
00:24:56,380 --> 00:25:04,450
and effectively my pixel right if is

516
00:25:00,630 --> 00:25:07,420
sort of talking about picking out sort

517
00:25:04,450 --> 00:25:11,289
of a shaft you know along the camera

518
00:25:07,420 --> 00:25:13,200
direction now mind you it's not parallel

519
00:25:11,289 --> 00:25:15,549
because this is actually a perspective

520
00:25:13,200 --> 00:25:18,940
projection so technically actually if

521
00:25:15,549 --> 00:25:21,069
you know those are really hard to do

522
00:25:18,940 --> 00:25:22,650
drawing without having a cursor okay

523
00:25:21,069 --> 00:25:25,178
there we go

524
00:25:22,650 --> 00:25:28,269
it's really more like that right because

525
00:25:25,179 --> 00:25:31,330
as you get further away the the sort of

526
00:25:28,269 --> 00:25:34,690
range encompassed by a pixel is getting

527
00:25:31,329 --> 00:25:36,819
larger certainly but what you can see

528
00:25:34,690 --> 00:25:39,490
here is that you know I've got samples

529
00:25:36,819 --> 00:25:43,210
from this guy and then I've got samples

530
00:25:39,490 --> 00:25:48,279
from this guy now if you think about

531
00:25:43,210 --> 00:25:50,890
what that means it means that if we had

532
00:25:48,279 --> 00:25:52,178
some way of figuring out right because

533
00:25:50,890 --> 00:25:54,700
remember I just want to split the

534
00:25:52,179 --> 00:25:56,440
primitives I just want to do that if we

535
00:25:54,700 --> 00:25:59,558
add some way of figuring out which we're

536
00:25:56,440 --> 00:26:01,539
from which we would be okay for

537
00:25:59,558 --> 00:26:04,809
death-dealing purposes what I want to do

538
00:26:01,539 --> 00:26:05,289
is pick the furthest one back right okay

539
00:26:04,809 --> 00:26:07,899
so we're

540
00:26:05,289 --> 00:26:11,379
right here so what I want to do is I

541
00:26:07,900 --> 00:26:12,850
want to pick like right there right so

542
00:26:11,380 --> 00:26:14,350
if I had a sample that was at the edge

543
00:26:12,849 --> 00:26:15,789
of that that's what I want to pick

544
00:26:14,349 --> 00:26:18,509
because I know that when I def peel

545
00:26:15,789 --> 00:26:21,279
again the next time mmm

546
00:26:18,509 --> 00:26:23,529
now I will only get samples from this

547
00:26:21,279 --> 00:26:25,420
further away thing I won't accidentally

548
00:26:23,529 --> 00:26:26,889
pick more samples from this primitive up

549
00:26:25,420 --> 00:26:36,750
here that I was basically trying to

550
00:26:26,890 --> 00:26:42,460
remove right so yeah so that's just

551
00:26:36,750 --> 00:26:47,500
that's just that now I you know one

552
00:26:42,460 --> 00:26:48,940
thing we could imagine doing and the

553
00:26:47,500 --> 00:26:51,809
reason that I'm not doing this is just

554
00:26:48,940 --> 00:26:56,470
because again it's just it's much too

555
00:26:51,809 --> 00:26:58,210
costly I think but you could imagine an

556
00:26:56,470 --> 00:27:00,250
easy way to solve this problem would be

557
00:26:58,210 --> 00:27:02,380
to just have another buffer right and

558
00:27:00,250 --> 00:27:07,210
the other buffer destroys the primitive

559
00:27:02,380 --> 00:27:08,800
index that'd be it because then all I

560
00:27:07,210 --> 00:27:11,259
would do is as I step through these I'd

561
00:27:08,799 --> 00:27:15,279
go oh what primitive are we on okay that

562
00:27:11,259 --> 00:27:16,809
you know if take the closest take the

563
00:27:15,279 --> 00:27:20,639
furthest back sample that's from the

564
00:27:16,809 --> 00:27:23,769
same primitive index as me right and

565
00:27:20,640 --> 00:27:25,210
that's easy but we don't really have

566
00:27:23,769 --> 00:27:28,059
that so what I'm going to try to do

567
00:27:25,210 --> 00:27:32,920
instead is say well maybe I can build

568
00:27:28,059 --> 00:27:35,409
like a little mini cluster here of depth

569
00:27:32,920 --> 00:27:39,550
samples and so basically say if the

570
00:27:35,410 --> 00:27:42,880
depth sample is further back but not too

571
00:27:39,549 --> 00:27:47,139
much further back then we'll use it if

572
00:27:42,880 --> 00:27:48,730
it is too much further back we will

573
00:27:47,140 --> 00:27:55,630
assume that it's from a separate

574
00:27:48,730 --> 00:27:58,029
permanent right this isn't going to work

575
00:27:55,630 --> 00:27:59,830
perfectly right because as you get to

576
00:27:58,029 --> 00:28:03,670
things that are at the exact same Z it

577
00:27:59,829 --> 00:28:05,289
will fail but you know again we're just

578
00:28:03,670 --> 00:28:08,110
trying to minimize the artifacts here so

579
00:28:05,289 --> 00:28:09,700
maybe this is will be will be good it's

580
00:28:08,109 --> 00:28:11,229
frustrating to not be able to have the

581
00:28:09,700 --> 00:28:12,850
graphs guard do the sort of relatively

582
00:28:11,230 --> 00:28:14,860
simple thing that that would solve its

583
00:28:12,849 --> 00:28:17,379
problem but that's graphics cards for

584
00:28:14,859 --> 00:28:18,549
you and maybe if we ask like I said a

585
00:28:17,380 --> 00:28:21,220
graphics person

586
00:28:18,549 --> 00:28:23,619
if there would be somebody to do it we

587
00:28:21,220 --> 00:28:25,269
could say it for multi sampling require

588
00:28:23,619 --> 00:28:30,069
a much higher shader mode in a much

589
00:28:25,269 --> 00:28:31,809
better graphics card and then only

590
00:28:30,069 --> 00:28:33,399
enable multi sampling on those cards

591
00:28:31,809 --> 00:28:35,049
because again multi sampling is like a

592
00:28:33,400 --> 00:28:37,330
feature that it's a higher end graphics

593
00:28:35,049 --> 00:28:41,169
feature for our game it's not required

594
00:28:37,329 --> 00:28:43,210
you can just have those sort of

595
00:28:41,170 --> 00:28:45,279
polygonal edges in the game will work

596
00:28:43,210 --> 00:28:48,480
just fine it just doesn't quite look as

597
00:28:45,279 --> 00:28:52,059
good and so that's just you know that's

598
00:28:48,480 --> 00:28:53,740
just the trade-off there so if I was

599
00:28:52,059 --> 00:28:55,929
going to do that what I need to do here

600
00:28:53,740 --> 00:28:57,069
is say like okay here's the vertex code

601
00:28:55,930 --> 00:28:58,420
fragment code for it

602
00:28:57,069 --> 00:29:00,399
I don't need to change anything in the

603
00:28:58,420 --> 00:29:01,900
vertex code because I'm not again this

604
00:29:00,400 --> 00:29:03,550
is just drawing a full screen screen

605
00:29:01,900 --> 00:29:05,290
cloth so all I'm going to do is just

606
00:29:03,549 --> 00:29:06,789
change this rule here so what you can

607
00:29:05,289 --> 00:29:07,990
see is I'm going over each sample I'm

608
00:29:06,789 --> 00:29:09,970
getting the color and getting the depth

609
00:29:07,990 --> 00:29:15,940
so what I want to do now is say well

610
00:29:09,970 --> 00:29:21,880
okay let's defer picking the color here

611
00:29:15,940 --> 00:29:24,130
till till maybe after this right and

612
00:29:21,880 --> 00:29:25,840
what I want to do is say okay you know

613
00:29:24,130 --> 00:29:28,380
and I could even defer the whole thing

614
00:29:25,839 --> 00:29:30,609
right I can defer that this little thing

615
00:29:28,380 --> 00:29:31,990
so let's take a look here and say all

616
00:29:30,609 --> 00:29:35,349
right I'm going to grab the depth and

617
00:29:31,990 --> 00:29:37,359
what I want to do is I want to take the

618
00:29:35,349 --> 00:29:42,269
depth and go from a closest step scheme

619
00:29:37,359 --> 00:29:42,269
to a further steps game okay

620
00:29:42,849 --> 00:29:46,240
so I'm going to start off by saying the

621
00:29:44,349 --> 00:29:48,629
closest of the furthest death rather is

622
00:29:46,240 --> 00:29:51,609
the one that's right at the camera right

623
00:29:48,630 --> 00:29:53,560
that nobody could have so everything at

624
00:29:51,609 --> 00:29:56,459
first going to pass so what I do is I'm

625
00:29:53,559 --> 00:29:59,470
going to take a look at the depth right

626
00:29:56,460 --> 00:30:01,420
and actually I suppose what I should do

627
00:29:59,470 --> 00:30:03,009
is say let's start with sample index one

628
00:30:01,420 --> 00:30:07,360
and you know what I could do it just say

629
00:30:03,009 --> 00:30:09,690
let's just get that that depth in here

630
00:30:07,359 --> 00:30:12,579
to begin with so what we're going to do

631
00:30:09,690 --> 00:30:15,269
right is we're just going to say let's

632
00:30:12,579 --> 00:30:15,269
get the color

633
00:30:21,619 --> 00:30:27,709
[Applause]

634
00:30:23,240 --> 00:30:27,710
let's get the color let's get the depth

635
00:30:29,750 --> 00:30:39,839
so we start off here with a valid color

636
00:30:34,920 --> 00:30:41,190
in depth right and you know since des

637
00:30:39,839 --> 00:30:42,659
isn't used anywhere I'm going to call

638
00:30:41,190 --> 00:30:43,529
this depth I don't think we need to be

639
00:30:42,660 --> 00:30:47,870
more specific

640
00:30:43,529 --> 00:30:47,869
so I'm going to say that we just have

641
00:30:48,109 --> 00:31:09,500
color and depth here there we go and so

642
00:31:06,750 --> 00:31:14,849
that just selects the very first sample

643
00:31:09,500 --> 00:31:16,289
and uses that as the seed value so we

644
00:31:14,849 --> 00:31:19,289
start on whatever the first sample

645
00:31:16,289 --> 00:31:20,099
happens to be we're on that depth and

646
00:31:19,289 --> 00:31:22,289
off we go

647
00:31:20,099 --> 00:31:24,869
so now we come through the rest of our

648
00:31:22,289 --> 00:31:27,480
samples we fetch the depth value of

649
00:31:24,869 --> 00:31:32,359
whatever sample we're on and now what I

650
00:31:27,480 --> 00:31:36,450
want to say is well if this depth value

651
00:31:32,359 --> 00:31:39,269
is further away or if it's closer I'm

652
00:31:36,450 --> 00:31:41,039
going to take different actions so let's

653
00:31:39,269 --> 00:31:44,789
suppose that the coat that this depth

654
00:31:41,039 --> 00:31:46,558
that we get back is and you know what

655
00:31:44,789 --> 00:31:50,039
since I don't really care about

656
00:31:46,558 --> 00:31:52,549
averaging colors at this point and they

657
00:31:50,039 --> 00:31:57,379
actually move this all the way to be it

658
00:31:52,549 --> 00:31:57,379
right I may say something like

659
00:31:58,420 --> 00:32:08,899
[Applause]

660
00:32:01,329 --> 00:32:13,428
get rid of all this and just say that

661
00:32:08,898 --> 00:32:20,599
we'll pick a result color and we'll have

662
00:32:13,429 --> 00:32:22,850
a depth right and if we just are picking

663
00:32:20,599 --> 00:32:24,949
one color what you can see here is that

664
00:32:22,849 --> 00:32:26,480
we will be squaring the color and then

665
00:32:24,950 --> 00:32:29,058
square rooting it immediately so we

666
00:32:26,480 --> 00:32:31,220
wouldn't need to do that so because

667
00:32:29,058 --> 00:32:32,450
again the only reason we need to do

668
00:32:31,220 --> 00:32:35,360
gamma correction is if we're going to

669
00:32:32,450 --> 00:32:37,220
operate on the colors if we just pick a

670
00:32:35,359 --> 00:32:38,898
color rather than combining them which i

671
00:32:37,220 --> 00:32:43,839
think is fine because again all we're

672
00:32:38,898 --> 00:32:46,129
trying to do here with multi sampling I

673
00:32:43,839 --> 00:32:48,349
well you know what no that's not true

674
00:32:46,130 --> 00:32:49,730
because since we have polygon edge is I

675
00:32:48,349 --> 00:32:51,740
guess we do need that never mind

676
00:32:49,730 --> 00:33:00,500
take your back we do need to actually

677
00:32:51,740 --> 00:33:02,929
average them we can't just pick so what

678
00:33:00,500 --> 00:33:10,579
we could do here let's see what we could

679
00:33:02,929 --> 00:33:12,950
do here say all right if we were going

680
00:33:10,579 --> 00:33:14,778
to treat the combined color after the

681
00:33:12,950 --> 00:33:16,159
fact because I think that is sort of

682
00:33:14,778 --> 00:33:17,919
what we would have to do I guess you

683
00:33:16,159 --> 00:33:19,669
could try to clear it in the meantime

684
00:33:17,919 --> 00:33:22,360
basically what we're trying to do is

685
00:33:19,669 --> 00:33:24,740
find sort of a depth range if you will

686
00:33:22,359 --> 00:33:28,658
that is the depth range that we're

687
00:33:24,740 --> 00:33:28,659
willing to accept for this particular

688
00:33:28,898 --> 00:33:33,768
pixel where will average the color

689
00:33:31,519 --> 00:33:35,929
values together right so I'm going to

690
00:33:33,769 --> 00:33:39,138
write this out in that unoptimized way

691
00:33:35,929 --> 00:33:42,710
first and then we can always sort of do

692
00:33:39,138 --> 00:33:48,648
something smarter later on so what I'm

693
00:33:42,710 --> 00:33:50,360
going to do here is say here's our

694
00:33:48,648 --> 00:33:51,379
sample indexers our sample count we're

695
00:33:50,359 --> 00:33:58,129
going to loop through these we're gonna

696
00:33:51,380 --> 00:33:59,149
get these texels right like so so what

697
00:33:58,130 --> 00:34:03,350
I'm going to do is going to say if the

698
00:33:59,148 --> 00:34:07,518
depth of a particular sample is greater

699
00:34:03,349 --> 00:34:10,089
than equal to depth min and less than

700
00:34:07,519 --> 00:34:14,929
equal to death max

701
00:34:10,090 --> 00:34:17,559
then we're going to accept it okay we're

702
00:34:14,929 --> 00:34:26,059
going to fetch it we're going to do the

703
00:34:17,559 --> 00:34:30,880
operation on it so we're going to start

704
00:34:26,059 --> 00:34:34,309
out with zero we're going to sum like so

705
00:34:30,880 --> 00:34:40,099
we're going to remember how many of

706
00:34:34,309 --> 00:34:41,710
these we did so we add the color we

707
00:34:40,099 --> 00:34:46,360
remember how many of those there were

708
00:34:41,710 --> 00:34:50,300
then at the end of that we will do an

709
00:34:46,360 --> 00:34:54,829
inverse of the sample count and we'll

710
00:34:50,300 --> 00:34:57,410
multiply the combined color to get that

711
00:34:54,829 --> 00:35:00,949
right and then what I want to write here

712
00:34:57,409 --> 00:35:01,940
is I want to write the the DEF max again

713
00:35:00,949 --> 00:35:03,619
this is different than what we're doing

714
00:35:01,940 --> 00:35:05,510
before rather than picking the closest

715
00:35:03,619 --> 00:35:07,849
we're picking the furthest but only the

716
00:35:05,510 --> 00:35:09,770
furthest within a range so that we're

717
00:35:07,849 --> 00:35:11,199
trying to do that picking of primitives

718
00:35:09,769 --> 00:35:16,099
okay

719
00:35:11,199 --> 00:35:22,879
so that's about it then we have to again

720
00:35:16,099 --> 00:35:24,380
square root and again in an arch in an

721
00:35:22,880 --> 00:35:29,150
sRGB mode that would happen

722
00:35:24,380 --> 00:35:36,650
automatically so right now we're doing

723
00:35:29,150 --> 00:35:38,630
it ourselves okay because remember we

724
00:35:36,650 --> 00:35:40,700
don't our art assets currently are not

725
00:35:38,630 --> 00:35:43,220
processed correctly so they're there

726
00:35:40,699 --> 00:35:45,980
they don't have the right thing working

727
00:35:43,219 --> 00:35:49,279
there all right so now what we need to

728
00:35:45,980 --> 00:35:52,400
do we can get rid of combined color and

729
00:35:49,280 --> 00:35:58,820
depth up here and we can just look at

730
00:35:52,400 --> 00:36:03,829
our depth loop itself so we have a dip

731
00:35:58,820 --> 00:36:06,200
them in and a depth Max and so what we

732
00:36:03,829 --> 00:36:09,230
want to do here is I think probably just

733
00:36:06,199 --> 00:36:13,429
initially feed the depth min and the DEF

734
00:36:09,230 --> 00:36:16,969
max the same way right so we'll

735
00:36:13,429 --> 00:36:19,038
basically say all right let's fetch

736
00:36:16,969 --> 00:36:21,778
these

737
00:36:19,039 --> 00:36:23,760
so we start out with the first sample

738
00:36:21,778 --> 00:36:26,190
and we say let's just assume that the

739
00:36:23,760 --> 00:36:29,250
death range is whatever that sample says

740
00:36:26,190 --> 00:36:31,349
it is right then we loop through the

741
00:36:29,250 --> 00:36:33,059
rest of our samples we get whatever the

742
00:36:31,349 --> 00:36:37,109
depth value is for that particular

743
00:36:33,059 --> 00:36:39,990
sample and we say alright if the depth

744
00:36:37,108 --> 00:36:41,759
you know it's the minimum depth value

745
00:36:39,989 --> 00:36:43,259
and maybe I'll write this the opposite

746
00:36:41,760 --> 00:36:45,210
way around that I normally do just to be

747
00:36:43,260 --> 00:36:50,160
a little bit clear if the depth we get

748
00:36:45,210 --> 00:36:53,750
is less than the depth min right if it's

749
00:36:50,159 --> 00:36:56,489
a coming if it's closer to the camera

750
00:36:53,750 --> 00:36:59,849
then what we want to do here is say well

751
00:36:56,489 --> 00:37:04,519
how much closer is it if it's way closer

752
00:36:59,849 --> 00:37:06,838
we need to reset our min and Max right

753
00:37:04,519 --> 00:37:19,318
and I suppose that means we could just

754
00:37:06,838 --> 00:37:22,288
do this in one well okay so here are two

755
00:37:19,318 --> 00:37:26,429
cases right so we have depth in depth

756
00:37:22,289 --> 00:37:28,349
max obviously the depth can't be both so

757
00:37:26,429 --> 00:37:31,409
I guess what we could do here is just do

758
00:37:28,349 --> 00:37:33,690
that and say okay so if you're closer

759
00:37:31,409 --> 00:37:35,489
than the minimum we know you're a new

760
00:37:33,690 --> 00:37:37,260
sample that's in front of all our old

761
00:37:35,489 --> 00:37:39,239
samples if your further the maximum we

762
00:37:37,260 --> 00:37:41,789
know you're a new sample behind all of

763
00:37:39,239 --> 00:37:44,278
our samples so all we really need to do

764
00:37:41,789 --> 00:37:48,059
is figure out what the correct action is

765
00:37:44,278 --> 00:37:52,139
to take here right do we widen the range

766
00:37:48,059 --> 00:37:53,990
or do we reset the range hopefully that

767
00:37:52,139 --> 00:37:56,940
makes some sense

768
00:37:53,989 --> 00:37:59,939
all right so in the case where we're

769
00:37:56,940 --> 00:38:02,010
closer right what we know is that in

770
00:37:59,940 --> 00:38:04,108
that case the desk man is always going

771
00:38:02,010 --> 00:38:07,079
to become the depth right because we

772
00:38:04,108 --> 00:38:09,088
know that we are going to reset the

773
00:38:07,079 --> 00:38:10,318
range to be whatever the closest thing

774
00:38:09,088 --> 00:38:12,119
is it's going to have to include that

775
00:38:10,318 --> 00:38:14,940
because we're obviously want that close

776
00:38:12,119 --> 00:38:17,130
sample but what we want to do here is

777
00:38:14,940 --> 00:38:19,289
see just how much the difference is

778
00:38:17,130 --> 00:38:21,480
right so there's a difference between

779
00:38:19,289 --> 00:38:25,230
these two and we want to see how high it

780
00:38:21,480 --> 00:38:28,440
is so we want to subtract depth min from

781
00:38:25,230 --> 00:38:30,659
death to get a distance value and then

782
00:38:28,440 --> 00:38:31,769
we want to see if that distance value is

783
00:38:30,659 --> 00:38:34,259
greater than the fresh

784
00:38:31,769 --> 00:38:40,259
old if it is that we're going to set dip

785
00:38:34,260 --> 00:38:43,800
max as well right so if the difference

786
00:38:40,260 --> 00:38:46,800
value that we're tracking is greater

787
00:38:43,800 --> 00:38:47,700
than some modicum right and we don't

788
00:38:46,800 --> 00:38:49,769
know what that is

789
00:38:47,699 --> 00:38:52,049
so we're going to set that probably up

790
00:38:49,769 --> 00:38:55,650
here like down to fine

791
00:38:52,050 --> 00:38:58,100
yep threshold 0.01 app or something like

792
00:38:55,650 --> 00:38:58,099
this right

793
00:38:59,929 --> 00:39:09,299
so if the difference value crosses that

794
00:39:02,760 --> 00:39:11,370
depth threshold then what we want to do

795
00:39:09,300 --> 00:39:13,350
is we want to set the depth max as well

796
00:39:11,369 --> 00:39:14,699
so that's basically saying this sample

797
00:39:13,349 --> 00:39:15,960
with so much closer than the other

798
00:39:14,699 --> 00:39:17,730
samples that we're assuming there's a

799
00:39:15,960 --> 00:39:19,470
whole nother primitive in here and let's

800
00:39:17,730 --> 00:39:22,949
move to tracking that primitive instead

801
00:39:19,469 --> 00:39:24,839
of the other primitive right and then

802
00:39:22,949 --> 00:39:27,659
similarly if we have in here we got

803
00:39:24,840 --> 00:39:29,610
depth is greater than depth max we want

804
00:39:27,659 --> 00:39:36,019
to do exactly the same thing so the

805
00:39:29,610 --> 00:39:36,019
depth the different value here is groups

806
00:39:38,800 --> 00:39:43,440
[Applause]

807
00:39:40,130 --> 00:39:48,090
that way around right because guess in

808
00:39:43,440 --> 00:39:52,920
this case is the higher value so what we

809
00:39:48,090 --> 00:39:54,510
want to do is say same thing if the

810
00:39:52,920 --> 00:39:58,650
difference is greater than the depth

811
00:39:54,510 --> 00:40:01,050
threshold then we wouldn't do anything

812
00:39:58,650 --> 00:40:03,170
right so I guess it's not quite same

813
00:40:01,050 --> 00:40:06,750
thing we really want the other way round

814
00:40:03,170 --> 00:40:13,789
if we are within the threshold then we

815
00:40:06,750 --> 00:40:19,079
expand the deck max right now this is a

816
00:40:13,789 --> 00:40:23,880
little bit wrong okay and the reason

817
00:40:19,079 --> 00:40:26,099
that it's a little bit wrong is because

818
00:40:23,880 --> 00:40:27,480
it produces sort of results that are

819
00:40:26,099 --> 00:40:30,449
based on the order in which the samples

820
00:40:27,480 --> 00:40:32,639
were taken so we're going to do this way

821
00:40:30,449 --> 00:40:38,279
but then I'm going to talk about that in

822
00:40:32,639 --> 00:40:39,329
a second so don't let me forget so now

823
00:40:38,280 --> 00:40:41,160
we've got to get this thing compiling

824
00:40:39,329 --> 00:40:44,980
unfortunately can't see it with real

825
00:40:41,159 --> 00:40:48,009
indentation which is not the best thing

826
00:40:44,980 --> 00:41:03,608
and maybe I can reapply paste it in here

827
00:40:48,010 --> 00:41:08,910
I can I need just like a CPP file so

828
00:41:03,608 --> 00:41:16,029
here's that invented properly his name

829
00:41:08,909 --> 00:41:20,009
looks like we're missing a closing if

830
00:41:16,030 --> 00:41:20,010
we're missing a closing one right here

831
00:41:20,699 --> 00:41:26,699
handy that indentation is what you say

832
00:41:27,449 --> 00:41:32,529
so now we've got a debug that we're

833
00:41:31,179 --> 00:41:35,949
going to have some compiler bugs in

834
00:41:32,530 --> 00:41:41,609
there so let's go ahead and run that our

835
00:41:35,949 --> 00:41:46,088
compiler bugs a go oh well or not so

836
00:41:41,608 --> 00:41:48,429
yeah we can't really effectively see

837
00:41:46,088 --> 00:41:50,769
step through this so it's a little bit

838
00:41:48,429 --> 00:41:53,469
hard to tell but you can see we've we've

839
00:41:50,769 --> 00:41:55,179
definitely not done a correct job

840
00:41:53,469 --> 00:41:58,179
because we're getting all sorts of weird

841
00:41:55,179 --> 00:42:00,969
artifacts there so let's take a look at

842
00:41:58,179 --> 00:42:03,269
what's going on here and step through it

843
00:42:00,969 --> 00:42:06,608
and see if we can't figure out what

844
00:42:03,269 --> 00:42:09,159
what's going on so here's our jessamine

845
00:42:06,608 --> 00:42:12,068
depth max they're initialized at the

846
00:42:09,159 --> 00:42:14,889
start to the same value all right so

847
00:42:12,068 --> 00:42:16,599
this way we have the starting range so

848
00:42:14,889 --> 00:42:20,289
then I'm going to pull a depth value out

849
00:42:16,599 --> 00:42:23,230
of the samples I'm going to say if it

850
00:42:20,289 --> 00:42:25,480
was less than the minimum then I want to

851
00:42:23,230 --> 00:42:27,309
see how much less than the minimum was

852
00:42:25,480 --> 00:42:32,409
so I'm going to take the difference

853
00:42:27,309 --> 00:42:35,078
between the minimum depth and it minimum

854
00:42:32,409 --> 00:42:36,940
depth is going to be like greater

855
00:42:35,079 --> 00:42:39,609
because it's a little bit further away

856
00:42:36,940 --> 00:42:42,730
so when I do this subtract I'm expecting

857
00:42:39,608 --> 00:42:46,269
a positive value here so if it's greater

858
00:42:42,730 --> 00:42:48,420
than the depth threshold then what I

859
00:42:46,269 --> 00:42:52,568
want to do is I want to move the whole

860
00:42:48,420 --> 00:42:54,099
range up to this point so I'm going to

861
00:42:52,568 --> 00:42:55,719
set the death-mask you look up and in

862
00:42:54,099 --> 00:42:57,789
either case I'm going to take the depth

863
00:42:55,719 --> 00:42:58,308
min and set it to depth right because I

864
00:42:57,789 --> 00:43:03,949
always

865
00:42:58,309 --> 00:43:06,259
want to pick that okay if that was not

866
00:43:03,949 --> 00:43:08,358
true meaning that if instead of being in

867
00:43:06,259 --> 00:43:10,130
front of the men it was something else

868
00:43:08,358 --> 00:43:12,650
Chuck to see if it's greater than the

869
00:43:10,130 --> 00:43:13,969
max if it is greater than the maximum

870
00:43:12,650 --> 00:43:17,479
what I want to do is take the difference

871
00:43:13,969 --> 00:43:18,829
there between and again depth is the

872
00:43:17,478 --> 00:43:22,728
higher value now if it's further away

873
00:43:18,829 --> 00:43:24,528
and if that is less than the amount that

874
00:43:22,728 --> 00:43:30,649
we want to consider then we're going to

875
00:43:24,528 --> 00:43:32,958
expand the range to include it okay so

876
00:43:30,650 --> 00:43:36,099
then we come through and now that we've

877
00:43:32,958 --> 00:43:39,018
produced a range definite ended up Mac

878
00:43:36,099 --> 00:43:41,749
what we want to do is produce the color

879
00:43:39,018 --> 00:43:43,758
value so we take the combined color and

880
00:43:41,748 --> 00:43:45,498
we assume that it starts at zero we take

881
00:43:43,759 --> 00:43:46,699
the used sample count and assume it's at

882
00:43:45,498 --> 00:43:48,828
zero as well because we have not

883
00:43:46,699 --> 00:43:50,930
accepted any samples yet and then we

884
00:43:48,829 --> 00:43:53,689
then loop through all of our samples we

885
00:43:50,929 --> 00:43:57,078
take the depth value okay that's

886
00:43:53,688 --> 00:43:59,208
obviously wrong we take the depth value

887
00:43:57,079 --> 00:44:03,650
at this particular sample so that was a

888
00:43:59,208 --> 00:44:05,239
bug that would cause the bug we saw so

889
00:44:03,650 --> 00:44:07,759
that's good that probably fixes that

890
00:44:05,239 --> 00:44:10,249
particular but if the depth value is in

891
00:44:07,759 --> 00:44:14,599
the range that we are allowing we will

892
00:44:10,248 --> 00:44:17,958
fetch the color value out right we will

893
00:44:14,599 --> 00:44:19,880
then adjust for RGB we will sum that

894
00:44:17,958 --> 00:44:26,028
into our combined teleTracking and we'll

895
00:44:19,880 --> 00:44:30,380
remember that we had one there at that

896
00:44:26,028 --> 00:44:32,389
point we will then grab the you know

897
00:44:30,380 --> 00:44:35,298
after we've some dildos up we will grab

898
00:44:32,389 --> 00:44:38,298
the maximum depth value right and that's

899
00:44:35,298 --> 00:44:40,338
going to be our fragment that we will

900
00:44:38,298 --> 00:44:41,358
then look at the inverse of the sample

901
00:44:40,338 --> 00:44:42,558
count factor you know we could do is

902
00:44:41,358 --> 00:44:44,989
write this here to make it a little

903
00:44:42,559 --> 00:44:48,259
clearer so like there's our depth now

904
00:44:44,989 --> 00:44:51,889
we're going to write our color so I take

905
00:44:48,259 --> 00:44:55,789
the inverse sample count which is just 1

906
00:44:51,889 --> 00:44:57,170
over whatever how many we used and then

907
00:44:55,789 --> 00:44:59,329
we're going to take the result color and

908
00:44:57,170 --> 00:45:01,818
we're going to make that just be the you

909
00:44:59,329 --> 00:45:03,650
know the adjusted combined color so the

910
00:45:01,818 --> 00:45:06,079
combined color has n colors in it we're

911
00:45:03,650 --> 00:45:08,778
just going to divide by n to produce the

912
00:45:06,079 --> 00:45:12,120
average we then square root that to put

913
00:45:08,778 --> 00:45:14,699
it back into gamma space

914
00:45:12,119 --> 00:45:16,289
and we write it out alright so we fixed

915
00:45:14,699 --> 00:45:21,000
one bug there hopefully that bug was an

916
00:45:16,289 --> 00:45:23,759
important bug and we'll see so looking

917
00:45:21,000 --> 00:45:27,269
at this here we're definitely doing

918
00:45:23,760 --> 00:45:29,130
something wrong

919
00:45:27,269 --> 00:45:31,619
first of all we still have the artifacts

920
00:45:29,130 --> 00:45:33,720
or at least some of them but we also

921
00:45:31,619 --> 00:45:39,089
aren't getting smoothing along our edges

922
00:45:33,719 --> 00:45:43,679
so we must not really be allowing the

923
00:45:39,090 --> 00:45:46,200
range to be proper I so I want to check

924
00:45:43,679 --> 00:45:48,500
something here I want to change this

925
00:45:46,199 --> 00:45:51,960
depth threshold to be like really big

926
00:45:48,500 --> 00:45:55,170
right so this should basically just some

927
00:45:51,960 --> 00:45:58,860
everything and I want to verify that it

928
00:45:55,170 --> 00:46:00,389
does and so if you look there it does

929
00:45:58,860 --> 00:46:05,610
look like that is sort of what's

930
00:46:00,389 --> 00:46:07,829
happening right you can kind of see that

931
00:46:05,610 --> 00:46:12,890
we are now getting smoothing along our

932
00:46:07,829 --> 00:46:12,889
edges so yeah

933
00:46:34,298 --> 00:46:37,989
Unitas had an interesting idea

934
00:46:44,239 --> 00:46:54,289
I mean rinse I don't know how

935
00:46:45,739 --> 00:46:57,519
interesting it is but I wonder what

936
00:46:54,289 --> 00:47:07,069
would happen for depth peeling purposes

937
00:46:57,518 --> 00:47:23,238
if we just always took a particular

938
00:47:07,068 --> 00:47:24,858
depth sample meaning if instead of if

939
00:47:23,239 --> 00:47:28,338
instead of trying to process the depth

940
00:47:24,858 --> 00:47:36,078
values if we just took samples zero of

941
00:47:28,338 --> 00:47:38,179
the depth it wouldn't quite produce the

942
00:47:36,079 --> 00:47:40,309
right thing because sometimes that would

943
00:47:38,179 --> 00:47:43,249
be from a different that would be from a

944
00:47:40,309 --> 00:47:46,089
further away primitive but since you've

945
00:47:43,248 --> 00:47:52,448
already averaged the color together

946
00:47:46,088 --> 00:47:52,449
because you multi sampled it might work

947
00:47:57,159 --> 00:48:00,489
still not great

948
00:48:09,849 --> 00:48:14,990
gasps we really just want to be able to

949
00:48:13,608 --> 00:48:19,489
do the thing that I was talking about

950
00:48:14,989 --> 00:48:21,049
before which is just take the average

951
00:48:19,489 --> 00:48:23,389
color of all the things that have the

952
00:48:21,050 --> 00:48:25,068
closest Z value and then the closest Z

953
00:48:23,389 --> 00:48:26,868
value and we just want to force the

954
00:48:25,068 --> 00:48:28,849
original pixel shader at the fragment

955
00:48:26,869 --> 00:48:32,358
shader for all the primitives to just

956
00:48:28,849 --> 00:48:37,068
write the same Z value for all of the

957
00:48:32,358 --> 00:48:41,049
samples that it writes in that pixel

958
00:48:37,068 --> 00:48:43,550
right that's really all we want it to do

959
00:48:41,050 --> 00:48:44,750
but unfortunately I just can't figure

960
00:48:43,550 --> 00:48:46,579
out a way to do that because that would

961
00:48:44,750 --> 00:48:49,010
be so perfect that be exactly what we

962
00:48:46,579 --> 00:48:51,440
want I think we would have no artifacts

963
00:48:49,010 --> 00:48:54,859
in that case but in this case we

964
00:48:51,440 --> 00:48:59,750
definitely have plenty of artifacts so I

965
00:48:54,858 --> 00:49:02,809
really don't know what to do about that

966
00:48:59,750 --> 00:49:06,710
I also don't know why this wouldn't have

967
00:49:02,809 --> 00:49:09,078
been a reasonable death range I'm a

968
00:49:06,710 --> 00:49:10,970
little confused about that it seems like

969
00:49:09,079 --> 00:49:13,700
the depth values are not what I would

970
00:49:10,969 --> 00:49:15,949
expect them to be because like look at

971
00:49:13,699 --> 00:49:18,348
that that I must have something wrong

972
00:49:15,949 --> 00:49:20,029
there because that's a huge like

973
00:49:18,349 --> 00:49:23,059
remember the depth value should only

974
00:49:20,030 --> 00:49:24,260
range between zero and one right I mean

975
00:49:23,059 --> 00:49:25,369
we're pulling these values out of the

976
00:49:24,260 --> 00:49:27,680
death buffer they should only range

977
00:49:25,369 --> 00:49:31,608
between zero and one so this is like a

978
00:49:27,679 --> 00:49:36,338
tenth of the entire depth range and yet

979
00:49:31,608 --> 00:49:38,358
it doesn't seem to work

980
00:49:36,338 --> 00:49:41,599
maybe that's because the non-linearity

981
00:49:38,358 --> 00:49:47,328
of the depth range I'm not sure but it

982
00:49:41,599 --> 00:49:48,950
is a bit weird right so really you know

983
00:49:47,329 --> 00:49:52,220
if we take a look at how we wanted this

984
00:49:48,949 --> 00:49:55,309
to work right really what we want to do

985
00:49:52,219 --> 00:49:56,299
is just track you know the depth min I'm

986
00:49:55,309 --> 00:49:58,190
going to delete this because I'm not

987
00:49:56,300 --> 00:50:01,490
really sure there's anything worth doing

988
00:49:58,190 --> 00:50:03,730
in here so I'm going to save depth new

989
00:50:01,489 --> 00:50:03,729
news

990
00:50:05,630 --> 00:50:13,579
you know really what we want to do is

991
00:50:07,929 --> 00:50:22,788
there's just this right I mean you know

992
00:50:13,579 --> 00:50:24,500
I could do it like this right all we

993
00:50:22,789 --> 00:50:27,109
want to do is say you know if you give

994
00:50:24,500 --> 00:50:33,048
us the minimum give us them into a

995
00:50:27,108 --> 00:50:34,788
sample that's going to be the one and

996
00:50:33,048 --> 00:50:43,358
then when we come through here we just

997
00:50:34,789 --> 00:50:43,359
do that

998
00:50:49,048 --> 00:50:55,889
right I mean that's what we really want

999
00:50:51,349 --> 00:50:57,599
and that I think would just work I must

1000
00:50:55,889 --> 00:51:02,068
say my something up there but that I

1001
00:50:57,599 --> 00:51:03,809
think would just work if we knew that we

1002
00:51:02,068 --> 00:51:07,558
would always write the same values for

1003
00:51:03,809 --> 00:51:09,089
pixel here we've got depth min let me

1004
00:51:07,559 --> 00:51:10,890
just make sure I did this right you go

1005
00:51:09,088 --> 00:51:11,958
through all the samples we say depth min

1006
00:51:10,889 --> 00:51:18,658
oops

1007
00:51:11,958 --> 00:51:20,398
that's bad there we go

1008
00:51:18,659 --> 00:51:22,229
so this just always takes the minimum

1009
00:51:20,398 --> 00:51:26,458
sample right and then it a ver ajiz

1010
00:51:22,228 --> 00:51:29,548
everybody who was at that minimum depth

1011
00:51:26,458 --> 00:51:34,108
sample and the problem that we get with

1012
00:51:29,548 --> 00:51:35,880
that obviously is that because we're

1013
00:51:34,108 --> 00:51:38,278
still writing different Z values per

1014
00:51:35,880 --> 00:51:41,759
sample we end up in a situation where

1015
00:51:38,278 --> 00:51:43,438
those test values are not all from there

1016
00:51:41,759 --> 00:51:45,059
they're not all representative right

1017
00:51:43,438 --> 00:51:50,759
they're not all giving that same minimum

1018
00:51:45,059 --> 00:51:53,880
value but I contend that's what we want

1019
00:51:50,759 --> 00:51:57,869
right that's what we actually want to

1020
00:51:53,880 --> 00:52:04,499
have happen and so again the problem

1021
00:51:57,869 --> 00:52:09,019
that we see is that in here right where

1022
00:52:04,498 --> 00:52:11,188
we're actually doing this doing the work

1023
00:52:09,018 --> 00:52:12,808
this is this is the shader that's

1024
00:52:11,188 --> 00:52:16,858
actually getting called multiple you

1025
00:52:12,809 --> 00:52:25,099
know per sample what we want in this

1026
00:52:16,858 --> 00:52:25,098
case is to be able to set our frag Z

1027
00:52:28,769 --> 00:52:37,960
in a way that won't vary per sample and

1028
00:52:34,710 --> 00:52:41,860
yeah I just don't know how to convince

1029
00:52:37,960 --> 00:52:49,179
it to do that I think what we tried to

1030
00:52:41,860 --> 00:52:52,780
do before is to say centroid and that

1031
00:52:49,179 --> 00:53:00,460
was you know supposedly something that

1032
00:52:52,780 --> 00:53:02,200
would create you know that was

1033
00:53:00,460 --> 00:53:04,570
supposedly something that would create a

1034
00:53:02,199 --> 00:53:08,799
value that was going to be constant

1035
00:53:04,570 --> 00:53:10,180
across the pixel I think we looked at

1036
00:53:08,800 --> 00:53:12,850
the documentation on this and it wasn't

1037
00:53:10,179 --> 00:53:14,440
as clear as I would have liked but

1038
00:53:12,849 --> 00:53:18,699
basically what we ended up doing is

1039
00:53:14,440 --> 00:53:27,700
passing a different Z in and overriding

1040
00:53:18,699 --> 00:53:31,750
it right so you know I think it was

1041
00:53:27,699 --> 00:53:33,960
actually frag depth that we wrote here

1042
00:53:31,750 --> 00:53:33,960
and

1043
00:53:36,400 --> 00:53:44,409
[Applause]

1044
00:53:44,739 --> 00:53:50,750
and basically what we did is we said

1045
00:53:47,929 --> 00:53:53,480
okay we're going to have an input Z in

1046
00:53:50,750 --> 00:54:01,969
that input Z is going to be something

1047
00:53:53,480 --> 00:54:04,039
different right so the only real thing

1048
00:54:01,969 --> 00:54:06,679
we needed if I remember correctly to do

1049
00:54:04,039 --> 00:54:14,750
that right was we said okay we do we'd

1050
00:54:06,679 --> 00:54:17,598
say if we have a frag depth coming in

1051
00:54:14,750 --> 00:54:19,068
from if we have a devalue that we want

1052
00:54:17,599 --> 00:54:20,660
to use for all the fragments coming in

1053
00:54:19,068 --> 00:54:23,389
from the vertex shader that we can force

1054
00:54:20,659 --> 00:54:25,338
to not interpolate for sample then what

1055
00:54:23,389 --> 00:54:27,858
we'll do is we'll say okay the frag

1056
00:54:25,338 --> 00:54:30,759
depth is going to be that the frag Z for

1057
00:54:27,858 --> 00:54:33,440
comparison is going to be that as well

1058
00:54:30,760 --> 00:54:35,180
and then everything else just runs as

1059
00:54:33,440 --> 00:54:37,548
normal right because we can produce

1060
00:54:35,179 --> 00:54:39,440
multiple colors that's fine we just want

1061
00:54:37,548 --> 00:54:41,778
to you know make sure that we only ever

1062
00:54:39,440 --> 00:54:43,730
produce one V value for everything that

1063
00:54:41,778 --> 00:54:50,268
we write for this primitive whatever the

1064
00:54:43,730 --> 00:54:52,548
primitive is right I and so in order to

1065
00:54:50,268 --> 00:54:57,858
make that work we just needed a thing

1066
00:54:52,548 --> 00:55:07,420
that was like centroid you know in f/32

1067
00:54:57,858 --> 00:55:07,420
input Z and this just needs to output it

1068
00:55:08,210 --> 00:55:11,659
[Applause]

1069
00:55:14,980 --> 00:55:21,440
right that was it and so we had to

1070
00:55:19,190 --> 00:55:23,539
produce a Z value and the V value had to

1071
00:55:21,440 --> 00:55:24,858
be you know transformed and all that

1072
00:55:23,539 --> 00:55:27,319
good stuff

1073
00:55:24,858 --> 00:55:29,598
so whatever the Z value was that we were

1074
00:55:27,318 --> 00:55:35,028
actually using in this case it was the

1075
00:55:29,599 --> 00:55:37,460
modified Z right we take that modify Z

1076
00:55:35,028 --> 00:55:39,289
we'd have to make sure that we actually

1077
00:55:37,460 --> 00:55:41,838
did our divide right just like it would

1078
00:55:39,289 --> 00:55:43,730
do and then we needed to put it into the

1079
00:55:41,838 --> 00:55:47,048
range 0 to 1 so that was going to be a

1080
00:55:43,730 --> 00:55:47,048
negative 1 to 1 range

1081
00:55:48,639 --> 00:55:53,509
[Applause]

1082
00:55:49,929 --> 00:55:56,059
but that's it right and so if I remember

1083
00:55:53,510 --> 00:55:59,140
correctly we tried that and it didn't

1084
00:55:56,059 --> 00:55:59,139
work right

1085
00:56:04,530 --> 00:56:08,810
cannot construct this type void

1086
00:56:21,650 --> 00:56:29,180
I guess it doesn't like just this

1087
00:56:28,489 --> 00:56:36,169
instant

1088
00:56:29,179 --> 00:56:39,230
oh no I see what it's looking at somehow

1089
00:56:36,170 --> 00:56:42,559
we get to my colon in there I mean a

1090
00:56:39,230 --> 00:56:48,650
regular coal instead of stomach that's

1091
00:56:42,559 --> 00:56:51,349
your half so this is a version of that

1092
00:56:48,650 --> 00:56:53,960
code right that's doing in theory

1093
00:56:51,349 --> 00:56:59,088
writing the same z-value per pixel right

1094
00:56:53,960 --> 00:57:01,369
so there - every sample inside a given

1095
00:56:59,088 --> 00:57:05,420
pixel should have had the same one I

1096
00:57:01,369 --> 00:57:07,190
think and again the problem is again

1097
00:57:05,420 --> 00:57:11,450
with any graphics card thing like this

1098
00:57:07,190 --> 00:57:16,010
it's very hard to figure out whether

1099
00:57:11,449 --> 00:57:17,480
that's happening now if we play with

1100
00:57:16,010 --> 00:57:19,160
this a little bit more because again I'm

1101
00:57:17,480 --> 00:57:23,869
just you know I'm just kind of shooting

1102
00:57:19,159 --> 00:57:26,719
in the dark here I have no idea but one

1103
00:57:23,869 --> 00:57:29,599
thing that I need right or would want is

1104
00:57:26,719 --> 00:57:35,019
some way of seeing how many unique

1105
00:57:29,599 --> 00:57:39,920
samples we actually got in that case so

1106
00:57:35,019 --> 00:57:41,778
what I could do is say you know if we

1107
00:57:39,920 --> 00:57:43,970
wanted to we could produce a shader that

1108
00:57:41,778 --> 00:57:46,960
sort of just tried to count the number

1109
00:57:43,969 --> 00:57:56,389
of unique samples that we were getting

1110
00:57:46,960 --> 00:57:59,000
and draw that somehow so you can imagine

1111
00:57:56,389 --> 00:58:05,900
how we might do that right if we if

1112
00:57:59,000 --> 00:58:08,059
you're it out this entire block and

1113
00:58:05,900 --> 00:58:09,710
instead of doing that block we just

1114
00:58:08,059 --> 00:58:16,430
implemented a little thing that does

1115
00:58:09,710 --> 00:58:20,139
counting and again this is strictly for

1116
00:58:16,429 --> 00:58:24,038
debug so it can be absolutely horrific

1117
00:58:20,139 --> 00:58:24,038
what I could do is

1118
00:58:26,840 --> 00:58:43,289
[Applause]

1119
00:58:40,280 --> 00:58:50,610
just just make it N squared because why

1120
00:58:43,289 --> 00:59:01,829
not right so I'm going to pick up step a

1121
00:58:50,610 --> 00:59:03,750
and this B so this will compare right

1122
00:59:01,829 --> 00:59:05,429
two loops it's a loop from zero to

1123
00:59:03,750 --> 00:59:06,960
sample count and then from whatever the

1124
00:59:05,429 --> 00:59:09,089
current sample we were on to the stamp

1125
00:59:06,960 --> 00:59:10,800
account I'm going to do plus one because

1126
00:59:09,090 --> 00:59:12,630
I only want to compare against different

1127
00:59:10,800 --> 00:59:14,850
samples and I'm going to do minus one

1128
00:59:12,630 --> 00:59:19,070
here because obviously I don't need to

1129
00:59:14,849 --> 00:59:19,069
do the last sample compared with itself

1130
00:59:20,239 --> 00:59:27,059
so well loop over every single one and

1131
00:59:24,780 --> 00:59:31,410
what we'll do is we'll say if def a is

1132
00:59:27,059 --> 00:59:42,630
not equal to depth B we'll do unique

1133
00:59:31,409 --> 00:59:44,969
count plus one so that will basically

1134
00:59:42,630 --> 00:59:45,590
give us a counter it says how many there

1135
00:59:44,969 --> 00:59:48,649
are

1136
00:59:45,590 --> 00:59:52,769
we'll say the result color a equals one

1137
00:59:48,650 --> 00:59:56,130
and then the result color are those we

1138
00:59:52,769 --> 00:59:58,079
wrote clergy equals there's no color P

1139
00:59:56,130 --> 01:00:03,180
and then what I'll do is just say the

1140
00:59:58,079 --> 01:00:08,400
result color B in this case equals the

1141
01:00:03,179 --> 01:00:10,289
unique count and I want to multiply that

1142
01:00:08,400 --> 01:00:11,550
unique count by something that will

1143
01:00:10,289 --> 01:00:15,800
boost inside because it's only going to

1144
01:00:11,550 --> 01:00:24,150
go between zero and eight right

1145
01:00:15,800 --> 01:00:28,220
well it will at least be I guess we

1146
01:00:24,150 --> 01:00:30,750
would say the unique count starts at one

1147
01:00:28,219 --> 01:00:32,989
because even if all the values were the

1148
01:00:30,750 --> 01:00:32,989
same

1149
01:00:35,369 --> 01:00:40,409
we would still want one right

1150
01:00:44,139 --> 01:00:47,559
if we're actually talking about that

1151
01:00:45,699 --> 01:00:50,289
value so if all the values were saying

1152
01:00:47,559 --> 01:00:51,759
we'd never increment this so if there

1153
01:00:50,289 --> 01:00:57,789
were two values in there that were

1154
01:00:51,760 --> 01:00:59,440
different we would increment it there so

1155
01:00:57,789 --> 01:01:01,599
this is how many pairs there are that

1156
01:00:59,440 --> 01:01:03,280
are different right so it says you know

1157
01:01:01,599 --> 01:01:05,739
is this value is it how is it different

1158
01:01:03,280 --> 01:01:12,820
from all the rest of the values is this

1159
01:01:05,739 --> 01:01:17,199
a different value traveling if this is

1160
01:01:12,820 --> 01:01:18,340
the best way to count this concept so

1161
01:01:17,199 --> 01:01:25,359
let's think if there were three

1162
01:01:18,340 --> 01:01:27,940
different values in here the problem

1163
01:01:25,360 --> 01:01:29,829
with that is we count how many pairs

1164
01:01:27,940 --> 01:01:31,630
were different and it's not how many

1165
01:01:29,829 --> 01:01:34,409
different values there actually are

1166
01:01:31,630 --> 01:01:34,410
right

1167
01:01:50,369 --> 01:01:55,469
so I think what we actually probably

1168
01:01:52,710 --> 01:02:00,720
want to do is break out of that loop as

1169
01:01:55,469 --> 01:02:03,329
soon as we find one so if we just loop

1170
01:02:00,719 --> 01:02:06,750
through and say okay if we find a

1171
01:02:03,329 --> 01:02:11,840
difference then this color is a unique

1172
01:02:06,750 --> 01:02:15,360
color right there isn't another one

1173
01:02:11,840 --> 01:02:17,370
where I should say it differs from other

1174
01:02:15,360 --> 01:02:17,880
colors in the buffer we go to the next

1175
01:02:17,369 --> 01:02:32,039
one

1176
01:02:17,880 --> 01:02:34,760
of course we we would still find it yeah

1177
01:02:32,039 --> 01:02:46,409
this is not doing exactly what I want

1178
01:02:34,760 --> 01:02:48,270
also we don't want mints in here so what

1179
01:02:46,409 --> 01:02:51,750
I really want is something that's more

1180
01:02:48,269 --> 01:02:54,349
like okay I look at this color well it's

1181
01:02:51,750 --> 01:02:58,469
a death value I look at this depth value

1182
01:02:54,349 --> 01:03:01,440
and I want to make sure that I count

1183
01:02:58,469 --> 01:03:02,819
this depth value if it's new but if it

1184
01:03:01,440 --> 01:03:05,670
already equals something else in the

1185
01:03:02,820 --> 01:03:08,039
depth buffer then I don't want to count

1186
01:03:05,670 --> 01:03:10,559
it so I think really the correct way to

1187
01:03:08,039 --> 01:03:17,279
do this would be to sort of do it the

1188
01:03:10,559 --> 01:03:19,769
other way around which is to say that if

1189
01:03:17,280 --> 01:03:22,500
I've seen something in the depth of her

1190
01:03:19,769 --> 01:03:24,719
up to this point that is the same as it

1191
01:03:22,500 --> 01:03:26,639
don't count it so I think the correct

1192
01:03:24,719 --> 01:03:28,619
way to do this would actually be to say

1193
01:03:26,639 --> 01:03:31,049
well the first one's obviously unique

1194
01:03:28,619 --> 01:03:33,150
let's go through it I should just yet

1195
01:03:31,050 --> 01:03:36,680
this is the better way to think about it

1196
01:03:33,150 --> 01:03:36,680
it just gets clearer

1197
01:03:37,349 --> 01:03:40,559
[Applause]

1198
01:03:45,659 --> 01:03:48,859
[Applause]

1199
01:03:51,070 --> 01:03:57,380
[Applause]

1200
01:03:54,588 --> 01:04:06,768
so I think this is that we want to do

1201
01:03:57,380 --> 01:04:19,108
[Applause]

1202
01:04:06,768 --> 01:04:24,389
something more like this so we say okay

1203
01:04:19,108 --> 01:04:28,199
for each color we assume that it's

1204
01:04:24,389 --> 01:04:30,298
unique get false inches other so we'll

1205
01:04:28,199 --> 01:04:34,169
assume that this color is unique we take

1206
01:04:30,298 --> 01:04:36,028
a look at the depth that's all right we

1207
01:04:34,170 --> 01:04:38,130
assume this depth sample is unique we

1208
01:04:36,028 --> 01:04:42,268
take a look at the depth we then loop

1209
01:04:38,130 --> 01:04:44,548
through all of the other thing colors we

1210
01:04:42,268 --> 01:04:47,278
depth as we've seen so far starting at

1211
01:04:44,548 --> 01:04:51,420
the first one coming to this one and we

1212
01:04:47,278 --> 01:04:57,568
say if they're equal then this can't be

1213
01:04:51,420 --> 01:05:00,450
this is not unique right that's the N

1214
01:04:57,568 --> 01:05:06,869
squared way to count the unique colors I

1215
01:05:00,449 --> 01:05:08,669
think right I think that's proper so I'm

1216
01:05:06,869 --> 01:05:10,318
just going to see what happens there in

1217
01:05:08,670 --> 01:05:15,229
this case again the maximum value

1218
01:05:10,318 --> 01:05:15,228
therefore can would be the sample count

1219
01:05:15,469 --> 01:05:21,200
so what I want to do here is basically

1220
01:05:17,728 --> 01:05:21,199
divide by the sample camp

1221
01:05:25,719 --> 01:05:29,799
and multiply by the maximum color value

1222
01:05:27,969 --> 01:05:31,269
right which is one so this this here

1223
01:05:29,800 --> 01:05:34,120
would give us something that gets

1224
01:05:31,269 --> 01:05:37,840
brighter based on how many unique

1225
01:05:34,119 --> 01:05:45,089
samples there were at least that's my

1226
01:05:37,840 --> 01:05:45,090
assertion boolean expression expected

1227
01:05:52,280 --> 01:05:55,409
[Applause]

1228
01:06:01,269 --> 01:06:12,730
okay um so here we can sort of see you

1229
01:06:07,929 --> 01:06:14,889
know obviously one thing that we expect

1230
01:06:12,730 --> 01:06:20,070
to see which is that you know this is

1231
01:06:14,889 --> 01:06:20,069
happening mostly on the edges right

1232
01:06:20,519 --> 01:06:25,150
which is what we want because multi

1233
01:06:23,380 --> 01:06:28,510
sampling is only supposed to happen on

1234
01:06:25,150 --> 01:06:32,530
the edges so the fact that we're seeing

1235
01:06:28,510 --> 01:06:35,400
multiple samples on the edges is is kind

1236
01:06:32,530 --> 01:06:39,340
of what we would expect right

1237
01:06:35,400 --> 01:06:42,579
unfortunately this doesn't really tell

1238
01:06:39,340 --> 01:06:44,950
me whether we're seeing two at the edges

1239
01:06:42,579 --> 01:06:50,469
or one or whatever so what I would

1240
01:06:44,949 --> 01:06:53,739
rather do here I think is maybe be a

1241
01:06:50,469 --> 01:06:56,919
little bit more explicit so let's go

1242
01:06:53,739 --> 01:06:59,049
ahead and set result color to one but

1243
01:06:56,920 --> 01:07:02,740
let's take a look at unique count and

1244
01:06:59,050 --> 01:07:08,619
say something like if unique count

1245
01:07:02,739 --> 01:07:13,089
equals one then the result color RGB is

1246
01:07:08,619 --> 01:07:17,019
going to be something like that and

1247
01:07:13,090 --> 01:07:25,570
let's just say two three and greater

1248
01:07:17,019 --> 01:07:29,949
than or equal to four like that right so

1249
01:07:25,570 --> 01:07:33,190
if there's one sample we're going to

1250
01:07:29,949 --> 01:07:35,529
call that uninteresting if there's two

1251
01:07:33,190 --> 01:07:38,050
samples we're going to call that green

1252
01:07:35,530 --> 01:07:40,690
if there's three samples we're going to

1253
01:07:38,050 --> 01:07:43,780
call that yellow and if there's more

1254
01:07:40,690 --> 01:07:52,200
than four or four or more we're going to

1255
01:07:43,780 --> 01:07:56,970
call that red right okay

1256
01:07:52,199 --> 01:07:59,969
um so you know what I'm looking at here

1257
01:07:56,969 --> 01:08:03,000
is all green so what that suggests to me

1258
01:07:59,969 --> 01:08:05,699
is or what that says to me is that

1259
01:08:03,000 --> 01:08:09,329
unless I wrote the loop wrong we are

1260
01:08:05,699 --> 01:08:11,639
actually getting only one outside only

1261
01:08:09,329 --> 01:08:13,950
two depth samples at the at those

1262
01:08:11,639 --> 01:08:24,659
locations right which is a interesting

1263
01:08:13,949 --> 01:08:26,880
start okay but I truth be told I have

1264
01:08:24,659 --> 01:08:37,259
absolutely no idea why that would be in

1265
01:08:26,880 --> 01:08:40,380
a lot of these cases what I would like

1266
01:08:37,259 --> 01:08:42,329
to do is find out is that actually valid

1267
01:08:40,380 --> 01:08:45,329
for this area right here for example so

1268
01:08:42,329 --> 01:08:53,039
we're you know these two things these

1269
01:08:45,329 --> 01:08:56,548
two triangles what I want to know is are

1270
01:08:53,039 --> 01:08:59,369
there two samples at this on the longest

1271
01:08:56,548 --> 01:09:01,380
line because the two triangles

1272
01:08:59,369 --> 01:09:03,738
themselves are abutting and we're

1273
01:09:01,380 --> 01:09:10,350
getting samples from either of them or

1274
01:09:03,738 --> 01:09:12,869
is it because we're still writing

1275
01:09:10,350 --> 01:09:15,359
multiple different Z values per sample

1276
01:09:12,869 --> 01:09:19,528
for a single permanent and what I could

1277
01:09:15,359 --> 01:09:22,020
do there is just like I don't really

1278
01:09:19,529 --> 01:09:25,910
know I don't really know any way to

1279
01:09:22,020 --> 01:09:25,910
figure out what I want to figure out

1280
01:09:53,090 --> 01:09:56,090
hmm

1281
01:10:21,319 --> 01:10:27,469
[Applause]

1282
01:10:22,939 --> 01:10:31,659
hmm I say so if we take a look at what

1283
01:10:27,470 --> 01:10:31,659
I'm actually looking at here right

1284
01:10:31,899 --> 01:10:35,989
that's anywhere the depth samples vary

1285
01:10:34,460 --> 01:10:37,640
it alright so we're counting how many

1286
01:10:35,989 --> 01:10:44,899
times we get any variance in the Deb

1287
01:10:37,640 --> 01:10:49,700
samples so for example we should be able

1288
01:10:44,899 --> 01:10:51,920
to prove a couple things about this so

1289
01:10:49,699 --> 01:10:55,069
for example if we came here and said

1290
01:10:51,920 --> 01:10:57,409
well alright let's suppose that we set

1291
01:10:55,069 --> 01:10:59,960
the input Z to the same value all the

1292
01:10:57,409 --> 01:11:02,210
time so the fragment Z that we were

1293
01:10:59,960 --> 01:11:04,399
going to write is just going to be 0.5

1294
01:11:02,210 --> 01:11:07,039
and there's nothing you can do about it

1295
01:11:04,399 --> 01:11:14,960
so basically like the values are just

1296
01:11:07,039 --> 01:11:16,699
always the same right and so we should

1297
01:11:14,960 --> 01:11:20,300
see here right is we should see that

1298
01:11:16,699 --> 01:11:22,670
everything is black and the only

1299
01:11:20,300 --> 01:11:24,890
possible way you can get non black is at

1300
01:11:22,670 --> 01:11:33,710
places where you're going to see through

1301
01:11:24,890 --> 01:11:35,329
to the literal background right where it

1302
01:11:33,710 --> 01:11:40,670
was literally just to the background and

1303
01:11:35,329 --> 01:11:44,269
that pretty much looks like it here but

1304
01:11:40,670 --> 01:11:45,739
it's a little bit hard to tell right we

1305
01:11:44,270 --> 01:11:52,520
probably need to be able to flick

1306
01:11:45,739 --> 01:11:54,849
between modes here which I suppose we

1307
01:11:52,520 --> 01:11:54,850
could do

1308
01:11:55,670 --> 01:11:58,908
[Applause]

1309
01:12:05,789 --> 01:12:11,710
[Applause]

1310
01:12:17,750 --> 01:12:27,199
so here's some of these crazy parameter

1311
01:12:22,909 --> 01:12:29,300
things here I'm not sure we probably can

1312
01:12:27,199 --> 01:12:32,139
if we want to just put these in the

1313
01:12:29,300 --> 01:12:37,570
OpenGL renderer right so if we wanted to

1314
01:12:32,140 --> 01:12:37,570
we could do a thing where we were like

1315
01:12:53,149 --> 01:12:56,389
[Applause]

1316
01:13:00,510 --> 01:13:03,810
something like this

1317
01:13:06,569 --> 01:13:10,949
so when here I could say something like

1318
01:13:12,079 --> 01:13:15,278
[Applause]

1319
01:13:17,609 --> 01:13:26,929
[Applause]

1320
01:13:35,250 --> 01:13:42,729
something like that and then when we're

1321
01:13:39,729 --> 01:13:45,039
in here looking at this when we do

1322
01:13:42,729 --> 01:13:51,479
resolve multi-sample I suppose what I

1323
01:13:45,039 --> 01:13:51,479
could do is say well okay you know if

1324
01:13:53,460 --> 01:14:10,050
look you simply see bug move this up to

1325
01:14:01,390 --> 01:14:10,050
the top so let me just do it as a knot

1326
01:14:10,199 --> 01:14:15,300
and then in here we would just say

1327
01:14:24,029 --> 01:14:27,228
[Applause]

1328
01:14:31,560 --> 01:14:36,010
and I believe we do we capture those

1329
01:14:34,689 --> 01:14:38,399
settings right it's just current

1330
01:14:36,010 --> 01:14:38,400
settings

1331
01:14:55,069 --> 01:15:02,728
[Applause]

1332
01:15:03,969 --> 01:15:14,868
so in theory that will force a a

1333
01:15:10,988 --> 01:15:17,468
recompile or it should have but doesn't

1334
01:15:14,868 --> 01:15:17,469
appear to have

1335
01:15:25,359 --> 01:16:02,469
I guess one thing is we do have that if

1336
01:15:28,800 --> 01:16:14,079
changed so we need this function here to

1337
01:16:02,470 --> 01:16:16,810
include it so remember right now we're

1338
01:16:14,079 --> 01:16:20,729
writing arbitrary Z values so our sort

1339
01:16:16,810 --> 01:16:22,630
is completely busted because it has no

1340
01:16:20,729 --> 01:16:25,959
information to work with so it's just

1341
01:16:22,630 --> 01:16:27,279
kind of order based at this point so

1342
01:16:25,960 --> 01:16:29,109
then if I come in here and I turn on

1343
01:16:27,279 --> 01:16:36,159
debug in theory this will actually turn

1344
01:16:29,109 --> 01:16:42,789
on debug so that's definitely good to

1345
01:16:36,159 --> 01:16:45,760
recompile but it doesn't look didn't

1346
01:16:42,789 --> 01:16:48,609
look like it actually did recompile

1347
01:16:45,760 --> 01:16:51,869
although that may be because

1348
01:16:48,609 --> 01:16:51,869
[Applause]

1349
01:16:56,619 --> 01:17:00,210
[Applause]

1350
01:17:10,670 --> 01:17:16,680
we do recompile consult another example

1351
01:17:14,489 --> 01:17:20,460
where do the settings the settings do

1352
01:17:16,680 --> 01:17:24,590
get snapped there and when I pound to

1353
01:17:20,460 --> 01:17:29,720
find make sure I actually did this right

1354
01:17:24,590 --> 01:17:34,619
when I pound to find multicentric debug

1355
01:17:29,720 --> 01:17:39,210
do actually do that right so that looks

1356
01:17:34,619 --> 01:17:40,890
roughly correct let's give that shot it

1357
01:17:39,210 --> 01:17:42,329
didn't delete the program I wonder if

1358
01:17:40,890 --> 01:17:44,670
that was confusing I don't think it

1359
01:17:42,329 --> 01:17:50,699
would have so something else appears to

1360
01:17:44,670 --> 01:17:52,319
be wrong there I'm not sure what right

1361
01:17:50,699 --> 01:17:56,099
like I would have expected that to work

1362
01:17:52,319 --> 01:17:57,869
let me let me go ahead and see what is

1363
01:17:56,100 --> 01:18:05,450
actually happening in that compile step

1364
01:17:57,869 --> 01:18:05,449
it looks like that compile step is not

1365
01:18:05,510 --> 01:18:11,210
properly making that switch between the

1366
01:18:08,609 --> 01:18:11,210
two different kinds

1367
01:18:21,670 --> 01:18:27,010
all right so the first compiled holds a

1368
01:18:23,859 --> 01:18:30,670
sampling debug is off but that's exactly

1369
01:18:27,010 --> 01:18:35,350
what we would expect let's take a look

1370
01:18:30,670 --> 01:18:37,869
here we turn it back on so now my the

1371
01:18:35,350 --> 01:18:39,579
assembling debug is one the format

1372
01:18:37,869 --> 01:18:41,199
string let's just take a look at what it

1373
01:18:39,579 --> 01:18:50,260
is to make sure that it actually

1374
01:18:41,199 --> 01:18:56,260
produced the right thing oh all right

1375
01:18:50,260 --> 01:18:58,780
now not only just I wash so here we go

1376
01:18:56,260 --> 01:19:07,900
it's multi-symptom debug is one oh hi

1377
01:18:58,779 --> 01:19:13,599
that's good but we actually use the

1378
01:19:07,899 --> 01:19:16,049
actual whole use the actual value i

1379
01:19:13,600 --> 01:19:16,050
define

1380
01:19:23,800 --> 01:19:28,420
so now we can flip between these and man

1381
01:19:26,260 --> 01:19:30,998
does that compile take a while or for it

1382
01:19:28,420 --> 01:19:34,630
to settle down right but at least I can

1383
01:19:30,998 --> 01:19:36,488
see that I can verify that it is what I

1384
01:19:34,630 --> 01:19:40,208
expected right which is that the only

1385
01:19:36,488 --> 01:19:42,788
place the fragment values differ is

1386
01:19:40,208 --> 01:19:44,078
where the background showed through

1387
01:19:42,788 --> 01:19:45,908
because obviously that's got a different

1388
01:19:44,078 --> 01:19:48,509
V value right so you can see very

1389
01:19:45,908 --> 01:19:52,208
clearly that that's what was going on so

1390
01:19:48,510 --> 01:19:54,780
I'm relatively satisfied that that's

1391
01:19:52,208 --> 01:19:54,779
okay

1392
01:19:55,538 --> 01:20:01,958
so at least we know that like our

1393
01:19:58,208 --> 01:20:03,819
counting is working at least to a

1394
01:20:01,958 --> 01:20:06,969
limited extent correctly right where

1395
01:20:03,819 --> 01:20:09,849
it's not completely busted it does work

1396
01:20:06,969 --> 01:20:13,208
a little bit so now if I actually set

1397
01:20:09,849 --> 01:20:15,788
the input V like I was you know supposed

1398
01:20:13,208 --> 01:20:18,639
to be setting it so doing the actual

1399
01:20:15,788 --> 01:20:21,578
taking the actual Z bias value and

1400
01:20:18,639 --> 01:20:24,159
dividing it so now if I take a look at

1401
01:20:21,578 --> 01:20:27,248
that and go okay now where am I getting

1402
01:20:24,158 --> 01:20:30,998
the different values from and I turn on

1403
01:20:27,248 --> 01:20:32,738
the multi sampling debug here you know

1404
01:20:30,998 --> 01:20:35,708
we see that it's happening at all of the

1405
01:20:32,738 --> 01:20:40,078
primitive edges which again is roughly

1406
01:20:35,708 --> 01:20:40,078
what we would expect that have happened

1407
01:20:43,948 --> 01:20:52,498
yeah so the only question I really have

1408
01:20:49,569 --> 01:20:52,498
here is

1409
01:20:58,970 --> 01:21:06,900
I'm trying to figure out if there's some

1410
01:21:02,250 --> 01:21:11,579
way that I can verify separately and I

1411
01:21:06,899 --> 01:21:13,109
don't know how to do this but I'm trying

1412
01:21:11,579 --> 01:21:23,279
to fear if there's some way I can verify

1413
01:21:13,109 --> 01:21:26,509
separately that along the edges of a

1414
01:21:23,279 --> 01:21:26,509
particular primitive

1415
01:21:33,560 --> 01:21:37,600
we are getting the same values

1416
01:21:51,899 --> 01:21:58,469
hmm so I do think there is something I

1417
01:21:55,779 --> 01:21:58,469
can do for that

1418
01:22:00,479 --> 01:22:10,569
so you'll notice when I'm flat on all

1419
01:22:06,369 --> 01:22:17,979
those go away which is good so if we

1420
01:22:10,569 --> 01:22:19,659
look up here so here's here's what I'm

1421
01:22:17,979 --> 01:22:21,219
going to do so I'm going to propose and

1422
01:22:19,659 --> 01:22:24,460
I don't know you can food you think of

1423
01:22:21,220 --> 01:22:26,199
this so I look up here what am i what am

1424
01:22:24,460 --> 01:22:29,859
I looking at with these dashed lines

1425
01:22:26,199 --> 01:22:31,899
right well that's the top of the tree

1426
01:22:29,859 --> 01:22:36,039
which touches the edge of the texture

1427
01:22:31,899 --> 01:22:37,899
map so it's the edge it is on the edge

1428
01:22:36,039 --> 01:22:39,850
so when the alpha value is positive

1429
01:22:37,899 --> 01:22:42,609
which is in this case we're getting

1430
01:22:39,850 --> 01:22:44,020
multiple samples there now one reason

1431
01:22:42,609 --> 01:22:46,889
we're getting multiple samples there is

1432
01:22:44,020 --> 01:22:49,750
because the background is included but I

1433
01:22:46,890 --> 01:22:53,619
can take the background out of the

1434
01:22:49,750 --> 01:22:55,810
equation right I can instead say okay

1435
01:22:53,619 --> 01:23:02,349
when we're doing our counting don't

1436
01:22:55,810 --> 01:23:09,610
count the background so inside this loop

1437
01:23:02,350 --> 01:23:15,240
when we do depth the DEF a right what I

1438
01:23:09,609 --> 01:23:18,369
can do here is say alright if depth B is

1439
01:23:15,239 --> 01:23:24,239
the background or just a is the

1440
01:23:18,369 --> 01:23:24,239
background skip it right so

1441
01:23:28,979 --> 01:23:37,899
for cutter indentation fighting me okay

1442
01:23:31,539 --> 01:23:42,729
if def a is not equal to 1.0 and depth B

1443
01:23:37,899 --> 01:23:47,259
is not equal to 1.0 right so basic

1444
01:23:42,729 --> 01:23:53,049
saying if I take backgrounds out of it

1445
01:23:47,260 --> 01:23:55,989
and they're still not equal then we will

1446
01:23:53,050 --> 01:23:57,070
consider it to be a match I'm sorry and

1447
01:23:55,989 --> 01:23:58,210
they're still equal then we'll consider

1448
01:23:57,069 --> 01:23:59,859
your match if either that's the

1449
01:23:58,210 --> 01:24:05,020
background we're just not going to count

1450
01:23:59,859 --> 01:24:08,039
it right now I don't know that I did

1451
01:24:05,020 --> 01:24:08,040
that comparison correctly

1452
01:24:22,340 --> 01:24:36,020
so that is very bizarre I must have done

1453
01:24:26,659 --> 01:24:39,199
something wrong there oh right I I guess

1454
01:24:36,020 --> 01:24:42,050
I want that the other way if either of

1455
01:24:39,199 --> 01:24:44,599
them are the background it's not unique

1456
01:24:42,050 --> 01:24:47,180
it's not a unique sample we don't care

1457
01:24:44,600 --> 01:24:50,880
about that at all right

1458
01:24:47,180 --> 01:24:52,150
I suppose that's not quite fair though

1459
01:24:50,880 --> 01:24:56,050
[Applause]

1460
01:24:52,149 --> 01:24:59,689
because that doesn't handle the case I

1461
01:24:56,050 --> 01:25:03,020
where we have something unique across

1462
01:24:59,689 --> 01:25:10,129
the Becker so I just need to get rid of

1463
01:25:03,020 --> 01:25:13,460
any sample that is no actually guess

1464
01:25:10,130 --> 01:25:16,630
that is that's right I think I am right

1465
01:25:13,460 --> 01:25:16,630
[Applause]

1466
01:25:17,859 --> 01:25:25,159
right so I need to say if either than

1467
01:25:22,789 --> 01:25:27,140
equals 1 so if islands the background or

1468
01:25:25,159 --> 01:25:28,880
they are equal to each other then this

1469
01:25:27,140 --> 01:25:31,180
isn't a unique pairing that we're going

1470
01:25:28,880 --> 01:25:31,180
to care about

1471
01:25:45,060 --> 01:25:48,200
even weirder

1472
01:26:01,840 --> 01:26:06,760
[Applause]

1473
01:26:20,979 --> 01:26:28,869
so now a theory I have taken the

1474
01:26:26,020 --> 01:26:33,490
background out of the equation

1475
01:26:28,869 --> 01:26:37,479
and what you can see here is that it did

1476
01:26:33,489 --> 01:26:39,399
eliminate those tops right so what that

1477
01:26:37,479 --> 01:26:42,329
means is that we're not getting multi

1478
01:26:39,399 --> 01:26:47,289
samples when we only have one primitive

1479
01:26:42,329 --> 01:26:50,829
right if that's what it looks like so

1480
01:26:47,289 --> 01:26:53,409
now let's see if that really is because

1481
01:26:50,829 --> 01:26:54,970
we did the same centroid thing just

1482
01:26:53,409 --> 01:26:58,750
trying to verify the best centroid thing

1483
01:26:54,970 --> 01:27:04,150
worked so here's that centroid bit the

1484
01:26:58,750 --> 01:27:06,159
input V so I'm going to come here and

1485
01:27:04,149 --> 01:27:08,829
say well our a we've got the frag V frag

1486
01:27:06,159 --> 01:27:14,340
depth all this stuff if I was to just

1487
01:27:08,829 --> 01:27:17,170
stop oops if I was just stop doing that

1488
01:27:14,340 --> 01:27:19,180
right so I'm going to I'm not going to

1489
01:27:17,170 --> 01:27:21,730
use the input C at all I'm just going to

1490
01:27:19,180 --> 01:27:26,440
use allow it to do its standard multi

1491
01:27:21,729 --> 01:27:28,899
sampling so now do I see multiple

1492
01:27:26,439 --> 01:27:32,789
samples up there because I should right

1493
01:27:28,899 --> 01:27:32,789
I'm expecting to

1494
01:27:38,619 --> 01:27:50,750
holy moly so now everything has multi

1495
01:27:44,510 --> 01:27:56,050
samples and I do still get the ones with

1496
01:27:50,750 --> 01:28:15,819
the edges all right so that you know

1497
01:27:56,050 --> 01:28:21,250
appears to be at least it appears to me

1498
01:28:15,819 --> 01:28:21,250
that that is doing what we wanted right

1499
01:28:24,488 --> 01:28:29,839
and if that's the case then I'm not sure

1500
01:28:27,920 --> 01:28:31,460
why we're not getting the anti-aliasing

1501
01:28:29,840 --> 01:28:34,219
so now we have to go figure out if that

1502
01:28:31,460 --> 01:28:36,079
if that really was the case you know

1503
01:28:34,219 --> 01:28:38,420
what am I missing here because something

1504
01:28:36,079 --> 01:28:40,448
is going wrong we don't get any blending

1505
01:28:38,420 --> 01:28:43,609
when we try it this way

1506
01:28:40,448 --> 01:28:45,259
but we should because if that primitive

1507
01:28:43,609 --> 01:28:46,908
edge you know like if those primitive

1508
01:28:45,260 --> 01:28:49,340
edges are writing the same value the

1509
01:28:46,908 --> 01:28:53,719
whole way and I guess another way I

1510
01:28:49,340 --> 01:28:55,940
could do that right is I can just focus

1511
01:28:53,719 --> 01:29:03,859
on this guy right here so let's take a

1512
01:28:55,939 --> 01:29:06,169
look right there's no you can see right

1513
01:29:03,859 --> 01:29:08,448
there there's there's absolutely only

1514
01:29:06,170 --> 01:29:12,739
one sample right there along that edge

1515
01:29:08,448 --> 01:29:15,559
and yet it is pre clearly not anti

1516
01:29:12,738 --> 01:29:18,649
aliased so if i take a print screen of s

1517
01:29:15,560 --> 01:29:21,219
guy right and i go into paint and zoom

1518
01:29:18,649 --> 01:29:21,219
on in there

1519
01:29:35,460 --> 01:29:40,109
it's pretty hard to tell maybe that

1520
01:29:37,350 --> 01:29:49,020
isn't alias there's so much blurring in

1521
01:29:40,109 --> 01:29:50,849
there it's very odd blurring you know

1522
01:29:49,020 --> 01:29:53,280
what I think that's the stretch blur

1523
01:29:50,850 --> 01:29:55,230
that's the blurring from stretching this

1524
01:29:53,279 --> 01:29:58,069
up I'm going to have to go into the

1525
01:29:55,229 --> 01:30:00,959
super slow mode that's one-to-one

1526
01:29:58,069 --> 01:30:10,948
because the the blur at the end is

1527
01:30:00,960 --> 01:30:15,600
making it so I can't really tell let's

1528
01:30:10,948 --> 01:30:18,928
see here there's going to be bad for the

1529
01:30:15,600 --> 01:30:21,469
framerate the Scotch card cannot handle

1530
01:30:18,929 --> 01:30:21,469
this at all

1531
01:30:21,590 --> 01:30:27,199
very old graphic card cannot handle high

1532
01:30:26,158 --> 01:30:30,398
resolutions

1533
01:30:27,199 --> 01:30:30,398
[Music]

1534
01:30:46,880 --> 01:30:54,060
all right so let's take a screenshot

1535
01:30:49,680 --> 01:31:05,789
there or at least I try to take a

1536
01:30:54,060 --> 01:31:08,730
screenshot there and if I seated can you

1537
01:31:05,789 --> 01:31:10,470
stop doing whatever you're doing we have

1538
01:31:08,729 --> 01:31:35,059
more than one version of Visual Studio

1539
01:31:10,470 --> 01:31:40,230
open I don't know we just did all right

1540
01:31:35,060 --> 01:31:41,910
doesn't matter anyway so let me go ahead

1541
01:31:40,229 --> 01:31:48,989
and take a look at that

1542
01:31:41,909 --> 01:31:50,639
hopefully I captured it oh great it

1543
01:31:48,989 --> 01:31:54,619
captured it with that big in the middle

1544
01:31:50,640 --> 01:31:54,619
all right let's try that one more time I

1545
01:31:55,939 --> 01:32:02,429
really got a switch to a machine with

1546
01:32:00,149 --> 01:32:08,759
the modern graphics cards is nuts trying

1547
01:32:02,430 --> 01:32:11,460
to develop on this thing we also have to

1548
01:32:08,760 --> 01:32:16,470
make our camera interpolation code not

1549
01:32:11,460 --> 01:32:18,390
the frame rate dependence you can see

1550
01:32:16,470 --> 01:32:21,590
it's oscillating the spring of the

1551
01:32:18,390 --> 01:32:21,590
camera is oscillating there

1552
01:32:36,229 --> 01:32:41,729
so theory this is one-to-one so let's

1553
01:32:39,479 --> 01:32:47,339
take a look and yeah you can see there's

1554
01:32:41,729 --> 01:32:50,339
like no blending at all so unless the

1555
01:32:47,340 --> 01:32:54,810
counter is broken we know that there's

1556
01:32:50,340 --> 01:32:58,739
only one set of depth samples there so

1557
01:32:54,810 --> 01:33:01,890
if there's only one only one depth value

1558
01:32:58,739 --> 01:33:07,769
across all the samples there so what

1559
01:33:01,890 --> 01:33:10,070
that suggests to me right is that we

1560
01:33:07,770 --> 01:33:15,420
should be able to do our primitive thing

1561
01:33:10,069 --> 01:33:17,880
properly I oh and you know what I just

1562
01:33:15,420 --> 01:33:21,659
thought of at least one reason why we're

1563
01:33:17,880 --> 01:33:23,880
not getting the smoothing there although

1564
01:33:21,659 --> 01:33:25,229
this it doesn't really help fix the

1565
01:33:23,880 --> 01:33:31,920
artefacts that we were actually trying

1566
01:33:25,229 --> 01:33:34,049
to fix so boys realized is so when we

1567
01:33:31,920 --> 01:33:35,940
take a look at this we're always going

1568
01:33:34,050 --> 01:33:38,100
to get that depth range right we're

1569
01:33:35,939 --> 01:33:40,199
going to do that that depth I'm sorry

1570
01:33:38,100 --> 01:33:41,100
we're going to get that minimum gap then

1571
01:33:40,199 --> 01:33:43,470
we have some everything has a minimum

1572
01:33:41,100 --> 01:33:44,789
depth we then need to make this be

1573
01:33:43,470 --> 01:33:46,530
something that composites with other

1574
01:33:44,789 --> 01:33:48,659
things so the fact that I was tracking

1575
01:33:46,529 --> 01:33:53,130
the used sample count is actually wrong

1576
01:33:48,659 --> 01:33:54,630
we want it to be darkened based on

1577
01:33:53,130 --> 01:33:58,739
samples that it doesn't take so the

1578
01:33:54,630 --> 01:34:03,440
alpha value gets reduced right so what

1579
01:33:58,739 --> 01:34:12,109
we actually want to do is always use

1580
01:34:03,439 --> 01:34:12,109
that always use the full sample count

1581
01:34:13,369 --> 01:34:17,849
[Applause]

1582
01:34:15,420 --> 01:34:19,529
right is what we actually want there

1583
01:34:17,850 --> 01:34:21,090
because what I was doing before is

1584
01:34:19,529 --> 01:34:22,079
saying well if we only had three samples

1585
01:34:21,090 --> 01:34:24,150
in this primitive and the rest were

1586
01:34:22,079 --> 01:34:25,170
forcing behind it well let's just forget

1587
01:34:24,149 --> 01:34:27,719
what the color was of those three

1588
01:34:25,170 --> 01:34:29,699
samples but that's defeating the whole

1589
01:34:27,720 --> 01:34:31,560
purpose of the multi sampling across the

1590
01:34:29,699 --> 01:34:32,849
edge what I wanna do is say if they only

1591
01:34:31,560 --> 01:34:36,210
have three samples and there were eight

1592
01:34:32,850 --> 01:34:39,720
sample total so I want to take 3/8 and

1593
01:34:36,210 --> 01:34:50,579
make that be the resulting color for

1594
01:34:39,720 --> 01:34:52,350
this thing right and so you can sort of

1595
01:34:50,579 --> 01:35:01,500
see that now at least doing that

1596
01:34:52,350 --> 01:35:04,020
operation but it's not summing up

1597
01:35:01,500 --> 01:35:07,369
properly and you can see that because

1598
01:35:04,020 --> 01:35:07,370
you're getting those bands in there

1599
01:35:17,170 --> 01:35:22,190
and that's a little bit more puzzling

1600
01:35:20,300 --> 01:35:24,260
because the theory you know if you got

1601
01:35:22,189 --> 01:35:26,929
three samples on one of them you should

1602
01:35:24,260 --> 01:35:29,650
have gotten sighs a samples on the other

1603
01:35:26,930 --> 01:35:32,750
one so they should add up properly right

1604
01:35:29,649 --> 01:35:36,909
but of course that only is correct if

1605
01:35:32,750 --> 01:35:36,909
the Alpha part is correct

1606
01:35:39,010 --> 01:35:46,239
and I suppose that the part that we're

1607
01:35:42,710 --> 01:35:46,239
not really dealing with here correctly

1608
01:35:54,639 --> 01:35:59,269
consider modifying the Alpha value here

1609
01:35:57,349 --> 01:36:04,869
right when the combined color comes in

1610
01:35:59,269 --> 01:36:04,869
if we're summing up the alphas

1611
01:36:30,560 --> 01:36:35,690
I still think that should probably work

1612
01:36:33,590 --> 01:36:39,850
correctly right because if we sum

1613
01:36:35,689 --> 01:36:41,929
everything up then we screw it the color

1614
01:36:39,850 --> 01:36:45,079
because the problem is we're trying to

1615
01:36:41,930 --> 01:36:47,180
produce premultiplied alpha here and I

1616
01:36:45,079 --> 01:36:49,579
guess I'm not sure this is that classic

1617
01:36:47,180 --> 01:36:52,130
problem of life gamma correction is so

1618
01:36:49,579 --> 01:36:53,659
awful it's because premultiplied alpha

1619
01:36:52,130 --> 01:36:58,880
and gamma trypsin just don't work

1620
01:36:53,659 --> 01:37:00,409
correctly together really and you get

1621
01:36:58,880 --> 01:37:02,659
into the situation where like okay so in

1622
01:37:00,409 --> 01:37:04,460
this in this case right I've got a

1623
01:37:02,659 --> 01:37:10,369
compliant color value that I'm you know

1624
01:37:04,460 --> 01:37:18,050
I'm loading out premultiplied alpha from

1625
01:37:10,369 --> 01:37:22,220
test from texture maps and such and when

1626
01:37:18,050 --> 01:37:26,329
I get those values back I'm summing all

1627
01:37:22,220 --> 01:37:28,220
of them up and so the question is at the

1628
01:37:26,329 --> 01:37:31,130
end I'm going to have a different alpha

1629
01:37:28,220 --> 01:37:34,699
value than what I started with for any

1630
01:37:31,130 --> 01:37:37,039
individual sample how do i reproduce the

1631
01:37:34,699 --> 01:37:39,979
correct premultiplied value that would

1632
01:37:37,039 --> 01:37:41,960
have been what those were if they had

1633
01:37:39,979 --> 01:37:45,679
been summed up just as regular colors

1634
01:37:41,960 --> 01:37:47,659
and then mapped back and I'm not sure

1635
01:37:45,680 --> 01:37:50,329
like in this case the in sample count

1636
01:37:47,659 --> 01:37:52,970
thing right it's going to reduce the

1637
01:37:50,329 --> 01:37:56,359
total alpha whatever it is at and the

1638
01:37:52,970 --> 01:38:03,490
colors you know is that should that just

1639
01:37:56,359 --> 01:38:03,489
work I can't quite tell

1640
01:38:22,409 --> 01:38:26,849
I mean I guess I can experiment with it

1641
01:38:24,869 --> 01:38:30,599
a little bit I could say something like

1642
01:38:26,850 --> 01:38:36,480
well when you lose the color value go

1643
01:38:30,600 --> 01:38:44,480
ahead and unpromoted alpha you know that

1644
01:38:36,479 --> 01:38:47,819
would look something like like that and

1645
01:38:44,479 --> 01:38:56,719
then when you're done so when you

1646
01:38:47,819 --> 01:38:56,719
produce the average value do it back

1647
01:39:02,380 --> 01:39:09,250
[Applause]

1648
01:39:15,998 --> 01:39:20,158
doesn't really seem to change the

1649
01:39:17,618 --> 01:39:20,158
results though

1650
01:39:27,819 --> 01:39:33,869
although you know what I just are we

1651
01:39:31,569 --> 01:39:39,880
still act did I accidentally still do

1652
01:39:33,869 --> 01:39:52,449
before I go down that road did I forget

1653
01:39:39,880 --> 01:39:53,920
to turn off the M let's go on so I don't

1654
01:39:52,449 --> 01:39:56,559
know I am not sure why we're getting

1655
01:39:53,920 --> 01:40:10,270
that I'm going to switch back here to a

1656
01:39:56,560 --> 01:40:13,680
lower resolution and I really just do

1657
01:40:10,270 --> 01:40:13,680
not know where that's coming from

1658
01:41:29,130 --> 01:41:34,720
so two things one it would be nice to

1659
01:41:32,109 --> 01:41:38,829
fix this and then see if we could get

1660
01:41:34,720 --> 01:41:43,650
any more improvement on what we were

1661
01:41:38,829 --> 01:41:46,689
doing however I would point out that

1662
01:41:43,649 --> 01:41:54,219
even if we do we still end up in the

1663
01:41:46,689 --> 01:41:58,779
same sort of problematic position where

1664
01:41:54,220 --> 01:42:03,180
we would have to depth fields executing

1665
01:41:58,779 --> 01:42:07,869
across the scene right across the two

1666
01:42:03,180 --> 01:42:10,450
triangle scene so I do also wonder here

1667
01:42:07,869 --> 01:42:12,369
whether this isn't just a just an

1668
01:42:10,449 --> 01:42:21,159
absolutely impossible task that we're

1669
01:42:12,369 --> 01:42:22,930
trying to do here right you know maybe

1670
01:42:21,159 --> 01:42:24,519
if you're doing desk feeling the only

1671
01:42:22,930 --> 01:42:26,050
way you can really smooth things is by

1672
01:42:24,520 --> 01:42:28,770
over sampling and that's what you should

1673
01:42:26,050 --> 01:42:28,770
do I don't know

1674
01:42:46,260 --> 01:42:56,760
I really don't because obviously you

1675
01:42:54,720 --> 01:42:58,650
know we turn off multi sampling all of

1676
01:42:56,760 --> 01:43:01,530
our artifacts are gone so we have a

1677
01:42:58,649 --> 01:43:03,239
really nice renderer in that case and so

1678
01:43:01,529 --> 01:43:05,099
all we want to do is smooth those edges

1679
01:43:03,239 --> 01:43:06,719
I wonder if the correct thing to do is

1680
01:43:05,100 --> 01:43:13,230
just to draw at a higher resolution and

1681
01:43:06,720 --> 01:43:15,449
down sample it right and it gets rid of

1682
01:43:13,229 --> 01:43:28,500
all that complexity I mean we could try

1683
01:43:15,449 --> 01:43:33,449
it right I think all we have to do turn

1684
01:43:28,500 --> 01:43:41,430
off the multi sampling and then Astra

1685
01:43:33,449 --> 01:43:43,199
high-resolution right there's 2x over

1686
01:43:41,430 --> 01:43:46,050
sampling it's a box filter so it's not

1687
01:43:43,199 --> 01:43:50,869
going to be great but you know we'll see

1688
01:43:46,050 --> 01:43:50,869
what does it look like right

1689
01:43:54,569 --> 01:43:58,819
so let me go ahead and take a sip print

1690
01:43:56,340 --> 01:43:58,819
screen of that

1691
01:44:14,260 --> 01:44:28,060
and there you can see some of that right

1692
01:44:18,750 --> 01:44:30,789
sampling going on there it's not great

1693
01:44:28,060 --> 01:44:33,010
smoothing I'll be honest it's kind of

1694
01:44:30,789 --> 01:44:35,829
somewhat nonsensical smoothing even I

1695
01:44:33,010 --> 01:44:38,199
don't know how its producing those

1696
01:44:35,829 --> 01:44:41,710
values this don't even look like proper

1697
01:44:38,199 --> 01:44:46,479
box filtered values to me that looks a

1698
01:44:41,710 --> 01:44:49,800
little bit wrong I would be lying if I

1699
01:44:46,479 --> 01:44:49,799
said that that looked at all correct

1700
01:44:50,850 --> 01:44:54,630
are you zoomed back out

1701
01:45:07,469 --> 01:45:13,409
because if you look at this lime what

1702
01:45:10,800 --> 01:45:15,750
you should see here is even stepping you

1703
01:45:13,409 --> 01:45:18,960
know this should be the same range of

1704
01:45:15,750 --> 01:45:20,880
color value because you go down and what

1705
01:45:18,960 --> 01:45:22,980
you're seeing instead and I can zoom

1706
01:45:20,880 --> 01:45:26,279
right in on an obvious case right here

1707
01:45:22,979 --> 01:45:27,929
is one pixel of one color one pixel of

1708
01:45:26,279 --> 01:45:30,569
another color and then the same color

1709
01:45:27,930 --> 01:45:32,340
the whole way down I guess I could

1710
01:45:30,569 --> 01:45:37,948
convince myself that that was just

1711
01:45:32,340 --> 01:45:40,739
because that's the corner so maybe

1712
01:45:37,948 --> 01:45:45,509
that's correct because you know you've

1713
01:45:40,738 --> 01:45:47,459
got right here to right here your if you

1714
01:45:45,510 --> 01:45:49,079
imagine what that looked like beforehand

1715
01:45:47,460 --> 01:45:51,779
there was an extra line in the middle

1716
01:45:49,079 --> 01:45:54,119
and so you're getting capped about yeah

1717
01:45:51,779 --> 01:45:56,960
okay yeah that's that is I guess that is

1718
01:45:54,119 --> 01:45:56,960
correct never mind

1719
01:45:57,899 --> 01:46:02,789
so that would be with 2x over sampling

1720
01:46:00,180 --> 01:46:04,140
let's try 3 X again this is going to get

1721
01:46:02,789 --> 01:46:05,219
really slow this graphics card is not

1722
01:46:04,140 --> 01:46:07,579
really good enough for what we're doing

1723
01:46:05,219 --> 01:46:07,579
here

1724
01:46:15,119 --> 01:46:19,920
ah and now I think about it that's not

1725
01:46:18,149 --> 01:46:26,429
going to help is it because when we do

1726
01:46:19,920 --> 01:46:28,079
our down sampling once you get it's not

1727
01:46:26,430 --> 01:46:29,550
it's not going to do a bit wide enough

1728
01:46:28,079 --> 01:46:33,539
filter we would have to implement our

1729
01:46:29,550 --> 01:46:36,600
own sort of process of sampling it down

1730
01:46:33,539 --> 01:46:39,180
twice so the only thing we really can do

1731
01:46:36,600 --> 01:46:45,660
is is to X because that the bilinear

1732
01:46:39,180 --> 01:46:48,119
filter will do yeah which is not great

1733
01:46:45,659 --> 01:46:49,439
so if we wanted to try the over sampling

1734
01:46:48,119 --> 01:46:55,079
approach we'd have to do something a

1735
01:46:49,439 --> 01:47:04,500
little bit more clever and so in here

1736
01:46:55,079 --> 01:47:06,689
where we're doing our let's take a look

1737
01:47:04,500 --> 01:47:15,659
here so we here where we're kind of

1738
01:47:06,689 --> 01:47:18,479
doing our final operation this is the

1739
01:47:15,659 --> 01:47:22,050
part after the DEF peel is done so it

1740
01:47:18,479 --> 01:47:24,769
does all the def peeling there we would

1741
01:47:22,050 --> 01:47:24,770
need to

1742
01:47:31,569 --> 01:47:37,029
make this final stretch be something

1743
01:47:35,319 --> 01:47:38,710
that's sort of operated in the loop so

1744
01:47:37,029 --> 01:47:39,939
we'd have to you know well wouldn't

1745
01:47:38,710 --> 01:47:41,649
really have to operate in the loop we

1746
01:47:39,939 --> 01:47:44,319
could just make a single sampler that

1747
01:47:41,649 --> 01:47:46,269
takes lots of texture samples so it news

1748
01:47:44,319 --> 01:47:51,909
that it does a down sample by a certain

1749
01:47:46,270 --> 01:47:54,270
amount and so you know rather than just

1750
01:47:51,909 --> 01:47:55,989
doing by linear filtering it could take

1751
01:47:54,270 --> 01:47:59,920
significantly more samples who have

1752
01:47:55,989 --> 01:48:02,349
wanted to he could take 16 samples right

1753
01:47:59,920 --> 01:48:04,539
it could take 16 by linear samples even

1754
01:48:02,350 --> 01:48:07,320
if you wanted to so we could make it

1755
01:48:04,539 --> 01:48:09,760
take a lot more samples if we wanted to

1756
01:48:07,319 --> 01:48:15,880
and then we could render at a higher

1757
01:48:09,760 --> 01:48:16,390
resolution unfortunately yeah on this

1758
01:48:15,880 --> 01:48:23,560
card

1759
01:48:16,390 --> 01:48:25,360
it's just going to be way too slow what

1760
01:48:23,560 --> 01:48:31,140
we could do however is run the lower

1761
01:48:25,359 --> 01:48:31,139
resolution and like for example you know

1762
01:48:33,720 --> 01:48:46,960
if we still just ran at 1920 by 1080

1763
01:48:38,460 --> 01:48:57,730
right and then down sampled - hmm a much

1764
01:48:46,960 --> 01:49:00,430
lower resolution that would work at

1765
01:48:57,729 --> 01:49:02,409
speed on this card and then people with

1766
01:49:00,430 --> 01:49:08,020
a higher-end graphics card obviously can

1767
01:49:02,409 --> 01:49:09,880
just run it 1920 by 1080 and would be

1768
01:49:08,020 --> 01:49:17,440
over sampling like 4k or something like

1769
01:49:09,880 --> 01:49:24,640
this hmm yeah so I really just don't

1770
01:49:17,439 --> 01:49:28,059
know I guess we have one more thing we

1771
01:49:24,640 --> 01:49:32,890
could try tomorrow and that is a little

1772
01:49:28,060 --> 01:49:38,440
confusing but we could try to figure out

1773
01:49:32,890 --> 01:49:40,600
some way to make it work which is we

1774
01:49:38,439 --> 01:49:44,049
could try to do something where we have

1775
01:49:40,600 --> 01:49:47,789
the multi the depth peel buffers

1776
01:49:44,050 --> 01:49:47,789
actually work in multi sampling mode

1777
01:49:47,819 --> 01:49:55,090
which maybe is something that could

1778
01:49:51,250 --> 01:50:05,199
happen I'm not really sure how that

1779
01:49:55,090 --> 01:50:07,810
would work so I don't know all right so

1780
01:50:05,199 --> 01:50:11,470
we've tried two things we've seen you

1781
01:50:07,810 --> 01:50:17,220
know a couple different results but we

1782
01:50:11,470 --> 01:50:17,220
don't really have a good answer yet I

1783
01:50:18,899 --> 01:50:35,979
guess I'll go to the Q&amp;A for now and we

1784
01:50:29,020 --> 01:50:41,460
will see we will see I don't know what's

1785
01:50:35,979 --> 01:50:41,459
the best what the best approach would be

1786
01:51:43,050 --> 01:51:49,779
let's see gee bouzouki says I can't

1787
01:51:45,970 --> 01:51:55,659
compile the code it's saying paste

1788
01:51:49,779 --> 01:51:57,099
written what is pasted in here but not

1789
01:51:55,659 --> 01:51:59,619
having support for this makes no sense

1790
01:51:57,100 --> 01:52:07,750
because they have a r9 390 which is a

1791
01:51:59,619 --> 01:52:09,189
newer card than you have you tried what

1792
01:52:07,750 --> 01:52:12,609
we did in today's stream which is

1793
01:52:09,189 --> 01:52:16,089
setting the setting the version number

1794
01:52:12,609 --> 01:52:18,099
to pound 150 instead of pound 130 have

1795
01:52:16,090 --> 01:52:21,060
you done that yet I did that on today's

1796
01:52:18,100 --> 01:52:21,060
stream I don't know if you caught that

1797
01:52:29,699 --> 01:52:33,460
for ostrich I haven't really followed

1798
01:52:31,779 --> 01:52:35,949
along with how you've implemented

1799
01:52:33,460 --> 01:52:37,300
peeling but what if you separate out 3d

1800
01:52:35,949 --> 01:52:39,970
objects and run them through a different

1801
01:52:37,300 --> 01:52:41,619
shader that doesn't do peeling well we

1802
01:52:39,970 --> 01:52:51,550
need the 3d objects to go through the

1803
01:52:41,619 --> 01:52:53,409
peeling is the only thing we're doing a

1804
01:52:51,550 --> 01:52:55,329
depth free pass without multi sampling

1805
01:52:53,409 --> 01:52:56,739
help I don't think so because that's no

1806
01:52:55,329 --> 01:52:58,720
different than just doing the multi

1807
01:52:56,739 --> 01:53:00,519
sampling and then during the resolve

1808
01:52:58,720 --> 01:53:02,260
picking one depth value because that's

1809
01:53:00,520 --> 01:53:04,540
the depth free pass would be picking one

1810
01:53:02,260 --> 01:53:06,220
depth value right it would be picking

1811
01:53:04,539 --> 01:53:07,689
the closest death values so as far as I

1812
01:53:06,220 --> 01:53:10,720
know doing a depth free pass without

1813
01:53:07,689 --> 01:53:16,229
multi sampling is the same as what we're

1814
01:53:10,720 --> 01:53:16,230
doing now we're picking diff men right

1815
01:53:24,529 --> 01:53:26,590
you

1816
01:53:28,908 --> 01:53:36,799
flying flower what you think about SSM

1817
01:53:31,369 --> 01:53:38,029
peg SSM says video compression thing in

1818
01:53:36,800 --> 01:53:42,579
your opinion sir a better way to

1819
01:53:38,029 --> 01:53:42,579
implement a video oriented program i

1820
01:53:43,149 --> 01:53:47,179
sorry that does not sound like a

1821
01:53:45,408 --> 01:53:49,779
question for me sounds like a question

1822
01:53:47,179 --> 01:53:52,489
for somebody who does video stuff

1823
01:53:49,779 --> 01:53:54,979
cheaper caleb if you want the same depth

1824
01:53:52,488 --> 01:53:56,479
for each multisample couldn't you write

1825
01:53:54,979 --> 01:53:58,579
the depth as a separate vertex shader

1826
01:53:56,479 --> 01:54:03,468
output with centered interpolation that

1827
01:53:58,579 --> 01:54:09,469
is what we did right that's that's uh

1828
01:54:03,469 --> 01:54:16,939
that's exactly what we did that's this

1829
01:54:09,469 --> 01:54:20,448
right here and it works so we can

1830
01:54:16,939 --> 01:54:28,419
actually get that the problem at least

1831
01:54:20,448 --> 01:54:28,419
from what i saw was that if I went to

1832
01:54:28,719 --> 01:54:34,069
then use that information I still end up

1833
01:54:32,300 --> 01:54:37,520
in a circumstance where when two

1834
01:54:34,069 --> 01:54:40,549
primitives abut each other they're going

1835
01:54:37,520 --> 01:54:44,270
to have different V samples across that

1836
01:54:40,550 --> 01:54:47,630
scene and I don't know really any way to

1837
01:54:44,270 --> 01:54:56,989
resolve that right like there's nothing

1838
01:54:47,630 --> 01:55:00,770
I can do about that particular thing so

1839
01:54:56,988 --> 01:55:02,779
it seems like kind of like almost to the

1840
01:55:00,770 --> 01:55:09,770
point where we've got something but I

1841
01:55:02,779 --> 01:55:13,250
can't uh I can't really figure out how I

1842
01:55:09,770 --> 01:55:16,850
would get any further along that line

1843
01:55:13,250 --> 01:55:23,510
yet so here's what's running currently

1844
01:55:16,850 --> 01:55:28,000
right and so in this case you can kind

1845
01:55:23,510 --> 01:55:28,000
of see that that well

1846
01:55:33,420 --> 01:55:40,739
you can see the situation right here

1847
01:55:36,439 --> 01:55:43,439
we're like hey all around the edges now

1848
01:55:40,739 --> 01:55:45,380
we don't get multiple desks ampuls so

1849
01:55:43,439 --> 01:55:47,939
that centroid sampling worked great

1850
01:55:45,380 --> 01:55:50,909
unfortunately at the scene between two

1851
01:55:47,939 --> 01:55:55,829
triangles you do get multiple samples

1852
01:55:50,909 --> 01:56:00,680
and that's not fixable in any way that I

1853
01:55:55,829 --> 01:56:00,680
can think of right

1854
01:56:16,260 --> 01:56:21,850
what do you think about essences unless

1855
01:56:18,609 --> 01:56:24,369
you do not want to just simply sample if

1856
01:56:21,850 --> 01:56:26,550
you want the same we do the center

1857
01:56:24,369 --> 01:56:30,220
everyone it works

1858
01:56:26,550 --> 01:56:32,739
subversion okay so this is Dee Mizuki

1859
01:56:30,220 --> 01:56:34,750
asking it's all question okay good I'm

1860
01:56:32,739 --> 01:56:37,779
glad changing Japan 150 works and yes

1861
01:56:34,750 --> 01:56:39,220
that's the version of the sampling

1862
01:56:37,779 --> 01:56:41,590
language are trying to use so which

1863
01:56:39,220 --> 01:56:43,329
version of GLSL is the pout when you put

1864
01:56:41,590 --> 01:56:45,460
version pounds something at the top of a

1865
01:56:43,329 --> 01:56:47,769
shader that's saying this is the version

1866
01:56:45,460 --> 01:56:53,529
of the sampling length of the shader

1867
01:56:47,770 --> 01:56:56,740
language I want to use and although this

1868
01:56:53,529 --> 01:56:59,380
graphics cards driver which is an older

1869
01:56:56,739 --> 01:57:03,519
ATI very old decade old at this point or

1870
01:56:59,380 --> 01:57:09,760
whatever it allows you to use sampler to

1871
01:57:03,520 --> 01:57:12,880
DMS in the actual shader in version 1 3

1872
01:57:09,760 --> 01:57:14,500
0 it's not supposed to so what happened

1873
01:57:12,880 --> 01:57:15,850
was we had had the version at 1 through

1874
01:57:14,500 --> 01:57:17,800
0 and then started using Stamper tuna

1875
01:57:15,850 --> 01:57:19,870
TMS it just led us it's not supposed to

1876
01:57:17,800 --> 01:57:21,670
so your car probably has a more

1877
01:57:19,869 --> 01:57:24,130
compliant driver which air is out in

1878
01:57:21,670 --> 01:57:25,390
that case so changing it to 1 5 0 is

1879
01:57:24,130 --> 01:57:27,670
correct because that's the shading

1880
01:57:25,390 --> 01:57:38,400
language version that actually includes

1881
01:57:27,670 --> 01:57:42,190
sampler to DMS without extensions Sergey

1882
01:57:38,399 --> 01:57:43,989
well of surged RGB oh its Sergio hey

1883
01:57:42,189 --> 01:57:45,669
Casey sorry about the cursor but could

1884
01:57:43,989 --> 01:57:47,559
you try creating a new canvas to see if

1885
01:57:45,670 --> 01:57:49,000
it still happens I missed the start of

1886
01:57:47,560 --> 01:57:50,530
the stream but people told me that it

1887
01:57:49,000 --> 01:57:54,100
only happens with welcome input is that

1888
01:57:50,529 --> 01:58:05,889
true yeah actually it does appear to be

1889
01:57:54,100 --> 01:58:08,170
true so let me show you so here's the

1890
01:58:05,890 --> 01:58:10,720
mouse I'm just drawing with the mouse

1891
01:58:08,170 --> 01:58:13,960
right now and you can see that it's

1892
01:58:10,720 --> 01:58:17,340
totally in the correct position right if

1893
01:58:13,960 --> 01:58:21,510
I draw with a cursor it's sorry with the

1894
01:58:17,340 --> 01:58:21,510
welcome it's offset

1895
01:58:23,469 --> 01:58:28,250
so I don't I mean I can try creating a

1896
01:58:26,270 --> 01:58:30,530
new camp i but it doesn't seem like it

1897
01:58:28,250 --> 01:58:34,630
has anything to do with the canvas

1898
01:58:30,529 --> 01:58:37,488
because it's just the difference between

1899
01:58:34,630 --> 01:58:43,640
mouse and there's just a bug between

1900
01:58:37,488 --> 01:58:50,899
mouse and and Wacom tablet so the Wacom

1901
01:58:43,640 --> 01:58:54,560
tablet mapping is wrong fry to where it

1902
01:58:50,899 --> 01:58:59,509
thinks the the cursors what I think is

1903
01:58:54,560 --> 01:59:02,690
happening there probably is that the

1904
01:58:59,510 --> 01:59:07,640
Wacom tablet has a higher resolution

1905
01:59:02,689 --> 01:59:09,849
than the screen in the mode that it even

1906
01:59:07,640 --> 01:59:17,840
showed that when we went to the Wacom

1907
01:59:09,850 --> 01:59:21,050
thing when we first popped over here it

1908
01:59:17,840 --> 01:59:28,369
showed this thing was like the whole

1909
01:59:21,050 --> 01:59:30,969
area right know how to get that to

1910
01:59:28,369 --> 01:59:30,969
happen again

1911
01:59:42,998 --> 01:59:46,300
so I don't really know how to make that

1912
01:59:44,649 --> 01:59:56,078
happen again to what it was but

1913
01:59:46,300 --> 01:59:57,610
hopefully if you went on the now yeah I

1914
01:59:56,078 --> 01:59:59,759
guess and of course thank that's not

1915
01:59:57,609 --> 02:00:02,348
doing now I don't so I don't really know

1916
01:59:59,760 --> 02:00:04,210
yeah I'm sorry I wish I could give more

1917
02:00:02,349 --> 02:00:06,998
information about this because the new

1918
02:00:04,210 --> 02:00:08,559
version feels really awesome actually so

1919
02:00:06,998 --> 02:00:11,469
I would really love to get it working

1920
02:00:08,559 --> 02:00:16,779
properly and that seems to be the only

1921
02:00:11,469 --> 02:00:19,210
thing here and I don't remember it being

1922
02:00:16,779 --> 02:00:21,460
it didn't seem to fix it when we did we

1923
02:00:19,210 --> 02:00:22,899
did do a new canvas when we first tested

1924
02:00:21,460 --> 02:00:25,569
it I don't remember that having anything

1925
02:00:22,899 --> 02:00:31,089
to do with it but yeah the the drawing

1926
02:00:25,569 --> 02:00:33,308
feels really snappy now so I feel like

1927
02:00:31,090 --> 02:00:39,010
there's just something wrong with the

1928
02:00:33,309 --> 02:00:44,229
mapping and everything else is pretty

1929
02:00:39,010 --> 02:00:45,610
great actually this is also happening I

1930
02:00:44,229 --> 02:00:48,630
don't know if you can see this on the

1931
02:00:45,609 --> 02:00:52,359
screen but when you scroll around it

1932
02:00:48,630 --> 02:00:54,248
jumps weirdly and I don't any kind of

1933
02:00:52,359 --> 02:00:57,098
field like that might be the same kind

1934
02:00:54,248 --> 02:00:59,319
of bug because that offset again is like

1935
02:00:57,099 --> 02:01:01,809
maybe fighting it's like using two

1936
02:00:59,319 --> 02:01:05,288
different offsets occurs right it looks

1937
02:01:01,809 --> 02:01:11,920
like the exact same bug almost it's

1938
02:01:05,288 --> 02:01:12,939
offset by a similar amount right and the

1939
02:01:11,920 --> 02:01:15,908
other thing I would point out is the

1940
02:01:12,939 --> 02:01:18,908
offset changes so up here the offset is

1941
02:01:15,908 --> 02:01:21,788
very close so it's correct at the upper

1942
02:01:18,908 --> 02:01:24,759
corner and gets less correct as you get

1943
02:01:21,788 --> 02:01:29,170
further down right so it says if it's

1944
02:01:24,760 --> 02:01:32,469
taking this region of the cursor and

1945
02:01:29,170 --> 02:01:36,819
mapping it to the whole screen so it's

1946
02:01:32,469 --> 02:01:39,069
deadly just like a scale it's like some

1947
02:01:36,819 --> 02:01:41,279
kind of a rectangular scale problem like

1948
02:01:39,069 --> 02:01:42,759
the Wacom tablet is giving you back

1949
02:01:41,279 --> 02:01:45,639
something that's in a different

1950
02:01:42,760 --> 02:01:48,670
coordinate space and somewhere it's also

1951
02:01:45,639 --> 02:01:51,550
probably giving you back some scaling

1952
02:01:48,670 --> 02:01:56,279
factor or rectangular scale rectangular

1953
02:01:51,550 --> 02:01:58,230
remapping that you have to apply I guess

1954
02:01:56,279 --> 02:02:00,269
right and that's not getting applied

1955
02:01:58,229 --> 02:02:01,679
properly but I have no idea since I

1956
02:02:00,270 --> 02:02:03,360
don't know very much about the Wacom

1957
02:02:01,680 --> 02:02:06,210
drivers I have no idea where that data

1958
02:02:03,359 --> 02:02:09,589
would be or what the likely culprits but

1959
02:02:06,210 --> 02:02:09,590
something like that is happening

1960
02:02:39,289 --> 02:02:46,199
Nicholls hi Casey do you have a few more

1961
02:02:42,750 --> 02:02:48,720
good scientific programming papers to

1962
02:02:46,199 --> 02:02:52,019
get me started on a good habit of

1963
02:02:48,720 --> 02:02:56,039
reading long stuff for coding I do

1964
02:02:52,020 --> 02:02:58,350
remember those from papers I loved in

1965
02:02:56,039 --> 02:03:12,960
the rasterization bridge one maybe there

1966
02:02:58,350 --> 02:03:15,180
are some lighter reads to begin with so

1967
02:03:12,960 --> 02:03:20,609
I'm not sure one here's one that I might

1968
02:03:15,180 --> 02:03:22,140
recommend I so and this is will be

1969
02:03:20,609 --> 02:03:24,000
relevant to handmade hero because when

1970
02:03:22,140 --> 02:03:31,170
we when we do a real random number

1971
02:03:24,000 --> 02:03:49,340
generator we will care about this so one

1972
02:03:31,170 --> 02:03:49,340
thing is this I think this paper is

1973
02:03:50,090 --> 02:03:56,940
probably an accessible one um sometimes

1974
02:03:55,020 --> 02:03:59,910
it's hard to know how accessible

1975
02:03:56,939 --> 02:04:01,500
something is I guess when I read it

1976
02:03:59,909 --> 02:04:05,340
originally I wasn't a sort of looking at

1977
02:04:01,500 --> 02:04:08,640
that exactly but this is Melissa

1978
02:04:05,340 --> 02:04:12,119
O'Neill's paper on / muted conventional

1979
02:04:08,640 --> 02:04:13,260
generators I think that's what that

1980
02:04:12,119 --> 02:04:15,449
stands for

1981
02:04:13,260 --> 02:04:17,310
I always forget the snappy acronym

1982
02:04:15,449 --> 02:04:24,599
Tuesday's their pet is what they're

1983
02:04:17,310 --> 02:04:26,970
called right permuting where is it well

1984
02:04:24,600 --> 02:04:28,710
anyway it's your paper on taking like

1985
02:04:26,970 --> 02:04:34,710
linear congruential generators and other

1986
02:04:28,710 --> 02:04:37,380
sorts of like low quality random number

1987
02:04:34,710 --> 02:04:38,970
generators and turning them into really

1988
02:04:37,380 --> 02:04:41,730
high quality random number generators

1989
02:04:38,970 --> 02:04:43,650
with very easy operations and it's a

1990
02:04:41,729 --> 02:04:46,429
pretty great paper because it's like a

1991
02:04:43,649 --> 02:04:50,210
very good way to generate random numbers

1992
02:04:46,430 --> 02:04:54,650
for games because it's extremely fast

1993
02:04:50,210 --> 02:04:58,010
and it's very very random for lack of a

1994
02:04:54,649 --> 02:05:00,349
better term compared to other things so

1995
02:04:58,010 --> 02:05:01,970
you know we'd be doing this on handmade

1996
02:05:00,350 --> 02:05:03,380
here eventually for our random number

1997
02:05:01,970 --> 02:05:06,590
generator

1998
02:05:03,380 --> 02:05:10,010
I feel like this paper because fairly

1999
02:05:06,590 --> 02:05:13,810
long it's 46 page paper she took the

2000
02:05:10,010 --> 02:05:15,440
time to actually describe everything in

2001
02:05:13,810 --> 02:05:19,640
accessible terms

2002
02:05:15,439 --> 02:05:21,229
she doesn't slam you with a bunch of

2003
02:05:19,640 --> 02:05:23,720
equations and then just let you figure

2004
02:05:21,229 --> 02:05:25,759
it out like she's got a lot of text in

2005
02:05:23,720 --> 02:05:28,100
here that's just like let me explain to

2006
02:05:25,760 --> 02:05:30,829
you what I'm talking about which is

2007
02:05:28,100 --> 02:05:32,980
great and so I feel like this would be a

2008
02:05:30,829 --> 02:05:36,800
pretty good paper it's a pretty obvious

2009
02:05:32,979 --> 02:05:38,750
topic for most people like random number

2010
02:05:36,800 --> 02:05:43,570
generation is very easy to understand

2011
02:05:38,750 --> 02:05:45,800
the concept of at a base level right and

2012
02:05:43,569 --> 02:05:48,799
all of the stuff she's doing she

2013
02:05:45,800 --> 02:05:52,550
explains and pretty good like English

2014
02:05:48,800 --> 02:05:55,070
basic English descriptions before giving

2015
02:05:52,550 --> 02:05:57,860
you anything specifically mathematical

2016
02:05:55,069 --> 02:06:01,460
about it and you know includes plenty of

2017
02:05:57,859 --> 02:06:03,889
diagrams math sort of stuff it also like

2018
02:06:01,460 --> 02:06:06,170
I said happens to be a great paper like

2019
02:06:03,890 --> 02:06:08,510
just the actual technique happens to be

2020
02:06:06,170 --> 02:06:14,869
great so feel like this would probably

2021
02:06:08,510 --> 02:06:19,550
be a good one to look at um that'd just

2022
02:06:14,869 --> 02:06:21,470
be my guest you know and it's got you

2023
02:06:19,550 --> 02:06:23,270
know code in it right which is another

2024
02:06:21,470 --> 02:06:25,940
nice thing if you're trying to be more

2025
02:06:23,270 --> 02:06:29,840
accessible you know she's just like

2026
02:06:25,939 --> 02:06:31,339
here's the you know here's the actual

2027
02:06:29,840 --> 02:06:34,340
piece of code and talking about right

2028
02:06:31,340 --> 02:06:37,250
instead of like obfuscating it behind a

2029
02:06:34,340 --> 02:06:39,130
bunch of equations which she could have

2030
02:06:37,250 --> 02:06:40,939
done right and I mean then she has

2031
02:06:39,130 --> 02:06:45,829
equations in here and she could have

2032
02:06:40,939 --> 02:06:47,210
left it at that but she doesn't right so

2033
02:06:45,829 --> 02:06:48,829
I would say that might be a good one to

2034
02:06:47,210 --> 02:06:50,689
start with like I said it's long and

2035
02:06:48,829 --> 02:06:53,059
detailed so you know if you're willing

2036
02:06:50,689 --> 02:06:55,250
to put the time in it's explained very

2037
02:06:53,060 --> 02:06:58,940
meticulously there's not a lot of hand

2038
02:06:55,250 --> 02:07:00,140
waving or you know go figure this out

2039
02:06:58,939 --> 02:07:04,460
yourself from these equations it

2040
02:07:00,140 --> 02:07:07,490
actually talked says what it says

2041
02:07:04,460 --> 02:07:09,189
it's a really good technique so it's an

2042
02:07:07,489 --> 02:07:16,460
interesting thing to read about and

2043
02:07:09,189 --> 02:07:18,079
useful and it is about a topic that you

2044
02:07:16,460 --> 02:07:20,329
know you should be already familiar with

2045
02:07:18,079 --> 02:07:21,710
so you're not coming in cold so I would

2046
02:07:20,329 --> 02:07:24,640
say maybe that's a really good one to

2047
02:07:21,710 --> 02:07:24,640
start with I don't know

2048
02:07:43,519 --> 02:07:48,769
oh and again I guess I should well you

2049
02:07:47,118 --> 02:07:53,268
saw me how you searched for it

2050
02:07:48,769 --> 02:07:56,088
type in PSG's space O'Neill and you'll

2051
02:07:53,269 --> 02:07:58,489
get you know her homepage or the paper

2052
02:07:56,088 --> 02:08:00,859
or both on the front page of the Google

2053
02:07:58,488 --> 02:08:08,628
hit so that should be it's easy to find

2054
02:08:00,859 --> 02:08:12,439
it that paper house 1955 coming longtime

2055
02:08:08,628 --> 02:08:17,328
no news uh we're still just not quite

2056
02:08:12,439 --> 02:08:23,149
ready to release press stuff yet we've

2057
02:08:17,328 --> 02:08:25,009
been working on it but we yet it's it's

2058
02:08:23,149 --> 02:08:32,599
a little it takes a long time we have

2059
02:08:25,010 --> 02:08:35,958
one programmer for a very ambitious

2060
02:08:32,599 --> 02:08:37,279
project like this so we're hoping that

2061
02:08:35,958 --> 02:08:42,010
stuff up pretty soon

2062
02:08:37,279 --> 02:08:44,239
but it's still a little bit off so

2063
02:08:42,010 --> 02:08:47,449
shouldn't be too long I guess it's what

2064
02:08:44,238 --> 02:08:50,058
I'd say we probably will release some

2065
02:08:47,448 --> 02:08:55,158
screenshots first is what I'm guessing

2066
02:08:50,059 --> 02:08:57,588
but you know we'll see if thread

2067
02:08:55,158 --> 02:09:00,378
behavior is considered to be completely

2068
02:08:57,588 --> 02:09:03,288
random can we leverage it to our random

2069
02:09:00,378 --> 02:09:06,139
number generator um

2070
02:09:03,288 --> 02:09:14,139
thread behavior is not completely random

2071
02:09:06,139 --> 02:09:17,628
I don't really feel like that is a

2072
02:09:14,139 --> 02:09:19,998
reasonable thing to say

2073
02:09:17,628 --> 02:09:21,798
I think thread behavior goes through

2074
02:09:19,998 --> 02:09:23,418
lots of different permutations of the

2075
02:09:21,798 --> 02:09:26,059
order in which things can happen but I

2076
02:09:23,418 --> 02:09:29,809
really don't find it random necessarily

2077
02:09:26,059 --> 02:09:31,760
I mean at the bottom line windows

2078
02:09:29,809 --> 02:09:35,088
scheduler happens on regular interval

2079
02:09:31,760 --> 02:09:37,609
updates so I just don't know that that's

2080
02:09:35,088 --> 02:09:42,109
a good source of entropy if you're

2081
02:09:37,609 --> 02:09:44,088
looking for a source of entropy for non

2082
02:09:42,109 --> 02:09:48,619
cryptographic purposes you know there's

2083
02:09:44,088 --> 02:09:51,948
one built into your processor so you

2084
02:09:48,618 --> 02:09:55,088
know that's going to be easily as good

2085
02:09:51,948 --> 02:09:55,088
as thread behavior

2086
02:09:55,170 --> 02:10:09,609
remember that is not what we want there

2087
02:09:59,890 --> 02:10:15,369
I don't remember the mnemonic for it

2088
02:10:09,609 --> 02:10:18,819
already Rand that's what it is um so you

2089
02:10:15,369 --> 02:10:22,569
know if you really want some kind of

2090
02:10:18,819 --> 02:10:29,649
hardware randomness RT R and is probably

2091
02:10:22,569 --> 02:10:33,460
what you want it's basically like a you

2092
02:10:29,649 --> 02:10:35,889
know nominally cryptographically secure

2093
02:10:33,460 --> 02:10:37,210
random seed you could use unfortunately

2094
02:10:35,890 --> 02:10:39,010
it's probably not cryptographically

2095
02:10:37,210 --> 02:10:41,730
secure like there's probably like you

2096
02:10:39,010 --> 02:10:45,489
know the NSA backdoor in it or whatever

2097
02:10:41,729 --> 02:10:47,229
but we don't care about that in a game

2098
02:10:45,489 --> 02:10:48,909
right we don't care if the NSA can

2099
02:10:47,229 --> 02:10:50,979
predict what the random you know we

2100
02:10:48,909 --> 02:10:52,930
don't know we don't care if the NSA is

2101
02:10:50,979 --> 02:10:55,299
really good at binding of issac because

2102
02:10:52,930 --> 02:10:58,750
they can now predict like you know which

2103
02:10:55,300 --> 02:11:02,070
item drops you're going to get so you

2104
02:10:58,750 --> 02:11:05,770
know if you really just wanted Hardware

2105
02:11:02,069 --> 02:11:08,739
you could do it this way and that's

2106
02:11:05,770 --> 02:11:10,270
probably a lot more sane than trying to

2107
02:11:08,739 --> 02:11:12,039
use some kind of thread behavior to do

2108
02:11:10,270 --> 02:11:13,810
it which I think you've run into a lot

2109
02:11:12,039 --> 02:11:16,170
of problems with because it's not so

2110
02:11:13,810 --> 02:11:16,170
random

2111
02:11:32,109 --> 02:11:37,300
Cubert Caleb isn't PCG less favorable

2112
02:11:34,988 --> 02:11:39,638
than something like X or shift for games

2113
02:11:37,300 --> 02:11:44,050
because the stepping function can't be

2114
02:11:39,639 --> 02:11:45,248
sse optimized um well like I said it

2115
02:11:44,050 --> 02:11:45,849
depends on exactly what you're doing

2116
02:11:45,248 --> 02:11:51,038
with it

2117
02:11:45,849 --> 02:11:55,300
but PCG an extra shift PPG is just an

2118
02:11:51,038 --> 02:11:58,688
additional step on X or shift right so

2119
02:11:55,300 --> 02:12:02,378
if you just build your game with X or

2120
02:11:58,689 --> 02:12:09,369
shift and you have parts where you want

2121
02:12:02,378 --> 02:12:13,208
to have better random numbers right

2122
02:12:09,368 --> 02:12:14,918
which I would argue world Jen is you

2123
02:12:13,208 --> 02:12:17,948
know if particles maybe we don't care an

2124
02:12:14,918 --> 02:12:19,779
X or shift is fine or whatever right but

2125
02:12:17,948 --> 02:12:22,089
if you have a situation where you want

2126
02:12:19,779 --> 02:12:23,259
to do like world generation like you

2127
02:12:22,090 --> 02:12:25,090
know when you're actually doing the

2128
02:12:23,260 --> 02:12:26,168
rogue alike parts of your game you want

2129
02:12:25,090 --> 02:12:28,418
those random numbers to be higher

2130
02:12:26,168 --> 02:12:32,648
quality and I doubt you care how SSE

2131
02:12:28,418 --> 02:12:34,448
optimizable they are right so if you

2132
02:12:32,649 --> 02:12:36,760
find that X or shift with the

2133
02:12:34,448 --> 02:12:38,378
permutation step which is what PCG is

2134
02:12:36,760 --> 02:12:40,539
right PCG just extra shift to the

2135
02:12:38,378 --> 02:12:44,260
permutation step if you find that for

2136
02:12:40,538 --> 02:12:46,628
some reason the permutation step is too

2137
02:12:44,260 --> 02:12:50,260
hard for you to optimize then you know

2138
02:12:46,628 --> 02:12:51,908
you can just not do that in the few

2139
02:12:50,260 --> 02:12:54,010
cases in the game where you're really

2140
02:12:51,908 --> 02:12:56,108
performance bottlenecking on your random

2141
02:12:54,010 --> 02:12:57,760
number generator but the world

2142
02:12:56,109 --> 02:13:03,780
generation part of your code is probably

2143
02:12:57,760 --> 02:13:03,780
not bad right what I don't know is

2144
02:13:04,590 --> 02:13:15,309
having not tried to do an SSE optimized

2145
02:13:08,260 --> 02:13:17,579
version of PCG where is that permutation

2146
02:13:15,309 --> 02:13:17,579
step

2147
02:13:27,840 --> 02:13:33,389
sorry I don't really remember where in

2148
02:13:29,849 --> 02:13:35,069
this paper the XOR shift+ modulation

2149
02:13:33,389 --> 02:13:39,650
step is I think I already passed and

2150
02:13:35,069 --> 02:13:39,649
unfortunately no here it's right here

2151
02:13:55,130 --> 02:14:00,779
so I guess the first thing I would ask

2152
02:13:57,689 --> 02:14:04,909
is what is the inefficient part of this

2153
02:14:00,779 --> 02:14:04,909
as far as SSE is concerned

2154
02:14:25,880 --> 02:14:31,670
is it because it's a variable is it

2155
02:14:29,029 --> 02:14:36,469
because it's a shift I guess the problem

2156
02:14:31,670 --> 02:14:48,710
is that you can't in like sse2 you need

2157
02:14:36,469 --> 02:14:51,408
the shift to be in a immediate it has to

2158
02:14:48,710 --> 02:14:54,130
be a fixed value is that the part that

2159
02:14:51,408 --> 02:14:54,129
you're concerned about

2160
02:15:08,689 --> 02:15:15,229
the 64-bit ad I don't know how hard that

2161
02:15:11,510 --> 02:15:22,579
part would be I don't know I did did you

2162
02:15:15,229 --> 02:15:29,209
look at the 32-bit I thought there was a

2163
02:15:22,579 --> 02:15:33,250
32-bit state one as well or maybe

2164
02:15:29,210 --> 02:15:33,250
there's only 64 64

2165
02:16:15,179 --> 02:16:28,469
so here's the thing she doesn't list the

2166
02:16:18,869 --> 02:16:31,469
32-bit one here but the 32-bit output

2167
02:16:28,469 --> 02:16:34,110
and state one would not have a 32-bit

2168
02:16:31,469 --> 02:16:36,210
state vector so it would only be the

2169
02:16:34,110 --> 02:16:38,880
variable length shift that would be the

2170
02:16:36,209 --> 02:16:44,789
problem but I do agree that the variable

2171
02:16:38,879 --> 02:16:48,529
length shift is a problem since it took

2172
02:16:44,790 --> 02:16:48,530
Intel forever to add that in

2173
02:17:08,429 --> 02:17:17,530
let's see Tec how come there are

2174
02:17:15,129 --> 02:17:19,268
different V values on the diagonal on

2175
02:17:17,530 --> 02:17:22,540
the same sprite it's a tan epsilon issue

2176
02:17:19,269 --> 02:17:25,300
or do they miss something it's not an

2177
02:17:22,540 --> 02:17:27,130
epsilon issue that's just correct right

2178
02:17:25,299 --> 02:17:28,509
and that's why it's a problem that's why

2179
02:17:27,129 --> 02:17:30,909
I was saying that's a problem I'm not

2180
02:17:28,510 --> 02:17:33,519
sure how you get around it can just not

2181
02:17:30,909 --> 02:17:36,399
a bug or a weird like floating point

2182
02:17:33,519 --> 02:17:38,950
inconsistency it's just correct when you

2183
02:17:36,399 --> 02:17:43,539
have multiple samples from a sprite

2184
02:17:38,950 --> 02:17:47,110
whose V value is changing along the

2185
02:17:43,540 --> 02:17:50,050
diagonal right the only reason we're not

2186
02:17:47,110 --> 02:17:52,389
getting different Z values per sample

2187
02:17:50,049 --> 02:17:55,000
inside the interior of the sprite is

2188
02:17:52,388 --> 02:17:56,619
because we did that centroid to force

2189
02:17:55,000 --> 02:17:58,120
them all to be the same but otherwise

2190
02:17:56,620 --> 02:18:00,490
they would vary because that sprite

2191
02:17:58,120 --> 02:18:03,969
member has different Z values as it gets

2192
02:18:00,489 --> 02:18:05,649
taller as it goes upward it gets higher

2193
02:18:03,968 --> 02:18:08,619
and higher zero closer and closer to

2194
02:18:05,649 --> 02:18:11,949
values will actually be lower Z values

2195
02:18:08,620 --> 02:18:13,870
but yeah so the problem is multi

2196
02:18:11,950 --> 02:18:15,429
sampling kicks in when you're on the

2197
02:18:13,870 --> 02:18:17,290
edge of a primitive and of course that

2198
02:18:15,429 --> 02:18:19,690
diagonal is the edge or primitive if the

2199
02:18:17,290 --> 02:18:21,429
edges of the two triangles and since

2200
02:18:19,690 --> 02:18:25,899
each triangle is covering different

2201
02:18:21,429 --> 02:18:28,179
samples those the actual sample value

2202
02:18:25,899 --> 02:18:31,058
there is just what one of the samples

2203
02:18:28,179 --> 02:18:32,590
right and if they don't both pick the

2204
02:18:31,058 --> 02:18:36,849
same sample then they're going to pick

2205
02:18:32,590 --> 02:18:40,329
different Z values right and I don't

2206
02:18:36,849 --> 02:18:42,460
know that you can ever force like I

2207
02:18:40,329 --> 02:18:45,489
don't know that there's any kind of

2208
02:18:42,459 --> 02:18:48,098
graphics card magic to force it to do

2209
02:18:45,489 --> 02:18:50,079
something other than that you know you

2210
02:18:48,099 --> 02:18:53,370
would need time that forces it to pick

2211
02:18:50,079 --> 02:18:55,690
sample zero and always use sample zeros

2212
02:18:53,370 --> 02:18:58,260
location which maybe you could do

2213
02:18:55,690 --> 02:18:58,260
somehow

2214
02:19:01,879 --> 02:19:06,518
I don't know

2215
02:19:07,218 --> 02:19:11,509
but it's a problem so we'll have to

2216
02:19:10,189 --> 02:19:13,039
think a little bit about what we want

2217
02:19:11,510 --> 02:19:15,949
our solution to be to that or just move

2218
02:19:13,039 --> 02:19:19,880
on and leave it because it just it's you

2219
02:19:15,949 --> 02:19:21,828
know we now know that like our non multi

2220
02:19:19,879 --> 02:19:24,379
sampled version is what we want so we

2221
02:19:21,828 --> 02:19:26,859
could just move on and say look we'll

2222
02:19:24,379 --> 02:19:30,708
leave it to the saucy graphics

2223
02:19:26,859 --> 02:19:33,439
gentleman to tell us someday what the

2224
02:19:30,709 --> 02:19:35,630
right way is to integrate multi sampling

2225
02:19:33,439 --> 02:19:37,880
into this pipeline are not necessarily

2226
02:19:35,629 --> 02:19:42,920
multi sampling but some sort of edge

2227
02:19:37,879 --> 02:19:43,908
smoothing and we'll just punt for now

2228
02:19:42,920 --> 02:19:46,328
because it's not going to affect the

2229
02:19:43,908 --> 02:19:49,129
rest of the game it's an option right

2230
02:19:46,328 --> 02:19:51,738
it's an optional thing you turn on and

2231
02:19:49,129 --> 02:20:00,170
so we can just make that be something

2232
02:19:51,738 --> 02:20:01,998
that we punt for you know for later all

2233
02:20:00,170 --> 02:20:06,039
right so I'm going to I'm going to wrap

2234
02:20:01,998 --> 02:20:06,039
it up already bit over time here

2235
02:20:24,529 --> 02:20:31,260
all right so let me close this up thank

2236
02:20:29,670 --> 02:20:32,488
you for joining me for an episode of

2237
02:20:31,260 --> 02:20:34,500
hand made here oh it's my pleasure

2238
02:20:32,488 --> 02:20:35,879
coding with you as always if you would

2239
02:20:34,500 --> 02:20:37,318
like to follow the series at home you

2240
02:20:35,879 --> 02:20:39,389
can always peer to the game on handmade

2241
02:20:37,318 --> 02:20:42,059
hero org and it comes with the source

2242
02:20:39,389 --> 02:20:43,769
code so you can play around with it at

2243
02:20:42,059 --> 02:20:45,389
home we also have forms that you can go

2244
02:20:43,770 --> 02:20:47,100
to if you want to ask questions the

2245
02:20:45,389 --> 02:20:48,898
patreon page if you want support the

2246
02:20:47,100 --> 02:20:50,700
video series a schedule bot tweets

2247
02:20:48,898 --> 02:20:53,608
schedule at you so you know we're going

2248
02:20:50,700 --> 02:20:56,220
to be live and an episode guide where

2249
02:20:53,609 --> 02:20:57,930
you can find past episodes with a great

2250
02:20:56,219 --> 02:21:00,329
annotation search feature right now -

2251
02:20:57,930 --> 02:21:03,180
that has recently be added that's

2252
02:21:00,329 --> 02:21:05,549
awesome so that's a great place to go

2253
02:21:03,180 --> 02:21:07,350
check for more information that's it for

2254
02:21:05,549 --> 02:21:11,969
today I'll be back here tomorrow at 12

2255
02:21:07,350 --> 02:21:14,068
so so noon Pacific Daylight Time hopes

2256
02:21:11,969 --> 02:21:15,659
different back here for that will either

2257
02:21:14,068 --> 02:21:18,659
decide to pump the multi sampling for

2258
02:21:15,659 --> 02:21:20,488
now or if I happen to have some other

2259
02:21:18,659 --> 02:21:21,840
idea want to try we'll try that idea

2260
02:21:20,488 --> 02:21:24,629
so we'll either move on or we'll try

2261
02:21:21,840 --> 02:21:26,549
some other idea we'll see what happens

2262
02:21:24,629 --> 02:21:28,259
but otherwise pretty happy with the

2263
02:21:26,549 --> 02:21:31,228
renderer the Deaf doing part works great

2264
02:21:28,260 --> 02:21:32,790
so it's really just that that polygon

2265
02:21:31,228 --> 02:21:34,858
edge smoothing is about the only thing

2266
02:21:32,790 --> 02:21:37,620
that I think we really have to worry

2267
02:21:34,859 --> 02:21:39,238
about it all all right soaps the air

2268
02:21:37,620 --> 02:21:41,100
from back there tomorrow till then half

2269
02:21:39,238 --> 02:21:43,939
of programming I'll see everyone on the

2270
02:21:41,100 --> 02:21:43,939
Internet take it easy everybody

