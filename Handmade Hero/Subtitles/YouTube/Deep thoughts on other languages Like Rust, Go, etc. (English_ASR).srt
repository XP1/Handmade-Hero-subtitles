1
00:00:01,610 --> 00:00:05,640
yet rust is I mean rust is probably a

2
00:00:04,290 --> 00:00:07,859
fine language but you know it's not as

3
00:00:05,639 --> 00:00:15,419
good as iron or iron ore is a way better

4
00:00:07,859 --> 00:00:18,500
language also the the zinc oxide

5
00:00:15,419 --> 00:00:21,028
language is very good

6
00:00:18,500 --> 00:00:23,219
dihydrogen monoxide is one of my

7
00:00:21,028 --> 00:00:27,329
favorite languages it's got a ton of

8
00:00:23,219 --> 00:00:28,829
good stuff in it you know cuz rust has

9
00:00:27,329 --> 00:00:34,229
the Baro checker which people like to

10
00:00:28,829 --> 00:00:36,689
talk about but the but zinc oxide is a

11
00:00:34,229 --> 00:00:38,640
way better language and the Baro checker

12
00:00:36,689 --> 00:00:41,968
has a lot of limitations zinc oxide has

13
00:00:38,640 --> 00:00:44,609
the theft felice feature the thepolice

14
00:00:41,969 --> 00:00:49,590
is like way better than the borrowed

15
00:00:44,609 --> 00:00:52,350
checker and and similarly like like the

16
00:00:49,590 --> 00:00:54,539
garbage collection features are like

17
00:00:52,350 --> 00:00:57,500
like goes garbage collection is terrible

18
00:00:54,539 --> 00:00:59,879
whereas zinc oxide has actually

19
00:00:57,500 --> 00:01:03,359
recycling and composting it has memory

20
00:00:59,878 --> 00:01:04,948
composting and memory composting is like

21
00:01:03,359 --> 00:01:06,900
way more powerful than garbage garbage

22
00:01:04,948 --> 00:01:08,519
collection right because one of the

23
00:01:06,900 --> 00:01:09,810
problems that you get in in languages

24
00:01:08,519 --> 00:01:12,769
like NGO that focus on garbage

25
00:01:09,810 --> 00:01:16,259
collection is that eventually there's

26
00:01:12,769 --> 00:01:17,548
you run out of raw materials right so

27
00:01:16,259 --> 00:01:19,340
you're collecting the garbage second

28
00:01:17,549 --> 00:01:23,610
garbage check the garbage putting it in

29
00:01:19,340 --> 00:01:25,259
into the landfill segment and then

30
00:01:23,609 --> 00:01:29,129
eventually you know either you run out

31
00:01:25,259 --> 00:01:31,170
of space in a landfill segment or you

32
00:01:29,129 --> 00:01:33,298
end up in a situation where you just

33
00:01:31,170 --> 00:01:38,879
don't have any raw materials anymore at

34
00:01:33,299 --> 00:01:40,530
all right so you know in a language like

35
00:01:38,879 --> 00:01:42,089
go all the memory has to come from the

36
00:01:40,530 --> 00:01:46,469
memory garden the memory gardens planted

37
00:01:42,090 --> 00:01:49,290
at sort of time and after you harvest

38
00:01:46,469 --> 00:01:52,618
all of the memory in the memory garden

39
00:01:49,290 --> 00:01:54,240
and your garbage collector has collected

40
00:01:52,618 --> 00:01:57,420
all of that used memory and thrown it

41
00:01:54,239 --> 00:01:59,519
away in the landfill segment that's it

42
00:01:57,420 --> 00:02:01,829
right I mean the program stops

43
00:01:59,519 --> 00:02:03,989
I mean basically not not to mention all

44
00:02:01,828 --> 00:02:05,609
the health problems and so one of the

45
00:02:03,989 --> 00:02:10,049
things about zinc oxide which makes it

46
00:02:05,609 --> 00:02:11,939
far superior or also I I don't know if

47
00:02:10,050 --> 00:02:13,860
you guys would look at stop Lang stop

48
00:02:11,939 --> 00:02:15,449
Lang is is kind of let go but

49
00:02:13,860 --> 00:02:17,780
with composting with memory composting

50
00:02:15,449 --> 00:02:22,560
right because they recognized the fact

51
00:02:17,780 --> 00:02:25,460
that you know you you have this sort of

52
00:02:22,560 --> 00:02:28,710
inherent problem with garbage collection

53
00:02:25,460 --> 00:02:30,599
where all of the code just just ends up

54
00:02:28,710 --> 00:02:31,830
in a landfill and there's you know all

55
00:02:30,599 --> 00:02:33,090
of all of that memory descends from the

56
00:02:31,830 --> 00:02:33,840
landfill after it's used and it's a

57
00:02:33,090 --> 00:02:36,599
really big problem

58
00:02:33,840 --> 00:02:37,920
so stop laying but also zinc oxide

59
00:02:36,599 --> 00:02:40,639
because zinc oxide is really like way

60
00:02:37,919 --> 00:02:42,929
better right

61
00:02:40,639 --> 00:02:48,539
stop Lange was kind of just only

62
00:02:42,930 --> 00:02:50,010
internal to fugle and you know they sort

63
00:02:48,539 --> 00:02:53,099
of have it out there but it's not really

64
00:02:50,009 --> 00:02:54,599
where as zinc oxide was more of like an

65
00:02:53,099 --> 00:02:56,069
open language took morphemic from the

66
00:02:54,599 --> 00:02:57,090
academic community we all know how good

67
00:02:56,069 --> 00:02:58,859
the academic community is of sign

68
00:02:57,090 --> 00:03:00,330
language is very good the fact that they

69
00:02:58,860 --> 00:03:02,270
never write any code Justin you know

70
00:03:00,330 --> 00:03:05,940
shouldn't shouldn't be held against him

71
00:03:02,270 --> 00:03:07,230
so anyway zinc oxide has been that has

72
00:03:05,939 --> 00:03:11,189
the memory composting so what that

73
00:03:07,229 --> 00:03:12,750
allows you to do is after you use some

74
00:03:11,189 --> 00:03:14,280
memory from the memory garden which

75
00:03:12,750 --> 00:03:15,719
obviously you know all the memory has to

76
00:03:14,280 --> 00:03:19,169
go through memory garden at some point

77
00:03:15,719 --> 00:03:21,409
in order to to have the memory being

78
00:03:19,169 --> 00:03:26,488
nitrogen fixated when it's initially

79
00:03:21,409 --> 00:03:30,479
created I unless you're in Pliska

80
00:03:26,489 --> 00:03:32,700
obviously plis code and data are

81
00:03:30,479 --> 00:03:35,639
interchangeable and you can and you know

82
00:03:32,699 --> 00:03:37,798
everything everything is a blip in that

83
00:03:35,639 --> 00:03:39,869
language so that's like a different kind

84
00:03:37,799 --> 00:03:41,580
of language so I would I would say yeah

85
00:03:39,870 --> 00:03:43,980
don't don't take that one too seriously

86
00:03:41,580 --> 00:03:45,900
it's just a little bit weird but

87
00:03:43,979 --> 00:03:49,079
assuming that you're using zinc oxide or

88
00:03:45,900 --> 00:03:50,909
stop Lang you know that that composting

89
00:03:49,080 --> 00:03:53,400
feature is really important because you

90
00:03:50,909 --> 00:03:54,750
know then instead of all of the garbage

91
00:03:53,400 --> 00:03:59,219
collected memory just getting thrown

92
00:03:54,750 --> 00:04:04,469
away all of that you know that that

93
00:03:59,219 --> 00:04:07,319
nutrient rich used memory is put into a

94
00:04:04,469 --> 00:04:11,579
bin right it's put into a memory bin

95
00:04:07,319 --> 00:04:14,129
until it kind of has a chance to let you

96
00:04:11,579 --> 00:04:17,400
know usually what and and I know this

97
00:04:14,129 --> 00:04:19,709
seems weird but this is very serious

98
00:04:17,399 --> 00:04:23,909
security research was done on both stop

99
00:04:19,709 --> 00:04:25,949
laying and zinc oxide and so a lot of

100
00:04:23,910 --> 00:04:27,620
those other languages that you're that

101
00:04:25,949 --> 00:04:29,779
you're talking about there

102
00:04:27,620 --> 00:04:31,340
a lot of those other languages they

103
00:04:29,779 --> 00:04:34,339
don't appreciate the fact that there's a

104
00:04:31,339 --> 00:04:35,479
lot of other malicious code normally

105
00:04:34,339 --> 00:04:38,539
running on the machine there's like

106
00:04:35,480 --> 00:04:41,560
malware you know viruses but those

107
00:04:38,540 --> 00:04:43,970
things are actually helpful right

108
00:04:41,560 --> 00:04:47,720
because what those things can do is if

109
00:04:43,970 --> 00:04:50,090
you just give them your used memory then

110
00:04:47,720 --> 00:04:52,880
what will happen is those malware's will

111
00:04:50,089 --> 00:04:57,769
actually they will metabolize the used

112
00:04:52,879 --> 00:04:59,750
memory and turn it back into remember

113
00:04:57,769 --> 00:05:02,599
you can use in your actual program right

114
00:04:59,750 --> 00:05:04,610
so a typical language like like stop

115
00:05:02,600 --> 00:05:06,470
Lang or zinc oxide that has some these

116
00:05:04,610 --> 00:05:09,199
more modern memory composting features

117
00:05:06,470 --> 00:05:10,400
they'll take that used memory after you

118
00:05:09,199 --> 00:05:11,959
know you use it in your actual program

119
00:05:10,399 --> 00:05:14,689
to do some computations and store some

120
00:05:11,959 --> 00:05:17,870
things in they'll put it into the memory

121
00:05:14,689 --> 00:05:19,490
composting bin and that bin is

122
00:05:17,870 --> 00:05:20,600
essentially you could think of it as a

123
00:05:19,490 --> 00:05:24,110
memory sandbox

124
00:05:20,600 --> 00:05:26,930
right that is running all of the malware

125
00:05:24,110 --> 00:05:31,090
on your machine and it's it's allowing

126
00:05:26,930 --> 00:05:34,519
that composted memory right to be

127
00:05:31,089 --> 00:05:37,609
metabolized by the malware in back into

128
00:05:34,519 --> 00:05:42,109
usable memory and so that is a really

129
00:05:37,610 --> 00:05:45,430
you know again very cutting edge a very

130
00:05:42,110 --> 00:05:47,689
very very cutting edge language feature

131
00:05:45,430 --> 00:05:50,300
that things like stop playing and zinc

132
00:05:47,689 --> 00:05:51,410
oxide have and you know it's one of the

133
00:05:50,300 --> 00:05:52,910
reasons why you know those are really

134
00:05:51,410 --> 00:05:54,380
great languages I can see why everyone

135
00:05:52,910 --> 00:05:57,010
always comes on the stream and asked me

136
00:05:54,379 --> 00:05:57,009
what I think of them

