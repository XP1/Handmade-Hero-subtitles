1
00:00:00,000 --> 00:00:03,759
hello everyone and welcome to handmade

2
00:00:01,760 --> 00:00:04,240
hero show recode complete game live on

3
00:00:03,759 --> 00:00:06,480
stream

4
00:00:04,240 --> 00:00:07,919
uh we weren't originally gonna do uh

5
00:00:06,480 --> 00:00:10,559
streams this weekend

6
00:00:07,918 --> 00:00:11,919
but it turned out that i i did have time

7
00:00:10,558 --> 00:00:14,959
available to do it

8
00:00:11,919 --> 00:00:19,439
so i figure we might as well take a look

9
00:00:14,960 --> 00:00:22,560
uh at where we're at and let's see here

10
00:00:19,439 --> 00:00:25,599
if i just go ahead and open up

11
00:00:22,559 --> 00:00:27,358
um really we we were just

12
00:00:25,599 --> 00:00:29,439
replacing our collision detector because

13
00:00:27,359 --> 00:00:30,160
it came time where i wanted something

14
00:00:29,439 --> 00:00:33,759
fairly

15
00:00:30,160 --> 00:00:37,039
robust uh that i could work with um

16
00:00:33,759 --> 00:00:38,000
for the rest of the game and you know we

17
00:00:37,039 --> 00:00:38,640
hadn't really looked at collision

18
00:00:38,000 --> 00:00:40,558
protection

19
00:00:38,640 --> 00:00:42,000
for basically the entire development

20
00:00:40,558 --> 00:00:44,238
process we threw one in there at the

21
00:00:42,000 --> 00:00:45,759
beginning

22
00:00:44,238 --> 00:00:47,519
but we want to start doing things like

23
00:00:45,759 --> 00:00:48,558
putting in little like you can see like

24
00:00:47,520 --> 00:00:50,960
this little

25
00:00:48,558 --> 00:00:52,640
glove in here right we want to start

26
00:00:50,960 --> 00:00:55,920
putting collision detection for stuff

27
00:00:52,640 --> 00:00:59,039
and so we were sort of looking at uh

28
00:00:55,920 --> 00:01:00,079
how that would work and we have some

29
00:00:59,039 --> 00:01:02,480
sort of

30
00:01:00,079 --> 00:01:03,920
we have some reasonable ideas of how we

31
00:01:02,479 --> 00:01:06,319
want that to go

32
00:01:03,920 --> 00:01:08,240
and it's really just a question of

33
00:01:06,319 --> 00:01:11,279
figuring out

34
00:01:08,239 --> 00:01:12,319
exactly how to like what's the simplest

35
00:01:11,280 --> 00:01:15,680
thing

36
00:01:12,319 --> 00:01:17,199
and the most stable thing that will give

37
00:01:15,680 --> 00:01:17,600
us the kind of collision detection we

38
00:01:17,200 --> 00:01:20,478
want

39
00:01:17,599 --> 00:01:21,039
without uh like over complicating things

40
00:01:20,478 --> 00:01:22,478
right

41
00:01:21,040 --> 00:01:24,159
because collision detection is actually

42
00:01:22,478 --> 00:01:26,400
a very difficult problem

43
00:01:24,159 --> 00:01:27,200
it's very easy to write a bad collision

44
00:01:26,400 --> 00:01:29,118
detector

45
00:01:27,200 --> 00:01:30,719
it's very hard to write a good one it's

46
00:01:29,118 --> 00:01:33,840
probably the right way to

47
00:01:30,719 --> 00:01:36,158
put it that way and collision detection

48
00:01:33,840 --> 00:01:37,280
in and of itself may not really be the

49
00:01:36,159 --> 00:01:38,478
right

50
00:01:37,280 --> 00:01:41,439
way to phrase it what we're really

51
00:01:38,478 --> 00:01:43,679
talking about is collision response so

52
00:01:41,438 --> 00:01:44,798
there's one half of the problem is do

53
00:01:43,680 --> 00:01:47,280
two things collide

54
00:01:44,799 --> 00:01:48,159
and that's not necessarily that hard to

55
00:01:47,280 --> 00:01:51,200
do

56
00:01:48,159 --> 00:01:54,320
uh it's still pretty difficult to do

57
00:01:51,200 --> 00:01:56,240
well so i'm not trying to say it's easy

58
00:01:54,319 --> 00:01:58,398
but it's really the response part that's

59
00:01:56,239 --> 00:02:00,640
the harder part making sure that

60
00:01:58,399 --> 00:02:02,478
when you detect that collisions occur

61
00:02:00,640 --> 00:02:03,439
resolving them in a way that always

62
00:02:02,478 --> 00:02:07,039
leads to like

63
00:02:03,438 --> 00:02:10,318
good results stable results for the game

64
00:02:07,040 --> 00:02:13,840
that's sort of more the part uh that

65
00:02:10,318 --> 00:02:15,759
that is is not great right um and so

66
00:02:13,840 --> 00:02:17,520
i believe this is where we were at i'm

67
00:02:15,759 --> 00:02:20,560
gonna re-enable the

68
00:02:17,520 --> 00:02:22,959
um the movement routine here uh and you

69
00:02:20,560 --> 00:02:26,080
can kind of see uh where we're at

70
00:02:22,959 --> 00:02:28,719
so uh this was uh us

71
00:02:26,080 --> 00:02:30,239
looking before and uh well that doesn't

72
00:02:28,719 --> 00:02:31,039
look like it's on for some reason which

73
00:02:30,239 --> 00:02:32,560
is weird

74
00:02:31,039 --> 00:02:34,079
do we not i thought we left this in a

75
00:02:32,560 --> 00:02:35,199
working state last time but i guess we

76
00:02:34,080 --> 00:02:38,480
didn't

77
00:02:35,199 --> 00:02:40,560
um you can see here that we do

78
00:02:38,479 --> 00:02:41,919
a subdivision count oh you know what we

79
00:02:40,560 --> 00:02:44,000
probably did

80
00:02:41,919 --> 00:02:44,958
uh i think we did the like does it

81
00:02:44,000 --> 00:02:46,878
accept

82
00:02:44,959 --> 00:02:48,640
uh or reject thing but it looks like

83
00:02:46,878 --> 00:02:51,120
yeah that that looks like it's in the

84
00:02:48,639 --> 00:02:52,159
the right uh the right place though

85
00:02:51,120 --> 00:02:53,759
there so i'm not sure

86
00:02:52,159 --> 00:02:55,359
i guess when we when we stopped i don't

87
00:02:53,759 --> 00:02:56,878
really remember but when we stopped

88
00:02:55,360 --> 00:02:57,440
doing the subdivision here i guess the

89
00:02:56,878 --> 00:02:59,919
move

90
00:02:57,439 --> 00:03:01,280
uh entity locally thing when we were

91
00:02:59,919 --> 00:03:03,439
doing the stepping

92
00:03:01,280 --> 00:03:04,640
still allows it to tunnel i guess

93
00:03:03,439 --> 00:03:07,840
because it's enough of

94
00:03:04,639 --> 00:03:08,559
a of an enough of a step don't worry

95
00:03:07,840 --> 00:03:10,400
about all this

96
00:03:08,560 --> 00:03:12,000
i will explain in detail sort of where

97
00:03:10,400 --> 00:03:12,879
we're at as soon as i remind myself

98
00:03:12,000 --> 00:03:14,318
where we're at

99
00:03:12,878 --> 00:03:15,518
um but at the moment you can see it

100
00:03:14,318 --> 00:03:16,158
looks like it's just allowed to go

101
00:03:15,519 --> 00:03:18,959
straight through

102
00:03:16,158 --> 00:03:19,359
now uh let me re-enable the drawing as

103
00:03:18,959 --> 00:03:21,680
well

104
00:03:19,360 --> 00:03:23,840
um so if we go in here and we turn on

105
00:03:21,680 --> 00:03:27,439
push volume outline

106
00:03:23,840 --> 00:03:30,080
um and uh

107
00:03:27,439 --> 00:03:31,519
we go ahead and run it here uh let's

108
00:03:30,080 --> 00:03:33,360
take a look yeah so there you go so you

109
00:03:31,519 --> 00:03:35,920
can see the green

110
00:03:33,360 --> 00:03:37,440
is when it when it doesn't collide and

111
00:03:35,919 --> 00:03:40,000
the red is when it does

112
00:03:37,439 --> 00:03:40,560
and you can see there like so what

113
00:03:40,000 --> 00:03:43,598
happens

114
00:03:40,560 --> 00:03:47,920
is and it's hard to explain but if i

115
00:03:43,598 --> 00:03:50,878
if i stop this from being able to run

116
00:03:47,919 --> 00:03:52,479
larger step counts or i do something

117
00:03:50,878 --> 00:03:54,079
slightly different with the desired

118
00:03:52,479 --> 00:03:57,359
position stuff

119
00:03:54,080 --> 00:03:59,439
uh i feel like that would

120
00:03:57,360 --> 00:04:01,519
probably tell us let me just see here

121
00:03:59,438 --> 00:04:03,280
results equals true if we were able to

122
00:04:01,519 --> 00:04:05,200
get it

123
00:04:03,280 --> 00:04:06,640
yeah that seems weird i feel like this

124
00:04:05,199 --> 00:04:07,839
is i must have forgotten not trying

125
00:04:06,639 --> 00:04:10,798
because it shouldn't

126
00:04:07,840 --> 00:04:11,920
be doing what it's doing right now i

127
00:04:10,799 --> 00:04:14,319
feel like

128
00:04:11,919 --> 00:04:15,359
i'm seeing something weird like like did

129
00:04:14,318 --> 00:04:17,120
we mess something up

130
00:04:15,360 --> 00:04:18,560
because i feel like this is supposed to

131
00:04:17,120 --> 00:04:21,918
stop it looks like

132
00:04:18,560 --> 00:04:23,680
right it stops when it can't move right

133
00:04:21,918 --> 00:04:26,959
it's got a result

134
00:04:23,680 --> 00:04:29,120
equals false up here it tries to move

135
00:04:26,959 --> 00:04:32,159
the entity

136
00:04:29,120 --> 00:04:33,840
right and

137
00:04:32,160 --> 00:04:35,280
assuming that it was able to move the

138
00:04:33,839 --> 00:04:38,399
entity it would set the result

139
00:04:35,279 --> 00:04:39,839
equal to true and if it can't it just

140
00:04:38,399 --> 00:04:43,679
leaves it at the from p

141
00:04:39,839 --> 00:04:46,959
location so wherever the entity was

142
00:04:43,680 --> 00:04:49,519
when it started right um and so

143
00:04:46,959 --> 00:04:51,120
this should and maybe it's just because

144
00:04:49,519 --> 00:04:55,279
the step count

145
00:04:51,120 --> 00:04:57,280
was too low or something like this

146
00:04:55,279 --> 00:04:59,198
it should have stopped when it hit

147
00:04:57,279 --> 00:05:01,038
things and and i don't know like it

148
00:04:59,199 --> 00:05:03,919
could be that that number is just too

149
00:05:01,038 --> 00:05:05,599
too low or something but it should have

150
00:05:03,918 --> 00:05:07,120
stopped when it hit things

151
00:05:05,600 --> 00:05:08,879
and not have been able to keep going

152
00:05:07,120 --> 00:05:11,120
through but i don't actually know

153
00:05:08,879 --> 00:05:12,879
um like yeah like you can see it's even

154
00:05:11,120 --> 00:05:16,399
red there so i'm not sure

155
00:05:12,879 --> 00:05:18,079
how it's able to to penetrate through

156
00:05:16,399 --> 00:05:20,159
it looks like it doesn't care that the

157
00:05:18,079 --> 00:05:21,199
collision detector said it can't go any

158
00:05:20,160 --> 00:05:22,720
further

159
00:05:21,199 --> 00:05:24,478
so i would have thought that would have

160
00:05:22,720 --> 00:05:26,479
stopped it but for some reason it

161
00:05:24,478 --> 00:05:27,599
doesn't actually seem to have

162
00:05:26,478 --> 00:05:29,519
and so we'll have to look at that

163
00:05:27,600 --> 00:05:30,080
because i thought we were at the place

164
00:05:29,519 --> 00:05:32,639
but

165
00:05:30,079 --> 00:05:33,680
either way it doesn't matter because the

166
00:05:32,639 --> 00:05:35,680
point is

167
00:05:33,680 --> 00:05:36,720
where we got to last time even when i go

168
00:05:35,680 --> 00:05:38,959
figure out what

169
00:05:36,720 --> 00:05:39,919
got messed up in here it's not

170
00:05:38,959 --> 00:05:43,519
sufficient

171
00:05:39,918 --> 00:05:46,240
because we didn't have a good way

172
00:05:43,519 --> 00:05:46,799
of looking at how you moved through the

173
00:05:46,240 --> 00:05:49,918
world

174
00:05:46,800 --> 00:05:52,879
and determining that you could or

175
00:05:49,918 --> 00:05:54,079
couldn't move out of a position that was

176
00:05:52,879 --> 00:05:57,279
interpenetrating was

177
00:05:54,079 --> 00:05:58,560
was mainly the problem um and so

178
00:05:57,279 --> 00:06:00,000
yeah so i'm not sure about this so i'm

179
00:05:58,560 --> 00:06:01,759
going to take a minute to just look at

180
00:06:00,000 --> 00:06:03,360
this and figure out why it's not

181
00:06:01,759 --> 00:06:04,720
stopping the player currently

182
00:06:03,360 --> 00:06:06,160
because i want to make sure it's back to

183
00:06:04,720 --> 00:06:07,680
the state that i thought it was in which

184
00:06:06,160 --> 00:06:10,400
it obviously isn't

185
00:06:07,680 --> 00:06:11,840
you can see here where we do the uh the

186
00:06:10,399 --> 00:06:15,279
testing here

187
00:06:11,839 --> 00:06:17,599
um it starts out assuming

188
00:06:15,279 --> 00:06:19,038
that it's going to go to frumpy uh it

189
00:06:17,600 --> 00:06:22,479
then checks to see

190
00:06:19,038 --> 00:06:24,000
uh when the oh is it is it because of

191
00:06:22,478 --> 00:06:24,879
how we were doing the voxel marking or

192
00:06:24,000 --> 00:06:27,680
something

193
00:06:24,879 --> 00:06:28,879
i don't know uh it tests to see whether

194
00:06:27,680 --> 00:06:31,439
or not uh

195
00:06:28,879 --> 00:06:33,279
it can be placed at each point in the

196
00:06:31,439 --> 00:06:35,279
voxel and then what it does is it just

197
00:06:33,279 --> 00:06:37,599
says hey for every square

198
00:06:35,279 --> 00:06:38,478
in the voxel of the motion we're just

199
00:06:37,600 --> 00:06:40,319
going to go

200
00:06:38,478 --> 00:06:42,560
what's the one that has the closest

201
00:06:40,319 --> 00:06:43,759
point to the place that we're trying to

202
00:06:42,560 --> 00:06:46,399
get to

203
00:06:43,759 --> 00:06:48,560
and then it moves it there and this part

204
00:06:46,399 --> 00:06:50,959
here the step count thing

205
00:06:48,560 --> 00:06:52,000
that was just a way of us trying to

206
00:06:50,959 --> 00:06:56,560
figure out like hey

207
00:06:52,000 --> 00:06:56,560
if we're going to do motion in this way

208
00:07:00,959 --> 00:07:03,839
we want to make sure that we can't

209
00:07:02,399 --> 00:07:06,399
tunnel so we need to make sure that the

210
00:07:03,839 --> 00:07:11,279
maximum step size is fairly low

211
00:07:06,399 --> 00:07:11,279
now this um

212
00:07:12,639 --> 00:07:16,960
this part here was just something we ad

213
00:07:14,639 --> 00:07:18,879
hoc through in just to see

214
00:07:16,959 --> 00:07:20,560
what it would do and it does it's not

215
00:07:18,879 --> 00:07:21,918
really something that we probably want

216
00:07:20,560 --> 00:07:23,439
we want our collision section to be

217
00:07:21,918 --> 00:07:25,198
fairly stable and so what we probably

218
00:07:23,439 --> 00:07:29,918
want that voxel size to be

219
00:07:25,199 --> 00:07:30,240
fixed we want the voxel size to be like

220
00:07:29,918 --> 00:07:34,000
a

221
00:07:30,240 --> 00:07:36,319
certain size that is always the same

222
00:07:34,000 --> 00:07:38,000
and we probably want to make sure that

223
00:07:36,319 --> 00:07:40,319
the voxel size

224
00:07:38,000 --> 00:07:41,839
doesn't vary just based on the movement

225
00:07:40,319 --> 00:07:45,840
right

226
00:07:41,839 --> 00:07:45,839
and so

227
00:07:50,639 --> 00:07:54,879
i mean the question here is do we just

228
00:07:52,478 --> 00:07:56,399
go do we just keep going and go into a

229
00:07:54,879 --> 00:07:58,960
subdivision kind of a thing

230
00:07:56,399 --> 00:07:59,758
i think we probably want to do that um

231
00:07:58,959 --> 00:08:02,478
but like i said

232
00:07:59,759 --> 00:08:03,199
i don't know uh what went wrong here so

233
00:08:02,478 --> 00:08:04,478
i'm just going to

234
00:08:03,199 --> 00:08:06,560
just going to drill it down into this a

235
00:08:04,478 --> 00:08:08,560
little bit more so here you can see what

236
00:08:06,560 --> 00:08:10,240
we're doing is we have a step count

237
00:08:08,560 --> 00:08:11,759
and we're basically subdividing the

238
00:08:10,240 --> 00:08:15,519
motion uh

239
00:08:11,759 --> 00:08:18,800
into into steps and what we do is we try

240
00:08:15,519 --> 00:08:20,240
to get the player to move to along each

241
00:08:18,800 --> 00:08:22,720
of the different steps with

242
00:08:20,240 --> 00:08:23,439
with the understanding that you know the

243
00:08:22,720 --> 00:08:27,120
distance that

244
00:08:23,439 --> 00:08:28,478
has to move um is has to be capped to a

245
00:08:27,120 --> 00:08:31,519
certain size

246
00:08:28,478 --> 00:08:34,639
um and if we look here uh

247
00:08:31,519 --> 00:08:36,319
i don't know why so what we're doing

248
00:08:34,639 --> 00:08:38,639
here is we're saying here's how far

249
00:08:36,320 --> 00:08:40,399
this thing wanted to move the number of

250
00:08:38,639 --> 00:08:41,598
steps that will take is going to be

251
00:08:40,399 --> 00:08:43,278
however long that is

252
00:08:41,599 --> 00:08:44,959
minus the motion displacement size which

253
00:08:43,278 --> 00:08:48,320
is the maximum

254
00:08:44,958 --> 00:08:49,039
amount we want to uh allow a thing to

255
00:08:48,320 --> 00:08:52,080
move

256
00:08:49,039 --> 00:08:53,039
and the reason for that is that if we

257
00:08:52,080 --> 00:08:55,278
want to allow

258
00:08:53,039 --> 00:08:56,719
arbitrarily large movements we would

259
00:08:55,278 --> 00:08:57,919
then have to make sure that our

260
00:08:56,720 --> 00:09:00,879
collision detection

261
00:08:57,919 --> 00:09:01,679
our collision detection prevented

262
00:09:00,879 --> 00:09:04,720
tunneling

263
00:09:01,679 --> 00:09:05,439
through objects of basically arbitrary

264
00:09:04,720 --> 00:09:08,800
size

265
00:09:05,440 --> 00:09:09,440
right and one of the things that i would

266
00:09:08,799 --> 00:09:12,719
like to do

267
00:09:09,440 --> 00:09:13,680
is exploit sort of efficiency gains we

268
00:09:12,720 --> 00:09:16,639
could get

269
00:09:13,679 --> 00:09:17,679
by having some kind of an of a known

270
00:09:16,639 --> 00:09:20,799
worst case

271
00:09:17,679 --> 00:09:22,000
where we're like look there is no thing

272
00:09:20,799 --> 00:09:25,439
that is going there's

273
00:09:22,000 --> 00:09:26,080
no point in the game where there will be

274
00:09:25,440 --> 00:09:28,959
something

275
00:09:26,080 --> 00:09:30,480
thin enough that it's under a particular

276
00:09:28,958 --> 00:09:32,719
thinness threshold

277
00:09:30,480 --> 00:09:34,720
so that we don't care if you tunnel

278
00:09:32,720 --> 00:09:37,680
through something that thin

279
00:09:34,720 --> 00:09:38,720
right like we're just going to say

280
00:09:37,679 --> 00:09:41,919
everything in the game

281
00:09:38,720 --> 00:09:43,519
is at least this minimum thickness

282
00:09:41,919 --> 00:09:45,838
and once you say that then you can

283
00:09:43,519 --> 00:09:48,720
exploit the fact that you never have to

284
00:09:45,839 --> 00:09:50,880
look for tunneling below that threshold

285
00:09:48,720 --> 00:09:52,959
whereas if you say that things can be as

286
00:09:50,879 --> 00:09:54,799
thin as they want to be

287
00:09:52,958 --> 00:09:58,399
you kind of put yourself in a position

288
00:09:54,799 --> 00:10:01,519
where you really have to crank up

289
00:09:58,399 --> 00:10:04,879
the complexity of the routine

290
00:10:01,519 --> 00:10:07,440
because now you have to handle

291
00:10:04,879 --> 00:10:08,480
any arbitrary little slivery thing

292
00:10:07,440 --> 00:10:10,959
you're basically saying

293
00:10:08,480 --> 00:10:12,480
right and so i'd like to make our job

294
00:10:10,958 --> 00:10:13,278
easier by just saying look we're going

295
00:10:12,480 --> 00:10:15,278
to have

296
00:10:13,278 --> 00:10:18,958
some kind of a size here that we're

297
00:10:15,278 --> 00:10:21,679
going to say we just don't check

298
00:10:18,958 --> 00:10:22,639
for tunneling below this threshold and

299
00:10:21,679 --> 00:10:25,439
the reason for that

300
00:10:22,639 --> 00:10:27,600
is just purely for efficiency if we want

301
00:10:25,440 --> 00:10:29,680
to make a robust collision detector

302
00:10:27,600 --> 00:10:30,879
it's way easier to make an efficient

303
00:10:29,679 --> 00:10:33,679
robust one

304
00:10:30,879 --> 00:10:35,200
if you have some lower bound that you

305
00:10:33,679 --> 00:10:39,199
can guarantee

306
00:10:35,200 --> 00:10:41,040
versus no lower bound you can guarantee

307
00:10:39,200 --> 00:10:42,240
so if we take a look at the total length

308
00:10:41,039 --> 00:10:44,159
and we look at how

309
00:10:42,240 --> 00:10:48,000
much displacement there is that's saying

310
00:10:44,159 --> 00:10:51,519
here's how many steps we're going to try

311
00:10:48,000 --> 00:10:56,159
and i guess when i look at this uh

312
00:10:51,519 --> 00:10:56,159
i realize that that this is not um

313
00:10:57,600 --> 00:11:00,639
it feels like this must not be

314
00:11:00,000 --> 00:11:02,480
triggering

315
00:11:00,639 --> 00:11:04,480
because it should be the case that as

316
00:11:02,480 --> 00:11:06,159
soon as it tries one of these micro

317
00:11:04,480 --> 00:11:06,879
steps it's basically doing micro steps

318
00:11:06,159 --> 00:11:09,278
right

319
00:11:06,879 --> 00:11:11,360
it's saying i'm going to try at the

320
00:11:09,278 --> 00:11:13,039
various places along this line that are

321
00:11:11,360 --> 00:11:15,120
however many steps there are

322
00:11:13,039 --> 00:11:16,799
right i don't know why there was a

323
00:11:15,120 --> 00:11:18,240
minimum step count here of

324
00:11:16,799 --> 00:11:20,958
anything other than one because you

325
00:11:18,240 --> 00:11:22,320
would think that that zero would be the

326
00:11:20,958 --> 00:11:25,359
only invalid

327
00:11:22,320 --> 00:11:25,360
step size

328
00:11:25,839 --> 00:11:30,480
i so i'm not sure what this was designed

329
00:11:29,120 --> 00:11:30,919
to do

330
00:11:30,480 --> 00:11:34,058
um

331
00:11:30,919 --> 00:11:34,058
[Music]

332
00:11:34,078 --> 00:11:37,599
oh that's no no that's the minimum it's

333
00:11:36,399 --> 00:11:40,480
based saying don't take

334
00:11:37,600 --> 00:11:41,040
more than that step size sorry sorry so

335
00:11:40,480 --> 00:11:43,039
okay

336
00:11:41,039 --> 00:11:44,559
so yeah whatever uh you're basically

337
00:11:43,039 --> 00:11:46,639
saying look we don't want to try

338
00:11:44,559 --> 00:11:47,759
uh harder than this the problem with

339
00:11:46,639 --> 00:11:50,399
something like that is

340
00:11:47,759 --> 00:11:51,278
this part here has to be obeyed for the

341
00:11:50,399 --> 00:11:53,839
routine to work

342
00:11:51,278 --> 00:11:54,399
right so we're pretty much going to have

343
00:11:53,839 --> 00:11:56,160
to do

344
00:11:54,399 --> 00:11:57,839
you know to ensure that we're always at

345
00:11:56,159 --> 00:12:00,078
that minimum size and that's just kind

346
00:11:57,839 --> 00:12:03,279
of how it has to go

347
00:12:00,078 --> 00:12:04,879
and that's fine um so when we look here

348
00:12:03,278 --> 00:12:06,240
let's see here if does that change

349
00:12:04,879 --> 00:12:07,039
things at all yeah so you can see that

350
00:12:06,240 --> 00:12:08,720
even though

351
00:12:07,039 --> 00:12:10,240
we're doing that step size it doesn't

352
00:12:08,720 --> 00:12:10,720
matter right it's still able to go right

353
00:12:10,240 --> 00:12:12,639
through

354
00:12:10,720 --> 00:12:14,079
and so what i want to look at now is how

355
00:12:12,639 --> 00:12:15,919
that's happening because

356
00:12:14,078 --> 00:12:17,278
this means we're never we should never

357
00:12:15,919 --> 00:12:19,039
be asking for a step

358
00:12:17,278 --> 00:12:20,958
that's larger than that because we start

359
00:12:19,039 --> 00:12:22,319
at the original entity p

360
00:12:20,958 --> 00:12:24,239
right the place where it started at the

361
00:12:22,320 --> 00:12:25,440
beginning of the frame and then we just

362
00:12:24,240 --> 00:12:26,959
asked to move

363
00:12:25,440 --> 00:12:28,720
little increments and we know that the

364
00:12:26,958 --> 00:12:32,078
increments can't be more than this

365
00:12:28,720 --> 00:12:34,639
right um unless i'm wrong about that

366
00:12:32,078 --> 00:12:36,319
t step yeah because it's just it's

367
00:12:34,639 --> 00:12:37,120
whatever the motion the total amount of

368
00:12:36,320 --> 00:12:39,920
motion

369
00:12:37,120 --> 00:12:40,879
we just take the uh percentage we are

370
00:12:39,919 --> 00:12:43,759
through the steps

371
00:12:40,879 --> 00:12:44,639
right which is is that and we just look

372
00:12:43,759 --> 00:12:47,360
at what they are

373
00:12:44,639 --> 00:12:48,560
so so that should be it should be like

374
00:12:47,360 --> 00:12:51,759
right

375
00:12:48,559 --> 00:12:54,879
um and so i

376
00:12:51,759 --> 00:12:56,240
looking at this the question is why is

377
00:12:54,879 --> 00:12:58,000
move entity locally

378
00:12:56,240 --> 00:13:01,519
seeming to think that it can keep moving

379
00:12:58,000 --> 00:13:01,519
it because you would think it would stop

380
00:13:04,839 --> 00:13:07,839
right

381
00:13:13,120 --> 00:13:16,159
so if we take a look at what happens

382
00:13:14,480 --> 00:13:18,879
here uh

383
00:13:16,159 --> 00:13:20,399
we start out by saying well we've got uh

384
00:13:18,879 --> 00:13:23,120
well i guess we should check this

385
00:13:20,399 --> 00:13:24,078
this part as well um so we go through

386
00:13:23,120 --> 00:13:27,360
here and we say

387
00:13:24,078 --> 00:13:29,278
look we've got uh

388
00:13:27,360 --> 00:13:30,399
we've got a thing called allows motion

389
00:13:29,278 --> 00:13:33,200
on collision

390
00:13:30,399 --> 00:13:35,759
and that's a thing that is going to be

391
00:13:33,200 --> 00:13:37,200
set on anything that's supposed to

392
00:13:35,759 --> 00:13:39,600
uh that you're supposed to be able to

393
00:13:37,200 --> 00:13:42,639
move through so that's like the room

394
00:13:39,600 --> 00:13:44,720
um boundaries and stuff like that

395
00:13:42,639 --> 00:13:47,120
but otherwise whenever something

396
00:13:44,720 --> 00:13:48,800
intersects we set the occupied flag on

397
00:13:47,120 --> 00:13:51,919
that part of the voxel to true

398
00:13:48,799 --> 00:13:54,479
right so we march through uh

399
00:13:51,919 --> 00:13:56,319
each part of the voxel we set it up so

400
00:13:54,480 --> 00:13:59,440
that if something intersected

401
00:13:56,320 --> 00:14:00,079
uh at that point and we just test the

402
00:13:59,440 --> 00:14:01,600
two

403
00:14:00,078 --> 00:14:04,319
rectangles here the thing that's moving

404
00:14:01,600 --> 00:14:07,040
in the thing that's uh blocking it

405
00:14:04,320 --> 00:14:07,920
we just set it to true uh so that we

406
00:14:07,039 --> 00:14:11,039
know that that

407
00:14:07,919 --> 00:14:13,360
that uh part of the voxel is occupied

408
00:14:11,039 --> 00:14:14,719
and then we look through uh the voxel

409
00:14:13,360 --> 00:14:17,440
and we just look to see

410
00:14:14,720 --> 00:14:18,240
if there's any voxel cell where the

411
00:14:17,440 --> 00:14:22,480
corners

412
00:14:18,240 --> 00:14:26,000
were all open then we take that cell

413
00:14:22,480 --> 00:14:27,680
and we allow you to move anywhere inside

414
00:14:26,000 --> 00:14:28,399
that cell which again is not what we

415
00:14:27,679 --> 00:14:30,638
want to do

416
00:14:28,399 --> 00:14:32,000
at the end of the day but it because we

417
00:14:30,639 --> 00:14:34,720
then say

418
00:14:32,000 --> 00:14:35,759
that you were able to move um at that

419
00:14:34,720 --> 00:14:37,600
point

420
00:14:35,759 --> 00:14:39,759
if you weren't able to keep going it

421
00:14:37,600 --> 00:14:41,839
should return false and it should stop

422
00:14:39,759 --> 00:14:43,120
this loop and that doesn't look like

423
00:14:41,839 --> 00:14:46,079
what's happening

424
00:14:43,120 --> 00:14:48,240
so i feel like there's something that i

425
00:14:46,078 --> 00:14:49,679
busted in here or that's wrong

426
00:14:48,240 --> 00:14:51,360
and that's really the only thing that i

427
00:14:49,679 --> 00:14:53,120
was saying i wanted to get to the bottom

428
00:14:51,360 --> 00:14:56,159
of first

429
00:14:53,120 --> 00:14:59,360
now if we look at how this

430
00:14:56,159 --> 00:15:01,519
thing is working so one of the things is

431
00:14:59,360 --> 00:15:03,440
as we iterate through this voxel uh we

432
00:15:01,519 --> 00:15:05,120
have sort of the concept of the base of

433
00:15:03,440 --> 00:15:07,360
the voxel right

434
00:15:05,120 --> 00:15:09,519
um and the base of the voxel is going to

435
00:15:07,360 --> 00:15:12,320
be based on this voxel bounds

436
00:15:09,519 --> 00:15:13,600
here right so we do this rectum in max

437
00:15:12,320 --> 00:15:14,320
and basically what we're doing is we're

438
00:15:13,600 --> 00:15:16,639
saying

439
00:15:14,320 --> 00:15:18,720
take the from position to position

440
00:15:16,639 --> 00:15:22,079
consider those to be two corners

441
00:15:18,720 --> 00:15:23,680
of the box um and we use the min max

442
00:15:22,078 --> 00:15:24,958
here to just make sure that we take

443
00:15:23,679 --> 00:15:27,759
whatever the enclo

444
00:15:24,958 --> 00:15:30,078
the box that encloses the place we're

445
00:15:27,759 --> 00:15:32,879
coming from and the place we're going to

446
00:15:30,078 --> 00:15:33,359
uh it we then add what looks like a very

447
00:15:32,879 --> 00:15:34,958
large

448
00:15:33,360 --> 00:15:36,639
and this is probably the this is

449
00:15:34,958 --> 00:15:39,198
probably the issue right here

450
00:15:36,639 --> 00:15:39,680
um it looks like we then add a very

451
00:15:39,198 --> 00:15:42,479
large

452
00:15:39,679 --> 00:15:43,599
apron to it well no point one that's not

453
00:15:42,480 --> 00:15:44,959
large what am i talking about that's

454
00:15:43,600 --> 00:15:45,920
pretty small so never mind that's not

455
00:15:44,958 --> 00:15:49,439
the problem

456
00:15:45,919 --> 00:15:52,078
um we add an apron around that

457
00:15:49,440 --> 00:15:53,600
and that gives us the voxel uh that

458
00:15:52,078 --> 00:15:57,120
we're going to search

459
00:15:53,600 --> 00:16:00,159
we then move through that voxel um

460
00:15:57,120 --> 00:16:02,799
doing the testing like i said before uh

461
00:16:00,159 --> 00:16:02,799
and we do

462
00:16:03,440 --> 00:16:08,639
the cell dim which is just whatever the

463
00:16:06,799 --> 00:16:10,399
voxel bounds are divided by the voxel

464
00:16:08,639 --> 00:16:12,720
dimension which is exactly what you

465
00:16:10,399 --> 00:16:14,240
would expect so that all looks

466
00:16:12,720 --> 00:16:16,160
i don't see anything weird there i don't

467
00:16:14,240 --> 00:16:19,839
know maybe other people do

468
00:16:16,159 --> 00:16:24,958
um we iterate over the voc

469
00:16:19,839 --> 00:16:24,959
what is this what is what is that

470
00:16:26,078 --> 00:16:29,599
do we know what the heck that was

471
00:16:27,278 --> 00:16:33,759
supposed to be i guess we just

472
00:16:29,600 --> 00:16:33,759
forgot to delete that that's not a thing

473
00:16:34,078 --> 00:16:37,919
um so we have the voxel dimension we

474
00:16:36,639 --> 00:16:40,159
have the cell dimension

475
00:16:37,919 --> 00:16:42,078
off we go uh and then later we iterate

476
00:16:40,159 --> 00:16:43,600
over the same voxel and we start at the

477
00:16:42,078 --> 00:16:45,679
front piece so in theory

478
00:16:43,600 --> 00:16:46,720
and you know just to just to check the

479
00:16:45,679 --> 00:16:49,599
assumptions here that i

480
00:16:46,720 --> 00:16:50,560
have making uh the assumption is that if

481
00:16:49,600 --> 00:16:54,079
i if i

482
00:16:50,559 --> 00:16:55,359
block that out so i don't set uh i don't

483
00:16:54,078 --> 00:16:57,198
run this loop

484
00:16:55,360 --> 00:16:59,199
i i shouldn't see any movement right

485
00:16:57,198 --> 00:17:02,000
like it like it it shouldn't

486
00:16:59,198 --> 00:17:02,639
uh go anywhere nobody should be moving

487
00:17:02,000 --> 00:17:04,480
okay so

488
00:17:02,639 --> 00:17:06,558
so right off the bat you can tell that

489
00:17:04,480 --> 00:17:09,679
this is busted for some reason

490
00:17:06,558 --> 00:17:12,078
right um because there

491
00:17:09,679 --> 00:17:14,480
i'm literally not updating this thing or

492
00:17:12,078 --> 00:17:18,159
at least i didn't think i was

493
00:17:14,480 --> 00:17:20,240
um and yet it moved right

494
00:17:18,160 --> 00:17:21,519
so something's busted here and i don't

495
00:17:20,240 --> 00:17:24,558
really know uh

496
00:17:21,519 --> 00:17:27,038
what it is so we got to figure out

497
00:17:24,558 --> 00:17:28,720
what's going on there so when i say move

498
00:17:27,038 --> 00:17:30,480
entity locally

499
00:17:28,720 --> 00:17:32,240
it looks like i'm passing some stuff to

500
00:17:30,480 --> 00:17:34,000
this what am i passing

501
00:17:32,240 --> 00:17:35,679
i'm passing the entity from p and the

502
00:17:34,000 --> 00:17:38,798
entity to p

503
00:17:35,679 --> 00:17:42,160
uh so so that

504
00:17:38,798 --> 00:17:47,839
looks kind of weird

505
00:17:42,160 --> 00:17:47,840
um but no that's okay because

506
00:17:48,160 --> 00:17:55,759
no it's not so this this is what

507
00:17:51,279 --> 00:17:57,200
this is would be a problem right

508
00:17:55,759 --> 00:17:58,960
uh although it shouldn't it still

509
00:17:57,200 --> 00:18:01,038
shouldn't have moved because

510
00:17:58,960 --> 00:18:02,960
the best p should now just be always the

511
00:18:01,038 --> 00:18:03,359
from p which is the entity p which so it

512
00:18:02,960 --> 00:18:05,759
should

513
00:18:03,359 --> 00:18:07,199
it should never change so how is it

514
00:18:05,759 --> 00:18:10,400
changing

515
00:18:07,200 --> 00:18:12,720
right um in here you can see

516
00:18:10,400 --> 00:18:12,720
oh

517
00:18:13,440 --> 00:18:16,798
what the heck is this doing here

518
00:18:18,960 --> 00:18:23,360
did we just hack that in for some reason

519
00:18:21,679 --> 00:18:25,120
so that whole time i was looking at this

520
00:18:23,359 --> 00:18:28,159
routine it was just because we

521
00:18:25,119 --> 00:18:30,479
always moved it forward

522
00:18:28,160 --> 00:18:31,279
why were we doing that it must have been

523
00:18:30,480 --> 00:18:34,480
something we were

524
00:18:31,279 --> 00:18:35,599
playing with the last stream so that

525
00:18:34,480 --> 00:18:38,000
whole thing was just probably because

526
00:18:35,599 --> 00:18:39,759
somebody threw that line in there

527
00:18:38,000 --> 00:18:41,279
that somebody is unfortunately me so i

528
00:18:39,759 --> 00:18:43,519
can't blame somebody else

529
00:18:41,279 --> 00:18:45,200
i would like to but yeah just i don't

530
00:18:43,519 --> 00:18:46,960
know what that was doing there

531
00:18:45,200 --> 00:18:48,319
it's fine i wanted to reacquaint myself

532
00:18:46,960 --> 00:18:49,279
with all the stuff we were doing anyway

533
00:18:48,319 --> 00:18:51,839
but

534
00:18:49,279 --> 00:18:53,200
yeah okay so now we're back to a better

535
00:18:51,839 --> 00:18:55,119
scenario which is that

536
00:18:53,200 --> 00:18:56,798
um i think we're at the exact place that

537
00:18:55,119 --> 00:18:58,079
i wanted to be

538
00:18:56,798 --> 00:19:01,440
if i had noticed that that thing was

539
00:18:58,079 --> 00:19:02,558
there uh and that is as you can see it

540
00:19:01,440 --> 00:19:04,480
actually looks like

541
00:19:02,558 --> 00:19:06,319
everything's working fine until you get

542
00:19:04,480 --> 00:19:07,519
embedded in something right

543
00:19:06,319 --> 00:19:08,879
and this is one of the things that we

544
00:19:07,519 --> 00:19:09,599
really want our closed deck to handle so

545
00:19:08,880 --> 00:19:11,200
it's not

546
00:19:09,599 --> 00:19:13,359
a good situation but what you can see is

547
00:19:11,200 --> 00:19:14,960
like for example the gameplay code

548
00:19:13,359 --> 00:19:16,479
just because it doesn't care and wasn't

549
00:19:14,960 --> 00:19:19,600
thinking about it it

550
00:19:16,480 --> 00:19:22,798
initially creates the glove

551
00:19:19,599 --> 00:19:23,519
embedded in the floor right and what you

552
00:19:22,798 --> 00:19:27,599
can see

553
00:19:23,519 --> 00:19:31,119
is when this thing moves around

554
00:19:27,599 --> 00:19:31,119
uh you don't

555
00:19:32,640 --> 00:19:35,440
i should i say this

556
00:19:35,839 --> 00:19:41,519
because we only allow motion if all

557
00:19:38,880 --> 00:19:42,880
of the squares of the voxel around you

558
00:19:41,519 --> 00:19:46,000
are open

559
00:19:42,880 --> 00:19:49,039
and we don't really search outside

560
00:19:46,000 --> 00:19:52,160
of the place you're trying to move

561
00:19:49,038 --> 00:19:56,240
very much you can't really

562
00:19:52,160 --> 00:19:59,200
get out of things very effectively right

563
00:19:56,240 --> 00:20:00,160
uh because we don't subdiv if we see

564
00:19:59,200 --> 00:20:02,960
that like oh

565
00:20:00,160 --> 00:20:03,360
where you are if you would have been

566
00:20:02,960 --> 00:20:04,798
moved

567
00:20:03,359 --> 00:20:06,399
backwards a little bit you would be out

568
00:20:04,798 --> 00:20:08,079
of the thing you're in

569
00:20:06,400 --> 00:20:09,519
we don't really have any way of dealing

570
00:20:08,079 --> 00:20:11,599
with that kind of stuff at all

571
00:20:09,519 --> 00:20:12,720
right and that's not good because one of

572
00:20:11,599 --> 00:20:15,759
the things we need

573
00:20:12,720 --> 00:20:15,759
is literally that

574
00:20:16,640 --> 00:20:22,880
so uh we end up with a problem

575
00:20:20,000 --> 00:20:23,919
that that is is a conceptual problem i'm

576
00:20:22,880 --> 00:20:26,320
not sure

577
00:20:23,919 --> 00:20:29,440
what the right way to change how we're

578
00:20:26,319 --> 00:20:32,720
looking at the voxelization problem

579
00:20:29,440 --> 00:20:34,960
is if we want to ensure that we search

580
00:20:32,720 --> 00:20:36,079
for places to put the player when they

581
00:20:34,960 --> 00:20:37,679
come too close

582
00:20:36,079 --> 00:20:41,199
into contact with things like that or

583
00:20:37,679 --> 00:20:45,759
the glove where it's embedded right

584
00:20:41,200 --> 00:20:49,840
i'm really not sure how to phrase it uh

585
00:20:45,759 --> 00:20:49,839
my guess

586
00:21:00,000 --> 00:21:03,599
it's easy enough to detect that it

587
00:21:02,558 --> 00:21:06,720
happened

588
00:21:03,599 --> 00:21:07,038
because we kind of know that we didn't

589
00:21:06,720 --> 00:21:09,440
find

590
00:21:07,038 --> 00:21:10,400
like we know when we don't find any

591
00:21:09,440 --> 00:21:12,480
place to put

592
00:21:10,400 --> 00:21:14,240
the player right that's a condition we

593
00:21:12,480 --> 00:21:16,079
know because we look through the voxel

594
00:21:14,240 --> 00:21:18,558
cells and we don't find anything

595
00:21:16,079 --> 00:21:19,279
right all of the voxel cells are

596
00:21:18,558 --> 00:21:24,158
partially

597
00:21:19,279 --> 00:21:26,960
occupied so when we know that

598
00:21:24,159 --> 00:21:27,840
i'm wondering if that is like the thing

599
00:21:26,960 --> 00:21:30,880
we

600
00:21:27,839 --> 00:21:33,599
then act on and

601
00:21:30,880 --> 00:21:35,039
say well we gotta widen the search area

602
00:21:33,599 --> 00:21:44,639
or something like this

603
00:21:35,038 --> 00:21:47,679
right um

604
00:21:44,640 --> 00:21:49,600
and again i'm just not sure

605
00:21:47,679 --> 00:21:51,280
when you look at like the move entity

606
00:21:49,599 --> 00:21:52,719
locally routine

607
00:21:51,279 --> 00:21:54,960
you know i could think of some like

608
00:21:52,720 --> 00:21:56,839
hacks that sort of help

609
00:21:54,960 --> 00:21:58,798
but i don't think they're really

610
00:21:56,839 --> 00:22:00,319
sufficient like if you take a look at

611
00:21:58,798 --> 00:22:01,119
what's happening with the apron size

612
00:22:00,319 --> 00:22:05,918
here

613
00:22:01,119 --> 00:22:05,918
you could imagine orienting the voxel

614
00:22:08,720 --> 00:22:12,558
so that it includes a wider apron of

615
00:22:11,359 --> 00:22:17,359
search

616
00:22:12,558 --> 00:22:27,839
right um and

617
00:22:17,359 --> 00:22:27,839
again i'm just not sure

618
00:22:48,159 --> 00:22:54,000
i guess the way i would say is this

619
00:22:51,359 --> 00:22:54,879
if the voxel that the person starts out

620
00:22:54,000 --> 00:22:57,679
in

621
00:22:54,880 --> 00:22:59,280
is considered open then you pretty much

622
00:22:57,679 --> 00:23:01,360
don't have a problem

623
00:22:59,279 --> 00:23:03,678
because that means that there isn't any

624
00:23:01,359 --> 00:23:06,000
nearby collider

625
00:23:03,679 --> 00:23:06,840
if the voxel that the person starts out

626
00:23:06,000 --> 00:23:09,839
in

627
00:23:06,839 --> 00:23:12,480
is so so so

628
00:23:09,839 --> 00:23:15,038
the the vox the person starts out in is

629
00:23:12,480 --> 00:23:15,038
not open

630
00:23:15,200 --> 00:23:22,000
then that is the case that we need to

631
00:23:18,480 --> 00:23:25,519
handle and so what we may want to do

632
00:23:22,000 --> 00:23:28,960
is take action on that case

633
00:23:25,519 --> 00:23:32,400
when we see that case

634
00:23:28,960 --> 00:23:36,400
we probably need to change the idea of

635
00:23:32,400 --> 00:23:38,320
what we're doing

636
00:23:36,400 --> 00:23:39,440
because at that point we're saying this

637
00:23:38,319 --> 00:23:40,798
thing

638
00:23:39,440 --> 00:23:42,798
especially if we detect that it's

639
00:23:40,798 --> 00:23:46,400
actually embedded so if all

640
00:23:42,798 --> 00:23:48,158
of the voxels corners that the player

641
00:23:46,400 --> 00:23:49,440
is or not the player but the entity

642
00:23:48,159 --> 00:23:52,720
that's moving

643
00:23:49,440 --> 00:23:55,200
if all of the voxel corners are all

644
00:23:52,720 --> 00:23:56,960
colliders so they're all marked as as

645
00:23:55,200 --> 00:23:58,880
closed

646
00:23:56,960 --> 00:24:00,640
then you know that the player is lit or

647
00:23:58,880 --> 00:24:02,799
the entity is literally embedded in

648
00:24:00,640 --> 00:24:06,640
geometry and needs to be moved out

649
00:24:02,798 --> 00:24:09,119
of that geometry right so we kind of

650
00:24:06,640 --> 00:24:09,120
need

651
00:24:13,440 --> 00:24:33,840
a strategy for that right

652
00:24:16,558 --> 00:24:33,839
and i'm not sure

653
00:24:35,679 --> 00:24:40,080
i'm i'm gonna say something now and it

654
00:24:37,519 --> 00:24:47,119
may be totally false

655
00:24:40,079 --> 00:24:52,158
but if you are in a cell

656
00:24:47,119 --> 00:24:52,158
that is partially colliding

657
00:24:53,519 --> 00:25:02,879
we could allow you to move toward

658
00:24:58,159 --> 00:25:02,880
the part that isn't right

659
00:25:03,359 --> 00:25:07,199
so that's thing a

660
00:25:07,839 --> 00:25:14,319
thing b is that

661
00:25:10,960 --> 00:25:16,640
if we detect that there that all of them

662
00:25:14,319 --> 00:25:19,599
are colliding

663
00:25:16,640 --> 00:25:20,480
then we could try to move you in a

664
00:25:19,599 --> 00:25:23,359
direction

665
00:25:20,480 --> 00:25:23,679
that is towards some place you can go

666
00:25:23,359 --> 00:25:25,439
and

667
00:25:23,679 --> 00:25:27,360
that's the part that's a little tricky

668
00:25:25,440 --> 00:25:30,960
because how would we know

669
00:25:27,359 --> 00:25:30,959
where that is right

670
00:25:33,278 --> 00:25:39,359
how would we know where you actually can

671
00:25:36,640 --> 00:25:39,360
be placed

672
00:25:40,000 --> 00:25:43,679
and i guess you just have to do a very

673
00:25:41,839 --> 00:25:46,158
wide search at that point so it's just

674
00:25:43,679 --> 00:25:50,480
kind of like a fallback

675
00:25:46,159 --> 00:25:50,480
kind of a thing um

676
00:25:51,679 --> 00:25:56,080
so yeah so this is very tricky but i'm

677
00:25:54,400 --> 00:25:58,400
liking where it's going

678
00:25:56,079 --> 00:25:59,439
so like for example in here what you can

679
00:25:58,400 --> 00:26:02,159
see is

680
00:25:59,440 --> 00:26:04,240
this probably wants to be done a little

681
00:26:02,159 --> 00:26:07,520
bit differently

682
00:26:04,240 --> 00:26:11,440
probably what we want to do is say get

683
00:26:07,519 --> 00:26:13,839
closest point in box and when we do get

684
00:26:11,440 --> 00:26:17,600
closest point in box

685
00:26:13,839 --> 00:26:20,240
we probably want to allow you to

686
00:26:17,599 --> 00:26:22,399
in fact do we just want to allow you to

687
00:26:20,240 --> 00:26:26,400
move anywhere in the box that's

688
00:26:22,400 --> 00:26:30,960
towards corners that are open right

689
00:26:26,400 --> 00:26:30,960
so what we could do is say uh

690
00:26:33,679 --> 00:26:37,038
trying to think of the most efficient

691
00:26:34,720 --> 00:26:39,519
way you could code this but like we

692
00:26:37,038 --> 00:26:41,200
look at the corners of the box so we

693
00:26:39,519 --> 00:26:43,440
when we get the closest point

694
00:26:41,200 --> 00:26:45,038
that closest point is going to be on

695
00:26:43,440 --> 00:26:48,640
like one of these

696
00:26:45,038 --> 00:26:51,519
features right um

697
00:26:48,640 --> 00:26:54,559
either it's inside the box itself or

698
00:26:51,519 --> 00:26:56,558
it's you know it's features

699
00:26:54,558 --> 00:26:58,480
we should then be able to say that

700
00:26:56,558 --> 00:27:02,240
displacement

701
00:26:58,480 --> 00:27:05,360
is going to it would have like

702
00:27:02,240 --> 00:27:08,798
we only need to check that displacement

703
00:27:05,359 --> 00:27:09,269
so so i'm thinking that it's more like

704
00:27:08,798 --> 00:27:12,319
sine

705
00:27:09,269 --> 00:27:14,480
[Music]

706
00:27:12,319 --> 00:27:14,480
uh

707
00:27:16,720 --> 00:27:21,839
it's more like sine of

708
00:27:28,798 --> 00:27:34,879
didn't we have a sign or zero looks like

709
00:27:34,319 --> 00:27:37,918
we don't

710
00:27:34,880 --> 00:27:37,919
have a sign or zero

711
00:27:38,880 --> 00:27:45,760
i thought we did for the um

712
00:27:42,240 --> 00:27:49,839
octagonal the octagon thing

713
00:27:45,759 --> 00:27:49,839
um but i guess we don't

714
00:27:50,079 --> 00:27:54,480
so but it's sort of like i just want to

715
00:27:52,240 --> 00:27:57,599
know what the sign of this thing is

716
00:27:54,480 --> 00:27:59,839
right uh which direction are we going to

717
00:27:57,599 --> 00:27:59,839
look

718
00:28:00,839 --> 00:28:03,839
and

719
00:28:06,720 --> 00:28:11,919
so yeah like i think we can just do

720
00:28:09,200 --> 00:28:11,919
something like

721
00:28:14,839 --> 00:28:20,319
um

722
00:28:16,159 --> 00:28:22,159
so dir offset or something like a

723
00:28:20,319 --> 00:28:25,599
directional offset

724
00:28:22,159 --> 00:28:26,640
and we just say hey what's the direction

725
00:28:25,599 --> 00:28:30,079
this thing is going

726
00:28:26,640 --> 00:28:31,679
so we have the delta right and it equals

727
00:28:30,079 --> 00:28:33,519
or actually we don't even need that it's

728
00:28:31,679 --> 00:28:37,120
it's literally just like

729
00:28:33,519 --> 00:28:37,918
um you can see what direction we would

730
00:28:37,119 --> 00:28:39,439
be going

731
00:28:37,919 --> 00:28:41,278
um and in fact i guess we have to do

732
00:28:39,440 --> 00:28:44,640
that in here right

733
00:28:41,278 --> 00:28:46,798
so we produce the test p

734
00:28:44,640 --> 00:28:47,759
and the 2p right so we have the closest

735
00:28:46,798 --> 00:28:49,599
point

736
00:28:47,759 --> 00:28:51,359
in the box and we just see whether or

737
00:28:49,599 --> 00:28:56,558
not that motion

738
00:28:51,359 --> 00:28:56,558
would have been open right um

739
00:28:57,599 --> 00:29:01,439
and i guess i'll do it here you might be

740
00:28:59,278 --> 00:29:03,278
able to save this work because it would

741
00:29:01,440 --> 00:29:05,919
be basically the same

742
00:29:03,278 --> 00:29:07,200
um but so here's us doing that

743
00:29:05,919 --> 00:29:10,880
computation

744
00:29:07,200 --> 00:29:12,558
right and we say get the closest point

745
00:29:10,880 --> 00:29:14,960
in this voxel cell

746
00:29:12,558 --> 00:29:15,599
uh we then just say well we have the

747
00:29:14,960 --> 00:29:19,759
test

748
00:29:15,599 --> 00:29:23,599
p right and we have the from p

749
00:29:19,759 --> 00:29:27,119
so we know we are coming from here okay

750
00:29:23,599 --> 00:29:30,319
what that did uh we're coming from here

751
00:29:27,119 --> 00:29:33,439
uh so we want to know like is the from p

752
00:29:30,319 --> 00:29:37,359
less than the test px

753
00:29:33,440 --> 00:29:40,399
right like like are we going

754
00:29:37,359 --> 00:29:44,558
in are we going from

755
00:29:40,398 --> 00:29:48,879
a lower value to a higher value of x

756
00:29:44,558 --> 00:29:51,678
and if we are we want to look at the

757
00:29:48,880 --> 00:29:55,520
far end of the voxel if not we want to

758
00:29:51,679 --> 00:29:59,600
look at the close end of the voxel in x

759
00:29:55,519 --> 00:30:02,480
and if we just do this then we know

760
00:29:59,599 --> 00:30:04,398
which part of the voxel we care about

761
00:30:02,480 --> 00:30:06,798
right

762
00:30:04,398 --> 00:30:08,479
and so from that position it seems like

763
00:30:06,798 --> 00:30:11,918
then we could tell

764
00:30:08,480 --> 00:30:14,960
like do we

765
00:30:11,919 --> 00:30:15,360
need to stop or not based on whether the

766
00:30:14,960 --> 00:30:17,278
stuff

767
00:30:15,359 --> 00:30:20,319
in that direction is positive or

768
00:30:17,278 --> 00:30:23,278
negative it's kind of a long shot

769
00:30:20,319 --> 00:30:24,398
but i want to see what that does so if

770
00:30:23,278 --> 00:30:27,200
we try that

771
00:30:24,398 --> 00:30:27,599
and i i basically say like okay let's

772
00:30:27,200 --> 00:30:30,240
let's

773
00:30:27,599 --> 00:30:32,558
nerf this saucy gentleman here for a

774
00:30:30,240 --> 00:30:32,558
second

775
00:30:32,960 --> 00:30:37,200
uh and let's just try a different if

776
00:30:35,278 --> 00:30:40,398
statement

777
00:30:37,200 --> 00:30:41,519
where instead of testing the entire

778
00:30:40,398 --> 00:30:43,599
voxel

779
00:30:41,519 --> 00:30:45,519
we're just going to test a subset of the

780
00:30:43,599 --> 00:30:50,240
voxel

781
00:30:45,519 --> 00:30:54,079
and that subset is specifically the part

782
00:30:50,240 --> 00:30:57,200
which we just computed right uh in fact

783
00:30:54,079 --> 00:30:59,759
we just only test one that seems

784
00:30:57,200 --> 00:31:01,840
nuts and i can't imagine this will work

785
00:30:59,759 --> 00:31:07,359
but

786
00:31:01,839 --> 00:31:07,359
i don't know i'm gonna try it i guess

787
00:31:14,159 --> 00:31:17,440
um i don't imagine that will do anything

788
00:31:16,880 --> 00:31:20,000
good but

789
00:31:17,440 --> 00:31:21,200
i just want to see like so if you allow

790
00:31:20,000 --> 00:31:25,599
people to always move

791
00:31:21,200 --> 00:31:30,319
towards whatever part of the vauxhall

792
00:31:25,599 --> 00:31:33,359
uh is positive

793
00:31:30,319 --> 00:31:36,319
what happens right and i don't know

794
00:31:33,359 --> 00:31:38,079
so i'm going to test this on maybe some

795
00:31:36,319 --> 00:31:41,439
of these floating heads over here

796
00:31:38,079 --> 00:31:44,079
to see what they do um i have no idea

797
00:31:41,440 --> 00:31:44,080
what they're going to do

798
00:31:44,398 --> 00:31:48,239
but we'll see so if i if i kind of come

799
00:31:46,240 --> 00:31:52,079
through here right

800
00:31:48,240 --> 00:31:52,380
um or these two together

801
00:31:52,079 --> 00:31:55,478
uh

802
00:31:52,380 --> 00:31:55,479
[Music]

803
00:31:58,319 --> 00:32:01,519
so it's not like catastrophic or

804
00:32:00,558 --> 00:32:05,599
anything

805
00:32:01,519 --> 00:32:08,319
right it seems to still work sort of

806
00:32:05,599 --> 00:32:09,759
uh and and and those guys don't get

807
00:32:08,319 --> 00:32:11,839
stuck anymore

808
00:32:09,759 --> 00:32:14,000
so things that weren't stuck to begin

809
00:32:11,839 --> 00:32:16,398
with don't seem to be getting stuck

810
00:32:14,000 --> 00:32:17,359
in that way things that are currently

811
00:32:16,398 --> 00:32:20,079
stuck

812
00:32:17,359 --> 00:32:21,119
do still get stuck like the glove could

813
00:32:20,079 --> 00:32:24,558
not get out

814
00:32:21,119 --> 00:32:25,759
so that doesn't help um but it's at

815
00:32:24,558 --> 00:32:29,839
least interesting

816
00:32:25,759 --> 00:32:29,839
right uh

817
00:32:30,960 --> 00:32:38,640
it's that's at least interesting

818
00:32:34,398 --> 00:32:38,639
so that shows a little bit of promise uh

819
00:32:38,720 --> 00:32:44,720
yeah so um

820
00:32:42,640 --> 00:32:45,679
i don't know i might start i might

821
00:32:44,720 --> 00:32:47,919
actually leave that in for a little

822
00:32:45,679 --> 00:32:47,919
while

823
00:32:52,640 --> 00:32:57,840
yeah i might leave that in for a little

824
00:32:53,919 --> 00:32:57,840
while um

825
00:32:59,919 --> 00:33:03,360
so that looks like no because then that

826
00:33:01,679 --> 00:33:07,759
looks like they they got stuck

827
00:33:03,359 --> 00:33:10,319
right see they got stuck uh

828
00:33:07,759 --> 00:33:11,359
on each other at least a little bit

829
00:33:10,319 --> 00:33:13,278
right

830
00:33:11,359 --> 00:33:14,479
where they're trying to move crosswise

831
00:33:13,278 --> 00:33:17,839
although well

832
00:33:14,480 --> 00:33:18,960
actually that's i guess what you would

833
00:33:17,839 --> 00:33:22,319
expect because

834
00:33:18,960 --> 00:33:24,240
they are trying to move if they're both

835
00:33:22,319 --> 00:33:26,798
trying to move to squares

836
00:33:24,240 --> 00:33:28,079
where they're where they're actually are

837
00:33:26,798 --> 00:33:30,079
pushing into each other

838
00:33:28,079 --> 00:33:31,519
they don't have any ais so they're not

839
00:33:30,079 --> 00:33:32,000
smart enough to know that they shouldn't

840
00:33:31,519 --> 00:33:38,640
do that

841
00:33:32,000 --> 00:33:42,880
why can i not move into that square

842
00:33:38,640 --> 00:33:46,799
what's that about oh no

843
00:33:42,880 --> 00:33:46,799
this dude is like stuck underground

844
00:33:48,558 --> 00:33:55,200
that's crazy so he's occupying that

845
00:33:51,440 --> 00:33:55,200
square and somehow got placed down there

846
00:33:55,519 --> 00:34:00,079
not a great sign um

847
00:34:01,919 --> 00:34:08,000
so i'm okay with that i might leave that

848
00:34:04,319 --> 00:34:08,000
in for a little bit um

849
00:34:09,599 --> 00:34:12,639
i'm at least gonna leave the code path

850
00:34:11,119 --> 00:34:15,679
in there for playing around with

851
00:34:12,639 --> 00:34:18,838
um but again this doesn't really help us

852
00:34:15,679 --> 00:34:21,760
if uh so so

853
00:34:18,838 --> 00:34:24,878
the fundamental problem of if something

854
00:34:21,760 --> 00:34:29,359
starts out colliding uh we

855
00:34:24,878 --> 00:34:31,679
don't have a solution for this right

856
00:34:29,358 --> 00:34:33,358
so my assumption is that if something

857
00:34:31,679 --> 00:34:34,159
starts out colliding what we should

858
00:34:33,358 --> 00:34:37,519
probably do

859
00:34:34,159 --> 00:34:39,599
is just allow the motion um

860
00:34:37,519 --> 00:34:41,599
and if i remember correctly like we

861
00:34:39,599 --> 00:34:45,039
couldn't do that

862
00:34:41,599 --> 00:34:48,159
like this part here uh

863
00:34:45,039 --> 00:34:51,279
we can't do because if we just

864
00:34:48,159 --> 00:34:51,280
allow the motion

865
00:34:52,398 --> 00:34:57,039
anytime uh

866
00:34:55,760 --> 00:34:59,760
you can just tunnel through anything you

867
00:34:57,039 --> 00:35:00,480
want right so we can't just set this to

868
00:34:59,760 --> 00:35:03,839
2p

869
00:35:00,480 --> 00:35:03,838
and call it a day

870
00:35:14,838 --> 00:35:17,838
although

871
00:35:22,800 --> 00:35:26,400
thinking through that the only reason

872
00:35:25,358 --> 00:35:29,679
that's true

873
00:35:26,400 --> 00:35:33,838
is because currently we don't actually

874
00:35:29,679 --> 00:35:36,879
consider the placement

875
00:35:33,838 --> 00:35:40,078
move to have worked if there's only

876
00:35:36,880 --> 00:35:44,559
one cell

877
00:35:40,079 --> 00:35:48,240
okay so actually we might

878
00:35:44,559 --> 00:35:48,239
we might be able to do that

879
00:35:57,440 --> 00:36:01,119
i mean i'm kind of leaning towards

880
00:35:59,519 --> 00:36:04,639
actually just doing this

881
00:36:01,119 --> 00:36:07,358
in the stack way like like can we just

882
00:36:04,639 --> 00:36:10,239
actually have the voxel go the way the

883
00:36:07,358 --> 00:36:10,239
voxel goes

884
00:36:10,838 --> 00:36:13,838
like

885
00:36:16,800 --> 00:36:22,960
like can we just say all right

886
00:36:20,320 --> 00:36:23,440
so let's slightly change this let's

887
00:36:22,960 --> 00:36:25,679
start

888
00:36:23,440 --> 00:36:26,960
in the voxel so we know like we did the

889
00:36:25,679 --> 00:36:30,399
from p2p

890
00:36:26,960 --> 00:36:32,880
nonsense right so

891
00:36:30,400 --> 00:36:34,160
what if we just actually do a thing

892
00:36:32,880 --> 00:36:37,280
where we say

893
00:36:34,159 --> 00:36:37,279
hey um

894
00:36:37,358 --> 00:36:41,440
let's just make a stack and let's

895
00:36:39,280 --> 00:36:44,160
pathfind through the voxel

896
00:36:41,440 --> 00:36:44,159
for the motion

897
00:36:44,800 --> 00:36:48,720
because then we could then what we could

898
00:36:46,800 --> 00:36:51,839
do is say look

899
00:36:48,719 --> 00:36:54,159
if you start out completely inside

900
00:36:51,838 --> 00:36:55,279
we just accept the motion that you

901
00:36:54,159 --> 00:36:58,879
requested

902
00:36:55,280 --> 00:36:58,880
right um

903
00:36:59,679 --> 00:37:02,639
because if we can't find anywhere else

904
00:37:01,119 --> 00:37:04,880
to put you then we're going to let you

905
00:37:02,639 --> 00:37:04,879
go

906
00:37:06,800 --> 00:37:11,039
whereas if we ever find any place that

907
00:37:09,838 --> 00:37:13,199
could have

908
00:37:11,039 --> 00:37:15,119
that had any things that were open at

909
00:37:13,199 --> 00:37:18,159
all

910
00:37:15,119 --> 00:37:22,800
then we won't right we will consider

911
00:37:18,159 --> 00:37:25,039
that successful

912
00:37:22,800 --> 00:37:26,160
in fact we could even do that right now

913
00:37:25,039 --> 00:37:29,759
in a crappy way

914
00:37:26,159 --> 00:37:29,759
right you would just say this

915
00:37:32,719 --> 00:37:37,838
um and then what you would do is you'd

916
00:37:35,358 --> 00:37:37,838
take

917
00:37:38,719 --> 00:37:41,039
this

918
00:37:48,079 --> 00:37:52,560
i i should probably not quite do it that

919
00:38:02,838 --> 00:38:05,838
way

920
00:38:08,159 --> 00:38:11,199
so what i could do here is say all right

921
00:38:10,639 --> 00:38:14,239
let's

922
00:38:11,199 --> 00:38:16,159
set best p equal to 2p

923
00:38:14,239 --> 00:38:18,078
in the case where there wasn't anything

924
00:38:16,159 --> 00:38:21,118
open so we could do that

925
00:38:18,079 --> 00:38:24,880
right away by just saying like oh okay

926
00:38:21,119 --> 00:38:27,200
well um if

927
00:38:24,880 --> 00:38:27,200
uh

928
00:38:29,599 --> 00:38:34,720
if all of these are occupied

929
00:38:36,000 --> 00:38:39,920
so basically you and them all together

930
00:38:43,119 --> 00:38:50,720
like so um i could just say

931
00:38:46,639 --> 00:38:54,559
like any open equals any open

932
00:38:50,719 --> 00:38:57,838
or not all closed

933
00:38:54,559 --> 00:38:59,440
right and now you would know like if you

934
00:38:57,838 --> 00:39:01,599
found somewhere to put the player

935
00:38:59,440 --> 00:39:02,480
then you prevent the move but if you

936
00:39:01,599 --> 00:39:05,680
don't

937
00:39:02,480 --> 00:39:08,719
then you don't right

938
00:39:05,679 --> 00:39:10,639
um and so in theory that would allow

939
00:39:08,719 --> 00:39:12,319
interpenetrating things to get out of

940
00:39:10,639 --> 00:39:16,159
their penetration

941
00:39:12,320 --> 00:39:17,680
uh fairly easily um i love the springs

942
00:39:16,159 --> 00:39:20,719
the undamped springs

943
00:39:17,679 --> 00:39:23,519
so uh and and you'd be fine right

944
00:39:20,719 --> 00:39:25,199
uh and so the only problem there again

945
00:39:23,519 --> 00:39:25,920
is that like we're gonna be allowing

946
00:39:25,199 --> 00:39:28,719
things

947
00:39:25,920 --> 00:39:30,639
that maybe we shouldn't allow um i'm not

948
00:39:28,719 --> 00:39:32,799
sure

949
00:39:30,639 --> 00:39:34,319
like i can't say for sure why is it just

950
00:39:32,800 --> 00:39:37,039
because it's too small

951
00:39:34,320 --> 00:39:37,838
that we end up allowing that to move

952
00:39:37,039 --> 00:39:39,358
through

953
00:39:37,838 --> 00:39:40,719
because i guess it's because we don't

954
00:39:39,358 --> 00:39:42,239
check enough behind you but shouldn't

955
00:39:40,719 --> 00:39:45,279
the place where you start

956
00:39:42,239 --> 00:39:46,559
shouldn't that have been valid it seems

957
00:39:45,280 --> 00:39:48,160
a little fishy to me

958
00:39:46,559 --> 00:39:49,599
so something's a little off i feel like

959
00:39:48,159 --> 00:39:52,159
we've got issues here

960
00:39:49,599 --> 00:39:53,039
right uh i mean this this isn't great as

961
00:39:52,159 --> 00:39:55,118
it is but it

962
00:39:53,039 --> 00:39:56,559
shouldn't be as bad as that so i feel

963
00:39:55,119 --> 00:39:58,000
like something's up

964
00:39:56,559 --> 00:40:00,400
you can see here we're just saying like

965
00:39:58,000 --> 00:40:02,960
if all of these are occupied

966
00:40:00,400 --> 00:40:03,760
um then you can't place it there whereas

967
00:40:02,960 --> 00:40:06,720
if if

968
00:40:03,760 --> 00:40:08,839
uh if any of them were then then there's

969
00:40:06,719 --> 00:40:11,679
an any open so that it should uh

970
00:40:08,838 --> 00:40:12,719
allow uh you to place it if if any of

971
00:40:11,679 --> 00:40:15,679
them were open

972
00:40:12,719 --> 00:40:16,239
or if if there were no places to place

973
00:40:15,679 --> 00:40:20,239
uh

974
00:40:16,239 --> 00:40:20,239
the thing right um

975
00:40:21,039 --> 00:40:25,838
so yeah i don't know

976
00:40:28,318 --> 00:40:31,679
i don't know why that would continue

977
00:40:30,000 --> 00:40:32,800
especially because you've got the apron

978
00:40:31,679 --> 00:40:35,039
size

979
00:40:32,800 --> 00:40:36,079
you know happening here so it should be

980
00:40:35,039 --> 00:40:40,239
like looking

981
00:40:36,079 --> 00:40:40,240
slightly behind um

982
00:40:40,400 --> 00:40:43,358
and that just seems

983
00:40:43,760 --> 00:40:50,640
it doesn't seem right um

984
00:40:47,440 --> 00:40:53,679
although i suppose you know

985
00:40:50,639 --> 00:40:57,440
uh with this still in there

986
00:40:53,679 --> 00:40:59,679
that that may that part may be busted

987
00:40:57,440 --> 00:41:00,800
but it just it doesn't quite seem

988
00:40:59,679 --> 00:41:02,480
correct

989
00:41:00,800 --> 00:41:04,480
uh yeah and he doesn't even need it

990
00:41:02,480 --> 00:41:05,679
right it can tunnel through even without

991
00:41:04,480 --> 00:41:06,400
that so it's just it seems a little bit

992
00:41:05,679 --> 00:41:07,838
busted

993
00:41:06,400 --> 00:41:09,760
so i'm a little bit worried and i feel

994
00:41:07,838 --> 00:41:11,920
like more or less uh

995
00:41:09,760 --> 00:41:13,839
at this point i don't think i'm gonna

996
00:41:11,920 --> 00:41:15,280
have a lot of choice but to

997
00:41:13,838 --> 00:41:16,719
have better visualization of what's

998
00:41:15,280 --> 00:41:17,920
going on as we kind of explore through

999
00:41:16,719 --> 00:41:20,159
here because

1000
00:41:17,920 --> 00:41:21,440
at any point when i'm doing this i could

1001
00:41:20,159 --> 00:41:24,000
just have a bug

1002
00:41:21,440 --> 00:41:24,800
right and without being able to see more

1003
00:41:24,000 --> 00:41:28,719
carefully

1004
00:41:24,800 --> 00:41:31,760
what's actually going on um

1005
00:41:28,719 --> 00:41:33,679
i won't be able to

1006
00:41:31,760 --> 00:41:35,839
i really won't be able to like debug

1007
00:41:33,679 --> 00:41:36,399
right i won't be able to know if a test

1008
00:41:35,838 --> 00:41:39,759
that i did

1009
00:41:36,400 --> 00:41:42,800
failed uh because of a

1010
00:41:39,760 --> 00:41:44,800
because it actually was a bad approach

1011
00:41:42,800 --> 00:41:49,039
or if it failed because

1012
00:41:44,800 --> 00:41:50,560
i just didn't have you know i i i had

1013
00:41:49,039 --> 00:41:52,480
some bug in there that

1014
00:41:50,559 --> 00:41:53,838
made it appear like it didn't work when

1015
00:41:52,480 --> 00:41:55,440
it should have

1016
00:41:53,838 --> 00:41:56,960
um so there's a couple different routes

1017
00:41:55,440 --> 00:41:58,079
i can go with it but you know that's

1018
00:41:56,960 --> 00:41:59,358
just something that was in my head at

1019
00:41:58,079 --> 00:42:03,359
that point

1020
00:41:59,358 --> 00:42:06,239
so looking at this

1021
00:42:03,358 --> 00:42:07,519
yeah i would say like it's weird that

1022
00:42:06,239 --> 00:42:10,959
part is weird

1023
00:42:07,519 --> 00:42:14,000
because it seems to me like any open

1024
00:42:10,960 --> 00:42:16,400
should always be occurring um

1025
00:42:14,000 --> 00:42:17,920
because wherever i placed the thing last

1026
00:42:16,400 --> 00:42:20,318
time should still be valid

1027
00:42:17,920 --> 00:42:22,079
as people are moving around it seems

1028
00:42:20,318 --> 00:42:23,759
like it should say oh yeah there were

1029
00:42:22,079 --> 00:42:25,359
places you could have been

1030
00:42:23,760 --> 00:42:27,440
uh it's just that they weren't they

1031
00:42:25,358 --> 00:42:29,920
didn't have entirely open edges so we

1032
00:42:27,440 --> 00:42:31,599
didn't place you there or whatever

1033
00:42:29,920 --> 00:42:33,039
or in the other case it's like we looked

1034
00:42:31,599 --> 00:42:33,920
at the at the place where you were

1035
00:42:33,039 --> 00:42:36,079
trying to go and we

1036
00:42:33,920 --> 00:42:37,838
we said that was closed so we stopped

1037
00:42:36,079 --> 00:42:40,000
you um

1038
00:42:37,838 --> 00:42:41,199
but you know it shouldn't have actually

1039
00:42:40,000 --> 00:42:45,838
triggered that

1040
00:42:41,199 --> 00:42:45,838
um that any open case

1041
00:42:46,480 --> 00:42:51,599
so that seems weird uh that seems weird

1042
00:42:49,280 --> 00:42:51,599
to me

1043
00:42:52,639 --> 00:42:59,838
to be completely honest um

1044
00:43:46,639 --> 00:43:57,759
yeah i don't know

1045
00:43:55,599 --> 00:44:00,880
i don't know but that seems weird that

1046
00:43:57,760 --> 00:44:00,880
doesn't make sense to me

1047
00:44:01,519 --> 00:44:05,440
it doesn't feel like that's what that

1048
00:44:02,880 --> 00:44:05,440
should be doing

1049
00:44:06,838 --> 00:44:09,838
um

1050
00:44:15,358 --> 00:44:20,880
so if i were to go take a look

1051
00:44:18,400 --> 00:44:22,880
closer i'm curious if if what we have

1052
00:44:20,880 --> 00:44:24,720
for visualization currently can give me

1053
00:44:22,880 --> 00:44:28,318
at least some clues before i have to go

1054
00:44:24,719 --> 00:44:28,318
further down that particular rabbit hole

1055
00:44:29,199 --> 00:44:35,358
um so one of the things you can see

1056
00:44:32,400 --> 00:44:35,358
is that like

1057
00:44:35,440 --> 00:44:40,159
on a particular frame i guess would be

1058
00:44:38,400 --> 00:44:40,720
nice if we had a little bit more of a

1059
00:44:40,159 --> 00:44:43,519
like

1060
00:44:40,719 --> 00:44:46,799
of an idea of yeah i kind of need a good

1061
00:44:43,519 --> 00:44:46,800
like vantage point there yeah

1062
00:44:48,318 --> 00:44:52,960
so you can kind of see like as it moves

1063
00:44:50,880 --> 00:44:55,200
it moves very slowly through there so

1064
00:44:52,960 --> 00:44:57,519
it's like it's like accepting the first

1065
00:44:55,199 --> 00:45:01,358
it looks like it's doing

1066
00:44:57,519 --> 00:45:04,880
it is it is literally failing

1067
00:45:01,358 --> 00:45:07,920
that check the any open check is

1068
00:45:04,880 --> 00:45:10,960
not coming back true but how can that be

1069
00:45:07,920 --> 00:45:13,920
because especially when you add an apron

1070
00:45:10,960 --> 00:45:15,358
at the beginning so you're looking

1071
00:45:13,920 --> 00:45:19,280
somewhat behind you

1072
00:45:15,358 --> 00:45:21,358
right how can it possibly be the case

1073
00:45:19,280 --> 00:45:23,119
that you couldn't have found a place

1074
00:45:21,358 --> 00:45:26,159
where at least one

1075
00:45:23,119 --> 00:45:30,318
of the things was unoccupied

1076
00:45:26,159 --> 00:45:33,440
right uh it

1077
00:45:30,318 --> 00:45:36,719
doesn't make a whole lot of sense now

1078
00:45:33,440 --> 00:45:36,720
this part uh

1079
00:45:38,719 --> 00:45:43,439
i suppose we should maybe think of this

1080
00:45:40,880 --> 00:45:46,559
more like a tetrahedron

1081
00:45:43,440 --> 00:45:49,679
and so like you know if if

1082
00:45:46,559 --> 00:45:51,440
this had actually worked and this hadn't

1083
00:45:49,679 --> 00:45:52,000
i have some ideas about why that would

1084
00:45:51,440 --> 00:45:54,960
be

1085
00:45:52,000 --> 00:45:55,280
the weird part is this one requires that

1086
00:45:54,960 --> 00:45:58,960
you

1087
00:45:55,280 --> 00:45:59,680
be able to move um through the entire

1088
00:45:58,960 --> 00:46:03,440
cube

1089
00:45:59,679 --> 00:46:03,440
right or it won't accept the motion

1090
00:46:03,760 --> 00:46:06,800
uh and so when i uh come through here

1091
00:46:06,480 --> 00:46:09,760
and

1092
00:46:06,800 --> 00:46:11,519
and we just say like okay you know i'm

1093
00:46:09,760 --> 00:46:13,520
still able to push through

1094
00:46:11,519 --> 00:46:14,719
my question is like how is that even

1095
00:46:13,519 --> 00:46:17,440
remotely possible

1096
00:46:14,719 --> 00:46:18,159
and if i turn off the any open part of

1097
00:46:17,440 --> 00:46:29,039
that

1098
00:46:18,159 --> 00:46:32,559
right so that's not happening

1099
00:46:29,039 --> 00:46:34,239
uh right i can't test it

1100
00:46:32,559 --> 00:46:36,318
i guess what i could do is move the

1101
00:46:34,239 --> 00:46:39,199
glove up properly

1102
00:46:36,318 --> 00:46:42,159
so it's not starting down in a bad

1103
00:46:39,199 --> 00:46:42,159
location like that

1104
00:46:45,519 --> 00:46:49,119
i could probably do something like that

1105
00:46:52,800 --> 00:46:59,680
so here in the add player call you got

1106
00:46:56,159 --> 00:47:03,199
you know all this nonsense

1107
00:46:59,679 --> 00:47:05,440
you place uh like the glove p

1108
00:47:03,199 --> 00:47:06,960
at whatever the position is i can say

1109
00:47:05,440 --> 00:47:10,000
something

1110
00:47:06,960 --> 00:47:25,599
uh like that and just force the glove

1111
00:47:10,000 --> 00:47:28,880
to not be uh interpenetrating right

1112
00:47:25,599 --> 00:47:30,480
so i guess you can

1113
00:47:28,880 --> 00:47:32,559
well but it's still allowed to go

1114
00:47:30,480 --> 00:47:33,838
straight through thing i i it's very

1115
00:47:32,559 --> 00:47:35,599
hard to tell like

1116
00:47:33,838 --> 00:47:37,679
this is very weird i feel like i must

1117
00:47:35,599 --> 00:47:40,559
have some kind of bugs

1118
00:47:37,679 --> 00:47:42,799
in here right because it doesn't feel

1119
00:47:40,559 --> 00:47:45,280
like it should be able to do that

1120
00:47:42,800 --> 00:47:46,960
and there's a bunch of things in there

1121
00:47:45,280 --> 00:47:48,000
that are still like i'm just like okay

1122
00:47:46,960 --> 00:47:49,440
yeah you could you could

1123
00:47:48,000 --> 00:47:51,679
this allows tunneling and that allows

1124
00:47:49,440 --> 00:47:52,720
tunneling so it's not like i'm surprised

1125
00:47:51,679 --> 00:47:54,960
that it's tunneling

1126
00:47:52,719 --> 00:47:56,558
but i am surprised that the way in which

1127
00:47:54,960 --> 00:47:58,480
it is tunneling currently

1128
00:47:56,559 --> 00:48:00,480
it's not what i would have expected it

1129
00:47:58,480 --> 00:48:07,039
to do right

1130
00:48:00,480 --> 00:48:10,159
um so that just seems really strange

1131
00:48:07,039 --> 00:48:11,599
it doesn't make a lot of sense to me how

1132
00:48:10,159 --> 00:48:13,920
that's working

1133
00:48:11,599 --> 00:48:13,920
um

1134
00:48:16,639 --> 00:48:20,078
i just i i literally have no idea i'm

1135
00:48:19,199 --> 00:48:23,039
i'm i i

1136
00:48:20,079 --> 00:48:24,400
feel like there must be some bugs in how

1137
00:48:23,039 --> 00:48:28,239
that's working

1138
00:48:24,400 --> 00:48:32,240
um can i can i tunnel the glove through

1139
00:48:28,239 --> 00:48:34,959
a door or only this guy

1140
00:48:32,239 --> 00:48:36,078
and it's it won't go through unless i

1141
00:48:34,960 --> 00:48:39,838
get up enough

1142
00:48:36,079 --> 00:48:42,480
sort of speed and i suppose

1143
00:48:39,838 --> 00:48:48,318
um but it definitely goes through right

1144
00:48:42,480 --> 00:48:50,880
i mean it certainly seems like it does

1145
00:48:48,318 --> 00:48:52,000
uh is there any way to get it to like

1146
00:48:50,880 --> 00:48:54,559
yeah

1147
00:48:52,000 --> 00:49:03,838
i guess i don't know maybe it doesn't i

1148
00:48:54,559 --> 00:49:03,839
feel like it does

1149
00:49:18,719 --> 00:49:24,078
i mean i guess what i can say is that

1150
00:49:20,960 --> 00:49:24,079
like all right so

1151
00:49:29,519 --> 00:49:33,920
so this case here is obviously

1152
00:49:32,318 --> 00:49:35,838
triggering though because

1153
00:49:33,920 --> 00:49:37,119
no matter what else you want to say if i

1154
00:49:35,838 --> 00:49:40,078
enable this case

1155
00:49:37,119 --> 00:49:40,800
it can tunnel trivially so that part's

1156
00:49:40,079 --> 00:49:44,000
obviously

1157
00:49:40,800 --> 00:49:46,800
busted um and so

1158
00:49:44,000 --> 00:49:48,639
maybe like we just first say okay figure

1159
00:49:46,800 --> 00:49:50,079
out why that's not working the way that

1160
00:49:48,639 --> 00:49:52,239
i think it should because like

1161
00:49:50,079 --> 00:49:54,000
why can can i just tunnel through that

1162
00:49:52,239 --> 00:49:57,679
guy trivially

1163
00:49:54,000 --> 00:50:00,400
so why is any open

1164
00:49:57,679 --> 00:50:02,639
when we look through here let me make

1165
00:50:00,400 --> 00:50:05,599
this 100 explicit

1166
00:50:02,639 --> 00:50:08,960
so any open is normally set to false

1167
00:50:05,599 --> 00:50:08,960
which means you didn't find anywhere

1168
00:50:09,519 --> 00:50:14,480
this code right um

1169
00:50:16,480 --> 00:50:21,039
i mean this code is is actually easier i

1170
00:50:19,440 --> 00:50:22,159
mean i don't even really need to do it

1171
00:50:21,039 --> 00:50:25,759
that way

1172
00:50:22,159 --> 00:50:29,199
um so let's just say this

1173
00:50:25,760 --> 00:50:29,200
any open here

1174
00:50:29,760 --> 00:50:33,520
right just says if these rectangles

1175
00:50:32,800 --> 00:50:37,039
intersect

1176
00:50:33,519 --> 00:50:40,800
then it's equal to true right um

1177
00:50:37,039 --> 00:50:43,039
and so in here we could just say like

1178
00:50:40,800 --> 00:50:43,039
uh

1179
00:50:44,400 --> 00:50:52,639
open counts equals zero um

1180
00:50:47,920 --> 00:50:56,800
or let's say closed count occupied count

1181
00:50:52,639 --> 00:50:56,799
um and we could just just count

1182
00:50:57,838 --> 00:51:04,239
um and so here you just do look if

1183
00:51:01,199 --> 00:51:08,399
there's something open

1184
00:51:04,239 --> 00:51:12,000
if the occupied count equals

1185
00:51:08,400 --> 00:51:12,000
you know vox dim cubed

1186
00:51:12,800 --> 00:51:15,839
or i should say it doesn't equal right

1187
00:51:15,039 --> 00:51:19,039
if there aren't

1188
00:51:15,838 --> 00:51:21,759
as many uh people occupying locations as

1189
00:51:19,039 --> 00:51:25,369
there are locations to occupy

1190
00:51:21,760 --> 00:51:29,300
then it's not opened right

1191
00:51:25,369 --> 00:51:29,299
[Music]

1192
00:51:30,559 --> 00:51:32,800
right

1193
00:51:33,838 --> 00:51:39,838
um and so at least now we know like okay

1194
00:51:38,159 --> 00:51:41,759
it there there isn't some weirdness with

1195
00:51:39,838 --> 00:51:43,920
the check right

1196
00:51:41,760 --> 00:51:45,119
and it is easy for it to tunnel through

1197
00:51:43,920 --> 00:51:47,280
at least that way

1198
00:51:45,119 --> 00:51:48,720
yeah it's pretty easy for it to tunnel

1199
00:51:47,280 --> 00:51:50,800
through right it's not really having

1200
00:51:48,719 --> 00:51:54,719
trouble going through

1201
00:51:50,800 --> 00:51:57,280
so that means that most of the time

1202
00:51:54,719 --> 00:51:58,239
it doesn't think there's anything there

1203
00:51:57,280 --> 00:52:00,960
are any

1204
00:51:58,239 --> 00:52:00,959
of them open

1205
00:52:02,559 --> 00:52:06,160
normally i would say that's because this

1206
00:52:04,318 --> 00:52:07,599
is happening in a loop so after you do

1207
00:52:06,159 --> 00:52:08,078
the first step of the loop while it's

1208
00:52:07,599 --> 00:52:11,359
open

1209
00:52:08,079 --> 00:52:12,000
but in here it's actually not allowed to

1210
00:52:11,358 --> 00:52:15,759
continue

1211
00:52:12,000 --> 00:52:18,159
if it doesn't find a place to to put

1212
00:52:15,760 --> 00:52:19,680
uh the player right or the place to put

1213
00:52:18,159 --> 00:52:24,318
the entity

1214
00:52:19,679 --> 00:52:24,318
so i'm not so that doesn't really make

1215
00:52:30,838 --> 00:52:35,679
sense

1216
00:52:33,119 --> 00:52:37,920
it's just a real puzzler how can the how

1217
00:52:35,679 --> 00:52:42,399
can it not have

1218
00:52:37,920 --> 00:52:46,720
any non-colliding

1219
00:52:42,400 --> 00:52:49,358
corners of the voxel

1220
00:52:46,719 --> 00:52:52,799
that just boggles my mind i i do not

1221
00:52:49,358 --> 00:52:52,799
fundamentally understand how that's

1222
00:52:58,838 --> 00:53:01,838
possible

1223
00:53:05,039 --> 00:53:09,599
um so assuming that the motion

1224
00:53:07,440 --> 00:53:11,679
displacement size itself

1225
00:53:09,599 --> 00:53:13,200
uh was the apron does that change

1226
00:53:11,679 --> 00:53:16,159
anything meaning if you give it

1227
00:53:13,199 --> 00:53:18,000
more room to search do you get worse or

1228
00:53:16,159 --> 00:53:19,598
better behavior

1229
00:53:18,000 --> 00:53:29,838
and this is just me trying to provoke

1230
00:53:19,599 --> 00:53:29,838
the thing right

1231
00:53:31,599 --> 00:53:36,160
yeah i just i fundamentally do not

1232
00:53:33,599 --> 00:53:39,838
understand what's going on

1233
00:53:36,159 --> 00:53:41,759
like i just i clearly just have no idea

1234
00:53:39,838 --> 00:53:44,000
i think this routine is working one way

1235
00:53:41,760 --> 00:53:47,599
and it is not working that way

1236
00:53:44,000 --> 00:53:47,599
right um

1237
00:53:48,159 --> 00:53:53,118
because it should not matter how

1238
00:53:51,599 --> 00:53:56,480
you put like you shouldn't be able to

1239
00:53:53,119 --> 00:54:01,039
get the two different results there

1240
00:53:56,480 --> 00:54:03,679
um and you clearly can

1241
00:54:01,039 --> 00:54:04,639
right like how is it able to push in

1242
00:54:03,679 --> 00:54:06,480
like that

1243
00:54:04,639 --> 00:54:09,199
when it's so obvious that you have a

1244
00:54:06,480 --> 00:54:11,679
thing behind you that

1245
00:54:09,199 --> 00:54:12,879
that should be occupiable right and

1246
00:54:11,679 --> 00:54:17,039
you're checking a whole

1247
00:54:12,880 --> 00:54:19,358
point one behind you for places to put

1248
00:54:17,039 --> 00:54:19,358
um

1249
00:54:20,639 --> 00:54:26,719
that that just makes no no sense at all

1250
00:54:24,400 --> 00:54:26,720
um

1251
00:54:30,480 --> 00:54:34,480
that that makes literally no sense at

1252
00:54:32,079 --> 00:54:34,480
all to me

1253
00:54:36,159 --> 00:54:40,480
so what are we doing wrong how are we

1254
00:54:39,280 --> 00:54:43,839
getting in a position

1255
00:54:40,480 --> 00:54:46,159
where the last frame we thought there

1256
00:54:43,838 --> 00:54:49,838
were plenty of places to put

1257
00:54:46,159 --> 00:54:51,279
both of the people uh and then on the

1258
00:54:49,838 --> 00:54:53,759
frame that comes

1259
00:54:51,280 --> 00:54:55,119
in we're like no there's nowhere to put

1260
00:54:53,760 --> 00:54:59,040
there's nowhere

1261
00:54:55,119 --> 00:55:01,358
nowhere nearby how is that possible

1262
00:54:59,039 --> 00:55:01,358
um

1263
00:55:03,358 --> 00:55:08,798
i guess because both entities are moving

1264
00:55:06,798 --> 00:55:10,400
and they're moving in a different way so

1265
00:55:08,798 --> 00:55:12,798
they each have different bounding box

1266
00:55:10,400 --> 00:55:12,798
sizes

1267
00:55:13,599 --> 00:55:21,838
i mean

1268
00:55:24,079 --> 00:55:31,200
but i mean this this literally requires

1269
00:55:28,719 --> 00:55:32,558
yeah i feel like do we just have some

1270
00:55:31,199 --> 00:55:35,679
kind of a bug

1271
00:55:32,559 --> 00:55:39,920
like with the way we're doing like

1272
00:55:35,679 --> 00:55:43,759
the intersection testing or something

1273
00:55:39,920 --> 00:55:43,760
like is this just wrong

1274
00:55:46,400 --> 00:55:51,440
you know or or like is there something

1275
00:55:48,960 --> 00:55:51,440
kind of like

1276
00:56:01,679 --> 00:56:17,838
because i don't i don't see it i'm not i

1277
00:56:04,239 --> 00:56:17,838
don't i don't understand

1278
00:56:23,358 --> 00:56:27,119
because the size of the voxel cell in

1279
00:56:26,239 --> 00:56:31,838
this case

1280
00:56:27,119 --> 00:56:31,838
is going to be like

1281
00:56:32,000 --> 00:56:38,318
or should be like quite small

1282
00:56:35,920 --> 00:56:38,318
you know

1283
00:56:41,599 --> 00:56:45,280
so i mean here's another thing let's

1284
00:56:43,440 --> 00:56:48,400
take this out of the equation

1285
00:56:45,280 --> 00:56:53,839
so you know what if we just said

1286
00:56:48,400 --> 00:56:59,838
look you don't you're we're not gonna um

1287
00:56:53,838 --> 00:56:59,838
fine uh

1288
00:57:02,079 --> 00:57:08,720
i don't really want that i want that

1289
00:57:05,519 --> 00:57:10,480
we're just gonna only do the first micro

1290
00:57:08,719 --> 00:57:13,598
move

1291
00:57:10,480 --> 00:57:15,440
right so now we know the loop so so just

1292
00:57:13,599 --> 00:57:17,920
in case i'm wrong

1293
00:57:15,440 --> 00:57:19,280
and we want to make sure the loop can't

1294
00:57:17,920 --> 00:57:22,798
be contributing

1295
00:57:19,280 --> 00:57:26,160
right i just want to know if the loop

1296
00:57:22,798 --> 00:57:26,719
can't be contributing yeah so we're only

1297
00:57:26,159 --> 00:57:29,920
taking

1298
00:57:26,719 --> 00:57:30,879
we're only doing the first step that

1299
00:57:29,920 --> 00:57:33,599
step

1300
00:57:30,880 --> 00:57:36,000
is only the size of one motion

1301
00:57:33,599 --> 00:57:39,039
displacement or lower

1302
00:57:36,000 --> 00:57:42,079
we are adding to it

1303
00:57:39,039 --> 00:57:44,960
one entire thing of that size

1304
00:57:42,079 --> 00:57:45,680
what am i missing guys like what am i

1305
00:57:44,960 --> 00:57:47,519
missing

1306
00:57:45,679 --> 00:57:48,719
because there's no way that should be

1307
00:57:47,519 --> 00:57:50,719
happening

1308
00:57:48,719 --> 00:57:52,798
like i cannot plausibly come up with an

1309
00:57:50,719 --> 00:57:56,239
argument for why that's happening

1310
00:57:52,798 --> 00:58:00,000
so something here

1311
00:57:56,239 --> 00:58:03,838
is odd i also don't know

1312
00:58:00,000 --> 00:58:03,838
like what is this about

1313
00:58:05,599 --> 00:58:08,960
yeah i was like what are those even

1314
00:58:07,039 --> 00:58:12,079
doing there

1315
00:58:08,960 --> 00:58:12,960
so like something's weird something's

1316
00:58:12,079 --> 00:58:23,839
very very

1317
00:58:12,960 --> 00:58:23,838
strange um

1318
00:58:51,760 --> 00:58:56,240
something is very very strange

1319
00:59:00,798 --> 00:59:05,199
and this code it's worth noting is

1320
00:59:03,760 --> 00:59:07,680
basically the same code

1321
00:59:05,199 --> 00:59:10,239
the only difference here is that you're

1322
00:59:07,679 --> 00:59:10,239
testing

1323
00:59:14,318 --> 00:59:20,719
you're testing what who's who is on the

1324
00:59:18,000 --> 00:59:22,000
grid and who is at their actual location

1325
00:59:20,719 --> 00:59:25,199
is different

1326
00:59:22,000 --> 00:59:27,599
depending on who's moving and so

1327
00:59:25,199 --> 00:59:28,960
you know i suppose that you know that

1328
00:59:27,599 --> 00:59:33,838
definitely matters

1329
00:59:28,960 --> 00:59:33,838
right um

1330
00:59:42,480 --> 00:59:45,599
yeah so i don't know i'm i'm about ready

1331
00:59:44,880 --> 00:59:47,519
to call it

1332
00:59:45,599 --> 00:59:48,798
i'm about ready to say like look i

1333
00:59:47,519 --> 00:59:50,239
obviously have no idea how this is

1334
00:59:48,798 --> 00:59:51,759
working i'm totally wrong about my

1335
00:59:50,239 --> 00:59:54,239
mental model

1336
00:59:51,760 --> 00:59:55,520
so it's time to like we have to have

1337
00:59:54,239 --> 00:59:58,399
debug capture

1338
00:59:55,519 --> 00:59:59,119
of this thing which is a big investment

1339
00:59:58,400 --> 01:00:01,119
right

1340
00:59:59,119 --> 01:00:03,599
so you don't do it unless you have to

1341
01:00:01,119 --> 01:00:06,318
but i think we're going to have to

1342
01:00:03,599 --> 01:00:10,318
um not because i think this collision

1343
01:00:06,318 --> 01:00:11,679
routine at the moment is very good

1344
01:00:10,318 --> 01:00:14,079
more just i don't feel like i'm going to

1345
01:00:11,679 --> 01:00:16,879
make good forward progress on it

1346
01:00:14,079 --> 01:00:17,920
if i don't understand why it's breaking

1347
01:00:16,880 --> 01:00:20,000
the way it's breaking

1348
01:00:17,920 --> 01:00:22,400
because it means there's something wrong

1349
01:00:20,000 --> 01:00:25,760
with my mental model

1350
01:00:22,400 --> 01:00:29,039
and while i don't want to spend you know

1351
01:00:25,760 --> 01:00:30,319
four hours or whatever writing something

1352
01:00:29,039 --> 01:00:31,519
to visualize it

1353
01:00:30,318 --> 01:00:34,400
i don't know that i'm gonna have a

1354
01:00:31,519 --> 01:00:37,440
choice right

1355
01:00:34,400 --> 01:00:39,440
um because without that i think we're

1356
01:00:37,440 --> 01:00:41,599
just dead in the water fundamentally

1357
01:00:39,440 --> 01:00:44,318
uh looking at what you know looking at

1358
01:00:41,599 --> 01:00:44,318
what we're looking at

1359
01:00:54,838 --> 01:00:57,838
so

1360
01:01:20,318 --> 01:01:25,519
i guess i'll ask you guys what do you

1361
01:01:23,358 --> 01:01:27,759
think

1362
01:01:25,519 --> 01:01:27,759
uh

1363
01:01:29,280 --> 01:01:34,480
do you think that we should

1364
01:01:34,960 --> 01:01:42,480
start the visualization process now

1365
01:01:38,239 --> 01:01:42,479
or do you think um

1366
01:01:43,199 --> 01:01:46,798
yeah what do you think oh by the way

1367
01:01:45,838 --> 01:01:50,639
suspect zero

1368
01:01:46,798 --> 01:01:54,000
um no the reason for the lag is because

1369
01:01:50,639 --> 01:01:55,679
uh it's it's hard to see because

1370
01:01:54,000 --> 01:01:56,960
it's it's difficult when you're just

1371
01:01:55,679 --> 01:01:58,239
looking when you're just popping into

1372
01:01:56,960 --> 01:02:01,280
some code like this

1373
01:01:58,239 --> 01:02:03,439
so do you see this code right here

1374
01:02:01,280 --> 01:02:05,359
um that says replace the visualization

1375
01:02:03,440 --> 01:02:07,358
this is actually looping

1376
01:02:05,358 --> 01:02:08,960
for every time we do a check on one of

1377
01:02:07,358 --> 01:02:12,239
those voxels

1378
01:02:08,960 --> 01:02:15,280
we're actually looping over uh

1379
01:02:12,239 --> 01:02:16,639
all two thousand entities three thousand

1380
01:02:15,280 --> 01:02:20,640
enemies

1381
01:02:16,639 --> 01:02:22,798
um so so uh

1382
01:02:20,639 --> 01:02:23,838
yeah yeah the the reason that you're

1383
01:02:22,798 --> 01:02:26,480
getting the lag

1384
01:02:23,838 --> 01:02:27,759
is there's no spatial partition for that

1385
01:02:26,480 --> 01:02:30,960
collision check

1386
01:02:27,760 --> 01:02:32,640
so uh i'm not worried about that right

1387
01:02:30,960 --> 01:02:34,480
now because the space partition part is

1388
01:02:32,639 --> 01:02:36,879
very easy by comparison

1389
01:02:34,480 --> 01:02:37,760
to the collision part and for another

1390
01:02:36,880 --> 01:02:40,798
reason

1391
01:02:37,760 --> 01:02:45,280
i kind of like the lag being in there

1392
01:02:40,798 --> 01:02:47,838
because having the lag in there helps me

1393
01:02:45,280 --> 01:02:49,119
see what this thing will do in a bad

1394
01:02:47,838 --> 01:02:53,679
scenario

1395
01:02:49,119 --> 01:02:56,798
right um if that makes sense

1396
01:02:53,679 --> 01:02:58,639
like it helps me go oh under

1397
01:02:56,798 --> 01:02:59,838
like let's suppose the game actually did

1398
01:02:58,639 --> 01:03:03,279
lag out

1399
01:02:59,838 --> 01:03:04,558
for whatever reason um

1400
01:03:03,280 --> 01:03:06,400
this is what's gonna happen with this

1401
01:03:04,559 --> 01:03:08,480
routine right so i kind of

1402
01:03:06,400 --> 01:03:10,160
like that normally i wouldn't like that

1403
01:03:08,480 --> 01:03:11,679
if i was testing like gameplay code and

1404
01:03:10,159 --> 01:03:13,598
how it felt and stuff i would

1405
01:03:11,679 --> 01:03:15,038
i would be like oh god we gotta fix this

1406
01:03:13,599 --> 01:03:17,039
but right now i'm like

1407
01:03:15,039 --> 01:03:18,640
the fact that this routine itself is

1408
01:03:17,039 --> 01:03:20,240
causing the lag is great

1409
01:03:18,639 --> 01:03:21,838
because it means i get to see what it

1410
01:03:20,239 --> 01:03:23,919
does under bad stress

1411
01:03:21,838 --> 01:03:24,880
which is exactly when collision routines

1412
01:03:23,920 --> 01:03:28,000
fail

1413
01:03:24,880 --> 01:03:30,559
and so i i will leave that in

1414
01:03:28,000 --> 01:03:31,760
until it's done basically and then i'm

1415
01:03:30,559 --> 01:03:34,880
gonna replace

1416
01:03:31,760 --> 01:03:35,760
this loop with a spatial partition and

1417
01:03:34,880 --> 01:03:39,280
we should have

1418
01:03:35,760 --> 01:03:42,400
no lag at all at that point um

1419
01:03:39,280 --> 01:03:43,599
but until then i kind of want it uh i

1420
01:03:42,400 --> 01:03:47,039
could add a thing to

1421
01:03:43,599 --> 01:03:50,000
artificially introduce lag uh but

1422
01:03:47,039 --> 01:03:51,920
it's if you have a natural unpredictable

1423
01:03:50,000 --> 01:03:52,400
bad source of lag like that already

1424
01:03:51,920 --> 01:03:55,440
there

1425
01:03:52,400 --> 01:03:57,358
why bother just use it right uh

1426
01:03:55,440 --> 01:04:00,000
if you don't have one though you can add

1427
01:03:57,358 --> 01:04:02,798
and it's a good idea to add a slider

1428
01:04:00,000 --> 01:04:03,760
in that you can like a debug slider that

1429
01:04:02,798 --> 01:04:07,599
you can

1430
01:04:03,760 --> 01:04:10,559
crank around um

1431
01:04:07,599 --> 01:04:11,359
and that's pretty cool because uh it

1432
01:04:10,559 --> 01:04:13,599
lets you test

1433
01:04:11,358 --> 01:04:14,719
your systems against lag uh which you

1434
01:04:13,599 --> 01:04:17,280
always should do because

1435
01:04:14,719 --> 01:04:18,000
you never know you know windows does

1436
01:04:17,280 --> 01:04:20,319
something

1437
01:04:18,000 --> 01:04:21,280
and your game was running at 60 frames a

1438
01:04:20,318 --> 01:04:22,558
second but

1439
01:04:21,280 --> 01:04:24,798
suddenly it's running at 10 frames a

1440
01:04:22,559 --> 01:04:26,319
second for five frames if you didn't

1441
01:04:24,798 --> 01:04:28,239
have some protection in there to make

1442
01:04:26,318 --> 01:04:30,318
sure that wasn't going to screw up

1443
01:04:28,239 --> 01:04:32,000
you're very sad right because anything

1444
01:04:30,318 --> 01:04:34,318
can happen

1445
01:04:32,000 --> 01:04:36,000
you know you know dude alt tabs to a

1446
01:04:34,318 --> 01:04:37,358
zoom meeting and then alt tabs back or

1447
01:04:36,000 --> 01:04:38,639
whatever and you get these like windows

1448
01:04:37,358 --> 01:04:40,400
hiccups or whatever

1449
01:04:38,639 --> 01:04:42,000
and then the game blows up right like so

1450
01:04:40,400 --> 01:04:44,240
you want to make sure that you've got

1451
01:04:42,000 --> 01:04:45,519
in your like defense against weird crap

1452
01:04:44,239 --> 01:04:47,038
like that

1453
01:04:45,519 --> 01:04:49,519
capping things making sure nothing

1454
01:04:47,039 --> 01:04:51,680
breaks just it's just a good thing

1455
01:04:49,519 --> 01:04:52,798
so i actually like having some lag in

1456
01:04:51,679 --> 01:04:54,798
this particular part of the code so we

1457
01:04:52,798 --> 01:04:56,559
can see what it does

1458
01:04:54,798 --> 01:04:58,239
um i want to check one quick thing which

1459
01:04:56,559 --> 01:05:00,798
is just i want to see how iterate

1460
01:04:58,239 --> 01:05:01,519
voxel does let's step through this code

1461
01:05:00,798 --> 01:05:05,199
once

1462
01:05:01,519 --> 01:05:06,719
we do have something that we can do by

1463
01:05:05,199 --> 01:05:08,159
the way so one of the problems

1464
01:05:06,719 --> 01:05:10,078
uh one of the things that's that's

1465
01:05:08,159 --> 01:05:13,118
that's rough right

1466
01:05:10,079 --> 01:05:15,920
uh is because lighting is so slow uh

1467
01:05:13,119 --> 01:05:18,480
when we switch to minus od

1468
01:05:15,920 --> 01:05:19,680
uh if you notice like when we run like

1469
01:05:18,480 --> 01:05:20,240
it's really hard to run because the

1470
01:05:19,679 --> 01:05:22,798
lighting

1471
01:05:20,239 --> 01:05:24,159
is so slow in debug mode it's like

1472
01:05:22,798 --> 01:05:25,759
difficult to do anything

1473
01:05:24,159 --> 01:05:27,598
right the lighting just eats up all the

1474
01:05:25,760 --> 01:05:28,799
frame time and you can't like here's the

1475
01:05:27,599 --> 01:05:32,480
debug build right it's

1476
01:05:28,798 --> 01:05:35,038
really annoying you know what i'm saying

1477
01:05:32,480 --> 01:05:36,079
um and so one of the problems is uh

1478
01:05:35,039 --> 01:05:38,000
visual studio

1479
01:05:36,079 --> 01:05:39,280
you can't turn on and off off the

1480
01:05:38,000 --> 01:05:42,159
optimizer

1481
01:05:39,280 --> 01:05:43,440
uh very easily with the pragma you have

1482
01:05:42,159 --> 01:05:45,598
to basically like

1483
01:05:43,440 --> 01:05:48,639
be in an optimized build and turn off

1484
01:05:45,599 --> 01:05:51,838
the optimizer or things like this

1485
01:05:48,639 --> 01:05:54,558
well it turns out apparently

1486
01:05:51,838 --> 01:05:55,279
that documentation was like wrong and

1487
01:05:54,559 --> 01:05:57,440
you actually

1488
01:05:55,280 --> 01:05:58,880
can or so claim someone who emailed me

1489
01:05:57,440 --> 01:06:01,760
they were like

1490
01:05:58,880 --> 01:06:01,760
i tried this

1491
01:06:02,079 --> 01:06:05,519
turning on optimizations in a debug

1492
01:06:04,880 --> 01:06:07,358
build

1493
01:06:05,519 --> 01:06:09,599
and it worked so you might want to try

1494
01:06:07,358 --> 01:06:13,679
it so we could try it

1495
01:06:09,599 --> 01:06:14,880
um let's take a look so if i go into the

1496
01:06:13,679 --> 01:06:18,000
lighting

1497
01:06:14,880 --> 01:06:21,599
thing and just do like a pound pragma

1498
01:06:18,000 --> 01:06:22,239
optimize uh and i'll have to look really

1499
01:06:21,599 --> 01:06:24,480
quickly

1500
01:06:22,239 --> 01:06:26,159
uh if you'll forgive me for a second at

1501
01:06:24,480 --> 01:06:28,000
what the actual switches

1502
01:06:26,159 --> 01:06:30,798
are they they sent me they were like

1503
01:06:28,000 --> 01:06:30,798
it's these

1504
01:06:30,838 --> 01:06:33,838
um

1505
01:06:35,599 --> 01:06:38,798
that they claimed worked so we can try

1506
01:06:37,838 --> 01:06:47,838
these and just

1507
01:06:38,798 --> 01:06:47,838
see um

1508
01:06:49,358 --> 01:06:57,279
okay so it looks like

1509
01:06:53,119 --> 01:06:57,280
the answer is you do

1510
01:06:59,199 --> 01:07:05,598
pragma optimize gt

1511
01:07:02,559 --> 01:07:08,160
on and it supposedly does

1512
01:07:05,599 --> 01:07:09,440
actually turn on optimizations even that

1513
01:07:08,159 --> 01:07:12,318
you didn't have on

1514
01:07:09,440 --> 01:07:14,079
in the flags and then you just say go

1515
01:07:12,318 --> 01:07:16,000
back to nothing on

1516
01:07:14,079 --> 01:07:18,160
and it will reset to whatever flags you

1517
01:07:16,000 --> 01:07:21,280
did have

1518
01:07:18,159 --> 01:07:23,920
right supposedly this works

1519
01:07:21,280 --> 01:07:25,519
i don't know if i believe it um but it's

1520
01:07:23,920 --> 01:07:28,880
a pretty easy thing to test

1521
01:07:25,519 --> 01:07:32,239
so we can test it right um

1522
01:07:28,880 --> 01:07:36,240
so let's take a look so i've done it uh

1523
01:07:32,239 --> 01:07:39,358
as they suggested and i can look and see

1524
01:07:36,239 --> 01:07:42,879
uh how the lighting fares uh

1525
01:07:39,358 --> 01:07:46,880
here doesn't look

1526
01:07:42,880 --> 01:07:51,119
uh particularly good

1527
01:07:46,880 --> 01:07:51,119
though um

1528
01:07:52,480 --> 01:07:59,039
let me nerf let me try some stuff

1529
01:07:55,519 --> 01:08:01,840
um with like the collision detector

1530
01:07:59,039 --> 01:08:04,999
off so if i go to

1531
01:08:01,840 --> 01:08:04,999
[Music]

1532
01:08:08,639 --> 01:08:12,798
so assuming that we don't do uh the

1533
01:08:11,358 --> 01:08:15,199
collision detector

1534
01:08:12,798 --> 01:08:16,158
so we know that it's not causing us a

1535
01:08:15,199 --> 01:08:18,158
problem

1536
01:08:16,158 --> 01:08:19,759
so we just do like hey when you try to

1537
01:08:18,158 --> 01:08:21,599
move an entity it doesn't move

1538
01:08:19,759 --> 01:08:25,119
like anybody stay where they are no code

1539
01:08:21,600 --> 01:08:31,039
gets run you know what i'm saying

1540
01:08:25,119 --> 01:08:31,039
um so i run it and what do we get

1541
01:08:35,279 --> 01:08:40,910
so it might be

1542
01:08:39,198 --> 01:08:44,039
it feels better

1543
01:08:40,909 --> 01:08:44,039
[Music]

1544
01:08:44,319 --> 01:08:53,839
than not having it um

1545
01:09:01,039 --> 01:09:04,960
i'm just not sure like it still seems

1546
01:09:03,520 --> 01:09:08,319
like the lighting is not

1547
01:09:04,960 --> 01:09:11,838
particularly optimized i'm wondering if

1548
01:09:08,319 --> 01:09:15,839
that is like uh well so there's some

1549
01:09:11,838 --> 01:09:15,838
other things like the light atlas

1550
01:09:16,158 --> 01:09:20,000
i i don't know how this pragma would

1551
01:09:19,679 --> 01:09:23,520
work

1552
01:09:20,000 --> 01:09:26,798
exactly right the other problem is like

1553
01:09:23,520 --> 01:09:26,799
the math code

1554
01:09:26,960 --> 01:09:30,079
if that's not if that doesn't have the

1555
01:09:29,439 --> 01:09:35,838
pragma

1556
01:09:30,079 --> 01:09:35,838
around it

1557
01:09:36,719 --> 01:09:40,399
i don't know if this really is useful

1558
01:09:38,479 --> 01:09:43,519
unfortunately

1559
01:09:40,399 --> 01:09:48,639
um like i don't

1560
01:09:43,520 --> 01:09:51,920
know like if you need to go in here and

1561
01:09:48,640 --> 01:09:51,920
and start you know

1562
01:09:52,238 --> 01:09:56,639
start putting optimize on that stuff

1563
01:09:59,119 --> 01:10:03,840
but it doesn't seem good in the light

1564
01:10:02,000 --> 01:10:06,640
atlas code

1565
01:10:03,840 --> 01:10:09,039
i don't know i could slap them in here

1566
01:10:06,640 --> 01:10:09,039
as well

1567
01:10:09,119 --> 01:10:11,679
just to see

1568
01:10:13,520 --> 01:10:19,199
you know if it's if it's that

1569
01:10:16,960 --> 01:10:19,198
uh

1570
01:10:20,238 --> 01:10:23,678
but but like i said i don't know

1571
01:10:26,158 --> 01:10:32,799
it it's better it's just not

1572
01:10:29,679 --> 01:10:32,800
like better enough

1573
01:10:34,079 --> 01:10:36,399
you know

1574
01:10:37,279 --> 01:10:45,119
like like it's not bad um

1575
01:10:41,279 --> 01:10:46,880
but but it's not good uh

1576
01:10:45,119 --> 01:10:49,679
so i don't really know i don't think

1577
01:10:46,880 --> 01:10:52,880
that's a long-term solution so i i don't

1578
01:10:49,679 --> 01:10:52,880
think i'm gonna bother with it

1579
01:10:53,520 --> 01:10:59,600
um you know maybe if we slapped it

1580
01:10:56,719 --> 01:11:01,039
in in enough locations you know it would

1581
01:10:59,600 --> 01:11:04,079
help

1582
01:11:01,039 --> 01:11:06,238
um but

1583
01:11:04,079 --> 01:11:07,600
it it just doesn't seem like it's like

1584
01:11:06,238 --> 01:11:08,718
if we want to solve this problem

1585
01:11:07,600 --> 01:11:12,320
we're probably gonna have to solve it a

1586
01:11:08,719 --> 01:11:15,840
different way right um

1587
01:11:12,319 --> 01:11:19,119
so we'll see uh anyway

1588
01:11:15,840 --> 01:11:21,840
uh let's keep going so

1589
01:11:19,119 --> 01:11:21,840
if we

1590
01:11:25,198 --> 01:11:28,319
uh want to take a look at this code i

1591
01:11:27,279 --> 01:11:30,158
just wanted to

1592
01:11:28,319 --> 01:11:31,840
to look at like the voxel iterator and

1593
01:11:30,158 --> 01:11:32,479
stuff and just make sure that stuff was

1594
01:11:31,840 --> 01:11:36,000
working

1595
01:11:32,479 --> 01:11:39,359
relatively cleanly before i do anything

1596
01:11:36,000 --> 01:11:42,800
fancier so here we are in the

1597
01:11:39,359 --> 01:11:43,920
debug build yes if the debug builds i'm

1598
01:11:42,800 --> 01:11:47,440
just gonna see

1599
01:11:43,920 --> 01:11:50,800
uh what happens in move entity

1600
01:11:47,439 --> 01:11:52,839
when you step into the code for

1601
01:11:50,800 --> 01:11:54,239
the vox stuff i'm just gonna take a

1602
01:11:52,840 --> 01:11:58,719
quick

1603
01:11:54,238 --> 01:12:00,238
like look and see um

1604
01:11:58,719 --> 01:12:03,198
just just to make sure the code is like

1605
01:12:00,238 --> 01:12:05,519
sane right

1606
01:12:03,198 --> 01:12:07,359
uh and and from there we'll you know

1607
01:12:05,520 --> 01:12:10,640
we'll go

1608
01:12:07,359 --> 01:12:11,599
uh further so okay uh so assuming i step

1609
01:12:10,640 --> 01:12:13,920
in here

1610
01:12:11,600 --> 01:12:15,039
uh i'm just gonna take a look and see

1611
01:12:13,920 --> 01:12:18,399
you know what the

1612
01:12:15,039 --> 01:12:18,399
uh voxel bounds

1613
01:12:18,719 --> 01:12:26,560
are in this case and uh

1614
01:12:22,238 --> 01:12:29,599
you know they look they look fine

1615
01:12:26,560 --> 01:12:33,120
right i mean they look like what we

1616
01:12:29,600 --> 01:12:35,280
would have said that you should see um

1617
01:12:33,119 --> 01:12:36,399
which seems fine i'm gonna look at the

1618
01:12:35,279 --> 01:12:40,238
voxel iterator

1619
01:12:36,399 --> 01:12:41,839
so here's the iterator um it's going

1620
01:12:40,238 --> 01:12:43,919
four four four it's starting at zero

1621
01:12:41,840 --> 01:12:47,440
zero zero right

1622
01:12:43,920 --> 01:12:48,000
uh and you know here's us going through

1623
01:12:47,439 --> 01:12:50,879
and and

1624
01:12:48,000 --> 01:12:52,719
you know what i could do to is is before

1625
01:12:50,880 --> 01:12:56,159
we actually get to involved in this

1626
01:12:52,719 --> 01:13:04,158
maybe let's change this code

1627
01:12:56,158 --> 01:13:06,639
uh maybe i want to pull that out

1628
01:13:04,158 --> 01:13:07,759
so there's like a test point that we're

1629
01:13:06,640 --> 01:13:11,119
going to test

1630
01:13:07,760 --> 01:13:14,480
the test point is here

1631
01:13:11,119 --> 01:13:15,279
you know um and that way i can look and

1632
01:13:14,479 --> 01:13:18,799
see

1633
01:13:15,279 --> 01:13:22,319
what we end up with for these and

1634
01:13:18,800 --> 01:13:26,640
you know uh that seems

1635
01:13:22,319 --> 01:13:26,639
easier to debug inspect right

1636
01:13:26,800 --> 01:13:32,640
okay um so let's try that again

1637
01:13:33,359 --> 01:13:40,479
i probably want the break point to be

1638
01:13:36,800 --> 01:13:43,279
like here here's the voxel iterator

1639
01:13:40,479 --> 01:13:48,479
here's the test position

1640
01:13:43,279 --> 01:13:48,479
uh and if we go through

1641
01:13:49,600 --> 01:13:52,719
and just step

1642
01:13:56,800 --> 01:14:03,199
i mean it looks like what we would think

1643
01:14:00,960 --> 01:14:03,198
right

1644
01:14:07,119 --> 01:14:11,119
i mean that's that's what we would

1645
01:14:10,079 --> 01:14:15,279
expect it to do

1646
01:14:11,119 --> 01:14:18,399
you know um

1647
01:14:15,279 --> 01:14:19,119
so that seems fine um so taking a look

1648
01:14:18,399 --> 01:14:22,238
here

1649
01:14:19,119 --> 01:14:24,559
if we take a look at like occupied count

1650
01:14:22,238 --> 01:14:24,559
um

1651
01:14:27,279 --> 01:14:34,880
so so the vox dim is is like four

1652
01:14:31,760 --> 01:14:36,159
right so if we look at how many things

1653
01:14:34,880 --> 01:14:38,640
are occupied

1654
01:14:36,158 --> 01:14:40,960
you know we should get in the any open

1655
01:14:38,640 --> 01:14:44,159
case like any open here should be one

1656
01:14:40,960 --> 01:14:46,000
it is um

1657
01:14:44,158 --> 01:14:48,079
and so like when we get down to here we

1658
01:14:46,000 --> 01:14:52,439
should not be doing that

1659
01:14:48,079 --> 01:14:54,840
and we don't um so that's good

1660
01:14:52,439 --> 01:14:57,839
[Music]

1661
01:14:54,840 --> 01:14:57,840
uh

1662
01:15:03,760 --> 01:15:11,840
there we go

1663
01:15:12,479 --> 01:15:18,718
so i mean everything seems

1664
01:15:15,520 --> 01:15:21,360
fine in this

1665
01:15:18,719 --> 01:15:24,000
code path right i mean everything looks

1666
01:15:21,359 --> 01:15:27,119
like what i would expect

1667
01:15:24,000 --> 01:15:30,479
um let's set a break point here

1668
01:15:27,119 --> 01:15:33,198
just for fun um

1669
01:15:30,479 --> 01:15:33,198
and like

1670
01:15:33,600 --> 01:15:39,600
i don't know i don't even know like

1671
01:15:36,238 --> 01:15:43,279
where's the dude

1672
01:15:39,600 --> 01:15:46,400
um who's

1673
01:15:43,279 --> 01:15:53,840
yeah the like the skull dude

1674
01:15:46,399 --> 01:15:53,839
um i don't even know

1675
01:15:55,679 --> 01:15:58,480
oh he's coming

1676
01:16:02,880 --> 01:16:06,000
you can see the motion caused by the

1677
01:16:04,800 --> 01:16:10,159
only being allowed to be

1678
01:16:06,000 --> 01:16:13,760
placed in the full thing yeah so anyway

1679
01:16:10,158 --> 01:16:15,519
if i try to force the um the thing to

1680
01:16:13,760 --> 01:16:17,119
tunnel through

1681
01:16:15,520 --> 01:16:20,480
can i switch back to the main view now

1682
01:16:17,119 --> 01:16:23,439
yeah if i try to force the glove

1683
01:16:20,479 --> 01:16:26,158
uh to get into one of those positions

1684
01:16:23,439 --> 01:16:28,238
can i do it

1685
01:16:26,158 --> 01:16:30,079
i mean we know i was able to do this

1686
01:16:28,238 --> 01:16:32,839
before right like i was

1687
01:16:30,079 --> 01:16:35,840
i was able to tunnel the thing through

1688
01:16:32,840 --> 01:16:35,840
right

1689
01:16:42,719 --> 01:16:47,039
and i i'm not able to make it happen

1690
01:16:46,238 --> 01:16:51,919
right now

1691
01:16:47,039 --> 01:16:51,920
i need to have a better repro case here

1692
01:16:52,000 --> 01:16:57,279
there it goes so okay

1693
01:16:55,119 --> 01:17:03,679
that tunneled through but it never hit

1694
01:16:57,279 --> 01:17:07,359
that case

1695
01:17:03,679 --> 01:17:09,760
right so actually

1696
01:17:07,359 --> 01:17:11,759
it's not because of that that it was

1697
01:17:09,760 --> 01:17:13,280
able to tunnel

1698
01:17:11,760 --> 01:17:15,360
like i've got the break point there and

1699
01:17:13,279 --> 01:17:18,559
like unless that

1700
01:17:15,359 --> 01:17:21,839
you know break points busted um

1701
01:17:18,560 --> 01:17:25,920
that was not the problem because it got

1702
01:17:21,840 --> 01:17:29,920
it got embedded into the thing

1703
01:17:25,920 --> 01:17:44,960
so this keeps getting weirder right

1704
01:17:29,920 --> 01:17:47,279
so that's really weird

1705
01:17:44,960 --> 01:17:49,600
yeah so that's able to go and do

1706
01:17:47,279 --> 01:17:51,679
interpenetration without that case so

1707
01:17:49,600 --> 01:17:53,920
what do you think is happening there

1708
01:17:51,679 --> 01:17:56,480
that's particularly weird

1709
01:17:53,920 --> 01:17:57,039
so it's not allowing motion if it can't

1710
01:17:56,479 --> 01:18:01,519
find

1711
01:17:57,039 --> 01:18:01,519
place that's an entirely open cell

1712
01:18:02,560 --> 01:18:06,800
so this is as weird as i thought it was

1713
01:18:10,840 --> 01:18:13,840
right

1714
01:18:14,880 --> 01:18:21,440
this is every bit as weird as i thought

1715
01:18:17,119 --> 01:18:21,439
it was so i have some questions

1716
01:18:22,319 --> 01:18:27,840
i have a question so

1717
01:18:30,079 --> 01:18:34,399
yeah it might have pushed the skeleton

1718
01:18:31,439 --> 01:18:37,599
up over the glove i guess that's true

1719
01:18:34,399 --> 01:18:41,839
um let's take a look

1720
01:18:37,600 --> 01:18:41,840
is that what's happening

1721
01:18:45,039 --> 01:18:47,840
that's kind of weird

1722
01:18:51,760 --> 01:18:57,600
so is this something that's only

1723
01:18:53,439 --> 01:18:57,599
happening because we have like

1724
01:18:59,039 --> 01:19:03,600
is this something that only happens yeah

1725
01:19:02,079 --> 01:19:04,238
when we have large time steps or

1726
01:19:03,600 --> 01:19:07,520
something

1727
01:19:04,238 --> 01:19:10,879
i mean uh small time steps

1728
01:19:07,520 --> 01:19:13,360
like maybe it is

1729
01:19:10,880 --> 01:19:14,560
actually passing underneath it is

1730
01:19:13,359 --> 01:19:23,839
actually passing underneath

1731
01:19:14,560 --> 01:19:23,840
okay all right

1732
01:19:26,880 --> 01:19:31,039
all right so i guess those skull things

1733
01:19:29,840 --> 01:19:34,640
why do they float

1734
01:19:31,039 --> 01:19:34,640
upwards like that anyway

1735
01:19:34,800 --> 01:19:38,560
and then they float downward i don't

1736
01:19:36,560 --> 01:19:41,840
know why they do that

1737
01:19:38,560 --> 01:19:41,840
but i guess that's a problem

1738
01:19:48,158 --> 01:19:51,359
and i have no idea why they're doing

1739
01:19:49,679 --> 01:19:53,600
that i guess they go

1740
01:19:51,359 --> 01:19:55,759
up and down they like come to rest on a

1741
01:19:53,600 --> 01:19:57,520
square or something

1742
01:19:55,760 --> 01:19:59,039
so this whole time was i actually

1743
01:19:57,520 --> 01:20:05,840
thinking it tunneled and it

1744
01:19:59,039 --> 01:20:05,840
didn't actually tunnel

1745
01:20:16,840 --> 01:20:19,840
hmm

1746
01:20:23,520 --> 01:20:30,719
all right well that's confusing

1747
01:20:26,960 --> 01:20:30,719
but not necessarily bad

1748
01:20:31,520 --> 01:20:47,840
i don't know what to make of that

1749
01:20:57,920 --> 01:21:05,840
so you can see the glove currently right

1750
01:21:01,119 --> 01:21:05,840
is trapped underneath the dude

1751
01:21:07,279 --> 01:21:12,079
yeah all right well so i don't know

1752
01:21:10,319 --> 01:21:13,920
where to what to make of that that was

1753
01:21:12,079 --> 01:21:15,840
interesting so maybe i should revisit

1754
01:21:13,920 --> 01:21:17,520
this slightly with that in mind

1755
01:21:15,840 --> 01:21:19,039
because maybe it's not as weird as i

1756
01:21:17,520 --> 01:21:19,760
thought it was and we just need to kind

1757
01:21:19,039 --> 01:21:21,359
of fix

1758
01:21:19,760 --> 01:21:23,119
so that and we can start to look at this

1759
01:21:21,359 --> 01:21:27,839
in a different way i'm going to

1760
01:21:23,119 --> 01:21:29,760
switch back to this for a moment um

1761
01:21:27,840 --> 01:21:31,520
because i'm not totally sure look i

1762
01:21:29,760 --> 01:21:36,159
don't actually know

1763
01:21:31,520 --> 01:21:38,960
in this case why

1764
01:21:36,158 --> 01:21:38,960
nobody can move

1765
01:21:39,840 --> 01:21:44,560
um you should be able to move

1766
01:21:43,039 --> 01:21:47,039
the glove should be able to move right

1767
01:21:44,560 --> 01:21:49,679
now and so the fact that it can't

1768
01:21:47,039 --> 01:21:50,399
is weird to me right it should be able

1769
01:21:49,679 --> 01:21:53,039
to move

1770
01:21:50,399 --> 01:21:55,439
in this direction and it doesn't seem to

1771
01:21:53,039 --> 01:22:00,719
be able to do so

1772
01:21:55,439 --> 01:22:00,719
and that's that seems bad

1773
01:22:08,840 --> 01:22:11,840
um

1774
01:22:13,198 --> 01:22:18,879
i guess uh

1775
01:22:16,560 --> 01:22:20,400
and that's not entirely what is that's

1776
01:22:18,880 --> 01:22:24,079
not entirely

1777
01:22:20,399 --> 01:22:27,119
unexpected um

1778
01:22:24,079 --> 01:22:28,158
because in this case if you're looking

1779
01:22:27,119 --> 01:22:29,679
you're going to look at a particular

1780
01:22:28,158 --> 01:22:31,759
corner of the voxel what you need to

1781
01:22:29,679 --> 01:22:35,039
kind of do is start clipping away

1782
01:22:31,760 --> 01:22:36,239
pieces of it so you need to say like in

1783
01:22:35,039 --> 01:22:39,519
the direction

1784
01:22:36,238 --> 01:22:41,119
of this thing are there any that i could

1785
01:22:39,520 --> 01:22:44,560
move towards

1786
01:22:41,119 --> 01:22:45,840
uh and that forms the basis that i could

1787
01:22:44,560 --> 01:22:49,760
move along

1788
01:22:45,840 --> 01:22:52,560
right so one way to look at it

1789
01:22:49,760 --> 01:22:54,320
is to say let's form a basis we have the

1790
01:22:52,560 --> 01:22:58,080
directional offset here

1791
01:22:54,319 --> 01:22:58,719
right and we know a couple different

1792
01:22:58,079 --> 01:23:02,719
things

1793
01:22:58,719 --> 01:23:02,719
so we know for example

1794
01:23:04,840 --> 01:23:07,840
um

1795
01:23:15,760 --> 01:23:19,440
this is going to be kind of weird but

1796
01:23:17,198 --> 01:23:22,638
bear with me

1797
01:23:19,439 --> 01:23:27,599
so what we would know here

1798
01:23:22,639 --> 01:23:27,600
is something that looks like this

1799
01:23:32,840 --> 01:23:35,840
um

1800
01:23:38,319 --> 01:23:41,439
in the voxel

1801
01:23:42,079 --> 01:23:46,319
the direction of motion which we have

1802
01:23:46,840 --> 01:23:52,079
here tells us

1803
01:23:48,960 --> 01:23:52,880
which of the points on the voxel we

1804
01:23:52,079 --> 01:23:55,840
would look to

1805
01:23:52,880 --> 01:23:57,760
to find out if we can move in that

1806
01:23:55,840 --> 01:24:03,520
direction

1807
01:23:57,760 --> 01:24:06,560
but we are fundamentally looking at

1808
01:24:03,520 --> 01:24:08,560
for four points right

1809
01:24:06,560 --> 01:24:09,600
no matter which direction we're like

1810
01:24:08,560 --> 01:24:12,400
aiming

1811
01:24:09,600 --> 01:24:14,800
there's at least i mean i guess at least

1812
01:24:12,399 --> 01:24:18,559
two

1813
01:24:14,800 --> 01:24:19,920
but more like yeah you can imagine like

1814
01:24:18,560 --> 01:24:24,400
a plane

1815
01:24:19,920 --> 01:24:28,239
and that plane is gonna clip away

1816
01:24:24,399 --> 01:24:32,960
at least two but possibly four

1817
01:24:28,238 --> 01:24:32,959
of the points of motion

1818
01:24:33,119 --> 01:24:39,198
so i think what we want to do is say

1819
01:24:36,560 --> 01:24:39,679
from our current position if you were to

1820
01:24:39,198 --> 01:24:42,839
look

1821
01:24:39,679 --> 01:24:44,719
at the position plus the movement

1822
01:24:42,840 --> 01:24:47,039
direction

1823
01:24:44,719 --> 01:24:47,760
which of these points would be in play

1824
01:24:47,039 --> 01:24:49,359
and

1825
01:24:47,760 --> 01:24:51,520
and or you know another way to look at

1826
01:24:49,359 --> 01:24:56,000
it be like which directions

1827
01:24:51,520 --> 01:24:59,440
are allowed for motion based on

1828
01:24:56,000 --> 01:25:01,679
uh the points of this voxel

1829
01:24:59,439 --> 01:25:01,678
right

1830
01:25:08,800 --> 01:25:12,960
i mean let's take a simple version of it

1831
01:25:10,719 --> 01:25:15,279
to start

1832
01:25:12,960 --> 01:25:15,279
so

1833
01:25:16,639 --> 01:25:23,279
if the uh

1834
01:25:19,679 --> 01:25:26,560
voxel iterator

1835
01:25:23,279 --> 01:25:30,719
in the z direction

1836
01:25:26,560 --> 01:25:30,719
so looking in the z direction

1837
01:25:31,359 --> 01:25:34,479
we could say like

1838
01:25:35,600 --> 01:25:41,120
if all the things in the z direction

1839
01:25:39,439 --> 01:25:43,759
well or maybe we just say if any in the

1840
01:25:41,119 --> 01:25:43,760
z direction

1841
01:25:47,039 --> 01:25:51,600
i'm i'm really i'm kind of torn as to

1842
01:25:52,840 --> 01:25:55,840
what

1843
01:26:20,158 --> 01:26:23,839
really all i'm trying to say here is the

1844
01:26:22,399 --> 01:26:28,319
corners of the voxel

1845
01:26:23,840 --> 01:26:29,039
tell us what the permissible gliding

1846
01:26:28,319 --> 01:26:32,559
directions

1847
01:26:29,039 --> 01:26:35,119
are if they're all open

1848
01:26:32,560 --> 01:26:36,719
or all the ones vaguely in the direction

1849
01:26:35,119 --> 01:26:37,760
we're trying to go or open then we can

1850
01:26:36,719 --> 01:26:40,239
just go

1851
01:26:37,760 --> 01:26:40,960
but if only some are open what we want

1852
01:26:40,238 --> 01:26:42,879
to do is

1853
01:26:40,960 --> 01:26:45,039
clip the movement vector so that you

1854
01:26:42,880 --> 01:26:49,039
only move in the direction

1855
01:26:45,039 --> 01:26:51,039
uh that those would allow right

1856
01:26:49,039 --> 01:26:52,880
so like when you look at this case the

1857
01:26:51,039 --> 01:26:53,439
problem is the glove is probably trying

1858
01:26:52,880 --> 01:26:56,880
to move

1859
01:26:53,439 --> 01:26:59,279
upward as well as out and it can't

1860
01:26:56,880 --> 01:27:00,239
because it can't actually go anywhere in

1861
01:26:59,279 --> 01:27:02,880
that direction

1862
01:27:00,238 --> 01:27:04,799
but if it were to have just said well

1863
01:27:02,880 --> 01:27:08,400
it's still i can still move

1864
01:27:04,800 --> 01:27:11,920
sideways which is partly that way um

1865
01:27:08,399 --> 01:27:13,359
that's okay right so

1866
01:27:11,920 --> 01:27:15,679
i'm trying to figure out what the right

1867
01:27:13,359 --> 01:27:19,839
way to look at the voxel pieces are

1868
01:27:15,679 --> 01:27:19,840
effectively i have

1869
01:27:32,960 --> 01:27:36,480
effectively i have like a bunch of

1870
01:27:34,399 --> 01:27:47,279
diagonal vectors right they're pointing

1871
01:27:36,479 --> 01:27:49,599
towards the corners of the cube

1872
01:27:47,279 --> 01:27:50,479
so now i'm starting to ask myself should

1873
01:27:49,600 --> 01:27:55,520
the voxel

1874
01:27:50,479 --> 01:27:55,519
actually be centered so that the points

1875
01:27:59,198 --> 01:28:04,710
so that we're actually looking at motion

1876
01:28:01,649 --> 01:28:04,710
[Music]

1877
01:28:08,319 --> 01:28:15,840
from the location we're at

1878
01:28:18,960 --> 01:28:43,840
this is a real brain bender

1879
01:28:28,238 --> 01:28:43,839
anything else

1880
01:29:07,198 --> 01:29:25,839
so maybe what we want to do here

1881
01:29:10,719 --> 01:29:25,840
is just clip the box

1882
01:29:32,319 --> 01:29:39,840
i love where i am

1883
01:29:54,479 --> 01:29:57,599
maybe what we want to do is just clip

1884
01:29:56,399 --> 01:30:00,638
the box

1885
01:29:57,600 --> 01:30:02,800
so if we said look here's

1886
01:30:00,639 --> 01:30:04,239
the problem with this is it might just

1887
01:30:02,800 --> 01:30:06,719
not be the right offsets

1888
01:30:04,238 --> 01:30:09,119
right you would still like so suppose

1889
01:30:06,719 --> 01:30:10,719
all of these are trying to go up

1890
01:30:09,119 --> 01:30:12,158
you know partially so the z is going to

1891
01:30:10,719 --> 01:30:13,359
be one up and all of those are

1892
01:30:12,158 --> 01:30:14,799
interpenetrating

1893
01:30:13,359 --> 01:30:16,799
well what we want to do is we still want

1894
01:30:14,800 --> 01:30:18,320
to move along the one we can so we still

1895
01:30:16,800 --> 01:30:19,039
want the x and y to work and we just

1896
01:30:18,319 --> 01:30:21,840
want to use z

1897
01:30:19,039 --> 01:30:21,840
zero right

1898
01:30:22,158 --> 01:30:28,879
um so i'm just trying to think

1899
01:30:25,760 --> 01:30:29,520
if we instead of doing it this way if we

1900
01:30:28,880 --> 01:30:33,279
basically

1901
01:30:29,520 --> 01:30:36,239
went through each corner of the voxel

1902
01:30:33,279 --> 01:30:38,158
and or or maybe as we step through the

1903
01:30:36,238 --> 01:30:39,039
points of the voxel we think of it more

1904
01:30:38,158 --> 01:30:42,879
like

1905
01:30:39,039 --> 01:30:44,399
this is a cube maybe the cube is around

1906
01:30:42,880 --> 01:30:45,840
the point

1907
01:30:44,399 --> 01:30:48,238
like they're just regions in space when

1908
01:30:45,840 --> 01:30:51,039
we say

1909
01:30:48,238 --> 01:30:52,718
you could have gone up to here it seems

1910
01:30:51,039 --> 01:30:54,319
like you want to know more about the

1911
01:30:52,719 --> 01:30:56,480
shape of the thing passing through it

1912
01:30:54,319 --> 01:30:59,359
though

1913
01:30:56,479 --> 01:31:00,799
right so that doesn't really seem likely

1914
01:30:59,359 --> 01:31:17,839
to me

1915
01:31:00,800 --> 01:31:17,840
so i guess what i might say is

1916
01:31:23,359 --> 01:31:31,119
is like within some tolerance you would

1917
01:31:25,920 --> 01:31:33,300
accept either point

1918
01:31:31,119 --> 01:31:36,358
right so

1919
01:31:33,300 --> 01:31:36,359
[Music]

1920
01:31:36,479 --> 01:31:40,000
so this is really kind of weird but

1921
01:31:38,800 --> 01:31:44,000
let's just

1922
01:31:40,000 --> 01:31:46,479
hear me out so we know that we

1923
01:31:44,000 --> 01:31:47,760
are moving towards a particular side of

1924
01:31:46,479 --> 01:31:50,879
the voxel

1925
01:31:47,760 --> 01:31:52,800
and the

1926
01:31:50,880 --> 01:31:55,039
tolerance of how we're moving would

1927
01:31:52,800 --> 01:31:56,480
depend on whether we would

1928
01:31:55,039 --> 01:31:58,960
well i guess we could just clip the

1929
01:31:56,479 --> 01:32:02,638
motion out in the direction that wasn't

1930
01:31:58,960 --> 01:32:02,639
implied so so for example

1931
01:32:02,800 --> 01:32:09,039
if we took you know this

1932
01:32:06,319 --> 01:32:09,039
one here

1933
01:32:11,840 --> 01:32:16,880
where we said like okay you know you've

1934
01:32:13,679 --> 01:32:16,880
got uh

1935
01:32:16,960 --> 01:32:24,079
this is the complete directional offset

1936
01:32:20,800 --> 01:32:27,440
um if it turns out that that

1937
01:32:24,079 --> 01:32:30,719
one's blocked then you try

1938
01:32:27,439 --> 01:32:32,799
the one without that

1939
01:32:30,719 --> 01:32:34,800
you try it without each of the

1940
01:32:32,800 --> 01:32:35,279
components so you try it without x

1941
01:32:34,800 --> 01:32:40,400
without

1942
01:32:35,279 --> 01:32:46,479
y without z um and you

1943
01:32:40,399 --> 01:32:46,479
clip out that movement basis

1944
01:32:50,960 --> 01:32:55,920
i mean i don't know man

1945
01:32:54,719 --> 01:32:58,399
we really should be doing this on the

1946
01:32:55,920 --> 01:32:58,399
light board

1947
01:32:58,560 --> 01:33:09,840
um all right so if we wanted to actually

1948
01:33:02,560 --> 01:33:09,840
see what happens here right um

1949
01:33:23,679 --> 01:33:27,199
so if we were literally just playing

1950
01:33:25,600 --> 01:33:31,039
around and we said

1951
01:33:27,198 --> 01:33:31,039
okay here's each of the different

1952
01:33:31,679 --> 01:33:38,560
uh movement patterns so this will check

1953
01:33:35,359 --> 01:33:39,759
uh you know all eight right two times

1954
01:33:38,560 --> 01:33:42,639
two times two

1955
01:33:39,760 --> 01:33:44,400
we would check each of the directions x

1956
01:33:42,639 --> 01:33:47,600
y and z

1957
01:33:44,399 --> 01:33:49,119
um and we could just say like that it

1958
01:33:47,600 --> 01:33:51,840
looks like this

1959
01:33:49,119 --> 01:33:51,840
right

1960
01:33:53,760 --> 01:34:00,000
and so for each of those we know that a

1961
01:33:57,039 --> 01:34:01,198
vector going in this direction from you

1962
01:34:00,000 --> 01:34:04,479
know wherever we're

1963
01:34:01,198 --> 01:34:07,279
talking about um motion in this

1964
01:34:04,479 --> 01:34:10,959
direction through this particular cell

1965
01:34:07,279 --> 01:34:12,559
uh is going to hit whatever

1966
01:34:10,960 --> 01:34:14,079
you know it's going to hit whatever the

1967
01:34:12,560 --> 01:34:16,880
occupied category is

1968
01:34:14,079 --> 01:34:18,319
on this thing and i don't know if we

1969
01:34:16,880 --> 01:34:20,719
want to consider where

1970
01:34:18,319 --> 01:34:22,319
the actual point would be i don't think

1971
01:34:20,719 --> 01:34:24,079
we do so i think we just want to kind of

1972
01:34:22,319 --> 01:34:27,599
carve off

1973
01:34:24,079 --> 01:34:30,960
uh places that would be

1974
01:34:27,600 --> 01:34:32,960
you know th that we kind of want to just

1975
01:34:30,960 --> 01:34:36,480
shrink

1976
01:34:32,960 --> 01:34:39,039
the box away from these things

1977
01:34:36,479 --> 01:34:41,198
so the problem is like we were using you

1978
01:34:39,039 --> 01:34:44,479
know

1979
01:34:41,198 --> 01:34:46,319
get closest point in box but get closest

1980
01:34:44,479 --> 01:34:47,759
point in box

1981
01:34:46,319 --> 01:34:49,759
we we don't really have a good way of

1982
01:34:47,760 --> 01:35:00,079
like clipping that point back

1983
01:34:49,760 --> 01:35:15,840
out right um

1984
01:35:00,079 --> 01:35:15,840
so when we

1985
01:35:17,760 --> 01:35:21,199
so when we go through each of these i

1986
01:35:19,920 --> 01:35:25,199
guess it's just like

1987
01:35:21,198 --> 01:35:26,960
yeah if i'm trying to think of how this

1988
01:35:25,198 --> 01:35:28,000
is any different from just like looking

1989
01:35:26,960 --> 01:35:30,880
at a box around

1990
01:35:28,000 --> 01:35:32,880
the thing i guess you would go i'm just

1991
01:35:30,880 --> 01:35:35,279
trying to get the diagonals in there

1992
01:35:32,880 --> 01:35:43,840
right and maybe that's pointless maybe

1993
01:35:35,279 --> 01:35:43,840
you just subdivide and that's stupid

1994
01:35:50,079 --> 01:35:53,279
yeah i don't know since we're almost out

1995
01:35:52,560 --> 01:35:54,719
of time

1996
01:35:53,279 --> 01:35:57,439
i'm just gonna say i need to sleep on

1997
01:35:54,719 --> 01:35:58,158
this uh i'm gonna do something slightly

1998
01:35:57,439 --> 01:36:01,519
different

1999
01:35:58,158 --> 01:36:01,519
which is just say look

2000
01:36:01,600 --> 01:36:10,079
um if you could stand in this cell

2001
01:36:05,039 --> 01:36:13,439
area then maybe we just say

2002
01:36:10,079 --> 01:36:17,198
that you can go anywhere

2003
01:36:13,439 --> 01:36:20,000
in the interior of the thing so like

2004
01:36:17,198 --> 01:36:21,039
if you can stand on this particular

2005
01:36:20,000 --> 01:36:25,840
point

2006
01:36:21,039 --> 01:36:25,840
then we'll let you go

2007
01:36:29,359 --> 01:36:32,479
no that's still not gonna work

2008
01:36:33,600 --> 01:36:37,280
i don't have a good idea for how to to

2009
01:36:35,439 --> 01:36:40,319
how to make this be

2010
01:36:37,279 --> 01:36:42,639
more forgiving there right

2011
01:36:40,319 --> 01:36:42,639
um

2012
01:36:46,719 --> 01:36:50,840
all right let's try it let's try one

2013
01:36:49,118 --> 01:36:54,000
more thing

2014
01:36:50,840 --> 01:36:56,960
so let's suppose that we did

2015
01:36:54,000 --> 01:36:56,960
something like this

2016
01:36:58,479 --> 01:37:00,718
so

2017
01:37:05,760 --> 01:37:11,760
let's suppose we want to test the

2018
01:37:08,719 --> 01:37:15,679
direction of motion

2019
01:37:11,760 --> 01:37:19,600
uh of this thing so we say all right

2020
01:37:15,679 --> 01:37:22,158
there's the four bases

2021
01:37:19,600 --> 01:37:23,520
like and i'm just going to write them

2022
01:37:22,158 --> 01:37:25,839
out especially we can turn them into for

2023
01:37:23,520 --> 01:37:28,960
loop after

2024
01:37:25,840 --> 01:37:31,360
so we've got the dur offset um and and

2025
01:37:28,960 --> 01:37:34,800
maybe i just want to call this der

2026
01:37:31,359 --> 01:37:37,359
so it's easier so let's say we say

2027
01:37:34,800 --> 01:37:38,560
in the direction of z we know there are

2028
01:37:37,359 --> 01:37:43,839
four

2029
01:37:38,560 --> 01:37:43,840
of these right um

2030
01:37:44,719 --> 01:37:51,279
looks like this

2031
01:37:49,039 --> 01:37:53,039
so in the z direction we have four

2032
01:37:51,279 --> 01:37:56,079
things

2033
01:37:53,039 --> 01:37:57,198
and maybe we just say look if there's

2034
01:37:56,079 --> 01:38:00,880
nowhere in the z

2035
01:37:57,198 --> 01:38:03,359
direction that's actually possible to go

2036
01:38:00,880 --> 01:38:04,480
then you can't go in the z direction

2037
01:38:03,359 --> 01:38:08,880
right

2038
01:38:04,479 --> 01:38:08,879
so if if each of these

2039
01:38:14,238 --> 01:38:22,000
then the displacement of the point

2040
01:38:18,880 --> 01:38:26,560
uh you're not allowed to go in the z

2041
01:38:22,000 --> 01:38:28,719
direction in this cell right

2042
01:38:26,560 --> 01:38:30,000
so when we're looking at the cells we

2043
01:38:28,719 --> 01:38:32,158
say you know

2044
01:38:30,000 --> 01:38:33,520
from the location of the player to this

2045
01:38:32,158 --> 01:38:37,198
location

2046
01:38:33,520 --> 01:38:40,639
um if if there isn't

2047
01:38:37,198 --> 01:38:42,479
uh if all of the z's are occupied in the

2048
01:38:40,639 --> 01:38:45,679
direction you're trying to go

2049
01:38:42,479 --> 01:38:48,959
then you're not allowed to go in z uh

2050
01:38:45,679 --> 01:38:48,960
to get there right

2051
01:38:49,279 --> 01:38:53,039
i mean it's pretty straight forward

2052
01:38:51,760 --> 01:38:56,480
thing right

2053
01:38:53,039 --> 01:39:01,679
so we would say like you know

2054
01:38:56,479 --> 01:39:05,279
test p z equals from p

2055
01:39:01,679 --> 01:39:07,199
z right it's this is super crappy

2056
01:39:05,279 --> 01:39:08,960
i'm just trying to give you an idea of

2057
01:39:07,198 --> 01:39:10,719
what i was thinking

2058
01:39:08,960 --> 01:39:12,000
and then you just do that for each of

2059
01:39:10,719 --> 01:39:14,800
your directions so you just

2060
01:39:12,000 --> 01:39:17,600
go like look if we could have gone in

2061
01:39:14,800 --> 01:39:17,600
that direction

2062
01:39:21,359 --> 01:39:27,679
um we allow it if we couldn't we don't

2063
01:39:25,279 --> 01:39:28,719
and that's it like it doesn't really do

2064
01:39:27,679 --> 01:39:31,359
anything else

2065
01:39:28,719 --> 01:39:31,359
you know what i'm saying

2066
01:39:34,719 --> 01:39:39,359
and the problem with this is we're that

2067
01:39:37,118 --> 01:39:41,679
is great if you're on if you're the cell

2068
01:39:39,359 --> 01:39:43,759
containing the actual

2069
01:39:41,679 --> 01:39:44,960
uh starting point if you're not it

2070
01:39:43,760 --> 01:39:46,639
doesn't really make any sense what i'm

2071
01:39:44,960 --> 01:39:48,800
doing here so this probably won't work

2072
01:39:46,639 --> 01:39:50,079
but i want to leave it in there as the

2073
01:39:48,800 --> 01:39:54,239
next thing to investigate

2074
01:39:50,079 --> 01:39:59,840
next time um

2075
01:39:54,238 --> 01:39:59,839
so yeah basically this

2076
01:40:01,760 --> 01:40:07,199
right so xyz is all good there

2077
01:40:05,359 --> 01:40:08,719
uh this one just needs to be updated for

2078
01:40:07,198 --> 01:40:12,238
x so the

2079
01:40:08,719 --> 01:40:17,118
juror comes in

2080
01:40:12,238 --> 01:40:17,118
here like so

2081
01:40:17,679 --> 01:40:24,079
um and

2082
01:40:20,800 --> 01:40:27,279
this would oscillate right

2083
01:40:24,079 --> 01:40:29,840
so i think it's just that like it

2084
01:40:27,279 --> 01:40:33,920
basically you look at the plane

2085
01:40:29,840 --> 01:40:35,920
of motion and if anybody uh

2086
01:40:33,920 --> 01:40:37,039
could go you let it go in that direction

2087
01:40:35,920 --> 01:40:38,399
if not

2088
01:40:37,039 --> 01:40:40,800
then you don't let it go in that

2089
01:40:38,399 --> 01:40:42,638
direction and you're not going to update

2090
01:40:40,800 --> 01:40:47,600
the motion of the player

2091
01:40:42,639 --> 01:40:47,600
to there um

2092
01:40:49,760 --> 01:40:57,760
and then you would just say look

2093
01:40:53,520 --> 01:41:01,199
if any of them

2094
01:40:57,760 --> 01:41:06,239
so if any of these

2095
01:41:01,198 --> 01:41:10,238
are available uh

2096
01:41:06,238 --> 01:41:13,279
then you go right so then we get rid of

2097
01:41:10,238 --> 01:41:13,279
you know we get rid of this

2098
01:41:13,760 --> 01:41:18,400
uh and we we essentially say something

2099
01:41:17,039 --> 01:41:20,719
like

2100
01:41:18,399 --> 01:41:20,719
you know

2101
01:41:31,198 --> 01:41:35,839
how many times we clip and then here we

2102
01:41:33,359 --> 01:41:38,399
just say oh well if the clip count is

2103
01:41:35,840 --> 01:41:41,920
less than three then you get to move

2104
01:41:38,399 --> 01:41:45,039
right uh and the other thing is

2105
01:41:41,920 --> 01:41:46,319
i suppose in this case what we probably

2106
01:41:45,039 --> 01:41:49,118
want is not

2107
01:41:46,319 --> 01:41:51,519
that you go that you pick the original

2108
01:41:49,118 --> 01:42:01,839
points

2109
01:41:51,520 --> 01:42:01,840
one uh

2110
01:42:03,439 --> 01:42:10,719
so probably what you do is more

2111
01:42:06,719 --> 01:42:10,719
like this

2112
01:42:13,198 --> 01:42:16,799
you say um

2113
01:42:18,960 --> 01:42:25,679
we're gonna make an attempt to place the

2114
01:42:22,079 --> 01:42:28,719
point right it's going to be the 2p

2115
01:42:25,679 --> 01:42:32,079
but uh it's gonna

2116
01:42:28,719 --> 01:42:36,399
we're not gonna attempt to place you

2117
01:42:32,079 --> 01:42:40,840
further along in the direction of travel

2118
01:42:36,399 --> 01:42:43,839
um if we're if we can't in this cell

2119
01:42:40,840 --> 01:42:43,840
right

2120
01:42:44,719 --> 01:42:48,158
and i don't know uh i'm really reaching

2121
01:42:47,679 --> 01:42:51,520
here

2122
01:42:48,158 --> 01:42:54,879
but i like to try weird stuff that's

2123
01:42:51,520 --> 01:42:58,320
that's what i do um

2124
01:42:54,880 --> 01:43:01,520
so you know

2125
01:42:58,319 --> 01:43:03,759
that's just what's gonna happen um

2126
01:43:01,520 --> 01:43:05,040
and nicely we still have this case live

2127
01:43:03,760 --> 01:43:06,960
here so when i change this

2128
01:43:05,039 --> 01:43:08,840
we'll see what happens probably a

2129
01:43:06,960 --> 01:43:12,399
disaster

2130
01:43:08,840 --> 01:43:15,679
um so yeah and

2131
01:43:12,399 --> 01:43:19,839
the direction thing here would be

2132
01:43:15,679 --> 01:43:25,600
like this is just the direction of like

2133
01:43:19,840 --> 01:43:28,079
of motion i guess

2134
01:43:25,600 --> 01:43:29,119
um so hey it slid out just like i

2135
01:43:28,079 --> 01:43:30,880
thought it would

2136
01:43:29,118 --> 01:43:32,719
but that may have just been because yeah

2137
01:43:30,880 --> 01:43:36,639
like it's just not working now

2138
01:43:32,719 --> 01:43:40,319
right so not great

2139
01:43:36,639 --> 01:43:42,400
right um but yeah so all right

2140
01:43:40,319 --> 01:43:43,679
so then the next question is just like

2141
01:43:42,399 --> 01:43:47,359
if we were to do this

2142
01:43:43,679 --> 01:43:50,800
per cell starting from the cell

2143
01:43:47,359 --> 01:43:53,839
that we're on um you know i might make a

2144
01:43:50,800 --> 01:43:53,840
note to myself here like

2145
01:44:09,118 --> 01:44:12,559
and we can test and we'll try that next

2146
01:44:10,960 --> 01:44:14,480
time right

2147
01:44:12,560 --> 01:44:17,920
oh uh we got a someone said we had a

2148
01:44:14,479 --> 01:44:20,559
typo here oh yeah thank you

2149
01:44:17,920 --> 01:44:22,079
there you go uh i don't think that will

2150
01:44:20,560 --> 01:44:25,600
improve matters substantively

2151
01:44:22,079 --> 01:44:27,118
uh probably but you know we want that

2152
01:44:25,600 --> 01:44:30,800
fixed

2153
01:44:27,118 --> 01:44:32,399
um so yeah

2154
01:44:30,800 --> 01:44:34,000
it's kind of weird too it looks like

2155
01:44:32,399 --> 01:44:37,279
it's not able to place

2156
01:44:34,000 --> 01:44:37,279
things like

2157
01:44:39,520 --> 01:44:52,719
it looks a little weird

2158
01:44:49,279 --> 01:44:56,719
as well like it's moving slowly oh

2159
01:44:52,719 --> 01:44:56,719
that's because of this nonsense though

2160
01:44:58,000 --> 01:45:03,279
yeah so maybe next time we start with

2161
01:45:01,520 --> 01:45:04,480
the voxel and we do path finding through

2162
01:45:03,279 --> 01:45:06,479
the voxel

2163
01:45:04,479 --> 01:45:07,599
and that's just what we do and we see

2164
01:45:06,479 --> 01:45:10,718
what happens

2165
01:45:07,600 --> 01:45:10,719
with this kind of a scheme

2166
01:45:14,840 --> 01:45:19,840
um

2167
01:45:17,439 --> 01:45:21,678
and yeah like we we're getting closer

2168
01:45:19,840 --> 01:45:23,920
though it's kind of cool that that

2169
01:45:21,679 --> 01:45:25,279
i don't know if you noticed it actually

2170
01:45:23,920 --> 01:45:28,158
pushed that guy that guy

2171
01:45:25,279 --> 01:45:28,960
glided along the wall you could see the

2172
01:45:28,158 --> 01:45:31,359
red trail

2173
01:45:28,960 --> 01:45:33,118
and actually went in through the door on

2174
01:45:31,359 --> 01:45:35,519
that really long move

2175
01:45:33,118 --> 01:45:37,519
so you know we're getting there um we're

2176
01:45:35,520 --> 01:45:38,719
far far from our goal but

2177
01:45:37,520 --> 01:45:40,639
we're getting you know we're making

2178
01:45:38,719 --> 01:45:44,560
progress um

2179
01:45:40,639 --> 01:45:59,840
so we'll see all right that's it

2180
01:45:44,560 --> 01:45:59,840
that's it for today

2181
01:46:16,399 --> 01:46:21,439
all right um if there's any on topic

2182
01:46:20,000 --> 01:46:23,118
questions i'll take them otherwise we

2183
01:46:21,439 --> 01:46:24,960
will wrap it up for today

2184
01:46:23,118 --> 01:46:26,559
and i think i know what i want to try

2185
01:46:24,960 --> 01:46:29,279
next time

2186
01:46:26,560 --> 01:46:30,159
um i think i want to try starting at the

2187
01:46:29,279 --> 01:46:32,559
place you're at

2188
01:46:30,158 --> 01:46:33,519
with the voxel cells and moving through

2189
01:46:32,560 --> 01:46:37,119
the voxel

2190
01:46:33,520 --> 01:46:40,800
as far as you can until you hit stopping

2191
01:46:37,118 --> 01:46:44,079
right um

2192
01:46:40,800 --> 01:46:48,960
and we'll see so if you have any

2193
01:46:44,079 --> 01:46:48,960
on topic questions i will take

2194
01:46:52,840 --> 01:46:55,840
them

2195
01:47:08,238 --> 01:47:11,439
can you explain the direction check a

2196
01:47:09,439 --> 01:47:11,678
bit more uh yeah i mean i can't explain

2197
01:47:11,439 --> 01:47:14,079
it

2198
01:47:11,679 --> 01:47:15,520
in a i can explain it but i can't

2199
01:47:14,079 --> 01:47:18,800
justify it because that's kind of just

2200
01:47:15,520 --> 01:47:18,800
me experimenting with some things

2201
01:47:19,118 --> 01:47:23,679
um so

2202
01:47:22,158 --> 01:47:25,679
what i kind of wanted to move towards

2203
01:47:23,679 --> 01:47:27,760
was saying all right we're inside

2204
01:47:25,679 --> 01:47:30,079
a particular cell we've tested the

2205
01:47:27,760 --> 01:47:33,600
corners of this cell so there's eight

2206
01:47:30,079 --> 01:47:36,880
corners we've tested we know whether the

2207
01:47:33,600 --> 01:47:39,920
the entity could position itself on

2208
01:47:36,880 --> 01:47:42,960
each of the eight corners so

2209
01:47:39,920 --> 01:47:47,760
all i want to really do here

2210
01:47:42,960 --> 01:47:47,760
is say if we check

2211
01:47:47,840 --> 01:47:53,840
the for

2212
01:47:51,520 --> 01:47:55,040
a particular exit direction so if i want

2213
01:47:53,840 --> 01:47:58,319
to leave

2214
01:47:55,039 --> 01:47:59,198
out of the positive z for example let's

2215
01:47:58,319 --> 01:48:02,559
say

2216
01:47:59,198 --> 01:48:05,439
this here was positive z if we wanted to

2217
01:48:02,560 --> 01:48:06,080
go in the positive z direction are any

2218
01:48:05,439 --> 01:48:10,000
of the

2219
01:48:06,079 --> 01:48:12,639
points in the positive z direction open

2220
01:48:10,000 --> 01:48:13,520
if they are then allow motion in that

2221
01:48:12,639 --> 01:48:17,440
direction

2222
01:48:13,520 --> 01:48:17,440
if they're not disallow it

2223
01:48:17,679 --> 01:48:19,840
right

2224
01:48:30,840 --> 01:48:36,000
so

2225
01:48:33,520 --> 01:48:37,840
i've not forgotten upload day632 i'm

2226
01:48:36,000 --> 01:48:39,520
just getting really tired of youtube's

2227
01:48:37,840 --> 01:48:41,920
garbage

2228
01:48:39,520 --> 01:48:43,840
um it's they keep making it harder and

2229
01:48:41,920 --> 01:48:47,199
harder to upload videos to youtube

2230
01:48:43,840 --> 01:48:50,480
and i keep not wanting to bother

2231
01:48:47,198 --> 01:48:55,439
um so

2232
01:48:50,479 --> 01:49:01,839
it's just me purely being very annoyed

2233
01:48:55,439 --> 01:49:01,839
but i will get to it

2234
01:49:06,158 --> 01:49:10,479
so it can't move backwards um well again

2235
01:49:09,118 --> 01:49:11,359
it's not really so it can't move

2236
01:49:10,479 --> 01:49:12,959
backwards

2237
01:49:11,359 --> 01:49:15,839
it's so it can't move in a direction

2238
01:49:12,960 --> 01:49:15,840
that's blocked

2239
01:49:35,679 --> 01:49:39,520
uh and and it's not really that

2240
01:49:37,599 --> 01:49:41,440
important to understand this

2241
01:49:39,520 --> 01:49:43,679
anyway because i'm just experimenting

2242
01:49:41,439 --> 01:49:44,799
with this and i was like oh well i have

2243
01:49:43,679 --> 01:49:46,079
a little bit of time here at the end so

2244
01:49:44,800 --> 01:49:48,639
let me just try it but it's not

2245
01:49:46,079 --> 01:49:49,679
like this is not good right so it's not

2246
01:49:48,639 --> 01:49:51,118
really important to understand what's

2247
01:49:49,679 --> 01:49:52,719
going on here because we're literally

2248
01:49:51,118 --> 01:49:54,158
just like trying some stuff

2249
01:49:52,719 --> 01:49:56,000
so it's interesting to understand what

2250
01:49:54,158 --> 01:49:58,879
we're trying but it's not like i've

2251
01:49:56,000 --> 01:50:00,158
really like i'm this is not anything

2252
01:49:58,880 --> 01:50:05,039
that anyone will care about

2253
01:50:00,158 --> 01:50:05,039
including us um right

2254
01:50:07,279 --> 01:50:10,238
uh no i'm not trying to prevent the

2255
01:50:08,960 --> 01:50:11,760
glove from moving under the skull i'm

2256
01:50:10,238 --> 01:50:13,519
just trying to improve the quality of

2257
01:50:11,760 --> 01:50:15,920
the collision detector

2258
01:50:13,520 --> 01:50:15,920
that's all

2259
01:50:19,279 --> 01:50:22,399
um when you're trapped you don't

2260
01:50:20,960 --> 01:50:24,960
necessarily have a vector

2261
01:50:22,399 --> 01:50:26,000
in right um so take for example the

2262
01:50:24,960 --> 01:50:27,359
starting code

2263
01:50:26,000 --> 01:50:29,920
where the glove was embedded in the

2264
01:50:27,359 --> 01:50:32,319
ground right there's no vector in it

2265
01:50:29,920 --> 01:50:35,679
just started out embedded

2266
01:50:32,319 --> 01:50:36,960
right so what i'd like to do is if you

2267
01:50:35,679 --> 01:50:39,520
have something like that where the game

2268
01:50:36,960 --> 01:50:41,760
code for whatever reason

2269
01:50:39,520 --> 01:50:43,679
accidentally places something inside

2270
01:50:41,760 --> 01:50:45,360
something else

2271
01:50:43,679 --> 01:50:46,880
you know ideally you want your collision

2272
01:50:45,359 --> 01:50:48,639
detector to just deal with it

2273
01:50:46,880 --> 01:50:50,079
right you don't want that to break the

2274
01:50:48,639 --> 01:50:52,159
whole game

2275
01:50:50,079 --> 01:50:53,840
it's easy to have that happen by mistake

2276
01:50:52,158 --> 01:50:55,679
you know imagine something's gonna spawn

2277
01:50:53,840 --> 01:50:58,800
an entity at some point

2278
01:50:55,679 --> 01:51:00,639
it's like gonna create an entity because

2279
01:50:58,800 --> 01:51:02,159
you did something that says that an

2280
01:51:00,639 --> 01:51:04,000
entity gets created here like a new

2281
01:51:02,158 --> 01:51:04,719
glove magically appears or who knows

2282
01:51:04,000 --> 01:51:06,800
what

2283
01:51:04,719 --> 01:51:08,079
and it accidentally is inside something

2284
01:51:06,800 --> 01:51:08,960
you don't want that to like break the

2285
01:51:08,079 --> 01:51:12,399
whole game

2286
01:51:08,960 --> 01:51:14,000
right so ideally you want when things

2287
01:51:12,399 --> 01:51:16,399
are interpenetrating

2288
01:51:14,000 --> 01:51:17,840
they can find their way out without

2289
01:51:16,399 --> 01:51:19,598
needing to know

2290
01:51:17,840 --> 01:51:21,679
how they got there because they may just

2291
01:51:19,599 --> 01:51:24,159
have appeared there

2292
01:51:21,679 --> 01:51:25,520
and it's hard i mean don't get me wrong

2293
01:51:24,158 --> 01:51:28,158
um

2294
01:51:25,520 --> 01:51:29,440
we're trying to do something that's

2295
01:51:28,158 --> 01:51:32,638
that's

2296
01:51:29,439 --> 01:51:36,559
on the high end of the quality

2297
01:51:32,639 --> 01:51:40,079
bar for sure right um

2298
01:51:36,560 --> 01:51:41,760
but it is what you want

2299
01:51:40,079 --> 01:51:43,760
right so it may be on the high end of

2300
01:51:41,760 --> 01:51:49,840
the quality bar but it's not

2301
01:51:43,760 --> 01:51:49,840
for no reason

2302
01:51:58,238 --> 01:52:01,839
with the live code reloading i made a

2303
01:52:00,158 --> 01:52:03,679
thing where global variables in the dll

2304
01:52:01,840 --> 01:52:04,400
can be saved and restored when you load

2305
01:52:03,679 --> 01:52:05,760
the dll

2306
01:52:04,399 --> 01:52:08,559
have you tried that before i thought

2307
01:52:05,760 --> 01:52:11,840
it's kind of neat um

2308
01:52:08,560 --> 01:52:11,840
i guess i'm not sure what you mean

2309
01:52:13,599 --> 01:52:17,119
do you mean like our thing we had a lot

2310
01:52:15,599 --> 01:52:18,639
of stuff that we did that was along

2311
01:52:17,118 --> 01:52:20,158
those lines but i'm not sure which kind

2312
01:52:18,639 --> 01:52:22,400
you mean

2313
01:52:20,158 --> 01:52:22,399
um

2314
01:52:23,920 --> 01:52:28,840
like we had one where we would just when

2315
01:52:26,158 --> 01:52:32,399
you changed

2316
01:52:28,840 --> 01:52:34,800
um when you changed

2317
01:52:32,399 --> 01:52:36,319
settings it would rewrite a c file that

2318
01:52:34,800 --> 01:52:38,560
had the settings in it so the next time

2319
01:52:36,319 --> 01:52:41,679
you built it would have them

2320
01:52:38,560 --> 01:52:43,599
we have one obviously that just like you

2321
01:52:41,679 --> 01:52:46,079
can change the goal of arrows and just

2322
01:52:43,599 --> 01:52:48,480
it would automatically recompile them we

2323
01:52:46,079 --> 01:52:51,439
did that at one point

2324
01:52:48,479 --> 01:52:52,638
like you'd click and it would recompile

2325
01:52:51,439 --> 01:52:56,000
the actual

2326
01:52:52,639 --> 01:52:57,440
constant define so that if that led to

2327
01:52:56,000 --> 01:52:59,920
an optimization it would happen

2328
01:52:57,439 --> 01:53:01,198
in the thing we had a bunch of things i

2329
01:52:59,920 --> 01:53:02,800
don't know if it's the one

2330
01:53:01,198 --> 01:53:04,879
like one like you're thinking probably

2331
01:53:02,800 --> 01:53:13,840
not but we have played around with a

2332
01:53:04,880 --> 01:53:13,840
bunch of stuff like that

2333
01:53:15,840 --> 01:53:18,480
all right that's the end of the on top

2334
01:53:17,118 --> 01:53:19,279
of questions as far as i can tell so i'm

2335
01:53:18,479 --> 01:53:22,959
gonna wrap it on

2336
01:53:19,279 --> 01:53:23,198
up uh thanks everyone for joining me for

2337
01:53:22,960 --> 01:53:24,239
the

2338
01:53:23,198 --> 01:53:25,839
set of handmade hero it's been a

2339
01:53:24,238 --> 01:53:26,879
pleasure coding with you as always if

2340
01:53:25,840 --> 01:53:28,159
you would like to follow the series at

2341
01:53:26,880 --> 01:53:29,679
home you can always pre-order the game

2342
01:53:28,158 --> 01:53:30,638
on handmadehero.org and it comes with

2343
01:53:29,679 --> 01:53:32,639
source code

2344
01:53:30,639 --> 01:53:33,840
so if you want to try your hand at

2345
01:53:32,639 --> 01:53:36,000
writing a nice

2346
01:53:33,840 --> 01:53:38,239
robust collision detector uh you can go

2347
01:53:36,000 --> 01:53:40,560
ahead and beat me to it i only program

2348
01:53:38,238 --> 01:53:41,279
for one or two hours every week on this

2349
01:53:40,560 --> 01:53:44,800
stream

2350
01:53:41,279 --> 01:53:46,800
on this game so you should be able to

2351
01:53:44,800 --> 01:53:48,560
totally totally beat me to it right

2352
01:53:46,800 --> 01:53:51,920
you've got all week

2353
01:53:48,560 --> 01:53:53,599
give it a shot uh if you do let me know

2354
01:53:51,920 --> 01:53:55,599
if you find something cool

2355
01:53:53,599 --> 01:53:57,039
i'll be back here next weekend to try to

2356
01:53:55,599 --> 01:53:58,719
move it forward a little bit more

2357
01:53:57,039 --> 01:54:02,238
until then have fun programming everyone

2358
01:53:58,719 --> 01:54:02,239
and i'll see you on the internet take it

2359
01:54:06,840 --> 01:54:09,840
everybody

2360
01:54:13,279 --> 01:54:15,359
you

