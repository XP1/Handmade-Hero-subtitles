1
00:00:00,030 --> 00:00:03,480
hello everyone and welcome to handmade

2
00:00:01,919 --> 00:00:09,570
here offshore we code a complete game

3
00:00:03,480 --> 00:00:12,480
live on stream we really are I mean this

4
00:00:09,570 --> 00:00:14,669
is the classic case of we left ourselves

5
00:00:12,480 --> 00:00:18,000
with a giant code bomb and now we just

6
00:00:14,669 --> 00:00:22,559
have to defuse it basically last weekend

7
00:00:18,000 --> 00:00:26,130
we made importing WAV files in we

8
00:00:22,559 --> 00:00:29,698
integrated the code for importing and

9
00:00:26,129 --> 00:00:32,668
segmenting WAV files we we took that

10
00:00:29,699 --> 00:00:34,710
from our original asset packing task

11
00:00:32,668 --> 00:00:36,629
code and we weld it into the game so

12
00:00:34,710 --> 00:00:40,049
that now like the running game can just

13
00:00:36,630 --> 00:00:43,350
live import sound we did all of that

14
00:00:40,049 --> 00:00:46,199
work and it was a fair bit of stuff we

15
00:00:43,350 --> 00:00:48,090
had to merge but again you know it was

16
00:00:46,200 --> 00:00:50,550
code we'd already written so we didn't

17
00:00:48,090 --> 00:00:53,940
really have to invent anything it was

18
00:00:50,549 --> 00:00:56,250
just a porting issue really so we did

19
00:00:53,939 --> 00:00:59,128
that work but we didn't have time to

20
00:00:56,250 --> 00:01:00,808
actually do anything with it so we did

21
00:00:59,128 --> 00:01:04,259
all the porting and literally I don't

22
00:01:00,808 --> 00:01:07,048
think we've ever even run the code so

23
00:01:04,260 --> 00:01:10,020
what we need to do today is get started

24
00:01:07,049 --> 00:01:13,100
down the road towards actually finally

25
00:01:10,019 --> 00:01:18,090
that code and making it so that it

26
00:01:13,099 --> 00:01:20,849
imports WAV files properly and allows us

27
00:01:18,090 --> 00:01:24,990
to actually you know use them in the

28
00:01:20,849 --> 00:01:27,359
game so we got two steps to that step

29
00:01:24,989 --> 00:01:29,368
one involves no really new code I don't

30
00:01:27,359 --> 00:01:31,459
think it's just actually going through

31
00:01:29,368 --> 00:01:34,409
and getting the code we wrote working

32
00:01:31,459 --> 00:01:35,908
from last weekend that's just going

33
00:01:34,409 --> 00:01:39,270
through and making sure the wav files

34
00:01:35,909 --> 00:01:43,500
appear to import the actual sample data

35
00:01:39,269 --> 00:01:45,780
correctly and store it into the HHA

36
00:01:43,500 --> 00:01:48,618
files this involves reading one of those

37
00:01:45,780 --> 00:01:51,450
tag files parsing the WAV file directive

38
00:01:48,618 --> 00:01:54,000
looking at the tags applying those tags

39
00:01:51,450 --> 00:02:00,570
to an asset structure and then having

40
00:01:54,000 --> 00:02:08,310
that asset structure point to the to the

41
00:02:00,569 --> 00:02:09,899
actual sample data right and in order to

42
00:02:08,310 --> 00:02:12,239
do that so that there's a lot of things

43
00:02:09,899 --> 00:02:13,890
that we we haven't really addressed in

44
00:02:12,239 --> 00:02:15,330
there but in order to do that

45
00:02:13,889 --> 00:02:17,879
I think the only thing we may not have

46
00:02:15,330 --> 00:02:20,060
written yet is how the channel labeling

47
00:02:17,879 --> 00:02:23,039
works at the moment

48
00:02:20,060 --> 00:02:25,500
and so we kind of have to look at that I

49
00:02:23,039 --> 00:02:27,150
think we have to expand the grid notion

50
00:02:25,500 --> 00:02:29,219
to actually have those things labeled

51
00:02:27,150 --> 00:02:31,710
properly we have to actually prepare a

52
00:02:29,219 --> 00:02:33,150
grid that would have that in there and I

53
00:02:31,710 --> 00:02:34,830
think we made room for that but we never

54
00:02:33,150 --> 00:02:37,020
actually made the grid something along

55
00:02:34,830 --> 00:02:38,610
these lines so we have to write a little

56
00:02:37,020 --> 00:02:39,930
bit of new code to create that grid but

57
00:02:38,610 --> 00:02:40,980
other than that we wrote all the code

58
00:02:39,930 --> 00:02:43,800
and it probably just needs to be

59
00:02:40,979 --> 00:02:45,090
debugged the second step which we

60
00:02:43,800 --> 00:02:46,260
probably won't do today because that

61
00:02:45,090 --> 00:02:48,120
probably what we'll do today is the

62
00:02:46,259 --> 00:02:50,879
first part the second step which we'll

63
00:02:48,120 --> 00:02:53,340
do next weekend is to streamline the

64
00:02:50,879 --> 00:02:54,659
asset system and make it so that it

65
00:02:53,340 --> 00:02:56,310
actually works with page sounds

66
00:02:54,659 --> 00:03:00,509
correctly now because we sort of changed

67
00:02:56,310 --> 00:03:03,110
up how we wanted to do that and so just

68
00:03:00,509 --> 00:03:06,870
reimplemented that sound streaming code

69
00:03:03,110 --> 00:03:08,250
into its final form would be the last

70
00:03:06,870 --> 00:03:11,129
step of that process so that then we

71
00:03:08,250 --> 00:03:13,379
have sounds in the game fairly solid we

72
00:03:11,129 --> 00:03:15,180
can just move on from there we already

73
00:03:13,379 --> 00:03:16,530
did that sort of with textures we took

74
00:03:15,180 --> 00:03:18,420
kind of the old-school way that we were

75
00:03:16,530 --> 00:03:20,640
doing it and we rewrote it to be sort of

76
00:03:18,419 --> 00:03:22,559
a more efficient system there's a little

77
00:03:20,639 --> 00:03:24,149
bit of objec in the system namely that

78
00:03:22,560 --> 00:03:27,120
we don't really do any kind of runtime

79
00:03:24,150 --> 00:03:28,650
packing of textures if there's tiny and

80
00:03:27,120 --> 00:03:30,989
that's arguably something we probably

81
00:03:28,650 --> 00:03:32,760
should have been doing but other than

82
00:03:30,989 --> 00:03:34,500
that we did a pretty good job like we do

83
00:03:32,759 --> 00:03:36,449
what we're supposed to do which is we

84
00:03:34,500 --> 00:03:38,849
keep a bank of textures and we just swap

85
00:03:36,449 --> 00:03:42,419
them in as necessary and that should

86
00:03:38,849 --> 00:03:45,269
keep things running pretty smoothly but

87
00:03:42,419 --> 00:03:47,429
for sound we did not do the new version

88
00:03:45,269 --> 00:03:49,080
right and so what we want to do is make

89
00:03:47,430 --> 00:03:50,879
a fixed block system exactly like the

90
00:03:49,080 --> 00:03:53,430
textures base we'll just allocate a

91
00:03:50,879 --> 00:03:54,719
bunch of bins of a certain size and then

92
00:03:53,430 --> 00:03:57,360
every time we pay Janice and we just

93
00:03:54,719 --> 00:03:58,979
page it into one of those bins or we can

94
00:03:57,360 --> 00:04:02,549
use the kind of more avant-garde

95
00:03:58,979 --> 00:04:04,889
ridiculous system it's probably one of

96
00:04:02,549 --> 00:04:06,120
the weirdest ideas that have had I don't

97
00:04:04,889 --> 00:04:07,679
really know what I think about it but I

98
00:04:06,120 --> 00:04:09,750
just grabbed it on a previous stream and

99
00:04:07,680 --> 00:04:12,599
it was essentially to treat sound it's a

100
00:04:09,750 --> 00:04:15,750
giant streaming buffer and what you do

101
00:04:12,599 --> 00:04:18,600
every time you play a sound is you move

102
00:04:15,750 --> 00:04:21,358
it from the inactive region to the front

103
00:04:18,600 --> 00:04:24,960
if it's not in the active region at the

104
00:04:21,358 --> 00:04:26,549
time this is a really weird system I've

105
00:04:24,959 --> 00:04:27,689
never heard of anything like it it's

106
00:04:26,550 --> 00:04:28,920
probably dumb

107
00:04:27,689 --> 00:04:31,019
but we could certainly try it because

108
00:04:28,920 --> 00:04:33,270
you know sometimes trying dumb ideas

109
00:04:31,019 --> 00:04:36,269
lead to good ideas it's pretty hard to

110
00:04:33,269 --> 00:04:41,849
say entropy is the mother of all

111
00:04:36,269 --> 00:04:43,769
inventions you might say so I guess it's

112
00:04:41,850 --> 00:04:45,450
usually say necessity is the mother

113
00:04:43,769 --> 00:04:47,219
invention I would say that entropy is

114
00:04:45,449 --> 00:04:48,240
the mother of invention and necessity is

115
00:04:47,220 --> 00:04:49,710
just the thing that filters those

116
00:04:48,240 --> 00:04:57,530
inventions by which ones you want at a

117
00:04:49,709 --> 00:04:59,909
particular time not oh there yeah

118
00:04:57,529 --> 00:05:01,789
entropy is the mother of invention is is

119
00:04:59,910 --> 00:05:06,060
almost certainly the correct statement

120
00:05:01,790 --> 00:05:08,760
anyway so let's go ahead and get started

121
00:05:06,060 --> 00:05:11,220
on that we have a pretty clear road to

122
00:05:08,759 --> 00:05:14,370
go down here so there's no sense in

123
00:05:11,220 --> 00:05:16,740
belaboring the situation let me try and

124
00:05:14,370 --> 00:05:19,590
get this out of the way there we go I'm

125
00:05:16,740 --> 00:05:20,879
having cable issues I always have cable

126
00:05:19,589 --> 00:05:24,029
issues on handmade here oh there's way

127
00:05:20,879 --> 00:05:27,149
too many machines and things here it's

128
00:05:24,029 --> 00:05:29,669
not preferable anyway let's go ahead and

129
00:05:27,149 --> 00:05:35,039
get started I'm gonna go ahead and and

130
00:05:29,670 --> 00:05:37,560
open up excuse me the editor here and

131
00:05:35,040 --> 00:05:41,010
I'm going to switch to handmade Hiro and

132
00:05:37,560 --> 00:05:44,250
filled and then we're going to jump into

133
00:05:41,009 --> 00:05:46,439
the debugger I think what I may do oh

134
00:05:44,250 --> 00:05:48,300
right we're not using this to bugger any

135
00:05:46,439 --> 00:05:51,360
more because it crapped out on us so

136
00:05:48,300 --> 00:05:53,610
we're gonna be using remedy also you

137
00:05:51,360 --> 00:05:55,919
know I think we're one behind so I may

138
00:05:53,610 --> 00:05:59,930
want to update yeah we are so there's a

139
00:05:55,918 --> 00:06:02,219
2.0 version of remedy that's available I

140
00:05:59,930 --> 00:06:06,418
probably should switch to that it's got

141
00:06:02,220 --> 00:06:10,710
some pretty important additions made to

142
00:06:06,418 --> 00:06:15,029
it so yeah that's one of those things

143
00:06:10,709 --> 00:06:17,639
that yeah well I didn't plan for that

144
00:06:15,029 --> 00:06:20,969
and I don't have a thumb drive handy

145
00:06:17,639 --> 00:06:25,409
which is an issue if I'm being honest

146
00:06:20,970 --> 00:06:43,200
let me see if I can find one hold on a

147
00:06:25,410 --> 00:06:45,930
second we'll take a look in the into the

148
00:06:43,199 --> 00:06:48,899
magical backpack here in hope that I

149
00:06:45,930 --> 00:06:50,490
have a thumb drive that I can use to

150
00:06:48,899 --> 00:06:54,449
transfer the file because I don't I'm

151
00:06:50,490 --> 00:06:56,579
not logged into to the itch I owe to my

152
00:06:54,449 --> 00:07:00,209
itch I owe account which is where you

153
00:06:56,579 --> 00:07:03,409
get remedy from so let's take a look

154
00:07:00,209 --> 00:07:05,399
here if I've got one in here I hope I do

155
00:07:03,410 --> 00:07:09,479
there's a lot of stuff in this

156
00:07:05,399 --> 00:07:11,219
ridiculous in this ridiculous backpack

157
00:07:09,478 --> 00:07:13,379
here and I never really know what's

158
00:07:11,220 --> 00:07:15,030
still hanging around in there I've got

159
00:07:13,379 --> 00:07:19,110
some business cards that's always good

160
00:07:15,029 --> 00:07:22,259
we've got a pen like thing that has a

161
00:07:19,110 --> 00:07:25,919
screwdriver in it for for accessing like

162
00:07:22,259 --> 00:07:26,639
laptops I think we've got I don't even

163
00:07:25,918 --> 00:07:29,009
know what that is

164
00:07:26,639 --> 00:07:30,750
some kind of audio cable this is this is

165
00:07:29,009 --> 00:07:34,769
like a this is like a treasure trove in

166
00:07:30,750 --> 00:07:38,939
here we've got we've got okay there's a

167
00:07:34,769 --> 00:07:40,589
there's a power bar in there I don't

168
00:07:38,939 --> 00:07:40,889
want to know how long that's been in

169
00:07:40,589 --> 00:07:42,989
there

170
00:07:40,889 --> 00:07:45,959
that's probably not great if we're

171
00:07:42,990 --> 00:07:48,379
honest about it okay so there's a

172
00:07:45,959 --> 00:07:54,089
package of black forest gummy bears

173
00:07:48,379 --> 00:07:54,990
that's that's always good yep not not

174
00:07:54,089 --> 00:07:59,549
what I was expecting

175
00:07:54,990 --> 00:08:01,860
it's fine there's a mouse and then we've

176
00:07:59,550 --> 00:08:06,930
got what have we got in here let's take

177
00:08:01,860 --> 00:08:08,370
a look I thought there was a thumb drive

178
00:08:06,930 --> 00:08:12,410
in here but I'm having trouble

179
00:08:08,370 --> 00:08:17,129
look there's there's a there's a USB hub

180
00:08:12,410 --> 00:08:21,120
that's in there there's there's a ear

181
00:08:17,129 --> 00:08:22,889
ear plugs got that in there so this is

182
00:08:21,120 --> 00:08:25,829
there's you know there's some screen

183
00:08:22,889 --> 00:08:33,330
cleaning wipes ok so there's an entire

184
00:08:25,829 --> 00:08:37,139
keyboard in there so that's good got an

185
00:08:33,330 --> 00:08:41,839
entire keyboard we have a huge set of

186
00:08:37,139 --> 00:08:41,838
cabling we have a microphone

187
00:08:41,970 --> 00:08:49,149
this backpack is a little bit ridiculous

188
00:08:46,539 --> 00:08:50,139
at this point I don't even know why most

189
00:08:49,149 --> 00:08:52,629
of the stuff is in her I think probably

190
00:08:50,139 --> 00:08:55,330
because when I went to for coder Jam I

191
00:08:52,629 --> 00:08:57,370
think I probably left I never it looks

192
00:08:55,330 --> 00:09:01,210
to me like I never actually unpacked

193
00:08:57,370 --> 00:09:03,039
this backpack and so everything that was

194
00:09:01,210 --> 00:09:05,530
taken to allens for for a coder Jam is

195
00:09:03,039 --> 00:09:08,889
still in the backpack is basically what

196
00:09:05,529 --> 00:09:14,129
happened all right so last chance for us

197
00:09:08,889 --> 00:09:19,629
to find okay we have replacement pen ink

198
00:09:14,129 --> 00:09:23,169
so that's good we've got we've got a a

199
00:09:19,629 --> 00:09:28,059
car stereo to head like a you know like

200
00:09:23,169 --> 00:09:29,889
a cell phone to car stereo connector so

201
00:09:28,059 --> 00:09:32,889
that's you know for road trips and stuff

202
00:09:29,889 --> 00:09:36,789
we got two pens which actually would go

203
00:09:32,889 --> 00:09:41,889
with those pen inks we've got a flat

204
00:09:36,789 --> 00:09:44,469
folded Ethernet cable so that's pretty

205
00:09:41,889 --> 00:09:46,389
good right you can just kind of like

206
00:09:44,470 --> 00:09:48,490
keep that's that's in there that's

207
00:09:46,389 --> 00:09:50,139
probably good to keep in there huh case

208
00:09:48,490 --> 00:09:53,500
you need it for something we're trying

209
00:09:50,139 --> 00:09:55,929
to plug stuff in and let's see what's

210
00:09:53,500 --> 00:09:59,470
this here I feel something that feels

211
00:09:55,929 --> 00:10:04,500
like it could be possibly USB I'm not

212
00:09:59,470 --> 00:10:04,500
sure let me see okay oh that's in there

213
00:10:04,769 --> 00:10:10,389
yeah man that was disappointing I don't

214
00:10:08,110 --> 00:10:13,930
see an actual USB Drive in there

215
00:10:10,389 --> 00:10:16,330
anywhere so I think I'm gonna have to go

216
00:10:13,929 --> 00:10:18,429
get one from another room how

217
00:10:16,330 --> 00:10:20,920
disappointing is that like I literally

218
00:10:18,429 --> 00:10:27,279
don't see a single USB Drive in this

219
00:10:20,919 --> 00:10:29,049
entire thing well folks you'll have to

220
00:10:27,279 --> 00:10:31,480
excuse me for one moment because I just

221
00:10:29,049 --> 00:10:33,039
don't see any USB Drive here it must be

222
00:10:31,480 --> 00:10:36,580
in the other room probably because I

223
00:10:33,039 --> 00:10:39,519
installed remedy version 2 on my other

224
00:10:36,580 --> 00:10:42,430
machine on my dev machine and I needed

225
00:10:39,519 --> 00:10:44,049
to get it over there so I probably

226
00:10:42,429 --> 00:10:46,889
brought the thumb drive that's normally

227
00:10:44,049 --> 00:10:46,889
here I'll be right back

228
00:10:49,399 --> 00:10:52,528
[Music]

229
00:11:07,440 --> 00:11:11,169
[Music]

230
00:11:15,750 --> 00:11:21,190
at least we got the backpack unpacked

231
00:11:18,450 --> 00:11:22,930
that probably needed to happen if we're

232
00:11:21,190 --> 00:11:24,339
being honest with ourselves I'm gonna go

233
00:11:22,929 --> 00:11:27,370
ahead and switch over to this machine

234
00:11:24,339 --> 00:11:28,810
and copy the remedy to or well actually

235
00:11:27,370 --> 00:11:31,210
I guess I don't know what the latest one

236
00:11:28,809 --> 00:11:34,389
is because maybe there's been there

237
00:11:31,210 --> 00:11:37,120
might even be another one that that I

238
00:11:34,389 --> 00:11:39,519
haven't downloaded yet but let's take a

239
00:11:37,120 --> 00:11:44,019
look what we got here oh yeah there is

240
00:11:39,519 --> 00:11:45,669
so there's a - I don't so remedy for

241
00:11:44,019 --> 00:11:47,439
some reason has like the most version

242
00:11:45,669 --> 00:11:52,019
numbers of everything anything since

243
00:11:47,440 --> 00:11:55,540
Windows Windows was a four four digit

244
00:11:52,019 --> 00:12:00,819
version identifier as well so this is

245
00:11:55,539 --> 00:12:03,579
remedy 0.2 0.0 0.1 and I'm not sure what

246
00:12:00,820 --> 00:12:10,750
that necessary like why there are that

247
00:12:03,580 --> 00:12:12,778
many actual labels in there I'm not sure

248
00:12:10,750 --> 00:12:15,190
what that could possibly be referring to

249
00:12:12,778 --> 00:12:17,588
but but you know I guess we'll have to

250
00:12:15,190 --> 00:12:19,089
ask George why there are so many and he

251
00:12:17,589 --> 00:12:22,510
can tell us I don't know affect search

252
00:12:19,089 --> 00:12:24,250
Oh X 13 pixels is on there there he is

253
00:12:22,509 --> 00:12:28,149
so he can tell us why there are so many

254
00:12:24,250 --> 00:12:31,330
I don't know but he must know because he

255
00:12:28,149 --> 00:12:33,610
invented it so all right all I'm doing

256
00:12:31,330 --> 00:12:35,379
here is I'm just updating to the new

257
00:12:33,610 --> 00:12:38,820
remedy there were a lot of pretty

258
00:12:35,379 --> 00:12:43,419
important changes in this version that

259
00:12:38,820 --> 00:12:45,820
that like I'm was really happy about so

260
00:12:43,419 --> 00:12:47,289
I really don't want to use it without

261
00:12:45,820 --> 00:12:48,760
these so I thought it was worth going to

262
00:12:47,289 --> 00:12:55,000
get it so I'm just going to copy the new

263
00:12:48,759 --> 00:13:00,909
version into into our remedy directory

264
00:12:55,000 --> 00:13:02,620
here place and if you yourself want to

265
00:13:00,909 --> 00:13:04,419
get this debugger if you're sick of

266
00:13:02,620 --> 00:13:08,049
Visual Studio or if you just stopped

267
00:13:04,419 --> 00:13:13,838
working like minded you can actually go

268
00:13:08,049 --> 00:13:16,029
to its IO and get it its remedy well

269
00:13:13,839 --> 00:13:20,470
actually just completed for me it's

270
00:13:16,029 --> 00:13:25,299
remedy BG HIO you can click on this

271
00:13:20,470 --> 00:13:28,450
right here and you can buy it and it's

272
00:13:25,299 --> 00:13:30,490
like I don't know 1/100 of the price of

273
00:13:28,450 --> 00:13:32,020
visual studio something like that I

274
00:13:30,490 --> 00:13:33,970
don't remember what the price is it's

275
00:13:32,019 --> 00:13:35,259
like a thousand or two thousand dollars

276
00:13:33,970 --> 00:13:37,090
for the full version I don't even want

277
00:13:35,259 --> 00:13:39,789
to know what it is you could probably

278
00:13:37,090 --> 00:13:41,950
get one for only 10 times that much

279
00:13:39,789 --> 00:13:43,149
I'm guessing visual studio I don't

280
00:13:41,950 --> 00:13:45,520
remember I bought a version of

281
00:13:43,149 --> 00:13:48,549
professional for Maui and it was like

282
00:13:45,519 --> 00:13:50,949
absurdly expensive for such a piece of

283
00:13:48,549 --> 00:13:52,539
junk so this is a bargain price in my

284
00:13:50,950 --> 00:13:54,850
opinion probably the best 20 bucks

285
00:13:52,539 --> 00:13:57,189
you'll ever spend on piece of

286
00:13:54,850 --> 00:13:59,409
development software that's basically

287
00:13:57,190 --> 00:14:03,400
free in the realm of development

288
00:13:59,409 --> 00:14:04,750
software and and yeah it's pretty close

289
00:14:03,399 --> 00:14:06,789
to completely replacing Visual Studio

290
00:14:04,750 --> 00:14:11,250
there's there's not a lot left that

291
00:14:06,789 --> 00:14:15,129
doesn't doesn't work so anyway in here

292
00:14:11,250 --> 00:14:16,539
we have now upgraded to 201 so that's

293
00:14:15,129 --> 00:14:17,769
just I feel like that's probably

294
00:14:16,539 --> 00:14:18,909
something we want to do before doing any

295
00:14:17,769 --> 00:14:21,819
serious debugging because there were

296
00:14:18,909 --> 00:14:23,139
some pretty big improvements to it that

297
00:14:21,820 --> 00:14:26,950
were made including better expression

298
00:14:23,139 --> 00:14:29,100
parsing in the watch window and handling

299
00:14:26,950 --> 00:14:32,350
of there was some problems with

300
00:14:29,100 --> 00:14:34,840
inspecting things that are passed to a

301
00:14:32,350 --> 00:14:37,000
function by value that were compound so

302
00:14:34,840 --> 00:14:38,320
I could be passive struct it was having

303
00:14:37,000 --> 00:14:41,370
trouble with that and that got fixed

304
00:14:38,320 --> 00:14:44,170
which is a pretty big button for me

305
00:14:41,370 --> 00:14:47,139
because I will often pass or return

306
00:14:44,169 --> 00:14:49,479
strux and so I being able to inspect

307
00:14:47,139 --> 00:14:52,569
those is pretty important for me so that

308
00:14:49,480 --> 00:14:55,029
was that was a big one as well okay so

309
00:14:52,570 --> 00:14:57,760
if we start down this route now that

310
00:14:55,029 --> 00:15:02,529
we've got our debugger updated if we go

311
00:14:57,759 --> 00:15:03,580
into the import layer here and we just

312
00:15:02,529 --> 00:15:05,019
look at what was supposed to be

313
00:15:03,580 --> 00:15:07,060
happening we could get an idea of what

314
00:15:05,019 --> 00:15:08,679
we want to start looking at what you can

315
00:15:07,059 --> 00:15:10,750
see is that basically the codes gonna

316
00:15:08,679 --> 00:15:12,129
actually exactly the same as it did for

317
00:15:10,750 --> 00:15:14,289
bitmaps there's really not a lot of

318
00:15:12,129 --> 00:15:16,299
difference there but then what's gonna

319
00:15:14,289 --> 00:15:18,639
happen is we've sort of set a little

320
00:15:16,299 --> 00:15:21,429
booby trap up so that if we saw a sound

321
00:15:18,639 --> 00:15:23,289
instead of doing the normal PNG parsing

322
00:15:21,429 --> 00:15:25,989
that you would do we're gonna do a wave

323
00:15:23,289 --> 00:15:27,759
parse instead so we kept the code path

324
00:15:25,990 --> 00:15:28,870
basically exactly the same we'd not

325
00:15:27,759 --> 00:15:31,029
duplicate it at all

326
00:15:28,870 --> 00:15:33,610
we run exactly the same code path and

327
00:15:31,029 --> 00:15:34,439
then all we do is we have a few places

328
00:15:33,610 --> 00:15:36,300
in it

329
00:15:34,440 --> 00:15:38,610
where we sort of switch out what we're

330
00:15:36,299 --> 00:15:41,039
doing if it turned out that we were

331
00:15:38,610 --> 00:15:42,778
parsing a sound we either turn some

332
00:15:41,039 --> 00:15:46,439
things off returns and things on that we

333
00:15:42,778 --> 00:15:48,088
would normally need so in here we would

334
00:15:46,440 --> 00:15:50,430
expect to go down the process audio

335
00:15:48,089 --> 00:15:52,860
import path up here we would expect to

336
00:15:50,429 --> 00:15:56,818
go in the parse wave path or parse wave

337
00:15:52,860 --> 00:15:59,339
as I like to call it now that's really

338
00:15:56,818 --> 00:16:00,990
most of it the rest of this stuff like

339
00:15:59,339 --> 00:16:02,790
there's a few things like well hey if

340
00:16:00,990 --> 00:16:07,139
you try to put an alignment point on a

341
00:16:02,789 --> 00:16:09,179
wave directive we would tell you no but

342
00:16:07,139 --> 00:16:10,230
most of the other things will execute as

343
00:16:09,179 --> 00:16:13,078
before

344
00:16:10,230 --> 00:16:15,569
the one thing that we didn't do if I

345
00:16:13,078 --> 00:16:18,568
remember correctly is when we come

346
00:16:15,568 --> 00:16:21,708
through here and you see us like find

347
00:16:18,568 --> 00:16:24,509
something that is a sound or is music

348
00:16:21,708 --> 00:16:26,638
what we would normally do in the case of

349
00:16:24,509 --> 00:16:28,379
a piece of artwork is we call this parse

350
00:16:26,639 --> 00:16:30,060
pieces function and what that was

351
00:16:28,379 --> 00:16:32,639
designed to do is that was designed to

352
00:16:30,059 --> 00:16:36,838
say what is the actual thing being

353
00:16:32,639 --> 00:16:41,509
parsed here like ground cover or you

354
00:16:36,839 --> 00:16:43,620
know a head our body image items a plate

355
00:16:41,509 --> 00:16:45,149
figure out what we're actually parsing

356
00:16:43,620 --> 00:16:47,879
and then what it would do is it would

357
00:16:45,149 --> 00:16:51,089
build this grid worth of tags because we

358
00:16:47,879 --> 00:16:53,458
import like different pieces of the PNG

359
00:16:51,089 --> 00:16:55,850
as different assets with different tags

360
00:16:53,458 --> 00:16:59,429
on them right

361
00:16:55,850 --> 00:17:01,379
so the problem that we have here is we

362
00:16:59,429 --> 00:17:04,859
need to do the same thing for sound but

363
00:17:01,379 --> 00:17:06,959
we never actually did it right so when

364
00:17:04,859 --> 00:17:10,279
we actually find a sound file that we

365
00:17:06,959 --> 00:17:14,909
want to update this audio channel tags

366
00:17:10,279 --> 00:17:17,490
grid needs to match up with how we're

367
00:17:14,909 --> 00:17:20,549
actually splitting those channels out

368
00:17:17,490 --> 00:17:23,730
now if you go and look at how we were

369
00:17:20,548 --> 00:17:26,879
parsing those I guess it would probably

370
00:17:23,730 --> 00:17:30,329
an import a process audio import I think

371
00:17:26,880 --> 00:17:32,280
which is right here you can see us look

372
00:17:30,329 --> 00:17:34,649
at what the Mac's channel count is and

373
00:17:32,279 --> 00:17:36,990
it's the size of that grid and when we

374
00:17:34,650 --> 00:17:39,509
go through and import these you can see

375
00:17:36,990 --> 00:17:44,509
that for every channel that we were

376
00:17:39,509 --> 00:17:44,509
going to import we assign that to a sub

377
00:17:45,169 --> 00:17:50,490
sort of looking for we assign that to

378
00:17:48,089 --> 00:17:54,449
a substitute subsequent entries in that

379
00:17:50,490 --> 00:17:57,269
asset grid so if we want them to be

380
00:17:54,450 --> 00:18:00,960
tagged properly on export what we need

381
00:17:57,269 --> 00:18:03,000
to have is that you know we already sort

382
00:18:00,960 --> 00:18:05,460
of set ourselves up for this we put it

383
00:18:03,000 --> 00:18:07,319
right here but this to do is the part

384
00:18:05,460 --> 00:18:10,529
I'm talking about what we need is that

385
00:18:07,319 --> 00:18:13,950
audio channel tags grid at the start of

386
00:18:10,529 --> 00:18:18,660
importing has to be created to contain

387
00:18:13,950 --> 00:18:20,580
on each individual entry a single tag

388
00:18:18,660 --> 00:18:24,600
which is just that says channel 0

389
00:18:20,579 --> 00:18:29,220
channel 1 channel 2 channel 3 right that

390
00:18:24,599 --> 00:18:32,809
is what we need to have happen and so in

391
00:18:29,220 --> 00:18:35,850
some sense this ends up exactly

392
00:18:32,809 --> 00:18:37,950
mirroring the grid import for art the

393
00:18:35,849 --> 00:18:41,189
only difference is instead of us having

394
00:18:37,950 --> 00:18:44,039
lots of different ways that the sound

395
00:18:41,190 --> 00:18:46,860
can get tagged depending on what the

396
00:18:44,039 --> 00:18:48,539
directive is in our case the sounds have

397
00:18:46,859 --> 00:18:55,500
only one directive which is just the web

398
00:18:48,539 --> 00:18:57,210
directive or sorry they only have one

399
00:18:55,500 --> 00:18:58,109
way of importing regardless of the

400
00:18:57,210 --> 00:18:59,190
directive because there's a sound

401
00:18:58,109 --> 00:19:00,319
directive and a music director if we

402
00:18:59,190 --> 00:19:02,250
don't really do anything differently

403
00:19:00,319 --> 00:19:04,409
regardless of which one it is there's

404
00:19:02,250 --> 00:19:05,880
only one thing that happens they end up

405
00:19:04,410 --> 00:19:08,550
with a grid that just says for every

406
00:19:05,880 --> 00:19:10,410
channel use a channel tag that says what

407
00:19:08,549 --> 00:19:13,379
channel it was and that's all we do

408
00:19:10,410 --> 00:19:15,690
right now you could imagine in the

409
00:19:13,380 --> 00:19:17,760
future us doing something fancier I mean

410
00:19:15,690 --> 00:19:19,980
we could do something fancier here right

411
00:19:17,759 --> 00:19:22,200
so we could have a bunch of different

412
00:19:19,980 --> 00:19:23,670
ways that we create sounds where the

413
00:19:22,200 --> 00:19:26,130
different channels mean different things

414
00:19:23,670 --> 00:19:29,810
and then you use a directive that says

415
00:19:26,130 --> 00:19:32,700
which tag grid to apply when it comes in

416
00:19:29,809 --> 00:19:34,740
we absolutely could do that we just

417
00:19:32,700 --> 00:19:37,950
don't have a reason to do that right

418
00:19:34,740 --> 00:19:40,620
there's there's no you know there's no

419
00:19:37,950 --> 00:19:45,720
point we don't have to do that for any

420
00:19:40,619 --> 00:19:47,579
particular reason so for our purposes we

421
00:19:45,720 --> 00:19:50,130
are just gonna do the simple thing but

422
00:19:47,579 --> 00:19:52,289
it's worth noting that if we wanted to

423
00:19:50,130 --> 00:19:55,590
really mirror that process and we

424
00:19:52,289 --> 00:19:57,809
actually had some argument for why we

425
00:19:55,589 --> 00:19:59,220
would need to split sounds into

426
00:19:57,809 --> 00:20:01,139
different channels that got tagged

427
00:19:59,220 --> 00:20:01,890
completely differently rather than just

428
00:20:01,140 --> 00:20:05,220
got tagged with there

429
00:20:01,890 --> 00:20:06,360
channel index we absolutely have the

430
00:20:05,220 --> 00:20:08,850
code path for it

431
00:20:06,359 --> 00:20:10,799
so should we find that that needs to

432
00:20:08,849 --> 00:20:13,490
happen in the future we can trivially do

433
00:20:10,799 --> 00:20:17,069
it at the moment we really don't need to

434
00:20:13,490 --> 00:20:20,009
so we just won't but that's where we're

435
00:20:17,069 --> 00:20:22,319
at so in here with synchronized asset

436
00:20:20,009 --> 00:20:24,000
file changes I'm gonna do it at the top

437
00:20:22,319 --> 00:20:25,529
here but we could actually do this a

438
00:20:24,000 --> 00:20:27,859
little bit more proactively we can see

439
00:20:25,529 --> 00:20:31,470
that happen maybe a little bit later

440
00:20:27,859 --> 00:20:33,299
this import grid tags here is right on

441
00:20:31,470 --> 00:20:36,200
the context so right here what we could

442
00:20:33,299 --> 00:20:39,690
do is initialize it what I'm gonna do is

443
00:20:36,200 --> 00:20:41,580
something like create audio tag audio

444
00:20:39,690 --> 00:20:45,059
channel tag array or something or tag

445
00:20:41,579 --> 00:20:46,649
grid and not to be confused with a grid

446
00:20:45,059 --> 00:20:47,789
which is from Harry Potter this is tag

447
00:20:46,650 --> 00:20:50,820
grid which is slightly different

448
00:20:47,789 --> 00:20:53,670
although no less large and imposing so

449
00:20:50,819 --> 00:20:55,589
on the hht context we've got this audio

450
00:20:53,670 --> 00:20:57,060
channel tags I'm just gonna say look we

451
00:20:55,589 --> 00:21:00,899
need a function that's gonna initialize

452
00:20:57,059 --> 00:21:03,149
those audio channel tags now one of the

453
00:21:00,900 --> 00:21:04,590
things that I think we might also want

454
00:21:03,150 --> 00:21:06,570
to look at just while we're doing this

455
00:21:04,589 --> 00:21:09,000
because I mean we are sort of trying to

456
00:21:06,569 --> 00:21:11,609
get this asset processing to be sort of

457
00:21:09,000 --> 00:21:13,829
streamlined is it's worth noting now too

458
00:21:11,609 --> 00:21:15,359
that one of the things that we don't

459
00:21:13,829 --> 00:21:18,149
really need to do anymore but still do

460
00:21:15,359 --> 00:21:20,189
if you take a look here at what's

461
00:21:18,150 --> 00:21:22,950
happening inside this parse piece is

462
00:21:20,190 --> 00:21:25,670
call so what we use to do and the reason

463
00:21:22,950 --> 00:21:29,430
we used to do it is totally reasonable

464
00:21:25,670 --> 00:21:31,800
the reason we use it this way what we're

465
00:21:29,430 --> 00:21:34,740
doing inside parse pieces is we build a

466
00:21:31,799 --> 00:21:37,440
tag array anew every time we go to parse

467
00:21:34,740 --> 00:21:41,670
a particular thing like blocks or head

468
00:21:37,440 --> 00:21:43,860
right we create these sort of tag arrays

469
00:21:41,670 --> 00:21:46,140
what you'll notice is they're all the

470
00:21:43,859 --> 00:21:47,579
same now now why do we do this if

471
00:21:46,140 --> 00:21:49,320
they're all the same byte we just make a

472
00:21:47,579 --> 00:21:52,619
grids ahead of time because we used to

473
00:21:49,319 --> 00:21:56,700
do is we used to have welded into this

474
00:21:52,619 --> 00:22:02,250
import process appending the tags from

475
00:21:56,700 --> 00:22:04,220
the actual tag markup for that put that

476
00:22:02,250 --> 00:22:07,079
particular file or that particular

477
00:22:04,220 --> 00:22:09,900
import we're not doing that anymore

478
00:22:07,079 --> 00:22:12,299
so if you look at what happens in this

479
00:22:09,900 --> 00:22:15,180
process when we actually don't need to

480
00:22:12,299 --> 00:22:15,669
build different tag arrays for each of

481
00:22:15,180 --> 00:22:18,910
these

482
00:22:15,670 --> 00:22:22,150
right none of these none of that has to

483
00:22:18,910 --> 00:22:24,550
happen it's all totally rote and we just

484
00:22:22,150 --> 00:22:27,190
know ahead of time what it actually is

485
00:22:24,549 --> 00:22:31,269
so we can avoid going through and doing

486
00:22:27,190 --> 00:22:33,340
this on every import of every asset by

487
00:22:31,269 --> 00:22:36,730
just creating them ahead of time exactly

488
00:22:33,339 --> 00:22:40,179
like we do with the audio channel tag

489
00:22:36,730 --> 00:22:42,910
grid again tag grid not hagrid very

490
00:22:40,180 --> 00:22:45,009
important programming concept they don't

491
00:22:42,910 --> 00:22:47,769
often teach that in CS classes I wish

492
00:22:45,009 --> 00:22:50,529
they would you know a lot of people are

493
00:22:47,769 --> 00:22:52,539
currently graduating with a degree in CS

494
00:22:50,529 --> 00:22:54,430
from even reputable institutions and

495
00:22:52,539 --> 00:22:54,879
they still think that at a grid and

496
00:22:54,430 --> 00:22:56,799
hagrid

497
00:22:54,880 --> 00:22:58,870
are the same thing and it's you know it

498
00:22:56,799 --> 00:23:00,490
really creates problems when you take

499
00:22:58,869 --> 00:23:02,319
junior programmers and you try to throw

500
00:23:00,490 --> 00:23:04,329
them into a production environment and

501
00:23:02,319 --> 00:23:06,909
all of a sudden they're you know you

502
00:23:04,329 --> 00:23:08,799
tell them that you need to make a tag

503
00:23:06,910 --> 00:23:11,740
grid for something and you end up with

504
00:23:08,799 --> 00:23:12,970
this like sort of burly groundskeeper or

505
00:23:11,740 --> 00:23:14,859
you tell them that they need to get

506
00:23:12,970 --> 00:23:16,329
Hagrid for something because you know

507
00:23:14,859 --> 00:23:19,289
maybe it's magical or whatever and you

508
00:23:16,329 --> 00:23:22,389
end up with this too you know this this

509
00:23:19,289 --> 00:23:25,559
two-dimensional list of asset tags right

510
00:23:22,390 --> 00:23:27,670
and in neither case are those things

511
00:23:25,559 --> 00:23:29,769
miscible that they're not fungible you

512
00:23:27,670 --> 00:23:31,539
can't use one instead of the other and

513
00:23:29,769 --> 00:23:33,359
so I really want to just highlight how

514
00:23:31,539 --> 00:23:35,680
important it is to to make sure you know

515
00:23:33,359 --> 00:23:39,009
which one of those ones you're dealing

516
00:23:35,680 --> 00:23:40,360
with and you know yet may not show up on

517
00:23:39,009 --> 00:23:42,160
a job interview but it's going to cause

518
00:23:40,359 --> 00:23:44,500
you a lot of problems when you actually

519
00:23:42,160 --> 00:23:47,470
go to do production work at a real

520
00:23:44,500 --> 00:23:49,779
company so in here with parse pieces I

521
00:23:47,470 --> 00:23:51,880
what I'm advocating is I think we should

522
00:23:49,779 --> 00:23:54,250
just go ahead and break this out so that

523
00:23:51,880 --> 00:23:56,020
when we do these imports here what we

524
00:23:54,250 --> 00:24:00,460
could do is just use the context

525
00:23:56,019 --> 00:24:03,369
structure that we could easily pass you

526
00:24:00,460 --> 00:24:05,769
know down to parse pieces we could just

527
00:24:03,369 --> 00:24:08,589
have all of those tag grids just created

528
00:24:05,769 --> 00:24:10,720
at the head end into the context

529
00:24:08,589 --> 00:24:13,000
structure itself and then it would just

530
00:24:10,720 --> 00:24:16,059
provide back a pointer it'd be like

531
00:24:13,000 --> 00:24:18,369
here's the one to use as you go forward

532
00:24:16,059 --> 00:24:20,230
and that would be that so if you take a

533
00:24:18,369 --> 00:24:24,279
look at how the tag system is working

534
00:24:20,230 --> 00:24:26,890
inside the actual call-out where we call

535
00:24:24,279 --> 00:24:28,029
parse pieces to begin with and I can

536
00:24:26,890 --> 00:24:29,538
actually jump up there

537
00:24:28,029 --> 00:24:32,108
so here's parse pea

538
00:24:29,538 --> 00:24:34,669
is inside parse top-level block here

539
00:24:32,108 --> 00:24:36,589
when we go down through parse pieces you

540
00:24:34,669 --> 00:24:39,049
can see the import grid tag structure

541
00:24:36,589 --> 00:24:41,569
here if we look at how that's actually

542
00:24:39,048 --> 00:24:43,190
getting used so if we come down through

543
00:24:41,569 --> 00:24:48,739
there oops that's not what I want to do

544
00:24:43,190 --> 00:24:50,659
let's look at it this way if you look at

545
00:24:48,739 --> 00:24:54,409
how this is working you can kind of see

546
00:24:50,659 --> 00:24:56,269
that in here we well my head's in the

547
00:24:54,409 --> 00:24:58,759
way I'm trying to show you if there it

548
00:24:56,269 --> 00:25:00,739
is you can see that all we do is just

549
00:24:58,759 --> 00:25:02,479
treat it as a pass through right it's

550
00:25:00,739 --> 00:25:05,329
all attack that's happening is it's

551
00:25:02,479 --> 00:25:06,769
getting passed through here so I think

552
00:25:05,329 --> 00:25:10,220
we can just call this something like

553
00:25:06,769 --> 00:25:12,048
template tags or whatever and then what

554
00:25:10,220 --> 00:25:14,868
we can do is just treat it as a pointer

555
00:25:12,048 --> 00:25:17,898
so we can just say all right you know

556
00:25:14,868 --> 00:25:20,749
we've got a set of templates here we

557
00:25:17,898 --> 00:25:22,939
know that we're gonna pull out something

558
00:25:20,749 --> 00:25:24,950
like it so when we come through this

559
00:25:22,940 --> 00:25:28,308
template tags we're gonna say okay in

560
00:25:24,950 --> 00:25:31,669
this case the template tags is always

561
00:25:28,308 --> 00:25:34,999
this we don't have to really look at any

562
00:25:31,669 --> 00:25:36,859
more information than that in the case

563
00:25:34,999 --> 00:25:38,710
where we've got something where we're

564
00:25:36,858 --> 00:25:41,358
not sure exactly what it's going to be

565
00:25:38,710 --> 00:25:43,639
let's take a look at that parse pieces

566
00:25:41,358 --> 00:25:46,939
and see to what extent we even really

567
00:25:43,638 --> 00:25:48,528
need to do it it looks in here right I

568
00:25:46,940 --> 00:25:53,149
mean just looking at it it looks like we

569
00:25:48,528 --> 00:25:57,528
could just insert this particular sort

570
00:25:53,148 --> 00:25:59,778
of token check serial token check it

571
00:25:57,528 --> 00:26:03,019
looks like we could just do that rather

572
00:25:59,778 --> 00:26:05,450
directly and so it you know in fact we

573
00:26:03,019 --> 00:26:07,878
don't even really need it to be internal

574
00:26:05,450 --> 00:26:11,690
here because it's only really setting

575
00:26:07,878 --> 00:26:14,898
that template tags part I think what we

576
00:26:11,690 --> 00:26:17,538
could probably do is change the way that

577
00:26:14,898 --> 00:26:19,939
we're looking at this stuff here and

578
00:26:17,538 --> 00:26:22,398
kind of put that in so you know we're

579
00:26:19,940 --> 00:26:24,950
looking at is default right at the head

580
00:26:22,398 --> 00:26:28,128
end here we could make this part just do

581
00:26:24,950 --> 00:26:31,369
this checking right so this this part

582
00:26:28,128 --> 00:26:32,868
where we actually do the check we don't

583
00:26:31,368 --> 00:26:35,449
really need to call out to this function

584
00:26:32,868 --> 00:26:37,848
anymore I don't think I think what we

585
00:26:35,450 --> 00:26:39,739
can do is just do that right in line and

586
00:26:37,848 --> 00:26:41,960
make that a lot clearer about what's

587
00:26:39,739 --> 00:26:43,309
going on so when we come through here

588
00:26:41,960 --> 00:26:45,880
you can see that the block

589
00:26:43,309 --> 00:26:48,049
is the thing that we actually want check

590
00:26:45,880 --> 00:26:51,050
and so when we come through here and we

591
00:26:48,049 --> 00:26:52,700
see that this part right here would

592
00:26:51,049 --> 00:26:55,039
normally be building out those tags

593
00:26:52,700 --> 00:26:57,950
we're gonna let that happen again ahead

594
00:26:55,039 --> 00:27:00,289
of time and so the import type that we

595
00:26:57,950 --> 00:27:02,029
would normally be looking at there again

596
00:27:00,289 --> 00:27:04,009
so that's this these two these are the

597
00:27:02,029 --> 00:27:06,109
two things right here that we're really

598
00:27:04,009 --> 00:27:07,910
filling out again they don't even depend

599
00:27:06,109 --> 00:27:09,469
on anything else so it's it's a really

600
00:27:07,910 --> 00:27:11,960
good indication that we don't need to

601
00:27:09,470 --> 00:27:15,230
bundle those those productions together

602
00:27:11,960 --> 00:27:16,789
either so if we get rid of this stuff we

603
00:27:15,230 --> 00:27:18,920
can just say all right let's check the

604
00:27:16,789 --> 00:27:20,180
block token we'll see what it is we

605
00:27:18,920 --> 00:27:21,830
don't need to do any of this stuff so

606
00:27:20,180 --> 00:27:24,230
instead what we're gonna do is pretend

607
00:27:21,829 --> 00:27:26,240
that we already had this template built

608
00:27:24,230 --> 00:27:28,789
and so the template tags are just going

609
00:27:26,240 --> 00:27:30,980
to be something off of the context so if

610
00:27:28,789 --> 00:27:34,909
we imagine this context just had all of

611
00:27:30,980 --> 00:27:36,890
this stuff on it right so we have the

612
00:27:34,910 --> 00:27:42,890
import grid tags audio channel tags

613
00:27:36,890 --> 00:27:46,570
we've got the like block tags maybe

614
00:27:42,890 --> 00:27:46,570
something like this I don't know

615
00:27:47,410 --> 00:27:53,090
something like this so we just have a

616
00:27:50,240 --> 00:27:54,470
ton of these you know different blocks

617
00:27:53,089 --> 00:27:55,939
we can have so that'd be like head

618
00:27:54,470 --> 00:27:59,000
that'd be body right you can look down

619
00:27:55,940 --> 00:28:05,120
here character

620
00:27:59,000 --> 00:28:13,130
we've got clever in hand and then we've

621
00:28:05,119 --> 00:28:14,599
got item obstacles plate and you know I

622
00:28:13,130 --> 00:28:16,130
don't know exactly where we want these

623
00:28:14,599 --> 00:28:17,990
to come from or exactly how you know

624
00:28:16,130 --> 00:28:21,430
maybe we want those to be pointers or

625
00:28:17,990 --> 00:28:23,960
you know who knows what but essentially

626
00:28:21,430 --> 00:28:25,970
regardless of how we you know choose to

627
00:28:23,960 --> 00:28:29,779
do that we want something along the

628
00:28:25,970 --> 00:28:31,339
lines of okay we've got art block tags

629
00:28:29,779 --> 00:28:34,279
here are the tags that you're going to

630
00:28:31,339 --> 00:28:37,519
apply in the case where you end up

631
00:28:34,279 --> 00:28:40,579
seeing the head token again none of this

632
00:28:37,519 --> 00:28:44,900
matters and so we just want to again get

633
00:28:40,579 --> 00:28:47,569
the art head tags right and so all we're

634
00:28:44,900 --> 00:28:49,280
doing is we're just keeping this this

635
00:28:47,569 --> 00:28:52,730
result here actually needs to change to

636
00:28:49,279 --> 00:28:55,069
import type right as well again you're

637
00:28:52,730 --> 00:28:57,140
just calling it something else and so

638
00:28:55,069 --> 00:28:59,359
all we need to do here is just

639
00:28:57,140 --> 00:29:01,550
automatically replace these with an

640
00:28:59,359 --> 00:29:03,500
assumption that we already built them

641
00:29:01,549 --> 00:29:05,180
because since they don't actually depend

642
00:29:03,500 --> 00:29:08,180
anymore on the individual thing we're

643
00:29:05,180 --> 00:29:10,150
importing there's no reason not to so

644
00:29:08,180 --> 00:29:15,650
I'm just deleting all these things

645
00:29:10,150 --> 00:29:17,480
goodbye and we'll you know we'll keep

646
00:29:15,650 --> 00:29:19,220
that parse pieces function we'll call it

647
00:29:17,480 --> 00:29:20,750
something else but effectively we'll

648
00:29:19,220 --> 00:29:23,720
keep it and we'll just call it once

649
00:29:20,750 --> 00:29:24,920
startup and that'll be much more

650
00:29:23,720 --> 00:29:27,680
efficient because then we're not

651
00:29:24,920 --> 00:29:30,769
constantly creating these ridiculous tag

652
00:29:27,680 --> 00:29:32,570
arrays all the time for no reason right

653
00:29:30,769 --> 00:29:39,410
because before that's what we were doing

654
00:29:32,569 --> 00:29:40,700
so in this case yeah in this case we

655
00:29:39,410 --> 00:29:43,880
don't really know what this stuff is

656
00:29:40,700 --> 00:29:47,150
yeah I don't know do we actually inside

657
00:29:43,880 --> 00:29:51,440
the h h TS do we actually have those yet

658
00:29:47,150 --> 00:29:56,600
I don't know if we do or not if we look

659
00:29:51,440 --> 00:29:58,430
inside the base game h HT so so these

660
00:29:56,599 --> 00:30:00,889
things are all commented out so I'm

661
00:29:58,430 --> 00:30:03,799
gonna feel free to just go ahead and say

662
00:30:00,890 --> 00:30:06,620
well it was a multi tile import we know

663
00:30:03,799 --> 00:30:09,289
that that's what it will be even though

664
00:30:06,619 --> 00:30:11,779
you know we we haven't actually done the

665
00:30:09,289 --> 00:30:13,819
template tags for it yet that's what it

666
00:30:11,779 --> 00:30:14,930
will be later so we can put the to do

667
00:30:13,819 --> 00:30:18,980
down in the thing where we actually

668
00:30:14,930 --> 00:30:19,580
create those and not up here so that'll

669
00:30:18,980 --> 00:30:26,900
be fine

670
00:30:19,579 --> 00:30:29,059
port type and so that's about it

671
00:30:26,900 --> 00:30:30,140
although I do want to weld the other

672
00:30:29,059 --> 00:30:34,279
oops

673
00:30:30,140 --> 00:30:39,340
do that 10 tags come on art obstacles

674
00:30:34,279 --> 00:30:39,339
and the last one plates

675
00:30:43,859 --> 00:30:48,909
sooo this just lets us take a look at

676
00:30:46,900 --> 00:30:51,910
what the top level block type actually

677
00:30:48,910 --> 00:30:55,090
is and we can now go ahead and weld this

678
00:30:51,910 --> 00:30:57,519
stuff right in there so again all of

679
00:30:55,089 --> 00:31:00,339
these are are actually should be block

680
00:30:57,519 --> 00:31:06,819
token as well so I should just go ahead

681
00:31:00,339 --> 00:31:11,500
and replace those real quick and that

682
00:31:06,819 --> 00:31:13,899
should get us most of the way there but

683
00:31:11,500 --> 00:31:16,420
I would like again to just sort of weld

684
00:31:13,900 --> 00:31:20,050
these in you can see the sub durst of

685
00:31:16,420 --> 00:31:24,580
happening here and so one thing I could

686
00:31:20,049 --> 00:31:27,369
do is say yeah the subject stuff could

687
00:31:24,579 --> 00:31:29,169
also be part of this pipe I guess I

688
00:31:27,369 --> 00:31:32,019
don't actually know if we want to do it

689
00:31:29,170 --> 00:31:34,360
white this way but if you imagine

690
00:31:32,019 --> 00:31:36,579
extending this out to sort of say look

691
00:31:34,359 --> 00:31:43,709
let's put all the things in here so

692
00:31:36,579 --> 00:31:46,629
we've got default music sound like so on

693
00:31:43,710 --> 00:31:53,970
then what we could do is say well maybe

694
00:31:46,630 --> 00:31:56,830
these things are actually nested maybe I

695
00:31:53,970 --> 00:31:58,690
don't really know exactly how I want

696
00:31:56,829 --> 00:32:02,139
that to work but let's suppose they were

697
00:31:58,690 --> 00:32:05,140
so let's suppose these things were were

698
00:32:02,140 --> 00:32:07,570
nested like this and we wanted to do

699
00:32:05,140 --> 00:32:08,740
something where we said okay so all of

700
00:32:07,569 --> 00:32:10,450
these all come from the same

701
00:32:08,740 --> 00:32:12,309
subdirectory maybe that's a mistake

702
00:32:10,450 --> 00:32:14,620
maybe we should have everything in its

703
00:32:12,309 --> 00:32:15,879
own subdirectory I don't know we're

704
00:32:14,619 --> 00:32:18,489
certainly free to do that we could

705
00:32:15,880 --> 00:32:19,990
propagate that subtor switch down a

706
00:32:18,490 --> 00:32:27,730
little bit but I guess what I'm

707
00:32:19,990 --> 00:32:33,190
suggesting is this right so yeah is

708
00:32:27,730 --> 00:32:35,410
default would be true here is music

709
00:32:33,190 --> 00:32:37,299
would be true here and is sound would be

710
00:32:35,410 --> 00:32:41,950
true here I don't know if I actually

711
00:32:37,299 --> 00:32:43,629
want both of those I don't know that

712
00:32:41,950 --> 00:32:46,779
that's actually necessary I might just

713
00:32:43,630 --> 00:32:48,040
want one which is is audio because I

714
00:32:46,779 --> 00:32:51,099
don't think there's any reason to

715
00:32:48,039 --> 00:32:55,000
differentiate between those two but

716
00:32:51,099 --> 00:32:57,069
we'll see in the meantime I do want is

717
00:32:55,000 --> 00:32:58,569
the music to come from the

718
00:32:57,069 --> 00:33:01,168
music Durr and the sound to come from

719
00:32:58,569 --> 00:33:03,398
the sounder because those are actually

720
00:33:01,169 --> 00:33:05,019
currently separated at least the way

721
00:33:03,398 --> 00:33:07,750
that we decided newer assets for the

722
00:33:05,019 --> 00:33:10,929
first part so we do want to look roughly

723
00:33:07,750 --> 00:33:13,028
like that but again I'm not sure whether

724
00:33:10,929 --> 00:33:15,970
we need is music or is sound I'm gonna

725
00:33:13,028 --> 00:33:18,759
take a really brief stroll and see if we

726
00:33:15,970 --> 00:33:21,339
actually care you know we never really

727
00:33:18,759 --> 00:33:24,339
care so I think for now because I don't

728
00:33:21,339 --> 00:33:26,619
have any reason not to I'm gonna have an

729
00:33:24,339 --> 00:33:29,918
is art and is audio and that's it I'm

730
00:33:26,619 --> 00:33:32,258
not gonna have the sound one so I'm

731
00:33:29,919 --> 00:33:33,038
gonna do something like that where we

732
00:33:32,259 --> 00:33:35,139
say look they go in different

733
00:33:33,038 --> 00:33:38,710
directories but they're treated the same

734
00:33:35,138 --> 00:33:40,839
for all intents and purposes here and so

735
00:33:38,710 --> 00:33:42,610
then what I'm gonna do is pull this part

736
00:33:40,839 --> 00:33:45,388
up because now this doesn't need to

737
00:33:42,609 --> 00:33:48,008
happen anymore right that's that's not

738
00:33:45,388 --> 00:33:50,619
part of it and what I'm gonna do is

739
00:33:48,009 --> 00:33:53,740
inside here I'm gonna say this is what

740
00:33:50,619 --> 00:33:55,569
we need to know for audio we don't care

741
00:33:53,740 --> 00:33:56,950
about the parsed pieces aspect of things

742
00:33:55,569 --> 00:33:59,589
because we're not calling that anymore

743
00:33:56,950 --> 00:34:03,038
anyway and so we're gonna do something

744
00:33:59,589 --> 00:34:04,898
like this right so the import type is

745
00:34:03,038 --> 00:34:06,548
audio for both of these and the tags are

746
00:34:04,898 --> 00:34:09,039
the same for both of these in the future

747
00:34:06,548 --> 00:34:10,690
we may change the tags between music and

748
00:34:09,039 --> 00:34:14,230
sound like maybe we'll tag them slightly

749
00:34:10,690 --> 00:34:15,668
differently I'm not sure but for now we

750
00:34:14,230 --> 00:34:17,199
are going to tag them the same because

751
00:34:15,668 --> 00:34:19,179
we don't actually have anything we need

752
00:34:17,199 --> 00:34:22,148
to do differently between them we're

753
00:34:19,179 --> 00:34:24,639
then gonna keep this part here but we

754
00:34:22,148 --> 00:34:26,980
want to have some way of making it clear

755
00:34:24,639 --> 00:34:31,149
that we didn't understand what the block

756
00:34:26,980 --> 00:34:33,699
type actually was so I think rather you

757
00:34:31,148 --> 00:34:35,378
know this import none part here I don't

758
00:34:33,699 --> 00:34:37,178
know that we actually want to error on

759
00:34:35,378 --> 00:34:41,318
it there I think we were airing on it

760
00:34:37,179 --> 00:34:48,010
there just just because right so I I

761
00:34:41,318 --> 00:34:50,519
don't know we may want to do something

762
00:34:48,010 --> 00:34:50,520
more like this

763
00:34:51,030 --> 00:34:56,560
if import type none then we don't need

764
00:34:53,858 --> 00:34:59,980
to do anything right in this case and

765
00:34:56,559 --> 00:35:02,588
well I can still have the invalid

766
00:34:59,980 --> 00:35:05,769
default case show up here but I think

767
00:35:02,588 --> 00:35:09,009
that'd probably be fine and I think all

768
00:35:05,769 --> 00:35:12,429
I really want to do there is when we are

769
00:35:09,010 --> 00:35:15,040
looking at these tags

770
00:35:12,429 --> 00:35:17,710
I want to go ahead and produce an error

771
00:35:15,039 --> 00:35:19,900
that says I didn't recognize the block

772
00:35:17,710 --> 00:35:22,119
right because that's what's really going

773
00:35:19,900 --> 00:35:25,780
on here when we you know have these

774
00:35:22,119 --> 00:35:27,250
different multi tile things whatever you

775
00:35:25,780 --> 00:35:29,829
know that I think that's actually what

776
00:35:27,250 --> 00:35:31,239
we want to have happen so when we come

777
00:35:29,829 --> 00:35:34,180
through here do we get you know one of

778
00:35:31,239 --> 00:35:35,289
these errors we can just say look and

779
00:35:34,179 --> 00:35:39,129
not remember what our thing is it's just

780
00:35:35,289 --> 00:35:41,679
the tokenizer in the block right yeah so

781
00:35:39,130 --> 00:35:43,809
in here I don't actually know that this

782
00:35:41,679 --> 00:35:45,009
matters at all I don't think it does so

783
00:35:43,809 --> 00:35:47,440
I'm gonna get rid of it and I'm gonna

784
00:35:45,010 --> 00:35:49,570
take this error and put it where it

785
00:35:47,440 --> 00:35:51,400
actually probably you know arguably

786
00:35:49,570 --> 00:35:55,470
belongs in the first place which is

787
00:35:51,400 --> 00:35:59,139
right here which is to say if we can't

788
00:35:55,469 --> 00:36:00,879
find you know among all of the different

789
00:35:59,139 --> 00:36:03,129
types of directives that we expect to

790
00:36:00,880 --> 00:36:05,858
see if we can't find anything that

791
00:36:03,130 --> 00:36:09,099
matches what we saw on the file then

792
00:36:05,858 --> 00:36:11,199
that's an error that the block token

793
00:36:09,099 --> 00:36:12,849
that we saw we don't know what did it

794
00:36:11,199 --> 00:36:14,379
you know you you put in some kind of an

795
00:36:12,849 --> 00:36:17,980
art import directive we did we just

796
00:36:14,380 --> 00:36:19,539
never seen have heard of right so I

797
00:36:17,980 --> 00:36:21,460
think that makes just a much more

798
00:36:19,539 --> 00:36:22,838
coherent import path and it unifies

799
00:36:21,460 --> 00:36:24,608
everything together in a much cleaner

800
00:36:22,838 --> 00:36:27,190
way it also makes us easier to read

801
00:36:24,608 --> 00:36:31,088
because basically can see the steps and

802
00:36:27,190 --> 00:36:33,369
I can even sort of you know narrate them

803
00:36:31,088 --> 00:36:40,539
here in a sense I can say you know step

804
00:36:33,369 --> 00:36:48,269
one here right is oops determine the

805
00:36:40,539 --> 00:36:48,269
import type from the block

806
00:36:51,400 --> 00:36:59,039
so that happens then what we do is we

807
00:36:54,969 --> 00:37:03,578
parse the actual contents of this thing

808
00:36:59,039 --> 00:37:15,569
so here actually this is we find the

809
00:37:03,579 --> 00:37:23,970
matching asset file right and then here

810
00:37:15,568 --> 00:37:26,949
we prepare the the grid for matching

811
00:37:23,969 --> 00:37:43,959
which is I guess not that interesting

812
00:37:26,949 --> 00:37:46,419
and then we do the parse so this is what

813
00:37:43,960 --> 00:37:56,949
actually happens at the moment and then

814
00:37:46,420 --> 00:37:59,170
we parse the contents so we parse the

815
00:37:56,949 --> 00:38:02,528
contents of the block doing whatever we

816
00:37:59,170 --> 00:38:05,619
need to do for that and then finally

817
00:38:02,528 --> 00:38:13,389
here at the end that we actually rebuild

818
00:38:05,619 --> 00:38:15,278
the asset contents right and so it's a

819
00:38:13,389 --> 00:38:17,920
pretty involved process but it's

820
00:38:15,278 --> 00:38:19,509
actually not you know that hard to

821
00:38:17,920 --> 00:38:21,430
understand now that it's all laid out

822
00:38:19,509 --> 00:38:22,778
and I think this makes it a lot clearer

823
00:38:21,429 --> 00:38:24,278
how this is going because now it's

824
00:38:22,778 --> 00:38:26,318
really obvious how these things are

825
00:38:24,278 --> 00:38:27,639
getting tagged up and you can kind of

826
00:38:26,318 --> 00:38:29,980
see now that these things are just

827
00:38:27,639 --> 00:38:32,170
shorthand for applying a particular tag

828
00:38:29,980 --> 00:38:34,769
array what that means is that in the

829
00:38:32,170 --> 00:38:37,269
future what we could consider doing is

830
00:38:34,768 --> 00:38:40,209
we could consider just defining these

831
00:38:37,268 --> 00:38:41,709
and it file themselves so if in the

832
00:38:40,210 --> 00:38:43,480
future we just want to get rid of the

833
00:38:41,710 --> 00:38:46,778
concept that these things are hard-coded

834
00:38:43,480 --> 00:38:50,349
we could instead just have you know a

835
00:38:46,778 --> 00:38:53,259
way that we parse these and we create

836
00:38:50,349 --> 00:38:56,680
those tag arrays out of the parsed

837
00:38:53,259 --> 00:38:59,199
contents and then apply them so what

838
00:38:56,679 --> 00:39:02,739
that leaves us now is all we need to do

839
00:38:59,199 --> 00:39:04,609
is have an actual inside the parse hht

840
00:39:02,739 --> 00:39:06,820
part where we actually well

841
00:39:04,610 --> 00:39:09,769
I guess it's probably actually out here

842
00:39:06,820 --> 00:39:13,100
when we do the create audio channel tag

843
00:39:09,769 --> 00:39:15,679
grid again not a Hagrid but at a grid

844
00:39:13,099 --> 00:39:18,739
what we need to do is initialize all of

845
00:39:15,679 --> 00:39:22,489
these so for all of these we need to do

846
00:39:18,739 --> 00:39:31,489
a create call so this is like create art

847
00:39:22,489 --> 00:39:33,169
block tag grid right and we're gonna do

848
00:39:31,489 --> 00:39:38,389
this for every single one so this is

849
00:39:33,170 --> 00:39:40,010
create art head tag grid and we'll need

850
00:39:38,389 --> 00:39:41,900
to pass a few other things to this

851
00:39:40,010 --> 00:39:45,140
probably but we'll find out in a second

852
00:39:41,900 --> 00:39:54,079
what those actually are so here's the

853
00:39:45,139 --> 00:39:56,799
body tag grid and so on and so forth

854
00:39:54,079 --> 00:40:02,299
right so these are all gonna be this way

855
00:39:56,800 --> 00:40:16,460
that and they're all gonna be done like

856
00:40:02,300 --> 00:40:18,380
this I think something like that and

857
00:40:16,460 --> 00:40:26,240
again I don't really know what we're

858
00:40:18,380 --> 00:40:27,650
gonna pass here but probably the canta

859
00:40:26,239 --> 00:40:37,039
game assets

860
00:40:27,650 --> 00:40:46,119
I'm guessing and what are these our

861
00:40:37,039 --> 00:40:46,119
obstacle tag grid and our weight

862
00:40:51,599 --> 00:40:57,880
so I think that's all of them and these

863
00:40:55,239 --> 00:41:00,639
are each just going to create that array

864
00:40:57,880 --> 00:41:02,829
of tags that we expected to see so it's

865
00:41:00,639 --> 00:41:05,230
it's really just us taking this parse

866
00:41:02,829 --> 00:41:08,289
pieces structure and breaking it up

867
00:41:05,230 --> 00:41:11,289
right so what we want to do is

868
00:41:08,289 --> 00:41:13,659
effectively call this and we just need

869
00:41:11,289 --> 00:41:19,329
it to be yet we just need to make sure

870
00:41:13,659 --> 00:41:24,639
that we do it kind of see the tokenizer

871
00:41:19,329 --> 00:41:26,769
is never really used anymore in fact the

872
00:41:24,639 --> 00:41:28,659
only reason we were using it is when we

873
00:41:26,769 --> 00:41:31,869
ran out of tag space we were issuing an

874
00:41:28,659 --> 00:41:34,599
error there so I think the way I would

875
00:41:31,869 --> 00:41:37,299
rather do that is just have this now

876
00:41:34,599 --> 00:41:40,929
raise some kind of an error when it when

877
00:41:37,300 --> 00:41:42,640
it fails that we then just Iran because

878
00:41:40,929 --> 00:41:44,379
now we know that there's no way of for

879
00:41:42,639 --> 00:41:45,489
having a parsing error if that makes

880
00:41:44,380 --> 00:41:47,380
sense

881
00:41:45,489 --> 00:41:50,229
so we should be able to just make this

882
00:41:47,380 --> 00:41:53,559
be something that checks the error at

883
00:41:50,230 --> 00:41:55,150
the end and returns like two or false or

884
00:41:53,559 --> 00:41:57,539
something like that right so it should

885
00:41:55,150 --> 00:42:01,200
be pretty straightforward

886
00:41:57,539 --> 00:42:03,940
to make this work without the tokenizer

887
00:42:01,199 --> 00:42:06,069
so I think all we really needed to do at

888
00:42:03,940 --> 00:42:07,659
that point is we just need to pass the

889
00:42:06,070 --> 00:42:08,920
game a set structure because that's the

890
00:42:07,659 --> 00:42:12,519
only thing that's actually going to be

891
00:42:08,920 --> 00:42:15,970
used here and so these should all take

892
00:42:12,519 --> 00:42:19,059
assets in addition and that's it at the

893
00:42:15,969 --> 00:42:24,639
moment we actually don't really even

894
00:42:19,059 --> 00:42:27,369
need to do that even but you know we

895
00:42:24,639 --> 00:42:30,659
only really need to be so specific here

896
00:42:27,369 --> 00:42:33,639
we don't need to go completely overboard

897
00:42:30,659 --> 00:42:35,710
but anyway so getting rid of these we

898
00:42:33,639 --> 00:42:38,170
don't need type token and we don't need

899
00:42:35,710 --> 00:42:39,730
tokenizer all we need is a pointer to

900
00:42:38,170 --> 00:42:43,510
the tags that we're actually filling out

901
00:42:39,730 --> 00:42:44,920
and then the game assets part here which

902
00:42:43,510 --> 00:42:47,980
is what we're using to like actually

903
00:42:44,920 --> 00:42:49,930
allocate those tag arrays and what after

904
00:42:47,980 --> 00:42:51,550
we do parse pieces again we're not

905
00:42:49,929 --> 00:42:53,769
returning an import type because we're

906
00:42:51,550 --> 00:42:55,840
not doing this determination anymore so

907
00:42:53,769 --> 00:42:57,610
parse pieces as a template for these

908
00:42:55,840 --> 00:43:00,789
things I think all we really want to do

909
00:42:57,610 --> 00:43:04,510
is return of b32 that tells us did it

910
00:43:00,789 --> 00:43:06,820
work right and that way we can also take

911
00:43:04,510 --> 00:43:09,130
that one error that we actually do care

912
00:43:06,820 --> 00:43:13,510
about if it happened and we can throw

913
00:43:09,130 --> 00:43:16,809
that into the process here so you know

914
00:43:13,510 --> 00:43:19,330
when we do all of this part of things we

915
00:43:16,809 --> 00:43:23,259
can issue that error message pretty

916
00:43:19,329 --> 00:43:24,670
directly right and and that should get

917
00:43:23,260 --> 00:43:28,090
us out of the business of passing the

918
00:43:24,670 --> 00:43:29,769
tokenizer around as well so if I just go

919
00:43:28,090 --> 00:43:33,400
ahead and make this a thing where it

920
00:43:29,769 --> 00:43:36,610
says look if if all of these don't

921
00:43:33,400 --> 00:43:41,139
succeed then we're in trouble and we

922
00:43:36,610 --> 00:43:43,240
don't want to really proceed right so in

923
00:43:41,139 --> 00:43:45,489
here where we've got an out f2 that you

924
00:43:43,239 --> 00:43:47,739
can see writing the Airstream

925
00:43:45,489 --> 00:43:49,449
to start with there so what I'm going to

926
00:43:47,739 --> 00:43:50,799
do is I'm going to create an if here

927
00:43:49,449 --> 00:43:53,500
where like if all of these things

928
00:43:50,800 --> 00:43:57,130
succeeded then we proceed with the

929
00:43:53,500 --> 00:43:59,559
import as we would normally do and if we

930
00:43:57,130 --> 00:44:03,640
don't then we we just abort like right

931
00:43:59,559 --> 00:44:06,159
off the bat okay so that should be fine

932
00:44:03,639 --> 00:44:08,199
and again this we don't have a tokenizer

933
00:44:06,159 --> 00:44:09,759
at this point so we're not issuing an

934
00:44:08,199 --> 00:44:12,219
error on that but we're actually gonna

935
00:44:09,760 --> 00:44:14,650
issue an error on is you know the the

936
00:44:12,219 --> 00:44:17,139
error stream directly and so this is

937
00:44:14,650 --> 00:44:20,710
going to be in like error you know out

938
00:44:17,139 --> 00:44:22,000
of tag space and I think we can even get

939
00:44:20,710 --> 00:44:23,440
rid of this error eventually if we

940
00:44:22,000 --> 00:44:25,480
wanted to by just creating these that

941
00:44:23,440 --> 00:44:28,869
start up in the handmade and turtle

942
00:44:25,480 --> 00:44:30,730
context and then we would just always

943
00:44:28,869 --> 00:44:33,099
have them there just something we know

944
00:44:30,730 --> 00:44:34,780
we allocated space for so again just

945
00:44:33,099 --> 00:44:36,309
sort of slowly moving this to something

946
00:44:34,780 --> 00:44:38,320
now that we've seen how it actually

947
00:44:36,309 --> 00:44:41,019
works in practice we can migrate

948
00:44:38,320 --> 00:44:43,840
everything out to things that are less

949
00:44:41,019 --> 00:44:47,889
troublesome and less likely to fail

950
00:44:43,840 --> 00:44:50,680
which is what you want so I think that

951
00:44:47,889 --> 00:44:53,319
should be roughly all we need to do to

952
00:44:50,679 --> 00:44:55,389
you know start things up and now we just

953
00:44:53,320 --> 00:44:57,250
need to actually process this stuff if

954
00:44:55,389 --> 00:44:58,900
you look at where the tokenizer was

955
00:44:57,250 --> 00:45:02,079
happening here I'm gonna get rid of that

956
00:44:58,900 --> 00:45:04,780
I'm also gonna get rid of it here the

957
00:45:02,079 --> 00:45:08,139
tag builder what you can see is the tag

958
00:45:04,780 --> 00:45:10,510
builder is generally speaking something

959
00:45:08,139 --> 00:45:14,049
that's happening inside like one of

960
00:45:10,510 --> 00:45:15,590
these kinds of calls or directly in here

961
00:45:14,050 --> 00:45:18,330
I guess

962
00:45:15,590 --> 00:45:22,260
yeah you can see like a begin tags here

963
00:45:18,329 --> 00:45:25,799
and so those begin tags end tags thing I

964
00:45:22,260 --> 00:45:28,260
guess all we really want to do is just

965
00:45:25,800 --> 00:45:35,160
have it so that those builder errors

966
00:45:28,260 --> 00:45:39,060
propagate outward right I think that's

967
00:45:35,159 --> 00:45:44,250
all we really want seems fairly

968
00:45:39,059 --> 00:45:47,789
straightforward the import body

969
00:45:44,250 --> 00:45:52,230
returning a import grid tag uh to be

970
00:45:47,789 --> 00:45:55,170
honest I don't really understand what

971
00:45:52,230 --> 00:45:56,940
that's doing oh I see you I see what's

972
00:45:55,170 --> 00:45:59,250
going on there so these import head and

973
00:45:56,940 --> 00:46:01,559
import bodies you send them down like an

974
00:45:59,250 --> 00:46:03,329
index for that set and that way you can

975
00:46:01,559 --> 00:46:08,250
put multiple things in there I see that

976
00:46:03,329 --> 00:46:09,809
makes sense so yeah the I guess the main

977
00:46:08,250 --> 00:46:11,159
problem that we're gonna face here is we

978
00:46:09,809 --> 00:46:13,710
would like to return an error message

979
00:46:11,159 --> 00:46:15,239
out from inside of these things and we

980
00:46:13,710 --> 00:46:18,570
don't really want to have to worry about

981
00:46:15,239 --> 00:46:20,489
when it actually occurred so that part's

982
00:46:18,570 --> 00:46:22,670
a little bit uglier and we're gonna have

983
00:46:20,489 --> 00:46:25,229
to take a look at how we want to do that

984
00:46:22,670 --> 00:46:27,059
we would just like to have that be

985
00:46:25,230 --> 00:46:30,240
remember that's kind of we go as we go

986
00:46:27,059 --> 00:46:32,639
up the stack but we'll see what we want

987
00:46:30,239 --> 00:46:34,949
to do there so let's start by just

988
00:46:32,639 --> 00:46:37,440
having it work and again this is the

989
00:46:34,949 --> 00:46:41,429
part right here that we end up with you

990
00:46:37,440 --> 00:46:43,200
know now that I think about it it seems

991
00:46:41,429 --> 00:46:47,639
like we could just check to make sure we

992
00:46:43,199 --> 00:46:50,189
didn't run out of headroom right that

993
00:46:47,639 --> 00:46:54,359
actually seems like the easiest thing to

994
00:46:50,190 --> 00:46:55,950
do so basically if we ever hit the yeah

995
00:46:54,360 --> 00:46:57,960
I mean you know I think about it that's

996
00:46:55,949 --> 00:47:00,329
all we really needed because we can't

997
00:46:57,960 --> 00:47:02,610
proceed anyway if that was hit so we

998
00:47:00,329 --> 00:47:03,960
don't really need to know we don't

999
00:47:02,610 --> 00:47:05,880
really need to know that we hit that

1000
00:47:03,960 --> 00:47:09,019
with that kind of fidelity what we can

1001
00:47:05,880 --> 00:47:09,019
actually just do is this

1002
00:47:13,449 --> 00:47:19,338
right this is more than sufficient so we

1003
00:47:17,719 --> 00:47:21,259
just build all these things we don't

1004
00:47:19,338 --> 00:47:23,389
even have to look for errors when we get

1005
00:47:21,259 --> 00:47:25,608
to the end if we were up against the

1006
00:47:23,389 --> 00:47:28,248
limit we want to bail anyway because

1007
00:47:25,608 --> 00:47:31,400
either that meant that we hit the tag

1008
00:47:28,248 --> 00:47:33,618
limit already or we're about to when we

1009
00:47:31,400 --> 00:47:35,749
parse this thing and so that's

1010
00:47:33,619 --> 00:47:36,680
sufficient for tracking those errors and

1011
00:47:35,748 --> 00:47:37,728
like I said they don't really care that

1012
00:47:36,679 --> 00:47:40,429
much about it because this we could

1013
00:47:37,728 --> 00:47:41,899
really just do differently anyway having

1014
00:47:40,429 --> 00:47:43,578
these tags go through the asset system

1015
00:47:41,900 --> 00:47:44,959
in the first place is not really that

1016
00:47:43,579 --> 00:47:46,519
necessary because these are templates

1017
00:47:44,958 --> 00:47:48,528
they get copied from they could have

1018
00:47:46,518 --> 00:47:50,838
just been allocated separately so it's

1019
00:47:48,528 --> 00:47:51,798
kind of just a legacy of how we happen

1020
00:47:50,838 --> 00:47:53,989
to create these things in the first

1021
00:47:51,798 --> 00:47:56,568
place that they even bother to go

1022
00:47:53,989 --> 00:48:00,019
through the asset system so I think

1023
00:47:56,568 --> 00:48:02,088
that's fine um so I think what I'm gonna

1024
00:48:00,018 --> 00:48:03,588
do here is just get rid of that concept

1025
00:48:02,088 --> 00:48:05,328
altogether I mean I guess I can leave

1026
00:48:03,588 --> 00:48:07,099
the errors in there because why not but

1027
00:48:05,329 --> 00:48:08,568
we're not gonna actually look at them or

1028
00:48:07,099 --> 00:48:11,690
do anything with them if that makes

1029
00:48:08,568 --> 00:48:13,909
sense and so all of this stuff can just

1030
00:48:11,690 --> 00:48:15,679
happen exactly what it was happening the

1031
00:48:13,909 --> 00:48:17,538
only difference now is the tokenizer is

1032
00:48:15,679 --> 00:48:19,308
out of the mix so anybody who is

1033
00:48:17,539 --> 00:48:21,259
previously passing that around to do

1034
00:48:19,309 --> 00:48:23,449
stuff with it is no longer going to have

1035
00:48:21,259 --> 00:48:25,190
to and they can just continue about

1036
00:48:23,449 --> 00:48:27,858
their business so I'm going to remove

1037
00:48:25,190 --> 00:48:30,380
the tokenizer from these and then inside

1038
00:48:27,858 --> 00:48:33,018
parse pieces now all I really need to do

1039
00:48:30,380 --> 00:48:36,259
is just break this up instead of each of

1040
00:48:33,018 --> 00:48:39,558
these being sort of its own separate if

1041
00:48:36,259 --> 00:48:42,199
block inside a larger parse that gets

1042
00:48:39,559 --> 00:48:44,479
passed something to sort of switch on

1043
00:48:42,199 --> 00:48:46,009
the block the head the body instead each

1044
00:48:44,478 --> 00:48:48,818
of these is now just the function that

1045
00:48:46,009 --> 00:48:52,369
creates the tags for that specific thing

1046
00:48:48,818 --> 00:48:54,920
so for example create art blocked a grid

1047
00:48:52,369 --> 00:48:57,979
would be again Taggard not Hagrid I

1048
00:48:54,920 --> 00:49:00,048
can't stress that enough that's going to

1049
00:48:57,978 --> 00:49:01,759
be one of the calls again the templates

1050
00:49:00,048 --> 00:49:04,759
match correctly now it doesn't return

1051
00:49:01,759 --> 00:49:06,920
anything it just initializes what it is

1052
00:49:04,759 --> 00:49:09,019
you can see that we've got it to do in

1053
00:49:06,920 --> 00:49:11,088
here that says to do exactly the thing

1054
00:49:09,018 --> 00:49:13,458
that we're actually literally doing

1055
00:49:11,088 --> 00:49:15,798
right now that's great I like to knock

1056
00:49:13,458 --> 00:49:17,328
off what to do when I can and so all I'm

1057
00:49:15,798 --> 00:49:19,548
gonna do first is I'm just gonna you

1058
00:49:17,329 --> 00:49:22,068
know one by one split these off into

1059
00:49:19,548 --> 00:49:24,768
separate code paths for whichever one

1060
00:49:22,068 --> 00:49:25,869
I'm actually looking at so this is the

1061
00:49:24,768 --> 00:49:30,279
art head

1062
00:49:25,869 --> 00:49:31,420
Hagrid here I guess I can actually do

1063
00:49:30,280 --> 00:49:35,560
this a little bit more efficiently by

1064
00:49:31,420 --> 00:49:40,630
just doing that right this is the arts

1065
00:49:35,559 --> 00:49:48,070
body tag rid bring that up there this is

1066
00:49:40,630 --> 00:49:57,539
the art character tag red this is the

1067
00:49:48,070 --> 00:49:57,539
art cover tag grid at which we never did

1068
00:50:05,519 --> 00:50:14,619
we don't really know how this is going

1069
00:50:07,329 --> 00:50:19,139
to work on so there's the art cover tag

1070
00:50:14,619 --> 00:50:26,710
grid there's the R cam tag grid there is

1071
00:50:19,139 --> 00:50:31,839
the art item tag grid it's V are

1072
00:50:26,710 --> 00:50:42,039
obstacles tag grid and the art plate tag

1073
00:50:31,840 --> 00:50:44,380
grid so I think that's pretty much that

1074
00:50:42,039 --> 00:50:46,349
and all we need to do now is go through

1075
00:50:44,380 --> 00:50:49,840
these and actually make sure they work

1076
00:50:46,349 --> 00:50:53,380
correctly with you know how they've now

1077
00:50:49,840 --> 00:50:55,600
been pulled out so I think all we really

1078
00:50:53,380 --> 00:50:59,079
would have to do is remove the import

1079
00:50:55,599 --> 00:51:01,029
single tile right I think that's really

1080
00:50:59,079 --> 00:51:03,190
all that has to happen everything else

1081
00:51:01,030 --> 00:51:05,290
that's happening in here is pretty much

1082
00:51:03,190 --> 00:51:06,760
what it should be right it's just it's

1083
00:51:05,289 --> 00:51:10,179
just iterating over here that the grids

1084
00:51:06,760 --> 00:51:11,740
and setting those things so I think we

1085
00:51:10,179 --> 00:51:13,569
should be fine I got to remove the

1086
00:51:11,739 --> 00:51:14,769
tokenizer because again that's not

1087
00:51:13,570 --> 00:51:17,530
something that we're actually using

1088
00:51:14,769 --> 00:51:19,210
anymore so everywhere that that was

1089
00:51:17,530 --> 00:51:22,990
previous getting passed down it now just

1090
00:51:19,210 --> 00:51:23,769
goes away but other than that think

1091
00:51:22,989 --> 00:51:25,299
we're good

1092
00:51:23,769 --> 00:51:27,250
so these routines should be able to

1093
00:51:25,300 --> 00:51:31,330
operate identically to how they were

1094
00:51:27,250 --> 00:51:35,260
previously operating that's it and now

1095
00:51:31,329 --> 00:51:38,250
we can also we also have a clear shot at

1096
00:51:35,260 --> 00:51:41,600
exactly how we would

1097
00:51:38,250 --> 00:51:44,400
implement that the thing for our sounds

1098
00:51:41,599 --> 00:51:52,289
right you could rubes know but that just

1099
00:51:44,400 --> 00:51:55,590
did oh right because now we can see how

1100
00:51:52,289 --> 00:51:57,779
the sound should get laid in here we

1101
00:51:55,590 --> 00:52:00,420
want to essentially take you know one of

1102
00:51:57,780 --> 00:52:03,390
these where we're doing the you know

1103
00:52:00,420 --> 00:52:06,329
sort of the enumeration of the asset

1104
00:52:03,389 --> 00:52:09,150
import structure right so we're going

1105
00:52:06,329 --> 00:52:11,869
over the entire array we want to do this

1106
00:52:09,150 --> 00:52:15,720
same thing now we want to do for create

1107
00:52:11,869 --> 00:52:18,989
audio channel tag grid what we want to

1108
00:52:15,719 --> 00:52:21,359
do is say alright here's the tag grid

1109
00:52:18,989 --> 00:52:24,779
that I want you to fill out loop over

1110
00:52:21,360 --> 00:52:27,390
the whole thing and all we're doing is

1111
00:52:24,780 --> 00:52:31,170
we're adding you know we're effectively

1112
00:52:27,389 --> 00:52:36,929
doing this right we're saying okay why

1113
00:52:31,170 --> 00:52:39,619
index X index this is the tag that we're

1114
00:52:36,929 --> 00:52:41,969
going to import we'll do a build on that

1115
00:52:39,619 --> 00:52:43,440
well actually we don't even really need

1116
00:52:41,969 --> 00:52:46,349
to do that I don't know why I bothered

1117
00:52:43,440 --> 00:52:48,750
with that this will work just fine so

1118
00:52:46,349 --> 00:52:52,110
we're gonna do a builder on this we're

1119
00:52:48,750 --> 00:52:55,650
going to then do an end tags call into

1120
00:52:52,110 --> 00:52:58,349
here the asset type in this case the

1121
00:52:55,650 --> 00:53:01,650
basic asset type I'll be honest I do not

1122
00:52:58,349 --> 00:53:08,929
remember how we chose to align those

1123
00:53:01,650 --> 00:53:13,889
basic asset types so where are those

1124
00:53:08,929 --> 00:53:22,679
defined asset block so I guess it's

1125
00:53:13,889 --> 00:53:25,469
these right and so I think as far as

1126
00:53:22,679 --> 00:53:29,750
asset categories are concerned I don't

1127
00:53:25,469 --> 00:53:34,039
really know what we want here we can do

1128
00:53:29,750 --> 00:53:36,090
just asset audio and leave it at that I

1129
00:53:34,039 --> 00:53:38,309
don't think we really have to

1130
00:53:36,090 --> 00:53:39,900
differentiate so I'm probably just going

1131
00:53:38,309 --> 00:53:42,029
to go ahead and do this asset basic

1132
00:53:39,900 --> 00:53:47,550
category I don't know if you can get

1133
00:53:42,030 --> 00:53:50,460
that as a string you may not be able to

1134
00:53:47,550 --> 00:53:52,730
so type from ID v-0 that's not what that

1135
00:53:50,460 --> 00:53:52,730
is

1136
00:53:53,509 --> 00:53:59,849
yeah I don't I don't think we actually

1137
00:53:55,679 --> 00:54:02,190
made a name table for these so I don't

1138
00:53:59,849 --> 00:54:03,630
even think that matters so what we're

1139
00:54:02,190 --> 00:54:05,250
doing here is just gonna say look the

1140
00:54:03,630 --> 00:54:11,130
taggers and Ollie it's always in the

1141
00:54:05,250 --> 00:54:13,710
asset asset audio section the begin tags

1142
00:54:11,130 --> 00:54:15,869
end tags part here is going to properly

1143
00:54:13,710 --> 00:54:19,500
label as asset audio so the only thing

1144
00:54:15,869 --> 00:54:21,750
we need to do now is have an ad tag that

1145
00:54:19,500 --> 00:54:25,409
puts in which channel I thought it was

1146
00:54:21,750 --> 00:54:27,509
so in terms of the channel index we just

1147
00:54:25,409 --> 00:54:30,420
want to set that to the combination of

1148
00:54:27,509 --> 00:54:33,240
the X&amp;Y index obviously the X index

1149
00:54:30,420 --> 00:54:36,568
gives it sort of which channel it is

1150
00:54:33,239 --> 00:54:39,199
incrementally but the Y is gonna go by x

1151
00:54:36,568 --> 00:54:41,429
strides so we essentially have to do

1152
00:54:39,199 --> 00:54:44,969
something like this where we take the

1153
00:54:41,429 --> 00:54:47,308
asset that's the that's one entire row

1154
00:54:44,969 --> 00:54:49,259
is asset import grid max so we want to

1155
00:54:47,309 --> 00:54:50,940
take the Y Index multiply it by that and

1156
00:54:49,259 --> 00:54:53,250
that'll sort of give us our channel

1157
00:54:50,940 --> 00:54:54,869
index we can make that into a variable

1158
00:54:53,250 --> 00:54:56,880
here just so it's easier for us to see

1159
00:54:54,869 --> 00:54:59,730
what we're actually doing it's just a

1160
00:54:56,880 --> 00:55:00,140
little clearer if I say that right I can

1161
00:54:59,730 --> 00:55:02,608
do this

1162
00:55:00,139 --> 00:55:05,219
furthermore I can do that without doing

1163
00:55:02,608 --> 00:55:06,869
the f32 so we can be a little bit more

1164
00:55:05,219 --> 00:55:09,179
explicit like look this is an integer

1165
00:55:06,869 --> 00:55:11,099
we're just storing it as an f32 because

1166
00:55:09,179 --> 00:55:12,538
that's we do that uniformly for all our

1167
00:55:11,099 --> 00:55:16,140
tags you don't have to have like typed

1168
00:55:12,539 --> 00:55:17,910
tags so what you can see that's actually

1169
00:55:16,139 --> 00:55:20,129
getting created you know effectively as

1170
00:55:17,909 --> 00:55:23,368
a u-32 there because it's always gonna

1171
00:55:20,130 --> 00:55:25,980
be something linear like that with no

1172
00:55:23,369 --> 00:55:28,588
fractional component so in here we would

1173
00:55:25,980 --> 00:55:31,079
say alright we're gonna do an ad tag for

1174
00:55:28,588 --> 00:55:33,239
the Builder tag channel index with the

1175
00:55:31,079 --> 00:55:35,579
channel index in there that's exactly

1176
00:55:33,239 --> 00:55:37,618
what we need that will create the entire

1177
00:55:35,579 --> 00:55:39,690
audio tag grid which now gives us a

1178
00:55:37,619 --> 00:55:42,869
complete set of tag labels for every

1179
00:55:39,690 --> 00:55:45,088
import type that we had right so let's

1180
00:55:42,869 --> 00:55:47,068
take a look at where we screwed up in

1181
00:55:45,088 --> 00:55:49,949
terms of you know whatever is not

1182
00:55:47,068 --> 00:55:52,440
getting done here so yeah okay so for

1183
00:55:49,949 --> 00:55:55,348
here in end tags for this where we do

1184
00:55:52,440 --> 00:55:57,150
end tags this we do still want in this

1185
00:55:55,349 --> 00:56:00,119
particular case where we're adding the

1186
00:55:57,150 --> 00:56:02,210
tags in here we want to do a check for

1187
00:56:00,119 --> 00:56:04,620
the error so I'm glad I left it in there

1188
00:56:02,210 --> 00:56:07,500
so what we want to do here is say

1189
00:56:04,619 --> 00:56:12,449
look if builder error now we can say

1190
00:56:07,500 --> 00:56:14,400
error tokenizer token and i guess

1191
00:56:12,449 --> 00:56:15,960
whatever token we sort of ended on i

1192
00:56:14,400 --> 00:56:20,130
don't know which one would be the best

1193
00:56:15,960 --> 00:56:21,599
here i don't know if we can do a get

1194
00:56:20,130 --> 00:56:22,980
token it doesn't look like we can so I'm

1195
00:56:21,599 --> 00:56:28,639
think I'm just gonna do it on just error

1196
00:56:22,980 --> 00:56:28,639
tokenizer here and say out of tag space

1197
00:56:29,360 --> 00:56:36,320
right so we can still check for out of

1198
00:56:33,690 --> 00:56:39,900
tag space when the when the time comes

1199
00:56:36,320 --> 00:56:41,640
inside here we can also do it but again

1200
00:56:39,900 --> 00:56:43,320
like you know that it's kind of nasty

1201
00:56:41,639 --> 00:56:45,239
like I wish we weren't really doing it

1202
00:56:43,320 --> 00:56:47,309
quite this way it's a little bit

1203
00:56:45,239 --> 00:56:49,859
unfortunate that that still happening

1204
00:56:47,309 --> 00:56:51,840
right also in terms of passing the

1205
00:56:49,860 --> 00:56:54,329
tokenizer right this is still not what

1206
00:56:51,840 --> 00:56:56,039
we would want and so to a large extent

1207
00:56:54,329 --> 00:56:58,199
we weren't even using it right you can

1208
00:56:56,039 --> 00:57:01,079
see us doing an out f2 the errors here

1209
00:56:58,199 --> 00:57:03,509
so like we were already assuming we

1210
00:57:01,079 --> 00:57:05,009
weren't using that tokenizer but because

1211
00:57:03,510 --> 00:57:06,360
we had to call end tags we were feeding

1212
00:57:05,010 --> 00:57:07,770
it in there and that was literally just

1213
00:57:06,360 --> 00:57:10,019
to the error reporting so you can kind

1214
00:57:07,769 --> 00:57:11,789
of see that this was kind of maybe a

1215
00:57:10,019 --> 00:57:12,750
positive change to begin with because

1216
00:57:11,789 --> 00:57:14,789
we're just you know you're not

1217
00:57:12,750 --> 00:57:16,920
tokenizing anything at that point so

1218
00:57:14,789 --> 00:57:19,050
that was kind of a false past we really

1219
00:57:16,920 --> 00:57:20,280
shouldn't have been doing it and so what

1220
00:57:19,050 --> 00:57:24,570
I'd like to do yeah just to make sure

1221
00:57:20,280 --> 00:57:26,400
that that that end tags there is handled

1222
00:57:24,570 --> 00:57:28,309
a little bit differently right so here

1223
00:57:26,400 --> 00:57:31,410
we can just say look if builder error

1224
00:57:28,309 --> 00:57:35,449
then go ahead and an out if an error

1225
00:57:31,409 --> 00:57:35,449
there where we say out of tag space

1226
00:57:39,929 --> 00:57:43,858
and that should that should solve our

1227
00:57:41,789 --> 00:57:47,219
problem so now we've got like the

1228
00:57:43,858 --> 00:57:49,048
subdural I may have accidentally deleted

1229
00:57:47,219 --> 00:57:51,650
that or you know we didn't copy it up so

1230
00:57:49,048 --> 00:57:57,329
we do need to put the sub dirt in there

1231
00:57:51,650 --> 00:58:00,048
because we do use that later I think

1232
00:57:57,329 --> 00:58:00,048
that's all we needed

1233
00:58:00,809 --> 00:58:05,670
and then our is sound is music all of

1234
00:58:02,940 --> 00:58:09,739
these are just is audio now so

1235
00:58:05,670 --> 00:58:09,739
everywhere that that was happening I

1236
00:58:10,400 --> 00:58:20,130
think this is actually a plural and

1237
00:58:18,088 --> 00:58:27,298
there should be one more I guess I

1238
00:58:20,130 --> 00:58:29,039
didn't see it let's take a look didn't

1239
00:58:27,298 --> 00:58:30,599
we have one more is sound I thought we

1240
00:58:29,039 --> 00:58:31,979
had one more is sound I guess oh you

1241
00:58:30,599 --> 00:58:32,880
know what we got rid of it because we'd

1242
00:58:31,978 --> 00:58:34,710
already handled that case

1243
00:58:32,880 --> 00:58:36,809
alright so never mind so let's take a

1244
00:58:34,710 --> 00:58:38,130
look the other eras first so update

1245
00:58:36,809 --> 00:58:41,789
asset metadata doesn't take the

1246
00:58:38,130 --> 00:58:43,140
tokenizer anymore so that's fine and

1247
00:58:41,789 --> 00:58:46,739
then in here we're looking at this

1248
00:58:43,139 --> 00:58:48,210
builder asses tag count that's just cut

1249
00:58:46,739 --> 00:58:49,889
and paste there we don't have a builder

1250
00:58:48,210 --> 00:58:51,929
here we do have the assets which is all

1251
00:58:49,889 --> 00:58:54,868
we needed to check and so that should be

1252
00:58:51,929 --> 00:58:57,960
the end of that all right so this is

1253
00:58:54,869 --> 00:59:03,200
still a to-do in my mind to do kc these

1254
00:58:57,960 --> 00:59:08,179
actually can be created once per run

1255
00:59:03,199 --> 00:59:11,429
they don't need to be recreated every

1256
00:59:08,179 --> 00:59:15,088
import so it's still a little

1257
00:59:11,429 --> 00:59:19,348
inefficient we could just call those at

1258
00:59:15,088 --> 00:59:21,719
the outset and just use those directly

1259
00:59:19,349 --> 00:59:22,440
you could argue we should just do that

1260
00:59:21,719 --> 00:59:27,119
right now

1261
00:59:22,440 --> 00:59:30,450
I really can't think of not a reason not

1262
00:59:27,119 --> 00:59:33,420
to so maybe that would be smarter let's

1263
00:59:30,449 --> 00:59:37,919
take a quick look at something so inside

1264
00:59:33,420 --> 00:59:39,690
handmade asset in here you know what I'm

1265
00:59:37,920 --> 00:59:42,778
effectively talking about is look if we

1266
00:59:39,690 --> 00:59:44,729
just want these things to be you know

1267
00:59:42,778 --> 00:59:48,179
created that startup could we just do

1268
00:59:44,728 --> 00:59:49,768
this right and put the tag arrays in

1269
00:59:48,179 --> 00:59:51,478
here that's that's really all I'm

1270
00:59:49,768 --> 00:59:52,529
talking about so in other words if we

1271
00:59:51,478 --> 00:59:55,109
wanted to

1272
00:59:52,530 --> 00:59:58,200
we have done this instead since they are

1273
00:59:55,110 --> 01:00:00,599
constant across the run and the only

1274
00:59:58,199 --> 01:00:04,159
question is you know this has to kind of

1275
01:00:00,599 --> 01:00:07,289
this import grid tags has to be created

1276
01:00:04,159 --> 01:00:10,319
has to be defined earlier in the process

1277
01:00:07,289 --> 01:00:12,480
if we want to do that meaning it would

1278
01:00:10,320 --> 01:00:16,530
have to be in here so I don't know

1279
01:00:12,480 --> 01:00:19,099
looking at this to be honest this

1280
01:00:16,530 --> 01:00:22,950
actually looks like for the most part

1281
01:00:19,099 --> 01:00:24,509
this could actually proceed the game

1282
01:00:22,949 --> 01:00:28,679
assets so you know I'll be honest with

1283
01:00:24,510 --> 01:00:30,870
you I think if we want to in the

1284
01:00:28,679 --> 01:00:33,359
definitions we could actually just swap

1285
01:00:30,869 --> 01:00:40,799
these and then be done so we could do

1286
01:00:33,360 --> 01:00:46,039
this this and I think that would just

1287
01:00:40,800 --> 01:00:51,150
work yeah this piece of information

1288
01:00:46,039 --> 01:00:58,610
asset import grid max I don't know where

1289
01:00:51,150 --> 01:00:58,610
that's at but we can just put it here

1290
01:01:00,530 --> 01:01:06,900
okay so I think that completely solves

1291
01:01:04,230 --> 01:01:08,699
that problem for us so if we want to we

1292
01:01:06,900 --> 01:01:10,289
can actually just do the right thing

1293
01:01:08,699 --> 01:01:12,659
right off the bat

1294
01:01:10,289 --> 01:01:14,699
inside handmade asset if we just let

1295
01:01:12,659 --> 01:01:16,799
these be defined here on the internal

1296
01:01:14,699 --> 01:01:19,559
run of the game then what I can do is

1297
01:01:16,800 --> 01:01:22,830
delete them from here entirely when we

1298
01:01:19,559 --> 01:01:25,289
actually start up so if I go into the

1299
01:01:22,829 --> 01:01:32,340
import code here we can just get rid of

1300
01:01:25,289 --> 01:01:35,489
this and put that into asset cpp and so

1301
01:01:32,340 --> 01:01:37,019
we already kind of have I believe this

1302
01:01:35,489 --> 01:01:39,689
this already kind of switches on this

1303
01:01:37,019 --> 01:01:41,400
when we do our in it because it's going

1304
01:01:39,690 --> 01:01:44,550
to do some well you can see it right

1305
01:01:41,400 --> 01:01:47,160
here it adds like import head room to a

1306
01:01:44,550 --> 01:01:49,890
bunch of stuff that would not normally

1307
01:01:47,159 --> 01:01:52,139
be there we can see that happening and

1308
01:01:49,889 --> 01:01:56,400
so at the end if we want to we can just

1309
01:01:52,139 --> 01:01:59,670
go ahead and do this right so that would

1310
01:01:56,400 --> 01:02:01,710
get us out of that business entirely and

1311
01:01:59,670 --> 01:02:03,720
I think that's probably what we want and

1312
01:02:01,710 --> 01:02:06,320
so now we just need to go ahead and make

1313
01:02:03,719 --> 01:02:08,569
that be the case so if I now said

1314
01:02:06,320 --> 01:02:17,840
okay all of these things are off of the

1315
01:02:08,570 --> 01:02:21,080
assets instead like so instead of the

1316
01:02:17,840 --> 01:02:22,010
context then we can just get them there

1317
01:02:21,079 --> 01:02:25,340
from now on

1318
01:02:22,010 --> 01:02:28,100
and they are only created one time so I

1319
01:02:25,340 --> 01:02:30,800
think that's all we really need to do we

1320
01:02:28,099 --> 01:02:32,449
don't need this call anymore either that

1321
01:02:30,800 --> 01:02:34,910
check is now redundant with checks that

1322
01:02:32,449 --> 01:02:37,129
are happening on the inside and I think

1323
01:02:34,909 --> 01:02:40,129
that pretty much takes care of it so if

1324
01:02:37,130 --> 01:02:41,660
we then go up into the part where we

1325
01:02:40,130 --> 01:02:44,090
were actually cracking out which type of

1326
01:02:41,659 --> 01:02:45,500
block we were looking at and you're

1327
01:02:44,090 --> 01:02:47,329
looking here and see where we're getting

1328
01:02:45,500 --> 01:02:49,730
these template tags all that we're gonna

1329
01:02:47,329 --> 01:02:52,969
change here is when we get those assets

1330
01:02:49,730 --> 01:02:54,139
out there in the context we were

1331
01:02:52,969 --> 01:02:55,639
previously looking directly in the

1332
01:02:54,139 --> 01:02:58,819
context we would now just be looking at

1333
01:02:55,639 --> 01:03:00,980
the assets structure itself right so

1334
01:02:58,820 --> 01:03:02,809
each time through here we're just you

1335
01:03:00,980 --> 01:03:04,909
know we're just doing that but otherwise

1336
01:03:02,809 --> 01:03:06,590
it's exactly the same so we're just

1337
01:03:04,909 --> 01:03:08,269
pulling them out of a permanent place

1338
01:03:06,590 --> 01:03:11,000
that they live for the entire run of the

1339
01:03:08,269 --> 01:03:15,469
game and we're not creating them every

1340
01:03:11,000 --> 01:03:17,329
time like we were before now I I'm

1341
01:03:15,469 --> 01:03:19,099
assuming and there's a couple different

1342
01:03:17,329 --> 01:03:20,630
ways we could solve this the problem

1343
01:03:19,099 --> 01:03:22,190
we're gonna run into here is that all of

1344
01:03:20,630 --> 01:03:30,140
these are defined in a file that hasn't

1345
01:03:22,190 --> 01:03:33,860
been included yet what's this is so if

1346
01:03:30,139 --> 01:03:35,659
we look at what we're getting here these

1347
01:03:33,860 --> 01:03:38,090
are you know because of the way that

1348
01:03:35,659 --> 01:03:41,449
handmade dot CBP includes these in order

1349
01:03:38,090 --> 01:03:43,970
and just because see is you know and C++

1350
01:03:41,449 --> 01:03:46,339
are kind of garbage I you have this

1351
01:03:43,969 --> 01:03:48,500
order dependence so the fact that import

1352
01:03:46,340 --> 01:03:50,510
comes after asset is a problem if we

1353
01:03:48,500 --> 01:03:52,429
either when we do I suspect we'll end up

1354
01:03:50,510 --> 01:03:53,990
with some yeah you can see like unload

1355
01:03:52,429 --> 01:03:57,559
and get file right thanks that go in

1356
01:03:53,989 --> 01:04:01,099
here so I'm not sure how I'd rather do

1357
01:03:57,559 --> 01:04:02,599
the pre defines for these but I think

1358
01:04:01,099 --> 01:04:04,940
since the asset system is the more

1359
01:04:02,599 --> 01:04:06,409
general system what I'm gonna do is I'm

1360
01:04:04,940 --> 01:04:08,750
gonna loft the pre defines

1361
01:04:06,409 --> 01:04:11,899
I'm gonna loft the four declarations up

1362
01:04:08,750 --> 01:04:13,519
from asset not from import there's

1363
01:04:11,900 --> 01:04:15,740
really no difference between what I'm

1364
01:04:13,519 --> 01:04:20,210
this is again just working around C and

1365
01:04:15,739 --> 01:04:23,088
C++ being lousy you know C has an excuse

1366
01:04:20,210 --> 01:04:25,220
it's it's from the 70s C++ has no excuse

1367
01:04:23,088 --> 01:04:27,710
just incompetence but either way you end

1368
01:04:25,219 --> 01:04:30,588
up with the language it doesn't work and

1369
01:04:27,710 --> 01:04:32,720
this is part of the cost you pay so

1370
01:04:30,588 --> 01:04:34,730
getting these two predefined is one

1371
01:04:32,719 --> 01:04:35,838
thing we'll need we need a couple other

1372
01:04:34,730 --> 01:04:38,599
things from there you can see them

1373
01:04:35,838 --> 01:04:41,389
listed here in its source HHA get file

1374
01:04:38,599 --> 01:04:43,430
and so on so let's just look at those

1375
01:04:41,389 --> 01:04:50,019
oops in its source

1376
01:04:43,429 --> 01:04:54,588
HHA will grab that out here get file

1377
01:04:50,019 --> 01:04:55,909
that's this and so again these are you

1378
01:04:54,588 --> 01:04:57,079
know all that we're doing there just

1379
01:04:55,909 --> 01:05:00,920
saying look these are the things that

1380
01:04:57,079 --> 01:05:04,519
you need to do inside the import layer

1381
01:05:00,920 --> 01:05:11,900
so get asset type wait is it set asset

1382
01:05:04,519 --> 01:05:14,440
types are set asset type there we go I

1383
01:05:11,900 --> 01:05:17,690
don't know why this is still an inline

1384
01:05:14,440 --> 01:05:20,210
that should not be the case in lines

1385
01:05:17,690 --> 01:05:21,829
really just shouldn't exist we should

1386
01:05:20,210 --> 01:05:24,980
just get rid of them

1387
01:05:21,829 --> 01:05:28,219
internal is sufficient the compiler will

1388
01:05:24,980 --> 01:05:30,349
automatically do that for us in pretty

1389
01:05:28,219 --> 01:05:32,659
much all cases that we actually care the

1390
01:05:30,349 --> 01:05:34,280
inline keyword is not really doing

1391
01:05:32,659 --> 01:05:38,029
anything for us so it's just kind of

1392
01:05:34,280 --> 01:05:42,200
annoying get a create asset source file

1393
01:05:38,030 --> 01:05:44,060
I don't know what it looks like we've

1394
01:05:42,199 --> 01:05:49,309
got two of these not sure which one

1395
01:05:44,059 --> 01:05:51,529
we're calling I would assume it's

1396
01:05:49,309 --> 01:05:57,079
probably this one but I don't know so

1397
01:05:51,530 --> 01:06:00,349
let's take a look yeah

1398
01:05:57,079 --> 01:06:05,029
and then that get asset call should also

1399
01:06:00,349 --> 01:06:11,000
be and I think that's it everything else

1400
01:06:05,030 --> 01:06:13,760
should be fine looks good and so now I

1401
01:06:11,000 --> 01:06:15,469
think we've got everything in place and

1402
01:06:13,760 --> 01:06:17,650
we also cleaned up how we were doing it

1403
01:06:15,469 --> 01:06:20,449
previously in terms of creating those

1404
01:06:17,650 --> 01:06:24,349
tag sets so that's a good thing too

1405
01:06:20,449 --> 01:06:27,019
now I want to go back and actually make

1406
01:06:24,349 --> 01:06:29,599
sure that we any of this stuff actually

1407
01:06:27,019 --> 01:06:33,829
works at all so now we're gonna start

1408
01:06:29,599 --> 01:06:35,838
the debugging runs obviously this

1409
01:06:33,829 --> 01:06:38,479
is something we could step through at

1410
01:06:35,838 --> 01:06:39,739
the outset just to make sure that we're

1411
01:06:38,478 --> 01:06:42,468
creating those the way that we think

1412
01:06:39,739 --> 01:06:44,778
allocate game assets is the function

1413
01:06:42,469 --> 01:06:48,079
it's called at startup if I set a

1414
01:06:44,778 --> 01:06:50,059
breakpoint there and jump into that I

1415
01:06:48,079 --> 01:06:51,170
can just you know I don't want to walk

1416
01:06:50,059 --> 01:06:52,849
through all of this again and we don't

1417
01:06:51,170 --> 01:06:55,489
really have any need to inspect that at

1418
01:06:52,849 --> 01:06:57,410
the moment so if I jump down here and we

1419
01:06:55,489 --> 01:06:59,059
step to it then we can take a look and

1420
01:06:57,409 --> 01:07:01,458
make sure that these are getting created

1421
01:06:59,059 --> 01:07:04,160
in some reasonable way so create audio

1422
01:07:01,458 --> 01:07:06,528
channel tag grid as we're looping

1423
01:07:04,159 --> 01:07:09,798
through those oh it looks like I'm in

1424
01:07:06,528 --> 01:07:11,748
release mode too which is not really

1425
01:07:09,798 --> 01:07:13,880
what I want so I might just back off for

1426
01:07:11,748 --> 01:07:15,259
a second there and compound debug mode

1427
01:07:13,880 --> 01:07:17,869
make it a little bit easier to walk

1428
01:07:15,259 --> 01:07:19,909
through it because this is you know I'm

1429
01:07:17,869 --> 01:07:21,289
trying to do like a clean inspection of

1430
01:07:19,909 --> 01:07:23,420
this code to make sure that I don't see

1431
01:07:21,289 --> 01:07:26,599
anything out of place and that gets a

1432
01:07:23,420 --> 01:07:28,099
little harder to do if the you know IP

1433
01:07:26,599 --> 01:07:30,890
is jumping all over the place and I

1434
01:07:28,099 --> 01:07:33,199
can't read the source code cleanly which

1435
01:07:30,889 --> 01:07:35,268
is what would happen if it was in

1436
01:07:33,199 --> 01:07:37,548
release mode so I'm gonna go ahead and

1437
01:07:35,268 --> 01:07:39,018
step in to this stuff I want to make

1438
01:07:37,548 --> 01:07:41,568
sure that these are cleared to begin

1439
01:07:39,018 --> 01:07:43,038
with so as I step in here I want to be

1440
01:07:41,568 --> 01:07:44,748
able to look at tags and make sure that

1441
01:07:43,039 --> 01:07:46,969
all of these are set to like nothing

1442
01:07:44,748 --> 01:07:50,778
right I want to see that there's nothing

1443
01:07:46,969 --> 01:07:52,999
in them that they're all set to zero in

1444
01:07:50,778 --> 01:07:56,059
in all cases right like everything's an

1445
01:07:52,998 --> 01:07:58,068
asset none and it you know it looks like

1446
01:07:56,059 --> 01:08:03,589
that's what I'm getting and so that's

1447
01:07:58,068 --> 01:08:05,688
good that's pretty interesting so so

1448
01:08:03,588 --> 01:08:08,058
George there is a bug here it looks like

1449
01:08:05,688 --> 01:08:11,058
the way that traces are stored in terms

1450
01:08:08,059 --> 01:08:12,798
of what is expanded is a little buggy so

1451
01:08:11,059 --> 01:08:14,869
the IDS that are generated for these

1452
01:08:12,798 --> 01:08:18,798
like I don't know if you watch that but

1453
01:08:14,869 --> 01:08:21,048
if zero is expanded it goes like that if

1454
01:08:18,798 --> 01:08:24,078
one is then expanded it inherits that

1455
01:08:21,048 --> 01:08:26,960
pass through it that expansion but then

1456
01:08:24,078 --> 01:08:28,789
if you unpack this one the expansion

1457
01:08:26,960 --> 01:08:30,798
goes away right because it's using it

1458
01:08:28,789 --> 01:08:32,179
looks like it's using only the first it

1459
01:08:30,798 --> 01:08:34,460
looks like it's using like the iteration

1460
01:08:32,179 --> 01:08:36,679
order or something as opposed to some

1461
01:08:34,460 --> 01:08:39,020
kind of stable addressing for which one

1462
01:08:36,679 --> 01:08:42,710
these are it's kind of a hard problem in

1463
01:08:39,020 --> 01:08:44,389
in a basic I am GUI it may be that they

1464
01:08:42,710 --> 01:08:45,989
just don't have a good version of that

1465
01:08:44,389 --> 01:08:48,659
inside dear I am going

1466
01:08:45,988 --> 01:08:50,459
not sure but in terms of the way need to

1467
01:08:48,658 --> 01:08:52,408
build IDs for things like that it does

1468
01:08:50,460 --> 01:08:53,969
get a little bit harder and so that's

1469
01:08:52,408 --> 01:08:55,439
one thing you might want to look at not

1470
01:08:53,969 --> 01:09:00,748
particularly essential but it's an

1471
01:08:55,439 --> 01:09:02,488
interesting thing to note so if we go

1472
01:09:00,748 --> 01:09:05,338
ahead and look at this what I would

1473
01:09:02,488 --> 01:09:08,788
expect to see now is every time we loop

1474
01:09:05,338 --> 01:09:11,038
through one of these parts of the grid I

1475
01:09:08,788 --> 01:09:12,630
want to add one thing to it so the first

1476
01:09:11,038 --> 01:09:15,448
thing I would expect this I would change

1477
01:09:12,630 --> 01:09:17,788
this to an asset audio by the way George

1478
01:09:15,448 --> 01:09:22,469
nice work on the giving the enum names

1479
01:09:17,788 --> 01:09:23,608
here that's really handy kind of an

1480
01:09:22,469 --> 01:09:25,609
advanced a bugger feature when you think

1481
01:09:23,609 --> 01:09:28,019
about it it's just like helpfully

1482
01:09:25,609 --> 01:09:29,789
providing information for you that's

1483
01:09:28,019 --> 01:09:32,548
actually not part of the raw display

1484
01:09:29,788 --> 01:09:34,078
right it has to go like oh this is one

1485
01:09:32,548 --> 01:09:35,969
of these enums let me go look up what

1486
01:09:34,078 --> 01:09:40,018
the name of that enum would have been in

1487
01:09:35,969 --> 01:09:42,389
the PDB or whatever right so anyway you

1488
01:09:40,019 --> 01:09:43,920
can see this getting set up here and

1489
01:09:42,389 --> 01:09:47,130
that's exactly what I wanted to see

1490
01:09:43,920 --> 01:09:49,588
happen it's creating two tags one that

1491
01:09:47,130 --> 01:09:52,440
says it's an asset audio and one that

1492
01:09:49,588 --> 01:09:53,868
says there's a channel in there the

1493
01:09:52,439 --> 01:09:57,538
channel index in this case should be

1494
01:09:53,868 --> 01:10:00,868
actually zero and that channel index

1495
01:09:57,538 --> 01:10:02,158
should go up with each time so as we go

1496
01:10:00,868 --> 01:10:07,558
through here you can see channel index

1497
01:10:02,158 --> 01:10:09,868
one Channel next two three four blah

1498
01:10:07,559 --> 01:10:20,219
blah blah right

1499
01:10:09,868 --> 01:10:22,408
I wonder that's nice I really like that

1500
01:10:20,219 --> 01:10:25,139
you can lock that down so you can see it

1501
01:10:22,408 --> 01:10:28,498
like this is one of my big pet peeves

1502
01:10:25,139 --> 01:10:30,719
like in visual studio you can't once you

1503
01:10:28,498 --> 01:10:32,460
get to here you can't inspect a variable

1504
01:10:30,719 --> 01:10:34,288
that's in the loop you used to be able

1505
01:10:32,460 --> 01:10:39,050
to and then they broke it and it looks

1506
01:10:34,288 --> 01:10:41,158
like normally oh and you can hear - that

1507
01:10:39,050 --> 01:10:43,949
wasn't showing up before it just said

1508
01:10:41,158 --> 01:10:45,598
not oh because I entered it there I

1509
01:10:43,948 --> 01:10:47,248
guess so that's pretty cool like this is

1510
01:10:45,599 --> 01:10:49,019
just way better than visual studio like

1511
01:10:47,248 --> 01:10:50,639
that disappears immediately right and

1512
01:10:49,019 --> 01:10:54,840
it's really annoying so it's pretty cool

1513
01:10:50,639 --> 01:10:57,029
that that still shows up like base so

1514
01:10:54,840 --> 01:10:59,909
yeah I mean I don't know how long it's

1515
01:10:57,029 --> 01:11:01,109
going to take George to get to the point

1516
01:10:59,908 --> 01:11:02,188
where all this because there's a couple

1517
01:11:01,109 --> 01:11:03,658
things that remedy doesn't have

1518
01:11:02,189 --> 01:11:05,159
obviously you need like data break

1519
01:11:03,658 --> 01:11:06,658
points I don't think are in there so

1520
01:11:05,158 --> 01:11:08,188
there's there's some basic debugging

1521
01:11:06,658 --> 01:11:09,688
features that haven't gotten implemented

1522
01:11:08,189 --> 01:11:12,119
yet but just based on where it's at

1523
01:11:09,689 --> 01:11:15,360
right now and how stable it seems to be

1524
01:11:12,118 --> 01:11:18,208
in daily use this is just clearly gonna

1525
01:11:15,359 --> 01:11:20,698
be better than Visual Studio like I mean

1526
01:11:18,208 --> 01:11:23,788
not to mention the fact that it updates

1527
01:11:20,698 --> 01:11:26,188
in real time right like Visual Studio

1528
01:11:23,788 --> 01:11:28,978
this value would be sitting there for

1529
01:11:26,189 --> 01:11:33,239
like a second and you just wonder what

1530
01:11:28,979 --> 01:11:35,010
it was and then it pops in you know so

1531
01:11:33,238 --> 01:11:37,649
yeah I would highly recommend ditching

1532
01:11:35,010 --> 01:11:39,208
Visual Studio it's a piece of garbage

1533
01:11:37,649 --> 01:11:40,368
and we've been stuck with it for too

1534
01:11:39,208 --> 01:11:43,649
long

1535
01:11:40,368 --> 01:11:47,399
buy a copy of remedy for 20 bucks and

1536
01:11:43,649 --> 01:11:50,368
start sending bug reports on the forums

1537
01:11:47,399 --> 01:11:52,379
or something let's go ahead and get this

1538
01:11:50,368 --> 01:11:53,609
tool to where it needs to be so we just

1539
01:11:52,380 --> 01:11:55,168
don't have to ever think about Visual

1540
01:11:53,609 --> 01:11:57,748
Studio again I mean it's obviously close

1541
01:11:55,168 --> 01:11:59,550
enough it's obviously useful for

1542
01:11:57,748 --> 01:12:01,978
day-to-day work it's way better than

1543
01:11:59,550 --> 01:12:03,269
windbag now in terms of usability you

1544
01:12:01,979 --> 01:12:06,360
know doesn't have all the features that

1545
01:12:03,269 --> 01:12:09,900
windbag has but it's like way more

1546
01:12:06,359 --> 01:12:11,549
useable and it's really it's been

1547
01:12:09,899 --> 01:12:13,978
smoothed out over the past two or three

1548
01:12:11,550 --> 01:12:15,689
months to the point where like really

1549
01:12:13,979 --> 01:12:17,489
it's just a few features that I feel

1550
01:12:15,689 --> 01:12:18,809
like I missed sometimes but I'm no

1551
01:12:17,488 --> 01:12:21,388
longer at the part where I'm like

1552
01:12:18,809 --> 01:12:22,800
kidding oh there's this bug or that bug

1553
01:12:21,389 --> 01:12:25,319
like it's it's really kind of feeling

1554
01:12:22,800 --> 01:12:27,510
pretty solid in terms of getting the

1555
01:12:25,319 --> 01:12:30,958
work done it's great work really really

1556
01:12:27,510 --> 01:12:32,550
really well done so anyway I feel like

1557
01:12:30,958 --> 01:12:34,948
this stuff is pretty well taken care of

1558
01:12:32,550 --> 01:12:36,329
now and here let's just take a look at

1559
01:12:34,948 --> 01:12:38,188
one of the art ones because that was the

1560
01:12:36,328 --> 01:12:39,988
one that we wrote anew the audio channel

1561
01:12:38,189 --> 01:12:42,449
one let's just make sure that the art

1562
01:12:39,988 --> 01:12:44,788
ones are working as well so you know

1563
01:12:42,448 --> 01:12:47,908
this just tags this thing as a block

1564
01:12:44,788 --> 01:12:50,578
with no tags that seems fine this goes

1565
01:12:47,908 --> 01:12:54,149
through and does the import body tags

1566
01:12:50,578 --> 01:12:56,698
let's make sure those are reasonable it

1567
01:12:54,149 --> 01:12:59,518
does look like they are yeah so I'm

1568
01:12:56,698 --> 01:13:01,259
pretty happy with with that that all

1569
01:12:59,519 --> 01:13:03,539
seems fine

1570
01:13:01,260 --> 01:13:05,219
so I'll just I'll just skip right down

1571
01:13:03,538 --> 01:13:08,368
to the the actual important part of

1572
01:13:05,219 --> 01:13:11,158
things if we go through synchronized

1573
01:13:08,368 --> 01:13:13,439
asset file changes now we're I don't

1574
01:13:11,158 --> 01:13:17,699
know if we'll hit any

1575
01:13:13,439 --> 01:13:19,679
asset changes on our art you know we

1576
01:13:17,699 --> 01:13:21,359
changed a little bit with how the tags

1577
01:13:19,680 --> 01:13:23,250
were working but they should still

1578
01:13:21,359 --> 01:13:26,009
basically be creating fundamentally the

1579
01:13:23,250 --> 01:13:28,979
same tags in the same order I think so

1580
01:13:26,010 --> 01:13:31,260
it probably won't I hope actually change

1581
01:13:28,979 --> 01:13:34,639
any of our art so I don't think we

1582
01:13:31,260 --> 01:13:38,329
should see any art import re triggers

1583
01:13:34,640 --> 01:13:43,079
but I could be wrong what we will see is

1584
01:13:38,329 --> 01:13:45,420
audio import reet riggers because those

1585
01:13:43,079 --> 01:13:49,649
are completely new and we've never seen

1586
01:13:45,420 --> 01:13:53,760
them before so let's go ahead and see

1587
01:13:49,649 --> 01:13:56,879
how that works we are going through the

1588
01:13:53,760 --> 01:14:01,789
top of a block person here we should be

1589
01:13:56,880 --> 01:14:05,550
parsing the default block and we are

1590
01:14:01,789 --> 01:14:07,500
what oh okay I see a bug right away

1591
01:14:05,550 --> 01:14:10,380
those ifs were supposed to have else's

1592
01:14:07,500 --> 01:14:12,060
and they don't so that would have been a

1593
01:14:10,380 --> 01:14:13,140
bug right off the bat I'm glad we

1594
01:14:12,060 --> 01:14:16,320
stepped through that because that would

1595
01:14:13,140 --> 01:14:18,450
have been annoying right these are

1596
01:14:16,319 --> 01:14:20,699
supposed to we we aren't ever supposed

1597
01:14:18,449 --> 01:14:23,220
to get to this case if any of these hit

1598
01:14:20,699 --> 01:14:25,170
and so that was just a that's of

1599
01:14:23,220 --> 01:14:27,990
straight-up bug right there nothing good

1600
01:14:25,170 --> 01:14:29,730
about that so let's try that again I'm

1601
01:14:27,989 --> 01:14:30,869
gonna receptor just this point since we

1602
01:14:29,729 --> 01:14:32,849
know that was the first time we were

1603
01:14:30,869 --> 01:14:35,369
coming through here I should be able to

1604
01:14:32,850 --> 01:14:36,990
step right to it let's go ahead and step

1605
01:14:35,369 --> 01:14:38,430
through that now we see it's the you

1606
01:14:36,989 --> 01:14:41,099
know we skip the rest of this what we

1607
01:14:38,430 --> 01:14:45,289
want we can go through here where's my

1608
01:14:41,100 --> 01:14:45,289
disassembly window where did it go I

1609
01:14:45,409 --> 01:14:50,639
feel like it I feel like it went away I

1610
01:14:47,520 --> 01:14:53,250
don't know why it went away but it did

1611
01:14:50,640 --> 01:14:55,170
so I want to get that back up there I

1612
01:14:53,250 --> 01:14:56,699
just like having that available in case

1613
01:14:55,170 --> 01:14:58,680
I need to quickly look at what's going

1614
01:14:56,699 --> 01:15:00,569
on it just helps to kind of get get in

1615
01:14:58,680 --> 01:15:02,100
there right um can I step through with

1616
01:15:00,569 --> 01:15:05,599
f10 oh that's nice

1617
01:15:02,100 --> 01:15:05,600
can i oh no I can't

1618
01:15:08,618 --> 01:15:15,259
okay so here's another thing to note

1619
01:15:11,118 --> 01:15:17,118
since I love the fact that the texturing

1620
01:15:15,260 --> 01:15:18,949
to the X 16 pixels watches the stream I

1621
01:15:17,118 --> 01:15:20,779
can kind of do live bug reports save me

1622
01:15:18,948 --> 01:15:23,598
some time so it looks like when you hit

1623
01:15:20,779 --> 01:15:26,268
f10 if you're in the disassembly window

1624
01:15:23,599 --> 01:15:29,269
it properly knows to do a single

1625
01:15:26,269 --> 01:15:31,760
assembly step but then it switches your

1626
01:15:29,269 --> 01:15:33,889
window to the source view which means

1627
01:15:31,760 --> 01:15:35,689
your next time you hit f10 won't be a

1628
01:15:33,889 --> 01:15:37,489
disassembly step so it'll be nice if if

1629
01:15:35,689 --> 01:15:40,099
you're in the disassembly window if it

1630
01:15:37,488 --> 01:15:41,779
didn't grab the focus back out I know

1631
01:15:40,099 --> 01:15:42,949
it's a minor thing but I'd like to be

1632
01:15:41,779 --> 01:15:45,050
able to click in here and just step

1633
01:15:42,948 --> 01:15:45,948
through the assembly you now I know I

1634
01:15:45,050 --> 01:15:48,949
can do that

1635
01:15:45,948 --> 01:15:51,109
using this which is the control shift

1636
01:15:48,948 --> 01:15:53,268
f10 but control shift f10 is kind of

1637
01:15:51,109 --> 01:15:55,069
hard to hold your finger on so it's kind

1638
01:15:53,269 --> 01:15:59,418
of just a lot easier to like click in

1639
01:15:55,069 --> 01:16:03,259
here and then go you know for what it's

1640
01:15:59,418 --> 01:16:04,429
worth anyway so going through here that

1641
01:16:03,260 --> 01:16:05,719
that doesn't matter for us at all we're

1642
01:16:04,429 --> 01:16:07,429
not trying to step through the assembly

1643
01:16:05,719 --> 01:16:08,630
today so we don't care we could care

1644
01:16:07,429 --> 01:16:11,590
less about that

1645
01:16:08,630 --> 01:16:14,149
so coming through here into the parser

1646
01:16:11,590 --> 01:16:16,279
here we're just looking to see what's in

1647
01:16:14,149 --> 01:16:18,709
that default field we got we got that

1648
01:16:16,279 --> 01:16:21,109
stuff there's really not much more you

1649
01:16:18,708 --> 01:16:23,599
do here it all seems fine get those

1650
01:16:21,109 --> 01:16:26,268
descriptions loaded and now we should

1651
01:16:23,599 --> 01:16:28,788
just go ahead and skip the the default

1652
01:16:26,269 --> 01:16:30,530
case which is what we did right so we

1653
01:16:28,788 --> 01:16:32,809
come in here and we get those default

1654
01:16:30,529 --> 01:16:34,309
fields and we load this up so that's

1655
01:16:32,809 --> 01:16:36,860
exactly what we would expect nothing

1656
01:16:34,309 --> 01:16:38,689
weird going on there and then when we

1657
01:16:36,859 --> 01:16:41,418
come through here for the next block

1658
01:16:38,689 --> 01:16:43,820
what we should do I think is actually

1659
01:16:41,418 --> 01:16:47,479
parse apart that work I think at the

1660
01:16:43,819 --> 01:16:49,549
moment we're in the intro scene so I

1661
01:16:47,479 --> 01:16:52,610
expect to see like a plate or something

1662
01:16:49,550 --> 01:16:54,469
probably so we come through here let's

1663
01:16:52,609 --> 01:16:56,089
see what we get I'm not sure about that

1664
01:16:54,469 --> 01:16:57,139
I'd have to go look at the H at XI to

1665
01:16:56,090 --> 01:16:59,659
see what the next thing is yeah there's

1666
01:16:57,139 --> 01:17:01,309
a plate right there so we loft up the

1667
01:16:59,658 --> 01:17:03,288
art plate tags is the thing that we're

1668
01:17:01,309 --> 01:17:05,538
gonna look at that should basically be

1669
01:17:03,288 --> 01:17:06,319
like a single tag in the first slot and

1670
01:17:05,538 --> 01:17:08,898
nothing else

1671
01:17:06,319 --> 01:17:12,978
I believe but don't quote me on that

1672
01:17:08,899 --> 01:17:16,579
let's take a look what it shows Asset

1673
01:17:12,979 --> 01:17:18,469
plates yep and nothing else right yeah

1674
01:17:16,578 --> 01:17:21,210
so great seems to be working perfectly

1675
01:17:18,469 --> 01:17:26,340
so far

1676
01:17:21,210 --> 01:17:29,630
off we go needs full rebuild is false

1677
01:17:26,340 --> 01:17:32,550
because well we probably don't need to

1678
01:17:29,630 --> 01:17:35,400
perfect we saw that the file is the same

1679
01:17:32,550 --> 01:17:38,010
so we don't need to change it with the

1680
01:17:35,399 --> 01:17:40,170
full rebuilds we could come through here

1681
01:17:38,010 --> 01:17:43,350
we're looking for tags we're getting

1682
01:17:40,170 --> 01:17:47,310
those tags hopefully I mean I don't know

1683
01:17:43,350 --> 01:17:57,539
maybe we are hope we are let's see what

1684
01:17:47,310 --> 01:18:00,960
we've got here we go Asset index there's

1685
01:17:57,539 --> 01:18:02,159
a line points in that's irrelevant I

1686
01:18:00,960 --> 01:18:09,600
don't really care about all that stuff

1687
01:18:02,159 --> 01:18:21,389
so that looks like that worked fine this

1688
01:18:09,600 --> 01:18:24,800
is just copying so I'll be honest with

1689
01:18:21,390 --> 01:18:24,800
you I have no idea what this is doing

1690
01:18:28,469 --> 01:18:33,930
I mean that that's a harsh statement I

1691
01:18:32,250 --> 01:18:36,060
know exactly what it's doing I don't

1692
01:18:33,930 --> 01:18:40,610
know why so if you look at what this

1693
01:18:36,060 --> 01:18:43,830
loop is doing it's taking the asset

1694
01:18:40,609 --> 01:18:49,649
alignment points well it's taking the

1695
01:18:43,829 --> 01:18:51,029
alignment points from the that we parsed

1696
01:18:49,649 --> 01:18:56,909
and it's assigning them back to the

1697
01:18:51,029 --> 01:19:05,069
bitmap but doesn't it need to do that

1698
01:18:56,909 --> 01:19:11,550
before it writes the thing out like why

1699
01:19:05,069 --> 01:19:16,039
isn't it doing it well I guess now I

1700
01:19:11,550 --> 01:19:19,829
think about it update asset metadata

1701
01:19:16,039 --> 01:19:23,069
doesn't write the thing out so I guess

1702
01:19:19,829 --> 01:19:27,539
it's fine because we actually write it

1703
01:19:23,069 --> 01:19:32,899
out back in the we write it out back

1704
01:19:27,539 --> 01:19:36,359
here so I guess that's actually fine

1705
01:19:32,899 --> 01:19:38,750
surprisingly enough all right I'm okay

1706
01:19:36,359 --> 01:19:38,750
with that

1707
01:19:39,390 --> 01:19:44,160
so it looks like the art is still

1708
01:19:40,890 --> 01:19:47,789
loading properly for what it's worth I

1709
01:19:44,159 --> 01:19:49,050
guess again I think we you know at some

1710
01:19:47,789 --> 01:19:51,238
point it would be nice to clean this up

1711
01:19:49,050 --> 01:19:53,730
if this weren't a thing where I had to

1712
01:19:51,238 --> 01:19:55,948
do just two hours a show I would

1713
01:19:53,729 --> 01:19:57,899
probably spend a good eight hours or two

1714
01:19:55,948 --> 01:19:59,809
two or three days just going through it

1715
01:19:57,899 --> 01:20:02,219
and cleaning everything really carefully

1716
01:19:59,810 --> 01:20:05,130
and sort of pulling things out into more

1717
01:20:02,219 --> 01:20:07,890
verifiable chunks but you know we can

1718
01:20:05,130 --> 01:20:11,609
only do so much with with the limited

1719
01:20:07,890 --> 01:20:14,610
time of the show so that's kind of where

1720
01:20:11,609 --> 01:20:16,380
we're at but we'll call that good enough

1721
01:20:14,609 --> 01:20:18,750
for now and we'll wait for bugs to rear

1722
01:20:16,380 --> 01:20:20,789
their ugly head to be long further what

1723
01:20:18,750 --> 01:20:23,969
I'd like to do now is jump right to the

1724
01:20:20,789 --> 01:20:25,710
new blocks and see how they work so here

1725
01:20:23,969 --> 01:20:27,960
we are in I think still in the intro

1726
01:20:25,710 --> 01:20:31,469
cutscene now this is probably I'm just

1727
01:20:27,960 --> 01:20:33,510
guessing if I were to look at this it's

1728
01:20:31,469 --> 01:20:35,130
probably this yeah so this is in the

1729
01:20:33,510 --> 01:20:38,159
intro cutscene this first when we hit is

1730
01:20:35,130 --> 01:20:40,440
this music test that laughs I am

1731
01:20:38,159 --> 01:20:42,039
narcissistically tagging myself as the

1732
01:20:40,439 --> 01:20:43,989
author which of course is

1733
01:20:42,039 --> 01:20:45,609
screw but probably not super necessary

1734
01:20:43,989 --> 01:20:50,019
since this isn't even official music for

1735
01:20:45,609 --> 01:20:52,750
the game what we want to do is verify

1736
01:20:50,020 --> 01:20:55,300
that this gets loaded properly we are in

1737
01:20:52,750 --> 01:20:57,340
the right tag block and we are loading

1738
01:20:55,300 --> 01:20:59,680
those audio channel tags we're looking

1739
01:20:57,340 --> 01:21:02,350
at music subtor so that's good now let's

1740
01:20:59,680 --> 01:21:06,250
see what actually happens when we build

1741
01:21:02,350 --> 01:21:11,380
the source path I'd like to see if it

1742
01:21:06,250 --> 01:21:15,579
actually looks reasonable and it does

1743
01:21:11,380 --> 01:21:17,800
one thing while we're on the remedy list

1744
01:21:15,579 --> 01:21:19,449
of requested features it would be

1745
01:21:17,800 --> 01:21:20,560
awesome if there was some way to get

1746
01:21:19,449 --> 01:21:21,880
this whole string

1747
01:21:20,560 --> 01:21:23,200
I know Visual Studio does this weird

1748
01:21:21,880 --> 01:21:29,020
crappy thing where they put like a

1749
01:21:23,199 --> 01:21:32,229
little magnifying glass on it that kind

1750
01:21:29,020 --> 01:21:34,810
of sucks so I wouldn't recommend it but

1751
01:21:32,229 --> 01:21:37,809
what I would say is like let's say best

1752
01:21:34,810 --> 01:21:40,570
of all possible worlds one thing you

1753
01:21:37,810 --> 01:21:42,130
could do there is have the watch window

1754
01:21:40,569 --> 01:21:44,619
have an option so you know if I

1755
01:21:42,130 --> 01:21:46,150
right-click on this or something or I

1756
01:21:44,619 --> 01:21:48,069
don't know where options would go

1757
01:21:46,149 --> 01:21:49,509
normally but you know let's say there's

1758
01:21:48,069 --> 01:21:52,599
a right-click menu or something that has

1759
01:21:49,510 --> 01:21:54,520
settings like where is that for like the

1760
01:21:52,600 --> 01:21:56,230
call stack for example okay so you know

1761
01:21:54,520 --> 01:21:58,480
I'm right-clicking in here and I'm

1762
01:21:56,229 --> 01:22:00,839
getting these settings right if there

1763
01:21:58,479 --> 01:22:04,149
was the same thing for the watch window

1764
01:22:00,840 --> 01:22:06,909
just have a string window and then when

1765
01:22:04,149 --> 01:22:09,009
you highlight something like you know or

1766
01:22:06,909 --> 01:22:11,409
whatever it shows the whole string

1767
01:22:09,010 --> 01:22:16,420
another way you could do it is if you

1768
01:22:11,409 --> 01:22:18,819
Pat if you did like I don't know I'm

1769
01:22:16,420 --> 01:22:22,449
making this up but something like that

1770
01:22:18,819 --> 01:22:26,259
and then it would just make this part

1771
01:22:22,449 --> 01:22:28,929
bigger right so so it could fit you know

1772
01:22:26,260 --> 01:22:31,480
several line you know it could wrap this

1773
01:22:28,930 --> 01:22:33,520
so I can see the whole thing I don't

1774
01:22:31,479 --> 01:22:35,619
know the exact right way I've thought

1775
01:22:33,520 --> 01:22:37,750
about it a long time but like the visual

1776
01:22:35,619 --> 01:22:39,430
studio one sucks because you click it

1777
01:22:37,750 --> 01:22:41,319
open and it opens a separate window

1778
01:22:39,430 --> 01:22:43,810
which I don't want right I want to see

1779
01:22:41,319 --> 01:22:46,269
things in the watch window its modal so

1780
01:22:43,810 --> 01:22:50,350
I can't step right which is also

1781
01:22:46,270 --> 01:22:52,360
terrible but it is something you want

1782
01:22:50,350 --> 01:22:54,880
which is the ability to see a longer

1783
01:22:52,359 --> 01:22:55,599
block of text and so I don't know I

1784
01:22:54,880 --> 01:22:57,340
would say

1785
01:22:55,600 --> 01:22:59,470
when you get a chance I know this is a

1786
01:22:57,340 --> 01:23:01,470
lot of work to handle all this stuff in

1787
01:22:59,470 --> 01:23:06,579
the de bugger but when you get a chance

1788
01:23:01,470 --> 01:23:08,530
think about something like that you can

1789
01:23:06,579 --> 01:23:11,260
think of it sort of in the same concept

1790
01:23:08,529 --> 01:23:12,429
the same domain it's like eventually you

1791
01:23:11,260 --> 01:23:14,470
want to be able to see like images and

1792
01:23:12,430 --> 01:23:16,270
stuff right and so it'd be great if you

1793
01:23:14,470 --> 01:23:18,039
could have like an image show up in here

1794
01:23:16,270 --> 01:23:20,380
if you you know could set the format

1795
01:23:18,039 --> 01:23:21,939
like oh it's rgba or something and you

1796
01:23:20,380 --> 01:23:24,880
know here's how big it is this with this

1797
01:23:21,939 --> 01:23:27,309
height I don't know right it would ship

1798
01:23:24,880 --> 01:23:29,800
you know take some space to show that

1799
01:23:27,310 --> 01:23:31,990
thing the same would be true for Strings

1800
01:23:29,800 --> 01:23:34,840
like how do you make it how do you make

1801
01:23:31,989 --> 01:23:37,779
a clean interface for always showing you

1802
01:23:34,840 --> 01:23:40,449
know the contents of the thing for when

1803
01:23:37,779 --> 01:23:44,019
I've got a few things I want to watch

1804
01:23:40,449 --> 01:23:45,220
you know again I don't have a strong

1805
01:23:44,020 --> 01:23:47,890
opinion I haven't thought it through

1806
01:23:45,220 --> 01:23:50,380
particularly carefully but I do think

1807
01:23:47,890 --> 01:23:52,240
there's something there the like here's

1808
01:23:50,380 --> 01:23:55,090
stuff I need to view that's more

1809
01:23:52,239 --> 01:24:00,819
complicated than just a simple value how

1810
01:23:55,090 --> 01:24:03,220
do I get that into a coherent easy to

1811
01:24:00,819 --> 01:24:04,389
understand way that lots of different

1812
01:24:03,220 --> 01:24:06,460
data types could eventually take

1813
01:24:04,390 --> 01:24:09,360
advantage of you know I want to view

1814
01:24:06,460 --> 01:24:12,460
sound waves same thing right like

1815
01:24:09,359 --> 01:24:15,219
basically providing little widgets here

1816
01:24:12,460 --> 01:24:18,159
that you can interact with that more

1817
01:24:15,220 --> 01:24:19,960
in-depth view something you typically

1818
01:24:18,159 --> 01:24:22,090
want them to still sort of work with the

1819
01:24:19,960 --> 01:24:24,909
watch window in some way so they can

1820
01:24:22,090 --> 01:24:27,060
constantly be updated as necessary and

1821
01:24:24,909 --> 01:24:29,319
so it's not this huge pain in the butt

1822
01:24:27,060 --> 01:24:31,150
I've often thought the same thing about

1823
01:24:29,319 --> 01:24:34,210
the memory window like I don't really

1824
01:24:31,149 --> 01:24:36,069
want a memory window what I want is the

1825
01:24:34,210 --> 01:24:37,930
ability to have some memory ranges shown

1826
01:24:36,069 --> 01:24:40,659
in here so I can have more than one of

1827
01:24:37,930 --> 01:24:42,490
them and have them update as I go right

1828
01:24:40,659 --> 01:24:44,680
and so I feel like you know thinking

1829
01:24:42,489 --> 01:24:46,569
about how to extend the watch window

1830
01:24:44,680 --> 01:24:48,880
into something that has the widgets

1831
01:24:46,569 --> 01:24:50,920
built into it is kind of an interesting

1832
01:24:48,880 --> 01:24:52,930
concept going forward you know what I

1833
01:24:50,920 --> 01:24:55,210
mean and you can even think of that as a

1834
01:24:52,930 --> 01:24:57,880
way you know as unifying some of these

1835
01:24:55,210 --> 01:25:03,760
things like oh you know I can just do

1836
01:24:57,880 --> 01:25:07,180
like that and this shows up in here

1837
01:25:03,760 --> 01:25:08,980
makes they're not really be a need for a

1838
01:25:07,180 --> 01:25:11,890
lot of this other stuff sometimes right

1839
01:25:08,979 --> 01:25:14,049
so you know one of the things that sort

1840
01:25:11,890 --> 01:25:15,400
of stuff in Visual Studio forget it

1841
01:25:14,050 --> 01:25:17,170
because it's this weird like giant

1842
01:25:15,399 --> 01:25:20,710
c-sharp framework that's just a you know

1843
01:25:17,170 --> 01:25:22,779
garbage pail when you're with when

1844
01:25:20,710 --> 01:25:24,310
you're in an IM GUI setting it actually

1845
01:25:22,779 --> 01:25:28,359
becomes not that prohibitively expensive

1846
01:25:24,310 --> 01:25:32,440
to just rigidify some block as necessary

1847
01:25:28,359 --> 01:25:34,420
you know what when it's visual and then

1848
01:25:32,439 --> 01:25:35,889
these sorts of things can just unify in

1849
01:25:34,420 --> 01:25:37,899
there it's just something to think about

1850
01:25:35,890 --> 01:25:40,090
again it's half-baked I realize that

1851
01:25:37,899 --> 01:25:42,399
it's just it's something to think about

1852
01:25:40,090 --> 01:25:44,350
that maybe would save you actually save

1853
01:25:42,399 --> 01:25:45,460
you time in the long run because instead

1854
01:25:44,350 --> 01:25:47,020
of having to constantly think about

1855
01:25:45,460 --> 01:25:48,489
things with all these separate windows

1856
01:25:47,020 --> 01:25:50,230
and I got a re-implemented this stuff

1857
01:25:48,489 --> 01:25:51,760
it's like everything can just go one

1858
01:25:50,229 --> 01:25:56,739
through one thing and then that's it

1859
01:25:51,760 --> 01:26:01,810
right I don't know just not here no

1860
01:25:56,739 --> 01:26:05,529
they're moving away from pine sky

1861
01:26:01,810 --> 01:26:07,840
nonsense debugger nonsense going through

1862
01:26:05,529 --> 01:26:10,269
here I looks like this is the right

1863
01:26:07,840 --> 01:26:12,550
thing I should probably verify that that

1864
01:26:10,270 --> 01:26:18,400
actually does exist

1865
01:26:12,550 --> 01:26:21,039
oh it says file not found oh you know

1866
01:26:18,399 --> 01:26:22,629
what that that might be true we may have

1867
01:26:21,039 --> 01:26:27,130
put that in the wrong directory did we

1868
01:26:22,630 --> 01:26:30,489
so here's our hand made sources in intro

1869
01:26:27,130 --> 01:26:32,770
cutscene that's not where we put the

1870
01:26:30,489 --> 01:26:37,029
music and that is that is where that

1871
01:26:32,770 --> 01:26:39,130
should have gone so I think actually our

1872
01:26:37,029 --> 01:26:43,509
code is smarter than we are

1873
01:26:39,130 --> 01:26:46,840
this is not in the right place and it

1874
01:26:43,510 --> 01:26:50,680
should be placed here so actually good

1875
01:26:46,840 --> 01:26:52,539
work code you caught us let's go ahead

1876
01:26:50,680 --> 01:26:55,270
and rerun I think I still got the

1877
01:26:52,539 --> 01:26:56,470
breakpoint set there so here we go let's

1878
01:26:55,270 --> 01:26:59,260
see if it can find it now that I

1879
01:26:56,470 --> 01:27:02,530
actually put it in the right place there

1880
01:26:59,260 --> 01:27:04,510
it is okay so that time it worked

1881
01:27:02,529 --> 01:27:07,449
we need a full rebuild because it's

1882
01:27:04,510 --> 01:27:09,690
never seen this file before so let's go

1883
01:27:07,449 --> 01:27:14,909
ahead and go through here here's our

1884
01:27:09,689 --> 01:27:19,739
tokenizer parsing stuff we've got

1885
01:27:14,909 --> 01:27:24,539
everything that we need I think I hope

1886
01:27:19,739 --> 01:27:35,079
let's parse those tags we should get

1887
01:27:24,539 --> 01:27:38,800
tagged here there it is title screen

1888
01:27:35,079 --> 01:27:44,340
that is the tag that we expected and we

1889
01:27:38,800 --> 01:27:49,630
should also by the way this kind of does

1890
01:27:44,340 --> 01:27:52,449
it so it it looks sort of like remedy

1891
01:27:49,630 --> 01:27:54,400
almost already does the thing I want it

1892
01:27:52,449 --> 01:27:56,470
just doesn't wrap right because you can

1893
01:27:54,399 --> 01:27:57,670
see when there's actually new lines in

1894
01:27:56,470 --> 01:27:59,170
the string it actually displayed the

1895
01:27:57,670 --> 01:28:01,630
whole thing right

1896
01:27:59,170 --> 01:28:03,880
it just doesn't wrap so that's actually

1897
01:28:01,630 --> 01:28:05,949
pretty cool that it already does

1898
01:28:03,880 --> 01:28:08,800
it already does take more room you can

1899
01:28:05,949 --> 01:28:10,539
see it it just doesn't actually wrap the

1900
01:28:08,800 --> 01:28:12,340
text so it's really just a wrap like

1901
01:28:10,539 --> 01:28:12,850
right click and hit wrap long lines or

1902
01:28:12,340 --> 01:28:14,590
something

1903
01:28:12,850 --> 01:28:16,510
what's all that that really needed here

1904
01:28:14,590 --> 01:28:17,680
it looks like sort of although if this

1905
01:28:16,510 --> 01:28:19,869
thing we're really like this string

1906
01:28:17,680 --> 01:28:21,880
keeps going you still kind of want the

1907
01:28:19,869 --> 01:28:23,199
text inspection widget so you can scroll

1908
01:28:21,880 --> 01:28:24,760
down and like see more of it or

1909
01:28:23,199 --> 01:28:26,079
something I don't know again neither

1910
01:28:24,760 --> 01:28:29,260
here nor there these are all just like

1911
01:28:26,079 --> 01:28:30,789
hey now that the bugger is you know

1912
01:28:29,260 --> 01:28:32,380
replacing visual studio what if we

1913
01:28:30,789 --> 01:28:35,250
actually started adding features that

1914
01:28:32,380 --> 01:28:38,859
visual studio never had and should have

1915
01:28:35,250 --> 01:28:41,079
anyway so that all looks fine and the

1916
01:28:38,859 --> 01:28:43,059
tag ID is presumably the right tag ID I

1917
01:28:41,079 --> 01:28:44,019
don't actually know it looks like it is

1918
01:28:43,060 --> 01:28:46,960
title screen there it is

1919
01:28:44,020 --> 01:28:48,790
so if we go ahead and assume that the

1920
01:28:46,960 --> 01:28:50,710
tags are now correct on this thing the

1921
01:28:48,789 --> 01:28:53,380
question is can we actually load the wav

1922
01:28:50,710 --> 01:28:56,289
file which is you know the the lion's

1923
01:28:53,380 --> 01:28:58,539
share of the work let's take a look so

1924
01:28:56,289 --> 01:29:00,220
we go through we find the match we know

1925
01:28:58,539 --> 01:29:03,640
that we don't actually have this

1926
01:29:00,220 --> 01:29:05,860
assigned to anything yet so we're gonna

1927
01:29:03,640 --> 01:29:09,430
have to we come through the full rebuild

1928
01:29:05,859 --> 01:29:12,039
path we try to load the file we do it

1929
01:29:09,430 --> 01:29:14,800
looks like we successfully got it in

1930
01:29:12,039 --> 01:29:17,619
here we now need to do the the checksum

1931
01:29:14,800 --> 01:29:20,739
of the file to set it up properly and

1932
01:29:17,619 --> 01:29:23,409
then we need to read this into the wav

1933
01:29:20,739 --> 01:29:25,449
file this read stream this contest

1934
01:29:23,409 --> 01:29:28,658
stream nonsense should really go in here

1935
01:29:25,449 --> 01:29:30,908
we don't need this for anything

1936
01:29:28,658 --> 01:29:34,379
looks like that's wrong by the way I

1937
01:29:30,908 --> 01:29:37,750
don't know if you care about that

1938
01:29:34,380 --> 01:29:40,719
like the cursor position is wrong I'm

1939
01:29:37,750 --> 01:29:43,270
not sure I certainly don't care but it's

1940
01:29:40,719 --> 01:29:45,420
worth noting uh so the make read stream

1941
01:29:43,270 --> 01:29:49,119
there when I get that constant that

1942
01:29:45,420 --> 01:29:50,889
contents stream back we don't actually

1943
01:29:49,118 --> 01:29:52,719
care about it unless it's art such as

1944
01:29:50,889 --> 01:29:54,699
probably being here

1945
01:29:52,719 --> 01:29:56,500
but either way here's our sound loading

1946
01:29:54,698 --> 01:29:59,769
code we get to is audio we need to start

1947
01:29:56,500 --> 01:30:01,750
parsing this wav file we come into the

1948
01:29:59,770 --> 01:30:04,179
parse wife call and we're gonna try to

1949
01:30:01,750 --> 01:30:05,889
iterate the riff section of things

1950
01:30:04,179 --> 01:30:09,279
it looks like the header was correct

1951
01:30:05,889 --> 01:30:10,929
because we passed the if statement so

1952
01:30:09,279 --> 01:30:13,118
you know hopefully this is correct I

1953
01:30:10,929 --> 01:30:16,389
don't know how to inspect this in a

1954
01:30:13,118 --> 01:30:18,519
different way I don't even know how to

1955
01:30:16,389 --> 01:30:20,679
change to hex inspection or if there

1956
01:30:18,520 --> 01:30:23,050
even is such a thing because one of the

1957
01:30:20,679 --> 01:30:24,789
things that's true about remedy is I

1958
01:30:23,050 --> 01:30:26,800
only just started using it so I really

1959
01:30:24,789 --> 01:30:28,810
don't know much about how I would do

1960
01:30:26,800 --> 01:30:30,849
that so I couldn't tell you maybe it

1961
01:30:28,810 --> 01:30:33,130
can't do that but maybe it can and I

1962
01:30:30,849 --> 01:30:34,779
just don't know how so I can't really

1963
01:30:33,130 --> 01:30:37,779
look to see whether the riff ID is

1964
01:30:34,779 --> 01:30:46,090
correct I don't know if it supports this

1965
01:30:37,779 --> 01:30:47,259
kind of thing yet no so it looks like it

1966
01:30:46,090 --> 01:30:52,239
oh well well

1967
01:30:47,260 --> 01:30:54,929
although yeah there we go so it does

1968
01:30:52,238 --> 01:30:59,078
actually support that so the riff ID

1969
01:30:54,929 --> 01:31:02,158
does look like it says riff so it looks

1970
01:30:59,078 --> 01:31:06,210
like we are looking at that correctly

1971
01:31:02,158 --> 01:31:09,189
and similarly here is the file type ID

1972
01:31:06,210 --> 01:31:11,198
wave so that's pretty cool actually this

1973
01:31:09,189 --> 01:31:14,138
didn't used to work in remedy so I think

1974
01:31:11,198 --> 01:31:16,109
the latest version I know that George

1975
01:31:14,139 --> 01:31:18,400
said he put in a real expression parser

1976
01:31:16,109 --> 01:31:20,500
it looks like it's working great because

1977
01:31:18,399 --> 01:31:22,629
I don't I don't remember being able to

1978
01:31:20,500 --> 01:31:24,460
do that last week so like this is pretty

1979
01:31:22,630 --> 01:31:26,380
awesome because that's really handy for

1980
01:31:24,460 --> 01:31:29,500
obvious reasons you can see me why I

1981
01:31:26,380 --> 01:31:32,130
wanted right there and that's great so

1982
01:31:29,500 --> 01:31:36,069
that's that's a pretty big improvement

1983
01:31:32,130 --> 01:31:37,300
that and a really really useful one like

1984
01:31:36,069 --> 01:31:39,039
that's one that really adds a lot of

1985
01:31:37,300 --> 01:31:41,279
value having good expression parsing is

1986
01:31:39,039 --> 01:31:43,739
pretty great

1987
01:31:41,279 --> 01:31:45,119
all right so at some point I got to

1988
01:31:43,739 --> 01:31:47,189
learn I don't know it might actually

1989
01:31:45,119 --> 01:31:49,289
have this in the readme I should

1990
01:31:47,189 --> 01:31:50,669
probably look I don't actually know the

1991
01:31:49,289 --> 01:31:52,619
expression parser works though like I

1992
01:31:50,670 --> 01:31:55,680
don't know what else it can do

1993
01:31:52,619 --> 01:31:58,949
let's see here oh wow

1994
01:31:55,680 --> 01:32:02,700
I get greets awesome thanks for the

1995
01:31:58,949 --> 01:32:05,670
greets makes the greets man Visual

1996
01:32:02,699 --> 01:32:09,630
Studio absolutely deserves these greets

1997
01:32:05,670 --> 01:32:11,810
right here so yeah okay so you see all

1998
01:32:09,630 --> 01:32:16,500
this stuff like this is important stuff

1999
01:32:11,810 --> 01:32:24,120
right that I don't know and I need to

2000
01:32:16,500 --> 01:32:26,909
learn so there's a relative scoping so

2001
01:32:24,119 --> 01:32:28,710
like the previous scope or the first

2002
01:32:26,909 --> 01:32:30,869
ancestor scope this is awesome by the

2003
01:32:28,710 --> 01:32:32,939
way like this is so just to show you

2004
01:32:30,869 --> 01:32:36,809
what this is this is really pretty cool

2005
01:32:32,939 --> 01:32:38,519
so let's say I'm up here right you can

2006
01:32:36,810 --> 01:32:41,780
see that there's this sound struct or

2007
01:32:38,520 --> 01:32:44,730
this is audio right and so if I was here

2008
01:32:41,779 --> 01:32:48,059
you can see that I can I can get that is

2009
01:32:44,729 --> 01:32:51,829
audio when I drop down here I can't and

2010
01:32:48,060 --> 01:32:54,030
the reason for that is because remedy

2011
01:32:51,829 --> 01:32:57,090
correctly is showing me things that

2012
01:32:54,029 --> 01:32:58,800
resolve in my current scope but if for

2013
01:32:57,090 --> 01:33:02,039
some reason I wanted to see that it's

2014
01:32:58,800 --> 01:33:04,829
suggesting I can just do sorry I need to

2015
01:33:02,039 --> 01:33:08,850
look it up again it's suggesting I could

2016
01:33:04,829 --> 01:33:10,859
just do hey look up scope just keep

2017
01:33:08,850 --> 01:33:13,170
going up so you find it I mean look at

2018
01:33:10,859 --> 01:33:15,329
that how awesome is that

2019
01:33:13,170 --> 01:33:18,029
so now I can just look up stuff that's

2020
01:33:15,329 --> 01:33:21,539
like out here and it will find it even

2021
01:33:18,029 --> 01:33:24,869
when I'm in here that's just super

2022
01:33:21,539 --> 01:33:28,439
awesome like that's that's just great

2023
01:33:24,869 --> 01:33:30,059
right again there's so many great

2024
01:33:28,439 --> 01:33:31,799
features you could add to a debugger if

2025
01:33:30,060 --> 01:33:34,500
you just aren't Visual Studio and you

2026
01:33:31,800 --> 01:33:38,220
actually care about debugging and so

2027
01:33:34,500 --> 01:33:39,600
it's so cool to see that stuff coming

2028
01:33:38,220 --> 01:33:41,070
coming together because that's just

2029
01:33:39,600 --> 01:33:42,930
awesome I mean that's really gonna be

2030
01:33:41,069 --> 01:33:45,119
the point where it's obvious you have to

2031
01:33:42,930 --> 01:33:46,560
switch where it's not just a case of

2032
01:33:45,119 --> 01:33:47,550
Visual Studio is annoying but it'll

2033
01:33:46,560 --> 01:33:48,750
actually be a case if you know so you

2034
01:33:47,550 --> 01:33:52,170
just doesn't have the features that are

2035
01:33:48,750 --> 01:33:54,569
actually good so I don't know like I

2036
01:33:52,170 --> 01:33:56,840
should learn that so so probably that

2037
01:33:54,569 --> 01:34:00,809
the most important one is carat star

2038
01:33:56,840 --> 01:34:02,699
because that says like go up lock

2039
01:34:00,810 --> 01:34:06,390
expression will lock it into its scope

2040
01:34:02,699 --> 01:34:10,319
so that's like if I go up here and I do

2041
01:34:06,390 --> 01:34:12,630
is audio I guess I can lock that in at

2042
01:34:10,319 --> 01:34:14,969
its current scope and then go down and

2043
01:34:12,630 --> 01:34:20,850
now it'll remain again really awesome

2044
01:34:14,970 --> 01:34:24,300
I love it format specifier going off to

2045
01:34:20,850 --> 01:34:26,130
the formatting or display currently only

2046
01:34:24,300 --> 01:34:27,690
a single for I suppose for this is for

2047
01:34:26,130 --> 01:34:29,940
specifying the number of elements

2048
01:34:27,689 --> 01:34:31,349
displaying in a rare pointer the syntax

2049
01:34:29,939 --> 01:34:33,899
of the for instance where is calm at the

2050
01:34:31,350 --> 01:34:35,010
end so that's the same as visual studio

2051
01:34:33,899 --> 01:34:36,299
so I don't really need to learn anything

2052
01:34:35,010 --> 01:34:40,110
for that that's that's how that worked

2053
01:34:36,300 --> 01:34:46,320
before so for example if I wanted to

2054
01:34:40,109 --> 01:34:48,989
look at path know if there is a path up

2055
01:34:46,319 --> 01:34:57,539
above what is up above something back

2056
01:34:48,989 --> 01:35:01,829
here right no there really isn't well

2057
01:34:57,539 --> 01:35:04,319
file buffer file buffer is a thing it's

2058
01:35:01,829 --> 01:35:07,019
not a string but it does exist up there

2059
01:35:04,319 --> 01:35:11,340
so if I do file buffer there it is if I

2060
01:35:07,020 --> 01:35:15,960
do this the data array kind of stressing

2061
01:35:11,340 --> 01:35:20,220
things out now but let's try it so if I

2062
01:35:15,960 --> 01:35:23,699
did that star I don't know I'm really

2063
01:35:20,220 --> 01:35:27,030
pushing things here but if I were to do

2064
01:35:23,699 --> 01:35:31,529
that can I do I don't know how I would

2065
01:35:27,029 --> 01:35:34,649
do this is it that it is that's really

2066
01:35:31,529 --> 01:35:43,859
awesome so if I wanted to see more of

2067
01:35:34,649 --> 01:35:46,859
this thing I do that awesome

2068
01:35:43,859 --> 01:35:49,019
yeah this thing is super cool all right

2069
01:35:46,859 --> 01:35:51,779
cool so you can basically say like look

2070
01:35:49,020 --> 01:35:53,640
up in the prior scopes find this thing

2071
01:35:51,779 --> 01:35:55,079
show me 16 elements of it and that all

2072
01:35:53,640 --> 01:35:58,590
just worked flawlessly that's pretty

2073
01:35:55,079 --> 01:36:00,710
great yeah

2074
01:35:58,590 --> 01:36:05,190
looking great looking really really good

2075
01:36:00,710 --> 01:36:07,890
alright so moving along here enough with

2076
01:36:05,189 --> 01:36:08,488
us saying how good remedy is we should

2077
01:36:07,890 --> 01:36:12,389
probably

2078
01:36:08,488 --> 01:36:14,729
in our own code working as opposed to

2079
01:36:12,389 --> 01:36:17,819
looking at someone else's code who got

2080
01:36:14,729 --> 01:36:20,609
their code working let's go through and

2081
01:36:17,819 --> 01:36:25,109
see what we've got here

2082
01:36:20,609 --> 01:36:30,598
I guess this properly starts at the

2083
01:36:25,109 --> 01:36:36,269
first chunk so we're skipping the first

2084
01:36:30,599 --> 01:36:38,360
chunk I don't know if that's correct I

2085
01:36:36,270 --> 01:36:41,760
[Music]

2086
01:36:38,359 --> 01:36:47,098
kind of don't think it is like I feel

2087
01:36:41,760 --> 01:36:50,429
like the first chunk so I want to look

2088
01:36:47,099 --> 01:36:55,469
at that that looks like maybe a bit of

2089
01:36:50,429 --> 01:36:58,710
copypastas sort of potentially so I just

2090
01:36:55,469 --> 01:37:02,880
want to look at the riff iterator code

2091
01:36:58,710 --> 01:37:05,368
here and and just see so so you can see

2092
01:37:02,880 --> 01:37:08,969
that the header is not the thing that

2093
01:37:05,368 --> 01:37:11,308
it's pointing to initially right it

2094
01:37:08,969 --> 01:37:13,170
parts of the first one so I don't I

2095
01:37:11,309 --> 01:37:14,969
don't think this is correct I'm gonna

2096
01:37:13,170 --> 01:37:17,519
say that that's wrong

2097
01:37:14,969 --> 01:37:20,219
you don't skip the first one the header

2098
01:37:17,519 --> 01:37:23,039
is peeled off as as a separate thing so

2099
01:37:20,219 --> 01:37:24,779
I think that's not what we want so I'm

2100
01:37:23,038 --> 01:37:27,988
gonna say that that's bad and we're

2101
01:37:24,779 --> 01:37:29,340
gonna skip that run through and we're

2102
01:37:27,988 --> 01:37:31,859
gonna jump into a new run through that

2103
01:37:29,340 --> 01:37:32,969
doesn't do that because maybe it may

2104
01:37:31,859 --> 01:37:34,078
have worked but it would still be

2105
01:37:32,969 --> 01:37:36,300
incorrect because it would have been

2106
01:37:34,078 --> 01:37:38,279
skipping some chunk and maybe that chunk

2107
01:37:36,300 --> 01:37:43,230
is not one of the two chunks we actually

2108
01:37:38,279 --> 01:37:45,059
care about fmt and da ta but just

2109
01:37:43,229 --> 01:37:46,229
because it would work with that wav file

2110
01:37:45,059 --> 01:37:47,880
it could easily have not worked with

2111
01:37:46,229 --> 01:37:49,618
another where one of those two chunks

2112
01:37:47,880 --> 01:37:53,029
was the first chunk and so I'm pretty

2113
01:37:49,618 --> 01:37:55,348
sure we didn't want that so off we go

2114
01:37:53,029 --> 01:37:57,090
and it looks like it actually would have

2115
01:37:55,349 --> 01:38:00,239
failed because it looks like the first

2116
01:37:57,090 --> 01:38:01,380
chunk actually is the FMT chunk which is

2117
01:38:00,238 --> 01:38:04,408
a format chunk which is the one we need

2118
01:38:01,380 --> 01:38:08,460
so I think that's probably important

2119
01:38:04,408 --> 01:38:10,348
that we that we fix that all right so we

2120
01:38:08,460 --> 01:38:12,059
get the data out and get the format out

2121
01:38:10,349 --> 01:38:14,279
it looks like there's some other chunks

2122
01:38:12,059 --> 01:38:17,340
probably like an info chunk or something

2123
01:38:14,279 --> 01:38:18,779
and we ignore it we come down here and

2124
01:38:17,340 --> 01:38:20,460
we've got the channel and sample count

2125
01:38:18,779 --> 01:38:21,059
and what we're doing here we're gonna

2126
01:38:20,460 --> 01:38:25,130
push

2127
01:38:21,060 --> 01:38:28,590
sound on that's the essentially the the

2128
01:38:25,130 --> 01:38:30,779
you know D interleaved version of this

2129
01:38:28,590 --> 01:38:32,550
thing and we're just going through D

2130
01:38:30,779 --> 01:38:35,099
interleaving it right like this is just

2131
01:38:32,550 --> 01:38:37,380
a B interleave and so if just a

2132
01:38:35,100 --> 01:38:38,490
visualize is actually going on there if

2133
01:38:37,380 --> 01:38:39,900
we take a look at what the channel can

2134
01:38:38,489 --> 01:38:41,939
actually is you can see that this is

2135
01:38:39,899 --> 01:38:44,579
actually a dual channel sound it's

2136
01:38:41,939 --> 01:38:46,079
stereo because it's music right it's not

2137
01:38:44,579 --> 01:38:49,649
a sound effect so it kind of has

2138
01:38:46,079 --> 01:38:53,460
spatialization already built into it and

2139
01:38:49,649 --> 01:38:55,889
so that channel count of two means that

2140
01:38:53,460 --> 01:38:57,180
we're doing in the interleaved by two we

2141
01:38:55,890 --> 01:38:59,310
should be able to watch that to

2142
01:38:57,180 --> 01:39:01,500
interleave happen if i look at source

2143
01:38:59,310 --> 01:39:12,060
samples using the stuff that we just

2144
01:39:01,500 --> 01:39:14,189
looked at sources sorry sample data if

2145
01:39:12,060 --> 01:39:16,200
we look at those samples well

2146
01:39:14,189 --> 01:39:20,519
unfortunately it starts with it looks

2147
01:39:16,199 --> 01:39:22,289
like it starts with silence which is

2148
01:39:20,520 --> 01:39:24,450
kind of what you would expect i don't

2149
01:39:22,289 --> 01:39:27,869
know where it actually starts being not

2150
01:39:24,449 --> 01:39:31,260
silent i'm sorry for pushing 500 things

2151
01:39:27,869 --> 01:39:34,260
on to the immediate mode stack here but

2152
01:39:31,260 --> 01:39:35,670
let's see so so really there's like just

2153
01:39:34,260 --> 01:39:40,710
a ton of silence at the beginning of

2154
01:39:35,670 --> 01:39:42,960
this file so d interleaving I would

2155
01:39:40,710 --> 01:39:44,159
rather we had some structure art there

2156
01:39:42,960 --> 01:39:46,529
I'm just going to assume that it works

2157
01:39:44,159 --> 01:39:48,930
for now we really should go through and

2158
01:39:46,529 --> 01:39:50,340
try to visualize that if there was some

2159
01:39:48,930 --> 01:39:51,720
actual data in there but all we would

2160
01:39:50,340 --> 01:39:53,220
would see right now is just writing

2161
01:39:51,720 --> 01:39:55,710
zeros everywhere so be impossible to

2162
01:39:53,220 --> 01:39:58,680
tell if it was actually didn't relieving

2163
01:39:55,710 --> 01:40:01,949
anything or not so if we get through

2164
01:39:58,680 --> 01:40:03,480
here and go to the actual return after

2165
01:40:01,949 --> 01:40:06,269
these two things have been to interleave

2166
01:40:03,479 --> 01:40:08,369
now we'd expect the sound to contain

2167
01:40:06,270 --> 01:40:13,410
those d interleaves so it should have

2168
01:40:08,369 --> 01:40:17,489
two sort of channels each one is about

2169
01:40:13,409 --> 01:40:21,659
7.5 million samples long and there'd be

2170
01:40:17,489 --> 01:40:24,149
two blocks inside here when we come to

2171
01:40:21,659 --> 01:40:28,680
process audio that's gonna actually

2172
01:40:24,149 --> 01:40:29,879
trigger I think the long sound case this

2173
01:40:28,680 --> 01:40:31,079
part it doesn't have to worry about

2174
01:40:29,880 --> 01:40:33,930
because obviously there's only two

2175
01:40:31,079 --> 01:40:34,319
channels not 64 channels which is more

2176
01:40:33,930 --> 01:40:37,050
than any

2177
01:40:34,319 --> 01:40:38,849
sound should ever have but when we come

2178
01:40:37,050 --> 01:40:41,610
through here the max sample count should

2179
01:40:38,849 --> 01:40:44,039
absolutely get triggered it looks like

2180
01:40:41,609 --> 01:40:45,960
here that's gonna be a pretty low number

2181
01:40:44,039 --> 01:40:49,050
compared to the number of samples in

2182
01:40:45,960 --> 01:40:50,880
this particular sound so that's the you

2183
01:40:49,050 --> 01:40:53,400
know the number of samples that we're

2184
01:40:50,880 --> 01:40:55,500
talking about here and if we look at how

2185
01:40:53,399 --> 01:40:57,679
many samples

2186
01:40:55,500 --> 01:41:00,118
how many chunks we have to break it into

2187
01:40:57,679 --> 01:41:02,639
it should actually be substantial so if

2188
01:41:00,118 --> 01:41:04,710
I look at total chunk count let's see 57

2189
01:41:02,639 --> 01:41:05,969
right so this is a pretty long stringing

2190
01:41:04,710 --> 01:41:09,270
piece of music and it's just gonna chop

2191
01:41:05,969 --> 01:41:10,920
it up into little pieces and so when it

2192
01:41:09,270 --> 01:41:16,500
actually does this it's gonna look and

2193
01:41:10,920 --> 01:41:18,179
see what the asset index is there isn't

2194
01:41:16,500 --> 01:41:21,779
one currently so it knows it has to

2195
01:41:18,179 --> 01:41:23,550
reserve a set of 57 of those when we

2196
01:41:21,779 --> 01:41:25,559
come through here we just check to see

2197
01:41:23,550 --> 01:41:28,110
if we have enough and it looks like we

2198
01:41:25,560 --> 01:41:30,810
do so we're gonna look and see here 470

2199
01:41:28,109 --> 01:41:34,250
the asset count then should increase by

2200
01:41:30,810 --> 01:41:43,079
that reserve amount that we want there

2201
01:41:34,250 --> 01:41:46,260
oops there we go

2202
01:41:43,078 --> 01:41:49,049
so as we step over this we're in good

2203
01:41:46,260 --> 01:41:51,719
shape we come out here we've got

2204
01:41:49,050 --> 01:41:53,099
everything that we want inside the asset

2205
01:41:51,719 --> 01:41:54,840
index case because we know we actually

2206
01:41:53,099 --> 01:41:58,020
reserved one we should now be able to

2207
01:41:54,840 --> 01:42:00,360
split it into blocks the sample count

2208
01:41:58,020 --> 01:42:02,639
remaining should now go down over time

2209
01:42:00,359 --> 01:42:05,670
as we write out the blocks here's the

2210
01:42:02,639 --> 01:42:08,489
total amount we have as we go through

2211
01:42:05,670 --> 01:42:09,118
here we write out each individual one of

2212
01:42:08,488 --> 01:42:10,649
these

2213
01:42:09,118 --> 01:42:15,118
we're not reusing the assets so we

2214
01:42:10,649 --> 01:42:16,379
create a new one every time we ask to

2215
01:42:15,118 --> 01:42:18,658
unload this audio but there actually

2216
01:42:16,380 --> 01:42:20,880
isn't any audio loaded so that's a no op

2217
01:42:18,658 --> 01:42:22,920
time so that's only if you're updating a

2218
01:42:20,880 --> 01:42:26,670
thing that was already sort of in the

2219
01:42:22,920 --> 01:42:29,279
set of known data we're gonna reserve

2220
01:42:26,670 --> 01:42:32,550
the asset data size here let's make sure

2221
01:42:29,279 --> 01:42:35,158
that asset data size looks about right

2222
01:42:32,550 --> 01:42:37,289
that should be double the max sample

2223
01:42:35,158 --> 01:42:39,719
count because each one 16 bits it is so

2224
01:42:37,289 --> 01:42:43,050
that's a nice that lines up with what we

2225
01:42:39,719 --> 01:42:47,019
expect in fact and it lines up I don't

2226
01:42:43,050 --> 01:42:49,479
know can you do this no you can't

2227
01:42:47,019 --> 01:42:53,469
so I don't think it shows you results of

2228
01:42:49,479 --> 01:42:57,219
the numbers but I can do that in calc so

2229
01:42:53,469 --> 01:43:00,849
if I just say look I want to know how

2230
01:42:57,219 --> 01:43:03,189
big 256 K is which is what I kind of

2231
01:43:00,849 --> 01:43:05,170
wanted these blocks to be you can see

2232
01:43:03,189 --> 01:43:06,929
that's exactly what it is and so that

2233
01:43:05,170 --> 01:43:09,368
works out nicely

2234
01:43:06,929 --> 01:43:13,090
we set the Dean of science we pull

2235
01:43:09,368 --> 01:43:16,299
everything in and yeah everything looks

2236
01:43:13,090 --> 01:43:23,409
fine there we're gonna write that asset

2237
01:43:16,300 --> 01:43:24,150
data out so I see a bug now so this is

2238
01:43:23,408 --> 01:43:27,638
wrong

2239
01:43:24,149 --> 01:43:30,879
this right here is incorrect so what you

2240
01:43:27,639 --> 01:43:36,340
can see is what we want is we want the

2241
01:43:30,880 --> 01:43:39,279
first asset the first asset index wants

2242
01:43:36,340 --> 01:43:43,630
to go in here right but we're iterating

2243
01:43:39,279 --> 01:43:47,768
over these asset index C's as we go and

2244
01:43:43,630 --> 01:43:51,609
so really what we need to do is outside

2245
01:43:47,769 --> 01:43:56,469
the while loop we assigned this and then

2246
01:43:51,609 --> 01:43:58,359
we write as we go but you know writing

2247
01:43:56,469 --> 01:44:04,109
this every time we'll set the asset

2248
01:43:58,359 --> 01:44:06,158
index to the wrong one so that is a bug

2249
01:44:04,109 --> 01:44:12,009
that needs fixing

2250
01:44:06,158 --> 01:44:14,319
so almost made it not quite so process

2251
01:44:12,010 --> 01:44:16,119
audio import had a bug in if the bug is

2252
01:44:14,319 --> 01:44:19,599
that we're trying to remember the first

2253
01:44:16,118 --> 01:44:21,578
asset index in our chain instead we're

2254
01:44:19,599 --> 01:44:24,248
remembering the last asset index in our

2255
01:44:21,578 --> 01:44:26,049
chain that's a definite bug so what we

2256
01:44:24,248 --> 01:44:29,170
want to do is right before we actually

2257
01:44:26,050 --> 01:44:31,208
kick in here when we have the asset

2258
01:44:29,170 --> 01:44:33,939
index that we've allocated we set it now

2259
01:44:31,208 --> 01:44:36,130
that way as we come through here and we

2260
01:44:33,939 --> 01:44:38,769
Inc the asset index each time we're

2261
01:44:36,130 --> 01:44:42,609
never going to rewrite that asset index

2262
01:44:38,769 --> 01:44:44,769
back out to the storage the file

2263
01:44:42,609 --> 01:44:47,228
remembrance so that it won't you know

2264
01:44:44,769 --> 01:44:51,189
look it in the future again think about

2265
01:44:47,229 --> 01:44:53,679
that now I think if I'm not mistaken

2266
01:44:51,189 --> 01:44:55,689
there's a further bug here which is that

2267
01:44:53,679 --> 01:44:58,149
this really should be written per

2268
01:44:55,689 --> 01:45:00,300
channel because each channel gets a

2269
01:44:58,149 --> 01:45:02,759
different asset index out of it

2270
01:45:00,300 --> 01:45:06,840
looking at how this goes and and does it

2271
01:45:02,760 --> 01:45:08,639
here you can see yeah and this is just

2272
01:45:06,840 --> 01:45:10,679
garbage this this stuff is just garbage

2273
01:45:08,639 --> 01:45:13,559
this is supposed to this isn't supposed

2274
01:45:10,679 --> 01:45:14,940
to be acid import grid divided by eight

2275
01:45:13,559 --> 01:45:17,130
it's supposed to be channel index

2276
01:45:14,939 --> 01:45:20,308
divided by eight so this this is just

2277
01:45:17,130 --> 01:45:24,659
all wrong so let's go ahead and fix it

2278
01:45:20,309 --> 01:45:28,460
right okay so what we want to do here is

2279
01:45:24,658 --> 01:45:32,069
say that we've got an asset index slot

2280
01:45:28,460 --> 01:45:35,448
right the asset index slot is going to

2281
01:45:32,069 --> 01:45:35,448
come out of here

2282
01:45:36,469 --> 01:45:49,980
and we're going to rewrite it like this

2283
01:45:43,969 --> 01:45:55,969
it has to come from the channel index so

2284
01:45:49,979 --> 01:45:58,919
what we actually wanted was this right

2285
01:45:55,969 --> 01:46:03,029
something along those lines where we've

2286
01:45:58,920 --> 01:46:09,118
got the div eight and the mod a split

2287
01:46:03,029 --> 01:46:10,889
into those two segments right now

2288
01:46:09,118 --> 01:46:14,189
there's easier ways to do this we don't

2289
01:46:10,889 --> 01:46:18,690
really have to do it that way we could

2290
01:46:14,189 --> 01:46:21,779
have done it differently and you know I

2291
01:46:18,689 --> 01:46:25,078
don't know yeah exactly how we want to

2292
01:46:21,779 --> 01:46:28,109
do it but that's roughly speaking what

2293
01:46:25,078 --> 01:46:31,578
we would do let's actually break that

2294
01:46:28,109 --> 01:46:33,448
out oops

2295
01:46:31,578 --> 01:46:36,479
into something a little bit more

2296
01:46:33,448 --> 01:46:38,698
specific let's say that we've got the X

2297
01:46:36,479 --> 01:46:40,529
index and the Y index here so we can at

2298
01:46:38,698 --> 01:46:45,899
least inspect them and make sure that

2299
01:46:40,529 --> 01:46:49,229
they're right and so that's really more

2300
01:46:45,899 --> 01:46:51,808
what we're talking about here so if we

2301
01:46:49,229 --> 01:46:52,618
then come back to this routine and look

2302
01:46:51,809 --> 01:46:56,670
at it again

2303
01:46:52,618 --> 01:46:58,589
hopefully it's more reasonable now I

2304
01:46:56,670 --> 01:47:01,679
don't care about this code at the moment

2305
01:46:58,590 --> 01:47:05,309
I want to jump right to here so as we

2306
01:47:01,679 --> 01:47:06,510
load out this stuff in parse wave we're

2307
01:47:05,309 --> 01:47:09,449
gonna soon that work too because I

2308
01:47:06,510 --> 01:47:11,010
looked at it and looked reasonable so as

2309
01:47:09,448 --> 01:47:13,078
we come through here now I want to see

2310
01:47:11,010 --> 01:47:14,099
if we got a reasonable X and x and YX

2311
01:47:13,078 --> 01:47:16,109
they should bow

2312
01:47:14,099 --> 01:47:18,270
be zero now and then as we go to the

2313
01:47:16,109 --> 01:47:21,689
next channel we should get a one here in

2314
01:47:18,270 --> 01:47:22,920
a zero here so as we produce that asset

2315
01:47:21,689 --> 01:47:25,799
index now we're going to write it back

2316
01:47:22,920 --> 01:47:28,889
the asset slot once if we go back and

2317
01:47:25,800 --> 01:47:31,829
look at the source file itself so I you

2318
01:47:28,889 --> 01:47:35,460
know if I do this and I take a look

2319
01:47:31,828 --> 01:47:38,219
inside the asset indices in in chant you

2320
01:47:35,460 --> 01:47:40,020
know for channel zeroth there the asset

2321
01:47:38,219 --> 01:47:42,359
index should get written back to there

2322
01:47:40,020 --> 01:47:46,679
on this line so that's the asset next

2323
01:47:42,359 --> 01:47:48,828
that looks right as I come through here

2324
01:47:46,679 --> 01:47:52,560
we're gonna do a sample count remaining

2325
01:47:48,828 --> 01:47:54,809
kind of clip behavior to write that out

2326
01:47:52,560 --> 01:47:58,050
you can see us getting this stuff

2327
01:47:54,810 --> 01:48:01,170
created here so the chain equals HHA

2328
01:47:58,050 --> 01:48:02,789
sound none and this will determine if we

2329
01:48:01,170 --> 01:48:04,770
have to clip it means we will change the

2330
01:48:02,789 --> 01:48:06,448
next one so let's see so we've picked

2331
01:48:04,770 --> 01:48:08,369
the sample count it should be the total

2332
01:48:06,448 --> 01:48:10,529
sample count which is here it should now

2333
01:48:08,368 --> 01:48:13,979
get clipped to the max sample count

2334
01:48:10,529 --> 01:48:15,420
which it does right so this is that max

2335
01:48:13,979 --> 01:48:17,189
sample count and you can see that that

2336
01:48:15,420 --> 01:48:18,449
got clipped we set ourselves up for

2337
01:48:17,189 --> 01:48:19,799
chaining because we know that we have to

2338
01:48:18,448 --> 01:48:20,928
go to the next one since we're not gonna

2339
01:48:19,800 --> 01:48:27,510
be able to write the whole sound out

2340
01:48:20,929 --> 01:48:30,408
here when we go through here we should

2341
01:48:27,510 --> 01:48:34,349
be good to go this is just creating the

2342
01:48:30,408 --> 01:48:40,170
total asset data size and yeah reserving

2343
01:48:34,349 --> 01:48:43,349
the data in the file writing it out that

2344
01:48:40,170 --> 01:48:45,899
should be fine and then we inked that

2345
01:48:43,349 --> 01:48:50,578
asset index move the sample pointer

2346
01:48:45,899 --> 01:48:59,328
forward and then come through again here

2347
01:48:50,578 --> 01:48:59,328
so I think that should be fine as we go

2348
01:49:00,439 --> 01:49:07,500
and that'll just loop through 57 times

2349
01:49:04,578 --> 01:49:18,289
hopefully finish with no errors we'll

2350
01:49:07,500 --> 01:49:24,270
find out if we go looks good all right

2351
01:49:18,289 --> 01:49:27,019
so that's correctly we hope loaded our

2352
01:49:24,270 --> 01:49:27,020
sound and

2353
01:49:30,130 --> 01:49:38,150
we'll see what happens all right

2354
01:49:33,020 --> 01:49:40,730
so looks like we got a break here on one

2355
01:49:38,149 --> 01:49:44,299
of our assertions you can see up at the

2356
01:49:40,729 --> 01:49:48,369
top there's a like a notification here

2357
01:49:44,300 --> 01:49:50,659
which is like exception thrown at right

2358
01:49:48,369 --> 01:49:53,329
one thing I meant to mention about this

2359
01:49:50,659 --> 01:49:55,010
line it does something a little bit

2360
01:49:53,329 --> 01:49:57,079
weird which is the color of the line

2361
01:49:55,010 --> 01:49:58,909
doesn't change the way that I would

2362
01:49:57,079 --> 01:50:03,170
expect it to like I would expect it when

2363
01:49:58,909 --> 01:50:05,000
you stop to be read on like an error or

2364
01:50:03,170 --> 01:50:06,440
green if it was fine or something and

2365
01:50:05,000 --> 01:50:08,779
then orange when it's running or

2366
01:50:06,439 --> 01:50:11,059
something but it remains orange even

2367
01:50:08,779 --> 01:50:13,340
when you stop running which was weird I

2368
01:50:11,060 --> 01:50:14,960
don't know I I'm not sure what how this

2369
01:50:13,340 --> 01:50:17,329
lines supposed to work exactly but it's

2370
01:50:14,960 --> 01:50:19,970
kind of like a status right and it feels

2371
01:50:17,329 --> 01:50:23,720
like it just needs a little bit of work

2372
01:50:19,970 --> 01:50:25,909
there I don't know just something to

2373
01:50:23,720 --> 01:50:29,690
think about how that's working at the

2374
01:50:25,909 --> 01:50:31,699
moment but anyway moving along we're

2375
01:50:29,689 --> 01:50:34,609
getting a problem where we try to do a

2376
01:50:31,699 --> 01:50:37,340
set asset type here where it's looking

2377
01:50:34,609 --> 01:50:39,259
and it seems like this asset maybe

2378
01:50:37,340 --> 01:50:41,630
already got added or something else

2379
01:50:39,260 --> 01:50:43,280
weird happened so what we want to do is

2380
01:50:41,630 --> 01:50:47,300
figure out where that's occurring and

2381
01:50:43,279 --> 01:50:47,859
why and see if we can't stop that from

2382
01:50:47,300 --> 01:50:50,210
happening

2383
01:50:47,859 --> 01:50:53,000
so the first thing to check out is who

2384
01:50:50,210 --> 01:50:55,880
were you know who are we saving I and

2385
01:50:53,000 --> 01:51:01,750
just to take a look at to what extent

2386
01:50:55,880 --> 01:51:03,710
you know this is some old part of our

2387
01:51:01,750 --> 01:51:05,840
you know is this something that's

2388
01:51:03,710 --> 01:51:08,300
happening as part of the old art

2389
01:51:05,840 --> 01:51:09,650
exporting or is this actually something

2390
01:51:08,300 --> 01:51:11,260
that's happening as part of our new

2391
01:51:09,649 --> 01:51:14,299
sound exporting because I don't know

2392
01:51:11,260 --> 01:51:16,970
which one we're looking at so let's pop

2393
01:51:14,300 --> 01:51:20,779
back up the stack here which is what I

2394
01:51:16,970 --> 01:51:25,369
did to look and see what what we're

2395
01:51:20,779 --> 01:51:27,229
exporting so is it art is it audio right

2396
01:51:25,369 --> 01:51:29,989
that kind of thing so it looks like

2397
01:51:27,229 --> 01:51:31,939
we're exporting art here which means

2398
01:51:29,989 --> 01:51:33,679
that we're getting an error in something

2399
01:51:31,939 --> 01:51:36,229
that was supposed to already be working

2400
01:51:33,680 --> 01:51:39,440
but you know we've we've broken it

2401
01:51:36,229 --> 01:51:40,428
somehow and there's a lot of different

2402
01:51:39,439 --> 01:51:43,788
ways that that could be

2403
01:51:40,429 --> 01:51:45,679
happening we don't actually know where

2404
01:51:43,788 --> 01:51:49,429
it's getting this set asset type part

2405
01:51:45,679 --> 01:51:54,969
from we should probably look here so

2406
01:51:49,429 --> 01:52:02,769
it's getting this asset out of the asset

2407
01:51:54,969 --> 01:52:02,769
pool it's looking at the import grid

2408
01:52:21,550 --> 01:52:36,210
so I guess my question is what came out

2409
01:52:27,880 --> 01:52:43,779
of there so it said it was a plate that

2410
01:52:36,210 --> 01:52:51,520
seems eminently reasonable so it has an

2411
01:52:43,779 --> 01:52:57,029
asset that it thinks next of type should

2412
01:52:51,520 --> 01:52:57,030
be set to null on but it wasn't

2413
01:53:10,149 --> 01:53:24,329
so this does at least suggest some kind

2414
01:53:17,710 --> 01:53:35,010
of a weird bug happening because it

2415
01:53:24,329 --> 01:53:39,909
suggests just to walk through it here

2416
01:53:35,010 --> 01:53:43,560
when this asset was initially loaded it

2417
01:53:39,909 --> 01:53:46,359
was loaded presumably with type zero

2418
01:53:43,560 --> 01:53:50,020
which is to say that the asset didn't

2419
01:53:46,359 --> 01:53:53,079
have a type so it got shunted into a

2420
01:53:50,020 --> 01:53:56,740
group of assets that are typeless right

2421
01:53:53,079 --> 01:53:57,819
ones that didn't have a type assuming

2422
01:53:56,739 --> 01:54:03,729
that that's what actually happened and

2423
01:53:57,819 --> 01:54:06,250
we can go verify that if that was really

2424
01:54:03,729 --> 01:54:09,309
what happened then now it's getting

2425
01:54:06,250 --> 01:54:11,529
tagged with a type of plate rather than

2426
01:54:09,310 --> 01:54:13,690
a type of zero and there really

2427
01:54:11,529 --> 01:54:16,859
shouldn't have been a type zero asset

2428
01:54:13,689 --> 01:54:21,519
getting imported there originally so I

2429
01:54:16,859 --> 01:54:26,519
would like to go find out what's up with

2430
01:54:21,520 --> 01:54:30,810
that so let's take a quick look and see

2431
01:54:26,520 --> 01:54:35,610
inside the initial asset startup code

2432
01:54:30,810 --> 01:54:37,750
when that set asset type is happening

2433
01:54:35,609 --> 01:54:38,799
and again I realize we're supposed to be

2434
01:54:37,750 --> 01:54:42,819
done but I just want to take a quick

2435
01:54:38,800 --> 01:54:45,430
look at this before we proceed so in

2436
01:54:42,819 --> 01:54:46,539
here what I'm trying to say is well you

2437
01:54:45,430 --> 01:54:48,940
know you can even see that it's

2438
01:54:46,539 --> 01:54:50,979
happening this asset type is getting

2439
01:54:48,939 --> 01:54:54,969
added to the list even if the type i's

2440
01:54:50,979 --> 01:54:58,059
ID is zero which really shouldn't be

2441
01:54:54,970 --> 01:55:00,270
happening you know that's not really

2442
01:54:58,060 --> 01:55:02,320
something that's supposed to occur

2443
01:55:00,270 --> 01:55:05,920
because you're not supposed to look for

2444
01:55:02,319 --> 01:55:09,029
a type zero asset so what I'd like to do

2445
01:55:05,920 --> 01:55:09,029
is something more like this

2446
01:55:24,510 --> 01:55:31,119
I'd like to take a quick look and see

2447
01:55:27,579 --> 01:55:34,180
why if I'm right if this is happening at

2448
01:55:31,119 --> 01:55:37,059
startup why did we have asset none

2449
01:55:34,180 --> 01:55:38,740
plates how did that happen

2450
01:55:37,060 --> 01:55:40,480
like was that just because we had a bug

2451
01:55:38,739 --> 01:55:42,819
in the importer originally or is that

2452
01:55:40,479 --> 01:55:47,349
happening in some other way and and we

2453
01:55:42,819 --> 01:55:48,549
need to go find out how right so that's

2454
01:55:47,350 --> 01:55:50,260
what I would like to take a look at

2455
01:55:48,550 --> 01:55:53,050
first so I'm just gonna set a breakpoint

2456
01:55:50,260 --> 01:55:55,989
cure when we initially like open all of

2457
01:55:53,050 --> 01:56:00,310
our existing files I'm gonna I just want

2458
01:55:55,989 --> 01:56:02,500
to know what's going on here so you can

2459
01:56:00,310 --> 01:56:06,940
see that this is happening at least once

2460
01:56:02,500 --> 01:56:12,750
I mean Here I am in the code right it's

2461
01:56:06,939 --> 01:56:12,750
actually happening quite a bit right

2462
01:56:14,369 --> 01:56:22,569
that's like way too many so I don't know

2463
01:56:19,689 --> 01:56:25,359
why we're getting so many assets with a

2464
01:56:22,569 --> 01:56:27,189
type ID of zero because how are those

2465
01:56:25,359 --> 01:56:29,019
getting written out in the first place

2466
01:56:27,189 --> 01:56:36,309
like why were we generating so many type

2467
01:56:29,020 --> 01:56:38,230
ID zero assets my only thing I can guess

2468
01:56:36,310 --> 01:56:40,270
is that we basically had a bug where we

2469
01:56:38,229 --> 01:56:44,189
were creating type 0 assets for plates

2470
01:56:40,270 --> 01:56:44,190
or something like how was that happening

2471
01:56:54,039 --> 01:56:59,140
I'm really not sure how that could have

2472
01:56:56,539 --> 01:56:59,140
been happening

2473
01:57:08,409 --> 01:57:17,349
what's the name of the tag list stuff

2474
01:57:14,170 --> 01:57:17,350
there it is

2475
01:57:17,590 --> 01:57:30,829
so if we assume that these are plate

2476
01:57:27,199 --> 01:57:33,859
assets now and which is the type that we

2477
01:57:30,829 --> 01:57:39,140
saw before and like before they weren't

2478
01:57:33,859 --> 01:57:41,689
or something I'm really not sure what

2479
01:57:39,140 --> 01:57:44,510
what was happening there such that they

2480
01:57:41,689 --> 01:57:47,469
weren't getting tagged as plates was

2481
01:57:44,510 --> 01:57:51,320
there a bug in our original routine I

2482
01:57:47,470 --> 01:57:54,110
mean if we look back I don't actually

2483
01:57:51,319 --> 01:57:55,699
know if we've got it up here but like if

2484
01:57:54,109 --> 01:57:58,219
we look back at the code

2485
01:57:55,699 --> 01:58:00,260
yeah we're not can we login probably

2486
01:57:58,220 --> 01:58:05,090
can't login it's gonna ask me to like

2487
01:58:00,260 --> 01:58:07,280
verify it some nonsense if we look back

2488
01:58:05,090 --> 01:58:11,050
at the previous code let me grab some

2489
01:58:07,279 --> 01:58:11,050
authentication here I guess

2490
01:58:24,289 --> 01:58:34,369
so I guess we have to look at the

2491
01:58:28,560 --> 01:58:43,250
authentication here and see what the

2492
01:58:34,369 --> 01:58:43,250
authentication is there we go

2493
01:58:44,479 --> 01:58:55,589
so if we look into the code that we were

2494
01:58:50,219 --> 01:58:58,829
using in the import scheme here right so

2495
01:58:55,590 --> 01:59:00,840
this is the code from last time and this

2496
01:58:58,829 --> 01:59:07,979
was the code that was importing our art

2497
01:59:00,840 --> 01:59:11,029
assets so if we were on a plate it still

2498
01:59:07,979 --> 01:59:16,769
should have set it to a set plate right

2499
01:59:11,029 --> 01:59:19,019
so I'm not 100% sure where we were

2500
01:59:16,770 --> 01:59:22,080
getting that from I don't know if it's

2501
01:59:19,020 --> 01:59:25,739
like a problem is it a problem with like

2502
01:59:22,079 --> 01:59:28,408
reloading or something or you know I

2503
01:59:25,738 --> 01:59:31,049
don't know what's happening there with

2504
01:59:28,408 --> 01:59:32,279
Wow why we're getting that because it

2505
01:59:31,050 --> 01:59:34,440
should you know if you look at what

2506
01:59:32,279 --> 01:59:36,179
should have happened here we should not

2507
01:59:34,439 --> 01:59:44,908
have had that issue

2508
01:59:36,179 --> 01:59:48,029
um I guess one thing that maybe is the

2509
01:59:44,908 --> 01:59:49,710
case I mean I guess I don't know where

2510
01:59:48,029 --> 01:59:52,769
exactly those things are coming from you

2511
01:59:49,710 --> 01:59:56,579
know maybe they're coming from the font

2512
01:59:52,770 --> 02:00:00,330
file or something because we're still

2513
01:59:56,579 --> 02:00:03,550
like reading in some older stuff maybe

2514
02:00:00,329 --> 02:00:06,658
we didn't properly list

2515
02:00:03,550 --> 02:00:06,659
[Music]

2516
02:00:09,140 --> 02:00:13,950
I'm really not sure there are some

2517
02:00:12,300 --> 02:00:16,289
assets that don't have any types

2518
02:00:13,949 --> 02:00:19,109
associated with them and I think font

2519
02:00:16,289 --> 02:00:23,850
glyphs would probably be one of them

2520
02:00:19,109 --> 02:00:25,699
maybe don't quote me on that but like

2521
02:00:23,850 --> 02:00:30,270
font glyphs would be an example and

2522
02:00:25,699 --> 02:00:33,449
another example would be the sounds like

2523
02:00:30,270 --> 02:00:35,250
themselves they're chunks that come

2524
02:00:33,449 --> 02:00:38,609
after the initial chunk if they're

2525
02:00:35,250 --> 02:00:40,170
streamed those don't have any it

2526
02:00:38,609 --> 02:00:42,149
wouldn't have any type associated with

2527
02:00:40,170 --> 02:00:44,510
them because they're not ever accessed

2528
02:00:42,149 --> 02:00:47,699
directly their only asset accessed as

2529
02:00:44,510 --> 02:00:52,619
chains off of the existing sound off of

2530
02:00:47,699 --> 02:00:55,439
the initial sound but I couldn't really

2531
02:00:52,619 --> 02:00:57,420
say why those would have been getting

2532
02:00:55,439 --> 02:01:01,500
reassigned to a plate

2533
02:00:57,420 --> 02:01:03,210
that seems busted so I'm kind of at a

2534
02:01:01,500 --> 02:01:07,199
loss to explain exactly what's going on

2535
02:01:03,210 --> 02:01:09,390
here the first thing I want to do is I

2536
02:01:07,199 --> 02:01:13,979
would like to go ahead and re-import

2537
02:01:09,390 --> 02:01:17,039
everything and see if it actually if

2538
02:01:13,979 --> 02:01:19,139
this error occurs on a fresh import or

2539
02:01:17,039 --> 02:01:22,949
if it had something to do with like an

2540
02:01:19,140 --> 02:01:25,619
old like setup that we had like I'd like

2541
02:01:22,949 --> 02:01:32,609
to get a sense for what's happening

2542
02:01:25,619 --> 02:01:37,880
there so let's just see what happens if

2543
02:01:32,609 --> 02:01:37,880
I look inside the data directory here

2544
02:01:38,359 --> 02:01:44,039
what you can see is that we really only

2545
02:01:40,529 --> 02:01:46,170
have three hhas this one is the only one

2546
02:01:44,039 --> 02:01:47,729
that is not built fresh it's because

2547
02:01:46,170 --> 02:01:50,159
it's got fonts and we don't support

2548
02:01:47,729 --> 02:01:51,509
fonts yet in our new system but we

2549
02:01:50,159 --> 02:01:53,460
probably will try to get those in there

2550
02:01:51,510 --> 02:01:55,860
as well just so we can kind of have the

2551
02:01:53,460 --> 02:01:58,399
complete set of things that can be

2552
02:01:55,859 --> 02:02:01,679
buildable at runtime as necessary so

2553
02:01:58,399 --> 02:02:02,219
fonts you know we don't have that in

2554
02:02:01,680 --> 02:02:04,320
there yet

2555
02:02:02,220 --> 02:02:07,350
other than that these two are built

2556
02:02:04,319 --> 02:02:10,739
completely from scratch as necessary and

2557
02:02:07,350 --> 02:02:14,640
so I would like to know what's going on

2558
02:02:10,739 --> 02:02:18,090
there is this some kind of a you know is

2559
02:02:14,640 --> 02:02:20,789
this something that happens every time

2560
02:02:18,090 --> 02:02:21,179
we import or is it just some artifact of

2561
02:02:20,789 --> 02:02:22,738
what

2562
02:02:21,179 --> 02:02:26,248
happening in these files and I don't

2563
02:02:22,738 --> 02:02:28,498
know so I would like to do that before I

2564
02:02:26,248 --> 02:02:30,840
do that I want to take a like a look at

2565
02:02:28,498 --> 02:02:33,988
them and see if I can see that we do

2566
02:02:30,840 --> 02:02:38,639
have in our HHA edit program we do have

2567
02:02:33,988 --> 02:02:40,708
a way to dump these out so if we look in

2568
02:02:38,639 --> 02:02:45,389
the dump directory we've got a ton of

2569
02:02:40,708 --> 02:02:51,809
that stuff okay so if I do

2570
02:02:45,389 --> 02:02:55,800
HHA edit and I do a dump not an extract

2571
02:02:51,809 --> 02:02:58,439
which would like get all the bitmaps out

2572
02:02:55,800 --> 02:03:01,159
and stuff which I don't want to do if I

2573
02:02:58,439 --> 02:03:05,519
do an HHA dump of base game

2574
02:03:01,158 --> 02:03:09,839
ehh-ehh and I put that into base game

2575
02:03:05,519 --> 02:03:12,679
dot txt I want to then do intro cutscene

2576
02:03:09,840 --> 02:03:19,920
dot HHA and put that into intro cutscene

2577
02:03:12,679 --> 02:03:23,219
text and then finally test fonts the two

2578
02:03:19,920 --> 02:03:26,038
dot HHA and then test fonts if you got

2579
02:03:23,219 --> 02:03:29,788
text I'm then gonna go ahead and load up

2580
02:03:26,038 --> 02:03:32,670
from the bonus pack the tab view app and

2581
02:03:29,788 --> 02:03:36,538
see if there's anything in here that

2582
02:03:32,670 --> 02:03:43,618
tells me you know what's going on oops

2583
02:03:36,538 --> 02:03:47,908
that was not what I wanted at all nor

2584
02:03:43,618 --> 02:03:51,868
that so here's that base game one if I

2585
02:03:47,908 --> 02:04:00,179
look at these s assets I guess it's kind

2586
02:03:51,868 --> 02:04:02,279
of hard to tell it's not like I can

2587
02:04:00,179 --> 02:04:07,279
really quickly look through these to see

2588
02:04:02,279 --> 02:04:09,630
if there's like plates hanging around

2589
02:04:07,279 --> 02:04:14,340
you know what I mean

2590
02:04:09,630 --> 02:04:17,368
and maybe that's sort of maybe that's

2591
02:04:14,340 --> 02:04:20,849
sort of something we should add I'm kind

2592
02:04:17,368 --> 02:04:23,368
of inclined to do so like for example

2593
02:04:20,849 --> 02:04:26,219
let's suppose inside the HHA edit dot

2594
02:04:23,368 --> 02:04:27,598
cpp and hey this this would give us a

2595
02:04:26,219 --> 02:04:29,609
reason to add that table remember

2596
02:04:27,599 --> 02:04:32,130
earlier today as like we don't actually

2597
02:04:29,609 --> 02:04:34,288
have a table that says what the asset

2598
02:04:32,130 --> 02:04:35,069
type actually is that might be something

2599
02:04:34,288 --> 02:04:38,789
we want to add

2600
02:04:35,069 --> 02:04:42,719
so in here where we do a right HHA I'm

2601
02:04:38,789 --> 02:04:45,658
not ready to H a when we do the dump so

2602
02:04:42,719 --> 02:04:47,908
in here where you see us dumping out

2603
02:04:45,658 --> 02:04:50,339
these assets we might want to look

2604
02:04:47,908 --> 02:04:54,229
through the tags and see what's in there

2605
02:04:50,340 --> 02:04:57,810
so you know in here where we do this tag

2606
02:04:54,229 --> 02:05:00,839
this tag dump what we could do is do the

2607
02:04:57,810 --> 02:05:02,730
tag dump more at the beginning and when

2608
02:05:00,840 --> 02:05:06,389
we do that you know in other words here

2609
02:05:02,729 --> 02:05:09,769
this is at the you know at the tail I

2610
02:05:06,389 --> 02:05:12,480
guess we don't have to really do it I

2611
02:05:09,770 --> 02:05:13,560
guess we don't really have to do it

2612
02:05:12,479 --> 02:05:15,299
there we could still keep it at the end

2613
02:05:13,560 --> 02:05:16,710
but at the beginning you know when we

2614
02:05:15,300 --> 02:05:18,060
loop through these assets right and we

2615
02:05:16,710 --> 02:05:19,439
grab one of these out of here what we

2616
02:05:18,060 --> 02:05:22,230
could do is before we actually print the

2617
02:05:19,439 --> 02:05:23,729
line loop through the tags and extract

2618
02:05:22,229 --> 02:05:25,439
any information from the tags that we

2619
02:05:23,729 --> 02:05:29,279
want to print out as sort of more of a

2620
02:05:25,439 --> 02:05:30,779
heads up so you know in here we would do

2621
02:05:29,279 --> 02:05:33,898
something like this

2622
02:05:30,779 --> 02:05:33,898
[Music]

2623
02:05:34,039 --> 02:05:38,939
actually that's not iterating over the

2624
02:05:36,630 --> 02:05:40,859
that's that's not right that's doing all

2625
02:05:38,939 --> 02:05:43,529
the tags we want just the ones for this

2626
02:05:40,859 --> 02:05:48,089
asset there it is so what we want to do

2627
02:05:43,529 --> 02:05:51,649
is it's this right here we want to loop

2628
02:05:48,090 --> 02:05:54,840
over the asset tags here and I want to

2629
02:05:51,649 --> 02:06:01,189
like grab out the one that's the basic

2630
02:05:54,840 --> 02:06:09,420
type so in here I want to do like a if

2631
02:06:01,189 --> 02:06:11,598
so and I want to grab out the tag this

2632
02:06:09,420 --> 02:06:11,599
way

2633
02:06:15,689 --> 02:06:21,189
so that will get me the tag and now I

2634
02:06:18,430 --> 02:06:26,800
can do something that says like what the

2635
02:06:21,189 --> 02:06:30,129
basic type is so inside the file formats

2636
02:06:26,800 --> 02:06:33,010
where we've got this basic category

2637
02:06:30,130 --> 02:06:37,930
thing what I want to do is have a way

2638
02:06:33,010 --> 02:06:40,600
that that gets printed out and you know

2639
02:06:37,930 --> 02:06:43,829
this this same thing we've got here

2640
02:06:40,600 --> 02:06:46,539
where we got like the name tags right I

2641
02:06:43,829 --> 02:06:50,250
want substantively the exact same thing

2642
02:06:46,539 --> 02:06:59,279
so I want to be able to do like a global

2643
02:06:50,250 --> 02:06:59,279
thing where I do category tag I guess

2644
02:07:03,090 --> 02:07:14,470
and then you hear I just want to do like

2645
02:07:05,560 --> 02:07:16,180
a Const Z and this is well these can

2646
02:07:14,470 --> 02:07:18,130
actually just be in order they don't

2647
02:07:16,180 --> 02:07:19,659
have to look like that so in some sense

2648
02:07:18,130 --> 02:07:22,840
this is actually more like the one we

2649
02:07:19,659 --> 02:07:25,269
have one like that don't we that instead

2650
02:07:22,840 --> 02:07:27,369
of tags it's just now I guess we don't

2651
02:07:25,270 --> 02:07:30,040
actually do one of those it looks like

2652
02:07:27,369 --> 02:07:32,380
we always have them lined up okay well

2653
02:07:30,039 --> 02:07:40,239
that's fine too so if we want to do that

2654
02:07:32,380 --> 02:07:42,069
it's just this like so and so I just

2655
02:07:40,239 --> 02:07:46,149
want to make sure that these are all

2656
02:07:42,069 --> 02:07:48,069
like you know represented in here and

2657
02:07:46,149 --> 02:07:51,879
I'm just gonna print out what kind it

2658
02:07:48,069 --> 02:07:54,009
was the reason I'm doing that is because

2659
02:07:51,880 --> 02:07:57,039
it's just too hard it takes too long for

2660
02:07:54,010 --> 02:07:59,920
me to like open up each individual one

2661
02:07:57,039 --> 02:08:05,890
and look to see if it doesn't have an

2662
02:07:59,920 --> 02:08:08,770
asset category that's more what I want

2663
02:08:05,890 --> 02:08:11,320
to know and so I just want to go through

2664
02:08:08,770 --> 02:08:13,960
and prep this in a way that allows that

2665
02:08:11,319 --> 02:08:16,179
to happen a little bit more specifically

2666
02:08:13,960 --> 02:08:18,569
right here's where macros would be

2667
02:08:16,180 --> 02:08:18,570
pretty handy

2668
02:08:18,760 --> 02:08:38,030
see here there we go and now I just need

2669
02:08:36,319 --> 02:08:39,679
to turn them into something that looks

2670
02:08:38,029 --> 02:08:43,550
like this so these commas are not

2671
02:08:39,680 --> 02:08:46,070
necessary although actually maybe they

2672
02:08:43,550 --> 02:08:54,170
are so probably what I want to do is

2673
02:08:46,069 --> 02:08:55,340
something like this right you can see

2674
02:08:54,170 --> 02:08:57,440
why macros would be handy because you

2675
02:08:55,340 --> 02:08:58,489
could do all this with your doing the

2676
02:08:57,439 --> 02:09:01,399
same thing whenever you're doing the

2677
02:08:58,489 --> 02:09:03,409
same thing to every line that's where

2678
02:09:01,399 --> 02:09:06,829
that's like really the only place I used

2679
02:09:03,409 --> 02:09:07,729
to use macros in canoeing Emacs most

2680
02:09:06,829 --> 02:09:10,059
things you don't really need them for

2681
02:09:07,729 --> 02:09:14,089
but stuff like this it's just handy

2682
02:09:10,060 --> 02:09:18,260
because you can do it one time and then

2683
02:09:14,090 --> 02:09:22,369
you know apply it to lots of things at

2684
02:09:18,260 --> 02:09:24,500
once all right so after that I just need

2685
02:09:22,369 --> 02:09:28,489
to eliminate the asset part of things

2686
02:09:24,500 --> 02:09:31,399
here and change this into constancies in

2687
02:09:28,489 --> 02:09:33,529
the broader scheme of things really

2688
02:09:31,399 --> 02:09:36,920
talking about needing macros is kind of

2689
02:09:33,529 --> 02:09:38,659
a little bit of a red herring too

2690
02:09:36,920 --> 02:09:39,920
because honestly the fact that we have

2691
02:09:38,659 --> 02:09:42,649
to do this typing at all is just because

2692
02:09:39,920 --> 02:09:44,840
C++ is garbage C++ is any good you

2693
02:09:42,649 --> 02:09:48,199
didn't have to do any of this because

2694
02:09:44,840 --> 02:09:51,140
what we're doing right now is manually

2695
02:09:48,199 --> 02:09:52,279
doing a bunch of text entry and saying

2696
02:09:51,140 --> 02:09:54,050
it would be nice if our text editor

2697
02:09:52,279 --> 02:09:56,000
allowed us to automate that text entry

2698
02:09:54,050 --> 02:09:57,920
when really we shouldn't have to be

2699
02:09:56,000 --> 02:10:00,979
doing any of that text entry in the

2700
02:09:57,920 --> 02:10:03,829
first place since if the language just

2701
02:10:00,979 --> 02:10:08,329
had the ability to create things like

2702
02:10:03,829 --> 02:10:10,699
this from a single list we would be good

2703
02:10:08,329 --> 02:10:11,989
to go you can also sort of you know

2704
02:10:10,699 --> 02:10:16,099
there's a there's sort of a poor man's

2705
02:10:11,989 --> 02:10:17,929
version of this that you can do where

2706
02:10:16,100 --> 02:10:21,230
you include you know you can list these

2707
02:10:17,930 --> 02:10:24,710
things once in an include file and then

2708
02:10:21,229 --> 02:10:28,189
use that include file twice and that is

2709
02:10:24,710 --> 02:10:29,869
you know at this point because we've

2710
02:10:28,189 --> 02:10:32,119
done so many things with these arrays

2711
02:10:29,869 --> 02:10:34,130
it's probably what we should have done

2712
02:10:32,119 --> 02:10:39,140
it probably would have saved time it's

2713
02:10:34,130 --> 02:10:41,029
just a little bit ugly you know I don't

2714
02:10:39,140 --> 02:10:42,950
know how I feel about it it's it's six

2715
02:10:41,029 --> 02:10:44,960
of one half doesn't know the other it's

2716
02:10:42,949 --> 02:10:47,599
it's really kind of abusing the macro

2717
02:10:44,960 --> 02:10:49,369
though the preprocessor but it does kind

2718
02:10:47,600 --> 02:10:50,930
of work and sometimes it's just better

2719
02:10:49,369 --> 02:10:52,279
to have something that works even if

2720
02:10:50,930 --> 02:10:54,500
it's a little ugly than something like

2721
02:10:52,279 --> 02:10:59,000
this which is kind of error-prone and

2722
02:10:54,500 --> 02:11:03,609
manual and I don't know how to you know

2723
02:10:59,000 --> 02:11:06,680
how to really say much about those two

2724
02:11:03,609 --> 02:11:08,960
you know trade offs there but yeah

2725
02:11:06,680 --> 02:11:10,369
either way would be nice to have text

2726
02:11:08,960 --> 02:11:13,220
macros for things like this if you do

2727
02:11:10,369 --> 02:11:14,840
want to do them but really they're also

2728
02:11:13,220 --> 02:11:15,949
just a kind of a stupid thing because

2729
02:11:14,840 --> 02:11:17,569
you should never really have to do a

2730
02:11:15,949 --> 02:11:19,489
text macro your language should have

2731
02:11:17,569 --> 02:11:20,960
been able to handle that for you

2732
02:11:19,489 --> 02:11:22,489
whatever you were doing with a text

2733
02:11:20,960 --> 02:11:24,800
macro should have been something the

2734
02:11:22,489 --> 02:11:28,510
language could have done right because

2735
02:11:24,800 --> 02:11:30,949
if it is that wrote if you can do

2736
02:11:28,510 --> 02:11:32,720
effectively a programming operation on

2737
02:11:30,949 --> 02:11:34,340
it you should have just been able to

2738
02:11:32,720 --> 02:11:38,390
tell your language to do it whatever it

2739
02:11:34,340 --> 02:11:40,520
was and the fact that you happen to want

2740
02:11:38,390 --> 02:11:42,470
to do it in actual text maybe you want

2741
02:11:40,520 --> 02:11:45,590
that option but you should never have

2742
02:11:42,470 --> 02:11:46,940
have been forced to do so right like

2743
02:11:45,590 --> 02:11:49,100
that's not something you should have to

2744
02:11:46,939 --> 02:11:52,759
do that's something that you should have

2745
02:11:49,100 --> 02:11:57,050
the option of doing and that's like you

2746
02:11:52,760 --> 02:12:01,159
know it's worth noting the difference

2747
02:11:57,050 --> 02:12:03,829
between those two things anyway so let's

2748
02:12:01,159 --> 02:12:06,309
get category name from ID here and I

2749
02:12:03,829 --> 02:12:09,170
think this is what asset basic category

2750
02:12:06,310 --> 02:12:10,750
and so all I want to do here is say look

2751
02:12:09,170 --> 02:12:13,699
I've got these like category tags

2752
02:12:10,750 --> 02:12:15,170
whatever those are and we don't really

2753
02:12:13,699 --> 02:12:16,670
know what they are just yet

2754
02:12:15,170 --> 02:12:18,710
but we've got these category tags so

2755
02:12:16,670 --> 02:12:21,829
we're gonna go through here and we're

2756
02:12:18,710 --> 02:12:23,750
gonna look at the category tags and for

2757
02:12:21,829 --> 02:12:25,130
every category tag that we see if we

2758
02:12:23,750 --> 02:12:26,569
find one that matches the idea that

2759
02:12:25,130 --> 02:12:29,300
we're looking for we will return it

2760
02:12:26,569 --> 02:12:32,000
right and that's all we were going to do

2761
02:12:29,300 --> 02:12:37,460
so we've got this thing called a name

2762
02:12:32,000 --> 02:12:42,409
tag and we want so don't know where

2763
02:12:37,460 --> 02:12:44,239
that's defined to find here we want one

2764
02:12:42,409 --> 02:12:45,769
of those four category as well so we've

2765
02:12:44,239 --> 02:12:50,069
got here

2766
02:12:45,770 --> 02:12:52,740
category tag I guess is what it is

2767
02:12:50,069 --> 02:12:56,219
and that's just going to be a basic

2768
02:12:52,739 --> 02:13:01,019
asset cat or a basic category asset

2769
02:12:56,220 --> 02:13:03,510
basic category yeah that will allow us

2770
02:13:01,020 --> 02:13:05,790
to scan through there and do this in HHA

2771
02:13:03,510 --> 02:13:08,789
edit so we can find that name right

2772
02:13:05,789 --> 02:13:11,670
we'll be able to call that so I'm gonna

2773
02:13:08,789 --> 02:13:15,380
do category here and I'm gonna say that

2774
02:13:11,670 --> 02:13:20,369
that in fact maybe we'll do like a nun

2775
02:13:15,380 --> 02:13:23,699
something like this or something like

2776
02:13:20,369 --> 02:13:25,109
that and then what I'm gonna do in here

2777
02:13:23,699 --> 02:13:31,319
in fact I guess what we could do is

2778
02:13:25,109 --> 02:13:35,670
actually call it this way so category

2779
02:13:31,319 --> 02:13:38,599
tags or category name from ID we can

2780
02:13:35,670 --> 02:13:41,369
start by just asking what's the nun

2781
02:13:38,600 --> 02:13:43,890
version because that's what we will

2782
02:13:41,369 --> 02:13:46,939
assume and then in here we would say oh

2783
02:13:43,890 --> 02:13:50,820
the category actually comes out of this

2784
02:13:46,939 --> 02:13:52,739
so if we find the tag that has that

2785
02:13:50,819 --> 02:13:55,710
particular thing in it we'll go ahead

2786
02:13:52,739 --> 02:13:59,189
and convert it right so the way we want

2787
02:13:55,710 --> 02:14:05,189
to do that is to say if the tag type in

2788
02:13:59,189 --> 02:14:08,939
this particular case right happens to be

2789
02:14:05,189 --> 02:14:12,299
equal to tag basic category then we can

2790
02:14:08,939 --> 02:14:15,269
do this which is to say we will convert

2791
02:14:12,300 --> 02:14:17,159
the value of the tag into a basic

2792
02:14:15,270 --> 02:14:19,470
category and look up whatever that

2793
02:14:17,159 --> 02:14:23,579
happens to be we will then assume that

2794
02:14:19,470 --> 02:14:27,270
that is our new category string right so

2795
02:14:23,579 --> 02:14:30,180
I mean here we say the asset index what

2796
02:14:27,270 --> 02:14:33,750
we probably want to do then is say what

2797
02:14:30,180 --> 02:14:42,060
type it is I guess so we would say

2798
02:14:33,750 --> 02:14:46,140
something like category count category

2799
02:14:42,060 --> 02:14:50,030
data and then I think we're good to go

2800
02:14:46,140 --> 02:14:50,030
oops no commas

2801
02:14:53,560 --> 02:14:57,370
got about those commas

2802
02:15:07,158 --> 02:15:12,198
why can't we convert between those

2803
02:15:13,519 --> 02:15:19,260
that's really dumb like that's how you

2804
02:15:18,090 --> 02:15:21,328
would convert between those two things

2805
02:15:19,260 --> 02:15:23,340
how do you not know how to convert

2806
02:15:21,328 --> 02:15:24,918
between a floating-point value and an

2807
02:15:23,340 --> 02:15:28,439
integer

2808
02:15:24,918 --> 02:15:31,319
thanks C++ for warnings that are

2809
02:15:28,439 --> 02:15:34,168
completely useless all right so now if I

2810
02:15:31,319 --> 02:15:36,719
redo these dumps like if I read you that

2811
02:15:34,168 --> 02:15:39,208
base game dump when I'm hoping is that

2812
02:15:36,719 --> 02:15:41,698
if I look at the assets now as a list

2813
02:15:39,208 --> 02:15:43,559
it'll tell me yeah like right off the

2814
02:15:41,698 --> 02:15:47,728
bat right I can see what all of these

2815
02:15:43,559 --> 02:15:49,288
are and so looking through those you

2816
02:15:47,729 --> 02:15:51,059
know it's pretty clear that there's

2817
02:15:49,288 --> 02:15:52,859
nothing with an asset type of none in

2818
02:15:51,059 --> 02:15:54,269
here right and that's all I wanted was

2819
02:15:52,859 --> 02:15:57,238
to get to the point where that was

2820
02:15:54,269 --> 02:16:02,280
easier to see so let's go ahead and read

2821
02:15:57,238 --> 02:16:06,089
dump the intro cutscene as well so well

2822
02:16:02,279 --> 02:16:08,488
in the test fonts there we go so now if

2823
02:16:06,090 --> 02:16:12,779
I do tab view on let's say the test

2824
02:16:08,488 --> 02:16:22,618
fonts v2 text oops

2825
02:16:12,779 --> 02:16:27,139
w bonus pack so all of these have fought

2826
02:16:22,618 --> 02:16:32,909
glyph right so all of those are

2827
02:16:27,139 --> 02:16:36,689
correctly being loaded as well so the

2828
02:16:32,909 --> 02:16:41,988
last one that could be a problem it's

2829
02:16:36,689 --> 02:16:47,449
this one see what this has all right so

2830
02:16:41,988 --> 02:16:47,448
you know we've clearly found our culprit

2831
02:16:48,769 --> 02:16:58,579
the intro cutscene HHA is just complete

2832
02:16:52,409 --> 02:16:58,579
garbage so we've got a problem

2833
02:17:03,349 --> 02:17:15,659
so it looks like we we have it all it

2834
02:17:12,239 --> 02:17:19,769
looks like we either corrupted this file

2835
02:17:15,659 --> 02:17:22,920
at some point or it's just broken when

2836
02:17:19,769 --> 02:17:24,809
we import plates since all of these

2837
02:17:22,920 --> 02:17:26,818
things are plates I'm guessing what

2838
02:17:24,808 --> 02:17:30,349
happened is it got corrupted at some

2839
02:17:26,818 --> 02:17:33,959
point like it rewrote an asset array

2840
02:17:30,349 --> 02:17:36,389
like incorrectly or something I'm not

2841
02:17:33,959 --> 02:17:39,478
entirely sure but what I do want to do

2842
02:17:36,388 --> 02:17:43,079
is I so let's let's actually push

2843
02:17:39,478 --> 02:17:44,879
forward a little bit on this let's go

2844
02:17:43,079 --> 02:17:49,260
ahead and run this again with the with

2845
02:17:44,879 --> 02:17:53,759
the plates deleted so I'm gonna you know

2846
02:17:49,260 --> 02:17:58,530
I guess make dirt temp move intro

2847
02:17:53,760 --> 02:18:01,260
cutscene that star to temp and so we put

2848
02:17:58,530 --> 02:18:03,420
away that intro cutscene file and now

2849
02:18:01,260 --> 02:18:06,389
I'm gonna run and by the way this should

2850
02:18:03,420 --> 02:18:11,609
never hit now I'm gonna run this again

2851
02:18:06,388 --> 02:18:15,388
and this should reimburse to the intro

2852
02:18:11,609 --> 02:18:19,200
cutscene HHA and what I want to do is

2853
02:18:15,388 --> 02:18:25,438
after that intro cutscene has like been

2854
02:18:19,200 --> 02:18:28,790
saved I I want to then inspect what it

2855
02:18:25,439 --> 02:18:28,790
looks like right

2856
02:18:33,250 --> 02:18:37,340
this is gonna take a while because this

2857
02:18:35,030 --> 02:18:42,489
is the debug build so all of our

2858
02:18:37,340 --> 02:18:42,489
importing will be very very slow right

2859
02:18:45,968 --> 02:18:53,259
and then we can Reem we can export that

2860
02:18:50,239 --> 02:18:53,260
text file and see what's up

2861
02:19:14,030 --> 02:19:18,920
this may take a while probably should

2862
02:19:16,909 --> 02:19:24,099
have compiled and release mood for this

2863
02:19:18,920 --> 02:19:24,099
but that's almost done

2864
02:19:39,109 --> 02:19:42,989
remember how big this file was maybe

2865
02:19:41,340 --> 02:19:48,269
when I said almost done that was a total

2866
02:19:42,989 --> 02:19:51,629
of total lie what was it 300 Meg file

2867
02:19:48,269 --> 02:19:54,389
I'll say it's ready to make file you

2868
02:19:51,629 --> 02:19:56,849
know it's our intro cutscene assets

2869
02:19:54,389 --> 02:19:58,318
uncompressed or just slightly slightly

2870
02:19:56,850 --> 02:20:01,670
smaller than like you know the

2871
02:19:58,318 --> 02:20:01,670
executable for Unreal Engine

2872
02:20:43,520 --> 02:20:49,079
all right so that's gotta be almost done

2873
02:20:45,989 --> 02:20:51,750
right I mean I think it was only in the

2874
02:20:49,079 --> 02:20:54,239
300 Meg range for all the intro cutscene

2875
02:20:51,750 --> 02:20:55,978
stuff I think well I guess we know how

2876
02:20:54,239 --> 02:20:56,340
big it was right it was in the tenth oh

2877
02:20:55,978 --> 02:20:59,219
yeah

2878
02:20:56,340 --> 02:21:00,960
343 so it shouldn't be much bigger than

2879
02:20:59,219 --> 02:21:01,920
that it will now potentially add a

2880
02:21:00,959 --> 02:21:05,159
little bit more in it because it's got

2881
02:21:01,920 --> 02:21:20,370
the sound data but that should be I

2882
02:21:05,159 --> 02:21:23,850
think it and then off it goes right so

2883
02:21:20,370 --> 02:21:27,420
it looks like that's it so let's take a

2884
02:21:23,850 --> 02:21:32,069
look at what that actually wrote out in

2885
02:21:27,420 --> 02:21:35,000
terms of of information in the HHA I'm

2886
02:21:32,069 --> 02:21:35,000
gonna do a

2887
02:21:35,370 --> 02:21:44,521
rewrite of the intro cutscene text file

2888
02:21:39,750 --> 02:21:44,521
and then we're going to reload it here

2889
02:21:54,899 --> 02:22:07,840
so that's correct

2890
02:22:01,979 --> 02:22:13,809
sort of yes so that is exactly what we

2891
02:22:07,840 --> 02:22:16,210
would expect to see all of these are

2892
02:22:13,809 --> 02:22:17,889
properly now labeled as plates all of

2893
02:22:16,209 --> 02:22:19,299
these are labeled as none and the

2894
02:22:17,889 --> 02:22:21,819
reasons they're labeled as none is

2895
02:22:19,299 --> 02:22:27,309
because they are like chained audio

2896
02:22:21,819 --> 02:22:30,279
right so they're not supposed to get

2897
02:22:27,309 --> 02:22:33,069
entered into any list if they're just a

2898
02:22:30,280 --> 02:22:37,530
chain of this audio now one could argue

2899
02:22:33,069 --> 02:22:42,430
that we want to label these better like

2900
02:22:37,530 --> 02:22:46,300
you know it kind of is lamed that these

2901
02:22:42,430 --> 02:22:47,620
are not really identified anything other

2902
02:22:46,299 --> 02:22:51,459
than the fact that they are a chain

2903
02:22:47,620 --> 02:22:54,390
sound like maybe they should have some

2904
02:22:51,459 --> 02:22:56,639
kind of annotation on them I don't know

2905
02:22:54,389 --> 02:23:03,039
what we want to do about that that's

2906
02:22:56,639 --> 02:23:04,389
that's a tough call I'm gonna leave it

2907
02:23:03,040 --> 02:23:05,680
like that for now but you know in the

2908
02:23:04,389 --> 02:23:10,199
future we may want to do something about

2909
02:23:05,680 --> 02:23:15,010
that I'm hoping now then if we were to

2910
02:23:10,200 --> 02:23:17,350
close this out I'm hoping that now if we

2911
02:23:15,010 --> 02:23:19,920
were to rerun this we would not have the

2912
02:23:17,350 --> 02:23:22,569
bug that we had before

2913
02:23:19,920 --> 02:23:25,420
well I guess we will get this because

2914
02:23:22,569 --> 02:23:28,869
these things are rightfully not added to

2915
02:23:25,420 --> 02:23:32,739
any insertion as far as an asset type

2916
02:23:28,870 --> 02:23:36,390
area is concerned but I'm hoping that we

2917
02:23:32,739 --> 02:23:38,709
wouldn't have that plate export conflict

2918
02:23:36,389 --> 02:23:41,170
because that looked like some kind of a

2919
02:23:38,709 --> 02:23:43,659
bug with the tag array and it does look

2920
02:23:41,170 --> 02:23:46,149
like we don't so I'm gonna call that

2921
02:23:43,659 --> 02:23:48,670
done for now this is sort of a standing

2922
02:23:46,149 --> 02:23:51,059
issue what should we do with this and I

2923
02:23:48,670 --> 02:23:51,059
don't know

2924
02:23:57,149 --> 02:24:03,220
since these types are contiguous the

2925
02:23:59,890 --> 02:24:07,319
dump could just know that right if

2926
02:24:03,220 --> 02:24:07,319
chained if you have a chain sound

2927
02:24:20,690 --> 02:24:32,280
I'm kind of interested in what this how

2928
02:24:26,011 --> 02:24:40,380
we're writing that out like what is that

2929
02:24:32,280 --> 02:24:42,659
74 680 95 x2 did so do we actually write

2930
02:24:40,379 --> 02:24:45,659
the entire sample count out and then the

2931
02:24:42,659 --> 02:24:47,459
data chunk is just smaller that's pretty

2932
02:24:45,659 --> 02:24:50,190
interesting I didn't know we were doing

2933
02:24:47,459 --> 02:24:52,529
that and I also don't know is that what

2934
02:24:50,190 --> 02:24:55,771
we should be doing like should the

2935
02:24:52,530 --> 02:24:59,730
sounds just just to show you what that

2936
02:24:55,771 --> 02:25:02,011
is right inside the file format where we

2937
02:24:59,729 --> 02:25:05,399
write out the sounds there's a sample

2938
02:25:02,011 --> 02:25:08,819
count a channel count and a chain piece

2939
02:25:05,399 --> 02:25:10,500
of chain information there right now you

2940
02:25:08,819 --> 02:25:13,739
don't need to know the sample count

2941
02:25:10,500 --> 02:25:15,841
because the data size right the the

2942
02:25:13,739 --> 02:25:18,931
thing that actually says in here how big

2943
02:25:15,841 --> 02:25:22,890
the data is tells you what you need to

2944
02:25:18,931 --> 02:25:25,980
know about the sound so these two pieces

2945
02:25:22,890 --> 02:25:30,060
of information are actually completely

2946
02:25:25,979 --> 02:25:32,399
useless and don't mean anything right in

2947
02:25:30,060 --> 02:25:35,399
fact the channel count is actually just

2948
02:25:32,399 --> 02:25:37,350
a lie because there aren't there are non

2949
02:25:35,399 --> 02:25:39,539
we don't actually bother with

2950
02:25:37,351 --> 02:25:42,750
multi-channel sounds anymore we split

2951
02:25:39,540 --> 02:25:44,551
them into separate assets so we could

2952
02:25:42,750 --> 02:25:49,220
literally remove both of those things

2953
02:25:44,550 --> 02:25:49,220
from the sound footprint and be fine

2954
02:25:50,239 --> 02:25:57,250
we just don't at the moment right

2955
02:25:54,159 --> 02:25:57,250
[Music]

2956
02:25:59,601 --> 02:26:03,319
so I don't really know what we want to

2957
02:26:01,340 --> 02:26:05,030
do there I don't know maybe makes sense

2958
02:26:03,319 --> 02:26:06,500
to store that sample count redundantly

2959
02:26:05,030 --> 02:26:09,380
just so we can look and see well how

2960
02:26:06,500 --> 02:26:11,450
long is this thing gonna play for so we

2961
02:26:09,379 --> 02:26:13,729
don't have to chase the chain to know

2962
02:26:11,450 --> 02:26:17,200
how long it would be in total I'm gonna

2963
02:26:13,729 --> 02:26:23,569
say that let's leave it this way for now

2964
02:26:17,200 --> 02:26:24,801
and that channel count as well because

2965
02:26:23,569 --> 02:26:25,940
that would let you know how many there

2966
02:26:24,800 --> 02:26:28,000
are so I'm gonna say like we

2967
02:26:25,940 --> 02:26:31,511
accidentally did the right thing there

2968
02:26:28,000 --> 02:26:34,729
and I'm just gonna say that's fine

2969
02:26:31,511 --> 02:27:00,771
moving forward I might document this

2970
02:26:34,729 --> 02:27:04,100
though like so really this is not true

2971
02:27:00,771 --> 02:27:06,771
anymore this is the data and we're just

2972
02:27:04,101 --> 02:27:09,110
saying that that isn't you know you

2973
02:27:06,771 --> 02:27:18,351
don't you don't get to to really buy

2974
02:27:09,110 --> 02:27:20,120
that so so I think that's fine that

2975
02:27:18,351 --> 02:27:24,141
means we're actually gonna use that full

2976
02:27:20,120 --> 02:27:27,311
u-32 this is pointless definitely

2977
02:27:24,140 --> 02:27:29,810
doesn't need to do that I guess so I

2978
02:27:27,310 --> 02:27:33,619
should maybe was premature if we just

2979
02:27:29,810 --> 02:27:40,720
apply this to do just to the stuff below

2980
02:27:33,620 --> 02:27:45,551
it like this then it's still accurate

2981
02:27:40,720 --> 02:27:54,170
I'm gonna go ahead and say that's mine

2982
02:27:45,550 --> 02:28:01,069
let me do this and see if we can still

2983
02:27:54,170 --> 02:28:04,761
run so I think we're okay now looks like

2984
02:28:01,069 --> 02:28:06,879
we got rid of that issue I'm hoping that

2985
02:28:04,761 --> 02:28:09,051
this will now work for sound importing

2986
02:28:06,879 --> 02:28:11,409
but we still probably have a little bit

2987
02:28:09,050 --> 02:28:13,319
of debugging to do later however I think

2988
02:28:11,409 --> 02:28:15,181
we are now properly

2989
02:28:13,319 --> 02:28:18,409
implementing streaming sounds in the

2990
02:28:15,181 --> 02:28:20,790
asset import and we should be good to go

2991
02:28:18,409 --> 02:28:23,190
alright we'll go to a brief Q&amp;A but I

2992
02:28:20,790 --> 02:28:33,380
think that's everything let me go ahead

2993
02:28:23,190 --> 02:28:33,380
and there we go

2994
02:28:43,690 --> 02:28:48,489
I forget the sequel no it doesn't

2995
02:28:46,690 --> 02:28:51,210
support that fly it only gets supports

2996
02:28:48,489 --> 02:28:54,449
you know the high-powered hermeneutics

2997
02:28:51,209 --> 02:28:54,449
graph traversal

2998
02:29:20,790 --> 02:29:23,870
any cues

2999
02:29:29,228 --> 02:29:34,429
so interesting enough twitch says we

3000
02:29:31,969 --> 02:29:37,788
have 90 out of a hundred and twenty five

3001
02:29:34,430 --> 02:29:40,549
sub points but I don't actually know

3002
02:29:37,789 --> 02:29:44,689
what we get if we have a hundred and

3003
02:29:40,549 --> 02:29:47,270
twenty five sub points they never really

3004
02:29:44,689 --> 02:29:52,279
make it clear like what you get for

3005
02:29:47,270 --> 02:29:55,668
getting more points is it just more

3006
02:29:52,279 --> 02:29:59,319
emotes okay so it looks like we could

3007
02:29:55,668 --> 02:29:59,318
add like a lot more emotes now

3008
02:30:08,318 --> 02:30:18,939
wait okay hold on I get 125 subscriber

3009
02:30:13,818 --> 02:30:21,859
points and you get one new emote slot

3010
02:30:18,939 --> 02:30:24,859
but we've got so many there's like one

3011
02:30:21,859 --> 02:30:29,770
two three four five six more emote slots

3012
02:30:24,859 --> 02:30:29,770
that we can fill out right

3013
02:30:47,001 --> 02:30:52,121
I just do not understand

3014
02:31:20,799 --> 02:31:29,009
I will I will forever be confused by the

3015
02:31:24,699 --> 02:31:29,010
twitch email stuff

3016
02:32:17,590 --> 02:32:21,250
all right so we have a couple of

3017
02:32:18,850 --> 02:32:23,050
questions now while I was looking to

3018
02:32:21,250 --> 02:32:24,578
figure out how the twitch emotes work I

3019
02:32:23,049 --> 02:32:27,459
think this means we can add more twitch

3020
02:32:24,578 --> 02:32:31,930
emotes but I don't really know if that's

3021
02:32:27,459 --> 02:32:33,578
true the questions were you never went

3022
02:32:31,930 --> 02:32:35,170
to university seem to be but you seem to

3023
02:32:33,578 --> 02:32:43,719
be very literate in mathematics how do

3024
02:32:35,170 --> 02:32:45,158
you get to this level so I guess what I

3025
02:32:43,719 --> 02:32:49,139
would say is I'm not that literate in

3026
02:32:45,158 --> 02:32:51,760
mathematics I do think that going to

3027
02:32:49,139 --> 02:32:57,459
university is somewhat helpful for

3028
02:32:51,760 --> 02:33:03,389
mathematics because it you know you kind

3029
02:32:57,459 --> 02:33:06,669
of have a forced clearly laid out set of

3030
02:33:03,389 --> 02:33:11,198
time to go through all of you know

3031
02:33:06,670 --> 02:33:14,619
several sets of math I guess what I'd

3032
02:33:11,199 --> 02:33:16,359
say is the way I compensate for not

3033
02:33:14,619 --> 02:33:17,949
having gone through that is I just did a

3034
02:33:16,359 --> 02:33:24,250
lot of that on my own so I would just

3035
02:33:17,949 --> 02:33:26,439
work my way through books I as necessary

3036
02:33:24,250 --> 02:33:28,389
so you know I learned in turn I learned

3037
02:33:26,439 --> 02:33:34,350
interval arithmetic from a book I

3038
02:33:28,389 --> 02:33:34,349
learned linear algebra from a book I

3039
02:33:36,478 --> 02:33:44,188
learned matrix like sparse matrix

3040
02:33:40,809 --> 02:33:46,539
analysis and stuff like that from a book

3041
02:33:44,189 --> 02:33:49,210
but like I've never really worked

3042
02:33:46,540 --> 02:33:53,649
through like hard core calculus stuff

3043
02:33:49,209 --> 02:33:58,358
and so my calc is very weak like you

3044
02:33:53,648 --> 02:34:00,519
know I understand conceptually what like

3045
02:33:58,359 --> 02:34:01,270
you know Stokes theorem or greens

3046
02:34:00,520 --> 02:34:05,770
theorem

3047
02:34:01,270 --> 02:34:09,220
do I understand conceptually what

3048
02:34:05,770 --> 02:34:12,130
calculus of variations does but I can't

3049
02:34:09,219 --> 02:34:13,809
really do it right

3050
02:34:12,129 --> 02:34:16,959
I understand partial differential

3051
02:34:13,809 --> 02:34:19,209
equations to a certain extent but like

3052
02:34:16,959 --> 02:34:23,618
my ability to actually work with them is

3053
02:34:19,209 --> 02:34:28,089
poor the same would be true of like

3054
02:34:23,619 --> 02:34:29,790
ordinary differential equations and so a

3055
02:34:28,090 --> 02:34:30,890
lot of those things are just a case of

3056
02:34:29,790 --> 02:34:33,081
spent

3057
02:34:30,890 --> 02:34:34,489
the time till like actually just work

3058
02:34:33,081 --> 02:34:36,140
through them they're like everything

3059
02:34:34,489 --> 02:34:37,581
else you know you just have to practice

3060
02:34:36,140 --> 02:34:39,229
with them and start to put them into

3061
02:34:37,581 --> 02:34:45,649
your head in a way that makes sense to

3062
02:34:39,229 --> 02:34:47,689
you and I don't really have any advice

3063
02:34:45,649 --> 02:34:49,581
about how to do that a lot of math books

3064
02:34:47,690 --> 02:34:51,591
are terrible most math books are

3065
02:34:49,581 --> 02:34:54,501
terrible so finding the right math book

3066
02:34:51,591 --> 02:34:57,470
can be a big help but other than that

3067
02:34:54,501 --> 02:35:01,341
it's really just setting aside the time

3068
02:34:57,470 --> 02:35:04,630
to actually study and work through it on

3069
02:35:01,341 --> 02:35:08,181
your own try to pick some code to write

3070
02:35:04,630 --> 02:35:11,720
also so you get used to like applying a

3071
02:35:08,181 --> 02:35:13,341
piece that you know if you take

3072
02:35:11,720 --> 02:35:14,989
something like stokes theorem or greens

3073
02:35:13,341 --> 02:35:16,791
theorem or ordinary differential

3074
02:35:14,989 --> 02:35:19,729
equations or partial differential

3075
02:35:16,790 --> 02:35:22,300
equations there's all sorts of code you

3076
02:35:19,729 --> 02:35:26,270
could write that use those sorts of

3077
02:35:22,300 --> 02:35:29,810
things and so you can easily come up

3078
02:35:26,271 --> 02:35:33,171
with little exercises to do that would

3079
02:35:29,810 --> 02:35:34,671
help you internalize what you're

3080
02:35:33,171 --> 02:35:36,950
actually doing like how you actually

3081
02:35:34,671 --> 02:35:40,280
apply those pieces of math to something

3082
02:35:36,950 --> 02:35:41,690
useful and so you you will make like a

3083
02:35:40,280 --> 02:35:43,551
stronger connection to what they

3084
02:35:41,690 --> 02:35:46,551
actually do as opposed to just the

3085
02:35:43,550 --> 02:35:49,810
theoretical I know it manipulates the

3086
02:35:46,550 --> 02:35:54,921
symbols in this particular way right so

3087
02:35:49,810 --> 02:35:56,870
what I would say is you know just spend

3088
02:35:54,921 --> 02:35:59,060
the time that's that's really all it is

3089
02:35:56,870 --> 02:36:00,409
and beyond that try to get good

3090
02:35:59,060 --> 02:36:04,011
recommendations for books that are

3091
02:36:00,409 --> 02:36:07,341
actually good that's really all I can

3092
02:36:04,011 --> 02:36:08,659
recommend it's really spending the time

3093
02:36:07,341 --> 02:36:13,431
it's the same as programming it's

3094
02:36:08,659 --> 02:36:16,610
spending the time simplices I got a call

3095
02:36:13,431 --> 02:36:19,131
from Gary Walsh Selina Meyers bagman

3096
02:36:16,610 --> 02:36:20,659
while you were unpacking the backpack he

3097
02:36:19,130 --> 02:36:23,689
said he's jealous and wants to compare

3098
02:36:20,659 --> 02:36:26,229
bag layouts I have no idea who those

3099
02:36:23,690 --> 02:36:26,230
people are

3100
02:36:30,309 --> 02:36:34,278
what are your thoughts on Cody

3101
02:36:32,119 --> 02:36:36,498
introspection we're adding metadata to

3102
02:36:34,279 --> 02:36:38,359
things like strux useful or you have

3103
02:36:36,498 --> 02:36:40,009
another bad obturate idea no I think

3104
02:36:38,359 --> 02:36:41,600
they're very useful I don't think they

3105
02:36:40,009 --> 02:36:45,039
have anything to do with object-oriented

3106
02:36:41,600 --> 02:36:45,039
programming I think they're just good

3107
02:36:45,968 --> 02:36:52,638
there's nothing magic about a struct or

3108
02:36:48,918 --> 02:36:55,369
a class it's just a way of assigning a

3109
02:36:52,638 --> 02:36:58,309
name to a particular layout of data in

3110
02:36:55,369 --> 02:37:02,739
memory there's no reason why you

3111
02:36:58,309 --> 02:37:05,689
shouldn't be able to access that layout

3112
02:37:02,738 --> 02:37:10,718
conceptually in your code the fact that

3113
02:37:05,689 --> 02:37:10,719
C++ doesn't allow this is terrible

3114
02:37:11,228 --> 02:37:18,108
they're finally adding that in like C++

3115
02:37:15,968 --> 02:37:20,748
2037 or whatever they're up to at this

3116
02:37:18,109 --> 02:37:23,988
point or at least my understanding is

3117
02:37:20,748 --> 02:37:26,088
it'll probably be complete crap like all

3118
02:37:23,988 --> 02:37:28,189
of their features are but like at least

3119
02:37:26,088 --> 02:37:33,109
they're adding some crappy version I

3120
02:37:28,189 --> 02:37:35,168
guess I am 100% in favor of languages

3121
02:37:33,109 --> 02:37:42,078
that actually do this well though it's

3122
02:37:35,168 --> 02:37:43,218
very good I guess is what I'd say it has

3123
02:37:42,078 --> 02:37:45,668
nothing to do with object-oriented

3124
02:37:43,218 --> 02:37:45,668
programming

3125
02:37:49,869 --> 02:37:56,470
favorite code designed learning

3126
02:37:51,340 --> 02:37:58,090
resources I don't know would you use

3127
02:37:56,469 --> 02:37:59,948
your from scratch little approach for

3128
02:37:58,090 --> 02:38:01,648
machine learning or just use a library

3129
02:37:59,949 --> 02:38:05,290
like tensorflow

3130
02:38:01,648 --> 02:38:07,118
I really couldn't tell you because I've

3131
02:38:05,290 --> 02:38:13,270
never looked at machine learning

3132
02:38:07,119 --> 02:38:15,489
libraries before some of the problems

3133
02:38:13,270 --> 02:38:17,560
that you'll have with like from scratch

3134
02:38:15,488 --> 02:38:21,430
in any domain where you're probably

3135
02:38:17,559 --> 02:38:25,180
talking about using GPU or other HPC

3136
02:38:21,430 --> 02:38:27,729
stuff is just that you're going to need

3137
02:38:25,180 --> 02:38:34,328
some way to access the custom hardware

3138
02:38:27,728 --> 02:38:36,789
for it and so unlike situations where I

3139
02:38:34,328 --> 02:38:40,869
would recommend learning to do things at

3140
02:38:36,790 --> 02:38:42,909
a low level from the start there are

3141
02:38:40,869 --> 02:38:44,260
some domains and special purpose

3142
02:38:42,908 --> 02:38:46,689
hardware programming is unfortunately

3143
02:38:44,260 --> 02:38:49,210
increasingly one of them where that's

3144
02:38:46,689 --> 02:38:51,460
really not an option like there's no way

3145
02:38:49,209 --> 02:38:54,129
to directly program an nvidia card it

3146
02:38:51,459 --> 02:38:56,349
just simply doesn't exist so you are

3147
02:38:54,129 --> 02:39:01,028
forced to use some kind of a library

3148
02:38:56,350 --> 02:39:02,949
right in order to access it and so you

3149
02:39:01,029 --> 02:39:04,899
know while I would say that

3150
02:39:02,949 --> 02:39:06,850
understanding what's going on is still

3151
02:39:04,898 --> 02:39:08,709
crucial just like it is everywhere even

3152
02:39:06,850 --> 02:39:11,140
when you use a library and I would

3153
02:39:08,709 --> 02:39:13,599
encourage you to figure out how machine

3154
02:39:11,139 --> 02:39:14,858
learning is working at a lower level for

3155
02:39:13,600 --> 02:39:18,640
whatever the particular thing is that

3156
02:39:14,859 --> 02:39:19,840
you're working on using a library

3157
02:39:18,639 --> 02:39:22,090
whether it's tensorflow

3158
02:39:19,840 --> 02:39:25,299
or something else may be unavoidable

3159
02:39:22,090 --> 02:39:28,328
because you mainly I mean Nvidia and

3160
02:39:25,299 --> 02:39:30,608
Apple and various other hardware

3161
02:39:28,328 --> 02:39:38,109
manufacturers put specific machine

3162
02:39:30,609 --> 02:39:42,760
learning what I want to put this part of

3163
02:39:38,109 --> 02:39:47,800
the die is dedicated to you know doing a

3164
02:39:42,760 --> 02:39:49,510
crap-ton of large low precision matrix

3165
02:39:47,799 --> 02:39:54,549
multiplies for lack of a better term

3166
02:39:49,510 --> 02:39:57,578
right which are specifically for doing

3167
02:39:54,549 --> 02:40:00,728
things like machine learning via neural

3168
02:39:57,578 --> 02:40:02,529
networks and so if you're trying to

3169
02:40:00,728 --> 02:40:03,099
target that sort of thing you kind of

3170
02:40:02,529 --> 02:40:06,130
have to

3171
02:40:03,100 --> 02:40:10,689
use some API that allows you to access

3172
02:40:06,129 --> 02:40:12,158
that stuff and so maybe tensorflow is a

3173
02:40:10,689 --> 02:40:15,579
good choice I have no idea I've never

3174
02:40:12,158 --> 02:40:18,158
even looked at it but you know if you're

3175
02:40:15,579 --> 02:40:20,408
doing stuff that requires special

3176
02:40:18,158 --> 02:40:21,760
purpose hardware you oftentimes don't

3177
02:40:20,408 --> 02:40:24,010
have the option to programming it

3178
02:40:21,760 --> 02:40:26,079
yourself so it's not really the same

3179
02:40:24,010 --> 02:40:27,430
kind of question as it would be for

3180
02:40:26,079 --> 02:40:30,068
something like what we do in handmade

3181
02:40:27,430 --> 02:40:32,170
Hiro and you can see us doing exactly

3182
02:40:30,068 --> 02:40:35,260
this on handmade Hiro - right we have to

3183
02:40:32,170 --> 02:40:37,840
use for example shaders to program the

3184
02:40:35,260 --> 02:40:40,478
3d hardware we don't have the ability to

3185
02:40:37,840 --> 02:40:44,290
program it at any real lower level than

3186
02:40:40,478 --> 02:40:46,988
that you know you could try and write in

3187
02:40:44,290 --> 02:40:48,729
like pseudo assembly but even that's not

3188
02:40:46,988 --> 02:40:51,129
really the assembly language of the

3189
02:40:48,728 --> 02:40:52,929
shader right it's of the shading

3190
02:40:51,129 --> 02:40:56,889
hardware it's it's actually sort of a

3191
02:40:52,930 --> 02:40:58,389
translation layer so you know that's

3192
02:40:56,889 --> 02:41:08,978
just the unfortunate world we live and I

3193
02:40:58,389 --> 02:41:10,750
wish we didn't but you know I also sorry

3194
02:41:08,978 --> 02:41:13,539
I also can ask answer any questions

3195
02:41:10,750 --> 02:41:18,728
about dear I'm Juliet I've never used it

3196
02:41:13,540 --> 02:41:20,949
you could ask George remedy BG is using

3197
02:41:18,728 --> 02:41:28,750
it he might have an opinion

3198
02:41:20,949 --> 02:41:33,040
so X 13 pixels on the chat he he might

3199
02:41:28,750 --> 02:41:34,119
have something to say about that and and

3200
02:41:33,040 --> 02:41:35,229
no I don't really have any book

3201
02:41:34,119 --> 02:41:37,060
recommendations for programming your

3202
02:41:35,228 --> 02:41:42,398
math these days cuz I'm kind of wilfully

3203
02:41:37,059 --> 02:41:47,920
out-of-date you know the math books that

3204
02:41:42,398 --> 02:41:52,750
I learn math from and the programming

3205
02:41:47,920 --> 02:41:54,579
books I read as a child are you know

3206
02:41:52,750 --> 02:41:58,420
probably not the right ones to I've got

3207
02:41:54,579 --> 02:42:00,189
I hoped hope they're not the like I hope

3208
02:41:58,420 --> 02:42:03,309
there's better resources now I guess is

3209
02:42:00,189 --> 02:42:06,609
what I'm saying if really nothing better

3210
02:42:03,309 --> 02:42:08,408
than then the books I read is have been

3211
02:42:06,609 --> 02:42:11,068
written in the last thirty years that's

3212
02:42:08,408 --> 02:42:11,068
kind of sad

3213
02:42:14,478 --> 02:42:18,829
I guess I'm technically not an

3214
02:42:15,920 --> 02:42:20,600
exclusively C++ guy I guess I have used

3215
02:42:18,829 --> 02:42:22,579
a couple other languages although I

3216
02:42:20,600 --> 02:42:26,930
wouldn't really say that I've ever done

3217
02:42:22,579 --> 02:42:29,689
enough work in those languages well

3218
02:42:26,930 --> 02:42:36,489
that's not true so I wrote a fair bit of

3219
02:42:29,689 --> 02:42:42,200
PHP code for web development back in 20

3220
02:42:36,489 --> 02:42:47,389
like 2006 seven timeframe maybe maybe

3221
02:42:42,200 --> 02:42:49,040
eight somewhere on there it's a horrible

3222
02:42:47,389 --> 02:42:57,019
language don't ever use it I guess one

3223
02:42:49,040 --> 02:43:00,130
thing I had to say I don't think I've

3224
02:42:57,020 --> 02:43:04,040
really had much experience well Pascal I

3225
02:43:00,129 --> 02:43:10,969
used before before I did see and also

3226
02:43:04,040 --> 02:43:16,939
like basic and true basic I wrote a

3227
02:43:10,969 --> 02:43:20,299
significant amount of code and that's

3228
02:43:16,939 --> 02:43:21,050
about it I so I haven't ever used like

3229
02:43:20,299 --> 02:43:27,949
c-sharp

3230
02:43:21,049 --> 02:43:30,648
or Python try to think of any other

3231
02:43:27,950 --> 02:43:34,760
languages that come to mind Swift that

3232
02:43:30,648 --> 02:43:37,398
people have been using lately I've never

3233
02:43:34,760 --> 02:43:39,680
programmed a significant amount in those

3234
02:43:37,398 --> 02:43:41,689
languages not like I haven't done a

3235
02:43:39,680 --> 02:43:47,479
significant project like in those

3236
02:43:41,689 --> 02:43:51,280
languages so I'm not really in a

3237
02:43:47,478 --> 02:43:51,279
position to comment on them extensively

3238
02:43:51,340 --> 02:43:54,670
you know I'm saying

3239
02:43:59,520 --> 02:44:03,970
what's your favorite fairly new language

3240
02:44:02,440 --> 02:44:07,690
I don't really have one

3241
02:44:03,969 --> 02:44:09,760
because I haven't really used any you

3242
02:44:07,690 --> 02:44:13,239
know I haven't used fairly new money I

3243
02:44:09,760 --> 02:44:17,350
haven't used rust I haven't used ji yet

3244
02:44:13,239 --> 02:44:19,239
I don't know what other fairly new

3245
02:44:17,350 --> 02:44:21,640
languages there are that people will

3246
02:44:19,239 --> 02:44:24,850
Swift I guess I haven't used those

3247
02:44:21,639 --> 02:44:26,439
languages so I haven't yeah I can't pick

3248
02:44:24,850 --> 02:44:31,510
a favorite language because I have no

3249
02:44:26,440 --> 02:44:33,100
idea what they're like what's your

3250
02:44:31,510 --> 02:44:36,340
impression of Seattle after living there

3251
02:44:33,100 --> 02:44:40,450
for as long as you have I think it's not

3252
02:44:36,340 --> 02:44:43,960
like I I wouldn't live here now if I had

3253
02:44:40,450 --> 02:44:50,710
a choice like it's I quite liked it in

3254
02:44:43,959 --> 02:44:54,939
the in the 90s late 90s I moved here in

3255
02:44:50,709 --> 02:45:00,699
95 I would say probably even up through

3256
02:44:54,940 --> 02:45:02,860
like 2010 era I thought was quite nice

3257
02:45:00,700 --> 02:45:06,790
the past couple years it's really gone

3258
02:45:02,860 --> 02:45:12,480
downhill considerably it's a it's a very

3259
02:45:06,790 --> 02:45:15,310
poorly run City to say the very least

3260
02:45:12,479 --> 02:45:17,350
and you know some aspects are not

3261
02:45:15,309 --> 02:45:19,019
necessarily the city's fault some of

3262
02:45:17,350 --> 02:45:23,380
them maybe you could consider to be

3263
02:45:19,020 --> 02:45:26,710
federal problems but a fair bit of it's

3264
02:45:23,379 --> 02:45:32,529
just just cities city fault as well and

3265
02:45:26,709 --> 02:45:32,919
I would say yeah it's not a place to

3266
02:45:32,530 --> 02:45:35,920
move to

3267
02:45:32,920 --> 02:45:37,149
you know I I'd probably be gone by now

3268
02:45:35,920 --> 02:45:38,920
if I wasn't right in the middle of a

3269
02:45:37,149 --> 02:45:40,059
bunch of stuff and you know I don't want

3270
02:45:38,920 --> 02:45:42,520
to be spending a lot of money and stuff

3271
02:45:40,059 --> 02:45:43,689
like that but you know when I'm done

3272
02:45:42,520 --> 02:45:46,770
with projects I wouldn't be surprised if

3273
02:45:43,690 --> 02:45:46,770
I'm found out of here

3274
02:45:54,540 --> 02:46:04,930
come back to Boston uh yeah you know I

3275
02:45:59,049 --> 02:46:07,509
guess I I guess I could I haven't really

3276
02:46:04,930 --> 02:46:12,148
spent much time in Boston so I don't

3277
02:46:07,510 --> 02:46:12,148
really know what I would think of it I

3278
02:46:15,148 --> 02:46:19,209
I'm not you know one of the problems of

3279
02:46:17,590 --> 02:46:23,680
moving out of Washington State is like

3280
02:46:19,209 --> 02:46:24,969
we're a company you know and I feel like

3281
02:46:23,680 --> 02:46:27,120
that would mean we'd have to change like

3282
02:46:24,969 --> 02:46:29,108
accountants and stuff for tax filing

3283
02:46:27,120 --> 02:46:30,939
because I'm doubting that our

3284
02:46:29,109 --> 02:46:32,979
accountants here would file Maslak

3285
02:46:30,939 --> 02:46:36,790
Massachusetts has its own state income

3286
02:46:32,978 --> 02:46:38,139
tax I I don't know if there's a city

3287
02:46:36,790 --> 02:46:39,279
income tax in Boston but there's at

3288
02:46:38,139 --> 02:46:41,439
least a state income tax in

3289
02:46:39,279 --> 02:46:44,770
Massachusetts and you know they probably

3290
02:46:41,439 --> 02:46:50,139
don't work with that I would assume I

3291
02:46:44,770 --> 02:46:51,340
don't really know though if given a

3292
02:46:50,139 --> 02:46:53,590
virtually infinite budget

3293
02:46:51,340 --> 02:46:55,000
what would you dedicate your time to I

3294
02:46:53,590 --> 02:46:57,398
would probably doing basically what I'm

3295
02:46:55,000 --> 02:47:00,760
doing now you know I just would be a lot

3296
02:46:57,398 --> 02:47:03,000
less stressed all the time that makes

3297
02:47:00,760 --> 02:47:03,000
sense

3298
02:47:12,180 --> 02:47:21,770
so in savate just like can somebody

3299
02:47:16,139 --> 02:47:23,898
please clip a what in sohbat just said

3300
02:47:21,770 --> 02:47:28,729
that's amazing

3301
02:47:23,898 --> 02:47:28,728
in sohbat just said it's still valve

3302
02:47:32,510 --> 02:47:40,578
that's very very good that's very very

3303
02:47:38,879 --> 02:47:43,049
good

3304
02:47:40,578 --> 02:47:45,869
inside bodies is truly a national

3305
02:47:43,049 --> 02:47:47,488
treasure and I guess he's not really a

3306
02:47:45,869 --> 02:47:49,050
national treasure cuz I think he was

3307
02:47:47,488 --> 02:47:52,498
made outside of the u.s. he's an

3308
02:47:49,049 --> 02:47:55,259
international treasure might be the way

3309
02:47:52,498 --> 02:47:57,469
to say it no one ever says international

3310
02:47:55,260 --> 02:47:57,469
treasure

3311
02:48:04,091 --> 02:48:09,360
all right I think I've gotten through

3312
02:48:05,890 --> 02:48:09,359
all the questions probably it looks like

3313
02:48:14,190 --> 02:48:26,501
Victorian just in case you just kind of

3314
02:48:19,569 --> 02:48:28,989
quickly joined us here we switched to X

3315
02:48:26,501 --> 02:48:32,319
13 pixels debugger and it's working real

3316
02:48:28,989 --> 02:48:35,229
well you can actually find a link to it

3317
02:48:32,319 --> 02:48:38,909
in down below the twitch window there

3318
02:48:35,229 --> 02:48:45,220
it's remedy be GHI Oh

3319
02:48:38,909 --> 02:48:46,030
20 bucks and it is pretty darn good even

3320
02:48:45,220 --> 02:48:50,790
though it's just kind of getting started

3321
02:48:46,030 --> 02:48:53,021
it's on version 0.2 but you know it's

3322
02:48:50,790 --> 02:48:54,430
it's already giving Visual Studio run

3323
02:48:53,021 --> 02:48:56,320
for its money and I think pretty soon

3324
02:48:54,431 --> 02:48:57,610
it's gonna be kind of game over for

3325
02:48:56,319 --> 02:48:59,290
Visual Studio as a debugger which is

3326
02:48:57,610 --> 02:49:01,891
pretty awesome because I'm so sick and

3327
02:48:59,290 --> 02:49:01,890
tired of Visual Studio

3328
02:49:07,299 --> 02:49:10,568
all right

3329
02:49:17,459 --> 02:49:22,379
we don't need this right now

3330
02:49:24,270 --> 02:49:27,460
there we go

3331
02:49:25,689 --> 02:49:28,659
thank you everyone for joining me for

3332
02:49:27,459 --> 02:49:30,398
another episode of handmade hero it's a

3333
02:49:28,659 --> 02:49:31,989
pleasure coding with you as always if

3334
02:49:30,398 --> 02:49:33,760
you would like to follow along series at

3335
02:49:31,989 --> 02:49:35,469
home you always pre-order the game on

3336
02:49:33,760 --> 02:49:38,318
handmade here org and it comes with a

3337
02:49:35,469 --> 02:49:42,869
source code I so you can follow along

3338
02:49:38,318 --> 02:49:48,028
and do your own experiments we are

3339
02:49:42,870 --> 02:49:51,579
ostensibly done importing audio I mean

3340
02:49:48,029 --> 02:49:53,140
we don't really know but we went through

3341
02:49:51,579 --> 02:49:55,120
the code and it appears to do what I

3342
02:49:53,139 --> 02:49:58,510
wanted it to do so that means next week

3343
02:49:55,120 --> 02:50:02,050
we should be able to just put that into

3344
02:49:58,510 --> 02:50:03,279
actual use add some sound to the game of

3345
02:50:02,049 --> 02:50:04,478
course we don't really have many sounds

3346
02:50:03,279 --> 02:50:05,950
out of the game but we've got some tests

3347
02:50:04,478 --> 02:50:09,309
at least so we can at least verify that

3348
02:50:05,950 --> 02:50:10,899
those are working properly hey maybe

3349
02:50:09,309 --> 02:50:11,978
that means we should figure out where

3350
02:50:10,898 --> 02:50:14,648
we're gonna get some sounds for this

3351
02:50:11,978 --> 02:50:18,369
game that's sort of another issue whole

3352
02:50:14,648 --> 02:50:20,289
together but we'll take a look I'll be

3353
02:50:18,370 --> 02:50:23,560
back here next week to do exactly that

3354
02:50:20,290 --> 02:50:25,359
until then everyone have fun programming

3355
02:50:23,559 --> 02:50:28,350
and I'll see you on the Internet

3356
02:50:25,359 --> 02:50:28,350
take it easy to everybody

