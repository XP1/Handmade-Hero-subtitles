1
00:00:00,439 --> 00:00:08,460
okay welcome everyone to yet another

2
00:00:05,750 --> 00:00:09,718
tantalizing episode of handmade hero the

3
00:00:08,460 --> 00:00:13,860
show we could complete game live on

4
00:00:09,718 --> 00:00:17,339
stream I have to tell you that

5
00:00:13,859 --> 00:00:20,009
immediately after this dream ended on

6
00:00:17,339 --> 00:00:23,698
friday everyone wrote in to say that

7
00:00:20,010 --> 00:00:26,070
there was a typo in the code and so well

8
00:00:23,699 --> 00:00:28,529
we're not going to get a chance to watch

9
00:00:26,070 --> 00:00:30,510
me find the typo because basically you

10
00:00:28,528 --> 00:00:34,049
know it was it was a total spoiler alert

11
00:00:30,510 --> 00:00:35,670
situation I now I know that there's a

12
00:00:34,049 --> 00:00:37,949
typo in the code I don't have to go

13
00:00:35,670 --> 00:00:39,120
doing any debugging to find it so we're

14
00:00:37,950 --> 00:00:40,590
going to start off the episode today

15
00:00:39,119 --> 00:00:43,229
just magically knowing that there's a

16
00:00:40,590 --> 00:00:44,910
bug because literally everyone saw it I

17
00:00:43,229 --> 00:00:47,459
suppose that's one of the bonuses of

18
00:00:44,909 --> 00:00:49,378
doing programming on stream is yes your

19
00:00:47,460 --> 00:00:51,270
mental energy is diverted because you're

20
00:00:49,378 --> 00:00:53,189
talking all the time but you get this

21
00:00:51,270 --> 00:00:54,420
special bonus of everyone's looking at

22
00:00:53,189 --> 00:00:56,308
your code is your typing in so if there

23
00:00:54,420 --> 00:00:57,510
is an obvious mistake it's highly

24
00:00:56,308 --> 00:00:59,788
unlikely that it's going to go unnoticed

25
00:00:57,509 --> 00:01:01,948
by two thousand eyes or I don't know how

26
00:00:59,789 --> 00:01:07,200
many people let's I don't know how many

27
00:01:01,948 --> 00:01:10,319
people actually watched that episode

28
00:01:07,200 --> 00:01:14,460
already yeah so when you get that many

29
00:01:10,319 --> 00:01:16,819
eyes on it I suppose you you've got a

30
00:01:14,459 --> 00:01:19,798
pretty big pretty big bonus there

31
00:01:16,819 --> 00:01:21,059
alright so let's get started because

32
00:01:19,799 --> 00:01:23,189
really all we were going to do today

33
00:01:21,060 --> 00:01:24,540
anyways debug it so we've got one bug we

34
00:01:23,188 --> 00:01:26,879
know we can fix and then we can start

35
00:01:24,540 --> 00:01:28,920
taking a look at other bugs and if we

36
00:01:26,879 --> 00:01:30,798
run out of bugs to fix in the short term

37
00:01:28,920 --> 00:01:33,180
then obviously we have to move on to

38
00:01:30,799 --> 00:01:35,729
getting rid of the N squared part of our

39
00:01:33,180 --> 00:01:38,299
algorithm because that's going to cause

40
00:01:35,728 --> 00:01:42,810
us problems for you know obvious reasons

41
00:01:38,299 --> 00:01:46,590
anyway uh let's go ahead and open up

42
00:01:42,810 --> 00:01:48,509
here we are on day 3 07 so if you want

43
00:01:46,590 --> 00:01:51,000
follow along at home you want to impact

44
00:01:48,509 --> 00:01:54,569
day 306 is source code that's the source

45
00:01:51,000 --> 00:01:58,049
code state that we're starting with you

46
00:01:54,569 --> 00:02:00,000
can see let me just before I actually go

47
00:01:58,049 --> 00:02:04,020
show you what the typo is that people

48
00:02:00,000 --> 00:02:06,509
had reported which I you know it was

49
00:02:04,019 --> 00:02:09,299
sloppy of me to leave let's see where

50
00:02:06,509 --> 00:02:10,739
we're at here okay so it's a little bit

51
00:02:09,300 --> 00:02:12,629
hard to see here you can see there's a

52
00:02:10,739 --> 00:02:13,700
little bit of the rectangle problem but

53
00:02:12,628 --> 00:02:16,649
I

54
00:02:13,699 --> 00:02:18,659
the the problems a little bit more

55
00:02:16,650 --> 00:02:21,270
noticeable if I actually turn on let me

56
00:02:18,659 --> 00:02:22,919
just go back to the to the state that

57
00:02:21,270 --> 00:02:24,300
things were in before i started

58
00:02:22,919 --> 00:02:27,289
simplifying it down to look for the bug

59
00:02:24,300 --> 00:02:32,250
just so you can kind of get a feel for

60
00:02:27,289 --> 00:02:35,849
how bad the bug was or how bad the the

61
00:02:32,250 --> 00:02:38,430
sort was doing before we do any of these

62
00:02:35,849 --> 00:02:41,909
these bug fixes so you can count like a

63
00:02:38,430 --> 00:02:43,830
baseline if you will so all right so in

64
00:02:41,909 --> 00:02:46,469
at standard room we kind of removed all

65
00:02:43,830 --> 00:02:48,420
of the room tiles right we sort of it's

66
00:02:46,469 --> 00:02:50,849
zero it out this else clause so if I go

67
00:02:48,419 --> 00:02:52,679
ahead and didn't put that back in that

68
00:02:50,849 --> 00:02:56,519
will certainly add a ton of stuff back

69
00:02:52,680 --> 00:02:58,620
into the to the game so here is you know

70
00:02:56,520 --> 00:03:00,120
here's one rooms worth and you can

71
00:02:58,620 --> 00:03:01,920
already see that the room is sorted

72
00:03:00,120 --> 00:03:04,770
wrong so I'm going behind these things

73
00:03:01,919 --> 00:03:06,780
and and again we don't actually know in

74
00:03:04,770 --> 00:03:08,700
some cases how wrong the sword is

75
00:03:06,780 --> 00:03:10,710
because we're not feeding it exactly

76
00:03:08,699 --> 00:03:12,419
correct values yet so there are some

77
00:03:10,710 --> 00:03:13,830
cases with that but you can tell that

78
00:03:12,419 --> 00:03:16,739
you know it's already it's pretty bad

79
00:03:13,830 --> 00:03:19,350
right the trees are wrong in blah blah

80
00:03:16,740 --> 00:03:21,000
blah blah right so even with just one

81
00:03:19,349 --> 00:03:23,819
room nevermind a room stacked on top of

82
00:03:21,000 --> 00:03:26,270
it you can see a lot of problems okay so

83
00:03:23,819 --> 00:03:29,159
what was the typo well the typo was just

84
00:03:26,270 --> 00:03:31,560
that when we were in the render group

85
00:03:29,159 --> 00:03:35,129
code and I switched things from wrecked

86
00:03:31,560 --> 00:03:38,729
min max I forgot to switch the push

87
00:03:35,129 --> 00:03:40,469
wrecked recommend max right and you

88
00:03:38,729 --> 00:03:43,379
don't know if you remember back to the

89
00:03:40,469 --> 00:03:44,609
time when we did this but we were I had

90
00:03:43,379 --> 00:03:46,769
done it with referee max I was like oh

91
00:03:44,610 --> 00:03:48,660
we have a recommend in we should use

92
00:03:46,770 --> 00:03:50,939
that and I changed one of them but I

93
00:03:48,659 --> 00:03:54,030
didn't change the other one so we still

94
00:03:50,939 --> 00:03:55,289
have a recommend dim here i recommend

95
00:03:54,030 --> 00:03:58,099
max where we should have had a recommend

96
00:03:55,289 --> 00:04:01,530
dim and so obviously that makes the

97
00:03:58,099 --> 00:04:04,739
rectangle completely nonsensical so in

98
00:04:01,530 --> 00:04:06,360
fact presumably that made most of them

99
00:04:04,740 --> 00:04:08,400
have no area as well they would be

100
00:04:06,360 --> 00:04:10,770
inverted because probably the basis B

101
00:04:08,400 --> 00:04:12,300
would be further away on the screen then

102
00:04:10,770 --> 00:04:13,920
the scale dim which is going to be down

103
00:04:12,300 --> 00:04:16,139
to the corner because it's a small you

104
00:04:13,919 --> 00:04:18,089
know it's going to be a small number so

105
00:04:16,139 --> 00:04:19,469
if you set that as the max it's going to

106
00:04:18,089 --> 00:04:21,959
be probably a rectangle that has

107
00:04:19,470 --> 00:04:24,330
negative area which is not going to

108
00:04:21,959 --> 00:04:27,149
intersect anything ever and hence not

109
00:04:24,329 --> 00:04:28,978
participate in the sort probably or

110
00:04:27,149 --> 00:04:30,779
maybe he does weird things i'm not sure

111
00:04:28,978 --> 00:04:32,819
we haven't really looked at what the

112
00:04:30,779 --> 00:04:37,799
ramifications of that would have been

113
00:04:32,819 --> 00:04:42,509
right okay so here is the version of the

114
00:04:37,800 --> 00:04:44,250
code running with out the typo and it

115
00:04:42,509 --> 00:04:46,470
looks to me like you know certainly

116
00:04:44,250 --> 00:04:49,439
there are some improvements here you

117
00:04:46,470 --> 00:04:51,780
know obviously these pieces are sorting

118
00:04:49,439 --> 00:04:53,788
properly the the steps are sorting

119
00:04:51,779 --> 00:04:55,709
properly but there's still some

120
00:04:53,788 --> 00:04:57,930
weirdness to it that I don't necessarily

121
00:04:55,709 --> 00:04:59,879
know if I completely would understand

122
00:04:57,930 --> 00:05:01,168
immediately and I don't know and and

123
00:04:59,879 --> 00:05:03,360
would indicate to me that maybe there's

124
00:05:01,168 --> 00:05:06,060
a little bit of bugging us there and

125
00:05:03,360 --> 00:05:08,819
other parts which which maybe don't so

126
00:05:06,060 --> 00:05:11,339
let's take those one at a time so the

127
00:05:08,819 --> 00:05:13,709
first thing that I'll point out is you

128
00:05:11,339 --> 00:05:15,299
know the the heroes sorting incorrectly

129
00:05:13,709 --> 00:05:16,978
it doesn't really bother me because we

130
00:05:15,300 --> 00:05:18,780
haven't really done much work yet to do

131
00:05:16,978 --> 00:05:21,149
how that's going to work and furthermore

132
00:05:18,779 --> 00:05:23,038
I don't anticipate that actually working

133
00:05:21,149 --> 00:05:24,810
the way that it's working now with the

134
00:05:23,038 --> 00:05:26,490
janky Z values how we've got it I

135
00:05:24,810 --> 00:05:28,168
actually figure now that we have a

136
00:05:26,490 --> 00:05:30,269
topological sort we will just add things

137
00:05:28,168 --> 00:05:33,209
it's like the heroes head is on top of

138
00:05:30,269 --> 00:05:34,829
the heroes cape the heroes cape is on

139
00:05:33,209 --> 00:05:36,418
top of the torso and we'll just let it

140
00:05:34,829 --> 00:05:39,180
always sort properly since we now have

141
00:05:36,418 --> 00:05:41,098
the ability to mandate sort orders for

142
00:05:39,180 --> 00:05:43,168
things without having to touch Z values

143
00:05:41,098 --> 00:05:45,680
or anything else so I think we'll want

144
00:05:43,168 --> 00:05:50,639
to build that into our system somehow

145
00:05:45,680 --> 00:05:52,050
however so that's one thing I've so I'm

146
00:05:50,639 --> 00:05:55,408
not worried about that yet it's not

147
00:05:52,050 --> 00:05:57,120
super concerning to me and we've got the

148
00:05:55,408 --> 00:05:59,668
the rest of these things here look kind

149
00:05:57,120 --> 00:06:01,949
of okay but you can see that as I when I

150
00:05:59,668 --> 00:06:03,839
hop up on these we get some sort of

151
00:06:01,949 --> 00:06:05,669
oddness happening there I don't know

152
00:06:03,839 --> 00:06:07,589
that I care about that either because

153
00:06:05,668 --> 00:06:09,240
that's the way those are being rendered

154
00:06:07,589 --> 00:06:11,069
right now is there rectangles that are

155
00:06:09,240 --> 00:06:13,710
self intersecting they're in the same Z

156
00:06:11,069 --> 00:06:16,019
plane and self intersecting that's not a

157
00:06:13,709 --> 00:06:18,598
case I necessarily care about handling

158
00:06:16,019 --> 00:06:20,430
at all anyway because that really

159
00:06:18,598 --> 00:06:22,978
shouldn't be happening I don't want that

160
00:06:20,430 --> 00:06:26,490
to be occurring in the actual game

161
00:06:22,978 --> 00:06:31,978
anyway so that's also not a problem but

162
00:06:26,490 --> 00:06:34,680
what does concern me is over here if you

163
00:06:31,978 --> 00:06:37,069
take a look at the left side of the

164
00:06:34,680 --> 00:06:39,598
screen you can see that the trees

165
00:06:37,069 --> 00:06:40,980
although everywhere else the trees

166
00:06:39,598 --> 00:06:43,289
appear to be sorting prop

167
00:06:40,980 --> 00:06:45,960
really you can see that the trees on the

168
00:06:43,290 --> 00:06:50,300
left side of the screen do not appear to

169
00:06:45,959 --> 00:06:50,299
be sorting properly to me anyway right

170
00:06:55,430 --> 00:07:01,920
looking at those yeah you know the the

171
00:06:58,680 --> 00:07:03,090
trees all these trees at the top I guess

172
00:07:01,920 --> 00:07:05,280
I don't have a mouse cursor at the

173
00:07:03,089 --> 00:07:08,459
moment why don't I have a mouse cursor

174
00:07:05,279 --> 00:07:10,199
did we are we not in handmade oh right

175
00:07:08,459 --> 00:07:12,779
because we turned off the the debug

176
00:07:10,199 --> 00:07:15,360
stuff let's turn that back on we don't

177
00:07:12,779 --> 00:07:19,889
actually know what that's going to do do

178
00:07:15,360 --> 00:07:24,830
we go build handmade internal is off at

179
00:07:19,889 --> 00:07:28,709
the moment let's turn it back on and

180
00:07:24,829 --> 00:07:30,479
when we did begin render group we

181
00:07:28,709 --> 00:07:35,689
decided that that needed to change to

182
00:07:30,480 --> 00:07:35,689
have the what's that thing called the

183
00:07:39,920 --> 00:07:47,490
well can't remember we decided to change

184
00:07:44,699 --> 00:07:49,620
that yes so that it would take the the

185
00:07:47,490 --> 00:07:51,389
height of the screen rather than having

186
00:07:49,620 --> 00:07:53,550
that come down in the perspective

187
00:07:51,389 --> 00:07:55,589
transform or the orthographic transform

188
00:07:53,550 --> 00:07:59,569
so basically this these two parameters

189
00:07:55,589 --> 00:08:02,849
here they just hopped up to you know the

190
00:07:59,569 --> 00:08:04,500
they just hopped up to the call where we

191
00:08:02,850 --> 00:08:07,140
create the render group so that's pretty

192
00:08:04,500 --> 00:08:08,670
easy change otherwise looks like we got

193
00:08:07,139 --> 00:08:09,779
no problems re-enabling that so let's

194
00:08:08,670 --> 00:08:13,770
take a look at what that what's

195
00:08:09,779 --> 00:08:15,809
happening there okay so there we go we

196
00:08:13,769 --> 00:08:19,949
can see that this is still incorrect

197
00:08:15,810 --> 00:08:22,139
right like that should I believe those

198
00:08:19,949 --> 00:08:23,370
are Z sprites or should be Z sprites I

199
00:08:22,139 --> 00:08:25,349
guess we can verify that they actually

200
00:08:23,370 --> 00:08:27,019
are coming through as these rights but

201
00:08:25,350 --> 00:08:29,250
you can see that they're not sorting

202
00:08:27,019 --> 00:08:31,139
properly even though I believe those

203
00:08:29,250 --> 00:08:33,750
should have a very high Z value right

204
00:08:31,139 --> 00:08:35,819
like those should be things with Z

205
00:08:33,750 --> 00:08:37,830
values that are always going to compare

206
00:08:35,820 --> 00:08:40,349
on top because they should be extremely

207
00:08:37,830 --> 00:08:42,540
large Z values I think so i'm not sure

208
00:08:40,349 --> 00:08:44,790
what's going on there either and you can

209
00:08:42,539 --> 00:08:48,329
also see furthermore that when that

210
00:08:44,789 --> 00:08:49,889
turns on you can see that i get proper

211
00:08:48,330 --> 00:08:53,040
sorting for all the things that it

212
00:08:49,889 --> 00:08:54,620
overlaps so it almost implies to me that

213
00:08:53,039 --> 00:08:57,588
like these three

214
00:08:54,620 --> 00:09:02,539
these are not actually sorting against

215
00:08:57,589 --> 00:09:05,150
each other right okay uh so what all

216
00:09:02,539 --> 00:09:09,139
that what all that sort of adds up to

217
00:09:05,149 --> 00:09:12,579
for me is I would like to augment our

218
00:09:09,139 --> 00:09:17,269
ability to see how the sort is behaving

219
00:09:12,580 --> 00:09:19,070
so really although the it was nice to

220
00:09:17,269 --> 00:09:21,949
have people catch the typos I think the

221
00:09:19,070 --> 00:09:24,140
sort of path i'm going to go down this

222
00:09:21,950 --> 00:09:26,720
week for getting the sort stable and

223
00:09:24,139 --> 00:09:28,338
doing what we wanted to do is really

224
00:09:26,720 --> 00:09:30,320
going to be the same as if i hadn't been

225
00:09:28,339 --> 00:09:31,970
told about that typo so if we still have

226
00:09:30,320 --> 00:09:33,410
the typo had to find it i'm going to do

227
00:09:31,970 --> 00:09:36,160
exactly the same thing and what that is

228
00:09:33,409 --> 00:09:41,059
is try to add some sort of visualization

229
00:09:36,159 --> 00:09:43,719
to the system such that i can see a what

230
00:09:41,059 --> 00:09:47,059
the screen space bounds of various

231
00:09:43,720 --> 00:09:50,000
sprites are because right now I have no

232
00:09:47,059 --> 00:09:52,519
idea right like right now I'm looking at

233
00:09:50,000 --> 00:09:55,460
this screen I have no idea what the

234
00:09:52,519 --> 00:09:58,699
bounds are for those trees they could be

235
00:09:55,460 --> 00:10:00,470
completely wrong you know I'm saying if

236
00:09:58,700 --> 00:10:02,990
they could be just completely erroneous

237
00:10:00,470 --> 00:10:05,149
and I suspect that what we'll find is

238
00:10:02,990 --> 00:10:07,070
they are and remember part of that's

239
00:10:05,149 --> 00:10:09,470
because we're not sending down the

240
00:10:07,070 --> 00:10:11,510
correct we don't actually try to look at

241
00:10:09,470 --> 00:10:13,730
the scaling of things or you know

242
00:10:11,509 --> 00:10:22,700
necessarily if if the ex and waxes are

243
00:10:13,730 --> 00:10:26,379
different or blah blah blah right so I

244
00:10:22,700 --> 00:10:30,230
think what we want to do here is go okay

245
00:10:26,379 --> 00:10:32,240
let's make something that operates in

246
00:10:30,230 --> 00:10:34,039
the renderer that can draw what the

247
00:10:32,240 --> 00:10:37,250
bounds are of our sprite so you can see

248
00:10:34,039 --> 00:10:38,990
and then maybe also if we're lucky we

249
00:10:37,250 --> 00:10:40,820
could add something to that system that

250
00:10:38,990 --> 00:10:45,909
such that when it is drawing those

251
00:10:40,820 --> 00:10:49,278
boundaries it's also going to be able to

252
00:10:45,909 --> 00:10:52,338
show us what the groups are that were

253
00:10:49,278 --> 00:10:54,350
sorted together so for example all of

254
00:10:52,339 --> 00:10:56,630
these trees going up the left-hand side

255
00:10:54,350 --> 00:10:59,570
of the screen should form a coherent

256
00:10:56,629 --> 00:11:01,100
sort group right because the one at the

257
00:10:59,570 --> 00:11:03,110
bottom needs to know that it's in front

258
00:11:01,100 --> 00:11:04,279
of the one that's right above it and so

259
00:11:03,110 --> 00:11:06,110
on and so forth though I can point with

260
00:11:04,279 --> 00:11:07,490
my mouth burning it so like this tree

261
00:11:06,110 --> 00:11:08,269
needs to be sorted against this one

262
00:11:07,490 --> 00:11:09,889
which means tutorial

263
00:11:08,269 --> 00:11:12,860
blah blah blah blah blah all the way up

264
00:11:09,889 --> 00:11:14,389
right so all of those guys have to form

265
00:11:12,860 --> 00:11:16,519
a coherent sort group in order to be

266
00:11:14,389 --> 00:11:18,439
sorted properly if there's a break in

267
00:11:16,519 --> 00:11:20,090
that chain if for some reason it doesn't

268
00:11:18,440 --> 00:11:22,400
think that those sprites are in the same

269
00:11:20,090 --> 00:11:24,620
sort group we have a bug we'll never

270
00:11:22,399 --> 00:11:28,069
know that we have that bug other than

271
00:11:24,620 --> 00:11:29,750
seeing incorrect sort the results will

272
00:11:28,070 --> 00:11:31,370
never know that that's a type of bug we

273
00:11:29,750 --> 00:11:32,929
have if we don't have some way of seeing

274
00:11:31,370 --> 00:11:36,470
what the sort groups are right we

275
00:11:32,929 --> 00:11:38,929
wouldn't know whether that's you know a

276
00:11:36,470 --> 00:11:41,149
part of the bug or whether it's some

277
00:11:38,929 --> 00:11:43,009
other thing that's happening in the

278
00:11:41,149 --> 00:11:44,809
system that has nothing to do with

279
00:11:43,009 --> 00:11:48,529
producing what the sort groups actually

280
00:11:44,809 --> 00:11:50,689
are right so that's where I would like

281
00:11:48,529 --> 00:11:51,860
to go with it so the first thing I'm

282
00:11:50,690 --> 00:11:53,390
going to do is I'm gonna start by

283
00:11:51,860 --> 00:11:55,430
turning off some of the entity

284
00:11:53,389 --> 00:11:56,809
highlighting because we've got a little

285
00:11:55,429 --> 00:11:58,839
bit too much of that going on right now

286
00:11:56,809 --> 00:12:01,939
and so I want to eliminate some of that

287
00:11:58,840 --> 00:12:04,670
and I think we can also eliminate some

288
00:12:01,940 --> 00:12:08,150
of the gratuitous wrecked outline stuff

289
00:12:04,669 --> 00:12:10,699
that's happening at the moment because

290
00:12:08,149 --> 00:12:12,139
you know it doesn't really need to some

291
00:12:10,700 --> 00:12:16,009
of it does not really need to be there

292
00:12:12,139 --> 00:12:18,259
like so for example I would like to

293
00:12:16,009 --> 00:12:20,929
where are we were in World mode right

294
00:12:18,259 --> 00:12:22,549
here default flat transfer so all of

295
00:12:20,929 --> 00:12:24,259
those are fine I'm going to go into

296
00:12:22,549 --> 00:12:29,449
entity I think that probably most of

297
00:12:24,259 --> 00:12:32,419
them are in here yeah so I'm going to

298
00:12:29,450 --> 00:12:34,220
take the volume highlighting out so that

299
00:12:32,419 --> 00:12:36,679
we don't highlight any collision volumes

300
00:12:34,220 --> 00:12:38,330
at the moment and i'm also going to take

301
00:12:36,679 --> 00:12:40,069
out the wrecked outline for the

302
00:12:38,330 --> 00:12:41,690
traversable I don't I don't actually

303
00:12:40,070 --> 00:12:43,790
know that that one ever needs to be

304
00:12:41,690 --> 00:12:46,220
there anymore that one might be one that

305
00:12:43,789 --> 00:12:48,169
we can just kill entirely but that way

306
00:12:46,220 --> 00:12:50,600
we'll have a lot less stuff on the

307
00:12:48,169 --> 00:12:53,779
screen that looks like rectangular

308
00:12:50,600 --> 00:12:55,940
pieces right so now we can sort of hop

309
00:12:53,779 --> 00:12:57,980
around and it's all fine you also notice

310
00:12:55,940 --> 00:13:00,080
the speed has increased quite a bit and

311
00:12:57,980 --> 00:13:02,029
of course the reason for that is the

312
00:13:00,080 --> 00:13:04,550
less of those you have the less sort

313
00:13:02,029 --> 00:13:07,069
groups they sort of form probably and

314
00:13:04,549 --> 00:13:09,769
the less n squared sorting stuff has to

315
00:13:07,070 --> 00:13:11,410
happen blah blah blah blah blah I mean

316
00:13:09,769 --> 00:13:14,659
who knows though that's pure speculation

317
00:13:11,409 --> 00:13:16,639
so anyway if we look at the situation as

318
00:13:14,659 --> 00:13:18,399
as it stands now what I should be able

319
00:13:16,639 --> 00:13:20,539
to do and you know what's actually

320
00:13:18,399 --> 00:13:22,110
what's kind of interesting about that is

321
00:13:20,539 --> 00:13:24,419
if you look at what happened

322
00:13:22,110 --> 00:13:30,028
removing those made these sort properly

323
00:13:24,419 --> 00:13:40,069
somehow which is kind of odd uh not sure

324
00:13:30,028 --> 00:13:40,070
what to make of that exactly hmmmm I say

325
00:13:45,500 --> 00:13:50,458
that seems a bit odd because i'm not

326
00:13:48,059 --> 00:13:54,509
sure why that would have had all that

327
00:13:50,458 --> 00:13:56,399
much of a impact on things like if you

328
00:13:54,509 --> 00:13:58,139
look at how that goes and and what

329
00:13:56,399 --> 00:14:05,339
happens if i move my selection cursor

330
00:13:58,139 --> 00:14:08,250
down that's very odd so merely the act

331
00:14:05,339 --> 00:14:10,649
of adding a few z sprites in that are

332
00:14:08,250 --> 00:14:12,870
kind of stratified there immediately

333
00:14:10,649 --> 00:14:14,789
caused a problem where the sort order

334
00:14:12,870 --> 00:14:16,709
was determined differently than it would

335
00:14:14,789 --> 00:14:18,028
have been if there's only one flat sea

336
00:14:16,708 --> 00:14:20,939
sprite because there's obviously always

337
00:14:18,028 --> 00:14:23,429
a flat sea sprite spanning there so I'm

338
00:14:20,940 --> 00:14:27,209
kind of that's that's very strange I'm

339
00:14:23,429 --> 00:14:32,179
not sure why that's happening I might

340
00:14:27,208 --> 00:14:32,179
want to gather a little more data here I

341
00:14:33,440 --> 00:14:39,800
might want to add a room on top just to

342
00:14:36,570 --> 00:14:42,240
see what happens with those sprites and

343
00:14:39,799 --> 00:14:45,689
and we'll get rid of it in a second but

344
00:14:42,240 --> 00:14:50,490
I want to take a quick look at at what's

345
00:14:45,690 --> 00:14:55,290
happening there so that's going to be ad

346
00:14:50,490 --> 00:14:56,879
standard room oops that's going to be ad

347
00:14:55,289 --> 00:15:00,809
standard room and I'm just going to say

348
00:14:56,879 --> 00:15:05,399
okay let's you know let's push one more

349
00:15:00,809 --> 00:15:07,409
room on top there and see what we see so

350
00:15:05,399 --> 00:15:11,730
yes so that well you know you can see

351
00:15:07,409 --> 00:15:14,100
that that sort is just wrong let me kind

352
00:15:11,730 --> 00:15:16,350
of move up here so you can see that like

353
00:15:14,100 --> 00:15:18,300
some of them are on top and some of them

354
00:15:16,350 --> 00:15:20,720
are below so I feel like we've still got

355
00:15:18,299 --> 00:15:23,939
some pretty so some pretty fundamental

356
00:15:20,720 --> 00:15:25,769
problems happening on there so that's

357
00:15:23,940 --> 00:15:29,899
good that means I don't necessarily have

358
00:15:25,769 --> 00:15:32,190
to have anything all that much like the

359
00:15:29,899 --> 00:15:33,600
those little bars in there but although

360
00:15:32,190 --> 00:15:36,110
I could put them back in if I want to

361
00:15:33,600 --> 00:15:37,879
spin that bug all right

362
00:15:36,110 --> 00:15:42,409
I'm going to start by going into the

363
00:15:37,879 --> 00:15:44,000
renderer and I guess I'll do this in the

364
00:15:42,409 --> 00:15:47,299
OpenGL render since that's the one we

365
00:15:44,000 --> 00:15:50,389
use most of the time now so what's going

366
00:15:47,299 --> 00:15:55,039
to happen here inside this renderer is I

367
00:15:50,389 --> 00:15:56,838
gotta need some way of rendering what

368
00:15:55,039 --> 00:15:59,179
the sort groups were and what the sprite

369
00:15:56,839 --> 00:16:02,720
bounds were and that sort of stuff now

370
00:15:59,179 --> 00:16:07,509
thankfully the sprite bounds are ordered

371
00:16:02,720 --> 00:16:11,209
in the same way that like we can index

372
00:16:07,509 --> 00:16:13,189
into the the sprite bounds using the

373
00:16:11,208 --> 00:16:16,458
same indices that we index into

374
00:16:13,190 --> 00:16:23,089
everything else I believe at least i'm

375
00:16:16,458 --> 00:16:24,768
pretty sure although now that I think

376
00:16:23,089 --> 00:16:26,959
about it I guess we don't really even

377
00:16:24,769 --> 00:16:29,899
need to do that now that i think about

378
00:16:26,958 --> 00:16:33,309
it really all i have to do is just add a

379
00:16:29,899 --> 00:16:36,559
pass here after i draw all these things

380
00:16:33,309 --> 00:16:40,129
do another pass where i draw all of the

381
00:16:36,559 --> 00:16:41,799
sprite bounds right because i have the

382
00:16:40,129 --> 00:16:45,049
list of sprite bouncing i can draw them

383
00:16:41,799 --> 00:16:47,479
there's no real impediment to me doing

384
00:16:45,049 --> 00:16:50,899
so so what i could do is say all right

385
00:16:47,480 --> 00:16:54,079
here's the thing that lets me get that

386
00:16:50,899 --> 00:16:58,809
array started right and then i can just

387
00:16:54,078 --> 00:16:58,809
loop through these as I go

388
00:17:05,980 --> 00:17:24,470
so I'm just going to say for each of the

389
00:17:12,349 --> 00:17:28,189
bounds here we go i'm going to say sort

390
00:17:24,470 --> 00:17:30,920
sprite bound and equals countries plus

391
00:17:28,190 --> 00:17:36,769
bound index and maybe i'll call that

392
00:17:30,920 --> 00:17:40,000
pounds for each of these bounds I have

393
00:17:36,769 --> 00:17:45,259
information about what is in the bound

394
00:17:40,000 --> 00:17:47,509
right so if i go to render h you can see

395
00:17:45,259 --> 00:17:49,549
that I've got this sort sprite bound

396
00:17:47,509 --> 00:17:52,640
I've got a bunch of information about

397
00:17:49,549 --> 00:17:54,799
the edges here these sprite edges tell

398
00:17:52,640 --> 00:17:56,870
me you know who's in front and who's

399
00:17:54,799 --> 00:18:04,609
behind of each one and all these other

400
00:17:56,869 --> 00:18:08,509
sorts of things and those are indices

401
00:18:04,609 --> 00:18:11,949
into the sprite bound array so i think i

402
00:18:08,509 --> 00:18:16,339
could draw a fair bit of information

403
00:18:11,950 --> 00:18:18,830
certainly and I could also have in here

404
00:18:16,339 --> 00:18:21,679
where we've got the visited and sort of

405
00:18:18,829 --> 00:18:24,619
drawn thing I could add another thing

406
00:18:21,680 --> 00:18:27,710
that's like sprite a debug box or

407
00:18:24,619 --> 00:18:29,479
something and I could use that to do if

408
00:18:27,710 --> 00:18:31,970
i want to a sort of a similarly

409
00:18:29,480 --> 00:18:36,170
recursive bounds drawing sort of thing

410
00:18:31,970 --> 00:18:39,920
where I I sort of show look paths among

411
00:18:36,170 --> 00:18:44,630
different connected groups if that makes

412
00:18:39,920 --> 00:18:46,519
sense so yeah I think I should be able

413
00:18:44,630 --> 00:18:49,610
to do this relatively straightforward I

414
00:18:46,519 --> 00:18:55,819
think all I really have to do here is

415
00:18:49,609 --> 00:19:00,740
say well all right let's go ahead and do

416
00:18:55,819 --> 00:19:04,099
like draw bounds recursive on this and

417
00:19:00,740 --> 00:19:06,049
I'll pass the bound and I probably

418
00:19:04,099 --> 00:19:07,669
should call this something so I can tell

419
00:19:06,049 --> 00:19:11,750
what the open that it's an open jail

420
00:19:07,670 --> 00:19:17,180
call right so I do open Joseph I say

421
00:19:11,750 --> 00:19:17,960
here's the bound and I probably i don't

422
00:19:17,180 --> 00:19:19,519
know this

423
00:19:17,960 --> 00:19:20,630
because of the way we were doing it

424
00:19:19,519 --> 00:19:23,629
before I'm just kind of thinking maybe

425
00:19:20,630 --> 00:19:26,570
the easiest way to do it is to pass that

426
00:19:23,630 --> 00:19:31,610
bound index as well so if I come up to

427
00:19:26,569 --> 00:19:33,168
here to draw bounds recursive I'm

428
00:19:31,609 --> 00:19:35,359
guessing that the other thing that I'm

429
00:19:33,169 --> 00:19:37,370
going to want to do and i'll just

430
00:19:35,359 --> 00:19:46,329
quickly put these in here so here's

431
00:19:37,369 --> 00:19:46,329
sorts right down and this is bound index

432
00:19:51,220 --> 00:19:58,970
so when i call this function i can then

433
00:19:55,730 --> 00:20:01,490
quickly check in here if the bound flags

434
00:19:58,970 --> 00:20:04,159
and sprite debug box it's the zac same

435
00:20:01,490 --> 00:20:06,798
kind of depth-first traversal we were

436
00:20:04,159 --> 00:20:08,690
doing before i can do that and then i

437
00:20:06,798 --> 00:20:11,269
can say well as soon as I check one of

438
00:20:08,690 --> 00:20:13,308
the bounds I'm going to or in the debug

439
00:20:11,269 --> 00:20:16,369
box lag so I know I won't ever draw this

440
00:20:13,308 --> 00:20:18,500
guy again I can then loop through just

441
00:20:16,369 --> 00:20:22,000
as I was looping through before all of

442
00:20:18,500 --> 00:20:27,398
the sprite edges so i can say like ok

443
00:20:22,000 --> 00:20:27,398
for each of the edges coming off of this

444
00:20:28,148 --> 00:20:34,489
is it next with the next edge of same

445
00:20:32,269 --> 00:20:36,829
front for each of the edges coming off

446
00:20:34,490 --> 00:20:39,230
of this node i'm going to walk backwards

447
00:20:36,829 --> 00:20:45,168
to that node so i can just say like ok

448
00:20:39,230 --> 00:20:48,528
opengl draw bounds recursive bounds and

449
00:20:45,169 --> 00:20:49,909
edge i'm going to go with behind because

450
00:20:48,528 --> 00:20:52,909
that's the order we walk in from front

451
00:20:49,909 --> 00:20:55,190
to behind and now I've got a thing that

452
00:20:52,909 --> 00:20:57,649
will crawl those now what I'd like to do

453
00:20:55,190 --> 00:20:58,850
here is I would like to draw a couple

454
00:20:57,648 --> 00:21:01,759
different things first of all I'd like

455
00:20:58,849 --> 00:21:04,969
to draw the screen area because

456
00:21:01,759 --> 00:21:06,679
obviously the screen area is the thing

457
00:21:04,970 --> 00:21:08,808
that lets me see kind of what we

458
00:21:06,679 --> 00:21:11,090
specified as the bounds for a particular

459
00:21:08,808 --> 00:21:14,808
sprite and then I'd also like to draw

460
00:21:11,089 --> 00:21:17,329
perhaps an edge between like a line but

461
00:21:14,808 --> 00:21:20,808
to connect the diff centers maybe of

462
00:21:17,329 --> 00:21:22,970
those boxes I also feel like I would do

463
00:21:20,808 --> 00:21:27,230
myself a favor of visualization wise if

464
00:21:22,970 --> 00:21:29,899
I go ahead and say hey draw all the

465
00:21:27,230 --> 00:21:31,159
connected groups in the same color so

466
00:21:29,898 --> 00:21:31,699
I'm going to do a thing here where I

467
00:21:31,159 --> 00:21:36,260
also

468
00:21:31,700 --> 00:21:38,840
say you know v4 color right now I feel

469
00:21:36,259 --> 00:21:44,119
like we had a thing in debug where we

470
00:21:38,839 --> 00:21:47,359
had a color table right here's that

471
00:21:44,119 --> 00:21:48,979
debug color table and I feel like maybe

472
00:21:47,359 --> 00:21:51,079
the debug color table is something we

473
00:21:48,980 --> 00:21:53,349
want to just kind of have as a systemic

474
00:21:51,079 --> 00:21:57,619
thing so other people can use it as well

475
00:21:53,349 --> 00:21:59,119
and so you know if I I'm not sure where

476
00:21:57,619 --> 00:22:00,528
to put that exactly but you know let's

477
00:21:59,119 --> 00:22:02,388
just say that everyone gets a copy of

478
00:22:00,528 --> 00:22:04,339
the debug color table if you ever want

479
00:22:02,388 --> 00:22:08,209
to use it it's there don't worry about

480
00:22:04,339 --> 00:22:11,119
it it's all fine right so let's say we

481
00:22:08,210 --> 00:22:12,798
pass in a color here then I've got some

482
00:22:11,119 --> 00:22:16,158
options for how I want to draw these

483
00:22:12,798 --> 00:22:17,839
things i want to draw some lines here so

484
00:22:16,159 --> 00:22:19,700
i think what we'll do is say this is all

485
00:22:17,839 --> 00:22:21,759
going to be done with lines and then i

486
00:22:19,700 --> 00:22:25,370
can just do one big start and end block

487
00:22:21,759 --> 00:22:27,500
for each individual recursive call so

488
00:22:25,369 --> 00:22:29,569
here's how I'm planning to make that

489
00:22:27,500 --> 00:22:31,700
work right I'm going to go through each

490
00:22:29,569 --> 00:22:34,329
bound and for each bad i'm going to

491
00:22:31,700 --> 00:22:36,440
start with a different color right and

492
00:22:34,329 --> 00:22:37,668
obviously i don't really know what's

493
00:22:36,440 --> 00:22:38,808
going to happen with these colors as

494
00:22:37,669 --> 00:22:40,549
they loop we don't have necessarily

495
00:22:38,808 --> 00:22:43,250
enough colors to ensure that every group

496
00:22:40,548 --> 00:22:44,720
is a separate color unfortunately so

497
00:22:43,250 --> 00:22:48,138
there's really not much I can do about

498
00:22:44,720 --> 00:22:51,130
that we'll have to let the line

499
00:22:48,138 --> 00:22:54,229
connectors sort of clue us in as to that

500
00:22:51,130 --> 00:22:56,389
as much as possible but what I don't

501
00:22:54,230 --> 00:22:58,819
want to do here is I don't want to

502
00:22:56,388 --> 00:23:00,589
create a new group for every bound index

503
00:22:58,819 --> 00:23:02,359
because a lot of those boundaries are

504
00:23:00,589 --> 00:23:03,558
already going to have been used so what

505
00:23:02,359 --> 00:23:08,869
I think I'm going to do is I'm going to

506
00:23:03,558 --> 00:23:11,329
do an early check and hopefully this

507
00:23:08,869 --> 00:23:20,388
makes sense to you as I'm saying it if

508
00:23:11,329 --> 00:23:23,058
the bound flags and oops if the bound

509
00:23:20,388 --> 00:23:27,798
flags are not set for that guides that

510
00:23:23,058 --> 00:23:29,808
reminds me i missed it here we go if the

511
00:23:27,798 --> 00:23:31,668
battle flags are not set then we're

512
00:23:29,808 --> 00:23:33,168
going to actually do the call and the

513
00:23:31,669 --> 00:23:39,710
reason I care about that is i'm going to

514
00:23:33,169 --> 00:23:43,179
start the GL i'm going to start up the

515
00:23:39,710 --> 00:23:43,179
GL stuff for

516
00:23:44,509 --> 00:23:51,179
the drawing and set the color only on

517
00:23:48,240 --> 00:23:53,099
ones where I know that I'm going to draw

518
00:23:51,179 --> 00:23:55,710
it that way we don't use up colors in

519
00:23:53,099 --> 00:23:58,288
the color table unnecessarily and

520
00:23:55,710 --> 00:24:00,929
possibly get fewer actual distinct color

521
00:23:58,288 --> 00:24:02,940
regions than we should simply because we

522
00:24:00,929 --> 00:24:04,860
you know are cycling it based on the

523
00:24:02,940 --> 00:24:06,600
bound index which is not actually

524
00:24:04,859 --> 00:24:09,538
representative of when we're actually

525
00:24:06,599 --> 00:24:12,288
drawing a new group so what I want to do

526
00:24:09,538 --> 00:24:14,819
here is say like group index equals zero

527
00:24:12,288 --> 00:24:17,730
inside here will increment the group

528
00:24:14,819 --> 00:24:21,178
index and then I will use the debug

529
00:24:17,730 --> 00:24:34,409
color table by taking group index

530
00:24:21,179 --> 00:24:39,090
instead right there we go I think I can

531
00:24:34,409 --> 00:24:40,950
do this right so this will be a get us a

532
00:24:39,089 --> 00:24:43,829
neat color out of the debug table you

533
00:24:40,950 --> 00:24:46,288
know every time we need a new group go

534
00:24:43,829 --> 00:24:48,089
ahead and start a group of lines call

535
00:24:46,288 --> 00:24:50,429
the recursive bounce drawing and then

536
00:24:48,089 --> 00:24:54,928
end the and then end the you know the

537
00:24:50,429 --> 00:25:00,649
set uh sorts right bound is an

538
00:24:54,929 --> 00:25:00,649
undeclared identifier is that so

539
00:25:04,759 --> 00:25:14,670
what how is that the case so these I

540
00:25:12,599 --> 00:25:20,759
thought these guys were operating on

541
00:25:14,670 --> 00:25:22,980
these in this I guess were what I'm I'm

542
00:25:20,759 --> 00:25:26,269
confused so you're telling me handmade

543
00:25:22,980 --> 00:25:33,740
OpenGL doesn't include sort sprite bound

544
00:25:26,269 --> 00:25:33,740
it's not true you seem to think it is

545
00:25:39,720 --> 00:25:44,339
alright well I'll take your word for it

546
00:25:46,409 --> 00:25:54,570
and you're right you are correct sir

547
00:25:55,229 --> 00:26:05,619
let's see here so it looks like the

548
00:26:02,470 --> 00:26:07,358
problem is we kind of have a sort order

549
00:26:05,618 --> 00:26:09,579
problem there because loaded bitmap is

550
00:26:07,358 --> 00:26:15,210
going to be in the wrong place for that

551
00:26:09,579 --> 00:26:18,908
ah yes so maybe something more like that

552
00:26:15,210 --> 00:26:25,119
there we go I hate this aspect of C++ it

553
00:26:18,909 --> 00:26:28,869
is so annoying okay function does not

554
00:26:25,118 --> 00:26:30,249
take two arguments that's true got to

555
00:26:28,868 --> 00:26:31,298
pass that color through although

556
00:26:30,249 --> 00:26:33,460
actually now I think about it we don't

557
00:26:31,298 --> 00:26:35,108
have to pass color at all do we because

558
00:26:33,460 --> 00:26:36,519
if we just if it's just set in OpenGL

559
00:26:35,108 --> 00:26:39,908
and we're all just drawing lines then

560
00:26:36,519 --> 00:26:43,868
everything's fine I get certain trees

561
00:26:39,909 --> 00:26:46,119
identifiers not found that probably just

562
00:26:43,868 --> 00:26:53,678
needs to be forward declared get sword

563
00:26:46,118 --> 00:26:56,228
entries bloop bloop and by the way these

564
00:26:53,679 --> 00:26:59,820
are done right these are not ten memory

565
00:26:56,229 --> 00:27:02,590
size isn't being used anymore all right

566
00:26:59,819 --> 00:27:05,229
let's see we need to pass directly the

567
00:27:02,589 --> 00:27:07,238
the float pointer there so there we go

568
00:27:05,229 --> 00:27:08,440
surpassing that colored open shell that

569
00:27:07,239 --> 00:27:10,028
we're drawing bunch Alliance now this

570
00:27:08,440 --> 00:27:11,590
shouldn't do anything yet because we

571
00:27:10,028 --> 00:27:14,048
haven't actually issued those line

572
00:27:11,589 --> 00:27:16,628
directives so we should just see what we

573
00:27:14,048 --> 00:27:18,548
normally see which is good enough that

574
00:27:16,628 --> 00:27:20,079
no surprise there but now we want to

575
00:27:18,548 --> 00:27:21,819
start actually drawing those lines and

576
00:27:20,079 --> 00:27:23,408
you already remember how to draw in

577
00:27:21,819 --> 00:27:28,450
OpenGL right when you start a primitive

578
00:27:23,409 --> 00:27:30,639
type like triangles right then we set we

579
00:27:28,450 --> 00:27:32,769
just set what our vertex pointers are

580
00:27:30,638 --> 00:27:34,978
going to be now when we draw these lines

581
00:27:32,769 --> 00:27:37,868
we're going to have a problem with

582
00:27:34,979 --> 00:27:40,479
texturing because presumably texturing

583
00:27:37,868 --> 00:27:42,220
will still be on because I think that's

584
00:27:40,479 --> 00:27:45,429
our default state is to have texturing

585
00:27:42,220 --> 00:27:46,929
usually stay on there's texture 2d so

586
00:27:45,429 --> 00:27:48,519
what we need to do when we come down

587
00:27:46,929 --> 00:27:51,280
here we're going to have to disable

588
00:27:48,519 --> 00:27:53,019
texturing because we don't want our

589
00:27:51,279 --> 00:27:55,119
to pick up any texture that may have

590
00:27:53,019 --> 00:27:59,829
been set so we need to make sure that

591
00:27:55,119 --> 00:28:02,589
that's okay all right so then when we do

592
00:27:59,829 --> 00:28:04,779
our open gel rendering here all we have

593
00:28:02,589 --> 00:28:07,149
to do is retire some actual vertices to

594
00:28:04,779 --> 00:28:09,339
draw a line now there's a couple

595
00:28:07,150 --> 00:28:12,070
different kinds of lines that we want to

596
00:28:09,339 --> 00:28:15,220
draw here right one is we want to draw

597
00:28:12,069 --> 00:28:17,619
like a line from us to our sort

598
00:28:15,220 --> 00:28:20,259
neighbors right so I guess I'll just

599
00:28:17,619 --> 00:28:22,809
call this neighbor or something and

600
00:28:20,259 --> 00:28:25,779
that's just going to be bound plus this

601
00:28:22,809 --> 00:28:29,409
behind edge and I guess you know what

602
00:28:25,779 --> 00:28:31,539
else I could cusp of us behind so if I

603
00:28:29,410 --> 00:28:33,610
have two of these things and i want to

604
00:28:31,539 --> 00:28:36,009
draw a line to the one that I'm you know

605
00:28:33,609 --> 00:28:38,919
that's behind me what I can do there is

606
00:28:36,009 --> 00:28:41,410
I know what the screen space bounds of

607
00:28:38,920 --> 00:28:45,610
these things actually are already that's

608
00:28:41,410 --> 00:28:48,250
going to be specified in here and what

609
00:28:45,609 --> 00:28:51,219
that entails right here is just getting

610
00:28:48,250 --> 00:28:52,990
the center I guess of that or I assume i

611
00:28:51,220 --> 00:28:54,610
want to draw the center just getting the

612
00:28:52,990 --> 00:28:57,670
center of both of those and then drawing

613
00:28:54,609 --> 00:29:01,329
between them so I just have to know like

614
00:28:57,670 --> 00:29:03,130
what is my Center and I can do that I

615
00:29:01,329 --> 00:29:04,720
think by just saying get center because

616
00:29:03,130 --> 00:29:07,200
I believe we already implemented that

617
00:29:04,720 --> 00:29:11,460
function if not we can go do it on

618
00:29:07,200 --> 00:29:15,340
rectangles so there's the screen area

619
00:29:11,460 --> 00:29:18,519
and then I need to do the behind Center

620
00:29:15,339 --> 00:29:22,029
which is the you know one for the one

621
00:29:18,519 --> 00:29:23,980
we're drawing too same exact thing so

622
00:29:22,029 --> 00:29:26,819
now I've got two points that i can draw

623
00:29:23,980 --> 00:29:29,829
between so if i want to draw a line

624
00:29:26,819 --> 00:29:34,089
after I do the recursive part I'll do it

625
00:29:29,829 --> 00:29:39,099
ah not sure when I should do it really I

626
00:29:34,089 --> 00:29:40,990
guess I want to do it well they're all

627
00:29:39,099 --> 00:29:42,099
the same color so I guess it doesn't

628
00:29:40,990 --> 00:29:43,420
matter because they're all just going to

629
00:29:42,099 --> 00:29:45,879
fill pixels so it doesn't really matter

630
00:29:43,420 --> 00:29:48,550
when I do it but I guess I just want to

631
00:29:45,880 --> 00:29:50,980
now say okay let's retire two vertices

632
00:29:48,549 --> 00:29:52,869
one on either side of the one for each

633
00:29:50,980 --> 00:29:56,890
of them right so I've got the center and

634
00:29:52,869 --> 00:29:59,199
then I've got the the center of the one

635
00:29:56,890 --> 00:30:03,070
that I'm the one that's in front and

636
00:29:59,200 --> 00:30:05,048
then the ones that's behind then after

637
00:30:03,069 --> 00:30:09,128
that's done I can also draw a rectangle

638
00:30:05,048 --> 00:30:10,989
right where we say we've got the screen

639
00:30:09,128 --> 00:30:13,418
area and we've got the min and Max of

640
00:30:10,989 --> 00:30:20,249
that so what I could do here is say like

641
00:30:13,419 --> 00:30:23,769
a you know what's my men my I don't know

642
00:30:20,249 --> 00:30:27,009
screen min something like this sin smin

643
00:30:23,769 --> 00:30:33,429
uh so i could say okay give me the min

644
00:30:27,009 --> 00:30:36,190
of this and give me the max of this and

645
00:30:33,429 --> 00:30:38,590
then I just need to draw you know the

646
00:30:36,190 --> 00:30:42,340
the vertices of the rectangle around and

647
00:30:38,589 --> 00:30:44,709
I think we have open Jill rectangle and

648
00:30:42,339 --> 00:30:47,589
then we could do another one here that's

649
00:30:44,710 --> 00:30:49,629
like you know something like line

650
00:30:47,589 --> 00:30:56,858
vertices or something like this opengl

651
00:30:49,628 --> 00:31:00,819
line vertices and really that's just

652
00:30:56,858 --> 00:31:02,230
saying this this exact same sort of

653
00:31:00,819 --> 00:31:04,509
thing only instead of doing the

654
00:31:02,230 --> 00:31:06,128
triangles for a solid rectangle i'm just

655
00:31:04,509 --> 00:31:08,710
going to use i'm just going to go around

656
00:31:06,128 --> 00:31:19,599
the perimeter right so i'm going to

657
00:31:08,710 --> 00:31:21,669
start with the min and i'm going to draw

658
00:31:19,599 --> 00:31:23,319
from the min to the max in x and i'm

659
00:31:21,669 --> 00:31:26,739
going to go you know counterclockwise

660
00:31:23,319 --> 00:31:29,200
around then that's one line then i need

661
00:31:26,739 --> 00:31:33,220
to start their right and then draw up to

662
00:31:29,200 --> 00:31:36,489
the max so i'm going up the side of it

663
00:31:33,220 --> 00:31:40,089
then i need to start there and go back

664
00:31:36,489 --> 00:31:42,489
along X but staying up at Y and then I

665
00:31:40,089 --> 00:31:45,759
need to start there and go down the side

666
00:31:42,489 --> 00:31:49,149
and that's all of the vertices in that

667
00:31:45,759 --> 00:31:54,159
rectangle right one you know four lines

668
00:31:49,148 --> 00:31:56,168
one for each side of it so there I can

669
00:31:54,159 --> 00:32:00,940
just say like okay you know output the

670
00:31:56,169 --> 00:32:05,200
vertices for this line I before this

671
00:32:00,940 --> 00:32:09,808
rectangle and we're good so hopefully

672
00:32:05,200 --> 00:32:09,808
oops and that's a found screen area

673
00:32:12,039 --> 00:32:22,069
so hopefully that's good it looks like

674
00:32:14,569 --> 00:32:23,418
get min is not in their mid corner don't

675
00:32:22,069 --> 00:32:27,859
ask me why we thought we needed corner

676
00:32:23,419 --> 00:32:29,990
in there but I guess we did and so now

677
00:32:27,859 --> 00:32:33,319
hopefully we'll see something there we

678
00:32:29,990 --> 00:32:36,740
go and you know some of that looks kind

679
00:32:33,319 --> 00:32:39,019
of right and and a lot of it just

680
00:32:36,740 --> 00:32:41,599
doesn't look right at all right and so

681
00:32:39,019 --> 00:32:45,289
already we can tell there's there's bad

682
00:32:41,599 --> 00:32:47,839
news happening here right like there's

683
00:32:45,289 --> 00:32:49,548
some people whose screen areas is you

684
00:32:47,839 --> 00:32:51,678
know is just garbage or something

685
00:32:49,548 --> 00:32:54,019
because some of it like if you look at

686
00:32:51,679 --> 00:32:56,660
the here the region of the hero it looks

687
00:32:54,019 --> 00:32:59,089
really pretty good right it looks

688
00:32:56,660 --> 00:33:00,669
relatively correct and of course there's

689
00:32:59,089 --> 00:33:03,379
some issues there because we're not

690
00:33:00,669 --> 00:33:05,179
scaling things right but you can see the

691
00:33:03,380 --> 00:33:06,919
lines are connecting it to the things

692
00:33:05,179 --> 00:33:08,419
that it's over and that all feels kind

693
00:33:06,919 --> 00:33:11,090
of right but then we've got these

694
00:33:08,419 --> 00:33:13,040
problems of these other rectangles where

695
00:33:11,089 --> 00:33:14,720
everything sorting us and I'm not sure

696
00:33:13,039 --> 00:33:17,389
how right that is now part of it might

697
00:33:14,720 --> 00:33:19,970
be right because it might be looking at

698
00:33:17,390 --> 00:33:22,490
a solid filled rectangle like let's say

699
00:33:19,970 --> 00:33:24,440
the clear screen you know what I'm

700
00:33:22,490 --> 00:33:27,169
saying if all of those are just going

701
00:33:24,440 --> 00:33:32,720
back to the clear screen then that's not

702
00:33:27,169 --> 00:33:35,509
really a problem and now I think about

703
00:33:32,720 --> 00:33:36,740
that's probably what that is I'm going

704
00:33:35,509 --> 00:33:40,240
to take the clear screen out for a

705
00:33:36,740 --> 00:33:40,240
second and see if that's the case

706
00:33:51,190 --> 00:33:58,100
okay so that's good that's you know

707
00:33:54,950 --> 00:33:59,870
that's a that's pleasant so now we know

708
00:33:58,099 --> 00:34:01,519
that really that's just the clear and

709
00:33:59,869 --> 00:34:04,519
it's the clear that's sort of making

710
00:34:01,519 --> 00:34:08,809
everything end up forming into one giant

711
00:34:04,519 --> 00:34:17,329
group right so that's that's that's a

712
00:34:08,809 --> 00:34:20,590
happy thing okay and that's looking

713
00:34:17,329 --> 00:34:23,029
pretty good in terms of detection there

714
00:34:20,590 --> 00:34:26,450
you know that's that's looking

715
00:34:23,030 --> 00:34:29,810
relatively sane and I don't really want

716
00:34:26,449 --> 00:34:31,908
the clear to be doing what it's doing I

717
00:34:29,809 --> 00:34:34,898
you know I don't know that that's a

718
00:34:31,909 --> 00:34:37,970
particularly useful thing for us to be

719
00:34:34,898 --> 00:34:39,409
worrying about is having this giant

720
00:34:37,969 --> 00:34:41,779
thing that would unify because if you

721
00:34:39,409 --> 00:34:43,190
think about what happens is if we leave

722
00:34:41,780 --> 00:34:44,899
the clear in there it means that

723
00:34:43,190 --> 00:34:47,898
everyone will always be part of one

724
00:34:44,898 --> 00:34:50,148
single giant group you know it's in it's

725
00:34:47,898 --> 00:34:51,668
it's just a given because there's one

726
00:34:50,148 --> 00:34:53,659
thing that covers the entire screen

727
00:34:51,668 --> 00:34:55,789
everyone's going to get sorted as part

728
00:34:53,659 --> 00:34:57,619
of that group and there's no need for

729
00:34:55,789 --> 00:35:01,009
that to happen because we know that the

730
00:34:57,619 --> 00:35:03,769
clear happens at the outset anyway right

731
00:35:01,010 --> 00:35:06,440
so the clear doesn't really need to be

732
00:35:03,769 --> 00:35:10,070
in the sort in the same way as

733
00:35:06,440 --> 00:35:17,240
everything else does and I the only real

734
00:35:10,070 --> 00:35:20,180
question I have about that is what's the

735
00:35:17,239 --> 00:35:24,619
right way to slipstream that into the

736
00:35:20,179 --> 00:35:27,349
process right because you know at we

737
00:35:24,619 --> 00:35:31,609
could do the the most straightforward

738
00:35:27,349 --> 00:35:33,380
thing which is to just have the clear be

739
00:35:31,610 --> 00:35:35,059
something that's get you know you just

740
00:35:33,380 --> 00:35:40,099
set what the clear color is and then it

741
00:35:35,059 --> 00:35:42,820
happens automatically the and I don't

742
00:35:40,099 --> 00:35:45,819
know maybe that's a maybe that's a good

743
00:35:42,820 --> 00:35:45,820
idea

744
00:35:57,340 --> 00:36:03,950
the reason that I hesitate to use that

745
00:36:01,460 --> 00:36:06,260
as a solution even though it it's you

746
00:36:03,949 --> 00:36:07,939
know it's relatively reasonable the

747
00:36:06,260 --> 00:36:10,310
reason that I hesitate to do that is

748
00:36:07,940 --> 00:36:13,369
simply because we don't really know how

749
00:36:10,309 --> 00:36:15,949
the pipeline is going to expand we may

750
00:36:13,369 --> 00:36:18,319
have to clear like other surfaces and

751
00:36:15,949 --> 00:36:19,939
stuff like that but I guess what we

752
00:36:18,320 --> 00:36:22,430
could do is just say that we're never

753
00:36:19,940 --> 00:36:23,450
gonna really be clearing a hammy heroes

754
00:36:22,429 --> 00:36:25,460
not the type of gamer we're going to be

755
00:36:23,449 --> 00:36:29,599
clearing stuff that has content in it

756
00:36:25,460 --> 00:36:31,250
ever we're only clearing on start so I

757
00:36:29,599 --> 00:36:32,839
guess it would be fine for us to just

758
00:36:31,250 --> 00:36:34,579
say well when that day comes we're going

759
00:36:32,840 --> 00:36:36,289
to have to have another thing where we

760
00:36:34,579 --> 00:36:37,279
say we want to render target and we want

761
00:36:36,289 --> 00:36:40,429
to render target we get it we just say

762
00:36:37,280 --> 00:36:43,519
what the clear color is so I suspect we

763
00:36:40,429 --> 00:36:46,369
could just say Without Really much loss

764
00:36:43,519 --> 00:36:49,429
of generality or really anything that

765
00:36:46,369 --> 00:36:51,769
just the clear is something we'll manage

766
00:36:49,429 --> 00:36:54,169
separately and typically there really

767
00:36:51,769 --> 00:36:56,119
isn't any reason to clear anyway so it's

768
00:36:54,170 --> 00:36:57,650
not even something that that really

769
00:36:56,119 --> 00:37:05,839
needs to be in here we could just bake

770
00:36:57,650 --> 00:37:07,670
it in to the program in general so yeah

771
00:37:05,840 --> 00:37:13,579
you know what we could say something

772
00:37:07,670 --> 00:37:16,340
like in handmade OpenGL you know if it's

773
00:37:13,579 --> 00:37:19,279
handmade internal we clear or or better

774
00:37:16,340 --> 00:37:22,550
yet I think maybe in here what we would

775
00:37:19,280 --> 00:37:25,810
do is say well GL clear color and we

776
00:37:22,550 --> 00:37:25,810
could get our hideous pink on

777
00:37:31,199 --> 00:37:36,189
we could do that and then just leave the

778
00:37:33,909 --> 00:37:37,539
clears off and you know do we want to

779
00:37:36,190 --> 00:37:40,150
maybe reenable them in the future I

780
00:37:37,539 --> 00:37:42,909
don't know but we could just say all

781
00:37:40,150 --> 00:37:44,170
right you know that's how it goes

782
00:37:42,909 --> 00:37:46,329
because pretty soon we're going to be

783
00:37:44,170 --> 00:37:47,740
putting in real ground tiles and then we

784
00:37:46,329 --> 00:37:50,380
want to see anywhere that for some

785
00:37:47,739 --> 00:37:52,409
reason we're not drawing you know what I

786
00:37:50,380 --> 00:37:52,410
mean

787
00:37:58,518 --> 00:38:02,368
although really I think we said we might

788
00:38:00,568 --> 00:38:04,199
want to do fogging with that as well so

789
00:38:02,369 --> 00:38:06,088
I don't know we'll have to cross that

790
00:38:04,199 --> 00:38:07,409
bridge when we come to it I'm not sure

791
00:38:06,088 --> 00:38:08,759
how we're going to want to draw some of

792
00:38:07,409 --> 00:38:11,608
that stuff so we may have to have

793
00:38:08,759 --> 00:38:22,139
control over the clear color and you

794
00:38:11,608 --> 00:38:25,068
know that's fine if we do all right so

795
00:38:22,139 --> 00:38:27,298
yeah what I could do there is just say

796
00:38:25,068 --> 00:38:29,130
I'm trying to think of what the easiest

797
00:38:27,298 --> 00:38:30,809
way to do that would be I guess you know

798
00:38:29,130 --> 00:38:33,329
what we could do is say well all right

799
00:38:30,809 --> 00:38:38,009
let's say that in the platform system

800
00:38:33,329 --> 00:38:40,499
here let's say that in addition to what

801
00:38:38,009 --> 00:38:44,309
we were sort of passing through let's

802
00:38:40,498 --> 00:38:48,688
see let's see where are we where are we

803
00:38:44,309 --> 00:38:51,179
not the platform api I just want the

804
00:38:48,688 --> 00:38:53,038
game writer commands I'm just going to

805
00:38:51,179 --> 00:38:56,009
say like all right so let's say that in

806
00:38:53,039 --> 00:39:02,400
here in addition to this stuff we're

807
00:38:56,009 --> 00:39:04,708
also going to have a clear color and so

808
00:39:02,400 --> 00:39:06,418
that way it can look in OpenGL it can

809
00:39:04,708 --> 00:39:10,489
say oh well the clear color is just

810
00:39:06,418 --> 00:39:10,489
going to be whatever they said it was

811
00:39:19,210 --> 00:39:25,670
right and then we can just say yeah you

812
00:39:23,599 --> 00:39:30,289
know what and the render entry type

813
00:39:25,670 --> 00:39:33,559
clear is not going to be a thing we're

814
00:39:30,289 --> 00:39:38,210
going to get rid of that and when we do

815
00:39:33,559 --> 00:39:42,230
our clear here we're going to pick up

816
00:39:38,210 --> 00:39:45,199
whatever was skin was in those commands

817
00:39:42,230 --> 00:39:49,338
so you know we can decide what we want

818
00:39:45,199 --> 00:39:51,288
to do with it later just fine but then

819
00:39:49,338 --> 00:39:53,929
when we actually go to issue a clear

820
00:39:51,289 --> 00:39:56,569
command instead of pushing something on

821
00:39:53,929 --> 00:39:59,149
here we'll get rid of that instead of

822
00:39:56,568 --> 00:40:01,719
pushing something on when we try to do

823
00:39:59,150 --> 00:40:05,180
that instead we'll just set the commands

824
00:40:01,719 --> 00:40:07,879
right so when we do our store color here

825
00:40:05,179 --> 00:40:10,219
instead we'll just make that be a thing

826
00:40:07,880 --> 00:40:11,329
where we don't have to do any of this it

827
00:40:10,219 --> 00:40:13,098
would also gets out of the business of

828
00:40:11,329 --> 00:40:14,298
storing that screen area I want to keep

829
00:40:13,099 --> 00:40:16,519
that screen area in there for other

830
00:40:14,298 --> 00:40:20,059
reasons i think so i'm not going to back

831
00:40:16,519 --> 00:40:25,329
that out but you know we could now if we

832
00:40:20,059 --> 00:40:25,329
wanted to so the clear oops

833
00:40:34,119 --> 00:40:39,318
absent-minded typing so the clear now

834
00:40:37,548 --> 00:40:43,159
does what i wanted to do now we've got

835
00:40:39,318 --> 00:40:46,369
to get rid of these and what I'll say

836
00:40:43,159 --> 00:40:48,379
here is I'll just elevate this draw a

837
00:40:46,369 --> 00:40:50,838
rectangle call up to where we were doing

838
00:40:48,380 --> 00:40:53,450
the clear in the previous case right and

839
00:40:50,838 --> 00:40:56,778
then when we you know I'll just grab

840
00:40:53,449 --> 00:41:01,818
whatever that commands clear color is

841
00:40:56,778 --> 00:41:06,199
here and let that happen and then i will

842
00:41:01,818 --> 00:41:09,920
delete that from the software renderer

843
00:41:06,199 --> 00:41:13,838
so it will still be compliant as well

844
00:41:09,920 --> 00:41:18,260
all right initializing conversion from

845
00:41:13,838 --> 00:41:25,219
something to something else u32 to real

846
00:41:18,260 --> 00:41:28,400
32 that's true so in this case we need

847
00:41:25,219 --> 00:41:28,909
to do render command struct so in here

848
00:41:28,400 --> 00:41:33,440
we

849
00:41:28,909 --> 00:41:35,899
clear the clear if you will so after the

850
00:41:33,440 --> 00:41:38,000
push buffer Maximus buffer size in the

851
00:41:35,900 --> 00:41:39,950
push buffer base where we're going to do

852
00:41:38,000 --> 00:41:41,869
the element count and the sword entry

853
00:41:39,949 --> 00:41:43,159
size in here we just need something

854
00:41:41,869 --> 00:41:44,900
that's going to initialize the clear

855
00:41:43,159 --> 00:41:49,759
color to you know black or who knows

856
00:41:44,900 --> 00:41:52,010
what okay so let's see what happens now

857
00:41:49,760 --> 00:41:55,550
if we get a setting of the clear color

858
00:41:52,010 --> 00:41:57,860
we do so that's all that feature is now

859
00:41:55,550 --> 00:42:00,620
restored and now we're sorting the way

860
00:41:57,860 --> 00:42:04,820
that I had hoped we would sort in actual

861
00:42:00,619 --> 00:42:09,409
local groups and yeah that's really all

862
00:42:04,820 --> 00:42:12,140
there is to that yeah so it would be

863
00:42:09,409 --> 00:42:14,480
nice to perhaps to have things that sort

864
00:42:12,139 --> 00:42:16,429
of exists outside of the sort thing will

865
00:42:14,480 --> 00:42:18,980
sort of get into that I guess in a

866
00:42:16,429 --> 00:42:20,960
little bit but let's try turning on some

867
00:42:18,980 --> 00:42:22,250
more rooms now and turning off let's

868
00:42:20,960 --> 00:42:25,579
first turn off the debug and see where

869
00:42:22,250 --> 00:42:27,380
we're at in terms of sort behavior now

870
00:42:25,579 --> 00:42:28,849
that we've got that single sort because

871
00:42:27,380 --> 00:42:30,440
I suspect that was creating a lot more

872
00:42:28,849 --> 00:42:33,230
cycles and things that are difficult to

873
00:42:30,440 --> 00:42:34,849
break and so you know we were probably

874
00:42:33,230 --> 00:42:37,880
getting worse performance out of the

875
00:42:34,849 --> 00:42:42,789
sort than we thought we were going to so

876
00:42:37,880 --> 00:42:42,789
anyway let's go ahead and switch back

877
00:42:48,179 --> 00:42:56,250
out of here and we can also have a thing

878
00:42:51,300 --> 00:43:05,280
that's like if you know show sort groups

879
00:42:56,250 --> 00:43:07,980
or something like this and I guess well

880
00:43:05,280 --> 00:43:11,910
you know what we do have this whole

881
00:43:07,980 --> 00:43:22,139
ridiculous thing so we could do a global

882
00:43:11,909 --> 00:43:24,210
variable b32 global show sort groups and

883
00:43:22,139 --> 00:43:25,889
then you know I'll be honest with you I

884
00:43:24,210 --> 00:43:31,019
don't even remember how that system

885
00:43:25,889 --> 00:43:34,108
works at all but we should be able to do

886
00:43:31,019 --> 00:43:45,259
something where we can just put that if

887
00:43:34,108 --> 00:43:49,588
in here and then that can get enabled I

888
00:43:45,260 --> 00:43:52,050
think oh you know what except it's in

889
00:43:49,588 --> 00:43:56,929
the platform layer how does the platform

890
00:43:52,050 --> 00:43:56,930
layer deal with that I don't remember

891
00:43:58,699 --> 00:44:02,058
little pause

892
00:44:05,659 --> 00:44:12,179
here we go so here's the platform

893
00:44:09,210 --> 00:44:14,900
controls and we have like these two so I

894
00:44:12,179 --> 00:44:28,618
want another one which is you know

895
00:44:14,900 --> 00:44:47,490
global show sort groups and then I can

896
00:44:28,619 --> 00:44:49,608
just put it up here so in theory of

897
00:44:47,489 --> 00:44:52,768
course I have to actually recompile it

898
00:44:49,608 --> 00:44:55,679
but in theory I guess that would let me

899
00:44:52,768 --> 00:45:06,328
toggle them on and off except that's

900
00:44:55,679 --> 00:45:08,629
still wrong but it does work so that's

901
00:45:06,329 --> 00:45:08,630
good

902
00:45:11,489 --> 00:45:19,419
okay uh all right so we're starting to

903
00:45:17,530 --> 00:45:22,030
get there and if we turn it off we can

904
00:45:19,420 --> 00:45:25,210
see that the sort a now appears to be

905
00:45:22,030 --> 00:45:29,620
working at least more correctly right if

906
00:45:25,210 --> 00:45:32,679
not correctly but we have this problem

907
00:45:29,619 --> 00:45:34,539
here and also we don't know what happens

908
00:45:32,679 --> 00:45:38,139
if we add like that's not much of a test

909
00:45:34,539 --> 00:45:41,019
really if we go in here and add the sort

910
00:45:38,139 --> 00:45:43,659
of much more heinous cases here of

911
00:45:41,019 --> 00:45:47,259
having more than one room on top of each

912
00:45:43,659 --> 00:45:50,649
other we you know we get a better idea

913
00:45:47,260 --> 00:45:54,340
of just how far we are from having all

914
00:45:50,650 --> 00:46:02,440
of our sort dreams fulfilled let me go

915
00:45:54,340 --> 00:46:05,890
ahead and hop up here so you know it's

916
00:46:02,440 --> 00:46:08,159
not bad but you can see it's not really

917
00:46:05,889 --> 00:46:08,159
correct

918
00:46:13,940 --> 00:46:19,369
you know there's still a bunch of

919
00:46:15,530 --> 00:46:21,800
problems there so I suspect that we will

920
00:46:19,369 --> 00:46:25,430
probably have to do some looking now at

921
00:46:21,800 --> 00:46:39,560
our sort criteria and then we will also

922
00:46:25,429 --> 00:46:42,949
have to look at the sort cycles so so I

923
00:46:39,559 --> 00:46:47,769
think what I'd like to do now is take a

924
00:46:42,949 --> 00:46:51,348
look and see if we can't draw an

925
00:46:47,769 --> 00:46:54,800
indicator that lets us know when we have

926
00:46:51,349 --> 00:46:57,109
cycle problems right now I'm going to

927
00:46:54,800 --> 00:46:59,000
flip back to Milton for a second here on

928
00:46:57,108 --> 00:47:00,949
the blackboard to just remind you of

929
00:46:59,000 --> 00:47:02,449
what this is because I talked about them

930
00:47:00,949 --> 00:47:05,059
but then we haven't actually dealt with

931
00:47:02,449 --> 00:47:09,799
them yet because this is another problem

932
00:47:05,059 --> 00:47:14,150
there's essentially two sources well 3i

933
00:47:09,800 --> 00:47:15,170
guess sources of error I might as well

934
00:47:14,150 --> 00:47:18,108
write these out while I'm on the

935
00:47:15,170 --> 00:47:21,430
blackboard there are three sources of

936
00:47:18,108 --> 00:47:21,429
error for our sort

937
00:47:26,809 --> 00:47:34,929
okay so what are our sort error sources

938
00:47:29,570 --> 00:47:37,519
well one is just bugs right one is

939
00:47:34,929 --> 00:47:40,669
everything that we talked about and said

940
00:47:37,519 --> 00:47:41,809
and did is correct theoretically but we

941
00:47:40,670 --> 00:47:44,630
made a mistake in the implementation

942
00:47:41,809 --> 00:47:47,420
right like the typo that we fix the

943
00:47:44,630 --> 00:47:49,610
beginning of the stream for example okay

944
00:47:47,420 --> 00:47:56,680
so that's one source of error another

945
00:47:49,610 --> 00:47:56,680
source of error is like bad comparison

946
00:47:58,059 --> 00:48:02,570
because remember we're using an ad hoc

947
00:48:00,440 --> 00:48:04,940
sorting criteria that we kind of made up

948
00:48:02,570 --> 00:48:07,550
about why sprites and Z sprites and how

949
00:48:04,940 --> 00:48:09,320
we sort the two of them together and we

950
00:48:07,550 --> 00:48:11,450
haven't really ever determined that

951
00:48:09,320 --> 00:48:13,220
that's actually a comparison that's

952
00:48:11,449 --> 00:48:15,679
going to work for everything that we

953
00:48:13,219 --> 00:48:18,049
needed to work for and so we may have

954
00:48:15,679 --> 00:48:19,579
cases where actually the problem has

955
00:48:18,050 --> 00:48:21,800
nothing to do with the fact that we've

956
00:48:19,579 --> 00:48:24,019
got a bug it's because the comparison is

957
00:48:21,800 --> 00:48:25,519
operating exactly correctly and the

958
00:48:24,019 --> 00:48:26,989
algorithm is operating correctly but the

959
00:48:25,519 --> 00:48:31,130
comparison is just fundamentally

960
00:48:26,989 --> 00:48:33,589
theoretically unsound and we know that

961
00:48:31,130 --> 00:48:37,340
we could construct cases for that

962
00:48:33,590 --> 00:48:40,220
because we're inherently doing a sort of

963
00:48:37,340 --> 00:48:42,559
hand wavy kind of sort since we're in 2d

964
00:48:40,219 --> 00:48:45,829
and we're representing full 3d objects

965
00:48:42,559 --> 00:48:48,019
with complex sort of interrelations with

966
00:48:45,829 --> 00:48:49,849
just two d cards and those cards can't

967
00:48:48,019 --> 00:48:51,679
capture the real relationship between

968
00:48:49,849 --> 00:48:56,049
these objects that are actually supposed

969
00:48:51,679 --> 00:48:59,899
to be volumes right so we've got that

970
00:48:56,050 --> 00:49:07,820
and then the final one is a you know

971
00:48:59,900 --> 00:49:12,910
graph cycle resolution and by resolution

972
00:49:07,820 --> 00:49:17,390
I mean the act of resolving like resolve

973
00:49:12,909 --> 00:49:20,569
the cycle not resolution like how many

974
00:49:17,389 --> 00:49:22,549
pixels something is right and so what I

975
00:49:20,570 --> 00:49:24,800
mean by graph cycle resolution is we

976
00:49:22,550 --> 00:49:26,870
know that we can end up with things with

977
00:49:24,800 --> 00:49:28,900
a topological sort like this that was

978
00:49:26,869 --> 00:49:31,519
sort of in the diagram shape that I drew

979
00:49:28,900 --> 00:49:33,320
up above it can be much more complicated

980
00:49:31,519 --> 00:49:36,259
certainly but the most simple kind of a

981
00:49:33,320 --> 00:49:39,500
cycle right is I've got a few elements

982
00:49:36,260 --> 00:49:40,400
and they point in a ring and what that

983
00:49:39,500 --> 00:49:44,449
means is

984
00:49:40,400 --> 00:49:47,780
there is no way to actually correctly

985
00:49:44,449 --> 00:49:49,789
sort these objects there's no the sort

986
00:49:47,780 --> 00:49:52,250
criteria doesn't yield a single ordering

987
00:49:49,789 --> 00:49:55,340
it could be that we have some of those

988
00:49:52,250 --> 00:49:57,650
that if we that that the comparison

989
00:49:55,340 --> 00:49:59,180
although that obviously part of that is

990
00:49:57,650 --> 00:50:00,710
that means the comparison isn't great

991
00:49:59,179 --> 00:50:02,449
right because we've created a thing

992
00:50:00,710 --> 00:50:04,010
where it can't really tell us what order

993
00:50:02,449 --> 00:50:07,009
to draw things and that's obviously not

994
00:50:04,010 --> 00:50:09,080
great but it could be that if we had a

995
00:50:07,010 --> 00:50:12,830
more intelligent way of breaking the

996
00:50:09,079 --> 00:50:14,659
cycle then the comparison would still be

997
00:50:12,829 --> 00:50:16,789
okay so it might be that for example

998
00:50:14,659 --> 00:50:19,759
we're choosing to break the cycle here

999
00:50:16,789 --> 00:50:21,980
and draw ABC but really what we should

1000
00:50:19,760 --> 00:50:25,670
have done is done is rogue cycle here

1001
00:50:21,980 --> 00:50:27,079
right and drawn BCA and perhaps I should

1002
00:50:25,670 --> 00:50:28,820
draw it a little differently instead of

1003
00:50:27,079 --> 00:50:31,539
breaking the cycle here we should have

1004
00:50:28,820 --> 00:50:36,200
broken the cycle here right so bc a

1005
00:50:31,539 --> 00:50:39,920
rather than ABC and so who knows that's

1006
00:50:36,199 --> 00:50:43,669
again another place we could potentially

1007
00:50:39,920 --> 00:50:46,820
fix the problem of bad sorting again

1008
00:50:43,670 --> 00:50:49,519
because there is probably no uber

1009
00:50:46,820 --> 00:50:54,010
solution out there for us since we are

1010
00:50:49,519 --> 00:50:54,009
inherently doing a intractable problem

1011
00:50:55,570 --> 00:50:59,930
under specified problem whatever you

1012
00:50:57,739 --> 00:51:03,649
want to call it we don't have the real

1013
00:50:59,929 --> 00:51:05,409
3d objects so we can't do them and with

1014
00:51:03,650 --> 00:51:08,900
a z-buffer or something like this

1015
00:51:05,409 --> 00:51:11,809
alright so that's the possible sources

1016
00:51:08,900 --> 00:51:13,309
of problems and so what I might want to

1017
00:51:11,809 --> 00:51:16,639
do and we've got about five minutes left

1018
00:51:13,309 --> 00:51:18,679
here so what I would like to do is maybe

1019
00:51:16,639 --> 00:51:20,629
just go in real quickly and see if I

1020
00:51:18,679 --> 00:51:23,509
can't in the next five minutes add

1021
00:51:20,630 --> 00:51:27,230
something that will draw graph cycles

1022
00:51:23,510 --> 00:51:29,930
for us so it'll let us know if we have a

1023
00:51:27,230 --> 00:51:35,690
graph cycle somewhere that'll you know

1024
00:51:29,929 --> 00:51:40,369
become clear and so the way I can could

1025
00:51:35,690 --> 00:51:43,059
do that is I could say well I if we go

1026
00:51:40,369 --> 00:51:45,949
over to where we're doing our sorting

1027
00:51:43,059 --> 00:51:48,320
let's take a look at how this algorithm

1028
00:51:45,949 --> 00:51:52,129
works at the moment so what you can see

1029
00:51:48,320 --> 00:51:54,289
when we walk the sprite graph is that

1030
00:51:52,130 --> 00:51:57,318
what we're doing is every time

1031
00:51:54,289 --> 00:52:02,150
we walk on a node we set a sprite

1032
00:51:57,318 --> 00:52:03,588
visited flag that lets us know that we

1033
00:52:02,150 --> 00:52:06,979
shouldn't ever come back through here

1034
00:52:03,588 --> 00:52:11,298
look we've already used it now this is

1035
00:52:06,978 --> 00:52:14,659
really handy but what it means is we

1036
00:52:11,298 --> 00:52:19,068
don't actually know whether if we were

1037
00:52:14,659 --> 00:52:21,618
to traverse through this group whether

1038
00:52:19,068 --> 00:52:23,630
we would hit ourselves again right all

1039
00:52:21,619 --> 00:52:25,969
we know is that somebody touched this at

1040
00:52:23,630 --> 00:52:31,068
some point but it could have been

1041
00:52:25,969 --> 00:52:33,739
another traversal so what we need to do

1042
00:52:31,068 --> 00:52:38,239
here is we need to have a way of knowing

1043
00:52:33,739 --> 00:52:40,608
that we hit it on our traversal meaning

1044
00:52:38,239 --> 00:52:43,369
we started somewhere we went down a path

1045
00:52:40,608 --> 00:52:45,889
and we got back to part of our own path

1046
00:52:43,369 --> 00:52:49,548
again and if we see that then we know we

1047
00:52:45,889 --> 00:52:52,219
have a cycle so how can I do that well

1048
00:52:49,548 --> 00:52:55,159
I've got two ways without really even

1049
00:52:52,219 --> 00:52:57,438
modifying this algorithm pretty much at

1050
00:52:55,159 --> 00:52:59,739
all I can pretty much keep the exact

1051
00:52:57,438 --> 00:53:02,568
same code just change a little bit

1052
00:52:59,739 --> 00:53:03,889
there's two ways I can do that and let

1053
00:53:02,568 --> 00:53:06,288
me show you what each of them are

1054
00:53:03,889 --> 00:53:15,248
because they're both extremely simple to

1055
00:53:06,289 --> 00:53:15,249
do one way is to use a generation tag

1056
00:53:17,349 --> 00:53:22,519
now you saw this already we use it for

1057
00:53:20,059 --> 00:53:24,829
asset tracking where we essentially have

1058
00:53:22,518 --> 00:53:28,458
a number and that number increments and

1059
00:53:24,829 --> 00:53:30,739
we can use that number to see what pass

1060
00:53:28,458 --> 00:53:33,588
through an algorithm something was done

1061
00:53:30,739 --> 00:53:36,650
on so right now we have a flag we have a

1062
00:53:33,588 --> 00:53:39,108
boolean right one bit that means that we

1063
00:53:36,650 --> 00:53:40,999
have one bit we can set and if we only

1064
00:53:39,108 --> 00:53:43,759
have one bit that we can set that means

1065
00:53:40,998 --> 00:53:46,578
we can detect a cycle only in the grand

1066
00:53:43,759 --> 00:53:48,079
scheme of things we can only say as I am

1067
00:53:46,579 --> 00:53:52,579
typing a cycle we can just say whether

1068
00:53:48,079 --> 00:53:55,219
we visit it ever but if instead we set a

1069
00:53:52,579 --> 00:53:59,869
bunch of flags 20 we are we I sorry we

1070
00:53:55,219 --> 00:54:03,858
set a generation tag 20 at startup and

1071
00:53:59,869 --> 00:54:06,140
then every time through we set a that

1072
00:54:03,858 --> 00:54:07,960
tag to if it was 0 we know we can

1073
00:54:06,139 --> 00:54:10,929
process it we set that

1074
00:54:07,960 --> 00:54:13,030
bag to be equal to our generation our

1075
00:54:10,929 --> 00:54:15,250
time through the algorithm right so for

1076
00:54:13,030 --> 00:54:18,310
on past three or whatever or past four

1077
00:54:15,250 --> 00:54:20,858
we set it to that tag then we would know

1078
00:54:18,309 --> 00:54:22,389
when we look at the tag we not only know

1079
00:54:20,858 --> 00:54:24,639
whether we visited but we know if we

1080
00:54:22,389 --> 00:54:26,769
visit it on this time because we visited

1081
00:54:24,639 --> 00:54:33,699
this time its value will be equal to our

1082
00:54:26,769 --> 00:54:41,858
value make sense the other way we can do

1083
00:54:33,699 --> 00:54:43,899
it is with an erasable tag so we have a

1084
00:54:41,858 --> 00:54:47,139
bit that says we have visited this thing

1085
00:54:43,900 --> 00:54:49,329
we need that bit to be permanent right

1086
00:54:47,139 --> 00:54:50,618
because if it's not permanent then the

1087
00:54:49,329 --> 00:54:52,000
next time someone comes through here

1088
00:54:50,619 --> 00:54:53,170
they're going to reach reverse parts of

1089
00:54:52,000 --> 00:54:55,210
the graph that were already traversed

1090
00:54:53,170 --> 00:54:57,280
and that's not what we want we want them

1091
00:54:55,210 --> 00:54:59,170
to just tie back into it right and say

1092
00:54:57,280 --> 00:55:01,330
oh I know that that whole sort already

1093
00:54:59,170 --> 00:55:04,990
happened so just tie in here and be done

1094
00:55:01,329 --> 00:55:06,880
with it right but what that means is we

1095
00:55:04,989 --> 00:55:08,379
can never tell whether it was us who was

1096
00:55:06,880 --> 00:55:09,550
traversing this or somebody else because

1097
00:55:08,380 --> 00:55:12,369
the flag could have been from some

1098
00:55:09,550 --> 00:55:14,560
previous pass will preach some previous

1099
00:55:12,369 --> 00:55:16,750
walk that started on some other sprite

1100
00:55:14,559 --> 00:55:18,940
not us and that doesn't necessarily

1101
00:55:16,750 --> 00:55:21,880
indicate a cycle so what we could do

1102
00:55:18,940 --> 00:55:25,420
instead is have another bit and say this

1103
00:55:21,880 --> 00:55:26,890
bit we're going to set as we walk and if

1104
00:55:25,420 --> 00:55:31,180
we ever hit something with this bit we

1105
00:55:26,889 --> 00:55:34,329
know that we cycled on the way back will

1106
00:55:31,179 --> 00:55:39,069
erase it since I already have a bit

1107
00:55:34,329 --> 00:55:41,799
field I'm just going to use that so I'm

1108
00:55:39,070 --> 00:55:48,280
just going to call this sprite cycle

1109
00:55:41,800 --> 00:55:50,619
check and then I'm also going to do

1110
00:55:48,280 --> 00:55:53,099
something where we just do a sprite

1111
00:55:50,619 --> 00:55:53,099
cycle

1112
00:55:56,809 --> 00:56:01,579
so what we'll do is we'll use the cycle

1113
00:55:58,760 --> 00:56:03,980
check flag to see whether we've gone a

1114
00:56:01,579 --> 00:56:08,809
cycle and we'll use the sprite cycle

1115
00:56:03,980 --> 00:56:10,789
flag to you know well you know what I

1116
00:56:08,809 --> 00:56:13,820
was thinking I guess we don't even need

1117
00:56:10,789 --> 00:56:24,860
two of them I guess we could just use

1118
00:56:13,820 --> 00:56:26,300
one probably well we're out of time so

1119
00:56:24,860 --> 00:56:28,190
let me just quickly throw this in there

1120
00:56:26,300 --> 00:56:30,590
and then we'll worry about how we want

1121
00:56:28,190 --> 00:56:33,409
to deal with it later so when we step

1122
00:56:30,590 --> 00:56:39,050
into this flag here we would we would

1123
00:56:33,409 --> 00:56:40,969
always do an or in to put the cycle flag

1124
00:56:39,050 --> 00:56:44,120
in when we Traverse and then when we

1125
00:56:40,969 --> 00:56:47,329
come out of it after we force the edges

1126
00:56:44,119 --> 00:56:51,039
we would just set it uh we would just

1127
00:56:47,329 --> 00:56:56,480
get rid of it right so we'd say set

1128
00:56:51,039 --> 00:57:00,110
whoops where are you sprite cycle there

1129
00:56:56,480 --> 00:57:03,110
we go we would just say I want to and

1130
00:57:00,110 --> 00:57:08,210
with not this right cycle right so

1131
00:57:03,110 --> 00:57:11,930
though where is it that's the not what

1132
00:57:08,210 --> 00:57:14,960
I'm looking for there we go sorry brain

1133
00:57:11,929 --> 00:57:16,669
fart I'm like where is it you know it's

1134
00:57:14,960 --> 00:57:22,099
been a bad day when you don't until

1135
00:57:16,670 --> 00:57:24,440
where the tilde key is so anyway so on

1136
00:57:22,099 --> 00:57:26,659
the way in will set it on the way out we

1137
00:57:24,440 --> 00:57:28,670
will clear it and what that means is

1138
00:57:26,659 --> 00:57:31,789
that when we get to a particular node

1139
00:57:28,670 --> 00:57:34,909
right before we do anything else we can

1140
00:57:31,789 --> 00:57:38,690
do a check to say if the sprites let

1141
00:57:34,909 --> 00:57:44,690
this right cycle flag is set then we

1142
00:57:38,690 --> 00:57:46,550
know we have a cycle because it'll get

1143
00:57:44,690 --> 00:57:48,550
cleared on the way out of a non cycle

1144
00:57:46,550 --> 00:57:51,440
one and so we know that that's the case

1145
00:57:48,550 --> 00:57:53,840
so now what we need to do is have some

1146
00:57:51,440 --> 00:57:56,360
way of telling that we've hit a cycle

1147
00:57:53,840 --> 00:57:59,150
and we already have this nice handy

1148
00:57:56,360 --> 00:58:01,840
graph lock thing so we can just have a

1149
00:57:59,150 --> 00:58:05,480
thing that says are we in a cycle or not

1150
00:58:01,840 --> 00:58:08,450
right so what I'm going to do is

1151
00:58:05,480 --> 00:58:10,608
essentially poison any group that has a

1152
00:58:08,449 --> 00:58:12,379
cycle with that cycle flag

1153
00:58:10,608 --> 00:58:14,239
and the way that I'm going to do that is

1154
00:58:12,380 --> 00:58:16,818
say okay we're going to start with the

1155
00:58:14,239 --> 00:58:19,400
walk every time we start the walk we're

1156
00:58:16,818 --> 00:58:23,298
going to say that we did not hit a cycle

1157
00:58:19,400 --> 00:58:26,660
and then every time through here we're

1158
00:58:23,298 --> 00:58:33,768
just going to say okay the walks hit

1159
00:58:26,659 --> 00:58:37,998
cycle equals the walk kit cycle or you

1160
00:58:33,768 --> 00:58:40,189
know the flags get set so essentially we

1161
00:58:37,998 --> 00:58:43,038
come in here and we say we know that

1162
00:58:40,190 --> 00:58:47,059
walk hit cycle will be set to true if

1163
00:58:43,039 --> 00:58:50,239
we've hit a cycle and so I'm just gonna

1164
00:58:47,059 --> 00:58:51,950
say and presumably that's a you know

1165
00:58:50,239 --> 00:58:53,778
when we're calling down that wouldn't

1166
00:58:51,949 --> 00:58:56,808
necessarily be relevant anyway but

1167
00:58:53,778 --> 00:58:58,670
either way we're then going to make sure

1168
00:58:56,809 --> 00:59:00,230
that that propagates to everybody else

1169
00:58:58,670 --> 00:59:02,450
so that we know that this is a group

1170
00:59:00,230 --> 00:59:05,690
that cycle so we're going to say okay if

1171
00:59:02,449 --> 00:59:08,358
we hit a cycle or we're in a cycle we

1172
00:59:05,690 --> 00:59:10,759
are going to keep that flag through we

1173
00:59:08,358 --> 00:59:12,710
are in the cycle flag regardless and the

1174
00:59:10,759 --> 00:59:14,838
question is when we come back out do we

1175
00:59:12,710 --> 00:59:19,039
clear it so I'm just going to say if we

1176
00:59:14,838 --> 00:59:22,788
haven't hit a cycle will clear the flag

1177
00:59:19,039 --> 00:59:25,640
on our on our exit right and that should

1178
00:59:22,789 --> 00:59:29,749
leave us with groups that have cycles

1179
00:59:25,639 --> 00:59:32,719
set if there was a cycle in them so we

1180
00:59:29,748 --> 00:59:35,629
can see it does that make sense and

1181
00:59:32,719 --> 00:59:40,759
that's really it and so then if we want

1182
00:59:35,630 --> 00:59:43,249
to draw those and I'll turn this on by

1183
00:59:40,759 --> 00:59:46,568
default all we have to do is look for

1184
00:59:43,248 --> 00:59:49,399
that flag and set the colors accordingly

1185
00:59:46,568 --> 00:59:52,159
so what I'm going to do is probably do

1186
00:59:49,400 --> 00:59:55,329
something a little more drastic when we

1187
00:59:52,159 --> 00:59:57,588
do open Jill draw bounds recursive here

1188
00:59:55,329 --> 01:00:00,109
probably what I'm going to do is say

1189
00:59:57,588 --> 01:00:06,889
before we call that let's actually just

1190
01:00:00,108 --> 01:00:08,989
make it so that we will only draw sets

1191
01:00:06,889 --> 01:00:10,998
that have that so we'll just put another

1192
01:00:08,989 --> 01:00:14,568
thing in here that says oh by the way if

1193
01:00:10,998 --> 01:00:17,088
the flag and cycle isn't such don't draw

1194
01:00:14,568 --> 01:00:21,619
it so just only show me people who hit a

1195
01:00:17,088 --> 01:00:22,880
cycle somewhere so now in theory and of

1196
01:00:21,619 --> 01:00:24,380
course there could be both the lower in

1197
01:00:22,880 --> 01:00:28,278
that

1198
01:00:24,380 --> 01:00:30,410
in theory I would see cycles if we had

1199
01:00:28,278 --> 01:00:32,480
them right they would draw the outlines

1200
01:00:30,409 --> 01:00:34,578
and I don't see any right now which

1201
01:00:32,480 --> 01:00:37,818
means either but we don't have any

1202
01:00:34,579 --> 01:00:42,859
cycles or my algorithm doesn't work

1203
01:00:37,818 --> 01:00:44,389
right so there we go seeing whether or

1204
01:00:42,858 --> 01:00:46,068
not the algorithm works in debugging it

1205
01:00:44,389 --> 01:01:00,409
will be tomorrow's job because we're out

1206
01:00:46,068 --> 01:01:04,960
of time but there you go all right so if

1207
01:01:00,409 --> 01:01:04,960
you have questions I may have answers

1208
01:01:25,159 --> 01:01:33,269
okay for those of you who did not see in

1209
01:01:28,230 --> 01:01:36,469
sohbats amazing quote I highly recommend

1210
01:01:33,269 --> 01:01:36,469
checking it out

1211
01:02:04,449 --> 01:02:10,598
anyone anyone

1212
01:02:25,760 --> 01:02:31,370
having is that a question or a statement

1213
01:02:27,750 --> 01:02:31,369
that looks a lot like a statement

1214
01:02:40,429 --> 01:02:47,259
how do you decide when a problem is

1215
01:02:43,460 --> 01:02:52,490
complex enough to need visualization

1216
01:02:47,260 --> 01:02:57,100
well the answer to that is usually you

1217
01:02:52,489 --> 01:02:57,099
can tell that you're just having that I

1218
01:02:59,289 --> 01:03:05,329
suppose without some sense of intuition

1219
01:03:02,150 --> 01:03:08,720
for it built up with experience it's a

1220
01:03:05,329 --> 01:03:10,369
little bit difficult so I don't want to

1221
01:03:08,719 --> 01:03:13,909
suggest that it's easy it's it's

1222
01:03:10,369 --> 01:03:18,349
probably not but the general sense of it

1223
01:03:13,909 --> 01:03:20,629
is pretty much any bug that you have or

1224
01:03:18,349 --> 01:03:22,549
problem that you have in your head

1225
01:03:20,630 --> 01:03:27,039
you've got some attack skills that you

1226
01:03:22,550 --> 01:03:30,380
use to go after that bug right and

1227
01:03:27,039 --> 01:03:33,139
typically what happens is you think

1228
01:03:30,380 --> 01:03:36,349
about what the sorts of problems could

1229
01:03:33,139 --> 01:03:39,409
be and you think about what you would

1230
01:03:36,349 --> 01:03:44,480
need to do to see if those problems

1231
01:03:39,409 --> 01:03:46,190
existed right and so for example I'll

1232
01:03:44,480 --> 01:03:48,740
take a very simple example that should

1233
01:03:46,190 --> 01:03:52,190
hopefully be easy to relate to for

1234
01:03:48,739 --> 01:03:55,069
example you might have some math code

1235
01:03:52,190 --> 01:03:57,079
and that math code might be doing

1236
01:03:55,070 --> 01:03:59,150
something where certain values in the

1237
01:03:57,079 --> 01:04:01,309
computation should be readily in

1238
01:03:59,150 --> 01:04:03,920
spectabile and easy to figure out if

1239
01:04:01,309 --> 01:04:06,289
they're wrong right we've seen that on

1240
01:04:03,920 --> 01:04:08,450
hammer here a bunch there's not a lot of

1241
01:04:06,289 --> 01:04:10,190
need for visualization in that case

1242
01:04:08,449 --> 01:04:12,049
because stepping through the code in the

1243
01:04:10,190 --> 01:04:13,610
debugger is likely to yield the problem

1244
01:04:12,050 --> 01:04:17,090
there's not a lot of bookkeeping and

1245
01:04:13,610 --> 01:04:19,039
it's just one pass through some math and

1246
01:04:17,090 --> 01:04:23,720
you can see what's happening fairly

1247
01:04:19,039 --> 01:04:25,880
easily right however other types of code

1248
01:04:23,719 --> 01:04:29,569
have a lot to do with big pointer

1249
01:04:25,880 --> 01:04:32,329
restructure II things right or

1250
01:04:29,570 --> 01:04:34,150
relationships between very like lots of

1251
01:04:32,329 --> 01:04:36,199
different objects this sort of stuff and

1252
01:04:34,150 --> 01:04:37,789
when I mean obvious i might mean like

1253
01:04:36,199 --> 01:04:41,439
physical objects like in the game world

1254
01:04:37,789 --> 01:04:44,119
not objects like structures or something

1255
01:04:41,440 --> 01:04:46,220
in those cases when you think about what

1256
01:04:44,119 --> 01:04:49,670
the information is you need to verify

1257
01:04:46,219 --> 01:04:53,269
it's very hard to verify by hand for

1258
01:04:49,670 --> 01:04:54,230
example if you were writing a binary

1259
01:04:53,269 --> 01:04:56,269
tree

1260
01:04:54,230 --> 01:04:58,969
and you're wondering why your binary

1261
01:04:56,269 --> 01:05:01,460
tree code has bugs in it well a binary

1262
01:04:58,969 --> 01:05:03,949
tree might be 300 elements of things

1263
01:05:01,460 --> 01:05:06,108
it's hard to see what your algorithm is

1264
01:05:03,949 --> 01:05:07,879
doing all you see is a bunch of pointers

1265
01:05:06,108 --> 01:05:09,889
and you have to like on a piece of paper

1266
01:05:07,880 --> 01:05:11,809
like write down what the pointers were

1267
01:05:09,889 --> 01:05:13,940
and figure out who was pointing to who

1268
01:05:11,809 --> 01:05:15,049
and okay did was that rotation was

1269
01:05:13,940 --> 01:05:17,659
supposed to move this thing over here I

1270
01:05:15,050 --> 01:05:19,820
did it did it right and so when you

1271
01:05:17,659 --> 01:05:22,489
start to get a lot of interrelated

1272
01:05:19,820 --> 01:05:28,330
things happening over multiple functions

1273
01:05:22,489 --> 01:05:32,419
that tends to be the the kind of thing

1274
01:05:28,329 --> 01:05:33,949
where you need to do some sort of

1275
01:05:32,420 --> 01:05:40,119
visualization work otherwise it's just

1276
01:05:33,949 --> 01:05:40,118
going to take too long to find the bugs

1277
01:05:41,920 --> 01:05:55,510
all right a programming questions let's

1278
01:05:45,829 --> 01:06:00,349
see is the build graph still n squared

1279
01:05:55,510 --> 01:06:12,590
yeah we have not touched that so if you

1280
01:06:00,349 --> 01:06:14,868
look in here inside sword entries you

1281
01:06:12,590 --> 01:06:17,990
will see that we have the builds right

1282
01:06:14,869 --> 01:06:20,920
graph and walk sprite graph code the

1283
01:06:17,989 --> 01:06:25,759
walks right graph code is 0 n i believe

1284
01:06:20,920 --> 01:06:28,970
it's it's roughly 2 m I think cost wise

1285
01:06:25,760 --> 01:06:31,430
and then the build graph code is still n

1286
01:06:28,969 --> 01:06:33,019
squared right because you can send you

1287
01:06:31,429 --> 01:06:38,719
can see it I mean there's no index a

1288
01:06:33,019 --> 01:06:40,699
there's no den Dex be so you know it's a

1289
01:06:38,719 --> 01:06:42,349
little less than two it's a little less

1290
01:06:40,699 --> 01:06:44,899
than N squared obviously because it's

1291
01:06:42,349 --> 01:06:47,329
you it's got this like the n times n

1292
01:06:44,900 --> 01:06:51,019
plus 1 over 2 or whatever it's the it's

1293
01:06:47,329 --> 01:06:54,739
the because we don't have to consider

1294
01:06:51,019 --> 01:06:57,380
the previous nodes it's not really fully

1295
01:06:54,739 --> 01:06:59,659
N squared but it's still proportional to

1296
01:06:57,380 --> 01:07:01,579
N squared so still 0 n squared even

1297
01:06:59,659 --> 01:07:03,049
though it's doing less than N squared

1298
01:07:01,579 --> 01:07:06,340
actual things it's still doing a number

1299
01:07:03,050 --> 01:07:06,340
proportional to N squared

1300
01:07:13,309 --> 01:07:16,820
if that makes sense

1301
01:07:24,570 --> 01:07:28,550
any other programming questions

1302
01:07:31,820 --> 01:07:35,420
programming question

1303
01:07:51,039 --> 01:07:56,619
I said programming questions questions

1304
01:07:55,809 --> 01:08:00,250
that I have nothing to do with

1305
01:07:56,619 --> 01:08:04,529
programming or for the pre stream you

1306
01:08:00,250 --> 01:08:04,530
guys know that you know that's true

1307
01:08:14,659 --> 01:08:22,409
all right I don't see our programming

1308
01:08:16,890 --> 01:08:29,730
question so I'm gonna wrap it up wrap it

1309
01:08:22,409 --> 01:08:31,019
up thank you everyone for joining me for

1310
01:08:29,729 --> 01:08:34,219
another episode of handmade here it's my

1311
01:08:31,020 --> 01:08:36,480
pleasure coding with you as always I

1312
01:08:34,220 --> 01:08:40,529
think we made some good progress on the

1313
01:08:36,479 --> 01:08:42,419
sort today and so yeah I think maybe

1314
01:08:40,529 --> 01:08:44,040
we'll have a good week you know

1315
01:08:42,420 --> 01:08:45,539
hopefully we'll be able to i think it's

1316
01:08:44,039 --> 01:08:47,069
going to be hard work getting because

1317
01:08:45,539 --> 01:08:50,310
anything like this it's kind of a

1318
01:08:47,069 --> 01:08:51,870
nebulous algorithm that's hand wavy like

1319
01:08:50,310 --> 01:08:53,520
2d sprites sorting it's definitely gonna

1320
01:08:51,869 --> 01:08:56,880
be the sort of thing where we sort of

1321
01:08:53,520 --> 01:08:58,980
thing where we have to grind a little

1322
01:08:56,880 --> 01:09:01,588
but you know i'm optimistic about it and

1323
01:08:58,979 --> 01:09:03,869
once it's done it's done so that's good

1324
01:09:01,588 --> 01:09:07,588
too so they made some good progress and

1325
01:09:03,869 --> 01:09:09,358
we'll continue on that this week here is

1326
01:09:07,588 --> 01:09:11,100
what i will say if you want to follow

1327
01:09:09,359 --> 01:09:12,390
along with the source code at home you

1328
01:09:11,100 --> 01:09:14,370
can always pro2 the game on hammer here

1329
01:09:12,390 --> 01:09:16,529
or it comes with a source code there's a

1330
01:09:14,369 --> 01:09:17,849
forum site you can go to if you want to

1331
01:09:16,529 --> 01:09:20,220
ask questions you have a patreon page

1332
01:09:17,850 --> 01:09:21,600
you want support our videos series we

1333
01:09:20,220 --> 01:09:24,088
have a schedule but if you want to catch

1334
01:09:21,600 --> 01:09:26,789
us live and an episode guide if you want

1335
01:09:24,088 --> 01:09:30,720
to catch up on past episodes that is it

1336
01:09:26,789 --> 01:09:32,310
for today I will see you guys tomorrow 8

1337
01:09:30,720 --> 01:09:33,720
p.m. pacific daylight time until then

1338
01:09:32,310 --> 01:09:35,460
have fun programming and i'll see you

1339
01:09:33,720 --> 01:09:37,640
guys on the internet take it easy

1340
01:09:35,460 --> 01:09:37,640
everyone

