1
00:00:01,219 --> 00:00:05,370
hello everyone and welcome to handmade

2
00:00:03,600 --> 00:00:07,949
Hero show where we code a complete game

3
00:00:05,370 --> 00:00:12,059
live on stream now one of the things

4
00:00:07,950 --> 00:00:15,629
that I get asked a lot because we don't

5
00:00:12,058 --> 00:00:17,250
really cover it on handmade hero one of

6
00:00:15,630 --> 00:00:19,170
the things I get asked a lot is what do

7
00:00:17,250 --> 00:00:20,429
you do about source code control right

8
00:00:19,170 --> 00:00:23,130
this is a very common question what do

9
00:00:20,429 --> 00:00:27,140
you do about source code control do you

10
00:00:23,129 --> 00:00:30,419
use git watch you get to store the game

11
00:00:27,140 --> 00:00:34,380
you know what's what's the plan there

12
00:00:30,420 --> 00:00:35,820
right and I haven't addressed it and

13
00:00:34,380 --> 00:00:37,679
it's been you know we've been doing

14
00:00:35,820 --> 00:00:39,329
series for a long time it's great I

15
00:00:37,679 --> 00:00:42,210
loved seeing everyone in the stream

16
00:00:39,329 --> 00:00:45,570
every week and I just felt like at some

17
00:00:42,210 --> 00:00:47,759
point I was gonna have to I was gonna

18
00:00:45,570 --> 00:00:49,200
have to talk to you about how source

19
00:00:47,759 --> 00:00:52,198
code control should work what you should

20
00:00:49,200 --> 00:00:53,850
do that sort of thing so the answer you

21
00:00:52,198 --> 00:00:56,339
know everyone always says switch to get

22
00:00:53,850 --> 00:00:58,379
whenever anyone's having trouble source

23
00:00:56,340 --> 00:01:01,070
code control it's absolutely true it's

24
00:00:58,378 --> 00:01:02,909
obviously the most powerful

25
00:01:01,070 --> 00:01:04,978
industry-standard source code control

26
00:01:02,909 --> 00:01:07,590
out there you've got to know how to use

27
00:01:04,978 --> 00:01:09,750
it and personally I just think people

28
00:01:07,590 --> 00:01:13,049
would be crazy to use anything else now

29
00:01:09,750 --> 00:01:17,819
I understand the reticence that people

30
00:01:13,049 --> 00:01:20,130
have when using git okay because it is

31
00:01:17,819 --> 00:01:23,789
it was a you know it was a hardcore

32
00:01:20,129 --> 00:01:25,829
professional-grade thing you know linus

33
00:01:23,790 --> 00:01:27,439
torvalds or leanest Torvald I'm sorry I

34
00:01:25,829 --> 00:01:31,978
don't know the pronunciations

35
00:01:27,438 --> 00:01:33,269
as well as I should when he was writing

36
00:01:31,978 --> 00:01:34,978
it you know he wanted something for

37
00:01:33,269 --> 00:01:37,109
serious kernel development so you know

38
00:01:34,978 --> 00:01:40,349
this this isn't something that's

39
00:01:37,109 --> 00:01:42,450
supposed to be super friendly or you

40
00:01:40,349 --> 00:01:43,438
know like all fancy GUI or anything like

41
00:01:42,450 --> 00:01:46,049
that you know it's a serious

42
00:01:43,438 --> 00:01:47,368
command-line utility so I understand it

43
00:01:46,049 --> 00:01:48,930
can be daunting and so what I thought

44
00:01:47,368 --> 00:01:52,890
I'd do at the beginning of today's

45
00:01:48,930 --> 00:01:54,840
stream is I just wanted to give people a

46
00:01:52,890 --> 00:01:57,180
little introduction to like if you were

47
00:01:54,840 --> 00:02:00,118
on your own project right and you wanted

48
00:01:57,180 --> 00:02:01,829
to use source code control for it and

49
00:02:00,118 --> 00:02:04,799
you know maybe you're you're a beginner

50
00:02:01,828 --> 00:02:07,078
or maybe you're even intermediate but

51
00:02:04,799 --> 00:02:10,170
you don't like taking a step to get

52
00:02:07,078 --> 00:02:11,909
something as hardcore as get is a little

53
00:02:10,169 --> 00:02:13,500
bit scary for you I just want to

54
00:02:11,909 --> 00:02:16,439
demystify you and

55
00:02:13,500 --> 00:02:17,819
oh that it's really not it you know it

56
00:02:16,439 --> 00:02:19,859
shouldn't be something that's that's

57
00:02:17,819 --> 00:02:22,289
scary so I prepared a little thing here

58
00:02:19,860 --> 00:02:24,750
I made a temp get directory and you know

59
00:02:22,289 --> 00:02:26,669
I I guess folks probably know you know I

60
00:02:24,750 --> 00:02:30,090
did this hash function called meow hash

61
00:02:26,669 --> 00:02:31,859
and I put it up on github now one of the

62
00:02:30,090 --> 00:02:33,360
things about github that you might not

63
00:02:31,860 --> 00:02:36,630
know if you've only ever browse on the

64
00:02:33,360 --> 00:02:38,870
web is it's actually you can use get to

65
00:02:36,629 --> 00:02:42,990
interact directly with it

66
00:02:38,870 --> 00:02:44,670
so if you go to any github page there's

67
00:02:42,990 --> 00:02:49,080
actually this clone or download button

68
00:02:44,669 --> 00:02:52,229
here right and in that window there's

69
00:02:49,080 --> 00:02:54,989
there's a URL and you can use that that

70
00:02:52,229 --> 00:02:56,399
URL with the git command line utility so

71
00:02:54,989 --> 00:03:00,150
what I'm gonna do so I'll show you how

72
00:02:56,400 --> 00:03:01,620
to get that this repository my now

73
00:03:00,150 --> 00:03:02,939
hashed repository I'm going to show you

74
00:03:01,620 --> 00:03:05,250
how to use git to just quickly and

75
00:03:02,939 --> 00:03:07,530
easily just get it onto your machine and

76
00:03:05,250 --> 00:03:09,750
if we counter any problems along the way

77
00:03:07,530 --> 00:03:11,699
I'll show you I'll explain what they

78
00:03:09,750 --> 00:03:15,389
mean and I'll show you how to get around

79
00:03:11,699 --> 00:03:17,759
them okay so let's start with just a

80
00:03:15,389 --> 00:03:20,969
simple the basic thing that you're gonna

81
00:03:17,759 --> 00:03:22,169
want to do for any get thing well you

82
00:03:20,969 --> 00:03:25,169
know what let me let me start a little

83
00:03:22,169 --> 00:03:28,048
bit simpler so if you just type get what

84
00:03:25,169 --> 00:03:29,789
you'll get is this this kind of yeah I

85
00:03:28,049 --> 00:03:31,500
don't want to be pedantic now but I say

86
00:03:29,789 --> 00:03:34,590
it's kind of useless this this is like a

87
00:03:31,500 --> 00:03:38,250
little help screen and it only has the

88
00:03:34,590 --> 00:03:39,900
really basic commands on it right so

89
00:03:38,250 --> 00:03:43,110
these are like sort of the things that

90
00:03:39,900 --> 00:03:45,120
you would most commonly call but anyone

91
00:03:43,110 --> 00:03:47,459
who really uses get seriously knows that

92
00:03:45,120 --> 00:03:48,539
there's if that's not most of the things

93
00:03:47,459 --> 00:03:51,030
you're gonna do are gonna be more

94
00:03:48,539 --> 00:03:53,819
advanced than these commands so these

95
00:03:51,030 --> 00:03:55,709
are really just I would ignore this

96
00:03:53,819 --> 00:03:58,019
screen what you want to do is focus on

97
00:03:55,709 --> 00:04:00,090
this down here if you do get help - a

98
00:03:58,019 --> 00:04:01,980
what that'll do is that'll list all the

99
00:04:00,090 --> 00:04:04,650
commands and get so not just the common

100
00:04:01,979 --> 00:04:06,569
ones so if I do a get help - a what you

101
00:04:04,650 --> 00:04:09,780
can see is that'll that'll list all the

102
00:04:06,569 --> 00:04:12,689
commands that get has has any in toto

103
00:04:09,780 --> 00:04:14,039
right now obviously this listing can go

104
00:04:12,689 --> 00:04:15,299
on for a while because there's a lot of

105
00:04:14,039 --> 00:04:16,680
commands and get I mean one things you

106
00:04:15,299 --> 00:04:18,930
have to understand about get is its its

107
00:04:16,680 --> 00:04:22,168
industry standard now so everyone kind

108
00:04:18,930 --> 00:04:24,360
of has I don't know how to say it but

109
00:04:22,168 --> 00:04:25,918
it's a lot like the Linux kernel right

110
00:04:24,360 --> 00:04:27,000
it started off as something small you'd

111
00:04:25,918 --> 00:04:29,310
space both both

112
00:04:27,000 --> 00:04:33,300
manliest rebels right started off small

113
00:04:29,310 --> 00:04:35,939
then they become a lot more a lot more

114
00:04:33,300 --> 00:04:37,680
widespread a lot more widely used and so

115
00:04:35,939 --> 00:04:39,360
even though originally get probably had

116
00:04:37,680 --> 00:04:41,579
only one hundred two hundred three

117
00:04:39,360 --> 00:04:42,420
hundred commands I think at last count

118
00:04:41,579 --> 00:04:44,219
there's something like three hundred

119
00:04:42,420 --> 00:04:46,500
ninety five thousand commands and get

120
00:04:44,220 --> 00:04:49,560
give or take it depends like do you can

121
00:04:46,500 --> 00:04:51,750
install modules to it so this is just

122
00:04:49,560 --> 00:04:55,410
the baseline version which has I think

123
00:04:51,750 --> 00:04:58,259
the 395 okay some installations can have

124
00:04:55,410 --> 00:05:00,030
1.2 1.3 million but those commands you

125
00:04:58,259 --> 00:05:03,269
don't necessarily need those for

126
00:05:00,029 --> 00:05:05,159
everyday use this this set of 395,000 is

127
00:05:03,269 --> 00:05:08,269
are the ones that you you would

128
00:05:05,160 --> 00:05:10,919
generally be using day-to-day right so I

129
00:05:08,269 --> 00:05:12,810
don't necessarily recommend doing the

130
00:05:10,918 --> 00:05:15,750
1.2 1.3 million route that's just that's

131
00:05:12,810 --> 00:05:18,418
just too many commands and usually with

132
00:05:15,750 --> 00:05:22,079
a combination of some you know 12 13 14

133
00:05:18,418 --> 00:05:23,668
of those 395,000 base set commands you

134
00:05:22,079 --> 00:05:26,189
can usually do what you want and so a

135
00:05:23,668 --> 00:05:30,990
lot of times if you look at the 1.2 1.3

136
00:05:26,189 --> 00:05:33,449
1.4 million commands there those a lot

137
00:05:30,990 --> 00:05:35,639
of them are really just repackaging or

138
00:05:33,449 --> 00:05:37,379
like convenience versions of ones that

139
00:05:35,639 --> 00:05:38,789
you already have in the base you know

140
00:05:37,379 --> 00:05:42,360
set that's they're relatively concise

141
00:05:38,790 --> 00:05:44,610
you know for decay set set of commands

142
00:05:42,360 --> 00:05:46,560
this this listing can take a while this

143
00:05:44,610 --> 00:05:48,750
is mostly Windows it doesn't have a very

144
00:05:46,560 --> 00:05:50,129
efficient command line as you know Linux

145
00:05:48,750 --> 00:05:51,209
novice to the place for command line so

146
00:05:50,129 --> 00:05:53,668
this could go on for a while so I'm

147
00:05:51,209 --> 00:05:56,189
gonna control see out of this you don't

148
00:05:53,668 --> 00:05:57,990
really need to know all of these just

149
00:05:56,189 --> 00:05:59,430
yet you will want to go through every

150
00:05:57,990 --> 00:06:01,978
single one of these commands eventually

151
00:05:59,430 --> 00:06:04,168
and really familiarize yourself with

152
00:06:01,978 --> 00:06:06,569
what each of them can do because

153
00:06:04,168 --> 00:06:08,728
otherwise you're really not using it to

154
00:06:06,569 --> 00:06:10,409
its fullest potential so you do want to

155
00:06:08,728 --> 00:06:12,300
look at that list obviously you can pipe

156
00:06:10,410 --> 00:06:13,950
it to more or something if you want to

157
00:06:12,300 --> 00:06:15,780
page through it one at a time it only

158
00:06:13,949 --> 00:06:17,699
takes a couple weeks to get through that

159
00:06:15,779 --> 00:06:19,019
whole list obviously I've done it before

160
00:06:17,699 --> 00:06:20,339
it's really and it's pretty eye-opening

161
00:06:19,019 --> 00:06:22,949
because a lot of stuff in there that you

162
00:06:20,339 --> 00:06:24,689
wouldn't necessarily know about so

163
00:06:22,949 --> 00:06:25,860
anyway like I was saying we want to do

164
00:06:24,689 --> 00:06:28,439
is you want to start with a really basic

165
00:06:25,860 --> 00:06:29,580
get command it's called git clone and

166
00:06:28,439 --> 00:06:33,269
what we're gonna do is we're just gonna

167
00:06:29,579 --> 00:06:35,459
take this this URL here that's provided

168
00:06:33,269 --> 00:06:38,069
for you you know it's part of the the

169
00:06:35,459 --> 00:06:40,589
github repository I'm just gonna paste

170
00:06:38,069 --> 00:06:42,719
it in and that's it right

171
00:06:40,589 --> 00:06:44,339
so again people say that gets scary I

172
00:06:42,720 --> 00:06:46,170
don't know why they say that it's not

173
00:06:44,339 --> 00:06:48,389
you know that that line right there will

174
00:06:46,170 --> 00:06:51,720
get you all the code so you just hit

175
00:06:48,389 --> 00:06:54,089
return and it'll do it right and then

176
00:06:51,720 --> 00:06:56,370
one of the things this happens a lot to

177
00:06:54,089 --> 00:06:58,289
people is they'll start using the

178
00:06:56,370 --> 00:07:01,139
repository right away after they do the

179
00:06:58,290 --> 00:07:02,760
clone and I really don't recommend that

180
00:07:01,139 --> 00:07:05,519
that's a source of a lot of problems for

181
00:07:02,759 --> 00:07:08,339
people because typically what happens is

182
00:07:05,519 --> 00:07:11,459
if you if you clone a repository all

183
00:07:08,339 --> 00:07:14,369
that's doing is moving the files onto

184
00:07:11,459 --> 00:07:17,189
your machine right but you still haven't

185
00:07:14,370 --> 00:07:19,050
done anything yet to make sure that

186
00:07:17,189 --> 00:07:21,629
those files are actually ready to be

187
00:07:19,050 --> 00:07:25,620
used right it's just it's just a copy

188
00:07:21,629 --> 00:07:27,329
it's not like a preparation and so what

189
00:07:25,620 --> 00:07:29,459
you really want to do to make sure that

190
00:07:27,329 --> 00:07:31,319
everything is ready to go and you can

191
00:07:29,459 --> 00:07:33,120
actually start adding them is you want

192
00:07:31,319 --> 00:07:34,769
to use the command called get less and

193
00:07:33,120 --> 00:07:37,290
what get less does is it takes the

194
00:07:34,769 --> 00:07:40,680
repository that you're in and it goes

195
00:07:37,290 --> 00:07:42,689
through every file and make sure that in

196
00:07:40,680 --> 00:07:45,750
a spiritual sense you're ready to edit

197
00:07:42,689 --> 00:07:47,730
that file without get getting confused

198
00:07:45,750 --> 00:07:49,350
about what the file supposed to do right

199
00:07:47,730 --> 00:07:51,000
so it's kind of like it's it's like a

200
00:07:49,350 --> 00:07:52,350
just like an the reason is called

201
00:07:51,000 --> 00:07:53,639
blessed is kind of like likening it to a

202
00:07:52,350 --> 00:07:55,439
religious sir my allow you out there

203
00:07:53,639 --> 00:07:56,610
probably atheists or whatever I do so I

204
00:07:55,439 --> 00:07:58,230
don't want to imply there's like any

205
00:07:56,610 --> 00:08:00,360
real reason behind it anyone can use

206
00:07:58,230 --> 00:08:02,430
this command regard it's

207
00:08:00,360 --> 00:08:04,259
nondenominational but it's it's just

208
00:08:02,430 --> 00:08:06,420
evoking that sort of preparation right

209
00:08:04,259 --> 00:08:09,120
you know don't you're you don't want to

210
00:08:06,420 --> 00:08:10,860
do the animal sacrifice before you have

211
00:08:09,120 --> 00:08:12,180
the holy water or whatever right you

212
00:08:10,860 --> 00:08:13,889
know I don't know I'm not familiar with

213
00:08:12,180 --> 00:08:16,199
how these things go the same is true

214
00:08:13,889 --> 00:08:18,029
with get you want to make sure the code

215
00:08:16,199 --> 00:08:19,860
is blessed before you modify it

216
00:08:18,029 --> 00:08:21,809
otherwise when you go to do subsequent

217
00:08:19,860 --> 00:08:24,120
get commands who knows what could happen

218
00:08:21,810 --> 00:08:25,889
right I mean you've more or less anger

219
00:08:24,120 --> 00:08:28,079
of the gods at that point so if you want

220
00:08:25,889 --> 00:08:30,689
to do is do a get bless and you can just

221
00:08:28,079 --> 00:08:32,069
hit get bless return here but I'm

222
00:08:30,689 --> 00:08:33,960
actually use a couple switches to get

223
00:08:32,070 --> 00:08:36,690
blessed because in order to do get

224
00:08:33,960 --> 00:08:40,070
blessed properly I I want to do a couple

225
00:08:36,690 --> 00:08:44,610
things so I'm gonna actually do a CPP

226
00:08:40,070 --> 00:08:46,650
reverse gardening on this one and what

227
00:08:44,610 --> 00:08:48,930
that'll do is if you do CBP reverse

228
00:08:46,649 --> 00:08:51,209
gardening so I should say first before

229
00:08:48,929 --> 00:08:52,559
we get too far down that rathole I'm not

230
00:08:51,210 --> 00:08:54,450
going to cover like exactly what

231
00:08:52,559 --> 00:08:56,069
gardening is

232
00:08:54,450 --> 00:08:59,330
but gardening involves essentially

233
00:08:56,070 --> 00:09:01,110
leaving space between the files if you

234
00:08:59,330 --> 00:09:02,580
normally what will happen there's a

235
00:09:01,110 --> 00:09:03,870
default level of gardening so when the

236
00:09:02,580 --> 00:09:05,700
files get placed in directories there's

237
00:09:03,870 --> 00:09:08,310
a certain amount of empty space in

238
00:09:05,700 --> 00:09:10,980
between them and that's that's if you

239
00:09:08,309 --> 00:09:13,649
want your code to go to seed right after

240
00:09:10,980 --> 00:09:14,580
so that it will produce smaller versions

241
00:09:13,649 --> 00:09:16,620
of itself

242
00:09:14,580 --> 00:09:18,450
subsequently if you want get to do that

243
00:09:16,620 --> 00:09:20,940
as it you know as it builds hashes and

244
00:09:18,450 --> 00:09:23,580
stories back up versions of files you

245
00:09:20,940 --> 00:09:24,840
want that empty space in there I'm call

246
00:09:23,580 --> 00:09:27,629
me old-fashioned I don't like to use a

247
00:09:24,840 --> 00:09:30,000
lot of space on the drive so I use

248
00:09:27,629 --> 00:09:31,529
reverse gardening and basically what you

249
00:09:30,000 --> 00:09:33,929
do is if you say the language that

250
00:09:31,529 --> 00:09:37,169
you're using so CPP and then you do

251
00:09:33,929 --> 00:09:41,069
reverse gardening it'll say for all CPP

252
00:09:37,169 --> 00:09:42,419
files take the amount take the space

253
00:09:41,070 --> 00:09:44,850
that you would have been using and

254
00:09:42,419 --> 00:09:46,679
actually reclaim that for other purposes

255
00:09:44,850 --> 00:09:48,029
so I like to do a git Buster's he'd be

256
00:09:46,679 --> 00:09:51,959
really starting to reduce the gardening

257
00:09:48,029 --> 00:09:54,839
and then I also like to do a fallow Rose

258
00:09:51,960 --> 00:09:57,000
heavy write which lets it know that on

259
00:09:54,840 --> 00:09:59,310
every other row that normally you would

260
00:09:57,000 --> 00:10:02,549
be saving for the next time right that

261
00:09:59,309 --> 00:10:04,739
you do a get bless that these are going

262
00:10:02,549 --> 00:10:06,359
to be planted at the normal density that

263
00:10:04,740 --> 00:10:09,899
they would have been right so when you

264
00:10:06,360 --> 00:10:11,610
do that get planting and then finally

265
00:10:09,899 --> 00:10:13,949
what I like to do is I like to do this

266
00:10:11,610 --> 00:10:15,720
you can do this two ways you can do it

267
00:10:13,950 --> 00:10:17,759
the normal way you can do it retrograde

268
00:10:15,720 --> 00:10:21,180
so if you do it retrograde it'll start

269
00:10:17,759 --> 00:10:23,970
at the farthest row for gardening and it

270
00:10:21,179 --> 00:10:25,679
will go backwards whereas if you were

271
00:10:23,970 --> 00:10:27,509
going to do it the normal way you

272
00:10:25,679 --> 00:10:30,029
wouldn't have any of that reverse motion

273
00:10:27,509 --> 00:10:31,740
right so I'm going to do the get blessed

274
00:10:30,029 --> 00:10:32,970
in this repository as you can see it's

275
00:10:31,740 --> 00:10:35,370
just going to go through its gonna do

276
00:10:32,970 --> 00:10:36,750
some credentials checks it's got a make

277
00:10:35,370 --> 00:10:38,909
room for the changes and that sort of

278
00:10:36,750 --> 00:10:42,870
thing and and branches and caches up ok

279
00:10:38,909 --> 00:10:44,339
so again one of the things that happens

280
00:10:42,870 --> 00:10:47,250
and get it it's definitely something

281
00:10:44,340 --> 00:10:48,660
that people again it puts people off I

282
00:10:47,250 --> 00:10:50,909
don't think they should be scared about

283
00:10:48,659 --> 00:10:53,250
sort of things the error messages are a

284
00:10:50,909 --> 00:10:54,809
little bit cryptic right errors and get

285
00:10:53,250 --> 00:10:56,039
happen all the time especially when

286
00:10:54,809 --> 00:10:57,149
you're working with a public or posit

287
00:10:56,039 --> 00:10:59,399
ori because remember you're taking

288
00:10:57,149 --> 00:11:02,009
you're taking a repository that was made

289
00:10:59,399 --> 00:11:03,509
on someone else's machine or even on

290
00:11:02,009 --> 00:11:04,830
your own which you know if you if you

291
00:11:03,509 --> 00:11:05,939
have a multi machine environment you

292
00:11:04,830 --> 00:11:07,379
made it but you may not a different

293
00:11:05,940 --> 00:11:09,689
machine you're moving it to a new

294
00:11:07,379 --> 00:11:11,099
and so just the environments are a

295
00:11:09,688 --> 00:11:13,318
little bit different so even if you're

296
00:11:11,099 --> 00:11:16,399
doing fairly standard stuff like get

297
00:11:13,318 --> 00:11:18,719
clone or get bless sometimes you can get

298
00:11:16,399 --> 00:11:20,339
basically you can get these these errors

299
00:11:18,720 --> 00:11:22,619
that crop up they're just they're not a

300
00:11:20,339 --> 00:11:24,449
big deal so I really encourage you to

301
00:11:22,619 --> 00:11:26,939
not get scared just read the error

302
00:11:24,448 --> 00:11:29,158
message and usually what it says is the

303
00:11:26,938 --> 00:11:31,438
problem right so you can see here it

304
00:11:29,158 --> 00:11:33,958
says that on revert mail would overwrite

305
00:11:31,438 --> 00:11:36,808
previous D get tree right and all that

306
00:11:33,958 --> 00:11:39,328
means is we did to get operations right

307
00:11:36,808 --> 00:11:41,458
so that first clone in that first clone

308
00:11:39,328 --> 00:11:44,248
operation there's a ton of stuff that

309
00:11:41,458 --> 00:11:46,498
has to happen so one step of the clone

310
00:11:44,249 --> 00:11:47,729
operation is called get tree right and

311
00:11:46,499 --> 00:11:50,449
that's the thing that actually brings

312
00:11:47,729 --> 00:11:53,999
the remote repository on to your system

313
00:11:50,448 --> 00:11:55,798
okay that D get tree operation is just

314
00:11:53,999 --> 00:11:57,509
the reverse of that because after you've

315
00:11:55,798 --> 00:12:00,328
gotten the tree you need to like

316
00:11:57,509 --> 00:12:02,938
effectively undo that operation of the D

317
00:12:00,328 --> 00:12:04,618
get right that tree otherwise you still

318
00:12:02,938 --> 00:12:07,198
have the tree in addition to the files

319
00:12:04,619 --> 00:12:09,509
which you don't want right and so in

320
00:12:07,198 --> 00:12:12,658
this case what it's basically saying is

321
00:12:09,509 --> 00:12:14,399
that I didn't set up any mailing system

322
00:12:12,658 --> 00:12:15,958
normally whenever you do it get bless

323
00:12:14,399 --> 00:12:18,178
it'll send mail to everyone in the

324
00:12:15,958 --> 00:12:20,278
blessings list so that each one of those

325
00:12:18,178 --> 00:12:22,649
people knows that the source code has

326
00:12:20,278 --> 00:12:24,208
been blessed right it's a little bit

327
00:12:22,649 --> 00:12:26,970
like a papal edict or something so that

328
00:12:24,208 --> 00:12:30,838
everyone knows within that sort of

329
00:12:26,970 --> 00:12:32,668
blessing circle who everyone's been

330
00:12:30,839 --> 00:12:34,379
notified so nobody thinks have to bless

331
00:12:32,668 --> 00:12:36,088
it twice they know it you don't want to

332
00:12:34,379 --> 00:12:38,459
waste time re blessing code that's

333
00:12:36,089 --> 00:12:40,889
already been blessed so what is trying

334
00:12:38,458 --> 00:12:44,099
to do here right is it's trying to Unruh

335
00:12:40,889 --> 00:12:45,749
Verte the mail changes that it thinks

336
00:12:44,100 --> 00:12:47,129
have happened because normally when you

337
00:12:45,749 --> 00:12:49,470
do a get bless you've been through a

338
00:12:47,129 --> 00:12:51,089
couple different mail cycles and what

339
00:12:49,470 --> 00:12:53,609
it's realizing is that it's doing that

340
00:12:51,089 --> 00:12:56,579
right after a D get tree operation and

341
00:12:53,609 --> 00:12:58,288
if you try to under it the mail list the

342
00:12:56,578 --> 00:12:59,998
mail like blessing list or any other

343
00:12:58,288 --> 00:13:04,288
mail list there's there's something like

344
00:12:59,999 --> 00:13:05,548
75 different mail list types in git and

345
00:13:04,288 --> 00:13:08,038
this one in particular is talking about

346
00:13:05,548 --> 00:13:09,389
the blessing mailing list because that's

347
00:13:08,038 --> 00:13:10,588
the one that we're doing obviously but

348
00:13:09,389 --> 00:13:12,418
you know if there's what there's

349
00:13:10,589 --> 00:13:15,269
different ones for different commands so

350
00:13:12,418 --> 00:13:18,088
if the Unruh Verte mail operation would

351
00:13:15,269 --> 00:13:19,139
overwrite that the the situation that

352
00:13:18,089 --> 00:13:19,930
would have happened with the diga tree

353
00:13:19,139 --> 00:13:22,389
where it moved it out of

354
00:13:19,929 --> 00:13:25,239
the way right that creates an era

355
00:13:22,389 --> 00:13:27,069
scenario it's again it's easy as pie to

356
00:13:25,240 --> 00:13:30,009
solve these four these are not hard all

357
00:13:27,070 --> 00:13:32,620
you have to do is call the Unruh vert

358
00:13:30,009 --> 00:13:34,659
mail with a force command so if you just

359
00:13:32,620 --> 00:13:36,669
say look I do want to Unruh vert mail

360
00:13:34,659 --> 00:13:40,120
alright cuz that's what it thinks we do

361
00:13:36,669 --> 00:13:42,909
just do - - ignore D get three warnings

362
00:13:40,120 --> 00:13:45,459
right that will stop that and you can

363
00:13:42,909 --> 00:13:46,870
see also in there's a secondary note

364
00:13:45,458 --> 00:13:49,569
that says that the latest protein or

365
00:13:46,870 --> 00:13:51,639
quilt and it gives you that mail address

366
00:13:49,570 --> 00:13:53,709
right the one that's that was the mail

367
00:13:51,639 --> 00:13:56,289
it was on when it realized that it

368
00:13:53,708 --> 00:13:58,659
couldn't unrevealing do you get tree

369
00:13:56,289 --> 00:14:01,360
that occurred right so what's gonna

370
00:13:58,659 --> 00:14:04,149
happen here is you need to first ignore

371
00:14:01,360 --> 00:14:06,129
those bigotry warnings and then what you

372
00:14:04,149 --> 00:14:08,860
want to do is look at the secondary list

373
00:14:06,129 --> 00:14:10,899
and so in that case quilting is a thing

374
00:14:08,860 --> 00:14:13,149
that happens and get that I don't really

375
00:14:10,899 --> 00:14:14,528
it's sort of like gardening I don't want

376
00:14:13,149 --> 00:14:16,419
to go down the whole rat hole but

377
00:14:14,528 --> 00:14:18,490
basically what it is is it's for its for

378
00:14:16,419 --> 00:14:20,379
taking disparate pieces of the source

379
00:14:18,490 --> 00:14:22,089
tree and basically you know stitching

380
00:14:20,379 --> 00:14:24,700
them together right it's kind of a get

381
00:14:22,089 --> 00:14:26,320
term of art and so there's there's a

382
00:14:24,700 --> 00:14:27,730
multiple different ways there's a pre

383
00:14:26,320 --> 00:14:29,500
ignore there's a post ignore there's a

384
00:14:27,730 --> 00:14:31,899
pro ignore which is basically like I

385
00:14:29,500 --> 00:14:34,570
have mindset to doing all of the like

386
00:14:31,899 --> 00:14:37,480
advanced feature levels so if you if you

387
00:14:34,570 --> 00:14:38,800
have your get configured to be doing the

388
00:14:37,480 --> 00:14:40,480
most advanced version of all the

389
00:14:38,799 --> 00:14:43,000
commands you're gonna get Pro ignore

390
00:14:40,480 --> 00:14:44,649
messages you can get a matured in your

391
00:14:43,000 --> 00:14:47,379
messages if you have yours on the normal

392
00:14:44,649 --> 00:14:49,539
level also porcelain ignore messages so

393
00:14:47,379 --> 00:14:52,419
probe ignore quilt is just saying that

394
00:14:49,539 --> 00:14:54,490
the the thing that was telling it that

395
00:14:52,419 --> 00:14:58,240
it didn't need to worry about quilt

396
00:14:54,490 --> 00:15:01,389
operations right on that particular mail

397
00:14:58,240 --> 00:15:03,070
was the thing that triggered the mail

398
00:15:01,389 --> 00:15:05,889
conflict the under route mail Condor

399
00:15:03,070 --> 00:15:08,200
with the diga tree so even though get

400
00:15:05,889 --> 00:15:10,958
under route mail - - ignored to get tree

401
00:15:08,200 --> 00:15:13,209
warnings probably would work here I also

402
00:15:10,958 --> 00:15:16,028
want to give it a few quilt directives

403
00:15:13,208 --> 00:15:18,849
just so it knows that that's not a

404
00:15:16,028 --> 00:15:22,299
stopping factor right so I'm just gonna

405
00:15:18,850 --> 00:15:24,610
go ahead and do a - - quilt always which

406
00:15:22,299 --> 00:15:28,299
is basically saying look don't ignore

407
00:15:24,610 --> 00:15:29,589
the quilting Pro or otherwise just do

408
00:15:28,299 --> 00:15:31,719
the quilt thing you would normally do

409
00:15:29,589 --> 00:15:32,920
regardless of what else happened right

410
00:15:31,720 --> 00:15:37,028
and then I'm also

411
00:15:32,919 --> 00:15:39,490
to do a - - um skip mail and I'm just

412
00:15:37,028 --> 00:15:41,289
gonna type in this exact you really want

413
00:15:39,490 --> 00:15:42,730
to make sure this exact if you have this

414
00:15:41,289 --> 00:15:44,620
is one of those things that people can

415
00:15:42,730 --> 00:15:46,778
really get in trouble if you do a skip

416
00:15:44,620 --> 00:15:49,659
mail and then you put anything other

417
00:15:46,778 --> 00:15:53,740
than like a real mail hash in there that

418
00:15:49,659 --> 00:15:55,149
can easily delete lots of existing work

419
00:15:53,740 --> 00:15:57,100
that you've done so you want to make

420
00:15:55,149 --> 00:15:59,470
sure that you really like like don't

421
00:15:57,100 --> 00:16:01,329
take a second when you do a skip mail

422
00:15:59,470 --> 00:16:04,660
directive and just make sure that you're

423
00:16:01,328 --> 00:16:06,458
typing that 100% accurate okay so now

424
00:16:04,659 --> 00:16:08,110
we're gonna do that unruhe vert mail and

425
00:16:06,458 --> 00:16:10,619
and we'll just I think this will be fine

426
00:16:08,110 --> 00:16:13,149
now just sometimes it'll take okay so

427
00:16:10,620 --> 00:16:18,610
one of the other problems that you will

428
00:16:13,149 --> 00:16:20,320
see is that get always is gonna build a

429
00:16:18,610 --> 00:16:22,870
thing there's there's essentially graphs

430
00:16:20,320 --> 00:16:23,980
underlying each get operation if you

431
00:16:22,870 --> 00:16:26,740
think about what's happening

432
00:16:23,980 --> 00:16:29,860
conceptually in a get operation what it

433
00:16:26,740 --> 00:16:32,470
is is it builds sort of a set of nodes

434
00:16:29,860 --> 00:16:34,509
that are the possible states that the

435
00:16:32,470 --> 00:16:36,459
source tree could be in and then what

436
00:16:34,509 --> 00:16:39,789
it's gonna do is this gonna build a

437
00:16:36,458 --> 00:16:43,299
graph of the path through those states

438
00:16:39,789 --> 00:16:45,519
it wants to take ideally to solve the

439
00:16:43,299 --> 00:16:46,659
math solve to do the command that you're

440
00:16:45,519 --> 00:16:49,509
telling to do like in this case the

441
00:16:46,659 --> 00:16:52,480
Unruh route mail right um so in this

442
00:16:49,509 --> 00:16:56,470
case it built one of those graft subsets

443
00:16:52,480 --> 00:16:58,449
that it wanted to use right and when it

444
00:16:56,470 --> 00:17:01,449
traversed through it when it was done it

445
00:16:58,448 --> 00:17:03,879
was not able to remove that graph from

446
00:17:01,448 --> 00:17:06,399
the tree that's the unset up graph pass

447
00:17:03,879 --> 00:17:09,490
is the thing that removes finished graft

448
00:17:06,400 --> 00:17:12,130
sections from the complete graph before

449
00:17:09,490 --> 00:17:14,529
the command is over because again it

450
00:17:12,130 --> 00:17:16,630
really doesn't want you to lose work I

451
00:17:14,529 --> 00:17:18,160
mean it wants the work you lose to be

452
00:17:16,630 --> 00:17:20,860
your fault I guess is the way to say it

453
00:17:18,160 --> 00:17:25,569
obviously it loses work all the time it

454
00:17:20,859 --> 00:17:27,698
wants that work to be verifiable so if

455
00:17:25,568 --> 00:17:29,798
it can't set up all the graphs in the

456
00:17:27,699 --> 00:17:32,558
graph step then it's not going to do it

457
00:17:29,798 --> 00:17:35,230
this usually happens because the graph

458
00:17:32,558 --> 00:17:37,359
state got partially held over from a

459
00:17:35,230 --> 00:17:39,069
previous command there's a thing called

460
00:17:37,359 --> 00:17:40,629
graph forwarding that happens

461
00:17:39,069 --> 00:17:42,189
automatically

462
00:17:40,630 --> 00:17:44,590
it's basically there to save you time

463
00:17:42,190 --> 00:17:46,779
but sometimes it actually creates errors

464
00:17:44,589 --> 00:17:48,669
like in this case so what you want

465
00:17:46,779 --> 00:17:50,769
here is pretty simple it's just there's

466
00:17:48,670 --> 00:17:52,779
a get reset operation what that does it

467
00:17:50,769 --> 00:17:55,269
says clear everything right just clear

468
00:17:52,779 --> 00:17:58,450
all the states I don't hold over the

469
00:17:55,269 --> 00:18:00,789
graphs but one of the things is if you

470
00:17:58,450 --> 00:18:02,200
are in pro mode so you probably haven't

471
00:18:00,789 --> 00:18:03,460
set your thing up for this so you won't

472
00:18:02,200 --> 00:18:06,670
have to use these switches but if you're

473
00:18:03,460 --> 00:18:09,009
in Pro Mode graph reset by default I'm

474
00:18:06,670 --> 00:18:11,769
sorry get reset by default won't do a

475
00:18:09,009 --> 00:18:14,170
full graph reset it'll do what's called

476
00:18:11,769 --> 00:18:16,779
a hermeneutic graph reset which is

477
00:18:14,170 --> 00:18:20,350
basically the same as a normal graph

478
00:18:16,779 --> 00:18:22,720
reset but it won't get on revert mail

479
00:18:20,349 --> 00:18:24,789
items right because it assumes that the

480
00:18:22,720 --> 00:18:26,829
mail cluster and who you're sending mail

481
00:18:24,789 --> 00:18:28,029
to is not what you're trying to set

482
00:18:26,829 --> 00:18:30,460
you're just trying to set the file state

483
00:18:28,029 --> 00:18:33,730
so what I need to do here is do no

484
00:18:30,460 --> 00:18:35,049
hermeneutic right so that way when it

485
00:18:33,730 --> 00:18:36,640
does the reset it's not gonna do a

486
00:18:35,049 --> 00:18:38,980
hermeneutic graph resets gonna do a real

487
00:18:36,640 --> 00:18:40,810
full graph reset and then the other

488
00:18:38,980 --> 00:18:43,269
thing you should always do here is force

489
00:18:40,809 --> 00:18:45,099
right because otherwise if you did the

490
00:18:43,269 --> 00:18:46,660
new hermeneutics it might warn you that

491
00:18:45,099 --> 00:18:50,529
like there would have been a Herman in a

492
00:18:46,660 --> 00:18:52,600
crime saying like no force right okay so

493
00:18:50,529 --> 00:18:54,369
it's doing it alright so I think we're

494
00:18:52,599 --> 00:18:56,889
basically done I know this is making get

495
00:18:54,369 --> 00:18:58,929
probably look harder than it really is

496
00:18:56,890 --> 00:19:00,580
but these are just just what happens

497
00:18:58,930 --> 00:19:02,529
right you saw there's no weirdness going

498
00:19:00,579 --> 00:19:04,329
on here right just when you're trying to

499
00:19:02,529 --> 00:19:05,680
sync a source tree for the first time

500
00:19:04,329 --> 00:19:08,319
there's a lot of stuff that can go wrong

501
00:19:05,680 --> 00:19:09,730
alright so in here you can see we're

502
00:19:08,319 --> 00:19:12,869
having a particular problem with the try

503
00:19:09,730 --> 00:19:16,180
hash now there's three or four levels of

504
00:19:12,869 --> 00:19:17,469
hashing and get you don't probably need

505
00:19:16,180 --> 00:19:18,490
to consider yourself too much with each

506
00:19:17,470 --> 00:19:20,920
individual one

507
00:19:18,490 --> 00:19:22,930
there's the primary hashes there's by

508
00:19:20,920 --> 00:19:24,700
hashes and there's try hashes now the

509
00:19:22,930 --> 00:19:27,519
primary hashes are hashes that actually

510
00:19:24,700 --> 00:19:28,509
come from your files by hashes are when

511
00:19:27,519 --> 00:19:31,389
getting used to look at two different

512
00:19:28,509 --> 00:19:34,359
files and combine their hashes into one

513
00:19:31,390 --> 00:19:37,690
hash and then a try hash is when that by

514
00:19:34,359 --> 00:19:39,219
hash gets combined with two other by

515
00:19:37,690 --> 00:19:41,710
hashes now this is a common mistake

516
00:19:39,220 --> 00:19:44,440
people often think a try hash is a

517
00:19:41,710 --> 00:19:47,380
combination of three regular hashes it's

518
00:19:44,440 --> 00:19:51,789
not a try hash is a combination of three

519
00:19:47,380 --> 00:19:55,120
by hashes so it's really like a six-way

520
00:19:51,789 --> 00:19:57,670
hash but try hash was just the term that

521
00:19:55,119 --> 00:20:00,399
sort of stuck so we still call them try

522
00:19:57,670 --> 00:20:04,090
hashes and there is no real get term

523
00:20:00,400 --> 00:20:05,620
for three hashes that were normal hashes

524
00:20:04,089 --> 00:20:08,829
combined together a lot of people call

525
00:20:05,619 --> 00:20:10,599
it a 3x hash but you know it's again

526
00:20:08,829 --> 00:20:11,259
it's not baked into the program so it's

527
00:20:10,599 --> 00:20:13,058
kind of just

528
00:20:11,259 --> 00:20:15,579
that's vernacular at that point right

529
00:20:13,058 --> 00:20:18,539
now again this was happening because we

530
00:20:15,579 --> 00:20:21,250
tried to do resetting of that mail graph

531
00:20:18,539 --> 00:20:23,649
basically what it's saying is when it

532
00:20:21,250 --> 00:20:26,200
was trying to record all of the hashes

533
00:20:23,650 --> 00:20:29,170
of those file graphs that it was

534
00:20:26,200 --> 00:20:31,450
producing in order to undo the

535
00:20:29,170 --> 00:20:34,330
hermeneutic graph holdover from the

536
00:20:31,450 --> 00:20:35,500
revert mail now obviously I use IMAP for

537
00:20:34,329 --> 00:20:38,710
mail that's where you're getting this in

538
00:20:35,500 --> 00:20:42,429
here right um one of the things that you

539
00:20:38,710 --> 00:20:44,679
run into is it divides the mail servers

540
00:20:42,429 --> 00:20:47,950
that it can talk to into a few different

541
00:20:44,679 --> 00:20:50,230
types right there's direct mail servers

542
00:20:47,950 --> 00:20:52,569
there's indirect mail servers there's

543
00:20:50,230 --> 00:20:55,390
semantic mail servers and there's

544
00:20:52,569 --> 00:20:57,609
symbolic mail servers right and so

545
00:20:55,390 --> 00:20:59,770
symbolic mail servers are mail servers

546
00:20:57,609 --> 00:21:01,709
that don't actually exist like they're

547
00:20:59,769 --> 00:21:04,900
mail servers that are effectively

548
00:21:01,710 --> 00:21:06,880
imaginary right and so what you're doing

549
00:21:04,900 --> 00:21:08,740
when you use a symbolic mail server is

550
00:21:06,880 --> 00:21:11,290
you're saying let's pretend there's a

551
00:21:08,740 --> 00:21:13,420
mail server so that we can complete this

552
00:21:11,289 --> 00:21:15,970
operation but when we're done we're not

553
00:21:13,420 --> 00:21:18,610
actually going to send any mail right

554
00:21:15,970 --> 00:21:20,890
and so what's happening with a try half

555
00:21:18,609 --> 00:21:23,500
scribe index is it's it's trying to

556
00:21:20,890 --> 00:21:26,170
record what the try hash was of that

557
00:21:23,500 --> 00:21:28,329
six-way set of files right it's trying

558
00:21:26,170 --> 00:21:30,460
to put that into the global try hash

559
00:21:28,329 --> 00:21:33,639
index so that it can do what's called a

560
00:21:30,460 --> 00:21:36,009
quad push which is taking four try at a

561
00:21:33,640 --> 00:21:38,470
time this is a performance thing for try

562
00:21:36,009 --> 00:21:40,390
hashes at a time to the symbolic server

563
00:21:38,470 --> 00:21:42,910
right it's basically like if you were to

564
00:21:40,390 --> 00:21:44,590
do each individual try hash you'd be

565
00:21:42,910 --> 00:21:47,259
wait there be a lot of dead space in the

566
00:21:44,589 --> 00:21:48,849
symbolic server packets so a quad push

567
00:21:47,259 --> 00:21:50,619
takes four of those a time and does them

568
00:21:48,849 --> 00:21:54,039
all the you know all at once

569
00:21:50,619 --> 00:21:55,779
right and so what you get out of a quad

570
00:21:54,039 --> 00:21:58,720
push is a lot more performance but it's

571
00:21:55,779 --> 00:22:00,490
a lot riskier right in Pro Mode I want

572
00:21:58,720 --> 00:22:02,049
to do quad pushes I want to be faster

573
00:22:00,490 --> 00:22:04,179
moths all the time I know how to handle

574
00:22:02,049 --> 00:22:06,789
these errors this is not what I'm gonna

575
00:22:04,179 --> 00:22:08,290
go into too much detail because so I'm

576
00:22:06,789 --> 00:22:09,909
not gonna explain how we're gonna fix it

577
00:22:08,289 --> 00:22:10,960
we're just gonna fix it because I don't

578
00:22:09,910 --> 00:22:13,029
think you're gonna see this one because

579
00:22:10,960 --> 00:22:14,079
if you don't have pro level settings

580
00:22:13,029 --> 00:22:15,908
engaged you never

581
00:22:14,079 --> 00:22:17,528
get a quad push error because it's just

582
00:22:15,909 --> 00:22:20,500
gonna be doing single push this symbolic

583
00:22:17,528 --> 00:22:23,288
server to do those male operations when

584
00:22:20,500 --> 00:22:25,240
when male is effectively sort of being

585
00:22:23,288 --> 00:22:26,919
emulated during that that operation so

586
00:22:25,240 --> 00:22:28,599
I'm just gonna type in the line that

587
00:22:26,919 --> 00:22:56,049
fixes this and you don't have to worry

588
00:22:28,599 --> 00:22:59,469
too much about this alright so once

589
00:22:56,048 --> 00:23:03,278
you've got essentially all of that taken

590
00:22:59,470 --> 00:23:08,009
care okay so I actually wasn't expecting

591
00:23:03,278 --> 00:23:11,288
this okay I'm really sorry about this so

592
00:23:08,009 --> 00:23:13,980
it divides things into two sections

593
00:23:11,288 --> 00:23:16,359
it's called porcelain and plumbing so

594
00:23:13,980 --> 00:23:18,069
porcelain it'sit's basically think of a

595
00:23:16,359 --> 00:23:21,038
toilet right this is the analogy they

596
00:23:18,069 --> 00:23:22,000
use I in a toilet you got the plumbing

597
00:23:21,038 --> 00:23:24,158
which is the thing that actually does

598
00:23:22,000 --> 00:23:26,440
the work then you got a porcelain which

599
00:23:24,159 --> 00:23:29,200
is the thing that you actually see as a

600
00:23:26,440 --> 00:23:31,210
human and interface with right so

601
00:23:29,200 --> 00:23:33,100
normally because I'm in Pro Mode I turn

602
00:23:31,210 --> 00:23:34,419
all the porcelain stuff off but because

603
00:23:33,099 --> 00:23:36,278
I was trying to do a demo today I

604
00:23:34,419 --> 00:23:37,929
enabled the porcelain stuff which is

605
00:23:36,278 --> 00:23:39,669
basically the user interface like foofy

606
00:23:37,929 --> 00:23:41,259
stuff it's stuff that you should turn

607
00:23:39,669 --> 00:23:43,480
off as soon as you can you know once

608
00:23:41,259 --> 00:23:45,038
you're familiar with a 395,000 base

609
00:23:43,480 --> 00:23:47,440
commands you can turn off the porcelain

610
00:23:45,038 --> 00:23:49,450
nonsense it's not useful but I had

611
00:23:47,440 --> 00:23:51,038
turned it on and so you can see once we

612
00:23:49,450 --> 00:23:52,899
were working with that scribe index when

613
00:23:51,038 --> 00:23:55,388
it tried to do the try revert based on a

614
00:23:52,898 --> 00:23:57,158
command that I gave it probably because

615
00:23:55,388 --> 00:23:58,269
I said exacerbate shim but again I don't

616
00:23:57,159 --> 00:24:01,299
really want to go into what that does

617
00:23:58,269 --> 00:24:03,099
that caused a conflict with what it

618
00:24:01,298 --> 00:24:05,019
would normally do the reverse of a quad

619
00:24:03,099 --> 00:24:07,689
push is a quad read right you can see it

620
00:24:05,019 --> 00:24:09,788
happening down in here so the quad read

621
00:24:07,690 --> 00:24:12,669
that was trying to get back from a

622
00:24:09,788 --> 00:24:16,569
symbolic server what the pretty message

623
00:24:12,669 --> 00:24:19,929
was to display on this command that

624
00:24:16,569 --> 00:24:22,329
failed and it failed because obviously I

625
00:24:19,929 --> 00:24:24,788
the I didn't go into how you set up a

626
00:24:22,329 --> 00:24:26,408
get symbolic server obviously I did that

627
00:24:24,788 --> 00:24:26,769
beforehand that's kind of a more

628
00:24:26,409 --> 00:24:28,840
advanced

629
00:24:26,769 --> 00:24:30,369
topic I would just let one of the

630
00:24:28,839 --> 00:24:32,709
default installers do it for you but

631
00:24:30,369 --> 00:24:34,689
when I set mine up right I set it up a

632
00:24:32,710 --> 00:24:36,309
pro level I didn't quit I didn't install

633
00:24:34,690 --> 00:24:38,230
the porcelain modules doesn't even have

634
00:24:36,309 --> 00:24:41,319
those messages so you're gonna get those

635
00:24:38,230 --> 00:24:42,849
problems cropping up so all I'm gonna do

636
00:24:41,319 --> 00:24:46,059
is we run the exact same command again

637
00:24:42,849 --> 00:24:51,159
I'm gonna say no porcelain and I'm gonna

638
00:24:46,059 --> 00:24:56,500
say unprincely get those messages right

639
00:24:51,160 --> 00:24:57,790
let's give that one more shot this I

640
00:24:56,500 --> 00:25:01,049
think this this should be fine

641
00:24:57,789 --> 00:25:03,490
I think we're good here uh all right so

642
00:25:01,049 --> 00:25:05,079
one of the problems that you will see

643
00:25:03,490 --> 00:25:06,519
when you're trying to fix the quilting

644
00:25:05,079 --> 00:25:08,230
problem like that because you noticed

645
00:25:06,519 --> 00:25:09,670
before that beforehand right I don't

646
00:25:08,230 --> 00:25:11,200
know if you remember when we were

647
00:25:09,670 --> 00:25:14,470
executing this command @p let's go back

648
00:25:11,200 --> 00:25:16,539
up here I told it to do quilt always so

649
00:25:14,470 --> 00:25:18,100
what you're really supposed to do in

650
00:25:16,539 --> 00:25:21,609
that particular command right if you're

651
00:25:18,099 --> 00:25:23,559
doing an actual Unruh vert mail here the

652
00:25:21,609 --> 00:25:26,139
safe way to do an unreal is to actually

653
00:25:23,559 --> 00:25:27,309
open up a text editor and to list you

654
00:25:26,140 --> 00:25:28,780
what you want to do is you want to list

655
00:25:27,309 --> 00:25:30,759
all the things that should actually be

656
00:25:28,779 --> 00:25:33,279
quilted which is typically not all of

657
00:25:30,759 --> 00:25:35,349
them and so one of the problems is if

658
00:25:33,279 --> 00:25:37,930
you have something that's formatted in a

659
00:25:35,349 --> 00:25:40,089
way such that it can't be quilted then a

660
00:25:37,930 --> 00:25:42,759
later command will eventually try to

661
00:25:40,089 --> 00:25:44,379
verify that quilt again using the

662
00:25:42,759 --> 00:25:45,730
performance mode here it's trying to do

663
00:25:44,380 --> 00:25:47,680
them for at a time that's not the

664
00:25:45,730 --> 00:25:49,930
problem here even the single verify

665
00:25:47,680 --> 00:25:52,090
quilt would have failed when it tries to

666
00:25:49,930 --> 00:25:54,340
verify quilt on something that was not

667
00:25:52,089 --> 00:25:56,079
formatted for quilting which of course I

668
00:25:54,339 --> 00:25:58,329
accidentally induced it to do by just

669
00:25:56,079 --> 00:26:01,029
saying quilt always that's gonna fail

670
00:25:58,329 --> 00:26:03,189
right again we can run the same command

671
00:26:01,029 --> 00:26:05,829
we just have to add one more fit switch

672
00:26:03,190 --> 00:26:10,090
which is that like if you ignore quilt

673
00:26:05,829 --> 00:26:12,250
errors right and reek wilt unquoted

674
00:26:10,089 --> 00:26:14,319
formats that should take care of any

675
00:26:12,250 --> 00:26:16,509
like quilting is not an essential

676
00:26:14,319 --> 00:26:17,950
feature so basically it's just saying

677
00:26:16,509 --> 00:26:20,019
look if there was a coding error don't

678
00:26:17,950 --> 00:26:22,210
worry about it just reek wilt any of

679
00:26:20,019 --> 00:26:26,650
those quilt sections that were wrong

680
00:26:22,210 --> 00:26:28,840
right so crossing our fingers here this

681
00:26:26,650 --> 00:26:30,310
this hopefully will be the the one that

682
00:26:28,839 --> 00:26:34,959
actually finally gets their posit Ori

683
00:26:30,309 --> 00:26:36,579
into a good state perfect right so now

684
00:26:34,960 --> 00:26:39,329
if I just do a directory you can see

685
00:26:36,579 --> 00:26:40,809
there's meow hash I go in there right

686
00:26:39,329 --> 00:26:40,990
there it is

687
00:26:40,809 --> 00:26:44,799
it's

688
00:26:40,990 --> 00:26:49,829
already for me and and totally set to go

689
00:26:44,799 --> 00:26:52,419
so I hope that that gave you some

690
00:26:49,829 --> 00:26:54,460
appreciation for how simple it is to

691
00:26:52,420 --> 00:26:56,200
just get started on get get right I mean

692
00:26:54,460 --> 00:26:57,370
we had some errors and some of them were

693
00:26:56,200 --> 00:26:59,319
a little bit complicated you know I

694
00:26:57,369 --> 00:27:01,509
agree but hopefully you can see from my

695
00:26:59,319 --> 00:27:03,428
explanations of them once you once you

696
00:27:01,509 --> 00:27:05,170
pull back the curtain and and just see

697
00:27:03,429 --> 00:27:08,530
what's actually going on right once you

698
00:27:05,170 --> 00:27:10,690
know about you know quilts and and

699
00:27:08,529 --> 00:27:12,970
hermeneutic graphs and all those sort of

700
00:27:10,690 --> 00:27:14,470
things it becomes actually very simple

701
00:27:12,970 --> 00:27:16,750
to navigate your way through it you

702
00:27:14,470 --> 00:27:18,308
don't have to be scared right sometimes

703
00:27:16,750 --> 00:27:20,079
it deletes all of your changes or all of

704
00:27:18,308 --> 00:27:22,450
your data that's okay that's just an

705
00:27:20,079 --> 00:27:24,308
excuse to start over a lot of times you

706
00:27:22,450 --> 00:27:27,370
know writing code fresh is better right

707
00:27:24,308 --> 00:27:29,079
and so I think a lot of the criticism

708
00:27:27,369 --> 00:27:32,469
level to get that is too complicated

709
00:27:29,079 --> 00:27:34,779
that it loses all your files those sorts

710
00:27:32,470 --> 00:27:37,690
of things I I don't really think that

711
00:27:34,779 --> 00:27:39,549
that's true right that's that's just

712
00:27:37,690 --> 00:27:42,190
that's people blowing things out of

713
00:27:39,549 --> 00:27:43,779
proportion not learning how to use the

714
00:27:42,190 --> 00:27:46,539
software you know these are people who

715
00:27:43,779 --> 00:27:47,769
probably only know how to use six seven

716
00:27:46,539 --> 00:27:49,659
eight thousand out of three hundred

717
00:27:47,769 --> 00:27:52,029
ninety five thousand commands and get

718
00:27:49,660 --> 00:27:53,230
not to mention the switches which they

719
00:27:52,029 --> 00:27:56,529
probably just don't even know about

720
00:27:53,230 --> 00:27:58,509
right a lot of times um so I really do

721
00:27:56,529 --> 00:28:00,730
think it's worth your time to just you

722
00:27:58,509 --> 00:28:02,890
know forget that stuff and say I'm gonna

723
00:28:00,730 --> 00:28:06,099
commit some time to learning it it's not

724
00:28:02,890 --> 00:28:08,650
that hard and and I think everyone out

725
00:28:06,099 --> 00:28:12,159
there who follows handmade hero it you

726
00:28:08,650 --> 00:28:15,070
can do it and the the rewards that you

727
00:28:12,160 --> 00:28:16,900
will reap from learning this are immense

728
00:28:15,069 --> 00:28:20,349
right like I said you know you can go

729
00:28:16,900 --> 00:28:21,610
from a situation where you you know

730
00:28:20,349 --> 00:28:24,579
we're doing work every day with files

731
00:28:21,609 --> 00:28:26,229
and had to you know use something like I

732
00:28:24,579 --> 00:28:29,319
don't know like SVN or something like

733
00:28:26,230 --> 00:28:30,970
that that you know doesn't lose your

734
00:28:29,319 --> 00:28:33,099
files and your store binary data and is

735
00:28:30,970 --> 00:28:35,019
relatively easy to use you can go to

736
00:28:33,099 --> 00:28:37,000
something like git that's way more

737
00:28:35,019 --> 00:28:40,539
powerful and only sometimes uses your

738
00:28:37,000 --> 00:28:42,910
files and you know only it probably

739
00:28:40,539 --> 00:28:46,058
takes only two or three hours a day of

740
00:28:42,910 --> 00:28:47,050
work and get to copy things from like

741
00:28:46,058 --> 00:28:49,480
one machine to another and stuff like

742
00:28:47,049 --> 00:28:51,879
that which is well worth the time

743
00:28:49,480 --> 00:28:53,500
investment so I highly recommend it I

744
00:28:51,880 --> 00:28:54,940
think everyone should in fact switch to

745
00:28:53,500 --> 00:28:56,589
get and

746
00:28:54,940 --> 00:28:58,750
hopefully this tutorial is enough to

747
00:28:56,589 --> 00:29:00,429
like whet your appetite there's a lot of

748
00:28:58,750 --> 00:29:02,920
great tutorials out there so you know

749
00:29:00,430 --> 00:29:04,660
seek them out and before we get started

750
00:29:02,920 --> 00:29:07,150
on actually programming today let me

751
00:29:04,660 --> 00:29:09,040
just go and ask does the stream have any

752
00:29:07,150 --> 00:29:10,720
questions that did it did all that make

753
00:29:09,039 --> 00:29:13,539
sense I hope I was kind of talking a lot

754
00:29:10,720 --> 00:29:17,380
there did anyone have any questions for

755
00:29:13,539 --> 00:29:21,029
me about what we covered just there on

756
00:29:17,380 --> 00:29:25,570
get any anything that you you want me to

757
00:29:21,029 --> 00:29:27,069
show you in addition to that so

758
00:29:25,569 --> 00:29:28,750
reductive said could you go over the get

759
00:29:27,069 --> 00:29:31,409
soil archive command I've had a really

760
00:29:28,750 --> 00:29:34,630
hard time understanding the docs on it

761
00:29:31,410 --> 00:29:36,910
okay okay yeah yeah I could I could

762
00:29:34,630 --> 00:29:56,620
definitely do that let me let me just

763
00:29:36,910 --> 00:29:58,269
let me just fire that up here okay um

764
00:29:56,619 --> 00:30:01,269
don't worry about that air mess is just

765
00:29:58,269 --> 00:30:02,920
not important okay could you go to get

766
00:30:01,269 --> 00:30:05,710
Sherlock could come in I totally can I

767
00:30:02,920 --> 00:30:07,990
just I staged this repository for it so

768
00:30:05,710 --> 00:30:11,259
the get soil archive command that's this

769
00:30:07,990 --> 00:30:13,529
command what the get soil archive

770
00:30:11,259 --> 00:30:18,190
command does is it's basically saying

771
00:30:13,529 --> 00:30:20,589
much like when you see that remember I

772
00:30:18,190 --> 00:30:24,100
was talking about that gardening the

773
00:30:20,589 --> 00:30:26,319
reverse gardening so normally when you

774
00:30:24,099 --> 00:30:30,669
do an archive what's gonna happen is

775
00:30:26,319 --> 00:30:34,210
it's gonna get rid of the those those

776
00:30:30,670 --> 00:30:35,680
that spacing right that gardening if you

777
00:30:34,210 --> 00:30:37,870
had gardening in the art in the

778
00:30:35,680 --> 00:30:40,060
repository normally when you do the

779
00:30:37,869 --> 00:30:43,299
archive it's gonna get rid of that right

780
00:30:40,059 --> 00:30:46,409
and so the problem with that when you do

781
00:30:43,299 --> 00:30:48,399
an archive is when the person

782
00:30:46,410 --> 00:30:51,490
decompresses the archive on the other

783
00:30:48,400 --> 00:30:53,830
end they lose all the gardening so get

784
00:30:51,490 --> 00:30:56,799
soil archive is something you do to an

785
00:30:53,829 --> 00:30:58,210
archive ahead of time in order to make

786
00:30:56,799 --> 00:31:00,419
sure that when you put a git repository

787
00:30:58,210 --> 00:31:03,670
into the archive it still has that

788
00:31:00,420 --> 00:31:05,620
padding right so in our case what we

789
00:31:03,670 --> 00:31:08,710
would do is we'd say like get cell

790
00:31:05,619 --> 00:31:09,039
archive like you know like now hash tgz

791
00:31:08,710 --> 00:31:11,049
or

792
00:31:09,039 --> 00:31:12,759
some any other archive type that you

793
00:31:11,049 --> 00:31:13,930
want they're all bit in I think it has

794
00:31:12,759 --> 00:31:16,150
their support for a seventy three

795
00:31:13,930 --> 00:31:17,259
different archive formats so you know

796
00:31:16,150 --> 00:31:19,330
you can use pretty much everything that

797
00:31:17,259 --> 00:31:21,670
you want so you do get to archive the

798
00:31:19,329 --> 00:31:25,089
archive to use and then you want to do

799
00:31:21,670 --> 00:31:27,640
like probably gardening optimal because

800
00:31:25,089 --> 00:31:29,439
you want it to look at how much should

801
00:31:27,640 --> 00:31:31,480
be put in so how much you have a certain

802
00:31:29,440 --> 00:31:33,580
amount of soil right you can't just make

803
00:31:31,480 --> 00:31:34,720
it out of thin air so you got to figure

804
00:31:33,579 --> 00:31:36,699
out how much soil do you want to leave

805
00:31:34,720 --> 00:31:38,920
in the in the ground right in the

806
00:31:36,700 --> 00:31:42,400
repository and how much soil you want to

807
00:31:38,920 --> 00:31:44,980
put into the actual archive itself for

808
00:31:42,400 --> 00:31:45,840
the receiving repository or garden as it

809
00:31:44,980 --> 00:31:49,120
were right

810
00:31:45,839 --> 00:31:53,289
gardening optimal will compute that but

811
00:31:49,119 --> 00:31:55,389
one of the problems with so alright I I

812
00:31:53,289 --> 00:31:57,220
don't want to spend too much time I get

813
00:31:55,390 --> 00:31:58,860
today so I'm sorry if this is a little

814
00:31:57,220 --> 00:32:01,630
bit truncated of neckla nation but

815
00:31:58,859 --> 00:32:03,549
optimal gardening is a problem that

816
00:32:01,630 --> 00:32:05,680
computer science hasn't been able to

817
00:32:03,549 --> 00:32:07,269
solve it's it's np-complete no one

818
00:32:05,680 --> 00:32:09,940
really knows

819
00:32:07,269 --> 00:32:13,269
to what extent you can do literally

820
00:32:09,940 --> 00:32:15,670
optimal gardening so when you supply an

821
00:32:13,269 --> 00:32:18,490
Optima pass an optimal gardening switch

822
00:32:15,670 --> 00:32:20,560
to get you need to tell it in addition

823
00:32:18,490 --> 00:32:22,839
to the optimal gardening something

824
00:32:20,559 --> 00:32:24,849
called a peeper ammeter and the peeper

825
00:32:22,839 --> 00:32:27,429
ammeter is a thing that the optimal

826
00:32:24,849 --> 00:32:30,209
gardening heuristic inside get will use

827
00:32:27,430 --> 00:32:34,299
to know when it has gotten the gardening

828
00:32:30,210 --> 00:32:36,549
optimal enough right because actually

829
00:32:34,299 --> 00:32:39,839
ensuring fully optimal gardening is not

830
00:32:36,549 --> 00:32:42,669
always possible so you want to supply an

831
00:32:39,839 --> 00:32:46,179
optimal gardening parameter I usually

832
00:32:42,670 --> 00:32:49,570
use 0.0 seven eight nine four five one

833
00:32:46,180 --> 00:32:53,230
three three one two which is also with

834
00:32:49,569 --> 00:32:54,819
what leanness Torvalds recommends he you

835
00:32:53,230 --> 00:32:58,599
know he's I think he's right on this

836
00:32:54,819 --> 00:33:03,669
there's competing camps on whether you

837
00:32:58,599 --> 00:33:05,289
should use this constant or there's

838
00:33:03,670 --> 00:33:06,370
other constants out there that are sort

839
00:33:05,289 --> 00:33:08,500
of made about I would stick with this

840
00:33:06,369 --> 00:33:10,000
one so if you pass a knife to a

841
00:33:08,500 --> 00:33:13,240
gardening parameter to get soil archive

842
00:33:10,000 --> 00:33:14,680
and then you probably also want to do so

843
00:33:13,240 --> 00:33:16,660
normally when you do would get cell

844
00:33:14,680 --> 00:33:19,630
archive what it will do is it'll soil

845
00:33:16,660 --> 00:33:21,910
the archive and then it will resale

846
00:33:19,630 --> 00:33:22,780
itself right

847
00:33:21,910 --> 00:33:25,390
in other words

848
00:33:22,779 --> 00:33:31,000
that the local repository so what you

849
00:33:25,390 --> 00:33:33,280
want to do is do not resale yourself at

850
00:33:31,000 --> 00:33:35,859
the and you can also do alternately you

851
00:33:33,279 --> 00:33:37,629
can do like do not soil yourself but do

852
00:33:35,859 --> 00:33:39,669
not soil yourself will take effect for

853
00:33:37,630 --> 00:33:41,200
all future get in vacations it'll

854
00:33:39,670 --> 00:33:43,210
actually update the config so what you

855
00:33:41,200 --> 00:33:44,740
want to do is do not resell yourself so

856
00:33:43,210 --> 00:33:47,350
that it knows that only during this

857
00:33:44,740 --> 00:33:51,789
particular command right that should do

858
00:33:47,349 --> 00:33:52,329
that so hopefully that makes them some

859
00:33:51,789 --> 00:33:54,339
sense

860
00:33:52,329 --> 00:33:59,769
does anyone have I don't like well

861
00:33:54,339 --> 00:34:02,369
that's running um let's see here what if

862
00:33:59,769 --> 00:34:06,279
atomization fails so atomization

863
00:34:02,369 --> 00:34:10,119
failures are not a huge deal you can

864
00:34:06,279 --> 00:34:12,159
just run get pre atomized with - -

865
00:34:10,119 --> 00:34:13,960
ignore atomization failures and that

866
00:34:12,159 --> 00:34:20,679
should take care of most of that if it

867
00:34:13,960 --> 00:34:23,860
doesn't then I don't know mmm okay so

868
00:34:20,679 --> 00:34:27,340
the xref server on this machine is kind

869
00:34:23,860 --> 00:34:28,300
of borked so I would don't work ignore

870
00:34:27,340 --> 00:34:31,110
that that won't happen

871
00:34:28,300 --> 00:34:34,269
this command is fine for you to use

872
00:34:31,110 --> 00:34:35,470
that's has to do with the extra service

873
00:34:34,269 --> 00:34:38,378
setup in this machine which never worked

874
00:34:35,469 --> 00:34:44,658
right so it's it doesn't matter let's

875
00:34:38,378 --> 00:34:47,828
see here forgot anyone let's see here

876
00:34:44,659 --> 00:34:47,829
[Music]

877
00:34:50,010 --> 00:34:54,940
I've heard the sequel since I heard

878
00:34:52,059 --> 00:34:56,619
Knuth recently proved gardening had a

879
00:34:54,940 --> 00:34:59,019
probabilistic polynomial-time algorithm

880
00:34:56,619 --> 00:35:00,549
it just has huge coefficients so if

881
00:34:59,019 --> 00:35:03,789
that's true that could be pretty huge

882
00:35:00,550 --> 00:35:05,590
forget I don't know to what it's then I

883
00:35:03,789 --> 00:35:07,420
believe that I mean want if canoe says

884
00:35:05,590 --> 00:35:10,150
is probably right I mean he's obviously

885
00:35:07,420 --> 00:35:11,920
a godfather of computing so you know I

886
00:35:10,150 --> 00:35:13,510
don't want to challenge his authority on

887
00:35:11,920 --> 00:35:14,139
that but I like I said I don't know

888
00:35:13,510 --> 00:35:19,180
anything about that

889
00:35:14,139 --> 00:35:20,469
I'm seeing that news lone billion says

890
00:35:19,179 --> 00:35:21,759
I'm so skeptical with this effect the

891
00:35:20,469 --> 00:35:23,049
arrangement of my garden gnomes

892
00:35:21,760 --> 00:35:24,820
rearranging them is not really something

893
00:35:23,050 --> 00:35:30,130
that I'm able to do is there permanently

894
00:35:24,820 --> 00:35:33,610
fixed in place okay so I guess what I'd

895
00:35:30,130 --> 00:35:36,880
say about that is statuary is a very

896
00:35:33,610 --> 00:35:40,150
advanced feature in get gardening

897
00:35:36,880 --> 00:35:43,059
and I don't want to mislead you by

898
00:35:40,150 --> 00:35:47,559
suggesting that you can just start

899
00:35:43,059 --> 00:35:50,079
rearranging the get gardening gnomes to

900
00:35:47,559 --> 00:35:53,740
anywhere inside the repository and not

901
00:35:50,079 --> 00:35:58,869
have huge potential pitfalls awaiting

902
00:35:53,739 --> 00:36:02,489
you you can I just want to make it clear

903
00:35:58,869 --> 00:36:06,700
that there is no such thing as a fixed

904
00:36:02,489 --> 00:36:09,788
get garden them all gnomes are movable

905
00:36:06,699 --> 00:36:12,578
you just have to use the assumed mutable

906
00:36:09,789 --> 00:36:15,069
gnomes flag on whatever command you

907
00:36:12,579 --> 00:36:20,950
would have used so for example if you

908
00:36:15,068 --> 00:36:23,588
were gonna use a get bless by gnome

909
00:36:20,949 --> 00:36:26,649
command right which is to say you wanted

910
00:36:23,588 --> 00:36:27,548
to use those garden gnomes as the thing

911
00:36:26,650 --> 00:36:30,460
that was actually gonna do the

912
00:36:27,548 --> 00:36:32,048
repository blessing if that would have

913
00:36:30,460 --> 00:36:35,230
given you an error that's like error

914
00:36:32,048 --> 00:36:37,630
gnomes are fixed in this case right what

915
00:36:35,230 --> 00:36:39,519
you can do is just say assume mutable

916
00:36:37,630 --> 00:36:41,920
gnomes a lot of people don't know about

917
00:36:39,518 --> 00:36:44,649
that switch but it totally works if you

918
00:36:41,920 --> 00:36:46,240
do that it will never give you a fixed

919
00:36:44,650 --> 00:36:47,680
gnome error now this probably won't work

920
00:36:46,239 --> 00:36:49,929
because I didn't actually set up any

921
00:36:47,679 --> 00:36:53,169
gnomes in this particular garden

922
00:36:49,929 --> 00:36:55,690
repository but that's I just want to

923
00:36:53,170 --> 00:36:57,400
make it clear that's that so again

924
00:36:55,690 --> 00:37:00,130
pretty much all the problems are getting

925
00:36:57,400 --> 00:37:04,450
here with the I Maps server and the mail

926
00:37:00,130 --> 00:37:07,088
servers right so I really don't want you

927
00:37:04,449 --> 00:37:08,889
to be a pro CP into the column is

928
00:37:07,088 --> 00:37:10,739
basically when you are trying to copy

929
00:37:08,889 --> 00:37:13,239
column from one to the other in pro mode

930
00:37:10,739 --> 00:37:16,179
and you want to do it without the normal

931
00:37:13,239 --> 00:37:18,368
verify step you can see that it's

932
00:37:16,179 --> 00:37:19,598
hazarding a problem with the with the

933
00:37:18,369 --> 00:37:21,250
fact that I have more than one IMAP

934
00:37:19,599 --> 00:37:22,838
server listed that's probably just

935
00:37:21,250 --> 00:37:26,219
something happened when I did the config

936
00:37:22,838 --> 00:37:28,298
to put in the amateur porcelain stuff

937
00:37:26,219 --> 00:37:30,489
the same thing that's screwed up the

938
00:37:28,298 --> 00:37:32,559
xref server probably screwed this up

939
00:37:30,489 --> 00:37:37,989
right it's again fixable you don't even

940
00:37:32,559 --> 00:37:43,859
need to worry about that error can you

941
00:37:37,989 --> 00:37:45,848
slam the try cycle entropy option so I

942
00:37:43,858 --> 00:37:48,788
mean I guess what I'd say about try

943
00:37:45,849 --> 00:37:50,340
cycle entropy is unless you're working

944
00:37:48,789 --> 00:37:52,820
on like literally

945
00:37:50,340 --> 00:37:55,829
government grade encryption standards

946
00:37:52,820 --> 00:38:00,539
tricycle entropy is really not necessary

947
00:37:55,829 --> 00:38:03,659
so by cycle entropy is way way faster

948
00:38:00,539 --> 00:38:05,759
it's about 17 times faster because

949
00:38:03,659 --> 00:38:09,449
tricycle entropy is is going to do tons

950
00:38:05,760 --> 00:38:13,110
of iterations so I would just say use -

951
00:38:09,449 --> 00:38:18,509
- by cycle entropy because that's gonna

952
00:38:13,110 --> 00:38:20,490
give you a way more efficient ops

953
00:38:18,510 --> 00:38:24,510
entropy operation whichever one you were

954
00:38:20,489 --> 00:38:26,549
doing with really no downgraded security

955
00:38:24,510 --> 00:38:29,490
unless you're expecting like state level

956
00:38:26,550 --> 00:38:31,710
attackers basically right plus if you're

957
00:38:29,489 --> 00:38:35,969
gonna do try cycle entropy you would

958
00:38:31,710 --> 00:38:38,630
also have to do I'm a - - Mossad on it

959
00:38:35,969 --> 00:38:41,399
as well just to make sure that it uses

960
00:38:38,630 --> 00:38:44,119
Mossad improved enclosures because other

961
00:38:41,400 --> 00:38:46,200
only Mossad strength enclosures are

962
00:38:44,119 --> 00:38:49,230
resistant to the kind of attacks that

963
00:38:46,199 --> 00:38:52,019
tricycle entropy is designed to prevent

964
00:38:49,230 --> 00:38:54,090
so again you're in state actor territory

965
00:38:52,019 --> 00:38:58,349
there and you're you're gonna be wanting

966
00:38:54,090 --> 00:39:01,110
to use if not Mossad level enclosures

967
00:38:58,349 --> 00:39:03,569
use five eyes enclosures or something

968
00:39:01,110 --> 00:39:04,769
that's that's you know state level

969
00:39:03,570 --> 00:39:06,660
encryption quality because you're

970
00:39:04,769 --> 00:39:08,280
basically saying I want state level

971
00:39:06,659 --> 00:39:13,710
encryption because I expect state level

972
00:39:08,280 --> 00:39:15,180
actor threat profiles right all right I

973
00:39:13,710 --> 00:39:17,340
don't wanna spend too much more time on

974
00:39:15,179 --> 00:39:20,549
get hopefully that gave everyone a good

975
00:39:17,340 --> 00:39:25,620
understanding of how it all works and

976
00:39:20,550 --> 00:39:28,050
and how to get started with it let's go

977
00:39:25,619 --> 00:39:32,549
ahead and go on with the series all

978
00:39:28,050 --> 00:39:36,330
right so if you remember last week we

979
00:39:32,550 --> 00:39:39,480
sort of got ourselves to a pretty good

980
00:39:36,329 --> 00:39:40,739
stopping point let me go ahead and open

981
00:39:39,480 --> 00:39:43,440
up the game here I'm gonna launch

982
00:39:40,739 --> 00:39:45,119
forehead and then I'm gonna go ahead and

983
00:39:43,440 --> 00:39:47,909
try to remember what all the keys are

984
00:39:45,119 --> 00:39:49,739
here okay I really need to update to the

985
00:39:47,909 --> 00:39:50,759
new for coder on this machine but Allen

986
00:39:49,739 --> 00:39:52,469
and I have kind of been going back and

987
00:39:50,760 --> 00:39:56,190
forth on some changes and so I've been

988
00:39:52,469 --> 00:39:59,009
in a situation where I have a one meow

989
00:39:56,190 --> 00:40:01,050
hash that I'm using another machine I've

990
00:39:59,010 --> 00:40:02,010
started mom you have one for code I'm

991
00:40:01,050 --> 00:40:03,510
using on the other machine

992
00:40:02,010 --> 00:40:04,980
one for Kota I'm using here which is not

993
00:40:03,510 --> 00:40:09,480
a good idea because I made a bunch of

994
00:40:04,980 --> 00:40:13,949
changes so yeah that's a bit of an issue

995
00:40:09,480 --> 00:40:16,108
but let me go ahead and do a quick build

996
00:40:13,949 --> 00:40:20,039
and then I'm gonna go ahead and do an MS

997
00:40:16,108 --> 00:40:23,759
dev here and I just wanna give a quick

998
00:40:20,039 --> 00:40:38,929
recap and okay I don't know what this is

999
00:40:23,760 --> 00:40:43,470
telling me to do right what I okay um so

1000
00:40:38,929 --> 00:40:46,829
what is happening here I don't really

1001
00:40:43,469 --> 00:40:48,250
want to know so I guess we won't be

1002
00:40:46,829 --> 00:40:51,348
using Visual Studio

1003
00:40:48,250 --> 00:40:51,349
[Music]

1004
00:40:51,679 --> 00:40:57,358
all right so I guess what we've learned

1005
00:40:55,289 --> 00:41:00,000
is Visual Studio no longer wants to be

1006
00:40:57,358 --> 00:41:03,029
used on handmade here oh and you know

1007
00:41:00,000 --> 00:41:04,739
what that's fine with me I don't like

1008
00:41:03,030 --> 00:41:07,140
all of its garbage anyways so I guess

1009
00:41:04,739 --> 00:41:09,358
today is the day we switch to remedy and

1010
00:41:07,139 --> 00:41:12,420
we're just gonna have to hope that

1011
00:41:09,358 --> 00:41:15,179
George has our back on this one all

1012
00:41:12,420 --> 00:41:19,470
right so let me go ahead and switch to

1013
00:41:15,179 --> 00:41:22,759
bugger is real quick this was not

1014
00:41:19,469 --> 00:41:26,730
planned by the way I didn't think that

1015
00:41:22,760 --> 00:41:29,790
you know silly me and I realized that

1016
00:41:26,730 --> 00:41:31,619
I'm just crazy here you know you would

1017
00:41:29,789 --> 00:41:33,179
have thought that Microsoft would want

1018
00:41:31,619 --> 00:41:35,340
their product to look good on a stream

1019
00:41:33,179 --> 00:41:37,199
and wouldn't make it randomly

1020
00:41:35,340 --> 00:41:39,660
deauthorize itself and then produce an

1021
00:41:37,199 --> 00:41:43,349
error message in a JavaScript

1022
00:41:39,659 --> 00:41:45,118
interpreter window but you know that's

1023
00:41:43,349 --> 00:41:46,710
just the kind of quality that Microsoft

1024
00:41:45,119 --> 00:41:50,910
delivers these days so I'm gonna go

1025
00:41:46,710 --> 00:41:55,889
ahead and go in here and I'm gonna

1026
00:41:50,909 --> 00:41:57,989
download remedy which I bought and I'm

1027
00:41:55,889 --> 00:41:59,809
gonna download that's and we're just

1028
00:41:57,989 --> 00:42:02,549
gonna use that to debug from now on and

1029
00:41:59,809 --> 00:42:06,329
it's not really done yet it's only

1030
00:42:02,550 --> 00:42:08,670
version 0.1 but hey at least it will run

1031
00:42:06,329 --> 00:42:12,819
which is more than I can say for Visual

1032
00:42:08,670 --> 00:42:19,269
Studio alright

1033
00:42:12,820 --> 00:42:23,920
so let's see here here's remedy on the

1034
00:42:19,269 --> 00:42:27,099
thumb drive I will put that down here

1035
00:42:23,920 --> 00:42:30,550
somewhere let's make a directory for it

1036
00:42:27,099 --> 00:42:33,339
shall we so what I'm doing here is I'm

1037
00:42:30,550 --> 00:42:35,170
just gonna use the in development

1038
00:42:33,340 --> 00:42:38,410
debugger that George man Horne is

1039
00:42:35,170 --> 00:42:40,450
working on X 13 pixels if you see him in

1040
00:42:38,409 --> 00:42:44,679
the chat that's who we're talking about

1041
00:42:40,449 --> 00:42:49,869
here and I'm gonna go ahead and unpack

1042
00:42:44,679 --> 00:42:53,139
his debugger into this directory there

1043
00:42:49,869 --> 00:42:56,170
it is and I think that unless there's an

1044
00:42:53,139 --> 00:42:58,179
Apps remedy oh there is okay nevermind

1045
00:42:56,170 --> 00:43:03,599
we already had a directory for it so I'm

1046
00:42:58,179 --> 00:43:07,509
gonna put it in there there we go

1047
00:43:03,599 --> 00:43:09,730
okay uh and so in this remedy directory

1048
00:43:07,510 --> 00:43:11,560
what you can see here I don't need this

1049
00:43:09,730 --> 00:43:13,900
stuff anymore I don't think so what you

1050
00:43:11,559 --> 00:43:15,549
can see here is I've got the only two

1051
00:43:13,900 --> 00:43:17,619
files in the remedy distribution so

1052
00:43:15,550 --> 00:43:20,230
refreshing just it's an executable that

1053
00:43:17,619 --> 00:43:21,759
you run and if you run it you know it

1054
00:43:20,230 --> 00:43:25,329
comes up instantly

1055
00:43:21,760 --> 00:43:27,700
I know Microsoft has long forgotten that

1056
00:43:25,329 --> 00:43:30,489
there is such a thing as an executable

1057
00:43:27,699 --> 00:43:32,169
that you can run by itself like I don't

1058
00:43:30,489 --> 00:43:34,509
know that there are people at Microsoft

1059
00:43:32,170 --> 00:43:38,980
who still know that an executable can

1060
00:43:34,510 --> 00:43:40,750
run by itself without 30,000 files in a

1061
00:43:38,980 --> 00:43:44,019
sequel server install but turns out

1062
00:43:40,750 --> 00:43:46,539
that's actually true and dotnet so

1063
00:43:44,019 --> 00:43:48,280
remedy if you run it it's pretty similar

1064
00:43:46,539 --> 00:43:51,340
to visual studio and in terms of the way

1065
00:43:48,280 --> 00:43:52,500
it looks the only real difference is you

1066
00:43:51,340 --> 00:43:54,340
know you don't have project

1067
00:43:52,500 --> 00:43:57,130
configuration windows because it doesn't

1068
00:43:54,340 --> 00:43:58,840
do builds right and so what you have is

1069
00:43:57,130 --> 00:44:00,460
this little thing here we can say what

1070
00:43:58,840 --> 00:44:02,380
you want to run and so I'm just gonna go

1071
00:44:00,460 --> 00:44:04,119
ahead and load up hand-made here under

1072
00:44:02,380 --> 00:44:08,050
that and we'll just go from there so I

1073
00:44:04,119 --> 00:44:09,219
want to run win32 hand-made right we

1074
00:44:08,050 --> 00:44:12,519
don't have any command argument to the

1075
00:44:09,219 --> 00:44:16,329
moment but the working directory is w

1076
00:44:12,519 --> 00:44:19,599
handmade there we go and let me go save

1077
00:44:16,329 --> 00:44:21,250
this into our debug directory under

1078
00:44:19,599 --> 00:44:24,009
win32 hand-made I think we already did

1079
00:44:21,250 --> 00:44:25,360
this when we tested it out and so what

1080
00:44:24,010 --> 00:44:27,100
you can see here is it works pretty

1081
00:44:25,360 --> 00:44:28,780
similar if I hit F

1082
00:44:27,099 --> 00:44:29,920
I can row so I should say where you can

1083
00:44:28,780 --> 00:44:40,600
get this - if you want to follow along

1084
00:44:29,920 --> 00:44:43,059
at home you can go here so remedy BGH io

1085
00:44:40,599 --> 00:44:46,509
/ er maybe G that or actually can you

1086
00:44:43,059 --> 00:44:49,539
just do this yeah so you can just do

1087
00:44:46,510 --> 00:44:53,800
that and this right here you can buy it

1088
00:44:49,539 --> 00:44:55,389
looks like it's 10 bucks and you can get

1089
00:44:53,800 --> 00:44:56,860
exactly what it is it's still in

1090
00:44:55,389 --> 00:44:59,710
development like I said it's only

1091
00:44:56,860 --> 00:45:00,849
version 0.1 so keep that in mind don't

1092
00:44:59,710 --> 00:45:04,240
expect it to be completely polished

1093
00:45:00,849 --> 00:45:07,360
don't expect there to be no bugs but it

1094
00:45:04,239 --> 00:45:10,829
does work I've tried it a bunch I think

1095
00:45:07,360 --> 00:45:10,829
the only thing that I've noticed lately

1096
00:45:11,489 --> 00:45:20,069
bug wise is it looks like it has some

1097
00:45:15,820 --> 00:45:22,480
trouble displaying things that are

1098
00:45:20,070 --> 00:45:23,950
compound structures passed as parameters

1099
00:45:22,480 --> 00:45:26,019
it seemed to be having trouble with that

1100
00:45:23,949 --> 00:45:27,819
so like if you have a struct that's a

1101
00:45:26,019 --> 00:45:28,989
parameter to a function it seemed to be

1102
00:45:27,820 --> 00:45:30,640
having trouble displaying those properly

1103
00:45:28,989 --> 00:45:32,919
like it couldn't figure out where they

1104
00:45:30,639 --> 00:45:34,599
were or something so there's a couple of

1105
00:45:32,920 --> 00:45:36,849
bugs like that I haven't reported all of

1106
00:45:34,599 --> 00:45:38,710
them to George yet so you know I'm

1107
00:45:36,849 --> 00:45:41,679
getting to that I do want to switch this

1108
00:45:38,710 --> 00:45:43,630
eventually and it looks like maybe our

1109
00:45:41,679 --> 00:45:45,969
hands gonna be forced there because

1110
00:45:43,630 --> 00:45:48,550
Microsoft just just pooped out on us so

1111
00:45:45,969 --> 00:45:50,619
anyway if I hit f5 it runs as normal

1112
00:45:48,550 --> 00:45:52,150
here's our game running right and

1113
00:45:50,619 --> 00:45:54,969
everything's fine

1114
00:45:52,150 --> 00:45:56,590
and in here you can do the same sort of

1115
00:45:54,969 --> 00:45:58,809
stuff you would normally do in Visual

1116
00:45:56,590 --> 00:46:01,059
Studio so you know it's got like Windows

1117
00:45:58,809 --> 00:46:02,739
that are dockable and the windows are

1118
00:46:01,059 --> 00:46:04,719
similar like right there's a registers

1119
00:46:02,739 --> 00:46:07,149
window and the memory window and

1120
00:46:04,719 --> 00:46:09,489
everything right and so we can recreate

1121
00:46:07,150 --> 00:46:11,050
essentially what we had so you know I I

1122
00:46:09,489 --> 00:46:16,889
normally put like the watch window up

1123
00:46:11,050 --> 00:46:19,960
here right and we've typically got like

1124
00:46:16,889 --> 00:46:23,289
the call stack and stuff like that I

1125
00:46:19,960 --> 00:46:28,199
don't know what else we used to put down

1126
00:46:23,289 --> 00:46:28,199
at the bottom exactly

1127
00:46:29,489 --> 00:46:35,909
yeah so I'm not sure so I'm gonna pull

1128
00:46:34,440 --> 00:46:38,610
these up here because I don't really

1129
00:46:35,909 --> 00:46:40,730
remember how this stuff worked and I'm

1130
00:46:38,610 --> 00:46:44,730
going to dock them sort of separately

1131
00:46:40,730 --> 00:46:47,159
just so I understand exactly how it used

1132
00:46:44,730 --> 00:46:49,650
to go I'm just trying to remember so I

1133
00:46:47,159 --> 00:46:51,509
know we used to put the call stack just

1134
00:46:49,650 --> 00:46:55,139
trying to recreate it I know we used to

1135
00:46:51,510 --> 00:46:57,570
put the call stack kind of down and the

1136
00:46:55,139 --> 00:46:59,699
probably the breakpoints sort of down in

1137
00:46:57,570 --> 00:47:05,369
here so like the breakpoints wind oops

1138
00:46:59,699 --> 00:47:06,569
the breakpoints window I won't probably

1139
00:47:05,369 --> 00:47:09,510
able to get to that without shrinking

1140
00:47:06,570 --> 00:47:10,740
these down huh too many windows on the

1141
00:47:09,510 --> 00:47:12,030
screen sorry I just want to take a

1142
00:47:10,739 --> 00:47:13,949
second to set this up so it's basically

1143
00:47:12,030 --> 00:47:15,480
the same I think most people probably

1144
00:47:13,949 --> 00:47:21,349
will be fine with it probably won't be

1145
00:47:15,480 --> 00:47:24,389
too different for now okay there we go

1146
00:47:21,349 --> 00:47:26,549
all right so I need to put the

1147
00:47:24,389 --> 00:47:29,909
breakpoints window down here I think

1148
00:47:26,550 --> 00:47:31,170
this is how we used to have it I so the

1149
00:47:29,909 --> 00:47:34,190
call stack probably would have gone

1150
00:47:31,170 --> 00:47:36,930
there right it's probably had these two

1151
00:47:34,190 --> 00:47:38,190
the output window usually goes like down

1152
00:47:36,929 --> 00:47:43,379
here oops that's not where I want of

1153
00:47:38,190 --> 00:47:47,030
that registers probably went up here

1154
00:47:43,380 --> 00:47:49,800
maybe I don't know let's say that it did

1155
00:47:47,030 --> 00:47:51,840
I'm gonna put memory down here for now

1156
00:47:49,800 --> 00:47:54,480
because I'm not sure where it went

1157
00:47:51,840 --> 00:47:57,630
modules and can go up here because

1158
00:47:54,480 --> 00:48:01,710
that's rarely used threads is more

1159
00:47:57,630 --> 00:48:07,108
common so I may want threads to kind of

1160
00:48:01,710 --> 00:48:09,500
be here all the time like it's just a

1161
00:48:07,108 --> 00:48:12,630
little bit of like a thing I can do here

1162
00:48:09,500 --> 00:48:15,539
and then output I'm just gonna put down

1163
00:48:12,630 --> 00:48:18,930
at the bottom or try to I need where's

1164
00:48:15,539 --> 00:48:21,269
my source window well I'll step in

1165
00:48:18,929 --> 00:48:25,679
that'll get me one right or a break

1166
00:48:21,269 --> 00:48:28,199
rather break there we go oh and

1167
00:48:25,679 --> 00:48:30,299
disassembly so the disassembly will go

1168
00:48:28,199 --> 00:48:32,339
down here as well I think so I'm gonna

1169
00:48:30,300 --> 00:48:35,369
put the outputs and the disassembly

1170
00:48:32,340 --> 00:48:36,869
there let me step up to a source window

1171
00:48:35,369 --> 00:48:40,730
so we can get that in place and then

1172
00:48:36,869 --> 00:48:40,730
hopefully we're good to go

1173
00:48:40,789 --> 00:48:44,619
we'll see

1174
00:48:42,639 --> 00:48:46,150
so where this isn't handmade hero here

1175
00:48:44,619 --> 00:48:48,250
so there's our source window I'm gonna

1176
00:48:46,150 --> 00:48:50,619
put the output window down in here and

1177
00:48:48,250 --> 00:48:53,730
the disassembly down there so that's how

1178
00:48:50,619 --> 00:48:57,548
I think I'm gonna run this for now and

1179
00:48:53,730 --> 00:48:59,380
we'll just see how it goes from from

1180
00:48:57,548 --> 00:49:03,420
here on out because I have no idea how

1181
00:48:59,380 --> 00:49:07,420
it will go from here on out so alright

1182
00:49:03,420 --> 00:49:11,880
uh so let's go ahead and save this

1183
00:49:07,420 --> 00:49:16,028
session save and in theory I think

1184
00:49:11,880 --> 00:49:18,490
hopefully now I don't know if we made a

1185
00:49:16,028 --> 00:49:20,528
remedy batch file we did so when you

1186
00:49:18,489 --> 00:49:21,939
load it up again I think I should just

1187
00:49:20,528 --> 00:49:23,170
be able to do this and we should be good

1188
00:49:21,940 --> 00:49:24,670
to go so you shouldn't have to fuss with

1189
00:49:23,170 --> 00:49:27,849
the windows anymore and I think we're

1190
00:49:24,670 --> 00:49:31,210
good okay alright so Visual Studio

1191
00:49:27,849 --> 00:49:33,010
replaced not because I wanted to but

1192
00:49:31,210 --> 00:49:37,139
because it literally decided it didn't

1193
00:49:33,010 --> 00:49:41,890
want to be used anymore which is great

1194
00:49:37,139 --> 00:49:44,528
so back to our story so what our

1195
00:49:41,889 --> 00:49:46,239
situation is currently is you know we

1196
00:49:44,528 --> 00:49:47,588
did our sprite testing stuff and we're

1197
00:49:46,239 --> 00:49:49,538
pretty happy with it

1198
00:49:47,588 --> 00:49:51,670
there's just one thing that I think I

1199
00:49:49,539 --> 00:49:53,559
want to tackle here and it's something

1200
00:49:51,670 --> 00:49:56,108
that we kind of did late at the end of

1201
00:49:53,559 --> 00:49:58,298
the previous stream and what that is is

1202
00:49:56,108 --> 00:50:00,848
if you look at what happens to our hero

1203
00:49:58,298 --> 00:50:03,038
here all of the sprite sorting actually

1204
00:50:00,849 --> 00:50:06,759
worked out quite well except for one

1205
00:50:03,039 --> 00:50:09,490
thing that I did and I want to fix it so

1206
00:50:06,759 --> 00:50:11,949
you'll notice it sorts really well into

1207
00:50:09,489 --> 00:50:14,078
everything now like it's very very good

1208
00:50:11,949 --> 00:50:15,848
ignore the glove at the moment because

1209
00:50:14,079 --> 00:50:17,079
we currently don't we didn't do any

1210
00:50:15,849 --> 00:50:19,720
programming for the glove it's just kind

1211
00:50:17,079 --> 00:50:21,970
of sitting there now and so it it will

1212
00:50:19,719 --> 00:50:23,588
not keep itself in a good place for

1213
00:50:21,969 --> 00:50:25,118
sorting it's completely busted

1214
00:50:23,588 --> 00:50:26,650
but if you look at what we're actually

1215
00:50:25,119 --> 00:50:28,028
doing here right you can see that the

1216
00:50:26,650 --> 00:50:29,740
glove should be sorted down a little

1217
00:50:28,028 --> 00:50:31,239
lower we can fix that any time we want

1218
00:50:29,739 --> 00:50:34,419
but I just don't care about the glove at

1219
00:50:31,239 --> 00:50:36,308
the moment um what you can see about

1220
00:50:34,420 --> 00:50:38,139
this is it's doing really good to let us

1221
00:50:36,309 --> 00:50:39,789
do full 3d with our stuff it sorts

1222
00:50:38,139 --> 00:50:41,618
things in really nicely and yet still

1223
00:50:39,789 --> 00:50:43,450
presents them in a nice 2d way I'm

1224
00:50:41,619 --> 00:50:44,680
really happy with how we did that it

1225
00:50:43,449 --> 00:50:46,058
took us a bunch of work to figure out

1226
00:50:44,679 --> 00:50:47,768
how we should do that properly I think

1227
00:50:46,059 --> 00:50:49,569
we did a great job there's just one

1228
00:50:47,768 --> 00:50:52,899
issue do you see how we're clipping into

1229
00:50:49,568 --> 00:50:55,358
the ground there so we already have

1230
00:50:52,900 --> 00:50:56,000
solved this issue meaning we know how to

1231
00:50:55,358 --> 00:50:59,900
not clip

1232
00:50:56,000 --> 00:51:01,969
the ground we effectively disabled the

1233
00:50:59,900 --> 00:51:04,309
thing that would have prevented it from

1234
00:51:01,969 --> 00:51:08,119
getting clipped into the ground and the

1235
00:51:04,309 --> 00:51:13,059
reason that we did that was because we

1236
00:51:08,119 --> 00:51:15,589
didn't want freely rotating objects to

1237
00:51:13,059 --> 00:51:17,750
change their sort distance too much

1238
00:51:15,590 --> 00:51:20,380
right because what was actually

1239
00:51:17,750 --> 00:51:23,719
happening there and you can kind of see

1240
00:51:20,380 --> 00:51:26,059
what's going on right is we're shearing

1241
00:51:23,719 --> 00:51:29,359
do you see how we're shearing that axis

1242
00:51:26,059 --> 00:51:31,429
is getting its sheared right and that

1243
00:51:29,360 --> 00:51:33,980
shearing is creating something that

1244
00:51:31,429 --> 00:51:37,009
extends down into the plane we had

1245
00:51:33,980 --> 00:51:39,170
previously explicitly solved for where

1246
00:51:37,010 --> 00:51:41,720
to put this point so that it wouldn't

1247
00:51:39,170 --> 00:51:45,200
extend down in the plane but the problem

1248
00:51:41,719 --> 00:51:49,159
is we locked that distance so we don't

1249
00:51:45,199 --> 00:51:53,750
let it increase that as the user pushes

1250
00:51:49,159 --> 00:51:56,210
the shear or the rotation and that's

1251
00:51:53,750 --> 00:51:58,849
what's causing the problem so we have to

1252
00:51:56,210 --> 00:52:02,119
make a decision here about what we want

1253
00:51:58,849 --> 00:52:07,069
to do when we create those shearing

1254
00:52:02,119 --> 00:52:09,109
effects because we are fundamentally

1255
00:52:07,070 --> 00:52:11,360
basing the character at a particular

1256
00:52:09,110 --> 00:52:14,599
location in the world that is not where

1257
00:52:11,360 --> 00:52:17,150
it has to shim the sprites to if we do

1258
00:52:14,599 --> 00:52:19,190
fix the location we will interpenetrate

1259
00:52:17,150 --> 00:52:21,130
now we could choose to hover the

1260
00:52:19,190 --> 00:52:23,119
character a little bit to prevent that

1261
00:52:21,130 --> 00:52:26,930
that doesn't seem like a great solution

1262
00:52:23,119 --> 00:52:30,650
we could choose to not fix the distance

1263
00:52:26,929 --> 00:52:32,539
and that to me sounds better why does it

1264
00:52:30,650 --> 00:52:34,910
sound better well the reason we fix the

1265
00:52:32,539 --> 00:52:38,900
distance was to prevent spinning things

1266
00:52:34,909 --> 00:52:43,029
or other stuff like that from pulsing

1267
00:52:38,900 --> 00:52:49,340
right from going in and out in and out

1268
00:52:43,030 --> 00:52:50,870
that is a very small subset of the

1269
00:52:49,340 --> 00:52:53,390
things that will actually happen in the

1270
00:52:50,869 --> 00:52:56,089
game and so what I'm thinking is we

1271
00:52:53,389 --> 00:52:57,980
probably want the default behavior to be

1272
00:52:56,090 --> 00:53:00,650
the adjustment that we were doing before

1273
00:52:57,980 --> 00:53:01,969
and then if we do have to handle

1274
00:53:00,650 --> 00:53:04,789
something that's like continuously

1275
00:53:01,969 --> 00:53:06,349
spinning maybe that's just a flag we put

1276
00:53:04,789 --> 00:53:09,599
in there right maybe that's just

1277
00:53:06,349 --> 00:53:12,839
something that we handle especially

1278
00:53:09,599 --> 00:53:15,409
so I want to show you that code and I

1279
00:53:12,840 --> 00:53:19,350
want to see what we can do about it so

1280
00:53:15,409 --> 00:53:22,109
if you remember how this works inside

1281
00:53:19,349 --> 00:53:23,159
the entity set well I can't see anything

1282
00:53:22,110 --> 00:53:30,000
it's too bright outside

1283
00:53:23,159 --> 00:53:32,009
once again yeah man that's bright

1284
00:53:30,000 --> 00:53:35,070
too much Sun let's see Anna wasn't

1285
00:53:32,010 --> 00:53:36,300
supposed to have Sun um so if you take a

1286
00:53:35,070 --> 00:53:38,250
look at what happens during entity

1287
00:53:36,300 --> 00:53:40,680
rendering what you can see here is we do

1288
00:53:38,250 --> 00:53:42,090
a bunch of work to figure out where the

1289
00:53:40,679 --> 00:53:46,409
sprite should be placed and you can

1290
00:53:42,090 --> 00:53:48,420
actually see that happening when it

1291
00:53:46,409 --> 00:53:51,569
actually places the minimum P so you can

1292
00:53:48,420 --> 00:53:55,349
see this operation occurring here it

1293
00:53:51,570 --> 00:53:57,390
says look how high is the sprite right

1294
00:53:55,349 --> 00:54:02,309
like what you know how how high up is it

1295
00:53:57,389 --> 00:54:06,000
sprite and what is the the camera z-axis

1296
00:54:02,309 --> 00:54:09,360
right the the Z not the cameras V axis

1297
00:54:06,000 --> 00:54:13,710
what is the Z component of the camera z

1298
00:54:09,360 --> 00:54:15,420
axis right so which you know for every

1299
00:54:13,710 --> 00:54:19,019
step we take towards the camera

1300
00:54:15,420 --> 00:54:20,670
how high up would be going in Z and that

1301
00:54:19,019 --> 00:54:22,980
we're doing is taking the placement that

1302
00:54:20,670 --> 00:54:28,110
we would have used and we're sliding it

1303
00:54:22,980 --> 00:54:32,579
forward in you know along the camera z

1304
00:54:28,110 --> 00:54:34,769
axis for however long that would be so

1305
00:54:32,579 --> 00:54:38,000
however much we would actually need to

1306
00:54:34,769 --> 00:54:40,139
be for that that height us that right

1307
00:54:38,000 --> 00:54:42,960
and so what that's doing is that's

1308
00:54:40,139 --> 00:54:45,210
lifting us up so that the base of our

1309
00:54:42,960 --> 00:54:46,740
cells I guess will not go through

1310
00:54:45,210 --> 00:54:52,740
whatever the point was that we started

1311
00:54:46,739 --> 00:54:55,949
on if that makes sense I and so when we

1312
00:54:52,739 --> 00:55:00,169
do sprite values for up right which is

1313
00:54:55,949 --> 00:55:00,169
the call that gives us this information

1314
00:55:00,679 --> 00:55:08,449
here it is right there

1315
00:55:05,409 --> 00:55:11,960
um when we do this what you can see is

1316
00:55:08,449 --> 00:55:15,308
that Z displacement is a constant value

1317
00:55:11,960 --> 00:55:19,789
right it's it's not taking into account

1318
00:55:15,309 --> 00:55:23,359
the actual Z displacement based on the

1319
00:55:19,789 --> 00:55:26,539
rotated axis right it's just kind of

1320
00:55:23,358 --> 00:55:29,869
doing a constant value that will not

1321
00:55:26,539 --> 00:55:33,980
depend on anything in particular I

1322
00:55:29,869 --> 00:55:42,789
believe or am I wrong about that well

1323
00:55:33,980 --> 00:55:45,260
actually what's our y-axis H ah so yeah

1324
00:55:42,789 --> 00:55:47,539
the fact that it's using the H there is

1325
00:55:45,260 --> 00:55:50,240
why it's constant right so this is the y

1326
00:55:47,539 --> 00:55:53,119
axis we're actually using which includes

1327
00:55:50,239 --> 00:55:56,028
the users twist right includes the

1328
00:55:53,119 --> 00:55:59,048
rotation that the user is sort of

1329
00:55:56,028 --> 00:56:03,260
enforcing there and then this y axis H

1330
00:55:59,048 --> 00:56:06,048
is actually that's what's telling us hey

1331
00:56:03,260 --> 00:56:08,059
here's the camera version the thing

1332
00:56:06,048 --> 00:56:10,699
that's just constant in camera space so

1333
00:56:08,059 --> 00:56:13,519
this is never going to change no matter

1334
00:56:10,699 --> 00:56:15,019
how this right rotates right only

1335
00:56:13,519 --> 00:56:18,769
different camera positioning will ever

1336
00:56:15,019 --> 00:56:22,068
change the y axis H value and so that's

1337
00:56:18,769 --> 00:56:26,269
why in this case this thing doesn't

1338
00:56:22,068 --> 00:56:31,400
actually vary it's because of that right

1339
00:56:26,269 --> 00:56:33,858
of that Z value so in our case if we

1340
00:56:31,400 --> 00:56:35,900
wanted to figure out what that

1341
00:56:33,858 --> 00:56:38,210
displacement is going to be you can see

1342
00:56:35,900 --> 00:56:40,278
us here like we've got the aligned P Y

1343
00:56:38,210 --> 00:56:43,369
that's the amount of shift there is off

1344
00:56:40,278 --> 00:56:45,048
of the baseline you can see the world

1345
00:56:43,369 --> 00:56:46,400
dim why and that's that height there so

1346
00:56:45,048 --> 00:56:48,559
that's how much we're gonna move and

1347
00:56:46,400 --> 00:56:50,750
then this is basically saying well

1348
00:56:48,559 --> 00:56:54,920
that's the axis that we were going to

1349
00:56:50,750 --> 00:56:57,380
move along in Z right and the problem

1350
00:56:54,920 --> 00:57:00,108
that we have is that it doesn't

1351
00:56:57,380 --> 00:57:03,440
correspond to this it doesn't actually

1352
00:57:00,108 --> 00:57:07,578
correspond to the value that we're

1353
00:57:03,440 --> 00:57:10,369
getting here great and so if we change

1354
00:57:07,579 --> 00:57:14,470
this to be using the actual y axis that

1355
00:57:10,369 --> 00:57:16,660
includes the shearing I would suspect we

1356
00:57:14,469 --> 00:57:19,689
get a result that has less of the

1357
00:57:16,659 --> 00:57:20,769
problem right but it actually no so it

1358
00:57:19,690 --> 00:57:27,099
doesn't look like we actually get much

1359
00:57:20,769 --> 00:57:31,090
of an improvement there which is a

1360
00:57:27,099 --> 00:57:38,080
little weird oh so that already has the

1361
00:57:31,090 --> 00:57:39,608
world dim Y in it so this should I'm

1362
00:57:38,079 --> 00:57:43,539
gonna save this computation than what we

1363
00:57:39,608 --> 00:57:46,750
had before and I'm gonna remove that and

1364
00:57:43,539 --> 00:57:48,940
this just to see what happens if we just

1365
00:57:46,750 --> 00:57:54,239
used the real axis we were actually

1366
00:57:48,940 --> 00:57:56,650
going to render along right and so that

1367
00:57:54,239 --> 00:57:58,449
does in fact solve the problem which is

1368
00:57:56,650 --> 00:58:00,340
what I was expecting to have happen I

1369
00:57:58,449 --> 00:58:01,779
forgot that it would double count the

1370
00:58:00,340 --> 00:58:03,970
length but once you remove double

1371
00:58:01,780 --> 00:58:05,560
counting of the length we're good and

1372
00:58:03,969 --> 00:58:08,199
what you can see there is now we have

1373
00:58:05,559 --> 00:58:11,230
correctly we always solve correctly for

1374
00:58:08,199 --> 00:58:14,500
the that interpenetration and it's good

1375
00:58:11,230 --> 00:58:16,090
right and so the only real problem we

1376
00:58:14,500 --> 00:58:17,920
will ever have in this because I can now

1377
00:58:16,090 --> 00:58:21,910
just go through everywhere and I think

1378
00:58:17,920 --> 00:58:24,190
everything will just be fine right

1379
00:58:21,909 --> 00:58:27,190
so if I just go through any particular

1380
00:58:24,190 --> 00:58:27,789
place that I want to now exploring in

1381
00:58:27,190 --> 00:58:29,440
the world

1382
00:58:27,789 --> 00:58:31,389
I shouldn't ever really have any

1383
00:58:29,440 --> 00:58:33,880
problems with that right

1384
00:58:31,389 --> 00:58:36,338
and in some sense in some cases like

1385
00:58:33,880 --> 00:58:38,800
here well it's a little bit hard to see

1386
00:58:36,338 --> 00:58:41,230
but you can see that actually the arc of

1387
00:58:38,800 --> 00:58:43,180
the character incorrectly goes through

1388
00:58:41,230 --> 00:58:45,519
geometry so we will get some

1389
00:58:43,179 --> 00:58:48,519
interpenetration till we fix these arcs

1390
00:58:45,519 --> 00:58:52,358
to properly go up and down like to

1391
00:58:48,519 --> 00:58:54,338
always hop as large a hop is necessary

1392
00:58:52,358 --> 00:58:56,139
but even there it's actually not

1393
00:58:54,338 --> 00:58:57,639
noticeable particularly much there's a

1394
00:58:56,139 --> 00:59:01,088
little bit of interpenetration right

1395
00:58:57,639 --> 00:59:04,480
there so just a larger arc will fix that

1396
00:59:01,088 --> 00:59:08,349
problem if that makes sense

1397
00:59:04,480 --> 00:59:10,929
but you know otherwise this just solves

1398
00:59:08,349 --> 00:59:13,930
the problem so I think what we want to

1399
00:59:10,929 --> 00:59:17,739
do at least for now is say maybe that's

1400
00:59:13,929 --> 00:59:22,719
just how we compute this and then we

1401
00:59:17,739 --> 00:59:25,329
will do some sort of you know if we have

1402
00:59:22,719 --> 00:59:28,189
something rotating around that's pulsing

1403
00:59:25,329 --> 00:59:32,329
too much we'll just fix that

1404
00:59:28,190 --> 00:59:34,599
at as necessary right I think that

1405
00:59:32,329 --> 00:59:36,710
should probably be sufficient for now

1406
00:59:34,599 --> 00:59:38,809
and then if we need to come up with

1407
00:59:36,710 --> 00:59:40,909
something even more creative with how we

1408
00:59:38,809 --> 00:59:42,559
project it we can cross that bridge once

1409
00:59:40,909 --> 00:59:46,039
we actually have an example of something

1410
00:59:42,559 --> 00:59:48,440
that doesn't work right that seems to me

1411
00:59:46,039 --> 00:59:52,820
to be the most sane solution to the

1412
00:59:48,440 --> 00:59:56,929
problem at least that's what I would say

1413
00:59:52,820 --> 00:59:59,480
seems like a good plan I don't know if

1414
00:59:56,929 --> 01:00:01,190
other people have a better idea we can

1415
00:59:59,480 --> 01:00:02,179
also try something else but that seems

1416
01:00:01,190 --> 01:00:03,470
to me to be fine

1417
01:00:02,179 --> 01:00:05,449
you know I'll be honest with you I don't

1418
01:00:03,469 --> 01:00:06,769
remember oh right the reason that

1419
01:00:05,449 --> 01:00:08,419
there's two exits two things is for

1420
01:00:06,769 --> 01:00:11,960
placing items room so this is this is

1421
01:00:08,420 --> 01:00:13,909
like an item room or something so all

1422
01:00:11,960 --> 01:00:15,889
right so anyway I think all this is

1423
01:00:13,909 --> 01:00:18,440
working great I'm pretty happy with how

1424
01:00:15,889 --> 01:00:21,409
it looks so I think we can now move on

1425
01:00:18,440 --> 01:00:24,470
to other problems one thing that we do

1426
01:00:21,409 --> 01:00:27,529
have right now you can see we when we

1427
01:00:24,469 --> 01:00:29,179
introduced the hopping in actual Z do

1428
01:00:27,530 --> 01:00:31,760
you see how we're getting flashing of

1429
01:00:29,179 --> 01:00:34,639
these bricks now the reason for that is

1430
01:00:31,760 --> 01:00:37,730
the height of the character not the

1431
01:00:34,639 --> 01:00:41,299
camera is what's determining that value

1432
01:00:37,730 --> 01:00:44,389
and so I think what we probably want to

1433
01:00:41,300 --> 01:00:47,420
do there is actually let the cameras

1434
01:00:44,389 --> 01:00:52,940
resolve to position B the thing that's

1435
01:00:47,420 --> 01:00:55,550
actually going to do that clamping like

1436
01:00:52,940 --> 01:00:58,039
where the camera would like to stay

1437
01:00:55,550 --> 01:01:02,180
because the camera is like ignoring that

1438
01:00:58,039 --> 01:01:05,719
Z and we want the fading of blocks like

1439
01:01:02,179 --> 01:01:09,139
which is just our alpha Z range we had a

1440
01:01:05,719 --> 01:01:17,149
what's what's wrong here total weight

1441
01:01:09,139 --> 01:01:18,650
zero oh this is a lightning bug I don't

1442
01:01:17,150 --> 01:01:23,829
really care about that because we have

1443
01:01:18,650 --> 01:01:23,829
to redo letting anyway point being the

1444
01:01:29,769 --> 01:01:38,920
we want ideally not to change the Z

1445
01:01:34,539 --> 01:01:41,980
bounds for that information unless we

1446
01:01:38,920 --> 01:01:44,619
actually detect that the camera would be

1447
01:01:41,980 --> 01:01:47,380
moving right so if we're gonna leave the

1448
01:01:44,619 --> 01:01:51,579
camera at one Z level we don't really

1449
01:01:47,380 --> 01:01:53,710
want the we don't we don't want to

1450
01:01:51,579 --> 01:01:56,799
include things like that bounce if the

1451
01:01:53,710 --> 01:02:00,849
entity itself is just not really going

1452
01:01:56,800 --> 01:02:03,460
to be moving its general Z value so we

1453
01:02:00,849 --> 01:02:05,469
want a notion of what the ground level

1454
01:02:03,460 --> 01:02:09,130
point for this thing is actually gonna

1455
01:02:05,469 --> 01:02:10,779
be I think we need some way of making

1456
01:02:09,130 --> 01:02:13,240
sure that the camera understands that

1457
01:02:10,780 --> 01:02:14,619
and I'm not sure the best way to do that

1458
01:02:13,239 --> 01:02:17,859
but I think that's one thing that we

1459
01:02:14,619 --> 01:02:20,410
want to put on our list if that makes

1460
01:02:17,860 --> 01:02:22,450
sense so just looking at what I think we

1461
01:02:20,409 --> 01:02:26,859
should probably be working on now I'm

1462
01:02:22,449 --> 01:02:28,419
going to go ahead and say that yeah it's

1463
01:02:26,860 --> 01:02:30,070
kind of a toss-up I think we probably

1464
01:02:28,420 --> 01:02:31,869
want to do is finish up the asset

1465
01:02:30,070 --> 01:02:33,550
packing and stuff for sounds and things

1466
01:02:31,869 --> 01:02:36,608
like that so you can call that system

1467
01:02:33,550 --> 01:02:38,380
done so I think we may want to move on

1468
01:02:36,608 --> 01:02:41,440
that and then I think we want to do

1469
01:02:38,380 --> 01:02:43,510
finalize our rendering path so fix up

1470
01:02:41,440 --> 01:02:45,369
the lighting so that we're happy with it

1471
01:02:43,510 --> 01:02:47,650
because there's only that's the sort of

1472
01:02:45,369 --> 01:02:50,140
test lighting in there now which you can

1473
01:02:47,650 --> 01:02:51,400
see the barrier moving on right so we

1474
01:02:50,139 --> 01:02:54,759
want something that's gonna be really

1475
01:02:51,400 --> 01:02:57,039
nice and clean for that as we go forward

1476
01:02:54,760 --> 01:02:59,140
and I have some ideas about how to fix

1477
01:02:57,039 --> 01:03:02,289
that actually so I think it might not be

1478
01:02:59,139 --> 01:03:04,329
as bad as it could be but I also did

1479
01:03:02,289 --> 01:03:05,710
want to point out that I do think we

1480
01:03:04,329 --> 01:03:06,880
made the right decision doing some

1481
01:03:05,710 --> 01:03:08,889
pretty good lighting in there because

1482
01:03:06,880 --> 01:03:11,079
the difference between you know if you

1483
01:03:08,889 --> 01:03:13,269
look at how nice it looks with the

1484
01:03:11,079 --> 01:03:15,099
lighting in there it just looks much

1485
01:03:13,269 --> 01:03:18,608
better right

1486
01:03:15,099 --> 01:03:20,559
so I feel like we really made the right

1487
01:03:18,608 --> 01:03:22,539
decision having some realistic lighting

1488
01:03:20,559 --> 01:03:24,159
because it just provides so much

1489
01:03:22,539 --> 01:03:26,079
character I mean look at what it looks

1490
01:03:24,159 --> 01:03:28,299
like when you don't have lighting right

1491
01:03:26,079 --> 01:03:30,849
you know that's what what things look

1492
01:03:28,300 --> 01:03:33,160
like and there's just no subtlety to it

1493
01:03:30,849 --> 01:03:34,750
right so I think we definitely want the

1494
01:03:33,159 --> 01:03:37,389
good lighting in there we just want to

1495
01:03:34,750 --> 01:03:39,579
hack it hack it a little bit more than

1496
01:03:37,389 --> 01:03:43,089
we're hacking it right now so do us do a

1497
01:03:39,579 --> 01:03:43,389
worse approximation basically not so

1498
01:03:43,090 --> 01:03:45,100
much

1499
01:03:43,389 --> 01:03:47,549
casting because right now it's a little

1500
01:03:45,099 --> 01:03:50,920
bit too accurate so we just can't do it

1501
01:03:47,550 --> 01:03:52,930
at the speeds that we would want unless

1502
01:03:50,920 --> 01:03:54,010
maybe we start using GPU nonsense or

1503
01:03:52,929 --> 01:03:57,609
stuff like that but I don't really want

1504
01:03:54,010 --> 01:03:59,020
to go down that route so we really do

1505
01:03:57,610 --> 01:04:00,370
think we made the right decision putting

1506
01:03:59,019 --> 01:04:01,900
some nice lighting in there I just think

1507
01:04:00,369 --> 01:04:03,759
we now need to go in and maybe tone it

1508
01:04:01,900 --> 01:04:06,059
down a bit make it a little bit more

1509
01:04:03,760 --> 01:04:09,160
semantic and a little bit less realistic

1510
01:04:06,059 --> 01:04:11,679
so that we can still have just a really

1511
01:04:09,159 --> 01:04:13,779
nice consistent performance profile for

1512
01:04:11,679 --> 01:04:17,619
the game even if you don't have the

1513
01:04:13,780 --> 01:04:21,460
world's beefiest system and then yeah so

1514
01:04:17,619 --> 01:04:25,389
I think we want to kind of follow that

1515
01:04:21,460 --> 01:04:27,699
that path for now I'm gonna leave this

1516
01:04:25,389 --> 01:04:33,339
like this and imma put two doing here

1517
01:04:27,699 --> 01:04:37,619
that says we need to assess this

1518
01:04:33,340 --> 01:04:42,640
calculation and perhaps introduce a

1519
01:04:37,619 --> 01:04:50,219
selectable alternate version for this

1520
01:04:42,639 --> 01:04:52,239
scenario where we have spin right

1521
01:04:50,219 --> 01:04:54,159
because I really do think we're gonna

1522
01:04:52,239 --> 01:04:57,009
have a little bit of a problem with

1523
01:04:54,159 --> 01:05:00,069
spinning entities so I are pretty sure

1524
01:04:57,010 --> 01:05:02,020
we should go back and look at those a

1525
01:05:00,070 --> 01:05:06,250
little bit more carefully when the time

1526
01:05:02,019 --> 01:05:10,030
comes all right so what I want to do now

1527
01:05:06,250 --> 01:05:12,579
is start pushing again on the asset side

1528
01:05:10,030 --> 01:05:16,210
of things we could do some cleanup

1529
01:05:12,579 --> 01:05:18,429
we should get WAV files in there we have

1530
01:05:16,210 --> 01:05:20,590
some test WAV files right now we're not

1531
01:05:18,429 --> 01:05:23,559
doing anything with them so if we look

1532
01:05:20,590 --> 01:05:26,910
inside hand-made right now we've got

1533
01:05:23,559 --> 01:05:29,409
sort of this data directory and I think

1534
01:05:26,909 --> 01:05:30,879
yeah you can see in here and I don't

1535
01:05:29,409 --> 01:05:36,399
know if you can even hear these let me

1536
01:05:30,880 --> 01:05:39,039
see right now let me on this machine tab

1537
01:05:36,400 --> 01:05:41,829
over to the OBS window I just I don't

1538
01:05:39,039 --> 01:05:45,000
actually know what will happen if I play

1539
01:05:41,829 --> 01:05:45,000
a sound on here

1540
01:05:52,789 --> 01:06:08,349
so I'm not hearing it starters hmm so I

1541
01:06:02,059 --> 01:06:08,349
can't hear it either it's not just you

1542
01:06:13,320 --> 01:06:24,510
says USB audio device for speakers why

1543
01:06:19,500 --> 01:06:32,949
does it say that I just want there it is

1544
01:06:24,510 --> 01:06:32,949
[Music]

1545
01:06:33,010 --> 01:06:58,100
can you guys hear that everyone got that

1546
01:06:50,260 --> 01:06:59,900
perfect okay so if we want to put some

1547
01:06:58,099 --> 01:07:15,650
of these in there right I don't know

1548
01:06:59,900 --> 01:07:18,380
what these all are got some bloops all

1549
01:07:15,650 --> 01:07:21,340
right so we've got some stupid sounds

1550
01:07:18,380 --> 01:07:24,320
here that we can just use for testing

1551
01:07:21,340 --> 01:07:29,300
and so what I want to do because we

1552
01:07:24,320 --> 01:07:31,910
don't have the sound importing put into

1553
01:07:29,300 --> 01:07:33,590
this path like we did sound importing

1554
01:07:31,909 --> 01:07:35,480
before but we don't have it part of the

1555
01:07:33,590 --> 01:07:38,930
nice like dynamic loading system and all

1556
01:07:35,480 --> 01:07:42,050
that stuff that that we ended up doing

1557
01:07:38,929 --> 01:07:44,569
for the art assets and stuff so if we

1558
01:07:42,050 --> 01:07:48,289
want to start making this work the same

1559
01:07:44,570 --> 01:07:49,400
way as everything else is working what

1560
01:07:48,289 --> 01:07:52,429
I'm gonna do is I'm going to grab that

1561
01:07:49,400 --> 01:07:56,210
data and I'm gonna put it into the

1562
01:07:52,429 --> 01:07:58,369
sources directory as just a test so into

1563
01:07:56,210 --> 01:08:00,349
that like base game directory where

1564
01:07:58,369 --> 01:08:02,539
we've got the art music sound we sort of

1565
01:08:00,349 --> 01:08:05,719
set it up for these things to exist in

1566
01:08:02,539 --> 01:08:09,529
here right and so what I'm gonna do is

1567
01:08:05,719 --> 01:08:11,599
I'm gonna take the music tests and then

1568
01:08:09,530 --> 01:08:15,110
I'm gonna put the other things into

1569
01:08:11,599 --> 01:08:18,710
sound and so we've got music in one and

1570
01:08:15,110 --> 01:08:23,360
you've got sound in another and what I

1571
01:08:18,710 --> 01:08:26,539
want to do is I want to make the parser

1572
01:08:23,359 --> 01:08:30,859
that parses the tag files know how to

1573
01:08:26,539 --> 01:08:33,979
load music and sound like it knows how

1574
01:08:30,859 --> 01:08:35,929
to load everything else so if we look at

1575
01:08:33,979 --> 01:08:37,639
the asset directory right all I'm gonna

1576
01:08:35,930 --> 01:08:40,280
do is just add the parser for it today

1577
01:08:37,640 --> 01:08:41,600
and then tomorrow we'll merge in our cuz

1578
01:08:40,279 --> 01:08:43,489
weep this is really it's going to be an

1579
01:08:41,600 --> 01:08:46,440
exercise mostly and cut and paste

1580
01:08:43,489 --> 01:08:48,420
because we did all the work for this or

1581
01:08:46,439 --> 01:08:50,669
we just need to merge it into the game

1582
01:08:48,420 --> 01:08:56,060
so it's something that can be run

1583
01:08:50,670 --> 01:08:58,949
automatically right so if I go into the

1584
01:08:56,060 --> 01:09:02,250
I'm sorry I actually want the there's an

1585
01:08:58,949 --> 01:09:04,649
import direct there's an import file now

1586
01:09:02,250 --> 01:09:07,829
so if I go into the import file what you

1587
01:09:04,649 --> 01:09:10,139
can see is inside our synchronized asset

1588
01:09:07,829 --> 01:09:14,340
file changes right we go through and we

1589
01:09:10,140 --> 01:09:23,640
read each one of these hht files and

1590
01:09:14,340 --> 01:09:28,770
those hht files as you recall our tags

1591
01:09:23,640 --> 01:09:34,110
directory um and I don't know what these

1592
01:09:28,770 --> 01:09:35,880
are I guess you think so I guess this is

1593
01:09:34,109 --> 01:09:37,409
where Windows decided to put our temp

1594
01:09:35,880 --> 01:09:39,659
files when we were doing the temp file

1595
01:09:37,409 --> 01:09:41,399
stuff oh right because it will rewrite

1596
01:09:39,659 --> 01:09:46,010
them in that directory and I guess it

1597
01:09:41,399 --> 01:09:50,069
just didn't delete them so that's fine

1598
01:09:46,010 --> 01:09:53,070
I'll delete them for you I thought the

1599
01:09:50,069 --> 01:09:54,299
whole point of opening as a temp file

1600
01:09:53,069 --> 01:09:55,679
was that it would delete well we

1601
01:09:54,300 --> 01:10:00,750
probably don't pass the right flags for

1602
01:09:55,680 --> 01:10:02,640
that maybe I'm not sure we can look at

1603
01:10:00,750 --> 01:10:05,579
that separately point being if I go in

1604
01:10:02,640 --> 01:10:07,110
and open up the base game asset file you

1605
01:10:05,579 --> 01:10:08,909
know in here we've got like all this

1606
01:10:07,109 --> 01:10:10,439
stuff right there's like heads and

1607
01:10:08,909 --> 01:10:13,979
bodies and blocks and blah blah blah

1608
01:10:10,439 --> 01:10:17,189
right what I want to be able to do is

1609
01:10:13,979 --> 01:10:18,899
add sound stuff in here so you know if

1610
01:10:17,189 --> 01:10:20,909
you take a look at what's going on in

1611
01:10:18,899 --> 01:10:22,889
the handmade sources directory you can

1612
01:10:20,909 --> 01:10:24,479
see that inside base game there's that

1613
01:10:22,890 --> 01:10:26,789
music and there's music test stuff I

1614
01:10:24,479 --> 01:10:29,129
have and so what I would like to do is

1615
01:10:26,789 --> 01:10:33,689
just say well I guess we just have music

1616
01:10:29,130 --> 01:10:35,670
and it's music test valve right and you

1617
01:10:33,689 --> 01:10:37,289
know it should have tags just like

1618
01:10:35,670 --> 01:10:38,760
everything else has tags so like you

1619
01:10:37,289 --> 01:10:40,680
know the same way that we tag this stuff

1620
01:10:38,760 --> 01:10:43,739
with information that tells the game

1621
01:10:40,680 --> 01:10:47,850
what it is we can do the same here so we

1622
01:10:43,739 --> 01:10:49,500
could say like tags I don't know maybe

1623
01:10:47,850 --> 01:10:51,480
this is like intro music or something

1624
01:10:49,500 --> 01:10:54,479
and I don't know

1625
01:10:51,479 --> 01:10:56,579
so in our tags file we don't actually

1626
01:10:54,479 --> 01:10:59,579
have anything for tagging music at the

1627
01:10:56,579 --> 01:11:00,090
moment I don't think you can see here

1628
01:10:59,579 --> 01:11:01,920
that we just

1629
01:11:00,090 --> 01:11:05,069
like a bunch of tags that we use for

1630
01:11:01,920 --> 01:11:07,500
stuff and so if I wanted to do some tags

1631
01:11:05,069 --> 01:11:14,489
for this I could just say let's just

1632
01:11:07,500 --> 01:11:19,350
make a tag for like the title screen I

1633
01:11:14,489 --> 01:11:20,639
guess I think also if I if I'm honest

1634
01:11:19,350 --> 01:11:23,850
about it actually I suppose this should

1635
01:11:20,640 --> 01:11:27,000
be in the intro tags file so you know

1636
01:11:23,850 --> 01:11:28,920
how we have the intro cutscene so you

1637
01:11:27,000 --> 01:11:31,770
can see here like this stuff is labeled

1638
01:11:28,920 --> 01:11:41,010
with like these shot tags and all this

1639
01:11:31,770 --> 01:11:42,750
stuff right seems like maybe I should

1640
01:11:41,010 --> 01:11:46,070
just call this the title screen music so

1641
01:11:42,750 --> 01:11:50,579
in here what I'm going to do is say look

1642
01:11:46,069 --> 01:11:54,109
there's a music test in here and by the

1643
01:11:50,579 --> 01:11:56,130
way the author on that is not Ana record

1644
01:11:54,109 --> 01:12:02,099
actually I guess the author on this is

1645
01:11:56,130 --> 01:12:13,890
Casey Mira Torre and also this

1646
01:12:02,100 --> 01:12:15,930
description is wrong so all I really

1647
01:12:13,890 --> 01:12:17,789
want to do here is have some tags for

1648
01:12:15,930 --> 01:12:19,289
the music test which we'll say is for

1649
01:12:17,789 --> 01:12:20,579
the intro cutscene one of the

1650
01:12:19,289 --> 01:12:22,350
interesting things about this you can

1651
01:12:20,579 --> 01:12:23,789
see here we have like shot index layer

1652
01:12:22,350 --> 01:12:25,890
index and what we did for the title

1653
01:12:23,789 --> 01:12:28,229
screen is we had like a thing here I'm

1654
01:12:25,890 --> 01:12:29,610
kind of interested in saying look maybe

1655
01:12:28,229 --> 01:12:32,899
we just say this tag for the intro

1656
01:12:29,609 --> 01:12:40,159
cutscene and maybe we say there's a tag

1657
01:12:32,899 --> 01:12:43,319
for the title screen Oh God

1658
01:12:40,159 --> 01:12:52,619
what just happened I've gone into some

1659
01:12:43,319 --> 01:12:53,969
kind of screen shot mode okay fine uh so

1660
01:12:52,619 --> 01:12:55,409
that way I can tag these things more

1661
01:12:53,970 --> 01:12:57,030
properly like right now they're not

1662
01:12:55,409 --> 01:12:58,319
tagged with that but and so like what

1663
01:12:57,029 --> 01:13:00,149
I'd like to do is say look there's shot

1664
01:12:58,319 --> 01:13:02,819
in next one layer in next one for the

1665
01:13:00,149 --> 01:13:06,059
title screen so I'm just gonna say this

1666
01:13:02,819 --> 01:13:08,130
is the title screen like this and then

1667
01:13:06,060 --> 01:13:12,090
these I'm going to say that these are

1668
01:13:08,130 --> 01:13:13,529
the intro cutscene and that way I can

1669
01:13:12,090 --> 01:13:16,110
load these

1670
01:13:13,529 --> 01:13:19,198
by what they actually were and if I

1671
01:13:16,109 --> 01:13:22,439
added another cutscene I would just load

1672
01:13:19,198 --> 01:13:24,328
that as a separate cutscene right so I

1673
01:13:22,439 --> 01:13:26,460
think that's what I would rather do then

1674
01:13:24,328 --> 01:13:30,349
the way we were doing this before where

1675
01:13:26,460 --> 01:13:33,929
it's just the there's no extra tagging

1676
01:13:30,349 --> 01:13:34,349
per thing that just feels a little bit

1677
01:13:33,929 --> 01:13:35,639
better to me

1678
01:13:34,349 --> 01:13:37,529
I don't know like I said it's

1679
01:13:35,639 --> 01:13:40,440
experimental so puh knows but that's

1680
01:13:37,529 --> 01:13:41,849
just what seems like the best idea so

1681
01:13:40,439 --> 01:13:45,058
here I could just say that look this is

1682
01:13:41,849 --> 01:13:46,440
the music for the title screen and we

1683
01:13:45,059 --> 01:13:49,349
don't really need I don't think anything

1684
01:13:46,439 --> 01:13:51,238
else because it's not like the title

1685
01:13:49,349 --> 01:13:55,770
screen needs more than one piece of

1686
01:13:51,238 --> 01:13:59,788
music probably so I feel like that is

1687
01:13:55,770 --> 01:14:01,710
fine so in here where we do those tags

1688
01:13:59,788 --> 01:14:06,139
I'm just going to put our own tag in

1689
01:14:01,710 --> 01:14:08,760
here where we say that intro cutscene

1690
01:14:06,139 --> 01:14:10,578
again doing the magic of see where you

1691
01:14:08,760 --> 01:14:16,679
have to do everything yourself

1692
01:14:10,578 --> 01:14:18,509
title screen so these will both be

1693
01:14:16,679 --> 01:14:20,460
parsable now and so now we come through

1694
01:14:18,510 --> 01:14:22,380
here it will see this and it can tag of

1695
01:14:20,460 --> 01:14:24,899
a title screen of course it doesn't know

1696
01:14:22,380 --> 01:14:26,400
what a music directive is so if we

1697
01:14:24,899 --> 01:14:28,348
actually tried to run this it should

1698
01:14:26,399 --> 01:14:29,638
fail and give us an error that it

1699
01:14:28,349 --> 01:14:33,960
doesn't understand the music directive

1700
01:14:29,639 --> 01:14:35,520
so we have to add that directive and so

1701
01:14:33,960 --> 01:14:37,559
we'll do that and then the other thing

1702
01:14:35,520 --> 01:14:41,670
that we need is we need a directive for

1703
01:14:37,559 --> 01:14:44,279
sounds so like in the base game we need

1704
01:14:41,670 --> 01:14:46,800
some way of having sounds in here like

1705
01:14:44,279 --> 01:14:48,420
we need to do this sort of thing and

1706
01:14:46,800 --> 01:14:50,699
those also need to be tagged at the

1707
01:14:48,420 --> 01:14:53,489
moment we don't actually know what we

1708
01:14:50,698 --> 01:14:56,460
would tag any of these things because we

1709
01:14:53,488 --> 01:15:04,769
don't actually have any real use for

1710
01:14:56,460 --> 01:15:07,770
them so yeah like who knows but what we

1711
01:15:04,770 --> 01:15:13,800
would like to do here is I'm gonna see

1712
01:15:07,770 --> 01:15:17,190
do we have any tagging for this we don't

1713
01:15:13,800 --> 01:15:18,809
um so you know I'll add some tags for it

1714
01:15:17,189 --> 01:15:21,359
because why not I guess we've got a

1715
01:15:18,809 --> 01:15:23,159
bloop a crack a drop a slide in a pup so

1716
01:15:21,359 --> 01:15:26,579
sure I don't know

1717
01:15:23,158 --> 01:15:39,239
let's Adam so we're gonna add loops

1718
01:15:26,579 --> 01:15:42,180
cracks drops glides and pups don't ask

1719
01:15:39,239 --> 01:15:45,170
me why and then we're gonna put in these

1720
01:15:42,180 --> 01:15:50,070
files so we have loop 0 0 . laughs and

1721
01:15:45,170 --> 01:15:55,859
we know that that's gonna be tagged

1722
01:15:50,069 --> 01:15:58,799
thusly and we know that it's essentially

1723
01:15:55,859 --> 01:16:02,460
like a variant so I don't think we have

1724
01:15:58,800 --> 01:16:04,260
the causative variant at the moment and

1725
01:16:02,460 --> 01:16:07,369
I do think that's probably something we

1726
01:16:04,260 --> 01:16:09,900
want so we probably want also like this

1727
01:16:07,369 --> 01:16:14,760
so we can essentially say look this is

1728
01:16:09,899 --> 01:16:16,979
variant zero of this thing that way when

1729
01:16:14,760 --> 01:16:19,100
we do multiple of them we can just say

1730
01:16:16,979 --> 01:16:23,539
hey there's like several of these

1731
01:16:19,100 --> 01:16:25,980
imported in here that we want and so

1732
01:16:23,539 --> 01:16:27,960
they can just be variants off the same

1733
01:16:25,979 --> 01:16:30,419
thing that you query and the game

1734
01:16:27,960 --> 01:16:35,220
doesn't have to know about that like at

1735
01:16:30,420 --> 01:16:37,890
all right so that gives us a way to you

1736
01:16:35,220 --> 01:16:39,810
know easily put in 0 through one zero

1737
01:16:37,890 --> 01:16:42,180
two three four variants of those bloops

1738
01:16:39,810 --> 01:16:49,680
and then you know I can do the same

1739
01:16:42,180 --> 01:16:51,570
thing here for the crack and this one

1740
01:16:49,680 --> 01:16:54,150
doesn't really need a variant because at

1741
01:16:51,569 --> 01:16:56,489
the moment anyway we don't have multiple

1742
01:16:54,149 --> 01:17:07,769
variants of that the same is drop and

1743
01:16:56,489 --> 01:17:13,949
glide so if I do a drop and applied then

1744
01:17:07,770 --> 01:17:17,060
we just have poop left and that will

1745
01:17:13,949 --> 01:17:20,389
have variance so that has a variance

1746
01:17:17,060 --> 01:17:20,390
zero and one

1747
01:17:25,279 --> 01:17:31,349
so I think that's everything for at

1748
01:17:28,109 --> 01:17:33,420
least the import listing and so now we

1749
01:17:31,350 --> 01:17:36,570
just need to actually teach the parser

1750
01:17:33,420 --> 01:17:41,760
like what those mean because we don't

1751
01:17:36,569 --> 01:17:44,219
actually have any sort of we have

1752
01:17:41,760 --> 01:17:47,820
nothing in there that talks about music

1753
01:17:44,220 --> 01:17:49,409
or sound at all in terms of the ingest

1754
01:17:47,819 --> 01:17:52,439
so we kind of need some way of having

1755
01:17:49,409 --> 01:17:55,739
that you know be understand understood

1756
01:17:52,439 --> 01:17:59,719
by the parser so alright just putting

1757
01:17:55,739 --> 01:18:09,409
that in there we've got drop lied and

1758
01:17:59,720 --> 01:18:09,409
pop oops and then we've got the variant

1759
01:18:14,060 --> 01:18:19,530
so that's everything that we actually

1760
01:18:16,500 --> 01:18:23,300
need to recognize what's in the files

1761
01:18:19,529 --> 01:18:27,750
but we don't actually have any way of

1762
01:18:23,300 --> 01:18:28,529
looking at those more expansive keywords

1763
01:18:27,750 --> 01:18:30,960
right

1764
01:18:28,529 --> 01:18:33,389
so inside handmade import we've got to

1765
01:18:30,960 --> 01:18:36,930
start handling those directives properly

1766
01:18:33,390 --> 01:18:39,720
so what you can see in here is you know

1767
01:18:36,930 --> 01:18:44,070
there's a parse top-level block in

1768
01:18:39,720 --> 01:18:45,720
directive up here and we're gonna run

1769
01:18:44,069 --> 01:18:47,399
into some issues right this is gonna be

1770
01:18:45,720 --> 01:18:49,079
more complicated as I say we're going to

1771
01:18:47,399 --> 01:18:50,189
deal with tomorrow all I want to do is

1772
01:18:49,079 --> 01:18:52,229
kind of get the infrastructure in place

1773
01:18:50,189 --> 01:18:54,029
today so we don't have a whole lot of

1774
01:18:52,229 --> 01:18:59,759
time left I think we've only got about

1775
01:18:54,029 --> 01:19:03,779
30 minutes or so there's time do we have

1776
01:18:59,760 --> 01:19:05,820
so we started at 12:15 so we've got I

1777
01:19:03,779 --> 01:19:09,359
don't know 30 minutes 35 minutes

1778
01:19:05,819 --> 01:19:11,039
something like that so what I want to do

1779
01:19:09,359 --> 01:19:12,239
is make sure that this parser can parse

1780
01:19:11,039 --> 01:19:14,189
through them and it's going to require

1781
01:19:12,239 --> 01:19:19,099
some work the reason is because this

1782
01:19:14,189 --> 01:19:25,409
routine as you can see here it

1783
01:19:19,100 --> 01:19:27,539
presupposes that you've got a that

1784
01:19:25,409 --> 01:19:29,399
you've got an art block so you can see

1785
01:19:27,539 --> 01:19:33,510
in here when it comes to and says is

1786
01:19:29,399 --> 01:19:35,549
default you can see how it starts to you

1787
01:19:33,510 --> 01:19:37,970
know try to figure out where to get this

1788
01:19:35,550 --> 01:19:37,970
particular

1789
01:19:38,210 --> 01:19:43,949
data from it's gonna it's literally

1790
01:19:41,729 --> 01:19:46,979
starting like right off the bat to call

1791
01:19:43,949 --> 01:19:48,960
things like parse pieces but that's not

1792
01:19:46,979 --> 01:19:53,250
what you would want to do if the thing

1793
01:19:48,960 --> 01:19:56,670
is an audiophile so we kind of need you

1794
01:19:53,250 --> 01:20:01,619
know not necessarily two entire paths

1795
01:19:56,670 --> 01:20:04,109
but we at least need this function to be

1796
01:20:01,619 --> 01:20:04,739
aware of the fact that it's not always

1797
01:20:04,109 --> 01:20:07,739
getting that

1798
01:20:04,739 --> 01:20:09,239
so this subtor art for example would

1799
01:20:07,739 --> 01:20:13,380
need to be able to split into a couple

1800
01:20:09,239 --> 01:20:16,409
of different ways so one way we can do

1801
01:20:13,380 --> 01:20:23,819
it is like his music is sound for

1802
01:20:16,409 --> 01:20:26,849
example and these are like that right

1803
01:20:23,819 --> 01:20:28,829
and so we would know now which one of

1804
01:20:26,850 --> 01:20:32,450
these we're actually dealing with and

1805
01:20:28,829 --> 01:20:35,130
when we come down here to look at those

1806
01:20:32,449 --> 01:20:40,019
we could also do something that looks

1807
01:20:35,130 --> 01:20:42,960
like this where something like is art is

1808
01:20:40,020 --> 01:20:50,310
comprised of like the knot of all of

1809
01:20:42,960 --> 01:20:53,159
these right so if we know we're not

1810
01:20:50,310 --> 01:20:55,289
looking at a default or music or sound

1811
01:20:53,159 --> 01:20:56,779
then we know that it is the normal thing

1812
01:20:55,289 --> 01:20:59,579
that we expect to see most of the time

1813
01:20:56,779 --> 01:21:04,139
in terms of our block types because most

1814
01:20:59,579 --> 01:21:06,329
of our block types are artwork alright

1815
01:21:04,140 --> 01:21:08,940
so coming through here we would say all

1816
01:21:06,329 --> 01:21:12,300
right the subtor in this case we can

1817
01:21:08,939 --> 01:21:14,669
actually determine up here in sort of a

1818
01:21:12,300 --> 01:21:19,110
more speculative way and just say look

1819
01:21:14,670 --> 01:21:22,800
if it's music we'll change it if it's

1820
01:21:19,109 --> 01:21:28,079
sound we'll change it right we could

1821
01:21:22,800 --> 01:21:30,180
even do it this way right so we say all

1822
01:21:28,079 --> 01:21:34,260
right it's the music directory if it's

1823
01:21:30,180 --> 01:21:37,500
music it's the sound directory if it's

1824
01:21:34,260 --> 01:21:39,960
sound and it's the art groups it's the

1825
01:21:37,500 --> 01:21:41,340
art directory if it's art so now we know

1826
01:21:39,960 --> 01:21:43,970
like which subdirectory we're going to

1827
01:21:41,340 --> 01:21:48,449
look in to find the asset that's named

1828
01:21:43,970 --> 01:21:50,490
based on the block type and then in here

1829
01:21:48,449 --> 01:21:55,019
when we actually

1830
01:21:50,489 --> 01:21:57,149
load the file this match operation is

1831
01:21:55,020 --> 01:22:00,090
probably still fine because we probably

1832
01:21:57,149 --> 01:22:01,859
still do want to remember the asset

1833
01:22:00,090 --> 01:22:06,000
source file stuff effectively the same

1834
01:22:01,859 --> 01:22:08,880
way as we were remembering it before the

1835
01:22:06,000 --> 01:22:11,069
only difference now is that parse pieces

1836
01:22:08,880 --> 01:22:13,199
which would normally go in and do all

1837
01:22:11,069 --> 01:22:15,869
kinds of crazy stuff in terms of grid

1838
01:22:13,199 --> 01:22:18,979
importing doesn't actually need to be

1839
01:22:15,869 --> 01:22:22,559
there and the import type that we have

1840
01:22:18,979 --> 01:22:25,289
can can basically be handled a separate

1841
01:22:22,560 --> 01:22:26,190
way so another way to do it and I guess

1842
01:22:25,289 --> 01:22:27,689
maybe we could've done it this way

1843
01:22:26,189 --> 01:22:31,609
originally maybe I should push the

1844
01:22:27,689 --> 01:22:33,899
import type up and have that record

1845
01:22:31,609 --> 01:22:36,569
specifically which kind of import type

1846
01:22:33,899 --> 01:22:37,500
we're doing for art or music I don't

1847
01:22:36,569 --> 01:22:38,819
know that I really want to do that

1848
01:22:37,500 --> 01:22:39,899
though because like if you look at

1849
01:22:38,819 --> 01:22:43,619
what's gonna happen to some of this

1850
01:22:39,899 --> 01:22:45,569
stuff like with the grid points here and

1851
01:22:43,619 --> 01:22:47,279
align points and stuff this is really

1852
01:22:45,569 --> 01:22:49,590
stuff that's only gonna happen behind an

1853
01:22:47,279 --> 01:22:53,579
is art call and so I kind of just want

1854
01:22:49,590 --> 01:22:55,920
is art to bracket those things and force

1855
01:22:53,579 --> 01:23:00,239
the sort of extra stuff that happens

1856
01:22:55,920 --> 01:23:02,399
with art to not happen right and so I'm

1857
01:23:00,239 --> 01:23:04,460
just gonna do an is art call around

1858
01:23:02,399 --> 01:23:07,829
these and keep them from interfering

1859
01:23:04,460 --> 01:23:10,529
most of the time right the rest of this

1860
01:23:07,829 --> 01:23:13,949
stuff like author description name tags

1861
01:23:10,529 --> 01:23:16,259
and that stuff are all fine the

1862
01:23:13,949 --> 01:23:19,619
alignment stuff we can still allow it to

1863
01:23:16,260 --> 01:23:21,780
happen probably although we could also

1864
01:23:19,619 --> 01:23:24,960
just error out here we could say like

1865
01:23:21,779 --> 01:23:29,509
look if it's not art you know that's an

1866
01:23:24,960 --> 01:23:29,510
error right so we can say hey

1867
01:23:35,060 --> 01:23:39,180
you know you're not allowed to put

1868
01:23:36,989 --> 01:23:40,590
alignment points on an audio asset now

1869
01:23:39,180 --> 01:23:42,690
that's not the same as saying we might

1870
01:23:40,590 --> 01:23:44,670
not have something like an alignment

1871
01:23:42,689 --> 01:23:46,529
point I'm nadiyah asset like maybe in

1872
01:23:44,670 --> 01:23:50,600
the future we want to label a particular

1873
01:23:46,529 --> 01:23:53,340
sample offset you know what I mean and

1874
01:23:50,600 --> 01:23:54,780
we could do that but I'm not gonna do

1875
01:23:53,340 --> 01:23:56,610
that prophylactically like I'm gonna

1876
01:23:54,779 --> 01:23:59,130
wait till we actually have to do

1877
01:23:56,609 --> 01:24:00,809
something along those lines before I'm

1878
01:23:59,130 --> 01:24:02,279
gonna really look into that because I

1879
01:24:00,810 --> 01:24:04,560
don't want to do a bunch of work for

1880
01:24:02,279 --> 01:24:06,750
something there that we never use so I'd

1881
01:24:04,560 --> 01:24:08,670
like to at least have some indication

1882
01:24:06,750 --> 01:24:10,560
that we need alignment points and audio

1883
01:24:08,670 --> 01:24:13,170
before I'm gonna actually add alignment

1884
01:24:10,560 --> 01:24:15,450
points an audio but at the very least

1885
01:24:13,170 --> 01:24:17,640
what we do know is that if we were gonna

1886
01:24:15,449 --> 01:24:19,319
pass process them they certainly

1887
01:24:17,640 --> 01:24:22,650
wouldn't be running this path because

1888
01:24:19,319 --> 01:24:24,210
this path has no bearing on how you

1889
01:24:22,649 --> 01:24:26,399
would align audio that's for art

1890
01:24:24,210 --> 01:24:28,230
alignment so we still do want to make

1891
01:24:26,399 --> 01:24:31,529
sure that that doesn't actually occur

1892
01:24:28,229 --> 01:24:33,659
there so if we come down here and we

1893
01:24:31,529 --> 01:24:35,309
look at how the rebuild stuff's working

1894
01:24:33,659 --> 01:24:37,649
I think that can still work the same way

1895
01:24:35,310 --> 01:24:40,020
as it was working before and then what

1896
01:24:37,649 --> 01:24:43,889
we can do is here I can say look let's

1897
01:24:40,020 --> 01:24:48,330
make an import type audio and we'll will

1898
01:24:43,890 --> 01:24:51,140
sort of make that be a separate process

1899
01:24:48,329 --> 01:24:54,869
and then this again

1900
01:24:51,140 --> 01:24:56,910
is art and right so we can do that and

1901
01:24:54,869 --> 01:24:57,599
and I could change this one to work that

1902
01:24:56,909 --> 01:25:00,109
way as well

1903
01:24:57,600 --> 01:25:04,340
so you know I could do if is arc and

1904
01:25:00,109 --> 01:25:04,339
right oops

1905
01:25:05,819 --> 01:25:09,960
and so that way again we can just make

1906
01:25:08,430 --> 01:25:12,980
sure that these paths that are very

1907
01:25:09,960 --> 01:25:16,350
specific to art they're only happening

1908
01:25:12,979 --> 01:25:17,369
when arts actually involved but

1909
01:25:16,350 --> 01:25:19,200
otherwise you can basically leave this

1910
01:25:17,369 --> 01:25:20,849
routine exactly the same now when we

1911
01:25:19,199 --> 01:25:22,949
come through here and we do this import

1912
01:25:20,850 --> 01:25:24,780
stuff now when we if we know the type of

1913
01:25:22,949 --> 01:25:29,369
source imports audio we could do like a

1914
01:25:24,779 --> 01:25:31,469
process audio import like so and this

1915
01:25:29,369 --> 01:25:34,319
would probably take you know basically

1916
01:25:31,470 --> 01:25:37,920
the same stuff the difference here is

1917
01:25:34,319 --> 01:25:40,500
like this parse PNG again not really

1918
01:25:37,920 --> 01:25:43,199
going to be what we're talking about

1919
01:25:40,500 --> 01:25:47,359
because the PNG would only be for PNG

1920
01:25:43,199 --> 01:25:47,359
files so this

1921
01:25:49,198 --> 01:25:55,208
isn't is art kind of thing we can leave

1922
01:25:52,719 --> 01:25:57,038
it that way otherwise what we really

1923
01:25:55,208 --> 01:25:59,318
want to then have here is some kind of

1924
01:25:57,038 --> 01:26:01,948
wave parse so in effectively what we're

1925
01:25:59,319 --> 01:26:06,119
gonna do is say all right we've got a

1926
01:26:01,948 --> 01:26:08,858
sound 32 you know who knows what it is

1927
01:26:06,118 --> 01:26:10,418
but whatever we want to call our input

1928
01:26:08,859 --> 01:26:14,139
thing here you know and since we called

1929
01:26:10,418 --> 01:26:17,998
it image 32 I'm just gonna say sound s

1930
01:26:14,139 --> 01:26:23,469
16 I guess because that's sort of the

1931
01:26:17,998 --> 01:26:25,298
well so it's hard to say I mean a sound

1932
01:26:23,469 --> 01:26:29,168
can have a lot of different formats to

1933
01:26:25,298 --> 01:26:31,389
it I'm gonna call it sound a 16 I think

1934
01:26:29,168 --> 01:26:34,179
that's the most direct analog image you

1935
01:26:31,389 --> 01:26:37,599
32 is saying here's an image that uses a

1936
01:26:34,179 --> 01:26:40,599
u3q as its fundamental sample type which

1937
01:26:37,599 --> 01:26:43,899
is an RGB a 8 bit per channel packed

1938
01:26:40,599 --> 01:26:45,819
format sound of 16 is saying look here's

1939
01:26:43,899 --> 01:26:47,739
sound it's gonna have its fun little

1940
01:26:45,819 --> 01:26:50,769
sample format is assigned 16-bit value

1941
01:26:47,738 --> 01:26:52,688
so I'm just gonna say that's true and

1942
01:26:50,769 --> 01:26:56,168
we're gonna do like if it's sound or

1943
01:26:52,689 --> 01:26:59,979
music in this case then the sound equals

1944
01:26:56,168 --> 01:27:02,498
par suave and there's that content

1945
01:26:59,979 --> 01:27:06,039
stream and we're just gonna leave it at

1946
01:27:02,498 --> 01:27:10,838
that I don't really know that we want to

1947
01:27:06,038 --> 01:27:13,599
do a stream per se and so what I might

1948
01:27:10,838 --> 01:27:16,778
suggest because the PNG likes to read

1949
01:27:13,599 --> 01:27:21,878
things as a stream I don't know that web

1950
01:27:16,779 --> 01:27:24,399
really does I would sort of say that

1951
01:27:21,878 --> 01:27:27,418
passing the buffer directly might be

1952
01:27:24,399 --> 01:27:29,769
more straightforward so we're gonna see

1953
01:27:27,418 --> 01:27:33,389
which one of those two things is true

1954
01:27:29,769 --> 01:27:33,389
I'll just say look

1955
01:27:38,689 --> 01:27:44,158
let's see which one's easier to read

1956
01:27:40,948 --> 01:27:46,710
from I don't actually know and so what

1957
01:27:44,158 --> 01:27:48,809
we can do is see if we actually like the

1958
01:27:46,710 --> 01:27:50,579
content stream abstraction if we don't

1959
01:27:48,810 --> 01:27:52,860
we can just send down the actual raw

1960
01:27:50,579 --> 01:27:55,140
buffer if that's an easier way to parse

1961
01:27:52,859 --> 01:27:58,049
the web we'll just go with it

1962
01:27:55,140 --> 01:27:59,880
so then when we come down here instead

1963
01:27:58,050 --> 01:28:03,000
of passing image we'd just pass the

1964
01:27:59,880 --> 01:28:05,369
sound that would be the end of it this

1965
01:28:03,000 --> 01:28:07,829
call needs to actually exist we don't

1966
01:28:05,369 --> 01:28:10,829
have it yet same at the parse wave call

1967
01:28:07,829 --> 01:28:13,469
so those are you know two things we're

1968
01:28:10,829 --> 01:28:16,319
gonna have to add if we look at the

1969
01:28:13,469 --> 01:28:20,010
parse P&amp;G part of things that's out in

1970
01:28:16,319 --> 01:28:25,408
the handmade PNG if we want to keep that

1971
01:28:20,010 --> 01:28:28,789
format Ally up that that sort of a if we

1972
01:28:25,408 --> 01:28:31,109
want to keep that paradigm there we go

1973
01:28:28,789 --> 01:28:34,500
then what we would want to do here is

1974
01:28:31,109 --> 01:28:36,809
introduce another source file into that

1975
01:28:34,500 --> 01:28:39,750
handmade code directory which is just

1976
01:28:36,810 --> 01:28:44,429
called handmade Wow

1977
01:28:39,750 --> 01:28:48,689
not H and here there would be something

1978
01:28:44,429 --> 01:28:51,149
like this I don't remember what these

1979
01:28:48,689 --> 01:28:54,809
returned probably nothing would be my

1980
01:28:51,149 --> 01:28:58,589
guess let's take a look there it is

1981
01:28:54,810 --> 01:29:01,739
nothing so this would do the audio

1982
01:28:58,590 --> 01:29:05,069
import as necessary it looks like it

1983
01:29:01,738 --> 01:29:08,819
takes the game assets that it's using to

1984
01:29:05,069 --> 01:29:10,738
do the import the match in this case is

1985
01:29:08,819 --> 01:29:13,829
actually the thing that's produced up

1986
01:29:10,738 --> 01:29:16,079
here which is just a way of saying here

1987
01:29:13,829 --> 01:29:18,000
is the file that this was coming from so

1988
01:29:16,079 --> 01:29:21,899
you can see like it's like a asset

1989
01:29:18,000 --> 01:29:25,158
source file info there so I don't know

1990
01:29:21,899 --> 01:29:29,009
we want to call that maybe like source

1991
01:29:25,158 --> 01:29:32,339
something like this in this case sound

1992
01:29:29,010 --> 01:29:36,920
is one of these imaginary things that

1993
01:29:32,340 --> 01:29:36,920
we're saying we have oh does it go here

1994
01:29:37,010 --> 01:29:41,850
know why I did that there that's not

1995
01:29:39,569 --> 01:29:45,210
what goes in there so that stuff's gonna

1996
01:29:41,850 --> 01:29:47,370
be up in here right and so like with the

1997
01:29:45,210 --> 01:29:49,198
extract image get down sampling all this

1998
01:29:47,369 --> 01:29:50,599
stuff this is the stuff for images that

1999
01:29:49,198 --> 01:29:54,219
were using

2000
01:29:50,600 --> 01:29:58,610
and so I'm gonna stuff this right here

2001
01:29:54,219 --> 01:29:59,658
right there and this will be just

2002
01:29:58,609 --> 01:30:01,309
something that we haven't implemented

2003
01:29:59,658 --> 01:30:03,170
yet but yeah like I said this goes in

2004
01:30:01,310 --> 01:30:06,350
here so this is the sound you throw 16

2005
01:30:03,170 --> 01:30:07,760
rather I can just be like that probably

2006
01:30:06,350 --> 01:30:11,750
I don't know how we want to do eggs how

2007
01:30:07,760 --> 01:30:14,480
are we doing it here yeah we just fast

2008
01:30:11,750 --> 01:30:15,948
at you interesting it's a full block so

2009
01:30:14,479 --> 01:30:19,789
then inside the temper meanie here this

2010
01:30:15,948 --> 01:30:21,079
is just gonna be our memory arena that

2011
01:30:19,789 --> 01:30:23,359
we use for temporary locations if you

2012
01:30:21,079 --> 01:30:28,429
want it here's the process of import

2013
01:30:23,359 --> 01:30:32,029
this is just not so then what we've got

2014
01:30:28,429 --> 01:30:36,079
is the par suave so in par suave here

2015
01:30:32,029 --> 01:30:37,880
what we want to do by the way a lot of

2016
01:30:36,079 --> 01:30:41,539
people are annoyed that I say parse web

2017
01:30:37,880 --> 01:30:43,730
instead of parse wave I mean understand

2018
01:30:41,539 --> 01:30:46,039
the complaint but let's be honest about

2019
01:30:43,729 --> 01:30:49,638
spelling what does that spell that says

2020
01:30:46,039 --> 01:30:51,198
web that says wave if if this is wave

2021
01:30:49,639 --> 01:30:54,560
that can't also be waived

2022
01:30:51,198 --> 01:30:56,059
so it's web my friends parse web I don't

2023
01:30:54,560 --> 01:30:58,909
care what people meant when they made it

2024
01:30:56,060 --> 01:31:00,920
they spelled it well so anyway if I'm

2025
01:30:58,908 --> 01:31:03,198
doing a parse web to get one of these

2026
01:31:00,920 --> 01:31:05,359
sounds back then I just kind of need the

2027
01:31:03,198 --> 01:31:08,178
you know the analog of what we were

2028
01:31:05,359 --> 01:31:09,380
doing before so we need something here

2029
01:31:08,179 --> 01:31:11,600
that's gonna be one of these sound

2030
01:31:09,380 --> 01:31:14,090
sixteens and you know it's gonna have

2031
01:31:11,600 --> 01:31:17,500
basically the same stuff as that image

2032
01:31:14,090 --> 01:31:21,500
so it's this right where we'd have

2033
01:31:17,500 --> 01:31:24,139
samples array and probably something in

2034
01:31:21,500 --> 01:31:25,850
here you know like a channel count where

2035
01:31:24,139 --> 01:31:28,100
we say how many channels there were and

2036
01:31:25,850 --> 01:31:30,289
then you got the samples and you know

2037
01:31:28,100 --> 01:31:32,360
we'll interleave them or something and

2038
01:31:30,289 --> 01:31:34,698
you know maybe the way that we want to

2039
01:31:32,359 --> 01:31:35,569
do this I don't actually know but maybe

2040
01:31:34,698 --> 01:31:37,579
the way that we wanna do this is

2041
01:31:35,569 --> 01:31:39,469
actually like an array of samples maybe

2042
01:31:37,579 --> 01:31:41,988
there's the max channel count like maybe

2043
01:31:39,469 --> 01:31:43,368
we only allow things up to 8 channels or

2044
01:31:41,988 --> 01:31:45,579
something and it looks like that I don't

2045
01:31:43,368 --> 01:31:48,889
know we can obviously play with this

2046
01:31:45,579 --> 01:31:51,529
however we want to play with it going

2047
01:31:48,889 --> 01:31:54,230
forward but that's what we're gonna do

2048
01:31:51,529 --> 01:31:56,539
right and so we probably want the

2049
01:31:54,229 --> 01:31:59,439
equivalent of these sorts of things

2050
01:31:56,539 --> 01:32:02,420
right we probably want to have

2051
01:31:59,439 --> 01:32:03,848
effectively the same calls that we have

2052
01:32:02,420 --> 01:32:06,819
for our image

2053
01:32:03,849 --> 01:32:08,469
just for our sounds so we would do

2054
01:32:06,819 --> 01:32:11,738
something like what's the total sound

2055
01:32:08,469 --> 01:32:15,578
size and we get the exact same thing we

2056
01:32:11,738 --> 01:32:17,888
know that it's going to be we know that

2057
01:32:15,578 --> 01:32:22,840
it's going to be the sound channel count

2058
01:32:17,889 --> 01:32:25,170
oh and we need a sample count as well we

2059
01:32:22,840 --> 01:32:28,179
need a sound channel count times the

2060
01:32:25,170 --> 01:32:30,908
sample count times the size of each

2061
01:32:28,179 --> 01:32:35,399
individual sample which is 2 and that's

2062
01:32:30,908 --> 01:32:38,769
the total footprint of the sound data

2063
01:32:35,399 --> 01:32:40,238
that's you know pointed to or pointed

2064
01:32:38,770 --> 01:32:43,840
into you buy samples depending on how we

2065
01:32:40,238 --> 01:32:45,098
want do that I'm going to probably do it

2066
01:32:43,840 --> 01:32:49,719
this way just to keep it as close as

2067
01:32:45,099 --> 01:32:51,610
possible to this that just feels a

2068
01:32:49,719 --> 01:32:56,408
little bit better than me so in here

2069
01:32:51,609 --> 01:32:59,109
we're gonna say sound s 16 if we do a

2070
01:32:56,408 --> 01:33:01,059
push sound it's the same thing so we can

2071
01:32:59,109 --> 01:33:03,609
say look give me the sample count

2072
01:33:01,060 --> 01:33:06,699
give me the channel count and I will

2073
01:33:03,609 --> 01:33:09,339
create that it's flat footprint for you

2074
01:33:06,698 --> 01:33:12,069
so here's the sound as 16 that's the

2075
01:33:09,340 --> 01:33:15,670
results the sample count is the sample

2076
01:33:12,069 --> 01:33:18,578
count the channel count is the channel

2077
01:33:15,670 --> 01:33:20,739
counts and then when we have the actual

2078
01:33:18,578 --> 01:33:23,559
samples for our sounds we're gonna do

2079
01:33:20,738 --> 01:33:24,729
that push size exactly the same as we

2080
01:33:23,560 --> 01:33:28,710
were doing it before but we're gonna do

2081
01:33:24,729 --> 01:33:31,988
total sound size in this case for the

2082
01:33:28,710 --> 01:33:35,529
result before that that sound result

2083
01:33:31,988 --> 01:33:38,500
that we're giving back so that's again

2084
01:33:35,529 --> 01:33:41,050
just the exact equivalent and then we

2085
01:33:38,500 --> 01:33:45,340
just want the the equivalent here as

2086
01:33:41,050 --> 01:33:47,409
well we want to say hey give us a memory

2087
01:33:45,340 --> 01:33:51,279
ready to put this thing in give us a

2088
01:33:47,408 --> 01:33:54,698
sound return when you're done parsing it

2089
01:33:51,279 --> 01:33:56,828
parse the wav file as you would you can

2090
01:33:54,698 --> 01:33:59,769
give us some stream information so you

2091
01:33:56,828 --> 01:34:01,269
can give us the input and where you want

2092
01:33:59,770 --> 01:34:03,880
us to send output to if this were a

2093
01:34:01,270 --> 01:34:05,500
command line which it isn't but if you

2094
01:34:03,880 --> 01:34:07,719
wanted to we could do that as well and

2095
01:34:05,500 --> 01:34:09,399
then we've got the equivalent right so

2096
01:34:07,719 --> 01:34:11,800
now we've got that taken care of and

2097
01:34:09,399 --> 01:34:13,748
then in the C file this is where okay

2098
01:34:11,800 --> 01:34:17,538
don't ask me what just happened

2099
01:34:13,748 --> 01:34:20,420
okay there we go so in the C file now

2100
01:34:17,538 --> 01:34:25,429
we've got the implementation of this

2101
01:34:20,420 --> 01:34:27,800
which we will do largely by importing

2102
01:34:25,429 --> 01:34:30,828
code we've already written but for now

2103
01:34:27,800 --> 01:34:32,929
it's not implemented and the sound of 16

2104
01:34:30,828 --> 01:34:36,018
result that this comes back you know

2105
01:34:32,929 --> 01:34:38,630
here that again is just going to return

2106
01:34:36,019 --> 01:34:40,130
the you know pushed version of this that

2107
01:34:38,630 --> 01:34:43,368
we load it out of the file so it's not

2108
01:34:40,130 --> 01:34:45,650
particularly interesting one way or the

2109
01:34:43,368 --> 01:34:48,649
other so that's how our parse wave is

2110
01:34:45,649 --> 01:34:50,238
gonna work there and I think we can now

2111
01:34:48,649 --> 01:34:52,069
hop back to the import code

2112
01:34:50,238 --> 01:34:53,779
I'm gonna build but I'm gonna ignore

2113
01:34:52,069 --> 01:34:57,109
what it does that's just to save my

2114
01:34:53,779 --> 01:34:58,788
files and so I think we've got things

2115
01:34:57,109 --> 01:35:02,478
mostly straightened out here the way

2116
01:34:58,788 --> 01:35:06,498
that I want them to go I don't see a lot

2117
01:35:02,479 --> 01:35:09,110
of other stuff so mostly what we're

2118
01:35:06,498 --> 01:35:10,340
dealing with is just the head end when

2119
01:35:09,109 --> 01:35:13,069
we come through here and we get the file

2120
01:35:10,340 --> 01:35:22,069
by path and we do this here this import

2121
01:35:13,069 --> 01:35:24,139
type what I want to do there is I think

2122
01:35:22,069 --> 01:35:29,420
I just want to stuff that so I think I

2123
01:35:24,139 --> 01:35:32,479
want to do like if is sound or is music

2124
01:35:29,420 --> 01:35:36,050
do one thing otherwise try to do it this

2125
01:35:32,479 --> 01:35:40,239
way right and I'm going to set that

2126
01:35:36,050 --> 01:35:49,429
import type here to like import type

2127
01:35:40,238 --> 01:35:52,038
sound or what did I say audio so I need

2128
01:35:49,429 --> 01:35:54,559
to add import type audio to the list of

2129
01:35:52,038 --> 01:35:56,868
things that we have defined in the first

2130
01:35:54,559 --> 01:35:58,940
place and you know public service

2131
01:35:56,868 --> 01:36:00,738
announcement you want to actually do

2132
01:35:58,939 --> 01:36:02,089
that not fat-fingered their own but

2133
01:36:00,738 --> 01:36:03,319
although I believe the fact that I

2134
01:36:02,090 --> 01:36:04,460
haven't updated my for coder because

2135
01:36:03,319 --> 01:36:06,259
that normally would have been the right

2136
01:36:04,460 --> 01:36:10,099
thing to do I'm gonna add a counter in

2137
01:36:06,260 --> 01:36:13,070
here just in case we want it later so

2138
01:36:10,099 --> 01:36:14,779
I'm gonna argue that that's structurally

2139
01:36:13,069 --> 01:36:17,840
more or less what this thing should look

2140
01:36:14,779 --> 01:36:20,389
like so that it can just parse inline

2141
01:36:17,840 --> 01:36:21,828
those particular things looking at what

2142
01:36:20,389 --> 01:36:23,630
we've got here you can see that we're

2143
01:36:21,828 --> 01:36:26,309
gonna get a bunch of undefined stuff

2144
01:36:23,630 --> 01:36:27,630
because I didn't include any of the

2145
01:36:26,310 --> 01:36:32,340
so what I'm gonna do is I'm gonna go to

2146
01:36:27,630 --> 01:36:35,069
handmaid dot H and wherever the PNG

2147
01:36:32,340 --> 01:36:37,170
stuff ends up living I'm just gonna dump

2148
01:36:35,069 --> 01:36:40,979
laughs in there as well right so now we

2149
01:36:37,170 --> 01:36:43,260
can have both of those defined as they

2150
01:36:40,979 --> 01:36:45,479
normally would be and we can deal with

2151
01:36:43,260 --> 01:36:48,119
the errors from that code so including

2152
01:36:45,479 --> 01:36:49,769
those and then I'm gonna take a look at

2153
01:36:48,118 --> 01:36:52,589
what we've got for errors it looks like

2154
01:36:49,770 --> 01:36:55,380
that was no errors all right so now what

2155
01:36:52,590 --> 01:36:57,420
should happen is when we actually run

2156
01:36:55,380 --> 01:36:59,760
this code hopefully if I did everything

2157
01:36:57,420 --> 01:37:00,810
right it'll parse those blocks it'll

2158
01:36:59,760 --> 01:37:03,150
decide it needs to do some audio

2159
01:37:00,810 --> 01:37:05,130
importing and the audio importing will

2160
01:37:03,149 --> 01:37:07,379
just roll over and die because all it is

2161
01:37:05,130 --> 01:37:11,010
is a bunch of not implemented code which

2162
01:37:07,380 --> 01:37:12,599
is not what we want so I'm gonna start

2163
01:37:11,010 --> 01:37:13,650
down that route because I just want to

2164
01:37:12,599 --> 01:37:15,750
dump the coding today

2165
01:37:13,649 --> 01:37:18,089
and then tomorrow we start we'll start

2166
01:37:15,750 --> 01:37:22,380
looking at in the debugger and get it

2167
01:37:18,090 --> 01:37:25,980
working so inside our HHA or no sorry

2168
01:37:22,380 --> 01:37:29,340
test asset builder I think so if you

2169
01:37:25,979 --> 01:37:32,789
take a look at this code which we wrote

2170
01:37:29,340 --> 01:37:36,270
already we already did audio importing

2171
01:37:32,789 --> 01:37:38,969
like we did that right so what I should

2172
01:37:36,270 --> 01:37:42,060
be able to do is take this stuff and say

2173
01:37:38,969 --> 01:37:48,779
alright if we've got you know a wave

2174
01:37:42,060 --> 01:37:50,789
importer let's use it you know so I

2175
01:37:48,779 --> 01:37:53,250
don't remember how I structure the PNG

2176
01:37:50,789 --> 01:37:55,079
one is it in here yes so I just put it

2177
01:37:53,250 --> 01:37:57,810
in the header file I'm gonna follow that

2178
01:37:55,079 --> 01:38:02,579
example so I'm just gonna say look here

2179
01:37:57,810 --> 01:38:04,020
is the wave stuff or wave stuff and I'm

2180
01:38:02,579 --> 01:38:07,859
gonna define it

2181
01:38:04,020 --> 01:38:13,560
thus right I don't love the

2182
01:38:07,859 --> 01:38:15,750
capitalization so I'm gonna uncap that I

2183
01:38:13,560 --> 01:38:20,039
realize I know why we did it but I don't

2184
01:38:15,750 --> 01:38:22,800
like it so we're gonna call it something

2185
01:38:20,039 --> 01:38:24,238
else for now just clean this up a little

2186
01:38:22,800 --> 01:38:27,869
bit so I'll probably clean this up a

2187
01:38:24,238 --> 01:38:29,729
little bit but you know over time so

2188
01:38:27,868 --> 01:38:31,609
we've got the pragma pushpop in there

2189
01:38:29,729 --> 01:38:34,109
again because these are tightly packed

2190
01:38:31,609 --> 01:38:36,988
meaning if you look at evenly what

2191
01:38:34,109 --> 01:38:39,359
happens here occasionally you get

2192
01:38:36,988 --> 01:38:41,279
something like a hanging you in eighth

2193
01:38:39,359 --> 01:38:43,259
normally see will pad those structures

2194
01:38:41,279 --> 01:38:46,170
out for you I guess that's not true this

2195
01:38:43,260 --> 01:38:47,190
is a 16 so you know honestly these don't

2196
01:38:46,170 --> 01:38:49,140
even look like they need the padding it

2197
01:38:47,189 --> 01:38:50,969
looks like it's always got a full 32-bit

2198
01:38:49,140 --> 01:38:54,210
on it so I don't even know what you

2199
01:38:50,970 --> 01:38:56,850
would need it but the pragma pack one

2200
01:38:54,210 --> 01:38:58,439
here around these is because these are

2201
01:38:56,850 --> 01:39:01,560
getting loaded from files we don't want

2202
01:38:58,439 --> 01:39:03,599
the C compiler inserting any padding and

2203
01:39:01,560 --> 01:39:05,450
so it's just a turn it off in case there

2204
01:39:03,600 --> 01:39:08,280
was a header that had some like hanging

2205
01:39:05,449 --> 01:39:09,960
data values or interleaved data values

2206
01:39:08,279 --> 01:39:12,179
that would cause it to insert some

2207
01:39:09,960 --> 01:39:15,500
padding and then all of our reads are

2208
01:39:12,180 --> 01:39:17,940
wrong so that's all it's happening there

2209
01:39:15,500 --> 01:39:19,920
again we've done that many times the

2210
01:39:17,939 --> 01:39:21,119
pass so I'm just mentioning again if you

2211
01:39:19,920 --> 01:39:24,270
aren't familiar with that you could

2212
01:39:21,119 --> 01:39:26,099
probably search for that in the handmade

2213
01:39:24,270 --> 01:39:27,360
hero archive and go back and watch

2214
01:39:26,100 --> 01:39:30,030
episode where I kind of go over what

2215
01:39:27,359 --> 01:39:31,739
that means the first time so if we clean

2216
01:39:30,029 --> 01:39:33,509
up these a little bit to kind of sort of

2217
01:39:31,739 --> 01:39:37,889
the more modern version that we're using

2218
01:39:33,510 --> 01:39:45,030
now where we've we've sort of evolved

2219
01:39:37,890 --> 01:39:47,630
our opinion of this and now just looking

2220
01:39:45,029 --> 01:39:51,179
at how we're doing this wave chunk ID

2221
01:39:47,630 --> 01:39:53,430
for my that data looks fine this is all

2222
01:39:51,180 --> 01:39:55,950
fine those are the types for the reading

2223
01:39:53,430 --> 01:40:02,360
and what I want to do is go take a look

2224
01:39:55,949 --> 01:40:02,359
at the loading call for the sounds here

2225
01:40:02,600 --> 01:40:07,800
so you can see we've got like riff

2226
01:40:05,340 --> 01:40:09,449
iterator and parse junk at and next

2227
01:40:07,800 --> 01:40:11,779
chunk and is valid and all that stuff

2228
01:40:09,449 --> 01:40:14,279
get junk data get type junk data size

2229
01:40:11,779 --> 01:40:15,929
that's all the stuff for iterating over

2230
01:40:14,279 --> 01:40:19,380
the riff stuff there

2231
01:40:15,930 --> 01:40:23,280
and I don't actually know to what extent

2232
01:40:19,380 --> 01:40:27,750
we need all of that stuff but what I

2233
01:40:23,279 --> 01:40:33,329
will do if we actually do need it is I

2234
01:40:27,750 --> 01:40:36,000
will go ahead and put that those calls

2235
01:40:33,329 --> 01:40:37,500
into the stream handler so from now on

2236
01:40:36,000 --> 01:40:39,689
we can just use streams as riff

2237
01:40:37,500 --> 01:40:42,449
iterators and vice-versa I think I'll

2238
01:40:39,689 --> 01:40:44,219
try it that way first because now that

2239
01:40:42,449 --> 01:40:45,750
we have the notion of an incoming stream

2240
01:40:44,220 --> 01:40:46,980
that we kind of made for other purposes

2241
01:40:45,750 --> 01:40:48,359
we might as well build riff

2242
01:40:46,979 --> 01:40:51,389
understanding in there in case we want

2243
01:40:48,359 --> 01:40:52,159
to read riff data types like wave again

2244
01:40:51,390 --> 01:41:00,110
riff

2245
01:40:52,159 --> 01:41:04,210
just I believe that the IFF moniker

2246
01:41:00,109 --> 01:41:07,299
comes from the electronic arts original

2247
01:41:04,210 --> 01:41:10,579
iff which is the interchange file format

2248
01:41:07,300 --> 01:41:23,480
I don't know where the r comes from do

2249
01:41:10,579 --> 01:41:26,479
we have a definition for this so it is

2250
01:41:23,479 --> 01:41:28,159
it's the same last it's interchange file

2251
01:41:26,479 --> 01:41:29,419
format so resource is the only

2252
01:41:28,159 --> 01:41:34,609
difference there

2253
01:41:29,420 --> 01:41:36,230
uh I don't know let's see yeah so I'm

2254
01:41:34,609 --> 01:41:37,789
correct it is based on the original

2255
01:41:36,229 --> 01:41:40,789
Electronic Arts interchange file format

2256
01:41:37,789 --> 01:41:44,180
which is for the Amiga yeah that right

2257
01:41:40,789 --> 01:41:45,890
here oh okay

2258
01:41:44,180 --> 01:41:47,420
all right that makes perfect sense so

2259
01:41:45,890 --> 01:41:49,789
these says the only difference is that

2260
01:41:47,420 --> 01:41:51,770
they went little-endian so you can

2261
01:41:49,789 --> 01:41:54,409
understand why right the the comer Amiga

2262
01:41:51,770 --> 01:41:58,700
was a Motorola processor so of course it

2263
01:41:54,409 --> 01:42:01,069
was big endian so it makes perfect sense

2264
01:41:58,699 --> 01:42:02,510
so when they did the PC version of it

2265
01:42:01,069 --> 01:42:03,529
they changed a little Indian so they

2266
01:42:02,510 --> 01:42:06,020
wouldn't have to constantly byte swap

2267
01:42:03,529 --> 01:42:11,329
everything makes sense we've talked

2268
01:42:06,020 --> 01:42:12,440
about Indian miss any Nisour if you

2269
01:42:11,329 --> 01:42:16,460
haven't seen that again check the

2270
01:42:12,439 --> 01:42:17,929
archive uh so if we go ahead and import

2271
01:42:16,460 --> 01:42:21,050
this stuff you can see that the load

2272
01:42:17,930 --> 01:42:23,450
wave call is actually pretty compact

2273
01:42:21,050 --> 01:42:25,880
it's much simpler than parse PNG because

2274
01:42:23,449 --> 01:42:27,380
loading a raw wave is really simple it

2275
01:42:25,880 --> 01:42:29,480
doesn't have any compression in there

2276
01:42:27,380 --> 01:42:32,949
most time so you can usually just

2277
01:42:29,479 --> 01:42:32,949
guarantee you that you just don't care

2278
01:42:37,539 --> 01:42:48,970
it looks it looks like what we actually

2279
01:42:44,710 --> 01:42:48,970
did here

2280
01:43:03,310 --> 01:43:07,740
well because they asked you I don't know

2281
01:43:05,109 --> 01:43:07,739
we did here so

2282
01:43:18,420 --> 01:43:23,260
I'm just I'm not sure what the section

2283
01:43:21,310 --> 01:43:24,789
sample index part of things is that's

2284
01:43:23,260 --> 01:43:28,150
what I was I wasn't sure about is that

2285
01:43:24,789 --> 01:43:31,420
for streaming or was that for something

2286
01:43:28,149 --> 01:43:35,379
else so you can see us parse the chunks

2287
01:43:31,420 --> 01:43:37,960
here so we just we get all that out and

2288
01:43:35,380 --> 01:43:39,880
then we come down here and say let's

2289
01:43:37,960 --> 01:43:44,199
compute you know where this junk is

2290
01:43:39,880 --> 01:43:46,750
gonna go and then we come through here

2291
01:43:44,199 --> 01:43:51,250
and we say if we actually were gonna

2292
01:43:46,750 --> 01:43:57,340
load samples make sure that the part

2293
01:43:51,250 --> 01:44:02,609
we're gonna load out yes so I I think

2294
01:43:57,340 --> 01:44:07,000
that this was we had we had baked into

2295
01:44:02,609 --> 01:44:10,420
the load sort of extracting a section of

2296
01:44:07,000 --> 01:44:12,369
the song of the whatever the web was for

2297
01:44:10,420 --> 01:44:16,539
streaming purposes so I'm going to

2298
01:44:12,369 --> 01:44:20,199
assume that if I search down for load

2299
01:44:16,539 --> 01:44:23,470
web that we've got something in here

2300
01:44:20,199 --> 01:44:27,069
that would actually have done some kind

2301
01:44:23,470 --> 01:44:31,119
of a segmentation so you can see the

2302
01:44:27,069 --> 01:44:33,699
first sample index bit there so let me

2303
01:44:31,119 --> 01:44:36,460
see I just want to make sure I'm right

2304
01:44:33,699 --> 01:44:40,050
about that before I go change that

2305
01:44:36,460 --> 01:44:40,050
around so

2306
01:44:45,658 --> 01:44:58,738
I don't see I don't see any sound

2307
01:44:55,469 --> 01:45:00,560
chaining happening here though let me

2308
01:44:58,738 --> 01:45:04,759
look and see if there's any reference to

2309
01:45:00,560 --> 01:45:09,360
actual sound training aha

2310
01:45:04,760 --> 01:45:14,489
so we do load music test then we do do a

2311
01:45:09,359 --> 01:45:18,269
sound chain on it and we do so there's

2312
01:45:14,488 --> 01:45:19,888
that sampling okay so it's exactly what

2313
01:45:18,270 --> 01:45:21,989
I thought was going on just took me a

2314
01:45:19,889 --> 01:45:24,000
little bit to verify that that was the

2315
01:45:21,988 --> 01:45:27,419
case so effectively what we're doing

2316
01:45:24,000 --> 01:45:30,448
there is saying look when we load the

2317
01:45:27,420 --> 01:45:34,260
web out we may want to load only a

2318
01:45:30,448 --> 01:45:36,178
portion of the web out because we may

2319
01:45:34,260 --> 01:45:40,230
want to break it up into chunks for

2320
01:45:36,179 --> 01:45:41,670
streaming purposes right and then the

2321
01:45:40,229 --> 01:45:45,839
way that that works is we create

2322
01:45:41,670 --> 01:45:47,399
multiple wives multiple assets and we

2323
01:45:45,840 --> 01:45:49,800
just tie them together with like

2324
01:45:47,399 --> 01:45:51,719
effectively like a pointer it's not

2325
01:45:49,800 --> 01:45:55,949
really a pointer it's sort of just an

2326
01:45:51,719 --> 01:45:58,050
idea that we'd use for training so all

2327
01:45:55,948 --> 01:46:00,599
we really want to do is make sure we can

2328
01:45:58,050 --> 01:46:04,289
still do that behavior I don't really

2329
01:46:00,600 --> 01:46:06,900
want that baked into the wave load I

2330
01:46:04,289 --> 01:46:09,689
would rather that be handled on the

2331
01:46:06,899 --> 01:46:12,839
outside so I think I am gonna go ahead

2332
01:46:09,689 --> 01:46:15,089
and say that the way that I'm going to

2333
01:46:12,840 --> 01:46:20,730
do this is the parse wife call will

2334
01:46:15,090 --> 01:46:23,310
literally parse the whole lab and I

2335
01:46:20,729 --> 01:46:25,888
don't care if that's two gigabytes worth

2336
01:46:23,310 --> 01:46:28,230
of data get a 64-bit machine it's not my

2337
01:46:25,889 --> 01:46:30,719
problem because this is for asset

2338
01:46:28,229 --> 01:46:33,839
processing and I don't want to have to

2339
01:46:30,719 --> 01:46:36,239
care about it so then what I want to do

2340
01:46:33,840 --> 01:46:39,420
is say anyone who's going to use the

2341
01:46:36,238 --> 01:46:42,928
streaming chunking break up you can do

2342
01:46:39,420 --> 01:46:47,880
that as a separate work on the loaded

2343
01:46:42,929 --> 01:46:49,949
wave buffer right so that's my opinion

2344
01:46:47,880 --> 01:46:52,770
on that and that's how we're gonna do it

2345
01:46:49,948 --> 01:46:54,089
until something until I hit something

2346
01:46:52,770 --> 01:46:56,870
that stops me

2347
01:46:54,090 --> 01:46:59,360
that's the way we're gonna do it

2348
01:46:56,869 --> 01:47:02,119
let's go ahead and see how our stream

2349
01:46:59,359 --> 01:47:04,339
stuff might handle this if you take a

2350
01:47:02,119 --> 01:47:06,500
look at the way it works in here you can

2351
01:47:04,340 --> 01:47:09,770
see that you basically consume stuff off

2352
01:47:06,500 --> 01:47:12,380
of it and so when we do the parse chunk

2353
01:47:09,770 --> 01:47:15,140
stuff what that would normally do is

2354
01:47:12,380 --> 01:47:17,750
that would consume one RIF headers worth

2355
01:47:15,140 --> 01:47:20,690
of stuff and then if you wanted to go to

2356
01:47:17,750 --> 01:47:26,479
the next chunk it would skip the size of

2357
01:47:20,689 --> 01:47:28,929
that chunk as it went so I guess the

2358
01:47:26,479 --> 01:47:28,929
only thing

2359
01:47:39,139 --> 01:47:53,668
so I guess you know looking at this what

2360
01:47:42,090 --> 01:47:55,800
I would say is it does seem like well I

2361
01:47:53,668 --> 01:47:58,108
mean we could still use it it's just

2362
01:47:55,800 --> 01:48:00,628
fine the only thing is since you're

2363
01:47:58,109 --> 01:48:08,729
gonna want to jump around to various

2364
01:48:00,628 --> 01:48:17,429
parts of the file I'm not really sure to

2365
01:48:08,729 --> 01:48:19,289
what extent we care about that so it may

2366
01:48:17,429 --> 01:48:22,319
really not be worth it to integrate it

2367
01:48:19,288 --> 01:48:24,929
into the stream stuff I don't know I

2368
01:48:22,319 --> 01:48:26,398
don't have a strong opinion about it one

2369
01:48:24,929 --> 01:48:29,399
way or the other to really be honest

2370
01:48:26,399 --> 01:48:33,559
with you when we do this parse we have

2371
01:48:29,399 --> 01:48:35,820
here you know I'm gonna just start by

2372
01:48:33,559 --> 01:48:39,149
playing around a little bit and we'll

2373
01:48:35,819 --> 01:48:42,929
see what I decide going into it if I

2374
01:48:39,149 --> 01:48:45,659
delete this stuff here then we're ready

2375
01:48:42,929 --> 01:48:47,760
to start if I want to get a wave header

2376
01:48:45,658 --> 01:48:52,558
the way this would work is I would just

2377
01:48:47,760 --> 01:48:58,889
say consume right and I would say from

2378
01:48:52,559 --> 01:49:01,168
this stream and I don't know yeah that's

2379
01:48:58,889 --> 01:49:04,498
gonna take an address there I don't know

2380
01:49:01,168 --> 01:49:09,029
why we don't pass an address of that if

2381
01:49:04,498 --> 01:49:13,738
I look at the PNG reader what you can

2382
01:49:09,029 --> 01:49:19,228
kind of see about parse PNG is that it

2383
01:49:13,738 --> 01:49:22,018
takes a stream by value which means that

2384
01:49:19,229 --> 01:49:28,019
it won't change the stream that was

2385
01:49:22,019 --> 01:49:30,109
passed in I don't really know why we did

2386
01:49:28,019 --> 01:49:32,280
it that way I'll keep it that way for

2387
01:49:30,109 --> 01:49:35,399
this because we might as well be

2388
01:49:32,279 --> 01:49:37,679
consistent but it's a little strange so

2389
01:49:35,399 --> 01:49:41,010
I don't really know why we didn't pass

2390
01:49:37,679 --> 01:49:44,010
in an address of a stream we must have

2391
01:49:41,010 --> 01:49:47,909
had some reason anyway if I say consume

2392
01:49:44,010 --> 01:49:49,679
for the wave header here so that will

2393
01:49:47,908 --> 01:49:50,920
come back and again just looking back

2394
01:49:49,679 --> 01:49:54,340
the stream

2395
01:49:50,920 --> 01:49:56,408
consume version here you can see how

2396
01:49:54,340 --> 01:49:59,260
that shakes out you say give me one of

2397
01:49:56,408 --> 01:50:01,779
the why there give me one of these and

2398
01:49:59,260 --> 01:50:03,579
back comes a point of that thing from

2399
01:50:01,779 --> 01:50:10,689
whatever it was that I was that I

2400
01:50:03,578 --> 01:50:13,090
consumed it and it seems fine in here we

2401
01:50:10,689 --> 01:50:16,149
say all right let's make sure that it's

2402
01:50:13,090 --> 01:50:21,730
actually what we expected to be when we

2403
01:50:16,149 --> 01:50:23,738
come through here let's see we then use

2404
01:50:21,729 --> 01:50:25,299
the chunk parsing so that would really

2405
01:50:23,738 --> 01:50:28,709
just be consuming the chunks and then

2406
01:50:25,300 --> 01:50:31,480
skipping forward by their size as we go

2407
01:50:28,710 --> 01:50:33,639
when we actually want to get the data

2408
01:50:31,479 --> 01:50:36,279
you can see that happening here there's

2409
01:50:33,639 --> 01:50:39,520
an F empty chunk which tells us stuff

2410
01:50:36,279 --> 01:50:42,819
like what the sample rate was and how

2411
01:50:39,520 --> 01:50:48,130
many bits per sample there were now for

2412
01:50:42,819 --> 01:50:50,259
our purposes so well I didn't finish my

2413
01:50:48,130 --> 01:50:52,409
almond biscuit that's how into get we

2414
01:50:50,260 --> 01:50:52,409
were

2415
01:51:03,948 --> 01:51:14,329
for our purposes we have an issue with

2416
01:51:11,119 --> 01:51:19,579
ingesting sample rates and I don't know

2417
01:51:14,329 --> 01:51:23,630
exactly how we want to solve it so when

2418
01:51:19,579 --> 01:51:27,590
we are given a WAV file I think we

2419
01:51:23,630 --> 01:51:31,480
probably want to just say it has to be

2420
01:51:27,590 --> 01:51:36,650
16 bits per sample and it has to be 48

2421
01:51:31,479 --> 01:51:38,479
kilohertz right the reason that I think

2422
01:51:36,649 --> 01:51:41,238
we want to do that is because if we

2423
01:51:38,479 --> 01:51:45,488
don't do that we get into a whole issue

2424
01:51:41,238 --> 01:51:48,049
of how do we want to resample sound

2425
01:51:45,488 --> 01:51:48,799
that's given to us at formats that we

2426
01:51:48,050 --> 01:51:56,350
didn't expect

2427
01:51:48,800 --> 01:51:59,929
right there's like a whole can of worms

2428
01:51:56,350 --> 01:52:04,579
that you open up if you decide to go

2429
01:51:59,929 --> 01:52:07,579
down the digital signal processing

2430
01:52:04,579 --> 01:52:12,140
rathole of how do I take a sound in one

2431
01:52:07,579 --> 01:52:14,238
format and convert it to another and by

2432
01:52:12,140 --> 01:52:17,960
format of course I don't mean AIFF

2433
01:52:14,238 --> 01:52:21,799
versus wave what I mean is if the sound

2434
01:52:17,960 --> 01:52:27,289
was fundamentally recorded at one sample

2435
01:52:21,800 --> 01:52:29,739
rate 48,000 samples per second 44,000

2436
01:52:27,289 --> 01:52:32,420
samples per second whatever it was and

2437
01:52:29,738 --> 01:52:35,089
you want it at a different sample rate

2438
01:52:32,420 --> 01:52:36,350
which in our case will always be 48,000

2439
01:52:35,090 --> 01:52:40,520
samples per second but whatever it is

2440
01:52:36,350 --> 01:52:43,910
you have in a while transitioning

2441
01:52:40,520 --> 01:52:46,850
between those two sample rates is not a

2442
01:52:43,909 --> 01:52:48,948
direct conversion you have to actually

2443
01:52:46,850 --> 01:52:51,560
apply some kind of signal processing

2444
01:52:48,948 --> 01:52:54,019
because you fundamentally have a single

2445
01:52:51,560 --> 01:52:56,060
signal that you don't know what it is or

2446
01:52:54,020 --> 01:52:58,400
you have no idea what the original

2447
01:52:56,060 --> 01:53:00,170
signal was and all you have is sample

2448
01:52:58,399 --> 01:53:03,519
points spaced out at a certain distance

2449
01:53:00,170 --> 01:53:06,619
and now you want to know what that

2450
01:53:03,520 --> 01:53:09,380
signal you don't know what it was what

2451
01:53:06,619 --> 01:53:10,789
it would have been what the samples

2452
01:53:09,380 --> 01:53:14,319
would have been if they were spaced

2453
01:53:10,789 --> 01:53:14,319
differently right

2454
01:53:17,720 --> 01:53:23,820
fundamentally the answer is you can't

2455
01:53:20,869 --> 01:53:26,069
right there is no way to actually know

2456
01:53:23,819 --> 01:53:30,420
the answer because without knowing the

2457
01:53:26,069 --> 01:53:33,170
original signal you have no idea what it

2458
01:53:30,420 --> 01:53:40,199
would be sampled in different locations

2459
01:53:33,170 --> 01:53:44,130
but much like images get resized and

2460
01:53:40,199 --> 01:53:47,909
they still look like themselves the same

2461
01:53:44,130 --> 01:53:50,970
is true for sounds but exactly analogous

2462
01:53:47,909 --> 01:53:53,519
the images what kind of filtering you

2463
01:53:50,970 --> 01:53:58,500
choose to do to produce a different size

2464
01:53:53,520 --> 01:54:01,890
or a different sampling of the original

2465
01:53:58,500 --> 01:54:05,119
thing has artifact effects there are

2466
01:54:01,890 --> 01:54:08,039
things that will actually occur right

2467
01:54:05,119 --> 01:54:10,529
that will be better or worse quality or

2468
01:54:08,039 --> 01:54:12,960
have different concerns in terms of what

2469
01:54:10,529 --> 01:54:15,059
ends up happening to the frequencies you

2470
01:54:12,960 --> 01:54:18,569
hear in the sound and how they are

2471
01:54:15,060 --> 01:54:21,600
reproduced based specifically on how you

2472
01:54:18,569 --> 01:54:23,670
choose to resample now fortunately just

2473
01:54:21,600 --> 01:54:25,620
straight linear interpolation actually

2474
01:54:23,670 --> 01:54:30,630
works remarkably well to the untrained

2475
01:54:25,619 --> 01:54:33,090
ear but suffice to say if you really

2476
01:54:30,630 --> 01:54:35,489
want to know what's going on and tackle

2477
01:54:33,090 --> 01:54:37,170
that problem directly you kind of want

2478
01:54:35,489 --> 01:54:42,630
to know more digital signal processing

2479
01:54:37,170 --> 01:54:44,460
or DSP and so again it opens up kind of

2480
01:54:42,630 --> 01:54:47,699
a whole can of worms that I really don't

2481
01:54:44,460 --> 01:54:49,920
necessarily want to open what I would

2482
01:54:47,699 --> 01:54:52,019
rather do is say that anyone who wants

2483
01:54:49,920 --> 01:54:57,619
to put sounds into handmade Hiro should

2484
01:54:52,020 --> 01:55:03,560
open up a program that has good DSP

2485
01:54:57,619 --> 01:55:07,769
right a good sound editor may be Reaper

2486
01:55:03,560 --> 01:55:10,740
and resample there right like resample

2487
01:55:07,770 --> 01:55:13,350
in a package where you have some control

2488
01:55:10,739 --> 01:55:15,119
over it where someone hopefully did some

2489
01:55:13,350 --> 01:55:18,120
DSP work to ensure this we're gonna get

2490
01:55:15,119 --> 01:55:19,710
good results and only give us files that

2491
01:55:18,119 --> 01:55:22,109
are actually sampled at the right sample

2492
01:55:19,710 --> 01:55:24,329
rate so I think we probably want to

2493
01:55:22,109 --> 01:55:27,509
change these asserts so they're not

2494
01:55:24,329 --> 01:55:28,380
asserts they're just errors now but we

2495
01:55:27,510 --> 01:55:30,480
do still probably

2496
01:55:28,380 --> 01:55:32,579
error I don't want to try and handle

2497
01:55:30,479 --> 01:55:35,750
multiple formats now we're basically out

2498
01:55:32,579 --> 01:55:35,750
of time so I think I'm gonna do for now

2499
01:55:38,300 --> 01:55:42,710
does it make if zero this app block out

2500
01:55:47,270 --> 01:55:55,050
look so and then just clean up any

2501
01:55:52,500 --> 01:55:57,840
compiler as we have we don't have any

2502
01:55:55,050 --> 01:55:59,820
I'm gonna leave it there

2503
01:55:57,840 --> 01:56:05,610
and then tomorrow we will try to get

2504
01:55:59,819 --> 01:56:08,329
audio import started alright so let's go

2505
01:56:05,609 --> 01:56:08,329
ahead and go to QA

2506
01:56:50,899 --> 01:56:58,518
plus us at CSV type concurrency in

2507
01:56:54,118 --> 01:57:02,130
the next edition so one thing that that

2508
01:56:58,519 --> 01:57:07,260
hopefully everybody knows about me is I

2509
01:57:02,130 --> 01:57:13,199
do not follow the C++ specification so

2510
01:57:07,260 --> 01:57:15,179
basically not only do I not know what

2511
01:57:13,198 --> 01:57:17,009
they will add in the next edition but I

2512
01:57:15,179 --> 01:57:18,239
don't care what they will add in the

2513
01:57:17,010 --> 01:57:24,869
next edition because it's always

2514
01:57:18,238 --> 01:57:27,328
terrible so you know we'll see plus plus

2515
01:57:24,868 --> 01:57:30,719
add hermeneutic graph traversal to the

2516
01:57:27,328 --> 01:57:34,738
next edition not only do I not know what

2517
01:57:30,719 --> 01:57:37,739
hermeneutic graph trend graph traversal

2518
01:57:34,738 --> 01:57:39,328
is but I can guarantee you that when I

2519
01:57:37,738 --> 01:57:40,768
actually do need to know what it is and

2520
01:57:39,328 --> 01:57:42,538
I go learn about it I will find that the

2521
01:57:40,769 --> 01:57:44,099
C++ standard committees version of it is

2522
01:57:42,538 --> 01:57:46,859
terrible because that's literally what

2523
01:57:44,099 --> 01:57:49,498
always happens like pick a language

2524
01:57:46,859 --> 01:57:51,569
feature the day you need to use that

2525
01:57:49,498 --> 01:57:55,529
feature if you go look at C++ version of

2526
01:57:51,569 --> 01:57:57,688
it it sucks that they added the worst

2527
01:57:55,529 --> 01:57:59,578
possible version like they almost like

2528
01:57:57,689 --> 01:58:01,889
it's like they started a committee to

2529
01:57:59,578 --> 01:58:04,198
try and figure out how to make sure that

2530
01:58:01,889 --> 01:58:07,260
they would only add a version of that

2531
01:58:04,198 --> 01:58:09,058
thing that was lousy and I don't know

2532
01:58:07,260 --> 01:58:10,829
how they do it they do it over and over

2533
01:58:09,059 --> 01:58:14,038
this like they look at like some kind of

2534
01:58:10,828 --> 01:58:17,569
a master's degree or like a PhD in never

2535
01:58:14,038 --> 01:58:17,569
doing the best version of something

2536
01:58:17,689 --> 01:58:23,519
they're like let's come in fourth on

2537
01:58:20,099 --> 01:58:25,078
everything in fact that C++ there is a

2538
01:58:23,519 --> 01:58:26,909
language called fourth C++ should

2539
01:58:25,078 --> 01:58:28,889
actually be called fourth because if you

2540
01:58:26,908 --> 01:58:30,478
were to rank the languages at how well

2541
01:58:28,889 --> 01:58:33,868
they implemented declare feature like

2542
01:58:30,479 --> 01:58:34,380
C++ would always come in like fourth at

2543
01:58:33,868 --> 01:58:36,418
best

2544
01:58:34,380 --> 01:58:42,029
have you seen Brett Victor's talk

2545
01:58:36,418 --> 01:58:43,679
inventing on principle I have not on the

2546
01:58:42,029 --> 01:58:45,179
pre stream I'd asked about finding the

2547
01:58:43,679 --> 01:58:46,199
filter kernels and you asked where they

2548
01:58:45,179 --> 01:58:47,788
meant the integer or the floating-point

2549
01:58:46,198 --> 01:58:51,958
do you mind explaining how you found

2550
01:58:47,788 --> 01:58:54,268
each thanks sure so the integer filter

2551
01:58:51,958 --> 01:58:58,408
was found by literal just trial and

2552
01:58:54,269 --> 01:59:01,588
error there are so few possible filters

2553
01:58:58,408 --> 01:59:06,688
that are close to a sharpening filter

2554
01:59:01,588 --> 01:59:08,878
in integer in / 32 which is what I was

2555
01:59:06,689 --> 01:59:10,889
working on I ideally wanted to find / 16

2556
01:59:08,878 --> 01:59:12,988
I couldn't find one good enough so then

2557
01:59:10,889 --> 01:59:15,479
I went to / 32 that you can basically

2558
01:59:12,988 --> 01:59:18,198
just try them all there's just not very

2559
01:59:15,479 --> 01:59:21,269
many right because each coefficient

2560
01:59:18,198 --> 01:59:25,678
fundamentally can only be between 1 and

2561
01:59:21,269 --> 01:59:27,599
15 / 16 and they have to add to 1 and

2562
01:59:25,679 --> 01:59:29,309
they have to look like a sharpening

2563
01:59:27,599 --> 01:59:30,029
filter so they have to pretty much look

2564
01:59:29,309 --> 01:59:33,239
like a sink

2565
01:59:30,029 --> 01:59:35,608
sort of like something sink ish uh and

2566
01:59:33,238 --> 01:59:38,338
so there were only you know I don't know

2567
01:59:35,609 --> 01:59:39,780
20 30 candidates I mean it was so few I

2568
01:59:38,338 --> 01:59:44,399
just looked at them and pick the best

2569
01:59:39,779 --> 01:59:46,529
one a floating point I didn't do that

2570
01:59:44,399 --> 01:59:49,609
I just cheesed out on floating point I

2571
01:59:46,529 --> 01:59:52,559
just said look here's an ideal filter

2572
01:59:49,609 --> 01:59:56,189
quote-unquote here's one that I know is

2573
01:59:52,559 --> 01:59:58,739
infinite and let me just like search in

2574
01:59:56,189 --> 02:00:02,189
between them what's all I did you can do

2575
01:59:58,738 --> 02:00:06,118
other things you can use eigen analysis

2576
02:00:02,189 --> 02:00:08,550
on them which I was told by Fabien you

2577
02:00:06,118 --> 02:00:13,049
can just do an octave octave just has

2578
02:00:08,550 --> 02:00:15,599
this built in it's like one call to look

2579
02:00:13,050 --> 02:00:17,309
at the eigenvalues but even that doesn't

2580
02:00:15,599 --> 02:00:21,418
really quite get you where you want to

2581
02:00:17,309 --> 02:00:24,979
be because it's hard to know where you

2582
02:00:21,418 --> 02:00:28,708
want those eigenvalues to sum to one

2583
02:00:24,979 --> 02:00:31,050
sort of but because truncation is in the

2584
02:00:28,708 --> 02:00:32,698
mix you can actually push harder than

2585
02:00:31,050 --> 02:00:35,159
that and have them some to something

2586
02:00:32,698 --> 02:00:37,078
slightly over one and that's actually

2587
02:00:35,158 --> 02:00:40,128
usually the best filter so it feel a

2588
02:00:37,078 --> 02:00:43,458
little bit of a trial and error process

2589
02:00:40,128 --> 02:00:43,458
you know Sam

2590
02:00:46,920 --> 02:00:54,380
have you tried Oni no is that a language

2591
02:00:58,460 --> 02:01:08,510
modern modal editing powered by knee of

2592
02:01:01,979 --> 02:01:08,509
em oh so it's an editor no I have not I

2593
02:01:08,539 --> 02:01:12,408
have not tried that

2594
02:01:22,350 --> 02:01:25,819
[Music]

2595
02:01:36,310 --> 02:01:41,050
so yeah I mean just looking at it it

2596
02:01:39,760 --> 02:01:44,039
doesn't look like something that would

2597
02:01:41,050 --> 02:01:44,039
interest me particularly

2598
02:01:53,918 --> 02:02:00,609
so I doubt it would be something I would

2599
02:01:55,958 --> 02:02:02,050
be interested in but you know it's hard

2600
02:02:00,609 --> 02:02:06,118
to say without actually using it

2601
02:02:02,050 --> 02:02:06,119
obviously oops that's the wrong computer

2602
02:02:14,750 --> 02:02:24,939
do we want 32-bit floating-point samples

2603
02:02:17,630 --> 02:02:24,940
for high quality audio streams uh no I

2604
02:02:25,029 --> 02:02:33,219
don't think so I mean I'm not really an

2605
02:02:28,579 --> 02:02:38,779
audiophile I'll start with that but I

2606
02:02:33,220 --> 02:02:44,449
guess what I would say is I don't really

2607
02:02:38,779 --> 02:02:48,590
know of much in the way of audio sources

2608
02:02:44,449 --> 02:02:56,199
where you would need 32-bit

2609
02:02:48,590 --> 02:02:58,789
floating-point audio samples like what

2610
02:02:56,199 --> 02:03:04,609
sound would you be recording that would

2611
02:02:58,789 --> 02:03:08,659
require like 32-bit float as the storage

2612
02:03:04,609 --> 02:03:15,199
format obviously we mix in 32-bit float

2613
02:03:08,659 --> 02:03:17,149
because it's just fast right like modern

2614
02:03:15,199 --> 02:03:19,159
computers are very fast at 32-bit float

2615
02:03:17,149 --> 02:03:21,049
mixing so you mind as well and you don't

2616
02:03:19,159 --> 02:03:23,239
have to worry about like you know

2617
02:03:21,050 --> 02:03:29,539
overflows or things like that in the

2618
02:03:23,239 --> 02:03:31,969
middle but I mean I'll start with the

2619
02:03:29,539 --> 02:03:33,590
fact that just where we already licensed

2620
02:03:31,970 --> 02:03:36,199
music for handmade here the where we

2621
02:03:33,590 --> 02:03:38,949
licensed music from only delivers 16-bit

2622
02:03:36,199 --> 02:03:42,829
audio for the music in the first place

2623
02:03:38,949 --> 02:03:45,470
so you know our music obviously wouldn't

2624
02:03:42,829 --> 02:03:48,529
be a 16-bit wouldn't be a 32-bit

2625
02:03:45,470 --> 02:03:50,710
floating point source for sound effects

2626
02:03:48,529 --> 02:03:52,969
I haven't really done anything for that

2627
02:03:50,710 --> 02:03:54,590
but you know we would probably also

2628
02:03:52,970 --> 02:03:57,920
contract with someone for sound effects

2629
02:03:54,590 --> 02:04:00,380
at some point would they deliver a

2630
02:03:57,920 --> 02:04:02,390
32-bit float sound effect sources I

2631
02:04:00,380 --> 02:04:04,190
don't know maybe people do that nowadays

2632
02:04:02,390 --> 02:04:05,630
I don't know I'm not like I said merrily

2633
02:04:04,189 --> 02:04:12,579
an audio files I don't know but I would

2634
02:04:05,630 --> 02:04:18,020
I just don't I don't really know of any

2635
02:04:12,579 --> 02:04:20,000
reason for that I mean I guess what I

2636
02:04:18,020 --> 02:04:21,590
would say is what is the sound that you

2637
02:04:20,000 --> 02:04:26,300
think that you need 32-bit

2638
02:04:21,590 --> 02:04:28,610
floating-point recording for as the

2639
02:04:26,300 --> 02:04:31,489
storage format like like is

2640
02:04:28,609 --> 02:04:32,960
can you can you name a circumstance

2641
02:04:31,488 --> 02:04:36,408
where you can actually tell the

2642
02:04:32,960 --> 02:04:38,539
difference between those two like a

2643
02:04:36,408 --> 02:04:43,069
normal human being like not a like not a

2644
02:04:38,539 --> 02:04:46,729
dog what do you think about procedural

2645
02:04:43,069 --> 02:04:50,719
audio I think it's interesting but we

2646
02:04:46,729 --> 02:04:52,218
won't be doing it on handmade hero why

2647
02:04:50,719 --> 02:04:53,899
was the windows sync worse than the one

2648
02:04:52,219 --> 02:04:55,489
you found if sinks are ideal does the

2649
02:04:53,899 --> 02:04:58,789
kernel need slight changes from the

2650
02:04:55,488 --> 02:05:01,698
ideals values once it is windowed so I

2651
02:04:58,789 --> 02:05:09,469
guess I don't know necessarily that I

2652
02:05:01,698 --> 02:05:11,769
can say why per se I assume it's because

2653
02:05:09,469 --> 02:05:14,329
the way that the sink is windowed

2654
02:05:11,770 --> 02:05:17,719
constructs something whose eigenvalues

2655
02:05:14,329 --> 02:05:21,769
are actually higher than one but I don't

2656
02:05:17,719 --> 02:05:23,899
really know Fabien probably did the

2657
02:05:21,770 --> 02:05:26,119
analysis I'd have to go back and look he

2658
02:05:23,899 --> 02:05:29,539
sent me some mails I asked him to please

2659
02:05:26,118 --> 02:05:32,479
post the stuff he sent me to his blog I

2660
02:05:29,539 --> 02:05:35,689
never heard back from him on that my

2661
02:05:32,479 --> 02:05:37,158
guess is he just doesn't have time to do

2662
02:05:35,689 --> 02:05:40,908
that right and it takes time to put a

2663
02:05:37,158 --> 02:05:44,359
blog post he I want to say did that it's

2664
02:05:40,908 --> 02:05:46,219
either he or Charles did that and

2665
02:05:44,359 --> 02:05:50,029
probably have the answer in one of those

2666
02:05:46,219 --> 02:05:52,039
emails but you know that was a private

2667
02:05:50,029 --> 02:05:56,750
communication so I don't I don't have I

2668
02:05:52,039 --> 02:05:58,609
can't point you to that it's impossible

2669
02:05:56,750 --> 02:06:00,560
to write a graphic card to bugger like n

2670
02:05:58,609 --> 02:06:05,179
site or something they have to be done

2671
02:06:00,560 --> 02:06:09,350
by graphic card vendors my assumption

2672
02:06:05,179 --> 02:06:13,039
would be like yes and no you know

2673
02:06:09,350 --> 02:06:15,560
graphic card have like only the vendor

2674
02:06:13,039 --> 02:06:19,729
can provide the low level access

2675
02:06:15,560 --> 02:06:27,380
necessary to do debugging features but

2676
02:06:19,729 --> 02:06:29,509
my understanding of the way that they

2677
02:06:27,380 --> 02:06:35,779
work right now is that those features

2678
02:06:29,510 --> 02:06:38,780
are not hidden so I think once you once

2679
02:06:35,779 --> 02:06:41,009
you install the debug version of the

2680
02:06:38,779 --> 02:06:44,069
drivers that n site uses

2681
02:06:41,010 --> 02:06:45,020
I think you can also ask for that

2682
02:06:44,069 --> 02:06:48,210
information

2683
02:06:45,020 --> 02:06:51,210
like the performance counters and the

2684
02:06:48,210 --> 02:06:54,270
you know debug information that they are

2685
02:06:51,210 --> 02:06:55,170
getting I I think you can get it don't

2686
02:06:54,270 --> 02:06:58,500
quote me on that

2687
02:06:55,170 --> 02:07:01,050
but my understanding was that like while

2688
02:06:58,500 --> 02:07:03,060
you do need debug support in the driver

2689
02:07:01,050 --> 02:07:04,560
because obviously that's the thing that

2690
02:07:03,060 --> 02:07:07,950
can actually talk to grass card and

2691
02:07:04,560 --> 02:07:10,560
figure anything out getting access to

2692
02:07:07,949 --> 02:07:12,649
those pieces of information that you

2693
02:07:10,560 --> 02:07:17,070
wouldn't necessarily already have I

2694
02:07:12,649 --> 02:07:21,000
think you can do I think you can do that

2695
02:07:17,069 --> 02:07:27,809
on as long as you're on one of those

2696
02:07:21,000 --> 02:07:28,890
debug drivers already I'm a computer

2697
02:07:27,810 --> 02:07:30,510
science student or recently started

2698
02:07:28,890 --> 02:07:31,079
falling you're serious on YouTube helped

2699
02:07:30,510 --> 02:07:32,250
me a lot

2700
02:07:31,079 --> 02:07:33,510
because you explained really good in

2701
02:07:32,250 --> 02:07:35,010
depth I just want to say thanks for all

2702
02:07:33,510 --> 02:07:36,630
the work you do for us and I hope that I

2703
02:07:35,010 --> 02:07:38,760
never catch up with a series because you

2704
02:07:36,630 --> 02:07:41,159
will never stop doing them well thanks

2705
02:07:38,760 --> 02:07:43,460
for the kind words you're you'll catch

2706
02:07:41,159 --> 02:07:46,529
up someday well here's the thing

2707
02:07:43,460 --> 02:07:48,659
either you'll catch up to the series

2708
02:07:46,529 --> 02:07:50,069
someday or you'll just be good enough

2709
02:07:48,659 --> 02:07:53,550
that you don't bother watching anymore

2710
02:07:50,069 --> 02:07:55,049
cuz you already know right you'll get

2711
02:07:53,550 --> 02:07:59,670
you'll get to one you'll get one of

2712
02:07:55,050 --> 02:08:02,159
those two places anyone who doesn't give

2713
02:07:59,670 --> 02:08:03,449
up on the handmade Hero series pretty

2714
02:08:02,159 --> 02:08:06,689
much will get to one of those two places

2715
02:08:03,449 --> 02:08:08,849
either they catch up someday or they

2716
02:08:06,689 --> 02:08:13,589
just get so good that they don't really

2717
02:08:08,850 --> 02:08:15,239
need me right they don't need me telling

2718
02:08:13,590 --> 02:08:20,909
them what to do anymore

2719
02:08:15,238 --> 02:08:23,369
right they've they graduate so something

2720
02:08:20,909 --> 02:08:25,939
will happen if you keep at it that seems

2721
02:08:23,369 --> 02:08:25,939
to be the case

2722
02:08:31,300 --> 02:08:36,020
I'm touring why we chose get over travel

2723
02:08:34,460 --> 02:08:38,600
man despite its simplicity I'm just not

2724
02:08:36,020 --> 02:08:40,730
convinced this better um I don't know

2725
02:08:38,600 --> 02:08:44,480
that anyone did choose get over travel

2726
02:08:40,729 --> 02:08:47,929
man what happened was since Alan keeps

2727
02:08:44,479 --> 02:08:50,299
his source code on get anyway he just

2728
02:08:47,930 --> 02:08:52,159
gave me access to get thinking that

2729
02:08:50,300 --> 02:08:55,010
would make it easier for us to share

2730
02:08:52,159 --> 02:08:57,380
information as you saw during fur coat

2731
02:08:55,010 --> 02:09:02,300
or Jam that is not what it did travel

2732
02:08:57,380 --> 02:09:04,940
man is way better but you know get

2733
02:09:02,300 --> 02:09:07,250
ladies and gentlemen source code control

2734
02:09:04,939 --> 02:09:09,669
that's actually slower than the copy

2735
02:09:07,250 --> 02:09:09,670
command

2736
02:09:21,770 --> 02:09:28,200
no more questions you know what I should

2737
02:09:24,930 --> 02:09:30,510
do too I posted this on Twitter I should

2738
02:09:28,199 --> 02:09:32,220
I should add it to our builds you'll

2739
02:09:30,510 --> 02:09:35,130
notice it like when you get error

2740
02:09:32,220 --> 02:09:36,659
messages in Visual Studio I posted this

2741
02:09:35,130 --> 02:09:39,119
Twitter just because I didn't know about

2742
02:09:36,659 --> 02:09:40,829
this I went in was looking at it's like

2743
02:09:39,119 --> 02:09:42,149
they must have added by now and I went

2744
02:09:40,829 --> 02:09:44,220
look that it turns out they had it's

2745
02:09:42,149 --> 02:09:47,159
just kind of little bit buried when you

2746
02:09:44,220 --> 02:09:51,180
get error messages you don't get column

2747
02:09:47,159 --> 02:09:54,119
numbers you just get line numbers and I

2748
02:09:51,180 --> 02:09:56,340
always was kind of sad about that but

2749
02:09:54,119 --> 02:09:58,920
what I realized was that there actually

2750
02:09:56,340 --> 02:10:01,079
is one that they added I think in 2017

2751
02:09:58,920 --> 02:10:07,760
or something so if you actually add

2752
02:10:01,079 --> 02:10:11,640
minus Diagnostics colon column I think

2753
02:10:07,760 --> 02:10:14,100
if you add that to your build line it

2754
02:10:11,640 --> 02:10:16,619
actually tells you where the errors are

2755
02:10:14,100 --> 02:10:19,289
by column loops I should put the air

2756
02:10:16,619 --> 02:10:21,840
better it actually tells you where the

2757
02:10:19,289 --> 02:10:24,060
column is of the error as well right so

2758
02:10:21,840 --> 02:10:26,940
you can see it got that and so when you

2759
02:10:24,060 --> 02:10:28,830
when like in the editor now right like

2760
02:10:26,939 --> 02:10:31,979
for a coder can can jump right to the

2761
02:10:28,829 --> 02:10:33,569
token that was wrong which is kind of

2762
02:10:31,979 --> 02:10:35,399
nice because if you have something like

2763
02:10:33,569 --> 02:10:39,769
you know result sample count equals

2764
02:10:35,399 --> 02:10:43,379
sample count or just you know 5 plus 3

2765
02:10:39,770 --> 02:10:45,780
like this and you need to build it's

2766
02:10:43,380 --> 02:10:49,140
nice if you can just say jump right to

2767
02:10:45,779 --> 02:10:50,759
the air so you know like if if the if

2768
02:10:49,140 --> 02:10:53,300
this line was long I'm trying to give a

2769
02:10:50,760 --> 02:10:53,300
good example

2770
02:10:58,078 --> 02:11:02,189
right so you know I do some build and

2771
02:11:00,750 --> 02:11:03,270
I've got some big long line with tons of

2772
02:11:02,189 --> 02:11:04,589
stuff in it I know that's not a very

2773
02:11:03,270 --> 02:11:05,940
good example but imagine there's tons of

2774
02:11:04,590 --> 02:11:12,239
confusing stuff in it and you're like

2775
02:11:05,939 --> 02:11:14,460
where is the actual like error now it'll

2776
02:11:12,238 --> 02:11:16,799
go right to it right because it knows

2777
02:11:14,460 --> 02:11:19,349
comment so I don't know how many editors

2778
02:11:16,800 --> 02:11:22,139
support columnar errors but I suspect

2779
02:11:19,349 --> 02:11:25,889
many do for coder does other and it's

2780
02:11:22,139 --> 02:11:28,670
probably due because a lot of them work

2781
02:11:25,889 --> 02:11:31,739
with clang which switch which supplies

2782
02:11:28,670 --> 02:11:33,719
column numbers in addition to line

2783
02:11:31,738 --> 02:11:35,218
numbers so just public service

2784
02:11:33,719 --> 02:11:37,408
announcement add Diagnostics come on

2785
02:11:35,219 --> 02:11:41,309
column into your build line it's just a

2786
02:11:37,408 --> 02:11:43,379
free nice time-saving thing it can only

2787
02:11:41,309 --> 02:11:45,090
help right as long as your editor

2788
02:11:43,380 --> 02:11:46,230
supports aver doesn't support it maybe

2789
02:11:45,090 --> 02:11:54,900
it will confuse your editor in which

2790
02:11:46,229 --> 02:11:56,638
case not so good but other than that JBC

2791
02:11:54,899 --> 02:11:57,629
cannon you made an offhand comment a

2792
02:11:56,639 --> 02:11:58,859
source code control to you maybe

2793
02:11:57,630 --> 02:12:00,659
yourself a ticket if you have seen it

2794
02:11:58,859 --> 02:12:03,210
other than yourself actually yes

2795
02:12:00,658 --> 02:12:06,448
in technically nobody has ever seen it

2796
02:12:03,210 --> 02:12:09,980
but me well I guess Ana's seen it

2797
02:12:06,448 --> 02:12:09,979
running but

2798
02:12:15,109 --> 02:12:19,199
age joram they intentionally didn't make

2799
02:12:17,579 --> 02:12:21,059
reporting columns default behavior nor

2800
02:12:19,199 --> 02:12:23,550
did not break back charlie exactly yeah

2801
02:12:21,060 --> 02:12:26,460
like there are probably editors that

2802
02:12:23,550 --> 02:12:29,369
just don't know what to do with a line

2803
02:12:26,460 --> 02:12:31,230
of that format and so I'm sure that

2804
02:12:29,369 --> 02:12:33,899
visual studio couldn't just start

2805
02:12:31,229 --> 02:12:36,739
reporting columns because it would just

2806
02:12:33,899 --> 02:12:39,210
break everybody so they put it under a

2807
02:12:36,739 --> 02:12:42,090
switch and then didn't really publicize

2808
02:12:39,210 --> 02:12:44,159
it particularly well so you know nobody

2809
02:12:42,090 --> 02:12:45,960
knew about it but it's there so as long

2810
02:12:44,159 --> 02:12:50,000
as it doesn't break something that you

2811
02:12:45,960 --> 02:12:50,000
have it's it's great right turn it on

2812
02:12:50,569 --> 02:12:55,889
have you seen V Lang is it vaporware I

2813
02:12:53,520 --> 02:13:03,650
think I saw somebody mention it it was

2814
02:12:55,890 --> 02:13:06,810
like a language being made for an email

2815
02:13:03,649 --> 02:13:09,089
quite no like a social media client or

2816
02:13:06,810 --> 02:13:13,190
something I don't even know a messenger

2817
02:13:09,090 --> 02:13:14,789
client or something I didn't look at it

2818
02:13:13,189 --> 02:13:17,879
at all really

2819
02:13:14,789 --> 02:13:19,079
no so I paper where who died who knows I

2820
02:13:17,880 --> 02:13:22,140
have no idea I don't know anything about

2821
02:13:19,079 --> 02:13:23,670
it I've read the sequel said sister I

2822
02:13:22,140 --> 02:13:25,770
surf your questions cry just comments

2823
02:13:23,670 --> 02:13:27,449
your coding styles super pleasing just

2824
02:13:25,770 --> 02:13:28,920
popping out Struck's left and right so

2825
02:13:27,449 --> 02:13:30,389
procedural no weird stuff less isms

2826
02:13:28,920 --> 02:13:32,310
verbose variable and function name so

2827
02:13:30,390 --> 02:13:34,020
there's no ambiguity it's nice and as a

2828
02:13:32,310 --> 02:13:37,620
huge implement out for the better I'm

2829
02:13:34,020 --> 02:13:42,930
very glad to hear that I really can't

2830
02:13:37,619 --> 02:13:45,029
emphasize enough but like code being

2831
02:13:42,930 --> 02:13:47,310
clear and procedural is incredibly

2832
02:13:45,029 --> 02:13:49,800
important it's important in way more

2833
02:13:47,310 --> 02:13:51,930
ways than people realize legibility is

2834
02:13:49,800 --> 02:13:54,329
obviously one of them maintainability is

2835
02:13:51,930 --> 02:13:56,400
another one but also just efficiency

2836
02:13:54,329 --> 02:13:59,309
like code that's written roughly like

2837
02:13:56,399 --> 02:14:00,929
the CPU will actually do it is just a

2838
02:13:59,310 --> 02:14:02,850
really good way to make sure you're not

2839
02:14:00,930 --> 02:14:08,310
making something super piggy and bloated

2840
02:14:02,850 --> 02:14:10,260
that just runs really slowly um I like

2841
02:14:08,310 --> 02:14:11,990
high-level language features actually I

2842
02:14:10,260 --> 02:14:14,610
know probably looks like I don't I

2843
02:14:11,989 --> 02:14:17,130
actually do like high-level language

2844
02:14:14,609 --> 02:14:19,139
features the problem is that C++ as

2845
02:14:17,130 --> 02:14:21,960
high-level artists are just all terrible

2846
02:14:19,140 --> 02:14:24,570
all they do is make complicated weird

2847
02:14:21,960 --> 02:14:27,869
convoluted code that sucks like it's

2848
02:14:24,569 --> 02:14:30,509
just it's not good high-level it does

2849
02:14:27,869 --> 02:14:33,329
let you make good code quickly it lets

2850
02:14:30,510 --> 02:14:34,500
you make bad code quickly and that is

2851
02:14:33,329 --> 02:14:37,470
not what I want out of a high level

2852
02:14:34,500 --> 02:14:39,630
language feature right so I would like

2853
02:14:37,470 --> 02:14:41,220
to say that I don't really like the fact

2854
02:14:39,630 --> 02:14:42,329
that I don't get any high level language

2855
02:14:41,220 --> 02:14:43,800
features when I program and see what

2856
02:14:42,329 --> 02:14:49,340
fuss because the only ones available to

2857
02:14:43,800 --> 02:14:51,960
me are lousy but I would like some

2858
02:14:49,340 --> 02:14:53,579
eventually so it's not that I don't

2859
02:14:51,960 --> 02:14:55,260
think they're I think high level answers

2860
02:14:53,579 --> 02:14:57,539
are good I wish they were geared towards

2861
02:14:55,260 --> 02:14:59,520
things that I care about and written in

2862
02:14:57,539 --> 02:15:02,519
a way that I like they're often not so I

2863
02:14:59,520 --> 02:15:04,470
can't use in the C++ but barring that

2864
02:15:02,520 --> 02:15:07,410
even when I have high level language

2865
02:15:04,470 --> 02:15:10,079
features I still prefer it to be in a

2866
02:15:07,409 --> 02:15:14,059
procedural mode so I still like tool to

2867
02:15:10,079 --> 02:15:16,559
see what is happening correctly laid out

2868
02:15:14,060 --> 02:15:18,900
and a lot of high level languages don't

2869
02:15:16,560 --> 02:15:20,760
do that they just are totally convoluted

2870
02:15:18,899 --> 02:15:22,259
and trying to ferret what's actually

2871
02:15:20,760 --> 02:15:23,220
going on to the hood takes a long time

2872
02:15:22,260 --> 02:15:25,890
if you didn't write the code yourself

2873
02:15:23,220 --> 02:15:28,500
and I don't like that so I like it when

2874
02:15:25,890 --> 02:15:29,880
high level is still clear and I think

2875
02:15:28,500 --> 02:15:32,550
you can do that I just don't think

2876
02:15:29,880 --> 02:15:34,050
languages prioritize legibility and

2877
02:15:32,550 --> 02:15:36,329
efficiency when they're doing high level

2878
02:15:34,050 --> 02:15:39,150
languages they tend to prioritize weird

2879
02:15:36,329 --> 02:15:40,500
like they get into these weird like head

2880
02:15:39,149 --> 02:15:42,089
spaces where they're not thinking about

2881
02:15:40,500 --> 02:15:44,579
the CPU it's like they're in ABS

2882
02:15:42,090 --> 02:15:47,670
completely abstract land and that I just

2883
02:15:44,579 --> 02:15:49,529
don't find productive at least a bad

2884
02:15:47,670 --> 02:15:52,520
decision making at least a high level

2885
02:15:49,529 --> 02:15:56,929
programming languages that can't produce

2886
02:15:52,520 --> 02:15:56,930
good code right

2887
02:16:06,189 --> 02:16:10,210
hit a wall every company I look up

2888
02:16:08,319 --> 02:16:12,189
demand and not a healthy balance of

2889
02:16:10,210 --> 02:16:14,079
procedure but the ultra-radical oh and

2890
02:16:12,189 --> 02:16:15,639
nothing but yeah I mean you know what

2891
02:16:14,079 --> 02:16:17,170
can you do right there's a reason you

2892
02:16:15,640 --> 02:16:20,260
get paid to program and it's because

2893
02:16:17,170 --> 02:16:21,579
it's not always fun and having to use

2894
02:16:20,260 --> 02:16:23,550
object oriented programming is one of

2895
02:16:21,579 --> 02:16:26,260
those ways that can be really not fun

2896
02:16:23,550 --> 02:16:27,820
synth is at work I started rewriting a

2897
02:16:26,260 --> 02:16:30,789
Python package in seats as performance

2898
02:16:27,819 --> 02:16:32,800
is so bad that nobody wants it anymore I

2899
02:16:30,789 --> 02:16:34,510
was wondering why people do not write in

2900
02:16:32,800 --> 02:16:35,649
native code that that often anymore and

2901
02:16:34,510 --> 02:16:36,880
choose the scripting language that cause

2902
02:16:35,649 --> 02:16:40,300
a lot of people problems for down the

2903
02:16:36,880 --> 02:16:42,550
road Jeremy commonly yeah they just you

2904
02:16:40,300 --> 02:16:46,510
think it's too hard right

2905
02:16:42,550 --> 02:16:49,389
writing a native code once you're kind

2906
02:16:46,510 --> 02:16:51,280
of in package land where you think like

2907
02:16:49,389 --> 02:16:53,800
oh I'll just install these seventeen

2908
02:16:51,280 --> 02:16:56,620
Python packages and then it'll only be a

2909
02:16:53,800 --> 02:16:58,329
few lines of code to do this thing you

2910
02:16:56,620 --> 02:17:00,510
know that helps you get stuff done

2911
02:16:58,329 --> 02:17:02,409
quickly that you don't understand right

2912
02:17:00,510 --> 02:17:03,489
that you couldn't have written yourself

2913
02:17:02,409 --> 02:17:05,260
or that we're taking too long to write

2914
02:17:03,489 --> 02:17:06,579
yourself or whatever right and there's

2915
02:17:05,260 --> 02:17:07,659
some benefits to that which is to say

2916
02:17:06,579 --> 02:17:08,860
that you can write something that you

2917
02:17:07,659 --> 02:17:10,030
don't understand or you can write

2918
02:17:08,860 --> 02:17:11,140
something that would have taken several

2919
02:17:10,030 --> 02:17:13,720
months you could write it very quickly

2920
02:17:11,139 --> 02:17:15,789
problem is it sucks right it's really

2921
02:17:13,719 --> 02:17:17,349
slow and it's probably very buggy and it

2922
02:17:15,790 --> 02:17:19,180
probably has a lot of hidden problems

2923
02:17:17,350 --> 02:17:20,800
with it you don't know about because you

2924
02:17:19,180 --> 02:17:24,520
have no idea what those eleven hundred

2925
02:17:20,800 --> 02:17:26,680
packages are doing right and so it's

2926
02:17:24,520 --> 02:17:34,060
just a bad trade-off that people get

2927
02:17:26,680 --> 02:17:36,389
themselves into right and you know what

2928
02:17:34,059 --> 02:17:39,219
can you do right we just we haven't

2929
02:17:36,389 --> 02:17:41,889
gotten to the silver bullet yet where

2930
02:17:39,219 --> 02:17:44,019
you can write a few simple things and

2931
02:17:41,889 --> 02:17:47,079
get really great code out the other end

2932
02:17:44,020 --> 02:17:48,670
we we aren't there yet right and Adam

2933
02:17:47,079 --> 02:17:50,530
maybe we'll never be there but you know

2934
02:17:48,670 --> 02:17:55,690
assuming that someday we'd get there

2935
02:17:50,530 --> 02:17:57,690
it's just it's further down the line and

2936
02:17:55,690 --> 02:18:00,810
[Music]

2937
02:17:57,690 --> 02:18:00,810
you know

2938
02:18:12,909 --> 02:18:18,129
all right I think I'm gonna I'm gonna

2939
02:18:15,218 --> 02:18:19,449
ended Erica we were out of time I don't

2940
02:18:18,129 --> 02:18:21,369
see any other questions that are like on

2941
02:18:19,450 --> 02:18:22,450
what we were doing so I you know I try

2942
02:18:21,370 --> 02:18:25,329
to answer any questions that are on what

2943
02:18:22,450 --> 02:18:27,880
we actually did but you know off-topic

2944
02:18:25,329 --> 02:18:29,950
stuff I'm okay which is kind of skipping

2945
02:18:27,879 --> 02:18:31,829
for now I can always tack them another

2946
02:18:29,950 --> 02:18:39,280
day

2947
02:18:31,829 --> 02:18:43,479
all right I don't know if I mean it

2948
02:18:39,280 --> 02:18:44,739
changes but anyway all right thank you

2949
02:18:43,479 --> 02:18:45,789
everyone for joining me from episode a

2950
02:18:44,739 --> 02:18:47,949
handmade hero it's been a pleasure

2951
02:18:45,790 --> 02:18:49,060
coding with you as always if you would

2952
02:18:47,950 --> 02:18:50,469
like to follow along with the series at

2953
02:18:49,059 --> 02:18:52,718
home you can always go to handmade hero

2954
02:18:50,468 --> 02:18:54,819
org and it if you preorder the game that

2955
02:18:52,718 --> 02:18:56,169
comes with a source code right now so

2956
02:18:54,819 --> 02:18:57,549
you can play around with it play around

2957
02:18:56,170 --> 02:19:01,210
with what we're doing learn from it

2958
02:18:57,549 --> 02:19:03,009
whatever you want to to do to sort of

2959
02:19:01,209 --> 02:19:05,979
follow on the series at that point it

2960
02:19:03,010 --> 02:19:09,750
makes pretty easy I'll be back here

2961
02:19:05,979 --> 02:19:12,100
tomorrow same time same place to

2962
02:19:09,750 --> 02:19:13,690
sleeping if that wave parser actually

2963
02:19:12,100 --> 02:19:16,270
integrated in shouldn't be too hard

2964
02:19:13,690 --> 02:19:17,440
already have a working version but we

2965
02:19:16,270 --> 02:19:19,060
got to do the massaging and then we have

2966
02:19:17,440 --> 02:19:20,770
to get it integrated the asset system

2967
02:19:19,059 --> 02:19:23,379
properly as well so when it actually

2968
02:19:20,770 --> 02:19:25,569
does its import those assets will be

2969
02:19:23,379 --> 02:19:28,059
placed in the asset system in a logical

2970
02:19:25,569 --> 02:19:29,379
way which again requires a little bit of

2971
02:19:28,059 --> 02:19:31,209
work because we kind of redid the way we

2972
02:19:29,379 --> 02:19:34,089
did some of our memory paging is stuff

2973
02:19:31,209 --> 02:19:36,729
like that that's about it I hope see you

2974
02:19:34,090 --> 02:19:38,200
back here for next stream tomorrow until

2975
02:19:36,729 --> 02:19:38,949
then have fun putting everyone I'll see

2976
02:19:38,200 --> 02:19:41,909
you on the Internet

2977
02:19:38,950 --> 02:19:41,909
techies everybody

