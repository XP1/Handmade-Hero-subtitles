1
00:00:00,000 --> 00:00:05,009
according hello everyone and welcome to

2
00:00:03,060 --> 00:00:07,108
handmade hero today

3
00:00:05,009 --> 00:00:08,309
is not an actual handmade hero as you

4
00:00:07,108 --> 00:00:09,990
know from the schedule there is not a

5
00:00:08,308 --> 00:00:15,928
handmade hero scheduled until this

6
00:00:09,990 --> 00:00:18,929
weekend but well let's be honest here I

7
00:00:15,929 --> 00:00:21,990
have a reason for wanting to do a stream

8
00:00:18,929 --> 00:00:24,028
today mostly it's so that I am focused

9
00:00:21,989 --> 00:00:26,250
and don't think about eating because I'm

10
00:00:24,028 --> 00:00:29,839
sure I'm gonna get very hungry I am

11
00:00:26,250 --> 00:00:33,030
scheduled to have a colonoscopy tomorrow

12
00:00:29,839 --> 00:00:34,530
which is a very polite medical way of

13
00:00:33,030 --> 00:00:36,870
saying that someone is going to stick a

14
00:00:34,530 --> 00:00:38,609
camera up your butt and one of the

15
00:00:36,869 --> 00:00:41,070
things that you have to do in that

16
00:00:38,609 --> 00:00:44,488
circumstance unfortunately is you have

17
00:00:41,070 --> 00:00:46,799
to be on a clear liquid diet and a clear

18
00:00:44,488 --> 00:00:49,199
liquid diet means essentially you can't

19
00:00:46,799 --> 00:00:50,849
have any food really of any kind you're

20
00:00:49,200 --> 00:00:54,000
talking about drinking ginger ale or

21
00:00:50,850 --> 00:00:55,530
eating jello so I just assume that I'm

22
00:00:54,000 --> 00:00:59,070
gonna get pretty hungry today I haven't

23
00:00:55,530 --> 00:01:01,710
had anything to eat today at all and so

24
00:00:59,070 --> 00:01:03,509
I figured that one good way to do this

25
00:01:01,710 --> 00:01:05,040
would be to stream because while I'm on

26
00:01:03,509 --> 00:01:08,310
stream I have to be paying attention to

27
00:01:05,040 --> 00:01:09,960
what I'm saying and doing and hopefully

28
00:01:08,310 --> 00:01:12,118
that will keep me from wanting to eat

29
00:01:09,959 --> 00:01:13,438
anything I'm not gonna be programming

30
00:01:12,118 --> 00:01:14,640
handmade hero because like I said we

31
00:01:13,438 --> 00:01:17,279
don't have a stream scheduled to this

32
00:01:14,640 --> 00:01:20,430
weekend but I've got plenty of things

33
00:01:17,280 --> 00:01:22,259
like in program that aren't handmade

34
00:01:20,430 --> 00:01:24,540
hero obviously we've got handmade ray

35
00:01:22,259 --> 00:01:26,129
and more importantly to today's thing as

36
00:01:24,540 --> 00:01:29,659
you noticed that I flashed it for code

37
00:01:26,129 --> 00:01:32,908
or custom party I had been waiting for

38
00:01:29,659 --> 00:01:35,520
quite some time actually to make any

39
00:01:32,909 --> 00:01:38,460
changes really to the custom layer that

40
00:01:35,519 --> 00:01:39,959
I wrote for for coder because I got most

41
00:01:38,459 --> 00:01:42,780
of what I needed when we first switch to

42
00:01:39,959 --> 00:01:44,938
for coder which you'll remember I

43
00:01:42,780 --> 00:01:48,239
switched from convene max to for coder

44
00:01:44,938 --> 00:01:52,228
and really there weren't that many

45
00:01:48,239 --> 00:01:54,179
things that I didn't have it implemented

46
00:01:52,228 --> 00:01:56,519
most of the features of Emacs to this

47
00:01:54,180 --> 00:01:58,799
day there's really only one feature of

48
00:01:56,519 --> 00:02:01,649
Emacs that it doesn't have which is

49
00:01:58,799 --> 00:02:04,259
keyboard macro recording everything else

50
00:02:01,649 --> 00:02:05,250
that I ever used in Emacs it has which

51
00:02:04,259 --> 00:02:06,689
is not to say that it has all the

52
00:02:05,250 --> 00:02:07,978
features of UMass because Emacs has so

53
00:02:06,688 --> 00:02:09,329
many random features I don't even know

54
00:02:07,978 --> 00:02:13,318
what they all are there's like packaged

55
00:02:09,330 --> 00:02:13,830
upon package my package so I couldn't

56
00:02:13,318 --> 00:02:15,359
tell you

57
00:02:13,830 --> 00:02:16,980
but in terms of the actual Emacs

58
00:02:15,360 --> 00:02:20,370
features I use for could or have them

59
00:02:16,979 --> 00:02:23,489
all except for two things at the time

60
00:02:20,370 --> 00:02:26,730
that I stopped one was the ability to

61
00:02:23,490 --> 00:02:28,439
jump anywhere into in the program using

62
00:02:26,729 --> 00:02:30,030
I menus so he could jump to functions

63
00:02:28,439 --> 00:02:32,189
you couldn't really jump to anything

64
00:02:30,030 --> 00:02:33,870
else it was just functions but I used

65
00:02:32,189 --> 00:02:35,759
that a lot and the other was keyboard

66
00:02:33,870 --> 00:02:37,500
macro recording so what I said was well

67
00:02:35,759 --> 00:02:40,889
I'll go back and revisit my custom layer

68
00:02:37,500 --> 00:02:43,740
once Allen adds either of those two

69
00:02:40,889 --> 00:02:45,329
features because then I really will need

70
00:02:43,740 --> 00:02:46,740
them and in the meantime the for code or

71
00:02:45,330 --> 00:02:48,570
add stuff I won't really go back and

72
00:02:46,740 --> 00:02:50,520
upgrade my custom layer much even if I

73
00:02:48,569 --> 00:02:54,030
should just because I'll save it in

74
00:02:50,520 --> 00:02:58,110
chunks and so Allen recently added

75
00:02:54,030 --> 00:02:59,430
really good jump menus and so it gave me

76
00:02:58,110 --> 00:03:02,280
the opportunity to say alright it's time

77
00:02:59,430 --> 00:03:03,719
to go revisit my custom layer and so

78
00:03:02,280 --> 00:03:04,949
I've done a bunch of things with it now

79
00:03:03,719 --> 00:03:06,959
quickly go over things that I've already

80
00:03:04,949 --> 00:03:09,569
done with it I budgeted about two weeks

81
00:03:06,959 --> 00:03:11,879
for it and I'm just about out of that

82
00:03:09,569 --> 00:03:14,430
time so I only have like it maybe a

83
00:03:11,879 --> 00:03:16,560
couple days left of edits to it and I

84
00:03:14,430 --> 00:03:18,330
got what I wanted out of it but now

85
00:03:16,560 --> 00:03:20,129
trying to add maybe some things that are

86
00:03:18,330 --> 00:03:22,110
just more experimental and see if I can

87
00:03:20,129 --> 00:03:24,000
improve editing that are just kind of

88
00:03:22,110 --> 00:03:25,590
like whimsical like maybe this will be

89
00:03:24,000 --> 00:03:28,590
good you know maybe it won't and I don't

90
00:03:25,590 --> 00:03:32,629
know so let me first kind of show you

91
00:03:28,590 --> 00:03:35,430
what the status of it is at the moment

92
00:03:32,629 --> 00:03:37,349
and you'll have to ignore a little bit

93
00:03:35,430 --> 00:03:39,510
of it that's the the part that's a work

94
00:03:37,349 --> 00:03:41,009
in progress that we'll talk about a

95
00:03:39,509 --> 00:03:44,759
little bit later so what I want you to

96
00:03:41,009 --> 00:03:47,579
do is ignore sort of the bottom part of

97
00:03:44,759 --> 00:03:51,209
the screen here that's got the numbers

98
00:03:47,580 --> 00:03:52,290
on it and well I guess I should start

99
00:03:51,209 --> 00:03:54,060
right away before I start clicking

100
00:03:52,289 --> 00:03:55,979
things so the first thing I added was

101
00:03:54,060 --> 00:03:58,769
this thing because again there's like

102
00:03:55,979 --> 00:04:00,509
pretty robust jump lists in there now so

103
00:03:58,769 --> 00:04:04,050
the first thing I did is I moved any

104
00:04:00,509 --> 00:04:07,169
commands that were very special purpose

105
00:04:04,050 --> 00:04:08,670
rarely executed commands into a command

106
00:04:07,169 --> 00:04:11,699
Lister and I'd wanted this for a while

107
00:04:08,669 --> 00:04:14,449
and this is great because now what I can

108
00:04:11,699 --> 00:04:18,089
do is anytime there's like a complex

109
00:04:14,449 --> 00:04:22,409
perhaps very important but just not very

110
00:04:18,089 --> 00:04:24,000
often used command what I can do is put

111
00:04:22,410 --> 00:04:26,370
it in here instead of wasting key

112
00:04:24,000 --> 00:04:27,720
binding on it before the only way I had

113
00:04:26,370 --> 00:04:29,519
to execute anything was

114
00:04:27,720 --> 00:04:31,830
to use a key binding and of course

115
00:04:29,519 --> 00:04:34,049
that's not very useful for things that

116
00:04:31,829 --> 00:04:36,930
are rarely used so for example a toggle

117
00:04:34,050 --> 00:04:38,579
full screen is something that I wouldn't

118
00:04:36,930 --> 00:04:40,620
want to keep ound - it's just not

119
00:04:38,579 --> 00:04:43,050
something that hardly ever happens but

120
00:04:40,620 --> 00:04:45,269
once in a while I want to do it like at

121
00:04:43,050 --> 00:04:48,120
startup if I forget to launch with the -

122
00:04:45,269 --> 00:04:50,310
F flag or if I want to like make it a

123
00:04:48,120 --> 00:04:51,689
window temporarily so that I can you

124
00:04:50,310 --> 00:04:53,129
know see my four-quarter stuff at the

125
00:04:51,689 --> 00:04:55,800
same time I can see other things

126
00:04:53,129 --> 00:04:57,829
I'm stuff like that so that's a one good

127
00:04:55,800 --> 00:05:01,350
example of thing that I've put in there

128
00:04:57,829 --> 00:05:03,029
is that command Lister and that's a

129
00:05:01,350 --> 00:05:04,439
great thing because now anytime we want

130
00:05:03,029 --> 00:05:06,269
a comics man we can just dump it in

131
00:05:04,439 --> 00:05:09,209
there and we don't have to worry about

132
00:05:06,269 --> 00:05:12,899
binding it to some key and and other

133
00:05:09,209 --> 00:05:14,339
stuff like that so once you've got the

134
00:05:12,899 --> 00:05:16,500
command Lister that's great for those

135
00:05:14,339 --> 00:05:19,229
sorts of things I then immediately also

136
00:05:16,500 --> 00:05:20,550
added the idea of project switching the

137
00:05:19,230 --> 00:05:21,930
reason for this is I don't really want

138
00:05:20,550 --> 00:05:23,730
to have to bother closing and reopening

139
00:05:21,930 --> 00:05:25,769
for a coder just to switch what I'm

140
00:05:23,730 --> 00:05:27,960
working on this is not that relevant

141
00:05:25,769 --> 00:05:30,930
perhaps for handmade hero where we tend

142
00:05:27,959 --> 00:05:35,009
to rather exclusively work on just

143
00:05:30,930 --> 00:05:36,269
handmade hero but for my daily work you

144
00:05:35,009 --> 00:05:38,939
know I've got a couple different things

145
00:05:36,269 --> 00:05:41,370
that are related to 1935 and our website

146
00:05:38,939 --> 00:05:43,680
and all these sorts of things and all of

147
00:05:41,370 --> 00:05:45,600
those things are separated into projects

148
00:05:43,680 --> 00:05:48,329
which I am only building one of them at

149
00:05:45,600 --> 00:05:50,550
a time I'm not building the website when

150
00:05:48,329 --> 00:05:53,519
I'm working on 1935 because they just

151
00:05:50,550 --> 00:05:56,610
have really no need to interrelate in

152
00:05:53,519 --> 00:05:58,859
that way and so what I did is I added a

153
00:05:56,610 --> 00:06:01,199
switch project function and what it does

154
00:05:58,860 --> 00:06:03,210
is it reads a project a master project

155
00:06:01,199 --> 00:06:05,639
file that just says where are all the

156
00:06:03,209 --> 00:06:07,889
projects that you want to be able to

157
00:06:05,639 --> 00:06:09,839
switch between and then it'll list them

158
00:06:07,889 --> 00:06:13,829
so you can see on this machine I only

159
00:06:09,839 --> 00:06:16,949
have five of them but you know on my

160
00:06:13,829 --> 00:06:19,740
machine maybe I've got more and so

161
00:06:16,949 --> 00:06:21,719
that's what that's for and it does

162
00:06:19,740 --> 00:06:24,120
exactly what you'd think so this is

163
00:06:21,720 --> 00:06:27,240
before I used to load those prj files

164
00:06:24,120 --> 00:06:29,160
myself now I don't do that anymore I

165
00:06:27,240 --> 00:06:31,800
just used the product switcher to switch

166
00:06:29,160 --> 00:06:33,810
between them anytime I want now another

167
00:06:31,800 --> 00:06:35,939
thing that I added to the project

168
00:06:33,810 --> 00:06:37,860
control stuff is that in the old days

169
00:06:35,939 --> 00:06:40,288
when I opened a project it just came up

170
00:06:37,860 --> 00:06:43,770
with a blank screen it was like okay now

171
00:06:40,288 --> 00:06:45,269
go pick up thing to edit and one of the

172
00:06:43,769 --> 00:06:47,758
things I've been doing out for coder is

173
00:06:45,269 --> 00:06:50,038
because I license the source code from

174
00:06:47,759 --> 00:06:51,809
Allen because basically I'm like look

175
00:06:50,038 --> 00:06:53,399
this is going to be my editor for the

176
00:06:51,809 --> 00:06:57,240
foreseeable future unless I write my own

177
00:06:53,399 --> 00:06:58,949
at some point so until then I need

178
00:06:57,240 --> 00:07:02,158
access to the source code because you

179
00:06:58,949 --> 00:07:03,838
know if Allen decides that he's just you

180
00:07:02,158 --> 00:07:06,718
know he's had enough any good decides

181
00:07:03,838 --> 00:07:08,968
he's gonna go down to Bermuda and live a

182
00:07:06,718 --> 00:07:12,180
life of leisure I need some way to keep

183
00:07:08,968 --> 00:07:15,808
upgrading this thing and I need it to

184
00:07:12,180 --> 00:07:17,309
always be working right so I like the

185
00:07:15,809 --> 00:07:18,719
source code which means I have access to

186
00:07:17,309 --> 00:07:20,159
the source code which means I can make

187
00:07:18,718 --> 00:07:21,689
modifications accor I've made a ton of

188
00:07:20,158 --> 00:07:23,188
modifications to the core all of which

189
00:07:21,689 --> 00:07:26,240
I'm submitting back to Allen hopefully

190
00:07:23,189 --> 00:07:28,860
he'll mainline most if not all of them

191
00:07:26,240 --> 00:07:30,869
but one of the things I added to the

192
00:07:28,860 --> 00:07:33,569
core was knowledge about the state of

193
00:07:30,869 --> 00:07:35,550
files on the drive in terms of what the

194
00:07:33,569 --> 00:07:38,789
like Windows reports is their last right

195
00:07:35,550 --> 00:07:41,038
time so one thing that I do now is if

196
00:07:38,788 --> 00:07:43,740
you open a project like let's say we go

197
00:07:41,038 --> 00:07:45,930
to open handmade hero on here what I

198
00:07:43,740 --> 00:07:48,629
will do is I'll load whatever the last

199
00:07:45,930 --> 00:07:51,240
file is that we touched right so

200
00:07:48,629 --> 00:07:54,059
wherever the last file is that that got

201
00:07:51,240 --> 00:07:57,180
modified we will load that file

202
00:07:54,059 --> 00:07:59,370
automatically so you know company made

203
00:07:57,180 --> 00:08:00,809
hero I guess we this wasn't the the

204
00:07:59,370 --> 00:08:02,370
highest right time now granted I haven't

205
00:08:00,809 --> 00:08:04,319
tested hardly any of the stuff so maybe

206
00:08:02,370 --> 00:08:06,149
it's buggy but maybe we were in open

207
00:08:04,319 --> 00:08:08,459
jail at the end I don't know so that

208
00:08:06,149 --> 00:08:10,949
just is a nice little minor feature that

209
00:08:08,459 --> 00:08:13,079
just says hey let's like get you started

210
00:08:10,949 --> 00:08:14,218
kind of more where you left off I didn't

211
00:08:13,079 --> 00:08:16,258
really want to do something where I

212
00:08:14,218 --> 00:08:17,759
saved the state of for coder

213
00:08:16,259 --> 00:08:19,588
I could have it's not that hard you

214
00:08:17,759 --> 00:08:22,019
could have saved the two buffers that

215
00:08:19,588 --> 00:08:23,968
you were looking at and your positions

216
00:08:22,019 --> 00:08:27,509
in them I don't necessarily want that

217
00:08:23,968 --> 00:08:29,158
because I don't it seemed like it was

218
00:08:27,509 --> 00:08:30,899
one of those things that adds a fair bit

219
00:08:29,158 --> 00:08:33,990
of complexity it's leaving these files

220
00:08:30,899 --> 00:08:36,750
on your drive now like state files and I

221
00:08:33,990 --> 00:08:38,219
don't really know that I care so I

222
00:08:36,750 --> 00:08:40,469
decided not to go there just as a

223
00:08:38,219 --> 00:08:42,000
judicious decision but I could totally

224
00:08:40,469 --> 00:08:43,889
see doing that at some point if someone

225
00:08:42,000 --> 00:08:45,509
really wanted that so I felt like this

226
00:08:43,889 --> 00:08:47,669
was a way that you could sort of get

227
00:08:45,509 --> 00:08:49,709
halfway to that feature without storing

228
00:08:47,669 --> 00:08:51,328
any state information on the drive which

229
00:08:49,708 --> 00:08:53,768
I kind of didn't I don't like I don't

230
00:08:51,328 --> 00:08:55,958
like it when things leave vc2

231
00:08:53,769 --> 00:09:00,249
trees and directories and all this crap

232
00:08:55,958 --> 00:09:04,899
on my drive like just deal with your

233
00:09:00,249 --> 00:09:07,600
stuff right minimize that I just don't

234
00:09:04,899 --> 00:09:10,749
like that I like the the drive to remain

235
00:09:07,600 --> 00:09:13,329
as pristine as possible it's just an OCD

236
00:09:10,749 --> 00:09:15,220
kind of cleanliness thing that that you

237
00:09:13,328 --> 00:09:17,019
know it's kind of the way that I I think

238
00:09:15,220 --> 00:09:18,399
about things now some other things that

239
00:09:17,019 --> 00:09:20,110
you'll notice about what's going on now

240
00:09:18,399 --> 00:09:22,028
is you can see that we now have very

241
00:09:20,110 --> 00:09:24,159
extensive syntax highlighting much more

242
00:09:22,028 --> 00:09:25,480
extensive that we had in the past so for

243
00:09:24,159 --> 00:09:29,139
example you can you'll note that

244
00:09:25,480 --> 00:09:31,298
functions are now any anything that's a

245
00:09:29,139 --> 00:09:33,369
function defined in the project not

246
00:09:31,298 --> 00:09:34,928
external so a windows function wouldn't

247
00:09:33,369 --> 00:09:35,559
get it and an open jail function

248
00:09:34,928 --> 00:09:37,988
wouldn't get it

249
00:09:35,558 --> 00:09:39,759
but anything just define in the project

250
00:09:37,989 --> 00:09:42,489
meaning I can jump to it meaning you

251
00:09:39,759 --> 00:09:46,178
know I've got the source that will be

252
00:09:42,489 --> 00:09:47,709
highlighted now and again that was

253
00:09:46,178 --> 00:09:50,860
something I modified for code or core

254
00:09:47,708 --> 00:09:54,548
for and similarly things like pound of

255
00:09:50,860 --> 00:09:56,678
fines they will show up in blue and same

256
00:09:54,548 --> 00:09:58,509
with with types any type that's defined

257
00:09:56,678 --> 00:10:00,458
in the project care is not a type that's

258
00:09:58,509 --> 00:10:03,490
a keyword so that's actually a separate

259
00:10:00,458 --> 00:10:06,068
thing but something like OpenGL info for

260
00:10:03,490 --> 00:10:08,798
example that is a type we define and

261
00:10:06,068 --> 00:10:11,259
that will get highlighted as well so I

262
00:10:08,798 --> 00:10:14,798
added all that into for coder as well

263
00:10:11,259 --> 00:10:16,389
and in in sort of that whole process of

264
00:10:14,798 --> 00:10:18,278
adding that sort of code awareness I've

265
00:10:16,389 --> 00:10:19,539
kind of taken for a color to the point

266
00:10:18,278 --> 00:10:21,068
where it's actually much more

267
00:10:19,539 --> 00:10:25,058
knowledgeable about the source code

268
00:10:21,068 --> 00:10:26,409
right now then say Emacs was Emacs you

269
00:10:25,058 --> 00:10:29,169
need to use this thing called etags

270
00:10:26,409 --> 00:10:31,868
they're a piece of crap it never seemed

271
00:10:29,169 --> 00:10:34,208
to work right and they were overbearing

272
00:10:31,869 --> 00:10:35,860
and slow and everything right for coder

273
00:10:34,208 --> 00:10:38,078
now we'll just automatically do the

274
00:10:35,860 --> 00:10:41,048
right thing for my codebase anyway all

275
00:10:38,078 --> 00:10:43,239
the time pretty much and so if for

276
00:10:41,048 --> 00:10:45,850
example anytime we want to be able to

277
00:10:43,240 --> 00:10:47,740
jump to anything in the project I just

278
00:10:45,850 --> 00:10:49,778
can so for example if I wanted to jump

279
00:10:47,740 --> 00:10:51,999
to that OpenGL info struct you can see

280
00:10:49,778 --> 00:10:54,818
that it'll take me right there because

281
00:10:51,999 --> 00:10:56,470
now it knows where it is and it knows

282
00:10:54,818 --> 00:10:59,139
how to get me there and the same is true

283
00:10:56,470 --> 00:11:01,569
for any function or any pound to fine I

284
00:10:59,139 --> 00:11:03,389
want to go to that GL color attachment

285
00:11:01,568 --> 00:11:05,828
right I can just I can go right to it

286
00:11:03,389 --> 00:11:07,360
and so this is really good for code

287
00:11:05,828 --> 00:11:08,588
awareness it's also pretty good

288
00:11:07,360 --> 00:11:10,930
if you're working outside of your own

289
00:11:08,589 --> 00:11:12,130
code base but even on handmade hero

290
00:11:10,929 --> 00:11:13,929
where I've written everything and it's

291
00:11:12,129 --> 00:11:15,338
not that big it's still really nice

292
00:11:13,929 --> 00:11:16,958
think it's the kid just I don't have to

293
00:11:15,339 --> 00:11:19,810
remember where is clear rectangle I can

294
00:11:16,958 --> 00:11:21,489
just go to it right and there it is

295
00:11:19,809 --> 00:11:23,768
furthermore it's a nice little handy way

296
00:11:21,490 --> 00:11:25,450
to do quick searching if I want to know

297
00:11:23,769 --> 00:11:27,970
what kind of functions might have the

298
00:11:25,450 --> 00:11:31,870
word rectangle in them I can just do

299
00:11:27,970 --> 00:11:34,149
this and actually get there it's pretty

300
00:11:31,870 --> 00:11:36,250
easy right seeing everything that has

301
00:11:34,149 --> 00:11:38,708
the word rectangle in it and so that's

302
00:11:36,250 --> 00:11:40,929
pretty nice as well in terms of what's

303
00:11:38,708 --> 00:11:42,578
going on here with software texture I'll

304
00:11:40,929 --> 00:11:44,588
be completely honest with you I have no

305
00:11:42,578 --> 00:11:46,599
idea why it thinks that's a pre proc it

306
00:11:44,589 --> 00:11:49,060
looks or maybe that's not what it thinks

307
00:11:46,600 --> 00:11:51,730
it is again none of this stuff has been

308
00:11:49,059 --> 00:11:57,009
tested so a lot of it could be sort of

309
00:11:51,730 --> 00:11:58,389
slightly weird I have no idea why

310
00:11:57,009 --> 00:12:00,730
software texture is getting special

311
00:11:58,389 --> 00:12:05,528
treatment there that's probably

312
00:12:00,730 --> 00:12:08,039
something we should figure out it might

313
00:12:05,528 --> 00:12:12,269
be because it thinks it's a forward

314
00:12:08,039 --> 00:12:14,919
declaration of some kind color-wise I

315
00:12:12,269 --> 00:12:20,320
may not be filtering out forward

316
00:12:14,919 --> 00:12:21,969
declarations that's something I should

317
00:12:20,320 --> 00:12:27,339
probably look at in fact let's just go

318
00:12:21,970 --> 00:12:29,379
look at it now so inside the renderer

319
00:12:27,339 --> 00:12:33,100
there's you know what I gotta actually

320
00:12:29,379 --> 00:12:35,198
open for coder so we're gonna have to

321
00:12:33,100 --> 00:12:37,750
use two versions of for coder here and

322
00:12:35,198 --> 00:12:39,729
this is going to be confusing one is the

323
00:12:37,750 --> 00:12:41,259
one that's in progress that we're

324
00:12:39,730 --> 00:12:43,329
working on and the other is like a

325
00:12:41,259 --> 00:12:44,889
stable version so I'm loading a stable

326
00:12:43,328 --> 00:12:47,019
version here that we're not going to

327
00:12:44,889 --> 00:12:50,350
touch because if we break it we won't be

328
00:12:47,019 --> 00:12:52,389
able to edit right and so I go to for

329
00:12:50,350 --> 00:12:55,449
coder here and now I've got four code or

330
00:12:52,389 --> 00:12:56,919
open I can build for coder like so right

331
00:12:55,448 --> 00:12:58,689
and you can notice I have many other

332
00:12:56,919 --> 00:13:00,429
things I've done it's added a like

333
00:12:58,690 --> 00:13:04,329
dedicated compile window here that we

334
00:13:00,429 --> 00:13:07,208
can control um so when I rebuild for

335
00:13:04,328 --> 00:13:08,828
coder it's rebuilding the one that I

336
00:13:07,208 --> 00:13:12,129
will launch from here so then I can

337
00:13:08,828 --> 00:13:14,919
relaunch this one and I can say okay

338
00:13:12,129 --> 00:13:17,818
let's go back and look at that situation

339
00:13:14,919 --> 00:13:20,719
in handmade hero where software what

340
00:13:17,818 --> 00:13:22,309
texture was yeah you can see

341
00:13:20,720 --> 00:13:23,750
it's just very strange it's like it's

342
00:13:22,309 --> 00:13:26,568
got a highlight there and if you look

343
00:13:23,750 --> 00:13:28,639
when you do it here it doesn't have that

344
00:13:26,568 --> 00:13:30,169
so it knows it's a type but for some

345
00:13:28,639 --> 00:13:32,389
reason it's getting an unusual color

346
00:13:30,169 --> 00:13:33,588
there and so I think that's just a bug

347
00:13:32,389 --> 00:13:40,100
and let's go track it down

348
00:13:33,589 --> 00:13:41,660
so inside for coder KC render this is

349
00:13:40,100 --> 00:13:44,600
where we're doing all of the syntax

350
00:13:41,659 --> 00:13:48,230
highlighting and the way that I do it is

351
00:13:44,600 --> 00:13:50,600
when I'm actually looking at a buffer

352
00:13:48,230 --> 00:13:53,539
that's ready to be displayed at that

353
00:13:50,600 --> 00:13:56,600
time I look at just what's inside the

354
00:13:53,539 --> 00:13:59,088
visible region and I color anything that

355
00:13:56,600 --> 00:14:00,949
matches a hash table lookup that's been

356
00:13:59,089 --> 00:14:05,560
built from all of the types and stuff in

357
00:14:00,948 --> 00:14:09,078
the system and so if we look at that

358
00:14:05,559 --> 00:14:11,359
function which I believe is here no

359
00:14:09,078 --> 00:14:16,278
that's rendering closure names here it

360
00:14:11,360 --> 00:14:18,379
is mark matches so in here what we do is

361
00:14:16,278 --> 00:14:20,179
you know we've got tags which are things

362
00:14:18,379 --> 00:14:21,649
that are inserted into the buffer for me

363
00:14:20,179 --> 00:14:24,708
for labeling things we'll talk about

364
00:14:21,649 --> 00:14:28,639
those later but in here what I've got is

365
00:14:24,708 --> 00:14:30,799
a thing that iterates over tokens and

366
00:14:28,639 --> 00:14:33,139
looks to see whether or not they match

367
00:14:30,799 --> 00:14:35,149
anything in the the index of types and

368
00:14:33,139 --> 00:14:37,850
so on right and so what you can see here

369
00:14:35,149 --> 00:14:39,860
is I get element by name and I pulled it

370
00:14:37,850 --> 00:14:42,769
pull that out and then I asked for

371
00:14:39,860 --> 00:14:45,259
whatever the color should be and what

372
00:14:42,769 --> 00:14:48,769
you can see here is exactly sort of what

373
00:14:45,259 --> 00:14:50,028
I suggested was a problem and let me

374
00:14:48,769 --> 00:14:51,919
explain to you what the problem is so I

375
00:14:50,028 --> 00:14:55,188
think I've successfully guessed what the

376
00:14:51,919 --> 00:14:57,528
bug actually is if you look at what

377
00:14:55,188 --> 00:14:59,629
happens with the way I build the index I

378
00:14:57,528 --> 00:15:02,088
create these things called index contact

379
00:14:59,629 --> 00:15:03,438
elements and they're just things that I

380
00:15:02,089 --> 00:15:05,269
want to be indexed

381
00:15:03,438 --> 00:15:07,278
each one of them has a color that's

382
00:15:05,269 --> 00:15:09,259
associated with it those colors are

383
00:15:07,278 --> 00:15:10,759
based on the type but I intentionally

384
00:15:09,259 --> 00:15:12,350
made it so that each one has their own

385
00:15:10,759 --> 00:15:13,970
color in case you want to do things

386
00:15:12,350 --> 00:15:16,269
later where you specifically highlight

387
00:15:13,970 --> 00:15:19,879
particular ones or anything like that

388
00:15:16,269 --> 00:15:22,399
but what you'll notice is this can have

389
00:15:19,879 --> 00:15:23,120
multiple things of the same name this is

390
00:15:22,399 --> 00:15:27,769
intentional

391
00:15:23,120 --> 00:15:30,379
if for example I have the you can see

392
00:15:27,769 --> 00:15:32,808
right here the pound defying log F

393
00:15:30,379 --> 00:15:33,778
appears multiple times in for coders

394
00:15:32,808 --> 00:15:36,899
code

395
00:15:33,778 --> 00:15:39,899
I want to know that I want to know all

396
00:15:36,899 --> 00:15:41,429
of those places where like I want to

397
00:15:39,899 --> 00:15:44,250
know that's defined multiple times I

398
00:15:41,429 --> 00:15:47,039
don't want them collapse down into one

399
00:15:44,250 --> 00:15:50,250
record what that means is that if I see

400
00:15:47,039 --> 00:15:52,799
something twice once as one type once as

401
00:15:50,250 --> 00:15:55,679
another I will have two entries each

402
00:15:52,799 --> 00:15:58,019
with different types now the reason why

403
00:15:55,679 --> 00:16:00,750
this is important is because some of

404
00:15:58,019 --> 00:16:02,879
those things may and I'm highlighting

405
00:16:00,750 --> 00:16:04,980
this one here be something that

406
00:16:02,879 --> 00:16:06,899
shouldn't really have much effect on the

407
00:16:04,980 --> 00:16:11,009
color unless it's the only time it

408
00:16:06,899 --> 00:16:14,278
appears so in this case for a forward

409
00:16:11,009 --> 00:16:16,350
declaration I don't want that to

410
00:16:14,278 --> 00:16:18,000
override the color if the thing was a

411
00:16:16,350 --> 00:16:22,019
function or a type defined somewhere

412
00:16:18,000 --> 00:16:24,620
else right so what I want to do here is

413
00:16:22,019 --> 00:16:29,339
when I'm getting the element by name I

414
00:16:24,620 --> 00:16:31,409
want to search to make sure that as I go

415
00:16:29,339 --> 00:16:33,300
through those elements I'm going to pick

416
00:16:31,409 --> 00:16:34,528
the one that's not a forward declaration

417
00:16:33,299 --> 00:16:37,889
if I can avoid it

418
00:16:34,528 --> 00:16:39,509
now that's pretty easy to do I just need

419
00:16:37,889 --> 00:16:42,149
some way of course sort of iterating

420
00:16:39,509 --> 00:16:44,789
over them and so if we look at get

421
00:16:42,149 --> 00:16:47,789
element by name you can see and here the

422
00:16:44,789 --> 00:16:49,500
way that that works is it just loops

423
00:16:47,789 --> 00:16:52,110
over the elements till it finds ones

424
00:16:49,500 --> 00:16:54,990
that's the same right and so I can do

425
00:16:52,110 --> 00:16:58,649
the same thing on the outside here I can

426
00:16:54,990 --> 00:17:02,459
just say look give me all of the that's

427
00:16:58,649 --> 00:17:05,130
not correct at all by the way give me

428
00:17:02,458 --> 00:17:09,389
all of the ones that exist in here so

429
00:17:05,130 --> 00:17:12,480
let's go through each element that I

430
00:17:09,390 --> 00:17:16,770
find and what I'm going to do is I'm

431
00:17:12,480 --> 00:17:19,439
going to say if this one is the only one

432
00:17:16,769 --> 00:17:24,808
then you can use it but if it's a

433
00:17:19,439 --> 00:17:26,880
forward declaration and you've already

434
00:17:24,808 --> 00:17:29,418
got the color from some other type don't

435
00:17:26,880 --> 00:17:29,419
override it

436
00:17:32,039 --> 00:17:37,980
alright so the way I might do this in

437
00:17:36,930 --> 00:17:39,480
fact you know what there's a slightly

438
00:17:37,980 --> 00:17:42,690
easier way to do this maybe I'll do it

439
00:17:39,480 --> 00:17:44,309
this way instead maybe what I'll do is

440
00:17:42,690 --> 00:17:47,880
I'll preserve sort of the way it was

441
00:17:44,309 --> 00:17:53,069
written before where it was looking like

442
00:17:47,880 --> 00:17:55,860
this and what I'll do here is I'll say

443
00:17:53,069 --> 00:17:59,149
look let me get the element if the

444
00:17:55,859 --> 00:18:05,309
element is valid and the element type

445
00:17:59,150 --> 00:18:09,769
happens to be a forward declaration if

446
00:18:05,309 --> 00:18:13,379
that's true then what I want to do is

447
00:18:09,769 --> 00:18:17,119
look to see if there's another one right

448
00:18:13,380 --> 00:18:20,460
look to see if I can go one forward so

449
00:18:17,119 --> 00:18:27,479
you know index content element next

450
00:18:20,460 --> 00:18:30,539
equals that if they're equivalent then L

451
00:18:27,480 --> 00:18:32,940
M equals next right and what I could do

452
00:18:30,539 --> 00:18:36,000
here is actually do this as a while loop

453
00:18:32,940 --> 00:18:38,190
so while I have an element and the type

454
00:18:36,000 --> 00:18:43,319
is a forward declaration I can go

455
00:18:38,190 --> 00:18:44,730
forwards right I can I can advance so

456
00:18:43,319 --> 00:18:47,159
I'm gonna get the next one in the buffer

457
00:18:44,730 --> 00:18:50,700
I'm gonna see whether or not it's the

458
00:18:47,160 --> 00:18:53,870
same and you know like it I'm gonna

459
00:18:50,700 --> 00:18:56,100
double check to see whether or not it

460
00:18:53,869 --> 00:18:58,739
still matches the name that I was

461
00:18:56,099 --> 00:19:05,669
looking for and if it does then I'll

462
00:18:58,740 --> 00:19:09,000
move forward right so in the event that

463
00:19:05,670 --> 00:19:11,220
it does not match or I don't get one so

464
00:19:09,000 --> 00:19:13,650
I should also say you know let's let's

465
00:19:11,220 --> 00:19:15,809
say it's valid right in fact I could

466
00:19:13,650 --> 00:19:19,259
even do that a little earlier I can say

467
00:19:15,809 --> 00:19:23,009
if there's a valid element and it's got

468
00:19:19,259 --> 00:19:24,299
a valid next pointer and the type of the

469
00:19:23,009 --> 00:19:28,099
element that I'm on is for decoration

470
00:19:24,299 --> 00:19:31,190
then see if you can move

471
00:19:28,099 --> 00:19:31,189
[Music]

472
00:19:31,660 --> 00:19:40,120
- oh I I let it complete - that see if

473
00:19:37,210 --> 00:19:41,980
you can move forward if you can then do

474
00:19:40,119 --> 00:19:44,769
so and that way we won't have that

475
00:19:41,980 --> 00:19:46,150
situation of forward declarations

476
00:19:44,769 --> 00:19:48,309
overriding the color

477
00:19:46,150 --> 00:19:50,920
so things that are forward declared will

478
00:19:48,309 --> 00:19:52,450
just show up as for as specifically a

479
00:19:50,920 --> 00:19:55,450
different color so you know they're not

480
00:19:52,450 --> 00:19:57,250
defined in the project but things that

481
00:19:55,450 --> 00:19:59,319
do have a type that just happen to get

482
00:19:57,250 --> 00:20:01,809
forward declared but we're defined

483
00:19:59,319 --> 00:20:05,649
somewhere in the project they will show

484
00:20:01,809 --> 00:20:07,629
up differently so okay they will show up

485
00:20:05,650 --> 00:20:09,580
with their correct like color by type or

486
00:20:07,630 --> 00:20:11,020
whatever right so now let's switch to

487
00:20:09,579 --> 00:20:13,990
handmade hero since we happen to have

488
00:20:11,019 --> 00:20:15,639
that as a nice case here let's look at

489
00:20:13,990 --> 00:20:17,680
the surface texture or whatever it's

490
00:20:15,640 --> 00:20:22,030
called what was it called texture

491
00:20:17,680 --> 00:20:24,940
something or other software texture and

492
00:20:22,029 --> 00:20:30,399
there we go so we fixed that that bug

493
00:20:24,940 --> 00:20:33,880
there right okay so that's good that's a

494
00:20:30,400 --> 00:20:42,840
good fix let's talk about some of other

495
00:20:33,880 --> 00:20:46,150
things we did or I did rather so I added

496
00:20:42,839 --> 00:20:49,000
to do important note and that sort of

497
00:20:46,150 --> 00:20:51,700
stuff highlighting Allen had added a

498
00:20:49,000 --> 00:20:53,559
sort of makeshift little experimental

499
00:20:51,700 --> 00:20:56,350
version that that would just highlight

500
00:20:53,559 --> 00:20:58,329
the word to do anywhere I wanted to only

501
00:20:56,349 --> 00:21:00,819
in comments and I also wanted to be able

502
00:20:58,329 --> 00:21:04,539
to have many of those so to do note

503
00:21:00,819 --> 00:21:07,240
study important and I don't know if I

504
00:21:04,539 --> 00:21:08,829
have any of those in this code I don't

505
00:21:07,240 --> 00:21:11,049
think I do but I have lots of notes for

506
00:21:08,829 --> 00:21:12,159
example oh you know what I could do it

507
00:21:11,049 --> 00:21:13,839
searched everywhere alright so we'll

508
00:21:12,160 --> 00:21:15,640
talk about that so inside comments I

509
00:21:13,839 --> 00:21:18,459
highlight those now and I also keep

510
00:21:15,640 --> 00:21:20,320
track of them now when you do jump I

511
00:21:18,460 --> 00:21:21,789
don't normally expose those to the jump

512
00:21:20,319 --> 00:21:27,819
Lister because I only use types

513
00:21:21,789 --> 00:21:31,000
functions pound defines and and the like

514
00:21:27,819 --> 00:21:32,679
right for declarations so what I wanted

515
00:21:31,000 --> 00:21:36,490
to do is have another way I could jump

516
00:21:32,680 --> 00:21:37,720
and so I have another jumping type oh

517
00:21:36,490 --> 00:21:39,130
and I have two obviously this is an

518
00:21:37,720 --> 00:21:43,539
experimental one I haven't actually

519
00:21:39,130 --> 00:21:45,070
pushed this to main yeah so if I did I

520
00:21:43,539 --> 00:21:51,339
accidentally load hand

521
00:21:45,069 --> 00:21:53,859
here oh and I closed it right so if I go

522
00:21:51,339 --> 00:21:57,638
ahead and run it again here and I switch

523
00:21:53,859 --> 00:21:58,928
to like handmade hero one of the things

524
00:21:57,638 --> 00:22:00,369
you can see it's by jump you know

525
00:21:58,929 --> 00:22:03,278
there's no notes or to do is or anything

526
00:22:00,369 --> 00:22:06,038
in here but if I want a listing of those

527
00:22:03,278 --> 00:22:07,750
I can actually use this other jump

528
00:22:06,038 --> 00:22:09,819
blister that I made which allows you to

529
00:22:07,750 --> 00:22:12,880
pick exactly the type that you want to

530
00:22:09,819 --> 00:22:14,138
jump to first and it will only listing

531
00:22:12,880 --> 00:22:15,309
as those type so now you can use the

532
00:22:14,138 --> 00:22:16,869
ones that appear in the regular jump

533
00:22:15,308 --> 00:22:18,638
list as well so I can pick on function

534
00:22:16,869 --> 00:22:21,008
and now I just see a list of the

535
00:22:18,638 --> 00:22:23,589
functions that are defined inside the

536
00:22:21,009 --> 00:22:25,269
program right I can also ask for for

537
00:22:23,589 --> 00:22:26,980
declarations and see just the things

538
00:22:25,269 --> 00:22:29,319
that are forward declared which could be

539
00:22:26,980 --> 00:22:31,120
any of the structs some of those trucks

540
00:22:29,319 --> 00:22:32,918
may also be defined some of them may be

541
00:22:31,119 --> 00:22:34,329
only forward declared but it's nice as I

542
00:22:32,919 --> 00:22:35,919
can kind of see everywhere the song is

543
00:22:34,329 --> 00:22:39,278
forward cleared and I can jump right to

544
00:22:35,919 --> 00:22:41,288
that now similarly I can look at all my

545
00:22:39,278 --> 00:22:43,240
two dudes right here's all my two dues

546
00:22:41,288 --> 00:22:45,908
in a nice big list I can look at any of

547
00:22:43,240 --> 00:22:48,069
them right and I can look at anything

548
00:22:45,909 --> 00:22:49,750
notes that I've made in the code right

549
00:22:48,069 --> 00:22:51,579
all of that stuff is now keen next like

550
00:22:49,750 --> 00:22:54,579
I said way better than Emacs ever did

551
00:22:51,579 --> 00:22:59,230
Emacs was lousy at letting you navigate

552
00:22:54,579 --> 00:23:02,859
your source tree we're not perhaps as

553
00:22:59,230 --> 00:23:04,509
good as a full compile so some of the

554
00:23:02,859 --> 00:23:07,898
things that like intellisense can do

555
00:23:04,509 --> 00:23:10,210
when it works which is never but let's

556
00:23:07,898 --> 00:23:12,250
say it actually worked or if you just

557
00:23:10,210 --> 00:23:13,929
were sane and wrote a thing that loaded

558
00:23:12,250 --> 00:23:17,679
a PDB and marked up your text or

559
00:23:13,929 --> 00:23:18,940
whatever um there's some things we don't

560
00:23:17,679 --> 00:23:21,399
do I don't parse

561
00:23:18,940 --> 00:23:23,950
structs like their contents so

562
00:23:21,398 --> 00:23:26,079
autocomplete doesn't know like oh this

563
00:23:23,950 --> 00:23:27,850
and I don't parse variables so it

564
00:23:26,079 --> 00:23:29,558
doesn't look and go oh this variables of

565
00:23:27,849 --> 00:23:31,000
this type so you probably only want to

566
00:23:29,558 --> 00:23:33,220
autocomplete like the members that

567
00:23:31,000 --> 00:23:37,329
should be in there that being nice to

568
00:23:33,220 --> 00:23:39,519
have but I don't actually know that it's

569
00:23:37,329 --> 00:23:42,119
worth the effort so I didn't bother

570
00:23:39,519 --> 00:23:42,120
right

571
00:23:46,740 --> 00:23:51,180
this is a premium ginger ale

572
00:23:51,960 --> 00:23:58,500
it contains carbonated spring water cane

573
00:23:55,390 --> 00:24:07,210
sugar citric acid natural gingers

574
00:23:58,500 --> 00:24:10,059
natural flavors and natural caramel I'll

575
00:24:07,210 --> 00:24:13,569
be honest this caramel use sugar that's

576
00:24:10,059 --> 00:24:14,859
been heated in a pot I'm not sure how

577
00:24:13,569 --> 00:24:16,539
you make natural caramel because it

578
00:24:14,859 --> 00:24:18,309
seems like it has to be man-made but

579
00:24:16,539 --> 00:24:20,559
maybe they found like a hot spring

580
00:24:18,309 --> 00:24:22,539
somewhere with sugar that drips off of a

581
00:24:20,559 --> 00:24:25,539
tree and then they pan it out of there

582
00:24:22,539 --> 00:24:30,039
which explains the high price of this

583
00:24:25,539 --> 00:24:31,779
premium ginger ale all right so what I

584
00:24:30,039 --> 00:24:33,129
want to do now is talk about some of the

585
00:24:31,779 --> 00:24:35,799
other things in there for comment

586
00:24:33,130 --> 00:24:39,250
parsing I added a math parser for

587
00:24:35,799 --> 00:24:41,619
comment parsing and those of you who saw

588
00:24:39,250 --> 00:24:45,490
the stream on mustache I showed a little

589
00:24:41,619 --> 00:24:47,889
bit of this what happens in there is if

590
00:24:45,490 --> 00:24:52,630
I was to open let me say a temp file

591
00:24:47,890 --> 00:24:55,810
here so I do temp test dot CPP and by

592
00:24:52,630 --> 00:25:00,160
the way I don't know how to make this

593
00:24:55,809 --> 00:25:03,879
stop happening if I do a test dot CPP

594
00:25:00,160 --> 00:25:06,790
and I hit return it I don't know how to

595
00:25:03,880 --> 00:25:09,850
say in for coder only this file and Alan

596
00:25:06,789 --> 00:25:12,869
is probably not watching but I would

597
00:25:09,849 --> 00:25:18,909
like something that actually had like a

598
00:25:12,869 --> 00:25:21,279
give me a specific like fat like this

599
00:25:18,910 --> 00:25:23,710
filing only and I should probably add

600
00:25:21,279 --> 00:25:26,109
that I don't have that anyway one of the

601
00:25:23,710 --> 00:25:27,940
things I do now is I pass I parse

602
00:25:26,109 --> 00:25:29,319
mathematical expressions inside comments

603
00:25:27,940 --> 00:25:30,549
and just give you the results because I

604
00:25:29,319 --> 00:25:33,339
was tired of switching over to this

605
00:25:30,549 --> 00:25:35,859
stump thing I know what this thing speed

606
00:25:33,339 --> 00:25:37,299
crunch I can get rid of that now and I

607
00:25:35,859 --> 00:25:39,219
didn't I don't really need it I don't

608
00:25:37,299 --> 00:25:41,259
want it I just want to be able to put

609
00:25:39,220 --> 00:25:42,700
math in the comments so I do now and you

610
00:25:41,259 --> 00:25:46,119
can see how it works

611
00:25:42,700 --> 00:25:48,910
you do like 1024 x 1024 and it produces

612
00:25:46,119 --> 00:25:52,389
the results here for you it also comma

613
00:25:48,910 --> 00:25:57,820
paginates it okay I don't think you guys

614
00:25:52,390 --> 00:26:00,220
have ever met Molly hello Molly hey do

615
00:25:57,819 --> 00:26:03,558
you want to say hi

616
00:26:00,220 --> 00:26:05,808
do you wanna say hi you want to see

617
00:26:03,558 --> 00:26:07,039
outside see him I would let you I don't

618
00:26:05,808 --> 00:26:09,589
know if that's gonna mess up our light

619
00:26:07,039 --> 00:26:11,450
let's see if we can do that how bad is

620
00:26:09,589 --> 00:26:13,970
that if I let Molly have a little bit of

621
00:26:11,450 --> 00:26:17,950
sense of chic and she doesn't like to be

622
00:26:13,970 --> 00:26:26,870
oh there you go how you doing kid

623
00:26:17,950 --> 00:26:28,490
you doing okay yeah okay she's just

624
00:26:26,869 --> 00:26:33,409
gonna look out the window she's she's a

625
00:26:28,490 --> 00:26:36,980
good kitten um anyway so here's the

626
00:26:33,410 --> 00:26:38,779
situation it runs a really crappy parser

627
00:26:36,980 --> 00:26:42,349
and it just prints the output it

628
00:26:38,779 --> 00:26:43,789
paginates with commas I actually left

629
00:26:42,349 --> 00:26:46,069
some code in there that you can choose

630
00:26:43,789 --> 00:26:48,470
whether you want commas or periods and

631
00:26:46,069 --> 00:26:50,389
stuff for a case Allan wants to merge it

632
00:26:48,470 --> 00:26:52,490
into the core and switch on

633
00:26:50,390 --> 00:26:56,210
internationalization I don't know if he

634
00:26:52,490 --> 00:26:59,210
has that in there or not but it's set up

635
00:26:56,210 --> 00:27:01,340
for that and so anyway you can do math

636
00:26:59,210 --> 00:27:05,179
and see pretty quickly what's going on

637
00:27:01,339 --> 00:27:07,279
which is pretty nice it also is smart

638
00:27:05,179 --> 00:27:09,950
enough to go hey look if it's a whole

639
00:27:07,279 --> 00:27:12,470
number don't you know print out the

640
00:27:09,950 --> 00:27:14,450
whole crazy decimal but if it's not a

641
00:27:12,470 --> 00:27:16,160
whole number go ahead and do it so

642
00:27:14,450 --> 00:27:20,259
that's kind of nice to just just a nice

643
00:27:16,160 --> 00:27:22,190
feature to have in there um so really I

644
00:27:20,259 --> 00:27:24,349
like there's a bunch of other little

645
00:27:22,190 --> 00:27:29,029
things that I did but I don't think

646
00:27:24,349 --> 00:27:31,339
they're super relevant now to go over

647
00:27:29,029 --> 00:27:33,589
obviously I tried some things with like

648
00:27:31,339 --> 00:27:35,149
marking regions you can see like I I

649
00:27:33,589 --> 00:27:37,159
have it so that it marks the region now

650
00:27:35,150 --> 00:27:38,750
that you're on line stuff like that and

651
00:27:37,160 --> 00:27:41,120
you get also it'll also highlight things

652
00:27:38,750 --> 00:27:45,549
like the current token and and crap like

653
00:27:41,119 --> 00:27:47,719
that but again that's not super relevant

654
00:27:45,549 --> 00:27:49,750
we don't really have to talk much about

655
00:27:47,720 --> 00:27:52,160
that stuff it's it's pretty boring stuff

656
00:27:49,750 --> 00:27:53,630
so I think I've covered most of the mods

657
00:27:52,160 --> 00:27:55,610
there's probably some things that I'm

658
00:27:53,630 --> 00:27:58,150
forgetting in there but that's basically

659
00:27:55,609 --> 00:27:58,149
how it goes

660
00:28:00,750 --> 00:28:07,559
and so what I want to do now is focus on

661
00:28:03,950 --> 00:28:08,700
some new stuff that I'd like to add and

662
00:28:07,559 --> 00:28:10,169
there's some features that I still

663
00:28:08,700 --> 00:28:12,180
there's some polish that still needs to

664
00:28:10,170 --> 00:28:15,240
be done and so that's obviously

665
00:28:12,180 --> 00:28:17,490
something that I'll look at some other

666
00:28:15,240 --> 00:28:19,819
time but at least for today what I'd

667
00:28:17,490 --> 00:28:21,620
like to do is is focus primarily on

668
00:28:19,819 --> 00:28:24,720
implementing some new features

669
00:28:21,619 --> 00:28:28,319
experimental features so let's talk

670
00:28:24,720 --> 00:28:30,150
about how that is gonna go so at the

671
00:28:28,319 --> 00:28:32,909
moment you can kind of see what I'm

672
00:28:30,150 --> 00:28:37,290
thinking about with respect to that down

673
00:28:32,910 --> 00:28:41,430
here and what you can see is I've made

674
00:28:37,289 --> 00:28:44,339
these sort of numbered like bins right

675
00:28:41,430 --> 00:28:47,600
I call this temporarily because it

676
00:28:44,339 --> 00:28:53,549
needed a name I call this the F bar

677
00:28:47,599 --> 00:28:58,109
which sounds vaguely sort of vaguely

678
00:28:53,549 --> 00:29:00,169
expletive but it's not just because it

679
00:28:58,109 --> 00:29:02,789
corresponds to the function keys and

680
00:29:00,170 --> 00:29:05,580
you'll notice that this is the place

681
00:29:02,789 --> 00:29:07,680
where the build is happening so if I

682
00:29:05,579 --> 00:29:09,899
were to switch projects here and

683
00:29:07,680 --> 00:29:11,730
remember this is our actual editor the

684
00:29:09,900 --> 00:29:14,519
one that we're using to edit the for a

685
00:29:11,730 --> 00:29:18,779
coder code this is the running for coder

686
00:29:14,519 --> 00:29:22,259
test which is not but if I were to load

687
00:29:18,779 --> 00:29:24,509
something up like handmade ray and do a

688
00:29:22,259 --> 00:29:27,960
builds the bids build still happens down

689
00:29:24,509 --> 00:29:30,240
in here and at the moment I have not

690
00:29:27,960 --> 00:29:33,529
done anything to implement harmonious

691
00:29:30,240 --> 00:29:37,559
coexistence of these little buttons here

692
00:29:33,529 --> 00:29:38,819
with the build itself and so that in

693
00:29:37,559 --> 00:29:40,109
addition to lots of other things are

694
00:29:38,819 --> 00:29:44,639
what we're gonna start working on today

695
00:29:40,109 --> 00:29:49,919
now what I did in prep was those things

696
00:29:44,640 --> 00:29:52,770
correspond to the two things right so

697
00:29:49,920 --> 00:29:54,259
first of all at any time so meaning no

698
00:29:52,769 --> 00:29:57,809
matter what you're doing in the editor

699
00:29:54,259 --> 00:30:01,319
the F keys are bound to what I call

700
00:29:57,809 --> 00:30:03,629
executing an F bin so an F bar is a

701
00:30:01,319 --> 00:30:06,000
collection of F bins F bins are the

702
00:30:03,630 --> 00:30:08,040
things you see there and if I hit an F

703
00:30:06,000 --> 00:30:09,779
key it will execute one of these now

704
00:30:08,039 --> 00:30:12,359
that does absolutely nothing right now

705
00:30:09,779 --> 00:30:14,190
and of course f12 is the hotkey for

706
00:30:12,359 --> 00:30:17,428
break into the bugger

707
00:30:14,190 --> 00:30:18,929
so you know hopefully someday we won't

708
00:30:17,429 --> 00:30:20,399
have visual studio around or I can

709
00:30:18,929 --> 00:30:24,269
unbind that key because I never want

710
00:30:20,398 --> 00:30:27,508
that to be the case I'd rather have f12

711
00:30:24,269 --> 00:30:29,249
available for use but ignoring that so

712
00:30:27,509 --> 00:30:31,739
hitting one of those will execute that

713
00:30:29,249 --> 00:30:32,850
bin now all I did at the moment is made

714
00:30:31,739 --> 00:30:35,759
it so that it was clear that that's

715
00:30:32,849 --> 00:30:38,548
happening right as you can see and for

716
00:30:35,759 --> 00:30:41,970
those of you who don't know I my for

717
00:30:38,548 --> 00:30:43,918
coder setup is modal and so the reason

718
00:30:41,970 --> 00:30:45,690
that's Moodle is because one of the

719
00:30:43,919 --> 00:30:48,119
things that I felt was a problem for

720
00:30:45,690 --> 00:30:53,009
repetitive stress injury carpal tunnel

721
00:30:48,118 --> 00:30:55,918
syndrome etc etc is the Emacs way of

722
00:30:53,009 --> 00:30:58,769
having like tons of crazy button mashing

723
00:30:55,919 --> 00:31:01,649
like ctrl alt this or alt bat or control

724
00:30:58,769 --> 00:31:05,759
this or blah blah blah holding down keys

725
00:31:01,648 --> 00:31:06,959
is just not great and especially if you

726
00:31:05,759 --> 00:31:12,659
tweak your hand into a particular

727
00:31:06,960 --> 00:31:14,340
position you'd have to ask Emily what

728
00:31:12,659 --> 00:31:15,809
actual repetitive kind of strain

729
00:31:14,339 --> 00:31:17,339
injuries you're gonna get from that sort

730
00:31:15,808 --> 00:31:19,319
of thing I have no idea I don't know if

731
00:31:17,339 --> 00:31:21,538
carpal tunnels likely it's probably not

732
00:31:19,319 --> 00:31:24,720
because you're not pressing that hard on

733
00:31:21,538 --> 00:31:28,138
the keys but just tendonitis and general

734
00:31:24,720 --> 00:31:29,579
discomfort the same kind of stuff you

735
00:31:28,138 --> 00:31:32,278
get from using a video game control or

736
00:31:29,579 --> 00:31:35,249
too long all that sort of stuff it's

737
00:31:32,278 --> 00:31:38,489
just not great and so what I did when I

738
00:31:35,249 --> 00:31:40,048
switched to for coder and I had done

739
00:31:38,489 --> 00:31:42,629
this on Emacs as well I was like let me

740
00:31:40,048 --> 00:31:45,599
try to switch to something modal which

741
00:31:42,628 --> 00:31:47,368
means like you know VI is an example of

742
00:31:45,599 --> 00:31:49,079
a very modal editor right it's like

743
00:31:47,368 --> 00:31:50,579
you're either in the mode where you're

744
00:31:49,079 --> 00:31:53,460
entering text or in the mode where

745
00:31:50,579 --> 00:31:57,058
you're operating on stuff in between

746
00:31:53,460 --> 00:32:00,329
those two modes it controls whether or

747
00:31:57,058 --> 00:32:02,730
not an ordinary key press like the f key

748
00:32:00,329 --> 00:32:05,368
or the e key or you know D key whatever

749
00:32:02,730 --> 00:32:07,739
just a regular key whether that is

750
00:32:05,368 --> 00:32:10,428
effectively like hitting control that

751
00:32:07,739 --> 00:32:12,960
key or whether it just inserts the key

752
00:32:10,429 --> 00:32:15,419
and so it's really not that much

753
00:32:12,960 --> 00:32:16,798
different and VI that's just one of the

754
00:32:15,419 --> 00:32:18,869
things about VI right there's a lot of

755
00:32:16,798 --> 00:32:21,329
things about VI and its philosophy that

756
00:32:18,868 --> 00:32:23,339
have nothing to do with that but that

757
00:32:21,329 --> 00:32:26,928
part is very different from Emacs Emacs

758
00:32:23,339 --> 00:32:26,928
never really had two modes

759
00:32:27,420 --> 00:32:30,420
it was always about if you wanted to do

760
00:32:29,039 --> 00:32:32,460
a command you hold down the control key

761
00:32:30,420 --> 00:32:34,560
and hit a key it was never about I

762
00:32:32,460 --> 00:32:36,150
switch into command mode and then I just

763
00:32:34,559 --> 00:32:39,179
hit the regular key does something and

764
00:32:36,150 --> 00:32:42,150
so I switched over to a more VI like

765
00:32:39,180 --> 00:32:44,190
thing for that and it's since I was

766
00:32:42,150 --> 00:32:45,840
never a VI user it's not at all based on

767
00:32:44,190 --> 00:32:47,370
VI if you were a VI user I think you

768
00:32:45,839 --> 00:32:49,470
would probably try to report a bunch of

769
00:32:47,369 --> 00:32:53,819
the conventions that you were used to

770
00:32:49,470 --> 00:32:55,769
but I'm not so I'm not going to anyway

771
00:32:53,819 --> 00:32:57,210
so when I did that modal thing you can

772
00:32:55,769 --> 00:32:58,410
see that I switch between them and

773
00:32:57,210 --> 00:32:59,940
you've probably seen me do that on

774
00:32:58,410 --> 00:33:02,700
handmade Kuro there's actually a very

775
00:32:59,940 --> 00:33:05,190
strong color indication that that's

776
00:33:02,700 --> 00:33:07,590
happening when you look at the cursor

777
00:33:05,190 --> 00:33:08,940
it's red if I'm in command execution

778
00:33:07,589 --> 00:33:10,619
mode and that's the thing that allows me

779
00:33:08,940 --> 00:33:12,450
to do stuff like you know marker region

780
00:33:10,619 --> 00:33:14,549
or whatever cut and paste it do those

781
00:33:12,450 --> 00:33:16,890
sorts of things or invoke the jump menu

782
00:33:14,549 --> 00:33:20,099
for example that's just getting the J

783
00:33:16,890 --> 00:33:22,050
key whereas if I'm in insertion mode and

784
00:33:20,099 --> 00:33:24,029
it's green anything I can't just insert

785
00:33:22,049 --> 00:33:27,690
the key there is no way to execute any

786
00:33:24,029 --> 00:33:30,559
command except that now I am adding

787
00:33:27,690 --> 00:33:33,360
these because the F keys don't have any

788
00:33:30,559 --> 00:33:35,700
corresponding way to insert anything so

789
00:33:33,359 --> 00:33:37,109
they're bound at all times right they're

790
00:33:35,700 --> 00:33:39,690
bound to regardless of what mode you're

791
00:33:37,109 --> 00:33:41,969
in now I may change my mind about that

792
00:33:39,690 --> 00:33:44,309
as I go down this path a little bit more

793
00:33:41,970 --> 00:33:45,630
and have the two modes do different

794
00:33:44,309 --> 00:33:48,299
things when you hit the F keys but at

795
00:33:45,630 --> 00:33:51,210
the moment I don't intend to now when

796
00:33:48,299 --> 00:33:54,359
you are in regular mode editing things

797
00:33:51,210 --> 00:33:58,319
obviously you hit the four key five key

798
00:33:54,359 --> 00:34:01,769
one key it inserts that number that's

799
00:33:58,319 --> 00:34:04,200
just how editing text works but if you

800
00:34:01,769 --> 00:34:07,519
switch into command mode now what I've

801
00:34:04,200 --> 00:34:12,349
also said is when you hit the

802
00:34:07,519 --> 00:34:16,500
corresponding number key to an F key and

803
00:34:12,349 --> 00:34:18,509
also I should note that the equals and

804
00:34:16,500 --> 00:34:20,309
minus keys I've mapped to eleven and

805
00:34:18,510 --> 00:34:22,110
twelve and the zero key I mapped to ten

806
00:34:20,309 --> 00:34:23,759
so it's basically still the straight

807
00:34:22,110 --> 00:34:27,630
button bar just across the top of your

808
00:34:23,760 --> 00:34:29,760
keyboard right those correspond to the

809
00:34:27,630 --> 00:34:31,860
bins and they will select a particular

810
00:34:29,760 --> 00:34:36,090
bin right they'll just make it like the

811
00:34:31,860 --> 00:34:39,510
active bin does that make sense now of

812
00:34:36,090 --> 00:34:41,280
course you may be asking yourself and I

813
00:34:39,510 --> 00:34:51,330
strongly suspect

814
00:34:41,280 --> 00:34:51,929
that you are what is all this for who

815
00:34:51,329 --> 00:34:54,440
cares

816
00:34:51,929 --> 00:34:57,780
look what are you gonna do with this

817
00:34:54,440 --> 00:35:00,289
well it occurs to me and has always

818
00:34:57,780 --> 00:35:07,080
occurred to me for since time immemorial

819
00:35:00,289 --> 00:35:12,809
that most of the things that I do in my

820
00:35:07,079 --> 00:35:18,179
editor I do again right

821
00:35:12,809 --> 00:35:24,539
and I believe I don't quote me on this

822
00:35:18,179 --> 00:35:28,139
but I believe that VI has some sort of

823
00:35:24,539 --> 00:35:31,889
support for this and Emacs had some sort

824
00:35:28,139 --> 00:35:34,739
of support for this which is to say that

825
00:35:31,889 --> 00:35:38,909
any time you did something complicated

826
00:35:34,739 --> 00:35:42,389
such as search and replace you could

827
00:35:38,909 --> 00:35:45,839
repeat that search and replace using the

828
00:35:42,389 --> 00:35:47,730
mini bar in Emacs and I don't use the I

829
00:35:45,840 --> 00:35:49,110
but I'm pretty sure that VI had the same

830
00:35:47,730 --> 00:35:53,340
thing where you could basically say look

831
00:35:49,110 --> 00:35:54,269
I did something just now I want to do

832
00:35:53,340 --> 00:35:56,610
that thing again

833
00:35:54,269 --> 00:35:58,500
and as long as I haven't done any other

834
00:35:56,610 --> 00:36:00,240
commands in the meantime I can just do

835
00:35:58,500 --> 00:36:02,190
it if I have done other commands in the

836
00:36:00,239 --> 00:36:04,649
meantime again don't know about VI but

837
00:36:02,190 --> 00:36:08,309
least in Emacs you could effectively say

838
00:36:04,650 --> 00:36:10,440
give me a list right like show me the

839
00:36:08,309 --> 00:36:12,360
last 10 searching replaces I did or

840
00:36:10,440 --> 00:36:15,990
whatever and I'm gonna pick one to do

841
00:36:12,360 --> 00:36:17,579
again right so one of the things that I

842
00:36:15,989 --> 00:36:19,529
definitely lost on it - for coder is I

843
00:36:17,579 --> 00:36:22,019
couldn't do that anymore now it wasn't

844
00:36:19,530 --> 00:36:24,510
very good in Emacs support was not great

845
00:36:22,019 --> 00:36:26,389
but it was nice to have and so one of

846
00:36:24,510 --> 00:36:30,240
the things that I'm often thought about

847
00:36:26,389 --> 00:36:31,759
is how would I fear that allowed me

848
00:36:30,239 --> 00:36:35,299
access to that same sort of thing that

849
00:36:31,760 --> 00:36:37,770
I'm Emacs and I'm pretty sure VI can do

850
00:36:35,300 --> 00:36:39,360
how can I put that back into for coder

851
00:36:37,769 --> 00:36:42,030
in a way that makes sense for me and the

852
00:36:39,360 --> 00:36:46,200
way I at it can I make it better

853
00:36:42,030 --> 00:36:48,360
can I improve it for my use my use case

854
00:36:46,199 --> 00:36:51,480
and what I was thinking is what I'd

855
00:36:48,360 --> 00:36:54,180
really like is I'd really like it to

856
00:36:51,480 --> 00:36:55,079
just say look every time I do something

857
00:36:54,179 --> 00:36:56,969
you

858
00:36:55,079 --> 00:37:01,019
clean of goes into like a stack of

859
00:36:56,969 --> 00:37:03,599
things I can do but rather than those

860
00:37:01,018 --> 00:37:05,608
things being buried behind some editor

861
00:37:03,599 --> 00:37:07,200
facade which is what happened like an

862
00:37:05,608 --> 00:37:09,568
Emacs and certainly happens in VI

863
00:37:07,199 --> 00:37:13,199
because anything in VI is always hidden

864
00:37:09,568 --> 00:37:15,358
behind some crazy of Zod let's just make

865
00:37:13,199 --> 00:37:17,009
it explicit so every time I do something

866
00:37:15,358 --> 00:37:19,708
let's put it that's where I came up with

867
00:37:17,009 --> 00:37:21,958
this idea of the F Ben and f bar anytime

868
00:37:19,708 --> 00:37:25,318
I do something let's just put it down in

869
00:37:21,958 --> 00:37:27,538
a bin right and if you want to do it

870
00:37:25,318 --> 00:37:30,449
again you just hit the F key that

871
00:37:27,539 --> 00:37:33,569
corresponds to that bin that's it right

872
00:37:30,449 --> 00:37:37,169
that's all you have to do furthermore

873
00:37:33,568 --> 00:37:41,308
let's standardize on the way that the

874
00:37:37,170 --> 00:37:43,680
bins are organized and listed so for

875
00:37:41,309 --> 00:37:47,999
example a if I jump to a particular

876
00:37:43,679 --> 00:37:50,129
function then that's a command of jump

877
00:37:47,998 --> 00:37:51,358
with the function name as the function

878
00:37:50,130 --> 00:37:54,450
or something right as the first

879
00:37:51,358 --> 00:37:57,808
parameter if I wanted to do a search

880
00:37:54,449 --> 00:38:00,149
inside the buffer for the for that text

881
00:37:57,809 --> 00:38:01,798
then the command be searched and the

882
00:38:00,150 --> 00:38:03,150
name of that function if I want to do a

883
00:38:01,798 --> 00:38:04,528
search and replace it would be search

884
00:38:03,150 --> 00:38:06,690
and replace the name of that function

885
00:38:04,528 --> 00:38:09,289
and the thing to replace it to and so

886
00:38:06,690 --> 00:38:12,059
there's always this sort of binary op

887
00:38:09,289 --> 00:38:13,979
style of what is the thing you were

888
00:38:12,059 --> 00:38:16,890
trying to do what is the parameter a and

889
00:38:13,978 --> 00:38:19,108
what is parameter B now why do I care

890
00:38:16,889 --> 00:38:21,389
about that because then what I can do is

891
00:38:19,108 --> 00:38:24,088
I can introduce operations between bins

892
00:38:21,389 --> 00:38:26,848
so I can you know use this this idea of

893
00:38:24,088 --> 00:38:28,889
selecting a bin and say Oh bin for has a

894
00:38:26,849 --> 00:38:32,099
search in a place that's basically what

895
00:38:28,889 --> 00:38:34,708
I want and I still want to keep it there

896
00:38:32,099 --> 00:38:35,940
or maybe I know let's say it still has

897
00:38:34,708 --> 00:38:37,288
the search place I want I just want to

898
00:38:35,940 --> 00:38:39,420
edit the second parameter

899
00:38:37,289 --> 00:38:41,190
I'll just have a key on the keyboard

900
00:38:39,420 --> 00:38:43,889
that lets me change just a second

901
00:38:41,190 --> 00:38:46,048
parameter so I don't have to start a

902
00:38:43,889 --> 00:38:48,748
whole search and replace and type in the

903
00:38:46,048 --> 00:38:51,389
thing to replace again right I can just

904
00:38:48,748 --> 00:38:53,488
change the second parameter and go or

905
00:38:51,389 --> 00:38:55,489
maybe it's the opposite maybe I just

906
00:38:53,489 --> 00:38:58,289
want to change the first parameter right

907
00:38:55,489 --> 00:39:00,690
similarly maybe it's got exactly what I

908
00:38:58,289 --> 00:39:03,539
want in terms of the first parameter but

909
00:39:00,690 --> 00:39:06,869
it's a wrong command so instead of the

910
00:39:03,539 --> 00:39:08,670
command being searched in replace I just

911
00:39:06,869 --> 00:39:09,990
want search well

912
00:39:08,670 --> 00:39:12,930
should be able to do that really quickly

913
00:39:09,989 --> 00:39:15,568
too right so what I want to do is

914
00:39:12,929 --> 00:39:19,108
basically see if I can get some leverage

915
00:39:15,568 --> 00:39:22,318
out of this by including locations and

916
00:39:19,108 --> 00:39:25,139
files parameter names to those kinds of

917
00:39:22,318 --> 00:39:27,989
functions and then a set of different

918
00:39:25,139 --> 00:39:31,078
commands what can I do to make this work

919
00:39:27,989 --> 00:39:33,058
pretty well and then the two big things

920
00:39:31,079 --> 00:39:35,068
that I don't really know what how it

921
00:39:33,059 --> 00:39:36,329
should work but it's gonna be sensitive

922
00:39:35,068 --> 00:39:39,989
and I'll probably have to figure out a

923
00:39:36,329 --> 00:39:42,809
good solution is every time I'm doing

924
00:39:39,989 --> 00:39:46,709
something like jumping around a file or

925
00:39:42,809 --> 00:39:49,589
anything like that it's gonna you know

926
00:39:46,710 --> 00:39:53,940
overwrite something in the bin bar right

927
00:39:49,588 --> 00:39:56,159
in the F bar and so I need some policy

928
00:39:53,940 --> 00:39:59,579
for saying keep this thing around or

929
00:39:56,159 --> 00:40:01,558
don't and what gets evicted probably

930
00:39:59,579 --> 00:40:07,650
like least recently used gets evicted

931
00:40:01,559 --> 00:40:10,490
you know or something I don't know and

932
00:40:07,650 --> 00:40:13,789
so we need some way of being intelligent

933
00:40:10,489 --> 00:40:16,889
about what gets removed and what doesn't

934
00:40:13,789 --> 00:40:20,989
because that's gonna be the other really

935
00:40:16,889 --> 00:40:20,989
important aspect of making this useful

936
00:40:23,960 --> 00:40:35,190
if we assume it's useful at all so lots

937
00:40:29,250 --> 00:40:38,548
of other things the active part also can

938
00:40:35,190 --> 00:40:40,139
determine what like next and previous do

939
00:40:38,548 --> 00:40:43,380
so one of the big problems I have in for

940
00:40:40,139 --> 00:40:46,379
code are all the time right now is that

941
00:40:43,380 --> 00:40:50,099
if I do a compile and then I do a search

942
00:40:46,380 --> 00:40:53,818
I can't step forwards and backwards for

943
00:40:50,099 --> 00:40:55,829
the for the things in the compile the

944
00:40:53,818 --> 00:40:57,298
error message of the compile and the

945
00:40:55,829 --> 00:40:59,849
things in the search interchangeably

946
00:40:57,298 --> 00:41:03,568
it's like whatever the last one was

947
00:40:59,849 --> 00:41:06,030
that's the one that it's gonna use and I

948
00:41:03,568 --> 00:41:07,349
can't go back to a previous one and the

949
00:41:06,030 --> 00:41:09,750
same would be true of searching I

950
00:41:07,349 --> 00:41:11,640
searched once I search again I lose all

951
00:41:09,750 --> 00:41:14,039
my previous search and my place in that

952
00:41:11,639 --> 00:41:17,789
in those listings if I was trying to go

953
00:41:14,039 --> 00:41:20,400
up and down on it right and so I also

954
00:41:17,789 --> 00:41:22,409
want as part of this anytime you do the

955
00:41:20,400 --> 00:41:25,470
command I want to see

956
00:41:22,409 --> 00:41:28,049
the buffer so basically every F bin

957
00:41:25,469 --> 00:41:31,109
would have its own like buffer backing

958
00:41:28,050 --> 00:41:33,300
it and these buffers would just be

959
00:41:31,110 --> 00:41:35,460
whenever I make one of these active

960
00:41:33,300 --> 00:41:37,470
that's the buffer that gets displayed in

961
00:41:35,460 --> 00:41:40,230
here and it's the buffer that should

962
00:41:37,469 --> 00:41:44,009
have the forward and backwards motion on

963
00:41:40,230 --> 00:41:45,990
it occurring so that I can just have

964
00:41:44,010 --> 00:41:48,390
like 12 searches open if that's what I

965
00:41:45,989 --> 00:41:51,359
want and ping-pong around them however I

966
00:41:48,389 --> 00:41:53,250
want and I don't have to worry about for

967
00:41:51,360 --> 00:41:58,110
coder having this kind of concept of

968
00:41:53,250 --> 00:42:00,349
what the most recent one was right and

969
00:41:58,110 --> 00:42:04,019
so that's what I want to try and get to

970
00:42:00,349 --> 00:42:06,960
now in order to do that again I need

971
00:42:04,019 --> 00:42:08,489
some way we'll get out of the experiment

972
00:42:06,960 --> 00:42:11,309
for coder and back to the actual for a

973
00:42:08,489 --> 00:42:12,419
coder here that we're looking at oh one

974
00:42:11,309 --> 00:42:14,639
thing I meant to mention is there's also

975
00:42:12,420 --> 00:42:16,409
this scope context stuff now that's

976
00:42:14,639 --> 00:42:17,579
gonna get upgraded a little bit I think

977
00:42:16,409 --> 00:42:20,009
in the future but basically what that is

978
00:42:17,579 --> 00:42:22,699
is if you're inside of a scope work that

979
00:42:20,010 --> 00:42:25,680
you can't see so like there for example

980
00:42:22,699 --> 00:42:28,169
it will show you like as much

981
00:42:25,679 --> 00:42:30,690
information as it can about that scope

982
00:42:28,170 --> 00:42:32,460
so you can see it says this outer and

983
00:42:30,690 --> 00:42:35,700
closing brace that you can't see right

984
00:42:32,460 --> 00:42:37,559
here is this if statement and this outer

985
00:42:35,699 --> 00:42:39,539
and closing brace that you can't see is

986
00:42:37,559 --> 00:42:41,400
this for statement and this outer

987
00:42:39,539 --> 00:42:45,929
enclosing braces you can't see is this

988
00:42:41,400 --> 00:42:47,160
function right which is pretty awesome I

989
00:42:45,929 --> 00:42:49,739
was really psyched about that feature

990
00:42:47,159 --> 00:42:52,589
it's pretty neat it also if it has room

991
00:42:49,739 --> 00:42:55,019
will do small else clauses as well if

992
00:42:52,590 --> 00:42:57,269
you can't see the if so for example even

993
00:42:55,019 --> 00:42:59,400
if you can see the clause you can see

994
00:42:57,269 --> 00:43:00,780
here it'll try to put the if in there

995
00:42:59,400 --> 00:43:03,119
but the problem is if it doesn't have

996
00:43:00,780 --> 00:43:05,850
room so the reason is gonna probably

997
00:43:03,119 --> 00:43:07,500
change from doing it this way is I think

998
00:43:05,849 --> 00:43:13,589
I'm going to try and do is put it on the

999
00:43:07,500 --> 00:43:16,530
closed brace here anytime it can so you

1000
00:43:13,590 --> 00:43:18,360
know in this case it can't there's no

1001
00:43:16,530 --> 00:43:20,880
closed brace so it'll continue to draw

1002
00:43:18,360 --> 00:43:22,950
it here but for all of these it'll just

1003
00:43:20,880 --> 00:43:25,019
put it after the close brace that way

1004
00:43:22,949 --> 00:43:27,419
you always know which close brace is

1005
00:43:25,019 --> 00:43:29,789
associated with which open brace

1006
00:43:27,420 --> 00:43:31,619
statement which is pretty handy so

1007
00:43:29,789 --> 00:43:33,539
that's it that's what those are people

1008
00:43:31,619 --> 00:43:36,230
are probably wondering what that junk is

1009
00:43:33,539 --> 00:43:36,230
it's showing up there

1010
00:43:36,329 --> 00:43:44,279
okay let me see here so f bar let's talk

1011
00:43:41,579 --> 00:43:46,889
about this so I haven't started this

1012
00:43:44,280 --> 00:43:48,390
again all I did was bind it up and make

1013
00:43:46,889 --> 00:43:50,940
it so that I've got the two things that

1014
00:43:48,389 --> 00:43:54,210
I said I wanted which was execute F in

1015
00:43:50,940 --> 00:44:03,869
and select F in and so what I need to do

1016
00:43:54,210 --> 00:44:06,990
now there's a bunch of things but first

1017
00:44:03,869 --> 00:44:11,609
of all I want every one of these bins to

1018
00:44:06,989 --> 00:44:13,979
have a backing buffer so in order to do

1019
00:44:11,610 --> 00:44:19,590
that I need something in here that's

1020
00:44:13,980 --> 00:44:22,949
like a buffer ID so every time I have a

1021
00:44:19,590 --> 00:44:25,350
F pin it's got a buffer and so when we

1022
00:44:22,949 --> 00:44:27,289
initialize the F bar here now that f bar

1023
00:44:25,349 --> 00:44:29,519
is gonna create buffers for everything

1024
00:44:27,289 --> 00:44:35,730
so I'm gonna need a thing that's like

1025
00:44:29,519 --> 00:44:37,259
you know in it f bar and so I pass it

1026
00:44:35,730 --> 00:44:38,579
the f bar and say look this is your

1027
00:44:37,260 --> 00:44:41,280
chance to go through and make sure

1028
00:44:38,579 --> 00:44:43,679
everything's kosher so this will go

1029
00:44:41,280 --> 00:44:51,390
through everything in the entire f bar

1030
00:44:43,679 --> 00:44:55,169
so like for each of these guys go ahead

1031
00:44:51,389 --> 00:44:58,230
and give me an f bar out of the I'm

1032
00:44:55,170 --> 00:45:06,240
sorry go ahead and give me an F bin out

1033
00:44:58,230 --> 00:45:11,369
of f bar so every time I get one of

1034
00:45:06,239 --> 00:45:13,169
those I then need to set in the you know

1035
00:45:11,369 --> 00:45:18,599
in the F in here I need to set the

1036
00:45:13,170 --> 00:45:21,570
buffer to be essentially an F bin buffer

1037
00:45:18,599 --> 00:45:27,480
that I create whose sole job it is to

1038
00:45:21,570 --> 00:45:29,640
like capture data right and this thing

1039
00:45:27,480 --> 00:45:32,820
is going to be its these F bins are

1040
00:45:29,639 --> 00:45:36,059
going to completely replace the for

1041
00:45:32,820 --> 00:45:37,980
coder notion of the build buffer and the

1042
00:45:36,059 --> 00:45:40,710
search buffer and stuff like that right

1043
00:45:37,980 --> 00:45:43,079
dead it has pulled on why what do you

1044
00:45:40,710 --> 00:45:46,889
think you know what here's a question

1045
00:45:43,079 --> 00:45:49,759
for chat let's just let's just figure

1046
00:45:46,889 --> 00:45:49,759
this out right

1047
00:45:51,139 --> 00:45:57,480
so is it gonna be a tonic water or a

1048
00:45:54,630 --> 00:45:59,130
ginger ale next I want to open one of

1049
00:45:57,480 --> 00:46:01,170
them and drink it again I have to get

1050
00:45:59,130 --> 00:46:05,700
100% of my calories especially through

1051
00:46:01,170 --> 00:46:07,500
sugar water today pretty much period so

1052
00:46:05,699 --> 00:46:09,000
you know we got it we got to keep it

1053
00:46:07,500 --> 00:46:11,280
going on here otherwise I'm just gonna

1054
00:46:09,000 --> 00:46:14,789
crash it's already surprising if I'll be

1055
00:46:11,280 --> 00:46:17,760
able to code with having had no food but

1056
00:46:14,789 --> 00:46:19,409
you know we'll see but give me the

1057
00:46:17,760 --> 00:46:25,550
verdict like tell me what we're gonna do

1058
00:46:19,409 --> 00:46:25,549
are we gonna do yeah are we going to do

1059
00:46:26,389 --> 00:46:30,650
ginger ale or are we going to do

1060
00:46:39,300 --> 00:46:51,510
um it looks like ginger Ale's kind of

1061
00:46:41,849 --> 00:46:52,949
winning all right looks like ginger ale

1062
00:46:51,510 --> 00:46:54,930
we're gonna drink the tonic water

1063
00:46:52,949 --> 00:47:06,480
eventually so that will come next all

1064
00:46:54,929 --> 00:47:10,710
right here comes a ginger ale oh no it

1065
00:47:06,480 --> 00:47:18,240
fit on me well not really on me but it's

1066
00:47:10,710 --> 00:47:21,090
just done my stuff thankfully nothing

1067
00:47:18,239 --> 00:47:24,959
did not fit on anything important like

1068
00:47:21,090 --> 00:47:26,910
computer hardware all right so what we

1069
00:47:24,960 --> 00:47:29,940
need to do here is we essentially need

1070
00:47:26,909 --> 00:47:34,139
to create one of these temporary buffers

1071
00:47:29,940 --> 00:47:38,340
but for coder often uses to you know

1072
00:47:34,139 --> 00:47:40,799
represent stuff that's transient like a

1073
00:47:38,340 --> 00:47:43,350
search result and so on now I've

1074
00:47:40,800 --> 00:47:45,150
actually never done that in for coder so

1075
00:47:43,349 --> 00:47:46,529
it's gonna be a little bit of adventure

1076
00:47:45,150 --> 00:47:51,539
for me because I don't really know much

1077
00:47:46,530 --> 00:47:57,510
about compilation and stuff like that so

1078
00:47:51,539 --> 00:48:02,579
you can see here this is how we're

1079
00:47:57,510 --> 00:48:04,980
currently doing the build and the global

1080
00:48:02,579 --> 00:48:10,769
compilation buffer name thing here you

1081
00:48:04,980 --> 00:48:14,340
can see I have defined write and I guess

1082
00:48:10,769 --> 00:48:17,849
although I don't really know that this

1083
00:48:14,340 --> 00:48:22,850
exact system command must just create

1084
00:48:17,849 --> 00:48:22,849
this if it doesn't exist I guess

1085
00:48:27,998 --> 00:48:33,588
so I don't know exit one thing I should

1086
00:48:31,400 --> 00:48:41,869
mention is the jump stuff does not work

1087
00:48:33,588 --> 00:48:43,219
for things defined in a macro that

1088
00:48:41,869 --> 00:48:51,739
should have been found though I wonder

1089
00:48:43,219 --> 00:48:54,519
why that wasn't found do we know why

1090
00:48:51,739 --> 00:48:54,519
that wasn't found

1091
00:49:02,570 --> 00:49:07,620
that seems pretty weird that none of the

1092
00:49:05,760 --> 00:49:09,450
functions in this file got found I

1093
00:49:07,619 --> 00:49:12,989
wonder if there's a parsing bug that

1094
00:49:09,449 --> 00:49:14,909
happens only in this file for example

1095
00:49:12,989 --> 00:49:16,739
you can see that it finds this function

1096
00:49:14,909 --> 00:49:19,009
just fine you found that function just

1097
00:49:16,739 --> 00:49:19,009
fine

1098
00:49:22,530 --> 00:49:30,990
in fact all of these are just fine until

1099
00:49:26,969 --> 00:49:39,919
it gets to this it looks like this API

1100
00:49:30,989 --> 00:49:48,349
export is somehow confusing it but I

1101
00:49:39,920 --> 00:49:52,230
can't think of why that would be true oh

1102
00:49:48,349 --> 00:49:55,549
gosh you know what I bet it's because

1103
00:49:52,230 --> 00:49:57,360
comments are not ignored in the parser

1104
00:49:55,550 --> 00:50:00,300
let's fix that

1105
00:49:57,360 --> 00:50:01,410
again this parser is really Genki I mean

1106
00:50:00,300 --> 00:50:06,269
it's the thing that I kind of hack

1107
00:50:01,409 --> 00:50:09,389
because here's the really super annoying

1108
00:50:06,269 --> 00:50:12,259
thing I think C was a pretty good

1109
00:50:09,389 --> 00:50:14,940
language for what it wanted to do

1110
00:50:12,260 --> 00:50:18,660
there's only really one thing I think

1111
00:50:14,940 --> 00:50:23,360
they got wrong for their time you know

1112
00:50:18,659 --> 00:50:26,250
and that was they made the syntax

1113
00:50:23,360 --> 00:50:28,079
unnecessarily hard to parse they could

1114
00:50:26,250 --> 00:50:30,769
have just had a function key word you

1115
00:50:28,079 --> 00:50:30,769
know

1116
00:50:37,510 --> 00:50:47,980
just-just that would have been so good

1117
00:50:42,860 --> 00:50:52,849
right a cast keyword just cast

1118
00:50:47,980 --> 00:50:56,750
appendices or something right like just

1119
00:50:52,849 --> 00:50:58,940
a couple little minor additions of just

1120
00:50:56,750 --> 00:51:03,110
one or two keywords and we could just

1121
00:50:58,940 --> 00:51:05,570
parse it for real right and I guess

1122
00:51:03,110 --> 00:51:10,610
maybe the other thing I would say is if

1123
00:51:05,570 --> 00:51:13,820
you had some kind of a prohibition on

1124
00:51:10,610 --> 00:51:14,870
the way that pound of fines could work I

1125
00:51:13,820 --> 00:51:16,400
mean I guess technically the

1126
00:51:14,869 --> 00:51:18,109
preprocessor makes it really impossible

1127
00:51:16,400 --> 00:51:20,630
to parse because you have to have the

1128
00:51:18,110 --> 00:51:23,720
entire state of the preprocessor at any

1129
00:51:20,630 --> 00:51:24,769
time to know so it's not quite as

1130
00:51:23,719 --> 00:51:27,889
straightforward as I'm making it sound

1131
00:51:24,769 --> 00:51:29,599
but I do think that there was a chance

1132
00:51:27,889 --> 00:51:34,279
there to have made something pretty easy

1133
00:51:29,599 --> 00:51:36,710
to parse and that's really my only

1134
00:51:34,280 --> 00:51:39,350
complaint for what they were trying to

1135
00:51:36,710 --> 00:51:41,090
do I mean we can imagine much better

1136
00:51:39,349 --> 00:51:44,779
languages today but that's with

1137
00:51:41,090 --> 00:51:46,640
incredible amounts of hindsight alright

1138
00:51:44,780 --> 00:51:48,740
so let's take a look here at the parsing

1139
00:51:46,639 --> 00:51:51,379
part of this we don't care about parsing

1140
00:51:48,739 --> 00:51:54,979
comment but here we are at ad buffer to

1141
00:51:51,380 --> 00:51:59,720
index and so that particular case is

1142
00:51:54,980 --> 00:52:01,610
looking at a function right and so the

1143
00:51:59,719 --> 00:52:03,169
way that that case works is you can see

1144
00:52:01,610 --> 00:52:06,829
it kind of doing this thing here where

1145
00:52:03,170 --> 00:52:10,369
it goes and tries to find the first

1146
00:52:06,829 --> 00:52:13,549
identifier in question and so the way

1147
00:52:10,369 --> 00:52:17,630
that this starts out is it says look if

1148
00:52:13,550 --> 00:52:21,200
I've got a brace then let's back up from

1149
00:52:17,630 --> 00:52:24,410
the brace and see if it's CPP token

1150
00:52:21,199 --> 00:52:29,769
parentheses close you can see exactly

1151
00:52:24,409 --> 00:52:29,769
what the problem is the problem is that

1152
00:52:31,539 --> 00:52:34,849
if it were to return comment this would

1153
00:52:34,400 --> 00:52:36,050
fail

1154
00:52:34,849 --> 00:52:37,969
and that's as Zac what's gonna happen

1155
00:52:36,050 --> 00:52:39,530
it's gonna find this brace it's gonna

1156
00:52:37,969 --> 00:52:41,599
look at the previous token in that

1157
00:52:39,530 --> 00:52:45,019
previous token is a comment and that's

1158
00:52:41,599 --> 00:52:48,199
not gonna work right so what we want to

1159
00:52:45,019 --> 00:52:50,190
do here instead is say something like

1160
00:52:48,199 --> 00:52:57,298
CPP token

1161
00:52:50,190 --> 00:53:04,528
you know Tompa comment pass get this

1162
00:52:57,298 --> 00:53:10,650
thing and then just do look let's get

1163
00:53:04,528 --> 00:53:16,068
this thing and while it's a comment

1164
00:53:10,650 --> 00:53:19,048
because we don't want those keep going

1165
00:53:16,068 --> 00:53:25,679
again total hack but this whole thing is

1166
00:53:19,048 --> 00:53:27,059
a total hack so you know not a huge not

1167
00:53:25,679 --> 00:53:29,489
a huge loss we're just trying to get

1168
00:53:27,059 --> 00:53:34,079
something that does what we want for our

1169
00:53:29,489 --> 00:53:41,399
code base okay and so if I were to fix

1170
00:53:34,079 --> 00:53:43,380
that here yeah it's fine what I would

1171
00:53:41,400 --> 00:53:48,358
expect now is that if I run for a coder

1172
00:53:43,380 --> 00:53:51,660
on itself I'm hoping that we fixed that

1173
00:53:48,358 --> 00:53:54,750
problem and so now in the new version if

1174
00:53:51,659 --> 00:53:56,788
I do do exact system command I expect to

1175
00:53:54,750 --> 00:53:59,338
find it and I do so that was just an

1176
00:53:56,789 --> 00:54:00,778
oversight there that was just like one

1177
00:53:59,338 --> 00:54:04,469
of the things I forget sometimes is

1178
00:54:00,778 --> 00:54:06,989
Allen's parser puts comments into tokens

1179
00:54:04,469 --> 00:54:10,709
and when I write parsers I generally do

1180
00:54:06,989 --> 00:54:14,278
this thing that's a two-tier so if you

1181
00:54:10,710 --> 00:54:17,759
say get token you will not see comments

1182
00:54:14,278 --> 00:54:20,400
if you say get raw token you will see

1183
00:54:17,759 --> 00:54:23,009
comments in white space so it you can

1184
00:54:20,400 --> 00:54:25,470
control like the level of token

1185
00:54:23,009 --> 00:54:28,079
iteration you're doing and I forget

1186
00:54:25,469 --> 00:54:30,268
sometimes when I'm doing a hacky parser

1187
00:54:28,079 --> 00:54:32,759
inside someone else's you know token

1188
00:54:30,268 --> 00:54:34,739
stream I sometimes forget the fact that

1189
00:54:32,759 --> 00:54:38,730
you know here's decisions they made here

1190
00:54:34,739 --> 00:54:42,028
such as I made and I guys forget stuff

1191
00:54:38,730 --> 00:54:44,818
like that so anyway that's all good so

1192
00:54:42,028 --> 00:54:46,018
we can put that to rest here but anyway

1193
00:54:44,818 --> 00:54:48,869
back to what we're talking about so

1194
00:54:46,018 --> 00:54:51,508
exact system command that takes this

1195
00:54:48,869 --> 00:54:54,150
buffer identify our concept now a buffer

1196
00:54:51,509 --> 00:54:57,298
identifier and a buffer ID are actually

1197
00:54:54,150 --> 00:54:59,160
different I believe don't quote me on

1198
00:54:57,298 --> 00:55:02,630
that but I believe that's actually true

1199
00:54:59,159 --> 00:55:03,929
so like for example a buffer identifier

1200
00:55:02,630 --> 00:55:15,809
let me

1201
00:55:03,929 --> 00:55:17,849
see here yeah yes so buffer identifiers

1202
00:55:15,809 --> 00:55:19,289
take like the string and the length and

1203
00:55:17,849 --> 00:55:22,799
so on oh one thing I should mention in

1204
00:55:19,289 --> 00:55:25,259
Alan's code the parser stuff doesn't

1205
00:55:22,800 --> 00:55:27,690
really work very well for stuff that's

1206
00:55:25,260 --> 00:55:33,990
in the public API because he does this

1207
00:55:27,690 --> 00:55:36,990
thing where he uses struct and caps and

1208
00:55:33,989 --> 00:55:40,919
of course we don't expand macros so we

1209
00:55:36,989 --> 00:55:42,839
would never pick that up again like I

1210
00:55:40,920 --> 00:55:44,700
said we're not really parsing the C so

1211
00:55:42,840 --> 00:55:51,300
it only works if it's code that looks

1212
00:55:44,699 --> 00:55:54,109
roughly like mine okay

1213
00:55:51,300 --> 00:55:57,600
so the buffer identifier in this case

1214
00:55:54,110 --> 00:56:02,070
that's outside of the sunlight I can

1215
00:55:57,599 --> 00:56:06,029
basically say look this is just a string

1216
00:56:02,070 --> 00:56:09,260
that identifies this buffer I guess if

1217
00:56:06,030 --> 00:56:14,580
you try to switch to it it will

1218
00:56:09,260 --> 00:56:16,970
automatically do that I don't actually

1219
00:56:14,579 --> 00:56:16,969
know

1220
00:56:23,909 --> 00:56:31,469
like what I don't really know is does it

1221
00:56:26,949 --> 00:56:34,469
just automatically create it for you I

1222
00:56:31,469 --> 00:56:34,469
guess

1223
00:56:43,528 --> 00:56:48,130
and you can see here creating one of

1224
00:56:45,969 --> 00:56:57,538
these things and yeah I just what I

1225
00:56:48,130 --> 00:56:57,539
don't really know is what that

1226
00:57:13,940 --> 00:57:19,858
so I guess if I'm looking at this there

1227
00:57:17,460 --> 00:57:27,990
isn't really a function that's just like

1228
00:57:19,858 --> 00:57:31,588
get me a buffer or create it but I'm

1229
00:57:27,989 --> 00:57:38,809
gonna make one right because that's what

1230
00:57:31,588 --> 00:57:41,519
I want to do so so I want this thing

1231
00:57:38,809 --> 00:57:45,088
effectively to do that

1232
00:57:41,519 --> 00:57:47,250
I guess although technically it's

1233
00:57:45,088 --> 00:57:48,960
startup I guess I always know that it

1234
00:57:47,250 --> 00:57:52,409
doesn't exist so I guess I don't really

1235
00:57:48,960 --> 00:57:58,920
have to do that I guess all I really

1236
00:57:52,409 --> 00:58:01,529
have to do is this working set a lock

1237
00:57:58,920 --> 00:58:07,260
always push string buffer by name in it

1238
00:58:01,530 --> 00:58:09,900
read-only file right now I would have

1239
00:58:07,260 --> 00:58:12,079
assumed that there was a function for

1240
00:58:09,900 --> 00:58:12,079
this

1241
00:58:27,960 --> 00:58:35,849
but I guess not so you know it's a

1242
00:58:31,989 --> 00:58:35,849
little bit weird for me to be doing this

1243
00:58:58,090 --> 00:59:02,600
yeah I feel like there should be just

1244
00:59:00,949 --> 00:59:08,868
create temporary buffer call but it

1245
00:59:02,599 --> 00:59:12,380
doesn't look like there is um I'm not

1246
00:59:08,869 --> 00:59:16,190
really sure so I'm gonna start a little

1247
00:59:12,380 --> 00:59:20,660
bit tenderly here and I guess what I'm

1248
00:59:16,190 --> 00:59:22,610
gonna say is look let's cut out the part

1249
00:59:20,659 --> 00:59:27,429
of this code that we think we're going

1250
00:59:22,610 --> 00:59:34,220
to need right which is that we need to

1251
00:59:27,429 --> 00:59:38,059
do this we need to do this and we need

1252
00:59:34,219 --> 00:59:39,559
to do this I don't think we need to look

1253
00:59:38,059 --> 00:59:41,949
up any of the process stuff because

1254
00:59:39,559 --> 00:59:45,590
that's gonna be specific just to builds

1255
00:59:41,949 --> 00:59:49,129
and we certainly don't need to do any of

1256
00:59:45,590 --> 00:59:51,740
this reporting that's a necessary as

1257
00:59:49,130 --> 00:59:53,599
well we don't need to clear it because

1258
00:59:51,739 --> 00:59:55,819
there shouldn't be anything in it but we

1259
00:59:53,599 --> 00:59:59,029
do need to set it as unimportant that's

1260
00:59:55,820 --> 01:00:01,760
a flag that lets four code or know that

1261
00:59:59,030 --> 01:00:03,830
we don't want to switch to it so we

1262
01:00:01,760 --> 01:00:07,130
don't want it to be like matched when

1263
01:00:03,829 --> 01:00:09,619
we're doing file switching we want to be

1264
01:00:07,130 --> 01:00:12,950
like listed last and stuff like that I

1265
01:00:09,619 --> 01:00:21,289
think that's what it means you know what

1266
01:00:12,949 --> 01:00:23,449
don't quote me on that I'm not sure what

1267
01:00:21,289 --> 01:00:30,500
that actually means so maybe that's not

1268
01:00:23,449 --> 01:00:33,409
true anyway uh so in terms of this stuff

1269
01:00:30,500 --> 01:00:35,659
here we're we're doing this bind to new

1270
01:00:33,409 --> 01:00:37,190
view that stuff that's probably a

1271
01:00:35,659 --> 01:00:41,000
separate part where we want to like

1272
01:00:37,190 --> 01:00:43,460
bring stuff into the view that's gonna

1273
01:00:41,000 --> 01:00:46,989
be part of the Select F pin sort of

1274
01:00:43,460 --> 01:00:51,980
thing and so that's probably going to be

1275
01:00:46,989 --> 01:00:54,919
really more like this code up here and

1276
01:00:51,980 --> 01:00:59,780
so when we're doing that it's probably

1277
01:00:54,920 --> 01:01:06,190
more this kind of a thing so yeah we

1278
01:00:59,780 --> 01:01:11,540
don't need that we really just need this

1279
01:01:06,190 --> 01:01:13,789
and in order to do view set file that's

1280
01:01:11,539 --> 01:01:18,829
an internal call so we really don't want

1281
01:01:13,789 --> 01:01:29,900
that per se we want a like view buffer

1282
01:01:18,829 --> 01:01:36,519
or something like this I'll be honest I

1283
01:01:29,900 --> 01:01:36,519
don't really remember what that call is

1284
01:01:40,329 --> 01:01:46,789
here it is so we just want to do this

1285
01:01:44,108 --> 01:01:47,000
right so I don't think we need any of

1286
01:01:46,789 --> 01:01:50,179
that

1287
01:01:47,000 --> 01:01:53,088
honestly it's that's just internal code

1288
01:01:50,179 --> 01:01:55,429
that we probably can't call so we want

1289
01:01:53,088 --> 01:01:57,619
to do is in here is we want to set any

1290
01:01:55,429 --> 01:02:01,098
time you select an F in we want the

1291
01:01:57,619 --> 01:02:05,030
buffer this buffer to be showing that

1292
01:02:01,099 --> 01:02:11,539
information so it's got the buffer ID

1293
01:02:05,030 --> 01:02:14,260
here right so I know that part of it I'm

1294
01:02:11,539 --> 01:02:18,529
going to need to receive the application

1295
01:02:14,260 --> 01:02:20,540
links here that's basically just the

1296
01:02:18,530 --> 01:02:26,660
thing that lets us do stuff with for

1297
01:02:20,539 --> 01:02:29,298
coder I don't know what the zero is

1298
01:02:26,659 --> 01:02:33,858
there and then the buffer is just the

1299
01:02:29,298 --> 01:02:36,619
buffer the view is not so bad because I

1300
01:02:33,858 --> 01:02:39,318
actually don't need to call get active

1301
01:02:36,619 --> 01:02:43,338
view I know which view it is at all

1302
01:02:39,318 --> 01:02:46,279
times because I actually that sort of f

1303
01:02:43,338 --> 01:02:48,949
bar bin down there at the bottom I just

1304
01:02:46,280 --> 01:02:51,680
have a global four so that thing is just

1305
01:02:48,949 --> 01:02:54,558
a global it's a hug view is what's

1306
01:02:51,679 --> 01:03:00,318
called I should probably call it the f

1307
01:02:54,559 --> 01:03:01,910
bar view from now on but so in theory at

1308
01:03:00,318 --> 01:03:05,298
anytime I can just get the view summary

1309
01:03:01,909 --> 01:03:09,289
for that I can set it to be whatever the

1310
01:03:05,298 --> 01:03:10,170
active F bins buffer is so if I just say

1311
01:03:09,289 --> 01:03:13,300
look give me

1312
01:03:10,170 --> 01:03:13,300
[Music]

1313
01:03:16,050 --> 01:03:24,220
this particular one I should then be

1314
01:03:19,989 --> 01:03:37,719
able to say switch to that particular

1315
01:03:24,219 --> 01:03:39,099
buffer now part of that and I you know

1316
01:03:37,719 --> 01:03:49,059
what I should really see what what is

1317
01:03:39,099 --> 01:03:51,610
view set buffer so when you do have you

1318
01:03:49,059 --> 01:03:55,179
set buffer you're sending down set

1319
01:03:51,610 --> 01:03:57,460
buffer flags and I don't know what the

1320
01:03:55,179 --> 01:04:05,349
set buffer flags actually are it looks

1321
01:03:57,460 --> 01:04:10,150
like there's a thing for those not in

1322
01:04:05,349 --> 01:04:11,380
here so here's a sip buffer flag yes up

1323
01:04:10,150 --> 01:04:13,869
every you were singing then when

1324
01:04:11,380 --> 01:04:16,530
the fast set the view will not switch to

1325
01:04:13,869 --> 01:04:20,529
it if some other GUI was currently up

1326
01:04:16,530 --> 01:04:26,470
otherwise any GUI that is up is closed

1327
01:04:20,530 --> 01:04:28,060
and the view switches to the file so I

1328
01:04:26,469 --> 01:04:29,679
don't think that's probably super

1329
01:04:28,059 --> 01:04:34,449
relevant to us

1330
01:04:29,679 --> 01:04:36,039
I don't really know so I think we can

1331
01:04:34,449 --> 01:04:37,929
leave that as a zero so I think this is

1332
01:04:36,039 --> 01:04:47,409
all we really need to do here I can also

1333
01:04:37,929 --> 01:04:52,329
do a thing where I say hey get active F

1334
01:04:47,409 --> 01:04:55,690
bin buffer or something like this where

1335
01:04:52,329 --> 01:04:58,150
I'm gonna say look I need to do a build

1336
01:04:55,690 --> 01:05:00,039
so it's gonna go into the active F bin

1337
01:04:58,150 --> 01:05:01,990
buffer or whatever well you know what

1338
01:05:00,039 --> 01:05:04,029
let's not do that yet we got to think

1339
01:05:01,989 --> 01:05:05,319
that through a little bit better anyway

1340
01:05:04,030 --> 01:05:08,170
so what we now need to do is make sure

1341
01:05:05,320 --> 01:05:09,400
this stuff works at all and this stuff I

1342
01:05:08,170 --> 01:05:11,409
don't know how we're gonna make this

1343
01:05:09,400 --> 01:05:14,500
work because we're doing this outside so

1344
01:05:11,409 --> 01:05:16,269
we have to create a buffer and do

1345
01:05:14,500 --> 01:05:18,670
effectively these things but we probably

1346
01:05:16,269 --> 01:05:21,429
can't actually call any of this stuff

1347
01:05:18,670 --> 01:05:22,930
right so we need a way of creating your

1348
01:05:21,429 --> 01:05:25,149
read-only file but we need a way of

1349
01:05:22,929 --> 01:05:28,960
doing it in through the for code or API

1350
01:05:25,150 --> 01:05:33,849
as opposed to an internal thing so

1351
01:05:28,960 --> 01:05:38,159
I don't know how to do that let's take a

1352
01:05:33,849 --> 01:05:38,160
look so here's the create buffer call

1353
01:05:44,880 --> 01:05:50,619
there's the working set Alec always

1354
01:05:47,230 --> 01:05:55,260
there's the buffer by name this

1355
01:05:50,619 --> 01:05:55,260
unfortunately is in it normal file

1356
01:05:55,500 --> 01:06:08,679
whereas we want read-only I'm not sure

1357
01:06:03,338 --> 01:06:16,779
how to do that so I'm going to look for

1358
01:06:08,679 --> 01:06:27,338
it in it read-only file so does that

1359
01:06:16,780 --> 01:06:34,060
mean I can't create a read-only file but

1360
01:06:27,338 --> 01:06:42,460
how does search do it I mean when you

1361
01:06:34,059 --> 01:06:46,150
create a search like here's list all

1362
01:06:42,460 --> 01:06:48,670
functions right and so it does this

1363
01:06:46,150 --> 01:06:54,460
think here it's like get buffer by name

1364
01:06:48,670 --> 01:06:57,838
ah ok alright ok ok ok ok so this is

1365
01:06:54,460 --> 01:07:02,440
what we need to do here here we go

1366
01:06:57,838 --> 01:07:04,630
perfect perfect perfect perfect so here

1367
01:07:02,440 --> 01:07:08,409
in an it f bar what I can do is I can

1368
01:07:04,630 --> 01:07:13,358
call the buffer set setting which

1369
01:07:08,409 --> 01:07:20,199
hopefully maybe possibly let's say it

1370
01:07:13,358 --> 01:07:22,739
might do something let's let's do that

1371
01:07:20,199 --> 01:07:24,639
and assume that this is good enough for

1372
01:07:22,739 --> 01:07:25,809
replicating what's happening there and

1373
01:07:24,639 --> 01:07:28,150
the unimportant thing as you can see

1374
01:07:25,809 --> 01:07:32,099
it's got the read-only flag it's got the

1375
01:07:28,150 --> 01:07:35,170
unimportant flag that seems good right

1376
01:07:32,099 --> 01:07:39,930
now here in the get buffer by name thing

1377
01:07:35,170 --> 01:07:39,930
I don't really want that

1378
01:07:42,699 --> 01:07:46,939
good so basically what I can do is just

1379
01:07:45,380 --> 01:07:51,108
skip right to this because I know that

1380
01:07:46,940 --> 01:07:54,950
this buffer does not exist right so

1381
01:07:51,108 --> 01:07:56,000
there's the decals buffer that will

1382
01:07:54,949 --> 01:07:58,429
create it for me

1383
01:07:56,000 --> 01:08:01,278
it'll set all the correct settings on it

1384
01:07:58,429 --> 01:08:12,469
and so now all I need is is the buffer

1385
01:08:01,278 --> 01:08:14,298
name right yeah that seems good so I

1386
01:08:12,469 --> 01:08:16,759
need a name for each of these f bar

1387
01:08:14,298 --> 01:08:18,079
buffers and that's fine because it's

1388
01:08:16,759 --> 01:08:22,149
really just going to be like f bar

1389
01:08:18,079 --> 01:08:37,210
percent D right so all I need to do is

1390
01:08:22,149 --> 01:08:40,219
prep that first so if I just say look

1391
01:08:37,210 --> 01:08:44,119
give me f bar and then whatever the

1392
01:08:40,219 --> 01:08:46,838
number of the thing is right like 1 2 3

1393
01:08:44,119 --> 01:08:49,698
4 5 7 8 whatever create all of those

1394
01:08:46,838 --> 01:08:51,109
this right here I just need to do like a

1395
01:08:49,698 --> 01:08:52,638
make string and in fact I'm gonna do a

1396
01:08:51,109 --> 01:08:54,440
mixed ring right on this because what it

1397
01:08:52,639 --> 01:09:04,699
needs is the size and the string so I

1398
01:08:54,439 --> 01:09:07,399
can just do that right and so I do make

1399
01:09:04,698 --> 01:09:10,789
litte string off you go

1400
01:09:07,399 --> 01:09:12,649
it makes the buffer of whatever this

1401
01:09:10,789 --> 01:09:19,130
buffer name is here right so there's

1402
01:09:12,649 --> 01:09:21,108
tougher name and the wrapping point is

1403
01:09:19,130 --> 01:09:23,298
set wrong right now which is kind of

1404
01:09:21,109 --> 01:09:26,389
annoying but I can fix that a little bit

1405
01:09:23,298 --> 01:09:31,158
later so here's the buffer that we've

1406
01:09:26,389 --> 01:09:33,829
created now we've done everything that

1407
01:09:31,158 --> 01:09:36,079
we need to do to it and so finally at

1408
01:09:33,829 --> 01:09:41,420
the end of all that we just need to save

1409
01:09:36,079 --> 01:09:46,039
what it was right so that should do that

1410
01:09:41,420 --> 01:09:47,960
and I think that's all we need we now

1411
01:09:46,039 --> 01:09:49,429
need to go like I said before we need

1412
01:09:47,960 --> 01:09:50,929
the application links we can't do

1413
01:09:49,429 --> 01:09:52,350
anything without the application links

1414
01:09:50,929 --> 01:09:57,119
that's the thing that allows

1415
01:09:52,350 --> 01:09:59,280
actually access for coders API which

1416
01:09:57,119 --> 01:10:17,399
means that all the stuff in here needs

1417
01:09:59,279 --> 01:10:19,889
to get that sent down alright um looks

1418
01:10:17,399 --> 01:10:26,489
like we've got an error there what is

1419
01:10:19,890 --> 01:10:30,810
the error right I think that should just

1420
01:10:26,489 --> 01:10:33,269
be make string so now I've got this

1421
01:10:30,810 --> 01:10:36,600
notion of switching between these f bar

1422
01:10:33,270 --> 01:10:39,330
buffers don't really know what's gonna

1423
01:10:36,600 --> 01:10:41,820
happen with it but the idea is that you

1424
01:10:39,329 --> 01:10:43,529
should be able to switch between them we

1425
01:10:41,819 --> 01:10:45,779
wouldn't really know oh well you know

1426
01:10:43,529 --> 01:10:50,639
what we could do so what we could do is

1427
01:10:45,779 --> 01:10:57,239
call append and if we call pens then we

1428
01:10:50,640 --> 01:10:59,780
should be able to see inside our for

1429
01:10:57,239 --> 01:10:59,779
coder here

1430
01:11:04,470 --> 01:11:14,050
well I guess it's actually buffer

1431
01:11:06,699 --> 01:11:18,250
replace range yeah so if in here I do a

1432
01:11:14,050 --> 01:11:21,610
buffer replace range that will allow me

1433
01:11:18,250 --> 01:11:23,409
to insert into the buffer so you know

1434
01:11:21,609 --> 01:11:28,630
this buffer that we've got here at the

1435
01:11:23,409 --> 01:11:30,939
very beginning start and string and

1436
01:11:28,630 --> 01:11:36,659
length so I should be able to do buffer

1437
01:11:30,939 --> 01:11:39,519
name dot stir and a buffer name dot size

1438
01:11:36,659 --> 01:11:42,699
to just stick make the contents of the

1439
01:11:39,520 --> 01:11:44,530
buffer just be F Ben so I can see it and

1440
01:11:42,699 --> 01:11:45,939
then when I switch between them and do

1441
01:11:44,529 --> 01:11:48,159
the selection I should be able to see

1442
01:11:45,939 --> 01:11:49,479
that change right now obviously none of

1443
01:11:48,159 --> 01:11:51,250
this is gonna work if we don't actually

1444
01:11:49,479 --> 01:11:53,319
emit this thing so I need to call it

1445
01:11:51,250 --> 01:11:56,350
when we actually start up or nothing's

1446
01:11:53,319 --> 01:12:09,789
gonna happen so when we actually have

1447
01:11:56,350 --> 01:12:12,640
the start hook case you start in here

1448
01:12:09,789 --> 01:12:17,170
before I do anything else I can go ahead

1449
01:12:12,640 --> 01:12:18,820
and and call it now default for putter

1450
01:12:17,170 --> 01:12:20,949
initialize I don't know if some of this

1451
01:12:18,819 --> 01:12:25,299
stuff should happen first probably

1452
01:12:20,949 --> 01:12:27,189
should I don't know so I might go ahead

1453
01:12:25,300 --> 01:12:33,460
and just put it down here at the bottom

1454
01:12:27,189 --> 01:12:36,250
so something like that where we just say

1455
01:12:33,460 --> 01:12:43,899
look initialize the global f bar you

1456
01:12:36,250 --> 01:12:45,310
know have fun I that I think should get

1457
01:12:43,899 --> 01:12:48,539
us to the point where we can actually

1458
01:12:45,310 --> 01:12:48,539
switch buffers down there

1459
01:12:50,109 --> 01:12:55,469
I hope it's tonic time by the way

1460
01:13:03,869 --> 01:13:11,369
if you want to get really excited I made

1461
01:13:06,819 --> 01:13:11,369
my own apple juice jello

1462
01:13:19,649 --> 01:13:25,138
I'm not sure when it'll be done I think

1463
01:13:21,868 --> 01:13:28,319
four hours so two hours on stream and if

1464
01:13:25,139 --> 01:13:31,469
we do a second stream later we can eat

1465
01:13:28,319 --> 01:13:35,149
some apple jello it's literally just

1466
01:13:31,469 --> 01:13:35,149
apple juice with gelatin in it

1467
01:13:41,140 --> 01:13:49,070
anyway so you know watch for that anyway

1468
01:13:45,680 --> 01:13:51,140
let's go here to nnf bar this this thing

1469
01:13:49,069 --> 01:13:53,769
should you know insert the stuff for us

1470
01:13:51,140 --> 01:13:55,850
I'm gonna see if I can make that out

1471
01:13:53,770 --> 01:13:58,700
like if I couldn't I don't need to do

1472
01:13:55,850 --> 01:14:00,200
that sorry I can do it I'm gonna see if

1473
01:13:58,699 --> 01:14:01,750
I can make that show me something down

1474
01:14:00,199 --> 01:14:05,149
at the bottom I don't know if it will

1475
01:14:01,750 --> 01:14:07,039
you know we'll find out but here is that

1476
01:14:05,149 --> 01:14:09,619
f bar I'm gonna switch to command mode

1477
01:14:07,039 --> 01:14:13,699
and now select yeah okay so this is kind

1478
01:14:09,619 --> 01:14:15,649
of nice like we can select the F bar of

1479
01:14:13,699 --> 01:14:19,189
our choice and we get you know those

1480
01:14:15,649 --> 01:14:23,210
buffers showing up exactly as we would

1481
01:14:19,189 --> 01:14:25,250
want now mind you I don't actually know

1482
01:14:23,210 --> 01:14:27,770
how to tell for coder to start the

1483
01:14:25,250 --> 01:14:34,630
buffer display somewhere below this

1484
01:14:27,770 --> 01:14:34,630
thing that is gonna be a bit of a trip I

1485
01:14:37,840 --> 01:14:42,079
don't want to go diving into the for

1486
01:14:40,069 --> 01:14:45,529
kodokor without Allen's permission on

1487
01:14:42,079 --> 01:14:47,809
stream because I don't know if he's okay

1488
01:14:45,529 --> 01:14:49,699
with me streaming edits to the core I

1489
01:14:47,810 --> 01:14:53,180
don't think he's watching so we can't

1490
01:14:49,699 --> 01:14:54,529
really ask him but I'm not going to do

1491
01:14:53,180 --> 01:14:57,470
that so if I had to do that I'd probably

1492
01:14:54,529 --> 01:14:59,059
go do that off stream but we can get

1493
01:14:57,470 --> 01:15:01,100
everything working just drawing wrong

1494
01:14:59,060 --> 01:15:03,200
and then I just need to figure out how

1495
01:15:01,100 --> 01:15:05,750
I'm gonna make that work because at the

1496
01:15:03,199 --> 01:15:07,399
moment I don't really know a way to tell

1497
01:15:05,750 --> 01:15:09,949
for a coder that I need a margin at the

1498
01:15:07,399 --> 01:15:13,189
top of the screen for some crap that I'm

1499
01:15:09,949 --> 01:15:20,359
drawing I don't know how you make that

1500
01:15:13,189 --> 01:15:21,949
happen by the time I get to the render I

1501
01:15:20,359 --> 01:15:23,869
think it's too late because it kind of

1502
01:15:21,949 --> 01:15:26,869
has this idea about where stuff is in

1503
01:15:23,869 --> 01:15:29,630
the buffer that's like very specific and

1504
01:15:26,869 --> 01:15:32,510
so I don't know I mean I could try maybe

1505
01:15:29,630 --> 01:15:35,390
setting the scroll position to be like

1506
01:15:32,510 --> 01:15:37,820
negative I don't know if for coder is

1507
01:15:35,390 --> 01:15:39,500
okay with that like in other words if I

1508
01:15:37,819 --> 01:15:41,840
told for coder that the scrolling

1509
01:15:39,500 --> 01:15:44,449
position was like an illegal position

1510
01:15:41,840 --> 01:15:47,750
something that forced it to be viewing

1511
01:15:44,449 --> 01:15:51,250
up from where it actually is maybe it

1512
01:15:47,750 --> 01:15:51,250
allows that I mean it might

1513
01:15:53,229 --> 01:16:01,250
and if it does I think we're okay and I

1514
01:15:57,560 --> 01:16:03,739
can talk about why in a second but that

1515
01:16:01,250 --> 01:16:06,140
might that might work okay so now what I

1516
01:16:03,738 --> 01:16:09,218
like to do is let's just take the simple

1517
01:16:06,140 --> 01:16:11,800
step of seeing if I can make like

1518
01:16:09,219 --> 01:16:18,020
searches and crap like that

1519
01:16:11,800 --> 01:16:22,400
and build let's see if I can make those

1520
01:16:18,020 --> 01:16:25,400
target one of the FB ins instead of the

1521
01:16:22,399 --> 01:16:27,319
buffers they're currently using so for

1522
01:16:25,399 --> 01:16:31,219
example like I've got the like global

1523
01:16:27,319 --> 01:16:34,279
compilation buffer name let's just go

1524
01:16:31,219 --> 01:16:38,989
ahead and get rid of that and see if we

1525
01:16:34,279 --> 01:16:41,359
can make it use an F bin instead I also

1526
01:16:38,988 --> 01:16:51,468
don't know what LOC jump buffer means

1527
01:16:41,359 --> 01:16:52,880
but my hope is that if like LOC jump

1528
01:16:51,469 --> 01:16:56,329
buffer is something you could just call

1529
01:16:52,880 --> 01:16:58,100
on any buffer and then that becomes the

1530
01:16:56,329 --> 01:17:00,550
new buffer that you're going to go like

1531
01:16:58,100 --> 01:17:02,930
up and down in when you do like error

1532
01:17:00,550 --> 01:17:05,719
jump to next error that sort of stuff

1533
01:17:02,930 --> 01:17:07,820
that would be really nice because that

1534
01:17:05,719 --> 01:17:09,109
would give us an easy way to do one of

1535
01:17:07,819 --> 01:17:10,759
the other features I want which is like

1536
01:17:09,109 --> 01:17:16,849
whichever one of your buffers is the

1537
01:17:10,760 --> 01:17:20,600
active buffer is going to be able to be

1538
01:17:16,850 --> 01:17:24,110
used as like you know previous and next

1539
01:17:20,600 --> 01:17:25,400
and all that stuff if it's as simple as

1540
01:17:24,109 --> 01:17:28,399
calling a lock jump buffer that would be

1541
01:17:25,399 --> 01:17:34,849
nice I don't know that it will be we can

1542
01:17:28,399 --> 01:17:37,569
look alright looks like that's simple in

1543
01:17:34,850 --> 01:17:37,570
the custom where

1544
01:17:41,170 --> 01:17:44,880
uh so

1545
01:18:00,250 --> 01:18:07,520
so all it's doing is storing the name of

1546
01:18:03,920 --> 01:18:10,659
the buffer that's like jump locked at

1547
01:18:07,520 --> 01:18:10,660
that time

1548
01:18:24,329 --> 01:18:28,269
so yeah I mean I don't really know what

1549
01:18:27,550 --> 01:18:32,289
to make of that

1550
01:18:28,270 --> 01:18:35,980
exactly cuz like for example it doesn't

1551
01:18:32,289 --> 01:18:38,380
seem to make a lot of sense get view for

1552
01:18:35,979 --> 01:18:41,859
a locked jump buffer but why would you

1553
01:18:38,380 --> 01:18:59,739
need a view like you should be able to

1554
01:18:41,859 --> 01:19:11,759
use a jump buffer just as a buffer so

1555
01:18:59,739 --> 01:19:16,269
who exactly calls that maybe nobody okay

1556
01:19:11,760 --> 01:19:19,150
so here we are in get lock jump state

1557
01:19:16,270 --> 01:19:26,110
which I don't know what that does in

1558
01:19:19,149 --> 01:19:31,979
jump direct and jumping seek jump and

1559
01:19:26,109 --> 01:19:31,979
that's like skip beats okay so yeah like

1560
01:19:32,010 --> 01:19:38,230
it's a bit of a bummer because I don't

1561
01:19:35,109 --> 01:19:40,389
really want to do what this is doing

1562
01:19:38,229 --> 01:19:44,799
right like the way that this code is set

1563
01:19:40,390 --> 01:19:47,020
up it's it's basically saying I need you

1564
01:19:44,800 --> 01:19:51,310
to actually have a view bound to this

1565
01:19:47,020 --> 01:19:53,530
buffer or I won't execute the jump but I

1566
01:19:51,310 --> 01:19:56,080
don't know that we really want that to

1567
01:19:53,529 --> 01:19:59,619
be a limitation I guess it's not the

1568
01:19:56,079 --> 01:20:04,119
worst limitation in the world it's just

1569
01:19:59,619 --> 01:20:06,340
not what I would have preferred because

1570
01:20:04,119 --> 01:20:11,470
if you switch away from the active jump

1571
01:20:06,340 --> 01:20:13,960
buffer to some other F bin that isn't a

1572
01:20:11,470 --> 01:20:15,699
jump in like it's just it's a search and

1573
01:20:13,960 --> 01:20:18,699
replace or something so it doesn't have

1574
01:20:15,699 --> 01:20:21,489
the notion I don't know it's probably

1575
01:20:18,699 --> 01:20:23,349
fine we can just work with it for now

1576
01:20:21,489 --> 01:20:28,239
and it might just never be an issue so

1577
01:20:23,350 --> 01:20:31,060
it's fine I don't know anyway so if I am

1578
01:20:28,239 --> 01:20:33,639
in select F been here and I set the

1579
01:20:31,060 --> 01:20:36,730
buffer I'm just gonna lock this as a

1580
01:20:33,640 --> 01:20:37,550
jump upper because I can and just try

1581
01:20:36,729 --> 01:20:45,559
and stop

1582
01:20:37,550 --> 01:20:48,500
right so lock jump buffer with the

1583
01:20:45,560 --> 01:20:49,850
buffer here I guess I literally I only

1584
01:20:48,500 --> 01:20:52,670
gonna have to pass the thing so I can

1585
01:20:49,850 --> 01:20:56,530
literally just say this is the buffer

1586
01:20:52,670 --> 01:21:02,840
right does it need it's a buffer summary

1587
01:20:56,529 --> 01:21:04,279
so I don't know why there isn't a little

1588
01:21:02,840 --> 01:21:05,720
bit more flexibility between but for

1589
01:21:04,279 --> 01:21:08,509
some reason buffer IDs but I guess

1590
01:21:05,720 --> 01:21:22,070
that's just how it is so let's get this

1591
01:21:08,510 --> 01:21:24,079
buffer summary going here so I think I

1592
01:21:22,069 --> 01:21:26,630
can just call that and say you know what

1593
01:21:24,079 --> 01:21:29,300
give me back the buffer and then we'll

1594
01:21:26,630 --> 01:21:31,400
lock that as the jump buffer right so

1595
01:21:29,300 --> 01:21:34,369
that allows me to switch between buffers

1596
01:21:31,399 --> 01:21:36,769
that have had jumpable stuff in it like

1597
01:21:34,369 --> 01:21:40,340
a search or a build and so then only

1598
01:21:36,770 --> 01:21:43,340
think I really need to do is anytime

1599
01:21:40,340 --> 01:21:46,489
that we're going to execute a build or a

1600
01:21:43,340 --> 01:21:48,949
search try and enforce those things to

1601
01:21:46,489 --> 01:21:55,479
occur on the buffer that is the

1602
01:21:48,949 --> 01:21:55,479
currently most likely to want that

1603
01:22:03,750 --> 01:22:08,390
at the moment I'm gonna do that wrong

1604
01:22:11,210 --> 01:22:19,948
let's do this I'm gonna do it

1605
01:22:14,430 --> 01:22:21,539
intentionally wrong because like I said

1606
01:22:19,948 --> 01:22:26,599
I don't know what our replacement

1607
01:22:21,539 --> 01:22:37,738
policies gonna be for these f pins so I

1608
01:22:26,600 --> 01:22:39,360
don't know also Jim the reason I need to

1609
01:22:37,738 --> 01:22:41,419
know about jump buffers is because

1610
01:22:39,359 --> 01:22:47,719
builds going to jump buffers

1611
01:22:41,420 --> 01:22:47,719
no I'm saying so yeah

1612
01:22:53,579 --> 01:22:59,010
also I've read the sequel what do you

1613
01:22:55,649 --> 01:23:03,689
mean man Alan and I are totally in it to

1614
01:22:59,010 --> 01:23:08,430
win it on for coder I'm like adding the

1615
01:23:03,689 --> 01:23:10,409
for coder as we speak anyway so let's

1616
01:23:08,430 --> 01:23:11,970
have a way of getting the F in here more

1617
01:23:10,409 --> 01:23:14,340
quickly I probably should've done this

1618
01:23:11,970 --> 01:23:16,140
to begin with so here we just say you

1619
01:23:14,340 --> 01:23:21,000
know and and I'll just make this use the

1620
01:23:16,140 --> 01:23:22,650
global as well so here we'll just say if

1621
01:23:21,000 --> 01:23:27,810
you want to get one of these things then

1622
01:23:22,649 --> 01:23:32,969
we do this and enough off it goes it

1623
01:23:27,810 --> 01:23:34,740
gets you the global f bar bins and so

1624
01:23:32,970 --> 01:23:42,980
maybe this stuff doesn't really need the

1625
01:23:34,739 --> 01:23:42,979
f bar in question and

1626
01:23:56,180 --> 01:24:21,680
we'll do it like this how's that so this

1627
01:24:06,979 --> 01:24:24,459
way you can call it either way and

1628
01:24:21,680 --> 01:24:24,460
everyone's happy

1629
01:24:30,189 --> 01:24:38,000
so now what I want to do is I want to

1630
01:24:33,140 --> 01:24:39,200
try using like get F been here so that

1631
01:24:38,000 --> 01:24:42,470
instead of the way the compilation

1632
01:24:39,199 --> 01:24:44,630
buffer stuff is working right now in my

1633
01:24:42,470 --> 01:24:48,289
code we'll just make compilations or

1634
01:24:44,630 --> 01:24:48,680
we'll try to make compilations work that

1635
01:24:48,289 --> 01:24:50,779
way

1636
01:24:48,680 --> 01:24:52,909
so in here where we have like

1637
01:24:50,779 --> 01:24:54,829
compilation I'm just gonna get rid of

1638
01:24:52,909 --> 01:24:56,389
that and so now everywhere that we were

1639
01:24:54,829 --> 01:24:58,159
previously using that will try to

1640
01:24:56,390 --> 01:25:02,480
redirect it towards one of these FM

1641
01:24:58,159 --> 01:25:03,489
things right I don't know what's going

1642
01:25:02,479 --> 01:25:12,009
on here

1643
01:25:03,489 --> 01:25:12,010
nothing good should actually be results

1644
01:25:18,560 --> 01:25:33,270
that should be an address of select F

1645
01:25:24,869 --> 01:25:39,420
then get buffer app and buffer so it's

1646
01:25:33,270 --> 01:25:44,880
get buffer not an actual says oh right

1647
01:25:39,420 --> 01:25:46,260
there's this weird access all thing all

1648
01:25:44,880 --> 01:25:48,210
right so now we can get back to the task

1649
01:25:46,260 --> 01:25:49,980
at hand which is in here we have this

1650
01:25:48,210 --> 01:25:53,460
buffer identifier and that this lock

1651
01:25:49,979 --> 01:25:55,619
jump buffer sort of thing I don't think

1652
01:25:53,460 --> 01:26:00,359
we need to do this anymore

1653
01:25:55,619 --> 01:26:02,819
oops I think that's just not necessary

1654
01:26:00,359 --> 01:26:05,519
and then this exact command thing that's

1655
01:26:02,819 --> 01:26:08,159
gonna be like I'm gonna do a get F pin

1656
01:26:05,520 --> 01:26:16,590
and I guess what I want to do here is

1657
01:26:08,159 --> 01:26:25,170
like get target F bin and that is going

1658
01:26:16,590 --> 01:26:29,119
to be where you call get F in on

1659
01:26:25,170 --> 01:26:29,119
whatever the active one is

1660
01:26:30,170 --> 01:26:41,039
we do it this bar bar so it still just

1661
01:26:39,630 --> 01:26:42,539
target whatever the active when is

1662
01:26:41,039 --> 01:26:43,889
eventually we got to think about what

1663
01:26:42,539 --> 01:26:46,529
that replacement poss can be I don't

1664
01:26:43,889 --> 01:26:51,029
know but we're gonna do the best we can

1665
01:26:46,529 --> 01:26:56,670
and so you know this will just do it

1666
01:26:51,029 --> 01:26:59,759
salt like so alright so global complex

1667
01:26:56,670 --> 01:27:02,279
buffer name is now only used there I

1668
01:26:59,760 --> 01:27:03,539
think that's the only place so now all

1669
01:27:02,279 --> 01:27:08,519
we have to do is make a buffer

1670
01:27:03,539 --> 01:27:16,229
identifier out of the get target F been

1671
01:27:08,520 --> 01:27:18,480
here and the get target F pin call will

1672
01:27:16,229 --> 01:27:20,399
return us an F pin and we'll just get

1673
01:27:18,479 --> 01:27:23,569
the buffer out of it and we'll say use

1674
01:27:20,399 --> 01:27:28,229
that one and I think that's all we need

1675
01:27:23,569 --> 01:27:30,149
so I don't really know if this will work

1676
01:27:28,229 --> 01:27:31,769
cuz I don't really understand the

1677
01:27:30,149 --> 01:27:33,719
internals of that part of for code or

1678
01:27:31,770 --> 01:27:36,420
well at all

1679
01:27:33,719 --> 01:27:38,550
but now if I'm in this mode right I can

1680
01:27:36,420 --> 01:27:41,880
select these bins

1681
01:27:38,550 --> 01:27:44,940
I can hit build and in theory it should

1682
01:27:41,880 --> 01:27:46,800
build right and I should be able to

1683
01:27:44,939 --> 01:27:50,189
build in any one of them and switch back

1684
01:27:46,800 --> 01:27:51,960
okay so that seems to work just fine now

1685
01:27:50,189 --> 01:27:53,879
the question is what if we actually had

1686
01:27:51,960 --> 01:27:59,310
something that actually does build and

1687
01:27:53,880 --> 01:28:01,469
potentially produces errors right so

1688
01:27:59,310 --> 01:28:08,070
let's see we loaded up handmade rain and

1689
01:28:01,469 --> 01:28:14,840
and hit build right okay well that's not

1690
01:28:08,069 --> 01:28:14,840
very good cuz that's not and in fact Oh

1691
01:28:16,100 --> 01:28:27,420
crumbs right so this is not as easy as

1692
01:28:23,789 --> 01:28:30,210
it sounds we do have one issue there and

1693
01:28:27,420 --> 01:28:33,119
that is that when you switch projects we

1694
01:28:30,210 --> 01:28:36,408
kill all of our buffers so when that

1695
01:28:33,119 --> 01:28:41,369
happens we have to initialize the f bar

1696
01:28:36,408 --> 01:28:43,138
again right everything has to get remade

1697
01:28:41,369 --> 01:28:45,159
because all of those buffers have been

1698
01:28:43,139 --> 01:28:49,359
destroyed

1699
01:28:45,159 --> 01:28:51,989
I don't know if this is the best way to

1700
01:28:49,359 --> 01:28:51,989
do this

1701
01:29:03,890 --> 01:29:11,910
maybe we should just prevent those

1702
01:29:06,810 --> 01:29:14,370
buffers from being destroyed I don't

1703
01:29:11,909 --> 01:29:16,529
know what to do there so there's a thing

1704
01:29:14,369 --> 01:29:19,349
called closed all files you can see it

1705
01:29:16,529 --> 01:29:21,509
happening here I want all of the buffers

1706
01:29:19,350 --> 01:29:23,280
to be killed but maybe what I really

1707
01:29:21,510 --> 01:29:26,340
want to do is kill everything that's not

1708
01:29:23,279 --> 01:29:33,590
an f bar buffer I guess

1709
01:29:26,340 --> 01:29:33,590
so maybe I'll do like is f bar buffer

1710
01:29:36,738 --> 01:29:44,639
don't know right so like we're gonna

1711
01:29:41,340 --> 01:29:47,909
kill this buffer we advanced the next

1712
01:29:44,640 --> 01:29:51,239
one and we say look is this one an f bar

1713
01:29:47,909 --> 01:29:56,159
buffer and we say here it is

1714
01:29:51,238 --> 01:30:12,359
so we'll just you know what I'm saying

1715
01:29:56,159 --> 01:30:14,309
to you something like that and so that

1716
01:30:12,359 --> 01:30:16,979
way we can pass the ID that we're like

1717
01:30:14,310 --> 01:30:19,170
about to kill and then we'll just scan

1718
01:30:16,979 --> 01:30:20,969
the f bar to see like is that one of

1719
01:30:19,170 --> 01:30:21,930
ours and if it is let's like leave it

1720
01:30:20,970 --> 01:30:27,270
alone please

1721
01:30:21,930 --> 01:30:36,360
you know so if the bin buffer equals the

1722
01:30:27,270 --> 01:30:38,730
ID that's passed then it's true that's

1723
01:30:36,359 --> 01:30:43,979
like all I can really think of as maybe

1724
01:30:38,729 --> 01:30:50,159
the easiest solution there it looks like

1725
01:30:43,979 --> 01:30:52,699
B 32 is not a thing that I defined its P

1726
01:30:50,159 --> 01:30:52,699
32 X

1727
01:30:55,270 --> 01:31:01,700
all right that's all good and so now

1728
01:30:59,569 --> 01:31:03,920
hopefully I can do the test that I was

1729
01:31:01,699 --> 01:31:08,539
trying to do before and again I say

1730
01:31:03,920 --> 01:31:12,050
hopefully so I run it here it is we

1731
01:31:08,539 --> 01:31:14,979
switched to handmade ray I asked it to

1732
01:31:12,050 --> 01:31:14,980
build there it goes

1733
01:31:16,239 --> 01:31:24,439
oops so that's good so let's suppose

1734
01:31:21,649 --> 01:31:28,539
that I have some errors so I'm gonna

1735
01:31:24,439 --> 01:31:28,539
insert some errors into handmade ray

1736
01:31:29,109 --> 01:31:42,139
just judiciously right and so now if I'm

1737
01:31:37,399 --> 01:31:44,689
on you know F bar for here and I build I

1738
01:31:42,140 --> 01:31:49,390
should be able to jump between these

1739
01:31:44,689 --> 01:31:49,389
errors right oops

1740
01:31:52,300 --> 01:31:57,489
oh right I changed those hotkeys

1741
01:32:00,479 --> 01:32:07,359
so it is jumping between the areas on

1742
01:32:02,920 --> 01:32:20,730
there it won't jump now if I come back

1743
01:32:07,359 --> 01:32:20,729
it does jump that seems like it works

1744
01:32:22,920 --> 01:32:28,210
that seems like it works so you know I

1745
01:32:26,770 --> 01:32:30,520
don't want to clear victory yet because

1746
01:32:28,210 --> 01:32:32,439
I don't really know if that's quite

1747
01:32:30,520 --> 01:32:36,790
right but that seems like it works so

1748
01:32:32,439 --> 01:32:39,969
that seems ok let's try something a

1749
01:32:36,789 --> 01:32:42,399
little harder now let's try search so in

1750
01:32:39,969 --> 01:32:44,469
terms of what I've got for search

1751
01:32:42,399 --> 01:32:46,269
obviously there's incremental search

1752
01:32:44,469 --> 01:32:49,300
that's not one that has to work with a

1753
01:32:46,270 --> 01:32:51,610
jump over so we can save looking at that

1754
01:32:49,300 --> 01:32:55,510
until a little later on we do want that

1755
01:32:51,609 --> 01:32:58,569
to interact with the F bends so we do

1756
01:32:55,510 --> 01:33:00,760
have to sort of deal with that but let's

1757
01:32:58,569 --> 01:33:03,639
just try regular to have it it's time do

1758
01:33:00,760 --> 01:33:08,020
we have here we got turns this so we got

1759
01:33:03,640 --> 01:33:09,940
about fifteen minutes so let's let's try

1760
01:33:08,020 --> 01:33:17,410
and get some of the search stuff working

1761
01:33:09,939 --> 01:33:19,809
here all right so let's suppose we take

1762
01:33:17,409 --> 01:33:21,130
one of the searches that I have I don't

1763
01:33:19,810 --> 01:33:22,630
think I've got many anymore because I

1764
01:33:21,130 --> 01:33:27,400
use jump blisters for a lot of stuff now

1765
01:33:22,630 --> 01:33:30,069
which will work a slightly different way

1766
01:33:27,399 --> 01:33:31,960
when we merge those into the F bin but

1767
01:33:30,069 --> 01:33:35,469
for things that actually dump a bunch of

1768
01:33:31,960 --> 01:33:38,560
gunk out into an actual buffer and then

1769
01:33:35,469 --> 01:33:43,359
we jump around what we need to do is

1770
01:33:38,560 --> 01:33:46,900
have some way of targeting those back at

1771
01:33:43,359 --> 01:33:49,149
the F in so let's see what my modal

1772
01:33:46,899 --> 01:33:51,579
commands are here so I think the only

1773
01:33:49,149 --> 01:33:54,039
ones you really have our list all

1774
01:33:51,579 --> 01:33:56,529
locations and list all substring the

1775
01:33:54,039 --> 01:34:03,760
locations case-insensitive so basically

1776
01:33:56,529 --> 01:34:07,300
K is like whole tokens and L is like

1777
01:34:03,760 --> 01:34:12,159
anywhere this string ever even embedded

1778
01:34:07,300 --> 01:34:13,300
in other stuff occurs right list all

1779
01:34:12,159 --> 01:34:14,949
locations of type

1780
01:34:13,300 --> 01:34:17,949
definition isn't really a thing anymore

1781
01:34:14,949 --> 01:34:21,130
because I kind of just have that it's

1782
01:34:17,949 --> 01:34:35,710
done so I don't know where that actually

1783
01:34:21,130 --> 01:34:37,600
is this all locations so list all

1784
01:34:35,710 --> 01:34:40,590
locations of type definition I don't

1785
01:34:37,600 --> 01:34:43,150
need anymore that's a thing that is

1786
01:34:40,590 --> 01:34:46,329
defined in for coders search so that I

1787
01:34:43,149 --> 01:34:47,710
that's not my call so I can make that an

1788
01:34:46,329 --> 01:34:52,539
unused key and we can bind it to

1789
01:34:47,710 --> 01:34:54,310
something useful later jump to index and

1790
01:34:52,539 --> 01:34:56,079
jump to definition or the good jump

1791
01:34:54,310 --> 01:34:58,390
Lister's I made so if those obviously

1792
01:34:56,079 --> 01:35:00,880
want to remain list all locations in

1793
01:34:58,390 --> 01:35:02,530
list all substring locations those are

1794
01:35:00,880 --> 01:35:05,199
probably going to get condensed into one

1795
01:35:02,529 --> 01:35:06,579
thing the point being those are actually

1796
01:35:05,199 --> 01:35:07,960
the ones we care about so list all

1797
01:35:06,579 --> 01:35:10,000
substring locations case-sensitive

1798
01:35:07,960 --> 01:35:12,939
that's really the one that I use for

1799
01:35:10,000 --> 01:35:15,699
just search for the string everywhere so

1800
01:35:12,939 --> 01:35:18,250
we really want that one to work so if I

1801
01:35:15,699 --> 01:35:21,149
look at lists all substring locations

1802
01:35:18,250 --> 01:35:21,149
case-insensitive

1803
01:35:21,569 --> 01:35:26,349
what I need to do is look at how that's

1804
01:35:24,279 --> 01:35:28,929
working and how I can target it at a

1805
01:35:26,350 --> 01:35:34,510
different buffer this is going to be

1806
01:35:28,930 --> 01:35:35,829
kind of difficult unfortunately because

1807
01:35:34,510 --> 01:35:37,840
the way this is going to work I don't

1808
01:35:35,829 --> 01:35:39,880
know if I can set the buffer that it's

1809
01:35:37,840 --> 01:35:43,869
going to target very easily it probably

1810
01:35:39,880 --> 01:35:45,760
not so we'll see

1811
01:35:43,869 --> 01:35:47,289
anyway query the user for a string and

1812
01:35:45,760 --> 01:35:49,329
list all case-insensitive things so you

1813
01:35:47,289 --> 01:35:51,100
can see it getting whatever the view is

1814
01:35:49,329 --> 01:35:53,350
that you're going to use that does list

1815
01:35:51,100 --> 01:35:55,150
query parameters global heat little part

1816
01:35:53,350 --> 01:35:57,730
true true target view so it looks like

1817
01:35:55,149 --> 01:36:00,279
list query parameters is actually the

1818
01:35:57,729 --> 01:36:02,679
thing we're talking about here so that

1819
01:36:00,279 --> 01:36:04,269
does a get query string which allows you

1820
01:36:02,680 --> 01:36:06,820
to get back what you are looking for and

1821
01:36:04,270 --> 01:36:10,920
then do list single parameters thing on

1822
01:36:06,819 --> 01:36:10,920
it which looks like what you want

1823
01:36:11,640 --> 01:36:18,280
because it gets past the default target

1824
01:36:14,979 --> 01:36:21,089
view I guess really all I have to do

1825
01:36:18,279 --> 01:36:21,090
though is

1826
01:36:23,260 --> 01:36:30,610
is change this thing so I can do this

1827
01:36:26,828 --> 01:36:34,149
pretty easily this is great all I have

1828
01:36:30,609 --> 01:36:37,630
to do is make my own function that

1829
01:36:34,149 --> 01:36:40,748
passes the view that is the one that

1830
01:36:37,630 --> 01:36:46,420
were that happens to have our F pin in

1831
01:36:40,748 --> 01:36:48,238
it now it's a little unfortunate I don't

1832
01:36:46,420 --> 01:36:50,109
understand why this takes of view

1833
01:36:48,238 --> 01:36:54,578
because why couldn't it just take a

1834
01:36:50,109 --> 01:37:02,649
buffer probably because it does a lot

1835
01:36:54,578 --> 01:37:04,058
jump buffer on it after so let me just

1836
01:37:02,649 --> 01:37:05,498
investigate a little bit further because

1837
01:37:04,059 --> 01:37:12,969
it would be nice if this just targeted a

1838
01:37:05,498 --> 01:37:14,708
buffer and not a view but we can work

1839
01:37:12,969 --> 01:37:16,658
around it even if it does so you know

1840
01:37:14,708 --> 01:37:17,800
again not the end of the world so let me

1841
01:37:16,658 --> 01:37:20,198
go ahead and jump to list query

1842
01:37:17,800 --> 01:37:21,909
parameters that calls list single

1843
01:37:20,198 --> 01:37:25,748
parameters so I'm gonna go ahead and do

1844
01:37:21,908 --> 01:37:27,998
this single parameters just takes that

1845
01:37:25,748 --> 01:37:30,340
target view you can see here again we're

1846
01:37:27,998 --> 01:37:32,439
just kind of peeling the onion and

1847
01:37:30,340 --> 01:37:34,449
getting down to default that perhaps

1848
01:37:32,439 --> 01:37:37,719
there Lisp parameters which passes

1849
01:37:34,448 --> 01:37:39,698
default target view so in terms of

1850
01:37:37,719 --> 01:37:40,269
default target view this is what I'm

1851
01:37:39,698 --> 01:37:42,908
curious about

1852
01:37:40,269 --> 01:37:45,869
yeah exactly like I thought doesn't

1853
01:37:42,908 --> 01:37:49,208
actually get used at all right it's just

1854
01:37:45,868 --> 01:37:51,578
getting the buffer so you know I would

1855
01:37:49,208 --> 01:37:57,519
argue that this function probably should

1856
01:37:51,578 --> 01:38:01,268
be broken into two parts so that that

1857
01:37:57,519 --> 01:38:06,159
doesn't have to happen right if we made

1858
01:38:01,269 --> 01:38:09,010
this function so that that it took the

1859
01:38:06,158 --> 01:38:10,598
buffer here then this part could be done

1860
01:38:09,010 --> 01:38:13,958
by somebody else and that way you're

1861
01:38:10,599 --> 01:38:17,139
always targeting a buffer and you're not

1862
01:38:13,958 --> 01:38:20,529
targeting of you which is not you know

1863
01:38:17,139 --> 01:38:22,630
what we want so I guess what I would say

1864
01:38:20,529 --> 01:38:23,889
is and you see it's doing the lit string

1865
01:38:22,630 --> 01:38:28,559
here so I guess right since we really

1866
01:38:23,889 --> 01:38:34,179
want to do is we want to basically force

1867
01:38:28,559 --> 01:38:54,670
this split and I'm gonna just

1868
01:38:34,179 --> 01:38:56,469
I'm just gonna say hey Alan let's have

1869
01:38:54,670 --> 01:38:59,440
that happen on an arbitrary buffers

1870
01:38:56,469 --> 01:39:05,340
right and so that way if we just just

1871
01:38:59,439 --> 01:39:14,079
cut out this code right and then we said

1872
01:39:05,340 --> 01:39:24,219
use that code here and then call it and

1873
01:39:14,079 --> 01:39:29,519
this will just be like you know list

1874
01:39:24,219 --> 01:39:32,739
parameters buffer and here we just say

1875
01:39:29,520 --> 01:39:35,380
buffer ID search buffer ID

1876
01:39:32,738 --> 01:39:37,238
I think that's literally all we need to

1877
01:39:35,380 --> 01:39:39,130
do and I'll try to keep Alan's code

1878
01:39:37,238 --> 01:39:43,809
style there he likes to have the brace

1879
01:39:39,130 --> 01:39:46,840
squash up to the previous line so if we

1880
01:39:43,810 --> 01:39:50,260
just did that then this call could could

1881
01:39:46,840 --> 01:39:52,210
happen right down here immediately after

1882
01:39:50,260 --> 01:39:56,170
and then that way you can call into that

1883
01:39:52,210 --> 01:39:58,329
part of the call chain in either place

1884
01:39:56,170 --> 01:40:00,158
so all the existing code will work but

1885
01:39:58,329 --> 01:40:03,550
then code like ours that wants to have

1886
01:40:00,158 --> 01:40:07,238
multiple search buffers just can and

1887
01:40:03,550 --> 01:40:10,090
there's nothing weird about it right so

1888
01:40:07,238 --> 01:40:14,979
hopefully that will work if I recompile

1889
01:40:10,090 --> 01:40:18,699
this I'm hoping I will just get oh right

1890
01:40:14,979 --> 01:40:20,379
that lock has to happen out here I'm

1891
01:40:18,698 --> 01:40:22,509
hoping I will just get the exact same

1892
01:40:20,380 --> 01:40:26,140
behavior now and there'll be no

1893
01:40:22,510 --> 01:40:28,659
weirdness right uh so that should work

1894
01:40:26,140 --> 01:40:30,489
I can also still force this like I don't

1895
01:40:28,658 --> 01:40:32,349
know if we want to or not I'm guessing

1896
01:40:30,488 --> 01:40:34,389
we don't because I'm trying to control

1897
01:40:32,350 --> 01:40:36,789
that now but like you could also put it

1898
01:40:34,390 --> 01:40:38,650
here and just pass the buffer ID cuz

1899
01:40:36,789 --> 01:40:41,380
lock dump buffer will split the buffer

1900
01:40:38,649 --> 01:40:45,569
ID out to the name if you need it to and

1901
01:40:41,380 --> 01:40:45,569
stuff like that so I think that's fine

1902
01:40:48,069 --> 01:40:54,799
okay so now that we've done that I

1903
01:40:53,180 --> 01:40:56,690
should be able to call this function

1904
01:40:54,800 --> 01:41:01,159
instead with the things that I actually

1905
01:40:56,689 --> 01:41:03,049
need and it should work so instead of

1906
01:41:01,159 --> 01:41:05,149
calling lists all substring locations

1907
01:41:03,050 --> 01:41:08,690
case-insensitive i need to make a new

1908
01:41:05,149 --> 01:41:11,449
function that will do this thing that we

1909
01:41:08,689 --> 01:41:13,519
actually needed to do and it'll call

1910
01:41:11,449 --> 01:41:14,929
this function here and it will call it

1911
01:41:13,520 --> 01:41:17,660
with a bunch of stuff that I don't

1912
01:41:14,930 --> 01:41:19,670
understand and so we're going to have to

1913
01:41:17,659 --> 01:41:24,050
actually sort of comb through that

1914
01:41:19,670 --> 01:41:25,880
custom source code to like figure out

1915
01:41:24,050 --> 01:41:29,300
what we actually need to do to prep this

1916
01:41:25,880 --> 01:41:31,250
function so that's our next job custom

1917
01:41:29,300 --> 01:41:35,449
commands sig here we'll just call this

1918
01:41:31,250 --> 01:41:44,119
Casey list I'm gonna literally call it

1919
01:41:35,449 --> 01:41:46,309
the same darn thing and so we'll

1920
01:41:44,119 --> 01:41:48,470
probably call this something like f bar

1921
01:41:46,310 --> 01:41:49,789
will probably move so eventually what

1922
01:41:48,470 --> 01:41:52,280
we're gonna do when we want these things

1923
01:41:49,789 --> 01:41:54,050
to store the ops that they did we're

1924
01:41:52,279 --> 01:41:56,269
gonna start moving all of these commands

1925
01:41:54,050 --> 01:41:59,150
into the F bar and the F bar will like

1926
01:41:56,270 --> 01:42:01,960
use the ops that happen automatically

1927
01:41:59,149 --> 01:42:04,639
and stuff like that you know it'll get

1928
01:42:01,960 --> 01:42:06,470
it'll be all mr. fancy pants up in here

1929
01:42:04,640 --> 01:42:08,180
and and all that but for the moment

1930
01:42:06,470 --> 01:42:10,250
right we're just trying to be like basic

1931
01:42:08,180 --> 01:42:14,270
baby steps start to put things in the

1932
01:42:10,250 --> 01:42:17,238
correct place so now let's go try to

1933
01:42:14,270 --> 01:42:20,090
recreate that function call chain one

1934
01:42:17,238 --> 01:42:23,269
thing at a time and so I'm first gonna

1935
01:42:20,090 --> 01:42:31,010
go to that list all sub screen occasions

1936
01:42:23,270 --> 01:42:33,560
case-insensitive and we should be able

1937
01:42:31,010 --> 01:42:36,010
to just do the same thing so if I come

1938
01:42:33,560 --> 01:42:39,260
back in here and I just paste that in

1939
01:42:36,010 --> 01:42:40,579
you know we need this target view and

1940
01:42:39,260 --> 01:42:41,360
then oh well I guess that's it so then

1941
01:42:40,579 --> 01:42:43,939
we're just gonna do this query

1942
01:42:41,359 --> 01:42:46,009
parameters now for getting the target

1943
01:42:43,939 --> 01:42:48,079
view again I just want the search buffer

1944
01:42:46,010 --> 01:42:50,380
and that true stuff so in terms of the

1945
01:42:48,079 --> 01:42:53,059
target new I think I do want to do this

1946
01:42:50,380 --> 01:42:54,529
later I might change my mind about where

1947
01:42:53,060 --> 01:42:55,789
that's gonna happen but for now it can

1948
01:42:54,529 --> 01:42:58,789
just happen in the same buffer you were

1949
01:42:55,789 --> 01:42:59,600
normally using for now right so we'll do

1950
01:42:58,789 --> 01:43:02,180
that

1951
01:42:59,600 --> 01:43:08,690
now then we need to go to this right

1952
01:43:02,180 --> 01:43:18,289
here right list query parameters and so

1953
01:43:08,689 --> 01:43:25,669
here we needed to do this and then here

1954
01:43:18,289 --> 01:43:29,359
we need to do this and then at that

1955
01:43:25,670 --> 01:43:34,609
point I think we can dispatch to this he

1956
01:43:29,359 --> 01:43:35,000
says so confidently but I think that's

1957
01:43:34,609 --> 01:43:36,679
it

1958
01:43:35,000 --> 01:43:40,729
right because then we've we've gotten

1959
01:43:36,680 --> 01:43:43,220
down to the place where we split so

1960
01:43:40,729 --> 01:43:45,919
looking at this right here's the stuff

1961
01:43:43,220 --> 01:43:48,980
that we know that we want substring

1962
01:43:45,920 --> 01:43:52,930
whole world case is sensitive so we can

1963
01:43:48,979 --> 01:43:56,029
actually simplify this whole rigmarole

1964
01:43:52,930 --> 01:43:58,610
by just welding it together we don't

1965
01:43:56,029 --> 01:44:00,649
need any parameterization here at the

1966
01:43:58,609 --> 01:44:02,119
moment because we only support one thing

1967
01:44:00,649 --> 01:44:04,129
now in the future we might support more

1968
01:44:02,119 --> 01:44:06,229
and then I'll break it out a little

1969
01:44:04,130 --> 01:44:07,640
differently but there we go and then of

1970
01:44:06,229 --> 01:44:10,939
course we also don't need to call this

1971
01:44:07,640 --> 01:44:13,610
thing until we actually know that we got

1972
01:44:10,939 --> 01:44:15,019
back a query string okay so that gets

1973
01:44:13,609 --> 01:44:16,639
back a quarry string and stuffs it in

1974
01:44:15,020 --> 01:44:19,460
that space thing or whatever that's fine

1975
01:44:16,640 --> 01:44:21,470
don't care and then we call this thing

1976
01:44:19,460 --> 01:44:25,130
what you can see here is I don't know

1977
01:44:21,470 --> 01:44:28,520
about the heap scratch stuff and the

1978
01:44:25,130 --> 01:44:30,770
strings count nonsense so I got to go

1979
01:44:28,520 --> 01:44:35,260
see what we did there exactly in terms

1980
01:44:30,770 --> 01:44:35,260
of how we were passing this stuff in so

1981
01:44:35,500 --> 01:44:42,890
like looking at the count the count is

1982
01:44:40,220 --> 01:44:44,690
just one and the strings are just the

1983
01:44:42,890 --> 01:44:48,500
address of this so it looks like I could

1984
01:44:44,689 --> 01:44:50,779
have done multiple strings that you

1985
01:44:48,500 --> 01:44:53,859
search for at the same time and you know

1986
01:44:50,779 --> 01:44:53,859
that's pretty cool

1987
01:45:07,979 --> 01:45:16,589
so really what I want there is like you

1988
01:45:11,100 --> 01:45:19,110
know string counts and strings and like

1989
01:45:16,590 --> 01:45:22,110
at the moment it doesn't actually work

1990
01:45:19,109 --> 01:45:28,380
but you know you could imagine at some

1991
01:45:22,109 --> 01:45:31,289
point it actually did so for right now

1992
01:45:28,380 --> 01:45:34,560
we'll just funk it exactly the way that

1993
01:45:31,289 --> 01:45:37,260
it was being flung funked before and

1994
01:45:34,560 --> 01:45:38,340
then later we'll figure out how we might

1995
01:45:37,260 --> 01:45:42,289
take advantage of that feature because

1996
01:45:38,340 --> 01:45:45,930
that's a pretty cool feature I like that

1997
01:45:42,289 --> 01:45:48,029
keep scratch let's hope those get past a

1998
01:45:45,930 --> 01:45:50,490
custom commands' thing I have no idea

1999
01:45:48,029 --> 01:45:54,229
I'm just gonna hope that they do buffer

2000
01:45:50,489 --> 01:45:58,019
ID is actually pretty easy for us right

2001
01:45:54,229 --> 01:46:01,469
that's just getting that target F in so

2002
01:45:58,020 --> 01:46:05,280
in here where we do get target F in I

2003
01:46:01,470 --> 01:46:08,730
can just have that happen whenever we

2004
01:46:05,279 --> 01:46:11,039
get a valid one of these whenever we get

2005
01:46:08,729 --> 01:46:14,279
a valid search string I can just say

2006
01:46:11,039 --> 01:46:21,149
look give me the bin and then that will

2007
01:46:14,279 --> 01:46:25,399
take care of this right I don't know if

2008
01:46:21,149 --> 01:46:29,549
that's gonna work we're gonna try and

2009
01:46:25,399 --> 01:46:31,909
hopefully not fail I think that's all we

2010
01:46:29,550 --> 01:46:31,909
need

2011
01:46:32,840 --> 01:46:38,279
so heap and scratch I don't know how to

2012
01:46:35,760 --> 01:46:45,720
get those so let's take a look at how

2013
01:46:38,279 --> 01:46:51,509
those were happening before because I'm

2014
01:46:45,720 --> 01:46:53,369
pretty sure list query parameters

2015
01:46:51,510 --> 01:46:58,949
already had them by the time we got down

2016
01:46:53,369 --> 01:47:01,349
here so they all must have came from the

2017
01:46:58,949 --> 01:47:04,639
list all locations not blah blah blah

2018
01:47:01,350 --> 01:47:04,640
blah blah right like the

2019
01:47:10,439 --> 01:47:15,639
so it's just passing the global heap in

2020
01:47:13,180 --> 01:47:20,920
the global partition is that that's what

2021
01:47:15,640 --> 01:47:24,100
it's passing right I don't really

2022
01:47:20,920 --> 01:47:25,810
understand why it needs those two things

2023
01:47:24,100 --> 01:47:27,610
but I'm guessing that the reason is

2024
01:47:25,810 --> 01:47:31,390
because you might want it to use a

2025
01:47:27,609 --> 01:47:40,299
separate off band heaps sometimes I

2026
01:47:31,390 --> 01:47:44,470
don't know why all right

2027
01:47:40,300 --> 01:47:50,579
anyway let's let's just see if that

2028
01:47:44,470 --> 01:47:53,140
works so if I if I launched this guy and

2029
01:47:50,579 --> 01:47:56,350
we try some searches let's see if they

2030
01:47:53,140 --> 01:47:59,440
work so the first thing we do is let's

2031
01:47:56,350 --> 01:48:03,450
again switch the project to handmade ray

2032
01:47:59,439 --> 01:48:08,049
since that's our little test thing now

2033
01:48:03,449 --> 01:48:10,510
what I'd like to do is say search for

2034
01:48:08,050 --> 01:48:14,409
everywhere the word ray appears that

2035
01:48:10,510 --> 01:48:16,000
should probably do it right oh and also

2036
01:48:14,409 --> 01:48:17,859
I guess let me switch to a particular

2037
01:48:16,000 --> 01:48:20,890
buffer here so we'll switch to buffer 4

2038
01:48:17,859 --> 01:48:23,019
and we will search for the word ray so

2039
01:48:20,890 --> 01:48:24,880
here's all the word ray and I should be

2040
01:48:23,020 --> 01:48:26,710
able to like loop through all of the

2041
01:48:24,880 --> 01:48:29,470
things for the word ray now and that is

2042
01:48:26,710 --> 01:48:32,590
happening right let's go to buffer 5 and

2043
01:48:29,470 --> 01:48:34,750
now search for the word Lane right so

2044
01:48:32,590 --> 01:48:36,730
here's all the places that Lane goes and

2045
01:48:34,750 --> 01:48:37,319
I can switch between them and so now for

2046
01:48:36,729 --> 01:48:46,869
the money

2047
01:48:37,319 --> 01:48:48,969
switch back to 4 oh yeah yeah awesome so

2048
01:48:46,869 --> 01:48:51,010
this is great just this alone will make

2049
01:48:48,970 --> 01:48:52,869
my life so much easier just being able

2050
01:48:51,010 --> 01:48:55,890
to have search buffers up this is going

2051
01:48:52,869 --> 01:48:59,109
to be good all right so that's great

2052
01:48:55,890 --> 01:49:01,660
let's take a break now it's about time

2053
01:48:59,109 --> 01:49:03,159
for the stream to be over does anyone

2054
01:49:01,659 --> 01:49:05,439
have any quick questions I'll probably

2055
01:49:03,159 --> 01:49:06,760
come back and do a second one because

2056
01:49:05,439 --> 01:49:08,259
I'm kind of psyched this is getting

2057
01:49:06,760 --> 01:49:11,980
close to being what I wanted now I just

2058
01:49:08,260 --> 01:49:15,579
need to start sucking up those opps into

2059
01:49:11,979 --> 01:49:16,889
the f bar and then I think we'll be in

2060
01:49:15,579 --> 01:49:19,059
good shape

2061
01:49:16,890 --> 01:49:19,900
hi Casey thanks so much Jeremy or do you

2062
01:49:19,060 --> 01:49:20,980
think the Rivini

2063
01:49:19,899 --> 01:49:22,658
benefits of programming language

2064
01:49:20,979 --> 01:49:25,988
resource files not based in plain text

2065
01:49:22,658 --> 01:49:27,849
yes I do but which are still edited in a

2066
01:49:25,988 --> 01:49:29,289
textual way my thought is that they

2067
01:49:27,850 --> 01:49:31,150
would be in a binary format optimized

2068
01:49:29,289 --> 01:49:32,019
for fast compile times with possibility

2069
01:49:31,149 --> 01:49:33,309
of embedding images and other media

2070
01:49:32,020 --> 01:49:35,140
files documentation is I'm more

2071
01:49:33,310 --> 01:49:36,130
intelligent factoring in mind the search

2072
01:49:35,140 --> 01:49:38,920
and replace you think that such a

2073
01:49:36,130 --> 01:49:40,060
language could be blah blah blah I can't

2074
01:49:38,920 --> 01:49:41,980
see the rest of it because it got cut

2075
01:49:40,060 --> 01:49:46,630
off anyway

2076
01:49:41,979 --> 01:49:47,649
yes to all of that I feel like we should

2077
01:49:46,630 --> 01:49:48,489
be moving in that direction I feel like

2078
01:49:47,649 --> 01:49:50,559
we should have moved in that direction a

2079
01:49:48,488 --> 01:49:53,829
long time ago I don't think visual

2080
01:49:50,560 --> 01:49:57,100
programming has to mean a disastrous

2081
01:49:53,829 --> 01:49:59,408
collection of crazy wiring like a seder

2082
01:49:57,100 --> 01:50:01,590
graph I think there's a lot of other

2083
01:49:59,408 --> 01:50:08,408
ways that visual programming can happen

2084
01:50:01,590 --> 01:50:10,270
and so I feel like you should 100%

2085
01:50:08,408 --> 01:50:12,549
explore that Avenue if it's something

2086
01:50:10,270 --> 01:50:15,280
that excites you because we we need it

2087
01:50:12,550 --> 01:50:16,810
and there's a hundred thousand things

2088
01:50:15,279 --> 01:50:20,829
you can think of that might work well

2089
01:50:16,810 --> 01:50:22,960
and the problem is no you're gonna have

2090
01:50:20,829 --> 01:50:25,090
to experiment right like the only way to

2091
01:50:22,960 --> 01:50:27,369
know is to experiment I already did one

2092
01:50:25,090 --> 01:50:29,730
right I did an experiment on that that

2093
01:50:27,369 --> 01:50:32,649
was the math inside comments thing right

2094
01:50:29,729 --> 01:50:35,529
that was an example of how do i all mint

2095
01:50:32,649 --> 01:50:37,988
this text file so that in addition to it

2096
01:50:35,529 --> 01:50:39,488
having the text that's in it I also want

2097
01:50:37,988 --> 01:50:40,988
you to parse a comment and if you see

2098
01:50:39,488 --> 01:50:43,329
something that looks like math perform

2099
01:50:40,988 --> 01:50:45,279
the operation right so a very simple

2100
01:50:43,329 --> 01:50:49,029
addition could save me a lot of time

2101
01:50:45,279 --> 01:50:50,529
it's nice and handy right do the same

2102
01:50:49,029 --> 01:50:52,210
thing for diagrams let me draw a diagram

2103
01:50:50,529 --> 01:50:53,679
in the comment remember it in the

2104
01:50:52,210 --> 01:50:55,600
comment and when you load it just parse

2105
01:50:53,679 --> 01:50:57,760
and show it those are some easy ways you

2106
01:50:55,600 --> 01:51:00,429
can get started without having to

2107
01:50:57,760 --> 01:51:01,810
reinvent the entire system and you know

2108
01:51:00,429 --> 01:51:03,130
see where it goes and you can take it

2109
01:51:01,810 --> 01:51:04,300
further and further and further right

2110
01:51:03,130 --> 01:51:05,739
and you know like you said go to a

2111
01:51:04,300 --> 01:51:07,029
binary file format at some point if

2112
01:51:05,738 --> 01:51:08,919
you've got a robust enough to latch in

2113
01:51:07,029 --> 01:51:10,479
that has dips and stuff the reason it's

2114
01:51:08,920 --> 01:51:11,920
hard to go to a binary file format right

2115
01:51:10,479 --> 01:51:13,718
away is because you lose all of your

2116
01:51:11,920 --> 01:51:16,779
standard programming tools you lose

2117
01:51:13,719 --> 01:51:18,579
merging tools diffing tools source code

2118
01:51:16,779 --> 01:51:20,859
control gets confused that sort of stuff

2119
01:51:18,579 --> 01:51:30,519
so sometimes it helps to start kind of

2120
01:51:20,859 --> 01:51:32,859
slowly when you when you want to do

2121
01:51:30,520 --> 01:51:33,790
incremental stuff like that when you

2122
01:51:32,859 --> 01:51:35,229
want to do

2123
01:51:33,789 --> 01:51:36,579
since Aaron when you want to do big

2124
01:51:35,229 --> 01:51:39,099
change like that sometimes it helps to

2125
01:51:36,579 --> 01:51:39,789
be more incremental pet the cat hello

2126
01:51:39,100 --> 01:51:43,210
Molly

2127
01:51:39,789 --> 01:51:50,159
how are you doing I'm sorry to wake you

2128
01:51:43,210 --> 01:51:50,159
Stream wanted to say hi that's good kid

2129
01:51:52,260 --> 01:51:56,820
okay I'll leave you alone now you're

2130
01:51:54,220 --> 01:51:56,820
getting good son

2131
01:52:06,460 --> 01:52:10,100
he's a holly rocket named after Molly or

2132
01:52:08,930 --> 01:52:14,770
the other way around the other way

2133
01:52:10,100 --> 01:52:17,780
around Anna actually named Molly Molly

2134
01:52:14,770 --> 01:52:18,890
after Molly rocket thanks to the

2135
01:52:17,779 --> 01:52:20,449
recommendation to try to make a single

2136
01:52:18,890 --> 01:52:21,560
head her video codec I've been having

2137
01:52:20,449 --> 01:52:23,630
fun thinking of all the different things

2138
01:52:21,560 --> 01:52:25,160
that I would want for a codec like ezel

2139
01:52:23,630 --> 01:52:26,239
multifarious to do encoding etc that

2140
01:52:25,159 --> 01:52:27,529
wouldn't have happened if I just

2141
01:52:26,239 --> 01:52:29,960
contributed to one of the big systems

2142
01:52:27,529 --> 01:52:33,259
awesome I hope you make something cool

2143
01:52:29,960 --> 01:52:35,720
like I said if it's a what if it's a

2144
01:52:33,260 --> 01:52:38,570
simple codec you can just include it

2145
01:52:35,720 --> 01:52:41,270
doesn't have to be that great right like

2146
01:52:38,569 --> 01:52:44,329
the ease of use of it would be so much

2147
01:52:41,270 --> 01:52:45,470
better than like mp4 or something that

2148
01:52:44,329 --> 01:52:47,300
you could just say ah

2149
01:52:45,470 --> 01:52:50,690
just throw it in there even if the files

2150
01:52:47,300 --> 01:52:51,980
are twice as big as mp4 and are don't

2151
01:52:50,689 --> 01:52:53,569
look as good or whatever you know who

2152
01:52:51,979 --> 01:52:58,269
know I think it would still be useful

2153
01:52:53,569 --> 01:53:01,039
because if if you're if you just need it

2154
01:52:58,270 --> 01:53:02,360
to work and you don't want to spend a

2155
01:53:01,039 --> 01:53:03,890
lot of effort on it then you're willing

2156
01:53:02,359 --> 01:53:05,809
to give some things up so it doesn't

2157
01:53:03,890 --> 01:53:08,170
have to be the world's grip greatest

2158
01:53:05,810 --> 01:53:10,580
video codec to still be useful right

2159
01:53:08,170 --> 01:53:14,750
because it can be optimized for just

2160
01:53:10,579 --> 01:53:16,489
simple keeping it simple and that's its

2161
01:53:14,750 --> 01:53:18,020
own that has its own value

2162
01:53:16,489 --> 01:53:19,779
are you worried your hop starts

2163
01:53:18,020 --> 01:53:23,540
customizations are plucking too hard

2164
01:53:19,779 --> 01:53:24,859
well I guess what I would say is it's

2165
01:53:23,539 --> 01:53:28,899
worth remembering that all

2166
01:53:24,859 --> 01:53:30,829
government-sponsored recreational back

2167
01:53:28,899 --> 01:53:33,859
recreational activities are clean and

2168
01:53:30,829 --> 01:53:35,720
efficient and so while I am somewhat

2169
01:53:33,859 --> 01:53:40,819
worried about that I feel like that sort

2170
01:53:35,720 --> 01:53:43,970
of mitigate some of the concern all

2171
01:53:40,819 --> 01:53:45,380
right I'm gonna wrap it up and I

2172
01:53:43,970 --> 01:53:48,440
probably will do another stream but

2173
01:53:45,380 --> 01:53:49,579
we'll take a break for I don't know how

2174
01:53:48,439 --> 01:53:50,599
long we'll take a break but we'll take a

2175
01:53:49,579 --> 01:53:52,609
break for a little while

2176
01:53:50,600 --> 01:53:54,050
thanks for joining me for the four coat

2177
01:53:52,609 --> 01:53:55,369
of customization I'm gonna come back I

2178
01:53:54,050 --> 01:53:59,600
think I'm interested in what we're doing

2179
01:53:55,369 --> 01:54:02,119
here so I kind of want to keep going

2180
01:53:59,600 --> 01:54:04,039
down that route so thanks for joining me

2181
01:54:02,119 --> 01:54:05,659
and maybe we will come back and play

2182
01:54:04,039 --> 01:54:09,699
with this a little bit more a little

2183
01:54:05,659 --> 01:54:09,699
later on alright take it easy everybody

