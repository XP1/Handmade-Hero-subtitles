1
00:00:00,100 --> 00:00:02,100
According start recording.

2
00:00:03,000 --> 00:00:03,500
Hello everyone.

3
00:00:03,500 --> 00:00:04,900
Welcome to handmade hero.

4
00:00:04,900 --> 00:00:08,300
The show where we could complete game from scratch.

5
00:00:08,800 --> 00:00:11,100
Every absolutely everything is on the stream.

6
00:00:11,100 --> 00:00:12,500
There's no hidden secret things.

7
00:00:12,500 --> 00:00:12,900
I do.

8
00:00:12,900 --> 00:00:16,700
Well, people aren't watching and we basically use new engine know

9
00:00:16,700 --> 00:00:17,100
libraries.

10
00:00:17,100 --> 00:00:22,800
No nothing here, just straight-up C plus, plus compiler and and

11
00:00:22,800 --> 00:00:25,200
currently we use the C runtime library, but we're thinking that

12
00:00:25,200 --> 00:00:28,800
probably eventually will get ready even that by the end.

13
00:00:29,400 --> 00:00:29,900
So we're trying

14
00:00:30,000 --> 00:00:31,400
And very hard to basically, show.

15
00:00:31,400 --> 00:00:34,600
Absolutely everything that happens in the execution of a game.

16
00:00:34,600 --> 00:00:39,200
So that literally every last little thing that goes into making a game

17
00:00:39,200 --> 00:00:41,900
Run, we explore on the stream, explain how it works.

18
00:00:42,000 --> 00:00:45,500
Show how its developed and kind of give insight into why it's

19
00:00:45,500 --> 00:00:47,600
important why that piece does what it does.

20
00:00:47,600 --> 00:00:50,700
The way that it does, so that you can really Come Away with a complete

21
00:00:50,700 --> 00:00:54,800
understanding of everything that happens when a game runs on a

22
00:00:54,800 --> 00:00:55,400
computer.

23
00:00:56,400 --> 00:00:58,900
And I guess on a console for that matter to, they're not that

24
00:00:58,900 --> 00:00:59,500
different.

25
00:00:59,500 --> 00:01:01,100
There's some nice things about consoles.

26
00:01:01,100 --> 00:01:03,400
You don't get on PCS where you kind of know the hardware a little bit

27
00:01:03,400 --> 00:01:06,800
better because there's, you know, a very specific set of it.

28
00:01:07,100 --> 00:01:09,100
But on the whole they're not that different these days.

29
00:01:09,100 --> 00:01:13,700
They're very, very similar used to be the case that consoles were very

30
00:01:13,700 --> 00:01:14,800
different from PCS.

31
00:01:15,100 --> 00:01:15,600
Not anymore.

32
00:01:15,600 --> 00:01:17,200
They're basically just little pieces in a box.

33
00:01:17,900 --> 00:01:23,000
Anyway, if you have pre-ordered the game on handmade hero dot-org, you

34
00:01:23,000 --> 00:01:24,300
can download the source code.

35
00:01:24,300 --> 00:01:26,000
You should have gotten a link in your email that allows

36
00:01:26,200 --> 00:01:27,000
You to do that.

37
00:01:27,000 --> 00:01:30,100
And if you would like to follow along with today's coding, what you

38
00:01:30,100 --> 00:01:34,400
can do is, you can go unpack day 60 because we are on day 61 right

39
00:01:34,400 --> 00:01:34,600
now.

40
00:01:34,600 --> 00:01:38,400
So just unpacked day, 60s source code from the source code ZIP file.

41
00:01:38,400 --> 00:01:42,400
It's like there's a zip file that you download has just everyday zip

42
00:01:42,400 --> 00:01:46,600
just sitting in there, so you can grab that one out, unpack it, and

43
00:01:46,600 --> 00:01:48,400
you will be exactly where I am today.

44
00:01:48,800 --> 00:01:55,600
So that is that, let's go ahead and get started with with the coating.

45
00:01:56,200 --> 00:02:00,800
Right now where we're at is we are trying to go through and make

46
00:02:01,100 --> 00:02:05,900
essentially, what is sort of a placeholder version of the game,

47
00:02:06,100 --> 00:02:10,400
something that just has a little bit of everything, so that we can see

48
00:02:10,400 --> 00:02:13,600
the sorts of structure that emerges in the code.

49
00:02:13,900 --> 00:02:15,200
And that is what we will be basing.

50
00:02:15,200 --> 00:02:18,200
Our actual industrial-strength engine code around.

51
00:02:18,700 --> 00:02:21,600
So, we've basically done little dummy, implementations of everything

52
00:02:21,900 --> 00:02:25,800
which are okay, but not great, and they're just there to get something

53
00:02:25,800 --> 00:02:26,000
in.

54
00:02:26,100 --> 00:02:29,700
Quickly that were able to sort of test with and see the structure of

55
00:02:29,700 --> 00:02:34,600
now what I did before on the stream, just before I guess it would have

56
00:02:34,600 --> 00:02:38,400
been Friday morning was, I added hit points and you can see that now

57
00:02:38,400 --> 00:02:41,700
we draw some little hit points below the guy, he's got three little

58
00:02:41,700 --> 00:02:42,500
hit points there.

59
00:02:42,500 --> 00:02:46,000
We also have this little familiar who follow him around and then we

60
00:02:46,000 --> 00:02:49,500
have this little, we just use the Torso from the guy to draw as a

61
00:02:49,500 --> 00:02:50,700
little monster that sitting there.

62
00:02:50,700 --> 00:02:55,000
And so we kind of wanted to do now is just get some monster activity

63
00:02:55,000 --> 00:02:55,100
in.

64
00:02:55,100 --> 00:02:56,100
So, we kind of wanted to

65
00:02:56,100 --> 00:02:59,800
To make it so that this monster could somehow maybe follow the player.

66
00:03:00,000 --> 00:03:03,300
Bit maybe attack the player a little bit and maybe we'll give the

67
00:03:03,300 --> 00:03:06,500
monster some hit points as well and then allow it so that the monster

68
00:03:06,500 --> 00:03:10,300
and the hero can sort of trade damage in some reasonable way.

69
00:03:10,300 --> 00:03:15,600
Again, just so we can sort of build up an understanding in code of

70
00:03:15,600 --> 00:03:18,600
what the sorts of operations are and how they have to occur.

71
00:03:18,600 --> 00:03:24,300
So that when we start building the systems for real, we will not make

72
00:03:24,300 --> 00:03:27,500
sort of the obvious mistakes that a lot of people make when they start

73
00:03:27,500 --> 00:03:30,000
trying to write systems without any knowledge of the

74
00:03:30,000 --> 00:03:31,400
things that need to run on those systems.

75
00:03:31,400 --> 00:03:34,400
That's a very common mistake, not just for amateurs, but also, for a

76
00:03:34,400 --> 00:03:35,600
professional programmers.

77
00:03:35,800 --> 00:03:38,600
A lot of times they will make the mistake of writing a system before

78
00:03:38,600 --> 00:03:42,400
they actually know how that system should be used.

79
00:03:42,400 --> 00:03:43,500
And that's a really big mistake.

80
00:03:43,500 --> 00:03:45,800
So I always say right the users code first and that's exactly what

81
00:03:45,800 --> 00:03:46,300
we're doing.

82
00:03:46,700 --> 00:03:50,100
We are basically making a bunch of synthetic usage code so we can see

83
00:03:50,600 --> 00:03:51,500
what we need to do.

84
00:03:52,700 --> 00:03:55,100
So right now we don't really have anything.

85
00:03:55,100 --> 00:03:56,800
Any even way to attack.

86
00:03:57,200 --> 00:04:00,200
We do, have a way to jump for no real reason.

87
00:04:00,500 --> 00:04:03,600
So what I think I might do is go ahead and replace that.

88
00:04:03,600 --> 00:04:06,800
I'm going to move that jump over to the spacebar and I'm going to go

89
00:04:06,800 --> 00:04:10,900
ahead and bind the arrow keys over to just something simple.

90
00:04:10,900 --> 00:04:13,500
Like maybe a standard for way shooting kind of a thing.

91
00:04:13,500 --> 00:04:19,700
Just something where I can attack basically in a direction, right?

92
00:04:20,600 --> 00:04:22,300
Maybe something where I can can just

93
00:04:22,500 --> 00:04:25,700
Packing a direction by pushing, one of the keys and then we will see,

94
00:04:25,700 --> 00:04:29,000
you know, when I do an attack in a particular direction, I want to

95
00:04:29,000 --> 00:04:34,900
make it so that I can count the fact that if that hit a monster that's

96
00:04:34,900 --> 00:04:38,900
in the area and and take away hip points from that monster if so.

97
00:04:39,200 --> 00:04:40,100
So I want to do that.

98
00:04:40,100 --> 00:04:42,300
And in order to do that, I would also have to give our little torso

99
00:04:42,300 --> 00:04:43,000
monster.

100
00:04:43,100 --> 00:04:46,600
They're a hit points himself because he would need something to

101
00:04:46,600 --> 00:04:47,500
decrement from.

102
00:04:47,900 --> 00:04:50,900
So that seems like the most straightforward thing to continue with as

103
00:04:50,900 --> 00:04:51,500
we go.

104
00:04:51,900 --> 00:04:52,300
So I'm

105
00:04:52,400 --> 00:04:54,600
Going to go ahead and get that going.

106
00:04:55,000 --> 00:04:59,900
So if I want to add hit points to the monster, what I would need to

107
00:04:59,900 --> 00:05:00,000
do.

108
00:05:00,000 --> 00:05:02,200
Well, of course, one thing I need to do is open the editor.

109
00:05:03,700 --> 00:05:04,600
To say the least.

110
00:05:05,600 --> 00:05:08,400
So what I would need to do here is I need to make sure that the

111
00:05:08,400 --> 00:05:11,800
monster can have hit points just like the hero can.

112
00:05:11,800 --> 00:05:14,400
And so right now we haven't split out our entity data.

113
00:05:14,400 --> 00:05:17,400
We just have all the end of the data in one place, which basically

114
00:05:17,400 --> 00:05:21,100
means that, you know, there already is, the concept of hit points in

115
00:05:21,100 --> 00:05:21,700
every entity.

116
00:05:21,700 --> 00:05:25,400
Right now, which again is something that we at least suspect, we will

117
00:05:25,400 --> 00:05:29,600
actually not want to do in the final entity system.

118
00:05:30,000 --> 00:05:32,500
But for now that's, you know, we're just putting things in here so

119
00:05:32,500 --> 00:05:33,300
that we can see how they work.

120
00:05:33,400 --> 00:05:35,700
Were so that means everyone already actually does.

121
00:05:35,700 --> 00:05:36,700
Technically have hit points.

122
00:05:36,700 --> 00:05:39,200
We just need to initialize them to something at the start and then we

123
00:05:39,200 --> 00:05:39,700
need to draw them.

124
00:05:39,700 --> 00:05:40,200
Right?

125
00:05:40,200 --> 00:05:43,700
So what we need to do here is we need to go down to the hit points and

126
00:05:43,700 --> 00:05:48,800
we need to see those are actually getting drawn when we draw our

127
00:05:48,800 --> 00:05:49,300
player.

128
00:05:49,300 --> 00:05:50,800
Right here is the hero drawing code.

129
00:05:50,800 --> 00:05:54,800
Here is the code that draws the hit points, that won't really be any

130
00:05:54,800 --> 00:05:56,400
different and we don't really want it to be different.

131
00:05:56,400 --> 00:05:57,600
Presumably, we want to draw.

132
00:05:57,600 --> 00:05:58,100
Hit points.

133
00:05:58,100 --> 00:05:59,700
Basically with the same code, no matter.

134
00:06:00,000 --> 00:06:02,600
They are and then we just tweaked some parameters like maybe what

135
00:06:02,600 --> 00:06:04,100
color they are something like that.

136
00:06:04,100 --> 00:06:06,700
But for the most part, we don't want to redo the logic.

137
00:06:07,300 --> 00:06:09,800
So no matter how we end up drawing hit points, I think we're going to

138
00:06:09,800 --> 00:06:10,600
want that shared.

139
00:06:11,000 --> 00:06:13,700
So basically, what I would say here is we want something like draw hip

140
00:06:13,700 --> 00:06:15,300
points right?

141
00:06:15,400 --> 00:06:18,300
That we can just call on this guy.

142
00:06:18,900 --> 00:06:20,300
And that's just going to be this code here.

143
00:06:20,300 --> 00:06:24,100
That way when we go down to the monstar, we can draw hit points on the

144
00:06:24,100 --> 00:06:27,000
monstar and the monstar will have them as well.

145
00:06:27,600 --> 00:06:29,800
So I'm going to go up here and just just put that

146
00:06:30,000 --> 00:06:30,900
at code in there.

147
00:06:32,100 --> 00:06:37,000
And I'm going to have this be called, Rohit points, like so, and I'm

148
00:06:37,000 --> 00:06:38,600
going to just pull that out.

149
00:06:38,600 --> 00:06:38,800
Now.

150
00:06:38,800 --> 00:06:41,400
I need to call it multiple times and we just need to see what the

151
00:06:41,400 --> 00:06:42,000
stuff is.

152
00:06:42,100 --> 00:06:43,500
I actually need it to do.

153
00:06:44,300 --> 00:06:46,500
So, if you look here, there's not a whole lot to it.

154
00:06:46,500 --> 00:06:48,100
Basically, we've got that low entity.

155
00:06:48,300 --> 00:06:53,500
So we have something here where we want to do the low entity, it wants

156
00:06:53,500 --> 00:06:57,800
access to that when it's doing this positioning here.

157
00:06:57,900 --> 00:07:00,000
It looks like it wants a piece group, right?

158
00:07:00,000 --> 00:07:01,800
It wants to be able to draw the

159
00:07:02,100 --> 00:07:04,800
The things on onto one of these peace groups.

160
00:07:04,900 --> 00:07:08,100
So let's go ahead and make sure that it has one of those as well.

161
00:07:08,200 --> 00:07:10,100
That's where it's going to put, its drawing information.

162
00:07:11,400 --> 00:07:12,000
Like so.

163
00:07:13,200 --> 00:07:23,000
And then looks like we just need really, that's about it.

164
00:07:23,000 --> 00:07:27,200
We just need an x coordinate for where these things are being drawn.

165
00:07:27,200 --> 00:07:30,100
And I think that's, that's just about it.

166
00:07:31,000 --> 00:07:33,600
And, in fact, I guess the piece group kind of takes care of that.

167
00:07:33,800 --> 00:07:34,300
Let's see here.

168
00:07:34,300 --> 00:07:35,500
Is that really all we need?

169
00:07:35,500 --> 00:07:36,400
What else do we need?

170
00:07:36,700 --> 00:07:37,000
Push?

171
00:07:37,000 --> 00:07:41,100
Push wrecked entity piece trip, right, so that's

172
00:07:41,300 --> 00:07:43,000
Doesn't doesn't take an address, but that's it.

173
00:07:43,000 --> 00:07:44,100
That was all we needed.

174
00:07:44,100 --> 00:07:48,400
So I guess we really don't have much work to do to move that out.

175
00:07:48,400 --> 00:07:49,700
That was really pretty trivial.

176
00:07:50,400 --> 00:07:52,900
So now our monstar can have them as well.

177
00:07:53,700 --> 00:07:56,800
And if our monstar is going to have them, we need to initialize.

178
00:07:56,800 --> 00:07:58,900
Those hit points to something.

179
00:07:59,500 --> 00:08:01,400
Because right here, you can see that we've got those.

180
00:08:01,600 --> 00:08:05,200
And so when we add our monstar, I'm again going to just pull out the

181
00:08:05,200 --> 00:08:09,800
code there, which is something like in it, hit points and then we'll

182
00:08:09,800 --> 00:08:11,100
just say for now that you say,

183
00:08:11,200 --> 00:08:15,600
Say the hit point count, you know, however many you actually wanted in

184
00:08:15,600 --> 00:08:20,500
there and and that will just do this code right here.

185
00:08:21,200 --> 00:08:26,000
So we'll pull that out like so and we'll go ahead and say that we do

186
00:08:26,000 --> 00:08:30,400
in it, hit points and we pass that that entity low, which is all it

187
00:08:30,400 --> 00:08:33,000
should really need and then how many hit points we want?

188
00:08:33,000 --> 00:08:37,200
Which in that case was 3 and I guess for the monstar the monstar can

189
00:08:37,200 --> 00:08:38,200
also have three.

190
00:08:38,700 --> 00:08:39,500
Why not?

191
00:08:40,299 --> 00:08:42,200
So we do the this right here.

192
00:08:42,799 --> 00:08:49,000
We will then have the low entity which we have a few low and that will

193
00:08:49,000 --> 00:08:51,800
go ahead and set it to the hit point count.

194
00:08:52,000 --> 00:08:55,200
We will want to assert obviously because we don't really have much in

195
00:08:55,200 --> 00:08:59,800
the way of flexibility here yet just to make sure that the

196
00:09:00,000 --> 00:09:04,600
Point array can actually store the number of hit points that it's

197
00:09:04,600 --> 00:09:07,700
asking us to do, because we're storing actual data with each hit

198
00:09:07,700 --> 00:09:08,000
point.

199
00:09:08,000 --> 00:09:10,500
So, it can each individual like heart.

200
00:09:10,500 --> 00:09:13,500
Essentially on the person can have perhaps potentially property

201
00:09:13,500 --> 00:09:14,300
associated with them.

202
00:09:15,000 --> 00:09:17,100
We're not sure where that's going quite yet.

203
00:09:17,100 --> 00:09:18,800
Those might be entities themselves in the future.

204
00:09:18,800 --> 00:09:19,400
We don't know.

205
00:09:20,000 --> 00:09:22,400
So we're kind of have a simpler system at the moment, but we met kind

206
00:09:22,400 --> 00:09:23,700
of Ratchet that up a little bit.

207
00:09:23,700 --> 00:09:24,200
We'll see.

208
00:09:25,000 --> 00:09:29,300
So anyway, we now have a situation where we've got the hit points and

209
00:09:29,300 --> 00:09:29,700
we need

210
00:09:30,000 --> 00:09:31,700
to initialize them all.

211
00:09:31,700 --> 00:09:35,800
So I'm going to go ahead here and do a hit point initialization Loop,

212
00:09:35,800 --> 00:09:39,600
where I just say, for every hit point that we have here.

213
00:09:40,500 --> 00:09:42,200
That's the basically, the max hit point.

214
00:09:42,200 --> 00:09:44,100
Count is getting me that information.

215
00:09:45,000 --> 00:09:49,900
I'm going to go ahead and set that that filled amount equal to

216
00:09:51,200 --> 00:09:51,900
something reasonable.

217
00:09:51,900 --> 00:09:52,300
All right.

218
00:09:52,300 --> 00:09:54,900
So we also need to see Point.

219
00:09:55,200 --> 00:09:59,900
Good point equals entity low hit point, plus the point.

220
00:10:00,400 --> 00:10:00,800
Sam.

221
00:10:01,700 --> 00:10:05,000
And then that hit point is just going to be Flags.

222
00:10:05,000 --> 00:10:08,200
There are no flags on this one and the filled amount equals fully

223
00:10:08,200 --> 00:10:09,600
filled essentially.

224
00:10:10,500 --> 00:10:13,400
So that's that's that.

225
00:10:14,100 --> 00:10:16,100
And so that will initialize our hit points.

226
00:10:16,100 --> 00:10:18,400
And so now, let's see if we actually get.

227
00:10:18,700 --> 00:10:19,000
Yes.

228
00:10:19,000 --> 00:10:20,500
So now we have monsters.

229
00:10:21,500 --> 00:10:26,000
Sorry, mon star are monstar and our hero both have hit points.

230
00:10:26,000 --> 00:10:29,300
Now are familiar doesn't because we decided or we didn't directly

231
00:10:29,300 --> 00:10:29,800
beside but we

232
00:10:30,100 --> 00:10:33,300
And go and add them to him, which I don't know if the familiars will

233
00:10:33,300 --> 00:10:34,200
have them or not.

234
00:10:34,200 --> 00:10:36,100
Possibly, some will some won't, we don't know.

235
00:10:37,000 --> 00:10:39,800
But now let's go ahead and make it so that we can attack our monstar

236
00:10:39,800 --> 00:10:42,200
and eventually kill our monstar as well.

237
00:10:42,400 --> 00:10:44,400
I think we probably want to be able to kill our monstar.

238
00:10:45,400 --> 00:10:46,400
So let's do that.

239
00:10:46,800 --> 00:10:50,500
So if we're going to attack we're going to need some way of attacking

240
00:10:50,800 --> 00:10:53,500
and I don't know if I actually put in anything.

241
00:10:53,500 --> 00:10:56,300
I don't think I have any any real Sprites in here yet.

242
00:10:57,500 --> 00:10:58,900
That would be related to this.

243
00:11:01,500 --> 00:11:01,800
Let's see.

244
00:11:01,800 --> 00:11:02,500
What's in here.

245
00:11:04,000 --> 00:11:07,000
In the handmade data, oops, that's the code directory and may data

246
00:11:07,000 --> 00:11:07,600
directory.

247
00:11:09,700 --> 00:11:10,300
Of course.

248
00:11:10,300 --> 00:11:13,900
We we know that Windows is bad at actually being able to display these

249
00:11:13,900 --> 00:11:16,100
but we should be able to sort of see what they are.

250
00:11:16,100 --> 00:11:18,400
Anyway, even though it's display is messed up.

251
00:11:20,500 --> 00:11:23,500
So there's a little Bolder thing I could use that as projectile.

252
00:11:23,500 --> 00:11:25,800
It's a bit large to say the least.

253
00:11:27,000 --> 00:11:28,000
What have I got in here?

254
00:11:28,000 --> 00:11:30,400
I don't think I have anything particularly good in here either.

255
00:11:30,900 --> 00:11:31,400
Yeah.

256
00:11:32,900 --> 00:11:38,100
Yeah, not a whole lot I can use, so, maybe that Boulder is going to

257
00:11:38,100 --> 00:11:39,000
have to be it.

258
00:11:40,200 --> 00:11:42,000
So let's go ahead and pick that one out.

259
00:11:42,700 --> 00:11:44,100
Whatever is the smallest one.

260
00:11:44,400 --> 00:11:47,800
I think that's probably the smallest one Rocco three.

261
00:11:48,400 --> 00:11:51,200
So we'll just basically say that that is kind of going to be our

262
00:11:51,200 --> 00:11:52,100
attack region.

263
00:11:53,200 --> 00:11:57,300
And so I want to make this I want to basically say for now, let's

264
00:11:57,300 --> 00:11:59,800
stick with the Zelda e style of

265
00:12:02,900 --> 00:12:05,900
And I know that originally in, Zelda, you had two different cases if

266
00:12:05,900 --> 00:12:08,700
you are full on Hearts Center projectile out and if you weren't it

267
00:12:08,700 --> 00:12:09,300
didn't.

268
00:12:09,700 --> 00:12:12,100
But let's go ahead and say for now, like we're just going to do

269
00:12:12,100 --> 00:12:13,900
essentially something that's like a sword swing.

270
00:12:14,400 --> 00:12:20,600
So we want something that is going to come, you know, be a hit region

271
00:12:20,600 --> 00:12:24,800
that lasts for a brief amount of time, next to the player, anything

272
00:12:24,800 --> 00:12:29,300
that gets touched by that is considered hit and take some damage, but

273
00:12:29,300 --> 00:12:30,600
it doesn't really do.

274
00:12:30,700 --> 00:12:32,500
Thing, you know beyond that.

275
00:12:33,800 --> 00:12:37,200
So there's a lot of ways we could Implement that and it's not

276
00:12:37,200 --> 00:12:39,300
necessarily immediately.

277
00:12:39,600 --> 00:12:41,400
Clear how we want to do that.

278
00:12:41,700 --> 00:12:44,200
It is a little bit confusing, right?

279
00:12:44,200 --> 00:12:48,900
Because there's many, many ways we could do it one way we could do it

280
00:12:48,900 --> 00:12:52,600
is to have that actually be a special state that occurs where someone

281
00:12:52,600 --> 00:12:53,200
is striking.

282
00:12:53,200 --> 00:12:55,400
And we know that that's the case and we actually have code

283
00:12:55,400 --> 00:12:56,600
specifically check for it.

284
00:12:57,100 --> 00:12:57,800
Another way to do.

285
00:12:57,800 --> 00:13:00,800
It is to have it so that it's basically piggybacked on top of an

286
00:13:00,800 --> 00:13:01,100
entity.

287
00:13:01,100 --> 00:13:03,400
So there actually is sort of a sword entity.

288
00:13:03,800 --> 00:13:08,100
That sword entity only comes out during the strike and during the

289
00:13:08,100 --> 00:13:13,200
strike if that entity collides with other entities, then we know that

290
00:13:13,200 --> 00:13:14,600
it has hit them right.

291
00:13:18,800 --> 00:13:19,600
So that

292
00:13:21,500 --> 00:13:23,100
I think is where I'd like to go with it.

293
00:13:30,300 --> 00:13:32,200
I basically like to make it so that

294
00:13:35,900 --> 00:13:36,600
Let's see here.

295
00:13:37,600 --> 00:13:39,500
Hmm, actually know how to do.

296
00:13:39,500 --> 00:13:40,700
Zoom in and out very well.

297
00:13:40,900 --> 00:13:42,100
Alright, there we go.

298
00:13:43,100 --> 00:13:44,300
There is zoom in and out.

299
00:13:44,300 --> 00:13:47,800
So what I decided to do, by the way, is I decided to start just saving

300
00:13:47,800 --> 00:13:49,500
these into the handmade hero directory.

301
00:13:49,700 --> 00:13:54,300
So, from now on, we should actually be in a situation where all of the

302
00:13:54,300 --> 00:13:57,700
drawings from now on are actually saved.

303
00:13:57,900 --> 00:14:01,700
And if you have Mischief or use the trial version, there's a, I think

304
00:14:01,700 --> 00:14:02,600
there's a trial version.

305
00:14:03,600 --> 00:14:04,800
Free version or something.

306
00:14:05,200 --> 00:14:07,500
If I know there is actually a full free version, if you have the free

307
00:14:07,500 --> 00:14:09,500
version, you can actually go and do it.

308
00:14:09,500 --> 00:14:13,100
So, from now on what I'm going to do is, I'm just going to take a look

309
00:14:13,100 --> 00:14:17,100
at the day number down here and I'll actually just kind of do like a

310
00:14:17,100 --> 00:14:23,100
day 61 Landmark up here and then so I'll try to draw kind of down

311
00:14:23,100 --> 00:14:25,800
inside this and then I'll move over as we go.

312
00:14:25,800 --> 00:14:28,300
So that way when you load it up you can go look at the drawings if

313
00:14:28,300 --> 00:14:29,000
people want to.

314
00:14:29,000 --> 00:14:31,500
I don't know if they do or not, but just in case since it's now with

315
00:14:31,500 --> 00:14:33,100
Mischief, it's easy for us to do that.

316
00:14:33,300 --> 00:14:34,100
I'll just do that.

317
00:14:35,900 --> 00:14:37,800
So, Kira is mainly the problem.

318
00:14:38,000 --> 00:14:40,500
What I was just saying is relatively straightforward, right?

319
00:14:40,500 --> 00:14:42,500
I've got a hero entity, right?

320
00:14:42,500 --> 00:14:43,900
Here's my hero entity.

321
00:14:44,400 --> 00:14:47,400
And if I had some other entity that was just generally, not visible.

322
00:14:47,400 --> 00:14:51,300
That's my sword strike entity and when it when you do the sword

323
00:14:51,300 --> 00:14:54,700
strike, you know, the sword comes out here and then anything that

324
00:14:54,700 --> 00:14:56,100
touches it takes damage.

325
00:14:56,500 --> 00:14:59,200
That's actually relatively easy to implement with what we already have

326
00:14:59,200 --> 00:14:59,800
because we already have

327
00:15:00,000 --> 00:15:03,800
Nobody to tell when things touch of the things obviously.

328
00:15:04,400 --> 00:15:08,900
But there is a kind of unusual circumstance that we have here, which

329
00:15:08,900 --> 00:15:10,400
is something that we hadn't addressed yet.

330
00:15:10,400 --> 00:15:13,400
Right, which is that the sword entity.

331
00:15:13,400 --> 00:15:15,800
Let's say that there is a monstar, right?

332
00:15:15,800 --> 00:15:17,800
So there's a monstar here, right?

333
00:15:17,800 --> 00:15:18,700
This is monstar.

334
00:15:19,700 --> 00:15:21,000
Let me actually draw that a little clearer.

335
00:15:21,000 --> 00:15:23,200
So this is monstar, right?

336
00:15:23,800 --> 00:15:28,600
So if monstar is touching the sword, our Collision routine that we

337
00:15:28,600 --> 00:15:29,700
already have will be

338
00:15:30,000 --> 00:15:32,400
To tell us that monstar is touching the sword.

339
00:15:32,400 --> 00:15:35,500
That's not actually a difficult thing for us to do because we already

340
00:15:35,500 --> 00:15:40,000
have Collision code that will tell us that the problem is if this

341
00:15:40,000 --> 00:15:44,100
sword Strike last some number of frames, like let's say that the sword

342
00:15:44,100 --> 00:15:45,400
last ten frames, right?

343
00:15:45,400 --> 00:15:47,800
So you push it and it's out there for ten frames.

344
00:15:48,700 --> 00:15:54,500
If that's the case, we will find that we will get 10 frames worth of

345
00:15:54,500 --> 00:15:56,900
strike evaluations.

346
00:15:56,900 --> 00:15:57,100
Right?

347
00:15:57,100 --> 00:16:04,200
So what we need to be able to do is we need to be able to have some

348
00:16:04,200 --> 00:16:09,700
conception of the fact that only the first time that this sword

349
00:16:09,700 --> 00:16:11,600
touches someone on that strike.

350
00:16:11,600 --> 00:16:16,000
Do you actually get it counted as a hit because otherwise it would

351
00:16:16,000 --> 00:16:18,700
actually go ahead and take 10 Hearts off of.

352
00:16:18,900 --> 00:16:22,000
I whenever they were hit because on each frame, it would go.

353
00:16:22,000 --> 00:16:23,700
Oh, the sword is touching the monstar.

354
00:16:23,800 --> 00:16:26,600
So minus 1 hearts on the monstar and then the next frame, it would do

355
00:16:26,600 --> 00:16:29,100
it again and do it again and do it again, right?

356
00:16:29,300 --> 00:16:31,900
And, so, for however, many frames, the sword strike was visible.

357
00:16:32,000 --> 00:16:33,400
That's how many hearts would take off.

358
00:16:34,100 --> 00:16:36,700
So what we need to do instead is we need to have some kind of a

359
00:16:36,700 --> 00:16:37,500
concept, right?

360
00:16:37,500 --> 00:16:41,600
Which we haven't really done anything to deal with yet of the

361
00:16:41,600 --> 00:16:45,300
initiation of a collision as opposed to the maintenance of a

362
00:16:45,300 --> 00:16:46,700
collision, right?

363
00:16:46,800 --> 00:16:48,400
So we need to basically know

364
00:16:48,700 --> 00:16:53,200
is this Collision right new?

365
00:16:56,000 --> 00:17:00,000
And we need to know whether it's new because if it's not new, then we

366
00:17:00,000 --> 00:17:02,800
don't want to actually process that stuff.

367
00:17:03,000 --> 00:17:06,200
So there's a couple ways that we might want to think about doing that

368
00:17:06,200 --> 00:17:06,900
for the sword.

369
00:17:08,200 --> 00:17:12,800
One way we could do it which is kind of the realistic way of Sword

370
00:17:12,800 --> 00:17:13,300
would work.

371
00:17:13,300 --> 00:17:18,700
In some way is actually problematic for us and I'll tell you why in a

372
00:17:18,700 --> 00:17:19,000
second.

373
00:17:19,000 --> 00:17:23,000
But what that basically would be is you test to see whether The Sword

374
00:17:23,000 --> 00:17:25,700
and the monster overlap initially.

375
00:17:26,900 --> 00:17:32,200
Versus whether The Sword and the monster overlap as a result of

376
00:17:32,200 --> 00:17:33,400
whatever happened on the frame.

377
00:17:34,000 --> 00:17:38,100
So, on the first frame, when a sword strike occurs, you note, the fact

378
00:17:38,100 --> 00:17:43,100
that the sword was not in even in on the screen at first and then it

379
00:17:43,100 --> 00:17:43,500
is now.

380
00:17:43,500 --> 00:17:48,300
So all collisions are new on the frame after that you go.

381
00:17:48,400 --> 00:17:50,400
Okay, the sword was on the screen, ish Ali.

382
00:17:50,600 --> 00:17:52,500
So check who it was touching.

383
00:17:53,400 --> 00:17:57,900
And then after we do our movement update for that frame, see who it's

384
00:17:57,900 --> 00:17:59,800
touching now and anyone.

385
00:18:00,000 --> 00:18:01,600
Who it is, newly touching.

386
00:18:01,600 --> 00:18:04,800
It wasn't touching before count the strike for them.

387
00:18:04,800 --> 00:18:05,400
Right?

388
00:18:05,800 --> 00:18:08,100
But we really don't and that's like just more of a like.

389
00:18:08,100 --> 00:18:11,100
Oh, I'm actually like pushing a sword into somebody kind of a thing.

390
00:18:11,800 --> 00:18:14,100
I don't really think we want to do that because you get into like

391
00:18:14,100 --> 00:18:16,500
we're cheating scenarios where you can kind of oscillate on the

392
00:18:16,500 --> 00:18:17,100
monstar.

393
00:18:17,100 --> 00:18:19,600
Like if you can move it back and forth a little you could you could

394
00:18:19,600 --> 00:18:21,100
hit the monster multiple times.

395
00:18:22,100 --> 00:18:26,900
So I think gamey, why's the actual metric for whether you hit someone

396
00:18:26,900 --> 00:18:29,600
with a sword is really pretty straightforward.

397
00:18:29,600 --> 00:18:29,800
It's

398
00:18:30,000 --> 00:18:33,000
Basically, like on the initial frame, right?

399
00:18:36,600 --> 00:18:38,200
Wow, that's a bad handwriting.

400
00:18:40,900 --> 00:18:44,500
On the initial frame is actually what we're talking about here.

401
00:18:45,800 --> 00:18:49,200
On the first frame that the sword is, you know, where the sword strike

402
00:18:49,200 --> 00:18:53,000
is initiated things that are touched on that frame by the sword.

403
00:18:53,500 --> 00:18:56,300
Take damage things that aren't aren't right.

404
00:18:57,000 --> 00:19:00,500
That would be how we would do it, right?

405
00:19:01,900 --> 00:19:06,100
now, just because I want to continue down this path of why this is

406
00:19:06,100 --> 00:19:09,500
kind of complicated and warrants thinking about

407
00:19:10,500 --> 00:19:14,200
Let's so this is, this is for a stationary sword, right?

408
00:19:14,600 --> 00:19:15,700
So, this right here.

409
00:19:16,900 --> 00:19:19,000
Is all at the sort of a stationary, right?

410
00:19:19,000 --> 00:19:20,700
So this is like a stationary sword.

411
00:19:23,800 --> 00:19:26,400
Now, let's think about what has to happen if the sword is moving,

412
00:19:26,900 --> 00:19:27,400
right?

413
00:19:28,600 --> 00:19:30,000
So this is a flying sword.

414
00:19:32,200 --> 00:19:32,700
Okay.

415
00:19:33,700 --> 00:19:39,300
Now, we have an even harder problem because now, if here is my hero,

416
00:19:39,700 --> 00:19:40,300
right?

417
00:19:40,300 --> 00:19:42,900
And here comes the sword that he comes out.

418
00:19:42,900 --> 00:19:44,800
The sword is actually traveling in this direction.

419
00:19:46,000 --> 00:19:50,200
So it's a given that the sword is going to go through some number of

420
00:19:50,200 --> 00:19:51,600
monsters on the way.

421
00:19:51,700 --> 00:19:51,900
Right?

422
00:19:51,900 --> 00:19:55,200
Could be zero if it was just a bad shot, but it could be maybe two or

423
00:19:55,200 --> 00:19:56,300
more, right?

424
00:19:56,600 --> 00:20:00,300
And you know, we could cheese out and say as soon as the sword hit

425
00:20:00,300 --> 00:20:03,500
somebody the sword disappears or something like it's a One-Shot sword,

426
00:20:04,200 --> 00:20:06,400
but that should be a game design decision.

427
00:20:06,400 --> 00:20:07,200
We don't want to do that.

428
00:20:07,200 --> 00:20:08,800
Just because our algorithm is lousy.

429
00:20:09,000 --> 00:20:12,000
We would like the game to be able to have for example, different types

430
00:20:12,000 --> 00:20:15,600
of swords, some that have piercing would be what this would be called.

431
00:20:16,600 --> 00:20:21,000
and so, what we'd like to do is allow the sword entity to travel in a

432
00:20:21,000 --> 00:20:26,000
line and whenever it hits a monstar, we would like it to do damage to

433
00:20:26,000 --> 00:20:27,700
that monster only once,

434
00:20:29,300 --> 00:20:29,900
right.

435
00:20:31,100 --> 00:20:32,000
That's what we would like.

436
00:20:33,400 --> 00:20:35,300
And unfortunately.

437
00:20:36,600 --> 00:20:42,400
I can't say, I know any solution to this problem that does not involve

438
00:20:43,700 --> 00:20:45,200
actually just tracking the information.

439
00:20:46,400 --> 00:20:50,500
I don't like the only way I know to absolutely guarantee that there is

440
00:20:50,500 --> 00:20:52,200
no way to cheat out on.

441
00:20:52,200 --> 00:20:58,000
This is if you actually just remember who the sword has hit and who it

442
00:20:58,000 --> 00:20:59,600
hasn't hit and you only

443
00:21:00,100 --> 00:21:04,300
Us to hit once make sense, okay.

444
00:21:06,400 --> 00:21:09,600
Now, you may ask, why don't you just use sort of when does it enter

445
00:21:09,600 --> 00:21:11,700
the person and when does it leave, right?

446
00:21:11,700 --> 00:21:16,000
So only on entrance, but the reason for that is because you end up in

447
00:21:16,000 --> 00:21:19,900
situations where, what if the monster and the sword were moving in the

448
00:21:19,900 --> 00:21:21,500
same direction, right?

449
00:21:21,600 --> 00:21:25,400
So suppose The Sword, and the monster end up in a situation like this,

450
00:21:25,400 --> 00:21:27,500
and the Monsters moving that direction, the sores, moving that

451
00:21:27,500 --> 00:21:28,000
direction.

452
00:21:28,300 --> 00:21:30,500
Well, you could imagine a thing.

453
00:21:30,600 --> 00:21:33,500
Even if you had really good Collision detection.

454
00:21:34,500 --> 00:21:36,100
And it implemented everything perfectly.

455
00:21:36,700 --> 00:21:39,300
You could end up with these two things perfectly lining up.

456
00:21:39,300 --> 00:21:41,600
So they just overlap, right?

457
00:21:42,600 --> 00:21:46,500
And because of numerical imprecision you oscillate as to whose side.

458
00:21:46,500 --> 00:21:50,900
This is on as the monster and the Sword move in that direction and it

459
00:21:50,900 --> 00:21:55,300
causes multiple damage, you know, records to happen here, right?

460
00:21:56,500 --> 00:21:58,500
You could imagine this.

461
00:22:00,000 --> 00:22:02,100
You could imagine it with the power.

462
00:22:03,000 --> 00:22:04,100
Of imagination.

463
00:22:08,400 --> 00:22:11,000
No, it's an open question.

464
00:22:11,000 --> 00:22:14,600
Whether this is a case that would ever happen enough for you to care.

465
00:22:15,100 --> 00:22:15,600
Right?

466
00:22:16,400 --> 00:22:17,300
Furthermore.

467
00:22:18,200 --> 00:22:20,800
You could imagine a situation that's not so unusual.

468
00:22:20,800 --> 00:22:22,700
Maybe let's let's talk about another one.

469
00:22:22,900 --> 00:22:26,900
Suppose here is monstar, right, and here is sword.

470
00:22:27,900 --> 00:22:30,000
This is a very fast monstar, right?

471
00:22:30,000 --> 00:22:31,400
It's a speedy monstar.

472
00:22:33,500 --> 00:22:36,200
The sword is a slow sword for whatever reason.

473
00:22:36,800 --> 00:22:38,700
The slurry is sort of traveling this direction.

474
00:22:38,700 --> 00:22:41,100
The monstar, the Speedy monstar is staying still.

475
00:22:41,600 --> 00:22:45,800
Okay, on frame one, hears frame 0 on frame 1.

476
00:22:45,900 --> 00:22:46,400
The sword is.

477
00:22:46,400 --> 00:22:46,900
Here.

478
00:22:47,200 --> 00:22:49,500
It is an valid entrance.

479
00:22:49,900 --> 00:22:53,900
We know that it was not overlapping the monster before and it is

480
00:22:53,900 --> 00:22:58,800
overlapping the monstar now, so we correctly record - one hearts.

481
00:22:59,800 --> 00:23:04,900
Right, but now the monstar accelerates in this direction and the

482
00:23:04,900 --> 00:23:06,900
monstar is faster than the sword.

483
00:23:07,200 --> 00:23:11,900
So on frame to write the monstar has actually gained some ground on

484
00:23:11,900 --> 00:23:14,400
the sword such that by frame 3.

485
00:23:15,000 --> 00:23:20,300
The Sword is no longer catching up, but now the monstar stops so on

486
00:23:20,300 --> 00:23:21,200
frame for

487
00:23:22,300 --> 00:23:26,000
The sword re-enters, the monstar, this would Now record.

488
00:23:26,000 --> 00:23:31,000
Another - one hearts and would be a bug, right?

489
00:23:31,300 --> 00:23:35,700
If we assume that the definition for our game.

490
00:23:35,700 --> 00:23:42,500
Is that something a sword can once sword strike can only do damage one

491
00:23:42,500 --> 00:23:46,800
time right now, we could change the definition and say that, if it

492
00:23:46,800 --> 00:23:49,000
does enter twice like that, that's more damage.

493
00:23:49,300 --> 00:23:51,800
Maybe that's a good definition, but it's

494
00:23:52,100 --> 00:23:54,500
Noting that at that point, we would be making that.

495
00:23:56,200 --> 00:23:59,100
We would be making that decision based solely on the fact that we

496
00:23:59,100 --> 00:23:59,800
didn't want to implicate.

497
00:24:00,000 --> 00:24:05,500
It a more robust scheme that could handle either right of those two

498
00:24:05,500 --> 00:24:06,000
things.

499
00:24:07,000 --> 00:24:07,800
So, I don't know.

500
00:24:07,800 --> 00:24:09,000
Like I said, it's very complicated.

501
00:24:09,000 --> 00:24:12,000
It's more complicated than you would think a lot of games cheese out

502
00:24:12,000 --> 00:24:13,800
on stuff like this, a couple ways.

503
00:24:13,800 --> 00:24:17,000
They cheese out is by like turning things Invincible for a second

504
00:24:17,000 --> 00:24:20,500
after they get hit by something, thus eliminating this problem.

505
00:24:20,500 --> 00:24:21,000
Altogether.

506
00:24:21,100 --> 00:24:24,200
Another way is by eliminating the swords the sword once it hits

507
00:24:24,200 --> 00:24:24,500
something.

508
00:24:24,500 --> 00:24:25,200
It's gone.

509
00:24:25,400 --> 00:24:26,200
There's a lot of different ways.

510
00:24:26,200 --> 00:24:31,300
You can choose out on something like this and we could eventually

511
00:24:31,300 --> 00:24:34,800
decide that we want to do exactly that kind of cheesery.

512
00:24:34,900 --> 00:24:36,700
And then we would cheese it out, but

513
00:24:36,900 --> 00:24:40,500
Least At first I would say instead of picking the cheese route.

514
00:24:40,600 --> 00:24:42,500
Let's try and pick a smarter route.

515
00:24:42,600 --> 00:24:45,800
And so the route that I would say that we should pick there is

516
00:24:45,800 --> 00:24:51,800
actually have some notion of whether or not a sword can hit something

517
00:24:52,300 --> 00:24:53,600
multiple times or not.

518
00:24:53,600 --> 00:24:54,100
Right?

519
00:24:54,100 --> 00:24:57,800
So, I think what we probably want to do is have essentially a sword.

520
00:24:58,100 --> 00:25:01,900
We want to have something called like a, you know, a hit table, right?

521
00:25:01,900 --> 00:25:06,300
We want to have something where we can record every time something hit

522
00:25:06,300 --> 00:25:06,700
something.

523
00:25:06,800 --> 00:25:09,300
NG in a mutually exclusive State like that.

524
00:25:09,600 --> 00:25:14,100
Let's just go ahead and record that somehow so that we can go ahead

525
00:25:14,100 --> 00:25:17,000
and prevent double strikes of this nature.

526
00:25:17,500 --> 00:25:20,200
Now, I don't think this is a particularly costly thing.

527
00:25:20,600 --> 00:25:24,100
Even if we Implement stupidly and the reason that I don't think that

528
00:25:24,100 --> 00:25:27,600
is because we have to ask the question how many

529
00:25:29,300 --> 00:25:37,100
Hits per, you know, second are really happening here, right, you know,

530
00:25:37,100 --> 00:25:41,000
assuming that this is a zelda-like game, you're talking about having

531
00:25:41,000 --> 00:25:44,600
something, you know, like 10 is actually a lot of projectiles on the

532
00:25:44,600 --> 00:25:44,900
screen.

533
00:25:44,900 --> 00:25:46,100
It's isn't bullet-hell.

534
00:25:47,400 --> 00:25:51,900
So, you know, if this was in a bullet, hell game, you can imagine that

535
00:25:51,900 --> 00:25:54,300
you would have some kind of a circumstance where you're thinking.

536
00:25:54,300 --> 00:25:57,600
Oh a hundred isn't a very large number of

537
00:25:58,100 --> 00:25:59,400
Or maybe even a thousand, right?

538
00:25:59,400 --> 00:26:03,100
But in our world 10 is a pretty good number that you would think.

539
00:26:03,100 --> 00:26:04,500
Like that's a pretty hectic screen.

540
00:26:04,500 --> 00:26:05,900
The player is pretty frazzled.

541
00:26:05,900 --> 00:26:09,400
If there's 10 things flying out there, certainly if there are 100

542
00:26:09,400 --> 00:26:14,800
stuff has gone totally Bonkers and the number of like actual entities

543
00:26:14,800 --> 00:26:19,000
on the screen that can be hit and have Damage, Done to them is going

544
00:26:19,000 --> 00:26:19,900
to be real small.

545
00:26:20,000 --> 00:26:20,500
Again.

546
00:26:20,500 --> 00:26:22,700
I think in that 10 range, right?

547
00:26:23,100 --> 00:26:26,400
So I think we're talking about circumstances where this table is, you

548
00:26:26,400 --> 00:26:27,800
know, like a hundred entries.

549
00:26:28,000 --> 00:26:32,800
Long or something, something that we could scan exhaustively if we

550
00:26:32,800 --> 00:26:39,700
wanted to every time a collision occurred and not actually care at all

551
00:26:39,800 --> 00:26:42,400
because again, there's only 10 entities that could even get hit on the

552
00:26:42,400 --> 00:26:43,200
screen and go in time.

553
00:26:43,200 --> 00:26:43,300
Sir.

554
00:26:43,300 --> 00:26:47,900
Talking about 10 times 100 is 1,000 iterations total to process.

555
00:26:47,900 --> 00:26:48,300
This.

556
00:26:48,500 --> 00:26:51,400
It seems like something that's really just not that big of a deal.

557
00:26:51,900 --> 00:26:55,900
So I feel like they hit table is kind of the right way to go because

558
00:26:55,900 --> 00:26:57,900
we can also maybe we can get some Leverage.

559
00:26:58,000 --> 00:26:59,400
Regina of this, right?

560
00:27:00,400 --> 00:27:03,100
There might be other things we can do with the hit table that we might

561
00:27:03,100 --> 00:27:03,800
want to do later.

562
00:27:03,800 --> 00:27:05,100
That would be hard to do without it.

563
00:27:05,100 --> 00:27:08,600
Because the hit table is pairwise, write a hit table records.

564
00:27:08,600 --> 00:27:13,100
The fact that something happened between an entity and another entity.

565
00:27:13,600 --> 00:27:15,500
And we may want to store information.

566
00:27:15,500 --> 00:27:18,200
They're like timers or other things like that.

567
00:27:18,400 --> 00:27:21,400
That would be difficult for us to store in the entities themselves,

568
00:27:21,400 --> 00:27:23,000
which are not pairwise.

569
00:27:23,000 --> 00:27:23,200
Right?

570
00:27:23,200 --> 00:27:26,400
And entity itself doesn't have information about all the other

571
00:27:26,400 --> 00:27:26,900
entities.

572
00:27:27,200 --> 00:27:29,900
So, by having a hit table, it gives us a

573
00:27:30,000 --> 00:27:33,400
Convenient way to store pairwise information, potentially?

574
00:27:34,500 --> 00:27:37,700
In a way that would prevent us from having to blow entity structures

575
00:27:37,700 --> 00:27:41,800
with lots of little arrays or other garbage like this that we would or

576
00:27:41,800 --> 00:27:44,700
pointers to optional arrays, which would be more like what we do,

577
00:27:44,700 --> 00:27:45,300
right?

578
00:27:46,000 --> 00:27:49,400
We wouldn't have to bloat those things and it allows us a really nice

579
00:27:49,400 --> 00:27:53,200
convenient way to store that and also in a way that is much more bound

580
00:27:53,200 --> 00:27:54,300
double, right?

581
00:27:54,400 --> 00:27:56,100
It's much more Bountiful for us to do this.

582
00:27:56,100 --> 00:27:58,100
We can set aside some space for this.

583
00:27:58,100 --> 00:28:01,600
We can set aside an iteration count for this and know that at the

584
00:28:01,600 --> 00:28:02,600
worst case.

585
00:28:03,300 --> 00:28:06,300
We would not cause some kind of a memory overflow or use too much

586
00:28:06,300 --> 00:28:07,400
space or something.

587
00:28:07,600 --> 00:28:12,000
We would just there be just a thing in the game where if there were

588
00:28:12,000 --> 00:28:14,700
thousands of things happening on the screen hits at one time.

589
00:28:14,700 --> 00:28:16,500
One of them wouldn't get recorded or something.

590
00:28:16,500 --> 00:28:16,800
Right?

591
00:28:16,800 --> 00:28:19,900
One of the hits wouldn't would be able to happen twice or something.

592
00:28:20,900 --> 00:28:25,200
So at the very worst case, we would only regress back to what would

593
00:28:25,200 --> 00:28:25,400
happen.

594
00:28:25,400 --> 00:28:26,900
If we didn't use the hit table.

595
00:28:27,200 --> 00:28:31,100
There's nothing particularly negative that happens in that case and I

596
00:28:31,100 --> 00:28:32,400
don't think that case, whatever happens.

597
00:28:32,400 --> 00:28:34,100
So we're good and certainly will assert.

598
00:28:34,100 --> 00:28:37,500
So we'll know if it does and we can adjust accordingly, but I think

599
00:28:37,500 --> 00:28:38,300
we're pretty good there.

600
00:28:38,700 --> 00:28:40,100
So I think this is what we want to do.

601
00:28:40,100 --> 00:28:41,400
We want to have a hit table.

602
00:28:41,600 --> 00:28:45,300
We want to have the sword to Unity, and we'll go ahead and just put

603
00:28:45,300 --> 00:28:45,900
that in.

604
00:28:46,400 --> 00:28:47,300
As I just described.

605
00:28:47,300 --> 00:28:47,500
It.

606
00:28:47,500 --> 00:28:49,400
Looks like we've got about 30 minutes.

607
00:28:49,400 --> 00:28:50,500
That should be enough time.

608
00:28:50,900 --> 00:28:53,100
To put something in along those lines.

609
00:28:53,100 --> 00:28:56,500
So, let's go ahead and check out our move entity.

610
00:28:56,800 --> 00:28:57,400
Right?

611
00:28:57,900 --> 00:28:59,200
We've got our move entity call.

612
00:28:59,800 --> 00:29:03,100
And what we want to do here is, we probably on move entity.

613
00:29:03,200 --> 00:29:07,700
We probably want to do something where we're going to, we've got, you

614
00:29:07,700 --> 00:29:10,900
know, we've got our Collision detection function, right?

615
00:29:10,900 --> 00:29:14,000
This is our Collision detection function and in some sense for our

616
00:29:14,000 --> 00:29:14,500
sword.

617
00:29:14,500 --> 00:29:18,400
It's much too heavy weight because the sword is not really moving the

618
00:29:18,400 --> 00:29:18,700
sword.

619
00:29:18,700 --> 00:29:19,900
Just comes on the screen.

620
00:29:21,900 --> 00:29:24,500
I guess if we actually have the sword kind of travel out, maybe I take

621
00:29:24,500 --> 00:29:25,900
it back and we shouldn't have a sort of string.

622
00:29:25,900 --> 00:29:27,900
We should have the sword actually travel out, just because it's a

623
00:29:27,900 --> 00:29:29,100
little, it's a harder case.

624
00:29:29,500 --> 00:29:30,600
So maybe we'll do that.

625
00:29:31,200 --> 00:29:34,700
And so then when we do this, iteration, when we go through here, every

626
00:29:34,700 --> 00:29:38,100
time we hit something, what we'd want to do is is we already have it

627
00:29:38,100 --> 00:29:42,600
set up to process these collisions when they occur, we could go ahead

628
00:29:42,600 --> 00:29:44,800
and process those collisions.

629
00:29:45,600 --> 00:29:46,300
Now for real.

630
00:29:46,300 --> 00:29:49,300
So we could actually do something where we actually handle the

631
00:29:49,300 --> 00:29:51,900
Collision do something intelligent with it.

632
00:29:51,900 --> 00:29:55,200
So for example, the thing that we would do here is when that happens

633
00:29:55,700 --> 00:29:59,800
we would go ahead and yeah, and we would just go ahead and make that.

634
00:30:01,300 --> 00:30:03,100
Make that decrement to head cap.

635
00:30:03,300 --> 00:30:04,800
Now, there is a

636
00:30:06,300 --> 00:30:10,800
there is kind of a slight slight issue that I didn't discuss, which is

637
00:30:10,800 --> 00:30:13,800
we need to know when things can get eliminated from the hit table,

638
00:30:14,100 --> 00:30:14,700
right?

639
00:30:15,000 --> 00:30:16,800
In the case of the sword.

640
00:30:18,000 --> 00:30:20,400
It's kind of a known, it's a very easy Thing.

641
00:30:20,700 --> 00:30:25,300
Once the sword strike stops, all the entries in the hit table that are

642
00:30:25,300 --> 00:30:28,300
about the sword can go away.

643
00:30:28,500 --> 00:30:29,100
Right?

644
00:30:29,400 --> 00:30:32,200
So, the sword strike only has to track that during that time.

645
00:30:32,600 --> 00:30:37,000
Now, whether that's, whether there are more difficult metrics, we have

646
00:30:37,000 --> 00:30:38,100
to worry about

647
00:30:38,800 --> 00:30:40,000
Sort of further down the road.

648
00:30:40,000 --> 00:30:44,800
I don't know, but that's just, you know, that's just an example of

649
00:30:45,100 --> 00:30:46,100
something I think about.

650
00:30:46,400 --> 00:30:49,600
All right, so let's go ahead and make a sword, right?

651
00:30:49,600 --> 00:30:53,300
So let's just add one in here sword like, so.

652
00:30:54,400 --> 00:31:00,600
And so when we do our, we have our ad monstar right call and we can

653
00:31:00,600 --> 00:31:03,700
basically have an ad sword call and add sword.

654
00:31:03,700 --> 00:31:06,800
Call is going to be pretty straightforward and add sword called

655
00:31:06,800 --> 00:31:08,400
doesn't actually have to have a location.

656
00:31:08,700 --> 00:31:12,600
Because the sword is not really at a location at the beginning.

657
00:31:13,400 --> 00:31:16,200
And so that's kind of a good thing this reinforces.

658
00:31:16,200 --> 00:31:18,800
I remember I said when we were working on it before, as like, I don't

659
00:31:18,800 --> 00:31:23,500
know whether we need to have the concept that entities aren't at

660
00:31:23,500 --> 00:31:24,200
locations.

661
00:31:25,300 --> 00:31:27,400
And I think this kind of answers that question for us.

662
00:31:28,100 --> 00:31:32,200
If we want to have things like swords that kind of come out to do a

663
00:31:32,200 --> 00:31:38,400
strike and then go back into sort of like, hiding the sort of stuff

664
00:31:38,400 --> 00:31:41,400
that we put into our world to handle the concept.

665
00:31:41,400 --> 00:31:44,000
Things might not be somewhere, actually isn't wasted.

666
00:31:44,000 --> 00:31:46,300
We are actually going to make legitimate use of that.

667
00:31:46,700 --> 00:31:47,500
And so, that's a good thing.

668
00:31:47,500 --> 00:31:47,700
Again.

669
00:31:47,700 --> 00:31:52,700
It reinforces sort of a feature that we speculatively allowed for

670
00:31:52,700 --> 00:31:55,000
other reasons specifically, just so that the null and

671
00:31:55,200 --> 00:31:57,200
You could exist and I sort of said, I don't know.

672
00:31:57,200 --> 00:31:57,900
Do we want to do that?

673
00:31:57,900 --> 00:31:58,300
Justin only?

674
00:31:58,300 --> 00:32:02,700
Well now we know there's a real valid reason why we might want it that

675
00:32:02,700 --> 00:32:05,700
kind of supports that as a general decision to me in my mind.

676
00:32:07,000 --> 00:32:07,600
All right.

677
00:32:08,300 --> 00:32:10,000
So we have our sword here.

678
00:32:10,300 --> 00:32:14,300
We know that the sword does in fact, Collide, although I guess in some

679
00:32:14,300 --> 00:32:14,500
sense.

680
00:32:14,500 --> 00:32:15,700
No, it doesn't Collide.

681
00:32:16,000 --> 00:32:19,600
We do do Collision testing with the sword, but it doesn't stop things.

682
00:32:19,600 --> 00:32:21,500
People can walk through the sword if they want to.

683
00:32:21,500 --> 00:32:23,800
At least that's how I remember games.

684
00:32:23,800 --> 00:32:25,500
Like Zelda, generally work so hard.

685
00:32:25,500 --> 00:32:27,100
Does not have hit points, obviously.

686
00:32:28,300 --> 00:32:31,300
I saw it does not have a location at all.

687
00:32:32,300 --> 00:32:34,200
So it's at sword.

688
00:32:38,900 --> 00:32:39,400
There we go.

689
00:32:39,700 --> 00:32:43,900
Having a little typing problems there, so we don't need to do this and

690
00:32:43,900 --> 00:32:45,000
we don't need to do this.

691
00:32:45,000 --> 00:32:48,800
We are just adding a sword and the actual position is nothing, right?

692
00:32:49,300 --> 00:32:50,900
So that would be, how we would add a sword.

693
00:32:52,200 --> 00:32:57,000
We would then say, when we add our player, our hero, right?

694
00:32:57,300 --> 00:32:58,200
Rip said player.

695
00:32:59,200 --> 00:32:59,800
When we add a

696
00:33:00,000 --> 00:33:04,900
Are we know that the player should also always have a sword I assume

697
00:33:04,900 --> 00:33:05,500
for now.

698
00:33:05,500 --> 00:33:08,200
I mean, I guess obviously later on that's not exactly what happens.

699
00:33:08,200 --> 00:33:10,400
You kind of pick up Swords or other stuff like that.

700
00:33:10,400 --> 00:33:11,400
So I'm not sure how we do that.

701
00:33:11,400 --> 00:33:13,800
Maybe that's another thing we should put on the list of stuff to try.

702
00:33:14,700 --> 00:33:19,000
So if we want to add a sword, we've got out of Sword here and that's

703
00:33:19,000 --> 00:33:21,200
going to return an ad, Lou entity result for us.

704
00:33:21,200 --> 00:33:23,100
So this is our sword, right?

705
00:33:23,700 --> 00:33:27,500
So if we add our sword here, what we'd like to be able to do is store

706
00:33:27,500 --> 00:33:28,700
with this player.

707
00:33:28,800 --> 00:33:29,800
What sword?

708
00:33:30,000 --> 00:33:31,800
It is theirs, right?

709
00:33:33,200 --> 00:33:37,100
So again, that comes in here, let me get rid of this for now, since

710
00:33:37,100 --> 00:33:38,700
we're not keeping particularly good track of this.

711
00:33:38,800 --> 00:33:42,900
So, this comes in here now and this says, basically, like what is my,

712
00:33:43,100 --> 00:33:44,700
my sword low index?

713
00:33:45,400 --> 00:33:49,800
And, again, this is just kind of we're building out this here.

714
00:33:49,900 --> 00:33:53,100
And my, my assumption is that after we add a sufficient amount of

715
00:33:53,100 --> 00:33:53,800
complexity.

716
00:33:54,000 --> 00:33:58,900
This will be huge and it, hopefully, we'll have a lot of different

717
00:33:58,900 --> 00:33:59,700
things in it.

718
00:34:00,800 --> 00:34:03,200
And then that will put us in a perfect position to do, like the past

719
00:34:03,200 --> 00:34:05,100
that we need to do where we go and think about how we're going to

720
00:34:05,100 --> 00:34:05,900
store this stuff.

721
00:34:06,200 --> 00:34:06,600
Right?

722
00:34:07,400 --> 00:34:09,500
Because not all entities have a sword.

723
00:34:09,600 --> 00:34:11,500
So why do they all have a sword low index?

724
00:34:11,699 --> 00:34:12,000
Right?

725
00:34:12,000 --> 00:34:12,800
Or something like this?

726
00:34:13,100 --> 00:34:19,000
So anyway, so if I go, I'm going to say that this entity the players

727
00:34:19,000 --> 00:34:19,500
entity.

728
00:34:19,600 --> 00:34:20,699
It has a sword index.

729
00:34:22,199 --> 00:34:23,100
Sorry, low index.

730
00:34:23,600 --> 00:34:25,500
And that is just the end of the low results.

731
00:34:25,500 --> 00:34:27,900
I don't remember what the end of the low result even has in.

732
00:34:27,900 --> 00:34:28,300
It.

733
00:34:28,600 --> 00:34:33,600
Add low entity salt entity.

734
00:34:34,699 --> 00:34:36,199
I don't even know what's in there.

735
00:34:36,400 --> 00:34:37,600
I guess just slow and low index.

736
00:34:37,600 --> 00:34:39,600
Okay, so I can just grab the low index app.

737
00:34:39,900 --> 00:34:43,600
So now we actually know exactly what sort it is.

738
00:34:43,600 --> 00:34:46,600
So now when the player actually goes to use that sword.

739
00:34:47,699 --> 00:34:48,699
We can go and do that.

740
00:34:49,199 --> 00:34:53,000
So I guess what we would do here is say we also probably need some

741
00:34:53,000 --> 00:34:56,000
kind of a timer or a distance metric.

742
00:34:56,100 --> 00:35:03,400
I guess something along those lines because when the sword is active,

743
00:35:03,400 --> 00:35:04,000
we know that.

744
00:35:04,000 --> 00:35:06,700
Like, you know, when you throw the sword or something, in one of these

745
00:35:06,700 --> 00:35:09,500
games, typically, what will happen is the sword?

746
00:35:10,000 --> 00:35:11,200
It may well.

747
00:35:11,200 --> 00:35:13,900
First of all, I think if it hits something like a tree or something

748
00:35:13,900 --> 00:35:16,400
like that, it's obviously going to stop traveling.

749
00:35:17,000 --> 00:35:17,200
So,

750
00:35:17,400 --> 00:35:18,000
Hits a wall.

751
00:35:18,000 --> 00:35:21,900
Like I'll stop traveling but it may also, we may also have a situation

752
00:35:21,900 --> 00:35:27,400
where, like, if the entity if the sword entity goes for too long, like

753
00:35:27,400 --> 00:35:29,200
there should maybe there should be a Timeout on it.

754
00:35:29,200 --> 00:35:32,300
So, I don't know or a distance, not like, you can only throw the sword

755
00:35:32,300 --> 00:35:35,000
so far right before it stops.

756
00:35:35,700 --> 00:35:36,900
That seems pretty typical.

757
00:35:37,800 --> 00:35:39,900
So I assumed you'd probably want something like that as well.

758
00:35:40,100 --> 00:35:44,400
So we'd probably want something on here like a timer, right?

759
00:35:45,500 --> 00:35:47,200
Where we're going to set that to something that's going to take.

760
00:35:47,300 --> 00:35:47,500
Down.

761
00:35:47,500 --> 00:35:50,400
And when it takes down, the sword goes away, right?

762
00:35:51,700 --> 00:35:53,300
And this might be a distant total distance.

763
00:35:53,300 --> 00:35:55,700
Traveled seems a little smarter.

764
00:35:55,700 --> 00:35:59,700
So maybe we'll say, distance remaining or something like that, right?

765
00:36:01,800 --> 00:36:03,700
So we'll look at that and we'll see how that goes.

766
00:36:04,000 --> 00:36:05,300
So we've got distance remaining.

767
00:36:06,800 --> 00:36:08,300
And now we've got our sword.

768
00:36:08,600 --> 00:36:09,700
We have created The Sword.

769
00:36:09,800 --> 00:36:12,300
And so now, what we need to do also is I guess draw the sword.

770
00:36:12,300 --> 00:36:14,100
I said that we would just kind of throw in there.

771
00:36:14,900 --> 00:36:18,200
One of these like cheesy Rock bitmaps.

772
00:36:18,200 --> 00:36:20,800
I think we said it was Rocco 3, something like that.

773
00:36:21,800 --> 00:36:25,300
So we now will do is kind of a Cheesy way of representing sort.

774
00:36:25,300 --> 00:36:28,200
Since I don't have a sword bitmap in the art pack yet.

775
00:36:28,600 --> 00:36:35,300
Mmm, so, that'd be here, sword.

776
00:36:36,300 --> 00:36:39,200
And then when we're actually down here, drawing stuff, we would just

777
00:36:39,200 --> 00:36:41,100
say, what do we want swords to look like?

778
00:36:41,100 --> 00:36:43,500
Right and swords are just going to be like walls, where there's really

779
00:36:43,500 --> 00:36:45,500
nothing interesting in them at all.

780
00:36:45,900 --> 00:36:47,600
They are just sword.

781
00:36:47,800 --> 00:36:53,600
Now, if we're actually using that rock 03, I guess is what it was if

782
00:36:53,600 --> 00:36:57,000
we're using Rocco three, I need to kind of see where we should Center

783
00:36:57,000 --> 00:36:57,700
it around.

784
00:36:57,800 --> 00:36:59,100
I assume, we'll just use the middle.

785
00:36:59,700 --> 00:37:02,900
So, however, big it is, well, I guess I'll just, I'll just kind of

786
00:37:03,100 --> 00:37:04,800
feel out what the middle is and gimp.

787
00:37:05,900 --> 00:37:06,900
Mmm.

788
00:37:08,200 --> 00:37:09,900
So probably like right about there.

789
00:37:10,200 --> 00:37:12,500
So that's like 29:10, right?

790
00:37:14,300 --> 00:37:17,900
So, 2910 is the, the centering point for that guy.

791
00:37:17,900 --> 00:37:19,300
And that is the bitmap.

792
00:37:19,300 --> 00:37:20,700
Now, in general.

793
00:37:20,700 --> 00:37:23,500
I guess the sword should kind of be a little bit off the ground, which

794
00:37:23,500 --> 00:37:25,800
means it probably has a shadow as well, right?

795
00:37:25,800 --> 00:37:26,800
Got something like this.

796
00:37:29,800 --> 00:37:32,800
So I guess the swords technically have Z height and will probably give

797
00:37:32,800 --> 00:37:34,900
it a little Z height when it gets thrown.

798
00:37:35,900 --> 00:37:36,700
That's what I would say.

799
00:37:36,900 --> 00:37:39,100
All right, but we'll deal with that a little bit later on.

800
00:37:40,300 --> 00:37:44,200
Okay, so now we've got swords and something that we have to check now,

801
00:37:44,200 --> 00:37:47,800
which we weren't checking before is when something is a high Envy or

802
00:37:47,800 --> 00:37:48,800
low entity or whatever.

803
00:37:49,600 --> 00:37:52,200
We weren't previously, checking to see whether it actually existed

804
00:37:52,200 --> 00:37:53,400
somewhere in the world.

805
00:37:53,600 --> 00:37:53,900
I guess.

806
00:37:53,900 --> 00:37:55,800
Well, it wouldn't wouldn't be in the hyemi set.

807
00:37:56,000 --> 00:37:57,900
So that's what would prevent it from from happening.

808
00:37:57,900 --> 00:38:02,300
It would drop out of the high Andes set or go into the high-end be set

809
00:38:02,300 --> 00:38:04,900
when it exists or didn't exist in the world because the criteria for

810
00:38:04,900 --> 00:38:07,900
moving, something from low to high is that it's in the camera region,

811
00:38:08,900 --> 00:38:09,700
so,

812
00:38:10,700 --> 00:38:11,800
Hmm.

813
00:38:12,900 --> 00:38:14,500
Yeah, so I think that's good.

814
00:38:15,300 --> 00:38:16,000
What I would like to do.

815
00:38:16,000 --> 00:38:18,900
Now is let me clean up any errors that we might compile errors, that

816
00:38:18,900 --> 00:38:19,700
we may have done here.

817
00:38:20,600 --> 00:38:23,600
So, add sword obviously has to be above add player.

818
00:38:23,600 --> 00:38:24,800
So the compiler can find it.

819
00:38:26,400 --> 00:38:30,700
Rocket science, C compilers can't find functions if they don't happen

820
00:38:30,700 --> 00:38:31,200
in order.

821
00:38:32,000 --> 00:38:32,600
All right.

822
00:38:32,600 --> 00:38:36,200
So let's go ahead and actually change the speed V.

823
00:38:36,200 --> 00:38:39,100
The action up, I think is what it was.

824
00:38:39,200 --> 00:38:41,500
Let's change that to be whatever the spacebar was.

825
00:38:41,500 --> 00:38:42,600
I don't remember what we call.

826
00:38:42,700 --> 00:38:45,200
That in our platform layer.

827
00:38:45,800 --> 00:38:48,000
We had a we had a couple different buttons.

828
00:38:48,100 --> 00:38:53,000
I think that it was I think this it was actually the start button that

829
00:38:53,000 --> 00:38:54,500
was that for jumping.

830
00:38:54,500 --> 00:38:55,800
So obvious, buying that start button.

831
00:38:55,800 --> 00:38:58,500
I don't think we're actually going to have jumping in the game, but it

832
00:38:58,500 --> 00:38:59,800
was kind of funny to watch him jump.

833
00:39:00,000 --> 00:39:01,300
In there, so I'm going to leave it in for now.

834
00:39:01,800 --> 00:39:02,700
So I think.

835
00:39:02,900 --> 00:39:03,800
Yeah, there we go.

836
00:39:05,300 --> 00:39:08,500
Okay, so start button is also the jump button at the moment.

837
00:39:08,500 --> 00:39:09,300
It makes no sense.

838
00:39:09,300 --> 00:39:10,300
But that's just the way it is.

839
00:39:11,000 --> 00:39:12,700
So now we just need to bind these other Keys.

840
00:39:13,400 --> 00:39:16,000
The arrow keys to launch a sword in a particular direction.

841
00:39:16,600 --> 00:39:18,900
All right, so let's start by saying.

842
00:39:19,200 --> 00:39:20,600
Okay, we know that.

843
00:39:22,200 --> 00:39:27,400
If we got a situation where the controllers action up button and it

844
00:39:27,400 --> 00:39:31,400
down, oh, you know what I could do to hear.

845
00:39:31,900 --> 00:39:34,100
Well, I don't really want to everybody.

846
00:39:34,100 --> 00:39:35,100
That's not going to be useful.

847
00:39:35,200 --> 00:39:37,100
I was gonna say something but then I just changed my mind.

848
00:39:39,100 --> 00:39:43,800
So we basically have a direction for our sword to go in and we're

849
00:39:43,800 --> 00:39:45,900
going to assume that the sword doesn't go in any direction.

850
00:39:46,500 --> 00:39:49,800
And then if they actually push it in a one of the action directions

851
00:39:49,800 --> 00:39:51,400
will just launch the sword, right?

852
00:39:52,100 --> 00:39:57,200
So we'll say that there's the up-down and the left-right Sorting right

853
00:39:57,300 --> 00:39:58,100
like that.

854
00:39:59,400 --> 00:40:02,600
And when that happens, we will set the d sword to be the direction.

855
00:40:02,600 --> 00:40:04,400
We want the sword to go again.

856
00:40:04,400 --> 00:40:07,700
Nothing particularly interesting here, just really really basic stuff.

857
00:40:08,700 --> 00:40:11,700
Just something so that we can kind of have a sword going and see what

858
00:40:11,700 --> 00:40:13,700
happens as a result.

859
00:40:14,000 --> 00:40:18,000
So there's left right and there's right.

860
00:40:19,100 --> 00:40:22,000
Like so, so that allows us to launch stored in any given Direction,

861
00:40:22,000 --> 00:40:26,200
but now we need to actually make sure that we take our sword and

862
00:40:26,200 --> 00:40:26,800
launch it.

863
00:40:26,900 --> 00:40:31,400
So, after we move ourselves, what we want to do is say if that d sword

864
00:40:32,200 --> 00:40:32,700
is.

865
00:40:33,400 --> 00:40:37,000
So I guess the dot X is not equal to 0, right?

866
00:40:38,500 --> 00:40:39,900
Or d sword.

867
00:40:39,900 --> 00:40:41,500
Y is not equal to 0.

868
00:40:41,500 --> 00:40:46,600
So if we gave, if we actually decided that the sword should have some

869
00:40:46,900 --> 00:40:48,700
launching here by setting it to one of these things.

870
00:40:50,000 --> 00:40:51,000
That was the case.

871
00:40:51,000 --> 00:40:54,200
Then we need to initiate that sort sequence.

872
00:40:54,700 --> 00:40:57,500
So now first we should check to see if we even have a sword, right?

873
00:40:57,500 --> 00:41:00,100
Because technically I guess we don't have to have one, right?

874
00:41:00,100 --> 00:41:01,200
The person might not be having one.

875
00:41:01,200 --> 00:41:03,300
So we should check the sword, low index.

876
00:41:03,300 --> 00:41:06,600
We would see whether or not we actually got one there, so we could

877
00:41:06,600 --> 00:41:07,600
look at get high.

878
00:41:07,800 --> 00:41:11,400
We had a, we had a call that was like, get high entity or something

879
00:41:11,400 --> 00:41:11,800
like this.

880
00:41:12,200 --> 00:41:13,600
It was like force entity to.

881
00:41:13,600 --> 00:41:14,500
Hi, right?

882
00:41:14,500 --> 00:41:15,200
Like so on.

883
00:41:16,000 --> 00:41:17,800
So what we could basically do is just call this, right?

884
00:41:17,800 --> 00:41:19,100
And so, we want to force the entity to.

885
00:41:19,100 --> 00:41:19,500
Hi.

886
00:41:20,500 --> 00:41:22,200
that's, that's whatever the

887
00:41:23,600 --> 00:41:26,200
Which entity actually where is RO controlling entity?

888
00:41:26,200 --> 00:41:26,900
That's what it was.

889
00:41:27,900 --> 00:41:30,900
So controlling entity is what any structures so are controlling

890
00:41:30,900 --> 00:41:31,400
entity.

891
00:41:32,800 --> 00:41:35,800
We want to take that and say that it's sword, low index.

892
00:41:37,100 --> 00:41:39,800
We want to force that to be a high-energy.

893
00:41:39,800 --> 00:41:40,800
So this is our sword.

894
00:41:40,800 --> 00:41:41,300
We've grabbed up.

895
00:41:41,300 --> 00:41:43,300
We've got our sword now, right?

896
00:41:44,000 --> 00:41:49,700
And if our sword, we know that it could come back - like nothing it

897
00:41:49,700 --> 00:41:52,300
could come back, come back, nothing at.

898
00:41:52,300 --> 00:41:52,500
All.

899
00:41:53,000 --> 00:41:57,200
Right, so assuming that we got a sword back because if this if this

900
00:41:57,200 --> 00:41:59,800
sword low index was 0, this will just return a null pointer.

901
00:42:00,200 --> 00:42:01,800
And because there's no Soren to have.

902
00:42:02,000 --> 00:42:04,600
So this will force the sword entity into the hiset.

903
00:42:04,600 --> 00:42:05,100
Right?

904
00:42:05,500 --> 00:42:07,100
What we want to do now is say, okay.

905
00:42:07,500 --> 00:42:13,100
Now let's actually move the that sword to where we want it to be.

906
00:42:13,600 --> 00:42:13,800
Now.

907
00:42:13,800 --> 00:42:16,700
What's interesting about that is I'm kind of interested to know Force

908
00:42:16,700 --> 00:42:20,600
entity into high, probably already does the mapping, right?

909
00:42:20,600 --> 00:42:23,000
So it would really want to do is before we did that.

910
00:42:23,100 --> 00:42:24,500
This is kind of inefficient.

911
00:42:24,500 --> 00:42:25,300
I don't love it.

912
00:42:26,400 --> 00:42:29,600
Kind of what we would want to do is we want to get the low entity

913
00:42:29,600 --> 00:42:30,500
first, set.

914
00:42:30,500 --> 00:42:34,200
Its position to where it should be and then force it into high, right?

915
00:42:37,400 --> 00:42:39,000
So it's kind of annoying and inefficient.

916
00:42:39,500 --> 00:42:41,500
Maybe I want to change the way that he power Works a little bit,

917
00:42:41,800 --> 00:42:42,200
right?

918
00:42:42,700 --> 00:42:46,100
I just don't love it because I would like to be able to say to do that

919
00:42:46,100 --> 00:42:48,500
in all one go, but I can.

920
00:42:48,900 --> 00:42:49,700
So

921
00:42:55,200 --> 00:42:55,900
No, I could do.

922
00:42:58,100 --> 00:42:59,100
Maybe I like it this way.

923
00:42:59,700 --> 00:43:01,300
Maybe I like force enemy into hi.

924
00:43:02,800 --> 00:43:04,600
To actually take an optional place.

925
00:43:05,700 --> 00:43:10,100
So when you force into the hiset, maybe that takes a position, right?

926
00:43:12,300 --> 00:43:14,200
So it's like, I want to force this end of the hiset and I want to

927
00:43:14,200 --> 00:43:16,900
force it in the hiset here, right?

928
00:43:18,700 --> 00:43:21,800
So basically what that would do is it would it would change the enemy

929
00:43:21,800 --> 00:43:24,500
location like so, right.

930
00:43:26,100 --> 00:43:28,700
So this would change the end of the location and then it would force

931
00:43:28,700 --> 00:43:30,700
the enemy be high-frequency if it wasn't already.

932
00:43:31,600 --> 00:43:34,300
So we'll change the entity location will say that.

933
00:43:34,300 --> 00:43:36,200
The end of the location is is here.

934
00:43:39,400 --> 00:43:40,300
And then we'll start some money.

935
00:43:40,300 --> 00:43:41,600
Well, you know what?

936
00:43:41,700 --> 00:43:42,900
Maybe this isn't even really that.

937
00:43:42,900 --> 00:43:46,800
Maybe I'm even being more ridiculous here than I thought.

938
00:43:47,200 --> 00:43:49,900
Because what I could do to is say, well, maybe we don't ever even get

939
00:43:49,900 --> 00:43:50,200
it time.

940
00:43:50,200 --> 00:43:51,300
Maybe we don't get it.

941
00:43:51,300 --> 00:43:51,700
Get it.

942
00:43:52,300 --> 00:43:54,400
We don't, we don't treat it as a highly at all.

943
00:43:54,700 --> 00:43:58,500
Maybe we just treat it as a low-energy the whole time, right?

944
00:43:59,700 --> 00:44:01,100
That would essentially be saying.

945
00:44:01,200 --> 00:44:01,900
All right.

946
00:44:01,900 --> 00:44:04,100
Let's see whether there is a sword, right?

947
00:44:04,100 --> 00:44:07,700
So will basically say low entity sword.

948
00:44:08,600 --> 00:44:11,900
Equals Get Low entity and we just we just get it.

949
00:44:12,300 --> 00:44:12,800
There we go.

950
00:44:13,600 --> 00:44:17,000
Assuming that there is one we then change its location to where we

951
00:44:17,000 --> 00:44:17,700
want it to be.

952
00:44:17,900 --> 00:44:21,800
And then we don't maybe we just don't process, We Don't Force It into

953
00:44:21,800 --> 00:44:22,000
high.

954
00:44:22,000 --> 00:44:25,900
We let the camera stuff code just forced into high as it would know.

955
00:44:25,900 --> 00:44:28,500
So maybe I was maybe I was overthinking things and I should just let

956
00:44:28,500 --> 00:44:30,000
the, the systems do their job.

957
00:44:30,400 --> 00:44:32,400
I do think the change any location.

958
00:44:33,200 --> 00:44:37,000
We probably have to think that through a little bit more because I

959
00:44:37,000 --> 00:44:38,500
feel like at the

960
00:44:38,600 --> 00:44:41,300
The moment, right change?

961
00:44:41,300 --> 00:44:44,700
A location should map things into high.

962
00:44:44,700 --> 00:44:48,200
Probably, if they're within the camera bounds, if that makes sense.

963
00:44:48,800 --> 00:44:53,800
So I feel like there should be a to do here that's like to do if this

964
00:44:53,800 --> 00:44:58,200
moves and entity into the camera bounds.

965
00:44:59,300 --> 00:44:59,800
Should.

966
00:45:00,200 --> 00:45:06,800
Automatically go into the hiset immediately and that's really at the

967
00:45:06,800 --> 00:45:08,400
end of the frame on the next frame.

968
00:45:08,400 --> 00:45:11,400
That would go into the hiset when the camera did it check.

969
00:45:11,400 --> 00:45:14,300
But do we want it to go in immediately so that for the rest of the

970
00:45:14,300 --> 00:45:18,200
frame after its created, for the rest of that frame, it actually goes

971
00:45:18,200 --> 00:45:19,100
through and I don't know.

972
00:45:19,300 --> 00:45:20,300
So I'm just putting it to do in there.

973
00:45:22,100 --> 00:45:24,200
All right, so I get that low entity out.

974
00:45:24,800 --> 00:45:29,300
I go ahead and and, and see if I if there actually was one, and if

975
00:45:29,300 --> 00:45:33,000
there was, I'm gonna go ahead and set it to be where the player

976
00:45:33,000 --> 00:45:34,700
themselves actually is.

977
00:45:34,900 --> 00:45:38,800
So this controlling entity here, whatever that controlling entity is

978
00:45:39,600 --> 00:45:43,600
that entity is position is where I want this entity to be for now.

979
00:45:43,700 --> 00:45:47,100
We'll maybe, we'll, we'll set ourselves up for Success here to say,

980
00:45:48,700 --> 00:45:51,300
where we want that to be so that we can modify it later.

981
00:45:52,200 --> 00:45:55,200
You know, set the Z or whatever we want to do there.

982
00:45:55,500 --> 00:45:58,900
So we'll have that and you know, maybe we even do set the Z here or

983
00:45:58,900 --> 00:46:00,500
something, but we'll play with that a little bit later.

984
00:46:01,400 --> 00:46:03,200
And so we're going to change the end of the location.

985
00:46:03,200 --> 00:46:07,600
We're going to change that that sword entity is location.

986
00:46:07,900 --> 00:46:08,400
So

987
00:46:10,200 --> 00:46:15,400
Right, and I think that's really all we needed to do.

988
00:46:15,400 --> 00:46:16,500
What is the zero?

989
00:46:16,500 --> 00:46:17,700
That's where it was.

990
00:46:18,000 --> 00:46:19,200
So, I think that's correct.

991
00:46:19,200 --> 00:46:22,300
The only thing that I would say is if the sword is already in play,

992
00:46:22,300 --> 00:46:24,300
you shouldn't probably be able to recall it.

993
00:46:24,800 --> 00:46:28,800
So what we probably should do is verify that the sword is not actually

994
00:46:28,800 --> 00:46:31,100
already inserted in the world.

995
00:46:31,100 --> 00:46:34,600
And unfortunately, right now, I don't think we really have a way of

996
00:46:34,600 --> 00:46:35,700
representing that.

997
00:46:37,600 --> 00:46:42,500
We don't have that notion in our actual entity structures, right?

998
00:46:46,000 --> 00:46:46,900
Correct me if I'm wrong.

999
00:46:50,200 --> 00:46:53,500
But there really isn't anything that says for a world position,

1000
00:46:53,700 --> 00:46:56,500
whether or not that world position is valid, right?

1001
00:46:57,400 --> 00:47:00,800
So what we could do is introduce some notion of that, right, we could

1002
00:47:00,800 --> 00:47:05,000
introduce some notion that a certain set of this chunk, indices

1003
00:47:05,100 --> 00:47:07,500
indicates an invalid offset, right?

1004
00:47:08,600 --> 00:47:12,200
And that would probably be something along the lines of one of these

1005
00:47:12,200 --> 00:47:15,400
very large values like in 32 Max, right?

1006
00:47:15,700 --> 00:47:19,200
And so, what we could do is say that there is such a thing as that an

1007
00:47:19,600 --> 00:47:22,700
You sort of a rep there, right?

1008
00:47:23,500 --> 00:47:28,000
So the way that that would work is when we add a low entity, if the

1009
00:47:28,000 --> 00:47:32,000
low entity didn't actually have a position that was asked, that was

1010
00:47:32,000 --> 00:47:34,100
supposed to be the position where the enemy should be.

1011
00:47:34,600 --> 00:47:35,000
Right.

1012
00:47:35,000 --> 00:47:38,500
Oops, then what we would do is right there.

1013
00:47:38,600 --> 00:47:42,700
We'd set, it's, it's sort of settings for its position.

1014
00:47:42,900 --> 00:47:45,200
We'd set that equal to the null position.

1015
00:47:45,400 --> 00:47:45,700
Right?

1016
00:47:45,700 --> 00:47:48,200
Like basically like a position that says it's not in the world.

1017
00:47:49,500 --> 00:47:53,500
So the null position would just be some function that returns a world

1018
00:47:53,500 --> 00:47:55,400
position World position.

1019
00:47:55,700 --> 00:47:59,800
This there's our null position where you can anytime get one back.

1020
00:48:00,600 --> 00:48:04,000
It's basically just one of these that's set to something that

1021
00:48:04,000 --> 00:48:08,700
specifically lets us know that it is not valid, right?

1022
00:48:08,700 --> 00:48:13,800
So it's just this, let's say some k x is, is that right?

1023
00:48:14,200 --> 00:48:16,700
And we return it because we know that you can't put things there.

1024
00:48:16,900 --> 00:48:21,100
We already are using tile, chunk uninitialized, as a marker, in our

1025
00:48:21,100 --> 00:48:21,700
hash table.

1026
00:48:21,700 --> 00:48:25,400
So you're not allowed to use in 32 Max as a valid location for

1027
00:48:25,400 --> 00:48:25,900
something.

1028
00:48:26,900 --> 00:48:31,100
So what we could do is just say that is what the null position is.

1029
00:48:31,300 --> 00:48:31,800
Right?

1030
00:48:32,600 --> 00:48:33,400
And we could kill her.

1031
00:48:33,400 --> 00:48:34,400
Everything else is 0.

1032
00:48:34,400 --> 00:48:37,700
I don't know if we should or not, or if we should let it be garbage.

1033
00:48:37,700 --> 00:48:40,200
But for now, I guess we can compare it to zero because why not?

1034
00:48:41,000 --> 00:48:47,600
So this will set that to to be what we just said, however, we would

1035
00:48:47,600 --> 00:48:52,000
like to also do is say is you know, we want something where we can say

1036
00:48:52,000 --> 00:48:56,500
is null and we give it a whirl position and I guess we could.

1037
00:48:56,700 --> 00:49:03,000
Since that's an inline we could just say results equals P chunk X not

1038
00:49:03,000 --> 00:49:05,500
equal to tell chunk uninitialized, right?

1039
00:49:07,100 --> 00:49:10,800
We could also say is valid instead is valid might be a little bit

1040
00:49:10,800 --> 00:49:11,200
better.

1041
00:49:11,900 --> 00:49:14,700
And then that would be right this way.

1042
00:49:15,100 --> 00:49:17,500
That's the way I actually wrote it was for is valid.

1043
00:49:17,800 --> 00:49:18,200
Okay.

1044
00:49:18,800 --> 00:49:22,500
So if we do that, then what we should be able to do here is we should

1045
00:49:22,500 --> 00:49:23,500
be able to

1046
00:49:25,500 --> 00:49:28,900
We should be able to go ahead and also add an assertion that whenever

1047
00:49:28,900 --> 00:49:31,100
you do a change entity location.

1048
00:49:32,300 --> 00:49:35,000
What we could do here is these could note, we wouldn't have to make

1049
00:49:35,000 --> 00:49:35,800
these Corners anymore.

1050
00:49:35,800 --> 00:49:39,700
If we didn't want to write, we could make it so that they actually

1051
00:49:39,700 --> 00:49:40,800
were just using the invalid.

1052
00:49:40,800 --> 00:49:41,300
Or valid.

1053
00:49:41,300 --> 00:49:42,400
I don't know if we want to do that or not.

1054
00:49:42,400 --> 00:49:43,000
We'll see.

1055
00:49:43,400 --> 00:49:48,100
But what we should do is we should say that we can assert either that

1056
00:49:48,100 --> 00:49:54,300
the old p is null, or that it's valid, right, but you should never be

1057
00:49:54,300 --> 00:49:55,000
able to pass.

1058
00:49:55,200 --> 00:49:58,700
Us an invalid position as part of the thing where we're changing the

1059
00:49:58,700 --> 00:50:00,000
locations, right?

1060
00:50:00,000 --> 00:50:02,300
Because this already has passing zero, is that?

1061
00:50:02,700 --> 00:50:05,000
So we'll just do that and make sure that that actually works.

1062
00:50:06,900 --> 00:50:07,900
What was I doing here?

1063
00:50:07,900 --> 00:50:08,800
We're all position.

1064
00:50:09,100 --> 00:50:09,500
That's true.

1065
00:50:09,500 --> 00:50:11,000
It does not have an overloaded.

1066
00:50:11,300 --> 00:50:12,300
You are very right.

1067
00:50:13,200 --> 00:50:17,600
And these are just copy paste - obviously those should not have start

1068
00:50:17,700 --> 00:50:20,600
in front of them and then changing the location.

1069
00:50:20,600 --> 00:50:23,800
Let's see cannot in for our get one from K-State to memory Arena.

1070
00:50:24,000 --> 00:50:25,700
What are you talking about?

1071
00:50:25,700 --> 00:50:27,100
Change entity location?

1072
00:50:27,500 --> 00:50:28,800
Let's see what's going on there.

1073
00:50:30,000 --> 00:50:33,300
Change entity location world.

1074
00:50:34,800 --> 00:50:36,100
Change entity location.

1075
00:50:36,100 --> 00:50:37,500
It should take an arena.

1076
00:50:37,800 --> 00:50:38,700
Why did I, what did I cut?

1077
00:50:38,700 --> 00:50:41,100
And pasted this from such that it didn't take the arena.

1078
00:50:41,300 --> 00:50:42,500
That's particularly odd.

1079
00:50:43,700 --> 00:50:44,000
Yeah.

1080
00:50:44,300 --> 00:50:44,900
I don't know why.

1081
00:50:45,700 --> 00:50:50,000
All right, but either way, we do have our Arena here are World Arena.

1082
00:50:51,400 --> 00:50:55,700
So we have our oh, I guess it doesn't take the game say it just takes

1083
00:50:55,700 --> 00:50:57,700
the World Arena and the world.

1084
00:50:58,100 --> 00:50:59,800
Like so that's

1085
00:51:01,000 --> 00:51:02,600
So, let's take a look here.

1086
00:51:02,700 --> 00:51:03,300
What do we got?

1087
00:51:03,300 --> 00:51:06,100
Changing looking at, first one from area, to remember, Irina address,

1088
00:51:06,100 --> 00:51:07,200
that should be fine.

1089
00:51:08,000 --> 00:51:10,500
Five repetitions star that should be fine.

1090
00:51:11,200 --> 00:51:15,200
So what we need to do now is check to see if the sword is there and

1091
00:51:15,500 --> 00:51:19,400
it's doesn't have a valid position, right?

1092
00:51:19,700 --> 00:51:24,000
Then, we know that we can move it to someplace where it actually is

1093
00:51:24,700 --> 00:51:26,800
going to be valid and that should move in behind be set.

1094
00:51:26,800 --> 00:51:28,300
So that would make the sword up here.

1095
00:51:28,300 --> 00:51:29,700
Now, that is all it will do.

1096
00:51:30,900 --> 00:51:33,400
That's the entirety of what it will do.

1097
00:51:33,700 --> 00:51:39,500
So I don't actually know, I don't actually know what we need to do.

1098
00:51:39,500 --> 00:51:44,500
Here is set a breakpoint to actually see if any of this, if any of

1099
00:51:44,500 --> 00:51:46,500
what we just did was working at all.

1100
00:51:46,800 --> 00:51:47,600
Let's take a look.

1101
00:51:48,300 --> 00:51:55,300
So, let's go to the part where we launched it and I'll launch it to.

1102
00:51:55,900 --> 00:51:56,900
Let's see.

1103
00:51:57,100 --> 00:51:58,000
Let's see here.

1104
00:51:58,300 --> 00:51:58,800
Okay.

1105
00:52:00,300 --> 00:52:01,500
So, let's see what happens.

1106
00:52:01,700 --> 00:52:04,300
Here's my guy, I go to launch the sword.

1107
00:52:04,700 --> 00:52:05,600
What's going on?

1108
00:52:05,600 --> 00:52:10,900
So sword p is what, it's in 2000, chunk.

1109
00:52:10,900 --> 00:52:12,100
It's at a location.

1110
00:52:12,600 --> 00:52:14,500
I assume that's where the player is.

1111
00:52:14,600 --> 00:52:15,600
I don't actually know.

1112
00:52:15,600 --> 00:52:19,500
But that would presumably be where you can go ahead and do that.

1113
00:52:19,600 --> 00:52:25,100
Looks like that works totally as expected.

1114
00:52:25,200 --> 00:52:26,100
So that's good.

1115
00:52:26,900 --> 00:52:29,900
And then we would expect on the

1116
00:52:30,200 --> 00:52:34,800
Pass through we would expect to then get into a position where we were

1117
00:52:34,800 --> 00:52:37,000
going to draw it.

1118
00:52:37,000 --> 00:52:40,800
So we would expect to hit this, not this time, through the loop, but

1119
00:52:40,800 --> 00:52:44,100
next time through and, of course, we don't.

1120
00:52:44,100 --> 00:52:48,200
So for some reason that is not getting moved into the high entity set

1121
00:52:48,600 --> 00:52:51,600
for reasons that are not immediately clear to me, because you would

1122
00:52:51,600 --> 00:52:52,500
expect

1123
00:52:54,200 --> 00:52:56,000
Afterwards for that to be moved to the Heidi set.

1124
00:52:56,000 --> 00:52:58,800
And then it will get looped over here in a way.

1125
00:52:58,800 --> 00:52:59,900
That would eventually tell us.

1126
00:52:59,900 --> 00:53:00,500
Okay.

1127
00:53:00,800 --> 00:53:01,800
It's time to draw this.

1128
00:53:02,100 --> 00:53:02,300
Now.

1129
00:53:02,300 --> 00:53:03,500
What's interesting about that?

1130
00:53:06,900 --> 00:53:08,300
Let's think about this first.

1131
00:53:09,200 --> 00:53:09,700
I think that.

1132
00:53:09,700 --> 00:53:11,300
Yeah, I don't think.

1133
00:53:13,600 --> 00:53:16,500
Yeah, I feel like that should have worked.

1134
00:53:16,500 --> 00:53:20,500
So something in our change entity position there or attempt to

1135
00:53:20,500 --> 00:53:25,500
interview location, something in our change into location, did not

1136
00:53:25,500 --> 00:53:28,900
properly, put it somewhere where the set camera call would find it.

1137
00:53:28,900 --> 00:53:31,400
The set chemical would have happened immediately thereafter, which

1138
00:53:31,400 --> 00:53:32,900
should have brought it into I guess now.

1139
00:53:32,900 --> 00:53:35,500
I think about it right there should have brought it into the active

1140
00:53:35,500 --> 00:53:36,000
set.

1141
00:53:36,000 --> 00:53:38,000
So for some reason it did not get added.

1142
00:53:38,000 --> 00:53:38,100
Now.

1143
00:53:38,100 --> 00:53:43,200
What I'd like to do here is have a way to sort of check that.

1144
00:53:43,400 --> 00:53:45,100
That procedure.

1145
00:53:45,500 --> 00:53:48,700
And so what I'd like to do is see which entity that actually was and

1146
00:53:48,700 --> 00:53:52,800
what I'm going to do is I'm going to go in here and put in a call so I

1147
00:53:52,800 --> 00:53:56,000
can just stop on that one when we do the set camera.

1148
00:53:56,300 --> 00:53:59,800
So inset camera when we do this the the make and

1149
00:54:00,100 --> 00:54:00,900
Frequency.

1150
00:54:01,100 --> 00:54:06,700
What I'd like to do here is just basically stop whenever we find that

1151
00:54:06,700 --> 00:54:09,700
entity and make sure that, that something weird is not happening

1152
00:54:09,700 --> 00:54:10,100
there.

1153
00:54:10,100 --> 00:54:10,700
Right?

1154
00:54:11,000 --> 00:54:12,500
So let's go ahead and do that here.

1155
00:54:12,500 --> 00:54:13,200
Let's see.

1156
00:54:13,300 --> 00:54:14,500
We got the low end the index.

1157
00:54:15,100 --> 00:54:19,700
Let's do if low end of the index equals, you know, three, let's say,

1158
00:54:19,900 --> 00:54:26,900
or I guess, we'll just say if the in test empty index equals 0 if R

1159
00:54:26,900 --> 00:54:29,000
equals test any index.

1160
00:54:30,000 --> 00:54:30,900
And we'll break here.

1161
00:54:30,900 --> 00:54:33,900
So this will be like in through equals 5, okay.

1162
00:54:35,500 --> 00:54:37,000
Silence and mismatch.

1163
00:54:37,000 --> 00:54:37,900
I'm so sorry.

1164
00:54:37,900 --> 00:54:40,100
I did not mean to do assigned unsigned mustache.

1165
00:54:40,300 --> 00:54:44,000
So, let's go ahead and check now to see what happened.

1166
00:54:44,000 --> 00:54:46,200
There would go ahead and do this.

1167
00:54:46,200 --> 00:54:48,100
And again, we haven't done much with our spatial partition yet.

1168
00:54:48,100 --> 00:54:49,500
So we may just have some bugs in there.

1169
00:54:49,900 --> 00:54:52,300
This is the first time that we're actually really doing anything

1170
00:54:52,800 --> 00:54:54,400
substantial with any of our stuff.

1171
00:54:54,800 --> 00:54:59,200
So let's go ahead and set that break point as well and that one

1172
00:55:00,500 --> 00:55:04,000
So let's go ahead and we've got one set when we actually start.

1173
00:55:04,800 --> 00:55:05,400
There we go.

1174
00:55:05,400 --> 00:55:06,100
Oh, wait, I can't.

1175
00:55:06,100 --> 00:55:07,000
There's quite do that yet.

1176
00:55:07,000 --> 00:55:07,600
I suppose.

1177
00:55:08,400 --> 00:55:11,900
So, when I actually do, my my shot.

1178
00:55:12,400 --> 00:55:13,000
There we go.

1179
00:55:13,100 --> 00:55:16,500
Let's take a look at what that entity index actually is.

1180
00:55:16,800 --> 00:55:19,100
So, the sword is index.

1181
00:55:20,600 --> 00:55:23,000
90 2005.

1182
00:55:23,500 --> 00:55:26,800
That is a lot of entities that we've created so far.

1183
00:55:27,200 --> 00:55:29,700
So, we've got 90 2005's our entity.

1184
00:55:30,100 --> 00:55:32,200
Oh, we're out of time.

1185
00:55:32,800 --> 00:55:36,100
I'm going to go ahead and just finish looking at this just because I

1186
00:55:36,100 --> 00:55:39,700
want to see if it's if it's actually finding here and then we can

1187
00:55:39,900 --> 00:55:41,000
finish the debugging tomorrow.

1188
00:55:41,700 --> 00:55:46,200
So I'll go here, I'll step to it and I'll take a look and see.

1189
00:55:46,900 --> 00:55:48,900
We're going to check against test and an index.

1190
00:55:48,900 --> 00:55:50,200
So I'm going to go ahead and set.

1191
00:55:50,400 --> 00:55:55,800
Um, test entity index to be equal to 925.

1192
00:55:56,500 --> 00:55:56,900
There we go.

1193
00:55:56,900 --> 00:56:02,200
So now we'll break in here when that guy actually gets found, right?

1194
00:56:03,800 --> 00:56:04,400
So, let's see.

1195
00:56:04,800 --> 00:56:05,000
Okay.

1196
00:56:05,000 --> 00:56:08,200
So basically, he's just not going into the spatial partition in the

1197
00:56:08,200 --> 00:56:10,700
right place or something, right?

1198
00:56:11,200 --> 00:56:16,000
Because he never actually gets found in this in this call Series,

1199
00:56:16,100 --> 00:56:16,600
right?

1200
00:56:17,400 --> 00:56:19,200
He never that never actually happened.

1201
00:56:19,200 --> 00:56:20,200
So if you actually go and look,

1202
00:56:20,300 --> 00:56:20,700
Look here.

1203
00:56:20,700 --> 00:56:23,700
I'll just verify that it actually did it right test end of the index.

1204
00:56:25,600 --> 00:56:28,300
Let's Take a Look test any index equals 0.

1205
00:56:29,700 --> 00:56:30,600
That's not going to work.

1206
00:56:31,300 --> 00:56:32,300
I did that wrong.

1207
00:56:32,400 --> 00:56:36,800
That was supposed to be a static, my bad, local persist.

1208
00:56:37,400 --> 00:56:38,300
What do we actually call it in?

1209
00:56:38,300 --> 00:56:38,900
This code base?

1210
00:56:38,900 --> 00:56:39,500
I forget.

1211
00:56:39,700 --> 00:56:40,200
I think it's local.

1212
00:56:40,200 --> 00:56:40,800
Persist.

1213
00:56:41,400 --> 00:56:42,600
I could be wrong about that.

1214
00:56:42,900 --> 00:56:43,700
Local persist.

1215
00:56:44,900 --> 00:56:46,600
That's what I actually meant to do.

1216
00:56:47,000 --> 00:56:47,500
My bad.

1217
00:56:48,800 --> 00:56:49,600
Let's try that one more time.

1218
00:56:49,600 --> 00:56:49,700
Now.

1219
00:56:49,700 --> 00:56:53,300
The sword should be the same thing here, actually.

1220
00:56:54,300 --> 00:56:58,900
Because as far as I know the, you know what, I should probably move

1221
00:56:58,900 --> 00:56:59,400
this up.

1222
00:57:00,400 --> 00:57:02,400
Spies do this there.

1223
00:57:02,400 --> 00:57:02,700
Yeah.

1224
00:57:04,500 --> 00:57:07,000
So what I want to do here is I want to go ahead and do that one more

1225
00:57:07,000 --> 00:57:07,800
time, come down here.

1226
00:57:07,800 --> 00:57:11,000
The sorted presumably is at the same energy index because I don't know

1227
00:57:11,000 --> 00:57:11,700
why it wouldn't be.

1228
00:57:12,200 --> 00:57:13,200
So let's go ahead and verify that.

1229
00:57:13,200 --> 00:57:15,500
That's true 9 2005.

1230
00:57:15,500 --> 00:57:18,300
It is exactly as we would expect.

1231
00:57:18,800 --> 00:57:21,400
So let's go back up and try that one more time.

1232
00:57:21,400 --> 00:57:25,300
I actually meant to yes Otep test any index is now global so I can

1233
00:57:25,300 --> 00:57:28,900
just set it to whatever I want and run and see if that ever actually

1234
00:57:28,900 --> 00:57:29,900
hits and it doesn't have

1235
00:57:31,000 --> 00:57:34,800
So that's concerning that basically means that something I did there

1236
00:57:34,800 --> 00:57:37,500
was unless I made a typo.

1237
00:57:38,000 --> 00:57:41,600
So, assuming that I did not make a typo, what that means is our

1238
00:57:41,600 --> 00:57:43,900
spatial partition is not quite debugged yet.

1239
00:57:44,200 --> 00:57:48,400
Because once we do this change, entity location to move the sword P to

1240
00:57:48,400 --> 00:57:49,500
its new location.

1241
00:57:49,700 --> 00:57:52,800
It should be at the same location as the entity is.

1242
00:57:52,800 --> 00:57:57,300
And at that point, it should, it should be triggered as something

1243
00:57:57,300 --> 00:58:00,300
that's, that's essentially going to be moved.

1244
00:58:00,500 --> 00:58:04,400
In with the camera state, so if we take a look at that call again,

1245
00:58:04,400 --> 00:58:05,300
sorry to belabor it here.

1246
00:58:05,300 --> 00:58:06,400
I'm just kind of curious.

1247
00:58:06,400 --> 00:58:10,800
I would like to know if we take a look at what happens in that call.

1248
00:58:10,800 --> 00:58:13,400
I'd like to see what spatial partition.

1249
00:58:13,400 --> 00:58:15,400
It's actually added to, right.

1250
00:58:15,600 --> 00:58:18,900
So let's go ahead and get that chunk here and see.

1251
00:58:19,400 --> 00:58:21,600
So we got back, chunk 000.

1252
00:58:21,600 --> 00:58:24,200
There's already 10 entities in it, which looks reasonable.

1253
00:58:24,200 --> 00:58:24,800
Right?

1254
00:58:26,000 --> 00:58:28,900
And and so there's those those low entities.

1255
00:58:29,500 --> 00:58:30,200
There they are.

1256
00:58:30,500 --> 00:58:31,100
Right.

1257
00:58:32,600 --> 00:58:35,600
And so what I'd like to do, there's the player and the monstar,

1258
00:58:35,600 --> 00:58:37,400
presumably and the familiar.

1259
00:58:38,000 --> 00:58:41,800
What I'd like to do is see now, when we add this right, let's add that

1260
00:58:41,800 --> 00:58:45,600
in what actually happened there, block entity count.

1261
00:58:48,300 --> 00:58:49,000
What did I miss that?

1262
00:58:49,000 --> 00:58:50,100
Did not go up.

1263
00:58:50,400 --> 00:58:51,800
Something weird happened there.

1264
00:58:51,800 --> 00:58:52,800
Let's try that one more time.

1265
00:58:52,800 --> 00:58:54,800
I need to step through this more carefully.

1266
00:58:54,800 --> 00:58:55,400
Clearly.

1267
00:58:58,700 --> 00:59:03,100
All right, so we get a chunk, we get a block.

1268
00:59:03,600 --> 00:59:06,500
The block is, is the first block, which is exactly what we would

1269
00:59:06,500 --> 00:59:07,400
expect.

1270
00:59:07,600 --> 00:59:13,100
So if I look at the block or bull clock as perhaps, I type in, I have

1271
00:59:13,100 --> 00:59:14,800
the edit account, they store 16.

1272
00:59:14,800 --> 00:59:16,200
/, so 10 is fine.

1273
00:59:16,800 --> 00:59:19,300
And so what we should be doing here is we should be incrementing it by

1274
00:59:19,300 --> 00:59:19,500
one.

1275
00:59:19,500 --> 00:59:19,600
Now.

1276
00:59:19,600 --> 00:59:22,600
It could be that the just the compiler being ridiculous.

1277
00:59:22,700 --> 00:59:23,000
Oops.

1278
00:59:23,000 --> 00:59:23,900
That's not what I meant to do.

1279
00:59:24,600 --> 00:59:28,000
So, I want to do one more check, which is just, let's take this

1280
00:59:28,000 --> 00:59:28,300
actual.

1281
00:59:28,500 --> 00:59:31,300
Value here, this actual pointer value.

1282
00:59:31,300 --> 00:59:32,300
So we could take a look at it.

1283
00:59:32,300 --> 00:59:37,400
Even after the, the scope exits because visual Studios awful at being

1284
00:59:37,400 --> 00:59:39,700
able to show you variables when they exit scope.

1285
00:59:39,700 --> 00:59:40,800
It's really, really bad.

1286
00:59:41,000 --> 00:59:44,100
So I what I want to do is just make sure that we're still looking at

1287
00:59:44,100 --> 00:59:44,600
it properly.

1288
00:59:44,600 --> 00:59:49,300
So fidget World empty block that at that pointer, there it is, and

1289
00:59:49,300 --> 00:59:50,600
there's those low entity index.

1290
00:59:50,600 --> 00:59:51,400
So 10.

1291
00:59:51,800 --> 00:59:53,900
This one should get filled next, right?

1292
00:59:53,900 --> 00:59:57,300
These should just be these should be relevant entities that aren't

1293
00:59:57,300 --> 00:59:58,300
actually doing anything, right?

1294
00:59:58,500 --> 00:59:59,800
now, because there's

1295
01:00:00,000 --> 01:00:00,700
Only 10 in there.

1296
01:00:01,800 --> 01:00:03,200
So we go ahead and do that.

1297
01:00:03,700 --> 01:00:06,700
This should increment it by 1 and stick it in there, which it did.

1298
01:00:06,800 --> 01:00:10,300
And so this is, you know, this block that has 11 things in it.

1299
01:00:10,400 --> 01:00:14,600
Now, the question is, why does that block not get iterated over to

1300
01:00:14,600 --> 01:00:17,200
move things into the hiset?

1301
01:00:17,500 --> 01:00:19,700
So, let's take a look when we go into set camera.

1302
01:00:19,800 --> 01:00:21,100
Let's just find out.

1303
01:00:21,900 --> 01:00:23,100
You know why it does that.

1304
01:00:23,200 --> 01:00:26,000
So offset and check frequency by area, we don't really care about.

1305
01:00:26,000 --> 01:00:28,400
That's the thing, that's that's removing things from the hiset.

1306
01:00:28,400 --> 01:00:29,000
We want to know why.

1307
01:00:29,000 --> 01:00:30,900
Something is not being added to the hiset.

1308
01:00:31,000 --> 01:00:31,500
So, let's take a look.

1309
01:00:31,600 --> 01:00:33,200
That men chunk P.

1310
01:00:33,300 --> 01:00:36,200
It's negative 2, negative 1 0.

1311
01:00:36,300 --> 01:00:39,500
Let's Take a look at the max chunk P the max junk P.

1312
01:00:39,500 --> 01:00:44,700
So that clearly would include the chunk that we're talking about.

1313
01:00:45,100 --> 01:00:50,600
So let's go ahead in here and take a look at our our code.

1314
01:00:50,900 --> 01:00:53,500
So we're going to grab the first chunk here.

1315
01:00:53,500 --> 01:00:55,100
There's nothing nothing in it.

1316
01:00:55,300 --> 01:00:56,000
So that's fine.

1317
01:00:56,000 --> 01:00:56,200
Again.

1318
01:00:56,200 --> 01:00:57,900
We're looking to see this block come up.

1319
01:00:58,400 --> 01:01:01,400
So what I could do to is I could just make it right here.

1320
01:01:02,100 --> 01:01:06,000
Where we actually where we actually see, which blocks are.

1321
01:01:06,000 --> 01:01:07,900
But, let's go ahead and look at the chunks first.

1322
01:01:07,900 --> 01:01:08,800
So, let's look at the chunks.

1323
01:01:08,800 --> 01:01:10,200
There's so here we go.

1324
01:01:10,500 --> 01:01:11,400
There's our chunk.

1325
01:01:11,500 --> 01:01:13,700
The chunk was 000, if I remember correctly.

1326
01:01:14,400 --> 01:01:20,400
So, we should be able to find chunk 000 here at some point, right?

1327
01:01:22,200 --> 01:01:23,700
What is our chunk?

1328
01:01:23,700 --> 01:01:25,400
Why chunk EX

1329
01:01:27,100 --> 01:01:28,800
This one, there's chunks zero.

1330
01:01:29,400 --> 01:01:29,800
All right.

1331
01:01:29,800 --> 01:01:33,200
So our first block is the actual block that we thought it should be

1332
01:01:33,500 --> 01:01:37,900
right and so entity 10 should actually be the entity that we're trying

1333
01:01:37,900 --> 01:01:39,500
to do the sword, right?

1334
01:01:40,000 --> 01:01:41,100
So let's see what happens.

1335
01:01:41,700 --> 01:01:47,200
We go into the block, don't know why it highlighted that line that's a

1336
01:01:47,200 --> 01:01:47,900
little odd.

1337
01:01:47,900 --> 01:01:49,600
Let's make sure that nothing weird just happened.

1338
01:01:49,600 --> 01:01:49,900
There.

1339
01:01:51,700 --> 01:01:52,400
Block.

1340
01:01:55,600 --> 01:01:56,900
And then let's step through this.

1341
01:01:56,900 --> 01:01:58,100
So we go through.

1342
01:01:58,700 --> 01:02:00,200
We're looking at the first entity.

1343
01:02:00,200 --> 01:02:02,300
It's 40, that's exactly what it should be.

1344
01:02:03,200 --> 01:02:04,700
So that's not necessary.

1345
01:02:05,100 --> 01:02:06,300
We come through here.

1346
01:02:06,900 --> 01:02:08,000
We're going to go through.

1347
01:02:08,100 --> 01:02:11,700
Let's let me just go ahead and put that in there, low entity index

1348
01:02:12,000 --> 01:02:13,400
rights 41.

1349
01:02:14,000 --> 01:02:16,700
And so we can go through several of these until we get up to the one

1350
01:02:16,700 --> 01:02:20,300
that we actually care about and all of these are already in the hiset

1351
01:02:20,300 --> 01:02:22,400
which is exactly what we would expect.

1352
01:02:23,200 --> 01:02:24,000
And but the next

1353
01:02:24,200 --> 01:02:26,300
One is the one we actually care about.

1354
01:02:27,000 --> 01:02:31,300
And so, here we are, this is actually 90 2005, which is the one we

1355
01:02:31,300 --> 01:02:32,500
actually care about.

1356
01:02:32,900 --> 01:02:35,200
So let's go ahead and see what happens.

1357
01:02:35,400 --> 01:02:38,000
We get its camera space p, right?

1358
01:02:38,400 --> 01:02:39,000
It's camera.

1359
01:02:39,000 --> 01:02:43,600
Space p is apparently complete garbage.

1360
01:02:44,300 --> 01:02:45,700
Why is this camera Pace?

1361
01:02:45,700 --> 01:02:48,500
Pace P complete garbage.

1362
01:02:50,000 --> 01:02:52,300
That's no good.

1363
01:02:52,900 --> 01:02:54,000
That's no good at all.

1364
01:02:54,100 --> 01:02:54,200
All.

1365
01:02:56,000 --> 01:02:59,800
So I guess the lesson here is that change and a deal.

1366
01:03:00,000 --> 01:03:04,400
Nation does not actually set the location of the entity.

1367
01:03:04,600 --> 01:03:07,400
It just updates the thing.

1368
01:03:07,400 --> 01:03:10,800
And I guess we kind of knew that if I maybe had been programming this

1369
01:03:10,800 --> 01:03:12,200
code base a little more regularly.

1370
01:03:12,200 --> 01:03:13,400
We just kind of know that.

1371
01:03:15,000 --> 01:03:22,400
So the question is, should I do something to just ensure that?

1372
01:03:22,600 --> 01:03:26,200
I mean, it looks like we're always doing that set anyway, so I guess

1373
01:03:26,200 --> 01:03:29,400
what I'd say is, can we just get rid of this?

1374
01:03:31,300 --> 01:03:35,100
And make it so that that always properly updates it, right.

1375
01:03:37,000 --> 01:03:37,800
So that was it.

1376
01:03:37,800 --> 01:03:39,100
We really didn't have much of a bug there.

1377
01:03:39,100 --> 01:03:42,200
It's actually just in our sword code that the spatial partition was

1378
01:03:42,200 --> 01:03:43,100
working just fine.

1379
01:03:43,500 --> 01:03:46,300
So really what we want to do is here on change entity location.

1380
01:03:47,500 --> 01:03:49,500
What we would want to do here is on changing the location.

1381
01:03:49,500 --> 01:03:50,700
We just want to update it.

1382
01:03:51,000 --> 01:03:54,400
So it basically at the end of this function after everything is done.

1383
01:03:54,500 --> 01:04:00,600
We'd say if there was a new position assigned to the guy, then we go

1384
01:04:00,600 --> 01:04:04,600
ahead and say assign that new position to where they are, where they

1385
01:04:04,600 --> 01:04:06,100
actually are, right.

1386
01:04:07,200 --> 01:04:08,900
Oh, so that's why we didn't do it.

1387
01:04:08,900 --> 01:04:12,200
We don't even have the low entities address.

1388
01:04:13,200 --> 01:04:15,300
All right, that actually makes some sense.

1389
01:04:15,900 --> 01:04:19,200
So I guess, what we want to do is we want to make that a little bit

1390
01:04:19,200 --> 01:04:19,800
more.

1391
01:04:20,300 --> 01:04:23,200
Yeah, we want to make that V8 something, where you actually pass a

1392
01:04:23,200 --> 01:04:24,500
little bit more in there.

1393
01:04:24,700 --> 01:04:25,300
Right?

1394
01:04:25,300 --> 01:04:26,100
We want to make that.

1395
01:04:26,100 --> 01:04:29,700
So that so that, this is more like a change, any location raw,

1396
01:04:29,700 --> 01:04:30,700
something like that.

1397
01:04:30,700 --> 01:04:31,000
Right?

1398
01:04:31,000 --> 01:04:34,700
And then we've got something more like this, right?

1399
01:04:35,400 --> 01:04:36,100
And that's enough code.

1400
01:04:36,100 --> 01:04:37,900
Now that this is probably not going to be something that's called in

1401
01:04:37,900 --> 01:04:38,600
line at all.

1402
01:04:39,000 --> 01:04:42,400
Alright, so this is going to be where we pass, you know.

1403
01:04:42,900 --> 01:04:47,300
The low end of the index and the low end of the pointer, right?

1404
01:04:47,300 --> 01:04:52,400
So if they can actually be assigned properly and so in that case, it

1405
01:04:52,400 --> 01:04:57,700
just goes ahead and punts directly to the the other function.

1406
01:04:57,700 --> 01:04:59,700
So it does the set like so.

1407
01:05:00,600 --> 01:05:06,200
And then it will also go ahead and handle the assignment so that we

1408
01:05:06,200 --> 01:05:08,300
won't have that kind of bug because that's not a bug.

1409
01:05:08,300 --> 01:05:09,700
We want to be having a lot, right?

1410
01:05:09,700 --> 01:05:12,700
It's annoying and it's hard to track down takes a little while.

1411
01:05:12,900 --> 01:05:13,000
Ow.

1412
01:05:14,100 --> 01:05:16,600
So I'm going to go ahead and make that so you call through this from

1413
01:05:16,600 --> 01:05:19,600
now on and what that's going to do is going to say, if there was a new

1414
01:05:19,600 --> 01:05:21,500
P then it goes.

1415
01:05:21,600 --> 01:05:25,000
And it says that the low entities P equals the new P.

1416
01:05:25,000 --> 01:05:28,900
Like so, but if there wasn't, then it'll say the new NP equals, the

1417
01:05:28,900 --> 01:05:30,800
null position, right?

1418
01:05:31,400 --> 01:05:32,000
Like that.

1419
01:05:34,200 --> 01:05:36,200
And so that should basically do it.

1420
01:05:36,600 --> 01:05:37,900
I think that's about it.

1421
01:05:38,000 --> 01:05:38,400
This will.

1422
01:05:38,400 --> 01:05:40,300
Now this would now just work.

1423
01:05:40,600 --> 01:05:45,300
I think could we just call that straight away if old PR in the same

1424
01:05:45,300 --> 01:05:51,800
chunk old P Nu P but if there's no old P, what happens if old P it

1425
01:05:51,800 --> 01:05:52,600
does this?

1426
01:05:53,400 --> 01:05:57,600
And I guess it, what we want to do something where it does if Nu P do

1427
01:05:57,600 --> 01:05:58,800
this, right?

1428
01:05:58,900 --> 01:05:59,800
So we won't do that.

1429
01:06:00,700 --> 01:06:04,000
If it's behind my head, I can't see what's going on.

1430
01:06:04,700 --> 01:06:04,900
Yeah.

1431
01:06:04,900 --> 01:06:08,500
So what we want to do is allow this function to take it so that they

1432
01:06:08,500 --> 01:06:09,500
could both be null.

1433
01:06:09,700 --> 01:06:11,800
So, at that point you wouldn't even have to do this anymore.

1434
01:06:11,900 --> 01:06:13,100
You just do that.

1435
01:06:13,300 --> 01:06:16,200
And then this happens to be, no, it just works, right?

1436
01:06:16,500 --> 01:06:19,600
And that looks pretty good.

1437
01:06:19,900 --> 01:06:20,800
Pretty good.

1438
01:06:20,800 --> 01:06:21,500
I would say.

1439
01:06:22,900 --> 01:06:25,800
Okay, so this note doesn't take that obviously.

1440
01:06:25,800 --> 01:06:29,700
So these guys all now just take that low entity.

1441
01:06:30,100 --> 01:06:30,900
As well.

1442
01:06:31,200 --> 01:06:34,200
And then, I think it's all good.

1443
01:06:34,200 --> 01:06:38,700
I think for lucky that fixes our problem.

1444
01:06:39,300 --> 01:06:41,100
This guy doesn't over assignment here.

1445
01:06:41,100 --> 01:06:43,000
It looks like our no, he doesn't.

1446
01:06:43,200 --> 01:06:43,700
So that's fine.

1447
01:06:43,700 --> 01:06:51,300
To change, entity location, that will take that actual sword entity.

1448
01:06:51,800 --> 01:06:53,000
And then, I think that's done.

1449
01:06:53,500 --> 01:06:55,800
All right, so hopefully we fixed our bug.

1450
01:06:56,000 --> 01:06:59,200
I don't know if he did or not, but we'll have to take a look, I guess

1451
01:06:59,200 --> 01:06:59,900
and see.

1452
01:07:00,000 --> 01:07:01,400
See if we did.

1453
01:07:02,400 --> 01:07:03,000
There we go.

1454
01:07:05,900 --> 01:07:06,800
So yes, there we go.

1455
01:07:06,800 --> 01:07:09,000
We were able to drop our sword now, so we're all good.

1456
01:07:09,100 --> 01:07:12,600
Alright, so basically, tomorrow, we will continue on that.

1457
01:07:12,600 --> 01:07:15,600
That route will implement the table that I talked about the beginning

1458
01:07:15,600 --> 01:07:16,000
here.

1459
01:07:17,500 --> 01:07:20,100
And then I think that's should be about it for our sword.

1460
01:07:21,100 --> 01:07:23,200
And then, we can sort of focus on what happens with hip points and

1461
01:07:23,200 --> 01:07:23,700
that sort of stuff.

1462
01:07:23,700 --> 01:07:24,600
So, that seems pretty reasonable.

1463
01:07:24,600 --> 01:07:27,100
So I had to go about 5 minutes over there.

1464
01:07:27,100 --> 01:07:29,600
I think we started about five minutes late, so it wasn't too much

1465
01:07:29,600 --> 01:07:29,900
longer.

1466
01:07:30,100 --> 01:07:31,400
That's that's that's not too bad.

1467
01:07:32,200 --> 01:07:32,600
It's good.

1468
01:07:32,600 --> 01:07:35,100
Like I said, you never want to leave bugs in your code base.

1469
01:07:35,100 --> 01:07:38,000
You always want to find them as soon as you possibly can, especially

1470
01:07:38,000 --> 01:07:39,000
in that circumstance, right?

1471
01:07:39,000 --> 01:07:39,500
That was a good one.

1472
01:07:39,500 --> 01:07:40,100
A fine too.

1473
01:07:40,100 --> 01:07:42,700
Because we move the code into a better place.

1474
01:07:42,700 --> 01:07:46,000
Where that bug can't happen really anymore in that way.

1475
01:07:46,000 --> 01:07:47,700
And so that's like what you want to do.

1476
01:07:47,700 --> 01:07:50,400
You want to always be moving towards something, where bugs that happen

1477
01:07:50,400 --> 01:07:51,500
once, don't happen again.

1478
01:07:54,700 --> 01:07:57,400
Because it doesn't cost a lot to hunt down any individual bug.

1479
01:07:57,400 --> 01:08:00,400
But if you have the kind of bug that perpetuates itself, that's where

1480
01:08:00,400 --> 01:08:01,200
you start getting into trouble.

1481
01:08:01,500 --> 01:08:02,500
All right.

1482
01:08:02,500 --> 01:08:07,100
So let's go ahead and and start the Q&A.

1483
01:08:07,100 --> 01:08:11,300
If you could, please prefix your question with Q: so I can see it.

1484
01:08:11,300 --> 01:08:14,400
And please try to keep it to stuff that we did on today's stream or

1485
01:08:14,400 --> 01:08:16,399
that we have done in a previous dream.

1486
01:08:16,399 --> 01:08:19,700
If you want to ask off-topic questions or ask about things that we

1487
01:08:19,700 --> 01:08:22,300
might do in the future or how we might do something.

1488
01:08:22,600 --> 01:08:24,399
Those are totally fine.

1489
01:08:24,700 --> 01:08:26,600
To ask, but please ask them during the pre stream.

1490
01:08:26,600 --> 01:08:29,100
So come about 15 minutes before the stream starts.

1491
01:08:29,100 --> 01:08:30,500
That's when we do off-topic stuff.

1492
01:08:30,899 --> 01:08:35,399
All right, QA it is Q&A time.

1493
01:08:46,000 --> 01:08:49,500
What do you mean that Visual Studio is horrible at showing variables.

1494
01:08:49,700 --> 01:08:53,800
So I can, I can I can actually tell you exactly what I meant I can.

1495
01:08:53,800 --> 01:08:57,000
I can literally just step through that same thing again that I was

1496
01:08:57,000 --> 01:08:59,800
showing before and I can, it's the kind of

1497
01:09:00,000 --> 01:09:03,700
Classic case of how bad Visual Studio is showing you variables and it

1498
01:09:03,700 --> 01:09:06,500
might be my imagination sometimes.

1499
01:09:06,500 --> 01:09:08,800
You know, my memory.

1500
01:09:08,800 --> 01:09:09,700
I'm old, right.

1501
01:09:09,700 --> 01:09:11,100
My memory is not so good.

1502
01:09:11,800 --> 01:09:15,100
But I seem to recall that this didn't used to actually be a problem.

1503
01:09:15,200 --> 01:09:17,100
I feel like they actually broke this.

1504
01:09:19,899 --> 01:09:20,399
But who knows?

1505
01:09:20,800 --> 01:09:22,300
So here we go.

1506
01:09:23,000 --> 01:09:24,800
I'm stepping through here, right?

1507
01:09:26,100 --> 01:09:31,100
And I'm in a situation where I've got this variable, it's called

1508
01:09:31,100 --> 01:09:32,700
block, right.

1509
01:09:32,700 --> 01:09:36,600
And here it is to find right there, and I want to see what happens to

1510
01:09:36,600 --> 01:09:39,600
block after this line is executed, right?

1511
01:09:39,600 --> 01:09:41,899
So, this is literally what I just did, right?

1512
01:09:41,899 --> 01:09:43,100
You remember seeing me do this?

1513
01:09:43,399 --> 01:09:46,300
So, I have this block, it has this array.

1514
01:09:46,700 --> 01:09:50,100
It's got a name of the account and I want to see what it does to this

1515
01:09:50,100 --> 01:09:51,399
when I step over this line.

1516
01:09:52,000 --> 01:09:55,400
So, I hit F10 to step over the line and Watch What Happens.

1517
01:09:56,800 --> 01:09:57,400
Right?

1518
01:09:57,900 --> 01:10:00,000
You have no idea what happened now.

1519
01:10:00,200 --> 01:10:01,200
This is what it shows.

1520
01:10:01,200 --> 01:10:01,500
You.

1521
01:10:01,700 --> 01:10:04,800
It shows you stale information.

1522
01:10:04,900 --> 01:10:08,700
This is not even what is still at this pointer.

1523
01:10:09,700 --> 01:10:10,300
Right?

1524
01:10:10,800 --> 01:10:12,400
It's freaking ridiculous.

1525
01:10:12,800 --> 01:10:18,100
And now if you hit the refresh key in it, deletes the whole thing,

1526
01:10:18,100 --> 01:10:18,600
right?

1527
01:10:19,700 --> 01:10:22,000
And I don't know if there's a way, I don't know.

1528
01:10:22,100 --> 01:10:25,700
Like, you might be able to just refresh one of them like so here's

1529
01:10:25,700 --> 01:10:30,700
block and here's this and I step and now like I refresh just that one.

1530
01:10:30,700 --> 01:10:32,100
No, you can't even do that.

1531
01:10:32,300 --> 01:10:35,700
So it's just awful like it knows the pointer the porters.

1532
01:10:35,700 --> 01:10:36,200
The same.

1533
01:10:36,200 --> 01:10:37,300
It didn't change a show.

1534
01:10:37,300 --> 01:10:39,400
Me what's at that location, right?

1535
01:10:39,900 --> 01:10:42,700
It's horrid, and it didn't use to have this problem.

1536
01:10:42,900 --> 01:10:46,400
It used to be in like Visual Studio, 6 and stuff, or at least in five.

1537
01:10:46,400 --> 01:10:47,500
It must be five or six.

1538
01:10:47,800 --> 01:10:51,100
It would just still show you this after the fact, it just be like,

1539
01:10:51,100 --> 01:10:53,300
well, that's this is what at the memory now if you want to see it and

1540
01:10:53,300 --> 01:10:54,900
like, yeah, I do want to see it.

1541
01:10:55,400 --> 01:10:57,300
And so you have to go through all these gyrations.

1542
01:10:57,300 --> 01:10:58,900
It's just, it's really bad.

1543
01:11:01,600 --> 01:11:04,000
Visual Studio has gotten worse with every revision.

1544
01:11:04,400 --> 01:11:05,400
It's awful.

1545
01:11:05,400 --> 01:11:08,800
And unfortunately, you have no choice but to upgrade because you need

1546
01:11:08,800 --> 01:11:09,800
the new code gen.

1547
01:11:09,900 --> 01:11:14,400
Like you need to be able to upgrade to the newer compilers to Output

1548
01:11:14,400 --> 01:11:17,500
to like x64 first.

1549
01:11:17,500 --> 01:11:19,200
And then to AVX avx2.

1550
01:11:19,200 --> 01:11:22,300
You need to upgrade to the newer compilers and when you upgrade to a

1551
01:11:22,300 --> 01:11:24,500
compilers, you have to upgrade your debuggers because the older

1552
01:11:24,500 --> 01:11:27,600
debuggers can't support those new instruction sets and blah blah blah.

1553
01:11:28,200 --> 01:11:30,500
And then your debugger just gets worse with every revision.

1554
01:11:30,500 --> 01:11:30,700
So,

1555
01:11:30,800 --> 01:11:33,500
So yeah, this debugger is like 10 times worse than to the letter that

1556
01:11:33,500 --> 01:11:34,000
came with Ms.

1557
01:11:34,000 --> 01:11:36,200
Vc5, its way, way worse.

1558
01:11:37,900 --> 01:11:42,100
And unfortunately, that's just, that's the, yeah, that's par for the

1559
01:11:42,100 --> 01:11:42,400
course.

1560
01:11:42,400 --> 01:11:43,400
It's Visual Studio.

1561
01:11:43,900 --> 01:11:46,600
You just you, you like brace yourself every time they compliment

1562
01:11:46,600 --> 01:11:47,200
upgrade.

1563
01:11:47,300 --> 01:11:50,000
Your like, what are all the things that they broke in the upgrade,

1564
01:11:50,100 --> 01:11:50,600
right?

1565
01:11:52,600 --> 01:11:55,300
When doing exploratory experimental programming, I find it difficult

1566
01:11:55,300 --> 01:11:58,000
to decide between seeing things through or switching to a different

1567
01:11:58,000 --> 01:11:58,600
approach.

1568
01:11:58,800 --> 01:11:59,900
There have been many times.

1569
01:12:00,000 --> 01:12:02,600
Is where I start off on a path and things are going great.

1570
01:12:02,600 --> 01:12:05,800
But eventually, I stalled due to some unforeseen problem often.

1571
01:12:05,800 --> 01:12:09,000
I spend a crazy amount of time thinking about how to solve get around

1572
01:12:09,000 --> 01:12:09,700
the problem.

1573
01:12:09,800 --> 01:12:14,500
Even in simple ways analysis paralysis, if you will any suggestions

1574
01:12:14,700 --> 01:12:17,400
literally just keep on writing code, no matter how dumb it is,

1575
01:12:17,400 --> 01:12:18,100
question mark.

1576
01:12:19,500 --> 01:12:23,200
I'm out of cough drops, which is never a good thing side side note.

1577
01:12:25,300 --> 01:12:25,900
so,

1578
01:12:28,100 --> 01:12:30,300
It's a kind of a case-by-case.

1579
01:12:30,300 --> 01:12:31,500
Basis is what I would say.

1580
01:12:33,500 --> 01:12:35,800
Obviously and this was kind of a thing.

1581
01:12:35,800 --> 01:12:37,600
This actually came up on the forums a little bit.

1582
01:12:37,900 --> 01:12:41,700
Someone had pointed to a person who had a blog post, who is kind of

1583
01:12:41,700 --> 01:12:44,100
saying that, you know, I often say compression oriented.

1584
01:12:44,100 --> 01:12:45,600
Programming is a good way to go, right?

1585
01:12:45,800 --> 01:12:46,500
You explore.

1586
01:12:46,500 --> 01:12:48,100
You can press, explore compress, right?

1587
01:12:50,400 --> 01:12:51,900
And this person wrote a blog entry.

1588
01:12:54,500 --> 01:12:57,900
Excuse me, where they were talking about how, like well that doesn't

1589
01:12:57,900 --> 01:13:03,000
really work because you might compress the code wrong, right?

1590
01:13:04,100 --> 01:13:06,700
Which is a hilarious objection to have, because it's kind of like

1591
01:13:06,700 --> 01:13:11,900
saying, you know, you asked someone, if you go ask, you know, Usain

1592
01:13:11,900 --> 01:13:12,900
Bolt or whatever.

1593
01:13:14,100 --> 01:13:15,600
How are you running?

1594
01:13:16,000 --> 01:13:21,400
And he's like, oh, well, you know you like you start off and you like

1595
01:13:21,400 --> 01:13:23,500
move one leg in front of the other one.

1596
01:13:23,600 --> 01:13:26,500
And you push on that one while you lift up the other leg and put it in

1597
01:13:26,500 --> 01:13:28,300
front of the other one and just repeat that process.

1598
01:13:28,300 --> 01:13:28,800
Right?

1599
01:13:28,900 --> 01:13:32,000
And then someone goes out on a track and they like follow those

1600
01:13:32,000 --> 01:13:32,600
instructions.

1601
01:13:32,600 --> 01:13:35,700
And they're like, why am I not running as fast as Usain Bolt?

1602
01:13:35,700 --> 01:13:40,400
I didn't break this and you're like, yeah because, you know, you suck

1603
01:13:40,400 --> 01:13:42,200
at running like sorry, right.

1604
01:13:42,600 --> 01:13:43,200
And that was the case.

1605
01:13:43,400 --> 01:13:44,500
Freshen the blog post.

1606
01:13:45,700 --> 01:13:49,900
And so the answer there is like, we're all trying to be Usain Bolt,

1607
01:13:50,000 --> 01:13:50,300
right?

1608
01:13:50,300 --> 01:13:52,400
We're all trying to go in that direction.

1609
01:13:52,400 --> 01:13:54,900
We're trying to get our Sprint up to that speed.

1610
01:13:54,900 --> 01:13:56,000
We're trying to do it.

1611
01:13:57,300 --> 01:14:01,800
There's the argument about what is the right ways to run meaning the

1612
01:14:01,800 --> 01:14:02,900
mechanics of it.

1613
01:14:04,100 --> 01:14:07,600
But then there's also just the practice involved, right?

1614
01:14:07,600 --> 01:14:12,900
And no amount of knowing how Usain Bolt runs is actually going to let

1615
01:14:12,900 --> 01:14:14,200
you run at his speed.

1616
01:14:14,300 --> 01:14:17,200
So what we're all trying to do, and I try every day when I'm

1617
01:14:17,200 --> 01:14:19,600
programming, I'm constantly trying to improve as well, right?

1618
01:14:19,600 --> 01:14:22,300
I'm trying to I'm trying to get to bolt land, right?

1619
01:14:24,800 --> 01:14:28,400
Is there's there's the analysis of the mechanics and then there's just

1620
01:14:28,400 --> 01:14:33,300
the practice and unfortunately, at some point it is the case that the

1621
01:14:33,300 --> 01:14:36,400
practice is what really counts the most.

1622
01:14:37,100 --> 01:14:40,900
And so what I was going to say about your question was, there's a

1623
01:14:40,900 --> 01:14:45,800
split there, some of what you may be running into is stuff that you

1624
01:14:45,800 --> 01:14:50,200
can think about, in terms of abstract mechanics.

1625
01:14:50,300 --> 01:14:52,800
Like, am I putting one foot in front of the other, right?

1626
01:14:52,800 --> 01:14:53,200
Like, am I?

1627
01:14:53,400 --> 01:14:54,200
Pushing off, right?

1628
01:14:54,200 --> 01:14:55,800
Am I doing these other things, right?

1629
01:14:56,500 --> 01:14:59,800
Then we can talk about abstract lie, but the other half of it.

1630
01:15:00,700 --> 01:15:02,600
From the from the analogy, right?

1631
01:15:02,600 --> 01:15:07,100
Is just the practice, just the running everyday and tuning, all of

1632
01:15:07,100 --> 01:15:11,900
your instincts and your Locomotion and everything, so that you've got

1633
01:15:11,900 --> 01:15:14,700
it down where you can really go super fast, right?

1634
01:15:16,000 --> 01:15:19,200
And that's the part that is not necessarily something you can talk

1635
01:15:19,200 --> 01:15:20,600
about abstractly, right?

1636
01:15:20,700 --> 01:15:24,000
Because there's so many different techniques that you might learn and

1637
01:15:24,000 --> 01:15:28,100
intuitions that you might build up over time, having architected lots

1638
01:15:28,100 --> 01:15:32,100
and lots of pieces of code seed, how they've gone understood what

1639
01:15:32,100 --> 01:15:36,000
their limitations are that sort of stuff, that bank of knowledge is

1640
01:15:36,000 --> 01:15:41,200
not really replicable with someone just saying, here's how to do this

1641
01:15:41,200 --> 01:15:41,700
process.

1642
01:15:41,700 --> 01:15:42,300
Right?

1643
01:15:43,200 --> 01:15:45,200
And that is also something that I think is a problem.

1644
01:15:45,400 --> 01:15:48,100
A lot of computer science or computer.

1645
01:15:48,100 --> 01:15:52,100
Programming related stuff, is they talk about methodologies as if

1646
01:15:52,100 --> 01:15:57,200
those methodologies are themselves executable directly, but there is

1647
01:15:57,200 --> 01:15:58,700
no such thing as that in my experience.

1648
01:15:58,700 --> 01:16:02,400
I've never seen a thing where you can just say here is how you design

1649
01:16:02,400 --> 01:16:03,900
code to someone and then they go design.

1650
01:16:03,900 --> 01:16:04,400
Good code.

1651
01:16:04,400 --> 01:16:05,200
That doesn't happen.

1652
01:16:06,100 --> 01:16:10,700
You can say here are this different procedures and how they work

1653
01:16:10,700 --> 01:16:11,300
roughly.

1654
01:16:11,900 --> 01:16:15,200
But there's still a tremendous amount of inherent knowledge.

1655
01:16:15,400 --> 01:16:18,000
Age that nobody has figured out how to communicate that.

1656
01:16:18,000 --> 01:16:20,500
You just have to practice and get better at right.

1657
01:16:22,000 --> 01:16:24,600
So to answer your question, specifically after giving that friend of

1658
01:16:25,000 --> 01:16:27,000
very long framing about it, right?

1659
01:16:27,900 --> 01:16:32,200
Is there's two things you can do to get better, if you're having

1660
01:16:32,200 --> 01:16:33,800
trouble with code architecture.

1661
01:16:35,500 --> 01:16:39,100
One is to think about whether there are systemic things.

1662
01:16:39,100 --> 01:16:40,600
You are doing that are problematic.

1663
01:16:40,700 --> 01:16:41,000
Right?

1664
01:16:41,000 --> 01:16:46,000
And that is the first part that I talked about and that stuff, like,

1665
01:16:46,200 --> 01:16:48,600
are you actually writing enough usage codes?

1666
01:16:48,600 --> 01:16:49,000
First?

1667
01:16:49,000 --> 01:16:52,200
Are you actually taking the time to think about how something supposed

1668
01:16:52,200 --> 01:16:52,500
to work?

1669
01:16:52,500 --> 01:16:57,200
Are you actually spending the time to stop and write little use cases

1670
01:16:57,200 --> 01:17:00,200
for all the things that you were doing and verify that you really were

1671
01:17:00,200 --> 01:17:02,600
writing them the right way, blah blah, blah, right.

1672
01:17:02,600 --> 01:17:04,800
Are you actually doing the mechanical steps of

1673
01:17:04,900 --> 01:17:06,800
I'd like compression already program data or any program.

1674
01:17:06,800 --> 01:17:09,900
Whatever it is that you think is the methodology that you want to use.

1675
01:17:09,900 --> 01:17:11,700
Are you actually doing that or Heaven help you?

1676
01:17:11,700 --> 01:17:14,700
If you're an object-oriented programmer still same thing applies,

1677
01:17:14,700 --> 01:17:14,900
right?

1678
01:17:14,900 --> 01:17:18,500
Are you actually doing the steps that object-oriented program

1679
01:17:18,500 --> 01:17:20,500
professionals would have told you to do, right?

1680
01:17:20,700 --> 01:17:23,100
And that part, you can do cerebrally like that's the part.

1681
01:17:23,100 --> 01:17:27,500
You can sit down and say am I actually following the advice of the

1682
01:17:27,500 --> 01:17:29,100
people who are experts in this field.

1683
01:17:29,100 --> 01:17:30,400
Am I actually doing the same things?

1684
01:17:30,400 --> 01:17:31,200
They're doing, right?

1685
01:17:31,800 --> 01:17:33,300
So, I don't know.

1686
01:17:33,300 --> 01:17:34,700
Like I said, I can't see how your code.

1687
01:17:34,900 --> 01:17:38,200
But you know, the first question we ask is like, can you identify any

1688
01:17:38,200 --> 01:17:40,200
of those things that you're not doing, right?

1689
01:17:41,700 --> 01:17:44,700
And then the second part of it is to go.

1690
01:17:44,900 --> 01:17:47,100
Okay, if I don't think that that's my problem.

1691
01:17:47,100 --> 01:17:48,400
So I'm looking at the kinds of problems.

1692
01:17:48,400 --> 01:17:50,200
I'm having and I don't think that's it.

1693
01:17:50,200 --> 01:17:52,000
I did try the use of cases.

1694
01:17:52,000 --> 01:17:54,300
I did have a good idea of what I wanted this code to do.

1695
01:17:54,300 --> 01:17:58,000
I did have examples of it that I wrote and then when I went to do the

1696
01:17:58,000 --> 01:17:59,800
architecture, I still mess it up.

1697
01:18:00,000 --> 01:18:05,800
It that is a case where I think you're probably just in that

1698
01:18:05,800 --> 01:18:09,400
unfortunate place where you just haven't had enough practice yet,

1699
01:18:09,400 --> 01:18:10,100
right?

1700
01:18:10,400 --> 01:18:14,200
And there's really nothing you can do to short-circuit that process,

1701
01:18:14,200 --> 01:18:16,900
other than write lots of code, right?

1702
01:18:17,300 --> 01:18:20,100
The more code, you write, the more practice you will get and the less

1703
01:18:20,100 --> 01:18:20,800
mistakes like that.

1704
01:18:20,800 --> 01:18:24,000
You will make, because you will have seen the consequences of

1705
01:18:24,000 --> 01:18:25,400
different types of compression.

1706
01:18:25,400 --> 01:18:29,800
You can do of different types of structure of the code and then

1707
01:18:30,000 --> 01:18:33,200
So when you are making your decisions, they'll all be that much

1708
01:18:33,200 --> 01:18:35,100
better, everytime, right?

1709
01:18:36,500 --> 01:18:41,900
And so one thing you could do to accelerate that process is you could

1710
01:18:41,900 --> 01:18:44,200
start trying to tackle smaller problems.

1711
01:18:44,500 --> 01:18:46,500
Take something that caused you a problem.

1712
01:18:46,500 --> 01:18:48,400
Like you're talking about, you're having a problem.

1713
01:18:48,400 --> 01:18:50,600
So you've I deleted something that was causing your problem.

1714
01:18:50,900 --> 01:18:52,500
Can you pull that problem out?

1715
01:18:52,600 --> 01:18:54,400
Can you iterate it on a few times?

1716
01:18:54,500 --> 01:18:57,400
Can you take your solutions that you then come up with?

1717
01:18:58,100 --> 01:18:59,200
How do you feel about them?

1718
01:18:59,400 --> 01:19:02,400
Can you post them like on the hammer hero forums and we'll look at

1719
01:19:02,400 --> 01:19:05,700
them and see what other experienced programmers have to say.

1720
01:19:06,000 --> 01:19:07,100
About those Solutions.

1721
01:19:07,100 --> 01:19:07,800
Are they good?

1722
01:19:07,800 --> 01:19:09,500
Do you did you make obvious mistakes?

1723
01:19:09,500 --> 01:19:10,500
What were those mistakes?

1724
01:19:10,500 --> 01:19:11,000
Right?

1725
01:19:12,000 --> 01:19:14,600
And bye-bye may be cranking up that iteration time.

1726
01:19:14,600 --> 01:19:19,100
You can get more practice at the parts, you're bad at, right?

1727
01:19:19,400 --> 01:19:23,700
Instead of having to go through coal projects, with only them coming

1728
01:19:23,700 --> 01:19:26,600
up occasionally and then you're really not getting that much practice

1729
01:19:26,600 --> 01:19:27,200
at any.

1730
01:19:27,200 --> 01:19:27,800
Given one?

1731
01:19:28,000 --> 01:19:30,700
And the cost is high for those mistakes because you've got this whole

1732
01:19:30,700 --> 01:19:31,900
thing around it, right?

1733
01:19:32,800 --> 01:19:35,600
And so I don't know but yeah, but that that

1734
01:19:35,800 --> 01:19:37,400
That's really all I can say about that.

1735
01:19:37,400 --> 01:19:39,500
Is that gives the full framework of how I think about?

1736
01:19:39,500 --> 01:19:43,100
Anyway, if you want to run like Usain Bolt, you gotta be willing to do

1737
01:19:43,100 --> 01:19:43,800
both things.

1738
01:19:43,900 --> 01:19:46,100
You got to be able to know that you're doing the right stuff.

1739
01:19:46,100 --> 01:19:49,500
Mechanically, but also that you're just practicing every day and

1740
01:19:49,500 --> 01:19:53,300
getting all of those subtle things that no one really quite yet is

1741
01:19:53,300 --> 01:19:57,400
able to communicate how to do them in a way that doesn't require you

1742
01:19:57,400 --> 01:20:03,400
to learn them yourself and have them ingrained you got to do both and

1743
01:20:03,400 --> 01:20:05,300
I don't know that there's really any substitute.

1744
01:20:05,800 --> 01:20:06,400
Those things.

1745
01:20:08,700 --> 01:20:11,600
Will you handle the case where a sword in a monstar would hit each

1746
01:20:11,600 --> 01:20:14,600
other, but are moving toward each other so fast that they pass through

1747
01:20:14,600 --> 01:20:17,000
each other without colliding, in a single frame.

1748
01:20:17,200 --> 01:20:18,900
Yes, or move entity code already.

1749
01:20:18,900 --> 01:20:24,400
Does that right arm move entity code, which will just probably call it

1750
01:20:24,400 --> 01:20:25,200
the sword as well.

1751
01:20:25,400 --> 01:20:28,700
Our move enemy code already handles that case, right?

1752
01:20:28,700 --> 01:20:33,500
Because remember, we did Mankowski and we did Ray casting so we don't

1753
01:20:33,500 --> 01:20:34,000
tunneling.

1754
01:20:34,000 --> 01:20:36,000
Can't happen in our system right now.

1755
01:20:46,100 --> 01:20:49,200
Do you think cheesing like making enemies Invincible for ten frames

1756
01:20:49,200 --> 01:20:52,800
after being hit is a game design sin or just something you'd rather

1757
01:20:52,800 --> 01:20:53,300
avoid.

1758
01:20:54,900 --> 01:20:58,200
I think it's it's if we were going to use the word sin, I think it's

1759
01:20:58,200 --> 01:20:59,800
just a handmade hero sin.

1760
01:21:00,000 --> 01:21:02,700
Like, basically, the reason that I'm doing this stream, right?

1761
01:21:02,700 --> 01:21:08,200
Is because I want to sort of demonstrate how I do game programming.

1762
01:21:09,400 --> 01:21:13,200
And so, what I want to do is try to do a good job on all of the things

1763
01:21:13,200 --> 01:21:16,800
that we do, so I'm trying to make sure that we set everything up to do

1764
01:21:16,800 --> 01:21:19,500
a good job when, you know, in a couple weeks or so.

1765
01:21:19,500 --> 01:21:21,600
When we switch over to doing the real engine code.

1766
01:21:21,600 --> 01:21:24,500
I want to show how to do a very good job on each of those pieces.

1767
01:21:24,500 --> 01:21:30,500
And then, you know, at the end of the day, the goal for the series is

1768
01:21:30,500 --> 01:21:33,800
to have each thing that I showed how to do be done at a high level of

1769
01:21:33,800 --> 01:21:35,300
quality so that people can learn from it.

1770
01:21:35,300 --> 01:21:35,700
Right.

1771
01:21:35,700 --> 01:21:39,300
But I don't want to do is show how to avoid doing.

1772
01:21:39,400 --> 01:21:43,200
Good work by designing the game to not require it, right?

1773
01:21:44,500 --> 01:21:45,100
but,

1774
01:21:46,300 --> 01:21:50,400
That does not mean that's what you should do when you are making your

1775
01:21:50,400 --> 01:21:50,700
game.

1776
01:21:50,700 --> 01:21:54,500
And the reason for that is because certain game design decisions,

1777
01:21:54,500 --> 01:21:57,700
could save you a lot of time coding.

1778
01:21:57,700 --> 01:22:01,300
If a particular algorithm necessary to handle a particular aspect of

1779
01:22:01,300 --> 01:22:04,600
the game design is very hard and changing the game design to something

1780
01:22:04,600 --> 01:22:08,000
else would not actually cause a problem, but would eliminate this hard

1781
01:22:08,000 --> 01:22:11,600
thing that you don't have time to do that, may get the product on

1782
01:22:11,600 --> 01:22:12,000
sooner.

1783
01:22:12,000 --> 01:22:14,700
It may keep the momentum of the project up.

1784
01:22:14,700 --> 01:22:16,300
It may do a lot of

1785
01:22:16,300 --> 01:22:17,400
Positive things for you.

1786
01:22:18,600 --> 01:22:20,800
And so I definitely don't want to say that.

1787
01:22:20,800 --> 01:22:22,900
Nobody should cheese things.

1788
01:22:23,300 --> 01:22:27,800
All I want to say is, you should know how not to, and then you can

1789
01:22:27,800 --> 01:22:31,600
make an informed decision on every individual case whether or not

1790
01:22:31,600 --> 01:22:34,700
cheesing was good or bad there and then you either cheese it or you

1791
01:22:34,700 --> 01:22:40,000
don't based on your instinct for whether the total impact on the

1792
01:22:40,000 --> 01:22:41,700
project will be better or worse.

1793
01:22:41,700 --> 01:22:43,300
With are you cheese or not cheesed?

1794
01:22:43,400 --> 01:22:45,300
Because again, there's only so much time in the day.

1795
01:22:45,300 --> 01:22:48,200
Everyone, you know, times the only non renewable resource, right?

1796
01:22:48,400 --> 01:22:54,800
As they say, so if you go into something and you think, oh, I'm just

1797
01:22:54,800 --> 01:22:58,000
going to do as hardcore engineering on every last thing as I possibly

1798
01:22:58,000 --> 01:22:58,400
can.

1799
01:22:58,900 --> 01:23:02,200
Well, that's probably honestly, as much as I admire that mentality and

1800
01:23:02,200 --> 01:23:04,700
as much as I think that's an interesting to have on some products

1801
01:23:04,700 --> 01:23:07,400
sometimes, if that's what you wanted to do, right?

1802
01:23:07,600 --> 01:23:10,300
And it's sort of what we're trying to do here and that will keep

1803
01:23:10,300 --> 01:23:12,000
trying to Aspire to right.

1804
01:23:13,100 --> 01:23:16,100
As much as that's interesting here that may not be a very good

1805
01:23:16,100 --> 01:23:18,000
attitude to have when you're actually developing game.

1806
01:23:18,000 --> 01:23:19,000
When you're actually developing the game.

1807
01:23:19,000 --> 01:23:21,800
You might want to have more flexibility, know what the good

1808
01:23:21,800 --> 01:23:26,000
engineering would be learn enough so that, you know, so that you don't

1809
01:23:26,000 --> 01:23:27,100
have to cheese.

1810
01:23:27,700 --> 01:23:31,300
But then at each individual Point decide to cheese or not based on

1811
01:23:31,500 --> 01:23:35,100
what would be the best for the project in the hole, right?

1812
01:23:35,700 --> 01:23:39,900
That's important because if a project that would have taken two years

1813
01:23:39,900 --> 01:23:42,700
takes ten years because you refuse to do any Cheese's.

1814
01:23:42,900 --> 01:23:43,800
Something right?

1815
01:23:44,800 --> 01:23:46,600
That was four more games.

1816
01:23:46,600 --> 01:23:47,800
Maybe you didn't make.

1817
01:23:48,000 --> 01:23:51,100
And so yeah, this one game may have no cheese in it whatsoever.

1818
01:23:51,100 --> 01:23:53,600
But was that a good decision for the whole time?

1819
01:23:53,700 --> 01:23:54,300
Right?

1820
01:23:54,500 --> 01:23:56,500
And so you always have to be making those trade-offs because

1821
01:23:56,500 --> 01:23:59,800
everything is a trade-off and you can't have one dogmatic.

1822
01:24:00,000 --> 01:24:02,700
That you just always go by because I think you'll end up making bad

1823
01:24:02,700 --> 01:24:03,700
decisions if you do.

1824
01:24:13,900 --> 01:24:14,400
Symmetry.

1825
01:24:14,400 --> 01:24:19,100
Why not just use the auto window so well because I was trying to look

1826
01:24:19,100 --> 01:24:22,700
at something specific and I like to have my watch window set up so

1827
01:24:22,700 --> 01:24:24,400
that I see the things that I see.

1828
01:24:24,400 --> 01:24:27,100
Like, I tend to set up things so that they're it's listing exactly

1829
01:24:27,100 --> 01:24:29,500
what I want and things don't move around in, don't change.

1830
01:24:30,300 --> 01:24:32,900
You can use the Autos window for people who want to use it.

1831
01:24:32,900 --> 01:24:36,100
It's in the debug Windows Auto, right?

1832
01:24:36,200 --> 01:24:36,900
It's right there.

1833
01:24:38,100 --> 01:24:42,500
Like, you can see it here, and and this gives you the things that are

1834
01:24:42,500 --> 01:24:44,300
kind of like what it thinks you want to see.

1835
01:24:45,000 --> 01:24:48,900
Unfortunately, you will notice that the problem that I just said, was

1836
01:24:48,900 --> 01:24:52,300
that have the watch window is even worse with the Autos window.

1837
01:24:52,400 --> 01:24:55,400
When you step over that block, everything goes away.

1838
01:24:56,500 --> 01:24:59,400
So, even though you could use the Autos window to save you, some time

1839
01:24:59,400 --> 01:25:01,600
typing things into the Watchman, do if you thought that might was a

1840
01:25:01,600 --> 01:25:02,300
problem.

1841
01:25:04,600 --> 01:25:06,600
I personally don't like the element so I don't use it.

1842
01:25:06,600 --> 01:25:09,400
But it's worth noting the Autos window does not solve the problem that

1843
01:25:09,400 --> 01:25:10,900
I just showed.

1844
01:25:18,600 --> 01:25:19,900
Is visual C++.

1845
01:25:19,900 --> 01:25:21,800
Still better than open source Alternatives.

1846
01:25:22,900 --> 01:25:28,600
The debugger is although give them a few more revisions and maybe it

1847
01:25:28,600 --> 01:25:32,000
won't be like the developer gets worse with every time.

1848
01:25:32,200 --> 01:25:35,200
So, at some point, it may be that Visual Studio debugger is so bad.

1849
01:25:35,200 --> 01:25:38,600
That future Creator is as good, right?

1850
01:25:38,600 --> 01:25:41,700
Or something that could totally happen because every release

1851
01:25:42,000 --> 01:25:44,200
Microsoft's ships a worse and worse to bugger.

1852
01:25:44,500 --> 01:25:47,800
So basically, like, at some point, it may be that

1853
01:25:48,100 --> 01:25:50,600
That it actually the open source ones are actually better.

1854
01:25:51,400 --> 01:25:52,100
That could happen.

1855
01:25:53,300 --> 01:25:54,200
But at the moment.

1856
01:25:54,200 --> 01:25:57,200
No, the visual debugger is still better than any open source soon, as

1857
01:25:57,200 --> 01:26:00,700
I see the compiler, on the other hand is much worse.

1858
01:26:00,700 --> 01:26:04,800
So the open source alternatives for compilers like clang, clang is

1859
01:26:04,800 --> 01:26:08,500
much better than Visual Studio compiler on every front, pretty much.

1860
01:26:08,900 --> 01:26:10,900
There may be a few optimization things.

1861
01:26:10,900 --> 01:26:11,900
That msec does better.

1862
01:26:11,900 --> 01:26:15,100
I'm not sure but by and large clang does everything better.

1863
01:26:15,800 --> 01:26:17,600
So if you're talking about the compiler,

1864
01:26:17,900 --> 01:26:19,000
Clang is far superior.

1865
01:26:19,000 --> 01:26:22,100
If you're talking about the debugger Visual Studio, unfortunately, is

1866
01:26:22,100 --> 01:26:23,900
still pretty much the best you're going to get.

1867
01:26:23,900 --> 01:26:25,400
It's a sad State of Affairs.

1868
01:26:25,400 --> 01:26:27,400
When visual Studios, the best of butter you can get.

1869
01:26:28,700 --> 01:26:29,600
That's where we're at.

1870
01:26:30,600 --> 01:26:31,700
It's a sad world.

1871
01:26:31,800 --> 01:26:32,600
I'm just living in it.

1872
01:26:41,800 --> 01:26:44,500
What would you think about adapting the art style to be easier to

1873
01:26:44,500 --> 01:26:48,900
implement either at all or this early on the trite example, being for

1874
01:26:48,900 --> 01:26:49,800
the sword Collision?

1875
01:26:49,800 --> 01:26:50,500
You mentioned?

1876
01:26:50,800 --> 01:26:53,600
What if you were to say something like the sword is going to teleport

1877
01:26:53,600 --> 01:26:57,700
along the path instantly in one frame and some red line a bit like

1878
01:26:57,700 --> 01:26:59,800
anime, that would be persistent through a couple of frames.

1879
01:27:00,000 --> 01:27:02,300
Basically potentially fundamentally changing, the art style with a

1880
01:27:02,300 --> 01:27:03,800
purpose of getting things to run better.

1881
01:27:04,100 --> 01:27:06,100
Are there any examples of something like this occurring that you might

1882
01:27:06,100 --> 01:27:06,800
have heard of?

1883
01:27:07,300 --> 01:27:07,900
So again?

1884
01:27:07,900 --> 01:27:10,100
Yeah, I don't have really much to say about that question that I

1885
01:27:10,100 --> 01:27:15,000
didn't already say, you probably typed it in before I set all the

1886
01:27:15,000 --> 01:27:15,900
stuff that I had said.

1887
01:27:16,800 --> 01:27:18,600
So, yeah, same thing applies there.

1888
01:27:19,100 --> 01:27:20,900
Yes, you can always pick.

1889
01:27:21,200 --> 01:27:25,700
You can always get out of a programming Jam by changing our tour game

1890
01:27:25,700 --> 01:27:26,200
design.

1891
01:27:27,800 --> 01:27:31,200
I don't want to do any of that on this dream because the goal here is

1892
01:27:31,200 --> 01:27:32,000
to show programming.

1893
01:27:32,000 --> 01:27:35,800
So we're going to take everything head-on and stick with it until it

1894
01:27:35,800 --> 01:27:36,300
works.

1895
01:27:36,600 --> 01:27:39,500
We are not going to change the game design to benefit the programming.

1896
01:27:39,500 --> 01:27:44,100
We're going to do the opposite, pretty much exclusively, but that

1897
01:27:44,100 --> 01:27:46,300
doesn't mean that isn't a valid option for you.

1898
01:27:46,300 --> 01:27:47,200
On your projects.

1899
01:27:47,300 --> 01:27:51,900
You have to make that call every time based on what you think would be

1900
01:27:51,900 --> 01:27:52,800
best for the project.

1901
01:27:56,900 --> 01:27:58,200
Let's see.

1902
01:28:12,500 --> 01:28:13,400
Um,

1903
01:28:22,700 --> 01:28:25,800
so it looks like we've only got maybe two more questions.

1904
01:28:25,800 --> 01:28:28,800
So I'll answer these two blocks of three.

1905
01:28:28,900 --> 01:28:30,100
Are you working on the road to bugger?

1906
01:28:30,100 --> 01:28:36,700
No, I am not but yes, I would I would start using it on handmade hero

1907
01:28:36,700 --> 01:28:41,000
if when it's ready if the red it's red chips a debugger even primitive

1908
01:28:41,000 --> 01:28:42,100
Like A Primitive one.

1909
01:28:43,100 --> 01:28:44,100
That's decent.

1910
01:28:45,200 --> 01:28:47,000
I would I would totally switched it on the Stream.

1911
01:28:49,200 --> 01:28:52,500
But I haven't gotten one of those yet.

1912
01:28:54,300 --> 01:28:56,900
You always talk about the ways of programming when you started or when

1913
01:28:56,900 --> 01:28:58,200
programming was at its prime.

1914
01:28:58,300 --> 01:29:00,100
How can an 18 year old?

1915
01:29:00,100 --> 01:29:02,000
Know what it's like, or get the knowledge.

1916
01:29:02,000 --> 01:29:03,600
You have about programming, are there?

1917
01:29:03,600 --> 01:29:06,500
Any books are languages or something I can do to learn the old ways of

1918
01:29:06,500 --> 01:29:07,100
programming.

1919
01:29:08,000 --> 01:29:11,900
So, basically, handmade hero is mostly trying to be that bridge to

1920
01:29:11,900 --> 01:29:12,900
some extent.

1921
01:29:12,900 --> 01:29:16,300
That's why I started the project and it's what we try to focus on.

1922
01:29:17,300 --> 01:29:21,500
We're sort of trying to show the old school way of programming, but in

1923
01:29:21,500 --> 01:29:22,400
a new context.

1924
01:29:22,400 --> 01:29:27,000
So, you know, we know, now we can allocate 4 gigabytes of memory and

1925
01:29:27,000 --> 01:29:28,700
it's not a big deal, right?

1926
01:29:29,400 --> 01:29:32,800
So we accept those things, and we try to do powerful things with them,

1927
01:29:33,100 --> 01:29:34,600
but we still write everything from scratch.

1928
01:29:34,600 --> 01:29:38,800
We still write everything, you know, at a low level and we build up

1929
01:29:38,800 --> 01:29:42,400
from the low level to a high level as we go on our own and try to

1930
01:29:42,400 --> 01:29:44,200
practice that same sort of stuff that people did.

1931
01:29:44,200 --> 01:29:46,900
In the old days, is it as hardcore as the people who did in the old

1932
01:29:46,900 --> 01:29:46,900
days.

1933
01:29:47,000 --> 01:29:47,900
Is absolutely not.

1934
01:29:47,900 --> 01:29:50,900
They were writing things in Assembly Language from scratch and it was

1935
01:29:51,100 --> 01:29:52,000
a much harder World.

1936
01:29:52,000 --> 01:29:54,800
They barely had to Butters half the time, didn't have to bother us at

1937
01:29:54,800 --> 01:29:55,300
all.

1938
01:29:56,000 --> 01:29:59,000
We have it very easy compared to them, but I am trying to kind of

1939
01:29:59,000 --> 01:29:59,800
create that bridge too.

1940
01:30:00,400 --> 01:30:02,300
What are the good things from the old school programming?

1941
01:30:02,300 --> 01:30:03,500
How can we bring them forward?

1942
01:30:03,500 --> 01:30:06,400
And how can we kind of encourage other people to keep doing them?

1943
01:30:07,400 --> 01:30:07,700
Are there?

1944
01:30:07,700 --> 01:30:08,700
Good books on the topic?

1945
01:30:08,700 --> 01:30:12,900
I don't really know, you know, if you just want a taste of that sort

1946
01:30:12,900 --> 01:30:15,600
of thing and just want to get a feel for it as opposed to like a good

1947
01:30:15,600 --> 01:30:17,700
thing to use to maybe for Less.

1948
01:30:17,700 --> 01:30:19,100
Sorry for learning per se.

1949
01:30:19,700 --> 01:30:21,600
I feel like the Bruce are Twix.

1950
01:30:22,300 --> 01:30:23,800
Don't know how to spell his name.

1951
01:30:25,700 --> 01:30:28,500
I feel like there's a couple books that were kind of classic in that

1952
01:30:28,500 --> 01:30:29,700
way that you.

1953
01:30:30,000 --> 01:30:34,900
Might be able to, to take a look at, this would be one example, right?

1954
01:30:36,000 --> 01:30:39,200
My computer displays graphics and animation.

1955
01:30:40,000 --> 01:30:42,700
This is by the guy who wrote Flight Simulator, the original flight

1956
01:30:42,700 --> 01:30:43,200
simulator.

1957
01:30:45,700 --> 01:30:49,600
I can't remember if there's other books along these lines, you know,

1958
01:30:49,600 --> 01:30:51,400
maybe one of Mike, a Brash has books.

1959
01:30:51,700 --> 01:30:56,000
So, like the Zen of Graphics programming or something like that, you

1960
01:30:56,000 --> 01:30:56,800
know, take a look at those.

1961
01:30:56,800 --> 01:30:57,700
Those are available.

1962
01:30:58,200 --> 01:31:03,000
Those might be some that would get you to sort of have a sense of what

1963
01:31:03,700 --> 01:31:04,400
used to go on back.

1964
01:31:04,400 --> 01:31:07,300
Then they'll go through the thing of like, getting a texture map or

1965
01:31:07,300 --> 01:31:10,900
down from 40 cycles per pixel to three cycles for Pixel or whatever,

1966
01:31:10,900 --> 01:31:12,300
you know, those sorts of things.

1967
01:31:14,200 --> 01:31:16,900
And like how they even implemented flight simulator at all, on an

1968
01:31:16,900 --> 01:31:19,700
Apple 2, which was kind of crazy at those times and that sort of stuff

1969
01:31:20,000 --> 01:31:22,000
that might give you a sense for like the kinds of stuff.

1970
01:31:22,000 --> 01:31:25,400
They went through, as a as to how to learn to code like them.

1971
01:31:25,400 --> 01:31:27,300
I don't know because I don't even know how to code like that.

1972
01:31:27,300 --> 01:31:31,900
Like I wasn't really in that.

1973
01:31:31,900 --> 01:31:34,700
I wasn't alive in any meaningful sense in the 70s.

1974
01:31:34,700 --> 01:31:37,500
I was I was born in 76.

1975
01:31:37,700 --> 01:31:39,300
So by the time I was four years old.

1976
01:31:39,300 --> 01:31:40,900
The 70s were over, right?

1977
01:31:41,000 --> 01:31:42,800
So I never really experienced any of that.

1978
01:31:43,000 --> 01:31:44,900
Learn to code to like 83 I think.

1979
01:31:45,600 --> 01:31:48,600
And so, you know, I really just don't have that same kind of

1980
01:31:48,600 --> 01:31:49,200
background.

1981
01:31:57,100 --> 01:31:58,000
Let's see.

1982
01:31:58,100 --> 01:31:59,800
All right, so I'll answer two more here.

1983
01:32:01,100 --> 01:32:03,900
Why do you pick C++ of all things?

1984
01:32:05,300 --> 01:32:10,000
So interesting, like, I don't know why people think C++ is such an odd

1985
01:32:10,000 --> 01:32:13,100
Choice, when almost every game is programmed in C++, right?

1986
01:32:13,900 --> 01:32:17,000
People people kind of look at it in like, oh my God, why would you be

1987
01:32:17,000 --> 01:32:21,100
programming game and C++ as if somehow not all games are program to

1988
01:32:21,100 --> 01:32:26,800
see us, but almost all games are like the vast majority of games in.

1989
01:32:26,900 --> 01:32:31,300
Are programmed in either C++ or something lower than C++ like C or

1990
01:32:31,300 --> 01:32:31,900
assembly?

1991
01:32:31,900 --> 01:32:32,400
Right?

1992
01:32:33,300 --> 01:32:37,000
It is only very, very recently that game started beer.

1993
01:32:37,000 --> 01:32:39,600
It being written, really in anything other than C++.

1994
01:32:39,700 --> 01:32:42,400
I mean, if you went back and start talking about things like there

1995
01:32:42,400 --> 01:32:45,700
were games written in fourth or modulo or, you know, stuff like this.

1996
01:32:46,700 --> 01:32:51,100
But, you know, games were written in things that were as low level or

1997
01:32:51,100 --> 01:32:54,700
lower level than C++ throughout all of history.

1998
01:32:55,400 --> 01:32:56,800
And so really, it's only very recently.

1999
01:32:56,900 --> 01:32:59,800
recently that things like C sharp or

2000
01:33:00,000 --> 01:33:03,400
Ava have been languages that anyone would consider writing a game and

2001
01:33:03,400 --> 01:33:05,100
the only reason that they can do that.

2002
01:33:05,100 --> 01:33:10,200
Now is basically, for one of two reasons one, because they don't

2003
01:33:10,200 --> 01:33:13,600
really have much in the way of serious performance requirements, which

2004
01:33:13,600 --> 01:33:15,400
is often the case or two.

2005
01:33:15,400 --> 01:33:18,100
Because most of the game is actually still written in C++ and they're

2006
01:33:18,100 --> 01:33:19,900
just writing the part that sits on top of that.

2007
01:33:19,900 --> 01:33:23,300
So for example, anyone who writes a game in unity, well, a lot of the

2008
01:33:23,300 --> 01:33:25,500
unity engine is written in C++.

2009
01:33:26,100 --> 01:33:28,600
It's only the like part that your game.

2010
01:33:28,600 --> 01:33:29,800
That's like the script stuff.

2011
01:33:30,000 --> 01:33:31,700
If that's written in C, sharp, right?

2012
01:33:31,900 --> 01:33:34,300
And so, since on handmade hero, we're showing how to write the whole

2013
01:33:34,300 --> 01:33:35,700
thing engine included.

2014
01:33:36,800 --> 01:33:39,600
Obviously we would not be using something like C sharp or Java that

2015
01:33:39,600 --> 01:33:41,700
that would just not be a smart choice at all.

2016
01:33:42,100 --> 01:33:44,300
So really C++ is kind of the only choice.

2017
01:33:44,600 --> 01:33:47,800
I would say if you actually want to write a high Performance Engine,

2018
01:33:47,800 --> 01:33:50,600
it's pretty much the only thing that you really have at the moment.

2019
01:33:51,100 --> 01:33:54,000
Unless you we're going to use straight.

2020
01:33:54,000 --> 01:33:57,900
See, which is again, we kind of are mostly, but we use some CSS

2021
01:33:57,900 --> 01:33:59,800
features, so we're almost kind of going that way.

2022
01:34:00,700 --> 01:34:03,300
Or you go Assembly Language /.

2023
01:34:03,300 --> 01:34:06,600
Some other kind of like, you know, D, maybe or something like that,

2024
01:34:07,700 --> 01:34:09,600
but C++ is not a surprising choice.

2025
01:34:10,300 --> 01:34:14,600
I feel like if you asked any game program in the industry at random,

2026
01:34:15,900 --> 01:34:18,000
I'm you know, what would you start playing a game?

2027
01:34:18,000 --> 01:34:20,500
And right now they probably say C++.

2028
01:34:20,500 --> 01:34:22,500
It's not a strange choice.

2029
01:34:22,500 --> 01:34:25,100
I think it's only strange to people who aren't maybe professional game

2030
01:34:25,100 --> 01:34:25,500
programmers.

2031
01:34:25,500 --> 01:34:26,100
I'm not sure.

2032
01:34:26,600 --> 01:34:27,700
But I get that question a lot.

2033
01:34:27,700 --> 01:34:29,300
And it's always surprising because it's like

2034
01:34:30,400 --> 01:34:32,900
Yo, man, all games are programmed in C++.

2035
01:34:35,400 --> 01:34:37,900
Last question, let's see here.

2036
01:34:48,000 --> 01:34:50,100
I thought there was one other one on here that I was going to ask

2037
01:34:50,200 --> 01:34:50,700
answer.

2038
01:34:57,700 --> 01:34:58,700
Maybe I've got everything.

2039
01:35:00,600 --> 01:35:03,200
Maybe I got all the questions.

2040
01:35:05,900 --> 01:35:06,900
I think I did.

2041
01:35:08,200 --> 01:35:09,300
I think I did.

2042
01:35:11,600 --> 01:35:13,400
I guess I'll just as an addendum to that answer.

2043
01:35:13,400 --> 01:35:15,300
One of the questions I see here, which is would there have been any

2044
01:35:15,300 --> 01:35:17,200
easier language to program the game in?

2045
01:35:18,300 --> 01:35:21,700
And yes, there probably would have been an easier language to program

2046
01:35:21,900 --> 01:35:26,200
the game in if you didn't want to do the engine.

2047
01:35:27,500 --> 01:35:32,100
And you didn't want to do some of the more advanced game design stuff

2048
01:35:32,100 --> 01:35:33,000
that we're going to be doing.

2049
01:35:33,000 --> 01:35:34,700
I could have scaled the game down like it.

2050
01:35:34,700 --> 01:35:36,800
Let's say we just wanted to make Legend of Zelda.

2051
01:35:37,400 --> 01:35:38,000
That's it.

2052
01:35:38,300 --> 01:35:40,000
It's literally Legend of Zelda.

2053
01:35:40,200 --> 01:35:46,400
We could easily have done that in like, XNA or python pygame, right?

2054
01:35:47,100 --> 01:35:48,600
And largely.

2055
01:35:48,600 --> 01:35:51,100
The reason that would have been easier is not because the language is

2056
01:35:51,100 --> 01:35:51,600
any easier.

2057
01:35:51,600 --> 01:35:53,300
The language is really aren't any easier.

2058
01:35:54,000 --> 01:35:56,400
The main reason, it would have been easier as because there's giant

2059
01:35:56,400 --> 01:35:57,800
libraries that do everything for you.

2060
01:35:58,100 --> 01:35:58,600
Right?

2061
01:35:58,600 --> 01:35:59,900
So if we just decided not to write,

2062
01:36:00,000 --> 01:36:01,500
Engine and not to write.

2063
01:36:01,900 --> 01:36:03,300
And to just use a ton of libraries.

2064
01:36:03,800 --> 01:36:05,000
Then there would have been easier.

2065
01:36:05,000 --> 01:36:09,600
C++ is not a great language for libraries like the libraries that are

2066
01:36:09,600 --> 01:36:10,800
available C++ aren't.

2067
01:36:10,800 --> 01:36:12,900
Don't tend to be as full complete.

2068
01:36:12,900 --> 01:36:18,400
I find as some other things so, you know, yeah, you could go use x and

2069
01:36:18,400 --> 01:36:21,400
ay, and it'd be easier because if you weren't trying to write an

2070
01:36:21,400 --> 01:36:25,300
engine, you just use the engine exists or you could go use unity and

2071
01:36:25,300 --> 01:36:25,700
some like that.

2072
01:36:25,700 --> 01:36:29,800
So easy is all you care about and performance isn't

2073
01:36:30,000 --> 01:36:33,700
Super important and special considerations for bunch of game design

2074
01:36:33,700 --> 01:36:33,900
things.

2075
01:36:33,900 --> 01:36:35,300
As an important etcetera, Etc.

2076
01:36:36,100 --> 01:36:39,600
Then you can definitely go with something easier and basically what

2077
01:36:39,600 --> 01:36:42,100
that boils down to, it's less about the language.

2078
01:36:42,100 --> 01:36:44,100
It's more about the libraries at that point.

2079
01:36:44,100 --> 01:36:47,000
It's about finding something that has all the libraries that do what

2080
01:36:47,000 --> 01:36:53,100
you want, you know, and like, as another obvious statement.

2081
01:36:53,100 --> 01:36:54,800
Let's say you were going to make a first person shooter.

2082
01:36:55,200 --> 01:36:56,900
So you kind of just pretty much know what you're dealing with.

2083
01:36:56,900 --> 01:36:57,400
Exactly.

2084
01:36:57,500 --> 01:36:59,800
You could go use the Unreal Engine and you know,

2085
01:37:00,000 --> 01:37:01,700
Going to be able to handle a first person shooter, right?

2086
01:37:01,700 --> 01:37:04,000
It's a professional code base that ship multiple first present for

2087
01:37:04,000 --> 01:37:04,100
you.

2088
01:37:04,100 --> 01:37:05,200
Just use it and off you go.

2089
01:37:05,200 --> 01:37:05,500
Right?

2090
01:37:05,600 --> 01:37:08,200
So things like that, you know, if you're just looking for easy,

2091
01:37:08,300 --> 01:37:13,800
there's definitely ways that you can do things that are designed for

2092
01:37:13,800 --> 01:37:16,400
you to do the least amount of work.

2093
01:37:17,300 --> 01:37:18,500
Those would be different options.

2094
01:37:18,500 --> 01:37:19,000
Certainly.

2095
01:37:19,800 --> 01:37:20,600
All right.

2096
01:37:21,400 --> 01:37:21,800
Hmm.

2097
01:37:25,200 --> 01:37:26,700
I think that's about it.

2098
01:37:27,000 --> 01:37:28,000
I'm going to I'm going to call it.

2099
01:37:28,000 --> 01:37:33,300
It's getting a little late here and I will say answer, two more quick.

2100
01:37:33,300 --> 01:37:37,800
He's here which is to be able to surpass the processes that affect our

2101
01:37:37,800 --> 01:37:38,500
language decode games.

2102
01:37:38,500 --> 01:37:40,600
And what would you have to do is a language that would make you better

2103
01:37:40,600 --> 01:37:41,400
than C++?

2104
01:37:41,600 --> 01:37:42,400
Just go watch.

2105
01:37:42,400 --> 01:37:43,500
John blows stream.

2106
01:37:43,900 --> 01:37:45,200
John Blow is making a language.

2107
01:37:45,200 --> 01:37:46,500
That's better than C++ right now.

2108
01:37:46,500 --> 01:37:49,900
And it probably already is pretty much better than C++ right now

2109
01:37:49,900 --> 01:37:53,400
because C++ really hasn't advanced in about 30 years.

2110
01:37:54,000 --> 01:37:57,100
It's pretty much as bad as see, see was a good language for its time.

2111
01:37:57,100 --> 01:37:59,500
But C++ really hasn't had anything of value.

2112
01:37:59,600 --> 01:38:03,100
For the most part, John has been adding a lot of things of value to

2113
01:38:03,100 --> 01:38:03,900
his language.

2114
01:38:04,000 --> 01:38:07,900
And so I suspect that the answer to your question is go watch John

2115
01:38:07,900 --> 01:38:12,000
stream and he will show you exactly all of the things you can add,

2116
01:38:12,000 --> 01:38:14,900
that makes a language better than C4 coding games.

2117
01:38:17,500 --> 01:38:18,000
and,

2118
01:38:19,600 --> 01:38:21,700
And then I'll also say to the person who asked they can have a witness

2119
01:38:21,700 --> 01:38:22,400
Beta key.

2120
01:38:22,400 --> 01:38:25,200
I am not in charge of doing out witness beta keys.

2121
01:38:25,200 --> 01:38:26,900
You will have to ask John.

2122
01:38:28,400 --> 01:38:30,100
All right, so that's it.

2123
01:38:30,200 --> 01:38:33,100
And let's go ahead and wrap it up for the day.

2124
01:38:33,600 --> 01:38:36,200
Let us, let us close down.

2125
01:38:37,600 --> 01:38:43,100
Like so close close.

2126
01:38:44,100 --> 01:38:45,800
Close.

2127
01:38:46,900 --> 01:38:47,700
And minimize.

2128
01:38:48,300 --> 01:38:48,800
All right.

2129
01:38:48,800 --> 01:38:49,400
Thank you very much.

2130
01:38:49,400 --> 01:38:52,000
Everyone for joining me for another episode of handmade hero.

2131
01:38:52,500 --> 01:38:53,600
It has been a pleasure coding with you.

2132
01:38:53,600 --> 01:38:54,200
As always.

2133
01:38:54,200 --> 01:38:56,100
I will be back here tomorrow night.

2134
01:38:56,100 --> 01:38:56,900
Same place.

2135
01:38:56,900 --> 01:38:57,800
Same time 8:00 p.m.

2136
01:38:57,800 --> 01:38:59,300
Pacific Standard time, on Twitch.

2137
01:39:00,000 --> 01:39:01,900
Where I will be going ahead and doing some.

2138
01:39:02,700 --> 01:39:04,500
I guess basically will be having these guys fight.

2139
01:39:04,500 --> 01:39:09,900
So I guess the monster and the hero with his new sword sword will,

2140
01:39:10,200 --> 01:39:13,400
will be able to attack each other and, and then kill each other.

2141
01:39:13,400 --> 01:39:18,500
I guess we'll go ahead and plan Implement that tomorrow and and

2142
01:39:18,500 --> 01:39:20,400
continue on our path towards getting everything.

2143
01:39:20,400 --> 01:39:23,000
Nailed down for exactly what we need the engine to do, and I think

2144
01:39:23,000 --> 01:39:23,800
that's pretty good.

2145
01:39:23,800 --> 01:39:24,500
Seems to be coming along.

2146
01:39:24,500 --> 01:39:27,400
Well, in my opinion, I think everything is going roughly the way that

2147
01:39:27,400 --> 01:39:28,200
I want it to.

2148
01:39:28,500 --> 01:39:29,800
So I'm pretty happy about it and I

2149
01:39:30,000 --> 01:39:32,700
Hope you are too, if you would like to follow along at home and do

2150
01:39:32,700 --> 01:39:34,700
experimenting on your own and that sort of stuff.

2151
01:39:34,700 --> 01:39:36,900
You can always pre-order handmade hero and it comes with all the

2152
01:39:36,900 --> 01:39:40,100
source code that you can play around with and of course, all the

2153
01:39:40,100 --> 01:39:43,200
videos from past days are all available as well.

2154
01:39:43,200 --> 01:39:46,700
So you can see how to set it up and how to use it by watching those as

2155
01:39:46,700 --> 01:39:47,100
well.

2156
01:39:47,700 --> 01:39:48,300
If you want to do that.

2157
01:39:48,300 --> 01:39:50,600
You can go to handmade hero dot org and hit that pre-order button.

2158
01:39:50,600 --> 01:39:51,600
That will do that for you.

2159
01:39:51,900 --> 01:39:53,300
If you want to support the video series.

2160
01:39:53,300 --> 01:39:54,200
We also have a patreon.

2161
01:39:54,200 --> 01:39:55,000
You subscribe to.

2162
01:39:55,300 --> 01:39:59,700
We've got a schedule bot that you can follow on Twitter if you do this

2163
01:39:59,700 --> 01:39:59,800
tweet,

2164
01:40:00,000 --> 01:40:02,400
Thing, you can follow that button.

2165
01:40:02,400 --> 01:40:04,300
It's got like the schedule tweeted every day.

2166
01:40:04,300 --> 01:40:05,600
So, you know what time the stream is.

2167
01:40:05,900 --> 01:40:09,200
And we also have a news and Forum site that I highly recommend going

2168
01:40:09,200 --> 01:40:12,700
to, we're trying to overhaul a little bit, do some more stuff up

2169
01:40:12,700 --> 01:40:12,900
there.

2170
01:40:12,900 --> 01:40:14,700
I've been working on that a little bit lately, to kind of get it out

2171
01:40:14,700 --> 01:40:16,700
of the web nightmare.

2172
01:40:16,700 --> 01:40:17,600
That is Joomla.

2173
01:40:18,200 --> 01:40:22,500
But if you go there, it's got stuff like a discussion board.

2174
01:40:22,500 --> 01:40:26,400
You can post questions and ask, you know, discuss things with with

2175
01:40:26,400 --> 01:40:27,900
fellow developers who follow the series.

2176
01:40:28,600 --> 01:40:29,800
It's got resources.

2177
01:40:29,900 --> 01:40:32,400
So if you want to follow along on like Mac or Linux, which are

2178
01:40:32,400 --> 01:40:32,800
platforms.

2179
01:40:32,800 --> 01:40:34,000
We haven't poured it to yet.

2180
01:40:34,000 --> 01:40:36,600
There are people in the community who have already done those ports

2181
01:40:36,600 --> 01:40:37,700
that you can piggyback on.

2182
01:40:37,700 --> 01:40:38,900
You can go see how they did it.

2183
01:40:38,900 --> 01:40:41,500
You can download the source code, they've often times posted it for

2184
01:40:41,500 --> 01:40:44,600
free, so you can go take a look at that.

2185
01:40:44,900 --> 01:40:47,700
And it's also got an episode guide that you can use to catch up on

2186
01:40:47,700 --> 01:40:48,400
past episodes.

2187
01:40:48,400 --> 01:40:51,700
It's a lot better than using YouTube directly for the ones that people

2188
01:40:51,700 --> 01:40:52,500
have annotated.

2189
01:40:52,600 --> 01:40:54,300
So I'd highly recommend checking that out.

2190
01:40:54,700 --> 01:40:55,000
So yeah.

2191
01:40:55,000 --> 01:40:56,600
Hope to see you here tomorrow night.

2192
01:40:56,600 --> 01:40:57,000
Same time.

2193
01:40:57,000 --> 01:40:57,700
Same place.

2194
01:40:58,400 --> 01:40:59,800
Have a wonderful Tuesday.

2195
01:41:00,000 --> 01:41:01,400
Day, and I will see you then.

2196
01:41:01,500 --> 01:41:02,200
Take it easy, everyone.

