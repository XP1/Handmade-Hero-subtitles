1
00:00:01,500 --> 00:00:03,300
Hello, everyone, and welcome to handmade hero.

2
00:00:03,300 --> 00:00:06,100
The show we code a complete game live on stream.

3
00:00:06,100 --> 00:00:07,500
No engines, no libraries.

4
00:00:07,500 --> 00:00:08,400
It's just us.

5
00:00:09,100 --> 00:00:09,900
And our little typing.

6
00:00:09,900 --> 00:00:11,700
Fingers are a little baby typing.

7
00:00:11,700 --> 00:00:15,400
Little sausage fingers typing away today.

8
00:00:15,400 --> 00:00:20,200
We are, we kind of wrapped up yesterday, a couple of days worth of

9
00:00:20,200 --> 00:00:23,800
stuff that we've done, where we basically, we added font support to

10
00:00:23,800 --> 00:00:24,500
handmade hero.

11
00:00:25,700 --> 00:00:30,200
And we've got nominally all the things in there now, including kerning

12
00:00:30,200 --> 00:00:31,100
and all that sort of stuff.

13
00:00:31,100 --> 00:00:31,200
But

14
00:00:32,800 --> 00:00:36,000
I don't feel like it's quite an everything is not quite buttoned up

15
00:00:36,000 --> 00:00:38,800
like it's not quite where I would like it to be in terms of everything

16
00:00:38,800 --> 00:00:43,700
being finished and cleaned too, because there's still some like cruft

17
00:00:43,700 --> 00:00:46,600
in there, in terms of like how things are positioned stuff and stuff

18
00:00:46,600 --> 00:00:47,200
like that.

19
00:00:47,400 --> 00:00:50,800
And so I'd like to make sure that we actually go through that with a

20
00:00:50,800 --> 00:00:55,500
little bit more slightly finer tooth comb just to clean out any of the

21
00:00:55,500 --> 00:00:58,600
that sort of nastiness and then I'd also like to make sure that we

22
00:00:58,600 --> 00:01:00,700
have at least some plausible story.

23
00:01:01,400 --> 00:01:04,000
We would support multiple languages because right now we're not really

24
00:01:04,000 --> 00:01:07,500
considering that we do support like arbitrary code points.

25
00:01:07,500 --> 00:01:10,000
So you could have multiple, you know, you can have Unicode code points

26
00:01:10,000 --> 00:01:13,400
in there and stuff but there are certain limitations that we've kind

27
00:01:13,400 --> 00:01:16,500
of baked in that there's really not that much reason for us to keep we

28
00:01:16,500 --> 00:01:19,300
can get rid of them, I think without too much trouble and we probably

29
00:01:19,300 --> 00:01:19,600
should.

30
00:01:19,600 --> 00:01:22,800
So that's what I'd like to start doing today and maybe just spend the

31
00:01:22,800 --> 00:01:25,300
next couple days just going through everything and until we're

32
00:01:25,300 --> 00:01:28,100
relatively satisfied that we've got everything covered pretty well.

33
00:01:29,000 --> 00:01:30,200
So that's why I like to do today.

34
00:01:30,800 --> 00:01:32,600
Today is day 173.

35
00:01:33,200 --> 00:01:35,600
If you would like to follow along at home and you preorder the game on

36
00:01:35,600 --> 00:01:39,700
handmade here a.org, please go ahead and unpack day 172 source code

37
00:01:39,700 --> 00:01:41,500
because that's the source code that I'm going to be starting with

38
00:01:41,500 --> 00:01:41,900
today.

39
00:01:42,000 --> 00:01:44,900
So if you want to follow along, that's the source code, you should

40
00:01:44,900 --> 00:01:45,500
start with.

41
00:01:46,100 --> 00:01:49,400
Now where we left off, just to give you a little perspective.

42
00:01:49,900 --> 00:01:53,000
If you don't remember what we did yesterday, where we left off,

43
00:01:53,000 --> 00:01:57,500
because we had just finished actually putting in all of the sort of,

44
00:01:57,500 --> 00:01:58,700
through the entire pipeline from

45
00:01:58,800 --> 00:02:01,900
Asset Packer through to the game font metadata.

46
00:02:02,000 --> 00:02:07,000
So we can do things like Kern our fonts and so on and we also put in

47
00:02:07,000 --> 00:02:08,600
things like the line height.

48
00:02:08,600 --> 00:02:12,400
So you'll now notice that these lines are the correct distance apart,

49
00:02:12,600 --> 00:02:14,700
no more fudging necessary.

50
00:02:15,300 --> 00:02:17,700
But there's a couple things that we haven't done yet.

51
00:02:17,700 --> 00:02:20,200
One of them is just a little thing in actual handmade hero, which is

52
00:02:20,200 --> 00:02:24,200
that you'll notice the first line is off the top of the screen, right?

53
00:02:24,300 --> 00:02:27,800
And the reason for that is because we actually need to do some code to

54
00:02:27,800 --> 00:02:28,600
position things.

55
00:02:28,700 --> 00:02:31,600
Curly that we never did, that has nothing to do with our font.

56
00:02:31,600 --> 00:02:33,000
Our font is not malfunctioning.

57
00:02:33,200 --> 00:02:36,500
That's just the debug line stuff that we sort of put in as a test

58
00:02:36,500 --> 00:02:38,800
case, just isn't doing very much smart there.

59
00:02:38,800 --> 00:02:41,000
And the reason is that doing the smart thing is you can see that the

60
00:02:41,000 --> 00:02:45,400
@y right is doing some kind of nonsense here that has nothing to do

61
00:02:45,400 --> 00:02:46,800
with the actual information that we want.

62
00:02:46,800 --> 00:02:51,600
But we'd rather do is start the at why one line down because of

63
00:02:51,600 --> 00:02:54,600
course, we're working off the Baseline of the line.

64
00:02:55,300 --> 00:02:56,500
So to start with, let's do that.

65
00:02:56,500 --> 00:02:58,500
And then, that will, I think hopefully also.

66
00:02:59,400 --> 00:02:59,800
Sort of.

67
00:03:00,500 --> 00:03:03,200
Us in a better position to think about what we might want.

68
00:03:03,300 --> 00:03:06,300
For some refinements on stuff like these values because there's more

69
00:03:06,300 --> 00:03:08,700
information that we could be storing and possibly should be storing

70
00:03:09,300 --> 00:03:10,100
for that.

71
00:03:10,200 --> 00:03:13,600
So let's go ahead and start by just noticing that if I went in there

72
00:03:13,900 --> 00:03:15,800
and I put in that font scale there.

73
00:03:16,600 --> 00:03:16,800
Oh.

74
00:03:16,800 --> 00:03:19,700
And I need that font infrastructure as well, right?

75
00:03:20,100 --> 00:03:23,200
Like so, so we need to kind of do this sort of thing.

76
00:03:25,200 --> 00:03:28,600
And what I can probably do is, I can probably initialize this stuff to

77
00:03:28,600 --> 00:03:31,400
something reasonable first, right?

78
00:03:31,400 --> 00:03:34,800
And then assuming that we get the van info, we can we can sort of do

79
00:03:34,800 --> 00:03:35,200
that.

80
00:03:35,500 --> 00:03:37,500
All right, although you know what?

81
00:03:37,500 --> 00:03:38,400
Now I think about it.

82
00:03:38,500 --> 00:03:40,000
That's actually not the case.

83
00:03:40,000 --> 00:03:43,800
We don't need to push the font because it's in the font info so we can

84
00:03:43,800 --> 00:03:45,700
actually do that without actually.

85
00:03:45,700 --> 00:03:47,300
Yeah, without having to do anything further.

86
00:03:47,600 --> 00:03:50,600
So whatever the font idea is that we actually want to use, and I think

87
00:03:50,600 --> 00:03:53,400
we probably want to get that early because we want in our debug reset,

88
00:03:53,400 --> 00:03:54,700
to be able to use it so hard.

89
00:03:54,900 --> 00:03:58,100
Like reset, what I think we want to probably do is put this up here,

90
00:03:58,100 --> 00:03:58,600
right?

91
00:03:58,600 --> 00:04:02,300
And get that van tidy like right off the bat, which means that our

92
00:04:02,300 --> 00:04:06,400
debug reset is going to need to know what the game assets actually

93
00:04:06,400 --> 00:04:07,500
are, right?

94
00:04:08,000 --> 00:04:09,000
So that it can do this.

95
00:04:10,700 --> 00:04:15,800
Okay, that means that our font ID is going to be something that comes

96
00:04:15,900 --> 00:04:16,800
in here, right?

97
00:04:17,000 --> 00:04:19,700
This is our debug font ID or something like that, right?

98
00:04:19,899 --> 00:04:22,400
We can just call it font ID for now because I've got we're going to do

99
00:04:22,400 --> 00:04:24,900
something a little bit different with these things here because of

100
00:04:24,900 --> 00:04:27,100
course we want to fix them for a loop live coding as well.

101
00:04:27,800 --> 00:04:31,800
So for now I'm just going to do it like this and let it go, right?

102
00:04:33,400 --> 00:04:40,300
So that's game assets asset and that's all we really need.

103
00:04:41,300 --> 00:04:43,700
I believe so there we go.

104
00:04:44,300 --> 00:04:44,800
Okay.

105
00:04:45,100 --> 00:04:47,500
So if we want to do this when we call a, okay?

106
00:04:47,500 --> 00:04:49,300
So this actually also tells us something.

107
00:04:49,800 --> 00:04:53,500
Remember I did heard about this before and now I kind of have my

108
00:04:53,500 --> 00:04:57,000
answer which is that I don't want to have to rely on the font for

109
00:04:57,000 --> 00:04:57,900
getting things like this.

110
00:04:57,900 --> 00:05:00,700
Probably I don't want to rely on some kind of load time thing.

111
00:05:00,700 --> 00:05:04,200
I'd rather have that always be known specifically so it can do resets

112
00:05:04,200 --> 00:05:05,000
and stuff like this.

113
00:05:05,300 --> 00:05:08,900
That sort of suggests to me again that I want to be able to get that

114
00:05:08,900 --> 00:05:10,800
information directly.

115
00:05:11,000 --> 00:05:14,900
Which means that stuff like this get line advance for.

116
00:05:15,100 --> 00:05:19,000
I kind of do want them to be able to operate only on the info, right?

117
00:05:19,000 --> 00:05:21,700
Because I did third about whether I wanted to pass in the font just in

118
00:05:21,700 --> 00:05:25,200
case and I think I don't want to because that means that now I won't

119
00:05:25,200 --> 00:05:28,000
have any sort of Randomness there and that's going to be.

120
00:05:28,200 --> 00:05:30,900
I could always kind of count on it being there, so I think that's a

121
00:05:30,900 --> 00:05:33,000
better State of Affairs personally.

122
00:05:33,800 --> 00:05:36,100
So I think just do this.

123
00:05:36,700 --> 00:05:37,200
There we go.

124
00:05:37,700 --> 00:05:40,700
I think now we should be back in better shape.

125
00:05:40,900 --> 00:05:42,800
In terms of our placement, right?

126
00:05:42,900 --> 00:05:45,700
Oh, although we're not that's way too far down.

127
00:05:46,400 --> 00:05:48,300
So something went wrong there.

128
00:05:48,300 --> 00:05:50,600
If that's the distance between the two things.

129
00:05:51,400 --> 00:05:52,900
That's a little bit odd, don't you think?

130
00:05:54,700 --> 00:05:59,400
Well, no bother we will simply take a look at why that happened.

131
00:06:00,400 --> 00:06:03,300
Did I what happened there and made?

132
00:06:03,300 --> 00:06:05,500
Oops, debug reset.

133
00:06:06,300 --> 00:06:09,800
So at y equals font scale times get line advance for.

134
00:06:09,800 --> 00:06:12,700
So it's just going to be whatever get line advance for actually is,

135
00:06:13,200 --> 00:06:13,900
right.

136
00:06:14,600 --> 00:06:17,500
Then it's going to use at why directly in here.

137
00:06:17,800 --> 00:06:19,400
Presumably right?

138
00:06:19,900 --> 00:06:20,300
Yeah.

139
00:06:20,900 --> 00:06:24,600
And then it's going to subtract from that the get line Advance four

140
00:06:24,600 --> 00:06:25,500
times the font scale.

141
00:06:26,100 --> 00:06:28,300
So it should only have move down by

142
00:06:29,200 --> 00:06:30,400
By that amount.

143
00:06:30,500 --> 00:06:32,000
I wonder if that means do.

144
00:06:32,000 --> 00:06:35,600
We have some kind of problem with our Baseline alignment?

145
00:06:35,600 --> 00:06:36,700
I think we do.

146
00:06:38,600 --> 00:06:42,600
It's a little bit hard to guess but that would suggest that we do,

147
00:06:42,900 --> 00:06:43,500
right?

148
00:06:45,700 --> 00:06:46,100
Hmm.

149
00:06:46,500 --> 00:06:48,900
So yeah, I think we want to take a look at that because that seems

150
00:06:48,900 --> 00:06:49,600
busted.

151
00:06:50,000 --> 00:06:54,400
Let's take a look at what what's going on there.

152
00:06:54,600 --> 00:06:56,300
Because if you look right,

153
00:06:59,200 --> 00:06:59,600
That's right.

154
00:06:59,600 --> 00:07:01,600
You know that I'm feeling slow today.

155
00:07:02,100 --> 00:07:03,100
I'm feeling slow.

156
00:07:04,000 --> 00:07:06,100
I don't know if I'm just not in the groove yet, because that doesn't

157
00:07:06,100 --> 00:07:06,700
make sense.

158
00:07:07,200 --> 00:07:08,900
Like, what, what's the deal there?

159
00:07:09,200 --> 00:07:10,000
What did I do?

160
00:07:10,200 --> 00:07:14,100
Because see I've set at y 20 now, and it's here.

161
00:07:15,700 --> 00:07:18,800
All right, duh, because 0 is the center.

162
00:07:20,300 --> 00:07:21,400
I'm just stupid.

163
00:07:21,400 --> 00:07:25,800
Yep, it is a slow day so we want to start at the top of the screen,

164
00:07:26,000 --> 00:07:26,300
right?

165
00:07:26,300 --> 00:07:29,300
Which is there and then we want to come down by one line.

166
00:07:30,100 --> 00:07:34,200
Duh 0 0 is at the center of the screen not the corner, right?

167
00:07:34,300 --> 00:07:36,800
So that's what we actually want to do, right?

168
00:07:38,000 --> 00:07:43,000
Okay, so now that we're we've warmed ourselves up and we're not doing

169
00:07:43,000 --> 00:07:44,900
obviously stupid things, which is good.

170
00:07:45,400 --> 00:07:47,900
If you take a look at what's going on here, I'm just going to call

171
00:07:47,900 --> 00:07:48,700
some things.

172
00:07:48,900 --> 00:07:51,100
I'm going to point out some things, right?

173
00:07:51,300 --> 00:07:54,900
First of all, good job us because as you can see, you can even change

174
00:07:54,900 --> 00:07:57,300
like the size of things in the middle of sentences.

175
00:07:57,300 --> 00:08:00,100
And, and all of our current and all that stuff works properly it.

176
00:08:00,100 --> 00:08:01,600
So that's kind of fun, right?

177
00:08:01,800 --> 00:08:04,700
And it means that we can means that our fonts are at least getting

178
00:08:04,800 --> 00:08:07,700
into a more reliable sort of set of

179
00:08:07,800 --> 00:08:08,200
Metrics.

180
00:08:08,200 --> 00:08:10,300
So that complicated operations.

181
00:08:10,300 --> 00:08:11,900
You might want to do with them are actually working.

182
00:08:11,900 --> 00:08:12,300
Okay?

183
00:08:12,700 --> 00:08:16,000
And so, if we were to go in here and do a little more playing around

184
00:08:16,000 --> 00:08:20,400
with that right, where we wanted to sort of change the sizes

185
00:08:20,600 --> 00:08:22,600
frequently, we could do that.

186
00:08:22,700 --> 00:08:23,300
Right?

187
00:08:23,500 --> 00:08:27,300
If we wanted to say, okay, there, this one's going to be a one, then a

188
00:08:27,300 --> 00:08:30,700
5 and 3, then a 9, right?

189
00:08:30,700 --> 00:08:33,900
Then a then a 2, then a seven or something like this.

190
00:08:34,900 --> 00:08:37,600
If we want to do some crazy stuff, we can do it.

191
00:08:37,799 --> 00:08:40,299
It and in theory, everything should work.

192
00:08:40,500 --> 00:08:41,000
Right?

193
00:08:42,500 --> 00:08:43,000
Oh

194
00:08:44,500 --> 00:08:45,500
although,

195
00:08:47,400 --> 00:08:49,300
Although I'm glad I did that.

196
00:08:49,400 --> 00:08:51,300
That brings up a pretty interesting thing.

197
00:08:52,600 --> 00:08:57,200
So if we want to support this, we need to do one more thing.

198
00:08:57,500 --> 00:08:59,700
And that is that the kerning

199
00:09:00,500 --> 00:09:03,400
Has to be broken up across two letters.

200
00:09:03,600 --> 00:09:07,300
Because if the two letters can be of different sizes, the kerning

201
00:09:07,300 --> 00:09:08,500
amount would change.

202
00:09:09,500 --> 00:09:12,600
Right, which is kind of tricky.

203
00:09:13,900 --> 00:09:17,700
I don't even know if Windows gives us enough information to even do

204
00:09:17,700 --> 00:09:21,600
that properly but let me just draw what's going on here because I

205
00:09:21,600 --> 00:09:23,600
think this is kind of worth thinking through.

206
00:09:25,600 --> 00:09:26,100
Right.

207
00:09:26,500 --> 00:09:27,000
So

208
00:09:29,100 --> 00:09:31,000
If we start with the letter, right?

209
00:09:31,000 --> 00:09:34,400
That's tiny and then go to a letter that's big.

210
00:09:35,500 --> 00:09:39,600
Who's kerning do we use if we use the kerning right, because remember

211
00:09:39,600 --> 00:09:40,800
the kerning value we get back.

212
00:09:40,800 --> 00:09:43,700
We'll be the same but it's the scale.

213
00:09:44,300 --> 00:09:47,000
This letter had one this letter had one scale, you know, this point to

214
00:09:47,000 --> 00:09:50,600
or something and this one had, you know, 1.0 right.

215
00:09:51,300 --> 00:09:52,900
So the kerning value that we get back.

216
00:09:52,900 --> 00:09:54,100
How do we interpret it?

217
00:09:54,200 --> 00:09:56,500
Do we interpret it at this scale or do we interpret it this?

218
00:09:56,500 --> 00:09:56,900
Kale

219
00:09:58,100 --> 00:09:59,700
Because it's going to make a very big difference.

220
00:09:59,800 --> 00:10:03,400
If we interpret it at this scale, we're going to move to too little

221
00:10:03,800 --> 00:10:07,200
and the, oh, will like overlap the see quite a bit, but if we

222
00:10:07,200 --> 00:10:10,100
interpret it, this scale will move too far and they'll be a giant Gap,

223
00:10:10,800 --> 00:10:11,300
right?

224
00:10:13,800 --> 00:10:19,700
And so, to some degree, it's almost we just really don't have the

225
00:10:19,700 --> 00:10:21,000
information that we would need.

226
00:10:21,300 --> 00:10:24,100
We really, really don't have that information that we would need.

227
00:10:24,600 --> 00:10:27,800
Because really that kerning has to become a more procedural.

228
00:10:27,900 --> 00:10:30,500
Thing at that point, especially when you consider the fact that

229
00:10:30,500 --> 00:10:32,600
kerning changes the alignments of the letters.

230
00:10:32,800 --> 00:10:36,000
So for example, let's say that you had a lowercase C

231
00:10:37,100 --> 00:10:37,600
Right?

232
00:10:38,500 --> 00:10:44,900
And an uppercase t and they recur and like this if I shrink the tea

233
00:10:44,900 --> 00:10:50,300
down so that the bar comes in line with the top of the see it should

234
00:10:50,300 --> 00:10:54,800
now be spaced quite a bit further to this side because it can't

235
00:10:54,800 --> 00:10:58,400
overlap without running into the other letter, right?

236
00:11:01,900 --> 00:11:05,300
So I'm going to have to say, I feel like you're not allowed to change

237
00:11:05,300 --> 00:11:09,200
characters inside of a word because we just don't have the information

238
00:11:09,200 --> 00:11:10,300
we would actually need.

239
00:11:10,800 --> 00:11:14,800
We could write our entirely own kerning system to support that and

240
00:11:14,800 --> 00:11:16,500
that would be kind of entertaining to do.

241
00:11:17,600 --> 00:11:20,700
But I feel like with the information we get from Windows,

242
00:11:21,500 --> 00:11:23,000
There's nothing that's going to happen there.

243
00:11:23,700 --> 00:11:28,400
So I feel like any two adjacent letters have to be the same and that

244
00:11:28,400 --> 00:11:31,100
even though I would like to be able to do something crazy like that.

245
00:11:31,100 --> 00:11:32,900
I feel like there's really no way to do so

246
00:11:34,600 --> 00:11:39,000
At least, not in a way that actually is reliably good, right?

247
00:11:40,800 --> 00:11:41,000
Yeah.

248
00:11:41,000 --> 00:11:43,800
So, that's a bummer because that's kind of, we're not doing anything

249
00:11:43,800 --> 00:11:47,300
wrong there, but I think there's no way we can really do something,

250
00:11:47,300 --> 00:11:48,300
totally right.

251
00:11:52,500 --> 00:11:52,900
Yeah.

252
00:11:54,100 --> 00:11:57,700
Well, something to think about, it's useful to kind of understand

253
00:11:57,700 --> 00:11:59,900
like, okay, that's you know, that's a limitation.

254
00:12:00,000 --> 00:12:03,400
Of the way Windows does kerning in the first place.

255
00:12:03,500 --> 00:12:05,500
There's really nothing we can do about that, or I should say the way

256
00:12:05,500 --> 00:12:06,800
truetype fonts does kerning.

257
00:12:07,900 --> 00:12:09,600
Anyway, all right.

258
00:12:09,600 --> 00:12:13,400
So, we'll ignore that limitation for now, because I don't know this

259
00:12:13,400 --> 00:12:15,900
much that we can do about that without going down to kind of a big rat

260
00:12:15,900 --> 00:12:19,400
hole of kind of doing our own font stuff formats and stuff like this.

261
00:12:19,400 --> 00:12:24,100
But the things that we can do something about there's a couple of them

262
00:12:25,100 --> 00:12:27,900
First of all, this giant space here.

263
00:12:28,100 --> 00:12:29,900
What's that coming from right?

264
00:12:30,400 --> 00:12:35,500
Well what that comes from is the fact that our spacing tables are

265
00:12:35,500 --> 00:12:40,900
currently not initialized to know what happens when you have a letter.

266
00:12:41,100 --> 00:12:44,900
That that follows nothing right that follows.

267
00:12:44,900 --> 00:12:46,900
No other letter by default.

268
00:12:46,900 --> 00:12:51,100
It will just use a generic width in that case, right?

269
00:12:51,900 --> 00:12:54,700
And so I think we would like to do here is we

270
00:12:55,000 --> 00:12:57,800
Like to set up our creating tables to say that we don't Advance at all

271
00:12:57,800 --> 00:13:01,000
if the previous Cara was the 0 glyph, right?

272
00:13:01,400 --> 00:13:03,400
Because that's what we start out with, because you can see what

273
00:13:03,400 --> 00:13:05,700
happens right in the debug line.

274
00:13:07,500 --> 00:13:08,700
Right in here.

275
00:13:09,700 --> 00:13:11,900
If we were to set get rid of this, right?

276
00:13:12,000 --> 00:13:14,800
We start at the left edge of the screen, you know?

277
00:13:15,700 --> 00:13:17,900
And we say, okay, we're starting to left edge of the screen.

278
00:13:17,900 --> 00:13:20,000
We want to line up flush, to the left edge of the screen.

279
00:13:20,600 --> 00:13:21,800
So, why is it doing that?

280
00:13:21,800 --> 00:13:24,400
There's that left Edge, we initialize X, to be that left Edge.

281
00:13:24,400 --> 00:13:28,900
But when we come in here, the first thing that we do is we ask for the

282
00:13:28,900 --> 00:13:32,100
horizontal advancement that we're going to advance between the

283
00:13:32,100 --> 00:13:34,000
previous character and this character, right?

284
00:13:34,300 --> 00:13:35,300
But we don't know.

285
00:13:37,900 --> 00:13:40,000
Anything about that because there's nothing there, right?

286
00:13:40,000 --> 00:13:41,000
It's set to zero.

287
00:13:41,400 --> 00:13:43,600
And so it's going to look up into that table and find out.

288
00:13:43,600 --> 00:13:47,300
Whoops, like that is actually some entry and it's an entry that we did

289
00:13:47,300 --> 00:13:49,700
initialize to anything meaningful, right?

290
00:13:50,300 --> 00:13:54,200
So if we go back and look at like our test asset Packer, for example,

291
00:13:55,300 --> 00:13:58,700
when we actually do those kerning tables, what we could do is say, oh,

292
00:13:58,700 --> 00:14:03,900
okay, you know, whenever we do our current, a what we're going to

293
00:14:03,900 --> 00:14:07,000
start off with instead is if the

294
00:14:07,100 --> 00:14:08,700
First kerning pair, right?

295
00:14:09,100 --> 00:14:09,800
Oops, that's wrong.

296
00:14:11,200 --> 00:14:14,700
I meant this one when we initialize the tables, if the first skirting

297
00:14:14,700 --> 00:14:16,700
pair is going to be the null glyph.

298
00:14:16,800 --> 00:14:18,900
We're going to do something special, right?

299
00:14:19,800 --> 00:14:24,500
So what we're going to do here is say alright at first or you know we

300
00:14:24,500 --> 00:14:25,900
could even do it special case here.

301
00:14:26,200 --> 00:14:29,800
We could do something like saying R32 W equals 0 0.

302
00:14:29,800 --> 00:14:32,800
If code Point index is greater than 0, right?

303
00:14:32,900 --> 00:14:37,300
Or it's not equal to zero then fill it in with an actual ABC with

304
00:14:39,000 --> 00:14:43,600
So I think that's a pretty easy way to make that problem work relative

305
00:14:43,700 --> 00:14:45,100
to make that worked relatively well.

306
00:14:47,500 --> 00:14:48,200
So, here we go.

307
00:14:54,400 --> 00:14:55,500
And so now, let's run it.

308
00:14:57,700 --> 00:14:58,000
Oh,

309
00:15:00,600 --> 00:15:02,100
That was not what I expected.

310
00:15:02,400 --> 00:15:06,400
If the code point in X is not equal to 0, ah, got to get rid of that

311
00:15:06,400 --> 00:15:09,100
are 32 little variable shadowing, start the day.

312
00:15:12,400 --> 00:15:15,900
Okay, so now we get more what we would expect, right?

313
00:15:15,900 --> 00:15:18,400
Which is that we line up with the left Edge that we're actually

314
00:15:18,400 --> 00:15:21,300
starting with at least to a greater degree.

315
00:15:21,900 --> 00:15:25,700
There's still a little bit of space here and that space is not great,

316
00:15:25,800 --> 00:15:26,100
right?

317
00:15:26,200 --> 00:15:30,700
If we told our system that we want it to line up directly with the

318
00:15:30,700 --> 00:15:34,000
left Edge, we would like to line it up directly with the left Edge,

319
00:15:34,100 --> 00:15:34,400
right?

320
00:15:34,400 --> 00:15:38,000
That's a pretty straightforward thing that we might want to do if we

321
00:15:38,000 --> 00:15:39,400
were actually cared about typography.

322
00:15:39,400 --> 00:15:42,000
Now, granted you might say we don't care about typography very much.

323
00:15:42,200 --> 00:15:44,200
This game and that is probably true.

324
00:15:44,400 --> 00:15:48,400
But for the benefit of a just discussing the problem, at least being

325
00:15:48,400 --> 00:15:49,200
aware of it.

326
00:15:49,400 --> 00:15:50,800
I'm going to explain why that's happening.

327
00:15:51,800 --> 00:15:54,700
And then the other thing I wanted to point out is this giant Gap here.

328
00:15:54,900 --> 00:15:56,500
The same thing is true for this.

329
00:15:56,900 --> 00:15:59,200
The problem with that is that the line Advanced, right?

330
00:15:59,200 --> 00:16:02,300
That we're using is the distance from a baseline to another Baseline.

331
00:16:02,700 --> 00:16:06,200
That doesn't tell us where the top edge of the font actually is.

332
00:16:06,500 --> 00:16:09,800
So if we wanted to align that top Edge, that would be a problem,

333
00:16:10,000 --> 00:16:10,600
right?

334
00:16:11,700 --> 00:16:18,300
So that is that sort of the two things that I think in terms of

335
00:16:18,300 --> 00:16:21,600
metadata or Allah or working with alignments, right?

336
00:16:21,800 --> 00:16:23,500
That we haven't really addressed.

337
00:16:24,300 --> 00:16:28,300
The first one is kind of a little bit Squirrely and I'll talk about

338
00:16:28,300 --> 00:16:29,000
that s.

339
00:16:29,000 --> 00:16:31,800
Actually, the second one is actually little bit easier.

340
00:16:32,100 --> 00:16:35,400
All we really need to know about that is we just need to store an

341
00:16:35,400 --> 00:16:39,600
additional piece of metadata, which is how high the font itself

342
00:16:39,600 --> 00:16:41,300
actually is and that's information.

343
00:16:41,400 --> 00:16:43,200
That we already had right?

344
00:16:43,700 --> 00:16:47,400
We just chose not to store it, so we just need to actually store that

345
00:16:47,500 --> 00:16:51,000
and then use that as the initial starting point instead of the line

346
00:16:51,000 --> 00:16:51,600
advance.

347
00:16:51,800 --> 00:16:53,500
So let's do that because that's very simple.

348
00:16:53,500 --> 00:16:55,600
And then the other one is a slightly more complicated and we'll talk

349
00:16:55,600 --> 00:16:56,300
about that.

350
00:16:57,100 --> 00:16:58,400
So, where is that getting storage?

351
00:16:58,400 --> 00:17:01,900
Well, you can see our line Advanced here is being stored as the height

352
00:17:01,900 --> 00:17:03,900
and then the external editing, right?

353
00:17:04,000 --> 00:17:07,300
So we added those two together, all we would have to do is actually

354
00:17:07,300 --> 00:17:09,000
store them separately, right?

355
00:17:09,099 --> 00:17:10,500
So we can store the height.

356
00:17:11,400 --> 00:17:15,599
The external letting as two separate things that occur in our font.

357
00:17:15,900 --> 00:17:19,400
And that way, we now no longer have that situation anymore.

358
00:17:20,800 --> 00:17:24,099
We're, we're talking about a combined value in wouldn't be able to get

359
00:17:24,099 --> 00:17:26,599
them X extricated from each other.

360
00:17:27,099 --> 00:17:31,200
So if I come in here to handmade file formats, I should be able to go

361
00:17:31,200 --> 00:17:33,000
in and change that.

362
00:17:33,000 --> 00:17:34,900
So instead of storing line Advanced right?

363
00:17:35,000 --> 00:17:38,800
In the HHA font we're just going to add another thing into our storage

364
00:17:38,800 --> 00:17:42,500
format that's going to be the external loading and then we're going to

365
00:17:42,500 --> 00:17:44,400
change line advance to be the height.

366
00:17:44,800 --> 00:17:46,200
Like so right.

367
00:17:46,200 --> 00:17:50,100
And I'll say this is the maximum height or

368
00:17:50,400 --> 00:17:50,900
Ders.

369
00:17:53,700 --> 00:17:56,900
actually no it now that I think about it, we actually want a little

370
00:17:56,900 --> 00:17:59,800
more information, either even more than that because

371
00:18:00,000 --> 00:18:02,500
I want to know where the Baseline is, right?

372
00:18:02,600 --> 00:18:04,700
So we really want to kind of get all of.

373
00:18:04,700 --> 00:18:06,900
We want all of that information that was had there.

374
00:18:06,900 --> 00:18:10,500
Instead of height, we kind of want, like the Ascender and the

375
00:18:10,500 --> 00:18:12,900
descender, right Heights.

376
00:18:15,000 --> 00:18:18,800
So that we can advance just down to the Baseline, right?

377
00:18:20,800 --> 00:18:22,600
Think it's called a scent of descent.

378
00:18:26,700 --> 00:18:29,700
I don't remember what they call them asset a decent.

379
00:18:31,100 --> 00:18:33,300
Asset decent.

380
00:18:34,700 --> 00:18:35,800
And so this way,

381
00:18:38,200 --> 00:18:40,100
I guess it's like sort of the totals here, right?

382
00:18:40,500 --> 00:18:43,500
This way, we'd have all the information that we could possibly want.

383
00:18:48,600 --> 00:18:49,600
Sender height.

384
00:18:52,300 --> 00:18:54,600
Now that really doesn't need an explanation because it's what it is

385
00:18:57,100 --> 00:18:58,300
and then we've got the external lighting.

386
00:18:58,900 --> 00:19:01,800
And so now with those we can now do as any kind of vertical

387
00:19:01,800 --> 00:19:04,200
positioning that we so choose we can put the Baseline a particular

388
00:19:04,200 --> 00:19:04,700
point.

389
00:19:05,000 --> 00:19:07,100
We can put the total font that a particular point.

390
00:19:07,200 --> 00:19:09,400
You know, we can put the base, the bottom of the ascenders, at a

391
00:19:09,400 --> 00:19:11,600
particular Point move the line get Advance.

392
00:19:11,600 --> 00:19:13,700
The line we could do anything we want, right?

393
00:19:14,000 --> 00:19:17,700
So I feel like that's a saner approach to that problem.

394
00:19:18,100 --> 00:19:22,000
It means that will be a little bit more flexible with what we do and

395
00:19:22,100 --> 00:19:23,500
The assets, right?

396
00:19:23,800 --> 00:19:28,000
When we come down here and made asset and we're getting the line

397
00:19:28,000 --> 00:19:30,400
Advanced now we know, it's really just, okay?

398
00:19:30,400 --> 00:19:33,800
It's the Ascender height, it's like all these things out of together,

399
00:19:34,100 --> 00:19:34,600
right?

400
00:19:34,600 --> 00:19:35,700
So it's going to be that.

401
00:19:37,400 --> 00:19:37,700
What's that?

402
00:19:37,700 --> 00:19:38,300
What's that?

403
00:19:43,300 --> 00:19:49,200
And then we can add in additional things here for other stuff.

404
00:19:49,200 --> 00:19:54,200
Like get just get starting

405
00:19:55,500 --> 00:19:59,200
Baseline y, or something like that.

406
00:20:00,400 --> 00:20:03,000
Basically what that's going to do is just return that to Sender the

407
00:20:03,000 --> 00:20:06,900
thing that you know, where we want to start a line from that makes

408
00:20:06,900 --> 00:20:07,300
sense.

409
00:20:08,000 --> 00:20:10,300
And then instead of using that get line Advance, we're going to

410
00:20:10,300 --> 00:20:14,200
actually just use this when we're doing that positioning in the debug

411
00:20:14,200 --> 00:20:14,600
line.

412
00:20:16,000 --> 00:20:18,300
Or I should say the reset function, right?

413
00:20:19,900 --> 00:20:23,200
So something like this where we're going to do that.

414
00:20:23,700 --> 00:20:25,200
I think that's really all we need.

415
00:20:28,100 --> 00:20:30,300
What is the problem here?

416
00:20:31,200 --> 00:20:33,500
It's not a member of loaded font.

417
00:20:33,500 --> 00:20:34,700
That's true.

418
00:20:35,300 --> 00:20:35,900
It isn't.

419
00:20:35,900 --> 00:20:37,800
Why are we storing that here?

420
00:20:38,700 --> 00:20:43,400
Actually, if I may, why is that even getting stored there?

421
00:20:43,700 --> 00:20:45,300
It should be stored here.

422
00:20:46,000 --> 00:20:47,800
That's where it actually should be stored.

423
00:20:48,200 --> 00:20:49,600
So I don't know why we were doing that.

424
00:20:49,700 --> 00:20:53,000
Be completely honest with you, no idea whatsoever.

425
00:20:53,200 --> 00:20:54,700
That's when that should have happened.

426
00:20:55,200 --> 00:20:56,000
So that's fine.

427
00:20:57,800 --> 00:20:58,400
Here we go.

428
00:21:01,400 --> 00:21:02,900
And we'll just run that repack.

429
00:21:02,900 --> 00:21:04,800
And now we will go

430
00:21:06,400 --> 00:21:13,400
All right, so let's see, still not quite that's that's not right.

431
00:21:14,300 --> 00:21:15,800
Oh, that's good.

432
00:21:15,800 --> 00:21:18,300
Because I use the descenders instead of the ascenders, which is

433
00:21:18,300 --> 00:21:20,000
actually what we wanted, right?

434
00:21:20,900 --> 00:21:23,000
Should draw on the Whiteboard to remind my own self.

435
00:21:24,000 --> 00:21:29,500
If we have a g, then this is actually

436
00:21:30,400 --> 00:21:33,800
We want this one which is actually the ascending height, right?

437
00:21:33,900 --> 00:21:37,300
Not this one, which is the descending height, right?

438
00:21:38,400 --> 00:21:40,500
So yeah, that was just kind of me.

439
00:21:40,500 --> 00:21:44,500
Not even typing in the thing, I actually wanted

440
00:21:46,000 --> 00:21:46,800
Could you be that?

441
00:21:47,100 --> 00:21:48,800
So let's try that test again.

442
00:21:49,200 --> 00:21:50,100
See if they're any better.

443
00:21:50,100 --> 00:21:50,700
There we go.

444
00:21:51,800 --> 00:21:53,800
So now we're looking better, right?

445
00:21:53,900 --> 00:21:55,700
It's definitely an improvement.

446
00:21:56,200 --> 00:22:00,100
It's not exactly lined up though which is a little weird.

447
00:22:00,800 --> 00:22:05,300
Now it's possible that that's actually correct and the reason I say

448
00:22:05,300 --> 00:22:08,300
that it's possible, that's actually correct is because I don't know,

449
00:22:08,300 --> 00:22:12,000
for example, if the character map includes things that would have gone

450
00:22:12,000 --> 00:22:13,900
in that space, right?

451
00:22:14,400 --> 00:22:15,200
So for example,

452
00:22:18,600 --> 00:22:19,700
That's not what I want.

453
00:22:21,500 --> 00:22:22,000
That.

454
00:22:22,800 --> 00:22:27,200
So for example, we come down here and we see for example, this my

455
00:22:27,200 --> 00:22:31,000
assumption is that, that is included and you can kind of see that it

456
00:22:31,000 --> 00:22:35,000
sort of is like if you look at the you know, if you look at the a that

457
00:22:35,000 --> 00:22:39,800
a and this a look like the same a but with extra space on top.

458
00:22:40,000 --> 00:22:43,300
So I suspect that that is just the space where the accents would go.

459
00:22:43,700 --> 00:22:46,700
If you were looking at sort of the other pieces of the font.

460
00:22:47,300 --> 00:22:48,900
So I don't know what to say about that.

461
00:22:48,900 --> 00:22:49,800
Technically

462
00:22:50,600 --> 00:22:54,300
That is probably correct but I don't know.

463
00:22:54,600 --> 00:22:58,300
You know, if we were going to be a little bit more.

464
00:22:59,800 --> 00:23:01,000
Exacting about it.

465
00:23:01,900 --> 00:23:06,200
We might go and actually measure all the font glyphs ourselves and

466
00:23:06,200 --> 00:23:11,900
change that value to actually be based on what we observed to be the

467
00:23:11,900 --> 00:23:15,200
highest thing above the Baseline and what we observe to be the lowest

468
00:23:15,200 --> 00:23:16,500
thing below the Baseline.

469
00:23:17,200 --> 00:23:18,100
Does that make sense?

470
00:23:19,300 --> 00:23:23,900
And I don't know if we really want to do that because it's sort of not

471
00:23:23,900 --> 00:23:26,100
really using the font per se.

472
00:23:27,500 --> 00:23:30,000
But an argument could have been made for it.

473
00:23:30,600 --> 00:23:35,200
So for now we'll just say we know that that's there and we'll leave it

474
00:23:35,200 --> 00:23:35,700
at that.

475
00:23:36,200 --> 00:23:37,000
We know it's there.

476
00:23:37,000 --> 00:23:40,100
If we decide later that we don't like it, it's not too hard for us to

477
00:23:40,100 --> 00:23:42,400
remove so be aware of it.

478
00:23:44,500 --> 00:23:44,900
Okay.

479
00:23:46,300 --> 00:23:48,000
And so the other thing, oops.

480
00:23:48,000 --> 00:23:52,400
The other thing to think about, like I was saying is the lining up on

481
00:23:52,400 --> 00:23:53,200
the left side.

482
00:23:53,700 --> 00:23:56,500
So if you take a look at how these characters are lining up,

483
00:23:59,400 --> 00:23:59,700
You can.

484
00:24:00,000 --> 00:24:02,900
That even though we asked for them to be aligned directly, with the

485
00:24:02,900 --> 00:24:05,600
left Edge, they are not aligned direct with the left Edge.

486
00:24:05,700 --> 00:24:09,400
The reason for that is because of those ABC widths, that we were

487
00:24:09,400 --> 00:24:14,000
talking about, we chose to have the offset for the character, be part

488
00:24:14,000 --> 00:24:17,400
of that a, the a b and c width part, right?

489
00:24:17,900 --> 00:24:22,400
And you can see the consequences of having that occur of putting sort

490
00:24:22,400 --> 00:24:24,100
of the placement there, is that.

491
00:24:24,100 --> 00:24:27,900
Now, if we try to draw something right at that left Edge, it actually

492
00:24:27,900 --> 00:24:28,700
to place this place.

493
00:24:28,700 --> 00:24:29,900
Is it by that?

494
00:24:30,000 --> 00:24:31,300
At that part of the width.

495
00:24:31,900 --> 00:24:36,200
And so what I'm thinking we probably want to do is we probably want to

496
00:24:36,200 --> 00:24:41,400
bake that back into the kerning right instead which we have the option

497
00:24:41,400 --> 00:24:45,000
of doing and we you know we didn't do it because we were sort of

498
00:24:45,000 --> 00:24:47,500
playing with other reasons but I think what I'd like to do is see what

499
00:24:47,500 --> 00:24:49,100
happens if we go ahead and place that back in there.

500
00:24:49,100 --> 00:24:52,700
So that lifts always line up flush with the edge and that ABC with is

501
00:24:52,700 --> 00:24:55,200
actually something that's done.

502
00:24:56,900 --> 00:24:58,700
A little bit differently if that makes sense.

503
00:24:59,700 --> 00:25:01,700
So let's see here, if we come in here,

504
00:25:03,900 --> 00:25:05,200
how are we actually doing that?

505
00:25:08,000 --> 00:25:10,000
Min ex - priest up.

506
00:25:11,400 --> 00:25:14,300
So that's the that's what we're putting in there, right?

507
00:25:14,400 --> 00:25:15,400
We're using that.

508
00:25:15,500 --> 00:25:18,900
And what we'd rather do, is have that actually go into the kerning

509
00:25:18,900 --> 00:25:19,200
table.

510
00:25:19,200 --> 00:25:23,400
I think the problem that we have with that, of course, is that in

511
00:25:23,400 --> 00:25:26,000
order to put that into the kerning table, we need to process all the

512
00:25:26,000 --> 00:25:31,700
characters and we don't process the characters prior to actually doing

513
00:25:31,700 --> 00:25:32,500
that right out.

514
00:25:32,600 --> 00:25:35,200
Now, we could choose that, I feel like there's a pretty easy way to

515
00:25:35,200 --> 00:25:37,300
cheese that and that way

516
00:25:37,700 --> 00:25:39,500
Is to run the characters.

517
00:25:39,500 --> 00:25:42,900
First, like I feel like we could actually do that.

518
00:25:53,100 --> 00:25:53,900
Hmm.

519
00:25:55,900 --> 00:26:00,500
By making sure that fog lifts always come before fonts that would be

520
00:26:00,500 --> 00:26:02,400
the way to cheese it, right?

521
00:26:02,900 --> 00:26:03,800
You can see what I'm saying.

522
00:26:03,800 --> 00:26:04,000
Right?

523
00:26:04,000 --> 00:26:06,300
So the reason it doesn't work right now is because the horizontal

524
00:26:06,300 --> 00:26:13,700
Advanced table is in an asset type who comes prior to write that comes

525
00:26:13,700 --> 00:26:15,700
prior to the font glyphs potentially.

526
00:26:16,000 --> 00:26:16,500
Right?

527
00:26:17,000 --> 00:26:20,100
And the reason that that was the case is because of the way we added

528
00:26:20,100 --> 00:26:23,600
them, I believe they get written out in that order, right?

529
00:26:23,700 --> 00:26:24,900
So if we come down

530
00:26:25,100 --> 00:26:28,200
You're too right, fonts.

531
00:26:28,800 --> 00:26:33,200
You can kind of see that if we weren't wanted to, we could rearrange

532
00:26:33,200 --> 00:26:33,900
this, right?

533
00:26:33,900 --> 00:26:37,200
We can move this over here and then that wouldn't be the case anymore.

534
00:26:38,800 --> 00:26:40,500
It's kind of ugly though, right?

535
00:26:40,500 --> 00:26:46,200
To do, this is kind of janky, because it means you have to get this

536
00:26:46,200 --> 00:26:47,000
order, right?

537
00:26:49,900 --> 00:26:50,600
Always.

538
00:26:51,700 --> 00:26:52,200
Right.

539
00:26:56,100 --> 00:26:56,700
So, I don't know.

540
00:26:58,100 --> 00:26:59,300
I know how you guys feel about that.

541
00:27:00,000 --> 00:27:01,600
But assuming we were to do that.

542
00:27:02,400 --> 00:27:08,600
What that would mean is that this Min X here - priest up, this thing

543
00:27:09,700 --> 00:27:13,800
that would actually instead of being baked into the alignment that

544
00:27:13,800 --> 00:27:17,700
would come out of the alignment entirely and it would actually just be

545
00:27:17,800 --> 00:27:18,900
moved into the kerning

546
00:27:20,000 --> 00:27:20,600
Right?

547
00:27:20,800 --> 00:27:24,000
And so if we take a look at where that kerning was actually happening

548
00:27:24,000 --> 00:27:28,700
that horizontal advanced stuff we're is on total.

549
00:27:32,200 --> 00:27:32,900
Advance.

550
00:27:35,200 --> 00:27:43,200
If I went in and set it to include that, like so we want to take

551
00:27:43,200 --> 00:27:47,300
whatever the kerning used to be in this table and I guess, you know,

552
00:27:47,300 --> 00:27:50,900
to be honest, we kind of have to do it to the entire table, right?

553
00:27:51,000 --> 00:27:55,100
We've got to go through all of the code points and do it here, right?

554
00:27:55,800 --> 00:27:56,700
Something like this.

555
00:27:57,000 --> 00:27:59,200
All right, so for every other code point,

556
00:28:02,000 --> 00:28:07,000
In our entire table, we have to go through and adjust it by whatever.

557
00:28:07,000 --> 00:28:08,500
This this step value is,

558
00:28:09,700 --> 00:28:13,500
So, we would compute that first kerning change.

559
00:28:15,300 --> 00:28:16,200
It would be this.

560
00:28:21,800 --> 00:28:25,600
And in order to compute that, yeah, I think we just want to say, okay,

561
00:28:25,700 --> 00:28:31,500
we need to move by whatever this amount is, we used to be doing it to

562
00:28:31,500 --> 00:28:33,000
counter position something.

563
00:28:33,200 --> 00:28:36,300
So I believe this is now going to is going to be the opposite way

564
00:28:36,300 --> 00:28:37,400
round, right?

565
00:28:37,600 --> 00:28:40,700
Because if the minimum X, let's see if the minimum X is past the

566
00:28:40,700 --> 00:28:41,600
priest up.

567
00:28:42,000 --> 00:28:43,200
We want to move it.

568
00:28:46,200 --> 00:28:50,300
well, that actually call me crazy, but that actually looks

569
00:28:51,600 --> 00:28:53,800
Like, it's the right way around for our purposes.

570
00:28:54,500 --> 00:28:55,900
How is that working in here?

571
00:28:58,000 --> 00:29:01,700
Doesn't that seem like the wrong way round for the aligned percentage?

572
00:29:05,700 --> 00:29:09,500
The precept X is how far over we were starting.

573
00:29:10,800 --> 00:29:16,000
And then the Min X is going to be further than that normally if their

574
00:29:16,000 --> 00:29:17,200
space at the beginning.

575
00:29:17,600 --> 00:29:20,600
So if you want to know how far you should move from the previous

576
00:29:20,600 --> 00:29:21,400
character,

577
00:29:22,800 --> 00:29:27,200
You would want to subtract Free Step from Minix, right?

578
00:29:28,500 --> 00:29:33,100
But if you were going to put the alignment Point, yeah, that's weird.

579
00:29:33,100 --> 00:29:35,600
I wonder if we just had that wrong or if I'm just thinking it through

580
00:29:35,600 --> 00:29:36,800
wrong it's been a slow day.

581
00:29:37,100 --> 00:29:38,700
We already know that it's a slow day.

582
00:29:40,900 --> 00:29:44,900
So maybe I'm just being slow again, you know, sometimes that happens.

583
00:29:45,700 --> 00:29:46,600
It's totes fine.

584
00:29:53,700 --> 00:29:54,400
All right, there we go.

585
00:29:55,900 --> 00:29:58,000
So let's just see what that does because I'm a little weirded out

586
00:29:58,000 --> 00:29:58,600
right now.

587
00:29:59,000 --> 00:29:59,900
And I feel like I need to

588
00:30:00,000 --> 00:30:02,200
For this a little bit because I don't really understand what's going

589
00:30:02,200 --> 00:30:03,000
on, but that's fine.

590
00:30:04,300 --> 00:30:08,500
Alright, so now we have corrected that and you can see that we're

591
00:30:08,500 --> 00:30:12,300
lining up properly with the edge, and it does look like we're pretty

592
00:30:12,300 --> 00:30:14,400
close in, to being exactly right.

593
00:30:14,400 --> 00:30:16,400
In fact, we might be literally exactly, right?

594
00:30:16,400 --> 00:30:22,400
I think we are hard to say, but, but it looks pretty darn good.

595
00:30:23,000 --> 00:30:24,900
And then let's take a look at how our kerning looks.

596
00:30:24,900 --> 00:30:28,200
Otherwise, I'm going to go ahead and load up notepad compared to our

597
00:30:28,200 --> 00:30:31,400
reference, which we're assuming Windows is able to follow its own

598
00:30:31,400 --> 00:30:33,500
creating tables but you never do know.

599
00:30:34,900 --> 00:30:35,600
With Windows.

600
00:30:39,100 --> 00:30:41,900
so, okay, if I line this up here,

601
00:30:43,100 --> 00:30:44,700
Is that roughly the size of the D?

602
00:30:45,700 --> 00:30:51,200
That looks like a bigger that looks bigger came and render.

603
00:30:54,600 --> 00:30:55,000
Yeah.

604
00:30:55,000 --> 00:30:57,000
So our kerning is definitely wrong.

605
00:30:57,700 --> 00:30:59,500
So I must just be right.

606
00:30:59,500 --> 00:31:02,200
I mean that's definitely it's displacing it the wrong way, you can see

607
00:31:02,200 --> 00:31:02,900
that it is.

608
00:31:03,400 --> 00:31:09,000
So I'm obviously thinking about that incorrectly and so I'm assuming

609
00:31:09,000 --> 00:31:12,100
that it actually is my assumption that it had to be reversed was

610
00:31:12,100 --> 00:31:13,100
correct.

611
00:31:13,400 --> 00:31:14,700
So I'll do it and try it.

612
00:31:14,700 --> 00:31:18,300
But really I would then I'm going to want to go back and draw it out

613
00:31:18,300 --> 00:31:20,600
to figure out why like, what my mental?

614
00:31:20,600 --> 00:31:24,300
What was my mental problem there, if that makes sense.

615
00:31:25,800 --> 00:31:26,300
So yeah.

616
00:31:27,900 --> 00:31:31,000
Because that just based that seems it seems wrong to me.

617
00:31:31,500 --> 00:31:33,200
Of course that looks wrong to, right?

618
00:31:33,200 --> 00:31:34,200
That's not enough kerning.

619
00:31:35,400 --> 00:31:38,800
Okay, so something else is wrong, which is good, because if something

620
00:31:38,800 --> 00:31:43,300
else is wrong, then I don't have to quite worried about why I was

621
00:31:43,300 --> 00:31:45,900
being so confused by that particular thing.

622
00:31:46,700 --> 00:31:48,600
All right, so that's good.

623
00:31:49,100 --> 00:31:50,800
No, no real worries there.

624
00:31:50,800 --> 00:31:56,200
Because like I said, at the end of the day, I'm totally happy with

625
00:31:57,000 --> 00:31:59,700
with having to investigate that a little further since I would rather,

626
00:31:59,700 --> 00:32:02,700
they're just be some other bug in the code than then that part.

627
00:32:03,700 --> 00:32:05,500
So let's take a look at the horizontal advance.

628
00:32:07,500 --> 00:32:07,900
Okay.

629
00:32:09,700 --> 00:32:12,300
So normally, well there's our problem right there.

630
00:32:13,200 --> 00:32:18,500
So the ABC a is now no longer something, we actually want to include

631
00:32:18,700 --> 00:32:23,400
right because we're pulling it out in here, right?

632
00:32:23,700 --> 00:32:26,500
So really what we want to initialize this table too.

633
00:32:29,300 --> 00:32:35,200
Is just the be within the sea with right because we don't the a with

634
00:32:35,200 --> 00:32:39,900
is now getting sort of sucked out in the in the other step.

635
00:32:41,000 --> 00:32:42,900
So that that makes a lot more sense.

636
00:32:44,200 --> 00:32:45,700
That makes a lot more sense.

637
00:32:46,700 --> 00:32:49,100
Okay, so let's see here.

638
00:32:49,200 --> 00:32:50,600
Did I actually run that?

639
00:32:54,500 --> 00:32:59,800
This is the problem with not having the asset builds be.

640
00:33:00,000 --> 00:33:01,600
Medically updating something.

641
00:33:01,600 --> 00:33:03,300
We might want to think about doing eventually.

642
00:33:03,300 --> 00:33:06,400
Although since I will do the most good thing so that still seems a

643
00:33:06,400 --> 00:33:08,800
little wrong to me, right like that.

644
00:33:08,800 --> 00:33:12,400
And and stuff, is there still not enough space in here, right?

645
00:33:12,400 --> 00:33:16,400
You can see, you can see that that's much more Airy.

646
00:33:17,000 --> 00:33:20,000
So we're definitely still occurring in properly compared to the

647
00:33:20,000 --> 00:33:20,600
reference.

648
00:33:21,200 --> 00:33:23,100
It's pretty good, like that.

649
00:33:23,100 --> 00:33:26,800
All looks pretty good until you get to that a right.

650
00:33:26,800 --> 00:33:29,600
Which happens to be one that has a little bit of that spacing there,

651
00:33:29,600 --> 00:33:29,800
right?

652
00:33:30,000 --> 00:33:30,100
Right.

653
00:33:30,200 --> 00:33:33,800
So we're clearly still interpreting that a little bit incorrectly and

654
00:33:33,800 --> 00:33:36,400
so we've still got a little ways to go.

655
00:33:36,400 --> 00:33:41,000
So let's press through it, just a little bit more and see if we can't

656
00:33:41,000 --> 00:33:42,500
nail that down a little bit further.

657
00:33:45,800 --> 00:33:48,400
So what I, you know what, I might suggest as well?

658
00:33:48,600 --> 00:33:50,500
I might suggest that we just say

659
00:33:52,800 --> 00:33:56,700
You know, the heck with with the ABC widths at all.

660
00:33:59,600 --> 00:34:01,500
we could just use the sea with,

661
00:34:02,600 --> 00:34:05,900
And the see what would be the only thing really, right?

662
00:34:06,300 --> 00:34:10,900
And the be with we compute from the actual width of the character

663
00:34:10,900 --> 00:34:12,300
itself, right?

664
00:34:12,400 --> 00:34:15,500
Like I could say, now that we're building the kerning table this way,

665
00:34:16,000 --> 00:34:21,699
I could just say, alright, let's go ahead and take that that align

666
00:34:21,699 --> 00:34:26,500
percentage stuff and I'll be like a up the the Korean Tech change

667
00:34:26,500 --> 00:34:27,300
calculation here.

668
00:34:28,000 --> 00:34:32,300
What we could do is actually subtract the max X from the priest.

669
00:34:33,600 --> 00:34:34,100
Right.

670
00:34:34,800 --> 00:34:39,900
And that would be how far you move something like that, right?

671
00:34:44,400 --> 00:34:45,000
Something like this.

672
00:34:45,000 --> 00:34:49,400
Even just the width, the total width, so you Advanced by the total

673
00:34:49,400 --> 00:34:51,500
width and then we only use the sea with

674
00:34:52,800 --> 00:34:53,500
You know I'm saying?

675
00:34:55,800 --> 00:34:58,800
I don't know how I feel about that but that may be a little bit better

676
00:34:59,400 --> 00:35:00,900
than what Windows was giving us.

677
00:35:01,600 --> 00:35:05,000
We already know Windows, kerning is not fabulous so I'm not that

678
00:35:05,000 --> 00:35:06,100
concerned with reproducing.

679
00:35:06,100 --> 00:35:06,400
It

680
00:35:09,900 --> 00:35:11,100
So that's kind of interesting.

681
00:35:13,700 --> 00:35:14,800
That to me.

682
00:35:15,900 --> 00:35:20,300
Is super weird because that means that that see with is actually

683
00:35:20,300 --> 00:35:25,600
doesn't is actually not much compared to what's actually in the glyph.

684
00:35:27,300 --> 00:35:29,300
So weird the way Windows works.

685
00:35:30,800 --> 00:35:36,800
right, like, look at how much extra space is actually, in the B, width

686
00:35:37,000 --> 00:35:40,000
of this thing, not to mention the sea with

687
00:35:42,100 --> 00:35:43,000
That's so weird.

688
00:35:44,500 --> 00:35:49,000
All right, I think we've got another bug in here though anyway because

689
00:35:49,000 --> 00:35:50,600
some of that doesn't quite line up.

690
00:35:51,000 --> 00:35:56,000
So I'm going to go back a little bit here and just say, alright let's

691
00:35:56,000 --> 00:35:59,800
let's go back to saying we're just going to check out the Min X.

692
00:36:00,000 --> 00:36:00,500
Three step.

693
00:36:00,500 --> 00:36:01,800
So how far we have to go there?

694
00:36:01,900 --> 00:36:04,500
That's going to be part of our kerning change, right?

695
00:36:05,600 --> 00:36:07,500
And then in handmade art, right?

696
00:36:07,500 --> 00:36:11,200
In the the part of the asset Builder where we do those ABC with

697
00:36:13,500 --> 00:36:16,900
I'm going to take a look if we've got the, the

698
00:36:18,500 --> 00:36:21,500
So, that's back to having to be with them to see what, right?

699
00:36:23,600 --> 00:36:26,500
Hmm, hmm.

700
00:36:30,900 --> 00:36:32,200
What's the smartest thing to do here?

701
00:36:32,200 --> 00:36:34,800
See, the problem is Windows doesn't actually let us do the thing we

702
00:36:34,800 --> 00:36:37,200
want which is just no where the left Edge actually is.

703
00:36:38,400 --> 00:36:39,100
And so,

704
00:36:41,200 --> 00:36:43,900
I'm just trying to think of the best way to still use their their

705
00:36:43,900 --> 00:36:44,900
kerning information.

706
00:36:47,800 --> 00:36:49,300
Well, not having that be a problem.

707
00:36:54,400 --> 00:36:55,400
How about this?

708
00:36:56,200 --> 00:36:56,700
How about we?

709
00:36:56,700 --> 00:36:58,300
Look at them all at the same time.

710
00:37:00,600 --> 00:37:06,600
Okay, let's suppose we look at them all at the same time and consider

711
00:37:06,600 --> 00:37:08,000
them a little more carefully.

712
00:37:09,000 --> 00:37:14,500
So instead of doing this stuff right in there will never, we won't

713
00:37:14,500 --> 00:37:15,600
actually do any of this.

714
00:37:16,200 --> 00:37:19,800
What we'll do instead is, we'll just zero this array.

715
00:37:21,200 --> 00:37:24,300
So the horizontal array will start out completely zero.

716
00:37:25,500 --> 00:37:26,300
so,

717
00:37:29,300 --> 00:37:29,900
This.

718
00:37:37,500 --> 00:37:38,400
We'll just be cleared.

719
00:37:39,500 --> 00:37:47,500
Then we go in and we set all of the ones that we know about to

720
00:37:47,500 --> 00:37:49,900
whatever their current amount is and we can still leave it as a plus I

721
00:37:49,900 --> 00:37:51,300
suppose if you want to, that's fine.

722
00:37:52,500 --> 00:37:55,900
Then here is where we will actually do the kerning change.

723
00:37:57,300 --> 00:37:58,400
For our code points.

724
00:37:59,700 --> 00:38:00,300
Right.

725
00:38:01,300 --> 00:38:06,800
And in here we will use the ABC widths and be able to have all of the

726
00:38:06,800 --> 00:38:10,000
information in one place so we can sort of look at all of the data and

727
00:38:10,000 --> 00:38:13,400
see if we can come up with a reasonable algorithm for figuring

728
00:38:13,400 --> 00:38:15,300
something out, right?

729
00:38:16,700 --> 00:38:21,400
So, for example, we can look at the difference between the ABC with

730
00:38:21,500 --> 00:38:23,900
and this actual pre step, right?

731
00:38:30,900 --> 00:38:31,900
Which would be different.

732
00:38:36,900 --> 00:38:41,400
I think if we line this guy up, I'm trying to think of why this

733
00:38:41,400 --> 00:38:41,900
wouldn't work.

734
00:38:41,900 --> 00:38:42,500
Exactly.

735
00:38:42,700 --> 00:38:44,600
If we're lot aligning, this totally properly.

736
00:38:44,600 --> 00:38:46,200
Now, which I believe we are.

737
00:38:46,600 --> 00:38:50,800
I wonder why it doesn't work to just use the ABC with sums.

738
00:38:50,800 --> 00:38:53,300
Exactly like we did originally.

739
00:38:54,500 --> 00:38:55,600
And then stop doing.

740
00:38:55,800 --> 00:38:57,000
I don't remember why.

741
00:38:57,200 --> 00:38:59,400
So I'm just going to go ahead and put that in here.

742
00:39:00,000 --> 00:39:03,400
Because I don't remember why that was like, if we just do this, why

743
00:39:03,400 --> 00:39:06,300
did that not work for our kerning value, right?

744
00:39:12,000 --> 00:39:16,600
I suppose it probably didn't work because we are not including the

745
00:39:16,600 --> 00:39:17,300
empty space.

746
00:39:17,300 --> 00:39:20,300
That's actually the puts that that's be with should have done that.

747
00:39:22,400 --> 00:39:25,100
Kind of confused, kind of a little bit confused.

748
00:39:26,000 --> 00:39:28,100
So let's see, I just want to see what this does.

749
00:39:33,200 --> 00:39:35,500
Yes, we're still getting really weird results from that.

750
00:39:38,300 --> 00:39:38,800
Right.

751
00:39:39,200 --> 00:39:41,100
I feel like I've got some kind of weird bug.

752
00:39:41,300 --> 00:39:43,900
I think I've got some kind of weird bug because we should not be able

753
00:39:43,900 --> 00:39:44,900
to be getting those results.

754
00:39:44,900 --> 00:39:49,200
This way, it doesn't it doesn't it doesn't have something doesn't add

755
00:39:49,200 --> 00:39:50,500
up right?

756
00:39:51,400 --> 00:39:55,800
Hopefully you agree with me that something's weird some things, a

757
00:39:55,800 --> 00:39:58,100
little weird so

758
00:40:02,200 --> 00:40:03,800
But the question is, what is it?

759
00:40:14,100 --> 00:40:14,600
Hmm.

760
00:40:18,100 --> 00:40:19,500
So let's start with something simple.

761
00:40:20,200 --> 00:40:21,700
That's not update the kerning at all.

762
00:40:23,100 --> 00:40:26,200
We should just get all of our fonts smush together, right?

763
00:40:29,700 --> 00:40:30,300
Perfect.

764
00:40:31,000 --> 00:40:32,100
That's what we expected.

765
00:40:32,500 --> 00:40:33,300
That's what we got.

766
00:40:33,600 --> 00:40:36,900
So we know we are actually updating the crane tables.

767
00:40:37,500 --> 00:40:38,300
That's good.

768
00:40:38,800 --> 00:40:44,000
It's at least something but why we're getting such small amounts of

769
00:40:44,000 --> 00:40:48,400
distance from the ABC with I don't understand.

770
00:40:49,200 --> 00:40:55,100
And so I wonder if there's something about the ABC with that I'm

771
00:40:55,400 --> 00:40:56,700
interpreting like wrong.

772
00:40:58,000 --> 00:41:00,900
Because that should be the total amount of advancement, right?

773
00:41:02,700 --> 00:41:03,800
But maybe not.

774
00:41:05,400 --> 00:41:08,800
I mean, maybe that's not the actual value that we should be using.

775
00:41:11,400 --> 00:41:13,100
Is there a thing that's like,

776
00:41:14,900 --> 00:41:16,900
It says what the kerning pairs should be.

777
00:41:17,900 --> 00:41:18,700
Relative to.

778
00:41:25,800 --> 00:41:28,900
Because it doesn't say, of course in classical documentation fashion,

779
00:41:28,900 --> 00:41:30,800
they leave out the one piece of information.

780
00:41:30,800 --> 00:41:34,100
You actually wouldn't have been able to guess from just looking at

781
00:41:34,100 --> 00:41:38,300
this which is what I current amount is relative to right.

782
00:41:40,100 --> 00:41:42,800
Which is a little unfortunate to say the least but

783
00:41:45,400 --> 00:41:46,400
Let's see if it's in here.

784
00:41:48,300 --> 00:41:50,700
Let's see, it takes a string.

785
00:41:50,700 --> 00:41:53,800
Portable truetype metrics, this sort of thing, maybe.

786
00:41:58,300 --> 00:41:59,800
Do we have any additional info?

787
00:42:05,700 --> 00:42:08,800
Retrieval design metrics placement occurs on a line.

788
00:42:11,700 --> 00:42:12,700
Font embedding.

789
00:42:14,500 --> 00:42:17,100
So we only and I thought this one said, it didn't work with your type.

790
00:42:18,200 --> 00:42:19,400
Or something like that, right?

791
00:42:21,200 --> 00:42:26,300
Cannot be used on truetype fonts, you have to use care, get care ABC,

792
00:42:26,300 --> 00:42:28,000
which is what we were using, right?

793
00:42:29,900 --> 00:42:30,600
What does this do?

794
00:42:35,100 --> 00:42:36,700
Hello, thank you.

795
00:42:38,500 --> 00:42:40,200
It's probably his recent right.

796
00:42:40,300 --> 00:42:41,500
Oh no, it's pretty old actually.

797
00:42:42,600 --> 00:42:46,700
Let's see who Point character so it gives us the exact same stuff.

798
00:42:49,600 --> 00:42:53,700
It actually gives, I guess long pointer to an ABC float.

799
00:42:53,900 --> 00:42:55,000
Why is it a pointer?

800
00:42:55,900 --> 00:42:56,900
So, it's an array.

801
00:42:56,900 --> 00:42:57,700
So, it's okay.

802
00:42:57,700 --> 00:43:00,100
I see you're getting them all out the same way we were doing before.

803
00:43:00,600 --> 00:43:03,900
So, ABC float, presumably is exact same data, just for floating point,

804
00:43:03,900 --> 00:43:04,900
which is fine.

805
00:43:05,000 --> 00:43:08,000
We could get that which would be more accurate since we are stowing

806
00:43:08,000 --> 00:43:10,200
for storing floats, in case it wants to do it that way.

807
00:43:11,300 --> 00:43:13,900
But I don't know that that has anything to do with our particular

808
00:43:13,900 --> 00:43:15,200
problem, right?

809
00:43:15,500 --> 00:43:17,000
It seems like it's

810
00:43:20,100 --> 00:43:22,200
But, at least here, it says, the character increment.

811
00:43:22,200 --> 00:43:25,300
Total width of a character is the sum of the, a b and c spaces.

812
00:43:25,900 --> 00:43:27,500
And so I feel like that

813
00:43:30,900 --> 00:43:32,000
That should be it.

814
00:43:34,300 --> 00:43:36,900
Well, okay, let's think about this a little bit more.

815
00:43:39,900 --> 00:43:40,400
Here we go.

816
00:43:42,800 --> 00:43:46,700
So, assuming we wanted to reverse engineer this as much as possible.

817
00:43:47,800 --> 00:43:49,500
Here is a letter.

818
00:43:51,100 --> 00:43:53,500
And I'm using the uppercase a because that's the one that happens to

819
00:43:53,500 --> 00:43:54,500
be Troublesome, right?

820
00:43:56,100 --> 00:43:57,500
We asked to draw it here.

821
00:44:00,900 --> 00:44:03,900
And we know that it actually drew it like back here.

822
00:44:06,600 --> 00:44:10,100
Now what I don't know is what Windows actually does.

823
00:44:10,600 --> 00:44:12,400
How does it determine this part?

824
00:44:12,500 --> 00:44:17,100
I know that it picks some value here, right?

825
00:44:17,100 --> 00:44:20,900
Which we thought was ABC widths plus each other, right?

826
00:44:21,600 --> 00:44:27,900
And then this location, it will then apply the kerning amount, right?

827
00:44:29,000 --> 00:44:33,800
This is Ike earn to move backwards, and that's fine.

828
00:44:35,300 --> 00:44:36,000
however,

829
00:44:37,000 --> 00:44:42,100
What we don't really get is exactly how we should interpret these

830
00:44:42,100 --> 00:44:43,800
interpret.

831
00:44:43,800 --> 00:44:45,300
This part of the motion, right?

832
00:44:45,300 --> 00:44:47,700
If this was the location, we asked it to draw.

833
00:44:47,700 --> 00:44:52,000
Presumably the next location, is whatever that location is plus the

834
00:44:52,000 --> 00:44:52,500
ABC.

835
00:44:52,500 --> 00:44:56,900
With now we're actually drawing the character flush with that thing,

836
00:44:56,900 --> 00:44:59,800
which means that before we draw the character, we

837
00:45:00,000 --> 00:45:03,600
Need to move it back now, normally, we're just going to add that into

838
00:45:03,600 --> 00:45:08,400
the kerning oh, but it's the curtain for the next character.

839
00:45:11,500 --> 00:45:12,500
You see how that goes?

840
00:45:13,800 --> 00:45:17,600
If we want all of our characters to be able to be flush aligned

841
00:45:18,800 --> 00:45:22,000
Then we need to put the a with part of the thing.

842
00:45:22,000 --> 00:45:23,000
The pre step.

843
00:45:23,400 --> 00:45:27,900
We need that to actually be in the next, the next guy.

844
00:45:34,000 --> 00:45:34,800
That's not that hard.

845
00:45:34,800 --> 00:45:37,000
The problem is Windows, doesn't really give us.

846
00:45:37,400 --> 00:45:40,400
I think the information we actually need for this because of how it's

847
00:45:40,600 --> 00:45:42,000
sort of breaking things up.

848
00:45:42,000 --> 00:45:45,000
Those ABC was aren't really what I think they really are supposed to

849
00:45:45,000 --> 00:45:47,900
be, but yeah, man.

850
00:45:49,400 --> 00:45:53,500
Anyway, so when we do this kerning change, it's actually the other

851
00:45:53,500 --> 00:45:55,600
side that gets changed, right?

852
00:45:55,600 --> 00:46:01,400
It's actually other code Point index Plus Code point.

853
00:46:01,500 --> 00:46:05,300
It's this part right here that actually gets moved by this

854
00:46:06,900 --> 00:46:07,400
Right.

855
00:46:07,900 --> 00:46:08,900
It's this part.

856
00:46:14,000 --> 00:46:15,100
If that makes any sense.

857
00:46:16,100 --> 00:46:22,500
And so the actual this the the part that's the part to move after this

858
00:46:22,500 --> 00:46:27,400
particular guy would presumably just be this if windows isn't lying to

859
00:46:27,400 --> 00:46:30,700
us which it you know, probably is right?

860
00:46:30,700 --> 00:46:32,600
So that care advance.

861
00:46:35,300 --> 00:46:39,100
Because the character advancement is the B and C that a part, the

862
00:46:39,100 --> 00:46:42,400
blank space since we're sucking, the character over to align with the

863
00:46:42,400 --> 00:46:46,500
left side, that actually becomes kerning, that happens when it's the

864
00:46:46,500 --> 00:46:47,900
character being drawn.

865
00:46:47,900 --> 00:46:50,300
Not when it's the character that was already drawn.

866
00:46:51,400 --> 00:46:52,100
That makes sense.

867
00:46:53,200 --> 00:46:54,400
So that's a little more correct.

868
00:46:54,400 --> 00:46:59,800
But it's still because of the fact that I don't think a those ABC

869
00:46:59,800 --> 00:47:02,700
which are actually correctly set in Windows.

870
00:47:03,400 --> 00:47:07,200
I'm a little apprehensive about it but point being, I think that's

871
00:47:07,200 --> 00:47:08,400
closer to correct now.

872
00:47:10,000 --> 00:47:10,500
Okay,

873
00:47:12,900 --> 00:47:18,500
All right, so now moving back a step.

874
00:47:19,800 --> 00:47:23,600
Now if we take a look at that, kerning that kerning is pretty spot-on.

875
00:47:23,600 --> 00:47:28,500
Now I would say there's still a little bit of nastiness like that's a

876
00:47:28,500 --> 00:47:30,600
little bit more space, I think.

877
00:47:31,100 --> 00:47:35,500
But on the whole, it's pretty darn close and I think I don't know like

878
00:47:35,500 --> 00:47:37,600
I said, if we can get it, quite exactly right.

879
00:47:37,800 --> 00:47:40,500
And the reason for that is because I don't know if we have those ABC

880
00:47:40,500 --> 00:47:41,900
with reported properly,

881
00:47:44,100 --> 00:47:45,200
I have to think about that.

882
00:47:45,700 --> 00:47:47,500
What we might do, you know what we might do?

883
00:47:47,800 --> 00:47:48,800
There actually is a one way.

884
00:47:48,800 --> 00:47:52,000
We could probably do that the amount that we're going to do the

885
00:47:52,000 --> 00:47:52,800
adjustment.

886
00:47:52,900 --> 00:47:54,200
Maybe we do it this way.

887
00:47:54,400 --> 00:47:57,700
We say, okay, we've got this is what the total amount Windows would

888
00:47:57,700 --> 00:47:59,400
have updated by right.

889
00:48:00,000 --> 00:48:06,100
So we're going to use that - however much for that that little kerning

890
00:48:06,100 --> 00:48:08,600
change was there right - ever much.

891
00:48:08,600 --> 00:48:10,700
We're saying happens after the fact,

892
00:48:13,900 --> 00:48:14,400
All right.

893
00:48:21,300 --> 00:48:24,600
So, I don't think that really helped though.

894
00:48:29,400 --> 00:48:31,600
Very, very close throughout.

895
00:48:33,000 --> 00:48:35,100
In fact the our is are much closer now.

896
00:48:35,800 --> 00:48:41,600
This is still ours, looks better than theirs does oddly enough but

897
00:48:41,600 --> 00:48:44,100
it's obviously not correct.

898
00:48:44,100 --> 00:48:47,400
In fact, ours looks better almost everywhere except maybe the DP and

899
00:48:47,400 --> 00:48:47,900
the D.

900
00:48:50,300 --> 00:48:51,500
But that doesn't look too good.

901
00:48:51,600 --> 00:48:52,500
That's all messed up.

902
00:48:53,100 --> 00:48:53,600
Hmm.

903
00:48:54,300 --> 00:48:54,900
All right.

904
00:48:57,400 --> 00:49:00,300
Sometimes gets better sometimes gets worse.

905
00:49:01,000 --> 00:49:01,300
Oh!

906
00:49:02,700 --> 00:49:03,200
Typo.

907
00:49:04,800 --> 00:49:06,100
That's not a fair test.

908
00:49:07,600 --> 00:49:08,700
Let's try one more time.

909
00:49:13,300 --> 00:49:14,600
Yeah.

910
00:49:15,200 --> 00:49:15,700
Well

911
00:49:17,300 --> 00:49:20,500
Better don't know if it's low if it's if it's quite right yet.

912
00:49:25,400 --> 00:49:27,100
Yeah, still still.

913
00:49:27,100 --> 00:49:31,300
We've got a little more tightness in some of these than they do, you

914
00:49:31,300 --> 00:49:32,800
know, just looking at it.

915
00:49:36,500 --> 00:49:37,700
So yeah, I don't know.

916
00:49:38,800 --> 00:49:40,500
But anyway, right.

917
00:49:42,900 --> 00:49:47,200
We need to do one more thing, obviously, which is that, hey, we don't

918
00:49:47,200 --> 00:49:49,900
actually want to change the kerning.

919
00:49:49,900 --> 00:49:54,100
The critic should always be zero if the first code point was zero.

920
00:49:54,800 --> 00:49:59,000
So assuming that we're coming through here and doing a code point zero

921
00:49:59,000 --> 00:50:01,800
as the first character, we don't want to do this creating change.

922
00:50:02,200 --> 00:50:03,500
So we only want to do this.

923
00:50:03,500 --> 00:50:05,200
If code point is not equal to 0.

924
00:50:08,000 --> 00:50:12,500
Because otherwise we ruined, that's why you know our alignment here is

925
00:50:12,500 --> 00:50:13,500
now wrong again, right?

926
00:50:13,500 --> 00:50:15,700
Because it's going to add that number in.

927
00:50:16,500 --> 00:50:21,300
So assuming we take care of that then we should be good to go.

928
00:50:23,500 --> 00:50:24,400
Or not.

929
00:50:25,100 --> 00:50:25,900
I do that wrong.

930
00:50:28,600 --> 00:50:29,400
I did that wrong.

931
00:50:29,500 --> 00:50:31,400
Yeah, it's when other code point is zero.

932
00:50:31,400 --> 00:50:31,800
Sorry.

933
00:50:36,200 --> 00:50:39,200
So we don't want to add that that slight increment, right?

934
00:50:39,700 --> 00:50:42,100
See other code Point index.

935
00:50:46,200 --> 00:50:46,800
And there we go.

936
00:50:50,100 --> 00:50:51,700
So now that's lined up flush.

937
00:50:52,000 --> 00:50:54,400
And that's good Arc, earnings?

938
00:50:54,400 --> 00:50:56,200
Mostly matching Windows.

939
00:50:56,200 --> 00:50:57,300
Although it's again.

940
00:50:57,500 --> 00:50:59,200
I don't know if we can ever get exactly right.

941
00:50:59,200 --> 00:50:59,800
I have to think

942
00:51:00,400 --> 00:51:02,000
About if it's possible to get it.

943
00:51:02,000 --> 00:51:06,800
Exactly right when we don't know, we don't know how much the ABC with

944
00:51:08,300 --> 00:51:11,700
Correspond to how it decided to line that stuff up.

945
00:51:12,000 --> 00:51:17,300
It's really kind of maddening, but yeah, but that's pretty darn good.

946
00:51:18,300 --> 00:51:21,900
I think we're now at least accounting for most of the things that we

947
00:51:21,900 --> 00:51:23,600
should be and that's a good thing.

948
00:51:24,700 --> 00:51:25,300
So yeah.

949
00:51:26,500 --> 00:51:28,400
Yeah, I'm relatively happy with that.

950
00:51:28,800 --> 00:51:29,900
I'm pretty happy with that.

951
00:51:31,200 --> 00:51:36,700
So let's go ahead and think a little bit harder perhaps about doing

952
00:51:37,400 --> 00:51:38,600
like another language.

953
00:51:39,000 --> 00:51:39,300
Right.

954
00:51:39,300 --> 00:51:41,300
Let's think about that because there's some stuff that I would like to

955
00:51:41,300 --> 00:51:42,500
fix that.

956
00:51:42,500 --> 00:51:45,500
I think we want to do in order to support other languages.

957
00:51:45,500 --> 00:51:46,400
So you know, like

958
00:51:49,300 --> 00:51:50,100
Actually no.

959
00:51:51,400 --> 00:51:52,700
Does this thing have ime?

960
00:51:52,700 --> 00:51:54,300
Just we have ime support.

961
00:51:54,300 --> 00:51:57,200
Probably don't, but that's actually.

962
00:51:57,200 --> 00:52:01,300
Okay, here we go.

963
00:52:08,100 --> 00:52:11,900
So if we were to grab some of these guys in here, right?

964
00:52:14,300 --> 00:52:16,500
So Jimmy.

965
00:52:18,500 --> 00:52:21,700
So what we would like to do, right?

966
00:52:22,200 --> 00:52:24,700
Is we'd like to make it possible somehow.

967
00:52:25,600 --> 00:52:30,500
For other people who you know native language is not representable in

968
00:52:30,500 --> 00:52:36,400
Roman alphabets, to be able to translate potentially if they'd like to

969
00:52:36,800 --> 00:52:38,800
the words and handmade hero.

970
00:52:38,800 --> 00:52:42,300
Like like I said, they'll probably be like item names I'm guessing and

971
00:52:42,300 --> 00:52:43,100
stuff like that.

972
00:52:43,300 --> 00:52:45,100
I don't know how much text will have in the game.

973
00:52:45,100 --> 00:52:47,900
I don't know if we'll have that much text, but at the very least,

974
00:52:48,000 --> 00:52:50,300
Have we know, we will have some I think.

975
00:52:50,600 --> 00:52:53,800
And so as a result we know that there will be things that could be

976
00:52:53,800 --> 00:52:55,500
translated into other languages.

977
00:52:56,300 --> 00:52:58,200
So if we have things that can be transmitted to the language is what

978
00:52:58,200 --> 00:53:00,800
we'd like to do is be able to support other character sets.

979
00:53:01,100 --> 00:53:05,400
And, you know, if we think about what this character actually is, let

980
00:53:05,400 --> 00:53:07,100
me see if I can actually do a search.

981
00:53:13,200 --> 00:53:13,700
Right?

982
00:53:14,500 --> 00:53:18,200
So if we look at what this actually is, that's that value hex.

983
00:53:18,600 --> 00:53:20,700
Right for EAC.

984
00:53:21,200 --> 00:53:24,400
Now, for EAC is going to be real high, right?

985
00:53:24,400 --> 00:53:28,600
If I if I was to go into Dev Studio here,

986
00:53:35,500 --> 00:53:36,500
That's what good point.

987
00:53:36,500 --> 00:53:39,500
That is 20,000 140.

988
00:53:40,400 --> 00:53:43,700
Now, if you remember how we implemented our kerning and stuff like

989
00:53:43,700 --> 00:53:46,900
that, I just did it as a flat or a lookup, which I think is better,

990
00:53:46,900 --> 00:53:48,400
because then it's just instant, right?

991
00:53:48,600 --> 00:53:51,900
And when you only have something like 60 characters, or 120 characters

992
00:53:51,900 --> 00:53:54,400
or even 250 characters, right?

993
00:53:54,700 --> 00:53:57,000
That's not a very big table, hmm.

994
00:53:58,800 --> 00:53:59,800
It's going to be something like 200.

995
00:54:00,000 --> 00:54:02,300
Okay, even if you do mess floats.

996
00:54:03,200 --> 00:54:06,600
But if we had to have a 20,000

997
00:54:07,800 --> 00:54:10,800
by 20,000 table, right?

998
00:54:11,000 --> 00:54:15,300
Suddenly, that is not such a good size for a lookup table, right?

999
00:54:15,300 --> 00:54:18,900
If you want to know how many actual MB that is right,

1000
00:54:20,500 --> 00:54:24,400
It's 1.5 GB for the kerning table.

1001
00:54:25,300 --> 00:54:27,100
Not a very good idea, right?

1002
00:54:27,800 --> 00:54:31,800
So, you know, in handmade hero I'm assuming that like maybe there

1003
00:54:31,800 --> 00:54:38,700
would be something like, you know, a thousand maybe characters for

1004
00:54:38,800 --> 00:54:43,200
doing a Japanese translation, for example, maybe less maybe we'd only

1005
00:54:43,200 --> 00:54:48,900
be seven hundred or something, but point being 1.9 Meg's is a much

1006
00:54:48,900 --> 00:54:50,100
more manageable number for a look.

1007
00:54:50,300 --> 00:54:52,400
Table for kerning right?

1008
00:54:52,600 --> 00:54:56,400
And we can further compress that down by just using it B, because we

1009
00:54:56,400 --> 00:54:57,800
don't really need to throw them as that.

1010
00:54:57,800 --> 00:55:01,200
And then it comes down to about a half Meg for current information,

1011
00:55:01,200 --> 00:55:03,700
even if we were to have 700 characters, right?

1012
00:55:04,600 --> 00:55:07,000
And so, the point that I'm getting at and I see that we're coming to

1013
00:55:07,000 --> 00:55:07,800
the Q&A now.

1014
00:55:07,800 --> 00:55:11,000
So that means I should probably stop talking but we'll pick this up

1015
00:55:11,000 --> 00:55:11,500
tomorrow.

1016
00:55:12,900 --> 00:55:17,000
What I would like to do is find a way to compress font ranges down so

1017
00:55:17,000 --> 00:55:21,800
that we don't have a bunch of situations where Jimmy

1018
00:55:23,200 --> 00:55:27,100
So we don't have a bunch of situations where we are constantly having

1019
00:55:27,100 --> 00:55:29,000
to deal with a very expansive.

1020
00:55:29,000 --> 00:55:31,700
This sets just because we're trying to store.

1021
00:55:31,700 --> 00:55:35,700
Hi code Point values even though the total number of code points in

1022
00:55:35,700 --> 00:55:37,900
any given font pack might be very low.

1023
00:55:40,500 --> 00:55:41,700
So, that's what I'd like to do.

1024
00:55:42,500 --> 00:55:45,100
And we can take a look at some things about how we might do that

1025
00:55:45,100 --> 00:55:45,900
tomorrow for.

1026
00:55:45,900 --> 00:55:46,900
Now, let's go to the Q&A.

1027
00:55:47,700 --> 00:55:48,300
I really need.

1028
00:55:48,300 --> 00:55:49,000
Remember my drink.

1029
00:55:49,000 --> 00:55:52,600
I've got my drink today and now my throat sauce, or let's go ahead and

1030
00:55:52,600 --> 00:55:53,000
the Q&A.

1031
00:55:53,000 --> 00:55:55,000
I will be happy to take any questions that you might have.

1032
00:55:55,400 --> 00:55:57,500
Please prefix them with q:.

1033
00:55:58,900 --> 00:55:59,600
So I can see them.

1034
00:56:45,700 --> 00:56:46,500
No questions.

1035
00:57:01,800 --> 00:57:03,200
Midlow, the War.

1036
00:57:03,200 --> 00:57:05,800
I see the kerning and notepad compared to her as the more awful it

1037
00:57:05,800 --> 00:57:06,400
looks to me.

1038
00:57:07,700 --> 00:57:12,900
So yeah, I mean really are kerning is awful to it's just it's the

1039
00:57:12,900 --> 00:57:13,600
font.

1040
00:57:16,600 --> 00:57:19,500
Kerning is a big sore subject with me.

1041
00:57:20,500 --> 00:57:21,700
Nobody Does it right?

1042
00:57:22,500 --> 00:57:23,900
And its really annoying.

1043
00:57:25,000 --> 00:57:25,800
Pseudonym 73.

1044
00:57:25,800 --> 00:57:28,100
I realize that this is Uncharted Territory, but it seems to me that

1045
00:57:28,100 --> 00:57:30,300
font rendering is taking more time than the rest of the render.

1046
00:57:30,300 --> 00:57:31,200
Is that normal?

1047
00:57:33,100 --> 00:57:39,100
That's, that's, I don't think True by any stretch of the imagination.

1048
00:57:39,200 --> 00:57:42,000
I think, we've only spent like four or five days on how long have you

1049
00:57:42,000 --> 00:57:42,900
spent on fonts?

1050
00:57:50,700 --> 00:57:51,900
Let's see.

1051
00:57:54,900 --> 00:57:57,300
One, two, three.

1052
00:57:58,600 --> 00:57:59,800
These were not that.

1053
00:58:01,100 --> 00:58:01,800
4.

1054
00:58:01,800 --> 00:58:02,600
5.

1055
00:58:03,600 --> 00:58:04,400
6 7.

1056
00:58:06,300 --> 00:58:06,700
Wait.

1057
00:58:07,700 --> 00:58:08,600
89.

1058
00:58:08,600 --> 00:58:15,300
I lost count 1 2 3, 4 5 6.

1059
00:58:17,700 --> 00:58:18,300
78.

1060
00:58:19,400 --> 00:58:24,500
And remember, you know, it's really we did it with two different

1061
00:58:24,500 --> 00:58:26,100
things, so it's really 7 days.

1062
00:58:28,300 --> 00:58:29,000
That's nowhere.

1063
00:58:29,000 --> 00:58:30,400
Close to how long we spent on the render?

1064
00:58:30,400 --> 00:58:33,100
I think we end, we spent something like 20 days on the render, maybe

1065
00:58:33,100 --> 00:58:33,600
more.

1066
00:58:35,500 --> 00:58:38,400
I did a infographic of this a while back actually.

1067
00:58:38,700 --> 00:58:43,100
In fact, we could probably, we could probably look if

1068
00:58:45,600 --> 00:58:47,100
if it's Auntie witch,

1069
00:58:51,600 --> 00:58:54,900
We can probably look to see.

1070
00:58:59,300 --> 00:59:00,400
Highlights.

1071
00:59:02,700 --> 00:59:03,200
Right here.

1072
00:59:04,300 --> 00:59:09,500
So if we really wanted to, we could probably look and see at the graph

1073
00:59:09,500 --> 00:59:15,300
that I showed in this presentation, assuming that t, which is able to

1074
00:59:15,300 --> 00:59:17,400
actually play, which it doesn't look like it is.

1075
00:59:19,400 --> 00:59:21,200
Is there a reason I can't see anything here?

1076
00:59:24,000 --> 00:59:29,600
well in this presentation, I showed a graph of how many days we spent

1077
00:59:29,600 --> 00:59:33,700
on everything so that, you know, you can double-check that if you want

1078
00:59:33,700 --> 00:59:38,500
to see, but yeah, I think we spent quite a bit more on rendering but

1079
00:59:39,800 --> 00:59:43,300
As far as the part we're saying font rendering takes more time.

1080
00:59:43,300 --> 00:59:45,800
The rest of the renderer is actually true that fonts are fairly

1081
00:59:45,800 --> 00:59:47,000
complicated, right?

1082
00:59:47,000 --> 00:59:52,300
Because normally bitmaps have very little in the way of alignment

1083
00:59:52,300 --> 00:59:53,600
information, right?

1084
00:59:53,600 --> 00:59:59,300
Like bitmaps that for like Sprites typically have like one maybe two

1085
00:59:59,300 --> 00:59:59,800
reference points.

1086
01:00:00,000 --> 01:00:00,800
On them tops.

1087
01:00:01,100 --> 01:00:04,200
They don't have a concept of a baseline, they don't have the concept

1088
01:00:04,200 --> 01:00:07,800
of kerning, they don't have pairwise interactions, right?

1089
01:00:08,900 --> 01:00:14,800
So typically actually yes, fonts are more demanding usually on a

1090
01:00:14,800 --> 01:00:16,600
renderer than other things.

1091
01:00:17,700 --> 01:00:21,100
That's actually, that's actually is true because they have more

1092
01:00:21,100 --> 01:00:25,500
complexity than what you typically use for your regular character art.

1093
01:00:25,500 --> 01:00:28,500
For example, we are going to World art and so on.

1094
01:00:30,400 --> 01:00:32,900
D matsuki isn't Japanese evenly spaced.

1095
01:00:33,200 --> 01:00:37,200
It is unfortunately, our fonts doesn't doesn't know that.

1096
01:00:37,200 --> 01:00:40,600
I mean, we could have an exemption for Japanese and Chinese, which

1097
01:00:41,400 --> 01:00:44,700
say, hey, you only need to know about very simple spacing rules, just

1098
01:00:44,700 --> 01:00:45,600
for that language.

1099
01:00:46,700 --> 01:00:47,500
But you know,

1100
01:00:52,600 --> 01:00:54,900
I'm a queen Bray migraine.

1101
01:00:54,900 --> 01:00:56,000
Glad to at least cascoon.

1102
01:00:56,000 --> 01:00:56,800
A oh no.

1103
01:00:57,400 --> 01:00:59,400
Sorry about the migraine man.

1104
01:01:10,100 --> 01:01:14,200
Rob Robbie I was testing kerning in notepad word, wordpad, no kerning

1105
01:01:14,200 --> 01:01:14,800
there.

1106
01:01:15,400 --> 01:01:16,700
Where do you have synchronous?

1107
01:01:17,100 --> 01:01:20,500
Notepad is cast everything in Windows is uses the kerning.

1108
01:01:20,700 --> 01:01:21,800
It's built into the OS.

1109
01:01:27,100 --> 01:01:28,700
The size of don't forget the boilerplate.

1110
01:01:28,700 --> 01:01:29,900
Well, we didn't have time today though.

1111
01:01:29,900 --> 01:01:31,600
We were working on the fossil time so

1112
01:01:32,600 --> 01:01:36,800
John Carmack programmed, low-level graphics and got a Ferrari font

1113
01:01:36,900 --> 01:01:37,700
rendering guy.

1114
01:01:37,700 --> 01:01:39,000
Never got anything.

1115
01:01:39,400 --> 01:01:40,900
When are we going to go back to programming?

1116
01:01:40,900 --> 01:01:42,300
Cool Superstar things.

1117
01:01:44,300 --> 01:01:51,400
Well II, don't as someone who certainly chose to be a game programmer,

1118
01:01:52,000 --> 01:01:53,500
like John Carmack did.

1119
01:01:54,200 --> 01:01:58,600
I'm not trying to tell you that you shouldn't do it.

1120
01:01:59,300 --> 01:02:05,200
But the real answer to your question is the font rendering guy was

1121
01:02:05,200 --> 01:02:05,500
John.

1122
01:02:05,500 --> 01:02:11,300
Warnock he founded Adobe and he has so many more Ferraris than John

1123
01:02:11,300 --> 01:02:12,300
Carmack, if he wants them.

1124
01:02:12,300 --> 01:02:15,700
Like Adobe is a mini, many billion dollar company.

1125
01:02:15,700 --> 01:02:22,500
Whereas Carmack, probably sold, whatever his share of it was for, you

1126
01:02:22,500 --> 01:02:24,900
know, several million dollars or something like this, right?

1127
01:02:24,900 --> 01:02:26,300
Not billions of dollars.

1128
01:02:26,300 --> 01:02:29,300
So no, the font rendering guy pretty much crushed.

1129
01:02:29,300 --> 01:02:33,100
She's the game rendering died because business software is way more

1130
01:02:33,100 --> 01:02:37,100
profitable than game software by like one or two orders of magnitude

1131
01:02:37,100 --> 01:02:37,900
probably too.

1132
01:02:46,300 --> 01:02:51,400
Next met to I'm in my second year at Uni for programming and I am

1133
01:02:51,400 --> 01:02:54,300
still having problems getting my head around simple things.

1134
01:02:54,500 --> 01:02:57,200
My question is, how long did it take you to have a good understanding

1135
01:02:57,200 --> 01:02:58,300
of programming in general?

1136
01:02:59,500 --> 01:02:59,900
I would say,

1137
01:03:00,000 --> 01:03:03,200
Probably about ten years.

1138
01:03:04,600 --> 01:03:05,100
Or so.

1139
01:03:06,400 --> 01:03:06,900
I would say.

1140
01:03:12,000 --> 01:03:13,500
Pseudonym 73, fair enough.

1141
01:03:13,500 --> 01:03:15,800
Maybe it just seems like progress is slower for some definition of

1142
01:03:15,800 --> 01:03:16,400
progress.

1143
01:03:17,000 --> 01:03:19,800
Well, also, if you factor out how much of that time is fussing with

1144
01:03:19,800 --> 01:03:24,000
Windows, which is like a black box because remember in the renderer,

1145
01:03:24,900 --> 01:03:28,400
we were just writing our own code and that saves a lot of time.

1146
01:03:28,600 --> 01:03:31,500
So if you actually want to do the fair comparison, take the renderer

1147
01:03:31,500 --> 01:03:34,800
plus the windows platform code time, right?

1148
01:03:42,600 --> 01:03:43,300
G 7.

1149
01:03:43,300 --> 01:03:43,800
I'm confused.

1150
01:03:43,800 --> 01:03:46,600
Why the font rendering relies so much on windows isn't all this stuff

1151
01:03:46,600 --> 01:03:49,300
stored in the font files or is that harder without Windows text

1152
01:03:49,300 --> 01:03:51,400
metrics and stuff or to put it another way?

1153
01:03:51,700 --> 01:03:54,800
How would we do a be different if you're using SUV true pipe?

1154
01:03:54,900 --> 01:03:55,800
It wouldn't really.

1155
01:03:56,200 --> 01:03:59,500
Windows is just reading the truetype file and so Sean could presumably

1156
01:03:59,500 --> 01:04:02,600
give us those same things values, as you type, but the values are

1157
01:04:02,600 --> 01:04:04,900
still going to be bogus, they're not going to be left aligned

1158
01:04:04,900 --> 01:04:05,600
properly.

1159
01:04:05,700 --> 01:04:08,200
So we would still have the exact same problems we're having now, it's

1160
01:04:08,200 --> 01:04:11,000
really the true type files that are the problem if that makes sense.

1161
01:04:19,400 --> 01:04:22,200
On the msdn entry, you describe glossary ABC values.

1162
01:04:22,200 --> 01:04:24,500
Is better explained how Windows understands it?

1163
01:04:29,100 --> 01:04:32,700
Msdn you describe glossary, oops?

1164
01:04:44,300 --> 01:04:44,900
ah,

1165
01:04:49,300 --> 01:04:50,900
This is a good find my friend.

1166
01:04:54,000 --> 01:04:57,000
When two or more of those are displayed as a unit, usually only the

1167
01:04:57,000 --> 01:05:01,000
leftmost glyph contributes to the, a width of the run and only the

1168
01:05:01,000 --> 01:05:03,200
rightmost bits corners of the sea width of the Run.

1169
01:05:03,200 --> 01:05:04,700
However, this is not a strict rule.

1170
01:05:05,200 --> 01:05:08,700
If the first glyph in a run, is the narrow letter and the second good.

1171
01:05:08,700 --> 01:05:11,100
They're hella separate glyphs diacritical.

1172
01:05:11,100 --> 01:05:13,700
Mark might actually send beyond the letter.

1173
01:05:13,700 --> 01:05:14,900
Well, how do, you know?

1174
01:05:20,100 --> 01:05:23,200
Though, like how do we get the advance with?

1175
01:05:23,500 --> 01:05:24,600
That's what we want.

1176
01:05:25,700 --> 01:05:26,200
Right.

1177
01:05:29,200 --> 01:05:30,600
How do we get the advance with?

1178
01:05:42,400 --> 01:05:42,900
Great.

1179
01:05:43,400 --> 01:05:44,100
Nice job guys.

1180
01:05:44,400 --> 01:05:46,400
You couldn't come up with anything better than that for the acronym.

1181
01:05:52,900 --> 01:05:55,400
the under hang is a width of white space to the left or right of the

1182
01:05:55,400 --> 01:05:58,300
solid portion of living are supposed to the positive, a or C with as a

1183
01:05:58,300 --> 01:05:59,900
scribe for ABC with

1184
01:06:00,000 --> 01:06:00,200
Hang it.

1185
01:06:00,200 --> 01:06:02,000
Snows padding flowing it.

1186
01:06:02,200 --> 01:06:02,300
Yeah.

1187
01:06:02,300 --> 01:06:05,500
So unfortunately it doesn't really tell us how we can just get the

1188
01:06:06,200 --> 01:06:07,200
advance with

1189
01:06:09,100 --> 01:06:12,300
Windows, get Advanced width font.

1190
01:06:20,900 --> 01:06:22,300
Blah, blah, blah, blah, blah.

1191
01:06:24,500 --> 01:06:27,600
Not because you use get care with 32 except it's document is not

1192
01:06:27,600 --> 01:06:30,800
working with truetype fonts, but we'll ignore that for second which is

1193
01:06:30,800 --> 01:06:33,300
the advanced with original characters or symbols in student experience

1194
01:06:33,300 --> 01:06:35,400
with is the distance that the cursor on the video display or print

1195
01:06:35,400 --> 01:06:37,400
head of a printer must advance for bring the next character.

1196
01:06:37,700 --> 01:06:40,600
In a string of text to get care with 32 function returns, you advance

1197
01:06:40,600 --> 01:06:43,400
with as an integer value for users, you can use to get for, okay.

1198
01:06:43,500 --> 01:06:48,200
Yeah, an application can retrieve actual character with data.

1199
01:06:51,100 --> 01:06:53,500
Person-to-person opentype fonts, fine.

1200
01:06:53,500 --> 01:06:57,100
Illustration shows the three components of a character with, yes, the

1201
01:06:57,100 --> 01:06:59,600
a spacing is the with to add to the current position before place the

1202
01:06:59,600 --> 01:07:01,600
character, you know what I'm gonna ignore.

1203
01:07:02,400 --> 01:07:05,700
I'm just curious what happens if we just ignore the documentation of?

1204
01:07:05,700 --> 01:07:07,000
It's a, the documentation is wrong.

1205
01:07:07,500 --> 01:07:12,300
So instead of get care with w and adding those together, right?

1206
01:07:12,700 --> 01:07:14,200
Which by the way, I could just do out here.

1207
01:07:14,900 --> 01:07:19,500
Instead of that, I'm just going to say like what if we just said, no,

1208
01:07:19,900 --> 01:07:20,600
we're going to just

1209
01:07:20,800 --> 01:07:23,100
Out to get care with 32.

1210
01:07:23,400 --> 01:07:24,500
You say it doesn't work.

1211
01:07:24,500 --> 01:07:26,400
We're going to not listen to you and we're going to try it anyway,

1212
01:07:27,300 --> 01:07:27,800
right?

1213
01:07:29,400 --> 01:07:29,900
so,

1214
01:07:31,000 --> 01:07:31,600
here we go.

1215
01:07:34,300 --> 01:07:37,400
The HDC is the global font device context.

1216
01:07:38,200 --> 01:07:39,900
The code point is the code point.

1217
01:07:41,200 --> 01:07:42,700
Code points code point there too.

1218
01:07:43,600 --> 01:07:46,200
And we're going to take an integer, right?

1219
01:07:46,200 --> 01:07:49,700
So in this width,

1220
01:07:54,000 --> 01:07:57,100
and then we will say care Advanced close this with

1221
01:07:58,600 --> 01:08:00,700
What does just what happens if we do that?

1222
01:08:01,000 --> 01:08:01,900
What's the deal?

1223
01:08:02,900 --> 01:08:03,300
Oops.

1224
01:08:05,800 --> 01:08:07,100
Like does it do anything?

1225
01:08:08,200 --> 01:08:09,500
Does it Crash and Burn?

1226
01:08:10,200 --> 01:08:11,000
Where are we at?

1227
01:08:13,200 --> 01:08:15,900
Well that sure looked like it worked so I think that documentation is

1228
01:08:15,900 --> 01:08:20,399
just flat out wrong but that's a separate issue and let's see how that

1229
01:08:20,399 --> 01:08:21,300
kerning looks.

1230
01:08:28,800 --> 01:08:32,000
Looks roughly about the same to me.

1231
01:08:33,399 --> 01:08:35,300
Compared to where we were at before.

1232
01:08:35,899 --> 01:08:38,700
Like it still looks a little wrong in some places like that's closer

1233
01:08:38,700 --> 01:08:42,300
than that in my mind, right?

1234
01:08:43,800 --> 01:08:46,899
so close close, but no cigar

1235
01:08:48,200 --> 01:08:48,800
Right.

1236
01:08:50,500 --> 01:08:51,500
That's what I would say.

1237
01:08:57,300 --> 01:08:58,500
It's a little hard to tell.

1238
01:09:01,399 --> 01:09:03,100
Maybe that's actually exactly right now.

1239
01:09:03,100 --> 01:09:03,600
I don't know.

1240
01:09:04,100 --> 01:09:05,100
Let's say, you know what?

1241
01:09:07,600 --> 01:09:09,600
It's gonna like a vertical rule in there.

1242
01:09:23,000 --> 01:09:24,300
Maybe that's exact now.

1243
01:09:29,600 --> 01:09:30,800
It's pretty darn close.

1244
01:09:35,899 --> 01:09:37,100
That's pretty darn close.

1245
01:09:44,899 --> 01:09:46,700
I think we've I think we've got it, folks.

1246
01:09:48,500 --> 01:09:49,700
That might be a little off.

1247
01:09:53,300 --> 01:09:54,700
That looks a little off to me.

1248
01:09:56,100 --> 01:09:59,700
Yeah, it looks like there's a little bit of difference right there.

1249
01:10:03,000 --> 01:10:06,000
So still not quite right, but pretty, darn close.

1250
01:10:11,000 --> 01:10:13,100
Danny wag do you use the graphics card at all?

1251
01:10:13,100 --> 01:10:14,600
When rendering, no.

1252
01:10:14,600 --> 01:10:15,000
Currently.

1253
01:10:15,000 --> 01:10:16,700
We do all our rendering ourselves.

1254
01:10:19,200 --> 01:10:19,900
At the moment.

1255
01:10:26,900 --> 01:10:27,700
Child Z.

1256
01:10:27,700 --> 01:10:28,800
I'm sure this has been answered.

1257
01:10:28,800 --> 01:10:29,900
So feel free to narrative true.

1258
01:10:29,900 --> 01:10:32,300
What are the features of C++ that you use that?

1259
01:10:32,300 --> 01:10:33,400
Keep you from using to spend on?

1260
01:10:33,400 --> 01:10:40,000
See right now operator overloading function overloading and declare

1261
01:10:40,000 --> 01:10:40,500
anywhere.

1262
01:10:40,500 --> 01:10:42,400
If you mean plain old see, but it's like.

1263
01:10:42,400 --> 01:10:44,100
C99 has declare anywhere now.

1264
01:10:44,500 --> 01:10:46,700
So that one's like less of less of one.

1265
01:10:50,100 --> 01:10:50,800
Let's see.

1266
01:10:52,300 --> 01:10:55,600
Robbie, when you say windows uses kerning, why is every letter never

1267
01:10:55,600 --> 01:10:58,200
overlapping in the space of the following letter of the followed

1268
01:10:58,200 --> 01:10:59,600
letter in your code, I see the letters.

1269
01:10:59,600 --> 01:11:02,200
Overlapping did I understand kerning wrong?

1270
01:11:04,300 --> 01:11:09,500
Well, I'm not really sure what you mean by that, like, you can see

1271
01:11:09,500 --> 01:11:11,100
that they're doing roughly.

1272
01:11:11,100 --> 01:11:13,600
The same thing that we're doing, right?

1273
01:11:17,400 --> 01:11:18,700
That is overlapping.

1274
01:11:20,200 --> 01:11:20,800
Right.

1275
01:11:21,300 --> 01:11:23,300
Overlapping overlapping.

1276
01:11:24,300 --> 01:11:27,300
So does that does that help?

1277
01:11:36,900 --> 01:11:37,800
D mitsuki.

1278
01:11:37,800 --> 01:11:38,400
Oh yeah.

1279
01:11:38,400 --> 01:11:41,700
Well, John Carmack also got to make rocket ships so he wins.

1280
01:11:41,900 --> 01:11:42,200
Sorry.

1281
01:11:42,200 --> 01:11:47,200
He doesn't win because if you think there's something even more boring

1282
01:11:47,200 --> 01:11:52,000
than font code, well, it's going to be banking code and that would

1283
01:11:52,000 --> 01:11:53,000
have been Elon Musk.

1284
01:11:53,000 --> 01:11:57,400
And right now he actually has a functioning rocket as opposed to John

1285
01:11:57,400 --> 01:11:59,800
Carmack who does not have a functioning rocket.

1286
01:12:00,000 --> 01:12:00,300
L.

1287
01:12:04,000 --> 01:12:04,400
Cuba.

1288
01:12:04,400 --> 01:12:04,700
Cuba.

1289
01:12:04,700 --> 01:12:07,300
Caleb, are you saying Adobe has better programmers than ID?

1290
01:12:07,600 --> 01:12:11,200
No, in fact, they probably have much worse programmers in it.

1291
01:12:11,900 --> 01:12:17,600
But like I said, your Market segment games are not the highest

1292
01:12:17,600 --> 01:12:20,200
profitable market segments, not by a long shot.

1293
01:12:20,200 --> 01:12:23,600
And so, the suggestion for the of the previous questioner was that,

1294
01:12:24,100 --> 01:12:26,700
oh, programming low-level Graphics is better than programming font

1295
01:12:26,700 --> 01:12:28,600
code because you're going to get a Ferrari.

1296
01:12:28,600 --> 01:12:32,700
It's like, nope, fault code actually could make you a lot more money

1297
01:12:33,100 --> 01:12:33,600
because

1298
01:12:33,800 --> 01:12:36,500
Like, if you look at the old, 2D Graphics companies that were doing

1299
01:12:36,500 --> 01:12:39,300
stuff like document layout, that's like Adobe.

1300
01:12:39,300 --> 01:12:45,400
And they're massively more wealthy than, then, people from ID

1301
01:12:45,400 --> 01:12:48,200
software, but it's tougher.

1302
01:12:48,200 --> 01:12:49,300
I mean, who has the better programmers?

1303
01:12:49,300 --> 01:12:52,800
We did probably has the better programmers, but that's neither here

1304
01:12:52,800 --> 01:12:53,400
nor there.

1305
01:12:53,600 --> 01:12:55,800
How good of a programmer you are has very little to do with how much

1306
01:12:55,800 --> 01:12:56,500
money you make.

1307
01:13:01,600 --> 01:13:02,200
D mitsuki.

1308
01:13:02,200 --> 01:13:05,400
Why didn't we use bitmap fonts in use ttf bitmap fonts are

1309
01:13:05,400 --> 01:13:06,100
cross-platform?

1310
01:13:06,100 --> 01:13:06,800
Are they not?

1311
01:13:08,500 --> 01:13:12,000
So these are cross-platform because we just extract them once.

1312
01:13:12,500 --> 01:13:15,200
They are now bitmap fonts, right?

1313
01:13:16,000 --> 01:13:19,800
So when we run the asset Packer, we now have bitmap fonts, we turned

1314
01:13:19,800 --> 01:13:22,900
two types into bitmap fonts and the reason we don't use bitmap fonts

1315
01:13:22,900 --> 01:13:26,100
as a source is because most have bad thoughts aren't very good, right?

1316
01:13:26,100 --> 01:13:28,600
Whereas truetype fonts tend to be very good and so it's easy.

1317
01:13:28,600 --> 01:13:31,300
It's better to pull them from there and then turn them into bitmap.

1318
01:13:31,500 --> 01:13:32,900
So we can use whatever we want.

1319
01:13:36,500 --> 01:13:37,600
Game Devi.

1320
01:13:37,900 --> 01:13:41,900
When I render on a GPU is their way without copying the render result

1321
01:13:41,900 --> 01:13:43,000
back to ram.

1322
01:13:45,300 --> 01:13:49,600
When I render on a GPU, is there a way without copying the render?

1323
01:13:49,600 --> 01:13:51,700
Result back to him a ray to do what?

1324
01:13:55,100 --> 01:13:57,100
I don't know what the a way to do.

1325
01:13:57,100 --> 01:13:59,000
What without copying the result back to ram.

1326
01:14:04,400 --> 01:14:08,300
Judah 12 Japanese isn't evenly, spaced some characters, like the upper

1327
01:14:08,300 --> 01:14:10,100
and lower brackets rely on kerning.

1328
01:14:10,500 --> 01:14:15,500
Yeah, I mean and to be clear, it's not evenly spaced.

1329
01:14:15,500 --> 01:14:18,800
It's just not kerned, those are different.

1330
01:14:18,900 --> 01:14:22,700
So in Japan, Japanese, I don't know of any circumstance where you

1331
01:14:22,700 --> 01:14:25,700
actually need pairwise kerning because you either have full width,

1332
01:14:25,700 --> 01:14:29,600
half with or punctuation, and you can just handle those and you don't

1333
01:14:29,600 --> 01:14:34,100
have to worry about like two different say hiragana,

1334
01:14:34,600 --> 01:14:35,900
Being space differently.

1335
01:14:35,900 --> 01:14:41,200
I don't think they do that as far as I know, but it's neither here nor

1336
01:14:41,200 --> 01:14:43,500
there because like I said, I'm not going to special case a language

1337
01:14:43,500 --> 01:14:43,900
like that.

1338
01:14:43,900 --> 01:14:45,700
So I want to make sure we work.

1339
01:14:47,500 --> 01:14:50,800
I want to make sure that we work by allowing Korean tables for any

1340
01:14:50,800 --> 01:14:52,100
language, even if it doesn't need them.

1341
01:14:57,800 --> 01:14:59,800
Danny Greg, how do you render?

1342
01:15:00,000 --> 01:15:01,100
The GPU.

1343
01:15:02,400 --> 01:15:08,100
you use a programming API that the GPU manufacture ships drivers for

1344
01:15:09,100 --> 01:15:14,800
such as opengl, direct3d mantle, Vulcan metal,

1345
01:15:16,200 --> 01:15:18,300
Glide in the old days.

1346
01:15:19,800 --> 01:15:23,100
Opencl Cuda.

1347
01:15:28,400 --> 01:15:30,700
Guitar freak favorite font for reading.

1348
01:15:30,700 --> 01:15:31,600
I don't know.

1349
01:15:33,700 --> 01:15:36,100
I don't know, I haven't spent that much time with it.

1350
01:15:45,400 --> 01:15:48,300
Jame Devi to display the result.

1351
01:15:48,300 --> 01:15:51,500
Okay, so, rereading your question, you're asking, when I render on the

1352
01:15:51,500 --> 01:15:56,600
GPU, is there a way to display the result without copying the reserve?

1353
01:15:56,600 --> 01:15:57,900
The render back to Ram?

1354
01:15:58,900 --> 01:16:02,100
I mean, the answer is obviously, yes, because the GPU is the thing

1355
01:16:02,100 --> 01:16:03,300
that's plugged in to the monitor.

1356
01:16:04,000 --> 01:16:05,700
So, it's actually the other way around.

1357
01:16:05,900 --> 01:16:10,200
There's no way to display the result of rendering without a GPU

1358
01:16:11,400 --> 01:16:13,900
Without copying it to the GPU.

1359
01:16:14,800 --> 01:16:15,700
If that makes sense.

1360
01:16:18,700 --> 01:16:22,000
I mean assuming you're talking about discrete part there's there's

1361
01:16:22,000 --> 01:16:24,300
integrated Graphics Parts, which all uses the same memory.

1362
01:16:24,300 --> 01:16:25,600
So there's no copy there obviously.

1363
01:16:25,600 --> 01:16:27,100
But you get the idea.

1364
01:16:35,200 --> 01:16:38,500
Gaston 5, I almost got a headache when you set alignment is not the

1365
01:16:38,500 --> 01:16:41,300
same as kerning, please expound so

1366
01:16:47,800 --> 01:16:48,200
Okay.

1367
01:16:57,300 --> 01:16:57,700
Okay.

1368
01:16:58,100 --> 01:17:04,700
So in some languages, the actual concept of a box in which the letters

1369
01:17:04,700 --> 01:17:07,000
exist is formalized.

1370
01:17:07,500 --> 01:17:11,200
And Japanese is kind of one of them Japanese has what are called full

1371
01:17:11,200 --> 01:17:13,800
with characters and half with characters.

1372
01:17:14,100 --> 01:17:17,100
So you're either talking about a box that looks like this or a box

1373
01:17:17,100 --> 01:17:18,000
that looks like this.

1374
01:17:18,300 --> 01:17:19,800
It does not matter.

1375
01:17:20,300 --> 01:17:23,300
What characters are appearing next to each other, right?

1376
01:17:23,500 --> 01:17:26,700
If I actually go in here and write something in Japanese,

1377
01:17:27,100 --> 01:17:27,500
Right?

1378
01:17:27,900 --> 01:17:29,100
It does not matter.

1379
01:17:29,100 --> 01:17:33,500
What these two characters are the spacing in between them, only

1380
01:17:33,500 --> 01:17:36,700
depends on whether or not they were full or half with characters.

1381
01:17:36,800 --> 01:17:41,300
If this is a full-width character, it is then you advance from the

1382
01:17:41,300 --> 01:17:43,500
start of the character by a full width.

1383
01:17:44,000 --> 01:17:47,000
And if it's, if you had a half with character, right with, for

1384
01:17:47,000 --> 01:17:47,900
example, I don't know.

1385
01:17:47,900 --> 01:17:49,800
Which would be if I if I do it this way.

1386
01:17:49,900 --> 01:17:53,800
If I had a half with character, I would Advance by one half with but

1387
01:17:53,800 --> 01:17:54,600
at no time.

1388
01:17:54,600 --> 01:17:56,500
Do I actually need to consider

1389
01:17:57,300 --> 01:17:59,600
both characters to determine the advanced size.

1390
01:18:00,000 --> 01:18:03,000
That's the kerning part kerning is pairwise.

1391
01:18:05,100 --> 01:18:09,500
If you can determine the spacing of a language without using the pairs

1392
01:18:09,500 --> 01:18:13,500
of characters, it is not technically being current to the best of my

1393
01:18:13,500 --> 01:18:13,800
knowledge.

1394
01:18:13,800 --> 01:18:15,300
You would not say that phrase.

1395
01:18:16,400 --> 01:18:19,800
But even if you throw the kerning, throw this phraseology aside

1396
01:18:19,800 --> 01:18:23,600
because that's just typography language lettering.

1397
01:18:24,600 --> 01:18:28,400
The important thing to internalize is that there are pairwise

1398
01:18:28,400 --> 01:18:29,200
spacings.

1399
01:18:31,700 --> 01:18:34,700
And non pairwise facings, right?

1400
01:18:37,000 --> 01:18:40,800
A language might be entirely composed of non pairwise facings.

1401
01:18:40,900 --> 01:18:44,500
The character itself may always determine how much you move to get to

1402
01:18:44,500 --> 01:18:47,400
the next character and you may never need to know what that next

1403
01:18:47,400 --> 01:18:48,100
character was.

1404
01:18:48,400 --> 01:18:51,700
And if that's true, you don't need pairwise spacing tables.

1405
01:18:52,200 --> 01:18:54,000
You don't need a current what we're calling kerning table.

1406
01:18:54,000 --> 01:18:57,600
You don't need that because you would never actually need to look up

1407
01:18:57,600 --> 01:18:58,200
into it.

1408
01:18:58,300 --> 01:19:00,700
You can just look up into a 1D table, right?

1409
01:19:00,800 --> 01:19:03,600
It's like one day versus 2D table, right?

1410
01:19:03,600 --> 01:19:06,000
Kerning is a 2d thing, it's too.

1411
01:19:06,200 --> 01:19:07,300
It's, it's code points.

1412
01:19:07,300 --> 01:19:10,500
This way, code points this way, I have to look up the one I started

1413
01:19:10,500 --> 01:19:10,800
with.

1414
01:19:11,300 --> 01:19:15,100
And the one I'm going to and I find a particular value in a 2d table.

1415
01:19:15,400 --> 01:19:18,700
Now you can compress the 2D table down by just having Korean pear

1416
01:19:18,700 --> 01:19:20,300
arrays or whatever you want, right?

1417
01:19:20,300 --> 01:19:23,700
But it's still a 2d look up at Heart by contrast.

1418
01:19:23,700 --> 01:19:27,000
Something like Japan, I would argue is a 1D look up, right?

1419
01:19:27,000 --> 01:19:29,200
Whatever the character is tells me how far to advance that's all I

1420
01:19:29,200 --> 01:19:31,200
need to know pretty much right.

1421
01:19:32,600 --> 01:19:35,000
And someone was saying maybe not the punctuation, like, maybe if you

1422
01:19:35,000 --> 01:19:37,300
have these guys, right?

1423
01:19:37,400 --> 01:19:40,300
And you want those things to overlap properly, right?

1424
01:19:40,300 --> 01:19:46,000
Maybe you do still have it and so you can imagine that, well, we're

1425
01:19:46,000 --> 01:19:49,200
not completely wasting the kerning table because there is like, one or

1426
01:19:49,200 --> 01:19:50,900
two glyphs that use it, right?

1427
01:19:51,100 --> 01:19:54,900
But on the whole, if you were only dealing with languages like

1428
01:19:54,900 --> 01:19:57,800
Japanese, you've never make a crafting table, you just special case

1429
01:19:57,800 --> 01:20:00,300
these two characters because they're the only ones that ever going to

1430
01:20:00,300 --> 01:20:01,500
use it, right?

1431
01:20:02,600 --> 01:20:05,600
You wouldn't go add a table that allows you to look up arbitrary.

1432
01:20:05,600 --> 01:20:09,800
Pairwise things between, you know, 1000 characters on this side and

1433
01:20:09,800 --> 01:20:11,500
1,000 characters on the other side, right?

1434
01:20:15,200 --> 01:20:15,900
Kubrick Caleb.

1435
01:20:15,900 --> 01:20:19,200
Would you rather have a CPU with more cores than a GPU or enough clock

1436
01:20:19,200 --> 01:20:21,800
Cycles to outperform the GPU with software rendering?

1437
01:20:26,200 --> 01:20:27,400
I'm not sure, I understand the question.

1438
01:20:33,300 --> 01:20:37,700
Judah 12 said you can look at Japanese language layout, requirements.

1439
01:20:37,800 --> 01:20:40,700
Under the W3 for more information.

1440
01:20:46,000 --> 01:20:46,900
Which I will do.

1441
01:21:06,600 --> 01:21:06,900
Yeah.

1442
01:21:06,900 --> 01:21:10,500
And that kind of to me does does specifically say exactly what I just

1443
01:21:10,500 --> 01:21:11,600
said, which is that.

1444
01:21:12,200 --> 01:21:13,400
It's very regular eyes.

1445
01:21:13,400 --> 01:21:18,500
Debasing so you really probably would not care about kerning, right?

1446
01:21:18,500 --> 01:21:21,500
You would do you would handle it, you would not make a generalized

1447
01:21:21,500 --> 01:21:24,600
lookup system for Japanese because it just doesn't need that kerning,

1448
01:21:25,000 --> 01:21:25,500
right?

1449
01:21:30,900 --> 01:21:31,400
But yeah.

1450
01:21:31,800 --> 01:21:38,800
So there is a Section 3 though that says Sue megumi right and that

1451
01:21:38,800 --> 01:21:39,900
does support kerning.

1452
01:21:40,700 --> 01:21:45,900
So, you know, I mean, we could argue that we're just being supportive

1453
01:21:45,900 --> 01:21:50,900
of other of more expressive Japanese typeset typefaces, right?

1454
01:21:53,100 --> 01:21:54,100
If that makes any sense.

1455
01:21:55,600 --> 01:21:56,700
You can see it in there.

1456
01:21:56,700 --> 01:21:59,900
It's, they've got an example of a type of a Japanese type base that

1457
01:21:59,900 --> 01:22:01,500
actually does use kerning, right.

1458
01:22:06,600 --> 01:22:08,500
They suggest that that is not a common thing.

1459
01:22:08,600 --> 01:22:09,600
But, you know,

1460
01:22:24,200 --> 01:22:27,200
Robbie went thinking, Adobe has a market value of over 40 billion

1461
01:22:27,200 --> 01:22:27,600
dollars.

1462
01:22:27,600 --> 01:22:27,900
Why?

1463
01:22:27,900 --> 01:22:30,000
No great programmer wants to do a better photo shop.

1464
01:22:30,900 --> 01:22:34,400
I think part of it is because a lot of that is because Photoshop is

1465
01:22:34,400 --> 01:22:35,200
the standard.

1466
01:22:35,800 --> 01:22:42,200
Like, you know, it's hard to take on the established understood market

1467
01:22:42,300 --> 01:22:43,200
for Photoshop.

1468
01:22:43,600 --> 01:22:45,400
I think that's a really hard business problem.

1469
01:22:45,800 --> 01:22:47,800
I don't think it's as simple as shipping a program.

1470
01:22:47,800 --> 01:22:48,700
That's better than Photoshop.

1471
01:22:48,700 --> 01:22:51,100
And then everyone just switches to it, you know?

1472
01:22:53,500 --> 01:22:55,200
It's like the standard format.

1473
01:22:55,300 --> 01:23:01,500
Everyone uses psd's artist deliver psd's you know every artists are

1474
01:23:01,500 --> 01:23:04,300
trained on it so it's pretty hard.

1475
01:23:05,700 --> 01:23:10,500
I don't know why someone doesn't go after that market you know

1476
01:23:10,500 --> 01:23:12,000
holistic way but I suspect.

1477
01:23:12,000 --> 01:23:12,700
It's just

1478
01:23:14,100 --> 01:23:15,700
It's lower hanging fruit elsewhere.

1479
01:23:16,200 --> 01:23:20,900
I mean when you can make Instagram, which is a way of sending pictures

1480
01:23:20,900 --> 01:23:24,000
that look worse than they did, when you originally took them and you

1481
01:23:24,000 --> 01:23:26,300
can get bought for a billion dollars or whatever it was.

1482
01:23:26,800 --> 01:23:29,700
Why would you bother running a program as complicated as Photoshop?

1483
01:23:31,300 --> 01:23:31,800
You know.

1484
01:23:33,600 --> 01:23:36,900
I mean, so if you're just trying to make money, even adobe's kind of a

1485
01:23:36,900 --> 01:23:39,400
dumb idea because you actually had to make a program that was useful.

1486
01:23:40,600 --> 01:23:43,100
Instead you can make like, Snapchat or something, right?

1487
01:23:43,100 --> 01:23:46,900
Which takes almost no programming effort and make way more money.

1488
01:23:47,000 --> 01:23:49,800
So, if you're just trades chasing the money, it's more about just

1489
01:23:49,800 --> 01:23:52,500
coming up with, like, a fiddly little idea that you can convince

1490
01:23:52,900 --> 01:23:55,500
people is like a web thing and then you just get Acquired and you

1491
01:23:55,500 --> 01:23:57,800
never even have to even make money, right?

1492
01:24:00,300 --> 01:24:00,700
So, yeah.

1493
01:24:00,700 --> 01:24:01,200
So

1494
01:24:02,700 --> 01:24:04,000
Why don't people go out to the 40 billion?

1495
01:24:04,000 --> 01:24:06,500
Well there's even easier money to Chase.

1496
01:24:07,800 --> 01:24:14,000
You know, and I think that's probably the answer is, if you're just

1497
01:24:14,000 --> 01:24:17,200
looking to make money, even photoshop's way too much way more

1498
01:24:17,200 --> 01:24:20,300
programming than you should have to do, right?

1499
01:24:22,400 --> 01:24:24,200
Way way more programming than should have to do.

1500
01:24:40,900 --> 01:24:41,200
Damn it.

1501
01:24:41,200 --> 01:24:43,700
Sookie, there are actually a lot of people competing with Photoshop

1502
01:24:43,800 --> 01:24:45,900
and you are using one of those products on stream right now.

1503
01:24:46,500 --> 01:24:46,700
Yeah.

1504
01:24:46,700 --> 01:24:47,400
Just some degree.

1505
01:24:47,400 --> 01:24:48,600
I mean, not really though.

1506
01:24:50,200 --> 01:24:52,200
That, like, Mischief is not a Photoshop replacement.

1507
01:24:52,200 --> 01:24:55,500
It's a very different program that doesn't accomplish the same things,

1508
01:24:55,900 --> 01:24:56,400
right?

1509
01:24:58,200 --> 01:25:01,100
I actually don't know of any products that compete with Photoshop.

1510
01:25:03,400 --> 01:25:05,900
All the props, I can think of are four different market segments.

1511
01:25:07,800 --> 01:25:13,200
Like gimp or corita which are free are, the closest thing is, I know

1512
01:25:13,200 --> 01:25:16,000
to competitors, but I don't know of any commercial competitors to

1513
01:25:16,000 --> 01:25:16,700
photoshop.

1514
01:25:17,400 --> 01:25:20,400
There used to be some like Coral drawn, fractal painter and stuff like

1515
01:25:20,400 --> 01:25:20,800
this.

1516
01:25:23,400 --> 01:25:25,000
And I don't even know what happened to those.

1517
01:25:25,000 --> 01:25:32,800
They went away, got bought multiple times and I don't know and like

1518
01:25:32,800 --> 01:25:36,500
high-end people, you know, they use 3D paint stuff, like Mari or

1519
01:25:36,600 --> 01:25:41,700
mudbox and and stuff like that, but, you know, those aren't those

1520
01:25:41,700 --> 01:25:44,100
aren't Photoshop competitors either.

1521
01:26:01,400 --> 01:26:03,200
All right, I think I'm going to wind it down.

1522
01:26:06,800 --> 01:26:09,100
Thank you everyone for joining me, for another episode of handmade

1523
01:26:09,100 --> 01:26:09,200
hero.

1524
01:26:09,200 --> 01:26:10,200
It's been a pleasure coding with you.

1525
01:26:10,200 --> 01:26:13,800
As always, if you want to follow along at home with the source code,

1526
01:26:14,100 --> 01:26:17,100
you can always pre-order the game on handmade here at our org and it

1527
01:26:17,100 --> 01:26:18,000
comes to the source code.

1528
01:26:18,100 --> 01:26:19,500
Every night I upload it.

1529
01:26:19,700 --> 01:26:21,900
When we're done programming here, and you can grab it.

1530
01:26:23,500 --> 01:26:26,400
We also have a patreon page, want to support the video series.

1531
01:26:27,200 --> 01:26:29,500
You can subscribe to that, we have a forum site, you can go to ask

1532
01:26:29,500 --> 01:26:35,100
questions or pickup Community ports, to hit of him, a hero to other

1533
01:26:35,100 --> 01:26:36,400
platforms stuff like that.

1534
01:26:36,900 --> 01:26:39,200
There's also a tweet bot that tweets the schedule at you.

1535
01:26:39,900 --> 01:26:43,200
So if you want to catch the series live that's the place to go and if

1536
01:26:43,200 --> 01:26:46,000
you would like to catch it live tomorrow I will of course be back

1537
01:26:46,000 --> 01:26:46,700
here, 5 p.m.

1538
01:26:46,700 --> 01:26:48,700
Pacific Daylight Time, same time, same place.

1539
01:26:49,400 --> 01:26:54,900
So yeah if you want to come check out our I guess probably what we'll

1540
01:26:54,900 --> 01:26:57,900
do is start down that language path and try to support another

1541
01:26:57,900 --> 01:26:58,300
language.

1542
01:26:58,300 --> 01:26:58,800
Cleanly.

1543
01:27:00,200 --> 01:27:04,700
With our van system, if you would like to come along on that little

1544
01:27:04,700 --> 01:27:07,500
journey, they'll probably be the next couple days and probably try to

1545
01:27:07,500 --> 01:27:10,000
finish up all of our font stuff by the end of next week if we can

1546
01:27:10,500 --> 01:27:12,800
because I think we pretty much got everything under control.

1547
01:27:12,800 --> 01:27:16,300
We just want to do, like I said, some support for multiple language,

1548
01:27:16,300 --> 01:27:16,900
kind of stuff.

1549
01:27:17,700 --> 01:27:22,100
So, love to see you back here for that, until then have fun coding.

1550
01:27:22,100 --> 01:27:23,600
And I will see you guys on the internet.

1551
01:27:23,600 --> 01:27:24,300
Take it easy, everyone.

