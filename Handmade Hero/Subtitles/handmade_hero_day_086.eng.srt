1
00:00:00,700 --> 00:00:01,800
Okay, that was a mistake.

2
00:00:02,500 --> 00:00:07,500
I admit that I was not supposed to stop the streaming.

3
00:00:08,000 --> 00:00:12,100
I was supposed to stop the recording, but sometimes, when I get too

4
00:00:12,100 --> 00:00:16,100
excited, I stopped the streaming instead of the recording, which

5
00:00:16,100 --> 00:00:19,100
admittedly does stop the recording as well sometimes.

6
00:00:19,100 --> 00:00:23,300
So it, you know, it does sort of accomplish the goal but then everyone

7
00:00:23,300 --> 00:00:26,300
gets like a little off line thing and then it's a complete disaster

8
00:00:26,300 --> 00:00:27,500
and you know how it goes.

9
00:00:28,300 --> 00:00:30,100
So I was mistake admit that that's not

10
00:00:30,100 --> 00:00:35,200
That we wanted to push and we will, you know, try to avoid pushing it.

11
00:00:35,200 --> 00:00:36,400
But push it, we did.

12
00:00:36,500 --> 00:00:38,400
And so now we're just going to have to live with that.

13
00:00:38,600 --> 00:00:44,200
So anyway, you know, that mistake behind us going to minimize the

14
00:00:44,200 --> 00:00:47,500
window and say welcome to handmade hero.

15
00:00:47,600 --> 00:00:51,300
The show where we code a complete game live on Twitch know, libraries.

16
00:00:51,300 --> 00:00:56,900
No engine just our own sagacious, Ingenuity with the help of the

17
00:00:56,900 --> 00:01:00,000
twitch chat stream, to catch the mistakes that I will invariably.

18
00:01:00,100 --> 00:01:04,300
Make we are going to absolutely every part of a video game from the

19
00:01:04,300 --> 00:01:08,500
lowest little tiniest little detail all the way up to the big picture

20
00:01:09,200 --> 00:01:13,900
in an attempt to answer the age-old question.

21
00:01:16,200 --> 00:01:21,600
Which is, how does a hero with no arms and legs fight their way

22
00:01:21,600 --> 00:01:23,900
through a magical forest, right?

23
00:01:23,900 --> 00:01:28,700
It's a question that has plagued philosophers for Generations.

24
00:01:31,100 --> 00:01:32,100
and honestly,

25
00:01:33,300 --> 00:01:34,500
I feel like it's time.

26
00:01:34,500 --> 00:01:39,000
We laid that question to rest once and for all, and that is exactly

27
00:01:39,000 --> 00:01:41,000
what we're doing here on handmade hero.

28
00:01:41,000 --> 00:01:44,500
But before we can do that, we have to take care of a lot of technical

29
00:01:44,500 --> 00:01:45,600
requirements, first, that we have.

30
00:01:45,600 --> 00:01:48,400
And that's what we're in the middle of doing right now.

31
00:01:48,400 --> 00:01:51,900
What we're doing is we're creating a procedurally generated, ground

32
00:01:51,900 --> 00:01:56,100
texture that will be unique everywhere in the game and that never

33
00:01:56,100 --> 00:01:56,700
repeats.

34
00:01:56,700 --> 00:02:00,300
And so, we've done a bunch of the work that we need to do that.

35
00:02:00,300 --> 00:02:02,400
And we've discussed how we're going to do that, but we still have a

36
00:02:02,400 --> 00:02:03,100
few implementations.

37
00:02:03,300 --> 00:02:09,199
And things that we need to do today and so we will probably do those

38
00:02:09,199 --> 00:02:09,600
today.

39
00:02:09,600 --> 00:02:13,600
However, depending on how much explanation I do, we may not get to the

40
00:02:13,600 --> 00:02:13,900
whole thing.

41
00:02:13,900 --> 00:02:15,300
So it may be a two-day job.

42
00:02:15,300 --> 00:02:16,200
Well, we're not sure.

43
00:02:16,500 --> 00:02:17,000
We'll see.

44
00:02:17,600 --> 00:02:19,400
But I like to get started because we know what we're doing.

45
00:02:19,400 --> 00:02:21,100
We discussed it all yesterday in the day before.

46
00:02:21,100 --> 00:02:22,900
So it's not it's not a mystery.

47
00:02:22,900 --> 00:02:23,700
What needs to be done today.

48
00:02:23,700 --> 00:02:26,800
So we might as well just roll up the proverbial sleeves.

49
00:02:26,800 --> 00:02:29,000
Even though my sleeves are rolled down, that's why I said they were

50
00:02:29,000 --> 00:02:31,400
proverbial and not literal in this case.

51
00:02:32,000 --> 00:02:33,200
And get to

52
00:02:33,300 --> 00:02:33,600
Work.

53
00:02:33,600 --> 00:02:37,000
So if you have, if you want to follow along at home and you've ordered

54
00:02:37,000 --> 00:02:40,600
the game on handmade hero dot-org, you should have gotten a link with

55
00:02:40,600 --> 00:02:42,300
the source code download.

56
00:02:42,300 --> 00:02:46,000
You want to download the source code ZIP and unpack date.

57
00:02:46,000 --> 00:02:51,000
85 from inside that zip, that will put you exactly where I am today.

58
00:02:51,000 --> 00:02:54,700
So if you want to follow along at home, that is the thing to do.

59
00:02:54,900 --> 00:02:57,800
And if you don't do that, you know, don't come back to me and say,

60
00:02:57,800 --> 00:02:59,800
Casey, I couldn't follow along.

61
00:03:01,100 --> 00:03:05,200
Because if you unzip the wrong day, you know, anything goes at that

62
00:03:05,200 --> 00:03:05,600
point, right?

63
00:03:05,600 --> 00:03:09,200
You can't just go unzipping any day and then expect it to be the same

64
00:03:09,200 --> 00:03:09,700
as today.

65
00:03:09,700 --> 00:03:14,100
Because today is today and no, other day is ever today.

66
00:03:14,100 --> 00:03:17,100
Of course, if you're watching this stream on a YouTube video that

67
00:03:17,100 --> 00:03:20,500
means today is not today, today is someday in the past but you know

68
00:03:20,500 --> 00:03:21,400
what I mean?

69
00:03:22,100 --> 00:03:24,400
And that's a very important thing, you know, we're on the same

70
00:03:24,400 --> 00:03:26,600
wavelength, we've got to maintain that same wavelength.

71
00:03:26,600 --> 00:03:29,500
All right, so stick with me here, let's not go off on these

72
00:03:29,500 --> 00:03:29,900
ridiculous.

73
00:03:30,000 --> 00:03:33,500
Tangents that you seem to be encouraging me to do right now.

74
00:03:34,300 --> 00:03:37,800
Again not necessarily directly but in spirit I know no one's actually

75
00:03:37,800 --> 00:03:41,000
talking right now but I can I can sense it.

76
00:03:41,000 --> 00:03:44,400
I can tell that that is what you were thinking and I need you to stop

77
00:03:44,400 --> 00:03:45,400
thinking that entirely.

78
00:03:45,900 --> 00:03:46,300
All right?

79
00:03:46,300 --> 00:03:50,200
So let's go ahead and get back to what we were doing.

80
00:03:50,500 --> 00:03:54,900
So what we did yesterday is we had our tile scheme, sort of working,

81
00:03:54,900 --> 00:03:57,900
but we need to actually start generating more tiles.

82
00:03:58,100 --> 00:03:59,800
And so we need a system that will go

83
00:04:00,000 --> 00:04:04,600
Through and actually request to the tiles that we need so that we

84
00:04:04,600 --> 00:04:06,500
don't just have this one sitting in the center.

85
00:04:06,500 --> 00:04:07,300
We need tiles.

86
00:04:07,300 --> 00:04:08,300
That cover everything.

87
00:04:10,100 --> 00:04:13,800
So let's start by just doing that and we'll work up from there.

88
00:04:14,500 --> 00:04:19,500
And so what I'm going to propose that we do is we start by making

89
00:04:19,500 --> 00:04:26,100
tiles that we what I'd like to propose this is a proposal

90
00:04:27,500 --> 00:04:28,900
Not in the awkward wedding.

91
00:04:28,900 --> 00:04:32,300
Proposal sense where the guy like proposes to his girlfriend in the

92
00:04:32,300 --> 00:04:35,400
middle of a basketball game, and she says, no, and he's really

93
00:04:35,400 --> 00:04:39,300
embarrassed and all these ridiculous things, which it, honestly are

94
00:04:39,300 --> 00:04:40,500
fantastic to watch on YouTube.

95
00:04:40,500 --> 00:04:42,600
I don't know if you've ever done it, but it's there's this, it's one

96
00:04:42,600 --> 00:04:44,200
of those really bad schadenfreude things.

97
00:04:44,200 --> 00:04:44,700
If you get on.

98
00:04:44,700 --> 00:04:47,900
If you get, if you go down that route, you will watch a bunch of them

99
00:04:48,200 --> 00:04:49,000
but it's a lot of fun.

100
00:04:49,000 --> 00:04:51,600
So I recommend it but that's not what I'm talking about.

101
00:04:52,100 --> 00:04:55,400
What I'm actually talking about here is I'm talking about saying,

102
00:04:55,900 --> 00:04:57,100
let's take this one step at a time.

103
00:04:57,600 --> 00:05:02,700
So first, what we'll do is just produce tiles that cover things and

104
00:05:02,700 --> 00:05:06,200
we'll try to make it so that as we move around those tiles adapt to

105
00:05:06,200 --> 00:05:07,500
where we need them to be right.

106
00:05:07,500 --> 00:05:11,100
That's something we obviously need to do but they won't be seamless.

107
00:05:11,200 --> 00:05:13,200
So the tiles will just look totally wrong.

108
00:05:13,200 --> 00:05:16,100
They'll look like a like a tile map game where you have like these

109
00:05:16,100 --> 00:05:18,900
tiles that don't quite fit together right necessarily and you see

110
00:05:18,900 --> 00:05:20,400
seems between them right?

111
00:05:20,800 --> 00:05:22,100
So we'll do that first.

112
00:05:22,800 --> 00:05:27,000
And then once we have that working properly, we will go to, you know,

113
00:05:27,400 --> 00:05:31,400
Defcon 4 or 3, depending on what you want to call the previous Defcon

114
00:05:31,400 --> 00:05:35,600
level that I just described and that new level will be making the tile

115
00:05:35,600 --> 00:05:39,700
so that their seamless because they're two separate tasks.

116
00:05:39,700 --> 00:05:44,600
Really one is about determining what tiles to fill and making sure we

117
00:05:44,600 --> 00:05:46,000
evict tiles properly.

118
00:05:46,200 --> 00:05:48,300
And the other one is totally different.

119
00:05:48,300 --> 00:05:49,700
It's about filling tiles.

120
00:05:50,000 --> 00:05:53,700
The actual tile contents in ways that you know, naturally flow with

121
00:05:53,700 --> 00:05:54,200
each other.

122
00:05:55,400 --> 00:05:56,800
All right, so you got that good.

123
00:05:57,000 --> 00:05:57,800
I'm glad you do.

124
00:05:58,900 --> 00:05:59,800
All right, so let's start.

125
00:06:00,000 --> 00:06:01,700
Thinking we've got some stuff.

126
00:06:01,700 --> 00:06:03,500
We have things to think about here.

127
00:06:03,500 --> 00:06:08,000
Okay, we have we have stuff that needs thinking about stuff that needs

128
00:06:08,000 --> 00:06:12,500
addressing and the first thing that needs to be addressed, is the fact

129
00:06:12,500 --> 00:06:15,300
that these ground buffers that we have right?

130
00:06:15,300 --> 00:06:18,000
We need some way of saying, what the ones we need?

131
00:06:18,000 --> 00:06:21,200
Are we just have a big array of them and we can fill it up with stuff

132
00:06:21,200 --> 00:06:25,400
but we need to know what the world positions are of the things that we

133
00:06:25,400 --> 00:06:26,300
should actually fill.

134
00:06:28,100 --> 00:06:28,500
Right.

135
00:06:28,500 --> 00:06:31,600
And more specifically, we should we should we need to try and we need

136
00:06:31,600 --> 00:06:34,400
to kind of place those things properly.

137
00:06:34,400 --> 00:06:38,000
And furthermore the size of one of these ground buffers, we kind of

138
00:06:38,000 --> 00:06:40,200
want that to line up with World positions.

139
00:06:40,200 --> 00:06:42,900
So we want to make sure that the world position that we give it lines

140
00:06:42,900 --> 00:06:46,700
up properly, you know, with whatever, you know.

141
00:06:46,900 --> 00:06:51,300
So that the pixels the world units and the pixels line up properly for

142
00:06:51,300 --> 00:06:54,600
however, big the ground buffer actually is right.

143
00:06:55,400 --> 00:06:59,100
So let's think about this for a second and exactly how we're going to

144
00:06:59,100 --> 00:06:59,700
do that.

145
00:06:59,800 --> 00:07:02,800
Because there's definitely some issues involved there.

146
00:07:03,300 --> 00:07:07,800
Alright, so in our ground, buffer situation here, when we actually

147
00:07:07,800 --> 00:07:09,900
made our first one, we do this thing.

148
00:07:09,900 --> 00:07:10,600
That's the test feel.

149
00:07:10,600 --> 00:07:13,200
This is the one that fills that one that we've got, so we want to do

150
00:07:13,200 --> 00:07:15,000
is stop doing that test, fill entirely.

151
00:07:15,000 --> 00:07:16,600
So I'm going to, I'm going to take that out of there.

152
00:07:17,000 --> 00:07:19,500
And what we want to do is I'm just going to make a function here, so I

153
00:07:19,500 --> 00:07:21,600
have someplace to to work in for this.

154
00:07:21,900 --> 00:07:25,000
I'm not exactly sure where I want to call it or anything like that.

155
00:07:25,200 --> 00:07:26,400
I just know what needs to happen.

156
00:07:26,400 --> 00:07:28,400
So I'm gonna stick it in here and then we'll figure it out.

157
00:07:29,700 --> 00:07:35,100
What I need to do is I need to go through and essentially I need to

158
00:07:35,100 --> 00:07:41,600
basically say, for every place, the camera could see, I need a ground

159
00:07:41,600 --> 00:07:46,900
chunk there, and that will produce the list of ground chunks for me,

160
00:07:46,900 --> 00:07:47,200
right?

161
00:07:47,200 --> 00:07:49,800
The, the produce the this will produce the ground chunks that I

162
00:07:49,800 --> 00:07:50,700
actually want to have.

163
00:07:53,000 --> 00:07:57,900
Right, that's basically what I want to do, but there's a little bit of

164
00:07:57,900 --> 00:08:01,300
an issue there with that, which is that our ground chunks, obviously

165
00:08:01,300 --> 00:08:05,400
are stored in a way that makes it kind of tough for me to look up

166
00:08:05,400 --> 00:08:07,100
whether we have them or not, right?

167
00:08:07,700 --> 00:08:11,600
And so that's, that's kind of an interesting piece of it as well,

168
00:08:11,800 --> 00:08:12,100
right?

169
00:08:12,100 --> 00:08:13,600
So we'll think about this in a second.

170
00:08:14,700 --> 00:08:18,000
But let's suppose that I was going to take that camera, right?

171
00:08:18,000 --> 00:08:19,100
So, and you know what?

172
00:08:19,100 --> 00:08:22,700
We kind of have some guidance here because in handmade Sim region,

173
00:08:23,800 --> 00:08:26,200
we've got a thing that's like, begin Sim.

174
00:08:26,400 --> 00:08:27,700
Write it.

175
00:08:27,700 --> 00:08:32,100
We passed this bounds thing into into this begin Sim which is like a

176
00:08:32,100 --> 00:08:36,299
region that we use for simulating the world in an area and its got

177
00:08:36,299 --> 00:08:37,900
like an apron around it and so on.

178
00:08:38,299 --> 00:08:41,600
And what I was thinking is well we kind of that's exactly the same

179
00:08:41,600 --> 00:08:44,100
sort of thing that we need to do here.

180
00:08:44,300 --> 00:08:44,800
Right.

181
00:08:44,800 --> 00:08:45,500
That's exactly.

182
00:08:45,500 --> 00:08:47,000
The same thing that we need to do here.

183
00:08:47,000 --> 00:08:50,900
And so if you think about preparing these ground chunks, we could

184
00:08:50,900 --> 00:08:54,700
think about them as being roughly the same as the same region that

185
00:08:54,700 --> 00:08:55,600
we're talking about here.

186
00:08:55,600 --> 00:08:59,800
So, like 17 times three times, nine times, three,

187
00:09:00,000 --> 00:09:04,600
That's how many actual tiles there are, but I think there's not that

188
00:09:04,600 --> 00:09:07,100
many in an actual in a 256 by.

189
00:09:07,100 --> 00:09:08,800
256, there wouldn't be that many tiles.

190
00:09:08,800 --> 00:09:10,100
So I don't know.

191
00:09:10,100 --> 00:09:13,000
There's that's, that's probably something where it's going to be

192
00:09:13,400 --> 00:09:15,500
reduced by a fairly considerable Factor.

193
00:09:15,900 --> 00:09:17,500
So let me just see, what would I?

194
00:09:17,500 --> 00:09:21,100
So that was about 1:00 to 3:30, it's about three per screen.

195
00:09:21,100 --> 00:09:24,400
So if we did, if we did a three by three screens, and each one was a 3

196
00:09:24,400 --> 00:09:29,900
by 3, maybe something like eighty one of them, so we could actually

197
00:09:30,000 --> 00:09:35,400
Request something like the Sim region in terms of how many things we

198
00:09:35,400 --> 00:09:35,900
actually need.

199
00:09:35,900 --> 00:09:37,400
We could actually use something like the same reason.

200
00:09:37,400 --> 00:09:40,000
Maybe that's a little too large so maybe we want to shrink that a

201
00:09:40,000 --> 00:09:42,900
little bit but we could actually request something of that size.

202
00:09:43,200 --> 00:09:45,900
But either way you can see exactly what we're doing.

203
00:09:45,900 --> 00:09:50,100
Here is exactly the same thing that we want to do with the tile

204
00:09:50,100 --> 00:09:50,400
chunks.

205
00:09:50,400 --> 00:09:52,700
So we're just picking a region that's around the camera and we're

206
00:09:52,700 --> 00:09:56,600
saying let's go ahead and fill in tile chunks in that region.

207
00:09:57,200 --> 00:09:59,900
So I'm going to assume that we can do that and I'm going to

208
00:10:00,100 --> 00:10:04,300
That we have basically request ground buffer is something like this

209
00:10:04,600 --> 00:10:06,600
and I just want to be able to pass that.

210
00:10:06,600 --> 00:10:07,700
I want to be able to pass it.

211
00:10:07,700 --> 00:10:13,100
Something where again I've got sort of these these bounds if you will.

212
00:10:13,100 --> 00:10:17,900
So something like a bounce and a world position that's you know, the

213
00:10:17,900 --> 00:10:20,500
center or whatever like that.

214
00:10:23,400 --> 00:10:25,800
And I want to be able to kind of iterate through there and say how

215
00:10:25,800 --> 00:10:29,000
many chunks do I need to pull out for that, right?

216
00:10:31,500 --> 00:10:34,500
And I'm not really sure what the best way to do this is I assume that

217
00:10:34,500 --> 00:10:38,900
the best way to do this would say, all right, from that Center P, I

218
00:10:38,900 --> 00:10:43,200
would want to basically snap to whatever the closest thing is on that

219
00:10:43,200 --> 00:10:44,100
which is really easy.

220
00:10:44,100 --> 00:10:47,400
It, you know, in ABS tile X AB style, while EPS tells e, that's

221
00:10:47,400 --> 00:10:51,400
actually pretty easy to do, because that Center p, is already set up

222
00:10:51,400 --> 00:10:52,600
in that space, right?

223
00:10:52,600 --> 00:10:57,900
If I take a look at what happens in handmade World here, I've got in

224
00:10:57,900 --> 00:10:58,400
that world position.

225
00:10:58,400 --> 00:11:00,400
I've got the chunk X chunk by chunk Z.

226
00:11:00,800 --> 00:11:03,700
So if I just ignore, whatever the offset is, right?

227
00:11:03,800 --> 00:11:07,000
And say, I'm just going to use that chunk X chunk by chunk Z that kind

228
00:11:07,000 --> 00:11:12,000
of, gives me that basis and I know that I could just go some number of

229
00:11:12,000 --> 00:11:13,000
chunks over.

230
00:11:13,700 --> 00:11:17,900
However many it would take to fill that bitmap that to Pieces by 26

231
00:11:17,900 --> 00:11:18,900
bitmap that we have.

232
00:11:19,300 --> 00:11:23,100
I know that I could just step by that until I hit the actual bounds.

233
00:11:23,500 --> 00:11:25,700
So I know this sounds a little confusing.

234
00:11:26,600 --> 00:11:29,200
But basically, what I want to do is say all right, I've got these

235
00:11:29,200 --> 00:11:31,400
bounds, the bounce that got passed in.

236
00:11:31,500 --> 00:11:35,300
I want to offset them by whatever the offset of the world position

237
00:11:35,300 --> 00:11:40,300
thing is, so that my world Position will now be just a chunk X chunk

238
00:11:40,300 --> 00:11:42,200
why chunk Z perfectly aligned.

239
00:11:42,300 --> 00:11:43,200
Does that make sense?

240
00:11:43,700 --> 00:11:44,900
So basically I'm saying, all right.

241
00:11:44,900 --> 00:11:48,200
I've got bounds here, excuse me.

242
00:11:49,400 --> 00:11:51,200
And I believe, I hope.

243
00:11:51,200 --> 00:11:53,800
Anyway, we already have code for this, it's just adds to the Min and

244
00:11:53,800 --> 00:11:54,100
the max.

245
00:11:54,100 --> 00:11:56,600
I don't know if we actually have that or not.

246
00:11:56,600 --> 00:11:57,700
We'll take a look and see.

247
00:11:57,700 --> 00:11:59,800
We have ad radius to recommend me.

248
00:12:00,200 --> 00:12:06,500
X, we have offset to be have, we don't have our set want y so we don't

249
00:12:06,500 --> 00:12:08,400
actually have that but it's really trivial, right?

250
00:12:08,400 --> 00:12:10,700
If we have a rectangle with a minute Max, we're just talking about

251
00:12:10,700 --> 00:12:11,900
adding something to it.

252
00:12:13,200 --> 00:12:15,000
And so much, like we have ad radius to.

253
00:12:15,000 --> 00:12:17,400
We can just do a thing where it's like, okay, if I have a rectangle

254
00:12:17,400 --> 00:12:19,700
three, I can do an offset right?

255
00:12:19,800 --> 00:12:23,300
And the offset just takes whatever the rectangle is and it takes

256
00:12:23,300 --> 00:12:26,700
whatever the offset is and it's just going to its, you know, literally

257
00:12:26,700 --> 00:12:29,000
just going to do.

258
00:12:30,500 --> 00:12:34,700
An operation to move the Min and the max by whatever they offset was,

259
00:12:34,900 --> 00:12:35,300
right?

260
00:12:35,300 --> 00:12:38,900
So, it's just that very, very simple, right?

261
00:12:39,900 --> 00:12:41,600
And so I want to be able to do that.

262
00:12:41,600 --> 00:12:44,800
I want to be able to offset the bounds by whatever the center P was

263
00:12:45,100 --> 00:12:45,600
right.

264
00:12:45,800 --> 00:12:47,100
And so the center p,

265
00:12:49,200 --> 00:12:53,600
When I take that in, that's going to have that offset and I want to

266
00:12:53,600 --> 00:12:54,600
basically get rid of that.

267
00:12:54,600 --> 00:12:58,700
So, what I want to do is say all right, the boundary, and I'll just

268
00:12:58,700 --> 00:13:00,100
draw this out for you real quick.

269
00:13:00,300 --> 00:13:02,300
What day are we on here day 86?

270
00:13:03,000 --> 00:13:03,500
Right.

271
00:13:04,000 --> 00:13:06,400
So, here's day 86.

272
00:13:07,300 --> 00:13:10,500
So, if you think about the, what's going on, right?

273
00:13:10,500 --> 00:13:14,700
I've got some bounds and I've got, you know, basically a look a

274
00:13:14,700 --> 00:13:18,400
location for their Center and it's based off of

275
00:13:18,600 --> 00:13:22,300
AB style, except style, y, AB style, Z, some some Universal

276
00:13:22,300 --> 00:13:23,200
coordinate, right?

277
00:13:23,200 --> 00:13:24,300
That's an integer space.

278
00:13:24,800 --> 00:13:25,700
And it's got an offset.

279
00:13:25,700 --> 00:13:30,600
So what I want to do is I want to produce whatever this rectangle

280
00:13:30,600 --> 00:13:31,500
should be.

281
00:13:32,300 --> 00:13:36,000
But now around here, instead of around here, right?

282
00:13:36,200 --> 00:13:41,000
So I want to essentially, I want to get rid.

283
00:13:41,000 --> 00:13:45,700
I want to subtract that so that I move the rectangle back as if it

284
00:13:45,700 --> 00:13:46,900
were around this thing.

285
00:13:47,500 --> 00:13:48,400
I don't know if that makes sense.

286
00:13:48,500 --> 00:13:52,700
But basically you can think of it like right now, right?

287
00:13:52,800 --> 00:13:56,600
I've got the Min and the max like, you know, the Min is down here.

288
00:13:56,600 --> 00:13:58,600
The max like is up here, right?

289
00:13:58,900 --> 00:14:02,900
And so, what I want to do is I want to take this Vector for the for

290
00:14:02,900 --> 00:14:03,300
the

291
00:14:05,100 --> 00:14:08,300
I want to take this Vector for the for the maximum and I want to be

292
00:14:08,300 --> 00:14:12,400
able to produce that as if I was as if I was here.

293
00:14:12,800 --> 00:14:16,900
And so in order to do that I need to take whatever that offset is and

294
00:14:16,900 --> 00:14:21,200
I need to include the offset in the max computation.

295
00:14:21,400 --> 00:14:26,900
So if previously the maxim would have been you know offset plus Max,

296
00:14:27,400 --> 00:14:28,000
right?

297
00:14:28,000 --> 00:14:31,900
And previously it would have been offset plus Min, right?

298
00:14:31,900 --> 00:14:33,400
This is where they actually would have been.

299
00:14:34,000 --> 00:14:34,100
What?

300
00:14:34,200 --> 00:14:36,500
Need to do now is just roll that into the maximum in.

301
00:14:36,500 --> 00:14:39,800
So I'm just going to I'm just going to pass that offset indirectly and

302
00:14:39,800 --> 00:14:44,800
that way it'll now be based around this this point instead, right?

303
00:14:44,800 --> 00:14:46,200
Hopefully, that makes some sense.

304
00:14:46,300 --> 00:14:49,200
I don't know if it does or not, but hopefully it does.

305
00:14:49,800 --> 00:14:53,600
So I believe I should have to do is just this code right here so that

306
00:14:53,600 --> 00:14:56,900
I'm going to essentially have whatever the bounds were there, now off

307
00:14:56,900 --> 00:14:59,800
of that, and then, I can subtract that since I've added it.

308
00:15:00,000 --> 00:15:06,300
I can subtract that away and basically say, okay, that the center p is

309
00:15:06,300 --> 00:15:11,300
now just an AB style except I'll why it has no offset anymore, right?

310
00:15:11,800 --> 00:15:14,900
Okay, so if I do that, then what I need to do is just say, all right,

311
00:15:14,900 --> 00:15:19,600
let me step in X and Y because we're not really considering Z yet.

312
00:15:19,600 --> 00:15:22,600
And again, that's something that's our next big task that we have to

313
00:15:22,600 --> 00:15:25,600
do, but let me take that ABS tile X, AB style.

314
00:15:25,600 --> 00:15:27,900
Why ABS taozi that we had there before?

315
00:15:28,100 --> 00:15:28,500
Oops?

316
00:15:30,800 --> 00:15:31,800
Where is my?

317
00:15:31,800 --> 00:15:32,300
There it is.

318
00:15:33,000 --> 00:15:38,300
I want to take these to these chunks, right X y&z, I want to take

319
00:15:38,300 --> 00:15:39,000
those chunks.

320
00:15:43,000 --> 00:15:44,600
Ah, you know what?

321
00:15:46,800 --> 00:15:50,600
Only thing I failed to consider though is how big is a chunk, is

322
00:15:50,600 --> 00:15:52,100
actually very large.

323
00:15:52,800 --> 00:15:55,500
So even though we'd be aligned here,

324
00:15:57,300 --> 00:16:02,200
We wouldn't really be, you know, a chunk is something is what like 16

325
00:16:02,200 --> 00:16:03,500
by 16 tiles.

326
00:16:04,600 --> 00:16:08,400
I wonder if that's just too large because I could do it per chunk.

327
00:16:09,800 --> 00:16:14,500
Mmm, I was thinking in terms of tiles but these World positions are in

328
00:16:14,500 --> 00:16:17,100
terms of actual real Choice, we'd only have tiles anymore right there.

329
00:16:17,100 --> 00:16:21,200
Just kind of a thing that's like a was a thing for doing some World

330
00:16:21,200 --> 00:16:21,500
creation.

331
00:16:21,500 --> 00:16:23,600
That still sort of in there is residual, but we don't really have

332
00:16:23,600 --> 00:16:24,300
those anymore.

333
00:16:24,900 --> 00:16:32,300
So, if I'm producing one of these, 16 by 16 tiles, that's, that's a

334
00:16:32,300 --> 00:16:33,500
little dicey, isn't it?

335
00:16:33,500 --> 00:16:38,900
Because that may be too large for the granularity of our our ground

336
00:16:38,900 --> 00:16:39,300
buffer?

337
00:16:39,500 --> 00:16:39,800
Right.

338
00:16:39,900 --> 00:16:42,800
That might be too too big.

339
00:16:43,100 --> 00:16:46,100
It's kind of hard to say, for sure, right.

340
00:16:47,300 --> 00:16:50,200
But if you just think about it, that that might be a bit much.

341
00:16:50,400 --> 00:16:53,400
Now, I don't actually know if that's true or not, but I'm just that's

342
00:16:53,400 --> 00:16:54,200
just what I'm thinking.

343
00:16:55,100 --> 00:16:59,600
Now it would be nice if they aligned because if they aligned, that

344
00:16:59,600 --> 00:17:04,400
would mean that we could just use, you know, we could, we could have

345
00:17:04,400 --> 00:17:05,599
everything stored symmetrically.

346
00:17:05,599 --> 00:17:09,099
So this is a really, really tough call.

347
00:17:10,000 --> 00:17:11,800
This is a really, really tough call.

348
00:17:14,099 --> 00:17:14,700
so,

349
00:17:16,400 --> 00:17:18,000
let's think about this for a second.

350
00:17:19,300 --> 00:17:22,700
If we were just, we don't really think about tiles per chunk much

351
00:17:22,700 --> 00:17:23,599
anymore, right?

352
00:17:23,700 --> 00:17:26,400
They're kind of not really, super much of a thing.

353
00:17:26,800 --> 00:17:29,500
They're just a thing that we use to set that chunked in that's like

354
00:17:29,500 --> 00:17:30,500
the only thing we do.

355
00:17:30,500 --> 00:17:34,800
But the chunk, Tim could be whatever it is and the chunk Tim is in

356
00:17:34,800 --> 00:17:35,700
meters obviously.

357
00:17:35,700 --> 00:17:40,200
And so, you know, that's, you know, that's just how that false out.

358
00:17:40,500 --> 00:17:45,600
And so if we were to say, for example, that one of these chunks was

359
00:17:45,800 --> 00:17:46,100
the

360
00:17:46,200 --> 00:17:48,200
size of one of our ground buffers.

361
00:17:48,300 --> 00:17:50,700
Think about how much easier that would make things for us.

362
00:17:50,700 --> 00:17:54,100
Right, it means we could essentially just sort of cash these ground

363
00:17:54,100 --> 00:17:58,600
buffers directly with the world in a more direct sense, right?

364
00:17:58,600 --> 00:17:59,900
We could we could do something.

365
00:18:00,000 --> 00:18:01,800
It was really really easy.

366
00:18:03,100 --> 00:18:04,800
We could even maybe store them in here.

367
00:18:04,800 --> 00:18:05,500
We could store.

368
00:18:05,500 --> 00:18:08,700
It seems a little wasteful, but you could imagine having the world

369
00:18:08,700 --> 00:18:13,200
chunk say in here, like have an index into the ground buffers array,

370
00:18:13,200 --> 00:18:16,900
that says what ground before it currently has, if it has one.

371
00:18:16,900 --> 00:18:17,600
Right?

372
00:18:18,500 --> 00:18:22,400
So, man, it's, it's really tempting to go that route and I'm kind of

373
00:18:22,400 --> 00:18:23,500
thinking, that, that would be nice.

374
00:18:23,500 --> 00:18:26,000
The only thing I don't love is, you know, storing it in here.

375
00:18:26,000 --> 00:18:29,500
Seems a little bit unnecessary that seems possibly a little bit,

376
00:18:29,500 --> 00:18:29,900
excessive.

377
00:18:30,000 --> 00:18:30,400
Civ.

378
00:18:30,900 --> 00:18:32,000
But you know, who knows?

379
00:18:32,000 --> 00:18:34,600
It's hard to say, hmm.

380
00:18:35,600 --> 00:18:36,700
Hmm.

381
00:18:39,500 --> 00:18:40,800
I think I'm going to try that.

382
00:18:41,200 --> 00:18:42,500
I think I might try that.

383
00:18:43,700 --> 00:18:47,900
Let's, let's see what would happen if I were to do that.

384
00:18:47,900 --> 00:18:51,800
Let's take a brief interlude from this, right?

385
00:18:52,300 --> 00:18:55,500
And see how big those tile chunks actually are.

386
00:18:55,700 --> 00:19:00,800
So what would happen if I were to draw the tile chunks, basically,

387
00:19:01,000 --> 00:19:01,500
right?

388
00:19:01,700 --> 00:19:03,200
So let's let's do that.

389
00:19:03,300 --> 00:19:07,900
If we go in here to where we actually, where we actually draw stuff,

390
00:19:07,900 --> 00:19:08,500
right?

391
00:19:09,200 --> 00:19:13,000
If I were to actually draw the tile chunks that are involved in the

392
00:19:13,000 --> 00:19:13,300
same.

393
00:19:13,400 --> 00:19:15,600
I said, like, what would that look like, right?

394
00:19:15,700 --> 00:19:19,300
Because if you remember inside, Sim region, I'm sorry knots image that

395
00:19:19,300 --> 00:19:20,100
were visible on screen.

396
00:19:20,400 --> 00:19:23,800
If you remember, we've got this, this code right here that basically

397
00:19:23,800 --> 00:19:28,900
does exactly that iterates over the chunks that are involved in a

398
00:19:28,900 --> 00:19:31,100
particular bounded region, right?

399
00:19:31,400 --> 00:19:34,600
And so, if I were to do that, I could, you know, make a thing here,

400
00:19:34,600 --> 00:19:37,200
that just, that just does that rendering, right?

401
00:19:37,300 --> 00:19:39,100
So let's let's just do that.

402
00:19:39,400 --> 00:19:40,700
Let's see what that does.

403
00:19:41,500 --> 00:19:43,300
So when we make that same region right here,

404
00:19:43,400 --> 00:19:44,200
Here it does.

405
00:19:44,200 --> 00:19:45,800
That begin Sim, right?

406
00:19:46,000 --> 00:19:51,200
I'm actually going to do a thing where we write, you know, right in

407
00:19:51,200 --> 00:19:55,100
here, I do a little rendering where we, where we render the chunks

408
00:19:55,100 --> 00:19:58,300
that are in whatever the same region Asim region size.

409
00:19:58,300 --> 00:20:01,700
Sort of thing is, and it won't actually be the same region, it'll be,

410
00:20:01,700 --> 00:20:06,500
just more, some kind of a screen size thing, right?

411
00:20:07,300 --> 00:20:09,900
So if I did it this way, right, like this,

412
00:20:11,400 --> 00:20:14,400
I'm going to go ahead and make a little piece of code for us to do

413
00:20:14,400 --> 00:20:14,900
this here.

414
00:20:15,400 --> 00:20:19,200
So if I, if I do this camera, bounce thing and I say, all right, how

415
00:20:19,200 --> 00:20:22,700
big is the the actual cameras region going to be?

416
00:20:23,200 --> 00:20:26,800
I can do that pretty simply by saying, you know, I've got M to pixels,

417
00:20:27,000 --> 00:20:27,600
right?

418
00:20:29,200 --> 00:20:34,100
And so if I have M to pixels, I can easily get from pixels to M.

419
00:20:34,300 --> 00:20:38,000
So, if I want to know how big the cameras bounce are, right?

420
00:20:38,200 --> 00:20:41,000
I know that the width or the the screen

421
00:20:41,600 --> 00:20:47,400
In M, right is going to be whatever the screen riff was in pixels,

422
00:20:47,700 --> 00:20:48,100
right?

423
00:20:48,100 --> 00:20:49,300
Which is which is this

424
00:20:50,500 --> 00:20:55,400
/ that m 2 pixels, right picks?

425
00:20:55,400 --> 00:20:58,600
Which is, I don't know if we store restore m, 2 pixels.

426
00:20:58,700 --> 00:20:59,800
I don't know if we start pixels to me.

427
00:21:00,000 --> 00:21:02,600
As we probably should pixels to M, right?

428
00:21:02,700 --> 00:21:06,300
So I'll just multiply it by pixels to M, which is just the inverse of

429
00:21:06,300 --> 00:21:08,300
meals, m, 2 pixels, right?

430
00:21:08,500 --> 00:21:10,400
So we've got M to pixels.

431
00:21:12,200 --> 00:21:16,300
So let's go ahead and say pixels to M, I guess I don't need to store

432
00:21:16,300 --> 00:21:17,300
it in the game State.

433
00:21:17,500 --> 00:21:17,900
Oops.

434
00:21:20,200 --> 00:21:21,000
I can just do it here.

435
00:21:21,800 --> 00:21:24,600
1.0 F over m 2 pixels, like so.

436
00:21:26,300 --> 00:21:27,800
So let's go ahead and just do it that way.

437
00:21:28,300 --> 00:21:31,600
So the screen within m is just going to be whatever it is and pixels x

438
00:21:31,600 --> 00:21:35,200
pixels to M, right, that converts for us, and similarly, whatever the

439
00:21:35,200 --> 00:21:36,700
screen height is in meters.

440
00:21:38,000 --> 00:21:39,900
I'm going to do that as well.

441
00:21:40,200 --> 00:21:45,400
Once I know that I can trivially make a Rec Center half, Tim out of

442
00:21:45,400 --> 00:21:48,000
that and just pass that in, right?

443
00:21:48,100 --> 00:21:49,200
It's just going to be

444
00:21:50,200 --> 00:21:55,700
A V3 of screen width in meters screen height in meters and we don't

445
00:21:55,700 --> 00:21:58,200
really care how thick it is at the moment because we're not really

446
00:21:58,200 --> 00:22:01,600
handling Z4, ground generation quite yet.

447
00:22:02,000 --> 00:22:06,600
So once I do that, I can get those chunks out there and the origin.

448
00:22:06,600 --> 00:22:08,600
In this case is just going to be that camera P.

449
00:22:08,600 --> 00:22:11,900
It's going to be wherever the camera actually is right.

450
00:22:12,400 --> 00:22:15,700
And then I can get it, these, the camera bounds again.

451
00:22:16,000 --> 00:22:19,800
So this will basically give me the region that reviewing

452
00:22:19,900 --> 00:22:23,900
Okay, and then what I can do inside here is when we go through to draw

453
00:22:23,900 --> 00:22:27,200
these chunks chunks Z chunk by chunk X were looping over all the

454
00:22:27,200 --> 00:22:27,600
chunks.

455
00:22:28,400 --> 00:22:31,900
When I grab a world chunk out, I can go ahead and say, if there was a

456
00:22:31,900 --> 00:22:36,500
chunk in that location, I'm going to draw a rectangle that sort of

457
00:22:36,500 --> 00:22:40,200
encapsulates, the region where that was, right?

458
00:22:40,800 --> 00:22:43,800
And in order to do that again I just do the reverse the reverse

459
00:22:43,800 --> 00:22:47,100
mapping, pretty pretty straightforward, right?

460
00:22:47,200 --> 00:22:49,800
All I need to do is figure out how big a chunk is.

461
00:22:49,900 --> 00:22:55,300
Is by half draw that at the location where the world chunk is in terms

462
00:22:55,300 --> 00:22:58,600
of, you know, it's exact placement, if that makes sense.

463
00:22:59,600 --> 00:23:02,900
And so, if I take a look here at one of those chunks gives me, I have

464
00:23:02,900 --> 00:23:05,600
the chunk X chunk why in chunk Z, right?

465
00:23:06,000 --> 00:23:09,700
So it's pretty free for me to create a world position that has that

466
00:23:09,700 --> 00:23:12,700
and ask for the difference between that and the camera just like,

467
00:23:12,700 --> 00:23:15,100
we've been doing a million times before, right?

468
00:23:15,100 --> 00:23:16,300
So I have a world position.

469
00:23:17,300 --> 00:23:19,700
This is the chunk center, right?

470
00:23:20,700 --> 00:23:23,900
And that's just going to be equal to excuse me.

471
00:23:26,100 --> 00:23:31,100
The chunk Center is chunk x equals, whatever the chunks chunk exes.

472
00:23:31,600 --> 00:23:34,600
And you know what, I probably should do do I already have a function

473
00:23:34,700 --> 00:23:38,200
for getting the chunk Center because that's what I would really like

474
00:23:38,700 --> 00:23:39,800
Center chunk Point.

475
00:23:39,800 --> 00:23:40,800
That's what I want.

476
00:23:41,300 --> 00:23:44,000
So what I really want to do is have one of these that just gets me at

477
00:23:44,000 --> 00:23:46,400
for a chunk and that's pretty trivial to do as well.

478
00:23:46,400 --> 00:23:49,300
So, centered chunk point that just takes a child chunk.

479
00:23:50,300 --> 00:23:51,000
Exactly.

480
00:23:51,100 --> 00:23:55,300
That's why I wrote chunk like that and actually does this for it.

481
00:23:56,100 --> 00:23:57,400
That's that's exactly what I want.

482
00:23:57,400 --> 00:23:58,700
So I'm going to grab one of those.

483
00:24:00,400 --> 00:24:05,800
And I'm going to say that that's just equal to whatever this chunk had

484
00:24:05,800 --> 00:24:08,700
in it, and so that's going to get me the location.

485
00:24:08,700 --> 00:24:09,100
Oops.

486
00:24:10,200 --> 00:24:12,700
That's going to get me a location of that result.

487
00:24:12,800 --> 00:24:13,300
There we go.

488
00:24:14,500 --> 00:24:17,300
So I'm going to do that and so I can just say centered chunk point,

489
00:24:17,500 --> 00:24:18,000
right?

490
00:24:18,600 --> 00:24:21,100
And that's going to be the central point of this junk.

491
00:24:21,900 --> 00:24:24,900
So then I could do my subtraction and find out where it actually is

492
00:24:24,900 --> 00:24:26,000
relative to the camera.

493
00:24:26,000 --> 00:24:28,500
So this is the relative Center P, right?

494
00:24:30,600 --> 00:24:34,500
And all I have to do, there is say I want to know how to get from the

495
00:24:34,500 --> 00:24:35,800
camera, right?

496
00:24:36,600 --> 00:24:38,400
To that chunk Center.

497
00:24:39,400 --> 00:24:41,000
That gives me the relative P.

498
00:24:41,300 --> 00:24:45,900
So then I'm good and I can now draw the rectangle to whatever the

499
00:24:45,900 --> 00:24:46,100
draw.

500
00:24:46,100 --> 00:24:53,000
Buffer actually, is now I think we just need the rail P, XY here.

501
00:24:53,000 --> 00:24:56,400
And this scan has to be in meters to pixels right?

502
00:24:56,400 --> 00:25:00,300
As we always know, and it also has to be plus the screen Center.

503
00:25:00,400 --> 00:25:02,500
Press it, plus the sorry, the screen Center.

504
00:25:03,900 --> 00:25:04,500
Do we have?

505
00:25:06,300 --> 00:25:07,700
Here's our screen center.

506
00:25:08,600 --> 00:25:10,200
Do we actually compute that as a

507
00:25:13,900 --> 00:25:17,100
We never actually, we need to make this an actual X.

508
00:25:17,600 --> 00:25:18,500
This actually needs.

509
00:25:18,500 --> 00:25:20,200
It's been too long coming.

510
00:25:20,400 --> 00:25:23,300
This actually needs to be just a vector, right?

511
00:25:24,000 --> 00:25:27,900
That has the things in it, that we need something like this, right?

512
00:25:30,400 --> 00:25:30,900
There we go.

513
00:25:32,100 --> 00:25:34,600
And again, so this is again, just kind of compensating for our lack of

514
00:25:34,600 --> 00:25:35,200
render anise.

515
00:25:35,300 --> 00:25:42,100
It's considered plus, m, 2 pixels on that, on that relative one and

516
00:25:42,700 --> 00:25:44,600
yeah, that should basically draw it.

517
00:25:44,600 --> 00:25:48,400
We just need to know how big it is now and to know how big it is all.

518
00:25:48,400 --> 00:25:49,500
We would really need to do.

519
00:25:49,500 --> 00:25:51,400
I've got to give the color too, I suppose.

520
00:25:51,800 --> 00:25:54,700
Let's make it a lovely yellow for now.

521
00:25:56,600 --> 00:25:59,900
In order to draw that we would need to know how big it is, how big?

522
00:25:59,900 --> 00:26:00,000
A

523
00:26:00,200 --> 00:26:02,400
Chunk is, I'm not sure.

524
00:26:02,400 --> 00:26:06,300
Do we have something that gets chunk sizes out, or do we have to

525
00:26:06,300 --> 00:26:07,000
access directly?

526
00:26:07,000 --> 00:26:08,400
I mean, it's in there, right?

527
00:26:08,700 --> 00:26:12,100
It's a, it's chunk, Tim and M, right?

528
00:26:12,200 --> 00:26:13,700
So just be half of that.

529
00:26:13,700 --> 00:26:17,200
I guess what I could do is just say, half of whatever the world is

530
00:26:17,800 --> 00:26:20,200
chunk gym and M, right?

531
00:26:20,500 --> 00:26:23,700
Tim in m, j and m dot XY.

532
00:26:23,800 --> 00:26:26,600
That's the half of that and so that would draw it.

533
00:26:27,500 --> 00:26:28,300
So I can do that.

534
00:26:28,300 --> 00:26:30,000
I got to fix the the stuff that

535
00:26:30,100 --> 00:26:30,400
I did.

536
00:26:30,400 --> 00:26:32,800
What is where is the buffer to find here?

537
00:26:34,000 --> 00:26:34,500
There we go.

538
00:26:35,100 --> 00:26:36,400
Let's go ahead and move that up.

539
00:26:39,700 --> 00:26:41,800
So, probably should lose the surrender.

540
00:26:41,800 --> 00:26:42,700
Comment up to

541
00:26:46,200 --> 00:26:49,100
And this is all for the draw buffer.

542
00:26:49,300 --> 00:26:49,800
So,

543
00:26:51,800 --> 00:26:58,400
so pixels to meters is not off the gamestate, it's just a variable and

544
00:26:58,400 --> 00:26:59,800
subtract needs to take

545
00:27:00,000 --> 00:27:01,400
Dresses of these guys.

546
00:27:03,600 --> 00:27:07,900
And of course, it needs to take a world as well screen center X screen

547
00:27:07,900 --> 00:27:08,600
center.

548
00:27:08,600 --> 00:27:10,900
Why that?

549
00:27:10,900 --> 00:27:15,600
I just made into a vector and this is actually I could have just done

550
00:27:16,200 --> 00:27:18,100
if the bitmap with was actually a D2 here.

551
00:27:18,100 --> 00:27:19,400
This would be a nice vector equation.

552
00:27:19,700 --> 00:27:23,300
Probably should clean that up at some point one more time, do that.

553
00:27:25,100 --> 00:27:28,500
All right, so let's take a look at what that does.

554
00:27:29,300 --> 00:27:32,600
I wanted to see if that would do some and it does absolutely nothing.

555
00:27:32,600 --> 00:27:33,900
Oh wait you know what?

556
00:27:34,300 --> 00:27:39,400
That's because I put that you can't clear the screen after drawing

557
00:27:39,400 --> 00:27:39,900
stuff.

558
00:27:40,900 --> 00:27:44,500
Yeah to say the least, this right here clears, the screen so that kind

559
00:27:44,500 --> 00:27:49,000
of needs to be happening at the very outset of rendering to say the

560
00:27:49,000 --> 00:27:49,500
least.

561
00:27:49,800 --> 00:27:50,400
All right?

562
00:27:50,700 --> 00:27:52,100
Let's try that one more time.

563
00:27:52,700 --> 00:27:54,800
So do I actually see any boundaries, I do?

564
00:27:55,000 --> 00:27:56,000
Not see any boundaries.

565
00:27:56,000 --> 00:27:57,800
Why do I not see any boundaries?

566
00:27:58,400 --> 00:28:00,500
Let's let's double-check what's going on in there?

567
00:28:05,400 --> 00:28:06,100
Let's take a look.

568
00:28:06,200 --> 00:28:10,200
Okay, so we come in here and we clear the screen which is good.

569
00:28:10,900 --> 00:28:12,200
We grab that screen center.

570
00:28:12,200 --> 00:28:15,600
And so then we come in here and we grab the screen with in M.

571
00:28:15,600 --> 00:28:17,000
It's 22 by 12.

572
00:28:17,000 --> 00:28:18,400
We never knew that for this first time.

573
00:28:18,400 --> 00:28:20,100
We know how big our Playfield is 22.

574
00:28:20,100 --> 00:28:21,100
Metres by 12 meters.

575
00:28:22,700 --> 00:28:24,300
Then we're going to make that camera bands.

576
00:28:24,300 --> 00:28:25,800
Let's take a look at what that looks like.

577
00:28:26,400 --> 00:28:35,000
Can't wear bounds - 11:40 11:40 that's wrong.

578
00:28:36,400 --> 00:28:37,700
I should have said wreck.

579
00:28:37,800 --> 00:28:39,200
I don't know why I said half Tim.

580
00:28:39,800 --> 00:28:41,000
That was that was a mistake.

581
00:28:41,700 --> 00:28:44,800
Not has nothing to do with our problem, but that was that was not

582
00:28:44,800 --> 00:28:45,300
true.

583
00:28:45,900 --> 00:28:49,000
That's supposed to be rectangle centered dim because these are

584
00:28:49,000 --> 00:28:52,000
actually the whole the size of the whole thing.

585
00:28:52,600 --> 00:28:56,100
So, yeah, slight mistake there, you know, it happens.

586
00:28:56,600 --> 00:28:57,500
Let's go back through.

587
00:28:59,500 --> 00:29:01,800
And so, then we map these into chunks Pace.

588
00:29:02,400 --> 00:29:06,000
Let's take a look at what happens, their main chunk P Max chunk p.

589
00:29:07,800 --> 00:29:10,600
And so we're going between chunk, 0 and 1.

590
00:29:11,500 --> 00:29:13,500
That seems fairly reasonable.

591
00:29:14,200 --> 00:29:16,800
And there should be chunks there because we have some World stuff

592
00:29:16,800 --> 00:29:17,200
there.

593
00:29:17,800 --> 00:29:21,600
Let's take a look at what the trunk Center P returns for that and that

594
00:29:21,600 --> 00:29:23,100
is what we would have expected.

595
00:29:23,900 --> 00:29:28,300
Let's see what the relative P comes back as for that P.

596
00:29:29,900 --> 00:29:34,700
I forgot the camera again, totally reasonable M for that as a

597
00:29:34,700 --> 00:29:35,900
particular point.

598
00:29:36,200 --> 00:29:41,400
And so I wonder what oh, again.

599
00:29:42,100 --> 00:29:44,800
Yeah, we need to, I can't wait till we get to the render.

600
00:29:44,800 --> 00:29:46,500
So we don't have to keep dealing with all of this.

601
00:29:46,700 --> 00:29:49,800
Obviously, this is in meters which is no good.

602
00:29:50,200 --> 00:29:53,300
We need this to actually be in pixels, right?

603
00:29:54,500 --> 00:29:56,700
And that's really just something you want to set all that up on your

604
00:29:56,700 --> 00:29:58,000
render, then forget about it.

605
00:30:01,100 --> 00:30:02,100
Oh right.

606
00:30:02,500 --> 00:30:05,800
Well two things about this one is I have to remember to actually draw

607
00:30:06,300 --> 00:30:07,000
a rectangle.

608
00:30:08,300 --> 00:30:12,800
I need to remember to actually draw the rectangle as a border but also

609
00:30:12,900 --> 00:30:16,600
I'm doing something weird there, where it seems to be snapping to the

610
00:30:16,600 --> 00:30:19,000
cameras location and that sure why that is.

611
00:30:19,300 --> 00:30:22,300
So let's see, screen centers plus whatever.

612
00:30:22,300 --> 00:30:27,000
The relative position of the camera thing is relative to the camera

613
00:30:27,000 --> 00:30:29,700
that seems right to me.

614
00:30:30,100 --> 00:30:30,600
And then

615
00:30:31,000 --> 00:30:35,500
And the dimension not sure why that was doing what that was doing.

616
00:30:35,800 --> 00:30:39,900
That seems kind of odd to me, but that's okay.

617
00:30:39,900 --> 00:30:43,700
For let's, let's build a bug that a second but I want to do is draw a

618
00:30:43,700 --> 00:30:47,700
rectangle outline, which I believe we actually did here, right?

619
00:30:47,700 --> 00:30:52,900
Didn't we do some kind of an outline outline push wrecked outline.

620
00:30:54,900 --> 00:30:56,500
Of course, we didn't actually.

621
00:30:57,000 --> 00:31:01,100
Looks like, we never actually gave ourselves one of these, that, that

622
00:31:01,100 --> 00:31:04,500
draws it directly mmm-hmm.

623
00:31:07,600 --> 00:31:09,800
Well, sort of all just make one

624
00:31:10,800 --> 00:31:11,500
Let's see.

625
00:31:12,100 --> 00:31:13,200
Draw a rectangle.

626
00:31:14,600 --> 00:31:16,100
And draw a tangle outline.

627
00:31:16,100 --> 00:31:22,200
So let's do draw a rectangle outline and we'll have that take exactly

628
00:31:22,200 --> 00:31:24,300
the same stuff as our draw.

629
00:31:24,300 --> 00:31:25,400
Rectangle function did.

630
00:31:28,300 --> 00:31:31,600
And this will basically do exactly the same things that we were doing

631
00:31:31,600 --> 00:31:37,800
before except it'll do things in pixels instead of doing them in.

632
00:31:38,400 --> 00:31:43,600
Yeah, in M like it was doing before so we'll do a thickness here will

633
00:31:43,600 --> 00:31:48,200
say that it's going to be, you know, I don't know, two pixels thick I

634
00:31:48,200 --> 00:31:51,400
guess that seems fair.

635
00:31:52,300 --> 00:31:54,300
And so then we'll just call draw a rectangle.

636
00:31:56,100 --> 00:31:59,500
With each of the pieces just the same way that we did them before.

637
00:32:00,100 --> 00:32:01,400
So, there's that buffer.

638
00:32:04,000 --> 00:32:07,800
And then we just need to look at none of this stuff matters.

639
00:32:07,800 --> 00:32:13,400
We don't have offsets these, we just have mins and Max's, let's get

640
00:32:13,400 --> 00:32:17,800
rid of that and get rid of that and get rid of that.

641
00:32:18,500 --> 00:32:22,600
And the RG bees will be the same or Judy.

642
00:32:25,900 --> 00:32:27,200
RGB.

643
00:32:28,600 --> 00:32:28,900
Oops.

644
00:32:31,400 --> 00:32:33,600
Of course, this is a little bit nasty, what I'm doing here because

645
00:32:33,600 --> 00:32:35,400
usually when you're debugging something, you don't want to introduce a

646
00:32:35,400 --> 00:32:36,100
new function.

647
00:32:36,500 --> 00:32:39,800
So yeah, we'll probably have to test this and make sure that it works

648
00:32:39,800 --> 00:32:41,500
properly before we actually use it for anything.

649
00:32:41,500 --> 00:32:47,400
But that said, when we do this, let's see, we should be able to do

650
00:32:47,400 --> 00:32:49,700
this by inspection relatively easily.

651
00:32:49,800 --> 00:32:54,000
We have a Min and Max and then we just need to know what the thickness

652
00:32:54,000 --> 00:32:54,600
stuff is.

653
00:32:54,900 --> 00:32:58,000
So for producing new mins, and Maxes, from this, it's going to be

654
00:32:58,000 --> 00:32:59,800
pretty straightforward, right?

655
00:33:01,100 --> 00:33:04,700
Basically, all we need to do here is say for the top and the bottom.

656
00:33:05,000 --> 00:33:06,900
In fact, I don't even know why I bother copying pasting.

657
00:33:06,900 --> 00:33:11,000
This code, this is so simple, but for the top and the bottom to

658
00:33:11,000 --> 00:33:12,800
produce the new minimum, right?

659
00:33:12,900 --> 00:33:15,100
We just want the actual minimum,

660
00:33:16,400 --> 00:33:19,300
in fact, I can do this in terms of what's going to do this this way,

661
00:33:19,900 --> 00:33:20,300
right?

662
00:33:22,600 --> 00:33:23,600
Fill it in exactly.

663
00:33:29,300 --> 00:33:32,400
Okay, so, same exact drill, as before, if I want to draw this

664
00:33:32,400 --> 00:33:33,000
rectangle.

665
00:33:33,700 --> 00:33:37,600
I'm going to start, you know, in the, the bottom left corner, and

666
00:33:37,600 --> 00:33:42,700
obviously, I want to start on the left and and draw to the right.

667
00:33:42,700 --> 00:33:46,500
So, the, the Min and the max are exactly the same for the x coordinate

668
00:33:46,500 --> 00:33:47,700
here, right?

669
00:33:48,000 --> 00:33:48,700
That makes sense.

670
00:33:49,600 --> 00:33:52,900
So they're just going to draw from the, in the same would be true for

671
00:33:52,900 --> 00:33:56,100
this one because we're just drawing the same rectangle from left to

672
00:33:56,100 --> 00:33:56,700
right here.

673
00:33:57,100 --> 00:33:58,300
Nothing particularly odd happening.

674
00:33:59,800 --> 00:34:02,600
There is one thing we might want to do where we we probably want to

675
00:34:02,600 --> 00:34:03,700
back up by the thickness.

676
00:34:03,700 --> 00:34:09,100
So we could say this is - lets just call that t, right?

677
00:34:10,199 --> 00:34:14,199
So we'll back up by the tea and then we'll go out, you know, on the T

678
00:34:14,699 --> 00:34:15,300
right?

679
00:34:16,000 --> 00:34:18,400
And and you know what, I'm going to call this R for radius because

680
00:34:18,400 --> 00:34:22,199
really we're going in and out by it, that makes sense, right?

681
00:34:22,400 --> 00:34:23,600
So we're going to do that.

682
00:34:23,800 --> 00:34:28,300
And then our X at our our y minimum is going to

683
00:34:28,400 --> 00:34:35,000
Be just the, the Min y minus, the are to the Min y, plus the are right

684
00:34:35,300 --> 00:34:36,699
or the V-Max.

685
00:34:38,300 --> 00:34:42,199
Why - the are and the V-Max y plus Z are.

686
00:34:42,400 --> 00:34:46,199
So again, I'm just drawing from the left to the right, and then using,

687
00:34:46,199 --> 00:34:48,400
either the minimum a little bit around the minimum, or a little bit

688
00:34:48,400 --> 00:34:53,800
around the maximum to produce that thick line for my rectangle outline

689
00:34:53,800 --> 00:34:58,300
there, and then the exact same thing in, you know, Swizzle to

690
00:34:58,500 --> 00:35:01,100
Around for the left and right sides.

691
00:35:01,600 --> 00:35:02,000
Right.

692
00:35:02,000 --> 00:35:06,000
I'm going to say, OK, I want to draw from the top to the bottom,

693
00:35:06,100 --> 00:35:06,800
right?

694
00:35:07,100 --> 00:35:10,700
So in this case, it's my, it's my ex that's going to go.

695
00:35:13,000 --> 00:35:16,900
If that it's my ex that's going to go just within a narrow band of

696
00:35:16,900 --> 00:35:22,200
itself like so and it's going to be the the left side is going to be 2

697
00:35:22,200 --> 00:35:22,600
Min.

698
00:35:23,100 --> 00:35:25,100
This side is going to be the max the right side.

699
00:35:26,400 --> 00:35:27,600
Not having good typing day.

700
00:35:28,800 --> 00:35:29,300
There we go.

701
00:35:30,600 --> 00:35:32,000
And same thing here.

702
00:35:37,800 --> 00:35:38,300
Okay.

703
00:35:39,000 --> 00:35:39,800
And

704
00:35:41,800 --> 00:35:48,100
The why will range between it's full, you know, range from the Min to

705
00:35:48,100 --> 00:35:50,000
the max as you might expect and that'll happen.

706
00:35:50,000 --> 00:35:51,100
The same in both cases.

707
00:35:53,600 --> 00:35:54,100
Right.

708
00:35:55,700 --> 00:35:58,400
So nothing particularly out there, okay?

709
00:35:58,700 --> 00:35:59,600
So let's just spot.

710
00:35:59,600 --> 00:35:59,800
Check this.

711
00:36:00,000 --> 00:36:01,800
Again, for top and the bottom.

712
00:36:01,800 --> 00:36:06,100
So first, we're going to draw the top and really this is this is not

713
00:36:06,200 --> 00:36:11,100
actually true in all cases, so we probably should say Min and Max X,

714
00:36:11,100 --> 00:36:13,500
because if we flipped our coordinate system, it wouldn't be top and

715
00:36:13,500 --> 00:36:16,600
bottom in that order would be bottom and top but either way.

716
00:36:17,700 --> 00:36:22,600
So we start off with that Min and we subtract our from it, because

717
00:36:22,600 --> 00:36:26,300
we're trying to be a little bit further to the left when we start and

718
00:36:26,300 --> 00:36:29,500
we go to the right again, start on the left.

719
00:36:29,500 --> 00:36:29,900
Go to

720
00:36:30,000 --> 00:36:33,200
The right and for the top and the bottom ones, we do first.

721
00:36:33,200 --> 00:36:35,300
The Min minus r 1 plus r.

722
00:36:35,300 --> 00:36:38,800
So we're just doing a radius of our around that Min and then the same

723
00:36:38,800 --> 00:36:40,200
with the max, right?

724
00:36:40,700 --> 00:36:42,100
Very very straightforward there.

725
00:36:42,800 --> 00:36:46,400
Then doing it the other time, we're doing exactly the opposite, so

726
00:36:46,400 --> 00:36:49,800
we're going to start at the at the top.

727
00:36:49,800 --> 00:36:53,100
Start at the top, go to the bottom, go to the bottom, right?

728
00:36:53,200 --> 00:36:56,500
And if that top one, we want the left side, - are the left side.

729
00:36:56,500 --> 00:36:58,200
Plus are the left side, right?

730
00:36:58,200 --> 00:36:58,400
Side?

731
00:36:58,400 --> 00:36:59,800
The right side - are on the right side.

732
00:37:00,000 --> 00:37:05,100
Are so that seems pretty reasonable and we could also pass this in so

733
00:37:05,100 --> 00:37:07,900
if we wanted to because we could just make the thickness of parameter

734
00:37:08,000 --> 00:37:13,100
so we can draw the things as thick as we want them to be which seems

735
00:37:13,300 --> 00:37:14,100
pretty reasonable.

736
00:37:14,200 --> 00:37:18,100
Oh oops, forgot we have in our hmm, so I can't do radius.

737
00:37:21,000 --> 00:37:23,800
All right back to T that could see it is.

738
00:37:25,000 --> 00:37:25,700
So sad.

739
00:37:27,200 --> 00:37:29,000
We really need is for that to be color.

740
00:37:29,200 --> 00:37:31,100
In fact, you know what,

741
00:37:32,400 --> 00:37:33,900
I'm going for it.

742
00:37:34,100 --> 00:37:34,700
I'm going for it.

743
00:37:34,700 --> 00:37:35,100
People.

744
00:37:35,700 --> 00:37:36,800
Are you seeing this happen?

745
00:37:37,200 --> 00:37:38,600
It happened right there.

746
00:37:39,300 --> 00:37:40,000
You saw it.

747
00:37:40,300 --> 00:37:40,600
You saw it.

748
00:37:40,600 --> 00:37:41,000
Didn't you?

749
00:37:41,000 --> 00:37:42,100
I know you guys saw it.

750
00:37:45,600 --> 00:37:46,200
So, there we go.

751
00:37:49,700 --> 00:37:50,200
Lovely.

752
00:37:51,400 --> 00:37:52,000
Okay.

753
00:37:52,500 --> 00:37:53,700
Oops, and that's car.

754
00:37:55,900 --> 00:38:00,700
Now, this is going to be draw a rectangle outline now.

755
00:38:02,300 --> 00:38:03,700
And it does not take 6 arguments.

756
00:38:03,700 --> 00:38:07,700
That's true because oh snap I just added the color vector.

757
00:38:09,000 --> 00:38:11,200
And so now it is, all right?

758
00:38:12,800 --> 00:38:16,700
So now we just have to figure out what I totally totally computed this

759
00:38:16,700 --> 00:38:20,000
wrong and I don't know why.

760
00:38:20,000 --> 00:38:23,200
And so, we're going to have to go figure out what on Earth is

761
00:38:23,200 --> 00:38:25,200
happening there, because that's just totally wrong.

762
00:38:25,600 --> 00:38:27,900
Can see, it's almost right, right?

763
00:38:27,900 --> 00:38:31,300
It's almost getting to the part where it seems reasonable, but it's

764
00:38:31,300 --> 00:38:34,800
still kind of just kind of messed up.

765
00:38:34,900 --> 00:38:37,200
So, let's try and figure out what's going on there because I have no

766
00:38:37,200 --> 00:38:37,600
idea.

767
00:38:38,600 --> 00:38:40,300
And if I don't have any idea,

768
00:38:42,900 --> 00:38:44,000
Then we can't move forward.

769
00:38:44,400 --> 00:38:48,400
Okay, so drawing a rectangle outline that looks like.

770
00:38:48,400 --> 00:38:51,000
It was doing exactly the same thing as the filled rectangle is doing.

771
00:38:52,100 --> 00:38:54,500
But so I don't know, there might be some bugs in it still, but at the

772
00:38:54,500 --> 00:38:57,300
moment I want to go back here and just take a quick look at this and

773
00:38:57,300 --> 00:38:58,200
see what I was doing.

774
00:38:58,600 --> 00:38:59,200
Oddly

775
00:39:00,700 --> 00:39:01,500
so,

776
00:39:04,000 --> 00:39:08,000
When I was 25, when I was Finding, I guess.

777
00:39:08,000 --> 00:39:08,600
Let's see.

778
00:39:10,900 --> 00:39:11,200
We did.

779
00:39:11,200 --> 00:39:14,200
The rec center, Doom happened to chunk space.

780
00:39:15,600 --> 00:39:16,800
We mapped into the chunk space.

781
00:39:16,800 --> 00:39:20,800
So now we've got chunks iterating over the chunks, we get the chunks

782
00:39:20,800 --> 00:39:24,100
enters out, we subtract them from wherever the camera is, which gives

783
00:39:24,100 --> 00:39:26,900
them something relative to the screen center, which is what we'd

784
00:39:26,900 --> 00:39:28,500
expect, right?

785
00:39:30,400 --> 00:39:33,500
So, this should be drawing a rectangle.

786
00:39:35,300 --> 00:39:39,700
I don't I don't really understand why that is failing to draw the

787
00:39:39,700 --> 00:39:46,800
rectangle that we would expect screen center X Plus m, 2 pixels Rel

788
00:39:46,800 --> 00:39:48,700
p-x, why?

789
00:39:50,100 --> 00:39:53,400
Because that is whatever the distance is between that chunk Center

790
00:39:53,400 --> 00:39:55,600
that we just got and the camera P.

791
00:39:56,100 --> 00:40:00,000
So what's the problem?

792
00:40:01,600 --> 00:40:05,900
M, 2, pixels, we are scaling properly and we're offsetting properly.

793
00:40:07,500 --> 00:40:09,900
I'm confused.

794
00:40:10,600 --> 00:40:12,900
I do sort of wonder.

795
00:40:17,900 --> 00:40:20,900
I do sort of wonder if there's something weird going on here but I

796
00:40:20,900 --> 00:40:22,500
suspect it probably isn't.

797
00:40:28,300 --> 00:40:28,700
oh,

798
00:40:30,300 --> 00:40:30,800
Duh.

799
00:40:32,400 --> 00:40:35,000
Draw a rectangle to does not take a width and a height.

800
00:40:35,700 --> 00:40:40,300
I just, instead of looking at it, I just was like, oh yeah, the width

801
00:40:40,300 --> 00:40:43,400
and the height it's taking within height there because I looked at

802
00:40:43,400 --> 00:40:45,900
that function, but that just happens to be based off of 0.

803
00:40:46,200 --> 00:40:47,500
So that's just stupid.

804
00:40:47,500 --> 00:40:48,700
That was just me being dumb.

805
00:40:49,400 --> 00:40:51,700
I don't know if that's a love shame worthy, but it just me being

806
00:40:51,700 --> 00:40:52,400
stupid.

807
00:40:52,600 --> 00:40:57,100
So really if this is direct rectangular outline, what we need to do is

808
00:40:57,100 --> 00:41:00,000
say there's the screen key of it, right?

809
00:41:00,200 --> 00:41:02,000
Is this and

810
00:41:02,200 --> 00:41:05,800
And we need the screen dimension.

811
00:41:07,200 --> 00:41:12,300
Is this and we need to actually do compute the Min and the max, right?

812
00:41:12,300 --> 00:41:16,600
So it's - screen dim so screen.

813
00:41:16,600 --> 00:41:18,400
P+ screen dim

814
00:41:21,200 --> 00:41:21,700
Simple.

815
00:41:22,500 --> 00:41:25,900
Alright, so that was just a bunch of stupidity.

816
00:41:26,400 --> 00:41:29,900
Oh and of course again we have our, we have our, why flipping problem.

817
00:41:30,500 --> 00:41:31,700
That is always super annoying.

818
00:41:32,200 --> 00:41:35,200
I feel like that's one of those things where you just like, at this

819
00:41:35,200 --> 00:41:38,300
point, I probably should have just introduced some render stuff at the

820
00:41:38,300 --> 00:41:42,100
beginning, because I said it so many times, but it's always really

821
00:41:42,100 --> 00:41:44,400
hard to know, right?

822
00:41:44,400 --> 00:41:47,400
I mean, you never, you never really know.

823
00:41:49,400 --> 00:41:52,000
What's going to save you time versus cost you time.

824
00:41:52,300 --> 00:41:57,500
Sometimes it's really clear and other times it's just not and like

825
00:41:57,500 --> 00:41:59,800
maybe it's still the case that this was a smarter thing.

826
00:42:00,000 --> 00:42:01,700
You to just handle it all the time.

827
00:42:04,500 --> 00:42:08,300
You know, it's just, it's just really tough and so I don't know what

828
00:42:08,300 --> 00:42:09,500
the answer is to that.

829
00:42:10,000 --> 00:42:11,000
I really don't.

830
00:42:12,100 --> 00:42:15,000
All right, so we're getting there, although we still have a problem

831
00:42:15,000 --> 00:42:18,100
which is are chunks are drawn to Tiny, right?

832
00:42:18,100 --> 00:42:21,300
Because obviously that can't be what the chunks actually are.

833
00:42:21,500 --> 00:42:26,500
Because if that was how big the chunks actually were, then we would

834
00:42:27,100 --> 00:42:28,900
they would not actually be able to cover everything.

835
00:42:30,000 --> 00:42:34,700
So I'm off by a half bear, let's see what, that's why that actually is

836
00:42:35,200 --> 00:42:35,800
the case.

837
00:42:36,100 --> 00:42:40,500
So oh, because I already did the half dim here, that's why

838
00:42:42,700 --> 00:42:43,200
All right.

839
00:42:47,300 --> 00:42:49,900
All right, so now we've got our chunks and we can see how big they

840
00:42:49,900 --> 00:42:50,100
are.

841
00:42:50,100 --> 00:42:52,600
You kind of see that, they're like way too large.

842
00:42:52,600 --> 00:42:56,500
I think for storing, if we were to use those as our ground buffer

843
00:42:56,500 --> 00:43:01,100
points, I think they're just they're much too big and so I do Wonder a

844
00:43:01,100 --> 00:43:04,400
little bit if maybe we should make them smaller and try to go with

845
00:43:04,400 --> 00:43:05,600
that as our tiling size.

846
00:43:05,600 --> 00:43:07,300
So that everything's kind of uniform.

847
00:43:08,100 --> 00:43:10,900
So I don't know if that's a good or a bad idea.

848
00:43:10,900 --> 00:43:13,400
Let's take a look at what would happen real quick.

849
00:43:13,500 --> 00:43:16,900
If I was to change that size down,

850
00:43:17,500 --> 00:43:20,100
So that it was a porter of its size, right?

851
00:43:21,600 --> 00:43:22,600
I don't know what would happen there.

852
00:43:22,600 --> 00:43:23,100
Exactly.

853
00:43:23,100 --> 00:43:27,400
But you can kind of take a look at this and see, that's a more

854
00:43:27,400 --> 00:43:32,600
manageable size of a chunk in terms of something that we would use

855
00:43:32,600 --> 00:43:36,000
right to store Graphics.

856
00:43:37,100 --> 00:43:40,600
I feel like that's, you know, that's not, it's possibly a little

857
00:43:40,600 --> 00:43:44,500
larger than maybe I would want, but it's workable, right?

858
00:43:44,600 --> 00:43:46,000
It's a workable size.

859
00:43:47,000 --> 00:43:49,700
And we could even go potentially a little bit smaller than that.

860
00:43:49,700 --> 00:43:50,400
It depends.

861
00:43:50,400 --> 00:43:52,900
You know, there's obviously costs involved in doing each of these

862
00:43:52,900 --> 00:43:59,100
things but you can kind of see now where we're at and so maybe we just

863
00:43:59,100 --> 00:44:04,800
maybe we just do, maybe we just try doing the the ground chunks at

864
00:44:04,800 --> 00:44:07,700
that resolution and we see how that goes.

865
00:44:08,000 --> 00:44:14,000
So, the other thing we could do now is actually set that chunk size,

866
00:44:14,000 --> 00:44:16,900
based on what we want, you know,

867
00:44:17,000 --> 00:44:20,500
How big a 256 by 256 block is actually.

868
00:44:21,100 --> 00:44:24,700
So for example, we could say instead of setting this house, instead of

869
00:44:24,700 --> 00:44:29,500
this having anything to do with tiles per chunk at all in fact,

870
00:44:29,500 --> 00:44:32,400
because we don't really care about that anymore, right tiles for chunk

871
00:44:32,400 --> 00:44:37,500
is literally not a thing if you take a look it just doesn't matter.

872
00:44:37,800 --> 00:44:43,200
So what we could do is instead back figure out how big 256 by 256 is

873
00:44:43,400 --> 00:44:46,500
and just say that, that's the size of the thing that we want to put

874
00:44:46,500 --> 00:44:46,800
there.

875
00:44:47,300 --> 00:44:48,000
Right?

876
00:44:48,100 --> 00:44:51,500
And make sure that chunks are exactly that size in float space, so

877
00:44:51,500 --> 00:44:54,500
that it all kind of just works out relatively nicely.

878
00:44:57,100 --> 00:44:59,300
This would also be a good.

879
00:45:01,000 --> 00:45:05,800
If if we were being super conscientious, we would probably also want

880
00:45:05,800 --> 00:45:11,200
to make our m 2 pixels something integral right because right now our

881
00:45:11,200 --> 00:45:15,900
m 2 pixels you know we're setting that as some kind of particularly

882
00:45:15,900 --> 00:45:20,000
odd value and so if we were going to set it let's see what it actually

883
00:45:20,000 --> 00:45:22,600
is maybe we can set it to something that's going to be a little more

884
00:45:22,600 --> 00:45:28,000
amenable to making the renderer and the world kind of get along nicer

885
00:45:28,000 --> 00:45:29,700
in that sense, right.

886
00:45:30,200 --> 00:45:31,200
Let's take a look there.

887
00:45:31,300 --> 00:45:36,000
So, when we set our m, 2 pixels right here,

888
00:45:37,600 --> 00:45:41,600
What's a coming out to be gamestate m, 2 pixels.

889
00:45:43,500 --> 00:45:45,900
So you know that's not a particularly friendly number.

890
00:45:47,100 --> 00:45:49,200
Similarly, the inverse of this

891
00:45:52,600 --> 00:45:54,000
Not a particularly friendly number.

892
00:45:54,100 --> 00:46:00,500
So it would be kind of nice, if there was a way for us to make these

893
00:46:00,500 --> 00:46:00,800
things.

894
00:46:00,800 --> 00:46:03,900
Be relatively, well, behaved, right, like a power of 2.

895
00:46:04,500 --> 00:46:09,500
So if we were to change it to say, 32 it's in between 32 and 64,

896
00:46:09,800 --> 00:46:10,400
right?

897
00:46:11,600 --> 00:46:15,600
But like if we were to do that, I wonder how hard that would be for us

898
00:46:15,600 --> 00:46:17,700
to get by if we were just say.

899
00:46:17,900 --> 00:46:20,800
M 2 pixels, you know is going to be 32.

900
00:46:21,200 --> 00:46:22,200
That's just what it's going to be.

901
00:46:22,600 --> 00:46:28,500
Right, that obviously changes the scale of our world, right?

902
00:46:28,800 --> 00:46:33,000
But it's kind of arbitrary where we place those things, but that looks

903
00:46:33,000 --> 00:46:38,900
kind of nice as a tiling size and we can just make our, you know, our

904
00:46:38,900 --> 00:46:42,300
our tile side and M are tile side in meters.

905
00:46:42,300 --> 00:46:44,000
Could I mean I've tried all side in pixels.

906
00:46:44,000 --> 00:46:45,100
We could we could change.

907
00:46:45,100 --> 00:46:48,100
We could we could make that kind of fungible to make it a little bit

908
00:46:48,100 --> 00:46:49,200
larger, right?

909
00:46:49,200 --> 00:46:52,100
Or something like this because they don't we don't really care.

910
00:46:52,400 --> 00:46:56,300
Outside of pixels is just something that we're using as a purely

911
00:46:56,300 --> 00:46:57,500
synthetic Concept.

912
00:46:58,300 --> 00:47:00,400
In fact, let me get rid of this, we can just get rid of this for now.

913
00:47:00,600 --> 00:47:02,600
So let's say we were going to do that right?

914
00:47:05,900 --> 00:47:07,500
When we were actually doing that.

915
00:47:09,500 --> 00:47:10,400
In our world.

916
00:47:12,400 --> 00:47:17,800
Let's see here, when we were doing this in our world, we initialized

917
00:47:17,800 --> 00:47:24,000
things, where was it right here tile side in meters.

918
00:47:24,400 --> 00:47:26,500
So where do we actually pass that in?

919
00:47:27,300 --> 00:47:29,000
Where do we, where do we set that?

920
00:47:30,100 --> 00:47:30,900
First of all.

921
00:47:31,100 --> 00:47:34,400
So I don't actually know, initialize, where we set it right here.

922
00:47:34,600 --> 00:47:38,600
So you pass the tile side in meters and we put the tile depth in

923
00:47:38,600 --> 00:47:39,900
meters, right?

924
00:47:40,200 --> 00:47:40,800
And

925
00:47:41,800 --> 00:47:44,300
Like I said, I don't know that we really care about that.

926
00:47:44,300 --> 00:47:48,600
Particularly much that tile side m is really just something that we're

927
00:47:48,600 --> 00:47:52,200
using as a totally synthetic concept.

928
00:47:52,500 --> 00:47:56,700
So I'm thinking that that we could probably just we could probably do

929
00:47:56,700 --> 00:47:59,800
without it right because really what we're doing is we're just using

930
00:47:59,800 --> 00:47:59,800
it.

931
00:48:00,300 --> 00:48:03,500
For this world creation stuff, the chunk position from towel position.

932
00:48:03,600 --> 00:48:05,700
That's really the only place we're using it at all.

933
00:48:07,400 --> 00:48:10,200
So I think we could I think we could get away with this, I think we

934
00:48:10,200 --> 00:48:15,600
could and if we did I think there'd be some bonuses for us in that.

935
00:48:17,100 --> 00:48:19,000
So I think maybe that's something we want to think.

936
00:48:19,000 --> 00:48:22,300
That's maybe something we want to try so if we were to initialize the

937
00:48:22,300 --> 00:48:26,900
world let's say not with that tile sided M let's just see what would

938
00:48:26,900 --> 00:48:29,900
happen if I start to pull that concept out.

939
00:48:30,100 --> 00:48:33,300
So tile sided m is no longer going to be in there.

940
00:48:35,500 --> 00:48:37,100
I guess tile depth in meters.

941
00:48:37,100 --> 00:48:38,200
Let's see what happens.

942
00:48:38,200 --> 00:48:40,300
If neither of those are in there, who's all the people that need it,

943
00:48:40,300 --> 00:48:40,800
right?

944
00:48:41,500 --> 00:48:46,400
So the people that need it, our other than our initialization, there's

945
00:48:46,400 --> 00:48:49,800
this function, which tries to do things in tile space, which we use

946
00:48:49,800 --> 00:48:51,600
only for World building at this point.

947
00:48:52,600 --> 00:48:57,900
There's, that's the same thing.

948
00:48:58,400 --> 00:48:59,700
It's all the same thing.

949
00:49:00,000 --> 00:49:04,400
Alright, so here this is basically just to do how big we want things

950
00:49:04,400 --> 00:49:04,900
to be for.

951
00:49:05,300 --> 00:49:06,300
Section purposes.

952
00:49:06,500 --> 00:49:10,300
Which again we could just our is purely arbitrary values that we just

953
00:49:10,300 --> 00:49:11,900
sighs to our home taste.

954
00:49:12,100 --> 00:49:16,000
Same thing with this, this is just camera bounds picked randomly

955
00:49:16,000 --> 00:49:16,500
these.

956
00:49:16,700 --> 00:49:19,000
In fact, this could now be driven off the screen size, which would be

957
00:49:19,000 --> 00:49:19,700
even better.

958
00:49:20,700 --> 00:49:25,600
So it looks like really, there's just not that much to this, so let's

959
00:49:25,600 --> 00:49:26,200
try it.

960
00:49:26,700 --> 00:49:28,100
Let's try going without it.

961
00:49:28,200 --> 00:49:28,700
Right?

962
00:49:29,200 --> 00:49:32,900
And and instead, making that chunk demand M be something that's

963
00:49:32,900 --> 00:49:35,000
derived off of a screen size off of

964
00:49:35,300 --> 00:49:38,900
something that will be easy for us to work with in a more exact way.

965
00:49:39,100 --> 00:49:39,600
Right.

966
00:49:40,300 --> 00:49:43,600
So when we do this initialization, what I want to do is I want to just

967
00:49:43,600 --> 00:49:46,700
pass the chunk Tim in M directly in here.

968
00:49:47,000 --> 00:49:49,800
So so we're going to pass that chunk Tim.

969
00:49:51,500 --> 00:49:58,200
In meters and we'll just assign it right jump given M like so.

970
00:50:02,200 --> 00:50:03,300
That's all we need to do there.

971
00:50:04,500 --> 00:50:06,900
We're going to go ahead and move this guy.

972
00:50:07,300 --> 00:50:11,600
This this function out because now this is going to be something

973
00:50:11,600 --> 00:50:15,000
that's really only used just temporarily with our world building

974
00:50:15,000 --> 00:50:18,000
stuff, and we'll get rid of it entirely once we move to a more

975
00:50:18,000 --> 00:50:19,300
freeform world-building.

976
00:50:20,100 --> 00:50:23,200
So right here, we don't even need to know this stuff.

977
00:50:23,200 --> 00:50:27,500
So we just have to have whatever that tile side m, whatever we want it

978
00:50:27,500 --> 00:50:28,900
to be, we can say that.

979
00:50:28,900 --> 00:50:30,000
It is what it is for now.

980
00:50:30,200 --> 00:50:34,200
Now, telecommuters just 3.0 just to use the old values, but again,

981
00:50:34,200 --> 00:50:37,500
because this is totally throw away and not important at all.

982
00:50:38,400 --> 00:50:40,600
So that'll be in there, which is fine.

983
00:50:43,500 --> 00:50:48,600
Let's see position from top position, got to put that up a bit higher.

984
00:50:52,300 --> 00:50:58,700
okay, and then we just need to fix these values because this is

985
00:50:58,700 --> 00:50:59,800
something that people that

986
00:51:00,000 --> 00:51:04,300
People were using for, you know, figuring out how high things weren't.

987
00:51:04,300 --> 00:51:06,400
So, these are sort of game, speccy, kind of things.

988
00:51:06,400 --> 00:51:07,700
So maybe I'll take this opportunity.

989
00:51:07,700 --> 00:51:10,800
This is turning into much more of a clean up day than I expected.

990
00:51:10,800 --> 00:51:14,000
I was going to work on the ground stuff, but I always like to take the

991
00:51:14,000 --> 00:51:17,800
opportunity to do things more, right when I can, because you always

992
00:51:17,800 --> 00:51:20,300
try to move things toward a good State and that's just, you know,

993
00:51:20,300 --> 00:51:21,500
something that we kind of need to do.

994
00:51:21,500 --> 00:51:22,700
So I don't know.

995
00:51:22,700 --> 00:51:26,000
This kind of feels like we want sort of a game, a set of gain metric

996
00:51:26,000 --> 00:51:28,100
things in here, and I guess I could stick them off of the game state

997
00:51:28,100 --> 00:51:29,900
for now, that's

998
00:51:30,000 --> 00:51:34,200
Seems totally fine, but this will basically be something like, you

999
00:51:34,200 --> 00:51:41,100
know, our floor height kind of a thing like typical floor height and

1000
00:51:41,100 --> 00:51:44,800
that'll actually be, you know, what these people would use for tile

1001
00:51:44,800 --> 00:51:49,900
depth at M, if that makes sense, and and that'll be set to that 3.0

1002
00:51:49,900 --> 00:51:50,500
value.

1003
00:51:53,500 --> 00:51:57,000
Let's see here tile depth in meters.

1004
00:51:57,000 --> 00:51:58,900
This will be typical floor height.

1005
00:51:59,700 --> 00:52:03,100
Let's keep going here to other people's stuff initialise world.

1006
00:52:03,500 --> 00:52:06,500
So that's going to be that chunk Tim right?

1007
00:52:06,500 --> 00:52:10,400
M and sort of what I was saying there was.

1008
00:52:10,600 --> 00:52:10,900
Okay.

1009
00:52:10,900 --> 00:52:15,800
So if m 2 pixels is 32, then a chump chump, dimming M.

1010
00:52:15,800 --> 00:52:21,800
I kind of want that to be based off of this value, so,

1011
00:52:24,400 --> 00:52:28,900
If I initialize some of these here, if m, 2 pixels was 32 and the

1012
00:52:28,900 --> 00:52:30,500
ground buffer height, right?

1013
00:52:30,500 --> 00:52:35,000
So ground, buffer, width and height these guys, if I move them up here

1014
00:52:35,500 --> 00:52:38,500
and think about these a little bit, if I just leave those up there for

1015
00:52:38,500 --> 00:52:45,100
now, if I want these guys to play nicely with this, right?

1016
00:52:46,700 --> 00:52:49,500
What was to try to think a how I could work out these values.

1017
00:52:49,500 --> 00:52:52,800
So 256 divided by 32 is 8, right?

1018
00:52:52,900 --> 00:52:54,000
So that will divide perfect.

1019
00:52:54,400 --> 00:52:58,100
If I want to say the chunk dim is the same number of meters as a

1020
00:52:58,100 --> 00:52:59,800
ground buffer, right?

1021
00:53:00,300 --> 00:53:04,400
So all I would have to do there is say alright and you know what, I'm

1022
00:53:04,400 --> 00:53:07,700
going to go ahead and do my meters since since I'm using here, I'm

1023
00:53:07,700 --> 00:53:09,800
going to say pixels to meters.

1024
00:53:12,700 --> 00:53:16,300
So if I want to make this come out exactly, which I kind of do, right,

1025
00:53:16,300 --> 00:53:18,700
just because I want to make it so that we're not having to do a bunch

1026
00:53:18,700 --> 00:53:21,700
of fractional things when we're actually talking about pixel stuff.

1027
00:53:24,100 --> 00:53:24,600
So

1028
00:53:27,200 --> 00:53:30,500
I have both of these and then I want to know how big that chunk

1029
00:53:30,500 --> 00:53:32,600
Dimension should be right?

1030
00:53:33,600 --> 00:53:36,800
So this is the world chunk dim in meters.

1031
00:53:38,700 --> 00:53:41,900
Really all I have to do is derive that from these two values.

1032
00:53:42,400 --> 00:53:48,700
So if I make this this here what I would do is I take the pixels to M

1033
00:53:48,800 --> 00:53:52,400
value and just take whatever that ground buffer with is that I want

1034
00:53:52,600 --> 00:53:56,200
and say, okay that's going to be how that's going to be how big

1035
00:53:58,200 --> 00:53:59,800
The chunks are right.

1036
00:54:00,000 --> 00:54:02,100
Now we just know they're 256 by 256.

1037
00:54:02,500 --> 00:54:03,000
Right?

1038
00:54:03,600 --> 00:54:07,700
And similarly I can do the ground before height here.

1039
00:54:10,100 --> 00:54:10,700
Same way.

1040
00:54:10,700 --> 00:54:12,300
And then this, the world Chunk.

1041
00:54:12,300 --> 00:54:13,700
We were just kind of saying that they were.

1042
00:54:14,000 --> 00:54:17,100
I think we were saying they were three high but, you know, I don't

1043
00:54:17,100 --> 00:54:18,200
know what we're going to do with that eventually.

1044
00:54:18,200 --> 00:54:20,000
Again, that's, that's more Z, handling stuff.

1045
00:54:20,000 --> 00:54:24,200
We've got to sort of work out over time, but once we've got that,

1046
00:54:25,700 --> 00:54:27,100
What's that typical floor height?

1047
00:54:27,400 --> 00:54:28,200
This guy right here.

1048
00:54:28,700 --> 00:54:32,900
All right, we'll do game State, typical floor height and that'll be

1049
00:54:33,600 --> 00:54:34,300
set to there.

1050
00:54:38,500 --> 00:54:40,800
Okay, so that's fine tile side and meters.

1051
00:54:42,000 --> 00:54:47,200
Again, this is kind of just like how big those stairwells are so tile

1052
00:54:47,200 --> 00:54:48,100
side and M.

1053
00:54:48,400 --> 00:54:50,000
I don't really know what we want to do there.

1054
00:54:50,000 --> 00:54:51,500
I mean, we can sort of leave that in here.

1055
00:54:51,500 --> 00:54:55,800
We could we could do that for just for these guys tile size of M, we

1056
00:54:55,800 --> 00:55:00,100
could just say that it's still what it was before even though we have

1057
00:55:00,100 --> 00:55:04,600
there's no such thing as a tile anymore, but that's fine and similar

1058
00:55:04,600 --> 00:55:04,900
the tile.

1059
00:55:05,100 --> 00:55:05,900
Hm.

1060
00:55:08,000 --> 00:55:09,400
With the typical floor height.

1061
00:55:11,300 --> 00:55:12,800
And then we just get rid of all these.

1062
00:55:13,400 --> 00:55:16,700
So we kind of are just using those in the World Builder now which is

1063
00:55:16,700 --> 00:55:19,200
really where they should have only probably existed in the past

1064
00:55:19,200 --> 00:55:21,500
because the other stuff doesn't care about this at.

1065
00:55:21,500 --> 00:55:22,500
All right?

1066
00:55:26,400 --> 00:55:27,300
Side m.

1067
00:55:29,500 --> 00:55:29,800
Yeah.

1068
00:55:34,400 --> 00:55:35,400
Depth in meters.

1069
00:55:37,100 --> 00:55:38,400
Decided m.

1070
00:55:39,600 --> 00:55:41,500
And so this is the camera bound stuff.

1071
00:55:41,600 --> 00:55:44,600
So I think the camera band stuff actually should be done a little

1072
00:55:44,600 --> 00:55:45,900
differently, right?

1073
00:55:46,500 --> 00:55:49,700
Because now, we're actually producing proper camera bounds.

1074
00:55:50,700 --> 00:55:52,700
Because I went ahead and did that, right?

1075
00:55:53,200 --> 00:55:57,400
This is actually the camera bounds screen with the meter screen,

1076
00:55:57,400 --> 00:56:01,100
height and beater, and M, right scammer Bound in M.

1077
00:56:01,100 --> 00:56:02,300
Anyway, should say

1078
00:56:03,600 --> 00:56:08,500
And so if we do that I feel like the best thing to do would be to use

1079
00:56:08,500 --> 00:56:11,300
that for our Sim region as well, right?

1080
00:56:11,900 --> 00:56:14,600
Because instead of this nonsense with tile spans which we don't care

1081
00:56:14,600 --> 00:56:16,200
about the don't have anything to do with anything.

1082
00:56:16,400 --> 00:56:21,600
What we really want to do is say look the camera bounds for the same

1083
00:56:21,600 --> 00:56:23,100
region, right?

1084
00:56:23,500 --> 00:56:26,600
So we can call this Sim bounds or something, right?

1085
00:56:27,000 --> 00:56:29,900
This imbalance should just be the same as the camera bounds with an

1086
00:56:29,900 --> 00:56:33,200
apron added with some amount of apron added, right?

1087
00:56:34,400 --> 00:56:40,100
So really all I want to do is like add radius to whatever the camera

1088
00:56:40,100 --> 00:56:41,400
Bound in m is.

1089
00:56:41,800 --> 00:56:46,300
And then just say, however, much Sim Space we want to add beyond that,

1090
00:56:46,600 --> 00:56:47,200
right?

1091
00:56:47,900 --> 00:56:51,000
And so that's, you know, I don't know what amount that actually is

1092
00:56:51,000 --> 00:56:56,600
going to be, but if we were to say, okay, you know, we want to go, I

1093
00:56:56,600 --> 00:56:57,100
don't know.

1094
00:57:00,000 --> 00:57:03,200
D m in each direction or something like this, right?

1095
00:57:04,400 --> 00:57:06,400
Then that's that's how much we would do.

1096
00:57:06,900 --> 00:57:11,800
I could actually say sim bounds expansion is.

1097
00:57:11,800 --> 00:57:14,300
Is this right?

1098
00:57:17,200 --> 00:57:24,200
Like, so let's do how big do we actually want to expand here?

1099
00:57:27,200 --> 00:57:27,800
And there we go.

1100
00:57:29,900 --> 00:57:30,400
So, yeah.

1101
00:57:30,400 --> 00:57:34,000
So that's a bunch of Randomness that I just did and let's find out how

1102
00:57:34,000 --> 00:57:35,200
bad the, I broke everything.

1103
00:57:36,400 --> 00:57:39,800
So, it seems like we're still in exactly the same situation that we

1104
00:57:39,800 --> 00:57:47,700
were in before so that's good and yeah, it looks like we might be.

1105
00:57:47,700 --> 00:57:51,300
The only thing about it is that does seem kind of tight in terms of

1106
00:57:51,300 --> 00:57:54,100
our in terms of our our zoom level.

1107
00:57:54,100 --> 00:57:56,700
They're like our m 2 pixels in this case,

1108
00:57:58,300 --> 00:57:59,200
You know, being off.

1109
00:58:00,800 --> 00:58:01,700
So I guess we do.

1110
00:58:02,000 --> 00:58:07,100
We maybe want to let it be a little bit different than that, you know.

1111
00:58:07,300 --> 00:58:08,800
We might want to say alright.

1112
00:58:09,700 --> 00:58:12,400
Let's do something where it's a little closer to what it, what it was,

1113
00:58:12,400 --> 00:58:15,400
previously, something like something like 48, right?

1114
00:58:15,400 --> 00:58:16,000
M pixels.

1115
00:58:16,000 --> 00:58:18,500
That was very close to what it used to be, right?

1116
00:58:18,500 --> 00:58:22,600
So this is more more are our speed, right?

1117
00:58:23,400 --> 00:58:27,800
That puts a little bit closer and or I could do it as exactly 42.

1118
00:58:27,800 --> 00:58:29,600
I wonder what that actually ends up being

1119
00:58:31,500 --> 00:58:33,000
Oh F, over 42.

1120
00:58:34,500 --> 00:58:36,300
Point 238 is still.

1121
00:58:38,700 --> 00:58:39,500
It would be really nice.

1122
00:58:39,500 --> 00:58:44,900
It was a power to but I don't know how sensible that actually is and

1123
00:58:44,900 --> 00:58:49,500
since the renderer scales things, I don't know but we'll go with this

1124
00:58:49,500 --> 00:58:49,900
for now.

1125
00:58:50,700 --> 00:58:51,300
All right.

1126
00:58:53,800 --> 00:58:55,300
So at that point we're almost out of time.

1127
00:58:55,300 --> 00:58:57,200
Unfortunately, I spent too much time.

1128
00:58:58,200 --> 00:59:01,200
Well, I kind of spent the time that I think we need to spend going

1129
00:59:01,200 --> 00:59:03,000
through that stuff and working it out properly.

1130
00:59:03,900 --> 00:59:05,700
But what I need to do now, right.

1131
00:59:05,800 --> 00:59:09,800
Is once I have that going, we're in a position to actually do the

1132
00:59:09,800 --> 00:59:13,800
stuff that I wanted to do at the outset, which is when we're doing

1133
00:59:13,800 --> 00:59:17,000
these rectangle, outlines, we are now in the position to request a

1134
00:59:17,000 --> 00:59:19,000
particular World chunk, right?

1135
00:59:19,800 --> 00:59:22,300
So, if I wanted to draw World chunk here, what I could do is I could

1136
00:59:22,300 --> 00:59:23,500
say, all right,

1137
00:59:24,100 --> 00:59:26,600
When we draw those World chunks because we were drawing the them

1138
00:59:26,600 --> 00:59:27,400
before, right?

1139
00:59:27,400 --> 00:59:31,600
So ground buffer, we're drawing these ground buffers here, right, when

1140
00:59:31,600 --> 00:59:32,700
we're drawing these ground buffers.

1141
00:59:32,700 --> 00:59:36,400
What I could do is say, all right, I'm going to request, I'm going to

1142
00:59:36,400 --> 00:59:39,800
make sure that we have whatever the ground buffer is that we would

1143
00:59:39,800 --> 00:59:41,700
have needed here, right?

1144
00:59:41,700 --> 00:59:44,700
Don't know if that makes sense, and the ground box that we would have

1145
00:59:44,700 --> 00:59:45,000
needed.

1146
00:59:45,000 --> 00:59:49,400
Here is whatever this chunk Center P says we needed, right?

1147
00:59:49,400 --> 00:59:53,200
So we would look through and we'd say, okay, for that chunk Center p

1148
00:59:53,200 --> 00:59:53,500
and this

1149
00:59:53,600 --> 00:59:58,300
has not the code be actually want to use but we'd say Okay, ground

1150
00:59:58,300 --> 00:59:59,200
buffer, index,

1151
01:00:01,700 --> 01:00:02,300
Right.

1152
01:00:02,500 --> 01:00:03,500
Equal zero, g buffer.

1153
01:00:03,500 --> 01:00:07,300
Index is less than the trance, State ground, buffer count.

1154
01:00:08,300 --> 01:00:08,800
Right.

1155
01:00:10,500 --> 01:00:11,900
+ G, buffer index.

1156
01:00:12,100 --> 01:00:18,300
And we basically say, if, you know, we, we could find this one, right?

1157
01:00:18,300 --> 01:00:22,200
If we could find one, the one that we actually want.

1158
01:00:24,400 --> 01:00:29,500
Then we would not have to do anything, but if we can't find it, then

1159
01:00:29,500 --> 01:00:31,100
we have to actually produce one, right?

1160
01:00:31,200 --> 01:00:34,100
So, we doing a loop there where we basically saying all right?

1161
01:00:34,100 --> 01:00:37,600
For each of the ground buffers if the ground buffer in question

1162
01:00:37,800 --> 01:00:42,300
equals, the one that we want, then we can we can forget about it and

1163
01:00:42,300 --> 01:00:43,800
we found it, right?

1164
01:00:43,800 --> 01:00:47,100
So found false and true.

1165
01:00:47,800 --> 01:00:51,600
So if a particular ground buffer that we're looking at around buffer,

1166
01:00:53,400 --> 01:00:54,200
Number four, index.

1167
01:00:55,000 --> 01:00:59,000
If that one's location is the location that we actually want.

1168
01:01:00,000 --> 01:01:04,300
Right, so if it's p, is equal to choose me?

1169
01:01:05,800 --> 01:01:10,200
Is equal to whatever that that chunk Center p is right.

1170
01:01:11,600 --> 01:01:15,000
And we have a comparison function to these, I believe.

1171
01:01:16,900 --> 01:01:17,800
Let's take a look here.

1172
01:01:21,100 --> 01:01:24,000
Is canonical are in same chunk.

1173
01:01:24,400 --> 01:01:25,800
That would do it, right?

1174
01:01:27,600 --> 01:01:30,800
so we could say are in same chunk these two

1175
01:01:34,400 --> 01:01:35,600
If that's the case, right?

1176
01:01:35,600 --> 01:01:39,000
If two things are, if these two things were in the same chunk, then

1177
01:01:39,000 --> 01:01:43,500
that means we already have a ground buffer for that else.

1178
01:01:43,500 --> 01:01:49,000
I'll say you know if this one is not valid, if this particular ground

1179
01:01:49,000 --> 01:01:54,200
buffer is not valid, I should probably actually get the ground buffer

1180
01:01:54,200 --> 01:01:54,800
out here, huh?

1181
01:01:56,800 --> 01:01:57,300
Buffer.

1182
01:01:58,700 --> 01:01:59,400
Ground pepper.

1183
01:02:04,700 --> 01:02:10,000
So grab the ground before out, I'll say, OK, if this ground buffers

1184
01:02:10,400 --> 01:02:13,700
position is the one that we want, then we know we have that ground

1185
01:02:13,700 --> 01:02:18,400
buffer already and if on the other hand, its position is not valid.

1186
01:02:18,400 --> 01:02:21,100
So there was nothing in this ground buffer then that's actually a

1187
01:02:21,100 --> 01:02:24,700
ground buffer we could use to fill with the one that we actually

1188
01:02:24,700 --> 01:02:26,100
wanted, right?

1189
01:02:27,200 --> 01:02:29,100
So we could say, oh, okay,

1190
01:02:32,300 --> 01:02:35,500
Excuse me, we want to actually fill this ground buffer.

1191
01:02:37,200 --> 01:02:43,300
So I'm going to store empty buffer here and say if it wasn't valid

1192
01:02:43,300 --> 01:02:44,900
we'll just we'll just grab it now.

1193
01:02:44,900 --> 01:02:47,500
Like I said, this won't actually ever evict anything so this is not

1194
01:02:47,500 --> 01:02:47,800
the code.

1195
01:02:47,800 --> 01:02:51,000
We actually want to use and it's also extremely inefficient there's

1196
01:02:51,000 --> 01:02:51,600
that.

1197
01:02:52,400 --> 01:02:56,100
But for now this will actually just sort of do a little bit of it.

1198
01:02:56,100 --> 01:02:59,600
So at the end of this, if if

1199
01:03:00,000 --> 01:03:02,500
Haven't found it and we found an empty buffer.

1200
01:03:02,700 --> 01:03:06,500
Then we just want to make, you know, we want to fill that buffer and

1201
01:03:06,500 --> 01:03:09,200
we've got that filled ground chunk that we already did.

1202
01:03:09,200 --> 01:03:14,000
So we can just call that with all the stuff that we needed right past

1203
01:03:14,000 --> 01:03:15,100
that empty buffer.

1204
01:03:15,200 --> 01:03:18,300
And we know which position we're trying to fill, its the chunk Center

1205
01:03:18,300 --> 01:03:19,600
P, right?

1206
01:03:19,600 --> 01:03:23,000
And that will fill the chunk, excuse me.

1207
01:03:26,300 --> 01:03:26,900
Right.

1208
01:03:27,200 --> 01:03:28,500
Really pretty straightforward.

1209
01:03:28,800 --> 01:03:29,100
Nothing.

1210
01:03:29,100 --> 01:03:29,400
Nothing.

1211
01:03:29,400 --> 01:03:30,300
Particularly odd going on.

1212
01:03:30,300 --> 01:03:33,200
Their function does not take two parameters.

1213
01:03:33,400 --> 01:03:34,000
Really?

1214
01:03:34,300 --> 01:03:35,300
How many does it take?

1215
01:03:37,100 --> 01:03:38,400
Oh, cuz we have an assertion there.

1216
01:03:38,400 --> 01:03:40,100
All right, well, I can pass you the world.

1217
01:03:40,100 --> 01:03:41,000
I'm fine with that.

1218
01:03:42,900 --> 01:03:44,200
And this needs to be an address.

1219
01:03:45,600 --> 01:03:47,000
So, let's take a look at what that does.

1220
01:03:50,100 --> 01:03:55,600
So for some reason, well we're almost correct, but for some reason

1221
01:03:55,600 --> 01:03:58,800
we're not quite enumerating all of the chunks but it can see we're

1222
01:03:58,800 --> 01:03:59,700
almost there.

1223
01:04:01,600 --> 01:04:02,600
We just don't quite have it.

1224
01:04:02,600 --> 01:04:05,800
Now we're run out of chunks eventually, but you can see we're almost

1225
01:04:05,800 --> 01:04:07,900
there in terms of what we need to do for the basics.

1226
01:04:07,900 --> 01:04:12,300
But for some reason we're missing one chunk, and it's like when we

1227
01:04:12,300 --> 01:04:14,900
iterate, what if we're on it directly, it works, but otherwise, it

1228
01:04:14,900 --> 01:04:16,900
doesn't that's kind of a bizarre bug.

1229
01:04:16,900 --> 01:04:17,600
When you say

1230
01:04:19,000 --> 01:04:20,000
Pretty unusual.

1231
01:04:20,300 --> 01:04:22,700
And then eventually here we should run out of these.

1232
01:04:23,900 --> 01:04:24,300
Hmm.

1233
01:04:25,200 --> 01:04:27,500
In fact I'm kind of surprised we haven't run out of them already.

1234
01:04:27,900 --> 01:04:31,200
I guess we made a lot more of them but you can kind of see how it's

1235
01:04:31,200 --> 01:04:31,700
working here.

1236
01:04:31,700 --> 01:04:34,700
All we'll need eventually is an eviction scheme which we should be

1237
01:04:34,700 --> 01:04:38,700
able to do tomorrow and then we'll be in good shape but we have a bug

1238
01:04:38,700 --> 01:04:39,600
here and I don't know.

1239
01:04:39,600 --> 01:04:42,500
We could probably leave that bug till tomorrow I'm not too terribly

1240
01:04:42,500 --> 01:04:44,600
concerned about it but

1241
01:04:46,900 --> 01:04:48,400
Well, you can go for a long time.

1242
01:04:48,800 --> 01:04:49,800
This is kind of weird.

1243
01:04:50,300 --> 01:04:51,100
How many did we say?

1244
01:04:51,100 --> 01:04:52,800
We had there we go.

1245
01:04:52,800 --> 01:04:54,200
Finally got to the end.

1246
01:04:54,200 --> 01:04:56,000
I'm like we're not evicting anything.

1247
01:04:56,100 --> 01:04:59,600
So we should be able to get to the end, but it took a long time.

1248
01:05:00,100 --> 01:05:03,700
I guess that's when you have a pretty pretty big cash there, it's all

1249
01:05:03,700 --> 01:05:04,200
good.

1250
01:05:04,600 --> 01:05:05,000
All right.

1251
01:05:05,000 --> 01:05:07,300
So what I was saying though is

1252
01:05:10,800 --> 01:05:14,200
I'd like to take a look and find out it's a little bit weird.

1253
01:05:14,200 --> 01:05:18,300
I'm not sure why we're getting that that bug where we're not ever

1254
01:05:18,300 --> 01:05:20,800
producing one of those chunks there.

1255
01:05:20,800 --> 01:05:23,100
That's a little bit odd, and I'm not sure why.

1256
01:05:23,100 --> 01:05:28,900
That is, we're doing our Loops properly from why from the main chunk

1257
01:05:28,900 --> 01:05:33,200
to the max chunk, and we're actually including that Max chunk as well.

1258
01:05:33,200 --> 01:05:40,100
We're doing that on X and Y and so it would seem, it would seem like

1259
01:05:40,100 --> 01:05:40,800
that, should we?

1260
01:05:40,800 --> 01:05:41,200
Work.

1261
01:05:42,400 --> 01:05:48,600
But it's not and so something that we've done here is is off.

1262
01:05:49,200 --> 01:05:53,400
It's not actually filling the chunks that we think they're feeling or

1263
01:05:53,400 --> 01:05:55,900
I guess there could be a problem with the way we're rendering them,

1264
01:05:55,900 --> 01:05:58,500
but that seems a little less likely.

1265
01:05:58,600 --> 01:05:59,600
So I'm assuming that it's

1266
01:06:00,000 --> 01:06:03,800
Do with the way that we're actually filling them in here and I'm going

1267
01:06:03,800 --> 01:06:04,500
to push do here.

1268
01:06:04,500 --> 01:06:11,800
Also to do this is super inefficient, fix it tomorrow.

1269
01:06:14,500 --> 01:06:15,800
Also, it doesn't affect anything.

1270
01:06:16,600 --> 01:06:18,800
So I'm just going to take a little bit.

1271
01:06:19,800 --> 01:06:20,700
How much time we got.

1272
01:06:20,800 --> 01:06:21,900
I'm only six minutes over.

1273
01:06:22,000 --> 01:06:24,400
I'm just going to take a little bit of liquor to see if I can just

1274
01:06:24,400 --> 01:06:28,800
spot what I did wrong because I would like you know me I don't like to

1275
01:06:28,800 --> 01:06:30,000
leave bugs like that.

1276
01:06:30,300 --> 01:06:33,800
So I'm just going to take a quick look to make sure I can't just see

1277
01:06:34,100 --> 01:06:35,100
what it was.

1278
01:06:35,300 --> 01:06:39,700
That that was done stupidly here, right?

1279
01:06:41,900 --> 01:06:45,800
All right, so if we have the camera Bound in meters, we know that

1280
01:06:45,800 --> 01:06:47,500
that's the whole screens worth.

1281
01:06:47,900 --> 01:06:54,200
We're then going and mapping that into chunks Pace to get, you know,

1282
01:06:54,500 --> 01:06:55,300
the Min and the max.

1283
01:06:55,300 --> 01:07:00,100
They're the two corners of it which seems like it should be pretty

1284
01:07:00,100 --> 01:07:01,100
straightforward.

1285
01:07:01,800 --> 01:07:05,600
We're looping through those getting to see if there's chunks that.

1286
01:07:05,600 --> 01:07:06,000
Uh-oh.

1287
01:07:08,400 --> 01:07:11,600
Right, it's just ha ha.

1288
01:07:11,700 --> 01:07:13,500
This was working totally perfectly.

1289
01:07:13,600 --> 01:07:17,100
It's just, I was only drawing since this was a drawing loot.

1290
01:07:17,100 --> 01:07:20,400
Before I only drew it if there was a chunk if there's actually data in

1291
01:07:20,400 --> 01:07:21,000
the chunk.

1292
01:07:23,400 --> 01:07:23,900
Whoops.

1293
01:07:25,200 --> 01:07:27,200
So that's that's it.

1294
01:07:28,900 --> 01:07:33,700
Yeah, that's that's all there was to it.

1295
01:07:34,200 --> 01:07:36,500
Um, so that was kind of funny.

1296
01:07:36,500 --> 01:07:37,800
So what was happening is

1297
01:07:38,100 --> 01:07:42,800
Renault entities in those chunks so it just skipped them.

1298
01:07:43,100 --> 01:07:46,700
But then, when I would move into it, my entity was in the chunk.

1299
01:07:46,700 --> 01:07:48,300
So then it became active.

1300
01:07:49,500 --> 01:07:50,500
That's kind of cute.

1301
01:07:51,400 --> 01:07:54,800
You gotta admit that's kind of cute but problem solved.

1302
01:07:54,800 --> 01:07:55,600
And so, there you go.

1303
01:07:55,600 --> 01:07:57,700
It's so now really all we need to do tomorrow.

1304
01:07:58,000 --> 01:08:00,600
We have some issues, we probably will have to address when we want to

1305
01:08:00,600 --> 01:08:00,900
get things.

1306
01:08:00,900 --> 01:08:01,500
Totally right?

1307
01:08:01,500 --> 01:08:03,000
Like, how these things line up.

1308
01:08:03,000 --> 01:08:03,600
Exactly.

1309
01:08:03,600 --> 01:08:06,900
Whether they have but properly and how it scales up and down there,

1310
01:08:06,900 --> 01:08:07,700
there's some stuff.

1311
01:08:07,700 --> 01:08:08,900
We're going to have to address.

1312
01:08:09,000 --> 01:08:13,100
It's not all unicorns and rainbows at this point, but all we really

1313
01:08:13,100 --> 01:08:13,800
need to do tomorrow.

1314
01:08:13,800 --> 01:08:18,700
Now is generate them seamlessly, which is not really that hard.

1315
01:08:19,200 --> 01:08:20,800
And then we'll be good to go.

1316
01:08:20,800 --> 01:08:23,399
Now, of course, like I said, we still want to put this on a separate

1317
01:08:23,399 --> 01:08:25,600
thread and make it more efficient and stuff like that, so that we

1318
01:08:25,600 --> 01:08:29,300
don't get hiccups like we're getting right now but on the whole, this

1319
01:08:29,300 --> 01:08:32,000
schemes working quite nicely already and we haven't really even done

1320
01:08:32,000 --> 01:08:33,600
anything fancy with it.

1321
01:08:33,600 --> 01:08:36,899
So I think that's pretty cool or at least I think it's pretty cool and

1322
01:08:36,899 --> 01:08:38,300
hopefully you think it's pretty cool as well.

1323
01:08:38,300 --> 01:08:46,500
So yeah with that with that I think we can go ahead and go to the Q&A.

1324
01:08:46,500 --> 01:08:49,200
Please prefix your questions with Q:, so I

1325
01:08:49,300 --> 01:08:55,899
I can see them and yeah and I'll answer them.

1326
01:08:57,800 --> 01:08:59,800
so you can see here, where we still had

1327
01:09:00,000 --> 01:09:00,399
Alpha.

1328
01:09:00,399 --> 01:09:01,800
That wasn't quite all the way in.

1329
01:09:01,800 --> 01:09:02,300
Right?

1330
01:09:03,100 --> 01:09:06,399
And so you get some that showing through there, I guess I'm not

1331
01:09:06,399 --> 01:09:08,200
exactly sure if that's what that's from or not.

1332
01:09:08,200 --> 01:09:09,100
That's an interesting.

1333
01:09:09,700 --> 01:09:11,000
It's an interesting artifact.

1334
01:09:11,100 --> 01:09:13,300
It's that it's the chunk boundary.

1335
01:09:25,300 --> 01:09:25,600
Hmm.

1336
01:09:27,899 --> 01:09:29,899
What is Meera Tori syntax?

1337
01:09:32,700 --> 01:09:35,500
I'm not sure what you're referring to, but you could be referring to

1338
01:09:35,500 --> 01:09:40,300
Miura Tori for syntax, which is this.

1339
01:09:47,700 --> 01:09:48,200
Right.

1340
01:09:49,700 --> 01:09:54,900
I don't know if you can see that but basically what that is is get

1341
01:09:54,900 --> 01:09:56,500
double brackets, everything.

1342
01:09:57,600 --> 01:10:01,500
And the reason for that was because in the old days there was no

1343
01:10:01,500 --> 01:10:02,300
possible way.

1344
01:10:02,300 --> 01:10:06,900
You could have a compiler, there's no way you could write code without

1345
01:10:06,900 --> 01:10:07,700
doing it this way.

1346
01:10:07,800 --> 01:10:10,600
That would ensure that the compilers would always do the right thing

1347
01:10:10,600 --> 01:10:15,000
with respect to scoping for because M SV C.

1348
01:10:15,000 --> 01:10:16,800
Would put it in the outer scope and GCC.

1349
01:10:16,800 --> 01:10:19,300
We put it in the Interscope so this was a way of putting it.

1350
01:10:19,500 --> 01:10:24,900
Extra scope in there so that msec would behave the same way as GCC.

1351
01:10:25,000 --> 01:10:27,500
It's not necessary anymore, but in the old days it was the only way to

1352
01:10:27,500 --> 01:10:28,000
do it.

1353
01:10:33,600 --> 01:10:35,900
Well, the random graphs possibly based on some seeds so that the

1354
01:10:35,900 --> 01:10:38,500
ground buffer can be regenerated the same as it was after it gets

1355
01:10:38,500 --> 01:10:39,300
evicted.

1356
01:10:39,900 --> 01:10:41,800
Well, not only will it be?

1357
01:10:42,600 --> 01:10:45,800
It is see.

1358
01:10:46,300 --> 01:10:51,600
It's already based on whatever chunk it came from and so that's kind

1359
01:10:51,600 --> 01:10:52,600
of cool in that.

1360
01:10:52,600 --> 01:10:56,600
It will always be able to regenerate itself and that's going to be

1361
01:10:56,600 --> 01:11:01,600
pretty handy to being based off that because we'll use that to make it

1362
01:11:01,600 --> 01:11:02,900
seamless tomorrow as well.

1363
01:11:03,100 --> 01:11:03,700
Will be nice.

1364
01:11:13,800 --> 01:11:16,400
I'm sure it's been asked a bunch but any tips for what language to

1365
01:11:16,400 --> 01:11:17,900
start with and how to start?

1366
01:11:19,700 --> 01:11:20,600
Not really.

1367
01:11:20,900 --> 01:11:23,700
It's been so long since I started, I don't know.

1368
01:11:24,300 --> 01:11:28,200
So I've said many times in the Stream all it really the answer is

1369
01:11:30,400 --> 01:11:34,000
Whatever Gets you into programming it, whatever you can find, that

1370
01:11:34,000 --> 01:11:35,600
seems like you're having fun with it.

1371
01:11:35,700 --> 01:11:39,100
If you've literally never programmed before because what we're doing

1372
01:11:39,100 --> 01:11:42,700
here with, see is too hard for someone who's never programmed before.

1373
01:11:42,900 --> 01:11:47,300
It's, you know, right, like C and C++ or kind of the advanced language

1374
01:11:47,300 --> 01:11:47,900
right there.

1375
01:11:47,900 --> 01:11:53,700
They're, they're definitely when you have your, your adult pants on

1376
01:11:54,600 --> 01:11:58,300
and, you know, your little baby pants should probably not be the same

1377
01:11:58,300 --> 01:11:59,300
pants, right?

1378
01:12:00,000 --> 01:12:00,700
so,

1379
01:12:02,100 --> 01:12:05,500
When I was little and I started programming, I started programming in

1380
01:12:05,500 --> 01:12:13,300
basic and you know, and then I went I think to Pascal after that but

1381
01:12:13,300 --> 01:12:16,700
that was the same as see, more or less.

1382
01:12:17,100 --> 01:12:20,600
And then I went to see after Pascal kind of faded out of popularity.

1383
01:12:21,300 --> 01:12:24,100
And so I would recommend probably a similar two-stage process.

1384
01:12:24,100 --> 01:12:31,800
I'd recommend some language that's easy to use and forgiving.

1385
01:12:32,200 --> 01:12:36,800
And has a good standard library and like isn't for writing efficient

1386
01:12:36,800 --> 01:12:41,400
code or doing a lot of the stuff that we do on the stream.

1387
01:12:41,900 --> 01:12:45,800
But that lets you play around with it and be happy with coding and

1388
01:12:45,800 --> 01:12:48,300
then once you're ready to like level up and start taking more control

1389
01:12:48,300 --> 01:12:50,700
over things than you can come, you know, to see

1390
01:12:58,300 --> 01:12:58,800
Huh.

1391
01:12:59,200 --> 01:13:03,300
Someone said they actually found a Miura Tori for statement in the

1392
01:13:03,300 --> 01:13:04,200
wild.

1393
01:13:05,000 --> 01:13:06,300
No way.

1394
01:13:07,600 --> 01:13:08,800
That's crazy.

1395
01:13:08,800 --> 01:13:09,900
I had no idea.

1396
01:13:12,500 --> 01:13:14,500
I didn't know anyone used it, but me.

1397
01:13:17,800 --> 01:13:18,900
That's pretty interesting.

1398
01:13:21,000 --> 01:13:21,700
I wonder.

1399
01:13:28,000 --> 01:13:29,600
I wonder what that is.

1400
01:13:29,900 --> 01:13:31,000
Yeah, you're right.

1401
01:13:31,300 --> 01:13:32,500
It's there it is.

1402
01:13:35,800 --> 01:13:37,400
Re-find obstacle.

1403
01:13:40,300 --> 01:13:41,200
Very interesting.

1404
01:13:45,900 --> 01:13:47,300
That's very, very interesting.

1405
01:13:48,400 --> 01:13:50,600
It's only in that one routine.

1406
01:13:53,800 --> 01:13:56,700
I direction-- hit distance hit index.

1407
01:13:59,100 --> 01:14:00,900
Location, hit normal.

1408
01:14:02,500 --> 01:14:05,400
You know, it doesn't really look like my code, otherwise.

1409
01:14:13,300 --> 01:14:14,200
So I don't know.

1410
01:14:14,600 --> 01:14:15,700
That's kind of weird.

1411
01:14:17,900 --> 01:14:20,700
I wonder if someone like, yeah, I don't know.

1412
01:14:20,700 --> 01:14:21,600
That's very interesting.

1413
01:14:21,600 --> 01:14:24,500
I wonder who wrote that code for why?

1414
01:14:26,400 --> 01:14:27,200
That's bizarre.

1415
01:14:27,200 --> 01:14:28,200
Thanks for the reference.

1416
01:14:36,600 --> 01:14:40,200
Why are you not passing world as an address when calling functions?

1417
01:14:40,500 --> 01:14:41,700
I'm pretty sure we are.

1418
01:14:43,800 --> 01:14:44,600
Where are you seeing us?

1419
01:14:44,600 --> 01:14:45,800
Not do that.

1420
01:14:46,300 --> 01:14:51,400
Like here's a world pointer and I'm pretty sure pretty much everyone.

1421
01:14:51,600 --> 01:14:54,300
It gets passed as a pointer, right?

1422
01:14:55,400 --> 01:14:57,000
It's almost always fast as a pointer.

1423
01:14:57,400 --> 01:14:58,100
Where do you see it?

1424
01:14:58,100 --> 01:14:59,300
Not being passed as a pointer.

1425
01:15:00,000 --> 01:15:00,700
My question.

1426
01:15:02,200 --> 01:15:06,600
Are you going to prevent Z buffers and texture scaling Z buffer is no

1427
01:15:06,600 --> 01:15:07,700
because we don't need them.

1428
01:15:07,900 --> 01:15:10,800
And so they're going to Baby way they.

1429
01:15:11,200 --> 01:15:18,200
They would be both inefficient and lower quality so we will just be

1430
01:15:18,200 --> 01:15:22,200
doing sorting because then we can do proper Alpha compositing and not

1431
01:15:22,200 --> 01:15:24,400
have to do any z-buffer stuff.

1432
01:15:25,000 --> 01:15:26,700
But I don't know.

1433
01:15:26,700 --> 01:15:29,200
I mean, I suppose we could use an early out kind of people.

1434
01:15:29,200 --> 01:15:30,700
We don't really, we're not going to have.

1435
01:15:30,700 --> 01:15:31,900
Yeah, I don't think.

1436
01:15:32,100 --> 01:15:34,600
If we did anything that was like a z-buffer, it'd be more like an

1437
01:15:34,600 --> 01:15:39,600
occupation buffer, like an occupancy buffer, that was just designed to

1438
01:15:39,600 --> 01:15:41,600
early out chunks of the screen.

1439
01:15:42,900 --> 01:15:43,800
Texture scaling though.

1440
01:15:43,800 --> 01:15:45,600
Yeah, we will be doing and rotation.

1441
01:15:54,600 --> 01:15:55,500
Any other questions?

1442
01:15:59,100 --> 01:16:00,200
Does not look like it.

1443
01:16:09,300 --> 01:16:13,200
Is there any other possibility for a z-buffer?

1444
01:16:16,700 --> 01:16:18,300
Not not sure what that means.

1445
01:16:18,300 --> 01:16:18,900
What do you mean by?

1446
01:16:18,900 --> 01:16:23,900
Is there any other possibility for a z-buffer z buffers for 2D games?

1447
01:16:24,000 --> 01:16:27,000
It's really it's unclear.

1448
01:16:27,000 --> 01:16:28,200
Why you would ever use one?

1449
01:16:28,200 --> 01:16:34,300
I mean, one reason is, if you, if you were doing a very expensive

1450
01:16:34,400 --> 01:16:36,100
Shader calculations,

1451
01:16:38,000 --> 01:16:38,700
right?

1452
01:16:38,800 --> 01:16:42,900
And you were trying to use the Z buffer, you're trying to draw front

1453
01:16:42,900 --> 01:16:47,800
to back and use the Z buffer to early out so that you wouldn't do

1454
01:16:47,800 --> 01:16:49,300
Shader computations.

1455
01:16:51,900 --> 01:16:54,200
For something like this, right?

1456
01:16:54,200 --> 01:16:57,800
Instead of drawing back to front, you draw front to back with

1457
01:16:57,800 --> 01:17:03,800
destination Alpha and and save those Shader calculations, right?

1458
01:17:05,100 --> 01:17:07,000
And, you know, we could do that.

1459
01:17:12,900 --> 01:17:15,900
But you still don't really need a z-buffer.

1460
01:17:16,200 --> 01:17:18,400
Even in that case, right?

1461
01:17:18,900 --> 01:17:23,100
You don't need a z-buffer, you just need a binary buffer at that

1462
01:17:23,100 --> 01:17:23,700
point, right?

1463
01:17:23,700 --> 01:17:27,500
Like something that says, yes or no, and you still end up with the

1464
01:17:27,500 --> 01:17:34,200
problem that it's like, I mean you can't you can't actually early out

1465
01:17:34,200 --> 01:17:37,800
on the outfit edges so I don't know.

1466
01:17:38,200 --> 01:17:39,500
It sounds dicey to me.

1467
01:17:41,600 --> 01:17:43,100
But I'm not a rendering expert, you know.

1468
01:17:43,100 --> 01:17:45,300
I'm not I'm not one of those guys who spends all their time, think

1469
01:17:45,300 --> 01:17:49,500
about rendering and so maybe there's a good reason why you would do

1470
01:17:49,500 --> 01:17:49,700
it.

1471
01:17:49,700 --> 01:17:54,000
But I'm imagining that that for us, you know, some kind of a course,

1472
01:17:54,000 --> 01:17:56,200
occupancy thing and then just

1473
01:17:58,300 --> 01:17:59,800
Render, you know?

1474
01:18:00,000 --> 01:18:04,500
Front to back with destination alpha or, and, and if Alpha is 1, then

1475
01:18:04,500 --> 01:18:08,500
you early out would be the smartest thing to do because I can't see

1476
01:18:08,500 --> 01:18:11,200
the z-buffer ever really coming in and especially, yes, especially if

1477
01:18:11,200 --> 01:18:14,000
you do front to back with Associated front to back with destination

1478
01:18:14,000 --> 01:18:15,600
Alpha, I feel like, wouldn't you done?

1479
01:18:15,600 --> 01:18:19,000
Just use Alpha to determine whether you kill or not?

1480
01:18:20,400 --> 01:18:21,100
Yeah, I'm sorry.

1481
01:18:21,400 --> 01:18:24,400
You'd have to ask somebody who was more of a hardcore, rendering guy,

1482
01:18:24,500 --> 01:18:25,600
whether there'd be any reason easy.

1483
01:18:25,600 --> 01:18:29,400
But it doesn't, it seems like if you the only thing you would ever do

1484
01:18:29,400 --> 01:18:31,700
is use destination Alpha, probably, and you'd early out in the

1485
01:18:31,700 --> 01:18:34,800
destination Alpha, but why you would want to waste all the bandwidth

1486
01:18:35,400 --> 01:18:39,700
and the testing on a z-buffer when I just don't see what it gets you.

1487
01:18:42,100 --> 01:18:43,700
So I'm not I'm not feeling it.

1488
01:18:44,500 --> 01:18:45,500
I'm not feeling it.

1489
01:18:53,400 --> 01:18:55,000
You're right, I did miss your question.

1490
01:18:56,200 --> 01:18:58,000
I will, I will be below.

1491
01:18:58,000 --> 01:18:59,300
I will go back to that.

1492
01:18:59,300 --> 01:19:02,900
I just now that you said it, I can see it, but I must have gotten.

1493
01:19:03,400 --> 01:19:04,800
I must have missed it when I was scanning.

1494
01:19:11,600 --> 01:19:14,400
Couldn't you set the Sim bounds expansion from the screen dimensions

1495
01:19:14,400 --> 01:19:16,200
or camera bounds in meters or something?

1496
01:19:16,600 --> 01:19:17,800
Hope I'm understanding correctly.

1497
01:19:17,800 --> 01:19:18,900
Yes we could.

1498
01:19:19,100 --> 01:19:23,400
I just don't know what to set it to because basically like the Sim

1499
01:19:23,400 --> 01:19:28,100
bounds are just what we want to hear like acoustic bounds or

1500
01:19:28,500 --> 01:19:31,100
simulation related stuff bounds.

1501
01:19:31,100 --> 01:19:33,700
I mean, basically what the sin bounds does is it simulates the stuff

1502
01:19:33,700 --> 01:19:39,500
that's on screen and some amount of distance around the screen that we

1503
01:19:39,500 --> 01:19:40,900
say, is what we want.

1504
01:19:41,100 --> 01:19:42,200
Fidelity for.

1505
01:19:42,400 --> 01:19:45,200
And so it's stuff that might make noise that we could hear or is

1506
01:19:45,200 --> 01:19:48,500
people who might walk onto the screen or just walked off the screen

1507
01:19:48,500 --> 01:19:52,600
and might walk back on and we don't want them to go fall into some

1508
01:19:52,800 --> 01:19:54,200
slow update Loop.

1509
01:19:54,300 --> 01:19:57,100
We want them to be like integral to the gameplay or something that

1510
01:19:57,100 --> 01:19:57,800
point, right?

1511
01:20:01,200 --> 01:20:02,700
So, I don't know, right?

1512
01:20:02,700 --> 01:20:04,900
Like I really don't know.

1513
01:20:07,600 --> 01:20:08,600
What it should be set to.

1514
01:20:08,600 --> 01:20:12,400
I don't know that it, you know, should it be an extra screens worth?

1515
01:20:12,400 --> 01:20:14,900
Should it be some fixed distance worth?

1516
01:20:15,300 --> 01:20:16,200
I have no idea.

1517
01:20:16,300 --> 01:20:19,000
And that's why I was put to do there because until we have some more

1518
01:20:19,000 --> 01:20:20,400
idea of like what should be happening?

1519
01:20:20,400 --> 01:20:22,800
I really don't know what to set it to but you could certainly set it

1520
01:20:22,800 --> 01:20:23,600
based off the things you were.

1521
01:20:23,600 --> 01:20:25,800
Suggesting I just even based off of those things.

1522
01:20:25,800 --> 01:20:27,800
I don't know what it would be, right.

1523
01:20:29,400 --> 01:20:30,000
So we'll see.

1524
01:20:30,300 --> 01:20:32,700
We be implementing Dynamic lighting or any deferred rendering.

1525
01:20:32,700 --> 01:20:33,900
For lots of real lights.

1526
01:20:33,900 --> 01:20:34,500
Etc.

1527
01:20:38,300 --> 01:20:41,200
So the problem with deferred lighting is that transparency, doesn't

1528
01:20:41,200 --> 01:20:42,300
really work very well.

1529
01:20:43,000 --> 01:20:48,300
You got to do a lot of random stuff to make transparency work.

1530
01:20:48,300 --> 01:20:51,000
If you do deferred lighting, I'm sorry, deferred shading.

1531
01:20:51,000 --> 01:20:51,400
Really?

1532
01:20:53,700 --> 01:20:59,800
so, you know, I mean it probably not because you got so much

1533
01:21:00,000 --> 01:21:05,500
Horsepower with the, with modern gpus for a 2-D game.

1534
01:21:05,600 --> 01:21:09,200
It might just be a waste of time to deferred rendering and you give up

1535
01:21:09,200 --> 01:21:11,700
that translucency and a bunch of other things.

1536
01:21:13,300 --> 01:21:15,400
So I don't know that it's a good trade-off.

1537
01:21:16,300 --> 01:21:20,300
Deferred rendering tends to be more about managing depth complexity.

1538
01:21:21,800 --> 01:21:24,500
And so I feel like we'll probably able to manage depth complexity in

1539
01:21:24,500 --> 01:21:28,200
other ways red because the only thing deferred rent, like literally

1540
01:21:28,200 --> 01:21:32,500
the only thing deferred rendering does, is it cuts down on the number

1541
01:21:32,500 --> 01:21:34,600
of computations that you have to do?

1542
01:21:35,400 --> 01:21:38,700
If you tend to overdraw parts of the screen a lot, right?

1543
01:21:38,700 --> 01:21:39,100
That's it.

1544
01:21:39,100 --> 01:21:40,100
That's all it does.

1545
01:21:41,000 --> 01:21:43,300
It doesn't change anything other than that.

1546
01:21:44,100 --> 01:21:46,500
And so, if you have a lot of depth complexity, where you're saying,

1547
01:21:46,500 --> 01:21:50,400
like all right, you know, I'm looking at, you know, things through

1548
01:21:50,400 --> 01:21:51,000
other things.

1549
01:21:51,000 --> 01:21:53,400
Like I've got kind of this this layered approach

1550
01:21:56,200 --> 01:21:58,800
We're I don't know, like there's kind of a mountain in the way of a

1551
01:21:58,800 --> 01:22:01,000
thing in a railing in this that nothing in.

1552
01:22:01,000 --> 01:22:05,300
So I want to like kind of cut that down to just what's actually

1553
01:22:05,300 --> 01:22:08,300
visible and not do computations for things that are stacked on top of

1554
01:22:08,300 --> 01:22:08,700
each other.

1555
01:22:09,000 --> 01:22:12,800
It makes you know a fair bit of sense but how much of that stocking

1556
01:22:12,800 --> 01:22:16,800
will we actually have versus the cost of doing the Deferred rendering

1557
01:22:17,100 --> 01:22:17,600
right?

1558
01:22:18,300 --> 01:22:22,300
And so I don't know if it turns out that we're in a situation where we

1559
01:22:22,300 --> 01:22:24,000
have tons and tons of overdraw

1560
01:22:25,200 --> 01:22:28,700
Then you know maybe it makes sense but if it turns out that we don't

1561
01:22:28,700 --> 01:22:32,700
then deferred rendering just a waste of time and it's worse because

1562
01:22:32,700 --> 01:22:35,700
you don't have translucency and other things like that you might want

1563
01:22:36,300 --> 01:22:38,100
or you have to do crazy stuff to get them.

1564
01:22:46,500 --> 01:22:47,300
She is there anyone.

1565
01:22:47,300 --> 01:22:49,600
You can suggest for a hardcore render guy.

1566
01:22:50,400 --> 01:22:54,100
Mmm, well, they're few and far between these days.

1567
01:22:57,400 --> 01:23:03,400
But, you know, you'd want to ask like someone on, maybe like an

1568
01:23:03,400 --> 01:23:04,700
Nvidia.

1569
01:23:05,100 --> 01:23:08,300
One of those guys who does the Nvidia, like, sort of research and

1570
01:23:08,300 --> 01:23:13,200
Nvidia research guy, or maybe someone on the one of the engine teams.

1571
01:23:13,200 --> 01:23:17,000
Like, you know, like a frostbite rendering guy, or one of the guys

1572
01:23:17,000 --> 01:23:20,600
from the Unreal Engine rendering guys.

1573
01:23:21,200 --> 01:23:23,400
I mean, like I said, they're few and far between these days.

1574
01:23:23,400 --> 01:23:24,100
So I don't know.

1575
01:23:27,300 --> 01:23:31,100
But but yeah, I suspect they're going to tell you that a 2-D game.

1576
01:23:31,100 --> 01:23:32,200
Usually doesn't need a z-buffer.

1577
01:23:32,200 --> 01:23:33,200
But you know.

1578
01:23:35,000 --> 01:23:35,600
Could be wrong.

1579
01:23:40,800 --> 01:23:44,300
All right, I think I'm going to go ahead and wrap things up.

1580
01:23:44,300 --> 01:23:46,700
I think we're at the end of the questions about what we were doing.

1581
01:23:46,700 --> 01:23:50,000
Programming last, I'm pretty happy with how that came out.

1582
01:23:51,700 --> 01:23:53,400
I am pretty happy with that.

1583
01:23:53,600 --> 01:23:57,000
So I think basically all we do tomorrow is turn these into seamless

1584
01:23:57,200 --> 01:23:59,800
and then we will have our sort of infinite ground texture that

1585
01:24:00,000 --> 01:24:03,200
Wanted, which is pretty great.

1586
01:24:03,200 --> 01:24:06,900
All we got, and we an eviction scheme, so got two more things to do.

1587
01:24:07,300 --> 01:24:08,800
And so that's what we'll do tomorrow first.

1588
01:24:08,800 --> 01:24:11,000
We'll get rid of the seams because that seems to be that that's the

1589
01:24:11,000 --> 01:24:12,400
most ugly part of it, right?

1590
01:24:12,500 --> 01:24:17,300
First, we'll get rid of those seams and then we can go ahead and yeah,

1591
01:24:18,400 --> 01:24:19,800
we can go ahead and do the other part.

1592
01:24:20,000 --> 01:24:20,800
That's pretty cool.

1593
01:24:20,900 --> 01:24:21,800
I'm happy with that.

1594
01:24:22,600 --> 01:24:23,200
All right.

1595
01:24:23,600 --> 01:24:26,200
Anyway, I'll go ahead and shut things down here.

1596
01:24:28,000 --> 01:24:29,100
Save our mischief.

1597
01:24:33,300 --> 01:24:36,700
Okay, thank you, everyone for joining me, for another episode of

1598
01:24:36,700 --> 01:24:37,300
handmade hero.

1599
01:24:37,300 --> 01:24:38,300
It's been a pleasure working with you.

1600
01:24:38,300 --> 01:24:41,400
As always, if you would like to follow along the source code at home,

1601
01:24:41,400 --> 01:24:43,700
you can always pre-order the game on handmade here at dot org.

1602
01:24:45,100 --> 01:24:47,700
Basically, you can pre-order it and it comes with a link to the source

1603
01:24:47,700 --> 01:24:50,600
code so you can download it every night after I finish programming and

1604
01:24:50,600 --> 01:24:52,300
play around with the stuff we do on the stream that day.

1605
01:24:52,900 --> 01:24:56,700
We also have a patreon if you want to support our video series that's

1606
01:24:56,700 --> 01:24:58,200
just purely optional subscription thing.

1607
01:24:58,200 --> 01:25:01,100
If you're interested in it, it's always much appreciated.

1608
01:25:01,100 --> 01:25:01,800
You could check that out.

1609
01:25:02,300 --> 01:25:05,100
We also have a tweak bought, the tweets, the schedule, so if you're

1610
01:25:05,100 --> 01:25:07,900
trying to catch the scream stream and want to know when it's going to

1611
01:25:07,900 --> 01:25:10,100
be, that's that's the place to go.

1612
01:25:10,500 --> 01:25:13,600
And finally we have a news inform site and the news and firm site has

1613
01:25:13,600 --> 01:25:17,500
a bunch of great stuff on us, a place to ask questions, it has ports

1614
01:25:17,500 --> 01:25:18,100
to Linux and Mac.

1615
01:25:18,100 --> 01:25:20,300
If you want to follow along on other platforms, that kind of thing.

1616
01:25:20,500 --> 01:25:23,800
And it's got an antidepressant guide done by members of the community,

1617
01:25:23,800 --> 01:25:26,400
which is pretty great for following along catching up with old

1618
01:25:26,400 --> 01:25:27,000
episodes.

1619
01:25:27,600 --> 01:25:28,500
So definitely check that out.

1620
01:25:28,500 --> 01:25:29,300
If you're interested.

1621
01:25:29,800 --> 01:25:31,500
Otherwise I will see you back here tomorrow.

1622
01:25:31,500 --> 01:25:31,800
When we

1623
01:25:31,900 --> 01:25:35,200
We'll finish up our infinite ground texture, same time, same place, 5

1624
01:25:35,200 --> 01:25:35,700
p.m.

1625
01:25:36,000 --> 01:25:39,500
Pacific Daylight Time right here on Twitch.

1626
01:25:39,500 --> 01:25:41,900
So thanks for joining us and I will see you tomorrow.

