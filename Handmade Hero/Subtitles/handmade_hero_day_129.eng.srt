1
00:00:01,700 --> 00:00:05,300
Alright, hello everyone, and welcome to handmade hero.

2
00:00:05,300 --> 00:00:09,000
So we could have complete game live on stream on Twitch.

3
00:00:09,200 --> 00:00:09,700
No engines.

4
00:00:09,700 --> 00:00:14,200
Do libraries is just us here all by our Lonesome, 's programming,

5
00:00:14,200 --> 00:00:19,700
some, some tasty little low level things for everyone's amusement and

6
00:00:19,700 --> 00:00:22,500
today we're going to be looking a little bit more at the renderer

7
00:00:22,800 --> 00:00:24,700
which is now running quite nicely.

8
00:00:24,900 --> 00:00:28,300
Thanks to some optimizations but we had some stuff we want to do to it

9
00:00:28,300 --> 00:00:30,500
in terms of just like cleaning up some code.

10
00:00:30,600 --> 00:00:30,900
Now that

11
00:00:31,000 --> 00:00:34,500
You kind of see how most of it is supposed to be working and so we

12
00:00:34,500 --> 00:00:35,700
want to kind of go back and do that.

13
00:00:35,700 --> 00:00:38,300
Now today is day 129, right?

14
00:00:38,900 --> 00:00:42,400
And if you want to follow along at home, you want to unpack day 128

15
00:00:42,400 --> 00:00:44,000
source code, if that makes sense.

16
00:00:44,800 --> 00:00:47,500
So let's go ahead and get started.

17
00:00:47,500 --> 00:00:49,800
If you want to follow along with me, that's the source code that you

18
00:00:49,800 --> 00:00:52,300
want to be on and that is the source code that I'm loading up at the

19
00:00:52,300 --> 00:00:53,100
moment.

20
00:00:53,400 --> 00:00:54,300
So here we go.

21
00:00:54,300 --> 00:00:57,200
Let's go ahead and lock compilation directory there.

22
00:00:58,600 --> 00:00:59,400
I guess I never do.

23
00:00:59,400 --> 00:01:01,500
I normally do the lock compilation, directory on stream.

24
00:01:01,500 --> 00:01:02,800
I can't remember if I do or not.

25
00:01:03,300 --> 00:01:10,200
So yesterday, we surprisingly got ourselves back to working exactly as

26
00:01:10,200 --> 00:01:13,500
we should, which could given the number of things that I changed.

27
00:01:13,700 --> 00:01:16,500
I felt like it was very unusual that that happened.

28
00:01:16,800 --> 00:01:17,800
But what can I say?

29
00:01:17,900 --> 00:01:23,100
We got lucky I guess and so, you know, off we go.

30
00:01:24,100 --> 00:01:28,300
So what we want to do now is you can see that we've got our ground

31
00:01:28,500 --> 00:01:29,700
Honks back here, right?

32
00:01:30,100 --> 00:01:32,400
And we're sort of marking off where the ground chunks are.

33
00:01:32,600 --> 00:01:36,300
What I'm going to do is I'm going to turn off those markers because

34
00:01:36,300 --> 00:01:39,200
what we wanted to do today in terms of working on the render is get it

35
00:01:39,200 --> 00:01:44,200
so that we can use the renderer for pre compositing bitmaps again,

36
00:01:44,700 --> 00:01:47,700
which involves doing stuff without the perspective transform because

37
00:01:47,700 --> 00:01:49,000
like to produce those ground chunks.

38
00:01:49,000 --> 00:01:51,500
We don't want the perspective transformation there, right?

39
00:01:53,300 --> 00:01:57,700
So let's go ahead in there and and turn off those lines.

40
00:01:57,700 --> 00:02:02,000
So we can see the seam edges and I'm hoping also that the seam edges

41
00:02:02,000 --> 00:02:04,600
will bring up another thing that we want to take care of in the

42
00:02:04,600 --> 00:02:08,000
renderer which is pixel centers which I've sort of alluded to.

43
00:02:08,300 --> 00:02:14,000
So in here I believe we have a thing that that manually says like hey

44
00:02:14,000 --> 00:02:18,800
can you outline where the ground chunk is, right?

45
00:02:18,800 --> 00:02:21,000
And it's like this right here.

46
00:02:22,100 --> 00:02:22,700
So I'm going to go

47
00:02:22,900 --> 00:02:24,100
And turn that off.

48
00:02:24,100 --> 00:02:26,000
So that we don't have to see.

49
00:02:28,100 --> 00:02:30,700
Any of those like yellow lines, all right.

50
00:02:32,000 --> 00:02:36,700
So as you can see from this right, we no longer have seamless

51
00:02:36,700 --> 00:02:38,400
rendering of our ground chunks, right?

52
00:02:38,400 --> 00:02:42,400
Which is what we would expect and the reason for that is a little bit

53
00:02:42,400 --> 00:02:47,600
subtle and it's you know, it's probably been a while since you thought

54
00:02:47,600 --> 00:02:50,100
about this since we haven't talked about the ground chunks in a while

55
00:02:50,300 --> 00:02:53,200
and so I apologize for you know, bringing it back.

56
00:02:53,200 --> 00:02:57,200
But this is just something that we, you know, didn't really couldn't

57
00:02:57,200 --> 00:02:59,800
address till we finished up a bunch of other things, you know?

58
00:03:00,000 --> 00:03:01,500
So much stuff on our plate.

59
00:03:01,900 --> 00:03:03,600
So why is this happening?

60
00:03:03,600 --> 00:03:06,400
Because if you remember, we had our ground chunks, producing a nice

61
00:03:06,400 --> 00:03:08,600
seamless generated texture.

62
00:03:08,600 --> 00:03:13,200
Why are we getting, you know, this this pattern and the reason that

63
00:03:13,200 --> 00:03:15,500
we're getting this pattern, don't forget this, by the way, it's very

64
00:03:15,500 --> 00:03:16,400
important.

65
00:03:17,400 --> 00:03:22,000
The reason that we're getting this pattern day 129, oops.

66
00:03:23,500 --> 00:03:27,300
Is because what we used to do right is we had tiles here, right?

67
00:03:27,300 --> 00:03:29,400
So here's tile a and here's tile be and they have.

68
00:03:29,400 --> 00:03:29,800
But

69
00:03:30,000 --> 00:03:33,200
What and what we used to do is we used to make sure that these would

70
00:03:33,200 --> 00:03:37,600
have, but by always drawing all of the neighboring tiles whenever we

71
00:03:37,600 --> 00:03:38,400
drew one tile.

72
00:03:38,400 --> 00:03:40,500
So if we drew tale right?

73
00:03:40,500 --> 00:03:43,800
We would Splat, you know, we were doing all these Splats down there to

74
00:03:43,800 --> 00:03:45,600
produce the sort of the texture.

75
00:03:45,700 --> 00:03:48,900
And what we would do is if there were Splats that would be in B, but

76
00:03:48,900 --> 00:03:50,800
that came over to the side, right?

77
00:03:50,800 --> 00:03:54,100
We would still do that Splat when we were compositing a so that it

78
00:03:54,100 --> 00:03:56,400
would you know, still do the composite there, right?

79
00:03:57,100 --> 00:03:59,800
And so in that way, we ensured that everything

80
00:04:00,000 --> 00:04:00,800
Is continuous.

81
00:04:00,800 --> 00:04:05,500
But this presupposes, something it presupposes that the coordinate

82
00:04:05,500 --> 00:04:09,200
system is always the same when we're doing these things and it's just

83
00:04:09,200 --> 00:04:12,400
offset by however much, you know, however, far the center's are away

84
00:04:12,400 --> 00:04:13,800
from each other, right?

85
00:04:14,100 --> 00:04:18,800
That was true back when we had a purely orthogonal transform, remember

86
00:04:18,800 --> 00:04:20,300
there's two types of transforms.

87
00:04:20,399 --> 00:04:24,100
We talked about, there's perspective and there's orthogonal and

88
00:04:24,100 --> 00:04:28,800
orthogonal transforms, our ones, right where we have this sort of, you

89
00:04:28,800 --> 00:04:29,800
know, concept.

90
00:04:29,900 --> 00:04:31,700
That we're looking down.

91
00:04:31,700 --> 00:04:32,000
You know?

92
00:04:32,000 --> 00:04:35,000
We have our we have our eyeball here, right?

93
00:04:35,000 --> 00:04:38,600
We're looking down on the scene in, orthogonal transform is one where

94
00:04:38,600 --> 00:04:43,200
it doesn't matter how far away you are no matter how far away you are,

95
00:04:43,300 --> 00:04:48,300
you always project in straight lines that are that are perpendicular

96
00:04:48,300 --> 00:04:50,200
to the screen onto the screen.

97
00:04:50,400 --> 00:04:52,700
So it doesn't matter how far away something is.

98
00:04:52,700 --> 00:04:54,500
It's always at the same location.

99
00:04:55,200 --> 00:04:58,600
It doesn't actually change its horizontal or vertical position on the

100
00:04:58,600 --> 00:04:59,700
screen just by getting

101
00:05:00,000 --> 00:05:03,700
They're in or closer, you know, to you when you're doing this.

102
00:05:05,200 --> 00:05:10,800
So this is orthogonal transform, a perspective transform is one where

103
00:05:10,800 --> 00:05:12,100
that is not true, right?

104
00:05:12,100 --> 00:05:15,700
That's one that looks more more like this more like kind of a cone

105
00:05:15,700 --> 00:05:16,900
shape, right?

106
00:05:17,700 --> 00:05:18,500
This kind of thing.

107
00:05:19,700 --> 00:05:23,300
And there when something gets further away from the eyeball, it

108
00:05:23,300 --> 00:05:28,500
actually gets it actually, as it gets further away, it actually

109
00:05:28,500 --> 00:05:33,100
projects to a place sort of shrunken towards the center of the screen

110
00:05:33,100 --> 00:05:33,600
if you will.

111
00:05:33,600 --> 00:05:34,800
So, as you as you get further away,

112
00:05:34,900 --> 00:05:37,200
You move closer to the center of the screen, right?

113
00:05:37,200 --> 00:05:39,800
Because things that get further away, they sort of pass out.

114
00:05:39,800 --> 00:05:43,400
Remember we drew sort of this just perspective diagram a bunch of

115
00:05:43,400 --> 00:05:47,000
times like this where we like, okay a point that's actually here.

116
00:05:47,100 --> 00:05:50,700
Orthogonally would be projected to place here on the monitor if this

117
00:05:50,700 --> 00:05:52,400
is the monitor, right?

118
00:05:53,300 --> 00:05:56,200
Whereas in a perspective transform it actually gets perspective

119
00:05:56,400 --> 00:05:59,800
projected here so you can see things move towards that Center Line.

120
00:06:00,000 --> 00:06:01,800
And of projection, right?

121
00:06:02,900 --> 00:06:08,000
And so what we're seeing now is we're seeing this problem of we didn't

122
00:06:08,000 --> 00:06:10,600
take any of this into account and we were doing these prospective

123
00:06:10,600 --> 00:06:14,100
transforms, all of a sudden on things and we didn't actually take into

124
00:06:14,100 --> 00:06:19,100
account at all what that would do in terms of our archive you know

125
00:06:19,100 --> 00:06:20,300
creation of these bitmaps here.

126
00:06:20,300 --> 00:06:24,700
And you know we don't actually need to switch to an orthogonal

127
00:06:24,700 --> 00:06:25,900
transform necessarily.

128
00:06:25,900 --> 00:06:30,300
We could still keep a perspective transform and do it but we at least

129
00:06:30,300 --> 00:06:32,500
have to be aware of what the

130
00:06:33,000 --> 00:06:37,600
Is so that when we set up our rendering for these guys, we set them up

131
00:06:37,600 --> 00:06:39,400
so that they would work out.

132
00:06:39,400 --> 00:06:43,200
Exactly correctly to still be in the same place relative, right?

133
00:06:44,100 --> 00:06:48,900
So for example, if we were going to keep it in a perspective, in a

134
00:06:48,900 --> 00:06:53,300
perspective mode, when we do this displacement to say, oh where are

135
00:06:53,300 --> 00:06:56,000
you know, what is the offset that we're going to use for the center

136
00:06:56,000 --> 00:06:57,700
for the think place that we're looking at?

137
00:06:58,000 --> 00:07:02,700
We would have to determine exactly how wide this this sort of

138
00:07:02,900 --> 00:07:08,000
Captured area is and displace it by exactly that much, right?

139
00:07:09,200 --> 00:07:12,400
And what we were doing is we were just placing it by the pixel size of

140
00:07:12,400 --> 00:07:16,000
the bitmap, which has no relevance, right?

141
00:07:16,300 --> 00:07:17,700
It doesn't mean anything.

142
00:07:17,900 --> 00:07:20,000
The pixel size of the bitmap doesn't at all.

143
00:07:20,000 --> 00:07:24,100
Tell us how far we would have to move from one to the other.

144
00:07:24,200 --> 00:07:27,800
And so what we probably should do and I guess that this this seems

145
00:07:27,800 --> 00:07:29,100
like it makes the most sense to me.

146
00:07:30,800 --> 00:07:32,800
Well, we probably should do is actually just

147
00:07:32,900 --> 00:07:34,300
Keep it at perspective.

148
00:07:35,700 --> 00:07:37,500
But just actually talk about.

149
00:07:37,600 --> 00:07:40,900
Okay, we've got a little region that we want to capture, let's make

150
00:07:40,900 --> 00:07:43,500
sure that we place the camera, so that is going to capture that region

151
00:07:43,500 --> 00:07:45,500
and then do the rendering right.

152
00:07:45,700 --> 00:07:48,900
I think that's the more sane way to go about it.

153
00:07:50,200 --> 00:07:52,700
So, yeah, that's what we're going to do.

154
00:07:53,800 --> 00:07:57,900
And let's take a look here at, at the way that Phil ground chunk

155
00:07:58,000 --> 00:07:59,800
situation is working, right?

156
00:08:01,600 --> 00:08:04,800
So what we end up having here and, like I said, I think this will get

157
00:08:04,800 --> 00:08:07,400
into some things in terms of the render that stuff that we need to

158
00:08:07,400 --> 00:08:08,800
clean up if that makes sense.

159
00:08:09,900 --> 00:08:11,700
So, when we go to fill the ground chunk, right?

160
00:08:11,700 --> 00:08:15,400
You can see what we're doing here, we're creating a render group, we

161
00:08:15,400 --> 00:08:18,900
create the buffer, you know, with the height of that, we're trying to

162
00:08:18,900 --> 00:08:20,800
fill in terms of how big the ground chunk is.

163
00:08:21,300 --> 00:08:24,000
And then we just kind of go through here and we don't really think

164
00:08:24,000 --> 00:08:24,700
about it anymore.

165
00:08:24,700 --> 00:08:29,100
We just go ahead and do you know, all the drawing that we were going

166
00:08:29,100 --> 00:08:29,700
to do?

167
00:08:30,000 --> 00:08:31,200
And the width and height?

168
00:08:31,300 --> 00:08:34,900
Height that we actually use is the chunk demand meters.

169
00:08:34,900 --> 00:08:39,500
So we actually are placing these things correctly, right?

170
00:08:40,200 --> 00:08:43,900
But we are not actually doing in any particular way.

171
00:08:43,900 --> 00:08:47,900
I don't think anyway is accounting for where the camera is looking at

172
00:08:47,900 --> 00:08:51,400
how big, the cameras area actually is.

173
00:08:51,800 --> 00:08:56,400
And in fact, if I look through here, I don't even see us actually

174
00:08:56,400 --> 00:08:57,100
doing

175
00:09:00,000 --> 00:09:02,900
We even where is Center.

176
00:09:05,100 --> 00:09:06,300
How are we getting Center?

177
00:09:06,800 --> 00:09:11,000
Center was chunk offset times with chunk offset times height.

178
00:09:14,600 --> 00:09:15,900
Yeah.

179
00:09:17,500 --> 00:09:19,200
So are we passing that in?

180
00:09:21,300 --> 00:09:22,000
No.

181
00:09:22,400 --> 00:09:26,000
Okay, so we are passing that in we're passing now.

182
00:09:27,600 --> 00:09:28,600
Where is that getting?

183
00:09:29,200 --> 00:09:30,400
All right, I'm confused.

184
00:09:33,700 --> 00:09:35,200
Where we ever even?

185
00:09:36,800 --> 00:09:38,000
Dealing with this.

186
00:09:38,000 --> 00:09:38,900
I don't even know.

187
00:09:44,900 --> 00:09:46,700
I am totally confused right now.

188
00:09:52,500 --> 00:09:53,600
Yes.

189
00:09:53,600 --> 00:09:58,500
Oh so we really just don't do anything here to try and deal with that

190
00:09:58,500 --> 00:09:58,700
at.

191
00:09:58,700 --> 00:10:00,300
All right.

192
00:10:00,800 --> 00:10:05,700
So really we're just all we're doing is we're fully just counting

193
00:10:06,400 --> 00:10:08,900
which I guess worked fine in the in the old days because that's all it

194
00:10:08,900 --> 00:10:13,100
was all we're doing is counting on the width and the height there.

195
00:10:14,400 --> 00:10:18,600
We're just totally counting on those which are, which are sent to the

196
00:10:18,600 --> 00:10:23,200
chunk, Tim and M, we're just totally counting on those to just work,

197
00:10:23,300 --> 00:10:23,900
right?

198
00:10:25,300 --> 00:10:28,300
And yet we didn't actually do anything to ensure that that would

199
00:10:28,300 --> 00:10:30,200
actually be the case, right?

200
00:10:30,500 --> 00:10:33,100
So I don't know if you can see this but, you know, width and height

201
00:10:33,100 --> 00:10:33,600
here.

202
00:10:34,000 --> 00:10:35,700
Yeah, it's going to be the chunk demand M.

203
00:10:36,000 --> 00:10:36,600
We're going ahead.

204
00:10:36,600 --> 00:10:42,300
And we're using those but we haven't actually told the renderer that

205
00:10:42,300 --> 00:10:43,700
that's how big we want.

206
00:10:43,800 --> 00:10:48,100
That region to actually map to write because you remember inside the

207
00:10:48,100 --> 00:10:51,700
renderer, it's making some assumptions about the size of the Monitor

208
00:10:51,700 --> 00:10:55,700
and stuff and it's setting up the transform when we, you know, by

209
00:10:55,700 --> 00:10:58,100
default right to work off of that.

210
00:10:58,100 --> 00:11:01,500
So it's just assuming it's getting all of this stuff in here and it's

211
00:11:01,500 --> 00:11:03,700
just assuming that that's going to line up properly.

212
00:11:03,700 --> 00:11:07,700
But there's no actual reason to think that that will write.

213
00:11:07,700 --> 00:11:12,100
There's no, these are totally separate things and they actually have

214
00:11:12,100 --> 00:11:13,800
no relationship to each other.

215
00:11:13,800 --> 00:11:14,600
Other, right?

216
00:11:15,500 --> 00:11:18,300
So there's no reason to think that this would work in any particular

217
00:11:18,300 --> 00:11:21,800
way like distance above Target here, as you change distance above

218
00:11:21,800 --> 00:11:25,100
Target, whatever you happen to set it to, you're going to get totally

219
00:11:25,100 --> 00:11:29,000
different results as to what the tiling offset would actually be

220
00:11:29,200 --> 00:11:29,800
right.

221
00:11:31,100 --> 00:11:35,900
So what we needed to do is we would need to set, we would need to set

222
00:11:35,900 --> 00:11:40,300
things up, so that we're clear about how big the region is that we're

223
00:11:40,300 --> 00:11:43,700
actually rendering to that's like pretty

224
00:11:43,900 --> 00:11:44,500
Didn't.

225
00:11:44,600 --> 00:11:48,500
And so we need to work that out, right?

226
00:11:49,700 --> 00:11:51,100
That's basically what we need to do.

227
00:11:51,900 --> 00:11:55,300
So we have our transform set this way at the moment.

228
00:11:59,000 --> 00:11:59,800
and I guess to,

229
00:12:00,000 --> 00:12:04,100
Honest, I don't really know how we want to do this, so I'll tell you

230
00:12:04,100 --> 00:12:08,000
what I'm thinking about in my head, what I'm thinking about in my head

231
00:12:08,600 --> 00:12:11,500
is that inside, Phil ground chunk, right in the future.

232
00:12:11,500 --> 00:12:14,600
We're going to want to be able to stick things into the ground chunks

233
00:12:15,800 --> 00:12:17,500
sort of at will like.

234
00:12:17,500 --> 00:12:20,100
We're going to want to be able to do things like maybe put Footprints

235
00:12:20,100 --> 00:12:22,700
in there when someone walks around on it or something.

236
00:12:22,700 --> 00:12:27,000
You know, I mean like if you think about what's going on here, right?

237
00:12:27,000 --> 00:12:29,900
Like as I move across this thing, maybe I want to write.

238
00:12:30,000 --> 00:12:31,800
Nothing into that buffer, you know.

239
00:12:32,800 --> 00:12:36,100
So I feel like we're going to want to be able to address ground

240
00:12:36,100 --> 00:12:40,900
buffers in terms of coordinates.

241
00:12:40,900 --> 00:12:45,100
That actually mean something in the real world, right?

242
00:12:45,400 --> 00:12:48,600
So I think what we want to do is we want to make it so that we're

243
00:12:48,600 --> 00:12:53,500
actually writing into the ground chunks, using actual real world

244
00:12:53,600 --> 00:12:58,200
coordinates based off, you know, maybe the center of the chunk, right?

245
00:12:58,700 --> 00:12:59,900
And so we're doing

246
00:13:00,000 --> 00:13:01,300
Matt right now.

247
00:13:02,300 --> 00:13:05,700
Actually to a certain extent by saying but you know we're kind of

248
00:13:06,200 --> 00:13:10,000
we've kind of got that this routine written that way, right.

249
00:13:11,400 --> 00:13:14,400
So I don't actually know once we switched our through traffic stop

250
00:13:14,400 --> 00:13:17,800
multiplying this I don't actually think we want to say that anymore.

251
00:13:18,400 --> 00:13:24,100
So if we take a look in here with and height in there, go ahead and

252
00:13:24,900 --> 00:13:25,200
yeah.

253
00:13:26,100 --> 00:13:27,900
So if we have the width and height in here,

254
00:13:29,700 --> 00:13:33,300
And we say, you know, chunk doing m x, hm y.

255
00:13:34,200 --> 00:13:38,400
Then that actually is what we want, the width of this buffer, to be.

256
00:13:39,300 --> 00:13:43,900
And then when we go in and use our coordinates, we want them to be

257
00:13:43,900 --> 00:13:47,700
relative to that, which it seems like, we are pretty much doing right?

258
00:13:47,700 --> 00:13:54,000
The halftime of that would be would be exactly as as stated, right?

259
00:13:54,700 --> 00:13:58,000
But because our coordinates are now are going to be relative to the

260
00:13:58,000 --> 00:13:59,300
center anyway at this.

261
00:13:59,500 --> 00:14:00,000
Point.

262
00:14:00,100 --> 00:14:03,600
I feel like we no longer should really have to deal with that, right?

263
00:14:03,700 --> 00:14:04,100
Oops.

264
00:14:05,700 --> 00:14:11,200
Because I don't think that actually don't think that actually needs to

265
00:14:11,400 --> 00:14:11,700
up.

266
00:14:11,700 --> 00:14:12,300
No, that's fine.

267
00:14:12,600 --> 00:14:14,700
All right, there we go.

268
00:14:15,400 --> 00:14:16,300
So we do need that.

269
00:14:16,300 --> 00:14:19,500
We just need that to figure out what this splatting span is

270
00:14:19,500 --> 00:14:20,200
essentially.

271
00:14:21,200 --> 00:14:26,900
So okay, so if we do that, right, and we are doing all of these in

272
00:14:26,900 --> 00:14:29,200
regular coordinates, so,

273
00:14:29,400 --> 00:14:32,400
We're splatting in World coordinates, which I think is what we want to

274
00:14:32,400 --> 00:14:34,600
do then.

275
00:14:38,400 --> 00:14:39,600
We want to.

276
00:14:42,300 --> 00:14:45,300
We want to have some way here of.

277
00:14:47,700 --> 00:14:54,000
Of telling the renderer to use that transfer, right?

278
00:14:54,000 --> 00:14:59,700
And so I think I'm trying to think about if there's

279
00:15:01,700 --> 00:15:05,100
I'm trying to think about what the reasoning is that I need to go

280
00:15:05,100 --> 00:15:08,700
through here in order to make sure that this works properly.

281
00:15:10,100 --> 00:15:15,500
So first of all Center, I don't feel like Center actually ever needs

282
00:15:15,500 --> 00:15:17,600
to be taken into account now, right?

283
00:15:18,800 --> 00:15:22,800
Because everything by default is going to be off of the center.

284
00:15:23,100 --> 00:15:27,800
So I feel like really, when you're stamping, all you need to do is you

285
00:15:27,800 --> 00:15:31,300
need to, you know, you're already going off and 0.

286
00:15:33,100 --> 00:15:33,400
Oh, no.

287
00:15:33,400 --> 00:15:33,800
OK.

288
00:15:33,800 --> 00:15:34,300
That's fine.

289
00:15:34,500 --> 00:15:37,900
That nevermind Center is just there to handle the other chunks, so

290
00:15:37,900 --> 00:15:38,400
that's fine.

291
00:15:38,500 --> 00:15:42,400
Yeah, that's that's as it should be because Center will be 0, 0, and

292
00:15:42,400 --> 00:15:44,600
we're on the current chunk, right?

293
00:15:44,600 --> 00:15:45,400
So that's all fine.

294
00:15:46,700 --> 00:15:48,500
So I think, yeah.

295
00:15:48,500 --> 00:15:52,500
All we really need to do is make sure that the scaling of these

296
00:15:52,600 --> 00:15:57,700
matches the scale that scaling that we would be seeing if we were

297
00:15:57,800 --> 00:16:01,300
looking at the ground chunk at its standard.

298
00:16:01,400 --> 00:16:07,700
Like flat plane at the sort of distance above it that we that we were,

299
00:16:07,800 --> 00:16:08,500
right?

300
00:16:09,300 --> 00:16:12,400
And I'm trying to think about how that should work.

301
00:16:13,800 --> 00:16:17,900
I'm just trying to think about whether we want to because I guess once

302
00:16:17,900 --> 00:16:20,900
we have the world coordinates in here, if we change it to

303
00:16:20,900 --> 00:16:23,000
orthographic, it would still be just fine.

304
00:16:27,400 --> 00:16:28,100
Mmm-hmm.

305
00:16:35,200 --> 00:16:36,700
Yeah, this is a bit of a Puzzler.

306
00:16:40,200 --> 00:16:42,800
This is a bit of a Puzzler for me.

307
00:16:44,900 --> 00:16:49,500
So I think what I'm going to do is I'm going to start by writing what

308
00:16:49,500 --> 00:16:54,000
I want to be able to say here if that makes sense like I'm just going

309
00:16:54,000 --> 00:17:00,600
to call the renderer effectively with sort of a you know an API call.

310
00:17:00,600 --> 00:17:05,900
Basically that says here is how I want to to treat.

311
00:17:08,200 --> 00:17:11,099
The transforms and then I'll go back.

312
00:17:11,099 --> 00:17:14,400
Work it out in the render into some way that allows it to support both

313
00:17:14,400 --> 00:17:15,700
cases, right?

314
00:17:17,500 --> 00:17:18,099
So,

315
00:17:22,800 --> 00:17:25,700
and I do think now that I'm thinking about it more, I do suspect that

316
00:17:25,700 --> 00:17:28,700
we really do want this to be orthographic because what I want to be

317
00:17:28,700 --> 00:17:33,700
able to say is just here is the, the M, the width and height in meters

318
00:17:33,700 --> 00:17:35,400
of this chunk that I'm rendering.

319
00:17:35,700 --> 00:17:38,600
So whenever I slap something into it, it should be exactly that,

320
00:17:38,600 --> 00:17:39,200
right?

321
00:17:39,800 --> 00:17:42,500
So the more I think about it, I think we really just do want to be

322
00:17:42,500 --> 00:17:44,400
able to set it up for orthographic.

323
00:17:45,400 --> 00:17:49,100
So, I think what I want to do, is basically say, like orthographic,

324
00:17:49,200 --> 00:17:50,300
you know, something like this.

325
00:17:51,300 --> 00:17:56,300
And I say that you know, the render group is orthographic and you

326
00:17:56,300 --> 00:17:59,800
know, I pass, it may be something like here's the width and height.

327
00:18:00,000 --> 00:18:03,200
Of the, you know, of the buffer that I'm writing to.

328
00:18:03,200 --> 00:18:10,600
And then I also want to tell you the width and height, you know, of of

329
00:18:10,600 --> 00:18:13,600
like in World units.

330
00:18:13,600 --> 00:18:14,300
That that is.

331
00:18:14,300 --> 00:18:17,400
So here's the like pixel dimensions.

332
00:18:17,400 --> 00:18:19,100
And here's the world dimensions.

333
00:18:19,100 --> 00:18:23,400
And then I want you to just deal with that, and make sure that I can

334
00:18:23,400 --> 00:18:27,500
do everything that I want to do from there on out, right?

335
00:18:27,500 --> 00:18:29,500
So, maybe something.

336
00:18:30,000 --> 00:18:31,700
Nothing like this, right?

337
00:18:33,600 --> 00:18:37,200
That seems like that seems like what I would, what I would prefer.

338
00:18:38,600 --> 00:18:44,000
So yeah, yeah, I like that, and I'll leave that there.

339
00:18:45,200 --> 00:18:47,700
So I think this is basically what we want, right?

340
00:18:47,700 --> 00:18:53,600
We want to go ahead and say decide what our push buffer sizes.

341
00:18:53,600 --> 00:18:54,000
Okay?

342
00:18:55,400 --> 00:19:00,100
That's that's probably something that should be here, right?

343
00:19:00,300 --> 00:19:00,700
Okay.

344
00:19:02,000 --> 00:19:03,000
So in

345
00:19:03,100 --> 00:19:03,500
Here.

346
00:19:03,500 --> 00:19:08,100
Right, we're we're going ahead and we're figuring out how big we want

347
00:19:08,100 --> 00:19:08,500
them to be.

348
00:19:08,500 --> 00:19:12,200
We then set up the orthographic display mode, everything through here

349
00:19:12,200 --> 00:19:15,700
will, now be directly in World units, which I think is what we want.

350
00:19:16,000 --> 00:19:18,700
And then when we're done, we are done right?

351
00:19:19,300 --> 00:19:24,300
And then what I want to do sort of symmetrically is I would like to

352
00:19:24,300 --> 00:19:27,000
whenever we're doing that anywhere else, right?

353
00:19:27,000 --> 00:19:31,700
Whenever we're for some other reason doing a allocate render group and

354
00:19:31,700 --> 00:19:32,800
about to do a bunch of friend ring.

355
00:19:33,100 --> 00:19:33,500
With it.

356
00:19:34,100 --> 00:19:37,900
Then what we want to do is say the equivalent thing, right?

357
00:19:37,900 --> 00:19:42,800
We want to put it into a perspective mode and, you know, past that

358
00:19:42,800 --> 00:19:46,700
stuff in and that way, you know, we will allow people to freely switch

359
00:19:46,700 --> 00:19:49,400
between them however, they want to, right?

360
00:19:49,600 --> 00:19:50,600
And that'll be easy.

361
00:19:51,000 --> 00:19:54,800
So, basically, if I come in here and I say, all right, I want to

362
00:19:54,800 --> 00:19:55,800
perspective mode.

363
00:19:55,900 --> 00:19:58,900
Here's the width and height in pixels of the buffer,

364
00:20:00,300 --> 00:20:03,600
And then the stuff that I could pass in here, I guess would be like

365
00:20:03,600 --> 00:20:06,200
this sort of information, right?

366
00:20:07,200 --> 00:20:08,100
It would be

367
00:20:12,600 --> 00:20:14,400
It would be this stuff, right?

368
00:20:14,700 --> 00:20:17,100
So I would pass in like the focal length.

369
00:20:17,200 --> 00:20:23,000
I'd pass in the distance above the Target and I'd pass in like the m 2

370
00:20:23,000 --> 00:20:23,700
pixels.

371
00:20:25,400 --> 00:20:29,500
M to pixels in this case,

372
00:20:31,600 --> 00:20:35,200
You know, like I said that's kind of a value.

373
00:20:35,200 --> 00:20:38,200
And in fact, I think maybe this is a good thing to get this out of the

374
00:20:38,200 --> 00:20:39,400
renderer, right?

375
00:20:42,400 --> 00:20:47,400
M, 2 pixels would just get passed in to the renderer here as part of

376
00:20:47,400 --> 00:20:48,900
setting up that perspective.

377
00:20:49,000 --> 00:20:52,500
So it's basically just saying, you know, here's here's the transform

378
00:20:52,500 --> 00:20:56,700
that happens for m 2 pixels, which is basically what the other thing

379
00:20:56,700 --> 00:20:57,800
is doing as well, right?

380
00:20:57,800 --> 00:20:59,700
So they're basically always saying what they want those

381
00:21:00,000 --> 00:21:00,900
World units to be.

382
00:21:00,900 --> 00:21:04,800
And they just it's just part of that perspective, transform and then

383
00:21:04,800 --> 00:21:08,300
this stuff would just get set directly to that, right?

384
00:21:08,500 --> 00:21:13,100
So down here we'd have something that actually does these things.

385
00:21:13,200 --> 00:21:23,600
So it sets that stuff like that right, monitor half dim in meters is

386
00:21:23,600 --> 00:21:26,600
something that would I guess.

387
00:21:31,700 --> 00:21:36,300
always have to be set essentially after, you know, whenever I'm

388
00:21:36,300 --> 00:21:36,800
assuming

389
00:21:38,300 --> 00:21:40,600
Whenever this stuff changed, right?

390
00:21:41,300 --> 00:21:45,700
So this stuff has to be done here as well, right?

391
00:21:45,700 --> 00:21:51,900
We'd have to compute pixels to M by taking the safe ratio, there of

392
00:21:51,900 --> 00:21:54,100
whatever the m 2 pixels is that it's passed in.

393
00:21:54,400 --> 00:21:58,800
And we'd have to do that monitor have Tim in meters as a computation.

394
00:21:58,800 --> 00:22:05,800
That sort of facts, it out and I think that's roughly what we would

395
00:22:05,800 --> 00:22:07,100
need to do, right?

396
00:22:07,100 --> 00:22:07,500
So,

397
00:22:07,700 --> 00:22:10,600
If we are to make one of these guys here, right?

398
00:22:10,600 --> 00:22:15,800
Which is render group and it you basically pass in, you know, a width

399
00:22:16,400 --> 00:22:19,000
and a height here in pixels.

400
00:22:19,500 --> 00:22:24,500
So like pixel with pixel height and then we have a m m to pixel value,

401
00:22:24,500 --> 00:22:27,200
which tells you how it should be scaled.

402
00:22:27,300 --> 00:22:32,300
And then we have our focal length and our distance above Target.

403
00:22:34,200 --> 00:22:34,700
There we go.

404
00:22:37,700 --> 00:22:39,100
And focal length.

405
00:22:43,600 --> 00:22:44,500
Yeah.

406
00:22:46,100 --> 00:22:46,900
Yeah.

407
00:22:48,800 --> 00:22:50,100
That looks reasonable.

408
00:22:51,100 --> 00:22:54,100
So, I guess I'll change these to use the same name as we were doing

409
00:22:54,100 --> 00:22:54,700
over here.

410
00:22:55,000 --> 00:22:59,100
Although resolution pixels x is not the same thing, right?

411
00:23:01,700 --> 00:23:04,900
Resolution pixels x is not really the same thing, so I don't know.

412
00:23:04,900 --> 00:23:06,100
It's a little confusing.

413
00:23:06,300 --> 00:23:10,200
We should have to, we should think about this a little bit, maybe

414
00:23:10,200 --> 00:23:14,400
later about whether we want these values to be specified separately.

415
00:23:14,600 --> 00:23:19,900
Meaning you don't always you might, you might want the 10:30 to be

416
00:23:19,900 --> 00:23:21,500
different, it does matter, it's fine.

417
00:23:22,100 --> 00:23:29,300
Alright, so in this case, let's see, leave the to do in here just in

418
00:23:29,300 --> 00:23:30,900
case we want to think about that some more later.

419
00:23:31,800 --> 00:23:35,700
So in this case once we have that perspective transform that sets up

420
00:23:35,700 --> 00:23:39,700
all the things that we would need to set up there and so but you know,

421
00:23:39,700 --> 00:23:43,600
we may have to change these parameters around in case we actually want

422
00:23:43,600 --> 00:23:45,900
to do something else.

423
00:23:46,100 --> 00:23:49,500
In case we find that orthogonal needs to be implemented slightly

424
00:23:49,500 --> 00:23:50,100
differently.

425
00:23:51,700 --> 00:23:53,100
So worth the graphic,

426
00:23:54,700 --> 00:23:55,000
Yeah.

427
00:23:56,900 --> 00:23:59,600
Render group be passing here.

428
00:24:01,200 --> 00:24:06,300
Render group group pixel width.

429
00:24:07,600 --> 00:24:08,800
Pixel height.

430
00:24:09,500 --> 00:24:16,200
And then we just want M with and M height, right?

431
00:24:17,500 --> 00:24:23,100
And so what we need to figure out here is, let's see how we want to do

432
00:24:23,100 --> 00:24:23,500
this.

433
00:24:23,900 --> 00:24:24,200
Oops,

434
00:24:27,400 --> 00:24:28,500
pixels to meters.

435
00:24:28,500 --> 00:24:30,800
We don't actually need anymore, right?

436
00:24:32,500 --> 00:24:37,500
So in fact, m 2 pixels will actually be different depending on who is

437
00:24:37,500 --> 00:24:37,800
using it?

438
00:24:37,800 --> 00:24:38,300
Let me see.

439
00:24:38,300 --> 00:24:41,800
Where m 2 pixels actually is getting used.

440
00:24:43,200 --> 00:24:43,800
All right.

441
00:24:45,300 --> 00:24:48,600
M 4 pixels is rejected.

442
00:24:48,700 --> 00:24:49,900
There's the scale.

443
00:24:52,800 --> 00:24:58,700
Yeah, so that's literally the only place that m 2 pixels is getting

444
00:24:58,700 --> 00:24:59,400
used.

445
00:25:00,400 --> 00:25:01,100
At all.

446
00:25:02,300 --> 00:25:04,600
All right, and then pixels to meters.

447
00:25:10,100 --> 00:25:13,200
So that's being used in a couple different places, right?

448
00:25:14,600 --> 00:25:15,000
Yeah.

449
00:25:17,700 --> 00:25:19,500
And what do we do for our reverse mapping?

450
00:25:19,500 --> 00:25:24,900
For unprojected, all we do is just yeah, we just do the straight

451
00:25:24,900 --> 00:25:25,100
forward.

452
00:25:25,100 --> 00:25:26,800
Stuff at distance from camera.

453
00:25:27,200 --> 00:25:32,400
So for unprojected we're just doing this the the straight focal length

454
00:25:32,400 --> 00:25:33,200
computation.

455
00:25:36,900 --> 00:25:38,000
Mmm,

456
00:25:43,200 --> 00:25:46,500
So if we were going to go full 3d with this, we would change these out

457
00:25:46,500 --> 00:25:48,700
to probably homogeneous and do them that way.

458
00:25:48,700 --> 00:25:50,800
I'm not sure that we really want to do that.

459
00:25:51,100 --> 00:25:54,200
So I'm trying to think of what the most convenient way is to allow

460
00:25:54,200 --> 00:25:58,200
both of these things to flow through the pipeline as conveniently as

461
00:25:58,200 --> 00:25:58,900
possible.

462
00:26:00,000 --> 00:26:01,800
Obviously some of these things are trivial.

463
00:26:03,000 --> 00:26:08,200
The screen center is the same in orthographic and the monitor

464
00:26:08,200 --> 00:26:12,000
half-demon m is very straightforward because we're actually passing in

465
00:26:12,600 --> 00:26:15,300
what we expect that to be right.

466
00:26:17,000 --> 00:26:20,800
So that's also very simple but

467
00:26:23,900 --> 00:26:28,200
So I guess what we could do is just say you don't actually get to to

468
00:26:28,200 --> 00:26:31,400
specify that maybe they have to still, they have to be rectilinear.

469
00:26:31,400 --> 00:26:33,000
Like we could just force it that way.

470
00:26:33,400 --> 00:26:37,000
And then not have to introduce sort of that warping because basically

471
00:26:37,000 --> 00:26:39,200
if we have both of those in there, that was the problem because it

472
00:26:39,200 --> 00:26:43,500
ends up making sort of this, this warping concept if that makes sense,

473
00:26:44,200 --> 00:26:45,900
which is, which is a bit of a problem.

474
00:26:47,000 --> 00:26:50,900
So we could do here is say, alright, you know, we've got the pixel

475
00:26:50,900 --> 00:26:53,600
within the pixel height and then the m 2 pixels and it has to actually

476
00:26:53,600 --> 00:26:57,100
be exactly that because then we would not have to change anything.

477
00:26:57,100 --> 00:26:57,400
Right?

478
00:26:57,400 --> 00:26:59,600
Then most of the stuff just flows.

479
00:27:00,200 --> 00:27:03,000
Properly and there isn't actually any any weirdness there.

480
00:27:03,000 --> 00:27:06,300
So all we really have to do is think about how we want to set up

481
00:27:06,300 --> 00:27:09,800
focal, length and distance above Target to make sure that things

482
00:27:10,100 --> 00:27:11,200
worked properly.

483
00:27:12,500 --> 00:27:15,500
In, in terms of this transform, we might have to introduce an extra

484
00:27:15,500 --> 00:27:16,800
variable there, right?

485
00:27:17,400 --> 00:27:21,000
So I'm going to take a look and see if that's reasonable to do over

486
00:27:21,000 --> 00:27:26,700
here in phylogram chunk that when we do orthographic, you know, and we

487
00:27:26,700 --> 00:27:28,300
pass, we pass that there.

488
00:27:28,700 --> 00:27:29,800
I guess what I need

489
00:27:30,000 --> 00:27:31,100
Would need to say here.

490
00:27:31,100 --> 00:27:34,200
Is we need to say that the width equals the height, always?

491
00:27:34,500 --> 00:27:37,700
Now we're not allowing it to be were pee, right?

492
00:27:38,500 --> 00:27:40,100
And then the chunk dim in meters.

493
00:27:40,100 --> 00:27:43,700
So if you wanted M to pixels, you would just take whatever that is,

494
00:27:43,700 --> 00:27:44,000
right?

495
00:27:44,000 --> 00:27:47,600
So you know the width and you divide it by however many pixels it was

496
00:27:47,700 --> 00:27:50,100
and that's the m 2 pixels value, right?

497
00:27:51,300 --> 00:27:55,100
So we could do that and that's always good but now we have this

498
00:27:55,100 --> 00:27:58,700
problem of you know and you know I guess I can compile this and make

499
00:27:58,700 --> 00:27:59,400
sure that we're

500
00:28:01,800 --> 00:28:06,000
Going to work here first before I do anything, fancier, but let me go

501
00:28:06,000 --> 00:28:07,800
ahead and first get everything.

502
00:28:09,100 --> 00:28:10,000
Untie pode.

503
00:28:17,000 --> 00:28:17,600
There we go.

504
00:28:19,400 --> 00:28:21,200
Focal length, right?

505
00:28:21,200 --> 00:28:25,800
So we don't know what these are are Mississippi's 21 in one allocate

506
00:28:25,800 --> 00:28:28,100
Brenda group, right?

507
00:28:28,100 --> 00:28:32,600
We need to get rid of the extra information getting passed here.

508
00:28:33,400 --> 00:28:40,800
Like so and resolution pixels x is just this value, so that's fine.

509
00:28:42,200 --> 00:28:45,600
And so I just want to make sure that we didn't break anything by

510
00:28:45,600 --> 00:28:47,600
introducing that and there we go.

511
00:28:48,700 --> 00:28:52,700
So, now what we have to do is we have to make sure that we have some

512
00:28:52,700 --> 00:28:55,000
way of making that orthographic version work.

513
00:28:56,300 --> 00:28:59,100
And so now we gotta, yeah, we got to figure out how we're going to do

514
00:28:59,100 --> 00:28:59,300
that.

515
00:28:59,300 --> 00:29:01,200
So here's our orthographic version.

516
00:29:02,700 --> 00:29:03,100
Oops.

517
00:29:07,700 --> 00:29:12,200
And what we know is we've passed in the m 2 pixels and we've passed in

518
00:29:13,800 --> 00:29:15,900
sort of this this additional information here.

519
00:29:15,900 --> 00:29:17,500
So, this is our m 2 pixels value.

520
00:29:18,000 --> 00:29:19,800
But now, since we have,

521
00:29:21,400 --> 00:29:25,500
Since we have this perspective, respect this perspective, projection

522
00:29:25,500 --> 00:29:26,200
going on.

523
00:29:26,300 --> 00:29:30,600
What we want to do is figure out some way that we can turn it off,

524
00:29:30,700 --> 00:29:31,300
right?

525
00:29:31,600 --> 00:29:35,100
So in the render group, when we do that render, we gotta change the

526
00:29:35,100 --> 00:29:37,800
name of this function because it's a it has nothing to do with

527
00:29:37,800 --> 00:29:40,400
entities at all anymore but you know what do you do?

528
00:29:41,100 --> 00:29:43,500
So eventually we'll change the name of that function you could just

529
00:29:43,500 --> 00:29:47,700
call it project and so in this function right we've got some stuff

530
00:29:47,700 --> 00:29:50,700
that's happening here that we wouldn't want to do so for

531
00:29:51,000 --> 00:29:53,600
Cool, what we would want to do in orthographic, right?

532
00:29:53,600 --> 00:29:59,000
This is if it was orthographic, what we would want to do is say okay

533
00:29:59,300 --> 00:29:59,800
the results,

534
00:30:00,000 --> 00:30:00,500
Hey Liz.

535
00:30:00,500 --> 00:30:02,400
You know, it's always going to be 1 point 0.

536
00:30:02,800 --> 00:30:06,200
The result valid is always going to be true because it doesn't there's

537
00:30:06,200 --> 00:30:09,800
there's actually no way to have things scale in any particular way,

538
00:30:09,900 --> 00:30:10,500
right?

539
00:30:11,100 --> 00:30:16,000
The result key is always just going to be this it's never going to

540
00:30:16,000 --> 00:30:18,800
have anything else involved in it.

541
00:30:19,700 --> 00:30:24,000
It's literally actually never going to do anything other than do a m,

542
00:30:24,000 --> 00:30:29,500
2 pixels transform on sort of the, the actual value that gets passed

543
00:30:29,500 --> 00:30:29,600
in.

544
00:30:29,600 --> 00:30:29,800
So

545
00:30:30,000 --> 00:30:34,700
In fact, we could just say it's this its original p x y, right?

546
00:30:35,700 --> 00:30:40,200
So you can kind of see that that this is all we would do, right?

547
00:30:41,300 --> 00:30:43,500
So it sort of the graphic this is all we would have to do.

548
00:30:43,600 --> 00:30:47,900
It was not Arthur graphic, we need to do this other stuff, right?

549
00:30:48,400 --> 00:30:53,400
And so when I'm just trying to figure out is you know, what do we at?

550
00:30:53,400 --> 00:30:55,300
Yeah, what do we actually want to do?

551
00:30:59,100 --> 00:31:01,000
Where is the?

552
00:31:04,100 --> 00:31:06,100
Oh right, scale gets handled outside of this.

553
00:31:06,100 --> 00:31:07,400
That's like, where's the scale parameter?

554
00:31:07,900 --> 00:31:08,200
Right?

555
00:31:08,200 --> 00:31:08,700
Doesn't matter.

556
00:31:09,600 --> 00:31:13,000
So this is what we would want to do for orthographic.

557
00:31:13,700 --> 00:31:19,100
And so, what that means is that the result p, as that happens we would

558
00:31:19,100 --> 00:31:23,200
have to just make sure that projected X Y stays the same as original

559
00:31:23,200 --> 00:31:25,000
pxy, right?

560
00:31:25,300 --> 00:31:29,800
And the way that we could were calculating that at the moment is we

561
00:31:29,800 --> 00:31:33,700
take whatever that raw XY was, which is this value here, right?

562
00:31:34,200 --> 00:31:37,200
And we're going ahead and we're multiplying it by the focal length

563
00:31:37,200 --> 00:31:39,800
over the pz distance, right?

564
00:31:40,300 --> 00:31:43,600
So there's not going to be any way for us to set that so that it

565
00:31:43,600 --> 00:31:44,400
doesn't.

566
00:31:48,400 --> 00:31:50,400
So that it doesn't change the value.

567
00:31:50,700 --> 00:31:54,100
So, in order to do this, we have to, like, at least introduce some

568
00:31:54,100 --> 00:31:59,800
other nominal value that would make this work, right?

569
00:32:00,600 --> 00:32:06,100
And so in order to do that, I think what I probably could do here is

570
00:32:06,100 --> 00:32:07,800
say, you know,

571
00:32:10,800 --> 00:32:13,700
And also I guess scale is also a problem.

572
00:32:14,800 --> 00:32:24,000
Mmm-hmm I mean really, it just be the case of either introducing an if

573
00:32:24,000 --> 00:32:26,600
or introducing coefficients, I think I'm just going to do the if like

574
00:32:27,100 --> 00:32:30,000
I think the if is really just easier, right?

575
00:32:30,000 --> 00:32:33,000
I mean it's just a question of just doing.

576
00:32:35,600 --> 00:32:37,500
You know, this sort of thing.

577
00:32:40,600 --> 00:32:49,700
I may just be the right thing to do for now, right, I don't know, it's

578
00:32:49,700 --> 00:32:53,900
the easiest thing and when we could expand everything out to have the

579
00:32:53,900 --> 00:32:56,700
extra coefficients, and we effectively we doing sort of an affine

580
00:32:56,700 --> 00:32:57,400
transform.

581
00:32:58,900 --> 00:32:59,800
Sorry, a homogeneous

582
00:33:00,000 --> 00:33:01,800
From on it but I don't know.

583
00:33:01,800 --> 00:33:03,700
It doesn't seem like we really want to do that.

584
00:33:04,500 --> 00:33:05,600
Call that orthographic.

585
00:33:07,600 --> 00:33:12,600
So yeah, so I don't know that that to me just I can't really think of

586
00:33:12,600 --> 00:33:13,600
any reason not to do it.

587
00:33:13,600 --> 00:33:16,100
So I'm just going to do it and then later, I guess we'll see if it

588
00:33:16,100 --> 00:33:18,700
turns out to be a bad decision then.

589
00:33:18,700 --> 00:33:22,100
Well, we'll know when we get there and it's obviously a bad decision.

590
00:33:22,400 --> 00:33:26,200
So orthographic in the case of perspective is going to be false or if

591
00:33:26,200 --> 00:33:29,800
the graphic in the case of orthographic unsurprisingly will be true.

592
00:33:32,400 --> 00:33:36,200
And so in this case focal length and distance above targets.

593
00:33:37,000 --> 00:33:39,900
We actually don't know what those would be.

594
00:33:39,900 --> 00:33:42,500
I guess we could just claim that they're very large.

595
00:33:42,500 --> 00:33:47,200
I suppose I don't actually know because what we want to do is make

596
00:33:47,200 --> 00:33:50,900
sure that the Z clip plane stuff, doesn't clip everything.

597
00:33:50,900 --> 00:33:54,300
So we may need to adjust the values to prevent clipping from being a

598
00:33:54,300 --> 00:33:54,700
problem.

599
00:33:54,700 --> 00:33:55,600
I don't actually know.

600
00:33:56,200 --> 00:33:58,500
Oh dear, that's no good.

601
00:33:58,800 --> 00:33:59,600
What did I do?

602
00:34:01,700 --> 00:34:02,700
With the graphic is 40.

603
00:34:04,700 --> 00:34:08,000
Whoops, That's a classic mistake there.

604
00:34:08,800 --> 00:34:14,600
I had the if switched their get render entity basis, so it's actually

605
00:34:14,600 --> 00:34:20,100
if orthographic, it does, this set of things here that out.

606
00:34:22,800 --> 00:34:23,300
There we go.

607
00:34:24,900 --> 00:34:27,400
all right, so

608
00:34:29,800 --> 00:34:33,500
Now we just have to actually get everything working properly Isis.

609
00:34:33,800 --> 00:34:35,199
It's clearly not.

610
00:34:35,199 --> 00:34:41,600
As you can see, everything is a little tiny baby flat there, but all

611
00:34:41,600 --> 00:34:46,800
we should have to do now is actually work out the specifics here and

612
00:34:46,800 --> 00:34:47,900
we should be good to go.

613
00:34:50,199 --> 00:34:53,400
So let's take a look.

614
00:34:53,500 --> 00:34:59,800
If I go to my render group stuff here and I go to my get render entity

615
00:34:59,800 --> 00:35:00,800
basis p.

616
00:35:02,600 --> 00:35:07,100
So in here, and I'm doing that with graphic transform.

617
00:35:07,400 --> 00:35:10,700
I want to take wherever the center the screen is, I want to multiply m

618
00:35:10,700 --> 00:35:14,200
2 pixels to take whatever the X Y that comes in.

619
00:35:14,200 --> 00:35:20,100
And I want to expand that out to to be a m, 2 pixels that seems right.

620
00:35:20,200 --> 00:35:23,500
I don't want to scale anything, everything should be, whatever the

621
00:35:23,500 --> 00:35:27,500
actual scale in meters, that it is, so that's fine.

622
00:35:31,200 --> 00:35:32,300
and,

623
00:35:35,000 --> 00:35:35,900
I guess this is not.

624
00:35:35,900 --> 00:35:37,100
This is not correct though.

625
00:35:37,200 --> 00:35:37,800
It should not.

626
00:35:37,800 --> 00:35:41,700
It should not the original P, it should just be P, right?

627
00:35:43,700 --> 00:35:46,400
So that's a bit of a mistake, so, yeah.

628
00:35:46,700 --> 00:35:48,300
So that's fine.

629
00:35:48,600 --> 00:35:50,900
I don't think that really had much to do with our problem, but that's

630
00:35:50,900 --> 00:35:51,300
fine.

631
00:35:52,000 --> 00:35:57,000
And so that should give us, I think what we wanted in terms of a

632
00:35:57,000 --> 00:35:59,800
transform, that should be correct or studying were still wrong.

633
00:36:00,000 --> 00:36:02,000
That should be the correct thing.

634
00:36:02,000 --> 00:36:02,400
Okay?

635
00:36:03,000 --> 00:36:07,100
So then what we need to do on the other side, and handmade SVP is we

636
00:36:07,100 --> 00:36:09,600
need to go through and see what's going on here with that.

637
00:36:10,800 --> 00:36:16,800
So, when we push a bitmap on here, and we're saying stamp, there's the

638
00:36:16,800 --> 00:36:18,100
location for it.

639
00:36:19,400 --> 00:36:21,200
I don't actually know.

640
00:36:21,200 --> 00:36:21,800
Sorry.

641
00:36:21,800 --> 00:36:22,700
I it's been so long.

642
00:36:22,700 --> 00:36:26,800
I've forgotten what the definition of push bitmap.

643
00:36:26,800 --> 00:36:28,400
Even is at this point.

644
00:36:29,100 --> 00:36:29,800
So we pass it.

645
00:36:30,000 --> 00:36:35,500
A height and that height is in.

646
00:36:36,900 --> 00:36:39,100
M, it looks like right?

647
00:36:39,900 --> 00:36:41,200
So we're passing in something.

648
00:36:41,200 --> 00:36:42,600
We're splatting something down.

649
00:36:42,600 --> 00:36:43,900
That's four meters.

650
00:36:45,400 --> 00:36:46,000
Is that?

651
00:36:47,300 --> 00:36:48,300
Is that correct?

652
00:36:50,600 --> 00:36:52,700
Each ground Splat is 4 meters wide.

653
00:36:53,200 --> 00:36:55,700
That seems very wide.

654
00:36:56,600 --> 00:36:58,400
I don't think that makes a whole lot of sense.

655
00:36:59,000 --> 00:37:01,900
Of course, are things are too small at the moment, so obviously, it

656
00:37:01,900 --> 00:37:03,500
does make, it would make some sense.

657
00:37:03,500 --> 00:37:05,600
But I don't think that's correct, either way.

658
00:37:05,800 --> 00:37:08,800
So I feel like that actually needs to be smaller that actually needs

659
00:37:08,800 --> 00:37:10,900
to be something probably proportional to the width.

660
00:37:12,800 --> 00:37:15,800
I would say of these chunks, but in general, I don't know how big one

661
00:37:15,800 --> 00:37:16,800
of those flat should be.

662
00:37:16,800 --> 00:37:18,100
It should probably only be.

663
00:37:18,100 --> 00:37:20,200
I would think it would be like a half meter or something would be

664
00:37:20,400 --> 00:37:23,600
More like what the height of one of those should be?

665
00:37:23,600 --> 00:37:25,500
I that would be my assumption anyway.

666
00:37:26,900 --> 00:37:29,600
I feel like that, you know, on the ground, right?

667
00:37:29,600 --> 00:37:33,500
It would be, you know, the Splat that seems like something a little

668
00:37:33,500 --> 00:37:37,100
bit more reasonable and one of these little grass chunks, you would

669
00:37:37,100 --> 00:37:39,500
think would be really pretty tiny.

670
00:37:40,100 --> 00:37:41,800
So I think that's more what it should be.

671
00:37:42,000 --> 00:37:44,600
Unfortunately, we still have some problems here because we're getting

672
00:37:45,000 --> 00:37:47,800
some nonsensical results there but that's fine.

673
00:37:48,300 --> 00:37:50,300
So if we take a look at this here,

674
00:37:53,000 --> 00:37:56,400
We are still passing, m 2 pixels correctly, I believe, I just want to

675
00:37:56,400 --> 00:37:58,700
make sure that we've got our scaling set up properly.

676
00:37:59,200 --> 00:38:04,400
So if you look at orthographic m, 2 pixels pixels, 2 m is the inverse

677
00:38:04,400 --> 00:38:14,200
of that the monitor half dim, and M is calculated correctly in that

678
00:38:14,200 --> 00:38:14,900
regard.

679
00:38:15,500 --> 00:38:16,800
So that's all good.

680
00:38:18,300 --> 00:38:20,100
M, 2 pixels,

681
00:38:21,100 --> 00:38:24,400
And that's the value that we're multiplying by, right?

682
00:38:24,600 --> 00:38:27,700
So m, 2 pixels should be something relatively High.

683
00:38:28,000 --> 00:38:30,100
I'm going to go ahead and step in there and make sure that there's no

684
00:38:30,100 --> 00:38:31,200
funny business happening.

685
00:38:32,000 --> 00:38:37,200
So I want to break in orthographic so that I can take a look at it.

686
00:38:38,000 --> 00:38:41,400
So, inside orthographic, I just want to see what everything set to be.

687
00:38:42,300 --> 00:38:43,500
So here we go.

688
00:38:44,000 --> 00:38:45,300
Pixels to meters.

689
00:38:47,600 --> 00:38:48,500
Is 42.

690
00:38:48,500 --> 00:38:49,700
Which looks about, right?

691
00:38:49,700 --> 00:38:53,000
That seems like a perfectly reasonable value.

692
00:38:54,600 --> 00:38:56,700
Let's think about that for a second.

693
00:38:57,000 --> 00:38:59,800
So what is the pixel width?

694
00:39:00,600 --> 00:39:02,000
The pixel width is 256.

695
00:39:02,000 --> 00:39:03,200
Presumably, the height is the same.

696
00:39:04,700 --> 00:39:05,000
Oops.

697
00:39:08,500 --> 00:39:09,000
Yep.

698
00:39:09,900 --> 00:39:14,300
And let's see what the M wish to pixels is right.

699
00:39:14,300 --> 00:39:15,500
Should be inverse of that.

700
00:39:16,200 --> 00:39:16,700
Oops.

701
00:39:19,300 --> 00:39:23,500
And then furthermore, I want to step out and see what the actual

702
00:39:24,500 --> 00:39:27,900
ground chunk, width, and height are width and height.

703
00:39:28,200 --> 00:39:35,200
So, a ground chunk is 6 meters by 6 meters, right?

704
00:39:39,100 --> 00:39:42,000
So, just a ballpark that that's correct.

705
00:39:43,700 --> 00:39:47,400
So, all that looks fine, that all looks fine.

706
00:39:48,800 --> 00:39:52,000
Let's go ahead and step in here and see what we've got.

707
00:39:52,000 --> 00:39:52,800
I'd rather do it.

708
00:39:52,800 --> 00:39:53,200
I do it.

709
00:39:53,200 --> 00:39:55,200
I would really rather have chunk Offset.

710
00:39:55,700 --> 00:39:56,200
You know what?

711
00:39:56,200 --> 00:39:57,300
I'm just going to cheat.

712
00:39:57,400 --> 00:40:01,500
Don't do this at Home Folks but I wanted to see what happens in chunk

713
00:40:01,500 --> 00:40:02,900
offset the one that we're actually in.

714
00:40:03,100 --> 00:40:04,500
So I'm just going to full on

715
00:40:06,600 --> 00:40:07,800
set the troops.

716
00:40:08,800 --> 00:40:09,900
It's not what I want to do.

717
00:40:11,600 --> 00:40:13,300
Just go ahead and do that in there.

718
00:40:13,300 --> 00:40:13,700
There we go.

719
00:40:15,800 --> 00:40:16,900
Come through here.

720
00:40:18,600 --> 00:40:21,000
All right, chunk offset extra set that to zero.

721
00:40:21,900 --> 00:40:26,100
And so now we should be able to compute these guys.

722
00:40:27,400 --> 00:40:28,500
And Get It Center.

723
00:40:28,500 --> 00:40:29,600
Offset is all zeros.

724
00:40:29,600 --> 00:40:30,000
Yes.

725
00:40:30,700 --> 00:40:33,900
So when we actually come through here and we compute the p-value, what

726
00:40:33,900 --> 00:40:34,900
is the p-value?

727
00:40:34,900 --> 00:40:39,500
The p-value is like two meters in every direction.

728
00:40:41,200 --> 00:40:43,500
Which is kind of weird that happens to be exactly the same, but we'll

729
00:40:43,500 --> 00:40:45,500
just pretend that we didn't that.

730
00:40:45,500 --> 00:40:50,200
We're not concerned about that for now, and we'll go into push bitmap.

731
00:40:52,500 --> 00:40:53,300
Off we go.

732
00:40:55,200 --> 00:40:58,700
So inside pushed bitmap, what is the size?

733
00:40:59,600 --> 00:41:07,300
The size is 1/8 of a meter tall and a half meter high, that seems

734
00:41:07,300 --> 00:41:08,800
quite reasonable to me.

735
00:41:10,700 --> 00:41:12,700
The alignment values or fine.

736
00:41:12,700 --> 00:41:15,000
That's not really an issue here.

737
00:41:16,400 --> 00:41:17,600
We haven't really had.

738
00:41:17,600 --> 00:41:22,500
What looks like any particular problem with alignment entry P.

739
00:41:23,700 --> 00:41:25,800
So that's in

740
00:41:29,800 --> 00:41:30,200
Huh.

741
00:41:35,200 --> 00:41:38,400
Oh right, we transform everything ahead of time now, right, right?

742
00:41:38,400 --> 00:41:41,500
Right, that's totally fine, totally fine.

743
00:41:42,200 --> 00:41:43,400
So, what's the scale there?

744
00:41:43,400 --> 00:41:50,400
The scales 1.0, ah, that is the problem that's fine.

745
00:41:50,800 --> 00:41:54,100
That was worth debugging because I hadn't been thinking it through,

746
00:41:54,100 --> 00:41:54,600
quite right.

747
00:41:54,600 --> 00:41:56,200
So that kind of set me, right?

748
00:41:56,600 --> 00:41:59,800
So you can see, we're not actually scale II.

749
00:42:00,000 --> 00:42:04,000
I didn't really pay attention to what scale was supposed to be there

750
00:42:04,000 --> 00:42:04,900
when I did it.

751
00:42:05,000 --> 00:42:09,000
So you can see that scale includes m, 2 pixels.

752
00:42:09,000 --> 00:42:12,200
That's what makes the sizes scale out properly.

753
00:42:12,200 --> 00:42:13,100
So we can't have it.

754
00:42:13,100 --> 00:42:13,900
Be 1.0.

755
00:42:13,900 --> 00:42:16,300
It has to be the scale value.

756
00:42:17,000 --> 00:42:21,500
So that's why everything was super tiny, that makes a lot more sense.

757
00:42:21,800 --> 00:42:22,300
Okay.

758
00:42:23,300 --> 00:42:27,700
Of course, we're not seeing anything which is not particularly good to

759
00:42:27,700 --> 00:42:28,600
say the least.

760
00:42:28,900 --> 00:42:29,900
So let's go ahead and

761
00:42:30,100 --> 00:42:30,600
See.

762
00:42:32,400 --> 00:42:35,600
What the problem is there, but I think that that was definitely that

763
00:42:35,600 --> 00:42:37,400
was that was a bit of a snafu there.

764
00:42:37,400 --> 00:42:41,600
So that's glad we sort of took care of that if you will.

765
00:42:42,500 --> 00:42:50,900
Okay, so, if we go back now and step again, to to that, push bitmap

766
00:42:50,900 --> 00:42:57,000
call, right, let's go ahead and see well, you know what do I still

767
00:42:57,000 --> 00:42:57,300
have a break?

768
00:42:57,300 --> 00:42:59,000
Point set in the Phil ground buffer.

769
00:42:59,000 --> 00:43:01,600
Now, I don't let me go.

770
00:43:02,100 --> 00:43:02,700
Back there.

771
00:43:05,000 --> 00:43:10,100
Let's go in here and I'm going to go ahead and set these guys again.

772
00:43:11,700 --> 00:43:14,300
Just go ahead and overwrite values, why not?

773
00:43:15,200 --> 00:43:17,800
And then when we generate these I'm going to go into push bitmap again

774
00:43:17,800 --> 00:43:20,700
and I want to see what it actually does, right?

775
00:43:24,000 --> 00:43:26,100
Yes, set your security cookie.

776
00:43:27,000 --> 00:43:34,800
Okay, so in here when we push through, let's take a look at what we

777
00:43:34,800 --> 00:43:36,300
end up getting with the entry.

778
00:43:39,700 --> 00:43:40,700
Here's the size.

779
00:43:41,300 --> 00:43:46,800
All zeros is not a particularly good size that seems very bad.

780
00:43:46,900 --> 00:43:48,200
So what's the problem?

781
00:43:49,500 --> 00:43:51,100
Height is 5.

782
00:43:51,800 --> 00:43:53,100
What's the basis value?

783
00:43:53,700 --> 00:43:57,700
The scale is .02 38.

784
00:43:59,100 --> 00:44:01,900
09 243.

785
00:44:03,600 --> 00:44:06,400
What is m 2 pixels?

786
00:44:08,600 --> 00:44:09,800
Dare I ask.

787
00:44:14,000 --> 00:44:16,900
Okay, that doesn't make any sense.

788
00:44:17,800 --> 00:44:20,700
Because m 2 pixels was 42 before

789
00:44:22,400 --> 00:44:23,000
Right.

790
00:44:26,600 --> 00:44:28,100
What am I looking at?

791
00:44:28,900 --> 00:44:31,800
I've obviously done something horribly wrong.

792
00:44:35,400 --> 00:44:36,100
I guess.

793
00:44:41,500 --> 00:44:42,900
So there's our that graphic.

794
00:44:43,400 --> 00:44:44,900
Let's take a look at render group.

795
00:44:48,100 --> 00:44:50,000
There's our transfer m, 2 pixels.

796
00:44:55,000 --> 00:44:57,500
Oh, are we doing this backwards?

797
00:44:57,800 --> 00:44:58,500
Wait a minute.

798
00:45:07,600 --> 00:45:09,100
We've got these backwards.

799
00:45:13,800 --> 00:45:14,400
Right.

800
00:45:18,000 --> 00:45:21,200
I mean M should end up being a lot of pixels.

801
00:45:22,400 --> 00:45:24,300
And we've got these like inverted.

802
00:45:27,700 --> 00:45:29,100
I'm not hallucinating, right?

803
00:45:30,200 --> 00:45:32,200
So pixels to meters.

804
00:45:33,500 --> 00:45:34,000
Right?

805
00:45:34,200 --> 00:45:38,400
If you had pixels you would it would not become 42 like a pixel is not

806
00:45:38,400 --> 00:45:42,900
42 meters and if you had a meter it would not be point 0 2 pixels,

807
00:45:42,900 --> 00:45:44,200
those are like backwards.

808
00:45:45,100 --> 00:45:46,100
So how did we end up?

809
00:45:46,100 --> 00:45:49,600
Did we just have the these two things phrased the opposite way the

810
00:45:49,600 --> 00:45:50,600
entire time?

811
00:45:53,100 --> 00:45:54,800
You see what I'm getting at here, right?

812
00:45:57,200 --> 00:46:01,400
m, 2 pixels times, the projected x y

813
00:46:02,600 --> 00:46:03,800
How is that possible?

814
00:46:04,200 --> 00:46:08,000
So, did I only make that mistake in just the orthographic one?

815
00:46:10,100 --> 00:46:11,600
Pixels to meters.

816
00:46:13,600 --> 00:46:14,100
Right.

817
00:46:19,000 --> 00:46:21,600
So I guess I must have just made it wrong here.

818
00:46:21,800 --> 00:46:23,900
It's m 2 pixels.

819
00:46:24,400 --> 00:46:25,400
So okay.

820
00:46:25,400 --> 00:46:27,600
So that I'm just stupid stupid.

821
00:46:28,000 --> 00:46:31,700
It was literally just that we were passing in pixels to M here instead

822
00:46:31,700 --> 00:46:32,700
of m 2 pixels.

823
00:46:33,600 --> 00:46:34,000
All right.

824
00:46:34,000 --> 00:46:34,600
Fair enough.

825
00:46:38,400 --> 00:46:39,300
That would explain it.

826
00:46:41,300 --> 00:46:46,400
So yeah getting closer still not there yet.

827
00:46:47,300 --> 00:46:50,500
I don't know if you can see there's there's still like I think kind of

828
00:46:50,500 --> 00:46:56,300
obviously a couple seems in their can kind of see stuff happening.

829
00:46:56,300 --> 00:46:59,900
So we're not we're not quite out of the woods yet but release getting

830
00:46:59,900 --> 00:47:04,800
a little bit closer to where we should be in terms of regenerating our

831
00:47:04,800 --> 00:47:05,900
ground patches.

832
00:47:06,200 --> 00:47:08,100
Also, I guess maybe I was a little

833
00:47:08,200 --> 00:47:10,100
Too aggressive on the size of those things, although we could just

834
00:47:10,100 --> 00:47:11,000
have a Transformer on.

835
00:47:11,000 --> 00:47:15,700
So I guess I'm not going to say that definitively yet so yeah.

836
00:47:18,200 --> 00:47:22,500
So, I'm also not sure which ones were looking at their because we have

837
00:47:22,500 --> 00:47:24,700
the I don't remember how we set up the ground chunks.

838
00:47:24,700 --> 00:47:27,800
But either way, we should be able to get this back to normal.

839
00:47:27,800 --> 00:47:29,000
What's interesting is that

840
00:47:31,300 --> 00:47:35,300
What's interesting is that some of them seem very close whereas other

841
00:47:35,300 --> 00:47:40,200
than seemed quite wrong like that seems very wrong.

842
00:47:41,000 --> 00:47:46,200
This seam right here, seems like quite incorrect, whereas like this

843
00:47:46,200 --> 00:47:51,500
scene here seems less incorrect, but maybe that's just happenstance.

844
00:47:51,800 --> 00:47:55,000
Okay, so it seems it seems like more wrong here.

845
00:47:55,000 --> 00:47:56,600
Maybe I could convince myself.

846
00:47:56,800 --> 00:47:59,000
I'm just trying to it's very odd to have it be.

847
00:47:59,000 --> 00:47:59,800
It should be like,

848
00:48:00,000 --> 00:48:04,000
Wrong everywhere, I would think, but maybe not.

849
00:48:04,300 --> 00:48:06,600
So all right, so that seems pretty reasonable.

850
00:48:06,700 --> 00:48:08,900
Now that we've got the orthographic in there.

851
00:48:09,100 --> 00:48:13,900
So now we just have to actually like debug it and and get it, get it

852
00:48:13,900 --> 00:48:15,800
back to correct, all right.

853
00:48:17,800 --> 00:48:21,600
So if we do the buffer with a knife now and now we're actually I think

854
00:48:21,600 --> 00:48:23,900
passing the correct value for m 2 pixels.

855
00:48:23,900 --> 00:48:29,300
I think because again, we have it, the sensor versed m, 2 pixels

856
00:48:29,500 --> 00:48:32,300
should have pixels on the top M on the bottom, right, because it's

857
00:48:32,300 --> 00:48:34,900
supposed to be Erasure that converts between the two in that that

858
00:48:34,900 --> 00:48:36,300
direction, not the other direction.

859
00:48:38,300 --> 00:48:41,500
So in here, I feel like

860
00:48:44,300 --> 00:48:50,700
Shunk offset x times, the width that should actually give us what this

861
00:48:50,700 --> 00:48:55,300
that actually should give us the location of the center that we are

862
00:48:55,300 --> 00:48:56,200
working around.

863
00:48:56,300 --> 00:48:58,300
That totally seems valid to me.

864
00:48:59,100 --> 00:49:02,700
I don't see any problem with that, at all, when we're doing the Splats

865
00:49:02,700 --> 00:49:07,600
in here, we're moving them around by whatever half the dimension is

866
00:49:08,500 --> 00:49:13,600
and that also seems fine to me, but it seems like they're getting

867
00:49:14,000 --> 00:49:18,900
Bread out a lot further than we would have expected them to be right

868
00:49:19,800 --> 00:49:23,600
because we're not seeing a hundred Splats, you know what I mean?

869
00:49:25,000 --> 00:49:26,800
So I'm just going to verify that.

870
00:49:26,900 --> 00:49:32,700
I'm going to say here, like half dim x equals, 0.01 F, or something,

871
00:49:32,700 --> 00:49:37,300
or 0.05, F, just to see what happens if we tell it to Splat in a much

872
00:49:37,300 --> 00:49:38,600
more concentrated area.

873
00:49:39,000 --> 00:49:39,200
Yes.

874
00:49:39,200 --> 00:49:43,800
So, there's, there's like, the more concentrated Splat version, right?

875
00:49:43,900 --> 00:49:44,300
Right.

876
00:49:44,500 --> 00:49:46,100
I'm also going to turn on.

877
00:49:46,300 --> 00:49:49,600
I think what I'd like to do here is turn back on the lines,

878
00:49:49,600 --> 00:49:53,700
temporarily until we get things bleeding properly.

879
00:49:53,700 --> 00:49:58,700
So that I can kind of see where the boundary actually is for stuff

880
00:49:59,300 --> 00:50:00,700
because that will help me as well.

881
00:50:02,300 --> 00:50:05,800
So I'm going to go turn that back on and I'm going to have this.

882
00:50:05,800 --> 00:50:06,500
Clear?

883
00:50:07,100 --> 00:50:10,400
Will I'm going to clear it out to two purple?

884
00:50:10,500 --> 00:50:11,000
Let's say

885
00:50:13,300 --> 00:50:14,700
All right, let's do this.

886
00:50:17,900 --> 00:50:21,400
So that's correctly, stationed about the center.

887
00:50:21,800 --> 00:50:27,000
So if I am to take the half Dimension and drop it in half again,

888
00:50:27,500 --> 00:50:32,000
right, what we should see is we should see it fill about half the

889
00:50:32,000 --> 00:50:35,300
space, which we do that seems about right?

890
00:50:35,600 --> 00:50:36,200
I don't know.

891
00:50:36,200 --> 00:50:39,700
I don't really feel like there's a hundred things there, but maybe

892
00:50:39,700 --> 00:50:43,100
that's just me just pointing that out.

893
00:50:43,600 --> 00:50:46,900
And so, all right, so if we go to the regular full,

894
00:50:47,100 --> 00:50:47,700
Science.

895
00:50:50,200 --> 00:50:54,400
You know, that that does seem to be roughly, correct?

896
00:50:57,100 --> 00:50:59,800
I feel like that's, that's totally

897
00:51:00,000 --> 00:51:02,600
Possible, but I just don't know that.

898
00:51:02,600 --> 00:51:03,800
That's a hundred.

899
00:51:04,000 --> 00:51:06,900
One, two, three, four, five, six, seven, eight, nine, ten.

900
00:51:10,300 --> 00:51:14,600
I mean, I could convince myself, I could convince myself, but I don't

901
00:51:14,600 --> 00:51:14,900
know.

902
00:51:15,600 --> 00:51:17,000
And so yeah.

903
00:51:17,000 --> 00:51:22,100
If if we're talking about a half meter, I do wonder about the sizes of

904
00:51:22,100 --> 00:51:22,700
things here.

905
00:51:22,700 --> 00:51:28,500
I think we may have our sizes a bit, a little bit odd, because I don't

906
00:51:28,500 --> 00:51:29,900
know, maybe, maybe,

907
00:51:30,000 --> 00:51:33,500
M less than I think, but I feel like making these things.

908
00:51:33,500 --> 00:51:38,300
Be a whole meter long is kind of a little absurd and even then they're

909
00:51:38,300 --> 00:51:42,000
still a little smaller than we probably would normally use them to be,

910
00:51:42,600 --> 00:51:43,400
so I don't know.

911
00:51:44,100 --> 00:51:48,200
It's like two meters is actually a very large.

912
00:51:50,800 --> 00:51:52,400
So I don't know exactly what's going on there.

913
00:51:52,400 --> 00:51:54,200
That's that's a little odd to me.

914
00:51:57,200 --> 00:51:57,500
Yeah.

915
00:51:57,900 --> 00:52:02,900
Well anyway so all right, so for take a look at that, at least I'm

916
00:52:02,900 --> 00:52:05,800
fairly confident that the transform is like within the realm of

917
00:52:05,800 --> 00:52:06,500
correct now.

918
00:52:06,900 --> 00:52:10,900
So let's take a look at those seems though and see what's going on

919
00:52:10,900 --> 00:52:11,800
with the seams.

920
00:52:12,200 --> 00:52:13,600
I'm going to go ahead and

921
00:52:15,800 --> 00:52:17,300
Remove our yellow outlines.

922
00:52:22,700 --> 00:52:23,300
There we go.

923
00:52:25,100 --> 00:52:27,400
Okay.

924
00:52:28,800 --> 00:52:35,300
So yeah, I don't understand why the seams are gone.

925
00:52:36,500 --> 00:52:37,200
Other they are.

926
00:52:37,200 --> 00:52:40,200
I was like, they're just probably really hard to see and you can see

927
00:52:40,200 --> 00:52:42,700
right there is a very clear seem right?

928
00:52:43,200 --> 00:52:44,700
Probably should do something.

929
00:52:45,800 --> 00:52:48,400
To sort of accentuate the seam.

930
00:52:50,600 --> 00:52:54,400
I am not sure exactly what to do in that respect.

931
00:52:54,500 --> 00:52:57,800
I'm guessing that probably we should just change the colors of things

932
00:52:57,800 --> 00:53:00,900
vary dramatically in the ground chunks or something.

933
00:53:01,800 --> 00:53:02,200
You know.

934
00:53:02,200 --> 00:53:06,500
So like an example I guess I'm out of time but an example would be,

935
00:53:07,300 --> 00:53:09,800
you know, maybe we have something that's like

936
00:53:15,000 --> 00:53:19,800
But like takes the chunk p and does some kind of a checkerboard

937
00:53:19,800 --> 00:53:24,300
pattern with it because like if you look at what the ground, buffer P

938
00:53:24,300 --> 00:53:25,400
thing is right?

939
00:53:25,400 --> 00:53:29,500
It's going to be one of those coordinates that we have for the world

940
00:53:29,500 --> 00:53:30,900
where we got a chunk X junk.

941
00:53:30,900 --> 00:53:37,400
Why chunk Z and so what I could do is I could have something that says

942
00:53:37,400 --> 00:53:40,000
what that should actually be, right?

943
00:53:40,900 --> 00:53:44,500
So, I could say, like, chunk X, if

944
00:53:44,700 --> 00:53:53,400
X equals, you know, chunk y mod 2, or something like this, right?

945
00:53:55,100 --> 00:53:56,900
Do some kind of checkerboard pattern here.

946
00:53:57,200 --> 00:53:59,800
So, like, you know, color equals V 3,

947
00:54:01,700 --> 00:54:08,200
sorry for will just color it like bright red for one of them and

948
00:54:13,300 --> 00:54:17,700
And bright blue for another one, maybe something like this.

949
00:54:18,400 --> 00:54:22,500
And then when we, when we push on the bitmap we'll just say, we would

950
00:54:22,500 --> 00:54:23,500
like it to be.

951
00:54:23,700 --> 00:54:24,100
Oops.

952
00:54:30,200 --> 00:54:30,500
Yeah.

953
00:54:31,700 --> 00:54:36,200
We'd like it to be colored in that way and I think we implemented

954
00:54:36,200 --> 00:54:37,700
tinting fine to the pipeline.

955
00:54:37,700 --> 00:54:40,700
We don't really test it but so I just wanted to see

956
00:54:42,900 --> 00:54:43,900
What's going on there?

957
00:54:47,500 --> 00:54:50,200
So yeah, you can see

958
00:54:52,600 --> 00:54:54,200
well, that's a bit odd.

959
00:54:55,700 --> 00:55:02,100
To be completely honest with you that's a bit odd but you can

960
00:55:02,100 --> 00:55:03,400
definitely see the seam.

961
00:55:03,400 --> 00:55:07,800
It's not as pronounced as I was perhaps hoping that it would be, but

962
00:55:07,800 --> 00:55:10,200
you can kind of see in certain places.

963
00:55:10,200 --> 00:55:12,100
Anyway, you can see the scene.

964
00:55:15,000 --> 00:55:20,000
Yeah again less less pronounced than I thought, maybe that it would be

965
00:55:20,800 --> 00:55:22,500
but I guess that's that's just the way it is.

966
00:55:22,500 --> 00:55:25,500
So I'll have to stop now again because it's time for Q&A.

967
00:55:26,100 --> 00:55:31,100
So I wanted I want to be able to go to the Q&A first but that's what

968
00:55:31,100 --> 00:55:35,300
we'll have to do tomorrow is you know, fix our seams here but it's

969
00:55:35,300 --> 00:55:35,800
kind of good.

970
00:55:35,800 --> 00:55:40,000
We're in a position where we're, you know, everything is kind of

971
00:55:40,000 --> 00:55:44,400
working relatively well other than whatever our slight error there

972
00:55:44,600 --> 00:55:48,600
Is and I think that also probably were fast enough now, that if we're

973
00:55:48,600 --> 00:55:54,700
in 02 mode, even though we're not multi-threading that rendering it, I

974
00:55:54,700 --> 00:55:56,200
suspect that yeah.

975
00:55:56,200 --> 00:55:59,100
The the pauses are really not bad, you can see that.

976
00:55:59,100 --> 00:56:01,500
There's only a little bit of pause for recreating the ground chunks

977
00:56:01,500 --> 00:56:02,000
there.

978
00:56:02,500 --> 00:56:09,300
So, I suspect that once we actually, you know, once we actually put

979
00:56:09,300 --> 00:56:12,500
that on a separate thread, our ground shrunk system should be pretty

980
00:56:12,500 --> 00:56:14,400
solid because it's all

981
00:56:14,500 --> 00:56:18,500
already only a very little, a very slight hiccup.

982
00:56:18,600 --> 00:56:19,100
Right?

983
00:56:21,000 --> 00:56:21,900
That's happening there.

984
00:56:22,700 --> 00:56:23,500
So, we're getting there.

985
00:56:24,300 --> 00:56:27,400
But let's go ahead and go to the the Q&A.

986
00:56:27,900 --> 00:56:28,900
Let's see here.

987
00:56:33,900 --> 00:56:37,400
Yeah man, it's crazy how fast this thing runs in release mode.

988
00:56:39,000 --> 00:56:40,200
I just don't even know what to say.

989
00:56:40,900 --> 00:56:41,900
It's going to be awesome.

990
00:56:42,000 --> 00:56:45,700
I think at the end of this maybe by the end of next week, I'm hoping

991
00:56:45,700 --> 00:56:48,400
will be in a place where we can have some pretty solid Graphics here

992
00:56:48,400 --> 00:56:52,000
too, which will be really nice because they'll be high frame rate and

993
00:56:52,000 --> 00:56:54,700
we can get rid of all that, you know, we can, we will do the sorting

994
00:56:54,700 --> 00:56:58,500
and we'll do the proper layer of the ground chunks, and that'll be

995
00:56:58,500 --> 00:56:59,200
pretty nice.

996
00:57:00,000 --> 00:57:01,700
We'll have lighting by then, probably not.

997
00:57:01,700 --> 00:57:02,200
But

998
00:57:04,900 --> 00:57:07,400
Because that's a whole, that's a whole other optimization problem.

999
00:57:07,400 --> 00:57:07,800
But

1000
00:57:18,400 --> 00:57:21,200
D matsuki, when do we make everything hardware-accelerated to get?

1001
00:57:21,200 --> 00:57:23,000
The amazing powers of rotation?

1002
00:57:23,400 --> 00:57:26,100
Oh, oh, I'm sorry.

1003
00:57:26,100 --> 00:57:27,800
I did not realize.

1004
00:57:27,800 --> 00:57:33,500
Somebody must not have been watching the stream, you do know that we

1005
00:57:33,500 --> 00:57:36,500
already have the powers of rotation, right.

1006
00:57:37,400 --> 00:57:38,300
Did you know that?

1007
00:57:39,900 --> 00:57:46,300
I don't know if you like maybe maybe you weren't with us, right?

1008
00:57:47,300 --> 00:57:51,600
But if we want to rotate stuff we totally can we just don't actually

1009
00:57:51,600 --> 00:57:55,100
have any reason to do so at the moment.

1010
00:57:56,300 --> 00:58:02,200
But for example, if I wanted to inside the render group here, when we

1011
00:58:02,200 --> 00:58:03,200
do push bitmap,

1012
00:58:05,000 --> 00:58:08,100
Or not push bitmap, the thing that actually renders the bitmap, I

1013
00:58:08,100 --> 00:58:08,900
guess I should say.

1014
00:58:11,800 --> 00:58:16,000
Here's our bitmap code, like draw a rectangle quickly if I wanted to I

1015
00:58:16,000 --> 00:58:19,200
could totally make that be something else, right?

1016
00:58:20,400 --> 00:58:25,000
So if I do it this way instead,

1017
00:58:27,100 --> 00:58:27,700
Right.

1018
00:58:39,600 --> 00:58:40,900
Actually, I guess I should do it this way.

1019
00:58:51,400 --> 00:58:54,500
Right, so if I want to, I can totally say that.

1020
00:58:54,500 --> 00:58:58,000
Oh yeah, our x-axis is actually.

1021
00:58:59,500 --> 00:59:00,800
Something totally different.

1022
00:59:03,500 --> 00:59:06,200
Then the normal one that would be fine.

1023
00:59:06,500 --> 00:59:06,900
Right?

1024
00:59:06,900 --> 00:59:10,200
So I can I can totally just just do that if I want to

1025
00:59:12,300 --> 00:59:12,700
say.

1026
00:59:18,000 --> 00:59:21,300
This is basically just forcing every bitmap in the game to be rotated,

1027
00:59:22,100 --> 00:59:22,600
right?

1028
00:59:23,500 --> 00:59:24,500
We

1029
00:59:27,100 --> 00:59:28,600
So we don't need no.

1030
00:59:28,600 --> 00:59:32,300
Stinking Hardware to get the power of rotation, bro.

1031
00:59:32,600 --> 00:59:35,400
We've got the power of rotation right here.

1032
00:59:37,000 --> 00:59:40,800
If for some reason we didn't feel like that was enough, you know, we

1033
00:59:40,800 --> 00:59:46,000
could go ahead and I don't know do something like this.

1034
00:59:48,400 --> 00:59:51,900
Oh man, this would do it differently on every thread.

1035
00:59:53,100 --> 00:59:54,900
Oh man, this will be so bizarre.

1036
00:59:55,100 --> 00:59:59,700
This is going to be super weird but we can do it because why not?

1037
01:00:06,500 --> 01:00:10,200
So yeah, Hardware, not required for rotation bro.

1038
01:00:10,200 --> 01:00:11,400
We implemented that.

1039
01:00:19,100 --> 01:00:20,100
Not turn that off now.

1040
01:00:23,000 --> 01:00:25,200
Go back to just using the regular x and y axis.

1041
01:00:48,600 --> 01:00:51,800
Will we see how to find expensive functions that are called between

1042
01:00:51,800 --> 01:00:52,600
frames so far?

1043
01:00:52,600 --> 01:00:55,500
We simply only the pixel render right now because we know.

1044
01:00:56,400 --> 01:00:59,400
So yeah, we will when we do the debug view stuff, we'll put in a

1045
01:00:59,400 --> 01:01:02,400
little bit in terms of just like a heads-up, profiler, which you can

1046
01:01:02,400 --> 01:01:06,000
use for that, but if you are trying to do that on a large code base,

1047
01:01:06,000 --> 01:01:08,300
that's not one that you know, intimately.

1048
01:01:11,500 --> 01:01:14,300
Then that's usually where you would use like a tool, you know, like

1049
01:01:14,300 --> 01:01:15,300
vtune or something.

1050
01:01:15,300 --> 01:01:17,000
You know, a sampling based profile.

1051
01:01:17,000 --> 01:01:20,300
If you like if you have no idea and you don't control the code, like

1052
01:01:20,300 --> 01:01:22,700
we control the code, very tightly here and handmade here at, right?

1053
01:01:22,700 --> 01:01:26,700
We wrote it all ourselves so you know I'll be sort of showing how we

1054
01:01:26,700 --> 01:01:29,300
keep an eye on things in that context.

1055
01:01:29,800 --> 01:01:32,800
But assuming that you know you you were in some code base that you

1056
01:01:32,800 --> 01:01:34,500
don't have that kind of control over.

1057
01:01:34,600 --> 01:01:37,500
You may need to use like some kind of sampling based profiler to help

1058
01:01:37,500 --> 01:01:39,800
you find stuff, right?

1059
01:01:39,800 --> 01:01:40,200
So

1060
01:01:40,500 --> 01:01:42,600
Different kinds of techniques for that and will be I'll be showing the

1061
01:01:42,600 --> 01:01:45,000
one you use when you're writing everything yourself.

1062
01:01:45,000 --> 01:01:48,200
But there's other techniques you can use if that makes sense.

1063
01:01:56,600 --> 01:01:58,700
Andy matsuki, there's no need to apologize.

1064
01:01:58,900 --> 01:02:05,600
I actually really enjoy how ridiculously fast this software renderer

1065
01:02:05,600 --> 01:02:09,900
ended up being, even though we didn't really even do much optimization

1066
01:02:09,900 --> 01:02:10,400
to it.

1067
01:02:11,100 --> 01:02:14,300
Like you probably could be significantly faster than it is.

1068
01:02:14,400 --> 01:02:17,800
And so any excuse to go oh you want rotation and scaling?

1069
01:02:17,900 --> 01:02:18,400
We've got.

1070
01:02:18,400 --> 01:02:21,800
That is good.

1071
01:02:21,800 --> 01:02:24,500
So by no means, do you need to apologize.

1072
01:02:24,500 --> 01:02:26,200
I'm very happy to show that off.

1073
01:02:26,400 --> 01:02:29,500
Again, because I'm still kind of totally surprised about it.

1074
01:02:30,000 --> 01:02:32,200
We gotta go finish off the ground chunks.

1075
01:02:32,200 --> 01:02:34,900
I'm glad we're working on those now, because once we kind of put those

1076
01:02:34,900 --> 01:02:37,200
in where, I don't even know why they're blinking right now, that

1077
01:02:37,200 --> 01:02:38,300
doesn't even make any sense to me.

1078
01:02:38,300 --> 01:02:41,600
So we have to go, you know, they've kind of been sitting in there.

1079
01:02:41,600 --> 01:02:45,200
Not really fully implemented for a while so I want to get rid of the

1080
01:02:45,200 --> 01:02:49,300
seams and get them quite everything being done correctly here on the

1081
01:02:49,300 --> 01:02:53,900
new render and then we can have a very nice Forest to explore which I

1082
01:02:53,900 --> 01:02:55,000
think will be pretty nice.

1083
01:03:01,000 --> 01:03:01,700
Girl and Doubloon.

1084
01:03:01,700 --> 01:03:02,300
Can you briefly?

1085
01:03:02,300 --> 01:03:04,200
Go over the rest of what we're going to do to the engine?

1086
01:03:04,200 --> 01:03:06,200
Before we start implementing gameplay code.

1087
01:03:06,400 --> 01:03:08,000
Yeah, it's mostly in our to-do list.

1088
01:03:08,000 --> 01:03:11,200
I think we listed most of the things that we were going to do.

1089
01:03:11,900 --> 01:03:13,700
So, we have to finish off the renderer, right?

1090
01:03:13,700 --> 01:03:16,900
Which I kind of wanted to throw a particle system in there and I kind

1091
01:03:16,900 --> 01:03:19,500
of want to throw in some lighting and we did a bunch of work on

1092
01:03:19,500 --> 01:03:20,200
lighting already.

1093
01:03:20,200 --> 01:03:21,800
So we kind of know roughly how that goes.

1094
01:03:21,800 --> 01:03:24,300
But we have some, some unknowns in there that I wanted to kind of

1095
01:03:24,300 --> 01:03:25,000
finish up.

1096
01:03:25,800 --> 01:03:27,700
Asset streaming is pretty simple.

1097
01:03:27,700 --> 01:03:30,200
Like, there's not a lot to it, but we have to actually go, right it

1098
01:03:30,200 --> 01:03:30,300
because

1099
01:03:30,400 --> 01:03:32,600
Right now, we just load everything at startup and I want to make sure

1100
01:03:32,600 --> 01:03:36,000
that we're set up to load stuff in the background.

1101
01:03:39,100 --> 01:03:40,200
The debug code.

1102
01:03:42,100 --> 01:03:44,700
Is just some very straightforward stuff that we need, but like, fonts

1103
01:03:44,700 --> 01:03:48,700
logging diagramming and like adjustment things, right?

1104
01:03:48,900 --> 01:03:53,700
Some of those things that we might want this, this stuff is just, you

1105
01:03:53,700 --> 01:03:57,000
know, it's probably a few weeks of work, at least, just to Dewey.

1106
01:03:57,000 --> 01:04:01,600
There's nothing really all that interesting about it, I guess.

1107
01:04:01,600 --> 01:04:05,100
Like it's kind of straightforward, but it's important to do because

1108
01:04:05,100 --> 01:04:07,600
you kind of want that support there, so that you can do it.

1109
01:04:07,700 --> 01:04:10,600
And then audio is really basic, audio will be super, simple will be

1110
01:04:10,600 --> 01:04:11,600
like a week or something.

1111
01:04:12,300 --> 01:04:12,600
Of us.

1112
01:04:12,600 --> 01:04:15,200
Just let me just showing like a here's how you write to an audio.

1113
01:04:15,200 --> 01:04:18,500
Buffer is really simple but that's basically what we have to do.

1114
01:04:18,500 --> 01:04:23,000
So there's there's a fair bit of work there still I would say and then

1115
01:04:23,000 --> 01:04:29,200
this stuff is basically game at that point like you know we kind of

1116
01:04:29,200 --> 01:04:32,200
got to go revisit a few things but we're basically into the game at

1117
01:04:32,200 --> 01:04:37,500
that point this this will all be very gained Cody and so I probably

1118
01:04:37,500 --> 01:04:41,700
would say that there will be this will be split up into two.

1119
01:04:42,200 --> 01:04:43,000
Passes.

1120
01:04:43,300 --> 01:04:47,400
They'll be sort of a architecture exploration pass as this is labeled

1121
01:04:47,400 --> 01:04:53,100
where we'll get a few things looking production-ready like it's like,

1122
01:04:53,100 --> 01:04:54,300
okay this is what we think.

1123
01:04:54,300 --> 01:04:56,800
An entity will really be doing with some animation and some

1124
01:04:56,900 --> 01:04:58,400
pathfinding or something you know, right?

1125
01:04:59,200 --> 01:05:02,900
So that we can get one guy solid and then from there we'll switch into

1126
01:05:02,900 --> 01:05:06,400
production where we're just kind of like now saying you know building

1127
01:05:06,400 --> 01:05:09,500
lots of more stuff in there, but this will be kind of fluid as we go

1128
01:05:10,900 --> 01:05:11,500
between

1129
01:05:11,800 --> 01:05:17,300
Those two, because all of these things are are kind of intimately

1130
01:05:17,300 --> 01:05:17,800
related.

1131
01:05:17,800 --> 01:05:24,200
Like, you know, we'll be working on like the entity system in here and

1132
01:05:24,200 --> 01:05:25,300
out there and they'll just be.

1133
01:05:25,300 --> 01:05:27,900
So this is this part is not really segmented.

1134
01:05:27,900 --> 01:05:30,000
It won't really be able to be segmented in that way.

1135
01:05:32,000 --> 01:05:33,800
But it'll be something like that.

1136
01:05:53,000 --> 01:05:55,700
Right now to get more performance out of the render, you multi-thread

1137
01:05:55,700 --> 01:05:59,400
it to render the screen in chunks, that is correct.

1138
01:06:02,300 --> 01:06:04,600
Gpus are parallel by Design.

1139
01:06:05,300 --> 01:06:07,500
So how did these two concepts differ?

1140
01:06:13,900 --> 01:06:18,900
So I'm not sure, I 100% understand the question.

1141
01:06:20,300 --> 01:06:21,000
but,

1142
01:06:22,900 --> 01:06:26,300
I mean, I can try to give you a little bit of a background on it, I

1143
01:06:26,300 --> 01:06:26,900
guess.

1144
01:06:28,800 --> 01:06:31,700
So there's two different kinds of gpus.

1145
01:06:31,700 --> 01:06:33,900
There's tiled and non tiled.

1146
01:06:36,200 --> 01:06:40,400
And non tiled ones are nothing like the kind that we have basically.

1147
01:06:40,400 --> 01:06:41,400
Well that's not true.

1148
01:06:42,200 --> 01:06:48,100
So one part of the way we do things is exactly the same as the GPU,

1149
01:06:48,300 --> 01:06:48,800
right?

1150
01:06:49,800 --> 01:06:53,700
So the part that's exactly the same is that we process a bunch of

1151
01:06:53,700 --> 01:06:55,900
pixels at a time, right?

1152
01:06:56,800 --> 01:07:00,400
Using Cindy so that's exactly the way the GPU does it, right?

1153
01:07:00,400 --> 01:07:03,100
So the way we're processing pixels is very similar to the way a GPU

1154
01:07:03,100 --> 01:07:07,000
processing was the only difference is we process for pixels like this,

1155
01:07:07,800 --> 01:07:08,400
right?

1156
01:07:08,400 --> 01:07:11,500
Whereas they usually will lose your Lee process for a pixels like this

1157
01:07:12,100 --> 01:07:14,300
and moreover, they're usually wider than we are.

1158
01:07:14,300 --> 01:07:17,900
They're usually more like a block of 16 or something, right?

1159
01:07:18,100 --> 01:07:22,500
Which by the way, is exactly what we would be doing if we had avx-512.

1160
01:07:25,400 --> 01:07:26,200
but we don't,

1161
01:07:28,400 --> 01:07:31,300
In fact I don't think this machine even has a VX stew Old.

1162
01:07:32,300 --> 01:07:34,000
So yeah, so we happen to be for wide.

1163
01:07:34,000 --> 01:07:37,300
So we're doing it this way, they're usually 16 wide least.

1164
01:07:39,400 --> 01:07:41,300
So they're they're going to be in a bigger block.

1165
01:07:42,500 --> 01:07:46,300
So there's that, so that part's always the same, but in terms of how

1166
01:07:46,300 --> 01:07:50,200
the work is distributed, actually, there's two different kinds non

1167
01:07:50,200 --> 01:07:55,300
tiled, do like rasterization of things in some way that has nothing to

1168
01:07:55,300 --> 01:07:58,100
do with regions of the screen necessarily, right?

1169
01:07:59,000 --> 01:08:02,700
So, those are basically talking about taking triangles and processing

1170
01:08:02,700 --> 01:08:06,700
the triangles, and to be honest, I don't really know much about how

1171
01:08:06,700 --> 01:08:07,800
they do their memory control.

1172
01:08:07,800 --> 01:08:08,600
I've no idea.

1173
01:08:10,600 --> 01:08:14,500
Like not at all tiled, architectures on.

1174
01:08:14,500 --> 01:08:17,200
The other hand are very similar to what we do and what they do, right?

1175
01:08:17,200 --> 01:08:21,100
Is they break the screen up into chunks just like we do and then they

1176
01:08:21,100 --> 01:08:27,600
process each chunk, you know, as kind of its own separate bin and gpus

1177
01:08:27,600 --> 01:08:30,800
that are tiled work, very similarly to that, they have a render, they

1178
01:08:30,800 --> 01:08:34,700
have a queue of things that they're trying to do pixel operations are

1179
01:08:34,700 --> 01:08:40,000
trying to do and, you know, multiple independent threads on that.

1180
01:08:40,200 --> 01:08:44,600
You may go through and operate on the different ones in parallel.

1181
01:08:45,100 --> 01:08:49,300
And when one's done it will retire that bin and go pick up a new bin

1182
01:08:49,500 --> 01:08:52,800
and that's like actually what will happen inside the GPU at eyelid

1183
01:08:52,800 --> 01:08:55,600
architecture review, but these are usually on mobile

1184
01:08:56,899 --> 01:08:58,399
And these are usually on desktop.

1185
01:08:58,399 --> 01:08:59,399
So, the machine, the

1186
01:09:00,000 --> 01:09:04,600
Vgpu in this machine, for example, is probably non tiled and probably

1187
01:09:04,600 --> 01:09:09,100
isn't operating exactly this way, but a mobile GPU is often tiled.

1188
01:09:09,300 --> 01:09:11,000
And often does look quite like this.

1189
01:09:12,800 --> 01:09:16,600
But I don't, I've never really worked on a GPU.

1190
01:09:16,600 --> 01:09:21,000
Like, I've never been involved in the hardware designer or programming

1191
01:09:21,000 --> 01:09:22,800
of a GPU, that was like,

1192
01:09:24,500 --> 01:09:27,100
A desktop GPU, a traditional just out GPU.

1193
01:09:27,100 --> 01:09:32,100
I worked on Larrabee, but Larrabee is very special because it was a

1194
01:09:32,100 --> 01:09:33,700
ray of x 64 cores.

1195
01:09:33,700 --> 01:09:34,399
Basically.

1196
01:09:35,800 --> 01:09:39,899
So you know, it's not representative of how things would work

1197
01:09:39,899 --> 01:09:44,800
necessarily on a regular GP or anything like that so I don't know that

1198
01:09:44,800 --> 01:09:49,399
initially translates but but point being you definitely have this this

1199
01:09:49,399 --> 01:09:54,900
sort of difference here that happens with the desktop gpus and I'm not

1200
01:09:54,900 --> 01:09:57,000
super familiar with how they end up breaking up the work.

1201
01:10:01,400 --> 01:10:04,000
If there are no better questions, wouldn't the solution to internally

1202
01:10:04,000 --> 01:10:06,700
link objects in an arbitrary amount of linked list be performance

1203
01:10:06,700 --> 01:10:10,700
problematic or is there a smart solution I'm missing here?

1204
01:10:12,700 --> 01:10:15,900
I'm not sure what you're referring to, but no, it's not performance.

1205
01:10:15,900 --> 01:10:22,800
Problematic, oh, the solution to internally link option, an arbitrary

1206
01:10:22,900 --> 01:10:23,600
amount of linked list.

1207
01:10:23,800 --> 01:10:27,500
I don't think you usually linked internally link objects in an

1208
01:10:27,500 --> 01:10:30,300
arbitrary number of linked list because it's not really

1209
01:10:30,500 --> 01:10:31,500
Possible.

1210
01:10:32,000 --> 01:10:34,800
You usually have to externally link objects if you want an arbitrary,

1211
01:10:34,800 --> 01:10:35,900
number of linked lists.

1212
01:10:36,300 --> 01:10:39,600
If you have a known number of linked lists, that's when you can do it

1213
01:10:39,600 --> 01:10:42,100
internally, that makes any sense.

1214
01:10:44,600 --> 01:10:47,000
I feel like the ground chunks move faster than the trees on the same

1215
01:10:47,000 --> 01:10:50,100
plane that may be true because I don't actually even know if the

1216
01:10:50,100 --> 01:10:53,900
ground chunks are being placed where the trees are like we haven't

1217
01:10:53,900 --> 01:10:55,000
even gotten that far yet.

1218
01:10:55,600 --> 01:10:57,800
So we got to go in there and clean that up.

1219
01:11:05,200 --> 01:11:07,100
The gaming industry is too hard to enter.

1220
01:11:07,100 --> 01:11:09,700
Why do potential programmers waste their time?

1221
01:11:10,500 --> 01:11:15,500
Hmm, I have no idea probably because they want to program games, I

1222
01:11:15,500 --> 01:11:16,000
don't know.

1223
01:11:18,100 --> 01:11:20,100
I don't really know how hard it is to enter the game industry.

1224
01:11:21,100 --> 01:11:25,200
I did it so many years ago that it was nothing like is today.

1225
01:11:25,200 --> 01:11:25,600
So

1226
01:11:32,500 --> 01:11:33,900
there's a lot of mug action going on.

1227
01:11:33,900 --> 01:11:35,100
Are you one of those coffee blooded?

1228
01:11:35,100 --> 01:11:37,500
Programmers, know it's actually was water in here.

1229
01:11:40,300 --> 01:11:41,700
I drink coffee in the morning.

1230
01:11:41,700 --> 01:11:44,600
I drink like one cup of coffee, basically, in the morning, pretty

1231
01:11:44,600 --> 01:11:45,300
regularly.

1232
01:11:47,100 --> 01:11:49,700
I vacuumed in studying a degree in computer science.

1233
01:11:50,000 --> 01:11:52,600
I love gaming and the concept of creating them is fairly interesting,

1234
01:11:52,700 --> 01:11:54,800
but I am not entirely mathematically inclined.

1235
01:11:54,900 --> 01:11:56,800
This being the case, would you suggest I stay away from game

1236
01:11:56,800 --> 01:11:59,400
development and steered towards my original plan of software

1237
01:11:59,400 --> 01:11:59,800
engineering?

1238
01:12:02,500 --> 01:12:05,100
I guess it depends whether you're not mathematically inclined in

1239
01:12:05,100 --> 01:12:09,400
general or whether you're just not good at learning math in math class

1240
01:12:09,400 --> 01:12:13,700
in high school because I was awful in math class at high school but I

1241
01:12:13,700 --> 01:12:16,100
found that that's not really a problem when you're doing programming.

1242
01:12:16,300 --> 01:12:19,600
If you don't like math period Then you had don't be a game programmer.

1243
01:12:19,600 --> 01:12:23,000
That would be a bad idea because there's a heck of a lot of math.

1244
01:12:32,900 --> 01:12:35,400
I have Ruby and JavaScript background, and I was wondering if you

1245
01:12:35,400 --> 01:12:38,300
normally do unit, testing, behavioral testing in gain woman.

1246
01:12:38,300 --> 01:12:40,400
Or is it just too hard because of visual elements?

1247
01:12:40,700 --> 01:12:42,300
Yeah, it tends to be.

1248
01:12:42,500 --> 01:12:45,400
I mean you can unit test some things in game development like there's

1249
01:12:45,400 --> 01:12:48,100
some core components like a memory allocator or things like that,

1250
01:12:48,100 --> 01:12:48,600
right?

1251
01:12:48,700 --> 01:12:51,000
You can write some unit tests for them and sometimes that's a good

1252
01:12:51,000 --> 01:12:51,500
idea.

1253
01:12:52,000 --> 01:12:55,100
If those you, if those things are complex and you can suss out some

1254
01:12:55,100 --> 01:12:55,400
bugs.

1255
01:12:55,400 --> 01:12:57,900
That way, I've definitely done some unit testing in the past of

1256
01:12:58,000 --> 01:13:00,300
certain core components, depending on the circumstance.

1257
01:13:01,600 --> 01:13:04,700
But in terms of the game itself, you can't really do unit testing very

1258
01:13:04,700 --> 01:13:07,200
effectively because it's so interactive.

1259
01:13:07,200 --> 01:13:10,900
And so visual that it's very difficult to construct unit tests that

1260
01:13:10,900 --> 01:13:14,200
actually like constructing unit test to actually, that would actually

1261
01:13:14,200 --> 01:13:17,000
find the bugs would almost be prohibitively expensive.

1262
01:13:17,000 --> 01:13:22,800
So what you tend to do is you tend to do more randomized testing and,

1263
01:13:22,900 --> 01:13:25,800
you know, that's, that's really all you can do, unfortunately,

1264
01:13:42,100 --> 01:13:43,800
On your site, you responded to the question.

1265
01:13:43,900 --> 01:13:46,000
Why are you doing this project with game for girls need to start?

1266
01:13:46,000 --> 01:13:48,300
Creating high-quality teaching materials for their trade?

1267
01:13:48,400 --> 01:13:51,500
How much progress have you made towards developing the twitch VOD s

1268
01:13:51,500 --> 01:13:54,300
into high-quality teaching materials, actually, I think the twitch

1269
01:13:54,300 --> 01:13:56,200
videos are that, that's why I'm making them.

1270
01:13:56,300 --> 01:13:58,300
Like I, that's what I think these are.

1271
01:13:58,300 --> 01:14:01,500
I think this is a good high quality, teaching material because you get

1272
01:14:01,500 --> 01:14:03,600
to see how someone actually does their programming.

1273
01:14:04,600 --> 01:14:08,100
So I wasn't saying that in the sense of like someone needs to make

1274
01:14:08,100 --> 01:14:09,500
something else.

1275
01:14:09,500 --> 01:14:11,600
I was saying, I think this is one of those things.

1276
01:14:12,300 --> 01:14:16,300
But I think other people will hopefully make other things as well,

1277
01:14:16,300 --> 01:14:16,700
right.

1278
01:14:16,700 --> 01:14:19,500
I'm hoping that hammy here won't be the only one of those

1279
01:14:25,700 --> 01:14:27,100
Do we know how many milliseconds per frame?

1280
01:14:27,100 --> 01:14:29,200
We have right now for game logic so far.

1281
01:14:29,200 --> 01:14:32,700
We push 60 frames per second, but it's hard locked and maybe we got

1282
01:14:32,700 --> 01:14:34,100
already some room for game logic.

1283
01:14:34,200 --> 01:14:37,100
Yeah, I think we probably have plenty of room for the game logic that

1284
01:14:37,100 --> 01:14:38,200
we're going to need for this game.

1285
01:14:39,800 --> 01:14:41,800
I'm not particularly concerned about that.

1286
01:14:42,100 --> 01:14:44,700
And the reason for that is you have to remember the the tremendous

1287
01:14:44,700 --> 01:14:47,300
difference in scale between the number of pixels there are on the

1288
01:14:47,300 --> 01:14:50,400
screen and the number of entities, there are in the game on screen at

1289
01:14:50,400 --> 01:14:51,200
any given time.

1290
01:14:51,900 --> 01:14:53,600
So if you take a look at it, right?

1291
01:14:54,900 --> 01:14:58,100
You can think, you know we're doing 1920 by 1080, right?

1292
01:14:58,400 --> 01:14:59,800
That's 2 million pixels.

1293
01:15:00,400 --> 01:15:03,300
And you know the number of entities on the screen is something like

1294
01:15:03,300 --> 01:15:05,300
100 most, right?

1295
01:15:05,800 --> 01:15:08,800
So you just order of magnitude wise game.

1296
01:15:08,800 --> 01:15:12,400
Logic is probably not going to be a huge deal and we're already set up

1297
01:15:12,400 --> 01:15:15,300
for background, simulation of things that are elsewhere in the world.

1298
01:15:15,300 --> 01:15:18,200
So hopefully that'll allow us to not worry too much about the scaling.

1299
01:15:20,800 --> 01:15:23,100
Well, everything need format programmatically animated or will it be

1300
01:15:23,100 --> 01:15:24,500
done by an artist or both?

1301
01:15:25,100 --> 01:15:27,500
Hopefully everything will be programmatically animated.

1302
01:15:32,200 --> 01:15:33,600
Do you have a YouTube channel?

1303
01:15:33,600 --> 01:15:38,900
Yes, you can actually find it by going to handmade hero dot-org.

1304
01:15:39,500 --> 01:15:44,200
And this button will will get you to the to the YouTube.

1305
01:15:53,600 --> 01:15:57,200
Can you show a snippet where you implemented a hash table?

1306
01:16:00,300 --> 01:16:05,600
I think we only used a hash, like, construct in one place so far.

1307
01:16:11,100 --> 01:16:11,700
Right here.

1308
01:16:13,600 --> 01:16:15,200
And I don't know.

1309
01:16:15,200 --> 01:16:21,100
This is kind of a joke which is that I said all code bases right

1310
01:16:21,100 --> 01:16:24,200
before they do a hash have a to do which says better hash function.

1311
01:16:24,700 --> 01:16:30,500
So we put one in it's almost guaranteed that we will ship with it

1312
01:16:30,500 --> 01:16:33,700
still saying better hash function that's like the joke.

1313
01:16:36,500 --> 01:16:37,200
You had to be there.

1314
01:16:37,500 --> 01:16:39,500
Anyway, this was the hash table.

1315
01:16:40,400 --> 01:16:40,700
Right?

1316
01:16:40,700 --> 01:16:43,700
What we do is we take the x y&z coordinates of the chunk of the world

1317
01:16:43,700 --> 01:16:46,600
that we're trying to Hash, we produce the hash value, we look it up

1318
01:16:47,400 --> 01:16:50,600
by, you know, masking out, whatever.

1319
01:16:50,600 --> 01:16:53,500
The, the part of the bits are that that are not actually valid for the

1320
01:16:53,500 --> 01:16:53,700
table.

1321
01:16:53,700 --> 01:16:55,200
So that we basically modded the table

1322
01:16:56,400 --> 01:17:01,000
and then we go through here and, and, and take a look at at the actual

1323
01:17:01,000 --> 01:17:02,600
values that are in there, right?

1324
01:17:03,400 --> 01:17:05,200
You can see that it's externally, chained.

1325
01:17:05,400 --> 01:17:08,900
So, in that hash, lat, we kind of keep looking through the hash, Lots

1326
01:17:08,900 --> 01:17:11,000
till we find the Chunk we wanted.

1327
01:17:12,600 --> 01:17:16,600
So it's sort of a hash table with a linked list, which is called

1328
01:17:16,600 --> 01:17:17,500
external chaining

1329
01:17:23,700 --> 01:17:26,100
If Vulcan is that by the time you Harbor start surrender, would it be

1330
01:17:26,100 --> 01:17:26,900
possible use Vulcan?

1331
01:17:26,900 --> 01:17:29,400
Yes, although I don't know if we're going to need to do Harbor,

1332
01:17:29,400 --> 01:17:33,000
exploration of the renderer now because we're so darn fast.

1333
01:17:33,000 --> 01:17:36,400
I assume we will do it, but maybe we won't even have to do it before

1334
01:17:36,400 --> 01:17:37,000
we ship.

1335
01:17:42,500 --> 01:17:46,100
Why do you think Microsoft decided to omit the 1080i resolution option

1336
01:17:46,100 --> 01:17:46,800
for the Xbox one?

1337
01:17:46,800 --> 01:17:47,000
Man?

1338
01:17:47,000 --> 01:17:50,200
That is way off topic not to mention the fact that I don't know

1339
01:17:50,200 --> 01:17:52,700
anything about what Microsoft decides their doesn't decide to do.

1340
01:17:58,900 --> 01:17:59,900
Do you plan on commenting?

1341
01:18:00,000 --> 01:18:01,600
Code before releasing the engine.

1342
01:18:03,300 --> 01:18:08,100
I think we will probably go through and try to document some things at

1343
01:18:08,100 --> 01:18:11,400
the end, just to make it easy for people to who are coming to it,

1344
01:18:11,400 --> 01:18:12,400
fresh to see.

1345
01:18:14,400 --> 01:18:19,300
But, you know, that's a real that's so far down the road that, you

1346
01:18:19,300 --> 01:18:22,500
know, who knows what we'll do.

1347
01:18:22,600 --> 01:18:25,300
I mean, that's like a year and a half from now or something.

1348
01:18:25,300 --> 01:18:25,800
Right?

1349
01:18:26,200 --> 01:18:27,900
So I the answer is, I don't know what we'll do.

1350
01:18:28,000 --> 01:18:28,600
Probably.

1351
01:18:29,900 --> 01:18:30,200
You know what truck?

1352
01:18:30,200 --> 01:18:33,200
Probably at least try to put headers on various things that say.

1353
01:18:33,200 --> 01:18:35,000
Like, this is the section that deals with blah.

1354
01:18:35,000 --> 01:18:37,500
It's a hash table and you store things in the world this way, you

1355
01:18:37,500 --> 01:18:41,800
know, and that way people will kind of know roughly what they're

1356
01:18:41,800 --> 01:18:43,700
looking at in any given particular place.

1357
01:18:44,100 --> 01:18:47,000
I don't think comments or that useful in general, unless you're trying

1358
01:18:47,000 --> 01:18:51,200
to describe what's happening because like, in general, like I prefer

1359
01:18:51,200 --> 01:18:52,100
to just have it.

1360
01:18:52,100 --> 01:18:52,500
Clear?

1361
01:18:52,500 --> 01:18:54,800
What the thing does by, you can read it, get World chunk.

1362
01:18:54,800 --> 01:18:55,900
It gets a real chump, right?

1363
01:18:55,900 --> 01:18:59,000
Like and you can see it's a hash table, there's not a whole lot.

1364
01:18:59,300 --> 01:19:00,700
What's the comment going to say?

1365
01:19:01,500 --> 01:19:05,100
You know, there's really nothing to say, but I do find it useful.

1366
01:19:05,100 --> 01:19:08,600
Like once you really sure that assistants done to come up here to the

1367
01:19:08,600 --> 01:19:12,300
top and say, let me just give you a brief overview of what's

1368
01:19:12,400 --> 01:19:15,600
Happening, sort of in here that tends to be the more useful kind of

1369
01:19:15,600 --> 01:19:16,100
comment.

1370
01:19:16,100 --> 01:19:16,400
So,

1371
01:19:17,900 --> 01:19:18,300
You know.

1372
01:19:25,400 --> 01:19:28,700
Robbie is just insane that we can have so many laggy games today.

1373
01:19:28,700 --> 01:19:31,800
When CPUs gpus are that fast, thank you for bringing some light into

1374
01:19:31,800 --> 01:19:34,100
the reasons for that but programming and or languages.

1375
01:19:34,100 --> 01:19:38,800
Yeah, I mean I say this all the time and I know that it's true but you

1376
01:19:38,800 --> 01:19:41,700
know, people don't, you know, I don't know.

1377
01:19:41,700 --> 01:19:46,900
It's just how it is like machines are incredibly incredibly fast and

1378
01:19:46,900 --> 01:19:49,500
especially when you know you're talking about games that are you know,

1379
01:19:49,500 --> 01:19:50,700
2-D game or something like that.

1380
01:19:50,700 --> 01:19:54,300
There's there's absolutely like no excuse for it to ever really be

1381
01:19:54,600 --> 01:19:58,000
Get your slow because you have so much horsepower like what's going

1382
01:19:58,000 --> 01:19:58,800
on, right?

1383
01:19:59,300 --> 01:20:01,900
And once in a while, there's nothing you can do about that because

1384
01:20:01,900 --> 01:20:05,600
it's Windows as being is misbehaving or the graphics card driver is

1385
01:20:05,600 --> 01:20:06,100
misbehaving.

1386
01:20:06,100 --> 01:20:09,600
That is true, and that is not the game developers fault, right?

1387
01:20:09,600 --> 01:20:11,400
But a lot of times it has nothing to do with that.

1388
01:20:11,400 --> 01:20:15,200
A lot of times the game developers just chose, they just didn't know

1389
01:20:15,200 --> 01:20:17,800
how either didn't know or didn't want to spend the time to write the

1390
01:20:17,800 --> 01:20:18,600
right thing.

1391
01:20:19,300 --> 01:20:22,300
And so then every gamer who plays the game has to deal with loggy

1392
01:20:22,300 --> 01:20:24,300
loggy choppy frame rate or, you know,

1393
01:20:24,400 --> 01:20:27,400
So whatever else and so I feel like it's important to try and set

1394
01:20:27,400 --> 01:20:28,200
those goals.

1395
01:20:29,100 --> 01:20:31,300
I feel like it's important to try and have some standards as game

1396
01:20:31,300 --> 01:20:32,200
developers where we say.

1397
01:20:32,200 --> 01:20:38,000
Like you know we should know that if we're on these platforms that

1398
01:20:38,000 --> 01:20:40,600
have enough horsepower that we should be able to deliver a good

1399
01:20:40,600 --> 01:20:45,100
experience like that's should be front and foremost and unfortunately

1400
01:20:45,100 --> 01:20:46,200
it often isn't

1401
01:20:47,000 --> 01:20:50,000
Because a lot of people come in with it, thinking, what's the easiest

1402
01:20:50,000 --> 01:20:51,400
way for me to write this thing?

1403
01:20:51,400 --> 01:20:53,900
Oh, I want to use like C sharp or something, right?

1404
01:20:53,900 --> 01:20:57,600
But just making that decision, may be means that they'll never be able

1405
01:20:57,600 --> 01:20:59,900
to ship the game that they had in mind without having this.

1406
01:21:00,300 --> 01:21:03,300
Stuff for these, you know, having to have loading screens or who knows

1407
01:21:03,300 --> 01:21:06,900
what else because of limitations in that thing.

1408
01:21:07,400 --> 01:21:10,000
And so, yeah, one of the things I try to hammer home in the Stream as

1409
01:21:10,000 --> 01:21:10,700
often as possible.

1410
01:21:10,700 --> 01:21:14,600
Just like, I think it needs to be made more of a priority when people

1411
01:21:14,600 --> 01:21:20,200
sit down that the number one thing that you can't let go of is good

1412
01:21:20,200 --> 01:21:21,900
solid performance.

1413
01:21:22,400 --> 01:21:25,700
And then after that, you can start to think about what is convenient

1414
01:21:25,700 --> 01:21:26,600
for you to do.

1415
01:21:27,000 --> 01:21:27,800
That's fine.

1416
01:21:28,600 --> 01:21:29,700
But having good solid

1417
01:21:30,000 --> 01:21:32,800
Remnants, as an absolute hard requirement, I think is very important

1418
01:21:32,800 --> 01:21:36,800
and it's not only important for your game, but it's important for the

1419
01:21:36,800 --> 01:21:37,400
industry as a whole.

1420
01:21:37,400 --> 01:21:41,400
Because if people demand that, then the tools we'll have to start

1421
01:21:41,400 --> 01:21:42,000
providing it.

1422
01:21:42,000 --> 01:21:45,900
And like if nobody used C sharp because of these problems, they would

1423
01:21:45,900 --> 01:21:49,000
have to go and fix it but because people use it anyway and just let

1424
01:21:49,000 --> 01:21:54,700
their games have these problems, you know it doesn't get fixed right?

1425
01:21:54,900 --> 01:21:56,100
Because they're just like it's fine.

1426
01:21:57,100 --> 01:21:59,500
And the answer is, we don't want that to be fine, right?

1427
01:21:59,500 --> 01:22:01,500
We want that to have to be fixed.

1428
01:22:01,700 --> 01:22:04,800
And so, it's good to have these as like things because they make a

1429
01:22:04,800 --> 01:22:05,200
difference.

1430
01:22:05,200 --> 01:22:07,700
To the Clay Center has to play the game at the end of it.

1431
01:22:08,600 --> 01:22:13,400
And and I feel like people Gamers deserve to be Gamers deserve to have

1432
01:22:13,400 --> 01:22:17,800
a fluid solid experience because the machine is capable of delivering

1433
01:22:17,800 --> 01:22:22,600
it and it's our job as program is to ensure that that happens first

1434
01:22:22,700 --> 01:22:26,600
and then make life easier for ourselves second.

1435
01:22:39,500 --> 01:22:40,300
Let's see there.

1436
01:22:40,300 --> 01:22:42,200
Any of these that are on topic

1437
01:23:00,200 --> 01:23:03,500
Is unsafe memory key for high performance optimizations needed for

1438
01:23:03,500 --> 01:23:04,500
modern day games.

1439
01:23:04,500 --> 01:23:06,300
I've heard, this is the key reason memory.

1440
01:23:06,300 --> 01:23:09,100
Safe languages like rust and Haskell won't be able to take over for

1441
01:23:09,100 --> 01:23:11,600
extremely low, latency applications, or drivers, but I don't know

1442
01:23:11,600 --> 01:23:12,600
enough about the domain.

1443
01:23:16,100 --> 01:23:17,500
I guess what I would say is,

1444
01:23:19,200 --> 01:23:28,400
I don't really know if it's true that the concept of memory.

1445
01:23:28,400 --> 01:23:33,000
Safety actually has to imply performance problems.

1446
01:23:33,900 --> 01:23:38,200
I think it's more, just the case that the language is, which currently

1447
01:23:38,500 --> 01:23:39,300
have memory.

1448
01:23:39,300 --> 01:23:42,400
Safety are inappropriate for high performance.

1449
01:23:43,000 --> 01:23:47,500
So, I think it's entirely possible that in the future, we will have

1450
01:23:47,500 --> 01:23:48,800
languages that are both

1451
01:23:48,900 --> 01:23:50,900
Safe and high performance.

1452
01:23:50,900 --> 01:23:57,000
We just haven't gotten there yet and so it's important to distinguish.

1453
01:23:57,000 --> 01:23:59,800
I think some of these things because

1454
01:24:00,000 --> 01:24:05,400
it's like for example garbage collection, I think maybe the kind of

1455
01:24:05,400 --> 01:24:07,200
thing which will never

1456
01:24:09,400 --> 01:24:10,800
can never be high performance.

1457
01:24:12,200 --> 01:24:17,200
But memory safety is not the same thing as a garbage collection and so

1458
01:24:17,200 --> 01:24:20,700
it's important to distinguish between those two like the act of a

1459
01:24:20,700 --> 01:24:27,500
thing, which tries to analyze pointers at runtime to free memory for

1460
01:24:27,500 --> 01:24:30,400
you or something is never going to be performing in my opinion.

1461
01:24:30,600 --> 01:24:35,700
I don't think you even ever need to explore that as an Avenue, but I

1462
01:24:35,700 --> 01:24:38,900
think there are ways that we maybe we might be able to construct

1463
01:24:38,900 --> 01:24:41,700
memory, safe languages, which do not need those things.

1464
01:24:42,400 --> 01:24:46,100
That are still memory safe but which do not require the kinds of

1465
01:24:46,100 --> 01:24:50,200
things that these other languages are requiring to operate.

1466
01:24:51,000 --> 01:24:54,800
And so, my suspicion is that we are simply too early on in the

1467
01:24:54,800 --> 01:24:59,300
development of computer, programming to see those Solutions.

1468
01:25:00,000 --> 01:25:05,500
And so at the moment, it appears like, memory safety and performance,

1469
01:25:05,700 --> 01:25:06,600
fight each other.

1470
01:25:07,500 --> 01:25:10,400
But I suspect that in the future, what we will actually find out is

1471
01:25:10,400 --> 01:25:16,800
they are actually very harmonic and that actually a language that

1472
01:25:16,800 --> 01:25:21,700
gives you high performance will also give you memory safety because

1473
01:25:21,700 --> 01:25:23,600
they actually probably go hand-in-hand.

1474
01:25:24,100 --> 01:25:26,700
I think it's just another level of thinking that we haven't gotten to

1475
01:25:26,700 --> 01:25:27,200
yet.

1476
01:25:28,600 --> 01:25:31,300
That's my suspicions, but we'll have to see how it shakes out in the

1477
01:25:31,300 --> 01:25:32,500
next two decades or so.

1478
01:25:41,900 --> 01:25:46,900
All right, I'm going to go ahead and down shut things down.

1479
01:25:49,500 --> 01:25:50,500
Let's see here.

1480
01:25:51,700 --> 01:25:53,000
Let's see here.

1481
01:25:53,000 --> 01:25:54,100
Save

1482
01:25:59,600 --> 01:26:01,300
and close.

1483
01:26:01,600 --> 01:26:04,200
Close close.

1484
01:26:04,200 --> 01:26:04,700
Okay.

1485
01:26:07,000 --> 01:26:07,800
Why is that?

1486
01:26:10,700 --> 01:26:12,600
Okay, well, there we go.

1487
01:26:12,800 --> 01:26:15,100
Got a little selectable text there I guess.

1488
01:26:17,200 --> 01:26:19,700
Thank you everyone for joining me for another episode of handmade

1489
01:26:19,700 --> 01:26:20,000
hero.

1490
01:26:20,000 --> 01:26:21,900
It's been a pleasure coding with you, as always,

1491
01:26:24,600 --> 01:26:25,100
What can I say?

1492
01:26:25,100 --> 01:26:27,400
We're getting to a good place.

1493
01:26:27,400 --> 01:26:29,800
I think I'm pretty happy where things are going we got a little bit of

1494
01:26:29,800 --> 01:26:34,100
debugging to do here with our ground tiles but I'm optimistic that

1495
01:26:34,100 --> 01:26:38,000
pretty soon here will be at a place where we can have some nice solid

1496
01:26:38,000 --> 01:26:41,600
World exploration going on and that's really the whole point of making

1497
01:26:41,600 --> 01:26:43,500
the renderer work nicely and smoothly there.

1498
01:26:44,300 --> 01:26:46,100
I'm super happy with how fast the render is.

1499
01:26:46,100 --> 01:26:47,900
It was surprising to me how fast it is.

1500
01:26:48,400 --> 01:26:51,500
So I continue to be pretty thrilled about that because I think it

1501
01:26:51,500 --> 01:26:54,200
means we may be able to run all of handmade hero through a software.

1502
01:26:54,300 --> 01:26:57,400
We're renderer for the entire development cycle, which is I was

1503
01:26:57,400 --> 01:26:59,200
assuming was totally out of the question.

1504
01:27:00,000 --> 01:27:02,300
It turns out that it's not out of the question at all.

1505
01:27:02,800 --> 01:27:04,800
So yeah, I don't know what to say about that.

1506
01:27:04,800 --> 01:27:08,600
It just was a nice little surprise, thank you until for making very

1507
01:27:08,600 --> 01:27:09,400
fast machines.

1508
01:27:10,300 --> 01:27:14,300
So that said, if you would like to follow along at home and do your

1509
01:27:14,300 --> 01:27:18,100
own experimentation, you can always pre-order the game and it comes

1510
01:27:18,100 --> 01:27:20,900
with all the source code so you can download the source code every

1511
01:27:20,900 --> 01:27:23,100
night after I'm done and play around with it yourself.

1512
01:27:24,100 --> 01:27:26,100
If you would like to do that, you can go to do that and made here at

1513
01:27:26,100 --> 01:27:27,400
or use a little pee order button.

1514
01:27:27,600 --> 01:27:29,900
We also have a forum site, you can go to from there which really

1515
01:27:30,000 --> 01:27:32,800
you can ask questions and view an annotated episode guide which helps

1516
01:27:32,800 --> 01:27:37,300
to view like past episodes and there's also like ports to Mac and

1517
01:27:37,300 --> 01:27:39,900
Linux and stuff up there that community members have done in case

1518
01:27:39,900 --> 01:27:42,400
you're trying to run on other platforms before we get to them.

1519
01:27:42,900 --> 01:27:44,400
That's one way you can do that.

1520
01:27:44,600 --> 01:27:47,100
We also have a patreon page if you want to support the video series,

1521
01:27:47,100 --> 01:27:47,800
that's place.

1522
01:27:47,800 --> 01:27:48,600
You can subscribe.

1523
01:27:49,600 --> 01:27:52,900
And we also have a tweetbot the tweets, the schedule.

1524
01:27:52,900 --> 01:27:57,900
So if you're trying to follow along at home everyday, you can check

1525
01:27:57,900 --> 01:27:59,100
out that tweet blog because it will tell you.

1526
01:27:59,100 --> 01:27:59,800
When the stream is going to be

1527
01:28:00,200 --> 01:28:01,200
It helps to catch it.

1528
01:28:02,100 --> 01:28:03,000
So that's that.

1529
01:28:03,400 --> 01:28:04,600
Thanks everyone for joining me.

1530
01:28:04,600 --> 01:28:06,500
We will be back here tomorrow.

1531
01:28:07,600 --> 01:28:09,300
We're off Friday, but we're back tomorrow.

1532
01:28:09,300 --> 01:28:10,400
So tomorrow, 5:00 p.m.

1533
01:28:10,400 --> 01:28:11,500
Pacific Standard time.

1534
01:28:12,100 --> 01:28:13,600
We will be right here on Twitch.

1535
01:28:13,600 --> 01:28:14,700
Hope to see you all there.

1536
01:28:14,700 --> 01:28:16,700
Until then, please have fun programming.

1537
01:28:17,500 --> 01:28:21,400
Please remember, our helpful message that we included here.

1538
01:28:21,800 --> 01:28:23,800
Don't forget it, it's very important.

1539
01:28:24,600 --> 01:28:27,900
Rule number one of programming, so you got to keep that in mind.

1540
01:28:27,900 --> 01:28:29,800
But as long as you keep that in mind, you will have

1541
01:28:29,900 --> 01:28:34,400
Have I think a good programming night and I will see you back here

1542
01:28:34,400 --> 01:28:35,000
tomorrow.

1543
01:28:35,300 --> 01:28:36,000
Thanks everyone.

1544
01:28:36,000 --> 01:28:36,600
Take it easy.

