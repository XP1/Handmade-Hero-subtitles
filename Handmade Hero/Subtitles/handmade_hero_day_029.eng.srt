1
00:00:00,000 --> 00:00:02,400
When ice cream and upload to Youtube.

2
00:00:03,200 --> 00:00:03,800
Okay.

3
00:00:03,800 --> 00:00:06,800
Hello everyone, and welcome to handmade hero.

4
00:00:06,800 --> 00:00:10,000
The show where we code a complete game from scratch.

5
00:00:10,000 --> 00:00:10,700
No libraries.

6
00:00:10,700 --> 00:00:11,400
No engine.

7
00:00:11,800 --> 00:00:15,800
So that we can see absolutely everything that happens from start to

8
00:00:15,800 --> 00:00:18,100
finish when a game is running our computer.

9
00:00:18,400 --> 00:00:22,900
This series is designed to teach you about every last thing that goes

10
00:00:22,900 --> 00:00:25,100
on and we have done a pretty good job.

11
00:00:25,100 --> 00:00:26,600
Getting ourselves up and running.

12
00:00:27,000 --> 00:00:32,100
We basically have a little kind of like stand in tile map that we

13
00:00:32,100 --> 00:00:32,900
created yesterday.

14
00:00:33,200 --> 00:00:36,200
And so we're kind of in the thick of it right now trying to basically

15
00:00:36,700 --> 00:00:41,900
get some notion of what our game engine will have to do so that we can

16
00:00:41,900 --> 00:00:42,700
start building it.

17
00:00:42,700 --> 00:00:45,600
And one of the things that I talked about over the past couple of days

18
00:00:46,000 --> 00:00:48,900
was that you don't want to start building things like a game engine

19
00:00:48,900 --> 00:00:52,200
before, you know, what they have to do and know how you want them to

20
00:00:52,200 --> 00:00:52,400
do.

21
00:00:52,400 --> 00:00:53,800
It only is right.

22
00:00:53,800 --> 00:00:54,600
The usage code.

23
00:00:54,600 --> 00:00:55,700
First is my Mantra.

24
00:00:55,700 --> 00:00:59,800
I say it all the time and I mean it and basically what I mean is we

25
00:00:59,800 --> 00:01:02,700
don't want to write a game engine until we have a game.

26
00:01:03,100 --> 00:01:05,900
I know that sounds a little paradoxical because you're like how can a

27
00:01:05,900 --> 00:01:07,000
game about the game engine?

28
00:01:07,100 --> 00:01:10,200
And the answer is just use whatever the dumbest stand-in thing is that

29
00:01:10,200 --> 00:01:13,400
you can and get the structure worked out properly.

30
00:01:13,400 --> 00:01:15,800
So what we're basically doing is we're just drawing rectangles on the

31
00:01:15,800 --> 00:01:18,400
screen and we're just pretending that those rectangles are going to be

32
00:01:18,400 --> 00:01:19,800
something beautiful later on.

33
00:01:20,800 --> 00:01:24,300
And the goal, there is to basically make it so that we can spend some

34
00:01:24,300 --> 00:01:27,300
time up front without having to invest any time in developing, the

35
00:01:27,300 --> 00:01:31,800
engine essentially making something that that works the way we want

36
00:01:31,800 --> 00:01:32,500
our game to work.

37
00:01:32,500 --> 00:01:32,900
So that we

38
00:01:33,000 --> 00:01:36,100
A look at it and go here is exactly how we want our engine to

39
00:01:36,100 --> 00:01:36,700
function.

40
00:01:36,700 --> 00:01:40,100
So that when we build the engine components that we actually need,

41
00:01:40,200 --> 00:01:43,400
we're not wasting a lot of time designing the wrong then we build the

42
00:01:43,400 --> 00:01:46,300
game only to find out that their clunky and hard to use in the context

43
00:01:46,300 --> 00:01:47,500
of the game that we wanted.

44
00:01:47,600 --> 00:01:49,000
So that's what we're in the middle of doing right now.

45
00:01:49,000 --> 00:01:50,200
We're going to continue that today.

46
00:01:51,000 --> 00:01:54,100
If you are following along at home and you have pre-ordered the source

47
00:01:54,100 --> 00:01:57,900
code on handmade hero dot-org, using the handy dandy pre-order button,

48
00:01:58,700 --> 00:02:02,300
then you should have gotten a link in your email and that link has a

49
00:02:02,300 --> 00:02:02,800
download page.

50
00:02:03,000 --> 00:02:06,800
You can download the zip file which has everydays Source included in

51
00:02:06,800 --> 00:02:07,100
it.

52
00:02:07,300 --> 00:02:11,100
And if you look, we are currently on day, 29, so you will want to

53
00:02:11,100 --> 00:02:14,100
unzip day, 28 source code the previous day.

54
00:02:14,300 --> 00:02:15,900
That is what I am starting with now.

55
00:02:16,000 --> 00:02:19,000
And so if you unzip that and start with that source code, you will be

56
00:02:19,000 --> 00:02:21,800
exactly where I am right now.

57
00:02:22,100 --> 00:02:25,300
So let's go ahead and get ourselves.

58
00:02:25,300 --> 00:02:25,600
Oops.

59
00:02:25,600 --> 00:02:26,600
It's a bad typing day.

60
00:02:26,600 --> 00:02:27,800
I can already tell Gotta Move That.

61
00:02:27,800 --> 00:02:28,800
Keyword out a little bit.

62
00:02:29,300 --> 00:02:32,300
Let's go ahead and take a look at where we were, just so we can

63
00:02:32,300 --> 00:02:32,900
refresh our

64
00:02:33,000 --> 00:02:33,900
Memory a little bit.

65
00:02:34,300 --> 00:02:39,400
We at the end of last stream had just gotten a little rectangle moving

66
00:02:39,400 --> 00:02:39,900
around.

67
00:02:39,900 --> 00:02:45,200
And here is our sort of fanciful little tile map that we had created.

68
00:02:45,400 --> 00:02:46,900
You know, what might be interesting to.

69
00:02:46,900 --> 00:02:50,200
I think just for the for the sake of what we've been doing.

70
00:02:51,000 --> 00:02:53,600
It might be nice to clear, the gutter area to Black.

71
00:02:53,700 --> 00:02:56,900
I don't know if you guys remember basically, we're only filling in

72
00:02:57,000 --> 00:02:58,900
sort of a region that were pretending as our screen.

73
00:02:58,900 --> 00:02:59,900
We don't actually do anything.

74
00:03:00,500 --> 00:03:01,100
With the rest.

75
00:03:01,100 --> 00:03:02,700
So it might be interesting to hear that to Black.

76
00:03:02,700 --> 00:03:05,200
It's just so we don't have confusion about where the screen ends.

77
00:03:05,400 --> 00:03:07,300
That's just something that I think might be interesting.

78
00:03:07,300 --> 00:03:09,700
In the other thing that might be interesting too is to Center this a

79
00:03:09,700 --> 00:03:12,300
little, so we can kind of see the gutter areas.

80
00:03:12,300 --> 00:03:15,400
Well, I don't know, just something to think about I was I think maybe

81
00:03:15,400 --> 00:03:19,000
before I talk about it's just I kind of want to do so we can jump into

82
00:03:19,000 --> 00:03:23,400
the again the win32 code that displays us makes that actually pretty

83
00:03:23,400 --> 00:03:26,700
easy for us to do so, it'd be pretty easy for us to

84
00:03:28,300 --> 00:03:29,200
To make that happen.

85
00:03:29,300 --> 00:03:32,300
Basically, we've got a, we've got a function that sort of displays our

86
00:03:32,300 --> 00:03:33,300
bitmap to the screen.

87
00:03:33,300 --> 00:03:35,400
It's this win32 display buffer in windhoek.

88
00:03:35,400 --> 00:03:38,800
All right, and when we do that, if we wanted to, we could make a

89
00:03:38,800 --> 00:03:40,800
Windows call, but cleared the screen first.

90
00:03:40,900 --> 00:03:44,700
It's called padlet, you know, so we could just we could just go ahead

91
00:03:44,700 --> 00:03:45,200
and call that.

92
00:03:45,200 --> 00:03:47,500
I'll show you the call that I'm talking about papal.

93
00:03:47,500 --> 00:03:47,800
It.

94
00:03:50,400 --> 00:03:54,300
So basically all it does is it says, all right, I want you to do, I

95
00:03:54,300 --> 00:03:57,500
want you to take this rectangle that I'm going to pass in the left.

96
00:03:57,900 --> 00:03:59,900
Basically the left and top.

97
00:04:00,000 --> 00:04:01,000
That's just a misnomer there.

98
00:04:01,000 --> 00:04:02,200
It should be why top.

99
00:04:02,200 --> 00:04:05,500
But I guess anyway you passing the left, and the top, and the width

100
00:04:05,500 --> 00:04:08,600
and the height, it goes ahead and does whatever this operation is that

101
00:04:08,600 --> 00:04:12,700
you tell it to do and Blackness is what we want their we're just going

102
00:04:12,700 --> 00:04:15,600
to tell it to do Blackness and then windows will just do that clear.

103
00:04:15,800 --> 00:04:18,300
So that way the rest of the Wind part of the window that we're not

104
00:04:18,500 --> 00:04:21,800
Drawing to basically is going to be.

105
00:04:22,600 --> 00:04:23,800
Where is that window with window?

106
00:04:23,800 --> 00:04:24,000
Height?

107
00:04:24,000 --> 00:04:24,700
Got here.

108
00:04:25,100 --> 00:04:27,300
The rest of the window that we're not drawing to will just be clear,

109
00:04:27,300 --> 00:04:28,900
but Blackness, so we're not confused.

110
00:04:28,900 --> 00:04:31,400
And the other thing is we'll just set an offset here.

111
00:04:31,400 --> 00:04:36,900
We'll just set a little offset bits basically offset X set X and

112
00:04:36,900 --> 00:04:37,400
offset.

113
00:04:37,400 --> 00:04:41,200
Y will basically set those to be like 10 pixels in or something, just

114
00:04:41,200 --> 00:04:42,500
to leave a little gutter there.

115
00:04:43,000 --> 00:04:47,200
So stretch TI B is the function that we were calling stretch GI B.

116
00:04:48,000 --> 00:04:48,300
That we

117
00:04:48,400 --> 00:04:51,300
Calling to copy our bitmap to the screen.

118
00:04:51,600 --> 00:04:54,200
You can see that it's got an X and Y, dest in there.

119
00:04:54,400 --> 00:04:58,200
So, if I want to, I can go ahead and just set that offset X and offset

120
00:04:58,200 --> 00:04:59,300
Y in here.

121
00:04:59,500 --> 00:05:03,100
And then when I go ahead and compile that we should get a nice.

122
00:05:03,100 --> 00:05:03,900
Yeah, there we go.

123
00:05:03,900 --> 00:05:06,200
So you can see, I just wanted to clean that up.

124
00:05:06,200 --> 00:05:09,100
So we can just kind of see what the actual display is.

125
00:05:09,200 --> 00:05:12,600
Seems like a good idea to me, and then we can go ahead and go from

126
00:05:12,600 --> 00:05:13,000
there.

127
00:05:13,100 --> 00:05:13,600
Okay.

128
00:05:14,200 --> 00:05:18,300
So what we did yesterday is we sort of made

129
00:05:18,500 --> 00:05:20,700
Little, our little yellow.

130
00:05:21,300 --> 00:05:22,100
Whatever you want to call this.

131
00:05:22,100 --> 00:05:24,800
Here are a little yellow rectangle and he kind of walks around.

132
00:05:25,600 --> 00:05:27,700
We were trying to verify as well.

133
00:05:27,700 --> 00:05:30,600
And I guess I'll double verify that just because we were mentioning it

134
00:05:30,600 --> 00:05:31,700
before verify.

135
00:05:31,700 --> 00:05:33,700
That we are getting 30 frames a second.

136
00:05:33,700 --> 00:05:35,800
So that we know that nothing weird is going on, pretty soon.

137
00:05:35,800 --> 00:05:38,000
Hopefully, we'll get a chance to write some debug code that.

138
00:05:38,000 --> 00:05:41,200
Makes it easier for us to always keep an eye on all this stuff right

139
00:05:41,200 --> 00:05:41,400
now.

140
00:05:41,400 --> 00:05:45,500
We have these kind of crazy printf that are going on here at that.

141
00:05:45,500 --> 00:05:48,300
We use to verify some things and I'd like to get out of the business.

142
00:05:48,400 --> 00:05:50,600
I love that but we're not quite there yet.

143
00:05:50,600 --> 00:05:52,500
What, you know, baby steps one thing at a time.

144
00:05:53,100 --> 00:05:57,000
But basically we verified that we're running at 30 frames a second and

145
00:05:57,000 --> 00:05:59,800
we verified that we could do some simple stuff like movie.

146
00:06:00,000 --> 00:06:00,500
Around.

147
00:06:00,600 --> 00:06:05,500
And so now what I want to do is I want to just take a little bit, a

148
00:06:05,500 --> 00:06:10,100
little go a little bit further and just say, let's get the basic thing

149
00:06:10,100 --> 00:06:14,300
working of let's have this this little yellow, our little yellow

150
00:06:14,300 --> 00:06:15,000
rectangle here.

151
00:06:15,200 --> 00:06:18,700
Let's have him actually bump into stuff so that when he hits the the

152
00:06:18,700 --> 00:06:21,500
edge of the tile map, right, let's have him stop.

153
00:06:21,500 --> 00:06:22,200
Right?

154
00:06:22,500 --> 00:06:25,800
So that he doesn't sort of collide with things and then let's also go

155
00:06:25,800 --> 00:06:28,300
ahead and make something so that when he exits out through one of

156
00:06:28,300 --> 00:06:29,000
these doors.

157
00:06:30,000 --> 00:06:32,600
He actually goes to the next tile map.

158
00:06:32,600 --> 00:06:35,400
That's a, that's a pretty basic set of things that we should do.

159
00:06:35,800 --> 00:06:38,000
And let's just, let's just go ahead and do that because I don't think

160
00:06:38,000 --> 00:06:42,600
that'll be too difficult to do so because those are sorts of things

161
00:06:42,600 --> 00:06:46,100
again, that we have to kind of, we have to kind of see how they work

162
00:06:46,100 --> 00:06:48,600
so that we can start to build an engine around these things.

163
00:06:49,500 --> 00:06:50,000
All right.

164
00:06:50,000 --> 00:06:53,400
So let's take a look at what we've got here in our code.

165
00:06:55,800 --> 00:06:58,700
Again, for the tile map, we just slammed in and I think I said this

166
00:06:58,700 --> 00:06:59,000
yesterday.

167
00:06:59,000 --> 00:06:59,700
Very clearly.

168
00:06:59,700 --> 00:07:01,500
We're just doing exploratory code here.

169
00:07:01,500 --> 00:07:03,800
So you want to just do the simplest possible thing.

170
00:07:04,100 --> 00:07:05,300
Don't overcomplicate anything.

171
00:07:05,300 --> 00:07:08,300
Don't think about code cleanliness or any of these other things.

172
00:07:08,400 --> 00:07:10,800
You just want to get the simplest thing working and then build up from

173
00:07:10,800 --> 00:07:11,100
there.

174
00:07:13,500 --> 00:07:14,000
Okay.

175
00:07:15,100 --> 00:07:19,700
So, what I want to do here is, I want to figure out some way when I

176
00:07:19,700 --> 00:07:20,800
move this guy, right?

177
00:07:20,800 --> 00:07:24,800
Because I've got a call here, this call right here.

178
00:07:25,500 --> 00:07:28,700
I essentially have something where I'm moving the player around, and I

179
00:07:28,700 --> 00:07:33,600
want to know whether when I do this move, I want to be able to say if

180
00:07:33,600 --> 00:07:35,200
the move is invalid, right?

181
00:07:35,200 --> 00:07:38,800
If I would have moved into an area of the town map, that was occupied.

182
00:07:39,100 --> 00:07:42,400
I want to disallow that move from happening, right?

183
00:07:42,400 --> 00:07:44,700
I do not want the, the player 2.

184
00:07:44,800 --> 00:07:47,900
Able to go somewhere that they shouldn't be able to go.

185
00:07:47,900 --> 00:07:51,800
And so in order to do that, I need to look at the tile map, obviously.

186
00:07:51,800 --> 00:07:52,200
So I'm gonna go ahead.

187
00:07:52,200 --> 00:07:54,000
Put that time up there.

188
00:07:54,000 --> 00:07:57,600
But really what I need to do is I need to know for a player X and a

189
00:07:57,600 --> 00:07:57,900
player.

190
00:07:57,900 --> 00:08:04,700
Why I need to know whether the player is, you know, where that x + y,

191
00:08:04,700 --> 00:08:06,200
is relative the tile map.

192
00:08:06,200 --> 00:08:09,200
Because if you think about what we've got, right, we've got this tile

193
00:08:09,200 --> 00:08:12,200
map on the screen where the tiles themselves.

194
00:08:12,200 --> 00:08:14,400
Occupy several pixels, right?

195
00:08:14,400 --> 00:08:14,800
So the

196
00:08:14,800 --> 00:08:18,400
The tiles in the pixels are not the same and so we have is we have a

197
00:08:18,400 --> 00:08:22,700
pixel location of the guy and we want to map that pixel location.

198
00:08:22,700 --> 00:08:26,200
Like let's say the pixel location is here and this is the tile map

199
00:08:26,200 --> 00:08:27,300
coordinates, right?

200
00:08:27,300 --> 00:08:28,700
Are something like this.

201
00:08:29,700 --> 00:08:34,900
You know, we need a way of saying for a particular pixel location of

202
00:08:34,900 --> 00:08:37,700
the guy or a player location of the guy, we need to map him into where

203
00:08:37,700 --> 00:08:40,100
he is in the tile map, right?

204
00:08:40,200 --> 00:08:41,900
So I want to be able to pick that and go.

205
00:08:41,900 --> 00:08:47,400
Oh, that's 33 in the tile map so that I can see if that location is

206
00:08:47,400 --> 00:08:49,100
occupied in the town map or not.

207
00:08:49,100 --> 00:08:50,600
And stop the guy from going there.

208
00:08:50,600 --> 00:08:51,200
Right?

209
00:08:51,700 --> 00:08:55,100
So let's go ahead and see if that's true by.

210
00:08:55,100 --> 00:08:59,100
Basically, let's go ahead and write something that will sort of do

211
00:08:59,100 --> 00:08:59,200
that.

212
00:08:59,300 --> 00:08:59,600
At check.

213
00:09:00,200 --> 00:09:03,200
Basically will say, okay.

214
00:09:04,500 --> 00:09:07,000
You know, let's see.

215
00:09:07,200 --> 00:09:12,800
I need to basically compute player tile X and I need to compute player

216
00:09:12,800 --> 00:09:14,000
tile line.

217
00:09:14,600 --> 00:09:17,700
And those are going to be computed off of these values.

218
00:09:17,700 --> 00:09:18,200
Now.

219
00:09:18,800 --> 00:09:22,400
I know and I got to move these up here to, I know that our tiles are

220
00:09:22,400 --> 00:09:25,900
this wide and this High, I know that they start here in here.

221
00:09:26,500 --> 00:09:29,000
So the first thing that I need to do, right?

222
00:09:29,000 --> 00:09:31,200
And I guess I should do this on the diagram, so it's clear.

223
00:09:31,900 --> 00:09:34,100
We know that right here, that

224
00:09:34,300 --> 00:09:38,400
Upper corner is given by upper left X and upper left y, right.

225
00:09:38,600 --> 00:09:41,800
So what I want to do is I want to turn whatever the players position

226
00:09:41,800 --> 00:09:45,200
is into something that's relative to that first.

227
00:09:45,300 --> 00:09:45,800
Right?

228
00:09:45,900 --> 00:09:49,900
I want to make it relative to the upper the minimum, the minimum X and

229
00:09:49,900 --> 00:09:51,400
Y of the actual map.

230
00:09:51,900 --> 00:09:55,700
So what I want to do is, I want to subtract whatever their position is

231
00:09:56,000 --> 00:09:59,900
from this position because that will give me the distance along X that

232
00:09:59,900 --> 00:10:01,800
I would have to go to get to where they are.

233
00:10:01,900 --> 00:10:03,600
Right, which is just like that.

234
00:10:03,700 --> 00:10:04,100
And then the

235
00:10:04,200 --> 00:10:06,800
Distance along y as well, that I have to go to get the word.

236
00:10:06,800 --> 00:10:09,700
They are so that that is what I want to do first.

237
00:10:09,700 --> 00:10:12,900
And again, those of you at home who know, all sorts of things like

238
00:10:12,900 --> 00:10:14,100
vector math and that sort of stuff.

239
00:10:14,100 --> 00:10:14,500
Don't worry.

240
00:10:14,500 --> 00:10:17,300
We are getting to all that stuff in coordinate systems, but I'm just

241
00:10:17,300 --> 00:10:19,600
trying to go through this from first principles so that everyone can

242
00:10:19,600 --> 00:10:23,100
see how we get to the final stuff that we want to do.

243
00:10:23,200 --> 00:10:26,500
So, so what I want to do is I want to make it relative to that.

244
00:10:26,500 --> 00:10:27,100
Right now.

245
00:10:27,100 --> 00:10:28,900
It's relative to the screen, right?

246
00:10:29,300 --> 00:10:34,100
We're talking about drawing the player at player X and player, why?

247
00:10:34,300 --> 00:10:37,200
You remember, we computed where we were going to draw them, we compute

248
00:10:37,200 --> 00:10:37,700
it off this.

249
00:10:37,700 --> 00:10:41,000
So these are basically pixels but we can't use pixels.

250
00:10:41,000 --> 00:10:42,400
We need to use map coordinates.

251
00:10:42,400 --> 00:10:45,700
And so the first thing is to make it relative to the to the origin of

252
00:10:45,700 --> 00:10:46,800
the map, right?

253
00:10:47,000 --> 00:10:47,300
Okay.

254
00:10:47,300 --> 00:10:52,900
So we do that we say let's go ahead and subtract those upper that

255
00:10:52,900 --> 00:10:56,800
position appear again upper left X upper left y right.

256
00:10:56,800 --> 00:11:02,000
So I'm going to go ahead and subtract upper left X upper left Y and

257
00:11:02,000 --> 00:11:04,100
that will give me something relative to the

258
00:11:04,200 --> 00:11:05,600
The corner of the tile map.

259
00:11:05,600 --> 00:11:08,500
Then what I want to do is know which of these buckets.

260
00:11:08,500 --> 00:11:10,500
It falls into tits, fall into the first bucket.

261
00:11:10,500 --> 00:11:12,300
Second bucket, third bucket, right?

262
00:11:13,000 --> 00:11:15,300
And that is just a simple divided, right?

263
00:11:15,300 --> 00:11:19,800
If you imagine that this, this right here, right is the tile with each

264
00:11:19,800 --> 00:11:21,200
one of these is one tile with.

265
00:11:21,400 --> 00:11:24,500
If I want to know how many tiles over I am.

266
00:11:24,500 --> 00:11:28,100
I just have to Tech take his x-coordinate and divide it by that tile

267
00:11:28,100 --> 00:11:31,800
with and it'll tell me one, two, three, four, right?

268
00:11:31,800 --> 00:11:32,500
If he's there.

269
00:11:34,000 --> 00:11:36,900
But it's going to give me a fractional value.

270
00:11:36,900 --> 00:11:37,400
Right?

271
00:11:37,400 --> 00:11:41,500
So, basically, if I, if I divided this, if I divide to, where he is

272
00:11:41,500 --> 00:11:45,600
here, by the tile with, I would get some value less than 1, right?

273
00:11:45,600 --> 00:11:47,600
Because it doesn't hit one till it gets to here.

274
00:11:47,600 --> 00:11:48,100
Right?

275
00:11:48,300 --> 00:11:52,000
So if I were to truncate that value, remember, we talked about

276
00:11:52,000 --> 00:11:52,600
truncation.

277
00:11:52,600 --> 00:11:54,100
We're on the number line, right?

278
00:11:54,100 --> 00:11:57,100
You've got wherever you are on the number line, you go back to the to

279
00:11:57,100 --> 00:11:58,800
the next lowest number, right?

280
00:11:59,400 --> 00:11:59,800
If I were to

281
00:12:00,100 --> 00:12:03,200
Kate that number, that would give me the correct tile slot 0.

282
00:12:03,800 --> 00:12:08,100
If I go over here, right, then if I were to truncate that it would

283
00:12:08,100 --> 00:12:09,400
drop me down to one.

284
00:12:09,400 --> 00:12:11,400
As soon as I go over this boundary.

285
00:12:11,900 --> 00:12:14,700
I'll start dropping back to to as soon as I go over this boundary

286
00:12:14,700 --> 00:12:17,800
also, driving back to 3 and as soon as I go over this boundary, I'll

287
00:12:17,900 --> 00:12:19,200
go to for, right.

288
00:12:19,600 --> 00:12:22,600
So all I really need to do is divide by the tile with and then

289
00:12:22,600 --> 00:12:26,600
truncate and I get Which slot I go into and I can do that for x and I

290
00:12:26,600 --> 00:12:28,800
can do that for y and figure out where my time at.

291
00:12:28,800 --> 00:12:29,800
I am, right?

292
00:12:30,400 --> 00:12:32,100
so if I divide by the tile with,

293
00:12:33,400 --> 00:12:36,100
And I divide by the tile height here, right?

294
00:12:36,100 --> 00:12:38,800
Which happened to be the same, but I'm going to do the math as if they

295
00:12:38,800 --> 00:12:41,400
weren't just so we can always decide to change the rectangular Tiles

296
00:12:41,400 --> 00:12:46,100
at some point if they really wanted to write oopsie Max little

297
00:12:46,100 --> 00:12:49,400
overzealous there and then I go ahead and do that truncation.

298
00:12:49,400 --> 00:12:51,000
So I'm going to go ahead and do the truncation here.

299
00:12:51,000 --> 00:12:55,300
So we'll we'll go ahead and truncate now, you notice I'm not rounding

300
00:12:55,700 --> 00:12:56,200
right?

301
00:12:56,200 --> 00:12:57,400
I am not doing a round.

302
00:12:57,400 --> 00:13:00,500
I'm doing a truncation and one thing that we might do to, you know,

303
00:13:00,500 --> 00:13:01,500
this might be nice.

304
00:13:01,600 --> 00:13:02,500
Let's go ahead and do this.

305
00:13:02,800 --> 00:13:05,600
Let's call truncate real 32, right?

306
00:13:05,700 --> 00:13:09,500
And that truncation, just does this exact thing without the rounding,

307
00:13:09,700 --> 00:13:10,200
right?

308
00:13:10,900 --> 00:13:11,500
Makes sense.

309
00:13:12,000 --> 00:13:15,200
So I'm going to go ahead and and and actually and do it that way.

310
00:13:15,200 --> 00:13:16,100
These should all be in line.

311
00:13:16,100 --> 00:13:16,500
By the way.

312
00:13:16,500 --> 00:13:19,500
There's no real reason not to be Such trivial functions.

313
00:13:19,700 --> 00:13:22,300
So I'm going to make a truncate which just basically does that and

314
00:13:22,300 --> 00:13:23,700
that way we can see in our code.

315
00:13:23,700 --> 00:13:26,700
It's so instead of looking like a cast, it'll it'll give a little more

316
00:13:26,700 --> 00:13:28,900
information to the person who's reading it.

317
00:13:28,900 --> 00:13:31,100
So they know that we were trying to do something very specific.

318
00:13:31,100 --> 00:13:32,500
We're trying to truncate, we're trying to

319
00:13:32,600 --> 00:13:35,400
Location here right now.

320
00:13:35,400 --> 00:13:38,900
We've got just a bunch of things to discuss here again, but I have to

321
00:13:38,900 --> 00:13:40,300
kind of meet her them out over time.

322
00:13:40,700 --> 00:13:42,200
So let's just focus on this for now.

323
00:13:42,400 --> 00:13:44,700
So maybe this divide this will actually give me the title X.

324
00:13:44,700 --> 00:13:47,800
Tau y that I was looking for and from there.

325
00:13:48,300 --> 00:13:52,000
I can now look up into this tile map thing and see.

326
00:13:52,000 --> 00:13:56,200
Now there's a problem obviously, which is that I don't actually know

327
00:13:56,200 --> 00:13:57,900
whether it's going to be valid or not.

328
00:13:57,900 --> 00:13:58,200
Right?

329
00:13:58,200 --> 00:14:01,200
I don't actually know whether I'm inside because I could have had any

330
00:14:01,200 --> 00:14:01,700
values.

331
00:14:01,700 --> 00:14:02,500
I might be outside.

332
00:14:02,700 --> 00:14:03,500
The tile map.

333
00:14:04,000 --> 00:14:06,900
So, one thing that I probably should do is I should start off by

334
00:14:06,900 --> 00:14:13,300
saying, okay is and you know, what, we also are trying to do a check

335
00:14:13,300 --> 00:14:13,600
here.

336
00:14:13,600 --> 00:14:17,100
So let's let's I want to do this.

337
00:14:18,100 --> 00:14:18,800
There we go.

338
00:14:19,200 --> 00:14:19,700
Okay.

339
00:14:20,000 --> 00:14:22,900
What I want to do is basically compute a speculative value.

340
00:14:22,900 --> 00:14:28,200
So, whatever, the new player Y, and the new player X would be right.

341
00:14:28,200 --> 00:14:32,000
I want to do those, and then check those before.

342
00:14:32,000 --> 00:14:32,500
I actually

343
00:14:32,600 --> 00:14:32,800
Really?

344
00:14:32,800 --> 00:14:35,600
Commit them to be the new player location, right?

345
00:14:36,200 --> 00:14:37,900
So I'm going to go ahead and compute those.

346
00:14:38,100 --> 00:14:39,900
I'm going to go ahead and check them.

347
00:14:40,100 --> 00:14:41,700
And so I'm going to be doing is valid.

348
00:14:41,700 --> 00:14:44,000
I'm going to assume it's false and then I'm going to say if the player

349
00:14:44,000 --> 00:14:49,300
tile X is greater than or equal to whatever so 0 and less than or

350
00:14:49,300 --> 00:14:50,900
equal to whatever the array size is here.

351
00:14:50,900 --> 00:14:54,100
So our tile Map size was currently.

352
00:14:54,100 --> 00:14:56,500
And, you know, I could go ahead and go ahead and do this right here

353
00:14:56,500 --> 00:14:59,800
tile map count.

354
00:15:00,000 --> 00:15:06,200
X is 17 and tilemap count Y is 9, right.

355
00:15:06,200 --> 00:15:07,800
I can go ahead and make costumes for those.

356
00:15:08,200 --> 00:15:13,900
So here's the town that count X Loops X and here is the tile map.

357
00:15:14,400 --> 00:15:14,700
Count.

358
00:15:14,700 --> 00:15:16,300
Why there we go.

359
00:15:17,300 --> 00:15:19,800
And so I'm going to go ahead and check to make sure that I'm within

360
00:15:19,800 --> 00:15:20,900
those boundaries, right?

361
00:15:20,900 --> 00:15:23,100
So I'm going to say if we're greater than 0.

362
00:15:23,100 --> 00:15:28,400
So we're not off the left side basically and the player tile X is less

363
00:15:28,400 --> 00:15:29,900
than the time.

364
00:15:30,000 --> 00:15:34,100
I'll map count X and so I've got UPS.

365
00:15:35,300 --> 00:15:36,000
What's going on there?

366
00:15:36,500 --> 00:15:37,700
What's going on there?

367
00:15:38,300 --> 00:15:39,100
What did I do?

368
00:15:39,200 --> 00:15:42,500
Why are we not matching emacs?

369
00:15:43,700 --> 00:15:45,700
Never ceases to disappoint these days.

370
00:15:45,700 --> 00:15:46,100
Okay.

371
00:15:46,100 --> 00:15:47,000
That was just an e Max.

372
00:15:47,300 --> 00:15:50,400
It's got bugs and how it thinks that you Opitz things are opening a

373
00:15:50,400 --> 00:15:52,500
template and then it's just it's it's awful.

374
00:15:52,600 --> 00:15:53,500
Anyway, okay.

375
00:15:55,100 --> 00:15:58,800
So there we go player Tau y less than tilemap count.

376
00:15:58,900 --> 00:16:00,200
Y, and there we go.

377
00:16:00,200 --> 00:16:03,500
So we're just going to see if these are within bounds, right?

378
00:16:04,200 --> 00:16:07,900
And if they're within the bounds that we're trying to that of our tile

379
00:16:07,900 --> 00:16:11,400
map, we can now look up in the tile map and see whether the tile map

380
00:16:11,400 --> 00:16:12,700
is occupied, right?

381
00:16:12,700 --> 00:16:13,400
We can see whether there's

382
00:16:13,500 --> 00:16:15,100
One or a zero in there, right?

383
00:16:15,700 --> 00:16:17,300
So is valid right?

384
00:16:17,300 --> 00:16:19,600
If that well we can just do it explicitly to first, we can say,

385
00:16:19,600 --> 00:16:26,500
tilemap value is going to be equal to our tile map right here and

386
00:16:26,500 --> 00:16:28,700
using the lookup that we actually just computed.

387
00:16:28,700 --> 00:16:32,700
So player, Tau y comes first because again, these are in sort of

388
00:16:32,700 --> 00:16:33,400
inverse order.

389
00:16:33,400 --> 00:16:37,700
You look up the way that sees irate syntax is is this is the the least

390
00:16:37,700 --> 00:16:42,200
significant part and this is the most significant part of the sort of

391
00:16:42,200 --> 00:16:43,300
the indexing into the race.

392
00:16:43,400 --> 00:16:45,800
So we want to look this way for X.

393
00:16:45,800 --> 00:16:46,400
That's this.

394
00:16:46,400 --> 00:16:47,400
This is X here.

395
00:16:47,700 --> 00:16:49,000
And this is why right?

396
00:16:49,300 --> 00:16:55,000
Okay, so when we actually get that, tilemap value out, whether or not,

397
00:16:55,000 --> 00:16:58,800
we can move, there is essentially equal to whether or not that tilemap

398
00:16:58,800 --> 00:17:00,400
value equals 0.

399
00:17:00,400 --> 00:17:03,900
Because 0 means is an occupied and that we can move there right now.

400
00:17:03,900 --> 00:17:06,200
We've got other things that's not going to be great because well,

401
00:17:06,200 --> 00:17:06,700
there's reasons.

402
00:17:06,700 --> 00:17:07,400
We'll see exactly.

403
00:17:07,400 --> 00:17:09,500
So we're going to probably want to do a little more than that, but for

404
00:17:09,500 --> 00:17:10,500
the moment

405
00:17:13,200 --> 00:17:18,599
If that's if that works, as long as it's valid, we can go ahead and

406
00:17:18,599 --> 00:17:21,700
accept those positions like this.

407
00:17:21,900 --> 00:17:22,400
Right?

408
00:17:22,400 --> 00:17:23,700
So let's go ahead and do that.

409
00:17:23,700 --> 00:17:26,400
Alright, and so we do have one problem right now, which is that our

410
00:17:26,400 --> 00:17:31,900
guy is not himself actually in the map, right?

411
00:17:31,900 --> 00:17:33,000
He starts way out there.

412
00:17:33,000 --> 00:17:36,700
So we kind of need to move him over here somewhere, right?

413
00:17:36,800 --> 00:17:41,600
So during initialization, you know, basically,

414
00:17:43,400 --> 00:17:45,400
In here, right?

415
00:17:45,500 --> 00:17:46,200
Nice reply, move.

416
00:17:46,200 --> 00:17:47,300
This all the way up to the top.

417
00:17:48,100 --> 00:17:52,400
So during initialization, when we actually go and say, the game is

418
00:17:52,400 --> 00:17:53,100
starting.

419
00:17:53,600 --> 00:17:58,300
What I want to do is I want to go into the game State and set this

420
00:17:58,300 --> 00:17:59,200
player ex-player.

421
00:17:59,200 --> 00:17:59,800
Why here?

422
00:18:00,000 --> 00:18:03,500
Me first, create it to be something that's going to be at least

423
00:18:03,500 --> 00:18:05,900
somewhat useful, that's going to be a value.

424
00:18:05,900 --> 00:18:09,100
That's not already standing in some place invalid.

425
00:18:09,200 --> 00:18:10,900
I'm just picking this number out of a hat.

426
00:18:11,000 --> 00:18:12,600
I don't know if it's actually going to be right.

427
00:18:12,600 --> 00:18:13,500
No, it's not.

428
00:18:13,800 --> 00:18:15,400
So let's try a little bit further.

429
00:18:15,700 --> 00:18:16,900
Since this is initialization.

430
00:18:16,900 --> 00:18:18,200
I can't use the restart trick here.

431
00:18:18,200 --> 00:18:18,700
Unfortunately.

432
00:18:18,700 --> 00:18:19,000
Okay.

433
00:18:19,000 --> 00:18:19,600
So there we go.

434
00:18:20,300 --> 00:18:24,000
So now the guy moves around and basically, you can kind of see that I

435
00:18:24,000 --> 00:18:26,100
can't get into, right.

436
00:18:26,100 --> 00:18:29,900
I can't, I can't get into things that are blocked but

437
00:18:30,000 --> 00:18:34,400
But like I said, there's some some weirdness is there such as the fact

438
00:18:34,400 --> 00:18:34,700
that?

439
00:18:35,200 --> 00:18:35,400
Well.

440
00:18:35,400 --> 00:18:35,600
Okay.

441
00:18:35,600 --> 00:18:38,300
So some of them are by Design like we said before, on the previous

442
00:18:38,300 --> 00:18:41,400
frame, we want to be able to Eclipse things when we're standing on

443
00:18:41,400 --> 00:18:43,700
them because we imagine that the guy will be a little sprite here and

444
00:18:43,700 --> 00:18:46,500
connect an eclipse kind of what's in front of it.

445
00:18:46,500 --> 00:18:47,900
So that's actually not too bad.

446
00:18:48,600 --> 00:18:52,400
But what we do want to do as well as we want to stop the guy from

447
00:18:52,400 --> 00:18:54,100
going into things like like that.

448
00:18:54,100 --> 00:18:56,700
We want to take into account his with because right now we're only

449
00:18:56,700 --> 00:18:57,800
checking the point.

450
00:18:57,900 --> 00:18:59,600
That's actually the player location.

451
00:18:59,600 --> 00:18:59,900
We're only

452
00:19:00,000 --> 00:19:02,600
Checking to see if that is moving into a tile.

453
00:19:03,300 --> 00:19:05,900
Invalid, that that's, that would be invalid.

454
00:19:05,900 --> 00:19:10,900
So he can go all the way like halfway in to something without getting

455
00:19:10,900 --> 00:19:11,500
stopped.

456
00:19:11,600 --> 00:19:14,400
So we want to do is actually check that Outer Edge, right?

457
00:19:14,500 --> 00:19:18,300
We want to check to make sure that the outer edge is is not going to

458
00:19:18,300 --> 00:19:19,300
hit something, right.

459
00:19:20,100 --> 00:19:22,300
So there's a couple ways that we could, whoa.

460
00:19:25,500 --> 00:19:26,800
Oh the flashing.

461
00:19:26,900 --> 00:19:28,100
Yeah, so that's pretty interesting.

462
00:19:28,100 --> 00:19:29,100
So we're going to have that.

463
00:19:29,100 --> 00:19:31,800
Yeah, ma'am, wonderful have to deal with that a little bit.

464
00:19:32,100 --> 00:19:34,100
So basically, I don't know if you can see that.

465
00:19:34,100 --> 00:19:37,400
We're kind of getting some flashing there because of the Pat, but

466
00:19:37,400 --> 00:19:41,800
Blackness thing that I put in there this this this Pat but Blackness

467
00:19:42,100 --> 00:19:46,200
this thing because that happens before the stretch GI B windows will.

468
00:19:46,200 --> 00:19:49,200
Sometimes if the page flood happened in between here, you'll just see

469
00:19:49,200 --> 00:19:51,000
the Blackness before the stretch divots.

470
00:19:51,600 --> 00:19:54,400
So we kind of want to only actually clear.

471
00:19:55,200 --> 00:19:59,800
The parts of the window that we're not drawing to instead of instead

472
00:19:59,800 --> 00:20:00,400
of doing this.

473
00:20:00,400 --> 00:20:05,900
So we could set the clip region or we could clear the different pieces

474
00:20:05,900 --> 00:20:10,100
of it, you know, stuff that I really don't want to have to do right

475
00:20:10,100 --> 00:20:12,500
now because it's so irrelevant but let's go ahead and do it anyway.

476
00:20:12,500 --> 00:20:17,500
So if I wanted to clear the four rectangles that would clear out the

477
00:20:17,500 --> 00:20:18,800
the region that we're at.

478
00:20:18,900 --> 00:20:21,700
You could imagine just saying, you know, I don't know if you know what

479
00:20:21,700 --> 00:20:24,100
I'm saying here, but if we just cleared these

480
00:20:24,700 --> 00:20:28,000
Has basically instead of actually clearing the whole thing.

481
00:20:28,400 --> 00:20:31,000
That's a pretty quick way to just get around that problem.

482
00:20:31,100 --> 00:20:36,000
So if we did 002 window height to offset y, basically that would clear

483
00:20:36,000 --> 00:20:36,800
that Top.

484
00:20:38,100 --> 00:20:42,000
This would clear that top piece and then the bottom piece, of course,

485
00:20:42,700 --> 00:20:51,700
would be would be offset y, plus buffer height and it would be the

486
00:20:51,700 --> 00:20:54,400
window width and

487
00:20:54,800 --> 00:20:57,600
Whatever this is- the window height, although we could actually just

488
00:20:57,600 --> 00:20:59,800
past the window height because windows will clip it for us.

489
00:21:00,000 --> 00:21:01,600
They're so that's fine.

490
00:21:02,200 --> 00:21:05,100
And then here, we have to clear, the gutter, on the left side.

491
00:21:05,100 --> 00:21:05,300
Again.

492
00:21:05,300 --> 00:21:10,500
We don't care if we overwrite anything, so b00 to window height and

493
00:21:10,500 --> 00:21:19,800
offset X and then this will be offset X Plus buffer width and that

494
00:21:19,800 --> 00:21:21,300
would clear all the way to their.

495
00:21:21,300 --> 00:21:21,600
Okay.

496
00:21:21,600 --> 00:21:25,800
So so this is just complete nonsense that I've made here.

497
00:21:26,100 --> 00:21:26,700
Is that right?

498
00:21:26,700 --> 00:21:27,200
Yeah.

499
00:21:27,200 --> 00:21:27,900
Yeah.

500
00:21:29,000 --> 00:21:29,900
I think that's

501
00:21:30,000 --> 00:21:30,400
Correct.

502
00:21:30,400 --> 00:21:33,600
I don't actually know window with is not a member, right?

503
00:21:33,600 --> 00:21:34,400
It's just right.

504
00:21:35,800 --> 00:21:39,300
So, yeah, so all I was trying to do there and I think I did it right

505
00:21:39,800 --> 00:21:40,000
again.

506
00:21:40,000 --> 00:21:42,300
I don't even want to go into detail because that was just Randomness.

507
00:21:42,800 --> 00:21:44,100
So, yeah, that looks right.

508
00:21:44,100 --> 00:21:49,200
So, all I try to do is just basically clear this rectangle here, this

509
00:21:49,200 --> 00:21:53,700
rectangle here, this rectangle here, and this rectangle here, right

510
00:21:53,700 --> 00:21:53,900
in.

511
00:21:53,900 --> 00:21:57,000
So that we'd never overwrite this and get that annoying flashing that

512
00:21:57,000 --> 00:21:59,800
was literally all I just did, because it was going.

513
00:22:00,000 --> 00:22:01,500
I mean, so I decided to rid of it.

514
00:22:01,600 --> 00:22:02,100
All right.

515
00:22:02,200 --> 00:22:06,000
So anyway, we're in we're colliding with the tile map now and we just

516
00:22:06,000 --> 00:22:07,300
want to do a little bit better job.

517
00:22:07,300 --> 00:22:07,500
Again.

518
00:22:07,500 --> 00:22:08,400
We're going to have to work.

519
00:22:08,400 --> 00:22:10,400
We're going to have to do stuff, way better than what we're doing

520
00:22:10,400 --> 00:22:13,200
right now eventually, but again, just to sort of try and build up from

521
00:22:13,200 --> 00:22:14,000
first principles.

522
00:22:14,300 --> 00:22:17,100
I'm just showing you the stupidest possible thing that you could do,

523
00:22:17,200 --> 00:22:17,800
right?

524
00:22:18,900 --> 00:22:19,200
All right.

525
00:22:19,200 --> 00:22:22,600
So let's try and at least make it so that when we hit the edges that

526
00:22:22,600 --> 00:22:23,000
we stop.

527
00:22:23,000 --> 00:22:24,500
So what's the easiest way to do that?

528
00:22:24,500 --> 00:22:28,900
And and this is I'm hoping this leads kind of conveniently into what I

529
00:22:28,900 --> 00:22:29,800
wanted to talk about and I think

530
00:22:29,900 --> 00:22:33,100
Think it will as far as this issue is concerned.

531
00:22:33,300 --> 00:22:37,700
So if we start to look at this, right, what's a real easy way?

532
00:22:38,000 --> 00:22:39,700
If you think just think for a second?

533
00:22:39,800 --> 00:22:40,900
What's a real easy way?

534
00:22:40,900 --> 00:22:43,300
We could fix the problem that I was just talking about in.

535
00:22:43,300 --> 00:22:45,000
Let me go, I'll go ahead and bring this back up again.

536
00:22:45,000 --> 00:22:46,400
So, I'm talking about this problem.

537
00:22:46,500 --> 00:22:49,000
I've got this guy and he runs into the wall, right?

538
00:22:49,000 --> 00:22:52,600
And I want to stop him here, but he runs in that far, right?

539
00:22:52,700 --> 00:22:55,200
And the same happens on the other side, right?

540
00:22:56,000 --> 00:22:59,400
So, what's an easy way that I could make it so that that stopped

541
00:22:59,400 --> 00:22:59,900
happening.

542
00:23:00,200 --> 00:23:00,700
Right?

543
00:23:00,700 --> 00:23:02,700
What could I do to prevent that?

544
00:23:02,700 --> 00:23:06,200
Well, one really simple thing we could do is to just check because we

545
00:23:06,200 --> 00:23:09,400
already wrote the code to check up one point against the tile map.

546
00:23:09,400 --> 00:23:11,900
I could just check the two other points, right?

547
00:23:12,200 --> 00:23:14,800
So, that'd be real easy to do except for the fact that I got a cut and

548
00:23:14,800 --> 00:23:16,100
paste all this code, right?

549
00:23:16,100 --> 00:23:18,200
I got a cut and paste this whole thing.

550
00:23:18,800 --> 00:23:22,900
So it would be nice right to pull this out into a thing that just

551
00:23:22,900 --> 00:23:25,300
checks the point in the tile map, right?

552
00:23:25,300 --> 00:23:25,600
That would be

553
00:23:25,800 --> 00:23:26,300
Be handy.

554
00:23:26,800 --> 00:23:30,400
So that seems like a pretty good compression to make here, just to

555
00:23:30,400 --> 00:23:31,200
start with.

556
00:23:31,200 --> 00:23:33,500
It seems pretty obvious, if I want to check multiple points.

557
00:23:33,600 --> 00:23:36,100
Let's just make a function, that returns.

558
00:23:36,100 --> 00:23:38,300
This is valid for the point.

559
00:23:38,400 --> 00:23:38,900
Right?

560
00:23:39,500 --> 00:23:40,700
So let's go ahead and do that.

561
00:23:40,800 --> 00:23:42,100
And let's see where that leads us.

562
00:23:42,100 --> 00:23:42,600
Right?

563
00:23:42,700 --> 00:23:44,500
So, I'm going to go ahead and make a function here.

564
00:23:45,000 --> 00:23:47,400
That just says, is point.

565
00:23:47,500 --> 00:23:49,900
Let's say occupied or something like that, right?

566
00:23:49,900 --> 00:23:50,300
I don't know.

567
00:23:50,400 --> 00:23:51,100
Something like this.

568
00:23:51,800 --> 00:23:55,400
So for maybe is, is, is

569
00:23:55,700 --> 00:23:58,100
I'll map Point empty, right?

570
00:23:59,600 --> 00:23:59,800
so,

571
00:24:00,000 --> 00:24:01,800
I want to do is I want to say, all right.

572
00:24:02,300 --> 00:24:03,600
I'm going to take in now.

573
00:24:03,600 --> 00:24:07,200
Whatever this X and Y is, so it's a test X and a test.

574
00:24:07,200 --> 00:24:08,300
Why, right?

575
00:24:08,300 --> 00:24:11,700
I'm going to take those in test decks and a test wide.

576
00:24:11,700 --> 00:24:16,700
And I want to return whether or not it was it was empty or not, right?

577
00:24:16,800 --> 00:24:17,900
So is it empty?

578
00:24:18,000 --> 00:24:22,400
If it's empty, I'm going to say that it's not empty and then we'll see

579
00:24:22,400 --> 00:24:25,500
if the tile map value equals 0, then we'll say that it is empty.

580
00:24:25,500 --> 00:24:25,700
Right?

581
00:24:25,700 --> 00:24:28,100
And I'm going to return whether or not it's empty.

582
00:24:28,200 --> 00:24:28,500
Right?

583
00:24:28,500 --> 00:24:29,200
Does that make sense?

584
00:24:29,200 --> 00:24:29,900
Pretty pretty.

585
00:24:30,000 --> 00:24:32,500
Eight forward there so you can see if I compile.

586
00:24:32,500 --> 00:24:32,700
This.

587
00:24:32,700 --> 00:24:33,600
We've got problems, though.

588
00:24:33,600 --> 00:24:36,100
Obvious rather to the relatively obvious problems.

589
00:24:36,700 --> 00:24:39,600
And that is that there's a bunch of data about the tile map.

590
00:24:39,600 --> 00:24:42,100
And that data isn't really easy to pass.

591
00:24:42,100 --> 00:24:45,800
You're like, let's say I come, I'm going to need the upper left, upper

592
00:24:46,800 --> 00:24:49,900
the upper left X, the upper-left why I'm going to need the width and

593
00:24:49,900 --> 00:24:50,900
the height, the tilemap.

594
00:24:50,900 --> 00:24:52,100
I mean, the time app itself.

595
00:24:52,500 --> 00:24:55,500
So you can start a you can sort of start to see this is an indication

596
00:24:55,500 --> 00:24:55,700
to you.

597
00:24:55,700 --> 00:24:55,900
Again.

598
00:24:55,900 --> 00:24:59,700
We're talking about archives is an indication to you of what things

599
00:24:59,700 --> 00:24:59,800
go.

600
00:25:00,100 --> 00:25:05,100
Together, in terms of what you will want to pass around, right?

601
00:25:06,100 --> 00:25:09,600
And although in this case, maybe you could have guessed these things.

602
00:25:12,900 --> 00:25:17,300
It is always easier and always more accurate to let them come about in

603
00:25:17,300 --> 00:25:19,600
exactly the way that they just did.

604
00:25:19,700 --> 00:25:20,300
Right?

605
00:25:20,700 --> 00:25:22,500
Okay, no longer.

606
00:25:22,500 --> 00:25:23,900
We don't have to do any guesswork.

607
00:25:23,900 --> 00:25:27,500
We basically know that functions like this are going to either going

608
00:25:27,500 --> 00:25:33,700
to do math on the tile map, right are going to need these exact things

609
00:25:33,700 --> 00:25:36,000
because they won't be able to do any math without it.

610
00:25:36,000 --> 00:25:37,100
They're going to need a well.

611
00:25:37,100 --> 00:25:37,400
You know what?

612
00:25:37,400 --> 00:25:38,900
I've got them to find right here, right?

613
00:25:38,900 --> 00:25:41,800
They're going to need all that stuff, the upper left.

614
00:25:41,900 --> 00:25:42,300
Upper left.

615
00:25:42,300 --> 00:25:44,200
Why the tile with the tilite, right?

616
00:25:44,200 --> 00:25:45,100
They're going to need that.

617
00:25:46,000 --> 00:25:50,500
So let's just go ahead and say that that's part of some structure that

618
00:25:50,500 --> 00:25:51,900
we call a tile map.

619
00:25:52,000 --> 00:25:53,600
Let's say we don't know what we're going to call it yet.

620
00:25:53,600 --> 00:25:54,700
But let's call it that for now.

621
00:25:55,000 --> 00:25:58,700
So if we pass the tile map, that just makes it convenient for this

622
00:25:58,700 --> 00:26:02,500
thing to get access to all of the aspects of atomic that it's going to

623
00:26:02,500 --> 00:26:04,600
need to do its job, right?

624
00:26:04,600 --> 00:26:07,100
And so again, this is just an organic way to figure that out.

625
00:26:07,100 --> 00:26:08,100
So we don't pre-plan.

626
00:26:08,100 --> 00:26:11,700
We don't guess we know and knowing is always better than guessing.

627
00:26:12,400 --> 00:26:16,500
So we go ahead and we do that and let's go ahead and compile that you

628
00:26:16,500 --> 00:26:17,800
can see we need some more data here.

629
00:26:17,800 --> 00:26:19,100
We need the count, right?

630
00:26:19,100 --> 00:26:20,800
We need so we need something in here.

631
00:26:21,200 --> 00:26:27,900
That'll tell us basically the pal map tile map.

632
00:26:27,900 --> 00:26:28,200
Count.

633
00:26:28,200 --> 00:26:30,600
Let's call it Dimension Dimension X.

634
00:26:31,100 --> 00:26:31,700
Tilemap.

635
00:26:31,700 --> 00:26:33,300
Well now it's count, taxes better.

636
00:26:33,300 --> 00:26:33,700
So we know.

637
00:26:33,700 --> 00:26:36,000
Yeah, tilemap count why?

638
00:26:36,000 --> 00:26:37,400
Let's just have those two in there.

639
00:26:37,400 --> 00:26:38,000
Right?

640
00:26:38,200 --> 00:26:41,700
And so then we'll change these tile map like that.

641
00:26:41,800 --> 00:26:44,700
I'll nap count X and this will be tilemap.

642
00:26:45,600 --> 00:26:46,200
Well, and you know what?

643
00:26:46,200 --> 00:26:49,100
We could probably get rid of the word tile map because it's already in

644
00:26:49,100 --> 00:26:50,200
there, right?

645
00:26:51,500 --> 00:26:52,700
So we can just do count X count.

646
00:26:52,700 --> 00:26:53,000
Why?

647
00:26:53,000 --> 00:26:53,600
There we go.

648
00:26:53,700 --> 00:26:57,100
And now we have a kind of nicely functioning thing.

649
00:26:57,100 --> 00:26:59,400
We just don't know where to get the actual tile map data from

650
00:27:00,000 --> 00:27:01,800
Well, we can totally do that.

651
00:27:02,100 --> 00:27:05,900
We can totally put the tile map in here, but we have a problem, which

652
00:27:05,900 --> 00:27:08,700
is that technically, if we want this thing to be relatively flexible

653
00:27:08,700 --> 00:27:09,400
and not care.

654
00:27:09,400 --> 00:27:13,200
What size, the town map is we want to probably make it so that it

655
00:27:13,200 --> 00:27:17,700
doesn't hard-code in see what the width and height are, so we kind of

656
00:27:17,700 --> 00:27:20,500
need to turn this into the same accessor like we were doing up here

657
00:27:20,500 --> 00:27:21,700
with our pixels, right?

658
00:27:21,700 --> 00:27:24,300
Where we do a bite for Pixel where we do this kind of thing where we

659
00:27:24,300 --> 00:27:28,500
do math to unpack the X&Y basically, to figure out where in the town

660
00:27:28,500 --> 00:27:28,700
map.

661
00:27:28,700 --> 00:27:29,700
We are with an X and A Y.

662
00:27:29,700 --> 00:27:29,800
Now,

663
00:27:30,000 --> 00:27:31,100
It's the same exact math.

664
00:27:31,100 --> 00:27:32,500
We use before, right?

665
00:27:32,500 --> 00:27:37,500
If we have that tilemap, and this is, I guess is what we want to call

666
00:27:37,500 --> 00:27:38,200
these the tiles.

667
00:27:38,200 --> 00:27:41,600
I suppose, if we go in the tile map, when we access the tiles, we want

668
00:27:41,600 --> 00:27:42,400
to do the same axis.

669
00:27:42,400 --> 00:27:43,200
We were doing before.

670
00:27:43,700 --> 00:27:47,600
We know that the X just works the way that it that it always does it

671
00:27:47,600 --> 00:27:48,600
steps one through.

672
00:27:48,600 --> 00:27:52,400
So we can just add the X and because every, for every X tile you go,

673
00:27:52,400 --> 00:27:57,000
you're going to go over one entry in the tile map table, but since we

674
00:27:57,000 --> 00:27:59,800
are now basically turning a 2d thing into a 1D thing.

675
00:28:00,600 --> 00:28:01,000
That?

676
00:28:01,000 --> 00:28:05,800
Why, every time you go up one and why you're going to have to advance

677
00:28:05,800 --> 00:28:09,300
by the entire tilemap count in X, right?

678
00:28:09,300 --> 00:28:11,600
And I'm going to diagram this out for you in a second, but I want to

679
00:28:11,600 --> 00:28:12,600
make sure that compiles first.

680
00:28:12,600 --> 00:28:13,200
So there you go.

681
00:28:13,600 --> 00:28:14,100
Okay.

682
00:28:14,500 --> 00:28:19,000
And so, what I'm talking about here is what we did in the

683
00:28:20,500 --> 00:28:21,100
excuse me.

684
00:28:22,300 --> 00:28:23,000
Let's see here.

685
00:28:23,500 --> 00:28:26,000
Let me go ahead and delete this guy.

686
00:28:26,100 --> 00:28:26,700
There we go.

687
00:28:27,600 --> 00:28:33,400
So what we did right is originally, we said we wanted tilemap, and we

688
00:28:33,400 --> 00:28:37,500
had sort of a height and a width count.

689
00:28:37,500 --> 00:28:38,000
Right?

690
00:28:38,100 --> 00:28:41,100
And we had see basically do the addressing for us.

691
00:28:41,200 --> 00:28:41,600
Right?

692
00:28:41,700 --> 00:28:45,000
So we would fill in a why when we want to access it, and we'd fill in

693
00:28:45,000 --> 00:28:48,700
an X, and we would just get out an entry in the tile map, right?

694
00:28:48,800 --> 00:28:50,300
And so, we just

695
00:28:50,500 --> 00:28:50,800
Lives.

696
00:28:50,800 --> 00:28:56,500
This as a 2d thing right where we would plug in an x value that goes

697
00:28:56,500 --> 00:28:58,800
this way and we plug in a y value.

698
00:28:58,800 --> 00:29:01,700
That goes this way and that was our conceptualization of it and see

699
00:29:01,700 --> 00:29:04,800
did it for us but we need to do is we needed to say?

700
00:29:04,800 --> 00:29:05,600
All right.

701
00:29:05,600 --> 00:29:08,200
We're no longer going to declare what the size of it is.

702
00:29:08,200 --> 00:29:10,700
We're just going to have a pointer so it could be any size we want

703
00:29:10,700 --> 00:29:11,300
later on.

704
00:29:12,400 --> 00:29:13,600
In order to do that.

705
00:29:13,600 --> 00:29:17,200
We need to basically have a way to do our own Dynamic array accessing

706
00:29:17,200 --> 00:29:20,300
that will will essentially map this array to some

707
00:29:20,400 --> 00:29:23,900
Arbitrary chunk of memory such as we can still access it in X and Y.

708
00:29:24,100 --> 00:29:26,400
And so what we want to do to do that, right?

709
00:29:26,500 --> 00:29:29,500
Is we want to use that same Z pattern that I've been talking about a

710
00:29:29,500 --> 00:29:30,800
lot lately, right?

711
00:29:30,900 --> 00:29:36,600
Basically, we stick the Row, the first row of things into the first

712
00:29:36,600 --> 00:29:39,700
second, third, fourth, fifth sixth, seventh entries or whatever,

713
00:29:39,700 --> 00:29:40,300
right?

714
00:29:40,400 --> 00:29:42,200
Then we get to the end of a row.

715
00:29:42,300 --> 00:29:43,400
We start the next row.

716
00:29:43,400 --> 00:29:44,800
So we just packed the rose in.

717
00:29:44,800 --> 00:29:47,000
So basically this row, right?

718
00:29:47,100 --> 00:29:50,300
This row Maps into the first part of the buffer.

719
00:29:50,500 --> 00:29:56,100
Right, then this row Maps into the next part of the buffer, right?

720
00:29:56,200 --> 00:29:59,900
And so on and so forth till we've had all the rows so that leads us.

721
00:30:00,000 --> 00:30:02,200
You the computation that we need to get.

722
00:30:02,200 --> 00:30:06,300
We want to access something in here when we want to change an HW right

723
00:30:06,400 --> 00:30:07,000
into something.

724
00:30:07,000 --> 00:30:09,200
That's just one access or, right.

725
00:30:09,200 --> 00:30:14,000
So we had an x y and we want to change this into a single thing like

726
00:30:14,000 --> 00:30:14,700
an N.

727
00:30:14,700 --> 00:30:16,900
We just want to have one value that we enter.

728
00:30:17,200 --> 00:30:18,100
How do we do that?

729
00:30:18,200 --> 00:30:22,000
Well, it is always going to, to unwind in the same way when we unpack

730
00:30:22,000 --> 00:30:25,200
those rows X is the smallest accessor.

731
00:30:25,200 --> 00:30:26,600
It moves by one.

732
00:30:26,900 --> 00:30:29,900
So, basically, our X remember because our X was, this is our

733
00:30:30,000 --> 00:30:33,300
And so, if we were accessing into the first row of X, we would always

734
00:30:33,300 --> 00:30:35,200
just use whatever the index actually is.

735
00:30:35,200 --> 00:30:36,700
So we just use x, right.

736
00:30:36,700 --> 00:30:40,300
So we're going to add X to our accessor when we have to compute what

737
00:30:40,300 --> 00:30:41,100
our accessor is.

738
00:30:41,100 --> 00:30:42,400
Oops, should do that yet.

739
00:30:42,600 --> 00:30:43,900
So if you have tile map.

740
00:30:45,900 --> 00:30:48,200
We know that we add X and that moves us through it.

741
00:30:48,200 --> 00:30:53,300
But for why we now know that for everyone in why we move we would move

742
00:30:53,300 --> 00:30:56,500
a whole set of x's we move a whole row.

743
00:30:56,900 --> 00:30:59,000
So we need to take that width.

744
00:30:59,300 --> 00:31:00,000
Right?

745
00:31:00,200 --> 00:31:04,700
And we need to multiply the Y times, the width to know how far to go

746
00:31:04,900 --> 00:31:09,900
and that leads us to the canonical form of how to access a 1D thing.

747
00:31:10,000 --> 00:31:11,300
In a 2d way.

748
00:31:11,400 --> 00:31:14,700
It's always the, the least.

749
00:31:15,300 --> 00:31:17,100
Again, accessor, right?

750
00:31:17,500 --> 00:31:20,600
Plus the next least significant accessor times.

751
00:31:20,600 --> 00:31:22,000
However, large this thing was.

752
00:31:22,200 --> 00:31:27,200
However, large the, however, large the, the maximum value, you know,

753
00:31:27,200 --> 00:31:30,600
the sorry, the number of elements in whatever this thing was

754
00:31:30,600 --> 00:31:31,000
accessing.

755
00:31:31,000 --> 00:31:33,600
So, the number of elements in a row, right?

756
00:31:33,900 --> 00:31:37,900
Which is the width in our case and we could keep going, we could have

757
00:31:37,900 --> 00:31:39,500
a three-dimensional thing, right?

758
00:31:39,500 --> 00:31:42,600
We could have a thing that was packed three dimensionally and we just

759
00:31:42,600 --> 00:31:43,300
have it again.

760
00:31:43,300 --> 00:31:44,500
We just have Z

761
00:31:45,300 --> 00:31:51,900
X width x height, right plus y times width plus X, right.

762
00:31:51,900 --> 00:31:55,400
So you just keep multiplying dimensions on because remember, if we

763
00:31:55,400 --> 00:31:59,600
were going in Z, we have to account for an entire two dimensional

764
00:31:59,600 --> 00:32:00,600
piece.

765
00:32:00,600 --> 00:32:01,700
That was packed in.

766
00:32:01,700 --> 00:32:03,800
So we have to do the width times.

767
00:32:03,800 --> 00:32:06,500
The height is how far you'd move in Z to get to the next one.

768
00:32:06,500 --> 00:32:06,800
Right?

769
00:32:06,800 --> 00:32:09,500
And so this just chains out forever to however many dimensions.

770
00:32:09,500 --> 00:32:15,100
You want packing n Dimensions into one D is just

771
00:32:15,900 --> 00:32:19,400
This relationship that happens and you'll see it everywhere in code.

772
00:32:19,600 --> 00:32:20,900
So that's all we're doing here.

773
00:32:21,000 --> 00:32:21,200
Right?

774
00:32:21,200 --> 00:32:23,800
And you can see that, this is the way where is it?

775
00:32:23,800 --> 00:32:26,000
But this is the way that I've written it out, right?

776
00:32:26,100 --> 00:32:29,900
You can see that I wrote out, whatever that count, X is every time you

777
00:32:29,900 --> 00:32:33,600
move some one in, why you're going to move that many in X.

778
00:32:33,600 --> 00:32:38,300
However, many X's there are total in one line and then the x, of

779
00:32:38,300 --> 00:32:39,900
course, is just its own incrementer.

780
00:32:40,400 --> 00:32:43,500
So that's that, that sort of that, how to pack 2D things into a

781
00:32:43,500 --> 00:32:44,900
one-day thing or ND things.

782
00:32:44,900 --> 00:32:45,300
Really?

783
00:32:45,800 --> 00:32:47,000
That is what's going on there.

784
00:32:47,100 --> 00:32:48,600
So hopefully that makes some sense to you.

785
00:32:49,500 --> 00:32:49,900
All right.

786
00:32:49,900 --> 00:32:54,300
So when we do that, we now have a function that we can pass a tile map

787
00:32:54,300 --> 00:32:56,700
to and then we can do our testing, right?

788
00:32:56,800 --> 00:32:59,500
And so let's just do the basic version First.

789
00:33:00,000 --> 00:33:01,500
I have my tile map here.

790
00:33:01,600 --> 00:33:04,000
I'm going to declare one of these tile Maps, right?

791
00:33:04,100 --> 00:33:08,100
I need to go ahead and Define all of these values, right?

792
00:33:08,200 --> 00:33:09,300
So let's go ahead and do that.

793
00:33:09,300 --> 00:33:10,500
Just real quickly here.

794
00:33:10,800 --> 00:33:15,800
Let's say, tilemap count, X count, why upper left?

795
00:33:15,900 --> 00:33:19,100
This see, blah, blah, blah, right?

796
00:33:19,200 --> 00:33:20,000
No, big deal.

797
00:33:21,400 --> 00:33:22,400
Everything's fine.

798
00:33:22,800 --> 00:33:25,800
And then I'm just going to go ahead and move all this stuff into

799
00:33:25,800 --> 00:33:26,100
their.

800
00:33:26,100 --> 00:33:29,900
So we basically have you know what I can and I can move these directly

801
00:33:29,900 --> 00:33:30,900
into their for now.

802
00:33:31,400 --> 00:33:38,100
So we basically have this is 60 60, the upper left X and upper left

803
00:33:38,100 --> 00:33:42,800
wise are there we go, and the tiles.

804
00:33:43,800 --> 00:33:45,300
These are our tiles.

805
00:33:45,300 --> 00:33:51,100
Now, our tiles equals tiles and of course, we'll have to cast that.

806
00:33:51,300 --> 00:33:53,000
It's now it's, it's 1D.

807
00:33:53,100 --> 00:33:57,100
All right, because this is a 2d array and C would complain if we cast

808
00:33:57,100 --> 00:33:57,300
it.

809
00:33:57,300 --> 00:33:58,400
Well, you know what, I'll show you.

810
00:33:58,500 --> 00:34:00,000
I'll show you the are just you can see it.

811
00:34:00,700 --> 00:34:03,100
And then we've got our counts in here.

812
00:34:03,200 --> 00:34:04,300
Let's go ahead and do that.

813
00:34:04,300 --> 00:34:06,000
Count and count.

814
00:34:06,400 --> 00:34:10,600
And that is really all we have to do that.

815
00:34:10,600 --> 00:34:11,500
Is that is it?

816
00:34:11,699 --> 00:34:18,199
So if we go down here and now we want to do our tile map work we

817
00:34:18,199 --> 00:34:18,500
should.

818
00:34:18,500 --> 00:34:21,100
And you know what, let's go ahead and just change all these.

819
00:34:21,199 --> 00:34:23,600
Guys, town, map tile map.

820
00:34:23,900 --> 00:34:27,500
Anything else tile map tile map, map.

821
00:34:27,500 --> 00:34:29,400
It's good at math me.

822
00:34:29,400 --> 00:34:30,600
See what else we got to do here.

823
00:34:30,900 --> 00:34:32,600
Let the compiler guide you.

824
00:34:32,800 --> 00:34:36,600
Well, we're gonna talk about that second to do.

825
00:34:37,100 --> 00:34:37,900
There we go.

826
00:34:39,699 --> 00:34:47,600
That wit height and tiles.

827
00:34:50,199 --> 00:34:52,900
Okay, so I think we're good there.

828
00:34:53,199 --> 00:34:53,600
There we go.

829
00:34:54,199 --> 00:34:56,600
So this is the cast that I want to talk about.

830
00:34:56,600 --> 00:34:57,100
Right?

831
00:34:57,600 --> 00:35:00,200
Basically what I'm saying, is that a 2d array, something to the fair

832
00:35:00,600 --> 00:35:04,500
declared, as a 2d array in C cannot be cast as something that's a 1D

833
00:35:04,500 --> 00:35:05,000
array.

834
00:35:05,200 --> 00:35:07,400
And so we have to tell it that, it's okay.

835
00:35:07,400 --> 00:35:09,700
We're going to treat that as a 1D array like it's fine.

836
00:35:09,800 --> 00:35:10,600
Don't worry about it.

837
00:35:11,300 --> 00:35:13,100
Okay, and so we haven't actually done anything yet.

838
00:35:13,100 --> 00:35:14,100
So our code is still running.

839
00:35:14,100 --> 00:35:16,200
Exactly the way it was before, but now we've packed the thing in

840
00:35:16,200 --> 00:35:16,400
there.

841
00:35:16,400 --> 00:35:18,900
So let's go ahead and say, all right.

842
00:35:18,900 --> 00:35:19,900
Let's replace.

843
00:35:20,000 --> 00:35:24,100
The check we were doing right with the new check.

844
00:35:24,300 --> 00:35:25,900
So we've got this function here.

845
00:35:26,100 --> 00:35:28,700
We've got is tilemap point empty.

846
00:35:28,900 --> 00:35:30,300
So we want to do is replace.

847
00:35:30,300 --> 00:35:32,900
Our is valid that we're doing for is valid.

848
00:35:32,900 --> 00:35:36,900
We want to replace that by just calling the tilemap query that we

849
00:35:36,900 --> 00:35:39,100
wrote with the new one.

850
00:35:39,200 --> 00:35:40,000
So, there we go.

851
00:35:40,800 --> 00:35:41,200
Oops.

852
00:35:42,700 --> 00:35:45,100
We're going to delete all this stuff because this is the same.

853
00:35:45,100 --> 00:35:47,300
This is we don't need it anymore because we just wrote a function to

854
00:35:47,300 --> 00:35:47,900
do it.

855
00:35:48,300 --> 00:35:50,800
And in fact, we can even just going to wrap this in there with just

856
00:35:50,800 --> 00:35:52,900
say, is Tom at Point empty.

857
00:35:52,900 --> 00:35:54,700
And then, if it is then we'll go ahead and use it.

858
00:35:54,700 --> 00:35:58,000
So there we go, and you can see that it works now that we've factored

859
00:35:58,000 --> 00:35:59,800
it out, and it works exactly the way that it.

860
00:36:00,500 --> 00:36:03,800
So, if we want to, now we can call this on multiple points.

861
00:36:03,800 --> 00:36:05,800
We can just start adding points to test.

862
00:36:05,800 --> 00:36:09,400
Like, if we want to write, we can just say, all right, let's test a

863
00:36:09,400 --> 00:36:10,400
bunch of different points.

864
00:36:10,500 --> 00:36:15,600
Let's test the new player, x, minus the player with write the half the

865
00:36:15,600 --> 00:36:16,300
player with.

866
00:36:16,700 --> 00:36:20,500
So that would be, you know, that would be this, this part this corner

867
00:36:20,500 --> 00:36:25,400
of the player and let's let's go ahead and do the other Corner as

868
00:36:25,400 --> 00:36:26,400
well, right?

869
00:36:26,400 --> 00:36:27,300
It's going to be here.

870
00:36:27,800 --> 00:36:28,100
Of course.

871
00:36:28,100 --> 00:36:29,300
I got to move him out of there for us.

872
00:36:29,300 --> 00:36:29,800
We don't get stuck.

873
00:36:30,000 --> 00:36:30,800
That's good idea.

874
00:36:31,400 --> 00:36:32,800
And so will test all of those.

875
00:36:32,800 --> 00:36:37,400
And if we're going to say they all have to be in an empty space in

876
00:36:37,400 --> 00:36:38,400
order for this to work.

877
00:36:38,500 --> 00:36:39,000
Right?

878
00:36:39,100 --> 00:36:41,500
And so, we just need to move the player with up here.

879
00:36:41,500 --> 00:36:41,800
Again.

880
00:36:41,800 --> 00:36:43,900
This is sort of you should feel those tingles.

881
00:36:43,900 --> 00:36:47,700
You can see, the code start to move into into sort of it sort of

882
00:36:47,700 --> 00:36:50,400
aggregate, which is what we're trying to do here.

883
00:36:51,000 --> 00:36:51,800
So, there we go.

884
00:36:52,600 --> 00:36:56,300
And now, when I move in theory, you see how I stop there.

885
00:36:56,300 --> 00:36:57,300
I couldn't get in there.

886
00:36:57,500 --> 00:36:59,000
Stop again, right?

887
00:36:59,100 --> 00:36:59,900
And so, now,

888
00:37:00,100 --> 00:37:03,200
Of a budding against the tile and we can't we can't go into it.

889
00:37:03,200 --> 00:37:03,800
Right.

890
00:37:04,200 --> 00:37:05,500
So we're starting to get somewhere.

891
00:37:05,500 --> 00:37:06,800
We're starting to get somewhere.

892
00:37:06,900 --> 00:37:10,300
We've got some information about, what, how we should make things

893
00:37:10,300 --> 00:37:10,900
work.

894
00:37:11,100 --> 00:37:13,100
We're sort of getting a little closer, right?

895
00:37:13,200 --> 00:37:15,300
You would never want this game to play like this.

896
00:37:15,300 --> 00:37:15,900
It feels awful.

897
00:37:15,900 --> 00:37:17,600
You get stuck on the sides and all that stuff.

898
00:37:17,600 --> 00:37:20,100
So we're a real far from a good game.

899
00:37:20,100 --> 00:37:22,800
But you know, hopefully you can see how we're making sort of slow and

900
00:37:22,800 --> 00:37:26,300
steady progress towards the design that we want right baby steps, but

901
00:37:26,300 --> 00:37:29,800
the steps are easy to do and really easy to understand and that's

902
00:37:29,900 --> 00:37:30,700
It's what you want to do.

903
00:37:30,700 --> 00:37:34,300
When you're coding baby, steps that are concrete and where you have

904
00:37:34,300 --> 00:37:36,900
good information about whether your design is going in a good way.

905
00:37:36,900 --> 00:37:39,200
A good direction or a bad direction, right?

906
00:37:39,400 --> 00:37:40,000
All right.

907
00:37:40,200 --> 00:37:43,300
So now that we've got this, the other thing that I said that I want to

908
00:37:43,300 --> 00:37:43,900
do, right?

909
00:37:43,900 --> 00:37:46,700
Is if the player moves off of the tile map.

910
00:37:46,700 --> 00:37:49,900
I want them to move into a new tile map, right?

911
00:37:50,200 --> 00:37:54,300
So let's think about what has to happen in order for that to occur.

912
00:38:03,300 --> 00:38:06,500
So in order for that to occur, we know one thing right off the bat,

913
00:38:06,500 --> 00:38:09,400
which is this tile map here is not going to be able to be static.

914
00:38:09,400 --> 00:38:10,500
We're going to need multiple of them.

915
00:38:10,800 --> 00:38:11,300
Right?

916
00:38:12,000 --> 00:38:15,000
And so in order to do that, we've already set ourselves up for that a

917
00:38:15,000 --> 00:38:16,700
little bit because we've got this tile map here.

918
00:38:17,300 --> 00:38:19,800
So I'm going to go ahead and promote that tile map out to the H file

919
00:38:19,800 --> 00:38:21,700
so that I can see it and understand it.

920
00:38:22,100 --> 00:38:22,700
So, there we go.

921
00:38:22,700 --> 00:38:24,600
We've got the tile map, and that's all good.

922
00:38:24,700 --> 00:38:27,000
But we're going to need more tile Maps, right?

923
00:38:27,000 --> 00:38:31,100
We're going to need, let's say at least four tile map so that you can

924
00:38:31,100 --> 00:38:32,900
walk around between a couple.

925
00:38:33,000 --> 00:38:34,400
All of these tile Maps.

926
00:38:34,600 --> 00:38:38,900
So in order to do that, what I'm going to do is I'm going to Define

927
00:38:38,900 --> 00:38:40,500
more than one of them, right?

928
00:38:40,500 --> 00:38:43,200
I'm going to Define more than one of these tile Maps.

929
00:38:43,200 --> 00:38:44,500
Exactly how you might think.

930
00:38:44,600 --> 00:38:44,900
You know what?

931
00:38:44,900 --> 00:38:48,500
Let's just do two, because two will be easier for us.

932
00:38:48,500 --> 00:38:49,100
All right.

933
00:38:50,100 --> 00:38:52,400
So I'm going to have two things here.

934
00:38:52,400 --> 00:38:55,000
I'm going to have tile 0, right?

935
00:38:55,000 --> 00:38:58,100
And there's of course Emax messing up the indentation.

936
00:38:58,100 --> 00:38:59,800
Thank you e Max, there we go.

937
00:39:00,200 --> 00:39:01,300
And tiles one.

938
00:39:01,600 --> 00:39:04,500
So now I have to tile maps and I'm going to go ahead and make these

939
00:39:04,500 --> 00:39:05,700
semi coherent.

940
00:39:05,900 --> 00:39:10,500
So I'm going to basically say, all right, there's no doors on these

941
00:39:11,300 --> 00:39:16,000
except for the doors that would actually lead to a valid.

942
00:39:16,000 --> 00:39:17,400
Tilemap on the other side.

943
00:39:17,400 --> 00:39:20,000
So they're going to be like above and below each other so you can go

944
00:39:20,000 --> 00:39:22,100
out the top of this one because it's zero.

945
00:39:22,100 --> 00:39:23,400
There you'll come in on the bottom.

946
00:39:23,500 --> 00:39:24,700
Right make sense.

947
00:39:24,900 --> 00:39:26,700
Yeah, so should be good.

948
00:39:27,200 --> 00:39:29,800
So basically I'm just going to Define to tile Maps here.

949
00:39:30,000 --> 00:39:32,400
And I'm going to find this tilemap here, right?

950
00:39:33,900 --> 00:39:36,300
And I'm going to Define this town map here.

951
00:39:41,200 --> 00:39:44,300
And I'm going to do the shorthand of just cloning this time out

952
00:39:44,300 --> 00:39:46,100
because it's got the stuff in it that we want.

953
00:39:46,800 --> 00:39:52,300
And yeah, and then I'll just go ahead and change the tile Splinter

954
00:39:52,300 --> 00:39:53,200
here, right?

955
00:39:53,500 --> 00:39:57,000
So I'm going to go ahead and say, all right, we've got the tile map to

956
00:39:57,000 --> 00:40:00,600
tiles pointer is going to point to, you know, what.

957
00:40:00,600 --> 00:40:01,100
And you know what?

958
00:40:01,100 --> 00:40:02,000
Let's also do this.

959
00:40:02,100 --> 00:40:03,600
Let's say that we've got two of them.

960
00:40:03,600 --> 00:40:04,700
Let's just make him an array.

961
00:40:04,700 --> 00:40:08,000
So, we've got tile map to write brackets to.

962
00:40:08,500 --> 00:40:10,000
So this is tile map 0.

963
00:40:10,200 --> 00:40:10,900
It's going to do these

964
00:40:11,100 --> 00:40:13,100
Things like that.

965
00:40:13,400 --> 00:40:14,400
I'm going to say that.

966
00:40:14,500 --> 00:40:20,300
Tilemap 1 equals tiles one.

967
00:40:20,300 --> 00:40:21,200
So there we go.

968
00:40:21,200 --> 00:40:24,900
Do we go 0 Talbot?

969
00:40:24,900 --> 00:40:25,400
There.

970
00:40:25,700 --> 00:40:26,800
You are 32.

971
00:40:28,900 --> 00:40:33,200
Okay, and I need to clone the other values that are in the town map

972
00:40:33,200 --> 00:40:33,400
here.

973
00:40:33,400 --> 00:40:35,600
And that should also tell you something, the fact that I have to clone

974
00:40:35,600 --> 00:40:36,400
them is suspicious.

975
00:40:36,400 --> 00:40:36,700
Right?

976
00:40:36,700 --> 00:40:40,800
So keep that in mind again, always always just kind of look at things

977
00:40:40,800 --> 00:40:43,400
and be aware of what is happening and where things are going and how,

978
00:40:43,400 --> 00:40:44,500
they're how they're doing it.

979
00:40:44,600 --> 00:40:46,000
Let's go ahead and compile that.

980
00:40:47,100 --> 00:40:48,300
Let's see here.

981
00:40:48,300 --> 00:40:50,900
What is right down map.

982
00:40:51,000 --> 00:40:52,200
So, alright.

983
00:40:52,200 --> 00:40:54,400
So we've already got so I should call this tile Maps.

984
00:40:54,600 --> 00:40:57,700
So what we want to do now is we kind of storing our tile Maps.

985
00:40:57,800 --> 00:40:58,600
We got to talking.

986
00:40:58,800 --> 00:40:59,300
Maps.

987
00:40:59,400 --> 00:41:00,600
One on top of the other.

988
00:41:00,800 --> 00:41:02,800
I should probably make them look a bit different.

989
00:41:02,800 --> 00:41:05,100
So I'm going to make one of them, completely empty and leave other

990
00:41:05,100 --> 00:41:05,500
one.

991
00:41:05,600 --> 00:41:08,400
The other one basically as it was, right.

992
00:41:08,400 --> 00:41:12,200
So this one's going to be completely empty and the other one is going

993
00:41:12,200 --> 00:41:13,600
to be exactly as it was.

994
00:41:13,600 --> 00:41:16,200
So there we go, get rid of all those.

995
00:41:16,500 --> 00:41:17,800
Look at this.

996
00:41:18,400 --> 00:41:20,900
There's all of our ones are gone, okay.

997
00:41:22,300 --> 00:41:26,100
So, what I want to do now is say that I've got these tile maps, and

998
00:41:26,100 --> 00:41:29,200
then I'm just going to say that there's a current tile map, that is

999
00:41:29,200 --> 00:41:30,400
the tile map that we're on.

1000
00:41:30,500 --> 00:41:30,700
Right?

1001
00:41:30,700 --> 00:41:31,800
And we'll say that that style.

1002
00:41:31,800 --> 00:41:33,900
It's got a point tile map 0 for now.

1003
00:41:34,100 --> 00:41:38,200
And so everyone who was using tilemap dot below me is now going to use

1004
00:41:38,200 --> 00:41:39,300
tilemap Arrow, right?

1005
00:41:39,300 --> 00:41:42,600
It's going to reference some pointer to a tile map but it's not really

1006
00:41:42,600 --> 00:41:46,300
necessarily going to know which tile map it is.

1007
00:41:46,300 --> 00:41:48,300
And so these are going to work like that, right?

1008
00:41:48,300 --> 00:41:52,000
And if I recompile this in theory, what is the problem here?

1009
00:41:52,100 --> 00:41:52,900
Here, there we go.

1010
00:41:53,100 --> 00:41:59,600
If I were if I were compiled this in theory, I should be able to what

1011
00:41:59,600 --> 00:41:59,800
are you?

1012
00:42:00,000 --> 00:42:00,500
You bet.

1013
00:42:00,500 --> 00:42:01,300
Oh, right.

1014
00:42:01,400 --> 00:42:03,600
So this guy also needs to access the tile.

1015
00:42:03,800 --> 00:42:05,700
So this is another thing that we might want to think of.

1016
00:42:05,700 --> 00:42:09,100
So, we already have the code for accessing a tile, right?

1017
00:42:09,200 --> 00:42:10,300
We wrote it up here.

1018
00:42:10,800 --> 00:42:12,800
It's this thing, right?

1019
00:42:12,900 --> 00:42:16,900
So we may want to also pull that out which is basically get tile

1020
00:42:17,600 --> 00:42:18,900
value, right?

1021
00:42:19,100 --> 00:42:25,500
So we can pass in a tile map and the the sort of entity to tile X in

1022
00:42:25,500 --> 00:42:26,300
through to tile.

1023
00:42:26,300 --> 00:42:26,800
Why.

1024
00:42:27,000 --> 00:42:27,600
Right?

1025
00:42:27,800 --> 00:42:29,800
What we may want to do is just say, all right, let's go.

1026
00:42:30,000 --> 00:42:34,700
Ahead and and pass it in there and let's call that direct so or

1027
00:42:34,700 --> 00:42:35,500
unchecked.

1028
00:42:35,700 --> 00:42:38,600
So that we know that we're not, we're assuming that we've already done

1029
00:42:38,600 --> 00:42:42,800
a check on it to see that it was valid before we actually did it.

1030
00:42:42,800 --> 00:42:44,700
So, we're going to do something that does.

1031
00:42:44,700 --> 00:42:50,800
This right there is our tile why there's our tile X, and this could be

1032
00:42:50,800 --> 00:42:52,500
an inline function, because it's nice and Tiny.

1033
00:42:52,700 --> 00:42:54,700
We're just going to return that tilemap value.

1034
00:42:55,200 --> 00:42:58,400
So, now we have a way to query in and we don't have to know about this

1035
00:42:58,400 --> 00:42:59,100
code anymore.

1036
00:43:00,800 --> 00:43:06,000
We can just pass in a thing where we actually ask for our player tile

1037
00:43:06,000 --> 00:43:09,400
X and our player will tell why in a convenient way and we can get it

1038
00:43:09,400 --> 00:43:09,500
out.

1039
00:43:09,500 --> 00:43:11,200
So we just pulled that out there, right?

1040
00:43:12,800 --> 00:43:13,700
Let's see here.

1041
00:43:14,300 --> 00:43:18,400
So now this guy can use the same thing, get tilemap value unchecked,

1042
00:43:18,800 --> 00:43:22,800
and it can go ahead and ask for the column and the row and it will do

1043
00:43:22,800 --> 00:43:25,000
that access right there.

1044
00:43:25,000 --> 00:43:29,300
So we still are running exactly as we would expect to run its all

1045
00:43:29,300 --> 00:43:29,500
good.

1046
00:43:29,500 --> 00:43:32,200
Except now, you'll notice our doors are gone except for the bottom

1047
00:43:32,200 --> 00:43:33,200
door, which is good.

1048
00:43:33,200 --> 00:43:35,700
So all we need to do now is make it so that when we come out here,

1049
00:43:35,700 --> 00:43:40,700
when we walk out of here, we will be able to leave and move on to the

1050
00:43:40,700 --> 00:43:41,600
next screen.

1051
00:43:43,000 --> 00:43:46,100
So what we need to think about?

1052
00:43:47,100 --> 00:43:50,100
Is the fact that these tile maps are sort of?

1053
00:43:50,100 --> 00:43:54,200
We kind of want to think about the tile Maps as having, you know,

1054
00:43:54,400 --> 00:43:58,600
continuity so that almost as if it's one big tile map, but we probably

1055
00:43:58,600 --> 00:44:01,100
don't want to make it just one big tile map.

1056
00:44:01,200 --> 00:44:05,200
And the reason for that is we would waste a ton of space in the cases

1057
00:44:05,200 --> 00:44:07,800
where the tile maps are not dense.

1058
00:44:08,000 --> 00:44:10,700
And let me go ahead and show you what I mean by that.

1059
00:44:11,700 --> 00:44:16,800
So one way to do this, oops, that would be pretty easy, right?

1060
00:44:16,900 --> 00:44:17,500
He used to say.

1061
00:44:17,500 --> 00:44:21,500
All right, essentially, what we have when we have all of these tile

1062
00:44:21,500 --> 00:44:22,400
Maps, right?

1063
00:44:22,700 --> 00:44:24,800
Is we know like we've got these two tile Maps.

1064
00:44:24,800 --> 00:44:27,100
They're stacked on top of each other like this, right?

1065
00:44:27,100 --> 00:44:27,700
And I don't know.

1066
00:44:27,700 --> 00:44:29,400
I've got some, I've got it.

1067
00:44:29,400 --> 00:44:30,600
Looking kind of like this.

1068
00:44:30,800 --> 00:44:32,800
I've got this is put in there.

1069
00:44:32,900 --> 00:44:35,600
There's a barrier here, but there's a door there that you can go

1070
00:44:35,600 --> 00:44:36,100
through.

1071
00:44:36,300 --> 00:44:36,800
Right?

1072
00:44:37,200 --> 00:44:38,200
Looks like that.

1073
00:44:38,500 --> 00:44:41,600
So, one way to do this, right, would be to make the whole thing.

1074
00:44:41,600 --> 00:44:44,200
This whole thing could be one tile map, right?

1075
00:44:44,200 --> 00:44:46,700
And we're just viewing a subsection of the tile map.

1076
00:44:46,900 --> 00:44:48,500
That we could do that.

1077
00:44:49,000 --> 00:44:52,400
The problem with that is what happens when things get absolutely

1078
00:44:52,400 --> 00:44:53,100
massive.

1079
00:44:53,100 --> 00:44:57,500
Like, let's say that we end up with a fully 3D, sort of structure for

1080
00:44:57,500 --> 00:44:59,800
these tile Maps where we've basically got you.

1081
00:45:00,400 --> 00:45:03,800
Imagine each of these is a tile map and then there's tile maps on top

1082
00:45:03,800 --> 00:45:04,800
of tile Maps, right?

1083
00:45:04,800 --> 00:45:07,200
There's like you go up a level and there's Tom apps here.

1084
00:45:07,200 --> 00:45:09,900
And this time is there this thing goes on extremely far.

1085
00:45:09,900 --> 00:45:13,100
There's like 400 tile maps in this direction, right?

1086
00:45:13,400 --> 00:45:17,200
And then there's a 300 tile maps in this direction, but they're very

1087
00:45:17,200 --> 00:45:17,800
sparse.

1088
00:45:17,800 --> 00:45:21,200
Like we don't fill them all in, like there's no tile maps in here.

1089
00:45:21,600 --> 00:45:24,100
Most of the levels are not, you know, maybe maybe this.

1090
00:45:24,100 --> 00:45:26,000
There's 20 tile maps that go up.

1091
00:45:26,000 --> 00:45:29,600
There's like ladders that go up and up and up on one spot of the map.

1092
00:45:30,000 --> 00:45:33,200
But you know, we don't actually have that anywhere else.

1093
00:45:33,500 --> 00:45:36,700
So they're going to be very sparse and they and it could be very

1094
00:45:36,700 --> 00:45:37,900
sprawling and sparse.

1095
00:45:38,200 --> 00:45:41,500
And so what you don't want to do is you don't want to store everything

1096
00:45:41,500 --> 00:45:43,100
as a giant 3D voxel.

1097
00:45:43,600 --> 00:45:46,800
Basically kind of a thing where it where the entire map for the whole

1098
00:45:46,800 --> 00:45:51,400
world is is stored in some giant array because

1099
00:45:52,600 --> 00:45:57,200
As we've seen how much space does it take to store something.

1100
00:45:57,200 --> 00:45:59,200
Well, a linear thing, right?

1101
00:45:59,200 --> 00:46:01,800
Something that's just things along a line, right?

1102
00:46:02,000 --> 00:46:06,700
Is just however, long, the line is right, if the line is n long, then

1103
00:46:06,700 --> 00:46:09,000
it's going to be n space to fill it.

1104
00:46:09,000 --> 00:46:11,600
So if we have to store, you know, I don't know.

1105
00:46:11,600 --> 00:46:15,900
Let's say we store a thousand tiles in a line then we basically have a

1106
00:46:15,900 --> 00:46:18,200
thousand times, the size of a tile.

1107
00:46:18,200 --> 00:46:20,600
However, big however, much we need to store in a tile.

1108
00:46:20,600 --> 00:46:21,900
That's how big it would be.

1109
00:46:22,100 --> 00:46:22,500
Right.

1110
00:46:22,800 --> 00:46:26,100
And you can pretty much see that when you have something like this.

1111
00:46:26,100 --> 00:46:29,000
Even if this was like, you know, 10,000 or something.

1112
00:46:29,000 --> 00:46:30,700
I mean, how many are really going to go across?

1113
00:46:31,700 --> 00:46:35,000
This never is going to get to a particularly Big Value even if tiles

1114
00:46:35,000 --> 00:46:37,600
were you know, a megabyte or something?

1115
00:46:37,600 --> 00:46:41,800
Well MB a little bit large, let's say they were what KB 1 K per tile.

1116
00:46:41,900 --> 00:46:42,500
Right?

1117
00:46:43,100 --> 00:46:48,700
Then really all we have here is we've got we've got a 10 megabyte set

1118
00:46:48,700 --> 00:46:50,000
to store that whole thing.

1119
00:46:50,000 --> 00:46:50,300
Right?

1120
00:46:50,300 --> 00:46:51,900
So it's just not it's just not that

1121
00:46:52,000 --> 00:46:53,000
that big right?

1122
00:46:53,000 --> 00:46:54,100
It's not a big deal.

1123
00:46:54,500 --> 00:46:58,300
But as soon as you start adding more dimensions in there, as soon as

1124
00:46:58,300 --> 00:47:02,200
you add another dimension, where you're going to do two Dimensions

1125
00:47:02,200 --> 00:47:03,000
here, right?

1126
00:47:03,300 --> 00:47:08,000
If you have another 10,000, it becomes 10,000 squared, right?

1127
00:47:08,000 --> 00:47:13,200
It's 10,000 times, 10,000 to store it because for every 10,000 of

1128
00:47:13,200 --> 00:47:16,700
these you have, you've got 10,000 rows now, so you've got like a

1129
00:47:16,700 --> 00:47:18,700
10,000 rows of 10,000 entries.

1130
00:47:19,100 --> 00:47:21,900
And these numbers get big really fast right in.

1131
00:47:22,100 --> 00:47:26,800
So much as you cannot make a line that big you can make a square get

1132
00:47:26,800 --> 00:47:29,500
big really quickly in terms of how many interior tells it has.

1133
00:47:29,500 --> 00:47:33,000
And if we go one further and go to cubed, right?

1134
00:47:33,000 --> 00:47:37,000
So now we've got essentially, we're storing a 3D World, right?

1135
00:47:37,200 --> 00:47:40,400
Where we've got, you know, you can go up ladders and down ladders,

1136
00:47:40,400 --> 00:47:40,600
right?

1137
00:47:40,600 --> 00:47:44,100
So you can move up tile maps and downtown Maps storing.

1138
00:47:44,100 --> 00:47:48,200
That is now cubed in, however, large, you want the world to be in any

1139
00:47:48,200 --> 00:47:49,700
given direction, right?

1140
00:47:50,600 --> 00:47:51,800
So again, since

1141
00:47:52,100 --> 00:47:56,500
We just want we only want to be able to store stuff where where stuff

1142
00:47:56,500 --> 00:47:57,900
actually exist in the world.

1143
00:47:57,900 --> 00:47:59,800
If there's a tower in the world.

1144
00:48:00,000 --> 00:48:01,800
You can go up, 20 flights in it.

1145
00:48:02,000 --> 00:48:04,600
We want to only have to store the 20 flights.

1146
00:48:04,600 --> 00:48:08,500
We don't want have to start 20, flights virtually for every Square on

1147
00:48:08,500 --> 00:48:11,800
the map for every tile map on the, for every section of the town map

1148
00:48:11,800 --> 00:48:15,500
on the on the world because there might be nothing there.

1149
00:48:15,500 --> 00:48:18,300
So you're just throwing empty are so essentially, what we want to do

1150
00:48:18,300 --> 00:48:21,300
is we want to be able to say we only have tile Maps.

1151
00:48:21,300 --> 00:48:25,300
We only have a 2d tile map section where one actually exists in the

1152
00:48:25,300 --> 00:48:29,800
world so that we can have feel free to have a long winding thing.

1153
00:48:30,000 --> 00:48:33,600
Things I'm tall things in places where we want them without paying the

1154
00:48:33,600 --> 00:48:37,100
cost of that everywhere making it prohibitive, right?

1155
00:48:38,200 --> 00:48:44,400
And so, you know, that's just, that's just prevents you from having to

1156
00:48:44,400 --> 00:48:47,300
pack your world so that everything is densely packed in one area.

1157
00:48:47,300 --> 00:48:49,500
You can make like on a large following things and still take up the

1158
00:48:49,500 --> 00:48:50,300
same amount of memory.

1159
00:48:50,600 --> 00:48:54,400
And that's again, that's called sparse storage, sparse is the word we

1160
00:48:54,400 --> 00:48:58,300
use for that because you can say that something is dense, which means

1161
00:48:58,300 --> 00:48:59,800
that like all the entries are there.

1162
00:49:00,500 --> 00:49:02,600
Are you can say that something is sparse, which is that, you have a

1163
00:49:02,600 --> 00:49:07,200
storage scheme that doesn't cost much to store nothingness.

1164
00:49:07,200 --> 00:49:07,800
Right?

1165
00:49:08,000 --> 00:49:10,500
So what we're looking for is something Sparks that, lets us store

1166
00:49:10,500 --> 00:49:14,200
tilemap sections, only where the player can actually walk to and not

1167
00:49:14,200 --> 00:49:15,100
waste a bunch of memory.

1168
00:49:15,100 --> 00:49:16,300
Storing them, where they're not,

1169
00:49:17,500 --> 00:49:21,100
And so again, that's why I can't just make a giant 2D tile map of the

1170
00:49:21,100 --> 00:49:25,300
entire over world because I may want to have long thin things

1171
00:49:25,300 --> 00:49:27,200
extending out through parts of the world.

1172
00:49:27,200 --> 00:49:30,700
And if we were to actually try to store tiles for the entire world as

1173
00:49:30,700 --> 00:49:34,600
if it was a giant filled in 2D grid, we would blow out memory too

1174
00:49:34,600 --> 00:49:36,200
quickly or something like that, right?

1175
00:49:37,300 --> 00:49:40,100
Okay, so we want some kind of sparse storage for this thing.

1176
00:49:40,700 --> 00:49:44,800
So what I want to do is basically say, okay, I would like my tilemap

1177
00:49:44,800 --> 00:49:45,100
queries.

1178
00:49:45,100 --> 00:49:49,100
I'd like to be able to still do a query as if I was querying stuff.

1179
00:49:49,100 --> 00:49:53,600
Sort of uniformly, but I would also I would like to basically say is

1180
00:49:53,600 --> 00:49:57,000
it okay for the player to move outside of this door, right?

1181
00:49:57,000 --> 00:49:57,800
Can you move down?

1182
00:49:57,800 --> 00:49:58,800
What's down here?

1183
00:49:59,100 --> 00:49:59,700
Right.

1184
00:49:59,700 --> 00:50:01,900
I want to be able to know the answer to that question.

1185
00:50:02,400 --> 00:50:04,600
And so in order to know the answer that question, what that means is

1186
00:50:04,600 --> 00:50:06,600
that going off the edge of one tile.

1187
00:50:06,800 --> 00:50:10,700
App should bring me on to the next tile map.

1188
00:50:11,700 --> 00:50:14,200
And we only have 10 minutes here, which is a little tight.

1189
00:50:14,500 --> 00:50:18,500
So I'm wondering if I should, I would like to start this.

1190
00:50:23,500 --> 00:50:25,000
I would like to start this.

1191
00:50:26,200 --> 00:50:27,000
But I don't know if I have time.

1192
00:50:27,000 --> 00:50:27,900
We'll see what we can do.

1193
00:50:28,600 --> 00:50:32,700
So, what I want to do here, right, you can sort of see what happens.

1194
00:50:33,800 --> 00:50:35,100
What I want to say here is.

1195
00:50:35,100 --> 00:50:37,900
Okay, so you can see this is tile map Point empty thing.

1196
00:50:38,200 --> 00:50:40,500
It's only got one tile map, right?

1197
00:50:40,800 --> 00:50:43,900
And so, it wouldn't be able to look at a different tile map.

1198
00:50:45,000 --> 00:50:49,700
So what I kind of need to do is I need to be able to do that in a way

1199
00:50:49,700 --> 00:50:53,400
that asks about more than one tile map.

1200
00:50:53,500 --> 00:50:54,100
Right?

1201
00:50:54,200 --> 00:50:56,700
I need to be able to ask about this in a way.

1202
00:50:56,700 --> 00:50:59,800
That's more than one tile map, so you can already see.

1203
00:51:00,000 --> 00:51:02,700
Already have a hint which is I know I want to be able to do these

1204
00:51:02,700 --> 00:51:04,100
Point queries easily.

1205
00:51:04,400 --> 00:51:07,600
So I basically want a function that works exactly like oops.

1206
00:51:08,200 --> 00:51:13,800
It's not move that that works exactly like this, but I don't actually

1207
00:51:13,800 --> 00:51:17,100
want it to only access one tile map at a time.

1208
00:51:17,100 --> 00:51:21,000
I wanted to access the whole world's worth of Tau Maps, right?

1209
00:51:21,400 --> 00:51:24,900
So if you imagine what this would look like in a thing that says, you

1210
00:51:24,900 --> 00:51:29,900
know, if I clone this function basically and I say something like

1211
00:51:32,000 --> 00:51:34,100
Is World Point empty?

1212
00:51:34,300 --> 00:51:34,900
Right?

1213
00:51:34,900 --> 00:51:39,200
And I want to be able to pass this sort of a test X and a test.

1214
00:51:39,200 --> 00:51:39,500
Why?

1215
00:51:39,500 --> 00:51:44,100
And I want to be able to know, you know, essentially what's going to

1216
00:51:44,100 --> 00:51:48,800
happen to the point, considering the whole universe of Tom apps that

1217
00:51:48,800 --> 00:51:50,100
we may have defined.

1218
00:51:50,400 --> 00:51:50,900
Right?

1219
00:51:51,300 --> 00:51:55,200
What I need to do is figure out a way to sort of get it so that the

1220
00:51:55,200 --> 00:51:59,000
coordinates of this thing, you can we can we can even, you know, we

1221
00:51:59,000 --> 00:51:59,800
can look at it directly.

1222
00:52:00,000 --> 00:52:00,200
Here.

1223
00:52:00,200 --> 00:52:00,400
Right.

1224
00:52:00,400 --> 00:52:03,600
Just imagine clothing this function when we come in here.

1225
00:52:03,600 --> 00:52:06,100
And we use the test X and the test wide.

1226
00:52:06,200 --> 00:52:11,900
They are relative to some tile map right there relative to some tile

1227
00:52:11,900 --> 00:52:13,500
map in the world of tile Maps.

1228
00:52:14,000 --> 00:52:19,000
But if I go off that tilemap, I would be relative to some other tile

1229
00:52:19,000 --> 00:52:19,500
map.

1230
00:52:19,500 --> 00:52:24,000
So what I want to do is instead of only considering the case, so, you

1231
00:52:24,000 --> 00:52:27,800
know, empty was set to false instead of just assuming that a tile is

1232
00:52:27,800 --> 00:52:29,800
not empty, if it that a tile is

1233
00:52:29,900 --> 00:52:31,400
Like filled which is what we're doing.

1234
00:52:31,400 --> 00:52:33,900
If it does not exist inside this town map.

1235
00:52:33,900 --> 00:52:38,100
What I want to do is use these cases more intelligently to figure out

1236
00:52:38,100 --> 00:52:41,100
what tilemap I would be in, right?

1237
00:52:41,100 --> 00:52:43,200
And ask that tile map.

1238
00:52:44,300 --> 00:52:45,300
Does that make sense?

1239
00:52:45,900 --> 00:52:49,500
So, what we need to do is introduce a higher level of coordinate,

1240
00:52:49,500 --> 00:52:49,800
here.

1241
00:52:49,800 --> 00:52:54,400
We need to introduce sort of where we are in tile map space, right?

1242
00:52:54,600 --> 00:52:57,100
And so, what you can see is I was started to do that here.

1243
00:52:57,100 --> 00:52:58,500
I said, we've got to tile Maps.

1244
00:52:58,500 --> 00:53:00,300
We've got Tom ab0 and Tom app one.

1245
00:53:00,600 --> 00:53:04,500
So you can imagine saying we have some index that's where in tilemap

1246
00:53:04,500 --> 00:53:04,800
space.

1247
00:53:04,800 --> 00:53:06,400
We actually were right.

1248
00:53:06,600 --> 00:53:10,200
So instead of passing this in a tile map, what we need to do is pass

1249
00:53:10,200 --> 00:53:12,300
in like, you know, basically the world map.

1250
00:53:12,300 --> 00:53:14,000
Let's say world map or just were

1251
00:53:14,500 --> 00:53:15,500
God's world.

1252
00:53:15,600 --> 00:53:19,400
We're going to pass in the world here and we're going to pass in some

1253
00:53:19,400 --> 00:53:24,600
kind of notion of which tilemap X X and Y.

1254
00:53:24,900 --> 00:53:26,100
We are on now at the minute.

1255
00:53:26,100 --> 00:53:29,500
We at the end, you know, what, I probably should just to show the the

1256
00:53:29,500 --> 00:53:30,200
full thing here.

1257
00:53:30,700 --> 00:53:34,500
I probably should go ahead and say that we actually have four tile

1258
00:53:34,500 --> 00:53:35,400
Maps, right?

1259
00:53:35,700 --> 00:53:39,600
Because that way I can show an X and A Y happening, okay.

1260
00:53:40,500 --> 00:53:45,800
So, well, you know, you know what I'm saying, this kind of thing.

1261
00:53:45,900 --> 00:53:46,400
Right?

1262
00:53:46,400 --> 00:53:47,200
Does that make sense?

1263
00:53:47,500 --> 00:53:47,900
Yeah.

1264
00:53:48,000 --> 00:53:48,400
Okay.

1265
00:53:48,800 --> 00:53:52,500
So let's say I go ahead and blow that out and these are all empty

1266
00:53:52,500 --> 00:53:52,900
again.

1267
00:53:53,000 --> 00:53:55,700
So I've got Tom apps, two and three.

1268
00:53:56,100 --> 00:53:59,900
Okay, and so, let's pretend that we've got this guy here and this

1269
00:54:00,000 --> 00:54:01,200
Is tiles.

1270
00:54:01,200 --> 00:54:06,500
This is tell 0, 0, and this is going to be, so that's like I'm going

1271
00:54:06,500 --> 00:54:08,300
to say that's x and y, basically.

1272
00:54:09,000 --> 00:54:12,300
So basically we've got tiles X and Y.

1273
00:54:12,300 --> 00:54:14,400
So this would be right below this guy.

1274
00:54:14,700 --> 00:54:18,500
And so, then, both of these guys will be able to exit off the side

1275
00:54:18,700 --> 00:54:19,300
like this.

1276
00:54:20,400 --> 00:54:24,600
And these guys will be coming in on the side that.

1277
00:54:24,600 --> 00:54:28,600
So now we've got tiles 10.

1278
00:54:29,400 --> 00:54:30,500
And 11.

1279
00:54:30,900 --> 00:54:34,000
And so that again, 10 would be on the top.

1280
00:54:34,000 --> 00:54:35,100
So it be that way.

1281
00:54:35,100 --> 00:54:36,400
And the other one be on the bottom.

1282
00:54:36,900 --> 00:54:41,100
So it looks like that.

1283
00:54:41,500 --> 00:54:42,300
No.

1284
00:54:42,300 --> 00:54:45,800
No, that's a mistake wired by do that should be.

1285
00:54:45,800 --> 00:54:47,600
Oops, should be there.

1286
00:54:49,000 --> 00:54:49,700
Shouldn't it?

1287
00:54:50,400 --> 00:54:51,000
Yes.

1288
00:54:52,800 --> 00:54:53,400
Yes.

1289
00:54:54,200 --> 00:54:54,800
Oh, no.

1290
00:54:54,800 --> 00:54:55,500
I'm right.

1291
00:54:55,500 --> 00:54:56,000
I'm right.

1292
00:54:56,000 --> 00:54:59,400
Remind getting confused, confused by my own scheme.

1293
00:54:59,600 --> 00:55:01,300
So, I'm just kind of making this by hand here.

1294
00:55:01,300 --> 00:55:01,900
There you go.

1295
00:55:02,700 --> 00:55:05,200
And so, you know, these guys will be in that pattern.

1296
00:55:05,200 --> 00:55:09,700
And so now, I've got my tile Maps here, and I'm going to go ahead and

1297
00:55:09,700 --> 00:55:14,700
lay them out manually again, just because we're not at the point yet,

1298
00:55:14,700 --> 00:55:16,900
where I really know what I want from everything.

1299
00:55:17,900 --> 00:55:22,100
So we can go ahead and do this for all of these, right?

1300
00:55:23,300 --> 00:55:29,900
We have our tiles, we've got our tubing, our mother tile essentially

1301
00:55:29,900 --> 00:55:31,600
which so we're going to go ahead and clone that Tom app.

1302
00:55:31,600 --> 00:55:34,000
So that everyone has their values initialized, right?

1303
00:55:34,700 --> 00:55:36,900
And we haven't quite finished pulling all the stuff out that we want

1304
00:55:36,900 --> 00:55:39,700
to, but we're going to go ahead and just do the basics here.

1305
00:55:39,700 --> 00:55:45,000
So this is 0 0, 1 0 1, 1 like that and we're just going to initialize

1306
00:55:45,000 --> 00:55:48,300
them exactly to what we just label them has in the other thing so you

1307
00:55:48,300 --> 00:55:48,900
can see.

1308
00:55:49,400 --> 00:55:49,900
There we go.

1309
00:55:49,900 --> 00:55:52,000
UPS got to finish the world stuff first.

1310
00:55:52,200 --> 00:55:52,500
Let's go.

1311
00:55:52,600 --> 00:55:56,600
Up over that skip over that I don't care about any of this.

1312
00:55:56,600 --> 00:55:57,300
Okay, there we go.

1313
00:55:58,400 --> 00:56:00,500
And there we go.

1314
00:56:00,600 --> 00:56:01,100
All right.

1315
00:56:01,700 --> 00:56:03,500
So we've got a bunch of work to do here.

1316
00:56:04,100 --> 00:56:04,300
Right?

1317
00:56:04,300 --> 00:56:06,200
And this is why I said, I don't know if I want to start this yet

1318
00:56:06,200 --> 00:56:08,500
because we may leave things in a broken state today, which would be

1319
00:56:08,500 --> 00:56:09,100
unfortunate.

1320
00:56:09,100 --> 00:56:10,400
But sometimes you got to do that.

1321
00:56:10,900 --> 00:56:14,300
Basically, what we need to do now is we need to sort of have something

1322
00:56:14,300 --> 00:56:16,700
that contains all of our tile Maps, right?

1323
00:56:16,700 --> 00:56:19,800
And so I'm just going to say that we've got that world struct, right?

1324
00:56:20,600 --> 00:56:21,800
We've got that world struck that.

1325
00:56:21,800 --> 00:56:22,500
We don't really know what.

1326
00:56:22,700 --> 00:56:26,000
Contains yet, but we know at the very least, it's got to contain these

1327
00:56:26,000 --> 00:56:26,800
tile Maps, right?

1328
00:56:26,800 --> 00:56:28,500
It's got to contain all these tile Maps.

1329
00:56:28,700 --> 00:56:30,700
So, basically, we've got the tile Maps here.

1330
00:56:32,600 --> 00:56:38,000
And we we have to sort of have that pointer and the only thing we know

1331
00:56:38,000 --> 00:56:41,000
so far is that we're going to have to store all these tile maps and

1332
00:56:41,000 --> 00:56:43,400
we're going to have to have them in at something like this world

1333
00:56:43,400 --> 00:56:47,400
struct so that I can pass them around to things that need to be able

1334
00:56:47,400 --> 00:56:48,000
to work with them.

1335
00:56:48,000 --> 00:56:51,400
So we've got Tom apps and the tile maps are going to equal a pointer

1336
00:56:51,400 --> 00:56:53,600
to our Tom obstruct, right?

1337
00:56:53,900 --> 00:56:54,500
So, there we go.

1338
00:56:54,800 --> 00:56:58,800
So inside the world here now, we sort of have something where we're

1339
00:56:58,800 --> 00:56:59,300
going to go.

1340
00:56:59,300 --> 00:56:59,800
All right.

1341
00:57:00,000 --> 00:57:01,800
We have a tile Map X in the tile map.

1342
00:57:01,800 --> 00:57:04,900
Why that we're going to use is coordinates to look up into this thing.

1343
00:57:04,900 --> 00:57:07,600
So we're going to have to use the exact same math.

1344
00:57:07,600 --> 00:57:12,800
But we just did this kind of a strided look up in sort of this, get

1345
00:57:12,800 --> 00:57:14,300
Tau, value unchecked, right?

1346
00:57:14,300 --> 00:57:17,400
And that is something that we're going to want to do again.

1347
00:57:17,400 --> 00:57:22,500
We're just going to clone that function for getting the tile map out

1348
00:57:22,500 --> 00:57:23,300
of the world.

1349
00:57:23,300 --> 00:57:23,600
Right?

1350
00:57:23,600 --> 00:57:28,100
So we have a world structure and we're going to have a tile Map X and

1351
00:57:28,100 --> 00:57:28,800
a tile map.

1352
00:57:28,800 --> 00:57:29,000
Why?

1353
00:57:29,000 --> 00:57:29,800
That we are?

1354
00:57:30,000 --> 00:57:33,600
Owing to use to pull out the, the world coordinate.

1355
00:57:33,600 --> 00:57:37,400
So again, we know exactly what this looks like, right?

1356
00:57:37,900 --> 00:57:41,600
We're going to have a thing where we essentially have account X and

1357
00:57:41,600 --> 00:57:42,500
account Y.

1358
00:57:42,600 --> 00:57:44,600
And we're going to look up a tile map in here.

1359
00:57:44,700 --> 00:57:47,000
Now, what we said, we've got a problem.

1360
00:57:47,000 --> 00:57:50,400
You know, like I said, this is still going to be dense so far, but

1361
00:57:50,400 --> 00:57:51,000
we'll kind of.

1362
00:57:51,600 --> 00:57:54,300
Yeah, I'm running out of time on the stream is basically what it boils

1363
00:57:54,300 --> 00:57:54,700
down to.

1364
00:57:54,700 --> 00:57:56,600
I want I won't be able to get to the sparseness.

1365
00:57:56,600 --> 00:57:59,600
So we'll just drop a thing in here to do.

1366
00:58:00,000 --> 00:58:04,200
Beginners sparseness basically how much we have to do?

1367
00:58:05,400 --> 00:58:05,600
Okay.

1368
00:58:05,600 --> 00:58:08,600
So basically what I want to do here is I want to be able to say, all

1369
00:58:08,600 --> 00:58:12,600
right, get me the tile map that goes with some coordinates for the

1370
00:58:12,600 --> 00:58:13,200
town map.

1371
00:58:13,500 --> 00:58:16,200
And all that's going to do is exactly the same math we did before.

1372
00:58:16,200 --> 00:58:17,800
It's going to look up into the tile Maps.

1373
00:58:18,300 --> 00:58:22,300
Using the the tile map Y and the tile Map X.

1374
00:58:23,000 --> 00:58:26,300
And it's going to use essentially counts that we've put in there that

1375
00:58:26,300 --> 00:58:29,600
says, how many across each one is, right.

1376
00:58:29,600 --> 00:58:32,300
So we've basically got a tile map count X and a town map count.

1377
00:58:32,300 --> 00:58:32,800
Why?

1378
00:58:33,300 --> 00:58:35,000
And that'll go ahead and look.

1379
00:58:35,200 --> 00:58:40,500
Up an actual tile map like this, right?

1380
00:58:40,700 --> 00:58:43,500
And we will return that tilemap with that.

1381
00:58:43,600 --> 00:58:46,700
And now what we probably want to do is make sure that is guarded

1382
00:58:46,700 --> 00:58:47,100
itself.

1383
00:58:47,100 --> 00:58:49,700
So we'll look to see whether the tile Map X.

1384
00:58:50,000 --> 00:58:54,200
And tilemap, why are in bounds again using the exact same math that we

1385
00:58:54,200 --> 00:58:55,300
were using before?

1386
00:58:55,600 --> 00:59:02,000
Nothing out of the ordinary going on here like that world and we go

1387
00:59:02,000 --> 00:59:03,100
Sceptile map.

1388
00:59:04,500 --> 00:59:06,100
Oops, like that.

1389
00:59:07,000 --> 00:59:07,700
And

1390
00:59:09,400 --> 00:59:12,200
Same thing for wise.

1391
00:59:12,200 --> 00:59:14,600
So there's our wise, right?

1392
00:59:15,800 --> 00:59:16,400
There we go.

1393
00:59:16,900 --> 00:59:20,200
So we've got our get Tom a function and what that can do is that will

1394
00:59:20,200 --> 00:59:21,700
now give us a tile map, right?

1395
00:59:21,700 --> 00:59:25,600
There's our groups World point.

1396
00:59:25,600 --> 00:59:26,200
There we go.

1397
00:59:26,800 --> 00:59:34,200
That'll give us a tile map by saying, whatever the, whatever the title

1398
00:59:34,200 --> 00:59:35,600
X and Y, that we have there.

1399
00:59:37,300 --> 00:59:38,700
Go get Tom app.

1400
00:59:39,300 --> 00:59:42,700
Whatever that towel X and Y that we get passed in, we're going to look

1401
00:59:42,700 --> 00:59:46,500
up what the map is that corresponds to that tilemap X and Y, right?

1402
00:59:46,500 --> 00:59:50,900
We're going to say if that tile map is valid, if there was actually

1403
00:59:50,900 --> 00:59:52,000
tilemap at that location.

1404
00:59:52,000 --> 00:59:55,100
Then we're going to do this thing in that tile map.

1405
00:59:55,100 --> 00:59:56,800
Right now.

1406
00:59:56,800 --> 00:59:59,300
There's a bunch of stuff that we're like I said, we're out of time.

1407
00:59:59,300 --> 00:59:59,600
Let's dream.

1408
00:59:59,600 --> 00:59:59,900
There's a bunch of

1409
01:00:00,000 --> 01:00:01,400
We still have to fix which is unfortunate.

1410
01:00:01,400 --> 01:00:04,100
I was going to get this back to compiling and then we will start the

1411
01:00:04,100 --> 01:00:04,400
Q&A.

1412
01:00:04,400 --> 01:00:05,100
And tomorrow.

1413
01:00:05,100 --> 01:00:07,700
We will finish talking about all of the stuff that we need to do to

1414
01:00:07,700 --> 01:00:10,100
make this actually work properly.

1415
01:00:10,200 --> 01:00:10,600
Okay.

1416
01:00:11,100 --> 01:00:15,100
So, what did I forget to do Tom up.

1417
01:00:15,100 --> 01:00:18,800
Count, textile map count, why tilemap count X time account?

1418
01:00:18,800 --> 01:00:19,500
Why what?

1419
01:00:19,500 --> 01:00:20,000
What is it?

1420
01:00:20,000 --> 01:00:21,100
What is it complaining about?

1421
01:00:21,800 --> 01:00:22,400
Not a member.

1422
01:00:22,400 --> 01:00:22,600
Oh, oh.

1423
01:00:22,700 --> 01:00:23,200
Oh, yes.

1424
01:00:23,300 --> 01:00:25,800
This is actually the world pointer there.

1425
01:00:28,100 --> 01:00:31,800
Cannot convert to between.

1426
01:00:31,800 --> 01:00:32,300
Oh, yeah.

1427
01:00:32,300 --> 01:00:36,800
This is this is totally just that's just copy pasta as people say,

1428
01:00:37,100 --> 01:00:39,600
it's just hard for me to deal with when I'm talking on the stream.

1429
01:00:39,600 --> 01:00:41,700
It's hard for me to concentrate on making sure that I do.

1430
01:00:41,700 --> 01:00:45,000
My basic substitutions correctly, which is unfortunate.

1431
01:00:45,300 --> 01:00:48,700
All right, so we returned the tile map and this thing needs to return

1432
01:00:48,700 --> 01:00:51,100
a town map pointer, right?

1433
01:00:51,600 --> 01:00:52,200
There we go.

1434
01:00:52,300 --> 01:00:52,600
Okay.

1435
01:00:52,600 --> 01:00:53,600
So where are we at here?

1436
01:00:53,600 --> 01:00:54,800
We're still running properly.

1437
01:00:54,800 --> 01:00:57,300
Okay, so I want to start the Q&A, but I'm just going to briefly.

1438
01:00:57,500 --> 01:01:00,400
We say where we ended up and then tomorrow I'll recap it.

1439
01:01:00,700 --> 01:01:03,900
So basically all we're trying to do here is extend our notion of tile

1440
01:01:03,900 --> 01:01:06,900
Maps out to having multiple tile Maps, right?

1441
01:01:07,300 --> 01:01:09,600
And so right now, we're still doing everything as if we're just on

1442
01:01:09,600 --> 01:01:12,100
this one time at, but we want to do is be able to move between Tom

1443
01:01:12,100 --> 01:01:12,200
app.

1444
01:01:12,200 --> 01:01:14,600
So we introduced a second layer of coordinates.

1445
01:01:14,800 --> 01:01:16,400
That's our tile Map X and Y.

1446
01:01:16,800 --> 01:01:18,900
And that's going to tell us where in the tile Maps.

1447
01:01:18,900 --> 01:01:20,300
We are so we can pull out the right.

1448
01:01:20,300 --> 01:01:21,000
Tilemap.

1449
01:01:21,100 --> 01:01:23,000
Now, you'll notice there's some odd things here.

1450
01:01:23,000 --> 01:01:23,200
Right?

1451
01:01:23,200 --> 01:01:24,800
Look, we've still got upper left and up.

1452
01:01:24,800 --> 01:01:26,800
This is like a rendering coordinate, really.

1453
01:01:27,400 --> 01:01:30,000
And some stuff that we don't that doesn't really make sense for the

1454
01:01:30,000 --> 01:01:30,800
circumstance.

1455
01:01:31,000 --> 01:01:34,400
And so we definitely want to kind of start looking at these and seeing

1456
01:01:34,800 --> 01:01:37,200
if these really should be here in here or if they should be in the

1457
01:01:37,200 --> 01:01:38,500
world and stuff like that.

1458
01:01:39,000 --> 01:01:41,900
And we also have some stuff to think about in terms of what those mean

1459
01:01:41,900 --> 01:01:42,600
versus pixels.

1460
01:01:42,600 --> 01:01:44,300
So we've got a lot of stuff to work out here.

1461
01:01:44,500 --> 01:01:47,200
So I'm going to I'm not going to try and explain any more of that

1462
01:01:47,200 --> 01:01:48,300
because we need all day.

1463
01:01:48,300 --> 01:01:51,400
I think tomorrow to explain all what's going on there and move on.

1464
01:01:51,400 --> 01:01:54,600
But for now, let's end with that because we're like, I said, we're

1465
01:01:54,600 --> 01:01:56,100
still in a good working State, I think.

1466
01:01:56,100 --> 01:01:57,300
Even if we restore

1467
01:01:57,500 --> 01:01:58,300
Right from the beginning.

1468
01:01:58,700 --> 01:01:59,900
We're in a good working State.

1469
01:01:59,900 --> 01:02:01,700
And so that's a fine way to leave it.

1470
01:02:01,700 --> 01:02:04,200
And then tomorrow, we will concentrate on being able to move between

1471
01:02:04,200 --> 01:02:07,700
our town Maps which will be our which would be a great place to end

1472
01:02:07,700 --> 01:02:10,100
the week actually because then we got a guy moving around a little

1473
01:02:10,100 --> 01:02:14,100
world and that crowd of clears the way for starting to get into more

1474
01:02:14,500 --> 01:02:15,700
bigger and badder stuff.

1475
01:02:16,000 --> 01:02:18,800
All right, let's start the Q&A.

1476
01:02:19,500 --> 01:02:20,200
Basically.

1477
01:02:20,700 --> 01:02:24,200
I think it's now would be a good time to start the Q&A.

1478
01:02:24,600 --> 01:02:27,200
So let me go ahead and go in and

1479
01:02:27,400 --> 01:02:28,400
Put the filter on.

1480
01:02:28,400 --> 01:02:34,300
So please put Q: in front of your questions and keep the questions of

1481
01:02:34,300 --> 01:02:34,500
stuff.

1482
01:02:34,500 --> 01:02:35,400
We did on the stream today.

1483
01:02:35,400 --> 01:02:38,200
If you have questions, like how do I get into the game industry or

1484
01:02:38,200 --> 01:02:39,800
what language are you programming in and stuff like that?

1485
01:02:39,800 --> 01:02:43,800
Please come to a pre stream because before the stream starts, I answer

1486
01:02:43,800 --> 01:02:45,700
all kinds of questions like questions about anything.

1487
01:02:46,000 --> 01:02:51,400
And so yeah, so basically anything, please keep the questions in the

1488
01:02:51,400 --> 01:02:53,400
post stream to being stuff that's on the code.

1489
01:02:53,400 --> 01:02:55,400
We did today or code that we've done in a previous day.

1490
01:02:58,100 --> 01:02:58,800
Okay.

1491
01:03:11,700 --> 01:03:13,300
And Jean blow mentions.

1492
01:03:13,300 --> 01:03:16,000
That we have initialized any of the world stuff and he is correct.

1493
01:03:16,000 --> 01:03:16,900
We haven't yet.

1494
01:03:17,100 --> 01:03:21,300
I probably should do that in case we forget tomorrow and wonder what's

1495
01:03:21,300 --> 01:03:22,000
going on.

1496
01:03:22,300 --> 01:03:26,700
We should probably initialize these to actually be what they actually

1497
01:03:26,700 --> 01:03:27,400
are so far.

1498
01:03:30,000 --> 01:03:30,200
So there.

1499
01:03:30,200 --> 01:03:30,500
Yeah.

1500
01:03:31,800 --> 01:03:32,400
Thank you, John.

1501
01:03:37,600 --> 01:03:38,500
Let's see.

1502
01:03:44,500 --> 01:03:45,800
Why does player sometimes?

1503
01:03:45,800 --> 01:03:47,100
Stop a pixel away from the wall?

1504
01:03:47,100 --> 01:03:49,700
That's an excellent question and something that we'll be getting into

1505
01:03:49,700 --> 01:03:51,100
a lot more later.

1506
01:03:51,100 --> 01:03:53,900
When we do, like, a proper movement model for the player.

1507
01:03:54,800 --> 01:04:01,400
The reason is because if you look at what's happening here, well, you

1508
01:04:01,400 --> 01:04:04,600
know what, let's let's go ahead and step into the code actually and I

1509
01:04:04,600 --> 01:04:08,100
can show you exactly why it's it's happening.

1510
01:04:09,200 --> 01:04:14,100
So if I open, where is handmade, where is he?

1511
01:04:14,300 --> 01:04:15,500
Me dot CPP.

1512
01:04:15,500 --> 01:04:16,300
It's not in here.

1513
01:04:16,900 --> 01:04:19,800
All right, so let me just break a little break aside game update and

1514
01:04:19,800 --> 01:04:22,500
render game update and render.

1515
01:04:22,500 --> 01:04:23,600
So, the breakpoint.

1516
01:04:24,400 --> 01:04:25,100
Let's see.

1517
01:04:25,200 --> 01:04:26,300
Oh, yes.

1518
01:04:26,300 --> 01:04:29,200
Sorry, gotta gotta rebuild that guy.

1519
01:04:31,900 --> 01:04:32,500
All right.

1520
01:04:32,700 --> 01:04:35,400
So let's go ahead and break in here, and I could show you essentially

1521
01:04:35,400 --> 01:04:36,200
what's going on there.

1522
01:04:36,800 --> 01:04:38,400
So if you take a look.

1523
01:04:40,900 --> 01:04:45,300
Let's let some should I do this?

1524
01:04:45,600 --> 01:04:47,600
Let me grab the controller.

1525
01:04:47,600 --> 01:04:48,400
We don't have control.

1526
01:04:48,400 --> 01:04:52,500
I'm trying to figure out how I can stop this in a way that makes

1527
01:04:52,500 --> 01:04:56,300
sense, because I want to stop it.

1528
01:04:56,300 --> 01:04:56,700
Did move.

1529
01:04:56,700 --> 01:04:59,700
Oh, right.

1530
01:05:01,000 --> 01:05:01,600
I forgot.

1531
01:05:01,600 --> 01:05:02,800
We plan for this.

1532
01:05:02,800 --> 01:05:04,900
I already am at the point where I can do this.

1533
01:05:05,100 --> 01:05:08,200
I'm going to have this guy moving forwards, I'ma set the loop point,

1534
01:05:08,500 --> 01:05:09,000
right?

1535
01:05:09,000 --> 01:05:10,000
And then, I'm going to reset them.

1536
01:05:10,300 --> 01:05:11,000
So, there we go.

1537
01:05:11,300 --> 01:05:13,300
Perfect example of how we can use our Loop point.

1538
01:05:13,300 --> 01:05:15,500
So, our guy is moving this way, right?

1539
01:05:15,900 --> 01:05:17,500
I'm gonna go ahead and set a breakpoint in here.

1540
01:05:18,000 --> 01:05:19,900
We're going to look at the values, right?

1541
01:05:20,500 --> 01:05:24,000
So I come in here, and we look at what our deep layer X, and our deep

1542
01:05:24,000 --> 01:05:26,100
layer Y is right.

1543
01:05:26,800 --> 01:05:30,600
So our deep layer X and D player, why are going to be 64 when the

1544
01:05:30,600 --> 01:05:32,600
player, you know, if the players maybe Direction like, it's going to

1545
01:05:32,600 --> 01:05:34,100
be like 64 x, right.

1546
01:05:34,100 --> 01:05:37,900
So, you're going to move 64 pixels a second, right?

1547
01:05:38,400 --> 01:05:39,900
We're going to take the input.

1548
01:05:40,100 --> 01:05:42,500
Or the frame and put DT for a frame, right?

1549
01:05:42,500 --> 01:05:47,000
We're going to we're going to multiply that by this by the Deep layer

1550
01:05:47,000 --> 01:05:47,300
acts.

1551
01:05:47,300 --> 01:05:47,500
Right?

1552
01:05:47,500 --> 01:05:51,400
So we're going to multiply this value times D player X and that's how

1553
01:05:51,400 --> 01:05:52,900
far we're going to try to move them.

1554
01:05:53,200 --> 01:05:56,500
It's to pixels right to pixels.

1555
01:05:57,900 --> 01:05:59,800
So, the new player X in the new player, why?

1556
01:06:00,200 --> 01:06:03,900
Are two pixels away from where they were on the previous frame on any

1557
01:06:03,900 --> 01:06:05,600
given frame, okay.

1558
01:06:06,700 --> 01:06:11,800
So, what will happen is in the case, where we cannot move the player,

1559
01:06:12,100 --> 01:06:15,600
because the new point is inside the wall.

1560
01:06:16,600 --> 01:06:21,000
He could stop one pixel away from the wall because he's trying to move

1561
01:06:21,000 --> 01:06:22,000
to pixels forward.

1562
01:06:22,000 --> 01:06:26,400
It could be that he could have moved one more pixel and not been

1563
01:06:26,400 --> 01:06:26,900
inside.

1564
01:06:26,900 --> 01:06:28,600
The wall makes sense.

1565
01:06:30,000 --> 01:06:33,300
So when he goes forwards, you will note.

1566
01:06:33,900 --> 01:06:34,500
He.

1567
01:06:34,500 --> 01:06:35,900
He's always moving to pixels.

1568
01:06:35,900 --> 01:06:38,400
He could he could having literally that happens.

1569
01:06:38,400 --> 01:06:42,000
I'm going to stop the, I'm gonna stop the

1570
01:06:43,300 --> 01:06:44,300
The looping playback.

1571
01:06:44,700 --> 01:06:48,500
So when we get into the situation in that case, he happened to end

1572
01:06:48,500 --> 01:06:50,300
right on a pixel.

1573
01:06:50,500 --> 01:06:52,800
The, the moving too big for the time happen to end them in.

1574
01:06:52,800 --> 01:06:53,300
Right through it.

1575
01:06:53,300 --> 01:06:57,200
But but in other circumstances, he might not.

1576
01:06:57,200 --> 01:06:59,700
So trying to think if there's a good way to do that.

1577
01:06:59,800 --> 01:07:02,300
I think this is even it will only.

1578
01:07:02,300 --> 01:07:03,000
Yeah, there we go.

1579
01:07:05,100 --> 01:07:05,700
Right.

1580
01:07:06,400 --> 01:07:10,200
And so the way we would fix that simply like we're not going to use

1581
01:07:10,200 --> 01:07:11,600
this as the actual player movement code.

1582
01:07:11,600 --> 01:07:13,900
We're trying to build it, you know, build up to it.

1583
01:07:14,400 --> 01:07:16,200
But if you wanted to fix that, right?

1584
01:07:16,200 --> 01:07:18,500
You could imagine how you might want to do it.

1585
01:07:18,700 --> 01:07:20,000
You would want to figure out.

1586
01:07:20,000 --> 01:07:24,500
If you could still move the player some shorter distance and and not

1587
01:07:25,100 --> 01:07:26,200
hit the wall, right?

1588
01:07:26,300 --> 01:07:29,800
We could do something trivial and weird if we wanted to write.

1589
01:07:29,900 --> 01:07:32,300
We could go in here and do something crazy.

1590
01:07:32,400 --> 01:07:32,900
Like,

1591
01:07:35,100 --> 01:07:37,600
And this is not, I would not recommend doing this.

1592
01:07:37,900 --> 01:07:44,000
But if we wanted to write, we could do something like this Buhl.

1593
01:07:44,300 --> 01:07:48,000
32 moved player, right?

1594
01:07:48,600 --> 01:07:55,300
Move player equals false while not moved player or maybe something

1595
01:07:55,300 --> 01:07:58,400
more like four inch fry equals zero.

1596
01:07:58,400 --> 01:08:04,400
Try is less than 4 + + try and we'll leave not move.

1597
01:08:04,500 --> 01:08:10,000
Player in there, something like this and what we could do here.

1598
01:08:10,000 --> 01:08:12,900
And again, this is not at all what you want to do, but I'm just kind

1599
01:08:12,900 --> 01:08:14,700
of illustrate to you further.

1600
01:08:14,700 --> 01:08:16,300
What's actually happening in the code.

1601
01:08:17,100 --> 01:08:20,100
We could try to move the player if we can't move the player, you know,

1602
01:08:20,100 --> 01:08:22,899
if you can, we say moved players was true and we break out of the

1603
01:08:22,899 --> 01:08:23,300
loop.

1604
01:08:23,899 --> 01:08:27,300
If we can't, then we try making a smaller.

1605
01:08:27,300 --> 01:08:28,899
We try going a little bit less.

1606
01:08:28,899 --> 01:08:34,399
So we Sadie player X, you know, x equals, you know point.

1607
01:08:34,800 --> 01:08:36,000
Eight or something.

1608
01:08:36,000 --> 01:08:39,899
So, we move it a little, we just reduce the amount that we try to

1609
01:08:39,899 --> 01:08:40,399
move.

1610
01:08:40,500 --> 01:08:41,000
Right?

1611
01:08:41,200 --> 01:08:42,000
Does that make sense?

1612
01:08:42,700 --> 01:08:46,700
And so now when we move you can see, I but I but right back up to the

1613
01:08:48,000 --> 01:08:48,800
every time, right?

1614
01:08:48,800 --> 01:08:52,100
I don't I don't stop that one pixel way because what it does is it

1615
01:08:52,100 --> 01:08:52,800
gets there.

1616
01:08:52,899 --> 01:08:56,700
It gets to the point where it where it has the problem and it's a one

1617
01:08:56,700 --> 01:08:57,700
away righto.

1618
01:08:57,700 --> 01:08:59,899
Well, or maybe not that's not

1619
01:09:00,500 --> 01:09:01,100
Should work.

1620
01:09:01,300 --> 01:09:01,600
Let's see.

1621
01:09:01,600 --> 01:09:02,200
What happened there.

1622
01:09:03,100 --> 01:09:03,800
What did I do?

1623
01:09:03,800 --> 01:09:05,600
What did I do wrong?

1624
01:09:07,899 --> 01:09:09,800
This should have worked.

1625
01:09:17,700 --> 01:09:18,600
Let's, let's take it.

1626
01:09:18,600 --> 01:09:19,500
Let's take a look in there.

1627
01:09:20,100 --> 01:09:21,100
I want to see what's going on.

1628
01:09:22,399 --> 01:09:24,200
So, let me set a breakpoint in here.

1629
01:09:27,100 --> 01:09:27,700
What?

1630
01:09:29,399 --> 01:09:30,100
What happened?

1631
01:09:33,899 --> 01:09:35,300
Why can I not set a breakpoint?

1632
01:09:35,899 --> 01:09:36,600
Is this msv.

1633
01:09:36,600 --> 01:09:37,399
See not loading.

1634
01:09:37,399 --> 01:09:38,200
Our pdb?

1635
01:09:41,800 --> 01:09:42,800
What is the problem?

1636
01:09:45,399 --> 01:09:46,899
Is this just me being stupid.

1637
01:09:47,300 --> 01:09:48,700
It, maybe me being stupid.

1638
01:09:49,200 --> 01:09:50,100
I want to see what happens.

1639
01:09:50,100 --> 01:09:51,200
If I rebuild this.

1640
01:09:51,600 --> 01:09:52,100
That would suck.

1641
01:09:52,100 --> 01:09:58,800
If M SV, C can't handle us bus rebuilding, our pdb.

1642
01:10:02,300 --> 01:10:03,100
That's awful.

1643
01:10:04,100 --> 01:10:05,400
That's really unfortunate.

1644
01:10:05,400 --> 01:10:06,200
That that's true.

1645
01:10:07,600 --> 01:10:11,300
Well, anyway, I guess I can see what's going on here now anyways, so

1646
01:10:11,300 --> 01:10:13,000
I'll double check that.

1647
01:10:13,000 --> 01:10:13,900
The bug is still there.

1648
01:10:15,000 --> 01:10:17,300
So, I wonder if it just didn't yes, the bug still there.

1649
01:10:17,300 --> 01:10:18,000
So, that's fine.

1650
01:10:18,300 --> 01:10:19,400
So, I can still find the book.

1651
01:10:19,500 --> 01:10:21,600
So it reloads are code, but it won't reload.

1652
01:10:21,600 --> 01:10:23,900
Our pdb is it won't we load our debug info?

1653
01:10:23,900 --> 01:10:26,300
So it can't set a breakpoint properly or what's the deal?

1654
01:10:27,200 --> 01:10:28,700
Is this just further msv.

1655
01:10:28,700 --> 01:10:30,400
See, being lousy at its job.

1656
01:10:31,200 --> 01:10:32,200
That's unfortunate.

1657
01:10:32,600 --> 01:10:34,400
Well anyway, so I can see, you can see there.

1658
01:10:34,400 --> 01:10:35,900
I'm not going all the way up.

1659
01:10:35,900 --> 01:10:37,600
I'm stopping one pixel away on that one.

1660
01:10:38,000 --> 01:10:41,800
So let me take a look and see what happens during that.

1661
01:10:41,900 --> 01:10:44,000
So when I hit here, right?

1662
01:10:44,400 --> 01:10:44,700
Where

1663
01:10:44,800 --> 01:10:46,600
My player X.

1664
01:10:46,600 --> 01:10:48,000
So here's my game state.

1665
01:10:48,100 --> 01:10:50,000
I'm going to take a look at it player ex-player.

1666
01:10:50,000 --> 01:10:51,300
Why, right?

1667
01:10:51,500 --> 01:10:57,200
And, and I now have a deep layer X and a deep layer y of

1668
01:10:59,000 --> 01:11:02,800
Zero and negative 64 and I want to go ahead and see what those are.

1669
01:11:03,000 --> 01:11:04,600
I want to see what that y value is.

1670
01:11:05,100 --> 01:11:11,100
So it's - -2.1 so we were unable to do the move on to pixels.

1671
01:11:11,200 --> 01:11:13,300
So now I'm going to go ahead and make it less.

1672
01:11:13,300 --> 01:11:15,600
So it's going to be one point seven pixels.

1673
01:11:15,600 --> 01:11:16,700
That's going to try to move now.

1674
01:11:17,200 --> 01:11:20,500
So now tries to do that and then it reduces it again.

1675
01:11:20,700 --> 01:11:24,700
So it just never reduces it quite low in enough, I guess is the

1676
01:11:24,700 --> 01:11:27,100
problem or know, it does does it.

1677
01:11:27,100 --> 01:11:27,300
Oh, no.

1678
01:11:27,300 --> 01:11:28,600
It doesn't quite do it justice.

1679
01:11:28,800 --> 01:11:33,400
Get a couple more tries see if that that solves the problem there.

1680
01:11:33,700 --> 01:11:36,600
I'm kind of disturbed that MSP see won't we load our pdb though?

1681
01:11:36,700 --> 01:11:38,200
That's kind of, that's really annoying.

1682
01:11:38,700 --> 01:11:39,800
That's really, really annoying.

1683
01:11:41,600 --> 01:11:45,700
Okay, so I think we were we are now at the point where we're stopping.

1684
01:11:46,500 --> 01:11:49,100
Yeah sort of at the right places.

1685
01:11:49,100 --> 01:11:51,600
I believe I should probably add some kind of key to make us move a

1686
01:11:51,600 --> 01:11:52,400
little faster.

1687
01:11:53,500 --> 01:11:54,000
Through.

1688
01:11:55,100 --> 01:11:57,700
Yeah, so you can kind of see what I'm talking about here, right?

1689
01:12:00,900 --> 01:12:05,800
Yeah, so basically that's just a really cheesy way of saying if you

1690
01:12:05,800 --> 01:12:08,400
can't do the move that you were trying to do, try moving a little

1691
01:12:08,400 --> 01:12:08,800
less.

1692
01:12:09,100 --> 01:12:12,300
And basically this all comes from the fact that we're not doing the

1693
01:12:12,300 --> 01:12:14,400
movement continuously, right?

1694
01:12:15,200 --> 01:12:18,900
Essentially, what we would want to do and this is the sort of stuff

1695
01:12:18,900 --> 01:12:23,800
that we'll be getting into later is if we have an obstacle of some

1696
01:12:23,800 --> 01:12:27,800
kind and we have a player and the player is trying to move between

1697
01:12:27,800 --> 01:12:30,100
two, you know, this is over the time step, the player should

1698
01:12:30,300 --> 01:12:31,600
From here to here.

1699
01:12:32,100 --> 01:12:35,600
What we want to do is we don't want to test this and say is this valid

1700
01:12:35,600 --> 01:12:37,300
or not and then use that.

1701
01:12:37,300 --> 01:12:37,800
Right?

1702
01:12:37,800 --> 01:12:38,700
And there's two reasons.

1703
01:12:38,700 --> 01:12:39,600
We don't want to do it.

1704
01:12:39,600 --> 01:12:39,800
Right?

1705
01:12:39,800 --> 01:12:41,900
And let's say this is our obstacle, right?

1706
01:12:41,900 --> 01:12:42,600
There's two reasons.

1707
01:12:42,600 --> 01:12:43,600
We don't want to do it.

1708
01:12:44,100 --> 01:12:47,900
One is the one that you already asked about which is that if the move

1709
01:12:47,900 --> 01:12:51,500
can't happen and we just deny it flat out, then he standing here.

1710
01:12:51,500 --> 01:12:53,200
But really he should be standing right here.

1711
01:12:53,200 --> 01:12:56,200
We wanted him to move as far as he could in that direction, right?

1712
01:12:56,300 --> 01:12:57,500
So that's a problem.

1713
01:12:57,500 --> 01:12:57,800
Right?

1714
01:12:57,800 --> 01:13:00,100
That's problem one, but we've got another problem and that

1715
01:13:00,200 --> 01:13:01,800
That is the thin wall problem.

1716
01:13:02,000 --> 01:13:03,600
So let's say we've got a thing.

1717
01:13:03,600 --> 01:13:05,300
That's basically looks like this.

1718
01:13:05,300 --> 01:13:08,500
The player is here and the time, step would move him here.

1719
01:13:08,700 --> 01:13:12,100
Well, if all we do is check the destination that he goes to Hill

1720
01:13:12,100 --> 01:13:15,100
Tunnel right on through that wall and that's a gameplay problem.

1721
01:13:15,100 --> 01:13:16,900
He's not supposed to be able to Tunnel through that wall.

1722
01:13:17,200 --> 01:13:17,800
Furthermore.

1723
01:13:17,800 --> 01:13:19,700
It creates a time-dependent.

1724
01:13:19,700 --> 01:13:22,500
Tunneling problem at 30 frames a second.

1725
01:13:22,500 --> 01:13:25,300
Maybe that's how far he moves, but at 60 frames a second.

1726
01:13:25,300 --> 01:13:26,600
He only moves fast that far.

1727
01:13:26,800 --> 01:13:29,100
That means four people playing at 60 frames a second.

1728
01:13:29,200 --> 01:13:30,000
They can't go through the

1729
01:13:30,500 --> 01:13:32,900
And for people who are playing at 30 frames a second, they can't.

1730
01:13:33,400 --> 01:13:34,500
So that's total you.

1731
01:13:34,500 --> 01:13:37,700
No, no, no, no, no, no, like all bad.

1732
01:13:37,700 --> 01:13:38,200
Right.

1733
01:13:38,300 --> 01:13:41,600
So I want to underscore just in case it wasn't clear that like, this

1734
01:13:41,600 --> 01:13:45,400
is not, we don't want to do be doing any of this stuff in the final

1735
01:13:45,400 --> 01:13:45,600
game.

1736
01:13:45,600 --> 01:13:48,200
This is just doing the simplest possible thing so that we can sort of

1737
01:13:48,200 --> 01:13:53,700
see how to start structuring like the storage of the game structures,

1738
01:13:53,700 --> 01:13:57,300
and that sort of stuff and just to get things working in a reasonable.

1739
01:13:58,200 --> 01:13:59,100
Sort of fashion.

1740
01:13:59,600 --> 01:14:02,100
And so we're just going to leave that bug in there for now because

1741
01:14:02,100 --> 01:14:05,600
we'll be doing different things for the player movement system, when

1742
01:14:05,600 --> 01:14:08,400
we go to actually tune it, if that makes sense.

1743
01:14:15,100 --> 01:14:18,400
It almost sounds like you could get the wrong tile map when trying to

1744
01:14:18,400 --> 01:14:20,300
move between Tom apps with the function.

1745
01:14:20,300 --> 01:14:21,600
You just did.

1746
01:14:24,800 --> 01:14:26,000
I'm not sure exactly what that mean.

1747
01:14:26,000 --> 01:14:26,500
Sorry.

1748
01:14:32,700 --> 01:14:34,000
Let's see.

1749
01:14:37,700 --> 01:14:41,500
Are your variables for Tom apps too similar to each other or am I just

1750
01:14:41,600 --> 01:14:43,200
easily confused?

1751
01:14:44,400 --> 01:14:48,700
I wouldn't say that you're too easily confused because one of the next

1752
01:14:48,700 --> 01:14:53,600
things that we'll be doing obviously is like having all these x's and

1753
01:14:53,600 --> 01:14:57,100
y's and widths and Heights and stuff can get confusing.

1754
01:14:57,100 --> 01:14:59,900
And so one of the things we'll be doing probably.

1755
01:15:00,000 --> 01:15:04,100
We probably not tomorrow but next week is introducing structures that

1756
01:15:04,100 --> 01:15:07,300
help manage those things like will be interesting vectors and things

1757
01:15:07,300 --> 01:15:09,800
like that to try and simplify these sorts of things.

1758
01:15:09,800 --> 01:15:14,900
So yeah, I mean, I would say yes, they are confusing and that is a

1759
01:15:14,900 --> 01:15:18,600
good thing to notice because that is something that we will be

1760
01:15:18,600 --> 01:15:21,000
addressing as we go forward, but I can only address one thing at a

1761
01:15:21,000 --> 01:15:23,500
time on the stream and I didn't want to just type this out.

1762
01:15:23,500 --> 01:15:26,400
The correct way to do it or anything because I wanted to show how we

1763
01:15:26,400 --> 01:15:29,700
sort of Loft up into the correct into the correct structure.

1764
01:15:37,600 --> 01:15:38,800
Let's see.

1765
01:15:38,800 --> 01:15:41,100
A lot of people are asking questions that are more like pre stream

1766
01:15:41,100 --> 01:15:41,600
questions.

1767
01:15:41,600 --> 01:15:46,400
If you want to ask questions, like some of these which are is C or C++

1768
01:15:46,400 --> 01:15:49,000
best, if you want to code games and have you thought about teaching at

1769
01:15:49,000 --> 01:15:49,800
universities?

1770
01:15:49,800 --> 01:15:50,700
What are on your hands?

1771
01:15:50,700 --> 01:15:53,800
Those sorts of things, any of any questions that are just not related

1772
01:15:53,800 --> 01:15:57,600
to the code that we're working on today, are in a previous day, come

1773
01:15:57,600 --> 01:16:01,000
to the priest Fame, come 15 minutes before the stream starts.

1774
01:16:01,000 --> 01:16:05,300
I'm usually, you know, before the the scheduled time and I'm usually

1775
01:16:05,300 --> 01:16:07,200
on and answering questions like that.

1776
01:16:13,500 --> 01:16:17,200
Is there an advantage using Blue 32 instead of Boule 8-bit?

1777
01:16:17,200 --> 01:16:17,700
Yes.

1778
01:16:18,100 --> 01:16:21,700
I mean, basically you don't want to be using values that aren't the

1779
01:16:21,700 --> 01:16:23,500
most convenient value for the processor.

1780
01:16:23,500 --> 01:16:26,500
And so 8-bit is typically not the most convenient value.

1781
01:16:26,500 --> 01:16:29,900
It's not aligned to a 32-bit boundary and there's a bunch of things.

1782
01:16:29,900 --> 01:16:32,200
I mean, we'll cover this a little bit more later.

1783
01:16:32,200 --> 01:16:36,400
But basically what you want to do is you want your Boolean values when

1784
01:16:36,400 --> 01:16:37,800
you're just throwing them around.

1785
01:16:38,100 --> 01:16:40,300
You want them to be, basically, whatever the type is that the

1786
01:16:40,300 --> 01:16:42,500
processor is most comfortable dealing with if that makes

1787
01:16:42,700 --> 01:16:46,600
That's so when you store them, you might want to pack them into bit

1788
01:16:46,600 --> 01:16:50,200
fields, which will probably do in the future for things and when

1789
01:16:50,200 --> 01:16:52,500
you're just Computing with them, you typically want them to be just

1790
01:16:52,500 --> 01:16:52,800
whatever.

1791
01:16:52,800 --> 01:16:55,200
The easiest value is for the processor to deal with, which is usually

1792
01:16:55,200 --> 01:16:56,000
32 bit.

1793
01:17:08,400 --> 01:17:11,000
Can you go over briefly how to encode the tiled data?

1794
01:17:11,000 --> 01:17:15,200
In a single Unit 32 I couldn't get it the first time.

1795
01:17:17,400 --> 01:17:22,500
Well, we haven't really encoded any tile day to get, I just used a un

1796
01:17:22,500 --> 01:17:27,500
32 because I needed some number that would say, occupied or not.

1797
01:17:27,600 --> 01:17:31,300
So, I just used a 32-bit value and we all were doing is storing a zero

1798
01:17:31,300 --> 01:17:33,500
and a one in there at the moment.

1799
01:17:33,700 --> 01:17:35,600
So this will get more complicated.

1800
01:17:35,600 --> 01:17:38,500
Our tile structure will not be a un 32 in the future.

1801
01:17:38,500 --> 01:17:41,400
It'll be some kind of struck that has information in it.

1802
01:17:42,100 --> 01:17:45,800
Like what, what the tiles you know, what kind of talent is that Earth

1803
01:17:45,800 --> 01:17:46,200
is at War.

1804
01:17:46,400 --> 01:17:49,300
Otter, is it, you know, whatever and like what its properties are, is

1805
01:17:49,300 --> 01:17:49,900
it magical?

1806
01:17:49,900 --> 01:17:50,800
It doesn't have health on it.

1807
01:17:50,800 --> 01:17:51,700
Those sorts of things.

1808
01:17:56,700 --> 01:17:59,600
why does left and right side Collision work, but not the top and

1809
01:18:00,100 --> 01:18:03,800
So the reason is because I don't know if you've ever seen.

1810
01:18:03,800 --> 01:18:10,000
So so here's you know, if you've ever seen like oops.

1811
01:18:11,600 --> 01:18:16,800
If you've ever seen something like a standard, tilemap game, not sure

1812
01:18:16,800 --> 01:18:17,400
how to show this.

1813
01:18:17,400 --> 01:18:17,900
Well, okay.

1814
01:18:17,900 --> 01:18:21,300
So if you've ever seen a game, a standard tilemap game, right?

1815
01:18:21,700 --> 01:18:24,600
They tend to look like they've got like a wall or something like this

1816
01:18:24,600 --> 01:18:26,900
and then maybe there's like a rock here or something.

1817
01:18:26,900 --> 01:18:29,000
So, you know, this sort of thing.

1818
01:18:32,100 --> 01:18:33,400
And the hero right?

1819
01:18:33,400 --> 01:18:36,700
Is like this little dude, you know who's hanging around and he's got

1820
01:18:36,700 --> 01:18:38,000
like a sword, right?

1821
01:18:38,000 --> 01:18:41,200
And all that kind of stuff when he walks around.

1822
01:18:41,400 --> 01:18:45,100
He you know, he can't walk into an obstacle.

1823
01:18:45,100 --> 01:18:47,100
That's like that's like left or right.

1824
01:18:47,100 --> 01:18:48,900
He can't interpenetrate them.

1825
01:18:49,300 --> 01:18:53,000
But when he walks up to something like this rock, he can actually

1826
01:18:53,000 --> 01:18:55,100
Eclipse it quite a bit, right?

1827
01:18:55,100 --> 01:18:58,000
You can kind of stand right in front of the rock with his sword or

1828
01:18:58,000 --> 01:18:58,900
whatever, right?

1829
01:18:58,900 --> 01:19:00,800
And that's because of the sort of fake purse.

1830
01:19:01,000 --> 01:19:05,100
Div that games have we're like, they're sort of they're not really top

1831
01:19:05,100 --> 01:19:05,400
down.

1832
01:19:05,400 --> 01:19:07,800
A lot of times are sort of like fake.

1833
01:19:08,000 --> 01:19:11,100
Three quarters were even though like the tiles are square.

1834
01:19:11,600 --> 01:19:15,300
The guy is drawn as if you're kind of looking at him from the side.

1835
01:19:15,900 --> 01:19:20,800
So we don't we want to let the Collision allow the guy to walk all the

1836
01:19:20,800 --> 01:19:23,800
way up there and maybe you know, maybe we want them to stop a little

1837
01:19:23,800 --> 01:19:29,700
bit away from it, but just a little bit not all the way and when when

1838
01:19:29,700 --> 01:19:30,900
it comes down,

1839
01:19:31,000 --> 01:19:31,800
Onto something.

1840
01:19:32,300 --> 01:19:34,800
Then we do want to stop in their potentially or maybe we want to let

1841
01:19:34,800 --> 01:19:35,900
them go a little bit behind it.

1842
01:19:35,900 --> 01:19:36,600
I'm not sure.

1843
01:19:37,300 --> 01:19:40,900
But either way, you can kind of see what I'm getting at there.

1844
01:19:40,900 --> 01:19:42,900
There's like this kind of weird perspective rules.

1845
01:19:42,900 --> 01:19:45,900
So we don't know exactly how we want to model that in the game.

1846
01:19:45,900 --> 01:19:48,000
But that's why I'm allowing him to do that.

1847
01:19:48,200 --> 01:19:52,200
The reason in the code that it works that way, like the re the reason

1848
01:19:52,200 --> 01:19:54,200
how the code accomplices that is.

1849
01:19:54,200 --> 01:19:56,100
We're checking three points for collision.

1850
01:19:56,600 --> 01:20:00,800
And those three points are there there.

1851
01:20:01,300 --> 01:20:03,800
And there we're not checking any points appear.

1852
01:20:04,000 --> 01:20:08,400
So it stops when this point hits the edge and it stops when this point

1853
01:20:08,400 --> 01:20:10,100
hits the edge, right?

1854
01:20:12,300 --> 01:20:14,300
But it doesn't stop when these points in anything.

1855
01:20:14,300 --> 01:20:16,900
Those points can anything they want, so it will only stop.

1856
01:20:16,900 --> 01:20:19,900
Once one of these points gets up and hits the tile, right?

1857
01:20:19,900 --> 01:20:20,700
Which is right there.

1858
01:20:36,400 --> 01:20:39,200
Why are you using number 32?

1859
01:20:40,700 --> 01:20:43,500
I'm not sure what that means.

1860
01:20:43,700 --> 01:20:47,000
Why save tile width height in each time that if these values never

1861
01:20:47,000 --> 01:20:50,500
change, so we probably won't, I guess this is what I was saying

1862
01:20:50,500 --> 01:20:50,800
before.

1863
01:20:50,800 --> 01:20:54,000
We just we had to stop the stream before we lofted stuff out of the

1864
01:20:54,000 --> 01:20:56,400
Tom app and into the world struct.

1865
01:20:56,400 --> 01:20:59,800
So yeah, sorry that we just didn't get there.

1866
01:21:03,000 --> 01:21:05,600
What are the differences between structs and classes?

1867
01:21:05,600 --> 01:21:07,700
There is no difference between a struct in a class.

1868
01:21:08,900 --> 01:21:13,200
Basically, C++ just uses a different Access Control depending on which

1869
01:21:13,200 --> 01:21:14,200
you put pick.

1870
01:21:14,500 --> 01:21:20,100
So, basically struct essentially has no restrictions on who can access

1871
01:21:20,100 --> 01:21:20,600
its members.

1872
01:21:20,600 --> 01:21:26,400
So if I have struct Foo into X, and I want to access that somewhere.

1873
01:21:26,400 --> 01:21:32,000
So I'm inside Main and I have one of these foo foo foo X.

1874
01:21:32,600 --> 01:21:34,700
That's allowed I can access X.

1875
01:21:35,200 --> 01:21:36,400
If it was a class.

1876
01:21:36,500 --> 01:21:39,600
I would not be able to this would give an error, right?

1877
01:21:41,400 --> 01:21:44,100
It would say that, you know, only it's a private member.

1878
01:21:45,000 --> 01:21:48,300
And so really, the only difference between them is you can think of if

1879
01:21:48,300 --> 01:21:53,100
there was some master thing, if there was some Uber guy called like,

1880
01:21:55,100 --> 01:22:01,300
You know, storage or something, then storage Foo would be or I, you

1881
01:22:01,300 --> 01:22:02,600
know, I don't even introduced that.

1882
01:22:03,400 --> 01:22:08,900
So, struct Foo right is just class Foo with a public on it.

1883
01:22:09,100 --> 01:22:13,000
So struct Foo equals class Foo with public at the top.

1884
01:22:13,500 --> 01:22:15,600
That's that's what, that's what struck through is.

1885
01:22:16,000 --> 01:22:18,800
And the opposite is true, as well class.

1886
01:22:18,800 --> 01:22:21,600
Foo is the same as struct Foo with a private at the top.

1887
01:22:22,100 --> 01:22:24,400
So that's that's that's it.

1888
01:22:24,600 --> 01:22:26,400
No other real difference between them.

1889
01:22:28,000 --> 01:22:29,700
I mean the same is true of inheritance.

1890
01:22:29,700 --> 01:22:35,300
Like if I inherit from something, if I say public Bar here, that would

1891
01:22:35,300 --> 01:22:36,000
be the same as me.

1892
01:22:36,000 --> 01:22:37,300
Not saying that, right?

1893
01:22:37,300 --> 01:22:41,000
I could I could and and and vice versa like I could inherit the sky

1894
01:22:41,000 --> 01:22:43,200
privately here and I would be equivalent to what would happen.

1895
01:22:43,200 --> 01:22:45,800
I think I'm pretty sure that's I don't use in her.

1896
01:22:45,800 --> 01:22:48,700
I'd last time I use inheritance was like 2001 or something.

1897
01:22:48,700 --> 01:22:49,300
So I don't remember.

1898
01:22:49,300 --> 01:22:52,000
But I believe inheritance does the same thing where it's like the

1899
01:22:52,000 --> 01:22:53,600
public and private is inverted.

1900
01:23:01,000 --> 01:23:02,700
Let's see.

1901
01:23:13,700 --> 01:23:15,600
Not many questions about the code.

1902
01:23:15,600 --> 01:23:18,200
Do you always put in through to can you use only enter?

1903
01:23:18,200 --> 01:23:20,600
Okay, so I see what I see what the question is about now.

1904
01:23:21,500 --> 01:23:27,200
So basically what we've done here is so in t, in C is has

1905
01:23:27,200 --> 01:23:28,500
traditionally been ambiguous.

1906
01:23:29,100 --> 01:23:32,000
There is no telling how big it is.

1907
01:23:32,100 --> 01:23:36,800
It could be eight bits on old old computers.

1908
01:23:36,900 --> 01:23:38,900
It could be 16 bits on more modern ones.

1909
01:23:38,900 --> 01:23:41,400
It could be 32 bits on today's computers or in the future.

1910
01:23:41,400 --> 01:23:43,200
It might even be 64 bits.

1911
01:23:43,400 --> 01:23:45,000
Sometimes right?

1912
01:23:45,600 --> 01:23:46,000
Who knows?

1913
01:23:46,000 --> 01:23:46,900
Where it could go from there.

1914
01:23:47,400 --> 01:23:50,200
So, when you say into, you have no idea how big of a number you can

1915
01:23:50,200 --> 01:23:51,200
store in.

1916
01:23:51,200 --> 01:23:54,300
See, I don't think I, maybe there's something the spec that says it

1917
01:23:54,300 --> 01:23:58,600
has to be at least eight bits or at least 16 or something, but in

1918
01:23:58,600 --> 01:23:59,800
general, I don't think has

1919
01:24:00,000 --> 01:24:03,700
To be any particular size that makes sense.

1920
01:24:04,700 --> 01:24:07,300
So, what we want to do when we're programming, most of the time is

1921
01:24:07,300 --> 01:24:10,400
specify, what at least, we think the minimum size, we need is for

1922
01:24:10,400 --> 01:24:12,200
things on the platform.

1923
01:24:12,400 --> 01:24:12,900
Right?

1924
01:24:12,900 --> 01:24:17,300
So I'm using in 32 2, B II defined in 32 to basically be something

1925
01:24:17,300 --> 01:24:20,000
that is a 32-bit integer because that's usually what I want.

1926
01:24:20,100 --> 01:24:23,500
And when I want a 64-bit, integer, L, stay in 64, etc.

1927
01:24:23,500 --> 01:24:23,800
Etc.

1928
01:24:23,800 --> 01:24:25,500
So you can see these types I made up here.

1929
01:24:25,900 --> 01:24:27,600
So there's nothing wrong with using it.

1930
01:24:27,700 --> 01:24:29,800
It's just that it's harder to control because

1931
01:24:30,000 --> 01:24:32,100
You don't have any idea what size that actually is.

1932
01:24:32,900 --> 01:24:34,500
So so that's basically it.

1933
01:24:46,600 --> 01:24:49,600
Wait, so in 32 is because you want to make the game for 32-bit

1934
01:24:49,600 --> 01:24:50,300
computers and later.

1935
01:24:50,300 --> 01:24:51,800
You will optimize it for 64-bit computers.

1936
01:24:51,800 --> 01:24:57,100
No, it is simply because I want to make sure that the values that I'm

1937
01:24:57,100 --> 01:24:59,200
talking about are 32 bits wide.

1938
01:24:59,700 --> 01:25:01,600
It doesn't have anything to do with optimization.

1939
01:25:01,600 --> 01:25:04,800
It has to do with the fact that 16 bits would be too few, if that

1940
01:25:04,800 --> 01:25:05,400
makes sense.

1941
01:25:05,600 --> 01:25:10,600
And also the fact that the that x86 and x64 tend to be very happy

1942
01:25:10,600 --> 01:25:11,700
working with 32-bit value.

1943
01:25:11,700 --> 01:25:13,500
So you tend to want to use those most of the time.

1944
01:25:14,700 --> 01:25:15,400
Because they work.

1945
01:25:15,400 --> 01:25:20,000
Good on aligned 32-bit boundaries and and so on and so forth.

1946
01:25:20,300 --> 01:25:24,500
So this is this code that were running right now is actually being

1947
01:25:24,500 --> 01:25:29,000
compiled a 64-bit code, but we don't use 64-bit integers because a lot

1948
01:25:29,000 --> 01:25:33,100
of times they take up more space and we don't actually need the extra

1949
01:25:33,100 --> 01:25:34,700
32 bits that they provide.

1950
01:25:35,300 --> 01:25:39,700
And so, and they also are more expensive to compute with because when

1951
01:25:39,700 --> 01:25:43,800
you're using like Cindy and stuff, a 32-bit integer, you can do for

1952
01:25:43,800 --> 01:25:43,800
wha

1953
01:25:44,000 --> 01:25:48,500
I adore 8 wide or 16 y depending on the width of the CMD unit.

1954
01:25:49,200 --> 01:25:50,100
Where a 64 bit.

1955
01:25:50,100 --> 01:25:55,500
You get half that so yeah, so so no, we're already compiling 64-bit

1956
01:25:55,800 --> 01:25:58,900
and optimizing for 64-bit basically when we actually start doing

1957
01:25:58,900 --> 01:26:03,600
optimizations, but we're saying that we want to store 32-bit values in

1958
01:26:03,600 --> 01:26:04,100
places.

1959
01:26:06,600 --> 01:26:08,800
The player moves faster diagonally than it is supposed to.

1960
01:26:08,800 --> 01:26:10,600
Are you planning on fixing that?

1961
01:26:10,900 --> 01:26:14,300
Well, did you look at the code before asking that question?

1962
01:26:14,700 --> 01:26:16,300
I don't think that you did.

1963
01:26:16,500 --> 01:26:22,100
Because if you notice, it says right here to do Casey, diagonal will

1964
01:26:22,100 --> 01:26:22,900
be faster fixed.

1965
01:26:22,900 --> 01:26:24,100
Once we have vectors.

1966
01:26:25,600 --> 01:26:27,200
Did you notice that?

1967
01:26:28,100 --> 01:26:30,400
Why did you not look at that?

1968
01:26:30,900 --> 01:26:31,900
Hmm?

1969
01:26:32,600 --> 01:26:33,400
Hmm.

1970
01:26:35,100 --> 01:26:36,200
Maybe you were just going by the video.

1971
01:26:36,200 --> 01:26:37,800
You don't have access to source code and that's fine.

1972
01:26:38,500 --> 01:26:39,900
But we have a comment for that.

1973
01:26:40,700 --> 01:26:43,400
How do you plan on handling code duplication in enemies or other game

1974
01:26:43,400 --> 01:26:45,000
entities without inheritance?

1975
01:26:45,300 --> 01:26:47,300
Well, we'll have to see when we get there.

1976
01:26:55,900 --> 01:26:59,900
Looks like there are no more questions about today's.

1977
01:27:00,000 --> 01:27:01,200
Code or previous code.

1978
01:27:01,200 --> 01:27:02,300
So, I think

1979
01:27:03,300 --> 01:27:05,800
I think we're basically done.

1980
01:27:12,000 --> 01:27:13,600
I'm not familiar with pound Define.

1981
01:27:13,600 --> 01:27:14,600
What is it used for?

1982
01:27:15,000 --> 01:27:16,700
Well, pound if I is just a macro.

1983
01:27:17,000 --> 01:27:20,500
So all pound Define does is pound to find, says anywhere that you see

1984
01:27:20,500 --> 01:27:22,700
this string, replace it with this string.

1985
01:27:23,700 --> 01:27:26,800
It's just a straight substitution in text form.

1986
01:27:27,000 --> 01:27:30,000
So instead of like a constant that actually has a type.

1987
01:27:30,000 --> 01:27:33,400
Like, for example, if you say, you know, in team concert Foo equals 4

1988
01:27:33,400 --> 01:27:37,800
or whatever that means that this is actually an integer type that gets

1989
01:27:37,800 --> 01:27:40,600
inserted in your code and you couldn't use it for something else.

1990
01:27:40,600 --> 01:27:41,200
Right?

1991
01:27:41,400 --> 01:27:41,700
Whereas

1992
01:27:42,000 --> 01:27:42,700
Just pounded.

1993
01:27:42,700 --> 01:27:44,100
Finding is literally text.

1994
01:27:44,500 --> 01:27:47,800
So you could even, you know, use it to do something where that, that

1995
01:27:47,800 --> 01:27:51,000
had nothing to do with whatever its actual value was and that just had

1996
01:27:51,000 --> 01:27:53,300
to do it, the text of the thing, right?

1997
01:27:54,100 --> 01:28:01,000
And so sometimes you use them to to, you know, just replace.

1998
01:28:01,000 --> 01:28:03,300
I don't like typing, the word static for example.

1999
01:28:03,300 --> 01:28:06,100
So I type I like to define the word static, which has multiple

2000
01:28:06,100 --> 01:28:07,200
meanings in C++.

2001
01:28:07,500 --> 01:28:09,600
I don't like the fact that they had multiple meetings.

2002
01:28:09,800 --> 01:28:11,600
So I make three different.

2003
01:28:11,800 --> 01:28:14,700
Keywords, basically using defined their textual substitution.

2004
01:28:14,700 --> 01:28:18,100
So I can use the one that I want for the surface situation that I

2005
01:28:18,100 --> 01:28:18,400
want.

2006
01:28:18,400 --> 01:28:19,700
I think it's clear to read that way.

2007
01:28:36,100 --> 01:28:41,100
When you use in 32, does it have a different influence on the code

2008
01:28:41,100 --> 01:28:42,300
than normal ENT?

2009
01:28:42,600 --> 01:28:47,000
No, not on this platform because it is into 32 an inch are the same on

2010
01:28:47,000 --> 01:28:48,900
this platform on other platforms.

2011
01:28:48,900 --> 01:28:52,700
It might because if it was defined to be 64 bits on some platform than

2012
01:28:52,700 --> 01:28:55,200
interview to and have a different effect because it would be 32 bits

2013
01:28:55,200 --> 01:28:56,300
instead of 64 bits.

2014
01:28:57,900 --> 01:29:01,400
All right, so I think that's it for today.

2015
01:29:03,900 --> 01:29:10,600
what I would like to do is, I'm going to go a few minutes extra on the

2016
01:29:10,600 --> 01:29:13,500
stream here because we on the

2017
01:29:15,300 --> 01:29:19,700
In the forum's, someone was requesting an edit to the H file that I am

2018
01:29:19,700 --> 01:29:23,200
totally fine with making and so I want to go ahead and make it but I

2019
01:29:23,200 --> 01:29:24,800
didn't want to take Upstream time for it.

2020
01:29:24,800 --> 01:29:26,000
So I'm going to go ahead and do it.

2021
01:29:26,500 --> 01:29:29,900
Basically, what they were wondering is could we make the header file

2022
01:29:30,300 --> 01:29:36,900
clean for being basically see, you know, could they could we make it

2023
01:29:36,900 --> 01:29:40,900
clean so that in C++, it would just compiled.

2024
01:29:41,200 --> 01:29:44,700
And I'm sorry that it would compile.

2025
01:29:44,800 --> 01:29:45,900
Clean in C.

2026
01:29:46,100 --> 01:29:50,700
So even if you didn't have C++, and you were trying to write a

2027
01:29:50,700 --> 01:29:54,100
platform layer with something that couldn't compile C++ code that you

2028
01:29:54,100 --> 01:29:54,800
could use it.

2029
01:29:56,000 --> 01:29:59,800
And I think that should be pretty easy, actually.

2030
01:30:00,000 --> 01:30:04,700
You, so I'm going to go ahead and and try that.

2031
01:30:05,400 --> 01:30:09,100
Basically, what I want to do is split out handmade this.

2032
01:30:09,100 --> 01:30:16,600
This this thing here, split it out into essentially, a handmade dot h,

2033
01:30:16,600 --> 01:30:18,200
and a handmade platform.sh.

2034
01:30:20,300 --> 01:30:24,000
So handmade platform.sh will have just the bare minimum.

2035
01:30:24,500 --> 01:30:25,800
That would be necessary.

2036
01:30:26,400 --> 01:30:29,800
And so I'm going to go ahead and see if I can if I can do that, so,

2037
01:30:30,000 --> 01:30:30,900
Why do this?

2038
01:30:31,900 --> 01:30:32,700
Let's see here.

2039
01:30:33,600 --> 01:30:36,000
I need, I want these guys.

2040
01:30:36,000 --> 01:30:37,500
I don't need pie though.

2041
01:30:38,200 --> 01:30:42,700
I need these there.

2042
01:30:42,800 --> 01:30:44,400
Well, do I even need those?

2043
01:30:44,800 --> 01:30:46,000
Let me see what we pass.

2044
01:30:46,500 --> 01:30:49,000
Trying to figure out what we need for the platform layer to talk to

2045
01:30:49,000 --> 01:30:49,400
us.

2046
01:30:50,500 --> 01:30:51,600
Yeah, we do need those.

2047
01:30:51,600 --> 01:30:54,500
So we need those, we don't need any of this stuff.

2048
01:30:54,900 --> 01:30:57,600
So we're just going to pound include handmade platform right here.

2049
01:31:01,000 --> 01:31:01,700
So we got a pound.

2050
01:31:01,700 --> 01:31:03,100
Include those.

2051
01:31:03,100 --> 01:31:04,500
What else we got then?

2052
01:31:04,500 --> 01:31:06,700
Do you a that we need these.

2053
01:31:07,200 --> 01:31:09,500
We need this stuff.

2054
01:31:09,500 --> 01:31:13,300
We don't need get controller, that can stay outside.

2055
01:31:14,000 --> 01:31:17,000
So we need game input, right?

2056
01:31:17,200 --> 01:31:22,900
We need these guys, we need

2057
01:31:25,100 --> 01:31:28,400
See, all of this.

2058
01:31:31,100 --> 01:31:32,800
Yeah, we need all of this stuff.

2059
01:31:35,000 --> 01:31:36,000
Needs to come up.

2060
01:31:36,800 --> 01:31:41,100
So let's put that in there and we need.

2061
01:31:41,200 --> 01:31:42,100
I think that's it.

2062
01:31:42,200 --> 01:31:43,000
That's all we need.

2063
01:31:44,200 --> 01:31:44,900
Pretty sure.

2064
01:31:46,500 --> 01:31:49,700
Yeah, so basically what I've done is I pulled out the bare minimum

2065
01:31:49,700 --> 01:31:52,200
that you would need to call us from a platform layer.

2066
01:31:53,100 --> 01:31:55,900
And now I'm going to do is I'm going to make this compiled in C,

2067
01:31:56,400 --> 01:31:57,100
right?

2068
01:31:57,600 --> 01:32:01,100
And so, what I want to do is eliminate anything that is C plus plus in

2069
01:32:01,100 --> 01:32:05,500
it, so first of all, I need to make sure that we always typedef.

2070
01:32:05,500 --> 01:32:08,600
So, in C++, it always will Define.

2071
01:32:08,600 --> 01:32:11,700
If you have like struck thread context, you can then use the word

2072
01:32:11,700 --> 01:32:13,400
thread context, right?

2073
01:32:13,400 --> 01:32:15,100
As a type named in.

2074
01:32:15,100 --> 01:32:16,100
See, that wasn't true.

2075
01:32:16,500 --> 01:32:22,200
You had to actually, also typedef these like that you had to type def

2076
01:32:22,200 --> 01:32:25,300
them so that you'd to actually get the name to be used as a type.

2077
01:32:25,700 --> 01:32:28,500
So we need to do that everywhere that we have one of these.

2078
01:32:28,600 --> 01:32:31,700
One of these sort of structs that the platform layer talks do, right?

2079
01:32:31,800 --> 01:32:32,500
If that makes sense.

2080
01:32:34,800 --> 01:32:37,200
So that's pretty straightforward to do typedef.

2081
01:32:38,600 --> 01:32:41,600
Like this type death.

2082
01:32:44,300 --> 01:32:46,400
That, there we go.

2083
01:32:48,400 --> 01:32:49,800
To type death.

2084
01:32:52,400 --> 01:32:55,900
State that.

2085
01:32:56,900 --> 01:32:59,700
So, really just going through and doing some basic stuff here.

2086
01:32:59,700 --> 01:32:59,800
I

2087
01:33:00,100 --> 01:33:03,300
Know how see will fare with this thing.

2088
01:33:04,300 --> 01:33:05,300
I'm a little worried about it.

2089
01:33:05,300 --> 01:33:09,700
We could at this point go ahead and pull it but we'll see.

2090
01:33:09,800 --> 01:33:13,600
We'll see what happens on the on the C compiler here.

2091
01:33:14,400 --> 01:33:17,400
I'm going to go ahead and finish typing all these guys.

2092
01:33:19,600 --> 01:33:24,700
And I think that may just be all we really need to do.

2093
01:33:25,200 --> 01:33:25,500
Not sure.

2094
01:33:25,500 --> 01:33:27,000
There's really anything else to do.

2095
01:33:28,600 --> 01:33:31,800
Yeah, looks pretty sane.

2096
01:33:33,200 --> 01:33:38,000
To me we can also extern, see this.

2097
01:33:38,800 --> 01:33:42,800
So there's an if C plus plus extra and see thing that we can do.

2098
01:33:42,800 --> 01:33:45,200
I don't know if that will help people.

2099
01:33:45,200 --> 01:33:48,500
Let me go ahead and close this down so we can compile.

2100
01:33:49,400 --> 01:33:57,600
So there's a way you can do basically an if deaf for C++, if deaf C++

2101
01:33:57,600 --> 01:33:58,200
extern.

2102
01:33:58,200 --> 01:33:58,800
See.

2103
01:33:59,100 --> 01:34:01,400
I forget what the, what the thing is for it.

2104
01:34:04,100 --> 01:34:05,500
It's yes, this thing.

2105
01:34:07,900 --> 01:34:08,800
It's this thing right here.

2106
01:34:09,300 --> 01:34:10,300
This is what we want.

2107
01:34:10,700 --> 01:34:16,800
So essentially all we're trying to do here is say alright, basically

2108
01:34:16,800 --> 01:34:20,600
everything in this file, if we're compiling with a C++ compiler.

2109
01:34:21,200 --> 01:34:26,400
Let's treat everything in this file as if it was, as if it was C code,

2110
01:34:26,700 --> 01:34:31,300
so, see, here, is that out?

2111
01:34:31,800 --> 01:34:34,100
So only if we're on the C, compiler will do that.

2112
01:34:34,400 --> 01:34:35,800
And that all, that just makes it.

2113
01:34:35,800 --> 01:34:37,400
So these names don't get mangled.

2114
01:34:37,400 --> 01:34:37,500
I

2115
01:34:37,600 --> 01:34:42,100
If you remember we did some stuff with this inside ham, a DOT CPP.

2116
01:34:42,100 --> 01:34:45,400
We did this extra and see thing.

2117
01:34:45,400 --> 01:34:46,200
Right?

2118
01:34:46,200 --> 01:34:50,800
And so that basically says, apply that to everything that we've got,

2119
01:34:50,800 --> 01:34:53,200
you know, make sure all of these names don't get mangled.

2120
01:34:53,200 --> 01:34:55,800
I think this will be a slightly better.

2121
01:34:55,800 --> 01:34:59,900
You know, like I said, I did the minimal stuff, but I think this will

2122
01:34:59,900 --> 01:35:05,900
be all you would need now to be able to, to build a platform layer

2123
01:35:05,900 --> 01:35:07,000
link.

2124
01:35:07,600 --> 01:35:08,700
To handmade hero.

2125
01:35:08,700 --> 01:35:12,000
And then now, we've got all our sort of other stuff that was kind of

2126
01:35:12,000 --> 01:35:15,600
in the, in the platform file that doesn't have anything to do with

2127
01:35:15,600 --> 01:35:17,300
calling us from the platform layer.

2128
01:35:17,600 --> 01:35:21,600
We've sort of put that in here now, I suspect math.h is probably not

2129
01:35:21,600 --> 01:35:22,200
necessary.

2130
01:35:22,700 --> 01:35:23,800
Am I correct about that?

2131
01:35:24,300 --> 01:35:25,000
Let's see here.

2132
01:35:25,400 --> 01:35:27,500
In fact, I don't even know if we use math.h anymore.

2133
01:35:27,500 --> 01:35:27,900
Do we?

2134
01:35:28,700 --> 01:35:29,500
Yeah, we don't.

2135
01:35:29,800 --> 01:35:31,200
So that was only for our sine wave.

2136
01:35:31,200 --> 01:35:33,800
So maybe we'll get rid of that and we'll go when we want to do our

2137
01:35:33,800 --> 01:35:34,200
sine wave.

2138
01:35:34,200 --> 01:35:37,200
Again will Implement sign ourselves like it said, standard into is

2139
01:35:37,200 --> 01:35:37,500
there.

2140
01:35:37,600 --> 01:35:40,800
We could decide to get rid of standard in Tazewell and just to find

2141
01:35:40,800 --> 01:35:43,800
these to be something right now because we know what they are and

2142
01:35:43,800 --> 01:35:46,900
later put our own sort of crackers in here.

2143
01:35:47,000 --> 01:35:49,900
So for example, what that would look like is we would go ahead and

2144
01:35:49,900 --> 01:35:52,000
say, all right, there's no standard anymore.

2145
01:35:52,200 --> 01:35:54,500
We're going to say the intake is a care in.

2146
01:35:54,500 --> 01:35:59,500
16 is a short entity to is a tent and then

2147
01:36:00,000 --> 01:36:01,100
You know, this is well.

2148
01:36:01,100 --> 01:36:03,000
You know what, I guess I can't even do that now.

2149
01:36:03,000 --> 01:36:05,600
I think about it because I don't know if it's a standard platform type

2150
01:36:05,600 --> 01:36:11,800
for, in 64, because on it's like, it's like, you know, long long or

2151
01:36:11,800 --> 01:36:12,900
it's underscoring Sprint.

2152
01:36:12,900 --> 01:36:13,400
64.

2153
01:36:13,400 --> 01:36:14,400
I don't know if there's differences there.

2154
01:36:14,400 --> 01:36:15,800
So maybe we'll leave that in for now.

2155
01:36:15,800 --> 01:36:19,100
But one thing we could do is go look to see if there was a.

2156
01:36:19,100 --> 01:36:25,600
I don't know if there's a standard way, we can write 64 here now, and

2157
01:36:25,600 --> 01:36:27,000
if there was, we could go ahead and do that.

2158
01:36:27,000 --> 01:36:29,600
We could go and do that as well, and that would get rid of this.

2159
01:36:30,000 --> 01:36:31,800
Include, which might be helpful.

2160
01:36:31,800 --> 01:36:33,300
And now, I don't know.

2161
01:36:33,300 --> 01:36:36,300
Do we actually use any of the pound of finds in here either?

2162
01:36:36,300 --> 01:36:37,100
We might not.

2163
01:36:37,100 --> 01:36:39,600
So, one thing, another thing we could do, we could get rid of these

2164
01:36:39,600 --> 01:36:40,600
guys, right?

2165
01:36:40,600 --> 01:36:43,300
So we can get rid of our pound defines, move them in there.

2166
01:36:44,800 --> 01:36:47,000
Yeah, so that's another thing we can get rid of.

2167
01:36:47,500 --> 01:36:50,100
So we're just going again for the minimal stuff that we need in here.

2168
01:36:50,100 --> 01:36:52,200
That gets passed between the two layers.

2169
01:36:53,400 --> 01:36:57,400
Looks like that is probably as minimal as we're going to get for.

2170
01:36:57,400 --> 01:36:57,900
Now.

2171
01:36:58,900 --> 01:36:59,500
That's good.

2172
01:36:59,500 --> 01:37:01,500
Now again, we could get rid of that thing.

2173
01:37:01,900 --> 01:37:02,400
Let's see.

2174
01:37:02,400 --> 01:37:03,700
Is there a platform?

2175
01:37:04,400 --> 01:37:08,900
Is there a c standard for 64-bit integer?

2176
01:37:09,800 --> 01:37:11,900
Oops, that was a good smelling, their integer.

2177
01:37:13,300 --> 01:37:14,500
And so, let's see.

2178
01:37:15,200 --> 01:37:16,600
Do we have anything?

2179
01:37:18,200 --> 01:37:19,700
No, we don't want to.

2180
01:37:19,700 --> 01:37:21,500
We don't want to include that, though.

2181
01:37:22,600 --> 01:37:26,400
That's the thing is they're just a standard without having to include

2182
01:37:27,000 --> 01:37:30,300
standard end because I don't think, yeah, there's nothing you can do.

2183
01:37:31,200 --> 01:37:32,200
We don't want that.

2184
01:37:32,300 --> 01:37:35,500
So, I don't know if there's a way to do that the way that you used to

2185
01:37:35,500 --> 01:37:35,700
do.

2186
01:37:35,700 --> 01:37:38,400
This sort of thing is the way I would do it.

2187
01:37:38,400 --> 01:37:42,100
Is I do like a pound if and then in the pound, if you would put,

2188
01:37:42,100 --> 01:37:45,400
whatever the compiler name was or the platform name was that you were

2189
01:37:45,400 --> 01:37:50,500
working with and if so, you would use their particular way of defining

2190
01:37:51,000 --> 01:37:52,000
that in 64.

2191
01:37:52,000 --> 01:37:52,200
So,

2192
01:37:52,400 --> 01:37:54,600
I know we could we could look at doing that in the future.

2193
01:37:54,600 --> 01:37:57,600
But for now, I think that's it because I want to wrap up the stream.

2194
01:37:57,600 --> 01:37:58,400
Not go too long.

2195
01:37:58,400 --> 01:38:02,800
But there's a good start for people who wanted those things separated.

2196
01:38:03,100 --> 01:38:05,400
And so you could take a look at that.

2197
01:38:05,800 --> 01:38:08,100
So like for the person who requested for them, was the person who is

2198
01:38:08,100 --> 01:38:10,500
doing the Swift Port, take a look at that.

2199
01:38:10,500 --> 01:38:12,600
See if there's anything else that you need to be done there, but that

2200
01:38:12,600 --> 01:38:14,400
should give you a better start.

2201
01:38:15,900 --> 01:38:17,200
Sort of out.

2202
01:38:17,200 --> 01:38:17,700
And you know what?

2203
01:38:17,700 --> 01:38:18,100
I'll move this.

2204
01:38:18,100 --> 01:38:19,900
I'll move this guy out here as well.

2205
01:38:20,200 --> 01:38:23,500
All right, so, so that should do it.

2206
01:38:23,800 --> 01:38:26,000
I think that should do it and then we'll wrap that for a day.

2207
01:38:26,000 --> 01:38:28,300
So everyone, thank you very much for joining me.

2208
01:38:28,300 --> 01:38:31,400
I hope to see you back here again at 10 a.m.

2209
01:38:31,400 --> 01:38:31,600
Tomorrow.

2210
01:38:31,600 --> 01:38:36,300
We'll be doing this again and we will go ahead and see if we can get

2211
01:38:36,300 --> 01:38:39,700
our guy walking around to multiple Tom apps tomorrow, which will put

2212
01:38:39,700 --> 01:38:44,300
us in good shape for actually starting to construct our world, which I

2213
01:38:44,300 --> 01:38:45,000
am interested in doing.

2214
01:38:45,000 --> 01:38:45,800
So I think that should be

2215
01:38:45,800 --> 01:38:46,300
Be fun.

2216
01:38:46,400 --> 01:38:47,800
Thank you very much for joining me.

2217
01:38:47,800 --> 01:38:52,600
If you would like to purchase a copy of handmade hero with the Full

2218
01:38:52,600 --> 01:38:53,200
Source, you can do.

2219
01:38:53,200 --> 01:38:56,500
So the pre-order button here will give you a download link.

2220
01:38:56,500 --> 01:38:58,600
So you can download the source code to the game if you'd like to play

2221
01:38:58,600 --> 01:38:59,800
around with it and follow along.

2222
01:39:00,000 --> 01:39:03,700
Every day when we do coding, you will be able to download the source

2223
01:39:03,700 --> 01:39:04,200
every night.

2224
01:39:04,200 --> 01:39:05,300
As soon as I update it.

2225
01:39:05,400 --> 01:39:06,800
If you want to support the video series.

2226
01:39:06,800 --> 01:39:08,600
We have a patreon, you can subscribe to.

2227
01:39:09,100 --> 01:39:12,200
And, of course, we also have a news and Forum site, you can go to,

2228
01:39:12,500 --> 01:39:13,500
which has tons of useful.

2229
01:39:13,500 --> 01:39:15,100
Informations got the schedule here.

2230
01:39:15,200 --> 01:39:17,800
It's got an episode guide where you can catch up on old episodes.

2231
01:39:17,800 --> 01:39:21,100
It's got a coding resources page where people have ports Abacus X

2232
01:39:21,100 --> 01:39:22,000
Linux and so on.

2233
01:39:22,700 --> 01:39:24,000
We've got a code discussion forum.

2234
01:39:24,000 --> 01:39:25,200
You can post your questions.

2235
01:39:25,500 --> 01:39:28,200
So we basically have everything up there that you would need to follow

2236
01:39:28,200 --> 01:39:29,500
along with handmade hero.

2237
01:39:30,100 --> 01:39:33,000
So, I encourage you to check that out.

2238
01:39:33,100 --> 01:39:34,700
Thank you so much for joining me here.

2239
01:39:34,700 --> 01:39:36,800
I hope you have a very merry Christmas.

2240
01:39:36,800 --> 01:39:41,000
If you are celebrating Christmas today, and I will hope to see you

2241
01:39:41,000 --> 01:39:43,700
tomorrow at 10:00 a.m.

2242
01:39:43,700 --> 01:39:45,400
Sharp Pacific Standard time.

2243
01:39:45,400 --> 01:39:46,200
Thanks, everyone.

2244
01:39:46,600 --> 01:39:48,000
And we will see you tomorrow.

