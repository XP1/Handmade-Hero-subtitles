1
00:00:00,600 --> 00:00:01,300
Start recording.

2
00:00:01,300 --> 00:00:05,700
Hello everyone and welcome to handmade hero.

3
00:00:05,700 --> 00:00:09,100
The show where we Cody complete game live on stream.

4
00:00:09,100 --> 00:00:17,600
We are well I think it is probably time to definitively handle our Z

5
00:00:17,600 --> 00:00:22,900
situation because we've kind of we've only got a few things left to

6
00:00:22,900 --> 00:00:23,300
deal with.

7
00:00:23,300 --> 00:00:28,400
I think before I'm comfortable saying, let's let's move to mostly game

8
00:00:28,400 --> 00:00:30,600
code and we've worked out a lot.

9
00:00:30,700 --> 00:00:31,600
Energy System stuff.

10
00:00:31,600 --> 00:00:35,200
I wanted to work out and that'll kind of grow over time, but we, you

11
00:00:35,200 --> 00:00:36,800
know, that's been looking kind of nice.

12
00:00:37,400 --> 00:00:42,000
But we really have got sort of this, this vestigial remain, where we

13
00:00:42,000 --> 00:00:43,300
played around with Zia Bunch.

14
00:00:43,300 --> 00:00:46,000
We never really came to a conclusion about exactly how they should

15
00:00:46,000 --> 00:00:49,600
work in a 2.5 D, sort of environment.

16
00:00:49,700 --> 00:00:52,700
And now I think we have a better idea of what we need from Z.

17
00:00:52,700 --> 00:00:56,900
And so I think maybe this week, what I might try to do is just kind of

18
00:00:56,900 --> 00:01:00,500
tackle that issue and try to get the renderer to the

19
00:01:00,600 --> 00:01:04,599
A point where I'm comfortable with it saying that, you know, this

20
00:01:04,599 --> 00:01:11,000
could be a reasonable shipping version of the interface and like we

21
00:01:11,000 --> 00:01:16,500
won't have to tear out or redo a bunch of code later on because of a

22
00:01:16,500 --> 00:01:19,200
bunch of choices that we made now, right?

23
00:01:20,100 --> 00:01:22,100
Because yeah.

24
00:01:22,100 --> 00:01:26,400
Like you know, at some point in development, you're going to go into,

25
00:01:26,600 --> 00:01:29,700
you know, any particular piece of code you're going to go into a stage

26
00:01:29,700 --> 00:01:30,400
where you're going to be.

27
00:01:30,700 --> 00:01:35,100
Really heavily using that piece of code to, to do lots of stuff.

28
00:01:35,400 --> 00:01:39,100
And so, you know, usually I try to do enough due diligence with

29
00:01:39,100 --> 00:01:42,700
experimenting with that piece of code in real as real as scenarios as

30
00:01:42,700 --> 00:01:47,000
I can before, I start leaning on it really heavily just because I

31
00:01:47,000 --> 00:01:50,600
don't want to write you know a ton of code based around this one

32
00:01:50,600 --> 00:01:53,700
concept and then find out that that concept is wrong, right?

33
00:01:54,300 --> 00:01:57,900
So sometimes you don't have to worry about that because the number of

34
00:01:57,900 --> 00:02:00,500
people who are depending on those decisions,

35
00:02:00,600 --> 00:02:02,200
Is is low, right?

36
00:02:02,600 --> 00:02:06,200
And if that's the case, then it's really not a big deal to change your

37
00:02:06,200 --> 00:02:06,600
mind.

38
00:02:06,600 --> 00:02:08,400
A lot even late in the project.

39
00:02:08,400 --> 00:02:09,400
It's not a big deal.

40
00:02:13,400 --> 00:02:17,900
But when you think about something as critical as how does Z work,

41
00:02:18,300 --> 00:02:22,300
well, if we spend a lot of time tuning, how things are positioned on

42
00:02:22,300 --> 00:02:25,800
the screen or how they look, or how they're sorted based on a certain

43
00:02:25,800 --> 00:02:29,300
set of rules and then all of a sudden we upend all those rules we met

44
00:02:29,300 --> 00:02:31,500
through have been throwing out all of that work.

45
00:02:31,500 --> 00:02:34,100
And so I typically don't want to do.

46
00:02:35,800 --> 00:02:38,500
I don't want to have those sorts of things happen if I can avoid them,

47
00:02:38,500 --> 00:02:39,400
sometimes you can't.

48
00:02:39,700 --> 00:02:41,900
But sometimes, you know, you

49
00:02:42,000 --> 00:02:44,900
You can and you want to make sure you can as much as possible.

50
00:02:45,600 --> 00:02:50,300
I because we were happy to be posting handmade Con 2015, videos.

51
00:02:50,600 --> 00:02:54,100
All this week on the Molly rocket blog, I would also point out that

52
00:02:54,100 --> 00:02:59,100
actually Mike act and if you go back to his post here,

53
00:03:00,200 --> 00:03:01,800
This is news 35 here.

54
00:03:02,700 --> 00:03:06,500
His post his video from handmade con.

55
00:03:06,500 --> 00:03:08,200
He actually talked about something similar in here.

56
00:03:08,200 --> 00:03:12,000
If I recall correctly, he was talking about the fact that some

57
00:03:12,000 --> 00:03:16,800
decisions even game design, decisions can be extremely costly to

58
00:03:16,800 --> 00:03:18,300
change later on.

59
00:03:18,300 --> 00:03:24,300
And his example, for that was how fast does the character move in a 3D

60
00:03:24,300 --> 00:03:29,000
environment because if you can look out over the world and you know,

61
00:03:29,000 --> 00:03:29,800
you're moving,

62
00:03:30,000 --> 00:03:34,300
Being a certain distance per second in that world that combined with

63
00:03:34,300 --> 00:03:37,300
the streaming speed of the media, like the hard drive that you're

64
00:03:37,300 --> 00:03:40,500
streaming off of, or the Blu-ray disc, or whatever it happens to be

65
00:03:41,700 --> 00:03:43,300
those two things together.

66
00:03:43,300 --> 00:03:47,000
Combined to determine exactly how much visual Fidelity you can put in

67
00:03:47,000 --> 00:03:48,100
that world, right?

68
00:03:48,300 --> 00:03:54,100
If I'm going you know at a certain rate through the world, the hard

69
00:03:54,100 --> 00:03:57,300
drive can only Supply data so quickly know and you know I can compress

70
00:03:57,300 --> 00:03:59,900
it a certain amount but there's only so much I can compress it and

71
00:04:00,100 --> 00:04:04,300
The data that's coming in, can only be a certain density as I'm moving

72
00:04:04,300 --> 00:04:05,100
at that rate.

73
00:04:05,100 --> 00:04:08,500
Because if I can't keep up, then eventually, you know, the player

74
00:04:08,500 --> 00:04:11,200
would that would stall or, you know, it would there wouldn't be

75
00:04:11,200 --> 00:04:13,400
anything there or something bad would happen, right?

76
00:04:14,000 --> 00:04:20,100
And so if you pick that speed to high, all of your game assets will be

77
00:04:20,100 --> 00:04:24,400
modeled at too low a Fidelity because they didn't think they had that

78
00:04:24,400 --> 00:04:27,500
kind of a budget because the streaming couldn't have pulled the data

79
00:04:27,500 --> 00:04:28,300
in quickly enough.

80
00:04:28,500 --> 00:04:29,800
Similarly, if you pick that speed

81
00:04:29,900 --> 00:04:33,300
too slow, all of your assets will be to finally modeled.

82
00:04:33,300 --> 00:04:36,000
So then later on, we decide oh the player really needs to move twice

83
00:04:36,000 --> 00:04:36,800
as fast as this.

84
00:04:37,100 --> 00:04:39,300
Well now you have to go back and decimate.

85
00:04:39,300 --> 00:04:42,300
All of your art assets down to a lower level of detail to meet that

86
00:04:42,300 --> 00:04:45,200
new streaming, requirement and all sorts of things like this.

87
00:04:45,400 --> 00:04:47,800
Now sometimes you have automated system in place to take care of this.

88
00:04:47,800 --> 00:04:49,500
Sometimes there's you know blah blah blah blah.

89
00:04:49,500 --> 00:04:53,900
But you get the idea, some decisions have consequences that are very

90
00:04:53,900 --> 00:04:57,900
significant in terms of the amount of time that you've spent doing

91
00:04:57,900 --> 00:04:59,700
things depended on them and other

92
00:05:00,000 --> 00:05:00,700
Don't.

93
00:05:00,700 --> 00:05:05,800
And I think that Z and positioning in the world is definitely one of

94
00:05:05,800 --> 00:05:07,800
those things that has a lot of dependencies on it.

95
00:05:08,000 --> 00:05:10,600
And so it's something that I want to make sure that we have correct.

96
00:05:10,600 --> 00:05:14,100
Now, as we go into writing, a bunch of code that depends on it and you

97
00:05:14,100 --> 00:05:17,700
can already see, just in our test code, it's all hacked with Z.

98
00:05:17,700 --> 00:05:20,900
It's all kind of hacky and weird and so now is a good time.

99
00:05:20,900 --> 00:05:26,000
I think to go through and make that stuff work correctly and and you

100
00:05:26,000 --> 00:05:26,700
know, just kind of

101
00:05:30,400 --> 00:05:32,300
Get the Z situation figured out.

102
00:05:32,400 --> 00:05:35,900
And so one of the things that I want to do there, well, a couple

103
00:05:35,900 --> 00:05:41,100
things I want to do one is I want to make sure that Z4 hover works

104
00:05:41,100 --> 00:05:46,100
correctly because I want to basically be able to say that entities

105
00:05:46,100 --> 00:05:52,100
always have an XYZ position and that XYZ position tells you where they

106
00:05:52,100 --> 00:05:55,500
are in the game, you know, on the screen game screen.

107
00:05:56,900 --> 00:05:58,100
But then I also want to

108
00:05:58,200 --> 00:05:59,600
To have a secondary.

109
00:06:00,200 --> 00:06:05,600
Z that is a slice through the 2D world and that's just for stacking

110
00:06:05,600 --> 00:06:09,900
rooms on top of each other and that Z will actually do prospective

111
00:06:09,900 --> 00:06:10,500
scaling.

112
00:06:11,000 --> 00:06:15,800
So basically we will not prospectively scale anything in an individual

113
00:06:15,800 --> 00:06:19,500
game room because the art assets are all 2D, orthogonal, it wouldn't

114
00:06:19,500 --> 00:06:21,000
make any sense for them to scale.

115
00:06:21,000 --> 00:06:21,800
It just looks weird.

116
00:06:21,800 --> 00:06:23,000
We tested that out a little bit.

117
00:06:23,000 --> 00:06:27,200
It doesn't really look right and so we're not going to do that.

118
00:06:27,200 --> 00:06:29,900
But we are going to do is when a room is on top of another

119
00:06:30,000 --> 00:06:33,100
other room and we like move up to that room or down to a room.

120
00:06:33,100 --> 00:06:36,800
We want to have that do that perspective scaling because it was really

121
00:06:36,800 --> 00:06:40,900
nice effect and that doesn't fight the art assets really in any

122
00:06:40,900 --> 00:06:41,700
particular way.

123
00:06:41,700 --> 00:06:44,300
So that's what I want to do.

124
00:06:44,300 --> 00:06:50,200
I want to start tackling that issue and figure out how to make that

125
00:06:50,200 --> 00:06:55,400
clean and efficient for all of the rendering that the entity rendering

126
00:06:55,400 --> 00:06:56,400
code and all that stuff.

127
00:06:56,400 --> 00:06:59,600
So that when we're putting in all these values as we

128
00:07:00,000 --> 00:07:02,900
To liked weak entities and how they're supposed to behave.

129
00:07:03,100 --> 00:07:05,100
We don't have to go back and redo it all later.

130
00:07:05,100 --> 00:07:08,500
When we decide that we have a better way to do Z or whatever.

131
00:07:08,500 --> 00:07:10,000
I want to get that better way now.

132
00:07:11,400 --> 00:07:14,700
And like I said, I think we've played around enough and seen enough to

133
00:07:14,700 --> 00:07:18,200
make an educated decision here about what we can go with and then

134
00:07:18,200 --> 00:07:19,000
stick with it.

135
00:07:19,500 --> 00:07:21,900
Now, a reminder today is a 295.

136
00:07:21,900 --> 00:07:25,900
So if you're trying to follow along at home day, 294 is the day you

137
00:07:25,900 --> 00:07:28,900
will want to unpack for source code to start with.

138
00:07:28,900 --> 00:07:29,800
That's what I'm starting with.

139
00:07:29,900 --> 00:07:34,700
Now, let's go ahead and just refresh our memory as to where we left

140
00:07:34,700 --> 00:07:34,900
off.

141
00:07:34,900 --> 00:07:37,300
Although again, it's not particularly important.

142
00:07:37,300 --> 00:07:43,700
In some sense because we are sort of starting a new run here, but we

143
00:07:43,700 --> 00:07:47,200
had gotten to the point where we had a number of creatures working, we

144
00:07:47,200 --> 00:07:50,000
have the ability to attack and various directions with our little

145
00:07:50,000 --> 00:07:55,400
stand in sort of, we put a little plate rock that we had in there.

146
00:07:55,800 --> 00:07:58,000
And so we've got most of these things working.

147
00:07:58,000 --> 00:07:59,800
And you can see, we don't need a regular grid.

148
00:07:59,900 --> 00:08:00,800
Anymore as well.

149
00:08:00,800 --> 00:08:04,900
And so the things that we had sort of, you know, on the table where we

150
00:08:04,900 --> 00:08:06,200
were like we got to work on these.

151
00:08:06,200 --> 00:08:10,500
The two things that we had to do, where we had to sort of get RZ

152
00:08:10,500 --> 00:08:14,200
situation straightened out, and we had to get our Collision detection

153
00:08:14,200 --> 00:08:17,100
finished because we only have kind of rudimentary protection there

154
00:08:17,100 --> 00:08:17,500
right now.

155
00:08:17,500 --> 00:08:21,100
So those are definitely things that we will do, but right now I'm

156
00:08:21,100 --> 00:08:22,100
going to focus on the Z.

157
00:08:22,100 --> 00:08:26,000
So in order to focus on that Z, the first thing that I'd like to do is

158
00:08:26,000 --> 00:08:27,600
I'd like to build a case for us.

159
00:08:27,600 --> 00:08:29,800
You can see that there's there's one situation where

160
00:08:29,900 --> 00:08:31,600
Are we are sort of using that Z.

161
00:08:31,900 --> 00:08:35,299
You can see right here is I go from room to room.

162
00:08:35,400 --> 00:08:38,900
You can see that it sort of goes up and it goes you know, pulls out a

163
00:08:38,900 --> 00:08:41,900
little and comes back, but that's really the only case that we're

164
00:08:41,900 --> 00:08:46,300
using the perspective Z at the current right at the moment, right?

165
00:08:47,400 --> 00:08:51,400
And so that yeah, that's basically all we're doing.

166
00:08:51,600 --> 00:08:53,300
As far as prospective Z right.

167
00:08:53,300 --> 00:08:58,200
Now, what I'd like to do is construct a room here, where we could go

168
00:08:58,200 --> 00:08:59,600
up and down between

169
00:09:00,000 --> 00:09:03,800
Different rooms and so what I'm going to do is I'm going to create

170
00:09:03,900 --> 00:09:08,900
sort of a stairwell, kind of a pattern that is designed to get us from

171
00:09:08,900 --> 00:09:09,900
one room to another.

172
00:09:10,100 --> 00:09:13,100
And we'll sort of try to figure out exactly how you would go up

173
00:09:13,100 --> 00:09:14,800
between two rooms in the first place.

174
00:09:15,200 --> 00:09:17,800
And I'm guessing that it'll be something like, you know, we'll put

175
00:09:17,900 --> 00:09:23,400
well actually put some of these these hobble points in here, right?

176
00:09:23,600 --> 00:09:27,600
Well, sort of make it so that we can, you know, hop up up up up and

177
00:09:27,700 --> 00:09:29,900
and off we go, these familiars are

178
00:09:30,000 --> 00:09:31,200
Early kind of annoying, aren't they?

179
00:09:31,900 --> 00:09:33,500
They just keep following me around.

180
00:09:33,600 --> 00:09:36,700
Well, I guess that's just what familiars do.

181
00:09:40,600 --> 00:09:42,800
We, of course, do have a way to turn them off, I suppose.

182
00:09:43,100 --> 00:09:45,000
I think that was in here somewhere.

183
00:09:47,600 --> 00:09:50,100
Did we we don't obey that anymore.

184
00:09:50,800 --> 00:09:54,200
Oh well well so much for that.

185
00:09:55,400 --> 00:09:55,900
Anyway.

186
00:09:56,600 --> 00:09:59,700
So what I'm going to do is I'm just going to start by heading over to

187
00:09:59,700 --> 00:10:04,400
the world generator and I'm going to go ahead and say that that that

188
00:10:04,400 --> 00:10:05,400
standard room

189
00:10:08,100 --> 00:10:09,800
Which is really kind of a stupid concept.

190
00:10:09,800 --> 00:10:11,200
I don't know why we have a this.

191
00:10:11,200 --> 00:10:15,200
It's just, you know, because World Jen will be sort of the first thing

192
00:10:15,200 --> 00:10:20,000
that we start with probably as we're working on the game code proper.

193
00:10:20,900 --> 00:10:24,100
I just haven't decided to really make this any fancier but yeah.

194
00:10:24,100 --> 00:10:28,200
Inside the world gencode I'm going to hack something in here which

195
00:10:28,200 --> 00:10:29,900
will basically.

196
00:10:29,900 --> 00:10:33,600
Yeah, it'll make sort of a floor Collision that kind of goes upward as

197
00:10:33,700 --> 00:10:35,800
as, as you kind of walk up it.

198
00:10:36,200 --> 00:10:37,500
And so in order to do that,

199
00:10:37,600 --> 00:10:42,000
I think what I'll do is say all right, here's you know, the normal

200
00:10:42,000 --> 00:10:43,300
code, right?

201
00:10:43,600 --> 00:10:46,600
And what I'm going to do is say that, you know, we've got these

202
00:10:46,600 --> 00:10:49,800
offsets being plus or minus these random bilaterals.

203
00:10:49,900 --> 00:10:51,200
I'm going to turn that off for now.

204
00:10:51,200 --> 00:10:53,700
So this looks more like a standard room.

205
00:10:56,600 --> 00:10:58,800
And then what I'm going to do is I'm going to come down here and say

206
00:10:58,800 --> 00:11:01,900
well or actually I guess I don't really need to come down anywhere to

207
00:11:01,900 --> 00:11:02,400
say it.

208
00:11:02,500 --> 00:11:06,800
I guess I'm going to say all right if the offset X I don't know what

209
00:11:06,800 --> 00:11:07,300
it would be.

210
00:11:07,300 --> 00:11:09,700
Lets say the offset X is 10.

211
00:11:10,200 --> 00:11:10,700
Okay.

212
00:11:12,200 --> 00:11:17,500
If the offset X is 10 and I'm going to bound the offset Y for the

213
00:11:17,500 --> 00:11:18,800
length of my stairwell.

214
00:11:18,800 --> 00:11:21,600
I don't know exactly what it'll be but let's say that it's greater

215
00:11:21,600 --> 00:11:24,300
than 4 and

216
00:11:29,200 --> 00:11:30,900
Less than or equal to 8.

217
00:11:30,900 --> 00:11:34,400
So it's between four and eight, four, five, six, seven, eight will be

218
00:11:34,400 --> 00:11:35,300
the stairwell.

219
00:11:36,400 --> 00:11:39,700
We're 5 6 7, maybe, maybe, just for hops, would be enough.

220
00:11:39,700 --> 00:11:40,200
I don't know.

221
00:11:41,200 --> 00:11:42,500
So we'll do something like this.

222
00:11:42,600 --> 00:11:47,500
And then what I'd like to say is okay, the P dot offset Z, I'm going

223
00:11:47,500 --> 00:11:52,500
to go ahead and make that be equal to, you know, I don't know a

224
00:11:52,500 --> 00:11:56,000
quarter, step /, / offset why

225
00:11:58,000 --> 00:11:59,800
So basically offset y, minus 4.

226
00:12:02,800 --> 00:12:03,300
If we do.

227
00:12:06,000 --> 00:12:13,400
So now our Z offset should kind of go up as as we go there and, you

228
00:12:13,400 --> 00:12:15,700
know, probably that's actually now I think about the wrong way to do

229
00:12:15,700 --> 00:12:15,900
it.

230
00:12:15,900 --> 00:12:19,400
I should probably do it backwards so I should probably do it something

231
00:12:19,500 --> 00:12:20,000
more.

232
00:12:20,000 --> 00:12:28,500
Like it's a trying to think of how to say this, right?

233
00:12:29,000 --> 00:12:31,700
If I do it this way, offset y.

234
00:12:31,700 --> 00:12:32,600
Oh well that's okay.

235
00:12:32,600 --> 00:12:33,400
Why goes up

236
00:12:34,200 --> 00:12:37,300
I always forget, y, goes up in our world, my goes up, so it's fine.

237
00:12:38,000 --> 00:12:40,200
So now if you take a look at what happened here, right?

238
00:12:40,400 --> 00:12:45,000
I don't know which one we said that was we said us at y equals 10,

239
00:12:45,000 --> 00:12:45,500
right?

240
00:12:45,600 --> 00:12:49,600
So I figure one, two, three, four, five, six, seven, eight, nine, ten.

241
00:12:49,600 --> 00:12:51,800
It's this one right here in theory, right?

242
00:12:51,800 --> 00:12:55,800
But you'll notice that it doesn't look like it's anywhere different

243
00:12:55,800 --> 00:12:57,000
than it was already.

244
00:12:57,300 --> 00:12:59,200
And there's a very good reason for that.

245
00:12:59,500 --> 00:13:03,500
And that is because we even if this works even if that

246
00:13:04,000 --> 00:13:05,500
Room code works properly.

247
00:13:05,800 --> 00:13:09,900
We don't offset things by their Z value in the first place right now.

248
00:13:10,100 --> 00:13:12,400
At least I don't recall us doing that.

249
00:13:13,500 --> 00:13:15,700
Maybe we do, maybe we don't, but I don't think so.

250
00:13:15,800 --> 00:13:16,300
I don't know.

251
00:13:16,600 --> 00:13:17,200
That's a good question.

252
00:13:17,200 --> 00:13:17,700
Do we?

253
00:13:18,500 --> 00:13:19,400
Maybe we still do?

254
00:13:20,200 --> 00:13:20,700
I don't know.

255
00:13:28,500 --> 00:13:31,600
Well, let's find out because I don't actually know.

256
00:13:32,200 --> 00:13:33,500
I was thinking that we

257
00:13:38,500 --> 00:13:41,100
I was thinking that we don't anymore, but then we also kind of had

258
00:13:41,100 --> 00:13:44,900
that dude who like was you could get on him and he would move up and

259
00:13:44,900 --> 00:13:45,200
down.

260
00:13:45,200 --> 00:13:48,700
And I don't really remember now, so I'm thinking that maybe we

261
00:13:48,700 --> 00:13:52,400
actually should see this offset Z coming into effect because this is

262
00:13:52,400 --> 00:13:53,600
not a displacement Z.

263
00:13:53,600 --> 00:13:54,300
It was an off suit.

264
00:13:54,300 --> 00:13:57,400
I think that was still the one that did get displaced.

265
00:13:57,500 --> 00:13:58,300
So, never mind.

266
00:13:58,300 --> 00:13:59,400
I think we should have seen that.

267
00:13:59,400 --> 00:14:02,100
So let's just double check in there and step in to make sure that

268
00:14:02,100 --> 00:14:03,000
that's all good.

269
00:14:04,800 --> 00:14:08,600
Because again the fact even the fact that I can't ever remember how

270
00:14:08,600 --> 00:14:09,400
she is supposed to work.

271
00:14:09,400 --> 00:14:12,400
Is another good example of just how not settled it is, right?

272
00:14:12,400 --> 00:14:13,700
Like that's the kind of thing.

273
00:14:13,700 --> 00:14:16,500
We don't want to have to be second-guessing all the time and so that's

274
00:14:16,500 --> 00:14:19,300
just yet another reason why I want that settled definitively.

275
00:14:19,800 --> 00:14:22,800
So let's see if we ever get in here we never did it.

276
00:14:23,300 --> 00:14:25,000
All right so that's always great.

277
00:14:28,100 --> 00:14:30,100
So what's the problem here offset?

278
00:14:30,300 --> 00:14:31,400
Ah, I see.

279
00:14:31,600 --> 00:14:34,500
Offset X is actually, these are relative ranges.

280
00:14:34,500 --> 00:14:37,300
I was thinking they were at the kind of absolute ranges we were using

281
00:14:37,300 --> 00:14:38,200
in the other set.

282
00:14:38,500 --> 00:14:40,200
All right so that's obviously wrong.

283
00:14:40,200 --> 00:14:45,700
So ought to say, we'll do three and we'll do it between 0 and m 3.

284
00:14:48,400 --> 00:14:49,100
All right.

285
00:14:50,300 --> 00:14:51,500
Well, I'm glad I looked at that.

286
00:14:53,000 --> 00:14:53,500
Okay.

287
00:14:53,700 --> 00:14:54,000
All right.

288
00:14:54,000 --> 00:14:57,000
So there they still they are still there, right?

289
00:14:57,000 --> 00:14:59,600
You can see that the Z does actually.

290
00:15:00,000 --> 00:15:01,100
All set properly.

291
00:15:01,600 --> 00:15:05,100
And so I can actually kind of climb up it, it's not as much as I

292
00:15:05,100 --> 00:15:12,000
needed to be and also that offset why that offset does look like it's

293
00:15:12,000 --> 00:15:12,600
going.

294
00:15:15,500 --> 00:15:17,100
Down, which is interesting.

295
00:15:18,400 --> 00:15:18,700
Right.

296
00:15:18,700 --> 00:15:22,000
Because, why is supposed to go upward in our system?

297
00:15:22,200 --> 00:15:23,900
So, as y increases.

298
00:15:24,700 --> 00:15:27,000
Oh, and I guess, well, this is probably why.

299
00:15:28,900 --> 00:15:30,300
We don't need the - for anymore.

300
00:15:32,800 --> 00:15:33,400
There we go.

301
00:15:36,200 --> 00:15:36,800
Much better.

302
00:15:38,000 --> 00:15:42,300
So here I can kind of climb up here and unfortunately, that's still

303
00:15:42,300 --> 00:15:43,400
not quite high enough.

304
00:15:43,500 --> 00:15:48,700
I also want to say this is this offset why we probably want it to be

305
00:15:48,700 --> 00:15:53,000
maybe something more like between negative 2 & 2, something like that.

306
00:15:53,000 --> 00:15:55,000
And I mail make that a little bit steeper.

307
00:16:00,000 --> 00:16:03,500
Alright, so here we go.

308
00:16:04,000 --> 00:16:09,000
As we go up and you can kind of see like if I if I get up in there,

309
00:16:09,000 --> 00:16:12,600
you can kind of see that I'm like, sort of hopping up to the next

310
00:16:12,800 --> 00:16:16,300
level effectively, if I hop on that chain, where it's from on the

311
00:16:16,300 --> 00:16:17,700
other chain, I don't, right?

312
00:16:18,100 --> 00:16:21,200
So, there I go, hopping up, and now, I'm on sort of the next level.

313
00:16:21,400 --> 00:16:24,600
So now what I need to do is just put a room on top, so I can see the

314
00:16:24,600 --> 00:16:27,500
room, like, above me, basically, instead of having rooms, that kind of

315
00:16:27,500 --> 00:16:29,000
go off to the side, which are not

316
00:16:29,700 --> 00:16:30,900
Full at all at the moment.

317
00:16:30,900 --> 00:16:35,000
So what I want to do is say okay I've got, you know,

318
00:16:38,500 --> 00:16:42,900
Two rooms and I'm always going to have the door go up.

319
00:16:43,500 --> 00:16:48,800
So you know I would say instead of doing random Choice Series 2 here,

320
00:16:49,000 --> 00:16:53,400
I'm going to say that we're going to do a random choice where we're

321
00:16:53,400 --> 00:16:55,000
going door up.

322
00:16:55,400 --> 00:16:59,100
So yeah, what is door direction?

323
00:16:59,100 --> 00:17:00,200
For door up?

324
00:17:00,800 --> 00:17:02,500
It looks like to

325
00:17:09,099 --> 00:17:14,800
And so that way there's always a door up and we should be good.

326
00:17:14,800 --> 00:17:15,400
Let's see.

327
00:17:19,200 --> 00:17:21,700
All right, that is a bit hard to read.

328
00:17:22,000 --> 00:17:26,099
I don't mind telling you, not the easiest thing in the world to read.

329
00:17:26,500 --> 00:17:27,700
I can sort of still see it.

330
00:17:27,700 --> 00:17:31,800
But you know, I think that the top layer is not getting faded out at

331
00:17:31,800 --> 00:17:36,400
the moment, so it's a little bit crazy and that's not great.

332
00:17:36,900 --> 00:17:38,400
Not great, not great Bob.

333
00:17:39,300 --> 00:17:43,300
Okay, so let's see here, if I can and I also have these familiars, I'm

334
00:17:43,300 --> 00:17:45,200
going to turn those off because they're driving me nuts.

335
00:17:45,600 --> 00:17:47,400
The moment familiar.

336
00:17:52,500 --> 00:17:53,900
Too many familiars.

337
00:17:56,900 --> 00:17:59,900
all right, so let's

338
00:18:00,000 --> 00:18:00,700
Up up here.

339
00:18:00,700 --> 00:18:03,800
So there's one hop, two hop, three hop for hop.

340
00:18:03,800 --> 00:18:07,800
And you can see the new room coming to view their and I should be able

341
00:18:07,800 --> 00:18:09,700
to kind of be up in that room now, right?

342
00:18:09,700 --> 00:18:11,800
And so now I'm actually in that top room.

343
00:18:14,300 --> 00:18:15,400
And that's all fine.

344
00:18:15,800 --> 00:18:17,300
Of course it's extremely hard to see.

345
00:18:17,300 --> 00:18:20,300
So this is again, we're going to have to pay probably start drawing in

346
00:18:20,900 --> 00:18:22,100
some floor tiles there.

347
00:18:22,100 --> 00:18:27,800
So what I might do here is I might start to expand those.

348
00:18:29,600 --> 00:18:35,000
I'm going to try expanding those sort of, you know, Stan, double

349
00:18:35,000 --> 00:18:38,300
markers so that they're kind of more tile shaped.

350
00:18:38,300 --> 00:18:42,300
Just so I can, you know, until we have tile Graphics in there that we

351
00:18:42,300 --> 00:18:42,700
want to

352
00:18:42,800 --> 00:18:46,900
You specifically, I can have sort of a clearer idea of what's actually

353
00:18:46,900 --> 00:18:47,300
going on.

354
00:18:47,300 --> 00:18:50,300
So I'm going to come in here while we're sort of standing up on this

355
00:18:50,300 --> 00:18:53,200
thing and I'm going to try to move that.

356
00:18:54,800 --> 00:18:58,500
I'm going to try to expand that stand about Point thing so that it's

357
00:18:58,500 --> 00:19:00,100
considerably larger than it was.

358
00:19:00,200 --> 00:19:03,500
So here's a traversable 's and here is the size that they are

359
00:19:03,500 --> 00:19:04,200
currently.

360
00:19:04,300 --> 00:19:05,400
I'm going to expand them out.

361
00:19:05,400 --> 00:19:07,700
2.4, I'm just going to see what that looks like.

362
00:19:09,200 --> 00:19:12,200
Hmm, I might go even larger than that.

363
00:19:12,700 --> 00:19:14,300
I'm going to go out to maybe.

364
00:19:15,900 --> 00:19:16,800
How big is 99?

365
00:19:17,000 --> 00:19:17,700
I could go.

366
00:19:17,700 --> 00:19:18,600
I could go even further.

367
00:19:18,600 --> 00:19:22,200
So I could go to like 1.2 or something and still have space between

368
00:19:22,200 --> 00:19:22,500
them.

369
00:19:22,700 --> 00:19:23,100
Yeah.

370
00:19:24,100 --> 00:19:29,100
Yeah, so that's not that's not too hard so it's actually pretty easy

371
00:19:29,100 --> 00:19:30,500
to justify.

372
00:19:31,300 --> 00:19:31,700
All right.

373
00:19:31,700 --> 00:19:32,700
And so you can see

374
00:19:35,100 --> 00:19:39,400
You can see that, I guess our Alpha is at the moment turned off

375
00:19:39,400 --> 00:19:44,500
because that bottom layer is not really faded out at all, which is not

376
00:19:44,500 --> 00:19:45,100
great.

377
00:19:45,900 --> 00:19:46,900
And

378
00:19:48,000 --> 00:19:52,400
I suppose that's not really the end of the world, what I could do.

379
00:19:54,200 --> 00:19:56,600
What I could do is, and what if we fix the Z?

380
00:19:56,600 --> 00:19:59,600
Sorting remember these guys don't see, sort properly right now because

381
00:19:59,600 --> 00:20:02,700
there's these are all set to particularly hacked values as well.

382
00:20:03,600 --> 00:20:06,000
But what I was going to say, is these

383
00:20:08,500 --> 00:20:12,200
These things could also I supposed to be outlined to make them a

384
00:20:12,200 --> 00:20:13,500
little clearer to see as well.

385
00:20:13,500 --> 00:20:16,900
So I could do something like, I don't know why I closed the game just

386
00:20:16,900 --> 00:20:22,600
then, but I could do something like, pushing your wrecked outline as

387
00:20:22,600 --> 00:20:27,800
well as a sort of a wrecked thing on here.

388
00:20:28,100 --> 00:20:31,500
So we've got, you know, the traversable

389
00:20:37,500 --> 00:20:38,100
T.

390
00:20:38,900 --> 00:20:41,400
And here I've got my V to appoint.

391
00:20:41,400 --> 00:20:44,800
You a half half and

392
00:20:48,300 --> 00:20:52,200
I guess this would just be black, probably just something to Edge it,

393
00:20:52,300 --> 00:20:54,300
you know, something to Edge it out.

394
00:20:57,300 --> 00:20:57,900
So yeah.

395
00:20:58,100 --> 00:20:58,800
All right.

396
00:20:59,000 --> 00:20:59,700
So

397
00:21:00,500 --> 00:21:03,500
First things first, like that's actually much clearer.

398
00:21:03,500 --> 00:21:09,500
If we were sort of doing the proper, if we were actually Alpha, fading

399
00:21:09,500 --> 00:21:09,800
it out.

400
00:21:09,800 --> 00:21:11,600
It would actually be quite clear what was going on.

401
00:21:12,400 --> 00:21:16,400
So, I think we're actually to a point where we can start to use this,

402
00:21:16,400 --> 00:21:16,800
right?

403
00:21:16,900 --> 00:21:20,600
So I would say this is exactly what I want being able to come up and

404
00:21:20,600 --> 00:21:21,500
down these stairs.

405
00:21:21,500 --> 00:21:25,300
As I do, hopping wise is exactly what I wanted.

406
00:21:25,600 --> 00:21:29,500
So, I think I just would say that our goal is to take this, which is

407
00:21:29,500 --> 00:21:29,600
all

408
00:21:30,000 --> 00:21:34,200
dated in properly and not fading out properly and all that other stuff

409
00:21:34,300 --> 00:21:38,900
and just go through the renderer and clean out that input specs for

410
00:21:38,900 --> 00:21:39,300
it.

411
00:21:39,400 --> 00:21:42,000
So that all this stuff works the way it should work.

412
00:21:42,800 --> 00:21:44,000
And why isn't it?

413
00:21:44,000 --> 00:21:46,200
Do we know did I turn fading off or something?

414
00:21:46,300 --> 00:21:48,900
Do we know why fading isn't fading?

415
00:21:50,700 --> 00:21:51,400
Is that?

416
00:21:52,600 --> 00:21:56,400
Anyone know, anyone, just anyone know anything.

417
00:21:57,000 --> 00:21:59,500
So it faded out, so it looks like it's just not fitting out the

418
00:21:59,500 --> 00:22:00,300
rectangles.

419
00:22:01,800 --> 00:22:02,400
Actually.

420
00:22:04,300 --> 00:22:06,200
Looks like everything else faded out.

421
00:22:06,800 --> 00:22:07,700
Why is that the case?

422
00:22:07,700 --> 00:22:12,600
So when we do a push wrecked outline, the global Alpha did the global

423
00:22:12,600 --> 00:22:14,300
Alpha get reset or something.

424
00:22:15,900 --> 00:22:18,200
Or as the global Alpha, not obeyed.

425
00:22:20,600 --> 00:22:23,300
If the global Alpha is not a bay, that's a pretty simple fix, that's

426
00:22:23,300 --> 00:22:25,700
just because we didn't obey it, right?

427
00:22:26,100 --> 00:22:27,300
So Global Alpha,

428
00:22:30,600 --> 00:22:31,300
Hey, look.

429
00:22:33,000 --> 00:22:33,800
It's not obeyed.

430
00:22:35,300 --> 00:22:36,400
So that's pretty simple.

431
00:22:36,400 --> 00:22:38,700
If we want the global Alpha to be applied there.

432
00:22:38,700 --> 00:22:47,300
We can just say, well, when we push the wrecked on here, we'll take

433
00:22:47,300 --> 00:22:51,100
the global Alpha and and multiply it in, right?

434
00:22:52,600 --> 00:22:53,600
So, that's much better.

435
00:22:57,500 --> 00:22:58,100
All right.

436
00:22:59,600 --> 00:23:02,000
So now we're in pretty good shape actually already.

437
00:23:02,500 --> 00:23:05,400
And you can see that mostly what we're left with now since the global

438
00:23:05,400 --> 00:23:10,400
Alpha actually was working just fine is, we're just left with an

439
00:23:10,400 --> 00:23:15,500
inability to actually see some of the people whose have hacked Z

440
00:23:15,500 --> 00:23:19,000
values because they're sorting below the ground tiles, which should

441
00:23:19,000 --> 00:23:22,200
actually support, which should be below them, but are actually above

442
00:23:22,200 --> 00:23:23,400
them, right?

443
00:23:23,800 --> 00:23:25,400
There's also some interesting stuff here.

444
00:23:25,400 --> 00:23:28,900
Like once we have the stairwell, it's very obvious to me.

445
00:23:29,100 --> 00:23:31,800
That some things that shouldn't happen are happening.

446
00:23:31,800 --> 00:23:37,200
Like, for example, we don't really disallow jumps to arbitrary

447
00:23:37,200 --> 00:23:37,800
Heights.

448
00:23:38,200 --> 00:23:42,500
So like, you know, certain things can happen that probably shouldn't

449
00:23:42,500 --> 00:23:42,800
happen.

450
00:23:42,800 --> 00:23:47,100
Like, I can go from here and because there's no other tile to my left.

451
00:23:47,100 --> 00:23:50,300
I can jump all the way down to that one, which is probably not what

452
00:23:50,300 --> 00:23:52,000
should happen, right?

453
00:23:53,100 --> 00:23:54,900
But you know that is what's happening?

454
00:23:55,600 --> 00:23:58,900
Oh well, so

455
00:23:59,000 --> 00:23:59,900
Oh yeah.

456
00:24:02,000 --> 00:24:03,300
I think that's about it.

457
00:24:03,600 --> 00:24:05,900
So let's go ahead and tackle that Z stuff.

458
00:24:06,200 --> 00:24:08,700
I don't know what we want to do in terms of

459
00:24:09,900 --> 00:24:11,400
Drawing that lower layer.

460
00:24:11,400 --> 00:24:14,700
I think, you know, my, my suspicions anyway.

461
00:24:15,100 --> 00:24:18,600
Is that drawing that lower, that layer below us.

462
00:24:22,600 --> 00:24:26,700
I feel like we don't really want to fade that out because we may have

463
00:24:26,700 --> 00:24:30,400
a hole in the ground where we would want to see down to that layer.

464
00:24:31,500 --> 00:24:36,700
So I'm actually I think I'm going to actually add exactly that so that

465
00:24:36,700 --> 00:24:41,800
we can make sure that is clear.

466
00:24:42,300 --> 00:24:48,000
So handmade world's most dot CPP.

467
00:24:48,000 --> 00:24:51,900
I want to do an ad standard room on a, do like a knockout.

468
00:24:52,100 --> 00:24:59,600
Out so that basically nothing gets created, you know, if offset X is

469
00:24:59,800 --> 00:25:05,500
equal or is greater than equal to negative.

470
00:25:06,400 --> 00:25:14,800
Five, let's say and offset X is less than or equal to negative 3 and I

471
00:25:14,800 --> 00:25:17,700
may be accidentally removing the floor out from under somebody who

472
00:25:17,700 --> 00:25:19,100
needs to stand there and I apologize.

473
00:25:21,500 --> 00:25:22,300
For that.

474
00:25:25,000 --> 00:25:25,300
You know what?

475
00:25:25,300 --> 00:25:26,000
I'll probably do.

476
00:25:27,500 --> 00:25:29,300
Well, I don't know what I'll do.

477
00:25:29,800 --> 00:25:32,900
I don't know, I just don't know.

478
00:25:34,200 --> 00:25:39,300
So if it's in there and the offset Y is greater than equal to, you

479
00:25:39,300 --> 00:25:45,800
know, -3 and offset Y is less than or equal to negative.

480
00:25:47,700 --> 00:25:57,300
To note hole down to floor below.

481
00:26:00,100 --> 00:26:03,100
and then all of this stuff can happen, otherwise,

482
00:26:07,600 --> 00:26:08,300
Right?

483
00:26:09,800 --> 00:26:14,100
And so part of the problem here is that the standing on is going to be

484
00:26:14,100 --> 00:26:15,000
null in those cases.

485
00:26:15,000 --> 00:26:18,000
Have someone was trying not going to try to play something there that

486
00:26:18,000 --> 00:26:21,800
would go poorly and we may have a bug about that.

487
00:26:21,900 --> 00:26:23,300
So, yep.

488
00:26:24,700 --> 00:26:27,600
And that is exactly what I was saying was the problem.

489
00:26:29,700 --> 00:26:32,900
Add snake, peace, segment thingy.

490
00:26:32,900 --> 00:26:35,000
So my turn off the snake.

491
00:26:40,900 --> 00:26:44,300
And we'll check the monstar as well, but I think we're good.

492
00:26:44,300 --> 00:26:48,100
Okay, so there's the whole right.

493
00:26:48,400 --> 00:26:52,200
And I may need to move that whole a little bit, just to for optimal

494
00:26:52,200 --> 00:26:57,300
viewing, but there you can kind of see I'm looking down through the

495
00:26:57,300 --> 00:26:57,900
hole.

496
00:27:01,100 --> 00:27:06,300
And I'm seeing the world below me and I'm going to make one more.

497
00:27:06,300 --> 00:27:08,800
I'm going to move the whole a little bit up.

498
00:27:08,900 --> 00:27:14,700
I think where is the monstar added room 34?

499
00:27:16,000 --> 00:27:18,300
So we'll move, let's move that.

500
00:27:19,600 --> 00:27:21,600
A little bit in why?

501
00:27:23,000 --> 00:27:25,500
Can we move that up to like six potentially?

502
00:27:29,000 --> 00:27:32,900
Just want to get the monster out of the way, so he's not in the hole

503
00:27:33,800 --> 00:27:36,500
and where does the snake snake is X2?

504
00:27:37,100 --> 00:27:42,100
So we could then re-enable, the snake as well, if I move that whole

505
00:27:42,100 --> 00:27:42,900
up, I think.

506
00:27:43,100 --> 00:27:48,700
So if I come through here, and I say well, alright, my offset why I'm

507
00:27:48,700 --> 00:27:52,400
going to make that be much higher up.

508
00:27:52,400 --> 00:27:58,400
So I'm going to make that be like, you know, maybe 02 - one sort of

509
00:28:03,200 --> 00:28:04,800
I'm at one, that's it - one.

510
00:28:11,400 --> 00:28:13,700
I think that is all I really wanted.

511
00:28:13,700 --> 00:28:20,000
And so now I'm also going to need in addition, I'm going to need a

512
00:28:20,800 --> 00:28:21,000
right.

513
00:28:21,000 --> 00:28:23,600
That was not what I want to do additional for.

514
00:28:23,700 --> 00:28:27,100
So I need one more floor above this floor, right?

515
00:28:27,300 --> 00:28:31,700
Because you can kind of see, I want to see it Fade Out below below

516
00:28:31,700 --> 00:28:32,100
here.

517
00:28:33,000 --> 00:28:36,200
So, when I do a standard room,

518
00:28:40,300 --> 00:28:44,600
In here as I go through and I add my room.

519
00:28:44,600 --> 00:28:50,700
So I'm going to add a third room and I think, I don't know, I don't

520
00:28:50,700 --> 00:28:57,500
know how the door creation stuff here works, this is not the Z.

521
00:28:57,500 --> 00:29:00,200
Door thing is not met.

522
00:29:00,300 --> 00:29:02,900
Yeah, this is not super relevant.

523
00:29:02,900 --> 00:29:06,300
I don't think at the moment, this may get in our way because we had

524
00:29:06,300 --> 00:29:07,500
some weird logic here.

525
00:29:07,500 --> 00:29:08,100
That was

526
00:29:09,100 --> 00:29:10,500
Doing all kinds of crazy stuff.

527
00:29:10,500 --> 00:29:12,300
So I'm not sure what will happen here but we'll see.

528
00:29:12,400 --> 00:29:14,800
Hopefully we can climb up to the next level as well.

529
00:29:16,100 --> 00:29:16,500
Oops.

530
00:29:18,300 --> 00:29:20,400
You can see it makes it annoying to play as well.

531
00:29:20,400 --> 00:29:23,600
If we don't get that, like I really want to make it so that you can't

532
00:29:23,600 --> 00:29:27,500
hop off those stairwells as you're going up, so that it won't

533
00:29:27,500 --> 00:29:29,100
accidentally pick the wrong thing.

534
00:29:30,300 --> 00:29:35,300
so there we can now see kind of down to another layer below us and I'd

535
00:29:35,300 --> 00:29:39,700
like that to fade out and at the moment, it's not, right, so as I come

536
00:29:39,700 --> 00:29:40,600
through there,

537
00:29:42,000 --> 00:29:43,800
I definitely want that to fade out.

538
00:29:43,900 --> 00:29:48,700
And I also our cameras e interpret is a little bit odd and that's

539
00:29:48,700 --> 00:29:51,600
probably due to the motion of the head as well.

540
00:29:51,600 --> 00:29:53,600
So, we'll have to see what's going on there.

541
00:29:53,800 --> 00:29:57,600
Oh man, the snake is going up the stick snake.

542
00:29:59,300 --> 00:29:59,900
Did you just?

543
00:30:00,100 --> 00:30:02,400
The whole snake, just went up the stairs.

544
00:30:03,300 --> 00:30:04,000
All right.

545
00:30:04,100 --> 00:30:06,300
Well, good job snake.

546
00:30:07,700 --> 00:30:08,300
All right.

547
00:30:09,500 --> 00:30:15,600
I guess that's the problem with creating rich simulations is just even

548
00:30:15,600 --> 00:30:19,300
when you're just getting started, stuff does all these weird things

549
00:30:19,900 --> 00:30:20,800
and the snake just left.

550
00:30:20,800 --> 00:30:21,700
It went up the stairs.

551
00:30:22,200 --> 00:30:25,500
Okay, well, alright.

552
00:30:25,500 --> 00:30:29,800
So anyway, we should we could probably also at this point, D,

553
00:30:29,800 --> 00:30:34,100
obnoxious eyes are tiles because let's be honest, they're pretty

554
00:30:34,100 --> 00:30:35,200
obnoxious right now.

555
00:30:36,100 --> 00:30:38,500
So maybe I'll also just go ahead and fix that.

556
00:30:42,800 --> 00:30:44,500
You got to admit that orange color.

557
00:30:44,900 --> 00:30:51,500
When we're talking about a big old bright, huge Square, na easiest on

558
00:30:51,500 --> 00:30:55,000
the eyes, not the easiest thing on those eyes.

559
00:30:55,000 --> 00:30:59,200
So let's make that the I'm standing on you color, because it sure is

560
00:30:59,200 --> 00:31:00,200
easy to see.

561
00:31:01,100 --> 00:31:05,100
And then, let's go ahead and change this here out to something, a

562
00:31:05,100 --> 00:31:08,100
little more Placid like 50% gray.

563
00:31:11,300 --> 00:31:17,500
That sounds better, maybe not because of gamma.

564
00:31:19,800 --> 00:31:20,400
All right.

565
00:31:21,300 --> 00:31:24,000
So maybe something a little more like that and maybe just because

566
00:31:24,000 --> 00:31:29,000
we're in a forest, maybe we'll tinted green, you know what I'm saying?

567
00:31:29,600 --> 00:31:32,900
Just a little bit, just a nice little, let's just fire, a few little

568
00:31:32,900 --> 00:31:36,100
green things in there, you know, some of the little green happy

569
00:31:36,100 --> 00:31:36,700
things.

570
00:31:38,100 --> 00:31:43,800
Alright, so now we're getting there and yeah and like I said, we've

571
00:31:43,800 --> 00:31:46,500
got some work to do a bunch of stuff that this kind of reveals for us.

572
00:31:46,500 --> 00:31:48,400
It's nice that we can work on.

573
00:31:48,400 --> 00:31:49,400
For example, I can do this.

574
00:31:50,000 --> 00:31:51,300
Probably I'm guessing.

575
00:31:51,400 --> 00:31:52,600
Oh, no, I can't cool.

576
00:31:52,600 --> 00:31:53,700
That's below the tolerance.

577
00:31:53,700 --> 00:31:54,300
I guess, 45.

578
00:31:54,300 --> 00:31:56,400
I was like, I thought I could probably hop down there as like.

579
00:31:56,400 --> 00:32:00,600
We definitely don't want that to happen, but it didn't happen, so

580
00:32:00,600 --> 00:32:01,100
that's good.

581
00:32:01,700 --> 00:32:02,700
But yeah, you can kind of see.

582
00:32:02,700 --> 00:32:03,700
We've got some work to do here.

583
00:32:03,700 --> 00:32:07,200
Obviously, we want to fix that fading out.

584
00:32:07,200 --> 00:32:10,000
And we want to start working on getting that Z spec, correct.

585
00:32:10,800 --> 00:32:17,200
So let's see here in this situation that I feel like I want that to

586
00:32:17,200 --> 00:32:17,700
fade out.

587
00:32:17,700 --> 00:32:19,300
I feel like we were maybe a little bit.

588
00:32:19,500 --> 00:32:23,000
Overzealous because I don't want to have it go down too far.

589
00:32:23,300 --> 00:32:24,400
I don't want well.

590
00:32:32,900 --> 00:32:36,100
The problem with having a go down that far is that means we have to

591
00:32:36,100 --> 00:32:41,100
simulate all the people that are down there but at the same time I

592
00:32:41,100 --> 00:32:41,300
don't know.

593
00:32:41,300 --> 00:32:42,700
That could be kind of cool.

594
00:32:42,700 --> 00:32:46,700
I mean it's kind of neat to look, you know, if you imagine you're

595
00:32:46,700 --> 00:32:48,500
typically going the other direction, right?

596
00:32:48,500 --> 00:32:56,400
I'm typically going down and so, if you kind of imagine, you know, I'm

597
00:32:56,400 --> 00:32:59,700
going down to the dungeon and I see down there.

598
00:33:00,200 --> 00:33:03,600
There's like a magical sword thing that I want to get.

599
00:33:04,400 --> 00:33:07,700
That's two levels down, right?

600
00:33:07,700 --> 00:33:09,300
That's kind of cool.

601
00:33:09,500 --> 00:33:15,200
So I'm guessing that probably what we would want to do is instead of

602
00:33:15,200 --> 00:33:19,800
fading it that way, you know, we might want to say that the global

603
00:33:19,800 --> 00:33:23,300
Alpha does go out but not 20.

604
00:33:24,100 --> 00:33:26,700
So you know it's more like

605
00:33:29,100 --> 00:33:37,100
Fade bottom start Z is, you know, much earlier in, so it's like that

606
00:33:37,100 --> 00:33:42,400
or whatever, but it doesn't go out till a long time down.

607
00:33:44,400 --> 00:33:49,400
You know, so it's kind of just hazy and foggy down there and we could

608
00:33:49,400 --> 00:33:52,500
make that go to Black in dungeons.

609
00:33:52,500 --> 00:33:57,000
Like it's like lit, you know, more poorly or who knows what?

610
00:33:57,500 --> 00:33:59,000
But that actually seems kind of cool.

611
00:33:59,000 --> 00:33:59,500
And you know what?

612
00:33:59,500 --> 00:34:02,300
I'm going to take that even further and just say, let's see what

613
00:34:02,300 --> 00:34:06,700
happens if I'm to add a few more rooms because that just seems pretty

614
00:34:06,900 --> 00:34:07,800
pretty great.

615
00:34:08,400 --> 00:34:10,900
Well, you know, let's just add 6 stacked on top of each other.

616
00:34:10,900 --> 00:34:12,800
So this is just a giant stack of room.

617
00:34:12,900 --> 00:34:14,900
Alms for no reason at all.

618
00:34:15,800 --> 00:34:20,500
Okay, so I'm going to go ahead and and head up here.

619
00:34:21,800 --> 00:34:27,000
I also I wonder I wanted to see who is the slow people who is slow.

620
00:34:28,300 --> 00:34:31,400
So begin Sim update and render world.

621
00:34:33,100 --> 00:34:34,000
It's weird.

622
00:34:34,000 --> 00:34:36,600
These guys are the slow guys in this sort of situation.

623
00:34:36,900 --> 00:34:40,199
I feel like we should go find out exactly who's slow there and speed

624
00:34:40,199 --> 00:34:45,199
them up so that we don't have to worry because in real in retail mode,

625
00:34:45,300 --> 00:34:50,000
you know, in release filled, we're lightening fast even at this point

626
00:34:50,600 --> 00:34:53,199
and so there's something kind of stupid happening possibly some

627
00:34:53,199 --> 00:34:56,400
clearing to 0 or, you know, other things that are just convenience

628
00:34:56,400 --> 00:35:00,100
things that if we got rid of them in this case, they would fix the

629
00:35:00,100 --> 00:35:00,900
speed issue there.

630
00:35:01,200 --> 00:35:02,700
And we should probably do those so that we don't have.

631
00:35:02,900 --> 00:35:05,300
Slow, debug builds because I don't really like having to build and

632
00:35:05,300 --> 00:35:05,600
release.

633
00:35:05,600 --> 00:35:08,500
A lot of people just build and release all the time but I'm not really

634
00:35:08,500 --> 00:35:09,200
into that.

635
00:35:09,600 --> 00:35:11,000
I like having a debug build.

636
00:35:11,500 --> 00:35:12,100
So anyway,

637
00:35:15,700 --> 00:35:17,400
So, that's kind of cool, right?

638
00:35:17,400 --> 00:35:18,000
Like

639
00:35:22,600 --> 00:35:24,200
I think that's staying in the game.

640
00:35:24,200 --> 00:35:27,700
I mean that's just really cool and I don't, I don't I don't think

641
00:35:27,700 --> 00:35:30,300
that's really something I want to get rid of.

642
00:35:30,900 --> 00:35:35,600
So I'm going to say that that fade bottom can just keep on moving out,

643
00:35:35,600 --> 00:35:36,100
right?

644
00:35:36,200 --> 00:35:40,100
And and we'll just work on the actual effect that's down there but I

645
00:35:40,100 --> 00:35:43,300
think that's pretty cool and I think that's worth keeping in there.

646
00:35:44,100 --> 00:35:46,400
All right so let's kind of come up here.

647
00:35:48,300 --> 00:35:51,600
Let me see what's going on.

648
00:35:53,100 --> 00:35:57,400
So I'm going to come up up up up.

649
00:35:57,600 --> 00:35:59,800
Oops, I always there now.

650
00:36:00,400 --> 00:36:01,400
Is this the last floor?

651
00:36:01,400 --> 00:36:04,000
Now we, this is one more floor, so I should be able to come up here,

652
00:36:04,000 --> 00:36:04,400
right?

653
00:36:05,000 --> 00:36:05,900
Am I right about that?

654
00:36:07,600 --> 00:36:08,600
I don't know if I am or not.

655
00:36:13,600 --> 00:36:14,400
Snake.

656
00:36:14,800 --> 00:36:15,600
Get out.

657
00:36:16,500 --> 00:36:17,600
Get out of the way.

658
00:36:21,500 --> 00:36:22,000
All right.

659
00:36:24,400 --> 00:36:25,900
And one more guess.

660
00:36:31,700 --> 00:36:32,100
Yeah.

661
00:36:33,200 --> 00:36:36,100
Alright, so you can see the transition here, pretty clearly, right?

662
00:36:36,700 --> 00:36:38,800
You can see it kind of fading out there.

663
00:36:39,800 --> 00:36:40,700
In the distance.

664
00:36:41,700 --> 00:36:47,300
And so you know in you can see like I just I think that's pretty cool

665
00:36:48,100 --> 00:36:50,900
and I think we're going to want to keep that around because you can

666
00:36:50,900 --> 00:36:52,000
see what's kind of happening.

667
00:36:52,000 --> 00:36:56,400
There is I'm looking all the way down through this hole in the floor.

668
00:36:56,500 --> 00:37:00,400
And I'm seeing, you know, here's my level of the dungeon, here's the

669
00:37:00,400 --> 00:37:04,000
next level down here is the next level down here is the next level

670
00:37:04,000 --> 00:37:05,000
down from that.

671
00:37:05,100 --> 00:37:09,400
And I'm even seeing a dude, like moving around down there, doing some

672
00:37:09,600 --> 00:37:12,800
Off which I just think is kind of cool gameplay wise.

673
00:37:13,100 --> 00:37:17,800
So I think for like pits like that I think we're going to want that

674
00:37:18,000 --> 00:37:23,100
because that's just too neat and I never see that in games so I feel

675
00:37:23,100 --> 00:37:26,400
like that's a cool thing to have in a 2-D game because mostly that's

676
00:37:26,400 --> 00:37:27,800
something 2D games just don't do.

677
00:37:28,900 --> 00:37:31,600
So I'd like to keep that in there because I think that's kind of

678
00:37:31,600 --> 00:37:34,600
interesting and I just haven't seen it explored much.

679
00:37:36,100 --> 00:37:36,600
All right.

680
00:37:37,800 --> 00:37:40,600
So yeah so that feels pretty good to me.

681
00:37:41,600 --> 00:37:43,400
Can you see that there's the snake going down there?

682
00:37:45,000 --> 00:37:47,300
All right, so that's all good.

683
00:37:51,400 --> 00:37:55,900
And I think what I might do, what have I got, I've got about 5, I got

684
00:37:55,900 --> 00:37:58,000
20 minutes left, so I think what I'm going to do.

685
00:38:01,600 --> 00:38:03,800
Besides blow my nose because it's allergy time.

686
00:38:08,700 --> 00:38:09,400
Here in Seattle.

687
00:38:11,000 --> 00:38:12,000
I think what I'm going to do.

688
00:38:13,200 --> 00:38:17,500
Is I want to just quickly check to see if I can make it.

689
00:38:17,500 --> 00:38:23,300
So this isn't too slow because I don't want to have to use the the

690
00:38:25,000 --> 00:38:27,900
release builds all the time and their way faster.

691
00:38:28,500 --> 00:38:28,900
Right?

692
00:38:28,900 --> 00:38:31,200
So like for example, if I go

693
00:38:37,200 --> 00:38:38,400
Into the build-up at.

694
00:38:39,300 --> 00:38:43,500
If I change it to release my build, we're 60 frames a second all of

695
00:38:43,500 --> 00:38:45,300
sudden, right?

696
00:38:46,100 --> 00:38:50,800
And 60 frames a second, using almost no time, right?

697
00:38:50,800 --> 00:38:55,700
Because this Frame display here, I think that's the, that's the time

698
00:38:55,700 --> 00:38:59,200
that we're like, waiting for the operating system to do stuff.

699
00:38:59,600 --> 00:38:59,800
So,

700
00:39:00,200 --> 00:39:06,400
Literally like we're taking almost no time of the sixtieth of a second

701
00:39:07,000 --> 00:39:10,600
whereas in the other one, we can't even hit 60 frames a second.

702
00:39:10,800 --> 00:39:14,300
So, the difference there is pretty huge and it means that something

703
00:39:14,300 --> 00:39:18,500
we're doing in debug mode is very expensive, and I just want to go

704
00:39:18,500 --> 00:39:21,300
figure out what that is because we can probably just have an optimized

705
00:39:21,300 --> 00:39:25,000
version of just one thing and then be able to run at this speed in

706
00:39:25,000 --> 00:39:26,400
debug mode, right?

707
00:39:27,900 --> 00:39:30,600
And I'd like to do that and then we'll we basically left ourselves set

708
00:39:30,600 --> 00:39:35,100
up with all of the problems on screen that we have to solve this week.

709
00:39:35,200 --> 00:39:37,200
And so, that'll be perfect.

710
00:39:37,200 --> 00:39:39,300
I think for what we want to do

711
00:39:41,100 --> 00:39:42,400
So yeah, and you can kind of see.

712
00:39:42,400 --> 00:39:42,600
Yeah.

713
00:39:42,600 --> 00:39:42,800
Right.

714
00:39:42,800 --> 00:39:45,600
Like we're totally 60 frames a second right now, so I'm not sure.

715
00:39:45,600 --> 00:39:48,700
Now, if we switch the software renderer, we would not be because the

716
00:39:48,700 --> 00:39:49,900
poorest offer render.

717
00:39:53,400 --> 00:39:55,400
I want it to want to see how bad it is with that.

718
00:39:55,800 --> 00:39:57,700
Where is this offer render again?

719
00:40:01,100 --> 00:40:01,600
There we go.

720
00:40:03,800 --> 00:40:07,300
The poor software renderer cannot render that many over drawers of the

721
00:40:07,300 --> 00:40:09,200
screen at all, right?

722
00:40:09,700 --> 00:40:13,300
And we could, you know, we could make it happen because what we do is

723
00:40:13,300 --> 00:40:17,400
we'd start culling we do box culling on the tiles and we could toad

724
00:40:17,400 --> 00:40:19,700
will, you know, probably someday.

725
00:40:19,700 --> 00:40:24,400
We'll go back and as a fun stream after the game is all done, get the

726
00:40:24,400 --> 00:40:27,700
software renderer running at 60 frames a second again because it's

727
00:40:27,700 --> 00:40:28,500
just, it's fun.

728
00:40:30,000 --> 00:40:32,500
But yeah, when you draw that many things on top of each other, it's

729
00:40:32,500 --> 00:40:33,500
too much for it.

730
00:40:35,400 --> 00:40:35,900
So, yeah.

731
00:40:36,200 --> 00:40:38,100
But anyway, oh, and you know what?

732
00:40:38,100 --> 00:40:38,600
You know what?

733
00:40:38,600 --> 00:40:40,200
That's actually not true either.

734
00:40:40,500 --> 00:40:41,800
I guess we don't know.

735
00:40:41,900 --> 00:40:44,000
We never optimize the rectangle fill.

736
00:40:44,100 --> 00:40:46,700
So the rectangle Phil isn't even running through the optimized path.

737
00:40:46,800 --> 00:40:49,600
So we don't even know how slow this off Runners point being.

738
00:40:49,600 --> 00:40:51,400
It probably wouldn't have been nearly that slow, but it still would

739
00:40:51,400 --> 00:40:53,500
have been too slow because it can't software.

740
00:40:53,500 --> 00:40:56,000
Renderer probably can't do that many layers.

741
00:40:58,300 --> 00:41:00,900
At least I would be surprised to learn that it could.

742
00:41:01,800 --> 00:41:04,800
So anyway what I want to do is I just want to kind of figure out what

743
00:41:04,800 --> 00:41:05,600
we're doing there.

744
00:41:05,600 --> 00:41:06,600
That's so onerous.

745
00:41:07,200 --> 00:41:09,800
And so if you remember correctly, it begins.

746
00:41:09,800 --> 00:41:12,200
Sam was a big time waster, right?

747
00:41:12,500 --> 00:41:15,000
So you come in here, too, what was it?

748
00:41:15,700 --> 00:41:19,200
Let's see, you come in here and you're like frame display.

749
00:41:19,200 --> 00:41:22,700
So that is waiting for the operating system, right?

750
00:41:23,500 --> 00:41:25,300
I believe, is that correct?

751
00:41:34,500 --> 00:41:34,900
Yeah.

752
00:41:35,200 --> 00:41:41,000
So that's that's waiting for the OS as far as I know and or well not

753
00:41:41,000 --> 00:41:46,000
entirely true so that's not that frame display.

754
00:41:46,000 --> 00:41:47,600
Also counts.

755
00:41:50,600 --> 00:41:52,900
Also counts, the renderer starting time.

756
00:41:52,900 --> 00:41:57,700
So we probably want to be more granular with that.

757
00:41:57,700 --> 00:41:59,900
I think because we don't really know.

758
00:42:00,000 --> 00:42:00,700
What's going on there.

759
00:42:00,700 --> 00:42:02,100
So let's find out

760
00:42:04,600 --> 00:42:07,200
So win32 display buffer and window.

761
00:42:08,300 --> 00:42:12,000
What I'd like to do here, is just say, okay, let's let's take a look.

762
00:42:12,300 --> 00:42:14,500
This is the case we care most about here.

763
00:42:14,900 --> 00:42:19,400
So I'm going to do a thing where we just do begin block and block.

764
00:42:20,600 --> 00:42:21,500
You can block.

765
00:42:24,400 --> 00:42:25,100
And block.

766
00:42:26,700 --> 00:42:28,600
So here I can say well how long does swap?

767
00:42:28,600 --> 00:42:34,900
I first take, how long does opengl renderer commands take and now I

768
00:42:34,900 --> 00:42:37,800
can actually see for real what's going on there?

769
00:42:39,200 --> 00:42:40,800
Which is much more useful, right?

770
00:42:42,600 --> 00:42:45,000
Okay, so pausing again.

771
00:42:45,800 --> 00:42:47,000
Let's take a look here.

772
00:42:48,100 --> 00:42:51,100
I should probably also that's in the platform layer, so I guess now I

773
00:42:51,100 --> 00:42:51,500
think about it.

774
00:42:51,500 --> 00:42:55,100
I have to rebuild and restore completely to see those guys show up.

775
00:42:57,900 --> 00:42:59,500
Okay, so there we go.

776
00:43:00,600 --> 00:43:03,200
So, looking through here, we've got opengl, renderer commands is

777
00:43:03,200 --> 00:43:06,200
taking 30% of the time, get closer to where she was taking 14% of the

778
00:43:06,200 --> 00:43:10,700
time, begins Tim's taking close to 20 and update and render world is

779
00:43:10,700 --> 00:43:12,700
taking like 25, right?

780
00:43:13,700 --> 00:43:16,800
So let's try to break again, some of these down into a little bit

781
00:43:16,800 --> 00:43:20,800
finer, grained pieces, so that we can maybe hope to have a better idea

782
00:43:20,800 --> 00:43:24,200
of exactly who is taking the time in there, right?

783
00:43:25,500 --> 00:43:27,400
And so update, and

784
00:43:27,500 --> 00:43:30,400
World, I would like to take a look at here World mode.

785
00:43:31,700 --> 00:43:32,400
Just EVP.

786
00:43:33,000 --> 00:43:34,000
So update and render world.

787
00:43:34,000 --> 00:43:35,800
It's like a giant time function right now.

788
00:43:36,100 --> 00:43:40,000
And so, what I would say here is well maybe let's figure out how long

789
00:43:40,000 --> 00:43:43,000
it takes to execute the brains so I'll say begin block.

790
00:43:46,800 --> 00:43:48,700
Execute grains.

791
00:43:51,800 --> 00:43:52,500
And block.

792
00:43:53,700 --> 00:43:56,800
And then in here where we do some little entities, I'll do like

793
00:43:57,600 --> 00:43:58,300
simulate.

794
00:43:59,500 --> 00:44:00,000
Please.

795
00:44:01,800 --> 00:44:05,600
And so that way we've got some idea of what's happening in these

796
00:44:05,600 --> 00:44:06,100
things.

797
00:44:08,600 --> 00:44:11,000
And I can move this out to functions to maybe I will.

798
00:44:12,300 --> 00:44:13,300
So, let's take a look.

799
00:44:17,000 --> 00:44:19,600
So looking here, we've got begin simulate entities.

800
00:44:19,800 --> 00:44:21,700
So what we learned from that, right?

801
00:44:21,700 --> 00:44:26,800
Right off the bat is that brains are not the problem, which is good.

802
00:44:27,000 --> 00:44:30,900
I mean, one less thing to worry about, but you can see, you know, we

803
00:44:30,900 --> 00:44:34,800
don't have anything like the brains are down here in the noise, right.

804
00:44:34,800 --> 00:44:37,600
Basically, what we're looking at to speed up, this program is pretty

805
00:44:37,600 --> 00:44:40,400
much we're looking at stuff that's above here.

806
00:44:40,400 --> 00:44:42,000
Now, debug and there's nothing we can do.

807
00:44:42,000 --> 00:44:45,600
Is these guys are slow, always a debug collation and the debug and

808
00:44:46,300 --> 00:44:48,800
There's not much we can do about those guys because they're big

809
00:44:48,800 --> 00:44:51,200
expensive heavyweight sorts of operations.

810
00:44:51,200 --> 00:44:52,000
It's true.

811
00:44:52,000 --> 00:44:56,700
But these guys are all at the top of the list.

812
00:44:56,700 --> 00:44:59,800
And so all of these guys together, you can.

813
00:45:00,000 --> 00:45:03,500
Kind of account for something like seventy percent of the executable

814
00:45:03,500 --> 00:45:04,000
time.

815
00:45:05,300 --> 00:45:06,500
You know what would be kind of cool.

816
00:45:06,500 --> 00:45:07,900
By the way with this

817
00:45:10,900 --> 00:45:12,000
In fact, let's just do it.

818
00:45:13,300 --> 00:45:14,500
I mean, why not right?

819
00:45:15,200 --> 00:45:17,300
So if I come down here into the debug code,

820
00:45:18,500 --> 00:45:21,800
Instead of saying, hey guys wouldn't it be cool to do this thing?

821
00:45:22,000 --> 00:45:23,100
Why just do the thing?

822
00:45:25,600 --> 00:45:31,900
So where we display that in the, let's see here in the Cycles.

823
00:45:32,300 --> 00:45:36,300
Here's our draw top clocks list, right?

824
00:45:36,800 --> 00:45:40,600
And what I would saying is, well why don't we just take this

825
00:45:40,600 --> 00:45:42,400
percentage that were printing out?

826
00:45:42,900 --> 00:45:49,000
And as we go down, do if you were to get, you know, if you were to

827
00:45:49,000 --> 00:45:53,800
look at the percentage of time in the program taken total up to that

828
00:45:53,800 --> 00:45:53,900
point,

829
00:45:54,100 --> 00:45:55,100
In the list.

830
00:45:57,000 --> 00:45:58,000
How much would it be?

831
00:45:58,100 --> 00:46:01,700
So it's like the cumulative percentage to that point that makes sense.

832
00:46:03,700 --> 00:46:07,500
So I don't know exactly how we want to put that but let's assume

833
00:46:10,200 --> 00:46:11,200
You put that like this.

834
00:46:11,900 --> 00:46:17,400
So we've got, you know, the Cycles we've got.

835
00:46:17,400 --> 00:46:20,200
The, what's the PC?

836
00:46:21,600 --> 00:46:25,900
Percentage total time 100% over total time, right?

837
00:46:26,600 --> 00:46:31,300
So all we have to do here is in addition to its percentage the running

838
00:46:31,300 --> 00:46:35,800
total percentage would just be like running.

839
00:46:35,800 --> 00:46:36,200
Some

840
00:46:38,000 --> 00:46:38,500
Right.

841
00:46:39,100 --> 00:46:45,200
And what we do there is say well, okay, so running some is just a

842
00:46:45,200 --> 00:46:52,900
value that starts at 0 and every time through here, we take, whatever

843
00:46:52,900 --> 00:46:57,700
the stats, some was and we fold it in, right?

844
00:46:59,800 --> 00:47:06,400
And so, then if we look, you can kind of see, like as you go, it's 21%

845
00:47:06,400 --> 00:47:08,800
of the program, you know, up to this point.

846
00:47:10,100 --> 00:47:15,200
Now, it's 41 percent for everything up to this point, it's 57 percent

847
00:47:15,200 --> 00:47:16,400
up to this point, right?

848
00:47:16,400 --> 00:47:22,000
And as we go down, we're we're sort of getting up to there and in

849
00:47:22,000 --> 00:47:28,300
fact, you know what I could do so that it's maybe not so ownerís and

850
00:47:28,500 --> 00:47:33,500
What kind of always, I don't know what you want to call it up and up.

851
00:47:35,000 --> 00:47:37,100
Doing something bad.

852
00:47:37,100 --> 00:47:38,800
That is not good.

853
00:47:39,400 --> 00:47:46,500
I know we had a feature here that allowed us to kind of like Place

854
00:47:46,600 --> 00:47:50,600
text that, you know, hover text if that makes sense.

855
00:47:51,600 --> 00:47:56,100
And so, I just would go and look, and, and say that must be her

856
00:47:56,100 --> 00:47:56,500
summer.

857
00:47:56,500 --> 00:47:59,200
Yeah, you can see, right is in rectangle.

858
00:47:59,200 --> 00:47:59,800
And then we did,

859
00:48:00,000 --> 00:48:01,500
An ad tooltip thing.

860
00:48:02,300 --> 00:48:05,900
And so I'm just going to go and make that the tooltip.

861
00:48:07,000 --> 00:48:07,500
Right.

862
00:48:07,700 --> 00:48:11,600
So I can say well alright if we're in the rectangle whatever the

863
00:48:11,600 --> 00:48:15,800
rectangle this thing is which I believe text out returns, right?

864
00:48:15,800 --> 00:48:18,800
Doesn't text out return a rectangle to you.

865
00:48:18,900 --> 00:48:20,000
I feel like it does.

866
00:48:20,000 --> 00:48:22,600
Maybe it doesn't, let's find out.

867
00:48:23,200 --> 00:48:27,400
But I think we can just say like, you know, rectangle.

868
00:48:29,900 --> 00:48:31,600
Text wrecked or something.

869
00:48:32,100 --> 00:48:34,900
And I can just say, well if you're in the text wrecked,

870
00:48:37,000 --> 00:48:40,500
And maybe that's maybe I want the whole bar wrecked, I don't know, but

871
00:48:40,500 --> 00:48:42,700
we're just going to do this for now, we'll say, okay, if you're in

872
00:48:42,700 --> 00:48:46,900
that rectangle, then we're going to do a printf here and we're going

873
00:48:46,900 --> 00:48:51,500
to take this thing that we were Printing.

874
00:48:51,800 --> 00:48:59,100
And we're going to say, all right, cumulative to this point is that

875
00:48:59,200 --> 00:49:00,000
much time.

876
00:49:06,600 --> 00:49:07,100
Right.

877
00:49:09,400 --> 00:49:11,000
Easy peasy, lemon squeezy.

878
00:49:12,100 --> 00:49:13,900
I gotta remember to update for coder.

879
00:49:13,900 --> 00:49:17,100
Has fixed these indentation bugs already, but I haven't updated the

880
00:49:17,200 --> 00:49:21,100
for coder that I'm using on stream and I should really do that soon.

881
00:49:22,500 --> 00:49:26,000
I haven't had a chance to do that though.

882
00:49:26,500 --> 00:49:29,400
So text out at does not do that.

883
00:49:30,200 --> 00:49:31,800
Why not?

884
00:49:32,900 --> 00:49:34,500
Why don't you do it?

885
00:49:35,600 --> 00:49:37,300
Show me the texts out?

886
00:49:41,400 --> 00:49:42,900
What is wrong with you?

887
00:49:44,000 --> 00:49:45,800
Why are you not doing it?

888
00:49:46,400 --> 00:49:51,900
I know you should because I've programmed for so many years now that I

889
00:49:51,900 --> 00:49:56,400
just know that's what that function would do, if it knew what it was

890
00:49:56,400 --> 00:49:57,000
doing.

891
00:49:58,000 --> 00:49:59,600
And now it does.

892
00:50:01,000 --> 00:50:03,900
All right, so for running here, I should be able to hover.

893
00:50:03,900 --> 00:50:07,200
I'm not able to hover which is crap.

894
00:50:08,100 --> 00:50:09,300
So let's figure out what's going on there.

895
00:50:21,100 --> 00:50:23,500
If the mouse speed, we have a mouse P.

896
00:50:23,900 --> 00:50:24,800
We got a mouse p.

897
00:50:26,300 --> 00:50:27,900
The mouthpiece in the rectangle.

898
00:50:27,900 --> 00:50:31,200
We add the tool tip and so that should work.

899
00:50:31,900 --> 00:50:36,800
I would think because the techstop gives us the rectangle.

900
00:50:36,800 --> 00:50:47,200
Yes techstop to book State we go ahead and output the text and then we

901
00:50:48,700 --> 00:50:50,600
we return a rectangle.

902
00:50:50,600 --> 00:50:51,000
Yeah.

903
00:50:54,100 --> 00:50:55,800
Yeah, we Union it in.

904
00:50:56,300 --> 00:50:59,000
So we have all the glyphs producer rectangle.

905
00:50:59,400 --> 00:50:59,800
So that's

906
00:51:00,000 --> 00:51:02,300
Should work.

907
00:51:05,000 --> 00:51:07,400
But it doesn't work.

908
00:51:09,800 --> 00:51:12,200
And I'm not sure why.

909
00:51:31,300 --> 00:51:32,300
Methinks.

910
00:51:32,300 --> 00:51:35,300
We will have 20.

911
00:51:41,400 --> 00:51:42,900
I wonder.

912
00:51:48,800 --> 00:51:51,600
There isn't a transform being applied here is there.

913
00:51:52,100 --> 00:51:55,200
I don't actually know if this stuff applies properly to.

914
00:51:55,400 --> 00:51:57,300
Yeah, well, no, I don't think it would be a problem.

915
00:52:00,400 --> 00:52:00,800
All right.

916
00:52:00,800 --> 00:52:02,200
Well, I'm not sure why that's happening.

917
00:52:02,400 --> 00:52:03,500
So I'm going to go ahead and step in.

918
00:52:03,500 --> 00:52:05,900
I don't have a good guess I got no good guess.

919
00:52:06,200 --> 00:52:07,700
So I'm going to go take a look at this function.

920
00:52:07,700 --> 00:52:08,500
What is it called?

921
00:52:08,600 --> 00:52:09,800
Drop clocks list.

922
00:52:13,800 --> 00:52:14,400
All right.

923
00:52:17,100 --> 00:52:18,200
I don't care about that.

924
00:52:19,300 --> 00:52:20,100
I care about this.

925
00:52:22,900 --> 00:52:26,900
All right, so clearly our rectangle is not ever testing positive,

926
00:52:27,500 --> 00:52:28,000
right?

927
00:52:28,800 --> 00:52:30,800
Because if it was, we would come in here.

928
00:52:31,200 --> 00:52:34,500
So let's take a stop here and see, what does that text record look

929
00:52:34,500 --> 00:52:35,400
like, oh, dear.

930
00:52:37,400 --> 00:52:40,400
That is not, that's not valid.

931
00:52:40,600 --> 00:52:45,400
Not a valid rectangle, which may be fine as long as somebody

932
00:52:45,400 --> 00:52:49,000
eventually because, like, people who are clipped off, maybe don't get

933
00:52:49,000 --> 00:52:49,500
the but yeah.

934
00:52:49,500 --> 00:52:51,100
That's, that's not looking good now.

935
00:52:51,100 --> 00:52:51,900
Look, not great.

936
00:52:52,000 --> 00:52:52,600
Not great.

937
00:52:53,500 --> 00:52:55,300
So let's go ahead in there and see what happened.

938
00:52:55,900 --> 00:52:58,000
Okay, so we have a rectangle to result here.

939
00:52:58,000 --> 00:52:59,200
We're going to call a tech top.

940
00:53:00,300 --> 00:53:02,600
We call a text app, we initialize it to the inverted Infinity

941
00:53:02,600 --> 00:53:03,800
rectangle, which is this.

942
00:53:04,300 --> 00:53:06,300
We come on through here and

943
00:53:06,500 --> 00:53:13,500
Start to look at our code points and we print some spaces.

944
00:53:14,800 --> 00:53:16,700
Apparently we print only spaces.

945
00:53:18,800 --> 00:53:21,000
For a long, long, long time.

946
00:53:21,000 --> 00:53:24,200
Then we come in here, I see.

947
00:53:41,300 --> 00:53:49,000
So for some reason, we decide not to get the sizes of these or not to

948
00:53:49,000 --> 00:53:52,200
perform the union inning when we draw.

949
00:53:54,100 --> 00:53:59,800
even though I see, so this is kind of

950
00:54:00,000 --> 00:54:00,800
Stupid.

951
00:54:01,200 --> 00:54:05,800
Because it means that pushed bitmap would have been getting the bitmap

952
00:54:06,700 --> 00:54:09,800
anyway and we could just have recorded it there.

953
00:54:10,700 --> 00:54:18,500
Alright, alright, well, I guess I'm not as dumb as I thought I was.

954
00:54:21,600 --> 00:54:23,000
Which is unfortunate.

955
00:54:25,000 --> 00:54:29,900
Or rather, I guess I am as dumb as I thought I was because really that

956
00:54:29,900 --> 00:54:32,700
information would have been free when it comes through here, but we

957
00:54:32,700 --> 00:54:34,600
wanted to use the same render call.

958
00:54:35,800 --> 00:54:39,000
and the reason that push bitmap doesn't return the bitmap to you, I

959
00:54:39,000 --> 00:54:43,500
guess is because you don't have

960
00:54:47,400 --> 00:54:51,100
And I guess that is doing extra work here, which I'm not sure why it

961
00:54:51,100 --> 00:54:51,500
really is.

962
00:54:51,500 --> 00:54:54,600
I guess, just because of the deferring, is mostly why.

963
00:54:54,900 --> 00:54:55,200
All right.

964
00:54:55,200 --> 00:54:55,900
That's fine.

965
00:54:56,800 --> 00:54:58,100
Maybe I'm not stupid.

966
00:54:58,300 --> 00:54:59,500
Maybe I am.

967
00:54:59,500 --> 00:55:03,000
I feel like there may be a little stupidity there but we're going to

968
00:55:04,500 --> 00:55:09,800
Pretend that it's not that stupid so that we can feel better about

969
00:55:09,800 --> 00:55:15,700
ourselves which of course is the Modern Way in our American education

970
00:55:15,700 --> 00:55:16,000
system.

971
00:55:16,000 --> 00:55:17,400
So it's all good.

972
00:55:18,100 --> 00:55:24,200
Just tell yourself that you're a winner and move on and that's that's

973
00:55:24,200 --> 00:55:25,000
just what we're going to do.

974
00:55:25,100 --> 00:55:27,300
We're just going to tell ourselves that we're that we are winner.

975
00:55:28,000 --> 00:55:28,900
Good job winner.

976
00:55:29,400 --> 00:55:31,400
You really did great on that one.

977
00:55:31,900 --> 00:55:32,500
Nice work.

978
00:55:33,800 --> 00:55:34,100
So

979
00:55:34,400 --> 00:55:36,300
Let's see here, get text size.

980
00:55:36,300 --> 00:55:42,700
Does not take three things, that's probably true because it doesn't

981
00:55:42,700 --> 00:55:44,200
probably need to actually issue.

982
00:55:44,200 --> 00:55:48,800
Let's take a look to debug you either it only takes a debug straight

983
00:55:48,800 --> 00:55:52,500
and a string, it doesn't care where it's at because of course the size

984
00:55:52,500 --> 00:55:53,900
is always going to be the same.

985
00:55:54,400 --> 00:55:58,200
So once we get text size here, we would have to offset the rectangle

986
00:55:58,200 --> 00:55:59,100
by that though.

987
00:55:59,200 --> 00:56:02,600
And in fact you know what, if we don't already have utility function

988
00:56:02,600 --> 00:56:03,900
for that, I feel like we should

989
00:56:05,200 --> 00:56:09,600
Because right, we would want that to be something we could do.

990
00:56:14,800 --> 00:56:18,500
Sort of anytime we wanted and it looks like we're already handling

991
00:56:18,500 --> 00:56:19,600
that displacement.

992
00:56:19,800 --> 00:56:22,000
So it seems silly to throw it away to throw away.

993
00:56:22,000 --> 00:56:24,400
That math work that we already had.

994
00:56:25,200 --> 00:56:28,000
All right, let's see here.

995
00:56:31,300 --> 00:56:31,900
Any better.

996
00:56:33,300 --> 00:56:34,000
Much better.

997
00:56:34,600 --> 00:56:39,800
Okay yeah, so now we can kind of see where are splitting point is our

998
00:56:39,800 --> 00:56:40,300
tool tips.

999
00:56:40,300 --> 00:56:42,300
Could really use a little bit of backing on them.

1000
00:56:43,600 --> 00:56:45,800
I would think so.

1001
00:56:45,800 --> 00:56:52,200
You know, we could also say, well, we're the tooltip at where the

1002
00:56:52,200 --> 00:56:53,300
tooltip code at.

1003
00:56:54,200 --> 00:56:55,000
Let's see here.

1004
00:56:57,200 --> 00:56:59,800
yeah, so this code, when we do our text text text out,

1005
00:57:00,100 --> 00:57:04,800
That would be basically the same so the text bounds.

1006
00:57:06,200 --> 00:57:11,500
It looks like we get the dimension of the text bounds but we don't

1007
00:57:11,500 --> 00:57:18,900
ever draw the actual look we don't actually push a rectangle.

1008
00:57:20,000 --> 00:57:22,900
On there, for whatever reason right?

1009
00:57:23,400 --> 00:57:27,000
We don't we don't ever put like a backing rectangle on it.

1010
00:57:27,300 --> 00:57:30,000
I don't know why we just don't.

1011
00:57:30,700 --> 00:57:31,500
Let's see here.

1012
00:57:34,400 --> 00:57:36,000
Like, this is what we want.

1013
00:57:36,900 --> 00:57:37,600
You know what I mean?

1014
00:57:38,100 --> 00:57:42,700
So it feels like, yeah, we should come in here and say, hey, I would

1015
00:57:42,700 --> 00:57:43,800
like to

1016
00:57:44,900 --> 00:57:50,300
I would like to draw One of These Fine fellows here for the element

1017
00:57:50,300 --> 00:57:52,100
bands, that whatever it is that we're doing.

1018
00:57:52,100 --> 00:57:54,600
And then I would like to have that be you know,

1019
00:57:57,200 --> 00:57:58,500
Some kind of medium Alpha.

1020
00:58:02,900 --> 00:58:04,900
It's not really dark enough.

1021
00:58:12,700 --> 00:58:18,400
And I think that probably needs to be further forward as well.

1022
00:58:18,700 --> 00:58:20,900
So I would say that should probably be.

1023
00:58:21,700 --> 00:58:24,200
Where is this guy at in Z?

1024
00:58:24,200 --> 00:58:25,500
What's his transform?

1025
00:58:25,500 --> 00:58:27,000
I'm not actually sure.

1026
00:58:34,100 --> 00:58:35,300
Z sorting wise.

1027
00:58:37,200 --> 00:58:39,700
Speaking of things that could stand to have their Z, sorting worked

1028
00:58:39,700 --> 00:58:40,200
out.

1029
00:58:47,100 --> 00:58:49,600
Because I feel like this stuff was never particularly good either.

1030
00:58:49,600 --> 00:58:55,000
You kind of had to make these tooltip transform and all this other

1031
00:58:55,000 --> 00:58:57,800
stuff when it's really we just kind of, wanted to say, like, okay,

1032
00:58:57,800 --> 00:59:01,800
generally the stuff appears above this other stuff and it was just a

1033
00:59:01,800 --> 00:59:02,900
little bit too formal.

1034
00:59:11,100 --> 00:59:13,800
So, the tooltips would always be above everything else.

1035
00:59:13,800 --> 00:59:14,400
Certainly.

1036
00:59:16,800 --> 00:59:17,300
There we go.

1037
00:59:19,000 --> 00:59:23,300
And I guess this just had the sort bias baked into it directly.

1038
00:59:24,600 --> 00:59:28,400
For whatever reason, not sure, exactly how that was meant to work.

1039
00:59:34,700 --> 00:59:35,000
Yeah.

1040
00:59:37,100 --> 00:59:38,600
Alright, let's take a look at that.

1041
00:59:48,000 --> 00:59:49,400
Okay.

1042
00:59:50,400 --> 00:59:51,500
That's a little easier to read.

1043
00:59:51,500 --> 00:59:53,000
We probably need a little more region.

1044
00:59:53,000 --> 00:59:57,300
Needs to be probably a little bit darker but that's fine.

1045
01:00:00,000 --> 01:00:05,100
Okay, so let's make this sky where we do the push back to them and

1046
01:00:05,100 --> 01:00:05,600
bounce.

1047
01:00:06,400 --> 01:00:11,200
Let's do an ad radius to on that guy and just you know do like a nice

1048
01:00:11,800 --> 01:00:20,000
sort of wider gap of that element bands, push wrecked.

1049
01:00:20,900 --> 01:00:22,100
So it takes a V2.

1050
01:00:22,100 --> 01:00:22,400
Sorry.

1051
01:00:28,200 --> 01:00:32,300
So now we got kind of a, just a, just a bigger region and we can read

1052
01:00:32,300 --> 01:00:35,600
that tooltip a lot better as well as these tooltips a lot better too.

1053
01:00:37,100 --> 01:00:39,700
So now we can kind of scan through here and just see like where our

1054
01:00:39,700 --> 01:00:44,000
break point is and you can kind of see that like, well by the time we

1055
01:00:44,000 --> 01:00:47,100
get up to debug and anyway, which is something we can't do much about

1056
01:00:47,200 --> 01:00:51,000
80% of our program time is spent up in here, right?

1057
01:00:51,500 --> 01:00:55,600
So it's a pretty fat optimization Target and, you know, so we probably

1058
01:00:55,600 --> 01:00:57,900
don't have to worry too much about the fact that the debug code slows

1059
01:00:57,900 --> 01:00:58,300
us down.

1060
01:00:58,300 --> 01:01:01,000
Plus the fact that a lot of that code goes away when we close this

1061
01:01:01,000 --> 01:01:01,800
stuff, right?

1062
01:01:01,800 --> 01:01:05,700
You can see the difference in time when we're not processing the debug

1063
01:01:05,700 --> 01:01:06,100
information.

1064
01:01:06,300 --> 01:01:08,100
Like for profiling information and stuff.

1065
01:01:08,100 --> 01:01:11,900
You can see that this time goes down so that that becomes less

1066
01:01:11,900 --> 01:01:14,600
impactful when we're not viewing it as well, which is nice.

1067
01:01:16,300 --> 01:01:20,900
So yeah, we can see that simulate entities is a big problem and so we

1068
01:01:20,900 --> 01:01:24,600
should probably look at ways of fixing the code in simulate entities

1069
01:01:24,600 --> 01:01:25,200
to make it.

1070
01:01:25,200 --> 01:01:29,300
Not take so long, get closest reversible we know exactly how to fix

1071
01:01:29,500 --> 01:01:31,300
that's a spatial query and we can accelerate.

1072
01:01:31,300 --> 01:01:33,100
The spatial query is quite considerably.

1073
01:01:33,400 --> 01:01:34,500
Opengl renderer commands.

1074
01:01:34,500 --> 01:01:38,500
I'm not sure how speed up a bowl that is in debug mode, but possibly a

1075
01:01:38,500 --> 01:01:41,600
little bit, just because again, it's doing a bunch of stuff that

1076
01:01:43,200 --> 01:01:47,900
It's like walking through and possibly doing sorts and stuff like

1077
01:01:47,900 --> 01:01:48,000
that.

1078
01:01:48,000 --> 01:01:52,400
We could we could go see to what degree that can be improved certainly

1079
01:01:52,800 --> 01:01:58,200
and really the one that's most curious is the big begins him because I

1080
01:01:58,200 --> 01:02:02,800
guess what's taking the time there would be the copying but I don't

1081
01:02:02,800 --> 01:02:03,400
know.

1082
01:02:03,600 --> 01:02:07,500
And so what's interesting about that one is that, you know, I'm

1083
01:02:07,500 --> 01:02:12,900
curious to know if Sim region in terms of that copying is

1084
01:02:13,000 --> 01:02:17,100
Really, what the problem is or is the problem, actually something

1085
01:02:17,100 --> 01:02:17,600
else.

1086
01:02:17,900 --> 01:02:21,400
So if I go to begin, same here.

1087
01:02:23,000 --> 01:02:27,200
I kind of want to know what is actually taking the time in here that

1088
01:02:27,200 --> 01:02:31,900
mysteriously goes away completely when we compile in in a non debug

1089
01:02:31,900 --> 01:02:33,100
mode, right?

1090
01:02:33,200 --> 01:02:40,400
And so is, you know, is it just one of these copies like is it this or

1091
01:02:40,400 --> 01:02:44,700
is it you know something that I'm not thinking of is hausknecht entity

1092
01:02:44,700 --> 01:02:45,400
pointers.

1093
01:02:45,400 --> 01:02:46,500
Is that a problem?

1094
01:02:46,500 --> 01:02:47,100
You wouldn't think?

1095
01:02:47,100 --> 01:02:52,600
So I can certainly make that and known

1096
01:02:52,800 --> 01:02:53,200
Lock here.

1097
01:02:53,200 --> 01:02:56,800
But what I can do to start with is like a, do you know in here?

1098
01:02:56,800 --> 01:02:59,800
I can certainly say, timed block.

1099
01:03:00,300 --> 01:03:05,300
Sim unpack here and just get another sample Point.

1100
01:03:05,300 --> 01:03:09,900
Basically, I'm going to restart so don't have any spurious timing

1101
01:03:09,900 --> 01:03:10,600
still in there.

1102
01:03:17,600 --> 01:03:21,200
And so, looking at this, like the answer appears to be no, like the

1103
01:03:21,200 --> 01:03:22,900
copy is just irrelevant.

1104
01:03:22,900 --> 01:03:28,200
So begin Sim is sticking 16 percent of the time to do nothing.

1105
01:03:28,800 --> 01:03:32,000
So that might just be like a clear or something like that.

1106
01:03:32,000 --> 01:03:36,400
Like, for example, this right here, maybe it's just this clear because

1107
01:03:36,400 --> 01:03:40,300
it's pushing a tremendous amount of stuff on the stack, I've been onto

1108
01:03:40,300 --> 01:03:47,000
our arena there and it may be that that clear is is too much.

1109
01:03:47,200 --> 01:03:51,200
All right, so let's take a quick look just a real quick.

1110
01:03:51,200 --> 01:03:54,500
Look at what would happen if we didn't do that.

1111
01:03:54,900 --> 01:03:55,500
Right.

1112
01:03:56,400 --> 01:04:00,400
So if instead here where we've got entity hash brain hash, right,

1113
01:04:00,400 --> 01:04:04,300
those are pretty big and we've got all this stuff, let's just manually

1114
01:04:04,300 --> 01:04:05,000
initialize.

1115
01:04:05,300 --> 01:04:08,100
So, in here, I can say no clear, I believe that.

1116
01:04:08,100 --> 01:04:08,700
Correct.

1117
01:04:12,300 --> 01:04:12,900
Right.

1118
01:04:13,400 --> 01:04:16,700
And then I just have to make sure if I'm not leaning on that code.

1119
01:04:16,800 --> 01:04:18,900
I need to make sure that everything else gets specified.

1120
01:04:18,900 --> 01:04:22,200
So I'm just going to kind of go through here slowly and make sure that

1121
01:04:22,200 --> 01:04:25,100
everything is initialized because now it's not going to clear it.

1122
01:04:25,100 --> 01:04:26,200
So there's World.

1123
01:04:26,500 --> 01:04:29,000
Here's Max entity radius and Max velocity.

1124
01:04:29,500 --> 01:04:32,400
Those are getting updated and you can see I'm just putting in the same

1125
01:04:32,400 --> 01:04:33,100
order they occur.

1126
01:04:33,100 --> 01:04:35,100
So I can easily check to make sure they're all there.

1127
01:04:36,000 --> 01:04:38,100
So here is the bounds and updatable Bounds.

1128
01:04:38,200 --> 01:04:40,700
Here's the max entity, Cathy and Abby, count the entities.

1129
01:04:42,200 --> 01:04:45,000
X brain, count the brain count, and the entities.

1130
01:04:46,000 --> 01:04:48,300
And so these are raised as well.

1131
01:04:48,300 --> 01:04:54,000
In addition to the hash, these should be no clear, I think to write

1132
01:04:55,900 --> 01:04:56,500
like so.

1133
01:04:58,200 --> 01:05:03,100
Because we're currently initializing them completely on pack out and

1134
01:05:03,100 --> 01:05:06,000
then we've got the brains and that's it.

1135
01:05:06,000 --> 01:05:07,300
So that's pretty much everything.

1136
01:05:07,500 --> 01:05:12,400
So if we remove that clear, let's just see what happens there.

1137
01:05:12,800 --> 01:05:13,700
If I do that.

1138
01:05:16,900 --> 01:05:17,400
Interesting.

1139
01:05:17,400 --> 01:05:18,100
So

1140
01:05:23,700 --> 01:05:26,100
ah, so that's true.

1141
01:05:26,200 --> 01:05:28,000
We can't not clear.

1142
01:05:29,100 --> 01:05:33,500
We can't not clear the hashes.

1143
01:05:34,100 --> 01:05:37,800
So actually, it's only the arrays that we could avoid clearing, right.

1144
01:05:38,200 --> 01:05:39,400
The hashes have to be clear.

1145
01:05:39,400 --> 01:05:44,500
We can't use them for lookups so let's see how we're doing now.

1146
01:05:46,100 --> 01:05:50,400
All right, so that took begins him from being like 10% of the time or

1147
01:05:50,400 --> 01:05:54,400
15th, whatever it was before all the way down to zero point eight four

1148
01:05:54,400 --> 01:05:55,100
percent of the time.

1149
01:05:55,300 --> 01:05:57,900
So obviously clearing those arrays is a bad idea.

1150
01:05:57,900 --> 01:05:59,400
A debug mode especially

1151
01:06:00,000 --> 01:06:03,100
I guess not, I guess the optimized clear that the compiler was

1152
01:06:03,100 --> 01:06:06,500
generating, is like way better than the one that it wasn't General,

1153
01:06:06,500 --> 01:06:08,300
that it was generating without that, right?

1154
01:06:09,600 --> 01:06:10,500
So that's good to know.

1155
01:06:11,400 --> 01:06:13,500
And now we're up.

1156
01:06:14,200 --> 01:06:18,200
I guess when we close everything, we're up to 30 frames a second.

1157
01:06:18,200 --> 01:06:19,000
No problem.

1158
01:06:19,200 --> 01:06:21,400
But we're still not at 60, right?

1159
01:06:21,600 --> 01:06:23,300
So the question is, who's next?

1160
01:06:23,300 --> 01:06:27,400
We've got simulated entities, and debug collation is now a pretty

1161
01:06:27,400 --> 01:06:28,000
high.

1162
01:06:28,600 --> 01:06:32,500
And that's a little bit unfortunate, but I don't know.

1163
01:06:32,500 --> 01:06:37,200
We can always turn off debug collation, I guess, or have a way of

1164
01:06:37,200 --> 01:06:39,300
saying we don't want evacuation at the moment.

1165
01:06:39,800 --> 01:06:40,900
I'm not sure what to do about that.

1166
01:06:40,900 --> 01:06:45,300
Exactly, but point being simulate entities, still taking a ton of

1167
01:06:45,300 --> 01:06:45,700
time.

1168
01:06:45,800 --> 01:06:48,400
Let's just take a quick look at that one and then we'll be done for

1169
01:06:48,400 --> 01:06:49,000
the evening.

1170
01:06:52,300 --> 01:06:53,200
Here's World mood.

1171
01:07:03,800 --> 01:07:07,600
So here in simulate entities, you kept me cuts on this movement code,

1172
01:07:07,600 --> 01:07:13,000
and then we've got move entity getting called, and we've got a bunch

1173
01:07:13,000 --> 01:07:18,100
of push bitmap calls, and we've got some of this debug code happening

1174
01:07:18,100 --> 01:07:18,700
here.

1175
01:07:19,200 --> 01:07:23,000
So let's go ahead and start to block these off a little bit.

1176
01:07:23,500 --> 01:07:27,900
So let's say that this is the entity render code and I'm just going to

1177
01:07:27,900 --> 01:07:29,200
go ahead and say and you know what?

1178
01:07:29,200 --> 01:07:31,000
It could very well be get best bet.

1179
01:07:31,000 --> 01:07:33,000
Get best match.

1180
01:07:33,300 --> 01:07:35,100
Bitmap from or something similar.

1181
01:07:35,100 --> 01:07:35,500
I don't know.

1182
01:07:35,500 --> 01:07:38,100
Those might be taken out of the equation, but

1183
01:07:45,400 --> 01:07:46,800
So, here's entity rendering.

1184
01:07:53,400 --> 01:07:54,900
We'll see about that part.

1185
01:07:55,100 --> 01:07:56,300
Here's entity physics.

1186
01:08:11,100 --> 01:08:15,200
And now we can just take a look and see what the what the basic

1187
01:08:15,200 --> 01:08:16,300
breakdown is.

1188
01:08:18,700 --> 01:08:19,200
Oops.

1189
01:08:19,700 --> 01:08:21,200
So it's open up that profile again.

1190
01:08:22,000 --> 01:08:23,500
Submit, take a quick pause here.

1191
01:08:24,200 --> 01:08:24,800
Alright.

1192
01:08:24,899 --> 01:08:28,899
So you can see that entity rendering is taking a lot of time there.

1193
01:08:28,899 --> 01:08:34,300
The Lion's Share of that time and the rest of the stuff in simulate

1194
01:08:34,300 --> 01:08:37,600
entities is kind of a little bit more evenly scattered.

1195
01:08:37,600 --> 01:08:39,000
It looks like, right?

1196
01:08:39,899 --> 01:08:45,000
So we kind of end up with with stuff like the physics down here.

1197
01:08:45,000 --> 01:08:47,500
Not really particularly relevant.

1198
01:08:47,700 --> 01:08:51,300
And that sort of the other sort of sim style stuff that we're doing,

1199
01:08:51,300 --> 01:08:55,600
instantly entities, not being hugely important.

1200
01:08:55,600 --> 01:08:59,899
So it's really just that entity rendering code that's that's sort.

1201
01:09:00,600 --> 01:09:02,600
Being doggy, right?

1202
01:09:03,000 --> 01:09:07,100
And so what I would say to that is well first of all also I want to

1203
01:09:07,100 --> 01:09:12,300
come back to some region and get rid of this granular stuff here.

1204
01:09:15,800 --> 01:09:18,700
Just a I don't really want inside inner Loops like that.

1205
01:09:18,700 --> 01:09:22,500
I don't usually like to have timing blocks sitting around for no

1206
01:09:22,500 --> 01:09:23,000
reason.

1207
01:09:23,800 --> 01:09:24,399
But anyway,

1208
01:09:28,000 --> 01:09:28,300
Yeah.

1209
01:09:28,899 --> 01:09:32,700
So you can see here, we've got okay or entity rendering is taking up a

1210
01:09:32,700 --> 01:09:35,700
huge amount of time and of course get closest reversible, which is not

1211
01:09:35,700 --> 01:09:37,600
something we can really regret address at the time.

1212
01:09:37,600 --> 01:09:40,100
Being so why is entity rendering?

1213
01:09:40,100 --> 01:09:41,399
Taking up so much time.

1214
01:09:42,300 --> 01:09:43,200
Let's take a look.

1215
01:09:50,899 --> 01:09:52,100
I am.

1216
01:09:52,100 --> 01:09:55,100
So we're clearing out these vectors and doing a bunch of matching

1217
01:09:55,100 --> 01:09:59,900
every time and I do wonder if that is perhaps a little bit too slow.

1218
01:09:59,900 --> 01:10:05,300
We can break this block up into two blocks to verify that certainly we

1219
01:10:05,300 --> 01:10:12,000
could for example also time these I don't know in the asset system get

1220
01:10:12,000 --> 01:10:14,200
best match bitmap from.

1221
01:10:14,200 --> 01:10:18,900
So get best match asset from is actually a Time function.

1222
01:10:18,900 --> 01:10:20,600
So if we

1223
01:10:20,900 --> 01:10:24,800
Look, we should actually be able to see how much time is being spent

1224
01:10:24,800 --> 01:10:26,800
in that it's already a Time function.

1225
01:10:27,100 --> 01:10:32,300
So if I bring this guy out a bit, we should be able to see get best

1226
01:10:32,300 --> 01:10:33,400
match acid from.

1227
01:10:33,700 --> 01:10:38,600
So what's interesting about that is recalling 366 calls to get best

1228
01:10:38,600 --> 01:10:40,900
match asset from, right?

1229
01:10:41,100 --> 01:10:45,000
And yet somehow that doesn't take any time, even that's got a loop

1230
01:10:45,000 --> 01:10:48,800
through all the Assets in a system and stuff, if that's that's a slow,

1231
01:10:48,800 --> 01:10:50,700
highly a mop unoptimized thing.

1232
01:10:50,800 --> 01:10:54,100
NG yet entity rendering which hardly does that much Beyond.

1233
01:10:54,100 --> 01:10:57,500
It is taking a lot more time which suggests to me that somewhere in

1234
01:10:57,500 --> 01:10:57,800
here?

1235
01:10:57,800 --> 01:10:59,300
Something stupid is happening.

1236
01:10:59,400 --> 01:11:03,300
I don't necessarily know what it is, but we should try to find out.

1237
01:11:03,300 --> 01:11:07,400
So I'm going to go ahead and move this block down and I'm just going

1238
01:11:07,400 --> 01:11:11,400
to go just take a look at just the Piece list and remove that from the

1239
01:11:11,400 --> 01:11:11,800
equation.

1240
01:11:11,800 --> 01:11:17,300
So we can see if that's a particularly problematic, if that's the loop

1241
01:11:17,300 --> 01:11:20,500
that's causing us the problems, meaning it would basically be that

1242
01:11:20,500 --> 01:11:20,700
pushed

1243
01:11:20,900 --> 01:11:24,000
Map call or if it's something else, right?

1244
01:11:29,000 --> 01:11:29,300
Okay.

1245
01:11:29,300 --> 01:11:33,300
So taking a look at here at what we've got entity rendering is still a

1246
01:11:33,300 --> 01:11:36,000
huge amount of time and peace rendering takes nothing.

1247
01:11:36,200 --> 01:11:37,400
So okay.

1248
01:11:37,600 --> 01:11:40,500
So basically what we're saying is all of this stuff is not

1249
01:11:40,500 --> 01:11:41,400
problematic, I don't know.

1250
01:11:41,400 --> 01:11:45,000
So what's going on here is that this rectangle are these rectangle

1251
01:11:45,000 --> 01:11:45,600
calls?

1252
01:11:45,900 --> 01:11:46,700
I don't know.

1253
01:11:47,300 --> 01:11:49,300
Let's keep isolating further.

1254
01:11:54,900 --> 01:11:56,000
And you can see what I'm doing here.

1255
01:11:56,000 --> 01:11:59,500
All I'm doing is I'm just coming in and I'm just

1256
01:12:00,000 --> 01:12:07,100
Isolating stuff until I can find out who the offender happens to be

1257
01:12:07,500 --> 01:12:08,100
right?

1258
01:12:09,000 --> 01:12:12,500
So I'm going to go ahead and and just block off each of these parts.

1259
01:12:14,500 --> 01:12:17,100
So this is Vector clear.

1260
01:12:17,800 --> 01:12:21,800
This is a piece rendering Collision, rendering and hit point rendering

1261
01:12:33,600 --> 01:12:37,900
alright, so now we're running and we can see our profile

1262
01:12:39,700 --> 01:12:44,000
and it looks like Collision rendering takes all the time, right?

1263
01:12:44,000 --> 01:12:46,500
Like that is basically the hog.

1264
01:12:47,400 --> 01:12:55,200
So now we know who our culprit is and and we can start to address it,

1265
01:12:55,600 --> 01:12:56,100
right?

1266
01:12:57,000 --> 01:12:59,700
So something is seriously out of whack here.

1267
01:12:59,700 --> 01:13:03,000
I don't know what it is, but let's try to figure it out.

1268
01:13:03,400 --> 01:13:08,500
So let's just go ahead and say that we will take a look at the

1269
01:13:08,800 --> 01:13:09,300
Names.

1270
01:13:14,000 --> 01:13:17,000
Which shouldn't ever even be drawing anything at this point.

1271
01:13:17,000 --> 01:13:17,700
Oh, well no, I guess.

1272
01:13:17,700 --> 01:13:19,000
The trees Maybe.

1273
01:13:21,400 --> 01:13:23,800
Volume rendering and traversable run.

1274
01:13:27,400 --> 01:13:31,300
And so now we can see which of these two is the expensive one and

1275
01:13:31,300 --> 01:13:33,900
perhaps hope to figure out why

1276
01:13:35,500 --> 01:13:36,200
So there we go.

1277
01:13:36,600 --> 01:13:41,900
So traversable is is all of it that is by far the most expensive that

1278
01:13:41,900 --> 01:13:45,100
could just because there's a lot of them certainly, but it means we

1279
01:13:45,100 --> 01:13:46,100
don't care about this.

1280
01:13:46,600 --> 01:13:48,600
So this is what we care about.

1281
01:13:49,300 --> 01:13:50,800
We're going through the traversals.

1282
01:13:51,000 --> 01:13:54,400
We're getting each of these out really.

1283
01:13:54,400 --> 01:13:58,900
All we're doing is calling to push rectangle calls and so it must be,

1284
01:14:01,400 --> 01:14:02,700
you know, in our render group

1285
01:14:03,800 --> 01:14:08,000
We're basically looking at push wrecked and push wrecked outline,

1286
01:14:08,600 --> 01:14:09,100
right?

1287
01:14:09,300 --> 01:14:12,200
So it's probably all these calls to push wrecked and push fact,

1288
01:14:12,200 --> 01:14:16,400
outline where we've got push wrecked entity basis P.

1289
01:14:16,400 --> 01:14:20,100
You know, it's doing all of this computation here and then pushing the

1290
01:14:20,100 --> 01:14:24,000
render elements on and all that other stuff push render element.

1291
01:14:25,600 --> 01:14:27,300
What exactly is that doing?

1292
01:14:33,500 --> 01:14:36,200
So, this is very straightforward code, but it's definitely the kind of

1293
01:14:36,200 --> 01:14:39,100
code that gets a lot faster when you run the optimizer on it.

1294
01:14:39,600 --> 01:14:41,800
So I could see why that would be the case.

1295
01:14:42,900 --> 01:14:47,300
Certainly, what I will say is this basically quintuple is the number

1296
01:14:47,300 --> 01:14:49,200
of calls to push wrecked.

1297
01:14:49,500 --> 01:14:53,300
So I could imagine giving this up, temporarily

1298
01:14:58,300 --> 01:14:59,800
And seeing how fast we get there.

1299
01:15:04,200 --> 01:15:08,100
Okay, so simulate entities is still just very expensive.

1300
01:15:08,100 --> 01:15:12,000
Unfortunately, the traversable rendering has gone down considerably,

1301
01:15:12,000 --> 01:15:17,400
but this is still up a little bit higher than I would have liked, but

1302
01:15:17,400 --> 01:15:20,400
we're getting closer, certainly right?

1303
01:15:20,400 --> 01:15:21,900
We're almost back to 60

1304
01:15:22,900 --> 01:15:24,000
Let's go ahead and close this.

1305
01:15:28,800 --> 01:15:30,400
Yeah.

1306
01:15:35,700 --> 01:15:38,400
yeah, so the other option we have

1307
01:15:40,700 --> 01:15:46,200
That we could certainly try is turning on the optimizer only for that,

1308
01:15:47,100 --> 01:15:52,800
for, for that code or taking that code, and blowing it out into a more

1309
01:15:52,800 --> 01:15:55,800
explicit format so that it doesn't take as much time.

1310
01:15:57,700 --> 01:16:00,700
Although I will say that similar entities was still taking a little

1311
01:16:00,700 --> 01:16:02,500
bit more than I think it should have.

1312
01:16:05,100 --> 01:16:06,400
So we'll probably have to do a bit more.

1313
01:16:06,400 --> 01:16:10,100
Anyway, we're out of time, but I think we're good.

1314
01:16:10,500 --> 01:16:13,200
I just feel like we want to do a little bit more in terms of making

1315
01:16:13,200 --> 01:16:14,700
sure that that performance is okay.

1316
01:16:15,500 --> 01:16:18,100
I also don't know how much any of this stuff is necessary, but that

1317
01:16:18,100 --> 01:16:19,000
sort of separate issue.

1318
01:16:19,700 --> 01:16:20,000
Alright.

1319
01:16:20,000 --> 01:16:21,500
So we'll do a little Q&A now.

1320
01:16:22,600 --> 01:16:23,800
Even though we're over time.

1321
01:17:12,700 --> 01:17:14,000
I see, you know, questions.

1322
01:17:16,000 --> 01:17:18,200
Maybe I'll ask info about if he has a question.

1323
01:17:21,200 --> 01:17:22,100
In turbot.

1324
01:17:22,900 --> 01:17:25,400
Do you have a question for me?

1325
01:17:28,000 --> 01:17:32,400
And it's about you said, dude it's about as the best.

1326
01:17:34,000 --> 01:17:37,300
Sergio says, how much longer does it take to build handmade here with

1327
01:17:37,300 --> 01:17:38,500
release optimizations?

1328
01:17:40,200 --> 01:17:46,900
The optimizer typically takes quite a bit longer, it's certainly not.

1329
01:17:46,900 --> 01:17:51,500
That isn't the reason I don't build with optimizations on.

1330
01:17:52,000 --> 01:17:54,100
We could afford it, like it's not ownerís.

1331
01:17:54,900 --> 01:17:56,700
So you can see there's the sea time.

1332
01:17:58,000 --> 01:17:59,800
Right at one point to 48.

1333
01:18:00,600 --> 01:18:05,400
And with the 02, you can see that it's going up to two point seven,

1334
01:18:05,400 --> 01:18:06,600
seven, seven.

1335
01:18:07,700 --> 01:18:12,200
So two point seven, seven, seven verses 1 Point 2.

1336
01:18:12,200 --> 01:18:19,500
So it's over half, it's very slow, it's takes over twice as long.

1337
01:18:21,500 --> 01:18:22,300
but,

1338
01:18:24,500 --> 01:18:29,300
The problem there is that is not that like that's not like I don't

1339
01:18:29,300 --> 01:18:33,500
leave it on the reason why I don't leave it on is because even if

1340
01:18:33,500 --> 01:18:37,700
you've got the special magic switch that allows a debugging in release

1341
01:18:37,700 --> 01:18:41,600
mode often times, it's still a lot clumsier.

1342
01:18:41,600 --> 01:18:44,800
So for example, like I optimize this is the optimized build.

1343
01:18:46,400 --> 01:18:49,300
You know, when I'll come in here and I'll say, oh, you know, show me

1344
01:18:49,300 --> 01:18:50,100
what entry is.

1345
01:18:50,200 --> 01:18:53,200
And it's like, it doesn't know, right?

1346
01:18:53,200 --> 01:18:56,600
It's like, I have no idea where that pointer is man.

1347
01:18:56,600 --> 01:18:59,800
I know I had that pointer somewhere, dude.

1348
01:19:00,000 --> 01:19:01,100
Oh man.

1349
01:19:01,500 --> 01:19:03,700
Like sorry, dude.

1350
01:19:03,700 --> 01:19:07,800
Like I was just building this debugger and like, I don't know where

1351
01:19:07,800 --> 01:19:10,900
the pointer went, and it's just like, okay, great dude.

1352
01:19:10,900 --> 01:19:14,800
Like you know, I know it's legal in Washington state now, but you do

1353
01:19:14,800 --> 01:19:15,600
not

1354
01:19:16,100 --> 01:19:17,700
Have to give me the surfer routine.

1355
01:19:18,600 --> 01:19:22,600
So whereas if I have, you know, a debug build it's like clear that

1356
01:19:22,600 --> 01:19:27,200
when I stop somewhere, I'm always going to get the actual debug values

1357
01:19:27,200 --> 01:19:28,200
that I want.

1358
01:19:28,500 --> 01:19:31,300
And there's I thought we added it.

1359
01:19:31,300 --> 01:19:35,700
The switch actually but you know I don't see it here.

1360
01:19:42,500 --> 01:19:46,400
There's a switch that attempts to make the debug information better

1361
01:19:46,400 --> 01:19:50,200
for release build, so that you can actually inspect values, but it's

1362
01:19:50,400 --> 01:19:51,300
doesn't really work that.

1363
01:19:51,300 --> 01:19:57,300
Well, it's still pretty busted, so it's not good enough, but there is

1364
01:19:57,300 --> 01:19:58,500
a way to get it a little bit better.

1365
01:19:58,500 --> 01:20:01,800
I thought than what we had here, unless it is Alexis - zo.

1366
01:20:01,800 --> 01:20:04,500
I don't know if that's what I don't remember, what that switches, the

1367
01:20:04,500 --> 01:20:06,000
rest of the 90, and they're not that.

1368
01:20:07,800 --> 01:20:08,400
So,

1369
01:20:09,700 --> 01:20:12,500
That particular problem is the one.

1370
01:20:12,500 --> 01:20:13,200
Why not use it?

1371
01:20:13,200 --> 01:20:17,200
Because a I don't like that because I like to be able to inspect all

1372
01:20:17,200 --> 01:20:20,200
of the values correctly as far as what the compiler thinks they should

1373
01:20:20,200 --> 01:20:21,200
be at that point.

1374
01:20:21,200 --> 01:20:23,300
And I could do that in debug mode and I like that.

1375
01:20:23,600 --> 01:20:29,400
So just for my own sake, I tend not to want that, but also for an

1376
01:20:29,400 --> 01:20:32,100
educational stream, it's doubly awful.

1377
01:20:32,300 --> 01:20:35,600
Because then when I try to show you guys something in the debugger,

1378
01:20:35,600 --> 01:20:37,500
you're not gonna be able to see anything because it's just going to

1379
01:20:37,500 --> 01:20:37,800
say.

1380
01:20:37,800 --> 01:20:38,700
I don't know where that is man.

1381
01:20:39,600 --> 01:20:40,200
Right?

1382
01:20:40,200 --> 01:20:43,400
And then you're going to be watching me do this nonsense all the time

1383
01:20:43,800 --> 01:20:47,600
because like right the pointer is there just to be clear.

1384
01:20:48,900 --> 01:20:53,300
It's just the debug information doesn't store enough information for

1385
01:20:53,300 --> 01:20:56,000
the debugger to go get it right?

1386
01:20:56,700 --> 01:20:59,800
So you can go get it because you could figure it out, right?

1387
01:21:00,000 --> 01:21:01,100
You can see right here.

1388
01:21:01,100 --> 01:21:02,300
You're like, oh, okay.

1389
01:21:03,600 --> 01:21:09,900
This thing where we do end entry Arrow, pointer equals Death, stand

1390
01:21:09,900 --> 01:21:14,100
entry Arrow, index equals ID and all this stuff right there in the

1391
01:21:14,100 --> 01:21:18,300
registers are the information that we actually needed, right?

1392
01:21:18,500 --> 01:21:22,500
So it's not like we can't walk back up here and find out what they

1393
01:21:22,500 --> 01:21:23,000
are.

1394
01:21:23,400 --> 01:21:26,400
It just takes forever because you have to do this every time

1395
01:21:27,700 --> 01:21:28,200
Right.

1396
01:21:28,700 --> 01:21:32,000
And so, you know, I want to find out what the entry is, and so, it's

1397
01:21:32,000 --> 01:21:33,000
like, oh, okay.

1398
01:21:33,000 --> 01:21:36,300
So if entry pointer equals dest.

1399
01:21:36,500 --> 01:21:40,900
So, in this case, Desto, most assuredly is an R8, right?

1400
01:21:40,900 --> 01:21:44,400
And that was probably one that even, it can get right, so you can see

1401
01:21:44,400 --> 01:21:47,700
it appears to be able to find that one just fine I guess.

1402
01:21:50,100 --> 01:21:50,500
Right?

1403
01:21:50,500 --> 01:21:51,500
But it can't find entry.

1404
01:21:51,500 --> 01:21:55,900
It has no idea where entry is and probably that's because it's just a

1405
01:21:55,900 --> 01:21:57,100
stack variable and it's only

1406
01:21:57,300 --> 01:21:57,900
Been used.

1407
01:21:57,900 --> 01:22:02,800
It's only used it in registers, right?

1408
01:22:02,900 --> 01:22:06,700
So it's probably just saying like, well, okay, so entry the pointer

1409
01:22:06,700 --> 01:22:12,400
part right now is definitely going to be where our nine is and the

1410
01:22:12,400 --> 01:22:13,500
index part, right?

1411
01:22:13,500 --> 01:22:15,500
Is definitely our 9 plus 8.

1412
01:22:15,600 --> 01:22:17,800
So if you're looking at that and you're me and you're like, well, this

1413
01:22:17,800 --> 01:22:20,100
is one thing and this is eight away from that thing.

1414
01:22:20,300 --> 01:22:24,000
It looks pretty clearly, like entry is just what's in our nine, right?

1415
01:22:24,000 --> 01:22:26,300
So I should be able to say, OK.

1416
01:22:26,300 --> 01:22:27,100
The Entity has

1417
01:22:27,200 --> 01:22:27,700
Hash.

1418
01:22:29,800 --> 01:22:33,000
Of our nine is probably what it is, right?

1419
01:22:35,700 --> 01:22:36,700
And hey look, I was right.

1420
01:22:38,600 --> 01:22:39,200
so,

1421
01:22:40,600 --> 01:22:44,600
It's just because the compiler doesn't output good, debug information

1422
01:22:44,700 --> 01:22:48,700
that any of this matters but unfortunately it doesn't and so there you

1423
01:22:48,700 --> 01:22:53,000
are, so it's too bad, but that's that's the thing.

1424
01:22:53,000 --> 01:22:56,800
So hopefully, that gives you some perspective on you know what what

1425
01:22:56,800 --> 01:22:57,400
that is

1426
01:22:59,000 --> 01:23:01,500
Hubert Keller says that zo is in fact the switch.

1427
01:23:01,700 --> 01:23:05,600
So yeah, I guess we're even getting the supposedly good stuff now.

1428
01:23:05,600 --> 01:23:06,400
That's a meat.

1429
01:23:06,400 --> 01:23:08,300
Like I mean that was awful, right?

1430
01:23:08,300 --> 01:23:09,400
Like you saw how bad that was?

1431
01:23:09,400 --> 01:23:11,000
It was super obvious.

1432
01:23:11,000 --> 01:23:13,100
Where that thing was, it was right in a register.

1433
01:23:13,100 --> 01:23:16,500
It didn't have to do any arithmetic to get it and it didn't even know

1434
01:23:16,500 --> 01:23:17,500
where it was right.

1435
01:23:17,500 --> 01:23:20,500
It was like, it's right in that register on that line.

1436
01:23:20,500 --> 01:23:21,500
It's right there.

1437
01:23:21,700 --> 01:23:25,800
So it literally was the simplest possible case for any advanced

1438
01:23:25,800 --> 01:23:28,100
debugging information feature, and it couldn't do that.

1439
01:23:28,200 --> 01:23:28,700
So you,

1440
01:23:28,800 --> 01:23:31,900
Only imagine how bad it probably is if you had to do some pointer

1441
01:23:31,900 --> 01:23:34,900
arithmetic to go get the value, you actually wanted, you know, forget

1442
01:23:34,900 --> 01:23:35,200
it.

1443
01:23:46,000 --> 01:23:49,000
I miss the optimization due to buffering but I caught some stuff about

1444
01:23:49,000 --> 01:23:52,600
the clear being bloated but I didn't catch what the fix was.

1445
01:23:58,100 --> 01:23:59,800
Oh well, we just stopped clearing.

1446
01:24:00,100 --> 01:24:02,200
The Entity and brain arrays.

1447
01:24:04,200 --> 01:24:05,700
That was it in the same region?

1448
01:24:05,700 --> 01:24:09,000
We just said, don't clear them, so we passed the no clear flag to the

1449
01:24:09,000 --> 01:24:09,700
Alec to the array.

1450
01:24:09,700 --> 01:24:10,400
Allocation

1451
01:24:13,100 --> 01:24:13,400
Far away.

1452
01:24:13,400 --> 01:24:16,300
Floor string transparent doesn't look quite right since you can see

1453
01:24:16,300 --> 01:24:16,900
through them.

1454
01:24:17,400 --> 01:24:17,600
Yeah.

1455
01:24:17,600 --> 01:24:23,900
Well keep in mind that that part we will we will have plenty of time

1456
01:24:23,900 --> 01:24:25,500
to play with meaning.

1457
01:24:25,600 --> 01:24:28,100
We don't have to make it be a global Alpha value.

1458
01:24:28,100 --> 01:24:30,200
We can just make it be a global color modulation.

1459
01:24:30,200 --> 01:24:34,700
For example, once we actually put our stuff into the Z layers, which

1460
01:24:34,700 --> 01:24:38,000
is what we're doing this week, we can play with how that gets rendered

1461
01:24:38,000 --> 01:24:39,300
and do whatever we want.

1462
01:24:43,300 --> 01:24:46,400
It looks like long bullion was suggesting exactly that when peering

1463
01:24:46,400 --> 01:24:48,900
down the hole at the more transparent layers, you can see characters

1464
01:24:48,900 --> 01:24:49,800
through those ground layers.

1465
01:24:50,000 --> 01:24:52,300
My guess is, you would want to mix with a fog color instead of just

1466
01:24:52,300 --> 01:24:53,200
making the tiles from parent.

1467
01:24:53,200 --> 01:24:58,000
And yeah, basically like all we have to do is just modulate the color

1468
01:24:58,000 --> 01:25:00,600
with a fog color or we can do.

1469
01:25:03,400 --> 01:25:06,300
I mean, honestly, we wouldn't even have to really do that.

1470
01:25:07,100 --> 01:25:11,100
We can we could just never really fade things out if we wanted to.

1471
01:25:12,000 --> 01:25:12,600
But yeah.

1472
01:25:13,800 --> 01:25:16,500
Because I mean, I think well, I don't know, we'll see what happens

1473
01:25:16,500 --> 01:25:19,900
when we get to it, but yet we can just go with the fog color and that

1474
01:25:19,900 --> 01:25:21,200
seems like a reasonable thing to do.

1475
01:25:24,800 --> 01:25:27,200
Would llvm work on Windows, handmade hero.

1476
01:25:27,200 --> 01:25:29,700
I know it doesn't yet.

1477
01:25:32,700 --> 01:25:37,800
At least the last time which was about a month ago that I tried to use

1478
01:25:37,800 --> 01:25:42,700
llvm for Windows build, it can't handle, mmm, 128.

1479
01:25:45,000 --> 01:25:48,200
All of the like specification for that is different.

1480
01:25:48,700 --> 01:25:56,100
So I think we could compile with llvm if we changed how those were

1481
01:25:56,100 --> 01:26:01,600
declared or used a different include file to define the mm 128, then

1482
01:26:01,600 --> 01:26:06,300
we would be okay, but as it is, that won't work on the Windows build,

1483
01:26:06,300 --> 01:26:06,500
at least.

1484
01:26:06,500 --> 01:26:08,300
That's what happened to me when I tried to use it.

1485
01:26:08,400 --> 01:26:12,700
I was looking at it on our, on 1935 actually and that was a big

1486
01:26:12,700 --> 01:26:13,300
problem.

1487
01:26:14,500 --> 01:26:18,700
And the other thing is, I don't know if they've got a Linker yet.

1488
01:26:19,000 --> 01:26:23,500
So last time I checked, you still had to use, Microsoft's Linker to

1489
01:26:23,500 --> 01:26:24,600
produce the executable.

1490
01:26:24,600 --> 01:26:30,300
So you could only, you can only use the compiler, you can't use the,

1491
01:26:30,500 --> 01:26:34,300
you can't replace the Linker so you still have to use visual C++.

1492
01:26:35,500 --> 01:26:36,800
In addition to llvm.

1493
01:26:36,800 --> 01:26:40,600
So it's basically like it's kind of not very attractive at this point,

1494
01:26:40,600 --> 01:26:43,400
because you're like, if you can ditch visual, if you can ditch,

1495
01:26:43,400 --> 01:26:45,000
Microsoft's toolchain all together.

1496
01:26:45,000 --> 01:26:47,100
That's fantastic, right?

1497
01:26:47,300 --> 01:26:49,100
I will be so on that.

1498
01:26:49,900 --> 01:26:53,700
But at the moment you kind of would have to use both and now that

1499
01:26:53,700 --> 01:26:57,700
means you have two problems instead of one, right?

1500
01:26:58,000 --> 01:26:59,800
You've got to Tool change, you have to maintain,

1501
01:27:00,000 --> 01:27:01,300
That's no good at all.

1502
01:27:02,000 --> 01:27:06,100
So hopefully at some point you'll be able to move to lvm exclusively

1503
01:27:06,100 --> 01:27:08,800
and just get rid of Visual Studio which would be far preferable,

1504
01:27:08,800 --> 01:27:09,400
certainly.

1505
01:27:18,400 --> 01:27:20,400
What editor is most similar to for coder.

1506
01:27:20,900 --> 01:27:22,900
And how long did it take to pick it up?

1507
01:27:24,400 --> 01:27:26,400
Well, I guess it.

1508
01:27:26,400 --> 01:27:29,300
I don't know because for a coder is very programmable.

1509
01:27:29,500 --> 01:27:34,800
So it really depends on what what your configuration is.

1510
01:27:36,300 --> 01:27:41,600
I guess emacs kanui Max is the closest probably because for coder has

1511
01:27:41,600 --> 01:27:44,500
the mark Point kind of thing built into it.

1512
01:27:44,500 --> 01:27:47,700
Like, for example, for cutter, doesn't work like this, like, you don't

1513
01:27:47,800 --> 01:27:51,500
drag selected regions and stuff like that, you mark points, and you

1514
01:27:51,500 --> 01:27:54,900
cut between them like emacs and so that's kind of the way that is at

1515
01:27:54,900 --> 01:27:55,600
the moment.

1516
01:27:56,300 --> 01:28:01,600
So, maybe I would say it's a little emacs E4 or emacs or VI, depending

1517
01:28:01,600 --> 01:28:05,000
on which one, you want, you made your customizations kind of patterned

1518
01:28:05,000 --> 01:28:05,500
after,

1519
01:28:06,000 --> 01:28:10,200
It'd be one or the other but it is so be maybe more like a Unix editor

1520
01:28:10,200 --> 01:28:13,000
and less like a Windows or Mac editor as I guess the way that I would

1521
01:28:13,000 --> 01:28:13,500
put it.

1522
01:28:22,500 --> 01:28:26,000
Having many levels of rooms and having entities, in each levels Act of

1523
01:28:26,000 --> 01:28:28,100
executing, wouldn't that be heavy or expensive?

1524
01:28:28,100 --> 01:28:30,600
Or have you think in a performance solution or a level imitation?

1525
01:28:30,600 --> 01:28:36,200
Well, it doesn't seem to be is I guess what I would say like like that

1526
01:28:36,200 --> 01:28:39,100
just doesn't seem to be a problem in release mode.

1527
01:28:39,100 --> 01:28:43,000
We're still running at 60 frames a second and we haven't really seen

1528
01:28:43,000 --> 01:28:46,700
any real boundaries that were hitting up against yet.

1529
01:28:46,700 --> 01:28:51,200
So I would say until I start seeing the Performance Edge.

1530
01:28:51,500 --> 01:28:57,100
And until I start actively tackling it to and having an opinion about,

1531
01:28:57,200 --> 01:29:03,000
you know, how realistic it is for me to optimize the stuff we've got

1532
01:29:03,000 --> 01:29:03,500
in there.

1533
01:29:03,700 --> 01:29:08,300
I'm not going to limit the game design around that yet because it sure

1534
01:29:08,300 --> 01:29:10,700
seems like we're going to have a lot of horsepower there.

1535
01:29:18,000 --> 01:29:20,300
Is there a way to tell the compiler to optimize just a particular

1536
01:29:20,300 --> 01:29:21,500
section of the code?

1537
01:29:23,400 --> 01:29:25,400
If not, how would you work around it?

1538
01:29:25,400 --> 01:29:26,200
Hilariously.

1539
01:29:26,200 --> 01:29:27,900
The answer is no.

1540
01:29:28,900 --> 01:29:32,200
There is no way to tell the compiler to optimize just a particular

1541
01:29:32,200 --> 01:29:38,000
section of the code there is however a way to tell the compiler not to

1542
01:29:38,000 --> 01:29:40,000
optimize a particular section of the code.

1543
01:29:40,300 --> 01:29:45,000
So what you can do and we kind of, we kind of talked about this

1544
01:29:45,000 --> 01:29:46,500
earlier on handmade hero and

1545
01:29:46,600 --> 01:29:53,700
if there's a caveat to it is you can turn on the optimizer and then

1546
01:29:53,700 --> 01:29:58,300
use pragmas to turn off the optimizer on the entire program and then

1547
01:29:58,300 --> 01:29:59,900
just in the places you want to optimize

1548
01:30:00,000 --> 01:30:02,500
Have the pragmas again to flip it back on that.

1549
01:30:02,500 --> 01:30:04,600
You can do wonderful, right.

1550
01:30:07,000 --> 01:30:11,600
Unfortunately, there is a huge caveat to this and that caveat is that

1551
01:30:11,600 --> 01:30:16,000
it won't inline any functions who themselves weren't inside the

1552
01:30:16,000 --> 01:30:16,600
pragma.

1553
01:30:18,200 --> 01:30:24,300
Which sucks like what the thing you want to Mark, is you want to say

1554
01:30:24,300 --> 01:30:28,800
optimize this function and pulling any other inline functions that

1555
01:30:28,800 --> 01:30:31,500
would have been required to optimize this function, fully.

1556
01:30:31,600 --> 01:30:33,400
That's what you want, right?

1557
01:30:33,400 --> 01:30:35,900
And you want that to just be a decal spec, like, you just want to

1558
01:30:35,900 --> 01:30:39,400
thing that just like optimize the snot out of this program out of this

1559
01:30:39,400 --> 01:30:40,400
function right here.

1560
01:30:40,600 --> 01:30:44,200
It's just like Deco spec, fully optimized, and then it should pull in

1561
01:30:44,200 --> 01:30:47,200
every last in line, do everything it possibly can to make that

1562
01:30:47,200 --> 01:30:47,800
function fast.

1563
01:30:48,000 --> 01:30:49,900
Leave the rest of us alone, that's what you would want.

1564
01:30:51,700 --> 01:30:53,900
But that's not what we've got.

1565
01:30:54,000 --> 01:30:54,400
So

1566
01:31:10,600 --> 01:31:12,700
Clang plus plus is worse, honestly?

1567
01:31:12,700 --> 01:31:13,500
Why can't the pdb?

1568
01:31:13,500 --> 01:31:16,900
Just say hey you are at this instruction, okay, the value is in this

1569
01:31:16,900 --> 01:31:18,300
register address or whatever.

1570
01:31:19,700 --> 01:31:20,800
I don't know why it can.

1571
01:31:21,600 --> 01:31:26,800
There's two reasons, there are two factors, which determine it.

1572
01:31:26,900 --> 01:31:30,900
One is the degree to, which the compiler is smart enough to track

1573
01:31:31,200 --> 01:31:36,800
where programmer named entities are through its entire

1574
01:31:37,100 --> 01:31:38,200
Station pipeline.

1575
01:31:40,300 --> 01:31:40,900
Right.

1576
01:31:41,200 --> 01:31:43,700
And you can see why that might not happen because it's the person

1577
01:31:43,700 --> 01:31:45,800
who's writing the optimizer is just thinking, I'm just trying to write

1578
01:31:45,800 --> 01:31:48,300
optimized code and doesn't have in their head.

1579
01:31:48,400 --> 01:31:49,800
Oh, I should track everything.

1580
01:31:49,800 --> 01:31:53,200
So that as I do, all these optimizations, I have all these breadcrumbs

1581
01:31:53,200 --> 01:31:56,600
that, that can lead back to what the source meaning of each of these

1582
01:31:56,600 --> 01:32:00,500
things was then you're totally out of luck, right?

1583
01:32:00,500 --> 01:32:03,700
And now you've got this huge reverse engineering job to go back in

1584
01:32:03,700 --> 01:32:04,600
there and make that work.

1585
01:32:04,600 --> 01:32:07,900
If you're someone who wants to add that back to clang if that's not

1586
01:32:07,900 --> 01:32:09,600
how it was working to begin with, right?

1587
01:32:11,100 --> 01:32:15,700
And the other limiting factor is the size and complexity of the debug

1588
01:32:15,700 --> 01:32:16,900
information format.

1589
01:32:17,200 --> 01:32:21,000
So, you know, you can imagine how many lines of source code.

1590
01:32:21,000 --> 01:32:22,300
There are a lot of programs.

1591
01:32:22,400 --> 01:32:26,200
If there's a hundred thousand lines of code in a program, which, you

1592
01:32:26,200 --> 01:32:30,300
know, I mean, even at Molly, we're at around there, right?

1593
01:32:30,300 --> 01:32:34,300
Like, so, you know, even one person team if that programmers

1594
01:32:34,300 --> 01:32:38,000
relatively prolific and writes a lot of code, you know, you're talking

1595
01:32:38,000 --> 01:32:40,000
about a hundred thousand, two hundred thousand lines of code.

1596
01:32:40,600 --> 01:32:42,300
At that point you're talking about.

1597
01:32:42,300 --> 01:32:46,200
Well, every single line of that of that code has to talk about.

1598
01:32:46,200 --> 01:32:51,700
We're all full of the scoped variables are because each of them can

1599
01:32:51,700 --> 01:32:53,200
have moved around at this point.

1600
01:32:53,200 --> 01:32:56,500
And so you're kind of having to do all these bracketing operations of

1601
01:32:56,500 --> 01:32:57,600
like between here and here.

1602
01:32:57,600 --> 01:32:59,800
It's here and between here, it's there and whatever, right?

1603
01:33:01,000 --> 01:33:01,200
In.

1604
01:33:01,200 --> 01:33:04,600
So if you don't do a good job, specking that debug format.

1605
01:33:05,100 --> 01:33:07,500
You can see why that could get nasty, right?

1606
01:33:07,500 --> 01:33:10,300
That's a pretty you gotta be on your toes about that.

1607
01:33:10,300 --> 01:33:17,500
And knowing pdb /, dwarf stuff, from what other people have said about

1608
01:33:17,500 --> 01:33:20,200
it, I'm kind of guessing that they're probably not Spectra very well,

1609
01:33:20,200 --> 01:33:20,700
right?

1610
01:33:20,700 --> 01:33:21,900
So that's another

1611
01:33:23,600 --> 01:33:27,600
Sort of COG wrench in the, in the cogs.

1612
01:33:28,100 --> 01:33:29,200
I think, probably.

1613
01:33:29,600 --> 01:33:31,600
But I've never looked at it explicitly, so I can't tell you.

1614
01:33:31,600 --> 01:33:33,800
The exact reason why it isn't that way.

1615
01:33:46,100 --> 01:33:50,600
All right, I'm going to wind it down.

1616
01:34:08,000 --> 01:34:09,800
All right, thank you, everyone for joining me for another episode of

1617
01:34:09,800 --> 01:34:10,300
handmade here.

1618
01:34:10,300 --> 01:34:11,500
It's been a pleasure coding with you.

1619
01:34:11,500 --> 01:34:15,600
As always, if you would like to follow along at home, you can always

1620
01:34:15,600 --> 01:34:18,200
pre-order the game on handmade hero dot-org.

1621
01:34:19,000 --> 01:34:21,500
It comes with a source code so you can play around with it at home.

1622
01:34:21,500 --> 01:34:24,500
Even as we develop it, there's also a forum site.

1623
01:34:24,500 --> 01:34:27,800
If you want to ask questions about the programming, we do on the

1624
01:34:27,800 --> 01:34:29,300
series, there is a patreon page.

1625
01:34:29,300 --> 01:34:29,900
You can go to.

1626
01:34:29,900 --> 01:34:33,200
If you would like to support the videos that we do here, there's a

1627
01:34:33,200 --> 01:34:36,400
schedule bot that tweets, the schedule every weekend every day.

1628
01:34:36,600 --> 01:34:37,600
So, you always know in the street,

1629
01:34:37,800 --> 01:34:38,100
Lives.

1630
01:34:38,100 --> 01:34:41,600
You want to catch it and there is an episode guide for those of you

1631
01:34:41,600 --> 01:34:44,700
who want to catch up on episodes, you may have missed.

1632
01:34:44,900 --> 01:34:45,900
That's it for today.

1633
01:34:45,900 --> 01:34:46,800
I will be back here.

1634
01:34:46,800 --> 01:34:48,200
Same time, same place tomorrow.

1635
01:34:48,200 --> 01:34:48,700
8:00 p.m.

1636
01:34:48,700 --> 01:34:52,700
Pacific, Daylight time and I hope to see you all here when we will

1637
01:34:52,700 --> 01:34:57,000
start to work on our Z layering, that's it for today.

1638
01:34:57,200 --> 01:34:58,400
I'll see you guys tomorrow.

1639
01:34:58,400 --> 01:34:59,500
Take it easy, everyone.

