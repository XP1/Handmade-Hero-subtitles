1
00:00:02,600 --> 00:00:04,500
Hello, everyone, and welcome to handmade hero.

2
00:00:04,500 --> 00:00:08,900
The show we could have complete game live on stream yesterday.

3
00:00:09,400 --> 00:00:14,500
We actually did all the work necessary to make a rotating camera, but

4
00:00:14,500 --> 00:00:18,200
we didn't have a chance to actually put in the final piece of the

5
00:00:18,200 --> 00:00:22,700
implementation, which is that, we need to have some way of sort of

6
00:00:22,700 --> 00:00:27,400
passing that information into the system, the render system and we

7
00:00:27,400 --> 00:00:29,000
don't really have that yet.

8
00:00:29,100 --> 00:00:31,500
So we need to kind of go in there and just make a little conduit so

9
00:00:31,500 --> 00:00:31,800
that we

10
00:00:32,000 --> 00:00:33,200
Have a good way for code.

11
00:00:33,200 --> 00:00:37,700
That wants to control the cameras orientation to be able to do so,

12
00:00:38,300 --> 00:00:39,900
whoo, as I spill things.

13
00:00:42,800 --> 00:00:43,700
All over the place.

14
00:00:45,300 --> 00:00:46,300
Sorry about that.

15
00:00:47,600 --> 00:00:49,400
This is why it's very bad for.

16
00:00:49,400 --> 00:00:53,500
Those of you who are wondering, it's always very bad to forget your

17
00:00:53,500 --> 00:00:57,500
water bottle because my water bottle has that nice seal on top of it.

18
00:00:57,600 --> 00:00:59,200
That doesn't let me spell things.

19
00:01:02,100 --> 00:01:02,900
Sorry about that.

20
00:01:06,800 --> 00:01:08,700
No components ruined as far as I know.

21
00:01:11,400 --> 00:01:12,700
But I guess we'll find out.

22
00:01:14,000 --> 00:01:18,500
All right, so that's really all we're trying to do today as we just

23
00:01:18,500 --> 00:01:19,900
want to put that rotating camera in.

24
00:01:20,100 --> 00:01:22,800
And again the reason for the rotating camera is not so much for any

25
00:01:22,800 --> 00:01:26,500
particular game design reason we don't necessarily think that we're

26
00:01:26,500 --> 00:01:29,300
going to have to rotate the camera in the game at all, but I do want

27
00:01:29,300 --> 00:01:32,300
to be able to rotate the camera for debugging purposes.

28
00:01:32,300 --> 00:01:37,800
Because as we basically next weekend, will pretty much be all this as

29
00:01:37,800 --> 00:01:41,600
we move all of the code that uses the renderer now that the render

30
00:01:41,600 --> 00:01:42,500
understands 3D.

31
00:01:42,500 --> 00:01:43,500
As we move all the

32
00:01:43,700 --> 00:01:47,500
Would that was previously just sending on 2D Sprites to be able to

33
00:01:47,500 --> 00:01:50,800
start sending down information about three-dimensional Sprites.

34
00:01:51,600 --> 00:01:54,300
We're going to want to be able to see where we're messing things up

35
00:01:54,300 --> 00:01:59,000
because it's easy to have a bug in 3D that doesn't look like a bug in

36
00:01:59,000 --> 00:02:00,100
2D necessarily.

37
00:02:00,100 --> 00:02:02,100
Well it will look like a bug but you won't be able to tell what the

38
00:02:02,100 --> 00:02:05,600
bug is because all you can see is the 2D projection of it and being

39
00:02:05,600 --> 00:02:08,900
able to rotate around is very important because it allows you to see

40
00:02:08,900 --> 00:02:12,900
more information and you'll spend time less time to bugging if you

41
00:02:12,900 --> 00:02:13,600
have better information.

42
00:02:13,700 --> 00:02:14,200
Formation.

43
00:02:14,500 --> 00:02:16,000
That's just generally the way it goes.

44
00:02:16,400 --> 00:02:19,300
The more you can visualize the less time you'll have to debug.

45
00:02:20,300 --> 00:02:23,900
So let's go ahead and remind ourselves where we are.

46
00:02:24,200 --> 00:02:25,700
Right now, we're running.

47
00:02:25,700 --> 00:02:27,400
We look the same as we normally do again.

48
00:02:27,400 --> 00:02:28,700
Sorting is disabled right now.

49
00:02:28,700 --> 00:02:31,900
So we get the flashing but otherwise everything is in the right place

50
00:02:31,900 --> 00:02:35,100
and that is with the 3D transform going through opengl now, rather

51
00:02:35,100 --> 00:02:37,900
than going through our code, which it used to, before we started this

52
00:02:37,900 --> 00:02:42,800
changeover and then if we go into render group, there's a part where

53
00:02:42,800 --> 00:02:43,500
we do set

54
00:02:43,700 --> 00:02:44,200
Transform.

55
00:02:44,200 --> 00:02:49,500
You can see it here where we pass in the information like whether or

56
00:02:49,500 --> 00:02:51,800
not it's supposed to be with the graphic with the focal length was and

57
00:02:51,800 --> 00:02:54,300
what the camera p is and what you can see about this function is

58
00:02:54,300 --> 00:02:57,800
really, this is where we would like to start putting that information.

59
00:03:00,700 --> 00:03:04,100
Where we've got sort of the push cliprect and the camera transform,

60
00:03:04,200 --> 00:03:07,900
our sort of separate things and really what we're doing here, very

61
00:03:07,900 --> 00:03:08,200
much.

62
00:03:08,200 --> 00:03:10,200
So is we're collapsing these things down.

63
00:03:11,000 --> 00:03:15,100
Now as you remember from yesterday, we made it so that you could pass

64
00:03:15,100 --> 00:03:17,700
an entire Matrix down with the clip rect.

65
00:03:17,700 --> 00:03:22,100
So really the clip, rect is actually really the camera in a sense

66
00:03:22,100 --> 00:03:26,000
right now, it not only encapsulate what render Target you're

67
00:03:26,000 --> 00:03:26,700
targeting.

68
00:03:26,800 --> 00:03:30,100
What the rectangle is that were clipping to but it also

69
00:03:30,200 --> 00:03:35,000
So encapsulate, see how the all of the information that's going down.

70
00:03:35,000 --> 00:03:36,100
It's going to get transformed.

71
00:03:41,800 --> 00:03:43,400
So we don't have to rename this right now.

72
00:03:43,400 --> 00:03:46,500
I mean we know that but this is definitely something.

73
00:03:50,500 --> 00:03:53,700
Where we want to rename it to something other than cliprect, because

74
00:03:53,700 --> 00:03:55,400
it's doing a lot more work than that.

75
00:03:55,400 --> 00:04:00,300
Now, it's sort of like the render setup and it's going to be something

76
00:04:00,300 --> 00:04:02,800
that if it was called cliprect all the time.

77
00:04:02,900 --> 00:04:06,200
If someone was trying to read this code later might skip over it,

78
00:04:06,200 --> 00:04:09,600
thinking it only had to do with clipping, but actually now it's a lot

79
00:04:09,600 --> 00:04:10,300
more than that.

80
00:04:10,700 --> 00:04:14,000
So you can see here, we've got the full 4x4 projection.

81
00:04:15,000 --> 00:04:18,800
And remember because that's a 4 by 4 Matrix, not only can it do the

82
00:04:18,800 --> 00:04:21,899
actual projection but it can actually do everything necessary to put

83
00:04:21,899 --> 00:04:25,600
things into camera space as well because it's a complete transform.

84
00:04:26,000 --> 00:04:27,000
So that's pretty nice.

85
00:04:27,100 --> 00:04:29,800
And what that means is that with our render entry cliprect, we should

86
00:04:29,800 --> 00:04:32,600
now be able to make it so that push cliff brecht and set camera.

87
00:04:32,600 --> 00:04:37,200
Transform are basically the same thing and really, they're just

88
00:04:37,200 --> 00:04:40,300
accessing different parts of that piece of information.

89
00:04:40,400 --> 00:04:43,100
So that's kind of what I want to get us to here.

90
00:04:43,200 --> 00:04:44,600
And so, what I'm going to do is

91
00:04:44,800 --> 00:04:47,800
Going to go up to push clip rect and I'm going to try to pull that

92
00:04:47,800 --> 00:04:50,800
information down or rather push this information up.

93
00:04:50,800 --> 00:04:54,800
Might be a better way to say it so that we have a more coherent way of

94
00:04:54,800 --> 00:04:55,600
working with this.

95
00:04:55,900 --> 00:05:00,300
So I'm going to slide begin render group and render group down,

96
00:05:00,400 --> 00:05:03,400
because those are kind of Primal and those have to set up an initial

97
00:05:03,400 --> 00:05:05,600
camera transform which is just whatever it is.

98
00:05:05,600 --> 00:05:08,900
If you don't set anything unclear, whether we really want that, you

99
00:05:08,900 --> 00:05:11,500
know, we could make it so that you're always supposed to actually set

100
00:05:11,500 --> 00:05:14,100
something but for the time being we'll leave it that way.

101
00:05:14,700 --> 00:05:18,000
Going to grab these push clip Rex out of here so that we can see them

102
00:05:18,000 --> 00:05:19,100
all at the same time.

103
00:05:19,400 --> 00:05:23,700
And I'm going to come down to the rendering code here and I'm just

104
00:05:23,700 --> 00:05:25,300
going to put them all in this one place.

105
00:05:25,300 --> 00:05:26,400
So we can take a look at them.

106
00:05:26,400 --> 00:05:27,500
I'm also going to switch to the other window.

107
00:05:27,500 --> 00:05:30,400
So it my head's not in the way while we're looking at there.

108
00:05:32,500 --> 00:05:34,400
Alright, so you can see what's going on here.

109
00:05:34,400 --> 00:05:36,800
We've got a couple different things that are happening.

110
00:05:37,600 --> 00:05:41,700
Basically, we've got to push clip recalls, that do nothing.

111
00:05:41,700 --> 00:05:43,300
Other than prep for the other.

112
00:05:43,300 --> 00:05:47,500
Push, rip rekt call like this, is the push cliprect call here that

113
00:05:47,500 --> 00:05:48,700
actually does the work.

114
00:05:48,700 --> 00:05:53,600
These two are just ways of specifying, the cliprect in some other way.

115
00:05:54,100 --> 00:05:57,100
And so this one is just a light way of saying, Hey I want to pass a

116
00:05:57,100 --> 00:05:59,600
rectangle to with the Z coordinate.

117
00:06:00,000 --> 00:06:03,500
This one is saying, alright I've got a full 3d offset and then a

118
00:06:03,500 --> 00:06:06,700
dimension and object transform and I want to transfer over the object

119
00:06:06,700 --> 00:06:08,200
transform, right?

120
00:06:08,600 --> 00:06:12,300
And then finally, you get to this one which is actually the one that

121
00:06:12,300 --> 00:06:15,700
does the work and that's just taking integer coordinates.

122
00:06:15,900 --> 00:06:18,300
What the render Target isn't, what the focal length is and you can see

123
00:06:18,300 --> 00:06:20,800
that playing out here, right?

124
00:06:25,300 --> 00:06:25,700
Okay.

125
00:06:27,300 --> 00:06:31,100
So, what we want to do now is we want to take a look.

126
00:06:32,200 --> 00:06:35,200
And how people are using these because we're going to have to

127
00:06:35,200 --> 00:06:36,600
fundamentally change that a little bit.

128
00:06:36,600 --> 00:06:40,800
I think because what we want to be able to do is when we push a new

129
00:06:40,800 --> 00:06:44,600
clip, rect on, we may want it to be in reference to an old clip rect

130
00:06:45,100 --> 00:06:46,700
and we may want to copy stuff out of it.

131
00:06:47,000 --> 00:06:50,000
And here's why I say that because there's two ways that people might

132
00:06:50,000 --> 00:06:53,200
want to be using this function, one way that people might want to be

133
00:06:53,200 --> 00:06:56,300
using this function, is just to create a new clipping wrecked or

134
00:06:56,300 --> 00:07:00,800
adjust to create a new camera transform and they may not be trying to

135
00:07:00,800 --> 00:07:01,800
change.

136
00:07:02,000 --> 00:07:04,200
Clipping rectangle or the camera transform.

137
00:07:04,400 --> 00:07:07,000
So we kind of want a way of storing.

138
00:07:07,000 --> 00:07:09,600
What the last camera or the last clip.

139
00:07:09,600 --> 00:07:14,000
Rect was so that when people want to just modify one or the other,

140
00:07:14,000 --> 00:07:17,000
they don't have to necessarily remember what the other one was.

141
00:07:17,100 --> 00:07:17,600
Right.

142
00:07:19,300 --> 00:07:23,300
So that's kind of one thing that that I'd like to be able to do here

143
00:07:23,700 --> 00:07:27,300
and so we need to start making it more aware of that in general.

144
00:07:27,300 --> 00:07:29,900
That's got to have to be something that we're taking a little more

145
00:07:29,900 --> 00:07:30,500
seriously.

146
00:07:31,900 --> 00:07:35,600
Furthermore we're probably going to pull out this projection creation

147
00:07:35,600 --> 00:07:38,500
call and we'll probably make it so that both perspective and

148
00:07:38,500 --> 00:07:43,800
orthographic we can stop probably looking at these all together, the

149
00:07:43,800 --> 00:07:46,800
false true, you know, dichotomy where we're passing those down and all

150
00:07:46,800 --> 00:07:47,500
that sort of stuff.

151
00:07:48,700 --> 00:07:51,800
And just make a matrix because we can do an orthographic projection

152
00:07:51,800 --> 00:07:52,400
with a matrix.

153
00:07:52,400 --> 00:07:54,600
Just like we can do a perspective, projection of the Matrix.

154
00:07:54,900 --> 00:07:57,600
So this will really unify a lot of our code and make it so that we

155
00:07:57,600 --> 00:08:00,600
don't have as much special casing which is really nice as well, right?

156
00:08:00,600 --> 00:08:03,400
It's just kind of cleaning everything up and again the more we sort of

157
00:08:03,400 --> 00:08:06,200
push towards a standard 3D pipeline the more it cleans things up

158
00:08:06,200 --> 00:08:09,200
because the 3D Pipeline and something that's been refined for

159
00:08:09,200 --> 00:08:09,900
Generations.

160
00:08:09,900 --> 00:08:12,600
Now by people who have been trying to make it more and more consistent

161
00:08:12,600 --> 00:08:15,700
cleaner, and whatever, so typically, the 3D pipeline tends to be a

162
00:08:15,700 --> 00:08:17,800
very clean way to do things primarily just

163
00:08:19,000 --> 00:08:21,700
People have spent so much time getting it, right?

164
00:08:22,200 --> 00:08:26,100
You know, if we had not had the whole history of 3D transforms behind

165
00:08:26,100 --> 00:08:29,100
us, we probably wouldn't have thought of using a 4 by 4 Matrix with a

166
00:08:29,100 --> 00:08:32,700
homogeneous coordinates to do you know there's all this stuff that we

167
00:08:32,700 --> 00:08:36,200
Nest wouldn't necessarily just thought of the first time out, right?

168
00:08:36,400 --> 00:08:40,600
So we're really leaning on past design in a sense here because there's

169
00:08:40,600 --> 00:08:43,900
a living, a lot of people who've worked out a lot of good ideas there

170
00:08:43,900 --> 00:08:45,100
and we're just being able to use them.

171
00:08:45,100 --> 00:08:48,100
So that is a nice aspect of the 3D pipeline.

172
00:08:48,400 --> 00:08:51,200
It was never really tore true of a the 2D pipeline.

173
00:08:56,800 --> 00:08:59,500
2D pipelines were always just a lot more ad hoc

174
00:09:01,600 --> 00:09:03,900
and so that there is that anyway,

175
00:09:05,300 --> 00:09:07,400
So I'm going to go ahead and take a look at push cliprect here.

176
00:09:08,000 --> 00:09:09,300
I'm a look at where it happens.

177
00:09:09,600 --> 00:09:11,700
So these are all inside render group.

178
00:09:11,700 --> 00:09:14,800
So if you look the only there's really only two places we do it.

179
00:09:15,300 --> 00:09:16,700
There's the push cliprect here.

180
00:09:18,200 --> 00:09:20,500
And then we've got push clip rect here.

181
00:09:22,500 --> 00:09:23,500
In the debug code.

182
00:09:24,000 --> 00:09:24,700
And again here.

183
00:09:25,800 --> 00:09:29,600
And if I look at this, you can see that really, these are just

184
00:09:29,600 --> 00:09:31,900
orthographic push clip for X right there.

185
00:09:31,900 --> 00:09:35,100
Just trying to restrict to a part of the screen.

186
00:09:36,200 --> 00:09:38,600
That's you know what they expect.

187
00:09:38,700 --> 00:09:45,900
So the only non orthographic one is here, you can see it where it's

188
00:09:45,900 --> 00:09:49,800
trying to specify a new Alpha floor rekt.

189
00:09:49,800 --> 00:09:52,000
It's not actually doing anything with the

190
00:09:52,200 --> 00:09:53,700
Will clipping, right?

191
00:09:54,300 --> 00:09:56,800
So really, this is more of just setting the render.

192
00:09:56,800 --> 00:10:01,500
Target is all this is and so again you can kind of see that each of

193
00:10:01,500 --> 00:10:04,800
these is really doing its own thing.

194
00:10:05,400 --> 00:10:06,900
These are really pushed up Rex.

195
00:10:06,900 --> 00:10:11,000
This is really pushed render Target, and so, that's why I say, you

196
00:10:11,000 --> 00:10:13,200
know, we kind of want to start to disaggregate those.

197
00:10:13,600 --> 00:10:16,200
Because again, now we're also going to have the people who call

198
00:10:16,200 --> 00:10:17,800
perspective and orthographic.

199
00:10:17,900 --> 00:10:21,200
They're also pushing clip rex on, but they're pushing them on for the

200
00:10:21,200 --> 00:10:21,800
purposes.

201
00:10:22,200 --> 00:10:23,500
Of camera, transform.

202
00:10:25,000 --> 00:10:29,700
All right, so what we can see here is this push to practice just to

203
00:10:29,700 --> 00:10:34,900
push render Target and so I think what I'd like to do is actually just

204
00:10:34,900 --> 00:10:41,100
make it be that explicitly and not have it set the clip, rect at all.

205
00:10:41,500 --> 00:10:43,600
So this is more of a push render Target.

206
00:10:46,700 --> 00:10:49,300
And here we have the, the render Group which we need.

207
00:10:49,400 --> 00:10:50,400
None of this stuff.

208
00:10:50,400 --> 00:10:51,800
Would we actually need?

209
00:10:51,800 --> 00:10:55,400
We would only need the alpha floor render Target.

210
00:10:55,900 --> 00:11:00,600
And furthermore, if we were to do that compilation step, I don't know

211
00:11:00,600 --> 00:11:04,200
that we would now need like, for example, the draw buffer, it may be

212
00:11:04,200 --> 00:11:05,800
that that was the only reason.

213
00:11:06,700 --> 00:11:07,000
Yeah.

214
00:11:07,000 --> 00:11:10,400
And you can see that again this is just a nice way to start pulling

215
00:11:10,400 --> 00:11:13,300
out some of that code complexity that just shouldn't have been there.

216
00:11:13,300 --> 00:11:16,000
And I think I mentioned this back when we were doing

217
00:11:16,200 --> 00:11:16,600
As well.

218
00:11:16,700 --> 00:11:20,600
I'd started try and clean some of those out and you can see that if we

219
00:11:20,600 --> 00:11:23,900
just get rid of that, the only reason that we ever even had to pass

220
00:11:23,900 --> 00:11:26,500
this into this routine, the only reason update and render entities was

221
00:11:26,500 --> 00:11:28,300
aware of the draw buffer at all.

222
00:11:28,500 --> 00:11:31,700
Was just because, when it was pushing the render Target down, it

223
00:11:31,700 --> 00:11:33,300
needed to know that, right?

224
00:11:34,100 --> 00:11:37,600
But it never really cared what the cliprect was as far as it was

225
00:11:37,600 --> 00:11:38,100
concerned.

226
00:11:38,100 --> 00:11:40,700
You could have just inherited the cliprect from whoever set it up

227
00:11:40,700 --> 00:11:45,500
beforehand and it was just forced to know what it was because it had

228
00:11:45,500 --> 00:11:46,000
to pass.

229
00:11:46,100 --> 00:11:49,500
Us that down in addition to the render Target, which is what it was

230
00:11:49,500 --> 00:11:50,600
actually trying to set.

231
00:11:50,900 --> 00:11:51,900
So I'd like to again.

232
00:11:51,900 --> 00:11:54,600
That's why I'm trying to move to that sort of system that way when we

233
00:11:54,600 --> 00:11:57,200
call update and render entities, here we can get rid of the drop

234
00:11:57,200 --> 00:11:59,400
buffer, the drawbar for doesn't have to be there anymore.

235
00:12:00,000 --> 00:12:02,800
And if we take a look back that that again that that change has a

236
00:12:02,800 --> 00:12:06,000
positive Cascade effect all the way back because you can look at

237
00:12:06,000 --> 00:12:06,400
simulate.

238
00:12:06,400 --> 00:12:11,000
Now simulate doesn't need to take the draw buffer anymore so that's

239
00:12:11,000 --> 00:12:12,400
nice right?

240
00:12:13,100 --> 00:12:19,200
And so yet it's just one more piece of complexity that that nicely

241
00:12:19,200 --> 00:12:21,500
Falls away and that's really nice.

242
00:12:21,900 --> 00:12:28,800
So if we want to add that in here so that's another aspect of this

243
00:12:29,400 --> 00:12:29,800
sausage.

244
00:12:30,000 --> 00:12:31,500
Gentlemen, where it's going to be.

245
00:12:31,700 --> 00:12:32,300
Let's see here.

246
00:12:32,300 --> 00:12:34,300
That's a u-32 that's going to get back.

247
00:12:34,700 --> 00:12:38,400
Where it doesn't push render Target and there we go.

248
00:12:41,000 --> 00:12:42,400
Don't actually know what the render Target in.

249
00:12:42,400 --> 00:12:43,400
This is, you 32,

250
00:12:48,200 --> 00:12:49,800
So there we've got to push render Target.

251
00:12:49,800 --> 00:12:52,200
This is not implemented yet, so we're going to have to do something

252
00:12:52,200 --> 00:12:56,100
about that in a moment, but that's our push render Target call.

253
00:12:56,500 --> 00:12:57,500
If I can pile here.

254
00:12:59,800 --> 00:13:00,700
We're in good shape.

255
00:13:01,100 --> 00:13:03,000
And so then let's take a look at some of these other ones.

256
00:13:03,000 --> 00:13:06,600
So, in push cliprect, now what I'd like to do is in these other

257
00:13:06,600 --> 00:13:09,400
functions where we're passing it, I'd like to get rid of the render

258
00:13:09,400 --> 00:13:13,600
Target because the render Target is now no longer relevant all,

259
00:13:13,600 --> 00:13:16,200
similarly, the focal length, and those sorts of things, shouldn't

260
00:13:16,200 --> 00:13:17,800
really be relevant.

261
00:13:18,300 --> 00:13:21,400
So I'm just going to temporarily remove those, right?

262
00:13:21,400 --> 00:13:25,500
We're going to say, you know, let's pretend we had that as well, kind

263
00:13:25,500 --> 00:13:26,000
of a thing.

264
00:13:26,900 --> 00:13:29,300
And similarly, you know, here we would get rid of that.

265
00:13:29,500 --> 00:13:33,100
To because we wouldn't be passing it to function doesn't need it.

266
00:13:33,500 --> 00:13:37,100
So that this way, these would go back to being actual push clip.

267
00:13:37,100 --> 00:13:45,300
Rect and this would be something more like push camera or something

268
00:13:45,300 --> 00:13:46,800
like this are pushed render setup.

269
00:13:47,100 --> 00:13:51,400
I don't really know what what we want to call that.

270
00:13:51,400 --> 00:13:55,600
I don't know that there's a really good name for that bundle which is

271
00:13:55,700 --> 00:13:58,200
the cliprect the render Target and

272
00:14:00,000 --> 00:14:02,600
And the camera transform, but I guess I'll call it.

273
00:14:02,600 --> 00:14:03,600
Push set up for now.

274
00:14:04,600 --> 00:14:09,900
So when we do a push set up, what I want to do is have this take, I

275
00:14:09,900 --> 00:14:10,900
guess everything.

276
00:14:11,300 --> 00:14:15,900
So it would take the clip rectangle that you're going to use it, take

277
00:14:15,900 --> 00:14:21,200
the render Target index, it would also then need the Matrix that we're

278
00:14:21,200 --> 00:14:22,100
going to use.

279
00:14:23,400 --> 00:14:27,700
So this would be the projection Matrix and it would just copy that in

280
00:14:27,700 --> 00:14:28,000
there.

281
00:14:28,600 --> 00:14:29,400
So,

282
00:14:29,800 --> 00:14:33,200
Stuff here, where we're creating this projection, where we have the

283
00:14:33,200 --> 00:14:37,200
safe ratio in the focal length, and that sort of stuff that stuff

284
00:14:37,200 --> 00:14:38,600
wants to come out.

285
00:14:38,600 --> 00:14:42,100
And that would be going into these camera transforms.

286
00:14:42,600 --> 00:14:43,900
More explicitly here.

287
00:14:44,200 --> 00:14:47,800
We'll deal with that in a second but then in here where we're doing

288
00:14:47,800 --> 00:14:51,300
the wrecked, what we want to do is we want to go ahead and just

289
00:14:51,300 --> 00:14:56,400
capture that projection Matrix, whatever we are being given and leave

290
00:14:56,400 --> 00:14:57,700
it at that, right?

291
00:15:04,300 --> 00:15:06,600
So now in the push setup, call the primary thing that we need to be

292
00:15:06,600 --> 00:15:10,000
able to do is get that information as we go.

293
00:15:10,000 --> 00:15:11,800
And I'm not sure exactly how we want to do that.

294
00:15:11,800 --> 00:15:14,500
We might think about that a little bit.

295
00:15:15,800 --> 00:15:19,100
We do have this concept of the camera transform.

296
00:15:19,700 --> 00:15:22,500
You can see the camera transformed here, where it's got orthographic

297
00:15:22,500 --> 00:15:23,800
focal length, camera p.

298
00:15:24,900 --> 00:15:28,000
And I think, really what we want to do there with that camera transfer

299
00:15:28,000 --> 00:15:32,800
and potentially is the camera transfer met just now want to be a 4 by

300
00:15:32,800 --> 00:15:34,300
4, right?

301
00:15:34,900 --> 00:15:38,100
We may not really want camera transform to be an actual thing that

302
00:15:38,100 --> 00:15:39,500
people think about anymore.

303
00:15:39,700 --> 00:15:42,300
I'm not sure but that's probably the case.

304
00:15:42,300 --> 00:15:45,100
So what we would be storing for now,

305
00:15:46,400 --> 00:15:49,300
Is like last projection or something like this, right?

306
00:15:52,500 --> 00:15:54,900
And we'd have last render Target.

307
00:15:57,100 --> 00:15:59,900
And the reason that I have that is just because I'm going to use it as

308
00:15:59,900 --> 00:16:03,400
sort of an accumulation as a holdover, like a rolling sort of

309
00:16:03,400 --> 00:16:06,500
situation where we just say, hey, every time you set, one of these

310
00:16:06,500 --> 00:16:08,100
will just keep that as the current one.

311
00:16:08,100 --> 00:16:11,100
So that if you set something else, it's just assumed to have a little

312
00:16:11,100 --> 00:16:14,000
state in there and you don't always want to do stuff like that because

313
00:16:14,000 --> 00:16:17,700
sometimes you can forget or it gets kind of hairy what's what?

314
00:16:17,700 --> 00:16:21,200
And when but in this particular case, I just would rather do it that

315
00:16:21,200 --> 00:16:21,900
way for now.

316
00:16:21,900 --> 00:16:24,700
Because typically the way that our render stuff is set up as we set a

317
00:16:24,700 --> 00:16:26,400
state and we do a bunch of stuff with it.

318
00:16:26,600 --> 00:16:29,100
It just turns out to be a nice way to compress the amount of

319
00:16:29,100 --> 00:16:30,900
information that you're sending down.

320
00:16:32,300 --> 00:16:34,900
Alright, so here's the render Target index.

321
00:16:35,700 --> 00:16:38,100
I want to say last render Target.

322
00:16:40,000 --> 00:16:45,200
Like so and cure this would just be last projection.

323
00:16:45,900 --> 00:16:50,300
And that way when we're doing that, you know, off it goes when we

324
00:16:50,300 --> 00:16:55,200
whenever we call one of these push set up calls again, since I don't

325
00:16:55,200 --> 00:16:58,100
anticipate this being called frequently, I'm not super concerned about

326
00:16:58,100 --> 00:17:00,700
the efficiency here which is why I'm okay copying giant matrices

327
00:17:00,700 --> 00:17:01,200
around.

328
00:17:01,400 --> 00:17:05,400
If I was concerned about the efficiency, I might want to be a little

329
00:17:05,400 --> 00:17:08,200
bit more careful here if I thought we were going to be pushing setups

330
00:17:08,200 --> 00:17:08,900
a lot.

331
00:17:09,700 --> 00:17:13,900
And so it is worth noting that that is just, you know, it's something

332
00:17:13,900 --> 00:17:15,700
to be aware of if that makes sense.

333
00:17:17,500 --> 00:17:23,000
So, what I want to do here is to say, all right, the render Target

334
00:17:23,000 --> 00:17:23,700
index.

335
00:17:24,800 --> 00:17:28,600
I want to snap that out to the last render Target.

336
00:17:31,400 --> 00:17:33,900
And similarly, the last projection.

337
00:17:35,600 --> 00:17:40,000
I want to snap that and I'm also going to want to snap the rectangle

338
00:17:40,000 --> 00:17:40,700
to here.

339
00:17:41,900 --> 00:17:44,800
So I want to do last clip x equals X.

340
00:17:45,900 --> 00:17:46,600
This sort of thing.

341
00:17:52,800 --> 00:17:55,300
And that's about it, right?

342
00:18:06,300 --> 00:18:10,800
so given that then when other people do transforms,

343
00:18:12,600 --> 00:18:16,100
they don't have to do anything like looking at the screen dim or pixel

344
00:18:16,100 --> 00:18:18,600
height or any of this stuff, they can just use whatever the last clip.

345
00:18:18,600 --> 00:18:20,000
Rect was, right?

346
00:18:20,200 --> 00:18:23,100
So if you want to push a clip, rect you can push a clip, rect and then

347
00:18:23,100 --> 00:18:26,700
you can also set the camera transform, if that's what you want.

348
00:18:26,800 --> 00:18:28,800
But you can also just set the camera transform.

349
00:18:28,800 --> 00:18:30,800
If all you're trying to do is set the camera transform, you can do

350
00:18:30,800 --> 00:18:33,300
that as well, and you don't have to worry about it, right?

351
00:18:34,200 --> 00:18:38,900
So similarly, on here, you know, I can say, current cliprect index, I

352
00:18:38,900 --> 00:18:41,800
can do a push cliprect, what I want to do the render Target, and when

353
00:18:41,800 --> 00:18:41,900
I

354
00:18:42,000 --> 00:18:46,500
all that I can just say like okay the render group last Quebec's

355
00:18:50,000 --> 00:18:50,300
Let's Go.

356
00:18:50,300 --> 00:18:52,900
Fly w.

357
00:18:54,400 --> 00:18:59,100
That's the page and then I don't have to deal with any of that.

358
00:18:59,400 --> 00:19:02,700
And I can say the projection Matrix is whatever the last projection

359
00:19:02,700 --> 00:19:03,300
Matrix was.

360
00:19:03,600 --> 00:19:06,100
So the only thing I'm really doing here is passing down that render

361
00:19:06,100 --> 00:19:11,900
Target Index, right?

362
00:19:11,900 --> 00:19:13,800
That's the only thing I actually want to do.

363
00:19:15,400 --> 00:19:16,600
What are you complaining about?

364
00:19:23,800 --> 00:19:25,000
I was that actually passing.

365
00:19:25,000 --> 00:19:26,300
Okay, well, that's something we can.

366
00:19:26,400 --> 00:19:28,800
We can deal with this and we can deal with that in a moment.

367
00:19:32,300 --> 00:19:33,300
It's too much stuff here.

368
00:19:34,300 --> 00:19:34,700
All right.

369
00:19:35,200 --> 00:19:37,400
So that needs a semicolon.

370
00:19:40,700 --> 00:19:42,400
And okay.

371
00:19:44,000 --> 00:19:44,500
Here we go.

372
00:19:45,900 --> 00:19:50,900
So let's see, push set up that all looks fine to me.

373
00:19:51,300 --> 00:19:54,900
Push cliprect pushes the clip rect as we want it to, and that's all

374
00:19:54,900 --> 00:19:58,500
good and set camera transform.

375
00:19:58,700 --> 00:20:01,500
So, let's take a look at these two routines now.

376
00:20:02,100 --> 00:20:04,100
So set camera, transfer band push render Target.

377
00:20:04,100 --> 00:20:04,500
Push render.

378
00:20:04,500 --> 00:20:05,800
Target is basically done now.

379
00:20:06,100 --> 00:20:07,100
Set camera Transformers.

380
00:20:07,100 --> 00:20:09,100
Not so, set camera, transform.

381
00:20:09,100 --> 00:20:12,200
I'm going to stop that from you from doing anything with the screen

382
00:20:12,200 --> 00:20:13,700
dimensions since

383
00:20:13,800 --> 00:20:16,500
doesn't actually need to do that for any particular reason at the

384
00:20:16,500 --> 00:20:19,000
moment, so we can get rid of those

385
00:20:20,500 --> 00:20:23,200
And it really just needs to take a look at these.

386
00:20:26,000 --> 00:20:28,700
For doing those aspect ratio correction.

387
00:20:28,700 --> 00:20:32,600
So here's that creation of the projection Matrix here, we are setting

388
00:20:32,600 --> 00:20:38,000
information about the camera and what we really now don't need to do

389
00:20:38,000 --> 00:20:41,100
is remember this stuff specifically, right.

390
00:20:41,100 --> 00:20:44,600
So basically, like we don't need that.

391
00:20:44,600 --> 00:20:47,000
We just pass in the focal length and use it is all.

392
00:20:47,000 --> 00:20:51,100
We are really doing here when we're saying whether or not it's

393
00:20:51,100 --> 00:20:52,700
supposed to be orthographic or not.

394
00:20:52,700 --> 00:20:55,800
That's just going to be an

395
00:20:56,000 --> 00:20:59,800
Operation that has to do with.

396
00:21:00,500 --> 00:21:02,600
How we're going to create our projection Matrix.

397
00:21:07,500 --> 00:21:11,200
So I can do an orthographic instead and I can still pass down that

398
00:21:11,200 --> 00:21:13,700
same ratio that were using for aspect ratio correction because we're

399
00:21:13,700 --> 00:21:14,600
going to want to do that.

400
00:21:15,000 --> 00:21:17,300
And then we can make a routine that will create an orthographic

401
00:21:17,300 --> 00:21:19,400
projection and use that.

402
00:21:22,900 --> 00:21:25,200
Looks like we're doing that way.

403
00:21:27,800 --> 00:21:33,100
Okay so we've got orthographic and that's all good.

404
00:21:33,200 --> 00:21:36,200
We've got projection and that's good but now we have to deal with the

405
00:21:36,200 --> 00:21:36,600
part.

406
00:21:36,600 --> 00:21:38,700
That's actually the thing that we wanted anyway.

407
00:21:39,400 --> 00:21:43,900
Which is that when we do a set camera transform here, rather than just

408
00:21:43,900 --> 00:21:45,100
having a camera P.

409
00:21:45,700 --> 00:21:51,300
We've now got this way like we saw in the math routines, we've got

410
00:21:51,300 --> 00:21:52,500
this way of creating a camera

411
00:21:52,700 --> 00:21:54,600
Throw him out of axes and a location.

412
00:21:54,800 --> 00:21:58,500
What I'd rather do is just say, what's the actual camera transform?

413
00:21:58,900 --> 00:21:59,100
Right.

414
00:21:59,100 --> 00:22:03,100
Just tell me what the camera transform is the whole thing rotation and

415
00:22:03,100 --> 00:22:03,600
position.

416
00:22:04,100 --> 00:22:09,700
Instead of just giving me position, then when I come through here and

417
00:22:09,700 --> 00:22:13,400
create the projection Matrix, what I can do is I can take the camera

418
00:22:13,400 --> 00:22:17,600
transform and say, hey, apply the camera, transform first to the

419
00:22:17,600 --> 00:22:19,000
points, right?

420
00:22:19,200 --> 00:22:22,300
And then apply the projection Matrix for the orthographic Matrix,

421
00:22:22,300 --> 00:22:22,500
right?

422
00:22:22,700 --> 00:22:22,900
Right.

423
00:22:23,600 --> 00:22:27,500
And so perhaps more properly we could do it this way and say we have a

424
00:22:27,500 --> 00:22:29,000
name for y, for which is r.

425
00:22:30,800 --> 00:22:32,900
Our projection only, right?

426
00:22:33,500 --> 00:22:34,800
And our projection only

427
00:22:41,300 --> 00:22:42,700
Get set to one or the other.

428
00:22:42,800 --> 00:22:45,700
And then I just take whichever one, we actually picked.

429
00:22:47,600 --> 00:22:52,300
There we go, whichever one we actually picked and then I multiply it

430
00:22:52,300 --> 00:22:53,400
by the camera transform.

431
00:22:53,600 --> 00:22:57,800
And again, remember transforms because of the way, the math reads out

432
00:22:58,100 --> 00:22:59,200
and we did ours in math.

433
00:22:59,200 --> 00:23:05,800
Order is the rightmost, transform occurs first, which is what we want.

434
00:23:05,800 --> 00:23:09,100
We want to put everything into the space of the camera first.

435
00:23:09,300 --> 00:23:10,700
And then we want to apply the

436
00:23:11,100 --> 00:23:15,200
And not the other way around, for obvious reasons because the

437
00:23:15,200 --> 00:23:17,100
projection would be totally wrong.

438
00:23:17,300 --> 00:23:20,800
If we were applying it before moving the world to be centered around

439
00:23:20,800 --> 00:23:21,400
the camera.

440
00:23:22,500 --> 00:23:28,100
So that's really it for what we wanted to do.

441
00:23:28,500 --> 00:23:31,700
Now, we just have to actually push the clip rect on so here's that

442
00:23:31,700 --> 00:23:36,100
push clipped call and basically what we're doing here is again passing

443
00:23:36,100 --> 00:23:40,900
all old information except for one thing which in this case.

444
00:23:41,100 --> 00:23:43,200
Case is going to be our projection.

445
00:23:44,700 --> 00:23:45,100
There we go.

446
00:23:47,800 --> 00:23:48,900
So that's all well and good.

447
00:23:48,900 --> 00:23:51,800
But now we have to clean up sort of the fact that we push this to the

448
00:23:51,800 --> 00:23:54,300
outside the code that's calling us is going to.

449
00:23:54,300 --> 00:23:57,800
Now have to be aware of that and do the right thing.

450
00:23:57,800 --> 00:23:59,800
So now we can see when we

451
00:24:00,000 --> 00:24:02,900
All get render entity basis p.

452
00:24:06,600 --> 00:24:10,200
One of the interesting things about this is now we actually have in

453
00:24:10,200 --> 00:24:12,500
this get render entity basis P.

454
00:24:13,000 --> 00:24:17,500
All of this code is kind of now not necessary, right?

455
00:24:17,500 --> 00:24:22,800
Like this code is actually sort of meaningless for us.

456
00:24:27,300 --> 00:24:30,200
So when we call get render entity basis P, we're just doing a

457
00:24:30,200 --> 00:24:35,000
transform on P and most of this stuff just simply isn't necessary.

458
00:24:35,300 --> 00:24:37,600
All of the stuff is happening in the projection Matrix.

459
00:24:38,400 --> 00:24:42,600
We certainly don't need to do really any of, yeah, pretty much.

460
00:24:42,600 --> 00:24:44,800
None of this stuff is really all that necessary.

461
00:24:45,500 --> 00:24:48,900
And so a lot of this, this this function may actually go away entirely

462
00:24:48,900 --> 00:24:49,600
pretty soon.

463
00:24:50,100 --> 00:24:51,600
I'm going to leave it on there.

464
00:24:51,600 --> 00:24:53,300
You can see the camera transform.

465
00:24:54,800 --> 00:24:55,700
Coming in here.

466
00:25:00,300 --> 00:25:01,700
And that camera transform.

467
00:25:01,700 --> 00:25:06,600
Now, you can see that it's just using the position out of it, the X

468
00:25:06,600 --> 00:25:11,000
and Y, and the Z, and we don't want any of that anymore, right?

469
00:25:11,100 --> 00:25:14,200
We don't want any of that anymore because we're already accounting for

470
00:25:14,200 --> 00:25:14,800
that inside.

471
00:25:14,800 --> 00:25:16,000
Our regular transform.

472
00:25:16,500 --> 00:25:19,800
So we don't need any of that and really just don't need to do it,

473
00:25:19,800 --> 00:25:20,200
right?

474
00:25:20,200 --> 00:25:26,100
So we want to go ahead and take all of this stuff out and start to

475
00:25:26,100 --> 00:25:27,800
collapse this function down even more.

476
00:25:28,000 --> 00:25:29,400
Probably get rid of it eventually.

477
00:25:29,700 --> 00:25:30,800
Early right.

478
00:25:32,700 --> 00:25:35,900
So it looks like that now does not actually need any of this

479
00:25:35,900 --> 00:25:39,900
information when we look at the orthographic thing, we're going to

480
00:25:39,900 --> 00:25:44,800
have to again have that be a little bit more clear, but that's going

481
00:25:44,800 --> 00:25:48,400
to happen almost entirely in the matrices anyway, so we should be good

482
00:25:48,400 --> 00:25:48,800
there.

483
00:25:49,500 --> 00:25:52,500
And so here we now no longer have to pass any of that.

484
00:25:52,600 --> 00:25:56,100
We don't need to access what the camera transform was because that's

485
00:25:56,100 --> 00:25:58,200
not relevant anymore, okay?

486
00:26:05,600 --> 00:26:09,500
All right, so then when we get to things like gun, projection on

487
00:26:09,500 --> 00:26:11,900
projection is going to be a little bit trickier for us.

488
00:26:11,900 --> 00:26:15,100
Now, the reason that it's a little bit trickier for us is because we

489
00:26:15,100 --> 00:26:19,100
have a actual projection Matrix that were using, right?

490
00:26:19,600 --> 00:26:22,100
And because we're using an actual projection Matrix, with that means

491
00:26:22,100 --> 00:26:26,300
is we need the ability to invert our projection Matrix, right?

492
00:26:26,500 --> 00:26:32,200
We need the some way of being able to undo the effects of the

493
00:26:32,200 --> 00:26:35,200
projection Matrix when we want to

494
00:26:35,400 --> 00:26:36,700
On Project, right?

495
00:26:37,000 --> 00:26:41,600
So this part is still going to be roughly the same, right?

496
00:26:41,600 --> 00:26:46,500
This part where we do our unprojected in terms of correcting for

497
00:26:46,500 --> 00:26:49,300
aspect ratio and that sort of stuff we're still mostly going to be

498
00:26:49,300 --> 00:26:49,700
doing that.

499
00:26:49,700 --> 00:26:54,500
Although not exactly right because of the order of the operations.

500
00:26:55,100 --> 00:26:59,500
So I guess I would probably say let's push this on to the

501
00:27:06,600 --> 00:27:08,900
Let's push this on because this is kind of going to be a topic in and

502
00:27:08,900 --> 00:27:09,600
of itself.

503
00:27:09,900 --> 00:27:13,000
So, what I'd rather do here is just say, alright, let's just patch

504
00:27:13,000 --> 00:27:18,500
this temporarily to not be a problem, but then afterwards, we will

505
00:27:18,500 --> 00:27:22,000
have to do the real work there.

506
00:27:33,800 --> 00:27:35,100
So all I've done is just remove it.

507
00:27:35,100 --> 00:27:37,300
This is not correct anymore, right?

508
00:27:37,300 --> 00:27:40,200
It's just it's completely wrong but that's okay.

509
00:27:40,800 --> 00:27:43,800
And let's go ahead and

510
00:27:55,500 --> 00:27:56,300
that one there as well.

511
00:28:02,200 --> 00:28:03,000
Who knows?

512
00:28:03,800 --> 00:28:04,300
All right.

513
00:28:06,400 --> 00:28:07,900
So here we are in push clip rect.

514
00:28:09,000 --> 00:28:14,300
And at this point again, we shouldn't have to pass that down.

515
00:28:14,300 --> 00:28:20,000
Presumably that can just be used straight and what is the problem

516
00:28:20,000 --> 00:28:20,500
here?

517
00:28:21,000 --> 00:28:23,900
Ah we need to pass that as an address, that's all good.

518
00:28:25,100 --> 00:28:28,900
We don't have orthographic yet as a thing to make but that's okay for

519
00:28:28,900 --> 00:28:31,300
the time being push cliprect.

520
00:28:31,300 --> 00:28:34,600
In this case, we need to pass

521
00:28:34,800 --> 00:28:38,000
The address of the Matrix again, that's going to be true down here as

522
00:28:38,000 --> 00:28:38,400
well.

523
00:28:40,000 --> 00:28:43,700
And seven arguments.

524
00:28:48,200 --> 00:28:49,100
It's per set up.

525
00:28:49,100 --> 00:28:49,700
That's why

526
00:28:51,800 --> 00:28:52,700
I renamed it.

527
00:28:59,700 --> 00:29:04,500
All right, so set camera transform in both cases.

528
00:29:04,500 --> 00:29:11,100
Now is not really, I don't even know that we really need that because

529
00:29:11,100 --> 00:29:14,800
now you just pass the camera, transform directly.

530
00:29:15,200 --> 00:29:19,600
And, you know, you don't even need to pass the ortho or not.

531
00:29:20,600 --> 00:29:22,500
Now that I think about it in some sense.

532
00:29:22,500 --> 00:29:24,100
Well, I guess you still sort of do.

533
00:29:24,400 --> 00:29:27,700
I mean, what we could do is have this past the entire thing, but I

534
00:29:27,700 --> 00:29:29,000
guess I'll leave it this way for now.

535
00:29:29,600 --> 00:29:30,600
For now, we'll see.

536
00:29:31,600 --> 00:29:35,600
So when we call orthographic or perspective really, those could just

537
00:29:35,600 --> 00:29:40,800
be calling the other function now because they don't really need to do

538
00:29:40,800 --> 00:29:41,500
anything.

539
00:29:43,900 --> 00:29:46,700
They really want to create a whole camera transform.

540
00:29:46,700 --> 00:29:47,400
Probably.

541
00:29:47,600 --> 00:29:51,000
So what I would say is what is get rid of those, let those error out

542
00:29:51,000 --> 00:29:53,000
higher up the chain and deal with it.

543
00:29:53,000 --> 00:29:57,800
There, we do need to have that ability to do

544
00:29:59,500 --> 00:29:59,600
A.

545
00:30:00,000 --> 00:30:01,800
Tonight, an orthographic projection.

546
00:30:02,100 --> 00:30:05,500
So we will have to make that happen but for now we can ignore that

547
00:30:05,500 --> 00:30:06,100
temporarily.

548
00:30:06,800 --> 00:30:08,400
So here's our push set up call.

549
00:30:09,300 --> 00:30:14,000
So when we're doing and push that up in the case, where we are trying

550
00:30:14,000 --> 00:30:18,900
to set, sort of a default case, we can also pass an identity Matrix

551
00:30:18,900 --> 00:30:19,200
here.

552
00:30:24,000 --> 00:30:26,900
Which does no transform for the camera, which is presumably what we

553
00:30:26,900 --> 00:30:29,000
would want at initial setup.

554
00:30:30,200 --> 00:30:32,600
And it looks like I missed an argument there.

555
00:30:33,300 --> 00:30:37,800
All right, really, starting to not like the fact that my head is in

556
00:30:37,800 --> 00:30:38,200
their way.

557
00:30:40,600 --> 00:30:45,700
Let's see, so we've got group 00.

558
00:30:45,800 --> 00:30:47,400
That's X Y, width and height.

559
00:30:48,400 --> 00:30:50,600
We've got the render Target and we don't need the focal length

560
00:30:50,600 --> 00:30:50,900
anymore.

561
00:30:50,900 --> 00:30:55,300
Obviously, because that's rolled into the camera projection, which

562
00:30:55,300 --> 00:30:57,400
we're saying is nothing right now at.

563
00:30:57,400 --> 00:30:58,800
All right.

564
00:31:00,100 --> 00:31:00,400
Yeah.

565
00:31:02,900 --> 00:31:05,400
And no one should really ever be using this anyway.

566
00:31:06,200 --> 00:31:08,200
So, in theory, I don't know.

567
00:31:08,200 --> 00:31:11,100
Maybe the right thing to do is actually to push something that doesn't

568
00:31:11,100 --> 00:31:12,000
render anything.

569
00:31:12,000 --> 00:31:12,600
I don't know.

570
00:31:14,700 --> 00:31:18,000
Because everyone's supposed to set up a camera, even the orthographic

571
00:31:18,000 --> 00:31:19,600
stuff before it's used.

572
00:31:21,400 --> 00:31:26,100
All right, so in update and render entities, here it is trying to get

573
00:31:26,100 --> 00:31:28,300
the camera P out of the camera transform.

574
00:31:29,100 --> 00:31:32,800
I'm not sure what that's being used for, looks like that's just so

575
00:31:32,800 --> 00:31:34,000
that's a hack already.

576
00:31:34,900 --> 00:31:38,100
Actually can see that being a hack right there.

577
00:31:39,000 --> 00:31:44,800
And that's just again for that fog that Alpha and fog sort of split up

578
00:31:45,000 --> 00:31:45,800
if that makes sense.

579
00:31:46,800 --> 00:31:50,600
And again, I don't think we really want any of that anymore.

580
00:31:50,600 --> 00:31:51,000
In fact,

581
00:31:51,200 --> 00:31:55,100
All of this can go because now that we're passing actual 3D stuff down

582
00:31:55,100 --> 00:31:59,800
to the renderer, the renderer can just split things in half at as at a

583
00:31:59,800 --> 00:32:03,200
particular Z and make that Alpha in.

584
00:32:04,300 --> 00:32:10,700
So yeah, this is this is all pretty much not necessary anymore and we

585
00:32:10,700 --> 00:32:15,100
want to get rid of it all basically it's unfortunate that this is such

586
00:32:15,100 --> 00:32:18,100
a big change because of course, it means our debugging time is going

587
00:32:18,100 --> 00:32:20,300
to go up but that's okay.

588
00:32:20,600 --> 00:32:21,000
At least.

589
00:32:21,100 --> 00:32:22,000
It makes things cleaner.

590
00:32:22,600 --> 00:32:25,500
So if you take a look at all this stuff and typical fluoride all that

591
00:32:25,500 --> 00:32:29,500
stuff, we don't really need any of that anymore, that that can all go.

592
00:32:30,500 --> 00:32:34,300
So what we can do is we can just delete all of this stuff and we can,

593
00:32:34,500 --> 00:32:36,500
I mean, we can literally just get rid of all this stuff.

594
00:32:36,500 --> 00:32:40,300
It none of this is even remotely necessary anymore because since we

595
00:32:40,300 --> 00:32:44,900
have Z in the back end, all we have to do now is just look at the Z in

596
00:32:44,900 --> 00:32:48,600
the back end and color what we want and clip what we want, based on

597
00:32:48,600 --> 00:32:49,200
that Z.

598
00:32:49,700 --> 00:32:51,000
And so that's not going to be particularly

599
00:32:51,100 --> 00:32:52,300
particularly difficult.

600
00:32:54,400 --> 00:32:56,400
And again, it just cleans up a lot of stuff.

601
00:32:56,400 --> 00:32:59,800
This is why I like the 3D pipeline better, but, you know,

602
00:33:00,000 --> 00:33:00,300
Times.

603
00:33:00,300 --> 00:33:03,200
It's important to kind of go through an exercise like we did with the

604
00:33:03,200 --> 00:33:08,400
2D pipeline to see how hard is it to do this way versus, you know,

605
00:33:08,500 --> 00:33:11,700
doing it, the standard 3D way and now I know.

606
00:33:13,200 --> 00:33:18,400
So anyway, inside the render group if here, this is just getting

607
00:33:18,400 --> 00:33:21,900
different clip, Rex for these guys, which we don't really need at the

608
00:33:21,900 --> 00:33:22,500
moment.

609
00:33:22,500 --> 00:33:23,700
Again, the render Target.

610
00:33:23,700 --> 00:33:27,700
I think stuff can actually just be done can be handled inside the

611
00:33:27,700 --> 00:33:28,800
renderer entirely.

612
00:33:29,200 --> 00:33:29,800
So all of that

613
00:33:30,000 --> 00:33:34,200
Stuff is probably fine and absolute Z layer.

614
00:33:34,200 --> 00:33:36,200
I think all that stuff is just not necessary.

615
00:33:37,900 --> 00:33:40,300
Let me go ahead and see where that actually gets used again.

616
00:33:40,600 --> 00:33:47,200
I don't think, let's see, camera relative ground Z.

617
00:33:48,400 --> 00:33:51,900
So getting the ground point is going to be something that we probably

618
00:33:51,900 --> 00:33:54,200
would need to know I guess.

619
00:33:58,800 --> 00:34:01,800
That really shouldn't be something that was done here.

620
00:34:04,200 --> 00:34:06,400
I think this should just go away as well.

621
00:34:06,600 --> 00:34:11,300
So I think the particle systems they were actually having to use this

622
00:34:11,300 --> 00:34:14,300
information, which again is just really ugly.

623
00:34:14,600 --> 00:34:16,699
So, that's great, that that goes away.

624
00:34:17,600 --> 00:34:20,300
And in fact, the chunk can also go away.

625
00:34:20,300 --> 00:34:23,800
I think, let's take a look at that.

626
00:34:24,600 --> 00:34:31,100
So when this gets a bitmap push on the transform, it needed the chunk.

627
00:34:31,100 --> 00:34:32,900
See in the floor, Z that's gone.

628
00:34:33,100 --> 00:34:34,400
Out, right?

629
00:34:34,400 --> 00:34:38,300
So those don't need to be there anymore and that's that's pretty

630
00:34:38,300 --> 00:34:39,900
pretty good, I think.

631
00:34:47,900 --> 00:34:54,199
All right, so let's see if we don't need those anymore, that's pretty

632
00:34:54,199 --> 00:34:55,300
fantastic.

633
00:34:55,900 --> 00:35:00,600
So, we can get rid of all those and just not need them anymore.

634
00:35:01,300 --> 00:35:06,200
And inside, those transforms fact, I'll just get rid of those here.

635
00:35:10,000 --> 00:35:17,000
We don't need the Sorting or the floor Z or the chunk Z anymore.

636
00:35:22,300 --> 00:35:24,000
So, let's get rid of that.

637
00:35:27,700 --> 00:35:30,200
And we'll get rid of this.

638
00:35:43,700 --> 00:35:44,600
And that.

639
00:35:48,300 --> 00:35:52,000
and I don't know that entities Z layer is something that even needs to

640
00:35:52,000 --> 00:35:55,200
be there anymore either, but

641
00:36:03,300 --> 00:36:04,900
I think that's just not necessary.

642
00:36:11,000 --> 00:36:12,300
Yeah, that's just not necessary.

643
00:36:15,900 --> 00:36:19,800
It's not using simulation, that was only a rendering step so this is

644
00:36:19,800 --> 00:36:20,500
all fine.

645
00:36:28,300 --> 00:36:30,300
And while we're in here, right?

646
00:36:30,300 --> 00:36:34,700
We don't need sort Barry erring or any of that.

647
00:36:38,700 --> 00:36:40,400
We don't need the layer index.

648
00:36:43,900 --> 00:36:45,800
Yeah, we don't need any of this because this will all be just

649
00:36:45,800 --> 00:36:46,500
transformed.

650
00:36:46,500 --> 00:36:47,800
This will all be stuff.

651
00:36:47,800 --> 00:36:48,600
That's color.

652
00:36:51,100 --> 00:36:52,800
Fits all colored based on

653
00:36:56,800 --> 00:36:58,500
where you are in actual Z.

654
00:37:12,100 --> 00:37:14,200
So then we can safely Nerf that for now.

655
00:37:16,200 --> 00:37:19,500
In fact, even the color stuff we can therefore now because again

656
00:37:19,500 --> 00:37:23,200
that's just not a place, we really want to put that anymore.

657
00:37:23,200 --> 00:37:25,100
Now that we have so many other options

658
00:37:29,100 --> 00:37:32,200
and none of this stuff is necessary.

659
00:37:36,500 --> 00:37:37,000
All right.

660
00:37:38,600 --> 00:37:39,900
So, that's all good.

661
00:37:39,900 --> 00:37:41,100
Let's see what else we got.

662
00:37:41,100 --> 00:37:44,200
Here of stuff that I need to clip out.

663
00:37:45,100 --> 00:37:52,000
So this is transform floor, Z doesn't need to happen anymore.

664
00:37:54,200 --> 00:37:56,700
And with the graphic.

665
00:37:58,400 --> 00:37:59,900
Junk Z.

666
00:38:05,000 --> 00:38:06,500
We're going to have to do some stuff here.

667
00:38:18,200 --> 00:38:21,300
We're going to have to figure out some ways that we want to have the

668
00:38:21,300 --> 00:38:25,500
orthographic stuff work for the debug system, but we'll get to that

669
00:38:26,000 --> 00:38:28,400
when we sort of re flesh that out.

670
00:38:30,900 --> 00:38:31,500
There we go.

671
00:38:36,200 --> 00:38:39,300
Okay, so this is still the same.

672
00:38:39,500 --> 00:38:44,600
It just doesn't need to take the render Target anymore.

673
00:38:47,200 --> 00:38:51,800
And similarly, I don't know if that render Target is even necessary

674
00:38:52,600 --> 00:38:57,200
anymore, because I think the only reason it was there with just for

675
00:38:57,200 --> 00:38:58,800
that one reason.

676
00:38:59,500 --> 00:38:59,800
So that

677
00:39:00,000 --> 00:39:00,400
Away.

678
00:39:03,200 --> 00:39:08,000
And now we've got just us calling the orthographic or the perspective

679
00:39:08,000 --> 00:39:10,500
stuff and now we have to fix that.

680
00:39:11,300 --> 00:39:15,900
So when we call perspective here, what we need to do is create a

681
00:39:15,900 --> 00:39:20,800
camera, transform that and that camera transformed, then has to be

682
00:39:20,800 --> 00:39:23,400
passed as a 4x4 up to the render group itself.

683
00:39:23,900 --> 00:39:26,600
So here's that set camera transform call, which is what I'm going to

684
00:39:26,600 --> 00:39:27,400
be calling.

685
00:39:27,400 --> 00:39:31,700
Now, also similarly, we would want to set the clip rect although the

686
00:39:31,700 --> 00:39:32,600
clip rect will be set by

687
00:39:32,700 --> 00:39:35,300
Fought to the whole screen, so we probably don't really need to modify

688
00:39:35,300 --> 00:39:35,700
it.

689
00:39:36,800 --> 00:39:40,400
So when we call set camera, transform here, and we have the camera

690
00:39:40,400 --> 00:39:44,300
focal length that's going to stay the same.

691
00:39:44,700 --> 00:39:51,500
It will not be an orthographic projection and we will want to create

692
00:39:51,500 --> 00:39:52,800
the camera 4 by 4

693
00:39:56,400 --> 00:39:57,000
Like so.

694
00:40:08,500 --> 00:40:13,500
So in this case, the camera transfer from here, we don't have any of

695
00:40:13,500 --> 00:40:15,900
those axes yet that we were looking for.

696
00:40:16,800 --> 00:40:21,400
We don't know what the x axis is or the y axis, or the Z axis, for any

697
00:40:21,400 --> 00:40:22,700
kind of rotated camera.

698
00:40:23,200 --> 00:40:26,800
So first, we're just going to pass in basically an identity, but we

699
00:40:26,800 --> 00:40:27,800
are going to have that

700
00:40:28,800 --> 00:40:29,900
offset to maintain.

701
00:40:30,100 --> 00:40:34,200
So the position is correct and we are going to pass that down for to

702
00:40:34,200 --> 00:40:37,400
the camera transform, then inside.

703
00:40:43,200 --> 00:40:47,400
Whoops, when I did set camera transform, it looks like I that should

704
00:40:47,400 --> 00:40:48,100
be a pointer.

705
00:40:48,700 --> 00:40:52,300
I don't want to copy all those on the stack necessarily although you

706
00:40:52,300 --> 00:40:55,100
know, maybe that's okay, depends haven't measured it.

707
00:41:02,200 --> 00:41:02,600
Yeah.

708
00:41:09,600 --> 00:41:14,200
Okay, for our layered scene, we don't need to move the camera or

709
00:41:14,200 --> 00:41:14,800
anything.

710
00:41:14,800 --> 00:41:18,300
So in this case, it would just be the identity Matrix again.

711
00:41:19,800 --> 00:41:21,300
And so I can just say

712
00:41:22,800 --> 00:41:25,400
Past that and called.

713
00:41:26,700 --> 00:41:27,600
Camera transform.

714
00:41:31,400 --> 00:41:34,700
And again, that's going to be prospective, not orthographic.

715
00:41:35,800 --> 00:41:40,900
So then we just have one last person here, who needs to set the camera

716
00:41:40,900 --> 00:41:41,700
transform.

717
00:41:42,300 --> 00:41:48,500
And this one does need to be orthographic and so we just need a way of

718
00:41:48,500 --> 00:41:49,200
dealing with that for.

719
00:41:49,200 --> 00:41:53,300
Now again, I'm going to not do anything, particularly clever here.

720
00:41:53,700 --> 00:41:57,400
Because we haven't really gotten around to dealing with any of that

721
00:41:57,400 --> 00:41:57,600
yet.

722
00:41:57,600 --> 00:41:59,900
So now the only thing we don't,

723
00:42:00,000 --> 00:42:02,900
Have is a thing that doesn't actual orthographic projection.

724
00:42:03,600 --> 00:42:06,400
And again, that's not something that I want to focus on at the moment

725
00:42:06,400 --> 00:42:08,700
because it's only for the debug code, which we do want to enable.

726
00:42:08,700 --> 00:42:13,400
But at the moment, we are going to have to live without

727
00:42:15,600 --> 00:42:17,600
and when we take a look at the perspective, call,

728
00:42:20,200 --> 00:42:21,300
Which is.

729
00:42:26,700 --> 00:42:28,100
Should I just call it projection?

730
00:42:28,100 --> 00:42:29,800
Ah, that's dumb.

731
00:42:31,400 --> 00:42:33,000
It's a perspective projection.

732
00:42:38,200 --> 00:42:38,800
So yeah.

733
00:42:43,000 --> 00:42:45,900
So for our orthographic projection, which is different.

734
00:42:46,700 --> 00:42:51,200
Really, what you can see here is we don't really need to do anything

735
00:42:51,200 --> 00:42:53,800
with the focal length, right?

736
00:42:54,000 --> 00:42:56,700
We don't care what the focal length is at all.

737
00:42:57,800 --> 00:43:01,900
So really, all we have is the aspect with over height.

738
00:43:02,100 --> 00:43:03,800
We're not trying to put anything remember.

739
00:43:03,800 --> 00:43:06,400
This is the thing that moved something into the W coordinate so that

740
00:43:06,400 --> 00:43:08,800
when the Divide happened it would normalize itself out

741
00:43:11,400 --> 00:43:15,800
In this case, we don't really want to do anything here at all and we

742
00:43:15,800 --> 00:43:18,600
don't really necessarily know what we want in the W coordinate.

743
00:43:18,600 --> 00:43:22,800
So for now I'm just going to put one there and so we'll just sort of

744
00:43:22,800 --> 00:43:28,400
leave this B and we may want to do a little bit more with that later,

745
00:43:28,500 --> 00:43:28,900
right?

746
00:43:29,000 --> 00:43:34,000
Because we may we may want our orthographic projection to do other

747
00:43:34,000 --> 00:43:36,400
stuff there to terms of sizing the world.

748
00:43:36,400 --> 00:43:40,000
However it's going to size it but beyond just aspect correction.

749
00:43:41,200 --> 00:43:42,300
I'm just going to say,

750
00:43:45,200 --> 00:43:46,700
look at orthographic.

751
00:43:49,500 --> 00:43:54,000
Re-enable, I'll look fix on projectors, already on there.

752
00:43:55,900 --> 00:43:56,400
All right.

753
00:44:10,000 --> 00:44:10,600
All right.

754
00:44:17,600 --> 00:44:18,300
so,

755
00:44:19,800 --> 00:44:22,800
Our orthographic projection will be good enough for the time being

756
00:44:22,800 --> 00:44:23,900
just as a stand-in.

757
00:44:23,900 --> 00:44:27,500
But again we are going to want to maybe take a look at how we're doing

758
00:44:27,500 --> 00:44:31,500
that and what we actually want that Matrix to do Beyond just not the

759
00:44:31,500 --> 00:44:32,400
perspective divide.

760
00:44:32,400 --> 00:44:35,500
Like all I did was essentially like Nerf the perspective divide to

761
00:44:35,500 --> 00:44:37,300
make sure that it didn't happen, but that's it.

762
00:44:38,600 --> 00:44:39,000
All right.

763
00:44:39,000 --> 00:44:41,100
So we've made massive changes everywhere.

764
00:44:41,100 --> 00:44:44,100
So probably none of this is going to work, that's okay.

765
00:44:44,800 --> 00:44:48,600
We're just sort of getting things into position and we'll step through

766
00:44:48,600 --> 00:44:49,500
this now and

767
00:44:49,600 --> 00:44:53,800
art to try and clean out what needs to happen and what, you know what

768
00:44:53,800 --> 00:44:57,600
needs to get fixed in order for us to see stuff on the screen again.

769
00:45:00,900 --> 00:45:02,200
But we're definitely getting closer.

770
00:45:04,600 --> 00:45:06,100
To having the pipeline be reasonable.

771
00:45:06,800 --> 00:45:08,800
So if I go back to

772
00:45:11,600 --> 00:45:12,400
let's see here.

773
00:45:14,700 --> 00:45:16,500
Handmade World mode.

774
00:45:17,600 --> 00:45:20,600
I just want to set a break poem.

775
00:45:30,200 --> 00:45:30,700
Here we go.

776
00:45:34,000 --> 00:45:36,000
So here I call camera transform.

777
00:45:36,000 --> 00:45:39,700
I just want to take a look that this stuff is actually somewhat

778
00:45:39,700 --> 00:45:40,300
reasonable.

779
00:45:40,800 --> 00:45:41,600
That makes sense.

780
00:45:42,500 --> 00:45:45,800
And don't forget, we are actually calling get camera rectangle at

781
00:45:45,800 --> 00:45:51,300
Target here and that may be broken because we didn't fix unprojected

782
00:45:51,300 --> 00:45:52,100
stuff yet.

783
00:45:52,800 --> 00:45:55,600
So there is that and we'll check that out as well.

784
00:45:55,600 --> 00:45:59,000
But for I just want to, before we go any further, I want to take a

785
00:45:59,000 --> 00:46:02,600
brief look at this code to make sure that it looks at all.

786
00:46:02,800 --> 00:46:05,800
Reasonable to me before we go any further.

787
00:46:06,100 --> 00:46:08,700
So, here we are inside our push set up call.

788
00:46:10,300 --> 00:46:14,000
I want to make sure that all the stuff in the group got set properly.

789
00:46:16,100 --> 00:46:18,900
It does look that way, here's our screen.

790
00:46:18,900 --> 00:46:21,600
That is the size of the screen at the moment so that's good.

791
00:46:22,000 --> 00:46:23,700
Here's that projection Matrix.

792
00:46:23,700 --> 00:46:25,200
Let's take a look at what that looks like.

793
00:46:25,300 --> 00:46:30,000
I'm going to slide this over a little so we can see more explicitly.

794
00:46:31,300 --> 00:46:35,400
Here's that Matrix 1s down the diagonal except zero here.

795
00:46:35,400 --> 00:46:39,600
Is the aspect ratio correction factor on the Y, which is what we want.

796
00:46:40,200 --> 00:46:43,000
I guess the inverse of what you'd expect, because we're going to the

797
00:46:43,000 --> 00:46:45,300
unit cube not away from the unit cube.

798
00:46:46,400 --> 00:46:49,800
And then we've got our divide

799
00:46:51,000 --> 00:46:55,600
Our perspective, divide quantity here multiplying in, but multiplying

800
00:46:55,600 --> 00:46:59,100
the Z and that's really all we need.

801
00:46:59,300 --> 00:47:03,000
So that all looks clean when we set it all up.

802
00:47:03,000 --> 00:47:03,600
Let's see.

803
00:47:03,600 --> 00:47:07,600
And make sure that it gets into the rectangle that we actually created

804
00:47:07,800 --> 00:47:09,600
should be set to all those things as well.

805
00:47:10,600 --> 00:47:15,000
Just want to make sure again looks good.

806
00:47:15,000 --> 00:47:16,200
Looks like what we want.

807
00:47:16,600 --> 00:47:19,700
So we're at least pushing that information on properly.

808
00:47:19,900 --> 00:47:20,600
We're getting that.

809
00:47:20,800 --> 00:47:25,900
To the current cliprect so that all looks reasonable to me and I think

810
00:47:25,900 --> 00:47:28,200
that's fine for the camera transform.

811
00:47:29,100 --> 00:47:32,200
Now, when we do get camera rectangle, at Target,

812
00:47:33,700 --> 00:47:38,300
This is probably broken because again we're not doing that projection

813
00:47:38,500 --> 00:47:43,500
correctly but the result is not awful, it's just not good.

814
00:47:44,500 --> 00:47:47,100
It's it's not going to be very large, right?

815
00:47:47,700 --> 00:47:51,100
And so I don't know how much that will affect us here.

816
00:47:51,500 --> 00:47:54,300
The world camera wrecked to the screen bounds are here.

817
00:47:54,300 --> 00:47:54,700
Yeah.

818
00:47:57,600 --> 00:47:59,500
So, I don't know to what extent that will.

819
00:48:00,800 --> 00:48:01,800
Create a problem for us.

820
00:48:01,800 --> 00:48:05,700
Testing this weather, we're going to need to actually fix that

821
00:48:05,700 --> 00:48:09,300
function first before we debug any further that may be the case.

822
00:48:10,300 --> 00:48:12,900
But I'm just going to go ahead and take a look the same region and see

823
00:48:13,500 --> 00:48:16,900
it does look like it, grab 400 entities, so something's getting

824
00:48:16,900 --> 00:48:17,300
grabbed.

825
00:48:17,300 --> 00:48:19,700
So in theory, we should be able to debug it.

826
00:48:24,600 --> 00:48:28,500
So since this came up in the middle and you know how much everyone who

827
00:48:28,500 --> 00:48:31,000
watched stream knows how much I love modern software and how great it

828
00:48:31,000 --> 00:48:31,300
is.

829
00:48:31,600 --> 00:48:34,700
Like I love the notion that somebody thought it was okay, to pop this

830
00:48:34,700 --> 00:48:38,700
up in the middle of like a user's daily work but that was good.

831
00:48:38,900 --> 00:48:42,300
But I want to show you the other really great part about this, which

832
00:48:42,300 --> 00:48:44,900
is, it's like, hey yeah, you know it sounds great I'd love to upgrade.

833
00:48:45,000 --> 00:48:45,700
Let's do that.

834
00:48:49,900 --> 00:48:51,100
Let's get that new driver.

835
00:48:51,800 --> 00:48:52,700
I'm excited.

836
00:48:53,100 --> 00:48:54,300
I can't wait for it.

837
00:48:56,200 --> 00:48:58,400
Hit me up a MD with the new driver.

838
00:49:00,600 --> 00:49:01,400
Pretty great, huh.

839
00:49:02,400 --> 00:49:06,300
Like they routinely interrupt my workflow to tell me if there's a new

840
00:49:06,300 --> 00:49:09,500
driver and when I try to install the new driver, if they tell me that

841
00:49:09,500 --> 00:49:14,400
it doesn't have anything to install its great.

842
00:49:14,800 --> 00:49:15,600
Fantastic.

843
00:49:16,300 --> 00:49:16,800
All right.

844
00:49:18,300 --> 00:49:22,100
So here we go, check for joining new players, that's not relevant to

845
00:49:22,100 --> 00:49:26,800
us obviously and simulate is not really what we want, but we have to

846
00:49:26,800 --> 00:49:30,200
get into it, because it's where we do our update and render, which is

847
00:49:30,200 --> 00:49:32,900
what I actually need to access.

848
00:49:32,900 --> 00:49:36,300
So, here we are in update and render entities, we're going through

849
00:49:36,300 --> 00:49:40,300
here and I just want to again, take a brief look at the render

850
00:49:40,800 --> 00:49:44,800
activity here, just to see if we ever actually call anyone because

851
00:49:44,800 --> 00:49:47,900
it's in, it's possible that that Sim region made it.

852
00:49:47,900 --> 00:49:48,000
So

853
00:49:48,200 --> 00:49:51,900
Nobody is actually active and that they're all kind of outside of the

854
00:49:51,900 --> 00:49:52,800
active range.

855
00:49:54,900 --> 00:49:57,800
Because that same region is wrong because the because the unprojected

856
00:49:57,800 --> 00:49:58,800
is not implemented.

857
00:49:59,100 --> 00:50:01,600
So let's see where we actually pushing our bitmaps here.

858
00:50:01,600 --> 00:50:04,400
That's going to be down here, right?

859
00:50:05,000 --> 00:50:06,700
Do we ever actually get there?

860
00:50:07,200 --> 00:50:07,700
We do.

861
00:50:07,800 --> 00:50:08,400
Okay good.

862
00:50:09,200 --> 00:50:14,200
So here we go with the push bitmap, call in the push bitmap call,

863
00:50:14,700 --> 00:50:16,900
we're just going to verify that we actually got one.

864
00:50:17,700 --> 00:50:22,300
Okay, so we got to wait till we actually get to a push bitmap.

865
00:50:22,700 --> 00:50:23,200
There we go.

866
00:50:25,200 --> 00:50:26,200
So I'll come in here.

867
00:50:26,500 --> 00:50:30,400
Take a look at when we get the bitmap dimensions, that's going to give

868
00:50:30,400 --> 00:50:32,500
us back our coordinates.

869
00:50:35,100 --> 00:50:39,700
And this is what I'm primarily concerned about here, that that Z, you

870
00:50:39,700 --> 00:50:41,100
can see that in there, right?

871
00:50:41,800 --> 00:50:51,100
And so, what I'm curious about now is I would like to know is that Z

872
00:50:51,100 --> 00:50:54,900
compatible with what we ended up setting in our render group, right?

873
00:50:55,800 --> 00:50:59,100
So our group last project, here's what I've got set.

874
00:51:00,400 --> 00:51:05,500
And what you can see there is, I'm not getting any displacement,

875
00:51:05,500 --> 00:51:06,000
right?

876
00:51:06,200 --> 00:51:11,700
You remember these coordinates here, those coordinates are the

877
00:51:11,700 --> 00:51:17,500
cameras, the inverse, the the undoing of the cameras location.

878
00:51:17,500 --> 00:51:22,100
So we're not rotating the camera yet, so we would expect them to be

879
00:51:22,100 --> 00:51:24,000
straight and negatives of the camera position.

880
00:51:24,000 --> 00:51:26,200
But instead, I'm just getting all zeros there

881
00:51:28,000 --> 00:51:30,100
And now, I think about it when I step through that that is what was

882
00:51:30,100 --> 00:51:30,700
happening.

883
00:51:30,800 --> 00:51:34,100
Does that mean that the camera offset was Zero?

884
00:51:34,500 --> 00:51:35,900
It does look like it was.

885
00:51:36,100 --> 00:51:37,800
So that's not a useful camera all set.

886
00:51:37,800 --> 00:51:38,700
So, let's see.

887
00:51:38,700 --> 00:51:42,800
Was that just because frame 0 it hasn't gotten set yet because it

888
00:51:42,800 --> 00:51:45,900
hasn't had a frame to actually pick up the change if that's the case,

889
00:51:45,900 --> 00:51:46,500
I'd like to see it.

890
00:51:46,500 --> 00:51:46,700
Yeah.

891
00:51:46,700 --> 00:51:47,500
So there we go.

892
00:51:47,700 --> 00:51:48,500
That's better.

893
00:51:49,900 --> 00:51:51,000
Z equals 8.

894
00:51:52,300 --> 00:51:53,500
That's what we want.

895
00:51:54,000 --> 00:51:57,700
So now, when we set the camera transform, now let's go through and

896
00:51:57,700 --> 00:51:58,300
take a look at that.

897
00:51:58,300 --> 00:51:59,300
Push bitmap call.

898
00:52:01,600 --> 00:52:05,700
Oops, gotta actually reset that break point.

899
00:52:06,500 --> 00:52:07,000
There we go.

900
00:52:08,200 --> 00:52:11,600
And so inside here now I should see and there's that's what I wanted,

901
00:52:11,600 --> 00:52:11,800
right?

902
00:52:11,800 --> 00:52:13,600
I wanted that negative 8 in there, right?

903
00:52:13,600 --> 00:52:17,800
Because that's if the camera is 88 up on the z-axis, then that means

904
00:52:17,800 --> 00:52:21,300
during transforms everything else should get pushed 8 away, right?

905
00:52:21,300 --> 00:52:26,000
If you get pushed 8 down the Z axis, the other direction towards

906
00:52:26,000 --> 00:52:27,900
further away from the camera, right?

907
00:52:29,400 --> 00:52:30,500
And that's exactly what we want.

908
00:52:30,500 --> 00:52:32,600
So that is what I wanted to see, that's good.

909
00:52:32,800 --> 00:52:35,800
I'm going to step into the get bitmap, Tim call here, just so I can

910
00:52:35,800 --> 00:52:37,700
see what's going on there.

911
00:52:40,100 --> 00:52:44,200
It's the entity basis P function that I would like to take a look at

912
00:52:44,600 --> 00:52:47,900
again, distance above Target and floor Z, this is all zeroed out now

913
00:52:49,300 --> 00:52:53,700
and that's only in in render debug mode that we have that and we can

914
00:52:53,700 --> 00:52:55,200
roll that into the projection Matrix to.

915
00:52:55,200 --> 00:52:58,400
So we'll be able to get rid of that the hide off.

916
00:52:58,600 --> 00:53:00,700
Or Rosie Ortho.

917
00:53:00,700 --> 00:53:02,700
Let's take a look at any of this stuff here.

918
00:53:03,100 --> 00:53:04,200
To look that result.

919
00:53:05,200 --> 00:53:08,400
So the result of Z equals 0 is a good result, that's a reasonable

920
00:53:08,400 --> 00:53:09,100
result.

921
00:53:11,300 --> 00:53:19,900
These X and y's are way off in pretty far to the left and down, but

922
00:53:19,900 --> 00:53:21,900
the, the Z is at least in the right place.

923
00:53:22,300 --> 00:53:26,500
So, that's good to see you as well, just in terms of things that can

924
00:53:26,500 --> 00:53:30,500
be wrong, and then we push the renderer element on there.

925
00:53:31,500 --> 00:53:34,300
We should expect everything to be clean there.

926
00:53:39,400 --> 00:53:44,000
on this render entry, I guess we can't see the header unfortunately,

927
00:53:44,500 --> 00:53:46,300
but I guess I could try to

928
00:53:53,300 --> 00:53:56,000
What's the name of that function?

929
00:53:56,800 --> 00:53:58,000
I'm sorry structure.

930
00:54:04,400 --> 00:54:06,000
Render group entry header.

931
00:54:06,100 --> 00:54:07,000
That's what I wanted.

932
00:54:08,100 --> 00:54:12,100
So I just want to double-check if I look at the render group entry

933
00:54:12,100 --> 00:54:12,500
header.

934
00:54:13,600 --> 00:54:15,800
So I know that this entry is here

935
00:54:17,200 --> 00:54:21,300
So, in theory, if I just take that location and call that a render

936
00:54:21,300 --> 00:54:24,900
group entry header, that won't be anything meaningful because I'm

937
00:54:24,900 --> 00:54:28,800
looking at this data, but I know that the red re-entry enter hit the

938
00:54:28,800 --> 00:54:29,500
render entry.

939
00:54:29,500 --> 00:54:31,200
Header is just sitting right above it.

940
00:54:31,200 --> 00:54:34,500
So I should be able to do a negative one on that and get the actual

941
00:54:34,500 --> 00:54:35,700
one, right?

942
00:54:35,800 --> 00:54:36,600
And here it is.

943
00:54:38,000 --> 00:54:39,800
Type 0 is a is a bitmap.

944
00:54:40,400 --> 00:54:42,000
Oops no don't change that.

945
00:54:42,600 --> 00:54:46,800
Type 0 is a bitmap so that is what I expect cliprect one is also what

946
00:54:46,800 --> 00:54:48,400
I would expect so that's good.

947
00:54:48,400 --> 00:54:49,500
That's what I wanted to see.

948
00:54:52,000 --> 00:54:54,200
And I just want to make sure that is actually the last clip back that

949
00:54:54,200 --> 00:54:55,000
was pushed on.

950
00:54:57,600 --> 00:54:58,800
Verify, that that's true.

951
00:55:01,200 --> 00:55:01,600
Yes.

952
00:55:02,900 --> 00:55:03,900
So, that's all good as well.

953
00:55:03,900 --> 00:55:05,300
So all of that is good.

954
00:55:08,400 --> 00:55:09,200
Let's see here.

955
00:55:14,400 --> 00:55:14,900
so,

956
00:55:17,500 --> 00:55:20,700
It looks like here where we're doing store color.

957
00:55:20,700 --> 00:55:24,500
I should also just double-check that we didn't tweet because we nerfed

958
00:55:24,500 --> 00:55:25,300
those colors.

959
00:55:27,500 --> 00:55:31,200
I should also check that are pre multiply color is not meaningless, so

960
00:55:31,200 --> 00:55:31,800
that's good.

961
00:55:31,800 --> 00:55:33,400
111 is what I wanted.

962
00:55:33,500 --> 00:55:35,600
So that's all good too because otherwise, you know, we could have

963
00:55:35,600 --> 00:55:36,900
something that was Alpha out.

964
00:55:36,900 --> 00:55:40,500
All of ours of our Graphics or something like that.

965
00:55:40,500 --> 00:55:42,900
So I want to make sure that that's stable as well.

966
00:55:43,900 --> 00:55:49,700
Alright, so we're pushing all of that stuff on there and all of those

967
00:55:49,700 --> 00:55:53,400
bitmaps are coming down, but for some reason, I'm still not seeing

968
00:55:53,400 --> 00:55:54,200
them on the screen.

969
00:55:54,200 --> 00:55:57,000
So I'm going to jump over to the opengl side here.

970
00:55:57,500 --> 00:55:59,600
And see if I can get a better picture.

971
00:55:59,900 --> 00:56:03,300
Perhaps, what is incorrect there?

972
00:56:05,400 --> 00:56:06,600
It's going to come down here.

973
00:56:06,900 --> 00:56:07,900
We're looking at the first clip.

974
00:56:07,900 --> 00:56:08,700
Rect index.

975
00:56:10,600 --> 00:56:15,200
just clip and clip entry into x 0, who

976
00:56:16,600 --> 00:56:18,200
got pushed.

977
00:56:19,500 --> 00:56:21,500
With the 0 clip.

978
00:56:21,500 --> 00:56:22,000
Rect

979
00:56:24,100 --> 00:56:24,800
I wonder.

980
00:56:26,400 --> 00:56:29,400
Oh, it's just the cliprect itself, okay.

981
00:56:29,400 --> 00:56:30,500
That's a waste of time.

982
00:56:30,800 --> 00:56:34,000
We should probably short-circuit.

983
00:56:35,000 --> 00:56:39,900
The, you know, if the entry itself is a clip, rect then you don't have

984
00:56:39,900 --> 00:56:40,600
to care.

985
00:56:43,900 --> 00:56:45,600
That's yeah, that's a good point.

986
00:56:48,200 --> 00:56:49,300
I go ahead and put that in there.

987
00:56:52,600 --> 00:56:53,800
Never thought about that before.

988
00:56:54,800 --> 00:56:59,000
But now that we do have the clip, rect coming through here when we do

989
00:56:59,600 --> 00:56:59,800
this.

990
00:57:00,000 --> 00:57:00,400
Check.

991
00:57:00,400 --> 00:57:02,600
We probably want to check that the header type.

992
00:57:19,500 --> 00:57:21,400
Window group entry type.

993
00:57:23,700 --> 00:57:24,200
There we go.

994
00:57:32,500 --> 00:57:35,800
So this is just saying hey if this is a clip rect then we don't need

995
00:57:35,800 --> 00:57:36,800
to set up the clip.

996
00:57:36,800 --> 00:57:40,900
Rect for a clip rect because it doesn't draw anything.

997
00:57:41,200 --> 00:57:44,400
So we want to make sure that the header type is not a clip rect and

998
00:57:44,400 --> 00:57:46,100
then it's all fine.

999
00:57:47,300 --> 00:57:49,200
All right, so let's try that one more time.

1000
00:58:03,100 --> 00:58:04,500
I'm not sure why that

1001
00:58:08,900 --> 00:58:11,900
if the header type is not one of those.

1002
00:58:18,000 --> 00:58:21,300
That should not have really had any effect.

1003
00:58:22,800 --> 00:58:23,800
At all, really.

1004
00:58:25,400 --> 00:58:26,000
Right.

1005
00:58:41,500 --> 00:58:44,100
Oh, I put that in the wrong place.

1006
00:58:48,100 --> 00:58:49,300
That's where actually one of that.

1007
00:58:52,300 --> 00:58:52,800
There we go.

1008
00:58:54,200 --> 00:58:56,700
Sorry about that, mental mistake.

1009
00:58:56,700 --> 00:58:59,100
I was only trying to get rid of this Clause.

1010
00:58:59,200 --> 00:58:59,900
Not this one.

1011
00:59:01,600 --> 00:59:02,500
All right, much better.

1012
00:59:03,800 --> 00:59:06,800
So now I just want to go ahead and stop in here and I should see the

1013
00:59:06,800 --> 00:59:09,000
first one should be cliprect index 1.

1014
00:59:09,000 --> 00:59:09,400
Yeah.

1015
00:59:09,600 --> 00:59:12,000
Because that's the, you know, when should be pushing anything on clip

1016
00:59:12,000 --> 00:59:13,400
break zero, that would be a mistake.

1017
00:59:14,600 --> 00:59:15,900
So here we go.

1018
00:59:16,200 --> 00:59:17,100
We get out the clip.

1019
00:59:17,100 --> 00:59:20,800
Rect and again this clip rect should look like the one we inspected

1020
00:59:20,800 --> 00:59:22,400
before it should be that one.

1021
00:59:23,700 --> 00:59:27,200
So here's a projection Matrix which is what we expect and here's the

1022
00:59:28,200 --> 00:59:29,000
screen region.

1023
00:59:30,400 --> 00:59:33,900
So we need to transpose this first before we load it, but otherwise,

1024
00:59:33,900 --> 00:59:34,500
that's fine.

1025
00:59:34,500 --> 00:59:37,600
So just going to flip this around and it's going to load it up.

1026
00:59:39,200 --> 00:59:42,600
I guess I should verify that it actually does look that way.

1027
00:59:44,600 --> 00:59:49,200
And yep, that looks like a nice flip to me.

1028
00:59:55,200 --> 00:59:56,200
I will say.

1029
00:59:56,300 --> 00:59:58,500
Wait, why are we getting a negative?

1030
01:00:00,000 --> 01:00:00,700
X.

1031
01:00:02,300 --> 01:00:03,400
Here though.

1032
01:00:09,400 --> 01:00:15,100
That seems odd to me because that should have been zeroed out.

1033
01:00:15,100 --> 01:00:17,200
So that's a little weird.

1034
01:00:24,600 --> 01:00:26,700
I would be interested to know how that happened.

1035
01:00:26,800 --> 01:00:27,800
How did that happen?

1036
01:00:38,600 --> 01:00:41,800
I think we should go inspect that a little bit further, just to make

1037
01:00:41,800 --> 01:00:43,300
sure we know what's going on.

1038
01:00:43,300 --> 01:00:45,600
Is that what we would expect to have happen there?

1039
01:00:47,900 --> 01:00:49,400
Let's see how that occurred.

1040
01:00:49,800 --> 01:00:51,400
I'd like to take a look a little closer.

1041
01:00:51,400 --> 01:00:52,100
Look at that.

1042
01:00:52,700 --> 01:00:54,000
I didn't pay attention that before.

1043
01:00:54,600 --> 01:00:57,200
So let's just make sure that that math were checks out.

1044
01:00:58,500 --> 01:01:02,200
Before, before I continue down the path, I was about to continue down.

1045
01:01:04,500 --> 01:01:06,200
I would like to see what's going on there.

1046
01:01:07,400 --> 01:01:10,600
So let's see.

1047
01:01:14,700 --> 01:01:21,100
Here's our set camera, transform call, and we'll have something to go

1048
01:01:21,100 --> 01:01:22,100
through once.

1049
01:01:22,500 --> 01:01:23,700
So we're at the right camera.

1050
01:01:24,800 --> 01:01:25,900
So here's our set camera.

1051
01:01:25,900 --> 01:01:27,500
Transform call our camera.

1052
01:01:27,500 --> 01:01:28,700
Transform itself.

1053
01:01:29,700 --> 01:01:32,700
Should look like what we expected to look like, 1s down the diagonal

1054
01:01:32,700 --> 01:01:35,100
and just a position that is what it looks like.

1055
01:01:36,400 --> 01:01:38,600
And so our perspective projection

1056
01:01:44,000 --> 01:01:46,700
Make sure that looks like what we think that is what we think.

1057
01:01:47,300 --> 01:01:52,100
And so let's go into this, the multiply and make sure that the

1058
01:01:52,100 --> 01:01:54,000
multiply looks right to us.

1059
01:01:57,000 --> 01:02:00,000
so, here is US creating the

1060
01:02:01,700 --> 01:02:05,200
The individual columns, we can actually watch these happen, right?

1061
01:02:10,000 --> 01:02:12,600
This is it producing the 00 element here.

1062
01:02:12,600 --> 01:02:17,200
It is producing the 01 element, continue on.

1063
01:02:17,200 --> 01:02:21,500
And so here's a producing the final element of the row, right?

1064
01:02:22,700 --> 01:02:24,200
Go, go, go, go, go.

1065
01:02:25,800 --> 01:02:27,200
Doing it slow multiplication.

1066
01:02:34,200 --> 01:02:35,600
We should probably put these on here.

1067
01:02:40,500 --> 01:02:41,200
All right.

1068
01:02:47,100 --> 01:02:51,200
So, here we are on our 33, right?

1069
01:02:51,200 --> 01:02:55,200
And so, what we would expect to see here, let's just figure out what

1070
01:02:55,200 --> 01:02:59,800
we would expect to see here, first, and then

1071
01:03:00,000 --> 01:03:02,200
If I that it's actually what we think it should be.

1072
01:03:03,100 --> 01:03:05,300
So we're multiplying a times B and remember.

1073
01:03:05,300 --> 01:03:08,400
That means that a is the one that's appearing on the left, and B is

1074
01:03:08,400 --> 01:03:10,200
the one that's appearing on the right above.

1075
01:03:10,800 --> 01:03:13,800
And we're trying to multiply this.

1076
01:03:13,800 --> 01:03:18,600
So it'd be this row times this column, right?

1077
01:03:19,600 --> 01:03:24,400
So I guess I do actually believe that that that does look true, right?

1078
01:03:24,500 --> 01:03:29,800
The -8 should multiply the 3 Point 33, 33, 33 2.5 here, right?

1079
01:03:30,000 --> 01:03:33,000
And that's where we're getting that term from its from here.

1080
01:03:43,100 --> 01:03:44,800
So that is actually correct.

1081
01:03:45,800 --> 01:03:46,500
I guess.

1082
01:03:52,200 --> 01:03:57,000
Yeah, and I think about that's fine because the W coordinate their

1083
01:03:57,000 --> 01:04:00,200
what's going to happen in the W coordinate of the Matrix down at the

1084
01:04:00,200 --> 01:04:05,800
bottom, there is, you know, this this the 33 element that's

1085
01:04:05,800 --> 01:04:10,500
essentially going to be an offset to the W which is what this is.

1086
01:04:10,500 --> 01:04:10,700
Right.

1087
01:04:10,700 --> 01:04:13,300
We're saying that the camera gets pushed back that much.

1088
01:04:13,500 --> 01:04:16,700
So we do need the W to be offset by that much.

1089
01:04:16,700 --> 01:04:18,500
So that the Divide is that much more

1090
01:04:20,700 --> 01:04:22,000
So, I am okay with that.

1091
01:04:22,500 --> 01:04:23,600
That seems reasonable.

1092
01:04:26,100 --> 01:04:26,800
And off we go.

1093
01:04:27,300 --> 01:04:29,000
So let me go back to what I was doing.

1094
01:04:29,000 --> 01:04:31,500
Just want to make sure that that was right.

1095
01:04:35,200 --> 01:04:36,200
let's go ahead and

1096
01:04:39,700 --> 01:04:41,800
take a look at one of our actual bitmap calls.

1097
01:04:43,100 --> 01:04:43,600
There we go.

1098
01:04:45,000 --> 01:04:47,400
So I just want to take a look at what these values actually are down

1099
01:04:47,400 --> 01:04:49,000
here to make sure that they look the same to me.

1100
01:04:50,900 --> 01:04:51,900
That's all I'm doing right now.

1101
01:04:56,600 --> 01:04:57,900
And yeah.

1102
01:04:59,700 --> 01:05:05,000
So, here's our, here's the values, we're actually sending down x-axis

1103
01:05:05,000 --> 01:05:09,000
y-axis mean p, the x axis and the y axis.

1104
01:05:09,000 --> 01:05:09,600
In this case.

1105
01:05:09,600 --> 01:05:10,900
Look totally reasonable.

1106
01:05:12,000 --> 01:05:16,300
They're just scaled, but they, that's all they, you know, there's

1107
01:05:16,300 --> 01:05:19,400
nothing weird about them, the minimum P.

1108
01:05:19,400 --> 01:05:21,000
It's kind of all off.

1109
01:05:23,400 --> 01:05:24,700
To the left and down.

1110
01:05:26,300 --> 01:05:27,600
And let me just

1111
01:05:29,700 --> 01:05:30,800
see if in general.

1112
01:05:30,800 --> 01:05:32,300
Is that where everything is?

1113
01:05:40,700 --> 01:05:44,500
So, you can kind of see that everything that we're drawing is far to

1114
01:05:44,500 --> 01:05:45,500
the left of us.

1115
01:05:49,800 --> 01:05:50,400
There we go.

1116
01:05:50,600 --> 01:05:53,100
Now we're getting some stuff that there was a few things that were

1117
01:05:53,100 --> 01:05:54,000
close to us there.

1118
01:05:58,200 --> 01:05:59,800
so now, we're drawing things that are to the right of

1119
01:06:00,000 --> 01:06:00,600
As well.

1120
01:06:02,600 --> 01:06:03,600
Still below us.

1121
01:06:03,600 --> 01:06:06,700
There's now some stuff that's well we still haven't quite seen

1122
01:06:06,700 --> 01:06:07,100
anything.

1123
01:06:07,100 --> 01:06:08,300
That's right on target.

1124
01:06:08,700 --> 01:06:09,400
I'm just curious.

1125
01:06:09,400 --> 01:06:14,900
I'm just checking to see if there's any sort of so that looked pretty

1126
01:06:14,900 --> 01:06:15,600
reasonable.

1127
01:06:21,900 --> 01:06:24,300
So these numbers look pretty reasonable, though.

1128
01:06:28,700 --> 01:06:31,200
so I'll be honest, I don't immediately see

1129
01:06:34,800 --> 01:06:35,900
Any problem there.

1130
01:06:36,500 --> 01:06:37,900
So I do Wonder.

1131
01:06:45,400 --> 01:06:49,500
I do Wonder a little bit if we have to look at the near and far clip

1132
01:06:49,500 --> 01:06:51,000
playing now as

1133
01:06:55,500 --> 01:06:56,400
as culprits.

1134
01:06:56,600 --> 01:07:00,400
So let's talk about that because we haven't done anything to process

1135
01:07:00,400 --> 01:07:04,600
the Z coordinate and that may be a problem.

1136
01:07:05,200 --> 01:07:06,300
So let's take a look.

1137
01:07:11,000 --> 01:07:14,600
So what you can see here in our perspective projection, which we've

1138
01:07:14,600 --> 01:07:19,200
been working on, is that we set up our divide to do the divide that we

1139
01:07:19,200 --> 01:07:22,200
wanted to do to produce the X and Y coordinates, that we thought we

1140
01:07:22,200 --> 01:07:22,700
were going to produce.

1141
01:07:22,700 --> 01:07:26,200
That would match what we were previously producing.

1142
01:07:27,500 --> 01:07:28,200
However,

1143
01:07:29,800 --> 01:07:33,700
At the moment, we don't do anything with the Z coordinate, we just

1144
01:07:33,700 --> 01:07:37,500
pass through, whatever the Z coordinate actually was what I'm

1145
01:07:37,500 --> 01:07:41,300
concerned about is that the clipping that happens in opengl to the

1146
01:07:41,300 --> 01:07:45,000
near and far clipping planes may be causing us a problem.

1147
01:07:45,400 --> 01:07:48,400
I believe that happens with the z-coordinate although I could be wrong

1148
01:07:48,400 --> 01:07:49,100
about that.

1149
01:07:50,200 --> 01:07:53,100
We could go double-check the pipeline stuff so I'm just curious to

1150
01:07:53,100 --> 01:07:55,800
know if the Z coordinate is a problem there.

1151
01:07:56,500 --> 01:07:57,600
I'm just going to check it.

1152
01:07:59,100 --> 01:07:59,700
Real quick.

1153
01:08:01,200 --> 01:08:05,700
Okay, all that would do is knock out the Z coordinate, right?

1154
01:08:05,700 --> 01:08:10,000
So that it wouldn't actually push anything into the Z coordinate, if

1155
01:08:10,000 --> 01:08:10,700
that makes sense.

1156
01:08:11,300 --> 01:08:13,500
So, I just want to double check what was actually happening there.

1157
01:08:13,900 --> 01:08:16,899
All right, so let's talk about the near and far clipping planes and

1158
01:08:16,899 --> 01:08:20,800
let's just go try to verify whether or not we're doing anything

1159
01:08:20,800 --> 01:08:25,399
particularly wrong with how opengl wants us to produce points that

1160
01:08:25,399 --> 01:08:27,100
conform to what it's going to clip to.

1161
01:08:27,700 --> 01:08:30,800
Because remember, we've got that notion I kind of went

1162
01:08:31,000 --> 01:08:34,899
A couple weeks ago about the clip space and the unit cube and all that

1163
01:08:34,899 --> 01:08:35,600
sort of stuff.

1164
01:08:36,300 --> 01:08:40,700
We have to make sure that we're playing exactly by the the gpus rules

1165
01:08:40,700 --> 01:08:41,100
here.

1166
01:08:41,700 --> 01:08:45,300
Which again is not necessarily what we had been doing when we created

1167
01:08:45,300 --> 01:08:48,000
the rules ourselves, when we made the pipeline, for the software side,

1168
01:08:48,200 --> 01:08:51,100
we didn't have to play by the gpus rules, we didn't have to even know

1169
01:08:51,200 --> 01:08:53,700
how the GPU conceptualizes things like clipping.

1170
01:08:54,000 --> 01:08:57,600
Now we do and we have to keep in mind as well, that in addition to

1171
01:08:57,600 --> 01:08:59,800
clipping off the Left, Right top.

1172
01:09:00,000 --> 01:09:01,100
Bottom of the screen.

1173
01:09:01,700 --> 01:09:05,200
Opengl will also clip things that are far away and things that are too

1174
01:09:05,200 --> 01:09:05,700
close.

1175
01:09:05,899 --> 01:09:09,200
So, it's a full clip in all three dimensions.

1176
01:09:09,399 --> 01:09:15,200
And so, if we're producing coordinates that are not Kosher in any way,

1177
01:09:16,000 --> 01:09:17,200
then we will have a problem.

1178
01:09:17,200 --> 01:09:20,600
So I want to again, I have to eliminate these things, one at a time in

1179
01:09:20,600 --> 01:09:25,100
order to find out what the problem is, with our transform process,

1180
01:09:25,200 --> 01:09:25,700
right?

1181
01:09:29,000 --> 01:09:29,500
Excuse me.

1182
01:09:31,100 --> 01:09:35,500
So let's just double-check how opengl wants those matrices set.

1183
01:09:47,000 --> 01:09:49,700
Hoping I could find one, that's got a reasonable drawing of it, that's

1184
01:09:49,700 --> 01:09:50,300
not it.

1185
01:09:51,899 --> 01:09:52,300
That's not either.

1186
01:09:52,300 --> 01:09:53,700
This, this is what I want.

1187
01:09:53,700 --> 01:09:58,800
But man, it's not formatted right at all.

1188
01:09:58,900 --> 01:09:59,500
I just want one.

1189
01:09:59,500 --> 01:10:00,800
That's formatted.

1190
01:10:01,000 --> 01:10:01,600
Well,

1191
01:10:03,100 --> 01:10:03,700
Good enough.

1192
01:10:06,800 --> 01:10:10,200
So here you can see right where we're getting this.

1193
01:10:13,100 --> 01:10:16,900
This is this is what the GL utility Library.

1194
01:10:16,900 --> 01:10:18,100
The one that comes with up in jail.

1195
01:10:18,400 --> 01:10:21,600
This is how it sets things up and you can see how they do it.

1196
01:10:21,600 --> 01:10:26,800
It's not that much different from ours but it does a couple things

1197
01:10:26,800 --> 01:10:27,600
slightly differently.

1198
01:10:27,600 --> 01:10:33,100
So in the top two ports here at they basically do what we do but they

1199
01:10:33,100 --> 01:10:35,300
do things slightly differently.

1200
01:10:35,500 --> 01:10:39,100
So rather than use focal length, they use field of view and why which

1201
01:10:39,100 --> 01:10:40,600
is basically an angle measure.

1202
01:10:40,600 --> 01:10:42,200
It's saying how you know why?

1203
01:10:42,400 --> 01:10:45,800
Do you want the field of view to be, but they have the aspect ratio

1204
01:10:45,800 --> 01:10:46,300
correction.

1205
01:10:46,400 --> 01:10:48,900
They also did the aspect ratio opposite, from what we do?

1206
01:10:49,400 --> 01:10:56,400
They do the aspect ratio of the width, the height in the X, right?

1207
01:10:56,800 --> 01:10:58,600
So, where is our?

1208
01:11:05,000 --> 01:11:06,400
Yeah, and we were doing that in the why?

1209
01:11:06,400 --> 01:11:08,400
I wonder if that means that's weird.

1210
01:11:08,400 --> 01:11:13,300
Do we I thought we worked out which way that should be going and this

1211
01:11:13,300 --> 01:11:17,800
looks a little bit backwards formats which is the ratio of x to y.

1212
01:11:20,400 --> 01:11:22,600
And you can see the aspect ratio here.

1213
01:11:22,900 --> 01:11:24,400
Oh, because it's one over.

1214
01:11:24,500 --> 01:11:26,100
They must be missing a 1 there.

1215
01:11:26,600 --> 01:11:26,900
Yeah.

1216
01:11:26,900 --> 01:11:27,800
You can see, they're missing the one.

1217
01:11:27,800 --> 01:11:29,200
I'm like, they've got it backwards.

1218
01:11:29,400 --> 01:11:30,300
They don't have it backwards.

1219
01:11:30,300 --> 01:11:34,200
They just there's a supposed to be a one there and there isn't.

1220
01:11:34,800 --> 01:11:35,400
Right?

1221
01:11:35,800 --> 01:11:38,500
So they do it exactly the same way we do, right?

1222
01:11:38,800 --> 01:11:43,200
Except we put it into a why correction and they put it into an ex

1223
01:11:43,200 --> 01:11:43,800
correction.

1224
01:11:44,100 --> 01:11:47,000
So that's why they had to invert.

1225
01:11:47,100 --> 01:11:49,900
There's and we didn't have to invert ours because they put it on the

1226
01:11:49,900 --> 01:11:50,000
other.

1227
01:11:50,200 --> 01:11:51,400
ER side, right?

1228
01:11:53,800 --> 01:11:57,200
Field of view and why we're not using we were using focal length.

1229
01:11:57,600 --> 01:11:58,800
So we don't actually

1230
01:12:00,200 --> 01:12:01,200
Do that the same way?

1231
01:12:01,400 --> 01:12:02,000
That makes sense.

1232
01:12:03,400 --> 01:12:09,100
But so we but, you know, field of view and why is a reasonable way to

1233
01:12:09,100 --> 01:12:09,400
do it?

1234
01:12:09,400 --> 01:12:10,800
I don't know that we want to do it that way.

1235
01:12:10,800 --> 01:12:16,300
So I'm going to stick to not messing with that part of it but we can

1236
01:12:16,300 --> 01:12:17,300
leave that for later.

1237
01:12:18,400 --> 01:12:19,000
So anyway,

1238
01:12:22,100 --> 01:12:23,600
I think.

1239
01:12:27,400 --> 01:12:31,100
Yeah, I think everything else is fairly similar one over the focal.

1240
01:12:31,100 --> 01:12:34,400
Length goes down into to get our W.

1241
01:12:34,400 --> 01:12:37,000
Divided to be what we wanted it to be, right?

1242
01:12:39,400 --> 01:12:41,800
And I'm pretty sure we check that math to line up with the math that

1243
01:12:41,800 --> 01:12:43,000
we were using previously.

1244
01:12:44,000 --> 01:12:45,800
And so that is similar to what they're doing.

1245
01:12:45,800 --> 01:12:48,300
Although they don't actually change that coordinate at all.

1246
01:12:48,500 --> 01:12:56,700
So they take Z, they take the Z directly, if that makes sense, they

1247
01:12:56,800 --> 01:12:57,000
they

1248
01:12:57,200 --> 01:13:00,600
Sickly say, hey, whatever the Z comes in.

1249
01:13:00,600 --> 01:13:02,200
We're not going to change it at all.

1250
01:13:02,600 --> 01:13:04,600
We don't modify it by the focal length.

1251
01:13:05,300 --> 01:13:06,600
We just have it.

1252
01:13:08,100 --> 01:13:13,500
Might you know, we just directly set that value, right?

1253
01:13:14,900 --> 01:13:15,800
I guess.

1254
01:13:17,600 --> 01:13:19,600
The way to think about that.

1255
01:13:19,600 --> 01:13:21,700
And I guess I don't know that I have

1256
01:13:25,000 --> 01:13:28,600
Any particular, so here's what I'm going to say.

1257
01:13:28,700 --> 01:13:30,900
I think this probably wasn't a one here.

1258
01:13:31,000 --> 01:13:35,200
I think this was probably an F if I'm just guessing because I think

1259
01:13:35,200 --> 01:13:39,900
what they basically did, was they put the multiplier in here for f

1260
01:13:41,000 --> 01:13:43,800
rather than putting it down here, right?

1261
01:13:43,800 --> 01:13:46,900
Because what we did is we stuffed the focal length, which is

1262
01:13:46,900 --> 01:13:48,300
equivalent to the field of view.

1263
01:13:48,300 --> 01:13:51,100
It's not the same value, it's not the same way of setting the value,

1264
01:13:51,100 --> 01:13:54,000
but it's it's a similar computation, right?

1265
01:13:56,200 --> 01:13:59,400
That value that controls the field of view, which the focal length,

1266
01:13:59,400 --> 01:14:02,100
does it just in a different way of specifying it?

1267
01:14:03,200 --> 01:14:08,800
We put that so that, that, that would go into the computation of the

1268
01:14:08,800 --> 01:14:13,200
denominator of the Divide, but they left it in the numerator of the

1269
01:14:13,200 --> 01:14:13,900
Divide.

1270
01:14:15,300 --> 01:14:20,400
Right, so we could do that as well.

1271
01:14:20,400 --> 01:14:25,300
If we wanted to write all we would have to do is multiply it into

1272
01:14:25,300 --> 01:14:27,600
here, right?

1273
01:14:27,600 --> 01:14:30,500
And that would would do it.

1274
01:14:31,000 --> 01:14:36,100
I don't know if there's some reason why we have to do that in order to

1275
01:14:36,100 --> 01:14:40,900
maintain clip space properly for how they want it lined up, right?

1276
01:14:40,900 --> 01:14:45,000
Because looking at their Matrix here, it may be that because

1277
01:14:45,400 --> 01:14:49,200
Yeah, if you take a look at housing near and Z far are operating here

1278
01:14:49,200 --> 01:14:52,200
for, we really need to find out one of these.

1279
01:14:52,200 --> 01:14:53,700
It's got all the values in it.

1280
01:14:53,700 --> 01:14:54,900
I feel like that's a good.

1281
01:14:56,500 --> 01:14:58,100
I just want a good drawing of it.

1282
01:14:59,500 --> 01:14:59,800
Is this?

1283
01:14:59,800 --> 01:14:59,800
This

1284
01:15:00,000 --> 01:15:00,500
On how to Godin.

1285
01:15:00,500 --> 01:15:01,600
Write to us out of a good one.

1286
01:15:01,600 --> 01:15:01,900
No.

1287
01:15:15,100 --> 01:15:18,700
Does, nobody just have just the actual because the thing is, in the

1288
01:15:18,700 --> 01:15:23,100
book, in the open job book, it's just got the drawing and you can

1289
01:15:23,100 --> 01:15:28,100
actually see what they wanted, the perspective stuff set to, but it

1290
01:15:28,100 --> 01:15:34,300
seems like everybody has does not actually reproduce that diagram in a

1291
01:15:34,300 --> 01:15:37,100
way that's easy to read, which is unfortunate.

1292
01:15:48,800 --> 01:15:50,300
What's this?

1293
01:15:50,500 --> 01:15:51,200
No.

1294
01:15:55,200 --> 01:15:56,200
Do you have our?

1295
01:15:57,500 --> 01:15:58,400
Do you have a drawn out?

1296
01:15:58,400 --> 01:16:00,400
That is an actual Matrix form.

1297
01:16:00,400 --> 01:16:01,100
There it is.

1298
01:16:01,800 --> 01:16:04,800
Okay, this is the same Matrix that we were trying to look at before.

1299
01:16:04,800 --> 01:16:07,300
But they've copied out the diagram properly with the actual ones

1300
01:16:07,300 --> 01:16:07,600
place.

1301
01:16:07,800 --> 01:16:08,900
So see there you go.

1302
01:16:09,500 --> 01:16:11,500
That was what I was expecting, right?

1303
01:16:11,500 --> 01:16:15,700
So they put the focal length which in their case is a field of view

1304
01:16:15,700 --> 01:16:17,500
computation, but it's the same idea.

1305
01:16:18,300 --> 01:16:22,200
They put that in the numerator because this will multiply into the X

1306
01:16:22,200 --> 01:16:23,800
and Y coordinates before divided.

1307
01:16:23,900 --> 01:16:27,000
We were putting it into the denominator by putting

1308
01:16:27,300 --> 01:16:28,700
Over it over here.

1309
01:16:29,300 --> 01:16:32,200
I don't know if that will create a problem for opengl.

1310
01:16:32,200 --> 01:16:35,500
I'm not sure it's worth worth noting.

1311
01:16:37,800 --> 01:16:41,800
But here's the part that's actually more relevant in terms of

1312
01:16:41,800 --> 01:16:43,900
Foreigner clip planes which we have to get right as well.

1313
01:16:43,900 --> 01:16:48,300
Now I knocked out the Z value entirely which means that I don't think

1314
01:16:48,300 --> 01:16:49,900
we're having a problem with clipping.

1315
01:16:50,100 --> 01:16:53,700
I don't suspect that that's actually the problem here but I just want

1316
01:16:53,700 --> 01:16:56,300
to go through because I knew we had to do this.

1317
01:16:56,300 --> 01:16:59,700
I just want to go through and get that correct as we go.

1318
01:17:00,200 --> 01:17:02,700
So there's two things that could be causing us possible problems here.

1319
01:17:03,300 --> 01:17:05,600
Although I don't think the clip playing part of its problem, although

1320
01:17:05,600 --> 01:17:06,900
this part could have been a problem.

1321
01:17:07,500 --> 01:17:12,100
and that is just simply the part the aspect of this, which is

1322
01:17:14,900 --> 01:17:16,800
Computing the near and far, clipping plane values.

1323
01:17:18,200 --> 01:17:18,800
It's not really doing that.

1324
01:17:18,800 --> 01:17:22,500
It's putting Z into the correct range from near and far clipping

1325
01:17:22,500 --> 01:17:23,000
planes.

1326
01:17:23,600 --> 01:17:27,800
But then also the part where, you know, maybe it's required that we

1327
01:17:27,800 --> 01:17:30,600
not put that in the denominator, maybe it's required that we put in

1328
01:17:30,600 --> 01:17:34,000
the numerator because remember opengl is going to do something.

1329
01:17:34,400 --> 01:17:38,200
When we go through this transform opengl is going to do clipping

1330
01:17:38,200 --> 01:17:39,900
before it does the Divide.

1331
01:17:40,100 --> 01:17:43,600
So, even though the way we were building, the Matrix will produce the

1332
01:17:43,600 --> 01:17:44,500
same result.

1333
01:17:44,800 --> 01:17:48,100
Whether we put it in the numerator or the denominator, it will only

1334
01:17:48,100 --> 01:17:50,700
produce the same result after the divided.

1335
01:17:50,900 --> 01:17:57,800
So if it needs those values to be in a particular range beforehand,

1336
01:17:57,800 --> 01:17:59,900
and we've done the

1337
01:18:00,000 --> 01:18:03,600
And in an order that still results in the same divide that may not be

1338
01:18:03,600 --> 01:18:04,400
sufficient.

1339
01:18:04,600 --> 01:18:08,900
So again, just want to bring up the fact that we have to play by their

1340
01:18:08,900 --> 01:18:12,600
rules entirely and put it into the spaces that they want.

1341
01:18:12,700 --> 01:18:16,500
We can't just make something that we know will produce the correct X Y

1342
01:18:16,500 --> 01:18:18,000
values at the end or something.

1343
01:18:18,600 --> 01:18:19,500
It's not that simple.

1344
01:18:21,100 --> 01:18:24,200
All right, so that's easy enough for us to do.

1345
01:18:24,200 --> 01:18:25,600
So maybe we should just do that.

1346
01:18:25,800 --> 01:18:27,700
We've got one over focal length here.

1347
01:18:27,900 --> 01:18:31,400
Really all we have to do is put the focal length up here and so you

1348
01:18:31,400 --> 01:18:33,400
can kind of see the way that's happening, right?

1349
01:18:33,400 --> 01:18:38,000
We've got our terms, all we would have to do is we would just multiply

1350
01:18:38,900 --> 01:18:42,500
by that and instead of one over focal length, we just pass in focal

1351
01:18:42,500 --> 01:18:42,800
length.

1352
01:18:44,200 --> 01:18:44,800
Right.

1353
01:18:47,400 --> 01:18:49,800
That's all that we would actually have to do to make that substantive

1354
01:18:49,800 --> 01:18:50,300
change.

1355
01:18:50,600 --> 01:18:55,200
I don't think that's a particularly interesting change necessarily.

1356
01:18:58,100 --> 01:18:58,900
But that's okay.

1357
01:18:59,500 --> 01:19:01,300
What is a bit weird to me?

1358
01:19:01,500 --> 01:19:05,300
Is that this is passed in as a negative 1, right?

1359
01:19:05,800 --> 01:19:08,800
So the fact that that's passed in as a negative, one suggests that the

1360
01:19:08,800 --> 01:19:12,500
Z values are going in the opposite direction, right?

1361
01:19:14,000 --> 01:19:17,400
And I'm interested to know if that's actually the case.

1362
01:19:18,800 --> 01:19:19,400
Let's see.

1363
01:19:34,700 --> 01:19:36,500
This is all doing exactly what we did.

1364
01:19:43,000 --> 01:19:45,100
I'm just wondering why it's a negative Z.

1365
01:19:45,100 --> 01:19:48,500
So, a negative Z flips the Z Direction around.

1366
01:19:53,400 --> 01:19:56,400
And I wonder if that's just because that's what they wanted to have

1367
01:19:56,400 --> 01:20:03,800
happen or whether there's some reason why we would need the Z to run -

1368
01:20:03,800 --> 01:20:08,300
like this open Jill's screen space for some reason have Z going the

1369
01:20:08,300 --> 01:20:09,300
wrong direction.

1370
01:20:15,600 --> 01:20:18,200
Well, you know what, know, now that I think about it.

1371
01:20:18,400 --> 01:20:21,800
I guess that is true, because when it's going to do the divide, it

1372
01:20:21,800 --> 01:20:25,600
doesn't do a negation after the fact of the Z.

1373
01:20:26,200 --> 01:20:31,300
So, even though it defines e-even though, opengl normally uses a

1374
01:20:33,000 --> 01:20:36,900
right-handed coordinate system, it's not going to negate the Z that we

1375
01:20:36,900 --> 01:20:37,600
pass in.

1376
01:20:38,000 --> 01:20:42,200
So we would have to negate the Z ourselves to make sure that when we

1377
01:20:42,200 --> 01:20:44,400
do the divide it does get negated.

1378
01:20:50,500 --> 01:20:51,600
Hmm.

1379
01:20:57,300 --> 01:20:58,200
My say.

1380
01:21:01,800 --> 01:21:02,800
Alright, let's take a look at this.

1381
01:21:05,800 --> 01:21:08,400
First of all, I'm going to go ahead and make it so that you don't have

1382
01:21:08,400 --> 01:21:09,900
to pass in one over the focal length.

1383
01:21:10,600 --> 01:21:14,800
So I'm going to go take a look at the perspective projection call.

1384
01:21:18,000 --> 01:21:22,000
And I'm going to go ahead and just past the focal length down.

1385
01:21:24,000 --> 01:21:28,600
So, that should be it.

1386
01:21:31,800 --> 01:21:35,800
Okay, I guess I don't know why I'm running that because we haven't we

1387
01:21:35,800 --> 01:21:36,500
won't see.

1388
01:21:36,500 --> 01:21:39,300
I won't be able to verify that the changes right since we were not at

1389
01:21:39,300 --> 01:21:41,500
a workable state to begin with but that's okay.

1390
01:21:43,200 --> 01:21:46,600
So yeah if I want to put the the focal length in here that's all good.

1391
01:21:46,600 --> 01:21:51,800
And then down here again I got to figure out that math.

1392
01:21:51,800 --> 01:21:54,400
I don't like the idea that I'm not sure.

1393
01:21:57,900 --> 01:21:59,000
About the negation.

1394
01:22:00,800 --> 01:22:01,800
More specifically.

1395
01:22:01,800 --> 01:22:04,700
I'm not sure why the negation work the first time, I guess, the reason

1396
01:22:04,700 --> 01:22:07,200
the negation work the first time is because we were doing the

1397
01:22:07,200 --> 01:22:08,500
subtraction ourselves.

1398
01:22:08,700 --> 01:22:11,600
And in fact, I guess this may be the entire problem we were having

1399
01:22:11,800 --> 01:22:17,100
because here's the thing, I forgot the fact that we implicitly up when

1400
01:22:17,100 --> 01:22:21,800
we were doing get render entity basis P, we were implicitly negating

1401
01:22:21,800 --> 01:22:24,700
the Z coordinate ourselves, right?

1402
01:22:25,000 --> 01:22:26,100
This stuff's all gone.

1403
01:22:26,100 --> 01:22:28,800
Now, like hide off floor and all this sort of stuff, this stuff's all

1404
01:22:28,800 --> 01:22:29,300
gone.

1405
01:22:29,800 --> 01:22:30,500
That's a zero.

1406
01:22:30,600 --> 01:22:32,800
Distance above Target is also zero.

1407
01:22:33,800 --> 01:22:39,800
So all that stuff is is gone and doesn't do anything right.

1408
01:22:42,000 --> 01:22:45,900
And we now are putting the camera transform, which we used to be doing

1409
01:22:45,900 --> 01:22:49,700
inside, get renters, Graduate Institute, render entity basis P.

1410
01:22:49,900 --> 01:22:53,300
We're now doing that in our perspective, projection what that means

1411
01:22:53,300 --> 01:22:58,700
is, we are no longer subtracting the Z away and so, therefore, we

1412
01:22:58,700 --> 01:23:00,900
would have to flip the order in which it goes.

1413
01:23:01,600 --> 01:23:04,500
So I guess I just never thought about the fact that we had already

1414
01:23:04,500 --> 01:23:08,600
baked that in when we were doing it here, but we did, right?

1415
01:23:09,300 --> 01:23:10,800
And just to like,

1416
01:23:11,800 --> 01:23:14,000
Go to that in a little more detail so it's clearer.

1417
01:23:14,500 --> 01:23:15,300
Let me go ahead and

1418
01:23:18,100 --> 01:23:19,200
talk about that real quick.

1419
01:23:48,100 --> 01:23:48,600
There we go.

1420
01:23:50,900 --> 01:23:53,500
All right, so let's talk about that real quick because I think I see.

1421
01:23:53,500 --> 01:23:57,800
Now what I accidentally did when I was modifying these

1422
01:24:10,300 --> 01:24:14,800
So in my mind, right the way that we had our coordinate system setup

1423
01:24:14,800 --> 01:24:16,400
is, we have an X Y plane.

1424
01:24:16,500 --> 01:24:16,600
Oops.

1425
01:24:16,600 --> 01:24:17,400
That's the why.

1426
01:24:19,500 --> 01:24:22,100
And Z is coming up, right?

1427
01:24:24,000 --> 01:24:25,900
That means that Z gets higher.

1428
01:24:28,100 --> 01:24:29,300
As it gets closer.

1429
01:24:30,900 --> 01:24:33,800
To the camera to get closer to the camera.

1430
01:24:33,800 --> 01:24:35,800
We want a smaller value.

1431
01:24:38,200 --> 01:24:42,500
But that's not going to be true as he gets higher now, because we were

1432
01:24:42,500 --> 01:24:46,800
previously writing our own code for the projection, that wasn't a

1433
01:24:46,800 --> 01:24:50,900
problem because all we did was we actually took and we did the

1434
01:24:50,900 --> 01:24:52,400
subtraction this way.

1435
01:24:52,600 --> 01:24:57,500
We said hey let's take where the whatever the point is, right?

1436
01:24:57,700 --> 01:25:01,800
And let's subtract the location of the camera that gave us a thing.

1437
01:25:01,800 --> 01:25:04,800
That was - downsy, right?

1438
01:25:04,900 --> 01:25:07,500
And was getting not - down so you that was getting

1439
01:25:07,700 --> 01:25:08,100
Higher.

1440
01:25:08,100 --> 01:25:12,600
As you went down - Z and that's what I was stuffing into the Z

1441
01:25:12,600 --> 01:25:13,000
coordinate.

1442
01:25:13,000 --> 01:25:16,300
So obviously when we built our projection Matrix to match that we

1443
01:25:16,300 --> 01:25:20,900
could just put the Z coordinate directly into W, it would work.

1444
01:25:21,500 --> 01:25:26,300
But now, when we're passing down just raw, you know, now that we're

1445
01:25:26,300 --> 01:25:29,300
having open to the whole transform, we're just passing down these Rock

1446
01:25:29,300 --> 01:25:29,800
coordinates.

1447
01:25:30,000 --> 01:25:33,900
What that means, is, we need some way of flipping the Z around so that

1448
01:25:33,900 --> 01:25:35,300
as the Z gets higher,

1449
01:25:37,500 --> 01:25:38,700
Things get further away.

1450
01:25:39,100 --> 01:25:42,300
We need that to happen or our entire transform isn't going to work,

1451
01:25:42,300 --> 01:25:42,800
right?

1452
01:25:42,800 --> 01:25:48,500
Things would be getting bigger as they got further away and smaller as

1453
01:25:48,500 --> 01:25:50,400
they got closer, which makes no sense at all.

1454
01:25:50,500 --> 01:25:51,200
Right.

1455
01:25:52,000 --> 01:25:54,800
So you can see why we would need to do this or I'm going to ignore

1456
01:25:54,800 --> 01:26:01,200
again, busy temporarily, but you can see why we need to flip the Z

1457
01:26:01,200 --> 01:26:02,000
around at that point.

1458
01:26:02,000 --> 01:26:06,500
Because in order to do that divided, we need to flip the Z value.

1459
01:26:06,700 --> 01:26:07,100
So that

1460
01:26:07,300 --> 01:26:13,000
Will change the way it's characters that will get bigger as it things

1461
01:26:13,000 --> 01:26:17,700
get further away instead of getting closer when we do that, obviously

1462
01:26:17,800 --> 01:26:22,900
the Z value when it comes through and, and does that divide here will,

1463
01:26:22,900 --> 01:26:26,800
then always be positive because it will get clipped, presumably, if it

1464
01:26:26,800 --> 01:26:30,300
was going to be negative because it will be shifted forward by opengl.

1465
01:26:31,500 --> 01:26:35,600
I would assume but we'll have to double check that as well again.

1466
01:26:35,600 --> 01:26:38,500
This is all about making sure that we understand what opengl is doing,

1467
01:26:39,000 --> 01:26:41,700
because we're supposed to be preparing coordinates for opengl.

1468
01:26:42,500 --> 01:26:43,200
So there we go.

1469
01:26:43,200 --> 01:26:44,800
So that it was actually the problem.

1470
01:26:44,800 --> 01:26:48,400
There is that I when I clipped out all that code, I forgot the fact

1471
01:26:48,400 --> 01:26:51,800
that we had actually been negating RC and now that opengl is getting

1472
01:26:51,800 --> 01:26:53,100
this raw it has a negated.

1473
01:26:53,100 --> 01:26:55,600
See, okay.

1474
01:26:56,900 --> 01:26:59,800
We still do have to handle the near and far clipping.

1475
01:27:00,000 --> 01:27:03,500
In mind you, but that's a separate issue.

1476
01:27:04,500 --> 01:27:06,400
So that's all well and good.

1477
01:27:06,900 --> 01:27:09,700
And that's, you know, that's fine.

1478
01:27:10,300 --> 01:27:12,800
And that's good because that means we're now at the place where we are

1479
01:27:12,800 --> 01:27:17,700
actually able to start doing some more stuff here, because now we are

1480
01:27:17,700 --> 01:27:20,900
actually passing down Z coordinates for everything, right?

1481
01:27:21,300 --> 01:27:22,100
And that's good.

1482
01:27:24,700 --> 01:27:28,300
You can see there, there's our screen rectangle to, you can see, the

1483
01:27:28,300 --> 01:27:31,800
unprojected is not implemented right yet, right?

1484
01:27:31,800 --> 01:27:32,100
You can.

1485
01:27:32,100 --> 01:27:35,600
And you can see that very clearly because that's, that's the rectangle

1486
01:27:35,600 --> 01:27:37,100
that should line up with the screen.

1487
01:27:37,100 --> 01:27:39,600
And instead, it's just this little tiny meaningless rectangle.

1488
01:27:40,000 --> 01:27:44,100
So you can see, we've got to get that fixed as well, but we're

1489
01:27:44,100 --> 01:27:46,400
starting to get a little closer to reasonable here, right?

1490
01:27:46,400 --> 01:27:48,200
So again getting better.

1491
01:27:50,500 --> 01:27:54,800
Excuse Me, Slowly putting the focal length out here into the numerator

1492
01:27:54,800 --> 01:27:56,800
again that probably had nothing to do with that.

1493
01:27:56,800 --> 01:27:59,700
We probably could still leave it in the denominator if we wanted to.

1494
01:27:59,700 --> 01:28:02,600
I assume let's just check to see if that's true.

1495
01:28:03,300 --> 01:28:08,100
I don't actually know if it is or not because again like I said we

1496
01:28:08,100 --> 01:28:09,600
have to play by open jails rules.

1497
01:28:09,600 --> 01:28:10,700
Not our rules here.

1498
01:28:11,500 --> 01:28:14,800
So I'm going to put the focal length into the denominator here, just

1499
01:28:14,800 --> 01:28:16,300
to see what happens if I do.

1500
01:28:19,300 --> 01:28:20,800
Yeah, so that was not the problem.

1501
01:28:20,800 --> 01:28:22,100
We are allowed to do that.

1502
01:28:22,100 --> 01:28:24,800
I suppose that doesn't mean we should, it may still be that it's

1503
01:28:24,800 --> 01:28:28,600
better behaved if you do it the way that opengl expects.

1504
01:28:30,400 --> 01:28:33,000
But again, so it was just the fact that I had forgotten, we were

1505
01:28:33,000 --> 01:28:34,500
implicitly flipping disease.

1506
01:28:34,500 --> 01:28:37,600
We stopped flipping disease and started passing the directly.

1507
01:28:37,900 --> 01:28:41,200
And we had to account for that, when we made our protection, we had to

1508
01:28:41,200 --> 01:28:42,800
account for flipping those, these

1509
01:28:44,600 --> 01:28:45,100
All right.

1510
01:28:46,200 --> 01:28:47,800
So let's try to finish up today.

1511
01:28:47,800 --> 01:28:51,000
We still got some time left, you got about half an hour left.

1512
01:28:51,100 --> 01:28:55,100
Let's still finish what we were going to do today before getting into

1513
01:28:55,100 --> 01:28:56,400
the the near and far clipping plane.

1514
01:28:56,400 --> 01:29:00,300
Because like I said, I kind of wanted to put push those off until we

1515
01:29:00,300 --> 01:29:03,700
were ready to actually do z-buffering because the near and far

1516
01:29:03,700 --> 01:29:09,800
clipping plane is really have, inter it sort of intimately related if

1517
01:29:09,800 --> 01:29:14,200
you will to doing that sort of Zeebo.

1518
01:29:14,400 --> 01:29:17,400
Ring, where you care about what the Z ranges are.

1519
01:29:17,600 --> 01:29:22,600
And so I would like to talk about those together and rather than doing

1520
01:29:22,600 --> 01:29:22,900
them now.

1521
01:29:22,900 --> 01:29:25,800
So, I'm glad that that was not something that we had to deal with.

1522
01:29:28,800 --> 01:29:29,200
All right.

1523
01:29:29,200 --> 01:29:32,900
So, let's put that off for temporarily, and we'll deal with that next

1524
01:29:32,900 --> 01:29:34,700
week when we start doing z-buffering.

1525
01:29:35,600 --> 01:29:38,400
And right now, that's just finished the Camera Part, which is the only

1526
01:29:38,400 --> 01:29:40,100
other thing that I really had wanted to do.

1527
01:29:41,400 --> 01:29:43,800
And inside the

1528
01:29:46,200 --> 01:29:46,700
World mode.

1529
01:29:46,700 --> 01:29:48,000
We're actually setting the camera.

1530
01:29:48,500 --> 01:29:50,500
You can see that we're passing some axes down here.

1531
01:29:50,500 --> 01:29:57,600
All I really want to do right now is just kind of, I want to make it

1532
01:29:57,600 --> 01:29:59,800
so that we can do some arbitrary rotation.

1533
01:30:00,000 --> 01:30:00,500
Stuff.

1534
01:30:01,100 --> 01:30:03,300
So what I'm going to do to start out with that, I'm just going to make

1535
01:30:03,300 --> 01:30:04,600
like a camera.

1536
01:30:06,400 --> 01:30:06,800
P.

1537
01:30:06,800 --> 01:30:09,200
I'm going to, I'm going to call this camera placement and this camera.

1538
01:30:09,200 --> 01:30:12,900
I so maybe maybe camera forward and Camera inverse in some sense

1539
01:30:12,900 --> 01:30:16,800
because this is like the or maybe camera object and camera camera or

1540
01:30:16,800 --> 01:30:17,600
something like that.

1541
01:30:17,700 --> 01:30:18,800
Because this is the object.

1542
01:30:18,800 --> 01:30:21,200
I want to create the object transform for the camera, like where the

1543
01:30:21,200 --> 01:30:22,900
camera is in the world, basically.

1544
01:30:23,000 --> 01:30:25,500
And then this is really the inversion of that, right?

1545
01:30:25,500 --> 01:30:28,000
It's the thing that takes things and Maps it into the camera space.

1546
01:30:28,700 --> 01:30:30,500
So I just want to kind of call those two different things.

1547
01:30:32,000 --> 01:30:35,000
So, I'm just going to say that we've got a rotate.

1548
01:30:35,900 --> 01:30:40,000
I think it's like, let's say around the x axis X rotation, I'm going

1549
01:30:40,000 --> 01:30:41,400
to get an extra tation.

1550
01:30:41,600 --> 01:30:44,100
I want to tilt the camera this way.

1551
01:30:44,800 --> 01:30:48,600
And so, if we rotate about the x axis tilting, the camera.

1552
01:30:48,800 --> 01:30:52,300
If you, if you imagine the right-hand rule, remember I said things

1553
01:30:52,500 --> 01:30:56,000
the, you know, align your right, take your right hand, align your

1554
01:30:56,000 --> 01:31:00,200
thumb along the axis and rotation, you know, is going to go

1555
01:31:00,200 --> 01:31:01,300
counterclockwise around.

1556
01:31:01,600 --> 01:31:02,100
Right.

1557
01:31:02,200 --> 01:31:06,200
You know this intuitively from the unit circle when we draw right.

1558
01:31:06,200 --> 01:31:06,900
Here's our

1559
01:31:08,400 --> 01:31:15,200
Standard xy-plane write z is coming out towards us, right?

1560
01:31:16,200 --> 01:31:19,600
So if you imagine putting your hand there with your thumb, pointing

1561
01:31:19,600 --> 01:31:25,100
along the z-axis and you curl your fingers, right, it goes in the same

1562
01:31:25,100 --> 01:31:28,500
direction as the unit circle goes, the unit, circle goes

1563
01:31:28,500 --> 01:31:31,000
counterclockwise, when we conceptualize it, right?

1564
01:31:31,000 --> 01:31:35,400
So all of our rotations that we built, they go counterclockwise around

1565
01:31:35,400 --> 01:31:36,800
the axle of the rotation.

1566
01:31:36,800 --> 01:31:38,000
If the axles pointing

1567
01:31:38,200 --> 01:31:39,600
Out at us, right?

1568
01:31:40,700 --> 01:31:47,700
So if I want to pitch the camera so that we're looking down on the

1569
01:31:47,700 --> 01:31:50,500
world, it's pitched back a little bit, right?

1570
01:31:50,800 --> 01:31:54,800
Well, that's actually the opposite, if I'm rotating around the x-axis,

1571
01:31:54,800 --> 01:31:55,400
right?

1572
01:31:56,000 --> 01:32:00,400
I'm going to rotate the world sort of toward me this way with a

1573
01:32:00,400 --> 01:32:00,900
positive.

1574
01:32:00,900 --> 01:32:05,300
So I want to do a little bit of a negative rotation along that axis.

1575
01:32:05,600 --> 01:32:06,800
So I'm going to take

1576
01:32:08,300 --> 01:32:10,400
I think we have a value for pi here.

1577
01:32:13,500 --> 01:32:14,000
Somewhere.

1578
01:32:18,800 --> 01:32:19,300
There it is.

1579
01:32:20,100 --> 01:32:23,200
So I'm going to take a value for pi here and I'm just going to say,

1580
01:32:23,200 --> 01:32:25,800
Hey, you know, Pi would be 180 degrees.

1581
01:32:25,800 --> 01:32:28,500
I want to rotate this very small fraction of that.

1582
01:32:28,600 --> 01:32:36,000
Maybe, you know, a third of pie, maybe, maybe probably even less than

1583
01:32:36,000 --> 01:32:38,700
that a tenth of pie, maybe.

1584
01:32:39,000 --> 01:32:41,800
I don't know how much we want to do, but very, very little of a

1585
01:32:41,800 --> 01:32:42,600
rotation, right?

1586
01:32:42,600 --> 01:32:48,100
Pie being pie being 180 degrees, right?

1587
01:32:48,100 --> 01:32:48,400
Towels,

1588
01:32:48,600 --> 01:32:49,700
Is 360 Degrees.

1589
01:32:50,200 --> 01:32:52,400
I want to do a very small fraction of that.

1590
01:32:53,000 --> 01:32:56,800
So if I take that, what I should be able to do is just get column

1591
01:32:59,200 --> 01:32:59,700
now.

1592
01:33:00,200 --> 01:33:02,000
And pull those out of The Matrix.

1593
01:33:05,900 --> 01:33:06,700
Where I have camera.

1594
01:33:06,700 --> 01:33:07,100
Oh,

1595
01:33:12,500 --> 01:33:13,000
so,

1596
01:33:15,800 --> 01:33:17,900
so now I can build any kind of rotation I want.

1597
01:33:18,600 --> 01:33:22,900
And and then my camera transform should make that work.

1598
01:33:23,700 --> 01:33:30,100
And again that uses that worldspace offset of the camera and what

1599
01:33:30,100 --> 01:33:31,500
we're not really doing yet.

1600
01:33:31,500 --> 01:33:34,600
Is I'm not placing the camera, rotate it around yet.

1601
01:33:34,800 --> 01:33:36,800
So this is literally putting a tilt in in the tilts.

1602
01:33:36,800 --> 01:33:38,900
Not going to quite be correct because of that.

1603
01:33:39,700 --> 01:33:40,400
But that's ok.

1604
01:33:40,400 --> 01:33:43,500
We'll we'll deal with that in a moment.

1605
01:33:47,900 --> 01:33:48,400
There we go.

1606
01:33:49,900 --> 01:33:50,400
So yeah.

1607
01:33:50,400 --> 01:33:52,200
So now our world is is tilted.

1608
01:33:52,200 --> 01:33:53,100
That's not the Tilt.

1609
01:33:53,100 --> 01:33:54,400
I was expecting though.

1610
01:33:55,900 --> 01:33:58,500
Why did I get that tilt?

1611
01:34:05,500 --> 01:34:08,400
so, the rotation

1612
01:34:10,600 --> 01:34:11,700
Oh duh.

1613
01:34:12,400 --> 01:34:15,500
Because this is the rotation of the camera itself.

1614
01:34:15,900 --> 01:34:19,400
So I am was thinking about how I wanted to rotate the world which is

1615
01:34:19,400 --> 01:34:20,300
completely wrong.

1616
01:34:22,000 --> 01:34:23,500
So let me think about that one more time.

1617
01:34:24,100 --> 01:34:25,300
So cure is

1618
01:34:28,500 --> 01:34:32,300
My why here's my ex the world is laid out on it.

1619
01:34:32,800 --> 01:34:35,400
Right here is my Z, my camera is here.

1620
01:34:35,900 --> 01:34:40,000
So what I want to do is I want to tilt the camera so that I'm looking

1621
01:34:40,000 --> 01:34:43,000
this way, is what I was trying to do, right?

1622
01:34:43,100 --> 01:34:45,600
I was thinking about tilting the world but that's not what I'm doing,

1623
01:34:45,600 --> 01:34:45,900
right?

1624
01:34:45,900 --> 01:34:46,400
I'm spreading.

1625
01:34:46,500 --> 01:34:48,700
We are trying to make it so that our camera is actually like a

1626
01:34:48,700 --> 01:34:50,500
physical object we can think about.

1627
01:34:50,500 --> 01:34:55,000
So I wrote All That code to assume that we were doing, you know, we

1628
01:34:55,000 --> 01:34:58,000
were going to take the camera as an object that we want to view things

1629
01:34:58,000 --> 01:34:58,200
from.

1630
01:34:59,000 --> 01:35:04,200
So yeah, so that rotation is going positive around X so, that's okay.

1631
01:35:05,200 --> 01:35:06,700
I was like got nervous there.

1632
01:35:06,800 --> 01:35:08,400
I never like to negate things.

1633
01:35:08,400 --> 01:35:12,900
Like if I have something to gated and I expected to do something, if

1634
01:35:12,900 --> 01:35:17,500
it does the opposite, that's like an alarm, that's like a huge like

1635
01:35:17,500 --> 01:35:18,800
bad situation for me.

1636
01:35:18,800 --> 01:35:21,200
I'm like, wait, what if I expected this?

1637
01:35:21,300 --> 01:35:25,000
And I got the opposite, I assume I've got a problem in my pipeline

1638
01:35:25,000 --> 01:35:28,100
summer and I want to be absolutely sure that I

1639
01:35:28,300 --> 01:35:32,400
I know what the reason is for that before I switch it.

1640
01:35:34,800 --> 01:35:38,200
I know it's a subtle thing but it's like yeah if you're wondering why

1641
01:35:38,200 --> 01:35:40,700
I didn't just immediately take the - off and as soon as I was like I

1642
01:35:40,700 --> 01:35:44,600
want to know that I just was thinking about some little thing wrong in

1643
01:35:44,600 --> 01:35:48,000
that it really should be positive not negative because the other

1644
01:35:48,000 --> 01:35:51,700
possibility is that there's a problem somewhere in the math that we

1645
01:35:51,700 --> 01:35:55,900
did before and I don't want that to be wrong and be sitting there in

1646
01:35:55,900 --> 01:35:57,800
correct the entire time, right?

1647
01:35:57,800 --> 01:35:58,700
That would be bad.

1648
01:36:00,000 --> 01:36:02,200
It could create other problems later that that are not.

1649
01:36:02,200 --> 01:36:04,800
So fixable as just removing a - right?

1650
01:36:05,800 --> 01:36:06,600
So, that's okay.

1651
01:36:07,100 --> 01:36:11,100
So the other problem we have here is in addition to, you know, doing

1652
01:36:11,100 --> 01:36:13,900
that rotation of the camera, which we just did, right?

1653
01:36:16,100 --> 01:36:16,900
So there you go.

1654
01:36:17,000 --> 01:36:19,800
In addition to doing that rotation of the camera which we just did.

1655
01:36:20,300 --> 01:36:26,300
I also that is pitching the camera up without adjusting where the

1656
01:36:26,300 --> 01:36:27,700
cameras looking, right?

1657
01:36:27,700 --> 01:36:33,300
So all we did was take the cameras location and look up from their

1658
01:36:33,900 --> 01:36:34,500
right.

1659
01:36:35,300 --> 01:36:36,400
That's all we did.

1660
01:36:36,500 --> 01:36:42,400
We did not try to move the camera in any other particular way if that

1661
01:36:42,400 --> 01:36:42,900
makes sense.

1662
01:36:45,600 --> 01:36:46,000
Yeah.

1663
01:36:46,400 --> 01:36:50,200
So this is assuming that the camera offset is in the world at that

1664
01:36:50,200 --> 01:36:54,400
location, and that it's looking this way, what I believe that means.

1665
01:36:54,400 --> 01:36:57,900
And again, I just want to take some time to double check some of this

1666
01:36:57,900 --> 01:36:58,200
year.

1667
01:37:04,400 --> 01:37:05,200
It should mean that.

1668
01:37:05,200 --> 01:37:07,500
By the time we rotate to 90 degrees.

1669
01:37:07,700 --> 01:37:11,200
We are looking straight away from like we're looking totally away from

1670
01:37:11,200 --> 01:37:12,600
the world and that is correct.

1671
01:37:12,700 --> 01:37:13,400
Like there it is.

1672
01:37:14,800 --> 01:37:16,500
There's quite a bit of eccentricity here.

1673
01:37:16,500 --> 01:37:18,500
I'm not sure if that means our focal length needs to be set

1674
01:37:18,500 --> 01:37:19,200
differently.

1675
01:37:20,700 --> 01:37:21,400
But hold on a second.

1676
01:37:21,400 --> 01:37:22,500
Let's take a look at that.

1677
01:37:23,100 --> 01:37:25,300
So that's what we wanted.

1678
01:37:25,300 --> 01:37:27,000
This is exactly what we wanted here.

1679
01:37:27,500 --> 01:37:31,200
And I want to be able to, in addition to that extra Tatian.

1680
01:37:31,300 --> 01:37:33,300
I want to be able to rotate about

1681
01:37:34,200 --> 01:37:39,100
The Z axis as well, so that we can orbit the world if that makes

1682
01:37:39,100 --> 01:37:39,600
sense.

1683
01:37:39,800 --> 01:37:44,100
So we're looking down on it and I want to be able to to orbit around

1684
01:37:44,100 --> 01:37:44,600
as well.

1685
01:37:45,200 --> 01:37:49,900
So in addition, I would like to be able to do some of this sort of

1686
01:37:49,900 --> 01:37:50,300
thing.

1687
01:37:55,100 --> 01:37:55,700
Right.

1688
01:37:56,300 --> 01:38:03,700
And I'm just I'm I'm not loving how I'm not loving with that focal

1689
01:38:03,700 --> 01:38:03,900
length.

1690
01:38:03,900 --> 01:38:07,500
Is it looks like the focal length is maybe a little too eccentric.

1691
01:38:07,500 --> 01:38:09,100
It kind of makes me feel like that focal.

1692
01:38:09,100 --> 01:38:09,900
Length should be

1693
01:38:12,400 --> 01:38:13,100
More.

1694
01:38:15,400 --> 01:38:17,800
I don't really know, just curious to see.

1695
01:38:20,600 --> 01:38:24,500
That looks a little more sane to me in terms of the degree of stretch,

1696
01:38:24,800 --> 01:38:25,300
right?

1697
01:38:25,900 --> 01:38:27,500
But we can cross that bridge later.

1698
01:38:28,000 --> 01:38:28,800
Take a look at that.

1699
01:38:29,800 --> 01:38:30,600
So anyway,

1700
01:38:32,400 --> 01:38:35,800
The other thing that I could do here is now we could actually have the

1701
01:38:35,800 --> 01:38:38,100
the mouse input correspond to that, but we'll get to that in a second.

1702
01:38:38,900 --> 01:38:42,000
So, what I was saying about that, is when we're doing this orbiting

1703
01:38:42,000 --> 01:38:46,600
and stuff like that, the problem here is that we don't actually have

1704
01:38:46,600 --> 01:38:48,400
any way of

1705
01:38:50,500 --> 01:38:51,700
Of looking back.

1706
01:38:51,700 --> 01:38:55,300
Making sure we're focused on the world's actual focal point.

1707
01:38:55,300 --> 01:38:59,200
So when we look at this world camera offset bit, what I want to do is

1708
01:38:59,200 --> 01:38:59,900
I want to rotate

1709
01:39:00,100 --> 01:39:03,600
That around with the world as I rotate as well.

1710
01:39:03,800 --> 01:39:07,200
So you know, if you imagine how this is, like I said, the camera is

1711
01:39:07,200 --> 01:39:08,200
out here somewhere.

1712
01:39:08,800 --> 01:39:12,600
What I want to do is not just pitch the camera up, but when I pitched

1713
01:39:12,600 --> 01:39:16,700
the camera up and look in this direction, I want to counter rotate its

1714
01:39:16,700 --> 01:39:17,500
position.

1715
01:39:17,600 --> 01:39:22,300
So that it is looking at the center point, it's still looking at the

1716
01:39:22,300 --> 01:39:24,400
same Center Point, right?

1717
01:39:25,800 --> 01:39:26,600
Does that make sense?

1718
01:39:27,700 --> 01:39:30,800
So, when I rotate the world this way, I want to counter, rotate the

1719
01:39:30,800 --> 01:39:34,100
position of the world in the in the other way, right?

1720
01:39:34,100 --> 01:39:38,600
But those are actually the same way if you think about it, like

1721
01:39:40,100 --> 01:39:43,100
If I'm rotating up this up, that's the same.

1722
01:39:43,300 --> 01:39:47,000
You know, that's going to rotate a position down, right?

1723
01:39:47,600 --> 01:39:52,700
If that makes sense because the position is coming out the other end

1724
01:39:52,700 --> 01:39:57,600
of the of the directional pointing right now, sir, I'm explaining that

1725
01:39:57,600 --> 01:39:58,000
right,

1726
01:40:03,700 --> 01:40:05,900
So if this is our Z, right?

1727
01:40:06,000 --> 01:40:10,700
And here's the x axis coming out here, remember the cameras axis is

1728
01:40:10,700 --> 01:40:13,300
pointing backwards along Z, right?

1729
01:40:13,300 --> 01:40:15,600
That's where it's actually pointing, that makes sense.

1730
01:40:16,400 --> 01:40:21,100
So if I'm rotating it this way, you know, it's looking back this

1731
01:40:21,100 --> 01:40:24,500
direction, if I'm rotating it this way, everything wants to rotate by

1732
01:40:24,500 --> 01:40:28,800
that rotation because, you know, it's going to make it point that way,

1733
01:40:28,800 --> 01:40:32,100
which is actually pointing back this way and its position.

1734
01:40:32,100 --> 01:40:33,000
Also wanted to rotate

1735
01:40:33,100 --> 01:40:33,700
That way.

1736
01:40:34,400 --> 01:40:37,800
So I should be able to take this right here.

1737
01:40:37,900 --> 01:40:39,600
The camera offset.

1738
01:40:39,600 --> 01:40:44,400
I should be able to take that and multiply that in, right?

1739
01:40:44,400 --> 01:40:45,300
If that makes sense.

1740
01:40:52,200 --> 01:40:53,000
Or not.

1741
01:40:53,800 --> 01:40:57,000
When I say I should be able to do that and then I clearly can't.

1742
01:40:57,400 --> 01:40:58,800
So I should be able to do that.

1743
01:40:58,800 --> 01:41:03,900
I should be able to rotate it out and I would assume

1744
01:41:18,000 --> 01:41:22,700
Yeah, I assume that that should be correct because that is what we do

1745
01:41:22,700 --> 01:41:23,500
want to do that, right?

1746
01:41:23,500 --> 01:41:25,100
I didn't do anything weird there.

1747
01:41:27,300 --> 01:41:29,100
We want to be able to rotate.

1748
01:41:32,500 --> 01:41:34,800
The cameras offset by the camera.

1749
01:41:37,200 --> 01:41:38,300
Just try this one more time.

1750
01:41:42,300 --> 01:41:46,800
And we can knock out one term of this for debugging purposes.

1751
01:41:46,800 --> 01:41:47,700
Just so we can see

1752
01:41:50,200 --> 01:41:50,600
There we go.

1753
01:41:51,800 --> 01:41:53,300
So, here's our expectation.

1754
01:41:55,800 --> 01:41:56,500
We have our camera.

1755
01:41:56,500 --> 01:41:58,000
It's pointing like this.

1756
01:42:00,600 --> 01:42:01,100
Right?

1757
01:42:01,100 --> 01:42:06,600
That's the cameras axes and the cameras position is somewhere out here

1758
01:42:07,000 --> 01:42:08,300
along Z, right?

1759
01:42:08,300 --> 01:42:11,200
So it's, you know, I don't know what was with something like eight, I

1760
01:42:11,200 --> 01:42:11,700
think.

1761
01:42:12,500 --> 01:42:13,700
So it's eight along Z.

1762
01:42:15,600 --> 01:42:18,300
So now what happens when we do our camera rotation?

1763
01:42:20,600 --> 01:42:22,700
Is we're going to rotate everything.

1764
01:42:25,200 --> 01:42:27,000
This way, right?

1765
01:42:27,200 --> 01:42:29,800
So we're going to rotate the position down here.

1766
01:42:31,400 --> 01:42:31,700
Please.

1767
01:42:31,700 --> 01:42:32,500
That's our hope.

1768
01:42:34,000 --> 01:42:37,900
And similarly, we're going to rotate all the axes down there as well.

1769
01:42:43,300 --> 01:42:44,700
That's what we hope to do.

1770
01:42:46,500 --> 01:42:48,800
But unfortunately we're just kind of getting a collapse here.

1771
01:42:48,800 --> 01:42:50,600
Like you can see, we're still drawing singing but it's kind of

1772
01:42:50,600 --> 01:42:51,900
flattened out in a weird way.

1773
01:42:51,900 --> 01:42:56,200
I'm not sure exactly what that corresponds to because of our

1774
01:42:56,200 --> 01:42:57,200
multiplication here.

1775
01:42:57,400 --> 01:43:00,500
I want to pull this out because I would like to be able to inspect

1776
01:43:00,500 --> 01:43:01,300
these separately.

1777
01:43:01,900 --> 01:43:05,300
So I'm just going to make a synthetic term there.

1778
01:43:11,400 --> 01:43:13,200
And the other thing that's interesting is this should just be

1779
01:43:13,200 --> 01:43:16,400
basically canceling out the work that camera transform actually does

1780
01:43:16,400 --> 01:43:17,000
itself.

1781
01:43:18,000 --> 01:43:20,300
So there really shouldn't have been much mystery there so I want to go

1782
01:43:20,300 --> 01:43:22,900
in there and make sure that we don't have any bugs because it feels

1783
01:43:22,900 --> 01:43:23,700
like we probably do.

1784
01:43:26,700 --> 01:43:28,500
All right, so let's hop over to World mode.

1785
01:43:33,000 --> 01:43:34,600
Assuming I can actually find their teeth.

1786
01:43:34,600 --> 01:43:35,100
There it is.

1787
01:43:37,600 --> 01:43:38,000
Okay.

1788
01:43:40,900 --> 01:43:42,000
So here is our camera.

1789
01:43:42,000 --> 01:43:44,800
Oh, here is our camera OT.

1790
01:43:54,500 --> 01:43:56,100
And that.

1791
01:44:00,400 --> 01:44:02,400
Is this is this when the offset still zero?

1792
01:44:02,400 --> 01:44:04,600
Okay, so I got to come back through the second time

1793
01:44:06,800 --> 01:44:07,200
There we go.

1794
01:44:08,300 --> 01:44:08,600
All right.

1795
01:44:08,600 --> 01:44:12,100
So now let's take a look at what our camera offset actually is here.

1796
01:44:12,800 --> 01:44:15,800
So we're rotating 90 degrees.

1797
01:44:16,000 --> 01:44:16,400
Oh,

1798
01:44:18,000 --> 01:44:19,200
Well, I'm an idiot.

1799
01:44:19,700 --> 01:44:21,100
We're rotating 90 degrees.

1800
01:44:21,300 --> 01:44:23,300
We should be seeing the world flat.

1801
01:44:24,100 --> 01:44:28,600
We can't rotate 90 degrees, and and point at the straight.

1802
01:44:28,600 --> 01:44:29,000
Yeah.

1803
01:44:29,100 --> 01:44:30,100
Okay, wow.

1804
01:44:30,500 --> 01:44:31,900
So no, we don't have a bug.

1805
01:44:32,000 --> 01:44:33,500
We just forgot.

1806
01:44:33,500 --> 01:44:33,700
We had.

1807
01:44:33,700 --> 01:44:35,300
Rotate it all the way down to 90.

1808
01:44:36,100 --> 01:44:36,600
Nice work.

1809
01:44:36,600 --> 01:44:39,700
Casey imagining bugs where there are none?

1810
01:44:40,800 --> 01:44:44,100
So, yeah, so we should be able to now do sort of that X flattening

1811
01:44:44,100 --> 01:44:47,200
rotation, which is what we want and still be pointed at the

1812
01:44:47,500 --> 01:44:48,800
Which again, is what we want.

1813
01:44:49,400 --> 01:44:50,200
So that's all good.

1814
01:44:50,200 --> 01:44:54,000
And now what we want to do is we want to be able to hook these up to

1815
01:44:54,000 --> 01:44:57,100
the mouse so I can spin it around because that's what I want again for

1816
01:44:57,100 --> 01:44:57,500
debugging purposes.

1817
01:44:57,500 --> 01:44:59,900
So those two parameters I want to

1818
01:45:00,000 --> 01:45:04,100
Able to control if that makes sense.

1819
01:45:04,900 --> 01:45:07,700
And so let's just take a look at how we might do that.

1820
01:45:08,200 --> 01:45:11,800
So inside update and render world, I'm going to need an accumulator

1821
01:45:11,800 --> 01:45:12,400
somehow.

1822
01:45:12,600 --> 01:45:14,800
I'm going to need to be able to specify this.

1823
01:45:15,400 --> 01:45:17,700
So I'm going to just do again, something pretty stupid.

1824
01:45:17,700 --> 01:45:19,100
I'm just going to do like

1825
01:45:22,100 --> 01:45:26,300
Debug camera pitch and debug camera orbit here.

1826
01:45:27,100 --> 01:45:31,300
And I'm going to grab those values and put them into this equation.

1827
01:45:31,300 --> 01:45:36,600
So rather than us, having some arbitrary value that we put here, I'm

1828
01:45:36,600 --> 01:45:44,300
going to go ahead and make the Z rotation, be debug camera orbit, and

1829
01:45:44,300 --> 01:45:46,800
the X rotation, debug camera pitch.

1830
01:45:48,000 --> 01:45:50,900
And then when we have these Mouse stuff coming in here,

1831
01:45:51,500 --> 01:45:55,400
I don't remember very much about how we capture debug input.

1832
01:45:55,400 --> 01:45:59,000
I don't remember if we had any debug Keys available.

1833
01:46:01,700 --> 01:46:03,600
If we don't, we're going to need some, because we're going to need

1834
01:46:03,600 --> 01:46:06,700
some way of saying that I want to access the camera now, and I would

1835
01:46:06,700 --> 01:46:07,400
like that to be quick.

1836
01:46:07,400 --> 01:46:12,100
So I want to be able to just hit a like a accelerator key and have

1837
01:46:12,100 --> 01:46:12,700
that come in.

1838
01:46:13,400 --> 01:46:14,300
So, let's take a look.

1839
01:46:14,700 --> 01:46:16,000
We can see here.

1840
01:46:16,100 --> 01:46:20,400
We've got game controller inputs, which stopped we care about Mouse

1841
01:46:20,400 --> 01:46:21,100
button.

1842
01:46:22,800 --> 01:46:23,400
So there we go.

1843
01:46:23,400 --> 01:46:24,200
We've got shift.

1844
01:46:24,200 --> 01:46:26,200
Alt and control, which should be good.

1845
01:46:26,600 --> 01:46:31,400
So, I'll just use the ALT key for this and say, if you know input

1846
01:46:36,800 --> 01:46:37,700
Alt down.

1847
01:46:39,600 --> 01:46:43,100
And input Mouse buttons.

1848
01:46:44,200 --> 01:46:46,600
I don't know how I get an is down for the mouse button.

1849
01:46:51,400 --> 01:46:54,000
Is down because it's a game button States, right?

1850
01:46:54,000 --> 01:47:01,400
So I can just say, is down Mouse buttons left.

1851
01:47:03,800 --> 01:47:04,300
Let's say.

1852
01:47:09,000 --> 01:47:14,900
So assuming that that's true, then I can just take my mouse Delta

1853
01:47:14,900 --> 01:47:15,400
here.

1854
01:47:18,500 --> 01:47:20,100
Do we have a last mousex?

1855
01:47:26,100 --> 01:47:27,100
I think we do.

1856
01:47:31,400 --> 01:47:32,200
I don't think we do.

1857
01:47:32,200 --> 01:47:33,400
So I'll save that as well.

1858
01:47:41,100 --> 01:47:45,400
So I'm just going to go ahead and say that we keep it last Mouse P, I

1859
01:47:45,400 --> 01:47:45,900
guess.

1860
01:47:51,100 --> 01:47:52,100
And store that.

1861
01:47:52,300 --> 01:47:56,200
So now I can get the Delta which is all I really wanted, right?

1862
01:47:56,600 --> 01:47:59,800
So when we produce this, we then have a deal.

1863
01:48:00,000 --> 01:48:01,600
SP, which is just whatever.

1864
01:48:01,600 --> 01:48:03,200
The last Master P was

1865
01:48:06,600 --> 01:48:07,500
Subtract it away.

1866
01:48:07,600 --> 01:48:09,000
So it's like, where did we go?

1867
01:48:09,800 --> 01:48:15,300
And then in here, I can say what I want to have happen with the

1868
01:48:16,900 --> 01:48:17,700
accumulators.

1869
01:48:24,900 --> 01:48:28,300
So, my world mode about camera orbit.

1870
01:48:30,100 --> 01:48:31,200
And my world mode.

1871
01:48:31,200 --> 01:48:32,500
Debug camera pitch.

1872
01:48:36,700 --> 01:48:39,100
I want those to be proportional to the mouse input.

1873
01:48:39,200 --> 01:48:43,500
I don't really know what the ratio should be, so I guess I want to

1874
01:48:43,500 --> 01:48:45,900
have a rotation speed then here.

1875
01:48:47,800 --> 01:48:49,200
Those are going to be in pixels.

1876
01:48:49,600 --> 01:48:52,200
So forever, every pixel, I don't know.

1877
01:48:52,300 --> 01:48:54,000
You know what percentage of Pi really want to go.

1878
01:48:54,000 --> 01:48:58,200
I'm going to tune that to something reasonable, whatever feels right

1879
01:48:59,000 --> 01:49:01,200
for that motion and

1880
01:49:03,200 --> 01:49:03,600
Oops.

1881
01:49:05,100 --> 01:49:06,100
I am at that.

1882
01:49:07,800 --> 01:49:08,100
Okay.

1883
01:49:15,900 --> 01:49:16,700
Game mode.

1884
01:49:16,700 --> 01:49:18,700
World's World mode.

1885
01:49:18,900 --> 01:49:21,400
Last maspeedy, it's debug.

1886
01:49:22,400 --> 01:49:23,000
I guess I'll call it.

1887
01:49:23,000 --> 01:49:24,000
Last must be that.

1888
01:49:26,600 --> 01:49:29,400
So, in theory, now we should be able to sort of do this and you can

1889
01:49:29,400 --> 01:49:33,500
see that we can now do this, but I have to tune that and also get the

1890
01:49:33,500 --> 01:49:34,100
directionality.

1891
01:49:34,100 --> 01:49:34,600
Right.

1892
01:49:34,900 --> 01:49:35,200
I guess.

1893
01:49:35,200 --> 01:49:38,800
I don't depends on how I want to orbit the world here.

1894
01:49:38,800 --> 01:49:40,100
I guess I want that.

1895
01:49:41,600 --> 01:49:43,700
I probably want the, why inverted?

1896
01:49:43,900 --> 01:49:44,200
I don't know.

1897
01:49:44,200 --> 01:49:45,200
That's hard to say.

1898
01:49:45,200 --> 01:49:46,600
It's always a preference issue.

1899
01:49:49,100 --> 01:49:50,400
But I definitely want slower.

1900
01:49:53,000 --> 01:49:53,700
There we go.

1901
01:50:01,900 --> 01:50:03,600
no, I think I like the why the way it was

1902
01:50:07,000 --> 01:50:08,000
And again that focal length.

1903
01:50:08,000 --> 01:50:08,900
Feels a little weird to me.

1904
01:50:08,900 --> 01:50:11,600
So I'm just going to play with that a little bit, just to see what the

1905
01:50:11,600 --> 01:50:14,300
difference is if we if we change that focal length a little bit

1906
01:50:16,900 --> 01:50:19,500
That feels a little, that feels a little better to me in terms of

1907
01:50:21,200 --> 01:50:21,700
what's going on there.

1908
01:50:21,700 --> 01:50:26,800
I'm going to take a look at some focal lengths, just to see what

1909
01:50:26,800 --> 01:50:27,500
happens there.

1910
01:50:27,800 --> 01:50:29,400
So, let's say we change it to two.

1911
01:50:31,300 --> 01:50:34,400
Did you see how much more eccentricity there is?

1912
01:50:34,400 --> 01:50:36,000
Like, there's so much more like sort of

1913
01:50:37,100 --> 01:50:41,600
Warping there and I like it better with less I think as my opinion,

1914
01:50:42,200 --> 01:50:42,500
right?

1915
01:50:42,500 --> 01:50:47,900
I just like that looks a little that looks more same to me in terms of

1916
01:50:50,900 --> 01:50:53,500
Of how much of the world is getting getting fit in there, right?

1917
01:50:57,500 --> 01:50:59,800
All right, so that's really all I wanted.

1918
01:51:00,500 --> 01:51:01,700
Out of that anyway.

1919
01:51:02,100 --> 01:51:06,600
And the reason for that is like, right next weekend.

1920
01:51:06,700 --> 01:51:09,900
What we're going to do is we're going to come through and you can see,

1921
01:51:09,900 --> 01:51:12,100
everything is rendering in a flat plane here.

1922
01:51:13,900 --> 01:51:17,700
And that flat plane is not really how we want things.

1923
01:51:17,700 --> 01:51:20,900
Because in order to start z-buffering, we need these objects to

1924
01:51:20,900 --> 01:51:24,000
actually be kind of floating up in the air, a little bit depending on

1925
01:51:24,000 --> 01:51:24,800
the circumstances.

1926
01:51:25,200 --> 01:51:28,600
But the other thing that we need is we need for them to be.

1927
01:51:30,400 --> 01:51:35,400
Oriented to the camera properly and we need them to have Z values set

1928
01:51:35,400 --> 01:51:38,400
so that they will properly include each other and all sorts of other

1929
01:51:38,400 --> 01:51:39,300
stuff like that.

1930
01:51:39,900 --> 01:51:45,000
So in order to see what we have actually specified in those terms, I

1931
01:51:45,000 --> 01:51:49,100
need to be able to like set a debug camera here that can rotate

1932
01:51:49,100 --> 01:51:49,800
around.

1933
01:51:50,100 --> 01:51:53,700
And so we probably will need to do what we did before with the debug

1934
01:51:53,700 --> 01:51:56,100
offset where we can zoom in and out.

1935
01:51:56,200 --> 01:51:56,700
Right.

1936
01:51:57,100 --> 01:51:59,100
We want to do something like that with a debug camera.

1937
01:51:59,100 --> 01:51:59,600
Where

1938
01:52:00,200 --> 01:52:04,100
The game will be looking at the camera and thinking it's one thing so

1939
01:52:04,100 --> 01:52:06,600
that it's setting all of its Sprites based on that.

1940
01:52:07,100 --> 01:52:13,700
But then we will then go and use also a debug camera offset which we

1941
01:52:13,700 --> 01:52:17,700
can set separately that does the this sort of offsetting so we can

1942
01:52:17,700 --> 01:52:18,600
look that way.

1943
01:52:18,600 --> 01:52:22,000
All the Sprites will still aligned themselves to the other camera

1944
01:52:22,000 --> 01:52:25,200
where the where the game supposed to be viewed from and then we can

1945
01:52:25,300 --> 01:52:26,700
use this debug right.

1946
01:52:28,400 --> 01:52:35,500
And in fact, since I have about six or seven minutes yet if that makes

1947
01:52:35,500 --> 01:52:35,900
sense.

1948
01:52:36,800 --> 01:52:42,900
I probably at this point we'll go and just add that that notion of the

1949
01:52:42,900 --> 01:52:45,000
debug Camera Part in, I think

1950
01:52:49,800 --> 01:52:54,500
yeah, so what I want to do there is to say like okay the debug camera

1951
01:52:55,200 --> 01:52:56,600
inside the render group,

1952
01:52:59,500 --> 01:53:04,100
Whenever we're doing that setting, we need sort of a way of the, of

1953
01:53:04,100 --> 01:53:06,600
the user thinking, the cameras, one thing, but us thinking the

1954
01:53:06,600 --> 01:53:07,800
cameras, something else.

1955
01:53:08,400 --> 01:53:13,400
And so what we want to do there is say, yeah, when we do this push,

1956
01:53:13,900 --> 01:53:14,700
right?

1957
01:53:15,300 --> 01:53:19,400
And we and we sort of do like last froch there, right?

1958
01:53:20,900 --> 01:53:23,600
We also want to store like last

1959
01:53:26,400 --> 01:53:29,200
Traffic a how we would say this.

1960
01:53:29,700 --> 01:53:34,100
So we want in addition to last projection, we also want sort of the

1961
01:53:34,100 --> 01:53:40,200
notion that people can get the camera that they're actually using last

1962
01:53:40,200 --> 01:53:43,900
user prods and like last actual project, something like that.

1963
01:53:49,200 --> 01:53:50,800
If that yeah if that makes sense.

1964
01:53:51,400 --> 01:53:57,600
And then we can put in that sort of debug camera

1965
01:54:08,300 --> 01:54:10,600
I'm not sure how we want to do this, I'll be honest.

1966
01:54:11,800 --> 01:54:13,100
Maybe I won't do this today.

1967
01:54:13,600 --> 01:54:14,200
Maybe I'll do this.

1968
01:54:14,200 --> 01:54:15,600
Once we actually have that in there.

1969
01:54:17,000 --> 01:54:17,900
Because I feel like we need.

1970
01:54:17,900 --> 01:54:20,400
Yeah, I am not going to do it yet.

1971
01:54:21,200 --> 01:54:24,100
I think, what I'll do instead is, we'll just make it.

1972
01:54:24,100 --> 01:54:28,200
So that here we can also do a thing where it's like,

1973
01:54:52,600 --> 01:54:55,100
This way, we can have the ability to zoom in and out as well.

1974
01:54:56,000 --> 01:54:56,800
It seems good.

1975
01:55:03,200 --> 01:55:07,600
So that would not be in proportion to pie for any particular reason

1976
01:55:07,700 --> 01:55:08,300
obviously.

1977
01:55:09,100 --> 01:55:11,600
And there's some stuff that we probably would want to do here as well.

1978
01:55:12,600 --> 01:55:13,400
This is one of those.

1979
01:55:14,600 --> 01:55:16,800
This is one of the differential equations situations.

1980
01:55:34,700 --> 01:55:36,100
That won't quite work.

1981
01:55:36,800 --> 01:55:37,900
We'll talk about this a bit later.

1982
01:55:38,300 --> 01:55:41,500
Alright, so what I want to do here is I guess I won't try to correct

1983
01:55:41,500 --> 01:55:45,600
for the the speed stuff, but what I want to do here is have a way to

1984
01:55:45,600 --> 01:55:49,000
like bring the camera closer or further from where it's supposed to

1985
01:55:49,000 --> 01:55:49,200
be.

1986
01:55:49,200 --> 01:55:54,300
So you can see that we've got that debug camera offset value that

1987
01:55:54,300 --> 01:55:55,200
we're using here.

1988
01:55:55,700 --> 01:56:01,100
And what I want to do is I want to have a way of interacting with that

1989
01:56:01,100 --> 01:56:04,000
basically, to to move it further.

1990
01:56:04,200 --> 01:56:04,800
Or closer.

1991
01:56:05,800 --> 01:56:08,200
So we want camera offset to be.

1992
01:56:10,600 --> 01:56:11,400
That value.

1993
01:56:11,700 --> 01:56:12,900
But then we want

1994
01:56:15,700 --> 01:56:20,500
the ability to take camera off set and add to it.

1995
01:56:22,500 --> 01:56:24,700
A debug value for dollying in and out.

1996
01:56:25,300 --> 01:56:27,800
I'm going to move this up to the top because this is actually the

1997
01:56:27,800 --> 01:56:31,000
value that I wanted to work with.

1998
01:56:31,000 --> 01:56:33,400
So I'm going to actually also do something here and I'll talk to you

1999
01:56:33,400 --> 01:56:34,500
about what that is in a second.

2000
01:56:34,500 --> 01:56:36,500
It's kind of like a poor man's differential equation here and we can

2001
01:56:36,500 --> 01:56:38,900
talk about that in a moment.

2002
01:56:39,700 --> 01:56:43,400
So let's go ahead and go over to

2003
01:56:47,100 --> 01:56:50,500
the place where this stuff was stored and add ourselves, a debug

2004
01:56:50,500 --> 01:56:56,200
camera dolly in place there and let's get

2005
01:57:03,700 --> 01:57:04,100
In there.

2006
01:57:04,100 --> 01:57:04,700
There we go.

2007
01:57:06,200 --> 01:57:07,700
And I think

2008
01:57:14,500 --> 01:57:16,000
that should be all we need.

2009
01:57:17,700 --> 01:57:20,300
So, I think now, yeah, I can zoom, right?

2010
01:57:20,300 --> 01:57:26,700
I can rotate around, which is what I wanted and, you know, we can zoom

2011
01:57:26,700 --> 01:57:29,400
in and see stuff clearly.

2012
01:57:30,500 --> 01:57:37,000
And yeah, that's all we really need their so, that's all good.

2013
01:57:37,300 --> 01:57:40,300
And that's nice because we can zoom in and see what we want to see and

2014
01:57:40,300 --> 01:57:41,300
all that other goodness.

2015
01:57:44,300 --> 01:57:46,600
I suppose that's probably a little bit backwards as well, because we

2016
01:57:46,600 --> 01:57:49,600
want to get closer as the mouse goes up.

2017
01:57:50,800 --> 01:57:51,400
All right?

2018
01:57:51,400 --> 01:57:57,700
So in this case, I want to talk about this here just really quickly.

2019
01:57:58,300 --> 01:58:03,300
Like I said apartment, differential equation, so suppose that I did

2020
01:58:03,300 --> 01:58:06,200
this, the same way I was doing rotation, right?

2021
01:58:07,300 --> 01:58:10,400
So here is me doing it the same as doing rotation, where we've got

2022
01:58:10,700 --> 01:58:13,400
just the zoom, you know, and I can zoom in here.

2023
01:58:14,100 --> 01:58:18,600
And what you can see is like as I move the mouse in here, like okay,

2024
01:58:18,600 --> 01:58:19,200
it's tuned.

2025
01:58:19,200 --> 01:58:21,000
Okay for that, right?

2026
01:58:21,100 --> 01:58:23,800
But as I get further away, you can see that.

2027
01:58:23,800 --> 01:58:25,600
I'm moving the camera.

2028
01:58:25,600 --> 01:58:29,500
I'm like the same Mouse amount is like hardly moving the camera at

2029
01:58:29,500 --> 01:58:29,800
all.

2030
01:58:30,400 --> 01:58:31,200
You know what I'm saying?

2031
01:58:32,300 --> 01:58:34,100
The reason for that is fairly obvious.

2032
01:58:34,600 --> 01:58:37,200
The further away, I moved from something.

2033
01:58:37,200 --> 01:58:41,000
The less the same amount of movement will the less effect.

2034
01:58:41,000 --> 01:58:43,900
The same amount of movement will have, you know, this is true because

2035
01:58:44,000 --> 01:58:47,300
Cuz for example if I am standing somewhere and I'm looking at

2036
01:58:47,300 --> 01:58:50,800
something right in front of me this monitor for example and I take one

2037
01:58:50,800 --> 01:58:51,800
step backwards.

2038
01:58:51,800 --> 01:58:53,900
It gets much smaller in my field of view.

2039
01:58:54,300 --> 01:58:57,300
If I instead look out the window at a building like way in the

2040
01:58:57,300 --> 01:59:01,700
distance, off in Seattle somewhere and I take a step backwards its

2041
01:59:01,700 --> 01:59:03,700
size doesn't change at all right.

2042
01:59:05,300 --> 01:59:09,800
But since I happen to know in the game where I'm looking I know the

2043
01:59:09,800 --> 01:59:12,900
focal point is a particular point nations--and, the focal point.

2044
01:59:13,000 --> 01:59:13,800
I know the

2045
01:59:14,200 --> 01:59:16,100
Location we're looking at, right?

2046
01:59:16,100 --> 01:59:19,000
Where we're aiming the camera at I'm rotating around that.

2047
01:59:19,100 --> 01:59:20,700
I know how far away it is.

2048
01:59:21,000 --> 01:59:24,700
What I usually like to do to make camera controls more usable, is to

2049
01:59:24,700 --> 01:59:28,800
make the amount that I move be proportional to how far away I am.

2050
01:59:28,900 --> 01:59:32,000
So, once I get further away, I just will move more.

2051
01:59:32,100 --> 01:59:36,000
So at the amount of Zoom appears, relatively constant to the user,

2052
01:59:36,000 --> 01:59:38,800
even though we're moving the camera by drastically different amounts.

2053
01:59:39,000 --> 01:59:43,400
So what I do is I just multiplied by the distance away.

2054
01:59:44,300 --> 01:59:48,300
And then when I run it, now, you can see it's fairly uniform through

2055
01:59:48,300 --> 01:59:50,800
the whole degree, right?

2056
01:59:50,900 --> 01:59:54,000
And even when you get close in, it's not touchy, right?

2057
01:59:54,000 --> 01:59:58,300
It's still the same nice amount and if it's a little too much, you can

2058
01:59:58,300 --> 01:59:59,800
always just tune it down like maybe

2059
02:00:00,000 --> 02:00:06,400
Is a little better but that tuning constant now is is, is clean and

2060
02:00:06,400 --> 02:00:08,000
works through the whole range.

2061
02:00:08,000 --> 02:00:13,200
So you don't have to have it really sort of ugly.

2062
02:00:13,400 --> 02:00:17,200
This used to really make me grumpy in 3D packages like Max and Maya.

2063
02:00:17,200 --> 02:00:18,300
They didn't do that.

2064
02:00:18,400 --> 02:00:21,100
And so, you'd end up zooming in on something and you'd be here and you

2065
02:00:21,100 --> 02:00:24,300
want to zoom in a little more and rather than it being nice like this,

2066
02:00:24,300 --> 02:00:26,800
it would jump, it would just zoom to nothing you'd be like, go right

2067
02:00:26,800 --> 02:00:29,800
inside the object because you even just one pixel was this.

2068
02:00:30,000 --> 02:00:31,800
Huge increment in Z, right?

2069
02:00:31,800 --> 02:00:35,000
But as long as you always use the distance to the thing, you're

2070
02:00:35,000 --> 02:00:39,500
looking at to modify it you get a really nice clean zoom and that's

2071
02:00:39,500 --> 02:00:41,300
the way I think you should do it.

2072
02:00:41,300 --> 02:00:44,600
The reason I called it a poor man's differential equation is because

2073
02:00:44,600 --> 02:00:49,600
if you think about what's happening here, we're taking a value which

2074
02:00:49,600 --> 02:00:54,000
is the the distance away from the camera and we're modifying it using

2075
02:00:54,000 --> 02:00:54,700
itself.

2076
02:00:55,200 --> 02:00:59,800
Write the equation for the change in the dolly uses the

2077
02:01:00,000 --> 02:01:02,400
Value for the dolly in that equation.

2078
02:01:02,600 --> 02:01:03,800
Right here it is.

2079
02:01:04,900 --> 02:01:10,400
And so what happens is this is only instantaneously correct and the

2080
02:01:10,400 --> 02:01:11,800
fact that we're not

2081
02:01:13,900 --> 02:01:18,400
The fact that we're not sort of doing an actual differential equation.

2082
02:01:18,400 --> 02:01:23,000
There means that for one pixel of movement, we get one result for two

2083
02:01:23,000 --> 02:01:24,000
pixels of movement.

2084
02:01:24,100 --> 02:01:27,800
We will get a different result, then we would have gotten if we did to

2085
02:01:27,800 --> 02:01:30,300
one pixel movements of the mouse, right?

2086
02:01:30,300 --> 02:01:31,500
Which is kind of incorrect.

2087
02:01:31,500 --> 02:01:32,900
That's not probably what we want.

2088
02:01:33,000 --> 02:01:35,100
So what we really should do here is work out the differential

2089
02:01:35,100 --> 02:01:35,700
equation.

2090
02:01:36,200 --> 02:01:39,400
We're not going to do that with zero time left, and we probably don't

2091
02:01:39,400 --> 02:01:41,300
need to do that for a little bit until a little bit later.

2092
02:01:41,300 --> 02:01:43,400
Anyway, but that is just an

2093
02:01:45,600 --> 02:01:49,600
To folks out there, this should be an equation in e0 that would

2094
02:01:49,600 --> 02:01:51,300
produce the correct results.

2095
02:01:51,300 --> 02:01:54,700
No matter what mouse you did but that's a separate.

2096
02:02:07,700 --> 02:02:14,200
Okay, a slim Seer posts, a very good question and even though he posts

2097
02:02:14,200 --> 02:02:16,900
a very good question, he said he's preface it with sorry for being a

2098
02:02:16,900 --> 02:02:17,400
dummy.

2099
02:02:17,600 --> 02:02:20,600
However, I this you are in no way being a dummy.

2100
02:02:20,600 --> 02:02:22,000
This is a very good question.

2101
02:02:23,200 --> 02:02:27,000
It says, in the camera transform in 3D games.

2102
02:02:27,000 --> 02:02:30,800
As far as I've been watching tutorials, there's something called an up

2103
02:02:30,800 --> 02:02:31,400
Vector.

2104
02:02:31,600 --> 02:02:33,000
What is the purpose of it?

2105
02:02:33,100 --> 02:02:36,300
And do we have it in handmade hero since it's a

2106
02:02:36,400 --> 02:02:37,200
2D game.

2107
02:02:37,500 --> 02:02:39,000
I guess it's different.

2108
02:02:39,000 --> 02:02:40,800
Your explanations have been wonderful.

2109
02:02:40,800 --> 02:02:44,200
And I would love it if you could explain it, and also thanks for doing

2110
02:02:44,200 --> 02:02:45,900
EU friendly streams Kappa.

2111
02:02:47,300 --> 02:02:49,100
Since I read it in HEX.

2112
02:02:49,100 --> 02:02:49,800
Check, it's funny.

2113
02:02:49,800 --> 02:02:53,700
I always see Kappa written out instead of having the little face.

2114
02:02:53,700 --> 02:02:59,900
Anyway, no, that's a great question and the answer.

2115
02:03:00,000 --> 02:03:02,700
There is we absolutely do now have it in handmade hero because we are

2116
02:03:02,700 --> 02:03:03,900
using a fully 3D camera.

2117
02:03:03,900 --> 02:03:08,500
Even though our game is 2D just because I decided I wanted the full 3d

2118
02:03:08,500 --> 02:03:12,700
flexibility there and so we absolutely do have a thing that isn't up

2119
02:03:12,700 --> 02:03:13,200
Vector.

2120
02:03:13,300 --> 02:03:16,300
We're just not using it prescriptively and I'll explain exactly what

2121
02:03:16,300 --> 02:03:16,900
that means.

2122
02:03:18,700 --> 02:03:22,700
The reason that we didn't cover it when we were doing this, this

2123
02:03:23,100 --> 02:03:26,100
modification pasch is because we kind of already have enough, Vector

2124
02:03:26,100 --> 02:03:29,800
defined implicitly and I chose to use a rotational definition for

2125
02:03:30,000 --> 02:03:35,700
the camera is and so will will will sort of go through the other side

2126
02:03:35,700 --> 02:03:36,200
of that now.

2127
02:03:36,200 --> 02:03:38,000
So you can get the perspective on what that means.

2128
02:03:38,000 --> 02:03:39,300
Why would I care?

2129
02:03:39,300 --> 02:03:40,200
What an up Vector is?

2130
02:03:40,200 --> 02:03:42,400
What is you know, what's the deal there, right?

2131
02:03:45,000 --> 02:03:52,900
Okay, so when we need to define a camera in 3D, the answer to your

2132
02:03:52,900 --> 02:03:56,300
question is in some sense that you already understand what an up

2133
02:03:56,300 --> 02:03:56,900
Vector is?

2134
02:03:56,900 --> 02:03:59,200
We just didn't call it that, right?

2135
02:03:59,200 --> 02:04:01,800
You've already seen it laced.

2136
02:04:01,800 --> 02:04:04,400
Through all of the stuff we've been doing, we just never called it

2137
02:04:04,400 --> 02:04:04,600
out.

2138
02:04:04,600 --> 02:04:08,600
And so, all we really need to do now is to call it out and show which

2139
02:04:08,600 --> 02:04:11,900
part of this whole process it was and then you won't have to worry

2140
02:04:12,100 --> 02:04:14,600
wonder where that effector is coming in.

2141
02:04:14,800 --> 02:04:15,300
Right.

2142
02:04:15,700 --> 02:04:20,200
So remember what we said was we've got a camera transform.

2143
02:04:24,600 --> 02:04:26,600
In fact you know what, let me try to do this in the same word I did it

2144
02:04:26,600 --> 02:04:27,000
before.

2145
02:04:27,000 --> 02:04:28,300
I think I did it like this.

2146
02:04:38,600 --> 02:04:43,400
So remember, this, we have sort of this space where everything is

2147
02:04:43,400 --> 02:04:45,900
aligned to something, right?

2148
02:04:46,500 --> 02:04:49,200
And you know maybe we've got like I suppose, I was saying we have a

2149
02:04:49,200 --> 02:04:52,200
specifying a triangle or something, or maybe this is a camera or

2150
02:04:52,200 --> 02:04:52,900
whatever else.

2151
02:04:52,900 --> 02:04:53,500
Right?

2152
02:04:54,400 --> 02:04:57,700
But we have objects and they have a native coordinate system that

2153
02:04:57,700 --> 02:04:59,500
we're thinking about them being defined in.

2154
02:04:59,800 --> 02:05:03,500
And then we have some idea of them being placed out in the world

2155
02:05:03,500 --> 02:05:05,900
somewhere in some other way.

2156
02:05:07,200 --> 02:05:09,800
Right, their origin is displaced.

2157
02:05:09,800 --> 02:05:14,300
This is 000 cure, but here is some position that they have, right?

2158
02:05:14,900 --> 02:05:18,700
And so you know, this is how we might think of this, right?

2159
02:05:20,200 --> 02:05:22,900
And we talked about the object, transform is the thing that goes from

2160
02:05:22,900 --> 02:05:27,000
some rest space, where things are defined out into the world where we

2161
02:05:27,000 --> 02:05:29,700
have placed it, or into any coordinate system we want.

2162
02:05:29,700 --> 02:05:34,000
But we've described its placement in that coordinate system by a

2163
02:05:34,000 --> 02:05:35,300
transform, right?

2164
02:05:35,400 --> 02:05:36,700
And in our case that's typically the

2165
02:05:37,000 --> 02:05:39,700
But, you know, you could imagine having subspaces or intermediate

2166
02:05:39,700 --> 02:05:43,200
spaces or whatever you are in charge of how you define your own

2167
02:05:43,200 --> 02:05:46,900
spaces, you just have to describe describe transforms in those phases,

2168
02:05:46,900 --> 02:05:47,200
right?

2169
02:05:47,200 --> 02:05:49,700
And so, in our case, we've got a world space.

2170
02:05:49,700 --> 02:05:54,000
So we describe these X Y and Z axes in the world space, we describe

2171
02:05:54,000 --> 02:05:57,600
this point relative to the origin of the world space and, and there it

2172
02:05:57,600 --> 02:05:57,900
is.

2173
02:05:57,900 --> 02:05:58,100
Right?

2174
02:05:58,100 --> 02:05:59,900
And and more specifically, I guess we don't really even

2175
02:06:00,000 --> 02:06:00,300
Process.

2176
02:06:00,300 --> 02:06:02,600
We use Sims face, right?

2177
02:06:02,600 --> 02:06:05,200
That local, simulation region, where everything centered around.

2178
02:06:05,200 --> 02:06:07,100
The Simulation Center is really our space.

2179
02:06:07,300 --> 02:06:09,500
It's not World space for say, because World face would be the whole

2180
02:06:09,500 --> 02:06:09,900
game.

2181
02:06:10,000 --> 02:06:12,200
We actually don't use that coordinate system, right?

2182
02:06:12,300 --> 02:06:14,400
Because we map everything into a simulation region and do the

2183
02:06:14,400 --> 02:06:15,300
simulation there.

2184
02:06:15,900 --> 02:06:20,100
But anyway, that's the object, transform places things into some

2185
02:06:20,100 --> 02:06:20,400
space.

2186
02:06:20,400 --> 02:06:23,800
We care about the camera transforms, the opposite takes things, and

2187
02:06:23,800 --> 02:06:26,600
puts them back into a camera space.

2188
02:06:26,700 --> 02:06:29,900
Where we know that we are looking down the negative Z axis.

2189
02:06:30,000 --> 02:06:30,500
Taxes.

2190
02:06:30,500 --> 02:06:31,000
Right?

2191
02:06:31,000 --> 02:06:32,700
So curious where everything is that.

2192
02:06:32,700 --> 02:06:34,900
We can see anything that's back behind here.

2193
02:06:34,900 --> 02:06:35,900
We can't see right?

2194
02:06:35,900 --> 02:06:38,400
There's a clip playing an ear clip playing somewhere like you know,

2195
02:06:38,400 --> 02:06:43,300
maybe right here a little bit slightly, you know, 0.2 - down the Z

2196
02:06:43,300 --> 02:06:44,000
Axis or something.

2197
02:06:44,000 --> 02:06:44,800
There's a clip playing there.

2198
02:06:44,800 --> 02:06:46,600
We can't see anything in front of it.

2199
02:06:46,600 --> 02:06:47,200
There's a far clip.

2200
02:06:47,200 --> 02:06:49,600
Playing way out in the distance, we can't see past or something.

2201
02:06:49,600 --> 02:06:53,000
So there's a little bit of that but otherwise everything back behind

2202
02:06:53,000 --> 02:06:53,700
that XY plane.

2203
02:06:53,700 --> 02:06:55,200
We can see right

2204
02:06:56,500 --> 02:06:57,800
And that's our camera transform.

2205
02:06:58,800 --> 02:07:01,300
So now the question becomes what is the up Vector?

2206
02:07:01,700 --> 02:07:06,100
Well, the answer is that the up Vector, is this Vector right here, in

2207
02:07:06,100 --> 02:07:08,300
the case of the camera transform, right?

2208
02:07:09,000 --> 02:07:09,800
Why is that?

2209
02:07:09,900 --> 02:07:12,700
Because when we construct the camera transform, what we do is we

2210
02:07:12,700 --> 02:07:17,700
provide a world space, placement Matrix basically right for the camera

2211
02:07:18,000 --> 02:07:20,800
and we're sort of inverting that to get the camera transform.

2212
02:07:20,900 --> 02:07:24,300
So we have the cameras placement which is where it is in the world.

2213
02:07:24,300 --> 02:07:26,100
We have the cameras axes in the world.

2214
02:07:26,300 --> 02:07:26,500
Z.

2215
02:07:26,500 --> 02:07:31,200
The, oops, that should have been an X, the X, the Y, and the Z, right?

2216
02:07:31,400 --> 02:07:34,600
And then we're making a transform that takes everything in the world.

2217
02:07:34,600 --> 02:07:37,700
So all the stuff that was out here, and we're moving it, so that it's

2218
02:07:37,700 --> 02:07:38,900
all right here, right?

2219
02:07:38,900 --> 02:07:41,300
We're kind of like, transforming everything back in the cameras face

2220
02:07:42,000 --> 02:07:46,700
and to do that, we need those axes, those axes correspond to real

2221
02:07:46,700 --> 02:07:47,200
things.

2222
02:07:47,200 --> 02:07:51,000
In the cameras, conceptualization of the world, the Z axis is the

2223
02:07:51,000 --> 02:07:52,600
depth axis, right?

2224
02:07:52,600 --> 02:07:54,100
And it's the viewing Direction.

2225
02:07:54,100 --> 02:07:56,100
It's the direction we're viewing in is as

2226
02:07:56,200 --> 02:07:56,900
Z axis.

2227
02:07:56,900 --> 02:08:00,900
So you could call this like the view direction if you wanted to write.

2228
02:08:02,600 --> 02:08:06,400
We have a right Vector, that's the x-axis, right?

2229
02:08:06,400 --> 02:08:10,200
Because that maps to this, that maps to write in screen space.

2230
02:08:10,400 --> 02:08:14,600
So this is the right vector and furthermore, we have a vector that

2231
02:08:14,600 --> 02:08:16,600
maps to what is up in screen space.

2232
02:08:16,600 --> 02:08:17,700
That is the y axis.

2233
02:08:17,900 --> 02:08:20,800
That is the up Vector, right?

2234
02:08:22,900 --> 02:08:23,600
For the camera.

2235
02:08:24,500 --> 02:08:26,000
So conceptually speaking.

2236
02:08:26,200 --> 02:08:29,000
We actually already sort of know what the up Vector is.

2237
02:08:29,200 --> 02:08:31,900
It is the y axis of the camera, right?

2238
02:08:32,000 --> 02:08:33,100
That camera object.

2239
02:08:33,200 --> 02:08:36,400
Its y-axis is the up Vector, right?

2240
02:08:36,500 --> 02:08:39,800
And we use that effector to create the inverse transform by stuffing

2241
02:08:39,800 --> 02:08:45,500
the up Vector into the second row of the camera, transform right into

2242
02:08:45,500 --> 02:08:46,800
the wairau.

2243
02:08:46,800 --> 02:08:48,600
Not the column because that would be an odd transform.

2244
02:08:48,700 --> 02:08:49,700
The wairau.

2245
02:08:50,500 --> 02:08:52,600
That is where we stuff that up Vector, and that

2246
02:08:52,700 --> 02:08:57,000
That dot product with that Vector transforms things into the correct

2247
02:08:57,000 --> 02:08:57,300
space.

2248
02:08:57,300 --> 02:08:59,800
So that now, this Vector is the

2249
02:09:00,000 --> 02:09:03,300
Actual Cardinal Y axis which is what we need for that projection,

2250
02:09:03,500 --> 02:09:04,000
right?

2251
02:09:04,400 --> 02:09:06,000
So this is the up Vector.

2252
02:09:07,900 --> 02:09:09,600
But that's not the complete story.

2253
02:09:09,700 --> 02:09:13,400
The reason that's not the complete story is because you then would

2254
02:09:13,400 --> 02:09:13,900
very naturally.

2255
02:09:13,900 --> 02:09:18,400
Ask well, why are people talking about that in 3D?

2256
02:09:18,500 --> 02:09:20,200
What do they really mean by up Vector?

2257
02:09:20,200 --> 02:09:21,700
Why is that coming up?

2258
02:09:22,100 --> 02:09:27,900
Pun intended I suppose and the answer is because of how you might

2259
02:09:27,900 --> 02:09:32,300
construct, a camera transform, if you don't already have the camera

2260
02:09:32,300 --> 02:09:33,800
object itself, right?

2261
02:09:34,800 --> 02:09:38,900
And let me tell you what I mean by that, this picture of the world is

2262
02:09:38,900 --> 02:09:40,800
very sensible, right?

2263
02:09:41,000 --> 02:09:45,400
It's saying I've got an object somewhere in the world, right?

2264
02:09:45,500 --> 02:09:49,100
And I've got a camera somewhere in the world, that's a set of axes

2265
02:09:49,600 --> 02:09:50,700
that look like this.

2266
02:09:52,800 --> 02:09:53,300
Right?

2267
02:09:53,400 --> 02:09:57,200
And I know that I'm viewing down the negative Z axis of this object

2268
02:09:57,200 --> 02:09:58,500
and I know it's got an origin.

2269
02:09:58,800 --> 02:10:02,700
So if I have this already I know I can make the camera transform that

2270
02:10:02,700 --> 02:10:05,800
views, the world, whatever these other objects in the world, are all

2271
02:10:05,800 --> 02:10:07,000
the objects that are there.

2272
02:10:07,200 --> 02:10:07,900
Whatever they are.

2273
02:10:07,900 --> 02:10:09,300
I don't care right?

2274
02:10:09,600 --> 02:10:11,400
I can view all of them at this camera transform.

2275
02:10:11,400 --> 02:10:15,300
And I know what the up Vector is already implicitly because it's all

2276
02:10:15,300 --> 02:10:16,300
defined for me.

2277
02:10:16,500 --> 02:10:18,500
I have all this stuff already, ready.

2278
02:10:19,700 --> 02:10:20,200
Right?

2279
02:10:21,800 --> 02:10:24,800
But where people start to talk about the up Vector, more explicitly

2280
02:10:24,800 --> 02:10:25,000
in.

2281
02:10:25,000 --> 02:10:28,900
Where I'm sure you've been seeing it is because what if I didn't have

2282
02:10:28,900 --> 02:10:33,200
that, what if I just had a point in the world that I wanted to view

2283
02:10:33,200 --> 02:10:36,800
from and I didn't know anything else, right?

2284
02:10:36,900 --> 02:10:44,800
I had no idea what where the axes were, what the axes were right.

2285
02:10:45,600 --> 02:10:49,000
So imagine instead of this nice picture where everything is clean

2286
02:10:49,000 --> 02:10:49,400
here.

2287
02:10:49,500 --> 02:10:52,200
Suppose I don't have any of these access.

2288
02:10:52,200 --> 02:10:54,100
All I have is pee, right?

2289
02:10:54,100 --> 02:10:55,100
That's all I've got.

2290
02:10:56,500 --> 02:11:00,700
And I'm trying to view the world using that knowledge, right?

2291
02:11:01,300 --> 02:11:03,400
How would I construct this camera transform?

2292
02:11:03,500 --> 02:11:06,100
Well, I know I need a bunch of things.

2293
02:11:06,400 --> 02:11:15,100
Okay, I need to be able to produce three axes from nothing, right?

2294
02:11:15,300 --> 02:11:18,200
So the question is what is the something I can have?

2295
02:11:18,200 --> 02:11:19,900
That will allow me to produce those axes.

2296
02:11:20,300 --> 02:11:22,500
The point where the camera is is known.

2297
02:11:23,600 --> 02:11:25,600
So, oftentimes when people say is well, okay,

2298
02:11:26,800 --> 02:11:27,900
I need something to look at.

2299
02:11:28,300 --> 02:11:30,600
So give me a Target, right?

2300
02:11:33,400 --> 02:11:34,700
And I mean, I'll just write that is T.

2301
02:11:35,500 --> 02:11:36,900
So give me a Target point.

2302
02:11:37,700 --> 02:11:42,100
Now I know the vector to the Target point, right?

2303
02:11:42,400 --> 02:11:43,000
What does that?

2304
02:11:43,000 --> 02:11:43,400
Give me?

2305
02:11:43,400 --> 02:11:47,400
Well, that gives me my Z axis, right, because I know the Z axis is

2306
02:11:47,400 --> 02:11:48,700
what I'm looking down.

2307
02:11:51,800 --> 02:11:53,900
So, all I need to do to find my Z axis.

2308
02:11:53,900 --> 02:11:57,400
In this construction, is say the Z axis, right?

2309
02:11:57,700 --> 02:11:59,100
Is just going to be

2310
02:12:00,400 --> 02:12:01,000
Direction.

2311
02:12:01,000 --> 02:12:02,700
I was viewing in, right?

2312
02:12:03,100 --> 02:12:06,000
I want it to go backwards because again, I'm looking down the negative

2313
02:12:06,000 --> 02:12:08,100
Z so I really want P.

2314
02:12:08,100 --> 02:12:12,000
Minus t, which gives me this Vector here, right?

2315
02:12:12,200 --> 02:12:16,000
And that's almost a z axis but it's not unit length, right?

2316
02:12:16,100 --> 02:12:17,600
I want to be unit length, so I need P.

2317
02:12:17,600 --> 02:12:22,600
Minus t and I just need to divide by the length of P minus t, right?

2318
02:12:22,600 --> 02:12:25,100
So it's normalized, that's the Z axis.

2319
02:12:27,400 --> 02:12:29,200
Good, right.

2320
02:12:29,400 --> 02:12:30,100
That's good.

2321
02:12:31,500 --> 02:12:32,600
Off to a good start.

2322
02:12:32,700 --> 02:12:36,800
Problem is where my other two axes going to come from, right?

2323
02:12:36,800 --> 02:12:37,200
Where am I?

2324
02:12:37,200 --> 02:12:38,400
Other 2x is going to come from.

2325
02:12:39,800 --> 02:12:46,100
Once I have the Z axis, I do know the plane in which the other two

2326
02:12:46,100 --> 02:12:48,100
axes must be, right?

2327
02:12:48,200 --> 02:12:53,100
Because the other two axes have to fall into this plane, right?

2328
02:12:53,500 --> 02:12:58,800
The the dot product of those two other vectors with Z must be 0,

2329
02:12:58,900 --> 02:12:59,300
right?

2330
02:12:59,300 --> 02:13:02,600
Because it is orthogonal this camera Matrix, right?

2331
02:13:02,700 --> 02:13:06,800
Remember from back, when it's orthogonal, what does that mean, right?

2332
02:13:06,800 --> 02:13:09,400
It means that when I draw these out, when I'm looking at these

2333
02:13:09,600 --> 02:13:13,600
There's right angles between every last one of them, right?

2334
02:13:13,600 --> 02:13:15,300
Every last one of these guys,

2335
02:13:17,500 --> 02:13:18,900
Is orthogonal to the other.

2336
02:13:21,200 --> 02:13:21,800
No, I'm saying.

2337
02:13:22,400 --> 02:13:26,700
So that means that, if I know the Z axis, I know the plane in which

2338
02:13:26,700 --> 02:13:31,400
the X and y-axis exist, but what I don't know.

2339
02:13:31,400 --> 02:13:32,600
Is there spin?

2340
02:13:33,900 --> 02:13:38,100
Okay, so I know they have to be in this plane but they could look like

2341
02:13:38,100 --> 02:13:38,500
that.

2342
02:13:38,500 --> 02:13:40,000
You know, they could look like this.

2343
02:13:40,300 --> 02:13:42,300
They could look like that, right.

2344
02:13:42,400 --> 02:13:43,900
I know they're at right angles to each other.

2345
02:13:43,900 --> 02:13:46,400
So once I knew one of them I could find the other one.

2346
02:13:47,700 --> 02:13:50,700
But if I don't know, either of them, there's an angle that I don't

2347
02:13:50,700 --> 02:13:51,200
know.

2348
02:13:51,400 --> 02:13:53,500
I just don't know how they're spun.

2349
02:13:53,700 --> 02:13:58,600
So I can make up an X and Y axis, but it would be any random skew of

2350
02:13:58,600 --> 02:13:58,800
that.

2351
02:13:58,800 --> 02:14:03,400
And if I'm trying to define a camera, I don't want it to be.

2352
02:14:03,800 --> 02:14:04,200
Tilted.

2353
02:14:04,200 --> 02:14:06,300
Because think about what that angle is.

2354
02:14:06,400 --> 02:14:08,000
What's that angle, right?

2355
02:14:08,000 --> 02:14:09,900
I've got the Z, I'm looking down the Z.

2356
02:14:09,900 --> 02:14:10,800
I got my X and Y axis.

2357
02:14:11,000 --> 02:14:11,400
What is that?

2358
02:14:11,400 --> 02:14:13,900
Angle its role, right?

2359
02:14:14,400 --> 02:14:19,800
So, if I don't pick the right role for my camera, I'm going to be

2360
02:14:19,800 --> 02:14:22,400
viewing the world in some totally random way.

2361
02:14:22,600 --> 02:14:24,900
And of course, role is an actual parameter.

2362
02:14:24,900 --> 02:14:28,000
We want to control, sometimes you want to view the world rotated.

2363
02:14:28,300 --> 02:14:32,800
So, what that means is, we need one extra piece of information to

2364
02:14:32,800 --> 02:14:33,500
Define.

2365
02:14:33,600 --> 02:14:33,900
Fine.

2366
02:14:35,300 --> 02:14:39,500
What the X and y-axes look like relative to the Z axis.

2367
02:14:40,200 --> 02:14:43,000
And that is where the up Vector comes in.

2368
02:14:43,600 --> 02:14:46,700
There's more than one way you can define an up Vector.

2369
02:14:47,800 --> 02:14:52,500
But it's basically a way of specifying what those other two axes

2370
02:14:52,500 --> 02:14:55,800
should be, once we can find the Z axis because we can always find the

2371
02:14:55,800 --> 02:14:56,400
Z axis.

2372
02:14:56,500 --> 02:14:59,300
If we've got a Target, the only time you can't find a tax rate of

2373
02:14:59,300 --> 02:14:59,800
fire, is it?

2374
02:15:00,000 --> 02:15:02,400
Sitting right on top of the target, but hey guess what?

2375
02:15:02,400 --> 02:15:02,800
You can't.

2376
02:15:02,800 --> 02:15:05,000
Look at something if you're infinitely close to it, right?

2377
02:15:05,000 --> 02:15:06,200
If you're right on top of it.

2378
02:15:07,500 --> 02:15:11,300
So that's usually, okay, write that degeneracy should never actually

2379
02:15:11,300 --> 02:15:14,000
occur in any practical scenario because it means you're doing

2380
02:15:14,000 --> 02:15:15,400
something, you fundamentally can't do.

2381
02:15:15,500 --> 02:15:19,100
So you could just if around that and just set the camera to some, you

2382
02:15:19,100 --> 02:15:23,700
know, known identity configuration or something.

2383
02:15:25,100 --> 02:15:27,900
So what people often say when they say effector is, they could mean

2384
02:15:27,900 --> 02:15:31,700
multiple things, one thing they might mean about an up, Vector is just

2385
02:15:31,700 --> 02:15:32,800
some vector.

2386
02:15:34,600 --> 02:15:39,000
Which says a sense of up which can be used to generate the X and

2387
02:15:39,000 --> 02:15:42,000
y-axes that's one thing they can mean by it.

2388
02:15:42,500 --> 02:15:44,600
So it can be a sense of up Vector.

2389
02:15:44,600 --> 02:15:46,100
And I'll tell you what that means in a second.

2390
02:15:46,300 --> 02:15:50,300
The other thing, they might mean is just no, I actually need the

2391
02:15:50,300 --> 02:15:51,600
y-axis, right?

2392
02:15:52,900 --> 02:15:56,100
So if they say we actually are specifying the y axis as the up to the

2393
02:15:56,100 --> 02:15:58,100
camera, all that's doing is saying, hey.

2394
02:15:58,100 --> 02:16:01,700
All right, I'm going to tell you what that y Vector is.

2395
02:16:02,000 --> 02:16:03,700
So now that you know that you

2396
02:16:03,800 --> 02:16:06,900
Trivially produce the x-axis, how you can produce it with the cross

2397
02:16:06,900 --> 02:16:07,600
product.

2398
02:16:11,500 --> 02:16:13,900
I don't remember if we've covered that on handmade hero we could cover

2399
02:16:13,900 --> 02:16:15,600
that will cover that maybe later.

2400
02:16:16,100 --> 02:16:18,000
I don't want to talk right now, because we're a bit, we're out of

2401
02:16:18,000 --> 02:16:18,500
time.

2402
02:16:19,200 --> 02:16:23,200
But with the cross product, the cross product lets you do is produce a

2403
02:16:23,200 --> 02:16:26,100
vector, that's orthogonal to two other vectors, right?

2404
02:16:26,700 --> 02:16:31,600
So basically, if I say the x axis, cross, the y-axis equals the Z

2405
02:16:31,600 --> 02:16:32,900
axis, right?

2406
02:16:32,900 --> 02:16:34,100
This cross product here.

2407
02:16:35,900 --> 02:16:39,799
What that does is it says, if you take two vectors and cross them, you

2408
02:16:39,799 --> 02:16:44,799
get the vector that comes out of their plane, in the order of the

2409
02:16:44,799 --> 02:16:46,500
Cross, via the right-hand rule.

2410
02:16:46,600 --> 02:16:51,700
So, if I read in this order, if I say x, cross y, I am imagining

2411
02:16:51,799 --> 02:16:55,299
rolling my fingers from X to Y and seeing, what direction?

2412
02:16:55,299 --> 02:16:56,299
The thumb comes out.

2413
02:16:56,400 --> 02:16:59,000
That's the Z axis, right?

2414
02:16:59,700 --> 02:17:02,799
So the cross product, will find those for you, which means that if I

2415
02:17:02,799 --> 02:17:05,000
know that X cross y, equals z i can

2416
02:17:05,100 --> 02:17:09,400
Also do the same thing if I specify a z and a why I know that y cross

2417
02:17:09,400 --> 02:17:13,400
Z will equal x y because I roll my fingers from y to Z thumb points,

2418
02:17:13,400 --> 02:17:14,299
out the x axis.

2419
02:17:14,400 --> 02:17:18,000
So y cross Z equals x, right?

2420
02:17:19,400 --> 02:17:24,799
So if you were to specify the up, Vector, and that is actually why,

2421
02:17:24,799 --> 02:17:26,799
then I know why cross equals x?

2422
02:17:26,799 --> 02:17:30,100
I now have all my axes, I found the Z with this equation.

2423
02:17:30,200 --> 02:17:34,700
I found the X with this equation and the why was specified.

2424
02:17:34,700 --> 02:17:35,000
So I

2425
02:17:35,100 --> 02:17:40,700
Ever needed to find it at all, right, so that's one way, another way

2426
02:17:40,700 --> 02:17:45,900
of doing it is has a adds an additional degeneracy, but it makes it a

2427
02:17:45,900 --> 02:17:46,700
lot easier to use.

2428
02:17:47,400 --> 02:17:50,299
Remember, in this case, what that means is the user whoever's using

2429
02:17:50,299 --> 02:17:53,400
this camera code has to track the up Vector the entire time.

2430
02:17:53,500 --> 02:17:57,400
So, as they move the Target around, if they pair pitching down on the

2431
02:17:57,400 --> 02:17:59,799
Target that y vector,

2432
02:18:00,000 --> 02:18:03,200
Has to be pitched properly to match the pitch of the target.

2433
02:18:03,600 --> 02:18:07,700
So it's placing extra work on them, so it doesn't really necessarily

2434
02:18:07,700 --> 02:18:08,100
help.

2435
02:18:08,100 --> 02:18:11,299
Give you the whole cloth version of just give me a point, give me a

2436
02:18:11,299 --> 02:18:13,200
Target and that's all I want.

2437
02:18:13,700 --> 02:18:14,799
Generate the camera out of it.

2438
02:18:16,200 --> 02:18:19,700
So, another way people, use the term up actor is to talk about a sense

2439
02:18:19,700 --> 02:18:23,200
of up Vector, what a sense of up Vector is it's just saying what

2440
02:18:23,200 --> 02:18:27,700
direction is up in general, but in the general case, what do I mean?

2441
02:18:27,700 --> 02:18:29,299
When I say up, right?

2442
02:18:29,299 --> 02:18:29,799
And so in

2443
02:18:30,000 --> 02:18:32,600
Are in our world, that's the Z axis, right?

2444
02:18:32,799 --> 02:18:34,100
Our general sense of up as world.

2445
02:18:34,100 --> 02:18:36,000
Z-axis, it's 0, 0, 1.

2446
02:18:36,500 --> 02:18:38,000
That's our sense of up, Vector.

2447
02:18:38,799 --> 02:18:40,200
How does that help us in this case?

2448
02:18:40,700 --> 02:18:43,900
Well, the reason that it helps us in this case is because our sense of

2449
02:18:43,900 --> 02:18:45,600
up Vector gives us another Vector.

2450
02:18:45,700 --> 02:18:50,100
We can use to cross to produce the x-axis, and then the y-axis.

2451
02:18:50,100 --> 02:18:51,600
All right, how does that work again?

2452
02:18:51,600 --> 02:18:54,400
I'm sorry, we're a little short on time here, so sexplanations little

2453
02:18:54,400 --> 02:18:54,900
bit truncated.

2454
02:18:54,900 --> 02:18:55,900
Hopefully it's helping.

2455
02:18:57,600 --> 02:18:59,900
So, what happens here, when we take a look,

2456
02:19:00,000 --> 02:19:01,500
How were viewing things?

2457
02:19:01,500 --> 02:19:05,799
Right is I have a point in the world and I'm viewing towards a Target

2458
02:19:05,799 --> 02:19:07,000
in the world, right?

2459
02:19:07,299 --> 02:19:11,000
And my Z axis is coming out this way, which I know I can find question

2460
02:19:11,000 --> 02:19:12,500
is, how do I find the other axes?

2461
02:19:12,500 --> 02:19:16,299
Well, I know that, the the right Vector must be pointing out here

2462
02:19:16,299 --> 02:19:16,799
somewhere.

2463
02:19:16,799 --> 02:19:18,600
The question is, how do I find with that, right?

2464
02:19:18,600 --> 02:19:21,299
Vector is well, if you imagine the world,

2465
02:19:22,500 --> 02:19:24,000
Space looking like this.

2466
02:19:24,000 --> 02:19:24,600
Let's say.

2467
02:19:30,900 --> 02:19:32,600
I guess that's not really our world, is it?

2468
02:19:33,600 --> 02:19:34,600
That's more like our older.

2469
02:19:34,600 --> 02:19:37,200
Maybe that's more like our old.

2470
02:19:41,600 --> 02:19:44,100
So if you imagine the world looking like this, right?

2471
02:19:44,700 --> 02:19:48,800
And I'm trying to look down on something here and so I end up in a

2472
02:19:48,800 --> 02:19:52,200
situation where, you know, I'm looking down on something like this.

2473
02:19:52,800 --> 02:19:55,200
So I'm up here, here's my camera position.

2474
02:19:55,200 --> 02:19:57,000
Here's the Target, right?

2475
02:19:57,000 --> 02:19:58,100
And I'm looking down on it.

2476
02:19:59,900 --> 02:20:05,800
Well, I want to be able to find what my x-axis is here for the camera.

2477
02:20:07,100 --> 02:20:11,100
And I don't know the y axis, I don't really know anything, right?

2478
02:20:11,100 --> 02:20:15,300
I don't know anything other than this one Z axis here that I can

2479
02:20:15,500 --> 02:20:16,400
compute.

2480
02:20:16,700 --> 02:20:21,800
Well, if I was to have an idea of what should be up, right?

2481
02:20:21,800 --> 02:20:25,100
So we're basically saying there's a there's a standard way that the

2482
02:20:25,100 --> 02:20:29,200
user tends to want to view the world and they want up to

2483
02:20:29,400 --> 02:20:30,300
Like up.

2484
02:20:30,300 --> 02:20:35,400
So in general I don't want to roll my view at.

2485
02:20:35,400 --> 02:20:39,900
All right, I want to produce a view where up is up.

2486
02:20:40,000 --> 02:20:43,700
And so no matter how I'm viewing things, I'm always still going to

2487
02:20:43,700 --> 02:20:47,200
keep my orientation as upward as possible, right?

2488
02:20:47,400 --> 02:20:51,100
So I'm never going to intentionally do this when I'm creating these

2489
02:20:51,100 --> 02:20:52,700
these views, right?

2490
02:20:54,000 --> 02:20:57,000
Then what I can do is say well if I've got a general sense of up

2491
02:20:57,000 --> 02:20:59,100
Vector which in this case is z i can

2492
02:20:59,300 --> 02:20:59,900
Imagine taking.

2493
02:21:00,000 --> 02:21:03,500
A cross product of that up, Vector, right?

2494
02:21:03,600 --> 02:21:10,300
With the Z axis, that will give me my ex for the camera.

2495
02:21:10,800 --> 02:21:11,300
Right?

2496
02:21:11,600 --> 02:21:12,300
Why?

2497
02:21:12,400 --> 02:21:14,700
Because those two are in a plane with each other.

2498
02:21:14,800 --> 02:21:19,800
Remember, the tilt of the camera is just how high, however, high up.

2499
02:21:19,800 --> 02:21:21,500
I'm going to look down on something.

2500
02:21:22,100 --> 02:21:26,100
If I take a vector that's pointed upwards, and I'll have my Vector,

2501
02:21:26,100 --> 02:21:29,900
that's tilted when I cross those two, I'm going to get something.

2502
02:21:30,000 --> 02:21:31,800
Thing that goes out to the right.

2503
02:21:32,900 --> 02:21:37,400
Based on my view direction, right, with no role because those are both

2504
02:21:37,400 --> 02:21:40,300
in a plane and I'm producing the vector, the comes out of that plane,

2505
02:21:40,800 --> 02:21:41,300
right?

2506
02:21:41,400 --> 02:21:43,700
So what I do is I take my up Vector

2507
02:21:45,500 --> 02:21:46,700
And I cross it with my Z.

2508
02:21:50,200 --> 02:21:57,500
And that gives you my ex right now, I have a z and an X Direction.

2509
02:21:59,400 --> 02:22:05,300
So, I can just do the process one more time to get my y, right?

2510
02:22:05,600 --> 02:22:08,400
Because I know again, from looking at the diagram

2511
02:22:14,800 --> 02:22:21,500
If I wanted to produce the y-axis, I could simply take Z cross X.

2512
02:22:21,500 --> 02:22:25,900
Remember, curl, your hands from the Z axis, to the x axis, and the Y

2513
02:22:26,000 --> 02:22:27,700
should come out the thumb, right.

2514
02:22:28,300 --> 02:22:35,500
I can just do Z cross X and that will give me my y so that gives me

2515
02:22:35,500 --> 02:22:37,100
the complete equation.

2516
02:22:45,000 --> 02:22:45,500
Right?

2517
02:22:45,900 --> 02:22:51,400
I compute Z first, then I compute X get using the up Vector and then I

2518
02:22:51,400 --> 02:22:55,600
compute y, given the the Z Vector.

2519
02:22:56,100 --> 02:22:56,400
I'm sorry.

2520
02:22:56,400 --> 02:22:57,700
Given the X Factor I just solved.

2521
02:22:57,800 --> 02:23:00,900
Now the cross product is not normalized.

2522
02:23:01,700 --> 02:23:04,900
It's actually proportional to the sine of the angle between the

2523
02:23:04,900 --> 02:23:05,400
vectors.

2524
02:23:06,000 --> 02:23:08,800
So technically this is not actually the case.

2525
02:23:09,600 --> 02:23:14,200
The X Vector is actually up cross Z over the length of up cross Z

2526
02:23:15,000 --> 02:23:15,300
Right?

2527
02:23:15,300 --> 02:23:16,200
Just like this one.

2528
02:23:16,400 --> 02:23:18,400
So these two have to be renormalized.

2529
02:23:18,800 --> 02:23:19,600
That makes sense.

2530
02:23:20,900 --> 02:23:24,600
But that gives us the complete set of equations for generating.

2531
02:23:24,600 --> 02:23:28,100
The the look at this is typically called a look at Matrix.

2532
02:23:29,200 --> 02:23:33,300
Or a look at camera that gives us the complete set of equations for a

2533
02:23:33,300 --> 02:23:36,200
look at there they are, right?

2534
02:23:36,300 --> 02:23:38,900
The Z is p minus t over over the length of P.

2535
02:23:38,900 --> 02:23:39,600
Minus t.

2536
02:23:40,100 --> 02:23:45,200
The x is up cross Z over length of up cross Z.

2537
02:23:45,200 --> 02:23:50,000
So, just normalize again and then Y is z cross X.

2538
02:23:50,000 --> 02:23:53,100
And of course, those two are already normal vectors.

2539
02:23:54,100 --> 02:23:58,600
So given that their normal vectors, you don't have to renormalize

2540
02:23:58,600 --> 02:23:58,800
them.

2541
02:23:58,900 --> 02:23:59,500
because this

2542
02:24:00,000 --> 02:24:03,100
There or they're orthogonal to each other and their unit length.

2543
02:24:03,600 --> 02:24:07,700
So, the equation for the cross product apis come out to length one

2544
02:24:07,700 --> 02:24:12,400
anyway, but they go so sorry for the relatively compressed

2545
02:24:12,400 --> 02:24:12,900
explanation.

2546
02:24:12,900 --> 02:24:14,200
Again is trying to finish up.

2547
02:24:14,500 --> 02:24:15,800
Does that make sense?

2548
02:24:18,600 --> 02:24:20,100
to whoever asked,

2549
02:24:31,000 --> 02:24:32,000
Ace Flames here.

2550
02:24:36,100 --> 02:24:36,500
Okay.

2551
02:24:36,500 --> 02:24:37,700
Sounds like that was good.

2552
02:24:38,500 --> 02:24:40,100
All right, so I don't have time for any other questions.

2553
02:24:40,100 --> 02:24:43,400
I'll just quickly, scan to make sure that there are no other questions

2554
02:24:43,400 --> 02:24:46,000
that are like super important questions that need to be answered right

2555
02:24:46,000 --> 02:24:46,500
now.

2556
02:24:48,000 --> 02:24:50,400
Would it be weird to change the focal length as the pitch changes or

2557
02:24:50,400 --> 02:24:50,800
should the focal?

2558
02:24:50,800 --> 02:24:52,100
Length always stay constant?

2559
02:24:52,300 --> 02:24:53,800
The focal length should always stay constant.

2560
02:24:53,800 --> 02:24:55,700
If the focal length doesn't stay constant.

2561
02:24:55,700 --> 02:24:57,500
You get this effect

2562
02:25:05,200 --> 02:25:07,200
This is what happens when you change the focal length.

2563
02:25:08,600 --> 02:25:13,600
So if you want that effect you can definitely change the focal length.

2564
02:25:13,600 --> 02:25:15,600
That's called a dolly zoom in cinematography.

2565
02:25:16,100 --> 02:25:18,200
But basically what it is is when you change the focal length of the

2566
02:25:18,200 --> 02:25:23,500
lens, while the camera is moving, if you match the two, you get that

2567
02:25:23,700 --> 02:25:29,600
sort of background compression change, but if you do it during pitch,

2568
02:25:29,600 --> 02:25:32,900
it would make the world stretch out as you pitched it would look like

2569
02:25:32,900 --> 02:25:33,400
that.

2570
02:25:33,900 --> 02:25:34,800
And if you want that effect,

2571
02:25:35,000 --> 02:25:37,500
Maybe you do, but it's probably going to be noticeable User.

2572
02:25:37,500 --> 02:25:39,300
It's not going to be something they wouldn't notice.

2573
02:25:39,300 --> 02:25:43,400
I don't think unless it was a very small pitch change perhaps but, you

2574
02:25:43,400 --> 02:25:45,000
know, maybe maybe you want that out now,

2575
02:25:47,600 --> 02:25:51,000
Alright, and then minor point, you called your variables pitch, an

2576
02:25:51,000 --> 02:25:53,000
orbit should probably be pitch and yaw.

2577
02:25:53,700 --> 02:25:57,300
Well, you know, I don't really like it to be y'all usually because

2578
02:25:57,300 --> 02:26:00,500
y'all makes me think of going like that, not like that.

2579
02:26:00,500 --> 02:26:02,300
So that's why I typically call it orbit.

2580
02:26:04,000 --> 02:26:05,800
I really want better terms for those.

2581
02:26:05,800 --> 02:26:07,600
I want it to be like

2582
02:26:09,100 --> 02:26:13,500
A word for orbital pitch and orbital yaw, which maybe, maybe the term

2583
02:26:13,500 --> 02:26:15,300
should be orbital pitching Arbol you, I don't know.

2584
02:26:15,300 --> 02:26:20,000
But that's why I never really liked the names of those if that makes

2585
02:26:20,000 --> 02:26:20,200
sense.

2586
02:26:20,400 --> 02:26:26,000
Anyway, all right, so let's go ahead and wrap it up.

2587
02:26:33,100 --> 02:26:35,100
Thank you everybody for joining me for this episode of handmade here.

2588
02:26:35,100 --> 02:26:36,300
It's been a pleasure coding with you.

2589
02:26:36,300 --> 02:26:39,600
As always, if you would like to follow along at home, you can always

2590
02:26:39,600 --> 02:26:41,900
pre-order the game on handmade hero dot org and it comes to the source

2591
02:26:41,900 --> 02:26:43,900
code so you can experiment with it yourself.

2592
02:26:44,600 --> 02:26:46,900
We also have a forum site, you can go to if you want to ask questions

2593
02:26:46,900 --> 02:26:50,000
a patreon page, if you want to support the video series, schedule bot.

2594
02:26:50,000 --> 02:26:52,900
If you would like to know when we're going to be live and an episode

2595
02:26:52,900 --> 02:26:56,700
guide that you can use to catch up on past episodes, that's it for

2596
02:26:56,700 --> 02:26:57,100
this week.

2597
02:26:57,100 --> 02:26:58,600
I'll be back next weekend with more.

2598
02:26:58,600 --> 02:26:59,300
Handmade hero.

2599
02:26:59,300 --> 02:26:59,800
We will go ahead.

2600
02:27:00,000 --> 02:27:01,400
Start to try and use our Z buffer.

2601
02:27:01,400 --> 02:27:06,100
That we worked so hard to enable in our 3D pipeline now so we can

2602
02:27:06,100 --> 02:27:09,800
start to have sorting without actually having to have sorting so

2603
02:27:09,800 --> 02:27:10,500
that's about it.

2604
02:27:10,600 --> 02:27:13,300
Hope to see you back here for that until then have fun programming and

2605
02:27:13,300 --> 02:27:14,800
I'll see y'all on the internet.

2606
02:27:14,800 --> 02:27:15,700
Take it easy everyone.

