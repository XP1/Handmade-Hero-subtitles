1
00:00:01,800 --> 00:00:07,300
Hello everyone and welcome to another allergy driven performance of

2
00:00:07,300 --> 00:00:08,200
handmade hero.

3
00:00:09,000 --> 00:00:12,400
We have to fix some bugs today.

4
00:00:12,400 --> 00:00:15,400
Well, I guess not really even fixed some bugs per se, but re-implement

5
00:00:15,400 --> 00:00:17,600
something that we broke.

6
00:00:17,900 --> 00:00:22,200
We did a bunch of stuff to improve our pipeline, to do everything

7
00:00:22,200 --> 00:00:25,100
using full 3d because we decided we wanted z-buffering rather than

8
00:00:25,100 --> 00:00:26,200
having to Sprite sorting.

9
00:00:26,200 --> 00:00:30,300
But part of that meant kind of doing a regular 3D pipeline for reals

10
00:00:30,300 --> 00:00:31,400
with projection.

11
00:00:31,600 --> 00:00:33,900
Using all these other sorts of things that you would normally see.

12
00:00:34,200 --> 00:00:34,800
And

13
00:00:40,000 --> 00:00:45,400
I will be blowing my nose continuously today, while we fix the part of

14
00:00:45,400 --> 00:00:47,400
the code that used to do the debug overlay.

15
00:00:48,000 --> 00:00:53,600
Because although we did all the code to make the regular game code,

16
00:00:53,700 --> 00:00:57,400
the regular game drawing, go through the full 3d pipeline correctly.

17
00:00:57,400 --> 00:01:03,300
We never did the code and necessary like sort of conduit for the debug

18
00:01:03,300 --> 00:01:07,100
overlay to work in the same fashion because the debug overlay now just

19
00:01:07,100 --> 00:01:09,200
basically goes through the same path as everything else.

20
00:01:09,200 --> 00:01:09,600
Which means

21
00:01:09,800 --> 00:01:12,000
Being drawn in full 3d which is kind of nice.

22
00:01:13,100 --> 00:01:16,200
We can probably make use of that in various ways but it also means we

23
00:01:16,200 --> 00:01:18,900
have to do stuff like make sure we have a correct orthogonal

24
00:01:18,900 --> 00:01:22,400
projection Matrix and make sure the coordinates are lined up properly

25
00:01:22,400 --> 00:01:26,200
and all those sorts of things in order to see our debug overlay again.

26
00:01:26,200 --> 00:01:27,400
So that's what we're going to do today.

27
00:01:30,700 --> 00:01:35,900
And if that goes really smoothly and we finish it early, which who

28
00:01:35,900 --> 00:01:39,200
knows if it will debugging is always especially if it's 3D and we

29
00:01:39,200 --> 00:01:45,700
don't have a 3D capture system, which we currently don't because this

30
00:01:45,700 --> 00:01:49,300
system unfortunately cannot run and site or render dock.

31
00:01:50,500 --> 00:01:52,100
I need to upgrade to a different machine.

32
00:01:53,500 --> 00:01:56,600
Sometime soon anyway because we can't do that.

33
00:01:56,600 --> 00:01:59,500
This could take a while and when we actually figure out what's going

34
00:01:59,500 --> 00:02:03,700
on and get that all lined up correctly, then we will move on to

35
00:02:03,700 --> 00:02:07,300
implementing some features that we want to have that.

36
00:02:07,300 --> 00:02:11,800
We sort of implemented before in various ways that might not have been

37
00:02:12,200 --> 00:02:15,000
the best ways before depending on the circumstances.

38
00:02:15,500 --> 00:02:19,700
But they were basically ways of doing stuff like distance fog.

39
00:02:19,700 --> 00:02:22,900
We had kind of done that manually before we can now do it in.

40
00:02:23,300 --> 00:02:28,700
Way, we can also do stuff like the we had previously had to do

41
00:02:28,700 --> 00:02:32,600
manually separating out the floor, above the hero.

42
00:02:32,600 --> 00:02:36,900
If we wanted to Alpha fade that in when you went up and down and all

43
00:02:36,900 --> 00:02:37,700
kinds of stuff like this.

44
00:02:37,700 --> 00:02:40,100
So there are a bunch of things like that that we can do.

45
00:02:40,100 --> 00:02:43,400
We can actually do those things in a much more procedural way.

46
00:02:43,400 --> 00:02:47,300
Now, that doesn't require the code to actually do shuffling at the

47
00:02:47,300 --> 00:02:50,400
head end because since we are going through a z-buffer and those

48
00:02:50,400 --> 00:02:52,100
things are Z based based effects.

49
00:02:52,100 --> 00:02:53,200
We will have

50
00:02:53,300 --> 00:02:56,400
the ability to do a bunch of nuts stuff there.

51
00:02:56,500 --> 00:02:59,900
You'll see in a second we can we can kind of just lean on the GPU.

52
00:03:00,000 --> 00:03:02,000
You to do that stuff for us.

53
00:03:02,300 --> 00:03:05,200
All right, so let's go ahead and get started.

54
00:03:05,500 --> 00:03:10,500
Like I said, this will be a stream filled with mucus, just absolutely

55
00:03:10,500 --> 00:03:11,400
disgusting lie.

56
00:03:11,400 --> 00:03:16,200
Filled with snot and you are now, like, living in my world.

57
00:03:16,200 --> 00:03:18,700
This is what happens during allergy season and mind.

58
00:03:18,700 --> 00:03:21,600
You, this is what happens during allergy season.

59
00:03:21,600 --> 00:03:28,300
For me when I take allergy medication, like I took a allergy pill this

60
00:03:28,300 --> 00:03:29,900
morning and I took one yesterday

61
00:03:30,000 --> 00:03:33,500
owing to and this is,

62
00:03:35,900 --> 00:03:40,000
This is how often I have to blow my nose when I'm on allergy

63
00:03:40,000 --> 00:03:40,600
medication.

64
00:03:41,800 --> 00:03:46,700
I don't really understand why my immune system thinks, it's necessary

65
00:03:46,700 --> 00:03:50,900
to attack little particles.

66
00:03:51,000 --> 00:03:54,000
Well, I guess I actually do know why because I actually it makes

67
00:03:54,000 --> 00:03:54,500
perfect sense.

68
00:03:54,500 --> 00:03:56,800
Why my immune system attacks those particles but

69
00:03:58,100 --> 00:03:58,800
I wish it wouldn't.

70
00:03:58,800 --> 00:04:03,400
Anyway, let's get started here today is day 373.

71
00:04:03,400 --> 00:04:06,900
So you want the 372 source code if you want to follow along.

72
00:04:06,900 --> 00:04:11,300
And again, what we're going to look at here is just it's handmade

73
00:04:11,300 --> 00:04:14,200
projection or project.

74
00:04:14,700 --> 00:04:15,400
Let's see.

75
00:04:15,400 --> 00:04:19,399
All we're going to look at today is just this debug situation and see

76
00:04:19,500 --> 00:04:20,200
what's going on.

77
00:04:20,200 --> 00:04:22,600
How do we make sure that it gets lined up properly?

78
00:04:22,600 --> 00:04:24,800
So we've got a set camera, transform call.

79
00:04:24,800 --> 00:04:27,700
You can see it right here and what we were doing with this.

80
00:04:27,900 --> 00:04:29,000
Is just trying to.

81
00:04:30,300 --> 00:04:37,400
Get started, setting up, the proper situation, for the debug it, the

82
00:04:37,400 --> 00:04:41,200
the debug coordinates, and the debug font stuff to to work properly.

83
00:04:41,400 --> 00:04:43,900
And so there's two basic things that could be going wrong here.

84
00:04:44,200 --> 00:04:46,600
I mean, there's obviously other ones that I might not be thinking of,

85
00:04:46,600 --> 00:04:49,700
but there's two that come to mind immediately that we need to sort of.

86
00:04:49,700 --> 00:04:53,200
Make sure are correct in the new system because they were completely

87
00:04:53,200 --> 00:04:54,100
different in the previous one.

88
00:05:02,500 --> 00:05:07,600
Again, one of them is trying to figure out what the coordinates are

89
00:05:07,600 --> 00:05:09,000
going to be for the debug things.

90
00:05:09,000 --> 00:05:12,500
We were previously using a certain set of coordinates for debug stuff.

91
00:05:12,900 --> 00:05:15,900
We now have to make sure that if we want to either, we change those

92
00:05:15,900 --> 00:05:17,800
coordinates which I don't think we want to bother doing because they

93
00:05:17,800 --> 00:05:22,300
were fine before or the more sensible route.

94
00:05:22,300 --> 00:05:24,700
Which is what I was going to do is just make sure that our camera

95
00:05:24,700 --> 00:05:29,200
transformed that we set up in 3D pipeline is set up to accept those

96
00:05:29,200 --> 00:05:29,700
coordinates.

97
00:05:29,900 --> 00:05:32,900
Up early and place things where they should appear on the screen

98
00:05:32,900 --> 00:05:34,600
relative coordinates in the same.

99
00:05:34,700 --> 00:05:37,100
You know, so that those courts have the same meaning that they did

100
00:05:37,400 --> 00:05:41,400
back before we switch to the pipeline that we're using now.

101
00:05:41,800 --> 00:05:42,900
So that's thing one.

102
00:05:46,900 --> 00:05:50,600
Thing too, is we are now going through Z buffer.

103
00:05:51,900 --> 00:05:55,800
and that means there's a near and far clipping plane, and we don't

104
00:05:55,800 --> 00:05:59,900
really know what the Z coordinates are for this stuff that we're

105
00:06:00,000 --> 00:06:00,700
Ending down.

106
00:06:01,200 --> 00:06:05,600
Now my you know for example, the near clipping plane is 0.1.

107
00:06:07,400 --> 00:06:11,500
If that's the case that means that in effect that might not be what we

108
00:06:11,500 --> 00:06:12,400
want as well.

109
00:06:12,900 --> 00:06:15,900
We may want the near clip playing to be back a bit from there because

110
00:06:15,900 --> 00:06:20,200
since this is orthographic, we can set the z-score thing to whatever

111
00:06:20,200 --> 00:06:20,900
we want.

112
00:06:21,100 --> 00:06:23,300
Since I believe the Z coordinates.

113
00:06:23,300 --> 00:06:24,700
I don't actually know what we're doing.

114
00:06:24,700 --> 00:06:26,600
For Z coordinates and here, it's been too long.

115
00:06:28,500 --> 00:06:31,800
Since we've we've worked with it at all, but I think the Z coordinates

116
00:06:31,800 --> 00:06:33,600
may always just be 0.

117
00:06:34,300 --> 00:06:36,900
And if that was the case, then it could be that our coordinates are

118
00:06:36,900 --> 00:06:38,400
already being transformed correctly.

119
00:06:38,400 --> 00:06:38,900
We don't know again.

120
00:06:38,900 --> 00:06:43,500
We have to verify this and we're just getting clipped off of the the

121
00:06:43,500 --> 00:06:44,300
near clipping plane.

122
00:06:44,300 --> 00:06:47,600
Because if we're drawing it z0, but then your clip claim is at Point

123
00:06:47,600 --> 00:06:51,400
1, we're drawing point one behind the near clipping plane.

124
00:06:52,400 --> 00:06:53,100
Right?

125
00:06:53,300 --> 00:06:55,700
So if we go into the math code and we look at Arthur graphic.

126
00:06:55,700 --> 00:06:58,800
Now, the reason we have an ear clip plane is for two reasons.

127
00:06:58,900 --> 00:07:03,700
One is that we want to be able to not have stuff come right up into

128
00:07:03,700 --> 00:07:04,900
the face of the player, right?

129
00:07:04,900 --> 00:07:07,100
So you're supposed to kind of keep things a little bit away.

130
00:07:08,900 --> 00:07:12,100
So conceptually, it makes sense that we have an ear clip playing in

131
00:07:12,100 --> 00:07:12,800
perspective.

132
00:07:12,900 --> 00:07:16,600
The other reason is because we need someplace between, which we can

133
00:07:16,900 --> 00:07:18,100
sandwich our Z coordinates.

134
00:07:18,100 --> 00:07:22,200
If we want to use the fixed Point Z buffer, rather than a floating

135
00:07:22,200 --> 00:07:23,000
Point Z buffer.

136
00:07:24,100 --> 00:07:28,100
However, if you think about it in orthographic, projection, there is

137
00:07:28,100 --> 00:07:29,800
no real reason for that.

138
00:07:31,200 --> 00:07:34,700
For that Z coordinate to be in front of the camera.

139
00:07:34,700 --> 00:07:37,300
The Z could be behind the camera because the Z is arbitrary since

140
00:07:37,300 --> 00:07:38,500
everything gets projected.

141
00:07:38,700 --> 00:07:42,900
In a sheet directly on to the screen with no foreshortening, right?

142
00:07:44,100 --> 00:07:47,500
In an orthographic view, you can just as easily dressed up this

143
00:07:47,500 --> 00:07:47,800
behind.

144
00:07:47,800 --> 00:07:48,800
You is stuff that's in front of you.

145
00:07:49,000 --> 00:07:52,500
So the near clipping plane, you know, in a in an orthographic,

146
00:07:52,500 --> 00:07:56,200
projection could be, you know - and there's no reason there's nothing

147
00:07:56,200 --> 00:08:01,400
weird that would happen there in a perspective situation that doesn't

148
00:08:01,400 --> 00:08:05,600
make any sense because you can get down to the point that the the used

149
00:08:05,600 --> 00:08:09,000
actually standing at something that passes through that becomes a

150
00:08:09,000 --> 00:08:11,400
divide by zero scenario, which doesn't make very much sense.

151
00:08:11,400 --> 00:08:11,800
Right?

152
00:08:11,800 --> 00:08:14,100
In a lot of ways you can see why that would

153
00:08:14,200 --> 00:08:17,500
Be a weird Singularity kind of kind of place to be for the math

154
00:08:18,000 --> 00:08:20,400
although you could still work it out right because it ends up being

155
00:08:20,400 --> 00:08:21,400
zero over zero.

156
00:08:21,400 --> 00:08:24,300
So if you know if you had if you were being super fancy I think it

157
00:08:24,300 --> 00:08:28,200
would you could still make it work obviously, but anyway and then when

158
00:08:28,200 --> 00:08:31,000
you got behind it, you're talking about things that you shouldn't be

159
00:08:31,000 --> 00:08:32,900
able to see because you're not looking that direction.

160
00:08:32,900 --> 00:08:35,700
And so it doesn't make very much sense and perspective world to do

161
00:08:35,700 --> 00:08:37,600
that in orthographic world.

162
00:08:37,600 --> 00:08:44,000
The really Z has no under the like it has no meaning

163
00:08:44,100 --> 00:08:48,600
Other than just the buffer just the depth so you can easily just pick

164
00:08:48,600 --> 00:08:51,200
- coordinates you can throw things at - coordinates are positive corns

165
00:08:51,200 --> 00:08:53,700
it doesn't matter it's all going to project onto the screen just

166
00:08:53,700 --> 00:08:55,400
flatly with no foreshortening.

167
00:08:56,100 --> 00:08:59,000
No mirroring when it goes behind you and none of that stuff because

168
00:08:59,000 --> 00:08:59,800
you're not doing a device.

169
00:09:00,000 --> 00:09:01,800
By any coordinate.

170
00:09:01,800 --> 00:09:04,400
So we could have the near clipping be behind us and it wouldn't

171
00:09:04,400 --> 00:09:04,800
matter.

172
00:09:05,100 --> 00:09:08,600
I believe we did the mass such that, that would have just worked.

173
00:09:09,000 --> 00:09:11,600
I don't think we assume that n was positive anywhere.

174
00:09:12,400 --> 00:09:15,800
So I'm just going to try setting that as well, just to see if because

175
00:09:15,800 --> 00:09:20,300
we are drawing at Z equals zero at the moment I think for the debug.

176
00:09:20,300 --> 00:09:21,000
And so I just want to say.

177
00:09:21,000 --> 00:09:21,400
Yeah.

178
00:09:21,600 --> 00:09:26,200
So so that was the only problem that we actually had as it turns out.

179
00:09:27,600 --> 00:09:32,400
The problem that we had was just that our Z coordinates were behind

180
00:09:32,400 --> 00:09:35,400
the near clipping plane so they were getting clipped out, right?

181
00:09:35,400 --> 00:09:36,600
That was that was it.

182
00:09:36,800 --> 00:09:39,600
Everything else was working properly, it would appear.

183
00:09:40,600 --> 00:09:45,800
And so you know obviously at the end of yesterday's session we did do

184
00:09:45,800 --> 00:09:49,200
the the one piece where we did set camera transform.

185
00:09:49,200 --> 00:09:51,200
So we did need to do this as well.

186
00:09:51,500 --> 00:09:54,100
If you remember that to set up that core enhancement but it looks like

187
00:09:54,100 --> 00:09:56,500
we set up that cord transform properly first guess.

188
00:09:57,100 --> 00:09:58,400
so, that was nice and

189
00:10:00,100 --> 00:10:05,600
Well, first educated guess I suppose and then we had to do that that

190
00:10:05,600 --> 00:10:07,200
clipping to prevent that from happening.

191
00:10:08,600 --> 00:10:11,900
Anyway, now that we've got that though, you'll notice I'm not really

192
00:10:11,900 --> 00:10:14,200
able to click on it which is not great.

193
00:10:14,900 --> 00:10:19,300
I don't know why that is the case because I wouldn't have thought that

194
00:10:19,300 --> 00:10:22,400
we did anything differently there.

195
00:10:22,400 --> 00:10:26,700
So meaning the graphic stuff should not have changed that, so I'm not

196
00:10:26,700 --> 00:10:29,700
super sure what's going on with us, not being able to do.

197
00:10:29,900 --> 00:10:33,000
Debug click, so I got to go take a look at that.

198
00:10:38,500 --> 00:10:40,500
That may be that it is still working.

199
00:10:43,600 --> 00:10:47,300
But the sense the direction is going the wrong way.

200
00:10:48,500 --> 00:10:51,400
I don't remember whether we had why going up or down in the debug

201
00:10:51,400 --> 00:10:56,200
system and so I'm not sure if that has something to do with it.

202
00:10:56,300 --> 00:11:00,500
What I'm going to do just quickly is I'm going to create an incorrect

203
00:11:00,500 --> 00:11:04,200
projection here to shrink down what we're looking at.

204
00:11:04,200 --> 00:11:05,200
So that it's smaller.

205
00:11:05,400 --> 00:11:08,400
You can see what I did here, where I've taken what was previously

206
00:11:08,400 --> 00:11:08,800
here.

207
00:11:08,800 --> 00:11:12,500
And I just shrunk it down to half the size, just if I can see if when

208
00:11:12,500 --> 00:11:15,600
I click on it which it should still click here.

209
00:11:16,500 --> 00:11:17,500
Yeah, it doesn't.

210
00:11:18,800 --> 00:11:21,300
So it may be Loop sets.

211
00:11:21,300 --> 00:11:22,200
Not what I want to do.

212
00:11:22,800 --> 00:11:24,000
What's going on, stop running.

213
00:11:24,000 --> 00:11:24,600
Okay, there we go.

214
00:11:27,400 --> 00:11:29,300
Oh, I accidentally for clothes for coder.

215
00:11:29,500 --> 00:11:30,700
That was not what I wanted to do.

216
00:11:31,300 --> 00:11:33,200
It would be hard to program with no editor.

217
00:11:35,800 --> 00:11:36,300
All right.

218
00:11:39,400 --> 00:11:45,500
So if I go ahead and assume that now the problem is just that the

219
00:11:45,500 --> 00:11:49,600
clicking isn't working properly, I'm not sure again.

220
00:11:49,600 --> 00:11:50,000
What that would be.

221
00:11:50,000 --> 00:11:54,300
It's been a while but in terms of clicking I know I that we've never

222
00:11:54,500 --> 00:11:58,400
done the unprojected stuff if I remember correctly.

223
00:11:58,400 --> 00:11:59,800
So that might be what we would need to do.

224
00:12:00,000 --> 00:12:00,500
Working.

225
00:12:07,000 --> 00:12:07,600
Aha.

226
00:12:07,700 --> 00:12:08,100
Yes.

227
00:12:09,600 --> 00:12:11,700
So you can see here, we've got a nun, project-- call.

228
00:12:12,100 --> 00:12:16,500
And that's basically saying, hey, here's the mouse X and Y, and the

229
00:12:16,500 --> 00:12:18,100
mouse X and Y are

230
00:12:21,300 --> 00:12:25,700
in screen space originally and we need to translate those from the

231
00:12:25,700 --> 00:12:30,700
screen space to the actual drawing coordinates that we were using so

232
00:12:30,700 --> 00:12:33,800
that we can correlate them with what we drew

233
00:12:35,700 --> 00:12:37,800
No, I don't actually know when I say screen space.

234
00:12:37,900 --> 00:12:41,000
I'm not sure I even remember what we were putting mousex and mousey.

235
00:12:41,000 --> 00:12:41,600
Why in?

236
00:12:41,900 --> 00:12:46,300
I assume they're pixel coordinates but I don't even know that I don't

237
00:12:46,300 --> 00:12:46,900
remember.

238
00:12:47,800 --> 00:12:49,800
So the first thing I want to do

239
00:12:51,000 --> 00:12:52,500
is find out what those even are.

240
00:12:53,400 --> 00:12:56,500
So, you know, the easiest way to do that is probably this actually

241
00:13:01,000 --> 00:13:03,800
And I'll just go up here and say, hey could you go ahead and print

242
00:13:03,800 --> 00:13:04,700
those out for me?

243
00:13:07,900 --> 00:13:10,900
Actually, what are those in the input layer?

244
00:13:18,900 --> 00:13:20,200
Yeah, they are our 32s.

245
00:13:20,500 --> 00:13:20,900
So

246
00:13:22,300 --> 00:13:25,700
I just want to see what those are so I know what we were placing those

247
00:13:25,700 --> 00:13:25,800
in.

248
00:13:25,800 --> 00:13:26,100
Yes.

249
00:13:26,100 --> 00:13:29,300
So those are just in pixel coordinates and you can see that it's

250
00:13:29,300 --> 00:13:34,100
ranging from zero to 1919 here, right?

251
00:13:34,700 --> 00:13:38,100
And 02 1079 here.

252
00:13:38,300 --> 00:13:42,700
So it's basically just saying what pixel you're on on the screen and

253
00:13:42,700 --> 00:13:45,600
why is going up so it's harmonized with the math.

254
00:13:45,600 --> 00:13:48,100
So Windows is our Windows platform.

255
00:13:48,100 --> 00:13:49,400
Layer is flipping it around.

256
00:13:49,400 --> 00:13:51,000
Windows would not be reporting it that way.

257
00:13:51,000 --> 00:13:52,000
We are reporting it that way.

258
00:13:53,400 --> 00:13:55,000
So, all I need to do there.

259
00:13:57,500 --> 00:13:59,900
Is do the complete on production from Pixel space.

260
00:14:00,600 --> 00:14:02,200
So let's flip over to that.

261
00:14:02,200 --> 00:14:03,900
That's over in the render group stuff.

262
00:14:03,900 --> 00:14:07,300
You can see The unprojected Happening Here, Right?

263
00:14:08,100 --> 00:14:12,200
And you can see the what we were doing for the unprojected, in this,

264
00:14:12,200 --> 00:14:13,200
in this case here, right?

265
00:14:13,200 --> 00:14:17,100
We've got the object transform and then the pixels x Y, which is what

266
00:14:17,100 --> 00:14:19,900
we were passing with the mouse and so on.

267
00:14:20,300 --> 00:14:22,600
So, here what we need to do,

268
00:14:23,900 --> 00:14:26,800
Then what we definitely aren't doing in anyway, right.

269
00:14:28,000 --> 00:14:31,700
Is we need to undo, all of the steps that open jail was taking.

270
00:14:37,400 --> 00:14:39,900
When It produced these coordinates, right?

271
00:14:41,200 --> 00:14:45,300
So the first steps looks a lot like what opengl does, right?

272
00:14:45,300 --> 00:14:50,800
You can see we take the unprojected X Y and we subtract that screen

273
00:14:51,900 --> 00:14:54,400
center from the pixels x y to produce that, right?

274
00:14:54,800 --> 00:14:57,500
So what that's doing is that's saying, okay, we've got something that

275
00:14:57,500 --> 00:14:59,800
ranges from 0 to the pixel.

276
00:15:00,100 --> 00:15:05,400
To the width and from 00 to the height and what we want is something

277
00:15:05,400 --> 00:15:08,600
that's centered around the center of the screen, because that's the

278
00:15:08,600 --> 00:15:12,700
first thing that opengl would have done in Reverse, right?

279
00:15:12,700 --> 00:15:17,300
You can, you can sort of, imagine us taking the opengl set of things

280
00:15:17,300 --> 00:15:21,200
that does to the incoming points and just doing them in Reverse,

281
00:15:21,200 --> 00:15:21,700
right?

282
00:15:22,100 --> 00:15:26,800
You know, we've got a projection Matrix, right?

283
00:15:29,300 --> 00:15:32,900
You know, that looks something like this potentially.

284
00:15:35,300 --> 00:15:37,200
Actually, I guess it looks a little bit.

285
00:15:43,200 --> 00:15:45,500
It can look, it can look one of two ways, right?

286
00:15:49,700 --> 00:15:52,800
Here's the perspective and here's the orthographic versions.

287
00:15:54,600 --> 00:15:57,800
So, you know, we've got one looking that way.

288
00:15:58,000 --> 00:15:58,900
One, looking that way.

289
00:15:58,900 --> 00:15:59,600
And one of the one there.

290
00:15:59,600 --> 00:16:00,000
So

291
00:16:01,700 --> 00:16:04,600
We've got a matrix that looks like this where we've got some some

292
00:16:04,600 --> 00:16:07,600
values filled in and sort of a big dipper configuration here, a little

293
00:16:07,600 --> 00:16:08,700
dipper configuration.

294
00:16:10,100 --> 00:16:11,800
So we know we've got points coming in.

295
00:16:15,300 --> 00:16:16,900
Write x y z is coming in.

296
00:16:17,100 --> 00:16:20,000
We know that this is always going to be wondering are transform we're

297
00:16:20,000 --> 00:16:24,400
transforming by this shape and producing a result here, right?

298
00:16:24,800 --> 00:16:27,500
And this result is in clip coordinates, right?

299
00:16:27,500 --> 00:16:32,800
So this result is in negative 1 to 1 space in all Dimensions, right?

300
00:16:32,800 --> 00:16:33,600
X y and z.

301
00:16:34,900 --> 00:16:38,900
And that's clipped, then we're going to take these output values.

302
00:16:38,900 --> 00:16:42,600
So in this space, right, we know that we're taking values that range

303
00:16:42,600 --> 00:16:45,700
from negative 1 to 1 in all ways.

304
00:16:48,300 --> 00:16:48,700
Right?

305
00:16:48,700 --> 00:16:50,400
So we're imagining that.

306
00:16:57,300 --> 00:17:01,600
And given that information, we are having to produce actual pixel

307
00:17:01,600 --> 00:17:02,900
coordinates to render stuff it.

308
00:17:02,900 --> 00:17:06,400
Like opengl obviously, has to actually do that to fill pixels, so it's

309
00:17:06,400 --> 00:17:10,300
taking that and it's mapping that to the screen.

310
00:17:11,599 --> 00:17:12,200
Right?

311
00:17:12,200 --> 00:17:16,200
So it's taking this and it's doing a mapping of that to the screen

312
00:17:16,300 --> 00:17:20,300
where, you know, the bottom is 0 0, the top and you know the top

313
00:17:20,300 --> 00:17:23,500
corner is 1920 1080, right?

314
00:17:24,800 --> 00:17:25,900
Well, one pass the top corner.

315
00:17:25,900 --> 00:17:28,600
It's actually 1919 1079, right?

316
00:17:29,800 --> 00:17:34,100
And so the first thing we want to do, if we are given a point in this

317
00:17:34,100 --> 00:17:38,700
space is we're trying to get back to clip coordinates so that we can

318
00:17:38,900 --> 00:17:40,500
continue back down this fight, right?

319
00:17:40,500 --> 00:17:42,700
Because we're going the other way here.

320
00:17:42,700 --> 00:17:47,500
So instead of multiplying by a matrix clipping and then transforming

321
00:17:47,500 --> 00:17:49,500
to screen space from the clip space.

322
00:17:49,600 --> 00:17:50,800
We're trying to backwards.

323
00:17:51,000 --> 00:17:53,300
So this is the clip space transformed here.

324
00:17:53,300 --> 00:17:55,400
This you know thing that was going this way, we're trying to go this

325
00:17:55,400 --> 00:17:55,800
way.

326
00:17:56,000 --> 00:17:58,900
That means the first thing we want to do is Center about the middle.

327
00:17:59,000 --> 00:17:59,700
because remember these

328
00:18:00,400 --> 00:18:01,700
The centered around the middle.

329
00:18:02,500 --> 00:18:05,600
They weren't around the lower corner, right?

330
00:18:06,100 --> 00:18:08,100
And so what we need to do is first do that.

331
00:18:08,200 --> 00:18:11,500
So to do that, we would take the center of the screen and subtract,

332
00:18:11,500 --> 00:18:14,000
you know, we would take whatever the point is and subtract it from the

333
00:18:14,000 --> 00:18:15,200
center, right?

334
00:18:15,200 --> 00:18:18,700
That gives us that wherever that point was, if this was the point here

335
00:18:18,800 --> 00:18:22,200
that gives us it centered around here rather than centered around

336
00:18:22,200 --> 00:18:23,400
here, right?

337
00:18:23,500 --> 00:18:25,500
And that's exactly what we're doing is the first step.

338
00:18:25,500 --> 00:18:27,600
So that first step makes a lot of sense.

339
00:18:28,000 --> 00:18:29,900
This next step, not so good.

340
00:18:30,000 --> 00:18:30,300
Good.

341
00:18:30,300 --> 00:18:32,000
Right, this next step.

342
00:18:32,000 --> 00:18:36,300
You can see here has the aspect ratio baked into it, but we don't want

343
00:18:36,300 --> 00:18:37,300
to do that anymore.

344
00:18:38,900 --> 00:18:40,000
It starts off pretty good.

345
00:18:40,000 --> 00:18:40,100
Right.

346
00:18:40,100 --> 00:18:41,000
You can see unprotected.

347
00:18:41,000 --> 00:18:42,400
XY dot X and Y.

348
00:18:42,600 --> 00:18:45,000
This right here is normalizing to the screen.

349
00:18:45,100 --> 00:18:45,700
That's again.

350
00:18:45,700 --> 00:18:49,700
Exactly what we do want to do because we want negative 1 to 1.

351
00:18:49,800 --> 00:18:54,900
So this point five over screen dim X multiplier is exactly right?

352
00:18:54,900 --> 00:18:58,500
Because what we would end up having is well actually is that exactly

353
00:18:58,500 --> 00:18:58,700
right.

354
00:18:58,700 --> 00:18:59,800
Let me just double check that.

355
00:19:00,700 --> 00:19:01,300
Make sure that.

356
00:19:02,100 --> 00:19:03,700
Before I say that something is exactly right.

357
00:19:03,700 --> 00:19:04,300
That it actually is.

358
00:19:04,400 --> 00:19:08,200
So here we end up having the width, right?

359
00:19:08,700 --> 00:19:13,400
And the key here is that the width itself is not what we want to

360
00:19:13,400 --> 00:19:14,100
normalize by.

361
00:19:14,100 --> 00:19:14,500
Right.

362
00:19:14,800 --> 00:19:18,700
We want to normalize by half the width because we're centering around

363
00:19:18,700 --> 00:19:19,400
here.

364
00:19:19,600 --> 00:19:23,000
So if something was all the way over here, we want it to map to

365
00:19:23,000 --> 00:19:23,600
negative one.

366
00:19:23,600 --> 00:19:26,700
And if it was all the way over here, we want to map to one that's a

367
00:19:26,700 --> 00:19:27,500
span.

368
00:19:27,500 --> 00:19:30,600
This span is only half of the width, right?

369
00:19:30,600 --> 00:19:32,100
So we wanted to

370
00:19:32,200 --> 00:19:36,800
Take the point x and divide it by the width / 2, and of course if we

371
00:19:36,800 --> 00:19:39,200
divide by something over to the two can come up.

372
00:19:39,200 --> 00:19:40,600
So we end up with PX.

373
00:19:41,900 --> 00:19:44,500
Over W times that point five, right?

374
00:19:44,500 --> 00:19:48,000
That's the that's the divided by 2 coming up to here, right?

375
00:19:49,000 --> 00:19:53,100
So Point 5, PX /, / W is exactly what we want.

376
00:19:53,200 --> 00:19:55,500
However, you'll notice the aspect ratio is baked in here.

377
00:19:55,700 --> 00:19:57,800
We don't want the aspect ratio of baked in here.

378
00:19:58,000 --> 00:20:00,100
Why don't we want the aspect ratio baked in here anymore?

379
00:20:00,100 --> 00:20:01,900
Because it's in The Matrix.

380
00:20:03,100 --> 00:20:06,400
And I don't mean the one where everyone is attached to, like, a like

381
00:20:06,400 --> 00:20:09,000
a, like a machine that makes them think, they're in virtual reality.

382
00:20:11,500 --> 00:20:18,000
otherwise known as Facebook's Oculus you know dreams we're talking

383
00:20:18,000 --> 00:20:21,300
about one the one that we set up to do our camera transform

384
00:20:22,500 --> 00:20:25,400
And so, what we need to do is say, well, when we do a nun, project--,

385
00:20:25,500 --> 00:20:27,600
we need to know what that camera transform is.

386
00:20:27,900 --> 00:20:31,400
I believe we do know what the camera, transform is because we store it

387
00:20:32,800 --> 00:20:34,300
right here.

388
00:20:34,700 --> 00:20:37,100
See last project, right?

389
00:20:38,800 --> 00:20:42,800
And so we have a projection Matrix called last project which is the

390
00:20:42,800 --> 00:20:47,700
thing that things would be projected by and we know that that last

391
00:20:47,700 --> 00:20:52,500
project Matrix is the thing that we need to do use to undo whatever

392
00:20:52,500 --> 00:20:54,800
our transform was right.

393
00:20:55,900 --> 00:20:57,100
Like that's the key.

394
00:20:57,400 --> 00:20:59,600
That's that's the the Crux of it.

395
00:21:00,000 --> 00:21:00,600
My sense.

396
00:21:01,700 --> 00:21:04,600
Now there's going to be some some fussing here you'll see in a second

397
00:21:04,600 --> 00:21:08,200
I'll show you how the fussing occurs because we're going to need

398
00:21:08,200 --> 00:21:10,300
something that we don't have right now and it's going to be a little

399
00:21:10,300 --> 00:21:12,900
bit intricate how we get it but it's going to be okay, don't worry.

400
00:21:16,700 --> 00:21:19,200
So if we come through here and we take a look at what's going to

401
00:21:19,200 --> 00:21:22,600
happen there, rather than doing an, if transform orthographic, or any

402
00:21:22,600 --> 00:21:25,500
of this stuff, like this stuff is just not relevant anymore.

403
00:21:25,500 --> 00:21:29,200
Right instead, what we need to do is we need to look at last brought

404
00:21:29,200 --> 00:21:34,600
here and we need to make that be something that we go back through.

405
00:21:34,700 --> 00:21:37,400
Because if you look at what happens after we change, things to the

406
00:21:37,400 --> 00:21:42,200
negative 1 to 1 space, we end up having to go in through here through

407
00:21:42,400 --> 00:21:43,300
through the

408
00:21:45,800 --> 00:21:47,600
Reverse projection, right?

409
00:21:47,700 --> 00:21:51,200
So if you imagine this part of the process, is the part that we would

410
00:21:51,200 --> 00:21:52,400
have to do next.

411
00:21:52,400 --> 00:21:56,200
This is if this is a matrix whatever this Matrix is, right?

412
00:21:56,200 --> 00:21:57,100
Here's our X.

413
00:21:57,500 --> 00:21:58,400
Here's our B.

414
00:21:58,500 --> 00:22:00,500
We've got something where previously

415
00:22:02,300 --> 00:22:04,200
We were doing a standard Matrix transform.

416
00:22:04,300 --> 00:22:08,200
We are multiplying this Matrix, a by an incoming point, which we'll

417
00:22:08,200 --> 00:22:12,200
call X and it was equaling B, which was the output.

418
00:22:12,300 --> 00:22:14,900
This we now have to reverse, right?

419
00:22:15,000 --> 00:22:17,700
We're now taking B, which is this right.

420
00:22:17,700 --> 00:22:21,600
Here are clip coordinates and we want to know what we started with

421
00:22:21,700 --> 00:22:22,300
right?

422
00:22:22,400 --> 00:22:27,000
We're trying to say, what will would we have put in if we wanted to

423
00:22:27,000 --> 00:22:31,100
make, you know, this BB what comes out of this projection Matrix and

424
00:22:31,100 --> 00:22:32,000
so that's a classic

425
00:22:32,200 --> 00:22:33,200
Linear algebra.

426
00:22:34,000 --> 00:22:36,700
You know, the very first thing you learn how to do in linear algebra

427
00:22:36,700 --> 00:22:37,700
solve this equation.

428
00:22:38,300 --> 00:22:41,800
You need to multiply both sides by a inverse, right?

429
00:22:43,900 --> 00:22:47,600
Which is the The Matrix that turns a into identity, right?

430
00:22:47,600 --> 00:22:50,000
At the base of the cancellation Matrix for a.

431
00:22:50,000 --> 00:22:57,400
So this cancels out and you get x equals a inverse B, right?

432
00:22:57,400 --> 00:23:00,900
So this right here is, you know, for those of you who aren't familiar

433
00:23:00,900 --> 00:23:03,000
with linear algebra and we've done it a couple times.

434
00:23:03,000 --> 00:23:06,800
We talked about the fact that like a inverse, a equals the identity

435
00:23:06,800 --> 00:23:07,100
Matrix.

436
00:23:07,100 --> 00:23:10,200
We did a bunch on that but I want to go back and handmade here and

437
00:23:10,200 --> 00:23:12,700
watch that part if you're uncomfortable with what that means.

438
00:23:12,700 --> 00:23:13,800
But basically

439
00:23:14,000 --> 00:23:19,100
It's sort of like the same concept of multiplicative divided, right?

440
00:23:19,600 --> 00:23:24,200
It's basically saying, okay, if I have some number a let's say that

441
00:23:24,200 --> 00:23:30,400
number is 5, then I could think of, in terms of multiplication, if I

442
00:23:30,400 --> 00:23:36,700
wanted to say a inverse a equals one, write something that would turn

443
00:23:36,700 --> 00:23:38,900
a into the multiplicative identity.

444
00:23:38,900 --> 00:23:43,400
The thing, the value, which makes it do nothing when multiplied right

445
00:23:43,400 --> 00:23:43,800
it does not.

446
00:23:43,900 --> 00:23:44,900
Change its value.

447
00:23:45,800 --> 00:23:50,800
So we want to know what is this value a inverse such that it times a

448
00:23:50,900 --> 00:23:51,800
would equal 1.

449
00:23:52,000 --> 00:23:56,100
Well we know that a equals 5 in this case so we would say well a

450
00:23:56,100 --> 00:23:58,300
inverse times 5 equals 1.

451
00:23:58,500 --> 00:23:59,700
What does a inverse?

452
00:24:00,000 --> 00:24:04,500
Well just divide both sides by 5 to find out and you get 1/5, right?

453
00:24:04,800 --> 00:24:08,000
And lo and behold that's exactly the same thing that we would think.

454
00:24:08,000 --> 00:24:13,000
If we took a look at this, because 1/5 times 5 does equal 1, right?

455
00:24:14,000 --> 00:24:16,400
The same is true of matrices, that is all.

456
00:24:16,400 --> 00:24:18,300
We're looking for in these matrices, right?

457
00:24:18,300 --> 00:24:21,600
We've got a multiplication here A times x equals B.

458
00:24:21,600 --> 00:24:23,300
We want to undo it, right?

459
00:24:23,300 --> 00:24:28,000
We want to know what would happen if, if we wanted to solve for x.

460
00:24:28,000 --> 00:24:29,800
Well, what we want to do is divide

461
00:24:30,000 --> 00:24:30,900
By a right.

462
00:24:30,900 --> 00:24:35,700
We want to divide both sides by a but in linear algebra, that doesn't

463
00:24:35,700 --> 00:24:37,100
actually exist.

464
00:24:37,400 --> 00:24:40,100
The division is not a thing that can happen with matrices.

465
00:24:40,100 --> 00:24:44,600
You can't divide by a matrix in in order to cancel it like that.

466
00:24:44,600 --> 00:24:47,500
Instead you have to multiply by its inverse, but that's the same

467
00:24:47,700 --> 00:24:49,000
conceptual operation.

468
00:24:49,200 --> 00:24:52,700
And so we do that to both sides in the trick is, we need to know how

469
00:24:52,700 --> 00:24:54,100
to invert a matrix.

470
00:24:54,200 --> 00:24:59,000
We need to know how to take a and get from a, to a inverse in order to

471
00:24:59,000 --> 00:24:59,900
do this because we

472
00:25:00,000 --> 00:25:01,100
I have no way of doing that.

473
00:25:01,100 --> 00:25:04,500
Here we have no way of solving this equation without that because we

474
00:25:04,500 --> 00:25:08,200
used that ability to get to this equation, which does tell us the

475
00:25:08,200 --> 00:25:09,700
answer for X, right?

476
00:25:11,500 --> 00:25:13,700
And so given that that's the case.

477
00:25:13,800 --> 00:25:17,800
What we need to know is an inverse value right?

478
00:25:17,800 --> 00:25:18,200
Whatever?

479
00:25:18,200 --> 00:25:21,500
The opposite operation is for this Matrix.

480
00:25:21,700 --> 00:25:25,800
We need to know what that is for our last project which is easier said

481
00:25:25,800 --> 00:25:26,400
than done.

482
00:25:27,100 --> 00:25:29,300
It's a fairly complicated Matrix of this point.

483
00:25:33,900 --> 00:25:35,300
I warned you about the allergies.

484
00:25:42,200 --> 00:25:42,600
Anyway.

485
00:25:44,600 --> 00:25:49,000
So we need some way of actually producing that a inverse B and that's

486
00:25:49,000 --> 00:25:49,600
the key.

487
00:25:49,600 --> 00:25:52,000
That's the thing that we have to figure out how to do now.

488
00:25:52,300 --> 00:25:53,700
One thing that you'll notice

489
00:25:55,600 --> 00:25:59,200
Is that if we take a look at what any of these matrices look like,

490
00:25:59,600 --> 00:26:02,000
they're not that difficult if we look at them alone.

491
00:26:02,200 --> 00:26:06,000
So here's the perspective, projection Matrix, and it just has four

492
00:26:06,000 --> 00:26:07,400
values in it, right?

493
00:26:08,200 --> 00:26:09,300
It just looks like this.

494
00:26:09,700 --> 00:26:12,300
It's got ABCD here.

495
00:26:12,600 --> 00:26:15,200
Well, you know, it's a times c b times c, d e.

496
00:26:15,400 --> 00:26:16,000
Right?

497
00:26:17,200 --> 00:26:22,100
So it's a c and we can call a see something else like we can just call

498
00:26:22,100 --> 00:26:23,600
that like you, let's say.

499
00:26:26,000 --> 00:26:27,500
And BC can be V.

500
00:26:29,500 --> 00:26:31,100
So that way we don't have to keep writing it.

501
00:26:31,300 --> 00:26:32,400
We've just got you.

502
00:26:33,000 --> 00:26:35,300
We've got V and then we've got DNA.

503
00:26:36,900 --> 00:26:37,500
Right.

504
00:26:38,400 --> 00:26:40,500
And then we've got a negative 1 and a 0 here.

505
00:26:42,300 --> 00:26:44,000
And we've got zeros everywhere else.

506
00:26:48,000 --> 00:26:51,700
Okay, and if you look at this Matrix, what you can see from this

507
00:26:51,700 --> 00:26:56,300
Matrix very quickly is that it wouldn't probably be so difficult to

508
00:26:56,300 --> 00:26:57,000
deal with this.

509
00:26:57,000 --> 00:26:59,800
If we were just dealing with just this one Matrix in isolation,

510
00:27:00,000 --> 00:27:06,100
And because what happens when we multiply by x y z w, we see the

511
00:27:06,100 --> 00:27:08,700
results here are not particularly complicated.

512
00:27:08,900 --> 00:27:12,500
This coordinate is just ux, right?

513
00:27:12,600 --> 00:27:13,800
There's nothing else.

514
00:27:13,800 --> 00:27:15,300
That happens to this coordinate.

515
00:27:15,300 --> 00:27:16,500
There's nothing else there.

516
00:27:17,100 --> 00:27:21,800
Similarly this just gives us v y right?

517
00:27:21,800 --> 00:27:22,500
That's it.

518
00:27:23,900 --> 00:27:29,000
So when we come through here, we can individually invert the X and Y.

519
00:27:29,200 --> 00:27:32,800
Really trivially here, it would be very simple to understand how that

520
00:27:32,800 --> 00:27:38,500
would happen because all you have to do is divide by you or / V,

521
00:27:38,600 --> 00:27:39,200
right?

522
00:27:39,500 --> 00:27:44,100
Which tells us exactly what we would need for our inverse Matrix,

523
00:27:44,300 --> 00:27:44,700
right?

524
00:27:44,700 --> 00:27:47,700
Without having to do any kind of fancy math on it.

525
00:27:48,100 --> 00:27:52,900
We would know that the inverse Matrix here would just be 1 over U,

526
00:27:53,000 --> 00:27:53,500
right.

527
00:27:53,700 --> 00:27:57,300
Because when it multiplies by this, if it has to produce X again, it

528
00:27:57,300 --> 00:28:00,100
has to knock out the you which one over U is the only thing that will

529
00:28:00,100 --> 00:28:04,700
do right, and you can't have any other values involved because none of

530
00:28:04,700 --> 00:28:06,100
these could be in play.

531
00:28:06,100 --> 00:28:10,400
You have to just take just this one and multiply it by 1 over U right

532
00:28:11,900 --> 00:28:15,200
stated alternately you can imagine, in fact.

533
00:28:15,200 --> 00:28:18,700
So let's say, just to give you an example, or to give you an idea of

534
00:28:18,700 --> 00:28:19,600
how this works, right x.

535
00:28:19,600 --> 00:28:21,700
Y z w, we multiply through, you know, how to do the matrix

536
00:28:21,700 --> 00:28:22,600
multiplication, right?

537
00:28:22,600 --> 00:28:23,500
X x uy.

538
00:28:23,600 --> 00:28:25,700
Item 0 z x 0 w x 0.

539
00:28:25,700 --> 00:28:29,300
You produce you X now just pretend we're multiplying this vector by

540
00:28:29,300 --> 00:28:31,400
this Matrix again, right?

541
00:28:31,400 --> 00:28:35,800
This new Matrix we want to make well, we want to get our ex back and

542
00:28:35,800 --> 00:28:36,900
we've got you X.

543
00:28:37,000 --> 00:28:38,300
So what's going to happen here?

544
00:28:38,300 --> 00:28:40,100
Well, there's going to be four elements to this Matrix.

545
00:28:40,100 --> 00:28:43,400
Let's finish them off just so we can hear 0 0, d e.

546
00:28:43,400 --> 00:28:49,400
So this is d y plus easy, right?

547
00:28:49,500 --> 00:28:51,800
And then, this right here is just going to be negative.

548
00:28:51,800 --> 00:28:53,600
Z is the only thing that's in

549
00:28:53,600 --> 00:28:55,500
All right, that's it.

550
00:28:56,800 --> 00:28:58,100
So, that's all we've got.

551
00:28:58,800 --> 00:29:00,600
And so, if you take a look at what's going to happen down here, when

552
00:29:00,600 --> 00:29:03,900
we multiply, it's like yeah, okay, if I want to produce X again, what

553
00:29:03,900 --> 00:29:04,500
do I have to have?

554
00:29:04,500 --> 00:29:07,000
Well, I gotta have one over you here because that's what's going to

555
00:29:07,000 --> 00:29:08,800
multiply this term and I've got to get rid of the you.

556
00:29:08,900 --> 00:29:10,200
That's what will give me an X.

557
00:29:10,200 --> 00:29:13,400
When I do this matrix multiplication, if this was the incoming vector,

558
00:29:13,400 --> 00:29:15,200
and this was the new Matrix, right?

559
00:29:15,600 --> 00:29:16,800
Here's my a inverse.

560
00:29:17,200 --> 00:29:18,900
Here's my a right.

561
00:29:19,600 --> 00:29:20,400
This is my baby.

562
00:29:21,300 --> 00:29:22,000
This is my ex

563
00:29:23,400 --> 00:29:26,200
So when I'm doing this, I can see exactly what that is.

564
00:29:26,200 --> 00:29:29,000
And similarly, I can see exactly what this is right.

565
00:29:29,100 --> 00:29:32,100
Those are those are almost like read them off.

566
00:29:32,100 --> 00:29:34,100
Easy like you don't even have to think, right?

567
00:29:34,100 --> 00:29:34,900
It's just obvious.

568
00:29:35,400 --> 00:29:37,900
So it's only once we get down to hear the things start to get a little

569
00:29:37,900 --> 00:29:38,500
bit more tricky.

570
00:29:38,500 --> 00:29:43,200
But if we skip this third guy, for one second, you can see that this

571
00:29:43,200 --> 00:29:48,600
is also extremely trivial to work with in a sense that we know exactly

572
00:29:48,600 --> 00:29:53,100
what the Z value was because it's down here in the fourth component.

573
00:29:53,200 --> 00:29:53,600
Right?

574
00:29:53,600 --> 00:29:57,700
So we can just ignore this entirely and say, well, I don't really care

575
00:29:57,700 --> 00:29:59,800
what that is, I don't need to know what

576
00:30:00,000 --> 00:30:00,500
All you is.

577
00:30:00,500 --> 00:30:03,800
I've got Z and Z is what I want, right?

578
00:30:05,000 --> 00:30:10,000
Furthermore W is always one so we don't have to reverse engineer it.

579
00:30:10,100 --> 00:30:14,100
So what that means is now we can see for what we would multiply here.

580
00:30:14,100 --> 00:30:18,500
We would just multiply 0 0 0, negative 1, right?

581
00:30:18,600 --> 00:30:19,100
That's all.

582
00:30:19,100 --> 00:30:24,000
We actually needed there because we just need to get that negative Z.

583
00:30:24,000 --> 00:30:28,100
We don't want any other contributors and the W has the negative z in

584
00:30:28,100 --> 00:30:28,800
it, right?

585
00:30:28,800 --> 00:30:29,800
So that leaves us with a z.

586
00:30:30,000 --> 00:30:30,300
Here.

587
00:30:30,300 --> 00:30:32,900
And we know that we just want to one here so that's just going to be

588
00:30:32,900 --> 00:30:33,200
0.

589
00:30:33,200 --> 00:30:34,200
0, 0 1.

590
00:30:35,000 --> 00:30:39,700
So hey guess what we inverted this Matrix without ever having to

591
00:30:39,700 --> 00:30:42,600
really think too hard about it or do an actual 4, by 4 Matrix

592
00:30:42,600 --> 00:30:43,000
inversion?

593
00:30:43,000 --> 00:30:45,900
Which let me tell you is something you probably want left to

594
00:30:45,900 --> 00:30:49,100
Mathematica because actually gaussian eliminating it or something else

595
00:30:49,100 --> 00:30:50,400
is gives a huge pain in the butt.

596
00:30:54,400 --> 00:30:55,700
Okay, let's check our work, though.

597
00:30:57,300 --> 00:30:58,500
Is that correct?

598
00:31:00,100 --> 00:31:01,200
Well, let's go in here.

599
00:31:02,300 --> 00:31:03,700
And erase these guys out.

600
00:31:05,700 --> 00:31:07,600
And just see what happens if I multiply these two.

601
00:31:09,400 --> 00:31:12,300
All right, so take the First Column first row, this is going to be

602
00:31:12,300 --> 00:31:12,800
you.

603
00:31:12,800 --> 00:31:16,000
And one over U is all that's in there and hey guess what that produces

604
00:31:16,000 --> 00:31:17,100
a 1 which is actually want.

605
00:31:17,100 --> 00:31:20,000
Now remember what we're aiming for here is the identity because a

606
00:31:20,100 --> 00:31:22,400
inverse times, a should equal the identity.

607
00:31:22,400 --> 00:31:27,200
So if I multiply this by this, I should get you know 1s down the

608
00:31:27,200 --> 00:31:29,800
diagonal 0 everywhere else does it happen?

609
00:31:30,500 --> 00:31:33,400
Well it's certainly going to happen here, right?

610
00:31:33,400 --> 00:31:35,900
Because multiplying this row by any of these other Rose is going to be

611
00:31:35,900 --> 00:31:37,100
zero so that's all good.

612
00:31:37,300 --> 00:31:39,100
We go down now to the second row.

613
00:31:39,300 --> 00:31:41,600
Again nothing in that first coordinate, right.

614
00:31:41,600 --> 00:31:46,200
Because this this one over U and this V don't don't coincide at all.

615
00:31:46,300 --> 00:31:47,000
Go to the next one.

616
00:31:47,000 --> 00:31:48,900
The one over V and the V do coincide.

617
00:31:48,900 --> 00:31:52,200
So we've got Loops got a one there because going to be V over V which

618
00:31:52,200 --> 00:31:52,800
equals 1.

619
00:31:53,800 --> 00:31:54,600
Which is great.

620
00:31:54,900 --> 00:31:58,100
Now we've got this row 0, 0, 0 negative 1.

621
00:31:58,600 --> 00:32:01,900
What that means is that again, as we go through, for each of these

622
00:32:01,900 --> 00:32:06,600
elements 0 is going to be multiplying everything but the last value.

623
00:32:06,800 --> 00:32:10,300
So we're just basically getting a 0, a 0 and hey, there's that - one

624
00:32:10,300 --> 00:32:11,800
that coincides with the negative 1 here.

625
00:32:11,800 --> 00:32:15,900
So that's a 1 right on that final time.

626
00:32:16,100 --> 00:32:20,300
And then the last time we've got this, this guy and visceral

627
00:32:20,300 --> 00:32:20,700
multiplying.

628
00:32:20,700 --> 00:32:22,800
It there's just that one negative one there.

629
00:32:23,600 --> 00:32:27,200
That's going to multiply this guy which is going to put a 1 over here,

630
00:32:27,300 --> 00:32:29,700
so it's basically just producing the exact identity.

631
00:32:29,700 --> 00:32:30,500
Make sure you wanted right.

632
00:32:30,500 --> 00:32:32,400
You got you got this row times.

633
00:32:32,400 --> 00:32:33,700
This is nothing this row times.

634
00:32:33,700 --> 00:32:35,500
This is nothing this row times.

635
00:32:35,500 --> 00:32:38,500
This is oh wait.

636
00:32:41,300 --> 00:32:42,400
Did I mess that up though?

637
00:32:44,600 --> 00:32:47,700
This row times this.

638
00:32:51,200 --> 00:32:51,600
No, no.

639
00:32:51,600 --> 00:32:53,800
It isn't because this is not this, this is not.

640
00:32:55,400 --> 00:32:57,400
Because we're multiplying this row times.

641
00:32:57,400 --> 00:32:59,200
This column that's going to give me a negative one.

642
00:32:59,400 --> 00:32:59,800
So I think I'm

643
00:33:00,000 --> 00:33:01,700
A slight mistake there didn't?

644
00:33:01,700 --> 00:33:03,300
I should this be a night?

645
00:33:03,300 --> 00:33:04,600
This should be a negative one.

646
00:33:06,800 --> 00:33:07,800
Let's double-check that.

647
00:33:07,800 --> 00:33:08,700
Let me actually write these.

648
00:33:08,700 --> 00:33:12,000
It's hard for me to multiply these side-by-side like, like upside down

649
00:33:12,000 --> 00:33:12,400
like this.

650
00:33:12,400 --> 00:33:14,900
I like to be able to do them where I can see it, but let me just check

651
00:33:14,900 --> 00:33:15,600
that one more time.

652
00:33:17,000 --> 00:33:20,300
So I know that all those are correct, but when we get down to this

653
00:33:20,300 --> 00:33:27,600
last row so you x 0 0 times 0 0 times 0 0 times 0, that's a zero zero

654
00:33:27,600 --> 00:33:28,600
time.

655
00:33:28,700 --> 00:33:31,500
Okay, so then we're going to go down to this column here, right?

656
00:33:31,500 --> 00:33:36,300
So this column here 0 x 0 v x 0 0 times 0 0 times 0.

657
00:33:36,300 --> 00:33:38,200
So that's still a zero as well.

658
00:33:38,400 --> 00:33:41,700
Now we're going to go to this element here so it's this column times

659
00:33:41,700 --> 00:33:46,300
this row 0 times 0 0 x 0 d x, 0 and negative 1 times negative 1.

660
00:33:46,300 --> 00:33:46,400
Yeah.

661
00:33:46,400 --> 00:33:46,700
So

662
00:33:46,800 --> 00:33:50,900
Should have been a negative one there that was that was incorrect of

663
00:33:50,900 --> 00:33:51,200
me.

664
00:33:51,200 --> 00:33:52,600
Looks like, right?

665
00:33:53,700 --> 00:33:56,400
At least that appears to be the case if I want that to be.

666
00:33:58,200 --> 00:33:59,700
Yeah, don't try to be the correct value.

667
00:34:07,600 --> 00:34:10,300
yeah, and then the end and then the final column

668
00:34:14,300 --> 00:34:15,800
Zero zero.

669
00:34:21,500 --> 00:34:24,000
Sorry, this is just this is just bugging me for a second here.

670
00:34:24,300 --> 00:34:28,400
So if we are going to stuff, this is what we're going to end up with

671
00:34:28,400 --> 00:34:29,199
in here.

672
00:34:29,199 --> 00:34:31,500
If this is what, you know, we have negative Z in here.

673
00:34:38,000 --> 00:34:42,800
And we want to be able to get back a one here.

674
00:34:44,699 --> 00:34:48,100
this is actually a little confusing if we write, if we want to be able

675
00:34:48,100 --> 00:34:49,400
to get back a one,

676
00:34:55,199 --> 00:34:56,500
In this location.

677
00:34:57,900 --> 00:35:00,300
Then I need something.

678
00:35:04,000 --> 00:35:05,900
which would X this

679
00:35:08,400 --> 00:35:11,700
gives me a 1 so that's actually more complicated.

680
00:35:11,800 --> 00:35:16,800
I led you astray there by saying that that part

681
00:35:17,700 --> 00:35:19,100
Was as easy as it was.

682
00:35:19,100 --> 00:35:20,000
That's not true.

683
00:35:20,800 --> 00:35:22,400
That's just a bald-faced lie.

684
00:35:26,100 --> 00:35:28,500
I'm going to undo that lie right now.

685
00:35:30,000 --> 00:35:31,300
Here's why that was a lie.

686
00:35:32,600 --> 00:35:35,600
I like in my head sort of did a little brain fart there and said well

687
00:35:35,600 --> 00:35:40,300
okay since the W coordinate so he's one you can just do 0 0 0 1 and

688
00:35:40,300 --> 00:35:40,800
I'll do it.

689
00:35:40,900 --> 00:35:41,700
That's not true.

690
00:35:41,800 --> 00:35:43,800
This is our input Vector now.

691
00:35:44,200 --> 00:35:50,800
So I have to actually make these end up equaling 1, right?

692
00:35:50,900 --> 00:35:52,700
This is all I have four inputs.

693
00:35:52,900 --> 00:35:57,400
So if I want to get a 1 in The W, I've got to make a thing here that

694
00:35:57,400 --> 00:35:59,700
will actually produce that which is harder.

695
00:36:00,200 --> 00:36:00,500
Right.

696
00:36:00,500 --> 00:36:01,800
That's a harder thing to do.

697
00:36:03,300 --> 00:36:05,900
So you can see what that's going to have to be, right?

698
00:36:06,000 --> 00:36:13,200
I I need to figure out a way to make some combination of these values

699
00:36:13,200 --> 00:36:15,500
equal 1.

700
00:36:15,900 --> 00:36:20,500
Right now there's a couple of ways that I could do that but if you

701
00:36:20,500 --> 00:36:24,300
look at what happens here, I can't do it with any combination of these

702
00:36:24,300 --> 00:36:25,100
three terms.

703
00:36:25,400 --> 00:36:25,900
Right?

704
00:36:26,100 --> 00:36:26,700
These two.

705
00:36:26,700 --> 00:36:30,500
And this one because they share nothing in common, it's an x, a y and

706
00:36:30,500 --> 00:36:33,000
a z, no way of combining these.

707
00:36:33,200 --> 00:36:38,600
Ever going to produce that result but because I do have a d y + easy

708
00:36:38,600 --> 00:36:39,000
here.

709
00:36:41,000 --> 00:36:41,500
Right.

710
00:36:50,100 --> 00:36:50,500
Actually.

711
00:36:53,400 --> 00:36:54,400
Why is that look like that?

712
00:36:54,400 --> 00:36:54,900
That's

713
00:36:57,600 --> 00:36:58,500
It's not what that is.

714
00:37:03,100 --> 00:37:04,200
That's that's that right?

715
00:37:04,200 --> 00:37:05,700
That's DZ plus e.

716
00:37:06,000 --> 00:37:07,200
Why did I think I was?

717
00:37:07,200 --> 00:37:08,400
I was one off on their.

718
00:37:08,800 --> 00:37:10,400
Well it's not a good math day, huh?

719
00:37:11,300 --> 00:37:11,500
Yeah.

720
00:37:11,500 --> 00:37:12,200
Right that there.

721
00:37:17,500 --> 00:37:17,900
There we go.

722
00:37:19,700 --> 00:37:21,000
Right 0 times x.

723
00:37:21,000 --> 00:37:23,300
0, x, y, --d, x z.

724
00:37:25,900 --> 00:37:27,700
Right, plus e.

725
00:37:28,700 --> 00:37:31,000
Don't know why the why I got stuffed in there?

726
00:37:31,000 --> 00:37:31,900
That doesn't make any sense.

727
00:37:32,900 --> 00:37:34,400
So that's actually what we've got there.

728
00:37:35,900 --> 00:37:36,400
Right?

729
00:37:37,000 --> 00:37:39,500
And so, yeah, if you take a look at what happens here, what I was

730
00:37:39,500 --> 00:37:42,200
about to say still is the same, but I just want to make sure that was

731
00:37:42,200 --> 00:37:42,900
the correct term.

732
00:37:43,600 --> 00:37:47,100
So I can't really do anything to create a one by using these two

733
00:37:47,100 --> 00:37:48,200
because I don't have the same terms.

734
00:37:48,200 --> 00:37:49,500
I can't use this one in this one.

735
00:37:49,500 --> 00:37:50,500
I can't use this one in this one.

736
00:37:50,500 --> 00:37:54,500
I can't use this one that one, but these two, both have a z in them,

737
00:37:54,800 --> 00:37:55,500
right?

738
00:37:57,100 --> 00:38:01,300
So I should be able to do something potentially to make this work out

739
00:38:01,300 --> 00:38:05,200
so I can get values that actually make sense in the bottom, right?

740
00:38:06,200 --> 00:38:08,600
And so, we can take a look at what this would be.

741
00:38:08,600 --> 00:38:12,800
If I just said down the bottom here, if I just said I had, you know,

742
00:38:14,200 --> 00:38:16,100
what would be the right letters for this?

743
00:38:16,100 --> 00:38:21,900
Let's say I did like I J K L, right?

744
00:38:23,300 --> 00:38:27,200
We basically know in this situation, I and J are useless.

745
00:38:27,200 --> 00:38:29,500
They're not going to produce anything useful for us, right?

746
00:38:31,200 --> 00:38:33,200
So we're basically looking at just k.

747
00:38:34,500 --> 00:38:37,500
I'll actually use just all use iron Jacobs are easier to say Well

748
00:38:37,500 --> 00:38:44,700
they're actually let's use I MK K and J.

749
00:38:44,800 --> 00:38:45,600
That's pretty good.

750
00:38:46,400 --> 00:38:49,700
So if we have two coefficients here that multiply these can we get a

751
00:38:49,700 --> 00:38:53,400
one out of them is basically what we are wondering, right?

752
00:38:53,400 --> 00:38:59,500
In other words, can we figure out some way of getting a one back up in

753
00:38:59,500 --> 00:38:59,800
here?

754
00:39:00,500 --> 00:39:04,400
When we actually do that inverse right when we're multiplying by

755
00:39:04,400 --> 00:39:04,800
these.

756
00:39:05,300 --> 00:39:08,000
So, I want to produce a 1 in the output.

757
00:39:08,100 --> 00:39:10,900
I want to multiply by 0 0, KJ to do it.

758
00:39:10,900 --> 00:39:16,600
And so that would just give me K DZ plus e, right?

759
00:39:16,700 --> 00:39:18,600
And then J is is multiplying this.

760
00:39:18,600 --> 00:39:24,800
So - Jay-Z write equals 1 is it possible to do so that's K.

761
00:39:25,100 --> 00:39:29,900
DZ plus ke minus J.

762
00:39:30,500 --> 00:39:33,500
Z equals one group the terms.

763
00:39:33,500 --> 00:39:34,600
So we end up with

764
00:39:36,200 --> 00:39:41,700
The to Z terms coming together that's K Dee right?

765
00:39:42,400 --> 00:39:46,500
Actually I suppose I want to solve

766
00:39:53,100 --> 00:39:57,700
the tricky thing here is, I could really it's kind of a free variable

767
00:39:57,700 --> 00:40:00,200
problem, so I don't know that I really

768
00:40:06,200 --> 00:40:10,900
I don't know that I really have is our it's going to be over, there's

769
00:40:10,900 --> 00:40:13,500
going to be more ways to do this than just one, right?

770
00:40:13,500 --> 00:40:18,600
Because we've got essentially two variables there to play with and

771
00:40:18,700 --> 00:40:22,400
those there's only one actual output value.

772
00:40:22,400 --> 00:40:27,800
So we don't really have a completely defined system here but either

773
00:40:27,800 --> 00:40:28,100
way.

774
00:40:30,300 --> 00:40:32,500
So let's go ahead and keep moving these around.

775
00:40:32,900 --> 00:40:34,800
So if I, if I

776
00:40:36,100 --> 00:40:39,400
If I take a look at it like this, I should be able to just pick an

777
00:40:39,400 --> 00:40:40,700
arbitrary value for one of these.

778
00:40:40,700 --> 00:40:45,500
So what I could do is say, let's just pick one for Z and see what

779
00:40:45,500 --> 00:40:49,400
happens, for example, that presumably would be one way to do it, so

780
00:40:49,400 --> 00:40:50,300
let's try that.

781
00:40:50,400 --> 00:40:53,800
So if I just said that Jay was equal to one, I would have k.

782
00:40:54,900 --> 00:40:56,000
Do you see pussy?

783
00:40:57,700 --> 00:41:05,000
minus Z equals 1, excuse me again, these terms are

784
00:41:06,900 --> 00:41:07,300
Well.

785
00:41:14,100 --> 00:41:16,700
So now what I want to do here, I guess actually there's no need to do

786
00:41:16,700 --> 00:41:18,400
that because I want to solve for K anyway.

787
00:41:18,400 --> 00:41:20,000
So let me just move the Z over there side.

788
00:41:20,000 --> 00:41:30,700
I get K DZ plus E equals z, i get k equals z over DZ plus e right?

789
00:41:31,300 --> 00:41:32,000
And

790
00:41:34,800 --> 00:41:39,000
It looks like in that case, that's still a little bit dicey, right?

791
00:41:39,100 --> 00:41:42,100
Because it almost works, right?

792
00:41:42,100 --> 00:41:46,400
I would get 1 over D, in this case, if it was just this turn, but the

793
00:41:46,400 --> 00:41:48,100
plus e makes this problematic.

794
00:41:49,500 --> 00:41:49,900
Hmm.

795
00:41:51,200 --> 00:41:51,600
Jimmy.

796
00:41:55,200 --> 00:41:58,000
So that does not quite work.

797
00:42:07,700 --> 00:42:08,000
Hm.

798
00:42:10,400 --> 00:42:13,600
The reason I say this doesn't quite work, you'll have to forgive me

799
00:42:13,600 --> 00:42:15,800
for having an allergy allergy math morning.

800
00:42:17,200 --> 00:42:20,200
If the reason this doesn't quite work is because I can't sets, I can't

801
00:42:20,200 --> 00:42:22,800
use Z in the actual values.

802
00:42:22,800 --> 00:42:25,300
I have to have Z cancel itself out, right?

803
00:42:25,600 --> 00:42:28,900
Because if I wanted to use the in the values, yeah, I'd have to use

804
00:42:28,900 --> 00:42:29,200
them.

805
00:42:30,000 --> 00:42:34,200
If I want to use the in the, in the value itself, that's not possible.

806
00:42:34,200 --> 00:42:37,500
Because the Matrix has to be a set of constant values, it can't be

807
00:42:37,500 --> 00:42:39,300
something that's proportional to one of the input.

808
00:42:39,600 --> 00:42:43,500
Use which in this case would be the Z value, right?

809
00:42:44,400 --> 00:42:45,200
So that's not allowed.

810
00:42:45,200 --> 00:42:49,500
Now, in this case, it would cancel partially but not fully, right?

811
00:42:49,600 --> 00:42:53,500
So we could, for example, divide the top and the Bottom by Z, and you

812
00:42:53,500 --> 00:42:57,300
would get 1 over D, but it would be plus Z over Z which is not

813
00:42:57,300 --> 00:42:58,100
possible to create.

814
00:42:58,100 --> 00:43:01,800
So it's almost there but not quite looking at this slightly

815
00:43:01,800 --> 00:43:02,200
differently.

816
00:43:02,200 --> 00:43:03,800
What I could say is well okay.

817
00:43:04,800 --> 00:43:08,900
I know I want this Matrix to come out like this and so what I need to

818
00:43:08,900 --> 00:43:12,400
do is figure out what I could do Matrix wise, that would make that

819
00:43:12,400 --> 00:43:12,900
happen.

820
00:43:13,800 --> 00:43:17,600
So given the set, the fact that the Matrix looks like this so far,

821
00:43:17,700 --> 00:43:20,200
what is something that multiplies by these values?

822
00:43:20,200 --> 00:43:22,600
That gives me that in the end, right?

823
00:43:23,400 --> 00:43:26,900
And so you know what I would have there is I'd have these four

824
00:43:26,900 --> 00:43:27,500
equations.

825
00:43:27,500 --> 00:43:30,800
I know that I would have to have a 0 here and a 0 here because there

826
00:43:30,800 --> 00:43:32,800
can't be anything here or here.

827
00:43:33,400 --> 00:43:34,000
Right.

828
00:43:35,600 --> 00:43:38,800
And then I would know that I would need to have a zero here as well.

829
00:43:39,700 --> 00:43:40,100
I'm sorry.

830
00:43:40,100 --> 00:43:41,800
I know that I have to have a 0 here, as well.

831
00:43:41,800 --> 00:43:47,300
So multiplying by this, I can't have anything in this location, right?

832
00:43:47,600 --> 00:43:48,500
Well, no, that's not true.

833
00:43:48,500 --> 00:43:48,900
Sorry.

834
00:43:49,500 --> 00:43:52,000
So I would know that I would have one equation that would tell me what

835
00:43:52,000 --> 00:43:55,100
to do here and it would have to work with the D and the negative 1.

836
00:43:55,200 --> 00:43:56,500
So that would be one equation.

837
00:43:56,500 --> 00:44:03,100
I can use right 0 times 0 plus 0 times 0, DK minus J, right?

838
00:44:03,300 --> 00:44:05,100
Um, so DK.

839
00:44:05,100 --> 00:44:10,800
Minus J has to equal 0 and then finally I need a 1 here so that would

840
00:44:10,800 --> 00:44:11,300
be zero.

841
00:44:11,300 --> 00:44:14,100
Zero ke, right?

842
00:44:16,500 --> 00:44:18,600
So just ke has to equal one.

843
00:44:21,100 --> 00:44:24,800
So those to do, give me a set of equations, I could solve now and that

844
00:44:24,800 --> 00:44:26,600
actually works quite a bit better for me.

845
00:44:28,900 --> 00:44:30,900
If I know ke has to equal 1.

846
00:44:31,500 --> 00:44:34,500
Then I know that K is just 1 over e, right?

847
00:44:34,600 --> 00:44:38,700
Once I know that K is 1 over e, that means that D times 1 over e.

848
00:44:38,700 --> 00:44:39,600
Minus J.

849
00:44:39,600 --> 00:44:44,200
Equals 0 or J equals D over ee, right?

850
00:44:46,100 --> 00:44:48,000
So that means my actual Matrix.

851
00:44:52,800 --> 00:44:54,300
if this is to be believed,

852
00:44:55,200 --> 00:44:55,700
Right.

853
00:44:56,800 --> 00:44:58,400
Is going to be 1 over e, 4K.

854
00:45:09,400 --> 00:45:10,000
Is that right?

855
00:45:17,000 --> 00:45:18,100
When I review 4K.

856
00:45:25,100 --> 00:45:26,400
India / e4j?

857
00:45:31,100 --> 00:45:35,300
All right, so let's see if that checks out so 0 times 0 right here to

858
00:45:35,300 --> 00:45:35,700
here.

859
00:45:35,800 --> 00:45:43,200
0 x 0 e times 1 over e is 1 right and 0 times D over eight so that

860
00:45:43,300 --> 00:45:45,400
does equal 1, which is exactly what I wanted.

861
00:45:45,900 --> 00:45:47,200
Let's see about this value here.

862
00:45:47,200 --> 00:45:55,500
Equaling 0 0 times 0 0 times 0, D, / e, and then - do you / e.

863
00:45:55,500 --> 00:45:56,600
So that is exactly one.

864
00:45:56,600 --> 00:46:00,800
Alright, so this does look like the correct inverse Matrix now despite

865
00:46:00,800 --> 00:46:00,800
a

866
00:46:01,000 --> 00:46:02,500
A bit of morning brain fighting there.

867
00:46:03,500 --> 00:46:06,800
And again this was just by doing it by inspection without actually

868
00:46:06,800 --> 00:46:09,200
trying to invert The Matrix in a kind of proper way.

869
00:46:09,900 --> 00:46:13,200
It was a little, I thought it was easier than it was at first.

870
00:46:13,200 --> 00:46:15,700
So I probably should have been a little more rigorous about that I've

871
00:46:15,700 --> 00:46:19,300
but, you know, sometimes you get you get lulled into when you see that

872
00:46:19,300 --> 00:46:23,600
nice starting diagonal structure, their into just being a little bit

873
00:46:23,600 --> 00:46:27,200
lazy, which I was however, it looks like now we've got the correct

874
00:46:27,500 --> 00:46:30,800
inverse Matrix here, which means if you take a look at what happens,

875
00:46:30,900 --> 00:46:34,800
And we now have a way of constructing the inverse projection.

876
00:46:41,500 --> 00:46:43,400
Without actually having to invert The Matrix.

877
00:46:43,400 --> 00:46:48,000
But unfortunately our projection Matrix, if you look at what happens.

878
00:46:52,200 --> 00:46:55,000
Our projection Matrix is actually produced slightly differently than

879
00:46:55,000 --> 00:46:55,500
that.

880
00:46:55,600 --> 00:46:59,000
It takes to projection Matrix, which yes, does come directly from this

881
00:46:59,000 --> 00:47:00,200
stuff, right?

882
00:47:02,600 --> 00:47:06,100
But it takes that Matrix and then it multiplies it by this camera

883
00:47:06,100 --> 00:47:07,000
Matrix, right?

884
00:47:07,000 --> 00:47:12,200
And that camera Matrix is another sort of fancy set of components

885
00:47:12,200 --> 00:47:12,400
right?

886
00:47:12,400 --> 00:47:20,300
XYZ axes and a in a position, right?

887
00:47:22,600 --> 00:47:26,000
So all that is a little bit wonky as well.

888
00:47:26,600 --> 00:47:28,000
So what do we do about that?

889
00:47:28,600 --> 00:47:31,600
Well, because we remember we have to do the complete, we have to undo

890
00:47:31,600 --> 00:47:33,000
the transfer and buy this.

891
00:47:34,000 --> 00:47:36,300
Well again we can lean on, linear algebra a little bit here.

892
00:47:38,000 --> 00:47:39,500
And just take a look at what happens.

893
00:47:40,000 --> 00:47:42,100
So we've got a situation like this, right?

894
00:47:42,100 --> 00:47:47,000
Our projection Matrix is a combination of two of these things, right?

895
00:47:47,000 --> 00:47:48,400
It's a and b.

896
00:47:49,900 --> 00:47:54,000
Well, if you take a look at what would happen, if we have a, and b

897
00:47:54,000 --> 00:47:55,700
times a point, right?

898
00:47:55,700 --> 00:47:57,200
This is what we're doing essentially.

899
00:47:58,200 --> 00:47:59,400
And we want to undo this.

900
00:48:00,000 --> 00:48:01,600
We want to solve for p.

901
00:48:01,900 --> 00:48:04,500
Well, we can use the same trick that I applied before.

902
00:48:04,900 --> 00:48:07,300
If I multiply both sides by a inverse,

903
00:48:08,900 --> 00:48:09,800
I would get this.

904
00:48:12,300 --> 00:48:12,800
Right?

905
00:48:13,100 --> 00:48:17,500
And this a inverse, a is going to cancel out so I get a inverse P

906
00:48:17,500 --> 00:48:19,300
Prime equals BP.

907
00:48:20,600 --> 00:48:20,900
Right.

908
00:48:20,900 --> 00:48:21,700
That's all good.

909
00:48:22,600 --> 00:48:23,200
Keep going.

910
00:48:23,300 --> 00:48:25,000
Multiply both sides by B, inverse

911
00:48:29,200 --> 00:48:30,900
Now I have the solution to the equation.

912
00:48:30,900 --> 00:48:33,600
I wanted, I want P the input.

913
00:48:33,600 --> 00:48:35,000
I have the output which is p.

914
00:48:35,000 --> 00:48:39,500
Prime, I know that I multiply by B inverse a inverse to get it right.

915
00:48:40,100 --> 00:48:44,500
What that means is that if I have a matrix, a b, which is what I have

916
00:48:44,500 --> 00:48:50,000
for my projection, I can compute its inverse Matrix right there by

917
00:48:50,000 --> 00:48:50,500
inverting.

918
00:48:50,500 --> 00:48:53,400
Both of these separately and swapping the order.

919
00:48:53,700 --> 00:48:54,200
Right?

920
00:48:54,700 --> 00:48:56,800
So the inverse projection Matrix

921
00:48:59,000 --> 00:49:03,200
is actually just the B Matrix inverted times, the a matrix inverted

922
00:49:03,200 --> 00:49:05,000
and that I could do,

923
00:49:08,400 --> 00:49:16,200
One because I did invert b or sorry, a already.

924
00:49:16,200 --> 00:49:21,000
I did already invert the projection part by hand and we know what that

925
00:49:21,000 --> 00:49:22,400
is so we could build it directly.

926
00:49:24,000 --> 00:49:26,100
And the camera transform, right?

927
00:49:26,100 --> 00:49:29,800
We can do all kinds of sliced up with because we know our camera

928
00:49:29,800 --> 00:49:33,400
transform has a very specific structure to it, right?

929
00:49:33,800 --> 00:49:36,500
So we'll take a look at that in a second, but,

930
00:49:38,600 --> 00:49:42,000
what that does mean is we want to augment and this is something that I

931
00:49:42,000 --> 00:49:47,400
generally do all the time for these routines in in the real world in

932
00:49:47,400 --> 00:49:53,800
life is like typically have a thing called like, you know,

933
00:49:55,300 --> 00:49:59,000
M, 4 by 4 inverse or something like this.

934
00:50:00,200 --> 00:50:04,500
And what it has is like forward and inverse in it.

935
00:50:05,100 --> 00:50:09,100
And when you make a routine, you just generate both the forward Matrix

936
00:50:09,200 --> 00:50:12,500
and the reverse Matrix at the same time, right?

937
00:50:12,900 --> 00:50:15,100
We don't need these here anymore.

938
00:50:19,900 --> 00:50:22,300
so this our Matrix, I'm going to call F now

939
00:50:23,400 --> 00:50:27,200
and we call this one, eye is bad because it means identity.

940
00:50:27,200 --> 00:50:29,900
So let's call this reverse.

941
00:50:32,600 --> 00:50:37,300
Not a great word for it but I guess it just depends on your

942
00:50:37,300 --> 00:50:38,000
perspective.

943
00:50:43,500 --> 00:50:44,400
Pun intended.

944
00:50:45,600 --> 00:50:47,500
All right so if I want to make the forward Matrix, I know it looks

945
00:50:47,500 --> 00:50:47,800
like this.

946
00:50:47,800 --> 00:50:52,200
If I want to make the inverse Matrix, I now know what that does look

947
00:50:52,200 --> 00:50:52,500
like.

948
00:50:52,500 --> 00:50:53,500
Let's go ahead and

949
00:50:55,800 --> 00:50:56,400
It's that.

950
00:50:57,600 --> 00:50:59,600
So, this is 1 over a times C.

951
00:51:01,500 --> 00:51:02,600
And then just zeros.

952
00:51:05,300 --> 00:51:09,800
This is 1 over U times C.

953
00:51:14,200 --> 00:51:15,100
And the zeros.

954
00:51:27,100 --> 00:51:27,600
There we go.

955
00:51:28,400 --> 00:51:30,200
And then this is all zeros in a negative.

956
00:51:35,800 --> 00:51:39,700
And this is all zeros and then an into inverses Francis is 0.

957
00:51:40,800 --> 00:51:43,100
0 1 over e.

958
00:51:44,300 --> 00:51:45,000
Do you already?

959
00:51:51,700 --> 00:51:52,200
Right.

960
00:51:52,900 --> 00:51:56,800
So now we've got a reverse Matrix here and what we can do in our test

961
00:51:56,800 --> 00:51:58,100
code as well as we can do.

962
00:51:58,100 --> 00:52:02,300
Like I and we can say, let's make sure that the reverse times the

963
00:52:02,300 --> 00:52:04,600
forwards actually does equal.

964
00:52:04,600 --> 00:52:06,900
The identity Matrix that makes sense.

965
00:52:08,700 --> 00:52:12,200
So, let's just try that and four by four.

966
00:52:13,500 --> 00:52:14,700
In results.

967
00:52:15,100 --> 00:52:16,600
I guess we could do this as well.

968
00:52:26,800 --> 00:52:28,000
Like, I suppose, I could do this.

969
00:52:45,200 --> 00:52:46,300
That's a little better, isn't it?

970
00:52:55,700 --> 00:52:58,800
So now we've created both of these and we return that result, we get

971
00:52:58,800 --> 00:53:02,000
both of them back the forward and the inverse right because they're

972
00:53:02,000 --> 00:53:04,900
pretty cheap for it to build both of them, if that makes sense.

973
00:53:05,500 --> 00:53:10,200
And we can also test them here so we can say result, inverse times

974
00:53:10,600 --> 00:53:12,600
result dot forward.

975
00:53:16,300 --> 00:53:18,900
Too many initializers.

976
00:53:20,300 --> 00:53:20,900
It is.

977
00:53:22,800 --> 00:53:24,800
How is that too many initializers?

978
00:53:26,000 --> 00:53:29,000
This is supposed to have two Matrix 4 by 4, isn't it, right?

979
00:53:29,100 --> 00:53:30,200
Here's the first one.

980
00:53:36,400 --> 00:53:39,500
It's going to be one of those cases of more brackets than anyone has

981
00:53:39,500 --> 00:53:40,700
ever had before.

982
00:53:43,000 --> 00:53:44,900
Do you just want me to bracket that more?

983
00:53:48,000 --> 00:53:51,600
Yes, so here we go forward.

984
00:53:54,100 --> 00:53:54,800
And there we are.

985
00:53:56,200 --> 00:53:59,800
All right, and so now in perspective, projection, we can just grab the

986
00:54:00,000 --> 00:54:02,800
Word out we don't have to change this routine yet but we can jump into

987
00:54:02,800 --> 00:54:06,200
our math now and actually test what we did because you saw that I was

988
00:54:06,200 --> 00:54:08,100
having a little bit of a slow math morning there.

989
00:54:08,100 --> 00:54:11,600
I don't want to just dump that coat in and go, I'm sure it works fine,

990
00:54:11,600 --> 00:54:16,100
it'll be great because that's not probably a same way to do things.

991
00:54:16,200 --> 00:54:18,900
So I'm going to go ahead and go to perspective.

992
00:54:20,100 --> 00:54:20,700
Affection.

993
00:54:23,100 --> 00:54:23,600
Here we go.

994
00:54:24,400 --> 00:54:27,200
And when we produce these two matrices, now I can take a look at the

995
00:54:27,200 --> 00:54:28,700
resulting Matrix when I multiply them together.

996
00:54:28,700 --> 00:54:31,400
And again, we should expect the identity Matrix if we don't get the in

997
00:54:31,400 --> 00:54:33,100
and make sure we know we messed up now.

998
00:54:33,100 --> 00:54:33,700
There it is.

999
00:54:33,700 --> 00:54:35,500
So we're looking good here, right?

1000
00:54:36,100 --> 00:54:40,200
And we can test this a few times, obviously, oops, I Don't Wanna Stop

1001
00:54:40,200 --> 00:54:41,600
wherever there was a stopping, there we go.

1002
00:54:42,900 --> 00:54:45,400
So you can kind of see like I'm just verifying.

1003
00:54:45,400 --> 00:54:47,500
This is always going to be in a matrix and that's good.

1004
00:54:47,500 --> 00:54:52,000
That's what we want and and everything's happy and these are real

1005
00:54:52,000 --> 00:54:52,700
values coming in.

1006
00:54:52,900 --> 00:54:54,200
Are so that's all good.

1007
00:54:55,900 --> 00:54:57,600
Yeah, right.

1008
00:54:57,800 --> 00:55:01,300
So now we've built the forward and inverse matrices for that.

1009
00:55:01,400 --> 00:55:04,100
Let's just do the one for the orthographic projection because that's

1010
00:55:04,200 --> 00:55:06,400
like basically the exact same Matrix, right?

1011
00:55:06,400 --> 00:55:08,700
It's going to be pretty much identical.

1012
00:55:09,700 --> 00:55:11,100
Just a little bit simpler probably.

1013
00:55:12,600 --> 00:55:14,000
So we can do the exact same thing.

1014
00:55:14,200 --> 00:55:16,500
So here's the orthographic projection, right?

1015
00:55:16,500 --> 00:55:20,600
The Matrix is even simpler because it's only got one off agonal

1016
00:55:20,600 --> 00:55:25,500
element instead of to off agonal elements and it has a 1 in the final

1017
00:55:25,500 --> 00:55:26,500
position as well.

1018
00:55:26,700 --> 00:55:29,200
So we're talking about an even easier solution here.

1019
00:55:29,500 --> 00:55:30,500
So let's go ahead and do it.

1020
00:55:30,500 --> 00:55:33,700
We'll see if I can not be as much of a math, but since I was on the

1021
00:55:33,700 --> 00:55:34,500
previous one.

1022
00:55:35,100 --> 00:55:38,400
So here's, I'm just going to do this one directly since, hopefully

1023
00:55:38,400 --> 00:55:39,400
everyone gets the idea by now.

1024
00:55:40,000 --> 00:55:42,000
Oops, some drawn problems.

1025
00:55:42,000 --> 00:55:48,000
Here A B, it's a b d e, so a 0, 0 0.

1026
00:55:49,000 --> 00:55:50,100
Be let me have it.

1027
00:55:50,300 --> 00:55:55,100
I'm having a really bad drawing time right now, for some reason, 00.

1028
00:55:56,500 --> 00:55:58,700
0 0, d e.

1029
00:56:02,300 --> 00:56:05,100
00:01 Boot.

1030
00:56:07,400 --> 00:56:09,100
And now we want to multiply these together.

1031
00:56:10,400 --> 00:56:12,500
All right, so same thing is true here.

1032
00:56:12,500 --> 00:56:14,900
We know that this is just going to have to be an inverse a there's no

1033
00:56:14,900 --> 00:56:16,600
other way around that, right?

1034
00:56:17,100 --> 00:56:19,600
So, if we look at what happens here in order to get a one, we just

1035
00:56:19,600 --> 00:56:21,900
have to have an inverse a same exact thing as before.

1036
00:56:22,000 --> 00:56:25,000
Same thing here with be, that's going to have to be a 1 over B to get

1037
00:56:25,000 --> 00:56:26,900
that to happen, right?

1038
00:56:27,200 --> 00:56:27,500
Oops.

1039
00:56:29,900 --> 00:56:30,600
and again, that

1040
00:56:32,900 --> 00:56:36,100
These all have to multiply out the same as well.

1041
00:56:36,300 --> 00:56:36,600
Alright.

1042
00:56:36,600 --> 00:56:40,200
So 0 over B, that's just going to give us this row, which is what I'm

1043
00:56:40,200 --> 00:56:44,100
sorry, 1 over B is going to give us this row and then we move on to

1044
00:56:44,600 --> 00:56:45,800
getting this part to work out.

1045
00:56:45,800 --> 00:56:51,300
So now we have to have D, we would need a 1 over D here to get a 1,

1046
00:56:51,900 --> 00:56:53,100
but we also have the E.

1047
00:56:53,100 --> 00:56:54,900
So we need to be a little bit more careful.

1048
00:56:54,900 --> 00:56:59,800
This one, this row with the 0001 as well or this column here.

1049
00:57:00,000 --> 00:57:01,800
it's going to be a little interesting to, but

1050
00:57:03,100 --> 00:57:04,000
We know, a couple things.

1051
00:57:04,300 --> 00:57:09,200
So first of all, a times this row has to equal to 0 here, right?

1052
00:57:09,200 --> 00:57:13,500
Which means that we know that the first value would have to be zero

1053
00:57:13,500 --> 00:57:15,400
because you're not going to get an A to cancel that from anywhere

1054
00:57:15,400 --> 00:57:15,700
else.

1055
00:57:15,700 --> 00:57:19,300
So we know that that has to be zero as we come through, right?

1056
00:57:20,700 --> 00:57:21,900
That's that's just a given.

1057
00:57:23,800 --> 00:57:30,700
Furthermore when we come through here, multiply 0 B 0 0 right we would

1058
00:57:30,700 --> 00:57:35,900
know that we have to cancel out the be so that has to be zero as well.

1059
00:57:37,100 --> 00:57:42,800
And so then here we are just left with 0 0 D 0 which I guess means

1060
00:57:42,800 --> 00:57:46,100
that yeah, if for this row is well this would have to be a 1 over D

1061
00:57:46,400 --> 00:57:48,700
because there's nothing, there's no other coefficients.

1062
00:57:48,800 --> 00:57:51,000
This is the only one that we can actually use.

1063
00:57:51,200 --> 00:57:54,500
So, in order to get that one there, we know it has to be 0, 0 1 over

1064
00:57:54,500 --> 00:57:57,300
d, right?

1065
00:57:57,800 --> 00:58:00,700
And then, finally, for this one, we would have 0 0.

1066
00:58:00,900 --> 00:58:04,800
D, the whatever D would multiply this guy, right?

1067
00:58:05,200 --> 00:58:06,500
So this is going to end up

1068
00:58:06,600 --> 00:58:08,900
Being an e over D term.

1069
00:58:10,100 --> 00:58:10,800
Right here.

1070
00:58:11,700 --> 00:58:16,700
So if we need this to equal zero, we would need to then have this x,

1071
00:58:16,700 --> 00:58:20,100
we would have to subtract an e over D here, right?

1072
00:58:20,200 --> 00:58:22,600
So this has to be a - e over D.

1073
00:58:22,800 --> 00:58:26,800
In order to get this to come out to 0 which we need it to, right?

1074
00:58:28,400 --> 00:58:32,600
I don't want that to read improperly some do - you ever do way over

1075
00:58:32,600 --> 00:58:33,000
there.

1076
00:58:34,000 --> 00:58:35,900
So then it's right you can see what happens.

1077
00:58:35,900 --> 00:58:43,100
We get 0 times 0 0 x 0 e times 1 over D is e over d, right?

1078
00:58:43,400 --> 00:58:44,100
1 times.

1079
00:58:44,100 --> 00:58:47,400
Negative B over D is - yard eat those cancel out and become 0 which is

1080
00:58:47,400 --> 00:58:48,300
what we want.

1081
00:58:48,400 --> 00:58:52,500
And finally we have all these are going to be 0 against.

1082
00:58:52,500 --> 00:58:54,000
We don't want the a to multiply in.

1083
00:58:54,300 --> 00:58:55,800
We don't want the be to multiply in.

1084
00:58:56,600 --> 00:58:57,800
We end up here with zero.

1085
00:58:58,000 --> 00:58:59,800
0d x 1 over D.

1086
00:58:59,800 --> 00:59:02,100
That's going to be a 1, right?

1087
00:59:03,100 --> 00:59:04,600
This is a d over D here.

1088
00:59:06,900 --> 00:59:09,500
As well as we come down to multiply through.

1089
00:59:12,000 --> 00:59:12,600
Oh wait no.

1090
00:59:12,600 --> 00:59:13,500
Why am I saying that?

1091
00:59:14,100 --> 00:59:15,000
We're not mouth like that.

1092
00:59:15,000 --> 00:59:19,800
R 0, 0, 0, 0 0, d x, something but we don't want anything so we just

1093
00:59:19,800 --> 00:59:25,100
put a zero there, never mind and then 0 times, whatever would be here

1094
00:59:25,100 --> 00:59:26,700
which we don't have to think about yet.

1095
00:59:27,200 --> 00:59:32,500
And then furthermore last row 0 times 0 0 times 0 0 times e + 1 times

1096
00:59:32,500 --> 00:59:32,800
1.

1097
00:59:34,200 --> 00:59:34,700
Right.

1098
00:59:41,900 --> 00:59:42,300
Okay.

1099
00:59:46,000 --> 00:59:47,400
Just want to double check for brain farts again.

1100
00:59:47,400 --> 00:59:47,900
On that one.

1101
00:59:49,100 --> 00:59:50,300
They didn't put those in the wrong place.

1102
00:59:53,000 --> 00:59:55,000
So multiplying down the row here.

1103
00:59:59,700 --> 00:59:59,800
Okay.

1104
01:00:00,000 --> 01:00:06,400
Whatever 8 times a is 100 000 000 B times B, right?

1105
01:00:06,500 --> 01:00:07,400
That's one there.

1106
01:00:07,800 --> 01:00:08,700
00.

1107
01:00:08,700 --> 01:00:12,100
000 000.

1108
01:00:12,100 --> 01:00:13,000
1 over D times.

1109
01:00:13,000 --> 01:00:15,800
D is d, right?

1110
01:00:17,700 --> 01:00:18,400
Which is 1.

1111
01:00:18,800 --> 01:00:25,500
So 1 over D times, D is D over DT which is 1 and then 0 times,

1112
01:00:25,900 --> 01:00:29,600
negative a over D is just 0

1113
01:00:30,000 --> 01:00:31,600
which is what we want.

1114
01:00:31,800 --> 01:00:32,600
So that's good.

1115
01:00:36,100 --> 01:00:37,700
Yes, that's all good.

1116
01:00:38,700 --> 01:00:40,500
Then let's take a look at this 10 times 0.

1117
01:00:40,500 --> 01:00:43,100
0, times 0 e x.

1118
01:00:43,500 --> 01:00:49,300
That is one, over is e over D and then 1 times negative B over D, that

1119
01:00:49,300 --> 01:00:52,400
looks right to, all right, so think that looks right.

1120
01:00:54,200 --> 01:01:00,100
Let's double check because again, slow math morning means probably

1121
01:01:00,100 --> 01:01:04,400
making a mistake somewhere and 4x4 inverse.

1122
01:01:06,000 --> 01:01:07,200
Let's take a look.

1123
01:01:08,900 --> 01:01:11,200
V equals.

1124
01:01:21,800 --> 01:01:22,700
whenever a

1125
01:01:38,500 --> 01:01:40,500
and again, I'm just copying this from the math.

1126
01:01:41,200 --> 01:01:42,400
Not doing anything here.

1127
01:01:43,400 --> 01:01:44,800
And - you ready?

1128
01:02:02,000 --> 01:02:02,600
All right.

1129
01:02:09,900 --> 01:02:12,200
Let's see how that does.

1130
01:02:15,100 --> 01:02:18,200
So, coming into the orthographic projection here.

1131
01:02:20,400 --> 01:02:21,500
And let's take a look.

1132
01:02:21,500 --> 01:02:23,200
Do we get an identity or didn't we?

1133
01:02:23,500 --> 01:02:24,200
We did.

1134
01:02:28,600 --> 01:02:29,100
Good.

1135
01:02:35,100 --> 01:02:35,500
All right.

1136
01:02:36,900 --> 01:02:41,000
So, I think that is now satisfactory.

1137
01:02:45,100 --> 01:02:49,700
Although she is 0, is that right near plus far near - far?

1138
01:02:51,200 --> 01:02:52,100
Oh yeah, that is correct.

1139
01:02:57,600 --> 01:02:58,000
All right.

1140
01:03:01,600 --> 01:03:02,900
So, what does that give us?

1141
01:03:02,900 --> 01:03:08,100
Well, now we actually have M by M 4 by 4 in verse that we can take

1142
01:03:08,200 --> 01:03:08,600
here.

1143
01:03:10,200 --> 01:03:12,500
Right and to produce our projection Matrix.

1144
01:03:12,500 --> 01:03:15,300
Now we know that we can do it by going like this.

1145
01:03:25,500 --> 01:03:25,800
Gonna.

1146
01:03:27,300 --> 01:03:27,800
Do that.

1147
01:03:29,300 --> 01:03:32,300
So we can create a projection matrix by using the forward transform.

1148
01:03:32,300 --> 01:03:35,200
But now we also have the inverse transform, which means that if we

1149
01:03:35,200 --> 01:03:38,200
wanted to make an inverse, right?

1150
01:03:39,000 --> 01:03:41,300
So that when we do our setup, we store both of them.

1151
01:03:42,100 --> 01:03:47,100
We can actually do that by taking the reverse and just having a camera

1152
01:03:47,100 --> 01:03:48,700
C inverse as well.

1153
01:03:50,400 --> 01:03:50,800
Right.

1154
01:03:50,800 --> 01:03:51,100
Oops.

1155
01:03:53,500 --> 01:03:57,000
Because remember, if we just swap the order of these two and invert

1156
01:03:57,000 --> 01:04:00,400
them, we would get an inverse that does exactly what we want.

1157
01:04:00,400 --> 01:04:03,400
So the question is just how do we build an inverse camera?

1158
01:04:03,400 --> 01:04:07,100
See, because you can see here is US building the camera transform.

1159
01:04:08,500 --> 01:04:10,400
so, if we take a look inside math,

1160
01:04:12,400 --> 01:04:14,700
Here's our camera, transform right?

1161
01:04:18,300 --> 01:04:19,000
Does that make sense?

1162
01:04:21,300 --> 01:04:24,300
So the question is just, how do we make an inverse can be transformed

1163
01:04:24,500 --> 01:04:27,300
and in fact, you can imagine us doing the exact same thing here that

1164
01:04:27,300 --> 01:04:28,000
we did before.

1165
01:04:28,300 --> 01:04:31,700
If we could make this camera seba forward and inverse as well.

1166
01:04:32,100 --> 01:04:35,700
Then we would just say, well camera, C inverse, right?

1167
01:04:35,800 --> 01:04:39,800
So, we could have exactly the same thing that we had in all cases,

1168
01:04:40,000 --> 01:04:40,500
right?

1169
01:04:42,400 --> 01:04:46,000
So, the question now is just how do we make this produce em 4x4

1170
01:04:46,000 --> 01:04:48,000
inverse rather than just a single

1171
01:04:48,200 --> 01:04:51,400
Goal and four by four.

1172
01:05:00,800 --> 01:05:01,700
That's what we're trying to do.

1173
01:05:02,600 --> 01:05:04,800
Because once we do that, then we have a complete inverse.

1174
01:05:05,100 --> 01:05:07,400
When we have the complete inverse, we're pretty much done with our own

1175
01:05:07,400 --> 01:05:11,700
project because all we had to do for unprojected is actually take

1176
01:05:11,700 --> 01:05:12,600
those coordinates.

1177
01:05:12,600 --> 01:05:15,600
Those clip coordinates that we already had that we you know, reverse

1178
01:05:15,600 --> 01:05:16,900
the screen space transform on.

1179
01:05:18,200 --> 01:05:19,600
And push it through that Matrix and out.

1180
01:05:19,600 --> 01:05:24,500
We would get the the correct on projected value, right?

1181
01:05:24,900 --> 01:05:27,200
So the question is, what is this Matrix?

1182
01:05:27,200 --> 01:05:32,400
We know we're making this thing here but what is what is this, you

1183
01:05:32,400 --> 01:05:32,600
know.

1184
01:05:34,600 --> 01:05:39,500
Well, this one becomes a lot more Analytical in the sense that you

1185
01:05:39,500 --> 01:05:41,800
kind of got to put on your thinking cap a little bit harder than

1186
01:05:41,800 --> 01:05:42,200
before.

1187
01:05:42,200 --> 01:05:44,600
It's not just a bag of numbers we can just look at, right?

1188
01:05:44,900 --> 01:05:47,600
It's a lot more complicated than that, we're talking about something

1189
01:05:47,600 --> 01:05:52,100
we're alright, we know we've got a row here, that's the x-axis, right?

1190
01:05:52,100 --> 01:05:54,500
And then a 0, we've got a row here.

1191
01:05:54,500 --> 01:05:55,400
This is the y-axis.

1192
01:05:55,400 --> 01:05:56,500
And then a 0 or 0.

1193
01:05:56,500 --> 01:05:58,400
Here, this is the Z axis, and a zero.

1194
01:05:59,100 --> 01:05:59,500
Okay,

1195
01:06:00,200 --> 01:06:02,500
And then we've got the position and a one.

1196
01:06:03,200 --> 01:06:05,700
That's what we're looking at, right?

1197
01:06:06,000 --> 01:06:07,000
As a matrix.

1198
01:06:08,200 --> 01:06:09,600
This is the camera Matrix.

1199
01:06:11,900 --> 01:06:12,400
Well.

1200
01:06:14,800 --> 01:06:17,400
Let's take these two in separate parts.

1201
01:06:18,000 --> 01:06:21,400
So what did we learn from looking at the way?

1202
01:06:21,400 --> 01:06:22,500
We were inverting matrices.

1203
01:06:22,500 --> 01:06:29,600
Before what you can sort of see is that upper pieces cannot be

1204
01:06:29,600 --> 01:06:35,400
affected by lower pieces in a way, to put this, how should I put this?

1205
01:06:35,600 --> 01:06:39,200
So, if you think of a matrix as being like, this sort of a thing,

1206
01:06:39,400 --> 01:06:39,900
right?

1207
01:06:40,000 --> 01:06:43,800
We're like, if I have a 4 by 4 Matrix, there's a 1 by 1 Matrix and

1208
01:06:43,800 --> 01:06:44,400
then a two-byte.

1209
01:06:44,600 --> 01:06:48,000
Matrix and a 3 by 3, Matrix on a 4, by 4 Matrix, right?

1210
01:06:48,000 --> 01:06:49,600
It's like it's growing each time.

1211
01:06:51,100 --> 01:06:53,200
Well this one by one Matrix here.

1212
01:06:54,000 --> 01:06:57,000
It's got to invert exactly the way it inverts.

1213
01:06:57,300 --> 01:06:57,700
Right.

1214
01:06:57,700 --> 01:06:59,400
There's nothing there's nothing.

1215
01:06:59,400 --> 01:07:03,600
These values can do out here to really change what the inverse of that

1216
01:07:03,600 --> 01:07:04,600
thing is going to be.

1217
01:07:04,800 --> 01:07:07,500
And the reason for that is simply because like

1218
01:07:10,400 --> 01:07:11,200
How should I put this?

1219
01:07:11,300 --> 01:07:14,400
You can see the way this was happening up here, right?

1220
01:07:14,400 --> 01:07:17,900
When I'm multiplying, these things together, I'm going to get this row

1221
01:07:17,900 --> 01:07:18,300
times.

1222
01:07:18,300 --> 01:07:21,400
This row to produce this value, right?

1223
01:07:21,600 --> 01:07:22,700
And there's not a lot.

1224
01:07:22,700 --> 01:07:26,500
I there's, I'm never going to involve anything else outside of that,

1225
01:07:26,600 --> 01:07:27,100
right?

1226
01:07:27,300 --> 01:07:30,600
So in some senses I guess maybe it's wrong to say like the one by one.

1227
01:07:30,600 --> 01:07:35,300
But you're looking at it in slices that look like this, right?

1228
01:07:35,300 --> 01:07:39,300
And this bottom part is now no longer involved in producing.

1229
01:07:39,600 --> 01:07:40,200
Value.

1230
01:07:41,900 --> 01:07:45,500
So, you always have this sort of way of kind of looking at the Matrix,

1231
01:07:45,500 --> 01:07:50,700
if you want to of isolating pieces of it and you can, you know, you

1232
01:07:50,700 --> 01:07:54,300
can think about those pieces as being

1233
01:07:57,100 --> 01:08:00,700
You can think about those pieces individually, if you can identify

1234
01:08:00,700 --> 01:08:03,800
ways in, which they will not affect, or other things cannot affect

1235
01:08:03,800 --> 01:08:04,200
them.

1236
01:08:04,900 --> 01:08:06,200
This is a really bad explanation.

1237
01:08:06,900 --> 01:08:07,900
Let me try that one more time.

1238
01:08:08,500 --> 01:08:11,000
So, if you take a look at the structure of this Matrix, right?

1239
01:08:11,000 --> 01:08:15,000
You can see that it has this 00:01 on the bottom, right?

1240
01:08:17,200 --> 01:08:21,500
If you take a look at how that will have to interact when I multiply

1241
01:08:21,500 --> 01:08:23,800
this by its inverse, right?

1242
01:08:23,800 --> 01:08:24,300
So,

1243
01:08:25,399 --> 01:08:26,500
Give yourself a little more room here.

1244
01:08:29,300 --> 01:08:32,200
When I multiply this by its inverse what is that telling me?

1245
01:08:32,399 --> 01:08:36,600
Well these three zeros down here mean that when I do this

1246
01:08:36,600 --> 01:08:39,200
multiplication to produce this value.

1247
01:08:39,700 --> 01:08:43,800
I'm not considering what happens here at all right.

1248
01:08:43,899 --> 01:08:47,500
Furthermore, this part right here, I'm not concerning what happens

1249
01:08:47,500 --> 01:08:50,200
here at all right, or here.

1250
01:08:50,800 --> 01:08:55,500
So essentially what's happening with this Matrix is I know that when I

1251
01:08:55,500 --> 01:08:59,700
compute the inverse, I don't have to care what happens here.

1252
01:09:00,000 --> 01:09:05,700
All, when I produce this inverse so I know that I'm going to have to

1253
01:09:05,700 --> 01:09:08,800
produce this upper 3x3.

1254
01:09:11,100 --> 01:09:15,200
Without using these which means that the only things I have for

1255
01:09:15,200 --> 01:09:17,399
producing that three by three are here.

1256
01:09:18,800 --> 01:09:19,300
Right.

1257
01:09:21,500 --> 01:09:22,399
The can't be in here.

1258
01:09:24,500 --> 01:09:26,800
Because those those vote terms can't contribute.

1259
01:09:28,300 --> 01:09:32,000
Furthermore, I know that the only thing that is in these coordinates

1260
01:09:32,200 --> 01:09:36,200
is the position and the position is certainly not going to be involved

1261
01:09:36,200 --> 01:09:40,399
in canceling out the axes since they're unrelated which means that

1262
01:09:40,399 --> 01:09:43,700
this part of the Matrix which is the part of the inverse Matrix, that

1263
01:09:43,700 --> 01:09:46,500
would multiply p is also not involved.

1264
01:09:47,300 --> 01:09:53,700
So that allows me to focus on just the upper 3x3 and know that this 3

1265
01:09:53,700 --> 01:09:58,400
by 3 and this 3 by 3 come together to form this inverse without the

1266
01:09:58,400 --> 01:10:00,400
participation of the outer rows.

1267
01:10:01,900 --> 01:10:03,400
I think that was a better explanation.

1268
01:10:03,500 --> 01:10:05,200
Hopefully that made some sense to you.

1269
01:10:11,000 --> 01:10:11,500
All right.

1270
01:10:13,000 --> 01:10:14,100
so, the question is,

1271
01:10:15,200 --> 01:10:17,900
if I have an X Y and Z axis in here,

1272
01:10:21,200 --> 01:10:21,500
Oops.

1273
01:10:28,600 --> 01:10:34,100
So, if I have an X Y and Z axis in here, how would I go about

1274
01:10:34,100 --> 01:10:39,400
producing a matrix which when multiplied here would produce the

1275
01:10:39,400 --> 01:10:40,300
identity Matrix?

1276
01:10:40,800 --> 01:10:45,200
Well, those of you that remember all of our discussions about the

1277
01:10:45,200 --> 01:10:47,800
inverses, the transpose, right?

1278
01:10:47,800 --> 01:10:48,700
Do you remember this?

1279
01:10:57,000 --> 01:11:00,700
Basically if a is an orthogonal Matrix a inverse equals a transpose.

1280
01:11:01,000 --> 01:11:01,900
Remember that?

1281
01:11:03,200 --> 01:11:06,700
Well it just so happens that if this were an orthogonal Matrix and we

1282
01:11:06,700 --> 01:11:08,500
know that it mostly is, right?

1283
01:11:08,500 --> 01:11:11,700
Because if these were unit length and they're at right angles to each

1284
01:11:11,700 --> 01:11:14,000
other then it's orthogonal, right?

1285
01:11:14,000 --> 01:11:16,500
That's the definition of an orthogonal coordinate system.

1286
01:11:16,500 --> 01:11:19,900
In an orthogonal Matrix is the basis vectors are at right angles to

1287
01:11:19,900 --> 01:11:21,300
each other and our unit length.

1288
01:11:21,800 --> 01:11:24,500
If that was the case, we would know the transpose was the inverse.

1289
01:11:24,500 --> 01:11:25,100
Why was it?

1290
01:11:25,100 --> 01:11:26,200
Well, we did this before.

1291
01:11:26,800 --> 01:11:30,400
It's because if I put the transpose in here, so I flipped these around

1292
01:11:30,400 --> 01:11:33,000
so that instead they were going by rows, instead of by columns.

1293
01:11:33,000 --> 01:11:33,900
I remember, we did this before us.

1294
01:11:33,900 --> 01:11:34,800
This is just review.

1295
01:11:35,100 --> 01:11:39,500
Hopefully, remember the dot product of these, which is what we're

1296
01:11:39,500 --> 01:11:40,200
taking here.

1297
01:11:40,200 --> 01:11:43,400
When we do the x times, the X Y times, y, z times Z right of each of

1298
01:11:43,400 --> 01:11:44,100
these vectors.

1299
01:11:44,700 --> 01:11:49,800
The dot products here are going to equal 1 if it's the same vector and

1300
01:11:49,800 --> 01:11:50,300
0.

1301
01:11:50,300 --> 01:11:52,100
If it's not why?

1302
01:11:52,100 --> 01:11:55,100
Because the dot product of a vector with itself, if it's unit length

1303
01:11:55,100 --> 01:11:56,000
is 1, right?

1304
01:11:56,000 --> 01:11:56,200
Because

1305
01:11:56,400 --> 01:11:59,800
Over the dot product is a b cosine Theta.

1306
01:12:00,200 --> 01:12:05,100
Right number, this ate a dot, b equals a b cosine Theta.

1307
01:12:05,300 --> 01:12:06,500
This is always going to be 1.

1308
01:12:06,500 --> 01:12:09,100
This is always going to be one if all of our vectors are unit length.

1309
01:12:09,200 --> 01:12:12,500
So we're just talking about cosine Theta, cosine theta4, 2 things that

1310
01:12:12,500 --> 01:12:14,700
are pointing exactly the same direction which is what will happen.

1311
01:12:14,700 --> 01:12:18,400
If I multiply a vector by itself is always one if they're pointing at

1312
01:12:18,400 --> 01:12:20,200
90 degrees to each other, it will be 0.

1313
01:12:20,200 --> 01:12:23,100
That's just what the cosine is at 90 degrees, right?

1314
01:12:24,500 --> 01:12:28,800
So I will get this Matrix if I put these in like this because the only

1315
01:12:28,800 --> 01:12:32,700
time I will get a one is when the vectors are exactly the same Vector

1316
01:12:32,700 --> 01:12:33,500
x times x.

1317
01:12:33,800 --> 01:12:37,600
And any time I do x times y, I'll get a 0 here and here anytime they

1318
01:12:37,600 --> 01:12:41,400
do x times z, l get a zeros here and here many times I do y times,

1319
01:12:41,400 --> 01:12:45,100
they'll get a 0 here and here that is exactly what I want.

1320
01:12:45,600 --> 01:12:47,900
So all I need to do to build the camera.

1321
01:12:47,900 --> 01:12:51,600
Matrix is just flip these around unless

1322
01:12:52,200 --> 01:12:53,100
unless,

1323
01:12:56,600 --> 01:12:58,900
They were the wrong size has right?

1324
01:12:59,000 --> 01:13:03,900
What if these were longer or shorter and now we never do that for the

1325
01:13:03,900 --> 01:13:04,900
prospective transform.

1326
01:13:04,900 --> 01:13:08,300
But we did do that for the orthographic transform.

1327
01:13:08,300 --> 01:13:11,800
Remember in our orthographic transform, we did a little Shenanigans

1328
01:13:11,800 --> 01:13:12,100
here.

1329
01:13:12,100 --> 01:13:12,900
We like shenana.

1330
01:13:12,900 --> 01:13:17,100
We did a little like flipping around and shenanigans and stuff, right?

1331
01:13:17,100 --> 01:13:17,700
And all that.

1332
01:13:17,700 --> 01:13:21,300
Good things where we did a set, can we transform?

1333
01:13:21,800 --> 01:13:22,500
And here we go.

1334
01:13:22,500 --> 01:13:24,000
There's the shenanigans, right?

1335
01:13:24,000 --> 01:13:24,900
So these are still

1336
01:13:25,000 --> 01:13:29,900
Worth these vectors are still orthogonal to each other but they are

1337
01:13:29,900 --> 01:13:30,700
different lengths.

1338
01:13:30,700 --> 01:13:34,300
So the it is not an orthonormal or orthogonal Matrix.

1339
01:13:34,300 --> 01:13:38,400
For some reason, orthogonal matrices are not orthogonal vectors

1340
01:13:38,400 --> 01:13:40,100
they're orthonormal vectors.

1341
01:13:40,100 --> 01:13:42,400
Don't ask me how that terminology came about but it did.

1342
01:13:43,800 --> 01:13:44,300
Right?

1343
01:13:44,600 --> 01:13:48,100
So we need to be able to correct for the fact that although, we will

1344
01:13:48,100 --> 01:13:51,200
always produce a diagonal matrix by doing this.

1345
01:13:51,300 --> 01:13:54,100
These values may not be ones.

1346
01:13:54,300 --> 01:13:56,400
They may be other values, right?

1347
01:13:56,400 --> 01:14:01,900
Because if x had a length of 2, instead of 1, then 2 times 2, is going

1348
01:14:01,900 --> 01:14:05,500
to be for here rather than one times, one being one.

1349
01:14:05,700 --> 01:14:07,200
So we're going to get the wrong values.

1350
01:14:07,200 --> 01:14:11,100
We get the squared length of the vectors coming down the diagonal.

1351
01:14:11,700 --> 01:14:13,400
Whatever are we to do?

1352
01:14:13,600 --> 01:14:17,500
Oh no, it is not possible to solve The Matrix, everyone give up right

1353
01:14:17,500 --> 01:14:17,900
now.

1354
01:14:18,100 --> 01:14:21,500
That is not true and it's not true because we know that this is the

1355
01:14:21,500 --> 01:14:24,600
equation that will be in each of these slots, right?

1356
01:14:25,300 --> 01:14:30,400
So we know that all we have to do is just change the length of these

1357
01:14:30,600 --> 01:14:31,500
to counteract.

1358
01:14:31,500 --> 01:14:35,600
Whatever the length of them were over here specifically, if I know

1359
01:14:35,600 --> 01:14:38,800
that this length is going to come out to to I just need to make my

1360
01:14:38,800 --> 01:14:39,300
other length.

1361
01:14:39,300 --> 01:14:41,100
Come out to one over two and I'm done.

1362
01:14:42,700 --> 01:14:43,300
Right.

1363
01:14:45,000 --> 01:14:49,000
So again, very, very straightforward for us to do this when we create

1364
01:14:49,000 --> 01:14:50,300
that camera transform.

1365
01:14:53,500 --> 01:14:57,700
I basically need exactly the same thing for that upper piece, right?

1366
01:14:57,900 --> 01:14:58,700
So here's

1367
01:15:07,000 --> 01:15:08,600
I know what I call this is call this a

1368
01:15:15,400 --> 01:15:15,900
and be.

1369
01:15:29,000 --> 01:15:29,600
All right.

1370
01:15:31,000 --> 01:15:31,400
Oops.

1371
01:15:39,800 --> 01:15:40,200
There we go.

1372
01:15:41,400 --> 01:15:44,100
So if I stop these into the comms again, I'm almost correct.

1373
01:15:44,100 --> 01:15:47,800
But not quite because I've got some issues here still.

1374
01:15:48,300 --> 01:15:50,100
And that is that these lengths may be wrong.

1375
01:15:50,400 --> 01:15:53,700
So what I want to do is multiply each of these by correction factor

1376
01:15:53,700 --> 01:15:56,700
and that correction factor, should be whatever the inverse length is.

1377
01:15:56,800 --> 01:16:01,600
So, what I want to do is say 1 over the length of x times x, right?

1378
01:16:01,700 --> 01:16:09,400
Or I should say X over length x, that would give me essentially the

1379
01:16:09,600 --> 01:16:10,600
Version of it, right?

1380
01:16:10,600 --> 01:16:13,200
So that's going to that's if the length was to.

1381
01:16:13,300 --> 01:16:16,400
Now, the length will be hat, will be point five, right?

1382
01:16:17,600 --> 01:16:18,100
So,

1383
01:16:24,800 --> 01:16:32,400
Like so on, but again because this already have that length, what that

1384
01:16:32,400 --> 01:16:36,000
will end up doing is that will not give me the correction that I want

1385
01:16:36,100 --> 01:16:38,800
trying to explain how I got a coefficient in here.

1386
01:16:38,800 --> 01:16:39,900
And I think I'm just gonna have to show you.

1387
01:16:40,100 --> 01:16:40,600
All right?

1388
01:16:41,200 --> 01:16:44,400
So if I have a vector, right?

1389
01:16:44,400 --> 01:16:46,700
Let's say I take a vector, a, right?

1390
01:16:46,700 --> 01:16:50,100
And I know that the length of a is equal to 2, right?

1391
01:16:50,600 --> 01:16:54,200
Then if I do a over, sorry if I

1392
01:16:54,400 --> 01:16:58,300
To a over length of a and I want to know, what is the length of this

1393
01:16:58,300 --> 01:17:00,100
new Vector, right?

1394
01:17:00,100 --> 01:17:04,600
Well, that's just giving me something over to whose length was

1395
01:17:04,600 --> 01:17:05,200
already, too.

1396
01:17:05,200 --> 01:17:08,000
That's just going to give me a length of 1, right?

1397
01:17:08,900 --> 01:17:10,500
That's not sufficient for our purposes.

1398
01:17:10,700 --> 01:17:15,000
That's normalizing the vector to a length of 1, but I want it to be

1399
01:17:15,000 --> 01:17:17,300
the inverse of its own length.

1400
01:17:17,600 --> 01:17:20,800
So I need to divide by its length again.

1401
01:17:21,200 --> 01:17:22,200
Does that make sense?

1402
01:17:22,400 --> 01:17:24,100
So after normalization, you would you

1403
01:17:24,300 --> 01:17:25,500
I'd go by the length again.

1404
01:17:25,500 --> 01:17:27,600
So after you divide by the length, you have looked.

1405
01:17:27,600 --> 01:17:31,500
Again, that's just the square of the length right there.

1406
01:17:31,500 --> 01:17:34,600
It's, I'm basically like dividing by the length and then dividing by

1407
01:17:34,600 --> 01:17:34,900
the length.

1408
01:17:34,900 --> 01:17:35,400
Again,

1409
01:17:42,500 --> 01:17:47,200
Hopefully, that makes some sense and we don't have a divide operator

1410
01:17:47,200 --> 01:17:48,600
for vectors yet, do we?

1411
01:17:49,000 --> 01:17:49,800
Yeah, we don't.

1412
01:17:52,200 --> 01:17:53,100
I'm going to make one.

1413
01:17:57,500 --> 01:17:58,100
Math.

1414
01:18:01,300 --> 01:18:02,300
Operator times.

1415
01:18:16,100 --> 01:18:16,600
There we go.

1416
01:18:17,600 --> 01:18:19,900
And so what I want to do here is I want to just make something that

1417
01:18:19,900 --> 01:18:22,500
will do a divide of these two, right?

1418
01:18:23,700 --> 01:18:29,500
And so, all I'm going to do is say, Hey, whenever I get a divisor,

1419
01:18:29,500 --> 01:18:29,700
right?

1420
01:18:29,700 --> 01:18:31,500
Look, something that's going to divide out.

1421
01:18:32,000 --> 01:18:36,800
What I want to do is just say, all right, take that value and invert

1422
01:18:36,800 --> 01:18:39,800
it and then multiply it, right.

1423
01:18:49,400 --> 01:18:52,800
So again I'm not really I'm just sort of still doing a multiplying

1424
01:18:52,800 --> 01:18:59,800
operator here either, I'm just asking it to do, I'm asking it to do

1425
01:18:59,900 --> 01:19:03,500
the inverse of the value first and then do the multiplication because

1426
01:19:03,500 --> 01:19:04,800
that's the same thing as Division.

1427
01:19:04,800 --> 01:19:06,600
And so we don't have to write another operator.

1428
01:19:06,900 --> 01:19:08,300
We don't actually have to write one of these.

1429
01:19:08,300 --> 01:19:10,600
It does division, right, we just pipe it through multiplication.

1430
01:19:12,900 --> 01:19:16,100
That is not what I want to do yet because we don't have the test

1431
01:19:16,100 --> 01:19:17,100
function in there yet, okay?

1432
01:19:18,000 --> 01:19:20,000
So that is the first step.

1433
01:19:25,800 --> 01:19:26,900
Here's our camera, transform.

1434
01:19:29,100 --> 01:19:32,100
So that is the first step and that will get us the upper 3x3 correctly

1435
01:19:32,100 --> 01:19:36,500
but there is also this other portion which is the translation portion

1436
01:19:36,500 --> 01:19:40,500
of the Matrix and we have not addressed that part yet, right?

1437
01:19:41,000 --> 01:19:43,500
So if we take a look at what's going to happen over here, when we do

1438
01:19:43,500 --> 01:19:47,000
our multiplication, we know that we're going to get exactly what we'd

1439
01:19:47,000 --> 01:19:51,300
expect in the upper 3x3 Now by by using these X transforms.

1440
01:19:51,300 --> 01:19:52,400
Why transforms, right?

1441
01:19:54,800 --> 01:19:58,600
And then furthermore, we know we've got this position in here and the

1442
01:19:58,600 --> 01:19:59,800
position piece.

1443
01:19:59,900 --> 01:20:03,500
We know we don't want involved in any of these, right?

1444
01:20:03,500 --> 01:20:08,000
So presumably we know we don't want anything over here, so the zeros

1445
01:20:08,000 --> 01:20:13,400
over here can stay, but what we do need to do is as we're producing

1446
01:20:13,400 --> 01:20:15,000
these values over here.

1447
01:20:24,300 --> 01:20:28,200
Yes, so as we're producing values over here, we're going to have to

1448
01:20:28,200 --> 01:20:31,000
deal with with that somewhere.

1449
01:20:31,500 --> 01:20:34,200
Alright, so let's take a look at a couple more things here.

1450
01:20:35,200 --> 01:20:38,200
So as we do our multiplications for here, right?

1451
01:20:39,000 --> 01:20:42,400
We're going to get nothing in here because of this, as we do our

1452
01:20:42,400 --> 01:20:44,000
multiplications for these values.

1453
01:20:44,000 --> 01:20:49,600
However, rather these values, we're going to have to deal with, sorry

1454
01:20:49,600 --> 01:20:50,400
these values.

1455
01:20:50,400 --> 01:20:53,600
We're going to have to deal with the p because it's going to multiply

1456
01:20:53,600 --> 01:20:53,900
all of

1457
01:20:54,100 --> 01:20:54,400
These.

1458
01:20:54,600 --> 01:20:58,900
So basically what happens here is we get p transpose X, right?

1459
01:20:58,900 --> 01:20:59,800
We're going to get pee.

1460
01:21:00,200 --> 01:21:04,000
Time's the, the x that we put in here, we're going to have P transpose

1461
01:21:04,000 --> 01:21:05,000
X, right?

1462
01:21:06,500 --> 01:21:09,500
In here, and we don't want that.

1463
01:21:09,600 --> 01:21:11,800
We want a zero here, right?

1464
01:21:11,800 --> 01:21:13,100
So, that P transpose X.

1465
01:21:13,100 --> 01:21:18,200
And then, we have to put something in here right into these values.

1466
01:21:18,800 --> 01:21:22,700
That's going to solve that problem for us basically.

1467
01:21:23,000 --> 01:21:28,200
So, whatever we get in here, has to fix the P transpose X problem.

1468
01:21:28,200 --> 01:21:33,700
We need to get Negative P transpose X in here, right?

1469
01:21:34,100 --> 01:21:35,700
And actually, that's

1470
01:21:36,200 --> 01:21:40,200
Lee what we want since we know that the first terms have to produce

1471
01:21:40,200 --> 01:21:42,700
this Matrix, we know that these are non-negotiable.

1472
01:21:42,800 --> 01:21:45,800
So we know we're going to produce a p transpose X up here.

1473
01:21:46,000 --> 01:21:49,000
So what we need to do is put something in here, which when multiplied

1474
01:21:49,000 --> 01:21:54,400
by this 1 value, right here will produce a negative P transpose X to

1475
01:21:54,400 --> 01:21:55,600
cancel it out.

1476
01:21:55,700 --> 01:21:59,200
Same here, this has to be negative P transpose, y negative P transpose

1477
01:21:59,200 --> 01:21:59,500
Z.

1478
01:22:00,100 --> 01:22:05,200
Now remember it's not the actual x-axis from the original, it's the

1479
01:22:05,200 --> 01:22:06,000
modified

1480
01:22:06,100 --> 01:22:06,700
x axis.

1481
01:22:06,900 --> 01:22:09,900
So we actually need to take that one that we've produced that's in the

1482
01:22:09,900 --> 01:22:13,500
column already and transpose, you know, take the dot product of it

1483
01:22:13,500 --> 01:22:16,200
with p and put those negatives in there, right?

1484
01:22:16,300 --> 01:22:18,100
Because that's the only thing that's going to eliminate it.

1485
01:22:18,100 --> 01:22:20,700
Once we come down through here to do these, I think we're basically

1486
01:22:20,700 --> 01:22:21,800
all done, there's nothing else.

1487
01:22:21,800 --> 01:22:22,600
We really need to do.

1488
01:22:22,600 --> 01:22:24,800
So the bottom can stay 0, 0, 0 1.

1489
01:22:24,900 --> 01:22:27,400
So it's just these values that need to get modified.

1490
01:22:28,900 --> 01:22:34,300
All right, so let's go ahead and make these actual vectors so this is

1491
01:22:34,300 --> 01:22:37,400
like you know I'm going to call it.

1492
01:22:37,400 --> 01:22:39,400
I x i y z for now.

1493
01:22:54,800 --> 01:22:58,100
Okay, and we can build this exactly the same way, so we can do a

1494
01:22:58,100 --> 01:22:58,900
Translate.

1495
01:23:00,600 --> 01:23:02,100
I assume translate just stuff that in.

1496
01:23:02,100 --> 01:23:02,600
Yeah, it does.

1497
01:23:05,200 --> 01:23:07,400
So we can do a translate on this and this is not the most efficient

1498
01:23:07,400 --> 01:23:08,300
way to build this.

1499
01:23:08,300 --> 01:23:11,600
We probably could make a much more efficient way to build this, but so

1500
01:23:11,600 --> 01:23:12,400
we can go ahead and do it.

1501
01:23:12,400 --> 01:23:13,400
Translate on this.

1502
01:23:14,000 --> 01:23:17,900
And what we need to do to do the translate is just make that special

1503
01:23:17,900 --> 01:23:18,800
Vector, right?

1504
01:23:18,800 --> 01:23:20,200
So this is the IP vector.

1505
01:23:21,900 --> 01:23:22,200
Okay.

1506
01:23:22,200 --> 01:23:22,900
So what's that?

1507
01:23:22,900 --> 01:23:23,800
I P Vector will.

1508
01:23:23,800 --> 01:23:27,700
Again you can almost look at this exactly the same way.

1509
01:23:28,400 --> 01:23:31,500
If you take a look at what goes on here, what is that?

1510
01:23:31,500 --> 01:23:36,200
What what does that end up actually meaning right - P transpose X and

1511
01:23:36,200 --> 01:23:36,800
our peaches, right?

1512
01:23:36,800 --> 01:23:38,500
Those are just the the

1513
01:23:41,500 --> 01:23:45,400
The Columns here, right of these of these.

1514
01:23:47,400 --> 01:23:51,000
Vectors so really, I mean, I'm just going to build it manually because

1515
01:23:51,000 --> 01:23:55,900
I don't really see any reason not to but it's yeah, it's, it's again,

1516
01:23:55,900 --> 01:23:56,700
very straightforward.

1517
01:23:56,700 --> 01:23:59,800
I'm literally just taking the this - P transfer.

1518
01:24:00,000 --> 01:24:04,700
- P transpose V - P transpose e and just doing it directly here,

1519
01:24:04,700 --> 01:24:05,200
right?

1520
01:24:05,200 --> 01:24:08,100
So what I want to do here is take the inner product, right?

1521
01:24:08,100 --> 01:24:09,100
That's the transpose.

1522
01:24:09,400 --> 01:24:13,700
I want to do the negative of whatever that this value was.

1523
01:24:13,800 --> 01:24:16,900
So we kind of need the composite a p-value here.

1524
01:24:17,600 --> 01:24:19,400
I want to save that, right?

1525
01:24:21,100 --> 01:24:24,000
And I don't know what we would call that I'll call that alcohol at a

1526
01:24:24,000 --> 01:24:24,500
p.

1527
01:24:25,300 --> 01:24:26,600
The P that went into a

1528
01:24:29,900 --> 01:24:34,200
So we want to take the dot product of that with our various vectors,

1529
01:24:34,200 --> 01:24:35,100
that's all we need.

1530
01:24:43,700 --> 01:24:46,200
and since each of those is - I'll just skip that

1531
01:24:47,900 --> 01:24:48,800
And do it like this.

1532
01:24:50,300 --> 01:24:50,700
Right.

1533
01:24:52,700 --> 01:24:54,200
And that should give us what we need.

1534
01:24:54,300 --> 01:24:58,000
Now we've got our inverted X are sort of our inverse components.

1535
01:24:58,200 --> 01:25:01,900
We've got the three axes corrected for length, so they don't have to

1536
01:25:01,900 --> 01:25:03,400
be length one and it'll still work.

1537
01:25:03,800 --> 01:25:08,900
We then have our IP values which is just to correct for those those

1538
01:25:08,900 --> 01:25:13,100
off components and that should be basically everything that we need.

1539
01:25:13,100 --> 01:25:16,900
Now, we can test this exactly the way that we tested the other one.

1540
01:25:20,700 --> 01:25:24,200
We can use the same same bit here.

1541
01:25:31,200 --> 01:25:33,300
And what I could do here is I think we have a

1542
01:25:47,900 --> 01:25:53,200
We're go, so we can look at this test case and we can see whether or

1543
01:25:53,200 --> 01:25:56,400
not the inverse works properly in this case as well.

1544
01:26:07,200 --> 01:26:08,300
So looks pretty good.

1545
01:26:08,300 --> 01:26:11,600
You can see we've got a little tiny values on the off diagonal here.

1546
01:26:11,600 --> 01:26:14,500
That's understandable like this is not infinite Precision.

1547
01:26:14,700 --> 01:26:17,100
So those are actually pretty reasonable values.

1548
01:26:17,100 --> 01:26:19,200
You can see they're very very tiny there.

1549
01:26:20,000 --> 01:26:22,500
However that's not good.

1550
01:26:23,800 --> 01:26:25,200
So, we do have a bug.

1551
01:26:26,300 --> 01:26:27,700
You can see we've got a bug there.

1552
01:26:37,400 --> 01:26:42,700
See that those should both be zero values and they're not right, so

1553
01:26:42,700 --> 01:26:43,400
that's not.

1554
01:26:43,400 --> 01:26:45,100
We have we have made an error.

1555
01:26:48,100 --> 01:26:49,500
And let's find out what the area is.

1556
01:26:49,900 --> 01:26:55,200
So for whatever reason we never have a problem.

1557
01:26:58,100 --> 01:26:59,900
Well, looks like the bug wasn't in

1558
01:27:00,000 --> 01:27:00,500
Math.

1559
01:27:00,800 --> 01:27:02,500
It was in the typing as is.

1560
01:27:02,500 --> 01:27:06,800
So often the way I'm like, why is our x value always correct in our y

1561
01:27:06,800 --> 01:27:08,100
and z are too well, how about?

1562
01:27:08,100 --> 01:27:10,600
Because you didn't type in the equations for the other two correctly?

1563
01:27:10,600 --> 01:27:11,400
That could be.

1564
01:27:12,500 --> 01:27:13,100
There we go.

1565
01:27:16,100 --> 01:27:17,300
Nope, still got one.

1566
01:27:17,300 --> 01:27:19,000
So now we've got everybody correct.

1567
01:27:19,000 --> 01:27:24,200
Except except just the Y component.

1568
01:27:25,800 --> 01:27:27,000
Of.

1569
01:27:30,300 --> 01:27:34,400
Just the Y component, the Y of the p-value.

1570
01:27:40,000 --> 01:27:44,900
let me also double-check, I want to this camera, I want to put in some

1571
01:27:44,900 --> 01:27:47,500
crazier values to it there, so there's

1572
01:27:51,100 --> 01:27:54,700
Okay, so taking a look at this.

1573
01:27:54,700 --> 01:27:57,200
It's just want to see if it's always there or not.

1574
01:28:00,900 --> 01:28:05,100
So no, it's like it's does definitely have problems in the P

1575
01:28:05,100 --> 01:28:05,900
component.

1576
01:28:05,900 --> 01:28:08,500
You can see that we're pretty much getting correct in versus

1577
01:28:08,500 --> 01:28:09,700
everywhere else.

1578
01:28:10,000 --> 01:28:13,600
As far as I can tell, these are obviously very tiny value, so they're

1579
01:28:13,600 --> 01:28:15,000
basically zero, so that's fine.

1580
01:28:15,000 --> 01:28:17,000
The math is not always going to be exact.

1581
01:28:17,000 --> 01:28:20,300
It's going to be a little bit off in the bottom, so that's all fine.

1582
01:28:20,900 --> 01:28:24,200
So it's really just the, those P values that are incorrect.

1583
01:28:24,200 --> 01:28:28,500
So let's retake a look at our p-values there and make sure that I'm

1584
01:28:28,900 --> 01:28:29,800
not doing something.

1585
01:28:30,300 --> 01:28:30,500
Well,

1586
01:28:30,700 --> 01:28:34,200
I guess we know that I am definitely doing something dumb so let's

1587
01:28:34,200 --> 01:28:38,100
find out what that something dumb actually is and take a look at it.

1588
01:28:40,400 --> 01:28:40,900
Okay.

1589
01:28:45,400 --> 01:28:56,200
So we have our IX here, r, i y here, ri Z here, and then we've got

1590
01:28:56,200 --> 01:29:02,400
zero zero zero one down the bottom and what do we have ostensibly on

1591
01:29:02,400 --> 01:29:03,100
the top?

1592
01:29:03,300 --> 01:29:05,500
I'm sorry on the P values.

1593
01:29:05,500 --> 01:29:10,300
Essentially, we have the inner product of the P values that were

1594
01:29:10,300 --> 01:29:12,500
coming into whatever.

1595
01:29:12,500 --> 01:29:14,400
We're in the original Matrix, right?

1596
01:29:15,800 --> 01:29:21,700
We've essentially got those negated and and Dot product ID with each

1597
01:29:21,700 --> 01:29:22,200
of these.

1598
01:29:22,900 --> 01:29:29,800
So here in theory, we've got negative P, transpose ax.

1599
01:29:32,600 --> 01:29:35,100
You know, I kind of need better.

1600
01:29:36,500 --> 01:29:38,900
I need more mathy way of writing that if I'm going to have a bunch of

1601
01:29:38,900 --> 01:29:39,700
equations here.

1602
01:29:41,000 --> 01:29:51,400
So let's call this like we'll just call this U V W so you the W 0 0 0

1603
01:29:51,800 --> 01:29:59,800
1 like so and then here we are putting in - Peter.

1604
01:30:00,000 --> 01:30:02,600
Suppose you - P transpose.

1605
01:30:02,600 --> 01:30:06,200
V - P transpose W, right?

1606
01:30:06,600 --> 01:30:11,000
And our incoming Matrix is an is the x axis down here.

1607
01:30:11,100 --> 01:30:12,600
The 0 y.

1608
01:30:13,200 --> 01:30:18,100
0 Z, 0 and P with the one.

1609
01:30:18,800 --> 01:30:19,200
Yes.

1610
01:30:20,300 --> 01:30:20,800
Okay.

1611
01:30:23,200 --> 01:30:24,900
And what do we end up with well?

1612
01:30:25,000 --> 01:30:29,500
X dot U is 1 by definition.

1613
01:30:30,900 --> 01:30:33,600
In fact, we already know that we've got this working properly.

1614
01:30:33,600 --> 01:30:34,600
We tested it.

1615
01:30:34,900 --> 01:30:36,200
So, that's all correct.

1616
01:30:36,600 --> 01:30:39,100
Obviously, these are all going to be zeros down here.

1617
01:30:39,600 --> 01:30:42,000
And this is going to be 1 here and we know that that's all true from

1618
01:30:42,000 --> 01:30:42,400
testing.

1619
01:30:42,400 --> 01:30:44,400
So our problem is this up here.

1620
01:30:45,600 --> 01:30:47,700
So let's see what the problem actually is.

1621
01:30:48,000 --> 01:30:50,500
This is going to be P transpose U, right?

1622
01:30:50,500 --> 01:30:51,400
It's PX time.

1623
01:30:51,400 --> 01:30:51,700
Yeah.

1624
01:30:51,700 --> 01:30:52,300
So I don't know.

1625
01:30:52,300 --> 01:30:57,200
This looks right to me that's going to be P transpose U and then we're

1626
01:30:57,200 --> 01:30:59,800
going to multiply 1 times negative P to you.

1627
01:31:01,000 --> 01:31:03,000
So, that should be a zero.

1628
01:31:03,300 --> 01:31:04,100
Same thing.

1629
01:31:04,100 --> 01:31:05,000
Should happen here.

1630
01:31:05,000 --> 01:31:07,800
This should be P transpose V, right?

1631
01:31:09,600 --> 01:31:13,900
And then we should have a negative P transpose V there and then same

1632
01:31:13,900 --> 01:31:19,400
with this, this would be P transpose, W minus P transpose W, right?

1633
01:31:19,400 --> 01:31:23,000
So these should all work out to be 0 there.

1634
01:31:23,000 --> 01:31:25,000
That's what I would have expected.

1635
01:31:27,800 --> 01:31:30,300
so, I am a little confused as to what

1636
01:31:37,800 --> 01:31:41,400
Oh no, no, no, no.

1637
01:31:42,200 --> 01:31:44,400
I this is a camera transform.

1638
01:31:44,400 --> 01:31:46,500
It's already inverted.

1639
01:31:48,600 --> 01:31:49,900
I was building in.

1640
01:31:50,700 --> 01:31:52,600
I was totally, yeah.

1641
01:31:52,600 --> 01:31:54,300
Well, it's been, it's been a bad math morning.

1642
01:31:55,600 --> 01:31:57,200
It's the other way round.

1643
01:31:58,000 --> 01:31:58,600
Duh.

1644
01:31:59,400 --> 01:32:01,400
I typed it in correctly but I did.

1645
01:32:01,400 --> 01:32:02,400
Yeah, it's the other way around.

1646
01:32:02,500 --> 01:32:03,600
This is a camera transform.

1647
01:32:03,600 --> 01:32:05,300
So it's XYZ this way.

1648
01:32:06,600 --> 01:32:07,600
Yeah, yeah.

1649
01:32:07,900 --> 01:32:08,300
Alright.

1650
01:32:08,300 --> 01:32:11,400
Well hey man, this is why you test, you know what I'm saying.

1651
01:32:13,500 --> 01:32:14,900
It was the other way around.

1652
01:32:19,400 --> 01:32:21,000
This is what we're actually dealing with.

1653
01:32:21,500 --> 01:32:24,800
And so when we put these in here it's actually this way.

1654
01:32:29,800 --> 01:32:32,100
Okay, now it makes much more sense.

1655
01:32:32,100 --> 01:32:33,400
Why we're getting the wrong result?

1656
01:32:33,500 --> 01:32:34,500
It's going to be

1657
01:32:35,900 --> 01:32:37,000
PX.

1658
01:32:38,200 --> 01:32:38,800
Right.

1659
01:32:40,300 --> 01:32:41,400
Sorry PX.

1660
01:32:42,600 --> 01:32:45,100
X ux butt.

1661
01:32:46,200 --> 01:32:52,600
Py times, U times V y+ peasy.

1662
01:32:53,800 --> 01:32:56,800
X wz, right?

1663
01:32:56,800 --> 01:32:59,700
You can see it's doing a DOT product but I'm sorry these are not

1664
01:33:01,500 --> 01:33:03,200
This is those are all exes.

1665
01:33:04,800 --> 01:33:07,400
So, it's actually doing a cross this way.

1666
01:33:07,700 --> 01:33:11,300
So, the negation we want is actually not a DOT product with one of

1667
01:33:11,300 --> 01:33:11,800
these vectors.

1668
01:33:11,800 --> 01:33:15,600
It's a, it's a DOT with the X components of it, which is very

1669
01:33:15,600 --> 01:33:16,700
different, right?

1670
01:33:17,800 --> 01:33:19,200
It's actually this.

1671
01:33:23,900 --> 01:33:24,100
Right.

1672
01:33:24,100 --> 01:33:29,100
The AP is still going as if a DOT product but it's going this way.

1673
01:33:29,500 --> 01:33:30,300
Does that make sense?

1674
01:33:54,000 --> 01:33:57,600
So, that is what we actually need to do, because we need to take the

1675
01:33:57,600 --> 01:33:59,200
dot products across this way.

1676
01:33:59,300 --> 01:34:04,300
Because, again, not I was thinking of it as built for in summertime.

1677
01:34:04,300 --> 01:34:06,900
For some reason, my head I was thinking, oh, we're building the

1678
01:34:06,900 --> 01:34:07,900
opposite of a

1679
01:34:09,700 --> 01:34:10,900
Of an object transform.

1680
01:34:11,100 --> 01:34:11,600
We're not.

1681
01:34:11,600 --> 01:34:12,600
This is a camera transform.

1682
01:34:12,600 --> 01:34:16,200
So we're stuffing the rose, the input values that we get are going

1683
01:34:16,200 --> 01:34:20,900
into the rose of the source Matrix but yet simple enough fix and you

1684
01:34:20,900 --> 01:34:21,100
can see.

1685
01:34:21,100 --> 01:34:26,600
Now, we're Rock Solid on that only very tiny values on the off

1686
01:34:26,600 --> 01:34:28,200
diagonal and everything else is fine.

1687
01:34:28,200 --> 01:34:30,800
Let's double-check with some fancier matrices here.

1688
01:34:32,700 --> 01:34:33,300
There we go.

1689
01:34:38,700 --> 01:34:39,700
And still Rock Solid.

1690
01:34:39,700 --> 01:34:41,800
So that's that's very good, right?

1691
01:34:41,800 --> 01:34:43,400
Can see the only things we ever get there.

1692
01:34:43,400 --> 01:34:45,100
Very, very tiny values on the object.

1693
01:34:48,600 --> 01:34:48,900
R.

1694
01:34:51,000 --> 01:34:52,800
Who lot of math this morning.

1695
01:34:53,900 --> 01:34:56,700
I wasn't awake enough for it as the case may be, but it worked out

1696
01:34:56,700 --> 01:34:57,600
quite well in the end.

1697
01:34:57,600 --> 01:34:58,700
So I'm happy with that.

1698
01:34:58,700 --> 01:35:02,600
Math is always fun fine if it makes if it works out, cleanly in the

1699
01:35:02,600 --> 01:35:03,000
end.

1700
01:35:03,800 --> 01:35:07,900
All right, so back to where we were before, we're kind of ready to go

1701
01:35:07,900 --> 01:35:11,700
now because we've got all the stuff that we need, so we can make a

1702
01:35:11,700 --> 01:35:14,900
projection in an inverse projection together, right?

1703
01:35:16,200 --> 01:35:17,300
And we're all good to go.

1704
01:35:17,600 --> 01:35:20,700
So if we want to save now when we do this push set,

1705
01:35:20,800 --> 01:35:21,000
Call.

1706
01:35:21,000 --> 01:35:25,700
If we actually want to extend that to be something that saves the

1707
01:35:25,700 --> 01:35:27,600
entire setup, right?

1708
01:35:28,400 --> 01:35:29,100
We can do that.

1709
01:35:29,100 --> 01:35:33,300
So what we're going to do here is just extend last projection to be

1710
01:35:33,300 --> 01:35:36,500
one of these more fancy matrices, right?

1711
01:35:36,700 --> 01:35:41,500
So now we can say, Okay M 4 by 4 in proj.

1712
01:35:43,700 --> 01:35:46,000
And we can say project forward.

1713
01:35:48,200 --> 01:35:48,900
And proj.

1714
01:35:48,900 --> 01:35:49,500
Inverse.

1715
01:35:51,600 --> 01:35:55,600
We get both of those and now we just pass that along, right?

1716
01:35:56,800 --> 01:35:58,700
And so, then our push set up call.

1717
01:36:00,000 --> 01:36:01,200
Needs to remember that.

1718
01:36:05,800 --> 01:36:09,100
And then everyone else has to abide by it, right?

1719
01:36:11,600 --> 01:36:12,700
This part here.

1720
01:36:12,700 --> 01:36:14,800
Where do we set the last projects?

1721
01:36:14,800 --> 01:36:15,200
There it is.

1722
01:36:15,200 --> 01:36:18,400
So we save the last project when we do our, when we push this down, we

1723
01:36:18,400 --> 01:36:19,800
don't need to know that.

1724
01:36:19,900 --> 01:36:21,300
You don't need to know the inverse.

1725
01:36:22,100 --> 01:36:26,700
So we can just save that and, let's see.

1726
01:36:26,700 --> 01:36:28,400
It move forward for proj.

1727
01:36:29,600 --> 01:36:30,500
Probably should keep this.

1728
01:36:33,600 --> 01:36:35,900
And really, I should probably call this composite, right.

1729
01:36:38,500 --> 01:36:41,200
The state's more accurately, what it actually is it's the projection

1730
01:36:41,200 --> 01:36:42,600
plus the camera transform.

1731
01:36:43,900 --> 01:36:46,100
So that's about it, let's see here.

1732
01:36:46,100 --> 01:36:50,700
This is the identity Matrix and so really, that's just four by four

1733
01:36:50,700 --> 01:36:52,000
in, I

1734
01:36:55,100 --> 01:37:00,100
And I can, I do I probably can't do this.

1735
01:37:00,100 --> 01:37:00,600
Can I

1736
01:37:03,600 --> 01:37:04,200
Thank you.

1737
01:37:05,300 --> 01:37:07,500
So I think that's about all we would need for that.

1738
01:37:07,500 --> 01:37:11,200
Now, we should have the exact same pipeline running, but now we have

1739
01:37:11,200 --> 01:37:14,100
the ability to access the inverse of our projection at any time.

1740
01:37:14,500 --> 01:37:18,200
So now inside render group when we do a nun project, if we want to

1741
01:37:20,700 --> 01:37:22,500
You can see the unprotect here, right?

1742
01:37:24,100 --> 01:37:27,800
If we want to, once we adjust back to screen space, all we need to

1743
01:37:27,800 --> 01:37:30,200
know is what the Z value actually.

1744
01:37:30,200 --> 01:37:34,400
Is that we're working with here, which we do have, right?

1745
01:37:35,300 --> 01:37:38,800
And once we know the Z value that we're working with, we can go ahead

1746
01:37:38,800 --> 01:37:43,100
and do the reverse transform on that right now.

1747
01:37:43,100 --> 01:37:44,300
We have some issues here.

1748
01:37:46,800 --> 01:37:50,800
And that issue is just that the value that someone's going to give us

1749
01:37:50,800 --> 01:37:55,000
for the Z is going to be a little bit confusing because they need to

1750
01:37:55,000 --> 01:37:56,100
give us the Z.

1751
01:37:56,100 --> 01:37:59,300
When we do the sun project, the Z is going to range from negative one

1752
01:37:59,300 --> 01:38:02,500
to one but they don't really know what that is, right?

1753
01:38:02,600 --> 01:38:05,700
They don't know what the negative one to one value actually is

1754
01:38:07,700 --> 01:38:10,900
Because they're used to thinking of the Z as just being a distance

1755
01:38:10,900 --> 01:38:11,500
from the camera.

1756
01:38:11,500 --> 01:38:14,600
But here, it's already been transformed into clip space, right?

1757
01:38:14,600 --> 01:38:17,400
So it's kind of confusing and it's a little bit tough for them to

1758
01:38:17,400 --> 01:38:20,600
understand, what they're actually looking at, in that case, right?

1759
01:38:20,900 --> 01:38:23,600
So when they give a distance from the camera, in this case, what we

1760
01:38:23,600 --> 01:38:26,800
kind of need to do is figure out, okay, what would the forward

1761
01:38:26,800 --> 01:38:28,500
transform of that ZB?

1762
01:38:28,700 --> 01:38:33,400
And when we need to invert, transform that Z back, right?

1763
01:38:34,500 --> 01:38:37,300
So it's kind of a difficult operation but just bear

1764
01:38:37,400 --> 01:38:39,700
with me and we can, we can work through it.

1765
01:38:40,100 --> 01:38:40,500
So

1766
01:38:42,200 --> 01:38:44,300
Basically what we're saying here is, right.

1767
01:38:45,400 --> 01:38:47,400
Let's just look at the whole thing once again, because I know that

1768
01:38:47,400 --> 01:38:49,400
it's pretty confusing and I threw a lot of math at you.

1769
01:38:50,200 --> 01:38:53,500
So, we've got a p Prime, right?

1770
01:38:54,100 --> 01:38:57,600
And we've got an A BP.

1771
01:38:58,800 --> 01:38:59,800
This is what we're working.

1772
01:39:00,400 --> 01:39:05,600
But after this, it actually also goes through to screen space, but

1773
01:39:05,600 --> 01:39:08,700
presumably, hopefully everyone's all comfortable with us on doing this

1774
01:39:08,700 --> 01:39:11,500
screen space part of it with this part right here.

1775
01:39:11,900 --> 01:39:13,200
So we're not going to talk about that right now.

1776
01:39:13,600 --> 01:39:15,100
So we're just talking about this.

1777
01:39:16,900 --> 01:39:20,400
And so basically what we're talking about is this right here, here is

1778
01:39:20,400 --> 01:39:24,200
a 3D coordinate in the world right here.

1779
01:39:24,200 --> 01:39:28,800
This B value, probably should have drawn that slightly differently.

1780
01:39:31,000 --> 01:39:32,800
This B value right here, right?

1781
01:39:32,800 --> 01:39:35,100
That's the camera transform.

1782
01:39:35,600 --> 01:39:37,200
This is the projection.

1783
01:39:38,800 --> 01:39:39,400
Right.

1784
01:39:39,500 --> 01:39:41,500
And this is clip space.

1785
01:39:43,300 --> 01:39:45,800
And then we have a way of taking clubface to screen space but we're

1786
01:39:45,800 --> 01:39:47,500
assuming we sort of taking that out of the equation.

1787
01:39:47,500 --> 01:39:48,700
Now by just reversing it.

1788
01:39:49,200 --> 01:39:49,600
Okay.

1789
01:39:50,200 --> 01:39:52,400
So now we know we can reverse this, right?

1790
01:39:52,400 --> 01:39:55,900
We can reverse this just by using that inverse transform that we had.

1791
01:39:56,000 --> 01:40:00,400
So once we have like will recall, we're going to rename this clip

1792
01:40:00,400 --> 01:40:03,400
Space X Y right or just clip space.

1793
01:40:21,000 --> 01:40:21,400
Right.

1794
01:40:24,800 --> 01:40:27,700
So once I have this, the question here, this is z value.

1795
01:40:27,700 --> 01:40:31,600
We don't really know what it's going to be obviously, and this stuff

1796
01:40:31,600 --> 01:40:35,300
is kind of busted at this point but we'll just stick with me here.

1797
01:40:36,600 --> 01:40:37,800
Just leave that for a second.

1798
01:40:38,400 --> 01:40:42,300
So we have this clip space here and the clip space part of it.

1799
01:40:48,900 --> 01:40:53,000
If we actually have the Z value set correctly, which we don't yet, but

1800
01:40:53,000 --> 01:40:57,100
if we did, then we would know that the world's face version, right?

1801
01:40:58,700 --> 01:41:01,500
Would just be whatever that inverse Matrix was times, the clip

1802
01:41:01,500 --> 01:41:02,500
coordinates, right?

1803
01:41:02,600 --> 01:41:05,500
So, whatever our last projection Matrix, the one that we're using

1804
01:41:05,800 --> 01:41:09,500
those trying to protect from whatever the inverse Matrix is of that

1805
01:41:10,200 --> 01:41:10,500
times.

1806
01:41:10,500 --> 01:41:13,500
Those clip coordinates will give us back our world space and then the

1807
01:41:13,500 --> 01:41:18,400
result that we want to return can just be the world space - that

1808
01:41:18,400 --> 01:41:19,200
object transform.

1809
01:41:20,500 --> 01:41:22,800
Now, I don't remember how we're applying the object transform at this

1810
01:41:22,800 --> 01:41:22,900
point.

1811
01:41:22,900 --> 01:41:25,400
I just want to make sure that I remember that.

1812
01:41:25,400 --> 01:41:29,300
I double-check how we're doing that object transform.

1813
01:41:30,000 --> 01:41:31,500
So let's take a quick look at that.

1814
01:41:37,500 --> 01:41:38,800
Here's the push bitmap call.

1815
01:41:41,600 --> 01:41:42,800
So push quad.

1816
01:41:42,800 --> 01:41:43,500
Let's see.

1817
01:41:43,500 --> 01:41:44,900
Object transform.

1818
01:41:46,200 --> 01:41:47,400
Use bitmap Tim.

1819
01:41:55,100 --> 01:41:58,800
So it looks like the object transform doesn't have an offset in it

1820
01:41:58,800 --> 01:41:59,800
anymore.

1821
01:42:03,300 --> 01:42:04,300
Let me double-check that.

1822
01:42:06,200 --> 01:42:06,800
Because where's that?

1823
01:42:06,800 --> 01:42:08,200
Offset P getting applied.

1824
01:42:19,200 --> 01:42:20,900
So it's getting applied right there.

1825
01:42:21,800 --> 01:42:23,800
All right, so that's a little wonky.

1826
01:42:23,800 --> 01:42:25,600
It's not the greatest thing in the world, but that's okay.

1827
01:42:25,600 --> 01:42:26,700
We can stick with that for now.

1828
01:42:29,200 --> 01:42:32,600
So in one project we still do want to do this offset P because that's

1829
01:42:32,600 --> 01:42:36,000
actually happening inside our own code, so that's fine, right?

1830
01:42:38,100 --> 01:42:39,300
so, it's literally this

1831
01:42:49,900 --> 01:42:50,400
Right.

1832
01:42:50,600 --> 01:42:53,100
We can, we compute the world coordinates by inverting.

1833
01:42:53,100 --> 01:42:55,000
The transform that we were doing on everything?

1834
01:42:55,100 --> 01:42:57,900
We then compute the object, coordinates by subtracting away.

1835
01:42:57,900 --> 01:43:00,700
The offset P, which is the thing that they had told us to apply to it

1836
01:43:00,700 --> 01:43:02,100
before, right?

1837
01:43:03,100 --> 01:43:03,900
And that's it.

1838
01:43:06,700 --> 01:43:11,000
So all we really need here in order to complete this in theory.

1839
01:43:11,000 --> 01:43:13,800
Anyway, if we've done all of our work correctly and there are a lot of

1840
01:43:13,800 --> 01:43:15,900
moving Parts here so maybe we made a mistake somewhere.

1841
01:43:15,900 --> 01:43:20,000
But in general, all we would need in theory is to know what the Z

1842
01:43:20,000 --> 01:43:21,200
coordinate actually.

1843
01:43:21,200 --> 01:43:25,400
Is that they're trying to unprojected now, why do they need to know

1844
01:43:25,400 --> 01:43:27,900
that right in orthographic?

1845
01:43:27,900 --> 01:43:30,800
They don't because the Z value is going to be ignored.

1846
01:43:30,800 --> 01:43:34,900
So in terms of our debug picking for just the the system that we're

1847
01:43:34,900 --> 01:43:36,200
looking at right now which is the

1848
01:43:36,400 --> 01:43:37,700
No, clicking on the UI.

1849
01:43:38,000 --> 01:43:38,900
It actually won't matter.

1850
01:43:38,900 --> 01:43:40,800
We could set the Z to anything and it wouldn't matter.

1851
01:43:40,800 --> 01:43:42,600
And the reason that we could set it to anything, and it wouldn't

1852
01:43:42,600 --> 01:43:47,400
matter is because the Matrix doesn't use the Z, right?

1853
01:43:47,500 --> 01:43:48,900
It's an orthographic projection.

1854
01:43:48,900 --> 01:43:52,900
But if we wanted to do stuff eventually and I think we do because we'd

1855
01:43:52,900 --> 01:43:54,900
want to restore this functionality as well.

1856
01:43:56,100 --> 01:43:58,300
We're no matter how you were looking at this world.

1857
01:43:58,800 --> 01:44:02,500
If you wanted to be able to click on individual entities, and get, you

1858
01:44:02,500 --> 01:44:06,200
know, hit test them right, basically like figure out what you work.

1859
01:44:06,400 --> 01:44:10,200
Looking on, we would still need to be able to figure out distance

1860
01:44:10,200 --> 01:44:11,500
based stuff, right?

1861
01:44:11,600 --> 01:44:14,800
We would need to know like, oh, if I'm clicking here, I need to have

1862
01:44:14,800 --> 01:44:19,300
some way of inverting like a distance as well, right in the

1863
01:44:19,300 --> 01:44:20,500
perspective sense.

1864
01:44:21,500 --> 01:44:27,300
So we need a way of being able to pass some Z value down as well or at

1865
01:44:27,300 --> 01:44:32,200
least get something back, which allows us to work with that Z, if that

1866
01:44:32,200 --> 01:44:32,800
makes sense.

1867
01:44:33,700 --> 01:44:36,300
So, we need to do something here and presumably.

1868
01:44:36,300 --> 01:44:38,600
if the person doesn't want to,

1869
01:44:40,600 --> 01:44:44,900
You know, the person wants to be able to specify something that is in

1870
01:44:44,900 --> 01:44:45,200
something.

1871
01:44:45,200 --> 01:44:47,700
They understand, they don't want to specify clip coordinates because

1872
01:44:47,700 --> 01:44:48,800
they have no idea what that means.

1873
01:44:48,800 --> 01:44:49,100
Right.

1874
01:44:49,100 --> 01:44:52,200
When they say unprojected they're going to be thinking o if you want a

1875
01:44:52,200 --> 01:44:52,400
z-value.

1876
01:44:52,400 --> 01:44:54,100
I've got I'm looking at the screen.

1877
01:44:54,100 --> 01:44:55,400
I've got a point on the screen.

1878
01:44:55,800 --> 01:44:58,600
I just want to pass a world space distance.

1879
01:44:58,600 --> 01:44:59,900
That's how far away from the

1880
01:45:00,000 --> 01:45:00,500
Camera.

1881
01:45:00,500 --> 01:45:03,600
I'm imagining that point to be or whatever, right?

1882
01:45:03,800 --> 01:45:05,300
They want something in that space.

1883
01:45:05,300 --> 01:45:08,100
They don't want something in clip space, which is negative 1 to 1 and

1884
01:45:08,100 --> 01:45:10,300
they don't know what that is, right?

1885
01:45:10,300 --> 01:45:13,000
The person calling this function is not going to have any idea what

1886
01:45:13,000 --> 01:45:14,200
that value should be.

1887
01:45:16,000 --> 01:45:24,100
So we need a like Z distance here and it's, you know, that's world, z

1888
01:45:24,100 --> 01:45:26,500
world distance or something like this, right?

1889
01:45:28,700 --> 01:45:32,000
So what we need to do first before we do, the unprojected is turned

1890
01:45:32,000 --> 01:45:38,100
that world distance Z into an actual clip space z value based on the

1891
01:45:38,100 --> 01:45:40,500
current cameras location, right?

1892
01:45:41,300 --> 01:45:45,000
And fortunately for us we do have a fairly easy way of doing that.

1893
01:45:46,100 --> 01:45:47,900
What we could do is say well okay.

1894
01:45:47,900 --> 01:45:50,700
If you're talking about a world distance from the camera,

1895
01:45:52,900 --> 01:45:58,000
I could construct a vector that's just our like probe point, right?

1896
01:45:59,600 --> 01:46:02,400
Which is going to be the world distance Z.

1897
01:46:03,700 --> 01:46:09,000
At the center of the screen I could then transform that out, right?

1898
01:46:09,000 --> 01:46:10,000
I could do.

1899
01:46:19,300 --> 01:46:20,900
Transform that value out.

1900
01:46:21,900 --> 01:46:23,900
So it gets you know, moved forward.

1901
01:46:23,900 --> 01:46:27,600
So it gets transformed into whatever it should get transformed into

1902
01:46:28,000 --> 01:46:28,500
right.

1903
01:46:30,600 --> 01:46:34,500
And then I would know what the clip Z coordinate should actually be

1904
01:46:34,700 --> 01:46:35,000
right.

1905
01:46:35,000 --> 01:46:38,600
And again this is going to get divided though.

1906
01:46:39,300 --> 01:46:43,800
By, you know, if I take a look at that, that value, I do need to know

1907
01:46:44,000 --> 01:46:46,300
what the W component actually is here.

1908
01:46:47,200 --> 01:46:49,800
And so, if you take a look in our math routines,

1909
01:46:58,500 --> 01:47:00,300
Can we do an M4 by 4?

1910
01:47:01,000 --> 01:47:07,100
We definitely did right here so you can see when we do multiplication

1911
01:47:07,100 --> 01:47:12,600
to your we do an M4 by for multiplication, we actually do that.

1912
01:47:12,600 --> 01:47:15,500
That multiplication does not involve the Z coordinate.

1913
01:47:15,500 --> 01:47:18,700
We just I mean doesn't it doesn't return to us what the W coordinate

1914
01:47:18,700 --> 01:47:19,400
would have been?

1915
01:47:19,700 --> 01:47:21,600
It doesn't even compute it right?

1916
01:47:22,500 --> 01:47:25,200
But we actually do want that to be the case.

1917
01:47:25,400 --> 01:47:27,600
So we actually do want a transform here.

1918
01:47:28,100 --> 01:47:28,500
Right?

1919
01:47:28,500 --> 01:47:32,300
We want to transform that does all of those.

1920
01:47:32,800 --> 01:47:35,600
And what we could do is we could say, well, let's we could extend this

1921
01:47:35,600 --> 01:47:37,600
to take a V4, right?

1922
01:47:38,300 --> 01:47:42,100
And if we send it to take a V4, then we would just be able to do a V4

1923
01:47:42,100 --> 01:47:42,600
P.

1924
01:47:44,000 --> 01:47:45,900
Let's go ahead and put that in there, right?

1925
01:47:46,600 --> 01:47:50,300
And we know exactly what this would because it's pretty Road, right?

1926
01:47:54,800 --> 01:47:59,700
yeah, so then when we do an operator 3, if we have

1927
01:48:00,000 --> 01:48:01,400
Three, that's returns of e3.

1928
01:48:01,400 --> 01:48:04,600
Like, in this case here, what we can do is just do a V for that

1929
01:48:04,600 --> 01:48:09,200
extends, the p and and then takes the XYZ of the result, right?

1930
01:48:09,200 --> 01:48:09,900
And that works.

1931
01:48:15,700 --> 01:48:16,700
That is true.

1932
01:48:19,000 --> 01:48:21,600
There we go, right?

1933
01:48:21,700 --> 01:48:24,700
So you know, continuing on when we take a look at what happens here,

1934
01:48:24,700 --> 01:48:25,000
right?

1935
01:48:25,000 --> 01:48:29,400
So when what we want to do is make this actually be a probe, see that

1936
01:48:29,400 --> 01:48:33,400
actually is a full view for when we get the V4 back.

1937
01:48:33,500 --> 01:48:35,800
We would just do F32, you know,

1938
01:48:38,800 --> 01:48:42,900
Clip Z we can just create that Cliff, Secord it now by doing exact

1939
01:48:42,900 --> 01:48:43,200
would open.

1940
01:48:43,200 --> 01:48:45,300
Jill would have done it would have done this transform and then it

1941
01:48:45,300 --> 01:48:47,700
would have divided by the W coordinate, right?

1942
01:48:47,700 --> 01:48:52,700
So whatever probe zzz, Z coordinate was it would get / probes, he's W

1943
01:48:52,700 --> 01:48:54,100
coordinate and that would be the clip.

1944
01:48:54,100 --> 01:48:55,400
See that clip?

1945
01:48:55,400 --> 01:48:58,400
See is then we could pass directly in here and say Here's what the

1946
01:48:58,400 --> 01:48:59,300
clip coordinate.

1947
01:48:59,300 --> 01:49:03,300
Here's what the Z coordinate is at this point on the screen as far as

1948
01:49:03,300 --> 01:49:06,900
it being that far away from the camera, it does the inversion and then

1949
01:49:06,900 --> 01:49:07,400
we're done.

1950
01:49:08,100 --> 01:49:12,900
Right now we do have a situation here.

1951
01:49:12,900 --> 01:49:13,400
Let's see.

1952
01:49:13,400 --> 01:49:18,000
So yeah.

1953
01:49:21,300 --> 01:49:23,600
We do have a situation here where we're going to have to actually make

1954
01:49:23,600 --> 01:49:29,000
the operator for that but that's pretty easy, right?

1955
01:49:29,000 --> 01:49:36,700
It's just extending what we already had to not do any of that dance,

1956
01:49:37,300 --> 01:49:37,700
right?

1957
01:49:38,400 --> 01:49:39,700
And then everything else is fine.

1958
01:49:40,800 --> 01:49:43,900
Alright, so now we're passing these coordinates, we need to think

1959
01:49:43,900 --> 01:49:45,400
about something a little bit different here.

1960
01:49:45,400 --> 01:49:48,500
You can see that we were fussing with the trim, the distance from

1961
01:49:48,500 --> 01:49:49,300
camera nonsense.

1962
01:49:49,300 --> 01:49:53,500
Here, we want to get rid of that now and actually use this directly

1963
01:49:53,800 --> 01:49:57,100
because now our stuff is all supporting it properly so we can just

1964
01:49:57,100 --> 01:49:58,700
pass that world distance.

1965
01:49:59,500 --> 01:50:03,400
Z, I'm going to call that world distance from cameras e, just to be

1966
01:50:03,400 --> 01:50:05,100
really explicit about it.

1967
01:50:12,900 --> 01:50:13,400
We go.

1968
01:50:14,900 --> 01:50:18,400
And now we're getting a lot closer to a nice fun project called,

1969
01:50:18,600 --> 01:50:19,100
right?

1970
01:50:20,000 --> 01:50:23,700
So debug pick entity is going to have to get a lot more interesting in

1971
01:50:23,700 --> 01:50:24,300
the future.

1972
01:50:24,600 --> 01:50:25,400
I'm going to

1973
01:50:36,000 --> 01:50:38,700
I'm going to talk about that in a second, although I don't know that

1974
01:50:38,700 --> 01:50:40,600
we're going to do anything in particular with it.

1975
01:50:49,200 --> 01:50:49,700
There we go.

1976
01:50:51,300 --> 01:50:53,100
So now, yeah.

1977
01:50:53,200 --> 01:50:57,000
Now, we're probably still pretty buggy here because I doubt that that

1978
01:50:57,000 --> 01:50:57,800
pic is going to work.

1979
01:50:57,800 --> 01:50:59,800
First time out or anything, but

1980
01:51:00,100 --> 01:51:01,800
We should be able to now.

1981
01:51:01,800 --> 01:51:05,200
Start working through this a little bit more specifically, right?

1982
01:51:05,200 --> 01:51:06,000
We should be able to get.

1983
01:51:06,000 --> 01:51:07,100
Oh, that's pretty interesting.

1984
01:51:07,600 --> 01:51:09,800
Are these is that going through a nun?

1985
01:51:09,800 --> 01:51:13,700
Project--, I'm not sure what that's why that's doing, what that's

1986
01:51:13,700 --> 01:51:16,100
doing, but it's pretty interesting, whatever it is.

1987
01:51:18,600 --> 01:51:22,200
Anyway, now we have the entire pipeline set up properly to do the

1988
01:51:22,200 --> 01:51:27,800
unprotect, but now we actually have to make sure that that all that

1989
01:51:27,800 --> 01:51:29,100
code is working as it should be.

1990
01:51:29,100 --> 01:51:31,500
And then I haven't made any mistakes in it which of course is pretty

1991
01:51:31,500 --> 01:51:33,900
easy to do with that many moving Parts.

1992
01:51:34,300 --> 01:51:36,700
Thankfully, we did check the inverses.

1993
01:51:36,700 --> 01:51:40,200
So we know that those inverses are working properly and we could do

1994
01:51:40,200 --> 01:51:42,300
one further, check on the inverses, which we should.

1995
01:51:42,300 --> 01:51:44,900
Because again, all that math, it's easy to get something wrong in

1996
01:51:44,900 --> 01:51:45,200
there.

1997
01:51:45,800 --> 01:51:48,100
Another way that we can check that inverse is we never checked the

1998
01:51:48,100 --> 01:51:48,300
inventory.

1999
01:51:48,400 --> 01:51:50,800
Of the Composites, but we could write.

2000
01:51:51,400 --> 01:51:52,100
So you can see here.

2001
01:51:52,100 --> 01:51:53,400
We've got this composite.

2002
01:51:57,200 --> 01:51:58,700
so, if I want to take a look in there,

2003
01:52:00,200 --> 01:52:03,800
what I could do is say here's the eye.

2004
01:52:12,800 --> 01:52:17,600
Make sure the combination of these is also correct, right?

2005
01:52:20,200 --> 01:52:23,100
So, let me just check that one real quickly before we get down to the

2006
01:52:23,100 --> 01:52:24,500
other nitty-gritty of the debugging.

2007
01:52:29,600 --> 01:52:30,300
There we go.

2008
01:52:33,200 --> 01:52:35,400
Oops, there we go.

2009
01:52:41,400 --> 01:52:45,700
So there's that Matrix and again, you can see nice diagonal ones.

2010
01:52:45,700 --> 01:52:48,800
They're still quite good, right?

2011
01:52:48,800 --> 01:52:52,400
Again, as you get more and more terms in there, you get further and

2012
01:52:52,400 --> 01:52:53,700
further away from perfect.

2013
01:52:53,700 --> 01:52:58,300
But these are all still very tiny values compared to 1, so which is

2014
01:52:58,300 --> 01:53:00,800
what we're looking for on the diagonal so that that looks quite good

2015
01:53:00,800 --> 01:53:01,200
to me.

2016
01:53:01,300 --> 01:53:03,200
That's still looks nice and inverse dish.

2017
01:53:04,300 --> 01:53:05,900
So that all seems pretty good.

2018
01:53:06,700 --> 01:53:07,900
I'm pretty happy with that.

2019
01:53:08,100 --> 01:53:09,900
So let's take a look at that unprojected now.

2020
01:53:09,900 --> 01:53:10,400
Real quickly.

2021
01:53:10,700 --> 01:53:12,700
We might not have time to finish that today.

2022
01:53:15,100 --> 01:53:18,600
Because we're almost out of time, but let's just take a look at the.

2023
01:53:18,600 --> 01:53:20,400
Well, I guess I can just do this.

2024
01:53:30,000 --> 01:53:33,800
I don't really want to be doing this for every entity here.

2025
01:53:33,800 --> 01:53:38,000
Why can we just can we skip a bit here, folks?

2026
01:53:39,400 --> 01:53:44,200
Let's go ahead and skip over simulate to here.

2027
01:53:46,500 --> 01:53:48,900
And now can you show me a eject?

2028
01:53:50,900 --> 01:53:51,500
There we go.

2029
01:53:54,500 --> 01:53:57,300
So here is where I want to be.

2030
01:53:59,200 --> 01:53:59,500
There.

2031
01:53:59,500 --> 01:53:59,800
Now, I

2032
01:54:00,000 --> 01:54:01,200
Here, anytime I want.

2033
01:54:02,200 --> 01:54:04,500
All right, so let's step into the sun project-- here.

2034
01:54:08,700 --> 01:54:09,300
Here we go.

2035
01:54:10,800 --> 01:54:13,700
And so this unprojected again, I don't know that.

2036
01:54:13,700 --> 01:54:17,200
We really we're not really accounting for the object transform scale

2037
01:54:17,200 --> 01:54:17,900
in here either.

2038
01:54:17,900 --> 01:54:22,000
So this this actually needs to get a little bit fancier potentially as

2039
01:54:22,000 --> 01:54:23,900
well, but we can ignore that for now.

2040
01:54:25,000 --> 01:54:29,200
So here in our own project here we've got our probe Z value coming

2041
01:54:29,200 --> 01:54:32,700
through and we're going to do that computation for what the clip C

2042
01:54:32,700 --> 01:54:35,700
value is the clip C value is zero which is exactly what we would

2043
01:54:35,700 --> 01:54:36,600
expect.

2044
01:54:36,800 --> 01:54:38,400
Because again Z is not used

2045
01:54:38,500 --> 01:54:39,300
Anyway here.

2046
01:54:40,400 --> 01:54:43,500
So let's take a look at what our clip Space X Y, comes out to be

2047
01:54:44,200 --> 01:54:44,500
groups.

2048
01:54:55,300 --> 01:54:59,500
Okay, and so our clip coordinates again, look totally reasonable

2049
01:54:59,500 --> 01:55:01,500
because they have to be negative 1 to 1.

2050
01:55:01,500 --> 01:55:05,700
So that's, you know, at least reasonable what I would like to do,

2051
01:55:05,700 --> 01:55:08,500
though, if I can miss, if I can.

2052
01:55:08,500 --> 01:55:08,600
Yeah.

2053
01:55:08,600 --> 01:55:08,900
Okay.

2054
01:55:08,900 --> 01:55:09,900
So if I have the

2055
01:55:11,200 --> 01:55:12,300
Breakpoint bear.

2056
01:55:13,800 --> 01:55:14,200
You know what?

2057
01:55:14,200 --> 01:55:15,200
I think I'm going to do.

2058
01:55:15,200 --> 01:55:18,900
I'm going to leave that break point there because I want to transform

2059
01:55:18,900 --> 01:55:22,900
some coordinates where I know what they should be because it's going

2060
01:55:22,900 --> 01:55:25,900
to be hard to look at these numbers going through if I don't have any

2061
01:55:25,900 --> 01:55:26,100
idea.

2062
01:55:26,100 --> 01:55:28,900
What if it's just like, okay, it's within bounds but is it really,

2063
01:55:28,900 --> 01:55:29,600
right?

2064
01:55:30,300 --> 01:55:34,300
So what I'm going to do is I'm going to stuff the mouse here to what I

2065
01:55:34,300 --> 01:55:37,100
think should be something that's in bounds, right?

2066
01:55:37,300 --> 01:55:39,300
So I'm going to say that the mousex.

2067
01:55:40,900 --> 01:55:50,600
Has to be 0, and the mouse y has to be 1079, right?

2068
01:55:50,800 --> 01:55:53,700
So, that's the upper left corner of the screen.

2069
01:55:54,100 --> 01:55:58,800
And so this way, I can verify that the transform is doing what I think

2070
01:55:58,800 --> 01:55:59,500
it should do.

2071
01:55:59,800 --> 01:56:02,600
Otherwise it would be pretty tough, right?

2072
01:56:03,300 --> 01:56:04,300
So, here we go.

2073
01:56:05,000 --> 01:56:06,600
Let's see what the clip space values.

2074
01:56:06,600 --> 01:56:07,300
End up being

2075
01:56:08,900 --> 01:56:11,900
So, I can already tell that that's wrong, right.

2076
01:56:11,900 --> 01:56:16,700
You know, I haven't even gotten to the complicated part and that's not

2077
01:56:16,700 --> 01:56:23,500
right because these were supposed to be values that would have undone

2078
01:56:23,500 --> 01:56:25,600
the screen dim stuff, right?

2079
01:56:26,400 --> 01:56:28,000
And they did not do that at all.

2080
01:56:40,200 --> 01:56:40,700
Right?

2081
01:56:40,900 --> 01:56:41,800
So that's just wrong.

2082
01:56:43,200 --> 01:56:46,200
So we're off to a good start in a debugging sense, not off to a good

2083
01:56:46,200 --> 01:56:47,300
start into programming sense.

2084
01:56:48,300 --> 01:56:50,300
And so, let's go ahead and fix that.

2085
01:56:50,600 --> 01:56:52,700
So when we take a look here, what happens?

2086
01:56:57,500 --> 01:56:58,000
oh,

2087
01:57:00,000 --> 01:57:03,600
Because we've already divided by point 5, for some reason, there was

2088
01:57:03,600 --> 01:57:08,200
already a divided by 0.5 in there, which means we're dividing by 0.5

2089
01:57:08,200 --> 01:57:12,200
twice, which doesn't make that's wrong to begin with.

2090
01:57:12,200 --> 01:57:14,500
And then also it's probably wrong a second time.

2091
01:57:22,900 --> 01:57:23,400
There we go.

2092
01:57:25,000 --> 01:57:26,000
So, I don't know.

2093
01:57:26,000 --> 01:57:26,800
Oh wait, no no, no.

2094
01:57:26,800 --> 01:57:27,600
That's, that's fine.

2095
01:57:27,700 --> 01:57:31,000
So, this is the screen center screen dim that's actually fine.

2096
01:57:31,000 --> 01:57:34,000
So, this is just taking it and subtracting the screen center,

2097
01:57:34,000 --> 01:57:35,800
nevermind, I panic there for no reason.

2098
01:57:36,800 --> 01:57:39,400
Then we're trying to do here is normalize these.

2099
01:57:39,400 --> 01:57:44,100
So it's negative 1 to 1, so dividing by the screen dim.

2100
01:57:44,100 --> 01:57:46,500
So this was yet, this was actually another

2101
01:57:47,700 --> 01:57:49,100
Brain fart there, right?

2102
01:57:49,800 --> 01:57:53,900
It's if we divided by the screen dim, it would actually be half of

2103
01:57:53,900 --> 01:57:55,600
what it should be, right?

2104
01:58:01,700 --> 01:58:03,200
That's what we would have expected.

2105
01:58:04,600 --> 01:58:07,300
Because I must that up, right?

2106
01:58:07,400 --> 01:58:11,800
If you take a look at what happens here, we're saying that we've got

2107
01:58:11,800 --> 01:58:16,600
this full span here, which is the width, we've turned it into half of

2108
01:58:16,600 --> 01:58:17,100
that.

2109
01:58:17,300 --> 01:58:19,800
So we want to divide by half of the width.

2110
01:58:20,100 --> 01:58:27,100
So somehow I, yeah, we want to do X over with the over to and somehow

2111
01:58:27,100 --> 01:58:28,600
I turned that into a .5.

2112
01:58:29,200 --> 01:58:32,400
I even said that, I remember, I said the two comes up to the top.

2113
01:58:32,600 --> 01:58:33,900
It should be a times B.

2114
01:58:34,700 --> 01:58:35,100
Right?

2115
01:58:35,100 --> 01:58:39,000
I mean that I don't know what I was thinking there.

2116
01:58:39,500 --> 01:58:40,600
What was I thinking?

2117
01:58:41,100 --> 01:58:43,700
Bad, bad.

2118
01:58:44,400 --> 01:58:47,600
Bad math morning.

2119
01:58:51,100 --> 01:58:52,300
I'd like Bab.

2120
01:58:53,700 --> 01:58:55,200
Bab math morning.

2121
01:58:58,800 --> 01:58:59,100
All right.

2122
01:58:59,100 --> 01:58:59,600
Anyway.

2123
01:59:00,300 --> 01:59:05,200
So that was just really impressively bad on my part, but that's just

2124
01:59:05,200 --> 01:59:06,000
how it goes sometimes.

2125
01:59:06,300 --> 01:59:09,300
So after I compute this now, we've got clip coordinates.

2126
01:59:09,300 --> 01:59:11,700
That actually look correct, which is nice.

2127
01:59:12,700 --> 01:59:17,200
Now, we can take a look at what the world transform is there.

2128
01:59:22,200 --> 01:59:23,300
Oh you know what though?

2129
01:59:23,900 --> 01:59:28,100
We also don't have our normalization here, so we're missing one more

2130
01:59:28,100 --> 01:59:29,200
step in here, right?

2131
01:59:29,900 --> 01:59:37,000
We also don't do the / Z part of this of this equation.

2132
01:59:39,000 --> 01:59:40,000
Which is also going to be wrong.

2133
01:59:40,000 --> 01:59:42,200
That's not going to be a problem in this case.

2134
01:59:42,200 --> 01:59:45,800
But only because this happens to be orthographic, so we can ignore it

2135
01:59:45,800 --> 01:59:48,500
for a second, but otherwise, it happens to be wrong.

2136
01:59:48,900 --> 01:59:52,200
But anyway, so let's see what the world P ends up being here.

2137
01:59:52,600 --> 01:59:59,500
-1.6 -1.0, that still looks a little wrong because in theory,

2138
02:00:03,900 --> 02:00:08,200
in theory, the coordinates coming in here yet are the coordinates

2139
02:00:08,200 --> 02:00:09,500
coming in here are supposed to be

2140
02:00:12,900 --> 02:00:14,500
02 1920, right?

2141
02:00:14,500 --> 02:00:18,000
We're supposed to or rather - 962 960, right?

2142
02:00:18,200 --> 02:00:23,500
So it looks like, we're still getting an error there if I'm not very

2143
02:00:23,500 --> 02:00:24,800
much mistaken.

2144
02:00:25,000 --> 02:00:28,100
Because yeah, those that just looks

2145
02:00:29,900 --> 02:00:32,100
That inverse looks totally wrong for.

2146
02:00:32,300 --> 02:00:34,900
Oh, that's because I'm looking at the wrong one.

2147
02:00:35,600 --> 02:00:36,100
All right.

2148
02:00:36,200 --> 02:00:36,900
Never mind.

2149
02:00:37,600 --> 02:00:38,000
We're actually.

2150
02:00:38,000 --> 02:00:39,800
Okay, I need to step to hear first.

2151
02:00:47,400 --> 02:00:47,900
There we go.

2152
02:00:48,400 --> 02:00:49,900
So that looks like the correct coordinates.

2153
02:00:49,900 --> 02:00:53,400
Now, I panicked again there for a second.

2154
02:00:54,600 --> 02:00:55,200
Let's see.

2155
02:00:55,400 --> 02:00:56,000
There we go.

2156
02:00:56,800 --> 02:01:00,900
So now we're getting a little bit better, although, I still don't

2157
02:01:00,900 --> 02:01:03,400
know, because we're not actually passing the mouse coordinates yet.

2158
02:01:03,400 --> 02:01:04,200
Let's take a look.

2159
02:01:06,600 --> 02:01:07,100
There we go.

2160
02:01:12,800 --> 02:01:15,500
All right, so now that's working properly again.

2161
02:01:20,300 --> 02:01:23,800
Although it looks like our clipping is not.

2162
02:01:25,400 --> 02:01:26,900
So we do have one more bug there.

2163
02:01:31,900 --> 02:01:36,000
Looks like our Clipper our clip rectangles are messed up as well,

2164
02:01:36,300 --> 02:01:36,900
right?

2165
02:01:37,200 --> 02:01:39,600
You can see, look at what's happening there with those weird.

2166
02:01:39,600 --> 02:01:42,300
Yeah, so our clip rectangles are messed up again.

2167
02:01:44,600 --> 02:01:46,600
Or messed up for the first time in this situation.

2168
02:01:47,000 --> 02:01:48,300
So you can see there's some weird.

2169
02:01:48,300 --> 02:01:50,200
There's just some weird stuff going on here.

2170
02:01:50,800 --> 02:01:55,000
So it's almost there, but it's not there yet and we also have to work

2171
02:01:55,000 --> 02:01:55,400
on the Z.

2172
02:01:55,400 --> 02:01:57,100
You can see that are the Z is inverted.

2173
02:01:57,100 --> 02:02:00,100
That's why they're it's black text with white instead of white text

2174
02:02:00,100 --> 02:02:00,700
with black.

2175
02:02:01,000 --> 02:02:02,400
But we're pretty close now.

2176
02:02:06,000 --> 02:02:06,600
All right.

2177
02:02:12,500 --> 02:02:13,900
Okay, so that's getting closer.

2178
02:02:14,600 --> 02:02:16,800
I'm going to go ahead and go to The To Do List here.

2179
02:02:20,700 --> 02:02:22,400
This is what's happening at the moment.

2180
02:02:24,600 --> 02:02:26,200
so, that worked

2181
02:02:35,500 --> 02:02:36,600
We did a lot of stuff here.

2182
02:02:39,400 --> 02:02:40,600
So really we're just on this.

2183
02:02:40,600 --> 02:02:47,200
And in order to get this stuff working, we need to do handled / Z in

2184
02:02:47,200 --> 02:02:48,200
done project.

2185
02:02:51,000 --> 02:02:51,700
Fixed clip.

2186
02:02:51,700 --> 02:02:59,800
Rectangles for debug you, I and fix Z settings for you.

2187
02:03:00,100 --> 02:03:00,500
You are.

2188
02:03:02,700 --> 02:03:04,900
So we're pretty good here.

2189
02:03:05,200 --> 02:03:08,300
We're making a lot of progress that wasn't a very long time.

2190
02:03:08,300 --> 02:03:11,400
If you think about how many hours we've actually spent on, it wasn't

2191
02:03:11,400 --> 02:03:15,700
very long to do a complete transform of all of our code from 2D

2192
02:03:15,700 --> 02:03:18,000
sorting based to full 3d pipeline.

2193
02:03:18,000 --> 02:03:18,900
So, that's pretty good.

2194
02:03:19,300 --> 02:03:20,600
I'm pretty happy with that.

2195
02:03:21,200 --> 02:03:23,900
I'm going to go ahead and do Q&A here.

2196
02:03:28,500 --> 02:03:32,800
Because now we're pretty much everything is re-enabled almost.

2197
02:03:32,800 --> 02:03:36,100
We got probably one more weekend maybe of stuff to go through.

2198
02:03:40,200 --> 02:03:43,500
Unless we had any real big snags, but not that much.

2199
02:03:46,500 --> 02:03:48,400
and I guess this is nicer because

2200
02:03:50,800 --> 02:03:52,600
I don't know that this

2201
02:03:54,200 --> 02:03:57,100
but we are to solve this, but we'll go in and take that.

2202
02:04:10,200 --> 02:04:10,500
Mabel.

2203
02:04:10,500 --> 02:04:11,200
Oh am I right?

2204
02:04:11,200 --> 02:04:15,100
In thinking that today's work has had the cool and not immediately

2205
02:04:15,100 --> 02:04:15,700
expected side.

2206
02:04:15,700 --> 02:04:18,700
Effect of beginning to level up the debug camera in terms of mouse

2207
02:04:18,700 --> 02:04:22,800
picking or of entities or did the diva camera have that before.

2208
02:04:22,800 --> 02:04:28,100
Anyway so the debug camera may not have had that before.

2209
02:04:28,100 --> 02:04:29,000
I don't remember.

2210
02:04:29,300 --> 02:04:34,900
That's a good question the before picking amenities was only done in

2211
02:04:34,900 --> 02:04:38,800
2D and now we would have to do it in 3D but that's fine.

2212
02:04:39,700 --> 02:04:40,300
Right.

2213
02:04:41,800 --> 02:04:46,500
So I guess what I would say is it would definitely be leveling up to

2214
02:04:46,500 --> 02:04:50,300
the fact that it could do rotated picking of entities at some point if

2215
02:04:50,300 --> 02:04:53,800
we choose to re-enable that but right now we're not doing it because

2216
02:04:53,800 --> 02:04:58,200
in order to do to 3D picking it 3D picking of entities, what you have

2217
02:04:58,200 --> 02:04:59,200
to do, right?

2218
02:05:00,600 --> 02:05:03,800
Is if you imagine you're looking out at the world and there's entities

2219
02:05:03,800 --> 02:05:08,000
out there, you need to create a ray and then you need to do a ray

2220
02:05:08,000 --> 02:05:09,200
intersection test.

2221
02:05:09,300 --> 02:05:13,600
To see what you hit when you go out in that direction, right?

2222
02:05:13,600 --> 02:05:15,600
And so it's a very it's a more complicated thing.

2223
02:05:15,700 --> 02:05:18,000
Very different from what we were doing with the 2D case.

2224
02:05:46,500 --> 02:05:50,100
Do you plan to keep the assert in opengl debug call back my driver is

2225
02:05:50,100 --> 02:05:52,900
sending a lot of debug information that fires the assert.

2226
02:05:54,100 --> 02:05:59,500
So yeah, we don't have, we can remove that for you if that helps the

2227
02:06:00,000 --> 02:06:04,300
Is basically that the opengl debug call back can send lots of just

2228
02:06:04,300 --> 02:06:06,600
informative messages to you, right?

2229
02:06:06,800 --> 02:06:10,000
And that's one of the reasons that they have those things like first

2230
02:06:10,000 --> 02:06:12,900
severity and all that stuff so we can turn that off.

2231
02:06:13,400 --> 02:06:17,200
We could add something that checks which messages were getting and

2232
02:06:17,200 --> 02:06:18,100
things like that.

2233
02:06:18,800 --> 02:06:21,400
But yeah, we don't need that at the moment, so that's fine.

2234
02:06:23,300 --> 02:06:24,200
We can leave it there.

2235
02:06:26,300 --> 02:06:29,900
And the other thing we could do is we could say, also

2236
02:06:43,400 --> 02:06:49,600
When we have that procedure we get a severity value and we could just

2237
02:06:49,600 --> 02:06:53,200
check to make sure that we're only going to assert on things that are

2238
02:06:53,200 --> 02:06:55,700
actually relatively severe, right?

2239
02:06:56,600 --> 02:07:01,000
So for example, I could I could go to Doc's out you yell

2240
02:07:05,300 --> 02:07:06,400
And just take a look at this here.

2241
02:07:06,800 --> 02:07:13,600
So that severity value here, know if it's documented.

2242
02:07:24,200 --> 02:07:24,700
Curtis.

2243
02:07:25,300 --> 02:07:26,500
She'll debug severity.

2244
02:07:26,500 --> 02:07:28,900
Low medium or high.

2245
02:07:29,200 --> 02:07:29,900
Right?

2246
02:07:29,900 --> 02:07:36,400
And so what we could do is is try to take a look at that.

2247
02:07:36,500 --> 02:07:40,400
I don't know you know I'll leave it if they're it out and just put a

2248
02:07:40,800 --> 02:07:48,400
like to do Casey should this always assert on severity medium?

2249
02:07:49,700 --> 02:07:57,400
Hi messages, perhaps, and maybe what you could do is, is if you could

2250
02:07:57,400 --> 02:08:02,200
check Kim and see what the severity is, that's coming in, when you're

2251
02:08:02,200 --> 02:08:05,500
getting those calls to debug call back, what do they tend to be low

2252
02:08:05,500 --> 02:08:07,500
medium high or notification?

2253
02:08:08,300 --> 02:08:10,500
And maybe we could just filter those out that way, we could still have

2254
02:08:10,500 --> 02:08:11,500
the assert trigger on anything.

2255
02:08:11,500 --> 02:08:15,300
That's an actual error because it would be nice, right?

2256
02:08:18,400 --> 02:08:19,300
Lucid Frost.

2257
02:08:19,300 --> 02:08:23,200
Why do you think it is not popular to do X forward, coordinate systems

2258
02:08:23,200 --> 02:08:23,600
Tron?

2259
02:08:23,600 --> 02:08:27,700
Blow was talking about it yesterday and it seems like a good idea at

2260
02:08:27,700 --> 02:08:29,400
least in terms of rotations.

2261
02:08:39,800 --> 02:08:42,700
So I guess the first thing I would say is I'm not sure why it would

2262
02:08:42,700 --> 02:08:46,300
matter what axis was forward.

2263
02:08:50,300 --> 02:08:54,500
Is there some reason, what's the benefit of having XB forward as

2264
02:08:54,500 --> 02:08:56,100
opposed to anything else?

2265
02:08:57,700 --> 02:08:58,400
Being.

2266
02:09:00,500 --> 02:09:03,000
I guess I don't understand why it would matter.

2267
02:09:05,200 --> 02:09:07,000
Mansfield oyu Square length.

2268
02:09:07,000 --> 02:09:10,000
How does it compare to length squared probably just because I'm was

2269
02:09:10,000 --> 02:09:10,700
being dumb.

2270
02:09:12,200 --> 02:09:15,800
Length squared is probably better actually

2271
02:09:21,600 --> 02:09:24,300
So, if you take a look at what I was doing here, squaring the length

2272
02:09:24,300 --> 02:09:26,900
is this is just a waste of time because it means you're squaring a

2273
02:09:26,900 --> 02:09:27,700
square root.

2274
02:09:28,300 --> 02:09:33,900
So if I just do this it's a faster way to do it anyway.

2275
02:09:38,000 --> 02:09:38,500
Right.

2276
02:09:39,600 --> 02:09:44,000
Because the reason for that is when I compute the length squared, I

2277
02:09:44,000 --> 02:09:46,900
don't have to do the square root right by Computing.

2278
02:09:46,900 --> 02:09:49,500
The length I was having to do another square root which I then

2279
02:09:49,500 --> 02:09:51,100
squared, which is just a waste of time.

2280
02:09:51,100 --> 02:09:53,300
It's just a waste of operation, right?

2281
02:09:54,100 --> 02:09:57,300
So doing the length squared directly is actually better in the case of

2282
02:09:57,300 --> 02:09:59,300
vectors, it's just better.

2283
02:10:00,100 --> 02:10:03,200
So no that was that was just me being dumb there, I wasn't doing that

2284
02:10:03,200 --> 02:10:04,600
because there was some smarter

2285
02:10:04,800 --> 02:10:06,300
Because there was something smart behind it.

2286
02:10:09,500 --> 02:10:11,400
That, that is actually what you would want to do.

2287
02:10:12,000 --> 02:10:13,600
Let me just double-check that in break anything.

2288
02:10:13,600 --> 02:10:18,800
Obviously, for I check that in, but yeah.

2289
02:10:43,800 --> 02:10:45,100
Where were we?

2290
02:10:48,100 --> 02:10:51,800
120, will you consider a faster matrix multiplication algorithm other

2291
02:10:51,800 --> 02:10:52,900
than inner product?

2292
02:10:53,000 --> 02:10:57,700
No, so we don't do very many multi Matrix multiplications, so we don't

2293
02:10:57,700 --> 02:11:02,600
need to do anything, particularly clever.

2294
02:11:05,800 --> 02:11:10,600
We hardly do the Matrix like the number of times we call that function

2295
02:11:10,600 --> 02:11:14,200
is very low in a non debug setting anyway.

2296
02:11:16,000 --> 02:11:19,000
And even if we weren't it, really just isn't going to be a dominated

2297
02:11:19,000 --> 02:11:20,300
part of the Computing time.

2298
02:11:21,700 --> 02:11:25,700
Most of the, you know, Vector math that's being done, is being done on

2299
02:11:25,700 --> 02:11:26,500
the GPU.

2300
02:11:26,600 --> 02:11:30,300
When it's doing the vertex transforms, not not on our side.

2301
02:11:34,000 --> 02:11:35,700
Jeff G Melton.

2302
02:11:35,800 --> 02:11:38,100
Is there a road map for what you'll be working on over the coming

2303
02:11:38,100 --> 02:11:38,600
months?

2304
02:11:38,900 --> 02:11:41,500
Know, we pretty much just work on, whatever seems reasonable to work

2305
02:11:41,500 --> 02:11:42,600
on next as we go.

2306
02:11:50,000 --> 02:11:52,600
Mansfield the probes you think when a bit too quick for me I didn't

2307
02:11:52,600 --> 02:11:55,000
fully understand the role of world distance from cameras e.

2308
02:11:55,000 --> 02:11:56,600
And how are you going to generate it?

2309
02:11:56,800 --> 02:11:58,700
Are you going to talk more about that next time?

2310
02:11:59,200 --> 02:11:59,800
Yeah, I can.

2311
02:12:00,000 --> 02:12:00,800
About that really quickly.

2312
02:12:00,800 --> 02:12:03,000
Now, it's not that complicated actually.

2313
02:12:04,300 --> 02:12:07,500
So when we're talking about this picking procedure, right?

2314
02:12:07,500 --> 02:12:09,700
I'm going to look at the sot this view from the side.

2315
02:12:12,100 --> 02:12:13,300
So here's the eyeball.

2316
02:12:15,000 --> 02:12:16,300
And here's the world, right?

2317
02:12:16,300 --> 02:12:17,800
So we've got stuff out in the world.

2318
02:12:18,700 --> 02:12:23,100
So when you want to do and one of these sort of like, inverse things

2319
02:12:23,100 --> 02:12:26,200
where you're talking about, let's take a point on the screen and turn

2320
02:12:26,200 --> 02:12:27,900
it into a world space coordinate.

2321
02:12:28,000 --> 02:12:31,700
Well, the problem is, you have to pick where in the world you imagined

2322
02:12:31,700 --> 02:12:36,700
it to be because in a perspective transform, if I said that this point

2323
02:12:36,700 --> 02:12:40,600
on the screen here, I could be talking about any number of points in

2324
02:12:40,600 --> 02:12:43,600
the world because a point on the screen defines a re-write.

2325
02:12:44,100 --> 02:12:44,300
It

2326
02:12:44,500 --> 02:12:48,400
To find an entire line of points going out because there's all those

2327
02:12:48,400 --> 02:12:51,500
points map to the same point in screen space, right?

2328
02:12:53,200 --> 02:12:56,100
So I need to know when you're asking for a world location.

2329
02:12:56,100 --> 02:13:00,600
I need to know what you actually mean and so you need to give it

2330
02:13:00,600 --> 02:13:03,700
something here to disambiguate.

2331
02:13:03,900 --> 02:13:08,000
So what's a pretty useful way to do that is just say, okay, tell me

2332
02:13:08,000 --> 02:13:11,700
the screen location and how far away from the camera.

2333
02:13:11,800 --> 02:13:17,000
You think the you want to talk about in terms of where the screen

2334
02:13:17,000 --> 02:13:21,000
essentially was placed what this allows you to do is say like okay,

2335
02:13:21,100 --> 02:13:22,700
you know, let's say that I'm looking

2336
02:13:23,200 --> 02:13:26,600
At a point that's 10 meters away, right?

2337
02:13:26,700 --> 02:13:30,400
And I want to like imagine that I was drawing on this plate, that's

2338
02:13:30,400 --> 02:13:31,500
ten meters away.

2339
02:13:31,700 --> 02:13:33,400
Where would it be in screen space?

2340
02:13:33,400 --> 02:13:35,400
That's all this is doing, right?

2341
02:13:35,500 --> 02:13:38,400
So it's allowing you to specify in a distance from the camera.

2342
02:13:38,400 --> 02:13:41,800
That's in World space units, but in order to do that we first have to

2343
02:13:41,800 --> 02:13:43,100
transform that into clip space.

2344
02:13:43,100 --> 02:13:45,200
So I know what the clip coordinate actually is.

2345
02:13:56,300 --> 02:13:59,500
Since you are only doing quads, would it be possible to upload a

2346
02:13:59,500 --> 02:14:02,200
constant index buffer once with the maximum number of vertices and

2347
02:14:02,200 --> 02:14:03,500
then never touch it again?

2348
02:14:04,100 --> 02:14:05,600
Yes, it would.

2349
02:14:06,200 --> 02:14:14,200
However, I think that also would still be less efficient than then

2350
02:14:14,200 --> 02:14:19,000
using the using a geometry Shader.

2351
02:14:20,200 --> 02:14:22,800
Now it could be possible that we want to run on platforms and somehow

2352
02:14:22,800 --> 02:14:26,900
don't have geometry shaders, maybe and in that if that's the case,

2353
02:14:26,900 --> 02:14:29,500
then maybe it would be better to do something like uploading next

2354
02:14:29,500 --> 02:14:31,700
buffer or just passed down an actual index.

2355
02:14:31,700 --> 02:14:36,800
Buffer just actually build it, but all of those things will work, I

2356
02:14:36,800 --> 02:14:37,300
believe.

2357
02:14:59,800 --> 02:14:59,800
Yeah.

2358
02:15:00,000 --> 02:15:02,800
Possible, that square link can result in a zero and blow up.

2359
02:15:03,000 --> 02:15:07,000
No, because this again, remember, is inverting the camera transform.

2360
02:15:07,000 --> 02:15:10,900
And we will never be setting a chance for camera transform with an x y

2361
02:15:10,900 --> 02:15:12,700
z Vector, length of 0.

2362
02:15:13,000 --> 02:15:16,400
If we did, we wouldn't see anything on the screen, right?

2363
02:15:16,500 --> 02:15:20,300
Because the in order to see anything on the screen, those vectors all

2364
02:15:20,300 --> 02:15:21,300
have to be of a length.

2365
02:15:21,300 --> 02:15:22,300
That's not zero.

2366
02:15:24,100 --> 02:15:26,500
So, we know a priori that that can't be true.

2367
02:15:28,700 --> 02:15:31,300
Unless we have a really bad bug somewhere else, in which case it's

2368
02:15:31,300 --> 02:15:35,400
that bug, we would want to fix and not the fact that we divide by the

2369
02:15:35,400 --> 02:15:36,100
length squared.

2370
02:15:39,600 --> 02:15:42,400
Kim says he gets open till messages with severity.

2371
02:15:42,400 --> 02:15:45,600
Debug severity, notification low, and debug severity.

2372
02:15:46,600 --> 02:15:48,300
I'm sorry, debug certification and ebooks.

2373
02:15:48,300 --> 02:15:49,200
Pretty medium.

2374
02:15:49,800 --> 02:15:51,300
What are the messages you get with?

2375
02:15:51,300 --> 02:15:52,400
Debug severity, medium.

2376
02:15:52,400 --> 02:15:53,000
Are they things?

2377
02:15:53,000 --> 02:15:53,900
We can fix.

2378
02:15:55,800 --> 02:15:57,900
Because I feel like we shouldn't maybe be getting debug severity,

2379
02:15:57,900 --> 02:15:59,900
medium ratchet freak.

2380
02:15:59,900 --> 02:16:03,800
Even a simple pass through geometry Shader is a decent perf hit

2381
02:16:04,900 --> 02:16:05,400
Really.

2382
02:16:08,600 --> 02:16:11,200
Why wouldn't have expected that but interesting?

2383
02:16:16,300 --> 02:16:16,700
Tag.

2384
02:16:16,700 --> 02:16:17,000
Sorry.

2385
02:16:17,000 --> 02:16:18,500
Didn't see the whole stream.

2386
02:16:18,500 --> 02:16:21,800
But why no, 60 frames per second with the move to core GL?

2387
02:16:22,300 --> 02:16:24,800
Because that's actually not where the time is being spent at the

2388
02:16:24,800 --> 02:16:25,400
moment.

2389
02:16:27,100 --> 02:16:31,800
It's actually in this other function, that's unrelated, but two

2390
02:16:31,800 --> 02:16:32,100
things.

2391
02:16:32,100 --> 02:16:35,100
First of all, if we build with

2392
02:16:39,100 --> 02:16:42,200
the full answer is basically just that it spent in a bunch of other

2393
02:16:42,200 --> 02:16:44,600
things that we're doing like our debug tracking and stuff like that.

2394
02:16:44,799 --> 02:16:48,799
If I turn on optimizations for starters then I think we are 60 frames

2395
02:16:48,799 --> 02:16:49,400
a second.

2396
02:16:49,700 --> 02:16:53,600
Yeah so with optimizations on we are already 60 frames a second but

2397
02:16:53,799 --> 02:16:57,400
even with optimization is off, it's not actually in the drawing at all

2398
02:16:58,100 --> 02:16:59,400
with optimizations off.

2399
02:16:59,400 --> 02:17:02,000
It's actually just too because we don't have an accelerated.

2400
02:17:02,900 --> 02:17:07,100
We still have an N squared, entity Point, checking thing and now

2401
02:17:07,100 --> 02:17:07,299
there's

2402
02:17:07,500 --> 02:17:09,700
Stuff in the world that that's not at all acceptable.

2403
02:17:09,900 --> 02:17:12,299
If we fixed that, we would not have a problem.

2404
02:17:13,200 --> 02:17:18,700
Also, our debug stuff takes a ton of time if we changed that stuff.

2405
02:17:20,799 --> 02:17:23,200
We would also be 60 feet per second.

2406
02:17:23,200 --> 02:17:25,299
Even debug I believe, however,

2407
02:17:42,299 --> 02:17:44,600
Of course, we can't actually see that it's 60 frames a second.

2408
02:17:44,600 --> 02:17:46,100
Here we would not be able to 0

2409
02:17:48,500 --> 02:17:49,400
This is interesting.

2410
02:18:02,100 --> 02:18:04,600
Ah, that's a good point.

2411
02:18:04,600 --> 02:18:08,500
So we have to make sure that enabling that debug callback only

2412
02:18:08,500 --> 02:18:09,299
happens.

2413
02:18:10,000 --> 02:18:14,500
I don't know if you saw that, we don't specify the compatibility, we

2414
02:18:14,500 --> 02:18:17,299
don't specify the debug bit in a non debug setting.

2415
02:18:17,500 --> 02:18:19,700
So we actually don't want to call this.

2416
02:18:25,100 --> 02:18:26,400
I believe that's in.

2417
02:18:39,799 --> 02:18:40,700
How many internal?

2418
02:18:45,500 --> 02:18:49,000
So, I believe this is also 60 frames a second even without any

2419
02:18:49,000 --> 02:18:51,700
optimizations on because we just turned off all like, the debug

2420
02:18:51,700 --> 02:18:55,700
tracking and junk like that, which takes a bunch of frame time for no

2421
02:18:55,700 --> 02:18:56,200
reason.

2422
02:18:57,100 --> 02:18:57,700
We can't see it.

2423
02:18:57,700 --> 02:18:59,600
Obviously, because incomplete release mode.

2424
02:18:59,600 --> 02:19:03,600
You don't get any of the additional counter stuff.

2425
02:19:03,799 --> 02:19:05,299
Probably want to make a frame rate counter.

2426
02:19:05,299 --> 02:19:08,700
We can view even in fully release mode for obvious reasons.

2427
02:19:08,700 --> 02:19:11,799
But so, yeah, so the answer is the drawing.

2428
02:19:12,900 --> 02:19:16,700
The drawing is probably hardly takes any time at all at the moment

2429
02:19:16,900 --> 02:19:20,100
when we get our profile stuff back will be would be able to see that

2430
02:19:20,100 --> 02:19:20,500
better.

2431
02:19:21,200 --> 02:19:24,400
But really, the it has nothing to do with with the drawing at all.

2432
02:19:24,400 --> 02:19:25,299
The drawing is fine.

2433
02:19:26,200 --> 02:19:29,299
It's just other crufty parts of the code that we have at the moment

2434
02:19:29,299 --> 02:19:32,400
that make that not happen.

2435
02:19:33,100 --> 02:19:35,700
Like I said, it would be nice to be able to see this, but we have to

2436
02:19:35,700 --> 02:19:37,900
re-enable this first in order to do so.

2437
02:19:39,100 --> 02:19:42,299
So, at the moment, we won't be able to view that till we finish.

2438
02:19:42,400 --> 02:19:46,000
Bring the clip stuff working there and then we'll be good to go and we

2439
02:19:46,000 --> 02:19:47,700
can actually see what's taking the time.

2440
02:20:01,700 --> 02:20:06,400
Kim, Jorgensen medium, recompiling fragment Shader for program 3.

2441
02:20:06,400 --> 02:20:10,800
That's an interesting thing to call a severity medium, but okay.

2442
02:20:19,100 --> 02:20:19,400
Hmm.

2443
02:20:24,300 --> 02:20:27,400
So I guess the only thing we could probably safely do in there is

2444
02:20:27,400 --> 02:20:28,000
severity.

2445
02:20:28,000 --> 02:20:30,100
Hi, I guess.

2446
02:20:30,900 --> 02:20:31,800
Does that sound right?

2447
02:20:31,800 --> 02:20:38,900
So like, you know, maybe we could do something, like if severity

2448
02:20:39,000 --> 02:20:40,700
equals GL,

2449
02:20:42,500 --> 02:20:43,800
And I would have to grab this.

2450
02:21:11,500 --> 02:21:13,600
So, I can put these guys in here.

2451
02:21:19,100 --> 02:21:22,900
And we'll just say, if it's high, go for it.

2452
02:21:26,900 --> 02:21:27,200
Oops.

2453
02:21:29,600 --> 02:21:31,300
Maybe let's say.

2454
02:21:35,600 --> 02:21:36,400
Live like that.

2455
02:21:40,900 --> 02:21:45,600
All right, I think we're about done for the day we're out of time.

2456
02:21:45,600 --> 02:21:49,100
Anyway so I'm gonna go ahead and close it down.

2457
02:22:00,500 --> 02:22:02,300
All right, thank you, everyone for joining me for another episode of

2458
02:22:02,300 --> 02:22:02,800
handmade hero.

2459
02:22:02,800 --> 02:22:04,000
It's been a pleasure coding with you.

2460
02:22:04,000 --> 02:22:07,600
As always, if you would like to follow along at home, you can always

2461
02:22:07,600 --> 02:22:10,000
pre-order the game at handmade hero dot org and it comes with a source

2462
02:22:10,000 --> 02:22:12,400
code so you can play around with it.

2463
02:22:12,700 --> 02:22:16,000
We also have a forum site, you can go to to ask questions a patreon

2464
02:22:16,000 --> 02:22:16,500
page and go to.

2465
02:22:16,500 --> 02:22:18,800
If you want support the video series, a schedule bot, the tweets, the

2466
02:22:18,800 --> 02:22:21,500
schedule at you, and episode guide, so you can catch up on old

2467
02:22:21,500 --> 02:22:22,200
episodes.

2468
02:22:22,800 --> 02:22:25,500
I am pretty happy with the way, the 3D stuff all turned out.

2469
02:22:25,500 --> 02:22:29,600
It seems pretty good so far and next weekend I guess we've

2470
02:22:29,800 --> 02:22:32,000
Got two things we need to try and do.

2471
02:22:32,000 --> 02:22:34,000
I don't know if we'll have time to do all of them but one of them is

2472
02:22:34,000 --> 02:22:39,200
to do the unprotect for perspective as well and clean up some of the

2473
02:22:40,300 --> 02:22:42,200
debug UI clipping stuff.

2474
02:22:42,200 --> 02:22:45,600
So we need to do those two things but then we need to move on to some

2475
02:22:45,600 --> 02:22:50,200
things are a little more wild which is like doing the Z distance based

2476
02:22:50,200 --> 02:22:53,200
fog and some stuff like that, that should be kind of fun to do as

2477
02:22:53,200 --> 02:22:53,500
well.

2478
02:22:54,000 --> 02:22:57,300
So we want to do that stuff next weekend and then hopefully I think

2479
02:22:57,300 --> 02:22:59,500
that's all the 3D stuff.

2480
02:22:59,700 --> 02:23:04,800
We need to do at the moment and we can move on to other parts of our

2481
02:23:04,800 --> 02:23:08,000
to-do list, may be doing, I guess, starting to do some World

2482
02:23:08,000 --> 02:23:09,600
Generation or so stuff like that.

2483
02:23:10,600 --> 02:23:12,800
And we'll have to throw in new artwork as well.

2484
02:23:12,800 --> 02:23:16,100
Which will be kind of a pretty big overhaul for us because we're going

2485
02:23:16,100 --> 02:23:20,600
to have to start actually thinking about how entities are built up and

2486
02:23:20,600 --> 02:23:23,400
you know, different pieces of them and that sort of thing for real.

2487
02:23:24,000 --> 02:23:25,300
So that'll be a big change here.

2488
02:23:25,300 --> 02:23:29,400
So we've got some pretty serious work ahead of us, but it should all

2489
02:23:29,400 --> 02:23:29,600
be

2490
02:23:29,700 --> 02:23:30,900
a fun work because it's all stuff.

2491
02:23:30,900 --> 02:23:31,800
That's I guess.

2492
02:23:31,800 --> 02:23:34,300
We'll make the game look more like the final game, right?

2493
02:23:34,300 --> 02:23:37,200
Because now we'll have like artwork that looks reasonable and stuff

2494
02:23:37,200 --> 02:23:37,700
like that.

2495
02:23:38,800 --> 02:23:40,300
Which should be a pretty big Improvement.

2496
02:23:40,500 --> 02:23:44,900
Anyway, hopefully I'll see you all back here next weekend for that

2497
02:23:45,400 --> 02:23:48,600
until then have a good programming week and I will see you on the

2498
02:23:48,600 --> 02:23:49,000
internet.

2499
02:23:49,000 --> 02:23:49,300
Everyone.

2500
02:23:49,300 --> 02:23:49,900
Take it easy, everybody.

