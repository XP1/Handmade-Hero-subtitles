1
00:00:00,900 --> 00:00:03,400
Hello, everyone, and welcome to handmade hero.

2
00:00:03,400 --> 00:00:05,800
The show we could have complete game live on stream.

3
00:00:06,200 --> 00:00:08,000
No engines, no libraries.

4
00:00:08,100 --> 00:00:14,600
It's just us in our typing fingers, right now, we are in the middle of

5
00:00:14,600 --> 00:00:16,100
doing fonts, actually.

6
00:00:18,500 --> 00:00:19,300
Been a long time coming.

7
00:00:19,300 --> 00:00:21,600
A lot of people have asked over going to be fonts, and we are doing

8
00:00:21,600 --> 00:00:22,000
fonts.

9
00:00:22,800 --> 00:00:27,200
We've got fonts on the screen actually they look just fine but there's

10
00:00:27,200 --> 00:00:32,299
some things that we have not finished yet that we need to finish and

11
00:00:32,400 --> 00:00:36,600
really the biggest one is called kerning which we discussed a little

12
00:00:36,600 --> 00:00:40,600
bit earlier and today is pretty much going to be all about kerning so

13
00:00:40,600 --> 00:00:44,800
that we can get our fonts horizontal spacing looking nicer than it

14
00:00:44,800 --> 00:00:45,600
looks right now.

15
00:00:46,400 --> 00:00:49,600
If you would like to follow along at home, and you preorder the game

16
00:00:49,600 --> 00:00:51,300
on handmade hero dot-org, today is day.

17
00:00:51,300 --> 00:00:51,900
17 T.

18
00:00:51,900 --> 00:00:55,300
So please unpack day 169 source code into a directory.

19
00:00:55,300 --> 00:00:58,600
That is the source code that I will be starting with today and it is

20
00:00:58,600 --> 00:01:01,000
the source code that you will want to start with so that you can

21
00:01:01,000 --> 00:01:02,600
follow along at home.

22
00:01:04,800 --> 00:01:06,100
I'll go ahead and bring this up.

23
00:01:06,600 --> 00:01:08,100
Let me get my emacs window.

24
00:01:08,600 --> 00:01:12,700
So if you take a look at where we left things on Friday, we had just

25
00:01:12,700 --> 00:01:15,700
finished getting our Baseline stuff working so that our

26
00:01:16,000 --> 00:01:18,000
It's are nicely lined up on the screen.

27
00:01:18,200 --> 00:01:21,600
You can kind of see that everything lines up very nicely along that

28
00:01:21,600 --> 00:01:22,200
Baseline.

29
00:01:22,200 --> 00:01:26,400
Like we would want it to typographically speaking but we do not have a

30
00:01:26,400 --> 00:01:27,700
bunch of other things.

31
00:01:27,700 --> 00:01:30,200
We might like to have working with our fonts.

32
00:01:30,400 --> 00:01:34,000
Namely our horizontal spacing is now just based on the bitmap we don't

33
00:01:34,000 --> 00:01:36,700
have any information about how letters should go together like this.

34
00:01:36,700 --> 00:01:40,200
See for example looks too far from the I compared to how the you is

35
00:01:40,200 --> 00:01:41,400
set up stuff like that.

36
00:01:41,400 --> 00:01:43,500
Like you'd want to be a little bit closer saying with this T.

37
00:01:43,500 --> 00:01:45,900
And this you for example, a lot of places where you

38
00:01:46,000 --> 00:01:48,500
I have two pieces extending right?

39
00:01:48,600 --> 00:01:51,100
It's setting them up the way that they should be based on the bitmap

40
00:01:51,100 --> 00:01:51,400
with.

41
00:01:51,400 --> 00:01:54,600
But really, the way typographers do it, is they, let things could have

42
00:01:54,600 --> 00:01:56,300
come into each other's space, right?

43
00:01:56,300 --> 00:01:59,900
They let them kind of interpenetrate a little when you have, when the

44
00:01:59,900 --> 00:02:01,700
two things don't line up, right?

45
00:02:01,800 --> 00:02:04,000
When you have a thing like this, where two things line up, then it's

46
00:02:04,000 --> 00:02:06,400
fine to, like, sort of line them up with a bitmap with.

47
00:02:06,500 --> 00:02:09,199
But when you have things where the, like furthest extent to the left

48
00:02:09,199 --> 00:02:11,200
of one character, and the further extend to the right of another

49
00:02:11,200 --> 00:02:14,400
character, don't line up, you typically want to sort of push them a

50
00:02:14,400 --> 00:02:15,900
little closer together, it just

51
00:02:16,000 --> 00:02:17,500
Looks and reads a little bit nicer.

52
00:02:18,100 --> 00:02:19,300
So we want to do that.

53
00:02:20,200 --> 00:02:21,600
We want to fix that, for sure.

54
00:02:22,000 --> 00:02:25,500
And then there's also a few other sort of leftover text metrics.

55
00:02:25,500 --> 00:02:28,500
We'd also like to have such as the line spacing, you can look and see

56
00:02:28,700 --> 00:02:29,400
our this p.

57
00:02:29,400 --> 00:02:30,500
And this L right.

58
00:02:30,500 --> 00:02:34,700
When you have a descender and an Ascender, you can kind of see how we

59
00:02:34,700 --> 00:02:37,900
don't leave the right amount of space, that's because all we did for

60
00:02:37,900 --> 00:02:41,200
this test routine was just arbitrarily pick some amount of pixels to

61
00:02:41,200 --> 00:02:45,600
advance to put the next font to put the next line in and what we'd

62
00:02:45,600 --> 00:02:45,900
really rather.

63
00:02:46,000 --> 00:02:48,900
Other do is read that information out of the pond itself, so that we

64
00:02:48,900 --> 00:02:52,200
know how much line spacing they're supposed to be and so that it works

65
00:02:52,200 --> 00:02:53,100
with any font.

66
00:02:56,500 --> 00:02:59,800
So we'd like to do all those things and so let's get started.

67
00:03:00,500 --> 00:03:01,200
On that.

68
00:03:02,700 --> 00:03:06,900
So first things first, let's take a look at that font routine.

69
00:03:06,900 --> 00:03:11,000
Let's take a look at how we were drawing that font, right?

70
00:03:11,000 --> 00:03:14,400
We have that debug text line and if you take a look at what happened

71
00:03:14,400 --> 00:03:16,100
in here, it was all very straightforward.

72
00:03:16,100 --> 00:03:18,800
We added some fun things in here like people wanted like being able to

73
00:03:18,800 --> 00:03:21,000
switch for the colors of the lines and stuff like that.

74
00:03:22,200 --> 00:03:24,900
But if you take a look at the actual meat of a code, this stuff is

75
00:03:24,900 --> 00:03:28,000
just for changing colors and scales and stuff by using embedded code

76
00:03:28,000 --> 00:03:30,100
and weird stuff like that really.

77
00:03:30,100 --> 00:03:33,700
The only part of this code that matters at all, is just this right

78
00:03:33,700 --> 00:03:34,500
here, right?

79
00:03:34,500 --> 00:03:37,900
It's just the, the code in this Loop in.

80
00:03:37,900 --> 00:03:41,200
Well, in this part of the loop, where we go ahead and say, find

81
00:03:41,200 --> 00:03:43,000
whatever the font is that fine.

82
00:03:43,000 --> 00:03:43,300
Whatever.

83
00:03:43,300 --> 00:03:46,300
The like, the character Cliff is that we're trying to draw.

84
00:03:47,100 --> 00:03:50,700
Go ahead and figure out how big it is and where it should be and draw

85
00:03:50,700 --> 00:03:51,200
it, right?

86
00:03:51,200 --> 00:03:51,700
That's that's

87
00:03:52,200 --> 00:03:57,100
That's the entirety of like what we actually have to do and we've

88
00:03:57,100 --> 00:04:00,700
already sort of mentioned, the fact that, you know, one thing that

89
00:04:00,700 --> 00:04:03,200
we'd like to do is get the line spacing.

90
00:04:03,200 --> 00:04:03,600
Be correct.

91
00:04:03,600 --> 00:04:08,100
The line spacing would just be replacing this ad hoc line here where

92
00:04:08,100 --> 00:04:11,800
we just got a random 1.2 times 80 like, you know, whatever that is,

93
00:04:11,800 --> 00:04:12,300
right?

94
00:04:12,300 --> 00:04:15,800
Get rid of that, and replace it with some actual real value that we

95
00:04:15,800 --> 00:04:17,000
know is the line spacing.

96
00:04:17,000 --> 00:04:18,700
So that's one thing that we would want to do

97
00:04:20,300 --> 00:04:21,300
And that's pretty easy.

98
00:04:21,300 --> 00:04:22,100
That's just one value.

99
00:04:22,100 --> 00:04:26,100
But the more complicated thing is we want this part right here where

100
00:04:26,100 --> 00:04:31,000
we actually have the the @x advance, right?

101
00:04:31,100 --> 00:04:34,500
This card in value where we advance the horizontal spacing.

102
00:04:34,500 --> 00:04:37,300
What we'd like to do is actually have something there that advances,

103
00:04:37,300 --> 00:04:38,400
the spacing differently.

104
00:04:38,700 --> 00:04:42,900
Depending on the pair of characters rather than just on one character.

105
00:04:45,300 --> 00:04:47,600
We talked about this before when I did introduction of fonts, it's

106
00:04:47,600 --> 00:04:48,300
called kerning.

107
00:04:48,700 --> 00:04:56,300
And what kerning is, is it setting different advancements depending on

108
00:04:56,300 --> 00:05:00,800
a pair of characters instead of just a constant advancement or an

109
00:05:00,800 --> 00:05:02,300
advancement per character, right?

110
00:05:02,300 --> 00:05:04,900
Because right now we're actually advancing a different amount per

111
00:05:04,900 --> 00:05:06,100
character, potentially, right?

112
00:05:06,100 --> 00:05:08,500
If a character is with is smaller we advance by less.

113
00:05:08,500 --> 00:05:12,900
So we're actually sort of doing a proportionally spaced font at this

114
00:05:12,900 --> 00:05:13,900
point, right?

115
00:05:13,900 --> 00:05:17,000
And in fact you could see this if I was to switch which font we were

116
00:05:17,000 --> 00:05:18,400
using and let me just go ahead and do that.

117
00:05:18,400 --> 00:05:18,500
Just

118
00:05:18,700 --> 00:05:23,000
To underscore what the difference between a proportional spacing and a

119
00:05:23,000 --> 00:05:27,100
kerned spacing are because they're actually not necessarily the same

120
00:05:27,100 --> 00:05:27,400
thing.

121
00:05:27,400 --> 00:05:30,600
I mean, the terminology is a little fuzzy there so it's unclear what

122
00:05:30,600 --> 00:05:32,600
you're really referring to, but I just want to underscore that there's

123
00:05:32,600 --> 00:05:34,800
two different ways you could think of it, right?

124
00:05:35,400 --> 00:05:39,100
So let's say we're here in the asset processor and we switch back to

125
00:05:39,100 --> 00:05:39,700
Ariel.

126
00:05:39,800 --> 00:05:43,600
So instead of using courrier, new, which is a less, it's sort of more

127
00:05:43,600 --> 00:05:44,300
of a fixed width.

128
00:05:44,300 --> 00:05:45,900
Supposed to be more of a fixed-width font.

129
00:05:46,100 --> 00:05:48,000
Let's say we go ahead and do

130
00:05:49,500 --> 00:05:50,000
That.

131
00:05:52,800 --> 00:05:56,300
That sort of proportional font as the font that we're going to have in

132
00:05:56,300 --> 00:05:57,300
the game, right?

133
00:05:57,400 --> 00:05:59,800
So now when we run, we're going to have Ariel in

134
00:06:00,000 --> 00:06:00,900
At okay.

135
00:06:00,900 --> 00:06:02,900
And what you can see very clearly.

136
00:06:02,900 --> 00:06:07,800
When you look at this is we are, we are totally already supporting a

137
00:06:07,800 --> 00:06:12,000
proportional font because the distance that we advance for every

138
00:06:12,000 --> 00:06:14,100
character is drastically, different, the distance.

139
00:06:14,100 --> 00:06:17,400
The spacing on this T is much different than the spacing on this.

140
00:06:17,400 --> 00:06:20,500
You write this U advances much wider than this.

141
00:06:20,500 --> 00:06:21,700
T Advance is much narrower.

142
00:06:21,700 --> 00:06:26,400
Right, so we are already supporting proportionally spaced fonts.

143
00:06:26,400 --> 00:06:29,700
What we're not supporting is kerning and what

144
00:06:30,000 --> 00:06:35,700
Learning is is moving a sort of a font designer tweaked amount because

145
00:06:35,700 --> 00:06:37,400
like the classic case right here?

146
00:06:37,400 --> 00:06:40,500
There's two is a very obvious one, right?

147
00:06:40,800 --> 00:06:43,900
You can see right in the space of this T, what a font designer would

148
00:06:43,900 --> 00:06:47,100
do is it would it would reduce these two gaps here dramatically,

149
00:06:47,100 --> 00:06:47,700
right?

150
00:06:47,700 --> 00:06:51,000
So even though right now it's perfectly flush like this.

151
00:06:51,000 --> 00:06:53,400
Oh the first character of this 0 starts right?

152
00:06:53,400 --> 00:06:55,500
Where this one left sleeves off and the first character this T

153
00:06:55,500 --> 00:06:56,400
starting the first pixel.

154
00:06:56,400 --> 00:06:59,100
This T starts right where this Laster, the P leaves off.

155
00:06:59,100 --> 00:06:59,900
So we're

156
00:07:00,000 --> 00:07:03,800
Obeying a proportional fault rule there but we're not obeying is the

157
00:07:03,800 --> 00:07:07,000
fact that when there are different shapes of letters sometimes you

158
00:07:07,000 --> 00:07:10,600
want the spacing to be more or less because it looks better.

159
00:07:10,600 --> 00:07:12,900
It has nothing to do with how big the character is.

160
00:07:13,000 --> 00:07:14,200
That's not what it's about.

161
00:07:14,200 --> 00:07:17,600
It's about how the different pieces of those character glyphs line up

162
00:07:17,600 --> 00:07:18,200
with each other.

163
00:07:18,200 --> 00:07:20,400
And so, it's about the pair of characters.

164
00:07:20,600 --> 00:07:24,300
If this right here was another uppercase t, we wouldn't want them to

165
00:07:24,300 --> 00:07:25,300
be closer together.

166
00:07:25,500 --> 00:07:28,500
So it's about the fact that it's a lowercase p and an uppercase t and

167
00:07:28,500 --> 00:07:29,800
it's that pairwise.

168
00:07:29,900 --> 00:07:33,100
Size spacing, that's the important part, okay.

169
00:07:39,900 --> 00:07:41,200
So, that's what we're talking about.

170
00:07:41,700 --> 00:07:43,100
So, how do we do that, right?

171
00:07:43,700 --> 00:07:47,000
Well, like I said, when we were talking about kerning originally, it's

172
00:07:47,000 --> 00:07:48,500
really not a big deal.

173
00:07:48,500 --> 00:07:51,300
People were asking whether I was going to support proportional fonts

174
00:07:51,300 --> 00:07:54,900
and all this sort of thing, I get this impression that some people

175
00:07:54,900 --> 00:07:55,900
think that's a big deal.

176
00:07:55,900 --> 00:07:56,800
It's not a big deal.

177
00:07:56,800 --> 00:07:59,700
As you already saw getting a proportional spaced font is Trivial.

178
00:07:59,700 --> 00:08:03,200
It just means instead of incrementing edx by a constant value.

179
00:08:03,200 --> 00:08:07,400
Instead you at increment it by a value that changes per bitmap that we

180
00:08:07,400 --> 00:08:07,900
did.

181
00:08:08,000 --> 00:08:09,100
So we're already got.

182
00:08:09,300 --> 00:08:10,300
It was trivial, right?

183
00:08:10,300 --> 00:08:13,900
It is a is a literally one line change in the code, right?

184
00:08:13,900 --> 00:08:17,000
You're just adding in instead of making this a constant somewhere,

185
00:08:17,100 --> 00:08:19,200
you're just making it based on the, with the character case.

186
00:08:19,200 --> 00:08:20,800
Very, very, very straightforward.

187
00:08:20,800 --> 00:08:23,600
That's the only difference between a fixed-width font and a

188
00:08:23,600 --> 00:08:24,600
proportional font.

189
00:08:24,600 --> 00:08:25,800
That's all right.

190
00:08:26,500 --> 00:08:30,700
Now, in order to take that up to kerning, which is one level above

191
00:08:31,100 --> 00:08:33,299
again, very, very straightforward.

192
00:08:33,299 --> 00:08:35,900
We are not going to change this routine pretty much at all.

193
00:08:36,600 --> 00:08:39,000
We're going to do exactly the same thing that we did in doing the only

194
00:08:39,200 --> 00:08:39,500
Difference.

195
00:08:39,500 --> 00:08:43,900
Is that amount that we advance now has to be based on both the current

196
00:08:43,900 --> 00:08:46,300
character and the previous character?

197
00:08:46,600 --> 00:08:47,200
Right?

198
00:08:47,300 --> 00:08:50,900
So what we want to do here is we want to store, you know, we've got

199
00:08:50,900 --> 00:08:51,700
these code points.

200
00:08:51,700 --> 00:08:52,200
Right.

201
00:08:52,600 --> 00:08:56,600
What we want to do is we want to store the previous code point, right?

202
00:08:56,600 --> 00:08:59,900
We want to have here and I notion of what the previous

203
00:09:00,000 --> 00:09:03,700
Code point was, Will initialize it to zero saying no code point.

204
00:09:05,100 --> 00:09:08,500
And then we coming here every time we output, one of these characters,

205
00:09:08,900 --> 00:09:12,600
what we will do is we will save whatever that code point was.

206
00:09:12,800 --> 00:09:16,900
We will remember, right, whatever that code Point actually was.

207
00:09:17,100 --> 00:09:19,400
Okay, so we'll keep that previous code point.

208
00:09:19,400 --> 00:09:22,900
So then, what we would know is, we know, both the current code point

209
00:09:23,000 --> 00:09:24,700
and the previous code point, right?

210
00:09:24,800 --> 00:09:28,400
And we could even do this a little bit more sort of opaquely here.

211
00:09:28,400 --> 00:09:29,400
We could do something.

212
00:09:30,000 --> 00:09:36,800
Where we want to, you know, sort of formalize, this notion of a code

213
00:09:36,800 --> 00:09:39,000
point, a little bit, just just to make things easier on ourselves

214
00:09:39,000 --> 00:09:42,800
later if we want to support International languages and things like

215
00:09:42,800 --> 00:09:43,500
this, right?

216
00:09:43,800 --> 00:09:46,100
So, I'm just going to go ahead and pull that out and called out the

217
00:09:46,100 --> 00:09:46,900
code Point here.

218
00:09:47,800 --> 00:09:48,700
Really, very simple.

219
00:09:48,800 --> 00:09:51,300
So, if I pull that out there, so now we've got the code point and

220
00:09:51,300 --> 00:09:53,000
we've got the previous code Point.

221
00:09:54,800 --> 00:09:57,000
Like, so let's go ahead and compile this right.

222
00:10:00,700 --> 00:10:01,800
Right, there we go.

223
00:10:03,100 --> 00:10:04,300
It's code point.

224
00:10:04,900 --> 00:10:06,500
I thought I had that hero.

225
00:10:06,500 --> 00:10:09,300
Just my capitalization there.

226
00:10:09,300 --> 00:10:09,800
There we go.

227
00:10:11,400 --> 00:10:14,300
So if I do it like that, now you can see, nothing has changed, right?

228
00:10:14,300 --> 00:10:16,800
Same exact routine nothing's different.

229
00:10:16,800 --> 00:10:19,900
The only difference now is I've set myself up for actually getting

230
00:10:19,900 --> 00:10:21,500
what I need, which is that?

231
00:10:21,500 --> 00:10:23,200
This thing right here, right?

232
00:10:23,500 --> 00:10:27,200
Which is the kerning amount is going to be something that we look up

233
00:10:27,200 --> 00:10:28,000
now, right?

234
00:10:28,000 --> 00:10:29,200
It's going to be something different.

235
00:10:29,200 --> 00:10:30,800
We're not going to save this anymore.

236
00:10:31,300 --> 00:10:32,500
This care dim thing.

237
00:10:32,700 --> 00:10:34,200
Is not going to be used, right?

238
00:10:34,200 --> 00:10:37,500
We're going to get rid of that and what we're going to do instead and

239
00:10:37,500 --> 00:10:39,600
you know, we could even do something a little bit fancier.

240
00:10:39,600 --> 00:10:43,300
If we wanted to hear, we could do something like this where we say,

241
00:10:44,200 --> 00:10:46,200
Okay are kerning right?

242
00:10:47,700 --> 00:10:51,400
Or are our Advanced x equals something.

243
00:10:52,500 --> 00:10:55,400
Well, which we don't know what it is yet and we'll do our Advanced X

244
00:10:55,400 --> 00:10:55,700
there.

245
00:10:56,000 --> 00:11:00,200
And that way, if we want to, we could always go back to to setting it

246
00:11:00,200 --> 00:11:01,500
up to use proportional.

247
00:11:01,500 --> 00:11:03,000
So you can switch between the two modes.

248
00:11:03,000 --> 00:11:05,300
Just so you can see the difference between them, which might be a

249
00:11:05,300 --> 00:11:06,000
little bit interesting.

250
00:11:06,000 --> 00:11:07,300
I think, right?

251
00:11:07,700 --> 00:11:09,800
All right, so we've set ourselves up like this, right?

252
00:11:09,800 --> 00:11:12,500
And again, if I just do this, we're back to the same, right?

253
00:11:12,500 --> 00:11:13,500
I haven't changed routine at all.

254
00:11:13,500 --> 00:11:15,500
I'm just some kind of, like, fussing with it.

255
00:11:15,500 --> 00:11:17,800
I'm just like moving it into a slightly different position than it was

256
00:11:17,800 --> 00:11:18,300
in originally.

257
00:11:18,300 --> 00:11:18,800
Right.

258
00:11:19,400 --> 00:11:22,100
So now if I want to I can I can comment that out and say we're not

259
00:11:22,100 --> 00:11:22,100
going.

260
00:11:22,300 --> 00:11:22,900
Advanced sex.

261
00:11:22,900 --> 00:11:23,500
That way anymore.

262
00:11:23,500 --> 00:11:27,100
We're going to do instead is set Advanced effects based on some kind

263
00:11:27,100 --> 00:11:28,400
of kerning, right?

264
00:11:33,200 --> 00:11:38,300
What I want to do now is I want to be able to ask for the kerning.

265
00:11:38,300 --> 00:11:43,600
The proper amount of kerning for sort of these two, these two code

266
00:11:43,600 --> 00:11:44,500
points that I have.

267
00:11:44,600 --> 00:11:50,800
I want to say, like, get, you know, horizontal advance for pair or

268
00:11:50,800 --> 00:11:51,800
something, right?

269
00:11:51,900 --> 00:11:55,700
And I want to say, I want to know what the horizontal Advanced is

270
00:11:55,900 --> 00:11:59,600
between the code point that I'm on, right?

271
00:11:59,600 --> 00:11:59,800
And the

272
00:12:00,000 --> 00:12:01,500
Point that came before it.

273
00:12:03,400 --> 00:12:04,600
Makes sense, right?

274
00:12:04,900 --> 00:12:09,700
And furthermore, I think what I'd like to do, I mean, you know, now

275
00:12:09,700 --> 00:12:12,700
that I think about this, I kind of want to phrase this in the reverse

276
00:12:12,700 --> 00:12:15,500
way I think, because when we start out, you wouldn't want to advance

277
00:12:15,500 --> 00:12:18,000
at all which we could handle by just saying that.

278
00:12:18,000 --> 00:12:21,100
Well, when the code Point, whatever, the code point zero is we'll just

279
00:12:21,100 --> 00:12:22,800
have no advancement or something like that.

280
00:12:23,600 --> 00:12:26,300
But the interesting thing is that when I actually do this, the

281
00:12:26,300 --> 00:12:29,800
advancement I would want to pre Advanced, right?

282
00:12:29,900 --> 00:12:33,000
I'd want to pre Advanced it like that which makes it a little

283
00:12:33,200 --> 00:12:35,500
Order to keep the older method here.

284
00:12:35,800 --> 00:12:36,400
You know what I mean?

285
00:12:36,400 --> 00:12:39,700
Because I want Advanced between the previous and the current like so.

286
00:12:40,300 --> 00:12:42,000
So, yeah.

287
00:12:48,100 --> 00:12:49,900
Hard to say right?

288
00:12:50,000 --> 00:12:54,700
What I could do instead, if I wanted to is I could do something where

289
00:12:54,700 --> 00:12:57,700
I look at the next code point, right?

290
00:12:57,900 --> 00:13:01,200
And then do that, but if I do that, then it becomes harder for people

291
00:13:01,200 --> 00:13:03,700
who want to do this kind of nonsense where you parse things out of the

292
00:13:03,700 --> 00:13:04,500
string and use them.

293
00:13:04,500 --> 00:13:07,500
So I don't know, I guess maybe I just give this up and say, you know

294
00:13:07,500 --> 00:13:08,500
what's not going to happen?

295
00:13:08,500 --> 00:13:09,500
Sorry my friend.

296
00:13:10,100 --> 00:13:13,900
And what we will actually do is always, do are advancing previous that

297
00:13:13,900 --> 00:13:15,600
you know at the head end right?

298
00:13:15,600 --> 00:13:16,200
Basically

299
00:13:17,200 --> 00:13:21,000
And so that seems like a little bit better to me.

300
00:13:21,200 --> 00:13:23,600
That seems like a little bit more what I want.

301
00:13:24,200 --> 00:13:27,500
And so I'm going to do it like that and then when we compile, you

302
00:13:27,500 --> 00:13:29,500
know, all of our code will just work at this point.

303
00:13:29,500 --> 00:13:32,800
The only thing is we just don't know what that actual value is going

304
00:13:32,800 --> 00:13:33,300
to be.

305
00:13:33,500 --> 00:13:36,900
Now obviously, in order to get the horizontal Advanced, we going to

306
00:13:36,900 --> 00:13:38,000
need some different things.

307
00:13:38,000 --> 00:13:40,500
First of all, I'm going to have to scale by whatever it is.

308
00:13:40,500 --> 00:13:41,900
I'm scaling everything else by, right?

309
00:13:41,900 --> 00:13:44,900
Because we're all all of the fonts that are stored in some space,

310
00:13:44,900 --> 00:13:47,000
like, whatever the dimensions and the font are and all that.

311
00:13:47,100 --> 00:13:48,200
Stuff in pixels, whatever.

312
00:13:48,200 --> 00:13:51,600
We're scaling that by however much we want to scale the font, right?

313
00:13:52,500 --> 00:13:55,100
So we're going to store our kerning in that same space obviously that

314
00:13:55,100 --> 00:13:55,900
just makes sense.

315
00:13:56,400 --> 00:13:59,100
So in the in the asset file, all the current information should be

316
00:13:59,100 --> 00:14:02,300
stored in the same way as any other number in the van system.

317
00:14:02,300 --> 00:14:04,200
That's just, you know, just the same way to do it.

318
00:14:05,000 --> 00:14:08,000
So when we do this we're going to need one other piece of information

319
00:14:08,000 --> 00:14:11,400
which is which actual font we're talking about.

320
00:14:11,400 --> 00:14:15,100
And this is sort of gets into the final piece which is sort of, like I

321
00:14:15,100 --> 00:14:17,000
said, sort of it is moving

322
00:14:17,200 --> 00:14:21,300
Asset system up a notch, like adding the notion of having these

323
00:14:21,300 --> 00:14:26,400
different fonts so that we can more quickly access this the data that

324
00:14:26,400 --> 00:14:28,100
we need to access in them, right?

325
00:14:28,500 --> 00:14:32,100
So what I would like to do is I'd like to have some way of having

326
00:14:32,500 --> 00:14:34,900
because you'll notice I have this thing here where it says this is too

327
00:14:34,900 --> 00:14:38,100
slow for text at the moment I'd like to have some way of sort of

328
00:14:38,100 --> 00:14:41,500
having a centralized piece of font information because I'm going to

329
00:14:41,500 --> 00:14:43,000
have to have this kerning information.

330
00:14:43,000 --> 00:14:46,200
We know that I would like to have something faster for looking up the

331
00:14:46,200 --> 00:14:47,000
glyphs than going.

332
00:14:47,100 --> 00:14:48,600
Going through the whole matching system.

333
00:14:48,600 --> 00:14:51,600
Every time we want to render a character, that seems like a bad idea

334
00:14:52,800 --> 00:14:56,300
and furthermore, I'd like to have some place to store that

335
00:14:56,300 --> 00:14:59,500
information, like the line height which we just don't have the

336
00:15:00,000 --> 00:15:00,700
Right?

337
00:15:01,100 --> 00:15:04,600
And so those are a bunch of things that that's what I would like to

338
00:15:04,600 --> 00:15:05,300
start having.

339
00:15:05,500 --> 00:15:07,800
So what I think I really want to do, right?

340
00:15:07,800 --> 00:15:11,800
It's I want to be able to get a font and actual concept of a font back

341
00:15:11,800 --> 00:15:13,800
from my asset system, right.

342
00:15:13,800 --> 00:15:18,700
I want to have something where I can do you know asset or you know,

343
00:15:18,700 --> 00:15:20,400
font something like this.

344
00:15:20,900 --> 00:15:25,000
And it's a first-class citizen out here in, you know, in the the whole

345
00:15:25,000 --> 00:15:25,800
asset thing.

346
00:15:30,400 --> 00:15:31,300
We're in here.

347
00:15:31,800 --> 00:15:33,900
We just have these and they're not going to be demand loaded.

348
00:15:33,900 --> 00:15:36,900
The bitmaps will be demand loaded but we can actually just have them

349
00:15:37,700 --> 00:15:42,000
you know as a separate adjunct thing that gets loaded as part of the

350
00:15:42,000 --> 00:15:44,000
giant block load, right?

351
00:15:45,200 --> 00:15:48,500
We could totally do it that way and there's really nothing

352
00:15:48,600 --> 00:15:53,900
particularly stopping us from doing that as far as like and think of

353
00:15:54,400 --> 00:15:57,200
and so what I'd like to do, yeah, like I said, it's just go ahead and

354
00:15:57,200 --> 00:15:58,400
start expanding that out.

355
00:15:58,400 --> 00:15:59,900
So in here, you know we would have

356
00:16:00,000 --> 00:16:03,300
In like, in addition to the asset counts in the asset types, we would

357
00:16:03,300 --> 00:16:04,300
also have something here.

358
00:16:04,300 --> 00:16:08,000
That would just be you know our font right?

359
00:16:08,000 --> 00:16:08,800
And you know what?

360
00:16:08,800 --> 00:16:11,700
Now that I think about it, we could actually use the acid system to do

361
00:16:11,700 --> 00:16:16,000
matching where we just put in what we've kind of the characteristics

362
00:16:16,000 --> 00:16:18,100
of a font that we want and out would come.

363
00:16:18,400 --> 00:16:20,600
And so maybe we even want to go that far.

364
00:16:20,600 --> 00:16:23,400
Like maybe we want to to make that happen as well.

365
00:16:23,400 --> 00:16:28,300
I don't know if that makes a lot of sense, it may it may not but it's

366
00:16:28,300 --> 00:16:29,500
something that we can consider

367
00:16:29,900 --> 00:16:33,700
And if we did go that route, then things would be a little bit weird

368
00:16:33,800 --> 00:16:36,600
because it does mean that we would have stuff like our fonts would

369
00:16:36,600 --> 00:16:40,600
have to actually be tracked as part of the as part of the loading and

370
00:16:40,600 --> 00:16:43,700
all that sort of stuff which, you know, I just don't know how

371
00:16:43,700 --> 00:16:44,800
important that is.

372
00:16:47,500 --> 00:16:48,300
I don't know.

373
00:16:48,300 --> 00:16:50,200
I do not know what I think about that.

374
00:16:54,500 --> 00:16:55,400
I'm okay with it.

375
00:16:55,500 --> 00:16:57,700
Maybe let's just go down that route and we'll see what happens.

376
00:16:58,300 --> 00:17:01,300
And that way fonts can be as big as they want and they won't get

377
00:17:01,300 --> 00:17:05,300
loaded unless they're actually being used seems okay.

378
00:17:05,700 --> 00:17:09,300
The downside of it is it means that that any code that needs to work

379
00:17:09,300 --> 00:17:11,900
with the font can't necessarily.

380
00:17:12,000 --> 00:17:12,300
Yeah.

381
00:17:12,300 --> 00:17:12,900
See this is the part.

382
00:17:12,900 --> 00:17:15,599
I don't like any code that's going to do operations on the front.

383
00:17:15,599 --> 00:17:18,599
Like seeing like laying out where the characters have to go, can't

384
00:17:18,599 --> 00:17:21,900
actually run until the font is actually paged in, right?

385
00:17:24,500 --> 00:17:26,000
I don't know how I feel about that.

386
00:17:26,400 --> 00:17:29,100
On the other hand, if we have lots of different fonts, if we have

387
00:17:29,100 --> 00:17:31,500
different fonts for different languages or stuff like that,

388
00:17:33,400 --> 00:17:35,400
could get a little hairy right?

389
00:17:36,900 --> 00:17:39,800
Having all of those things always loaded, like always having to load

390
00:17:39,800 --> 00:17:43,600
the kerning tables for every language font does seem a little bit

391
00:17:43,600 --> 00:17:44,100
annoying.

392
00:17:45,900 --> 00:17:46,900
It's Tricky, right?

393
00:17:47,000 --> 00:17:48,600
I mean it's a little bit tricky.

394
00:17:48,700 --> 00:17:49,500
I feel like

395
00:17:55,400 --> 00:17:59,200
I'm gonna go for it, I'm going for it, you know, it's sometimes you

396
00:17:59,200 --> 00:17:59,900
can't make a decision.

397
00:18:00,000 --> 00:18:02,500
Sometimes there's no way to make an informed decision so you just go

398
00:18:02,500 --> 00:18:03,000
for it.

399
00:18:03,500 --> 00:18:05,600
So I'm going to say that we have some kind of a loaded font thing

400
00:18:05,600 --> 00:18:05,800
here.

401
00:18:05,800 --> 00:18:09,300
I'm just going to say we've got that and then what we do is we say

402
00:18:09,300 --> 00:18:13,000
okay, you know, we've got this loaded font, we want to get our font

403
00:18:13,200 --> 00:18:15,900
and that's the only thing that gets type matched, right?

404
00:18:15,900 --> 00:18:20,300
That's the only thing that we actually do sort of have the the match

405
00:18:20,300 --> 00:18:21,700
Vector for, right?

406
00:18:22,800 --> 00:18:26,800
And so, what we do here is we say okay we want to go ahead and get our

407
00:18:26,800 --> 00:18:28,100
font back so we'd have.

408
00:18:29,300 --> 00:18:29,500
Yeah.

409
00:18:29,500 --> 00:18:33,800
In fact this this stuff up here would now actually be exactly for for

410
00:18:33,800 --> 00:18:34,300
that.

411
00:18:34,400 --> 00:18:36,200
So the will have the match factor in the weight Vector.

412
00:18:36,400 --> 00:18:39,100
We'd say go ahead and get us the best font.

413
00:18:40,700 --> 00:18:44,400
So I guess we'd say something like you know font ID.

414
00:18:45,300 --> 00:18:47,000
Oh okay.

415
00:18:47,100 --> 00:18:48,100
I see how this is going.

416
00:18:48,300 --> 00:18:49,500
This is might not be so bad.

417
00:18:49,700 --> 00:18:54,400
Guess that get Matt best match font right?

418
00:18:54,900 --> 00:18:59,300
Put it like all this bitmap from soda pop from right we passed that

419
00:18:59,300 --> 00:19:00,300
asset system.

420
00:19:00,900 --> 00:19:05,000
We say that we want an asset fonts which is exactly what we do want,

421
00:19:05,000 --> 00:19:05,800
in fact,

422
00:19:11,800 --> 00:19:15,100
And then we pass our vectors and right now we don't really have

423
00:19:15,100 --> 00:19:16,200
anything to pick from.

424
00:19:16,300 --> 00:19:16,600
I suppose.

425
00:19:16,600 --> 00:19:20,200
We'll have like a debug thought sort of concept or I don't know

426
00:19:20,200 --> 00:19:20,900
something like this.

427
00:19:22,200 --> 00:19:23,000
Hard to say.

428
00:19:23,900 --> 00:19:28,200
So anyway, we do our guests, get our best match font or and what not.

429
00:19:28,900 --> 00:19:33,000
And then down in here, we would have we would get rid of this this

430
00:19:33,000 --> 00:19:33,400
notion.

431
00:19:33,400 --> 00:19:36,900
So it would just be our code point would be something relatively

432
00:19:37,200 --> 00:19:41,200
direct right and we would assume that we could actually get our font

433
00:19:41,200 --> 00:19:41,800
out as well.

434
00:19:42,300 --> 00:19:46,500
So what we do here is we'd say something like get font, right?

435
00:19:47,000 --> 00:19:50,100
Because we have, you know, these sort of query routines where you do

436
00:19:50,100 --> 00:19:51,700
get sound, get so on right.

437
00:19:51,800 --> 00:19:51,900
So,

438
00:19:52,100 --> 00:19:54,700
Have a loaded fonts and we'd call get font.

439
00:19:55,100 --> 00:19:57,300
We would pass the assets for that.

440
00:19:58,400 --> 00:19:59,100
Look, so

441
00:20:01,200 --> 00:20:04,900
And we'd also need our generation ID for that guy as well.

442
00:20:05,000 --> 00:20:07,900
So I think that just be our render groups generation ID, right.

443
00:20:08,100 --> 00:20:13,200
Like so, so when we get the font we would pass it For Thought ID.

444
00:20:13,400 --> 00:20:16,700
That would either get us back a font or wouldn't depending on whether

445
00:20:16,700 --> 00:20:17,600
it's loaded.

446
00:20:17,800 --> 00:20:21,500
So assuming that it actually is loaded, if the font is loaded then we

447
00:20:21,500 --> 00:20:24,000
can proceed with doing what we would like to do.

448
00:20:24,600 --> 00:20:27,600
If not, then obviously we can't.

449
00:20:28,100 --> 00:20:30,700
This feels like this should be

450
00:20:30,900 --> 00:20:32,500
Yes, that's all good.

451
00:20:34,900 --> 00:20:36,700
So I thought that looks fine to me.

452
00:20:37,500 --> 00:20:38,600
I think I can live with that.

453
00:20:38,700 --> 00:20:40,000
I think I'm okay with that.

454
00:20:40,300 --> 00:20:43,500
And so again, what I'm going to do here is just say what I want this

455
00:20:43,500 --> 00:20:46,800
thing to do, I'm just going to say I'm going to pass you a font and

456
00:20:46,800 --> 00:20:49,000
some code points, you're going to tell me what the horizontal

457
00:20:49,000 --> 00:20:49,600
advancement is.

458
00:20:49,600 --> 00:20:51,700
I'm just going to assume that we can make that happen.

459
00:20:52,500 --> 00:20:57,500
We are you know, sort of we are bright and capable programmers who

460
00:20:57,500 --> 00:20:58,600
will make that occur.

461
00:21:00,500 --> 00:21:04,500
And so we've got a code Point here, we were previously putting in a

462
00:21:04,500 --> 00:21:06,300
match vector and having get bitmap info.

463
00:21:06,300 --> 00:21:07,200
Pull that out.

464
00:21:07,300 --> 00:21:11,300
What I'd rather do is say that we've got that bitmap ID now is going

465
00:21:11,300 --> 00:21:16,500
to come from a direct look up inside the font so we do get bitmap for

466
00:21:16,500 --> 00:21:18,200
glyph right?

467
00:21:18,400 --> 00:21:19,200
And we would pass it.

468
00:21:19,200 --> 00:21:23,100
The code Point, write something like this.

469
00:21:27,900 --> 00:21:29,300
There's some extra stuff in there.

470
00:21:31,500 --> 00:21:35,000
That I would like to sort of look at a little bit later as well, but

471
00:21:35,100 --> 00:21:38,800
point being so, what I'd like to do is get that bit back there and

472
00:21:38,800 --> 00:21:42,300
then assuming that we get the back that bitmap ID from from the thing,

473
00:21:42,300 --> 00:21:45,800
we can then get the info and continue, right?

474
00:21:46,600 --> 00:21:49,200
So we've kind of just stubbed out we've, you know, again, I'm

475
00:21:49,200 --> 00:21:50,900
following the right, the usage code.

476
00:21:51,100 --> 00:21:56,400
First methodology here, I'm just trying to make it so that everything

477
00:21:56,400 --> 00:21:57,600
makes reasonable sense.

478
00:21:58,600 --> 00:22:00,700
Don't actually remember where we were defining the

479
00:22:01,000 --> 00:22:03,200
I d like sound ID and so on.

480
00:22:03,200 --> 00:22:07,200
I have no idea where those are actually defined to be honest with you.

481
00:22:08,200 --> 00:22:11,300
This is the problem of maintaining, well, working in three code bases

482
00:22:11,300 --> 00:22:17,300
at once, I guess I do our game at Molly, the witness and this one, I

483
00:22:17,300 --> 00:22:20,700
start to forget, where everything is anyway.

484
00:22:21,200 --> 00:22:26,000
So I'd like to do struck sound ID and I remember how to make this

485
00:22:26,000 --> 00:22:29,900
actually find those as a group, doesn't it some kind of weird thing

486
00:22:29,900 --> 00:22:30,700
where it

487
00:22:30,800 --> 00:22:34,100
consider it considers them multiple things.

488
00:22:34,100 --> 00:22:34,600
Oh, you know what?

489
00:22:34,600 --> 00:22:37,800
I can probably just backslash the space is that work?

490
00:22:38,000 --> 00:22:38,700
Can't do this.

491
00:22:39,400 --> 00:22:40,200
There we go.

492
00:22:41,700 --> 00:22:45,700
So if I want to get my struct sound ID,

493
00:22:48,300 --> 00:22:50,400
Here they are, handmade file formats.

494
00:22:50,800 --> 00:22:53,500
So what I'd like is I'd like to sound idea, I'd like to go to be a

495
00:22:53,500 --> 00:22:54,900
font idea, right?

496
00:22:54,900 --> 00:22:59,000
But a similar, that also can be retrieved, right?

497
00:22:59,200 --> 00:23:01,900
And, so now, assuming that I do this, I can get all of this other

498
00:23:01,900 --> 00:23:04,300
stuff that I want starting to be stubbed out.

499
00:23:04,600 --> 00:23:08,700
And so, in handmade asset .h, I can start to sort of make these actual

500
00:23:08,700 --> 00:23:09,200
routines.

501
00:23:09,200 --> 00:23:12,200
They should be relatively straightforward, right?

502
00:23:12,800 --> 00:23:16,200
So, if I'm calling get sound, for example, I should be able to call

503
00:23:16,200 --> 00:23:16,700
instead.

504
00:23:17,500 --> 00:23:19,100
The same thing on a font right?

505
00:23:19,100 --> 00:23:22,700
I should be able to say get font pass it a font ID and the generation

506
00:23:22,700 --> 00:23:26,300
ID and then when I get that asset back, I'm just going to only look at

507
00:23:26,300 --> 00:23:30,400
the font part of it, instead of the sound part of it.

508
00:23:30,400 --> 00:23:34,000
And that's really all there is to it right then.

509
00:23:34,000 --> 00:23:37,000
Inside that loaded, font will just assume are all the things that we

510
00:23:37,000 --> 00:23:39,800
actually want which we're going to go over figuring out.

511
00:23:39,800 --> 00:23:41,100
What those are in a second here.

512
00:23:43,300 --> 00:23:46,200
And they're just going to be based on these routines now while I'm at

513
00:23:46,200 --> 00:23:48,400
it because I'm being greedy I might as well.

514
00:23:48,700 --> 00:23:53,200
Write also say that we can go ahead and get that line advancement as

515
00:23:53,200 --> 00:23:54,200
well, right?

516
00:23:54,300 --> 00:23:57,700
Get the thought comes back, okay, I should be able to do something

517
00:23:57,700 --> 00:23:58,700
where I just say.

518
00:23:58,700 --> 00:23:59,300
Okay,

519
00:24:00,000 --> 00:24:01,200
What's the line, Advanced?

520
00:24:01,300 --> 00:24:01,900
Right?

521
00:24:02,100 --> 00:24:09,500
So I just say get line advance for this font and as long as I multiply

522
00:24:09,500 --> 00:24:10,900
it by the font scale, there we go.

523
00:24:10,900 --> 00:24:17,500
Now font scale Cara scale that stuff looks about right.

524
00:24:18,000 --> 00:24:23,600
So I'm satisfied that I think so now if we compile this you can see

525
00:24:23,600 --> 00:24:27,900
we've essentially got four different sort of things we want the font

526
00:24:27,900 --> 00:24:28,900
to be able to answer.

527
00:24:28,900 --> 00:24:29,900
So I'm going to go ahead

528
00:24:30,000 --> 00:24:34,700
Ed and sort of stub, those out here and start to see what I actually

529
00:24:34,700 --> 00:24:35,200
need.

530
00:24:35,200 --> 00:24:39,600
What will I need in terms of data to answer these questions, right?

531
00:24:39,600 --> 00:24:41,800
What if I'm, if I'm going to answer these questions for the

532
00:24:41,800 --> 00:24:45,500
application, that's what I what I want to see, right?

533
00:24:45,900 --> 00:24:47,700
And again, this is just following that, right?

534
00:24:47,700 --> 00:24:50,500
The use of church first, push down kind of measurement, methodology,

535
00:24:50,800 --> 00:24:55,100
kind of a top-down methodology that I'm taking here because I know

536
00:24:55,100 --> 00:24:56,000
what I want.

537
00:24:56,100 --> 00:24:58,800
I don't necessarily know what I need to do to implement it.

538
00:24:58,800 --> 00:24:59,800
So I'm coming from the

539
00:25:00,000 --> 00:25:03,200
I know, and going towards the thing, I don't know, which is always the

540
00:25:03,200 --> 00:25:04,400
best way to work.

541
00:25:06,500 --> 00:25:10,000
If you're, if you're relatively certain that your code on one side is

542
00:25:10,000 --> 00:25:10,500
correct.

543
00:25:10,500 --> 00:25:13,600
It's pretty easy to kind of just push downward from there, right?

544
00:25:14,400 --> 00:25:17,400
So, if I come through here and start implementing these guys, so I can

545
00:25:17,400 --> 00:25:20,000
start to see what they're going to look like, right.

546
00:25:21,000 --> 00:25:21,600
Like so.

547
00:25:25,200 --> 00:25:25,800
Right.

548
00:25:29,300 --> 00:25:31,600
and so assuming that these take loaded fonts,

549
00:25:34,900 --> 00:25:35,900
So someone's already done.

550
00:25:35,900 --> 00:25:36,700
The lookup.

551
00:25:37,600 --> 00:25:38,100
Excuse me.

552
00:25:40,200 --> 00:25:41,900
Oh, this guy is a little bit different, isn't he?

553
00:25:42,300 --> 00:25:44,700
So this guy is going to be slightly different, so I'm going to move

554
00:25:44,700 --> 00:25:47,300
that guy potentially up into a different point.

555
00:25:47,900 --> 00:25:50,000
But anyway, these guys, we know

556
00:25:51,800 --> 00:25:55,000
Exactly how what they're taking, and what they're going to return

557
00:25:55,000 --> 00:25:55,300
here.

558
00:25:55,700 --> 00:25:58,200
So, for the moment, I'll just go ahead and say, oh, yeah, the

559
00:25:58,200 --> 00:26:01,600
horizontal advancement is just 10 pixels, I don't know, right?

560
00:26:01,600 --> 00:26:05,200
And the line and, or 50, let's say 80 pixels will say, we, I think we

561
00:26:05,200 --> 00:26:07,300
had randomly 80 in there for a bunch of stuff.

562
00:26:07,400 --> 00:26:09,800
I think we had one point to F times 80 in there.

563
00:26:10,000 --> 00:26:13,600
She said random values that are totally garbage for now, and then this

564
00:26:13,600 --> 00:26:16,800
get best best match font from that.

565
00:26:16,800 --> 00:26:17,800
We need to

566
00:26:20,700 --> 00:26:24,500
Go put up with the asset system, probably the other asset system

567
00:26:24,500 --> 00:26:24,800
calls.

568
00:26:25,200 --> 00:26:27,800
We also have got this guy, which I've some reason to the copy in here.

569
00:26:27,900 --> 00:26:29,000
Let's go ahead and put him in there.

570
00:26:29,700 --> 00:26:30,500
So there we go.

571
00:26:30,900 --> 00:26:37,300
We've got the loaded font and code Point like so and so we could even

572
00:26:37,300 --> 00:26:39,000
sort of stub these out a little bit by.

573
00:26:39,000 --> 00:26:42,100
We can we can even make these use the old thing that they were using

574
00:26:42,100 --> 00:26:42,900
for, right.

575
00:26:42,900 --> 00:26:47,700
You can imagine us doing something absurd in here, but yeah, I don't

576
00:26:47,700 --> 00:26:48,000
know that.

577
00:26:48,000 --> 00:26:48,000
I

578
00:26:48,100 --> 00:26:50,300
I just really want to do that, but we could do something like, you

579
00:26:50,300 --> 00:26:52,300
know what, we're just going to take font ID.

580
00:26:54,100 --> 00:26:56,300
I don't even know, loaded font.

581
00:26:57,400 --> 00:26:59,300
Don't don't try this at home, kids.

582
00:27:00,000 --> 00:27:01,200
Do not try this at home.

583
00:27:03,600 --> 00:27:05,200
We could do something like this.

584
00:27:05,600 --> 00:27:06,900
I know it looks ridiculous.

585
00:27:07,400 --> 00:27:12,000
We could do something like this at the moment and just actually have

586
00:27:13,500 --> 00:27:14,300
this thing.

587
00:27:15,100 --> 00:27:17,900
Still do the exact look up, just so we can make sure the code is

588
00:27:17,900 --> 00:27:19,100
slotted in properly.

589
00:27:19,400 --> 00:27:20,400
Not really, that important.

590
00:27:20,400 --> 00:27:26,100
I'm not super worried about this but just to show that we could just

591
00:27:26,100 --> 00:27:27,700
to make sure we've got the stuff we need.

592
00:27:28,700 --> 00:27:32,800
So for getting the bitmap ID for the glyph here, I don't know if we're

593
00:27:32,800 --> 00:27:33,200
really going to

594
00:27:33,400 --> 00:27:34,700
Need the assets or not?

595
00:27:34,700 --> 00:27:39,500
We're probably not, so I don't know, but I guess we should probably

596
00:27:39,500 --> 00:27:40,700
have it one way or the other.

597
00:27:40,700 --> 00:27:43,200
In case it does need to do look up in something.

598
00:27:43,800 --> 00:27:44,900
That might be a good idea.

599
00:27:44,900 --> 00:27:49,600
So I think maybe I will add that to the call just looking at it it's

600
00:27:49,600 --> 00:27:53,200
like yeah I could see maybe we want the assets and their that seems

601
00:27:53,200 --> 00:27:53,600
fair.

602
00:27:54,500 --> 00:28:00,100
So if we do do the get bit best match bitmap from and I'll do the

603
00:28:00,100 --> 00:28:03,200
match Vector e tag code.

604
00:28:03,300 --> 00:28:04,000
A point.

605
00:28:06,200 --> 00:28:07,900
What was the name of that?

606
00:28:11,300 --> 00:28:14,900
File formats, Unicode code point.

607
00:28:15,000 --> 00:28:17,800
So close right.

608
00:28:19,100 --> 00:28:19,400
All right.

609
00:28:19,400 --> 00:28:23,000
So if we do our weight vector and our match Vector, the match back,

610
00:28:23,000 --> 00:28:24,600
we've got a match that code point.

611
00:28:26,800 --> 00:28:29,800
And then we could still do this exact same thing, right?

612
00:28:30,200 --> 00:28:34,400
And now I think our code is compiling or close to compiling, okay?

613
00:28:34,400 --> 00:28:40,300
Probably should actually make that be something reasonable asset, ID

614
00:28:41,600 --> 00:28:46,400
asset ID, and then we've got font Vector.

615
00:28:46,400 --> 00:28:49,800
So this is an asset Vector match.

616
00:28:54,100 --> 00:28:54,800
Can't wait.

617
00:28:56,900 --> 00:28:57,400
Right.

618
00:28:59,900 --> 00:29:00,800
Okay.

619
00:29:04,900 --> 00:29:13,800
Get best match asset from asset type ID that is what I actually, yeah.

620
00:29:15,800 --> 00:29:17,000
Initializing.

621
00:29:17,600 --> 00:29:19,700
Oh, you can trust me, you can

622
00:29:21,600 --> 00:29:25,900
It's all good and that returns a font ID.

623
00:29:26,900 --> 00:29:27,300
Yeah.

624
00:29:28,900 --> 00:29:29,300
Huh.

625
00:29:30,500 --> 00:29:32,000
All right, never mind.

626
00:29:32,100 --> 00:29:34,600
So we could have just a dress, all the trouble here and done.

627
00:29:34,600 --> 00:29:36,700
That never mind.

628
00:29:37,800 --> 00:29:38,500
There we go.

629
00:29:39,500 --> 00:29:44,500
So yeah, and so then all we really have to do now is we just have to

630
00:29:44,500 --> 00:29:46,700
make it so that the other function is stubbed as well.

631
00:29:46,700 --> 00:29:51,100
So in our, in our in line here, where you actually get the font

632
00:29:52,500 --> 00:29:55,300
We would have to sort of cheat at that.

633
00:29:55,500 --> 00:29:56,900
We have to do something like this.

634
00:29:58,900 --> 00:29:59,600
Where we say loaded?

635
00:30:06,400 --> 00:30:07,300
Star results.

636
00:30:12,700 --> 00:30:16,400
So now we're still working right?

637
00:30:16,500 --> 00:30:17,700
In a kind of crazy way.

638
00:30:18,200 --> 00:30:21,400
And as you can see, we're always advancing by the exact same size

639
00:30:21,400 --> 00:30:23,000
everywhere, right?

640
00:30:23,200 --> 00:30:25,900
Because we're just hard coded with that returns, but we're still wired

641
00:30:25,900 --> 00:30:26,600
up properly.

642
00:30:27,500 --> 00:30:30,100
So, all we really need to do now, to get things working, is to

643
00:30:30,100 --> 00:30:31,800
actually go Implement these routines.

644
00:30:31,800 --> 00:30:35,000
And we know that once we implement, the routines will be in good

645
00:30:35,000 --> 00:30:35,600
shape, right?

646
00:30:35,600 --> 00:30:37,700
We know that everything is kind of getting return properly and that

647
00:30:37,700 --> 00:30:38,100
we're all set.

648
00:30:39,000 --> 00:30:41,400
So let's go ahead and pull these things out, one by one.

649
00:30:41,900 --> 00:30:45,100
So let the get font actually call through to get the font.

650
00:30:45,800 --> 00:30:48,700
And then, let's start to implement these guys here, right?

651
00:30:50,000 --> 00:30:56,300
So get best match bitmap from just does this.

652
00:30:56,700 --> 00:30:59,600
So I'm going to call the exact same thing for the font because really

653
00:30:59,600 --> 00:31:04,100
these are just very simple Funk functions that just kind of all they

654
00:31:04,100 --> 00:31:08,000
do is make it so that you have to pass the right type to the asset ID

655
00:31:08,000 --> 00:31:09,800
thing, which is really pretty basic.

656
00:31:10,100 --> 00:31:11,500
So this should be totally fine.

657
00:31:12,200 --> 00:31:15,300
We're just passing exactly all the stuff all the way through.

658
00:31:16,000 --> 00:31:19,300
And so really, we don't, you know, we don't really need

659
00:31:19,900 --> 00:31:22,900
Think fancier than just that that straightforward thing.

660
00:31:23,300 --> 00:31:26,300
So, I'm just going to stick that there and that's all good.

661
00:31:27,600 --> 00:31:31,500
Matt Decker, and weight vector.

662
00:31:32,600 --> 00:31:34,500
And so that's all taken care of.

663
00:31:34,500 --> 00:31:38,300
And now we're going to have to start actually going and editing the

664
00:31:38,300 --> 00:31:41,900
asset file format to include these things that we actually want,

665
00:31:41,900 --> 00:31:42,400
right?

666
00:31:43,300 --> 00:31:44,300
So in here,

667
00:31:49,800 --> 00:31:51,300
Let's pretend we actually have.

668
00:31:52,400 --> 00:31:53,200
What we want.

669
00:31:53,300 --> 00:31:55,200
I'm going to the simple version first and then we're going to do a

670
00:31:55,200 --> 00:32:00,000
slightly more complicated version after that, but all I'm going to do

671
00:32:00,000 --> 00:32:01,400
here is I'm going to say, okay,

672
00:32:03,000 --> 00:32:09,900
We've got handmade hero asset, .h up in that loaded font.

673
00:32:09,900 --> 00:32:15,100
I'm going to assume that I have a code Point count and a code Point

674
00:32:15,900 --> 00:32:17,100
Min, something like this.

675
00:32:17,600 --> 00:32:21,300
And that we basically have some kind of a range of code points, right?

676
00:32:21,900 --> 00:32:23,300
In fact, at the beginning, you know what?

677
00:32:23,300 --> 00:32:24,900
Let's not even do that at the beginning.

678
00:32:24,900 --> 00:32:27,200
Let's just say we've got a code Point count, because that'll be fine

679
00:32:27,200 --> 00:32:28,300
for for a ski.

680
00:32:29,200 --> 00:32:32,000
When we start trying to think about, you know, do we want to handle?

681
00:32:32,800 --> 00:32:34,200
Kanji or something, right?

682
00:32:35,200 --> 00:32:36,400
Maybe not such a good idea.

683
00:32:36,800 --> 00:32:39,500
But at the moment, we can just say, okay, we've got a code Point

684
00:32:39,500 --> 00:32:40,000
count.

685
00:32:40,500 --> 00:32:44,200
And then, we've got a bitmap ID for the code points, right?

686
00:32:44,200 --> 00:32:48,400
So the bitmap ideas were just all in that code Point table, right?

687
00:32:52,700 --> 00:32:53,300
So that's fine.

688
00:32:55,900 --> 00:32:59,800
We then have an addition, we need the horizontal advance.

689
00:33:00,400 --> 00:33:00,900
Right?

690
00:33:01,000 --> 00:33:05,500
So we need horizontal advance and that's going to be a two-dimensional

691
00:33:05,500 --> 00:33:06,700
table, right?

692
00:33:06,700 --> 00:33:08,300
It's going to look up on two different things.

693
00:33:09,700 --> 00:33:11,700
But that's relatively easy to do as well.

694
00:33:12,700 --> 00:33:16,200
And then we also need a line advance and that's just one thing, right?

695
00:33:18,000 --> 00:33:19,500
So we need something that looks like that.

696
00:33:19,800 --> 00:33:22,000
That's what we need in our actual loaded font.

697
00:33:22,900 --> 00:33:24,900
And so then if we were actually going to use that, it's pretty

698
00:33:24,900 --> 00:33:25,700
trivial, right?

699
00:33:25,700 --> 00:33:31,200
We just say, the result is the font line advance.

700
00:33:32,100 --> 00:33:33,700
Pretty straightforward.

701
00:33:34,200 --> 00:33:38,400
In this case, it's slightly more difficult to D array, look up, but

702
00:33:38,400 --> 00:33:39,700
still totally trivial.

703
00:33:39,700 --> 00:33:44,500
We're just going to look up into the horizontal Advanced and the way

704
00:33:44,500 --> 00:33:45,400
that we would look up into that.

705
00:33:45,400 --> 00:33:49,700
Horizontal Advance is we would just say, okay, we've got however many

706
00:33:49,700 --> 00:33:50,200
code points.

707
00:33:50,200 --> 00:33:53,700
There are right our previous code Point.

708
00:33:53,700 --> 00:33:57,200
Let's say x the code Point count, plus the code Point standard 2D

709
00:33:57,200 --> 00:33:59,800
array referencing, right?

710
00:34:00,100 --> 00:34:02,200
We all know how to do this by now, we've done it a million times.

711
00:34:02,200 --> 00:34:02,600
X.

712
00:34:03,100 --> 00:34:05,100
So, we're just taking a two dimensional index.

713
00:34:05,500 --> 00:34:09,100
One for the pre of code point, which is in this case and one for the

714
00:34:09,100 --> 00:34:13,400
code Point standard, 2D array X array indexing we go ahead and return.

715
00:34:13,400 --> 00:34:16,000
That simple, 2D array index, and done.

716
00:34:16,600 --> 00:34:19,900
And then, in here what we have now is, we've already got a code Point

717
00:34:19,900 --> 00:34:20,199
array.

718
00:34:20,199 --> 00:34:23,800
So now we can just go ahead in here and say the font.

719
00:34:25,400 --> 00:34:26,800
Has the code points in it.

720
00:34:27,100 --> 00:34:30,699
So, whatever the code point is we just look it up directly and now

721
00:34:30,699 --> 00:34:32,100
it's not that kind of annoying.

722
00:34:32,100 --> 00:34:34,400
Remember I said it was really going to be slow before.

723
00:34:34,400 --> 00:34:36,900
Now we're not running some kind of a search Match we just look up

724
00:34:36,900 --> 00:34:38,400
directly what's a bitmap ID?

725
00:34:38,400 --> 00:34:40,400
We get it back, we're done, right?

726
00:34:40,900 --> 00:34:42,400
So that's way, that's way better.

727
00:34:44,000 --> 00:34:44,300
Okay.

728
00:34:44,300 --> 00:34:46,500
So now one of the things that's true about this is we probably want to

729
00:34:46,500 --> 00:34:48,100
clamp these guys, right?

730
00:34:48,100 --> 00:34:52,900
We probably don't want to be doing stuff, that's out of range for for

731
00:34:52,900 --> 00:34:53,699
what we have.

732
00:34:53,699 --> 00:34:56,699
So what I'd like to do is I'd like to introduce the concept here where

733
00:34:56,699 --> 00:35:00,900
I'm just going to say, well, there's like a desired code point that

734
00:35:00,900 --> 00:35:03,300
I'm asking for and then there's the code point that I'm actually going

735
00:35:03,300 --> 00:35:04,500
to get, right?

736
00:35:04,700 --> 00:35:07,500
And normally it's going to be the desired code point, but only, if the

737
00:35:07,500 --> 00:35:09,300
desired code points actually in range.

738
00:35:09,500 --> 00:35:12,600
So if the desired code point is less than the code Point count for the

739
00:35:12,600 --> 00:35:13,200
font,

740
00:35:13,600 --> 00:35:15,500
Then I'm cool with it, right?

741
00:35:17,500 --> 00:35:20,900
Otherwise we're just going to give you back the zero bitmap because

742
00:35:21,000 --> 00:35:23,900
you're trying to draw a glyph, we don't have right.

743
00:35:27,100 --> 00:35:29,800
And maybe the 0th code points always going to be mapped a bitmap 0.

744
00:35:29,800 --> 00:35:31,600
So that you don't try anything right?

745
00:35:32,000 --> 00:35:32,600
Who knows?

746
00:35:33,800 --> 00:35:37,700
Point being, I want to clamp that right and serious.

747
00:35:37,800 --> 00:35:41,000
Similarly, I'd like to do that here and you can kind of see that those

748
00:35:41,000 --> 00:35:42,100
are going to be very similar.

749
00:35:42,200 --> 00:35:45,200
So what I'd rather do is just have a thing that's like get clamped

750
00:35:45,200 --> 00:35:46,000
code point.

751
00:35:47,400 --> 00:35:53,600
Something like this so that I can pass these two things into it and

752
00:35:53,600 --> 00:35:55,900
get back a result.

753
00:35:57,800 --> 00:35:58,400
Right.

754
00:35:59,100 --> 00:35:59,800
And so with that is

755
00:36:00,000 --> 00:36:03,100
Do is that's going to do this exact clamp that we just did.

756
00:36:05,800 --> 00:36:08,700
Excuse me, like so.

757
00:36:12,700 --> 00:36:15,500
And so that allows me to just say, okay, I know now that I can just

758
00:36:15,500 --> 00:36:17,600
always do this, these clamp things.

759
00:36:17,800 --> 00:36:22,000
So anything that comes in I can clamp and then use, right?

760
00:36:23,500 --> 00:36:24,600
Very, very straightforward.

761
00:36:25,300 --> 00:36:26,000
And same thing.

762
00:36:26,000 --> 00:36:28,900
Here we have code point is going to be equal to get clamped code,

763
00:36:28,900 --> 00:36:32,000
Point desired, pre-code point.

764
00:36:34,300 --> 00:36:39,700
Code point is going to be equal to get clamped code point I, guess

765
00:36:39,700 --> 00:36:40,000
week.

766
00:36:40,000 --> 00:36:42,900
Yeah, well, desired code point.

767
00:36:43,400 --> 00:36:43,800
So

768
00:36:46,800 --> 00:36:49,600
And that way again, the lookup will always succeed in, oh, he's work,

769
00:36:49,600 --> 00:36:52,700
okay, even if we're getting out of range request, which is tireli like

770
00:36:52,700 --> 00:36:53,200
Leon van.

771
00:36:53,200 --> 00:36:54,100
So I don't want to have that.

772
00:36:54,100 --> 00:36:55,000
Be a crash in area.

773
00:36:55,000 --> 00:36:58,300
I'd rather have that be handled gracefully because it's the kind of

774
00:36:58,300 --> 00:36:59,500
thing that might be happening in.

775
00:36:59,500 --> 00:37:00,100
It's okay.

776
00:37:01,500 --> 00:37:03,900
All right, so that's all I really wanted to have happen there.

777
00:37:06,800 --> 00:37:08,200
I need to pass the font.

778
00:37:11,300 --> 00:37:12,000
And now I do.

779
00:37:13,400 --> 00:37:18,700
And that's about all there is to it, right?

780
00:37:19,200 --> 00:37:20,200
Very straightforward.

781
00:37:20,500 --> 00:37:25,300
That is literally all the code we actually need at runtime, right?

782
00:37:28,200 --> 00:37:32,100
Because what I've essentially done is said, you know what, I just want

783
00:37:32,100 --> 00:37:34,500
all of this information to be tabulated.

784
00:37:35,800 --> 00:37:38,500
So that I can just straight-up look, you know, look it up and I don't

785
00:37:38,500 --> 00:37:45,200
have to worry later about, you know, calculating things or figuring

786
00:37:45,200 --> 00:37:45,500
things out.

787
00:37:45,500 --> 00:37:46,100
I want it all.

788
00:37:46,100 --> 00:37:47,700
Just be there as a quick index.

789
00:37:47,700 --> 00:37:51,700
So once I get that font handle back, that's the only slow query.

790
00:37:51,800 --> 00:37:54,600
The only slow query is give me the loaded font, everything else is

791
00:37:54,600 --> 00:37:56,900
like a direct table lookup and doesn't have to go through anything

792
00:37:56,900 --> 00:37:59,100
fancy because that you know, if we have lots of characters on the

793
00:37:59,100 --> 00:38:01,300
screen, we don't want to constantly be doing all these queries to find

794
00:38:01,300 --> 00:38:02,100
that we want to know.

795
00:38:02,700 --> 00:38:04,500
Where is the character, here it is, right?

796
00:38:05,300 --> 00:38:09,700
So now, although it's very easy to write that code because we base, so

797
00:38:09,700 --> 00:38:10,900
we want everything tabulated.

798
00:38:10,900 --> 00:38:13,700
We now have to actually go and build those tables right?

799
00:38:13,700 --> 00:38:16,700
Which is, you know, that's work right there, right?

800
00:38:19,200 --> 00:38:19,700
But hey,

801
00:38:21,300 --> 00:38:22,400
Let's go ahead and do that.

802
00:38:22,900 --> 00:38:24,000
It won't be that hard.

803
00:38:24,500 --> 00:38:27,200
The first thing that we're probably going to need to do, and we'll go

804
00:38:27,200 --> 00:38:30,700
ahead and do that in handmade file formats.

805
00:38:31,000 --> 00:38:34,800
The first thing that we want to do is we need to introduce the the

806
00:38:34,800 --> 00:38:39,400
fact that there's a difference between a font and the font glyph,

807
00:38:39,700 --> 00:38:40,300
right?

808
00:38:40,300 --> 00:38:43,800
Because our font glyphs are going to be different, are going to be

809
00:38:43,800 --> 00:38:46,600
different range of bitmap IDs that are fonts, which are now actual

810
00:38:46,600 --> 00:38:47,900
citizens, right?

811
00:38:47,900 --> 00:38:49,500
So we kind of have two different things.

812
00:38:49,800 --> 00:38:51,000
Now, do we really need

813
00:38:51,100 --> 00:38:54,400
Need a font glyph asset type range, probably not but we might as well

814
00:38:54,400 --> 00:38:57,400
just have one in there and then font itself of course is going to be

815
00:38:57,400 --> 00:38:59,800
specific to the actual you know.

816
00:39:00,000 --> 00:39:00,900
I want information.

817
00:39:01,700 --> 00:39:08,900
Okay, so if we do that, yeah, again we're never really going to use

818
00:39:08,900 --> 00:39:11,000
this to look anything up because we're going to be looking up the

819
00:39:11,000 --> 00:39:13,200
fonts indirectly through the tables by just kind of thought it would

820
00:39:13,200 --> 00:39:16,700
be nice to have it marked in the file so that it's clear what is a

821
00:39:16,700 --> 00:39:17,800
font glyph?

822
00:39:17,800 --> 00:39:19,000
And what isn't right?

823
00:39:23,500 --> 00:39:24,000
so,

824
00:39:26,000 --> 00:39:28,100
Now, we have to store these things, right?

825
00:39:28,200 --> 00:39:30,100
And we know exactly what we need to store.

826
00:39:30,900 --> 00:39:34,300
We know, we need to store this information so far and maybe some more

827
00:39:34,300 --> 00:39:36,600
stuff, you know, we might want to store a couple other things with it

828
00:39:36,600 --> 00:39:39,000
but that's that's basically what we're dealing with here, right?

829
00:39:39,100 --> 00:39:40,200
That's what we want.

830
00:39:40,500 --> 00:39:41,200
That's what we want to do.

831
00:39:41,200 --> 00:39:41,900
You want to have?

832
00:39:43,200 --> 00:39:48,200
So if we go ahead and look into this loaded font, we're going to want

833
00:39:48,200 --> 00:39:51,900
to sort of augment what we're storing here.

834
00:39:52,100 --> 00:39:55,600
So that when a font is stored, as an asset, it's in the file.

835
00:39:55,800 --> 00:39:58,000
As something intelligent, right?

836
00:39:58,100 --> 00:40:00,700
So we've had h a bitmap, we've got h a sound.

837
00:40:00,700 --> 00:40:04,900
We now need an ha font, which has some of this additional information

838
00:40:05,200 --> 00:40:06,300
in it, right?

839
00:40:06,400 --> 00:40:10,200
And we started 20 minutes late today, so I'm definitely going to take

840
00:40:10,200 --> 00:40:12,900
the extra time on the clock because this is all pretty wrote code.

841
00:40:13,200 --> 00:40:15,000
That's obviously, as you seem very simple to write.

842
00:40:15,000 --> 00:40:17,300
So we might as well kind of push through it and get as much of it done

843
00:40:17,300 --> 00:40:17,900
as we can.

844
00:40:18,400 --> 00:40:20,800
So that we're, you know, in the best possible position for tomorrow.

845
00:40:24,600 --> 00:40:27,900
All right, so I've got my h a font.

846
00:40:27,900 --> 00:40:30,300
I know that I need this information, right?

847
00:40:30,300 --> 00:40:31,500
I know this is what I need.

848
00:40:33,000 --> 00:40:36,500
But if you take a look at what happens here, obviously I've got two

849
00:40:36,500 --> 00:40:38,900
different arrays and and so on.

850
00:40:39,100 --> 00:40:43,300
So I can just basically say well okay, normally like a bitmap and

851
00:40:43,300 --> 00:40:44,000
things like that.

852
00:40:44,000 --> 00:40:47,600
They've got sort of the data-offset thing where they go and load their

853
00:40:47,600 --> 00:40:48,100
data.

854
00:40:48,100 --> 00:40:52,400
That's a late loaded thing, what I could do is just say for us, it's

855
00:40:52,400 --> 00:40:56,200
not late loaded for fonts, it's loaded immediately at the time.

856
00:40:56,200 --> 00:41:00,600
When you kind of open I could do that or I guess I guess, you know,

857
00:41:00,600 --> 00:41:02,200
now that I think about it we said that it wouldn't

858
00:41:02,900 --> 00:41:05,800
So I guess we're going to have that the actually in the data, the data

859
00:41:05,800 --> 00:41:06,600
section, right?

860
00:41:06,700 --> 00:41:09,400
So basically, all we're going to put here is what the code Point count

861
00:41:09,400 --> 00:41:13,100
is, and what the line Advance is I guess, because those are the two

862
00:41:13,100 --> 00:41:16,000
values that we actually could just store that aren't large.

863
00:41:16,500 --> 00:41:18,800
And then we're just going to assume that our data offsets going to

864
00:41:18,800 --> 00:41:23,900
point to array of bitmap IDs and then a 2d array of horizontal

865
00:41:23,900 --> 00:41:25,200
advancements, right?

866
00:41:27,700 --> 00:41:31,200
So I guess we could say data is right.

867
00:41:34,800 --> 00:41:35,900
Code Point count.

868
00:41:37,200 --> 00:41:38,100
And

869
00:41:39,400 --> 00:41:39,900
Like so.

870
00:41:42,000 --> 00:41:45,700
Right, and I'll mention this because people often ask me this

871
00:41:45,700 --> 00:41:46,300
question.

872
00:41:48,900 --> 00:41:49,400
On the stream.

873
00:41:49,400 --> 00:41:50,100
I'll just mention it.

874
00:41:50,100 --> 00:41:52,300
I'm going to try and start mentioning it more often now because people

875
00:41:52,300 --> 00:41:56,200
have been asking, you know,

876
00:41:58,900 --> 00:41:59,800
A lot of times.

877
00:42:00,300 --> 00:42:05,300
I talked about how a lot of stuff like C++ has is bad and Javas bad

878
00:42:05,300 --> 00:42:09,600
and all the sorts of stuff like don't do them and that's all true but

879
00:42:09,600 --> 00:42:11,900
that's not the same thing as saying that C is good.

880
00:42:12,800 --> 00:42:16,300
Okay and so I just want to point out.

881
00:42:16,400 --> 00:42:19,600
For example, this sort of thing is stuff that should totally be

882
00:42:19,600 --> 00:42:22,800
automatically generated and in a better language it would be and the

883
00:42:22,800 --> 00:42:26,700
problem is in order to get those functionalities out of other

884
00:42:26,700 --> 00:42:27,200
languages.

885
00:42:27,200 --> 00:42:29,800
You have to take on a bunch of stuff you don't want.

886
00:42:30,000 --> 00:42:34,500
Write C++ C, sharp Java that are, they don't make it easy to do what

887
00:42:34,500 --> 00:42:35,400
you actually want to do.

888
00:42:35,400 --> 00:42:38,500
They force you to incur all this baggage and that's what I don't like.

889
00:42:38,600 --> 00:42:39,000
Right?

890
00:42:39,800 --> 00:42:42,100
So the way that I typically handle these kinds of problems.

891
00:42:42,100 --> 00:42:45,100
If I wasn't doing a game like handmade here, where the goal is to kind

892
00:42:45,100 --> 00:42:47,900
of teach the ground up programming is the fundamentals, right?

893
00:42:49,300 --> 00:42:52,100
The way that I typically handle these is, these are meta generated, so

894
00:42:52,100 --> 00:42:55,700
I will typically do generation that generates file formats, so that it

895
00:42:55,700 --> 00:42:57,900
can automatically do stuff like, oh, how many raised did you want?

896
00:42:57,900 --> 00:42:59,800
Okay, we'll pack them together that sort of stuff, right?

897
00:43:01,300 --> 00:43:02,300
Very, very simple.

898
00:43:02,500 --> 00:43:03,400
It's trivial to do, right?

899
00:43:03,400 --> 00:43:05,800
You just write a program that generates C code, right?

900
00:43:06,500 --> 00:43:08,200
But it's kind of a level above.

901
00:43:08,600 --> 00:43:10,800
And it's not something that I want to show on handmade hero because

902
00:43:11,000 --> 00:43:15,300
everyone should do this first, you should do one game this way first,

903
00:43:15,800 --> 00:43:18,600
because if you don't know how to do it, this you'll never know how to

904
00:43:18,600 --> 00:43:20,100
write the meta code, right?

905
00:43:20,600 --> 00:43:21,700
That's the big thing.

906
00:43:23,300 --> 00:43:26,200
And so you got to do it once this way, but once you've done it once,

907
00:43:26,200 --> 00:43:29,800
this way, you will see for yourself, how you like to arrange these

908
00:43:29,800 --> 00:43:29,900
things.

909
00:43:30,500 --> 00:43:33,000
And then you'll be able to pull out those common things into a meta

910
00:43:33,000 --> 00:43:34,700
generated version if you so choose.

911
00:43:34,900 --> 00:43:36,800
Now on handmade here, we're not going to have a lot of it.

912
00:43:36,800 --> 00:43:39,700
So you would my argument would almost be that you wouldn't bother on

913
00:43:39,700 --> 00:43:42,300
handmade hero anyway because the amount of time it would take you to

914
00:43:42,300 --> 00:43:44,500
go do the Generation stuff is probably going to be longer than the

915
00:43:44,500 --> 00:43:45,700
amount of time you would save.

916
00:43:46,400 --> 00:43:49,600
But if you're taking the longer view, like I'm going to build an

917
00:43:49,600 --> 00:43:49,900
engine.

918
00:43:49,900 --> 00:43:51,200
I'm going to be lots of games with it.

919
00:43:51,200 --> 00:43:52,200
Blah blah blah blah.

920
00:43:52,200 --> 00:43:55,200
Then it becomes clear that it's easier to invest in that time because

921
00:43:55,200 --> 00:43:57,700
now you have more flexibility and you can do many games and so on and

922
00:43:57,700 --> 00:43:58,700
so forth, right?

923
00:43:58,800 --> 00:43:59,800
So it's always about trade

924
00:44:00,000 --> 00:44:02,200
US stories about making the right judgment call about what's the right

925
00:44:02,200 --> 00:44:04,100
thing to build and what are the trade-offs and so on.

926
00:44:04,300 --> 00:44:05,800
But I do want to point it out that, you know.

927
00:44:05,800 --> 00:44:06,000
Yeah.

928
00:44:06,000 --> 00:44:07,700
Do I always write all this stuff by hand?

929
00:44:07,700 --> 00:44:10,400
No, I've got a lot of techniques for making sure that I don't have to

930
00:44:10,400 --> 00:44:13,600
write it by hand, but the key part is the way that I choose to handle

931
00:44:13,600 --> 00:44:17,000
that is not by going to a crappy language like Java where I then take

932
00:44:17,000 --> 00:44:20,100
on all this baggage in my code is slow and lousy, I don't have to do

933
00:44:20,100 --> 00:44:20,900
that, right?

934
00:44:21,100 --> 00:44:25,200
I can still get all the benefits of c and I just fixed the parts that

935
00:44:25,200 --> 00:44:27,400
are actually broken, which is the fact that I don't want to have to

936
00:44:27,400 --> 00:44:29,900
write stuff like this, every time we're now I have to manually search.

937
00:44:30,100 --> 00:44:32,300
Figure out how my array is packed in the file, right?

938
00:44:32,900 --> 00:44:35,900
And so that's kind of the important thing to understand is that, yes,

939
00:44:35,900 --> 00:44:38,600
he has tons of limitations, unfortunately, the higher-level Learners

940
00:44:38,600 --> 00:44:42,100
don't fix them, they just exchanged them for other problems.

941
00:44:43,000 --> 00:44:47,100
And so if you really want to get past that point, I recommend look,

942
00:44:47,100 --> 00:44:50,400
you know you know, be a Jedi, build your own lightsaber, don't go

943
00:44:50,400 --> 00:44:54,700
taken this sort of like, you know, targeting computer approach the

944
00:44:54,700 --> 00:44:55,700
stuff, it doesn't work.

945
00:44:55,700 --> 00:44:57,700
You're never going to get it into the exhaust for it that way.

946
00:44:58,000 --> 00:44:59,800
Anyway, so moving on,

947
00:45:00,000 --> 00:45:01,200
In that brief digression.

948
00:45:01,700 --> 00:45:05,200
So what I'm going to do is I'm going to go ahead and say that the data

949
00:45:05,200 --> 00:45:08,500
for these guys is this, you know, and I could go ahead and augment

950
00:45:08,500 --> 00:45:09,500
these guys here as well.

951
00:45:09,500 --> 00:45:13,100
To just make a quick note about what the data is.

952
00:45:14,600 --> 00:45:19,400
So in this case data is channels, zero Channel count

953
00:45:20,600 --> 00:45:21,500
Sample count.

954
00:45:25,300 --> 00:45:28,800
Right, that's the way we chose to store that.

955
00:45:29,900 --> 00:45:34,600
So it's kind of saying this is what goes in the data and same with h

956
00:45:34,600 --> 00:45:35,200
bitmap.

957
00:45:36,300 --> 00:45:37,200
We know what that is.

958
00:45:37,800 --> 00:45:42,200
That's a you 32 of the pixels with Jim zero.

959
00:45:43,900 --> 00:45:45,700
And in one, right?

960
00:45:45,900 --> 00:45:47,400
So that's just me kind of making a note.

961
00:45:47,400 --> 00:45:48,100
That's like, hey, yeah.

962
00:45:48,100 --> 00:45:51,800
If this was a good programming language, that was like, super modern

963
00:45:51,800 --> 00:45:52,500
and amazing.

964
00:45:53,000 --> 00:45:55,400
I would have been able to met a program this so I can just say that.

965
00:45:55,400 --> 00:45:56,900
And then the file format works or something.

966
00:45:58,900 --> 00:46:00,600
It's not, but it's still a trustee language.

967
00:46:00,900 --> 00:46:02,900
So I'm going to go write it myself the way I want it written and it

968
00:46:02,900 --> 00:46:04,400
will let me do that, and that's awesome.

969
00:46:05,000 --> 00:46:08,200
But I do want to make note of for people who are trying to read it,

970
00:46:08,800 --> 00:46:10,500
that's what you're actually seeing, right.

971
00:46:11,100 --> 00:46:11,500
Okay.

972
00:46:11,900 --> 00:46:12,700
So let's go.

973
00:46:12,800 --> 00:46:17,900
Ed and go over to the actual implementation of this stuff, right?

974
00:46:18,300 --> 00:46:20,400
First thing I want to do is I want to figure out how I'm going to

975
00:46:20,400 --> 00:46:22,300
actually load that stuff right.

976
00:46:23,500 --> 00:46:27,500
Because if you look here, when we do load asset work directly, we kind

977
00:46:27,500 --> 00:46:30,500
of have a problem there, which is that when we do that load asset

978
00:46:30,500 --> 00:46:34,300
work, we, you know, oh well, you know, I don't have a problem.

979
00:46:34,300 --> 00:46:36,400
We just set the pointers ahead of time, that's how we always did

980
00:46:36,400 --> 00:46:36,600
stuff.

981
00:46:36,600 --> 00:46:37,400
So, that should be fine.

982
00:46:37,600 --> 00:46:39,500
So, yeah, so this will actually work the same.

983
00:46:39,700 --> 00:46:44,000
So, if we, if we take a look at load bitmap, it's pretty much should

984
00:46:44,000 --> 00:46:50,700
be the same as load sound and that should all be totally fine, right?

985
00:46:51,000 --> 00:46:53,000
So we should be able to go ahead and grab like one,

986
00:46:53,200 --> 00:46:58,000
You guys here and then we should be able to sort of do our own version

987
00:46:58,000 --> 00:47:02,300
of this for loading fonts, which won't presumably be particularly

988
00:47:02,700 --> 00:47:03,600
difficult.

989
00:47:03,700 --> 00:47:08,200
We could come in here, we do our standard atomic exchange and add and

990
00:47:08,200 --> 00:47:09,400
one thing that's a little bit annoying.

991
00:47:09,400 --> 00:47:12,300
I will point out is I feel like this little bit of boilerplate here is

992
00:47:12,300 --> 00:47:17,200
a little risky to do Casey, merge this boilerplate.

993
00:47:18,500 --> 00:47:21,000
Because it's a delicate little Atomic thing.

994
00:47:21,000 --> 00:47:23,600
I feel like we wanted that collapsed so that if we change it in one

995
00:47:23,600 --> 00:47:27,000
place, we don't try to, you know, actually forget to change it for

996
00:47:27,000 --> 00:47:28,100
each of the loading calls.

997
00:47:28,100 --> 00:47:28,500
You know what I mean?

998
00:47:28,500 --> 00:47:30,400
There's still a little, there's a little more.

999
00:47:31,400 --> 00:47:33,600
There's too much shared code happening here.

1000
00:47:33,600 --> 00:47:36,000
That's not actually being shared and that makes me a little bit

1001
00:47:36,000 --> 00:47:36,300
nervous.

1002
00:47:36,300 --> 00:47:38,700
And so that's something that I would like to address in the future if

1003
00:47:38,700 --> 00:47:39,600
we have a chance to do.

1004
00:47:39,600 --> 00:47:42,200
So it's not the end of the world, but it, you know, it would make me

1005
00:47:42,200 --> 00:47:43,400
feel more comfortable if we did.

1006
00:47:44,000 --> 00:47:44,400
So anyway,

1007
00:47:45,900 --> 00:47:46,400
Moving on.

1008
00:47:47,400 --> 00:47:51,500
So if I have my load font call here, basically everything is the same.

1009
00:47:51,500 --> 00:47:56,500
The only difference is going to be that when I actually do the sort of

1010
00:47:56,700 --> 00:47:59,700
pointer sus stuff remapping here, I obviously.

1011
00:48:00,000 --> 00:48:01,900
Too well.

1012
00:48:06,100 --> 00:48:09,500
Set up the pointers in that loaded font, right?

1013
00:48:10,100 --> 00:48:16,100
So in here, if I had my loaded fonts, like so then I know that I have

1014
00:48:16,100 --> 00:48:20,700
to set again, I'm just I'm sort of just total totally on Rails here,

1015
00:48:20,700 --> 00:48:20,900
right?

1016
00:48:20,900 --> 00:48:24,600
I'm just following the footprint that I already laid down for myself.

1017
00:48:25,600 --> 00:48:27,800
Very, very very straightforward, right?

1018
00:48:28,200 --> 00:48:29,600
So let's go ahead and do this.

1019
00:48:34,500 --> 00:48:35,700
And you know what I mean?

1020
00:48:35,900 --> 00:48:37,000
Now that I look at this, right?

1021
00:48:37,000 --> 00:48:42,200
There's even, we can even, we can even make this even simpler, write

1022
00:48:44,200 --> 00:48:45,000
the code Point.

1023
00:48:45,000 --> 00:48:48,000
Count is really the only thing that we really need the line.

1024
00:48:48,000 --> 00:48:50,000
Advanced doesn't really even have to be there.

1025
00:48:50,000 --> 00:48:52,900
Honestly, I mean, we could, we could simplify that by having a font

1026
00:48:52,900 --> 00:48:54,800
header, I don't know that we need to do that.

1027
00:48:54,800 --> 00:48:58,900
So, you know, maybe we don't bother but and really, those could get

1028
00:48:58,900 --> 00:48:59,000
it.

1029
00:48:59,000 --> 00:49:01,200
Come out of the HOH, a font and probably should

1030
00:49:01,400 --> 00:49:02,900
That's how we've kind of been doing it.

1031
00:49:03,000 --> 00:49:04,000
So really, it's more.

1032
00:49:04,000 --> 00:49:06,400
We want just that almost

1033
00:49:08,800 --> 00:49:16,900
So I you know, it's a little bit it's a little bit tricky so I'm going

1034
00:49:16,900 --> 00:49:22,500
to go full pull I'm just I'm voting for full pull here and so if we if

1035
00:49:22,500 --> 00:49:26,800
we take a look at what that implies it basically I'm saying that the

1036
00:49:26,800 --> 00:49:30,100
AHA font would have something additional to head which is just like an

1037
00:49:30,100 --> 00:49:33,300
h a font info or something like that, right?

1038
00:49:33,300 --> 00:49:35,600
Or font header, something like that.

1039
00:49:37,900 --> 00:49:42,400
That it would have on the front and that HHH fonts font header would

1040
00:49:42,400 --> 00:49:48,400
actually have, it would actually be a sort of a data piece for that

1041
00:49:48,400 --> 00:49:49,600
font, right?

1042
00:49:49,900 --> 00:49:53,600
So it would have the line advance.

1043
00:49:56,400 --> 00:50:00,400
It would have, maybe the, like, the Baseline, the ascenders, the

1044
00:50:00,400 --> 00:50:05,500
dissenters we could have to, do you know, anything else we want?

1045
00:50:07,800 --> 00:50:08,300
Right.

1046
00:50:09,400 --> 00:50:13,300
And so I feel like that's a better thing to do almost in this because

1047
00:50:13,300 --> 00:50:16,200
the only piece of information we actually need for a font is the code

1048
00:50:16,200 --> 00:50:16,700
Point count.

1049
00:50:16,700 --> 00:50:17,300
That's it.

1050
00:50:17,500 --> 00:50:18,700
We don't need anything else.

1051
00:50:19,200 --> 00:50:20,800
Everything else can just be loaded?

1052
00:50:21,200 --> 00:50:23,900
And so what I'd like to do is sort of change that up a bit.

1053
00:50:24,000 --> 00:50:27,100
I'd like to go ahead and say that we have that font header and maybe

1054
00:50:27,100 --> 00:50:27,800
it's the info.

1055
00:50:27,800 --> 00:50:28,600
I don't know.

1056
00:50:28,600 --> 00:50:32,100
Fought info front header man.

1057
00:50:34,600 --> 00:50:35,700
It's difficult to really say.

1058
00:50:37,600 --> 00:50:40,100
Like the chain, for example, the chain value.

1059
00:50:40,900 --> 00:50:42,700
Do we want to do is hear you now I'm torn.

1060
00:50:43,100 --> 00:50:45,200
I'm really torn, right?

1061
00:50:47,300 --> 00:50:48,200
I'm going to all right.

1062
00:50:48,200 --> 00:50:48,400
Fine.

1063
00:50:48,500 --> 00:50:49,900
I'll stick with convention so far.

1064
00:50:49,900 --> 00:50:50,900
We haven't been doing that.

1065
00:50:50,900 --> 00:50:52,500
We could just put the fire in there.

1066
00:50:52,500 --> 00:50:53,400
We won't do that.

1067
00:50:53,400 --> 00:50:55,200
We're going to leave it this way so that's fine.

1068
00:50:55,500 --> 00:50:58,500
What that means though, to is the loaded font to keeping with

1069
00:50:58,500 --> 00:50:59,800
convention would only have these two

1070
00:51:00,000 --> 00:51:04,600
Senate because you would call get font info to get the h a font back

1071
00:51:04,600 --> 00:51:07,200
and that's already got your stuff in it so we'll change that up to

1072
00:51:07,200 --> 00:51:08,800
work a little bit slightly differently, right?

1073
00:51:09,800 --> 00:51:15,700
But anyway so inside the font itself, we would have the HHH h.h.

1074
00:51:15,700 --> 00:51:20,700
a font here like so so we'd have the font info and then what we would

1075
00:51:20,700 --> 00:51:23,700
do is we're going to set up the loaded font code points.

1076
00:51:27,800 --> 00:51:30,300
And the horizontal Advanced right?

1077
00:51:31,700 --> 00:51:34,400
And these are going to be really, really simple, right?

1078
00:51:34,400 --> 00:51:35,500
All that's going to happen.

1079
00:51:35,500 --> 00:51:39,000
Here is the data immediately after the header, right?

1080
00:51:39,000 --> 00:51:42,500
Like, like is going to be where the first table is, right?

1081
00:51:42,500 --> 00:51:44,700
You can kind of see the way we were doing it here, right?

1082
00:51:44,900 --> 00:51:47,500
The memory for the bitmap is just, whatever is immediately after the

1083
00:51:47,500 --> 00:51:47,900
header.

1084
00:51:48,500 --> 00:51:50,800
So that's the same thing going to do here, when this stuff gets loaded

1085
00:51:50,800 --> 00:51:51,200
in

1086
00:51:53,300 --> 00:51:55,400
It's going to get loaded into that memory slot.

1087
00:51:56,400 --> 00:51:59,100
So we're just going to go ahead and say all right the code points are

1088
00:51:59,100 --> 00:52:02,600
the first thing after the header and then the horizontal advances the

1089
00:52:02,600 --> 00:52:04,600
first thing after the code points, right?

1090
00:52:05,900 --> 00:52:12,000
And the code points size, really in order to do that is it's again

1091
00:52:12,000 --> 00:52:13,100
really, really basic.

1092
00:52:13,200 --> 00:52:17,500
We know that the code points are going to be the size of a bitmap ID.

1093
00:52:17,700 --> 00:52:21,600
So we know that there that that big and we know how many code points

1094
00:52:21,600 --> 00:52:22,700
there are because we

1095
00:52:22,900 --> 00:52:24,700
That in the info which we always have.

1096
00:52:24,800 --> 00:52:27,100
That's why I saying that's the only thing that we need is because we

1097
00:52:27,100 --> 00:52:31,300
need to know how many, right.

1098
00:52:31,300 --> 00:52:33,900
How many we have so we know how to unpack those arrays.

1099
00:52:34,500 --> 00:52:37,900
That's it, right?

1100
00:52:37,900 --> 00:52:43,800
That's all there is so yeah there's really nothing else to it.

1101
00:52:47,300 --> 00:52:50,000
Really, really straightforward, really really straightforward.

1102
00:52:50,800 --> 00:52:52,900
And you can see how common all this code is.

1103
00:52:52,900 --> 00:52:56,700
So I really feel like we need to merge, this merge, all this

1104
00:52:56,700 --> 00:53:03,400
boilerplate, same between lewd, that map, loads sound and load font

1105
00:53:03,900 --> 00:53:08,100
because now it's just that internal ifs that that little core that

1106
00:53:08,100 --> 00:53:08,600
changes.

1107
00:53:08,600 --> 00:53:12,400
And so we can do it, we can do a better job for sure.

1108
00:53:14,000 --> 00:53:18,400
Okay, continuing on, we need to do our science computation here.

1109
00:53:20,100 --> 00:53:24,200
And I don't actually know, looks like it looks like really all we need

1110
00:53:24,200 --> 00:53:28,900
to do is remember what that size the size of the data actually is.

1111
00:53:30,000 --> 00:53:32,700
So we really just need to compute this stuff out.

1112
00:53:33,400 --> 00:53:37,900
Pretty straightforward sighs section is relevant.

1113
00:53:37,900 --> 00:53:40,200
So I'm going to get rid of this notion altogether.

1114
00:53:40,400 --> 00:53:45,400
I'm just going to say here that we've got size data and size total and

1115
00:53:45,400 --> 00:53:48,100
then we'll just use those because that's kind of antiquated thing that

1116
00:53:48,100 --> 00:53:49,700
struct we kind of got rid of it, right?

1117
00:53:50,500 --> 00:53:55,500
And so the size data we know how big that's going to be right I guess

1118
00:53:55,500 --> 00:53:57,800
and this is the place where I should have just done code.

1119
00:54:00,400 --> 00:54:03,800
Points sighs because I can now just go.

1120
00:54:03,800 --> 00:54:05,200
Okay, code Point size.

1121
00:54:07,600 --> 00:54:08,100
Was that?

1122
00:54:08,900 --> 00:54:11,100
So then I know the size of the data is going to be the code Point

1123
00:54:11,100 --> 00:54:15,600
size, plus the size of the horizontal advance,

1124
00:54:18,300 --> 00:54:21,500
And that's going to be the total size of my font, right?

1125
00:54:22,400 --> 00:54:24,200
So we've got horizontal Advanced sighs.

1126
00:54:26,400 --> 00:54:30,700
That's just going to be the size of an R32 times.

1127
00:54:30,700 --> 00:54:32,800
The code Point count squared, right?

1128
00:54:32,800 --> 00:54:34,000
Because it's a 2d look up.

1129
00:54:35,200 --> 00:54:36,000
So that's it.

1130
00:54:36,400 --> 00:54:39,600
That's all there is and then the rest of this routine will just load

1131
00:54:39,600 --> 00:54:45,000
the font and everybody wins everyone wins as it turns out.

1132
00:54:46,000 --> 00:54:49,000
But we've got a lot more work to do and we're running out of time.

1133
00:54:49,000 --> 00:54:51,300
We only have about six minutes left, so I'm going to go ahead and make

1134
00:54:51,300 --> 00:54:53,900
sure things are compiling here, at least.

1135
00:54:54,500 --> 00:54:58,800
And then we will have to sort of, maybe quickly fix a few things to

1136
00:54:58,800 --> 00:55:00,400
leave ourselves in a semi running State.

1137
00:55:00,400 --> 00:55:02,500
We won't be able to leave ourselves completely running state today

1138
00:55:02,500 --> 00:55:04,500
because we've made too many changes but

1139
00:55:04,700 --> 00:55:07,500
Okay, rarely, can you get all your changes in an hour?

1140
00:55:07,500 --> 00:55:08,200
It's surprising.

1141
00:55:08,200 --> 00:55:11,700
How many times we are actually able to do that on handmade hero but

1142
00:55:11,700 --> 00:55:13,300
you know that's not the norm.

1143
00:55:13,300 --> 00:55:15,500
Normally big changes it take a while.

1144
00:55:17,500 --> 00:55:22,400
All right, so yeah, looking good so far.

1145
00:55:22,900 --> 00:55:25,500
I don't see any problems.

1146
00:55:25,500 --> 00:55:29,100
And so now we have to do again, these are going to be when we do get

1147
00:55:29,300 --> 00:55:32,400
clamped code point and stuff like that, when we're passing the loaded

1148
00:55:32,400 --> 00:55:36,100
font, we actually need the the font info here for those which is a

1149
00:55:36,100 --> 00:55:36,900
slightly different thing.

1150
00:55:36,900 --> 00:55:42,300
Again, what that means is that these guys kind of all need in

1151
00:55:42,300 --> 00:55:42,900
addition.

1152
00:55:43,300 --> 00:55:45,400
The ahha font, right?

1153
00:55:46,000 --> 00:55:47,100
They need, they need that.

1154
00:55:48,900 --> 00:55:50,200
It may not be Savory.

1155
00:55:51,000 --> 00:55:54,300
You know it's a little ugly but that's just how it goes sometimes,

1156
00:55:54,300 --> 00:55:54,800
right?

1157
00:55:55,200 --> 00:55:56,500
You got to pass both things.

1158
00:55:57,400 --> 00:55:58,100
That's okay.

1159
00:55:58,400 --> 00:56:03,200
Not really a problem and we could always copy and if you want to but

1160
00:56:03,200 --> 00:56:05,100
I'm going to leave it this way for now, because why not?

1161
00:56:05,100 --> 00:56:06,400
That's the way other things were working in.

1162
00:56:06,400 --> 00:56:07,400
I'm fine with that for now.

1163
00:56:08,300 --> 00:56:10,700
So let's see get bitmap for Cliff.

1164
00:56:11,200 --> 00:56:13,700
That's going to need both as well.

1165
00:56:13,700 --> 00:56:20,400
H a font info like so and yeah.

1166
00:56:22,500 --> 00:56:25,600
This one doesn't actually need the loaded font at all the moment it

1167
00:56:25,600 --> 00:56:29,300
just needs the info so that means we got to push those changes.

1168
00:56:29,300 --> 00:56:33,800
Back up one level and the compiler will do that for us automatically

1169
00:56:33,800 --> 00:56:34,100
right?

1170
00:56:34,100 --> 00:56:37,700
Will be here and what that means is we're going to want that font

1171
00:56:37,700 --> 00:56:38,100
info.

1172
00:56:38,100 --> 00:56:41,900
So we're going to want to h a font info, get font info.

1173
00:56:42,500 --> 00:56:45,800
And again, that's just going to be a really straightforward call to

1174
00:56:45,800 --> 00:56:46,800
get that van info.

1175
00:56:47,700 --> 00:56:50,100
And now when we

1176
00:56:52,100 --> 00:56:53,000
Come through here.

1177
00:56:53,400 --> 00:56:56,000
We're actually passing both of these right?

1178
00:56:57,700 --> 00:56:58,700
Same thing here.

1179
00:57:02,200 --> 00:57:03,700
And this guy only needs one.

1180
00:57:04,400 --> 00:57:04,900
Right?

1181
00:57:05,900 --> 00:57:09,000
And I guess for good measure, I'll have that guy take both just to

1182
00:57:09,000 --> 00:57:13,500
give us the option a little bit later on of not, you know, so we

1183
00:57:13,500 --> 00:57:16,000
don't, you know, everyone not have that.

1184
00:57:16,000 --> 00:57:19,200
And think they can get a line of ants will make that happen anyway.

1185
00:57:19,900 --> 00:57:21,400
So then we need to get font info.

1186
00:57:21,400 --> 00:57:23,100
That's again pretty straightforward.

1187
00:57:23,600 --> 00:57:26,100
We already have the get good mapinfo stuff, right?

1188
00:57:27,500 --> 00:57:30,500
Okay, map info and so we just

1189
00:57:30,700 --> 00:57:35,400
Either get font info, that's going to sort of mirror those guys so

1190
00:57:35,400 --> 00:57:38,500
that produces that ha font that we wanted.

1191
00:57:38,800 --> 00:57:45,600
There's get font info and there we go.

1192
00:57:46,000 --> 00:57:46,700
All done.

1193
00:57:47,400 --> 00:57:48,100
Oh good.

1194
00:57:48,700 --> 00:57:51,100
So now if we actually try to run, we're just going to explode because

1195
00:57:51,100 --> 00:57:54,100
we totally change the asset file layout like stuff's going to go nuts,

1196
00:57:54,100 --> 00:57:54,600
right?

1197
00:57:57,100 --> 00:57:57,900
Or not.

1198
00:57:57,900 --> 00:57:58,400
How does?

1199
00:58:00,600 --> 00:58:05,400
Every time, every time I say stuff's going to break, it doesn't break

1200
00:58:06,000 --> 00:58:08,800
every time suppose I should be happy.

1201
00:58:12,500 --> 00:58:13,100
What can you do?

1202
00:58:13,100 --> 00:58:13,900
It didn't break.

1203
00:58:16,000 --> 00:58:16,300
All right.

1204
00:58:16,300 --> 00:58:18,300
Well, I don't know to say about that.

1205
00:58:18,500 --> 00:58:20,100
We've got about two minutes left.

1206
00:58:20,200 --> 00:58:25,100
I'm going to go ahead and switch over to the test asset processor.

1207
00:58:26,100 --> 00:58:29,800
So if we're in the test as a processor here, you can imagine sort of

1208
00:58:29,800 --> 00:58:33,100
what we're going to have to do differently when we come through and do

1209
00:58:33,100 --> 00:58:34,300
our fonts, right?

1210
00:58:35,000 --> 00:58:37,300
We're going to kind of have to restructure this a little bit and I

1211
00:58:37,300 --> 00:58:38,300
guess I won't start that, that'll be.

1212
00:58:38,300 --> 00:58:41,500
What will start on tomorrow is will do that.

1213
00:58:41,500 --> 00:58:41,900
So you know what?

1214
00:58:41,900 --> 00:58:42,600
I'm not going to talk about.

1215
00:58:42,600 --> 00:58:45,400
We'll talk about all the stuff that we have to do to fix that.

1216
00:58:45,900 --> 00:58:46,500
Tomorrow.

1217
00:58:46,700 --> 00:58:47,300
So, all right.

1218
00:58:47,300 --> 00:58:48,400
We're going to leave things.

1219
00:58:48,700 --> 00:58:49,800
Leave things, broken.

1220
00:58:50,400 --> 00:58:51,700
And we'll fix them starting tomorrow.

1221
00:58:51,700 --> 00:58:56,200
We'll go to the Q&A and yeah.

1222
00:59:00,000 --> 00:59:07,500
So if you have questions about what we coded, please go ahead and send

1223
00:59:07,500 --> 00:59:11,600
them to me with q: in front of them, and we should be good to go.

1224
00:59:21,100 --> 00:59:22,400
Did you run the asset Builder?

1225
00:59:22,700 --> 00:59:24,800
No, we don't really want to run the acid Builder.

1226
00:59:24,800 --> 00:59:29,000
That's only going to make things worse because we haven't updated it

1227
00:59:29,000 --> 00:59:29,200
yet.

1228
00:59:29,200 --> 00:59:29,500
Right.

1229
00:59:29,500 --> 00:59:32,100
So that would probably put us in a bad situation, right?

1230
00:59:32,100 --> 00:59:34,100
I'm guessing now.

1231
00:59:34,100 --> 00:59:34,500
It's okay.

1232
00:59:34,600 --> 00:59:37,300
I was a little surprised at that but yeah.

1233
00:59:37,300 --> 00:59:43,500
We we don't store those font tables yet so we have to go, right?

1234
00:59:43,500 --> 00:59:45,400
The font tables and then we'll be done.

1235
00:59:46,400 --> 00:59:50,300
So tomorrow we'll write the van tables out and then we're

1236
00:59:52,900 --> 00:59:54,700
we might we might be done with well.

1237
00:59:54,700 --> 00:59:57,900
You know what, we probably want to spend a day or two on supporting

1238
00:59:58,500 --> 00:59:59,600
more languages on

1239
01:00:00,000 --> 01:00:02,800
For even if it's just rudimentary.

1240
01:00:03,300 --> 01:00:08,200
Just so we know that we've got a story about how we could translate

1241
01:00:08,200 --> 01:00:11,700
the game into Chinese or something, right?

1242
01:00:14,500 --> 01:00:17,500
I mean the artist on the game is Chinese we should at the very least

1243
01:00:17,500 --> 01:00:18,800
support Chinese, right?

1244
01:00:29,600 --> 01:00:31,100
Kubrick Caleb missed part of the stream.

1245
01:00:31,100 --> 01:00:32,100
Can you give context on?

1246
01:00:32,100 --> 01:00:33,900
Why you want the metaprogramming thing?

1247
01:00:34,600 --> 01:00:35,000
Sure.

1248
01:00:35,000 --> 01:00:38,600
It's just that, you know, if you think about the asset processor, it's

1249
01:00:38,600 --> 01:00:43,600
very there's a bunch of sort of finicky stuff that it's doing and we

1250
01:00:43,600 --> 01:00:46,700
have to do it on low on save and download, right?

1251
01:00:46,900 --> 01:00:50,900
So if you come down here and you look at, like, all of this stuff

1252
01:00:50,900 --> 01:00:55,300
where it's like, doing sort of these different right outs of where

1253
01:00:55,300 --> 01:00:58,600
things are right, then, what happens is in handmade?

1254
01:00:58,800 --> 01:01:00,000
Lassiter CPP.

1255
01:01:00,800 --> 01:01:03,800
You've got to do all these sort of fancy reads to pull them out in the

1256
01:01:03,800 --> 01:01:04,200
right order.

1257
01:01:04,300 --> 01:01:08,200
That's all it's all wrote, like there's nothing it the computer

1258
01:01:08,200 --> 01:01:09,800
doesn't need help for me to do these things.

1259
01:01:09,800 --> 01:01:13,600
It could just solve that automatically right in the same way.

1260
01:01:13,600 --> 01:01:14,500
It's just think of it.

1261
01:01:14,500 --> 01:01:15,400
Think of it the same way.

1262
01:01:15,400 --> 01:01:18,200
You think of what this is doing?

1263
01:01:18,300 --> 01:01:22,700
When I say struck HHH, HHH a sound I don't ever have to actually do

1264
01:01:22,700 --> 01:01:23,300
that, right?

1265
01:01:23,300 --> 01:01:27,400
I could just manually myself have a giant array of you 32s and know

1266
01:01:27,400 --> 01:01:28,600
that, like they go Sam.

1267
01:01:28,700 --> 01:01:31,200
Check out channel count, chain sample, count Channel, count chains,

1268
01:01:31,200 --> 01:01:34,700
and manually, address into the right one to get the sample count,

1269
01:01:34,700 --> 01:01:35,000
right?

1270
01:01:35,000 --> 01:01:38,000
I could have done that, but that's just a lot more work.

1271
01:01:38,000 --> 01:01:39,100
It's a lot more error-prone.

1272
01:01:39,500 --> 01:01:43,000
So having the C compiler, know that, I dip declaring a layout of

1273
01:01:43,000 --> 01:01:43,800
things that I can then.

1274
01:01:43,800 --> 01:01:45,300
Use my name is very handy.

1275
01:01:45,600 --> 01:01:49,300
What you wanted to do is also let you do that for variable sized data,

1276
01:01:49,400 --> 01:01:55,100
but it doesn't right, and they started to make a little bit of forward

1277
01:01:55,100 --> 01:01:57,800
progress into that in recent versions of the spec, but it's still

1278
01:01:57,800 --> 01:01:58,500
garbage.

1279
01:01:58,800 --> 01:01:59,400
um,

1280
01:02:00,800 --> 01:02:04,100
And so it's just like, whatever.

1281
01:02:04,200 --> 01:02:06,200
So that's typically where you go matter program.

1282
01:02:06,300 --> 01:02:07,700
You're just like, okay, fine.

1283
01:02:07,700 --> 01:02:09,200
You don't want to give me a language that works.

1284
01:02:09,300 --> 01:02:10,800
I'll make my own right.

1285
01:02:11,300 --> 01:02:14,900
And you can get really far, you can do a lot in terms of augmenting,

1286
01:02:14,900 --> 01:02:19,000
see to help you make these things trivial without having to take on

1287
01:02:19,000 --> 01:02:21,600
all the baggage of a higher level language.

1288
01:02:21,600 --> 01:02:24,500
That does a lot of things wrong, you know, like, you know, like a

1289
01:02:24,500 --> 01:02:26,700
python or something, where it's like, forget it, right?

1290
01:02:27,800 --> 01:02:30,100
But where you could potentially get this thing very easily.

1291
01:02:36,800 --> 01:02:39,000
How would you make the font tables more sparse?

1292
01:02:39,100 --> 01:02:41,200
So you don't need to stork earnings repairs.

1293
01:02:41,200 --> 01:02:45,900
That probably won't get drawn like ww-well if you want to store a

1294
01:02:45,900 --> 01:02:49,300
sparse table, you have a lot of ways of doing it, but probably what I

1295
01:02:49,300 --> 01:02:53,300
do is I would just store it as you know, tube to Binary trees,

1296
01:02:53,300 --> 01:02:54,900
effectively, you know.

1297
01:02:58,200 --> 01:02:59,200
Maybe I'm well.

1298
01:03:00,000 --> 01:03:01,500
It'd be kind of slow to look up into.

1299
01:03:01,500 --> 01:03:05,900
I don't know I mean I wouldn't is the answer which is why I didn't

1300
01:03:05,900 --> 01:03:09,400
because if you think about it most you know the hardest language we're

1301
01:03:09,400 --> 01:03:13,800
going to do is maybe it's something like Chinese which doesn't really

1302
01:03:13,800 --> 01:03:14,500
do kerning

1303
01:03:17,300 --> 01:03:18,500
and we can probably short-circuit.

1304
01:03:18,500 --> 01:03:21,600
So most things that have kerning pretty much all things that have

1305
01:03:21,600 --> 01:03:24,000
kerning have really low.

1306
01:03:24,000 --> 01:03:27,200
Letter counts, you know, you're talking about something like 80 glyphs

1307
01:03:27,200 --> 01:03:27,800
or something.

1308
01:03:28,300 --> 01:03:34,300
And so a 6400 entry kerning table at four bytes of peace is 25k

1309
01:03:35,900 --> 01:03:40,600
So like anything you introduced in there is going to be a pretty bad

1310
01:03:40,600 --> 01:03:42,800
idea, I think, right?

1311
01:03:43,300 --> 01:03:48,200
That's like L1 cache size, let alone, L2 cache size is how tiny that

1312
01:03:48,200 --> 01:03:48,500
is.

1313
01:03:50,000 --> 01:03:50,900
And you can compress it.

1314
01:03:50,900 --> 01:03:52,100
If you wanted to, you could make it.

1315
01:03:52,100 --> 01:03:56,400
So, instead of starting a float, you stored, 16 bits would be plenty,

1316
01:03:57,000 --> 01:03:57,500
right?

1317
01:04:04,900 --> 01:04:07,300
Can you close people that follow development of handmade here on the

1318
01:04:07,300 --> 01:04:07,600
stream?

1319
01:04:07,600 --> 01:04:09,200
How will you protect us from spoilers?

1320
01:04:09,500 --> 01:04:10,800
Unfortunately, I won't.

1321
01:04:11,100 --> 01:04:12,200
You're going to get spoilered.

1322
01:04:12,500 --> 01:04:13,900
I think where we landed on that.

1323
01:04:13,900 --> 01:04:16,500
Is I'm going to stream the whole development, right up to the point

1324
01:04:16,500 --> 01:04:17,400
where we ship it.

1325
01:04:17,500 --> 01:04:21,200
Like the day it goes like out of Early Access or whatever.

1326
01:04:21,200 --> 01:04:24,800
The thing is on Steam when we hit the like, this is now officially

1327
01:04:24,800 --> 01:04:28,800
version one I will stream and then I think where we landed was Alvin

1328
01:04:28,800 --> 01:04:30,900
probably do a DLC.

1329
01:04:32,600 --> 01:04:36,400
Or something like that, that you can add to handmade hero that will

1330
01:04:36,400 --> 01:04:38,100
not be streamed live.

1331
01:04:38,200 --> 01:04:40,800
So no one will know what's in that.

1332
01:04:43,800 --> 01:04:49,000
We may do something like that but in terms of the main game I want it

1333
01:04:49,000 --> 01:04:50,000
the whole thing stream live.

1334
01:04:50,000 --> 01:04:52,300
That's the point of the project so you're going to get spoilered.

1335
01:05:09,300 --> 01:05:15,200
OMG a giant rock says you use code Point count less than code point,

1336
01:05:15,200 --> 01:05:16,500
but will this not fail?

1337
01:05:16,500 --> 01:05:19,300
If the first code point is,

1338
01:05:20,700 --> 01:05:25,500
Not 0 or will, we need to include the ASCII control Carriage to make

1339
01:05:25,500 --> 01:05:27,000
control Point, can't work.

1340
01:05:27,600 --> 01:05:28,100
So

1341
01:05:30,400 --> 01:05:31,400
Just to be clear.

1342
01:05:32,000 --> 01:05:35,100
What we will be doing eventually is I think I mentioned this, when I

1343
01:05:35,100 --> 01:05:37,700
almost typed in the Min code Point thing, but I don't want to do that

1344
01:05:37,700 --> 01:05:38,200
yet.

1345
01:05:38,300 --> 01:05:39,900
What will eventually do is store different?

1346
01:05:39,900 --> 01:05:41,600
A few ranges of code points.

1347
01:05:43,900 --> 01:05:44,400
So

1348
01:05:45,900 --> 01:05:50,800
A will be addressing a bit of a sliding window thing, but the more

1349
01:05:50,800 --> 01:05:53,800
important thing to realize is that when we deal with this stuff in

1350
01:05:53,800 --> 01:05:59,600
here, we're eventually going to translate this into a compact code

1351
01:05:59,600 --> 01:05:59,800
point.

1352
01:06:00,000 --> 01:06:01,800
Case if that makes sense.

1353
01:06:02,200 --> 01:06:08,200
So we don't want our lookups to be based on Unicode which has tens of

1354
01:06:08,200 --> 01:06:09,200
thousands of characters in it.

1355
01:06:09,200 --> 01:06:12,800
Right what we want to do is base it on the number of glyphs actually

1356
01:06:12,800 --> 01:06:13,600
in the font.

1357
01:06:13,800 --> 01:06:16,400
So we're going to do when we do the language stuff.

1358
01:06:16,400 --> 01:06:19,000
We're going to do an additional layer that compacts things down asking

1359
01:06:19,000 --> 01:06:21,200
is already totally compact for the most part.

1360
01:06:23,200 --> 01:06:25,500
You know, we could store just a couple extra clips of the beginning

1361
01:06:25,500 --> 01:06:30,100
and be fine, but so I wouldn't think too hard about that part yet

1362
01:06:30,200 --> 01:06:32,900
because we're just not at the point when that stuff is going to take

1363
01:06:32,900 --> 01:06:33,500
place.

1364
01:06:43,300 --> 01:06:48,100
A pet dragon or a pet rad Dragon?

1365
01:06:48,600 --> 01:06:50,300
A Petra Dragon, I don't know.

1366
01:06:50,800 --> 01:06:52,800
Will you have stream later on various meta programming?

1367
01:06:52,800 --> 01:06:53,700
Tricks, some useful.

1368
01:06:53,700 --> 01:06:56,500
And if you tips and tricks for developers, I don't know.

1369
01:06:56,900 --> 01:06:59,200
Like I said, I'm committed to doing handmade hero but it's a huge

1370
01:06:59,200 --> 01:06:59,800
commitment, right?

1371
01:06:59,800 --> 01:07:02,400
I'll be streaming this thing for, like, 2 years, or more.

1372
01:07:02,400 --> 01:07:07,800
Actually, probably more because I think I said, 600 days of coding and

1373
01:07:07,800 --> 01:07:10,300
we code only five days a week on here.

1374
01:07:11,300 --> 01:07:12,800
Or is it 6:00 of coding?

1375
01:07:12,800 --> 01:07:16,200
And we code one hour a day, five days a week, which means it'll

1376
01:07:16,200 --> 01:07:17,400
actually be more than two years.

1377
01:07:17,400 --> 01:07:21,200
It'll be like two and a half years or something because we don't

1378
01:07:21,200 --> 01:07:22,300
stream on Sundays.

1379
01:07:24,300 --> 01:07:25,200
Saturdays and Sundays.

1380
01:07:32,900 --> 01:07:36,900
Which Chinese dialect are you thinking of supporting well to be clear?

1381
01:07:36,900 --> 01:07:40,900
I was thinking of just supporting all languages but we just ship with

1382
01:07:40,900 --> 01:07:44,500
whatever dialect yangshin speaks or something as an example.

1383
01:07:45,100 --> 01:07:48,200
Just so we know we were actually supporting another language properly

1384
01:07:48,300 --> 01:07:51,400
but then we just make it so that you know, I mean, since handmade here

1385
01:07:51,400 --> 01:07:53,700
is going to be open source, right?

1386
01:07:54,100 --> 01:07:58,200
Like I said, within two years of its shipping everything will be open

1387
01:07:58,200 --> 01:07:59,400
sourced, right?

1388
01:07:59,600 --> 01:08:01,900
That means other people can ship language packs.

1389
01:08:02,200 --> 01:08:04,900
And furthermore actually people could ship language packs right away

1390
01:08:04,900 --> 01:08:09,500
because your allow you you know we parse process although the asset

1391
01:08:09,500 --> 01:08:11,400
files in the directory at startup.

1392
01:08:11,400 --> 01:08:15,400
So people could just make their own translations and put them in

1393
01:08:15,400 --> 01:08:17,100
there, probably right.

1394
01:08:17,100 --> 01:08:20,100
And so so people can Port it to languages.

1395
01:08:20,100 --> 01:08:23,500
It doesn't matter what I ship will be trying to make it so that people

1396
01:08:23,500 --> 01:08:26,300
who want to translate the game to some other language, that's not

1397
01:08:26,300 --> 01:08:29,600
supported in the official build can just do it without having to,

1398
01:08:29,600 --> 01:08:30,800
like, talk to us about it.

1399
01:08:31,100 --> 01:08:31,899
That would be mine.

1400
01:08:32,100 --> 01:08:32,600
I hope.

1401
01:08:35,300 --> 01:08:36,399
Each junkie 64.

1402
01:08:36,399 --> 01:08:38,700
How big do you think the game will be in the end?

1403
01:08:39,000 --> 01:08:41,300
It will be so huge.

1404
01:08:41,700 --> 01:08:45,500
That no computer can possibly hold it.

1405
01:08:46,200 --> 01:08:47,700
What if a computer tries to run the game?

1406
01:08:47,700 --> 01:08:49,500
It will complete collapse into a black hole.

1407
01:08:52,200 --> 01:08:53,899
Ostrava scav lad.

1408
01:08:53,899 --> 01:08:55,700
How about right-to-left languages?

1409
01:08:56,899 --> 01:08:59,800
I'm not averse to it, I mean supporting right-to-left languages as

1410
01:09:00,000 --> 01:09:04,700
For trivial, it's so trivial that I don't even know if the routine

1411
01:09:04,700 --> 01:09:07,899
changes, the only thing that we have to change is the starting

1412
01:09:08,500 --> 01:09:10,200
alignment, right?

1413
01:09:10,399 --> 01:09:14,200
The only thing that changes in the entire code that you've seen so far

1414
01:09:16,800 --> 01:09:17,800
Is.

1415
01:09:20,700 --> 01:09:24,100
This right here instead of left edges right Edge, that's it.

1416
01:09:24,700 --> 01:09:28,200
That's the only thing all the rest of our code does not assume a

1417
01:09:28,200 --> 01:09:30,399
direction, right?

1418
01:09:30,600 --> 01:09:34,200
Because keep in mind, all of the glyphs have an anchor point.

1419
01:09:34,200 --> 01:09:37,000
So that Anchor Point could simply be in the bottom right corner,

1420
01:09:37,000 --> 01:09:40,700
instead of the bottom left corner and then the kerning table, says,

1421
01:09:40,700 --> 01:09:43,100
how far to advance it would just have negative numbers in it.

1422
01:09:44,200 --> 01:09:44,700
Done.

1423
01:09:46,200 --> 01:09:46,700
Right?

1424
01:09:47,899 --> 01:09:51,200
So the only thing that would have to change is our centering code.

1425
01:09:52,700 --> 01:09:56,000
That's about it and that wouldn't be very hard for us to do.

1426
01:09:56,000 --> 01:09:58,100
So we could we could do that if people really wanted to

1427
01:10:02,600 --> 01:10:03,200
Hey, look at that.

1428
01:10:03,200 --> 01:10:05,100
We are done with questions, right?

1429
01:10:05,100 --> 01:10:06,300
As the stream is over.

1430
01:10:07,700 --> 01:10:08,800
How is it possible?

1431
01:10:09,000 --> 01:10:10,500
How are we that perfect.

1432
01:10:10,500 --> 01:10:11,200
And that's you guys.

1433
01:10:11,200 --> 01:10:11,900
That's not me.

1434
01:10:12,000 --> 01:10:12,700
That's all you.

1435
01:10:13,200 --> 01:10:14,600
You ended the questions, right?

1436
01:10:14,600 --> 01:10:15,600
As the stream ended.

1437
01:10:17,100 --> 01:10:21,000
That is some data, some next-level stuff you guys just did, right?

1438
01:10:21,300 --> 01:10:22,200
That's insane.

1439
01:10:22,600 --> 01:10:23,600
How do you even do it?

1440
01:10:25,800 --> 01:10:28,200
In case anyone is wondering who has the best audience on Twitch, I

1441
01:10:28,200 --> 01:10:31,700
obviously do because they nailed that ending and that's not easy

1442
01:10:31,700 --> 01:10:33,600
considering the lag, right?

1443
01:10:33,900 --> 01:10:34,900
It's crazy.

1444
01:10:37,300 --> 01:10:38,000
That's crazy.

1445
01:10:39,700 --> 01:10:40,500
All right.

1446
01:10:42,000 --> 01:10:43,000
Let's wind it down.

1447
01:10:50,700 --> 01:10:53,000
Let's wind it down, folks.

1448
01:10:54,100 --> 01:10:56,700
Okay, thank you, everyone for joining me for another episode of

1449
01:10:56,700 --> 01:10:57,300
handmade hero.

1450
01:10:57,300 --> 01:10:58,400
It's been a pleasure coding with you.

1451
01:10:58,400 --> 01:11:01,900
As always, we got about halfway through the stuff we want to do with,

1452
01:11:02,500 --> 01:11:05,800
with updating our fonts to use creating tables and also have other

1453
01:11:05,800 --> 01:11:06,400
good stuff.

1454
01:11:07,200 --> 01:11:09,600
And I think we'll be able to pretty much get that working tomorrow,

1455
01:11:09,600 --> 01:11:11,400
because we did all the specking of it.

1456
01:11:11,500 --> 01:11:15,100
We just have to write the asset like flow through, which can be a

1457
01:11:15,100 --> 01:11:17,300
little finicky at times, but I don't think it should be too hard.

1458
01:11:17,600 --> 01:11:20,000
So I think by the end of tomorrow, we should be in pretty good shape,

1459
01:11:20,000 --> 01:11:21,400
on our fonts, pretty good shape.

1460
01:11:21,800 --> 01:11:23,700
And like I said, from there, I think we might

1461
01:11:23,900 --> 01:11:25,000
Not want to move on immediately.

1462
01:11:25,000 --> 01:11:28,700
I think we might do a little more work just to make sure that we have

1463
01:11:28,700 --> 01:11:34,200
a plausible story and a plausible story in place for how we support

1464
01:11:34,200 --> 01:11:35,000
multiple languages.

1465
01:11:35,000 --> 01:11:37,900
So that were not kind of caught totally by surprise later when we

1466
01:11:37,900 --> 01:11:41,000
decide we want to point it to another language and go, oh my God,

1467
01:11:41,000 --> 01:11:43,000
we've like baked in all these assumptions that don't work.

1468
01:11:43,000 --> 01:11:47,300
When you change to tie or would you change to Hebrew or something?

1469
01:11:47,300 --> 01:11:48,300
Who knows, right?

1470
01:11:49,400 --> 01:11:50,000
All right.

1471
01:11:50,800 --> 01:11:52,500
So that's about it.

1472
01:11:52,500 --> 01:11:55,800
I hope you'll join me tomorrow, for the conclusion of this coding.

1473
01:11:56,600 --> 01:11:57,400
It'll be same place.

1474
01:11:57,400 --> 01:11:58,700
Same time, 5 p.m.

1475
01:11:58,700 --> 01:11:59,700
Pacific Daylight time, right?

1476
01:12:00,000 --> 01:12:02,700
On Twitch until then if you want to play around the source code you

1477
01:12:02,700 --> 01:12:05,800
can always get it by pre-ordering the game on handmade hero dot org

1478
01:12:06,000 --> 01:12:09,600
and you can go ahead and download the source code every night after I

1479
01:12:09,600 --> 01:12:11,800
finish working on it and play around with it yourself.

1480
01:12:12,300 --> 01:12:15,100
Similarly, if you would like to support the video series, you can

1481
01:12:15,100 --> 01:12:17,800
always support us on patreon, it's always very much appreciated.

1482
01:12:18,000 --> 01:12:21,100
We also have a forum site, you can go to where you can ask questions

1483
01:12:21,100 --> 01:12:24,100
and get community contributions like anti.

1484
01:12:24,100 --> 01:12:27,500
Oh so guide and forced to Mac and Linux good stuff like that and we

1485
01:12:27,500 --> 01:12:29,800
have a tweet bot that tweets the schedule at you.

1486
01:12:30,000 --> 01:12:34,700
You, I also got most of the GitHub stuff working, I believe, crossing

1487
01:12:34,700 --> 01:12:39,600
my fingers, I need to do some testing here and I got to figure out a

1488
01:12:39,600 --> 01:12:41,500
little bit in terms of their API.

1489
01:12:41,500 --> 01:12:44,600
Like making sure I'm actually handling errors like rate limiting and

1490
01:12:44,600 --> 01:12:48,600
stuff correctly because their API is really janky.

1491
01:12:49,400 --> 01:12:52,800
So I'm working on that and so I hope to have an announcement sometime

1492
01:12:52,800 --> 01:12:56,700
soon that we are in some kind of official beta testing where people

1493
01:12:56,700 --> 01:12:59,700
besides me are actually playing with it and seeing if it's working.

1494
01:13:00,500 --> 01:13:03,400
In terms of getting authorization, but so stay tuned for that.

1495
01:13:03,700 --> 01:13:06,500
Maybe later this week, maybe next week, but I'm pretty hopeful that

1496
01:13:06,500 --> 01:13:07,400
we're getting there.

1497
01:13:07,400 --> 01:13:10,100
It's been a bit of a grind, but it, but it's getting there.

1498
01:13:10,500 --> 01:13:13,000
So stay tuned for that until then.

1499
01:13:14,100 --> 01:13:17,700
I will see you guys on the internet, have fun coating.

1500
01:13:18,200 --> 01:13:19,000
Take it easy, everyone.

