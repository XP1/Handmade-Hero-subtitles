1
00:00:00,100 --> 00:00:01,300
And then a start recording.

2
00:00:01,600 --> 00:00:02,100
There we go.

3
00:00:03,300 --> 00:00:05,400
Welcome everyone to handmade hero.

4
00:00:05,500 --> 00:00:11,800
We are here on day 23 which basically maps to 23 hours on stream and

5
00:00:11,800 --> 00:00:16,400
we are closing in on the end of our work with the win32 platform

6
00:00:16,400 --> 00:00:16,600
layer.

7
00:00:16,600 --> 00:00:20,400
We finished substantively all the stuff we needed to do last week.

8
00:00:20,600 --> 00:00:24,000
But this week we are basically spending a little extra time to do some

9
00:00:24,000 --> 00:00:26,300
fun and pretty powerful stuff with it.

10
00:00:26,400 --> 00:00:29,900
So the past two days, I showed how you could have your C code.

11
00:00:30,000 --> 00:00:33,300
Code be dynamically reloading all the time so that basically, you

12
00:00:33,300 --> 00:00:36,300
never have to close the game and reopen it while you are tuning.

13
00:00:36,300 --> 00:00:39,100
You can just go ahead and update your code and it live updates

14
00:00:39,100 --> 00:00:39,600
directly.

15
00:00:39,600 --> 00:00:41,900
So like basically, just like everything you might want from a

16
00:00:41,900 --> 00:00:42,500
scripting language.

17
00:00:42,500 --> 00:00:46,000
You can just get straight ahead with C code, which is pretty awesome.

18
00:00:46,000 --> 00:00:48,300
And we and we played around with that a bit and it's working really

19
00:00:48,300 --> 00:00:48,500
well.

20
00:00:48,500 --> 00:00:53,800
Now works on to the debugger and it reloads instantaneously, so I'm

21
00:00:53,800 --> 00:00:55,500
pretty happy with how that turned out.

22
00:00:55,800 --> 00:00:59,800
But today I wanted to show how to do something even cooler.

23
00:01:01,200 --> 00:01:03,400
I've actually never seen done before.

24
00:01:03,400 --> 00:01:07,100
I mean, I've done it before but I've never seen anyone talk about it

25
00:01:07,100 --> 00:01:07,700
or mention it.

26
00:01:07,700 --> 00:01:10,200
So I don't know if other people are doing it and I just have never

27
00:01:10,200 --> 00:01:12,500
seen their write-ups or maybe they're doing it, and they just never

28
00:01:12,500 --> 00:01:13,200
told anyone.

29
00:01:13,900 --> 00:01:16,800
But I'm kind of excited about it because I don't think anyone's ever

30
00:01:16,800 --> 00:01:17,700
actually presented it.

31
00:01:17,700 --> 00:01:18,500
Maybe not.

32
00:01:19,100 --> 00:01:21,400
We'll see, but it's pretty exciting.

33
00:01:21,400 --> 00:01:24,400
I think because it's really cool feature that you can do very easily.

34
00:01:24,400 --> 00:01:26,800
If you've architected things properly, it's actually very difficult to

35
00:01:26,800 --> 00:01:30,000
do if you haven't, but since we've architected things properly,

36
00:01:30,200 --> 00:01:32,500
Can be very easy for us to do, I suspect?

37
00:01:32,500 --> 00:01:34,800
So with that in mind.

38
00:01:36,000 --> 00:01:40,100
Welcome to handmade hero day 23, where we coded entire game from

39
00:01:40,100 --> 00:01:43,900
scratch using no libraries and no engines or anything.

40
00:01:43,900 --> 00:01:47,500
Just so we can see how absolutely everything works in entire game

41
00:01:47,500 --> 00:01:50,500
stack, which I think is very educational and also very empowering

42
00:01:50,500 --> 00:01:52,800
because it means you can always write anything you need to even if you

43
00:01:52,800 --> 00:01:55,400
are using an engine or a library, you can drop right down in there and

44
00:01:55,400 --> 00:01:55,900
fix stuff.

45
00:01:55,900 --> 00:01:59,300
If you need to or write your own stuff, if the engine falls short, or

46
00:01:59,300 --> 00:02:00,000
something isn't working.

47
00:02:00,100 --> 00:02:03,700
Okay, and it just allows you to understand how engines are working and

48
00:02:03,700 --> 00:02:08,300
it allows you to better sort of manage them from your side of things.

49
00:02:08,300 --> 00:02:11,600
So even if you are using engines or libraries knowing how all this

50
00:02:11,600 --> 00:02:15,200
stuff works under the hood, can be a very, very powerful tool when the

51
00:02:15,200 --> 00:02:16,000
time comes.

52
00:02:16,300 --> 00:02:20,700
So with that, in mind, if you have pre-ordered the game, you should

53
00:02:20,700 --> 00:02:22,800
have gotten a link in your email where you can download a zip file

54
00:02:22,800 --> 00:02:25,600
which has every single day source code in there.

55
00:02:25,800 --> 00:02:29,300
So if you want to since we're on day 23, you can unzip day, 22 source

56
00:02:29,300 --> 00:02:29,800
code.

57
00:02:30,200 --> 00:02:34,000
And when you do that, you will be in the exact same place that I am

58
00:02:34,200 --> 00:02:35,000
right now.

59
00:02:35,200 --> 00:02:38,000
Okay, so I'm going to go ahead and jump right into it because we have

60
00:02:38,000 --> 00:02:41,800
a lot to do today to get to the thing that I want to show you.

61
00:02:42,300 --> 00:02:45,300
So let's get started.

62
00:02:45,800 --> 00:02:46,300
Basically.

63
00:02:46,300 --> 00:02:50,300
What I want to point out now is we have what we did.

64
00:02:50,400 --> 00:02:51,800
It was a pretty darn cool.

65
00:02:52,200 --> 00:02:56,600
We basically do have, you know, most of what I would want for

66
00:02:56,600 --> 00:02:59,300
something, where you can do Live code anything, right?

67
00:02:59,300 --> 00:02:59,900
I

68
00:03:00,000 --> 00:03:04,000
On the game and we've basically shown this sort of simple.

69
00:03:04,000 --> 00:03:06,700
We don't really have since we haven't been working on the game.

70
00:03:06,700 --> 00:03:10,100
We've just been working on platform code and stuff like that and all

71
00:03:10,100 --> 00:03:13,000
the sorts of things that we need to do to support the game on Windows.

72
00:03:13,600 --> 00:03:16,700
We basically haven't had a chance to do much in the way of an actual

73
00:03:16,700 --> 00:03:17,200
game.

74
00:03:17,400 --> 00:03:21,700
But of course, we have demoed the fact that we can live change,

75
00:03:21,700 --> 00:03:25,100
anything that we want, and it immediately updates pretty much

76
00:03:25,100 --> 00:03:27,800
instantaneously upon change in the editor.

77
00:03:27,800 --> 00:03:29,800
So that's pretty awesome, but

78
00:03:30,000 --> 00:03:33,400
If you think about what happens in a game usually, you know, like

79
00:03:33,400 --> 00:03:35,600
we've just got this kind of toy thing running over here, but pretty

80
00:03:35,600 --> 00:03:37,800
soon, you know, over the next month or two.

81
00:03:37,800 --> 00:03:39,500
We're going to be building actual game stuff.

82
00:03:39,500 --> 00:03:42,000
And there's going to be a real game running in here and things won't

83
00:03:42,000 --> 00:03:43,000
be so simple.

84
00:03:43,100 --> 00:03:47,700
In terms of actually being able to see the results of code changes,

85
00:03:47,700 --> 00:03:48,400
right?

86
00:03:48,800 --> 00:03:52,700
Basically, what's going to happen is we're going to have user input

87
00:03:52,700 --> 00:03:54,500
and they're going to be moving a character around and they're going to

88
00:03:54,500 --> 00:03:55,600
do stuff, right?

89
00:03:56,200 --> 00:03:59,900
And so I just want to quickly create a little very

90
00:04:00,500 --> 00:04:02,200
Example of what that's going to be.

91
00:04:02,200 --> 00:04:05,000
Like, just to point out where we're going to run into problems with

92
00:04:05,000 --> 00:04:05,900
this Live code editing.

93
00:04:05,900 --> 00:04:06,300
And to be fair.

94
00:04:06,300 --> 00:04:07,100
It's not anything wrong.

95
00:04:07,100 --> 00:04:09,800
With our live coding, our lab coding at this point, is as good or

96
00:04:09,800 --> 00:04:11,400
better than mostly anything.

97
00:04:11,400 --> 00:04:13,300
I see out there in in other stuff.

98
00:04:13,600 --> 00:04:14,400
So are our live.

99
00:04:14,400 --> 00:04:17,100
Coding is good right now, but I want to make it way better.

100
00:04:17,100 --> 00:04:21,200
I want to make it so much better that it's going to be like you you

101
00:04:21,200 --> 00:04:23,800
would not dream of using something else after you saw this, if that

102
00:04:23,800 --> 00:04:26,700
makes sense, but in order to demo, why this is going to be cool.

103
00:04:26,700 --> 00:04:29,800
I just need a little bit of something that uses some user input or

104
00:04:29,900 --> 00:04:33,200
Thing so that we can kind of see what happens when you actually want

105
00:04:33,200 --> 00:04:35,000
to tune something in a game.

106
00:04:35,200 --> 00:04:38,300
So I'm going to go into here to our sort of stand in game code that we

107
00:04:38,300 --> 00:04:38,500
did.

108
00:04:38,500 --> 00:04:41,500
That's just sitting here waiting for us to start writing a game in it.

109
00:04:41,900 --> 00:04:45,300
And what I'm going to do is inside you remember we have our game State

110
00:04:45,300 --> 00:04:48,100
thing, where we start some say, I'm just going to add like a very

111
00:04:48,100 --> 00:04:49,500
simple player ex-player.

112
00:04:49,500 --> 00:04:50,800
Why just?

113
00:04:50,800 --> 00:04:54,400
Just so we have like a location where we're pretending the player is

114
00:04:54,400 --> 00:04:54,900
right?

115
00:04:55,200 --> 00:04:58,300
And then I'm just going to flat out say, all right, when we come in

116
00:04:58,300 --> 00:04:59,800
here and initialize that I'm

117
00:05:00,000 --> 00:05:01,700
To pretend the player is somewhere.

118
00:05:01,700 --> 00:05:03,400
I don't know where he's at 100.

119
00:05:03,400 --> 00:05:03,800
100.

120
00:05:03,800 --> 00:05:04,900
Let's say, right?

121
00:05:04,900 --> 00:05:06,800
Just just something real basic like that.

122
00:05:07,200 --> 00:05:09,700
So we, the player starts out at some random location on the screen.

123
00:05:09,700 --> 00:05:11,500
Again, we're not thinking this through, it doesn't matter.

124
00:05:11,500 --> 00:05:13,400
Is just a simple example.

125
00:05:13,800 --> 00:05:18,600
And then what I'm going to do here is I'm going to do inside our our

126
00:05:18,600 --> 00:05:21,500
code, for the keyboard handling, or the non analog handling.

127
00:05:21,500 --> 00:05:22,100
Basically.

128
00:05:22,500 --> 00:05:23,500
I'm just going to go ahead.

129
00:05:23,500 --> 00:05:23,900
Well, you know what?

130
00:05:23,900 --> 00:05:27,100
I'll just use that that stick average X and the stick average y.

131
00:05:27,100 --> 00:05:29,700
So, I'm just going to go ahead and for any

132
00:05:29,900 --> 00:05:31,800
controller, no matter what it is.

133
00:05:31,900 --> 00:05:35,500
I'm just going to go ahead and take the player X and the player, why?

134
00:05:35,800 --> 00:05:37,100
And I'm just going to add to them.

135
00:05:37,100 --> 00:05:40,900
Whatever these stick values are like it just again, I don't even care.

136
00:05:40,900 --> 00:05:41,700
What's going on here.

137
00:05:41,900 --> 00:05:43,800
I'm just going to I'm just going to do that straight away.

138
00:05:44,000 --> 00:05:47,900
And then when we do render weird gradient, I'm also going to have a

139
00:05:48,400 --> 00:05:51,500
ridiculous function called render player.

140
00:05:51,600 --> 00:05:55,700
It is like player in real big quotes here, which will basically just

141
00:05:55,700 --> 00:05:57,500
be, excuse me.

142
00:05:58,700 --> 00:05:59,800
Something that draws.

143
00:06:00,500 --> 00:06:03,300
Anything whatever we can think of to the player location.

144
00:06:03,300 --> 00:06:05,800
Now, of course, we already have some code in here and we'll be writing

145
00:06:05,800 --> 00:06:07,400
our own rendering code very soon.

146
00:06:07,400 --> 00:06:11,300
So we won't have to be so slapdash and sloppy about this but against

147
00:06:11,300 --> 00:06:13,400
it, you know, one thing at a time, we got to go in order.

148
00:06:13,900 --> 00:06:18,400
So basically we have this this win32 debug draw vertical thing, right,

149
00:06:18,500 --> 00:06:23,300
which basically just kind of goes through here and does this does this

150
00:06:23,300 --> 00:06:24,300
nonsense, right?

151
00:06:24,500 --> 00:06:28,900
Basically, what it does is it, it'll draw one vertical line and we

152
00:06:28,900 --> 00:06:29,700
were using it.

153
00:06:30,100 --> 00:06:32,200
Draw these hash marks, right?

154
00:06:32,600 --> 00:06:36,000
So what I'll do is, I'll just do something which basically, you know,

155
00:06:36,100 --> 00:06:40,800
basically does that I'll just do something which which, which let's

156
00:06:40,800 --> 00:06:41,300
see here.

157
00:06:42,000 --> 00:06:44,800
Okay, there we go.

158
00:06:45,300 --> 00:06:47,400
Something that basically just Loops through the X and Y.

159
00:06:47,400 --> 00:06:48,100
In fact, you know what?

160
00:06:48,100 --> 00:06:51,700
Now that I think about it, and if this would be easier, well, now

161
00:06:51,700 --> 00:06:52,400
probably not.

162
00:06:52,600 --> 00:06:56,800
So basically I'll just do something that Loops over some x's, right.

163
00:06:57,100 --> 00:06:57,600
It'll start.

164
00:06:57,600 --> 00:06:59,400
Let's say at the player X.

165
00:07:00,000 --> 00:07:05,800
It'll go to the player x + 10 or something like this, and it'll add to

166
00:07:05,800 --> 00:07:06,000
X.

167
00:07:06,000 --> 00:07:07,500
So, just just the most basic thing.

168
00:07:07,500 --> 00:07:08,700
You could possibly imagine.

169
00:07:09,200 --> 00:07:14,200
And this thing will basically be top will be player, why?

170
00:07:14,800 --> 00:07:17,900
And bottom will be player, y plus 10.

171
00:07:17,900 --> 00:07:20,500
So just making a simple 10 by 10 rectangle.

172
00:07:20,900 --> 00:07:23,100
And I'm going to go ahead and fill that stuff in.

173
00:07:23,100 --> 00:07:26,100
Now this will full-on crash if we if the player moves outside the

174
00:07:26,100 --> 00:07:26,500
window.

175
00:07:26,500 --> 00:07:29,300
So this is this is the like absolute worst code.

176
00:07:29,300 --> 00:07:29,900
You could possibly imagine

177
00:07:30,200 --> 00:07:31,400
Okay, this is never code.

178
00:07:31,400 --> 00:07:33,600
We would even dream of putting the app.

179
00:07:33,600 --> 00:07:35,500
I'm literally just slapping in there because we haven't written a

180
00:07:35,500 --> 00:07:37,800
render yet and I just need to put something on the screen.

181
00:07:38,600 --> 00:07:43,300
So I need to basically pass in a player X and a player.

182
00:07:43,300 --> 00:07:44,100
Why here?

183
00:07:44,800 --> 00:07:49,300
And then let me take a look at actually what I don't actually remember

184
00:07:49,300 --> 00:07:52,700
what these these calls are here.

185
00:07:52,700 --> 00:07:54,900
So it's a buffer memory.

186
00:07:55,300 --> 00:07:57,500
We're going to need buffer, bytes per pixel.

187
00:07:57,500 --> 00:07:59,700
Although we actually don't even need that at this point because

188
00:08:00,200 --> 00:08:02,100
I don't know if we're going to basically fix that value.

189
00:08:02,100 --> 00:08:05,500
This is this is basically for here, but I can go ahead and add that to

190
00:08:05,500 --> 00:08:06,100
our thing.

191
00:08:06,500 --> 00:08:10,200
Since seems like it might be nice to just have it there for code that

192
00:08:10,200 --> 00:08:10,800
could work.

193
00:08:10,800 --> 00:08:11,400
Either way.

194
00:08:12,100 --> 00:08:13,300
Let's go ahead and do that.

195
00:08:13,400 --> 00:08:17,000
So I'm going to go in here where we, where we pass that buffer to the

196
00:08:17,000 --> 00:08:19,400
game, and I'm going to go ahead and add that in there.

197
00:08:19,600 --> 00:08:28,700
So this right here, buffer will be like the pixel, oops, pixel for

198
00:08:28,700 --> 00:08:29,200
Pixel.

199
00:08:30,500 --> 00:08:32,400
And then I'm going to take a look at compiling this.

200
00:08:32,400 --> 00:08:34,799
All right, so the color for the player.

201
00:08:35,000 --> 00:08:36,500
I don't know what color the players should be.

202
00:08:36,900 --> 00:08:39,700
Maybe the player will just be a white rectangle.

203
00:08:39,700 --> 00:08:40,299
For now.

204
00:08:40,900 --> 00:08:45,600
The back buffer is just buffer at this point render player now needs

205
00:08:45,600 --> 00:08:47,500
to get called by somebody.

206
00:08:48,200 --> 00:08:54,800
So we go down here and we will just do it right here to render the

207
00:08:54,800 --> 00:08:55,300
player.

208
00:08:55,500 --> 00:08:56,100
Okay.

209
00:08:56,500 --> 00:08:59,400
So basically just a quick, you know, five-minute thing here, where we

210
00:08:59,400 --> 00:08:59,900
actually

211
00:09:00,100 --> 00:09:01,300
Have something going.

212
00:09:01,300 --> 00:09:02,200
So I don't know if this'll work.

213
00:09:02,200 --> 00:09:06,700
I just kind of slapped it in there, but there is my player, see it,

214
00:09:06,700 --> 00:09:07,200
right there.

215
00:09:08,000 --> 00:09:10,900
And I do not actually know if I can move him.

216
00:09:11,800 --> 00:09:12,500
Okay, I can.

217
00:09:13,700 --> 00:09:17,000
So I have my game pad here and you can see that I can move my play

218
00:09:17,000 --> 00:09:17,500
around.

219
00:09:17,600 --> 00:09:17,800
Of course.

220
00:09:17,800 --> 00:09:20,000
It's a little wonky because I've got the stick mapped wrong.

221
00:09:20,400 --> 00:09:23,600
Let's go ahead and I didn't think about that.

222
00:09:24,200 --> 00:09:29,900
The y direction of the stick-up is actually up is positive.

223
00:09:30,000 --> 00:09:30,900
Of and down is negative.

224
00:09:30,900 --> 00:09:33,000
So we're going to have to go ahead and reverse that there.

225
00:09:33,600 --> 00:09:34,100
But yeah.

226
00:09:34,800 --> 00:09:35,100
Hmm.

227
00:09:35,700 --> 00:09:40,200
So I've got this little guy and I'm moving him around, right?

228
00:09:40,400 --> 00:09:45,000
So basically just imagine that this and I should probably I should

229
00:09:45,000 --> 00:09:48,800
probably turn off the gradient motion and and for God's sake, turn off

230
00:09:48,800 --> 00:09:53,800
the sound wave, so maybe let's just say that game output sound from

231
00:09:53,800 --> 00:09:54,400
now on.

232
00:09:55,400 --> 00:09:59,800
Let's let's go ahead and and and pretend that we're we're just quiet.

233
00:10:00,400 --> 00:10:03,500
We just, we just don't need all this, all this sound happening.

234
00:10:03,800 --> 00:10:09,100
So let's go ahead and and, and basically do this here.

235
00:10:10,100 --> 00:10:10,700
There we go.

236
00:10:11,400 --> 00:10:15,100
So instead of computing that sine value, let's just to, let's just do

237
00:10:15,700 --> 00:10:18,600
quiet because that's going to get really annoying.

238
00:10:19,200 --> 00:10:19,800
All right.

239
00:10:19,800 --> 00:10:21,800
So anyway, here is our little here.

240
00:10:21,800 --> 00:10:24,900
Is our little guy who's moving around.

241
00:10:25,100 --> 00:10:25,900
Why did that?

242
00:10:25,900 --> 00:10:27,000
That was a little odd?

243
00:10:27,400 --> 00:10:28,800
I feel like that's a little odd.

244
00:10:29,100 --> 00:10:29,800
There's a bit of a

245
00:10:29,900 --> 00:10:32,200
Framerate did I did I do something stupid there?

246
00:10:32,700 --> 00:10:33,600
I don't know if I did.

247
00:10:36,600 --> 00:10:38,400
You can see I don't know if you could see that.

248
00:10:38,700 --> 00:10:41,400
But basically I was getting a weird kind of frame rate, hitch

249
00:10:41,400 --> 00:10:42,100
happening there.

250
00:10:43,000 --> 00:10:44,400
I don't actually know why it is.

251
00:10:46,000 --> 00:10:49,800
I think that it's weird because our game still is running at 33

252
00:10:50,500 --> 00:10:51,600
milliseconds per frame.

253
00:10:52,300 --> 00:10:54,300
All right, so we'll have to take a look at that a little bit later.

254
00:10:54,400 --> 00:10:55,200
Although, that may again.

255
00:10:55,200 --> 00:10:59,900
Be sometimes OBS creates a lot of problems for framerate stuff.

256
00:10:59,900 --> 00:11:02,700
So it's hard for me to always know whether it's something we'd look at

257
00:11:02,700 --> 00:11:03,200
or not.

258
00:11:03,300 --> 00:11:04,600
But basically, all I did is right.

259
00:11:04,600 --> 00:11:06,200
I just made a little rectangle here that I can move.

260
00:11:06,400 --> 00:11:07,600
On the screen that's it.

261
00:11:08,100 --> 00:11:13,500
And so what I'd like to do is I'd like to be able to, I just, I just

262
00:11:13,500 --> 00:11:15,800
needed something where I could show sort of what a game would normally

263
00:11:15,800 --> 00:11:16,100
doing.

264
00:11:16,100 --> 00:11:20,400
So I can show what's Difficult about about tuning code.

265
00:11:20,600 --> 00:11:24,800
So let's say right that what I want to do now that I've got.

266
00:11:24,800 --> 00:11:28,500
This is I want to implement a way that this dude can jump or something

267
00:11:28,500 --> 00:11:29,100
like that.

268
00:11:29,200 --> 00:11:29,600
Right?

269
00:11:29,600 --> 00:11:33,900
I want to have it so that when you push the button the dude jumps and

270
00:11:33,900 --> 00:11:36,200
so I'm going to go ahead and just Implement something.

271
00:11:36,300 --> 00:11:38,000
Oh, they're like if action down, right.

272
00:11:38,000 --> 00:11:39,900
We've got this action down thing happening.

273
00:11:40,500 --> 00:11:44,600
So if action ended down, then we're also going to pretend that the

274
00:11:44,600 --> 00:11:46,000
player, you know, jump here.

275
00:11:46,000 --> 00:11:46,800
We're going to move.

276
00:11:46,800 --> 00:11:52,000
We're going to discontinuously move him up the screen by 10 by 10

277
00:11:52,000 --> 00:11:54,100
pixels or whatever for right now, right?

278
00:11:55,100 --> 00:11:58,500
So, I've got my guy moving around, I hit the button and you can see

279
00:11:58,500 --> 00:11:59,700
when the button goes down.

280
00:12:01,900 --> 00:12:03,200
He jumps, right?

281
00:12:03,400 --> 00:12:05,000
And he doesn't come back down or anything.

282
00:12:05,000 --> 00:12:05,100
Right?

283
00:12:05,100 --> 00:12:06,700
I'm just showing you kind of what the deal is.

284
00:12:06,700 --> 00:12:07,400
So that's it.

285
00:12:07,400 --> 00:12:07,900
Right?

286
00:12:08,200 --> 00:12:12,400
Well, let's suppose now that we want to work on our code for the jump

287
00:12:12,500 --> 00:12:14,800
so you can tell that the jump is ridiculous.

288
00:12:14,800 --> 00:12:15,500
It's totally stupid.

289
00:12:15,500 --> 00:12:17,400
In fact, all the player movement code is awful.

290
00:12:18,100 --> 00:12:20,900
So what I would have to do if I was doing this live, right?

291
00:12:20,900 --> 00:12:24,600
If I'm if I'm if I was tuning this code, even with our Live code

292
00:12:24,600 --> 00:12:27,100
editing, here is the process that has to go through it.

293
00:12:27,100 --> 00:12:27,400
All right.

294
00:12:27,400 --> 00:12:28,600
Well, what happens with the jump?

295
00:12:28,600 --> 00:12:29,800
Well, I push the jump button.

296
00:12:30,000 --> 00:12:31,500
And he doesn't come back down.

297
00:12:31,900 --> 00:12:35,800
So I guess I need to add like a timer or something in here or

298
00:12:35,800 --> 00:12:36,600
something like this.

299
00:12:36,600 --> 00:12:36,900
Right?

300
00:12:36,900 --> 00:12:39,700
So I'm going to have a timer in the game State.

301
00:12:39,700 --> 00:12:40,400
I don't know.

302
00:12:40,700 --> 00:12:44,700
Something that's like, maybe a velocity, right?

303
00:12:44,700 --> 00:12:49,000
So I've got a player velocity in y, or something like this.

304
00:12:49,500 --> 00:12:51,900
And I'm going to set that to something and then I'm going to change it

305
00:12:51,900 --> 00:12:53,700
over time or maybe I just have a timer.

306
00:12:53,700 --> 00:12:54,600
So, like I just have a t.

307
00:12:54,600 --> 00:12:55,400
Jump timer.

308
00:12:55,400 --> 00:12:55,700
I don't know.

309
00:12:55,700 --> 00:12:56,600
Something like that.

310
00:12:57,100 --> 00:12:58,400
So then I come in here and I go.

311
00:12:58,400 --> 00:12:59,800
All right, the T jump timer.

312
00:13:01,100 --> 00:13:03,400
It's going to be, I don't know the game State.

313
00:13:03,400 --> 00:13:04,500
When he jumps the T.

314
00:13:04,500 --> 00:13:09,300
Jump timer is going to be equal to one second and then basically like,

315
00:13:09,300 --> 00:13:11,700
you know, I don't know, we add the sign of the T.

316
00:13:11,700 --> 00:13:15,900
Jump timer kind of thing like this.

317
00:13:15,900 --> 00:13:18,700
I don't know what's going on and I do that.

318
00:13:18,700 --> 00:13:22,600
And then every time we go through the frame, I subtract something from

319
00:13:22,600 --> 00:13:25,600
the T, jump timer, you know, I don't know, something like this.

320
00:13:25,600 --> 00:13:29,500
I don't even know for a passing the, the frames per second in hear

321
00:13:29,500 --> 00:13:29,800
anything.

322
00:13:30,000 --> 00:13:31,100
Like that, but you get the idea.

323
00:13:31,100 --> 00:13:34,500
Like I'm going to, I'm going to have to do a bunch of coding in here.

324
00:13:35,100 --> 00:13:35,800
Let's see here.

325
00:13:35,800 --> 00:13:37,900
I've got to actually add that inside there.

326
00:13:38,300 --> 00:13:41,100
So I'm just, I'm gonna have to do a bunch of weird coding in here to

327
00:13:41,100 --> 00:13:43,400
make this jump code, actually do something.

328
00:13:43,900 --> 00:13:47,100
So when I, when I'm actually doing it, I have to then make those

329
00:13:47,100 --> 00:13:48,600
changes come back in here.

330
00:13:48,700 --> 00:13:49,400
Push the button.

331
00:13:49,400 --> 00:13:51,000
Okay, like that didn't do anything.

332
00:13:51,000 --> 00:13:51,600
Right?

333
00:13:51,800 --> 00:13:53,400
And of course, it makes sense that didn't do anything, because I'm not

334
00:13:53,400 --> 00:13:54,200
multiplying this by anything.

335
00:13:54,200 --> 00:13:58,000
So, I have to come back out here and I guess since we're doing the

336
00:13:58,000 --> 00:13:59,800
live coding, I could leave it running.

337
00:14:00,000 --> 00:14:01,700
I can leave this guy running and that's fine.

338
00:14:02,000 --> 00:14:05,400
But when I come back in here, I have to do, like, okay, I edit it

339
00:14:05,500 --> 00:14:06,100
right.

340
00:14:06,100 --> 00:14:07,000
Recompile.

341
00:14:07,100 --> 00:14:08,700
And now the code is live or whatever.

342
00:14:08,700 --> 00:14:10,700
But, oh well, do we have a

343
00:14:11,600 --> 00:14:16,400
Oh, I may have to actually make this guy.

344
00:14:16,400 --> 00:14:19,900
I may have to actually prevent this guy from running out of bounds.

345
00:14:19,900 --> 00:14:23,100
Like I said, this guy will write out of bounds whenever the the player

346
00:14:23,100 --> 00:14:24,500
actually gets to the bottom of the screen.

347
00:14:24,500 --> 00:14:29,500
So I may have to do an actual, an actual attempt here at preventing

348
00:14:29,500 --> 00:14:31,700
this guy from actually writing out of bounds.

349
00:14:31,700 --> 00:14:37,800
So, let's just do something really simple, which is if pixel, if the

350
00:14:37,800 --> 00:14:40,500
pixel pointer is, is in bounds, it will do it.

351
00:14:40,500 --> 00:14:40,900
Again.

352
00:14:40,900 --> 00:14:41,600
This is absolutely.

353
00:14:41,700 --> 00:14:42,400
Or add code.

354
00:14:42,800 --> 00:14:45,800
I apologize for being so horrid on the stream, but I just want to.

355
00:14:46,100 --> 00:14:53,000
I'm literally only doing this to prevent to show kind of why we want

356
00:14:53,000 --> 00:14:54,400
the thing that I'm going to show you how to build.

357
00:14:54,400 --> 00:14:57,200
Because if we had already written the game, then it would be very easy

358
00:14:57,200 --> 00:14:59,600
to show or had some part of a game running, would be very easy to

359
00:14:59,600 --> 00:14:59,800
show.

360
00:15:00,400 --> 00:15:05,900
Why the thing that I want to do is interesting but without having any

361
00:15:05,900 --> 00:15:07,500
of that, it's much easier.

362
00:15:07,600 --> 00:15:08,100
All right.

363
00:15:08,500 --> 00:15:08,900
Bye sorry.

364
00:15:08,900 --> 00:15:09,400
It's much harder.

365
00:15:09,500 --> 00:15:12,000
So I could need something if that makes sense.

366
00:15:12,300 --> 00:15:12,500
All right.

367
00:15:12,500 --> 00:15:15,400
So basically we have the buffer memory here.

368
00:15:15,500 --> 00:15:19,200
I'm just going to add the full size of the buffer in there.

369
00:15:20,000 --> 00:15:27,200
So the bytes per pixel times, the width plus the pitch, times the

370
00:15:27,200 --> 00:15:29,900
height, so I'm just going to add in basically the

371
00:15:30,000 --> 00:15:31,500
Tire size of the buffer?

372
00:15:31,500 --> 00:15:31,800
Again.

373
00:15:31,800 --> 00:15:33,400
Do not worry about this code at all.

374
00:15:33,400 --> 00:15:37,100
I will be explaining renderers in detail when we get there, and I just

375
00:15:37,100 --> 00:15:39,700
don't want to belabor the point at the moment because it doesn't

376
00:15:39,700 --> 00:15:40,000
matter.

377
00:15:40,500 --> 00:15:41,100
All right.

378
00:15:41,400 --> 00:15:43,200
So anyway, here we go.

379
00:15:44,400 --> 00:15:45,800
You can now see that my junk code.

380
00:15:45,800 --> 00:15:46,000
Awesome.

381
00:15:46,000 --> 00:15:48,900
As it is, isn't even waiting for the timer to be set, right?

382
00:15:48,900 --> 00:15:49,800
Because it's just always working.

383
00:15:49,800 --> 00:15:51,700
And basically what I had to do is make it so that when this thing goes

384
00:15:51,700 --> 00:15:53,600
out of bounds, we don't crash because when it would go, you would be

385
00:15:53,600 --> 00:15:56,000
writing out of memory when we go here, right?

386
00:15:56,300 --> 00:15:57,300
So, all right, so I'm doing this.

387
00:15:57,300 --> 00:15:59,500
So I do this thing and I'm like, oh, right.

388
00:15:59,600 --> 00:16:02,100
The timer isn't is totally messed up.

389
00:16:02,100 --> 00:16:05,800
It's not right at all, because it keeps going down.

390
00:16:05,800 --> 00:16:08,600
So, I flip back here, whatever I go.

391
00:16:08,600 --> 00:16:13,900
All right, you know, so we got to do this, this game T, jump thing.

392
00:16:14,400 --> 00:16:16,100
But that should only be happening.

393
00:16:16,900 --> 00:16:21,600
Basically, if T, jump is greater, you know, is greater than some

394
00:16:21,600 --> 00:16:25,500
threshold value like, you know, so basically, what I want to do here

395
00:16:25,700 --> 00:16:32,000
is say, if game State T, jump is greater than 0.

396
00:16:32,100 --> 00:16:35,400
Then we will, do, you know this piece of code or whatever.

397
00:16:35,500 --> 00:16:36,500
Otherwise we won't.

398
00:16:36,500 --> 00:16:38,300
So, you know, will do that.

399
00:16:38,700 --> 00:16:42,700
We will do something like this and there we go.

400
00:16:45,500 --> 00:16:46,500
And there.

401
00:16:46,900 --> 00:16:47,900
So I do that.

402
00:16:47,900 --> 00:16:48,100
Okay.

403
00:16:48,100 --> 00:16:51,700
I got an error there, got to convert this to it and done.

404
00:16:51,900 --> 00:16:53,000
So I come back here.

405
00:16:53,000 --> 00:16:55,800
And now at least, you know, it's a bit better, but I got to pick up

406
00:16:55,800 --> 00:16:56,800
the controller again.

407
00:16:56,800 --> 00:16:57,900
I got to get back to somewhere.

408
00:16:57,900 --> 00:16:58,500
I want to test.

409
00:16:58,500 --> 00:17:01,300
I got to push the button Loop and the jump goes downwards.

410
00:17:01,300 --> 00:17:01,800
Right?

411
00:17:01,900 --> 00:17:02,400
Not at all.

412
00:17:02,400 --> 00:17:03,000
What I wanted.

413
00:17:03,000 --> 00:17:03,900
Sign goes downwards.

414
00:17:03,900 --> 00:17:04,400
Okay.

415
00:17:04,500 --> 00:17:04,900
All right.

416
00:17:05,000 --> 00:17:07,000
So, stop flip back here.

417
00:17:07,099 --> 00:17:08,500
I got to go ahead and say, all right.

418
00:17:08,500 --> 00:17:10,300
This should be going the other direction.

419
00:17:10,300 --> 00:17:11,400
I run it again.

420
00:17:11,400 --> 00:17:12,000
Come back here.

421
00:17:12,000 --> 00:17:12,800
Pick the controller.

422
00:17:12,800 --> 00:17:13,200
Back up.

423
00:17:13,200 --> 00:17:14,400
Take my hand off the keyboard.

424
00:17:14,800 --> 00:17:16,000
Do it right?

425
00:17:16,099 --> 00:17:18,099
So you can see what I'm basically trying to say here.

426
00:17:18,300 --> 00:17:23,400
There's this whole process where I have to keep going like like this

427
00:17:23,400 --> 00:17:27,700
is a problem because I got to like, pick up the controller tests.

428
00:17:27,700 --> 00:17:30,500
The thing I want, go back to the code change, the code come back here

429
00:17:30,500 --> 00:17:32,400
and you can imagine if there was more State.

430
00:17:32,400 --> 00:17:34,600
Like, if there is an enemy, what if I kill the enemy while now?

431
00:17:34,600 --> 00:17:35,600
The enemy is gone.

432
00:17:35,800 --> 00:17:37,200
And so that firing the missile.

433
00:17:37,200 --> 00:17:39,400
And what if the missile only had, I only have one missile left.

434
00:17:39,400 --> 00:17:41,200
Do I, add a cheeky to add more missiles?

435
00:17:41,300 --> 00:17:43,600
There's all these kind of annoyances in there that make it not as

436
00:17:43,600 --> 00:17:44,400
smooth as

437
00:17:44,500 --> 00:17:46,300
As I would want it to be right.

438
00:17:47,100 --> 00:17:51,000
So what I would like to do instead is make it so that this can

439
00:17:51,000 --> 00:17:54,600
basically be like the way musicians edit stuff, right?

440
00:17:57,500 --> 00:17:59,600
I basically want to create something that's sort of like a

441
00:18:00,000 --> 00:18:03,600
Editor where I can just go ahead and say, okay.

442
00:18:05,200 --> 00:18:07,000
I'm going to record something being done.

443
00:18:07,600 --> 00:18:11,500
And then I want you to just keep doing that thing over and over again.

444
00:18:11,500 --> 00:18:13,100
Exactly the way I did it.

445
00:18:13,200 --> 00:18:15,500
As I tune the code for it.

446
00:18:16,100 --> 00:18:16,800
Does that make sense?

447
00:18:19,300 --> 00:18:22,800
So, you know, I just I want to make something that's essentially like

448
00:18:22,800 --> 00:18:24,200
a loop editor, but for code.

449
00:18:24,900 --> 00:18:26,000
So, how do I do that?

450
00:18:26,500 --> 00:18:30,300
Well, it turns out like I said, if you architect everything, properly,

451
00:18:30,300 --> 00:18:33,400
this ends up being actually extremely easy because think about how we

452
00:18:33,400 --> 00:18:34,300
have set up our game.

453
00:18:35,000 --> 00:18:38,000
There if we don't care about sound for now because we have a separate

454
00:18:38,000 --> 00:18:39,400
set way that sound comes in.

455
00:18:39,800 --> 00:18:45,600
But if all we're trying to tune is stuff besides the the literal sound

456
00:18:45,600 --> 00:18:46,400
output code.

457
00:18:47,200 --> 00:18:49,400
We only have one function that's called right?

458
00:18:49,500 --> 00:18:50,800
It's called updated render.

459
00:18:51,300 --> 00:18:54,000
We know it takes the memory, that's whatever the state of the game is.

460
00:18:54,200 --> 00:18:56,900
We knew it takes whatever the input is on this Frame and then it just

461
00:18:56,900 --> 00:19:00,600
takes wherever we want it to draw to write whatever we want it to

462
00:19:00,600 --> 00:19:01,000
draw.

463
00:19:01,500 --> 00:19:02,200
That's it.

464
00:19:03,000 --> 00:19:04,400
so, if we wanted to,

465
00:19:05,600 --> 00:19:08,900
We could certainly start doing something relatively straightforward

466
00:19:08,900 --> 00:19:10,200
here by saying.

467
00:19:10,400 --> 00:19:13,800
All right, what if we just record whatever this new input thing is, we

468
00:19:13,800 --> 00:19:16,300
just remember whatever that is, right?

469
00:19:16,700 --> 00:19:19,800
And then we feed it back.

470
00:19:19,800 --> 00:19:23,900
Instead of actually producing the input before we pass the thing here.

471
00:19:23,900 --> 00:19:28,100
We just actually see whatever the previous input thing was right.

472
00:19:28,400 --> 00:19:29,600
We just record it.

473
00:19:29,700 --> 00:19:32,700
And go seems pretty straightforward, right?

474
00:19:33,600 --> 00:19:37,000
So if we want to, we could basically introduce something right that

475
00:19:37,000 --> 00:19:40,400
captures this input because we know it's just a flat struck.

476
00:19:40,400 --> 00:19:42,000
We made it very simple, right?

477
00:19:42,100 --> 00:19:44,200
It's really trivial to capture.

478
00:19:44,300 --> 00:19:46,000
It's just one of these, right?

479
00:19:46,100 --> 00:19:51,700
So you could imagine having something that was like, you know, win32

480
00:19:51,700 --> 00:19:52,900
recorded input, right?

481
00:19:52,900 --> 00:19:57,300
You could imagine as constructing something, that looked like this,

482
00:19:57,400 --> 00:19:57,900
right?

483
00:19:58,500 --> 00:20:03,300
There's an input stream, write something like this and there's

484
00:20:03,400 --> 00:20:05,100
Input count, right?

485
00:20:05,100 --> 00:20:09,100
And it would basically say, all right, as we go, we just remember all

486
00:20:09,100 --> 00:20:11,400
of the, the inputs that we had, we stuff them in here.

487
00:20:11,400 --> 00:20:13,400
And then later, when we want to play it back.

488
00:20:13,400 --> 00:20:19,700
We just go ahead and grab them out of here progressively, right?

489
00:20:20,400 --> 00:20:21,600
Very, very, very simple.

490
00:20:21,600 --> 00:20:24,600
There's really nothing weird going on about that at all.

491
00:20:25,600 --> 00:20:29,300
Furthermore, if we wanted to, we already know how to do file I/O.

492
00:20:29,800 --> 00:20:34,800
So if we want, we actually don't even really need to do to me.

493
00:20:35,500 --> 00:20:37,200
We don't even really need to store it in memory, right?

494
00:20:37,200 --> 00:20:41,200
We could just log it out to a drive and save it that way.

495
00:20:41,200 --> 00:20:42,700
So, it was permanent right?

496
00:20:42,700 --> 00:20:44,600
We could just read and write from a file.

497
00:20:45,200 --> 00:20:49,700
So basically, there really wouldn't be very much to at least that

498
00:20:49,700 --> 00:20:50,600
part, right?

499
00:20:50,800 --> 00:20:53,200
So let's think about how we might implement this.

500
00:20:55,300 --> 00:20:58,300
All I really need to do is sort of know whether I'm recording

501
00:20:58,300 --> 00:20:59,600
something, right?

502
00:21:00,100 --> 00:21:03,000
Maybe I'll have a variable here and, you know, I might want to record

503
00:21:03,000 --> 00:21:04,300
multiple of these or something.

504
00:21:04,300 --> 00:21:09,800
So, maybe I could just introduce a variable here called like recording

505
00:21:09,800 --> 00:21:11,300
index or something.

506
00:21:11,500 --> 00:21:14,800
And recording index will be equal to 0, right.

507
00:21:14,900 --> 00:21:17,400
So, when we're running, we also have a recording index and that

508
00:21:17,400 --> 00:21:19,600
recording index is equal to 0.

509
00:21:19,600 --> 00:21:22,000
And similarly, if we were playing something back.

510
00:21:22,000 --> 00:21:23,800
Maybe I'll have a playing index.

511
00:21:24,700 --> 00:21:28,100
Look at input, according index in an input playing Index, right?

512
00:21:28,300 --> 00:21:29,900
And basically, if these are equal to 0 then

513
00:21:30,000 --> 00:21:33,600
We are not playing or recording but if they're equal to something else

514
00:21:33,600 --> 00:21:35,800
then we're well think of it as like a slot.

515
00:21:35,800 --> 00:21:38,900
Basically that things are in make some sense.

516
00:21:38,900 --> 00:21:40,400
It seems pretty straightforward, right?

517
00:21:40,400 --> 00:21:42,600
I don't think there's anything particularly odd about that.

518
00:21:43,300 --> 00:21:48,100
So if we want to now, basically, what I can do is I can sort of

519
00:21:49,800 --> 00:21:52,600
Well, I guess there is one, we do have a bit of a thing.

520
00:21:52,600 --> 00:21:55,300
That's a little Annoying here, which is that we kind of have our

521
00:21:55,300 --> 00:21:58,900
keyboard processing up here and we'd like to start using that keyboard

522
00:21:58,900 --> 00:22:00,000
processing to affect some stuff.

523
00:22:00,000 --> 00:22:03,100
So, it would kind of be nice if we had these things, sort of starting

524
00:22:03,100 --> 00:22:04,400
to be centralized in something.

525
00:22:04,600 --> 00:22:07,300
So, maybe, you know, I'd like to do something like this, which is

526
00:22:07,300 --> 00:22:11,700
win32 state or something like this where I have something like that,

527
00:22:11,700 --> 00:22:12,200
right?

528
00:22:12,200 --> 00:22:16,300
And, and that has some of these sort of globally, sorts of things in

529
00:22:16,300 --> 00:22:16,700
it.

530
00:22:16,800 --> 00:22:19,100
So, I have win32 state.

531
00:22:19,300 --> 00:22:20,100
And that's here.

532
00:22:20,200 --> 00:22:23,000
And so I'm just going to go ahead and wrap those in a struct so that I

533
00:22:23,000 --> 00:22:24,100
can pass them around.

534
00:22:24,200 --> 00:22:27,500
Because, basically, what I want to do is I basically want to do is

535
00:22:27,500 --> 00:22:31,700
make basically, I say basically a lot what I want to do is I want to

536
00:22:31,700 --> 00:22:35,200
make it so that we can record things by just hitting a simple key.

537
00:22:35,200 --> 00:22:39,600
So basically, I look to see if we have hit the L key.

538
00:22:39,600 --> 00:22:41,600
Let's say for Loop, right?

539
00:22:42,300 --> 00:22:46,500
And what we'll do is we'll say, we'll take a look, if maybe, if the

540
00:22:46,500 --> 00:22:47,800
shift key was down.

541
00:22:48,400 --> 00:22:49,100
I don't know if

542
00:22:49,200 --> 00:22:50,800
Or what was the easiest thing to do?

543
00:22:50,800 --> 00:22:52,600
There was the the ALT key was down.

544
00:22:52,900 --> 00:22:55,900
So we'll go ahead and well, actually, we don't even need that.

545
00:22:56,000 --> 00:22:56,900
I don't think we need that at all.

546
00:22:57,500 --> 00:23:00,100
If you press the L key, that'll go into Loop mode.

547
00:23:00,100 --> 00:23:00,700
Let's say.

548
00:23:01,100 --> 00:23:06,400
And then if you push one of the number keys that will indicate what

549
00:23:06,400 --> 00:23:07,500
slot you want to record in.

550
00:23:07,500 --> 00:23:11,100
So will basically say will push L and then one will like start

551
00:23:11,100 --> 00:23:15,600
recording input to slot 1 and then you push L again and it stops the

552
00:23:15,600 --> 00:23:17,000
recording at that point, right?

553
00:23:17,000 --> 00:23:19,100
So l 1 starts recording L stops it and

554
00:23:19,400 --> 00:23:23,200
Then on if you hit one, it'll start replaying that slot.

555
00:23:23,300 --> 00:23:24,000
Right?

556
00:23:24,500 --> 00:23:29,200
So let's go ahead and do it that way for now.

557
00:23:29,200 --> 00:23:31,400
I guess what I can do is just hard code it so we don't have to do the

558
00:23:31,400 --> 00:23:33,600
one, two, three processing, because I can show you how to do that in a

559
00:23:33,600 --> 00:23:34,200
second.

560
00:23:34,400 --> 00:23:38,700
But so let's just say that if you hit the L key, then the win32 state

561
00:23:39,100 --> 00:23:41,800
the the input recording Index, right?

562
00:23:42,100 --> 00:23:47,300
Becomes one, if it already equal that.

563
00:23:47,400 --> 00:23:49,100
So if the if it equals 1

564
00:23:49,200 --> 00:23:52,800
Already or if it equals 0, it's that otherwise we stop, right?

565
00:23:52,800 --> 00:23:56,500
Otherwise, we will real set it back to zero so base.

566
00:23:56,500 --> 00:23:57,600
We're just making a toggle here.

567
00:23:57,600 --> 00:23:58,400
We hit L.

568
00:23:58,400 --> 00:23:59,800
We start recording, we hit L again.

569
00:24:00,100 --> 00:24:01,100
We stopped recording.

570
00:24:01,300 --> 00:24:06,700
And since we're testing here will switch right to playing back as

571
00:24:06,700 --> 00:24:07,000
well.

572
00:24:08,400 --> 00:24:09,000
Makes sense.

573
00:24:09,200 --> 00:24:10,400
All right, pretty straightforward.

574
00:24:10,400 --> 00:24:12,400
I think not much to to do there.

575
00:24:12,800 --> 00:24:13,400
Alright.

576
00:24:13,500 --> 00:24:16,900
So basically I've got these these playing indexes and, and that sort

577
00:24:16,900 --> 00:24:20,000
of stuff move those into here.

578
00:24:20,700 --> 00:24:26,300
And so, basically, we just replace those with with our own struck

579
00:24:26,300 --> 00:24:29,200
there and we can start putting other stuff in there as well.

580
00:24:29,200 --> 00:24:31,700
So, this will kind of be a nice holder for things that we want to be

581
00:24:31,700 --> 00:24:32,800
accessed outside.

582
00:24:33,100 --> 00:24:34,800
So I go ahead and do that.

583
00:24:34,800 --> 00:24:37,600
And now all I really need is I need to

584
00:24:38,200 --> 00:24:41,300
Look at those when we're about to use that input, right?

585
00:24:41,300 --> 00:24:43,400
So right here, we have new input.

586
00:24:43,500 --> 00:24:47,600
And what I want to do is I just want to say well, if the win32 state

587
00:24:47,700 --> 00:24:48,300
right?

588
00:24:50,300 --> 00:24:53,300
Has a input recording Index, right?

589
00:24:53,300 --> 00:24:57,300
If it's on if recording is on, then I want to call something like

590
00:24:57,300 --> 00:25:00,500
win32 record input like this.

591
00:25:00,900 --> 00:25:05,500
And I want to record this input that just came in and if the win32

592
00:25:05,500 --> 00:25:09,100
state is is playing back something, right?

593
00:25:09,300 --> 00:25:16,000
Then what I want to do is, is playback the input, and so I'm going to

594
00:25:16,000 --> 00:25:19,700
overwrite whatever new input was with whatever the input is.

595
00:25:20,200 --> 00:25:20,500
Whatever.

596
00:25:20,500 --> 00:25:22,800
I'm basically going to get.

597
00:25:23,800 --> 00:25:27,800
She's me whatever that thing reads from the stream of previous inputs.

598
00:25:27,800 --> 00:25:28,800
It's going to put it in there.

599
00:25:33,500 --> 00:25:34,800
Very, very straightforward, right?

600
00:25:35,800 --> 00:25:37,100
So we've got these two functions.

601
00:25:39,600 --> 00:25:41,800
Really, really simple again.

602
00:25:41,800 --> 00:25:43,100
Nothing fancy Happening Here.

603
00:25:44,000 --> 00:25:44,300
Really?

604
00:25:44,300 --> 00:25:48,200
All we have to do is Implement these very straightforward.

605
00:25:48,200 --> 00:25:49,700
So I've got my win32 state.

606
00:25:49,700 --> 00:25:52,000
I'll have to go change that to a pointer down there when I, and then

607
00:25:52,000 --> 00:25:56,600
I've got my game input, that's coming in here.

608
00:25:56,900 --> 00:25:58,200
So we've got those two things.

609
00:25:58,400 --> 00:26:00,300
That's our record input.

610
00:26:00,400 --> 00:26:03,400
Then I've got another one here that's going to play with the input

611
00:26:03,400 --> 00:26:09,200
back in through a two-state this and input.

612
00:26:09,400 --> 00:26:10,100
New input.

613
00:26:10,200 --> 00:26:10,900
So there we go.

614
00:26:11,500 --> 00:26:16,300
And all I need to do is I just need to either write in the record

615
00:26:16,300 --> 00:26:16,500
function.

616
00:26:16,500 --> 00:26:18,900
I need to write it to a file in the playback input.

617
00:26:18,900 --> 00:26:21,000
I just need to read it from a file, right?

618
00:26:21,000 --> 00:26:21,600
That's it.

619
00:26:22,400 --> 00:26:26,500
So assuming that I have a file handle, which I could totally do,

620
00:26:26,500 --> 00:26:26,700
right?

621
00:26:26,700 --> 00:26:30,700
I'll have a file handle here, which is recording handle, and I'll have

622
00:26:30,700 --> 00:26:32,000
a file handle here.

623
00:26:32,000 --> 00:26:36,700
Oops, which is playback handle, and we'll have to actually open these

624
00:26:36,700 --> 00:26:39,000
files with win32 at some

625
00:26:39,300 --> 00:26:41,100
ain't, but I've got those and so I'll go, all right.

626
00:26:42,700 --> 00:26:44,200
I've got this recording handle.

627
00:26:44,300 --> 00:26:48,600
So basically all I need to do is just write this out and we already

628
00:26:48,600 --> 00:26:49,400
saw how to do this.

629
00:26:49,400 --> 00:26:50,800
Remember we have our right file.

630
00:26:50,800 --> 00:26:53,600
In fact, we already wrote a thing that writes an entire file.

631
00:26:53,600 --> 00:26:55,300
It was just this, right?

632
00:26:55,900 --> 00:26:57,200
That's that's the entirety of it.

633
00:26:57,200 --> 00:26:58,400
We just need the file handle.

634
00:26:59,000 --> 00:26:59,800
So we need whatever fine.

635
00:27:00,000 --> 00:27:03,000
Louis, we need the memory, which is the new input, right?

636
00:27:03,000 --> 00:27:06,900
We need the memory size, which is just the size of that struct, that

637
00:27:06,900 --> 00:27:07,900
new input struct.

638
00:27:08,300 --> 00:27:10,800
And then we don't even really care about the B written, because if it

639
00:27:10,800 --> 00:27:12,700
fails, it's just a bug code, we don't even care if it fails.

640
00:27:13,300 --> 00:27:15,900
So just we're just going to try to write and hope that it writes,

641
00:27:16,000 --> 00:27:16,400
right.

642
00:27:16,400 --> 00:27:17,100
So that's it.

643
00:27:17,400 --> 00:27:19,800
So that's all we really need to do to write it.

644
00:27:20,100 --> 00:27:22,400
So we write that to the recording handle, right?

645
00:27:22,500 --> 00:27:23,100
That's it.

646
00:27:24,100 --> 00:27:28,500
And then the same is the exact same thing happens with the read file,

647
00:27:28,900 --> 00:27:29,400
right?

648
00:27:31,200 --> 00:27:32,100
Where is that guy?

649
00:27:32,100 --> 00:27:33,600
It's the wrong function.

650
00:27:33,600 --> 00:27:34,200
There we go.

651
00:27:35,200 --> 00:27:36,700
So read file.

652
00:27:39,400 --> 00:27:40,200
Same thing again.

653
00:27:40,800 --> 00:27:43,000
So we basically have our B red.

654
00:27:43,800 --> 00:27:45,200
We don't really need to look at it right now.

655
00:27:45,200 --> 00:27:47,400
We will have to eventually when we want to get the looping stuff

656
00:27:47,400 --> 00:27:50,400
working, but that's that's the second.

657
00:27:50,800 --> 00:27:52,200
So win32 state.

658
00:27:54,000 --> 00:27:56,000
Playback handle I think it's what I called it.

659
00:27:56,000 --> 00:27:57,400
Yeah handle.

660
00:27:58,600 --> 00:28:00,500
And so then we just need to do the exact same thing.

661
00:28:00,500 --> 00:28:00,900
Here.

662
00:28:00,900 --> 00:28:02,000
We pass the new input.

663
00:28:02,000 --> 00:28:02,900
That's what we're writing.

664
00:28:03,200 --> 00:28:07,800
We passed the size of the new new input and and we're done, right?

665
00:28:07,800 --> 00:28:11,300
So this is literally all we actually need to do to record and Playback

666
00:28:11,300 --> 00:28:12,400
the input, right?

667
00:28:12,400 --> 00:28:13,200
That's going to happen.

668
00:28:13,800 --> 00:28:19,300
And then we also have the case of when we actually first start

669
00:28:19,300 --> 00:28:19,900
recording.

670
00:28:20,300 --> 00:28:23,700
So we basically have to do, essentially something that goes back to

671
00:28:23,700 --> 00:28:23,700
the

672
00:28:23,900 --> 00:28:26,600
Getting of the recording or opens, you know, opens whatever this file

673
00:28:26,600 --> 00:28:28,500
handle is, that sort of thing.

674
00:28:28,700 --> 00:28:34,200
So we need something that's basically like begin recording input or

675
00:28:34,200 --> 00:28:35,100
something like this.

676
00:28:36,500 --> 00:28:36,900
Right?

677
00:28:37,000 --> 00:28:38,000
And then we'll need something.

678
00:28:38,000 --> 00:28:42,200
Also, that's like when 32 and recording and put write something like

679
00:28:42,200 --> 00:28:42,600
that.

680
00:28:43,100 --> 00:28:45,400
And these will basically just be the things that get these file

681
00:28:45,400 --> 00:28:46,400
Handles in the first place.

682
00:28:46,600 --> 00:28:48,200
So to begin recording input.

683
00:28:49,100 --> 00:28:52,000
We're going to just go ahead and do a create file just like we did

684
00:28:52,000 --> 00:28:52,500
before.

685
00:28:52,700 --> 00:28:55,600
Do, you know to open the file handle with Windows say, hey, let's

686
00:28:55,600 --> 00:28:56,600
let's get this back.

687
00:28:57,000 --> 00:28:57,700
So there we go.

688
00:28:58,300 --> 00:29:00,400
So we need to open our recording handle here.

689
00:29:01,700 --> 00:29:03,400
We're going to go ahead and create file.

690
00:29:03,400 --> 00:29:05,800
We want generic right play Bridges this time because we're actually

691
00:29:05,800 --> 00:29:06,100
running to

692
00:29:06,300 --> 00:29:06,500
File.

693
00:29:06,500 --> 00:29:10,800
In fact, I should copy the create file that we did for the other one.

694
00:29:10,800 --> 00:29:13,400
Because that's the one we actually want to make a file here.

695
00:29:14,100 --> 00:29:16,600
So we have our file name for now.

696
00:29:17,000 --> 00:29:21,500
We'll just be fuu dot handmade hero.

697
00:29:21,500 --> 00:29:22,700
Let's say, I don't know.

698
00:29:22,700 --> 00:29:23,700
That's probably a bad name.

699
00:29:23,800 --> 00:29:26,600
Handmade recording, handmade input.

700
00:29:26,700 --> 00:29:27,100
I don't know.

701
00:29:27,800 --> 00:29:30,400
We're going to deal with that in a second obviously, so we got our

702
00:29:30,400 --> 00:29:31,200
file name here.

703
00:29:31,200 --> 00:29:33,800
I never can decide whether file name should be capitalized, inter Caps

704
00:29:33,800 --> 00:29:35,300
or not and I use it interchangeably.

705
00:29:35,300 --> 00:29:36,100
Encode it drives me nuts.

706
00:29:36,200 --> 00:29:39,000
What's I wish I had a consistent way of doing it.

707
00:29:39,300 --> 00:29:41,300
So basically we go ahead and do the recording handle.

708
00:29:41,300 --> 00:29:42,300
We open that up.

709
00:29:44,400 --> 00:29:49,000
That's pretty straightforward and we can even go ahead and say that

710
00:29:49,000 --> 00:29:53,200
recording real past that input recording index here.

711
00:29:53,400 --> 00:29:53,700
Right?

712
00:29:53,700 --> 00:29:55,900
And we'll say went through to State input recording index.

713
00:29:55,900 --> 00:29:59,800
It wasn't recording index will do the open, and then in here.

714
00:30:00,100 --> 00:30:04,200
We'll do a close handle on that and then we're done.

715
00:30:05,600 --> 00:30:06,500
That's all we need to do.

716
00:30:07,800 --> 00:30:14,500
And so, basically, these guys will move up here to above, I'm putting

717
00:30:14,500 --> 00:30:16,200
them above because we're going to call them in here.

718
00:30:17,000 --> 00:30:20,200
And I don't want to bother having to forward, declare them things.

719
00:30:20,200 --> 00:30:21,100
You wouldn't have to worry about.

720
00:30:21,100 --> 00:30:23,300
If you're a programming in John, blows new language because you don't

721
00:30:23,300 --> 00:30:25,200
have to worry about any of that stuff anymore.

722
00:30:25,600 --> 00:30:27,100
So that's going to be pretty awesome and that happens.

723
00:30:27,100 --> 00:30:29,900
But yeah, so when 3 to begin recording,

724
00:30:30,000 --> 00:30:34,200
Hoarding, it's going to begin recording, input 1, and this will be R

725
00:30:34,200 --> 00:30:36,800
in 32 and recording input.

726
00:30:37,600 --> 00:30:47,000
And then it'll be winter to begin with input playback and will also be

727
00:30:47,000 --> 00:30:47,400
one.

728
00:30:47,700 --> 00:30:48,200
There we go.

729
00:30:49,200 --> 00:30:51,700
So, yeah, so that's really all we need to do when we hit L.

730
00:30:51,800 --> 00:30:54,800
If we were weren't recording something, we ask it to start.

731
00:30:55,200 --> 00:30:58,600
Otherwise, we ask it to stop recording and then to start doing

732
00:30:58,600 --> 00:30:59,200
playback.

733
00:30:59,300 --> 00:30:59,800
And so

734
00:31:00,200 --> 00:31:01,200
you know, we've got

735
00:31:04,000 --> 00:31:09,700
we've got to do the equivalent of these two functions and

736
00:31:12,300 --> 00:31:17,200
All right, again, it's playback.

737
00:31:17,200 --> 00:31:18,500
That's another inter caps one.

738
00:31:18,900 --> 00:31:21,700
Should it be playback or playback?

739
00:31:22,000 --> 00:31:22,800
You know what I'm saying?

740
00:31:23,500 --> 00:31:24,400
You know what I'm saying?

741
00:31:24,800 --> 00:31:25,400
I don't know.

742
00:31:25,500 --> 00:31:26,400
See and I've done it.

743
00:31:26,400 --> 00:31:27,600
I've done it, two different ways.

744
00:31:27,700 --> 00:31:30,500
That's just, it's maddening when I don't know how it should be.

745
00:31:31,100 --> 00:31:33,700
I feel like there should be some kind of a style guide that tells you

746
00:31:33,900 --> 00:31:36,900
where there are the word breaks in playback filename that sort of

747
00:31:36,900 --> 00:31:37,300
thing.

748
00:31:38,300 --> 00:31:41,300
And so these are actually wrong now because

749
00:31:42,000 --> 00:31:45,400
Again, for closing the handle on the end of playback is fine.

750
00:31:45,600 --> 00:31:49,400
But we do have a problem where our create file is the wrong kind of

751
00:31:49,400 --> 00:31:51,000
pray for all that's creating a, right.

752
00:31:51,100 --> 00:31:52,100
So we want to copy again.

753
00:31:52,100 --> 00:31:55,500
The, the one that we used for reading the file, this one right here.

754
00:31:55,900 --> 00:31:56,400
There we go.

755
00:31:57,300 --> 00:32:01,000
And, and that should be fine because we're always going to open an

756
00:32:01,000 --> 00:32:04,200
existing one for our playback handle.

757
00:32:05,100 --> 00:32:05,700
So,

758
00:32:07,400 --> 00:32:10,100
That's about it for those guys.

759
00:32:10,600 --> 00:32:12,500
So if you think about what that's going to do, right?

760
00:32:13,300 --> 00:32:16,600
When we hit that Elke, we should start just recording in our input to

761
00:32:16,600 --> 00:32:18,700
this food out HTML HMI file.

762
00:32:19,400 --> 00:32:22,600
Then when we stop that, we're going to start reading it again.

763
00:32:22,600 --> 00:32:26,000
Now when we're actually doing the reading, the input in our, in our

764
00:32:26,000 --> 00:32:29,400
like, in our playback phase where we're actually reading stuff.

765
00:32:29,400 --> 00:32:33,700
We do want to know when this starts to fail because when it fails we

766
00:32:33,700 --> 00:32:37,000
want to go back to the beginning if we're trying to Loop, right, so,

767
00:32:37,100 --> 00:32:41,800
We would want to do here, is, we basically want to do a win32 and

768
00:32:41,800 --> 00:32:46,000
input playback, and then win32 begin input playback, right?

769
00:32:46,100 --> 00:32:48,800
So we just want to do whatever the win32 state.

770
00:32:50,400 --> 00:32:50,900
Excuse me.

771
00:32:52,100 --> 00:32:53,500
Hmm, whatever.

772
00:32:53,500 --> 00:32:57,900
That that input playing index is we would basically want to store

773
00:32:57,900 --> 00:32:58,400
that.

774
00:32:58,700 --> 00:32:59,800
So this is our

775
00:33:00,000 --> 00:33:00,700
Index.

776
00:33:00,900 --> 00:33:03,600
We basically want to just pretend that we stopped even though we

777
00:33:03,600 --> 00:33:07,200
really aren't stopping so that we closed down the handle and then we

778
00:33:07,200 --> 00:33:09,700
can go ahead and and start again.

779
00:33:09,700 --> 00:33:13,100
And we could do it a little more efficiently than that, if we wanted

780
00:33:13,100 --> 00:33:13,200
to.

781
00:33:13,200 --> 00:33:15,200
But I don't think we do because there's a bunch of stuff that has to

782
00:33:15,200 --> 00:33:18,000
happen during begin that we'll see in a little bit.

783
00:33:18,100 --> 00:33:18,400
So based.

784
00:33:18,400 --> 00:33:19,600
I just want to set us up for Success.

785
00:33:19,600 --> 00:33:24,100
They're basically by making this do it as if it ended and started

786
00:33:24,100 --> 00:33:24,500
again.

787
00:33:25,200 --> 00:33:29,000
Alright, so and there's my that file name and your caps, right?

788
00:33:29,000 --> 00:33:29,900
It's crazy, right?

789
00:33:30,000 --> 00:33:31,400
Right, it's awful.

790
00:33:32,200 --> 00:33:32,500
All right.

791
00:33:32,500 --> 00:33:38,400
So basically, we're almost done surprisingly for such an awesome

792
00:33:38,400 --> 00:33:38,900
feature.

793
00:33:38,900 --> 00:33:40,500
You're going to be shocked at how little work.

794
00:33:40,500 --> 00:33:41,200
This thing is.

795
00:33:43,000 --> 00:33:43,600
All right.

796
00:33:43,700 --> 00:33:47,500
So we've got our win32 state coming in now.

797
00:33:48,100 --> 00:33:52,800
We've got our record and Playback happening when those things start

798
00:33:52,800 --> 00:33:55,600
and end playback input.

799
00:33:57,500 --> 00:33:59,600
What is wrong with that?

800
00:33:59,700 --> 00:33:59,800
Oh,

801
00:34:00,400 --> 00:34:02,300
That is win32 playback input.

802
00:34:02,400 --> 00:34:02,600
I guess.

803
00:34:02,600 --> 00:34:04,000
New input is already a pointer.

804
00:34:04,100 --> 00:34:04,900
That's the difference.

805
00:34:05,700 --> 00:34:08,699
So there is a couple little things.

806
00:34:09,000 --> 00:34:09,300
Again.

807
00:34:09,300 --> 00:34:12,300
I slammed that in there real quick and just want to take a quick

808
00:34:12,300 --> 00:34:12,800
second.

809
00:34:12,900 --> 00:34:14,500
We do begin recording input.

810
00:34:14,800 --> 00:34:16,600
This is supposed to be input.

811
00:34:16,600 --> 00:34:19,000
Play back into playing Index, right?

812
00:34:20,199 --> 00:34:23,100
I like, when people on the stream site, copy pasta, I've never really

813
00:34:23,100 --> 00:34:23,199
heard.

814
00:34:23,199 --> 00:34:24,100
People say that phrase.

815
00:34:24,100 --> 00:34:27,000
It's kind of funny when you cut and paste some code and you're

816
00:34:27,000 --> 00:34:29,699
supposed to be changing, it to be some different code, but you don't

817
00:34:30,100 --> 00:34:34,100
It's kind of funny, anyway, so, I passing this in and put planes us

818
00:34:34,100 --> 00:34:35,699
when I close these out.

819
00:34:35,699 --> 00:34:40,100
When I do the end recording, I need to basically clear out those

820
00:34:40,100 --> 00:34:41,100
handles as well.

821
00:34:41,900 --> 00:34:42,199
Right?

822
00:34:42,199 --> 00:34:45,400
So I need the input playing index to change to 0.

823
00:34:46,000 --> 00:34:51,500
I need the input recording index to change to 0 when you when you end

824
00:34:51,699 --> 00:34:52,300
like that.

825
00:34:53,300 --> 00:34:56,199
And I think that's roughly everything that I wanted.

826
00:34:56,300 --> 00:34:56,500
All right.

827
00:34:56,500 --> 00:34:58,600
So let's take a look at what happens here.

828
00:35:00,500 --> 00:35:04,400
When we do this, so I'm going to go ahead and just set a breakpoint

829
00:35:05,300 --> 00:35:09,000
inside that that keyboard Handler basically just so we can see what

830
00:35:09,000 --> 00:35:09,600
happens.

831
00:35:09,800 --> 00:35:11,500
So, here we go.

832
00:35:11,500 --> 00:35:12,500
I'm going to run the game.

833
00:35:12,800 --> 00:35:15,100
I'm going to hit the L key to start recording.

834
00:35:15,500 --> 00:35:18,100
We're going to take a look here at our win32 state structure, which

835
00:35:18,100 --> 00:35:21,200
basically should be just completely cleared to 0, which it is again.

836
00:35:21,200 --> 00:35:22,900
I always like, zero to be initialization.

837
00:35:22,900 --> 00:35:24,700
So you just don't have to worry about initializing stuff.

838
00:35:24,700 --> 00:35:26,400
You just cleared to 0 and you know, that it's good.

839
00:35:29,700 --> 00:35:30,100
All right.

840
00:35:30,300 --> 00:35:30,400
Right.

841
00:35:31,100 --> 00:35:34,400
We step in we say, all right, Sam Rubin recording.

842
00:35:34,500 --> 00:35:36,800
So we're going to go ahead and set the recording index to whatever

843
00:35:36,800 --> 00:35:38,200
slot were recording into.

844
00:35:38,600 --> 00:35:40,500
We're going to go ahead and try and create a file.

845
00:35:40,700 --> 00:35:42,500
We created the file off, we go.

846
00:35:42,700 --> 00:35:44,600
We pop out of here, blah blah, blah.

847
00:35:44,600 --> 00:35:46,200
Nothing particularly interesting going on.

848
00:35:46,200 --> 00:35:49,900
There we go, through our code and we get down to the point where we've

849
00:35:49,900 --> 00:35:52,500
done all of our input processing.

850
00:35:52,800 --> 00:35:53,900
We say, are we recording?

851
00:35:53,900 --> 00:35:54,700
We are recording.

852
00:35:54,700 --> 00:35:55,800
So we step in here.

853
00:35:56,100 --> 00:35:58,000
We take a look at this right file.

854
00:35:58,000 --> 00:35:59,600
It looks like we're writing to a valid handle.

855
00:35:59,600 --> 00:35:59,800
We're right.

856
00:36:00,000 --> 00:36:01,100
Out the input thing.

857
00:36:01,500 --> 00:36:02,600
Everyone is happy.

858
00:36:02,600 --> 00:36:03,500
We wrote six hundred.

859
00:36:03,500 --> 00:36:04,100
Bytes.

860
00:36:04,200 --> 00:36:06,500
Is that how big our input is for a frame?

861
00:36:06,900 --> 00:36:10,100
We can check size of game input.

862
00:36:10,300 --> 00:36:10,800
600.

863
00:36:10,800 --> 00:36:11,100
B.

864
00:36:11,100 --> 00:36:12,300
That's exactly what it should be.

865
00:36:12,300 --> 00:36:13,200
Everyone's happy.

866
00:36:13,700 --> 00:36:14,700
We come out of here.

867
00:36:15,300 --> 00:36:18,000
We keep going and it's good.

868
00:36:18,000 --> 00:36:18,500
All right.

869
00:36:18,500 --> 00:36:21,700
So basically, this is writing off out that stuff to disk, right?

870
00:36:21,700 --> 00:36:24,300
This is writing out out everything that I'm doing.

871
00:36:24,700 --> 00:36:29,900
So if I hit l in theory, this should now change to ending the

872
00:36:30,000 --> 00:36:31,100
Ting input, which it does close.

873
00:36:31,100 --> 00:36:35,100
As the handle goes in here, goes to start playing it again, creates

874
00:36:35,100 --> 00:36:37,100
that file and off we go.

875
00:36:37,100 --> 00:36:43,200
So now we actually should in theory, be playing back whatever the user

876
00:36:43,200 --> 00:36:46,600
input was for for all the frames.

877
00:36:46,600 --> 00:36:46,700
Now.

878
00:36:46,700 --> 00:36:49,700
I don't know if it's actually working and of course I had left my guy

879
00:36:49,700 --> 00:36:50,700
sitting there for a while.

880
00:36:50,700 --> 00:36:54,300
So we would have to actually wait for a bit to see if this guy moves

881
00:36:54,300 --> 00:36:56,200
but I also want to take a look.

882
00:36:57,400 --> 00:36:59,400
I really wanted to kind of look and see.

883
00:37:00,100 --> 00:37:04,300
How that input code was actually working when it does the read back.

884
00:37:04,300 --> 00:37:09,400
So I'm going to go ahead and do this in a test where I know that I'm

885
00:37:09,500 --> 00:37:11,800
doing something when I hit that Elke.

886
00:37:12,200 --> 00:37:13,600
So basically Elke.

887
00:37:19,200 --> 00:37:20,700
Oh, stupid mistake.

888
00:37:21,100 --> 00:37:22,600
And this may have cost us from having it.

889
00:37:22,600 --> 00:37:22,800
Work.

890
00:37:22,800 --> 00:37:23,500
The right.

891
00:37:23,500 --> 00:37:26,300
The first time, I totally forgot to check whether the key is going

892
00:37:26,300 --> 00:37:26,800
down or up.

893
00:37:26,900 --> 00:37:29,000
I always forget that when I jump in here.

894
00:37:29,600 --> 00:37:32,000
So basically, it was, it was triggering twice once for the down once

895
00:37:32,000 --> 00:37:34,400
with up, which minute started and stopped recording immediately.

896
00:37:34,600 --> 00:37:35,700
And that's not very much fun.

897
00:37:37,800 --> 00:37:38,300
All right.

898
00:37:39,100 --> 00:37:40,600
So basically, here we go.

899
00:37:40,600 --> 00:37:41,500
Let's try this again.

900
00:37:42,000 --> 00:37:45,400
I do the L key, I do the jump come back down.

901
00:37:45,600 --> 00:37:46,600
I push the L cake.

902
00:37:47,100 --> 00:37:48,700
Hey, look, we're playing.

903
00:37:48,900 --> 00:37:49,800
A car input.

904
00:37:49,900 --> 00:37:51,300
I don't know if it's actually working properly.

905
00:37:51,300 --> 00:37:52,900
It doesn't look like it recorded the jump.

906
00:37:52,900 --> 00:37:56,200
So I think we're still a little bit buggy, but at least it worked

907
00:37:56,300 --> 00:37:57,000
slightly.

908
00:37:57,300 --> 00:38:01,200
So let's go ahead and and, and take a look at what what I messed up

909
00:38:01,300 --> 00:38:03,100
because I think we're almost almost there.

910
00:38:04,000 --> 00:38:06,000
So, all right.

911
00:38:06,000 --> 00:38:11,900
So when we, when we do our recording, we are supposed to be writing,

912
00:38:12,500 --> 00:38:14,300
right, file.

913
00:38:14,800 --> 00:38:18,200
We're supposed to be writing this every time with our winter to record

914
00:38:18,200 --> 00:38:18,700
input.

915
00:38:18,800 --> 00:38:22,900
put and then when we do our playback, we are oh,

916
00:38:24,600 --> 00:38:26,700
What what what?

917
00:38:26,900 --> 00:38:27,800
What did I type?

918
00:38:28,000 --> 00:38:29,100
How did this happen?

919
00:38:29,400 --> 00:38:33,200
What this is this is what happens when you explain stuff when you're

920
00:38:33,200 --> 00:38:34,000
trying to do it.

921
00:38:34,000 --> 00:38:35,900
You just your you become an awful.

922
00:38:35,900 --> 00:38:36,300
Programmer.

923
00:38:36,300 --> 00:38:37,800
Everyone II promise you.

924
00:38:37,800 --> 00:38:41,200
I'm not as bad at programming as I appear to be on this stream.

925
00:38:41,500 --> 00:38:43,500
Like if you actually look at the stream, everyone's going to not want

926
00:38:43,500 --> 00:38:43,800
to hire me.

927
00:38:43,800 --> 00:38:46,000
They're going to be like, you're the worst programmer.

928
00:38:46,000 --> 00:38:48,400
Like, why would this?

929
00:38:48,900 --> 00:38:50,200
How did this get in here?

930
00:38:50,200 --> 00:38:52,600
This this is, this is this is totally wrong.

931
00:38:53,000 --> 00:38:53,800
Yeah, okay.

932
00:38:54,400 --> 00:38:58,300
So anyway, basically, what we did is afraid read file succeeded.

933
00:38:58,700 --> 00:38:59,500
We then.

934
00:39:00,000 --> 00:39:02,100
Started looping that doesn't make any sense.

935
00:39:02,300 --> 00:39:02,700
Obviously.

936
00:39:02,700 --> 00:39:05,700
We only want to start looping when the read file is finished.

937
00:39:06,800 --> 00:39:08,300
I mean, that's kind of obvious, right?

938
00:39:08,300 --> 00:39:12,200
And read file if I'm not mistaken returns a Bool, so it's going to be

939
00:39:12,200 --> 00:39:16,000
true when it when it worked, right?

940
00:39:17,800 --> 00:39:22,300
Yeah, if the function fails or is complete a single serve, a 0 and I

941
00:39:22,300 --> 00:39:26,800
assume I don't actually know, but I've seen when it runs out of B, it

942
00:39:26,800 --> 00:39:28,500
will return false.

943
00:39:29,600 --> 00:39:29,900
Let's

944
00:39:30,000 --> 00:39:31,400
SC.

945
00:39:35,300 --> 00:39:36,400
I don't actually know.

946
00:39:36,900 --> 00:39:39,300
I assume it will turn false when it can't read.

947
00:39:39,300 --> 00:39:42,900
All the bytes that you asked for, but I don't actually know but what I

948
00:39:42,900 --> 00:39:45,200
do know is we could check for B red.

949
00:39:45,200 --> 00:39:46,000
So either way.

950
00:39:46,300 --> 00:39:49,800
So what we basically want to do is say, okay, if it read properly

951
00:39:49,900 --> 00:39:50,600
note.

952
00:39:50,800 --> 00:39:56,900
This is there's still input or here.

953
00:39:57,300 --> 00:39:59,800
We've hit the end.

954
00:40:00,100 --> 00:40:02,400
Of the stream, go back to the beginning.

955
00:40:03,000 --> 00:40:06,100
So that that was just fantastic.

956
00:40:06,100 --> 00:40:08,400
I mean that is, you know, high quality craftsmanship.

957
00:40:08,400 --> 00:40:09,000
Right there.

958
00:40:09,300 --> 00:40:12,300
Don't let anyone tell you otherwise, so I'm going to go down here and

959
00:40:12,300 --> 00:40:12,800
try that again.

960
00:40:12,800 --> 00:40:15,000
So we hit the L key for looping, we come down here.

961
00:40:15,000 --> 00:40:15,800
We hit that.

962
00:40:16,300 --> 00:40:19,200
I'm gonna walk back down here and then I hit l.

963
00:40:20,400 --> 00:40:24,500
Hey, look, we just wrote input recording in 10 minutes.

964
00:40:25,300 --> 00:40:30,400
So, I mean, all right, I will point out that there was an entire

965
00:40:30,400 --> 00:40:32,700
company devoted to doing nothing but input recording.

966
00:40:32,700 --> 00:40:35,600
At one point they failed, it was called replay something.

967
00:40:35,600 --> 00:40:36,600
I don't remember what it was.

968
00:40:37,400 --> 00:40:40,600
But basically if you architecture code, right input recording and

969
00:40:40,600 --> 00:40:44,200
Playback is literally like 10 minutes or 20 minutes of work.

970
00:40:44,200 --> 00:40:47,200
You just watched me do it while explaining it actually and it took

971
00:40:47,200 --> 00:40:50,000
only that amount of time so it takes even less if you're

972
00:40:50,200 --> 00:40:51,100
Going to do that stuff.

973
00:40:51,300 --> 00:40:52,200
Totally trivial.

974
00:40:52,200 --> 00:40:56,100
So, the only question we have left is how do we Loop the state of the

975
00:40:56,100 --> 00:40:56,700
game?

976
00:40:57,000 --> 00:40:57,600
Right?

977
00:40:57,700 --> 00:41:00,300
We got a loop, the state of the game as well, because there's all this

978
00:41:00,300 --> 00:41:03,500
state that was set up at the beginning and we need that to be true.

979
00:41:03,600 --> 00:41:04,500
Well, hey, guess what?

980
00:41:06,300 --> 00:41:09,800
Yes, this is going to mean our files end up being particularly big.

981
00:41:09,800 --> 00:41:10,500
That is true.

982
00:41:10,600 --> 00:41:11,000
Right?

983
00:41:11,600 --> 00:41:14,900
If you look in the data directory, our food out HDMI R.H., Mi4 the

984
00:41:14,900 --> 00:41:17,500
input recording is pretty tiny right now, right?

985
00:41:17,700 --> 00:41:20,000
But if we want to, if we want to just say, well,

986
00:41:20,200 --> 00:41:21,600
We want the whole game, State saved.

987
00:41:21,600 --> 00:41:22,300
Well, guess what?

988
00:41:22,300 --> 00:41:28,200
People I again architected this because I had a bunch of stuff that I

989
00:41:28,200 --> 00:41:29,600
knew would be good when we got there.

990
00:41:29,600 --> 00:41:30,500
And this is one of them.

991
00:41:30,800 --> 00:41:33,100
We virtual a lock, the entire memory for the game.

992
00:41:33,100 --> 00:41:36,200
In one block that has a known Base address.

993
00:41:38,900 --> 00:41:39,500
Right.

994
00:41:40,300 --> 00:41:43,600
So if we want to restore the entire state of the game, to exactly what

995
00:41:43,600 --> 00:41:45,300
it was at any point in time.

996
00:41:45,300 --> 00:41:48,400
All we need to do is save or load that block.

997
00:41:48,400 --> 00:41:49,700
That's it.

998
00:41:50,900 --> 00:41:52,700
It's like two lines of code.

999
00:41:53,100 --> 00:41:54,700
No serialization layer.

1000
00:41:56,600 --> 00:41:59,800
No, big long walking change of things trying to figure out.

1001
00:42:00,000 --> 00:42:01,600
It's the state and what's not the state?

1002
00:42:01,600 --> 00:42:02,300
No, nothing.

1003
00:42:02,400 --> 00:42:05,200
We know that if the game saw it, it was in here.

1004
00:42:05,500 --> 00:42:09,500
And we also know that even if the game put pointers in there, they'll

1005
00:42:09,500 --> 00:42:10,600
still be valid.

1006
00:42:10,600 --> 00:42:12,900
Because we load it always at the same Base address.

1007
00:42:13,600 --> 00:42:15,100
So we don't even have to care.

1008
00:42:15,100 --> 00:42:16,100
It doesn't matter of game.

1009
00:42:16,100 --> 00:42:17,200
Could do whatever it wants.

1010
00:42:17,600 --> 00:42:19,100
It does not matter what the game does.

1011
00:42:19,200 --> 00:42:23,000
As long as the game does it in here, it'll work, right.

1012
00:42:23,300 --> 00:42:24,600
So all I have to do.

1013
00:42:24,600 --> 00:42:28,400
Now is when we do this, this game memory structure.

1014
00:42:28,400 --> 00:42:29,800
Now just has to be Park.

1015
00:42:30,500 --> 00:42:31,700
Of this guy, right?

1016
00:42:31,700 --> 00:42:34,700
Of win32 state so that we can save and load it.

1017
00:42:34,800 --> 00:42:38,600
So basically if I just go in here and do something like this, so the

1018
00:42:38,600 --> 00:42:40,500
game memories in there now, right?

1019
00:42:41,100 --> 00:42:45,700
And then I say that, that the game memory is actually something off

1020
00:42:45,700 --> 00:42:47,800
the win32 state like this, right?

1021
00:42:47,800 --> 00:42:50,700
And and I could actually maybe I'll do it this way, just for a little

1022
00:42:50,700 --> 00:42:52,400
bit game memory.

1023
00:42:55,400 --> 00:42:55,700
Okay.

1024
00:42:58,200 --> 00:43:00,900
Alright, so basically what I'll do is I'll go here at through here and

1025
00:43:00,900 --> 00:43:03,000
just change this to a pointer.

1026
00:43:03,500 --> 00:43:03,900
Again.

1027
00:43:03,900 --> 00:43:08,900
Needless busy, work is C actually did the dot and pointer syntax

1028
00:43:08,900 --> 00:43:09,400
annoyingly.

1029
00:43:09,400 --> 00:43:09,800
Right?

1030
00:43:10,200 --> 00:43:16,000
So now that should be set up in there properly and there shouldn't be

1031
00:43:16,000 --> 00:43:17,200
any difference.

1032
00:43:17,200 --> 00:43:21,400
So if I run this, I should just get the same old game working the same

1033
00:43:21,400 --> 00:43:22,800
way that it was before.

1034
00:43:22,900 --> 00:43:24,100
No, no problems.

1035
00:43:24,100 --> 00:43:24,300
Right?

1036
00:43:24,300 --> 00:43:27,800
Just what we would expect and then what I can do is

1037
00:43:28,000 --> 00:43:28,400
Can go.

1038
00:43:28,400 --> 00:43:28,800
All right.

1039
00:43:28,800 --> 00:43:32,800
So now when we, when we begin or end recording, right?

1040
00:43:33,500 --> 00:43:33,900
Basically.

1041
00:43:33,900 --> 00:43:36,300
Now what I know because of the way that I did this thing.

1042
00:43:36,300 --> 00:43:39,800
I'm going to put that total size remember in here as well.

1043
00:43:40,100 --> 00:43:41,600
In fact, I guess to be fair.

1044
00:43:41,600 --> 00:43:43,000
I really didn't need to do the thing.

1045
00:43:43,000 --> 00:43:44,400
I just did with the game memory.

1046
00:43:46,000 --> 00:43:47,600
That was probably premature.

1047
00:43:48,200 --> 00:43:49,800
Let's let's back that up for a minute.

1048
00:43:49,800 --> 00:43:51,600
Let's just back that up for one second.

1049
00:43:51,600 --> 00:43:54,200
Because I realized that's actually I don't even really need to do

1050
00:43:54,200 --> 00:43:54,300
that.

1051
00:43:54,300 --> 00:43:55,700
That was just a wasted code edit.

1052
00:43:55,700 --> 00:43:57,200
That was just dumb, right?

1053
00:43:57,900 --> 00:43:58,900
I don't need to do that at all.

1054
00:43:59,200 --> 00:44:03,700
All I actually needed to do was make it so this one virtual Alec was

1055
00:44:03,700 --> 00:44:04,600
actually tracked.

1056
00:44:04,600 --> 00:44:09,900
So basically, this void star game, memory block, right this thing.

1057
00:44:11,500 --> 00:44:14,400
That just needs to do that, right?

1058
00:44:15,100 --> 00:44:16,700
I just need to remember where that was.

1059
00:44:16,800 --> 00:44:20,500
So basically, what will happen is these will be off the win32 state.

1060
00:44:20,500 --> 00:44:28,700
Now, the game memory block will be off the win32 block, that and and

1061
00:44:28,700 --> 00:44:31,100
same thing here win32 State total size.

1062
00:44:31,600 --> 00:44:36,300
So those two things will work that way, now, right, win32 State, total

1063
00:44:36,300 --> 00:44:40,500
size, and that now gives us what we need.

1064
00:44:40,700 --> 00:44:44,600
Eat in our win32 state structure to basically go up here and do

1065
00:44:44,600 --> 00:44:49,500
exactly what I wanted to do, which is, when we begin input playback

1066
00:44:49,500 --> 00:44:52,600
and begin recording, it will now actually just restore the state.

1067
00:44:52,700 --> 00:44:57,600
So, when I do the begin recording input, when we open this file

1068
00:44:57,600 --> 00:44:59,800
handle, I am immediately going to just do a full-on.

1069
00:45:00,000 --> 00:45:00,800
Last right.

1070
00:45:00,900 --> 00:45:01,700
This thing here.

1071
00:45:01,900 --> 00:45:02,200
Right.

1072
00:45:02,200 --> 00:45:03,400
File like that.

1073
00:45:03,400 --> 00:45:06,200
I'm just going to go ahead and do a full-on blast, right?

1074
00:45:06,200 --> 00:45:08,300
Of the entire game State.

1075
00:45:08,300 --> 00:45:13,700
Just everything that there is in one call, one simple basic call.

1076
00:45:13,900 --> 00:45:18,100
Now, there is one caveat to it, which is because Windows doesn't

1077
00:45:18,100 --> 00:45:19,500
actually allow 64-bit rights.

1078
00:45:19,700 --> 00:45:22,600
If total size is actually greater than a 32-bit.

1079
00:45:22,600 --> 00:45:24,000
So it's more than four gigs.

1080
00:45:24,000 --> 00:45:27,500
This won't work, will have to write a for Loop that, you know, Loops

1081
00:45:27,500 --> 00:45:28,200
over it.

1082
00:45:28,200 --> 00:45:29,700
So I'm going to put an assertion in here.

1083
00:45:29,700 --> 00:45:29,900
Just

1084
00:45:30,000 --> 00:45:33,800
So if we ever get to that point, remember to come fix this and put a

1085
00:45:33,800 --> 00:45:36,600
for Loop in there, but, that's just because Windows doesn't do that

1086
00:45:36,600 --> 00:45:36,900
for us.

1087
00:45:37,100 --> 00:45:43,000
So, we're going to assert that total size is basically less than this

1088
00:45:43,000 --> 00:45:44,000
value right here.

1089
00:45:44,500 --> 00:45:47,400
Just because we know we can't actually pass that f.

1090
00:45:47,400 --> 00:45:49,300
F f f, f f f f.

1091
00:45:49,500 --> 00:45:50,900
We know we can't pass a value.

1092
00:45:51,000 --> 00:45:51,300
Is that?

1093
00:45:51,300 --> 00:45:52,100
That's that big.

1094
00:45:52,800 --> 00:45:54,500
So, I'm going to assert that.

1095
00:45:54,500 --> 00:45:55,200
That's true.

1096
00:45:55,300 --> 00:45:59,100
I'm going to write out basically that entire size here, right?

1097
00:45:59,100 --> 00:45:59,800
I'm going to

1098
00:46:00,000 --> 00:46:03,300
Have another lease dummy, B, written things that we don't care about

1099
00:46:03,300 --> 00:46:05,100
because, again, this is total debug code.

1100
00:46:05,100 --> 00:46:10,100
No user will ever touch this code, or if they do, they're, they're on

1101
00:46:10,100 --> 00:46:16,400
their own, and then I will just pass the memory, right?

1102
00:46:16,500 --> 00:46:17,600
Game memory block.

1103
00:46:18,400 --> 00:46:18,900
There we go.

1104
00:46:21,600 --> 00:46:22,400
So that's it.

1105
00:46:22,700 --> 00:46:25,800
And the opposite is, is exactly true as well.

1106
00:46:25,800 --> 00:46:28,800
So we'll just go in here and do the read file.

1107
00:46:29,100 --> 00:46:31,700
So we basically have when we begin the input playback when it does

1108
00:46:31,700 --> 00:46:34,600
that file handle, we're going to again do the assertion.

1109
00:46:34,600 --> 00:46:38,800
But then we're just going to do a read file on the playback handle and

1110
00:46:38,800 --> 00:46:42,100
the game memory block total size stuff is all the same.

1111
00:46:42,100 --> 00:46:44,500
I believe and B red is here as well.

1112
00:46:44,500 --> 00:46:49,300
I think that's all the same conversion to d word, right?

1113
00:46:49,300 --> 00:46:49,600
Well,

1114
00:46:51,400 --> 00:46:55,900
Actually, I guess bytes to read equals.

1115
00:46:56,500 --> 00:46:57,900
This is probably the say Norway to do this.

1116
00:46:57,900 --> 00:47:02,600
We just cast it down and then verify that they are equal after the

1117
00:47:02,600 --> 00:47:03,800
cast, right?

1118
00:47:04,400 --> 00:47:07,000
So B to read.

1119
00:47:07,700 --> 00:47:08,000
Yeah.

1120
00:47:09,400 --> 00:47:12,600
And same with my sister right, lights to right.

1121
00:47:13,000 --> 00:47:15,100
We'll go ahead and grab that total size there.

1122
00:47:15,100 --> 00:47:15,800
D word.

1123
00:47:17,000 --> 00:47:17,700
and,

1124
00:47:20,900 --> 00:47:22,200
Cert that they're equals well.

1125
00:47:23,600 --> 00:47:24,900
Likes to write.

1126
00:47:27,700 --> 00:47:28,200
All right.

1127
00:47:28,200 --> 00:47:29,400
Let's see if that does anything.

1128
00:47:30,900 --> 00:47:32,500
Alright, so my guys down here.

1129
00:47:32,600 --> 00:47:33,800
I'm going to start them in the corner.

1130
00:47:34,400 --> 00:47:37,800
I'm going to hit the L key to start recording and let's see.

1131
00:47:39,400 --> 00:47:43,200
They're not know how long that's going to take as a bit of a pause

1132
00:47:43,200 --> 00:47:43,400
there.

1133
00:47:43,400 --> 00:47:43,700
And you do it.

1134
00:47:43,700 --> 00:47:45,800
This is a very slow hard drive as you might imagine.

1135
00:47:49,100 --> 00:47:50,000
And Hey, look.

1136
00:47:52,600 --> 00:47:53,200
That was it.

1137
00:47:55,000 --> 00:47:57,000
Of course, we didn't actually Loop properly.

1138
00:47:57,100 --> 00:47:58,100
So that's not good.

1139
00:47:58,100 --> 00:47:59,100
So we still have a bug.

1140
00:47:59,200 --> 00:47:59,800
Why didn't we Loop?

1141
00:48:00,000 --> 00:48:00,300
Way.

1142
00:48:01,900 --> 00:48:04,900
Does anyone know anyone already know why we didn't do it properly?

1143
00:48:05,200 --> 00:48:08,800
Because we should have looped properly but I don't actually think we

1144
00:48:08,800 --> 00:48:10,100
did it stopped.

1145
00:48:10,100 --> 00:48:12,100
When it got to the end which it should not have.

1146
00:48:13,800 --> 00:48:19,100
So I guess I still don't actually know if this ever happens because it

1147
00:48:19,100 --> 00:48:21,200
may be that it just returns 0 4, B, red.

1148
00:48:21,200 --> 00:48:23,700
So I'm going to go into that playback input and that's the that's the

1149
00:48:23,700 --> 00:48:24,900
only thing that didn't work.

1150
00:48:26,600 --> 00:48:29,800
So I'm just going to go in there and really quickly check it just to

1151
00:48:29,800 --> 00:48:29,900
see

1152
00:48:30,000 --> 00:48:31,000
See what's going on there?

1153
00:48:31,200 --> 00:48:33,300
I don't, I'm so bad at Visual Studio.

1154
00:48:33,300 --> 00:48:34,900
I never know how to just jump to a function.

1155
00:48:35,000 --> 00:48:35,200
You know what?

1156
00:48:35,200 --> 00:48:40,500
I'll just do it this way when 32 way back foot.

1157
00:48:42,100 --> 00:48:42,600
Here we go.

1158
00:48:50,400 --> 00:48:53,000
So, alright, win32 playback input.

1159
00:48:53,000 --> 00:48:55,400
I go in here and I want to know.

1160
00:48:55,400 --> 00:48:56,700
Do you ever get there?

1161
00:48:57,400 --> 00:48:58,900
Basically, that's what I want to know.

1162
00:48:59,600 --> 00:49:00,000
L.

1163
00:49:03,300 --> 00:49:05,600
No, so it's as I suspected it.

1164
00:49:05,600 --> 00:49:09,100
I think it even if it doesn't read any bites because it hits the end

1165
00:49:09,100 --> 00:49:09,500
of the file.

1166
00:49:09,500 --> 00:49:11,800
I think it just returns 0 and B red.

1167
00:49:12,500 --> 00:49:16,800
So I'm going to go ahead and say that what we really needed to check

1168
00:49:16,800 --> 00:49:18,200
with not that right.

1169
00:49:18,200 --> 00:49:23,200
We do the read file here, but we need to check instead is if B red

1170
00:49:23,200 --> 00:49:26,200
equals 0 then we try to do this.

1171
00:49:26,200 --> 00:49:27,000
Now we could do that.

1172
00:49:27,000 --> 00:49:28,800
Only if the read file succeed.

1173
00:49:28,800 --> 00:49:32,100
So we if the file handle like isn't valid, we don't do it.

1174
00:49:32,100 --> 00:49:32,900
So that might be better.

1175
00:49:33,500 --> 00:49:38,300
So basically, when we get to the end of the stream, if the B red is 0,

1176
00:49:38,300 --> 00:49:40,400
we've hit the end of the file, and we'll restart it.

1177
00:49:40,400 --> 00:49:42,900
So let me just see if that was the problem that we were having.

1178
00:49:44,800 --> 00:49:46,800
So L.

1179
00:49:47,200 --> 00:49:51,200
And then I will move us down to the corner due to do.

1180
00:49:54,800 --> 00:49:56,300
And then L again.

1181
00:49:57,800 --> 00:49:59,800
And we'll see if we've got our looped at it working now.

1182
00:50:01,600 --> 00:50:04,600
Yeah, so basically that's it.

1183
00:50:04,700 --> 00:50:06,400
We now have looped editing just working

1184
00:50:08,800 --> 00:50:13,000
I mean it's kind of when you actually see how simple it was to

1185
00:50:13,000 --> 00:50:13,800
implement.

1186
00:50:14,300 --> 00:50:16,200
It's kind of like, oh, duh.

1187
00:50:16,200 --> 00:50:19,300
Like how come we're not always doing that because now you can

1188
00:50:19,300 --> 00:50:22,400
literally do anything that you want like anything that involved that

1189
00:50:22,500 --> 00:50:26,700
whatever you want to do to tune that jump code from before I can just

1190
00:50:26,700 --> 00:50:27,500
do, right?

1191
00:50:27,800 --> 00:50:30,000
Because I can just go ahead and say, of course, I didn't actually, I

1192
00:50:30,000 --> 00:50:32,500
don't think I actually have a way to turn off the playback.

1193
00:50:32,500 --> 00:50:35,400
I got to go actually add some real controls to this, but basically,

1194
00:50:35,400 --> 00:50:38,300
now, if I wanted to not jump, I could do that in a much.

1195
00:50:38,500 --> 00:50:39,800
More interesting way, right?

1196
00:50:40,100 --> 00:50:41,500
I can go ahead and say all right.

1197
00:50:41,500 --> 00:50:42,600
Let me set this up.

1198
00:50:42,700 --> 00:50:44,400
Let me start the recording right?

1199
00:50:44,400 --> 00:50:48,100
I'll go ahead and do whatever the the motion is that I want to do.

1200
00:50:48,200 --> 00:50:49,200
So I'll go in here.

1201
00:50:49,200 --> 00:50:53,300
I'll do the jump and then I'll finish it and I'll Loop that, right.

1202
00:50:53,300 --> 00:50:58,300
So now it's looping, looping my jump and I can kind of go ahead and

1203
00:50:58,300 --> 00:50:58,900
say, all right.

1204
00:50:58,900 --> 00:50:59,800
So now let's let's

1205
00:51:00,000 --> 00:51:04,600
Had an edit the code for that jump, until I'm satisfied with how it

1206
00:51:04,600 --> 00:51:04,900
works.

1207
00:51:04,900 --> 00:51:06,600
So I go in here and I say, all right.

1208
00:51:06,700 --> 00:51:08,100
Where was that code for the jump?

1209
00:51:08,200 --> 00:51:10,100
Here's the code for the jump, right?

1210
00:51:10,700 --> 00:51:12,600
First of all, it should go up and down again.

1211
00:51:13,100 --> 00:51:16,500
So basically, the sine wave should at least go through a pie, period?

1212
00:51:16,500 --> 00:51:16,900
Right?

1213
00:51:16,900 --> 00:51:18,300
I would think so.

1214
00:51:18,300 --> 00:51:22,200
Basically, we want it to be like, I think I have a pie 32 to find, do

1215
00:51:22,200 --> 00:51:22,800
I not?

1216
00:51:23,100 --> 00:51:28,000
So I'll recompile that right and I think that should change the period

1217
00:51:28,000 --> 00:51:29,500
of my sine wave and Theory.

1218
00:51:30,300 --> 00:51:31,400
No, that did nothing.

1219
00:51:32,500 --> 00:51:33,000
Okay.

1220
00:51:33,300 --> 00:51:34,200
This is actually working.

1221
00:51:34,200 --> 00:51:36,900
Is it not like let's say, I want to change the height of the jump.

1222
00:51:36,900 --> 00:51:38,900
Let's find out that works properly.

1223
00:51:39,900 --> 00:51:40,300
There we go.

1224
00:51:40,300 --> 00:51:42,900
So I've got a smaller jump, so I just didn't do this, right?

1225
00:51:42,900 --> 00:51:45,500
So the T jump, it was doing pi32.

1226
00:51:45,500 --> 00:51:47,700
That should be one thing round.

1227
00:51:47,700 --> 00:51:49,100
It should go up and back down, again.

1228
00:51:49,100 --> 00:51:49,800
Shouldn't it?

1229
00:51:49,800 --> 00:51:51,100
Unless I'm mistaken.

1230
00:51:51,500 --> 00:51:56,700
So the T starts at 1, it gets subtracted down 20 in theory.

1231
00:51:56,700 --> 00:51:58,500
That should do it.

1232
00:51:58,500 --> 00:51:59,900
Well, let's, let's see what happens.

1233
00:52:00,200 --> 00:52:00,700
Who knows?

1234
00:52:00,700 --> 00:52:02,800
This is the whole point of this, I suppose it's some level.

1235
00:52:03,500 --> 00:52:04,200
Oh, I know why?

1236
00:52:04,200 --> 00:52:06,800
Because it's only adding right?

1237
00:52:07,000 --> 00:52:09,500
That's it's only adding the actual.

1238
00:52:09,700 --> 00:52:10,000
Right?

1239
00:52:10,000 --> 00:52:10,500
Right.

1240
00:52:10,700 --> 00:52:14,900
So you, we actually do need it to go through the full, the full state

1241
00:52:14,900 --> 00:52:15,800
of the 2 pi.

1242
00:52:16,100 --> 00:52:16,700
Oh, man.

1243
00:52:16,900 --> 00:52:20,800
This is the worst junk code that anyone's ever written in the history

1244
00:52:20,800 --> 00:52:21,700
of mankind.

1245
00:52:22,000 --> 00:52:24,200
I'm embarrassed to even, it's not even jump.

1246
00:52:24,200 --> 00:52:26,100
Co don't even know what you want to call it.

1247
00:52:26,400 --> 00:52:29,500
But they're at least now, I've got him doing the jump.

1248
00:52:29,500 --> 00:52:29,900
So that's

1249
00:52:30,000 --> 00:52:34,600
Good and maybe we will also say, okay.

1250
00:52:34,600 --> 00:52:36,300
Let's actually make this jump.

1251
00:52:36,300 --> 00:52:39,300
Go like that and I'll recompile that see how that's going.

1252
00:52:39,300 --> 00:52:40,300
So, there we go.

1253
00:52:40,500 --> 00:52:41,700
There's that jump again.

1254
00:52:41,900 --> 00:52:43,100
Little more reasonable.

1255
00:52:43,100 --> 00:52:45,900
Maybe I want the jump to take a little bit longer.

1256
00:52:46,400 --> 00:52:52,100
So if the T jump was more like four, maybe, I don't know if that's

1257
00:52:52,100 --> 00:52:55,500
actually going to do anything for me, but I'll try it.

1258
00:52:56,000 --> 00:52:56,500
There we go.

1259
00:52:56,500 --> 00:52:58,600
There's a longer jump, right?

1260
00:53:03,200 --> 00:53:05,600
I guess, at this point, since I basically finished everything.

1261
00:53:05,600 --> 00:53:08,400
I want to finish, I should probably try to actually write some junk

1262
00:53:08,400 --> 00:53:08,700
code.

1263
00:53:08,700 --> 00:53:10,500
That isn't absolutely awful.

1264
00:53:12,300 --> 00:53:14,700
I don't know if that's a good idea or not or if we should just go back

1265
00:53:14,700 --> 00:53:15,100
to we're doing.

1266
00:53:15,100 --> 00:53:16,400
I don't really want to talk about.

1267
00:53:16,400 --> 00:53:16,900
Jump coated.

1268
00:53:16,900 --> 00:53:20,100
Also, maybe the best thing to do is say, don't ever do anything like

1269
00:53:20,100 --> 00:53:20,600
this.

1270
00:53:20,800 --> 00:53:21,900
This is the worst.

1271
00:53:21,900 --> 00:53:23,700
This code is absolutely horrific.

1272
00:53:23,700 --> 00:53:27,100
Lie bad, you would never write a jump code that even involved any of

1273
00:53:27,100 --> 00:53:28,400
the things that I just did.

1274
00:53:29,200 --> 00:53:32,400
It was literally just what came out of my hands when I decided

1275
00:53:32,500 --> 00:53:33,400
To start typing.

1276
00:53:33,700 --> 00:53:36,900
So let's we'll wait will actually talk about how to implement these

1277
00:53:36,900 --> 00:53:40,800
things correctly later, but you really, really really don't ever want

1278
00:53:40,800 --> 00:53:41,000
to do.

1279
00:53:41,000 --> 00:53:44,800
When I just typed in please, this is horrible and awful.

1280
00:53:45,000 --> 00:53:46,900
Like we need a velocity and there's all this.

1281
00:53:46,900 --> 00:53:48,800
It just don't, please don't do this.

1282
00:53:49,000 --> 00:53:50,900
I'm sorry that I even brought it up.

1283
00:53:51,400 --> 00:53:52,400
It's awful.

1284
00:53:52,700 --> 00:53:56,300
But anyway, point being we now have exactly what I wanted s to have,

1285
00:53:56,300 --> 00:53:59,800
which is the ability to do looped edits on our game and

1286
00:54:00,300 --> 00:54:00,700
Really?

1287
00:54:00,700 --> 00:54:03,400
The only problem here is performance.

1288
00:54:03,900 --> 00:54:08,700
Basically, if we go look at, if we go, look at how big that file is.

1289
00:54:08,800 --> 00:54:11,900
You can see this this giant, honkin one gigabyte file, right?

1290
00:54:12,500 --> 00:54:16,100
So basically doing that memory blast can be slow.

1291
00:54:16,900 --> 00:54:19,900
This is a machine that has no SSD drive or anything like that.

1292
00:54:19,900 --> 00:54:23,200
So actually I suspect on a modern machine.

1293
00:54:23,300 --> 00:54:26,300
This would actually be almost instantaneous though because if you had

1294
00:54:26,300 --> 00:54:29,500
a fast, if you had like a Santa 3 or whatever, I don't even know what

1295
00:54:29,500 --> 00:54:29,800
they're up to.

1296
00:54:30,000 --> 00:54:31,700
These days the Sabbath three SSD drive.

1297
00:54:31,700 --> 00:54:33,100
I think this would just be instant.

1298
00:54:33,500 --> 00:54:38,100
But this basically allows you to do all of your code tuning with a

1299
00:54:38,100 --> 00:54:41,600
sequence that gets recorded and it keeps resetting the entire state of

1300
00:54:41,600 --> 00:54:43,200
the game properly at the beginning.

1301
00:54:43,500 --> 00:54:46,100
So you don't even have to pick up the controller.

1302
00:54:46,100 --> 00:54:48,600
You don't have to take your hands off the keyboard, right?

1303
00:54:50,000 --> 00:54:51,400
And there's other things we can do.

1304
00:54:51,600 --> 00:54:55,200
That will make this even cooler will continue on this tomorrow because

1305
00:54:55,200 --> 00:54:56,900
basically, there's still a little bit more we can do.

1306
00:54:56,900 --> 00:54:57,700
That's interesting.

1307
00:54:58,200 --> 00:54:59,900
For example, one thing that

1308
00:55:00,000 --> 00:55:04,200
Be totally crazy that we could probably do and I'll just throw this in

1309
00:55:04,200 --> 00:55:05,500
there for kicks.

1310
00:55:05,500 --> 00:55:08,400
Just to give you a little bit of a heads up because we're basically

1311
00:55:08,400 --> 00:55:09,700
done with our state recording stuff.

1312
00:55:09,700 --> 00:55:11,700
I mean, that's that's everything we needed.

1313
00:55:13,200 --> 00:55:18,400
What we can do, as well, is inside, when we actually create our

1314
00:55:18,400 --> 00:55:19,300
window, right?

1315
00:55:19,300 --> 00:55:20,700
When we create our window e^x.

1316
00:55:21,300 --> 00:55:24,700
I believe we can also do some really crazy stuff, right?

1317
00:55:24,900 --> 00:55:29,800
Which is we could create like a topmost window.

1318
00:55:29,900 --> 00:55:34,700
Oh, so if we do, like, I'll just show you what I mean real quick.

1319
00:55:34,900 --> 00:55:39,200
So if we create wind oex, right, when we, when we pass that we have,

1320
00:55:39,200 --> 00:55:42,100
this ability to specify these extended Styles and there's some of them

1321
00:55:42,100 --> 00:55:45,800
that are like, you know, that this is a top, most window I believe is

1322
00:55:45,800 --> 00:55:46,700
the thing you can do.

1323
00:55:47,900 --> 00:55:49,000
So this kind of a thing.

1324
00:55:49,700 --> 00:55:54,600
So we can pass a topmost window and we can pass a layered with.

1325
00:55:54,600 --> 00:55:56,700
There's a lick, a layered windowed flag.

1326
00:55:57,300 --> 00:55:59,800
I don't actually know where that is.

1327
00:56:00,700 --> 00:56:03,500
I'm context visual Paradigm of friend layered, layered.

1328
00:56:04,400 --> 00:56:07,000
I think this is, this is the one we want.

1329
00:56:07,300 --> 00:56:10,600
Yeah, so we can do wsx layered, or, of course, we can't do that with

1330
00:56:10,600 --> 00:56:14,500
own DC or class DC, which I think we were using, right?

1331
00:56:14,500 --> 00:56:15,500
We're reusing those.

1332
00:56:15,700 --> 00:56:18,300
Let's take a look own DC.

1333
00:56:19,800 --> 00:56:20,300
Yeah.

1334
00:56:20,400 --> 00:56:23,900
We were using on DC so we may want to remove that.

1335
00:56:25,400 --> 00:56:28,100
Yeah, she's forever because we're not sharing with anyone.

1336
00:56:28,200 --> 00:56:29,900
So that may be something that we

1337
00:56:30,000 --> 00:56:32,200
Actually want to do anymore because of that.

1338
00:56:32,500 --> 00:56:34,200
So yeah, I'll throw this in there.

1339
00:56:34,200 --> 00:56:37,500
But so if we do this, right, if we actually create a topmost window

1340
00:56:37,800 --> 00:56:40,400
that the layered window or maybe, I don't know if I'll specify that

1341
00:56:40,400 --> 00:56:41,100
quite yet.

1342
00:56:41,300 --> 00:56:44,000
But basically, if we create a topmost window at the very least, right?

1343
00:56:45,800 --> 00:56:50,400
Then I believe we can basically have the game window right?

1344
00:56:50,600 --> 00:56:52,800
Can sit on top of our editor as well.

1345
00:56:53,300 --> 00:56:56,600
So it can kind of be a little more unobtrusive, right?

1346
00:56:56,600 --> 00:56:59,800
So we can come in here, we can set the recording marker.

1347
00:57:00,400 --> 00:57:03,500
We can go ahead and do you know that stupid jump that I was doing or

1348
00:57:03,500 --> 00:57:05,400
whatever like that.

1349
00:57:05,400 --> 00:57:09,900
Stop it have that looping and we can just be playing that essentially

1350
00:57:10,000 --> 00:57:13,100
in here while we're doing our edits full screen, you know, like not

1351
00:57:13,100 --> 00:57:14,700
having to do anything so we can basically tune.

1352
00:57:14,700 --> 00:57:16,400
My absolutely ridiculously terrible.

1353
00:57:16,400 --> 00:57:19,200
Jump code that is awful right?

1354
00:57:19,200 --> 00:57:22,700
I can go ahead and do that and there, you know, we've done whatever it

1355
00:57:22,700 --> 00:57:24,100
is that we want to do, right?

1356
00:57:25,400 --> 00:57:28,300
Yeah, so you get the idea and then the other thing that we can do in

1357
00:57:28,300 --> 00:57:29,800
the thing that I was going to suggest.

1358
00:57:30,000 --> 00:57:31,500
Is we can also change this into.

1359
00:57:31,500 --> 00:57:33,500
We can tell windows that we want this thing.

1360
00:57:34,100 --> 00:57:36,100
This window to be translucent potentially.

1361
00:57:36,200 --> 00:57:39,200
And of course we can't do that with a CS own DC window.

1362
00:57:39,200 --> 00:57:41,700
So we don't we don't really need that CS own disa.

1363
00:57:42,600 --> 00:57:46,100
So what we'll do is we'll actually just go ahead and the time that we

1364
00:57:46,100 --> 00:57:48,500
need the device contacts will just get it right?

1365
00:57:48,500 --> 00:57:52,200
Because there's only one time I think that we actually need it, which

1366
00:57:52,200 --> 00:57:52,800
is here.

1367
00:57:53,200 --> 00:57:56,400
So, if I just go ahead and do that here and do, you know, actually get

1368
00:57:56,400 --> 00:57:57,900
it the way that you normally get it.

1369
00:57:58,200 --> 00:57:59,800
I think we should be fine in theory.

1370
00:58:00,100 --> 00:58:02,900
So if I do that, I believe that will be fine.

1371
00:58:03,000 --> 00:58:03,900
I don't actually know.

1372
00:58:04,200 --> 00:58:05,200
But let's see.

1373
00:58:07,300 --> 00:58:08,000
Well that didn't work.

1374
00:58:08,000 --> 00:58:08,600
So well.

1375
00:58:09,400 --> 00:58:10,800
Now our window doesn't show up at all.

1376
00:58:10,800 --> 00:58:12,700
I think we may have to do this.

1377
00:58:12,700 --> 00:58:15,900
There's like a layered window update call.

1378
00:58:16,000 --> 00:58:16,700
So what is it?

1379
00:58:16,800 --> 00:58:22,100
It's layered window win32 update.

1380
00:58:24,300 --> 00:58:29,300
I think there should be a way to just say.

1381
00:58:36,000 --> 00:58:40,300
Make you some more popular asset layered window attributes.

1382
00:58:41,600 --> 00:58:42,300
I don't know.

1383
00:58:42,300 --> 00:58:44,900
Like we're will have to deal with this tomorrow because I probably

1384
00:58:44,900 --> 00:58:46,900
won't be able to get it working just now.

1385
00:58:47,200 --> 00:58:49,500
So I made back this change out real quick before we go.

1386
00:58:49,500 --> 00:58:51,200
I just want to see if I could slam it in there.

1387
00:58:51,700 --> 00:58:54,600
But basically you can make a call to basic says please make my window

1388
00:58:54,600 --> 00:58:56,300
translucent, right?

1389
00:58:57,100 --> 00:59:00,700
And so what I could what I was going to say is well we can just make

1390
00:59:01,300 --> 00:59:04,800
once after we create our window, we could also go ahead and make

1391
00:59:05,000 --> 00:59:07,200
Window be translucent, right?

1392
00:59:07,200 --> 00:59:08,600
We can basically say okay.

1393
00:59:08,600 --> 00:59:13,400
Hey Windows, please make make this this window translucent.

1394
00:59:13,400 --> 00:59:14,000
So let's see.

1395
00:59:14,600 --> 00:59:19,100
Color ref should have transparency color all pixels to turn color if

1396
00:59:19,100 --> 00:59:21,800
we don't actually want one of those.

1397
00:59:22,800 --> 00:59:24,400
So we want lwa Alpha.

1398
00:59:24,400 --> 00:59:27,600
So we basically just tell it that our window has sort of an opacity

1399
00:59:27,600 --> 00:59:28,600
level, right?

1400
00:59:28,600 --> 00:59:31,500
And that's what we can do by specifying lwa Elfa.

1401
00:59:31,600 --> 00:59:33,200
We can specify an alpha level.

1402
00:59:33,400 --> 00:59:34,800
It's from 0 to 255.

1403
00:59:34,900 --> 00:59:40,200
I've I believe is the thing, the color key value and actually know

1404
00:59:40,200 --> 00:59:42,400
what they want us to do for that RGB macro.

1405
00:59:42,600 --> 00:59:45,000
This is just Windows nonsense here.

1406
00:59:46,400 --> 00:59:49,100
So basically, I think I don't know if this is actually true or not.

1407
00:59:49,100 --> 00:59:53,100
But I think we may be able to do something basically a simple as that

1408
00:59:53,600 --> 00:59:55,600
where we just can have a layered window.

1409
00:59:55,600 --> 00:59:56,800
That's just transparent.

1410
00:59:57,100 --> 00:59:57,400
Yeah.

1411
00:59:57,400 --> 00:59:58,000
So there you go.

1412
00:59:58,000 --> 00:59:59,800
So that's a transparent window, right?

1413
01:00:01,500 --> 01:00:05,900
So you can imagine right us having the game running and we can edit

1414
01:00:05,900 --> 01:00:08,500
the code and we can even have a window.

1415
01:00:08,600 --> 01:00:09,700
That's transparent.

1416
01:00:09,700 --> 01:00:11,300
Did I not fix all the bugs here?

1417
01:00:12,500 --> 01:00:14,900
That we fix this but apparently we didn't.

1418
01:00:16,800 --> 01:00:21,100
Break course are transparent window with we need to make it not

1419
01:00:21,100 --> 01:00:21,700
clickable.

1420
01:00:21,700 --> 01:00:24,300
So there's a bunch of things will have to do to actually make that go

1421
01:00:24,600 --> 01:00:27,200
but yeah, so what did I mess up here?

1422
01:00:27,300 --> 01:00:30,200
Did I mess up the computation of end of buffer B?

1423
01:00:30,200 --> 01:00:30,800
4 pixel?

1424
01:00:30,900 --> 01:00:34,300
Because we're writing, we're still writing out of bounds, which is not

1425
01:00:34,800 --> 01:00:35,200
0.

1426
01:00:36,000 --> 01:00:36,800
Fantastic.

1427
01:00:37,700 --> 01:00:38,700
Fantastic.

1428
01:00:40,600 --> 01:00:41,400
Let's take a look here.

1429
01:00:44,700 --> 01:00:47,200
That was not a way that code should have been written.

1430
01:00:49,000 --> 01:00:51,400
Copy pastas people say although that wasn't copypasta.

1431
01:00:51,400 --> 01:00:53,700
That was just a quick edit.

1432
01:00:53,800 --> 01:00:56,900
So basically what I had wanted to do in that code that renders the

1433
01:00:56,900 --> 01:01:00,200
players I'd wanted to basically just say if the pixel pointer is still

1434
01:01:00,200 --> 01:01:02,500
within the buffer, then it's okay to write it.

1435
01:01:02,600 --> 01:01:03,600
Otherwise, it's not.

1436
01:01:03,700 --> 01:01:05,100
And so I was checking it here.

1437
01:01:05,100 --> 01:01:06,800
So this pitch pointer, I don't know why.

1438
01:01:06,800 --> 01:01:09,500
That that's even in there doesn't have to be in there but basically so

1439
01:01:09,500 --> 01:01:12,800
this is not actually correct at the moment.

1440
01:01:14,000 --> 01:01:15,900
So this is less than end of buffer.

1441
01:01:16,000 --> 01:01:17,200
I guess this is writing to it.

1442
01:01:17,200 --> 01:01:18,300
This is technically

1443
01:01:18,800 --> 01:01:24,800
Has to be the pixel plus 4 has to be less than or equal to the buffer.

1444
01:01:24,900 --> 01:01:28,900
I don't know if that actually is relevant but it could be off by that

1445
01:01:28,900 --> 01:01:29,300
much.

1446
01:01:29,500 --> 01:01:30,400
Is there anything else I'm missing in there.

1447
01:01:30,400 --> 01:01:34,300
So if the pixel pointer, if it's greater than the memory pointer and

1448
01:01:34,300 --> 01:01:35,700
less than so buffer memory.

1449
01:01:35,800 --> 01:01:39,300
Plus the B, our pixel times, the with the pitch sound.

1450
01:01:39,300 --> 01:01:40,700
Oh, that's not right.

1451
01:01:40,800 --> 01:01:42,400
Yeah, that's just wrong as well.

1452
01:01:42,900 --> 01:01:43,800
I don't know why I did that in there.

1453
01:01:43,800 --> 01:01:46,800
So this is basically, this is the entire size of the buffer.

1454
01:01:46,800 --> 01:01:48,500
It's the pitch which is how many to

1455
01:01:48,800 --> 01:01:52,700
Vance per row times the number of rows, so that's actually correct.

1456
01:01:52,700 --> 01:01:56,000
So that's that's more, that's more what we should have had.

1457
01:01:57,300 --> 01:02:00,100
So all I was going to say, is if we do that thing with the layered

1458
01:02:00,100 --> 01:02:02,000
window update.

1459
01:02:03,100 --> 01:02:06,400
Layered window or start set layered window attributes.

1460
01:02:06,600 --> 01:02:08,100
This set layered window attributes thing.

1461
01:02:08,100 --> 01:02:14,200
We can actually stuff in our app in our window handle thing or are

1462
01:02:14,200 --> 01:02:18,600
thing that handles window messages and this WM activate app thing is

1463
01:02:18,600 --> 01:02:21,200
something that windows will call us back on depending on whether or

1464
01:02:21,200 --> 01:02:22,700
not our window is active.

1465
01:02:22,900 --> 01:02:25,800
So basically we could make a thing where we said.

1466
01:02:25,800 --> 01:02:29,300
All right, when our app is active, right?

1467
01:02:29,300 --> 01:02:32,300
So if the app is active, the

1468
01:02:32,400 --> 01:02:36,000
/ am that comes in with that message says whether or not the window is

1469
01:02:36,000 --> 01:02:37,400
activated or deactivated.

1470
01:02:37,400 --> 01:02:40,000
So if it's true, we're going to be activated if it's false.

1471
01:02:40,000 --> 01:02:41,100
We're going to be deactivated.

1472
01:02:41,100 --> 01:02:44,000
And so this is like activating and deactivating a window, right?

1473
01:02:44,000 --> 01:02:46,000
Bring it to the foreground or moving it away.

1474
01:02:46,600 --> 01:02:52,600
And so I believe what we could do is just say like if the the W / am

1475
01:02:52,800 --> 01:02:56,700
equals true then we want to actually set ourselves to full Alpha.

1476
01:02:56,700 --> 01:02:59,800
Otherwise, we want to set ourselves to dim Alpha.

1477
01:03:00,200 --> 01:03:00,600
Right.

1478
01:03:00,700 --> 01:03:02,000
So we could do something like this.

1479
01:03:02,000 --> 01:03:04,400
And again, I'm just kind of slamming this in here at because we're out

1480
01:03:04,400 --> 01:03:05,000
of time on the stream.

1481
01:03:05,000 --> 01:03:07,100
So I don't want to go any further on this but I just wanted to show

1482
01:03:07,100 --> 01:03:09,600
you kind of what I've been thinking about we could do.

1483
01:03:09,700 --> 01:03:10,900
So we do this stuff.

1484
01:03:11,000 --> 01:03:13,100
We're doing some things, we play the game.

1485
01:03:13,100 --> 01:03:14,100
We do something right?

1486
01:03:14,100 --> 01:03:15,200
We're like, oh this isn't working.

1487
01:03:15,200 --> 01:03:15,400
Right?

1488
01:03:15,400 --> 01:03:15,700
So we go.

1489
01:03:15,700 --> 01:03:18,500
Let's set a loop Point, get to the state, we care about set the loop

1490
01:03:18,500 --> 01:03:19,200
point.

1491
01:03:20,100 --> 01:03:23,300
We go through, we do the action that we wanted to have happen again.

1492
01:03:23,300 --> 01:03:25,300
Hopefully that's much quicker on any modern machine.

1493
01:03:25,700 --> 01:03:27,100
And Now We're looping mode.

1494
01:03:27,100 --> 01:03:31,500
We can then alt-tab to our editor and the game still runs behind the

1495
01:03:31,500 --> 01:03:33,600
editor, totally translucently.

1496
01:03:33,600 --> 01:03:37,200
So we can still edit full screen and see all our code pretty easily,

1497
01:03:37,500 --> 01:03:40,400
but we can see what the game is doing in the background anyway, and

1498
01:03:40,400 --> 01:03:42,600
then we want to see it again.

1499
01:03:42,600 --> 01:03:46,600
We should be able to switch back to it and then it restores itself to

1500
01:03:46,600 --> 01:03:48,000
full color, right?

1501
01:03:48,200 --> 01:03:49,800
So a lot of work, we still have to

1502
01:03:49,900 --> 01:03:53,100
To clean this stuff up, but that was the end of the, the sort of

1503
01:03:53,400 --> 01:03:55,400
Excursion into crazy Windows.

1504
01:03:55,400 --> 01:03:57,200
Tricks thing again.

1505
01:03:59,100 --> 01:04:00,100
I know it.

1506
01:04:00,900 --> 01:04:04,400
Hopefully, that seems both very, very cool because I've literally

1507
01:04:04,400 --> 01:04:06,900
never seen anyone demo anything that had this feature before.

1508
01:04:07,400 --> 01:04:10,600
In fact, I'd even seen things like Brett, Victor had something that

1509
01:04:10,600 --> 01:04:11,800
people were sending around where he was.

1510
01:04:11,800 --> 01:04:14,600
Like, you should be able to just have the code doing what it does

1511
01:04:14,600 --> 01:04:15,800
while you edit it or something.

1512
01:04:15,800 --> 01:04:16,300
I don't know.

1513
01:04:17,100 --> 01:04:19,300
And I'm like, well you can do most of that already.

1514
01:04:19,300 --> 01:04:20,300
Like we can just do it.

1515
01:04:20,400 --> 01:04:21,600
We just did did it.

1516
01:04:21,600 --> 01:04:22,700
We just showed how to do it.

1517
01:04:22,700 --> 01:04:23,200
Right?

1518
01:04:23,300 --> 01:04:26,200
And you can imagine extending this technique very easily as well.

1519
01:04:26,200 --> 01:04:28,800
Like let's say we wanted to see the path that the guy took

1520
01:04:29,400 --> 01:04:32,200
Well, all we really have to do is start annotating our game a little

1521
01:04:32,200 --> 01:04:36,500
bit to write to a buffer that shows that those things and draw them

1522
01:04:36,500 --> 01:04:37,300
over time.

1523
01:04:37,400 --> 01:04:41,400
And then you basically got the ability to type Live code and see like

1524
01:04:41,400 --> 01:04:44,700
pads and stuff update as you are changing the Live code.

1525
01:04:45,600 --> 01:04:50,600
So I think like, yeah, hopefully you hopefully, this did look

1526
01:04:50,600 --> 01:04:51,400
particularly cool.

1527
01:04:51,400 --> 01:04:52,700
I think it will look really, really cool.

1528
01:04:52,700 --> 01:04:55,600
Once we're actually working on the game and can just tweak stuff

1529
01:04:55,600 --> 01:04:57,800
really tightly without ever having to have anything.

1530
01:04:57,800 --> 01:04:58,700
We don't have to have a scripting language.

1531
01:04:58,800 --> 01:05:00,000
Which we don't have to have any of that.

1532
01:05:00,000 --> 01:05:01,200
None of that work just works.

1533
01:05:01,600 --> 01:05:05,000
But also so you can see that if you architect stuff properly, it goes

1534
01:05:05,000 --> 01:05:08,200
from being something that you can't even conceive of spending the time

1535
01:05:08,200 --> 01:05:12,800
to do to being something that literally took an hour with explanation.

1536
01:05:12,900 --> 01:05:13,200
Right?

1537
01:05:13,200 --> 01:05:17,300
I mean, we architected our game, platform layer boundary properly.

1538
01:05:17,500 --> 01:05:19,000
And now this was free.

1539
01:05:19,400 --> 01:05:23,200
Like, it was literally, someone could do it on their lunch break and

1540
01:05:23,200 --> 01:05:25,400
have something that's much more powerful than the editing.

1541
01:05:25,400 --> 01:05:26,800
You actually get in.

1542
01:05:26,800 --> 01:05:28,700
A lot of tools that are supposed to be very powerful.

1543
01:05:28,900 --> 01:05:31,000
Because they have scripting languages are all this other stuff, but

1544
01:05:31,000 --> 01:05:33,400
actually, a lot of them don't even do this.

1545
01:05:33,700 --> 01:05:34,100
Right?

1546
01:05:35,200 --> 01:05:37,800
A lot of engines that you by don't even have this feature built-in,

1547
01:05:38,300 --> 01:05:40,700
and we already have this feature from day one, and it only took us an

1548
01:05:40,700 --> 01:05:40,900
hour.

1549
01:05:40,900 --> 01:05:45,700
So, basically that is the end of what I wanted to cover on this stream

1550
01:05:45,700 --> 01:05:49,000
as the end of our sort of fun with win32 stuff tomorrow.

1551
01:05:49,000 --> 01:05:53,300
And Friday we will be on will be at 11:00 a.m.

1552
01:05:53,700 --> 01:05:54,800
We'll be on holiday hours.

1553
01:05:54,800 --> 01:05:57,200
And basically what we'll be doing on those two days is clean up.

1554
01:05:57,200 --> 01:05:58,700
So we'll basically going through our code.

1555
01:05:58,800 --> 01:05:59,900
Code, going through all of.

1556
01:06:00,000 --> 01:06:02,300
Like notes, I haven't went through two things that need to be cleaned

1557
01:06:02,300 --> 01:06:02,600
up.

1558
01:06:02,700 --> 01:06:04,400
We'll make this a little cleaner.

1559
01:06:04,400 --> 01:06:06,200
How you interface with the looping system.

1560
01:06:06,200 --> 01:06:10,000
Will, you know, will will round off the edges and make sure everything

1561
01:06:10,000 --> 01:06:13,300
set for going into Monday when we start writing, our actual game

1562
01:06:13,300 --> 01:06:13,700
engine.

1563
01:06:13,700 --> 01:06:16,500
So I hope you have enjoyed the past three days.

1564
01:06:16,500 --> 01:06:18,900
I know I have I was really psyched to get this working.

1565
01:06:18,900 --> 01:06:21,900
I was like, this is gonna be so much fun and it was, so I'm pretty

1566
01:06:21,900 --> 01:06:23,300
happy with how this turned out.

1567
01:06:23,400 --> 01:06:28,800
And let's, let's go ahead and go to the Q&A.

1568
01:06:30,600 --> 01:06:34,600
Please put Senior ettore in your question so I can see it.

1569
01:06:35,400 --> 01:06:38,500
And please stick to questions about stuff.

1570
01:06:38,500 --> 01:06:41,000
We've already done either today, or in a previous dream.

1571
01:06:41,500 --> 01:06:43,900
Let's not talk about future stuff because we're going to get there

1572
01:06:44,300 --> 01:06:45,000
eventually.

1573
01:06:45,600 --> 01:06:46,500
And off we go.

1574
01:06:51,400 --> 01:06:55,600
Okay, does win32 playback input need to return status and case the

1575
01:06:55,600 --> 01:06:56,700
fide real fail.

1576
01:06:56,700 --> 01:06:58,900
The file read fails and are reaches the end.

1577
01:06:59,000 --> 01:07:01,400
Since in case those cases, the function output data structures will be

1578
01:07:01,400 --> 01:07:02,300
staler and valid.

1579
01:07:03,100 --> 01:07:05,100
It's up to you basically depends on.

1580
01:07:05,300 --> 01:07:08,200
I mean probably you would want to do that eventually.

1581
01:07:13,400 --> 01:07:18,500
Just for why not sake, but this is only for our internal use.

1582
01:07:18,500 --> 01:07:21,900
So if it can't write to the file for some reason, you're going to know

1583
01:07:21,900 --> 01:07:24,100
because things are going to kind of mess up immediately.

1584
01:07:24,100 --> 01:07:28,100
But yeah, I mean when we have more of a logging system and stuff like

1585
01:07:28,100 --> 01:07:32,700
that, it be it'll be easier for us to just note those errors because

1586
01:07:32,700 --> 01:07:35,000
really the only thing you're going to do at that point is note the

1587
01:07:35,000 --> 01:07:35,300
error.

1588
01:07:35,300 --> 01:07:36,900
There's nothing you can do about it.

1589
01:07:37,200 --> 01:07:41,700
You know you your abuser was trying to play back some input and they

1590
01:07:41,700 --> 01:07:43,300
can't and so they really what they need to know.

1591
01:07:43,400 --> 01:07:44,400
Is that something failed to?

1592
01:07:44,400 --> 01:07:47,200
They can go see why their hard drives messed up or whatever.

1593
01:07:48,100 --> 01:07:51,400
So yeah, so I do have to remember to delete this file so that I don't

1594
01:07:51,400 --> 01:07:55,000
end up shipping of the HMI because we need to move.

1595
01:07:55,000 --> 01:07:59,500
The other thing that we need to do is we need to move that that file

1596
01:07:59,500 --> 01:08:02,700
into the build directory so that it's know, we know that it's a temp

1597
01:08:02,700 --> 01:08:02,900
file.

1598
01:08:02,900 --> 01:08:05,200
So I want to make sure we do that as well if I can put it to do in

1599
01:08:05,200 --> 01:08:08,100
there so that we don't forget to do that.

1600
01:08:08,200 --> 01:08:12,900
So went through to record Put let's say

1601
01:08:14,500 --> 01:08:16,700
To do these files.

1602
01:08:16,700 --> 01:08:21,300
Must go in a temporary build directory?

1603
01:08:22,600 --> 01:08:23,600
That's very important.

1604
01:08:24,200 --> 01:08:25,899
I will write that down on the notebook as well.

1605
01:08:27,399 --> 01:08:30,300
Path for hm.

1606
01:08:30,300 --> 01:08:31,700
My files.

1607
01:08:32,899 --> 01:08:33,399
Okay.

1608
01:08:33,700 --> 01:08:34,300
All right.

1609
01:08:36,600 --> 01:08:37,200
Will this break?

1610
01:08:37,200 --> 01:08:39,300
When you make changes to the game State structure?

1611
01:08:39,300 --> 01:08:41,000
So yet basically.

1612
01:08:41,300 --> 01:08:47,600
So if we wanted to do the full version of this, we would need to have

1613
01:08:47,600 --> 01:08:51,000
code and Tatian so that we know what our structures are and we can

1614
01:08:51,000 --> 01:08:57,899
backport them when we load, that is just a lot of extra work to do.

1615
01:08:58,399 --> 01:08:59,700
It's it's

1616
01:09:00,000 --> 01:09:02,600
A lot of extra work to do even in a language that has better

1617
01:09:02,600 --> 01:09:06,200
introspection features than c c is awful at introspection.

1618
01:09:06,200 --> 01:09:08,300
It's one of the places that it really sucks.

1619
01:09:09,200 --> 01:09:14,000
And so like that is one place that, like, I think other languages do a

1620
01:09:14,000 --> 01:09:17,200
much better job is because they support that sort of thing, and it's

1621
01:09:17,200 --> 01:09:21,700
absolutely awful that they've never added that stuff properly in so

1622
01:09:21,700 --> 01:09:23,600
long, but that that's a big problem.

1623
01:09:24,100 --> 01:09:28,000
So I don't want to actually go down that route because of the amount

1624
01:09:28,000 --> 01:09:28,200
of time.

1625
01:09:28,200 --> 01:09:29,899
It will take and all it means.

1626
01:09:30,000 --> 01:09:32,700
Means is that we will have to just restart the app a little more

1627
01:09:32,700 --> 01:09:35,800
frequently, which just doesn't seem like a bad trade-off for this

1628
01:09:35,800 --> 01:09:36,800
project.

1629
01:09:37,000 --> 01:09:39,600
But if you were doing this in the industrial strength since where you

1630
01:09:39,600 --> 01:09:42,000
wanted to make like a game engine that had this feature in, lots of

1631
01:09:42,000 --> 01:09:42,800
people are going to use it.

1632
01:09:42,800 --> 01:09:44,500
You would go ahead and do The annotation.

1633
01:09:45,000 --> 01:09:47,899
And that way when you make changes to your structs, it will still work

1634
01:09:48,399 --> 01:09:49,200
there, still things.

1635
01:09:49,200 --> 01:09:50,399
That won't work.

1636
01:09:50,399 --> 01:09:53,600
I mean, this feature is for tuning, it's not for doing all of your

1637
01:09:53,600 --> 01:09:56,000
development inside of a loop, right?

1638
01:09:56,200 --> 01:09:59,900
Because if you do that, you can't change the way in which things

1639
01:10:00,000 --> 01:10:03,100
Get initialized either like the super structures of things.

1640
01:10:03,700 --> 01:10:04,500
You might change.

1641
01:10:04,500 --> 01:10:07,500
How that's how things are organized entirely and nothing's ever going

1642
01:10:07,500 --> 01:10:13,000
to make that work live because it you'd have to write specialized

1643
01:10:13,000 --> 01:10:15,700
functions to do the mutation and the person would spend more time

1644
01:10:15,700 --> 01:10:17,800
writing those functions than they save by getting the tuning.

1645
01:10:18,100 --> 01:10:20,200
So you want to focus on just the tuning here.

1646
01:10:20,700 --> 01:10:24,900
But even with that we probably will be able to do some stuff where we

1647
01:10:24,900 --> 01:10:27,000
just leave padding at the ends of our struct.

1648
01:10:27,000 --> 01:10:29,800
So while we're developing and we can add things pretty

1649
01:10:29,900 --> 01:10:31,800
Easily, we just can't rearrange them.

1650
01:10:35,800 --> 01:10:38,300
It wouldn't be too hard to set up the render ghost or to use two

1651
01:10:38,300 --> 01:10:41,100
windows to play Loops of current code and previous version, would, it

1652
01:10:41,100 --> 01:10:43,100
would be cool to see how game States.

1653
01:10:44,100 --> 01:10:45,000
Diverge?

1654
01:10:45,000 --> 01:10:45,300
Yeah.

1655
01:10:45,300 --> 01:10:48,100
Well, so we've set ourselves up perfectly for doing what you just

1656
01:10:48,100 --> 01:10:52,700
said, because remember the other thing we can do is we can load

1657
01:10:52,700 --> 01:10:55,900
multiple game dlls and play them separately.

1658
01:10:56,000 --> 01:10:59,400
So we could actually load to game dlls and be playing them back at the

1659
01:10:59,400 --> 01:11:00,100
same time.

1660
01:11:00,100 --> 01:11:03,600
If we wanted to write, we could totally do that and it would be

1661
01:11:03,700 --> 01:11:05,100
absolutely no problem whatsoever.

1662
01:11:06,900 --> 01:11:09,800
So like where we do that load library, right?

1663
01:11:09,800 --> 01:11:13,600
This thing here, this winter you loghain code.

1664
01:11:13,600 --> 01:11:17,900
We could call that with multiple on multiple dll versions, so we could

1665
01:11:17,900 --> 01:11:21,100
totally look at to game State sets separately.

1666
01:11:21,100 --> 01:11:24,100
If you wanted to, I don't have a use case for that right now, but

1667
01:11:24,100 --> 01:11:26,200
we've totally set ourselves up to do all that stuff.

1668
01:11:27,000 --> 01:11:28,600
You could do anything you wanted with that.

1669
01:11:30,500 --> 01:11:33,600
Why didn't you use a switch for all the V codes stuff?

1670
01:11:34,500 --> 01:11:34,800
I don't know.

1671
01:11:34,800 --> 01:11:36,200
I just didn't.

1672
01:11:38,100 --> 01:11:41,600
We could but I usually I don't like to do switches inside of switches.

1673
01:11:41,600 --> 01:11:42,900
I find that gets a little confusing.

1674
01:11:43,200 --> 01:11:46,000
So I didn't what we probably should do is just move this guy out into

1675
01:11:46,000 --> 01:11:49,000
its own function entirely, which is process keyboard or something like

1676
01:11:49,000 --> 01:11:49,300
that.

1677
01:11:49,300 --> 01:11:51,100
But yeah, there's no real reason.

1678
01:11:54,300 --> 01:11:56,700
Since it's mostly zeros, do you think it'd be worth writing out the

1679
01:11:56,700 --> 01:11:59,800
game state in a sparse way using a simple rle or something?

1680
01:12:00,000 --> 01:12:02,900
Performance sufficient or perhaps that would make performance worse.

1681
01:12:03,000 --> 01:12:04,900
Can you talk a bit about the trade-offs that may exist there?

1682
01:12:05,800 --> 01:12:09,900
I think that basically just by an SSD drive by a fast SSD drive and

1683
01:12:09,900 --> 01:12:10,700
you will never care.

1684
01:12:10,900 --> 01:12:14,400
I think you can blast a gigabyte to an SSD drive in a split-second

1685
01:12:14,400 --> 01:12:18,300
anyway, so I assume that it's not a problem but I don't really know.

1686
01:12:18,500 --> 01:12:22,300
I would test it on a machine that isn't 8 years old or whatever.

1687
01:12:22,300 --> 01:12:22,700
This one is.

1688
01:12:22,700 --> 01:12:24,600
Now five years old.

1689
01:12:24,600 --> 01:12:27,100
I tested on a machine that wasn't five years old for us before

1690
01:12:27,100 --> 01:12:28,300
deciding to do any work there.

1691
01:12:28,600 --> 01:12:29,800
But yes, we could do tons of

1692
01:12:30,000 --> 01:12:30,300
Stuff.

1693
01:12:30,600 --> 01:12:34,000
You could also just for the time being well, I think we're, what are?

1694
01:12:34,000 --> 01:12:34,700
We're allocating.

1695
01:12:34,700 --> 01:12:35,300
GB.

1696
01:12:35,400 --> 01:12:39,600
Just don't allocate a gigabyte, a legate, much less.

1697
01:12:39,600 --> 01:12:41,500
But there's another thing that we can do to.

1698
01:12:42,400 --> 01:12:45,900
So one thing that's worth noting is I split this up into permanent and

1699
01:12:45,900 --> 01:12:48,600
transient storage and we haven't really talked about what that

1700
01:12:48,700 --> 01:12:51,900
entails, what we will probably be able to do in the future if we

1701
01:12:51,900 --> 01:12:56,500
really want to is actually just loop on the permanent storage and the

1702
01:12:56,500 --> 01:12:59,100
transit storage will reconstruct itself because that's how we'll be

1703
01:12:59,100 --> 01:12:59,800
architecting the game.

1704
01:13:00,700 --> 01:13:02,900
But there's trade-offs to that as well.

1705
01:13:03,800 --> 01:13:07,400
So you'll see when we get a little further on other things, you could

1706
01:13:07,400 --> 01:13:11,500
do there, but I suspect that if you just buy a fast SSD drive.

1707
01:13:11,500 --> 01:13:12,700
This is just not an issue.

1708
01:13:12,700 --> 01:13:15,100
So you should just because this is strictly code for development.

1709
01:13:15,100 --> 01:13:18,800
You shouldn't spend a lot of time trying to figure out how to make it

1710
01:13:18,800 --> 01:13:21,000
better, because I think it's probably sufficient and just buy some

1711
01:13:21,000 --> 01:13:21,700
Hardware that works.

1712
01:13:21,700 --> 01:13:22,000
Well,

1713
01:13:23,700 --> 01:13:25,100
What's on the schedule for next week?

1714
01:13:25,200 --> 01:13:29,100
Next week is basically going to be a educational sort of overview

1715
01:13:29,100 --> 01:13:29,500
week.

1716
01:13:29,600 --> 01:13:32,000
It's going to be me talking about game engine architectures.

1717
01:13:32,200 --> 01:13:33,900
What's what is in a game engine?

1718
01:13:33,900 --> 01:13:35,100
What are the parts of it?

1719
01:13:35,100 --> 01:13:36,500
What are the parts that we have to build?

1720
01:13:36,500 --> 01:13:41,300
And why how should they be sort of looked at and understanding them.

1721
01:13:41,600 --> 01:13:44,900
So we probably won't do very much actual code next week.

1722
01:13:45,000 --> 01:13:47,600
We may try to like load a bitmap and put it on the screen or

1723
01:13:47,600 --> 01:13:50,400
something, right, but we're not going to get much further than that

1724
01:13:50,400 --> 01:13:53,300
actually, because where it's going to be a lot of sort of educational.

1725
01:13:53,500 --> 01:13:54,500
Materials that kind of have to.

1726
01:13:54,500 --> 01:13:55,300
We have to go through.

1727
01:13:57,800 --> 01:14:01,500
Are you going to show how to create more debug tools like this?

1728
01:14:03,000 --> 01:14:08,800
Yes, they'll be at least one other major debug tool to there will be

1729
01:14:08,800 --> 01:14:12,200
at least, two more major, debug tools that will get created.

1730
01:14:14,300 --> 01:14:20,100
But I wanted to do this one for fun because I felt like we needed to

1731
01:14:20,100 --> 01:14:22,500
do something fun because we had done a bunch of hard work on win32.

1732
01:14:22,500 --> 01:14:25,500
That was basic just about managing win32 and, and all the stuff that

1733
01:14:25,500 --> 01:14:26,100
makes us do.

1734
01:14:26,100 --> 01:14:29,200
So I want to do something fun with win 3-2, but one thing that you

1735
01:14:29,200 --> 01:14:32,700
probably will notice is that we could probably make a bunch of this

1736
01:14:32,700 --> 01:14:34,900
stuff actually live.

1737
01:14:34,900 --> 01:14:38,200
One layer above the platform layer because most of the stuff that we

1738
01:14:38,200 --> 01:14:42,100
just did wasn't really platform-specific so I don't want to write too

1739
01:14:42,100 --> 01:14:44,100
many debug tools in the platform code.

1740
01:14:44,400 --> 01:14:47,300
You can probably actually leverage them across multiple platforms.

1741
01:14:48,300 --> 01:14:52,600
So basically, yeah, we won't be writing any more, debug tools until

1742
01:14:52,600 --> 01:14:56,400
we've got more of a superstructure and place it on the game side of

1743
01:14:56,400 --> 01:14:59,800
things, but then we'll be at least two more debug tools.

1744
01:15:00,000 --> 01:15:00,500
Go over.

1745
01:15:02,800 --> 01:15:05,000
Regarding savings game state for recording.

1746
01:15:05,000 --> 01:15:06,400
Won't we run into problems?

1747
01:15:06,400 --> 01:15:08,900
If we port to A system that doesn't allow us to specify a base

1748
01:15:08,900 --> 01:15:09,600
address.

1749
01:15:12,300 --> 01:15:13,000
Well.

1750
01:15:14,700 --> 01:15:20,400
I'm not sure what you mean because basically, we can just always

1751
01:15:20,400 --> 01:15:22,900
develop on whatever platform we want to write.

1752
01:15:23,100 --> 01:15:27,200
So our main criteria for, what is the platform that we want to develop

1753
01:15:27,200 --> 01:15:30,100
on shouldn't be ability to specify a base address.

1754
01:15:31,900 --> 01:15:37,500
Good to bugger fast, compilation tools, stable, non crashing system,

1755
01:15:37,800 --> 01:15:39,400
good graphics drivers, right?

1756
01:15:39,400 --> 01:15:41,200
Those are like the things we want out of a Dev.

1757
01:15:41,300 --> 01:15:43,400
So whatever we choose as our Dev platform.

1758
01:15:43,400 --> 01:15:44,300
That's what it should be.

1759
01:15:44,900 --> 01:15:46,300
When we ported to other platforms.

1760
01:15:46,300 --> 01:15:48,900
We're not going to be tuning, like we're not going to tune the game

1761
01:15:48,900 --> 01:15:50,300
code on some other platform.

1762
01:15:50,300 --> 01:15:52,100
We're just going to do working on the port.

1763
01:15:52,200 --> 01:15:52,600
Right?

1764
01:15:52,700 --> 01:15:55,900
So we shouldn't really even need gamestate recording on other

1765
01:15:55,900 --> 01:16:00,000
platforms, but the answer is yes, if you are on a platform that can

1766
01:16:00,000 --> 01:16:01,100
specify a base address that,

1767
01:16:01,200 --> 01:16:05,700
And this gets infinitely harder and but we don't ever need to do that.

1768
01:16:05,700 --> 01:16:06,900
So we don't really have to worry.

1769
01:16:10,000 --> 01:16:12,500
Any chance for high-level overview while cleaning up?

1770
01:16:12,500 --> 01:16:15,400
Yes, there will be a bunch of that Thursday and Friday.

1771
01:16:15,400 --> 01:16:16,800
I'll do some recap stuff as well.

1772
01:16:18,700 --> 01:16:21,800
How often do you look up code or study code like you have done today?

1773
01:16:26,200 --> 01:16:30,200
How often do you look up code or study code like you have done today?

1774
01:16:30,700 --> 01:16:31,300
I didn't.

1775
01:16:31,300 --> 01:16:32,800
Did I study code today?

1776
01:16:34,200 --> 01:16:34,800
I don't know.

1777
01:16:34,800 --> 01:16:35,700
I'm not sure what that means.

1778
01:16:35,800 --> 01:16:36,100
Sorry.

1779
01:16:36,100 --> 01:16:37,100
I don't understand the question.

1780
01:16:37,100 --> 01:16:42,100
But if you want to more like elaborate on the question a bit, I could

1781
01:16:42,100 --> 01:16:42,600
do it.

1782
01:16:45,800 --> 01:16:47,300
Isn't a 2gig snapshot of your game.

1783
01:16:47,300 --> 01:16:47,700
Memory.

1784
01:16:47,700 --> 01:16:49,000
Crazy huge though.

1785
01:16:49,800 --> 01:16:51,400
2 is a 2 gigabyte.

1786
01:16:51,400 --> 01:16:52,900
Snapshot huge.

1787
01:16:54,700 --> 01:16:55,100
Well.

1788
01:16:57,400 --> 01:16:58,500
Let's answer that question.

1789
01:16:58,500 --> 01:16:59,100
Shall we?

1790
01:17:00,900 --> 01:17:02,200
Newegg.com.

1791
01:17:03,300 --> 01:17:04,300
Let's see.

1792
01:17:04,300 --> 01:17:06,100
Just how huge that is.

1793
01:17:06,800 --> 01:17:07,600
Let's see here.

1794
01:17:07,600 --> 01:17:10,100
Computer hard drives ssds.

1795
01:17:11,200 --> 01:17:14,800
Let's see if we wanted to put an SSD in our system.

1796
01:17:15,000 --> 01:17:17,200
And we wanted to spend a reasonable amount of money.

1797
01:17:17,200 --> 01:17:19,100
Let's say 100 to $200.

1798
01:17:19,300 --> 01:17:21,400
How much would it have on it?

1799
01:17:21,700 --> 01:17:23,500
The answer is, it would have.

1800
01:17:23,500 --> 01:17:28,700
Let's see, hundred thirty dollars seems pretty good 240 GB so you

1801
01:17:28,700 --> 01:17:32,000
could store 100 game States.

1802
01:17:33,900 --> 01:17:36,400
100 of them on your SSD drive.

1803
01:17:38,900 --> 01:17:40,800
So crazy, huge.

1804
01:17:41,300 --> 01:17:41,800
I don't know.

1805
01:17:41,800 --> 01:17:44,300
How many would we even be storing 45.

1806
01:17:45,300 --> 01:17:46,400
We're talking about a number.

1807
01:17:46,400 --> 01:17:49,600
So tiny that the hard drive laughs at you that you think that it's

1808
01:17:49,600 --> 01:17:50,200
crazy, huge.

1809
01:17:50,200 --> 01:17:50,600
Right?

1810
01:17:50,600 --> 01:17:54,100
Like they don't care at all and these are dirt cheap, right?

1811
01:17:54,900 --> 01:17:58,100
Like, you know, and they're getting bigger every day.

1812
01:17:58,100 --> 01:17:59,800
So and you can look at here.

1813
01:18:00,200 --> 01:18:03,700
You can see there yet some random specs on them.

1814
01:18:03,700 --> 01:18:04,900
I don't know what they're there.

1815
01:18:04,900 --> 01:18:09,300
But they're Max sequential read and write like is absolutely huge.

1816
01:18:09,300 --> 01:18:12,800
So, 400 megabytes per second means that it basically take like 45

1817
01:18:12,800 --> 01:18:16,500
seconds, right to do the right, depending on what it was.

1818
01:18:17,600 --> 01:18:21,000
So as long as you're okay with that, that's, that's the end of it.

1819
01:18:21,000 --> 01:18:22,800
And it's in the cache, the rest of the time.

1820
01:18:22,800 --> 01:18:25,900
Like, the other thing to remember, is I did that because I wanted to

1821
01:18:25,900 --> 01:18:29,100
do it to disk to disk, but we could do it to memory, and then it would

1822
01:18:29,100 --> 01:18:29,800
be largely in.

1823
01:18:30,000 --> 01:18:31,400
In taneous, right?

1824
01:18:31,500 --> 01:18:34,500
So if we wanted to we could just make this go to memory and then

1825
01:18:34,500 --> 01:18:38,600
lazily output it to disk which you know, honestly now that I say it

1826
01:18:38,600 --> 01:18:41,000
might be a thing that's worth doing just so we can have that speed and

1827
01:18:41,000 --> 01:18:41,800
show how to do it.

1828
01:18:41,900 --> 01:18:44,300
Maybe someday when we when we're doing a stream where we just want to

1829
01:18:44,300 --> 01:18:45,000
do something fun.

1830
01:18:45,700 --> 01:18:46,700
Maybe I'll do that.

1831
01:18:46,800 --> 01:18:49,600
So what I'll do here is I could say for example

1832
01:18:51,400 --> 01:19:00,900
To do AC lazily, right, the giant memory block and use a memory copy

1833
01:19:00,900 --> 01:19:01,700
instead.

1834
01:19:01,800 --> 01:19:04,300
So that way you just have more memory in your machine and just works.

1835
01:19:04,400 --> 01:19:05,400
So you could do that.

1836
01:19:05,500 --> 01:19:07,500
That would be one that would be one way to go.

1837
01:19:08,200 --> 01:19:08,700
Certainly.

1838
01:19:12,100 --> 01:19:14,100
Let's see.

1839
01:19:18,400 --> 01:19:19,200
I'm definitely Batman.

1840
01:19:19,200 --> 01:19:20,500
I think your sine wave is a tad.

1841
01:19:20,500 --> 01:19:22,000
Bit off on the land of the jump.

1842
01:19:22,000 --> 01:19:22,600
No, man.

1843
01:19:22,600 --> 01:19:24,000
That junk code is awesome.

1844
01:19:24,200 --> 01:19:25,300
You don't know what you're talking about.

1845
01:19:25,300 --> 01:19:27,100
That's the that's the awesome dumb code, man.

1846
01:19:27,100 --> 01:19:28,500
That feel that jump feel.

1847
01:19:30,900 --> 01:19:31,900
Let's see.

1848
01:19:39,000 --> 01:19:42,400
I'm thinking maybe less about the error and more about what happens at

1849
01:19:42,400 --> 01:19:43,200
the end of the stream.

1850
01:19:43,200 --> 01:19:43,700
And it Loops.

1851
01:19:43,700 --> 01:19:47,900
Doesn't that generate an extra repeated input event played back or am

1852
01:19:47,900 --> 01:19:49,000
I missing something?

1853
01:19:53,600 --> 01:19:54,900
I see what you're saying.

1854
01:19:55,500 --> 01:19:57,000
You may be correct about that.

1855
01:19:57,000 --> 01:20:00,500
So the I believe what the person is saying, is that when we do our

1856
01:20:00,500 --> 01:20:08,400
input playback, we need to possibly also still read the first.

1857
01:20:09,200 --> 01:20:10,000
Yeah, so,

1858
01:20:12,300 --> 01:20:14,600
So I think he is correct.

1859
01:20:14,700 --> 01:20:15,200
Basically.

1860
01:20:15,200 --> 01:20:20,600
Our new input struct here will still get passed to the game because we

1861
01:20:20,600 --> 01:20:22,800
tried to read to it, but the read failed.

1862
01:20:22,800 --> 01:20:24,800
So it's still whatever the input was.

1863
01:20:25,100 --> 01:20:28,600
Then we'd start the looping, but we never try to read it again.

1864
01:20:29,100 --> 01:20:33,500
So really what we want to do here is we still want to try to do one

1865
01:20:33,500 --> 01:20:35,100
read, right?

1866
01:20:35,300 --> 01:20:37,600
I think is what he was saying, and I think that's correct.

1867
01:20:37,600 --> 01:20:40,200
So what we probably want to do here is basically say, all right?

1868
01:20:40,200 --> 01:20:42,000
When we have to do that that

1869
01:20:42,100 --> 01:20:45,400
Loop when we do, when we begin the input playback, I think we want to

1870
01:20:45,400 --> 01:20:47,300
actually do the read again.

1871
01:20:47,300 --> 01:20:51,100
So after we read the game State and we then read the input again.

1872
01:20:51,200 --> 01:20:51,800
Good catch.

1873
01:20:51,900 --> 01:20:53,000
Yes, that's totally.

1874
01:20:53,100 --> 01:20:57,200
I think that's totally more correct, that way than it was before

1875
01:20:57,200 --> 01:20:59,600
because, otherwise before there's a, like, a leaky frame of

1876
01:21:00,000 --> 01:21:01,700
Basically, that's not correct.

1877
01:21:01,900 --> 01:21:02,400
Right.

1878
01:21:03,200 --> 01:21:03,900
So, let's see.

1879
01:21:04,600 --> 01:21:05,100
Excuse me.

1880
01:21:06,500 --> 01:21:07,300
Let's see if that's true.

1881
01:21:14,100 --> 01:21:15,200
Yes, it looks good.

1882
01:21:15,500 --> 01:21:17,400
So I think yeah, I think that's more correct.

1883
01:21:17,400 --> 01:21:18,200
That's a good catch.

1884
01:21:18,500 --> 01:21:19,400
Thank you for catching that.

1885
01:21:26,000 --> 01:21:29,200
Can you clarify a function pointers are part of that game State block,

1886
01:21:29,200 --> 01:21:32,500
maybe elaborate on what could ever cause it to fail or Miss aligned?

1887
01:21:35,000 --> 01:21:42,000
So that is a good point.

1888
01:21:42,900 --> 01:21:45,500
Basically, inside here.

1889
01:21:47,200 --> 01:21:52,100
if we ever store a pointer to say to a function, oh

1890
01:21:53,900 --> 01:21:55,000
Wait a second.

1891
01:21:56,900 --> 01:21:57,900
Wait a minute, though.

1892
01:21:58,400 --> 01:22:01,500
So I'm about to say something that was a limitation, but I don't know

1893
01:22:01,500 --> 01:22:02,500
if it actually was.

1894
01:22:02,500 --> 01:22:03,700
Let me see something here.

1895
01:22:04,400 --> 01:22:08,100
I want to, I want to find out if it actually is or not, because I'm

1896
01:22:08,100 --> 01:22:09,000
not entirely sure.

1897
01:22:09,300 --> 01:22:12,700
Is there a way to load a dll at a known Base address?

1898
01:22:15,000 --> 01:22:15,500
Yeah.

1899
01:22:15,600 --> 01:22:19,400
So there may even be something you could do to fix that as well.

1900
01:22:19,500 --> 01:22:20,700
I have to think about that.

1901
01:22:24,700 --> 01:22:27,200
Because then you'd have to be to make sure the Linker was padded out

1902
01:22:27,200 --> 01:22:27,900
an alert.

1903
01:22:27,900 --> 01:22:28,600
So forget that.

1904
01:22:28,600 --> 01:22:29,500
Sorry, Sidetrack.

1905
01:22:30,500 --> 01:22:31,900
So yeah, what you can't.

1906
01:22:31,900 --> 01:22:35,900
The only thing that you can't do is since the dll gets loaded and

1907
01:22:35,900 --> 01:22:41,200
unloaded when you make a change game State, playback will work fine

1908
01:22:41,300 --> 01:22:43,000
with function pointers, right?

1909
01:22:43,000 --> 01:22:45,800
So you could have pointers to functions in the game State and the game

1910
01:22:45,800 --> 01:22:46,700
State playback stuff.

1911
01:22:46,700 --> 01:22:47,900
We just did would work.

1912
01:22:47,900 --> 01:22:48,700
Absolutely fine.

1913
01:22:49,000 --> 01:22:52,700
What won't work fine, is if you store any pointers to functions.

1914
01:22:53,300 --> 01:22:58,100
That are not updated whenever you recompile and reload the dll because

1915
01:22:58,100 --> 01:23:01,600
the dll may get loaded a different Base address and the Linker May

1916
01:23:01,600 --> 01:23:03,800
output different layout for the executable.

1917
01:23:04,400 --> 01:23:08,300
So basically, when you are doing these techniques function pointers

1918
01:23:08,300 --> 01:23:11,200
are a bad idea like you do not want to have a bunch of function

1919
01:23:11,200 --> 01:23:11,800
pointers.

1920
01:23:12,800 --> 01:23:15,900
Thankfully we will I can't think of really anywhere, we'll be using

1921
01:23:15,900 --> 01:23:16,700
function pointers.

1922
01:23:17,800 --> 01:23:18,300
But yes.

1923
01:23:18,300 --> 01:23:21,300
If we do use function, pointers and that is a thing that would break

1924
01:23:22,000 --> 01:23:22,900
and we would have to try

1925
01:23:23,000 --> 01:23:24,000
I to work around that.

1926
01:23:24,000 --> 01:23:27,400
Somehow probably anywhere, we would use function pointers would be

1927
01:23:27,400 --> 01:23:29,200
relatively easy for us to work around.

1928
01:23:30,100 --> 01:23:33,900
But yeah, what would be nice is if we could tell the Linker to always

1929
01:23:33,900 --> 01:23:37,300
be incremental and never move functions unless it absolutely have to

1930
01:23:37,800 --> 01:23:40,100
and then if it did move, the function, leave a stub there.

1931
01:23:41,000 --> 01:23:44,300
And also to tell Windows to always load the library at a known Base

1932
01:23:44,300 --> 01:23:49,300
address that we tell it, which I don't know if you can do, if we could

1933
01:23:49,300 --> 01:23:50,400
do those two things.

1934
01:23:50,700 --> 01:23:52,200
This would literally be bulletproof.

1935
01:23:52,200 --> 01:23:52,900
Like you could use

1936
01:23:53,000 --> 01:23:53,900
You could just go ahead and do it.

1937
01:23:53,900 --> 01:23:57,700
And so that it's actually mostly limitation of those tools that will

1938
01:23:57,700 --> 01:23:59,600
that don't allow us to get 100% the

1939
01:24:00,000 --> 01:24:03,700
Should actually just work, but unfortunately, I think we can't.

1940
01:24:03,800 --> 01:24:05,400
The Linker just isn't written to do that.

1941
01:24:05,400 --> 01:24:06,800
If we had written our own Linker.

1942
01:24:06,800 --> 01:24:09,600
Again, the more stuff you write from scratch, the more powerful you

1943
01:24:09,600 --> 01:24:12,900
become because there is no reason we couldn't just make that work.

1944
01:24:14,000 --> 01:24:16,900
The Linker could totally support that and it would just work but

1945
01:24:16,900 --> 01:24:18,300
unfortunately, we don't have that luxury.

1946
01:24:18,300 --> 01:24:18,600
So

1947
01:24:25,500 --> 01:24:27,800
how can we make the playback work?

1948
01:24:27,800 --> 01:24:29,200
If we have no Base address?

1949
01:24:29,200 --> 01:24:35,400
You can't really you really need the Base address.

1950
01:24:35,400 --> 01:24:40,000
If you don't have a base address and for some reason you really still

1951
01:24:40,000 --> 01:24:41,000
wanted to try and do this.

1952
01:24:41,000 --> 01:24:44,800
You would have to make sure that all of your code did not use internal

1953
01:24:44,800 --> 01:24:46,200
pointers to itself, right?

1954
01:24:46,200 --> 01:24:49,500
It all would have to be based off of offsets, but you could do that.

1955
01:24:49,500 --> 01:24:50,000
Right?

1956
01:24:50,000 --> 01:24:54,300
And in fact, see could have supported this but didn't and it's a real

1957
01:24:54,300 --> 01:24:55,300
shame that it didn't, there's

1958
01:24:55,500 --> 01:24:58,200
You could have supported this really easily but it just makes it a

1959
01:24:58,200 --> 01:25:01,500
real hassle in see to work without that.

1960
01:25:01,700 --> 01:25:04,400
So offsets are the way that you would do that.

1961
01:25:04,400 --> 01:25:05,200
Instead of pointers.

1962
01:25:05,200 --> 01:25:08,500
You'd always use offsets from the base and then you'd always just keep

1963
01:25:08,500 --> 01:25:11,100
around the base pointer and just use offsets off of it.

1964
01:25:11,200 --> 01:25:13,200
So you can actually make all of that work as well.

1965
01:25:13,200 --> 01:25:16,300
It's just again, the languages aren't set up for it.

1966
01:25:16,300 --> 01:25:19,900
It's, it's one of those sad things that just it's why we need a new

1967
01:25:19,900 --> 01:25:20,200
see.

1968
01:25:20,200 --> 01:25:21,100
It's why we need John.

1969
01:25:21,100 --> 01:25:23,600
Blow to make his new language, and for it to be awesome, because then

1970
01:25:23,600 --> 01:25:24,900
we can just fix all these things.

1971
01:25:24,900 --> 01:25:25,300
And then,

1972
01:25:25,400 --> 01:25:26,800
Then, there'd be no stopping us.

1973
01:25:26,800 --> 01:25:27,100
Right?

1974
01:25:27,100 --> 01:25:29,500
Because all these things are totally possible on the computer.

1975
01:25:29,600 --> 01:25:32,400
It's just either the operating system or the language.

1976
01:25:33,100 --> 01:25:35,700
Not actually allowing the programmer to do their job.

1977
01:25:36,300 --> 01:25:36,700
So,

1978
01:25:41,600 --> 01:25:45,100
Wouldn't the address spaces of to game States Clash?

1979
01:25:47,600 --> 01:25:53,500
So, yes, and no, I mean, basically, the way that I would suggest doing

1980
01:25:53,500 --> 01:25:56,900
it, like, if you wanted to load to dlls and you wanted them both to

1981
01:25:56,900 --> 01:26:01,900
use the same base State, what you would have to do is you'd have to

1982
01:26:01,900 --> 01:26:05,400
basically map the memory in and out of the location.

1983
01:26:05,400 --> 01:26:08,900
So you'd map one memory in Run the game for one frame map it out map.

1984
01:26:08,900 --> 01:26:11,200
The other memory into location map, the other one out.

1985
01:26:11,600 --> 01:26:12,800
But I think you could do it.

1986
01:26:13,100 --> 01:26:14,600
So I don't think it's actually a problem.

1987
01:26:14,800 --> 01:26:18,600
If you want to have the two memory States in in place.

1988
01:26:18,600 --> 01:26:24,500
Simultaneously, your, you got problems, but the other thing that I

1989
01:26:24,500 --> 01:26:27,600
would say, is, you could, you could actually do it, much simpler by

1990
01:26:27,600 --> 01:26:29,000
just creating a subprocess.

1991
01:26:29,200 --> 01:26:32,400
So you could create sub processes, Each of, which had their own memory

1992
01:26:32,400 --> 01:26:32,700
space.

1993
01:26:32,700 --> 01:26:37,500
For example, and then you could run the two copies as sub processes of

1994
01:26:37,500 --> 01:26:39,900
you with using the same location in memory.

1995
01:26:39,900 --> 01:26:41,000
So you could do that as well.

1996
01:26:41,500 --> 01:26:44,200
All of those things would not be very difficult to do again.

1997
01:26:44,200 --> 01:26:45,600
I just don't know why you would.

1998
01:26:45,900 --> 01:26:48,100
I don't know why I would want to run the two states, the game like

1999
01:26:48,100 --> 01:26:48,500
that.

2000
01:26:48,900 --> 01:26:50,800
I haven't thought of a good use case for it.

2001
01:26:51,400 --> 01:26:53,600
But if you if you had a really good use case for it, we could make

2002
01:26:53,600 --> 01:26:54,100
that work.

2003
01:26:54,100 --> 01:26:55,000
That's a thing we could.

2004
01:26:55,000 --> 01:26:55,900
We could make work.

2005
01:27:00,100 --> 01:27:02,900
Would a memory mapped file that doesn't commit to just be faster to

2006
01:27:02,900 --> 01:27:03,800
read right from?

2007
01:27:04,500 --> 01:27:05,200
Yeah.

2008
01:27:05,200 --> 01:27:08,000
So the reason I didn't use a memory mapped file is because we need to

2009
01:27:08,000 --> 01:27:12,400
control when it gets written because we want to change it a bunch and

2010
01:27:12,400 --> 01:27:14,100
then go back to the previous state.

2011
01:27:15,000 --> 01:27:15,800
So

2012
01:27:18,300 --> 01:27:22,300
I don't know if Windows allows you to do like a strobing memory mapped

2013
01:27:22,300 --> 01:27:25,400
file where you can basically say, okay, right the state of the room at

2014
01:27:25,400 --> 01:27:27,800
file, make sure the state of the Marriott in file right now is

2015
01:27:27,800 --> 01:27:28,300
committed.

2016
01:27:28,300 --> 01:27:28,500
Okay.

2017
01:27:28,500 --> 01:27:31,100
Now don't do that anymore.

2018
01:27:31,600 --> 01:27:32,800
I don't know if it can do that.

2019
01:27:32,900 --> 01:27:35,200
So there's I don't know if memory mapped files can actually support

2020
01:27:35,200 --> 01:27:38,900
the use case we need because otherwise that would be nice because

2021
01:27:38,900 --> 01:27:42,400
Windows would know stuff about the changes and know what would need to

2022
01:27:42,400 --> 01:27:42,900
be recorded.

2023
01:27:42,900 --> 01:27:45,500
So, that would be nice again, if the operating system gave us more

2024
01:27:45,500 --> 01:27:47,300
direct control over the mmu.

2025
01:27:47,600 --> 01:27:52,000
Um, we would be able to make this technique way better than it is,

2026
01:27:52,000 --> 01:27:54,500
but, you know, we don't have that control.

2027
01:27:54,500 --> 01:27:54,900
So

2028
01:27:58,900 --> 01:28:01,500
I thought you were going to use the memory snapshot as a game save,

2029
01:28:01,500 --> 01:28:04,100
but you're using it like a Save State in an emulator.

2030
01:28:04,100 --> 01:28:04,600
Yes.

2031
01:28:05,000 --> 01:28:05,200
We are.

2032
01:28:05,200 --> 01:28:08,100
Basically, just saying, hey, this is good for emulators.

2033
01:28:08,100 --> 01:28:08,700
Right?

2034
01:28:08,700 --> 01:28:10,600
We might as well, if it works for an emulator.

2035
01:28:10,600 --> 01:28:11,900
It should work for actual game.

2036
01:28:12,300 --> 01:28:18,300
But yeah, we can use memory snapshots as save games as well.

2037
01:28:18,700 --> 01:28:20,600
But there may be reasons why we don't want to do that.

2038
01:28:20,600 --> 01:28:22,300
So we'll have to think about that when we get to it.

2039
01:28:31,100 --> 01:28:33,800
How easy do you think it is to rearrange an existing code base?

2040
01:28:33,800 --> 01:28:36,800
So that it supports the instant live coding future and what steps

2041
01:28:36,800 --> 01:28:38,400
would need to be taken to get there.

2042
01:28:38,800 --> 01:28:40,900
Do you just separate the platform layer and collect all the game

2043
01:28:40,900 --> 01:28:42,500
membrane allocations in one place?

2044
01:28:43,600 --> 01:28:44,100
Yeah.

2045
01:28:44,100 --> 01:28:46,100
I mean, basically what you need to do is make sure that the code is

2046
01:28:46,100 --> 01:28:52,400
architected roughly the way our code is architected now and as long as

2047
01:28:52,400 --> 01:28:53,400
you can do that.

2048
01:28:55,000 --> 01:28:55,800
You can do this.

2049
01:28:56,500 --> 01:28:58,100
But again, you can't use function pointers.

2050
01:28:58,500 --> 01:29:02,700
So there's there's issues there.

2051
01:29:02,700 --> 01:29:07,100
Like like so I don't know if you can even attempt what I'm doing in

2052
01:29:07,100 --> 01:29:11,400
C++, for example, because in C++ objects have vtable pointers in them.

2053
01:29:11,600 --> 01:29:13,900
So right off the bat, you're dead in the water because those vtable

2054
01:29:13,900 --> 01:29:17,500
pointers are pointing to the wrong place now, so maybe there's a way

2055
01:29:17,500 --> 01:29:18,000
to fix that.

2056
01:29:18,000 --> 01:29:18,500
I don't know.

2057
01:29:18,500 --> 01:29:21,100
I haven't thought about it because I don't use C++ has object systems

2058
01:29:21,100 --> 01:29:21,900
and stuff like that.

2059
01:29:22,300 --> 01:29:24,600
I don't I don't like anything about C++.

2060
01:29:24,800 --> 01:29:25,200
Is.

2061
01:29:26,300 --> 01:29:28,700
Three tables virtual public all that stuff is really bad.

2062
01:29:28,700 --> 01:29:29,300
In my opinion.

2063
01:29:29,300 --> 01:29:33,600
I strongly advise against ever using virtual functions.

2064
01:29:34,600 --> 01:29:36,900
They're almost always bad for a number of reasons.

2065
01:29:37,400 --> 01:29:41,000
And so if you're going that if you have a code that's really

2066
01:29:41,000 --> 01:29:42,700
object-oriented inheritance E.

2067
01:29:43,000 --> 01:29:45,600
I don't know how to work around those limitations.

2068
01:29:45,600 --> 01:29:47,300
I don't know how to fix the vtable pointers.

2069
01:29:47,500 --> 01:29:49,800
Maybe there's an easier way to do it, but I don't know what it is.

2070
01:29:50,400 --> 01:29:55,800
So you have to be coding in a way that doesn't have pointers to

2071
01:29:55,800 --> 01:29:55,900
functions.

2072
01:29:56,000 --> 01:29:57,700
Functions baked into your data.

2073
01:30:03,100 --> 01:30:04,700
Will there be a Christmas special?

2074
01:30:08,600 --> 01:30:10,600
There's a there's a broadcast on Christmas.

2075
01:30:10,600 --> 01:30:11,700
I don't know if it's special though.

2076
01:30:12,100 --> 01:30:13,200
Might just be a normal day.

2077
01:30:18,900 --> 01:30:21,300
How will replay work once you have startup Logic for the game?

2078
01:30:21,300 --> 01:30:22,300
How will it be skipped?

2079
01:30:22,300 --> 01:30:23,200
Will just work.

2080
01:30:23,700 --> 01:30:24,200
It just works.

2081
01:30:24,200 --> 01:30:26,100
Because remember, we're saving the memory state.

2082
01:30:26,400 --> 01:30:29,400
So, basically the startup code for the game, runs you play the game

2083
01:30:29,400 --> 01:30:31,200
for a while, you get up to some level.

2084
01:30:31,300 --> 01:30:32,500
Something is not tuned, right?

2085
01:30:32,500 --> 01:30:36,100
You hit the L key that saves the memory state right there.

2086
01:30:36,100 --> 01:30:39,000
So, everything that happened previously doesn't need to be replayed,

2087
01:30:39,200 --> 01:30:39,500
right?

2088
01:30:39,500 --> 01:30:40,900
It just, it knows the state.

2089
01:30:40,900 --> 01:30:43,200
So it just is replaying just that one part back.

2090
01:30:43,400 --> 01:30:45,800
So startup Logic for the game is not relevant.

2091
01:30:45,800 --> 01:30:48,400
It's already happened, and it's captured in the memory state that we

2092
01:30:48,400 --> 01:30:48,600
say.

2093
01:31:05,400 --> 01:31:07,200
Okay, so clarification on the earlier question.

2094
01:31:07,200 --> 01:31:08,500
How often do you look up code?

2095
01:31:08,500 --> 01:31:10,000
Like you have done today then?

2096
01:31:10,000 --> 01:31:13,700
How often do you study code code defined here as simple functions to

2097
01:31:13,700 --> 01:31:16,500
complex programs on your own not due to a job.

2098
01:31:19,400 --> 01:31:20,200
I guess nowadays.

2099
01:31:20,200 --> 01:31:21,600
I don't really study code at all.

2100
01:31:22,900 --> 01:31:25,900
I kind of feel like I'm mostly know how to code everything that I want

2101
01:31:25,900 --> 01:31:26,600
to code.

2102
01:31:26,600 --> 01:31:31,400
And so usually I feel like the next time I'll start studying code

2103
01:31:31,400 --> 01:31:34,200
again is when there's a better language than see that I can do a bunch

2104
01:31:34,200 --> 01:31:36,400
of stuff in that I couldn't do before and I need to start learning

2105
01:31:36,400 --> 01:31:36,800
again.

2106
01:31:38,300 --> 01:31:39,800
But usually it's don't study code that much.

2107
01:31:39,800 --> 01:31:42,800
What I will study sometimes is like algorithms and techniques that I

2108
01:31:42,800 --> 01:31:43,400
don't know.

2109
01:31:44,100 --> 01:31:47,500
So like, you know, if someone posts a thing that's like

2110
01:31:49,600 --> 01:31:56,300
You know, here's a new way of doing like, like binary search or

2111
01:31:56,300 --> 01:31:59,200
something and I'll go look at that because I don't know, like, there's

2112
01:31:59,200 --> 01:31:59,900
tons of algorithms.

2113
01:31:59,900 --> 01:32:03,300
I don't know and tons of ways of making more optimal stuff that I

2114
01:32:03,300 --> 01:32:03,600
don't know.

2115
01:32:03,600 --> 01:32:07,000
So I'll often look at people's code posts that are like, here's a new

2116
01:32:07,000 --> 01:32:09,400
technique that we learned but like code architecture stuff.

2117
01:32:09,400 --> 01:32:13,200
I kind of don't feel I usually I almost never see stuff on the web

2118
01:32:13,200 --> 01:32:16,000
where I think that the code architecture stuff was with stuff that I

2119
01:32:16,000 --> 01:32:18,100
would necessarily agree with, or if it is that it's stuff that I

2120
01:32:18,100 --> 01:32:18,600
already knew.

2121
01:32:18,600 --> 01:32:18,600
So,

2122
01:32:18,800 --> 01:32:22,100
Don't usually get any benefit of out of that these days.

2123
01:32:22,700 --> 01:32:24,900
So I tend to be mostly reading when I study code.

2124
01:32:24,900 --> 01:32:25,900
I'm what I'm looking at code.

2125
01:32:25,900 --> 01:32:27,700
I'm looking at, not the code.

2126
01:32:27,700 --> 01:32:29,700
I'm looking at the algorithm, right?

2127
01:32:29,700 --> 01:32:32,600
I'm looking at the, the math, the person did or whatever.

2128
01:32:32,700 --> 01:32:34,500
Because I, there's a ton of that stuff.

2129
01:32:34,500 --> 01:32:35,000
I don't know.

2130
01:32:35,000 --> 01:32:37,300
And there always will be, you can't learn it all.

2131
01:32:37,500 --> 01:32:42,300
So, I learned I learned that stuff pretty often if that makes sense.

2132
01:32:43,200 --> 01:32:45,300
But a lot of those becomes like when you've been programming in c, as

2133
01:32:45,300 --> 01:32:48,100
long as I have, you probably know most of the architecture options

2134
01:32:48,100 --> 01:32:48,600
that you have.

2135
01:32:48,700 --> 01:32:49,400
Have right?

2136
01:32:49,400 --> 01:32:51,300
And so, there isn't a lot that I can.

2137
01:32:51,500 --> 01:32:54,600
I rarely, if ever nowadays, see something that I didn't already know

2138
01:32:54,600 --> 01:32:57,600
in terms of code structure, but in terms of algorithms, there's always

2139
01:32:57,600 --> 01:32:58,000
something new.

2140
01:32:58,000 --> 01:32:59,800
There's 100 new algorithms to learn every year.

2141
01:33:00,000 --> 01:33:02,400
That might be cool and you're never going to learn all of them.

2142
01:33:02,400 --> 01:33:03,500
So that's, that's pretty good.

2143
01:33:03,500 --> 01:33:05,900
And also, you can look at like papers, like, you can read siggraph and

2144
01:33:05,900 --> 01:33:08,300
stuff and that's again, you're not like studying code.

2145
01:33:08,300 --> 01:33:09,300
You're learning new algorithms.

2146
01:33:09,300 --> 01:33:12,100
And those are usually just new stuff that gets you thinking in new

2147
01:33:12,100 --> 01:33:12,500
ways.

2148
01:33:13,000 --> 01:33:13,400
So,

2149
01:33:22,700 --> 01:33:25,800
Perhaps rebase image regarding loading dll at location.

2150
01:33:26,100 --> 01:33:26,500
Yeah.

2151
01:33:26,500 --> 01:33:27,700
I don't know, again.

2152
01:33:27,700 --> 01:33:30,200
It doesn't matter because the Linker is going to mess with us anyway,

2153
01:33:30,200 --> 01:33:32,000
so I think I don't know.

2154
01:33:32,000 --> 01:33:34,400
I think we're basically just dead in the water with function pointers.

2155
01:33:34,600 --> 01:33:35,800
We need the Linker to help us.

2156
01:33:35,800 --> 01:33:38,800
Maybe maybe if we turn on incremental Atwood, I don't know or edit

2157
01:33:38,800 --> 01:33:39,200
continue.

2158
01:33:39,200 --> 01:33:40,100
Maybe would, I don't know.

2159
01:33:42,400 --> 01:33:43,400
Let's see.

2160
01:33:48,500 --> 01:33:50,400
Let's see, Dynamic, bass.

2161
01:33:50,400 --> 01:33:53,500
No - fixed the Linker and it will load at ox40.

2162
01:33:53,600 --> 01:33:56,000
So anal, I don't know if that's true.

2163
01:33:56,800 --> 01:33:58,500
I'm pretty sure that with address space layout.

2164
01:33:58,500 --> 01:34:00,600
Randomization now for security.

2165
01:34:00,600 --> 01:34:04,100
I don't think you're actually ever allowed to force your dll to load a

2166
01:34:04,100 --> 01:34:05,200
specific location.

2167
01:34:05,300 --> 01:34:06,700
So you can check it out.

2168
01:34:08,000 --> 01:34:12,000
It's basically, this stuff aslr, right?

2169
01:34:12,200 --> 01:34:13,900
You can read about a SLR.

2170
01:34:14,000 --> 01:34:16,700
I pretty sure, Windows just doesn't let you load deal as a fixed

2171
01:34:16,700 --> 01:34:17,800
location anymore, but

2172
01:34:19,200 --> 01:34:20,000
I don't know if that's true.

2173
01:34:20,000 --> 01:34:23,100
Maybe you can maybe there's still ways because there used to be old

2174
01:34:23,100 --> 01:34:26,900
Flags where you could actually specify what the Base address of the

2175
01:34:27,000 --> 01:34:31,100
dll was, but I thought that nowadays that was harder to do that.

2176
01:34:31,100 --> 01:34:31,800
Maybe not.

2177
01:34:32,300 --> 01:34:32,800
So I don't know.

2178
01:34:32,800 --> 01:34:37,000
You can take a look and see if aslr messes with you or if it doesn't.

2179
01:34:37,200 --> 01:34:41,600
But either way and you can turn S aslr off on the whole system if you

2180
01:34:41,600 --> 01:34:42,100
want to.

2181
01:34:42,300 --> 01:34:44,000
But either way I don't think that's the biggest problem.

2182
01:34:44,000 --> 01:34:44,600
It's the Linker.

2183
01:34:44,600 --> 01:34:45,500
That's the biggest problem.

2184
01:34:45,500 --> 01:34:47,900
The function pointers are already going to move even if we load the

2185
01:34:47,900 --> 01:34:48,100
deal.

2186
01:34:48,200 --> 01:34:51,100
Ll at the same Base address when we change stuff.

2187
01:34:51,100 --> 01:34:56,400
And so I don't think we can really count on function pointers and I

2188
01:34:56,400 --> 01:34:57,800
don't think we really need them either.

2189
01:35:15,000 --> 01:35:18,300
How long does it take for you to get to a point where you can conceive

2190
01:35:18,300 --> 01:35:18,800
of a feature?

2191
01:35:18,800 --> 01:35:21,400
And with little effort, know exactly what you need to accomplish to

2192
01:35:21,400 --> 01:35:22,400
realize that feature.

2193
01:35:22,600 --> 01:35:25,000
For example, I have conceived of game State recording and Playback

2194
01:35:25,000 --> 01:35:25,300
before.

2195
01:35:25,300 --> 01:35:27,600
However, I've never been able to get to the point where everything was

2196
01:35:27,600 --> 01:35:30,200
set up in a way to make it easy to do one.

2197
01:35:30,200 --> 01:35:33,000
Small example of that is the fixed Base address for the memory block

2198
01:35:33,000 --> 01:35:33,400
without it.

2199
01:35:33,400 --> 01:35:35,700
It seems impossible, or at least way more difficult.

2200
01:35:35,700 --> 01:35:38,800
Most of programming seems to be having the experience to know how to

2201
01:35:38,800 --> 01:35:41,800
set yourself up to make your ideas easy to accomplish.

2202
01:35:41,800 --> 01:35:43,900
How long did it take you to get to this level of effectiveness?

2203
01:35:44,000 --> 01:35:49,300
Goodness, so I guess what I would say is probably a very long time,

2204
01:35:50,000 --> 01:35:52,600
probably at least 20 years of programming.

2205
01:35:52,800 --> 01:35:55,900
Of course, I was very young when I started so you might count those

2206
01:35:55,900 --> 01:35:59,800
years a little bit less because you're not really that smart and you

2207
01:36:00,000 --> 01:36:01,200
It was a lot of stuff when you were little.

2208
01:36:01,900 --> 01:36:04,200
So I don't know about that, but I would say, yeah, probably at least

2209
01:36:04,200 --> 01:36:07,400
20 years before you get to be the point where you're pretty fast at

2210
01:36:07,400 --> 01:36:09,400
that sort of stuff, but maybe other people will be faster.

2211
01:36:09,400 --> 01:36:15,700
I don't know, but it took me a long time as for realizing stuff with

2212
01:36:15,700 --> 01:36:16,600
little effort.

2213
01:36:16,600 --> 01:36:19,600
The other thing to remember is this actually is a very easy thing to

2214
01:36:19,600 --> 01:36:20,800
do what I just did.

2215
01:36:21,500 --> 01:36:24,900
It's basically like, Oh, I thought about it for a while, you know, and

2216
01:36:24,900 --> 01:36:27,200
I was like, okay, it's not, it's not too bad.

2217
01:36:27,200 --> 01:36:29,400
And in fact, I think the first time I did a system like this was

2218
01:36:29,400 --> 01:36:29,800
actually like

2219
01:36:30,000 --> 01:36:31,600
1996 at D6.

2220
01:36:31,600 --> 01:36:34,900
I did one that just blasted the state of memory out something and

2221
01:36:34,900 --> 01:36:35,500
reloaded it.

2222
01:36:35,500 --> 01:36:38,300
So that we could do physics to bugging and you could single step.

2223
01:36:38,300 --> 01:36:42,100
So what it did was it just outputted the state of the game every time

2224
01:36:42,100 --> 01:36:44,700
because we had, like this physics block that we could blast out.

2225
01:36:44,700 --> 01:36:47,100
So like I first did that actually way back.

2226
01:36:47,100 --> 01:36:50,000
I think I was like 19 at the time and had, you know, a lot less

2227
01:36:50,000 --> 01:36:50,600
program experience.

2228
01:36:50,600 --> 01:36:55,900
I first did this thing then and it turns out that you can do stuff

2229
01:36:55,900 --> 01:36:56,400
like that.

2230
01:36:57,000 --> 01:36:59,300
If you have stuff that doesn't have a bunch of pointers in it and all

2231
01:36:59,300 --> 01:36:59,800
those sorts of

2232
01:37:00,000 --> 01:37:00,200
Things.

2233
01:37:00,500 --> 01:37:02,600
And so it was kind of building on that and later.

2234
01:37:02,600 --> 01:37:06,300
I was like, oh, okay, I could do this as well with other stuff by just

2235
01:37:06,300 --> 01:37:09,200
having a fixed Base address or something like that and then pointers

2236
01:37:09,200 --> 01:37:10,400
would work too and blah blah blah.

2237
01:37:10,400 --> 01:37:12,600
So it's just kind of like stuff that builds on each other over time,

2238
01:37:12,600 --> 01:37:17,100
but this is actually relatively simple feature complex stuff, still

2239
01:37:17,100 --> 01:37:18,200
takes me a long time.

2240
01:37:18,300 --> 01:37:23,200
I will sometimes work a month on a code architecture thing because I

2241
01:37:23,200 --> 01:37:27,500
have an idea that I think something should be possible and I left a

2242
01:37:27,500 --> 01:37:29,800
refine it and refine it and refine it and refine.

2243
01:37:29,900 --> 01:37:32,600
In it and I make tons of mistakes.

2244
01:37:33,400 --> 01:37:35,300
So it depends on how hard the problem is.

2245
01:37:35,300 --> 01:37:37,600
And it depends on how new the territory is for you.

2246
01:37:38,700 --> 01:37:41,600
And so this happens to be a particularly easy thing because there

2247
01:37:41,600 --> 01:37:43,100
happens to be a very clean solution.

2248
01:37:43,100 --> 01:37:46,700
If you just do a few simple steps, those are much easier to arrive at

2249
01:37:47,200 --> 01:37:50,100
than other things which can be much more complicated and take a lot

2250
01:37:50,100 --> 01:37:51,200
longer and have a lot more.

2251
01:37:51,200 --> 01:37:51,800
Intricacy.

2252
01:37:52,000 --> 01:37:55,200
And so we will probably even see some things on this stream.

2253
01:37:55,200 --> 01:37:55,700
Later on.

2254
01:37:55,700 --> 01:37:58,800
We're working on the game where I have to go through several revisions

2255
01:37:58,800 --> 01:37:59,600
to get it, right.

2256
01:38:00,800 --> 01:38:03,400
and so so this happens to be particularly simple because there's a few

2257
01:38:03,400 --> 01:38:05,900
simple things you can do architectural that, make it so that it just

2258
01:38:05,900 --> 01:38:07,400
works, but

2259
01:38:09,400 --> 01:38:14,500
You know, that that was that was a lucky that this this I don't want

2260
01:38:14,500 --> 01:38:17,500
you to get the sense that I sit down and it goes that smoothly all the

2261
01:38:17,500 --> 01:38:18,500
time, right?

2262
01:38:20,900 --> 01:38:24,000
You will see things on the stream where we have to really work at it.

2263
01:38:24,300 --> 01:38:28,100
And that's, I think I probably, I don't know if there's programmers,

2264
01:38:28,100 --> 01:38:31,500
who get past that point to, but I suspect, I will probably die.

2265
01:38:31,500 --> 01:38:33,900
Someday, never, haven't gotten to the point where it doesn't.

2266
01:38:33,900 --> 01:38:36,700
Sometimes take me a month to solve a hard architecture problem.

2267
01:38:43,600 --> 01:38:47,300
Couldn't you create an offset pointer struct which overloads the unary

2268
01:38:47,300 --> 01:38:48,500
star operator?

2269
01:38:51,600 --> 01:38:53,400
Probably not going to try and touch that one.

2270
01:38:54,000 --> 01:38:56,700
My first question would be how would it know what the base pointer was

2271
01:38:57,200 --> 01:38:58,000
at that point.

2272
01:38:59,000 --> 01:38:59,600
I guess you said a

2273
01:39:00,300 --> 01:39:00,800
I don't know.

2274
01:39:02,000 --> 01:39:03,200
You could try setting a global.

2275
01:39:05,500 --> 01:39:07,500
For specifying, a dll base address.

2276
01:39:08,700 --> 01:39:10,200
Okay, and I was just watching again.

2277
01:39:10,200 --> 01:39:11,300
I don't think the deal of Base address.

2278
01:39:11,300 --> 01:39:12,500
Is that important?

2279
01:39:12,500 --> 01:39:15,600
Like I said, I mean it may be possible to do now even with a SLR.

2280
01:39:17,300 --> 01:39:18,800
There's maybe a switch that says, no really.

2281
01:39:18,800 --> 01:39:19,800
Even though you have a SLR.

2282
01:39:19,800 --> 01:39:22,500
I really need to be at the space address, but I'm not sure if you can,

2283
01:39:22,500 --> 01:39:25,400
I'm not sure if it doesn't just get overridden, but even so, I think

2284
01:39:25,400 --> 01:39:26,700
it's the Linker that with toward us.

2285
01:39:35,400 --> 01:39:38,600
Pseudonym 73, we did talk about iOS objects, but we haven't talked

2286
01:39:38,600 --> 01:39:40,100
about rendering subsystem objects yet.

2287
01:39:40,100 --> 01:39:40,700
Like Shader.

2288
01:39:40,700 --> 01:39:43,400
Texture handles, can't be part of the game State perhaps getting ahead

2289
01:39:43,400 --> 01:39:44,000
of ourselves.

2290
01:39:44,000 --> 01:39:45,500
But how do you plan to handle this?

2291
01:39:46,300 --> 01:39:47,600
Well, that is getting ahead.

2292
01:39:47,600 --> 01:39:48,800
So wait till we get there.

2293
01:39:51,700 --> 01:39:53,300
Where is Santa hat for Christmas next week?

2294
01:39:53,300 --> 01:39:55,600
If I can find one, that may very well happen.

2295
01:40:01,200 --> 01:40:03,400
Care to reiterate your candy reiterate.

2296
01:40:03,400 --> 01:40:07,600
The pertinent compiler options that allow this to work as it is or

2297
01:40:07,600 --> 01:40:08,500
those that will prevent.

2298
01:40:08,500 --> 01:40:11,500
I don't know that there are compiler options that prevent this.

2299
01:40:11,500 --> 01:40:13,600
I think I don't think these are compiler option.

2300
01:40:13,700 --> 01:40:16,000
Related things, enemy Mouse.

2301
01:40:16,000 --> 01:40:18,400
I may be wrong about that, but I don't think there's any compiler

2302
01:40:18,700 --> 01:40:22,900
option things that we need to that need to be set for this to work.

2303
01:40:35,700 --> 01:40:37,200
Let's see.

2304
01:40:43,800 --> 01:40:46,300
Have you got some good explanation on how your Arctic code is that in

2305
01:40:46,300 --> 01:40:46,600
the text?

2306
01:40:46,600 --> 01:40:47,900
You wrote about your work on the witness?

2307
01:40:47,900 --> 01:40:51,800
Yes, if you go to my blog the witness stuff does have some articles

2308
01:40:51,800 --> 01:40:54,500
about architecting code, but we'll be seeing quote How We Do code,

2309
01:40:54,500 --> 01:40:55,400
architecting on the stream.

2310
01:40:55,400 --> 01:40:58,100
Because there's several things in this game that I've never done

2311
01:40:58,100 --> 01:40:58,600
before.

2312
01:40:58,600 --> 01:40:59,400
Like I picked things.

2313
01:40:59,400 --> 01:41:03,300
Like I've never written a system that does blah and so I will be sort

2314
01:41:03,300 --> 01:41:04,400
of live, architecting it.

2315
01:41:04,400 --> 01:41:05,400
Like you'll see me sick.

2316
01:41:05,500 --> 01:41:08,900
You'll see me go through each step that I would go through to arrive

2317
01:41:08,900 --> 01:41:09,900
at a good architecture.

2318
01:41:10,000 --> 01:41:13,100
And so, you'll see me do like a bad version and fix it and do stuff

2319
01:41:13,100 --> 01:41:13,400
like will

2320
01:41:13,500 --> 01:41:16,600
Through that process where I'm not just saying, I know how to write

2321
01:41:16,600 --> 01:41:17,700
this and Bam.

2322
01:41:17,700 --> 01:41:18,400
It's right?

2323
01:41:18,400 --> 01:41:18,800
Or something.

2324
01:41:18,800 --> 01:41:19,600
Like that, won't be happening.

2325
01:41:19,600 --> 01:41:20,500
We'll be going through.

2326
01:41:20,500 --> 01:41:22,600
They'll at least be a couple places.

2327
01:41:22,600 --> 01:41:28,100
If not many places where I have to work through the architecture,

2328
01:41:28,100 --> 01:41:31,100
live, rather than knowing what the architecture should be

2329
01:41:31,100 --> 01:41:32,400
cross-platform code.

2330
01:41:32,400 --> 01:41:34,100
I kind of know what the architecture should, because I've written it

2331
01:41:34,100 --> 01:41:39,000
so many times, but definitely, like, when we get to things pieces of

2332
01:41:39,000 --> 01:41:42,200
the game, they'll be pieces that I have never written before on any

2333
01:41:42,200 --> 01:41:43,400
game or

2334
01:41:43,500 --> 01:41:46,300
or in any even in a test thing.

2335
01:41:46,900 --> 01:41:50,300
And so then you will, I'm doing that intentionally so that you'll be

2336
01:41:50,300 --> 01:41:50,900
able to see me.

2337
01:41:50,900 --> 01:41:52,800
Architect the code, how I write something.

2338
01:41:52,800 --> 01:41:55,000
I don't know how to write because I think that's probably one of the

2339
01:41:55,000 --> 01:41:56,300
most important things to learn.

2340
01:42:00,000 --> 01:42:00,900
The.

2341
01:42:07,500 --> 01:42:08,500
Someone was asking.

2342
01:42:09,600 --> 01:42:12,000
Unfortunately, a lot of simple things have been made Complicated by

2343
01:42:12,000 --> 01:42:14,000
what I was taught by the correct way of programming, which was

2344
01:42:14,000 --> 01:42:16,900
entirely based on a very myopic view of heavy object oriented Ascend,

2345
01:42:16,900 --> 01:42:17,500
lack of solid.

2346
01:42:17,500 --> 01:42:20,000
The level understanding, I have to spend a lot of time on learning,

2347
01:42:20,000 --> 01:42:22,400
what I was taught just to get to features which should be easy, but

2348
01:42:22,400 --> 01:42:25,200
we're made hard by the kind of programming.

2349
01:42:25,200 --> 01:42:26,100
I learned in school.

2350
01:42:26,100 --> 01:42:27,900
Have you had some are painful and learning process?

2351
01:42:27,900 --> 01:42:33,200
Yes, basically, like when I was first exposed to C++ kind of like when

2352
01:42:33,200 --> 01:42:34,200
people are first exposed to

2353
01:42:35,800 --> 01:42:42,800
In in like 95, let's say I started trying to program and what we're

2354
01:42:42,800 --> 01:42:43,100
good luck.

2355
01:42:43,100 --> 01:42:48,500
I read like Scott Meyers effective C++ and like, I read like, you know

2356
01:42:48,700 --> 01:42:50,700
those, I don't remember what all those books are.

2357
01:42:50,700 --> 01:42:53,600
But like the I don't remember what who the guys names are.

2358
01:42:54,100 --> 01:42:57,500
But the people I had a subscription to the C++ report, right?

2359
01:42:59,000 --> 01:43:02,100
And basically, it meant that I didn't write a single good piece of

2360
01:43:02,100 --> 01:43:04,800
code for probably five years, like, everything I wrote.

2361
01:43:04,900 --> 01:43:08,000
It was awful and it's because those techniques don't work there.

2362
01:43:08,000 --> 01:43:08,700
They're bad.

2363
01:43:08,700 --> 01:43:13,000
Like, you know, if you have a Scott Meyers book on your shelf, throw

2364
01:43:13,000 --> 01:43:16,200
it out its complete garbage and every last thing and it's a waste of

2365
01:43:16,200 --> 01:43:16,600
time.

2366
01:43:17,700 --> 01:43:20,900
And so I had exactly the same thing.

2367
01:43:20,900 --> 01:43:25,100
I went to work for rad eventually and it was kind of like detox

2368
01:43:25,100 --> 01:43:29,600
because like Jeff Roberts and John Miles were both, not that kind of

2369
01:43:29,600 --> 01:43:31,300
programmer and Jeff.

2370
01:43:31,300 --> 01:43:34,800
Particularly is a very low-level old-school programmer, and I kind of

2371
01:43:34,900 --> 01:43:37,600
Added thinking, why am I doing all these things?

2372
01:43:37,600 --> 01:43:39,700
Programming was so much better back.

2373
01:43:39,700 --> 01:43:41,400
When I only programmed in C and then C.

2374
01:43:41,400 --> 01:43:43,200
+ +, it's all been awful and nothing works.

2375
01:43:43,200 --> 01:43:44,200
It's slow and it's ugly.

2376
01:43:44,200 --> 01:43:46,000
And it takes forever to write stuff.

2377
01:43:46,000 --> 01:43:47,000
What's going on here?

2378
01:43:47,000 --> 01:43:51,100
And then I tried just not programming in C++ anymore.

2379
01:43:51,100 --> 01:43:54,500
I said, let me go back to see and I'll only start using a C++ feature.

2380
01:43:54,500 --> 01:43:57,400
If I find that it actually use, if I can prove that it was actually

2381
01:43:57,400 --> 01:43:57,800
helping me.

2382
01:43:57,800 --> 01:44:00,700
And what I found is basically overloaded functions and overloaded

2383
01:44:00,700 --> 01:44:02,900
operators, were the only two things that I ever wanted again.

2384
01:44:02,900 --> 01:44:04,600
Occasionally.

2385
01:44:04,900 --> 01:44:08,200
For Destructor, pairs for doing things like timing blocks, but that

2386
01:44:08,200 --> 01:44:09,100
was about it.

2387
01:44:09,200 --> 01:44:13,900
And so when I was writing granny, the 3D animation library for rad,

2388
01:44:14,300 --> 01:44:17,600
basically, that was when I kind of learned how to program again and so

2389
01:44:17,600 --> 01:44:19,300
yes, it's a very painful process.

2390
01:44:19,300 --> 01:44:24,200
I I don't know if I wish I could get the time back or if I'm glad that

2391
01:44:24,200 --> 01:44:24,700
I went through it.

2392
01:44:24,700 --> 01:44:27,500
So now I just know to never do those things and that they're actually

2393
01:44:27,500 --> 01:44:29,100
bad and I don't just have to speculate that.

2394
01:44:29,100 --> 01:44:30,600
They're bad programming practices.

2395
01:44:30,600 --> 01:44:33,400
I just know that they actually are and so

2396
01:44:34,300 --> 01:44:35,600
You know, yes, I've been there.

2397
01:44:35,700 --> 01:44:38,500
I totally been there and it was it was not fun.

2398
01:44:42,100 --> 01:44:42,500
All right.

2399
01:44:42,500 --> 01:44:45,200
Looks like we've gotten to the end of the questions.

2400
01:44:46,900 --> 01:44:48,100
Okay.

2401
01:44:49,200 --> 01:44:50,500
Let's see here.

2402
01:44:51,300 --> 01:44:52,100
I guess it is.

2403
01:44:52,100 --> 01:44:53,300
The end of the stream.

2404
01:44:53,300 --> 01:44:57,400
We have reached we have reached the end of day 23.

2405
01:44:57,400 --> 01:44:58,500
Thank you all for joining me.

2406
01:44:58,500 --> 01:44:59,800
I had a lot of fun implementing that

2407
01:45:00,000 --> 01:45:01,100
I thought it was going to be fun.

2408
01:45:01,100 --> 01:45:01,400
It was fun.

2409
01:45:01,400 --> 01:45:04,200
So I hope you have enjoyed it.

2410
01:45:04,200 --> 01:45:07,100
If you would like to play around with the code at home.

2411
01:45:07,100 --> 01:45:11,600
You can always pre-order on the handmade here at org website and you

2412
01:45:11,600 --> 01:45:14,300
can download the latest source code every night and play around with

2413
01:45:14,300 --> 01:45:14,400
it.

2414
01:45:14,400 --> 01:45:19,200
Do whatever you would like to do experiment, try new things and play

2415
01:45:19,200 --> 01:45:20,200
around with the stuff that we did.

2416
01:45:20,200 --> 01:45:24,200
And you'll also, of course, get a copy of the game when it's released

2417
01:45:24,200 --> 01:45:24,700
and all that other.

2418
01:45:24,700 --> 01:45:25,000
Good stuff.

2419
01:45:25,000 --> 01:45:29,300
If you have to catch up or ask questions.

2420
01:45:30,000 --> 01:45:30,900
Or anything else.

2421
01:45:31,200 --> 01:45:33,900
Video related, the news and forums link will go to a bunch of

2422
01:45:33,900 --> 01:45:35,700
resources that you can use including stuff.

2423
01:45:35,700 --> 01:45:39,500
Like a coding Resource page that has how to run handmade hero on stuff

2424
01:45:39,500 --> 01:45:41,500
like, Mac or Linux with people who've done ports.

2425
01:45:41,900 --> 01:45:43,500
There's, you want support the video series.

2426
01:45:43,500 --> 01:45:44,900
There's a patreon page for it.

2427
01:45:45,500 --> 01:45:48,900
There's the tweets, obviously for following the series schedule.

2428
01:45:48,900 --> 01:45:50,800
And there's also on the news and forums.

2429
01:45:50,800 --> 01:45:54,100
There's a schedule posted and of course does a YouTube video archive

2430
01:45:54,100 --> 01:45:55,700
that has the videos uploaded.

2431
01:45:55,700 --> 01:45:57,700
So I will be uploading these right after they finish.

2432
01:45:57,700 --> 01:45:59,800
I upload them so you can always get them right away from us.

2433
01:46:00,000 --> 01:46:02,200
Item, so, thank you so much for joining me.

2434
01:46:02,200 --> 01:46:03,800
Tomorrow will be at 11 a.m.

2435
01:46:04,000 --> 01:46:07,900
And so will Friday and it'll just be cleanup days getting a set for

2436
01:46:07,900 --> 01:46:08,400
next week.

2437
01:46:08,400 --> 01:46:10,800
So if you're around tomorrow morning, please join me for that.

2438
01:46:10,800 --> 01:46:13,800
If not, I hope to see you recorded.

2439
01:46:14,700 --> 01:46:19,100
And yeah, I'm looking forward to finishing it up our win32 stuff so

2440
01:46:19,100 --> 01:46:21,400
that we can basically move on to game stuff, which I think is gonna be

2441
01:46:21,400 --> 01:46:21,800
a lot of fun.

2442
01:46:21,800 --> 01:46:24,700
So thanks everyone for joining me and I will hopefully see you

2443
01:46:24,700 --> 01:46:25,100
tomorrow.

