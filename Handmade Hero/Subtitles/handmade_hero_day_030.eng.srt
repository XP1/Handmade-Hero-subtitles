1
00:00:01,400 --> 00:00:03,800
Anyway, welcome to handmade hero everyone.

2
00:00:03,800 --> 00:00:07,200
This is, of course, the show where we make an entire game from scratch

3
00:00:07,200 --> 00:00:09,900
using nothing, but our bare hands.

4
00:00:09,900 --> 00:00:12,800
No libraries, no engine.

5
00:00:12,800 --> 00:00:18,100
And we are basically doing this because I really think there's

6
00:00:18,100 --> 00:00:21,400
something valuable to everyone who's a serious game, programmer going

7
00:00:21,400 --> 00:00:25,000
through the entire pipeline of a game from start to finish sometime,

8
00:00:25,000 --> 00:00:25,900
just so they can see.

9
00:00:25,900 --> 00:00:29,300
Every last little thing that goes on in a sort of a full stack of a

10
00:00:29,300 --> 00:00:31,200
game and just understanding every last little thing that

11
00:00:31,400 --> 00:00:33,800
And I think it's great for educational purposes.

12
00:00:33,800 --> 00:00:35,800
I think it makes you more powerful when you do professional

13
00:00:35,800 --> 00:00:36,400
programming.

14
00:00:36,700 --> 00:00:39,400
I think it allows you to be the kind of guy who works on an engine

15
00:00:39,400 --> 00:00:39,700
team.

16
00:00:39,700 --> 00:00:43,400
It allows you to be someone who can overcome limitations of the stools

17
00:00:43,400 --> 00:00:44,100
that they work with.

18
00:00:44,100 --> 00:00:47,300
It's just it's very empowering to know how everything works and that

19
00:00:47,300 --> 00:00:48,800
is exactly what we are doing.

20
00:00:49,200 --> 00:00:52,700
We are taking it slow and investigating every last little aspect of

21
00:00:52,700 --> 00:00:54,400
game programming as it comes up.

22
00:00:54,400 --> 00:00:57,700
We are at the point where we have made our win32 prototyping layer.

23
00:00:58,400 --> 00:01:00,000
And we are building our game on top of it.

24
00:01:00,000 --> 00:01:00,200
Right.

25
00:01:00,200 --> 00:01:00,600
Now.

26
00:01:01,100 --> 00:01:07,800
What we are doing this week is we have sort of been sort of trying to

27
00:01:07,800 --> 00:01:09,500
imagine roughly.

28
00:01:09,500 --> 00:01:12,100
What are the sorts of things our game is going to have to do so that

29
00:01:12,100 --> 00:01:13,300
we can start building our engine.

30
00:01:13,300 --> 00:01:16,300
And one of the things that I said early on is in order to build a game

31
00:01:16,300 --> 00:01:18,200
engine, you need a game in order to build a game.

32
00:01:18,200 --> 00:01:19,700
You need a game engine, right?

33
00:01:19,700 --> 00:01:22,000
It's kind of a, its kind of this sort of thing.

34
00:01:22,600 --> 00:01:26,000
Because if you've never built a game before, you won't know what to

35
00:01:26,000 --> 00:01:28,100
put in your game engine, you won't know how to

36
00:01:28,200 --> 00:01:30,600
Sure, an architect it correctly so that it's not just a pain in the

37
00:01:30,600 --> 00:01:32,800
butt to use and similarly.

38
00:01:32,800 --> 00:01:35,400
If you don't have a game engine you can't really make a game because

39
00:01:35,400 --> 00:01:37,500
the game engines, the thing that provides all the services.

40
00:01:37,500 --> 00:01:40,400
It's the thing that puts Graphics up on the screen is the thing that

41
00:01:40,400 --> 00:01:43,200
loads the art is the thing that plays the sounds and the music's and

42
00:01:43,200 --> 00:01:43,700
everything.

43
00:01:44,000 --> 00:01:45,200
So how do you make a game of it?

44
00:01:45,200 --> 00:01:48,100
And so, basically, we're in a chicken and egg scenario if you will

45
00:01:48,100 --> 00:01:49,700
when you're making everything from scratch.

46
00:01:49,900 --> 00:01:55,200
And so, what you want to do is you want to use sort of what I call

47
00:01:55,200 --> 00:01:56,600
exploration programming, right?

48
00:01:56,600 --> 00:01:58,100
You want to kind of start to just

49
00:01:58,200 --> 00:02:02,100
Just play around with making the game in the engine together.

50
00:02:02,100 --> 00:02:04,900
You just want to kind of play around with test code so that you can

51
00:02:04,900 --> 00:02:07,500
start to see what things should look like.

52
00:02:07,500 --> 00:02:10,199
And then once you kind of get a sense of what a certain part looks

53
00:02:10,199 --> 00:02:11,500
like, then you can sort of go.

54
00:02:11,500 --> 00:02:14,300
Oh, let me go make some code here that will start to be the basis of

55
00:02:14,300 --> 00:02:15,900
the engine in this part and so on.

56
00:02:16,100 --> 00:02:17,200
And so that's what we're really doing.

57
00:02:17,200 --> 00:02:17,400
Today.

58
00:02:17,400 --> 00:02:19,400
We're kind of continuing on our exploration.

59
00:02:19,400 --> 00:02:21,100
Just trying to get stuff on the screen.

60
00:02:21,200 --> 00:02:22,100
Make stuff work.

61
00:02:22,100 --> 00:02:23,500
We're not caring about code quality.

62
00:02:23,500 --> 00:02:25,800
We're not talking about cleanliness or any other abstract Concepts

63
00:02:25,800 --> 00:02:28,000
were just talking about, let's just write some code.

64
00:02:28,300 --> 00:02:32,000
That does some gave me stuff and let's see what it looks like so that

65
00:02:32,000 --> 00:02:37,100
we can start to pull the sort of the common pieces out of it and pull

66
00:02:37,100 --> 00:02:39,900
the structure out of it that we're going to need in order to make a

67
00:02:39,900 --> 00:02:44,000
game engine that will allow us to do nice fast game development and do

68
00:02:44,000 --> 00:02:45,200
all the things that we want to do.

69
00:02:45,200 --> 00:02:47,500
If we were to license an engine or do something like that.

70
00:02:47,700 --> 00:02:50,000
We want to make the that component right there.

71
00:02:50,700 --> 00:02:55,200
So this will start to educate us to make that design look really good.

72
00:02:55,300 --> 00:02:58,000
So if you are following along at home and you have

73
00:02:58,100 --> 00:02:59,900
Pre-ordered the source code on handmade hero.

74
00:03:00,100 --> 00:03:02,900
Org with a little pre order button here.

75
00:03:02,900 --> 00:03:05,300
You should have gotten an email, that email has a link that allows you

76
00:03:05,300 --> 00:03:07,400
to download the zip file inside the zip file.

77
00:03:07,600 --> 00:03:08,900
There is ipps of every day.

78
00:03:08,900 --> 00:03:09,800
We are on day 30.

79
00:03:09,800 --> 00:03:14,200
So you want to unzip day, 29, yesterday's work, because that is what

80
00:03:14,200 --> 00:03:15,300
I'm starting with today.

81
00:03:15,500 --> 00:03:18,200
And so if you unzip, they 29 into a directory and start working with

82
00:03:18,200 --> 00:03:21,300
that, you will be exactly where I am right now.

83
00:03:21,300 --> 00:03:22,700
And where am I right now?

84
00:03:22,700 --> 00:03:24,100
Is a good question.

85
00:03:24,800 --> 00:03:29,800
I am going to run the game so you can see what we

86
00:03:30,000 --> 00:03:30,400
Were doing.

87
00:03:30,400 --> 00:03:33,100
So what we were doing was we were playing with the tile map.

88
00:03:33,100 --> 00:03:35,600
We were basically saying, okay, we've got this little tile map here.

89
00:03:35,600 --> 00:03:39,200
You can see we be putting some walls, you put in some doors and we

90
00:03:39,200 --> 00:03:40,600
have a little dude who moves around?

91
00:03:40,600 --> 00:03:41,000
We have it.

92
00:03:41,000 --> 00:03:45,300
So he cannot move through these various pieces, right?

93
00:03:45,300 --> 00:03:48,000
And so again, and what we decided to do was just use rectangles for

94
00:03:48,000 --> 00:03:51,000
everything because we didn't want to deal with bitmaps yet until we

95
00:03:51,000 --> 00:03:52,900
saw how we wanted to use them.

96
00:03:53,100 --> 00:03:56,600
So pretty straightforward stuff, nothing really particularly strange,

97
00:03:56,600 --> 00:03:57,600
but we've got it all going.

98
00:03:57,600 --> 00:03:59,900
And so what we were trying to do yesterday and what we want to finish

99
00:04:00,000 --> 00:04:04,800
Up today is we'd like to be able to walk out of the tie of the tile

100
00:04:04,800 --> 00:04:06,800
map and onto another tile map.

101
00:04:06,800 --> 00:04:07,000
Right?

102
00:04:07,000 --> 00:04:11,700
We want to be able to walk from one screen to another and have the map

103
00:04:11,700 --> 00:04:13,100
update properly.

104
00:04:13,300 --> 00:04:14,700
So that is what we are doing.

105
00:04:14,700 --> 00:04:20,100
And if I remember correctly, we had gotten partway through it, but we

106
00:04:20,100 --> 00:04:22,900
ran out of time on the stream to finish it up.

107
00:04:22,900 --> 00:04:27,300
So let's go ahead and take a look at where we actually.

108
00:04:27,300 --> 00:04:29,800
We're going to go ahead and move it over here.

109
00:04:29,900 --> 00:04:30,100
Here.

110
00:04:30,700 --> 00:04:31,200
Okay.

111
00:04:31,400 --> 00:04:37,200
So what we had done is we had sort of, we wrote inside our game update

112
00:04:37,200 --> 00:04:38,600
and render call, right?

113
00:04:38,700 --> 00:04:41,100
We're basically just spamming all of our code straight on.

114
00:04:41,100 --> 00:04:41,500
In here.

115
00:04:41,500 --> 00:04:44,300
We actually just made some little arrays that represent the tile maps

116
00:04:44,300 --> 00:04:45,800
that we wanted to Traverse.

117
00:04:46,300 --> 00:04:50,000
We made an array, a two-by-two array of those tile maps and we

118
00:04:50,000 --> 00:04:53,300
assigned various tile maps to them.

119
00:04:53,300 --> 00:04:56,200
Of course, you notice we didn't, it's got some nice typos in there.

120
00:04:56,200 --> 00:04:59,500
These are supposed to be actually assigned to each of these things

121
00:04:59,500 --> 00:04:59,800
individually.

122
00:05:00,000 --> 00:05:01,500
Really, I believe which wasn't.

123
00:05:01,800 --> 00:05:02,100
Oh wait.

124
00:05:02,100 --> 00:05:02,900
No, that never mind.

125
00:05:02,900 --> 00:05:03,500
That's not a typo.

126
00:05:03,500 --> 00:05:04,300
That's correct.

127
00:05:04,600 --> 00:05:07,000
That was basically cloning this initial stuff here.

128
00:05:07,800 --> 00:05:10,300
So basically what we had is we these were the, these were the

129
00:05:10,300 --> 00:05:11,200
variables that we found.

130
00:05:11,200 --> 00:05:14,400
We needed to compute where the guy was, and the tile map and to draw

131
00:05:14,400 --> 00:05:14,900
the tile map.

132
00:05:14,900 --> 00:05:16,400
So we pulled those out into Tom app structure.

133
00:05:16,400 --> 00:05:18,100
Then we realized we had multiple tile Maps.

134
00:05:18,300 --> 00:05:19,400
So we made a world structure.

135
00:05:19,400 --> 00:05:21,400
We made a tile map count X, in the tilemap count.

136
00:05:21,400 --> 00:05:23,600
Why with a pointer to the tile Maps, right?

137
00:05:24,300 --> 00:05:25,300
We have it made its parts yet.

138
00:05:25,300 --> 00:05:27,200
So actually dense, we're going to talk about that a little bit later,

139
00:05:27,200 --> 00:05:29,600
but basically what happens

140
00:05:29,900 --> 00:05:32,800
Is we assigned everything to our world?

141
00:05:32,800 --> 00:05:37,600
We have our world pointer sort of worked out here, but we never

142
00:05:37,600 --> 00:05:38,600
actually did anything with it.

143
00:05:38,600 --> 00:05:40,300
We're still doing all of our work.

144
00:05:40,400 --> 00:05:42,300
We just kind of grabbed tilemap.

145
00:05:42,500 --> 00:05:43,300
In fact, right here.

146
00:05:43,300 --> 00:05:45,100
You can kind of see if I can pile.

147
00:05:45,200 --> 00:05:48,400
We grab tilemap 00, the the base tilemap.

148
00:05:48,700 --> 00:05:51,800
It's in the first position of that array and we do all of our work

149
00:05:51,800 --> 00:05:52,300
with it, right?

150
00:05:52,300 --> 00:05:52,800
You can system.

151
00:05:52,800 --> 00:05:55,100
We do tile map tile map tile map, tile map.

152
00:05:55,100 --> 00:05:55,600
Tile map.

153
00:05:55,600 --> 00:05:56,900
All that sort of stuff, right?

154
00:05:57,000 --> 00:05:58,900
Nothing particularly interesting going on there.

155
00:05:59,600 --> 00:05:59,800
So,

156
00:06:00,000 --> 00:06:03,000
What I want to do here is the player with the height that actually

157
00:06:03,000 --> 00:06:04,400
should be moved kind of up here.

158
00:06:05,000 --> 00:06:07,500
And this should kind of be referencing off this thing because we have

159
00:06:07,500 --> 00:06:09,000
some constant variables here.

160
00:06:09,500 --> 00:06:10,000
Again.

161
00:06:10,300 --> 00:06:11,700
Just taking it one step at a time.

162
00:06:11,700 --> 00:06:12,500
There's a lot of stuff.

163
00:06:12,500 --> 00:06:14,100
We're going to want to do to clean all of this up.

164
00:06:14,100 --> 00:06:16,800
I mean, this is literally just spamming the code out here, but I'm

165
00:06:16,800 --> 00:06:19,700
just making little baby steps to kind of put things into the right

166
00:06:19,700 --> 00:06:20,800
place slowly and over time.

167
00:06:20,800 --> 00:06:21,600
It will creat.

168
00:06:21,700 --> 00:06:25,900
And again a lot of this is not I'm not even saying so a lot of this

169
00:06:25,900 --> 00:06:28,800
stuff I wouldn't be doing because I just know the right answers to

170
00:06:28,800 --> 00:06:29,600
some of this stuff.

171
00:06:31,000 --> 00:06:34,700
So I could just sort of type it in, but if I didn't already know what

172
00:06:34,700 --> 00:06:37,300
some of the right answers are, this is not like messy code.

173
00:06:37,300 --> 00:06:38,400
I'm just doing for the stream.

174
00:06:38,600 --> 00:06:41,300
This is actually how I recommend you do it.

175
00:06:41,300 --> 00:06:44,200
I recommend you type in awful code first.

176
00:06:44,200 --> 00:06:47,700
That's whatever the first thing you think of to get stuff up on the

177
00:06:47,700 --> 00:06:52,700
screen is and then afterwards when you're satisfied, does the basic

178
00:06:52,700 --> 00:06:57,300
operations that it needs to do only them go through and clean it up

179
00:06:57,300 --> 00:06:59,900
because otherwise you're spending a lot of time thinking

180
00:07:00,000 --> 00:07:03,300
Think about how to make the code clean, but you haven't actually

181
00:07:03,300 --> 00:07:05,600
figured out which code you actually need to make clean yet.

182
00:07:05,600 --> 00:07:08,800
And so you end up going through all of these Cascades of writing, some

183
00:07:08,800 --> 00:07:12,200
clean code and spending a bunch of time, fussing with that, only to

184
00:07:12,200 --> 00:07:15,000
realize that it doesn't do some of the operations, you actually need

185
00:07:15,000 --> 00:07:15,500
to do.

186
00:07:15,600 --> 00:07:19,400
And so I can't stress enough how I really do, not think it's a good

187
00:07:19,400 --> 00:07:23,100
practice to write clean code when you are just exploring things,

188
00:07:23,100 --> 00:07:23,400
right?

189
00:07:23,400 --> 00:07:27,400
Messy code and then write the clean code only once so that you save

190
00:07:27,700 --> 00:07:29,800
that effort of writing clean.

191
00:07:29,900 --> 00:07:32,700
Code only to when it actually is going to pay off.

192
00:07:37,000 --> 00:07:39,400
Because code like this that's just transient and just like that were

193
00:07:39,400 --> 00:07:41,500
playing around with isn't going to stay around.

194
00:07:41,900 --> 00:07:45,100
So any time you spent making it clean was full-on wasted.

195
00:07:45,100 --> 00:07:48,800
You basically just took your if you believe time is money, you just

196
00:07:48,800 --> 00:07:50,800
held up a bunch of Benjamin's.

197
00:07:50,800 --> 00:07:54,900
If you will, as they say in the states as the kids today, say and then

198
00:07:54,900 --> 00:07:57,500
you light them on fire and that's no good.

199
00:07:58,200 --> 00:07:58,600
All right.

200
00:07:58,600 --> 00:08:02,800
So what I'd like to do is start to get us working so that we start to

201
00:08:02,800 --> 00:08:03,600
think about

202
00:08:03,900 --> 00:08:06,400
Where we are in this in this tile map space.

203
00:08:06,400 --> 00:08:10,600
So you'll notice that we had sort of a concept of where the player was

204
00:08:10,800 --> 00:08:13,800
and this notion of where the player was a sort of inside one tile map.

205
00:08:13,800 --> 00:08:15,300
This is where they are inside the tile map.

206
00:08:15,300 --> 00:08:18,600
But what I need to do and we wrote this function already yesterday.

207
00:08:19,200 --> 00:08:22,100
There was a function that says, get a tile map from a tile Map X in

208
00:08:22,100 --> 00:08:26,600
the town map, Y, and that tilemap X and Y, are basically sort of

209
00:08:26,600 --> 00:08:29,900
indices into an array of tile maps to say which tilemap were in.

210
00:08:29,900 --> 00:08:32,900
And then the player X and Y tells us where we are inside that Tom app.

211
00:08:32,900 --> 00:08:33,700
So what I need to do

212
00:08:33,900 --> 00:08:37,400
Do is I basically need to do a player.

213
00:08:37,400 --> 00:08:40,500
Tilemap X and a player, tilemap why?

214
00:08:40,700 --> 00:08:41,200
Right?

215
00:08:41,400 --> 00:08:44,800
To sort of say here is the tile map that players in and then here's

216
00:08:44,800 --> 00:08:46,900
where they are inside the tile map.

217
00:08:47,100 --> 00:08:47,700
Right?

218
00:08:48,600 --> 00:08:50,100
So, that's something that I need to do.

219
00:08:50,900 --> 00:08:54,900
And then what I can do is when we are actually operating on the tile

220
00:08:54,900 --> 00:08:59,200
Maps here, I could start to say, alright, which tilemap are we going

221
00:08:59,200 --> 00:08:59,800
to operate on?

222
00:09:00,000 --> 00:09:00,700
In the game Loop.

223
00:09:00,700 --> 00:09:05,200
Well, we're going to operate on whichever one player.

224
00:09:06,200 --> 00:09:08,500
Player tilemap X, right?

225
00:09:08,500 --> 00:09:09,800
Game State player.

226
00:09:09,800 --> 00:09:12,000
Tilemap why we're gonna operate on?

227
00:09:12,000 --> 00:09:12,800
Whichever one.

228
00:09:13,300 --> 00:09:16,900
We were actually looking at what the player that we actually remember

229
00:09:16,900 --> 00:09:17,900
the player to be in.

230
00:09:17,900 --> 00:09:22,200
Now, if I remember correctly, like I said, we wrote that function that

231
00:09:22,200 --> 00:09:24,600
will actually retrieve it for us and actually does bounds checking

232
00:09:24,600 --> 00:09:24,800
right?

233
00:09:24,800 --> 00:09:27,200
Which is get tile map and you pass it.

234
00:09:27,200 --> 00:09:28,100
The Tom FX in the time.

235
00:09:28,100 --> 00:09:28,400
That's why.

236
00:09:28,400 --> 00:09:29,700
So what I can do here

237
00:09:30,000 --> 00:09:32,500
Is I can actually use that query function, right?

238
00:09:32,500 --> 00:09:36,300
I can actually use that query function to do the query for us, which

239
00:09:36,300 --> 00:09:37,700
is good because I type that in wrong.

240
00:09:37,700 --> 00:09:40,700
I typed it in backwards there the Y comes first in the X comes second.

241
00:09:40,900 --> 00:09:43,400
I don't know if you noticed that that as I was just doing a stream.

242
00:09:43,400 --> 00:09:46,400
So this is actually much better because X usually we think of X is

243
00:09:46,400 --> 00:09:49,900
coming first and why it's coming second but in C, because we tend to

244
00:09:49,900 --> 00:09:54,400
store things in order of X is first and then why's it ends up being

245
00:09:54,400 --> 00:09:54,900
backwards.

246
00:09:54,900 --> 00:09:57,600
Looks like that when you access an array, so I kind of like to have

247
00:09:57,600 --> 00:09:59,800
accessors because then I can always pass my ex first when my

248
00:10:00,000 --> 00:10:03,000
Second and then I can throw bounds checking in there if I want to.

249
00:10:03,400 --> 00:10:05,100
So this is just strictly better in my opinion.

250
00:10:05,100 --> 00:10:06,100
So I'm going to stick with that.

251
00:10:06,500 --> 00:10:11,500
All right, so I got to get the tile map out there and then if I guess

252
00:10:11,600 --> 00:10:14,300
what we want to do here is also assert that he's always on a towel map

253
00:10:14,700 --> 00:10:17,500
for now, because he should never actually, we should never allow the

254
00:10:17,500 --> 00:10:18,700
player to be in some location.

255
00:10:18,700 --> 00:10:20,700
That doesn't actually have a town map associated with it.

256
00:10:21,000 --> 00:10:22,600
So for now, let's just say that that's true.

257
00:10:23,300 --> 00:10:23,700
Okay.

258
00:10:24,000 --> 00:10:26,000
So we need to do that.

259
00:10:26,100 --> 00:10:29,800
We've got that game state that has to go after.

260
00:10:29,900 --> 00:10:32,500
Initialization because we have initialized the game state yet at that

261
00:10:32,500 --> 00:10:33,100
point.

262
00:10:33,400 --> 00:10:34,200
So there we go.

263
00:10:34,200 --> 00:10:36,900
And now we should still be on the same screen which we are.

264
00:10:37,200 --> 00:10:39,800
So really all we need to do now is start thinking about moving the

265
00:10:39,800 --> 00:10:42,400
player, when they would go off of here.

266
00:10:42,700 --> 00:10:45,500
And we also have to do some other things, which is that right now,

267
00:10:46,000 --> 00:10:49,500
when it looks off that tile map, we're not actually looking onto

268
00:10:49,500 --> 00:10:50,400
another tilemap.

269
00:10:50,400 --> 00:10:50,700
What?

270
00:10:50,700 --> 00:10:54,600
Because if you remember, we wrote the code to do sort of are stopping

271
00:10:54,600 --> 00:10:54,800
us.

272
00:10:54,800 --> 00:10:58,300
When we hit a wall, what that's basically doing is it's looking where

273
00:10:58,300 --> 00:10:59,800
the player would be on the next frame.

274
00:11:00,000 --> 00:11:02,400
And it's saying is the location where the player would be on the next

275
00:11:02,400 --> 00:11:04,000
frame in the tile map, empty or not.

276
00:11:04,100 --> 00:11:08,500
Well, when we get to here and it reads and it looks over to sort of

277
00:11:08,500 --> 00:11:12,800
no-man's-land, we assume that if you were accessing off the tile map,

278
00:11:13,000 --> 00:11:15,900
the the timeout that are currently on, if you were to look outside of

279
00:11:15,900 --> 00:11:19,000
it, either on the left the right, the top or the bottom.

280
00:11:20,500 --> 00:11:23,400
We just assumed it to be filled but we need to do now is start

281
00:11:23,400 --> 00:11:27,000
assuming that it's not filled assuming that it's actually could be

282
00:11:27,000 --> 00:11:29,800
another Tom app that we have to look look at and see what the

283
00:11:29,900 --> 00:11:31,100
The actual value is right.

284
00:11:31,400 --> 00:11:35,600
And so if we if we go through here and take a look at that is Tom at

285
00:11:35,600 --> 00:11:37,300
Point empty thing, right?

286
00:11:37,700 --> 00:11:39,400
That is tilemap point empty.

287
00:11:39,800 --> 00:11:44,100
What we want to do here is allow that function right to start looking

288
00:11:44,100 --> 00:11:45,800
across multiple tile Maps.

289
00:11:46,300 --> 00:11:46,800
Okay.

290
00:11:47,700 --> 00:11:52,100
And so what we want to do is start saying, well, there's probably the

291
00:11:52,100 --> 00:11:57,100
equivalent here of something like, you know this sort of thing where

292
00:11:57,100 --> 00:11:57,600
it's like,

293
00:11:58,900 --> 00:11:59,900
There's an is tilemap.

294
00:12:00,000 --> 00:12:03,800
Point and empty which is the function that we had before and then

295
00:12:03,800 --> 00:12:10,400
there's maybe something like a is World Point empty, which is actually

296
00:12:10,400 --> 00:12:13,800
going to take a world location.

297
00:12:13,900 --> 00:12:14,500
Right?

298
00:12:14,800 --> 00:12:19,400
I'm sorry a world struck so that it can access multiple tile maps and

299
00:12:19,400 --> 00:12:23,500
maybe that thing will actually take something more like this.

300
00:12:23,500 --> 00:12:28,000
So it's going to take the tile Map X and the tile map Y.

301
00:12:28,200 --> 00:12:29,800
And then it's going to take the test.

302
00:12:30,000 --> 00:12:34,000
And or so I should say test Tom FX test tile map.

303
00:12:34,000 --> 00:12:34,500
Why?

304
00:12:34,600 --> 00:12:37,000
And then it's going to take that test X text.

305
00:12:37,000 --> 00:12:37,300
Why.

306
00:12:37,400 --> 00:12:38,500
Right now?

307
00:12:38,500 --> 00:12:40,600
I'm just again, just doing the speculative lie because we don't

308
00:12:40,600 --> 00:12:42,700
actually know what this function wants to do.

309
00:12:42,800 --> 00:12:46,400
We probably want to preserve this guy here, who's actually doing our

310
00:12:46,400 --> 00:12:49,000
testing inside one tile map, but let's just take a look at what we

311
00:12:49,000 --> 00:12:49,900
might want to do here.

312
00:12:50,100 --> 00:12:53,100
So the test tile Map X in the test tile map, why?

313
00:12:53,600 --> 00:12:57,500
Well this test X test why is essentially what can happen is if those

314
00:12:57,500 --> 00:12:59,800
were going to be outside the boundary, right?

315
00:13:00,200 --> 00:13:02,700
If you think about what happens here, if the player tile X in the

316
00:13:02,700 --> 00:13:04,100
player tile tile, why?

317
00:13:04,500 --> 00:13:05,900
If they were outside the boundary?

318
00:13:05,900 --> 00:13:08,700
What we were doing is we were just using this if statement to prevent

319
00:13:08,700 --> 00:13:11,700
us from ever doing anything, in the cases where they were, but what we

320
00:13:11,700 --> 00:13:15,200
could do instead is just start looking at what happens, right?

321
00:13:15,200 --> 00:13:18,300
We could say if the player tile X was less than zero, instead of like

322
00:13:18,300 --> 00:13:19,200
preventing it from looking.

323
00:13:19,200 --> 00:13:23,900
If the player tile X was less than 0, what we could say is we could

324
00:13:23,900 --> 00:13:28,100
say, okay, let's actually change what we were looking at.

325
00:13:28,100 --> 00:13:29,900
Let's assume that if it's less.

326
00:13:30,100 --> 00:13:34,100
Than 0, we're going to map it into the next tile Maps space.

327
00:13:34,100 --> 00:13:36,300
The next tile map over, right?

328
00:13:36,900 --> 00:13:40,800
So, you can picture what this is doing right here.

329
00:13:40,800 --> 00:13:42,700
Is our lovely diagram from yesterday.

330
00:13:43,300 --> 00:13:48,300
It's my art is always unpair unrivaled as you know, so if I have a

331
00:13:48,300 --> 00:13:49,900
tile map here, right?

332
00:13:50,200 --> 00:13:52,800
And I have some tile map next to it.

333
00:13:52,800 --> 00:13:53,300
Right?

334
00:13:53,600 --> 00:13:54,100
Previously.

335
00:13:54,100 --> 00:13:56,500
What we were doing is we are figuring out where in this town map you

336
00:13:56,500 --> 00:13:59,900
were and maybe you know, you walked off the left Edge, so

337
00:14:00,000 --> 00:14:02,200
So it's negative 1 or something, right?

338
00:14:02,600 --> 00:14:04,600
And so if it was negative one, we just assumed.

339
00:14:04,600 --> 00:14:05,400
It's blocked.

340
00:14:05,500 --> 00:14:06,300
That's what we're assuming.

341
00:14:06,600 --> 00:14:12,000
What we'd like to do, instead is ask the next tile map before us what

342
00:14:12,000 --> 00:14:15,600
he had in his right, most column, right?

343
00:14:15,800 --> 00:14:19,900
So if a tile map was N, Things wide, right?

344
00:14:19,900 --> 00:14:22,300
And they're numbered 0 through n minus 1.

345
00:14:22,300 --> 00:14:27,900
As we do in see, when we look at the negative 1 of this guy, if it,

346
00:14:27,900 --> 00:14:29,800
when we look at negative 1,

347
00:14:30,100 --> 00:14:34,700
We sort of want to do is say, Okay - one is going to map to n minus 1

348
00:14:35,000 --> 00:14:39,500
on the previous tile map and negative 2 is going to map to n minus 2

349
00:14:39,700 --> 00:14:41,700
on the previous, tilemap, right?

350
00:14:42,000 --> 00:14:45,000
So, it's basically, it's n.

351
00:14:45,100 --> 00:14:51,400
However, Big N is - right whatever our actual x value is that we

352
00:14:51,400 --> 00:14:52,200
computed here.

353
00:14:52,300 --> 00:14:52,900
Right?

354
00:14:53,000 --> 00:14:53,300
Right.

355
00:14:53,300 --> 00:14:56,200
It's this value minus, whatever.

356
00:14:56,200 --> 00:14:59,800
The width of a tile map is in tiles is the actual

357
00:15:00,200 --> 00:15:01,900
That we'd want to look into, right?

358
00:15:02,900 --> 00:15:08,200
So you can imagine it's basically the new tile X is just whatever that

359
00:15:08,200 --> 00:15:11,000
with is - the player tile X, right?

360
00:15:11,100 --> 00:15:11,900
If that makes sense.

361
00:15:13,100 --> 00:15:14,100
I don't know if that makes sense.

362
00:15:14,700 --> 00:15:17,500
But like we said, it's going to be negative.

363
00:15:17,500 --> 00:15:18,600
So it just becomes.

364
00:15:18,600 --> 00:15:21,000
I'm not explaining this very well and I apologize that hopefully this

365
00:15:21,000 --> 00:15:21,700
made some sense.

366
00:15:21,900 --> 00:15:25,100
Basically, what I'm saying is we know this number is already negative.

367
00:15:25,200 --> 00:15:28,500
We know that we support, we got a negative number because this is the

368
00:15:28,500 --> 00:15:31,200
zero with tile of our map and we got a negative number here.

369
00:15:31,500 --> 00:15:32,600
So the player Ty

370
00:15:32,800 --> 00:15:35,900
X is already negative, so I don't need to do n.

371
00:15:35,900 --> 00:15:36,800
Minus X.

372
00:15:36,900 --> 00:15:41,500
I'm really doing n plus the X because the x is negative, right?

373
00:15:42,100 --> 00:15:43,300
I don't know if that makes sense.

374
00:15:43,300 --> 00:15:44,400
Hopefully, that makes some sense.

375
00:15:44,600 --> 00:15:48,300
So, what I want to do here is I want to just take whatever the tile

376
00:15:48,300 --> 00:15:49,900
map was beforehand.

377
00:15:49,900 --> 00:15:53,500
I want to take that tile map with this this context, right?

378
00:15:53,500 --> 00:15:58,100
However, many tiles there are in a tile map and I want to go ahead

379
00:15:58,400 --> 00:16:02,600
and, and, and add the player talks to it.

380
00:16:02,700 --> 00:16:04,300
That is the actual player Telex.

381
00:16:04,300 --> 00:16:06,700
I would look into up into in the previous time at.

382
00:16:06,700 --> 00:16:11,800
But of course I have to actually, get whatever that tilemap actually

383
00:16:11,800 --> 00:16:13,800
was because it's a different tile map now.

384
00:16:13,800 --> 00:16:18,000
So the tile map that I'm actually going to be looking at again is test

385
00:16:18,000 --> 00:16:19,200
tile Map X.

386
00:16:19,200 --> 00:16:23,800
So what I want to do is say all right that test tile Map X is now one

387
00:16:23,800 --> 00:16:25,300
before where it was.

388
00:16:25,600 --> 00:16:27,100
So I'm moving to the previous tilemap.

389
00:16:27,100 --> 00:16:27,900
I'm correcting.

390
00:16:27,900 --> 00:16:30,600
What the player Telex is and off we go.

391
00:16:30,900 --> 00:16:32,800
The exact same thing would work.

392
00:16:32,800 --> 00:16:34,100
For y right?

393
00:16:34,200 --> 00:16:35,600
The exact same thing would work.

394
00:16:35,700 --> 00:16:38,400
If we were, we were one off the bottom.

395
00:16:38,400 --> 00:16:43,100
We'd move to the previous tilemap in y, and we'd query this tile on it

396
00:16:43,100 --> 00:16:44,400
right now.

397
00:16:45,400 --> 00:16:48,500
One thing you may notice is this tile map here.

398
00:16:49,000 --> 00:16:51,700
We don't actually know what tilemap we're looking at yet.

399
00:16:52,000 --> 00:16:54,800
And so, what we would have to do if we wanted to do this, where each

400
00:16:54,800 --> 00:16:58,700
tile map was a different size, we'd have to do a ton of different math

401
00:16:58,700 --> 00:17:01,300
here, because we have to also have other information.

402
00:17:01,300 --> 00:17:02,600
Like let's say the tile Maps,

403
00:17:02,700 --> 00:17:04,700
Were different sizes, right?

404
00:17:04,800 --> 00:17:07,599
So here's the one, we're on and here's a different one.

405
00:17:07,800 --> 00:17:10,900
Well, now, the math is more complicated because if we move over here,

406
00:17:11,099 --> 00:17:14,800
and we'd also have a different y offset than we used to have, because

407
00:17:14,800 --> 00:17:16,000
the top is up here.

408
00:17:16,200 --> 00:17:20,000
So the Y offset for this may be 0, but the Y offset for this maybe

409
00:17:20,000 --> 00:17:21,500
like 7:00 or something, right?

410
00:17:22,000 --> 00:17:24,599
But since all of our tile maps are supposed to be the same size and

411
00:17:24,599 --> 00:17:28,300
their tiled like this, we don't actually have to do that which brings

412
00:17:28,300 --> 00:17:29,900
up the thing we talked about yesterday.

413
00:17:30,200 --> 00:17:32,600
And again I said don't do things until you actually have to do them.

414
00:17:32,800 --> 00:17:35,400
You actually see, and that's exactly what I want to talk about.

415
00:17:35,400 --> 00:17:39,100
Now, these values that are accessed off, the tile map are actually

416
00:17:39,100 --> 00:17:40,900
constant for all the tile Maps.

417
00:17:40,900 --> 00:17:43,200
We don't allow tile maps to be multiple sizes yet.

418
00:17:43,200 --> 00:17:46,400
And I don't ever anticipate allowing you to do that because since we

419
00:17:46,400 --> 00:17:48,400
allow you to have as many tile Maps as you want.

420
00:17:48,500 --> 00:17:51,100
The only thing that that would do is we would have it so that

421
00:17:51,100 --> 00:17:52,900
basically the you would zoom in or out.

422
00:17:52,900 --> 00:17:56,200
So there would be times when we would be seeing your guy a lot smaller

423
00:17:56,200 --> 00:17:58,900
because there'd be a lot more tiles on like one screen or something

424
00:17:59,500 --> 00:17:59,800
and that

425
00:18:00,000 --> 00:18:02,600
Not something that I plan on enabling in this game at all.

426
00:18:03,200 --> 00:18:06,500
So what I want to do is say these values are actually constant, right?

427
00:18:06,500 --> 00:18:10,500
All of this stuff is actually not a property of the tile map at all.

428
00:18:10,500 --> 00:18:12,000
It's a property of the world.

429
00:18:12,100 --> 00:18:12,600
Right?

430
00:18:12,700 --> 00:18:15,100
And we could actually have you go between multiple worlds.

431
00:18:15,100 --> 00:18:17,900
Let's say we could make this something else, which is like a series of

432
00:18:17,900 --> 00:18:20,400
time-lapse of the same size or something like that we could do.

433
00:18:20,500 --> 00:18:21,600
We could rename this.

434
00:18:21,800 --> 00:18:23,700
But like I said, I want a fairly consistent space.

435
00:18:23,700 --> 00:18:25,800
So I want the player to always be seeing a screen.

436
00:18:25,800 --> 00:18:28,800
That's a certain number of tiles with what width and height and then

437
00:18:28,800 --> 00:18:29,900
they walk around and it's always

438
00:18:30,000 --> 00:18:30,900
He's consistent.

439
00:18:31,200 --> 00:18:32,500
So I think that's fairly safe to say.

440
00:18:32,500 --> 00:18:34,600
So what I want to do is move that out to the world.

441
00:18:34,800 --> 00:18:37,700
So that what you're really doing all the time is you're really looking

442
00:18:37,700 --> 00:18:40,800
at the world to know these things that you were previously looking

443
00:18:41,400 --> 00:18:43,400
basically at the tile map to know, right?

444
00:18:43,400 --> 00:18:46,900
So be should all be world based stuff, right?

445
00:18:47,800 --> 00:18:49,600
World world world world world.

446
00:18:50,000 --> 00:18:53,400
So when we do this, when we walk off the end like that we're going to

447
00:18:53,400 --> 00:18:56,500
take a look and we're going to say okay if we moved off the end we

448
00:18:56,500 --> 00:18:59,900
readjust which tile we're looking at in here.

449
00:19:00,000 --> 00:19:04,700
Same has to go the exact same thing has to go for if we were going to

450
00:19:05,200 --> 00:19:09,800
walk sort of past the right Edge as well.

451
00:19:09,800 --> 00:19:13,500
So this thing right here that we were checking before that also has to

452
00:19:13,500 --> 00:19:13,900
happen.

453
00:19:14,300 --> 00:19:14,800
Excuse me.

454
00:19:18,800 --> 00:19:20,700
So, if we were to walk off that right, Edge?

455
00:19:21,500 --> 00:19:24,900
Same basic idea, what we need to do is say all right, let's go to the

456
00:19:24,900 --> 00:19:27,000
next tile map over, right?

457
00:19:27,700 --> 00:19:30,100
And when we go to the next aisle over, we're looking at this

458
00:19:30,100 --> 00:19:30,800
situation.

459
00:19:30,900 --> 00:19:35,600
We were here, we step to hear if this is, n, minus 1, right, which is

460
00:19:35,600 --> 00:19:36,600
that count that count?

461
00:19:36,600 --> 00:19:36,900
Number.

462
00:19:36,900 --> 00:19:37,900
It's count X.

463
00:19:38,400 --> 00:19:41,300
If this is Count x -1, we're then going to be on count X.

464
00:19:41,300 --> 00:19:42,300
We're going to be on n.

465
00:19:42,600 --> 00:19:45,800
And what we really want to be on is we want to be on 0, right?

466
00:19:45,800 --> 00:19:48,500
We want to basically subtract out the count.

467
00:19:48,700 --> 00:19:52,600
Just get how far we are away from that that boundary which will tell

468
00:19:52,600 --> 00:19:55,000
us where we are on the next tile map.

469
00:19:55,000 --> 00:19:55,500
Right?

470
00:19:55,500 --> 00:19:59,100
So all we want to really do here is just say, okay, whatever that

471
00:19:59,100 --> 00:20:03,900
player Telex was, you know, that we had was, we want to just subtract

472
00:20:03,900 --> 00:20:05,900
out the world count X right.

473
00:20:05,900 --> 00:20:06,500
There you go.

474
00:20:07,300 --> 00:20:10,900
And the same is true for y again, there we go.

475
00:20:11,400 --> 00:20:13,300
Let's see, X and Y.

476
00:20:13,600 --> 00:20:17,600
So all I'm doing here is saying if we, if we step out the bounds,

477
00:20:18,000 --> 00:20:18,400
let's let's

478
00:20:18,600 --> 00:20:21,700
Reduce it and go to the next one over and this is basically the

479
00:20:21,700 --> 00:20:24,100
equivalent of this clipping that we used to be doing.

480
00:20:24,600 --> 00:20:26,900
But instead of actually just clipping in assuming we're actually going

481
00:20:26,900 --> 00:20:29,100
to just look at the next tile map if we have to.

482
00:20:29,300 --> 00:20:33,600
So once we do that work, we can then say let's get the tile map.

483
00:20:33,600 --> 00:20:33,900
Whatever.

484
00:20:33,900 --> 00:20:36,500
The actual tile map is here.

485
00:20:37,000 --> 00:20:38,100
Using get Tau map.

486
00:20:38,100 --> 00:20:41,600
We've now computed, which tilemap we actually want, right?

487
00:20:41,600 --> 00:20:43,900
So this is the tile map that we actually want.

488
00:20:44,300 --> 00:20:46,100
So let's go ahead and query it.

489
00:20:46,200 --> 00:20:48,500
We say ask the the

490
00:20:48,600 --> 00:20:50,400
That function, that looks up tile Maps.

491
00:20:50,600 --> 00:20:54,100
We know that the player has moved, you know, or where the position

492
00:20:54,100 --> 00:20:54,800
we're looking up.

493
00:20:54,800 --> 00:20:57,400
I guess this is instead of player tile X.

494
00:20:57,400 --> 00:20:59,900
This is really this is really testing.

495
00:21:00,000 --> 00:21:01,100
Tilak's right?

496
00:21:02,300 --> 00:21:07,000
So the test the tile that we're testing here, we're going to ask for

497
00:21:07,000 --> 00:21:11,000
the tile map that corresponds to the place that we were asked to look

498
00:21:11,100 --> 00:21:12,300
right adjusted by.

499
00:21:12,300 --> 00:21:16,600
If we were out of bounds adjusted one in any one of the four

500
00:21:16,600 --> 00:21:17,300
directions.

501
00:21:17,800 --> 00:21:21,700
We're then going to say we get that tilemap back and we go ahead and

502
00:21:21,700 --> 00:21:26,000
say let's let's ask if that point is empty.

503
00:21:26,200 --> 00:21:26,300
Now.

504
00:21:26,300 --> 00:21:29,500
What I'd like to do is since this function can fail like we could be

505
00:21:29,500 --> 00:21:30,200
asking for a child.

506
00:21:30,200 --> 00:21:32,000
It's out of bounds since that function go.

507
00:21:32,000 --> 00:21:35,000
Know what I'd also like to do is, I'd like to go ahead and make this

508
00:21:35,000 --> 00:21:35,900
function guarded.

509
00:21:35,900 --> 00:21:38,400
I'd like to say that when you call this function, it's going to go

510
00:21:38,400 --> 00:21:42,200
ahead and check the tile map to see if that tile map is 0 or not.

511
00:21:42,300 --> 00:21:45,000
If it is zero, it's just going to assume that the tile was not empty.

512
00:21:45,000 --> 00:21:47,000
It's going to assume that there was something there and that it's

513
00:21:47,000 --> 00:21:48,100
blocking, right?

514
00:21:48,500 --> 00:21:51,400
And so that way we can call this function, even if we fetched out of

515
00:21:51,400 --> 00:21:53,500
bounds, it doesn't actually matter.

516
00:21:53,700 --> 00:21:54,200
Right.

517
00:21:54,300 --> 00:21:55,000
And then

518
00:21:56,400 --> 00:21:59,700
Okay, we are going to ask our test X and Test.

519
00:21:59,700 --> 00:21:59,900
Why?

520
00:21:59,900 --> 00:22:06,500
So what we need to do now is oh wait, but we already have the tile

521
00:22:06,500 --> 00:22:06,800
value.

522
00:22:06,800 --> 00:22:08,800
So what we actually need here, right?

523
00:22:08,800 --> 00:22:09,100
Yeah.

524
00:22:09,100 --> 00:22:11,400
Okay, so we don't actually need this code anymore.

525
00:22:11,400 --> 00:22:16,100
What we actually need to do is just pass this straight up the test.

526
00:22:16,100 --> 00:22:16,700
I sent texts.

527
00:22:16,700 --> 00:22:17,500
Test why that?

528
00:22:17,500 --> 00:22:19,100
We've already computed, right?

529
00:22:19,100 --> 00:22:22,600
We've already computed the index into the tile into the tile map

530
00:22:22,600 --> 00:22:23,300
itself.

531
00:22:23,600 --> 00:22:26,100
So we're going to go ahead and just pass that directly.

532
00:22:26,200 --> 00:22:29,600
Test tile style, there we go.

533
00:22:30,200 --> 00:22:31,900
And so this is Tom, a point.

534
00:22:31,900 --> 00:22:36,600
Empty will actually just take the X and the Y, and it will not have to

535
00:22:36,600 --> 00:22:36,900
do that.

536
00:22:36,900 --> 00:22:43,700
So, this is, this is a, this is a test tile X and Test tile.

537
00:22:44,100 --> 00:22:44,600
There we go.

538
00:22:45,000 --> 00:22:49,400
So Claire test doo-doo-doo-doo to.

539
00:22:49,500 --> 00:22:49,900
Okay.

540
00:22:50,900 --> 00:22:53,100
So, where did that go?

541
00:22:54,600 --> 00:22:55,800
Jump back to where the search started.

542
00:22:55,800 --> 00:22:56,200
There we go.

543
00:22:56,800 --> 00:23:01,300
So what we want to do here is we basically want to also probably

544
00:23:01,300 --> 00:23:03,500
assert these sorts of things.

545
00:23:03,500 --> 00:23:04,500
I would probably say.

546
00:23:04,500 --> 00:23:08,700
Let's go ahead and assert basically the same things that are happening

547
00:23:08,700 --> 00:23:10,700
in our unchanging are checked path.

548
00:23:10,700 --> 00:23:12,500
Let's go ahead and assert those.

549
00:23:13,000 --> 00:23:17,200
This should probably be 8X style.

550
00:23:17,200 --> 00:23:17,900
Why?

551
00:23:18,700 --> 00:23:19,700
Okay.

552
00:23:19,900 --> 00:23:22,900
All right, getting closer.

553
00:23:23,300 --> 00:23:23,700
So

554
00:23:23,900 --> 00:23:24,500
Has to happen.

555
00:23:24,500 --> 00:23:27,700
Now, is inside these functions where previously a tile map was

556
00:23:27,700 --> 00:23:28,500
sufficient.

557
00:23:28,500 --> 00:23:31,500
We are going now going to need that world pointer because the world

558
00:23:31,500 --> 00:23:34,200
pointer has all of the dimensional information in it.

559
00:23:34,500 --> 00:23:38,900
So basically, everything previously that we were using the tile map

560
00:23:38,900 --> 00:23:41,200
pointer for now has to have the world pointer.

561
00:23:41,600 --> 00:23:43,000
And so that's a little bit of work.

562
00:23:43,000 --> 00:23:45,400
We got to do but not too big of a deal, right?

563
00:23:47,000 --> 00:23:48,700
Not too big of a deal at all.

564
00:23:49,400 --> 00:23:52,200
Let's see, what takes here, that goes there.

565
00:23:52,200 --> 00:23:52,600
Nothing.

566
00:23:52,600 --> 00:23:53,600
Just cleaning not doing.

567
00:23:53,800 --> 00:23:57,800
Anything special here just cleaning up cleaning up things and then

568
00:23:57,800 --> 00:23:59,800
we're going to step through this insert a start to look at.

569
00:24:00,000 --> 00:24:02,800
Clean it up and fix any bugs that?

570
00:24:02,800 --> 00:24:03,900
I, no doubt have.

571
00:24:03,900 --> 00:24:05,700
Like I said, many times on the stream.

572
00:24:06,000 --> 00:24:08,700
It's hard for me to talk and program at the same time people, it is, I

573
00:24:08,700 --> 00:24:09,500
make a lot of mistakes.

574
00:24:09,700 --> 00:24:12,500
Fortunately, the stream, oftentimes catches them for me.

575
00:24:12,500 --> 00:24:15,700
So if we end the day with bugs, that I haven't found a lot of times,

576
00:24:15,700 --> 00:24:19,500
the stream is right there to pick me up and I appreciate that

577
00:24:19,700 --> 00:24:20,300
immensely.

578
00:24:20,300 --> 00:24:21,300
I can tell you that.

579
00:24:21,600 --> 00:24:23,600
So okay, is World Point empty.

580
00:24:23,800 --> 00:24:24,900
What did I do here?

581
00:24:26,400 --> 00:24:27,900
Oh, what did I?

582
00:24:28,100 --> 00:24:29,600
I totally just this is, this was

583
00:24:30,200 --> 00:24:33,300
Me not paying attention to what I was to what I was editing their.

584
00:24:33,300 --> 00:24:35,500
Why do we have a another function?

585
00:24:35,800 --> 00:24:36,700
That is the same?

586
00:24:36,800 --> 00:24:38,100
I like got multiple.

587
00:24:38,300 --> 00:24:39,900
How did I get multiple copies?

588
00:24:40,100 --> 00:24:41,700
I don't even know how that happened.

589
00:24:42,100 --> 00:24:42,900
Do not know.

590
00:24:43,400 --> 00:24:45,800
Probably going to find out in a second when I go to compile and find I

591
00:24:45,800 --> 00:24:48,300
accidentally edited like the wrong function and now I have no

592
00:24:48,300 --> 00:24:49,200
functions left.

593
00:24:49,500 --> 00:24:52,800
So now we're in a much better position to clean this code up.

594
00:24:52,800 --> 00:24:53,500
Even, right?

595
00:24:53,600 --> 00:24:56,600
Because now that we have the world set up as well.

596
00:24:57,400 --> 00:24:59,900
The world can can take all of these.

597
00:25:00,000 --> 00:25:03,700
Values that were very much more properly stored in the world, which

598
00:25:03,700 --> 00:25:07,300
means that this cloning stuff doesn't have to happen anymore, right?

599
00:25:07,300 --> 00:25:10,100
That cloning of the values that were in the tile Maps.

600
00:25:10,100 --> 00:25:12,500
Which again, I said, when we did, it is sort of indicative that

601
00:25:12,500 --> 00:25:14,600
something is, it's not quite right yet.

602
00:25:15,400 --> 00:25:16,600
That is, is gone.

603
00:25:16,600 --> 00:25:18,500
So that's a good again, a good cleanup.

604
00:25:18,500 --> 00:25:23,900
It means that we can now start to talk about sort of maps 00 with

605
00:25:23,900 --> 00:25:24,400
World.

606
00:25:24,400 --> 00:25:24,900
There we go.

607
00:25:25,500 --> 00:25:28,700
It means we can start to talk about the world properly and assign

608
00:25:28,700 --> 00:25:29,800
things there that

609
00:25:29,900 --> 00:25:34,000
At our constant and we don't have to worry anymore about sort of using

610
00:25:34,000 --> 00:25:37,100
a tile map to get that stuff, which is inappropriate because again, we

611
00:25:37,100 --> 00:25:39,500
don't know which time that would be talking about and those values

612
00:25:39,500 --> 00:25:41,500
didn't actually vary across them.

613
00:25:42,100 --> 00:25:48,500
So what we have here now is, we don't want to query is town that point

614
00:25:48,500 --> 00:25:49,300
empty anymore.

615
00:25:49,300 --> 00:25:51,300
We just don't even want that at all.

616
00:25:51,300 --> 00:25:54,100
What we want is, is World, Point empty, right?

617
00:25:54,100 --> 00:25:58,500
We want to do is World Point empty for our testing and now we pass the

618
00:25:58,500 --> 00:25:59,300
world for that.

619
00:25:59,300 --> 00:25:59,800
Not a child.

620
00:26:00,100 --> 00:26:01,800
We want to pass our world pointer.

621
00:26:01,900 --> 00:26:05,900
So we're going to ask it about the world, and we're going to go ahead

622
00:26:05,900 --> 00:26:09,400
and say that our test tile map, x y, and x, and why.

623
00:26:09,400 --> 00:26:12,600
We're only passing the actual X and Y inside the town map.

624
00:26:12,600 --> 00:26:15,600
What we want to do now is also passed which tile map, we believe the

625
00:26:15,600 --> 00:26:18,300
player to be on which, again, we have.

626
00:26:18,600 --> 00:26:23,400
It's called player tile X and player tile.

627
00:26:23,400 --> 00:26:23,900
Why?

628
00:26:25,100 --> 00:26:25,300
Player.

629
00:26:25,300 --> 00:26:26,700
Tau y like that.

630
00:26:27,700 --> 00:26:28,200
Okay.

631
00:26:28,800 --> 00:26:31,900
So yeah, there we go.

632
00:26:33,000 --> 00:26:36,700
And about what did I do player time?

633
00:26:38,700 --> 00:26:39,300
Oh boy.

634
00:26:39,400 --> 00:26:41,400
So this is going to be something that is going to be really nice to

635
00:26:41,400 --> 00:26:41,900
clean up.

636
00:26:42,300 --> 00:26:45,000
I think probably based on how many we have in here already.

637
00:26:45,000 --> 00:26:46,500
I think next week is a good time to do it.

638
00:26:46,500 --> 00:26:47,200
So that's going to be good.

639
00:26:47,200 --> 00:26:48,900
But yes, all right.

640
00:26:48,900 --> 00:26:52,000
So anyway, let's see inside here.

641
00:26:52,200 --> 00:26:54,700
We need to pass the world's pointer.

642
00:26:54,900 --> 00:26:56,600
In eye, looks like that's all that is.

643
00:26:57,200 --> 00:26:59,800
Looks like we're still using, we want to use the word.

644
00:27:00,000 --> 00:27:02,300
For all of these references like this.

645
00:27:03,000 --> 00:27:03,700
There we go.

646
00:27:04,300 --> 00:27:09,100
We've got the tile map here, which is also not, right.

647
00:27:09,100 --> 00:27:10,600
We just go all of these things.

648
00:27:10,600 --> 00:27:12,200
I'll move over to the world.

649
00:27:12,200 --> 00:27:16,500
So that's good tile with tile height also in the world.

650
00:27:16,900 --> 00:27:17,700
Okay.

651
00:27:17,700 --> 00:27:19,600
So, let's see what we're doing here.

652
00:27:19,600 --> 00:27:21,900
So are we still running?

653
00:27:22,700 --> 00:27:24,400
Let's let's see.

654
00:27:25,300 --> 00:27:26,000
Let's stop.

655
00:27:26,100 --> 00:27:26,400
Okay.

656
00:27:27,200 --> 00:27:28,100
So let's see.

657
00:27:28,400 --> 00:27:30,100
So we're still running and that's good.

658
00:27:30,300 --> 00:27:31,800
But I think we've got some bugs here.

659
00:27:31,800 --> 00:27:35,300
So let's go ahead and and, and see what's going on.

660
00:27:35,300 --> 00:27:39,900
All right, so let's step in and see what we're dealing with here.

661
00:27:40,300 --> 00:27:42,000
So is World Point empty?

662
00:27:42,100 --> 00:27:45,700
We've got test tile Map, X test tile map.

663
00:27:45,800 --> 00:27:46,400
Why?

664
00:27:47,100 --> 00:27:47,500
Oh,

665
00:27:49,300 --> 00:27:53,900
That is that because I hadn't stepped in the function yet, Wrightwood

666
00:27:53,900 --> 00:27:54,900
on function entry.

667
00:27:55,600 --> 00:27:56,400
The stack, isn't I guess?

668
00:27:56,400 --> 00:27:57,900
Correct yet for viewing.

669
00:27:57,900 --> 00:27:58,400
Those variables.

670
00:27:58,400 --> 00:27:59,000
That's fine.

671
00:27:59,000 --> 00:28:00,100
I was like, what's going on there?

672
00:28:00,100 --> 00:28:00,800
That's not good.

673
00:28:00,800 --> 00:28:02,500
But yeah, I hadn't stepped in to the function yet.

674
00:28:02,500 --> 00:28:03,000
That's fine.

675
00:28:03,400 --> 00:28:04,800
All right, so stepping through the function.

676
00:28:05,600 --> 00:28:07,600
We're at zero zero in our tile map.

677
00:28:07,600 --> 00:28:08,400
And that's fine.

678
00:28:08,900 --> 00:28:11,000
We are at Test X test.

679
00:28:11,000 --> 00:28:14,300
Why here's where our this is where our guy is, right?

680
00:28:15,600 --> 00:28:18,800
Hmm, okis, I guess I was trying to move.

681
00:28:18,800 --> 00:28:19,300
That's interesting.

682
00:28:19,300 --> 00:28:23,100
That that's where I'm going to actually look up.

683
00:28:23,100 --> 00:28:23,800
What I wasn't was.

684
00:28:23,800 --> 00:28:25,700
I actually moving was actually trying to move.

685
00:28:26,200 --> 00:28:30,500
What's my deep layer XD player y x?

686
00:28:31,700 --> 00:28:32,800
I didn't think I was trying to move.

687
00:28:32,800 --> 00:28:35,300
So I'm interested to know why it's looking at a non.

688
00:28:36,600 --> 00:28:37,100
Even boundary.

689
00:28:37,100 --> 00:28:37,600
Duplex.

690
00:28:37,600 --> 00:28:37,900
Deep layer.

691
00:28:37,900 --> 00:28:38,300
Why?

692
00:28:38,700 --> 00:28:40,100
So

693
00:28:41,700 --> 00:28:42,300
Game state.

694
00:28:42,300 --> 00:28:44,000
Did my guy already move.

695
00:28:46,000 --> 00:28:47,600
He's at 150 150.

696
00:28:48,500 --> 00:28:52,600
So oh, right, that's because it's checking either side of the guy.

697
00:28:52,600 --> 00:28:55,700
So it's using half the player with to check on either side of the guy.

698
00:28:55,700 --> 00:28:56,600
That's why it's that.

699
00:28:56,700 --> 00:28:57,600
Yeah, that makes sense.

700
00:28:57,800 --> 00:28:58,600
Do you see what happened there?

701
00:28:58,600 --> 00:29:02,900
I was wondering why the test X was a fractional value and it's because

702
00:29:02,900 --> 00:29:06,300
the player with is an even even number.

703
00:29:06,300 --> 00:29:07,400
So when you divide it, I'm sorry.

704
00:29:07,400 --> 00:29:08,700
It's an odd number, I guess.

705
00:29:08,700 --> 00:29:11,700
So when you divide it by 2 you get a fractional value, is that

706
00:29:11,700 --> 00:29:12,000
correct?

707
00:29:12,000 --> 00:29:13,500
Is it actually an odd value?

708
00:29:14,500 --> 00:29:15,700
Yeah, probably is because it's

709
00:29:15,900 --> 00:29:18,300
Bubbly added by 2.

710
00:29:18,300 --> 00:29:21,600
So let's take a look actually at what the player with the knife is

711
00:29:21,600 --> 00:29:22,600
just make sure that's true.

712
00:29:22,900 --> 00:29:27,200
So the player with back here gotta jump back out to the enclosing

713
00:29:27,200 --> 00:29:28,200
function player with

714
00:29:30,600 --> 00:29:31,700
Yeah, it's 45.

715
00:29:31,900 --> 00:29:33,400
So your name?

716
00:29:34,100 --> 00:29:41,900
So the the reason is because the tile the tile with is 60 and the way

717
00:29:41,900 --> 00:29:45,000
that we initialized, when I wrote the game just randomly, as I said

718
00:29:45,000 --> 00:29:49,000
that a guy was going to be 3/4 the width of a tile, right?

719
00:29:49,000 --> 00:29:51,900
And if a guy is 3/4, the width of a tile, then it's dividing.

720
00:29:52,100 --> 00:29:54,000
You know, it's multiplying with 3 / 4 kind of a thing.

721
00:29:54,000 --> 00:29:55,800
It's multiplying by 0.75.

722
00:29:56,100 --> 00:29:57,200
What have that tile with is?

723
00:29:57,200 --> 00:29:59,800
Which gives us 45 which then when we divide by half,

724
00:30:00,000 --> 00:30:03,500
Look on either side of the guy to test the two points on his left and

725
00:30:03,500 --> 00:30:08,500
right side, that ends up being a 45 divided by to offset.

726
00:30:08,600 --> 00:30:08,800
Right.

727
00:30:08,800 --> 00:30:11,200
Which is of course a fractional value.

728
00:30:11,200 --> 00:30:13,700
If you don't if you don't clamp it there, there we go.

729
00:30:13,700 --> 00:30:17,900
A fractional value and so that is why when we look in here this is not

730
00:30:17,900 --> 00:30:18,800
an even value.

731
00:30:19,100 --> 00:30:21,300
So I just want to make sure that was right, and it is, that's all

732
00:30:21,300 --> 00:30:21,600
fine.

733
00:30:22,400 --> 00:30:27,300
So now we figure out which tile we're looking at test tile, X, test

734
00:30:27,300 --> 00:30:28,300
tile, why?

735
00:30:28,600 --> 00:30:29,000
Oops.

736
00:30:30,000 --> 00:30:32,400
Why we're looking at tile 2 comma 2?

737
00:30:33,200 --> 00:30:36,600
We go in here and we see that none of our cases trigger, which is

738
00:30:36,600 --> 00:30:36,900
correct.

739
00:30:36,900 --> 00:30:38,000
We are not out of bounds.

740
00:30:38,200 --> 00:30:42,800
We then need to get the tile map that corresponds to our test tile Map

741
00:30:42,800 --> 00:30:44,200
X and our test tile map.

742
00:30:44,400 --> 00:30:52,500
Why so we step in here and we go ahead and check to see if we are in

743
00:30:52,500 --> 00:30:53,100
bounds.

744
00:30:53,200 --> 00:30:55,500
We are in bounds, which is good.

745
00:30:55,800 --> 00:30:57,800
We then retrieve the tile map itself.

746
00:30:57,800 --> 00:30:59,500
So here is the tile map.

747
00:31:00,000 --> 00:31:04,100
Itself, that is good and you know, it's got the tiles in it.

748
00:31:04,300 --> 00:31:06,200
Nothing particularly interesting to see there.

749
00:31:06,600 --> 00:31:07,500
We've got the tile map.

750
00:31:07,500 --> 00:31:11,600
We then want to ask whether our hour.

751
00:31:13,300 --> 00:31:16,900
Using the tile map that we know the guys in whether our location in

752
00:31:16,900 --> 00:31:19,100
that, Tom app is empty or not.

753
00:31:19,100 --> 00:31:22,400
Oh well, and then we don't assign it to anything.

754
00:31:22,400 --> 00:31:25,700
So we've got one bug, which is basically that this empty, which is

755
00:31:25,700 --> 00:31:28,800
what we return, we never actually assigned to empty.

756
00:31:28,800 --> 00:31:30,700
So that's, that's a bug will fix that in a second.

757
00:31:30,800 --> 00:31:32,200
We check to see if the time that points empty.

758
00:31:32,200 --> 00:31:33,700
Let's see what happens in there.

759
00:31:34,600 --> 00:31:35,900
We look to see if we have a towel map.

760
00:31:35,900 --> 00:31:37,400
We do because we fetched one properly.

761
00:31:37,400 --> 00:31:38,700
We look to see whether we're in bounds.

762
00:31:38,700 --> 00:31:43,000
We are we then ask our accessor to look inside.

763
00:31:43,100 --> 00:31:44,300
I'm the tiles.

764
00:31:44,300 --> 00:31:47,200
It uses the sort of that sort of to d1d packing thing.

765
00:31:47,200 --> 00:31:50,500
I talked about yesterday to go, pull out the value for the particular

766
00:31:50,500 --> 00:31:51,700
tile using the X and Y.

767
00:31:52,000 --> 00:31:53,000
We return that out.

768
00:31:53,100 --> 00:31:55,700
We look to see whether or not is equal to 0 which is, which would mean

769
00:31:55,700 --> 00:31:56,600
empty in our case.

770
00:31:56,900 --> 00:31:57,500
We return it.

771
00:31:57,500 --> 00:31:59,000
And then, of course, we throw the value away.

772
00:31:59,200 --> 00:32:00,400
That all looks like it works.

773
00:32:00,800 --> 00:32:03,500
The only thing that's wrong with it is we don't actually use the

774
00:32:03,500 --> 00:32:04,300
return value.

775
00:32:05,000 --> 00:32:08,000
So we definitely have a bug, but other than that, it looked pretty.

776
00:32:08,000 --> 00:32:08,400
Okay.

777
00:32:08,400 --> 00:32:12,400
Let's go ahead and fix that, and then we'll play with it and see if

778
00:32:12,400 --> 00:32:12,900
that works.

779
00:32:13,100 --> 00:32:13,100
You.

780
00:32:13,300 --> 00:32:13,700
All right.

781
00:32:13,700 --> 00:32:15,000
Where was that guy?

782
00:32:15,000 --> 00:32:16,700
There was that guy right here.

783
00:32:16,700 --> 00:32:17,700
Empty equals.

784
00:32:17,700 --> 00:32:18,200
There we go.

785
00:32:18,500 --> 00:32:20,400
Okay, so let's try that again.

786
00:32:20,600 --> 00:32:21,000
All right.

787
00:32:21,000 --> 00:32:26,000
So now we are walking around, just fine looks pretty good.

788
00:32:26,300 --> 00:32:28,800
And now we should in theory be able to walk off this Edge.

789
00:32:28,900 --> 00:32:29,900
I don't know if we can or not.

790
00:32:29,900 --> 00:32:30,200
Nope.

791
00:32:30,200 --> 00:32:32,900
So that doesn't quite work correctly at the moment.

792
00:32:33,000 --> 00:32:33,700
So we are.

793
00:32:33,700 --> 00:32:36,900
I thought it looked correct but it probably maybe we've got a bug

794
00:32:36,900 --> 00:32:40,000
still in are other cases where we handle walking.

795
00:32:40,000 --> 00:32:43,000
Well, that one does so that one actually did work a little bit.

796
00:32:43,100 --> 00:32:45,000
Bit because we can't walk off one side there.

797
00:32:45,000 --> 00:32:47,900
So it's starting to work a little bit, but we're still a little bit

798
00:32:47,900 --> 00:32:48,200
buggy.

799
00:32:48,200 --> 00:32:49,500
All right, so let's fix that.

800
00:32:50,000 --> 00:32:52,800
And then once we fixed that, we actually only have one other thing to

801
00:32:52,800 --> 00:32:56,000
do before, we can actually walk between Tom apps and because all we

802
00:32:56,000 --> 00:32:59,000
have to do to walk between Tom after that is actually look to see when

803
00:32:59,000 --> 00:32:59,300
we've

804
00:33:00,000 --> 00:33:04,900
When our test Point, our new player location moves off of the screen

805
00:33:04,900 --> 00:33:06,400
and switch to a new tile map.

806
00:33:06,700 --> 00:33:08,200
All right, so what's our bug?

807
00:33:08,500 --> 00:33:09,300
What have we got there?

808
00:33:09,300 --> 00:33:10,000
What's going on?

809
00:33:10,000 --> 00:33:13,700
So what we want to do now is, we'd like to go ahead and say when the

810
00:33:13,800 --> 00:33:17,600
we'd like to see what happens in these cases, of course, I also should

811
00:33:17,600 --> 00:33:19,400
make sure that our town maps are actually set up so that there

812
00:33:19,400 --> 00:33:23,200
actually is an empty spot there that you can actually walk to.

813
00:33:23,700 --> 00:33:25,600
So let's double check and make sure that's true.

814
00:33:25,700 --> 00:33:29,600
So we essentially have a tiles are tilemap.

815
00:33:31,600 --> 00:33:32,800
Excuse me a setup.

816
00:33:33,000 --> 00:33:35,900
So they've got 0 0 and 0 1.

817
00:33:36,600 --> 00:33:38,800
So this is, you know what?

818
00:33:38,800 --> 00:33:40,100
I think I set them up backwards.

819
00:33:40,100 --> 00:33:40,400
I did.

820
00:33:40,400 --> 00:33:43,600
This is this is yet another reason why, you know, all these crazy that

821
00:33:43,600 --> 00:33:47,200
the C Syntax for this and not being X Y, is is really annoying.

822
00:33:47,200 --> 00:33:48,200
And at least a lot of Errors.

823
00:33:48,200 --> 00:33:50,900
That's why I don't I pretty much always pack stuff myself as you've

824
00:33:50,900 --> 00:33:51,300
been seeing.

825
00:33:51,300 --> 00:33:54,600
I constantly move to packing things myself because this, this syntax

826
00:33:54,600 --> 00:33:55,200
drives me nuts.

827
00:33:55,200 --> 00:33:59,300
I always want to put the X first and then y s, because X and Y go in

828
00:33:59,300 --> 00:33:59,700
that order.

829
00:33:59,700 --> 00:33:59,800
And

830
00:34:00,000 --> 00:34:01,000
And you've been drilled into it.

831
00:34:01,000 --> 00:34:01,600
It's been drilling.

832
00:34:01,600 --> 00:34:02,100
You so much.

833
00:34:02,100 --> 00:34:05,000
That's hard, just like switch around and I believe that this is

834
00:34:05,000 --> 00:34:05,600
actually wrong.

835
00:34:05,600 --> 00:34:06,500
So let's double check.

836
00:34:06,500 --> 00:34:10,100
So I wrote These as if it was X and why I believe, right?

837
00:34:10,100 --> 00:34:13,600
Because that's x x, that's x y 0, 0, and this was X Y.

838
00:34:13,600 --> 00:34:15,900
This was supposed to be below this one, right?

839
00:34:15,900 --> 00:34:17,000
And you can see it was.

840
00:34:17,199 --> 00:34:19,199
And so that's not what happened here.

841
00:34:19,500 --> 00:34:20,199
What happened here is?

842
00:34:20,199 --> 00:34:21,300
We did it the other way around.

843
00:34:21,300 --> 00:34:26,000
So it's actually, it's actually, that is actually the way that I wrote

844
00:34:26,000 --> 00:34:26,300
them.

845
00:34:26,300 --> 00:34:29,500
So that was just me being pretty dumb actually.

846
00:34:30,400 --> 00:34:33,900
So now we can go ahead and walk off of it as we would expect to.

847
00:34:33,900 --> 00:34:36,500
And we can also walk off of this one.

848
00:34:36,500 --> 00:34:38,300
I don't know though.

849
00:34:38,300 --> 00:34:39,100
What happens?

850
00:34:39,100 --> 00:34:39,400
I don't know.

851
00:34:39,400 --> 00:34:41,100
Why exactly we stop.

852
00:34:41,100 --> 00:34:42,500
We don't stop.

853
00:34:42,500 --> 00:34:43,100
So there we go.

854
00:34:43,100 --> 00:34:44,900
So now that we've corrected it.

855
00:34:44,900 --> 00:34:46,500
It looks like we can walk off properly.

856
00:34:46,500 --> 00:34:48,600
And so that's good.

857
00:34:48,600 --> 00:34:52,500
So now all we have to do is allow our guy to actually change screens.

858
00:34:52,500 --> 00:34:55,600
And so, we've already what we want to do here again, is we want to

859
00:34:55,600 --> 00:34:59,300
reuse some work because as you can see, we do this Israel Point, empty

860
00:34:59,300 --> 00:35:00,100
the Israel.

861
00:35:00,400 --> 00:35:03,700
Empty thing actually does the work we need to figure out that we have

862
00:35:03,700 --> 00:35:07,200
wrapped on a tile but we never get that information back.

863
00:35:07,200 --> 00:35:09,400
We never find out that it looked at a different tile.

864
00:35:09,400 --> 00:35:12,800
So when we accept the move, what we'd like to be able to do is then

865
00:35:12,800 --> 00:35:16,200
accept the fact that it moved to a new tile as well.

866
00:35:16,500 --> 00:35:20,000
And so what we want to do here is pull out this work in some kind of

867
00:35:20,000 --> 00:35:20,700
convenient way.

868
00:35:20,700 --> 00:35:24,000
Now, you'll notice this is again leading into exactly what I want to

869
00:35:24,000 --> 00:35:24,900
get into next.

870
00:35:25,000 --> 00:35:26,600
So hey that that worked out pretty well.

871
00:35:26,700 --> 00:35:30,200
It turns out if you just write the code kind of guides you towards all

872
00:35:30,200 --> 00:35:30,300
of

873
00:35:30,400 --> 00:35:31,100
The right answers.

874
00:35:31,100 --> 00:35:32,800
That's sort of the thing that I again.

875
00:35:32,800 --> 00:35:34,400
I've been harping on over and over and it's true.

876
00:35:34,400 --> 00:35:34,900
Again.

877
00:35:35,200 --> 00:35:37,900
The next thing that we want to do to clean up this code is exactly

878
00:35:37,900 --> 00:35:40,400
what it looks like we want to do, right?

879
00:35:44,200 --> 00:35:45,700
So we're passing all this stuff around.

880
00:35:45,700 --> 00:35:46,800
Test text, Sy time.

881
00:35:46,800 --> 00:35:48,200
I'm Tom Apple abla.

882
00:35:49,300 --> 00:35:53,400
Essentially, all of this is talking about a player's location, right?

883
00:35:53,700 --> 00:35:55,600
And they're all interrelated.

884
00:35:55,700 --> 00:35:58,400
You can't really talk about the test X in the test.

885
00:35:58,400 --> 00:35:59,900
Why very effectively without talking.

886
00:36:00,000 --> 00:36:02,600
Which test tile, the player is in.

887
00:36:03,300 --> 00:36:05,800
And that's going to be true of everyone who has a location that can be

888
00:36:05,800 --> 00:36:07,400
freely roaming right at some level.

889
00:36:08,500 --> 00:36:12,700
So what we want to do is we want to probably have a way of bundling

890
00:36:12,700 --> 00:36:14,700
these things together so that we could return them, right.

891
00:36:14,700 --> 00:36:16,200
We want to be able to do something.

892
00:36:16,700 --> 00:36:20,700
We'd like to be able to say like this, something like

893
00:36:22,800 --> 00:36:24,500
You know, I'm going to call it.

894
00:36:24,500 --> 00:36:25,300
I'm going to call it.

895
00:36:26,000 --> 00:36:30,100
I don't know canonicalize maybe, I don't know, we're going to call.

896
00:36:30,100 --> 00:36:31,700
I'm not sure what the name of this should be.

897
00:36:31,800 --> 00:36:34,500
But basically what I want to do is I want to pull this code out so

898
00:36:34,500 --> 00:36:38,700
that I can use it again where I'm going to go ahead and take a tile

899
00:36:38,700 --> 00:36:42,400
map exit, AA map, Y and a real offset inside that.

900
00:36:42,400 --> 00:36:46,200
And if this real offset is outside of the tile map.

901
00:36:47,600 --> 00:36:49,000
It will realign the test.

902
00:36:49,000 --> 00:36:52,600
I'll Map X and Y to correctly.

903
00:36:52,600 --> 00:36:53,900
Put this this inside.

904
00:36:53,900 --> 00:36:55,200
We could call it normalizes.

905
00:36:55,200 --> 00:36:55,900
Well, I don't know.

906
00:36:56,200 --> 00:36:57,800
I'm not called canonicalize for now.

907
00:36:58,000 --> 00:37:01,200
But basically what I wanted to do is exactly what this function did,

908
00:37:01,200 --> 00:37:01,500
right.

909
00:37:01,500 --> 00:37:05,100
I wanted to take these things and I want it to sort of return these

910
00:37:05,100 --> 00:37:05,900
things as well.

911
00:37:06,100 --> 00:37:09,500
So I need it to have basically a struct that has them in it.

912
00:37:09,500 --> 00:37:09,900
Right?

913
00:37:09,900 --> 00:37:13,300
I need a struct that's got this stuff so I can return it.

914
00:37:13,700 --> 00:37:14,400
Does that make sense?

915
00:37:16,300 --> 00:37:21,000
So maybe so maybe get canonical location or something like that?

916
00:37:21,000 --> 00:37:21,600
Right?

917
00:37:21,600 --> 00:37:23,500
And I go ahead and I pass it in.

918
00:37:23,500 --> 00:37:30,200
I say this is a tile map position or something or a tile map location

919
00:37:30,200 --> 00:37:32,900
or maybe just a world location.

920
00:37:32,900 --> 00:37:34,300
Let's say, World position.

921
00:37:34,300 --> 00:37:34,800
I don't know.

922
00:37:34,900 --> 00:37:39,700
I'm not sure what to name it yet, but I want to be able to say, I want

923
00:37:39,700 --> 00:37:40,600
to be able to say something.

924
00:37:40,600 --> 00:37:43,000
Like, let's pass one of these in.

925
00:37:43,100 --> 00:37:45,000
I want it to do the same math that it was.

926
00:37:45,200 --> 00:37:45,400
Being.

927
00:37:46,000 --> 00:37:48,800
So I'm going to pass in a world position and I can probably pass this

928
00:37:48,800 --> 00:37:50,000
in my value, right?

929
00:37:50,100 --> 00:37:51,700
And then it's going to return 1 by value.

930
00:37:51,700 --> 00:37:53,400
So this is just a simple inline function.

931
00:37:53,400 --> 00:37:57,300
Let's say that can be inlined anywhere that all it does is it does the

932
00:37:57,300 --> 00:37:59,700
truncation and then it does the check, right?

933
00:37:59,700 --> 00:38:03,800
So it's basically going to do this exact math that I wanted this,

934
00:38:04,000 --> 00:38:04,500
right?

935
00:38:04,600 --> 00:38:08,000
And it's going to wreak, it's going to take sort of something that

936
00:38:08,000 --> 00:38:10,600
could have been a bogus position that's been you know, sort of that's

937
00:38:10,600 --> 00:38:11,600
wrapped outside of this tile.

938
00:38:11,600 --> 00:38:14,400
It's going to take it and realign it into what we would consider

939
00:38:14,400 --> 00:38:14,900
canonical.

940
00:38:15,100 --> 00:38:19,600
Form, which means that it's always the the real part is always going

941
00:38:19,600 --> 00:38:23,100
to be sort of with within one tile map boundary.

942
00:38:23,200 --> 00:38:25,400
Okay, so I'm going to go ahead and do that.

943
00:38:25,400 --> 00:38:27,300
Hope you can all see what I'm doing here.

944
00:38:27,500 --> 00:38:28,900
I'm just sort of canonicalize.

945
00:38:28,900 --> 00:38:32,400
I'm sort of wrapping these up into something that we can that we can

946
00:38:32,400 --> 00:38:33,800
reason with cleanly.

947
00:38:34,200 --> 00:38:35,900
So basically, I've got this guy here.

948
00:38:35,900 --> 00:38:40,700
It's got the, the tile Map X and the tile map lie, and it's got his X

949
00:38:40,700 --> 00:38:44,500
and Y inside that, right, so, it's like a pixel X and a pixel, why?

950
00:38:44,600 --> 00:38:45,000
That makes

951
00:38:45,100 --> 00:38:48,500
Sense, so hopefully that yet hopefully that makes some reasonable

952
00:38:48,500 --> 00:38:48,800
sense.

953
00:38:49,200 --> 00:38:52,300
So, and in theory, we could also even do this.

954
00:38:52,300 --> 00:38:54,000
We could even do this down to the tile level.

955
00:38:54,000 --> 00:38:56,200
I'm not sure if we want to, but we could, we could even do this, down

956
00:38:56,200 --> 00:38:56,900
to the tile level.

957
00:38:56,900 --> 00:38:58,800
Even more explicitly.

958
00:38:58,900 --> 00:38:59,800
I'm not sure if you want to do that.

959
00:39:00,000 --> 00:39:02,800
We'll have to see how we decide to actually play with these.

960
00:39:03,000 --> 00:39:03,500
All right.

961
00:39:03,800 --> 00:39:06,100
So we're going to get the canonical position.

962
00:39:06,100 --> 00:39:07,200
We're going to pass that in there.

963
00:39:07,200 --> 00:39:11,600
What we're going to do here is basically turn Test X test why into

964
00:39:11,600 --> 00:39:14,000
pose expose, why write like this.

965
00:39:14,700 --> 00:39:20,500
And then essentially all of the stuff that we do for the tile map, is

966
00:39:20,500 --> 00:39:25,900
now going to be being done on pose like that.

967
00:39:26,400 --> 00:39:28,200
There we go, right.

968
00:39:28,600 --> 00:39:29,900
So basically that just

969
00:39:30,000 --> 00:39:31,900
It does that canonicalization for us.

970
00:39:32,400 --> 00:39:35,100
And so we can do the get canonical position like that.

971
00:39:35,400 --> 00:39:38,400
Now that we have get canonical position, R is world map.

972
00:39:38,400 --> 00:39:42,300
Quite empty function is sort of useless, but we're going to keep it

973
00:39:42,300 --> 00:39:42,500
around.

974
00:39:42,500 --> 00:39:44,500
Anyway, just because hey why not?

975
00:39:44,800 --> 00:39:48,900
So basically what all we need to do here is we need to say, you know,

976
00:39:48,900 --> 00:39:53,300
get canonical position for whatever the pose is that we were looking

977
00:39:53,300 --> 00:39:53,600
at.

978
00:39:53,600 --> 00:39:59,900
So I can pose test pose something like this and we will go ahead.

979
00:40:00,300 --> 00:40:05,000
And use the values out of that, so test tile map.

980
00:40:06,300 --> 00:40:06,700
The other.

981
00:40:06,700 --> 00:40:07,500
So yeah, you know what?

982
00:40:07,500 --> 00:40:08,900
Now that I think about it.

983
00:40:09,300 --> 00:40:10,700
We already are Computing.

984
00:40:11,700 --> 00:40:13,700
We're since for computing this value as well.

985
00:40:14,900 --> 00:40:19,000
I guess we would probably want to keep that right as a fully world

986
00:40:19,000 --> 00:40:20,200
world qualified position, right?

987
00:40:20,200 --> 00:40:23,400
There's also this is this kind of interesting now that I think about

988
00:40:23,400 --> 00:40:25,600
it, there's different ways we could use this, right?

989
00:40:25,600 --> 00:40:28,600
Because we don't probably want to store this value.

990
00:40:30,000 --> 00:40:33,500
Right, but it's kind of the thing that gets produced.

991
00:40:33,500 --> 00:40:36,800
The fully computed position is sort of this thing, which means we

992
00:40:36,800 --> 00:40:40,300
could start thinking of these floating Point offsets as being within a

993
00:40:40,300 --> 00:40:42,100
tile itself as well.

994
00:40:42,100 --> 00:40:43,600
I don't, this is kind of interesting.

995
00:40:43,600 --> 00:40:45,800
I, this is not as wrote as I thought it was going to be.

996
00:40:45,800 --> 00:40:47,100
There's some, there's some interesting things here.

997
00:40:47,100 --> 00:40:47,500
I'm going to.

998
00:40:47,500 --> 00:40:48,600
I'm going to have some fun.

999
00:40:49,400 --> 00:40:51,200
I think playing with this stuff.

1000
00:40:51,200 --> 00:40:51,800
In some sense.

1001
00:40:51,800 --> 00:40:57,400
You might think of it as as there being two of these and I wonder even

1002
00:40:57,400 --> 00:40:59,600
if I want to represent that where there's

1003
00:40:59,800 --> 00:41:08,000
Essentially a, there's there's sort of a canonical position and like a

1004
00:41:08,000 --> 00:41:12,000
and like a, like a raw position, right?

1005
00:41:12,000 --> 00:41:14,500
I don't know if this makes sense, but basically, you could think of

1006
00:41:14,500 --> 00:41:16,100
their as being, I'm not sure.

1007
00:41:16,100 --> 00:41:19,100
I actually want to keep this abstraction, but I'm just going to since

1008
00:41:19,100 --> 00:41:20,300
we've got only about 15 minutes left.

1009
00:41:20,300 --> 00:41:24,400
I'm going to, I'm going to show what it would look like to do it

1010
00:41:24,400 --> 00:41:25,900
because I mean, I'm just I'm interested.

1011
00:41:25,900 --> 00:41:28,300
I'm interested to say you could think of it this way.

1012
00:41:28,600 --> 00:41:29,500
There's a raw position.

1013
00:41:29,700 --> 00:41:32,800
Which is just, I was on some tile map and I had some random X and Y

1014
00:41:32,800 --> 00:41:34,700
value that I wanted to test, right?

1015
00:41:35,700 --> 00:41:39,600
And then when I was once I do some work on it.

1016
00:41:39,600 --> 00:41:42,500
I also now know which tile that we're in, right?

1017
00:41:43,100 --> 00:41:46,400
And so in some sense you can think of this as the canonical position

1018
00:41:46,600 --> 00:41:49,100
takes in a raw position, right?

1019
00:41:49,600 --> 00:41:55,300
And then the the result of that right canonical position like this,

1020
00:41:55,900 --> 00:41:58,600
the result of that is going to be

1021
00:42:00,500 --> 00:42:04,700
Something that gets computed entirely out of this, right?

1022
00:42:05,000 --> 00:42:05,600
Let's see.

1023
00:42:05,900 --> 00:42:07,100
Tom at and this would have been a bug.

1024
00:42:07,100 --> 00:42:09,100
That's good that I didn't finish doing that because I don't really

1025
00:42:09,100 --> 00:42:10,400
want to edit the one in place.

1026
00:42:10,400 --> 00:42:12,300
So that's not, that's not actually correct.

1027
00:42:12,700 --> 00:42:19,100
So, anyway, okay, result, fixes, the bug that we didn't have to deal

1028
00:42:19,100 --> 00:42:19,400
with yet.

1029
00:42:19,400 --> 00:42:19,800
Okay.

1030
00:42:20,300 --> 00:42:22,500
So we've got to get kind of position, we pass in a position, we get

1031
00:42:22,500 --> 00:42:24,200
one back, we get that result back.

1032
00:42:24,600 --> 00:42:29,300
So what we want to do here is say that result Kyle map x equals pose

1033
00:42:29,300 --> 00:42:30,100
tilemap.

1034
00:42:30,600 --> 00:42:31,700
Right result.

1035
00:42:31,700 --> 00:42:34,400
Tilemap y equals pose town, map.

1036
00:42:34,400 --> 00:42:36,400
Why you copy those guys in?

1037
00:42:37,100 --> 00:42:42,000
And then we have to figure out what our X and Y is going to be.

1038
00:42:42,000 --> 00:42:45,300
And this is something that we haven't actually dealt with either yet.

1039
00:42:45,300 --> 00:42:45,900
Right?

1040
00:42:46,300 --> 00:42:48,000
When we do this, tilemap advancing.

1041
00:42:48,100 --> 00:42:51,000
We're going to have to deal with the X&Y floating Point values as

1042
00:42:51,000 --> 00:42:51,300
well.

1043
00:42:51,400 --> 00:42:51,900
Right?

1044
00:42:51,900 --> 00:42:54,400
So another reason we might want to do this.

1045
00:42:54,900 --> 00:42:57,200
In fact, this is all looking a little bit better now that I think

1046
00:42:57,200 --> 00:42:57,900
about it.

1047
00:42:58,000 --> 00:43:00,200
When we go to the canonical position this

1048
00:43:00,300 --> 00:43:03,500
And Y value could actually be inside a tile as well.

1049
00:43:03,500 --> 00:43:08,100
If we wanted to, which gets us out of the business of dealing with

1050
00:43:08,100 --> 00:43:09,300
wrapping the X and the Y.

1051
00:43:09,400 --> 00:43:12,400
Because remember, the X and the, Y, were wrong before we never

1052
00:43:12,400 --> 00:43:15,600
finished actually dealing with the X and the Y, because the X and the

1053
00:43:15,600 --> 00:43:19,800
Y are offsets in the tile in the space of an entire tilemap.

1054
00:43:19,800 --> 00:43:22,700
So when we wrap those to the next thing they would have been wrong.

1055
00:43:22,800 --> 00:43:25,500
If we do them inside the tile we're already dealing with wrapping the

1056
00:43:25,500 --> 00:43:26,400
tile X and Y.

1057
00:43:26,500 --> 00:43:28,500
If this is relative to a tile it would just work.

1058
00:43:28,900 --> 00:43:30,100
So I'm starting to like this.

1059
00:43:30,200 --> 00:43:33,200
This, I'm interested in this, I'm going to just, you know, and like I

1060
00:43:33,200 --> 00:43:35,100
said, this is what exploratory programming is all about.

1061
00:43:35,100 --> 00:43:36,800
I've never done a tilemap game before.

1062
00:43:37,300 --> 00:43:40,000
So I'm just kind of finding out what I like about how these things

1063
00:43:40,000 --> 00:43:40,200
work.

1064
00:43:40,200 --> 00:43:43,400
So I'm going to pursue this because it feels kind of good to have it

1065
00:43:43,400 --> 00:43:46,500
be relative to a tile, that seems kind of like it saves a little bit

1066
00:43:46,500 --> 00:43:46,800
of work.

1067
00:43:46,800 --> 00:43:47,300
Maybe.

1068
00:43:47,700 --> 00:43:50,300
So I'm going to go ahead and write this function that way and say,

1069
00:43:50,300 --> 00:43:51,500
alright, we come in.

1070
00:43:51,500 --> 00:43:52,700
We've got to tell my bexon why.

1071
00:43:52,700 --> 00:43:54,800
We know that that's not going to change unless we wrapped and that's

1072
00:43:54,800 --> 00:43:55,100
fine.

1073
00:43:55,800 --> 00:43:57,400
We compute what the tile X and tile?

1074
00:43:57,400 --> 00:44:00,100
Why are from the from this sort of offset in?

1075
00:44:00,300 --> 00:44:01,400
Tom app, right?

1076
00:44:01,600 --> 00:44:02,300
That makes sense.

1077
00:44:02,800 --> 00:44:04,900
So we go ahead and do that to me.

1078
00:44:08,600 --> 00:44:10,800
We might even just store it this way and then we could get rid of

1079
00:44:10,800 --> 00:44:10,900
this.

1080
00:44:10,900 --> 00:44:12,900
Yeah, this is, this is looking good.

1081
00:44:13,000 --> 00:44:14,900
We're not going to get to do all of this today.

1082
00:44:15,000 --> 00:44:15,900
So you have to blow my nose.

1083
00:44:19,600 --> 00:44:20,700
It is that time of year.

1084
00:44:24,800 --> 00:44:27,700
When occasionally get the sniffles, I'm not sick at the moment.

1085
00:44:27,900 --> 00:44:28,500
Thankfully.

1086
00:44:29,900 --> 00:44:30,400
All right.

1087
00:44:30,700 --> 00:44:32,800
Anyway, yeah, I like where this is going.

1088
00:44:32,800 --> 00:44:34,500
So we're going to keep going this direction because then we can get

1089
00:44:34,500 --> 00:44:35,000
rid of this story.

1090
00:44:35,000 --> 00:44:37,100
It relative, the tile seems like a really good idea now that I think

1091
00:44:37,100 --> 00:44:37,500
about it.

1092
00:44:37,500 --> 00:44:38,600
I just didn't think about it before.

1093
00:44:39,200 --> 00:44:40,400
So this is going to be good.

1094
00:44:40,500 --> 00:44:44,000
All of this is just coming out kind of naturally in the course of

1095
00:44:44,000 --> 00:44:45,200
seeing what the code had to do.

1096
00:44:45,200 --> 00:44:46,900
And again, I can't emphasize that enough.

1097
00:44:46,900 --> 00:44:48,500
It didn't require any forethought.

1098
00:44:48,600 --> 00:44:50,100
It just requires trying it.

1099
00:44:50,100 --> 00:44:51,300
Seeing what happens and we going?

1100
00:44:51,400 --> 00:44:54,500
Oh, duh, and that's a much easier way to program them.

1101
00:44:54,500 --> 00:44:56,600
Trying to guess everything up front, especially when you've never done

1102
00:44:56,600 --> 00:44:59,500
it before because you're likely to guess wrong, okay.

1103
00:44:59,700 --> 00:44:59,700
Okay.

1104
00:45:00,000 --> 00:45:02,900
So we're going to go ahead and say we're taking this proposition in.

1105
00:45:03,500 --> 00:45:05,800
We're take the pose X, we subtract it out.

1106
00:45:06,100 --> 00:45:07,500
We then come up with our tile X.

1107
00:45:07,500 --> 00:45:11,500
And so what I'd like to do now is re figure out what the X & Y would

1108
00:45:11,500 --> 00:45:14,900
be inside the tile, right?

1109
00:45:16,500 --> 00:45:20,600
So what I want to do is I want to say, all right, that pose expose,

1110
00:45:20,600 --> 00:45:20,900
why?

1111
00:45:20,900 --> 00:45:23,300
So let's do something like this.

1112
00:45:23,900 --> 00:45:27,700
Let's first subtract out the relative to the tile map for the X and

1113
00:45:27,700 --> 00:45:28,600
the Y, right?

1114
00:45:28,600 --> 00:45:29,600
Let's let's do

1115
00:45:30,000 --> 00:45:32,100
Let's do this because we need this value, right?

1116
00:45:32,100 --> 00:45:34,400
So that's the X and the Y relative to the tile map.

1117
00:45:34,900 --> 00:45:37,700
We then go ahead and truncate real 32 in 32.

1118
00:45:37,700 --> 00:45:40,900
We've got that but we like to do now is compute the offset as well.

1119
00:45:41,400 --> 00:45:45,500
So the result X right is going to be that tile x times that I'll Whip.

1120
00:45:45,800 --> 00:45:49,300
That is where the upper corner, right?

1121
00:45:49,300 --> 00:45:53,400
This is where the upper corner of the tile would be, right.

1122
00:45:53,500 --> 00:45:54,500
This is the upper.

1123
00:45:54,800 --> 00:45:58,700
This is the left part and this is the top part of that tile.

1124
00:45:58,800 --> 00:45:59,800
So what I'd like to do now,

1125
00:46:00,000 --> 00:46:03,300
Now is, I'd like to go ahead and subtract out.

1126
00:46:05,500 --> 00:46:05,800
Sorry.

1127
00:46:05,800 --> 00:46:06,000
Oops.

1128
00:46:06,000 --> 00:46:10,800
I'd like to subtract out that upper left corner of the tile from,

1129
00:46:10,800 --> 00:46:15,100
where my pose from, where I was in the pose for when we, when whatever

1130
00:46:15,100 --> 00:46:15,800
we got passed in.

1131
00:46:16,000 --> 00:46:19,300
So now, this is a tile relative X and Y, right?

1132
00:46:20,000 --> 00:46:20,900
No, Casey.

1133
00:46:21,000 --> 00:46:27,400
This is tile relative X and Y and this at the moment and I think we're

1134
00:46:27,400 --> 00:46:28,600
going to rid of this eventually.

1135
00:46:28,900 --> 00:46:29,800
That's what my Spidey.

1136
00:46:29,900 --> 00:46:34,400
The saying tilemap relative X and Y.

1137
00:46:34,500 --> 00:46:37,300
So, basically, these X and Y tells us how far we are away from the

1138
00:46:37,300 --> 00:46:38,600
upper left corner of the tile map.

1139
00:46:38,600 --> 00:46:42,500
This says, how far away we are from the upper left corner of a tile,

1140
00:46:43,100 --> 00:46:43,700
right?

1141
00:46:43,800 --> 00:46:45,700
And so, all I'm doing is saying, okay.

1142
00:46:45,700 --> 00:46:48,300
Let's make this, let's make that relative right now.

1143
00:46:48,300 --> 00:46:50,000
We don't have to care about these X of Y is anymore.

1144
00:46:50,000 --> 00:46:53,500
They're always going to be right as we adjust, which tile we were

1145
00:46:53,500 --> 00:46:57,100
looking at this test tile X test tile why stuff.

1146
00:46:57,100 --> 00:46:59,800
That's now that is just going to be

1147
00:47:00,100 --> 00:47:01,600
Totally correct.

1148
00:47:01,900 --> 00:47:05,400
When we do the adjustment, the X&Y won't have to be adjusted because

1149
00:47:05,400 --> 00:47:06,100
relative to Tau.

1150
00:47:06,100 --> 00:47:09,800
So we just the tile, we get the positional adjustment for free.

1151
00:47:10,000 --> 00:47:12,100
So I think they see if I've got this.

1152
00:47:12,100 --> 00:47:12,500
All right.

1153
00:47:12,500 --> 00:47:17,600
Now, let's go go.

1154
00:47:18,000 --> 00:47:20,900
All right, so I need to return.

1155
00:47:20,900 --> 00:47:22,800
This here is the result.

1156
00:47:23,200 --> 00:47:23,800
So I don't know.

1157
00:47:23,800 --> 00:47:26,300
That was a bunch of typing and like I said, hard to pay attention on

1158
00:47:26,300 --> 00:47:28,300
the stream sometimes, so we're going to step into that and make sure

1159
00:47:28,300 --> 00:47:29,000
that we didn't.

1160
00:47:29,900 --> 00:47:32,700
Introduce a bunch of random stupid stuff that shouldn't actually

1161
00:47:32,700 --> 00:47:35,300
happen, but now we can call get canonical position.

1162
00:47:35,400 --> 00:47:38,400
So basically get canonical position this thing.

1163
00:47:38,500 --> 00:47:43,600
If it takes in a raw position for example, and then wants to go ahead

1164
00:47:43,800 --> 00:47:48,300
and get that canonical position out it can do so, so this will take in

1165
00:47:48,300 --> 00:47:51,400
a raw position and say, okay, that's the pose.

1166
00:47:51,400 --> 00:47:52,400
We're going to test.

1167
00:47:52,700 --> 00:47:55,200
So we go ahead and get the test pose in we.

1168
00:47:55,200 --> 00:47:58,000
Then take the canonical position that came out.

1169
00:47:58,100 --> 00:47:59,700
We asked if the tile map point is

1170
00:48:00,000 --> 00:48:03,500
Point is empty by saying, alright.

1171
00:48:03,500 --> 00:48:06,100
The tile Map X and the tile map.

1172
00:48:06,100 --> 00:48:08,400
Why tell us which town map we're looking at?

1173
00:48:08,700 --> 00:48:11,900
And then the tile X and the tile y of that tile map.

1174
00:48:11,900 --> 00:48:13,700
Tell them, tell us, where, in the towel we are.

1175
00:48:14,000 --> 00:48:15,400
So we go ahead and do that.

1176
00:48:16,100 --> 00:48:18,000
And of course, we need that group.

1177
00:48:18,000 --> 00:48:21,700
We need a world pointer here because otherwise, we can't canonicalize.

1178
00:48:21,800 --> 00:48:24,700
We've got a use salt here again.

1179
00:48:24,700 --> 00:48:28,300
Just kind of dealing with the cleanup of changing.

1180
00:48:28,300 --> 00:48:29,800
How all these things are accessed.

1181
00:48:30,000 --> 00:48:31,100
It's okay.

1182
00:48:31,900 --> 00:48:33,900
And then here we are.

1183
00:48:34,200 --> 00:48:36,300
So this is our canonical position.

1184
00:48:37,100 --> 00:48:38,300
Get that out.

1185
00:48:38,900 --> 00:48:39,600
Function is not take.

1186
00:48:39,600 --> 00:48:40,100
What is true.

1187
00:48:40,100 --> 00:48:42,200
It doesn't it needs the world to do its work.

1188
00:48:42,300 --> 00:48:46,100
So we pass it, the world's typo there.

1189
00:48:46,500 --> 00:48:52,900
And then here, this is now going to take raw positions entirely.

1190
00:48:52,900 --> 00:48:57,300
So, okay, we've got raw positions and those raw positions are the

1191
00:48:57,300 --> 00:48:59,000
player pose, right?

1192
00:48:59,500 --> 00:48:59,800
And

1193
00:49:00,300 --> 00:49:02,600
And we can go ahead and do the player pose.

1194
00:49:02,900 --> 00:49:06,000
And then we've got some different poses that come out, that sort of

1195
00:49:06,000 --> 00:49:09,700
got tile Map X and tilemap why there.

1196
00:49:10,100 --> 00:49:16,000
And we've got the X and the Y, which is these, right?

1197
00:49:16,900 --> 00:49:19,300
So basically I'm just go ahead and building one of these quickly

1198
00:49:19,300 --> 00:49:19,600
course.

1199
00:49:19,600 --> 00:49:21,800
There's we're going to want to do a bunch of stuff with this.

1200
00:49:21,800 --> 00:49:24,200
Now, since this is starting to actually come together here.

1201
00:49:25,000 --> 00:49:28,600
So that's going to be player pose right there.

1202
00:49:28,600 --> 00:49:29,600
So, we're going to build the player.

1203
00:49:29,900 --> 00:49:30,400
Bo's.

1204
00:49:30,900 --> 00:49:37,400
Then we're going to do our opposition left player left.

1205
00:49:37,700 --> 00:49:40,000
That's going to be equal to the player pose.

1206
00:49:40,200 --> 00:49:44,800
And the only difference there for the player left and the player right

1207
00:49:44,800 --> 00:49:48,500
is that we're going to subtract that width from the X, right.

1208
00:49:48,500 --> 00:49:57,000
So, we've got that player left, and then the player, right?

1209
00:49:57,200 --> 00:49:57,700
Okay.

1210
00:49:58,200 --> 00:49:59,800
So now we are just doing

1211
00:50:00,000 --> 00:50:09,800
Israel Point, empty player pose that player left and player.

1212
00:50:09,800 --> 00:50:10,400
Right?

1213
00:50:11,100 --> 00:50:11,700
There we go.

1214
00:50:12,600 --> 00:50:16,600
Now we should be

1215
00:50:18,700 --> 00:50:21,000
In a place where we are working a little more cleanly or ready.

1216
00:50:21,000 --> 00:50:22,800
You can start to see this stuff is getting a little cleaner.

1217
00:50:22,800 --> 00:50:25,700
We now no longer have giant strings of variables that were passing.

1218
00:50:25,700 --> 00:50:28,400
So we could, you know, which we could have gotten the order wrong of

1219
00:50:28,400 --> 00:50:30,300
or get confused about what is what at least.

1220
00:50:30,300 --> 00:50:34,100
Now, we're passing sort of some bundles and those bundles, look a

1221
00:50:34,100 --> 00:50:37,100
little more intelligible and we know what they mean on the inside.

1222
00:50:37,100 --> 00:50:38,300
So that's a little handier.

1223
00:50:38,700 --> 00:50:40,300
We're pretty far from where we would want to be.

1224
00:50:40,300 --> 00:50:43,000
But we're getting, we're certainly making some progress.

1225
00:50:43,500 --> 00:50:47,600
And so, let's go ahead and take a look in here and see where we are.

1226
00:50:47,700 --> 00:50:51,200
Our at, we've got our player pose.

1227
00:50:51,500 --> 00:50:52,400
Let's see what that is.

1228
00:50:52,400 --> 00:50:54,100
It's on, 00, 150 150.

1229
00:50:54,100 --> 00:50:55,600
That is exactly where it should be.

1230
00:50:55,800 --> 00:50:57,800
Our player left our player, right?

1231
00:50:58,400 --> 00:50:59,600
Where are those?

1232
00:50:59,600 --> 00:50:59,800
We can

1233
00:51:00,000 --> 00:51:02,100
Get rid of all of this stuff now, goodbye.

1234
00:51:02,800 --> 00:51:06,900
So, let's take a look at those when 27:51 up.

1235
00:51:06,900 --> 00:51:07,500
Nope.

1236
00:51:07,600 --> 00:51:09,900
Got a bug, got a typo.

1237
00:51:10,400 --> 00:51:11,600
I did the player, right?

1238
00:51:11,600 --> 00:51:13,800
I still a need to add.

1239
00:51:13,900 --> 00:51:14,500
It's not.

1240
00:51:14,600 --> 00:51:15,000
There we go.

1241
00:51:15,000 --> 00:51:15,900
Oh, I keep forgetting.

1242
00:51:15,900 --> 00:51:17,700
I don't have to close because we've got our nice little.

1243
00:51:19,200 --> 00:51:19,500
Yeah.

1244
00:51:19,600 --> 00:51:21,300
Well, anyway, okay.

1245
00:51:21,300 --> 00:51:23,000
So that's our player left our player, right?

1246
00:51:23,000 --> 00:51:24,100
That is good.

1247
00:51:24,200 --> 00:51:26,700
So, let's go into Israel Point empty and look at our debt canonical

1248
00:51:26,700 --> 00:51:28,600
position, call our get canonical position.

1249
00:51:28,600 --> 00:51:29,900
Call is

1250
00:51:30,000 --> 00:51:31,300
Working between two things.

1251
00:51:31,300 --> 00:51:35,700
It's working between a canonical position that is trying to produce

1252
00:51:35,900 --> 00:51:38,300
and oppose that it gets in which is not necessarily.

1253
00:51:38,600 --> 00:51:40,400
It's mapped relative, the tile map.

1254
00:51:40,400 --> 00:51:41,000
So, okay.

1255
00:51:41,000 --> 00:51:41,900
So here we go.

1256
00:51:42,100 --> 00:51:44,500
I go into my result and I say, all right.

1257
00:51:44,500 --> 00:51:45,800
Let's copy the top.

1258
00:51:45,800 --> 00:51:48,600
Excellent time I buy for starters and those are both 0, obviously

1259
00:51:48,600 --> 00:51:49,200
already.

1260
00:51:49,300 --> 00:51:53,100
I'm going to compute the X and the Y, which is basically the X and the

1261
00:51:53,100 --> 00:51:55,400
Y relative to the tile map itself.

1262
00:51:55,600 --> 00:51:58,400
There you go that computes that which is f what we expected.

1263
00:51:58,400 --> 00:51:59,800
Because there's an offset of negative 30

1264
00:52:00,000 --> 00:52:01,100
On the X4 things.

1265
00:52:01,100 --> 00:52:02,900
So, that's exactly what we expect.

1266
00:52:03,500 --> 00:52:08,200
Let's go ahead and grab those tile Maps out and see what the toxin.

1267
00:52:08,200 --> 00:52:09,400
Why is it style map?

1268
00:52:09,600 --> 00:52:11,000
It's 3 and 2.

1269
00:52:11,000 --> 00:52:13,000
Is that correct?

1270
00:52:13,000 --> 00:52:14,300
I don't know if that's correct or not.

1271
00:52:14,300 --> 00:52:16,500
Is that where we're supposed to be 32?

1272
00:52:16,500 --> 00:52:18,400
I'm not sure if that's where we're supposed to be.

1273
00:52:18,600 --> 00:52:19,500
That's a good question.

1274
00:52:19,700 --> 00:52:19,900
I guess.

1275
00:52:19,900 --> 00:52:21,200
I don't know where the guy starts.

1276
00:52:21,300 --> 00:52:21,800
Let's assume.

1277
00:52:21,800 --> 00:52:24,200
It's correct for now, but maybe that's something we'll have to look at

1278
00:52:24,200 --> 00:52:25,300
later if it's not.

1279
00:52:25,900 --> 00:52:28,000
So yeah, so three.

1280
00:52:28,400 --> 00:52:29,800
Well if it's what

1281
00:52:29,900 --> 00:52:30,300
150.

1282
00:52:30,300 --> 00:52:32,000
150 180, 150.

1283
00:52:32,000 --> 00:52:35,200
Yeah, I think that is right because it's a little further over in X

1284
00:52:35,200 --> 00:52:38,200
and Y and the tiles were something like, what would they 90 apiece, or

1285
00:52:38,200 --> 00:52:38,800
60, a piece?

1286
00:52:38,800 --> 00:52:39,200
I don't know.

1287
00:52:39,200 --> 00:52:40,000
What are they, what?

1288
00:52:40,100 --> 00:52:40,400
Have a good.

1289
00:52:40,400 --> 00:52:41,400
Our tiles people.

1290
00:52:42,300 --> 00:52:43,200
60 a piece.

1291
00:52:43,400 --> 00:52:47,200
So, yeah, if it's an additional 30 over then it would be than 60.

1292
00:52:47,600 --> 00:52:48,100
Let's see.

1293
00:52:48,100 --> 00:52:53,100
150 0 divided by the tile with 2.5.

1294
00:52:53,100 --> 00:52:53,300
Yep.

1295
00:52:53,300 --> 00:52:55,000
So it would be it would be just over.

1296
00:52:55,000 --> 00:52:55,700
So that's fine.

1297
00:52:55,700 --> 00:52:56,700
All right, totally fine.

1298
00:52:56,700 --> 00:52:57,300
Make sense.

1299
00:52:57,800 --> 00:52:59,800
We then recompute and say what where?

1300
00:53:00,000 --> 00:53:03,300
We relative to our tile.

1301
00:53:04,700 --> 00:53:06,900
So, okay, result X and Y know that is okay.

1302
00:53:06,900 --> 00:53:10,100
So that is totally not correct at all.

1303
00:53:10,600 --> 00:53:13,300
That's just just totally totally bogus.

1304
00:53:14,800 --> 00:53:16,900
So so we've got, we've got an issue.

1305
00:53:16,900 --> 00:53:18,000
We have an issue here.

1306
00:53:18,400 --> 00:53:24,600
So our result tile x what has happened here.

1307
00:53:25,200 --> 00:53:27,200
What has happened?

1308
00:53:27,500 --> 00:53:28,200
Are posed.

1309
00:53:28,200 --> 00:53:28,700
X0.

1310
00:53:31,100 --> 00:53:31,600
Awesome.

1311
00:53:33,000 --> 00:53:33,500
Yeah.

1312
00:53:33,500 --> 00:53:34,000
I did all.

1313
00:53:34,200 --> 00:53:36,500
Work is very common on the stream people.

1314
00:53:36,500 --> 00:53:38,000
I did all the work and then didn't use it.

1315
00:53:38,200 --> 00:53:43,100
So we intentionally made things relative to the tile map so that I

1316
00:53:43,100 --> 00:53:46,000
could compute with that because I didn't want to deal with things that

1317
00:53:46,000 --> 00:53:49,400
were in the offset space that you know, with the shift on the screen

1318
00:53:49,600 --> 00:53:50,600
again, a lot of stuff will go away.

1319
00:53:50,600 --> 00:53:54,200
Once we get even further down the coordinate line of things.

1320
00:53:54,400 --> 00:53:57,000
But all right, so I'm going to, I'm going to remove the X and what do

1321
00:53:57,000 --> 00:53:59,500
the pose expose Y and use the actual values that

1322
00:54:00,000 --> 00:54:05,000
Relative the tile map because that is what I needed to use that.

1323
00:54:05,000 --> 00:54:07,900
The reason I did that is because I need to use that in order to do

1324
00:54:08,200 --> 00:54:09,600
this sort of computation.

1325
00:54:12,100 --> 00:54:15,600
I can't subtract out the position that I ended up Computing for the

1326
00:54:15,600 --> 00:54:17,000
upper left of the tile.

1327
00:54:17,400 --> 00:54:20,600
If I don't also take into account the upper left X, so that's why I

1328
00:54:20,600 --> 00:54:22,400
wanted to get rid of that ahead of time.

1329
00:54:22,400 --> 00:54:23,500
So that's just a bug.

1330
00:54:23,600 --> 00:54:26,200
That's just it was it just a stupid stupid mistake.

1331
00:54:26,200 --> 00:54:29,500
Alright, so let's come back in here and you know what we could do to

1332
00:54:29,600 --> 00:54:29,900
since

1333
00:54:30,000 --> 00:54:33,500
We have a certain now since we added in assert, what we could also do

1334
00:54:33,600 --> 00:54:38,700
is assert that our results that are results of mapping into the tile

1335
00:54:38,700 --> 00:54:40,100
space, right?

1336
00:54:40,400 --> 00:54:45,400
That those are always within the bounds, that would be allowed.

1337
00:54:45,500 --> 00:54:45,900
Right?

1338
00:54:47,000 --> 00:54:51,100
We could, we can just say that once we put something in tile space, It

1339
00:54:51,100 --> 00:54:55,500
should never be allowed to be too far off of the tub, you know,

1340
00:54:55,600 --> 00:54:57,600
outside of the size of a tile, right?

1341
00:55:01,300 --> 00:55:01,800
Okay.

1342
00:55:02,200 --> 00:55:04,700
Oops, so I actually didn't mean to stop there.

1343
00:55:04,700 --> 00:55:05,200
There we go.

1344
00:55:05,800 --> 00:55:07,200
So now our results should always be.

1345
00:55:07,200 --> 00:55:07,600
Yep.

1346
00:55:07,600 --> 00:55:09,000
In that that's more respected.

1347
00:55:09,300 --> 00:55:11,600
We should never be able to get a negative there because relative the

1348
00:55:11,600 --> 00:55:12,600
upper left corner of a tile.

1349
00:55:12,600 --> 00:55:13,400
So that's good.

1350
00:55:14,100 --> 00:55:16,800
We go through and we check of course we can't really do bug that those

1351
00:55:16,800 --> 00:55:18,900
cases yet because we're not hitting them at all.

1352
00:55:19,500 --> 00:55:21,900
So we go in here, we get our canonical pose.

1353
00:55:22,200 --> 00:55:26,600
Let's make sure that that canonical pose is sensical and it is 0, 0

1354
00:55:26,600 --> 00:55:28,400
times, we up all looks good.

1355
00:55:28,500 --> 00:55:28,600
We

1356
00:55:28,800 --> 00:55:30,300
Into getting the tile map.

1357
00:55:30,300 --> 00:55:31,200
That's just a straight up.

1358
00:55:31,200 --> 00:55:31,600
Look up.

1359
00:55:31,600 --> 00:55:33,100
So that didn't change at all.

1360
00:55:33,200 --> 00:55:33,900
Nothing, particularly.

1361
00:55:33,900 --> 00:55:34,400
Where there are?

1362
00:55:34,400 --> 00:55:35,200
We coming here?

1363
00:55:35,200 --> 00:55:35,900
We look at the test.

1364
00:55:35,900 --> 00:55:37,300
How we see what that value is.

1365
00:55:37,300 --> 00:55:37,600
We see.

1366
00:55:37,600 --> 00:55:40,500
Yep, nothing particularly odd.

1367
00:55:40,500 --> 00:55:43,600
So off we go and now we can drive around in the theory all our stuff

1368
00:55:43,600 --> 00:55:44,500
should still work.

1369
00:55:44,700 --> 00:55:45,900
It does seem to work.

1370
00:55:45,900 --> 00:55:47,200
So that's pretty good.

1371
00:55:48,000 --> 00:55:50,900
Nothing particularly out of the ordinary there and that is a good

1372
00:55:50,900 --> 00:55:51,100
thing.

1373
00:55:51,100 --> 00:55:52,800
We actually don't want to be out of the ordinary.

1374
00:55:52,800 --> 00:55:53,500
In this case.

1375
00:55:53,900 --> 00:55:56,400
We can walk off the screen and that is good as well.

1376
00:55:56,900 --> 00:55:58,600
So we are all happy.

1377
00:55:58,700 --> 00:56:03,900
So the only thing we have left to do now, I suppose is to actually

1378
00:56:04,300 --> 00:56:07,500
move where the player is on the tile map afterwards.

1379
00:56:07,500 --> 00:56:09,700
So we've set ourselves up to do that.

1380
00:56:09,700 --> 00:56:11,900
Presumably, it should be pretty straightforward.

1381
00:56:12,200 --> 00:56:12,600
Basically.

1382
00:56:12,600 --> 00:56:15,400
We have that player pose thing down here.

1383
00:56:15,400 --> 00:56:20,400
When we do player pose, if we accept a new state for the player, a new

1384
00:56:20,400 --> 00:56:24,600
X and Y for the player, what we should basically do is say, let's go

1385
00:56:24,600 --> 00:56:28,600
ahead and actually move the player.

1386
00:56:28,700 --> 00:56:31,900
New tile map where warranted and so we can do that pretty easily

1387
00:56:31,900 --> 00:56:33,900
because now we've got the canonical thing.

1388
00:56:33,900 --> 00:56:36,000
Although there is one thing that we still haven't quite done yet.

1389
00:56:36,000 --> 00:56:38,200
That makes it a little bit uglier than it should be.

1390
00:56:38,200 --> 00:56:40,700
But what we can do now, just call the function that we used.

1391
00:56:41,000 --> 00:56:45,600
We have our ability to get a canonical position out of for the players

1392
00:56:45,900 --> 00:56:46,600
position.

1393
00:56:46,700 --> 00:56:51,200
So his new position, right, which is this one here, the new player X,

1394
00:56:51,400 --> 00:56:54,900
right, that new position, we can just ask to get canonicalized, and

1395
00:56:54,900 --> 00:56:58,400
that will tell us sort of the new state of the dude.

1396
00:56:58,400 --> 00:56:58,500
Now.

1397
00:56:58,700 --> 00:56:59,800
The problem is the do.

1398
00:57:00,000 --> 00:57:03,900
Is still in tilemap relative coordinates not in.

1399
00:57:05,600 --> 00:57:09,200
Yeah, the the player is still in town that builds coordinates and what

1400
00:57:09,200 --> 00:57:11,900
we've done basically, as we've converted things over to being tile

1401
00:57:11,900 --> 00:57:13,200
relative for locations.

1402
00:57:13,300 --> 00:57:15,500
And so this is still going to be a little, uh, who needs to be.

1403
00:57:15,600 --> 00:57:18,400
And so, the first thing we could probably do on Monday is fix that,

1404
00:57:18,500 --> 00:57:20,800
but I'm going to go ahead and type it in any way just using what we've

1405
00:57:20,800 --> 00:57:21,100
got.

1406
00:57:21,100 --> 00:57:23,300
Just so we can see if it worked.

1407
00:57:23,400 --> 00:57:25,200
So we're going to go and get the canonical position.

1408
00:57:25,300 --> 00:57:28,600
Once we have the canonical position that has a tile Map X and the tile

1409
00:57:28,600 --> 00:57:29,900
map Y in it, so we're going to

1410
00:57:30,000 --> 00:57:34,400
Go ahead and and put that in here, right?

1411
00:57:34,600 --> 00:57:37,000
Just grab out where the player is now.

1412
00:57:37,200 --> 00:57:41,700
And then all we need to do is Rectify this stuff and that's pretty

1413
00:57:41,700 --> 00:57:42,400
easy to do.

1414
00:57:42,400 --> 00:57:42,600
Right?

1415
00:57:42,600 --> 00:57:44,000
We've got the canonical pose.

1416
00:57:44,500 --> 00:57:46,200
It's got an X and Y in it.

1417
00:57:46,300 --> 00:57:52,100
And all we have to do is add in the upper sort of how far they were in

1418
00:57:52,100 --> 00:57:52,900
tile X and tile.

1419
00:57:52,900 --> 00:57:53,700
Why space?

1420
00:57:53,700 --> 00:57:59,400
So Campos tile x times the tile with right?

1421
00:58:00,000 --> 00:58:02,400
Campos tile.

1422
00:58:02,400 --> 00:58:03,100
Why?

1423
00:58:05,100 --> 00:58:09,100
This and then, of course, we need the offset X.

1424
00:58:11,400 --> 00:58:11,800
And there.

1425
00:58:11,800 --> 00:58:12,700
What is it called?

1426
00:58:12,700 --> 00:58:13,500
It's oh, sorry.

1427
00:58:13,500 --> 00:58:17,700
It's upper left X and upper left y.

1428
00:58:17,700 --> 00:58:19,000
So, do you see what I have to do here?

1429
00:58:19,100 --> 00:58:22,500
Like in order to get the player location, the new location, these

1430
00:58:22,500 --> 00:58:25,900
locations are in our in World space, that the player is, it's just I

1431
00:58:25,900 --> 00:58:27,100
mean, I starting screen space.

1432
00:58:27,600 --> 00:58:29,100
It's just a cordon on the screen.

1433
00:58:29,200 --> 00:58:33,000
And so I have to take our coordinate system and we figure out where he

1434
00:58:33,000 --> 00:58:33,600
is on the screen.

1435
00:58:33,600 --> 00:58:36,900
I have to say, all right, the upper left corner and this of the tile

1436
00:58:36,900 --> 00:58:37,800
map space.

1437
00:58:38,100 --> 00:58:39,200
Plus the tile with times.

1438
00:58:39,200 --> 00:58:40,500
How many tiles any is place?

1439
00:58:40,500 --> 00:58:40,800
Where are you?

1440
00:58:41,000 --> 00:58:42,500
Out at the tile, got to do that stuff.

1441
00:58:42,800 --> 00:58:43,800
I think I typed it in, right?

1442
00:58:43,800 --> 00:58:47,700
I'm not sure, but as we're getting to the end of the stream here,

1443
00:58:48,500 --> 00:58:50,500
let's see Campos be canonical position.

1444
00:58:50,500 --> 00:58:52,500
Gotta pass the world location, their hoops.

1445
00:58:52,500 --> 00:58:56,600
And, oh, and these are all going to be dots because we're that.

1446
00:58:57,700 --> 00:58:58,700
Yeah.

1447
00:58:59,000 --> 00:58:59,400
Okay.

1448
00:59:00,000 --> 00:59:03,700
So player tile map.

1449
00:59:03,700 --> 00:59:04,900
Is that what it is?

1450
00:59:05,600 --> 00:59:06,000
It's player.

1451
00:59:06,000 --> 00:59:06,500
Town map.

1452
00:59:06,500 --> 00:59:06,800
Yeah.

1453
00:59:07,400 --> 00:59:08,100
Player town.

1454
00:59:08,100 --> 00:59:09,600
Map we go.

1455
00:59:11,200 --> 00:59:12,400
And let's see.

1456
00:59:12,400 --> 00:59:14,600
Now if we can omit.

1457
00:59:14,600 --> 00:59:15,100
Wow.

1458
00:59:15,200 --> 00:59:15,700
All right.

1459
00:59:15,700 --> 00:59:18,600
Well, that was not a good that was not an auspicious beginning.

1460
00:59:18,600 --> 00:59:19,300
Their people.

1461
00:59:19,600 --> 00:59:21,300
Not an auspicious beginning at all.

1462
00:59:21,900 --> 00:59:23,500
Why did we crash there though?

1463
00:59:23,500 --> 00:59:24,200
I'm going to see.

1464
00:59:24,400 --> 00:59:26,400
I'm going to, I just want to restart the app because we still have

1465
00:59:26,400 --> 00:59:29,200
some pdb problems that we need to chase down terms of it not reloading

1466
00:59:29,200 --> 00:59:29,700
our pdb.

1467
00:59:29,700 --> 00:59:32,500
So let's, let's get that crash again.

1468
00:59:33,600 --> 00:59:34,200
There we go.

1469
00:59:34,400 --> 00:59:34,900
There we go.

1470
00:59:36,100 --> 00:59:38,700
All right, so we're getting close to working.

1471
00:59:39,000 --> 00:59:40,200
I don't think anyone will mind.

1472
00:59:40,400 --> 00:59:43,000
No, will you if I just go ahead and debug this, we were so close to

1473
00:59:43,000 --> 00:59:43,500
being done?

1474
00:59:47,000 --> 00:59:48,600
Might as well take a five more minutes.

1475
00:59:49,700 --> 00:59:50,600
And just finished a bug.

1476
00:59:50,600 --> 00:59:50,800
Thanks.

1477
00:59:51,100 --> 00:59:56,800
Alright, so we've got an assertion here, which is that our result Y is

1478
00:59:56,800 --> 00:59:57,900
less than or equal to 0?

1479
00:59:58,300 --> 00:59:59,500
What is the problem there?

1480
00:59:59,600 --> 00:59:59,800
Oh.

1481
01:00:00,200 --> 01:00:02,500
I don't know if we're having a truncation issue.

1482
01:00:02,500 --> 01:00:03,500
Let's find out here.

1483
01:00:03,500 --> 01:00:08,700
All right, so what we had and this could be good too.

1484
01:00:08,700 --> 01:00:12,500
If this is this could be if it's what I was expecting it to be, but

1485
01:00:12,500 --> 01:00:13,100
might not be.

1486
01:00:13,300 --> 01:00:13,800
All right.

1487
01:00:16,100 --> 01:00:20,400
So we take in a position and we say, all right, the tile Map, X,

1488
01:00:20,400 --> 01:00:20,900
tilemap?

1489
01:00:20,900 --> 01:00:21,200
Why?

1490
01:00:21,200 --> 01:00:21,900
That's fine.

1491
01:00:21,900 --> 01:00:26,100
We take in our X and our X is going to be 482.

1492
01:00:26,100 --> 01:00:29,300
That seems fine as well, around the tile map and our why we've stepped

1493
01:00:29,300 --> 01:00:29,900
off the

1494
01:00:30,000 --> 01:00:31,100
Top of the screen, so it's negative.

1495
01:00:31,100 --> 01:00:32,200
So that's fine as well.

1496
01:00:33,800 --> 01:00:38,100
What that ends up doing, is that ends up producing a negative tile

1497
01:00:38,100 --> 01:00:39,900
value, or it should right.

1498
01:00:40,200 --> 01:00:46,300
So, let's see, when we computed our tile X, in our tell, why we ended

1499
01:00:46,300 --> 01:00:48,000
up with the tile y of 0.

1500
01:00:48,000 --> 01:00:50,100
So, okay, so

1501
01:00:51,500 --> 01:00:55,000
It is what I thought it was, which means we will have to actually

1502
01:00:55,000 --> 01:00:55,300
dress this.

1503
01:00:55,300 --> 01:00:55,500
Now.

1504
01:00:55,500 --> 01:00:59,700
Unfortunately, we can towards the end of this, of the stream, which is

1505
01:00:59,700 --> 01:01:03,200
not exactly what I was hoping to see happen here.

1506
01:01:03,200 --> 01:01:07,900
But let's let's go ahead and try to think of how I can best step into

1507
01:01:07,900 --> 01:01:08,500
this here.

1508
01:01:09,200 --> 01:01:10,500
Well, you know what I can do.

1509
01:01:11,200 --> 01:01:12,200
This is what I can do.

1510
01:01:13,000 --> 01:01:17,500
Because now we actually have to face this issue a little more cleanly,

1511
01:01:17,500 --> 01:01:18,300
so, okay.

1512
01:01:18,300 --> 01:01:21,000
So what I could do here is let me just call this.

1513
01:01:21,100 --> 01:01:25,800
Function synthetically, and and show you what I'm going to.

1514
01:01:26,100 --> 01:01:28,800
What I'm saying is basically the problem here, right?

1515
01:01:30,200 --> 01:01:30,600
Okay.

1516
01:01:31,100 --> 01:01:35,700
So let's say I want to call truncate real 32 in 32 and I pass it 0.5

1517
01:01:36,200 --> 01:01:42,300
right or let's let's say I pass it through .75.

1518
01:01:43,500 --> 01:01:43,900
Okay.

1519
01:01:44,800 --> 01:01:51,400
So in 32 equals truncated and there we go, and I could say what

1520
01:01:51,600 --> 01:01:52,300
something here.

1521
01:01:52,600 --> 01:01:55,100
I'm just going to set up a call to this so I can show you what I want

1522
01:01:55,100 --> 01:01:58,400
to show you without having to deal with, getting to the point in the

1523
01:01:58,400 --> 01:01:59,800
debugger where it actually

1524
01:02:00,000 --> 01:02:00,500
Would be.

1525
01:02:01,000 --> 01:02:05,700
So let's go ahead here, and let's just step into that.

1526
01:02:06,200 --> 01:02:08,600
You can see Happening Here.

1527
01:02:08,700 --> 01:02:09,300
There we go.

1528
01:02:10,400 --> 01:02:13,400
And so you can see what I did right eye.

1529
01:02:13,400 --> 01:02:15,900
I passed in -0.75.

1530
01:02:16,900 --> 01:02:19,900
And I ask it to truncate.

1531
01:02:21,100 --> 01:02:23,600
Now, all of our trunk Asians have been working properly.

1532
01:02:23,700 --> 01:02:26,600
And the reason that they've been working properly for our purposes is

1533
01:02:26,600 --> 01:02:28,800
because we were always working with positive numbers.

1534
01:02:29,100 --> 01:02:34,400
And what happens in the sea, when I do this truncation, is you

1535
01:02:34,400 --> 01:02:34,900
remember?

1536
01:02:34,900 --> 01:02:35,500
And I UPS,

1537
01:02:38,600 --> 01:02:39,000
There we go.

1538
01:02:39,600 --> 01:02:43,400
If you remember, I basically was saying, okay, you know, I've got this

1539
01:02:43,400 --> 01:02:46,400
sort of thing here and I want to find out where we are on the tile

1540
01:02:46,400 --> 01:02:46,600
map.

1541
01:02:46,600 --> 01:02:49,200
So 0, 1, 2 3 4.

1542
01:02:49,300 --> 01:02:50,800
I want to find out where we are on the tile map.

1543
01:02:50,800 --> 01:02:52,400
So like we're here or something.

1544
01:02:52,500 --> 01:02:54,200
We want to truncate it down to zero.

1545
01:02:54,200 --> 01:02:56,800
So we just do the truncation and we just get what's left.

1546
01:02:57,400 --> 01:02:59,800
But if you think about what will happen, right?

1547
01:03:00,500 --> 01:03:02,900
When we are here, does that make sense?

1548
01:03:04,400 --> 01:03:05,400
This is negative 1.

1549
01:03:05,400 --> 01:03:08,900
We want it to truncate down to negative one because what we wanted to

1550
01:03:08,900 --> 01:03:12,200
do is we wanted to see where we still were in a tile map.

1551
01:03:12,200 --> 01:03:14,400
That imaginarily keeps going below zero.

1552
01:03:14,700 --> 01:03:20,500
Unfortunately, what see will actually do and you know, I don't pretend

1553
01:03:20,500 --> 01:03:24,100
to remember why it does these things, but this is I believe how it's

1554
01:03:24,100 --> 01:03:25,400
specified to work.

1555
01:03:25,600 --> 01:03:29,900
I'm not I think is basically it will truncate.

1556
01:03:30,000 --> 01:03:30,600
10.

1557
01:03:31,100 --> 01:03:36,100
So if you're if you're lower on the number line than 0, I believe what

1558
01:03:36,100 --> 01:03:40,200
happens is instead of truncating down to the next lower value.

1559
01:03:40,400 --> 01:03:43,100
It truncates to the next value closer to zero.

1560
01:03:43,200 --> 01:03:47,900
So basically around zero as you go out in either direction, if this is

1561
01:03:47,900 --> 01:03:53,800
0, the truncation direction is actually sort of combed towards zero,

1562
01:03:54,000 --> 01:03:54,300
right?

1563
01:03:54,300 --> 01:03:55,000
Like this.

1564
01:03:55,700 --> 01:03:59,800
And so, that's not what we wanted at all for our purposes.

1565
01:04:00,000 --> 01:04:01,800
That's like, totally not what we want.

1566
01:04:01,900 --> 01:04:06,700
What we want is something that truncates towards- towards negative

1567
01:04:06,700 --> 01:04:07,700
Infinity, right?

1568
01:04:07,700 --> 01:04:09,400
Negative Infinity, is off here.

1569
01:04:09,400 --> 01:04:10,300
Often Infinity.

1570
01:04:10,400 --> 01:04:13,500
We want something that always goes downward truncate towards negative

1571
01:04:13,500 --> 01:04:15,900
Infinity right now.

1572
01:04:15,900 --> 01:04:21,000
We can do a simple hack for this if we wanted to enforce that, right?

1573
01:04:21,200 --> 01:04:26,600
So if we have the truncate real 322 in 32, we can have basically a

1574
01:04:26,600 --> 01:04:28,900
floor function, right?

1575
01:04:29,600 --> 01:04:29,800
Like

1576
01:04:29,900 --> 01:04:30,500
Or something.

1577
01:04:30,500 --> 01:04:32,800
We can we can call this truncate.

1578
01:04:32,800 --> 01:04:39,400
Real 32 1032 toward negative infinity or something, but I believe

1579
01:04:39,400 --> 01:04:45,300
typically that floor has that definition.

1580
01:04:47,700 --> 01:04:49,700
Let me, let me, let me look up exactly.

1581
01:04:49,700 --> 01:04:51,600
If floor is, I don't want to use.

1582
01:04:52,400 --> 01:04:53,900
That's not what we want.

1583
01:04:55,700 --> 01:04:56,300
That's funny.

1584
01:04:56,400 --> 01:04:58,700
I just want to make sure I'm not going to use a wrong term here for

1585
01:04:58,700 --> 01:04:59,300
the name.

1586
01:05:00,100 --> 01:05:05,100
I want I want to know that floor is.

1587
01:05:05,100 --> 01:05:11,400
Yeah, so you can see floor and ceiling typically have the definition

1588
01:05:11,700 --> 01:05:16,600
of always doing the the thing that we want which is no matter what

1589
01:05:16,600 --> 01:05:17,000
side of

1590
01:05:17,200 --> 01:05:23,200
Oh, they're on, they always go sort of off towards negative infinity

1591
01:05:23,200 --> 01:05:24,900
or positive Infinity ceiling.

1592
01:05:24,900 --> 01:05:26,100
Like we'll go this way.

1593
01:05:26,800 --> 01:05:28,300
I'm sorry, stealing will go this way.

1594
01:05:28,400 --> 01:05:29,600
And floor will go this way.

1595
01:05:29,900 --> 01:05:31,400
And that's what we actually want.

1596
01:05:31,400 --> 01:05:35,900
So what I really wanted instead of truncation is actually flooring if

1597
01:05:35,900 --> 01:05:36,700
that makes sense.

1598
01:05:37,200 --> 01:05:40,000
And so for most of the places that we use truncate.

1599
01:05:40,000 --> 01:05:43,600
I actually want to use floor if that makes sense, right?

1600
01:05:44,000 --> 01:05:44,500
I don't know.

1601
01:05:44,500 --> 01:05:46,600
I hopefully, hopefully, that was pretty clear.

1602
01:05:47,100 --> 01:05:48,400
Why that's actually the case.

1603
01:05:49,300 --> 01:05:53,600
So if I look at this, when we're doing these, I really want floor in

1604
01:05:53,600 --> 01:05:57,500
these two things, not truncate because truncate has a particular

1605
01:05:57,500 --> 01:05:59,700
meaning that in see that we don't actually want to have

1606
01:06:00,500 --> 01:06:04,800
So, if I do floor here, I mean, obviously I can do this a little bit

1607
01:06:04,800 --> 01:06:06,200
uglier myself.

1608
01:06:06,500 --> 01:06:11,800
I could say, all right, you know, doing this or, you know, I could do

1609
01:06:11,800 --> 01:06:12,800
something ridiculous.

1610
01:06:12,800 --> 01:06:14,100
That would work for our purposes.

1611
01:06:14,100 --> 01:06:18,000
For example, which would be something, you know, like that, right

1612
01:06:18,000 --> 01:06:20,600
where I basically just force the value for the ranges that we care

1613
01:06:20,600 --> 01:06:21,700
about to be positive.

1614
01:06:21,700 --> 01:06:22,300
Right?

1615
01:06:22,800 --> 01:06:27,500
But usually the processor has a way of us being able to do this

1616
01:06:27,500 --> 01:06:30,000
directly and you can

1617
01:06:30,300 --> 01:06:31,500
Floor F.

1618
01:06:31,500 --> 01:06:34,000
Usually although I don't actually know I think we would have to

1619
01:06:34,000 --> 01:06:37,500
include math.h for that.

1620
01:06:38,100 --> 01:06:41,000
So I don't actually know if we want to do it that way, but I'm just

1621
01:06:41,000 --> 01:06:44,800
going to I'm just going to show you what the what the the difference

1622
01:06:44,800 --> 01:06:45,800
here ends up being.

1623
01:06:46,200 --> 01:06:48,100
So, where's my deleted?

1624
01:06:48,100 --> 01:06:49,900
My test case I was not very smart.

1625
01:06:51,000 --> 01:06:55,200
But anyway, if we actually do that that in theory, when we run this

1626
01:06:55,200 --> 01:06:58,500
particular thing, we will no longer have that problem of having the

1627
01:06:58,500 --> 01:07:00,100
negative value, which will cert.

1628
01:07:00,300 --> 01:07:03,200
So if I walk off the edge here and then walk back on, you can see that

1629
01:07:03,200 --> 01:07:05,900
we're back to working properly there, right?

1630
01:07:06,200 --> 01:07:07,400
So that's all good.

1631
01:07:07,700 --> 01:07:14,800
No worries there, but that is not a particularly useful thing to do

1632
01:07:14,900 --> 01:07:16,800
because we don't really want to use math that H.

1633
01:07:16,800 --> 01:07:21,100
So maybe what we'll do the first thing on, Monday is start to talk

1634
01:07:21,100 --> 01:07:22,800
about how to implement these math functions.

1635
01:07:27,300 --> 01:07:28,900
Right, so, we don't want to leave that in there.

1636
01:07:29,300 --> 01:07:31,600
So let's go ahead and say that that's going to be a priority for us

1637
01:07:31,600 --> 01:07:31,700
to.

1638
01:07:31,700 --> 01:07:34,800
So we can start talking about how to implement these sorts of things

1639
01:07:34,800 --> 01:07:35,500
directly.

1640
01:07:36,000 --> 01:07:38,800
And then the other thing I want to do real quickly because we're ten

1641
01:07:38,800 --> 01:07:39,500
minutes over here.

1642
01:07:39,500 --> 01:07:41,600
Well, I guess we started a little late but we're, you know, we're a

1643
01:07:41,600 --> 01:07:42,700
good five minutes over.

1644
01:07:43,200 --> 01:07:47,000
I also want to take a look at the thing that I was trying to look at

1645
01:07:47,000 --> 01:07:51,000
originally, which was our crashing case, which we had, but I didn't

1646
01:07:51,000 --> 01:07:51,900
get a chance to look at that.

1647
01:07:51,900 --> 01:07:54,100
So when we walked off the side of the screen here, we were supposed to

1648
01:07:54,100 --> 01:07:56,100
crash, we didn't

1649
01:07:56,400 --> 01:08:00,000
So I wonder if that was maybe the same bug that could be, but it would

1650
01:08:00,000 --> 01:08:02,100
have been nice to have that crash Repro.

1651
01:08:02,700 --> 01:08:03,900
That's a little unfortunate.

1652
01:08:04,100 --> 01:08:05,000
But anyway, our dude.

1653
01:08:05,000 --> 01:08:06,000
Now is super happy.

1654
01:08:06,000 --> 01:08:07,000
Weird guy.

1655
01:08:07,000 --> 01:08:08,300
He's walking around.

1656
01:08:08,400 --> 01:08:09,800
Look at how happy he is.

1657
01:08:10,000 --> 01:08:13,300
I don't know if you realize how happy is because he's yellow, so he

1658
01:08:13,300 --> 01:08:16,000
can't express himself to you in the same ways that he would, if he

1659
01:08:16,000 --> 01:08:20,200
were say a fully grown Sprite, but it looks to me like we have

1660
01:08:20,200 --> 01:08:21,600
successfully done what we wanted to do.

1661
01:08:21,600 --> 01:08:23,899
It's just we have a little bit of an issue which is that we need to be

1662
01:08:23,899 --> 01:08:26,200
able to implement our floor function ourselves and

1663
01:08:26,300 --> 01:08:30,100
So that is what we'll have to do next week, but ladies and gentlemen,

1664
01:08:30,800 --> 01:08:31,899
there's really no stopping us.

1665
01:08:31,899 --> 01:08:32,500
Now.

1666
01:08:32,500 --> 01:08:35,899
I feel like at some level you have to admit that were kind of getting

1667
01:08:35,899 --> 01:08:37,000
Unstoppable here.

1668
01:08:37,100 --> 01:08:40,800
We actually have a dude who can walk around through a tile map and,

1669
01:08:40,800 --> 01:08:45,100
you know, how far could it really be to the game 30 hours in and

1670
01:08:45,100 --> 01:08:46,899
there's already a dude walking around.

1671
01:08:47,100 --> 01:08:47,500
I don't know.

1672
01:08:47,500 --> 01:08:49,100
Slap a couple of bitmaps on here.

1673
01:08:49,399 --> 01:08:53,100
I think this could be on Steam Greenlight any day now.

1674
01:08:53,300 --> 01:08:54,100
Any day now.

1675
01:08:55,300 --> 01:08:56,200
Just got to have some kind.

1676
01:08:56,300 --> 01:08:57,600
Of a catchy name for it.

1677
01:08:57,800 --> 01:08:59,200
I don't know what we should call it.

1678
01:09:00,300 --> 01:09:05,100
And we can also make references to some some games and say, we'll get

1679
01:09:05,100 --> 01:09:06,399
mostly positive reviews.

1680
01:09:06,399 --> 01:09:06,899
I think.

1681
01:09:07,200 --> 01:09:07,800
All right.

1682
01:09:08,200 --> 01:09:10,800
Well, we have our work cut out for us because we got to deal with

1683
01:09:10,800 --> 01:09:11,200
this.

1684
01:09:11,399 --> 01:09:13,200
I don't like including math.h here.

1685
01:09:14,100 --> 01:09:16,800
So next week is going to be a pretty serious week.

1686
01:09:16,800 --> 01:09:21,000
I think we got a lot of things that we want to do, which I'm going to

1687
01:09:21,000 --> 01:09:27,300
stick another to do in here, which is convert to, or I should say.

1688
01:09:29,300 --> 01:09:31,600
Is this ever necessary?

1689
01:09:31,600 --> 01:09:34,000
Do we really need these propositions ever again?

1690
01:09:34,500 --> 01:09:42,000
Similarly, down in here, player, State should be canonical position

1691
01:09:42,000 --> 01:09:42,700
now.

1692
01:09:42,800 --> 01:09:44,200
Oops, going under my head there.

1693
01:09:44,300 --> 01:09:44,500
Listen.

1694
01:09:44,500 --> 01:09:48,800
Now, basically, hopefully you could see from the work that we did

1695
01:09:48,800 --> 01:09:49,500
today.

1696
01:09:49,700 --> 01:09:52,100
It's starting to get to the point where we really should start

1697
01:09:52,100 --> 01:09:56,000
thinking about coordinate systems because now we actually have an idea

1698
01:09:56,000 --> 01:09:57,300
of what our coordinate system is.

1699
01:09:57,300 --> 01:09:58,700
We've got a tile Map X and Y.

1700
01:09:58,900 --> 01:10:01,600
Got a tile X and Y and we've got a floating-point offside inside

1701
01:10:01,600 --> 01:10:02,000
there.

1702
01:10:02,200 --> 01:10:05,400
This is kind of an interesting thing that gives us all the information

1703
01:10:05,400 --> 01:10:07,000
we needed to actually make things work.

1704
01:10:07,400 --> 01:10:08,700
Is this a good coordinate system?

1705
01:10:08,700 --> 01:10:11,200
What our coordinate systems mean in general, that sort of stuff.

1706
01:10:11,300 --> 01:10:12,800
Maybe that's what we need to start working on.

1707
01:10:12,800 --> 01:10:14,800
Next week is sort of start to clean these things up.

1708
01:10:14,800 --> 01:10:16,400
We also haven't talked about vectors yet.

1709
01:10:16,400 --> 01:10:19,100
Maybe we should start representing these X and y's as bundles because

1710
01:10:19,100 --> 01:10:20,000
we're always XY.

1711
01:10:20,000 --> 01:10:21,200
XY XY.

1712
01:10:21,200 --> 01:10:22,600
Should we start to think about that?

1713
01:10:22,700 --> 01:10:24,700
We've got a lot of stuff thing about next week and we're really

1714
01:10:24,700 --> 01:10:25,900
starting to come together here.

1715
01:10:26,300 --> 01:10:28,700
So I think that's that's very promising, but we have a lot of

1716
01:10:28,800 --> 01:10:29,300
Work to do.

1717
01:10:29,300 --> 01:10:31,700
And, of course, we have to implement a floor function.

1718
01:10:31,700 --> 01:10:33,000
So so

1719
01:10:33,700 --> 01:10:35,700
Good shape, ladies and gentlemen.

1720
01:10:35,700 --> 01:10:36,800
This was a good week.

1721
01:10:37,100 --> 01:10:38,900
I'm feeling positive about this week.

1722
01:10:38,900 --> 01:10:42,900
But before I feel any more positive about this week, I think we need

1723
01:10:42,900 --> 01:10:45,500
to go to the Q and A.

1724
01:10:45,500 --> 01:10:52,000
So I'm going to start the Q&A now, please put Q: before your questions

1725
01:10:52,000 --> 01:10:53,300
and keep them to code.

1726
01:10:53,300 --> 01:10:56,000
We have done today or in a previous day.

1727
01:10:56,000 --> 01:11:00,800
Save questions about what we're going to do in the future or how to

1728
01:11:00,800 --> 01:11:03,400
get into the game industry, all that sort of stuff for of a

1729
01:11:03,800 --> 01:11:05,600
Scream, if you want to ask those questions, you can ask those

1730
01:11:05,600 --> 01:11:06,400
questions, but just not.

1731
01:11:06,400 --> 01:11:11,600
Now you have to come back to a future handmade hero, come before the

1732
01:11:11,600 --> 01:11:13,600
stream begins and ask those questions.

1733
01:11:13,600 --> 01:11:16,000
Basically I start the stream, when I whatever the time is.

1734
01:11:16,000 --> 01:11:17,900
It's announced the stream, the stream starts at 10 a.m.

1735
01:11:18,400 --> 01:11:20,900
Or whatever, come 15 minutes before that.

1736
01:11:20,900 --> 01:11:21,800
I'm usually on the stream.

1737
01:11:21,800 --> 01:11:23,900
That is a good time to ask those questions today.

1738
01:11:23,900 --> 01:11:26,600
We answered a bunch of very important questions about Japanese food,

1739
01:11:26,600 --> 01:11:31,700
for example, and we could do similar for your questions tomorrow.

1740
01:11:39,200 --> 01:11:42,300
Okay, running out.

1741
01:11:47,200 --> 01:11:48,500
Running on Empty, our people.

1742
01:11:49,800 --> 01:11:51,600
All right, let's put that down there.

1743
01:11:53,800 --> 01:11:55,200
Can you talk about the inline keyword?

1744
01:11:55,200 --> 01:11:58,400
Do you apply any strategies to make sure the compiler doesn't ignore

1745
01:11:58,400 --> 01:11:59,100
their Quest?

1746
01:12:00,000 --> 01:12:05,400
So not really, I mean, typically we're not really at the stage where

1747
01:12:05,400 --> 01:12:06,800
we're doing any kind of performance work.

1748
01:12:06,800 --> 01:12:11,000
So when I put in line on these things, honestly that in line is more

1749
01:12:11,000 --> 01:12:15,800
for me than it is for the compiler at this point, when I'm putting in

1750
01:12:15,800 --> 01:12:16,700
line in these things.

1751
01:12:16,700 --> 01:12:22,200
That's me telling my future self that probably these things might be

1752
01:12:22,200 --> 01:12:26,400
in lines, but it really has nothing to do with the performance.

1753
01:12:26,400 --> 01:12:29,200
It may be that this function is not really shouldn't be inlined.

1754
01:12:29,200 --> 01:12:29,800
It should be out.

1755
01:12:30,000 --> 01:12:30,600
Out of line.

1756
01:12:30,900 --> 01:12:36,700
So it's I'm not really at all trying to suggest that these are

1757
01:12:36,700 --> 01:12:39,700
functions that should or should not be inlined when we actually go to

1758
01:12:39,700 --> 01:12:40,800
do Performance Tuning.

1759
01:12:41,100 --> 01:12:46,500
Those are actually me saying, hey Casey, this might be something that

1760
01:12:46,500 --> 01:12:49,100
might need to be in line when we when we're way down the road.

1761
01:12:49,100 --> 01:12:51,100
It's just a habit of me, marking it.

1762
01:12:52,300 --> 01:12:55,900
So yeah, so at this point, no, there's no in line is really just a

1763
01:12:55,900 --> 01:12:56,600
marker for me.

1764
01:12:56,600 --> 01:12:58,800
It has nothing to do with the performance when we get to Performance

1765
01:12:58,800 --> 01:12:59,900
doing, we'll talk more about that.

1766
01:13:00,700 --> 01:13:03,600
And looking at inline function, so so don't, don't worry too much

1767
01:13:03,600 --> 01:13:05,600
about that at this point in the game.

1768
01:13:15,400 --> 01:13:15,900
Let's see.

1769
01:13:15,900 --> 01:13:17,800
Are we using C or C++.

1770
01:13:18,100 --> 01:13:21,400
I mean, like I said, please keep questions that are generally pretty

1771
01:13:21,400 --> 01:13:23,500
soon, but that is technically a question about code that we have done

1772
01:13:23,500 --> 01:13:24,400
today or other days.

1773
01:13:24,600 --> 01:13:30,400
We are using C++, but I typically say that we're programming in c so

1774
01:13:30,400 --> 01:13:31,800
that people don't get too confused.

1775
01:13:31,800 --> 01:13:33,600
I guess I should be more explicit because they get confused.

1776
01:13:33,600 --> 01:13:36,900
Anyway, we are basically not using any C++ features.

1777
01:13:37,100 --> 01:13:41,100
There's one or two features in C++ that we use, operator overloading

1778
01:13:41,100 --> 01:13:42,800
and function overloading are really the two things.

1779
01:13:42,800 --> 01:13:44,300
So we are technically program.

1780
01:13:44,400 --> 01:13:50,300
C++, but we won't really be using 90% of the new features that are in

1781
01:13:50,300 --> 01:13:51,700
C++ that aren't in C.

1782
01:13:51,700 --> 01:13:56,300
So, I feel I do, I try not to say that we are.

1783
01:13:57,000 --> 01:14:01,300
I try not to say that we're using C++ too often, because really anyone

1784
01:14:01,300 --> 01:14:04,900
who's a serious C++ programmer would not call the things that we're

1785
01:14:04,900 --> 01:14:05,800
doing a C++.

1786
01:14:05,800 --> 01:14:07,500
We're not making inheritance hierarchies.

1787
01:14:07,500 --> 01:14:09,100
We're not making a bunch of templates.

1788
01:14:09,500 --> 01:14:12,600
So we're not using a bunch of the things that you typically see in C++

1789
01:14:12,600 --> 01:14:13,000
code.

1790
01:14:13,200 --> 01:14:14,200
So, this is mostly

1791
01:14:14,400 --> 01:14:18,900
C code, and you could almost compile it in C C, 99 or something, but

1792
01:14:18,900 --> 01:14:22,800
there's a couple features, we're using that aren't supported in c99.

1793
01:14:22,800 --> 01:14:26,000
So technically, it's C++, but it's only barely.

1794
01:14:26,200 --> 01:14:31,600
And at the end of the show, at the end of the entire game, when it's

1795
01:14:31,600 --> 01:14:32,100
all done.

1796
01:14:32,100 --> 01:14:35,400
If we wanted to Port it from C++ to see, it would be pretty trivial.

1797
01:14:35,400 --> 01:14:37,900
Basically, it would just be us going in and undoing our operator

1798
01:14:37,900 --> 01:14:38,300
overloading.

1799
01:14:38,300 --> 01:14:41,000
That's it and function are willing, that'd be it.

1800
01:14:41,000 --> 01:14:44,300
So because we're really not going to use almost anything from C++.

1801
01:14:48,700 --> 01:14:50,500
How did we start the code for the game?

1802
01:14:50,500 --> 01:14:51,300
It's all there.

1803
01:14:51,300 --> 01:14:56,400
So if you go to, if you want to go to handmade here at or you can go

1804
01:14:56,400 --> 01:14:59,800
to the video archive and basically 100% of the coding.

1805
01:15:00,000 --> 01:15:00,600
Been archived.

1806
01:15:00,600 --> 01:15:01,100
So anything.

1807
01:15:01,100 --> 01:15:01,600
You want to see.

1808
01:15:01,600 --> 01:15:02,300
You can get

1809
01:15:06,800 --> 01:15:08,100
Let's see.

1810
01:15:09,400 --> 01:15:11,200
What's so bad about including math.h.

1811
01:15:11,500 --> 01:15:14,300
Nothing is bad about including math.h.

1812
01:15:14,400 --> 01:15:17,400
So sorry, don't don't get and get the wrong idea.

1813
01:15:17,400 --> 01:15:22,300
You are welcome to include math.h., No problem there but I don't want

1814
01:15:22,300 --> 01:15:25,900
to use any of the C runtime library that we don't have to use.

1815
01:15:26,200 --> 01:15:30,100
So I'd like to go ahead and talk a little bit about how to get the

1816
01:15:30,100 --> 01:15:32,700
processor to do the floor function directly.

1817
01:15:34,400 --> 01:15:37,200
By telling the compiler to use intrinsics here or something similar.

1818
01:15:37,300 --> 01:15:41,400
So I want to go ahead and just explore that topic a little bit right

1819
01:15:41,400 --> 01:15:44,400
off the bat so that we don't keep dropping math.h things around.

1820
01:15:44,400 --> 01:15:47,700
So that's why I don't want to that's why this is a temporary thing and

1821
01:15:47,700 --> 01:15:49,500
I want to get rid of it.

1822
01:15:54,800 --> 01:16:00,300
Why not subtract 1 if input is under 0 instead of using floor.

1823
01:16:00,700 --> 01:16:05,300
Well, so, you know, there's other we could definitely do a bunch of

1824
01:16:05,300 --> 01:16:07,900
Tricks here to avoid doing the truncation, right?

1825
01:16:07,900 --> 01:16:09,400
We don't we don't have to do it.

1826
01:16:09,400 --> 01:16:10,200
The way that we're doing.

1827
01:16:10,200 --> 01:16:13,100
Certainly we could we could use we could check first to see if they're

1828
01:16:13,100 --> 01:16:13,600
in bands.

1829
01:16:13,800 --> 01:16:16,800
But what I'd like to do eventually is make this get canonical

1830
01:16:16,800 --> 01:16:21,100
position, call actually work just right with math with math so that

1831
01:16:21,100 --> 01:16:23,100
you can actually have very large.

1832
01:16:23,900 --> 01:16:27,900
It offsets or things like this and not have to do if so, I'm thinking

1833
01:16:27,900 --> 01:16:30,700
we can probably get it to the point where it's where it might even

1834
01:16:30,700 --> 01:16:32,500
just be completely branchless.

1835
01:16:32,600 --> 01:16:32,900
Meaning.

1836
01:16:32,900 --> 01:16:34,200
There's no need to test anything.

1837
01:16:34,200 --> 01:16:37,900
It just kind of does the canonicalization directly and that may be

1838
01:16:37,900 --> 01:16:39,800
faster and more efficient depending on the circumstances.

1839
01:16:39,800 --> 01:16:40,500
So we'll see.

1840
01:16:40,900 --> 01:16:44,500
So the answer is you could do, you could do this, you could implement

1841
01:16:44,500 --> 01:16:47,600
this, in many different ways and which way you want it to implement.

1842
01:16:47,600 --> 01:16:50,200
It would entirely depend on the circumstances and the requirements for

1843
01:16:50,200 --> 01:16:50,600
it.

1844
01:16:51,000 --> 01:16:53,700
So don't take this as some kind of golden standard of how

1845
01:16:53,800 --> 01:16:54,700
you should do it.

1846
01:16:54,700 --> 01:16:57,600
I was just again, this is the exploratory part of things.

1847
01:16:57,800 --> 01:17:00,000
So right now we're kind of not focusing on.

1848
01:17:00,000 --> 01:17:01,400
What is the absolute right thing to do.

1849
01:17:01,400 --> 01:17:04,100
Always it's more about getting things working so we can look at them

1850
01:17:04,100 --> 01:17:05,300
and decide what we want.

1851
01:17:10,300 --> 01:17:11,000
A few days ago.

1852
01:17:11,000 --> 01:17:11,900
You said floating Point.

1853
01:17:11,900 --> 01:17:13,300
Math is the most CPU, efficient.

1854
01:17:13,300 --> 01:17:14,500
I thought integers are faster.

1855
01:17:14,500 --> 01:17:16,200
Even if the CPU as a floating Point Unit.

1856
01:17:16,400 --> 01:17:18,300
No, generally, that is not true.

1857
01:17:19,200 --> 01:17:22,800
So basically floating Point math is usually, the fastest thing you can

1858
01:17:22,800 --> 01:17:23,700
do currently.

1859
01:17:24,200 --> 01:17:27,800
And the reason for that is that doing the same operation in a fixed

1860
01:17:27,800 --> 01:17:32,700
Point, integer requires a bunch of operations to do, whereas usually

1861
01:17:32,700 --> 01:17:35,100
that same set of operations could be done in one floating Point

1862
01:17:35,100 --> 01:17:35,600
instruction.

1863
01:17:35,600 --> 01:17:38,100
And typically the processor is, as fast as floating Point instructions

1864
01:17:38,100 --> 01:17:38,800
now, is it is

1865
01:17:39,400 --> 01:17:40,300
Integer instructions.

1866
01:17:40,300 --> 01:17:47,100
So for example, if you would like to go look at the ogner fog tables

1867
01:17:47,100 --> 01:17:51,300
that we mentioned before, you can go ahead and do that.

1868
01:17:51,900 --> 01:17:56,000
If you go ahead and look through here, SSE intrinsic Stomp.

1869
01:17:56,500 --> 01:17:59,800
And again, this is kind of getting way ahead of where we are.

1870
01:18:00,100 --> 01:18:03,500
But just to answer the question, you will notice that, that if you

1871
01:18:03,500 --> 01:18:07,800
look at these tables and you look at the functions for doing

1872
01:18:08,400 --> 01:18:12,000
operations, on packed for integer, or packed for float, you'll notice

1873
01:18:12,000 --> 01:18:14,800
that the instructions typically take the same amount of time.

1874
01:18:15,000 --> 01:18:16,700
So there is no penalty.

1875
01:18:16,700 --> 01:18:20,000
For using floating point, floating-point tends to be as fast in terms

1876
01:18:20,000 --> 01:18:24,300
of Cycles taken, but you do less operations.

1877
01:18:24,300 --> 01:18:27,400
So, if you want to do a floating-point multiply its one operation, to

1878
01:18:27,400 --> 01:18:29,800
do, the multiply, if you want to do a fixed Point multiplier.

1879
01:18:30,000 --> 01:18:34,000
Usually at least two operations like multiplying a shift or something.

1880
01:18:34,800 --> 01:18:37,900
So in general floating point is almost always faster for everything,

1881
01:18:37,900 --> 01:18:40,900
we're going to do and so you really don't want to use integer unless

1882
01:18:40,900 --> 01:18:43,900
you need the properties of an integer.

1883
01:18:46,500 --> 01:18:49,200
Yeah, but can I say, let me push this pretty much always faster

1884
01:18:49,200 --> 01:18:49,600
nowadays.

1885
01:18:56,000 --> 01:18:59,700
Yes, and so whoever was asking about the video on demand for this

1886
01:18:59,700 --> 01:18:59,900
game.

1887
01:18:59,900 --> 01:19:00,700
The entire thing is there.

1888
01:19:00,700 --> 01:19:05,300
If you click on video archive every day, every every single piece of

1889
01:19:05,600 --> 01:19:10,200
every line of code has been described in detail and written on the

1890
01:19:10,200 --> 01:19:10,500
stream.

1891
01:19:10,500 --> 01:19:13,500
So literally, you can watch the entire game getting made when this is

1892
01:19:13,500 --> 01:19:14,100
over.

1893
01:19:15,300 --> 01:19:18,700
1000 hours into it or how, no two years from now.

1894
01:19:19,200 --> 01:19:21,000
Who only knows when we'll actually have a game.

1895
01:19:21,000 --> 01:19:24,700
And that we've decided is done, you will be able to go watch every

1896
01:19:24,700 --> 01:19:27,800
single line being typed in and me explaining why we typed it in so,

1897
01:19:27,900 --> 01:19:28,800
which I'm pretty happy about.

1898
01:19:28,800 --> 01:19:29,900
That's like what I wanted.

1899
01:19:29,900 --> 01:19:31,900
That's why the whole reason I'm doing this is to have that complete

1900
01:19:31,900 --> 01:19:32,500
document.

1901
01:19:32,500 --> 01:19:32,800
So,

1902
01:19:34,900 --> 01:19:36,500
Let's see.

1903
01:19:44,300 --> 01:19:46,600
You've mentioned before that you want to avoid forcing the color of a

1904
01:19:46,600 --> 01:19:48,200
function to pack our minutes into a struct.

1905
01:19:48,200 --> 01:19:50,600
I'm guessing that sometimes it makes things cleaner and sometimes it

1906
01:19:50,600 --> 01:19:51,000
does not.

1907
01:19:51,000 --> 01:19:53,600
But how do you decide what way to go in any particular case?

1908
01:19:54,300 --> 01:19:54,600
Yes.

1909
01:19:54,600 --> 01:19:56,500
So basically what I would say is,

1910
01:19:58,800 --> 01:20:02,300
There are there are two cases for packing things into a structure.

1911
01:20:02,500 --> 01:20:08,300
One is because both the caller and the thing being called 10, 20.

1912
01:20:08,300 --> 01:20:11,800
He's operate on everything together and that is the case that I'm

1913
01:20:11,800 --> 01:20:14,400
trying to get to here with our exploratory coding.

1914
01:20:14,900 --> 01:20:18,100
The other is when only the caller wants those things.

1915
01:20:19,000 --> 01:20:22,200
And in the former case, it is good in the latter case.

1916
01:20:22,200 --> 01:20:22,700
It is bad.

1917
01:20:22,700 --> 01:20:26,000
So let me give you a very explicit demonstration of that.

1918
01:20:28,400 --> 01:20:32,000
So let's say we have something like this.

1919
01:20:37,400 --> 01:20:39,000
Actually, this is this is a better example.

1920
01:20:43,200 --> 01:20:45,300
And I'm going to change these room hints to floats.

1921
01:20:45,800 --> 01:20:47,800
Let's say, I have a draw, a line function.

1922
01:20:48,400 --> 01:20:48,900
Okay.

1923
01:20:49,900 --> 01:20:53,100
So, the draw line function is kind of the canonical example that I can

1924
01:20:53,100 --> 01:20:56,800
use to show you exactly what you do and don't want for structure

1925
01:20:56,800 --> 01:20:59,800
packing of our

1926
01:21:01,800 --> 01:21:05,000
If I'm going to call the draw function, let's say we are here in Maine

1927
01:21:05,000 --> 01:21:07,100
or something like this, and I'm going to call the draw a line

1928
01:21:07,100 --> 01:21:09,200
function, and I'm going to pass it.

1929
01:21:09,200 --> 01:21:16,400
Some parameters 3.0 3.5, 10.000 10.5, something like that.

1930
01:21:16,400 --> 01:21:17,500
I don't know what we're passing here.

1931
01:21:17,500 --> 01:21:21,400
It's apparently making these up if I'm going to pass that in, let's

1932
01:21:21,400 --> 01:21:23,900
take a look at a good structure, structure structure?

1933
01:21:23,900 --> 01:21:28,000
Packing, sort of compression, and a bad one.

1934
01:21:28,400 --> 01:21:29,900
Okay, here's

1935
01:21:30,000 --> 01:21:30,500
A good one.

1936
01:21:30,600 --> 01:21:35,300
A good one would be to say that there is something called a point and

1937
01:21:35,300 --> 01:21:37,000
that point has an X and Y.

1938
01:21:37,400 --> 01:21:37,800
Okay.

1939
01:21:39,700 --> 01:21:42,700
So that's going to look like this and I'm going to change the draw

1940
01:21:42,700 --> 01:21:47,100
line function to basically be a point p 0 and a point P1.

1941
01:21:47,500 --> 01:21:51,300
So now you just pass those two and essentially that all that does is

1942
01:21:51,300 --> 01:21:57,000
that's going to go ahead and say that whatever whatever it was is just

1943
01:21:57,000 --> 01:21:59,900
going to get unpacked and and we're still going to do the same.

1944
01:22:00,500 --> 01:22:00,900
Drock.

1945
01:22:00,900 --> 01:22:02,300
Also that right there.

1946
01:22:03,000 --> 01:22:07,400
This is a totally reasonable way to start compressing this API because

1947
01:22:07,400 --> 01:22:12,400
it is very likely, Almost 100% likely that whatever is going on in

1948
01:22:12,400 --> 01:22:13,000
Maine.

1949
01:22:13,200 --> 01:22:17,400
It's actually thinking about those locations on the screen as X and

1950
01:22:17,400 --> 01:22:17,900
y's.

1951
01:22:17,900 --> 01:22:20,700
That is the, actually the common case, right?

1952
01:22:20,900 --> 01:22:24,400
So we basically would typically have something, you know, where we'd

1953
01:22:24,400 --> 01:22:27,100
have something.

1954
01:22:27,100 --> 01:22:30,000
That looks a lot like this, and we're actually trying to

1955
01:22:30,100 --> 01:22:31,500
Draw lines between them.

1956
01:22:31,900 --> 01:22:36,300
This is actually what you probably the caller will probably be happy

1957
01:22:36,400 --> 01:22:38,800
to have those things bundled because that is probably what they

1958
01:22:38,800 --> 01:22:40,600
actually have already.

1959
01:22:40,900 --> 01:22:41,400
Okay.

1960
01:22:41,700 --> 01:22:46,100
And so when you are doing your Explorations here, that's a good thing

1961
01:22:46,100 --> 01:22:49,300
to explore because it will compress the code on both sides.

1962
01:22:49,500 --> 01:22:55,000
Main probably is doing stuff like having a list of these p-values,

1963
01:22:55,000 --> 01:22:55,500
right?

1964
01:22:55,800 --> 01:22:59,200
And they're kind of getting initialized here and maybe it's got a for

1965
01:22:59,200 --> 01:22:59,900
Loop, right?

1966
01:23:00,000 --> 01:23:03,900
Right over the index has to pee that sort of stuff.

1967
01:23:04,100 --> 01:23:06,000
Right blah blah blah blah blah.

1968
01:23:06,000 --> 01:23:10,800
Just typing in random code here, you know, and it's trying to do

1969
01:23:10,800 --> 01:23:14,100
something like draw a line Loop or whatever, right?

1970
01:23:14,100 --> 01:23:18,800
So it's trying to draw and it wants to do this sort of stuff and there

1971
01:23:18,800 --> 01:23:19,700
you go, right?

1972
01:23:20,400 --> 01:23:24,100
So this actually makes things much more efficient because previously,

1973
01:23:24,100 --> 01:23:29,100
the code on the other side will also would have looked kind of really

1974
01:23:29,100 --> 01:23:29,900
annoying.

1975
01:23:30,700 --> 01:23:34,400
For for the caller as well, right?

1976
01:23:34,600 --> 01:23:41,300
So the caller has code in there that looks like this, right?

1977
01:23:41,400 --> 01:23:45,800
And now they have code that looks like this and that's better for

1978
01:23:45,800 --> 01:23:48,100
them, better for them better for you.

1979
01:23:48,200 --> 01:23:49,600
That is a good compression.

1980
01:23:49,800 --> 01:23:50,100
Right?

1981
01:23:50,100 --> 01:23:52,600
And that is what I'm driving towards in the code that we were working

1982
01:23:52,600 --> 01:23:53,000
today.

1983
01:23:53,100 --> 01:23:57,700
Better for them, better for me a bad example of how to do the

1984
01:23:57,700 --> 01:23:59,800
compression would have been to do.

1985
01:24:00,000 --> 01:24:03,900
Like this and you do see stuff like this all the time, but this was be

1986
01:24:03,900 --> 01:24:04,900
a bad idea.

1987
01:24:05,200 --> 01:24:06,300
I could have done this, right?

1988
01:24:06,300 --> 01:24:09,400
And again, it might look like, oh no one would ever be that dumb.

1989
01:24:09,400 --> 01:24:10,600
They are that dumb sometimes.

1990
01:24:10,600 --> 01:24:14,400
But a lot of times I'm using this as the most simple example, you can

1991
01:24:14,400 --> 01:24:18,200
imagine a more complicated cases where it's not so obvious.

1992
01:24:18,200 --> 01:24:20,500
As a line people often will still make the bad decision.

1993
01:24:20,500 --> 01:24:22,700
So I'm just trying to use this as sort of an illustration.

1994
01:24:23,200 --> 01:24:28,500
So basically, if I said this right, well, I'll leave in fact.

1995
01:24:28,500 --> 01:24:29,800
Oh, I should leave the

1996
01:24:30,000 --> 01:24:30,400
that's their.

1997
01:24:30,400 --> 01:24:31,800
Let me leave them all there so you can see them.

1998
01:24:35,000 --> 01:24:37,600
This is an example of the wrong thing to do.

1999
01:24:38,000 --> 01:24:38,700
Now.

2000
01:24:38,700 --> 01:24:43,600
It's almost in like impossible to conceive of a case where it would be

2001
01:24:43,600 --> 01:24:46,900
better for anyone other than than the person implementing the draw

2002
01:24:46,900 --> 01:24:48,100
line function, right?

2003
01:24:48,500 --> 01:24:53,700
If this is what you do instead, because now what you've got is pretty

2004
01:24:53,700 --> 01:24:56,900
much everyone who draws a line probably got the points from some

2005
01:24:56,900 --> 01:24:58,600
separate place, right?

2006
01:24:58,700 --> 01:25:01,300
It's very unlikely that they actually defined things.

2007
01:25:01,300 --> 01:25:03,300
And in fact, in this case, it would not work at all.

2008
01:25:03,400 --> 01:25:03,500
Right?

2009
01:25:03,500 --> 01:25:04,400
Because you have this

2010
01:25:04,600 --> 01:25:06,200
Two points are trying to draw in a loop.

2011
01:25:06,300 --> 01:25:09,700
So what they basically have to do is you're forcing them to constantly

2012
01:25:09,700 --> 01:25:11,600
do that first.

2013
01:25:11,700 --> 01:25:16,900
Then assign all the crap to it that they actually need, right?

2014
01:25:16,900 --> 01:25:21,400
And so they basically you're forcing them into something even worse

2015
01:25:21,600 --> 01:25:24,800
than the worst case they had before, where they were calling it in,

2016
01:25:24,800 --> 01:25:27,400
passing the things individually, right?

2017
01:25:27,800 --> 01:25:28,700
Does that make sense?

2018
01:25:28,900 --> 01:25:34,400
So, basically you've turned this call into this.

2019
01:25:34,500 --> 01:25:38,100
Which is a disaster and your only hope of recovering from that

2020
01:25:38,100 --> 01:25:42,300
disaster is to basically make some kind of constructing thing here

2021
01:25:43,000 --> 01:25:43,800
like this.

2022
01:25:44,000 --> 01:25:47,500
Which which saves you from being awful.

2023
01:25:47,500 --> 01:25:48,000
Right?

2024
01:25:48,500 --> 01:25:51,500
And the best case is the thing that saves you from being awful, looks

2025
01:25:51,500 --> 01:25:55,700
like the other API that we already have, right, you know, you've got

2026
01:25:55,700 --> 01:25:56,800
something like this.

2027
01:25:59,400 --> 01:25:59,900
Right.

2028
01:26:02,100 --> 01:26:03,900
Hopefully, hopefully all this is pretty obvious.

2029
01:26:03,900 --> 01:26:04,700
Now that I'm saying it.

2030
01:26:04,700 --> 01:26:05,900
I don't know if it is or not.

2031
01:26:05,900 --> 01:26:09,200
A hopefully I'm hoping that it is but you can imagine us trying to

2032
01:26:09,200 --> 01:26:13,600
save trying to bail this API out by basically making something that

2033
01:26:13,600 --> 01:26:15,800
does take, the things that we want, right?

2034
01:26:15,800 --> 01:26:20,100
It does that does take the things in here, that we actually wanted it

2035
01:26:20,100 --> 01:26:23,200
to take like this, right?

2036
01:26:24,600 --> 01:26:28,600
And now all we've done is basically make it into the function that we

2037
01:26:28,600 --> 01:26:29,600
had before, right?

2038
01:26:29,600 --> 01:26:30,300
This was the function.

2039
01:26:30,300 --> 01:26:31,400
We actually had.

2040
01:26:33,500 --> 01:26:35,100
Originally, right?

2041
01:26:35,500 --> 01:26:40,500
And so that's a lot of times that's things that people do in C++ that

2042
01:26:40,500 --> 01:26:42,100
is just bad API design.

2043
01:26:42,300 --> 01:26:45,900
They'll oftentimes force you to end up doing this in a lot of

2044
01:26:45,900 --> 01:26:46,600
circumstances.

2045
01:26:46,600 --> 01:26:49,400
When really all you wanted to do was that and that's just it just

2046
01:26:49,400 --> 01:26:50,300
makes it hard to use.

2047
01:26:50,600 --> 01:26:54,500
So that is what I would say is the crucial thing to think about is

2048
01:26:55,300 --> 01:26:59,600
structure, packing of parameters, should make it easier for both sides

2049
01:26:59,600 --> 01:26:59,800
to do.

2050
01:27:00,000 --> 01:27:03,900
Job, if most of the time it's actually only making it easier for one

2051
01:27:03,900 --> 01:27:07,700
side and maybe it's making it more difficult for the other side than

2052
01:27:07,700 --> 01:27:11,500
that is a bad bad decision.

2053
01:27:11,600 --> 01:27:15,200
So, hopefully that hopefully, that clarifies that for you guys.

2054
01:27:20,100 --> 01:27:21,300
Let's see.

2055
01:27:28,600 --> 01:27:30,300
Why would we care about screen coordinates?

2056
01:27:30,300 --> 01:27:32,100
Isn't it just platform code?

2057
01:27:32,200 --> 01:27:37,800
And yes, that is a very good question and it is a very important thing

2058
01:27:37,800 --> 01:27:39,400
to deal with basically.

2059
01:27:39,400 --> 01:27:40,900
That's where I'm trying to get to.

2060
01:27:42,300 --> 01:27:46,600
I didn't want to just sort of, I didn't want to just plop down and go.

2061
01:27:46,600 --> 01:27:48,300
Well, I kind of already know how to write this.

2062
01:27:48,300 --> 01:27:49,300
So let me write it.

2063
01:27:49,400 --> 01:27:50,000
Right.

2064
01:27:50,900 --> 01:27:53,200
What I want to do is kind of show you how we get there.

2065
01:27:53,400 --> 01:27:55,700
So I wanted to start with screen coordinates because they're what you

2066
01:27:55,700 --> 01:27:56,600
draw in but

2067
01:27:56,800 --> 01:27:59,400
Actually, what we're going to get to buy, probably by the end of next

2068
01:27:59,400 --> 01:27:59,600
week.

2069
01:27:59,600 --> 01:28:02,200
Is everything operating and sort of abstract coordinate space.

2070
01:28:02,200 --> 01:28:04,500
That's about our game world, but we haven't quite gotten there yet,

2071
01:28:04,500 --> 01:28:05,900
but you can see, we're getting closer.

2072
01:28:06,200 --> 01:28:08,800
We're already at the point where now we're sort of not talking about

2073
01:28:08,800 --> 01:28:10,500
screen coordinates in a bunch of the code.

2074
01:28:10,500 --> 01:28:14,100
We're talking about Tyrell, of course, but these are still in pixels,

2075
01:28:14,200 --> 01:28:14,700
right?

2076
01:28:20,300 --> 01:28:20,800
Right.

2077
01:28:20,900 --> 01:28:24,000
These are still in pixels there, pixel offsets from the tile.

2078
01:28:24,500 --> 01:28:27,900
And that means that if we were to change the size of the tile, in

2079
01:28:27,900 --> 01:28:31,300
terms of rendering, we actually also have to change the gameplay code

2080
01:28:31,300 --> 01:28:32,600
and that's not very good.

2081
01:28:33,100 --> 01:28:35,500
And so, like I said, we will be getting to.

2082
01:28:35,500 --> 01:28:39,900
We're sort of, we're Levering our way up through the various stages.

2083
01:28:40,100 --> 01:28:43,600
Some of which you would just skip if you are an experienced game

2084
01:28:43,600 --> 01:28:45,700
program because, you know, but I don't want to skip those things.

2085
01:28:45,700 --> 01:28:49,800
I want to show you how we discover them, because a lot of times and

2086
01:28:49,800 --> 01:28:49,900
like,

2087
01:28:50,100 --> 01:28:52,400
Said I'm actually discovering new things too, about how I probably

2088
01:28:52,400 --> 01:28:55,900
want to do this because I never done a tile map game before I'm

2089
01:28:55,900 --> 01:28:58,200
actually discovering how I want structure it.

2090
01:28:58,500 --> 01:29:01,000
But yeah, a lot of times you'll be going in and you'll writing game

2091
01:29:01,000 --> 01:29:03,900
code in stuff that isn't in.

2092
01:29:04,100 --> 01:29:06,400
That isn't exactly the way that you've done things before.

2093
01:29:06,400 --> 01:29:09,300
And it's important to learn these attack skills and the strategies

2094
01:29:09,300 --> 01:29:12,900
that you use to discover how to write things properly because

2095
01:29:12,900 --> 01:29:15,200
otherwise, you'll only ever be able to write the things that I show

2096
01:29:15,200 --> 01:29:15,800
you how to write, right?

2097
01:29:15,800 --> 01:29:16,500
And that's no good.

2098
01:29:16,500 --> 01:29:18,600
I want you to be able to write anything you want after you done with

2099
01:29:18,600 --> 01:29:18,900
this.

2100
01:29:19,100 --> 01:29:19,900
And so what we're doing,

2101
01:29:20,000 --> 01:29:21,700
As we're slowly building towards that.

2102
01:29:27,500 --> 01:29:30,300
Are you going to make it so that the walls below the player block, the

2103
01:29:30,300 --> 01:29:30,800
view of the character?

2104
01:29:30,800 --> 01:29:32,900
The same way the character blocks, the view of the wall above the

2105
01:29:32,900 --> 01:29:35,300
player, possibly I guess.

2106
01:29:35,300 --> 01:29:38,600
So what I'm going to do is we're going to start loading bitmaps pretty

2107
01:29:38,600 --> 01:29:41,700
soon so we can start to see once we kind of have ourselves moving

2108
01:29:41,700 --> 01:29:44,300
around and and kind of working a little bit more cleaner.

2109
01:29:44,600 --> 01:29:46,400
What I'm going to do is I'm going to start we're going to load some

2110
01:29:46,400 --> 01:29:49,200
bitmaps in here and put them in to see what they look like.

2111
01:29:49,200 --> 01:29:52,800
And then we can sort of start to see how far behind stuff we want the

2112
01:29:52,800 --> 01:29:53,600
player to be.

2113
01:29:53,700 --> 01:29:56,200
What I want to do is make sure the player doesn't get like fully.

2114
01:29:56,400 --> 01:29:58,900
Skewered, like I wouldn't want to be that far because you can't see

2115
01:29:58,900 --> 01:29:59,900
for gameplay purposes.

2116
01:30:00,000 --> 01:30:03,600
But like that much, for example, should be fine.

2117
01:30:03,700 --> 01:30:07,800
So what we can sort of do is maybe start to think about that sort of

2118
01:30:07,800 --> 01:30:10,900
stuff once we have bitmaps in and we can see because that's going to

2119
01:30:10,900 --> 01:30:13,600
be a gameplay, decision and we want to make sure we make it correctly.

2120
01:30:18,200 --> 01:30:20,500
Can you explain that raw position in the other one and what they do?

2121
01:30:20,500 --> 01:30:22,500
Yeah, we can we can we can do a recap there.

2122
01:30:24,700 --> 01:30:29,200
So essentially what I what I found when I was writing the code and you

2123
01:30:29,200 --> 01:30:32,500
could watch, hopefully, if you watch all today's stream, you can see

2124
01:30:32,500 --> 01:30:34,000
how I got to each step.

2125
01:30:34,500 --> 01:30:35,200
Basically.

2126
01:30:35,200 --> 01:30:37,900
I found that in order to do a bunch of the computations that we wanted

2127
01:30:37,900 --> 01:30:38,500
to do.

2128
01:30:38,700 --> 01:30:41,200
We had to have sort of a three tiered structure.

2129
01:30:41,300 --> 01:30:46,500
We wanted to know what, tilemap we were on because we have a bunch of

2130
01:30:46,500 --> 01:30:47,000
Tau Maps.

2131
01:30:47,000 --> 01:30:49,800
Now, we've got four of them.

2132
01:30:49,900 --> 01:30:51,200
So we need to know which time a prawn.

2133
01:30:51,200 --> 01:30:54,400
So this is like, you know, Tom app, 0 0 or 0 1 or whatever.

2134
01:30:54,900 --> 01:30:59,300
And that corresponds to these tile maps, that we defined, right?

2135
01:31:00,500 --> 01:31:02,400
So we need to know which tile map are on.

2136
01:31:03,100 --> 01:31:05,700
We need to know which tile we're on in the tile map, right?

2137
01:31:05,700 --> 01:31:07,800
So we need to know which one of these were on, you know, are we over

2138
01:31:07,800 --> 01:31:08,500
here whatever?

2139
01:31:08,700 --> 01:31:11,300
And then, inside that tile, we need to know what our X and Y.

2140
01:31:11,300 --> 01:31:12,300
Offset, is in pixels, right?

2141
01:31:12,300 --> 01:31:14,800
Because the guy moves, he moves continuously doesn't move from tile to

2142
01:31:14,800 --> 01:31:16,400
tile like a turn-based game.

2143
01:31:16,600 --> 01:31:18,200
He moves continuously, right?

2144
01:31:18,800 --> 01:31:21,000
So that's the composition is raw position.

2145
01:31:21,000 --> 01:31:23,900
Is something that I think will go away, but temporarily all it is, is

2146
01:31:23,900 --> 01:31:24,300
just something.

2147
01:31:24,300 --> 01:31:24,600
We

2148
01:31:24,700 --> 01:31:27,400
Sin, that says we're on the tile map, we are.

2149
01:31:28,200 --> 01:31:29,500
So which tilemap Iran?

2150
01:31:29,600 --> 01:31:33,500
So this these are the same but then this is actually relative to the

2151
01:31:33,500 --> 01:31:34,600
tile map itself.

2152
01:31:35,600 --> 01:31:39,600
So that that is relative to this whole screen, right?

2153
01:31:39,600 --> 01:31:42,300
It's relative to like sort of the invisible corner of the time at the

2154
01:31:42,300 --> 01:31:44,100
can't see her because only half of towels visible.

2155
01:31:44,100 --> 01:31:45,600
So it's like it does relative to right here.

2156
01:31:46,700 --> 01:31:49,300
And that is basically what the outer code was using.

2157
01:31:49,300 --> 01:31:51,400
It was just using where it was relative, the time that it was

2158
01:31:51,400 --> 01:31:54,000
basically because we wrote it from just moving a rectangle around on

2159
01:31:54,000 --> 01:31:54,500
the screen.

2160
01:31:55,100 --> 01:31:57,800
And so what we're kind of seeing is we're sort of pushing away from

2161
01:31:57,800 --> 01:32:00,600
this and minimizing it down to the point where I think on the next

2162
01:32:00,600 --> 01:32:03,300
dream will just be able to do is canonical positions in here for the

2163
01:32:03,300 --> 01:32:03,800
player.

2164
01:32:03,900 --> 01:32:05,400
And we'll just get rid of rope additionals.

2165
01:32:05,400 --> 01:32:09,300
Go away entirely, but that's we haven't quite made that step yet.

2166
01:32:16,900 --> 01:32:19,700
We are currently checking the players left and right for moving into a

2167
01:32:19,700 --> 01:32:22,300
non empty tile, wouldn't it be better to only check the side of the

2168
01:32:22,300 --> 01:32:24,300
player that it is moving to?

2169
01:32:25,400 --> 01:32:26,100
Yes.

2170
01:32:26,800 --> 01:32:28,000
That is well.

2171
01:32:28,000 --> 01:32:30,400
Okay, so it depends what you mean by better.

2172
01:32:31,700 --> 01:32:38,200
I would prefer it if you said more efficient, okay, because at the

2173
01:32:38,200 --> 01:32:40,500
moment with the way, our code is structured, it would be more

2174
01:32:40,500 --> 01:32:41,800
efficient to do so.

2175
01:32:42,100 --> 01:32:44,700
Meaning it set of checking this three times.

2176
01:32:45,300 --> 01:32:46,900
We could just check twice, right?

2177
01:32:46,900 --> 01:32:49,100
We check player pose and left or player pose and right.

2178
01:32:49,500 --> 01:32:53,000
But I don't think it would be better and that's why I didn't do it.

2179
01:32:53,200 --> 01:32:56,200
The reason that I don't think it would be better is because the it

2180
01:32:56,200 --> 01:32:58,000
doesn't change the behavior of the code at all.

2181
01:32:58,700 --> 01:32:59,800
right, it'll

2182
01:33:00,000 --> 01:33:01,200
Exactly the same thing.

2183
01:33:01,500 --> 01:33:03,000
It just doesn't call one function.

2184
01:33:03,000 --> 01:33:08,100
It doesn't need to call in certain cases and, you know, for and

2185
01:33:08,300 --> 01:33:10,400
obviously it would only call just it.

2186
01:33:10,400 --> 01:33:12,000
We could call none of these.

2187
01:33:12,000 --> 01:33:13,200
If the player isn't moving at all.

2188
01:33:13,200 --> 01:33:14,300
If D player X and D player.

2189
01:33:14,300 --> 01:33:15,500
Why were both 0?

2190
01:33:15,500 --> 01:33:16,500
We would have to kill any of them.

2191
01:33:17,600 --> 01:33:18,600
But it wouldn't be better.

2192
01:33:18,700 --> 01:33:21,700
And the reason that it wouldn't be better, is because right now we're

2193
01:33:21,700 --> 01:33:23,800
doing exploration code to figure out how our game should be

2194
01:33:23,800 --> 01:33:26,700
architected anything you do.

2195
01:33:26,800 --> 01:33:30,800
That's efficiency based that involves complicating the code, right?

2196
01:33:30,800 --> 01:33:33,300
Because now there's a bunch of ifs and more paths through here.

2197
01:33:34,000 --> 01:33:37,300
Anything you do that, complicates the code just introduce the

2198
01:33:37,300 --> 01:33:41,000
possibility of bugs without actually giving us any benefit because we

2199
01:33:41,000 --> 01:33:42,600
don't care how fast this code runs.

2200
01:33:42,800 --> 01:33:45,300
We're never going to ship any of this code to the, to the, to the

2201
01:33:45,300 --> 01:33:45,800
user.

2202
01:33:46,500 --> 01:33:47,200
So the only time

2203
01:33:47,400 --> 01:33:49,100
I'm you would want to do that stuff.

2204
01:33:49,300 --> 01:33:52,300
Is if we think that it's going to be structurally interesting and that

2205
01:33:52,300 --> 01:33:55,300
we need to know about it so that when we architect things we can

2206
01:33:55,300 --> 01:33:56,400
architect them around that.

2207
01:33:56,400 --> 01:33:58,900
Now I know that I'm never going to have an architecture concern with

2208
01:33:58,900 --> 01:33:59,200
that.

2209
01:33:59,200 --> 01:34:01,600
I can always stick and if in there and it's not going to be an issue,

2210
01:34:01,900 --> 01:34:04,000
so I actually don't think it would be better to do it.

2211
01:34:04,000 --> 01:34:05,400
I just think of you more efficient.

2212
01:34:05,700 --> 01:34:07,500
And right now we don't care about efficiency.

2213
01:34:07,900 --> 01:34:10,800
We only care about efficiency insofar as we think it will affect our

2214
01:34:10,800 --> 01:34:11,500
architecture.

2215
01:34:12,100 --> 01:34:14,700
And so if we thought that was going to be an architecture concern,

2216
01:34:14,800 --> 01:34:17,200
then we might want to explore it but even so we probably

2217
01:34:17,300 --> 01:34:18,200
We wouldn't want explore it.

2218
01:34:18,200 --> 01:34:20,700
Now, exploring the efficiency of the architecture is probably

2219
01:34:20,700 --> 01:34:21,300
something we should do.

2220
01:34:21,300 --> 01:34:24,500
Once we know that the architecture is at the point where it can

2221
01:34:24,500 --> 01:34:28,000
express the game and then we can start thinking about how to express

2222
01:34:28,000 --> 01:34:31,500
the game efficiently, but it's probably very premature.

2223
01:34:31,500 --> 01:34:33,000
Now to be thinking about efficiency.

2224
01:34:40,300 --> 01:34:42,800
Why not have a single set of coordinates for the player that map's the

2225
01:34:42,800 --> 01:34:44,000
player to a world position.

2226
01:34:44,000 --> 01:34:47,700
You could identify the correct time app easily and the correct tile in

2227
01:34:47,700 --> 01:34:51,100
the tile map and you won't have to deal with two sets of coordinates.

2228
01:34:54,000 --> 01:34:58,500
So I'm not sure exactly what you mean by that, but I can tell you

2229
01:34:58,500 --> 01:35:01,800
actually why I don't want to do one of the things that you might be

2230
01:35:01,800 --> 01:35:02,400
referring to.

2231
01:35:03,200 --> 01:35:06,700
So one thing you might ask is why not just have an X and A Y just a

2232
01:35:06,700 --> 01:35:08,800
floating Point X and Y and that's everything we need.

2233
01:35:09,300 --> 01:35:11,600
The reason for that is for float is because of floating-point

2234
01:35:11,600 --> 01:35:12,900
precision, so

2235
01:35:14,000 --> 01:35:15,300
What do I, what do I?

2236
01:35:15,700 --> 01:35:18,300
This is jumping the gun a little bit but just for the sake of

2237
01:35:18,300 --> 01:35:22,500
answering the question, I'll do a cursory explanation of it now and we

2238
01:35:22,500 --> 01:35:24,100
can talk a little bit more about it later.

2239
01:35:24,400 --> 01:35:26,600
All right, what did I tell you about floating point when we talked

2240
01:35:26,600 --> 01:35:29,000
about floating Point briefly earlier, on in the Stream.

2241
01:35:29,500 --> 01:35:33,400
I said that it's got a bunch of stuff in terms of exponent, right?

2242
01:35:33,400 --> 01:35:36,600
It's got an exponent and a sign bit, right?

2243
01:35:36,600 --> 01:35:38,200
It's got a up in the top of it.

2244
01:35:38,200 --> 01:35:38,800
Right?

2245
01:35:39,200 --> 01:35:41,900
But then it basically has 24 bits of precision.

2246
01:35:42,500 --> 01:35:43,600
Okay, it's got

2247
01:35:43,800 --> 01:35:50,500
24 bits to represent the number now, what do we know about 24 bits of

2248
01:35:50,500 --> 01:35:51,100
precision?

2249
01:35:52,600 --> 01:35:53,000
Right.

2250
01:35:53,000 --> 01:35:58,100
Well, one thing I know is that colors, right?

2251
01:35:58,100 --> 01:35:59,800
I'm just going through the whole thing.

2252
01:36:00,000 --> 01:36:05,500
Your of my how I think about these things colors on the display are

2253
01:36:05,500 --> 01:36:08,300
8-bit at least, right?

2254
01:36:08,700 --> 01:36:13,200
We are always going to be targeting at least an 8-bit display in terms

2255
01:36:13,200 --> 01:36:16,800
of the number of colors that we, at the number of Shades, we have

2256
01:36:16,900 --> 01:36:19,600
right of Any Given gun, any given channel.

2257
01:36:19,900 --> 01:36:24,100
So, if we have the red Channel, there's eight bits of red, right?

2258
01:36:24,800 --> 01:36:28,600
That means that for a given pixel value, right?

2259
01:36:28,600 --> 01:36:29,800
For if these are pixels.

2260
01:36:30,000 --> 01:36:31,700
So these are two pixels next to each other.

2261
01:36:31,900 --> 01:36:33,600
This is the pixel, right?

2262
01:36:34,200 --> 01:36:35,200
And this is a pixel.

2263
01:36:35,400 --> 01:36:35,800
Wow.

2264
01:36:35,900 --> 01:36:37,500
I can't seem to draw with this mouse today.

2265
01:36:37,800 --> 01:36:38,300
Here we go.

2266
01:36:39,000 --> 01:36:39,400
Oh, yeah.

2267
01:36:40,100 --> 01:36:42,000
So if I have two pixels, right?

2268
01:36:42,000 --> 01:36:44,700
And my guy is moving between them, is moving in this direction.

2269
01:36:45,300 --> 01:36:47,500
And one of these pixels is full on.

2270
01:36:47,500 --> 01:36:50,400
So, this value is 255, and this is 0.

2271
01:36:50,700 --> 01:36:51,900
So, the guy is here.

2272
01:36:52,200 --> 01:36:55,200
He's fully, he's, you know, he's, he's white.

2273
01:36:55,200 --> 01:36:57,200
Let's say he's a white rectangle for some reason.

2274
01:36:57,200 --> 01:36:59,800
He's here, I have to

2275
01:37:00,000 --> 01:37:04,600
Hundred and fifty six steps that I can do to show him.

2276
01:37:04,600 --> 01:37:07,300
Move from here to here, right?

2277
01:37:07,300 --> 01:37:08,800
I can slowly.

2278
01:37:08,800 --> 01:37:11,800
If he was slowly if he's moving infinitely slowly, if it's well, not

2279
01:37:11,800 --> 01:37:13,000
really, but very, very slowly.

2280
01:37:13,300 --> 01:37:14,500
This would go up to 1.

2281
01:37:14,500 --> 01:37:16,700
This would go to 254, right?

2282
01:37:17,000 --> 01:37:19,900
This would go to to this would go to 253, right?

2283
01:37:19,900 --> 01:37:23,400
And I'm just, if you imagine him sort of slowly occupying the new

2284
01:37:23,400 --> 01:37:24,300
pixel, right?

2285
01:37:24,300 --> 01:37:27,500
So he's moving across and this new pixels getting brighter with the

2286
01:37:27,500 --> 01:37:29,800
guys color and this one is dimming out to whatever.

2287
01:37:29,900 --> 01:37:30,400
Ever it is.

2288
01:37:30,400 --> 01:37:32,700
He's a one pixel guy and he's occupied here.

2289
01:37:32,700 --> 01:37:33,100
Right?

2290
01:37:33,100 --> 01:37:34,300
Because we haven't talked about this yet.

2291
01:37:34,300 --> 01:37:38,500
So I say jumping the gun, but you could imagine that the guy is one

2292
01:37:38,500 --> 01:37:40,300
pixel wide, right?

2293
01:37:40,800 --> 01:37:44,600
And he's, he's occupying a space in between the two pixels.

2294
01:37:44,600 --> 01:37:45,200
Right?

2295
01:37:45,200 --> 01:37:46,400
And I want to draw that.

2296
01:37:46,500 --> 01:37:50,000
Well, what I can do is just see how much of of this pixel he occupies

2297
01:37:50,200 --> 01:37:52,200
and set it to the number between 0 and 255.

2298
01:37:52,200 --> 01:37:53,400
That's what percentage of it.

2299
01:37:53,400 --> 01:37:54,800
So, he's occupying half of it.

2300
01:37:54,900 --> 01:37:56,500
It's 127 or whatever, right?

2301
01:37:56,500 --> 01:37:57,700
Because occupying quarter of it.

2302
01:37:57,700 --> 01:37:59,800
It's 63 that sort of thing, right?

2303
01:38:00,300 --> 01:38:01,900
And then the other one is the inverse of that.

2304
01:38:01,900 --> 01:38:04,700
The other one is however much cheese is on that side.

2305
01:38:04,700 --> 01:38:07,500
So it was 127 this side be 128, right?

2306
01:38:07,500 --> 01:38:08,200
That sort of thing.

2307
01:38:08,200 --> 01:38:09,100
Whatever you want to do.

2308
01:38:09,800 --> 01:38:11,700
Well over 127, depending how you want to do.

2309
01:38:11,700 --> 01:38:12,800
You're rounding, blah, blah blah.

2310
01:38:13,400 --> 01:38:17,900
You get the point anyway, so that tells me that I have 8 Bits of

2311
01:38:17,900 --> 01:38:20,700
fractional, pixel Precision that I need to represent in the position

2312
01:38:20,700 --> 01:38:21,300
of this guy.

2313
01:38:21,500 --> 01:38:26,300
At least, I need at least eight bits of fractional, Precision of where

2314
01:38:26,300 --> 01:38:27,000
the guy is.

2315
01:38:27,100 --> 01:38:29,800
He has to have 1 over.

2316
01:38:29,900 --> 01:38:36,900
256, right of a pixels worth of motion in order to get this thing

2317
01:38:36,900 --> 01:38:38,100
accurate, right?

2318
01:38:38,100 --> 01:38:43,100
So now we're down to 16 bits to represent where the guy is in pixels

2319
01:38:43,700 --> 01:38:47,600
because I've got fractional 8 Bits of precision to represent where he

2320
01:38:47,600 --> 01:38:51,300
is in between the pixels just as a bare minimum.

2321
01:38:52,600 --> 01:38:56,400
Will 16 bits is only 65536.

2322
01:38:57,800 --> 01:38:58,300
Right.

2323
01:38:58,300 --> 01:38:59,500
That's the most.

2324
01:39:00,000 --> 01:39:00,500
Can store.

2325
01:39:00,500 --> 01:39:01,800
That's how fast that.

2326
01:39:01,800 --> 01:39:03,200
That's, that's the limit.

2327
01:39:03,200 --> 01:39:04,900
It can store that many discrete values, right?

2328
01:39:04,900 --> 01:39:07,800
It's negative 32 768.

2329
01:39:08,000 --> 01:39:11,100
232 767, right?

2330
01:39:11,100 --> 01:39:11,400
Or whatever.

2331
01:39:11,400 --> 01:39:12,300
The I don't even know.

2332
01:39:12,300 --> 01:39:13,200
That's what that right.

2333
01:39:13,200 --> 01:39:14,000
That's the range.

2334
01:39:14,000 --> 01:39:14,700
Then it can store.

2335
01:39:16,000 --> 01:39:17,000
In pixels.

2336
01:39:18,600 --> 01:39:25,100
Okay, so if that's the range in pixels of the guy, I've got 1920 by

2337
01:39:25,100 --> 01:39:28,300
1080, is my screen resolution at minimum.

2338
01:39:28,400 --> 01:39:30,900
What do when we run on 4K displays in the future.

2339
01:39:30,900 --> 01:39:32,300
Maybe we want less worth that.

2340
01:39:32,300 --> 01:39:33,200
It's going to be more.

2341
01:39:33,300 --> 01:39:37,900
Okay, 1920 divided into that, right?

2342
01:39:38,000 --> 01:39:39,900
Divided into seven, five, five, three six.

2343
01:39:39,900 --> 01:39:41,400
Let's do that math, right?

2344
01:39:43,500 --> 01:39:50,700
Let's do that at 755 36 divided by 19, 20, 30, 40 K.

2345
01:39:51,400 --> 01:39:54,000
That means the maximum width.

2346
01:39:55,200 --> 01:39:58,800
In tile maps that fit on a screen of our game.

2347
01:39:58,800 --> 01:40:02,000
If we used one floating Point, coordinate, as is being suggested

2348
01:40:02,000 --> 01:40:03,600
potentially, don't know what the guy was suggesting.

2349
01:40:04,200 --> 01:40:09,300
We could only have 34 screens across before we run out a floating

2350
01:40:09,300 --> 01:40:11,200
Point accuracy to properly.

2351
01:40:11,200 --> 01:40:13,300
Represent a sub pixel guys location.

2352
01:40:13,500 --> 01:40:14,200
That's it.

2353
01:40:17,600 --> 01:40:18,400
Not acceptable.

2354
01:40:18,800 --> 01:40:22,300
What I want to be able to do is I want to be able to have essentially

2355
01:40:22,400 --> 01:40:23,600
for all intents and purposes.

2356
01:40:23,600 --> 01:40:24,700
It infinite size world.

2357
01:40:24,700 --> 01:40:28,000
I want to be able to have 50,000 screens in any direction.

2358
01:40:28,000 --> 01:40:30,300
If I want to do, I want to be able to make a game so big that there's

2359
01:40:30,300 --> 01:40:33,000
no player who can ever even walk from one in the end of it, from one

2360
01:40:33,000 --> 01:40:33,700
end to the other.

2361
01:40:34,300 --> 01:40:35,500
And I want to know that I can do that.

2362
01:40:35,500 --> 01:40:39,600
So, that way, if you want to make giant game worlds we can write.

2363
01:40:40,700 --> 01:40:43,800
So this is unacceptable, one coordinate is totally unacceptable.

2364
01:40:43,900 --> 01:40:46,300
So you have two decisions, right?

2365
01:40:46,900 --> 01:40:48,700
You could either go to doubles, right?

2366
01:40:48,700 --> 01:40:50,700
You go to 64-bit, right?

2367
01:40:50,800 --> 01:40:53,300
So that you'd have more bits of precision in your floating point

2368
01:40:53,300 --> 01:40:53,600
value.

2369
01:40:53,600 --> 01:40:57,100
And then you could use still just a single X and Y, so you could use

2370
01:40:57,100 --> 01:40:58,700
doubles and have a single X & Y.

2371
01:40:58,700 --> 01:41:00,600
That's one solution, the solution.

2372
01:41:00,600 --> 01:41:04,100
I am choosing instead is to have an integer that says where you are in

2373
01:41:04,100 --> 01:41:05,900
the world, at least one of them.

2374
01:41:06,400 --> 01:41:10,000
And then a floating point x and a y that says where you are relatively

2375
01:41:10,000 --> 01:41:12,300
in that part of the world, right?

2376
01:41:12,600 --> 01:41:15,800
So I think eventually we're going to use something very close to this,

2377
01:41:16,100 --> 01:41:16,300
but

2378
01:41:16,400 --> 01:41:17,900
What we may do.

2379
01:41:18,200 --> 01:41:21,600
And I'm not saying we will, we're going to have to decide what we may

2380
01:41:21,600 --> 01:41:23,700
do, is get rid of one of these.

2381
01:41:24,000 --> 01:41:29,100
So we'll have one integer coordinate that says, what tile were on and

2382
01:41:29,100 --> 01:41:33,200
which tile we're on is, you know, that will allow us to have four

2383
01:41:33,200 --> 01:41:38,000
billion tiles by four billion tiles as the as the size of the world,

2384
01:41:38,400 --> 01:41:38,900
right?

2385
01:41:39,900 --> 01:41:43,400
That we may do and then the tile map that you're in, we'll just be

2386
01:41:43,400 --> 01:41:46,300
looked up on that thing and then the X

2387
01:41:46,400 --> 01:41:48,300
In the Y will be where you are inside the tile.

2388
01:41:48,300 --> 01:41:51,500
That's probably what we'll end up doing, just because it's easy and

2389
01:41:51,500 --> 01:41:54,700
allows a world to be big enough that we for this game.

2390
01:41:54,700 --> 01:41:57,900
We will never have a player who could ever walk between them anyway,

2391
01:41:58,100 --> 01:41:58,600
right?

2392
01:41:59,600 --> 01:41:59,700
so,

2393
01:42:00,000 --> 01:42:00,500
That will do.

2394
01:42:01,000 --> 01:42:02,200
Hopefully that answered that question.

2395
01:42:07,000 --> 01:42:08,400
Let's see.

2396
01:42:15,100 --> 01:42:16,100
Following about in line.

2397
01:42:16,100 --> 01:42:19,000
Are there any consequences of using it in early development?

2398
01:42:19,000 --> 01:42:20,600
IE making it harder to debug?

2399
01:42:20,800 --> 01:42:25,900
No, there are no downsides to using and development, because almost

2400
01:42:25,900 --> 01:42:30,400
every compiler that I'm aware of has a compile switch that turns off

2401
01:42:30,400 --> 01:42:31,100
in lining.

2402
01:42:31,500 --> 01:42:33,200
So kind of convenient, right?

2403
01:42:33,600 --> 01:42:36,400
That's, that's, that's really why you don't have to worry about it.

2404
01:42:36,500 --> 01:42:39,800
If for some reason, it was causing a problem.

2405
01:42:40,800 --> 01:42:42,300
Basically, /.

2406
01:42:42,300 --> 01:42:43,900
You can see it right here, /o.

2407
01:42:44,800 --> 01:42:48,600
Zero means don't do any inline expansions.

2408
01:42:48,600 --> 01:42:51,900
I believe that's what that would actually do for us is to turn it off

2409
01:42:51,900 --> 01:42:52,500
entirely.

2410
01:42:53,500 --> 01:42:56,200
And so if for some reason we find the compiler doing things that's

2411
01:42:56,200 --> 01:42:58,700
making it hard for us to debug our inline functions, because it's in

2412
01:42:58,700 --> 01:42:59,300
lining them.

2413
01:42:59,500 --> 01:43:00,900
We just hit that switch.

2414
01:43:00,900 --> 01:43:04,600
And I don't even, we may even have that switch in there already.

2415
01:43:04,600 --> 01:43:05,500
I don't know if we do or not.

2416
01:43:05,500 --> 01:43:08,200
No, we don't but that, that would be all you have to do.

2417
01:43:08,200 --> 01:43:10,400
So most compilers do not.

2418
01:43:10,400 --> 01:43:13,100
You don't have to worry about the inlining stuff because it's just,

2419
01:43:13,400 --> 01:43:14,200
it's totally

2420
01:43:14,300 --> 01:43:15,400
You can turn off completely.

2421
01:43:23,500 --> 01:43:26,500
Wouldn't it be better to call the X and Y variables and canonical?

2422
01:43:26,700 --> 01:43:28,000
Start our relative accent?

2423
01:43:28,000 --> 01:43:28,900
I relative why?

2424
01:43:30,900 --> 01:43:31,400
Yeah.

2425
01:43:31,600 --> 01:43:33,000
Oh, that's Daniel Ben macdui.

2426
01:43:33,200 --> 01:43:33,600
I don't know.

2427
01:43:33,600 --> 01:43:34,400
Okay, that's cool.

2428
01:43:34,400 --> 01:43:34,700
Daniel.

2429
01:43:34,700 --> 01:43:34,900
Ben.

2430
01:43:34,900 --> 01:43:36,000
Macdui is asking question.

2431
01:43:36,100 --> 01:43:40,500
He if you don't actually know, he's the guy who does this game, which

2432
01:43:40,500 --> 01:43:41,700
is pretty darn awesome.

2433
01:43:43,800 --> 01:43:45,500
This Ernesto RPG.

2434
01:43:46,200 --> 01:43:47,700
This game is really, really cool.

2435
01:43:48,600 --> 01:43:51,200
And you should check it out if you haven't, and I'm very delighted to

2436
01:43:51,200 --> 01:43:52,700
see him on this stream music.

2437
01:43:52,800 --> 01:43:53,200
Of mine.

2438
01:43:53,400 --> 01:43:53,900
So this.

2439
01:43:53,900 --> 01:43:58,600
Yeah, he's doing this game right now, which I highly recommend, I

2440
01:43:58,600 --> 01:44:01,500
would recommend that you buy it except you can't, it's not out yet.

2441
01:44:01,500 --> 01:44:03,300
But when it is, it'll be very good.

2442
01:44:03,300 --> 01:44:06,800
Anyway, he's asking whether we should use a better name for these.

2443
01:44:07,200 --> 01:44:13,600
And I would agree with that sort of basically, like, I would agree

2444
01:44:13,600 --> 01:44:16,500
with calling these tile relative X and tile relative.

2445
01:44:16,500 --> 01:44:22,600
Why most of the time, my only concern is in the verbose - of them.

2446
01:44:22,800 --> 01:44:28,800
Because of the of the amount of time they're going to get used.

2447
01:44:29,100 --> 01:44:32,900
But, you know, I'm not averse to just throwing it in there for now and

2448
01:44:32,900 --> 01:44:38,500
seeing how that goes because I totally agree that it is better.

2449
01:44:40,300 --> 01:44:40,700
Oops.

2450
01:44:41,100 --> 01:44:44,800
It is a, it is a much better and clearer thing for people who are

2451
01:44:44,800 --> 01:44:45,800
reading the code.

2452
01:44:46,000 --> 01:44:48,300
So, yeah, I definitely agree with that.

2453
01:44:48,300 --> 01:44:50,600
Most of the time I do like for both names but once in a while, I

2454
01:44:50,600 --> 01:44:52,600
shorten them and so I'm not sure if that's one.

2455
01:44:52,800 --> 01:44:56,000
to a certain but I'm totally down with starting with them over votes

2456
01:44:56,000 --> 01:44:59,900
name and then, shortening, it only if I decide that it

2457
01:45:01,200 --> 01:45:01,900
To reverse.

2458
01:45:02,000 --> 01:45:06,900
The other thing I could do is change it just to Rel, you know, like

2459
01:45:06,900 --> 01:45:07,500
that.

2460
01:45:07,800 --> 01:45:09,000
I could also end.

2461
01:45:09,000 --> 01:45:13,500
We could even do R LX R LLY in the future instead of tile Rolex and

2462
01:45:13,500 --> 01:45:15,500
then it would at least, you know, it was relative and you'd look up to

2463
01:45:15,500 --> 01:45:16,600
see what it was relative to.

2464
01:45:17,000 --> 01:45:17,600
So that's good, too.

2465
01:45:17,600 --> 01:45:19,300
So, yes, thank you for that suggestion.

2466
01:45:19,300 --> 01:45:23,600
I actually that is probably what I should have done because normally I

2467
01:45:23,600 --> 01:45:27,200
like to start from a more descriptive name and reduce it.

2468
01:45:27,200 --> 01:45:29,000
If I find that it's not

2469
01:45:30,100 --> 01:45:31,000
You know, that it.

2470
01:45:31,400 --> 01:45:34,000
I like to start with more verbose things than if either.

2471
01:45:34,000 --> 01:45:34,500
Annoying me.

2472
01:45:34,500 --> 01:45:37,500
I get rid of the robustness rather than going the other way around.

2473
01:45:38,100 --> 01:45:38,600
So yeah.

2474
01:45:53,400 --> 01:45:55,900
Okay, so the game will happen on whole screens without any scrolling

2475
01:45:55,900 --> 01:45:57,000
or camera movement.

2476
01:45:57,000 --> 01:45:57,600
Um,

2477
01:46:00,200 --> 01:46:05,400
So, for the most part, yes, I don't necessarily know that there won't

2478
01:46:05,400 --> 01:46:07,400
be any scrolling or camera movement.

2479
01:46:07,400 --> 01:46:11,300
But I would like the game to basically be screens that the player

2480
01:46:11,300 --> 01:46:14,700
looks at and understands, as a screen, that's kind of a requirement of

2481
01:46:14,700 --> 01:46:15,500
the game design.

2482
01:46:15,500 --> 01:46:19,800
Now, whether we want to move the camera a little in there, for flavor.

2483
01:46:19,800 --> 01:46:20,300
I don't know.

2484
01:46:20,300 --> 01:46:23,800
So I'm not going to promise that we won't have scrolling or camera

2485
01:46:23,800 --> 01:46:26,400
movement, but we're not going to have

2486
01:46:27,400 --> 01:46:30,000
But we are going to have single individual screen for the player

2487
01:46:30,000 --> 01:46:32,000
thinks about, and that's a core tenet of the game.

2488
01:46:36,600 --> 01:46:37,400
Let's see.

2489
01:46:38,900 --> 01:46:44,200
Doesn't plus plus I create a stall on the CPU.

2490
01:46:44,900 --> 01:46:46,700
I do not know what you're referring to.

2491
01:46:46,700 --> 01:46:47,300
Sorry.

2492
01:46:50,500 --> 01:46:50,900
Hmm.

2493
01:46:51,400 --> 01:46:52,400
Yeah, I don't know.

2494
01:46:53,200 --> 01:46:54,400
I don't know what that means.

2495
01:46:55,400 --> 01:46:57,100
Well, there are a lot of questions and we're over time.

2496
01:46:57,100 --> 01:46:59,800
I think, folks, we're going to have to probably do more questions

2497
01:46:59,800 --> 01:47:02,000
tomorrow because we're way over time already.

2498
01:47:04,100 --> 01:47:08,100
Yeah, let me see if there's any other ones here.

2499
01:47:08,700 --> 01:47:10,400
Let's see.

2500
01:47:11,200 --> 01:47:12,700
Let's see.

2501
01:47:30,400 --> 01:47:32,900
Okay, I think so.

2502
01:47:32,900 --> 01:47:35,300
There probably is one or two other questions in here.

2503
01:47:35,300 --> 01:47:37,700
Looking at all the questions just I trying to brief the scan them,

2504
01:47:37,700 --> 01:47:39,400
that probably should I should try to answer.

2505
01:47:39,400 --> 01:47:43,000
So let's do five more minutes of these questions that are already out

2506
01:47:43,000 --> 01:47:43,400
there.

2507
01:47:45,200 --> 01:47:46,200
Let's see.

2508
01:47:57,000 --> 01:47:58,000
Let's see.

2509
01:48:02,100 --> 01:48:09,200
Okay, so I guess, let's let's take, let's take this one, which is,

2510
01:48:11,900 --> 01:48:12,400
excuse me.

2511
01:48:13,900 --> 01:48:17,300
I will say, could you explain how pointers references are working or

2512
01:48:17,300 --> 01:48:21,000
what you use them for and why I will simply take a minute to say these

2513
01:48:21,000 --> 01:48:24,700
are explained in quite a bit of detail earlier in the Stream.

2514
01:48:24,700 --> 01:48:28,300
So if you want to answer, if you have questions about stuff like that,

2515
01:48:28,800 --> 01:48:29,000
what?

2516
01:48:29,000 --> 01:48:31,700
I, well actually, if you go to handmade hero dot org, there's this

2517
01:48:32,000 --> 01:48:35,500
And forms link, I would highly recommend going to the episode guide

2518
01:48:35,600 --> 01:48:36,500
that's under there.

2519
01:48:36,900 --> 01:48:39,300
And going through these intro to see on Windows.

2520
01:48:41,200 --> 01:48:42,900
Courses, I'd go through those.

2521
01:48:42,900 --> 01:48:44,300
They show you what pointers do.

2522
01:48:44,300 --> 01:48:48,300
And why you care about them references, are just a different word for

2523
01:48:48,300 --> 01:48:48,800
pointer.

2524
01:48:49,100 --> 01:48:49,500
There.

2525
01:48:49,500 --> 01:48:50,600
There, a semantic thing.

2526
01:48:50,600 --> 01:48:53,000
They don't have any there no difference in terms of what they actually

2527
01:48:53,000 --> 01:48:53,500
do.

2528
01:48:53,600 --> 01:48:55,700
So I wouldn't really think of those different.

2529
01:48:55,700 --> 01:48:58,900
A reference is just a different syntactic way of talking about a

2530
01:48:58,900 --> 01:48:59,300
pointer.

2531
01:49:03,900 --> 01:49:06,300
Was there ever a point your career where you use these unfortunate

2532
01:49:06,300 --> 01:49:09,000
structure packing practices, or was it always a thing where you just

2533
01:49:09,000 --> 01:49:12,300
saw other people doing it and wondered who did this to you?

2534
01:49:14,400 --> 01:49:15,700
So I don't know.

2535
01:49:15,700 --> 01:49:19,700
I think mostly probably what I was more guilty of earlier on in time

2536
01:49:19,700 --> 01:49:21,000
was not ever packing.

2537
01:49:21,000 --> 01:49:23,100
Things that should have been packed and having them be able to

2538
01:49:23,100 --> 01:49:23,600
sprawling.

2539
01:49:24,500 --> 01:49:25,300
That makes sense.

2540
01:49:26,900 --> 01:49:27,800
Enemy maps.

2541
01:49:27,900 --> 01:49:29,100
That disaster code.

2542
01:49:29,100 --> 01:49:31,000
Looks like win32 API code.

2543
01:49:31,000 --> 01:49:32,700
Now, what, which code looks like with.

2544
01:49:33,100 --> 01:49:34,000
To API code.

2545
01:49:34,000 --> 01:49:37,800
Are you talking about, you talking about this code right here, or I

2546
01:49:37,800 --> 01:49:39,400
don't know, tell me which code you're talking about.

2547
01:49:39,400 --> 01:49:40,400
We can take a look at it.

2548
01:49:40,500 --> 01:49:42,200
Although, again, most of the stuff.

2549
01:49:42,200 --> 01:49:43,800
We're already getting a lot cleaner.

2550
01:49:44,100 --> 01:49:46,900
So things are actually looking much better than they were but, you

2551
01:49:46,900 --> 01:49:50,600
know, obviously this sort of stuff is kind of crazy and we gotta work

2552
01:49:50,600 --> 01:49:51,300
on that a little bit.

2553
01:49:51,300 --> 01:49:54,100
But if you had a particular objection to the code, let me know.

2554
01:49:55,500 --> 01:49:56,400
And let's see.

2555
01:49:56,400 --> 01:49:57,700
So what else have I got here?

2556
01:49:57,700 --> 01:49:59,100
Can I scroll up words?

2557
01:49:59,100 --> 01:50:01,900
I need to be able to scroll up words here on my thing.

2558
01:50:01,900 --> 01:50:02,700
And I can't actually

2559
01:50:02,800 --> 01:50:03,100
Ali.

2560
01:50:03,100 --> 01:50:07,900
Do that, of course because because well, who knows why?

2561
01:50:07,900 --> 01:50:10,200
Because how do I scroll up words?

2562
01:50:10,200 --> 01:50:10,800
There we go.

2563
01:50:11,900 --> 01:50:12,900
Do I have any other questions?

2564
01:50:12,900 --> 01:50:16,400
I think we're mostly done with the questions.

2565
01:50:18,500 --> 01:50:19,000
Yeah.

2566
01:50:19,000 --> 01:50:21,200
Alright, so I think that's about it.

2567
01:50:21,200 --> 01:50:22,700
Let me just know which the

2568
01:50:24,200 --> 01:50:29,500
Let me just no enemy Mouse which, which code you think is win32 API

2569
01:50:29,500 --> 01:50:32,200
code looking like and I can address that and say whether it's

2570
01:50:32,200 --> 01:50:33,200
something that we would be.

2571
01:50:35,300 --> 01:50:35,800
So,

2572
01:50:37,100 --> 01:50:39,800
Let's see, enemy Mouse.

2573
01:50:45,100 --> 01:50:46,100
Enemy Mouse.

2574
01:50:49,100 --> 01:50:50,400
Oh, the example of bad packet.

2575
01:50:50,400 --> 01:50:50,800
Okay.

2576
01:50:50,900 --> 01:50:51,500
Got it.

2577
01:50:52,200 --> 01:50:53,000
So enemy Mouse.

2578
01:50:53,000 --> 01:50:54,700
We was talking about that was talking about the example.

2579
01:50:54,700 --> 01:50:56,500
I did with the line where you had to pack them.

2580
01:50:56,500 --> 01:50:57,600
Okay, that makes much more sense.

2581
01:50:57,800 --> 01:50:59,200
Yes, exactly.

2582
01:50:59,200 --> 01:50:59,800
It does look like

2583
01:51:00,000 --> 01:51:02,900
22, code, win32 makes you pack things into structures.

2584
01:51:02,900 --> 01:51:06,400
A lot of times for no reason, that is very, very, very common.

2585
01:51:07,500 --> 01:51:08,600
So yeah.

2586
01:51:08,800 --> 01:51:10,000
Yeah, it's a problem.

2587
01:51:10,800 --> 01:51:12,000
So, okay.

2588
01:51:12,000 --> 01:51:14,300
Just want to make sure there wasn't a question about code cleanliness

2589
01:51:14,300 --> 01:51:15,000
and the other part of things.

2590
01:51:15,000 --> 01:51:16,500
So, I could say, either, yes, it should be cleaner.

2591
01:51:16,500 --> 01:51:17,300
No, it shouldn't be.

2592
01:51:17,500 --> 01:51:20,200
So it was saying handmade here at www.fairwork.gov.au.?

2593
01:51:20,900 --> 01:51:21,300
Actually.

2594
01:51:21,300 --> 01:51:22,400
No, so I should have to check.

2595
01:51:22,400 --> 01:51:23,800
I'll check, I'll go check that.

2596
01:51:23,900 --> 01:51:27,000
I didn't realize that www.h, a maid here at Edinburgh wasn't working.

2597
01:51:27,000 --> 01:51:29,900
So I have to go find out why it's not working because you

2598
01:51:30,000 --> 01:51:30,300
Are right.

2599
01:51:30,300 --> 01:51:31,500
It does not appear to be working.

2600
01:51:32,000 --> 01:51:33,000
I will check it out.

2601
01:51:33,300 --> 01:51:35,500
All right, make a note on my list here.

2602
01:51:35,800 --> 01:51:40,000
Www doesn't work.

2603
01:51:41,400 --> 01:51:42,700
Ugh, okay.

2604
01:51:43,300 --> 01:51:43,800
There we go.

2605
01:51:45,000 --> 01:51:45,500
Okay.

2606
01:51:46,200 --> 01:51:49,800
Thank you, everyone for joining me for another week of handmade hero.

2607
01:51:49,800 --> 01:51:52,200
I think that we are in excellent shape.

2608
01:51:52,200 --> 01:51:52,700
Now.

2609
01:51:52,900 --> 01:51:55,400
We are starting to see some game architecture stuff.

2610
01:51:55,400 --> 01:51:56,400
Take shape.

2611
01:51:56,500 --> 01:51:59,600
I think next week will sort of be in that place where I starting to

2612
01:51:59,600 --> 01:52:02,900
really kind of Leverage things and start to see kind of cool things

2613
01:52:03,300 --> 01:52:04,200
start to happen.

2614
01:52:05,100 --> 01:52:05,700
Again.

2615
01:52:05,900 --> 01:52:08,700
This week was, I don't know what it was five hours of programming

2616
01:52:08,700 --> 01:52:11,000
total, something like that and that's five hours of programming with.

2617
01:52:11,100 --> 01:52:13,500
Explanation because it's only been five days.

2618
01:52:13,700 --> 01:52:17,900
And we already got to see sort of all this cool stuff starts to happen

2619
01:52:17,900 --> 01:52:21,200
with with how, you know, we can sort of see exactly how to structure

2620
01:52:21,600 --> 01:52:23,900
stuff and have a tile map that we move around on that sort of thing.

2621
01:52:23,900 --> 01:52:27,600
So again doing stuff from scratch, even when you're explaining, it is

2622
01:52:27,600 --> 01:52:28,800
really not that long.

2623
01:52:28,800 --> 01:52:31,700
I mean, it does seem longer because we wait a day to do each hour of

2624
01:52:31,700 --> 01:52:34,300
programming, but it's really just doesn't take that long making things

2625
01:52:34,300 --> 01:52:37,000
from scratch is actually very quick if it's the thing that you've

2626
01:52:37,000 --> 01:52:38,500
practiced in your life, right?

2627
01:52:39,200 --> 01:52:40,800
If all you ever do is practice using other

2628
01:52:41,100 --> 01:52:43,300
As libraries other people's engines and obviously you will be faster

2629
01:52:43,300 --> 01:52:45,800
at that, but that's because that's what you practice doing.

2630
01:52:45,800 --> 01:52:47,700
But if you practice making things from scratch, actually just really

2631
01:52:47,700 --> 01:52:48,300
doesn't take that long.

2632
01:52:48,300 --> 01:52:49,100
It's a lot more fun.

2633
01:52:49,100 --> 01:52:49,800
It's a lot more rewarding.

2634
01:52:49,800 --> 01:52:54,900
It's not more interesting and you're liable to find things that other

2635
01:52:54,900 --> 01:52:55,800
people never did.

2636
01:52:55,900 --> 01:52:56,900
You're liable to go.

2637
01:52:56,900 --> 01:52:58,800
Oh, what about these cool things that I could do?

2638
01:52:59,000 --> 01:53:01,400
Now that I'm writing this stuff myself, that no one's tried before in

2639
01:53:01,400 --> 01:53:02,600
Amazon before, it's very interesting.

2640
01:53:02,600 --> 01:53:04,800
So, you know, yeah, engines and libraries are good.

2641
01:53:04,800 --> 01:53:09,400
They save you time a certain sense in certain cases certainly and and

2642
01:53:09,400 --> 01:53:10,600
that's always a good thing.

2643
01:53:10,600 --> 01:53:10,900
But

2644
01:53:11,100 --> 01:53:14,100
It's also interesting to sort of look at just how fun and and

2645
01:53:14,100 --> 01:53:16,000
efficient making things from scratch.

2646
01:53:16,000 --> 01:53:19,300
Can be because it really doesn't take that long to make things

2647
01:53:19,400 --> 01:53:19,700
shortly.

2648
01:53:19,700 --> 01:53:23,100
And again, this that keeps sort of being true from what I've seen on

2649
01:53:23,100 --> 01:53:23,900
the stream is like it.

2650
01:53:23,900 --> 01:53:26,700
Just take, you know, we'll do one week is five hours or something in

2651
01:53:26,700 --> 01:53:29,400
that five hours will do just so much stuff.

2652
01:53:29,400 --> 01:53:32,500
And if you stack those up and think about the fact, there's 40

2653
01:53:32,500 --> 01:53:34,500
programming hours in a normal week or something.

2654
01:53:35,400 --> 01:53:38,400
You just get you get many weeks of handmade here all packed in this

2655
01:53:38,400 --> 01:53:39,400
one single working week.

2656
01:53:39,400 --> 01:53:40,900
There's just a lot you can accomplish

2657
01:53:41,000 --> 01:53:43,600
In making your own engine or making your own, whatever it is that you

2658
01:53:43,600 --> 01:53:45,600
may want to make make your own component to something.

2659
01:53:45,600 --> 01:53:48,000
Make your own Unity extension, make your own whatever.

2660
01:53:48,900 --> 01:53:50,200
So, thank you so much for joining me.

2661
01:53:50,200 --> 01:53:54,200
It has been a pleasure as it always is, if you would like to get x to

2662
01:53:54,200 --> 01:53:56,500
the source code, you can pre-order the game on handmade hero.

2663
01:53:56,500 --> 01:53:59,200
Dot-org, just put handmade here at organ there, and click on the

2664
01:53:59,200 --> 01:53:59,800
pre-order button.

2665
01:54:00,200 --> 01:54:01,400
That will give you a download link.

2666
01:54:01,400 --> 01:54:04,000
You can follow along every day and get the source code or just play

2667
01:54:04,000 --> 01:54:04,500
around with it.

2668
01:54:04,500 --> 01:54:08,300
Do whatever you want want to do to sort of test out your own ideas.

2669
01:54:08,800 --> 01:54:11,300
If you want to support the video series, we do have a patreon that you

2670
01:54:11,300 --> 01:54:12,800
can contribute to over there.

2671
01:54:12,800 --> 01:54:16,400
And if you would like more resources for studying handmade hero, you

2672
01:54:16,400 --> 01:54:19,400
can click on this news and forums link and it's got all kinds of

2673
01:54:19,400 --> 01:54:19,700
stuff.

2674
01:54:19,700 --> 01:54:20,800
If you want to know about porting.

2675
01:54:20,800 --> 01:54:23,200
If you go to the code resources page, lot of ports on there.

2676
01:54:23,200 --> 01:54:25,300
If you want to ask questions, go to the code discussions, page, got

2677
01:54:25,300 --> 01:54:27,700
the episode guide, if you want to catch up on past serious, all kinds

2678
01:54:27,700 --> 01:54:28,300
of good stuff.

2679
01:54:28,500 --> 01:54:29,800
And of course, the schedule for the week.

2680
01:54:30,000 --> 01:54:32,500
Is always posted here on the main page.

2681
01:54:32,500 --> 01:54:34,800
So I hope to see you next Monday.

2682
01:54:34,800 --> 01:54:37,400
When we were back in our normal time slot, 8 p.m.

2683
01:54:37,400 --> 01:54:43,100
Pacific Standard time, and we will be working on sort of continuing.

2684
01:54:43,100 --> 01:54:45,400
That game, our children getting ourselves up into an actual game.

2685
01:54:45,900 --> 01:54:48,800
Maybe we'll be trying to do some getting some enemies in there that we

2686
01:54:48,800 --> 01:54:50,700
can fight and that sort of stuff.

2687
01:54:50,700 --> 01:54:53,900
Just sort of started building out again, an exploratory version of the

2688
01:54:53,900 --> 01:54:56,200
game so that we can start to figure out what we need in our game

2689
01:54:56,200 --> 01:54:58,400
engine for architecture.

2690
01:54:58,400 --> 01:54:59,900
So please join me for that.

2691
01:55:00,000 --> 01:55:02,400
I would love to see you here next week, and thank you for joining me

2692
01:55:02,400 --> 01:55:03,000
today.

2693
01:55:03,400 --> 01:55:04,500
It has been a pleasure.

2694
01:55:04,500 --> 01:55:05,400
See you later everybody.

