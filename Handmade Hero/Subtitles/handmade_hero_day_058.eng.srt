1
00:00:01,000 --> 00:00:01,600
There we go.

2
00:00:01,600 --> 00:00:02,500
I have stopped.

3
00:00:02,500 --> 00:00:06,400
And then I have started the recording again known as cycling.

4
00:00:06,400 --> 00:00:09,800
According to those of you who are experts on Twitch.

5
00:00:10,400 --> 00:00:11,600
Here is the thing people.

6
00:00:14,300 --> 00:00:17,100
I'm prepared to say it and prepared to say it.

7
00:00:18,500 --> 00:00:20,000
Welcome to handmade hero.

8
00:00:20,000 --> 00:00:24,000
The show where we code an entire game live on Twitch.

9
00:00:24,000 --> 00:00:24,800
No engines.

10
00:00:24,800 --> 00:00:27,300
No libraries using, only our typing fingers.

11
00:00:27,300 --> 00:00:30,200
Now, today is a very special day.

12
00:00:30,200 --> 00:00:35,400
Because just before the stream, I decided I was tired of looking at a

13
00:00:35,400 --> 00:00:40,400
bunch of yellow rectangles, while I was coding and so, I did it.

14
00:00:40,400 --> 00:00:42,400
I just flat-out did it before the stream.

15
00:00:42,400 --> 00:00:45,900
I decided it was time for handmade Hero Test assets to dot zip.

16
00:00:45,900 --> 00:00:48,500
So if you are someone who's following along at home,

17
00:00:48,700 --> 00:00:51,300
You will note that if you go to the link that you received in your

18
00:00:51,300 --> 00:00:53,600
email, if you pre-ordered the game on handmade here at org.

19
00:00:54,000 --> 00:00:57,700
If you go to the link that you got from the pre-order, there is now

20
00:00:57,700 --> 00:01:01,200
the test asset zip has been updated from 1 to 2.

21
00:01:01,200 --> 00:01:06,800
We are onto now and basically what I did is, I grab some of our assets

22
00:01:06,800 --> 00:01:09,300
course, you can't preview them because Windows bit map, viewer doesn't

23
00:01:09,300 --> 00:01:13,200
actually work even though they invented the format, but basically, I

24
00:01:13,200 --> 00:01:14,000
grab some rocks.

25
00:01:14,000 --> 00:01:16,100
Some trees and some

26
00:01:16,900 --> 00:01:20,700
Tufts of grass and such that I wanted to use so that we could stop

27
00:01:20,700 --> 00:01:24,600
using yellow rectangles for walls and we could actually start having

28
00:01:24,600 --> 00:01:25,600
some actual things there.

29
00:01:25,800 --> 00:01:28,000
We won't get carried away with it, but I was just at the point where I

30
00:01:28,000 --> 00:01:28,900
just tired of looking at them.

31
00:01:28,900 --> 00:01:31,500
So I decided it was time to grab some assets.

32
00:01:34,300 --> 00:01:37,200
So, for those of you who like to follow along with the stream, now

33
00:01:37,200 --> 00:01:39,200
would be a good time to go and grab that.

34
00:01:40,200 --> 00:01:42,400
And it's got the old test directory.

35
00:01:42,400 --> 00:01:43,700
It's got all the same stuff in there.

36
00:01:43,700 --> 00:01:46,300
So everyone could follow along as well, but it's also got this test to

37
00:01:46,300 --> 00:01:46,800
directory.

38
00:01:46,800 --> 00:01:49,900
And basically what you're going to want to do is they're going to want

39
00:01:49,900 --> 00:01:53,200
to go to the data directory and you're going to want to go ahead and

40
00:01:53,200 --> 00:01:56,200
place that test to right on in there.

41
00:01:56,300 --> 00:01:56,600
Right?

42
00:01:56,600 --> 00:01:59,700
So now you've got that test to in there and now we can load stuff from

43
00:01:59,700 --> 00:02:00,900
that and that will be good.

44
00:02:01,100 --> 00:02:02,600
So, let's go ahead and Dive Right In.

45
00:02:02,600 --> 00:02:05,600
We basically had a little bit of cleanup to do.

46
00:02:05,600 --> 00:02:08,699
We have some testing to do, but basically there's one thing that we

47
00:02:08,699 --> 00:02:09,900
hadn't written yet, so we couldn't

48
00:02:10,199 --> 00:02:13,300
We weren't really backed a feature parity from yesterday when we made

49
00:02:13,300 --> 00:02:14,800
our spatial partition for entities.

50
00:02:15,100 --> 00:02:17,200
So I'd like to do is just go ahead and get that done.

51
00:02:17,200 --> 00:02:20,700
And then maybe we can replace those yellow rectangles with some actual

52
00:02:20,700 --> 00:02:23,700
trees or something, which would be nice and do some other stuff like

53
00:02:23,700 --> 00:02:26,000
that just because it's the time, you know, you got to just go with the

54
00:02:26,000 --> 00:02:28,000
flow sometimes and I feel like that's where the flow was going.

55
00:02:28,000 --> 00:02:29,100
And so that's where we're going to go.

56
00:02:29,600 --> 00:02:31,500
All right, so

57
00:02:32,700 --> 00:02:36,700
If I go ahead and open up handmade dot CPP, you will remember that.

58
00:02:36,700 --> 00:02:37,200
The thing?

59
00:02:37,700 --> 00:02:40,700
Where we left it, we were not actually back tubes.

60
00:02:41,500 --> 00:02:41,600
What?

61
00:02:41,600 --> 00:02:42,100
Just happened.

62
00:02:42,100 --> 00:02:45,100
There, Dev and there we go.

63
00:02:46,600 --> 00:02:47,800
So you will remember that.

64
00:02:47,800 --> 00:02:50,500
We were at the point where we were running again, but we didn't have

65
00:02:50,500 --> 00:02:51,800
any entities, right?

66
00:02:51,800 --> 00:02:55,300
Because we did the thing that actually supposed to bring entities into

67
00:02:55,300 --> 00:02:58,200
the working set, actually hasn't been done yet.

68
00:02:58,200 --> 00:02:59,800
And so we have to

69
00:03:00,000 --> 00:03:01,700
I have to go ahead and write that actual code.

70
00:03:01,800 --> 00:03:05,100
If you remember, I just basically straight up commented it out.

71
00:03:05,300 --> 00:03:08,300
So, in the set camera, you can see there's an f-zero around it.

72
00:03:08,500 --> 00:03:11,200
So I guess, I shouldn't say commented it out, if zeroed it out more

73
00:03:11,200 --> 00:03:14,000
specifically, six of one half dozen of the other.

74
00:03:14,100 --> 00:03:17,300
And so, what I need to do is I need to actually write this now using

75
00:03:17,300 --> 00:03:19,700
our spatial partition, because it's exactly things like this, which

76
00:03:19,700 --> 00:03:22,400
are spatial queries that are supposed to be accelerated by our

77
00:03:22,400 --> 00:03:22,700
partition.

78
00:03:22,700 --> 00:03:25,800
So now's the time when we have to start actually using that and doing

79
00:03:25,800 --> 00:03:27,700
some actual real stuff with it.

80
00:03:28,200 --> 00:03:29,800
So what I want to do is previously

81
00:03:30,000 --> 00:03:33,300
What we did is we just looped over all the tiles in the world that

82
00:03:33,300 --> 00:03:34,800
we're inside, our cameras radius.

83
00:03:35,200 --> 00:03:39,900
And then we said, okay, we're going to take that and say all of those

84
00:03:39,900 --> 00:03:40,400
tiles.

85
00:03:40,400 --> 00:03:42,800
Anything that's that's in that range of tiles.

86
00:03:42,900 --> 00:03:44,400
Will now come into the working set.

87
00:03:44,500 --> 00:03:47,100
And so what I want to do is I'm going to do exactly the same thing.

88
00:03:47,300 --> 00:03:49,400
But what I want to do is just do that by chunk.

89
00:03:49,400 --> 00:03:52,700
So what I want to do is just say any of the chunks that overlap the

90
00:03:52,700 --> 00:03:56,100
camera will pull those in and that will be sufficient for now.

91
00:03:56,100 --> 00:03:58,500
Now, we might want to get a little more fancy later and actually check

92
00:03:58,500 --> 00:03:59,800
for the entities inside the chunk to see,

93
00:04:00,000 --> 00:04:04,400
They match the camera bounds specifically, but I don't actually know

94
00:04:04,400 --> 00:04:07,100
if we really do want to do that or not because the high entity list is

95
00:04:07,100 --> 00:04:08,800
kind of a fluid concept.

96
00:04:08,800 --> 00:04:11,900
Anyway, we don't have to necessarily cap it to an exact boundary,

97
00:04:12,400 --> 00:04:16,399
certainly not yet so we can kind of we can kind of fudge that a little

98
00:04:16,399 --> 00:04:17,700
bit if we want it.

99
00:04:18,600 --> 00:04:18,899
All right.

100
00:04:18,899 --> 00:04:21,500
So what I'm going to do here is go ahead and uncomment this out.

101
00:04:22,100 --> 00:04:25,000
This is no longer going to work, obviously, because we had the camera

102
00:04:25,000 --> 00:04:28,900
p, and it was using the ABS tile stuff, which we got rid of.

103
00:04:29,300 --> 00:04:29,800
And so now what we want,

104
00:04:29,900 --> 00:04:34,100
Want to do, is we want to have a chunk X chunk y instead, right?

105
00:04:35,000 --> 00:04:39,600
And then we have our tile span and our tile span is presumably, you

106
00:04:39,600 --> 00:04:43,200
know, no longer that relevant either because what we'd really like to

107
00:04:43,200 --> 00:04:47,400
do is talk about chunks, man's more specifically, right?

108
00:04:47,700 --> 00:04:50,300
And so we do have something, I guess, one thing that I should bring

109
00:04:50,300 --> 00:04:50,700
up.

110
00:04:53,600 --> 00:04:54,700
That is kind of relevant here.

111
00:04:55,900 --> 00:04:57,500
Is we don't want to be oscillating.

112
00:04:57,500 --> 00:05:00,200
A lot where we're moving things in and out because our bounds don't

113
00:05:00,200 --> 00:05:00,800
match up.

114
00:05:01,100 --> 00:05:04,600
So that might actually be one good reason to sort of think this

115
00:05:04,600 --> 00:05:06,300
through a little bit more carefully.

116
00:05:06,700 --> 00:05:11,600
For example, let me go ahead and and do a little diagram here for you.

117
00:05:12,500 --> 00:05:16,600
So if we imagine that we've got of course got it.

118
00:05:16,600 --> 00:05:17,000
Got it.

119
00:05:17,000 --> 00:05:19,100
Always ruin my colors, don't you Mischief?

120
00:05:19,100 --> 00:05:20,000
This is pretty Miss.

121
00:05:20,000 --> 00:05:21,400
Just pretty good so far.

122
00:05:21,500 --> 00:05:24,000
I feel like we need to like email them and say, please just fix the

123
00:05:24,000 --> 00:05:25,600
bugs in it and it

124
00:05:25,700 --> 00:05:27,200
Be pretty awesome, you know.

125
00:05:27,600 --> 00:05:31,800
Anyway, so if we're in a situation where we've got, you know, again,

126
00:05:31,800 --> 00:05:34,600
we've got our sort of screen that we're looking at and here is our

127
00:05:34,600 --> 00:05:36,800
active region that we're talking about.

128
00:05:36,900 --> 00:05:41,000
Well the active region as far as the camera bounds are concerned is

129
00:05:41,000 --> 00:05:42,100
actually exactly right.

130
00:05:42,100 --> 00:05:45,100
It's a rectangle that we made centered around wherever the camera

131
00:05:45,100 --> 00:05:48,800
happens to be which is the center point here and it is exactly

132
00:05:48,800 --> 00:05:49,200
rectangle.

133
00:05:49,200 --> 00:05:49,800
That goes that way.

134
00:05:49,800 --> 00:05:51,000
Now remember our chunks.

135
00:05:51,000 --> 00:05:54,200
However, could be at any alignment on here, right?

136
00:05:54,400 --> 00:05:54,800
The chunks.

137
00:05:54,800 --> 00:05:55,500
We don't know how the

138
00:05:55,700 --> 00:05:57,200
Chunks are aligned relative to the camera.

139
00:05:57,200 --> 00:05:59,200
There's no, the camera could be free-roaming.

140
00:05:59,200 --> 00:05:59,900
We have no.

141
00:06:00,000 --> 00:06:01,100
You have how the chunks aligned.

142
00:06:01,700 --> 00:06:07,800
And so if we pulled entities into the working set as as on the just

143
00:06:07,800 --> 00:06:09,200
tile boundaries, right?

144
00:06:09,300 --> 00:06:11,600
That would include an entity that would say right there.

145
00:06:11,800 --> 00:06:13,700
Okay, and it would come into the hiset.

146
00:06:13,700 --> 00:06:16,300
So on the last frame, when we looked through the tile chunks that

147
00:06:16,300 --> 00:06:19,000
needed to get pulled in and we pulled in this one, it would pull in,

148
00:06:19,000 --> 00:06:22,100
you know, a guy it would pull it would pull him in, right?

149
00:06:22,800 --> 00:06:27,000
But on the subsequent frame, when we go to check the camera bounds

150
00:06:27,000 --> 00:06:27,500
which are here.

151
00:06:27,500 --> 00:06:29,800
We would find that he was outside it and we'd move him.

152
00:06:30,000 --> 00:06:30,500
Right back.

153
00:06:30,700 --> 00:06:34,000
We basically just cycle him between low and high low and high low and

154
00:06:34,000 --> 00:06:34,200
high.

155
00:06:34,200 --> 00:06:37,900
So we kind of want to make sure that we line up our checks in both

156
00:06:37,900 --> 00:06:38,300
cases.

157
00:06:38,300 --> 00:06:41,600
And so I think that Argos to me that maybe I will be more specific

158
00:06:41,600 --> 00:06:42,300
about the check.

159
00:06:42,300 --> 00:06:44,500
So what I'll do is I'll do a conservative coverage.

160
00:06:44,500 --> 00:06:48,400
So I'll say basically give me all of the tile chunks that overlap,

161
00:06:48,400 --> 00:06:50,300
this rectangle, the camera bounds.

162
00:06:50,300 --> 00:06:53,700
And then I'll actually Loop through the entities as I pull them in.

163
00:06:53,700 --> 00:06:57,000
And if they would be outside of the camera bounds, we will skip them,

164
00:06:57,000 --> 00:06:57,600
right?

165
00:06:57,600 --> 00:07:00,000
So that way we don't pull in any one who shouldn't be

166
00:06:59,900 --> 00:07:00,700
Pulled in, right?

167
00:07:00,700 --> 00:07:03,100
And I'm just going to say that that's roughly how we do things.

168
00:07:03,100 --> 00:07:06,000
And again, we're just kind of experimenting here and we're sort of

169
00:07:06,000 --> 00:07:08,400
narrowing down on exactly how we want things to work.

170
00:07:08,400 --> 00:07:11,300
So it's not essential that our calculations be right or even that they

171
00:07:11,300 --> 00:07:13,700
work yet correctly.

172
00:07:13,700 --> 00:07:15,700
This is why I'm not doing a lot of testing, that's our stuff.

173
00:07:15,700 --> 00:07:18,500
What's important is that we've structured the code to flow properly.

174
00:07:18,500 --> 00:07:23,200
So that we know that when we go to write each individual part for real

175
00:07:23,200 --> 00:07:28,300
and Dot, the I's cross, the t's that everything is is wired exactly as

176
00:07:28,300 --> 00:07:29,700
it should be and everything's in the right.

177
00:07:29,900 --> 00:07:31,600
Lace flowing correctly, right?

178
00:07:31,700 --> 00:07:34,400
And so that's the important thing to keep in mind not whether the code

179
00:07:34,400 --> 00:07:35,000
is working at all.

180
00:07:35,000 --> 00:07:37,000
Because also we don't care if any of this code works because we're

181
00:07:37,000 --> 00:07:40,300
going to do really good implementations of every individual piece and

182
00:07:40,300 --> 00:07:42,200
that is basically what we will call our engine.

183
00:07:44,500 --> 00:07:48,300
And so, if you were to spend a lot of time right now actually doing

184
00:07:48,300 --> 00:07:50,300
really good code for any particular part here.

185
00:07:50,600 --> 00:07:53,000
That's just time, that's wasted because you don't know if you're going

186
00:07:53,000 --> 00:07:54,200
to have to reshuffle that area.

187
00:07:54,200 --> 00:07:56,700
Like a lot of the stuff we've done you seen, how many times we've sort

188
00:07:56,700 --> 00:08:00,200
of changed our mind about stuff over the course of the past 20 hours

189
00:08:00,200 --> 00:08:03,900
or so, you want to make sure that you know, the 20, 30, 40 hours.

190
00:08:03,900 --> 00:08:07,800
However long we spend on doing this sort of pre work on getting the

191
00:08:07,800 --> 00:08:08,700
engine set up, right?

192
00:08:08,800 --> 00:08:11,300
You want to make sure that you're not throwing away a lot of work.

193
00:08:11,800 --> 00:08:12,600
You want to throw away?

194
00:08:12,600 --> 00:08:13,400
The minimal amount of work.

195
00:08:13,600 --> 00:08:16,500
You just write just basically the stuff that does roughly what you

196
00:08:16,500 --> 00:08:17,300
needed to do.

197
00:08:17,400 --> 00:08:17,900
You don't care.

198
00:08:17,900 --> 00:08:19,000
If it works hardly at all.

199
00:08:19,000 --> 00:08:22,700
You just make sure that you've got it roughly in, you know, pipeline

200
00:08:22,700 --> 00:08:25,800
bubbles fashion, that everything flows correctly and all the code

201
00:08:25,800 --> 00:08:26,700
connects correctly.

202
00:08:27,100 --> 00:08:30,000
And then when you're sure, that's already, that's when it's time.

203
00:08:30,700 --> 00:08:34,100
Or when you can start saying, I'm going to write a really good piece

204
00:08:34,100 --> 00:08:36,200
of code here and actually think it through and test it.

205
00:08:36,299 --> 00:08:38,600
That's the only time you want to do that because otherwise you're just

206
00:08:38,600 --> 00:08:39,500
throwing that work away.

207
00:08:39,600 --> 00:08:42,299
So very important thing to remember, I've said it multiple times.

208
00:08:42,500 --> 00:08:43,400
I will probably say it.

209
00:08:43,600 --> 00:08:44,500
Again, in the future.

210
00:08:45,100 --> 00:08:45,700
So anyway,

211
00:08:46,800 --> 00:08:49,500
Now, what I'd like to do is go ahead and say, let's let's figure out

212
00:08:49,500 --> 00:08:50,700
this camera bound situation.

213
00:08:51,100 --> 00:08:52,000
So we did that.

214
00:08:52,100 --> 00:08:52,800
This is Computing.

215
00:08:52,800 --> 00:08:54,100
This is working properly.

216
00:08:54,100 --> 00:08:57,600
But now, with this wants to do is we want to basically make a Min

217
00:08:57,600 --> 00:08:59,700
chunk X and a Mac chunk.

218
00:09:00,000 --> 00:09:03,500
Chuck X and am in chunk why and Animax chunk line.

219
00:09:03,800 --> 00:09:06,800
And then, we're going to want to do is Loop over those.

220
00:09:07,100 --> 00:09:10,000
And we're going to want to pull out all of the entities that are

221
00:09:10,000 --> 00:09:11,300
inside those, right?

222
00:09:11,900 --> 00:09:16,200
And so what we need to do is essentially take what our camera bounds

223
00:09:16,200 --> 00:09:16,600
were.

224
00:09:16,700 --> 00:09:20,400
And we need to map those camera bounce into our chunk bounds.

225
00:09:20,900 --> 00:09:24,400
And so what I think we want to do for that is we would like to ideally

226
00:09:24,400 --> 00:09:29,000
have a function that could sort of do that for us, right?

227
00:09:29,200 --> 00:09:29,800
If you

228
00:09:30,000 --> 00:09:34,300
Could imagine saying, okay, we have, we already have the ability to do

229
00:09:34,300 --> 00:09:34,500
that.

230
00:09:34,500 --> 00:09:35,000
Mapping.

231
00:09:35,200 --> 00:09:37,800
Let's in our handmade world, right?

232
00:09:37,800 --> 00:09:42,900
We have the where is it here mapping to tile space function, right?

233
00:09:43,000 --> 00:09:45,700
And that map in a tile space function, basically takes the base pup

234
00:09:45,700 --> 00:09:50,000
position which was the camera and an offset, which would be either of

235
00:09:50,000 --> 00:09:53,900
the corners of a rectangle and that would produce those chunk offsets

236
00:09:53,900 --> 00:09:54,600
that we need, right?

237
00:09:54,600 --> 00:09:57,700
That would tell us what those chalk offsets should be.

238
00:09:57,900 --> 00:09:59,900
Now, of course, map into tile space is a bad name.

239
00:10:00,000 --> 00:10:04,300
For this now because it's actually map into chunks face, right, but

240
00:10:04,300 --> 00:10:05,300
that's, that's fine.

241
00:10:05,400 --> 00:10:06,000
Right.

242
00:10:06,100 --> 00:10:08,300
So we'll just call that map into chunks pace and we'll go ahead and

243
00:10:08,300 --> 00:10:09,000
call that here.

244
00:10:09,200 --> 00:10:12,000
So we've already got the code that we would need to do this.

245
00:10:12,400 --> 00:10:13,900
We'll just do it exactly that way.

246
00:10:14,600 --> 00:10:19,300
So when we map into chunks face, we're going to have a Min chunk P

247
00:10:19,300 --> 00:10:20,700
basically, right?

248
00:10:20,900 --> 00:10:24,900
And that's going to be the mapping into chunks face again of the of

249
00:10:24,900 --> 00:10:28,600
that camera P, because that's what we're checking right.

250
00:10:28,600 --> 00:10:29,700
And let me just make sure I know

251
00:10:29,900 --> 00:10:30,700
We're checking here.

252
00:10:31,000 --> 00:10:35,000
Let's actually think this through for one second because we may have,

253
00:10:35,000 --> 00:10:38,200
we may also have a slight mistake here or just something that we have

254
00:10:38,200 --> 00:10:38,700
to think about it.

255
00:10:38,700 --> 00:10:39,200
I should say.

256
00:10:40,200 --> 00:10:44,100
So what we want to do is this is going to go through and move our

257
00:10:44,100 --> 00:10:45,500
entities slightly, right?

258
00:10:45,500 --> 00:10:48,500
And then it's going to do the move and then check against the camera

259
00:10:48,500 --> 00:10:50,100
bounds, which is this right here.

260
00:10:51,500 --> 00:10:53,700
So when we move in the new state, yeah.

261
00:10:53,700 --> 00:10:53,900
Okay.

262
00:10:53,900 --> 00:10:56,600
So we're good, when we check the new state, what we want to do is we

263
00:10:56,600 --> 00:10:59,400
want to use the new camera position because that is what should pull

264
00:10:59,400 --> 00:10:59,700
things.

265
00:11:00,000 --> 00:11:01,500
That's what should pull in the new things.

266
00:11:01,700 --> 00:11:05,100
So we're going to use the new camera position and then the offset is

267
00:11:05,100 --> 00:11:07,900
going to be that rectangle, the camera bounds.

268
00:11:08,200 --> 00:11:11,500
And I want to basically get the, the Min of that, right?

269
00:11:11,500 --> 00:11:13,500
And I don't think we made like accessors for that yet.

270
00:11:13,500 --> 00:11:15,600
I'm going to go ahead and add those.

271
00:11:15,800 --> 00:11:18,600
I basically want to do a get man on the camera bands getman Corner,

272
00:11:19,100 --> 00:11:20,000
something like that, right?

273
00:11:20,000 --> 00:11:20,700
Get me in corner.

274
00:11:21,400 --> 00:11:24,100
So I want to get that open a map it in that I get my Min chunky and I

275
00:11:24,100 --> 00:11:26,000
do the same thing for the opposite corner, right?

276
00:11:26,000 --> 00:11:28,600
So I can get the maximum corner of that rectangle, right?

277
00:11:29,100 --> 00:11:29,800
And that will give me

278
00:11:29,900 --> 00:11:30,700
the same thing.

279
00:11:31,600 --> 00:11:35,400
Once I've done that, now, I know that I can just straight-up read the

280
00:11:35,400 --> 00:11:38,700
minimum and maximum chunk positions right out of here, right?

281
00:11:38,800 --> 00:11:41,000
So I really don't even need these anymore.

282
00:11:41,200 --> 00:11:45,100
I can get rid of that entirely and I can go ahead and introduce the

283
00:11:45,100 --> 00:11:45,900
for Loop here.

284
00:11:46,400 --> 00:11:47,000
Like so,

285
00:11:48,700 --> 00:11:54,400
Where I just Loop over all of those chunks that are involved, right?

286
00:11:54,500 --> 00:11:56,800
So I've got, I've got my chunk X.

287
00:11:56,900 --> 00:11:57,600
Let's see here.

288
00:11:58,300 --> 00:11:59,800
Where's the position, right?

289
00:12:00,000 --> 00:12:03,000
Ago, so, I've got my chunk X, and that's going to start from the

290
00:12:03,000 --> 00:12:05,100
minimum chunks, chunk X, right?

291
00:12:05,100 --> 00:12:09,000
And then it's going to go until it reaches, and we actually want to

292
00:12:09,000 --> 00:12:12,800
include because this is the chunk that actually includes the maximum

293
00:12:13,100 --> 00:12:14,600
bound of our rectangular, right?

294
00:12:14,600 --> 00:12:15,700
So, I'm going to include it there.

295
00:12:16,300 --> 00:12:19,400
So this will Loop over from the Min chunk to the max chunks X.

296
00:12:20,100 --> 00:12:22,300
And, I guess I want to go by, why first that tends to be our

297
00:12:22,300 --> 00:12:23,300
convention only ABO.

298
00:12:23,300 --> 00:12:25,300
Since we're going through a hash table in this case.

299
00:12:25,300 --> 00:12:26,900
It doesn't matter which one We're looping over.

300
00:12:26,900 --> 00:12:27,600
First at all.

301
00:12:27,900 --> 00:12:29,600
I guess I should also just go ahead and copy this.

302
00:12:30,000 --> 00:12:32,100
And just say, hey, what that was a x.

303
00:12:32,200 --> 00:12:33,000
Now, it's a why?

304
00:12:33,600 --> 00:12:37,400
Okay, so that's going to Loop over all of the chunks and for each

305
00:12:37,400 --> 00:12:40,600
chunk, now we can pull that chunk out and look at all of the entities

306
00:12:40,600 --> 00:12:41,300
that are in it.

307
00:12:43,600 --> 00:12:44,200
Right.

308
00:12:45,400 --> 00:12:47,700
And this is probably going to be a common thing for us to do.

309
00:12:47,700 --> 00:12:51,500
And so once we write this Loop, we want may want to consider the next

310
00:12:51,500 --> 00:12:53,600
time love to, you know, make a little mental note.

311
00:12:53,600 --> 00:12:55,900
The next time that we want to Loop over all the entities that are in a

312
00:12:55,900 --> 00:12:59,400
particular chunk or range of chunks for that matter.

313
00:12:59,400 --> 00:13:03,500
We met model, make an accessor that makes it easier for us to do that.

314
00:13:04,000 --> 00:13:07,900
So I'm going to go ahead now and take a look at this world chunk

315
00:13:07,900 --> 00:13:08,200
stuff.

316
00:13:08,200 --> 00:13:12,000
I know I've got my, my get World, Chuck call here, right?

317
00:13:12,200 --> 00:13:13,400
Going to go ahead and call that.

318
00:13:13,900 --> 00:13:15,100
I'm going to grab the chunk.

319
00:13:16,500 --> 00:13:20,600
And that chunk is the one that's our chunk X chunk.

320
00:13:20,600 --> 00:13:23,900
Y&r chunk Z is just going to be whatever the new camera P was.

321
00:13:23,900 --> 00:13:27,000
Because at the moment, we've really kind of gimped out on Z.

322
00:13:27,000 --> 00:13:29,800
We don't really do anything intelligent with Z.

323
00:13:29,900 --> 00:13:32,000
That's something we're going to have to think about and basically

324
00:13:32,700 --> 00:13:34,500
before we kind of move on with the engine, I'm going to have to

325
00:13:34,500 --> 00:13:38,800
basically add some stairs for real and or, you know, something go kind

326
00:13:38,800 --> 00:13:40,500
of down into into like a cave or something.

327
00:13:40,700 --> 00:13:43,200
So we can kind of see how we want to handle Z because I'm not still

328
00:13:43,200 --> 00:13:44,000
not sure about it.

329
00:13:44,000 --> 00:13:46,100
I'm not sure exactly how we want Z to work.

330
00:13:46,400 --> 00:13:49,100
There's a lot of questions there, but we know how we want X and Y to

331
00:13:49,100 --> 00:13:50,500
work, so we're making sure that those were.

332
00:13:51,100 --> 00:13:51,400
All right.

333
00:13:51,400 --> 00:13:52,600
So I go into the world chunk.

334
00:13:52,600 --> 00:13:53,600
I grab that out.

335
00:13:54,100 --> 00:13:55,500
Remember we may not have.

336
00:13:55,500 --> 00:13:56,600
There may not be a chunk there.

337
00:13:56,600 --> 00:13:58,300
There may just be nothing there and that's fine.

338
00:13:58,300 --> 00:14:00,500
So we want to allow that so we check to make sure that they're

339
00:14:00,500 --> 00:14:01,200
actually is anything.

340
00:14:01,200 --> 00:14:04,700
They're assuming that there is something there, we can go ahead and

341
00:14:04,700 --> 00:14:07,300
loop through the entity count on the chunk.

342
00:14:08,100 --> 00:14:09,000
Because remember the chunks.

343
00:14:10,500 --> 00:14:12,200
Oh, I've got there's one more iteration here.

344
00:14:12,200 --> 00:14:12,600
Right?

345
00:14:12,600 --> 00:14:13,600
We've got these blocks.

346
00:14:15,100 --> 00:14:18,400
So we've got rolled empty block, world into d block.

347
00:14:18,400 --> 00:14:22,100
We grab that out of the chunk first walk, right?

348
00:14:22,100 --> 00:14:26,100
Like so we then just go anytime.

349
00:14:26,800 --> 00:14:29,500
There is a next pointer, we Chase it and then we look at all the

350
00:14:29,500 --> 00:14:30,900
entities in that chunk.

351
00:14:31,000 --> 00:14:31,700
Right?

352
00:14:31,800 --> 00:14:37,400
So for any one of these blocks, we do that and we get the entity out

353
00:14:38,100 --> 00:14:40,200
by looking at the low entity index.

354
00:14:41,200 --> 00:14:42,500
Array in there.

355
00:14:42,500 --> 00:14:46,400
So there we go, and that grabs it for us at that point.

356
00:14:46,400 --> 00:14:50,400
We know that they have to be so we could even assert or we don't have

357
00:14:50,400 --> 00:14:51,100
to assert never mind.

358
00:14:51,100 --> 00:14:54,100
We have to look to see that there isn't already a high index for that

359
00:14:54,100 --> 00:14:54,900
low any index.

360
00:14:55,300 --> 00:14:58,900
And then we can just go ahead and check at that point to see whether

361
00:14:58,900 --> 00:14:59,800
or not it would be.

362
00:15:00,000 --> 00:15:01,500
In the bounds or not.

363
00:15:01,500 --> 00:15:05,000
And so that's kind of interesting actually, because that means that

364
00:15:05,000 --> 00:15:08,600
the make entity high frequency where that is kind of, has to be broken

365
00:15:08,600 --> 00:15:11,500
up into two two parts.

366
00:15:11,500 --> 00:15:12,700
You'll see why in a second.

367
00:15:13,300 --> 00:15:17,600
So this right here that actually computes the position of it, right?

368
00:15:17,700 --> 00:15:18,700
This part.

369
00:15:18,800 --> 00:15:22,800
I kind of want to be able to do that first before I commit to making

370
00:15:22,800 --> 00:15:25,100
them high so I can check it against the camera bounds.

371
00:15:25,600 --> 00:15:29,900
So really what I want to do is essentially have another version of

372
00:15:30,000 --> 00:15:35,200
This right of May, Kennedy, high frequency, which is exactly the same

373
00:15:36,000 --> 00:15:38,300
and does most of the same stuff, right?

374
00:15:38,500 --> 00:15:44,500
But what it actually will do is in, in the, in the case where where

375
00:15:44,500 --> 00:15:49,000
you're calling it at sort of the lower level you will pass in the new

376
00:15:49,000 --> 00:15:51,300
P that you want it to use, right?

377
00:15:51,300 --> 00:15:55,000
So this this P right here and in the case where you're not going to

378
00:15:55,000 --> 00:15:59,700
pass that then it will just do this this code right here, right?

379
00:16:00,100 --> 00:16:02,300
so basically, that

380
00:16:04,500 --> 00:16:08,400
This is the this is the camera space key, right?

381
00:16:08,600 --> 00:16:09,800
So what we'll do here.

382
00:16:10,100 --> 00:16:11,300
Hopefully, this makes some sense.

383
00:16:11,800 --> 00:16:14,800
What we'll do here is, we'll say, all right, we'll just set the camera

384
00:16:14,800 --> 00:16:15,800
space Peak here.

385
00:16:15,900 --> 00:16:19,400
And if someone who doesn't know what the camera stays p is, then it'll

386
00:16:19,400 --> 00:16:20,800
do it like that.

387
00:16:20,900 --> 00:16:21,600
Right?

388
00:16:21,800 --> 00:16:22,500
And furthermore.

389
00:16:22,500 --> 00:16:27,500
I'll probably take it one step further and say in line V to get camera

390
00:16:27,700 --> 00:16:28,900
space p.

391
00:16:29,500 --> 00:16:33,200
And that will, you know, you'll do that off of a low entity

392
00:16:33,200 --> 00:16:33,800
essentially.

393
00:16:36,800 --> 00:16:39,500
And and I guess for purposes of this as well.

394
00:16:39,700 --> 00:16:44,100
I will also pass that low entity pointer because you're going to have

395
00:16:44,100 --> 00:16:44,900
to grab that as well.

396
00:16:44,900 --> 00:16:47,800
So the low entity pointer will be here like that.

397
00:16:51,000 --> 00:16:51,500
Excuse me.

398
00:16:52,800 --> 00:16:55,100
And again, this is just making sort of a lower-level call.

399
00:16:55,500 --> 00:16:57,500
This does not really need to be in line out.

400
00:16:57,500 --> 00:16:59,300
Think that's probably at this point.

401
00:16:59,400 --> 00:17:01,400
Well, I mean, I guess it could be because it's probably only happening

402
00:17:01,400 --> 00:17:02,000
at two places.

403
00:17:02,000 --> 00:17:02,600
So maybe it should be.

404
00:17:02,600 --> 00:17:03,000
I don't know.

405
00:17:03,000 --> 00:17:03,500
Hard to say.

406
00:17:03,800 --> 00:17:04,900
I don't think too hard about that.

407
00:17:04,900 --> 00:17:07,200
Like I said, that's something more for the profiling pass.

408
00:17:07,800 --> 00:17:08,400
But yeah.

409
00:17:09,500 --> 00:17:10,200
Just chill.

410
00:17:10,200 --> 00:17:14,200
Typically, those just tend to be notes to myself about things that I

411
00:17:14,200 --> 00:17:14,700
suspect.

412
00:17:14,700 --> 00:17:17,300
I probably will want to make in line at some point.

413
00:17:17,500 --> 00:17:18,099
All right.

414
00:17:18,400 --> 00:17:19,599
So here we go.

415
00:17:20,300 --> 00:17:23,800
This will actually move up here now and entity.

416
00:17:23,800 --> 00:17:26,099
So that's actually just this.

417
00:17:26,300 --> 00:17:28,900
This is our result, go.

418
00:17:30,000 --> 00:17:30,600
All right.

419
00:17:30,800 --> 00:17:33,500
So this will compute that camera stays P that we were previously doing

420
00:17:33,500 --> 00:17:34,900
before just right in line.

421
00:17:35,500 --> 00:17:38,400
And you can see that it needs the game state to look at where the

422
00:17:38,400 --> 00:17:39,300
camera actually is.

423
00:17:39,300 --> 00:17:40,900
So that'll get the camera space p.

424
00:17:41,400 --> 00:17:43,400
So if you call make high energy, high frequency.

425
00:17:43,400 --> 00:17:46,200
Now, what we're going to do is just go ahead and punt to the other

426
00:17:46,200 --> 00:17:52,800
call entity high, like so and we will just pass all of the same stuff

427
00:17:52,800 --> 00:17:56,200
here, but we will go ahead and do that work.

428
00:17:56,400 --> 00:17:58,800
That wasn't happening before.

429
00:17:58,800 --> 00:17:59,700
So we will go ahead.

430
00:17:59,800 --> 00:17:59,900
Ed.

431
00:18:00,000 --> 00:18:02,800
And we'll grab the low entities like so.

432
00:18:04,800 --> 00:18:05,400
Right?

433
00:18:06,200 --> 00:18:12,500
And when we grab that low entity, we will at that point I guess so, I

434
00:18:12,500 --> 00:18:15,300
guess do we really need to check this?

435
00:18:15,500 --> 00:18:21,200
Because I guess what we really want to do is is sort of.

436
00:18:21,300 --> 00:18:22,200
Hmm.

437
00:18:22,200 --> 00:18:23,100
I got think about this little bit.

438
00:18:23,100 --> 00:18:23,800
Hold on a second.

439
00:18:31,700 --> 00:18:34,000
I think, what I want to do is say this is a low-level call.

440
00:18:35,100 --> 00:18:35,700
Right.

441
00:18:36,700 --> 00:18:39,900
So what I want to do is say that check, right?

442
00:18:39,900 --> 00:18:41,300
Is going to happen here.

443
00:18:41,400 --> 00:18:44,900
Actually, and this is actually going to be an assertion.

444
00:18:45,300 --> 00:18:49,200
So basically, if you're calling this routine, this is the lower level

445
00:18:49,200 --> 00:18:49,900
routine.

446
00:18:50,100 --> 00:18:56,900
I'm expecting just flat out that you did not that.

447
00:18:56,900 --> 00:18:58,300
This was not there, right?

448
00:18:58,300 --> 00:19:00,700
And, I guess I could be, I could get, I could guard it a little to

449
00:19:00,700 --> 00:19:03,900
make sure we don't go horribly wrong.

450
00:19:04,500 --> 00:19:09,800
But I'm going to I'm just going to assume that it's not there in this

451
00:19:09,800 --> 00:19:11,500
particular in this particular case.

452
00:19:11,900 --> 00:19:14,000
So yeah, I think I like that better.

453
00:19:14,400 --> 00:19:16,900
So then when you call this one, which is the kind of fire-and-forget

454
00:19:16,900 --> 00:19:19,100
method, where you don't necessarily know what's going on.

455
00:19:19,100 --> 00:19:20,500
I'm going to change this to my standard form.

456
00:19:20,500 --> 00:19:22,700
So I kind of decided to stop using the addressing forms.

457
00:19:22,700 --> 00:19:23,800
It's not what I normally do.

458
00:19:24,200 --> 00:19:27,700
I was doing it for purposes of the stream, but it didn't stick.

459
00:19:28,400 --> 00:19:30,900
So anyway, I'm going to go ahead and say, all right, get the entity

460
00:19:30,900 --> 00:19:33,900
low, if it's already got a hype and do nothing if it does.

461
00:19:35,400 --> 00:19:36,400
Then we'll do it this way.

462
00:19:37,000 --> 00:19:38,700
And this has got to be obviously.

463
00:19:39,800 --> 00:19:40,300
Oops.

464
00:19:41,700 --> 00:19:42,100
Hi.

465
00:19:42,300 --> 00:19:43,600
This is got to be declared out here.

466
00:19:45,100 --> 00:19:48,200
Either we grab it from the ones that already exist, or we go ahead and

467
00:19:48,200 --> 00:19:53,200
make it and then we return out the entity that we that we found found

468
00:19:53,200 --> 00:19:56,700
or made and then this will stay still make it exactly as it did

469
00:19:56,700 --> 00:19:57,300
before.

470
00:19:57,900 --> 00:20:01,400
And, of course, now, we have to actually call this function to get the

471
00:20:01,400 --> 00:20:02,400
camera space p.

472
00:20:02,600 --> 00:20:06,000
In the case, where we have to actually make it because now to two-part

473
00:20:06,000 --> 00:20:12,000
call, so this is the camera space pee right here and that will do

474
00:20:12,600 --> 00:20:14,200
nicely, I think.

475
00:20:14,800 --> 00:20:18,300
So that gets the camera space p and passes it, right?

476
00:20:18,300 --> 00:20:23,000
So now because we have this broken into parts, now, it's a lot easier

477
00:20:23,000 --> 00:20:24,300
for us to deal with here.

478
00:20:24,300 --> 00:20:27,800
We know that we've already checked against all of this stuff so we can

479
00:20:27,800 --> 00:20:29,000
grab the cameras based P.

480
00:20:29,000 --> 00:20:34,000
After that point, we grab that low entity out, and then we can use the

481
00:20:34,000 --> 00:20:38,500
exact same check that was happening here in offset, check frequency by

482
00:20:38,500 --> 00:20:39,000
area.

483
00:20:39,000 --> 00:20:43,600
And so, let's go ahead and grab that offset check frequency by area

484
00:20:43,600 --> 00:20:44,700
and we will

485
00:20:44,800 --> 00:20:49,900
Go ahead and grab that is in a rectangle call right here, right.

486
00:20:50,900 --> 00:20:55,200
So we could make that call, we check the camera space p, okay, and

487
00:20:55,200 --> 00:20:57,800
this is going to be our camera bounds like that.

488
00:20:58,600 --> 00:20:59,700
And then, if it's

489
00:21:00,000 --> 00:21:01,500
Assuming that it's in that rectangle.

490
00:21:01,500 --> 00:21:04,200
Now, we know that it's definitely a candidate for moving into the

491
00:21:04,200 --> 00:21:07,800
height space so we can go ahead and do that and we can do that with

492
00:21:07,800 --> 00:21:08,500
the stuff.

493
00:21:08,500 --> 00:21:09,300
We've already computed.

494
00:21:09,300 --> 00:21:11,100
So we don't waste anything.

495
00:21:11,300 --> 00:21:12,900
They're all right.

496
00:21:12,900 --> 00:21:14,100
So we've done that.

497
00:21:14,200 --> 00:21:17,800
And we're happy, everyone's happy in the world.

498
00:21:18,200 --> 00:21:21,500
And so now, all we have to do is just we change that map into tile

499
00:21:21,500 --> 00:21:27,400
space obviously to the map into chunks face right into chunk space,

500
00:21:27,400 --> 00:21:28,000
like, so.

501
00:21:28,900 --> 00:21:29,800
And now we just need our

502
00:21:30,000 --> 00:21:33,400
Batman Corner, get Max Corner, making it a high-frequency.

503
00:21:33,400 --> 00:21:35,700
None of the to overloads could handle the argument types.

504
00:21:36,000 --> 00:21:37,400
What did I forget?

505
00:21:37,400 --> 00:21:39,600
Is it that the low comes first or something?

506
00:21:39,600 --> 00:21:40,400
Yes, I suppose.

507
00:21:40,400 --> 00:21:44,400
That is, and so in our math Library, we've got those rectangles.

508
00:21:44,400 --> 00:21:45,100
We defined them.

509
00:21:45,100 --> 00:21:48,800
We haven't really done much work to make this a nice sort of struct to

510
00:21:48,800 --> 00:21:53,600
deal with, but I'm going to have a get min corner and a get Max Corner

511
00:21:53,900 --> 00:21:57,200
that so that I can, you know, grab those out.

512
00:21:57,200 --> 00:21:59,800
And again, the reason I'm doing that is just because I

513
00:22:00,000 --> 00:22:03,300
- nicer in the code to be able to kind of say, what I want to get out

514
00:22:03,300 --> 00:22:03,700
of them.

515
00:22:04,200 --> 00:22:06,700
And so later, I'll probably, you know, we could also do something like

516
00:22:06,700 --> 00:22:09,900
this, get center-right, these sorts of things.

517
00:22:10,400 --> 00:22:15,300
So, when I have my rectangle in any of these cases, what I'm actually

518
00:22:15,300 --> 00:22:19,200
doing here is just sort of returning out whatever the part is that the

519
00:22:19,200 --> 00:22:22,600
person wanted its result equals recommend.

520
00:22:22,600 --> 00:22:26,400
So there's that and there's that.

521
00:22:26,800 --> 00:22:29,800
So I will quickly blast

522
00:22:29,900 --> 00:22:35,200
Those in so and then this one will just be obviously the Min plus the

523
00:22:35,200 --> 00:22:36,600
max divided by 2.

524
00:22:36,600 --> 00:22:37,700
That's the right.

525
00:22:37,700 --> 00:22:42,000
I mean the equation for the center of a rectangle is just halfway in

526
00:22:42,000 --> 00:22:45,900
between one, the minimum corner, and the maximum corner at the center.

527
00:22:45,900 --> 00:22:48,000
So if you want to get the center of rectangle, we could do it that way

528
00:22:48,200 --> 00:22:48,700
and so on.

529
00:22:48,700 --> 00:22:51,600
So that just gives us a little more flexibility there and then we're

530
00:22:51,600 --> 00:22:52,000
good.

531
00:22:52,200 --> 00:22:55,000
Now, what's important to remember is, we probably have a lot of

532
00:22:55,000 --> 00:22:58,100
debugging to do now because we have, we wrote a ton of code yesterday

533
00:22:58,100 --> 00:22:58,500
and today.

534
00:22:58,500 --> 00:22:59,800
I mean not a ton of code, but you know,

535
00:23:00,000 --> 00:23:03,700
Was only in part part of a small part of an hour, but we still did a

536
00:23:03,700 --> 00:23:04,300
lot of typing.

537
00:23:05,000 --> 00:23:06,200
We probably got some bugs in here.

538
00:23:06,200 --> 00:23:08,800
So we probably have to step through and see what's going on.

539
00:23:09,200 --> 00:23:14,300
Just to figure out all what's happening and to make sure that things

540
00:23:14,300 --> 00:23:15,000
aren't going wrong.

541
00:23:15,100 --> 00:23:15,300
All right.

542
00:23:15,300 --> 00:23:17,500
So first things first, assertion checks, we're getting the assertion

543
00:23:17,500 --> 00:23:17,800
here.

544
00:23:18,400 --> 00:23:22,000
Someone is actually trying to make any high frequency who apparently

545
00:23:22,000 --> 00:23:23,500
already is high frequency.

546
00:23:24,100 --> 00:23:27,300
And so I'm just going to go ahead and try to find out why that is

547
00:23:27,300 --> 00:23:27,900
happening.

548
00:23:28,200 --> 00:23:29,500
Let's take a look.

549
00:23:30,800 --> 00:23:36,200
At that, so okay, that was from a call for get high entity, who is

550
00:23:36,200 --> 00:23:38,600
doing that this was doing that.

551
00:23:38,600 --> 00:23:43,300
So this was calling get high entity, get high entity is actually

552
00:23:43,300 --> 00:23:47,100
turning something into, was that the intention of this call.

553
00:23:47,200 --> 00:23:48,500
I'm kind of interested in that.

554
00:23:50,300 --> 00:23:51,500
That's, that's kind of that.

555
00:23:51,500 --> 00:23:55,800
It's making something high frequency when when I don't know whether

556
00:23:55,800 --> 00:23:57,800
that's really what we attended, but will, okay.

557
00:23:57,800 --> 00:23:59,000
I won't think we'll think about that.

558
00:23:59,000 --> 00:23:59,500
A little later.

559
00:24:00,000 --> 00:24:04,600
Anyway, when we go to make that high high frequency, obviously this

560
00:24:04,600 --> 00:24:06,800
this function should have checked against that.

561
00:24:06,800 --> 00:24:11,000
Right this entity low high, into the index should have guarded against

562
00:24:11,000 --> 00:24:11,300
it.

563
00:24:11,400 --> 00:24:16,500
So I'm kind of confused as to why oh, it's easy.

564
00:24:16,900 --> 00:24:17,300
Wow.

565
00:24:18,200 --> 00:24:18,800
Took me a while.

566
00:24:18,800 --> 00:24:21,400
I just assumed that there is a bug but there actually wasn't a bug.

567
00:24:21,400 --> 00:24:22,200
It's just the assertion.

568
00:24:22,200 --> 00:24:22,800
That's broken.

569
00:24:23,800 --> 00:24:24,800
That's the bug.

570
00:24:25,100 --> 00:24:28,300
So we're trying to assert that it is equal to 0.

571
00:24:28,400 --> 00:24:29,100
Not that it's not.

572
00:24:29,100 --> 00:24:29,900
We want to make sure that

573
00:24:30,000 --> 00:24:32,100
That there isn't one yet because we're about to make one.

574
00:24:32,200 --> 00:24:32,700
Duh.

575
00:24:32,900 --> 00:24:33,900
All right, good work.

576
00:24:34,600 --> 00:24:35,200
All right.

577
00:24:35,200 --> 00:24:39,300
So now we're in a situation where we should be seeing entities because

578
00:24:39,300 --> 00:24:40,000
they should be.

579
00:24:40,000 --> 00:24:43,500
There should be some entities moving into the high space there but

580
00:24:43,500 --> 00:24:45,700
were they obviously aren't and.

581
00:24:45,700 --> 00:24:49,000
So what we need to do now is actually start going through our spatial

582
00:24:49,000 --> 00:24:52,800
partition, debugging it, making sure that it's working properly and

583
00:24:52,800 --> 00:24:54,200
making sure that our query for it.

584
00:24:54,200 --> 00:24:55,600
There is also working properly.

585
00:24:56,100 --> 00:24:59,500
Alright, so the first place to start is where we actually add things

586
00:24:59,500 --> 00:24:59,900
in.

587
00:25:00,900 --> 00:25:03,200
Which is here, let's see.

588
00:25:03,200 --> 00:25:04,900
Where do we actually put up?

589
00:25:07,100 --> 00:25:10,100
Well, again, maybe we still don't have any bugs.

590
00:25:10,100 --> 00:25:15,100
We just haven't finished yet, because really, where is the actual?

591
00:25:15,100 --> 00:25:15,200
No?

592
00:25:15,200 --> 00:25:15,500
Okay.

593
00:25:15,500 --> 00:25:15,900
Here it is.

594
00:25:15,900 --> 00:25:18,100
I say we we actually do add something, right?

595
00:25:18,400 --> 00:25:20,200
So we do an ad wall call.

596
00:25:21,100 --> 00:25:23,100
And so, let's take a look at our ad wall call.

597
00:25:23,100 --> 00:25:24,000
That's the first place.

598
00:25:24,000 --> 00:25:26,000
We really use the spatial partition.

599
00:25:26,200 --> 00:25:26,700
Right?

600
00:25:26,700 --> 00:25:28,600
And so, let's go ahead and step in there.

601
00:25:28,600 --> 00:25:30,500
And let's actually try to verify that.

602
00:25:30,700 --> 00:25:33,700
Spatial partition is working the way we think it is and it's actually

603
00:25:33,700 --> 00:25:34,700
adding this in the right place.

604
00:25:34,700 --> 00:25:37,800
And because we've got a multiple sort of specific parties here.

605
00:25:38,200 --> 00:25:40,700
For example, this chunk position from towel position is something that

606
00:25:40,700 --> 00:25:42,800
we also recently, which could be totally wrong.

607
00:25:42,900 --> 00:25:45,900
The entities could be adding just fine into our system but could be

608
00:25:45,900 --> 00:25:48,700
being added in the wrong place for example, so there's a lot of stuff

609
00:25:48,700 --> 00:25:51,400
like that, that we want to kind of figure out what's going on with.

610
00:25:51,400 --> 00:25:55,300
And there's something else that I don't quite remember if we did yet

611
00:25:55,300 --> 00:26:00,400
or not, which is when we actually do that, dif that subtraction.

612
00:26:00,400 --> 00:26:00,500
I

613
00:26:00,600 --> 00:26:03,800
I want to check this first before we start when we do that.

614
00:26:03,800 --> 00:26:04,700
Subtraction.

615
00:26:05,000 --> 00:26:06,800
How are we actually Computing?

616
00:26:06,800 --> 00:26:07,900
Where things are.

617
00:26:07,900 --> 00:26:11,200
I just wanted to kind of see how we were doing that in.

618
00:26:13,400 --> 00:26:15,100
In the diff function, right?

619
00:26:15,100 --> 00:26:17,400
There's that there's open subtract rather.

620
00:26:18,200 --> 00:26:22,700
So the subtract function here and this chunk position from top

621
00:26:22,700 --> 00:26:23,200
position.

622
00:26:23,400 --> 00:26:25,700
Obviously kind of have to match up to some degree.

623
00:26:25,700 --> 00:26:27,200
But anyway, I just want to take a look at that here.

624
00:26:27,200 --> 00:26:30,300
So, when we do that, what we're doing is, we're multiplying, the chunk

625
00:26:30,300 --> 00:26:34,900
side and M by the difference, which is that's correct.

626
00:26:34,900 --> 00:26:36,700
That's what I would have ejected.

627
00:26:37,300 --> 00:26:40,100
So that seems fine.

628
00:26:40,200 --> 00:26:40,700
OK.

629
00:26:40,800 --> 00:26:42,100
Alright, so that seems

630
00:26:42,700 --> 00:26:44,000
Totally reasonable.

631
00:26:44,000 --> 00:26:44,700
All right.

632
00:26:45,000 --> 00:26:50,200
So let's go ahead and step in and let's take a look at at that

633
00:26:50,200 --> 00:26:51,500
process, right?

634
00:26:52,700 --> 00:26:53,300
Here we go.

635
00:26:53,300 --> 00:26:56,100
I believe this is the first thing that gets added would be one of

636
00:26:56,100 --> 00:26:56,800
these walls.

637
00:26:57,100 --> 00:26:59,800
And so, the walls being added at the nice location of

638
00:27:00,000 --> 00:27:01,900
00, that's pretty darn handy.

639
00:27:02,000 --> 00:27:05,600
We couldn't ask for an easier position to follow through than that, I

640
00:27:05,600 --> 00:27:06,200
suppose.

641
00:27:06,600 --> 00:27:07,700
So, here we go.

642
00:27:07,800 --> 00:27:09,200
We go ahead and get them into the low.

643
00:27:09,200 --> 00:27:11,600
And we assume that that is working because we haven't actually changed

644
00:27:11,600 --> 00:27:12,500
that code at all.

645
00:27:13,000 --> 00:27:14,100
That was working already.

646
00:27:14,400 --> 00:27:17,800
So we get an entity type of wall here where we haven't set its

647
00:27:17,800 --> 00:27:20,700
position yet or its width or height or anything.

648
00:27:21,300 --> 00:27:24,100
And so the next thing we're going to do is try to figure out where it

649
00:27:24,100 --> 00:27:26,400
actually is in terms of chunks.

650
00:27:26,800 --> 00:27:29,800
So we go in here and let's take a look at what that ends up.

651
00:27:30,000 --> 00:27:30,400
Being.

652
00:27:31,700 --> 00:27:36,600
Our results should be 0, 0 0, which it is our X and Y offsets are also

653
00:27:36,600 --> 00:27:40,200
zero, which I'm not sure if that's a logical or not.

654
00:27:40,400 --> 00:27:41,900
We think about that for a second.

655
00:27:42,600 --> 00:27:49,200
So the ab style x- the tiles per chunk has world says, yeah, so I

656
00:27:49,200 --> 00:27:50,700
think we may have a thing.

657
00:27:50,900 --> 00:27:54,800
We may have a problem here where tiles are going to kind of be off

658
00:27:54,800 --> 00:27:57,000
center from chunk boundary.

659
00:27:57,100 --> 00:28:00,700
We we should think about this a little bit harder about how we want to

660
00:28:00,700 --> 00:28:01,000
align.

661
00:28:01,200 --> 00:28:02,900
Our tiles for now.

662
00:28:03,800 --> 00:28:07,400
I'm going to go ahead and put it to do there actually before we go any

663
00:28:07,400 --> 00:28:10,700
further because I want to make sure we have a sort of, a coherent

664
00:28:10,700 --> 00:28:13,200
theory for how tiles line up a chunks.

665
00:28:13,500 --> 00:28:15,900
And I don't think we quite have done that yet.

666
00:28:15,900 --> 00:28:19,400
So let's go ahead and here and made parole dot CPP.

667
00:28:20,100 --> 00:28:21,000
And in here.

668
00:28:21,000 --> 00:28:27,800
Let's go to do decide on pile alignment in chunks, that won't affect

669
00:28:27,800 --> 00:28:30,500
any of the code, but it will affect how are things are aligned on

670
00:28:30,500 --> 00:28:30,900
chunks.

671
00:28:31,300 --> 00:28:32,600
And that might be important later.

672
00:28:33,000 --> 00:28:34,800
Alright, so we come in here.

673
00:28:34,800 --> 00:28:36,400
We do this little bit.

674
00:28:38,100 --> 00:28:40,200
And so we have computed our offset.

675
00:28:40,200 --> 00:28:43,700
Our offset is straight zeros all the way through, right?

676
00:28:43,800 --> 00:28:49,000
So the the entities position that entity low should just be zero zeros

677
00:28:49,000 --> 00:28:51,800
everywhere and it is that all looks good.

678
00:28:52,300 --> 00:28:54,100
We set the width and height and we're done.

679
00:28:54,200 --> 00:28:56,800
Okay, you know what?

680
00:28:56,800 --> 00:28:57,500
I just realized, though.

681
00:28:57,500 --> 00:29:00,900
Do we ever bother to insert it into the special partition into the

682
00:29:00,900 --> 00:29:01,900
actual spatial partition?

683
00:29:01,900 --> 00:29:02,800
I don't think we do.

684
00:29:02,800 --> 00:29:03,800
I don't think we did that at all.

685
00:29:03,800 --> 00:29:05,600
In fact, we did not right.

686
00:29:06,500 --> 00:29:07,300
Yeah, so that's all.

687
00:29:08,000 --> 00:29:08,900
So that's our problem.

688
00:29:09,300 --> 00:29:12,200
Or at least one of our problems in order to use the spatial partition.

689
00:29:12,200 --> 00:29:15,900
We're going to actually have to call it at some point.

690
00:29:15,900 --> 00:29:17,100
It can't magically know.

691
00:29:17,600 --> 00:29:21,500
So change entity location is going to have to be called at some point

692
00:29:21,500 --> 00:29:21,700
here.

693
00:29:21,700 --> 00:29:22,100
Right?

694
00:29:22,200 --> 00:29:24,400
This is the problem with doing stuff days separated.

695
00:29:24,400 --> 00:29:25,200
You don't remember that.

696
00:29:25,200 --> 00:29:29,500
You actually have to go actually use the code that you wrote.

697
00:29:29,700 --> 00:29:30,400
So that's fine.

698
00:29:30,600 --> 00:29:31,400
That's easy.

699
00:29:31,400 --> 00:29:32,300
Easy enough.

700
00:29:32,300 --> 00:29:33,700
So what I'd like to do here is go.

701
00:29:33,700 --> 00:29:34,300
Okay.

702
00:29:34,600 --> 00:29:36,100
We've got these things there.

703
00:29:36,700 --> 00:29:40,100
We're adding in the spatial partition since all entities have to be in

704
00:29:40,100 --> 00:29:40,900
the spatial partition.

705
00:29:40,900 --> 00:29:44,500
What I might do is say that that's just part of this from now on.

706
00:29:44,800 --> 00:29:47,200
So basically, you know,

707
00:29:48,700 --> 00:29:53,900
whenever you add an entity, you have to give it a PE, you have to give

708
00:29:53,900 --> 00:29:58,000
it that that chunk position where you want it to actually start.

709
00:29:58,200 --> 00:29:59,800
That may just be a requirement.

710
00:30:00,100 --> 00:30:03,000
So I'll, you know, I'll do that here and teepee.

711
00:30:04,800 --> 00:30:06,800
Tea or actually, that's right.

712
00:30:06,800 --> 00:30:07,900
That's World position.

713
00:30:09,200 --> 00:30:12,300
So and so that'll go ahead and get that for us.

714
00:30:12,500 --> 00:30:15,900
And then we'll just pass that in and then you don't initialize that

715
00:30:16,100 --> 00:30:16,700
yourself.

716
00:30:16,700 --> 00:30:20,700
So when you add a little entity that will actually add that in here

717
00:30:21,200 --> 00:30:25,500
like that and World position P will be there.

718
00:30:25,900 --> 00:30:27,600
All right, so we've got that all set up.

719
00:30:27,600 --> 00:30:28,800
That seems reasonable.

720
00:30:30,500 --> 00:30:35,000
And trying to think about exactly what else I want to do here.

721
00:30:35,000 --> 00:30:38,100
So when we do that, we'll have to do that for players as well.

722
00:30:38,300 --> 00:30:42,500
That seems pretty easy because right now we're just doing this, right?

723
00:30:42,500 --> 00:30:46,000
So our world position for them is that, so we'll just pass that as

724
00:30:46,000 --> 00:30:46,400
well.

725
00:30:46,700 --> 00:30:48,000
That seems totally fine.

726
00:30:48,400 --> 00:30:52,100
And so, now after we've done that, inside the low entity, we know that

727
00:30:52,100 --> 00:30:56,100
we can always, we can always actually update the entity properly here

728
00:30:56,500 --> 00:30:57,200
by doing this.

729
00:30:57,200 --> 00:30:58,600
So we've got our game State.

730
00:30:58,600 --> 00:31:00,200
I don't remember exactly what

731
00:31:00,400 --> 00:31:03,200
Irene has called in the game, State their World Arena.

732
00:31:03,200 --> 00:31:04,000
That's what it was.

733
00:31:04,600 --> 00:31:05,800
So we've got our World Arena.

734
00:31:05,800 --> 00:31:08,800
So we pass the World Arena down so that it can allocate more space for

735
00:31:08,800 --> 00:31:12,900
needs to, we pass the world down, which obviously, we will need.

736
00:31:13,900 --> 00:31:17,200
We passed that low entity index, which at this point oats.

737
00:31:17,200 --> 00:31:18,100
This is in the wrong place.

738
00:31:18,100 --> 00:31:19,300
I went wanted to in here.

739
00:31:19,700 --> 00:31:21,000
Sorry my bad.

740
00:31:22,300 --> 00:31:26,000
We passed that low into the index, which is where what which guy, this

741
00:31:26,000 --> 00:31:28,700
I actually is, he does not have an old position because he is

742
00:31:28,700 --> 00:31:29,400
brand-new.

743
00:31:29,800 --> 00:31:30,100
So we

744
00:31:30,300 --> 00:31:33,500
Pass 0 there and then we hate does have a new position which is that?

745
00:31:33,800 --> 00:31:34,800
That P location.

746
00:31:35,200 --> 00:31:37,500
So that adds him to the spatial partition.

747
00:31:37,700 --> 00:31:41,700
Of course, now, we need a way to actually update that where he is when

748
00:31:41,700 --> 00:31:42,600
things move.

749
00:31:42,600 --> 00:31:45,600
And right now, the only thing that can move is our move player call,

750
00:31:45,600 --> 00:31:45,900
right?

751
00:31:45,900 --> 00:31:47,200
I believe that's the only thing.

752
00:31:47,400 --> 00:31:52,500
So when we do the update to move it which I which is right here.

753
00:31:53,500 --> 00:31:58,100
I guess what we'll do at that stage right there is when we do that we

754
00:31:58,100 --> 00:32:02,200
will also update the enemy's location to its new location.

755
00:32:02,700 --> 00:32:06,300
So basically, the entities new position is now this, right?

756
00:32:07,500 --> 00:32:09,500
And it's an old position.

757
00:32:10,200 --> 00:32:11,300
We will remember.

758
00:32:11,300 --> 00:32:14,000
I believe we already did that by doing old player Pi.

759
00:32:14,000 --> 00:32:15,300
Don't know if we persist.

760
00:32:15,300 --> 00:32:20,100
Oh, no, we don't actually we never save the actual old world position.

761
00:32:21,300 --> 00:32:23,100
So let's take a look at

762
00:32:23,400 --> 00:32:27,200
Player, I guess we would do that actually right here.

763
00:32:27,400 --> 00:32:30,700
So what we would do is say World position.

764
00:32:30,900 --> 00:32:34,400
New key equals map into chunks base.

765
00:32:34,500 --> 00:32:35,100
There we go.

766
00:32:35,800 --> 00:32:39,700
Then we would do change entity location and that change into location.

767
00:32:39,700 --> 00:32:44,500
Call would take the old p and the new key.

768
00:32:45,000 --> 00:32:49,900
So there we go that and then we still need to actually assign it.

769
00:32:50,000 --> 00:32:52,400
I don't know if it'd be better to actually have change, empty

770
00:32:52,400 --> 00:32:53,000
location.

771
00:32:53,300 --> 00:32:56,400
Be the thing that does the assignment that does seem like something

772
00:32:56,400 --> 00:32:57,700
that maybe would be smart.

773
00:32:57,700 --> 00:32:59,800
But at the same time, I wonder if maybe these should

774
00:33:00,000 --> 00:33:03,000
To be bundled together as the call that changes.

775
00:33:03,300 --> 00:33:09,200
So, I think maybe this will be something like to do Casey bundle these

776
00:33:09,200 --> 00:33:13,600
together as the position update.

777
00:33:14,900 --> 00:33:15,300
That.

778
00:33:16,200 --> 00:33:18,200
So, let's take a look here.

779
00:33:18,700 --> 00:33:19,700
What is the problem?

780
00:33:19,700 --> 00:33:20,300
Cannot convert.

781
00:33:20,300 --> 00:33:21,500
Our went five provision star.

782
00:33:21,500 --> 00:33:22,700
So this takes a pointer.

783
00:33:22,800 --> 00:33:23,600
That's true.

784
00:33:24,500 --> 00:33:25,900
Entity index here.

785
00:33:26,000 --> 00:33:27,200
Do we know which entity index?

786
00:33:27,200 --> 00:33:28,200
We're talking about.

787
00:33:29,000 --> 00:33:32,700
We probably do because I suspect it is in this entity structure if it

788
00:33:32,700 --> 00:33:33,700
isn't, it should be.

789
00:33:34,100 --> 00:33:37,100
And so that's something to take a look at their it is the low index is

790
00:33:37,100 --> 00:33:37,700
right there.

791
00:33:38,300 --> 00:33:39,300
So that's good.

792
00:33:39,400 --> 00:33:41,400
So all we need to do is pass its low index.

793
00:33:42,900 --> 00:33:47,100
Like so and let's see.

794
00:33:47,800 --> 00:33:51,800
We also have to pass these as pointers.

795
00:33:53,100 --> 00:33:53,400
There we go.

796
00:33:55,300 --> 00:33:57,800
Add low entity function is not take two arguments.

797
00:33:58,000 --> 00:33:58,700
That is correct.

798
00:33:58,700 --> 00:33:59,400
It does not.

799
00:34:00,100 --> 00:34:02,600
And so we need to pass a world position here.

800
00:34:03,100 --> 00:34:06,800
And so I guess we will just pass that as develop position and we'll

801
00:34:06,800 --> 00:34:08,000
pass that in now.

802
00:34:08,000 --> 00:34:11,900
It would be nice if this was not in the spatial partition, so I wonder

803
00:34:11,900 --> 00:34:15,500
if there should be a way for us to avoid adding someone just for that

804
00:34:15,500 --> 00:34:15,800
one.

805
00:34:15,800 --> 00:34:16,600
No entity.

806
00:34:17,500 --> 00:34:20,199
And I know, I don't know how I feel about that one way or the other.

807
00:34:20,900 --> 00:34:21,800
Do we want them in the state?

808
00:34:21,800 --> 00:34:22,800
We want them, or don't we?

809
00:34:23,000 --> 00:34:23,500
Do we want more?

810
00:34:23,500 --> 00:34:23,800
Don't we?

811
00:34:23,800 --> 00:34:24,800
I don't think we do.

812
00:34:25,100 --> 00:34:28,500
So when we do add low entity, I wonder if maybe we don't actually want

813
00:34:28,500 --> 00:34:29,300
to do that.

814
00:34:29,600 --> 00:34:32,300
What we could do is something like this, right?

815
00:34:32,300 --> 00:34:35,900
And we could do something where we say like that, right?

816
00:34:35,900 --> 00:34:39,800
Where, you know, you it's optional, if you pass that position in, I

817
00:34:39,800 --> 00:34:41,199
don't know if I love that.

818
00:34:41,800 --> 00:34:44,199
It's just something that we could think about doing so that way you

819
00:34:44,199 --> 00:34:47,199
can look but it's only for that one guy and seems kind of janky, so,

820
00:34:47,199 --> 00:34:50,199
maybe what we should do is just leave space for the low entity in a

821
00:34:50,199 --> 00:34:52,600
different way that doesn't involve us doing that.

822
00:34:53,400 --> 00:34:53,800
All right.

823
00:34:53,800 --> 00:34:55,699
So that's about it.

824
00:34:56,500 --> 00:34:56,900
Again.

825
00:34:56,900 --> 00:34:59,200
We haven't actually gone through into bugged our spatial partition

826
00:34:59,200 --> 00:34:59,500
yet.

827
00:34:59,500 --> 00:35:04,100
So we're just kind of seeing what's going on that doesn't look right

828
00:35:04,100 --> 00:35:04,500
at all.

829
00:35:04,500 --> 00:35:05,800
So I think we still got bugs.

830
00:35:05,800 --> 00:35:08,000
But at least we kind of know.

831
00:35:08,700 --> 00:35:10,500
We're guess we're getting a little bit better.

832
00:35:10,500 --> 00:35:12,300
So that's a good sign I suppose.

833
00:35:13,700 --> 00:35:14,300
All right.

834
00:35:14,700 --> 00:35:16,300
So let's continue on here.

835
00:35:17,800 --> 00:35:21,000
Trying to figure out if everything's working properly, which obviously

836
00:35:21,000 --> 00:35:24,300
doesn't I guess actually because that should look, you know, why

837
00:35:24,300 --> 00:35:25,900
aren't those tiles there?

838
00:35:25,900 --> 00:35:27,600
And they're, there should have been tiles there in there.

839
00:35:27,600 --> 00:35:30,600
So we're already there's obviously some kind of bug going on here.

840
00:35:30,600 --> 00:35:33,700
And also, if I hit the and that's, it looks like it's the wrong place

841
00:35:33,700 --> 00:35:33,900
to.

842
00:35:33,900 --> 00:35:37,100
So this look there's just looks like, it's janky but they're showing

843
00:35:37,100 --> 00:35:39,300
up now, which is actually a plus, so that's kind of good.

844
00:35:39,700 --> 00:35:42,600
So if I hit the spacebar, I don't see my guy either.

845
00:35:42,600 --> 00:35:44,600
So that suggests that, that is broken as well.

846
00:35:45,000 --> 00:35:46,600
Let's take a look at why that's broken.

847
00:35:47,300 --> 00:35:47,400
First.

848
00:35:47,400 --> 00:35:51,000
Because that's also something that that should be addressed.

849
00:35:51,800 --> 00:35:56,800
Okay, so we're getting there and we just have a few more things to

850
00:35:56,800 --> 00:35:58,800
iron out, but we're getting there.

851
00:35:59,300 --> 00:35:59,900
So let's go ahead.

852
00:36:00,000 --> 00:36:02,600
Run this and then I'm going to try and add a player.

853
00:36:03,300 --> 00:36:06,300
And so the world position is wherever the camera was.

854
00:36:06,500 --> 00:36:08,100
And so let's take a look at what that is.

855
00:36:08,800 --> 00:36:13,100
I assume that's just basically centered at the origin and well, no,

856
00:36:13,100 --> 00:36:14,500
it's a little bit off from the origin.

857
00:36:14,500 --> 00:36:15,300
So that's fine.

858
00:36:15,900 --> 00:36:18,100
So the player is going to be at that location.

859
00:36:18,700 --> 00:36:20,400
So let's go ahead and add him in.

860
00:36:21,000 --> 00:36:23,100
We go ahead and do that.

861
00:36:23,100 --> 00:36:27,400
Get our entity index, which is actually extremely high now because

862
00:36:27,400 --> 00:36:29,800
there's so many walls and stuff because since we created a lot,

863
00:36:30,000 --> 00:36:32,200
but I think I'm still having it create a huge number of rooms.

864
00:36:35,100 --> 00:36:35,800
Which is fine.

865
00:36:37,100 --> 00:36:38,200
So I go ahead and do this.

866
00:36:38,700 --> 00:36:39,600
It's going to be a player.

867
00:36:39,600 --> 00:36:40,600
It's going to be a hero.

868
00:36:41,400 --> 00:36:44,500
So we're going to assign to that entity low State indexing.

869
00:36:44,500 --> 00:36:44,800
Know what?

870
00:36:44,800 --> 00:36:46,700
I should probably before we start tugging this as well.

871
00:36:47,400 --> 00:36:50,900
I kind of also want to go ahead and take the time now to do this,

872
00:36:51,100 --> 00:36:51,600
right?

873
00:36:53,600 --> 00:36:57,000
I'd like to go ahead and access that low entity by entity low, so I

874
00:36:57,000 --> 00:37:00,400
don't have to keep grabbing it out of the array there, that doesn't

875
00:37:00,400 --> 00:37:02,400
seem good at all.

876
00:37:02,600 --> 00:37:06,700
So we'll do that and then we'll do entity, load type equals type.

877
00:37:07,700 --> 00:37:16,000
And entity low P equals star p, and that looks a little bit nicer.

878
00:37:16,600 --> 00:37:17,200
All right.

879
00:37:17,300 --> 00:37:18,800
So let's try that one more time.

880
00:37:19,800 --> 00:37:20,200
Oops.

881
00:37:21,200 --> 00:37:21,900
What did I do?

882
00:37:23,200 --> 00:37:24,600
Just get low entity.

883
00:37:24,600 --> 00:37:26,200
Why did get money not work there?

884
00:37:26,600 --> 00:37:27,900
Get them entity index.

885
00:37:28,700 --> 00:37:29,900
Gives it less than learning to count.

886
00:37:29,900 --> 00:37:31,400
That should have worked, right?

887
00:37:31,600 --> 00:37:35,100
Because loaded account has been Advanced Beyond it.

888
00:37:36,100 --> 00:37:36,800
And so,

889
00:37:37,500 --> 00:37:40,800
I should be able to do that.

890
00:37:40,800 --> 00:37:41,500
Shouldn't I?

891
00:37:41,500 --> 00:37:42,200
What did I do?

892
00:37:42,200 --> 00:37:45,300
I must have just done something particularly stupid.

893
00:37:45,400 --> 00:37:47,600
So it's the, it's the zero entity.

894
00:37:48,000 --> 00:37:48,900
That won't work there.

895
00:37:49,000 --> 00:37:49,400
All right.

896
00:37:49,400 --> 00:37:50,500
Well, that's fine.

897
00:37:51,800 --> 00:37:52,700
What do it that way then?

898
00:37:56,100 --> 00:37:59,000
All right, so entity index.

899
00:37:59,700 --> 00:38:01,700
And now we are adding that guy in.

900
00:38:03,500 --> 00:38:05,400
And so let's take a look at what happens.

901
00:38:05,400 --> 00:38:08,600
So we go ahead and we add that low entity.

902
00:38:11,000 --> 00:38:12,200
Oh, ah,

903
00:38:13,400 --> 00:38:14,800
That's not supposed to happen.

904
00:38:15,000 --> 00:38:19,900
Once you pass that P in, you're not supposed to touch it, bad, bad,

905
00:38:19,900 --> 00:38:20,500
bad, bad.

906
00:38:20,600 --> 00:38:21,500
That's no good.

907
00:38:21,600 --> 00:38:22,400
No good at all.

908
00:38:22,500 --> 00:38:23,500
So, we got to get rid of those.

909
00:38:24,100 --> 00:38:26,000
Okay, there we go.

910
00:38:26,900 --> 00:38:30,200
And now we'll see if we get anywhere further.

911
00:38:31,800 --> 00:38:32,700
What happened there?

912
00:38:34,100 --> 00:38:36,600
Block O, our block is no.

913
00:38:38,000 --> 00:38:40,200
Oh snap.

914
00:38:42,800 --> 00:38:45,200
If we need a better way to break out of this function.

915
00:38:46,200 --> 00:38:50,900
Because right, this iterator here as iterates over when we find it.

916
00:38:51,300 --> 00:38:51,900
That was dumb.

917
00:38:51,900 --> 00:38:53,200
I don't even know why I try to do that.

918
00:38:53,200 --> 00:38:54,100
That was stupid.

919
00:38:54,800 --> 00:38:55,700
That was stupid.

920
00:38:55,700 --> 00:38:56,500
Trying to be clever.

921
00:38:56,500 --> 00:38:57,900
You saw what happened there, right?

922
00:38:58,100 --> 00:38:59,300
I wanted to break out of those.

923
00:38:59,300 --> 00:38:59,800
So I'm like, oh,

924
00:39:00,000 --> 00:39:03,000
You said it because the condition is blocked, but this, when it gets

925
00:39:03,000 --> 00:39:05,500
to the end of the loop, it's going to do this, right?

926
00:39:07,200 --> 00:39:08,300
So that's not going to work.

927
00:39:08,300 --> 00:39:09,600
So we're just going to have to set.

928
00:39:11,500 --> 00:39:14,900
Something, which is basically, you know, while we haven't found it.

929
00:39:15,900 --> 00:39:17,800
So, so not found is true.

930
00:39:18,400 --> 00:39:23,400
And so we just do not found block and not found and then we've got

931
00:39:23,700 --> 00:39:30,700
this and not found and then, you know, not found equals false.

932
00:39:31,400 --> 00:39:33,700
Not the not the prettiest thing in the world.

933
00:39:34,300 --> 00:39:35,100
I admit that.

934
00:39:35,800 --> 00:39:37,000
But at least that's, you know,

935
00:39:38,000 --> 00:39:39,700
Least that's going to work in theory.

936
00:39:40,600 --> 00:39:42,100
All right, so there is my dude.

937
00:39:42,100 --> 00:39:42,900
He's there.

938
00:39:43,900 --> 00:39:47,500
We're definitely in some Dire Straits, their looks or still got plenty

939
00:39:47,500 --> 00:39:48,400
of debugging to do.

940
00:39:48,900 --> 00:39:51,900
Let's take a look at where that that broke off offset and check

941
00:39:51,900 --> 00:39:52,600
frequency by area.

942
00:39:52,600 --> 00:39:53,800
How many high frequency entities?

943
00:39:53,800 --> 00:39:54,500
Do we have?

944
00:39:54,800 --> 00:39:55,700
What are we in now?

945
00:39:59,200 --> 00:40:01,800
This one, let's go ahead and step through that.

946
00:40:01,800 --> 00:40:02,400
I just want to see it.

947
00:40:02,400 --> 00:40:05,200
Look like it stalled there and I wanted to break in and see what was

948
00:40:05,400 --> 00:40:06,300
taking the time.

949
00:40:07,600 --> 00:40:10,700
So, all right, so it finishes this Loop presumably.

950
00:40:17,300 --> 00:40:20,400
I know it doesn't finish this Loop.

951
00:40:22,900 --> 00:40:23,800
Interesting.

952
00:40:25,400 --> 00:40:26,800
Because it's making it entity.

953
00:40:27,100 --> 00:40:30,600
Oh, did we not think this through properly?

954
00:40:30,800 --> 00:40:32,700
I guess I must have not thought this through.

955
00:40:32,700 --> 00:40:33,600
Quite right.

956
00:40:33,600 --> 00:40:36,500
When it's actually removing something from the high entity State.

957
00:40:36,900 --> 00:40:39,800
We've got, we've got a little bit of a bug here.

958
00:40:41,300 --> 00:40:46,600
So when it makes the entity low frequency, this is supposed to reduce

959
00:40:46,600 --> 00:40:48,500
the count, right?

960
00:40:49,100 --> 00:40:51,800
So go through here.

961
00:40:53,600 --> 00:40:59,300
Any load grabs it, high index 0 but it doesn't have a high.

962
00:41:00,600 --> 00:41:01,600
How is that possible?

963
00:41:01,600 --> 00:41:03,900
Yeah, so we've got some, we've got some weirdness going on here.

964
00:41:03,900 --> 00:41:04,600
Right?

965
00:41:04,600 --> 00:41:07,700
Because when we all set Guys, these should always these are always

966
00:41:07,700 --> 00:41:10,200
supposed to be people who are in the high range.

967
00:41:10,200 --> 00:41:13,200
So when it goes ahead and let's let's take a look at that case.

968
00:41:13,200 --> 00:41:15,400
I want to take a look at that case now since it's suspicious.

969
00:41:15,900 --> 00:41:17,600
All right, so let's go ahead and see what happens there.

970
00:41:19,000 --> 00:41:19,700
There we go.

971
00:41:20,400 --> 00:41:23,300
So, We're looping over our entities and we're trying to offset them

972
00:41:23,300 --> 00:41:25,200
and check to see whether they'd still be in the bounce.

973
00:41:25,300 --> 00:41:27,700
We have found somebody who isn't supposed to be there.

974
00:41:28,300 --> 00:41:28,700
Right?

975
00:41:28,700 --> 00:41:32,000
So we go ahead and and in fact, I guess what I could do to, you know,

976
00:41:32,000 --> 00:41:32,100
what?

977
00:41:32,100 --> 00:41:33,400
Let me do this beforehand.

978
00:41:33,800 --> 00:41:34,600
Just so we know.

979
00:41:34,800 --> 00:41:38,400
One thing I like to do sometimes is, if I have a bug somewhere, put in

980
00:41:38,400 --> 00:41:42,800
assertion, that would have would caught it just to sort of, make sure

981
00:41:42,800 --> 00:41:45,100
that you don't have it happen again, right?

982
00:41:45,600 --> 00:41:48,600
So, I want to assert that the the

983
00:41:48,700 --> 00:41:49,600
The high entity.

984
00:41:49,800 --> 00:41:53,200
Well, I guess, like, when I do make any low frequency, I guess I'd

985
00:41:53,200 --> 00:41:56,500
have to actually grab its pointer here to actually do that sir, but I

986
00:41:56,500 --> 00:41:57,600
could do that, right?

987
00:41:57,600 --> 00:41:58,900
I could totally do that.

988
00:41:59,100 --> 00:41:59,800
So what I want to do.

989
00:42:00,000 --> 00:42:02,400
Basically this I want to do an assert.

990
00:42:02,700 --> 00:42:06,300
I want to assert that the the low entity for this guy.

991
00:42:06,700 --> 00:42:09,600
I want to assert that his high Index, right?

992
00:42:09,600 --> 00:42:12,000
His is high into the index.

993
00:42:14,600 --> 00:42:19,300
I want to make sure that that points back to this, this Index, right

994
00:42:19,400 --> 00:42:21,600
like so, and it would be nice.

995
00:42:21,600 --> 00:42:24,100
I suppose if this was called high into the index just to be clear

996
00:42:24,100 --> 00:42:25,900
which because we've got two different ones here.

997
00:42:26,100 --> 00:42:30,300
I think it's probably good to differentiate between those two so like

998
00:42:30,300 --> 00:42:30,700
so.

999
00:42:31,300 --> 00:42:35,000
All right, so I just wanted to do that just to make sure and let's

1000
00:42:35,000 --> 00:42:35,500
take a look.

1001
00:42:36,100 --> 00:42:36,800
All right.

1002
00:42:36,800 --> 00:42:41,100
So we're going through, we get someone who moves out and we find all

1003
00:42:41,100 --> 00:42:45,600
of a sudden that we've got somebody who's still in the high frequency

1004
00:42:45,600 --> 00:42:45,900
array.

1005
00:42:45,900 --> 00:42:50,100
And who doesn't have this as the high high entity index.

1006
00:42:50,100 --> 00:42:52,000
He's pointed wrong, right?

1007
00:42:52,000 --> 00:42:56,000
So that's just we already have a bug here and we should take a look at

1008
00:42:56,000 --> 00:42:56,100
that.

1009
00:42:56,100 --> 00:42:58,200
And again, this is relatively tricky code, right?

1010
00:42:58,500 --> 00:43:02,400
Having these two sort of entity States and stuff does does complicate

1011
00:43:02,400 --> 00:43:03,500
things certainly right?

1012
00:43:03,900 --> 00:43:06,100
And like I said, one of

1013
00:43:06,100 --> 00:43:08,400
Big reasons for doing that is just to show how to work through things

1014
00:43:08,400 --> 00:43:10,900
like this and to show how to structure things that are relatively

1015
00:43:10,900 --> 00:43:11,500
complicated.

1016
00:43:11,500 --> 00:43:14,400
I didn't want to make something that was going to super simple, but

1017
00:43:14,500 --> 00:43:17,000
you pay a price for doing some things that are more complicated.

1018
00:43:19,800 --> 00:43:21,700
Which is that you have to think them through a little more and you

1019
00:43:21,700 --> 00:43:22,800
have to spend more time to Buggy.

1020
00:43:23,800 --> 00:43:26,100
So there's always a price, anytime you want to sort of upgrade

1021
00:43:26,100 --> 00:43:28,300
something to be a little fancier.

1022
00:43:28,600 --> 00:43:29,800
You always got to pay for it.

1023
00:43:30,000 --> 00:43:31,800
It's no no free lunch, right?

1024
00:43:35,000 --> 00:43:35,600
All right.

1025
00:43:35,900 --> 00:43:40,900
So let's go ahead and and and think this through, how could we check

1026
00:43:40,900 --> 00:43:41,900
more easily?

1027
00:43:41,900 --> 00:43:45,700
What I would like to do is I think maybe do some kind of a have some

1028
00:43:45,700 --> 00:43:46,600
kind of a correspondence.

1029
00:43:46,600 --> 00:43:47,200
Check.

1030
00:43:47,500 --> 00:43:50,600
For example, what I could do is make something here, which is just

1031
00:43:50,600 --> 00:43:53,700
like, validate entity pairs or something like that.

1032
00:43:54,900 --> 00:43:59,800
And, you know, basically just say, okay, let's have a function, which

1033
00:43:59,800 --> 00:44:04,100
all the function does is cycle through all of the high entities,

1034
00:44:04,500 --> 00:44:04,700
right?

1035
00:44:05,300 --> 00:44:06,000
And I don't know.

1036
00:44:06,000 --> 00:44:07,000
Why do we have?

1037
00:44:07,400 --> 00:44:08,900
Why are we having hiding next year?

1038
00:44:08,900 --> 00:44:10,500
I guess because loading this point back to them.

1039
00:44:10,500 --> 00:44:11,100
So that makes sense.

1040
00:44:11,300 --> 00:44:15,200
So will cycle through all the high entities and for every High entity.

1041
00:44:16,400 --> 00:44:20,500
We should go ahead and assert that.

1042
00:44:20,500 --> 00:44:23,700
If we were to grab the low entity for that high of D that it points

1043
00:44:23,700 --> 00:44:24,600
back to it, right?

1044
00:44:24,600 --> 00:44:25,600
That's all it does.

1045
00:44:25,800 --> 00:44:26,400
Right?

1046
00:44:26,900 --> 00:44:30,800
So, you know, we could we could even make this a function that you

1047
00:44:30,800 --> 00:44:33,100
could call to validate and then you assert the validation.

1048
00:44:33,800 --> 00:44:35,100
So let's do it this way, I guess.

1049
00:44:35,300 --> 00:44:41,100
So we'll do valid will soon valid I guess the start and then it will

1050
00:44:41,100 --> 00:44:46,000
say valid equals valid and that this thing is

1051
00:44:46,100 --> 00:44:46,500
True.

1052
00:44:46,800 --> 00:44:47,300
Right?

1053
00:44:47,600 --> 00:44:50,800
Then we'll return valid and that way we can do this validate entity

1054
00:44:50,800 --> 00:44:53,100
pairs, really any time that we want to.

1055
00:44:53,700 --> 00:44:56,800
So we've kind of got a number of things that we could do, but

1056
00:44:56,800 --> 00:44:58,900
basically set camera, right?

1057
00:45:00,600 --> 00:45:03,300
We could, if we want to do a bunch of validation here.

1058
00:45:03,700 --> 00:45:05,100
We can validate it here.

1059
00:45:05,500 --> 00:45:07,600
So when we first come in, we can validate it.

1060
00:45:08,100 --> 00:45:11,700
So we'll do assert valid identity Pairs and then they'll just compiled

1061
00:45:11,700 --> 00:45:12,700
out in debug mode.

1062
00:45:12,700 --> 00:45:15,100
So it's not, I mean, release mode.

1063
00:45:15,100 --> 00:45:15,900
So that'll be fine.

1064
00:45:16,800 --> 00:45:21,100
We can do it after we do the offset and check frequency by area, and

1065
00:45:21,100 --> 00:45:25,600
then we can do it again after we do our high frequency, move like

1066
00:45:25,600 --> 00:45:26,100
that.

1067
00:45:26,700 --> 00:45:29,900
So just just some validation just to make sure that we catch a

1068
00:45:30,000 --> 00:45:34,300
As in as easy, a fashion as possible, and don't make things harder on

1069
00:45:34,300 --> 00:45:36,000
ourselves than they have to be.

1070
00:45:36,500 --> 00:45:37,300
So, there we go.

1071
00:45:38,200 --> 00:45:40,300
So, let's see what happens when we run this now.

1072
00:45:42,300 --> 00:45:42,700
Oops.

1073
00:45:43,200 --> 00:45:43,900
Forgot.

1074
00:45:44,900 --> 00:45:47,500
One more thing got to actually do the increment.

1075
00:45:47,500 --> 00:45:51,400
We weren't doing the increment here because we do the increment or we,

1076
00:45:51,400 --> 00:45:52,600
or we remove the item.

1077
00:45:52,600 --> 00:45:55,500
So, we had kind of a special Loop there, but there we go.

1078
00:45:56,600 --> 00:45:57,000
All right.

1079
00:45:57,000 --> 00:45:59,300
So what we've learned from this already?

1080
00:46:00,100 --> 00:46:04,300
Is that this routine is causing a problem where the high into the

1081
00:46:04,300 --> 00:46:08,100
index is, are getting the highest fee Loan Today, low entity.

1082
00:46:08,100 --> 00:46:08,800
Correspondence.

1083
00:46:09,100 --> 00:46:13,700
Is actually getting ruined right here because our validation routine

1084
00:46:13,700 --> 00:46:15,100
has failed, right?

1085
00:46:15,200 --> 00:46:19,000
So, we now know, we basically that told us exactly what we wanted

1086
00:46:19,100 --> 00:46:22,200
this, it fingered this code as the culprit, right?

1087
00:46:24,000 --> 00:46:25,100
So let's go take a look.

1088
00:46:26,400 --> 00:46:29,800
There's a couple other things we can do to make the code, less likely

1089
00:46:29,800 --> 00:46:32,100
to have these problems to which we may start doing.

1090
00:46:32,300 --> 00:46:35,900
Like I said, I don't I typically don't spend time on doing code that's

1091
00:46:35,900 --> 00:46:37,400
designed for defensive programming.

1092
00:46:37,400 --> 00:46:41,100
Until I actually have some bugs in something or I'm doing the actual

1093
00:46:41,100 --> 00:46:44,800
final version of stuff just to make sure that you don't spend a lot of

1094
00:46:44,800 --> 00:46:46,100
time doing unnecessary work.

1095
00:46:48,300 --> 00:46:51,000
But once you have a bug, you can usually trade some of that debugging

1096
00:46:51,000 --> 00:46:54,400
time for putting in more defensive code and that's usually a win,

1097
00:46:54,600 --> 00:46:55,100
right?

1098
00:46:56,000 --> 00:47:00,300
It's kind of like lazy evaluation, you want to sort of manage it so

1099
00:47:00,300 --> 00:47:02,900
that you're not doing a ton of work trying to catch bugs that never

1100
00:47:02,900 --> 00:47:04,300
going to happen, right?

1101
00:47:05,000 --> 00:47:08,500
So, all right, we're in here and we are looping through, we've got our

1102
00:47:08,500 --> 00:47:10,500
low entities and for each low entity.

1103
00:47:10,500 --> 00:47:13,700
We take a look at whether the high-end X was equal to 0.

1104
00:47:13,700 --> 00:47:15,900
If the high-end X is equal to 0, then we're going to consider it.

1105
00:47:15,900 --> 00:47:16,900
We consider it here.

1106
00:47:17,100 --> 00:47:17,900
We check to see whether

1107
00:47:18,100 --> 00:47:19,700
It is in the rectangular or not.

1108
00:47:19,700 --> 00:47:23,400
And then we make a high-frequency entity out of it.

1109
00:47:23,400 --> 00:47:25,100
If it was right.

1110
00:47:25,300 --> 00:47:27,600
And we're passing the Fantastic.

1111
00:47:28,000 --> 00:47:30,000
We're passing the wrong one, right?

1112
00:47:30,400 --> 00:47:34,400
So this is actually again, too many indices, right?

1113
00:47:35,700 --> 00:47:41,600
So really, what we want to do here is differentiate between Embassy in

1114
00:47:41,600 --> 00:47:46,200
the end entity indices and the indices in the block, right?

1115
00:47:46,500 --> 00:47:47,900
So if we do that, then we will

1116
00:47:48,000 --> 00:47:53,000
I'll actually have Arlo entity index here which we can grab out like

1117
00:47:53,000 --> 00:47:59,100
so low, entity index, like so, so there we go, done.

1118
00:48:00,000 --> 00:48:03,200
And that will hopefully fix that problem, right?

1119
00:48:03,900 --> 00:48:08,000
What you did and that looks like the only problem we had in terms of

1120
00:48:08,000 --> 00:48:10,200
stuff that was obvious like that.

1121
00:48:10,200 --> 00:48:12,400
You could see that was totally wrong, right?

1122
00:48:12,600 --> 00:48:13,500
So that's good.

1123
00:48:14,000 --> 00:48:17,100
So that means our spatial partition is at least nominally working now,

1124
00:48:17,100 --> 00:48:19,900
although again, we haven't really done anything to verify that it's

1125
00:48:19,900 --> 00:48:20,700
actually working.

1126
00:48:21,100 --> 00:48:23,300
We just know that it's not getting in our way anymore.

1127
00:48:23,600 --> 00:48:25,900
But like I said, that's good enough for now because all we really care

1128
00:48:25,900 --> 00:48:28,100
about is that it's set up properly.

1129
00:48:28,400 --> 00:48:29,800
So we know that it's all

1130
00:48:30,000 --> 00:48:32,300
all the code is Plumbing properly if you will.

1131
00:48:33,100 --> 00:48:36,300
So, one of the things that we probably want to do too is sort entity

1132
00:48:36,300 --> 00:48:37,000
soon as well.

1133
00:48:37,000 --> 00:48:40,500
So we don't keep having this like going behind this problem, but for

1134
00:48:40,500 --> 00:48:43,000
the, for the immediate moment, let's go ahead and take.

1135
00:48:43,100 --> 00:48:45,200
I think we've got a little bit of time left the stream just a little

1136
00:48:45,200 --> 00:48:45,600
bit.

1137
00:48:46,300 --> 00:48:47,600
Looks like we've got about 10 minutes.

1138
00:48:48,000 --> 00:48:51,300
Let's go ahead and test to see that those new assets work as well.

1139
00:48:51,600 --> 00:48:54,500
So I'm going to go ahead and say, let's replace those green things

1140
00:48:54,500 --> 00:48:57,000
with those yellow things with trees.

1141
00:48:57,700 --> 00:48:59,800
I don't know if I made the entities, the right size.

1142
00:49:00,300 --> 00:49:01,800
Like the hero still very large.

1143
00:49:01,800 --> 00:49:04,000
So I've got to do a bunch of work on that when we actually want to

1144
00:49:04,000 --> 00:49:06,100
start doing real work with entities.

1145
00:49:06,500 --> 00:49:08,600
But for now we'll go ahead and just do it this way.

1146
00:49:08,800 --> 00:49:14,300
So let's load in just a tree here, right?

1147
00:49:14,300 --> 00:49:17,800
So I'm going to go ahead and say tree and that's going to be test in

1148
00:49:17,800 --> 00:49:18,900
the test to directory.

1149
00:49:19,100 --> 00:49:22,100
I think I just called them 300, or something like that.

1150
00:49:22,500 --> 00:49:26,200
And then what I'm going to do is when we're drawing that rectangle,

1151
00:49:26,500 --> 00:49:29,800
we're doing an end of the sort of entity test here.

1152
00:49:29,900 --> 00:49:32,000
Or if it's type hero, right?

1153
00:49:32,500 --> 00:49:34,300
And otherwise, we're going to draw something else.

1154
00:49:34,300 --> 00:49:38,500
So in here, I'll just I'll go ahead and draw a bitmap instead, right?

1155
00:49:39,100 --> 00:49:42,700
So to draw the bitmap instead, what we don't have right now.

1156
00:49:42,700 --> 00:49:45,600
Unfortunately, as we don't actually know the offset of that guy, so

1157
00:49:45,600 --> 00:49:46,700
I'll draw it at the wrong place.

1158
00:49:46,700 --> 00:49:48,900
Just to start with and then we'll go actually see what?

1159
00:49:48,900 --> 00:49:50,100
It's hot spot, should be.

1160
00:49:50,500 --> 00:49:52,400
And then it'll draw at the right place as well.

1161
00:49:53,300 --> 00:49:53,900
All right.

1162
00:49:54,300 --> 00:49:55,700
So let's take a look here.

1163
00:49:55,800 --> 00:49:59,800
What we have to do is say will

1164
00:50:00,000 --> 00:50:02,900
Those ground points that I think that actually is what we want is we

1165
00:50:02,900 --> 00:50:07,700
want the ground points and the Z is yes, so I think that's all

1166
00:50:07,700 --> 00:50:09,100
actually the same stuff we want.

1167
00:50:09,200 --> 00:50:10,500
It's just the Align right?

1168
00:50:10,500 --> 00:50:12,400
We don't actually know what.

1169
00:50:12,500 --> 00:50:15,700
Oh, well loaded bitmap just loaded bitmap actually have that in there.

1170
00:50:15,700 --> 00:50:17,700
It doesn't have the alliance only to hear a bit Maps.

1171
00:50:17,700 --> 00:50:17,800
Do.

1172
00:50:17,800 --> 00:50:17,900
So.

1173
00:50:17,900 --> 00:50:21,900
We should probably push the alignment into the loaded bitmap at some

1174
00:50:21,900 --> 00:50:22,500
point.

1175
00:50:22,500 --> 00:50:26,900
Maybe that point might be now, but we'll zero those app for now.

1176
00:50:28,000 --> 00:50:32,600
And we'll go ahead and draw the game state tree, right?

1177
00:50:32,600 --> 00:50:35,200
And, and that'll, and that'll go ahead and do that.

1178
00:50:35,300 --> 00:50:39,200
And we're going to have to start making that code a little bit cleaner

1179
00:50:39,200 --> 00:50:39,500
now.

1180
00:50:39,500 --> 00:50:42,400
Alright, so we have some trees, and that's fine.

1181
00:50:43,200 --> 00:50:43,500
Of course.

1182
00:50:43,500 --> 00:50:45,500
Now, it's pretty hard to tell where stuff is because the trees are

1183
00:50:45,500 --> 00:50:47,000
drawn at the wrong locations.

1184
00:50:47,100 --> 00:50:49,800
So we probably should go ahead and draw the trees at the right

1185
00:50:49,800 --> 00:50:55,600
locations and maybe get rid of those trees in the background as well.

1186
00:50:55,600 --> 00:50:57,700
That seems like a probably a pretty good thing to

1187
00:50:57,800 --> 00:50:58,100
to do.

1188
00:51:00,000 --> 00:51:00,800
Say the least.

1189
00:51:01,000 --> 00:51:01,500
So, yeah.

1190
00:51:01,500 --> 00:51:04,100
Alright, let's go ahead and take a look at draw rectangle there.

1191
00:51:04,600 --> 00:51:08,600
Let's go ahead and go back to a clearing process here for now.

1192
00:51:08,600 --> 00:51:12,300
So I'm going to go ahead and do an if one around this guy not going

1193
00:51:12,300 --> 00:51:14,800
to, We're Not Gonna draw that that background anymore.

1194
00:51:15,400 --> 00:51:16,500
We'll pass that buffer.

1195
00:51:17,800 --> 00:51:22,700
Like so and we've got the the Min and the max I guess.

1196
00:51:22,700 --> 00:51:25,000
I don't really know what those are.

1197
00:51:25,000 --> 00:51:25,900
These are in.

1198
00:51:26,000 --> 00:51:27,200
I don't even remember.

1199
00:51:27,500 --> 00:51:29,500
It's been so long since we worked on the renderer.

1200
00:51:29,700 --> 00:51:31,600
I don't even know what they were.

1201
00:51:31,600 --> 00:51:34,000
So we've got we've basically got two things.

1202
00:51:34,000 --> 00:51:36,900
We've got, I guess this is how we were doing those.

1203
00:51:37,000 --> 00:51:37,900
I don't love this.

1204
00:51:37,900 --> 00:51:38,300
By the way.

1205
00:51:38,300 --> 00:51:41,100
I'm thinking of going back to the way that I was doing them before

1206
00:51:41,400 --> 00:51:44,000
where instead of doing that weird syntax that doesn't work, on a lot

1207
00:51:44,000 --> 00:51:47,500
of compilers or rather on older msv seasons.

1208
00:51:47,600 --> 00:51:48,400
A lot of compilers.

1209
00:51:49,300 --> 00:51:50,800
Sometimes it's just nice to do it this way.

1210
00:51:51,200 --> 00:51:51,400
All right.

1211
00:51:51,400 --> 00:51:55,300
So I think is this just the case that all we have to really do is just

1212
00:51:55,300 --> 00:51:55,700
this.

1213
00:51:56,200 --> 00:51:56,800
I don't know.

1214
00:51:57,600 --> 00:51:59,700
Let's find out, I guess, right?

1215
00:52:00,200 --> 00:52:03,300
And like I said, I would like to make it and I guess, what should we

1216
00:52:03,300 --> 00:52:03,500
do?

1217
00:52:03,500 --> 00:52:09,600
Let's do is do a gray that what I'm saying here is, I'd rather have

1218
00:52:09,600 --> 00:52:11,100
the ability to do V 2.

1219
00:52:11,100 --> 00:52:13,300
This is the way I write it in my own code, this stuff.

1220
00:52:13,300 --> 00:52:15,500
So I think I'm going to just stick with doing it that way, instead of

1221
00:52:15,500 --> 00:52:17,400
the other weird that old weird syntax.

1222
00:52:17,600 --> 00:52:18,200
I didn't know.

1223
00:52:18,200 --> 00:52:19,300
I don't love that syntax.

1224
00:52:20,000 --> 00:52:20,500
It didn't it.

1225
00:52:20,500 --> 00:52:21,200
Didn't thrill me?

1226
00:52:22,100 --> 00:52:22,400
All right.

1227
00:52:22,400 --> 00:52:22,900
So yes.

1228
00:52:22,900 --> 00:52:27,100
Gotta go ahead and treat these as floats obviously, but that's about

1229
00:52:27,100 --> 00:52:27,400
it.

1230
00:52:27,900 --> 00:52:30,900
And then in theory that should give us a gray background.

1231
00:52:31,100 --> 00:52:32,400
Well, alright.

1232
00:52:32,400 --> 00:52:34,600
So now we have to do is draw the trees at the right place.

1233
00:52:35,000 --> 00:52:41,400
So we want to do is we want to define the trees in some sort of scene

1234
00:52:41,400 --> 00:52:45,300
fashion where their width in their height, and the center point of the

1235
00:52:45,300 --> 00:52:45,900
tree.

1236
00:52:47,000 --> 00:52:47,400
I guess we want to

1237
00:52:47,600 --> 00:52:51,200
The tree at that center point, so let's think about this for a second.

1238
00:52:51,300 --> 00:53:00,300
If I go ahead and I open up the art Assets in see here in

1239
00:53:03,500 --> 00:53:06,100
Gimp, which I think I can do, right?

1240
00:53:08,000 --> 00:53:08,800
Come on gimp.

1241
00:53:11,000 --> 00:53:12,500
Gibbs Gibbs, give it a go.

1242
00:53:13,400 --> 00:53:14,100
It can do it.

1243
00:53:14,100 --> 00:53:14,900
It thinks it can do it.

1244
00:53:14,900 --> 00:53:16,600
Maybe it can, maybe it can't.

1245
00:53:17,000 --> 00:53:21,300
So I really just want to know essentially like what's this point right

1246
00:53:21,300 --> 00:53:21,700
here?

1247
00:53:21,700 --> 00:53:23,800
Like that's like sort of the center point of the tree, right?

1248
00:53:23,800 --> 00:53:28,100
Where its base would be and it's 40.5 79.5.

1249
00:53:28,500 --> 00:53:30,900
So we'll call that will say 4080.

1250
00:53:31,000 --> 00:53:33,900
Nice, easy to remember 4080 is the alignment.

1251
00:53:35,100 --> 00:53:36,800
On our tree, right?

1252
00:53:37,300 --> 00:53:38,700
So we basically just got 40.

1253
00:53:38,700 --> 00:53:43,200
80 is the alignment on our tree and now we have our tree, it might be

1254
00:53:43,200 --> 00:53:45,500
nice to draw the rectangle as well.

1255
00:53:45,500 --> 00:53:47,300
Just so we could sort of see where it was.

1256
00:53:48,700 --> 00:53:50,600
So I don't know.

1257
00:53:50,600 --> 00:53:53,200
Like maybe we should do that in addition.

1258
00:53:53,200 --> 00:53:54,200
Let's let's do that.

1259
00:53:54,200 --> 00:53:55,800
In addition, underneath it.

1260
00:53:56,000 --> 00:53:59,000
Let's go ahead and draw that rectangle just so we can kind of see

1261
00:53:59,200 --> 00:53:59,900
where it's actually

1262
00:54:00,100 --> 00:54:04,500
So, we'll do player left top and player left top plus, entity width

1263
00:54:04,500 --> 00:54:04,900
height.

1264
00:54:05,000 --> 00:54:05,200
I think.

1265
00:54:05,200 --> 00:54:10,500
That's right, and then we'll still draw that just on there.

1266
00:54:10,900 --> 00:54:11,800
So we can kind of see.

1267
00:54:12,500 --> 00:54:15,200
And and what I might do to is I might just make it a little smaller

1268
00:54:15,200 --> 00:54:18,800
like I did before so we can kind of see roughly where each individual

1269
00:54:18,800 --> 00:54:19,500
wall segment.

1270
00:54:19,500 --> 00:54:21,500
Actually was, oops.

1271
00:54:21,500 --> 00:54:22,400
That's not right.

1272
00:54:22,700 --> 00:54:25,300
That's the the m 2 pixels problem, isn't it?

1273
00:54:25,700 --> 00:54:29,800
So, I've got a multiply it by m, 2 pixels as well.

1274
00:54:30,400 --> 00:54:31,400
All right, down.

1275
00:54:33,500 --> 00:54:39,300
So that looks a little better and now you can kind of go through the

1276
00:54:39,300 --> 00:54:42,400
world a little more reasonably and there are the trees.

1277
00:54:42,600 --> 00:54:43,700
We kind of look a lot.

1278
00:54:43,700 --> 00:54:44,900
Like a regular Tom app game.

1279
00:54:44,900 --> 00:54:47,400
Now because we're not really doing anything to scatter our trees

1280
00:54:47,400 --> 00:54:47,800
properly.

1281
00:54:47,800 --> 00:54:51,200
So we look kind of like a snez game which is fine.

1282
00:54:51,300 --> 00:54:55,100
I like snacks games, but we would like to take care of that sometime

1283
00:54:55,100 --> 00:54:55,800
in the future as well.

1284
00:54:55,800 --> 00:54:56,400
But there we go.

1285
00:54:56,400 --> 00:54:59,800
So now our trees are there so we can probably vaporize the rectangle

1286
00:54:59,800 --> 00:55:00,000
call.

1287
00:55:00,000 --> 00:55:02,200
We don't really need that at the moment.

1288
00:55:02,400 --> 00:55:03,500
So, we'll get rid of that.

1289
00:55:04,700 --> 00:55:05,400
And there we go.

1290
00:55:05,900 --> 00:55:11,000
So now we're getting back to something that's sort of a little more

1291
00:55:11,600 --> 00:55:17,900
usable and now is probably the time to start thinking about I guess.

1292
00:55:17,900 --> 00:55:20,400
Like I said, I we've got the spatial partition in there.

1293
00:55:20,600 --> 00:55:25,200
It's may or may not be working correctly, but we don't care literally

1294
00:55:25,200 --> 00:55:25,700
at all.

1295
00:55:26,000 --> 00:55:28,200
We just want it to be structured properly.

1296
00:55:28,200 --> 00:55:30,800
So that when we go to write, the the full versions of everything,

1297
00:55:30,800 --> 00:55:32,100
it'll be correct.

1298
00:55:32,600 --> 00:55:34,300
We can clearly play the game.

1299
00:55:34,500 --> 00:55:38,700
Way, we don't have any problems and are smooth scrolling is working.

1300
00:55:38,800 --> 00:55:41,400
So that means our screen-based thrilling would also be working.

1301
00:55:41,400 --> 00:55:45,500
Presumably, I guess I could test that really quickly if I was to go in

1302
00:55:45,500 --> 00:55:49,000
here and, and flip which one we were doing.

1303
00:55:49,200 --> 00:55:50,800
I don't know if we actually ever updated this.

1304
00:55:50,800 --> 00:55:52,200
So maybe we need to update this one.

1305
00:55:52,400 --> 00:55:55,200
Okay, so we would need to update that as well.

1306
00:55:55,200 --> 00:55:58,200
So that's something to think about doing for tomorrow.

1307
00:55:58,200 --> 00:56:01,400
It's just to do our screen-based growing, but we're kind of at the

1308
00:56:01,400 --> 00:56:03,900
point where it does seem like we could now start to,

1309
00:56:04,800 --> 00:56:06,600
Pull that entity stuff out.

1310
00:56:06,900 --> 00:56:09,600
Make it really coherent exactly how all the stages of our entity

1311
00:56:09,600 --> 00:56:14,000
pipeline work and then put in some space for doing stuff like having a

1312
00:56:14,000 --> 00:56:17,500
monster in there and having him fight the monster and that sort of

1313
00:56:17,500 --> 00:56:21,000
stuff which is which is what I'd like to get to in terms of testing

1314
00:56:21,000 --> 00:56:23,700
out how the entity system works and how the scaling works.

1315
00:56:23,700 --> 00:56:28,800
And then we can also do some stuff where we, yeah, where we take a

1316
00:56:28,800 --> 00:56:30,900
look at that.

1317
00:56:32,900 --> 00:56:36,100
Sort of the scaling behavior and what happens with low entities and

1318
00:56:36,100 --> 00:56:36,900
that sort of stuff.

1319
00:56:37,400 --> 00:56:38,400
So that looks good.

1320
00:56:38,400 --> 00:56:42,500
One thing that, that might be nice here is like I would like to have a

1321
00:56:42,500 --> 00:56:44,900
way to zoom out, right.

1322
00:56:45,800 --> 00:56:48,500
And since we're only drawing the enemies of the hiset that does make

1323
00:56:48,500 --> 00:56:51,200
it a little bit harder for us to do stuff, like zooming out.

1324
00:56:51,400 --> 00:56:53,900
So, at some point we're gonna have to figure out a way to really be

1325
00:56:53,900 --> 00:56:57,100
able to draw like a nice debug view which something that's just like a

1326
00:56:57,100 --> 00:56:57,800
little pixel map.

1327
00:56:57,800 --> 00:56:59,500
That just shows how big everything is.

1328
00:56:59,500 --> 00:56:59,900
Where all

1329
00:57:00,000 --> 00:57:03,200
Entities are and what they're doing because otherwise it's going to be

1330
00:57:03,200 --> 00:57:06,200
kind of hard for us to debug what's happening in other spots of the

1331
00:57:06,200 --> 00:57:07,300
world, right?

1332
00:57:07,700 --> 00:57:13,600
But for right now one thing that I can do, obviously also is is in

1333
00:57:13,600 --> 00:57:14,500
move player.

1334
00:57:14,900 --> 00:57:16,900
Let's go ahead and go over here and move player.

1335
00:57:17,400 --> 00:57:22,500
One thing I could do is have a pool 32, which is Collide, right?

1336
00:57:22,700 --> 00:57:26,200
And what I could do is say that, you know, if you're not going to do

1337
00:57:26,200 --> 00:57:29,800
Collide, maybe there's just something that just straight up moves.

1338
00:57:30,000 --> 00:57:34,500
You write that, you know, just you can just walk straight through

1339
00:57:34,500 --> 00:57:34,900
things.

1340
00:57:34,900 --> 00:57:38,100
You don't have to worry about going through anything so that I can

1341
00:57:38,100 --> 00:57:39,700
zoom around the world really quickly.

1342
00:57:40,000 --> 00:57:40,700
Yeah, you know what?

1343
00:57:40,700 --> 00:57:41,500
I don't need to do that.

1344
00:57:41,500 --> 00:57:42,700
Now, there's no point.

1345
00:57:42,700 --> 00:57:43,700
Let's just leave it like this.

1346
00:57:44,100 --> 00:57:45,300
Let's just go to the Q&A.

1347
00:57:45,300 --> 00:57:47,100
Let's say it's, you know,

1348
00:57:48,200 --> 00:57:51,700
Let's say it's time for Q&A and we'll save the rest of the stuff for

1349
00:57:51,700 --> 00:57:54,600
tomorrow because because we can.

1350
00:57:54,600 --> 00:57:58,200
So, yeah, so maybe tomorrow we'll start by doing some sorting and then

1351
00:57:58,200 --> 00:58:01,800
will, you know, so that all of our Sprites will sort properly and then

1352
00:58:01,800 --> 00:58:03,200
we'll start thinking things through a little more.

1353
00:58:03,600 --> 00:58:08,300
We could also change which tree we're drawing so that there's maybe

1354
00:58:08,300 --> 00:58:11,600
more than one tree being drawn would also be nice, but there we go.

1355
00:58:11,600 --> 00:58:13,000
Alright, so we're in good shape.

1356
00:58:13,500 --> 00:58:18,200
Please prefix your questions with Q: if you could so I can

1357
00:58:18,300 --> 00:58:21,400
See them and please keep them to stuff.

1358
00:58:21,400 --> 00:58:23,400
We did on today's stream or on a previous stream.

1359
00:58:23,400 --> 00:58:26,500
If you want to ask off-topic questions, come before the stream starts.

1360
00:58:26,500 --> 00:58:28,000
I'm usually here about 15 minutes.

1361
00:58:28,000 --> 00:58:28,600
I was a little late today.

1362
00:58:28,600 --> 00:58:31,400
I was only 10 minutes early, but please come about 15 minutes early

1363
00:58:31,900 --> 00:58:35,900
and we can do off-topic questions then so yeah.

1364
00:58:36,000 --> 00:58:36,900
So, let's see if I can.

1365
00:58:37,000 --> 00:58:39,400
Am I white listed can I do it?

1366
00:58:39,700 --> 00:58:40,300
Can I do it?

1367
00:58:40,300 --> 00:58:41,700
I don't know if I can do it or not.

1368
00:58:42,400 --> 00:58:43,000
But yeah.

1369
00:58:52,300 --> 00:58:53,300
For zooming out.

1370
00:58:53,300 --> 00:58:56,500
Could you somehow modify m, 2 pixels to make things smaller as you

1371
00:58:56,500 --> 00:58:57,100
zoom?

1372
00:58:58,100 --> 00:59:04,700
So zooming out would not be a huge problem in terms of drawing.

1373
00:59:04,900 --> 00:59:08,000
Once we have a red door that can do scaling, but we don't have a

1374
00:59:08,000 --> 00:59:09,100
render, the caduceus going right now.

1375
00:59:09,100 --> 00:59:09,600
So that.

1376
00:59:09,600 --> 00:59:11,100
So, the Sprites wouldn't get any smaller.

1377
00:59:11,100 --> 00:59:15,600
They just get closer together if we did that, but that's not really

1378
00:59:15,600 --> 00:59:16,500
the real problem.

1379
00:59:16,500 --> 00:59:19,700
The real problem is right now, we only draw High entities.

1380
00:59:20,200 --> 00:59:20,500
So we

1381
00:59:20,800 --> 00:59:23,300
Loop that draws all of our entities even ones that are nowhere near

1382
00:59:23,300 --> 00:59:24,000
the camera.

1383
00:59:25,000 --> 00:59:28,000
So we need to go make a render Loop that Loops over the low entities

1384
00:59:28,200 --> 00:59:30,800
and then that would allow us to see some because otherwise, we'd only

1385
00:59:30,800 --> 00:59:33,700
see what was right around the apron, anyway, because we only draw,

1386
00:59:33,700 --> 00:59:37,000
what's in the hiset, which is good for the normal gameplay.

1387
00:59:37,000 --> 00:59:38,100
It's just not good for debugging.

1388
00:59:39,400 --> 00:59:41,700
What is in-line V2 in line.

1389
00:59:41,700 --> 00:59:45,400
V2 is just a thing that constructs a vector to, right.

1390
00:59:45,400 --> 00:59:49,000
So basically it's just a thing that allows you to make a V2 by just

1391
00:59:49,000 --> 00:59:49,500
typing in.

1392
00:59:49,500 --> 00:59:55,300
Oh, you know V 253 and then it makes a V2 with the with x 5 + Y3,

1393
00:59:55,300 --> 00:59:55,900
that's all it is.

1394
00:59:55,900 --> 00:59:56,800
It's just a little notation.

1395
00:59:56,800 --> 00:59:59,900
And so I decided I considered this and I don't like it.

1396
01:00:00,800 --> 01:00:02,100
So, that's not going to happen.

1397
01:00:02,400 --> 01:00:06,900
So basically, this is not going to happen.

1398
01:00:07,200 --> 01:00:07,900
You're done.

1399
01:00:08,200 --> 01:00:09,400
You're out of my code base.

1400
01:00:09,400 --> 01:00:10,100
Goodbye.

1401
01:00:10,600 --> 01:00:15,300
No, no, no, no, no to you, sir.

1402
01:00:17,700 --> 01:00:19,700
I just I don't it doesn't do it for me.

1403
01:00:21,000 --> 01:00:24,000
I thought about it and I don't like it.

1404
01:00:24,100 --> 01:00:24,600
So it's gone.

1405
01:00:26,900 --> 01:00:28,500
It's just it's just ugly.

1406
01:00:28,600 --> 01:00:29,300
I don't know.

1407
01:00:29,400 --> 01:00:30,200
It's weird.

1408
01:00:30,400 --> 01:00:33,700
It just it doesn't look right and it doesn't it doesn't work on older

1409
01:00:33,700 --> 01:00:34,800
versions of the compiler.

1410
01:00:35,300 --> 01:00:37,200
It's just, it's just annoying.

1411
01:00:39,700 --> 01:00:40,300
So there we go.

1412
01:00:42,100 --> 01:00:42,700
All right.

1413
01:00:43,800 --> 01:00:45,700
Goodbye to you, sir.

1414
01:00:47,200 --> 01:00:48,100
And we're still working.

1415
01:00:48,400 --> 01:00:49,700
I forgot how high you can jump.

1416
01:00:49,700 --> 01:00:51,200
He's a real jumper this guy.

1417
01:01:04,600 --> 01:01:04,900
Y.

1418
01:01:04,900 --> 01:01:07,500
Uz, Max versus visual Studios IDE.

1419
01:01:07,600 --> 01:01:09,400
Well, there's two reasons really.

1420
01:01:10,400 --> 01:01:13,800
One is just because I am more familiar with emacs and I like to be

1421
01:01:13,800 --> 01:01:16,000
able to use the same editor on many platforms.

1422
01:01:16,300 --> 01:01:18,800
So I program on lots of platforms.

1423
01:01:18,800 --> 01:01:21,800
I don't only program on Windows, so Emax works on all of them.

1424
01:01:21,800 --> 01:01:23,300
So that's really handy.

1425
01:01:23,300 --> 01:01:24,200
Like when I'm program.

1426
01:01:24,200 --> 01:01:26,000
The next, I don't have to like, learn a new editor.

1427
01:01:26,000 --> 01:01:27,000
I just use emacs everywhere.

1428
01:01:27,400 --> 01:01:28,200
So that's a big one.

1429
01:01:29,200 --> 01:01:33,300
But the other one too, is that editing inside Visual Studio is kind of

1430
01:01:33,300 --> 01:01:39,100
a pain because you, you have to do all these gyrations to get its

1431
01:01:39,100 --> 01:01:42,700
rebuild to work properly with the dynamic code reloading stuff that we

1432
01:01:42,700 --> 01:01:43,100
do.

1433
01:01:43,300 --> 01:01:46,100
It's like, they had conceived of that in their head or something

1434
01:01:46,100 --> 01:01:48,900
because I don't know why probably because all their code takes three

1435
01:01:48,900 --> 01:01:51,000
years to compile and they like being able to go to the break room for

1436
01:01:51,000 --> 01:01:51,800
popcorn or something.

1437
01:01:51,800 --> 01:01:55,800
I have no idea but you have to do all this stuff with custom build

1438
01:01:55,800 --> 01:01:58,700
steps and you have to build the game twice to get it like

1439
01:01:58,800 --> 01:02:00,700
People were trying to work it out on the forums and it took him a

1440
01:02:00,700 --> 01:02:02,500
while to even get it into rough position.

1441
01:02:02,500 --> 01:02:06,400
Whereas with e Max, it's just it's totally fine because I can just

1442
01:02:06,400 --> 01:02:07,900
tell it exactly what I want to have happen.

1443
01:02:07,900 --> 01:02:10,500
And I don't have to worry about visual Studios.

1444
01:02:10,500 --> 01:02:15,300
Weird ideas about what is and is not a time when you can build, right?

1445
01:02:15,500 --> 01:02:17,200
So that's also part of it.

1446
01:02:17,200 --> 01:02:20,600
I just don't like that hassle of having to deal with their build

1447
01:02:20,600 --> 01:02:21,100
stuff.

1448
01:02:36,700 --> 01:02:38,100
You see Max better than V I am.

1449
01:02:38,100 --> 01:02:39,300
Or is it just preference?

1450
01:02:39,600 --> 01:02:40,900
It's not even preference for me.

1451
01:02:40,900 --> 01:02:41,900
It's just what I know.

1452
01:02:42,200 --> 01:02:43,300
Like I learned emacs.

1453
01:02:43,300 --> 01:02:46,200
I didn't have VI M at the time.

1454
01:02:46,200 --> 01:02:50,500
When I first started using emacs on Doss actually I only had emacs I

1455
01:02:50,500 --> 01:02:51,700
didn't even know what v.

1456
01:02:51,700 --> 01:02:54,500
I VI M was or just Vi at that point.

1457
01:02:54,500 --> 01:02:57,300
I don't even know if I would have had access to V.

1458
01:02:57,300 --> 01:02:58,400
I am, I don't know what V.

1459
01:02:58,400 --> 01:02:59,400
I am happened.

1460
01:03:00,000 --> 01:03:00,500
VI.

1461
01:03:00,500 --> 01:03:04,800
But either it regardless not important, point being.

1462
01:03:05,000 --> 01:03:10,300
So I learned emacs and I'm pretty fast with it now, so it's not like I

1463
01:03:11,000 --> 01:03:16,000
was equally fast in VI and like decided that VI was not as good and

1464
01:03:16,000 --> 01:03:16,800
emacs is better.

1465
01:03:16,800 --> 01:03:18,700
It's like I just don't know VI.

1466
01:03:18,700 --> 01:03:22,100
And so the time it would take me, I don't want to spend the time.

1467
01:03:22,100 --> 01:03:25,700
Now to go learn how to be as fast as I am in emacs in VI, even if

1468
01:03:25,700 --> 01:03:27,800
maybe it's a better editor and I would be slightly faster or

1469
01:03:27,800 --> 01:03:28,100
something.

1470
01:03:28,100 --> 01:03:29,500
So that's mostly it.

1471
01:03:29,700 --> 01:03:29,800
So

1472
01:03:30,000 --> 01:03:32,500
So, I don't really have an opinion about one versus the other.

1473
01:03:33,100 --> 01:03:33,700
It's more.

1474
01:03:33,700 --> 01:03:34,800
Just what I learned.

1475
01:03:42,300 --> 01:03:46,500
Do you think that how fast code runs is the best metric for good code?

1476
01:03:46,500 --> 01:03:49,100
Or do you value Simplicity or extensibility as well?

1477
01:03:49,100 --> 01:03:55,000
So I would say that, I don't think that how fast code runs is a

1478
01:03:55,000 --> 01:03:55,700
metric.

1479
01:03:55,700 --> 01:03:58,400
It's a requirement in my mind.

1480
01:03:58,400 --> 01:04:03,200
So I would think I would say value, I would say the values listed

1481
01:04:03,200 --> 01:04:04,800
second, Simplicity and extensibility.

1482
01:04:04,800 --> 01:04:09,200
I would say that Simplicity and extensibility are things that you

1483
01:04:09,200 --> 01:04:12,200
should value once, you can guarantee that the code does.

1484
01:04:12,400 --> 01:04:13,200
Run fast.

1485
01:04:14,000 --> 01:04:16,500
If you cannot guarantee that the code does run fast.

1486
01:04:16,500 --> 01:04:19,700
Then Simplicity sensibility are interesting to me because I don't care

1487
01:04:19,700 --> 01:04:21,000
if code is simple extensible.

1488
01:04:21,000 --> 01:04:23,600
If it's not fast enough to be good, right?

1489
01:04:24,100 --> 01:04:26,200
And nowadays.

1490
01:04:26,200 --> 01:04:28,200
I feel like a lot of code people.

1491
01:04:28,500 --> 01:04:30,700
Sort of will say things like that.

1492
01:04:30,700 --> 01:04:34,400
Like, they'll be like, well, you know, I'd rather save myself time or

1493
01:04:34,400 --> 01:04:38,400
I'd rather, you know, this be easier to develop on then have it be?

1494
01:04:38,400 --> 01:04:40,800
You know, higher speed, that would be fine.

1495
01:04:40,800 --> 01:04:42,200
If all the software I riff.

1496
01:04:42,500 --> 01:04:45,500
All the software that I used was somehow really fast these days, but

1497
01:04:45,500 --> 01:04:48,900
my computer is slower now than it's ever been the software that I use,

1498
01:04:48,900 --> 01:04:50,900
as its lower now than it's ever been.

1499
01:04:53,300 --> 01:04:56,600
And so I feel like, nowadays, programmers are making very bad

1500
01:04:56,600 --> 01:05:01,300
decisions about what is the minimum performance requirements further

1501
01:05:01,300 --> 01:05:01,900
code?

1502
01:05:02,300 --> 01:05:07,500
And so I think at this point, normally I would not have said this in

1503
01:05:07,900 --> 01:05:08,500
the old days.

1504
01:05:08,500 --> 01:05:11,700
Maybe I wouldn't have said this, but nowadays, I would say, I don't

1505
01:05:11,700 --> 01:05:15,300
think you can think about speed too often nowadays because the

1506
01:05:15,300 --> 01:05:18,000
pendulum so far in the other direction that people just apparently.

1507
01:05:18,000 --> 01:05:19,100
Don't think about it at all.

1508
01:05:19,400 --> 01:05:22,900
And so once we get back to a culture of performance,

1509
01:05:23,100 --> 01:05:25,900
If we ever do, which I don't know if we ever will, but if we got back

1510
01:05:25,900 --> 01:05:29,100
to a culture of performance where people in general were writing

1511
01:05:29,100 --> 01:05:30,300
highly performant code.

1512
01:05:30,300 --> 01:05:35,800
That was very well optimized then it might be a good time to say.

1513
01:05:35,800 --> 01:05:36,400
Okay.

1514
01:05:36,400 --> 01:05:38,400
Are we doing too much of that?

1515
01:05:38,400 --> 01:05:40,200
Are we sacrificing too much of that?

1516
01:05:40,200 --> 01:05:45,000
But right now in today's landscape, oh my god, like people need to be

1517
01:05:45,000 --> 01:05:49,500
thinking about performance 10, 20 30 times more often than they are.

1518
01:05:49,600 --> 01:05:52,700
So we're nowhere near the point where people are

1519
01:05:53,100 --> 01:05:54,700
Eating too much on optimization.

1520
01:06:00,200 --> 01:06:02,100
Why are using visual studio here, if you use emacs.

1521
01:06:02,100 --> 01:06:05,000
So visual studio, I use Visual Studio as the debugger.

1522
01:06:05,600 --> 01:06:07,600
So, basically, I just treat this as my debugger.

1523
01:06:07,600 --> 01:06:09,000
I don't edit any code in it.

1524
01:06:09,400 --> 01:06:12,800
I just use it for debugging and then I so I alt tab back and forth

1525
01:06:12,800 --> 01:06:17,400
between Emax where I edit the code and visual studio, where I run it

1526
01:06:18,000 --> 01:06:18,900
and step through it.

1527
01:06:19,400 --> 01:06:21,200
I would use emacs to step through it.

1528
01:06:21,200 --> 01:06:24,600
If you Max has had a better integrated debugger, but it doesn't, so I

1529
01:06:24,600 --> 01:06:25,400
don't do that.

1530
01:06:35,100 --> 01:06:39,900
Did you ever figure out a fix for emacs whenever you try to create a

1531
01:06:39,900 --> 01:06:42,700
new file and the patch changes?

1532
01:06:44,800 --> 01:06:45,200
I'm sorry.

1533
01:06:45,200 --> 01:06:46,200
Could you be more specific?

1534
01:06:46,300 --> 01:06:47,100
Swag, Kitty.

1535
01:06:47,100 --> 01:06:48,000
69?

1536
01:06:48,800 --> 01:06:49,800
Could you be more strict about that?

1537
01:06:49,800 --> 01:06:51,300
I'm not sure what you're referring to.

1538
01:06:51,400 --> 01:06:53,300
I assume you're referring to swing on a previous dream that I was

1539
01:06:53,300 --> 01:06:57,000
mentioning was broken or something, but I'm not sure which what it is,

1540
01:06:58,000 --> 01:06:59,000
elaborate a little more.

1541
01:07:04,100 --> 01:07:07,300
What's guiding you to make steps towards completing the game, a list

1542
01:07:07,300 --> 01:07:08,800
of requirements for the game.

1543
01:07:10,200 --> 01:07:17,600
So basically right now I know that I want a game like I'm not really

1544
01:07:17,600 --> 01:07:20,600
thinking too much about this, all of the design things that I have for

1545
01:07:20,600 --> 01:07:21,100
the game right.

1546
01:07:21,100 --> 01:07:21,600
Now.

1547
01:07:22,200 --> 01:07:25,100
What I mostly think about is just showing how to structure a

1548
01:07:25,100 --> 01:07:28,800
reasonable 2D engine that I know will have the ability to do all the

1549
01:07:28,800 --> 01:07:29,900
things I want to do in the game.

1550
01:07:30,300 --> 01:07:33,300
And so I basically just have an opinion of all the things that engine

1551
01:07:33,300 --> 01:07:33,800
should be able to.

1552
01:07:33,900 --> 01:07:36,100
To and I'm sort of going through them one by one.

1553
01:07:36,500 --> 01:07:40,500
So for example, the thing that we just did where we put entities in a

1554
01:07:40,500 --> 01:07:43,900
spatial partition and we have a high and a low frequency update for

1555
01:07:43,900 --> 01:07:44,400
entities.

1556
01:07:45,500 --> 01:07:48,800
That is because I want to show how to make sure that your engine

1557
01:07:48,800 --> 01:07:52,200
scales to very high numbers of entities, right?

1558
01:07:53,400 --> 01:07:56,000
And so I want to be able to put something in where we can guarantee

1559
01:07:56,000 --> 01:07:59,900
performance leveling so that we know that even if we have five million

1560
01:07:59,900 --> 01:08:03,800
entities or however many entities you want we can

1561
01:08:03,900 --> 01:08:06,400
Ways guarantee reasonable performance, right?

1562
01:08:06,400 --> 01:08:08,900
And we'll just sacrifice simulation accuracy for it.

1563
01:08:09,900 --> 01:08:11,300
So that's like what we were doing it.

1564
01:08:11,300 --> 01:08:13,500
So, I'm going through those sorts of things that I know that we need

1565
01:08:13,500 --> 01:08:15,400
to show how to do getting those set up.

1566
01:08:15,400 --> 01:08:15,600
Right?

1567
01:08:15,600 --> 01:08:18,899
So that we basically have a working prototype engine and then we can

1568
01:08:18,899 --> 01:08:22,399
go through and write final versions for each part of the engine, as we

1569
01:08:22,399 --> 01:08:24,399
decide that it's locked, right?

1570
01:08:26,000 --> 01:08:29,300
And then at the end of that, we'll have everything that we need.

1571
01:08:29,899 --> 01:08:33,700
Now, we won't do it like the whole engine in the whole game will do.

1572
01:08:33,899 --> 01:08:36,700
Some parts of the engine that we know are separable like the render

1573
01:08:36,700 --> 01:08:37,300
and stuff.

1574
01:08:37,500 --> 01:08:40,000
And then some parts will leave fluid as we make the game.

1575
01:08:40,000 --> 01:08:41,800
So we'll cuz we'll kind of see as we're making the game.

1576
01:08:41,800 --> 01:08:43,600
What we want in those parts.

1577
01:08:54,899 --> 01:08:58,500
Do you ever get annoyed with reading a high depth of nested for Loops

1578
01:08:59,100 --> 01:08:59,700
sometimes?

1579
01:08:59,700 --> 01:08:59,800
Yeah.

1580
01:09:00,300 --> 01:09:03,899
But, you know, usually it's not that bad.

1581
01:09:04,000 --> 01:09:08,000
The problem that I have on the stream is people can't read the text.

1582
01:09:08,000 --> 01:09:10,200
If I make it the size that I normally have it.

1583
01:09:10,200 --> 01:09:13,899
Normally, I have a monitor that's running at higher than 1920 by 1080.

1584
01:09:13,899 --> 01:09:17,200
So normally a vermonter that's running it, like, 2,500 by 1625,

1585
01:09:17,200 --> 01:09:18,899
Whatever by 1600, right?

1586
01:09:19,399 --> 01:09:21,100
And I have the text significantly smaller.

1587
01:09:21,100 --> 01:09:24,200
So normally that number of for Loops would not even be a big deal.

1588
01:09:24,600 --> 01:09:27,399
But on unfortunately, when I have to make things really big so they

1589
01:09:27,399 --> 01:09:29,300
can show up on Twitch and YouTube.

1590
01:09:30,500 --> 01:09:33,600
It's harder to read it also makes it harder for me to work on the code

1591
01:09:33,600 --> 01:09:36,600
because I can't see as big of a window into my code as I would like.

1592
01:09:37,100 --> 01:09:39,700
But you know, that's just that's just the concession.

1593
01:09:39,700 --> 01:09:42,500
You have to make in order to broadcast it properly and the whole point

1594
01:09:42,500 --> 01:09:44,300
of this project is to show people how to do it.

1595
01:09:44,300 --> 01:09:48,600
So I just, you know, it's just something I deal with it as best I can.

1596
01:09:55,900 --> 01:09:59,700
What's working was watching some ROM hacking earlier and watching the

1597
01:09:59,700 --> 01:10:02,700
registers and memory update in real-time was really cool.

1598
01:10:02,700 --> 01:10:06,400
Do you think it bugger 4C could work as well as that?

1599
01:10:10,300 --> 01:10:11,200
Do you mean?

1600
01:10:12,300 --> 01:10:13,000
Oh well.

1601
01:10:13,000 --> 01:10:15,900
Yeah, I mean, I guess it depends exactly what you're talking about.

1602
01:10:16,100 --> 01:10:19,100
But yeah, I mean C++ the virus could be way more awesome than they

1603
01:10:19,100 --> 01:10:19,300
are.

1604
01:10:19,300 --> 01:10:21,600
Now mean they could show you all kinds of things that you should be

1605
01:10:21,600 --> 01:10:23,000
seeing in aren't seeing, right.

1606
01:10:23,800 --> 01:10:27,000
So, I mean, yeah, I don't know if they can be as awesome as an

1607
01:10:27,000 --> 01:10:30,300
emulator because one of the things about emulators often emulating,

1608
01:10:30,300 --> 01:10:33,100
some things that are very simple and so there's less to display, but,

1609
01:10:33,100 --> 01:10:34,500
but still even so

1610
01:10:40,200 --> 01:10:42,700
How much time do you spend outside the stream and thinking about the

1611
01:10:42,700 --> 01:10:43,500
code and game design?

1612
01:10:43,500 --> 01:10:46,400
If you coded 8 hours a day, would you be able to code consistently

1613
01:10:46,400 --> 01:10:48,100
with the same Pace as during your stream?

1614
01:10:48,600 --> 01:10:51,900
Actually, I code much faster than I code on the stream normally.

1615
01:10:52,100 --> 01:10:56,100
So the stream is much slower than I would normally code.

1616
01:10:57,700 --> 01:11:00,800
I would say I'm probably about four times slower on the stream at

1617
01:11:00,800 --> 01:11:05,000
least, probably more because I have to explain things and I have to

1618
01:11:05,000 --> 01:11:07,700
talk at the same time, which makes it much more difficult for me.

1619
01:11:07,700 --> 01:11:09,300
And like I said, I don't

1620
01:11:09,500 --> 01:11:12,800
Have I can't see as much code because the monitor because of the way,

1621
01:11:12,800 --> 01:11:14,000
the fonts are set up and so on.

1622
01:11:15,300 --> 01:11:18,900
So, yeah, so I would say the pace that codon stream is very slow.

1623
01:11:19,200 --> 01:11:23,300
It is not a pace that I would consider a good pace for programming.

1624
01:11:24,900 --> 01:11:27,800
If I was not explaining things.

1625
01:11:38,600 --> 01:11:41,600
Can you please put in a proper prng before you write, worlds, and

1626
01:11:41,600 --> 01:11:42,000
algorithms?

1627
01:11:42,000 --> 01:11:45,500
Yes, we will be putting in a random number generator.

1628
01:11:47,200 --> 01:11:49,600
I don't actually remember what we put in there.

1629
01:11:49,600 --> 01:11:52,400
What did we put in currently?

1630
01:11:53,900 --> 01:11:56,100
Oh, we were just using a random number table.

1631
01:11:56,500 --> 01:11:57,200
So that's pretty good.

1632
01:11:57,200 --> 01:11:57,800
Actually.

1633
01:11:57,900 --> 01:11:59,100
Those are very high quality.

1634
01:11:59,100 --> 01:11:59,800
Random numbers.

1635
01:12:00,300 --> 01:12:01,900
Probably higher quality than what we'll do.

1636
01:12:02,500 --> 01:12:05,000
But yes, we will put in a proper random number generator.

1637
01:12:05,500 --> 01:12:07,700
When we actually try to

1638
01:12:09,800 --> 01:12:10,900
Wait, what?

1639
01:12:15,300 --> 01:12:18,400
How is it possible that our random number indicates after this many

1640
01:12:18,400 --> 01:12:18,900
screens?

1641
01:12:19,100 --> 01:12:22,900
How is it possible that our random number index doesn't get higher

1642
01:12:22,900 --> 01:12:25,300
than the random number tables size.

1643
01:12:25,900 --> 01:12:27,000
Is it really that we do?

1644
01:12:27,000 --> 01:12:29,600
We actually copy in more than 2,000 of them.

1645
01:12:32,700 --> 01:12:34,200
Is that how many do we actually do?

1646
01:12:34,200 --> 01:12:36,400
I don't remember, maybe we did.

1647
01:12:37,500 --> 01:12:38,800
I guess there are quite a few there.

1648
01:12:38,900 --> 01:12:39,700
That's kind of funny.

1649
01:12:39,800 --> 01:12:41,700
I would have expected that assert to hit eventually.

1650
01:12:42,700 --> 01:12:43,400
Yeah, well.

1651
01:12:47,000 --> 01:12:49,000
Do you ever feel the need to use recursive functions?

1652
01:12:49,600 --> 01:12:51,600
I do when I'm just hacking stuff out.

1653
01:12:52,000 --> 01:12:53,300
A lot of times recursive functions.

1654
01:12:53,300 --> 01:12:57,900
I get nervous about the stack and stuff and recursive functions have

1655
01:12:57,900 --> 01:13:03,200
some issues, but they're nice to use quickly because you can lean on

1656
01:13:03,200 --> 01:13:06,500
the fact that the stack does the memory management for you.

1657
01:13:06,500 --> 01:13:07,500
And so, that's kind of nice.

1658
01:13:07,500 --> 01:13:09,100
It just, yeah, it can be handy.

1659
01:13:10,200 --> 01:13:10,900
It can be handy.

1660
01:13:16,100 --> 01:13:21,600
Do you build with build .exe in command prompt or batch file?

1661
01:13:22,700 --> 01:13:26,200
So there is no buildup EXE the way that we have, it set up.

1662
01:13:26,200 --> 01:13:28,900
You can go take a look, actually, if you want to go.

1663
01:13:31,100 --> 01:13:35,400
Onto onto probably the best place would be using forums.

1664
01:13:35,400 --> 01:13:35,600
Actually.

1665
01:13:35,600 --> 01:13:38,400
You've got a handmade hero dot org, you click on this news and forums

1666
01:13:38,400 --> 01:13:38,800
link.

1667
01:13:39,400 --> 01:13:43,700
If you go there on the episode guide, I cover all this stuff in.

1668
01:13:43,700 --> 01:13:45,400
If you just take a look at this, right.

1669
01:13:45,400 --> 01:13:49,500
So setting up the windows builds, shows you kind of how that was done.

1670
01:13:49,800 --> 01:13:54,500
And then later on, I talked about how to do the live coding stuff,

1671
01:13:54,500 --> 01:13:57,100
which is this week 5, you can watch these.

1672
01:13:57,100 --> 01:14:00,300
And I cover all how that stuff works, how the build works, and how you

1673
01:14:00,300 --> 01:14:00,800
can do the live.

1674
01:14:01,000 --> 01:14:01,800
Editing and stuff.

1675
01:14:11,600 --> 01:14:13,900
When you say renderer, what exactly does that mean?

1676
01:14:13,900 --> 01:14:15,700
If the drawing you have now isn't rendering?

1677
01:14:15,700 --> 01:14:18,000
Then at what point do we go from drawing to rendering?

1678
01:14:18,800 --> 01:14:21,300
So I mean anything is a renderer at some level.

1679
01:14:21,300 --> 01:14:24,500
So it's not fair to say that what we're doing isn't rendering or

1680
01:14:24,500 --> 01:14:28,200
something because that's kind of just being arbitrary.

1681
01:14:28,200 --> 01:14:28,800
I would say.

1682
01:14:29,300 --> 01:14:33,200
So drawbitmap is a renderer in some sense.

1683
01:14:33,200 --> 01:14:36,900
I mean, it does put pixels on the screen, but basically what I what I

1684
01:14:36,900 --> 01:14:39,600
would consider a renderer is something that satisfies a few more of

1685
01:14:39,600 --> 01:14:40,500
the criteria that we

1686
01:14:40,800 --> 01:14:43,000
Have would want for a game.

1687
01:14:43,000 --> 01:14:45,800
So some of them are much faster than it is.

1688
01:14:45,800 --> 01:14:46,200
Now.

1689
01:14:46,600 --> 01:14:51,000
I mean, it could be several times faster on this machine 10, 20 times

1690
01:14:51,000 --> 01:14:54,800
faster on a lot faster than it is now so much much faster than it is

1691
01:14:54,800 --> 01:14:55,200
now.

1692
01:14:56,700 --> 01:14:59,900
More operations, so the ability to change.

1693
01:15:00,000 --> 01:15:04,000
The colors of things would be an example, right?

1694
01:15:04,000 --> 01:15:05,900
We only have the ability to change the alpha right now.

1695
01:15:07,800 --> 01:15:12,900
The ability to rotate and scale things which we don't currently have

1696
01:15:12,900 --> 01:15:15,200
like, we can only just all we could do right now is just copy a

1697
01:15:15,200 --> 01:15:16,500
rectangle to a rectangle.

1698
01:15:17,000 --> 01:15:20,300
So rotation and scaling and then the other thing would be.

1699
01:15:20,400 --> 01:15:23,800
Maybe some intelligence about what gets filled and what doesn't?

1700
01:15:23,900 --> 01:15:26,700
So, for example, if there's a guy, if there's a Sprite on the screen

1701
01:15:26,700 --> 01:15:27,700
and there's something behind it.

1702
01:15:27,700 --> 01:15:29,900
Maybe we don't actually composite the stuff that's behind.

1703
01:15:30,000 --> 01:15:32,400
And it so Summit, maybe some calling and some occlusion.

1704
01:15:32,700 --> 01:15:35,300
Those are the kinds of things that I would want in a renderer in a

1705
01:15:35,300 --> 01:15:36,100
good renderer.

1706
01:15:36,600 --> 01:15:38,700
And so when I say, we're going to write the render, what I mean, we're

1707
01:15:38,700 --> 01:15:41,700
going to write a system that does all of that stuff, not just

1708
01:15:41,700 --> 01:15:43,800
something that copies a bitmap from one place to the other, which is

1709
01:15:43,800 --> 01:15:46,700
all we have right now, which I wouldn't really call a renderer, even

1710
01:15:46,700 --> 01:15:48,700
though technically you could call it a render if you wanted to.

1711
01:15:48,700 --> 01:15:50,500
It's just a really bad renderer.

1712
01:15:55,300 --> 01:15:58,100
Have any of your friends voice disagreement with design decisions

1713
01:15:58,100 --> 01:15:59,500
you've made in this engine.

1714
01:16:00,300 --> 01:16:01,500
I don't think so.

1715
01:16:04,100 --> 01:16:07,400
But to be fair, I haven't made a lot of design decisions in this

1716
01:16:07,400 --> 01:16:12,000
engine yet because we haven't really like finished with it.

1717
01:16:12,000 --> 01:16:14,000
And said, here's, you know, everything.

1718
01:16:15,100 --> 01:16:16,800
It's going to work or anything, right?

1719
01:16:18,400 --> 01:16:18,900
But yeah.

1720
01:16:22,900 --> 01:16:25,100
How do you distinguish between what a lot of people might call

1721
01:16:25,100 --> 01:16:28,200
premature optimization versus ensuring a good design that allows for

1722
01:16:28,200 --> 01:16:30,900
high performance, the difference there seems really subtle.

1723
01:16:31,100 --> 01:16:33,800
I feel that designing for high performance is simply organizing the

1724
01:16:33,800 --> 01:16:36,500
code and writing in such a way that does not unnecessarily slow down

1725
01:16:36,500 --> 01:16:38,700
the code to prevent future optimizations while.

1726
01:16:38,700 --> 01:16:41,400
Premature optimization is simply optimizing something, because you

1727
01:16:41,400 --> 01:16:43,400
think something will be slow without evidence.

1728
01:16:44,400 --> 01:16:45,700
So, that's an excellent question.

1729
01:16:45,900 --> 01:16:46,500
First of all.

1730
01:16:47,900 --> 01:16:52,700
And I think you're sort of answer that you put in there is also good.

1731
01:16:53,600 --> 01:16:59,400
What I would say is that premature optimization is spending time on is

1732
01:16:59,600 --> 01:17:04,700
spending time on something before, you know that you need to do it,

1733
01:17:05,000 --> 01:17:05,600
right?

1734
01:17:07,100 --> 01:17:09,900
And so, I would say that.

1735
01:17:11,500 --> 01:17:16,800
For example, let's say that what we were going to do.

1736
01:17:16,800 --> 01:17:20,000
Next is is the spatial partition, right?

1737
01:17:20,000 --> 01:17:23,100
So I made the spatial partition here, right?

1738
01:17:25,000 --> 01:17:26,600
And so this spatial partition.

1739
01:17:28,800 --> 01:17:34,400
An example of premature optimization would be, let's go figure out the

1740
01:17:34,400 --> 01:17:39,400
most efficient spatial partition to keep our low entities in here,

1741
01:17:39,500 --> 01:17:40,200
right?

1742
01:17:40,200 --> 01:17:43,300
So let's let's like go make this really fast so that we know the

1743
01:17:43,300 --> 01:17:47,300
insertion and removal is really really fast like time it for insertion

1744
01:17:47,300 --> 01:17:51,000
or removal will time iteration and the moving things from high to low

1745
01:17:51,000 --> 01:17:54,700
like that would be premature optimization because we don't even know

1746
01:17:54,700 --> 01:17:55,900
if this is the code that we're going to you.

1747
01:17:55,900 --> 01:17:56,300
We don't even know.

1748
01:17:56,300 --> 01:17:58,000
This is the structure going to use in the end.

1749
01:17:59,100 --> 01:17:59,600
However,

1750
01:18:00,000 --> 01:18:02,700
Hang it in my opinion, making a spatial partition.

1751
01:18:02,700 --> 01:18:03,600
Just a basic one.

1752
01:18:03,600 --> 01:18:04,400
That works.

1753
01:18:04,400 --> 01:18:08,900
Well enough is not premature optimization in my opinion because I know

1754
01:18:08,900 --> 01:18:11,100
I need a spatial partition.

1755
01:18:11,100 --> 01:18:14,000
Because with the number of entity queries we're going to do is going

1756
01:18:14,000 --> 01:18:15,200
to be very large.

1757
01:18:15,500 --> 01:18:17,500
I know I need something to handle that.

1758
01:18:18,000 --> 01:18:20,900
And so what I'm trying to do at this stage of the code is actually

1759
01:18:20,900 --> 01:18:24,900
figure out what I need to make sure my engine looks like in order to

1760
01:18:24,900 --> 01:18:27,800
ensure that a spatial partition can slot into it.

1761
01:18:28,600 --> 01:18:29,900
And so I think you need to go as

1762
01:18:30,000 --> 01:18:33,000
As far down that road as is necessary, to make sure that you

1763
01:18:33,000 --> 01:18:37,800
understand the consequences of sliding a component in, but you don't

1764
01:18:37,800 --> 01:18:38,800
have to go any further.

1765
01:18:39,200 --> 01:18:42,100
Like, right now, we don't have to do any more work to figure out

1766
01:18:42,200 --> 01:18:43,700
whether this is good or not.

1767
01:18:44,000 --> 01:18:44,800
As far as I'm concerned.

1768
01:18:44,800 --> 01:18:49,100
It has all of the aspects that we probably will have with a good

1769
01:18:49,100 --> 01:18:50,000
spatial partition.

1770
01:18:50,100 --> 01:18:52,200
It has the concert that you have to look up pieces.

1771
01:18:52,600 --> 01:18:53,700
Inside those pieces.

1772
01:18:53,700 --> 01:18:58,500
It has some notion of chunked lists of stuff, right?

1773
01:18:59,400 --> 01:18:59,900
You insert.

1774
01:19:00,000 --> 01:19:04,000
And remove things from it in a defined way and it's indirect

1775
01:19:04,000 --> 01:19:04,700
referencing.

1776
01:19:05,200 --> 01:19:08,900
So anything that we might have in a spatial partition is here, and I'm

1777
01:19:08,900 --> 01:19:10,500
pretty confident that in the future.

1778
01:19:10,500 --> 01:19:13,400
If we need to change the space of partition, we would not have to

1779
01:19:13,400 --> 01:19:16,100
re-architect the whole engine to do so, right.

1780
01:19:16,200 --> 01:19:17,600
And that's all you really need.

1781
01:19:17,800 --> 01:19:20,100
And so that's the key part.

1782
01:19:20,100 --> 01:19:23,900
When you're working on the structure things is put in.

1783
01:19:23,900 --> 01:19:28,200
Just enough to know that the devil in the details has been exposed.

1784
01:19:29,100 --> 01:19:32,200
But do not try to actually fight the devil.

1785
01:19:32,300 --> 01:19:33,600
Let the devil stay there.

1786
01:19:33,600 --> 01:19:34,100
Right?

1787
01:19:34,100 --> 01:19:36,300
So, you want to get the devil in the details, but you don't want to

1788
01:19:36,500 --> 01:19:38,700
Vanquish him later on.

1789
01:19:38,700 --> 01:19:40,800
You Vanquish them is what I would say.

1790
01:19:53,000 --> 01:19:56,200
4096 random numbers so we can draw a lot of screens.

1791
01:19:56,200 --> 01:19:57,900
We can draw 4,000 screens.

1792
01:20:04,100 --> 01:20:05,200
Will we have position-less?

1793
01:20:05,200 --> 01:20:06,400
Entities with something?

1794
01:20:06,400 --> 01:20:09,400
Like the current price of almond milk, Futures be an entity.

1795
01:20:10,200 --> 01:20:15,000
So maybe we now support position-less entities, but I don't know if we

1796
01:20:15,000 --> 01:20:16,300
will have them in the future or not.

1797
01:20:16,300 --> 01:20:17,000
It's a good question.

1798
01:20:17,500 --> 01:20:18,300
We'll have to see.

1799
01:20:23,300 --> 01:20:25,900
We've been making a level tile map editor for this game for easier.

1800
01:20:25,900 --> 01:20:28,700
Level creation know this game is procedurally generated.

1801
01:20:28,700 --> 01:20:30,300
So there are no prefab levels.

1802
01:20:30,300 --> 01:20:32,100
Everything's going to be different every time you play it.

1803
01:20:40,700 --> 01:20:45,000
What is your algorithm for a collision with three and more entities?

1804
01:20:48,800 --> 01:20:50,400
Don't follow you there.

1805
01:20:50,400 --> 01:20:57,800
So just to be clear, you don't have to there is, okay.

1806
01:20:57,800 --> 01:20:59,800
So I think I know where that question.

1807
01:21:00,000 --> 01:21:00,600
Coming from.

1808
01:21:02,100 --> 01:21:05,000
Let me try to be a little clearer on how this works.

1809
01:21:05,000 --> 01:21:06,700
Just so people aren't confused.

1810
01:21:07,100 --> 01:21:08,400
So we're talking about here.

1811
01:21:09,600 --> 01:21:12,000
So, I assume you're talking about this and why there's only four

1812
01:21:12,000 --> 01:21:12,700
iterations.

1813
01:21:13,800 --> 01:21:19,400
So, what you have to remember is we are talking right now about 1/30

1814
01:21:19,400 --> 01:21:21,000
of a second, right?

1815
01:21:21,900 --> 01:21:27,500
So basically the amount of time 1/30 of a second, right?

1816
01:21:28,200 --> 01:21:31,400
So the amount of time that were updating and every frame is this,

1817
01:21:31,900 --> 01:21:35,200
which is basically which is 33 milliseconds, right?

1818
01:21:36,000 --> 01:21:39,600
So, if you imagine how far the guy moves on the screen, right?

1819
01:21:39,600 --> 01:21:41,800
If this were the whole screen right now, right?

1820
01:21:41,900 --> 01:21:46,900
He moves, you know, that far or something, the 30th of a second maybe

1821
01:21:46,900 --> 01:21:49,900
less, you know, we may be moves like that far, right?

1822
01:21:50,100 --> 01:21:55,500
So you're talking about moving that far, there should be no way that

1823
01:21:55,500 --> 01:22:00,100
you can ever run in 24 different monsters moving that far.

1824
01:22:00,100 --> 01:22:04,500
And if for some reason you did it's okay that we only process the

1825
01:22:04,500 --> 01:22:05,400
first for you.

1826
01:22:06,200 --> 01:22:10,300
Right, so it's not a restriction on the number of monsters.

1827
01:22:10,300 --> 01:22:12,100
He's fighting he can fight a thousand monsters.

1828
01:22:12,100 --> 01:22:12,800
No problem.

1829
01:22:13,200 --> 01:22:16,900
The only thing is that when he's moving he cannot bounce.

1830
01:22:16,900 --> 01:22:21,000
Essentially off of four different monsters in that little tiny space

1831
01:22:21,000 --> 01:22:25,200
right there and again, so this is just like if you imagine this

1832
01:22:25,200 --> 01:22:26,100
magnified

1833
01:22:27,100 --> 01:22:28,100
Here's the guy.

1834
01:22:28,200 --> 01:22:29,200
He's moving here.

1835
01:22:29,300 --> 01:22:29,900
Right?

1836
01:22:30,100 --> 01:22:30,900
But there's a monster.

1837
01:22:30,900 --> 01:22:31,800
That's right here.

1838
01:22:31,800 --> 01:22:34,600
He hits it and then it truncates.

1839
01:22:34,600 --> 01:22:36,200
So he can only move in that direction.

1840
01:22:36,200 --> 01:22:37,200
So now he's trying to move here.

1841
01:22:37,200 --> 01:22:39,100
If there was another monster, he hit it.

1842
01:22:39,100 --> 01:22:42,200
But at that point, he can't even move anymore because he's had all of

1843
01:22:42,200 --> 01:22:43,100
his movement directions.

1844
01:22:43,100 --> 01:22:44,000
Truncated.

1845
01:22:44,000 --> 01:22:48,300
So he just stopped anyway, so, it'd be hard for him to even get

1846
01:22:48,300 --> 01:22:51,600
without some restoration velocity and without him bouncing off things.

1847
01:22:51,900 --> 01:22:54,700
It would be hard for him to ever even hit for and even if he did we

1848
01:22:54,700 --> 01:22:56,800
hard hit for because again, it's such a small amount of movement.

1849
01:22:57,000 --> 01:22:59,300
Talking about, so that's what's happening there.

1850
01:22:59,300 --> 01:23:01,500
So he could easily fight as many monsters as you want.

1851
01:23:01,500 --> 01:23:05,100
That will never be a problem for honestly is probably Overkill.

1852
01:23:05,900 --> 01:23:09,700
You could probably get away with one iteration through this Loop for

1853
01:23:09,700 --> 01:23:11,600
is probably way Overkill to be honest with you.

1854
01:23:16,000 --> 01:23:18,600
Do you plan to use some form of logging for debugging purposes?

1855
01:23:18,600 --> 01:23:24,000
Yes, once we have a little bit more, once I look at one of these days,

1856
01:23:24,000 --> 01:23:25,800
we got to bite the bullet and get thoughts going.

1857
01:23:26,400 --> 01:23:29,200
So we can actually have some heads up displays and stuff when we get

1858
01:23:29,200 --> 01:23:32,800
to that point will be, will be doing some good debugging support for

1859
01:23:32,800 --> 01:23:35,300
sure, but we haven't quite gotten there yet.

1860
01:23:35,300 --> 01:23:37,600
And since we don't have a lot of really hard to bugging problems right

1861
01:23:37,600 --> 01:23:37,900
now.

1862
01:23:37,900 --> 01:23:39,200
It hasn't been worth it like everything.

1863
01:23:39,200 --> 01:23:42,300
We've had to bug has been debugged in, you know, a couple minutes, so

1864
01:23:48,700 --> 01:23:51,400
When you remove a low entity from the chunk list you swap another into

1865
01:23:51,400 --> 01:23:52,000
its place.

1866
01:23:52,000 --> 01:23:53,500
Won't that mess with references?

1867
01:23:54,200 --> 01:23:57,400
No, because those are all already references.

1868
01:24:00,000 --> 01:24:01,700
Nobody actually points.

1869
01:24:02,900 --> 01:24:04,400
Into the chunk list.

1870
01:24:04,400 --> 01:24:06,600
The chunk list is just an array of entity indices.

1871
01:24:07,000 --> 01:24:08,800
So nobody is pointing into that.

1872
01:24:08,900 --> 01:24:09,800
So we should be fine.

1873
01:24:15,800 --> 01:24:18,600
Even Force low-frequency entities.

1874
01:24:19,300 --> 01:24:21,800
What is that in reference to happy vertex?

1875
01:24:22,600 --> 01:24:22,900
What is it?

1876
01:24:23,200 --> 01:24:25,000
Oh, even Force low-frequency entities.

1877
01:24:25,200 --> 01:24:30,700
So my plan and this may be wrong, but my plan is move player.

1878
01:24:30,700 --> 01:24:34,000
For example, this is only operating in high frequency in low

1879
01:24:34,000 --> 01:24:34,400
frequency.

1880
01:24:34,400 --> 01:24:37,400
We will never do Collision detection in low frequency.

1881
01:24:37,400 --> 01:24:40,500
We will do purely semantic, updating of entities.

1882
01:24:40,500 --> 01:24:44,700
I suspect because we want to we don't want to have

1883
01:24:45,100 --> 01:24:46,100
Map everything into high.

1884
01:24:46,100 --> 01:24:51,300
So remember this move player only happens in high because

1885
01:24:51,400 --> 01:24:53,800
low-frequency entities can't be near the player by definition.

1886
01:24:54,100 --> 01:24:56,300
So we're never trying to collide the player with those.

1887
01:24:59,700 --> 01:25:03,300
Okay, we have come to the end of the questions.

1888
01:25:04,500 --> 01:25:05,400
Which is pretty awesome.

1889
01:25:06,700 --> 01:25:07,800
Because we're right on time.

1890
01:25:08,300 --> 01:25:11,700
All right, we are right on time, for minutes from closing.

1891
01:25:11,700 --> 01:25:12,800
That's perfect.

1892
01:25:13,300 --> 01:25:18,400
So let's go ahead and, and, and and close things up.

1893
01:25:18,400 --> 01:25:18,900
Shall we?

1894
01:25:19,300 --> 01:25:20,700
Let's close this down.

1895
01:25:21,500 --> 01:25:22,800
Close that down.

1896
01:25:23,200 --> 01:25:24,300
I'm glad we got the trees in today.

1897
01:25:24,300 --> 01:25:26,200
It was nice to have those trees and I was tired of looking at those

1898
01:25:26,200 --> 01:25:26,400
yellow.

1899
01:25:26,400 --> 01:25:27,000
Rectangles.

1900
01:25:27,300 --> 01:25:28,200
Let me tell you that.

1901
01:25:28,700 --> 01:25:29,300
All right.

1902
01:25:29,900 --> 01:25:32,700
So let's let's wind up the stream.

1903
01:25:33,300 --> 01:25:35,700
Thank you, everyone for joining me for another episode of handmade

1904
01:25:35,700 --> 01:25:35,900
hero.

1905
01:25:35,900 --> 01:25:36,200
It has been a

1906
01:25:36,500 --> 01:25:37,100
Recording with you.

1907
01:25:37,100 --> 01:25:39,700
As always, I like, the way things have been going.

1908
01:25:40,100 --> 01:25:41,800
Everything has gone pretty smoothly so far.

1909
01:25:41,800 --> 01:25:43,000
I don't know if that's means.

1910
01:25:43,000 --> 01:25:44,900
We should quit while we're ahead, but I don't know.

1911
01:25:44,900 --> 01:25:45,500
I'm foolhardy.

1912
01:25:45,500 --> 01:25:48,400
I'm going to, I'm going to take The Optimist position and say things

1913
01:25:48,400 --> 01:25:51,300
will keep going well, because it's been pretty cool so far.

1914
01:25:51,800 --> 01:25:55,900
So, yeah, so we got to a point now where we can sort of start thinking

1915
01:25:55,900 --> 01:25:59,000
about making some World stuff, we can sort of start, we things are

1916
01:25:59,000 --> 01:26:00,000
starting to open up here for us.

1917
01:26:00,000 --> 01:26:03,900
So I think maybe we'll start considering a little more entities and

1918
01:26:03,900 --> 01:26:06,300
getting some of that stuff working and then the last real

1919
01:26:06,400 --> 01:26:09,500
a big piece that we gotta tackle after we look at that, maybe is

1920
01:26:09,500 --> 01:26:10,300
animation.

1921
01:26:10,800 --> 01:26:12,200
So but we're getting real close.

1922
01:26:12,200 --> 01:26:15,200
This is this is looking good and I like the way things are shaping up

1923
01:26:15,300 --> 01:26:18,700
and yeah, I got nothing but positive stuff to say about things have

1924
01:26:18,700 --> 01:26:19,500
gone so far.

1925
01:26:20,000 --> 01:26:24,200
So, yeah, so if you would like to join me tomorrow,

1926
01:26:25,100 --> 01:26:25,600
8 p.m.

1927
01:26:25,600 --> 01:26:29,300
Pacific Standard time again, we will go through and maybe pull out

1928
01:26:29,300 --> 01:26:31,900
some of that entity code and get it into sort of a more

1929
01:26:31,900 --> 01:26:34,500
straightforward fashion where we can clearly see, they put it in a

1930
01:26:34,500 --> 01:26:37,400
separate file, like exactly all the steps that we're doing and how

1931
01:26:37,400 --> 01:26:41,200
they always are supposed to line up and then we'll sort of make maybe

1932
01:26:41,200 --> 01:26:43,800
start making some more entities that move around, besides just the

1933
01:26:43,800 --> 01:26:45,500
player and maybe some stuff you can pick up your.

1934
01:26:45,500 --> 01:26:48,100
Like I started start to get a little gamey stuff in there, see how

1935
01:26:48,100 --> 01:26:50,900
that plays out and see what we need to do with it, just to kind of get

1936
01:26:50,900 --> 01:26:52,000
going in that direction.

1937
01:26:52,600 --> 01:26:54,000
So that's what we'll be doing tomorrow.

1938
01:26:54,400 --> 01:26:54,800
I'd love to

1939
01:26:54,900 --> 01:26:56,200
To see you here again.

1940
01:26:56,200 --> 01:26:59,800
If you would like to follow along at home with the source code, if you

1941
01:27:00,000 --> 01:27:02,300
Pre-order the game, you get access to the source code and you can

1942
01:27:02,300 --> 01:27:04,100
download it every night after I finish.

1943
01:27:04,100 --> 01:27:06,100
I upload the source that we did for that day.

1944
01:27:06,900 --> 01:27:09,500
So you can go ahead and pre-order that on handmade hero dot-org.

1945
01:27:09,700 --> 01:27:11,500
Using the handy dandy pre-order button.

1946
01:27:11,900 --> 01:27:13,600
You can also support the video series.

1947
01:27:13,700 --> 01:27:16,900
We have a patreon, you can subscribe to which you can click through on

1948
01:27:16,900 --> 01:27:19,300
here and there's also a news and Forum site.

1949
01:27:19,300 --> 01:27:23,700
You can go to where if you want to learn more about the series or try

1950
01:27:23,700 --> 01:27:25,400
to study different parts of it.

1951
01:27:25,500 --> 01:27:26,200
It's a great place to go.

1952
01:27:26,200 --> 01:27:29,200
It's got episode guide the schedule for the week so is posted and also

1953
01:27:29,200 --> 01:27:29,800
I made the

1954
01:27:30,000 --> 01:27:30,900
Handmade tweeting bot.

1955
01:27:30,900 --> 01:27:33,900
So if you go to the tweets page, you can you can subscribe to the

1956
01:27:33,900 --> 01:27:38,100
handmade Kuro Twitter and it'll tweet the schedule at you as well.

1957
01:27:38,100 --> 01:27:38,900
So, that's kind of Handy.

1958
01:27:38,900 --> 01:27:41,300
But yeah, point being the schedule is always posted here.

1959
01:27:41,300 --> 01:27:42,800
If you just want to check it out.

1960
01:27:43,000 --> 01:27:45,000
And then there's a three things you should know about the episode

1961
01:27:45,000 --> 01:27:45,300
guide.

1962
01:27:45,300 --> 01:27:46,600
If you want to catch up on old episodes.

1963
01:27:46,600 --> 01:27:47,600
That's the place to go.

1964
01:27:48,600 --> 01:27:51,100
The coding resources page, has ports to Mac and Linux, and stuff like

1965
01:27:51,100 --> 01:27:51,500
that.

1966
01:27:51,600 --> 01:27:52,500
So that's a great place to go.

1967
01:27:52,500 --> 01:27:55,300
If you want to work on a different platform than Windows for right

1968
01:27:55,300 --> 01:27:57,900
now, and we have a code discussion page as well.

1969
01:27:57,900 --> 01:27:59,700
You can go to which

1970
01:28:00,000 --> 01:28:03,900
Has sort of forum we can post questions or discuss things.

1971
01:28:03,900 --> 01:28:05,000
If you just have questions.

1972
01:28:05,100 --> 01:28:07,400
There's a bunch of people who helped answer that.

1973
01:28:07,700 --> 01:28:08,300
So yeah.

1974
01:28:08,400 --> 01:28:10,700
Thank you very much for joining me and I hope to see you guys

1975
01:28:10,700 --> 01:28:11,100
tomorrow.

1976
01:28:11,100 --> 01:28:11,700
Take it easy.

