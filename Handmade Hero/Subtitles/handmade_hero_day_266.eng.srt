1
00:00:01,500 --> 00:00:03,400
Hello everyone and welcome to handmade here.

2
00:00:03,400 --> 00:00:05,900
The show we could complete game live on stream.

3
00:00:06,300 --> 00:00:08,200
We are doing.

4
00:00:08,900 --> 00:00:10,400
We're really, let's be honest.

5
00:00:10,400 --> 00:00:12,300
This is a bit of a beautification situation.

6
00:00:12,300 --> 00:00:13,600
We're doing some beautification.

7
00:00:14,300 --> 00:00:17,700
We cleaned up our layout code yesterday, and we're sort of making our

8
00:00:17,700 --> 00:00:19,600
debugger UI a little bit nicer.

9
00:00:19,600 --> 00:00:20,200
To use.

10
00:00:21,100 --> 00:00:25,000
We added like a bunch of features to it over time, and did a ton of

11
00:00:25,000 --> 00:00:26,100
work trying to figure out like, what?

12
00:00:26,100 --> 00:00:27,300
The right architecture should be.

13
00:00:27,300 --> 00:00:30,100
And I kind of used the system as sort of a way of showing how to

14
00:00:31,400 --> 00:00:33,400
No exploratory, really build.

15
00:00:34,000 --> 00:00:37,800
You know, an architectural structure that can support a large number

16
00:00:37,800 --> 00:00:39,400
of Fairly intricate operations.

17
00:00:40,100 --> 00:00:43,700
And now we're just in the the phase of kind of like finishing up it to

18
00:00:43,700 --> 00:00:47,000
our satisfaction, which involves, of course, putting things up and

19
00:00:47,000 --> 00:00:49,300
making the UI more usable in places where it needs to be.

20
00:00:49,800 --> 00:00:54,800
But also another thing that we need to do is just print out data and

21
00:00:54,800 --> 00:00:56,500
more useful ways and stuff like that.

22
00:00:56,500 --> 00:00:58,800
So those are the sorts of things that we'll be doing and that's what

23
00:00:58,800 --> 00:00:59,300
we'll be doing.

24
00:00:59,300 --> 00:01:01,200
Again today we

25
00:01:01,300 --> 00:01:02,300
still got a couple more days.

26
00:01:02,300 --> 00:01:06,800
I think of putting those features in there because well, just in

27
00:01:06,800 --> 00:01:07,300
general.

28
00:01:07,300 --> 00:01:08,100
I feel like

29
00:01:10,500 --> 00:01:16,000
We already even just the very basic thing that we did, where we showed

30
00:01:16,000 --> 00:01:19,000
the profile bars, the first time it ever was on the screen, we already

31
00:01:19,000 --> 00:01:21,400
found a bug in xinput.

32
00:01:21,500 --> 00:01:22,000
Right?

33
00:01:22,500 --> 00:01:23,500
That we wouldn't have known about.

34
00:01:23,500 --> 00:01:28,400
So having like a lot of ways to visualize what's happening in your

35
00:01:28,400 --> 00:01:33,000
program, the parts that you can't see is really pretty valuable and so

36
00:01:33,000 --> 00:01:35,700
you want to have some of that there now.

37
00:01:35,700 --> 00:01:38,400
Ideally, you know, you build a library like this and you can use it a

38
00:01:38,400 --> 00:01:38,800
lot.

39
00:01:38,800 --> 00:01:38,900
So,

40
00:01:39,000 --> 00:01:42,800
You don't have to do it on every project and the other thing you can

41
00:01:42,800 --> 00:01:44,400
do to write if you want stuff like this.

42
00:01:44,400 --> 00:01:47,500
Is sometimes there are packages out there that you can buy or use that

43
00:01:47,500 --> 00:01:48,500
help you, with debug code.

44
00:01:48,500 --> 00:01:54,200
And one of the nice things about that is since, you know, the, since

45
00:01:54,200 --> 00:01:57,200
the debug code compiles out of the game and doesn't ship with the

46
00:01:57,200 --> 00:02:02,100
game, there's less risk in using some external package or some, you

47
00:02:02,100 --> 00:02:07,000
know, third party thing or even in reusing your own code from from

48
00:02:07,000 --> 00:02:07,400
Project to project.

49
00:02:07,400 --> 00:02:08,800
Because it's

50
00:02:09,000 --> 00:02:10,500
Not really on the critical path, right?

51
00:02:10,500 --> 00:02:13,800
If there's like, heinous bugs in the debug layer, or it's super janky,

52
00:02:13,800 --> 00:02:17,000
or whatever else, as long as it gives you the things that you need to

53
00:02:17,000 --> 00:02:22,800
see that's enough and it won't adversely affect the users experience

54
00:02:22,800 --> 00:02:25,500
because it's not ever running on the user's machine.

55
00:02:25,700 --> 00:02:28,300
So that's kind of a nice aspect of it as well.

56
00:02:29,800 --> 00:02:34,000
And it means that you can sort of like cut Corners as you need to or

57
00:02:34,000 --> 00:02:35,000
other things like that.

58
00:02:36,400 --> 00:02:38,900
And so yeah, I showed you how to make one care.

59
00:02:39,000 --> 00:02:39,400
Surgery.

60
00:02:39,400 --> 00:02:41,700
A lot of stuff that you can do in a debug system.

61
00:02:41,700 --> 00:02:44,000
You're free to decide kind of what level you want to do there.

62
00:02:44,000 --> 00:02:48,000
You know, or the obvious thing like I said, is, you know, you can turn

63
00:02:48,000 --> 00:02:51,300
it into sort of a library that you use on every project which I think

64
00:02:51,300 --> 00:02:53,700
would be a good thing, because debug code tends to be fairly similar.

65
00:02:53,700 --> 00:02:59,800
So, you know, it's a, it's that's the basic idea and all we really

66
00:03:00,000 --> 00:03:03,400
You do now is kind of get it to the point where we're happy with it.

67
00:03:03,600 --> 00:03:08,300
So today is day to 66 and so if you want to follow along at home, you

68
00:03:08,300 --> 00:03:10,800
want to unpack day to 65s source code.

69
00:03:10,800 --> 00:03:12,300
That's what we're starting with today.

70
00:03:12,700 --> 00:03:13,300
So,

71
00:03:14,700 --> 00:03:17,800
if I load up handmade,

72
00:03:20,600 --> 00:03:24,600
And I launch it.

73
00:03:30,600 --> 00:03:34,100
Should see all of our stuff that we have.

74
00:03:34,100 --> 00:03:41,100
So where we stopped yesterday is we have these like buttons and I put

75
00:03:41,100 --> 00:03:44,300
some backing on them and now you can, you know, play with them and

76
00:03:44,300 --> 00:03:44,600
stuff.

77
00:03:44,600 --> 00:03:45,400
We can pause.

78
00:03:45,400 --> 00:03:49,200
And we can move around and things like this and that's all fine.

79
00:03:50,500 --> 00:03:54,700
But I guess the only I'm trying to think of like, what sorts of things

80
00:03:54,700 --> 00:03:59,400
I want to do before we move on, you know, this stuff all is

81
00:03:59,500 --> 00:04:01,300
Be reasonable and I can move.

82
00:04:03,300 --> 00:04:05,800
Around on these and look at more specific things.

83
00:04:06,000 --> 00:04:09,700
But I think really the main thing that I need to focus on because I

84
00:04:09,700 --> 00:04:12,000
think we've got most of the other things here.

85
00:04:12,500 --> 00:04:15,000
The main thing that I would want to focus on for finishing up here is

86
00:04:15,000 --> 00:04:16,800
making this profile window.

87
00:04:18,399 --> 00:04:25,000
A little more making the profile window more useful in the sense that

88
00:04:25,400 --> 00:04:28,200
you know right now the rendering of it is still a little bit janky and

89
00:04:28,200 --> 00:04:32,600
it's it's not so it's not so clear like you know

90
00:04:33,500 --> 00:04:34,700
We currently are only drawing.

91
00:04:34,700 --> 00:04:35,800
One level deep.

92
00:04:35,800 --> 00:04:37,800
I'd like to draw on more than one level deep here.

93
00:04:37,800 --> 00:04:40,000
Like we already had that but we turned it off.

94
00:04:40,400 --> 00:04:43,700
Maybe make these solid bars and outline them in black or something

95
00:04:43,700 --> 00:04:44,000
like that.

96
00:04:44,000 --> 00:04:47,700
So it's a little easier to see, you know, just go through here and

97
00:04:47,700 --> 00:04:49,100
really make this easier to use.

98
00:04:49,100 --> 00:04:52,400
And also I want to maybe put one more button here which is just like a

99
00:04:52,400 --> 00:04:56,800
top list which is more the standard profile or view, which would be

100
00:04:56,800 --> 00:05:00,200
something that would kind of, let us see like okay for a given

101
00:05:00,200 --> 00:05:02,400
function, like whatever function we pick.

102
00:05:04,200 --> 00:05:05,900
Or rather, not forgiven function.

103
00:05:05,900 --> 00:05:10,400
I should say more like across all functions who is taking the most

104
00:05:10,400 --> 00:05:12,300
total time, right?

105
00:05:12,900 --> 00:05:17,100
And have a way of looking at that in a sorted view.

106
00:05:17,100 --> 00:05:22,200
So you know, be able to sort a list by that if that makes sense and

107
00:05:22,200 --> 00:05:25,600
that might be I'm kind of in the mood to see that information, I think

108
00:05:25,600 --> 00:05:27,900
that's something I might want to look at.

109
00:05:28,100 --> 00:05:32,400
So I feel like that's a maybe what I'll start with today is just

110
00:05:32,400 --> 00:05:33,000
adding another

111
00:05:33,200 --> 00:05:36,700
Which allows the profile to show that piece of information.

112
00:05:37,400 --> 00:05:39,300
So I'm going to go ahead and

113
00:05:41,400 --> 00:05:42,600
make that happen here.

114
00:05:42,800 --> 00:05:46,600
And I also want to double-check something to make sure that we're act

115
00:05:46,600 --> 00:05:50,700
that it's actually working the way that we want it to work, which is

116
00:05:50,700 --> 00:05:53,500
that in handmade CPP, my intention anyway.

117
00:05:53,500 --> 00:05:59,000
When I wrote this was to allow myself to create multiple different

118
00:05:59,000 --> 00:05:59,800
types of

119
00:06:00,000 --> 00:06:03,400
Profilers really easily and leave them open by default.

120
00:06:04,100 --> 00:06:06,400
And so that would be like in this situation here.

121
00:06:06,400 --> 00:06:09,500
For example I want to make sure that works.

122
00:06:09,600 --> 00:06:13,200
Okay and it does and that was just me making sure that, you know, if I

123
00:06:13,200 --> 00:06:17,700
wanted to, I could make these these sort of, you know, get created by

124
00:06:17,700 --> 00:06:18,300
default.

125
00:06:18,300 --> 00:06:20,700
And they are probably a little too big because we might have multiple

126
00:06:20,700 --> 00:06:21,700
of them up there.

127
00:06:22,100 --> 00:06:23,500
Like I said, at any given time.

128
00:06:23,500 --> 00:06:29,400
So I might want to go in here and say, like okay, this Frame bar

129
00:06:29,400 --> 00:06:29,800
graph.

130
00:06:30,000 --> 00:06:32,900
If and, and the thread into the graph, I want these to be it in

131
00:06:32,900 --> 00:06:33,200
general.

132
00:06:33,200 --> 00:06:35,000
I want providers to be a little bit smaller.

133
00:06:35,500 --> 00:06:42,600
So in here, when we specify that, it sort of default size, I'm going

134
00:06:42,600 --> 00:06:44,900
to make them not so Hefty.

135
00:06:44,900 --> 00:06:49,900
So, we'll maybe half their default size so that they don't, you know,

136
00:06:49,900 --> 00:06:50,700
that's a big.

137
00:06:52,600 --> 00:06:53,100
Alright?

138
00:06:53,200 --> 00:06:58,400
So, again, kind of nice and both of these are also switchable, which

139
00:06:58,400 --> 00:06:59,200
is really great.

140
00:06:59,600 --> 00:06:59,800
So,

141
00:07:00,000 --> 00:07:02,700
Like I said, I'm really happy with kind of the way this is working.

142
00:07:02,700 --> 00:07:05,500
All of this stuff has been pretty great so far and I'm pretty happy

143
00:07:05,500 --> 00:07:06,000
with it.

144
00:07:07,100 --> 00:07:08,100
So, that's all good.

145
00:07:09,300 --> 00:07:12,800
So what I want to do now is add that little top view here, like a

146
00:07:12,800 --> 00:07:14,900
thing that sort of shows us are sorted list.

147
00:07:15,600 --> 00:07:20,900
And in order to do the thing that shows our shows us our sorted list,

148
00:07:22,100 --> 00:07:26,700
that's probably going to be a thing which just you know again is

149
00:07:26,900 --> 00:07:28,200
another one of these types.

150
00:07:30,200 --> 00:07:39,200
Probably something like top time, you know, top clocks graph or

151
00:07:39,200 --> 00:07:42,200
something, or tops, clocks a list, probably.

152
00:07:45,900 --> 00:07:49,700
In top clocks list will actually just go through and print out a line

153
00:07:49,700 --> 00:07:54,700
for each of the functions and that'll be that right.

154
00:07:55,500 --> 00:08:00,300
Now what I want to do here is I would like to take a look at the code

155
00:08:00,300 --> 00:08:03,900
that we have for sorting because we already wrote code for sorting

156
00:08:03,900 --> 00:08:07,400
things and I'm interested to know if I can just sort of pull that code

157
00:08:07,400 --> 00:08:11,600
out and use it again exactly as it exists.

158
00:08:12,200 --> 00:08:12,600
So

159
00:08:12,800 --> 00:08:14,900
Not have to redo the Sorting code.

160
00:08:15,200 --> 00:08:19,200
Now, I don't really remember much about how we left that.

161
00:08:20,000 --> 00:08:24,100
We, that's our sort key stuff, but I don't know where our actual sort

162
00:08:24,100 --> 00:08:24,600
itself.

163
00:08:24,600 --> 00:08:27,100
Is let's see here.

164
00:08:27,600 --> 00:08:31,800
These are just the things that fill up, our render group, where is our

165
00:08:31,800 --> 00:08:32,799
actual render.

166
00:08:37,299 --> 00:08:37,799
There we go.

167
00:08:39,200 --> 00:08:44,300
So here are sort calls and they work off this thing called tile sort

168
00:08:44,300 --> 00:08:44,900
entry.

169
00:08:45,000 --> 00:08:50,700
Now, tell sort entry is the thing, which tells us what, basically two

170
00:08:50,700 --> 00:08:55,100
things, it's a sorting key and a push buffer offset.

171
00:08:55,400 --> 00:08:59,700
And what you can see immediately about that thing, is that really if

172
00:08:59,700 --> 00:08:59,800
all

173
00:09:00,000 --> 00:09:01,500
Doing a sorting a bunch of those.

174
00:09:01,700 --> 00:09:04,400
There's no real reason that this has to be a stylist or entry.

175
00:09:04,400 --> 00:09:07,100
It's just a sort entry, right?

176
00:09:07,400 --> 00:09:10,900
So, as long as we wanted to phrase, the sort key, as a floating Point

177
00:09:10,900 --> 00:09:15,100
number, and the push, and the thing we're sorting as an index, we

178
00:09:15,100 --> 00:09:16,700
could sort anything we wanted to.

179
00:09:17,800 --> 00:09:21,000
So, for example, if I come in, I don't think I have, we don't have any

180
00:09:21,000 --> 00:09:22,300
kind of a utility thing.

181
00:09:22,700 --> 00:09:27,000
So I'll just make a file for sorting because why not?

182
00:09:27,300 --> 00:09:29,800
So I still have never implemented anything in for Kotor 2.

183
00:09:30,000 --> 00:09:32,400
Actually allow me to make files with my little boilerplate.

184
00:09:33,500 --> 00:09:34,200
What am I going to do?

185
00:09:35,200 --> 00:09:35,800
I got to do that.

186
00:09:35,800 --> 00:09:38,200
One of these days, I have the thing in emacs.

187
00:09:38,200 --> 00:09:40,800
I wrote which like added like allow me to open a file and add a

188
00:09:40,800 --> 00:09:46,200
border, the boilerplate thing to it but I don't have that here.

189
00:09:46,500 --> 00:09:48,600
So anyway, moving on.

190
00:09:49,600 --> 00:09:51,600
How did stb truetype .h?

191
00:09:51,600 --> 00:09:53,000
I thought we deleted that.

192
00:09:53,100 --> 00:09:54,400
How did it come back?

193
00:10:01,300 --> 00:10:03,300
What's going on?

194
00:10:06,100 --> 00:10:08,600
I am 99% sure.

195
00:10:08,600 --> 00:10:09,700
We deleted that.

196
00:10:12,100 --> 00:10:13,200
That's a bit freaky.

197
00:10:16,700 --> 00:10:17,400
All right.

198
00:10:17,500 --> 00:10:19,200
Don't want to know what happened there.

199
00:10:20,600 --> 00:10:26,000
Anyway, let's go ahead and and make a new file for that so I don't

200
00:10:26,000 --> 00:10:26,800
know what's in Linux.

201
00:10:26,800 --> 00:10:28,200
Handmade probably nothing, right?

202
00:10:28,300 --> 00:10:28,700
Yeah.

203
00:10:29,200 --> 00:10:32,500
So we'll copy Linux handmade to you know handmade.

204
00:10:33,200 --> 00:10:35,700
I don't know if it would be utils or something like that.

205
00:10:35,800 --> 00:10:37,900
I'm just trying to think if we should make it a general one, I'll just

206
00:10:37,900 --> 00:10:39,000
call it sort for now.

207
00:10:39,500 --> 00:10:45,500
So we'll have handmade sort dot CPP and and that should be, you know,

208
00:10:45,500 --> 00:10:46,200
sufficient.

209
00:10:46,400 --> 00:10:48,900
So I'm going to go ahead and open that.

210
00:10:49,100 --> 00:10:49,900
So here is our

211
00:10:50,000 --> 00:10:53,200
Sort function or other are sort file.

212
00:10:54,600 --> 00:11:00,300
And I'm going to grab this thing out which is this as a just, I'm just

213
00:11:00,300 --> 00:11:02,200
going to call this just sort entry.

214
00:11:03,100 --> 00:11:10,000
And then I'm going to go ahead and grab out that, that code for, for

215
00:11:10,100 --> 00:11:14,000
doing the sorts, which you can see, is kind of all in here.

216
00:11:14,700 --> 00:11:17,100
And yeah.

217
00:11:20,900 --> 00:11:22,200
Just grab all those guys out.

218
00:11:24,500 --> 00:11:27,200
And so what I need to do now is I gotta change it from Taos or

219
00:11:27,200 --> 00:11:30,800
identity to sort entry because I'm sort of renaming this to be more

220
00:11:30,800 --> 00:11:35,200
General sounding even though the code remains identical and doesn't

221
00:11:35,200 --> 00:11:36,200
really change in any way.

222
00:11:36,200 --> 00:11:37,100
So there it is.

223
00:11:38,600 --> 00:11:41,200
And I'm going to change push buffer offset.

224
00:11:42,600 --> 00:11:44,600
To just be index.

225
00:11:47,200 --> 00:11:49,000
And that's about it.

226
00:11:49,500 --> 00:11:51,300
So here you can see where we do.

227
00:11:51,300 --> 00:11:55,100
Our sort entries, call normally, what we do is we can pick from which

228
00:11:55,100 --> 00:11:59,700
one of these we wanted to do, and what we do is we just pass.

229
00:12:00,000 --> 00:12:05,100
Account of things, the entries, and then the memory that we need for

230
00:12:05,100 --> 00:12:06,800
the Temp Storage, right?

231
00:12:07,400 --> 00:12:12,300
And so, for the Temp Storage stuff, what we want to do is I guess make

232
00:12:12,300 --> 00:12:15,500
sure we have enough room to store everything.

233
00:12:16,400 --> 00:12:19,400
So, you know, maybe we could make a utility function, that would

234
00:12:19,400 --> 00:12:21,400
automatically handle this, you know, I don't know.

235
00:12:21,600 --> 00:12:25,100
But point being, that's really all we need to think about in order to

236
00:12:25,100 --> 00:12:29,800
call one of our sort functions, they're all otherwise reusable, right?

237
00:12:30,000 --> 00:12:30,000
Right.

238
00:12:31,700 --> 00:12:37,100
So yeah, so I think that's everything that we would need.

239
00:12:39,400 --> 00:12:43,400
I'm pretty sure that's just about good.

240
00:12:43,900 --> 00:12:49,400
Yeah, so what I'm going to do now is I'm going to go ahead and and

241
00:12:49,500 --> 00:12:54,400
move this out into maybe handmade .h where we'll include it.

242
00:12:56,700 --> 00:12:57,300
So,

243
00:13:00,800 --> 00:13:02,600
What is handmade shared?

244
00:13:06,200 --> 00:13:08,500
That's probably not necessary anymore.

245
00:13:08,500 --> 00:13:09,800
That was probably for the meta thing.

246
00:13:10,000 --> 00:13:14,300
Oh, well, anyway, we'll put this in here.

247
00:13:14,700 --> 00:13:20,900
I guess I could, since it's a CPP file, I guess it really could be in,

248
00:13:20,900 --> 00:13:25,100
you know, maybe down in here even where we're doing our sorting.

249
00:13:25,100 --> 00:13:30,800
So like so and now I've got to clean up everyone else who is using any

250
00:13:30,800 --> 00:13:30,900
of that.

251
00:13:30,900 --> 00:13:33,600
So tile sword entry is just going to be sort of Entry.

252
00:13:36,700 --> 00:13:39,900
And push, buffer offset has to just be index.

253
00:13:42,700 --> 00:13:44,800
And off we go now.

254
00:13:44,800 --> 00:13:49,300
In opengl dot CPP since this thing needs to actually be able to do the

255
00:13:49,300 --> 00:13:54,500
sort and so does render with that means is our win32 layer because the

256
00:13:54,500 --> 00:13:58,500
rendering code needs, it is going to have to use that as well.

257
00:13:58,700 --> 00:14:05,400
So in here, we're going to need our handmade sort dot CPP and but

258
00:14:05,400 --> 00:14:06,000
that's fine.

259
00:14:11,100 --> 00:14:11,500
Okay.

260
00:14:12,500 --> 00:14:17,200
Again in here tell us our entries need to be sword entries, like so

261
00:14:18,200 --> 00:14:23,700
and care about that at the moment and push buffer offset is just going

262
00:14:23,700 --> 00:14:25,100
to be index at the moment.

263
00:14:28,000 --> 00:14:33,800
And I'll sort entry, sort of Entry doo-doo-doo-doo-doo

264
00:14:33,800 --> 00:14:35,000
doo-doo-doo-doo.

265
00:14:42,700 --> 00:14:43,700
And I don't know what this is.

266
00:14:43,700 --> 00:14:45,100
Our this is the frame display.

267
00:14:47,900 --> 00:14:49,800
Needed sort sighs.

268
00:14:50,800 --> 00:14:55,800
All right so that's I think everything that we need there and I'll

269
00:14:55,800 --> 00:14:59,800
come in here and Define one of these things, the top clocks list

270
00:15:00,200 --> 00:15:02,400
Tape stopped clocks list.

271
00:15:02,600 --> 00:15:07,500
And I will also come down here and I suppose since we want, all of

272
00:15:07,500 --> 00:15:11,000
these to generally be switchable between each other, I'll just put it

273
00:15:11,000 --> 00:15:17,000
in here and, you know, we'll just say, okay, there's a, you know, a

274
00:15:17,000 --> 00:15:18,000
clocks View.

275
00:15:24,400 --> 00:15:25,800
And we can switch between those.

276
00:15:26,400 --> 00:15:29,700
So all this stuff works the same way where we have the sizing and all

277
00:15:29,700 --> 00:15:30,900
that sort of nonsense.

278
00:15:34,200 --> 00:15:34,700
and,

279
00:15:36,700 --> 00:15:42,900
When we go to actually draw it, I will do top clocks list and I'll do

280
00:15:42,900 --> 00:15:45,100
draw top clocks list.

281
00:15:46,800 --> 00:15:47,400
Passes act.

282
00:15:47,400 --> 00:15:48,900
Same things we were before.

283
00:15:50,900 --> 00:15:51,700
And that's that.

284
00:15:54,000 --> 00:15:55,900
So, draw a frame bars.

285
00:15:55,900 --> 00:15:59,300
I'll start with its function prototype since that's what we've got.

286
00:15:59,400 --> 00:16:02,600
And then I'm not going to actually implement it at all at the moment.

287
00:16:02,600 --> 00:16:05,100
I'm just going to leave it blank and make sure that we still work with

288
00:16:05,100 --> 00:16:08,600
are sort of abstract did that I haven't broken anything.

289
00:16:14,500 --> 00:16:16,300
So here I am running the code again.

290
00:16:16,500 --> 00:16:17,600
Looking at the profile.

291
00:16:17,600 --> 00:16:18,700
We now have a new mode.

292
00:16:18,700 --> 00:16:21,400
We can set things to which is clocks as we white.

293
00:16:21,400 --> 00:16:22,800
It might have expected.

294
00:16:23,100 --> 00:16:27,600
It doesn't actually do anything at all but you know, otherwise, it's

295
00:16:27,600 --> 00:16:28,400
all good.

296
00:16:29,800 --> 00:16:34,400
So what I can now do is say, let's actually try to draw this top

297
00:16:34,400 --> 00:16:38,600
clocks list and the question is, you know, how am I going to do that?

298
00:16:40,600 --> 00:16:49,400
What I can do, I believe is I can go through all of the elements that

299
00:16:49,400 --> 00:16:52,000
are debug.

300
00:16:52,200 --> 00:16:56,800
I can go through all of the elements that are like profile times,

301
00:16:57,100 --> 00:16:57,800
right?

302
00:16:58,600 --> 00:17:00,000
And I don't know right now.

303
00:17:00,000 --> 00:17:04,400
I don't think we actually keep that organized in any way.

304
00:17:04,400 --> 00:17:07,800
We sort of had a little thing that did that in the past.

305
00:17:08,000 --> 00:17:09,200
But I don't know that we actually have

306
00:17:09,400 --> 00:17:14,099
Do that now like when we create a debug element I don't know if we

307
00:17:14,099 --> 00:17:15,800
still add it to the profile group.

308
00:17:16,200 --> 00:17:18,000
Let me look and see if we do.

309
00:17:18,099 --> 00:17:22,200
You know, maybe we do can't see because it's behind my head.

310
00:17:23,300 --> 00:17:26,800
Let's see here, profile group.

311
00:17:27,599 --> 00:17:28,700
So we do so.

312
00:17:28,700 --> 00:17:31,900
So actually this is a pretty easy thing for us to do.

313
00:17:32,000 --> 00:17:35,300
If we want to we can iterate over all of the members of the profile

314
00:17:35,300 --> 00:17:39,000
group and we know that those are all of the things that could take

315
00:17:39,000 --> 00:17:39,900
time, right?

316
00:17:39,900 --> 00:17:41,500
Those are all of the profiler events.

317
00:17:41,900 --> 00:17:44,900
So if we go through each of those and then we look at whatever

318
00:17:44,900 --> 00:17:46,700
particular frame that we're on.

319
00:17:47,600 --> 00:17:52,800
We can sum up all of the blocks that it is recorded for that frame and

320
00:17:52,800 --> 00:17:54,500
that's how much time it's taken.

321
00:17:56,800 --> 00:17:59,200
So that's pretty straightforward, right?

322
00:18:00,000 --> 00:18:01,900
So I'm going to start doing that.

323
00:18:01,900 --> 00:18:04,600
And I'm what I'm going to do first is I'm not even going to try to

324
00:18:04,600 --> 00:18:05,300
sort the list.

325
00:18:05,300 --> 00:18:08,300
What I'm going to do is I'm just going to print it out, right?

326
00:18:08,900 --> 00:18:12,500
And then what I'll do is I'll do something which actually tries to

327
00:18:13,100 --> 00:18:13,700
sort it.

328
00:18:14,100 --> 00:18:19,400
So the profile group in this case, here I am in the H file, the

329
00:18:19,400 --> 00:18:22,300
profile group is a debug variable group.

330
00:18:23,300 --> 00:18:24,600
Which has in it.

331
00:18:25,700 --> 00:18:26,500
Where Are You?

332
00:18:27,100 --> 00:18:29,100
The Sentinel which I can iterate through?

333
00:18:30,700 --> 00:18:33,600
So what I would do is say, okay, there's a debug variable link.

334
00:18:36,700 --> 00:18:38,100
It's the profile groups.

335
00:18:38,700 --> 00:18:39,800
Next is the first one.

336
00:18:40,000 --> 00:18:44,500
As long as the link is not equal to the profile groups, Sentinel.

337
00:18:44,500 --> 00:18:44,800
Oops.

338
00:18:47,800 --> 00:18:48,900
It's what I actually meant to do.

339
00:18:54,700 --> 00:18:57,100
As long as it is not, as long as I haven't gotten back to the

340
00:18:57,100 --> 00:19:01,900
Sentinel, then I know that I can iterate through this, this group of

341
00:19:01,900 --> 00:19:03,800
people, right?

342
00:19:04,600 --> 00:19:08,100
And so, all I'm going to do at first is I'm just going to print it

343
00:19:08,100 --> 00:19:08,400
out.

344
00:19:08,500 --> 00:19:13,600
I'm going to print out what each individual, you know, one should be

345
00:19:14,500 --> 00:19:19,100
and then we'll work from there to you know, to figure the rest of it

346
00:19:19,100 --> 00:19:19,700
out.

347
00:19:19,900 --> 00:19:21,700
So here I go.

348
00:19:22,400 --> 00:19:24,300
I've got a profile wrecked their I'm

349
00:19:24,500 --> 00:19:29,100
Going to go ahead and just output lines of text and and go from there.

350
00:19:29,100 --> 00:19:31,200
Now, there's something interesting that this, I think will bring up

351
00:19:31,200 --> 00:19:34,600
that will want to kind of generalize out, but I'm not going to worry

352
00:19:34,600 --> 00:19:35,500
about that quite yet.

353
00:19:36,000 --> 00:19:40,900
So, if I take this link, I have to look and see what the link itself.

354
00:19:42,400 --> 00:19:42,900
Has in it.

355
00:19:42,900 --> 00:19:47,200
You can see that there's gets can either be a sub set or it can be an

356
00:19:47,200 --> 00:19:47,900
element.

357
00:19:48,100 --> 00:19:52,800
I'm going to assert for now that it's not a subgroup, because I don't

358
00:19:52,800 --> 00:19:55,400
feel like there should ever be subgroups inside the profile group.

359
00:19:55,500 --> 00:19:59,000
And so if there are, I'm misunderstanding how we were using it and I

360
00:19:59,000 --> 00:19:59,500
want to know

361
00:20:00,700 --> 00:20:04,400
So I can get the debug element by just looking at the links element.

362
00:20:04,400 --> 00:20:08,500
Pointer that gives me exactly what I want for printing out information

363
00:20:08,500 --> 00:20:12,800
about this particular person and so I can print out the element and I

364
00:20:12,800 --> 00:20:17,400
can print out the clock amount here once I actually figure out what it

365
00:20:17,400 --> 00:20:17,600
is.

366
00:20:17,600 --> 00:20:21,000
So the first question is well, all right, how can I figure out what

367
00:20:21,800 --> 00:20:22,400
what it is?

368
00:20:22,800 --> 00:20:25,200
Well remember, a debug element.

369
00:20:25,200 --> 00:20:29,200
Has a series of frames in it and we know that we look at a particular

370
00:20:29,200 --> 00:20:29,600
set of

371
00:20:30,000 --> 00:20:32,200
Particular frame, when reviewing things, right?

372
00:20:32,400 --> 00:20:35,800
So what we want to do here is say, well, the element frames for

373
00:20:35,800 --> 00:20:40,500
whatever the debug State viewing frame ordinal, is that gets us back.

374
00:20:40,600 --> 00:20:44,900
What the event chain was for this particular type of block on this

375
00:20:44,900 --> 00:20:45,800
particular frame.

376
00:20:47,600 --> 00:20:52,400
We can then say, well, tell me what the oldest event was and that's a

377
00:20:52,400 --> 00:20:54,000
debug stored event, right?

378
00:20:56,500 --> 00:20:59,600
And if I Loop over this,

379
00:21:00,400 --> 00:21:03,200
And I go through all of the events that there were right.

380
00:21:03,200 --> 00:21:09,200
So, every last one of them, those are all of the blocks of this type

381
00:21:09,200 --> 00:21:11,000
that occurred in this Frame.

382
00:21:12,100 --> 00:21:12,900
If that makes sense.

383
00:21:14,900 --> 00:21:19,100
And again, this includes events that started in this Frame but ended

384
00:21:19,100 --> 00:21:22,700
after the frame was over and if we wanted to we could probably

385
00:21:22,700 --> 00:21:24,400
actually make note of that.

386
00:21:24,400 --> 00:21:26,800
But I don't think I'm going to need that for any particular reason,

387
00:21:26,800 --> 00:21:29,600
because it'll be pretty obvious but because we know which functions do

388
00:21:29,600 --> 00:21:34,100
and don't overlap in that way, but just point it out.

389
00:21:35,400 --> 00:21:39,000
So if we take a look at the events profile node struct, we're going to

390
00:21:39,000 --> 00:21:43,300
have in their adoration and that duration is the number of clocks that

391
00:21:43,300 --> 00:21:43,900
it took.

392
00:21:44,000 --> 00:21:48,400
So if I was to take a total clock, very value, initialize at zero.

393
00:21:48,400 --> 00:21:49,500
Summing it over.

394
00:21:49,500 --> 00:21:53,000
All of these events will give me the total number of clocks that were

395
00:21:53,000 --> 00:21:56,400
taken by this type of a block on this Frame.

396
00:21:56,700 --> 00:22:01,400
Now, granted it does not tell me about children, right?

397
00:22:01,400 --> 00:22:04,300
So it doesn't tell me about people,

398
00:22:04,700 --> 00:22:07,400
Who are like, who it called?

399
00:22:07,500 --> 00:22:09,700
And that's a thing that we're going to probably want to account for in

400
00:22:09,700 --> 00:22:10,400
a little while.

401
00:22:11,500 --> 00:22:15,500
All right, so once we get that total clock value, then in here what I

402
00:22:15,500 --> 00:22:19,300
can do, I don't really know why we were printing it out in this

403
00:22:19,300 --> 00:22:21,100
particular way, but that doesn't really matter.

404
00:22:21,100 --> 00:22:26,600
The point is in here I could say, well now I'm going to print out the

405
00:22:26,600 --> 00:22:31,600
total clocks like so and that's how many clocks is thing took on this

406
00:22:31,600 --> 00:22:32,000
Frame.

407
00:22:32,200 --> 00:22:36,200
If I print it out, then I will print it out and I can advance by the

408
00:22:36,200 --> 00:22:37,200
line amount.

409
00:22:37,200 --> 00:22:41,100
So, all I need to do now is just say, okay, let's make an

410
00:22:42,400 --> 00:22:46,600
Variable, which is where I'm starting to print, that can be the

411
00:22:47,800 --> 00:22:50,500
minimum corner of the profile wrecked.

412
00:22:52,000 --> 00:22:52,800
Or actually.

413
00:22:54,400 --> 00:22:55,100
It's just that.

414
00:22:55,100 --> 00:23:00,400
Yeah and once I have that, then I will just boo.

415
00:23:00,400 --> 00:23:01,200
No.

416
00:23:04,400 --> 00:23:08,400
Nah, I need to go back to where I was.

417
00:23:10,300 --> 00:23:16,700
All right, so when I'm here printing out the text.

418
00:23:16,700 --> 00:23:18,800
I want to start it wherever I think I am.

419
00:23:18,900 --> 00:23:21,800
And then I need to do, do doot.

420
00:23:23,200 --> 00:23:27,500
After I'm done and, you know, subtract my y value down.

421
00:23:27,500 --> 00:23:28,800
So I move to the next line.

422
00:23:29,100 --> 00:23:32,900
Now, if I'm not mistaken when we start printing to begin with,

423
00:23:32,900 --> 00:23:38,600
obviously, we also need to have that understanding of where the text

424
00:23:38,600 --> 00:23:44,400
should go and so I think we also want to do the the get text Baseline,

425
00:23:44,500 --> 00:23:45,100
right?

426
00:23:48,500 --> 00:23:49,100
This thing.

427
00:23:54,500 --> 00:23:58,800
Like so, so I want to be able to do that as well where I can sort of

428
00:23:58,800 --> 00:23:59,800
say, okay.

429
00:24:00,400 --> 00:24:02,500
Where was I top?

430
00:24:04,200 --> 00:24:06,200
I need to be able to start off at the right place.

431
00:24:06,200 --> 00:24:11,000
So I also have to kind of do this, this sort of situation and so get

432
00:24:11,000 --> 00:24:14,700
line advance, and I don't know if we have a get Baseline, we probably

433
00:24:14,700 --> 00:24:15,400
should.

434
00:24:15,900 --> 00:24:16,600
Let me see.

435
00:24:16,600 --> 00:24:17,400
Do we have?

436
00:24:19,300 --> 00:24:21,000
Get line advance.

437
00:24:24,000 --> 00:24:27,200
So what we really want here is probably the same thing for Baseline.

438
00:24:32,700 --> 00:24:37,200
And so, this way, this can be something that is automatically done.

439
00:24:37,200 --> 00:24:40,000
So, you know it, we know that it multiplies by the scale and stuff

440
00:24:40,000 --> 00:24:41,400
because somebody might forget to do that.

441
00:24:41,400 --> 00:24:44,700
So we'd rather have it, always going through a known place where we

442
00:24:44,700 --> 00:24:46,100
can adjust it if we need to.

443
00:24:46,500 --> 00:24:48,000
So we do get Baseline.

444
00:24:48,200 --> 00:24:48,800
There we go.

445
00:24:49,500 --> 00:24:55,200
And think that's it, this, of course has to be

446
00:24:56,900 --> 00:24:59,100
Adjusted as a vector.

447
00:25:02,700 --> 00:25:06,700
All right, so if I go to the top clocks list here, I'm not getting any

448
00:25:06,700 --> 00:25:07,100
output.

449
00:25:07,100 --> 00:25:10,700
So I think we have made an error there.

450
00:25:10,700 --> 00:25:15,500
Let me go in here so I can take a look at what's going on.

451
00:25:16,000 --> 00:25:20,600
So here we go through and so this is not we're not getting anyone in

452
00:25:20,600 --> 00:25:22,300
the debug profile group.

453
00:25:22,800 --> 00:25:26,400
I thought I looked in that we were actually adding them but it looks

454
00:25:26,400 --> 00:25:30,700
like perhaps that we are not adding them and so that's my problem.

455
00:25:31,700 --> 00:25:32,400
What happened there?

456
00:25:32,400 --> 00:25:33,300
I thought I looked at that.

457
00:25:33,300 --> 00:25:37,800
I must have not looked at it particularly closely.

458
00:25:40,000 --> 00:25:42,300
Okay, let's see here.

459
00:25:46,800 --> 00:25:49,800
Okay, so the problem is, it doesn't add it to.

460
00:25:49,800 --> 00:25:55,900
This group is is what's going on and I think if I remember correctly,

461
00:25:55,900 --> 00:25:59,200
that's because I was assuming that we wouldn't have any need to do so,

462
00:26:00,500 --> 00:26:01,600
but we actually do.

463
00:26:02,200 --> 00:26:03,100
So.

464
00:26:03,100 --> 00:26:04,400
Yeah.

465
00:26:04,400 --> 00:26:05,900
I still want that to happen.

466
00:26:05,900 --> 00:26:07,400
Get element from event.

467
00:26:07,700 --> 00:26:10,800
This function is a little bit too overloaded in case you couldn't tell

468
00:26:12,000 --> 00:26:14,900
but you can see here like we have sort of two things.

469
00:26:14,900 --> 00:26:16,400
Do I want to add it to a group and

470
00:26:16,600 --> 00:26:20,400
If I want to create a hierarchy for it and you know I kind of want

471
00:26:20,400 --> 00:26:25,200
both of those things to be possible now which again just kind of gets

472
00:26:25,200 --> 00:26:26,200
a little bit hairy.

473
00:26:26,500 --> 00:26:28,500
What I can do here and I don't love it.

474
00:26:28,500 --> 00:26:30,300
But I mean what I can do is

475
00:26:33,000 --> 00:26:33,900
you know, debug

476
00:26:35,500 --> 00:26:42,100
Element add up, you know, I can say here, oh, you know, debug like

477
00:26:42,100 --> 00:26:46,100
create or add to group.

478
00:26:48,000 --> 00:26:49,600
and I can say, debug,

479
00:26:53,600 --> 00:26:54,100
You know.

480
00:26:57,100 --> 00:26:58,300
Great hierarchy.

481
00:26:59,500 --> 00:26:59,700
And I

482
00:27:00,000 --> 00:27:02,000
Make those two things separate.

483
00:27:02,100 --> 00:27:08,500
So instead of create hierarchy being, you know, a it sort of create

484
00:27:08,500 --> 00:27:10,900
hierarchy being something that's a Boolean this passed in, and said,

485
00:27:10,900 --> 00:27:14,400
it can be an OP value that comes through, then I can control more

486
00:27:14,400 --> 00:27:14,600
fine.

487
00:27:14,600 --> 00:27:16,100
Grained wood goes on again.

488
00:27:16,100 --> 00:27:18,900
I don't love it, but it is the debug code and I'm not sure how much I

489
00:27:18,900 --> 00:27:22,300
care about anything being particularly squeaky.

490
00:27:23,100 --> 00:27:26,900
So in here, if I want to know whether I'm going to do the parent group

491
00:27:26,900 --> 00:27:29,900
are real creation stuff, I can do that and

492
00:27:30,000 --> 00:27:34,200
Then similarly, in here, I can, I can test the other way around, so I

493
00:27:34,200 --> 00:27:38,600
can say, all right, well, if op, if I'm told that I'm supposed to

494
00:27:38,600 --> 00:27:41,500
create the hierarchy, then off we go.

495
00:27:41,500 --> 00:27:45,600
And similarly, if I'm told that I'm supposed to add to group, I can do

496
00:27:45,600 --> 00:27:46,200
that.

497
00:27:46,500 --> 00:27:51,700
And then all we have to do, is say, well, all of the places

498
00:27:51,900 --> 00:27:56,900
previously, where we were doing, get element from event, just need to

499
00:27:56,900 --> 00:27:59,600
have this this awareness, right?

500
00:28:00,000 --> 00:28:03,100
and so I'm going to say here's the up like so

501
00:28:06,100 --> 00:28:10,400
Will do this and I might say that you're going to have to specify

502
00:28:10,400 --> 00:28:10,800
everything.

503
00:28:10,800 --> 00:28:12,800
Now I'm not going to let you do.

504
00:28:14,300 --> 00:28:19,900
I'm not gonna let you do invalids there, so get element from event.

505
00:28:21,800 --> 00:28:25,900
In this case, this one had note, you know, it was using whatever the

506
00:28:25,900 --> 00:28:30,900
default parent was and then it was doing both of these so it was doing

507
00:28:30,900 --> 00:28:33,400
add to group and debug element.

508
00:28:38,200 --> 00:28:39,100
Fred Harvey.

509
00:28:42,400 --> 00:28:43,100
Elements.

510
00:28:44,500 --> 00:28:45,200
Events.

511
00:28:47,200 --> 00:28:48,100
What else you got?

512
00:28:48,100 --> 00:28:50,400
So in this case this is the one we were talking about before.

513
00:28:50,400 --> 00:28:54,700
And so this one, this one just wants to do, add to group, doesn't want

514
00:28:54,700 --> 00:28:55,800
to do anything else.

515
00:28:57,000 --> 00:28:57,500
Right.

516
00:29:02,100 --> 00:29:04,100
This one wants to do both.

517
00:29:10,800 --> 00:29:13,800
This one doesn't want to do anything.

518
00:29:13,900 --> 00:29:14,500
It looks like

519
00:29:20,200 --> 00:29:20,900
And that's it.

520
00:29:29,500 --> 00:29:32,100
So all I should have to do now is put those in some place where

521
00:29:32,100 --> 00:29:33,200
everyone can see them.

522
00:29:36,300 --> 00:29:37,300
Which can be right here.

523
00:29:42,900 --> 00:29:43,500
And off we go.

524
00:29:45,300 --> 00:29:49,700
So let's see, if now, we get some things added to our group.

525
00:29:51,700 --> 00:29:52,300
There we go.

526
00:29:53,300 --> 00:29:57,500
Alright, so now we're oh and hey, if you're going to start something,

527
00:29:57,500 --> 00:29:59,800
you might want to start the actual thing, you want it to be true.

528
00:30:00,000 --> 00:30:04,700
Sort of the opposite of that, my bad.

529
00:30:05,700 --> 00:30:07,500
Let's see, draw top.

530
00:30:09,900 --> 00:30:10,600
Top.

531
00:30:12,300 --> 00:30:16,800
So in here, I actually want to say assert that there are no children

532
00:30:16,800 --> 00:30:19,800
was, what I was trying to say, big surprise at fired.

533
00:30:20,500 --> 00:30:22,700
So let's see if I go to top clocks.

534
00:30:22,700 --> 00:30:23,400
All right.

535
00:30:23,900 --> 00:30:26,700
Oh, and by the way, I should have picked Max for that.

536
00:30:26,700 --> 00:30:27,200
Shouldn't I?

537
00:30:27,200 --> 00:30:29,100
Let's try that again.

538
00:30:30,200 --> 00:30:36,300
All right, so this should have been Max because we start at the top.

539
00:30:39,800 --> 00:30:43,100
All right, and so let's print it out.

540
00:30:49,000 --> 00:30:49,900
and of course,

541
00:30:51,400 --> 00:30:54,300
I need the two different ones now.

542
00:30:55,600 --> 00:31:00,400
Because the X and the Y going opposite directions as far as human

543
00:31:00,400 --> 00:31:00,700
reading.

544
00:31:00,700 --> 00:31:06,500
Order is concerned all math too bad, you had to be that way.

545
00:31:16,500 --> 00:31:23,000
So let's see here, if we look at what's going on, how much do I

546
00:31:23,000 --> 00:31:23,400
believe?

547
00:31:23,400 --> 00:31:26,100
This is actually telling us anything real.

548
00:31:26,200 --> 00:31:27,200
I'm not sure.

549
00:31:32,000 --> 00:31:35,600
We've got input processing, message processing, Mouse position, etc,

550
00:31:35,600 --> 00:31:36,300
etc.

551
00:31:36,300 --> 00:31:38,400
Game update, imitating render.

552
00:31:38,400 --> 00:31:40,600
Let's see what happens when I switch into the game mode.

553
00:31:40,600 --> 00:31:43,000
These should get a lot larger and they are.

554
00:31:48,500 --> 00:31:52,600
I mean, I could believe that these are correct, right?

555
00:31:54,100 --> 00:31:57,700
I certainly could believe that they were correct.

556
00:31:59,000 --> 00:32:01,600
It's not a very scientific way of determining that, but I could

557
00:32:01,600 --> 00:32:02,200
believe it.

558
00:32:04,000 --> 00:32:05,100
So, yeah, okay.

559
00:32:05,100 --> 00:32:07,100
So that's, you know, that's something.

560
00:32:07,800 --> 00:32:13,200
So now, what I was going to say and I mentioned this before, when I

561
00:32:13,200 --> 00:32:15,000
was kind of like this is going to bring up something we want to deal

562
00:32:15,000 --> 00:32:17,100
with is you'll notice that we don't have any way.

563
00:32:17,100 --> 00:32:18,100
Like we'd really don't

564
00:32:18,300 --> 00:32:23,000
A concept of like a listing area and so if we wanted to now do this

565
00:32:23,000 --> 00:32:25,400
sort of thing where we printed this in, could scroll this list or

566
00:32:25,400 --> 00:32:29,700
something, it wouldn't like we'd have to implement all that custom

567
00:32:29,700 --> 00:32:30,200
just for this.

568
00:32:30,200 --> 00:32:33,300
And so one thing we might want to think about doing now is instead of

569
00:32:33,300 --> 00:32:34,600
just hacking it.

570
00:32:34,600 --> 00:32:38,000
So that just this one works, we may want to make it so that we have

571
00:32:38,000 --> 00:32:41,700
the concept of some kind of tabular output that we can use in multiple

572
00:32:41,700 --> 00:32:42,400
scenarios.

573
00:32:42,800 --> 00:32:45,200
But for right now, I don't really want to do that quite yet.

574
00:32:45,200 --> 00:32:48,000
I want to finish getting this listing more interesting before.

575
00:32:48,200 --> 00:32:50,300
We start working on making it display well.

576
00:32:51,400 --> 00:32:59,800
the other thing that I might want to do is I would like to go to

577
00:33:01,700 --> 00:33:02,900
And made us sleepy.

578
00:33:04,500 --> 00:33:12,800
And I would like to make sure that when we draw the frame graph stuff,

579
00:33:13,100 --> 00:33:19,700
what I actually want to do here is I would like to make it so that I

580
00:33:19,700 --> 00:33:20,500
am.

581
00:33:22,000 --> 00:33:23,000
Drawing this one.

582
00:33:30,600 --> 00:33:33,300
Okay so now at least it's coming up by default which is what I would

583
00:33:33,300 --> 00:33:33,600
like.

584
00:33:33,700 --> 00:33:41,700
I also feel like this thing is not it's not actually drawing a

585
00:33:41,700 --> 00:33:44,300
backdrop rectangle at the moment.

586
00:33:48,600 --> 00:33:52,700
Which I guess it is here and that I believe is because that backdrop

587
00:33:52,700 --> 00:33:53,400
rectangle.

588
00:33:53,700 --> 00:33:54,600
I'm going to move that.

589
00:33:54,600 --> 00:33:57,100
I think I might move that out because I want everyone to be using

590
00:33:57,100 --> 00:33:57,400
that.

591
00:33:57,400 --> 00:34:01,300
So I think what I'm going to do is say that backdrop rectangle that we

592
00:34:01,300 --> 00:34:08,300
have in some of these here where we do you know the this push wrecked.

593
00:34:08,300 --> 00:34:11,699
I'm actually thinking maybe that that should just be a thing that's

594
00:34:12,600 --> 00:34:15,000
that's handled outside, right?

595
00:34:16,199 --> 00:34:18,300
So I'm going to go to where

596
00:34:18,400 --> 00:34:19,300
We call this.

597
00:34:20,400 --> 00:34:21,800
And I'm going to put it in here.

598
00:34:22,000 --> 00:34:25,600
So when we actually grab this elements, I'm going to say let's go

599
00:34:25,600 --> 00:34:30,100
ahead and do that black.

600
00:34:30,199 --> 00:34:33,900
And I'm going to make it much darker because so we can see things

601
00:34:33,900 --> 00:34:34,800
better on it.

602
00:34:35,000 --> 00:34:38,199
So I'm going to say that the element.

603
00:34:38,199 --> 00:34:44,900
The layout elements bounds should be filled with a fairly dark color.

604
00:34:44,900 --> 00:34:45,400
They're okay.

605
00:34:46,400 --> 00:34:48,500
But I have to wait till it actually make the element.

606
00:34:50,400 --> 00:34:51,000
And that's it.

607
00:35:13,100 --> 00:35:13,400
Yeah.

608
00:35:17,000 --> 00:35:19,200
Just because that'll make it easier to see what we're looking at.

609
00:35:21,800 --> 00:35:22,100
Okay.

610
00:35:24,900 --> 00:35:26,200
all right, so now

611
00:35:28,300 --> 00:35:29,400
we need to do some things.

612
00:35:30,500 --> 00:35:33,300
First of all, like I said I would like this list to be sorted because

613
00:35:33,300 --> 00:35:36,800
I would like to be able to quickly look at who is taking the most time

614
00:35:37,300 --> 00:35:39,600
I would like to maybe know some percentages.

615
00:35:40,000 --> 00:35:43,400
We probably want to clip out some of this information because we don't

616
00:35:43,400 --> 00:35:44,800
need to see all of this.

617
00:35:44,900 --> 00:35:50,900
Like we probably just want just the name or something and the rest of

618
00:35:50,900 --> 00:35:53,300
the parts of the grid we probably don't care about.

619
00:35:53,300 --> 00:35:57,700
And also since we have a debug element, haven't we've already parsed.

620
00:35:57,800 --> 00:35:59,300
Those out I believe, right?

621
00:35:59,300 --> 00:35:59,800
Because d

622
00:36:00,000 --> 00:36:00,800
Element.

623
00:36:01,200 --> 00:36:02,300
Correct me if I'm wrong.

624
00:36:13,300 --> 00:36:16,000
Yeah, debug element already knows.

625
00:36:16,300 --> 00:36:19,600
We're like name starts at and that sort of thing, right?

626
00:36:19,900 --> 00:36:23,400
So what I could do there is, I can do it, where we do the top clocks

627
00:36:23,400 --> 00:36:28,900
list, when we actually draw it in here, what I can do is say, well,

628
00:36:28,900 --> 00:36:32,300
you know, when we're doing this thing with the grid, I'm just going to

629
00:36:32,300 --> 00:36:34,600
advance it by the name starts at.

630
00:36:35,100 --> 00:36:37,000
Because why wouldn't we do that?

631
00:36:37,300 --> 00:36:39,000
You know, you that's like pretty obvious.

632
00:36:39,300 --> 00:36:41,800
So that way in here it's much easier to read.

633
00:36:41,800 --> 00:36:42,200
It's like

634
00:36:42,500 --> 00:36:43,400
All those things are.

635
00:36:44,000 --> 00:36:46,700
Now the other thing that I probably want to do is I would I probably

636
00:36:46,700 --> 00:36:51,600
don't want to really be using the standard print out for this because

637
00:36:51,600 --> 00:36:56,800
I would want all of the numbers to be aligned, I can sort of cheat

638
00:36:56,800 --> 00:36:57,400
that for now.

639
00:36:57,400 --> 00:37:00,300
But in the future I'd probably going to want to take more control over

640
00:37:00,300 --> 00:37:04,700
that rendering process but anyway I can do this for now.

641
00:37:05,700 --> 00:37:08,500
Which will be kind of the Poor Man's way to do it but when we should

642
00:37:08,500 --> 00:37:10,900
probably have like a little bit better way of us, printing it out in

643
00:37:10,900 --> 00:37:11,500
the future.

644
00:37:12,400 --> 00:37:14,700
So there you can kind of see, I don't know why I'm rebooting.

645
00:37:14,700 --> 00:37:17,100
Instead of just like monkeying with it from in here.

646
00:37:17,500 --> 00:37:18,700
I probably should go do that.

647
00:37:19,300 --> 00:37:21,500
So there you can see like, the cycle counts going.

648
00:37:21,800 --> 00:37:25,000
And like I said, these are the cycle counts for people.

649
00:37:26,800 --> 00:37:27,800
When they are.

650
00:37:30,500 --> 00:37:31,500
That's kind of interesting.

651
00:37:32,300 --> 00:37:36,200
Anytime I move the mouse, you notice we get drastically more time.

652
00:37:36,200 --> 00:37:39,900
Spent there's like ten times more time spent in Windows message

653
00:37:39,900 --> 00:37:43,800
processing as soon as I have to move the mouse or do anything.

654
00:37:46,100 --> 00:37:47,000
That's kind of funny.

655
00:37:49,500 --> 00:37:53,700
It's still not a long, it's not actually a much time in that sense,

656
00:37:53,700 --> 00:37:55,100
but it's still like

657
00:37:56,500 --> 00:37:57,900
Well, it's actually fairly appreciable.

658
00:37:58,000 --> 00:37:59,800
That's actually a long time spent in there.

659
00:38:00,200 --> 00:38:03,500
I wonder if Windows is taking that time or if I'm taking that time.

660
00:38:04,600 --> 00:38:06,600
Well anyway, I'm gonna continue with what I was doing.

661
00:38:06,600 --> 00:38:09,800
But you know, I'm already kind of interested in what this is showing

662
00:38:09,800 --> 00:38:10,700
me, right?

663
00:38:11,500 --> 00:38:12,000
Anyway.

664
00:38:12,500 --> 00:38:19,100
So let's suppose that I want to show a percentage in there as well, I

665
00:38:19,100 --> 00:38:23,300
think we met can't quite remember but we had some debug statistics

666
00:38:23,300 --> 00:38:28,900
stuff in here and I would like to see if any of that is is relevant at

667
00:38:28,900 --> 00:38:29,800
the moment.

668
00:38:29,900 --> 00:38:32,500
Also, I guess we don't use this anymore so I'm going to get rid of it.

669
00:38:34,900 --> 00:38:36,500
Debug statistic.

670
00:38:38,100 --> 00:38:40,900
So there's like a min max average count thing here, right?

671
00:38:40,900 --> 00:38:45,300
And so I just wanted to see like if since we have that

672
00:38:46,700 --> 00:38:48,200
Do you bug statistic?

673
00:38:50,800 --> 00:38:52,200
So, here's the thing.

674
00:38:54,200 --> 00:38:59,400
and it accumulates values as real 64 is, and finds their boundary and

675
00:38:59,400 --> 00:38:59,800
then

676
00:39:00,300 --> 00:39:03,900
so that's not that doesn't really help us, unfortunately,

677
00:39:09,300 --> 00:39:10,500
So that's not as useful.

678
00:39:10,600 --> 00:39:14,600
I might maybe expand on this concept a little bit and but make it a

679
00:39:14,600 --> 00:39:17,600
little bit more useful because right now it's not super useful.

680
00:39:17,900 --> 00:39:20,500
So if we were going to do this debug statistic thing and have it be

681
00:39:20,500 --> 00:39:26,600
more useful, what I was thinking is we could have a min max and an

682
00:39:26,600 --> 00:39:29,100
average I'd also want the some

683
00:39:31,500 --> 00:39:36,100
And and yeah the counts find that's how many of them there there

684
00:39:36,100 --> 00:39:37,000
actually are.

685
00:39:37,400 --> 00:39:38,300
That's totally fine.

686
00:39:38,300 --> 00:39:41,400
But how many statistical samples there are.

687
00:39:41,700 --> 00:39:46,000
But the other thing that I'm thinking is after we do that then some

688
00:39:46,000 --> 00:39:49,700
kind of a like correlation to the total as well.

689
00:39:54,700 --> 00:39:57,100
I was trying to think of how exactly I will do that.

690
00:40:19,200 --> 00:40:22,100
So I think what I would want to do,

691
00:40:23,200 --> 00:40:26,800
Is when we come in here, since I know that, I want to sort, what I

692
00:40:26,800 --> 00:40:31,100
probably would do is start by saying, well, I kind of need to know how

693
00:40:31,100 --> 00:40:34,000
many of these things there are right.

694
00:40:34,400 --> 00:40:40,300
And so what might be nice is if these groups told me that number so

695
00:40:40,300 --> 00:40:43,600
that I could create like something based on it.

696
00:40:44,000 --> 00:40:46,600
So if I look at debug variable group here,

697
00:40:51,000 --> 00:40:55,800
like, if I was to say something like, you know, child count,

698
00:40:59,600 --> 00:41:01,400
That's not where I wanted that.

699
00:41:02,500 --> 00:41:03,500
This is where I wanted that.

700
00:41:07,900 --> 00:41:08,900
For Linked account.

701
00:41:10,700 --> 00:41:13,600
If I did something like that, it might be well.

702
00:41:13,600 --> 00:41:14,100
You know what?

703
00:41:14,100 --> 00:41:14,900
That's just dumb.

704
00:41:14,900 --> 00:41:16,000
Why would I do that?

705
00:41:16,000 --> 00:41:16,900
Doesn't even make any sense.

706
00:41:16,900 --> 00:41:18,500
There aren't going to be that many of these.

707
00:41:18,500 --> 00:41:19,900
I'll just iterate the list twice.

708
00:41:20,000 --> 00:41:22,700
That's way more saying and it doesn't clog things up.

709
00:41:24,100 --> 00:41:26,600
So I'll just say we have we don't know how many of these are going to

710
00:41:26,600 --> 00:41:27,000
be.

711
00:41:29,000 --> 00:41:32,100
So I'm just going to find out how many and then what I'm going to do

712
00:41:32,100 --> 00:41:37,300
is I'm going to make a way of tracking all of them, right?

713
00:41:37,600 --> 00:41:39,900
So there's going to be something like a

714
00:41:40,100 --> 00:41:40,800
Country.

715
00:41:44,400 --> 00:41:49,100
In the clock, entry would have something like, what was the debug

716
00:41:49,100 --> 00:41:49,800
element?

717
00:41:51,100 --> 00:41:52,500
That I was talking about.

718
00:41:59,300 --> 00:41:59,800
Yeah, what was?

719
00:42:00,000 --> 00:42:00,600
Debug entry.

720
00:42:00,600 --> 00:42:05,800
I was talking about what is the total clock value for it?

721
00:42:13,600 --> 00:42:18,300
And that that may be it.

722
00:42:26,000 --> 00:42:26,800
Is that really it?

723
00:42:27,400 --> 00:42:29,900
In fact, it may not even, I may not even need that.

724
00:42:32,500 --> 00:42:33,800
Well alright we'll say that.

725
00:42:33,800 --> 00:42:38,200
It's got that and then it also has maybe it's a the debug statistic

726
00:42:38,200 --> 00:42:39,500
thing is in here, right?

727
00:42:39,500 --> 00:42:42,900
So maybe it has a debug statistic in here and here's the statistic.

728
00:42:43,000 --> 00:42:44,900
I don't know, I'm making this up.

729
00:42:50,600 --> 00:42:52,400
So here's my debug clock entry.

730
00:42:52,400 --> 00:42:55,500
What I'm going to do is say, well, why don't we create a temporary

731
00:42:55,800 --> 00:43:01,500
thing on the debug stack here, where I've got debug clock entries?

732
00:43:01,700 --> 00:43:07,000
However, many there are and they I'm going to allocate that by using a

733
00:43:07,000 --> 00:43:08,100
temporary push.

734
00:43:08,300 --> 00:43:11,300
So I'm going to do a push array of the clock entries.

735
00:43:12,000 --> 00:43:14,300
And I don't really want to clear these.

736
00:43:15,200 --> 00:43:19,100
I don't think, you know what, I probably do because I gotta clear out

737
00:43:19,100 --> 00:43:20,200
the statistics in order to summon.

738
00:43:20,400 --> 00:43:23,900
So yeah I guess well now even that's not true.

739
00:43:23,900 --> 00:43:27,100
I need to decide is listed Max so I don't really want to do it.

740
00:43:27,400 --> 00:43:30,000
So I want to do a no clear on those guys.

741
00:43:30,000 --> 00:43:33,000
But anyway, so I'm going to do a push entry on the debug clock

742
00:43:33,000 --> 00:43:33,400
entries.

743
00:43:33,400 --> 00:43:36,700
And I'm going to want however many of them that we found, and I'm

744
00:43:36,700 --> 00:43:41,500
going to want to do that on the debug State debugger Arena.

745
00:43:43,800 --> 00:43:47,200
And I guess I could actually probably do it on the periphery Marina,

746
00:43:47,200 --> 00:43:49,300
but I, well, I don't want to over see if that's gone down to zero.

747
00:43:49,300 --> 00:43:55,200
So I do have the debug Arena, and I can do a temporary memory boundary

748
00:43:55,200 --> 00:43:59,700
here because this is just is just him, it's just temporary, right?

749
00:43:59,800 --> 00:44:04,900
So what I can do is say, all right, well let's begin our attempt

750
00:44:04,900 --> 00:44:05,500
memory.

751
00:44:05,600 --> 00:44:08,700
This is going to be a function that just does some scratch stuff here.

752
00:44:15,900 --> 00:44:19,200
And debug state32 Arena.

753
00:44:25,700 --> 00:44:29,200
And then when I'm done with it, I'll just get rid of it.

754
00:44:36,900 --> 00:44:39,900
And so, then we push, we will push off the arena.

755
00:44:48,300 --> 00:44:49,300
And everyone will be happy.

756
00:44:50,700 --> 00:44:57,700
So, that will get us enough entries that we can now treat them as an

757
00:44:57,700 --> 00:44:58,000
array.

758
00:44:58,000 --> 00:44:59,900
So, when we come through here,

759
00:45:00,600 --> 00:45:04,400
And we record this information, instead of printing it out at the

760
00:45:04,400 --> 00:45:06,800
moment, I can move that printout.

761
00:45:06,800 --> 00:45:07,800
Oops until later.

762
00:45:08,500 --> 00:45:13,000
So what I can do is say, all right, inside here, what I'm going to do

763
00:45:13,000 --> 00:45:18,400
is take the debug clock entry that corresponds to the link that I'm

764
00:45:18,400 --> 00:45:18,800
on.

765
00:45:24,200 --> 00:45:25,600
So I guess I can just do it like this.

766
00:45:30,800 --> 00:45:34,200
And for each one of these, I'm going to record which one it is.

767
00:45:34,200 --> 00:45:39,600
So, I'm going to say this is, you know, groups, entry element equals

768
00:45:39,700 --> 00:45:40,700
link element.

769
00:45:43,800 --> 00:45:44,300
so,

770
00:45:46,800 --> 00:45:51,300
And and then I'm going to go ahead and do this, you know, the the sort

771
00:45:51,300 --> 00:45:52,200
of the summation.

772
00:45:53,600 --> 00:45:56,500
And I'm going to do that with the statistic thing because why not?

773
00:45:57,600 --> 00:45:58,300
So where is that?

774
00:45:58,300 --> 00:46:01,200
That's like begins statistic or something like this.

775
00:46:01,500 --> 00:46:02,700
You bug statistic.

776
00:46:05,600 --> 00:46:06,300
Where is it?

777
00:46:10,700 --> 00:46:13,000
You bugs to stick.

778
00:46:13,000 --> 00:46:13,800
Here it is.

779
00:46:14,400 --> 00:46:20,300
So I'm going to go ahead and do begin debug statistic and

780
00:46:22,300 --> 00:46:24,800
Point to the entries.

781
00:46:26,100 --> 00:46:33,000
Stats and then for each one of these, I'm going to do a cume debug

782
00:46:33,000 --> 00:46:36,100
statistic for the entry stats.

783
00:46:38,200 --> 00:46:42,800
And then this is the value.

784
00:46:43,700 --> 00:46:49,500
I'm going to track so and then I'm going to do an Envy bug statistic

785
00:46:53,200 --> 00:46:59,300
and while I'm doing this, what I'd also like to do is prepare myself

786
00:46:59,300 --> 00:47:00,000
for sorting.

787
00:47:01,800 --> 00:47:03,300
So I'll just make a sort

788
00:47:07,300 --> 00:47:08,500
I don't know, sort space.

789
00:47:09,800 --> 00:47:12,600
And I guess I've got two things here.

790
00:47:12,600 --> 00:47:14,000
So this is like sorte.

791
00:47:16,000 --> 00:47:16,700
And sort be.

792
00:47:20,000 --> 00:47:23,400
And in both cases we're just again just grabbing some temp memory that

793
00:47:23,400 --> 00:47:25,200
we're going to use from the debug Arena.

794
00:47:30,300 --> 00:47:32,200
and in both cases, I just want

795
00:47:34,000 --> 00:47:34,900
Some of these.

796
00:47:39,600 --> 00:47:43,200
so after I create these sorts, what I do want to do is initialize the

797
00:47:43,200 --> 00:47:44,300
sort a one

798
00:47:52,400 --> 00:47:57,400
I would like the sort a one to be initialized so that the sort key is

799
00:47:57,400 --> 00:47:59,500
whatever the MK stats whatever.

800
00:47:59,500 --> 00:47:59,800
It's

801
00:48:00,000 --> 00:48:01,100
Total value is.

802
00:48:02,500 --> 00:48:09,600
So I want the the some and I want the index to be I guess at this

803
00:48:09,600 --> 00:48:10,500
point I'm going to need it right?

804
00:48:10,500 --> 00:48:12,700
Because I need to be able to do an actual index.

805
00:48:12,900 --> 00:48:15,500
So I suppose in here we do have that and I could get rid of these at

806
00:48:15,500 --> 00:48:16,700
that point, right?

807
00:48:16,700 --> 00:48:19,000
That would just be entries.

808
00:48:19,000 --> 00:48:21,700
Plus index sort a plus index

809
00:48:26,500 --> 00:48:29,200
And so now I've got a sort thing set up as well.

810
00:48:29,200 --> 00:48:34,600
So when I want to, now I can go into handmade sort and I can pick one

811
00:48:34,600 --> 00:48:37,400
of our sorts, I don't know, I guess we might, as well do Radix sort.

812
00:48:37,400 --> 00:48:39,200
I think that's what we were using in the other code.

813
00:48:39,200 --> 00:48:40,900
I don't really remember but doesn't really matter.

814
00:48:40,900 --> 00:48:42,100
Whichever one we want.

815
00:48:43,000 --> 00:48:47,400
And we can say like, okay, why don't you sort Soiree and I'll give you

816
00:48:47,400 --> 00:48:50,500
sort be as a backup sort, that'll sort for us.

817
00:48:50,700 --> 00:48:53,300
And then when I can do is, I can go through here and actually print

818
00:48:53,300 --> 00:48:54,600
these things out in order.

819
00:48:54,900 --> 00:48:57,400
Boobs don't want to end temporary memory every time.

820
00:49:00,500 --> 00:49:02,300
And so instead,

821
00:49:04,900 --> 00:49:05,800
Let's see here.

822
00:49:07,400 --> 00:49:10,300
This this index will get shadowed unfortunately that's okay.

823
00:49:10,400 --> 00:49:11,200
Just do it like this.

824
00:49:17,100 --> 00:49:20,000
So as I come through here, what I'm going to want to do now is I'm

825
00:49:20,000 --> 00:49:22,000
going to want to pull out the debug element.

826
00:49:22,000 --> 00:49:26,800
Well, first I'm going to want to pull out this entry, right?

827
00:49:26,800 --> 00:49:28,000
The debug clock entry.

828
00:49:28,400 --> 00:49:30,400
So I'm going to want to pull out the debug clock entry.

829
00:49:32,100 --> 00:49:35,100
And that's just our entries array plus whatever index were on.

830
00:49:35,300 --> 00:49:39,600
And then I'm going to want to sort of indirect that, right?

831
00:49:39,600 --> 00:49:45,100
Because it's actually whatever the sort array is whatever that one

832
00:49:45,100 --> 00:49:47,800
says the index is because remember, the sword array has now been been

833
00:49:47,800 --> 00:49:51,700
sorted and we want to like, in directly jump to the correct entry in

834
00:49:51,700 --> 00:49:55,700
our actual setup and I can grab the element off of the entry very

835
00:49:55,700 --> 00:49:56,200
easily.

836
00:49:58,900 --> 00:50:01,100
And then, in here, I can just print out.

837
00:50:03,400 --> 00:50:06,300
whatever information I need from the

838
00:50:08,000 --> 00:50:11,800
Here you Cycles 10 you.

839
00:50:12,100 --> 00:50:14,400
So this is have to be converted to a you 32.

840
00:50:16,500 --> 00:50:20,800
So total clocks is actually going to be whatever my entry, whatever my

841
00:50:20,800 --> 00:50:25,100
stat value is, I guess, and I can dereference that as well.

842
00:50:25,600 --> 00:50:27,000
So here's my staff value.

843
00:50:27,200 --> 00:50:28,900
Whatever my staff value was

844
00:50:38,400 --> 00:50:38,700
Whatever.

845
00:50:38,700 --> 00:50:39,500
Its some was,

846
00:50:40,600 --> 00:50:41,100
Right.

847
00:50:42,200 --> 00:50:43,900
And I think that's all I really need to do.

848
00:50:44,400 --> 00:50:48,100
Now we have one problem which is that I'm not actually.

849
00:50:48,100 --> 00:50:49,600
Well, I'll tell you what it says in second.

850
00:50:49,600 --> 00:50:50,200
Let's see here.

851
00:50:50,200 --> 00:50:50,800
Are you 64?

852
00:50:50,800 --> 00:50:54,800
Darcy before anything else?

853
00:50:55,900 --> 00:50:59,300
Sort key truncate that down to R32.

854
00:51:00,000 --> 00:51:06,300
We have one problem which is that our statistics at the moment, don't

855
00:51:06,300 --> 00:51:07,100
keep sums.

856
00:51:07,100 --> 00:51:08,000
I added that right.

857
00:51:08,000 --> 00:51:10,200
But then I haven't actually implemented it yet.

858
00:51:10,500 --> 00:51:14,100
So in here, when we do our accumulation, I need to make that actually

859
00:51:14,100 --> 00:51:14,600
work.

860
00:51:15,100 --> 00:51:18,900
So, here's the some in here, instead of adding the average, I'm going

861
00:51:18,900 --> 00:51:19,800
to add to the sum.

862
00:51:20,000 --> 00:51:24,100
And then in here, assuming that the count comes out to something

863
00:51:24,300 --> 00:51:25,200
reasonable.

864
00:51:25,500 --> 00:51:27,600
Then I am going to

865
00:51:30,200 --> 00:51:31,300
Actually compute it.

866
00:51:33,500 --> 00:51:37,200
Like so, so I'm just keeping that some around.

867
00:51:38,100 --> 00:51:42,400
Instead of overwriting, it using the average as a scratch space for

868
00:51:42,400 --> 00:51:42,500
it.

869
00:51:42,500 --> 00:51:43,400
Then overriding it.

870
00:51:45,100 --> 00:51:49,000
All right, so now hey look, it worked the first time.

871
00:51:49,000 --> 00:51:52,100
That's kind of a nice thing and fortunately it's sorting in kind of

872
00:51:52,100 --> 00:51:55,200
the opposite direction is what we want because I don't really want to

873
00:51:55,200 --> 00:51:56,600
see the people who aren't taking time.

874
00:51:56,600 --> 00:51:59,900
I want to see the people who are taking time at the top, especially

875
00:51:59,900 --> 00:52:02,500
once we make this clip to a window.

876
00:52:02,700 --> 00:52:03,300
Sighs.

877
00:52:03,400 --> 00:52:05,300
I'm not going to even see these things down here.

878
00:52:05,300 --> 00:52:07,600
So, all the important stuff had better be at the top.

879
00:52:07,600 --> 00:52:11,000
That's the whole point in order to do that, it's pretty easy, right?

880
00:52:11,000 --> 00:52:13,600
Because since we have a sort and we could sort on whatever we want

881
00:52:13,600 --> 00:52:16,900
when we create the sort key, if we just flip the sense of it, right?

882
00:52:16,900 --> 00:52:20,600
If I just negate, what I'm passing down, it'll go the other direction,

883
00:52:20,900 --> 00:52:21,400
right?

884
00:52:22,400 --> 00:52:23,500
So that's pretty simple.

885
00:52:24,500 --> 00:52:28,100
So now we have a nice top list that's showing us the information.

886
00:52:28,100 --> 00:52:30,600
I'm almost out of time, I'm going to print out a couple other things

887
00:52:30,600 --> 00:52:36,100
here, but but the rest of stuff they're going to do.

888
00:52:36,100 --> 00:52:38,700
We'll have to wait for a little while.

889
00:52:38,700 --> 00:52:41,300
So let me just do a couple of things here.

890
00:52:42,000 --> 00:52:46,800
The, you know, the account, for example, might be a nice thing to put

891
00:52:46,800 --> 00:52:47,200
in there.

892
00:52:48,000 --> 00:52:49,300
So like, you know,

893
00:52:52,000 --> 00:52:54,000
How many times something was called?

894
00:52:54,400 --> 00:52:56,100
That would be stats count?

895
00:52:59,700 --> 00:53:00,200
Right?

896
00:53:00,200 --> 00:53:04,300
And so you can see like, okay, we're asking for 17 assets here and

897
00:53:04,300 --> 00:53:06,500
doing you know, whatever, blah blah, blah, right?

898
00:53:08,000 --> 00:53:09,600
Go down to something that's a little more interesting.

899
00:53:09,600 --> 00:53:10,000
We can see.

900
00:53:10,000 --> 00:53:13,700
Like, okay, we're doing 715 calls to get World chunk.

901
00:53:13,800 --> 00:53:17,000
278 times, were changing interview locations, you know, that sort of

902
00:53:17,000 --> 00:53:20,400
stuff, and so that kind of tells us how much things are getting

903
00:53:20,400 --> 00:53:21,600
called, right?

904
00:53:22,800 --> 00:53:25,500
So, the other thing that I might want to do is show the percentage of

905
00:53:25,500 --> 00:53:28,700
the time and showing the percent of the time would be pretty easy as

906
00:53:28,700 --> 00:53:28,900
well.

907
00:53:28,900 --> 00:53:33,700
What I can do is just do like a total time value and every time

908
00:53:33,700 --> 00:53:39,800
through here, after I do the debug statistic, and I can add my entry

909
00:53:39,800 --> 00:53:41,400
stats, some.

910
00:53:41,400 --> 00:53:45,800
So the total time I can add in here and so that allows me to

911
00:53:45,800 --> 00:53:49,300
accumulate that and and know that the complete time.

912
00:53:49,300 --> 00:53:52,800
And so what I could do is I

913
00:53:52,800 --> 00:53:58,300
Can say, you know, that, that summed set of Cycles.

914
00:53:58,600 --> 00:53:59,800
It's a bit of a tongue twister.

915
00:54:00,100 --> 00:54:04,000
I can invert that and give myself a multiplier that will produce

916
00:54:04,000 --> 00:54:06,300
percentages from my other cycle times.

917
00:54:06,300 --> 00:54:11,500
So like my percent coefficient, right let's look all that.

918
00:54:11,500 --> 00:54:17,400
The PC is will make that zero at first and then we'll just check,

919
00:54:17,400 --> 00:54:18,200
okay?

920
00:54:18,200 --> 00:54:20,300
If the total time is greater than 0.

921
00:54:20,300 --> 00:54:24,300
So there was some time taken, then the PC will equal 1 over the total

922
00:54:24,300 --> 00:54:26,800
time and that will turn things into a percentage.

923
00:54:26,800 --> 00:54:30,100
Now what I can do is pre multiply it by 100 here because

924
00:54:30,100 --> 00:54:33,500
Sense obviously are multiplied by 100 from their their normal value.

925
00:54:34,100 --> 00:54:39,100
And so in order to print the percent here, what I can do is just say

926
00:54:40,700 --> 00:54:48,500
okay we'll do a percent 3D value here and before the count will print

927
00:54:48,500 --> 00:54:53,800
and actually put a % there before the thing will print whatever that

928
00:54:53,800 --> 00:54:58,300
some is times the the counter, right?

929
00:55:03,500 --> 00:55:07,000
And so now we can also see the percentage of the time that each one of

930
00:55:07,000 --> 00:55:12,300
these things is taking and you can kind of see here that we've got,

931
00:55:12,300 --> 00:55:15,400
you know, the percentages sort of ranging in

932
00:55:18,900 --> 00:55:19,600
What's running looking for?

933
00:55:19,600 --> 00:55:24,100
We've got the the percentages are sort of all high towards the top and

934
00:55:24,100 --> 00:55:26,200
low at the bottom, which is exactly what we expect.

935
00:55:26,200 --> 00:55:28,200
But keep in mind that these percentages

936
00:55:30,900 --> 00:55:32,900
Are inclusive of the children.

937
00:55:32,900 --> 00:55:37,700
So if you have somebody in a person who's taking some sort of time and

938
00:55:37,700 --> 00:55:41,100
somebody above them, who's taking a certain percentage of the time,

939
00:55:41,400 --> 00:55:43,300
they're actually including the child.

940
00:55:43,400 --> 00:55:46,300
So for example, looking at game update and game update and rendered,

941
00:55:46,300 --> 00:55:49,800
that's actually the same piece of information that we're getting

942
00:55:49,800 --> 00:55:50,200
there.

943
00:55:50,500 --> 00:55:51,000
Right?

944
00:55:51,500 --> 00:55:54,800
So those are the reason those are both 20 is because they're both

945
00:55:54,800 --> 00:55:57,400
actually timing the exact same thing, right?

946
00:55:58,200 --> 00:56:00,600
So if we look at

947
00:56:00,700 --> 00:56:06,200
how this is actually adding up, we should be able to get to a point

948
00:56:06,200 --> 00:56:08,700
where we well

949
00:56:11,600 --> 00:56:14,000
We won't add up to 100%.

950
00:56:15,700 --> 00:56:16,000
Right?

951
00:56:16,000 --> 00:56:17,700
We should add up to 100%.

952
00:56:17,800 --> 00:56:20,000
We should be able to get to add up to 100% if we sum of the

953
00:56:20,000 --> 00:56:20,400
percentages.

954
00:56:20,400 --> 00:56:22,900
Now, remember, all of these are small percentages that will add up to

955
00:56:22,900 --> 00:56:23,600
something.

956
00:56:26,300 --> 00:56:27,600
So yeah.

957
00:56:27,600 --> 00:56:29,100
So we can check our math here.

958
00:56:29,100 --> 00:56:30,800
I'd like I said, I'm pretty much out of time so I'm not sure if we're

959
00:56:30,800 --> 00:56:32,500
gonna do that right now but we should do that.

960
00:56:33,300 --> 00:56:34,100
So what is that?

961
00:56:34,100 --> 00:56:40,400
That's like 60, let's say that something like 40 so it's a little

962
00:56:40,400 --> 00:56:40,800
weird.

963
00:56:40,800 --> 00:56:43,400
Like I feel like maybe I did something slightly wrong, although I

964
00:56:43,400 --> 00:56:47,200
guess all of these combined probably are enough percentage because

965
00:56:47,800 --> 00:56:49,000
well, I don't know, are they?

966
00:56:49,400 --> 00:56:50,300
They probably aren't.

967
00:56:50,300 --> 00:56:52,500
So there's something weird here because I feel like

968
00:56:54,400 --> 00:56:56,600
No, there's nothing weird there.

969
00:56:57,900 --> 00:56:59,800
This is the percentage of the total time.

970
00:57:00,500 --> 00:57:04,300
And the total time includes that double counting so it's all fine.

971
00:57:04,300 --> 00:57:04,800
Never mind.

972
00:57:04,800 --> 00:57:05,600
I'm totally fine.

973
00:57:06,100 --> 00:57:07,000
I'm totally fine with it.

974
00:57:07,200 --> 00:57:09,500
So yeah, these would probably add up to about 100 that looks about

975
00:57:09,500 --> 00:57:10,700
right to me, that's all good.

976
00:57:10,700 --> 00:57:14,200
But this is not an actual useful measure yet.

977
00:57:14,200 --> 00:57:17,000
Because like I said, what we want to do is take the child times out of

978
00:57:17,000 --> 00:57:20,600
there, because in this case, you would say, oh, the game update block

979
00:57:20,600 --> 00:57:21,500
is taking all the time.

980
00:57:21,500 --> 00:57:23,300
Well, that's true, right?

981
00:57:23,600 --> 00:57:27,800
But it's not the whole truth because really game update and render is

982
00:57:27,900 --> 00:57:29,900
taking all of the time inside game.

983
00:57:30,400 --> 00:57:31,500
So, game update itself.

984
00:57:31,500 --> 00:57:33,400
It's actually just a little bit of Preamble code, that doesn't take

985
00:57:33,400 --> 00:57:36,400
any time and then all the time is excellent, game engine render.

986
00:57:36,500 --> 00:57:40,100
So it's not that useful necessarily to see it in this fashion and we

987
00:57:40,100 --> 00:57:43,300
want to be able to see, like, just me, not my children.

988
00:57:43,300 --> 00:57:47,400
How much time am I worth looking at as a code block myself and I don't

989
00:57:47,400 --> 00:57:50,100
think I'll be that hard for us to add that, but it won't be able to

990
00:57:50,100 --> 00:57:50,700
edit right now.

991
00:57:52,000 --> 00:57:53,400
And of course, just double check.

992
00:57:53,400 --> 00:57:56,000
Make sure we can still get everywhere.

993
00:57:56,000 --> 00:57:58,400
We need to get, we can so that's good.

994
00:57:59,000 --> 00:58:04,000
Okay, I'm going to go ahead and go to the Q&A not that anyone ever has

995
00:58:04,000 --> 00:58:04,400
questions.

996
00:58:04,400 --> 00:58:05,200
Why do debug code?

997
00:58:05,200 --> 00:58:05,900
But what you gonna do?

998
00:58:17,000 --> 00:58:18,900
It's interesting to, you can see these.

999
00:58:19,800 --> 00:58:21,700
I'm just going to point this out while waiting for questions.

1000
00:58:22,400 --> 00:58:24,400
So, you'll notice that nowhere in here.

1001
00:58:24,400 --> 00:58:27,600
Do we have duplicate entries into the list, right?

1002
00:58:28,100 --> 00:58:30,800
And the question is, well, why don't we have duplicate entries into

1003
00:58:30,800 --> 00:58:33,200
the list anywhere or another way to say it?

1004
00:58:33,200 --> 00:58:36,000
Would when we get down to the debug code, why do we have duplicate

1005
00:58:36,000 --> 00:58:37,000
entries in the list?

1006
00:58:37,200 --> 00:58:40,900
And the answer is every time we do a code reload the grid for a

1007
00:58:40,900 --> 00:58:44,600
particular entry will change potentially because it's no longer the

1008
00:58:44,600 --> 00:58:46,200
same code anymore, right?

1009
00:58:47,000 --> 00:58:49,900
And so this is all from the fact that we were changing the debug

1010
00:58:49,900 --> 00:58:50,200
system.

1011
00:58:50,200 --> 00:58:55,300
So it's information, it created different blocks like new grid markers

1012
00:58:55,300 --> 00:58:56,100
for those blocks.

1013
00:58:56,100 --> 00:58:57,600
Whereas all this code didn't change.

1014
00:58:57,600 --> 00:58:59,200
So they stay the same, which is kind of fun.

1015
00:59:22,600 --> 00:59:28,400
Cousin games can I avoid taxation by reinvesting into capital gains in

1016
00:59:28,600 --> 00:59:29,700
America?

1017
00:59:30,100 --> 00:59:31,800
Yes, that's the whole point of it.

1018
00:59:31,800 --> 00:59:34,500
It's to make sure that rich people don't pay taxes.

1019
00:59:35,700 --> 00:59:37,600
That's why it was invented.

1020
00:59:38,600 --> 00:59:41,000
I mean why should rich people have to pay taxes?

1021
00:59:44,500 --> 00:59:45,700
Dude, in basement one.

1022
00:59:45,700 --> 00:59:47,700
Why won't we add to 100%?

1023
00:59:47,800 --> 00:59:49,000
We do add to a hundred percent.

1024
00:59:49,000 --> 00:59:52,500
I was what I was thinking in my head was I was like, wait a minute

1025
00:59:52,600 --> 00:59:56,200
since this is double counting this time, it shouldn't add 200.

1026
00:59:56,200 --> 00:59:59,900
I'm like wait a minute, no, our percentages are based.

1027
01:00:00,000 --> 01:00:03,500
The double counting so they should add to 100 and they do.

1028
01:00:03,700 --> 01:00:06,700
But I was thinking, oh wait, they shouldn't have to 100 because the

1029
01:00:06,700 --> 01:00:09,700
total running time I was thinking we were looking at the total actual

1030
01:00:09,700 --> 01:00:12,600
measured runtime and taking percentage of that.

1031
01:00:12,600 --> 01:00:17,500
And I was like we should add too much higher than 100% but that's not

1032
01:00:17,500 --> 01:00:17,900
what we're doing.

1033
01:00:17,900 --> 01:00:20,900
We're just looking at the total Cycles recorded.

1034
01:00:21,300 --> 01:00:22,900
So yeah.

1035
01:00:24,800 --> 01:00:29,100
So we do add two hundred percent and that's what should have happened.

1036
01:00:43,000 --> 01:00:43,900
Sean McGrath.

1037
01:00:43,900 --> 01:00:47,000
How would you self update and exit?

1038
01:00:47,300 --> 01:00:51,600
Right now, I have a second deck, see that copies a file that

1039
01:00:51,600 --> 01:00:54,400
overwrites, the current x z.

1040
01:00:54,700 --> 01:00:58,500
So, the main x equals update me close itself, update me sleeps for a

1041
01:00:58,500 --> 01:01:03,200
half second then copies, there's got to be something smarter.

1042
01:01:05,400 --> 01:01:06,200
so, you

1043
01:01:18,600 --> 01:01:21,000
So, let me see these other questions are asked about what we're doing.

1044
01:01:21,000 --> 01:01:23,500
So let me take those first and there aren't any other questions?

1045
01:01:23,500 --> 01:01:26,500
I will talk about the other question is death.

1046
01:01:27,500 --> 01:01:32,600
So as far as the question that's can the percentage support of decimal

1047
01:01:32,600 --> 01:01:33,000
place?

1048
01:01:33,400 --> 01:01:34,400
The answer is yes.

1049
01:01:34,400 --> 01:01:39,300
But at that point you need floating-point printout, which we probably

1050
01:01:39,300 --> 01:01:40,200
should Implement anyway.

1051
01:01:40,200 --> 01:01:43,900
So yeah, I mean, not, not a problem.

1052
01:01:44,700 --> 01:01:45,900
You just do it like this.

1053
01:02:01,700 --> 01:02:03,100
did I mess up the

1054
01:02:05,200 --> 01:02:07,500
What's the width specifier?

1055
01:02:07,900 --> 01:02:15,000
That says, I want at least three spaces though.

1056
01:02:20,900 --> 01:02:23,300
Because I want it to be aligned.

1057
01:02:25,900 --> 01:02:26,700
Is it that?

1058
01:02:28,600 --> 01:02:29,100
No.

1059
01:02:33,900 --> 01:02:34,300
I know.

1060
01:02:36,200 --> 01:02:37,600
I want this to be a lie.

1061
01:02:37,600 --> 01:02:40,000
I don't remember how to specify the width.

1062
01:02:41,100 --> 01:02:44,800
In any other way, it looks like it was ignoring me, but I'm not sure

1063
01:02:44,800 --> 01:02:45,500
why.

1064
01:02:49,100 --> 01:02:50,700
But that would be the decimal place.

1065
01:02:53,100 --> 01:02:56,000
How many you go about investigating the cycle count increase for the

1066
01:02:56,000 --> 01:02:56,800
input processing?

1067
01:02:56,800 --> 01:02:58,500
When the mouse is moved?

1068
01:02:58,800 --> 01:02:59,500
So

1069
01:03:00,900 --> 01:03:03,600
To be honest with you, I don't have a necessary.

1070
01:03:03,600 --> 01:03:07,700
I don't have a like, oh, it's obviously, you just go do this, and you

1071
01:03:07,700 --> 01:03:08,700
would find out.

1072
01:03:10,500 --> 01:03:16,500
So I'm not 100% certain what we could do is time some more blocks.

1073
01:03:16,700 --> 01:03:20,800
Now what we do know right is that it appears to be in here because we

1074
01:03:20,800 --> 01:03:25,100
know that the windows messaging one goes up as well.

1075
01:03:26,700 --> 01:03:34,400
So for example, if I was to go here and do a pause and kind of scan

1076
01:03:34,400 --> 01:03:37,600
back through here to ones where it jumps,

1077
01:03:39,800 --> 01:03:42,300
So you can see win32 message processing cut that.

1078
01:03:42,300 --> 01:03:43,000
So cool.

1079
01:03:43,700 --> 01:03:44,400
How awesome is that?

1080
01:03:44,400 --> 01:03:47,100
We just jump back to one where we click and then we can look at

1081
01:03:49,500 --> 01:03:51,100
How cool is that though?

1082
01:03:52,500 --> 01:03:53,500
That's so cool.

1083
01:03:53,500 --> 01:03:56,900
Like we didn't write any of that into this system, it's just because

1084
01:03:56,900 --> 01:03:58,400
it all flows through the same thing.

1085
01:03:58,400 --> 01:04:01,000
We can just jump to any frame and get all the stuff.

1086
01:04:02,700 --> 01:04:05,600
Gah, and it tracks all our threads.

1087
01:04:11,000 --> 01:04:16,400
Anyway so here we see win32 message processing rate and input

1088
01:04:16,400 --> 01:04:16,900
processing.

1089
01:04:17,100 --> 01:04:18,100
They jump together.

1090
01:04:18,500 --> 01:04:22,100
So what it seems to suggest is that Insight input processing.

1091
01:04:22,300 --> 01:04:26,500
This is really our culprit because it's taking up apparently that

1092
01:04:26,600 --> 01:04:27,500
extra time.

1093
01:04:27,700 --> 01:04:32,500
And so inside win32 process pending messages, which is here, this is

1094
01:04:32,500 --> 01:04:36,000
the place where we're doing it and I guess the question would be, you

1095
01:04:36,000 --> 01:04:40,600
know, is it in our code or is it in Windows as code, okay?

1096
01:04:40,800 --> 01:04:43,400
Because we don't really know who's taking that time.

1097
01:04:43,600 --> 01:04:46,100
So one thing we could do is drop another block.

1098
01:04:46,100 --> 01:04:48,400
Here is the only place that we're actually doing any work.

1099
01:04:48,400 --> 01:04:50,900
Windows is the only person doing any work anywhere else.

1100
01:04:51,100 --> 01:04:54,400
So inside win32 process pending messages, what we could do is say,

1101
01:04:54,400 --> 01:04:54,600
well.

1102
01:04:54,600 --> 01:04:57,300
Alright, let's drop a Time Block in here.

1103
01:04:58,700 --> 01:04:59,200
Right.

1104
01:05:01,600 --> 01:05:02,300
And what do I have to do?

1105
01:05:02,300 --> 01:05:03,500
Name it or something?

1106
01:05:04,800 --> 01:05:05,500
This is

1107
01:05:07,700 --> 01:05:14,100
This is WM key messages.

1108
01:05:19,600 --> 01:05:20,200
Right?

1109
01:05:20,400 --> 01:05:22,600
And so yeah.

1110
01:05:22,900 --> 01:05:23,700
So

1111
01:05:27,100 --> 01:05:28,800
Blah, blah, blah, blah, blah, blah.

1112
01:05:30,900 --> 01:05:36,100
Let's go back to one where that's taking a lot of time, so,

1113
01:05:44,000 --> 01:05:44,300
Wait.

1114
01:05:44,300 --> 01:05:48,300
But that never actually gets called, right, because that's keyboard.

1115
01:05:48,300 --> 01:05:49,800
So I don't even know why I'm looking at that.

1116
01:05:50,100 --> 01:05:53,600
So the answer is Windows must be taking a lot longer inside peek

1117
01:05:53,600 --> 01:05:56,300
message because what are we're not doing anything?

1118
01:06:00,100 --> 01:06:03,600
I guess it could be inside dispatch message or something but it looks

1119
01:06:03,600 --> 01:06:04,600
like it's mostly.

1120
01:06:04,600 --> 01:06:07,300
It's got to be inside peek message, right?

1121
01:06:08,000 --> 01:06:12,900
And I suppose we can we could you know we can verify this.

1122
01:06:14,600 --> 01:06:18,300
If it was if that was actually the case, we could check two things.

1123
01:06:18,400 --> 01:06:18,800
Right.

1124
01:06:18,800 --> 01:06:21,200
One thing we could do is we could do this

1125
01:06:42,300 --> 01:06:46,500
So, we could say, if we didn't get a message, we break out of the

1126
01:06:46,500 --> 01:06:48,100
loop, right?

1127
01:06:49,200 --> 01:06:50,900
And so we could do that.

1128
01:06:51,400 --> 01:06:55,000
And now, when we're running through here, let's unpause the profiler,

1129
01:06:56,100 --> 01:06:59,300
when we're running through here, and we do our little Fancy Pants,

1130
01:06:59,300 --> 01:07:03,700
whatever we could now say like, oh, okay, let's time the peak message

1131
01:07:03,800 --> 01:07:04,600
in a block.

1132
01:07:11,900 --> 01:07:13,000
And see what that does.

1133
01:07:13,000 --> 01:07:13,500
Oops.

1134
01:07:22,400 --> 01:07:24,300
Where are you pick message?

1135
01:07:31,400 --> 01:07:32,900
Why are you not showing up?

1136
01:07:36,400 --> 01:07:37,400
What is the problem?

1137
01:07:44,700 --> 01:07:45,600
Am I missing something?

1138
01:07:45,600 --> 01:07:48,300
Is there a reason why we're not getting that added?

1139
01:07:57,600 --> 01:07:58,500
I don't get it.

1140
01:08:18,000 --> 01:08:19,399
All right, I'm gonna set a breakpoint in there because I don't

1141
01:08:19,399 --> 01:08:21,100
understand why that's not getting up.

1142
01:08:23,700 --> 01:08:27,000
Hi, this is in the platform code.

1143
01:08:27,000 --> 01:08:30,399
It doesn't get, dynamically reloaded, that's great.

1144
01:08:30,399 --> 01:08:31,200
Where's my towel?

1145
01:08:35,800 --> 01:08:37,399
Where's my towel?

1146
01:08:46,800 --> 01:08:47,500
That's just stupid.

1147
01:08:47,500 --> 01:08:47,899
Yeah.

1148
01:08:48,000 --> 01:08:49,399
Why isn't it showing up?

1149
01:08:49,500 --> 01:08:50,100
How about?

1150
01:08:50,100 --> 01:08:53,100
Because that's not in a section of the code that actually ever gets

1151
01:08:53,100 --> 01:08:53,700
hot loaded?

1152
01:08:53,700 --> 01:08:56,200
That's in the section, the code that does the hot loading.

1153
01:08:57,500 --> 01:08:58,200
Brilliant.

1154
01:08:59,399 --> 01:08:59,800
All right.

1155
01:09:01,500 --> 01:09:02,399
Let's try this again.

1156
01:09:05,100 --> 01:09:08,100
So where are my Peak message at?

1157
01:09:08,100 --> 01:09:11,600
No and you know what God actually do the compiled.

1158
01:09:11,700 --> 01:09:14,899
Okay so do my compiled we have a new executable.

1159
01:09:15,100 --> 01:09:16,300
We Run The executable.

1160
01:09:17,399 --> 01:09:18,600
Do we see a peak message?

1161
01:09:18,600 --> 01:09:20,100
Yes, we do shocking.

1162
01:09:22,899 --> 01:09:23,300
You know what?

1163
01:09:23,300 --> 01:09:27,200
I feel like inside that debug control, things should just be inside

1164
01:09:27,200 --> 01:09:30,800
the profiler, that's where I want it.

1165
01:09:31,100 --> 01:09:32,000
I've decided

1166
01:09:36,800 --> 01:09:38,700
At least for now can always move it.

1167
01:09:39,100 --> 01:09:39,899
That's the nice thing.

1168
01:09:46,800 --> 01:09:47,300
Alright.

1169
01:09:47,300 --> 01:09:48,600
So here we go.

1170
01:09:48,700 --> 01:09:50,000
It's doing its thing.

1171
01:09:50,899 --> 01:09:56,700
I'm going to pause this and then we have let's see our Peak message.

1172
01:10:12,300 --> 01:10:14,700
So you can see the peak message took.

1173
01:10:16,600 --> 01:10:19,200
Basically the whole time.

1174
01:10:21,700 --> 01:10:25,500
right, it took point two five percent and these guys were just a

1175
01:10:25,500 --> 01:10:26,600
little bit over that

1176
01:10:27,700 --> 01:10:30,300
So it looks like the call to Peak message.

1177
01:10:30,300 --> 01:10:33,900
Is just Windows is taking its sweet time doing its thread.

1178
01:10:33,900 --> 01:10:34,500
DQ

1179
01:10:36,300 --> 01:10:37,000
I don't know why.

1180
01:10:40,400 --> 01:10:41,700
Do not know why.

1181
01:10:43,300 --> 01:10:46,900
But I don't know that there's a whole lot we could do about that.

1182
01:10:50,600 --> 01:10:51,900
I guess would be what I would say.

1183
01:11:09,000 --> 01:11:11,700
All right, so it's like no other relevant questions.

1184
01:11:16,000 --> 01:11:19,300
And someone was so someone said the same thing I actually thought I

1185
01:11:19,300 --> 01:11:25,700
just typed dude in basement was saying it's that but I thought that is

1186
01:11:25,700 --> 01:11:27,700
what I typed before and that didn't work.

1187
01:11:31,900 --> 01:11:32,900
Yeah, that doesn't work.

1188
01:11:34,500 --> 01:11:36,300
So I don't know why it doesn't work.

1189
01:11:36,300 --> 01:11:40,400
Maybe es printf doesn't handle with specifiers correctly or something.

1190
01:11:41,500 --> 01:11:43,200
Because that's what I would have expected.

1191
01:11:45,000 --> 01:11:45,500
I don't know.

1192
01:11:46,000 --> 01:11:46,900
I know it's going on there.

1193
01:11:47,300 --> 01:11:48,600
We can fix that ourselves later.

1194
01:11:48,600 --> 01:11:50,900
So it's not a huge deal, but it's just annoying.

1195
01:11:52,200 --> 01:11:58,800
Anyway, ssssss McGrath wants to know how you replace your own

1196
01:11:58,800 --> 01:11:59,800
executable on the Fly.

1197
01:12:03,600 --> 01:12:05,500
So two things about that one.

1198
01:12:05,500 --> 01:12:05,900
I would ask.

1199
01:12:05,900 --> 01:12:08,300
The question is, why do you actually want to replace the entire

1200
01:12:08,300 --> 01:12:09,600
executable on the fly?

1201
01:12:09,800 --> 01:12:14,100
Like why not just use a dll like we're doing here, but if you actually

1202
01:12:14,100 --> 01:12:17,700
want to replace the executable on the Fly, you can do that as well.

1203
01:12:19,400 --> 01:12:22,400
What we would probably do, is something like this.

1204
01:12:24,300 --> 01:12:30,100
So let's say we're in here and we want to replace the the dll.

1205
01:12:34,100 --> 01:12:35,400
Let's, let's look.

1206
01:12:45,300 --> 01:12:46,600
No ma'am, meow.

1207
01:12:46,600 --> 01:12:47,000
Meow.

1208
01:12:47,000 --> 01:12:47,500
Meow.

1209
01:12:52,300 --> 01:12:53,800
Words happen.

1210
01:12:54,800 --> 01:12:55,700
All right.

1211
01:12:55,900 --> 01:12:56,400
Mmm.

1212
01:12:56,400 --> 01:12:57,900
Yeah, mmm.

1213
01:12:58,200 --> 01:13:00,300
Mmm, mmm, mmm.

1214
01:13:02,200 --> 01:13:06,800
Where I'm just kind of like forgetting where the code actually is that

1215
01:13:09,200 --> 01:13:13,100
That actually like, unloads the game code and all that, okay?

1216
01:13:16,700 --> 01:13:20,900
So you know, when we do this stuff and we do executable needs to be

1217
01:13:20,900 --> 01:13:21,800
reloaded.

1218
01:13:23,200 --> 01:13:29,000
So I'm going to go ahead and say that like, okay when we do this, the

1219
01:13:29,000 --> 01:13:31,700
other thing we could do is Maybe

1220
01:13:35,700 --> 01:13:41,300
Maybe do the same thing for our XE or something and and swap to the

1221
01:13:41,300 --> 01:13:42,400
new exit.

1222
01:13:43,000 --> 01:13:46,900
We can't hot do that, but we could, I could show how you would do that

1223
01:13:47,500 --> 01:13:50,400
if you want to do that as as like a patching Behavior.

1224
01:13:54,400 --> 01:13:55,300
so,

1225
01:14:00,000 --> 01:14:02,000
Let me ask one clarifying question.

1226
01:14:09,100 --> 01:14:11,000
Well actually, I guess I don't even need a clarifying question.

1227
01:14:11,400 --> 01:14:14,400
So if we want it to automatically start when there was a new

1228
01:14:14,400 --> 01:14:18,200
executable built, then what we could do for that is we just need a

1229
01:14:18,200 --> 01:14:23,100
place where that executable gets gets put, if that makes sense and we

1230
01:14:23,100 --> 01:14:24,000
need to check that.

1231
01:14:24,000 --> 01:14:27,400
So the way that would work is similar to what we were doing before,

1232
01:14:27,400 --> 01:14:30,400
where we have this sort of nonsense going on, where we have a bunch of

1233
01:14:30,400 --> 01:14:33,600
files that we use to determine what's happening, right?

1234
01:14:35,100 --> 01:14:38,800
And what we could do, I don't remember how the lock temp thing,

1235
01:14:38,900 --> 01:14:44,400
Looks to be honest with you, but we'll probably just try to ride on

1236
01:14:44,400 --> 01:14:47,800
that so that will probably use the same lock situation.

1237
01:14:48,300 --> 01:14:51,000
But what we need to do is we need to do the same thing we were doing

1238
01:14:51,000 --> 01:14:51,600
before.

1239
01:14:51,600 --> 01:14:58,700
So we need like this kind of a thing where we have source win32 code,

1240
01:14:58,800 --> 01:14:59,800
and temp, win32.

1241
01:15:01,100 --> 01:15:01,700
Right.

1242
01:15:04,800 --> 01:15:05,900
Or maybe x z.

1243
01:15:08,500 --> 01:15:13,000
So we need two of these things and we need them to be.

1244
01:15:14,800 --> 01:15:15,200
Let's see.

1245
01:15:15,200 --> 01:15:21,500
Temp win32 XZ, full half, empty 2xz full path.

1246
01:15:26,300 --> 01:15:27,000
Source.

1247
01:15:28,500 --> 01:15:30,600
32, I see.

1248
01:15:34,700 --> 01:15:38,700
And these would just be like winter, too.

1249
01:15:40,400 --> 01:15:48,100
Handmade out, XZ and went through to handmade temp dot EXE.

1250
01:15:50,300 --> 01:15:54,900
So once we have those, we would be able to check to see if it had been

1251
01:15:54,900 --> 01:15:59,600
updated right in the exact same way that we can check any other thing

1252
01:15:59,600 --> 01:16:00,600
that we want to know.

1253
01:16:03,100 --> 01:16:04,700
Howard, if it got updated.

1254
01:16:06,200 --> 01:16:08,600
so, when we do our compare file times,

1255
01:16:10,500 --> 01:16:11,100
Like here.

1256
01:16:12,700 --> 01:16:15,600
We can do, we could do the same thing, right?

1257
01:16:15,600 --> 01:16:24,900
We can say like, oh, you know, when to be to needs to be reloaded and

1258
01:16:24,900 --> 01:16:31,800
we could say, you know, compare the file times of

1259
01:16:35,600 --> 01:16:36,500
The.

1260
01:16:38,100 --> 01:16:39,400
New XE.

1261
01:16:40,900 --> 01:16:49,600
time and the old exit time and you know, I get both of those here so

1262
01:16:49,600 --> 01:16:50,400
I'd say like

1263
01:16:52,400 --> 01:16:53,600
Tell me what those are.

1264
01:16:55,900 --> 01:17:00,700
New XE time and bold XE time.

1265
01:17:02,100 --> 01:17:09,300
And when we have this stuff here, it would be win32.

1266
01:17:10,100 --> 01:17:11,300
Remember what we call this?

1267
01:17:11,800 --> 01:17:16,000
I need the names of these things, so it's

1268
01:17:17,200 --> 01:17:19,400
Where that at the top here.

1269
01:17:20,500 --> 01:17:21,700
So I need

1270
01:17:23,500 --> 01:17:24,800
this is not really source.

1271
01:17:28,600 --> 01:17:35,900
So I need to say, all right, the win32 XE full path and the temp,

1272
01:17:35,900 --> 01:17:38,000
win32 XZ full path.

1273
01:17:39,100 --> 01:17:43,000
I need to check those two things and if they are different than the

1274
01:17:43,000 --> 01:17:45,600
win32 thing needs to be reloaded.

1275
01:17:47,500 --> 01:17:50,600
If the win32 thing needs to be reloaded, that means it's basically

1276
01:17:50,600 --> 01:17:52,300
game over at that point.

1277
01:17:54,600 --> 01:17:59,700
and and, you know, we have to reload now the

1278
01:18:00,000 --> 01:18:03,800
I'm at this is this would make our game like go down and come back up

1279
01:18:03,800 --> 01:18:04,200
again.

1280
01:18:05,000 --> 01:18:06,200
So I don't know that.

1281
01:18:06,200 --> 01:18:10,400
I actually want this to happen, you know?

1282
01:18:10,400 --> 01:18:14,600
Like I almost wonder we probably might want to actually check to see,

1283
01:18:15,000 --> 01:18:18,700
we would want to, we would want to actually check to see if the two

1284
01:18:18,700 --> 01:18:21,500
files themselves were different, right?

1285
01:18:21,500 --> 01:18:23,400
So we'd want to compare the two files.

1286
01:18:23,400 --> 01:18:27,700
And if they weren't actually different, we wouldn't reload.

1287
01:18:28,700 --> 01:18:29,400
If that makes sense.

1288
01:18:29,400 --> 01:18:29,900
So,

1289
01:18:36,000 --> 01:18:39,800
But assuming that we actually did want to actually did find that to be

1290
01:18:39,800 --> 01:18:41,500
the case we could do, okay?

1291
01:18:41,500 --> 01:18:46,300
If win32 needs to be reloaded, then all bets are off and we got to do

1292
01:18:46,300 --> 01:18:54,500
our full, you know, win32 full restart or something, right?

1293
01:18:54,800 --> 01:19:00,900
And we would pass to that the path of the X Z and the path of the

1294
01:19:01,100 --> 01:19:03,000
thing that we wanted to like copy,

1295
01:19:04,900 --> 01:19:05,600
Or whatever.

1296
01:19:07,700 --> 01:19:08,400
If that makes sense.

1297
01:19:08,900 --> 01:19:11,700
All right, so if we have to do a win32 full restart the question, I

1298
01:19:11,700 --> 01:19:12,800
think that Sean is asking.

1299
01:19:12,800 --> 01:19:14,200
Now we've gotten to that part.

1300
01:19:14,600 --> 01:19:17,500
His question is, how do I do it right?

1301
01:19:17,500 --> 01:19:20,700
Because he's like I can't figure out how to actually make it restart.

1302
01:19:22,700 --> 01:19:25,200
So the way we would do win32 full restart in.

1303
01:19:25,200 --> 01:19:31,200
This case, here is our source, XZ and are dest XZ.

1304
01:19:36,300 --> 01:19:36,900
Right.

1305
01:19:38,000 --> 01:19:42,800
So what we need to do first is we need to move our executable out of

1306
01:19:42,800 --> 01:19:44,700
the way, so that we can put a new one in its place.

1307
01:19:44,700 --> 01:19:48,200
Now, we can't delete our executable because Windows doesn't actually

1308
01:19:48,200 --> 01:19:49,600
let you delete something.

1309
01:19:49,800 --> 01:19:51,600
When it's still being used.

1310
01:19:51,800 --> 01:19:53,900
It does, however, let you rename it.

1311
01:19:54,900 --> 01:19:58,300
So, what we need to do is we need to use a move file.

1312
01:20:05,100 --> 01:20:08,400
And I haven't done this in a long time, so I'm, you know, if it turns

1313
01:20:08,400 --> 01:20:11,500
out that we actually can't do it, I apologize.

1314
01:20:11,500 --> 01:20:14,400
But at least at one point it did work.

1315
01:20:15,700 --> 01:20:19,700
So the existing file name is the source, sexy, the

1316
01:20:34,200 --> 01:20:37,300
Well I guess that's not quite what I want to do first, the thing that

1317
01:20:37,300 --> 01:20:42,400
I want to do first is I want to move my executable to, I guess a

1318
01:20:42,400 --> 01:20:43,900
deletion place, right?

1319
01:20:44,900 --> 01:20:46,700
So we actually need one more of these.

1320
01:20:49,100 --> 01:20:51,400
we need one of these that's like,

1321
01:20:54,400 --> 01:20:54,800
Oops.

1322
01:20:59,200 --> 01:20:59,800
I forget how I

1323
01:21:00,100 --> 01:21:02,400
Replacing region gets that.

1324
01:21:04,100 --> 01:21:06,700
So yeah.

1325
01:21:06,900 --> 01:21:09,800
So Tampa is going to be delete

1326
01:21:23,100 --> 01:21:26,100
So in this case, we're going to do went through to full restart.

1327
01:21:26,100 --> 01:21:30,500
We've got our various executable situations happening here and the

1328
01:21:30,500 --> 01:21:34,000
first thing I want to do is I want to take the place that I want to

1329
01:21:34,000 --> 01:21:35,200
move things too.

1330
01:21:42,200 --> 01:21:44,500
And I want to say, all right, I'm trying to write to the desk.

1331
01:21:44,900 --> 01:21:46,700
That's the executable, I need to get out of the way.

1332
01:21:46,800 --> 01:21:50,100
So I'm going to move that to the delete executable location.

1333
01:21:53,000 --> 01:21:56,300
And some really what I could do here is say, well, I also know that I

1334
01:21:56,300 --> 01:22:00,200
want to delete the delete executable, right?

1335
01:22:03,100 --> 01:22:03,600
and,

1336
01:22:06,500 --> 01:22:08,500
Maybe old.

1337
01:22:09,700 --> 01:22:14,100
So I want to delete, whatever is in that location to start with.

1338
01:22:14,200 --> 01:22:18,400
I want to move myself the one that I'm currently running to the place

1339
01:22:18,400 --> 01:22:19,500
where it's going to get deleted.

1340
01:22:19,600 --> 01:22:23,800
I then want to move the one that you want me to use into the correct

1341
01:22:23,800 --> 01:22:25,500
slot for actually running it.

1342
01:22:25,700 --> 01:22:29,600
And then I need to, you know, run it, right?

1343
01:22:29,700 --> 01:22:33,000
So I would run it here and then I would exit process.

1344
01:22:33,000 --> 01:22:39,400
I would kill myself, right, commit suicide and so to run myself,

1345
01:22:39,500 --> 01:22:42,300
Right then, I just have to do like create process.

1346
01:22:43,700 --> 01:22:44,700
Actually, which we have.

1347
01:22:48,000 --> 01:22:50,400
All right, so we just need this.

1348
01:23:02,900 --> 01:23:07,400
So right, we got to create a start-up info and we got to make whatever

1349
01:23:07,800 --> 01:23:11,500
junk is remaking, we don't want SW hide.

1350
01:23:12,200 --> 01:23:15,800
Actually we don't want any of this, probably in the process info,

1351
01:23:15,800 --> 01:23:17,100
we've got the command line.

1352
01:23:17,100 --> 01:23:20,500
The command line is just going to be whatever the executables name was

1353
01:23:20,500 --> 01:23:22,800
because we don't pass any parameters to the command line.

1354
01:23:22,800 --> 01:23:28,700
Typically, if that makes sense, the path that we're running it in,

1355
01:23:28,700 --> 01:23:31,300
unfortunately, I don't really know what that would be.

1356
01:23:33,100 --> 01:23:35,700
We would have to figure out what that is for right now.

1357
01:23:35,700 --> 01:23:37,300
I'll hard code it right?

1358
01:23:37,300 --> 01:23:38,100
Just for fun.

1359
01:23:39,900 --> 01:23:42,800
It's just handmade data, right?

1360
01:23:44,800 --> 01:23:47,200
But we'll well we should take a look at that.

1361
01:23:49,000 --> 01:23:50,700
Maybe I'll finish this up tomorrow if people care.

1362
01:23:50,700 --> 01:23:55,300
Anyway, so the thing that we're trying to run here again is that dust

1363
01:23:55,300 --> 01:23:56,000
executable?

1364
01:23:56,000 --> 01:23:59,800
We want that to be to run and when

1365
01:24:00,000 --> 01:24:01,800
The process info that comes back.

1366
01:24:05,600 --> 01:24:06,800
Really, all I want to do here.

1367
01:24:06,800 --> 01:24:09,100
Well, I don't even care, I don't even need to close the handle.

1368
01:24:09,100 --> 01:24:10,300
It does not matter at all.

1369
01:24:11,200 --> 01:24:13,500
I mean, I can, I could do this.

1370
01:24:20,000 --> 01:24:24,900
And off we go, or I could just not and I think that's all we really

1371
01:24:24,900 --> 01:24:25,400
need to do.

1372
01:24:25,400 --> 01:24:28,000
Now, this would be an error here of some kind

1373
01:24:31,000 --> 01:24:32,600
But that's basically what we're talking about.

1374
01:24:36,200 --> 01:24:38,700
So this is the command line actually, so that's nothing.

1375
01:24:39,200 --> 01:24:42,100
We could run it with the same command line that we've been passed.

1376
01:24:43,000 --> 01:24:44,400
So, we could do this.

1377
01:24:45,900 --> 01:24:47,300
Which maybe makes more sense.

1378
01:24:50,100 --> 01:24:50,500
Yeah.

1379
01:24:51,300 --> 01:24:52,700
So anyway, that's

1380
01:24:53,900 --> 01:24:55,300
How that code would work.

1381
01:24:57,100 --> 01:25:01,600
And in here, what I would say is this thing should only happen

1382
01:25:01,600 --> 01:25:05,500
probably if the

1383
01:25:07,000 --> 01:25:11,200
If the actual thing that we're grabbing from, is there?

1384
01:25:13,200 --> 01:25:16,200
Because we don't, you know, if there actually isn't one of them, we

1385
01:25:16,200 --> 01:25:18,000
don't want that to be a thing.

1386
01:25:25,500 --> 01:25:26,200
Right?

1387
01:25:26,300 --> 01:25:28,200
Win32 doesn't have file exists.

1388
01:25:28,200 --> 01:25:29,300
It's like wait.

1389
01:25:29,300 --> 01:25:30,400
Do I have file exists though?

1390
01:25:34,800 --> 01:25:36,600
It's get file attributes.

1391
01:25:37,500 --> 01:25:38,700
It's actually this

1392
01:25:39,900 --> 01:25:41,000
Okay, so we did do it.

1393
01:25:47,400 --> 01:25:52,200
So it's already done the check and it knows whether or not it exists.

1394
01:25:52,500 --> 01:25:55,000
So I guess this will actually be equal to 0.

1395
01:25:55,000 --> 01:25:57,400
We could check to see if it is equal to zero.

1396
01:25:58,300 --> 01:25:59,400
You know we could do.

1397
01:26:01,700 --> 01:26:05,600
In line, 332 time is valid.

1398
01:26:15,600 --> 01:26:17,700
It's like high part and low part.

1399
01:26:21,100 --> 01:26:22,200
What is this thing again?

1400
01:26:25,700 --> 01:26:28,400
It's like DWI Part D W low part, something like that.

1401
01:26:30,200 --> 01:26:30,700
There it is.

1402
01:26:56,300 --> 01:26:59,200
So what I can do is say, went through two times, valid.

1403
01:27:01,500 --> 01:27:03,200
And say that we're only going to do this.

1404
01:27:04,100 --> 01:27:05,700
If I actually got

1405
01:27:08,900 --> 01:27:09,500
One of these.

1406
01:27:09,500 --> 01:27:13,300
I also think this is the wrong way around, not that it matters at all,

1407
01:27:13,300 --> 01:27:14,300
because nobody cares.

1408
01:27:15,700 --> 01:27:23,500
But I want to say, if the new XZ time is valid, then we can actually

1409
01:27:23,500 --> 01:27:24,200
compare them.

1410
01:27:24,500 --> 01:27:26,300
Otherwise I don't really want to compare them.

1411
01:27:27,900 --> 01:27:28,400
Alright.

1412
01:27:28,400 --> 01:27:32,600
So here we are running our mr.

1413
01:27:32,600 --> 01:27:38,200
Cody pants and I'll go ahead and do win32 full restart as a thing.

1414
01:27:39,100 --> 01:27:41,400
And so now, what should be possible, Right?

1415
01:27:41,400 --> 01:27:45,600
Is, I should be able to, like, do something ridiculous, like, copy

1416
01:27:49,800 --> 01:27:54,000
Windows system, 32, or notepad or something, right?

1417
01:27:54,000 --> 01:27:56,900
I should be able to copy notepad into

1418
01:27:57,700 --> 01:27:59,800
Two, handmade data.

1419
01:28:00,800 --> 01:28:02,500
Well, we're is win32 handmade.

1420
01:28:02,500 --> 01:28:02,800
I guess.

1421
01:28:02,800 --> 01:28:04,000
I don't really know.

1422
01:28:09,000 --> 01:28:09,800
It's a good question.

1423
01:28:10,000 --> 01:28:12,300
Do we actually copy that into the data directory?

1424
01:28:16,600 --> 01:28:21,000
So it's actually looking in the build directory for that, that's

1425
01:28:21,000 --> 01:28:22,300
actually where it is.

1426
01:28:22,800 --> 01:28:26,100
Okay and are these all going to be in the bill directory then too.

1427
01:28:29,900 --> 01:28:32,000
Well, I hope so so we'll just find out in a second.

1428
01:28:32,100 --> 01:28:32,300
All right.

1429
01:28:32,300 --> 01:28:33,300
So copy.

1430
01:28:33,300 --> 01:28:36,600
See Windows notepad into W.

1431
01:28:36,600 --> 01:28:42,100
Builds went through to handmade temp that XZ.

1432
01:28:44,400 --> 01:28:47,400
And is that the correct thing that we want to look for?

1433
01:28:58,300 --> 01:29:00,800
Yeah, I think so.

1434
01:29:03,000 --> 01:29:09,900
Yeah, all right so let's see let's get this working in doo doo doo doo

1435
01:29:09,900 --> 01:29:10,600
doo.

1436
01:29:11,500 --> 01:29:12,400
Take your handmade.

1437
01:29:14,200 --> 01:29:17,600
if I come down here and I say,

1438
01:29:20,500 --> 01:29:21,500
where is that code?

1439
01:29:23,100 --> 01:29:23,600
Loop.

1440
01:29:24,700 --> 01:29:28,300
All right, so new XE time.

1441
01:29:28,900 --> 01:29:30,300
Old XZ time.

1442
01:29:36,500 --> 01:29:37,400
What happened there?

1443
01:29:39,900 --> 01:29:42,900
Why am I unable to get the old executable time?

1444
01:29:50,200 --> 01:29:52,300
That's wrong weird.

1445
01:29:55,200 --> 01:29:59,800
A 2xz full path W builds win32 handmade.

1446
01:30:00,000 --> 01:30:00,600
Z.

1447
01:30:12,600 --> 01:30:14,700
It already executed that code.

1448
01:30:17,900 --> 01:30:19,000
How is that possible?

1449
01:30:22,400 --> 01:30:24,200
I set a breakpoint in a, didn't I?

1450
01:30:32,300 --> 01:30:34,700
How did I not get to see that happen?

1451
01:30:37,000 --> 01:30:38,500
I'm so confused right now.

1452
01:30:41,800 --> 01:30:46,000
Let's start this over again, somehow.

1453
01:30:46,000 --> 01:30:48,800
I didn't get to step through the code that I wanted to step through I

1454
01:30:48,800 --> 01:30:49,500
guess.

1455
01:30:51,700 --> 01:30:52,700
I'm not sure why.

1456
01:30:54,200 --> 01:30:56,400
Something happened.

1457
01:30:58,400 --> 01:30:59,000
Also.

1458
01:31:00,300 --> 01:31:01,100
This is backwards.

1459
01:31:05,600 --> 01:31:09,100
Okay, so let's try this one more time.

1460
01:31:10,000 --> 01:31:16,400
So in here, I'm going to move, went through to handmade old xe2 win32,

1461
01:31:17,200 --> 01:31:18,100
handmade

1462
01:31:20,000 --> 01:31:20,600
Exit.

1463
01:31:22,600 --> 01:31:26,100
Well, I guess I don't have to remind, it's all good.

1464
01:31:28,100 --> 01:31:29,700
So, I'm going to run it.

1465
01:31:32,400 --> 01:31:34,600
Here we are at our file time comparison.

1466
01:31:35,300 --> 01:31:39,800
We compare the two file times new XE time and old XZ time.

1467
01:31:43,500 --> 01:31:44,600
See if they're equal.

1468
01:31:47,700 --> 01:31:49,200
if thinks that they are not equal,

1469
01:31:52,200 --> 01:31:54,100
And that's correct because notepad is the other one.

1470
01:31:55,300 --> 01:31:55,800
Right.

1471
01:32:01,600 --> 01:32:02,100
Okay.

1472
01:32:04,700 --> 01:32:05,300
Let me just verify.

1473
01:32:05,300 --> 01:32:05,800
That that's true.

1474
01:32:05,800 --> 01:32:06,300
By the way.

1475
01:32:08,000 --> 01:32:10,700
In 32 and made 10.

1476
01:32:20,400 --> 01:32:22,200
Is there a reason that did not launch?

1477
01:32:37,000 --> 01:32:38,200
It is, in fact no pad.

1478
01:32:41,200 --> 01:32:43,100
But it's a notepad that refuses to run.

1479
01:32:44,700 --> 01:32:46,000
So that's a little less interesting.

1480
01:32:46,700 --> 01:32:47,100
All right.

1481
01:32:47,200 --> 01:32:50,600
I'm going to not, I want something that I can definitely know if it

1482
01:32:50,600 --> 01:32:51,000
ran.

1483
01:32:51,700 --> 01:32:52,800
So delete that

1484
01:32:54,300 --> 01:32:55,900
Let's get something else.

1485
01:32:56,300 --> 01:32:57,400
How about

1486
01:33:05,200 --> 01:33:06,200
What else can I grab?

1487
01:33:06,200 --> 01:33:07,100
It's on here.

1488
01:33:14,100 --> 01:33:15,400
If a builder proportion.

1489
01:33:17,600 --> 01:33:20,700
We have handmade stuff.

1490
01:33:21,300 --> 01:33:25,200
We've got four coder, guess we could relaunch the editor.

1491
01:33:34,600 --> 01:33:36,300
What about in program files?

1492
01:33:37,600 --> 01:33:38,600
How about?

1493
01:33:47,100 --> 01:33:50,700
It's kind of hoping that notepad would have ran but it didn't, it must

1494
01:33:50,700 --> 01:33:52,200
be missing a dll or something.

1495
01:33:56,900 --> 01:33:58,000
Nothing on here.

1496
01:33:58,000 --> 01:33:58,900
I need like a little.

1497
01:33:58,900 --> 01:34:00,100
Tiny simple.

1498
01:34:00,100 --> 01:34:01,800
Utility is color cop on here.

1499
01:34:10,300 --> 01:34:11,600
Let's try color cop.

1500
01:34:13,300 --> 01:34:14,400
Come on color cop.

1501
01:34:15,000 --> 01:34:15,700
You can do it.

1502
01:34:15,700 --> 01:34:18,500
Color cop, I believe in you.

1503
01:34:19,900 --> 01:34:24,800
All right, color cup and 32 handmade temp.

1504
01:34:26,200 --> 01:34:26,900
Bam.

1505
01:34:28,100 --> 01:34:29,700
All right, here we go.

1506
01:34:31,700 --> 01:34:33,800
Come through here, we test against color, cop.

1507
01:34:33,800 --> 01:34:35,600
We say we need to restart.

1508
01:34:35,800 --> 01:34:38,700
So, here we go and we'll see what happens.

1509
01:34:39,000 --> 01:34:43,300
So, first things first, here is the build directory and we are going

1510
01:34:43,300 --> 01:34:48,400
to try to delete the file, handmade old exe, see if that works.

1511
01:34:49,700 --> 01:34:54,400
And it does, we're then going to try and move handmade .exe to

1512
01:34:54,400 --> 01:34:57,000
handmade Old Dot exe and see if that works.

1513
01:34:57,300 --> 01:34:57,900
So

1514
01:34:59,000 --> 01:34:59,700
Do that.

1515
01:35:01,300 --> 01:35:04,300
And now you can see that the executable has moved to a new location

1516
01:35:04,600 --> 01:35:05,900
right now.

1517
01:35:05,900 --> 01:35:10,300
We're going to try to move our temporary executable on to our existing

1518
01:35:10,300 --> 01:35:12,600
executable like so.

1519
01:35:15,100 --> 01:35:15,500
Yeah.

1520
01:35:17,100 --> 01:35:20,300
And now you can see that we do have a win, 3-2 hammered Lexi.

1521
01:35:20,700 --> 01:35:23,900
I'm going to try to launch it with this.

1522
01:35:24,500 --> 01:35:25,200
There it is.

1523
01:35:26,200 --> 01:35:29,700
And then I am going to kill myself which I have

1524
01:35:31,300 --> 01:35:31,800
Right.

1525
01:35:39,000 --> 01:35:39,500
That.

1526
01:35:40,900 --> 01:35:41,900
So, what you're looking for?

1527
01:36:05,500 --> 01:36:06,600
It's time for me to go eat dinner.

1528
01:36:06,600 --> 01:36:07,000
So

1529
01:36:09,800 --> 01:36:13,500
That better be what you were looking for, but that's how you patch the

1530
01:36:13,500 --> 01:36:14,200
running executable.

1531
01:36:14,200 --> 01:36:17,300
So you're actually looking just look and do it.

1532
01:36:22,400 --> 01:36:23,200
You know, if you go.

1533
01:36:23,500 --> 01:36:26,300
So but again you cannot

1534
01:36:27,100 --> 01:36:28,800
Delete the executable.

1535
01:36:28,800 --> 01:36:31,500
You cannot copy the executable or any of that stuff.

1536
01:36:31,500 --> 01:36:33,600
You have to move the executable.

1537
01:36:33,600 --> 01:36:35,200
It has to be a move.

1538
01:36:35,200 --> 01:36:43,700
And the other thing that I would caution you about is you're going to

1539
01:36:43,700 --> 01:36:48,900
have to test this pretty thoroughly on a bunch of skus of Windows.

1540
01:36:48,900 --> 01:36:52,800
Because, like end like whether your administrator privileges or not,

1541
01:36:52,800 --> 01:36:57,100
because there may be things like it just

1542
01:36:57,200 --> 01:37:00,400
Doesn't let you start a new executable or it doesn't look like there

1543
01:37:00,400 --> 01:37:02,400
may be all sorts of stuff that it doesn't let you do.

1544
01:37:03,900 --> 01:37:04,400
Right.

1545
01:37:05,400 --> 01:37:07,600
So that's something to keep in mind.

1546
01:37:15,700 --> 01:37:16,500
I'm out of here.

1547
01:37:22,200 --> 01:37:23,900
And yeah.

1548
01:37:43,900 --> 01:37:45,200
Stupid, windows tricks.

1549
01:37:46,700 --> 01:37:47,500
With Casey.

1550
01:37:48,500 --> 01:37:52,800
All right, so let's go ahead and wind things down.

1551
01:37:54,500 --> 01:37:56,300
That's not what I needed to do this.

1552
01:37:56,900 --> 01:37:59,000
Thank you everyone for joining me for this episode of handmade here.

1553
01:37:59,000 --> 01:38:00,000
It's been a pleasure coding with you.

1554
01:38:00,000 --> 01:38:03,200
As always, if you would like to follow along at home with the source

1555
01:38:03,200 --> 01:38:05,000
code, it comes the pre-orders of the game.

1556
01:38:05,000 --> 01:38:07,700
So you can go to handmade here at work and preorder it, and then you

1557
01:38:07,700 --> 01:38:10,400
can play around source code and have yourself a grand old time.

1558
01:38:11,600 --> 01:38:14,000
This is the button that makes that the all of that possible.

1559
01:38:14,400 --> 01:38:16,600
We also have a forum so I can go to if you want to support.

1560
01:38:16,700 --> 01:38:18,300
No, that's not how it goes.

1561
01:38:18,300 --> 01:38:18,800
They also form.

1562
01:38:18,800 --> 01:38:21,500
So you can go to if you want ask questions and a patreon page, we go

1563
01:38:21,500 --> 01:38:22,900
to file, export the video series.

1564
01:38:23,200 --> 01:38:24,100
We have a tweak bought that

1565
01:38:24,300 --> 01:38:25,200
This girl's about you.

1566
01:38:26,900 --> 01:38:29,500
And if you're interested in the tools that we use on this program,

1567
01:38:29,500 --> 01:38:33,800
obviously, we use visual Studios Community Edition which someday, we

1568
01:38:33,800 --> 01:38:35,800
hope to replace and thanks to Alan Webster.

1569
01:38:35,800 --> 01:38:39,600
We now use our own custom editor, which is for coder, which you can

1570
01:38:39,600 --> 01:38:41,900
get by typing for a coder into your browser.

1571
01:38:43,000 --> 01:38:47,400
It's actually want to go to this patreon link so that you can so that

1572
01:38:47,400 --> 01:38:48,500
you can become a patron of it.

1573
01:38:48,900 --> 01:38:50,500
We use the one from the $5 tier.

1574
01:38:51,600 --> 01:38:54,000
So yeah, that's

1575
01:38:54,300 --> 01:38:58,200
What you should do, I will be back here again in 5 p.m.

1576
01:38:58,200 --> 01:39:00,300
Pacific Daylight time tomorrow.

1577
01:39:00,900 --> 01:39:05,300
You should come back here as well because you never know what we're

1578
01:39:05,300 --> 01:39:07,600
going to do on handmade hero.

1579
01:39:08,300 --> 01:39:08,500
Take it.

1580
01:39:08,500 --> 01:39:09,100
Is everyone

