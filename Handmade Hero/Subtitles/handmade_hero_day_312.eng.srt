1
00:00:00,300 --> 00:00:01,200
Start recording.

2
00:00:02,300 --> 00:00:05,100
Hello everyone and welcome to handmade hero.

3
00:00:05,100 --> 00:00:07,500
The show Rico to complete game live on stream.

4
00:00:08,600 --> 00:00:15,000
We ended yesterday's session with and in fact, I'm kind of embarrassed

5
00:00:15,000 --> 00:00:18,700
to say that I think for the first time, I don't know if it was the

6
00:00:18,700 --> 00:00:22,200
first time but it's certainly one of the only times and one of the

7
00:00:22,200 --> 00:00:24,400
first time for the first time

8
00:00:26,500 --> 00:00:31,800
I I should for one of the few times, let's catch our bets.

9
00:00:32,299 --> 00:00:33,700
I couldn't remember.

10
00:00:33,700 --> 00:00:36,700
I was like, I know, I ended yesterday stream was something that I

11
00:00:36,700 --> 00:00:37,400
wanted to do.

12
00:00:37,900 --> 00:00:39,700
And I could not remember what it was.

13
00:00:39,700 --> 00:00:40,900
It's been a rough day.

14
00:00:40,900 --> 00:00:45,200
I don't mind telling you, so my brain was a little fried.

15
00:00:45,300 --> 00:00:49,400
So I looked back and on the priest dream.

16
00:00:49,400 --> 00:00:53,500
I went back and looked at the very end and thank you to my blow who,

17
00:00:53,500 --> 00:00:54,900
of course keeps

18
00:00:55,200 --> 00:00:58,800
Nicholas notes in the episode guide, I was able to just quickly scan

19
00:00:58,800 --> 00:01:01,300
back and look like oh, right, that's what it was.

20
00:01:01,300 --> 00:01:05,300
It was the ability to manually specify overrides to the sort order in

21
00:01:05,300 --> 00:01:09,600
some convenient way in the user level code that the renderer can then

22
00:01:09,600 --> 00:01:10,100
follow.

23
00:01:10,500 --> 00:01:12,300
So that's what I want to do today.

24
00:01:12,900 --> 00:01:16,900
I sketched out a way we could make it work yesterday and so today, you

25
00:01:16,900 --> 00:01:18,500
know, let's see if we can do it.

26
00:01:19,700 --> 00:01:25,000
Today is day 3, 12 so day, 311 source code is what you want to start.

27
00:01:25,100 --> 00:01:28,700
With today, and that's what I'm working on right now.

28
00:01:28,700 --> 00:01:31,900
So if you if you start with that, you're at the same place in the code

29
00:01:31,900 --> 00:01:32,700
base as I am.

30
00:01:36,000 --> 00:01:36,800
so anyway,

31
00:01:39,300 --> 00:01:40,500
let's go ahead.

32
00:01:44,600 --> 00:01:49,100
And and look at what it is that I am concerned about.

33
00:01:49,400 --> 00:01:53,600
So we got our sorting stuff working and we have the ability to do

34
00:01:53,600 --> 00:01:58,600
specific sort stuff and everything is working basically the way that I

35
00:01:58,600 --> 00:02:02,200
want it to so far for a single region single room.

36
00:02:02,900 --> 00:02:06,200
And so we're going to have to do a little playing around once we get

37
00:02:06,200 --> 00:02:08,900
the Z, correct to make sure that these guys were correctly because

38
00:02:08,900 --> 00:02:13,700
right now, these are a little bit weird because of the fact that there

39
00:02:13,800 --> 00:02:17,100
Still being scaled in proportion, they're not supposed to be.

40
00:02:17,500 --> 00:02:19,900
So we've got, you know, once we fix the Z stuff, we'll have to take a

41
00:02:19,900 --> 00:02:22,700
look at the stairs and possibly tweak, the sort rules a little and

42
00:02:22,700 --> 00:02:23,900
make sure that they're okay.

43
00:02:24,300 --> 00:02:27,100
But everything else is working, roughly the way that I wanted it to

44
00:02:27,100 --> 00:02:33,100
work and we currently have one situation which I would like the

45
00:02:33,100 --> 00:02:35,700
ability to manually override.

46
00:02:35,700 --> 00:02:38,800
And that is that if you take a look at what happens with the head on

47
00:02:38,800 --> 00:02:43,600
top of the body of the hero, you'll notice that because

48
00:02:44,100 --> 00:02:47,700
The body is to, you know, the body is two segments at the moment.

49
00:02:47,700 --> 00:02:51,600
Well, three really, the shadow included and they always sort in the

50
00:02:51,600 --> 00:02:54,600
correct order because I manually specify their order.

51
00:02:54,700 --> 00:02:55,000
Right.

52
00:02:55,000 --> 00:02:58,100
And we added the capability to do that with those aggregate sort keys

53
00:02:58,100 --> 00:02:59,900
and it seems to work pretty well, but

54
00:03:00,000 --> 00:03:01,200
Head is a separate entity.

55
00:03:01,700 --> 00:03:05,000
And so the problem that we have is since the head is a separate

56
00:03:05,000 --> 00:03:08,800
entity, we need some way of saying, hey, this and the body are

57
00:03:08,800 --> 00:03:11,700
supposed to sort in a specific order and we need some way of

58
00:03:11,700 --> 00:03:15,300
specifying that even though we're in two totally separate systems,

59
00:03:15,300 --> 00:03:15,800
right?

60
00:03:15,800 --> 00:03:18,800
So, we're trying to pass this information down to the sort of this

61
00:03:18,800 --> 00:03:21,500
order has no idea what the head and the body are, right?

62
00:03:21,500 --> 00:03:25,100
It just sees a bunch of Sprites so it needs some way of correlating.

63
00:03:27,300 --> 00:03:30,300
Basically a thing when the head goes to render, it needs a way to say

64
00:03:30,300 --> 00:03:32,100
I'm in front of the body somehow.

65
00:03:33,200 --> 00:03:35,000
now, the problem that we have here,

66
00:03:37,200 --> 00:03:39,700
is that if you take a look at this,

67
00:03:44,700 --> 00:03:49,700
if you take a look at how this works, we currently don't have that

68
00:03:49,700 --> 00:03:50,200
ability.

69
00:03:50,400 --> 00:03:53,100
And so when the head moves, you can see that it briefly.

70
00:03:53,100 --> 00:03:56,200
The body will flash through as the head gets far enough back and why

71
00:03:56,300 --> 00:03:59,100
to be behind where the body is, right?

72
00:03:59,400 --> 00:04:01,900
And there's really no way we're ever going to fix that.

73
00:04:01,900 --> 00:04:07,200
It's not a sorting bug in the sense of doing the wrong thing, for the

74
00:04:07,200 --> 00:04:10,400
definition of our sort, it's actually sorting those two things

75
00:04:10,400 --> 00:04:13,900
correctly, but the problem is our semantics.

76
00:04:14,100 --> 00:04:15,000
Desire.

77
00:04:15,000 --> 00:04:18,300
Our artistic desire of how we want those things.

78
00:04:18,300 --> 00:04:22,500
Sorted, simply doesn't match where they where the objects actually are

79
00:04:23,200 --> 00:04:24,400
in the world, right?

80
00:04:24,400 --> 00:04:27,500
Those are why Sprites and the head is actually behind the body once it

81
00:04:27,500 --> 00:04:29,600
kind of moves back like this.

82
00:04:30,400 --> 00:04:32,700
And so at some point it crosses over that boundary.

83
00:04:32,700 --> 00:04:34,900
So we need some way of making that not happen.

84
00:04:36,900 --> 00:04:39,800
And so what I need to do is get that information down to the renderer

85
00:04:39,800 --> 00:04:43,400
during the sort and so that's what I'd like to take a look at doing

86
00:04:44,000 --> 00:04:45,100
now, okay?

87
00:04:46,900 --> 00:04:51,100
So what I suggested and there's a little you know it's not completely

88
00:04:51,700 --> 00:04:56,000
sure thing yet but what I suggested was we could have the renderer

89
00:04:56,000 --> 00:05:01,000
keep a little table that allows you to do some Edge specification in

90
00:05:01,000 --> 00:05:01,300
it.

91
00:05:01,500 --> 00:05:05,000
And in that edge specification you can simply tag things and say you

92
00:05:05,000 --> 00:05:07,900
know what we're going to say that there's some number of special

93
00:05:07,900 --> 00:05:10,900
objects and we're going to tag those objects with some ID.

94
00:05:10,900 --> 00:05:14,200
Like will just say you know this is 0, this is 1 this is 2 this is 3 4

95
00:05:14,200 --> 00:05:16,300
5 whatever right we'll tag the

96
00:05:16,400 --> 00:05:18,900
Mix with those IDs as we write them.

97
00:05:20,400 --> 00:05:24,400
And then they'll go into a table at sort time based on that idea,

98
00:05:24,600 --> 00:05:28,500
then, you know, when the sort needs to sort, it can just go through

99
00:05:28,500 --> 00:05:29,600
the manual edges.

100
00:05:29,700 --> 00:05:33,700
And look at those IDs, pull out, which objects that's actually, those

101
00:05:33,700 --> 00:05:36,100
actually are in the table and go.

102
00:05:36,300 --> 00:05:39,600
Now it's a little hackneyed and and stringy, right?

103
00:05:39,600 --> 00:05:43,100
There's just a lot of bookkeeping there, but my assumption is that

104
00:05:43,100 --> 00:05:47,400
it's probably okay, because we don't have to do it for every Sprite,

105
00:05:47,500 --> 00:05:48,100
right?

106
00:05:48,100 --> 00:05:49,700
Like it only has to happen for

107
00:05:50,300 --> 00:05:53,000
I element objects that have a defined sort order.

108
00:05:53,000 --> 00:05:56,800
So it seems like the kind of thing that's not that critical, right?

109
00:05:56,800 --> 00:05:59,600
It's not going to be do done on thousands of entities.

110
00:06:00,900 --> 00:06:01,500
Every frame.

111
00:06:01,500 --> 00:06:05,900
So I'm hoping that's the kind of thing that doesn't really create that

112
00:06:05,900 --> 00:06:08,000
kind of a problem, if that makes sense.

113
00:06:09,900 --> 00:06:10,500
So yeah.

114
00:06:11,200 --> 00:06:16,500
So if we take a look here, let's see.

115
00:06:20,000 --> 00:06:24,900
So if we take a look here, we have in our sort, Sprite bound.

116
00:06:25,800 --> 00:06:29,500
We had this idea of the debug tag I guess what I'm saying is the debug

117
00:06:29,500 --> 00:06:33,600
tag could actually become, you know, essentially a real tag for all

118
00:06:33,600 --> 00:06:34,500
intents and purposes.

119
00:06:34,900 --> 00:06:35,300
Right?

120
00:06:42,800 --> 00:06:43,800
Oh, and I should mention.

121
00:06:45,300 --> 00:06:48,500
Since we're doing this at a time, when we're creating something, in

122
00:06:48,500 --> 00:06:53,500
the render list, one of these can actually just be an actual offset

123
00:06:53,500 --> 00:06:56,700
can actually Point directly at the Sprite bound.

124
00:06:56,900 --> 00:07:00,900
So really it's only one side of the table that actually needs this.

125
00:07:03,000 --> 00:07:07,800
So the hard part of this is going to be over in World mode, I believe,

126
00:07:07,800 --> 00:07:10,300
anyway, or I and I always do this actually entity.

127
00:07:12,400 --> 00:07:14,100
I seem to never be able to remember that.

128
00:07:14,100 --> 00:07:15,900
We moved this code into a separate file.

129
00:07:17,500 --> 00:07:20,600
So you can see here where we do, our begin aggregate sort key, in our

130
00:07:20,600 --> 00:07:23,700
end aggregate sort key to do our peace rendering.

131
00:07:23,900 --> 00:07:27,400
And by the way, I suppose, one thing that I probably should do is just

132
00:07:27,400 --> 00:07:31,400
say, hey, if the piece count

133
00:07:33,500 --> 00:07:35,600
Is greater than one do this.

134
00:07:36,600 --> 00:07:38,400
But there's really no need to trouble.

135
00:07:38,400 --> 00:07:45,000
The renderer in aggregating, a sort key if there isn't actually more

136
00:07:45,000 --> 00:07:46,100
than one thing.

137
00:07:46,600 --> 00:07:47,200
Right?

138
00:07:47,300 --> 00:07:51,200
So that seems like a pretty same thing to do as well just to prevent

139
00:07:51,200 --> 00:07:54,100
the renderer from having to do any work there.

140
00:07:54,700 --> 00:08:01,100
Anyway, so here we've got our Loop and the problem is when we do this,

141
00:08:01,100 --> 00:08:03,400
end aggregate sort key bit here.

142
00:08:03,400 --> 00:08:10,700
I want to be able to add an edge at this point and I want to be able

143
00:08:10,700 --> 00:08:13,500
to add an edge to the thing that I'm on.

144
00:08:13,500 --> 00:08:15,800
Top of if I'm on top of something special, right?

145
00:08:15,800 --> 00:08:19,500
If I'm if I'm in front of something special and you can see why this

146
00:08:19,500 --> 00:08:22,300
is a little bit tricky because we're just an entity in the world and

147
00:08:22,300 --> 00:08:24,700
we don't really know who our parents.

148
00:08:24,800 --> 00:08:27,900
Our identity is, in this case, like we don't really have a good idea

149
00:08:28,200 --> 00:08:33,200
of who, that might be now, fortunately, because our system is actually

150
00:08:33,200 --> 00:08:33,900
pretty flexible.

151
00:08:33,900 --> 00:08:38,299
At this point, we haven't really pushed on it much, but you'll notice

152
00:08:38,299 --> 00:08:47,000
that we can find brains by ID if we need to write, I believe we have

153
00:08:47,600 --> 00:08:53,400
the capability to look up a brain by ID and let me just verify that

154
00:08:53,400 --> 00:08:53,900
that's true.

155
00:08:53,900 --> 00:08:54,600
But you know in

156
00:08:54,700 --> 00:08:58,900
Same region, we have to put stuff into brains and we have to do that

157
00:08:58,900 --> 00:08:59,300
in.

158
00:09:00,100 --> 00:09:02,400
Quick, you know, quickly.

159
00:09:02,400 --> 00:09:02,500
Right.

160
00:09:02,500 --> 00:09:04,100
We have to do that in a speedy fashion.

161
00:09:05,400 --> 00:09:10,900
So you can see here when we come through and we do know not move

162
00:09:10,900 --> 00:09:11,700
entity.

163
00:09:12,000 --> 00:09:13,200
You can see right here.

164
00:09:15,500 --> 00:09:16,000
There we go.

165
00:09:16,700 --> 00:09:18,500
When we come through here, you can see that.

166
00:09:18,500 --> 00:09:20,100
We have our brain idea.

167
00:09:20,100 --> 00:09:21,300
We do brain idea.

168
00:09:21,300 --> 00:09:23,000
We do a get, or add brain call.

169
00:09:23,100 --> 00:09:25,800
When we do that, get her a break, and call, you can see that we've got

170
00:09:25,800 --> 00:09:30,700
sort of the ability to deal with the brains, at that point.

171
00:09:31,000 --> 00:09:36,100
So what that means is that if we needed to, we certainly could have a

172
00:09:36,100 --> 00:09:40,000
way to look it up in here for a special purpose, sort stuff.

173
00:09:40,300 --> 00:09:42,400
We could certainly make that happen in here.

174
00:09:42,700 --> 00:09:43,900
Now, I don't know that, that's

175
00:09:44,100 --> 00:09:46,700
Best way to do it because since our entity struct like, you know, I

176
00:09:46,700 --> 00:09:50,100
guess what I'm saying, is one way I could do it is right in here.

177
00:09:50,100 --> 00:09:52,700
I could just go grab my my brain.

178
00:09:52,700 --> 00:09:56,700
If I'm ahead, go look at the body and be done, right?

179
00:09:57,100 --> 00:10:01,700
But the way that we sort of set up this system, it feels to me a

180
00:10:01,700 --> 00:10:05,500
little more proper to say, well in the brain code, the idea is to have

181
00:10:05,500 --> 00:10:10,600
a large flexible entity, you know, sort of flat entity format.

182
00:10:10,600 --> 00:10:12,700
Right, that we were working with its giant.

183
00:10:12,800 --> 00:10:13,500
The kind of doesn't

184
00:10:14,000 --> 00:10:16,200
decompress stream sort of thing into it.

185
00:10:17,400 --> 00:10:21,900
And what seems to be a little more sensible to me is just having in

186
00:10:21,900 --> 00:10:26,500
their a thing that's like, who I would be on top of What entity I

187
00:10:26,500 --> 00:10:28,400
would be on top of, or something like that.

188
00:10:28,600 --> 00:10:32,300
Having that value in there, seems like a much saner way to go, right?

189
00:10:32,300 --> 00:10:34,500
That seems like the easiest idea.

190
00:10:35,000 --> 00:10:38,200
So, it seems to me that what we would want to do is inside handmade

191
00:10:38,200 --> 00:10:41,200
brain when we're in the hero code.

192
00:10:41,200 --> 00:10:43,500
You know, if we could just have

193
00:10:47,100 --> 00:10:53,000
some concept in here, that we've got something like, you know,

194
00:10:59,500 --> 00:11:04,200
Some kind of thing like that, where we have manual sort in front of,

195
00:11:04,200 --> 00:11:08,300
and we can just write into their the brain can write into that and

196
00:11:08,300 --> 00:11:10,300
specify something for that.

197
00:11:13,900 --> 00:11:14,600
If that makes sense.

198
00:11:16,500 --> 00:11:19,200
So I think that's probably the same your way to do it.

199
00:11:19,200 --> 00:11:24,200
And so then in here, where we have, you know, the type brain hero,

200
00:11:24,500 --> 00:11:27,600
when it's propped, doing all of our hero processing in the case, where

201
00:11:27,600 --> 00:11:30,500
we know that we have a body and a head.

202
00:11:30,500 --> 00:11:34,000
So you can see like, you know, if we wanted to put one in here, we

203
00:11:34,000 --> 00:11:37,500
could just say like oh okay, you know, if we have a head and a body.

204
00:11:39,900 --> 00:11:40,600
Right.

205
00:11:41,000 --> 00:11:44,100
Then I want to tell the head that it's in front of

206
00:11:46,100 --> 00:11:50,200
whatever the bodies entity ID is, or something like this, right?

207
00:11:52,100 --> 00:11:53,600
and so, you know,

208
00:12:01,200 --> 00:12:02,000
Something.

209
00:12:03,900 --> 00:12:04,700
Like this.

210
00:12:23,100 --> 00:12:24,000
Does this make sense?

211
00:12:24,700 --> 00:12:30,200
So basically when we come through, we would say, okay when we have a

212
00:12:30,200 --> 00:12:34,300
head and a body that are linked together, I know that I always want

213
00:12:34,300 --> 00:12:37,300
the head to be on top of the body and in the future, you know, this

214
00:12:37,300 --> 00:12:38,800
could get even more complicated, right?

215
00:12:38,800 --> 00:12:43,900
It could be like, check that we are attached as well.

216
00:12:44,100 --> 00:12:46,900
Yugi, not floating head.

217
00:12:47,600 --> 00:12:49,900
So, you know, we can also have other criteria here.

218
00:12:49,900 --> 00:12:50,700
We can break this.

219
00:12:50,700 --> 00:12:55,300
If the head is a free floating head, not attached to the body which we

220
00:12:55,300 --> 00:12:56,700
could easily do, right?

221
00:12:56,700 --> 00:13:05,200
So in this case, where we have the head and the body and we assume

222
00:13:05,200 --> 00:13:06,300
they're attached like in the future.

223
00:13:06,300 --> 00:13:10,800
Like I said, if we want support Detachment, then we want to say

224
00:13:10,800 --> 00:13:12,400
reserved, a special sort key.

225
00:13:12,400 --> 00:13:17,300
Somehow that says that the body, when it gets sorted will,

226
00:13:17,600 --> 00:13:18,800
That tag, right?

227
00:13:18,800 --> 00:13:22,300
It'll be able to say this is a special sort key.

228
00:13:22,300 --> 00:13:25,600
That's going to be important that can announces the renderer and then

229
00:13:25,600 --> 00:13:28,000
the head can have that information of.

230
00:13:28,000 --> 00:13:29,900
Oh okay I'm a sort.

231
00:13:30,000 --> 00:13:33,300
I have someone I'm supposed to sort in front of and this is who that

232
00:13:33,300 --> 00:13:34,800
is right?

233
00:13:35,400 --> 00:13:40,300
And what's interesting is these are not really supposed to be stored.

234
00:13:40,600 --> 00:13:41,700
So you know

235
00:13:48,600 --> 00:13:53,500
When we actually start doing our packing and unpacking their, that's

236
00:13:53,500 --> 00:13:57,200
the kind of thing that we would not actually want to store.

237
00:13:57,600 --> 00:14:00,900
And, you know, I suppose we could also do

238
00:14:08,700 --> 00:14:14,200
Something like this and inside the Sim the thing that does the pack

239
00:14:14,200 --> 00:14:14,700
down.

240
00:14:17,200 --> 00:14:20,700
We could make sure that we don't actually like, use them ever.

241
00:14:20,900 --> 00:14:26,600
By when we do pack entity into chunk, where's our unpack?

242
00:14:26,800 --> 00:14:28,500
Where is our unpack?

243
00:14:31,500 --> 00:14:32,000
Region.

244
00:14:34,800 --> 00:14:39,800
When we do our unpack here, which I guess.

245
00:14:41,500 --> 00:14:42,600
Would be here.

246
00:14:42,600 --> 00:14:42,900
Good Ash.

247
00:14:42,900 --> 00:14:45,300
My DD region, some region.

248
00:14:45,400 --> 00:14:46,800
This could be the decompression step.

249
00:14:47,200 --> 00:14:50,900
So right here, you know we can

250
00:14:53,200 --> 00:14:57,800
Zero these out just to enforce the fact that they can't persist across

251
00:14:57,800 --> 00:14:59,600
a frame, right?

252
00:14:59,600 --> 00:14:59,800
Which I

253
00:15:00,000 --> 00:15:01,000
I really want them to.

254
00:15:05,100 --> 00:15:06,300
Why did I type that wrong?

255
00:15:06,400 --> 00:15:07,100
I don't know.

256
00:15:10,100 --> 00:15:12,800
All right, so let's keep going here.

257
00:15:13,200 --> 00:15:19,200
So what this means is that the brain, even though it really doesn't

258
00:15:19,200 --> 00:15:20,400
need it for anything else.

259
00:15:20,400 --> 00:15:25,600
Yet is going to have is going to need a way to talk to the render

260
00:15:25,600 --> 00:15:31,000
group because it now has something to say before it didn't, right?

261
00:15:31,000 --> 00:15:34,800
So before those two things didn't have to be connected in any way so

262
00:15:34,800 --> 00:15:39,500
when I called execute brain, I wasn't actually ever passing a render

263
00:15:39,500 --> 00:15:39,700
group.

264
00:15:39,900 --> 00:15:42,800
And even though I could have, right, we're at a point in the code

265
00:15:42,800 --> 00:15:45,900
where it's configured up and proper, so it's not a problem.

266
00:15:45,900 --> 00:15:49,900
But I just generally don't pass things if they're not needed, right?

267
00:15:50,000 --> 00:15:52,900
So I'll go ahead and pass it now that it is needed.

268
00:15:54,300 --> 00:15:58,400
And yeah, I guess I'll pass it after the input seems like a reasonable

269
00:15:58,400 --> 00:16:02,500
place and I'll say that this is the render group.

270
00:16:06,100 --> 00:16:08,600
And reserved sort key.

271
00:16:08,600 --> 00:16:09,600
We haven't already yet.

272
00:16:09,600 --> 00:16:10,800
This is of course spelled wrong.

273
00:16:11,900 --> 00:16:15,700
And so really what we need to do now is just have a notion of that

274
00:16:15,700 --> 00:16:20,600
Reserve sort key somehow which will deal with in a second.

275
00:16:21,500 --> 00:16:24,300
So then when I come through here, you know, how would I use this?

276
00:16:24,300 --> 00:16:27,100
And you'll notice I'm kind of doing usage code in the order in which I

277
00:16:27,100 --> 00:16:30,200
think I understand it best from best.

278
00:16:30,200 --> 00:16:33,200
At least course, I'm always in the wrong file should just move this it

279
00:16:33,200 --> 00:16:33,600
back there.

280
00:16:33,600 --> 00:16:34,500
I always think it's there.

281
00:16:34,700 --> 00:16:35,100
Some reason.

282
00:16:38,100 --> 00:16:42,000
So in here, you know, when we do and aggregate sort key,

283
00:16:44,900 --> 00:16:47,200
I'm trying to think of where I really want to do this.

284
00:16:47,500 --> 00:16:50,100
I think what I want to do is say, well, whatever.

285
00:16:50,100 --> 00:16:52,800
The last piece index is that, we do.

286
00:16:53,700 --> 00:17:00,700
I want to, you know, they're going to render sort of in, in that in

287
00:17:00,700 --> 00:17:01,300
that order.

288
00:17:01,300 --> 00:17:04,300
And so let me let me just double-check this here.

289
00:17:05,200 --> 00:17:09,800
So if I go to world mode and I go to Hero,

290
00:17:11,700 --> 00:17:12,800
Or add player rather.

291
00:17:14,599 --> 00:17:19,599
So in add player, you can see that we do Cape torso Shadow and so like

292
00:17:20,000 --> 00:17:26,800
0 is the is the most sort of the most important part of the entity.

293
00:17:27,500 --> 00:17:32,300
And in fact, if we kind of look down here at the pieces, we could even

294
00:17:32,300 --> 00:17:32,800
note

295
00:17:34,700 --> 00:17:37,800
Hey, zero is the on top piece.

296
00:17:41,300 --> 00:17:41,800
so,

297
00:17:44,700 --> 00:17:46,800
And is the on bottom.

298
00:17:49,400 --> 00:17:57,100
I so we know that the first one we push is the one that we would want

299
00:17:57,100 --> 00:17:59,800
to make a specification about as

300
00:18:00,000 --> 00:18:06,000
Our as being if something was on top of it, right?

301
00:18:07,200 --> 00:18:10,600
So that's the one that we would want to associate with the reserved

302
00:18:10,600 --> 00:18:11,400
sort key.

303
00:18:11,800 --> 00:18:13,200
And then if

304
00:18:14,700 --> 00:18:18,200
We're talking about the person who wants to be on top of another

305
00:18:18,200 --> 00:18:18,700
thing.

306
00:18:19,600 --> 00:18:24,200
Then that one presumably is just going to be based on the aggregate

307
00:18:24,200 --> 00:18:26,000
sort key, right?

308
00:18:27,500 --> 00:18:31,100
But I guess in either case it's it's really the zero with person.

309
00:18:31,100 --> 00:18:33,700
The question is just did we aggregate the sort key or not?

310
00:18:34,000 --> 00:18:37,200
Now one thing that's annoying is, like I said, I feel like we don't

311
00:18:37,200 --> 00:18:41,300
want to force aggregation in the case where there's only one thing.

312
00:18:43,400 --> 00:18:47,900
But the problem is, this would kind of be the natural place to put the

313
00:18:48,800 --> 00:18:50,600
piece of information that I'm talking about.

314
00:18:50,700 --> 00:18:56,000
It would seem so yeah.

315
00:18:59,800 --> 00:19:02,000
Not really sure what I want to do about that.

316
00:19:20,500 --> 00:19:21,000
Nice.

317
00:19:21,000 --> 00:19:21,500
Eh.

318
00:19:32,500 --> 00:19:33,100
Well.

319
00:19:42,200 --> 00:19:46,600
I guess, let me look to see what actually is going to happen inside

320
00:19:46,600 --> 00:19:51,200
the render, group code for this to work properly, and maybe by

321
00:19:51,200 --> 00:19:53,400
switching to the other side of the problem.

322
00:19:53,400 --> 00:19:57,400
It will become clear how that wants to flow down and then that will

323
00:19:57,400 --> 00:19:58,900
specify the other side for me.

324
00:20:00,100 --> 00:20:02,600
So I'm just trying to like ping-pong back and forth between the two

325
00:20:02,600 --> 00:20:06,600
sides of the problem and to make them meet in the middle, in a good in

326
00:20:06,600 --> 00:20:07,200
a good place.

327
00:20:15,700 --> 00:20:18,600
all right, so when we do the Sprite graph here,

328
00:20:20,600 --> 00:20:23,900
So this is the code for build Sprite graph, obviously it goes through

329
00:20:23,900 --> 00:20:25,900
and it does all the crib checking.

330
00:20:26,500 --> 00:20:30,200
And at this point after all, the grid checking is done.

331
00:20:30,200 --> 00:20:34,900
We have edges between all of the nodes that we know we want edges

332
00:20:34,900 --> 00:20:36,400
between right.

333
00:20:37,400 --> 00:20:42,600
But now what I need to do is add some additional edges in that Force

334
00:20:42,600 --> 00:20:44,400
sorts in a particular order.

335
00:20:45,800 --> 00:20:49,900
And so yeah, I guess the question.

336
00:20:50,100 --> 00:20:50,700
In is.

337
00:20:59,600 --> 00:20:59,700
The.

338
00:21:00,000 --> 00:21:00,600
Good news.

339
00:21:00,600 --> 00:21:02,500
How do I do that?

340
00:21:09,500 --> 00:21:10,500
In a clean way.

341
00:21:10,700 --> 00:21:15,200
I think the answer is that since there are a low number of manually

342
00:21:15,200 --> 00:21:19,200
specified edges, what we probably would want to do is let this create

343
00:21:19,200 --> 00:21:21,100
all the edges exactly as it has.

344
00:21:21,900 --> 00:21:25,500
And then, you know in here we would probably want to do some kind of a

345
00:21:25,500 --> 00:21:26,300
for I Loop.

346
00:21:26,300 --> 00:21:26,800
Right?

347
00:21:27,400 --> 00:21:29,100
Where we said something like

348
00:21:38,900 --> 00:21:39,300
oh,

349
00:21:43,200 --> 00:21:43,900
wait a minute.

350
00:21:45,300 --> 00:21:47,700
Am I making this more complicated than it needs to be?

351
00:21:55,000 --> 00:21:56,200
You know, I think I am.

352
00:22:02,100 --> 00:22:06,200
I think I might be drastically over complicating this.

353
00:22:06,200 --> 00:22:07,400
Now that I think about it.

354
00:22:07,800 --> 00:22:14,700
So here is a question for you suppose that we just look at is in front

355
00:22:14,700 --> 00:22:15,000
of.

356
00:22:15,200 --> 00:22:19,600
We know that we have a Sprite bound a in a Sprite bound be if we

357
00:22:19,600 --> 00:22:23,800
wanted to couldn't we just do something like

358
00:22:25,400 --> 00:22:32,200
inside the sort Sprite bound, there's like, I don't know, some kind of

359
00:22:32,200 --> 00:22:32,800
a

360
00:22:41,400 --> 00:22:46,800
sort code or something where I just say like, okay I've got some of

361
00:22:46,800 --> 00:22:47,600
these

362
00:22:49,900 --> 00:22:54,300
I could even have it be a pointer probably or an offset.

363
00:22:56,400 --> 00:22:58,000
Let me just explain to you what I'm thinking.

364
00:22:58,200 --> 00:23:01,100
I don't know why I didn't think of this before.

365
00:23:02,100 --> 00:23:03,100
Is there something wrong with that?

366
00:23:03,100 --> 00:23:04,400
It seems so obvious.

367
00:23:04,400 --> 00:23:05,600
I'm not sure what I'm thinking before.

368
00:23:06,000 --> 00:23:08,600
All right, so basically we're going to end up testing

369
00:23:09,900 --> 00:23:12,900
The head against the body, if they overlap, we're going to test them.

370
00:23:13,000 --> 00:23:15,100
If they don't overlap, we don't care, right?

371
00:23:15,100 --> 00:23:18,000
So if the heads over here and the bodies over here and nobody cares,

372
00:23:18,000 --> 00:23:20,700
we're never going to need to know who's behind who because they're

373
00:23:20,700 --> 00:23:22,300
never going to need to get sort of relative to each other.

374
00:23:22,300 --> 00:23:25,000
So, we know that we're in this scenario.

375
00:23:25,100 --> 00:23:27,600
So we know that we're calling is in front of

376
00:23:29,600 --> 00:23:30,200
Right?

377
00:23:30,400 --> 00:23:32,100
And we have both of these sort keys.

378
00:23:32,200 --> 00:23:37,000
So why don't we just put something in the sort key where you can tag

379
00:23:37,000 --> 00:23:41,400
each of these with a always behind always in front code where if those

380
00:23:41,400 --> 00:23:43,500
match up, that's the sort.

381
00:23:45,200 --> 00:23:50,000
In fact the simplest version of this right is is real real simple.

382
00:23:52,100 --> 00:23:57,900
You can imagine saying like Okay you know, I've got a you 3016, maybe

383
00:23:57,900 --> 00:23:59,200
another you 16 here.

384
00:24:00,000 --> 00:24:06,700
Like this where it's like always in front of and always behind, right?

385
00:24:07,800 --> 00:24:11,200
And you could just do something here where you just say like, okay if

386
00:24:11,200 --> 00:24:15,800
these two things match on you, if my always in front of matches,

387
00:24:15,800 --> 00:24:17,500
you're always behind

388
00:24:21,700 --> 00:24:22,200
We're done.

389
00:24:22,500 --> 00:24:23,600
So, for example.

390
00:24:34,000 --> 00:24:37,800
We could just say be 32 results.

391
00:24:39,600 --> 00:24:40,100
If

392
00:24:54,700 --> 00:24:57,800
if a is always in front of

393
00:24:59,200 --> 00:25:00,400
Is greater than zero.

394
00:25:01,600 --> 00:25:04,600
right, and a

395
00:25:06,200 --> 00:25:11,700
Always in front of equals be always in front of then the result is

396
00:25:11,700 --> 00:25:12,000
true.

397
00:25:12,100 --> 00:25:13,300
Otherwise we do the comparison.

398
00:25:15,200 --> 00:25:15,700
Right.

399
00:25:17,400 --> 00:25:23,200
So in this case and I guess that needs to be inside Sprite bound, so

400
00:25:23,200 --> 00:25:26,900
technically, that's that's here, right?

401
00:25:28,500 --> 00:25:34,800
So, basically, that's saying you can have 65,000 pairs of things that

402
00:25:34,800 --> 00:25:37,900
can have a sort rule between them, you just, and you can't have more

403
00:25:37,900 --> 00:25:38,700
than one per thing.

404
00:25:38,700 --> 00:25:42,300
Now, we could have more here, we could, you know, make some more if we

405
00:25:42,300 --> 00:25:44,800
wanted to, but that we'll see if that gets out how far that gets

406
00:25:45,300 --> 00:25:49,300
But if you take a look at how this works for you say, oh, okay, now we

407
00:25:49,300 --> 00:25:53,300
just say, well, when you render the head just set, it's always in

408
00:25:53,300 --> 00:25:54,800
front of, to be some code.

409
00:25:54,800 --> 00:25:59,300
And the always behind one gets the same code, that's it.

410
00:26:05,900 --> 00:26:07,500
I think that's the entirety of it, right?

411
00:26:07,500 --> 00:26:12,000
I mean, is there I think that might literally be the the complete

412
00:26:12,400 --> 00:26:13,600
solution to the problem?

413
00:26:15,800 --> 00:26:18,600
And it's a little less flexible than being able to manually specify

414
00:26:18,600 --> 00:26:19,100
edges.

415
00:26:19,500 --> 00:26:25,600
But I mean, the amount of complexity savings you get from that seems

416
00:26:25,700 --> 00:26:26,800
crazy huge.

417
00:26:27,700 --> 00:26:33,300
So now really all that happens is you would just say, you know, always

418
00:26:33,300 --> 00:26:37,100
in front of always behind

419
00:26:43,200 --> 00:26:43,500
Oops.

420
00:26:51,500 --> 00:26:54,500
Now, it's trivial you just say, reserve, sarki.

421
00:26:54,500 --> 00:26:59,000
You get one back, you render as you normally would and you just have

422
00:26:59,000 --> 00:26:59,800
to specify.

423
00:27:00,900 --> 00:27:05,900
That always behind and always in front of and, and that's it.

424
00:27:06,400 --> 00:27:10,500
So that seems like, way better than what I was saying.

425
00:27:12,600 --> 00:27:13,500
So, yeah.

426
00:27:13,500 --> 00:27:16,400
I think I may have gone down a stupid path there.

427
00:27:16,400 --> 00:27:19,400
I was, definitely, I was definitely making a system.

428
00:27:19,400 --> 00:27:22,800
That was a lot more than what I think I would have needed.

429
00:27:23,300 --> 00:27:24,600
So I'm glad I thought of that.

430
00:27:24,700 --> 00:27:27,300
I don't know why I didn't think of it earlier.

431
00:27:27,800 --> 00:27:30,000
Anyway, so if we go out to play,

432
00:27:30,200 --> 00:27:30,800
Form.

433
00:27:31,200 --> 00:27:36,300
Since this operates at sort level, we just have a thing here which you

434
00:27:36,300 --> 00:27:37,900
know is is going to be

435
00:27:40,100 --> 00:27:41,400
Emanuel sort key.

436
00:27:42,700 --> 00:27:48,500
Count or something like this or next available.

437
00:27:50,100 --> 00:27:50,600
Let's see.

438
00:27:52,100 --> 00:27:55,000
Last used manual, sort key something like that.

439
00:27:56,000 --> 00:28:00,600
And so reserved sort key is like a really trivial function now that

440
00:28:00,600 --> 00:28:04,900
doesn't do anything even remotely complicated.

441
00:28:05,100 --> 00:28:06,300
It's just going to do.

442
00:28:13,200 --> 00:28:16,600
You know, assert, I get the commands out here though.

443
00:28:20,900 --> 00:28:22,900
It's going to say, all right, you know.

444
00:28:26,600 --> 00:28:28,000
Whatever this guy was.

445
00:28:32,300 --> 00:28:41,500
Assert that the last used manual sort key is less than 16 maximum.

446
00:28:45,600 --> 00:28:46,700
We have that to find.

447
00:28:58,400 --> 00:28:58,900
There it is.

448
00:28:59,600 --> 00:29:01,000
So it doesn't look like we ever did.

449
00:29:02,500 --> 00:29:06,400
So I'm going to say u16 Maximum 6, I thought 35

450
00:29:09,800 --> 00:29:12,100
As long as there's room, right?

451
00:29:12,100 --> 00:29:17,400
As long as I'm not going to overflow then last use manual.

452
00:29:17,400 --> 00:29:22,500
Sort key is is all good, assuming that it starts at zero.

453
00:29:22,700 --> 00:29:24,800
I want to use the pre ink.

454
00:29:24,800 --> 00:29:27,700
I want to use the post incremented value of it.

455
00:29:27,700 --> 00:29:32,900
So the first one I give out will be 10 means don't bother doing this

456
00:29:32,900 --> 00:29:33,500
sort, right?

457
00:29:33,500 --> 00:29:35,400
Don't don't do a more complex sort on this guy.

458
00:29:36,100 --> 00:29:39,000
So I would say the result,

459
00:29:39,300 --> 00:29:44,600
All's the u16 of that and then I returned it.

460
00:29:44,900 --> 00:29:51,100
So now I have allocated those, I'm good to go and I just have to

461
00:29:51,100 --> 00:29:59,800
change these to do like always front of always kind and

462
00:30:00,900 --> 00:30:02,000
The corresponding.

463
00:30:03,100 --> 00:30:04,300
Inside the Sim region.

464
00:30:14,900 --> 00:30:18,900
And off we go now if that's good Define.

465
00:30:21,500 --> 00:30:24,600
So now, I think we're pretty much good to go.

466
00:30:24,900 --> 00:30:28,100
We just have to actually use this.

467
00:30:28,700 --> 00:30:29,300
Let's see here.

468
00:30:29,700 --> 00:30:31,800
It's in front of return result.

469
00:30:33,100 --> 00:30:35,000
Thank you for catching that, mister compiler.

470
00:30:37,400 --> 00:30:39,200
I always blame the compiler when do something wrong.

471
00:30:39,200 --> 00:30:41,100
So I feel like it's good to thank the compiler.

472
00:30:41,100 --> 00:30:42,100
When does something right?

473
00:30:45,700 --> 00:30:47,200
Alright, so now we're all good.

474
00:30:47,400 --> 00:30:51,400
We just have to actually put that value in somehow, right?

475
00:30:51,400 --> 00:30:55,500
We have to get that into the actual renderer somehow.

476
00:30:56,400 --> 00:31:00,100
And so when we're doing that, what we want to do here is I think when

477
00:31:00,100 --> 00:31:04,100
we do these push bitmaps, we want to make sure

478
00:31:09,000 --> 00:31:10,700
That somehow that information flows.

479
00:31:10,700 --> 00:31:13,000
Now I believe the object transform.

480
00:31:13,800 --> 00:31:15,900
This set here might be the right place to do it.

481
00:31:16,500 --> 00:31:20,100
So entity transform always in front of maybe equals entity, always in

482
00:31:20,100 --> 00:31:26,400
front of and entity transform always behind maybe equals entity.

483
00:31:27,600 --> 00:31:29,700
You know, always behind something like this.

484
00:31:30,300 --> 00:31:33,100
And what I need to do there is go like, okay.

485
00:31:34,900 --> 00:31:38,000
The object transform since that's the thing that I'm passing down

486
00:31:38,000 --> 00:31:39,300
inside render group.

487
00:31:39,600 --> 00:31:42,100
I just need a place where those are going to live and then I'll just

488
00:31:42,100 --> 00:31:43,900
copy them into the sort key as we go.

489
00:31:45,000 --> 00:31:49,100
So here's that object, transform always in front of

490
00:31:53,400 --> 00:31:57,700
Always behind, and you can see that those things kind of form a pair

491
00:31:57,700 --> 00:31:58,400
all the time.

492
00:31:59,000 --> 00:32:03,300
So, the other thing that does kind of seem possibly likely is that

493
00:32:03,300 --> 00:32:05,400
they should be bundled, right?

494
00:32:06,300 --> 00:32:12,500
So, it's possible that it should be something like manual sort pair.

495
00:32:18,000 --> 00:32:19,600
Or manual sort.

496
00:32:22,000 --> 00:32:23,100
Manual sort key.

497
00:32:23,100 --> 00:32:23,600
I don't know.

498
00:32:26,800 --> 00:32:27,700
Something like that.

499
00:32:32,800 --> 00:32:33,300
Yeah.

500
00:32:37,400 --> 00:32:41,100
So at that point, we could also say that inside the renderer instead

501
00:32:41,100 --> 00:32:44,600
of those, you know, maybe we've got a maybe I can stick that in here.

502
00:32:52,500 --> 00:32:57,800
And now every time for this object transform inside the render group,

503
00:32:59,100 --> 00:32:59,800
when we do,

504
00:33:00,300 --> 00:33:01,000
There's what is there at?

505
00:33:01,000 --> 00:33:04,000
There's like a default one in here, somewhere, or I'm not sure what

506
00:33:04,000 --> 00:33:05,200
that actually does.

507
00:33:05,500 --> 00:33:07,700
Default, there we go.

508
00:33:08,700 --> 00:33:11,300
So in these cases, they'll just get cleared to 0, which is what we

509
00:33:11,300 --> 00:33:11,800
want.

510
00:33:12,500 --> 00:33:17,600
And then in when we actually go to push, somebody on here, where we do

511
00:33:17,600 --> 00:33:20,000
our, you know, our sort key stuff.

512
00:33:20,000 --> 00:33:26,600
We do sort qsort key, whenever these sort keys are being made, which I

513
00:33:26,600 --> 00:33:29,800
believe, don't, we have a get sort key for computes?

514
00:33:30,000 --> 00:33:30,500
What key?

515
00:33:31,100 --> 00:33:33,000
That's okay.

516
00:33:33,100 --> 00:33:34,200
I don't know what that is.

517
00:33:39,600 --> 00:33:40,400
That was pretty funny.

518
00:33:41,400 --> 00:33:43,800
We have a thing that does the sort Keys here somewhere?

519
00:33:44,200 --> 00:33:44,900
Where is it?

520
00:33:46,400 --> 00:33:48,500
Get Bound for there, it is.

521
00:33:50,400 --> 00:33:54,700
So this guy right here, when it computes the Sprite bounds, now it can

522
00:33:54,700 --> 00:33:57,700
also take whatever the one that was in the object transform and just

523
00:33:57,700 --> 00:33:59,100
copy it, right?

524
00:33:59,100 --> 00:34:02,100
So, the spray found manual.

525
00:34:04,000 --> 00:34:06,000
Is going to equal the object transforms.

526
00:34:07,900 --> 00:34:08,600
Manuel.

527
00:34:11,100 --> 00:34:11,699
I call it.

528
00:34:15,500 --> 00:34:16,199
Sort.

529
00:34:18,500 --> 00:34:26,000
okay, so yeah, I think also, we could probably get rid of sort bias at

530
00:34:26,000 --> 00:34:28,100
that part and use,

531
00:34:29,600 --> 00:34:32,100
This manual sort key for that.

532
00:34:32,100 --> 00:34:33,199
Okay, that that separate though.

533
00:34:34,100 --> 00:34:38,800
Anyway, so, yeah, now that we have that happening, the manual sort

534
00:34:38,800 --> 00:34:39,300
just works.

535
00:34:39,300 --> 00:34:42,100
I think at this point because that'll get copied in and set.

536
00:34:43,000 --> 00:34:44,900
So, now we just have to go through and make sure I didn't mess

537
00:34:44,900 --> 00:34:46,500
anything up, which I probably did.

538
00:34:47,199 --> 00:34:48,100
But, let's find out.

539
00:34:48,199 --> 00:34:48,600
Okay.

540
00:34:55,000 --> 00:34:57,300
Oops, did I make those two big?

541
00:34:58,100 --> 00:34:59,300
And I wonder if I could do.

542
00:35:07,000 --> 00:35:07,800
Just this.

543
00:35:14,000 --> 00:35:14,500
Okay.

544
00:35:18,900 --> 00:35:24,500
Yeah, and I need that to actually be sort of visible to everybody so

545
00:35:24,500 --> 00:35:30,400
that may have to be something kind of moves.

546
00:35:31,700 --> 00:35:32,600
I don't know, maybe

547
00:35:34,000 --> 00:35:34,400
Here.

548
00:35:37,500 --> 00:35:44,800
I really hate this aspect of c and C++, it's the worst other

549
00:35:44,800 --> 00:35:45,300
languages.

550
00:35:45,300 --> 00:35:48,400
I, well, I don't know, maybe some do, but it's just stupid that you

551
00:35:48,400 --> 00:35:52,200
have to care where things go files should be for your benefit, not for

552
00:35:52,200 --> 00:35:56,000
the compilers benefit, you know, I should be able to put the sort key

553
00:35:56,000 --> 00:35:59,300
where it makes most linguistic sense for me to have it and look at it.

554
00:36:00,800 --> 00:36:02,300
And that is not what happens at all.

555
00:36:12,900 --> 00:36:14,000
Okay.

556
00:36:20,800 --> 00:36:21,800
So yeah.

557
00:36:31,400 --> 00:36:33,500
I think we're just about done.

558
00:36:40,600 --> 00:36:41,200
It's just manual.

559
00:36:41,200 --> 00:36:41,800
In that case.

560
00:36:45,400 --> 00:36:49,500
All right, so now in theory, these things are getting marked.

561
00:36:49,700 --> 00:36:52,900
We did do a bunch of changes there, so this is probably not quite

562
00:36:52,900 --> 00:36:53,800
correct.

563
00:36:54,600 --> 00:36:58,900
But hey, we should be able to now, go do some debugging, I don't know

564
00:36:58,900 --> 00:36:59,500
if I can.

565
00:37:00,500 --> 00:37:02,200
Well, I think I might be able to.

566
00:37:02,200 --> 00:37:05,100
I think I just have to trap or there we go.

567
00:37:05,400 --> 00:37:08,200
I'm like, we got to get these sorting in the wrong order first, so I

568
00:37:08,200 --> 00:37:09,200
can watch it happen.

569
00:37:10,000 --> 00:37:11,600
But yeah, that's what we need right there.

570
00:37:11,900 --> 00:37:14,600
So, the idea is that shouldn't really happen.

571
00:37:14,600 --> 00:37:15,100
So,

572
00:37:15,200 --> 00:37:19,100
I want the ability to force the head to still be on top, even in that

573
00:37:19,100 --> 00:37:20,800
situation, right?

574
00:37:21,000 --> 00:37:21,900
That's the goal here.

575
00:37:23,800 --> 00:37:24,200
Okay?

576
00:37:24,700 --> 00:37:32,300
So let's take a look at the code in handmade entity.

577
00:37:32,400 --> 00:37:34,100
Where's where's that?

578
00:37:36,700 --> 00:37:40,100
Or actually I guess in the brain first and handmade brain.

579
00:37:40,800 --> 00:37:44,900
Let's see whether we're setting this correctly in the first place

580
00:37:44,900 --> 00:37:48,000
because that's the first step of this process is this guy.

581
00:37:48,100 --> 00:37:52,900
When he comes through here and decides that he's got both a head and a

582
00:37:52,900 --> 00:37:59,000
body, he's got to set the sort key and is going to sort the always

583
00:37:59,000 --> 00:38:01,700
behind and always in front of

584
00:38:03,800 --> 00:38:04,600
Keys.

585
00:38:06,700 --> 00:38:07,600
At this point.

586
00:38:07,700 --> 00:38:12,500
All right, so we go in here to reserve and there.

587
00:38:12,500 --> 00:38:15,500
It's this should be zero because it's the only person ever calls this,

588
00:38:15,700 --> 00:38:16,200
right?

589
00:38:17,000 --> 00:38:20,700
So the results should be one and it is so off we go.

590
00:38:23,000 --> 00:38:27,100
Then we do a bunch of stuff and really I guess the next thing that I

591
00:38:27,100 --> 00:38:31,800
wanted to see was in the actual sort, I want to see if we ever hit

592
00:38:31,800 --> 00:38:37,200
that case or if I, if I never actually do.

593
00:38:38,000 --> 00:38:40,500
So let's take a look at is in front of here.

594
00:38:43,800 --> 00:38:44,700
And I want to see.

595
00:38:46,200 --> 00:38:47,000
If we get here.

596
00:38:54,100 --> 00:38:56,000
So, the answer is we're not getting there.

597
00:38:57,400 --> 00:38:58,700
All right, so,

598
00:39:00,900 --> 00:39:02,300
Let's test another thing.

599
00:39:03,400 --> 00:39:05,300
I guess I could have used livecode reloading us.

600
00:39:05,300 --> 00:39:08,900
I'm not sure why I probably shouldn't have closed.

601
00:39:08,900 --> 00:39:10,500
It's a force of habit.

602
00:39:12,200 --> 00:39:18,600
So when I'm in the entity code and I set this energy transfer manual,

603
00:39:18,600 --> 00:39:24,000
sort here, I'm going to do a thing here to say well alright in the

604
00:39:24,000 --> 00:39:28,400
case where the manual sort always behind

605
00:39:31,300 --> 00:39:32,500
Is not equal to 0.

606
00:39:42,100 --> 00:39:45,200
This way I can zero in on just entities that have that set which

607
00:39:45,200 --> 00:39:47,100
should only be two of them, right?

608
00:39:49,700 --> 00:39:53,500
Okay, so now we should go into entity.

609
00:39:54,700 --> 00:39:55,200
Boop.

610
00:40:06,500 --> 00:40:06,900
Okay.

611
00:40:08,300 --> 00:40:12,400
So at least now I can verify that we are in fact passing some of it

612
00:40:12,400 --> 00:40:13,000
down.

613
00:40:14,800 --> 00:40:20,300
And so manual sort says, always in front of is one, right?

614
00:40:20,300 --> 00:40:21,500
That's what's going on here?

615
00:40:23,100 --> 00:40:24,900
So presumably this entity.

616
00:40:26,100 --> 00:40:30,100
If it's always in front of number one, this must be the head.

617
00:40:31,300 --> 00:40:35,400
And, you know, we've got brain slot 0 on brain id-1.

618
00:40:35,400 --> 00:40:38,900
Let's see if that corresponds to what we think it should be.

619
00:40:45,900 --> 00:40:46,600
Zero.

620
00:40:55,600 --> 00:40:55,900
Out.

621
00:40:55,900 --> 00:40:57,900
Sorry it's typing index, zero, zero zero.

622
00:40:57,900 --> 00:40:58,300
Yes.

623
00:40:58,300 --> 00:40:59,300
So that's correct.

624
00:40:59,900 --> 00:41:05,300
That is the head so that got set properly when we come through here

625
00:41:06,200 --> 00:41:09,200
let's take a quick look at what happens when we actually push.

626
00:41:09,200 --> 00:41:11,700
The bitmap here goes the push.

627
00:41:14,100 --> 00:41:14,400
That's right.

628
00:41:14,500 --> 00:41:15,100
Get it.

629
00:41:16,300 --> 00:41:19,500
We're going to push it on.

630
00:41:21,000 --> 00:41:22,100
Get the dimensions.

631
00:41:23,100 --> 00:41:23,800
Finally, push it.

632
00:41:23,800 --> 00:41:31,000
Push it as a render element here comes the push and we're going to I

633
00:41:31,000 --> 00:41:33,700
guess it's that sort key that I need to look at.

634
00:41:33,700 --> 00:41:34,600
Does it have it in there?

635
00:41:36,100 --> 00:41:36,800
So it did.

636
00:41:37,500 --> 00:41:39,600
So the sort key is set correctly now

637
00:41:42,800 --> 00:41:43,300
Right.

638
00:41:50,000 --> 00:41:51,200
At least on that guy.

639
00:41:51,500 --> 00:41:52,800
Let's see about the other guy.

640
00:41:53,000 --> 00:41:54,700
This one should be always behind.

641
00:41:55,700 --> 00:41:57,000
Yep, always behind one.

642
00:41:59,100 --> 00:41:59,800
So,

643
00:42:00,000 --> 00:42:00,600
Current.

644
00:42:00,600 --> 00:42:01,000
Yeah.

645
00:42:09,500 --> 00:42:10,600
So, here we go.

646
00:42:11,400 --> 00:42:16,000
I want to push bitmap and

647
00:42:24,500 --> 00:42:29,600
alright, so I've I've determined that I do.

648
00:42:29,600 --> 00:42:37,000
In fact have those values set properly so going into the sort in

649
00:42:37,000 --> 00:42:40,400
theory we have the correct data in theory anyway.

650
00:42:46,600 --> 00:42:48,200
So it looks like I just have a typo there.

651
00:42:48,600 --> 00:42:49,900
Maybe that's our only bug.

652
00:42:50,200 --> 00:42:51,400
Wouldn't that be nice?

653
00:42:53,300 --> 00:42:57,400
This is just supposed to be always behind, right?

654
00:42:59,700 --> 00:43:03,300
If that's our only bug, that will be a very happy camper.

655
00:43:03,300 --> 00:43:04,200
In fact,

656
00:43:05,300 --> 00:43:07,700
nope, not our only bug.

657
00:43:09,200 --> 00:43:10,900
Okay, stay there, mr.

658
00:43:10,900 --> 00:43:11,300
Familiar.

659
00:43:11,400 --> 00:43:11,900
Okay, there we go.

660
00:43:15,300 --> 00:43:17,100
All right, so going into the sort.

661
00:43:21,600 --> 00:43:25,500
I guess what I could do is see whether I'm ever hitting

662
00:43:29,300 --> 00:43:30,800
This case separately.

663
00:43:36,000 --> 00:43:37,600
I guess I could do like,

664
00:43:45,500 --> 00:43:46,100
Right?

665
00:43:47,000 --> 00:43:51,200
So this way I could check to see if either of them.

666
00:44:00,800 --> 00:44:01,400
Oh, you know what?

667
00:44:01,400 --> 00:44:05,600
I just realized, I have to check it both ways.

668
00:44:07,700 --> 00:44:08,400
Don't I

669
00:44:10,100 --> 00:44:10,800
so,

670
00:44:12,200 --> 00:44:16,900
I would have to say if a is always in front of be and I'd also have to

671
00:44:16,900 --> 00:44:19,600
say if B was always in front of a

672
00:44:20,900 --> 00:44:21,500
right.

673
00:44:25,000 --> 00:44:26,000
Like that kind of thing.

674
00:44:26,600 --> 00:44:28,300
So it's really more like this.

675
00:44:43,900 --> 00:44:45,100
I think that's more.

676
00:44:52,900 --> 00:44:53,800
We're looking for.

677
00:44:54,100 --> 00:44:55,100
So I don't have to say, all right?

678
00:44:55,100 --> 00:44:59,800
When I compare these two things, if I have a condition where I

679
00:45:00,900 --> 00:45:01,700
I know that.

680
00:45:08,300 --> 00:45:09,800
See, I also need to know whether there.

681
00:45:09,800 --> 00:45:12,900
I wish there was a way to make it so that they never could be 0.

682
00:45:17,100 --> 00:45:20,700
I guess I could just make it so that they never do equal.

683
00:45:29,300 --> 00:45:31,300
so, since I'm doing this comparison,

684
00:45:33,000 --> 00:45:34,000
I could just make it.

685
00:45:34,000 --> 00:45:38,400
So the default case instead of being zero is a different case where

686
00:45:38,400 --> 00:45:41,200
they're not always going to be equal.

687
00:45:41,700 --> 00:45:42,700
That's kind of complicated.

688
00:45:42,700 --> 00:45:43,900
Let's see if we can make that work.

689
00:45:50,200 --> 00:45:50,800
All right.

690
00:45:50,900 --> 00:45:53,300
So can we do something like this?

691
00:45:55,900 --> 00:45:59,600
If the always in front of equals the always behind, then it's true.

692
00:45:59,600 --> 00:46:02,400
If the always in front of, in the other order equals, the always

693
00:46:02,400 --> 00:46:04,800
behind and I guess I could leave a in the same position here.

694
00:46:04,800 --> 00:46:06,300
Just so it's a little easier to read.

695
00:46:09,200 --> 00:46:11,100
If I always in front of this guy, it's true.

696
00:46:11,100 --> 00:46:12,600
If I'm always behind him, it's false.

697
00:46:12,800 --> 00:46:15,200
Otherwise we do the actual operation.

698
00:46:17,400 --> 00:46:24,100
So in that case, what I would need to do is make it so that there's

699
00:46:24,100 --> 00:46:27,200
not a zero, it's not zeros there.

700
00:46:33,700 --> 00:46:37,600
In the case where it's not supposed to be doing anything.

701
00:46:38,900 --> 00:46:44,300
So, for example, if you're just doing sort of a cleared one of these

702
00:46:45,000 --> 00:46:47,700
and I don't know that this is the best way to do this.

703
00:46:47,700 --> 00:46:53,500
But you know, if you imagine saying that always in front of

704
00:46:54,800 --> 00:46:58,900
Is zero and always behind.

705
00:47:02,600 --> 00:47:03,800
Is the maximum value?

706
00:47:04,100 --> 00:47:07,300
Those would never compare right?

707
00:47:07,300 --> 00:47:15,600
Those would never be equal for anybody so that would prevent the bug

708
00:47:15,700 --> 00:47:17,300
that would prevent the false case.

709
00:47:23,300 --> 00:47:24,000
But I don't know.

710
00:47:24,400 --> 00:47:26,700
I think maybe it's better to just do the extra check.

711
00:47:26,700 --> 00:47:28,100
I'm not sure I really don't.

712
00:47:28,200 --> 00:47:29,000
I like clear.

713
00:47:29,000 --> 00:47:30,500
20 is very important.

714
00:47:31,100 --> 00:47:34,800
I find that it it prevents a lot of Errors so I don't know.

715
00:47:35,200 --> 00:47:37,400
I'm going to go ahead and just stick with what I had before

716
00:47:37,400 --> 00:47:39,800
temporarily and we'll see if we have to do something else.

717
00:48:02,700 --> 00:48:06,000
Alright, so now we are in a better situation I think.

718
00:48:06,000 --> 00:48:07,500
Oh and hey look it fix the book.

719
00:48:09,000 --> 00:48:14,600
So yeah that is and right at the five-minute warning that is what I

720
00:48:14,600 --> 00:48:15,400
wanted to have happen.

721
00:48:15,400 --> 00:48:17,400
Now we added a little extra complexity are sore.

722
00:48:17,400 --> 00:48:22,800
Oh wait, no I still got there was a little bit glitched a little bit

723
00:48:22,800 --> 00:48:23,200
there.

724
00:48:25,900 --> 00:48:27,700
Is that what is that?

725
00:48:28,000 --> 00:48:29,900
Because they weren't quite overlapping.

726
00:48:30,200 --> 00:48:33,300
One thing that I don't know, is how our bounds.

727
00:48:45,700 --> 00:48:47,100
I know, I saw it.

728
00:48:48,700 --> 00:48:49,600
Yeah, like right there.

729
00:49:00,400 --> 00:49:04,600
hilariously eventually, those Sprites get behind the actual

730
00:49:06,000 --> 00:49:06,900
Wall.

731
00:49:08,600 --> 00:49:10,000
I think I need to go fix.

732
00:49:10,200 --> 00:49:12,900
I need to actually fix those Sprite band so we'll have something real

733
00:49:12,900 --> 00:49:13,600
to play with.

734
00:49:22,600 --> 00:49:24,100
I definitely saw it glitch.

735
00:49:24,400 --> 00:49:25,000
There we go.

736
00:49:31,900 --> 00:49:32,600
It's weird though.

737
00:49:32,600 --> 00:49:34,700
It's very there.

738
00:49:34,700 --> 00:49:35,100
It is.

739
00:49:48,200 --> 00:49:49,000
I'm not sure.

740
00:49:49,000 --> 00:49:50,500
I know how that's happening.

741
00:49:52,500 --> 00:49:57,700
It's really weird that it only happens just in transit and I can't

742
00:49:57,700 --> 00:49:58,600
hold it.

743
00:50:12,200 --> 00:50:13,200
Hmm.

744
00:50:19,300 --> 00:50:20,400
Yeah, that's really weird.

745
00:50:24,200 --> 00:50:27,300
I mean, I suppose, one thing that can be happening there is, if the

746
00:50:27,300 --> 00:50:29,400
sort graph is doing something weird.

747
00:50:30,200 --> 00:50:31,300
Amen, Let me see here.

748
00:50:32,300 --> 00:50:33,000
We need to.

749
00:50:34,500 --> 00:50:38,200
We need to finish this part so we can have this up on top.

750
00:50:39,500 --> 00:50:43,000
I don't remember if this is actually valid or not.

751
00:51:16,600 --> 00:51:20,200
It's very strange, it doesn't seem to be very consistent, which is

752
00:51:20,200 --> 00:51:20,600
odd.

753
00:51:22,300 --> 00:51:23,900
I think we must have a bug in there.

754
00:51:29,300 --> 00:51:31,600
Because you would think that if it was something to do with sort

755
00:51:31,600 --> 00:51:37,500
orders, you would be able to make it happen fairly reliably but I

756
00:51:37,500 --> 00:51:38,200
can't.

757
00:51:53,900 --> 00:51:59,400
But it was definitely happening, so it's it's got a bug but the bug

758
00:51:59,400 --> 00:52:02,700
maybe not what I would expect it to be.

759
00:52:30,000 --> 00:52:30,600
There we go.

760
00:52:34,800 --> 00:52:39,800
So yeah, I mean one of the problems with having this much stuff on the

761
00:52:39,800 --> 00:52:43,600
screen is like, looking at that crazy amount of stuff that has to get

762
00:52:43,600 --> 00:52:45,500
sorted in order for this to happen.

763
00:52:49,800 --> 00:52:51,300
You know, but you can see there there.

764
00:52:51,300 --> 00:52:53,200
It's picking the incorrect sort order.

765
00:52:55,100 --> 00:52:59,200
So I guess in this case, I could go see if we ever actually hit those

766
00:52:59,200 --> 00:52:59,900
cases.

767
00:53:00,100 --> 00:53:03,800
So maybe it's just so I can see whether or not the problem is that

768
00:53:03,800 --> 00:53:05,500
they're just never occurring.

769
00:53:09,200 --> 00:53:10,700
So, it definitely knows.

770
00:53:11,800 --> 00:53:18,000
So it's a case of a cycle and you know what it is in a cycle set,

771
00:53:18,000 --> 00:53:18,600
isn't it?

772
00:53:18,600 --> 00:53:20,500
You can see that it's bright and itself up.

773
00:53:22,000 --> 00:53:24,600
So, I wonder if that only happens when it's in a cycle.

774
00:53:25,900 --> 00:53:26,300
Go see here.

775
00:53:26,300 --> 00:53:27,400
We're not going to cycle.

776
00:53:27,700 --> 00:53:28,800
Now we're in a cycle is wrong.

777
00:53:28,800 --> 00:53:29,200
Okay?

778
00:53:29,700 --> 00:53:32,400
So that cycle detection is actually pretty handy, isn't it?

779
00:53:32,500 --> 00:53:35,300
We can see immediately that it happens specifically when we're in a

780
00:53:35,300 --> 00:53:35,900
cycle.

781
00:53:39,600 --> 00:53:40,400
So that's okay.

782
00:53:40,400 --> 00:53:44,600
We can sort of defer that for a little while until we get some real

783
00:53:44,600 --> 00:53:48,300
Sprites in here and see to what extent when the bounds are correct.

784
00:53:48,300 --> 00:53:49,900
How often we get those Cycles.

785
00:53:50,500 --> 00:53:55,500
But at least now we know that there is a concrete explanation for why

786
00:53:55,500 --> 00:53:57,500
we're getting that incorrect sort.

787
00:53:58,600 --> 00:53:59,200
Thank you mr.

788
00:53:59,200 --> 00:53:59,900
Cycle detection.

789
00:54:00,000 --> 00:54:00,200
In.

790
00:54:04,400 --> 00:54:04,800
Okay.

791
00:54:16,700 --> 00:54:20,600
All right, q a we could do some Q&A.

792
00:54:55,200 --> 00:55:00,100
Yeah, I mean I think the size like I think the key is never break a

793
00:55:00,100 --> 00:55:04,400
cycle in the front behind pair like that's not an okay place to break

794
00:55:04,400 --> 00:55:05,100
the cycle.

795
00:55:08,100 --> 00:55:10,500
Like that always needs to be part of the sort.

796
00:55:12,200 --> 00:55:12,600
You know.

797
00:56:04,500 --> 00:56:07,200
Another quiet day on the handmade here, Frontier.

798
00:56:32,900 --> 00:56:36,100
well, since there are no questions, I can take this long question,

799
00:56:36,400 --> 00:56:38,100
which is not really on topic, but

800
00:56:40,800 --> 00:56:48,400
Oh well okay sorry someone just put in a question from that.

801
00:56:48,400 --> 00:56:49,100
Is on topic.

802
00:56:49,100 --> 00:56:50,400
Will there ever be a case?

803
00:56:50,400 --> 00:56:52,700
When the characters facing direction will change?

804
00:56:52,800 --> 00:56:55,800
What we want for the sort order, I can think of a possible case.

805
00:56:55,800 --> 00:56:59,200
If the characters had arms does the current method, take these cases

806
00:56:59,200 --> 00:56:59,800
into account

807
00:57:01,500 --> 00:57:03,100
Yeah, I think.

808
00:57:04,400 --> 00:57:08,900
I think this one since the brain is the thing that can specify out

809
00:57:08,900 --> 00:57:12,300
those sort orders, it knows all that stuff so it knows the facing

810
00:57:12,300 --> 00:57:15,000
Direction, it knows whether the head and the body are attached knows.

811
00:57:15,000 --> 00:57:17,100
Whether there's a glove, there knows everything.

812
00:57:17,700 --> 00:57:22,100
So it should be the case that we can have complete flexibility to

813
00:57:22,100 --> 00:57:26,200
switch mandatory sort rules based on game State.

814
00:57:26,400 --> 00:57:29,700
We don't have to hard code, it like oh, this character is always

815
00:57:29,700 --> 00:57:30,600
sorted this way.

816
00:57:32,500 --> 00:57:33,400
So that's kind of cool.

817
00:57:34,900 --> 00:57:37,000
Needless says looking forward to be watching that syndication from

818
00:57:37,000 --> 00:57:37,500
early on.

819
00:57:37,500 --> 00:57:39,800
I don't think I quite follow that live.

820
00:57:40,900 --> 00:57:44,900
So may blo all I really I realized that I was thinking about it the

821
00:57:44,900 --> 00:57:45,400
wrong way.

822
00:57:45,400 --> 00:57:47,600
I was thinking we have a sort graph.

823
00:57:47,600 --> 00:57:50,300
I need a way of conveying to the renderer that there are edges in this

824
00:57:50,300 --> 00:57:54,300
sort graph that I want it to add but that was a the wrong way to think

825
00:57:54,300 --> 00:57:54,800
about it.

826
00:57:55,100 --> 00:57:57,800
Instead what I should what I should have thought about or what I then

827
00:57:57,800 --> 00:57:59,900
did think about was we always do.

828
00:57:59,900 --> 00:58:03,600
This comparison is in front of to generate the edges at sort time.

829
00:58:04,300 --> 00:58:09,500
So all I really need to do is modify that test so that I can tweak the

830
00:58:09,500 --> 00:58:14,500
sort keys with special pairing information so that when two things get

831
00:58:14,500 --> 00:58:18,500
compared that have to have us for the restored order, they you know,

832
00:58:19,200 --> 00:58:20,500
we'll sort in the proper order.

833
00:58:23,200 --> 00:58:27,600
So it basically just I forced the is in front of to do the work so

834
00:58:27,600 --> 00:58:30,600
that it will generate the right edges rather than trying to pass the

835
00:58:30,600 --> 00:58:31,400
edges down.

836
00:58:32,800 --> 00:58:33,300
That's all.

837
00:58:41,600 --> 00:58:42,300
All right.

838
00:58:42,800 --> 00:58:48,000
So, now onto the long question, I'm the communications director at a

839
00:58:48,000 --> 00:58:50,100
game development studio in Montreal.

840
00:58:50,900 --> 00:58:56,300
I haven't been to Montreal since I was like 12 or something or 14.

841
00:58:56,500 --> 00:58:58,400
How old was I 1450?

842
00:59:00,600 --> 00:59:02,000
I could have been as old as 16.

843
00:59:02,900 --> 00:59:04,000
We went on a skiing trip.

844
00:59:04,100 --> 00:59:05,000
I grew up in Massachusetts.

845
00:59:05,000 --> 00:59:06,000
It wasn't that far away.

846
00:59:06,900 --> 00:59:09,600
I just found your stream minutes ago and it's very fascinating.

847
00:59:10,900 --> 00:59:11,500
Thank you.

848
00:59:12,200 --> 00:59:15,700
Your trailer seems to convey the idea that a game is better.

849
00:59:16,100 --> 00:59:18,600
If it's entirely hand made from scratch.

850
00:59:18,900 --> 00:59:22,700
Do you feel again can't be made with as much love if it uses a premade

851
00:59:22,700 --> 00:59:26,200
engine as opposed to one that's made entirely from scratch.

852
00:59:28,900 --> 00:59:33,200
Do you not feel like Reinventing the wheel may be a waste of time so I

853
00:59:33,200 --> 00:59:34,900
guess there's two parts to that question.

854
00:59:35,600 --> 00:59:40,100
And the first part is the trailer, conveying the idea that game is

855
00:59:40,100 --> 00:59:40,400
better.

856
00:59:40,400 --> 00:59:43,700
If it's entirely hand made from scratch and do I feel like again

857
00:59:43,700 --> 00:59:46,100
camping with much love if it's user prevention as opposed to one

858
00:59:46,100 --> 00:59:47,400
that's made entirely from scratch.

859
00:59:48,200 --> 00:59:53,300
And what I would say is I know I don't think that a game can't be made

860
00:59:53,300 --> 00:59:58,400
with as much love it uses a premade engine because I don't think

861
00:59:58,700 --> 00:59:59,300
That.

862
01:00:00,000 --> 01:00:04,900
So really the approach to the game development precludes?

863
01:00:05,500 --> 01:00:07,400
How much love there is in the development?

864
01:00:07,600 --> 01:00:13,900
I think probably, you know certain things don't go hand-in-hand with

865
01:00:13,900 --> 01:00:16,700
love so if your primary goal is to make money, then you aren't making

866
01:00:16,700 --> 01:00:17,700
a game with very much love.

867
01:00:17,700 --> 01:00:19,400
That's kind of just obvious, right?

868
01:00:20,200 --> 01:00:23,500
So there's certain things about the sort of exterior part of making a

869
01:00:23,500 --> 01:00:26,900
game that could mean that you aren't going to make it with very much

870
01:00:27,400 --> 01:00:29,900
love, but I don't think your choice is whether to use

871
01:00:30,000 --> 01:00:38,000
A premade engine or using a your own stuff really has to do with that.

872
01:00:38,600 --> 01:00:43,500
However, I do have a corollary to that which is I do think that if you

873
01:00:43,500 --> 01:00:48,300
don't use a premade engine if you actually do finish a game chances

874
01:00:48,300 --> 01:00:50,900
are it probably has a lot of love in it, right?

875
01:00:51,100 --> 01:00:54,800
Because in order to do all the work of making a game from scratch,

876
01:00:54,800 --> 01:00:59,200
it's a lot more work, right then going and grabbing a premade engine.

877
01:00:59,400 --> 01:00:59,800
So it

878
01:01:00,000 --> 01:01:05,100
Is probably the case that if someone made everything from scratch, you

879
01:01:05,100 --> 01:01:06,600
know, there's a lot of love in there.

880
01:01:06,700 --> 01:01:09,400
Whereas if someone uses a premade engine, you don't know, right?

881
01:01:09,500 --> 01:01:12,800
Maybe there is or maybe there isn't and you'll have to go see, right?

882
01:01:14,000 --> 01:01:17,200
But you know these days certainly if someone's going to make a game

883
01:01:17,200 --> 01:01:19,800
from scratch I think that is a labor of love and that's kind of the

884
01:01:19,800 --> 01:01:23,100
proof is right there and it doesn't mean it's going to be a good game,

885
01:01:23,300 --> 01:01:26,200
you know, but in terms of whether the person love what they do, I

886
01:01:26,200 --> 01:01:27,400
think they have to endure do that.

887
01:01:27,400 --> 01:01:29,800
Because why wouldn't you just go by, you know, if

888
01:01:29,900 --> 01:01:32,400
All you're trying to do is get a game out there to make money or

889
01:01:32,400 --> 01:01:33,300
whatever, you know, sure.

890
01:01:33,300 --> 01:01:34,800
Go use a premade engine, why not?

891
01:01:34,800 --> 01:01:36,100
I mean, right.

892
01:01:38,100 --> 01:01:41,200
So I do think there is a little bit of a secondary correlation there.

893
01:01:41,200 --> 01:01:43,400
That's sort of like handmade stuff.

894
01:01:43,400 --> 01:01:45,700
Probably has more love into just like in the real world.

895
01:01:45,700 --> 01:01:48,400
You know, if someone, you know, Cooks the dinner from scratch there's

896
01:01:48,400 --> 01:01:51,300
probably a lot more love in there than putting one in the microwave.

897
01:01:51,500 --> 01:01:53,300
I mean, that's just, that's just how that is.

898
01:01:53,600 --> 01:01:54,900
And, you know,

899
01:01:57,100 --> 01:02:02,400
If I don't know how to say it in any other way but like I said, I

900
01:02:02,400 --> 01:02:07,400
think since even if you use a premade engine, I don't want to apply

901
01:02:07,400 --> 01:02:10,500
the microwave thing to liberally there because even if you use a

902
01:02:10,500 --> 01:02:15,300
premade engine, it could be a ton of work to make a game right like

903
01:02:15,300 --> 01:02:17,600
making all the art for it and and that sort of stuff.

904
01:02:17,600 --> 01:02:20,100
You know, there can be a ton of work that goes into that so it can

905
01:02:20,100 --> 01:02:23,100
still be a labor of love even if you use a premade engine, that's not

906
01:02:25,500 --> 01:02:26,400
that doesn't preclude.

907
01:02:26,600 --> 01:02:30,700
Which is why I say well it may be more likely that the game had a lot

908
01:02:30,700 --> 01:02:32,400
of love behind it.

909
01:02:32,400 --> 01:02:37,300
If it's made from scratch, it's certainly not in any way impossible

910
01:02:37,300 --> 01:02:39,000
for there to be a lot of love behind it.

911
01:02:39,500 --> 01:02:42,600
When you use a premade engine and we've seen that, you know, I mean, I

912
01:02:42,600 --> 01:02:47,100
think you can easily go out there and find games that used pre-made

913
01:02:47,100 --> 01:02:49,200
engines, where it was pretty clear that the people who made it really

914
01:02:49,200 --> 01:02:50,100
loved what they were doing.

915
01:02:50,100 --> 01:02:53,600
And you know, I mean, we know that's the case, right?

916
01:02:55,600 --> 01:02:59,800
So that said, on to the second part which is do

917
01:03:00,100 --> 01:03:02,600
You're not feel like Reinventing the wheel may be a waste of time.

918
01:03:02,900 --> 01:03:06,600
I've answered that before on the stream, but obviously, since you said

919
01:03:06,600 --> 01:03:13,600
this is your first time, you obviously haven't heard that I am sort

920
01:03:13,600 --> 01:03:18,600
of, there's, there's two sort of halves to the answer to that question

921
01:03:18,600 --> 01:03:20,700
or rather not really necessarily answer the question.

922
01:03:20,700 --> 01:03:25,700
But to explain to you sort of the mindset here, the first half is that

923
01:03:25,700 --> 01:03:29,600
this is an educational stream so I'm not trying to make this game.

924
01:03:30,200 --> 01:03:32,900
Like as as the most efficient business thing to do.

925
01:03:32,900 --> 01:03:35,200
Right now, I have a full-time job.

926
01:03:35,200 --> 01:03:39,500
I make games separate like I, this is not, you know, this is something

927
01:03:39,500 --> 01:03:43,900
I do at, for at people's educational benefit for, you know, an hour

928
01:03:43,900 --> 01:03:45,000
and a half every night.

929
01:03:45,500 --> 01:03:50,100
So that part is very important to consider.

930
01:03:50,300 --> 01:03:54,600
So when we do things on handmade hero, we're not stopping and saying

931
01:03:54,600 --> 01:03:57,800
at each point, would it be more efficient if I went and bought

932
01:03:57,800 --> 01:03:59,800
something or went and downloaded some code here?

933
01:03:59,800 --> 01:03:59,900
And

934
01:04:00,000 --> 01:04:04,100
Used it because the point of this stream is to be educational and

935
01:04:04,100 --> 01:04:08,200
teach people how to program all the parts of the game, like all of

936
01:04:08,200 --> 01:04:08,500
them.

937
01:04:09,800 --> 01:04:14,900
And so, it's critical that we do each part by hand in order to fulfill

938
01:04:14,900 --> 01:04:21,300
that educational Mission and so that in and of itself precludes.

939
01:04:21,600 --> 01:04:25,500
Even if I separate from the second part of the question, the answer,

940
01:04:25,500 --> 01:04:26,500
which I'll give it a second.

941
01:04:26,900 --> 01:04:29,800
That part means, we're definitely not going to be using anyone else.

942
01:04:29,900 --> 01:04:35,200
Has stuff on the stream because the goal is to show how to do each

943
01:04:35,200 --> 01:04:35,700
part.

944
01:04:36,500 --> 01:04:41,400
And that I think has a tremendous amount of value regardless, because

945
01:04:41,400 --> 01:04:46,000
everything you use was bad to be built by someone and has to be

946
01:04:46,000 --> 01:04:46,900
maintained by someone.

947
01:04:46,900 --> 01:04:52,100
And so educating the next sort of group of people who will maintain

948
01:04:52,100 --> 01:04:55,300
the unity engine, maintain the Unreal Engine, who will make the next,

949
01:04:55,300 --> 01:04:58,000
you know, system for walk navigation, whatever.

950
01:04:58,000 --> 01:05:01,500
Educating those people is of crucial importance, if the people who

951
01:05:01,500 --> 01:05:05,200
don't know, this stuff are ever going to have any good tools to use.

952
01:05:05,200 --> 01:05:06,400
So, I think it's an

953
01:05:06,500 --> 01:05:09,300
Everyone's best interest, even people who think that Reinventing the

954
01:05:09,300 --> 01:05:10,600
wheel is a waste of time.

955
01:05:10,900 --> 01:05:14,500
I think it's very important to realize that some segments of the Prime

956
01:05:14,500 --> 01:05:16,700
Community has to engage in these activities.

957
01:05:16,700 --> 01:05:20,500
If they don't, you will have nothing to use right?

958
01:05:20,500 --> 01:05:24,300
In 10, 20 years, there will be no one left, who knows how to do it,

959
01:05:24,800 --> 01:05:26,600
who knows, how to actually make the things you use.

960
01:05:27,200 --> 01:05:29,700
So I think it's pretty clear from the educational standpoint.

961
01:05:29,700 --> 01:05:32,300
Hopefully there's no argument there.

962
01:05:32,300 --> 01:05:36,100
It's just obvious that some segments of us have to be

963
01:05:36,500 --> 01:05:40,400
seeing these this knowledge on and working on these sorts of problems

964
01:05:40,400 --> 01:05:45,000
ourselves because engine teams always will have to exist.

965
01:05:45,000 --> 01:05:47,900
And although not every game developer has to have their own engine

966
01:05:47,900 --> 01:05:51,700
team, some set of game developers do because they're the people who

967
01:05:51,700 --> 01:05:53,900
make the engines on which the world's games run.

968
01:05:55,400 --> 01:05:57,900
and you know that's something like 10 companies, 20 companies, I don't

969
01:05:57,900 --> 01:05:59,900
know how many companies maintain

970
01:06:00,000 --> 01:06:03,000
Serious engines these days but it's a fair number of them, right?

971
01:06:03,100 --> 01:06:05,700
And you're talking about thousands and thousands of programmers that

972
01:06:05,700 --> 01:06:09,300
need to know this stuff at the very minimum rate.

973
01:06:11,400 --> 01:06:15,100
Furthermore, as a sort of Aunt, like, add on to that question or to

974
01:06:15,100 --> 01:06:16,200
that part of the answer.

975
01:06:17,700 --> 01:06:20,700
Even if you don't ever build these things yourself, I think there's a

976
01:06:20,700 --> 01:06:24,900
tremendous amount of value in understanding how it works because even

977
01:06:24,900 --> 01:06:28,300
if you decide to use someone else's game engine, which a lot of

978
01:06:28,300 --> 01:06:29,900
people, you know, probably

979
01:06:30,000 --> 01:06:30,800
We should do.

980
01:06:32,000 --> 01:06:36,400
If you're using someone else's game engine understanding how it works.

981
01:06:37,100 --> 01:06:40,300
Is crucial for you being able to get the most out of it.

982
01:06:40,400 --> 01:06:44,400
If you open up Unity or unreal and you have no idea, you're just like,

983
01:06:44,500 --> 01:06:45,100
I don't know.

984
01:06:45,100 --> 01:06:47,000
I just know what it showed in the tutorials.

985
01:06:47,200 --> 01:06:48,900
I have no idea how Graphics works.

986
01:06:49,100 --> 01:06:52,000
I have no idea how these things operate.

987
01:06:52,800 --> 01:06:55,400
Then you're often going to find yourself in situations where you're

988
01:06:55,400 --> 01:06:59,600
very limited in what you can do, even in that pre-made tool because

989
01:06:59,600 --> 01:06:59,900
you

990
01:07:00,000 --> 01:07:01,100
Understand what's going on.

991
01:07:01,400 --> 01:07:04,700
And so there's also an educational benefit even if you're never going

992
01:07:04,700 --> 01:07:07,100
to be an engine programmer, you're just going to be a gameplay,

993
01:07:07,100 --> 01:07:14,400
programmer always sits on top of this stack having that knowledge can

994
01:07:14,400 --> 01:07:17,600
be incredibly valuable and it makes you a much more effective

995
01:07:17,600 --> 01:07:18,500
programmer, if you can go.

996
01:07:18,500 --> 01:07:19,700
Oh, all right.

997
01:07:19,700 --> 01:07:23,400
Well, this is kind of messed up in unity, but I know how these sorts

998
01:07:23,400 --> 01:07:24,000
of systems works.

999
01:07:24,300 --> 01:07:26,300
I can work around it this way, right?

1000
01:07:26,300 --> 01:07:29,800
That's incredibly powerful thing for you to have at your disposal.

1001
01:07:29,900 --> 01:07:32,900
so, when you're working on a game, even in someone else's engine,

1002
01:07:33,900 --> 01:07:37,300
And that goes double for things like unreal where your you get the

1003
01:07:37,300 --> 01:07:38,100
source code.

1004
01:07:38,300 --> 01:07:41,500
I mean you can go in there and fix things you can go in there and see

1005
01:07:41,500 --> 01:07:42,500
why something is not working.

1006
01:07:42,500 --> 01:07:46,000
If you have the knowledge of how these things work, you're empowered

1007
01:07:46,000 --> 01:07:49,700
to be a much more powerful game developer on the programming side.

1008
01:07:49,700 --> 01:07:51,700
Anyway, then if you didn't know them,

1009
01:07:53,300 --> 01:07:57,000
So the second part of the answer as to whether I think so taking it to

1010
01:07:57,000 --> 01:07:58,000
the total face value.

1011
01:07:58,200 --> 01:07:59,100
So let's assume there.

1012
01:07:59,100 --> 01:08:02,400
This was not educational and the question is do I feel like

1013
01:08:02,400 --> 01:08:04,300
Reinventing the wheel is a waste of time?

1014
01:08:05,000 --> 01:08:09,800
My answer to that has kind of been said, like I said before on the

1015
01:08:09,800 --> 01:08:14,500
stream but the point I would really underscore there is there's an

1016
01:08:14,500 --> 01:08:16,600
underlying assumption to that question.

1017
01:08:17,200 --> 01:08:21,800
And the assumption is that somebody made a wheel at some point, right?

1018
01:08:22,899 --> 01:08:25,899
It's kind of a very leading question because if you think about what

1019
01:08:25,899 --> 01:08:29,899
that means, you're equating today's game technology that you can go

1020
01:08:29,899 --> 01:08:36,200
download or buy with one of the most fundamental and well, perfected

1021
01:08:36,200 --> 01:08:39,200
inventions of like human history, right?

1022
01:08:40,700 --> 01:08:45,600
And so you're presuming, we've hit a certain point of efficiency and

1023
01:08:45,600 --> 01:08:48,600
elegance that I don't think we've actually hit.

1024
01:08:48,899 --> 01:08:52,399
And so if I were to draw out where I

1025
01:08:52,500 --> 01:08:52,600
Why?

1026
01:08:52,800 --> 01:08:53,000
What?

1027
01:08:53,000 --> 01:08:54,100
I think that question.

1028
01:08:54,300 --> 01:08:57,800
If you actually apply it to the game industry, looks like it's like

1029
01:08:57,800 --> 01:08:59,500
someone showing me this

1030
01:09:18,399 --> 01:09:22,700
And being like, I don't understand why you're remaking Wheels.

1031
01:09:22,700 --> 01:09:25,800
We already have great Wheels, like, look at how awesome they are.

1032
01:09:26,000 --> 01:09:26,700
Right?

1033
01:09:27,300 --> 01:09:32,300
And it's like yeah I mean you know maybe if the roads are driving on

1034
01:09:32,300 --> 01:09:37,800
look like that all the time that those are good Wheels but you know in

1035
01:09:37,800 --> 01:09:41,899
reality my friend you know roads look like this and it's not so good.

1036
01:09:42,100 --> 01:09:42,700
Right?

1037
01:09:44,300 --> 01:09:47,500
And so I think the the sort of more

1038
01:09:47,600 --> 01:09:51,300
Realistic way of looking at the current state of game development is

1039
01:09:51,300 --> 01:09:52,399
no one has anything.

1040
01:09:52,399 --> 01:09:55,100
Even close to a wheel these days.

1041
01:09:55,400 --> 01:10:00,200
I've certainly never seen one unity and unreal and, you know, Source

1042
01:10:00,200 --> 01:10:00,600
or whatever.

1043
01:10:00,600 --> 01:10:05,700
At the these engines are so far from being in the category of wheel

1044
01:10:06,200 --> 01:10:07,900
like like, you know,

1045
01:10:09,300 --> 01:10:11,900
This thing can't even draw a good one.

1046
01:10:14,200 --> 01:10:18,000
You know this is where we're at and this is what we would like to have

1047
01:10:18,300 --> 01:10:22,400
so you know I don't ever feel like making something from scratch.

1048
01:10:22,400 --> 01:10:26,700
These days is Reinventing the wheel because the wheel hasn't been

1049
01:10:26,700 --> 01:10:27,800
invented yet

1050
01:10:28,800 --> 01:10:29,600
Right?

1051
01:10:29,600 --> 01:10:32,400
So what you're really doing, when you make something from scratch a

1052
01:10:32,400 --> 01:10:36,500
component, a whole engine, whatever it is, is you're trying to invent

1053
01:10:36,500 --> 01:10:37,000
the wheel.

1054
01:10:37,300 --> 01:10:40,400
You're working on inventing the wheel because nobody's invented a

1055
01:10:40,400 --> 01:10:43,100
wheel and, you know, who knows?

1056
01:10:43,100 --> 01:10:44,700
Maybe, you'll figure it out.

1057
01:10:45,600 --> 01:10:49,400
And if you keep saying, don't try to reinvent the wheel because you

1058
01:10:49,400 --> 01:10:50,400
think you have a wheel.

1059
01:10:50,400 --> 01:10:53,000
Well, what I can guarantee you is, you'll never get a wheel.

1060
01:10:55,300 --> 01:10:57,700
The easiest way to prevent yourself from ever inventing.

1061
01:10:57,700 --> 01:10:59,900
The wheel is to think you've already invented the wheel.

1062
01:11:01,700 --> 01:11:04,400
But you haven't I mean trust me on this one.

1063
01:11:04,400 --> 01:11:07,800
If you think that game development will look like booting up unity in

1064
01:11:07,800 --> 01:11:11,000
50 years from now it there's no chance, right?

1065
01:11:11,100 --> 01:11:15,800
We'll be so far past that as you know as long as people do keep trying

1066
01:11:15,800 --> 01:11:18,700
which I think they will, I mean Unity itself will keep trying and so

1067
01:11:18,700 --> 01:11:23,400
will epic and so will other people and so will you know teams all

1068
01:11:23,500 --> 01:11:24,600
around the world, right?

1069
01:11:26,200 --> 01:11:27,800
So to me,

1070
01:11:29,500 --> 01:11:32,200
I definitely think that development, sort of falls into two

1071
01:11:32,200 --> 01:11:32,800
categories.

1072
01:11:32,800 --> 01:11:36,500
There's the category of trying to push the state-of-the-art forwards

1073
01:11:37,000 --> 01:11:41,600
and that is necessarily from scratch programming.

1074
01:11:42,300 --> 01:11:49,300
And then there's the idea of just trying to make a specific game, and

1075
01:11:49,300 --> 01:11:51,100
that may have nothing to do with it, right?

1076
01:11:51,200 --> 01:11:55,100
If that game does not require any improvements to the current

1077
01:11:55,100 --> 01:11:59,200
technology, then you can do it without trying to invent.

1078
01:11:59,300 --> 01:11:59,700
Aunt.

1079
01:12:00,200 --> 01:12:01,300
New stuff.

1080
01:12:01,900 --> 01:12:06,000
But I for one have always been a game technologist.

1081
01:12:06,300 --> 01:12:12,300
So in my mind, I don't care about those games and it's not that I

1082
01:12:12,300 --> 01:12:12,900
don't want to play them.

1083
01:12:12,900 --> 01:12:13,500
I do.

1084
01:12:13,700 --> 01:12:15,400
I just don't want to make them, right?

1085
01:12:15,500 --> 01:12:18,600
I'm not interested in making a game that anyone could just make with

1086
01:12:18,600 --> 01:12:20,000
some off the shelf tools right now.

1087
01:12:20,900 --> 01:12:25,300
That is a game, I might want to play because I I'm a game player, so I

1088
01:12:25,300 --> 01:12:26,000
do play games.

1089
01:12:26,300 --> 01:12:29,800
So I like that people are doing it, but that's not what I want to.

1090
01:12:30,000 --> 01:12:33,500
Work on during the day, what I want to work on at my job is

1091
01:12:33,700 --> 01:12:37,500
technology, that enables games we can't make today, right?

1092
01:12:39,000 --> 01:12:42,400
And that's why I say to me it's never been a case of Reinventing the

1093
01:12:42,400 --> 01:12:44,500
wheel, it's in case of inventing the wheel.

1094
01:12:45,900 --> 01:12:54,300
So that's really where the heart of this dream comes from is that I

1095
01:12:54,300 --> 01:12:58,500
would like to share that sort of

1096
01:13:00,400 --> 01:13:07,000
I guess that love of of technical programming that's about trying to

1097
01:13:07,000 --> 01:13:09,700
build things yourself and see what you can do.

1098
01:13:10,400 --> 01:13:14,800
I want to encourage that and share that with people who also want to

1099
01:13:14,800 --> 01:13:15,500
do that.

1100
01:13:15,700 --> 01:13:19,900
I'm not trying to convince someone who'd be perfectly happy making a

1101
01:13:19,900 --> 01:13:22,600
game in unity to do something else.

1102
01:13:22,800 --> 01:13:26,300
If you are happy doing that, then that is what you should do.

1103
01:13:27,200 --> 01:13:30,100
But if you have this desire to push,

1104
01:13:30,300 --> 01:13:32,700
Technology for words, that's the person.

1105
01:13:32,700 --> 01:13:36,800
I'm trying to talk to if that makes sense or for who for whom this

1106
01:13:36,800 --> 01:13:39,600
stream is designed now on handmade hero.

1107
01:13:39,700 --> 01:13:44,400
We don't like drastically push the art of 2D games for words at all

1108
01:13:44,400 --> 01:13:46,100
because it's an educational stream.

1109
01:13:46,300 --> 01:13:50,300
So you know I'm not trying to say that we're going to make some 2D

1110
01:13:50,300 --> 01:13:51,300
engine that does things.

1111
01:13:51,300 --> 01:13:51,900
No one's ever seen.

1112
01:13:51,900 --> 01:13:54,600
Before although we have done some things already that are kind of new

1113
01:13:54,600 --> 01:13:57,600
and novel like our Loop Live code editing was pretty great.

1114
01:13:58,400 --> 01:14:00,100
We did we're doing.

1115
01:14:00,200 --> 01:14:01,500
Christianity system that are producing.

1116
01:14:01,500 --> 01:14:05,300
So we are taking some places where we can show how to maybe try some

1117
01:14:05,300 --> 01:14:07,500
things that haven't been tried before, but on an educational stream,

1118
01:14:07,500 --> 01:14:10,200
where your programming on stream, only an hour a night, you know,

1119
01:14:10,200 --> 01:14:13,500
we're not, we're not trying to push the envelope certainly.

1120
01:14:15,000 --> 01:14:19,700
But the idea is to show the act of programming at a serious technical

1121
01:14:19,700 --> 01:14:20,300
level.

1122
01:14:20,700 --> 01:14:25,000
So that after handmade hero, you've got your compulsories down, you

1123
01:14:25,000 --> 01:14:28,800
understand how to build a game engine from scratch all the parts.

1124
01:14:29,500 --> 01:14:30,100
And so

1125
01:14:30,200 --> 01:14:34,900
And, you know, I hope that people will go out and become technology

1126
01:14:34,900 --> 01:14:38,500
explorers from there because, you know, once you've done the

1127
01:14:38,500 --> 01:14:40,700
compulsory is with me on the stream.

1128
01:14:41,400 --> 01:14:44,000
Now, you have that basis to step forwards.

1129
01:14:44,300 --> 01:14:47,500
So I also don't mean to suggest that handmade hero is going to have

1130
01:14:47,500 --> 01:14:50,100
some kinds of crazy engine revelations in it.

1131
01:14:50,200 --> 01:14:52,900
That again is also outside the scope of what I can do.

1132
01:14:53,000 --> 01:14:57,200
But I do think what I can do is encourage people to learn those

1133
01:14:57,200 --> 01:14:59,800
compulsories and then go out and

1134
01:15:00,000 --> 01:15:01,800
Do great work, right?

1135
01:15:02,100 --> 01:15:07,500
And I think there are probably some people who, you know, you know,

1136
01:15:07,500 --> 01:15:08,300
will do that.

1137
01:15:08,300 --> 01:15:09,600
I didn't know if that would happen.

1138
01:15:09,600 --> 01:15:10,000
I started.

1139
01:15:10,000 --> 01:15:13,600
But based on sort of things I've seen come out of the community

1140
01:15:13,600 --> 01:15:14,100
already.

1141
01:15:14,100 --> 01:15:18,400
I think that's actually a goal that sort of becoming realized, which

1142
01:15:18,400 --> 01:15:19,100
is awesome.

1143
01:15:19,800 --> 01:15:22,800
So, that's kind of the entire answer, the question in a nutshell.

1144
01:15:22,800 --> 01:15:27,000
I hope that gives you some better perspective on the idea.

1145
01:15:52,300 --> 01:15:53,400
And just to clarify.

1146
01:15:54,700 --> 01:16:00,200
Yeah so I do think yeah if you're if your primary goal with making a

1147
01:16:00,200 --> 01:16:03,400
game is just to make money, then you're definitely not making it with

1148
01:16:03,400 --> 01:16:04,200
love, right?

1149
01:16:06,800 --> 01:16:10,700
If a game is being made with love, then it means that your primary

1150
01:16:10,700 --> 01:16:12,600
goal in life was to make that game.

1151
01:16:13,700 --> 01:16:17,700
And that doesn't mean that you can't, that doesn't mean you can

1152
01:16:17,700 --> 01:16:20,000
somehow do it without having money, right?

1153
01:16:20,000 --> 01:16:21,500
You need money to survive.

1154
01:16:21,700 --> 01:16:25,300
So you still sell the game and you still try to make money with it

1155
01:16:25,300 --> 01:16:25,700
certainly.

1156
01:16:25,700 --> 01:16:31,300
I mean, you do everything you can to make sure the game makes money in

1157
01:16:31,300 --> 01:16:34,100
the end so that you can keep doing what you love, right?

1158
01:16:34,300 --> 01:16:36,100
So it's, it's I'm not suggesting that

1159
01:16:36,300 --> 01:16:37,800
Should give your games away for free.

1160
01:16:37,800 --> 01:16:43,500
I think that absolutely not but yet your goal has to be that the

1161
01:16:43,500 --> 01:16:46,300
reason you want money is to make games.

1162
01:16:46,300 --> 01:16:50,000
Not the reason you make games is to make money because if you know

1163
01:16:50,000 --> 01:16:53,300
obviously that's at that point, just a commercial product to you.

1164
01:16:53,300 --> 01:16:54,300
It could have been anything.

1165
01:16:54,700 --> 01:16:56,700
It doesn't have to be a game, could be anything right?

1166
01:16:57,600 --> 01:17:01,300
And there's no love in that except maybe loving money, which, you

1167
01:17:01,300 --> 01:17:02,200
know, is a separate thing.

1168
01:17:13,600 --> 01:17:17,700
And I've definitely done both kinds of work in the past.

1169
01:17:17,700 --> 01:17:20,000
You know, I've done work, where I've been doing it strictly like this

1170
01:17:20,000 --> 01:17:23,500
was a passion project and I've done work, we're just like this was

1171
01:17:23,500 --> 01:17:26,300
just it's what I was paid to do and I did it right.

1172
01:17:27,600 --> 01:17:31,500
So you know it's also sort of a tracer on that.

1173
01:17:31,500 --> 01:17:32,000
Is it?

1174
01:17:32,600 --> 01:17:38,000
It is it is in every real sense of the word, a luxury to be able to

1175
01:17:38,000 --> 01:17:40,900
make anything.

1176
01:17:41,200 --> 01:17:42,300
Not even just

1177
01:17:44,400 --> 01:17:45,300
Not even a game.

1178
01:17:45,300 --> 01:17:49,400
But anything really, it's a luxury to be able to make it as a labor of

1179
01:17:49,400 --> 01:17:50,400
love, right?

1180
01:17:50,400 --> 01:17:54,200
Because you know human beings need to survive.

1181
01:17:55,400 --> 01:17:59,500
You can't just make getting especially games which require

1182
01:18:00,000 --> 01:18:03,100
Tremendous amount of money just to even have the equipment writing.

1183
01:18:03,100 --> 01:18:06,100
You have to buy a computer to begin with is a very expensive piece of

1184
01:18:06,100 --> 01:18:10,800
equipment, even just for starters and the time and so on.

1185
01:18:12,100 --> 01:18:17,200
So you know it's it's an honor a lot of times and a privilege,

1186
01:18:17,200 --> 01:18:21,000
certainly, if you can do something as a labor of love and you know, I

1187
01:18:21,000 --> 01:18:24,200
wish that that were not the case.

1188
01:18:24,200 --> 01:18:28,900
You know, I wish that everyone who, you know, had it in their heart to

1189
01:18:28,900 --> 01:18:29,800
dedicate themselves to

1190
01:18:30,000 --> 01:18:36,400
Making something artistic like that had the capability to do so but

1191
01:18:36,400 --> 01:18:38,400
that's not the reality of the world, we live in.

1192
01:18:40,400 --> 01:18:44,400
So you know, it's definitely always if you do find yourself in a

1193
01:18:44,400 --> 01:18:52,300
position where you can make something that you love and you have the

1194
01:18:52,300 --> 01:18:53,700
financial stability to do that.

1195
01:18:53,700 --> 01:18:55,700
That's that's really definitely kind of a

1196
01:18:58,000 --> 01:18:59,000
A real luxury.

1197
01:18:59,000 --> 01:19:01,200
It's a real privilege to be able to do that.

1198
01:19:01,800 --> 01:19:02,200
So

1199
01:19:04,000 --> 01:19:06,900
All right, let me go ahead and close up shop.

1200
01:19:14,400 --> 01:19:17,300
Okay, thank you, everyone for joining me, for another episode of

1201
01:19:17,300 --> 01:19:18,000
handmade here.

1202
01:19:18,000 --> 01:19:19,200
It's been a pleasure coding with you.

1203
01:19:19,200 --> 01:19:23,500
As always, if you would like to follow along at home, you can always

1204
01:19:23,500 --> 01:19:26,100
pre-order the game on handmade hero dot-org and it comes to the source

1205
01:19:26,100 --> 01:19:26,500
code.

1206
01:19:27,300 --> 01:19:30,400
So if you're someone who wants to tweak with the source code to play

1207
01:19:30,400 --> 01:19:31,800
around with it, you can always do that.

1208
01:19:31,800 --> 01:19:32,900
It's always available to you.

1209
01:19:33,700 --> 01:19:36,100
The forums are also available.

1210
01:19:36,100 --> 01:19:38,600
We've got a good site there where people answer your questions so if

1211
01:19:38,600 --> 01:19:41,100
you have questions about stuff, we did in the Stream or trying to

1212
01:19:41,100 --> 01:19:43,900
follow along at home, that's the place to ask them.

1213
01:19:44,500 --> 01:19:48,100
We have a patreon page if you want to support the video series, like I

1214
01:19:48,100 --> 01:19:49,800
said, oh, is available free of charge.

1215
01:19:49,800 --> 01:19:55,400
So, it's just if you're if you're want to be a nice person and support

1216
01:19:55,400 --> 01:19:58,600
us, we also have a schedule bot, which treats the schedule you if

1217
01:19:58,600 --> 01:20:01,800
you're trying to catch the stream live and know like when we're going

1218
01:20:01,800 --> 01:20:05,200
to be on Twitch live so that you can participate in the chat or ask

1219
01:20:05,200 --> 01:20:09,700
questions you can you can subscribe to that Twitter feed or just look

1220
01:20:09,700 --> 01:20:13,800
at it on the page and then we also have an episode guide made by the

1221
01:20:13,800 --> 01:20:14,000
amazing.

1222
01:20:14,100 --> 01:20:19,800
Raising me blow who it's just, it's incredible thing that he's done.

1223
01:20:19,800 --> 01:20:24,800
It's basically all of our past episodes with time-coded markers so you

1224
01:20:24,800 --> 01:20:27,500
can actually see like, what I worked on and what I talked about.

1225
01:20:27,500 --> 01:20:30,800
At each point in every episode, it's kind of remarkable when you look

1226
01:20:30,800 --> 01:20:35,400
back at it and and so you know bro he's very thankful to have him

1227
01:20:35,400 --> 01:20:39,700
working on that and he has a patron to you can subscribe to for some

1228
01:20:39,700 --> 01:20:44,000
reason it still is not in big bold letters, you know.

1229
01:20:44,100 --> 01:20:44,200
No.

1230
01:20:44,200 --> 01:20:47,100
It's like it's like here, right?

1231
01:20:47,800 --> 01:20:51,500
And I keep saying, guys, there needs to be a giant button here because

1232
01:20:51,500 --> 01:20:54,100
people use this thing should be like on every page.

1233
01:20:54,100 --> 01:20:58,000
There should be a little like support this the yeah.

1234
01:20:58,100 --> 01:20:58,600
Oh there.

1235
01:20:58,600 --> 01:20:59,400
Oh, hey.

1236
01:21:00,000 --> 01:21:01,500
Why it's so dark.

1237
01:21:01,500 --> 01:21:03,800
But at least that's their awesome.

1238
01:21:03,900 --> 01:21:07,300
I'm really glad that's there because yeah, I just really wanted a way

1239
01:21:07,300 --> 01:21:11,900
that people could could support him because basically, like a lot of

1240
01:21:11,900 --> 01:21:15,400
people use that episode guide and you can support him by making a

1241
01:21:15,400 --> 01:21:16,000
monthly pledge.

1242
01:21:16,000 --> 01:21:20,000
Their I I transfer some of the handmade hero patreon to him every

1243
01:21:20,600 --> 01:21:22,100
month as part of his patreon.

1244
01:21:22,100 --> 01:21:26,400
It's like a little Patron to patreon Route because it's just a great

1245
01:21:26,500 --> 01:21:29,500
it's a great service for everyone in the community.

1246
01:21:31,300 --> 01:21:33,000
Alright, that's it for today.

1247
01:21:33,000 --> 01:21:34,600
Thank you so much for joining me.

1248
01:21:34,900 --> 01:21:36,000
It's been a pleasure coding with you.

1249
01:21:36,000 --> 01:21:40,800
As always, I will see you guys tomorrow is Wednesday.

1250
01:21:40,800 --> 01:21:43,200
I and I think I'm at 8 p.m.

1251
01:21:43,700 --> 01:21:45,000
Pacific Daylight time tomorrow.

1252
01:21:45,000 --> 01:21:47,600
So I'll see you guys, then, until then have fun programming and I'll

1253
01:21:47,600 --> 01:21:48,400
see you on the internet.

1254
01:21:48,400 --> 01:21:49,300
Take it easy, everyone.

