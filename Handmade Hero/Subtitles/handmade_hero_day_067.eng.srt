1
00:00:00,000 --> 00:00:01,200
We're going to start recording.

2
00:00:02,100 --> 00:00:02,600
Don't ask me.

3
00:00:02,600 --> 00:00:02,700
Why?

4
00:00:02,700 --> 00:00:04,100
That's just how things go.

5
00:00:05,100 --> 00:00:05,300
Alright.

6
00:00:05,300 --> 00:00:05,900
Hello everyone.

7
00:00:05,900 --> 00:00:07,100
Welcome to handmade hero.

8
00:00:07,500 --> 00:00:08,000
The gate.

9
00:00:08,000 --> 00:00:09,200
Well, let's just say the game.

10
00:00:09,300 --> 00:00:13,400
It's not a game to show where we code, complete game from scratch live

11
00:00:13,400 --> 00:00:14,300
on Twitch.

12
00:00:14,300 --> 00:00:15,000
No engine, no.

13
00:00:15,000 --> 00:00:17,500
Libraries just us in our typing fingers.

14
00:00:18,000 --> 00:00:22,300
We are actually pretty far in now, like we've done a lot of stuff.

15
00:00:23,100 --> 00:00:26,300
We have gotten to the point where we've kind of got got a lot of our

16
00:00:26,300 --> 00:00:29,900
prototype stuff working, and we're at, we just finished up a

17
00:00:30,000 --> 00:00:32,200
A major change to how we were sort of.

18
00:00:32,200 --> 00:00:34,200
We've been sort of working on how we want our engine to be

19
00:00:34,200 --> 00:00:35,000
architected.

20
00:00:35,400 --> 00:00:38,000
And we just finished up a pretty major change which is we change to

21
00:00:38,000 --> 00:00:41,400
using these things called update like simulation regions, which are

22
00:00:41,400 --> 00:00:44,900
like basically regions of space that we update together that solved a

23
00:00:44,900 --> 00:00:45,800
bunch of problems for us.

24
00:00:45,800 --> 00:00:49,800
So I'm pretty happy with how it went and we have one more thing to do

25
00:00:49,800 --> 00:00:53,100
with them that I at least I think is probably something we should do

26
00:00:53,100 --> 00:00:53,500
with them.

27
00:00:53,500 --> 00:00:56,300
So that's what we're probably going to do today and then we'll be

28
00:00:56,300 --> 00:00:59,800
moving on out of that system into looking at some other stuff.

29
00:01:00,400 --> 00:01:03,800
So if you would like to follow along at home and you pre-ordered the

30
00:01:03,800 --> 00:01:06,900
game on handmade here a.org, you should have gotten a link in your

31
00:01:06,900 --> 00:01:07,200
email.

32
00:01:07,200 --> 00:01:10,100
And that link allows you to download the source code anytime you want.

33
00:01:10,800 --> 00:01:13,300
So if you take a look here, we're on day 67.

34
00:01:13,700 --> 00:01:17,700
So you would unzipped a 66 has source code into a directory, and then

35
00:01:17,700 --> 00:01:19,600
you would be exactly where I am right now.

36
00:01:19,900 --> 00:01:22,900
So you could follow along with coding at home, which I highly

37
00:01:22,900 --> 00:01:26,400
recommend doing, if you can because it's one of the best ways to learn

38
00:01:26,400 --> 00:01:27,600
is to code stuff yourself.

39
00:01:28,000 --> 00:01:30,000
So let's go ahead and get started.

40
00:01:31,100 --> 00:01:34,700
If I remember correctly, we had pretty much finished up looking at the

41
00:01:34,700 --> 00:01:36,100
stuff that we want to look at.

42
00:01:36,800 --> 00:01:40,300
And we actually already sort of put in a little test of shooting an

43
00:01:40,300 --> 00:01:41,900
entity out from our entity.

44
00:01:42,300 --> 00:01:44,300
We don't really have any graphics for it or anything yet.

45
00:01:44,300 --> 00:01:49,400
But it's essentially just shooting a rock in place of something where

46
00:01:49,400 --> 00:01:52,800
we might actually put something a little plate and so that was

47
00:01:52,800 --> 00:01:53,500
basically all done.

48
00:01:53,500 --> 00:01:56,800
And so the only thing that really I want to take a look at was what

49
00:01:56,800 --> 00:01:59,800
happens in the apron of our update region, right?

50
00:02:00,200 --> 00:02:03,700
And so I'll just go over briefly what that was just so because people

51
00:02:03,700 --> 00:02:06,400
may have forgotten because we did a bunch of work with the update

52
00:02:06,400 --> 00:02:08,600
regions that had nothing to do with this part of it but I mentioned it

53
00:02:08,600 --> 00:02:13,200
kind of briefly and now would probably be a good time here day 67 to

54
00:02:13,200 --> 00:02:17,400
go to the Whiteboard or I guess in this case Blackboard and draw out

55
00:02:17,400 --> 00:02:18,800
sort of what I was talking about.

56
00:02:19,200 --> 00:02:20,100
So basically

57
00:02:21,400 --> 00:02:22,500
There's day 67.

58
00:02:23,900 --> 00:02:26,800
What I was concerned about in the reason that I want to add one more

59
00:02:26,800 --> 00:02:30,400
thing to the simulation region, is, we sort of, have a couple of

60
00:02:30,400 --> 00:02:34,000
different Scopes in our simulation region, usually, right.

61
00:02:34,100 --> 00:02:37,400
We've got the area where the camera can see, and we know that we

62
00:02:37,400 --> 00:02:38,800
always want to simulate that.

63
00:02:39,100 --> 00:02:43,700
And then we've also got surrounding that sort of a wider region.

64
00:02:43,700 --> 00:02:46,700
And that is the simulation area, right?

65
00:02:47,000 --> 00:02:49,500
So this is the simulation area that we want to actually simulate

66
00:02:49,500 --> 00:02:51,100
everything in and the reason that I wanted that too,

67
00:02:51,200 --> 00:02:54,000
Be bigger than the camera area was just because I would like to be

68
00:02:54,000 --> 00:02:58,000
able to simulate people off screen at full speed and have it.

69
00:02:58,000 --> 00:02:59,800
So that, you know, if they did something like let's say,

70
00:03:00,100 --> 00:03:02,200
Aii over here sets a bomb.

71
00:03:02,200 --> 00:03:04,900
You would hear it, or it might blow through, you know, like, let's say

72
00:03:04,900 --> 00:03:07,000
there's a wall here, it might blow through the wall here.

73
00:03:07,200 --> 00:03:10,000
We want to be able to support any kind of like Rich interactions

74
00:03:10,100 --> 00:03:13,200
immediately in the vicinity of the player that might be interesting

75
00:03:13,200 --> 00:03:16,900
for them to see or feel the effects of even though that they're not on

76
00:03:16,900 --> 00:03:17,500
screen.

77
00:03:17,800 --> 00:03:21,300
What happened the effects of what happened might sort of be off screen

78
00:03:21,300 --> 00:03:23,800
that might might spill onto screen if you will.

79
00:03:24,400 --> 00:03:28,200
So these are our two areas but there's another area that I wanted to

80
00:03:28,400 --> 00:03:29,300
include right.

81
00:03:29,300 --> 00:03:29,800
Which is just

82
00:03:30,000 --> 00:03:34,600
One more layer out, right and this is sort of the Collision area.

83
00:03:36,500 --> 00:03:42,900
And so what this was about was if you are simulating everyone in this

84
00:03:42,900 --> 00:03:46,600
region that includes obviously people who are sort of right on the

85
00:03:46,600 --> 00:03:47,800
edge of the region.

86
00:03:47,800 --> 00:03:51,000
Right there could be people who are sort of right on that edge and

87
00:03:51,000 --> 00:03:54,000
those people may decide that what they want to do, you know if they're

88
00:03:54,000 --> 00:03:55,300
a i driven or whatever.

89
00:03:55,400 --> 00:03:58,300
Obviously the players going to be in the camera area but the a eyes

90
00:03:58,300 --> 00:03:59,800
are not necessarily.

91
00:03:59,900 --> 00:04:03,400
They may just be trying to do things like move outside.

92
00:04:03,600 --> 00:04:05,200
They may be moving in the in the

93
00:04:05,400 --> 00:04:08,200
Correction, that would take them outside of the simulation area.

94
00:04:09,000 --> 00:04:13,400
And what I'm afraid of is that if we just allowed the simulation to

95
00:04:13,400 --> 00:04:18,700
occur as, you know, as is only using this as the boundary of the

96
00:04:18,700 --> 00:04:22,000
envies that are pulled in there, may be entities right there.

97
00:04:22,000 --> 00:04:24,600
That should be stopping them from doing that motion, but those

98
00:04:24,600 --> 00:04:26,800
entities will never get seen by the Collision protector because the

99
00:04:26,800 --> 00:04:29,300
Collision detectors, only working on the things inside, the simulation

100
00:04:29,300 --> 00:04:29,700
area.

101
00:04:30,400 --> 00:04:33,600
And so what I wanted to do is say that we've got one more sort of

102
00:04:33,600 --> 00:04:35,200
boundary that's a little bit wider.

103
00:04:35,300 --> 00:04:39,800
ER, and that is basically growing the simulation area by however, much

104
00:04:39,800 --> 00:04:43,200
the maximum movement speed is per frame, right?

105
00:04:43,200 --> 00:04:47,400
You know, if that's .01 meters or something, I mean, who knows what it

106
00:04:47,400 --> 00:04:47,700
is?

107
00:04:47,700 --> 00:04:50,300
Maybe it's point one meters, we'll figure it out, right.

108
00:04:50,300 --> 00:04:54,100
Whatever the in a thirtieth of in 1/30 of a second.

109
00:04:54,100 --> 00:04:58,400
How fast can the fastest thing in the world move or more to the point

110
00:04:58,400 --> 00:05:01,100
we could even do fastest thing in the simulation area if we wanted to.

111
00:05:02,400 --> 00:05:04,100
But how fast is that?

112
00:05:04,100 --> 00:05:05,200
And then make sure that we make

113
00:05:05,300 --> 00:05:09,100
Something that big and that way we will know that we will include in

114
00:05:09,100 --> 00:05:14,200
the simulation area anything that might have essentially collided

115
00:05:14,200 --> 00:05:16,500
with, you know, with this, with this object, right?

116
00:05:16,500 --> 00:05:20,300
So that way it'll stop that bug potentially from happening which would

117
00:05:20,300 --> 00:05:21,500
be a bad bug for us to have.

118
00:05:21,500 --> 00:05:27,000
And there's it's sort of a this is this is not entirely accurate

119
00:05:27,000 --> 00:05:27,400
either.

120
00:05:27,400 --> 00:05:33,100
Because this, this sort of ignores one thing that we haven't talked

121
00:05:33,100 --> 00:05:35,100
about, with our spatial partition, which is the size of

122
00:05:35,300 --> 00:05:35,800
Titties.

123
00:05:35,800 --> 00:05:36,400
Right?

124
00:05:37,000 --> 00:05:41,400
So size of entities is actually also something we need to think about

125
00:05:41,400 --> 00:05:44,800
because what we want to do as well as we want to make sure that we

126
00:05:44,800 --> 00:05:49,400
bring in any entities like let's say that you know we've got these

127
00:05:49,400 --> 00:05:50,200
tile chunks, right?

128
00:05:50,200 --> 00:05:53,100
And the tile chunks are the things that we bring in that.

129
00:05:53,100 --> 00:05:55,600
We see what tile chunks are within our region.

130
00:05:56,100 --> 00:05:59,200
Well, if a particular entity, we're just we're putting entities in

131
00:05:59,200 --> 00:05:59,800
tile chunks

132
00:06:00,000 --> 00:06:01,600
Down there center, right?

133
00:06:01,800 --> 00:06:04,300
But the entity itself might have some size, right?

134
00:06:04,300 --> 00:06:06,200
The Entity itself might be fairly large.

135
00:06:06,200 --> 00:06:09,200
Let's say, I mean, it might not be that large relative to what we're

136
00:06:09,200 --> 00:06:12,000
talking about here, but it could be, you know, fairly large, right?

137
00:06:12,300 --> 00:06:16,100
And so if something could be fairly large, we also want to make sure

138
00:06:16,100 --> 00:06:19,500
that we would include it in here.

139
00:06:19,500 --> 00:06:24,100
If it's, if it's total size, would cause it to sort of protrude into

140
00:06:24,100 --> 00:06:26,700
that area right into the simulation area.

141
00:06:27,100 --> 00:06:28,100
Sorry into the question area.

142
00:06:28,600 --> 00:06:29,800
So really what we have

143
00:06:30,000 --> 00:06:33,800
Is we have when we grow this area, we actually want to grow it by

144
00:06:33,800 --> 00:06:38,100
essentially a distance, both in X and in y right to make sure that

145
00:06:38,100 --> 00:06:39,700
this the band is proper.

146
00:06:40,300 --> 00:06:45,300
We want to be able to grow by the radius of the biggest entity.

147
00:06:47,400 --> 00:06:48,000
Right.

148
00:06:50,100 --> 00:06:56,600
And we also want to add to that the speed of the fastest entity,

149
00:06:57,400 --> 00:06:57,900
right?

150
00:07:00,000 --> 00:07:03,100
And really, we don't need to necessarily do both of these because it's

151
00:07:03,100 --> 00:07:05,300
really when you combine the two.

152
00:07:05,400 --> 00:07:09,500
So what we could say is for all entities, if you took their radius

153
00:07:09,800 --> 00:07:11,800
plus their speed, right?

154
00:07:12,700 --> 00:07:16,600
We want radius plus speed, we want to basically say the maximum of

155
00:07:16,600 --> 00:07:17,000
that.

156
00:07:17,100 --> 00:07:19,600
So we want the maximum whoever is radius.

157
00:07:19,600 --> 00:07:23,200
Plus their speed is, the largest that is the size we want to enlarge

158
00:07:23,200 --> 00:07:26,600
our region by and then we would know that everyone who might be

159
00:07:26,600 --> 00:07:29,000
involved in a collision would be

160
00:07:29,300 --> 00:07:30,600
Sort of grabbed, right?

161
00:07:30,600 --> 00:07:33,800
And maybe we add an Epsilon here in for safety like because it is

162
00:07:33,800 --> 00:07:34,600
floating point.

163
00:07:34,600 --> 00:07:36,700
Maybe we don't want it to be quite so exact.

164
00:07:37,000 --> 00:07:40,000
Maybe we want to make sure that we've got a little bit of a buffer as

165
00:07:40,000 --> 00:07:42,600
well just to make sure that we don't have, you know, rounding errors

166
00:07:42,600 --> 00:07:44,700
or something that are going to cause some kind of really bad problem.

167
00:07:44,700 --> 00:07:47,200
But in general, that's what we want to do, right?

168
00:07:47,200 --> 00:07:51,800
And so figuring out that number is not something we need to do now,

169
00:07:51,800 --> 00:07:53,700
because we don't even know something like that.

170
00:07:53,700 --> 00:07:56,300
Right now, we haven't defined all the types of entities that might be

171
00:07:56,300 --> 00:07:56,700
in the game.

172
00:07:56,700 --> 00:07:59,300
But what we would like to do is, make it so that

173
00:07:59,300 --> 00:08:00,400
Oh, that this is supported.

174
00:08:00,400 --> 00:08:04,600
And the reason that this is not supported right now is because things

175
00:08:04,600 --> 00:08:09,100
in this region, we could easily expand the region and run it.

176
00:08:09,200 --> 00:08:12,400
The problem is the things in this region, would then get stimulated

177
00:08:12,900 --> 00:08:15,200
but we don't want to simulate them because if we did simulate them,

178
00:08:15,200 --> 00:08:18,300
we'd then have to keep on enlarging the region to see what things they

179
00:08:18,300 --> 00:08:20,500
could collide with, and so on and so forth, right?

180
00:08:20,900 --> 00:08:23,600
So, what we really want to do here, is we want to say that anything

181
00:08:23,600 --> 00:08:27,400
that's inside this region isn't going to get simulated, right?

182
00:08:27,400 --> 00:08:28,600
It's not going to get a chance.

183
00:08:28,600 --> 00:08:29,200
It's not actually.

184
00:08:29,400 --> 00:08:33,900
Get its chance to do its move whatever its move is right only the

185
00:08:33,900 --> 00:08:37,299
things inside, the simulation area are going to actually have the

186
00:08:37,299 --> 00:08:39,500
opportunity to move.

187
00:08:39,700 --> 00:08:42,900
And these things are just going to be brought in sort of as stationary

188
00:08:42,900 --> 00:08:43,799
static objects.

189
00:08:43,799 --> 00:08:47,700
That cannot be moved, but that will serve as colliders for these other

190
00:08:47,700 --> 00:08:48,900
things, right?

191
00:08:49,100 --> 00:08:51,800
And so that's basically what we would have to do.

192
00:08:52,300 --> 00:08:55,700
So I you know, this is the one thing like I was saying before that,

193
00:08:55,700 --> 00:08:59,000
I'm not super thrilled about because it does, it is a little bit.

194
00:09:00,100 --> 00:09:02,300
There's a little bit that I don't love about that.

195
00:09:02,700 --> 00:09:06,000
It sounds, it's almost totally fine.

196
00:09:06,000 --> 00:09:10,800
But the one part that I don't love about it, just in my head is what

197
00:09:10,800 --> 00:09:13,100
it means is that, when two things Collide?

198
00:09:14,300 --> 00:09:18,900
If one of them is in that static State, then they can't be moved.

199
00:09:18,900 --> 00:09:22,200
And whereas normally they would have been able to have been moved.

200
00:09:22,200 --> 00:09:25,500
So for example, we could have written Collision routines before, that

201
00:09:25,500 --> 00:09:29,400
would flat-out just teleport somebody if we wanted to and that's not

202
00:09:29,400 --> 00:09:29,800
really allowed.

203
00:09:30,000 --> 00:09:30,500
Anymore.

204
00:09:30,500 --> 00:09:31,100
Right?

205
00:09:31,100 --> 00:09:33,500
It could teleport them as long as it was going to teleport them to

206
00:09:33,500 --> 00:09:37,400
somewhere inside the simulation area but it wouldn't be allowed to

207
00:09:37,400 --> 00:09:40,800
teleport them anywhere outside necessarily or other things like this.

208
00:09:40,800 --> 00:09:41,300
Right.

209
00:09:41,800 --> 00:09:45,600
It certainly can't move them to outside this Zone and so it does

210
00:09:45,600 --> 00:09:46,900
impose a restriction.

211
00:09:47,000 --> 00:09:49,600
I don't know if that restriction would ever actually matter in

212
00:09:49,600 --> 00:09:50,000
practice.

213
00:09:50,000 --> 00:09:54,100
I can't think of a particular reason why we need to do that but it is

214
00:09:54,100 --> 00:09:54,900
a restriction.

215
00:09:54,900 --> 00:09:57,700
Whereas almost everything else we've done with a simulation regions

216
00:09:57,700 --> 00:09:59,600
has gotten us to a place where almost everything is

217
00:10:00,000 --> 00:10:03,600
And free and are all the code can be written as if it doesn't even

218
00:10:03,600 --> 00:10:05,500
care about the simulation region.

219
00:10:05,500 --> 00:10:06,700
And that was kind of nice.

220
00:10:06,700 --> 00:10:09,200
Whereas that's one thing that does have to kind of be aware of it.

221
00:10:09,200 --> 00:10:10,700
And I don't love that part of it.

222
00:10:12,800 --> 00:10:16,800
But I'm not sure there's really much else you can do about that.

223
00:10:17,000 --> 00:10:21,800
So basically yeah everything has to basically have a marker in it

224
00:10:21,800 --> 00:10:25,800
which says which will say whether or not it gets to be Sim din that

225
00:10:25,800 --> 00:10:26,200
way.

226
00:10:26,700 --> 00:10:28,500
So let's go ahead and

227
00:10:29,800 --> 00:10:32,900
let's go ahead and add that because that's really the thing that I

228
00:10:32,900 --> 00:10:35,500
want to do today to finish up those simulation regions.

229
00:10:36,300 --> 00:10:40,200
And again, we don't really have to do anything, particularly fancy

230
00:10:40,200 --> 00:10:42,500
here because we're just doing our engine spec stuff.

231
00:10:43,200 --> 00:10:46,200
And, you know, we'll have plenty of time further on down the road to

232
00:10:46,200 --> 00:10:50,700
think, about optimization and, and, you know, sort of other other

233
00:10:50,700 --> 00:10:53,000
things that are going to impact this, as we get, more information

234
00:10:53,000 --> 00:10:56,100
about how the game plays, but I just want to make sure that the

235
00:10:56,100 --> 00:10:59,000
concepts in there, so that we kind of are familiar with it know that

236
00:10:59,000 --> 00:10:59,500
it's there and

237
00:10:59,700 --> 00:11:02,600
That when we make architectural, decisions, we're aware of it and not

238
00:11:02,600 --> 00:11:04,800
just sort of going blind.

239
00:11:05,200 --> 00:11:08,600
So, here's the same entity Flags, which are already storing our

240
00:11:08,600 --> 00:11:10,900
special States like collides and non-spatial.

241
00:11:11,800 --> 00:11:15,500
We have entity flag siming right now, which is basically a thing,

242
00:11:15,500 --> 00:11:17,300
which says that it's in the same region.

243
00:11:17,300 --> 00:11:19,600
So that's not what that particular thing means.

244
00:11:20,000 --> 00:11:23,100
So we also have like an enemy flag.

245
00:11:23,100 --> 00:11:24,600
Basically that I wanted to find here.

246
00:11:24,700 --> 00:11:27,700
That means the thing that I just described on the Blackboard, I'm not

247
00:11:27,700 --> 00:11:29,500
sure if that's what we should call it, but probably,

248
00:11:29,600 --> 00:11:32,200
I'm guessing something like,

249
00:11:35,700 --> 00:11:39,900
Can update or you know updatable, right?

250
00:11:41,000 --> 00:11:42,000
I'm not sure what it would be.

251
00:11:42,900 --> 00:11:44,100
Like an update will say.

252
00:11:44,400 --> 00:11:47,800
Now the thing that's a little bit strange about this, you know, I

253
00:11:47,800 --> 00:11:49,100
think I might actually not do that.

254
00:11:49,100 --> 00:11:52,400
Now that I think about it, I think I might not actually do that.

255
00:11:52,700 --> 00:11:55,300
What I think I'm going to do is do it slightly differently than that

256
00:11:55,300 --> 00:11:58,000
because the flags or something that gets persisted and this is not a

257
00:11:58,000 --> 00:11:59,000
persistent thing.

258
00:11:59,100 --> 00:11:59,900
This is only true.

259
00:12:00,100 --> 00:12:01,800
Inside the same region itself.

260
00:12:01,900 --> 00:12:05,000
So it's kind of like, the storage index which is it something that,

261
00:12:05,700 --> 00:12:10,600
you know, basically and I should probably put a note here, these are

262
00:12:10,600 --> 00:12:12,700
only for the Sim region.

263
00:12:13,600 --> 00:12:17,000
Once we start separating out this entity type into things that are

264
00:12:17,000 --> 00:12:19,000
stored where they should be stored in that sort of stuff.

265
00:12:19,000 --> 00:12:22,800
Once we break start breaking this apart, this is actually something

266
00:12:23,600 --> 00:12:28,500
that would that would go with like just the Sim region part of things.

267
00:12:28,500 --> 00:12:29,100
Right?

268
00:12:29,200 --> 00:12:29,900
Whether or not this

269
00:12:30,000 --> 00:12:30,900
Entities updatable.

270
00:12:31,500 --> 00:12:34,400
And so I think that's probably just a better way to do that.

271
00:12:34,400 --> 00:12:36,400
I think that's probably just the right.

272
00:12:37,100 --> 00:12:38,700
Yeah, that's probably just the right call.

273
00:12:38,900 --> 00:12:41,800
So what I'm going to do is I'm going to go ahead and say that things

274
00:12:41,800 --> 00:12:42,900
that are updatable.

275
00:12:44,300 --> 00:12:46,900
Are going to get that marker and then we'll come in here and we'll

276
00:12:46,900 --> 00:12:51,500
sort of do the the most lightweight thing I can think of to do there.

277
00:12:51,500 --> 00:12:54,200
Which is that when an entity gets added, right?

278
00:12:54,900 --> 00:12:57,600
What I'm going to do is I'm going to say that if that entity is inside

279
00:12:57,600 --> 00:13:00,900
a certain rectangle, then it's okay to be updated, right?

280
00:13:01,500 --> 00:13:04,000
So the same region will store inside it.

281
00:13:04,100 --> 00:13:05,700
It's got this bounds right?

282
00:13:05,700 --> 00:13:08,600
And then it also will have a new thing which is basically update

283
00:13:08,600 --> 00:13:10,000
bounds right?

284
00:13:10,700 --> 00:13:13,700
Or updatable bounds and so that's the area where it's

285
00:13:13,800 --> 00:13:15,600
Actually going to be allowed to.

286
00:13:15,700 --> 00:13:18,100
If someone's inside that they will get like a tick.

287
00:13:18,100 --> 00:13:18,600
Basically.

288
00:13:18,600 --> 00:13:20,100
And if not, then they won't get a tick.

289
00:13:20,800 --> 00:13:23,500
So I'm going to go ahead and say that the updatable bounds are in the

290
00:13:23,500 --> 00:13:24,100
same region.

291
00:13:24,100 --> 00:13:28,500
I'm going to go ahead and here and check to see every time an entity

292
00:13:28,500 --> 00:13:30,200
comes into the active set.

293
00:13:30,300 --> 00:13:34,300
I will basically set when I set it storage index, I will set whether

294
00:13:34,300 --> 00:13:38,100
or not it's updatable based on whether it's in those updatable bound.

295
00:13:38,100 --> 00:13:40,900
So I think we've got already, we already wrote the code for this,

296
00:13:40,900 --> 00:13:41,200
right?

297
00:13:41,200 --> 00:13:43,600
If you remember down in

298
00:13:43,800 --> 00:13:44,600
Begin Sim.

299
00:13:44,600 --> 00:13:47,000
We're already doing exactly this operation.

300
00:13:47,300 --> 00:13:47,600
We do.

301
00:13:47,600 --> 00:13:49,100
It is in rectangle, right?

302
00:13:49,100 --> 00:13:53,400
Like this and so all we really need to do is we need to do just that

303
00:13:53,400 --> 00:14:00,100
is in rectangle where we sort of do, the check on the updatable

304
00:14:00,100 --> 00:14:00,400
bounce.

305
00:14:00,400 --> 00:14:05,900
Now what I don't remember is I don't remember what we did with mapping

306
00:14:06,300 --> 00:14:07,400
the the world space.

307
00:14:07,400 --> 00:14:11,400
It looks like the world space gets mapped out here in this identity.

308
00:14:11,900 --> 00:14:13,700
And so the only thing that I'm not sure

309
00:14:13,800 --> 00:14:18,800
Our about is basically exactly how exactly whether I should update.

310
00:14:18,800 --> 00:14:20,800
These are not in here.

311
00:14:21,100 --> 00:14:23,400
I'm guessing I'll just leave them outside for now.

312
00:14:23,400 --> 00:14:26,900
So if you call Ed, and if you brought your responsible for setting

313
00:14:26,900 --> 00:14:29,500
that updatable yourself and it will soon, the anything gets added is

314
00:14:29,500 --> 00:14:33,700
not an updatable entity otherwise, right?

315
00:14:33,700 --> 00:14:37,100
And so assuming that it got added by the call, that actually does know

316
00:14:37,100 --> 00:14:40,700
the location of the thing, then we will go ahead and set it at that

317
00:14:40,700 --> 00:14:43,500
point to be updatable based on the Family's.

318
00:14:43,800 --> 00:14:48,600
Okay, so we'll do groups updatable and we'll do Desta pee.

319
00:14:50,100 --> 00:14:54,000
Like so now I again don't really know if I actually need to do this at

320
00:14:54,000 --> 00:14:56,700
this point, I could just do this check when we're actually rolling

321
00:14:56,700 --> 00:14:58,900
through and doing updating and then I wouldn't have store anything at

322
00:14:58,900 --> 00:14:59,200
all.

323
00:15:00,000 --> 00:15:02,800
The only reason I'm not sure about that is because I'm thinking that

324
00:15:02,800 --> 00:15:04,800
sometimes will want to Mark things as updatable.

325
00:15:04,800 --> 00:15:08,700
They don't necessarily have a position things like this if we have

326
00:15:08,700 --> 00:15:11,200
synthetic entities or something like that and so I think I'm just

327
00:15:11,200 --> 00:15:14,100
going to leave it as a pool because obviously it's easy to do it that

328
00:15:14,100 --> 00:15:17,400
way and that way we'll be able to quickly set it in the future if we

329
00:15:17,400 --> 00:15:17,900
want to.

330
00:15:18,500 --> 00:15:22,000
So I'm going to say that that's a pretty much the entirety of it.

331
00:15:22,000 --> 00:15:27,000
And then when we do our simulation step, right, which we're currently

332
00:15:27,000 --> 00:15:29,800
still doing out here in hanbei dot CPP, we haven't pulled it out.

333
00:15:30,000 --> 00:15:33,100
Yet when we're doing our simulation step, we're just going to go ahead

334
00:15:33,100 --> 00:15:33,900
and check that.

335
00:15:33,900 --> 00:15:36,900
And we're going to check to see if this thing is not supposed to be

336
00:15:37,200 --> 00:15:37,800
updatable.

337
00:15:37,800 --> 00:15:40,600
Then we won't actually update it, right?

338
00:15:45,500 --> 00:15:46,000
so,

339
00:15:47,200 --> 00:15:48,600
how should we do that?

340
00:15:48,700 --> 00:15:49,700
It's a little bit.

341
00:15:50,900 --> 00:15:53,800
It's a little bit problematic at the moment and the reason is a little

342
00:15:53,800 --> 00:15:56,500
problematic is are still going to want to render it potentially or

343
00:15:56,500 --> 00:15:58,100
maybe we won't now.

344
00:15:58,100 --> 00:15:58,500
I think about it.

345
00:15:58,500 --> 00:16:00,700
No, I guess if something's out in that region, we shouldn't be

346
00:16:00,700 --> 00:16:01,700
rendering it either.

347
00:16:01,900 --> 00:16:04,600
So really this entire I guess it's not janky, it's totally fine.

348
00:16:04,800 --> 00:16:07,000
This entire thing should just be skipped.

349
00:16:07,700 --> 00:16:13,800
Basically, for anybody who is yeah, who is not updatable.

350
00:16:13,900 --> 00:16:16,300
So, we'll just say if the entity is updatable,

351
00:16:17,100 --> 00:16:21,300
You know, it can have its day in the Sun and if it's not, then it's

352
00:16:21,300 --> 00:16:23,700
not and it doesn't get to do anything really at all.

353
00:16:24,400 --> 00:16:26,100
And so I think that's about it.

354
00:16:26,500 --> 00:16:29,800
What I do have to do now, is figure out how big that updatable region

355
00:16:29,800 --> 00:16:32,500
is, and or really, that's not true.

356
00:16:32,600 --> 00:16:35,800
We already know how big that region is its we got to figure out how to

357
00:16:35,800 --> 00:16:36,900
enlarge our other region.

358
00:16:37,500 --> 00:16:40,200
Because remember, the update region, is the region that we're already

359
00:16:40,200 --> 00:16:40,700
using.

360
00:16:40,800 --> 00:16:43,100
What I'm talking about is expanding it out a little bit.

361
00:16:43,300 --> 00:16:46,800
So really the updatable bounds are actually the bounds that get

362
00:16:46,900 --> 00:16:48,200
Passed in, right?

363
00:16:48,900 --> 00:16:53,800
And the same region bounds are actually going to be those bounds plus

364
00:16:53,800 --> 00:16:55,700
some additional size, right?

365
00:16:55,900 --> 00:16:59,300
And so for now like I said we don't actually know what that size would

366
00:16:59,300 --> 00:16:59,700
be.

367
00:17:00,000 --> 00:17:05,200
We have no idea so I guess we'll just say are our safety margin.

368
00:17:05,400 --> 00:17:05,900
Right?

369
00:17:07,700 --> 00:17:12,099
Our update safety margin will be something and we'll put it to do here

370
00:17:12,099 --> 00:17:16,800
that says important Casey and this is what were the

371
00:17:16,900 --> 00:17:20,599
Do we're doing right now, actually important.

372
00:17:20,800 --> 00:17:22,900
We want to say that this is

373
00:17:25,300 --> 00:17:29,400
calculated eventually or whoops, calculate this.

374
00:17:29,400 --> 00:17:36,500
Eventually from the maximum value of all entities radius plus their

375
00:17:36,500 --> 00:17:37,500
speed

376
00:17:38,900 --> 00:17:39,400
Right.

377
00:17:41,200 --> 00:17:43,000
And then we will know that we are safe.

378
00:17:43,600 --> 00:17:48,100
So for now we're just adding a meter but in the future we should add

379
00:17:48,100 --> 00:17:52,400
something totally different than a meter once we actually know what's

380
00:17:52,400 --> 00:17:52,900
going down.

381
00:17:53,500 --> 00:17:56,700
So we've got that, that should be basically enough now.

382
00:17:56,700 --> 00:17:59,800
So all we need to do is be able to, you know,

383
00:18:00,100 --> 00:18:01,300
Enlarge those bounds.

384
00:18:01,500 --> 00:18:05,300
Now, I already told you about the minkowski sum, right?

385
00:18:05,300 --> 00:18:09,600
I sort of was stating before that, I don't know if you guys remember

386
00:18:09,600 --> 00:18:11,700
when we talked about Collision detection are sort of saying that a

387
00:18:11,700 --> 00:18:16,400
rectangle plus a rectangle equals another rectangle, right?

388
00:18:16,900 --> 00:18:20,600
And the way that you do that is if you imagine these were radius' of

389
00:18:20,600 --> 00:18:21,600
the rectangle, right?

390
00:18:21,600 --> 00:18:24,600
So you have like half the width, this is this is the height over to.

391
00:18:24,600 --> 00:18:26,600
This is the width / 2 right of these guys.

392
00:18:27,700 --> 00:18:29,800
So, if this was a and this

393
00:18:30,000 --> 00:18:30,500
Is B.

394
00:18:30,800 --> 00:18:33,400
Then this guy is just a plus b, right?

395
00:18:33,700 --> 00:18:37,200
So basically adding two rectangles together is pretty darn simple.

396
00:18:37,200 --> 00:18:42,900
You just take the center point and the center point stays the same and

397
00:18:42,900 --> 00:18:47,400
you add well, that's not, you know, I shouldn't I shouldn't say that

398
00:18:47,400 --> 00:18:48,600
that's not entirely true.

399
00:18:48,600 --> 00:18:52,000
What I just said technically, if you were doing a real Mankowski, some

400
00:18:52,000 --> 00:18:55,500
you'd actually add the points without considering the center point.

401
00:18:55,500 --> 00:18:58,000
So really what we want to do here is not really a minkowski sum what

402
00:18:58,000 --> 00:18:59,600
we really are sort of saying here.

403
00:19:00,000 --> 00:19:03,100
Them is a minkowski sum but smykowski some with a rectangle that's

404
00:19:03,100 --> 00:19:05,200
centered around zero, right?

405
00:19:05,200 --> 00:19:06,500
Which is sort of a special case.

406
00:19:07,600 --> 00:19:11,900
So yeah, that's sort of like kind of through the term around a little

407
00:19:11,900 --> 00:19:13,200
lucy and I shouldn't do that.

408
00:19:13,600 --> 00:19:16,500
So really what we're all were saying, here is whatever the width was

409
00:19:16,500 --> 00:19:18,800
of this guy with in height, right?

410
00:19:19,000 --> 00:19:24,300
So if this was with one height 1 and this is 2 with 2, we just want to

411
00:19:24,300 --> 00:19:27,000
add those together so that we end up with something with H1 plus H2

412
00:19:27,000 --> 00:19:29,700
and with 1 plus with to right.

413
00:19:29,900 --> 00:19:33,200
And so in our case, we know that we want to expand our like, are

414
00:19:33,200 --> 00:19:36,500
additive region, is just going to be that, that value, that one meter,

415
00:19:36,500 --> 00:19:38,100
write the update, safety margin.

416
00:19:38,300 --> 00:19:41,800
So all we want to do is take our rectangle and add the safety margin

417
00:19:41,800 --> 00:19:45,600
to, you know, to all sides of it basically, right?

418
00:19:46,600 --> 00:19:51,000
So in order to do that, I think I might add a thing to our rectangle

419
00:19:51,000 --> 00:19:52,900
code that does this automatically.

420
00:19:53,000 --> 00:19:55,000
So that I can basically say that, you know,

421
00:19:56,300 --> 00:20:00,200
The updatable bounds if we want to produce the bounds of our Sim

422
00:20:00,200 --> 00:20:03,400
region, what we're going to do is we're going to do something like a

423
00:20:04,900 --> 00:20:11,500
ad width height, look, something like this and yeah, so we'll add, I

424
00:20:11,500 --> 00:20:17,700
guess add radius to or something like this and we'll do something

425
00:20:17,700 --> 00:20:21,200
where we just say, We'll add that safety margin, and that will go

426
00:20:21,200 --> 00:20:24,900
ahead and add it and and maybe will allow you to pass in.

427
00:20:25,900 --> 00:20:29,200
Hey, a width and a height radius essentially to add to either side.

428
00:20:29,900 --> 00:20:34,400
So inside our math routines, we just have to go in add that which will

429
00:20:34,400 --> 00:20:35,300
be really simple.

430
00:20:36,100 --> 00:20:39,500
Obviously we've got sort of our rectangle calls here.

431
00:20:40,100 --> 00:20:42,900
All we need is a new rectangle call, right?

432
00:20:43,600 --> 00:20:47,800
Where we do add Radius 2 and that will take one of our rectangles.

433
00:20:49,400 --> 00:20:50,800
The Source rectangle, right?

434
00:20:51,000 --> 00:20:54,500
Okay, so let's call that a and then it'll take two things will take a

435
00:20:54,500 --> 00:20:58,900
radius width and a radius keeps getting close to my head there.

436
00:20:59,300 --> 00:20:59,800
Radio site.

437
00:21:00,700 --> 00:21:07,200
So again really really simple here all we have to do is is you know,

438
00:21:08,400 --> 00:21:10,200
do a subtraction and an ad.

439
00:21:10,200 --> 00:21:13,900
I guess alike separate this way from the Min and the max of the thing

440
00:21:13,900 --> 00:21:17,800
that's passed in the minimum corner of the rectangle will just get it

441
00:21:17,800 --> 00:21:20,700
subtracted the radius, right?

442
00:21:20,900 --> 00:21:24,400
And the maximum Corner we'll just have the radius, get added and

443
00:21:24,400 --> 00:21:27,300
that's it and that should produce for us a new rectangle.

444
00:21:27,300 --> 00:21:29,300
That's you know, bigger by that much.

445
00:21:30,500 --> 00:21:32,200
All right, so let's go ahead and check that out.

446
00:21:32,200 --> 00:21:32,800
There we go.

447
00:21:33,300 --> 00:21:37,300
And now I think that should just sort of do it again.

448
00:21:37,300 --> 00:21:40,200
We haven't we don't really have any good ways to test this at this

449
00:21:40,200 --> 00:21:44,500
point, but that should just about just about do that and of course

450
00:21:44,500 --> 00:21:46,000
we're still doing this here.

451
00:21:46,300 --> 00:21:46,600
Yeah.

452
00:21:47,500 --> 00:21:51,700
All right, so the last thing that we have to do is we kind of got to

453
00:21:51,700 --> 00:22:00,100
figure out how we want to deal with like this sword and stuff.

454
00:22:00,700 --> 00:22:02,600
So should the sword still work?

455
00:22:02,600 --> 00:22:05,700
Because once we do know, do we have to make things updatable?

456
00:22:06,500 --> 00:22:08,600
Or will they just automatically handle that?

457
00:22:09,700 --> 00:22:10,400
Let's find out.

458
00:22:10,400 --> 00:22:13,300
I guess was the thing that that's probably the easiest way to do it.

459
00:22:13,600 --> 00:22:16,200
So inside, where is it here?

460
00:22:16,600 --> 00:22:19,000
Where's our sword code handmade?

461
00:22:19,100 --> 00:22:22,000
I probably should also pull out this stuff into the Sim region since

462
00:22:22,000 --> 00:22:24,900
it's pretty much where it's at or maybe into the end of the file.

463
00:22:25,600 --> 00:22:28,600
So, if we go through here and we're doing our hero, and then, we're

464
00:22:28,600 --> 00:22:30,000
going to go ahead and do

465
00:22:30,600 --> 00:22:33,900
Update for the storage and we do the make entity spatial thing which

466
00:22:33,900 --> 00:22:38,200
moves it into the spatial set, should that that gives it a position.

467
00:22:38,200 --> 00:22:41,900
So, the next time through, you would think that it would get pulled in

468
00:22:42,100 --> 00:22:44,600
right to the simulation region and get updated.

469
00:22:44,700 --> 00:22:46,000
I would think

470
00:22:48,400 --> 00:22:51,600
that seems like, what should happen, but let's find out if it's what

471
00:22:51,600 --> 00:22:52,400
actually happens.

472
00:22:53,400 --> 00:22:54,600
Okay, I'm not seeing a sword there.

473
00:22:54,600 --> 00:22:56,700
So I feel like I'm not thinking it through properly.

474
00:22:56,900 --> 00:22:59,900
I'm just trying to figure out whether we need to move things into the

475
00:22:59,900 --> 00:23:02,600
update set that aren't, you know, these things are obviously not

476
00:23:03,400 --> 00:23:06,200
updatable or whatever would be 0.

477
00:23:07,800 --> 00:23:09,300
Well, no, never mind.

478
00:23:10,500 --> 00:23:13,300
I just trying to, well, let me let me check, let me go ahead and show.

479
00:23:14,300 --> 00:23:20,100
So what I just realized is we may never set positions properly on our

480
00:23:20,100 --> 00:23:20,400
thing.

481
00:23:20,400 --> 00:23:23,000
That hoists things in from references, right?

482
00:23:23,100 --> 00:23:25,700
When we do load into the reference, what are we doing here?

483
00:23:25,900 --> 00:23:27,000
Yeah, okay.

484
00:23:28,100 --> 00:23:30,300
See, that's yeah.

485
00:23:30,300 --> 00:23:32,000
So this is actually just a bug.

486
00:23:32,200 --> 00:23:33,500
This is just totally a bug.

487
00:23:35,700 --> 00:23:39,400
We never saw the bug before, but it was always there.

488
00:23:39,900 --> 00:23:43,800
When we load an entity reference in, we should go ahead and get its

489
00:23:43,800 --> 00:23:45,900
position set here, right?

490
00:23:46,900 --> 00:23:50,500
Because just because we happen to be loading it in Via reference,

491
00:23:50,700 --> 00:23:56,100
doesn't mean we wouldn't want to position it if it had a valid

492
00:23:56,100 --> 00:23:57,600
position, right?

493
00:23:57,900 --> 00:23:59,800
And so that seems totally

494
00:24:00,000 --> 00:24:04,100
August to me and not at all like, what we would want it to do, right?

495
00:24:04,200 --> 00:24:06,200
So we'd want it, we definitely want that.

496
00:24:06,300 --> 00:24:09,800
They get some space Peak all, we definitely want to do that.

497
00:24:10,100 --> 00:24:15,800
So it's sort of starting to feel like, yeah.

498
00:24:15,900 --> 00:24:18,800
Well, no, because we, I guess the reason that we did it this way to

499
00:24:18,800 --> 00:24:21,800
begin with, right, the reason that we had to get some space people

500
00:24:21,800 --> 00:24:24,200
that is because we needed to do that ahead of time to see whether it

501
00:24:24,200 --> 00:24:25,700
was in the update region or not.

502
00:24:26,200 --> 00:24:28,000
So I guess we should just keep doing it this way.

503
00:24:28,000 --> 00:24:29,900
But we should do I think is just going

504
00:24:30,000 --> 00:24:36,200
Ahead and do that gets in space p, right on the the, the low entity.

505
00:24:36,200 --> 00:24:38,700
So we'll do it this way, right entity.

506
00:24:41,000 --> 00:24:45,300
I think we should just probably make it a fact that we always do this

507
00:24:45,300 --> 00:24:47,700
additional call when we're loading the reference.

508
00:24:48,000 --> 00:24:50,800
So that we know that we'll always actually have that guy in there

509
00:24:50,800 --> 00:24:51,300
properly.

510
00:24:51,500 --> 00:24:56,600
All right, so we're going to do that, get low entity, gave State ref

511
00:24:56,600 --> 00:24:59,700
index, we will actually slow entity.

512
00:25:00,000 --> 00:25:04,800
We will get some space pee on him and we will go ahead and pass that

513
00:25:05,400 --> 00:25:07,300
to this call.

514
00:25:07,500 --> 00:25:10,000
Like so and there we go.

515
00:25:10,400 --> 00:25:11,100
That's about it.

516
00:25:12,400 --> 00:25:14,900
And also does add entity.

517
00:25:14,900 --> 00:25:19,100
I don't even know where this is actually getting called now.

518
00:25:19,100 --> 00:25:23,500
I guess it gets called it gets cold only when someone actually does

519
00:25:23,500 --> 00:25:24,600
have that same space p.

520
00:25:24,600 --> 00:25:26,000
So it's a little bit weird.

521
00:25:28,100 --> 00:25:29,800
Yeah, it's a little bit weird and we just did that.

522
00:25:29,900 --> 00:25:30,600
To do as well.

523
00:25:31,100 --> 00:25:32,000
So, let's take a look.

524
00:25:32,800 --> 00:25:34,600
I feel like that could be simplified a little bit.

525
00:25:34,600 --> 00:25:37,900
I feel like we've got a little bit more than we need, now, in terms of

526
00:25:37,900 --> 00:25:41,600
stuff, but but who knows it's not that much.

527
00:25:41,700 --> 00:25:42,200
We'll see.

528
00:25:43,300 --> 00:25:46,000
All right, so there's, there's that, so that's fixed.

529
00:25:46,000 --> 00:25:47,400
And that's what we would expect now.

530
00:25:48,000 --> 00:25:50,600
And I think everything's pretty good now, I think we're pretty happy

531
00:25:50,600 --> 00:25:51,100
with that.

532
00:25:51,100 --> 00:25:52,600
Don't think we need to do too much else.

533
00:25:53,400 --> 00:25:53,900
So, yeah.

534
00:25:54,200 --> 00:25:55,600
Where are we on time?

535
00:25:55,800 --> 00:25:57,700
We still have a half an hour left.

536
00:25:57,900 --> 00:25:59,800
So I think maybe what we should probably

537
00:26:00,900 --> 00:26:03,800
We should start doing now is start actually going back and looking at

538
00:26:03,800 --> 00:26:06,000
the stuff that originally motivated, this sort of things, which is

539
00:26:06,000 --> 00:26:09,300
just having hit points being able to do some stuff at that.

540
00:26:09,900 --> 00:26:10,300
Hmm.

541
00:26:12,500 --> 00:26:14,400
Having a trouble.

542
00:26:14,400 --> 00:26:15,900
Getting the water in my mouth today.

543
00:26:16,100 --> 00:26:17,200
That's not good at all.

544
00:26:18,600 --> 00:26:19,900
You'd think that after a while.

545
00:26:22,100 --> 00:26:26,100
I'd be good enough drinking from these things that I wouldn't have

546
00:26:26,100 --> 00:26:28,500
that problem but you know, it's not true at all.

547
00:26:28,700 --> 00:26:30,600
Absolutely just disastrous here.

548
00:26:33,300 --> 00:26:35,300
The problem is, of course, I suppose it's not almond milk.

549
00:26:35,300 --> 00:26:40,300
I was drinking water from this today and so you know at that point the

550
00:26:40,300 --> 00:26:44,100
viscosity change is obviously is really the problem.

551
00:26:44,400 --> 00:26:45,800
It wasn't my fault.

552
00:26:45,800 --> 00:26:47,400
It was it was this different liquid.

553
00:26:48,600 --> 00:26:51,700
So yeah, so I think probably the easiest thing for us to start playing

554
00:26:52,000 --> 00:26:56,100
And at this point is just maybe like working on some of these guys, I

555
00:26:56,100 --> 00:26:59,800
also feel like our familiar has stopped going because I don't know.

556
00:27:00,000 --> 00:27:03,900
We have reported his code so I feel like we could do some of that

557
00:27:03,900 --> 00:27:04,100
work.

558
00:27:04,100 --> 00:27:07,500
So maybe let's just go through and just tidy up some of this stuff,

559
00:27:07,500 --> 00:27:08,300
get everything ported.

560
00:27:08,300 --> 00:27:11,700
Make sure we're working and take a look at like the mon star on the

561
00:27:11,700 --> 00:27:13,900
hit points in that sort of stuff because now that we've taken care of

562
00:27:13,900 --> 00:27:17,200
the same region stuff, and we've gotten that sort of in their

563
00:27:17,200 --> 00:27:18,000
situated.

564
00:27:18,100 --> 00:27:21,400
Now might be a good time to kind of deal with some of the stuff.

565
00:27:21,400 --> 00:27:25,100
So, let's see, our familiar is not does not appear to be working

566
00:27:25,100 --> 00:27:29,900
properly, as far as I can tell, because before are

567
00:27:30,000 --> 00:27:32,900
ER would follow us around and he's not, he's totally not following us

568
00:27:32,900 --> 00:27:33,600
around, right?

569
00:27:33,600 --> 00:27:35,100
Like, he's not following us around at all.

570
00:27:35,700 --> 00:27:37,000
So, why isn't he following us around?

571
00:27:37,000 --> 00:27:37,800
Let's take a look.

572
00:27:38,400 --> 00:27:41,900
So, when we're in update, familiar, and I guess I'll also take a look

573
00:27:41,900 --> 00:27:45,300
at the code that calls update, familiar update familiar.

574
00:27:47,600 --> 00:27:51,400
So in update familiar, we're just getting normally called as I think

575
00:27:51,400 --> 00:27:55,000
we would and we are passing a Sim region, empty unit.

576
00:27:55,000 --> 00:27:58,600
In a Time step we then say that we're going to search within 10

577
00:27:58,600 --> 00:27:59,200
meters.

578
00:27:59,200 --> 00:28:04,600
We go through here and we search for inside.

579
00:28:04,900 --> 00:28:06,400
Oh well, that's pretty obvious.

580
00:28:06,700 --> 00:28:09,400
Some reason we never incremented the test and be pointer.

581
00:28:09,400 --> 00:28:12,300
So we did Port it, we just poured it badly.

582
00:28:13,200 --> 00:28:15,600
Let's all go ahead and recompile that and see if the familiar

583
00:28:15,800 --> 00:28:16,400
And there we go.

584
00:28:16,400 --> 00:28:19,200
So we were just weren't looking through all the entities, simple

585
00:28:19,200 --> 00:28:21,100
simple bug problem solved.

586
00:28:21,400 --> 00:28:25,500
Alright, so there's our little familiar and off, he goes make sense.

587
00:28:26,100 --> 00:28:28,400
So, let's take a look at the monstar.

588
00:28:28,400 --> 00:28:30,500
And let's take a look at the Collision detection, The Sword, and that

589
00:28:30,500 --> 00:28:31,200
sort of stuff.

590
00:28:32,100 --> 00:28:33,600
So, mmm.

591
00:28:35,500 --> 00:28:41,400
It looks like, you know, we've got this non-spatial flag here and I

592
00:28:41,400 --> 00:28:48,400
feel like for the most part that doesn't really need to be like,

593
00:28:48,600 --> 00:28:51,000
depending on how we decide to do things.

594
00:28:51,700 --> 00:28:54,100
We wouldn't really have to check for this at.

595
00:28:54,100 --> 00:28:55,200
All right?

596
00:28:55,200 --> 00:28:59,400
Because now since we only pull things into the update region, if those

597
00:28:59,400 --> 00:29:04,100
things are actually we only call the update function if something's

598
00:29:04,100 --> 00:29:04,600
actually

599
00:29:05,200 --> 00:29:06,800
Inside the update region.

600
00:29:07,000 --> 00:29:11,100
If the sword is not inside the update, mutant it wouldn't get called.

601
00:29:15,900 --> 00:29:21,900
So, you know, this may not even need to exist anymore, right?

602
00:29:21,900 --> 00:29:24,400
If I were to get rid of this, I don't think it would matter anymore

603
00:29:24,400 --> 00:29:26,000
because we sort of fixed.

604
00:29:26,000 --> 00:29:30,600
We sort of got rid of the need to even have that concept now.

605
00:29:30,600 --> 00:29:34,000
Because since we don't since yes, they get brought into the simulation

606
00:29:34,000 --> 00:29:37,300
set, but the simulation set has a concept of updatable that doesn't

607
00:29:37,300 --> 00:29:41,900
include any entities that would have had non-spatial set.

608
00:29:41,900 --> 00:29:45,600
So that's kind of interesting that I wonder if

609
00:29:45,900 --> 00:29:47,900
Allow us to simplify some things even further.

610
00:29:47,900 --> 00:29:50,200
I hadn't thought about that but it's kind of interesting and kind of

611
00:29:50,200 --> 00:29:50,600
neat.

612
00:29:50,900 --> 00:29:54,900
So kind of an accidental thing that happened there but you know, I'll

613
00:29:54,900 --> 00:29:55,600
take it.

614
00:29:57,700 --> 00:29:59,600
So when the sword moves

615
00:30:00,200 --> 00:30:02,200
We're calling move entity on the sword.

616
00:30:02,800 --> 00:30:07,200
And what we want to do now is we want to figure out a way that we can

617
00:30:07,200 --> 00:30:10,500
sort of use our Collision detection to actually do some kind of an

618
00:30:10,500 --> 00:30:12,300
operation when the sword hits something right?

619
00:30:12,300 --> 00:30:15,300
And we talked a little bit about having a table, that would record

620
00:30:15,300 --> 00:30:17,100
when things got hit and that sort of stuff.

621
00:30:17,300 --> 00:30:20,000
So let's go take a look at that stuff because we want to be able to do

622
00:30:20,000 --> 00:30:20,500
all that stuff.

623
00:30:20,500 --> 00:30:23,300
So we might as well just pick up where we left off way back when and

624
00:30:23,300 --> 00:30:24,700
actually start coding some of that.

625
00:30:24,800 --> 00:30:27,300
So we've got our move entity call, right?

626
00:30:27,500 --> 00:30:29,700
And the way the move entity call is it

627
00:30:30,000 --> 00:30:33,100
The equations of motion for this thing and you know, what else I

628
00:30:33,100 --> 00:30:34,300
should probably do while we're at it.

629
00:30:34,300 --> 00:30:35,300
While, we're just cleaning stuff up.

630
00:30:35,300 --> 00:30:38,700
Because I'm thinking about it right now, we've got like this DZ update

631
00:30:38,700 --> 00:30:42,800
stuff that should probably be inside, move Envy as well, right?

632
00:30:42,800 --> 00:30:45,500
It's like the move entity, should update Z coordinate.

633
00:30:45,500 --> 00:30:50,600
I feel like for stuff like so and so, you know, for now, I would say

634
00:30:50,600 --> 00:30:52,300
we should probably do this in here.

635
00:30:52,300 --> 00:30:54,600
Now, we want to integrate it in a little bit better than it's been

636
00:30:54,600 --> 00:30:55,700
integrated in right now.

637
00:30:56,300 --> 00:30:58,300
But let's just go ahead and put that there for now.

638
00:30:58,300 --> 00:30:59,900
And then that should allow us to have.

639
00:31:00,800 --> 00:31:04,400
You know, RZ get handled along with everything else inside the move

640
00:31:04,400 --> 00:31:06,900
call and that seems just better, right?

641
00:31:07,400 --> 00:31:09,100
So let's just do that and that's done.

642
00:31:10,300 --> 00:31:15,600
So what I was going to say was when we do our move entity call, right?

643
00:31:15,600 --> 00:31:19,900
We're doing this test for collision and, you know, it's totally fine.

644
00:31:19,900 --> 00:31:21,200
We haven't really done a real one yet.

645
00:31:21,200 --> 00:31:25,000
It's kind of, it's not a really very it's not a complete collision

646
00:31:25,000 --> 00:31:28,800
detector but it does let us know when things hit other things and when

647
00:31:28,800 --> 00:31:31,300
things hit other things, we have the option of doing something about

648
00:31:31,300 --> 00:31:31,400
it.

649
00:31:31,400 --> 00:31:34,200
And obviously that's what we would want to do in the case of the

650
00:31:34,200 --> 00:31:34,600
sword.

651
00:31:34,600 --> 00:31:39,900
But what we have is we've got sort of our

652
00:31:40,100 --> 00:31:43,900
Are colliding flag doesn't really tell us everything that we might

653
00:31:43,900 --> 00:31:47,500
want to know about what we should do to handle the movement of this

654
00:31:47,500 --> 00:31:52,200
entity because we really want to things for the entity as far as

655
00:31:52,200 --> 00:31:53,200
Collision are concerned.

656
00:31:53,600 --> 00:31:58,900
We want to be able to do collisions and we want to be able to respond

657
00:31:58,900 --> 00:32:01,100
to collisions but those should be separate things.

658
00:32:01,300 --> 00:32:05,900
Some things right may want to actually stop when they hit things,

659
00:32:05,900 --> 00:32:06,200
right?

660
00:32:06,200 --> 00:32:09,900
Like we may want, you know, the like for example, the reason we were

661
00:32:10,000 --> 00:32:12,700
We wrote this when the hero hits a wall we wanted to stop moving.

662
00:32:13,200 --> 00:32:16,300
That's one thing we can do with Collision, but another thing we might

663
00:32:16,300 --> 00:32:19,100
want to do a collision is allow the player to pass through the wall

664
00:32:19,100 --> 00:32:21,500
but just you know, do something about the fact that, right?

665
00:32:21,500 --> 00:32:25,400
So imagine not a wall and instead this time it's a floor plate.

666
00:32:25,400 --> 00:32:28,000
We may want them to be able to walk over the floor plate, but we want

667
00:32:28,000 --> 00:32:31,200
to do something in the case where they have walked over it, right?

668
00:32:32,100 --> 00:32:35,400
So really we want to start breaking our Collision response into

669
00:32:35,400 --> 00:32:39,300
multiple pieces, which is the detecting the fact that it happened and

670
00:32:39,300 --> 00:32:43,900
responding to it are not going to be the same flag or not even gonna

671
00:32:43,900 --> 00:32:45,300
be the same like idea, really?

672
00:32:45,300 --> 00:32:48,800
We want to separate those out into different things because the sword

673
00:32:48,800 --> 00:32:50,800
might be an object that works exactly like that.

674
00:32:50,800 --> 00:32:54,400
It may not stop when it gets a monster, it may you know pass through

675
00:32:54,400 --> 00:32:57,900
the monster and do damage but do damage to other monsters as it goes

676
00:32:57,900 --> 00:32:59,800
like perhaps that's piercing and that sort of stuff, right?

677
00:33:00,200 --> 00:33:02,900
So you want to be able to sort of have individual control over which

678
00:33:02,900 --> 00:33:03,900
one of those is going to happen.

679
00:33:10,000 --> 00:33:15,300
I did the drinking correctly that time, so how do we want to do that?

680
00:33:15,600 --> 00:33:19,400
Well, it's pretty easy for us to do something very simple, right?

681
00:33:20,200 --> 00:33:24,000
And so the complicated part is actually going to come in how we sort

682
00:33:24,000 --> 00:33:27,300
of want to break this routine out into something that's a little more

683
00:33:27,300 --> 00:33:30,500
usable by the higher level code.

684
00:33:30,800 --> 00:33:36,100
And so we've got we've got a couple different things to talk about

685
00:33:36,100 --> 00:33:39,600
here all of which are very very intricate and complicated.

686
00:33:39,800 --> 00:33:42,700
We might not do all of them right now, but we'll sort of talk about

687
00:33:42,700 --> 00:33:43,000
them.

688
00:33:43,700 --> 00:33:48,200
So the first thing that you'll notice is inside a single Collision,

689
00:33:49,000 --> 00:33:53,000
inside a single move, call we have iterative system, that's working,

690
00:33:53,100 --> 00:33:53,700
right?

691
00:33:53,800 --> 00:33:57,100
And I'm going to go ahead here and draw this out for you because it

692
00:33:57,100 --> 00:33:58,400
was, it's been a while since we did this.

693
00:33:58,400 --> 00:33:59,800
I just want to make sure people remember.

694
00:34:00,500 --> 00:34:03,400
So let's say that we have well actually I'll draw a little bit

695
00:34:03,400 --> 00:34:03,800
different.

696
00:34:03,800 --> 00:34:07,900
Let's say that we have something like this, right now.

697
00:34:07,900 --> 00:34:09,600
That's even that's not what I would have.

698
00:34:09,699 --> 00:34:11,000
What I, what I really wanted.

699
00:34:11,100 --> 00:34:12,699
Oops, let's bring that back.

700
00:34:12,800 --> 00:34:13,199
Okay.

701
00:34:13,600 --> 00:34:17,500
So let's say that I have something where I've got a wall like this and

702
00:34:17,500 --> 00:34:19,500
then I've got another wall like that, right?

703
00:34:19,900 --> 00:34:24,199
And the player is trying to move like this, okay?

704
00:34:24,699 --> 00:34:28,699
And so when they hit this wall here, we are stopping them and that's

705
00:34:28,699 --> 00:34:29,199
good.

706
00:34:29,800 --> 00:34:33,500
But we're allowing them to continue to move along the wall, right?

707
00:34:34,199 --> 00:34:36,900
And what we're doing is we're saying well, wherever you could have

708
00:34:36,900 --> 00:34:38,900
moved to, if you had moved the regular

709
00:34:39,800 --> 00:34:40,100
Correction.

710
00:34:40,100 --> 00:34:43,800
You were going will allow you to go that far along the wall, right?

711
00:34:44,000 --> 00:34:46,900
But the problem is there may be another wall like in this case.

712
00:34:47,100 --> 00:34:51,300
So we would then do another Collision step to find where you hit that

713
00:34:51,300 --> 00:34:52,800
wall, right?

714
00:34:53,100 --> 00:34:56,199
And so really there are two iterations inside a single call to move

715
00:34:56,199 --> 00:34:56,900
entity.

716
00:34:57,000 --> 00:35:00,400
In this case, we would have had two iterations one, that moves the guy

717
00:35:00,400 --> 00:35:04,200
to here and hit this entity, whatever this is, right?

718
00:35:04,900 --> 00:35:07,600
And another that moves it to here and hit this entity which could

719
00:35:07,600 --> 00:35:09,600
technically be a different entity, right?

720
00:35:09,700 --> 00:35:12,100
So this could be entity a and this could be any be.

721
00:35:12,900 --> 00:35:16,100
Now what we want to do, what we want to start to start doing here,

722
00:35:16,100 --> 00:35:18,800
like I was saying is for any of the A's Collision.

723
00:35:19,000 --> 00:35:21,800
We may want to have a response, right?

724
00:35:21,800 --> 00:35:26,600
We may want to do something when a and and whatever are any that we're

725
00:35:26,600 --> 00:35:30,500
moving our, we'll call that eat when he and a Collide, we may want to

726
00:35:30,500 --> 00:35:32,100
do something right?

727
00:35:32,400 --> 00:35:35,800
And then furthermore when Ian be Collide, we may want to do something.

728
00:35:37,000 --> 00:35:41,600
So we're now in a position where we have sort of this this need to do

729
00:35:41,600 --> 00:35:45,200
a dispatch, but we need to do the dispatch from inside of an

730
00:35:45,200 --> 00:35:46,600
iteration, right?

731
00:35:47,500 --> 00:35:50,300
And so the normal way that people handle this is with a call back,

732
00:35:50,600 --> 00:35:50,900
right?

733
00:35:50,900 --> 00:35:55,000
What they do is they come in here because this is, this is the part of

734
00:35:55,000 --> 00:35:58,200
the code, excuse me.

735
00:35:59,700 --> 00:35:59,800
In.

736
00:36:00,000 --> 00:36:01,000
This iteration here.

737
00:36:02,000 --> 00:36:04,700
We would want to do this inside the iteration, right?

738
00:36:04,800 --> 00:36:08,600
So when we do hit entity, this right here here is where we would

739
00:36:08,600 --> 00:36:11,800
process, whatever the entity that was, that you hit.

740
00:36:11,800 --> 00:36:12,800
Here's where we process it.

741
00:36:12,800 --> 00:36:16,000
So what they typically will do here is they do like something where we

742
00:36:16,000 --> 00:36:19,900
do like, you know, process Collision, right?

743
00:36:19,900 --> 00:36:22,900
And they would call out into something that handles the Collision.

744
00:36:23,600 --> 00:36:26,800
Now I don't know if we necessarily want to do that, right?

745
00:36:26,900 --> 00:36:29,800
We might, we might not what I

746
00:36:30,000 --> 00:36:35,500
I do know is that typically it can be a little bit annoying to have it

747
00:36:35,500 --> 00:36:36,900
work in a callback fashion.

748
00:36:38,000 --> 00:36:41,900
Because a lot of times callbacks lose, a certain degree of important

749
00:36:41,900 --> 00:36:43,500
flow control that you might want.

750
00:36:43,700 --> 00:36:46,400
Now this is the first time that this is really come up.

751
00:36:46,500 --> 00:36:49,000
And so I think I'm going to spend a little bit of time talking about

752
00:36:49,000 --> 00:36:51,600
it because we do have plenty of time left and we don't have anything

753
00:36:51,600 --> 00:36:53,000
particular that we need to get done on the Stream.

754
00:36:53,000 --> 00:36:55,000
So now might be a really good time to talk about this.

755
00:36:55,400 --> 00:36:56,500
So let's talk about it.

756
00:36:58,000 --> 00:36:59,600
So let's talk about callbacks

757
00:37:00,600 --> 00:37:01,100
Right.

758
00:37:05,100 --> 00:37:09,400
So basically what we have right now is we have a pretty nice system,

759
00:37:09,500 --> 00:37:13,100
we have a function that's called move entity and anyone who wants to

760
00:37:13,200 --> 00:37:15,700
can call move entity to move their entity, right?

761
00:37:16,000 --> 00:37:19,000
And we can use that in any way that we want, there's no restrictions

762
00:37:19,000 --> 00:37:20,200
on what we can do with it, right?

763
00:37:20,200 --> 00:37:21,300
We can just do it.

764
00:37:21,300 --> 00:37:23,700
And if we have an entity that we want to move, we move it.

765
00:37:23,700 --> 00:37:26,700
If we don't, we don't, you know, and we can also call move entity

766
00:37:26,700 --> 00:37:29,600
multiple times if you wanted to, on a single entity or move different

767
00:37:29,600 --> 00:37:31,900
pieces of an entity with new vanity, we can do all kinds of stuff,

768
00:37:31,900 --> 00:37:32,500
right?

769
00:37:32,900 --> 00:37:34,600
There's all kinds of things we could do.

770
00:37:34,900 --> 00:37:35,500
Mobility.

771
00:37:35,800 --> 00:37:38,400
And the reason we can do that is specifically because it doesn't

772
00:37:38,400 --> 00:37:42,200
really do anything inside it except the one thing, right, all it does

773
00:37:42,200 --> 00:37:45,000
is it moves The Entity to wherever it should have been given the

774
00:37:45,000 --> 00:37:47,900
Collision that's involved in the simulation region.

775
00:37:49,000 --> 00:37:51,900
So a callback introduces something into here.

776
00:37:51,900 --> 00:37:55,300
That's and this is true of any situation where you introduce callbacks

777
00:37:55,700 --> 00:37:59,600
anytime that you have something that does an iteration, right?

778
00:37:59,800 --> 00:38:03,000
So typically there's some kind of complex iteration involved, right?

779
00:38:03,000 --> 00:38:04,700
And we saw the iteration, it's a collision it.

780
00:38:04,800 --> 00:38:05,300
Duration.

781
00:38:05,300 --> 00:38:07,800
But there's other iterations, like, let's say that you had something

782
00:38:07,800 --> 00:38:12,600
like a binary tree or you had something like XML file, right?

783
00:38:12,800 --> 00:38:15,900
And you've written an iteration that iterates over it, but you want to

784
00:38:15,900 --> 00:38:18,300
do something on every node or you want to do something.

785
00:38:18,300 --> 00:38:21,400
When you find certain things or you want to test, it, callbacks are

786
00:38:21,400 --> 00:38:24,500
typical way that you introduce that functionality because you can sort

787
00:38:24,500 --> 00:38:27,500
of pass the call back in right or something like that.

788
00:38:28,300 --> 00:38:31,400
To the function and then the function will sort of do something.

789
00:38:31,400 --> 00:38:33,700
We'll call that and allow that to work.

790
00:38:33,700 --> 00:38:37,700
Now, other languages and also in C++ 11 have slightly better versions

791
00:38:37,700 --> 00:38:39,000
of this, right?

792
00:38:39,000 --> 00:38:45,700
They have they have closures and lambdas, right?

793
00:38:46,000 --> 00:38:46,300
I don't know.

794
00:38:46,300 --> 00:38:48,800
I spell Lambda Lambda.

795
00:38:49,600 --> 00:38:53,600
Yeah, they have other things which allow you to access different

796
00:38:53,600 --> 00:38:56,600
stacks and kind of do some other things that make callbacks a little

797
00:38:56,600 --> 00:38:57,900
more painful but the

798
00:38:58,100 --> 00:38:59,900
bottom line is, callbacks are always kind of

799
00:39:00,200 --> 00:39:03,000
Not really what you would prefer to have happen.

800
00:39:03,300 --> 00:39:07,500
If you could have written the code to, to basically never have to

801
00:39:07,500 --> 00:39:08,800
share anything, right?

802
00:39:09,100 --> 00:39:10,100
And why is that?

803
00:39:10,400 --> 00:39:13,800
Well, the reason for that is actually pretty straightforward.

804
00:39:13,900 --> 00:39:18,100
If I have a piece of code, you know, if I have code a write and I

805
00:39:18,100 --> 00:39:23,100
wrote it, and then I have code B, and I write that right code.

806
00:39:23,100 --> 00:39:24,900
B, is the thing that does the iteration

807
00:39:26,200 --> 00:39:29,200
I want to be able to share, you know, with my I got codes.

808
00:39:29,200 --> 00:39:32,600
See down here, I want to be able to share this iteration with both

809
00:39:32,600 --> 00:39:35,200
code a and code B9 s code C, right?

810
00:39:35,200 --> 00:39:37,800
I want to be able to share probably nobody's bitch.

811
00:39:37,800 --> 00:39:40,600
No, let's call that b and that c, right?

812
00:39:40,900 --> 00:39:41,500
Or better.

813
00:39:41,500 --> 00:39:43,100
Yet code s for shared.

814
00:39:43,600 --> 00:39:46,400
So I have Cody and I have code B, and they both want to use code s,

815
00:39:46,600 --> 00:39:47,100
right?

816
00:39:47,200 --> 00:39:49,900
They want to use that iteration, but they want to do different things

817
00:39:49,900 --> 00:39:51,800
when the iteration happens, right?

818
00:39:53,100 --> 00:39:57,900
So the reason that callbacks are kind of a nasty way of doing this, is

819
00:39:57,900 --> 00:40:02,900
it forces whoever wrote code a right to basically bundle up something,

820
00:40:03,500 --> 00:40:07,500
that's capable of doing whatever it needs to have being done and send

821
00:40:07,500 --> 00:40:09,800
it over to code s, right?

822
00:40:10,800 --> 00:40:14,400
So that code s can actually do whatever the thing is that needs to be

823
00:40:14,400 --> 00:40:14,800
done.

824
00:40:15,300 --> 00:40:20,700
Now, it basically introduces this nasty, coupling of the S code,

825
00:40:20,700 --> 00:40:25,600
understanding the sorts of things you might want to do in A and B,

826
00:40:25,700 --> 00:40:26,300
right?

827
00:40:26,500 --> 00:40:30,200
And preparing it such that it can use whatever this black boxes that

828
00:40:30,200 --> 00:40:31,000
have been passed.

829
00:40:31,500 --> 00:40:34,700
Furthermore it assumes that code a has to go to bundle up all the

830
00:40:34,700 --> 00:40:34,900
stuff.

831
00:40:34,900 --> 00:40:37,600
It might want to do which is kind of cumbersome for it, right?

832
00:40:38,300 --> 00:40:40,500
And it has to sort of have this sort of

833
00:40:40,600 --> 00:40:43,300
Ocean of context and all the things that it might want to do, bundle

834
00:40:43,300 --> 00:40:45,300
them all up and then send it over right?

835
00:40:45,300 --> 00:40:48,400
Really for no reason because if we were only going to write one piece

836
00:40:48,400 --> 00:40:53,400
of code, let's say, we just had code be in CODIS, right, BS.

837
00:40:53,600 --> 00:40:54,700
Okay, let's not say that.

838
00:40:54,700 --> 00:40:57,100
Let's say we had code A and S, right?

839
00:40:57,800 --> 00:41:00,900
Or I could fill the could do code s be put in the other way around.

840
00:41:01,000 --> 00:41:04,800
So let's say we had codes S and B and we were just writing that's all

841
00:41:04,800 --> 00:41:05,400
we were writing.

842
00:41:05,400 --> 00:41:06,500
We never had to share it.

843
00:41:06,700 --> 00:41:09,600
Then what you would do is you just write the iteration code, right?

844
00:41:09,600 --> 00:41:10,400
You just write this.

845
00:41:10,500 --> 00:41:13,700
This and then whatever this code that was going to do, whatever it was

846
00:41:13,700 --> 00:41:16,600
going to do, you'd put it right in here and it could be made nice and

847
00:41:16,600 --> 00:41:19,800
clean and optimal and everything would be great because everybody kind

848
00:41:19,800 --> 00:41:23,500
of knew exactly what was supposed to happen and you didn't have to

849
00:41:23,500 --> 00:41:28,300
have this part where two sides of the program were written without

850
00:41:28,300 --> 00:41:30,900
knowing what the other person was doing or without being able to

851
00:41:30,900 --> 00:41:32,600
really change what the other person was doing.

852
00:41:32,600 --> 00:41:35,100
And that's where you get through this, callback nesses comes in,

853
00:41:36,400 --> 00:41:38,700
So again these things make them a little bit easier because you can

854
00:41:38,700 --> 00:41:41,700
share stack frames or some stuff that you can do in languages that

855
00:41:41,700 --> 00:41:42,900
support other things.

856
00:41:44,600 --> 00:41:46,000
And again, C++ 11 ads.

857
00:41:46,000 --> 00:41:48,300
These guys, I believe, I don't think it.

858
00:41:48,300 --> 00:41:49,200
I don't think it adds these.

859
00:41:49,200 --> 00:41:50,000
I don't really know.

860
00:41:50,100 --> 00:41:53,200
I don't stay up to date with C++ 11 much but

861
00:41:59,400 --> 00:41:59,800
Pretty sure.

862
00:42:00,000 --> 00:42:01,100
Lamb doesn't put it that way.

863
00:42:03,700 --> 00:42:08,000
And so really, if you can avoid it though, it's nicer.

864
00:42:08,000 --> 00:42:11,300
If you can get out of this business altogether and just allow

865
00:42:11,300 --> 00:42:11,700
whatever.

866
00:42:11,700 --> 00:42:13,000
This was it, you're going to write in here.

867
00:42:13,000 --> 00:42:17,400
This, this, this, this s-code the thing that does the Adoration.

868
00:42:18,000 --> 00:42:19,500
It's often times much nicer.

869
00:42:19,500 --> 00:42:24,400
If you can just expose that as a sort of tool that these guys can use

870
00:42:24,400 --> 00:42:26,500
to write an iteration, right?

871
00:42:27,000 --> 00:42:30,300
So, basically, whatever this was doing, if you can package it up as an

872
00:42:30,300 --> 00:42:33,300
iterator that these guys can use then

873
00:42:33,500 --> 00:42:37,800
Are able to sort of reverse that flow instead of having to pass this

874
00:42:37,800 --> 00:42:38,500
into here.

875
00:42:38,700 --> 00:42:42,800
If you can just fragment this iteration code up into basically two

876
00:42:42,800 --> 00:42:43,800
parts, right?

877
00:42:43,800 --> 00:42:46,800
The initialization and the stepping through the iteration.

878
00:42:47,200 --> 00:42:51,200
If you can break that up, that gives you a lot more flexibility to

879
00:42:51,200 --> 00:42:52,200
write the code.

880
00:42:52,300 --> 00:42:55,800
I mean outside anyway that you wanted to without having to deal with

881
00:42:55,800 --> 00:42:59,400
this sort of Black Box, passing kind of nonsense that's just you know

882
00:42:59,400 --> 00:43:01,600
makes life a little more difficult for everybody.

883
00:43:02,700 --> 00:43:05,200
And so, what I would probably recommend doing depending on how we

884
00:43:05,200 --> 00:43:08,000
decide to go forward with this, and I'm not sure exactly how we will

885
00:43:08,900 --> 00:43:09,600
decide to tackle.

886
00:43:09,600 --> 00:43:14,500
It is if we decided to keep calling move entity the way we've been

887
00:43:14,500 --> 00:43:15,100
calling it.

888
00:43:15,300 --> 00:43:19,000
I would probably go ahead and break this iteration out into its

889
00:43:19,000 --> 00:43:19,700
Preamble.

890
00:43:19,700 --> 00:43:22,700
So I just take this portion here, break that out into something that

891
00:43:22,700 --> 00:43:26,200
basically sets up a struct that has these variables in it, right?

892
00:43:26,600 --> 00:43:30,400
And then I would have an iteration call which does this stuff and that

893
00:43:30,400 --> 00:43:32,100
call would just return the hit enter.

894
00:43:32,500 --> 00:43:34,900
And you can call it as many times as you want, and then when you're

895
00:43:34,900 --> 00:43:37,800
done, you would just, you would say finish, right?

896
00:43:37,800 --> 00:43:39,100
And it would do this post amble.

897
00:43:39,700 --> 00:43:43,000
That'd be a really much cleaner way than like introducing a call back

898
00:43:43,000 --> 00:43:43,400
in here.

899
00:43:43,400 --> 00:43:46,300
That does the Collision on the times.

900
00:43:46,300 --> 00:43:47,500
When that happens, right?

901
00:43:48,000 --> 00:43:51,500
So that's one way I could go, I'm just trying to give you the full,

902
00:43:51,500 --> 00:43:53,100
what's in my head when I'm thinking about this?

903
00:43:53,400 --> 00:43:55,700
That's one way I could go and I'm totally fine with that.

904
00:43:55,700 --> 00:43:59,500
That seems like a good way to go, but there's another way I could go,

905
00:44:00,000 --> 00:44:02,200
which is if moving entities.

906
00:44:02,300 --> 00:44:05,400
It's something that's always going to be handled in the central.

907
00:44:05,400 --> 00:44:08,100
Local like a central logical fashion.

908
00:44:08,900 --> 00:44:12,500
So, basically moving into these just, is it something that's allowed

909
00:44:12,500 --> 00:44:13,300
to be done?

910
00:44:13,500 --> 00:44:17,800
Pretty much ever except by the centralized concept of the update?

911
00:44:18,300 --> 00:44:23,700
Then what I could do is totally change how this works entirely and say

912
00:44:23,800 --> 00:44:27,500
when you do your update call, you are not allowed to move your enemy.

913
00:44:27,500 --> 00:44:29,100
You don't get to call move entity.

914
00:44:29,100 --> 00:44:29,900
What you do.

915
00:44:29,900 --> 00:44:32,200
Is you latch in what

916
00:44:32,300 --> 00:44:35,400
You want your acceleration to be because that's what your control is,

917
00:44:35,400 --> 00:44:35,900
right?

918
00:44:36,100 --> 00:44:40,300
You get to set your acceleration and then once you've set it, the

919
00:44:40,300 --> 00:44:43,600
movement will happen automatically somewhere down the line, right?

920
00:44:44,700 --> 00:44:45,800
So that's another way I could go.

921
00:44:45,800 --> 00:44:48,700
And if that's the way I could go, then this doesn't become a callback

922
00:44:48,700 --> 00:44:51,600
situation because there's only one thing that can ever happen in here

923
00:44:51,600 --> 00:44:53,600
which is, this is the place we're dispatching.

924
00:44:54,100 --> 00:44:56,300
Entity collisions actually gets processed, but it's always going to be

925
00:44:56,300 --> 00:44:57,600
process exactly the same way.

926
00:44:57,600 --> 00:44:59,800
So we don't have a situation where we've got

927
00:45:00,000 --> 00:45:00,900
Voice that out.

928
00:45:01,600 --> 00:45:07,000
Now to me just on the whole that kind of sounds like the right way to

929
00:45:07,000 --> 00:45:07,200
go.

930
00:45:07,200 --> 00:45:09,600
And the reason that I think that kind of sounds like the right way to

931
00:45:09,600 --> 00:45:14,000
go is because in the future we don't know exactly how we might want to

932
00:45:14,000 --> 00:45:15,900
do our actual updating.

933
00:45:16,700 --> 00:45:20,000
We might want to try and do some simultaneous Collision solving where

934
00:45:20,000 --> 00:45:23,000
like multiple people are moving at the same time and we find their

935
00:45:23,000 --> 00:45:24,000
intersection points.

936
00:45:24,000 --> 00:45:24,800
That's our stuff, we met?

937
00:45:24,800 --> 00:45:26,300
Who knows what we might want to do.

938
00:45:26,900 --> 00:45:29,800
And so what I probably don't want to do.

939
00:45:30,000 --> 00:45:31,300
Do going down.

940
00:45:31,400 --> 00:45:32,500
You know what?

941
00:45:32,500 --> 00:45:35,100
I probably don't want to establish as an early on policy at this

942
00:45:35,100 --> 00:45:39,300
point, is the concept that entity is all called new vanity themselves.

943
00:45:39,700 --> 00:45:42,300
I think I might want to take that out of their hands and say spatial.

944
00:45:42,300 --> 00:45:46,200
This is just an inherent aspect of gaming, we will handle it in a

945
00:45:46,200 --> 00:45:47,400
centralized fashion.

946
00:45:47,600 --> 00:45:49,800
You aren't really going to do that, right?

947
00:45:49,800 --> 00:45:53,300
So we're going to do that for you and basically like we'll just have a

948
00:45:53,300 --> 00:45:56,500
flag and then the flag which says, you know, I am a movie, I'm an

949
00:45:56,500 --> 00:45:59,800
entity that can move or something and that.

950
00:46:00,000 --> 00:46:02,800
Or you know, maybe the only have to have a flag, it's just whether if

951
00:46:02,800 --> 00:46:07,500
acceleration was set, then it goes right and to me just thinking it

952
00:46:07,500 --> 00:46:10,500
through, I feel like that just feels a little bit better to me.

953
00:46:10,700 --> 00:46:13,000
It feels a little bit more, like probably what should happen.

954
00:46:13,200 --> 00:46:15,900
So I think that's what I'm going to start with and then if it turns

955
00:46:15,900 --> 00:46:20,400
out that that doesn't work then we'll we'll sort of address it a

956
00:46:20,400 --> 00:46:21,400
little bit further on.

957
00:46:22,700 --> 00:46:24,300
So for now, I think that's what I'll do.

958
00:46:25,200 --> 00:46:26,800
What will sort of say here is?

959
00:46:26,800 --> 00:46:29,700
Maybe we'll just say when we're doing our entity update for now.

960
00:46:29,700 --> 00:46:32,100
Again, this, you know, not at all set in stone.

961
00:46:32,500 --> 00:46:37,700
What will kind of do is say, let's set this move spec and this DDP

962
00:46:37,700 --> 00:46:42,100
here, let's go ahead and say that those are going to be things that

963
00:46:42,100 --> 00:46:46,600
are sort of, you know, are sort of set in the end of these update.

964
00:46:46,600 --> 00:46:50,300
And then the actual movement call is not something that the end of the

965
00:46:50,300 --> 00:46:51,500
actually gets to deal with.

966
00:46:51,600 --> 00:46:52,400
That's something that that

967
00:46:52,500 --> 00:46:54,000
Happens somewhere down the line.

968
00:46:54,000 --> 00:46:56,800
So, like this stuff right here, that doesn't get to happen.

969
00:46:57,400 --> 00:47:01,400
Instead, what happens is, is this moose back up here, right?

970
00:47:02,500 --> 00:47:04,200
We'll set that to the default move Spectrum.

971
00:47:04,200 --> 00:47:09,600
Now, like so, and then the Moose back, we'll get set in here for each

972
00:47:09,600 --> 00:47:12,400
individual entity, and then this doesn't actually get to happen.

973
00:47:12,700 --> 00:47:15,800
So the con hero DDP, excuse me,

974
00:47:21,800 --> 00:47:23,000
becomes that GDP.

975
00:47:24,200 --> 00:47:24,500
Right?

976
00:47:24,500 --> 00:47:29,600
So this starts out with no acceleration the con hero DDP that gets put

977
00:47:29,600 --> 00:47:30,100
in there.

978
00:47:30,400 --> 00:47:31,300
Actually, I guess.

979
00:47:31,900 --> 00:47:34,700
And the entity DZ would also be that as well.

980
00:47:36,400 --> 00:47:37,200
I would say.

981
00:47:37,200 --> 00:47:38,700
No, that's that, that's discontinuous.

982
00:47:38,700 --> 00:47:39,300
So, that's fine.

983
00:47:39,500 --> 00:47:39,800
Alright.

984
00:47:39,800 --> 00:47:41,400
Well, we'll talk about that later.

985
00:47:41,400 --> 00:47:42,700
This is our stupid jump code.

986
00:47:42,700 --> 00:47:47,200
That's shouldn't even be in here, but yeah, it's lingering.

987
00:47:48,000 --> 00:47:48,400
So, yeah.

988
00:47:48,400 --> 00:47:50,800
So instead of calling move entity, that move entity called will get

989
00:47:50,800 --> 00:47:53,300
pushed out to the bottom, right will be do that here.

990
00:47:54,300 --> 00:47:57,800
and what we said we're going to do is we're going to say that this

991
00:47:57,800 --> 00:47:59,900
right here just sets what we want, the

992
00:48:00,000 --> 00:48:02,900
Relation to be and that's it, right?

993
00:48:04,000 --> 00:48:07,000
Similarly, the rest of these guys, don't get to do that either.

994
00:48:08,400 --> 00:48:12,400
They all have to do the exact same thing and I'm also wondering why we

995
00:48:12,400 --> 00:48:13,500
even bother having these?

996
00:48:13,500 --> 00:48:17,400
Well, I don't know why I have like these calls separated out this

997
00:48:17,400 --> 00:48:19,100
thing, like kind of useless functions to me.

998
00:48:19,100 --> 00:48:21,800
These should just be inside the switch statement, and this switch

999
00:48:21,800 --> 00:48:23,900
statement should be out here in the handmade entity.

1000
00:48:24,200 --> 00:48:28,400
But you know what you gonna do sometimes, you know?

1001
00:48:28,600 --> 00:48:30,600
Yeah, you can't win them all.

1002
00:48:31,600 --> 00:48:33,600
We'll think about how that structure little bit later on.

1003
00:48:34,200 --> 00:48:37,000
So we want to do here is we want to be able to sort of have this

1004
00:48:37,000 --> 00:48:39,000
worked out and maybe you know what I could do to?

1005
00:48:39,000 --> 00:48:40,900
I could sort of say that that move spec.

1006
00:48:43,200 --> 00:48:44,300
No, no, I'm not gonna do that.

1007
00:48:44,800 --> 00:48:47,800
Alright, so when I update the familiar wants to be able to set a moose

1008
00:48:47,800 --> 00:48:51,500
back as well and it's going to have to set its GDP as well.

1009
00:48:51,500 --> 00:48:52,500
So I need a convenient way.

1010
00:48:52,500 --> 00:48:56,000
If for as long as I am keeping these guys out here, you can see why I

1011
00:48:56,000 --> 00:48:58,600
don't love having these out and separate functions for no apparent

1012
00:48:58,600 --> 00:48:59,000
reason.

1013
00:48:59,300 --> 00:49:03,100
I can't just go ahead and set these things that I want to set.

1014
00:49:04,000 --> 00:49:04,800
Which is kind of annoying.

1015
00:49:04,800 --> 00:49:07,400
So I might just go ahead and just stick this in here.

1016
00:49:07,800 --> 00:49:10,400
Let's go ahead and say that we're going to go ahead and there we go.

1017
00:49:11,100 --> 00:49:12,700
So now I can just set my moves.

1018
00:49:12,700 --> 00:49:16,800
Back directly I can set my DDP directly, of course Source don't have a

1019
00:49:16,800 --> 00:49:19,600
DDP and get rid of these guys that's gone.

1020
00:49:20,200 --> 00:49:23,100
We can get rid of this, that's gone.

1021
00:49:23,300 --> 00:49:25,900
So see update familiar.

1022
00:49:26,200 --> 00:49:26,700
There we go.

1023
00:49:27,400 --> 00:49:27,800
Bye.

1024
00:49:30,200 --> 00:49:33,500
And that actually makes this a lot a lot nicer to work with.

1025
00:49:33,900 --> 00:49:36,000
And then I just go ahead and pull this out and this would be the

1026
00:49:36,000 --> 00:49:38,600
routine that basically holds all of our update calls.

1027
00:49:39,100 --> 00:49:41,200
Again, A lot of people are always like, oh, you got to pull it out

1028
00:49:41,200 --> 00:49:44,200
into a function but there's no difference between a function and just

1029
00:49:44,200 --> 00:49:45,300
a case statement, right?

1030
00:49:45,300 --> 00:49:48,900
You still have a file that lists all these things right whether their

1031
00:49:48,900 --> 00:49:50,600
functions are inside a switch statement.

1032
00:49:50,600 --> 00:49:53,500
But if you put them inside a switch statement, you have the option of

1033
00:49:53,500 --> 00:49:57,800
having the Preamble stack be shared which is just so much nicer to

1034
00:49:57,800 --> 00:49:59,100
work with, right?

1035
00:50:00,600 --> 00:50:01,100
Yeah.

1036
00:50:01,200 --> 00:50:03,800
So I don't tend to agree with people who

1037
00:50:04,000 --> 00:50:08,600
That you know, it often just seems like a really bad idea but, you

1038
00:50:08,600 --> 00:50:10,700
know, I guess everyone has their preferences.

1039
00:50:10,700 --> 00:50:11,800
So what do you do?

1040
00:50:12,600 --> 00:50:14,900
So I guess what I'll do is, I'm just going to go ahead and pull this

1041
00:50:14,900 --> 00:50:15,300
out.

1042
00:50:15,300 --> 00:50:17,500
Going to put, put these things in there, and I'm going to pull it out.

1043
00:50:17,500 --> 00:50:20,000
So that all of our entity update is just in one file, and it's

1044
00:50:20,000 --> 00:50:21,700
basically a set of case statements.

1045
00:50:21,700 --> 00:50:24,400
One for each guy for now.

1046
00:50:24,700 --> 00:50:26,800
That's probably not how we will do it, eventually, because I've got

1047
00:50:26,800 --> 00:50:30,100
sort of bigger plans for how I want any of these to decompose, but

1048
00:50:30,100 --> 00:50:31,200
that's a separate issue.

1049
00:50:31,700 --> 00:50:32,100
All right?

1050
00:50:32,100 --> 00:50:33,800
So now that this guy's in here, we

1051
00:50:33,900 --> 00:50:37,800
Can just have the Moose affect the set directly and the DDP will also

1052
00:50:37,800 --> 00:50:38,900
be set directly.

1053
00:50:39,600 --> 00:50:42,600
In fact, we can just delete that and now it works exactly.

1054
00:50:42,600 --> 00:50:43,700
As we thought it would.

1055
00:50:44,000 --> 00:50:48,000
I believe, let's go ahead and compile that process Collision.

1056
00:50:48,000 --> 00:50:48,900
That's not a real thing.

1057
00:50:51,000 --> 00:50:57,900
Let's see, more than one vote, and made entity, that con hero.

1058
00:50:58,500 --> 00:50:59,800
Okay, so now we need to do are actually

1059
00:51:00,000 --> 00:51:02,200
Call, we've got some Regional entity.

1060
00:51:02,200 --> 00:51:06,900
We've got our dt4 frame, we've got the moves back and so now we just

1061
00:51:06,900 --> 00:51:09,600
need to change that to the regular GDP and then I think we're good to

1062
00:51:09,600 --> 00:51:10,500
go, right?

1063
00:51:10,500 --> 00:51:11,500
Am I right about that?

1064
00:51:14,000 --> 00:51:14,700
What happened there?

1065
00:51:16,300 --> 00:51:19,100
Move entity non-spatial right.

1066
00:51:19,300 --> 00:51:20,100
Got about that.

1067
00:51:20,700 --> 00:51:23,900
So what we do have to do here as well as we have, to make sure that

1068
00:51:23,900 --> 00:51:27,300
we're actually only moving people who should be moved, which actually

1069
00:51:27,300 --> 00:51:30,500
is not to ownerís because really, that's just

1070
00:51:34,000 --> 00:51:37,000
50 DPX or GDP why, right?

1071
00:51:37,000 --> 00:51:40,600
If there was actually any movement that someone actually wanted, that

1072
00:51:40,600 --> 00:51:42,600
should be sufficient to tell us, right?

1073
00:51:42,800 --> 00:51:43,000
Yes.

1074
00:51:43,000 --> 00:51:43,500
I think so.

1075
00:51:44,100 --> 00:51:45,200
That would be my assumption.

1076
00:51:45,300 --> 00:51:45,600
Yeah.

1077
00:51:45,900 --> 00:51:48,400
And that does look like boo.

1078
00:51:48,700 --> 00:51:49,600
What's happening there?

1079
00:51:51,900 --> 00:51:52,800
What's going on there?

1080
00:51:52,800 --> 00:51:54,800
I've got, I've still got, I've got something.

1081
00:51:55,800 --> 00:51:56,400
There we go.

1082
00:51:57,300 --> 00:51:58,500
That should not be happening.

1083
00:52:00,700 --> 00:52:02,300
TT moose back.

1084
00:52:03,000 --> 00:52:07,000
Oh, and you know what to it's actually whether their velocity is, is

1085
00:52:07,000 --> 00:52:11,600
there, that's right.

1086
00:52:11,600 --> 00:52:15,800
It's, whether they have velocity or they have acceleration, not just

1087
00:52:15,800 --> 00:52:17,100
whether they have acceleration.

1088
00:52:17,500 --> 00:52:20,000
Although really again, like, I don't know if maybe we should have

1089
00:52:20,000 --> 00:52:23,100
something, this is a little bit of a weird way to see whether it

1090
00:52:23,100 --> 00:52:25,100
entities should be movable or not.

1091
00:52:25,700 --> 00:52:28,600
We might want something a little, a little smarter than that, but I

1092
00:52:28,600 --> 00:52:29,700
don't know for now.

1093
00:52:30,700 --> 00:52:33,200
I suppose it's okay, we'll see.

1094
00:52:33,700 --> 00:52:35,200
Gotta get a little further down the line.

1095
00:52:36,800 --> 00:52:37,900
So that's a little weird.

1096
00:52:37,900 --> 00:52:43,000
That guy doesn't look like we had for our sword.

1097
00:52:43,000 --> 00:52:45,900
There, it didn't look like our sword was properly.

1098
00:52:46,100 --> 00:52:48,600
Using its distance remaining.

1099
00:52:49,400 --> 00:52:50,400
Let's see here.

1100
00:52:50,800 --> 00:52:52,700
So if it says judge make any non spatial.

1101
00:52:52,700 --> 00:52:55,900
So yeah we also now that I think about it, we're once something gets

1102
00:52:55,900 --> 00:53:00,300
made non-spatial, this would move them back into spatial NE, so that's

1103
00:53:00,400 --> 00:53:01,200
Probably not good either.

1104
00:53:01,200 --> 00:53:03,400
So we may still need to check that now.

1105
00:53:03,400 --> 00:53:07,600
I think so basically we may have to actually we may have to actually

1106
00:53:07,600 --> 00:53:11,700
just say that we're going to still have am.

1107
00:53:13,400 --> 00:53:16,500
I check on the flags there and then only spatial things will actually

1108
00:53:16,500 --> 00:53:17,300
get to do that.

1109
00:53:17,400 --> 00:53:18,400
So we'll do that.

1110
00:53:18,400 --> 00:53:18,700
We'll do.

1111
00:53:18,700 --> 00:53:22,700
If is set annatee non-spatial right?

1112
00:53:22,700 --> 00:53:24,600
Then it can go ahead and do it smooth.

1113
00:53:25,000 --> 00:53:25,600
Let me see how it.

1114
00:53:25,600 --> 00:53:27,600
Let me see if that's a little more sensible.

1115
00:53:28,700 --> 00:53:31,000
I sort of understand why this guy can go forever, though.

1116
00:53:31,300 --> 00:53:34,000
It doesn't make a whole lot of sense for me, shouldn't his distance.

1117
00:53:34,000 --> 00:53:37,200
I guess I must have when I cut and pasted the code in there.

1118
00:53:37,400 --> 00:53:41,600
I must have not updated, everything distance traveled equals The

1119
00:53:41,700 --> 00:53:43,000
Entity po.

1120
00:53:43,200 --> 00:53:43,700
Right.

1121
00:53:43,700 --> 00:53:47,400
Because now we're since we moved we were counting on the fact that we

1122
00:53:47,400 --> 00:53:50,700
knew how far it had moved since the last frame, but now we don't

1123
00:53:50,700 --> 00:53:54,500
actually know that anymore so that that is the one place where we were

1124
00:53:54,500 --> 00:53:57,800
counting on the fact then and so far anyway, then entity would

1125
00:53:57,800 --> 00:53:59,800
actually get information about that.

1126
00:54:00,900 --> 00:54:05,000
But we already had a bug of that form, which was that we essentially

1127
00:54:05,000 --> 00:54:09,100
didn't handle the fact that inside a move, it shouldn't have been able

1128
00:54:09,100 --> 00:54:12,300
to be allowed to move further than when the distance traveled timer

1129
00:54:12,300 --> 00:54:13,200
would have happened.

1130
00:54:13,500 --> 00:54:17,100
So what we really probably want to do is handle this in a more robust

1131
00:54:17,100 --> 00:54:20,900
way where the Collision routines actually understand the concept of a

1132
00:54:20,900 --> 00:54:24,800
limit to the motion, and we'll stop it at that limit.

1133
00:54:24,900 --> 00:54:26,100
So I'm going to go ahead and say that.

1134
00:54:26,100 --> 00:54:29,700
That's something we can do tomorrow and this will be are important

1135
00:54:29,700 --> 00:54:29,800
too.

1136
00:54:30,000 --> 00:54:38,300
Do for tomorrow, add the ability in the Collision routines, to

1137
00:54:38,300 --> 00:54:45,900
understand a movement limit for, you know, a foreign entity.

1138
00:54:46,600 --> 00:54:53,700
And then update this routine to use that to know when to kill the

1139
00:54:53,700 --> 00:54:54,400
sword.

1140
00:54:54,800 --> 00:54:55,800
Yeah, because that was a bug.

1141
00:54:55,800 --> 00:54:56,800
We already had.

1142
00:54:57,200 --> 00:54:59,300
That's this to do down here, right?

1143
00:55:00,000 --> 00:55:04,100
And so we kind of want to go ahead and actually fix that so that it's

1144
00:55:04,100 --> 00:55:05,200
not going to do it that way anymore.

1145
00:55:06,500 --> 00:55:07,700
That's what we'll start with tomorrow.

1146
00:55:08,200 --> 00:55:10,200
And then, we can also finish our Collision stuff.

1147
00:55:13,500 --> 00:55:14,900
Figure out how we want to do that.

1148
00:55:15,000 --> 00:55:16,400
We'll move this guy out as well.

1149
00:55:17,200 --> 00:55:18,700
I think I want to put the two in here.

1150
00:55:20,900 --> 00:55:28,100
Move this out into handmade entity dot CPP and then that way we'll

1151
00:55:28,100 --> 00:55:31,400
have a special place where all of our MD updates live just so they're

1152
00:55:31,400 --> 00:55:33,600
easy to spot and understand.

1153
00:55:33,900 --> 00:55:35,400
All right, so that's about it.

1154
00:55:35,400 --> 00:55:40,700
We can go ahead and go to the go to the Q&A.

1155
00:55:41,500 --> 00:55:44,800
I don't know how it's been going over there on the chat, but I guess

1156
00:55:44,800 --> 00:55:45,900
now we will find out.

1157
00:55:45,900 --> 00:55:48,700
Please prefix, your colon, your quest, your colons priest.

1158
00:55:49,000 --> 00:55:50,400
Please prefix York,

1159
00:55:50,500 --> 00:55:56,700
students with q: or are prefix or Colin's, with Q your choice, and

1160
00:55:58,100 --> 00:56:01,600
Yeah, well actually I guess you have to prefix or questions with Q: if

1161
00:56:01,600 --> 00:56:04,700
you want me to see them and please keep them the stuff that we did on

1162
00:56:04,700 --> 00:56:06,100
today's stream on a previous stream.

1163
00:56:06,100 --> 00:56:08,500
If you want to ask off-topic questions, do that during the pre stream.

1164
00:56:08,500 --> 00:56:12,100
Just come 50 minutes before any scheduled start time and we take off

1165
00:56:12,100 --> 00:56:12,900
topic questions then.

1166
00:56:43,100 --> 00:56:43,700
Handmade here.

1167
00:56:43,700 --> 00:56:46,900
How will Collision be done with moving background such as mazes and

1168
00:56:46,900 --> 00:56:47,800
moving tiles?

1169
00:56:47,900 --> 00:56:50,800
Or that won't be in this game actually.

1170
00:56:50,900 --> 00:56:53,300
So the code already works with that.

1171
00:56:56,200 --> 00:56:59,400
I guess, I don't know that we have any way to demonstrate it right

1172
00:56:59,400 --> 00:56:59,800
now.

1173
00:57:00,100 --> 00:57:06,600
I suppose what we could do if we wanted to write is is

1174
00:57:08,000 --> 00:57:09,900
so here's what I'd say.

1175
00:57:09,900 --> 00:57:13,300
So right now, we know when that happens, we just don't do anything

1176
00:57:13,300 --> 00:57:15,800
about it, and that's the thing we need to do anyway, for other

1177
00:57:15,800 --> 00:57:18,500
reasons, just for Collision robustness because right now, we would get

1178
00:57:18,500 --> 00:57:21,500
into situations because of floating point in this where you could get

1179
00:57:21,500 --> 00:57:23,600
stuck in an entity, right?

1180
00:57:23,700 --> 00:57:27,100
Because we don't handle like, I don't, I can't quite demo it right

1181
00:57:27,100 --> 00:57:27,200
now.

1182
00:57:27,200 --> 00:57:29,800
There you go, I've got it now, right?

1183
00:57:30,200 --> 00:57:33,600
We're, you can get locked in an entity because floating Point,

1184
00:57:33,600 --> 00:57:37,700
Precision wise, when we do our Collision detection, we don't try to

1185
00:57:37,900 --> 00:57:41,700
You we don't try to ensure that we actually put you outside of things

1186
00:57:41,800 --> 00:57:44,700
and if you don't do that you will always get in situations where you

1187
00:57:44,700 --> 00:57:46,600
get like janky Collision Behavior.

1188
00:57:48,300 --> 00:57:52,800
Once we add the code to do that, it will be pretty easy for us to

1189
00:57:52,800 --> 00:57:56,000
handle moving backgrounds because we already support Collision

1190
00:57:56,000 --> 00:57:57,800
detecting with moving backgrounds.

1191
00:57:58,200 --> 00:58:02,600
That would already work the problem right now is we just don't respond

1192
00:58:02,600 --> 00:58:02,900
to them.

1193
00:58:02,900 --> 00:58:04,700
So when they hit you,

1194
00:58:05,500 --> 00:58:09,500
They would stop instead of you getting pushed, which is probably what

1195
00:58:09,500 --> 00:58:10,200
you wanted.

1196
00:58:10,400 --> 00:58:14,800
And so, as our Collision, routines become more sophisticated, we

1197
00:58:14,800 --> 00:58:17,700
should just hit the moving, background stuff will just should just

1198
00:58:17,700 --> 00:58:18,000
work.

1199
00:58:18,100 --> 00:58:21,000
It's not very hard to handle, but that's really the problem right now.

1200
00:58:21,000 --> 00:58:24,000
Detection is easy, but handling it, we haven't done yet.

1201
00:58:24,000 --> 00:58:28,000
So we would need to do something that just when at two objects

1202
00:58:28,000 --> 00:58:31,800
Collide, we just need a notion that one of them would take priority.

1203
00:58:31,800 --> 00:58:35,100
So when that background object, it's you, we just need

1204
00:58:35,200 --> 00:58:38,800
Some kind of a notion that says it's has the right of way.

1205
00:58:38,800 --> 00:58:41,400
So you know it will push you, right?

1206
00:58:43,000 --> 00:58:44,800
And we should be able to handle that pretty easily.

1207
00:58:45,000 --> 00:58:47,100
There are a bunch of things, you have to watch out for when you do

1208
00:58:47,100 --> 00:58:47,700
support that.

1209
00:58:47,700 --> 00:58:49,100
Like what do you want to do?

1210
00:58:49,300 --> 00:58:54,700
If somebody is like pushing, you know, if a pushing object pushes you

1211
00:58:54,700 --> 00:58:58,400
up against something, what do you want to do, you know?

1212
00:58:58,400 --> 00:59:01,400
Does it lock up, doesn't stop at that point and you can scoot out of

1213
00:59:01,400 --> 00:59:03,400
it or you know, who knows what happens?

1214
00:59:03,400 --> 00:59:04,000
Exactly.

1215
00:59:05,100 --> 00:59:07,500
But, you know, those are the kinds of things that we have to decide.

1216
00:59:07,500 --> 00:59:10,300
Probably more based on gameplay like what we want to have happen.

1217
00:59:11,000 --> 00:59:13,400
So it is a little bit of work to handle those things but it's not like

1218
00:59:13,400 --> 00:59:17,300
the end of the world especially since the bar is pretty low like most

1219
00:59:17,300 --> 00:59:19,500
games, kind of flail pretty miserably handling.

1220
00:59:19,500 --> 00:59:20,500
A lot of those things.

1221
00:59:20,700 --> 00:59:23,300
You always see all these weird bugs and stuff but we should be able to

1222
00:59:23,300 --> 00:59:25,300
do a pretty good job of handling that once we get there.

1223
00:59:37,800 --> 00:59:40,300
Why don't we use C instead of CPP?

1224
00:59:40,500 --> 00:59:45,100
Because we do use, we don't we try not to use too much random C++ this

1225
00:59:45,100 --> 00:59:47,000
because I'm not fond of it.

1226
00:59:47,300 --> 00:59:48,000
But we do.

1227
00:59:48,000 --> 00:59:50,000
It actually is not see.

1228
00:59:50,000 --> 00:59:55,600
It's actually C++ so you can see for example you know that would not

1229
00:59:55,600 --> 00:59:59,800
compiled in C so we do use some C++, just not very much.

1230
01:00:05,000 --> 01:00:06,000
That's a good question.

1231
01:00:06,200 --> 01:00:08,800
Someone just asked when I started enums.

1232
01:00:08,800 --> 01:00:09,800
Why did I start with one?

1233
01:00:09,800 --> 01:00:10,400
Shifted up one?

1234
01:00:10,400 --> 01:00:14,700
Instead of one shift of zero because I was not paying attention.

1235
01:00:15,000 --> 01:00:17,200
There's no reason that could totally just be that.

1236
01:00:18,300 --> 01:00:23,800
Yeah, that just totally totally asleep at the switch.

1237
01:00:27,500 --> 01:00:29,700
How big are the source files getting?

1238
01:00:29,700 --> 01:00:32,400
Are you feeling overwhelmed by the size yet?

1239
01:00:35,400 --> 01:00:40,100
Overwhelmed by the size of the source code, as it currently stands is

1240
01:00:40,100 --> 01:00:40,500
the source.

1241
01:00:40,500 --> 01:00:43,000
Code is like, Wicked, tiny, isn't it?

1242
01:00:44,500 --> 01:00:45,200
I don't know if there is there.

1243
01:00:45,200 --> 01:00:50,300
A lines, counting groups lines bok-bok.

1244
01:00:50,300 --> 01:00:51,600
Do we have any line counting program?

1245
01:00:51,600 --> 01:00:54,900
We don't have a line cutting program count lines.

1246
01:00:57,100 --> 01:00:57,700
Region.

1247
01:00:58,500 --> 01:01:06,400
So if I select this whole thing and do count lines region oh well I

1248
01:01:06,400 --> 01:01:08,900
guess it says the bottom 117.

1249
01:01:10,400 --> 01:01:14,000
428, I don't know, I want will have to download something that counts

1250
01:01:14,000 --> 01:01:19,300
lines so we can actually see how many there are, but I mean, just

1251
01:01:19,300 --> 01:01:23,100
looking at the size of the code, just even ignoring the line count.

1252
01:01:23,200 --> 01:01:25,500
But I mean, look at, look at there's nothing here.

1253
01:01:25,800 --> 01:01:26,600
It's like

1254
01:01:27,800 --> 01:01:31,700
It's like 150k a code or some like it's hard.

1255
01:01:31,700 --> 01:01:32,900
There's like no code here.

1256
01:01:32,900 --> 01:01:36,700
This is like so tiny and like a huge portion of that is the random

1257
01:01:36,700 --> 01:01:38,600
number table, right?

1258
01:01:40,100 --> 01:01:43,500
And the win32 platform code so there's there's like hardly know code

1259
01:01:43,500 --> 01:01:44,900
at all at this is like

1260
01:01:45,900 --> 01:01:47,100
This is so tiny.

1261
01:01:56,100 --> 01:01:59,100
What happens when you somehow glitch through a wall?

1262
01:01:59,100 --> 01:02:00,800
Will the game crash?

1263
01:02:04,200 --> 01:02:05,700
It certainly wouldn't crash.

1264
01:02:05,700 --> 01:02:08,400
You just get stuck in the wall at the moment.

1265
01:02:08,400 --> 01:02:11,800
You mean like I mean obviously in the final version of our stuff we

1266
01:02:11,800 --> 01:02:16,000
won't allow you to glitch through a wall at the moment.

1267
01:02:16,000 --> 01:02:16,600
Nothing would happen.

1268
01:02:16,600 --> 01:02:20,000
Other than you getting stuck behind the wall but you could probably

1269
01:02:20,000 --> 01:02:22,200
try to click your way through the wall again, I suppose.

1270
01:02:33,400 --> 01:02:35,300
Oh no heavy moderation tonight.

1271
01:02:36,700 --> 01:02:38,000
I'm sorry about that guys.

1272
01:02:38,100 --> 01:02:39,400
Do we need more moderators?

1273
01:02:39,400 --> 01:02:40,600
Maybe we need more moderators.

1274
01:02:40,600 --> 01:02:43,800
I don't want you guys to be too swamped if you need more help.

1275
01:02:43,800 --> 01:02:45,900
Let me know who you would like me to add.

1276
01:02:48,200 --> 01:02:49,300
How many lines are written so far?

1277
01:02:49,300 --> 01:02:50,100
Yeah, I don't know.

1278
01:02:50,100 --> 01:02:51,000
That's the thing.

1279
01:02:51,200 --> 01:02:52,700
We need like a line counting program.

1280
01:02:52,700 --> 01:02:54,300
I'll look up a look one up.

1281
01:02:54,900 --> 01:02:56,300
There isn't one on this machine.

1282
01:02:56,300 --> 01:02:58,700
I don't think so.

1283
01:02:59,100 --> 01:02:59,800
Yeah, I don't.

1284
01:03:00,500 --> 01:03:02,300
I don't know, at the moment but not many.

1285
01:03:02,300 --> 01:03:04,900
I mean, like I said, this is very tiny for me.

1286
01:03:04,900 --> 01:03:06,000
This is not a lot of code.

1287
01:03:13,400 --> 01:03:16,700
In what situation would you prefer callbacks to a huge switch case

1288
01:03:16,700 --> 01:03:17,200
block?

1289
01:03:27,000 --> 01:03:29,400
I can't think of any offhand.

1290
01:03:32,000 --> 01:03:34,700
There probably is a time.

1291
01:03:34,800 --> 01:03:36,300
I just can't think of it off hand.

1292
01:03:36,800 --> 01:03:41,200
Switch case blocks are almost always far superior to callbacks in my

1293
01:03:41,200 --> 01:03:41,900
experience.

1294
01:03:46,000 --> 01:03:49,700
They're better in almost every way you can possibly measure in terms

1295
01:03:49,700 --> 01:03:55,800
of code quality like in terms of like flexibility of the code ease of

1296
01:03:55,800 --> 01:03:59,500
reading ease of use ease of compression like they're better for just

1297
01:03:59,500 --> 01:04:02,800
about everything but there may be some things.

1298
01:04:02,800 --> 01:04:08,300
I'm trying to think if there's some things so one reason why you one

1299
01:04:08,300 --> 01:04:10,700
place where I can think just trying to think where you might have a

1300
01:04:10,700 --> 01:04:13,900
problem with them it's like if you're trying to isolate platforms from

1301
01:04:13,900 --> 01:04:14,500
each other,

1302
01:04:15,000 --> 01:04:18,700
What you don't want your win32 code, in your Apple Mac OS, X code, and

1303
01:04:18,700 --> 01:04:19,600
stuff intermingling.

1304
01:04:19,600 --> 01:04:21,800
Then that's a place where you would want to keep those files

1305
01:04:21,800 --> 01:04:22,900
segregated, right?

1306
01:04:22,900 --> 01:04:26,400
And you wouldn't be mixing things in with a switch statement.

1307
01:04:26,400 --> 01:04:28,000
So, you know, I know something like that.

1308
01:04:28,000 --> 01:04:30,300
I tend to always architect those for the platform layer of stuff,

1309
01:04:30,300 --> 01:04:31,000
flows forward.

1310
01:04:31,000 --> 01:04:34,700
But but we've already got like an example of a call back in there for

1311
01:04:34,700 --> 01:04:37,500
the debug loader code, so that's an example.

1312
01:04:37,700 --> 01:04:38,900
But yeah, it's not often.

1313
01:04:38,900 --> 01:04:40,000
I do, I think

1314
01:04:45,100 --> 01:04:46,200
I'm still stuck by the way.

1315
01:04:48,500 --> 01:04:50,500
So there's a little bit of nose blowing going on.

1316
01:04:55,700 --> 01:04:59,000
Basically my opinion on switch statements is that somewhere around the

1317
01:04:59,000 --> 01:05:04,500
object oriented apocalypse, you know in the 90s everyone kind of got

1318
01:05:04,500 --> 01:05:07,000
it in their head that like for some reason like objects that

1319
01:05:07,000 --> 01:05:09,600
inheritance and virtual functions and all this are like a good idea

1320
01:05:09,600 --> 01:05:12,000
and switch statements.

1321
01:05:12,000 --> 01:05:16,900
Got this sort of bad rap, but the opposite is really true.

1322
01:05:16,900 --> 01:05:22,300
Like the switch statement is the superior method of those two and so

1323
01:05:22,300 --> 01:05:25,400
almost, every place that people use like a virtual function, they

1324
01:05:25,400 --> 01:05:25,600
should

1325
01:05:25,800 --> 01:05:31,600
Using a switch statement in my opinion and you know like you know

1326
01:05:31,600 --> 01:05:34,800
upfront Partners would will get mad at me for saying that but I have

1327
01:05:34,800 --> 01:05:41,500
written the code both ways and I am totally happy to go to the

1328
01:05:41,500 --> 01:05:44,300
mattresses on that one because it's just true.

1329
01:05:44,300 --> 01:05:48,200
Like it is far superior code in the switch statement, there's so much

1330
01:05:48,200 --> 01:05:51,400
more stuff you can do with a switch statement then you can do with

1331
01:05:51,400 --> 01:05:54,400
virtual function, calls and virtual function calls, are almost always

1332
01:05:54,400 --> 01:05:55,000
worse, right?

1333
01:05:55,000 --> 01:05:55,400
And

1334
01:05:56,700 --> 01:05:59,800
You know, the list of things is non-trivial.

1335
01:06:00,300 --> 01:06:03,800
To give just a couple examples, but like there's the Preamble post

1336
01:06:03,800 --> 01:06:04,400
amble stuff.

1337
01:06:04,400 --> 01:06:08,200
That's, that's really easy to see and understand a switch statement,

1338
01:06:08,200 --> 01:06:08,800
right?

1339
01:06:08,800 --> 01:06:11,500
It's not in some weird inheritance hierarchy, where the person who's

1340
01:06:11,500 --> 01:06:14,400
adding a new virtual function, doesn't even know, like what things

1341
01:06:14,400 --> 01:06:16,800
might happen, pre and post amble and all that stuff that they can just

1342
01:06:16,800 --> 01:06:17,400
see it.

1343
01:06:17,400 --> 01:06:21,600
They can access the member, the variables directly inside their thing

1344
01:06:21,800 --> 01:06:24,900
in the pre and post amble without having to know where to look for

1345
01:06:24,900 --> 01:06:26,700
them or to get them from some extra thing.

1346
01:06:27,600 --> 01:06:31,000
The switch statement switches off of a value and that value can be

1347
01:06:31,000 --> 01:06:34,100
persistent whereas a virtual function cannot be, for example, right?

1348
01:06:34,100 --> 01:06:37,300
Like there's no way to persist the type of a class automatically in

1349
01:06:37,300 --> 01:06:40,700
C++ you have to introduce a secondary scheme which guess what ends up

1350
01:06:40,700 --> 01:06:44,900
being an enum, you could have just switched off that enum instead of

1351
01:06:44,900 --> 01:06:47,900
introducing a virtual function table for no reason, right?

1352
01:06:49,800 --> 01:06:52,500
It just goes and goes and goes.

1353
01:06:52,500 --> 01:06:53,800
There's like, there's never

1354
01:06:55,100 --> 01:06:58,300
It's all bad with like virtual functions and that sort of stuff and

1355
01:06:58,900 --> 01:07:01,700
and function pointers, they're just always worse than switch

1356
01:07:01,700 --> 01:07:06,200
statements, but I shouldn't say that they're almost always worse, but

1357
01:07:06,200 --> 01:07:07,300
there are a couple times.

1358
01:07:07,300 --> 01:07:09,600
I mean, I'm sure if I go through my code I can find places where I've

1359
01:07:09,600 --> 01:07:11,400
used function calls.

1360
01:07:11,400 --> 01:07:14,300
Callbacks I never use Virtual functions but I might use like a

1361
01:07:14,300 --> 01:07:17,200
function call or a call back for a legitimate purpose.

1362
01:07:17,500 --> 01:07:22,200
One is platform code stuff where you're trying to keep the code out of

1363
01:07:22,200 --> 01:07:22,800
a thing.

1364
01:07:26,800 --> 01:07:29,400
I'm trying to think if there's other cases there might be a couple I'm

1365
01:07:29,400 --> 01:07:29,900
forgetting.

1366
01:07:30,500 --> 01:07:31,800
So always is the wrong term.

1367
01:07:31,800 --> 01:07:34,500
I don't mean that but but almost always you should have.

1368
01:07:34,500 --> 01:07:35,900
You should have written the switch statement.

1369
01:07:41,400 --> 01:07:44,400
Do we load and draw everything manually to a dip section, then blit

1370
01:07:44,400 --> 01:07:45,300
the final image.

1371
01:07:45,300 --> 01:07:46,800
Yes, that is correct.

1372
01:07:47,700 --> 01:07:51,000
The way we handle GDI drawing is basically we try to do the minimum

1373
01:07:51,000 --> 01:07:53,500
amount of cruft between the two.

1374
01:07:53,500 --> 01:07:57,500
So we just we don't even really use a dip section.

1375
01:07:57,500 --> 01:08:02,300
Technically, we just use a buffer of B and then we asked GDI to put

1376
01:08:02,300 --> 01:08:03,900
that buffer B to a window please.

1377
01:08:04,000 --> 01:08:04,800
So we can see it.

1378
01:08:16,800 --> 01:08:19,399
After you mentioned the do all collisions at one time thing.

1379
01:08:19,399 --> 01:08:22,200
It seems like in addition to being great deal, easier to implement it

1380
01:08:22,200 --> 01:08:25,200
also matches the real world better like summing all the forces to get

1381
01:08:25,200 --> 01:08:26,000
the net Direction.

1382
01:08:26,200 --> 01:08:29,399
Why would anyone ever want to do an update function for each object?

1383
01:08:29,399 --> 01:08:31,600
It seems like that would just introduce problems.

1384
01:08:33,300 --> 01:08:36,399
Well yeah, I mean, I think most of the time people, do we do it the

1385
01:08:36,399 --> 01:08:37,700
way that I'm suggesting, we do it.

1386
01:08:37,700 --> 01:08:39,000
But you know, I mean,

1387
01:08:40,700 --> 01:08:42,100
It's six of one half-dozen of the other.

1388
01:08:42,100 --> 01:08:46,899
I mean, you there's reasons why I like you saw how we introduce.

1389
01:08:46,899 --> 01:08:48,600
We had one example, right?

1390
01:08:48,600 --> 01:08:49,899
That is harder.

1391
01:08:50,100 --> 01:08:54,000
If the object custom code, can't control when it does updated, can't

1392
01:08:54,000 --> 01:08:58,200
do things, like, look at its previous and last thing cleanly, now that

1393
01:08:58,200 --> 01:08:59,800
has to be something that gets hoisted out, right?

1394
01:09:00,000 --> 01:09:03,800
There's like there's reasons why it's more convenient for the object

1395
01:09:03,800 --> 01:09:05,700
to be able to say when it gets updated.

1396
01:09:06,800 --> 01:09:09,200
In a perfect world, you'd have it so that you could probably do both

1397
01:09:09,200 --> 01:09:09,500
things.

1398
01:09:09,500 --> 01:09:14,200
Like, it's, it gives the pre and post amble in a still clean fashion.

1399
01:09:14,200 --> 01:09:16,200
Like this is probably something like, John blows language will let you

1400
01:09:16,200 --> 01:09:18,399
do write it as if you did it this way.

1401
01:09:18,399 --> 01:09:21,800
But then pull it out so that it ends up running it the other way,

1402
01:09:21,800 --> 01:09:22,700
which would be kind of cool.

1403
01:09:22,700 --> 01:09:23,700
But yeah.

1404
01:09:23,700 --> 01:09:28,000
So, but no, I mean, it's true like like you say it, the reason I

1405
01:09:28,000 --> 01:09:30,800
suggested it because it's, you know, it is a common way to do it.

1406
01:09:30,800 --> 01:09:33,899
It's not, I'm not suggesting some really radical new thing, that's

1407
01:09:33,899 --> 01:09:36,300
that's a common way that people Implement their engines.

1408
01:09:36,800 --> 01:09:39,100
And I suspect, it's probably the right thing for us to do.

1409
01:09:39,100 --> 01:09:40,100
But, you know,

1410
01:09:43,399 --> 01:09:46,600
I just clocked account lines and it's pretty decent.

1411
01:09:46,700 --> 01:09:48,000
Says Jonathan Blow.

1412
01:09:50,200 --> 01:09:51,000
I don't know.

1413
01:09:51,300 --> 01:09:52,200
Can we get?

1414
01:09:52,200 --> 01:09:54,900
Can we get that clock?

1415
01:09:57,400 --> 01:09:58,200
Clock.

1416
01:09:59,400 --> 01:10:00,500
Download.

1417
01:10:03,700 --> 01:10:04,200
There we go.

1418
01:10:04,300 --> 01:10:05,900
I'm looking for the latest version.

1419
01:10:08,500 --> 01:10:09,400
Is it downloading?

1420
01:10:09,400 --> 01:10:12,300
Yes, we're download start in 0.

1421
01:10:12,300 --> 01:10:14,900
So why don't you just download because you wanted me to watch your

1422
01:10:14,900 --> 01:10:15,400
ads.

1423
01:10:16,600 --> 01:10:20,400
Course, maybe sourceforge will tell us what the latest flavor of

1424
01:10:20,400 --> 01:10:22,600
Mountain Dew is, since I don't have an Xbox One.

1425
01:10:23,900 --> 01:10:25,700
Okay, so there we go.

1426
01:10:27,000 --> 01:10:32,400
So if I actually start up downloads

1427
01:10:33,700 --> 01:10:34,500
there's clock.

1428
01:10:35,500 --> 01:10:39,800
So I will go ahead and put that nice.

1429
01:10:39,800 --> 01:10:43,600
I don't know where I'll put that guess for now.

1430
01:10:43,600 --> 01:10:45,400
I'll stick it in w.

1431
01:10:46,500 --> 01:10:48,100
I don't have a better place to put it.

1432
01:10:49,200 --> 01:10:49,500
Go.

1433
01:10:49,700 --> 01:10:51,000
This doesn't require an install.

1434
01:10:51,000 --> 01:10:52,600
Does it or does it run?

1435
01:10:53,400 --> 01:10:54,100
No, it doesn't.

1436
01:10:54,100 --> 01:10:54,700
So that's good.

1437
01:10:55,400 --> 01:10:57,700
So we'll just call that clock and I'll figure out where to put it

1438
01:10:57,700 --> 01:11:01,200
later, but now we can run the code.

1439
01:11:01,200 --> 01:11:03,700
So it looks like this is all code in here.

1440
01:11:03,900 --> 01:11:05,700
This is all of our code, I believe.

1441
01:11:06,000 --> 01:11:09,900
So if I just run clock on the code and I just do star.

1442
01:11:10,600 --> 01:11:11,200
There we go.

1443
01:11:14,600 --> 01:11:19,200
So yeah so four thousand lines of code right?

1444
01:11:19,200 --> 01:11:22,600
That if I mean I'm assuming that I'm reading that properly so that's

1445
01:11:22,600 --> 01:11:23,900
like really tiny.

1446
01:11:24,300 --> 01:11:25,000
I feel like

1447
01:11:27,000 --> 01:11:27,400
I don't know.

1448
01:11:27,400 --> 01:11:29,600
I just don't feel like that's very much code to keep in your head.

1449
01:11:29,600 --> 01:11:33,600
It seems pretty straightforward unless I'm missing it.

1450
01:11:35,100 --> 01:11:35,600
So yeah.

1451
01:11:35,800 --> 01:11:38,700
So there you go and if you add them all up, you know it's

1452
01:11:40,400 --> 01:11:44,800
it's what something like, you know, six thousand lines of code.

1453
01:11:44,800 --> 01:11:46,300
I know it's not very many lines of code.

1454
01:12:06,800 --> 01:12:09,500
A bit off-topic besides the bits that are obviously tacked.

1455
01:12:09,500 --> 01:12:11,600
On, would you consider the windows gooey?

1456
01:12:11,600 --> 01:12:12,800
A good API parts of it.

1457
01:12:12,800 --> 01:12:15,200
Seem pretty intuitive and clean and clear.

1458
01:12:15,200 --> 01:12:17,300
But I don't have much to compare it with.

1459
01:12:18,800 --> 01:12:20,900
So I don't get through that off topic because we've done win32.

1460
01:12:20,900 --> 01:12:22,300
Programming on the stream, a bunch.

1461
01:12:22,500 --> 01:12:24,700
So talking about that API is totally reasonable.

1462
01:12:25,800 --> 01:12:33,600
I guess, what I would say is win32, the C API for win32 isn't bad, but

1463
01:12:33,600 --> 01:12:34,800
it's not good.

1464
01:12:36,300 --> 01:12:39,200
Like the original win32 API is okay.

1465
01:12:39,500 --> 01:12:41,900
There's a lot of things that I wouldn't have done the way that they

1466
01:12:41,900 --> 01:12:46,900
did it but it's not horrid the stuff they've done since then is mostly

1467
01:12:46,900 --> 01:12:49,800
horrid like most of the newer stuff as it's gone.

1468
01:12:49,800 --> 01:12:53,100
Like if you actually were to program the windows API the way they want

1469
01:12:53,100 --> 01:12:57,900
you to today, it's an epic epic disaster.

1470
01:12:59,500 --> 01:13:03,400
So I think to really answer that question, you'd have to

1471
01:13:04,200 --> 01:13:10,700
Specifically talk about a particular part of the API and say you know

1472
01:13:11,100 --> 01:13:16,300
is this part good and then you could say about the pros and cons of it

1473
01:13:16,300 --> 01:13:17,600
because it really does.

1474
01:13:17,600 --> 01:13:19,300
It's very, very eerie.

1475
01:13:19,300 --> 01:13:20,400
Microsoft's, a giant company.

1476
01:13:20,400 --> 01:13:22,400
Write an API was not signed by one guy.

1477
01:13:22,800 --> 01:13:25,800
It's been designed by hundreds of people by committee now over many

1478
01:13:25,800 --> 01:13:27,900
years and it's in many different port parts.

1479
01:13:28,700 --> 01:13:32,200
And so it's really hard, you know, to take a particular piece and say,

1480
01:13:32,600 --> 01:13:33,800
you know, it's

1481
01:13:34,000 --> 01:13:37,200
Really hard without taking particular piece to say, good bad ugly.

1482
01:13:41,200 --> 01:13:44,100
Becker 929, I guess I should have asked how big it has to get for you

1483
01:13:44,100 --> 01:13:45,400
to start feeling overwhelmed.

1484
01:13:48,100 --> 01:13:50,400
Probably like a hundred times that size.

1485
01:13:50,400 --> 01:13:55,900
I would say I would I would expect to be at like four hundred thousand

1486
01:13:55,900 --> 01:13:58,700
lines before I'd start to be feeling like I had no idea it was going

1487
01:13:58,700 --> 01:14:00,400
on probably would be my guess.

1488
01:14:00,800 --> 01:14:04,700
I think 10 times the size would still be pretty easy to manage like

1489
01:14:04,700 --> 01:14:05,700
40,000 lines.

1490
01:14:05,700 --> 01:14:06,800
Doesn't sound like a lot.

1491
01:14:07,300 --> 01:14:09,200
Four hundred thousand lines might be pretty big.

1492
01:14:09,300 --> 01:14:11,200
I don't know I don't think we'd get there.

1493
01:14:13,400 --> 01:14:16,100
Programming like an hour a day, I don't think we'd probably get there.

1494
01:14:16,800 --> 01:14:23,900
So 40,000 lines might happen depending on our speed and sort of the

1495
01:14:23,900 --> 01:14:26,900
later the later times when I'm explaining less and typing more.

1496
01:14:30,400 --> 01:14:32,800
How did you decide on this order to build up the engine?

1497
01:14:32,800 --> 01:14:34,300
Was it Intuition or experience?

1498
01:14:35,600 --> 01:14:37,300
Well, again, I think

1499
01:14:39,100 --> 01:14:43,800
I've tried to kind of show how that goes as recently as I can.

1500
01:14:43,800 --> 01:14:46,300
Obviously, there's some degree of experience in there that you just

1501
01:14:46,300 --> 01:14:47,500
can't avoid, right?

1502
01:14:47,500 --> 01:14:51,100
And I'd be lying if I said that the experience isn't a huge part of

1503
01:14:51,100 --> 01:14:51,600
it.

1504
01:14:52,000 --> 01:14:55,100
But what I have tried to do, for the most part is show you how you can

1505
01:14:55,100 --> 01:14:57,900
sort of muddle through something like this.

1506
01:14:58,200 --> 01:14:59,900
By always taking the next

1507
01:15:00,000 --> 01:15:01,200
Logical step, right?

1508
01:15:01,300 --> 01:15:02,600
And that's what I've tried to do.

1509
01:15:02,600 --> 01:15:04,400
I haven't tried to make any giant leaps.

1510
01:15:04,400 --> 01:15:07,200
I've always said, let's try to do X and then we kind of work towards

1511
01:15:07,200 --> 01:15:09,000
that and we see what falls out of it.

1512
01:15:09,200 --> 01:15:13,000
And you'll note that like I started off, I just made a simple tilemap,

1513
01:15:13,000 --> 01:15:13,400
right.

1514
01:15:13,400 --> 01:15:15,800
And we sort of so how that was going to go and then I said, oh well

1515
01:15:15,800 --> 01:15:18,900
let's we want to be able to make it so that it can be infinitely, huge

1516
01:15:18,900 --> 01:15:19,600
well, not infinitely.

1517
01:15:19,600 --> 01:15:20,600
But very very large.

1518
01:15:20,600 --> 01:15:21,500
So we can't just use floats.

1519
01:15:21,500 --> 01:15:22,300
So how we going to do that?

1520
01:15:22,300 --> 01:15:25,600
And we did that and I was like well okay I don't really want these

1521
01:15:25,600 --> 01:15:28,800
things to have to be on tile boundaries so let's let's try getting rid

1522
01:15:28,800 --> 01:15:29,800
of that and I was like all right I do.

1523
01:15:30,000 --> 01:15:32,300
Like how this is going, let's try to make a system so that we can

1524
01:15:32,300 --> 01:15:37,100
actually make it so that we don't have to work on the on using the

1525
01:15:37,100 --> 01:15:40,000
weird positional stuff and I want to scale the number of entities up.

1526
01:15:40,000 --> 01:15:40,500
So we did that.

1527
01:15:40,500 --> 01:15:43,900
And we kept we've kept just doing like what's the next thing I'm going

1528
01:15:43,900 --> 01:15:44,100
to do.

1529
01:15:44,100 --> 01:15:45,700
Let's write some code that see how it goes.

1530
01:15:46,400 --> 01:15:49,200
And we've been letting the engine architecture emerge out of that,

1531
01:15:49,700 --> 01:15:52,500
which is the whole point of this first, you know, hundred days.

1532
01:15:52,500 --> 01:15:53,100
Let's say

1533
01:15:54,500 --> 01:15:56,600
Which is which each day maps to roughly an hour?

1534
01:15:56,600 --> 01:16:00,000
So 100 hours isn't much time to spend on a project, right?

1535
01:16:00,000 --> 01:16:00,900
100 hours.

1536
01:16:01,500 --> 01:16:04,700
If you work a 40-hour week, 100 hours is a little more than two weeks

1537
01:16:04,700 --> 01:16:06,100
of full-time work, right?

1538
01:16:06,700 --> 01:16:09,700
So spending 100 hours on figuring out, what your architecture should

1539
01:16:09,700 --> 01:16:10,800
be is cheap.

1540
01:16:11,000 --> 01:16:13,900
And so in this, in the scope of a whole project.

1541
01:16:13,900 --> 01:16:16,700
And so, the reason that I'm approaching it this way and encouraging

1542
01:16:16,700 --> 01:16:18,800
other people to approach it this way is because I think it's really

1543
01:16:18,800 --> 01:16:23,100
valuable to spend the time just writing the code, seeing how it works.

1544
01:16:23,100 --> 01:16:23,900
And then letting that,

1545
01:16:24,000 --> 01:16:28,000
Picture emerge, and so that when you actually go to do the final

1546
01:16:28,000 --> 01:16:30,200
component, like when we want to go do the final Collision sector, we

1547
01:16:30,200 --> 01:16:33,900
want to go do the final renderer when we want to do whatever, we're

1548
01:16:33,900 --> 01:16:38,300
not just designing in a vacuum, which is where bad designs come from.

1549
01:16:38,300 --> 01:16:42,200
Right instead, we're not even really designing at that point, we're

1550
01:16:42,200 --> 01:16:44,600
just programming because the design was already there.

1551
01:16:44,600 --> 01:16:49,400
It already already exposed itself in, you know, in by uh sort of

1552
01:16:49,400 --> 01:16:50,300
drilling at it.

1553
01:16:50,300 --> 01:16:51,700
It's sort of like sculpting, right?

1554
01:16:51,700 --> 01:16:53,600
We chiseled away and shows it away and shows it away.

1555
01:16:53,900 --> 01:16:56,300
And then we were left with something was like, yes, this is the piece.

1556
01:16:56,300 --> 01:16:58,400
Now we just have to go do the detail work, right?

1557
01:16:59,400 --> 01:17:01,900
And that's way better than trying to do it the other way around, where

1558
01:17:01,900 --> 01:17:05,300
you just like sculpt each part, totally separately and then bring them

1559
01:17:05,300 --> 01:17:07,900
together and hope that they form a sculpture and then they don't in

1560
01:17:07,900 --> 01:17:10,000
your, like, this piece doesn't fit.

1561
01:17:10,000 --> 01:17:12,400
And what are we gonna do now, get the glue out, right?

1562
01:17:12,400 --> 01:17:13,400
It's like a disaster.

1563
01:17:14,400 --> 01:17:17,200
And so, you know, I'm just kind of that's the way I've been doing

1564
01:17:17,200 --> 01:17:17,600
this.

1565
01:17:17,600 --> 01:17:21,700
And again, I do have a lot of experience, programming that is true,

1566
01:17:21,700 --> 01:17:23,800
but I don't have a lot of experience program, your 2D game.

1567
01:17:24,300 --> 01:17:25,500
Like it's not something I do.

1568
01:17:25,500 --> 01:17:27,200
I don't program to any games for a living.

1569
01:17:30,200 --> 01:17:33,200
Like I like this kind of game, like Zelda games, I've never written

1570
01:17:33,200 --> 01:17:34,000
one before, right?

1571
01:17:34,000 --> 01:17:35,100
That's not what I do.

1572
01:17:35,800 --> 01:17:37,800
And so it is true that I've experienced program.

1573
01:17:37,800 --> 01:17:38,300
It's not true.

1574
01:17:38,300 --> 01:17:41,700
They have a lot experience with certain aspects of this development

1575
01:17:41,800 --> 01:17:45,300
and so I've been trying to do those things.

1576
01:17:46,500 --> 01:17:51,800
Exactly, the way I would go and discover them if I were doing it in a

1577
01:17:51,800 --> 01:17:53,900
regular professional setting so that you can see how

1578
01:17:54,100 --> 01:17:57,400
I approached that problem and arrived at good Solutions because as

1579
01:17:57,400 --> 01:17:59,800
much as anything that's the most important thing to learn is

1580
01:18:00,000 --> 01:18:02,500
How to tackle a new problem and arrive at a good solution.

1581
01:18:02,900 --> 01:18:06,700
It takes hard work, it takes effort, but most of all, it takes the

1582
01:18:06,700 --> 01:18:07,300
right approach.

1583
01:18:07,300 --> 01:18:09,800
And I really do think that approach is exactly what we've been doing,

1584
01:18:10,200 --> 01:18:10,500
right?

1585
01:18:10,500 --> 01:18:13,700
The most obvious thing you can first pick a goal, right?

1586
01:18:13,700 --> 01:18:16,100
The most obvious code, see what it looks like.

1587
01:18:16,100 --> 01:18:17,100
What doesn't work?

1588
01:18:17,300 --> 01:18:19,100
Get a little bigger, get a little bigger, right?

1589
01:18:19,100 --> 01:18:21,700
Keep picking new goals and pushing that code outward.

1590
01:18:21,900 --> 01:18:26,400
And then it, you can sort of see the things start to form in there and

1591
01:18:26,400 --> 01:18:29,900
pull them out as they become obvious, rather than trying to

1592
01:18:30,000 --> 01:18:33,300
To guess ahead of time how to do everything, which in my experience

1593
01:18:33,300 --> 01:18:34,800
just does not lead anywhere, good?

1594
01:18:35,300 --> 01:18:35,900
Oftentimes.

1595
01:18:35,900 --> 01:18:37,800
No matter how much experience you have, because the only time that

1596
01:18:37,800 --> 01:18:40,800
that really works is if you've done exactly the same thing as you're

1597
01:18:40,800 --> 01:18:43,800
already doing, but most of the time, that's not that interesting.

1598
01:18:43,800 --> 01:18:45,700
Most time you want to be writing things that you've never written

1599
01:18:45,700 --> 01:18:46,000
before it.

1600
01:18:46,000 --> 01:18:48,700
You want to make new things that people haven't done, right?

1601
01:18:49,000 --> 01:18:50,100
And so that's how you do that.

1602
01:19:10,000 --> 01:19:12,600
Speaking of uml and diagrams.

1603
01:19:12,700 --> 01:19:18,300
You ever use class 1 schematics for code planning know, I'd never do

1604
01:19:18,300 --> 01:19:18,800
that.

1605
01:19:20,900 --> 01:19:23,600
That is not something I would recommend.

1606
01:19:24,200 --> 01:19:28,700
I feel like diagrams pretty much leave out the important parts of code

1607
01:19:28,700 --> 01:19:31,600
the complexity of code and so they tend to not be very useful.

1608
01:19:31,600 --> 01:19:34,900
I always say start with the code in an abstract upwards from it.

1609
01:19:43,000 --> 01:19:45,900
Do you need to be able to enumerate every possibility in order to use

1610
01:19:45,900 --> 01:19:46,600
a switch statement?

1611
01:19:46,600 --> 01:19:48,800
What if you want to make a system that can be extended?

1612
01:19:48,900 --> 01:19:52,000
Well, extended in what way is the question, right?

1613
01:19:53,100 --> 01:19:56,700
So, if you're talking about extended, as in people adding stuff to it,

1614
01:19:56,700 --> 01:19:59,100
well they just add to the case to switch statement, right?

1615
01:19:59,100 --> 01:19:59,900
That's not hard.

1616
01:20:00,800 --> 01:20:04,100
And you can even do that if you want to by making separate files like

1617
01:20:04,100 --> 01:20:06,300
you can use the pound include in there if you want for some reason,

1618
01:20:06,300 --> 01:20:07,100
but I wouldn't do that.

1619
01:20:07,100 --> 01:20:08,700
I just put in the switch statement.

1620
01:20:09,300 --> 01:20:12,200
If you're talking about you want things to be extensible outside of

1621
01:20:12,200 --> 01:20:12,700
changing the

1622
01:20:12,900 --> 01:20:13,500
Code.

1623
01:20:13,700 --> 01:20:16,400
Well, at that point you've got to have scripting languages or

1624
01:20:16,400 --> 01:20:16,900
something like that.

1625
01:20:16,900 --> 01:20:17,600
Anyway, right?

1626
01:20:17,600 --> 01:20:20,700
So because if people are loading code dynamically, you've got to have

1627
01:20:20,700 --> 01:20:25,100
something that allows that to actually work like a dll or something

1628
01:20:25,100 --> 01:20:25,600
like that.

1629
01:20:26,500 --> 01:20:29,300
And if that's the case, it's still not that big of a deal, right?

1630
01:20:29,300 --> 01:20:33,900
You can you can still do most of the same stuff as you would do with a

1631
01:20:33,900 --> 01:20:37,400
switch statement but unfortunately if you go that route you give up

1632
01:20:37,400 --> 01:20:40,400
kind of one nice thing which is the ability to have the Preamble post

1633
01:20:40,400 --> 01:20:42,700
amble stuff, be directly accessible by the things the switched.

1634
01:20:42,800 --> 01:20:43,400
Payment.

1635
01:20:43,900 --> 01:20:46,400
So, you lose one thing if you do that, but other than that, you can

1636
01:20:46,400 --> 01:20:47,500
still do a basic same way.

1637
01:20:47,500 --> 01:20:49,200
People just have sub switch statements, right?

1638
01:20:49,200 --> 01:20:51,400
They basically make their own switch statements, and you're calling

1639
01:20:51,700 --> 01:20:52,600
each of them, or whatever.

1640
01:20:52,600 --> 01:20:56,700
But I don't know, I think most of the time, if you're talking about

1641
01:20:56,700 --> 01:20:59,800
stuff that extensible in a game, you're talking about a switch having

1642
01:21:00,000 --> 01:21:00,500
Scripting language.

1643
01:21:00,500 --> 01:21:04,400
Because if you want players to be able to quickly and easily modify

1644
01:21:04,400 --> 01:21:08,800
stuff, they're probably not going to want to be using your C++ code or

1645
01:21:08,800 --> 01:21:09,500
whatever, right?

1646
01:21:09,600 --> 01:21:10,100
I don't know.

1647
01:21:10,100 --> 01:21:14,100
I mean, so, the answer that question is I can't really give a total

1648
01:21:14,100 --> 01:21:19,400
answer, unless, unless you can tell me a little more about what you

1649
01:21:19,400 --> 01:21:24,000
mean by extended, in the case of this type of code,

1650
01:21:33,600 --> 01:21:36,200
Why you switch statements instead of just big if else blocks?

1651
01:21:36,600 --> 01:21:37,900
Yeah, if else blocks are fine too.

1652
01:21:38,400 --> 01:21:40,800
Either way, I you switch tables because they're less typing.

1653
01:21:55,500 --> 01:21:58,500
Will the way in which collisions are handled the order independent?

1654
01:21:58,900 --> 01:21:59,500
Mmm.

1655
01:22:02,000 --> 01:22:07,200
I don't know yet, that's a good question and I don't know I suspect

1656
01:22:07,200 --> 01:22:13,000
probably not because I don't know that we have anything in the game, I

1657
01:22:13,000 --> 01:22:18,900
don't know that that has Elda game tends to have a lot of reasons why

1658
01:22:19,600 --> 01:22:22,300
order independent Collision is important.

1659
01:22:23,400 --> 01:22:28,400
So I guess what I would say to that is probably not, unless we find

1660
01:22:28,400 --> 01:22:29,900
some reason, why it should be.

1661
01:22:29,900 --> 01:22:33,700
And maybe as we get through the further along in the game, we will

1662
01:22:33,700 --> 01:22:37,100
find a good reason why we have to make sure that it's order

1663
01:22:37,100 --> 01:22:37,700
independent.

1664
01:22:37,700 --> 01:22:40,700
And then we would, but otherwise, I don't think we would introduce

1665
01:22:40,700 --> 01:22:45,400
that complexity unless I had a reason why I thought we could use it

1666
01:22:46,300 --> 01:22:47,000
for something.

1667
01:22:58,000 --> 01:23:00,900
Is it better to debug as you go or towards the end of a programming

1668
01:23:00,900 --> 01:23:01,500
cycle?

1669
01:23:02,400 --> 01:23:06,600
So I would say that personally, I don't think there should ever be

1670
01:23:06,600 --> 01:23:09,100
bugs in the code that you know about, right?

1671
01:23:11,100 --> 01:23:11,600
like,

1672
01:23:13,400 --> 01:23:18,900
For the most part I always try to debug a bug that I see when I see

1673
01:23:18,900 --> 01:23:23,300
it, I don't leave bugs in the code unless it's a case of like, oh the

1674
01:23:24,000 --> 01:23:27,200
as the case of a bug in the sense that I know that there's a big thing

1675
01:23:27,200 --> 01:23:29,600
that needs to get implemented in order to fix some problematic

1676
01:23:29,600 --> 01:23:29,900
behavior.

1677
01:23:29,900 --> 01:23:32,900
And I don't have time to do that right now because I have other things

1678
01:23:32,900 --> 01:23:36,300
I got to do and this is like a several day tasks or something.

1679
01:23:36,300 --> 01:23:37,500
But you know we've done the stream before.

1680
01:23:37,500 --> 01:23:39,600
It's like oh I don't like the way this is working but I can't do it

1681
01:23:39,600 --> 01:23:40,000
right now.

1682
01:23:40,000 --> 01:23:41,600
So will you know kind of put it off a little bit.

1683
01:23:42,500 --> 01:23:45,000
But in terms of bugs, like if it's just a bug like I don't know what's

1684
01:23:45,000 --> 01:23:45,400
going on.

1685
01:23:45,400 --> 01:23:46,700
There's something broken the code.

1686
01:23:46,700 --> 01:23:48,600
I always like always fix that, right?

1687
01:23:48,700 --> 01:23:49,200
Right away.

1688
01:23:49,200 --> 01:23:51,800
Like when you see it, the instant you see, it should be when you fix

1689
01:23:51,800 --> 01:23:52,100
it.

1690
01:23:52,200 --> 01:23:53,600
That's the way I look at it.

1691
01:23:54,500 --> 01:23:59,500
And the reason that I do things that way is because I feel like

1692
01:24:01,700 --> 01:24:04,900
I feel like, first of all, it makes it easier to write whatever code

1693
01:24:04,900 --> 01:24:05,600
you were going to write.

1694
01:24:05,600 --> 01:24:08,000
Because now, you don't have to worry about the fact that you've got a

1695
01:24:08,000 --> 01:24:11,100
bug in there and who knows what the bug is from, and maybe, whatever

1696
01:24:11,100 --> 01:24:14,200
is causing that bug would also cause you problems on whatever you were

1697
01:24:14,200 --> 01:24:14,900
going to write.

1698
01:24:15,100 --> 01:24:18,200
So it might, it make compound, the difficulty of writing, whatever it

1699
01:24:18,200 --> 01:24:19,700
is, that you're going to write.

1700
01:24:21,400 --> 01:24:27,600
And similarly, I think it may lead to less buggy code at the end

1701
01:24:27,600 --> 01:24:30,000
because if you debug all bugs, when you find them, there's no

1702
01:24:30,100 --> 01:24:33,700
Chance that whatever you're doing is going to mask some bug that you

1703
01:24:33,700 --> 01:24:34,200
did see.

1704
01:24:34,200 --> 01:24:36,500
And now won't see later because you change something.

1705
01:24:36,500 --> 01:24:40,600
And now whatever the bug was that was exposed has been hidden, right?

1706
01:24:41,000 --> 01:24:44,600
So if you are ever fortunate enough to be able to find a bug that you

1707
01:24:44,600 --> 01:24:47,400
can reproduce when you are coding, you should bug it at that time.

1708
01:24:47,400 --> 01:24:50,600
I think that seems to be the best way to go about it.

1709
01:24:50,900 --> 01:24:51,500
My opinion.

1710
01:25:06,500 --> 01:25:08,700
Actually want to pass dash dash.

1711
01:25:08,700 --> 01:25:09,900
No three.

1712
01:25:10,200 --> 01:25:13,100
Otherwise it is lying about the number of lines.

1713
01:25:13,100 --> 01:25:14,000
It is dumb.

1714
01:25:15,700 --> 01:25:16,600
Dash dash.

1715
01:25:16,600 --> 01:25:17,700
No 3.

1716
01:25:24,800 --> 01:25:25,500
Woahhh.

1717
01:25:27,200 --> 01:25:30,300
What is dash dash no.3.

1718
01:25:33,600 --> 01:25:37,800
That does not seem to be understood at the moment.

1719
01:25:39,700 --> 01:25:40,600
You will have to John.

1720
01:25:40,600 --> 01:25:45,000
You'll have to send me how to use this thing because I don't, there's

1721
01:25:45,000 --> 01:25:46,400
dash dash three.

1722
01:25:48,300 --> 01:25:49,400
But not dash dash.

1723
01:25:49,400 --> 01:25:50,500
No 3.

1724
01:25:56,600 --> 01:25:58,100
Oh wait.

1725
01:25:58,900 --> 01:26:00,400
Oh it's just because I didn't pass.

1726
01:26:00,600 --> 01:26:01,200
There we go.

1727
01:26:01,300 --> 01:26:03,200
Okay, sorry, I'm I'm dumb.

1728
01:26:06,000 --> 01:26:06,800
That's the same.

1729
01:26:06,800 --> 01:26:07,600
Isn't that the same?

1730
01:26:07,600 --> 01:26:08,400
Is that the same thing?

1731
01:26:08,400 --> 01:26:09,500
That's the same.

1732
01:26:11,000 --> 01:26:12,100
That looks the same to me.

1733
01:26:12,600 --> 01:26:13,700
Did it change something?

1734
01:26:15,200 --> 01:26:18,600
I don't know but if you send me an email and let me know I'll run it

1735
01:26:18,600 --> 01:26:19,000
differently.

1736
01:26:19,000 --> 01:26:19,200
I do.

1737
01:26:19,200 --> 01:26:19,300
Yeah.

1738
01:26:19,300 --> 01:26:21,500
I've obviously never used it before to use your set it so I don't

1739
01:26:21,500 --> 01:26:21,700
know.

1740
01:26:40,800 --> 01:26:44,700
Will the game have multiplayer and our Co-op so we're allowing

1741
01:26:44,700 --> 01:26:48,700
multiple player-controlled entities in the engine.

1742
01:26:49,800 --> 01:26:54,200
So in that sense it allows multiplayer but we just don't know the game

1743
01:26:54,200 --> 01:26:55,000
design.

1744
01:26:55,100 --> 01:26:58,200
I don't really know if will support it, so it will.

1745
01:26:58,400 --> 01:26:59,800
The engine will support it but I don't.

1746
01:27:00,000 --> 01:27:02,400
A game design will support it if that makes sense.

1747
01:27:02,600 --> 01:27:06,300
So we're going to allow for the entire duration of development,

1748
01:27:06,300 --> 01:27:10,600
multiple players to play, but the game design may not be such that

1749
01:27:10,600 --> 01:27:11,600
that actually works.

1750
01:27:11,700 --> 01:27:15,100
In terms of when we release the game, that may be turned off for the

1751
01:27:15,100 --> 01:27:17,200
release because it may just not be a fun.

1752
01:27:17,400 --> 01:27:20,500
There may not be a way to really play it with multiple players.

1753
01:27:20,500 --> 01:27:21,700
That doesn't break the game.

1754
01:27:23,000 --> 01:27:26,000
So we want to support it in the engine just so we can show how to make

1755
01:27:26,000 --> 01:27:28,700
sure that you don't tie things to just the concept of one player.

1756
01:27:28,700 --> 01:27:29,400
Exactly.

1757
01:27:30,000 --> 01:27:32,200
But I don't, I don't know if that will actually be in there at the

1758
01:27:32,200 --> 01:27:32,800
final game.

1759
01:27:34,300 --> 01:27:37,300
All right, I think we have we are out of time.

1760
01:27:37,500 --> 01:27:43,500
We have run out of time so I'm going to go ahead and close things up.

1761
01:27:46,100 --> 01:27:47,400
Assuming that we don't know.

1762
01:27:47,400 --> 01:27:49,200
Maybe did we run clock correctly?

1763
01:27:49,200 --> 01:27:53,900
I don't know if you're in clock correctly or not, but 4090 to is

1764
01:27:53,900 --> 01:27:58,100
actually a power of two, so I feel like that's a good number of lines

1765
01:27:58,100 --> 01:28:03,300
to go out on your right, that it did change slightly, right?

1766
01:28:04,300 --> 01:28:06,800
So, that's kind of weird, and some sense.

1767
01:28:08,300 --> 01:28:10,900
Yeah, that is kind of weird, kind of weird.

1768
01:28:11,800 --> 01:28:14,300
And I felt like that number was different before.

1769
01:28:14,300 --> 01:28:15,900
What's the deal here?

1770
01:28:17,300 --> 01:28:19,200
I'm getting a little weirded out, John

1771
01:28:20,900 --> 01:28:22,400
How come it said, 69th?

1772
01:28:22,400 --> 01:28:24,300
Oh, that's the lines per second.

1773
01:28:24,700 --> 01:28:26,600
Okay, that's just its speed.

1774
01:28:26,600 --> 01:28:29,400
That's just want to let you know how fast it is with its line

1775
01:28:29,400 --> 01:28:31,000
counting, okay?

1776
01:28:31,400 --> 01:28:33,100
So that's has no bearing on anything.

1777
01:28:33,800 --> 01:28:36,500
All right, so that's that's the same number.

1778
01:28:36,500 --> 01:28:40,400
So, if I think the no.3 was not necessary for whatever we were doing,

1779
01:28:40,400 --> 01:28:43,300
it seems like it part did the same thing, but either way,

1780
01:28:44,500 --> 01:28:47,400
All right, so let's go ahead and wind things up here.

1781
01:28:48,300 --> 01:28:50,700
Thank everyone for joining me for another episode of handmade hero.

1782
01:28:50,900 --> 01:28:52,200
It's been a pleasure programming with you.

1783
01:28:52,200 --> 01:28:55,400
As always, if you would like to follow along at home with the source

1784
01:28:55,400 --> 01:28:57,600
code, you can do that by pre-ordering the game.

1785
01:28:58,000 --> 01:28:59,800
You could do that on handmade hero dot-org.

1786
01:29:00,200 --> 01:29:03,600
If you get the little pre-order button, it comes with the source code.

1787
01:29:03,600 --> 01:29:06,300
And every night I upload the new source code that we do on the stream

1788
01:29:06,300 --> 01:29:08,700
so you can download it and follow along.

1789
01:29:09,800 --> 01:29:13,000
Also, if you want to support the video series, we do have a patreon.

1790
01:29:13,000 --> 01:29:13,900
You could subscribe to.

1791
01:29:14,600 --> 01:29:17,600
If you are trying to catch up on old episodes or ask questions about

1792
01:29:17,600 --> 01:29:20,300
things that you saw in tonight's program, we do have a news and form

1793
01:29:20,300 --> 01:29:21,800
so you can go to with a lot of great research on it.

1794
01:29:21,800 --> 01:29:25,400
And also has ports that community members have done to Mac and Linux

1795
01:29:25,400 --> 01:29:26,500
and that sort of thing already.

1796
01:29:26,600 --> 01:29:29,200
So even though we haven't gotten to those ports on the stream, if you

1797
01:29:29,200 --> 01:29:32,900
are trying to follow along on a Mac or on a Linux machine, that's a

1798
01:29:32,900 --> 01:29:33,600
good place to do it.

1799
01:29:33,600 --> 01:29:36,500
There's also now people who ported to IOS and Android as well,

1800
01:29:36,500 --> 01:29:38,500
although I don't know how far along those ports are but they're at

1801
01:29:38,500 --> 01:29:39,400
least nominally working.

1802
01:29:39,600 --> 01:29:40,400
So that's kind of cool too.

1803
01:29:41,300 --> 01:29:42,100
So check that out.

1804
01:29:42,100 --> 01:29:44,100
And finally we do have a tweet bot.

1805
01:29:44,400 --> 01:29:47,300
If you do want to know what the schedule is, you can subscribe to that

1806
01:29:47,300 --> 01:29:49,800
tweet but or follow the feet Bott or whatever it is and it will treat

1807
01:29:49,800 --> 01:29:54,400
the schedule that you and let you know when we are here tomorrow

1808
01:29:54,400 --> 01:29:54,600
night.

1809
01:29:54,600 --> 01:29:56,800
We will be back at 8 p.m.

1810
01:29:56,800 --> 01:29:59,300
Pacific Standard Time, same time as tonight.

1811
01:29:59,300 --> 01:29:59,800
So if

1812
01:30:00,000 --> 01:30:02,200
Would like to come back and join us for that.

1813
01:30:02,500 --> 01:30:06,700
I guess tomorrow we will start looking at how to do well we have that

1814
01:30:06,700 --> 01:30:10,000
to do that we put in there just tonight and then we also have looking

1815
01:30:10,000 --> 01:30:12,100
at the Collision detection and how we want to sort of do that.

1816
01:30:12,100 --> 01:30:14,900
So we can start actually having some more energy interactions like

1817
01:30:14,900 --> 01:30:17,700
hitting people and taking damage that sort of stuff.

1818
01:30:17,900 --> 01:30:22,900
So I hope you'll come back and join me for that and until then have a

1819
01:30:22,900 --> 01:30:24,900
good Wednesday and I will see you tomorrow.

