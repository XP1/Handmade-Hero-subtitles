1
00:00:00,200 --> 00:00:03,500
I'm okay.

2
00:00:04,400 --> 00:00:07,200
Hello everyone and welcome to handmade hero.

3
00:00:07,200 --> 00:00:11,100
The show where we code a complete game live from scratch here on

4
00:00:11,100 --> 00:00:12,600
Twitch using nothing.

5
00:00:12,600 --> 00:00:13,300
No libraries.

6
00:00:13,300 --> 00:00:13,900
No engines.

7
00:00:13,900 --> 00:00:18,200
We write everything ourselves both as an educational process and just

8
00:00:18,200 --> 00:00:19,000
because it's fun.

9
00:00:19,000 --> 00:00:21,200
Honestly, it's, it's kind of fun to get in there and see how

10
00:00:21,200 --> 00:00:21,900
everything works.

11
00:00:21,900 --> 00:00:25,200
And it's, it's really kind of very gratifying to know that you had

12
00:00:25,200 --> 00:00:27,500
kind of have like, a complete complete control over, absolutely

13
00:00:27,500 --> 00:00:29,300
everything that's going on.

14
00:00:30,000 --> 00:00:33,400
So that's why I like to do it and it seems like we've been actually

15
00:00:33,400 --> 00:00:34,400
making really good progress here.

16
00:00:34,400 --> 00:00:38,300
We're at the point where we've got a little little hero running around

17
00:00:38,300 --> 00:00:42,000
the screen, and we're kind of at the point where we're starting to

18
00:00:42,000 --> 00:00:43,300
learn like, equations of motion.

19
00:00:43,300 --> 00:00:45,600
We're starting to learn how to move the guy properly, how to react to

20
00:00:45,600 --> 00:00:46,100
things in the environment.

21
00:00:46,100 --> 00:00:51,200
And yesterday, we stopped right at the point where we needed to kind

22
00:00:51,200 --> 00:00:55,200
of think about how to do, how we want to do handling of running up

23
00:00:55,200 --> 00:00:57,400
against edges and stuff properly.

24
00:00:57,400 --> 00:00:59,900
And so I'd like to go ahead and Dive, Right.

25
00:01:00,000 --> 00:01:04,000
Into that today, but before I do, I will mention, of course that if

26
00:01:04,000 --> 00:01:06,800
you have pre-ordered the game on handmade here at a torque and would

27
00:01:06,800 --> 00:01:08,200
like to follow along with the source code.

28
00:01:08,200 --> 00:01:10,000
Remember, we are on day 45.

29
00:01:10,000 --> 00:01:12,100
So you will get a link in your email, go to that link.

30
00:01:12,100 --> 00:01:13,600
You can download the source code ZIP.

31
00:01:13,600 --> 00:01:17,200
And inside that Zip There Will Be source code for every single day.

32
00:01:17,500 --> 00:01:22,100
And so you want to do day 44 unzip that because that's what I'm

33
00:01:22,100 --> 00:01:25,000
starting with here on day 45, so you'll be right where I am if you

34
00:01:25,000 --> 00:01:29,200
start there, okay, so let's take a look at what's going on at the

35
00:01:29,200 --> 00:01:29,800
moment.

36
00:01:30,400 --> 00:01:31,700
So where we left off?

37
00:01:31,900 --> 00:01:34,300
We had just kind of started playing with the equations of motion.

38
00:01:34,700 --> 00:01:39,100
I showed everyone how to do both types of sort of, handling of when

39
00:01:39,100 --> 00:01:40,200
somebody runs into something.

40
00:01:40,600 --> 00:01:43,300
We did a bounce version where the guy would kind of bounce off of it

41
00:01:43,300 --> 00:01:45,700
and also a deadening version where he just stops.

42
00:01:46,200 --> 00:01:50,100
So, and what we wanted to do, of course, is it doesn't feel very good

43
00:01:50,100 --> 00:01:51,400
if he's just stops and sticks.

44
00:01:51,500 --> 00:01:55,600
So we want to do is have them keep moving along the edges when you

45
00:01:55,600 --> 00:01:58,500
kind of grind against them, because that's the standard thing to do in

46
00:01:58,500 --> 00:01:59,800
games is that, you know,

47
00:02:00,200 --> 00:02:01,300
It doesn't feel good.

48
00:02:01,300 --> 00:02:04,100
If you just stick against a wall, you want to kind of Glide against

49
00:02:04,100 --> 00:02:04,700
the wall.

50
00:02:04,900 --> 00:02:08,000
So that you keep moving, with, whatever downward velocity.

51
00:02:08,000 --> 00:02:10,600
You should have had when you come against like a vertical wall, and

52
00:02:10,600 --> 00:02:12,900
it's only the horizontal velocity that gets eaten.

53
00:02:13,600 --> 00:02:15,900
But we have a sticking problem that I explained yesterday.

54
00:02:15,900 --> 00:02:19,100
And that, is that we're not, we haven't written our Loop properly.

55
00:02:19,500 --> 00:02:19,900
I'm sorry.

56
00:02:19,900 --> 00:02:20,500
It's not even a loop.

57
00:02:20,500 --> 00:02:24,000
We haven't written our game update for the character in a useful way.

58
00:02:24,000 --> 00:02:25,800
And so, actually, what happens.

59
00:02:27,500 --> 00:02:31,500
Is we get we get a sticking problem and the sticking problem that we

60
00:02:31,500 --> 00:02:35,400
get is that if you imagine that, this is the wall, right here is the

61
00:02:35,400 --> 00:02:38,900
wall and the hero is coming towards the wall.

62
00:02:39,200 --> 00:02:42,900
And what, the way that we wrote our, our quick stuff when we were kind

63
00:02:42,900 --> 00:02:44,600
of just testing our tile map code out.

64
00:02:44,600 --> 00:02:47,800
We wrote in some little Quick Test code to collide the guy against the

65
00:02:47,800 --> 00:02:48,500
tile map.

66
00:02:48,500 --> 00:02:50,200
But it's not very sophisticated yet.

67
00:02:50,200 --> 00:02:53,700
And so all it was doing, is it moves the guy to the new location looks

68
00:02:53,700 --> 00:02:57,100
to see whether or not he could exist.

69
00:02:57,200 --> 00:02:59,100
Are like is he in a wall or not?

70
00:02:59,100 --> 00:02:59,800
And if he's not it?

71
00:03:00,100 --> 00:03:03,000
Epps the movie, if it's not, if he can't stand there, then it denies

72
00:03:03,000 --> 00:03:05,800
the move completely and it means the guy will just stay where he is on

73
00:03:05,800 --> 00:03:08,200
that frame, which leads to a nasty sticky problem.

74
00:03:08,200 --> 00:03:11,300
Sticking problem, which is, first of all, you lose at least one frame

75
00:03:11,300 --> 00:03:14,600
when that happens, but if you got into a situation where the guy was

76
00:03:14,600 --> 00:03:17,600
right up against the wall and then when we're are we correct our

77
00:03:17,600 --> 00:03:21,200
velocity and then the acceleration for a frame, puts it back inside

78
00:03:21,200 --> 00:03:21,500
the wall.

79
00:03:21,500 --> 00:03:25,100
Again, he could just stick there indefinitely and it's kind of hard to

80
00:03:25,100 --> 00:03:25,800
get that to happen.

81
00:03:25,800 --> 00:03:28,900
Floating Point Wise, It's a more of a rare case, but you can see that

82
00:03:28,900 --> 00:03:29,400
it does happen.

83
00:03:29,400 --> 00:03:29,800
Occasionally.

84
00:03:30,000 --> 00:03:31,000
Did you see that stick?

85
00:03:31,900 --> 00:03:33,800
You can kind of see how it'd be like right there.

86
00:03:34,300 --> 00:03:35,800
So it definitely can happen.

87
00:03:35,900 --> 00:03:38,600
It's just not as common as maybe I would have thought it would be

88
00:03:38,600 --> 00:03:40,500
possibly a little more common than it actually is.

89
00:03:40,900 --> 00:03:43,000
But it's not as common, but it still happens.

90
00:03:43,000 --> 00:03:43,200
Right?

91
00:03:43,200 --> 00:03:48,200
And so it's not, it's not something that we want our final code to

92
00:03:48,200 --> 00:03:48,700
have.

93
00:03:48,800 --> 00:03:51,900
And so, since the whole point of what we've been doing, these past few

94
00:03:51,900 --> 00:03:54,900
weeks, in addition to, of course, learning math and learning about

95
00:03:54,900 --> 00:03:57,900
sort of the stuff that we need to do, is, we've been trying to come up

96
00:03:57,900 --> 00:03:59,800
with all the things that we need our game engine to do.

97
00:03:59,900 --> 00:04:04,000
Rest and obviously this is one big area of the game engine that we

98
00:04:04,000 --> 00:04:07,900
want to work really well, which is how the player movement is handled,

99
00:04:07,900 --> 00:04:09,700
how the Collision detection is handled.

100
00:04:09,700 --> 00:04:12,900
And so, it's important for us to think a little bit about how we want

101
00:04:12,900 --> 00:04:13,800
to handle this.

102
00:04:13,800 --> 00:04:17,200
Now, there's two ways that we could handle this, but I kind of alluded

103
00:04:17,200 --> 00:04:17,600
to yesterday.

104
00:04:18,100 --> 00:04:23,600
There's probably more than two, but at least cover 21 is kind of the

105
00:04:23,600 --> 00:04:25,000
standard way of handling it.

106
00:04:25,000 --> 00:04:28,500
And the other is sort of the way that I'm not sure if anyone does it

107
00:04:28,500 --> 00:04:29,900
this way, but it was a way that I

108
00:04:29,900 --> 00:04:31,400
I did it on the witness recently.

109
00:04:33,600 --> 00:04:35,100
And which I think is pretty interesting.

110
00:04:35,700 --> 00:04:39,400
I'm just not sure if it can work in the larger scheme of this game.

111
00:04:39,400 --> 00:04:42,300
And so I'm not sure if we want to do it long term, but I was going to

112
00:04:42,300 --> 00:04:47,800
mention anyway, so typically what games will do and this this this is

113
00:04:47,800 --> 00:04:49,400
gets into another problem that we had.

114
00:04:49,600 --> 00:04:53,600
So well, we didn't really have the problem but we would potentially

115
00:04:53,600 --> 00:04:54,300
had a problem.

116
00:04:55,700 --> 00:04:59,200
Which is that if you think about what happens in this kind of a seam,

117
00:04:59,300 --> 00:05:01,600
which is like check a new location.

118
00:05:01,700 --> 00:05:02,800
Station and then move there.

119
00:05:02,800 --> 00:05:03,600
If it's free.

120
00:05:04,200 --> 00:05:06,800
You get into a situation where theoretically and we didn't ever

121
00:05:06,800 --> 00:05:09,000
construct any cases that could really do this.

122
00:05:09,300 --> 00:05:13,000
But theoretically, if you had a very thin wall, right?

123
00:05:13,700 --> 00:05:17,700
You could teleport through the wall because if this is the region that

124
00:05:17,700 --> 00:05:23,200
you can't stand, but you could stand out here, then it's only checking

125
00:05:23,200 --> 00:05:27,000
to see if the final location is okay, for the guy to stand that.

126
00:05:27,500 --> 00:05:31,600
And we know that we're never checking in this whole distance.

127
00:05:31,800 --> 00:05:33,200
That he moves, right?

128
00:05:33,700 --> 00:05:38,700
And so, that's also another problem that we are not dealing with that.

129
00:05:38,700 --> 00:05:41,200
We might want to deal with in the final version of the game.

130
00:05:41,200 --> 00:05:41,700
Right?

131
00:05:41,800 --> 00:05:43,800
So it's something to consider when we're thinking about how we want

132
00:05:43,800 --> 00:05:44,500
our Collision detection.

133
00:05:44,500 --> 00:05:48,600
Work is whether we're worried about that, right?

134
00:05:50,000 --> 00:05:52,200
And since our goal here is to create a professional quality game.

135
00:05:52,200 --> 00:05:56,000
I feel like we should handle that even though we may never actually

136
00:05:56,000 --> 00:05:58,700
have any maps that actually have this problem.

137
00:06:00,100 --> 00:06:02,900
I think it's it's the right thing to do to show how you would handle

138
00:06:02,900 --> 00:06:03,600
it properly.

139
00:06:04,200 --> 00:06:08,700
So anyway, let's suppose I'm back to my Standard wall case.

140
00:06:10,400 --> 00:06:15,900
So, a typical way that game might solve this problem is, if we have

141
00:06:15,900 --> 00:06:17,400
this movement, right?

142
00:06:17,900 --> 00:06:22,400
Then the first thing we would do is we write a collision detection

143
00:06:22,400 --> 00:06:27,500
routine that actually will check to see when collisions occur, rather

144
00:06:27,500 --> 00:06:29,600
than just whether they occur, right.

145
00:06:29,700 --> 00:06:33,100
So rather than taking a new position, which is here, right?

146
00:06:33,100 --> 00:06:34,200
This is our P Prime.

147
00:06:34,200 --> 00:06:34,900
This is our P.

148
00:06:34,900 --> 00:06:35,600
This is our hoops.

149
00:06:35,600 --> 00:06:36,700
This is our old position.

150
00:06:36,800 --> 00:06:40,000
This is our new position rather than just checking P Prime.

151
00:06:40,200 --> 00:06:44,500
It will actually check essential essentially, an extruded volume.

152
00:06:44,500 --> 00:06:48,000
It will it will test this whole volume here.

153
00:06:49,400 --> 00:06:51,600
And since we're in 2D it's more of an area than a volume.

154
00:06:51,600 --> 00:06:52,000
But you know what?

155
00:06:52,000 --> 00:06:56,500
I mean, it will test that against everything in the world as sort of

156
00:06:56,500 --> 00:07:00,500
like a geometric operation and it will find even if there was a thin

157
00:07:00,500 --> 00:07:02,000
wall and there's nothing on this side.

158
00:07:02,000 --> 00:07:04,400
It will find that intersection in the middle, right?

159
00:07:04,800 --> 00:07:06,900
And more to the point for are sticking problem.

160
00:07:07,000 --> 00:07:09,600
It will find the place where the intersection first occurs.

161
00:07:09,600 --> 00:07:10,000
It'll say,

162
00:07:10,100 --> 00:07:11,000
So, okay.

163
00:07:11,300 --> 00:07:14,900
This is the point at which he hits the wall.

164
00:07:15,400 --> 00:07:19,300
And so when you do that, you then have the ability to place the guy at

165
00:07:19,300 --> 00:07:22,400
the location where he was going to hit the wall, right?

166
00:07:23,000 --> 00:07:27,500
Instead of only having the choice between the new position and the old

167
00:07:27,500 --> 00:07:27,800
position.

168
00:07:27,800 --> 00:07:31,700
We now generate a third position which actually becomes the P Prime

169
00:07:31,700 --> 00:07:34,900
and we throw that one away and say here is the place where he actually

170
00:07:34,900 --> 00:07:35,900
would have ended up.

171
00:07:36,100 --> 00:07:36,600
Right.

172
00:07:37,300 --> 00:07:37,900
But

173
00:07:40,700 --> 00:07:44,700
Doing that is still technically going to cause sticking problems.

174
00:07:44,700 --> 00:07:45,400
In two ways.

175
00:07:45,600 --> 00:07:45,900
One.

176
00:07:45,900 --> 00:07:48,500
We haven't talked about what we would do with the velocity problem

177
00:07:48,500 --> 00:07:49,000
yet.

178
00:07:49,300 --> 00:07:54,100
And the other is that we would when we do that step.

179
00:07:54,300 --> 00:07:58,300
We now have thrown away a bunch of the players actual momentum, right?

180
00:07:58,300 --> 00:08:02,500
Because the player actually probably should have ended up here because

181
00:08:02,500 --> 00:08:05,600
they still had enough downward momentum to get all the way there.

182
00:08:05,700 --> 00:08:07,800
So the only thing we really wanted to throw away.

183
00:08:07,900 --> 00:08:09,200
Was this this momentum?

184
00:08:09,200 --> 00:08:09,700
That was going

185
00:08:09,900 --> 00:08:11,300
To the wall, right?

186
00:08:11,800 --> 00:08:15,900
So we want to basically move the player to hear as the movement not to

187
00:08:15,900 --> 00:08:16,400
hear.

188
00:08:16,800 --> 00:08:20,900
So often times, what they'll do is they'll resolve these things in

189
00:08:20,900 --> 00:08:24,000
sort of a loop like I saying before, where they'll move the player and

190
00:08:24,000 --> 00:08:26,800
then they'll they'll take whatever the remaining, they'll correct the

191
00:08:26,800 --> 00:08:28,600
velocity just like we were doing yesterday.

192
00:08:28,800 --> 00:08:31,700
They'll take whatever remaining time step there was because you know

193
00:08:31,700 --> 00:08:33,299
how much time it took to get here, right?

194
00:08:33,299 --> 00:08:35,600
You know how much of the time step it took to move you?

195
00:08:35,600 --> 00:08:36,000
There.

196
00:08:36,400 --> 00:08:38,799
You'll take how much time it was and then you'll try to move them.

197
00:08:39,700 --> 00:08:42,600
In the resulting velocity direction that's been corrected for the wall

198
00:08:42,799 --> 00:08:43,700
to see if you can do that.

199
00:08:43,799 --> 00:08:44,400
Right?

200
00:08:44,700 --> 00:08:48,200
And you can see that this is kind of ugly because it's, this is

201
00:08:48,200 --> 00:08:54,900
essentially a search in t, you might say, it is a iterative loop.

202
00:08:54,900 --> 00:08:58,900
That's that that is basically searching through time for answers.

203
00:08:59,100 --> 00:08:59,500
It's

204
00:09:00,000 --> 00:09:02,800
Your time, it's doing some part of the delta T here.

205
00:09:03,500 --> 00:09:05,300
So, you know, it's some fraction of this.

206
00:09:05,300 --> 00:09:09,400
It's one over a which is some fraction of that time step.

207
00:09:09,500 --> 00:09:10,200
It's using.

208
00:09:10,200 --> 00:09:14,000
And then it's trying to use one over, basically the rest of it when

209
00:09:14,400 --> 00:09:15,500
you know this kind of thing.

210
00:09:15,700 --> 00:09:17,600
It's using the rest of it to move here.

211
00:09:18,200 --> 00:09:22,400
And this just gets kind of messy because searches in t, are very

212
00:09:22,400 --> 00:09:26,300
difficult to Bound in any real way.

213
00:09:26,400 --> 00:09:29,900
Because what if I had a very complex sort of

214
00:09:30,000 --> 00:09:32,600
All situation at the end here, right?

215
00:09:32,700 --> 00:09:33,900
And this is kind of exaggerated.

216
00:09:33,900 --> 00:09:37,500
But just to sort of show you what I mean by the problems, you know,

217
00:09:37,600 --> 00:09:41,200
what exactly should be happening when he goes against here, right?

218
00:09:41,200 --> 00:09:42,500
Am I going to do this thing?

219
00:09:42,500 --> 00:09:47,200
Where I actually take tons of time steps, tons of little portions of

220
00:09:47,200 --> 00:09:50,200
the time step and have to do like eight resolutions of my Collision

221
00:09:50,200 --> 00:09:51,200
Loop to move.

222
00:09:51,200 --> 00:09:54,900
The guy all down through there, you know, and is that really a good

223
00:09:54,900 --> 00:09:56,200
use of time?

224
00:09:56,400 --> 00:09:58,000
Is that the way that I want?

225
00:09:58,000 --> 00:09:59,800
My inner loop there to be running?

226
00:10:00,700 --> 00:10:02,900
And it's, it's unbounded in some sense.

227
00:10:02,900 --> 00:10:03,200
Right?

228
00:10:03,200 --> 00:10:06,800
Like, I don't even have any idea how many of these I would have to do

229
00:10:07,400 --> 00:10:11,100
in order to actually get the guy to resolve this position.

230
00:10:11,100 --> 00:10:15,100
And I feel like, you know, you could imagine this being the case with

231
00:10:15,100 --> 00:10:16,700
a wall that was curved.

232
00:10:16,700 --> 00:10:19,500
Like let's say I wanted to do a rounded wall like this.

233
00:10:20,300 --> 00:10:23,900
Well, if I have a rounded wall and I'm pushing against the wall like

234
00:10:23,900 --> 00:10:27,200
this, you could imagine this being the very worst case, where it keeps

235
00:10:27,200 --> 00:10:28,800
having to correct that velocity.

236
00:10:28,900 --> 00:10:30,000
And it's almost like

237
00:10:30,300 --> 00:10:33,500
It's almost like the number of iterations goes to Infinity, because I

238
00:10:33,500 --> 00:10:35,900
keep having to move a little bit down, a little bit, down, a little

239
00:10:35,900 --> 00:10:36,500
bit, down a little bit down.

240
00:10:36,500 --> 00:10:40,000
So the when I correct, because remember, the way we correct, as we

241
00:10:40,000 --> 00:10:43,800
look at the that normal to the wall, and we correct this way, so we

242
00:10:43,800 --> 00:10:44,300
correct it.

243
00:10:44,300 --> 00:10:46,000
So he's only moving lateral to the wall.

244
00:10:46,100 --> 00:10:49,500
But lateral to the wall in a curved wall, will constantly still be

245
00:10:49,500 --> 00:10:50,700
pushing you into the wall.

246
00:10:51,100 --> 00:10:51,600
Right?

247
00:10:52,700 --> 00:10:56,900
So there's all these problems with this approach and that was really

248
00:10:56,900 --> 00:10:59,900
what led me to look for a better solution then.

249
00:11:00,100 --> 00:11:04,000
I'd seen presented before when I was working on the witness and I'll

250
00:11:04,000 --> 00:11:07,200
tell you briefly right now, the solution that I came up with which I

251
00:11:07,200 --> 00:11:09,600
really like and it works fantastic on the witness.

252
00:11:09,700 --> 00:11:11,900
I just don't know if it's appropriate for an action game.

253
00:11:12,500 --> 00:11:16,000
So I'll go and I'll sort of say what it is.

254
00:11:16,500 --> 00:11:20,500
So what I decided to do was say well search in tea.

255
00:11:22,800 --> 00:11:24,400
Is is not good.

256
00:11:24,400 --> 00:11:25,700
Let's not do certainty.

257
00:11:25,700 --> 00:11:28,900
Certainty is unbounded and unpredictable and doesn't work very well

258
00:11:28,900 --> 00:11:30,100
for a lot of scenarios.

259
00:11:30,400 --> 00:11:32,900
And what a lot of games do is they just cheese out and either just do

260
00:11:32,900 --> 00:11:36,100
some number of Loops or they do some cheesy Stuff where they kind of

261
00:11:36,100 --> 00:11:39,800
like don't handle a bunch of those cases like you if you grind into a

262
00:11:39,800 --> 00:11:40,100
curve.

263
00:11:40,100 --> 00:11:41,700
Well, you just do something awful.

264
00:11:43,100 --> 00:11:47,300
So these are just, you know, search and T is just is just busted.

265
00:11:47,700 --> 00:11:49,500
It was, my was my official opinion.

266
00:11:49,900 --> 00:11:51,500
So, what I decided to do was, let's turn

267
00:11:51,600 --> 00:11:55,100
Turn a search and key into a search in key, right?

268
00:11:55,200 --> 00:11:58,900
So instead of searching in time, right, instead of searching in time.

269
00:11:59,000 --> 00:11:59,600
Let's search in.

270
00:12:00,000 --> 00:12:04,400
Mission and see if we can find a position that will work because the

271
00:12:04,400 --> 00:12:08,000
search in position is much more easily bounded and much more easily

272
00:12:08,000 --> 00:12:09,600
understood, right?

273
00:12:10,800 --> 00:12:17,100
So what I do in the witness is I think about whatever I have in terms

274
00:12:17,100 --> 00:12:18,900
of geometry for the Collision.

275
00:12:18,900 --> 00:12:20,900
So let's say I've got this sort of a thing here.

276
00:12:21,500 --> 00:12:26,100
Basically, what I have is, I have, you know, a grid that that is used,

277
00:12:26,100 --> 00:12:27,500
that is tessellated out.

278
00:12:28,800 --> 00:12:33,600
For a bunch of reasons that would be clearer if we were actually in

279
00:12:34,200 --> 00:12:38,500
talking about the witness, but basically, like it's got a tessellated

280
00:12:38,500 --> 00:12:39,000
out thing.

281
00:12:39,000 --> 00:12:40,700
That's very fine, resolution.

282
00:12:40,700 --> 00:12:44,500
That sort of says exactly what the you know what the Collision

283
00:12:44,500 --> 00:12:48,200
geometry looks at like at any given point and it knows, you know,

284
00:12:48,200 --> 00:12:52,400
basically that you can't be in here like that but at you can't be in

285
00:12:52,400 --> 00:12:53,200
here, right?

286
00:12:53,400 --> 00:12:57,700
And so what I do is when somebody is moving in this space, what I

287
00:12:57,800 --> 00:13:01,400
Is I go back to the old scheme which is just, let's just take the

288
00:13:01,400 --> 00:13:04,800
location of the guy that he would be at.

289
00:13:04,800 --> 00:13:10,700
And then what I say is, let's search in position because I know that,

290
00:13:10,700 --> 00:13:14,600
however, long this is, I can basically make a rectangle around,

291
00:13:14,600 --> 00:13:18,500
however, long the span is that he moved in that time.

292
00:13:18,500 --> 00:13:24,500
Let's just search in the grid for the closest point to where ever, he

293
00:13:24,500 --> 00:13:26,500
would have ended up, right?

294
00:13:26,500 --> 00:13:27,600
So that just

295
00:13:27,800 --> 00:13:29,400
Is it into a nice bounded search?

296
00:13:29,400 --> 00:13:29,800
Where I know?

297
00:13:29,800 --> 00:13:33,500
I'm just searching a predetermined number of cells and in each cell.

298
00:13:33,500 --> 00:13:37,000
I just look, what is the closest point in this polygon to this

299
00:13:37,000 --> 00:13:42,200
destination point and that always gives you a 100% perfect.

300
00:13:42,300 --> 00:13:46,600
100% predictable result for that metric, right?

301
00:13:46,700 --> 00:13:49,800
It's really really nice and it's buttery smooth.

302
00:13:49,800 --> 00:13:53,200
You never get caught on little weird Edge artifacts and it even has

303
00:13:53,200 --> 00:13:56,400
the ability to do something that I consider beneficial in the witness,

304
00:13:56,400 --> 00:13:57,700
but that I wouldn't necessarily consider.

305
00:13:57,900 --> 00:13:58,600
Official in this game.

306
00:13:58,600 --> 00:14:01,100
I'm not sure that's why I'm a little hesitant about it.

307
00:14:01,400 --> 00:14:05,900
But basically it has the ability to Glide over transient errors,

308
00:14:06,100 --> 00:14:06,500
right?

309
00:14:06,600 --> 00:14:09,800
So if you have a wall that looks like this because of some weird

310
00:14:09,800 --> 00:14:13,600
computational geometry stuff like the artists, you know, had some

311
00:14:14,000 --> 00:14:14,500
walkway.

312
00:14:14,500 --> 00:14:16,700
That was kind of sticking in there and errant way and you got this

313
00:14:16,700 --> 00:14:19,800
sort of thing and I'm trying to grind along this wall.

314
00:14:20,300 --> 00:14:25,100
Well, if you are actually grinding along this wall in a normal engine,

315
00:14:25,300 --> 00:14:27,700
when you got here, you'd stick on this.

316
00:14:27,800 --> 00:14:31,000
This tiny little microscopic bump that, you may not even really be

317
00:14:31,000 --> 00:14:33,400
able to see, but it's in the Collision geometry, right?

318
00:14:33,400 --> 00:14:36,500
You'd stick and it feels crappy, right?

319
00:14:37,000 --> 00:14:40,300
But in this scheme because what it's doing is doing that search.

320
00:14:40,300 --> 00:14:44,200
It finds the fact that you could have moved around that and allows you

321
00:14:44,200 --> 00:14:49,700
to Tunnel through things like that, if you could have walked to them,

322
00:14:49,900 --> 00:14:50,500
right?

323
00:14:50,500 --> 00:14:54,200
So it's buttery smooth on edges, way better than anything else I've

324
00:14:54,200 --> 00:14:54,800
ever seen.

325
00:14:55,300 --> 00:14:57,500
And it was really, really good when I, when I

326
00:14:57,800 --> 00:14:59,700
Used when I switch to using this system.

327
00:15:00,300 --> 00:15:03,900
And so, so I was pretty psyched about that and it feels awesome to do.

328
00:15:04,600 --> 00:15:08,100
So, search and P is actually way better than search and T4 Collision

329
00:15:08,100 --> 00:15:08,700
detection.

330
00:15:09,500 --> 00:15:12,300
I don't know if anyone's ever actually, I don't know.

331
00:15:12,300 --> 00:15:14,800
If I'm the first person to have done that I assume not because,

332
00:15:14,800 --> 00:15:17,100
usually, anytime you do something, someone's done it before.

333
00:15:17,100 --> 00:15:18,200
You just haven't heard about it.

334
00:15:19,100 --> 00:15:22,000
So, I don't know if there's more write-ups about that somewhere, but

335
00:15:22,000 --> 00:15:25,000
that's a pretty I mean, I think that was a pretty complete explanation

336
00:15:25,000 --> 00:15:26,900
in terms of just what you would need to do to write it.

337
00:15:27,600 --> 00:15:31,400
So really, this is probably, this is what I would like to do, if we

338
00:15:31,400 --> 00:15:32,300
could do it.

339
00:15:33,100 --> 00:15:36,800
I'm just not sure how appropriate that is, for an action game because

340
00:15:36,900 --> 00:15:41,500
producing the searchable set is actually a relatively hard problem,

341
00:15:41,600 --> 00:15:42,200
right?

342
00:15:43,100 --> 00:15:47,400
You have to be able to search your geometry and I don't know if we've

343
00:15:47,400 --> 00:15:50,000
got lots of things that are moving around and whatever.

344
00:15:50,000 --> 00:15:53,700
I don't know how easy it would be to really produce that searchable

345
00:15:53,700 --> 00:15:54,300
set.

346
00:15:54,400 --> 00:15:55,700
Very, very easily.

347
00:15:55,700 --> 00:15:57,300
Because remember, we have to

348
00:15:57,500 --> 00:16:01,800
You know, like let's say we had something where, you know, this is

349
00:16:01,800 --> 00:16:05,200
what a cell would look like, because there's a guy, you know, a guy

350
00:16:05,200 --> 00:16:08,600
with cylindrical Collision or something who's in there and we want to

351
00:16:08,600 --> 00:16:09,900
know what the closest point is.

352
00:16:10,000 --> 00:16:13,300
It means you have to know how to do closest point on something that

353
00:16:13,300 --> 00:16:15,300
looks like that, right?

354
00:16:15,900 --> 00:16:18,700
And you can do stuff where you kind of tessellate it out and don't

355
00:16:18,800 --> 00:16:19,900
exactly do it that way.

356
00:16:19,900 --> 00:16:22,900
But point being, it's not it's a system.

357
00:16:22,900 --> 00:16:26,100
That's that's much easier to implement when you're talking about a

358
00:16:26,100 --> 00:16:27,000
world that looks like the

359
00:16:27,400 --> 00:16:28,200
Switch everywhere.

360
00:16:28,200 --> 00:16:32,000
Everything is stationary and known versus something.

361
00:16:32,000 --> 00:16:34,200
In an action game where there's lots of, like, small things moving

362
00:16:34,200 --> 00:16:35,400
around in that sort of stuff.

363
00:16:35,500 --> 00:16:39,100
It's unclear necessarily how you turn things into a search in P

364
00:16:39,100 --> 00:16:41,800
problem in an efficient way, right?

365
00:16:47,200 --> 00:16:47,600
Okay.

366
00:16:49,000 --> 00:16:53,600
So that is basically the Dilemma that I face now is this is what I

367
00:16:53,600 --> 00:16:55,700
pretty much know to be a better way to write things.

368
00:16:56,000 --> 00:17:00,300
But I've never I since I only just came up with it on the witness.

369
00:17:00,300 --> 00:17:02,500
I haven't had any experience trying to do it in action game.

370
00:17:02,500 --> 00:17:06,000
I don't know if we would struggle to make it work.

371
00:17:06,000 --> 00:17:12,400
Well, in terms of producing the search and so this is the way that's

372
00:17:12,400 --> 00:17:14,000
kind of a little more tried and true.

373
00:17:14,800 --> 00:17:19,700
And I really don't know which one we should do for our current setup,

374
00:17:19,700 --> 00:17:21,000
where we have a tile map.

375
00:17:21,000 --> 00:17:24,000
And the tile map is actually definitive because right now, we haven't

376
00:17:24,099 --> 00:17:26,900
done any of the other stuff where we've got guys, moving around and we

377
00:17:26,900 --> 00:17:29,400
haven't done any of this stuff, where we populate, the tile map with

378
00:17:29,400 --> 00:17:31,900
Collision geometry and then stop colliding with the tile map and

379
00:17:31,900 --> 00:17:34,300
collide with the actual things are in the tile map or things like

380
00:17:34,300 --> 00:17:34,700
that.

381
00:17:34,800 --> 00:17:37,500
We haven't done any of that stuff searching P would be trivial for us

382
00:17:37,500 --> 00:17:40,700
to implement right now and would definitely be the right way to go.

383
00:17:40,700 --> 00:17:44,000
But that doesn't mean that it would be the correct way to go.

384
00:17:44,700 --> 00:17:46,700
You know, at the end.

385
00:17:47,100 --> 00:17:48,400
So I don't know what to do.

386
00:17:48,500 --> 00:17:49,500
I really don't.

387
00:17:50,500 --> 00:17:54,000
It's a very hard question since I believe this to be the superior

388
00:17:54,000 --> 00:17:55,000
method in general.

389
00:17:55,100 --> 00:17:59,200
My inclination is for us to just do this and say will struggle with it

390
00:17:59,200 --> 00:17:59,800
a little bit.

391
00:18:00,000 --> 00:18:03,800
We start to do the more complex stuff, but maybe that's just what we

392
00:18:03,800 --> 00:18:06,800
should do, and it should be a little bit of an exploration.

393
00:18:07,000 --> 00:18:09,700
And so we'll start with this as the way we do things.

394
00:18:09,800 --> 00:18:13,100
And then, as we see how it goes out, if we need to turn to something

395
00:18:13,100 --> 00:18:14,000
like this, we can.

396
00:18:14,400 --> 00:18:18,300
But at least this, I believe, is personally, I think the more stable

397
00:18:18,300 --> 00:18:20,500
way to do it.

398
00:18:20,800 --> 00:18:25,500
So really all we would need to do to implement that in our current

399
00:18:25,500 --> 00:18:26,100
system, right?

400
00:18:26,100 --> 00:18:27,700
Because our current systems of tilemap.

401
00:18:27,700 --> 00:18:29,800
It's totally rectilinear and

402
00:18:30,000 --> 00:18:32,100
We haven't gotten to the point where we have more complicated

403
00:18:32,100 --> 00:18:33,300
Collision geometry in there.

404
00:18:33,600 --> 00:18:36,100
So in a tile map, if you were actually doing Collision detection on

405
00:18:36,100 --> 00:18:38,400
tilemap, then there's no question that you would do it this way

406
00:18:38,900 --> 00:18:40,000
because it's really simple.

407
00:18:40,200 --> 00:18:43,500
All we have to do is take the guy and his new position.

408
00:18:43,700 --> 00:18:44,300
Right?

409
00:18:44,900 --> 00:18:48,400
All we do is we say we've got the guy, we've got his new position and

410
00:18:48,400 --> 00:18:51,400
all we really need to do is like make some conservative boundary

411
00:18:51,400 --> 00:18:52,200
around that.

412
00:18:52,200 --> 00:18:55,200
So we just make some rectangle around that and say what are all the

413
00:18:55,200 --> 00:18:58,200
tiles that are touched by this rectangle, right?

414
00:18:58,200 --> 00:18:59,800
And so in this case, it would be

415
00:19:00,100 --> 00:19:03,000
You know, these tiles here, right?

416
00:19:04,100 --> 00:19:08,300
Like that, then what we do is say, all right, for each, one of those

417
00:19:08,300 --> 00:19:08,900
tiles.

418
00:19:09,200 --> 00:19:13,100
We just Loop through the tiles and like a for Loop straightaway and we

419
00:19:13,100 --> 00:19:14,700
say for each one of those tiles.

420
00:19:16,000 --> 00:19:16,600
Right.

421
00:19:16,700 --> 00:19:18,500
We just need to kind of go watch.

422
00:19:18,500 --> 00:19:19,800
I guess you wouldn't do for never mind.

423
00:19:19,800 --> 00:19:20,500
That's, that's wrong.

424
00:19:21,200 --> 00:19:22,200
We then do a flood fill.

425
00:19:22,300 --> 00:19:26,600
We say, for this tile, which of the tiles, you know, could I actually

426
00:19:26,700 --> 00:19:29,200
get to like, which of these tiles can I get to write?

427
00:19:29,300 --> 00:19:30,500
So can I get to this one?

428
00:19:30,600 --> 00:19:32,200
If so add it to the set?

429
00:19:32,300 --> 00:19:33,000
Can I get to this one?

430
00:19:33,000 --> 00:19:34,000
Add it to the set?

431
00:19:34,000 --> 00:19:35,500
Okay, get to this one, add it to the set.

432
00:19:35,500 --> 00:19:36,000
Right?

433
00:19:36,000 --> 00:19:37,300
I get to this one, add it to the set.

434
00:19:37,300 --> 00:19:40,700
So the ones that I can walk to add to the set, right?

435
00:19:41,300 --> 00:19:43,400
Because you only want to get to ones that you actually could get to.

436
00:19:43,400 --> 00:19:45,700
So, you need to know that there was a path to

437
00:19:45,800 --> 00:19:47,000
I'm from your current location.

438
00:19:47,000 --> 00:19:49,500
So you basically flood fill out words and you don't have to flood,

439
00:19:49,500 --> 00:19:52,200
fill past whatever you set that boundary to write.

440
00:19:53,000 --> 00:19:54,000
Once we've done that.

441
00:19:54,000 --> 00:19:57,400
We then check all of the tiles that we actually picked up there.

442
00:19:58,100 --> 00:19:59,800
All those towels that we actually picked up.

443
00:19:59,900 --> 00:20:03,400
We then say, okay, for that tile, is it solid?

444
00:20:03,500 --> 00:20:06,600
If it's solid, we don't consider it because you can't stand there.

445
00:20:07,400 --> 00:20:08,400
If it's empty.

446
00:20:08,700 --> 00:20:12,800
Then we say, is the point that we're trying to stand in the new point.

447
00:20:12,900 --> 00:20:13,700
Is it in there?

448
00:20:14,200 --> 00:20:15,600
If it's inside there?

449
00:20:15,800 --> 00:20:17,200
Then that's the point.

450
00:20:17,200 --> 00:20:17,900
We can move there.

451
00:20:18,000 --> 00:20:19,700
Just go right and we're done.

452
00:20:20,600 --> 00:20:25,200
If it's not, we say, Okay along the edges of that guy.

453
00:20:25,800 --> 00:20:29,500
Where is the closest point, right on each of the edges?

454
00:20:29,500 --> 00:20:32,200
Where is the closest point to the to this point?

455
00:20:32,200 --> 00:20:32,900
Right?

456
00:20:33,400 --> 00:20:35,600
And that handles the case where you're actually standing right on the

457
00:20:35,600 --> 00:20:36,800
edge, right?

458
00:20:36,800 --> 00:20:40,200
And we produce that point and say, okay, then, that's the closest

459
00:20:40,200 --> 00:20:40,800
point for me.

460
00:20:41,200 --> 00:20:45,500
We do that for all of the tiles and for whichever tile at the end has

461
00:20:45,500 --> 00:20:45,600
the

462
00:20:45,800 --> 00:20:49,300
A point that produced the point that is the closest to the one that we

463
00:20:49,300 --> 00:20:49,900
wanted.

464
00:20:49,900 --> 00:20:51,400
That's the move that we accept.

465
00:20:52,400 --> 00:20:52,900
That's it.

466
00:20:53,700 --> 00:20:56,300
So it's really, really, really pretty basic if that makes sense.

467
00:21:02,800 --> 00:21:03,300
All right.

468
00:21:05,000 --> 00:21:05,700
So that's it.

469
00:21:07,300 --> 00:21:11,400
Yeah, I guess that's, that's really the entirety of the algorithm for

470
00:21:11,400 --> 00:21:12,100
a tile map.

471
00:21:12,100 --> 00:21:13,400
It's really pretty straightforward.

472
00:21:13,900 --> 00:21:16,900
And so yeah, we can just go ahead and do that and we don't even have

473
00:21:16,900 --> 00:21:18,200
to really do the flood fill.

474
00:21:18,700 --> 00:21:21,900
If we don't want to at this particular point in time because we have

475
00:21:21,900 --> 00:21:23,200
Simply Connected spaces.

476
00:21:23,400 --> 00:21:27,900
We could just do it without doing the flood fill, but the reason to do

477
00:21:27,900 --> 00:21:32,800
the flood fill is just that well like, you know,

478
00:21:33,800 --> 00:21:34,700
Let's say.

479
00:21:36,500 --> 00:21:38,900
Let's say that I've got my guy, right?

480
00:21:39,600 --> 00:21:42,400
And and I want to move him.

481
00:21:42,500 --> 00:21:43,300
Oh, there's one more thing.

482
00:21:43,300 --> 00:21:43,600
I.

483
00:21:43,800 --> 00:21:44,200
Yeah.

484
00:21:44,300 --> 00:21:44,500
Okay.

485
00:21:44,500 --> 00:21:46,500
There's one more thing that I do have to actually talk about.

486
00:21:46,500 --> 00:21:49,500
But that makes this actually harder, and it actually makes makes

487
00:21:49,500 --> 00:21:49,800
everything.

488
00:21:49,800 --> 00:21:50,300
That's one thing.

489
00:21:50,300 --> 00:21:54,500
I should talk about, has nothing to do with with, with this scheme.

490
00:21:55,000 --> 00:21:57,400
But the reason for the flood fill is, let's say that there was a wall

491
00:21:57,400 --> 00:21:59,100
here and a wall here.

492
00:21:59,600 --> 00:22:01,700
Then, technically, like we're not supposed to be able to move through

493
00:22:01,700 --> 00:22:02,000
that.

494
00:22:02,000 --> 00:22:04,400
Little like, that little part in the corner.

495
00:22:04,700 --> 00:22:06,200
So if you just checked each of these,

496
00:22:06,400 --> 00:22:09,400
Tiles without actually doing the flood.

497
00:22:09,400 --> 00:22:10,600
Fill to see where you could go.

498
00:22:10,700 --> 00:22:13,800
You would think that you could just move directly to their right, but

499
00:22:13,800 --> 00:22:16,600
you don't want to do that, because there's no way to actually get to

500
00:22:16,600 --> 00:22:17,900
that Square from here.

501
00:22:18,500 --> 00:22:21,100
And so that's why you do the conductivity thing.

502
00:22:21,100 --> 00:22:23,500
To make sure that you actually could walk to that square before you

503
00:22:23,500 --> 00:22:25,300
accept any points that are in it.

504
00:22:27,000 --> 00:22:30,100
So, here's the problem that's talking about.

505
00:22:31,300 --> 00:22:32,100
Are they thinking of?

506
00:22:33,700 --> 00:22:37,600
So the other problem that we have with any Collision scheme is

507
00:22:37,600 --> 00:22:42,600
currently, we don't really have an answer for what we're doing about

508
00:22:42,600 --> 00:22:45,500
the fact that the guy is not a single point, right?

509
00:22:45,800 --> 00:22:49,600
So any Collision scheme that we start to work with has an extra

510
00:22:49,600 --> 00:22:54,700
problem to deal with, right, which is that whatever it's doing.

511
00:22:54,800 --> 00:22:57,900
It has to deal with the fact that the guy is like a fatty, right?

512
00:22:57,900 --> 00:23:02,500
The guy is like, you know, he's larger than a point, you know, right.

513
00:23:02,500 --> 00:23:03,300
He's

514
00:23:04,300 --> 00:23:05,300
How do I raise my?

515
00:23:05,300 --> 00:23:05,800
There it is?

516
00:23:08,200 --> 00:23:09,200
We were checking.

517
00:23:09,200 --> 00:23:11,900
Basically, this line is what we were saying was the guy.

518
00:23:12,200 --> 00:23:14,500
But eventually we probably wanted to be like more of like a like a

519
00:23:14,500 --> 00:23:15,000
circle.

520
00:23:15,000 --> 00:23:18,700
Anyway, like sort of this, this region that I'm kind of D marketing

521
00:23:18,700 --> 00:23:22,900
here would be his Collision region, but he would bump into things.

522
00:23:23,000 --> 00:23:27,000
And so right now he's infinitely thin and why, but he's thick in X

523
00:23:27,300 --> 00:23:30,700
which means it's easy for him to fit through doors this way, but

524
00:23:30,700 --> 00:23:33,200
harder for him to fit through doors, the other way, right?

525
00:23:33,200 --> 00:23:35,700
I'm like, if I go, let's find a door.

526
00:23:36,000 --> 00:23:36,400
Yeah.

527
00:23:36,700 --> 00:23:37,600
So if I go through this

528
00:23:37,700 --> 00:23:38,100
Door.

529
00:23:38,300 --> 00:23:40,300
It's harder for me because I can always hit.

530
00:23:40,300 --> 00:23:41,700
I can hit an edge like that.

531
00:23:42,300 --> 00:23:44,600
And so that was just, I mean, we haven't really done any thinking

532
00:23:44,600 --> 00:23:45,400
about any of this stuff.

533
00:23:45,400 --> 00:23:47,500
But that was what we had sort of done.

534
00:23:48,000 --> 00:23:50,800
It's made it so that he wouldn't, you know, clip into things.

535
00:23:51,200 --> 00:23:54,800
So turning him into a point is another problem.

536
00:23:55,200 --> 00:23:58,500
And the reason that that we would want to turn him into a point.

537
00:23:58,500 --> 00:23:59,800
The reason that we'd want to think about him as

538
00:24:00,000 --> 00:24:00,300
Point.

539
00:24:00,300 --> 00:24:04,500
Instead of, as a sort of a circle is it's much harder to closer to

540
00:24:04,500 --> 00:24:05,300
check with the circle.

541
00:24:05,500 --> 00:24:09,300
For example, if I have a wall, you know, and I want to know if the guy

542
00:24:09,300 --> 00:24:12,200
hits the wall, if he's a point, right?

543
00:24:12,200 --> 00:24:15,100
Then I'm just talking about checking a line segment against another

544
00:24:15,100 --> 00:24:16,000
line segment.

545
00:24:16,100 --> 00:24:16,300
Right?

546
00:24:16,300 --> 00:24:18,900
So I'm basically checking for the intersection of two line segments,

547
00:24:18,900 --> 00:24:20,600
which doesn't sound like a very hard problem.

548
00:24:20,600 --> 00:24:21,200
Right?

549
00:24:21,500 --> 00:24:27,100
But if he's a circle now, I have to check an extruded Circle, right?

550
00:24:27,400 --> 00:24:29,900
Versus a line segment, which is

551
00:24:30,000 --> 00:24:34,700
definitely a more, you know, a more serious problem that you would

552
00:24:34,700 --> 00:24:36,000
have to solve, right?

553
00:24:36,000 --> 00:24:41,500
So in in the first scheme, if for search and T, this is definitely a

554
00:24:41,500 --> 00:24:42,400
problem, right?

555
00:24:42,400 --> 00:24:45,300
Definitely, definitely a problem because now you have to have a more

556
00:24:45,300 --> 00:24:50,500
serious Collision routine there and and you know, that's that's a bit

557
00:24:50,500 --> 00:24:50,800
rough.

558
00:24:50,800 --> 00:24:56,300
So similarly in our scheme that I was proposing we do which is

559
00:24:56,300 --> 00:24:58,200
searched P for search and P.

560
00:24:58,200 --> 00:24:59,800
It also is a problem just in

561
00:24:59,900 --> 00:25:00,400
Different way.

562
00:25:00,400 --> 00:25:05,100
And the way that it is a problem is that if my guy has volume again,

563
00:25:05,100 --> 00:25:05,500
right?

564
00:25:05,500 --> 00:25:09,500
If he has an area then that routine where I check for the closest

565
00:25:09,500 --> 00:25:12,700
point is a little harder as well right now.

566
00:25:12,700 --> 00:25:19,400
It doesn't happen to actually be harder in in just this one isolated

567
00:25:19,400 --> 00:25:20,000
case.

568
00:25:20,100 --> 00:25:21,700
Meaning the thing that we're going to implement today.

569
00:25:21,700 --> 00:25:22,800
It's actually pretty easy.

570
00:25:23,200 --> 00:25:26,400
The reason it's pretty easy is because if the guy is just a circle or

571
00:25:26,400 --> 00:25:29,900
an ellipse or whatever, then all we really have to do is

572
00:25:29,900 --> 00:25:33,300
Is when we're considering the rectangle that he could be in for,

573
00:25:33,300 --> 00:25:36,400
finding the closest point, instead of using the whole rectangle.

574
00:25:36,600 --> 00:25:40,800
We just look to see if the if the square on a side of the rectangle is

575
00:25:40,800 --> 00:25:41,400
filled.

576
00:25:41,400 --> 00:25:45,200
And if it is we just assume we just treat the rectangle as if it was

577
00:25:45,200 --> 00:25:50,600
the the ellipses long radius in that direction away from the filled

578
00:25:50,600 --> 00:25:52,000
area, right?

579
00:25:52,400 --> 00:25:53,100
Like that.

580
00:25:53,800 --> 00:25:56,500
And again, this is just another way that search in P is superior to

581
00:25:56,500 --> 00:25:59,800
the other method is like, this is way easier than trying.

582
00:26:00,000 --> 00:26:03,300
To do that, continuous Collision detection, get it handles, the Kill,

583
00:26:03,300 --> 00:26:04,900
The Continuous case just fine.

584
00:26:04,900 --> 00:26:07,100
You will never tunnel through anything as long as you do, that flood

585
00:26:07,100 --> 00:26:07,800
fill pattern.

586
00:26:08,600 --> 00:26:11,200
So it is a little more complicated than I originally said, but only

587
00:26:11,200 --> 00:26:16,400
slightly when we do it this way, but you can see when we go forward,

588
00:26:16,500 --> 00:26:20,000
why it will complicate matters to have him be a circle because let's

589
00:26:20,000 --> 00:26:22,900
say that we had some arbitrary Collision geometry, right?

590
00:26:22,900 --> 00:26:25,500
That we were colliding against and now the guy is a circle.

591
00:26:25,800 --> 00:26:29,100
Well, doing the closest point figuring out what the closest point in

592
00:26:29,100 --> 00:26:29,800
the walks pay is

593
00:26:29,900 --> 00:26:30,800
Is space is 2.

594
00:26:30,800 --> 00:26:33,000
Here is definitely harder.

595
00:26:33,000 --> 00:26:36,500
Now, that we have to consider like this sort of fact that he role.

596
00:26:36,500 --> 00:26:40,400
He, you know, his, his closest point region to search is like this

597
00:26:40,400 --> 00:26:42,900
thing that looks like that and we have to determine that.

598
00:26:42,900 --> 00:26:45,500
Like you can see this is really ugly now like how to do that.

599
00:26:45,500 --> 00:26:48,300
So if he was just a point we would just search along the edge of the

600
00:26:48,300 --> 00:26:49,300
Collision boundaries.

601
00:26:49,300 --> 00:26:52,600
Any time we hit them, that's a lot easier than trying to figure out

602
00:26:52,600 --> 00:26:55,600
how far away we would have to be for our circled fit.

603
00:26:55,600 --> 00:26:58,100
It's not even a simple as just thinking.

604
00:26:58,100 --> 00:26:59,800
Oh, I'll take a point and

605
00:27:00,000 --> 00:27:03,500
It out because you never know, there could be a sharp Bend.

606
00:27:03,500 --> 00:27:06,800
We're moving it out from there actually, still makes you collide with

607
00:27:06,800 --> 00:27:07,900
some other piece here.

608
00:27:07,900 --> 00:27:10,700
So it's it's definitely something to think about.

609
00:27:10,900 --> 00:27:16,100
This is also where Mankowski the Mankowski shape algebra stuff comes

610
00:27:16,100 --> 00:27:18,800
in potentially which we might use when we go to stuff.

611
00:27:18,900 --> 00:27:22,700
That's more complicated like this, but for purposes of spec'ing out

612
00:27:22,700 --> 00:27:24,500
our engine, this would be fine.

613
00:27:24,500 --> 00:27:27,000
Because if we say that we want to go a certain P at least at the

614
00:27:27,000 --> 00:27:29,900
beginning then that at least gives us a good.

615
00:27:30,000 --> 00:27:32,800
Way to find what our engine needs to do, which is the whole point of

616
00:27:32,800 --> 00:27:36,100
all of our Explorations now, which is that we just all we know.

617
00:27:36,200 --> 00:27:40,600
All we need it to do is be able to give us back with a p and a p

618
00:27:40,600 --> 00:27:41,200
Prime.

619
00:27:41,300 --> 00:27:46,800
Give us back the closest P that we could have gotten to from there in

620
00:27:46,800 --> 00:27:47,800
the connected space.

621
00:27:48,100 --> 00:27:49,800
That's a very easily defined problem.

622
00:27:49,800 --> 00:27:50,600
It's very clean.

623
00:27:50,600 --> 00:27:51,700
The API is obvious.

624
00:27:51,900 --> 00:27:55,000
So all of that actually does exactly what we needed to do for now,

625
00:27:55,500 --> 00:27:59,200
which is tell us what we, what the the sort of API is to our engine

626
00:27:59,400 --> 00:27:59,800
and that will

627
00:28:00,000 --> 00:28:02,100
Was to know exactly what problems are engine.

628
00:28:02,100 --> 00:28:04,300
Does have to solve when we write it.

629
00:28:04,700 --> 00:28:06,700
Okay, so hopefully everyone is pretty clear on that.

630
00:28:09,900 --> 00:28:11,000
So, how do we write that?

631
00:28:11,700 --> 00:28:13,900
Because really that's just a bunch of code, right?

632
00:28:14,700 --> 00:28:16,800
That's a there's not much math involved.

633
00:28:16,800 --> 00:28:19,100
They're really in terms of what's going on.

634
00:28:19,800 --> 00:28:20,600
So alright.

635
00:28:22,700 --> 00:28:25,300
Let's write it and let's see what's going on here.

636
00:28:25,600 --> 00:28:31,000
So right now, what we're doing is we have this is tile empty or

637
00:28:31,000 --> 00:28:31,300
whatever.

638
00:28:31,300 --> 00:28:34,800
It is that we're not get tile is tile map point and be right.

639
00:28:34,800 --> 00:28:35,800
This is how we're doing it.

640
00:28:36,000 --> 00:28:37,300
This is our routine.

641
00:28:37,900 --> 00:28:42,200
And so what I'd like to do now is is sort of totally change the nature

642
00:28:42,200 --> 00:28:43,000
of what we're doing here.

643
00:28:43,000 --> 00:28:47,000
I'd like to basically say all the stuff that we were doing before this

644
00:28:47,000 --> 00:28:47,800
stuff is over.

645
00:28:47,800 --> 00:28:49,000
It's done, right?

646
00:28:49,400 --> 00:28:51,100
It's not it's not the case anymore.

647
00:28:52,100 --> 00:28:54,800
We're going to, we're going to get rid of all of this stuff that we

648
00:28:54,800 --> 00:28:56,600
used to be doing like that.

649
00:28:57,900 --> 00:29:01,300
And honestly, this, this guy could have been outside here before.

650
00:29:01,300 --> 00:29:05,200
Anyway, because this is always true that are on same tile.

651
00:29:05,300 --> 00:29:09,500
All we really need to do is say that this is an old player P, right?

652
00:29:10,100 --> 00:29:12,100
And a new player P kind of a thing.

653
00:29:12,500 --> 00:29:15,600
So, what I'm going to do here before actually, before I have zero

654
00:29:15,600 --> 00:29:18,100
doubt, actually, let me just actually change it to do that.

655
00:29:18,100 --> 00:29:21,100
So that our post our post execute stuff.

656
00:29:22,200 --> 00:29:23,900
Is it still going to work properly?

657
00:29:24,600 --> 00:29:26,600
So basically I want to know if he's on the same tile.

658
00:29:26,700 --> 00:29:28,100
So I'm going to set old player pee.

659
00:29:28,100 --> 00:29:29,800
When we first come in here, right?

660
00:29:29,800 --> 00:29:32,500
I'm going to set old player P to be equal to the position that he

661
00:29:32,500 --> 00:29:33,000
started at.

662
00:29:33,000 --> 00:29:36,200
So when we very first, when we come right in here, just to begin with,

663
00:29:36,200 --> 00:29:41,100
I'm going to set the old player P, right old player, P equal to game

664
00:29:42,900 --> 00:29:43,800
that game State.

665
00:29:43,800 --> 00:29:46,200
Remember, we've got his player Peak here.

666
00:29:46,300 --> 00:29:48,800
I'm going to set it to equal to that player P, right?

667
00:29:49,400 --> 00:29:52,000
And actually, you know what, I'm going to do that, even outside.

668
00:29:52,100 --> 00:29:52,800
Side here, really?

669
00:29:53,100 --> 00:29:55,900
Because this is this is the part that updates where the player is and

670
00:29:55,900 --> 00:29:57,600
then the part that responds to that.

671
00:29:57,600 --> 00:29:59,800
Let's just do that entirely outside, right?

672
00:30:00,200 --> 00:30:03,600
Because all of this stuff has nothing to do with that, right?

673
00:30:03,700 --> 00:30:05,400
That's all stuff that can happen up here.

674
00:30:05,500 --> 00:30:06,200
Right?

675
00:30:06,300 --> 00:30:10,000
So what we want to do is say, if the old player P and his and his new

676
00:30:10,000 --> 00:30:11,500
location, right?

677
00:30:12,300 --> 00:30:16,200
What I want to do now is get rid of that, that use of new player P at.

678
00:30:16,200 --> 00:30:17,100
All, right.

679
00:30:17,300 --> 00:30:21,400
I want to, I want to directly operate on the, on the game on the game,

680
00:30:21,400 --> 00:30:22,500
State version of the player.

681
00:30:22,800 --> 00:30:23,300
Right?

682
00:30:23,900 --> 00:30:27,400
And so, let's compile, that just make sure that that we can do that.

683
00:30:27,600 --> 00:30:29,200
So, this is time that position.

684
00:30:31,400 --> 00:30:32,600
And let's take a look here.

685
00:30:32,600 --> 00:30:36,200
What is this saying to diff multiple?

686
00:30:36,200 --> 00:30:37,800
Oh, do I have another function called?

687
00:30:37,800 --> 00:30:39,100
If I do?

688
00:30:39,300 --> 00:30:41,500
Oh, and that happens to be the same.

689
00:30:41,700 --> 00:30:43,200
That happens to be the same dip.

690
00:30:43,200 --> 00:30:47,600
So really all I need to do here is just update that if that's pretty

691
00:30:47,600 --> 00:30:47,900
funny.

692
00:30:48,900 --> 00:30:51,500
Yeah, because that's, that's funny.

693
00:30:51,600 --> 00:30:52,800
Well, you know, what do you do?

694
00:30:53,500 --> 00:30:54,100
All right.

695
00:30:54,200 --> 00:30:55,200
So let me just verify that.

696
00:30:55,200 --> 00:30:57,300
I've still got the this guy working properly.

697
00:30:57,800 --> 00:31:00,400
So off we go and it looks okay.

698
00:31:00,500 --> 00:31:02,100
You can still go up and down the stairs.

699
00:31:02,300 --> 00:31:05,200
Still runs into walls as he should, so we're all good there.

700
00:31:06,300 --> 00:31:12,200
All right, oops, and so, I don't know, like, you know, this is

701
00:31:12,200 --> 00:31:15,100
starting to get to the point where we might, this is starting getting.

702
00:31:15,300 --> 00:31:18,100
This is starting to get to the point where we could think about

703
00:31:18,100 --> 00:31:19,000
starting to pull it out to.

704
00:31:19,000 --> 00:31:22,100
You can sort of see it breaking out into some obvious pieces.

705
00:31:22,100 --> 00:31:24,900
Like those parts that I just moved out there.

706
00:31:25,300 --> 00:31:31,400
You can kind of see that there's two separate, you know, logical

707
00:31:31,400 --> 00:31:33,100
things that's happening right?

708
00:31:33,400 --> 00:31:36,000
There's this update that happens after the players done.

709
00:31:36,400 --> 00:31:38,700
The kind of handles a bunch of stuff.

710
00:31:39,000 --> 00:31:42,100
And so this may be a good thing for us to move out now because that's

711
00:31:42,100 --> 00:31:47,600
going to be kind of this is this is basically a update function that

712
00:31:47,600 --> 00:31:51,600
updates the the sort of the state of the game based on where the

713
00:31:51,600 --> 00:31:55,200
player moved in and the camera, we might want to consider moving that

714
00:31:55,200 --> 00:31:56,000
out to a new function.

715
00:31:56,000 --> 00:31:59,800
I'm not sure if we do yet hard to say exactly what that's going to be.

716
00:31:59,800 --> 00:32:05,700
But like I'm going to put a note in here update camera.

717
00:32:06,900 --> 00:32:15,400
And and player low z based on last movement, right?

718
00:32:15,700 --> 00:32:16,900
And then here we'll get render.

719
00:32:16,900 --> 00:32:19,800
So I'm just going to start to divide these up and we'll consider at

720
00:32:19,800 --> 00:32:20,500
some point.

721
00:32:20,500 --> 00:32:23,100
Whether we want to break that out because we're getting closer to the

722
00:32:23,100 --> 00:32:27,100
point where it's where it looks like, we can start to see, you know,

723
00:32:27,700 --> 00:32:30,100
real real chunks that happen.

724
00:32:30,300 --> 00:32:32,200
And by the way, this is a good point to mention this.

725
00:32:33,600 --> 00:32:35,800
Somebody was saying in the on the forums,

726
00:32:36,100 --> 00:32:38,600
A while back that they felt like the code was too messy.

727
00:32:38,600 --> 00:32:45,200
And again, I really want to stress the fact that I don't really want

728
00:32:45,200 --> 00:32:48,000
to try to tell people that the way that they code is wrong because,

729
00:32:48,000 --> 00:32:52,500
you know, I feel like that just leads to a lot of pedantic arguments

730
00:32:52,500 --> 00:32:53,400
that aren't particularly instructive.

731
00:32:53,400 --> 00:32:58,600
But what I can say, is nobody in my mind.

732
00:32:58,600 --> 00:32:59,600
Nobody should be

733
00:33:00,000 --> 00:33:01,100
This code is messy.

734
00:33:01,500 --> 00:33:03,300
This code is exactly what it should be.

735
00:33:03,600 --> 00:33:07,300
It's code that we are writing to figure out how we want to structure

736
00:33:07,300 --> 00:33:08,000
our program.

737
00:33:08,400 --> 00:33:12,200
And if you're spending time right now, thinking about how to make this

738
00:33:12,200 --> 00:33:17,200
code, not messy, whatever that means to you, then essentially, what

739
00:33:17,200 --> 00:33:19,900
you're doing is you're wasting time, right?

740
00:33:20,000 --> 00:33:20,900
You're spending time.

741
00:33:20,900 --> 00:33:23,900
That should have been spent thinking about the problem, thinking about

742
00:33:23,900 --> 00:33:28,800
the code and the end State, the end goal of your program is not to

743
00:33:28,800 --> 00:33:29,800
have can encode.

744
00:33:30,000 --> 00:33:34,200
It's to have good working code, cleanliness has nothing to do with

745
00:33:34,200 --> 00:33:34,900
those things.

746
00:33:35,100 --> 00:33:37,800
If you have the ugliest code in the world that someone would look at

747
00:33:37,800 --> 00:33:38,900
and call very messy.

748
00:33:39,000 --> 00:33:43,100
But it has no bugs and runs great then it didn't matter.

749
00:33:43,200 --> 00:33:43,700
Right.

750
00:33:44,100 --> 00:33:48,300
And so, to the point that we care about how clean code is, we only

751
00:33:48,300 --> 00:33:53,000
care about that as insofar as it has an effect on our end product.

752
00:33:53,200 --> 00:33:56,100
And what we know right now is what we're trying to do is just Define

753
00:33:56,100 --> 00:33:57,300
the structure of the code.

754
00:33:57,700 --> 00:33:59,800
So none of this code will ship in the game or if it

755
00:34:00,100 --> 00:34:00,500
Does.

756
00:34:00,500 --> 00:34:03,200
It's because it got pulled out and like, changed around a little and,

757
00:34:03,200 --> 00:34:05,000
you know, put in its proper place.

758
00:34:05,300 --> 00:34:09,400
And so we know that it will clean up over time as we know what it

759
00:34:09,400 --> 00:34:11,900
should be but prematurely cleaning it.

760
00:34:12,199 --> 00:34:14,000
It's actually worse than just wasting time.

761
00:34:14,000 --> 00:34:17,800
It may lead us down wrong paths, and, and end us to end up having us

762
00:34:17,800 --> 00:34:21,500
to making us have to do gyrations to make stuff work together because

763
00:34:21,500 --> 00:34:24,800
we've segregated it in a bad way too early on.

764
00:34:25,300 --> 00:34:27,000
And so I really want to stress that fact.

765
00:34:27,000 --> 00:34:29,800
That like if you if, if the way you look at code,

766
00:34:29,900 --> 00:34:32,300
Code, is that you think of it as messy or clean?

767
00:34:32,400 --> 00:34:34,699
That is a very bad habit in my opinion.

768
00:34:35,400 --> 00:34:38,900
And so all I can really do is say a strenuously as possible.

769
00:34:38,900 --> 00:34:41,300
Stop thinking that way instead.

770
00:34:41,300 --> 00:34:45,300
Think about the problem you're trying to solve when you are done and

771
00:34:45,300 --> 00:34:49,900
to your satisfaction solving that problem in however, messy away.

772
00:34:49,900 --> 00:34:50,800
As you can.

773
00:34:51,800 --> 00:34:55,900
Then that is the time to start thinking about cleanliness of code.

774
00:34:55,900 --> 00:34:59,700
And what we mean, when we say cleanliness of code, there is, can I

775
00:34:59,700 --> 00:35:00,600
find the bugs in it?

776
00:35:00,600 --> 00:35:01,200
Easily?

777
00:35:01,400 --> 00:35:03,200
Is it easy to read and understand?

778
00:35:03,400 --> 00:35:06,800
Is it easy for me to reuse in the places that I need to reuse it?

779
00:35:06,900 --> 00:35:11,800
Those sorts of things and never some set of prescribed things that

780
00:35:11,800 --> 00:35:14,800
somebody said, was clean code, because there is no such set.

781
00:35:14,800 --> 00:35:18,300
There is no, there is no set of rules that tells you whether a

782
00:35:18,300 --> 00:35:21,400
particular set of code is clean based on.

783
00:35:21,700 --> 00:35:23,100
What the code looks like?

784
00:35:23,300 --> 00:35:26,800
It's only based on what the usage looks like and what the debugging

785
00:35:26,800 --> 00:35:28,100
process looks like that.

786
00:35:28,100 --> 00:35:30,500
Actually tells you whether a piece of code is clean or not.

787
00:35:30,700 --> 00:35:32,400
And I really can't stress that enough.

788
00:35:32,400 --> 00:35:36,600
It's a big difference between good programmers and bad programmers is

789
00:35:36,800 --> 00:35:38,900
whether they understand this, right?

790
00:35:39,000 --> 00:35:41,000
And that's like I said, it's my opinion.

791
00:35:41,500 --> 00:35:43,300
Nobody has perfect metrics for code.

792
00:35:43,300 --> 00:35:45,100
So we don't know who's right about those things.

793
00:35:45,100 --> 00:35:47,000
But all I can tell you is I'm 30 years.

794
00:35:47,000 --> 00:35:49,100
I've never seen something truer than what I just said.

795
00:35:49,800 --> 00:35:50,400
All right.

796
00:35:50,500 --> 00:35:56,100
So moving on from there, from that little Public Service Announcement.

797
00:35:56,900 --> 00:35:58,600
What I want to talk about now, right?

798
00:35:58,600 --> 00:35:59,300
Is, is sort of

799
00:36:00,000 --> 00:36:00,400
Vamping.

800
00:36:00,400 --> 00:36:02,700
What we're doing here to something much simpler and much better.

801
00:36:03,000 --> 00:36:03,600
Right?

802
00:36:04,200 --> 00:36:07,100
So we still have our physics stuff up here.

803
00:36:07,100 --> 00:36:09,000
So, this is Computing, the player velocity.

804
00:36:09,200 --> 00:36:09,700
Right?

805
00:36:10,900 --> 00:36:12,900
And what we want to do now is right here.

806
00:36:13,200 --> 00:36:16,000
We want to sort of, if zero this out and say the old way that we were

807
00:36:16,000 --> 00:36:18,000
doing stuff, that's not going to happen anymore.

808
00:36:18,000 --> 00:36:18,600
That's done.

809
00:36:18,800 --> 00:36:19,000
Right?

810
00:36:19,000 --> 00:36:19,600
That's over.

811
00:36:20,300 --> 00:36:22,900
And we're going to do something else, that's going to be better.

812
00:36:22,900 --> 00:36:25,600
And I'm leaving that in for now, just because we might want to switch

813
00:36:25,600 --> 00:36:27,500
to it, to see what's going on, right?

814
00:36:27,500 --> 00:36:29,000
So, that's all, that's all good.

815
00:36:34,000 --> 00:36:34,700
All right.

816
00:36:34,700 --> 00:36:41,900
And then what I want to do is say okay, let's go ahead and say, let's

817
00:36:41,900 --> 00:36:43,200
do that thing that I was talking about before.

818
00:36:43,200 --> 00:36:46,700
And for now, we'll just do it without any concern.

819
00:36:46,700 --> 00:36:50,100
For anything will do will do it in the worst possible way and then

820
00:36:50,100 --> 00:36:51,200
we'll refine it a little bit.

821
00:36:51,200 --> 00:36:57,400
So I'm just going to go ahead and do a for I loop around basically, in

822
00:36:57,400 --> 00:37:03,700
that sort of a region where the player is and where the end where his

823
00:37:03,700 --> 00:37:04,000
destination.

824
00:37:04,100 --> 00:37:08,800
Some point is so we're going to basically say, I'm still gonna, I'm

825
00:37:08,800 --> 00:37:13,200
still gonna keep this part for now of the physics, right?

826
00:37:13,200 --> 00:37:15,000
So we produce that new player P.

827
00:37:15,100 --> 00:37:18,500
I'm going to keep that and I guess we want to do this.

828
00:37:19,500 --> 00:37:23,400
So but the rest of this stuff where we do all the Collision texturing,

829
00:37:23,400 --> 00:37:23,900
the testing.

830
00:37:23,900 --> 00:37:25,700
I'm going to, I'm not going to use, right.

831
00:37:26,100 --> 00:37:29,200
So what I want to do now is I want to basically Loop over the search

832
00:37:29,200 --> 00:37:31,400
region in tile space, right?

833
00:37:31,700 --> 00:37:33,900
So I want to be able to go

834
00:37:34,000 --> 00:37:37,700
Go over each individual tile there in X and Y.

835
00:37:38,100 --> 00:37:41,100
So I'm going to go ahead and do that and we'll take a look at handmade

836
00:37:41,100 --> 00:37:43,000
tile H here.

837
00:37:43,300 --> 00:37:46,200
I'm going to go ahead and do that and say that, you know.

838
00:37:48,200 --> 00:37:51,500
Ben tile x max tilak's like so.

839
00:37:54,100 --> 00:37:56,400
AB style X like that.

840
00:37:57,300 --> 00:38:00,200
And I think so.

841
00:38:00,200 --> 00:38:02,800
There is one kind of nasty thing about this.

842
00:38:04,900 --> 00:38:06,200
This is, this is kind of

843
00:38:07,400 --> 00:38:07,800
yeah.

844
00:38:08,900 --> 00:38:11,200
This is one of those things that's like it's unclear, whether we

845
00:38:11,200 --> 00:38:13,800
should change it going forwards and I thought about it many times on

846
00:38:13,800 --> 00:38:15,100
the screen when we've been doing stuff.

847
00:38:15,200 --> 00:38:17,600
Basically, the unsigned versus signed integer thing.

848
00:38:18,700 --> 00:38:22,000
So there's a nasty thing here that happens where we're right on the

849
00:38:22,000 --> 00:38:23,000
edge of a tile.

850
00:38:23,600 --> 00:38:27,800
Where, let's say that we were, let's here's the let me, let me just,

851
00:38:27,800 --> 00:38:29,800
I'll get this out there since I've thought about it multiple times,

852
00:38:29,800 --> 00:38:30,900
but I've never mentioned on the stream.

853
00:38:30,900 --> 00:38:31,800
I'll just say it here.

854
00:38:32,700 --> 00:38:35,300
So, let's say we happen to be at tile 0 0.

855
00:38:37,200 --> 00:38:37,800
Right.

856
00:38:38,600 --> 00:38:42,900
So this next child here is, you know, tile for billion because we

857
00:38:42,900 --> 00:38:44,600
wrapped around, right?

858
00:38:45,200 --> 00:38:48,300
If I want to do a for, I Loop over these tiles.

859
00:38:50,400 --> 00:38:53,800
There is really it's hard to write that Loop cleanly.

860
00:38:54,100 --> 00:38:58,100
If that makes sense because you can't do a less than.

861
00:38:58,300 --> 00:38:59,800
So you have to kind of do an equals 2.

862
00:39:00,400 --> 00:39:03,200
Which maybe is okay, we're starting knot equals 2.

863
00:39:04,100 --> 00:39:06,900
Because if you think about it, when you go back here and I start

864
00:39:06,900 --> 00:39:08,100
looping over this guy.

865
00:39:09,500 --> 00:39:13,700
When I Loop over him, we're going to see that he's already greater

866
00:39:13,700 --> 00:39:17,000
than the stopping tile, which is the one that we were looking at over

867
00:39:17,000 --> 00:39:20,500
here because of that wrap around of the unsigned integer.

868
00:39:21,400 --> 00:39:22,100
So, I don't know.

869
00:39:22,100 --> 00:39:24,800
Like, I'm just going to go ahead and keep on with the current way that

870
00:39:24,800 --> 00:39:25,400
we're doing things.

871
00:39:25,400 --> 00:39:28,400
And see, I thought about a couple times but basically we have to do

872
00:39:28,400 --> 00:39:28,800
this.

873
00:39:31,500 --> 00:39:36,400
Like that kind of we always have to do a not equal to one past the Mac

874
00:39:36,400 --> 00:39:39,400
style because that's the only thing that will actually work.

875
00:39:39,500 --> 00:39:40,400
When we do this Loop.

876
00:39:40,400 --> 00:39:44,400
We can't ever really check for Less stands, even though that's the

877
00:39:44,400 --> 00:39:46,900
word easier, natural way to think about doing the loop.

878
00:39:46,900 --> 00:39:50,600
Usually, for me, we have to do these, not equal to S because we might

879
00:39:50,600 --> 00:39:53,300
be right on that boundary, where we're we're wrapping around.

880
00:39:53,400 --> 00:39:54,200
That makes sense.

881
00:39:54,600 --> 00:39:56,400
If we, we don't have to do that.

882
00:39:56,400 --> 00:39:58,800
We don't ever have to let the world wrap around if we don't want to.

883
00:39:58,800 --> 00:40:00,200
But I'm saying if we wanted to actually make the

884
00:40:00,400 --> 00:40:04,400
Correct, so that you could have a full giant 4 billion Loop.

885
00:40:04,400 --> 00:40:05,500
For some reason for a brilliant.

886
00:40:05,500 --> 00:40:08,900
I'll Loop if you really just wanted to get something to think about,

887
00:40:09,000 --> 00:40:09,400
right.

888
00:40:10,800 --> 00:40:14,700
So anyway, if We're looping over here, then what I need to do inside

889
00:40:14,700 --> 00:40:18,400
each of these ones is just figure out whether what the closest I'll

890
00:40:18,400 --> 00:40:18,700
would be.

891
00:40:18,700 --> 00:40:22,000
So the first thing I need to do is I need to look up that tile, right?

892
00:40:22,200 --> 00:40:26,200
So I want to say, what's the tile value in the in that area?

893
00:40:26,400 --> 00:40:26,700
Right?

894
00:40:26,700 --> 00:40:30,900
And so, I believe we have a way of doing that, just flat out which I

895
00:40:30,900 --> 00:40:37,300
do and, and so, I can pass these guys in there and get what the tile

896
00:40:37,300 --> 00:40:37,900
value is.

897
00:40:37,900 --> 00:40:39,400
So here is the tile value.

898
00:40:40,700 --> 00:40:42,900
Look at that tile value and say if tiled.

899
00:40:43,000 --> 00:40:47,300
Oops, if tile value is empty, right?

900
00:40:47,300 --> 00:40:50,600
I believe it's a this one is are blocking thing.

901
00:40:52,100 --> 00:40:55,300
Let me make sure yeah, like that.

902
00:40:55,500 --> 00:40:58,600
And for now, I guess maybe since I've got enough of it, I'll also do a

903
00:40:58,600 --> 00:41:01,200
thing that is tile value empty.

904
00:41:01,700 --> 00:41:04,500
So write something like this.

905
00:41:08,300 --> 00:41:12,800
That makes sense just so I can reuse that check get style value, empty

906
00:41:14,200 --> 00:41:14,800
value.

907
00:41:15,500 --> 00:41:16,000
So on.

908
00:41:17,500 --> 00:41:19,000
That way I don't have to keep thinking about it.

909
00:41:19,300 --> 00:41:22,700
And again, we're going to replace this stuff anyway, because we're

910
00:41:22,700 --> 00:41:24,800
going to have to decide much later on.

911
00:41:24,800 --> 00:41:27,300
Probably, after we do the renderer and we start thinking about what's

912
00:41:27,300 --> 00:41:30,700
actually in a given game tile, will have a representation for the game

913
00:41:30,700 --> 00:41:31,300
towel for right now.

914
00:41:31,300 --> 00:41:32,200
We just have some numbers.

915
00:41:32,200 --> 00:41:35,100
We throw in there for no apparent reason just so we can have some

916
00:41:35,100 --> 00:41:37,400
variety and think about what's actually in the tile, right?

917
00:41:37,900 --> 00:41:41,600
But that way we can say empty equals is tiled value, empty.

918
00:41:42,100 --> 00:41:43,700
And then we pass that.

919
00:41:45,100 --> 00:41:46,500
And this tells us whether it's empty.

920
00:41:47,100 --> 00:41:49,200
So then I'll just do is tell value empty.

921
00:41:51,900 --> 00:41:55,900
So on and if it is then we can actually check to see if we can stand

922
00:41:55,900 --> 00:41:58,300
anywhere in the tile or see where the closest point the tile is and if

923
00:41:58,300 --> 00:41:59,400
not, we won't, right.

924
00:42:02,300 --> 00:42:02,800
Okay.

925
00:42:03,900 --> 00:42:08,500
So the next thing we have to do is check the tiles all around us,

926
00:42:08,500 --> 00:42:08,700
right?

927
00:42:08,700 --> 00:42:14,500
We need to figure out what our rectangular space looks like for this

928
00:42:14,700 --> 00:42:17,200
for the for the purpose of checking.

929
00:42:17,200 --> 00:42:20,100
Now one thing I got to think about here because I'm not even sure

930
00:42:20,100 --> 00:42:20,600
myself.

931
00:42:20,600 --> 00:42:21,900
I gotta think about this, never done.

932
00:42:21,900 --> 00:42:22,500
This before.

933
00:42:23,400 --> 00:42:24,100
Tilemap.

934
00:42:24,400 --> 00:42:25,500
Tom apps are new to me.

935
00:42:25,600 --> 00:42:26,100
By the way.

936
00:42:26,100 --> 00:42:28,100
I just decided I kind of wanted to do them for this gangs.

937
00:42:28,100 --> 00:42:29,600
I'd never done the tile map game.

938
00:42:30,200 --> 00:42:32,100
So, you know, stuff.

939
00:42:32,100 --> 00:42:33,100
I got to think about, too.

940
00:42:33,700 --> 00:42:38,800
So in the tile map, let's say that we've got a guy here, right?

941
00:42:39,000 --> 00:42:45,500
What does that imply for our for our circular if we had a circular

942
00:42:45,500 --> 00:42:47,100
style hero, right?

943
00:42:47,300 --> 00:42:50,000
Well, it means that from at least right here.

944
00:42:50,000 --> 00:42:56,400
We've got the radius worth where he could stand and then I guess so, I

945
00:42:56,400 --> 00:43:00,400
guess what it does is it makes it look like this, right?

946
00:43:01,200 --> 00:43:03,500
Meaning he can stand anywhere.

947
00:43:03,600 --> 00:43:05,600
We're in something that looks like this.

948
00:43:06,900 --> 00:43:07,500
Right.

949
00:43:09,300 --> 00:43:12,700
And that is rounded right there in some sense, right?

950
00:43:12,700 --> 00:43:14,000
He could get closer to it.

951
00:43:14,000 --> 00:43:19,100
So it's basically like a narc that's his radius wide coming from the

952
00:43:19,100 --> 00:43:24,000
corner that cuts out that segment of the of the thing, right?

953
00:43:24,000 --> 00:43:27,600
Because if you imagine the dude standing and he has to stand, you

954
00:43:27,600 --> 00:43:29,400
know, I'm talking about this right?

955
00:43:30,000 --> 00:43:31,100
You imagine him coming up.

956
00:43:31,100 --> 00:43:32,500
He's a circle or something.

957
00:43:32,700 --> 00:43:36,400
He's coming up to this point and if he's going to touch if he's going

958
00:43:36,400 --> 00:43:36,600
to run.

959
00:43:36,700 --> 00:43:40,500
In to that point, then basically what's going to happen to him.

960
00:43:40,800 --> 00:43:44,000
Is this radius of the circle?

961
00:43:44,000 --> 00:43:48,700
This are he, if it came into it this way along this Edge, he would

962
00:43:48,700 --> 00:43:50,000
have stopped our away from it.

963
00:43:50,000 --> 00:43:51,300
He'd hit it are away from it.

964
00:43:51,300 --> 00:43:53,900
And if they came into it, this Edge, he would stop our away from it as

965
00:43:53,900 --> 00:43:54,300
well.

966
00:43:54,800 --> 00:43:57,000
And then he could walk all around.

967
00:43:57,000 --> 00:43:59,500
It always maintaining ours distance.

968
00:43:59,900 --> 00:44:02,600
So essentially you've got that kind of Notch in there, right?

969
00:44:03,200 --> 00:44:06,500
So, basically, the shape of the area in which you can stand

970
00:44:06,700 --> 00:44:12,200
It is, if there's a solid wall here, then it's just our, it's that,

971
00:44:12,200 --> 00:44:13,900
whatever that radius is moved in.

972
00:44:14,400 --> 00:44:17,400
But if there's, and if there's diagonals, then there's notches like

973
00:44:17,400 --> 00:44:20,000
that, right?

974
00:44:20,200 --> 00:44:20,900
That makes sense.

975
00:44:20,900 --> 00:44:22,000
Hopefully, that makes some sense.

976
00:44:22,500 --> 00:44:26,600
So basically there's like four walls, that could be there for him and

977
00:44:26,600 --> 00:44:28,300
four notches, that could be there for him.

978
00:44:28,700 --> 00:44:30,600
And we don't really have to handle The Notches right now.

979
00:44:30,600 --> 00:44:33,200
If we don't want to, we could just not handle those cases.

980
00:44:33,200 --> 00:44:36,000
Like I said, we just have to spec out that we want the engine to

981
00:44:36,000 --> 00:44:36,500
handle them.

982
00:44:36,800 --> 00:44:39,500
So, maybe we'll skip them for now so that we don't have to spend a lot

983
00:44:39,500 --> 00:44:41,200
of time doing that when we're just trying to do spec code.

984
00:44:41,200 --> 00:44:44,600
But you know, we got to know, we gotta we gotta say that.

985
00:44:44,600 --> 00:44:46,200
That's what we want to have happen, right?

986
00:44:46,900 --> 00:44:50,400
All right, so it's tile value map empty there.

987
00:44:50,500 --> 00:44:52,900
If it is then we have to go and say, all right.

988
00:44:52,900 --> 00:44:58,500
Let's define the actual valid region where the player could actually

989
00:44:58,500 --> 00:44:59,800
be inside this.

990
00:45:00,000 --> 00:45:04,900
I'll and so, essentially that's going to be a min/max x and a min max,

991
00:45:04,900 --> 00:45:05,800
why, right?

992
00:45:05,800 --> 00:45:09,700
And so let's say let's will make those V2s for now.

993
00:45:10,100 --> 00:45:13,800
So let's say we got our men corner and our Max corner and we'll

994
00:45:13,800 --> 00:45:17,000
initialize where those are like where the actual Min and Max Corner

995
00:45:17,000 --> 00:45:17,400
are.

996
00:45:17,900 --> 00:45:19,100
We know what those are.

997
00:45:19,100 --> 00:45:20,800
Those are the tile side and M.

998
00:45:21,900 --> 00:45:22,600
It m, right?

999
00:45:22,700 --> 00:45:24,500
/ /.

1000
00:45:26,400 --> 00:45:27,600
To right.

1001
00:45:27,900 --> 00:45:32,200
So basically I know that the Min corner is there because remember

1002
00:45:32,200 --> 00:45:33,600
everything style relative.

1003
00:45:33,900 --> 00:45:37,200
So, you know, from the center of the tile it's half that that tile

1004
00:45:37,200 --> 00:45:39,000
side M, to get out to them in corner.

1005
00:45:39,500 --> 00:45:42,300
And then the max Corner goes like this, right?

1006
00:45:42,600 --> 00:45:46,700
So, I can also say if I wanted to and you know, what, here's an

1007
00:45:46,700 --> 00:45:51,100
interesting thing to again, for Vector, I could do this, which is kind

1008
00:45:51,100 --> 00:45:52,100
of kind of Handy.

1009
00:45:52,900 --> 00:45:53,400
Right.

1010
00:45:54,600 --> 00:45:58,100
And that so

1011
00:45:59,800 --> 00:46:06,300
I believe, and I got to do these guys in tilak's.

1012
00:46:07,400 --> 00:46:08,800
Been tile, why?

1013
00:46:09,300 --> 00:46:12,800
So got to put something actually in there.

1014
00:46:14,900 --> 00:46:19,100
One past next I'll one test.

1015
00:46:21,600 --> 00:46:24,500
Okay and the ABS tile Z4 right now.

1016
00:46:25,000 --> 00:46:29,200
We don't actually check he's not really allowed to walk upwards at the

1017
00:46:29,200 --> 00:46:29,700
moment.

1018
00:46:29,800 --> 00:46:30,600
That's something we might want to do.

1019
00:46:30,600 --> 00:46:31,000
Eventually.

1020
00:46:31,000 --> 00:46:33,900
I'm not sure how we're going to handle upwards movement in terms of

1021
00:46:33,900 --> 00:46:35,400
how the player actually does it.

1022
00:46:35,400 --> 00:46:37,200
I assume that he they can't really move upwards.

1023
00:46:37,200 --> 00:46:40,900
They just walk up like specific tiles, are like ladders that go up or

1024
00:46:40,900 --> 00:46:41,400
something.

1025
00:46:41,500 --> 00:46:43,400
That's typically how these games work.

1026
00:46:43,800 --> 00:46:44,500
So we'll have to see

1027
00:46:45,300 --> 00:46:47,600
You know what we want to do, when we actually get to the point where

1028
00:46:47,600 --> 00:46:50,500
we've got, you know, where we're really thinking about, how we want it

1029
00:46:50,500 --> 00:46:51,700
to look, when the player goes up.

1030
00:46:51,700 --> 00:46:52,100
Right?

1031
00:46:52,600 --> 00:46:56,300
But the ABS tile Z is just wherever the player was and the tile side m

1032
00:46:56,300 --> 00:46:56,400
is.

1033
00:46:56,400 --> 00:46:58,700
I believe a property of the town map, right?

1034
00:47:04,300 --> 00:47:07,800
So that's about it in terms of initializing that corner.

1035
00:47:07,800 --> 00:47:10,100
So now we know where we're going to, what we're going to do here.

1036
00:47:10,100 --> 00:47:14,500
And we can we could do just right now that search we could do the

1037
00:47:14,500 --> 00:47:15,200
search right now.

1038
00:47:15,300 --> 00:47:19,100
So the first thing we could do is say well and let's walk through this

1039
00:47:19,100 --> 00:47:19,500
search.

1040
00:47:19,800 --> 00:47:20,800
We don't have a whole lot of time left.

1041
00:47:20,800 --> 00:47:22,100
So I don't think I'm going to finish this today.

1042
00:47:22,100 --> 00:47:23,700
We've got, we've only got 10 minutes left.

1043
00:47:23,700 --> 00:47:25,900
So we'll do maybe part of it today and will do part of it.

1044
00:47:25,900 --> 00:47:27,100
Start picking up again on Monday.

1045
00:47:27,800 --> 00:47:30,000
So, if we think about how we want to do this search, right?

1046
00:47:30,600 --> 00:47:32,900
We've come up with a tile, right?

1047
00:47:32,900 --> 00:47:35,300
We've looked at and, you know, this is the part we're going to do

1048
00:47:35,300 --> 00:47:35,800
next.

1049
00:47:35,900 --> 00:47:40,300
We've looked at, let's say What's blocking him and we've come up with

1050
00:47:40,300 --> 00:47:41,100
a rectangle.

1051
00:47:41,400 --> 00:47:42,300
That's where he can.

1052
00:47:42,500 --> 00:47:44,900
That's where he could stand inside this tile.

1053
00:47:45,200 --> 00:47:48,000
And now we have a point somewhere, and we want to know what the

1054
00:47:48,000 --> 00:47:51,200
closest point in our rectangle, is to that point.

1055
00:47:51,600 --> 00:47:53,200
So, what are all the cases?

1056
00:47:53,300 --> 00:47:54,000
Right?

1057
00:47:54,200 --> 00:47:57,900
Well, the cases are either the points inside our rectangle, right?

1058
00:47:57,900 --> 00:47:59,800
So the points like somewhere in here, right?

1059
00:48:00,300 --> 00:48:03,600
If the points inside then it's just the point, right?

1060
00:48:03,700 --> 00:48:07,500
So one case is, you know, it's just the point if it's inside.

1061
00:48:07,600 --> 00:48:11,900
So if it's inside, it's just the point, if it's not inside, that means

1062
00:48:11,900 --> 00:48:14,900
that no, we're inside this rectangle could possibly be the closest

1063
00:48:14,900 --> 00:48:15,400
point.

1064
00:48:15,500 --> 00:48:18,400
The only places that could be the closest point are on the edges,

1065
00:48:18,700 --> 00:48:19,200
right?

1066
00:48:19,300 --> 00:48:20,900
It has to would have to be on the edges.

1067
00:48:21,800 --> 00:48:24,200
So if it's on the edges, then what we need to do is we need to check

1068
00:48:24,200 --> 00:48:25,900
each Edge, right?

1069
00:48:26,000 --> 00:48:27,700
And which Edge do we need to check?

1070
00:48:28,000 --> 00:48:28,500
Right?

1071
00:48:28,500 --> 00:48:29,300
Well, we need to check.

1072
00:48:29,300 --> 00:48:29,800
Whichever.

1073
00:48:29,800 --> 00:48:29,900
Heh.

1074
00:48:30,100 --> 00:48:36,300
Is implied by the Delta between the Tile Center and the sky, right?

1075
00:48:36,500 --> 00:48:38,700
So when we check and we look where this guy is.

1076
00:48:38,800 --> 00:48:40,200
All, we really need to do is go.

1077
00:48:40,300 --> 00:48:43,400
Well, is it less than or greater than in X for us?

1078
00:48:43,400 --> 00:48:44,100
Right?

1079
00:48:44,100 --> 00:48:45,800
If it's less than x for us?

1080
00:48:47,000 --> 00:48:49,600
In fact, you know what, this is going to be such a cakewalk.

1081
00:48:50,800 --> 00:48:53,200
All we really do is say, okay, if it's less than that.

1082
00:48:55,000 --> 00:48:57,600
This is basically just this is the space of just a trivial clipping

1083
00:48:57,600 --> 00:48:58,100
problem.

1084
00:48:58,200 --> 00:48:58,600
Right?

1085
00:48:58,700 --> 00:48:59,800
It's really nothing to it.

1086
00:48:59,900 --> 00:49:03,500
We just start with this and say, okay, if he's less than R minimum

1087
00:49:03,500 --> 00:49:06,500
bound, then just put them at the minimum bound, right?

1088
00:49:07,000 --> 00:49:12,800
Anything is less than R if he's less than our maximum bound yet.

1089
00:49:13,900 --> 00:49:15,300
This is, this is going to be really, really simple.

1090
00:49:15,400 --> 00:49:16,500
This is gonna be really, really simple.

1091
00:49:17,700 --> 00:49:21,400
So, the closest point, right would be here in this case.

1092
00:49:22,000 --> 00:49:22,900
I believe, right?

1093
00:49:22,900 --> 00:49:23,500
Is that correct?

1094
00:49:23,500 --> 00:49:24,400
So if we're looking at

1095
00:49:24,700 --> 00:49:26,100
We're looking at what the closest point is.

1096
00:49:26,100 --> 00:49:28,200
No, that's not true at the closest point would be here.

1097
00:49:28,800 --> 00:49:29,500
Yeah.

1098
00:49:29,600 --> 00:49:31,000
Okay, even better even better.

1099
00:49:31,100 --> 00:49:31,500
All right.

1100
00:49:31,500 --> 00:49:31,800
Sorry.

1101
00:49:31,800 --> 00:49:32,500
I got distracted.

1102
00:49:32,500 --> 00:49:33,900
Therefore s thinking the problem through.

1103
00:49:35,100 --> 00:49:35,400
All right.

1104
00:49:35,400 --> 00:49:39,300
So the closest point to the to a rectangle is actually just going to

1105
00:49:39,300 --> 00:49:42,100
always be a perpendicular to the edge, right?

1106
00:49:42,100 --> 00:49:44,100
Because I was thinking closest point to the center there and I was

1107
00:49:44,100 --> 00:49:46,300
like, oh, we gotta find the intersection not true because we're not

1108
00:49:46,300 --> 00:49:47,700
looking for the closest point to Center.

1109
00:49:47,700 --> 00:49:49,600
We're looking to the closest point to the rectangle.

1110
00:49:50,100 --> 00:49:54,300
So basically this coordinate, whatever this coordinate is relative to

1111
00:49:54,300 --> 00:49:56,900
the center is the closest point.

1112
00:49:57,000 --> 00:50:01,600
Once you actually clip it's it's coordinates to the coordinates we

1113
00:50:01,600 --> 00:50:04,800
have so if it's less than R Min X we just

1114
00:50:04,900 --> 00:50:08,100
To arm in X and Bam is the closest point, right?

1115
00:50:08,200 --> 00:50:10,700
If it's less than, you know, if it's greater than the, the x or the

1116
00:50:10,700 --> 00:50:12,500
greater than the, why we just clip it to.

1117
00:50:12,600 --> 00:50:15,300
And as long as we just sort of clip it to whatever it is, then we've

1118
00:50:15,300 --> 00:50:16,200
got that closest point.

1119
00:50:16,200 --> 00:50:17,100
I think that's it.

1120
00:50:17,500 --> 00:50:19,900
And that'll handle the corner case is properly too because it'll clip

1121
00:50:19,900 --> 00:50:20,300
it here.

1122
00:50:20,300 --> 00:50:23,400
Like, if it was out here, it first, flip it to here and then clip it

1123
00:50:23,400 --> 00:50:25,700
to here and that's exactly what we would want.

1124
00:50:25,900 --> 00:50:29,500
So basically, all we have to do is just go through each axis X, and

1125
00:50:29,500 --> 00:50:33,700
then y, clipping it to the bounds in that, and we've got the closest

1126
00:50:33,700 --> 00:50:34,500
point done.

1127
00:50:34,900 --> 00:50:35,500
Right.

1128
00:50:37,600 --> 00:50:41,000
So to me, that sounds like something that I just want to call here.

1129
00:50:41,000 --> 00:50:43,100
I want to say closest.

1130
00:50:44,200 --> 00:50:48,300
Right point in rectangle.

1131
00:50:48,500 --> 00:50:51,000
Seems like something we might want to do just in general.

1132
00:50:51,000 --> 00:50:53,200
It's a nice easy thing for me to say.

1133
00:50:53,800 --> 00:50:59,200
So I'm going to say that our test p is whatever the closest point in

1134
00:50:59,200 --> 00:50:59,900
the rectangle is.

1135
00:51:00,200 --> 00:51:03,700
I'm going to pass that rectangle mean Corner Max corner, right?

1136
00:51:03,700 --> 00:51:08,000
So, the closest point in the rectangle to that new player, P new

1137
00:51:08,000 --> 00:51:08,900
player P.

1138
00:51:09,200 --> 00:51:10,600
So relative, new player P.

1139
00:51:11,300 --> 00:51:13,400
And so to produce the relative new player P.

1140
00:51:13,400 --> 00:51:16,700
I just need to know the difference between that new player, plea,

1141
00:51:16,700 --> 00:51:17,000
right?

1142
00:51:17,000 --> 00:51:17,900
This guy right here.

1143
00:51:21,600 --> 00:51:22,800
Where's that subtraction?

1144
00:51:23,000 --> 00:51:24,200
I've got that dysfunction.

1145
00:51:24,300 --> 00:51:25,200
That's what I want.

1146
00:51:25,500 --> 00:51:27,900
So what I want to do here is say, alright.

1147
00:51:29,200 --> 00:51:32,200
I've got that diff function, I want to subtract.

1148
00:51:34,500 --> 00:51:36,600
Be still guys, I want to subtract.

1149
00:51:38,900 --> 00:51:40,100
The tile point.

1150
00:51:40,800 --> 00:51:46,000
So this is going to be my test tile, and this is going to be my new

1151
00:51:46,000 --> 00:51:47,500
player pee, like so on.

1152
00:51:49,500 --> 00:51:51,200
That and the test.

1153
00:51:51,200 --> 00:51:55,700
I'll pee, I need to build out of the ABS tile X, AB style, Y, and we

1154
00:51:55,700 --> 00:51:57,300
don't actually even have a function for that yet.

1155
00:51:57,300 --> 00:51:57,800
Do we?

1156
00:51:58,000 --> 00:51:59,500
So our tile map position?

1157
00:51:59,900 --> 00:52:04,900
I'd like to be able to make one of these easily without having to

1158
00:52:04,900 --> 00:52:08,400
specify the offset which I could do just by doing it directly, but I'd

1159
00:52:08,400 --> 00:52:09,900
like to be able to search for those.

1160
00:52:10,300 --> 00:52:13,200
So I think what I'm going to do is introduce something here where I

1161
00:52:13,200 --> 00:52:19,200
can sort of say, you know, centered tile.

1162
00:52:19,300 --> 00:52:21,100
Point or something like that.

1163
00:52:21,600 --> 00:52:23,500
And I just passed AB style.

1164
00:52:23,500 --> 00:52:25,800
X, AB style.

1165
00:52:25,800 --> 00:52:32,100
Y + AB Style zx0 on and can basically produce the result that way.

1166
00:52:32,100 --> 00:52:35,300
So result is just a straight copy of those things.

1167
00:52:38,900 --> 00:52:43,900
And it is assumed that I just like the other fields of zero, so we

1168
00:52:43,900 --> 00:52:49,500
return that like that and that way I can quickly generate this guy,

1169
00:52:51,000 --> 00:52:52,100
you know with with actually know.

1170
00:52:52,500 --> 00:52:54,700
And again, we're not thinking about speed here at all.

1171
00:52:56,800 --> 00:52:58,400
That's important to this important.

1172
00:52:58,400 --> 00:53:01,900
To remember you're just thinking about writing code that works at this

1173
00:53:01,900 --> 00:53:05,000
point and all the stuff that we worry about speed.

1174
00:53:05,000 --> 00:53:07,100
That's all going to come later on down the road.

1175
00:53:07,400 --> 00:53:10,200
So I try to be aware of algorithmic problems.

1176
00:53:10,600 --> 00:53:14,700
If there's a speed problem in that sense, but you know, I try not to

1177
00:53:15,200 --> 00:53:20,700
think about that in terms of in terms of when we're just working on

1178
00:53:20,700 --> 00:53:21,500
the code directly.

1179
00:53:21,900 --> 00:53:22,500
All right.

1180
00:53:22,600 --> 00:53:26,000
So let's go ahead and compile that and now we have

1181
00:53:26,100 --> 00:53:27,500
Let's see.

1182
00:53:27,600 --> 00:53:28,900
What is the problem here?

1183
00:53:29,100 --> 00:53:30,600
Cannot convert argument to 0, right?

1184
00:53:30,600 --> 00:53:32,200
These are, these are addresses.

1185
00:53:33,000 --> 00:53:33,600
Correct about that.

1186
00:53:33,600 --> 00:53:33,900
Yeah.

1187
00:53:34,700 --> 00:53:36,300
And so this is r.l.

1188
00:53:36,300 --> 00:53:37,400
New player P.

1189
00:53:37,800 --> 00:53:39,000
So now we got that relative one.

1190
00:53:39,000 --> 00:53:41,300
And so all we now have to do is do that.

1191
00:53:41,400 --> 00:53:45,600
So assuming that we have that, we have our best point.

1192
00:53:46,000 --> 00:53:48,800
Our best point is going to be wherever we start.

1193
00:53:48,800 --> 00:53:51,200
So the way that I'm going to treat this as going to say wherever the

1194
00:53:51,200 --> 00:53:52,500
player is right now.

1195
00:53:54,800 --> 00:53:58,100
That's going to be, that's going to be the best point, right?

1196
00:53:58,100 --> 00:53:59,800
So the tile map.

1197
00:54:00,000 --> 00:54:04,000
Mission that we expect our our best, our best player pee.

1198
00:54:04,100 --> 00:54:06,000
Right is going to be wherever he is right now.

1199
00:54:06,300 --> 00:54:07,300
That's just what we're going to do.

1200
00:54:08,400 --> 00:54:11,900
And then so when we're actually doing this resolved here, I'm going to

1201
00:54:11,900 --> 00:54:16,200
say when we get back the closest point in the rectangle for that test

1202
00:54:16,200 --> 00:54:16,700
P.

1203
00:54:16,900 --> 00:54:19,100
I'm going to then see whether that's better.

1204
00:54:19,300 --> 00:54:20,300
The distance is better.

1205
00:54:20,300 --> 00:54:21,900
So I also say best distance.

1206
00:54:24,900 --> 00:54:26,800
Will be whatever.

1207
00:54:26,800 --> 00:54:29,700
The best distance, D is the distance between the new player P.

1208
00:54:29,700 --> 00:54:34,500
And the old player P, which is, which is again that diff do we have?

1209
00:54:34,900 --> 00:54:39,300
I feel like we have this so we know how much we added, right?

1210
00:54:39,400 --> 00:54:41,100
So I'm going to actually save that.

1211
00:54:41,600 --> 00:54:46,100
So this is this is the player, Delta, right?

1212
00:54:46,600 --> 00:54:49,900
However much we added to the guy is this

1213
00:54:51,300 --> 00:54:51,800
Right.

1214
00:54:52,200 --> 00:54:53,700
This is what we're moving him by.

1215
00:54:54,200 --> 00:54:54,700
You go.

1216
00:54:55,500 --> 00:54:57,600
And so that's player Delta plus.

1217
00:55:01,300 --> 00:55:04,200
I could actually just say that as well.

1218
00:55:05,000 --> 00:55:06,900
So, that's the player Delta, right?

1219
00:55:07,100 --> 00:55:10,700
And so, if I want to, I can say, however, long that player Delta is,

1220
00:55:10,700 --> 00:55:14,100
is the best distance if we just stood still.

1221
00:55:14,400 --> 00:55:17,200
So we definitely don't want to move the guy if moving him would cause

1222
00:55:17,200 --> 00:55:18,200
them to move further away.

1223
00:55:18,500 --> 00:55:20,000
So when we start out the

1224
00:55:20,200 --> 00:55:23,700
Oop we're going to say that the best distance and the best location is

1225
00:55:23,700 --> 00:55:24,900
just right where we are.

1226
00:55:25,100 --> 00:55:28,600
And then each time we check a tile will see whether where we would

1227
00:55:28,600 --> 00:55:31,900
move in that tile would be better than if we just stayed still.

1228
00:55:32,200 --> 00:55:34,800
And if it does we'll update that to be the new best distance of the

1229
00:55:34,800 --> 00:55:37,500
new best p and we'll go from there.

1230
00:55:37,800 --> 00:55:38,300
Right?

1231
00:55:38,500 --> 00:55:40,100
So we've got the best distance here.

1232
00:55:40,500 --> 00:55:43,500
So we've got that best distance is going to be the length.

1233
00:55:44,400 --> 00:55:46,900
And in fact, I'll actually do this squared here.

1234
00:55:48,200 --> 00:55:49,100
Let's talk about this for a minute.

1235
00:55:49,100 --> 00:55:50,100
We're almost out of time.

1236
00:55:50,400 --> 00:55:54,400
But but oops, I don't know if you remember, we actually implemented

1237
00:55:54,400 --> 00:55:58,200
this, but we actually did the math for this the other day.

1238
00:55:58,200 --> 00:56:00,900
I said, if you wanted to find the length of the vector, you could just

1239
00:56:00,900 --> 00:56:05,300
do the square root of the vector with its own inner product, right,

1240
00:56:05,500 --> 00:56:06,900
but we never actually type that in.

1241
00:56:07,100 --> 00:56:11,400
So there's actually, if I just want to get the length squared of a

1242
00:56:11,400 --> 00:56:12,400
particular Vector.

1243
00:56:13,800 --> 00:56:15,400
Maybe I'll call that length, SQ.

1244
00:56:15,600 --> 00:56:16,700
It seems a little bit better.

1245
00:56:17,800 --> 00:56:18,200
We go.

1246
00:56:18,900 --> 00:56:21,700
If you just want to get the length squared, we actually already did

1247
00:56:21,700 --> 00:56:23,600
the math for that on the previous stream.

1248
00:56:24,200 --> 00:56:26,600
It's just it's just that right.

1249
00:56:27,700 --> 00:56:30,000
And that's we don't even we wouldn't really even have to choose a

1250
00:56:30,000 --> 00:56:31,600
function is just a little easier to read.

1251
00:56:31,600 --> 00:56:33,600
It's like easier for the person to read now.

1252
00:56:33,600 --> 00:56:36,000
Why am I leaving at squared instead of taking the square root to find

1253
00:56:36,000 --> 00:56:36,400
its length?

1254
00:56:36,400 --> 00:56:38,400
Well, square roots is extra work.

1255
00:56:38,400 --> 00:56:41,100
We don't actually have to do because we never actually care what the

1256
00:56:41,100 --> 00:56:41,600
distance is.

1257
00:56:41,600 --> 00:56:45,300
We just care if the distance is less and we know that the square of a

1258
00:56:45,300 --> 00:56:48,700
number, that's less than another number is also less than the square

1259
00:56:48,700 --> 00:56:49,700
of that other number, right?

1260
00:56:49,700 --> 00:56:52,800
We know that if x is less than

1261
00:56:54,300 --> 00:56:59,000
why then x squared is also less than y squared as long as the numbers

1262
00:56:59,200 --> 00:56:59,800
are both.

1263
00:57:00,200 --> 00:57:01,200
The same sign, right?

1264
00:57:01,200 --> 00:57:02,500
As long as they're both positive.

1265
00:57:02,500 --> 00:57:04,300
For example, we know that that's true.

1266
00:57:04,300 --> 00:57:08,000
There are - they might flip and this case it might be different,

1267
00:57:08,000 --> 00:57:08,500
right?

1268
00:57:08,600 --> 00:57:11,300
But but that's this is the case for positive and we know that

1269
00:57:11,300 --> 00:57:14,500
distances are always positive, like the length that you go, the length

1270
00:57:14,500 --> 00:57:15,500
is always going to be positive.

1271
00:57:15,500 --> 00:57:17,100
There's no way for it to be negative.

1272
00:57:17,100 --> 00:57:18,700
So we're totally fine, right?

1273
00:57:19,700 --> 00:57:20,100
So,

1274
00:57:21,500 --> 00:57:25,500
In this case, that's totally sufficient and all we would do here is is

1275
00:57:25,500 --> 00:57:28,700
is actually test to see whether it's better.

1276
00:57:29,100 --> 00:57:30,100
And of course, I'm out of time.

1277
00:57:30,100 --> 00:57:31,300
So we'll do that tomorrow.

1278
00:57:31,600 --> 00:57:31,900
I'm sorry.

1279
00:57:31,900 --> 00:57:33,800
We'll do that on Monday and finish that up.

1280
00:57:34,000 --> 00:57:35,800
So we'll just leave that as a dot dot dot.

1281
00:57:36,500 --> 00:57:38,800
In order to not leave our code in done compiling State.

1282
00:57:38,900 --> 00:57:41,200
Let's go ahead and flip this back and make sure that we're still

1283
00:57:41,200 --> 00:57:41,600
working.

1284
00:57:41,900 --> 00:57:42,600
Oh no.

1285
00:57:43,500 --> 00:57:44,900
Oh, I broke something.

1286
00:57:45,400 --> 00:57:48,000
Yeah, make sure we're still working and I did not make sure that we're

1287
00:57:48,000 --> 00:57:48,600
still working.

1288
00:57:48,700 --> 00:57:51,200
So it's good that I check that let's just quickly see what I actually.

1289
00:57:51,300 --> 00:57:51,800
Broke their.

1290
00:57:52,700 --> 00:57:53,300
Oh, whoops.

1291
00:57:53,300 --> 00:57:55,500
That that's, that's what I wrote.

1292
00:57:57,500 --> 00:57:58,400
Sorry about that.

1293
00:57:58,800 --> 00:58:00,500
Slight, slight error there.

1294
00:58:00,700 --> 00:58:01,400
Slight error.

1295
00:58:01,700 --> 00:58:02,100
There we go.

1296
00:58:02,800 --> 00:58:03,100
Okay.

1297
00:58:03,900 --> 00:58:04,700
Everyone's happy.

1298
00:58:05,200 --> 00:58:05,600
Here we go.

1299
00:58:05,800 --> 00:58:06,700
So I'm moving around.

1300
00:58:07,200 --> 00:58:10,300
All right, so let's call it for now, and we'll go to the Q&A and then

1301
00:58:10,600 --> 00:58:13,000
we should have really no problem on Monday, finishing that up.

1302
00:58:13,000 --> 00:58:14,800
Since we've already explained everything that we're going to do.

1303
00:58:15,200 --> 00:58:16,300
We're just do that.

1304
00:58:16,400 --> 00:58:20,200
Will implement this function and then we'll implement this check to

1305
00:58:20,500 --> 00:58:21,100
accept it.

1306
00:58:21,200 --> 00:58:24,200
Well, it'll basically be, you know, something that looks like this

1307
00:58:25,700 --> 00:58:26,400
sort of thing.

1308
00:58:27,000 --> 00:58:31,500
So this would be this would be a new player P here and the best

1309
00:58:31,500 --> 00:58:33,700
distance squared will be the test.

1310
00:58:33,700 --> 00:58:37,000
So this will be a test different Square here that will do and will

1311
00:58:37,000 --> 00:58:40,100
basically say if the, if the best distance squared is greater than

1312
00:58:40,100 --> 00:58:42,800
whatever that test census is, will accept the new one.

1313
00:58:42,900 --> 00:58:44,300
So we basically just keep checking in.

1314
00:58:44,300 --> 00:58:46,800
Keep picking a new best every time we see one.

1315
00:58:47,300 --> 00:58:49,300
All right, let's go to the Q&A.

1316
00:58:49,800 --> 00:58:51,100
If you wouldn't mind.

1317
00:58:51,200 --> 00:58:55,000
Find prefixing your question with Q: so I can see it.

1318
00:58:55,200 --> 00:58:57,700
And please keep the questions, two things that we've done on today's

1319
00:58:57,700 --> 00:58:58,800
stream or on a previous stream.

1320
00:58:58,800 --> 00:59:00,700
If you want to ask off-topic questions, you can do.

1321
00:59:00,700 --> 00:59:05,200
So in the the stream the if you show up a little bit before the stream

1322
00:59:05,200 --> 00:59:07,000
starts about 15 minutes before the stream starts.

1323
00:59:07,000 --> 00:59:09,900
I'm usually on answering questions that can be as off topic as you

1324
00:59:09,900 --> 00:59:10,300
want.

1325
00:59:10,300 --> 00:59:12,500
But for the official accusing is here that get recorded.

1326
00:59:12,800 --> 00:59:13,900
Please keep them on topic.

1327
00:59:29,500 --> 00:59:30,700
Questions.

1328
00:59:31,800 --> 00:59:33,500
Questions.

1329
00:59:36,700 --> 00:59:38,000
Do we have any questions?

1330
00:59:38,000 --> 00:59:39,100
We don't have any questions.

1331
00:59:39,500 --> 00:59:42,300
There's no Q must not.

1332
00:59:42,300 --> 00:59:44,200
Be very many people on the stream today, perhaps.

1333
00:59:49,300 --> 00:59:52,700
Ah good the person who asked about the handmade Tha that CPP question

1334
00:59:52,700 --> 00:59:56,000
before has asked again, and that is exactly what I was hoping because

1335
00:59:56,000 --> 00:59:58,200
otherwise I probably would forgotten and I would have forgotten.

1336
00:59:58,400 --> 00:59:59,400
So thank you for for

1337
01:00:00,000 --> 01:00:00,700
Question again.

1338
01:00:02,500 --> 01:00:06,100
So, what the person is asked, is that there's multiple versions of the

1339
01:00:06,100 --> 01:00:09,000
get tile value function and they all do the same thing.

1340
01:00:09,200 --> 01:00:09,400
Right?

1341
01:00:09,400 --> 01:00:14,100
So there's three of them, you can see if I actually do the three of

1342
01:00:14,100 --> 01:00:14,400
them there.

1343
01:00:14,400 --> 01:00:15,100
There's this one.

1344
01:00:16,400 --> 01:00:17,000
Get Top Value.

1345
01:00:17,000 --> 01:00:23,200
In fact, I could I think I could put them all right next to each

1346
01:00:23,200 --> 01:00:23,600
other.

1347
01:00:23,600 --> 01:00:27,100
If we want to just take a look at those together.

1348
01:00:27,100 --> 01:00:28,300
Where am I get to evaluate?

1349
01:00:28,300 --> 01:00:28,600
There we go.

1350
01:00:28,600 --> 01:00:29,700
Does that still work there?

1351
01:00:29,800 --> 01:00:34,700
Okay, so here are the three versions and the person was wondering why

1352
01:00:34,700 --> 01:00:36,000
we have free versions.

1353
01:00:36,500 --> 01:00:40,100
The answer is just because it's to make it so that when people want to

1354
01:00:40,100 --> 01:00:43,900
call it, they can do the most convenient version for them.

1355
01:00:44,200 --> 01:00:44,800
Right?

1356
01:00:44,900 --> 01:00:45,900
So basically, if you

1357
01:00:46,200 --> 01:00:46,800
Open to happen.

1358
01:00:46,800 --> 01:00:48,400
Do the tile chunk that you're in.

1359
01:00:48,600 --> 01:00:52,600
And you just want to get a tile out of that pile, chunk at find out

1360
01:00:52,600 --> 01:00:53,500
what the value is.

1361
01:00:53,600 --> 01:00:57,100
Then you call this function, but if you don't know what Tau childcare

1362
01:00:57,100 --> 01:01:01,600
and you just have because remember again, let me be more specific

1363
01:01:01,600 --> 01:01:01,900
here.

1364
01:01:02,300 --> 01:01:03,600
Remember how we're storing this?

1365
01:01:03,800 --> 01:01:05,200
We have a giant world.

1366
01:01:05,400 --> 01:01:08,600
It's it could be massive right in terms of its Dimension.

1367
01:01:09,000 --> 01:01:10,600
And so we can't possibly store it all.

1368
01:01:10,600 --> 01:01:11,500
There's just, no way.

1369
01:01:12,100 --> 01:01:13,400
We couldn't even store it all.

1370
01:01:13,400 --> 01:01:16,000
If we if we did disk-based paging.

1371
01:01:16,100 --> 01:01:18,600
There isn't enough room on a hard drive to even store the maximum

1372
01:01:18,600 --> 01:01:21,600
Dimensions that we allowed for the world, which is 4 billion by 4

1373
01:01:21,600 --> 01:01:22,400
billion tiles.

1374
01:01:22,800 --> 01:01:23,500
You couldn't your.

1375
01:01:23,500 --> 01:01:24,900
There's no way to even store it.

1376
01:01:25,300 --> 01:01:26,900
So that's not on the table.

1377
01:01:26,900 --> 01:01:30,400
So what we did instead is we have little chunks and wherever the world

1378
01:01:30,400 --> 01:01:32,300
actually is, right?

1379
01:01:32,500 --> 01:01:36,000
We fill in the chunks that are just where the world actually is.

1380
01:01:36,100 --> 01:01:39,600
So that way the world can be however weird and snaky, it wants to be

1381
01:01:39,600 --> 01:01:42,300
without having to worry about fitting itself into some predefined

1382
01:01:42,300 --> 01:01:42,800
Square.

1383
01:01:43,100 --> 01:01:45,900
That's the way we decided to define the world so that it can be kind

1384
01:01:45,900 --> 01:01:46,000
of

1385
01:01:46,100 --> 01:01:46,900
Trey, that way.

1386
01:01:47,800 --> 01:01:52,400
So what that means is when we're asking for a tile, we need to ask

1387
01:01:52,400 --> 01:01:54,500
about a tile in a particular chunk.

1388
01:01:54,600 --> 01:01:58,100
But in order for people to work with them easily, we want them to be

1389
01:01:58,100 --> 01:02:01,800
able to ask about tiles using just an absolute tile location, right?

1390
01:02:01,800 --> 01:02:06,000
So that they don't actually have to worry about what top sockets in

1391
01:02:06,000 --> 01:02:07,100
when they're just using code.

1392
01:02:07,100 --> 01:02:09,000
That's external to it and not try to do anything, particularly

1393
01:02:09,000 --> 01:02:09,800
performance optimal.

1394
01:02:09,800 --> 01:02:11,800
Just like here's a bunch of absolute tile coordinates.

1395
01:02:11,800 --> 01:02:13,500
Get me the tile value.

1396
01:02:13,500 --> 01:02:15,400
I don't want to worry about the chunks, right?

1397
01:02:16,400 --> 01:02:19,000
So basically what we have is we have a three tiered structure here.

1398
01:02:19,100 --> 01:02:23,900
If you are using the like bundled position format that we that we

1399
01:02:23,900 --> 01:02:26,400
introduced to keep track of things, a little more easily for people,

1400
01:02:27,000 --> 01:02:29,700
then this function, all this function does, is basically just a little

1401
01:02:29,700 --> 01:02:34,300
cracker function that like, cracks that thing, open and passes, the

1402
01:02:34,300 --> 01:02:38,700
three absolute values into the next tier of the function, right?

1403
01:02:38,700 --> 01:02:41,300
So it's basically just breaking the function up into segments.

1404
01:02:41,300 --> 01:02:42,500
So, if you have one of those, you can call it.

1405
01:02:42,500 --> 01:02:45,200
If you don't have one of those, you don't need.

1406
01:02:45,200 --> 01:02:45,600
See this.

1407
01:02:45,600 --> 01:02:45,800
This

1408
01:02:46,100 --> 01:02:49,900
That position has an additional piece of value, piece of information

1409
01:02:49,900 --> 01:02:50,300
it, right?

1410
01:02:50,300 --> 01:02:53,200
This offset, which you don't actually need to get the tile value.

1411
01:02:53,400 --> 01:02:55,800
You don't care where the person is inside the tile.

1412
01:02:56,100 --> 01:02:57,700
So this just peels that off and passes.

1413
01:02:57,700 --> 01:02:59,700
Only the necessary stuff down to the next layer.

1414
01:03:00,000 --> 01:03:01,000
What the next layer does is.

1415
01:03:01,000 --> 01:03:03,500
It goes ahead and looks up, what chunk those would be in?

1416
01:03:04,400 --> 01:03:07,800
And then actually gets the chunk and then at calls down to the next

1417
01:03:07,800 --> 01:03:08,600
level of the function.

1418
01:03:08,900 --> 01:03:10,600
Finally, in the next level we go.

1419
01:03:10,600 --> 01:03:12,000
Okay, inside that tile chunk.

1420
01:03:12,000 --> 01:03:15,300
Now we can actually get the value which actually calls the real

1421
01:03:15,300 --> 01:03:17,200
function which is get Top Value in checked.

1422
01:03:17,300 --> 01:03:20,200
So these are all really just helper functions.

1423
01:03:20,600 --> 01:03:21,100
Technically.

1424
01:03:21,100 --> 01:03:23,500
These should probably all just be inlined, really.

1425
01:03:23,600 --> 01:03:24,200
I mean, we haven't.

1426
01:03:24,200 --> 01:03:26,200
We don't like I said, we're not we think about performance doesn't

1427
01:03:26,200 --> 01:03:29,700
really matter but in terms of notating to myself, these are probably

1428
01:03:30,000 --> 01:03:32,800
All in line because most of them just want to directly call this

1429
01:03:32,800 --> 01:03:35,400
really, this is all you want to do is just do this direct thing right

1430
01:03:35,400 --> 01:03:35,700
here.

1431
01:03:36,300 --> 01:03:38,200
And so these are just there for the utility.

1432
01:03:38,200 --> 01:03:42,500
So that no matter what you have, in terms of information.

1433
01:03:42,800 --> 01:03:45,600
You can easily call something in the external code, that will get you

1434
01:03:45,600 --> 01:03:46,900
back the tile value directly.

1435
01:03:46,900 --> 01:03:49,800
So you don't have to worry about copying pasting this code or anything

1436
01:03:49,800 --> 01:03:50,100
like that.

1437
01:03:50,100 --> 01:03:51,700
You can just do it and know that it works.

1438
01:03:52,000 --> 01:03:52,700
Does that make sense?

1439
01:03:58,300 --> 01:04:00,900
You start with variable names with uppercase struck names with lower.

1440
01:04:00,900 --> 01:04:03,100
Is that the standard see way or just how you do it?

1441
01:04:03,300 --> 01:04:07,200
I'm used to the opposite which is why I'm asking, it's just how I do

1442
01:04:07,200 --> 01:04:07,500
it.

1443
01:04:08,700 --> 01:04:11,700
I think the standard way is actually to have everything be lower case

1444
01:04:11,700 --> 01:04:12,600
with underscores.

1445
01:04:12,900 --> 01:04:14,800
Maybe is more standard.

1446
01:04:15,400 --> 01:04:15,800
I don't know.

1447
01:04:15,800 --> 01:04:17,900
But that's just that's this is just the way that I did it.

1448
01:04:18,500 --> 01:04:23,800
It actually originally comes from Chris hecker's style because I was

1449
01:04:23,800 --> 01:04:26,800
programming the first job I got.

1450
01:04:26,900 --> 01:04:27,200
When I

1451
01:04:27,400 --> 01:04:32,400
First programming in the game industry was with him and that's the way

1452
01:04:32,400 --> 01:04:35,400
he usually had his coat structured.

1453
01:04:35,800 --> 01:04:37,500
So I just end up picking that up.

1454
01:04:38,900 --> 01:04:41,500
I think before that I did everything was lowercase with underscores.

1455
01:04:49,200 --> 01:04:49,900
Abner.

1456
01:04:49,900 --> 01:04:53,200
When winter, if NPCs are introduced, will they reuse some of the code

1457
01:04:53,200 --> 01:04:54,000
shown here?

1458
01:04:54,700 --> 01:04:57,000
So I suspect it.

1459
01:04:57,000 --> 01:04:59,400
They will there will be a lot of reuse code.

1460
01:04:59,400 --> 01:05:03,300
But again, that's that's the kind of question that you want to let the

1461
01:05:03,300 --> 01:05:04,600
code answer for you.

1462
01:05:05,200 --> 01:05:09,100
So when we start writing in PCS, we should see immediately.

1463
01:05:09,200 --> 01:05:12,500
If they have to, if they want to ask the same kinds of questions as

1464
01:05:12,500 --> 01:05:13,100
the player does.

1465
01:05:13,100 --> 01:05:16,500
And if so, then we would use the same code and if not, then we

1466
01:05:16,500 --> 01:05:17,400
wouldn't, right.

1467
01:05:17,700 --> 01:05:22,100
So, usually you don't want to think about code reuse in terms of a

1468
01:05:22,100 --> 01:05:23,400
forward-thinking thing.

1469
01:05:23,500 --> 01:05:25,800
You want to think of, as a backward, thinking thing, you want to go,

1470
01:05:25,800 --> 01:05:27,700
am I about to do something that I've already done?

1471
01:05:27,700 --> 01:05:31,300
And if so, let's figure out how they can both do the thing, using the

1472
01:05:31,300 --> 01:05:32,200
same piece of code.

1473
01:05:32,400 --> 01:05:34,100
You don't want to do the opposite, which is go.

1474
01:05:34,200 --> 01:05:36,900
Let me think about how to write something that I think I could reuse

1475
01:05:36,900 --> 01:05:37,800
in two places.

1476
01:05:38,000 --> 01:05:41,400
That's really bad typically, so I try never to do that.

1477
01:05:54,900 --> 01:05:56,600
Are you going to implement push?

1478
01:05:56,600 --> 01:05:59,800
Squeeze on walls like say?

1479
01:06:00,000 --> 01:06:04,500
Shoulder budding into wall and automatically pushing the player out a

1480
01:06:04,500 --> 01:06:06,700
bit to fit through.

1481
01:06:08,300 --> 01:06:09,200
I think you are.

1482
01:06:09,300 --> 01:06:11,800
Do you need walls or do mean doorways?

1483
01:06:12,200 --> 01:06:14,700
Because you can't really fit through a wall, but I guess.

1484
01:06:14,700 --> 01:06:15,700
Are you asking?

1485
01:06:16,800 --> 01:06:21,400
Are you asking about this scenario, which is

1486
01:06:23,100 --> 01:06:28,000
To say if I'm walking this way will I will?

1487
01:06:28,000 --> 01:06:31,600
I do something so that the player doesn't get stuck on this Edge and

1488
01:06:31,600 --> 01:06:35,000
the answer to that is actually, we could do some stuff there and we'll

1489
01:06:35,000 --> 01:06:40,400
have to see how it feels, but just the Collision, just the change that

1490
01:06:40,400 --> 01:06:45,100
we're making right now, we'll actually helped us a lot because if we

1491
01:06:45,100 --> 01:06:49,300
do go with a circular or elliptical model for the player, he will kind

1492
01:06:49,300 --> 01:06:52,300
of automatically do that because when he hits this thing,

1493
01:06:53,000 --> 01:06:56,000
And we're moving this way that search in P thing.

1494
01:06:56,000 --> 01:07:00,500
I talked about will automatically find that moving him out and in,

1495
01:07:00,500 --> 01:07:02,900
through the doorway, is the way to make him go.

1496
01:07:03,100 --> 01:07:07,100
So this search in P will actually automatically improve our, doorway

1497
01:07:07,100 --> 01:07:09,000
handling drastically already.

1498
01:07:10,700 --> 01:07:14,300
But but yeah, we may want, if we may want to do additional stuff like

1499
01:07:14,300 --> 01:07:19,100
making a funnel here, that sort of like sucks the player into the door

1500
01:07:19,100 --> 01:07:19,900
when they're going.

1501
01:07:20,100 --> 01:07:21,500
If we find that that feels better.

1502
01:07:32,500 --> 01:07:35,800
It seems like the possible movement positions are, more of a pizza

1503
01:07:35,800 --> 01:07:38,900
slice than all the squares around the player.

1504
01:07:39,100 --> 01:07:41,400
Why did we do a generic thing around all the players positions?

1505
01:07:41,400 --> 01:07:42,200
Instead of that?

1506
01:07:42,400 --> 01:07:46,300
Just because I don't want to really deal with risk Computing, the

1507
01:07:46,300 --> 01:07:48,100
restricted area quite yet.

1508
01:07:48,200 --> 01:07:50,500
So that's why I think I mentioned this when I said, let's just do the

1509
01:07:50,500 --> 01:07:52,500
obvious thing of like, looping them over right now.

1510
01:07:53,300 --> 01:07:56,700
Pizza slice is not what I would call it.

1511
01:07:57,100 --> 01:08:00,600
But basically, the tiles that are used will basically be something

1512
01:08:00,600 --> 01:08:01,300
like this.

1513
01:08:03,000 --> 01:08:05,500
And so we actually I think we may actually end up with the correct

1514
01:08:05,500 --> 01:08:09,500
bounds even now that I say it just by using because we're got a search

1515
01:08:09,500 --> 01:08:10,100
over tiles.

1516
01:08:10,100 --> 01:08:14,000
So pizza slice doesn't really help but it's just going to be something

1517
01:08:14,000 --> 01:08:15,400
that looks like that, right?

1518
01:08:16,200 --> 01:08:18,899
And and you don't know that it's a pizza slice because it could be

1519
01:08:19,200 --> 01:08:23,600
that the closest point is is very much directly above you almost or

1520
01:08:23,600 --> 01:08:25,399
directly to the side of you like that.

1521
01:08:25,800 --> 01:08:27,300
So it is it's more of a rectangle.

1522
01:08:27,300 --> 01:08:29,000
It's more of something that looks like that.

1523
01:08:37,500 --> 01:08:40,899
How do you think we would determine using this system if the player

1524
01:08:40,899 --> 01:08:45,600
should be killed by a collision like walls closing in and crushing you

1525
01:08:45,600 --> 01:08:46,399
or whatever?

1526
01:08:48,399 --> 01:08:49,700
Well, that's a good question.

1527
01:08:51,200 --> 01:08:52,000
I don't know that.

1528
01:08:52,000 --> 01:08:56,399
I don't know how much I would necessarily say that I want to have

1529
01:08:56,399 --> 01:08:59,600
stuff where that necessarily happens, but the

1530
01:09:00,000 --> 01:09:02,200
Easiest way to do it is just to go.

1531
01:09:02,300 --> 01:09:04,300
Well that first move that you make.

1532
01:09:04,300 --> 01:09:07,899
So I'm here and I try to move here whatever you were inside.

1533
01:09:07,899 --> 01:09:10,000
At that time could have consequences.

1534
01:09:10,100 --> 01:09:12,600
So if you're trying to make it so that if you touch a wall that kills

1535
01:09:12,600 --> 01:09:14,600
you, you just do that.

1536
01:09:14,600 --> 01:09:19,300
So, if I, if I would have been inside a spiky, Killy thing then, that

1537
01:09:19,300 --> 01:09:22,000
kills me on the other hand.

1538
01:09:22,000 --> 01:09:26,800
If I end up in a situation where I cannot stand in my current

1539
01:09:26,800 --> 01:09:27,500
position.

1540
01:09:28,200 --> 01:09:32,399
And I cannot find a point that's close to me.

1541
01:09:32,800 --> 01:09:37,300
That's that's that would be, that would be, I cannot find a point.

1542
01:09:37,300 --> 01:09:40,800
I could move to that's within the boundaries of how far the player is

1543
01:09:40,800 --> 01:09:41,899
allowed to move.

1544
01:09:42,000 --> 01:09:44,300
Then I know that walls have closed in on me.

1545
01:09:44,800 --> 01:09:46,399
And again I would do whatever.

1546
01:09:46,600 --> 01:09:50,300
Is the place that I'm standing I would just do whatever is in that

1547
01:09:50,300 --> 01:09:52,200
location would have its effect.

1548
01:09:52,399 --> 01:09:53,000
Right?

1549
01:09:53,700 --> 01:09:56,100
So it's actually really easy to handle, both those cases.

1550
01:09:56,500 --> 01:09:57,800
But like I said, I don't know if

1551
01:09:58,000 --> 01:10:00,100
Have those are not if we do, that's how we would handle them.

1552
01:10:08,800 --> 01:10:11,300
Well, we have to push Boulders out of the way of doors.

1553
01:10:12,000 --> 01:10:16,300
I don't know, probably not doesn't sound like very much fun.

1554
01:10:25,400 --> 01:10:30,500
Abner Abner wants to know if I ever fall for some of the dogmatic

1555
01:10:30,500 --> 01:10:33,600
traps anymore when I'm coding.

1556
01:10:47,200 --> 01:10:47,800
I don't know.

1557
01:10:48,100 --> 01:10:49,000
That's a good question.

1558
01:10:49,200 --> 01:10:50,300
Not very often.

1559
01:10:58,800 --> 01:11:00,200
I don't think so.

1560
01:11:01,800 --> 01:11:07,500
But I do write lousy code still write, like I don't think I fall for

1561
01:11:07,500 --> 01:11:11,900
the dog dogmatic traps, but the bottom line is that like I'll still

1562
01:11:11,900 --> 01:11:12,800
sometimes, write code.

1563
01:11:12,800 --> 01:11:14,500
That isn't very good, right at.

1564
01:11:14,500 --> 01:11:17,200
That's algorithmically not very good and you're just like, Yep.

1565
01:11:17,200 --> 01:11:18,600
This was not very good.

1566
01:11:18,600 --> 01:11:21,500
And that's because you can.

1567
01:11:22,000 --> 01:11:26,300
It's easy to eventually train yourself to avoid problems with your

1568
01:11:26,300 --> 01:11:30,300
coding style, that are making that are causing you to do, like more

1569
01:11:30,300 --> 01:11:30,900
work than you should have.

1570
01:11:31,100 --> 01:11:32,500
Honor to do things poorly.

1571
01:11:34,100 --> 01:11:37,100
But the bottom line is there's just a lot of work that goes into

1572
01:11:37,100 --> 01:11:38,000
writing something correctly.

1573
01:11:38,000 --> 01:11:40,900
And sometimes you just don't do that work and it has nothing to do

1574
01:11:40,900 --> 01:11:42,600
with like what the code looks like.

1575
01:11:42,600 --> 01:11:46,300
It's that it's actually just struck the actual algorithm is not very

1576
01:11:46,300 --> 01:11:46,700
good.

1577
01:11:46,700 --> 01:11:47,200
Right?

1578
01:11:48,500 --> 01:11:52,000
And I definitely do that on projects, you know.

1579
01:11:56,100 --> 01:11:59,800
like Fabi and recently had to had to deal with one of my

1580
01:12:00,000 --> 01:12:04,900
Generators, which was super janky and like, you know, I was like it

1581
01:12:04,900 --> 01:12:08,600
only did exactly what it needed to do, for what I had in mind for it

1582
01:12:08,600 --> 01:12:12,100
and like, of course, he was doing some stuff on pink to afterwards and

1583
01:12:12,100 --> 01:12:12,900
had to deal with it.

1584
01:12:12,900 --> 01:12:15,000
And I do not relish being in his position, right?

1585
01:12:15,000 --> 01:12:17,100
Because I definitely did not set him up for Success.

1586
01:12:17,100 --> 01:12:21,400
So he had to do a bunch of work to it, to fix a bunch of things that

1587
01:12:21,400 --> 01:12:24,300
were bad in it, but I don't like most of those were not because I had

1588
01:12:24,300 --> 01:12:26,900
some dogmatic coding style, but I thought it was just because the code

1589
01:12:26,900 --> 01:12:28,300
was lousy, right?

1590
01:12:29,300 --> 01:12:29,900
And the algorithm

1591
01:12:30,000 --> 01:12:33,400
thumbs were lousy because I just did the simplest thing that needed to

1592
01:12:33,400 --> 01:12:34,000
get done.

1593
01:12:34,200 --> 01:12:35,200
Instead of going.

1594
01:12:35,300 --> 01:12:37,500
Hey, I should take some time here to think about.

1595
01:12:37,500 --> 01:12:39,100
This is something that people are going to use later.

1596
01:12:39,100 --> 01:12:41,200
Let's go ahead and actually do more work on it.

1597
01:12:41,200 --> 01:12:44,600
And so sometimes, you know, that's something that I still do which is

1598
01:12:44,600 --> 01:12:46,000
I don't go and take the time to go.

1599
01:12:46,000 --> 01:12:47,200
Okay, hold on.

1600
01:12:47,800 --> 01:12:50,100
Now that we've got things doing what I needed to do.

1601
01:12:50,300 --> 01:12:51,700
Let's push a little further.

1602
01:12:51,700 --> 01:12:54,200
If I know that this is something that's going to stick around.

1603
01:12:54,300 --> 01:12:58,500
Let's push a little further and actually go do the cleanup and the

1604
01:12:58,500 --> 01:12:59,800
extension that you

1605
01:13:00,000 --> 01:13:03,100
Should do if you are going to actually, prepare the next person for

1606
01:13:03,100 --> 01:13:03,700
Success.

1607
01:13:03,900 --> 01:13:05,500
So I definitely have that problem still.

1608
01:13:07,700 --> 01:13:09,700
So, you know, there's that.

1609
01:13:12,400 --> 01:13:13,500
So, does the search method here?

1610
01:13:13,500 --> 01:13:15,000
Give us a sense of rounded Corners?

1611
01:13:15,100 --> 01:13:15,600
Yes.

1612
01:13:15,800 --> 01:13:17,900
Well, the search method doesn't care.

1613
01:13:17,900 --> 01:13:21,200
It's one way to think about it, the third search, the search method is

1614
01:13:21,200 --> 01:13:23,600
whatever you end up Computing in your search.

1615
01:13:23,600 --> 01:13:27,200
If you compute the search space based on rounded Corners, then it

1616
01:13:27,200 --> 01:13:29,100
will, if not, then it won't.

1617
01:13:29,300 --> 01:13:33,900
And so when we right now, when we do our closest point in rectangle,

1618
01:13:34,500 --> 01:13:34,700
right?

1619
01:13:34,700 --> 01:13:41,400
When we Implement that tomorrow, that will not give us rounded the

1620
01:13:41,400 --> 01:13:42,100
rounded.

1621
01:13:42,300 --> 01:13:44,200
Diagonal corner, right?

1622
01:13:44,200 --> 01:13:47,400
So in the case, where you're looking at this and this, we're looking

1623
01:13:47,400 --> 01:13:50,600
at these, this Square, it will not properly.

1624
01:13:50,600 --> 01:13:50,900
Give us.

1625
01:13:50,900 --> 01:13:55,600
That rounded corner at the moment, but we will then up maybe maybe

1626
01:13:55,600 --> 01:13:57,900
even will just upgrade it immediately to have that rounded Corner

1627
01:13:57,900 --> 01:13:59,900
because it's not that hard to do, but I just don't know if I want do

1628
01:13:59,900 --> 01:14:03,000
that right now, but basically it's just whatever you generate.

1629
01:14:03,000 --> 01:14:05,300
The search space to be for searching P.

1630
01:14:05,600 --> 01:14:08,100
It could have rounded Corners if you generate rounded search spaces,

1631
01:14:08,100 --> 01:14:08,500
it won't.

1632
01:14:08,500 --> 01:14:09,300
If you don't

1633
01:14:10,000 --> 01:14:10,300
Hmm.

1634
01:14:16,100 --> 01:14:17,900
I don't really understand the searching stuff.

1635
01:14:17,900 --> 01:14:18,300
Why not?

1636
01:14:18,300 --> 01:14:24,000
Just adjust the players Vector based on normal vectors, so I thought I

1637
01:14:24,000 --> 01:14:28,800
kind of explain that in terms of what had to happen, but maybe I

1638
01:14:28,800 --> 01:14:29,500
didn't

1639
01:14:31,200 --> 01:14:36,600
So let's say I'm here and this is my velocity Vector, right?

1640
01:14:36,600 --> 01:14:41,500
So if I don't do search in P, if I do search in t, which is the

1641
01:14:41,500 --> 01:14:45,000
standard first, I have to write Collision code that checks the

1642
01:14:45,000 --> 01:14:46,500
Collision of these two things, right?

1643
01:14:46,500 --> 01:14:49,000
So, I have to generate something that will produce this point.

1644
01:14:49,000 --> 01:14:50,500
At least that's the first thing.

1645
01:14:50,500 --> 01:14:53,500
And rather it has to actually produce the correct point for the

1646
01:14:53,500 --> 01:14:54,200
circular Collision.

1647
01:14:54,200 --> 01:14:55,900
So it actually has to produce this point, right?

1648
01:14:55,900 --> 01:14:59,800
Then I have to update based on the normal, which, at that point.

1649
01:15:00,000 --> 01:15:01,200
Be here, right?

1650
01:15:01,200 --> 01:15:03,000
So, now, here's my new velocity Vector.

1651
01:15:03,400 --> 01:15:05,200
I then have to rerun this and find.

1652
01:15:05,200 --> 01:15:07,200
Oh, he can't step two here, either.

1653
01:15:07,300 --> 01:15:09,900
He would actually only step to here, right?

1654
01:15:10,000 --> 01:15:13,100
And then, I have to correct the velocity Vector again, right?

1655
01:15:13,200 --> 01:15:15,500
And then, if I still had some left, I might find that he couldn't step

1656
01:15:15,500 --> 01:15:16,300
to hear either.

1657
01:15:16,300 --> 01:15:20,200
He would actually Step 2 here and here and here, and I would end up

1658
01:15:20,200 --> 01:15:25,000
doing one, two, three, four, five, six, six steps of that thing and

1659
01:15:25,100 --> 01:15:26,600
they're all super numerically.

1660
01:15:26,600 --> 01:15:27,200
Fiddly.

1661
01:15:27,400 --> 01:15:27,900
Right?

1662
01:15:28,000 --> 01:15:29,900
Like I have to make sure that numerically I

1663
01:15:30,000 --> 01:15:34,200
Did this correctly because oh I'm adjusting these vectors and doing

1664
01:15:34,200 --> 01:15:36,800
all the stuff in this in this sort of weird crenellations space.

1665
01:15:36,800 --> 01:15:41,000
And and again this has the problem of if I had a little sort of chink

1666
01:15:41,200 --> 01:15:43,600
in the wall that'll like thing that kind of opens up there.

1667
01:15:45,100 --> 01:15:46,500
It would handle that.

1668
01:15:46,500 --> 01:15:48,500
I would just stop dead right there.

1669
01:15:48,900 --> 01:15:52,200
There'd be no way to fix that because when I dead in the velocity,

1670
01:15:52,200 --> 01:15:54,600
when I, when I use only the remaining part of the lawsuit, he just

1671
01:15:54,600 --> 01:15:59,100
stopped right in that corner, so searching tea.

1672
01:16:00,100 --> 01:16:01,600
Is lousy in my opinion?

1673
01:16:03,700 --> 01:16:05,100
Searching p is just way better.

1674
01:16:06,300 --> 01:16:07,900
Because it doesn't have any of these problems.

1675
01:16:08,300 --> 01:16:10,100
So so there's that.

1676
01:16:10,900 --> 01:16:12,400
I'm not sure if that's what you're asking, but

1677
01:16:22,700 --> 01:16:25,500
Are you going to worry about how many objects collisions the Collision

1678
01:16:25,500 --> 01:16:26,600
detection system can handle?

1679
01:16:26,600 --> 01:16:28,900
Or will you not worry about that until you have more objects

1680
01:16:28,900 --> 01:16:29,500
collisions?

1681
01:16:30,200 --> 01:16:34,000
Honestly, I don't think there's any way we could possibly get up to a

1682
01:16:34,000 --> 01:16:37,600
high enough number of objects to worry about Collision in 2D.

1683
01:16:39,700 --> 01:16:41,800
There's I just don't think there's any possible way.

1684
01:16:42,600 --> 01:16:43,900
We'll hit problems with that.

1685
01:16:43,900 --> 01:16:44,600
But

1686
01:16:46,600 --> 01:16:49,000
We may have to think about it more when we moved to slower platforms

1687
01:16:49,000 --> 01:16:50,400
like the Raspberry Pi or something.

1688
01:16:50,400 --> 01:16:57,000
I don't know on a PC where we've got like, you know, two cores at a

1689
01:16:57,000 --> 01:17:00,300
minimum these days and they're running it three gigahertz or whatever

1690
01:17:00,300 --> 01:17:03,500
and like the GPU is going to do all the rendering for us eventually.

1691
01:17:03,500 --> 01:17:07,700
Like I mean, we could have 100 objects on the screen and we wouldn't

1692
01:17:07,700 --> 01:17:08,100
care.

1693
01:17:09,000 --> 01:17:14,300
So and and I don't know that the player could manage 100 objects in a

1694
01:17:14,500 --> 01:17:15,300
zelda-like game.

1695
01:17:15,300 --> 01:17:16,100
I mean, you wouldn't

1696
01:17:17,200 --> 01:17:20,500
A human can only think about a certain number of them before it starts

1697
01:17:20,500 --> 01:17:23,500
to turn into like a bullet, hell game, where you're really talking

1698
01:17:23,500 --> 01:17:26,800
more about an abstract shape that the bullets are making or something.

1699
01:17:27,300 --> 01:17:29,600
But I was, I mean, I'm thinking more like a Zelda game where, you

1700
01:17:29,600 --> 01:17:31,900
know, maybe in a really crazy battle.

1701
01:17:31,900 --> 01:17:35,300
There's 10 enemies and 30 projectiles on the screen or something and

1702
01:17:35,300 --> 01:17:38,600
there's just no way that that's going to ever tax the system.

1703
01:17:39,500 --> 01:17:43,300
So so I feel like our focus should be on making the best possible

1704
01:17:43,300 --> 01:17:46,000
system for good movement and not on What's the

1705
01:17:46,400 --> 01:17:49,900
Fast as possible thing, that might be kind of lousy, but that's geared

1706
01:17:49,900 --> 01:17:50,800
towards doing a lot more.

1707
01:17:50,800 --> 01:17:56,400
Because in this case, what we want is high quality lower quantity

1708
01:17:56,400 --> 01:17:58,500
because we're just not going to have the kind of quantity Where we

1709
01:17:58,500 --> 01:17:59,800
would start to make a trade-off.

1710
01:18:00,400 --> 01:18:01,500
In the quantity Direction.

1711
01:18:14,100 --> 01:18:15,200
For searching P.

1712
01:18:15,300 --> 01:18:17,500
Don't you have a problem with passing through walls thinner than the

1713
01:18:17,500 --> 01:18:19,500
players movement, Vector know.

1714
01:18:19,700 --> 01:18:23,200
So the reason you don't is because that flood fill, like I said, so

1715
01:18:23,200 --> 01:18:26,400
you always start with when you're doing your cell search, right?

1716
01:18:26,400 --> 01:18:27,400
And this is true in handmade.

1717
01:18:27,400 --> 01:18:28,700
This will be true in handmade here as well.

1718
01:18:28,700 --> 01:18:30,900
So even though we may be never have the case in handmade here.

1719
01:18:30,900 --> 01:18:33,000
It's true in him here as well.

1720
01:18:33,000 --> 01:18:36,000
If you want to do this, the search has to flood.

1721
01:18:36,000 --> 01:18:39,500
Fill out and reach the wall, and reach the Target location.

1722
01:18:40,100 --> 01:18:42,400
And so, assuming that there's a wall like this and you're trying to

1723
01:18:42,400 --> 01:18:43,100
pass through it.

1724
01:18:43,200 --> 01:18:48,100
Um, you know, he's only allowed to basically go a certain distance in

1725
01:18:48,100 --> 01:18:48,700
the flood fill.

1726
01:18:48,700 --> 01:18:53,200
So he can't actually ever get over to here because he'd never actually

1727
01:18:53,200 --> 01:18:54,300
reach those cells.

1728
01:18:54,300 --> 01:18:57,500
If that's why I was talking about that flood fill before because it

1729
01:18:57,500 --> 01:18:59,300
prevents you from ever considering this at all.

1730
01:18:59,300 --> 01:19:05,000
You could do something really weird where you allowed the player to

1731
01:19:05,000 --> 01:19:09,600
teleport through walls, if if he could ever get there, which would

1732
01:19:09,600 --> 01:19:12,300
allow them to search much farther away, which I don't think you

1733
01:19:12,300 --> 01:19:13,100
actually want to.

1734
01:19:13,200 --> 01:19:13,500
To do.

1735
01:19:13,500 --> 01:19:16,700
But it's interesting because it would enable a interesting type of

1736
01:19:16,700 --> 01:19:20,400
game which is like allow you to phase through walls.

1737
01:19:20,400 --> 01:19:22,500
That well known as I'm gonna go there.

1738
01:19:36,300 --> 01:19:40,100
Will the search code work if the player hits a slightly angled wall,

1739
01:19:40,100 --> 01:19:44,700
that should make him bounce a little away from the wall depending on

1740
01:19:44,700 --> 01:19:45,800
that angle.

1741
01:19:49,600 --> 01:19:52,200
So you're talking about like a wall.

1742
01:19:52,200 --> 01:19:55,600
That's that's like a rubbery wall because the way that we're actually

1743
01:19:55,600 --> 01:19:58,800
doing this is we're trying to make it so that he Glides along walls.

1744
01:19:58,800 --> 01:19:59,700
That's our goal.

1745
01:20:00,100 --> 01:20:02,900
But you're talking about if I wanted to bounce if I want them to

1746
01:20:02,900 --> 01:20:03,500
bounce.

1747
01:20:04,100 --> 01:20:05,100
It's still just works.

1748
01:20:05,100 --> 01:20:05,400
Right?

1749
01:20:05,400 --> 01:20:07,900
Because basically what happens with the search thing, is it goes?

1750
01:20:07,900 --> 01:20:08,400
Oh, okay.

1751
01:20:08,400 --> 01:20:12,400
He's you know, he'd be here and then I know what the normal is.

1752
01:20:12,500 --> 01:20:15,800
So I'll do the reflection of that velocity and I'll do that.

1753
01:20:15,900 --> 01:20:19,200
It might be slightly less accurate, but

1754
01:20:19,700 --> 01:20:23,600
If we wanted to do that, we actually still could because what we could

1755
01:20:23,600 --> 01:20:27,500
do is we could say, if he's bouncing instead of doing the closest

1756
01:20:27,500 --> 01:20:29,700
point to the location.

1757
01:20:29,700 --> 01:20:31,400
We'll just do the closest point.

1758
01:20:33,100 --> 01:20:39,300
We'll take the closest point to along the line, do that search.

1759
01:20:40,000 --> 01:20:44,300
And then, you know, we could say that he comes out from there.

1760
01:20:44,900 --> 01:20:47,500
We do whatever the bounce would have been from there and take the

1761
01:20:47,500 --> 01:20:48,800
closest point to that.

1762
01:20:49,900 --> 01:20:50,400
But I don't know.

1763
01:20:50,400 --> 01:20:51,700
I think you probably still want to do this.

1764
01:20:51,700 --> 01:20:54,100
It's a little bit less accurate, but it's probably more interesting

1765
01:20:54,100 --> 01:20:56,600
and more robust in terms of keeping things.

1766
01:20:56,900 --> 01:20:57,200
Right?

1767
01:20:57,200 --> 01:20:57,800
I'm not sure yet.

1768
01:20:57,800 --> 01:20:59,300
Remember these are very small time steps.

1769
01:20:59,300 --> 01:20:59,600
So

1770
01:21:00,000 --> 01:21:03,400
Like a microscopic situation that we're looking at here, so I don't

1771
01:21:03,400 --> 01:21:03,700
know.

1772
01:21:04,200 --> 01:21:07,000
So you still could Implement bouncing but this is more optimized for

1773
01:21:07,000 --> 01:21:11,000
gliding because that tends to be more what happens in games of this

1774
01:21:11,000 --> 01:21:11,500
nature.

1775
01:21:17,700 --> 01:21:20,100
Will you implement some Secrets while none of us is watching?

1776
01:21:20,100 --> 01:21:22,100
So that we don't know where or what they are.

1777
01:21:23,800 --> 01:21:27,700
I have thought about that a little bit and I'm not sure like

1778
01:21:30,400 --> 01:21:32,900
what I have considered and I don't know if I'll do this or not.

1779
01:21:32,900 --> 01:21:36,300
But what I have considered is basically for the last month of the

1780
01:21:36,300 --> 01:21:37,600
project or something.

1781
01:21:38,100 --> 01:21:41,300
I will no longer do the live stream.

1782
01:21:41,800 --> 01:21:44,600
I'll work as much every day as I want to.

1783
01:21:44,700 --> 01:21:50,100
And I'll record it all but I won't post it live and then when the game

1784
01:21:50,100 --> 01:21:53,500
ships all the stuff that I did in those in those weeks will still be

1785
01:21:53,500 --> 01:21:55,400
documented but no one will know about them.

1786
01:21:55,400 --> 01:21:59,300
So anything that I snuck in there, you won't actually know and then

1787
01:21:59,300 --> 01:22:00,000
I'll release it like

1788
01:22:00,500 --> 01:22:01,800
After the game is done.

1789
01:22:01,900 --> 01:22:05,000
I'll release the video, so you can still go see how everything was

1790
01:22:05,000 --> 01:22:09,500
done, but they'll be like a month of stuff where there could be things

1791
01:22:09,500 --> 01:22:12,200
in there that you didn't know that I put in, I thought about it.

1792
01:22:12,200 --> 01:22:15,200
I don't know if I want to do that or not, but I thought about it.

1793
01:22:18,500 --> 01:22:19,800
Think we're at the end of the questions.

1794
01:22:20,300 --> 01:22:20,700
Hmm.

1795
01:22:21,100 --> 01:22:23,900
Well, the characters have skeletal or old-school Sprite animations

1796
01:22:24,000 --> 01:22:24,600
skeletal.

1797
01:22:30,100 --> 01:22:34,200
Just because it's more work and you know, for educational purposes,

1798
01:22:34,200 --> 01:22:35,500
it'll show more stuff.

1799
01:22:41,800 --> 01:22:42,700
Let's see.

1800
01:22:45,400 --> 01:22:46,000
That's it.

1801
01:22:49,800 --> 01:22:52,300
Girl, and oh Bloom, that sounds like a good idea since the game needs

1802
01:22:52,300 --> 01:22:52,900
secrets.

1803
01:22:56,300 --> 01:22:57,700
Yeah, I think it is possibly.

1804
01:22:57,700 --> 01:22:58,500
I mean, I don't know.

1805
01:22:58,800 --> 01:23:04,100
Like like I said, I don't really know I can Implement a ton of stuff

1806
01:23:04,100 --> 01:23:04,700
in a month.

1807
01:23:05,900 --> 01:23:08,500
So basically, if I just turned off the stream for one month at the

1808
01:23:08,500 --> 01:23:10,900
end, I could add all that stuff, right?

1809
01:23:11,300 --> 01:23:15,100
And then, but I want everything to be recorded, So it basically be.

1810
01:23:15,400 --> 01:23:16,900
There would be, you know.

1811
01:23:18,300 --> 01:23:20,300
A month after handmade hero came out.

1812
01:23:20,700 --> 01:23:26,800
There would be essentially how much so 4080 160.

1813
01:23:26,800 --> 01:23:30,200
So something like over 100 hours of new video to go watch.

1814
01:23:30,200 --> 01:23:33,300
If you wanted to see how all the secrets were implemented, don't know

1815
01:23:33,300 --> 01:23:36,700
if that's a good idea or not, but, you know, something to think about,

1816
01:23:40,900 --> 01:23:42,200
With a search in P approach.

1817
01:23:42,200 --> 01:23:44,700
Also work for colliding with other moving objects.

1818
01:23:45,300 --> 01:23:51,000
Yeah, I mean basically there isn't really any difference in with

1819
01:23:51,000 --> 01:23:55,600
searching p and certainty in terms of what they can handle.

1820
01:23:55,600 --> 01:23:56,900
Really, it just is what's

1821
01:23:58,900 --> 01:23:59,800
use it just

1822
01:24:00,000 --> 01:24:01,400
I want to collide with moving objects.

1823
01:24:01,400 --> 01:24:02,900
You have to decide how you want to do them.

1824
01:24:02,900 --> 01:24:04,900
Whether you're doing in order movement or not.

1825
01:24:04,900 --> 01:24:07,400
I tend to prefer in order movement.

1826
01:24:08,400 --> 01:24:10,800
Because I feel like it's just a better abstraction.

1827
01:24:10,800 --> 01:24:12,600
And since it's all happening at 32, the second.

1828
01:24:12,600 --> 01:24:14,900
I don't feel like the player really sees those differences.

1829
01:24:15,100 --> 01:24:19,900
So usually what I would say is searching P within order, movement is

1830
01:24:19,900 --> 01:24:21,500
probably what I'll Implement for this game.

1831
01:24:21,500 --> 01:24:25,200
Unless there's some really overriding reason not to do it, if that

1832
01:24:25,200 --> 01:24:25,700
makes sense.

1833
01:24:36,400 --> 01:24:38,800
Create a supports Infinite Canvas.

1834
01:24:40,600 --> 01:24:41,400
What does that mean?

1835
01:24:42,800 --> 01:24:44,300
What is infinite canvas?

1836
01:24:44,900 --> 01:24:46,000
How do I turn that on?

1837
01:24:48,000 --> 01:24:48,600
Is that?

1838
01:24:52,200 --> 01:24:53,300
Is that something I can?

1839
01:24:56,500 --> 01:24:58,600
Is that I don't know.

1840
01:24:59,600 --> 01:25:00,800
Infinite Campus.

1841
01:25:05,200 --> 01:25:06,400
Does anyone know what that man?

1842
01:25:06,400 --> 01:25:07,200
I don't know what that means.

1843
01:25:21,500 --> 01:25:22,900
A great deal of the problems.

1844
01:25:22,900 --> 01:25:27,100
You have faced have seemed to me to involve some sort of assessment,

1845
01:25:27,100 --> 01:25:30,100
whether implicit or explicit of a trade-off between storage and

1846
01:25:30,100 --> 01:25:30,800
processing.

1847
01:25:31,300 --> 01:25:34,500
Collision detection, has always bothered me a little because it seems

1848
01:25:34,500 --> 01:25:36,900
as though that trade-off doesn't exist.

1849
01:25:36,900 --> 01:25:39,000
I mean, is there any way around cheap Collision?

1850
01:25:47,300 --> 01:25:48,800
I'm not sure exactly what you're asking.

1851
01:25:48,800 --> 01:25:49,000
First.

1852
01:25:49,000 --> 01:25:53,000
I'll say almost everything is a trade-off between storage and

1853
01:25:53,000 --> 01:25:53,700
processing.

1854
01:25:53,900 --> 01:25:54,700
In some sense.

1855
01:25:54,700 --> 01:25:58,000
There are very few things that aren't so like you can almost always

1856
01:25:58,000 --> 01:26:03,900
trade off storage for you guys space and time often are a trade-off in

1857
01:26:03,900 --> 01:26:04,500
anything.

1858
01:26:04,600 --> 01:26:09,300
You can always choose to use more space to give you less actual time

1859
01:26:09,300 --> 01:26:09,600
processing.

1860
01:26:09,600 --> 01:26:13,100
Now, it's complicated nowadays by the fact that memory accessing is so

1861
01:26:13,100 --> 01:26:16,900
expensive that you can't always trade space for Speed because pull

1862
01:26:17,100 --> 01:26:20,300
In the stuff you would need may take too much time, but there's

1863
01:26:20,300 --> 01:26:21,800
usually a space and time trade-off.

1864
01:26:21,800 --> 01:26:22,100
Yes.

1865
01:26:23,200 --> 01:26:24,300
What that has to do with Collision?

1866
01:26:24,300 --> 01:26:25,100
I'm not sure.

1867
01:26:25,500 --> 01:26:28,900
I mean, it is definitely the case that we could pre-process everything

1868
01:26:28,900 --> 01:26:31,900
into some kind of very smoothly discretize Grid or something that

1869
01:26:31,900 --> 01:26:34,400
would allow us to just do quick lookups to see if you could move there

1870
01:26:34,400 --> 01:26:35,000
and stuff like that.

1871
01:26:35,000 --> 01:26:39,900
But, I mean, one of the reasons that Collision is difficult to trade

1872
01:26:41,100 --> 01:26:44,800
storage for time is because since things are moving, it means that

1873
01:26:44,800 --> 01:26:46,200
there isn't anything to pre-compute.

1874
01:26:46,200 --> 01:26:48,300
So when things are Dynamic, you can't pre compute them.

1875
01:26:48,300 --> 01:26:52,100
It's sort of like Dynamic lighting also has that problem where there's

1876
01:26:52,100 --> 01:26:52,800
not a whole lot of

1877
01:26:52,900 --> 01:26:57,200
Ways that you can trade off storage at some level because you there's

1878
01:26:57,200 --> 01:26:59,800
only a certain amount of people amputation you can ever do now.

1879
01:27:00,100 --> 01:27:01,100
Certainly still do it.

1880
01:27:01,100 --> 01:27:03,900
I mean, there's a bunch of lighting schemes that still use storage to

1881
01:27:03,900 --> 01:27:05,000
speed up Dynamic lighting.

1882
01:27:05,000 --> 01:27:06,200
Like there's tons of that, right?

1883
01:27:06,700 --> 01:27:09,800
But it is definitely the case that anything that's Dynamic can't it

1884
01:27:09,800 --> 01:27:11,600
has a limit to how far it can be pushed.

1885
01:27:17,500 --> 01:27:18,500
Let's see.

1886
01:27:24,200 --> 01:27:25,100
Could you comment?

1887
01:27:25,100 --> 01:27:26,200
What you added at the end?

1888
01:27:26,200 --> 01:27:28,000
So that the uploaded code compiled?

1889
01:27:28,500 --> 01:27:29,800
It does compile, doesn't it?

1890
01:27:30,400 --> 01:27:30,700
Yeah.

1891
01:27:30,800 --> 01:27:32,100
It we're in a compelling state.

1892
01:27:42,000 --> 01:27:43,000
Let's see.

1893
01:27:43,300 --> 01:27:45,900
Alternative for Secrets is just to let people know when you're going

1894
01:27:45,900 --> 01:27:48,100
to be doing the secrets coding but still do it live.

1895
01:27:49,500 --> 01:27:52,300
I don't know because then you have a lot of downtime before release

1896
01:27:52,600 --> 01:27:54,500
other way, might be more exciting and less weight.

1897
01:27:54,800 --> 01:27:55,700
That's hard to say.

1898
01:28:02,000 --> 01:28:06,600
Okay, so, so someone was saying that the create an infinite canvas

1899
01:28:06,600 --> 01:28:09,600
thing, I can just scroll, and then a button pops up.

1900
01:28:11,600 --> 01:28:12,200
Whoa.

1901
01:28:13,900 --> 01:28:15,200
Whoa.

1902
01:28:16,600 --> 01:28:17,700
Oh weird.

1903
01:28:18,900 --> 01:28:20,600
That is bizarre.

1904
01:28:21,900 --> 01:28:23,100
Thank you for that.

1905
01:28:23,300 --> 01:28:27,000
That's I wonder how long I could do that before we just roll over and

1906
01:28:27,000 --> 01:28:27,500
die.

1907
01:28:29,400 --> 01:28:31,000
That's pretty sweet, though.

1908
01:28:32,100 --> 01:28:34,600
Don't you think I like that?

1909
01:28:35,900 --> 01:28:36,600
Oh, yeah.

1910
01:28:37,600 --> 01:28:39,400
All right, we're going to get some use out of that.

1911
01:28:39,400 --> 01:28:40,400
Thank you very much.

1912
01:28:41,300 --> 01:28:43,000
All right, I think we have finished.

1913
01:28:43,000 --> 01:28:44,400
We're out of time for the stream.

1914
01:28:45,300 --> 01:28:45,600
Thank you.

1915
01:28:45,600 --> 01:28:46,600
Everyone for joining me.

1916
01:28:46,600 --> 01:28:51,700
It's been a pleasure coding with you as always here on handmade hero.

1917
01:28:52,700 --> 01:28:56,300
If you would like to get access to the source code, you can pre-order

1918
01:28:56,300 --> 01:28:57,600
the game on handmade here at Oregon.

1919
01:28:57,600 --> 01:28:58,400
It comes with all the source.

1920
01:28:58,400 --> 01:28:59,500
You can download it every night.

1921
01:28:59,500 --> 01:29:03,000
I upload it after we finish every day, and it also has the test assets

1922
01:29:03,000 --> 01:29:03,900
that we use for development.

1923
01:29:03,900 --> 01:29:07,300
So you can actually follow along exactly with what

1924
01:29:07,400 --> 01:29:07,800
You do.

1925
01:29:08,500 --> 01:29:10,800
We also, if you want to just support the video series.

1926
01:29:10,800 --> 01:29:11,800
We have a patreon that's up.

1927
01:29:11,800 --> 01:29:16,700
Now, to, you can subscribe to, and we also have a site that helps with

1928
01:29:16,700 --> 01:29:17,400
learning from the stream.

1929
01:29:17,400 --> 01:29:20,500
It's the news and forms link, forums that have made here at org.

1930
01:29:20,500 --> 01:29:21,600
And it's got a bunch of great stuff on.

1931
01:29:21,600 --> 01:29:22,500
It's got the schedule for the week.

1932
01:29:22,500 --> 01:29:25,800
It's an episode guide that a bunch of people have volunteered to make

1933
01:29:25,800 --> 01:29:26,900
and it's really really cool.

1934
01:29:27,300 --> 01:29:28,500
It's basically got time-coded.

1935
01:29:28,500 --> 01:29:30,500
Links to the videos and all that sort of stuff.

1936
01:29:30,500 --> 01:29:32,900
So if you want to catch up on older videos, it's really good.

1937
01:29:33,500 --> 01:29:36,600
There's also coding resources page that Sports the Linux and Mac that

1938
01:29:36,600 --> 01:29:38,200
people have in the community have contributed.

1939
01:29:38,200 --> 01:29:41,200
If you're looking for that sort of stuff and we have a code discussion

1940
01:29:41,200 --> 01:29:45,600
board that you can go to that's basically place to ask questions and

1941
01:29:45,600 --> 01:29:46,600
talk with other people out stream.

1942
01:29:46,600 --> 01:29:47,100
So it's pretty cool.

1943
01:29:47,100 --> 01:29:48,000
If you try to learn from a stream.

1944
01:29:48,000 --> 01:29:48,700
I highly recommend it.

1945
01:29:48,700 --> 01:29:49,200
It's an excellent resource.

1946
01:29:49,200 --> 01:29:56,000
So we will finish our Collision detection stuff on Monday night.

1947
01:29:56,000 --> 01:29:58,200
When will finish doing the search stuff.

1948
01:29:58,200 --> 01:29:59,800
And so, I think that'll be good and that

1949
01:30:00,000 --> 01:30:02,400
Set us up for success, in terms of knowing exactly what the engine

1950
01:30:02,400 --> 01:30:02,800
needs to do.

1951
01:30:02,800 --> 01:30:05,000
And what kind of figure out where that code wants to live as well,

1952
01:30:05,200 --> 01:30:05,900
which will be interesting.

1953
01:30:06,900 --> 01:30:08,300
So, please join me.

1954
01:30:08,500 --> 01:30:09,200
Monday night.

1955
01:30:09,200 --> 01:30:09,600
8:00 p.m.

1956
01:30:09,600 --> 01:30:13,400
Pacific Standard time, for the next live coding stream.

1957
01:30:13,500 --> 01:30:16,400
I hope to see you all there, and until then.

1958
01:30:16,900 --> 01:30:20,000
Please have a lovely weekend and I'll see you guys online.

1959
01:30:20,000 --> 01:30:20,700
Okay, take it easy.

