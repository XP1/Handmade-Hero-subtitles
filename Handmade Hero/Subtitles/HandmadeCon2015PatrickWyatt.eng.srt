1
00:00:00,200 --> 00:00:03,600
Pat is the person who I have the most notes for and I pretty much

2
00:00:03,600 --> 00:00:03,900
looked at.

3
00:00:03,900 --> 00:00:05,700
I just like, we're never going to get through all this.

4
00:00:05,700 --> 00:00:06,900
So we'll do our best.

5
00:00:06,900 --> 00:00:08,800
But we really do need all of the time.

6
00:00:09,300 --> 00:00:12,400
And so on handmade here, one of the things that I get asked all the

7
00:00:12,400 --> 00:00:16,900
time, like, all the time is about Network programming and people are

8
00:00:16,900 --> 00:00:18,800
like, are we gonna do networking ever going to networking?

9
00:00:18,800 --> 00:00:21,600
And my answer is always no, we're not going to networking because I am

10
00:00:21,600 --> 00:00:23,800
like the last person you should ask about Network programming.

11
00:00:23,800 --> 00:00:27,400
Like I've literally never shift a piece of code in anything that does

12
00:00:27,400 --> 00:00:27,900
networking.

13
00:00:27,900 --> 00:00:29,700
Like my my experience and everything is like in

14
00:00:30,000 --> 00:00:33,400
Colonel tools only and I shudder to think what would have happened to

15
00:00:33,400 --> 00:00:33,900
these tools?

16
00:00:33,900 --> 00:00:36,500
If they had been deployed in the wild, I'm sure they would break like

17
00:00:36,500 --> 00:00:37,200
immediately.

18
00:00:37,800 --> 00:00:42,100
And so what I wanted to do for this session was to sort of get the

19
00:00:42,100 --> 00:00:46,000
person who I thought knew absolutely the most about game networking to

20
00:00:46,000 --> 00:00:49,400
sort of fill that in in, whatever we can do in an hour to sort of

21
00:00:49,400 --> 00:00:54,400
answer those questions where it's like, everyone wants to know more

22
00:00:54,400 --> 00:00:54,900
about this.

23
00:00:54,900 --> 00:00:57,100
So maybe I felt like we could get a perspective on.

24
00:00:57,100 --> 00:00:59,500
So Pat Wyatt is somebody who's

25
00:01:00,100 --> 00:01:03,000
Look, I think I said this on the actual diagram, he is the person I

26
00:01:03,000 --> 00:01:07,200
think of who had the only Network game that like, shipped with like,

27
00:01:07,200 --> 00:01:10,800
no problem somehow, like, it was like, perfect and that was Guild

28
00:01:10,800 --> 00:01:11,100
Wars.

29
00:01:11,100 --> 00:01:14,200
And it was just this, it was this, like, amazing feat of engineering

30
00:01:14,200 --> 00:01:18,400
that it actually had the launch that it did and, and because,

31
00:01:18,400 --> 00:01:20,400
basically everything else at that time were just like, oh yeah, the

32
00:01:20,400 --> 00:01:22,600
day that they launch the game, like World of Warcraft, and the server

33
00:01:22,600 --> 00:01:24,200
immediately goes down or whatever else happened.

34
00:01:24,200 --> 00:01:28,300
And so I was like, he had plenty of experience with it working on

35
00:01:28,300 --> 00:01:29,800
previous titles on Warcraft.

36
00:01:29,900 --> 00:01:33,300
Don Diablo and then when he went to do Guild Wars that was kind of

37
00:01:33,300 --> 00:01:35,200
like the nth generation of his Network coding.

38
00:01:35,200 --> 00:01:38,700
So I was hoping I could sort of get at some of that knowledge and have

39
00:01:38,700 --> 00:01:38,900
him.

40
00:01:38,900 --> 00:01:42,000
Give us an overview of like what does it take to ship these games that

41
00:01:42,000 --> 00:01:44,500
are played by like you know literally millions of people and how do

42
00:01:44,500 --> 00:01:45,700
you go about designing it?

43
00:01:45,800 --> 00:01:47,100
So please give a warm welcome to mr.

44
00:01:47,100 --> 00:01:47,800
Pat Wyatt.

45
00:01:58,100 --> 00:02:01,000
All right, so give people some context here because this was something

46
00:02:01,000 --> 00:02:03,400
that that I was kind of curious about as well.

47
00:02:03,700 --> 00:02:07,500
Like the first Network game you worked on, was it Warcraft?

48
00:02:08,900 --> 00:02:11,100
No, actually, it was there one before the battle chess.

49
00:02:11,500 --> 00:02:12,800
So I poured it down your chest.

50
00:02:12,800 --> 00:02:16,300
From there's a Dawson Amiga version and I did Windows 3.0 version.

51
00:02:17,100 --> 00:02:18,600
I was on modem, of course.

52
00:02:18,700 --> 00:02:19,200
Okay.

53
00:02:19,300 --> 00:02:20,700
So this is a modem version of battle.

54
00:02:20,700 --> 00:02:22,700
Chess was your first experience with network programming, that's

55
00:02:22,700 --> 00:02:23,100
right.

56
00:02:23,100 --> 00:02:23,400
Okay.

57
00:02:23,400 --> 00:02:25,900
So Warcraft was actually like, a second-generation thing.

58
00:02:25,900 --> 00:02:27,700
In some sense, you'd already have some experience and this was

59
00:02:27,900 --> 00:02:31,200
For the internet, for the most part was used in gaming, I believe,

60
00:02:31,200 --> 00:02:32,800
right is very local network only.

61
00:02:33,400 --> 00:02:36,000
So, tell me a little bit about that development process.

62
00:02:36,000 --> 00:02:36,700
Like, what was it?

63
00:02:36,700 --> 00:02:40,300
Like, you know, how did you guys go about doing that, that Network

64
00:02:40,300 --> 00:02:40,800
development?

65
00:02:40,800 --> 00:02:43,100
So because I can't I don't even know like what was involved at that

66
00:02:43,100 --> 00:02:43,500
time.

67
00:02:43,600 --> 00:02:43,900
Yeah.

68
00:02:43,900 --> 00:02:46,400
Well, so because the internet didn't exist, I sort of had to invent

69
00:02:46,400 --> 00:02:48,700
the whole idea of how this would be done whole cloth.

70
00:02:49,100 --> 00:02:52,300
And one of the first, you know, immediately obvious things was we had

71
00:02:52,300 --> 00:02:56,200
about, I think 600 units that were going to be running around in the

72
00:02:56,200 --> 00:02:56,700
game.

73
00:02:57,000 --> 00:02:57,700
And when I saw,

74
00:02:57,800 --> 00:02:59,100
Third working out the math of like.

75
00:02:59,100 --> 00:02:59,900
Well, if every unit

76
00:03:00,000 --> 00:03:02,700
Sending its orders of what it's doing all the time.

77
00:03:02,900 --> 00:03:07,400
There were just going to totally saturate, our 2400 baud, modem 2400

78
00:03:07,400 --> 00:03:07,800
baud modem.

79
00:03:07,800 --> 00:03:08,300
That's right.

80
00:03:08,300 --> 00:03:08,700
Okay.

81
00:03:09,200 --> 00:03:10,600
And so it was immediately obvious.

82
00:03:10,600 --> 00:03:13,700
It was an impractical solution to try and send what each unit was

83
00:03:13,700 --> 00:03:14,100
doing.

84
00:03:14,500 --> 00:03:18,800
And so like, I'm not sure exactly how I came up with it but I figured

85
00:03:18,800 --> 00:03:21,800
out what I would do is instead just send the process user input.

86
00:03:21,800 --> 00:03:25,200
So when the user clicked on a map like then I would send while he

87
00:03:25,200 --> 00:03:28,300
clicked here and you know, had these units selected, go tell those

88
00:03:28,300 --> 00:03:29,800
units to do that and so both.

89
00:03:30,000 --> 00:03:33,900
Both computers would work in lockstep with each other, so that you

90
00:03:33,900 --> 00:03:36,500
only had to send the process input which is very, very tiny.

91
00:03:36,500 --> 00:03:39,400
In fact, you can fit, you know, like 300 baud modem or something.

92
00:03:39,400 --> 00:03:40,200
We do the job.

93
00:03:40,500 --> 00:03:43,200
And so for those synchronous models, right?

94
00:03:43,200 --> 00:03:46,100
Obviously, the latency becomes a bit of an issue potentially?

95
00:03:46,100 --> 00:03:46,400
No.

96
00:03:46,400 --> 00:03:47,900
I mean, like so, so how did you guys?

97
00:03:47,900 --> 00:03:51,600
I mean, work obviously being a real time strategy game isn't the most,

98
00:03:51,600 --> 00:03:54,100
which oriented but it's still real time response.

99
00:03:54,100 --> 00:03:55,800
So how did that play out in the cold?

100
00:03:55,800 --> 00:03:56,900
So actually, it's really interesting.

101
00:03:56,900 --> 00:03:59,800
So RTS is by and large are not very Twitchy because

102
00:04:00,000 --> 00:04:02,500
Happens is you're busy giving so many different orders at the same

103
00:04:02,500 --> 00:04:05,300
time that you don't really need to see the action take effect

104
00:04:05,300 --> 00:04:06,200
instantaneously.

105
00:04:06,400 --> 00:04:08,300
So in the single-player version, there's actually no delay.

106
00:04:08,300 --> 00:04:11,400
You click on unit and immediately it starts executing the action.

107
00:04:11,600 --> 00:04:14,500
But in the multiplayer version we have like a, I mean, it's a tunable

108
00:04:14,500 --> 00:04:16,700
parameter for some of the earlier games, and we just set it to a

109
00:04:16,700 --> 00:04:18,200
hard-coded value in later versions.

110
00:04:18,899 --> 00:04:22,300
But basically you say, you go to this and it's like, yes, my liege.

111
00:04:24,100 --> 00:04:26,300
And then it starts going, right?

112
00:04:26,300 --> 00:04:30,000
And it's because like, what happens is you send the order out and you

113
00:04:30,000 --> 00:04:33,400
have several packets in flight and, you know, everybody's got these

114
00:04:33,400 --> 00:04:34,300
packets and flight all the time.

115
00:04:34,300 --> 00:04:36,300
And so it takes a while for that to get to the other side.

116
00:04:36,300 --> 00:04:39,100
And then you're, you know, you might get the packet early but you

117
00:04:39,100 --> 00:04:42,300
don't start processing that packet until it's time for that packet to

118
00:04:42,300 --> 00:04:42,500
happen.

119
00:04:42,500 --> 00:04:46,400
And so they're sort of like this long queue of like I think 400

120
00:04:46,400 --> 00:04:48,700
milliseconds before your actions need to take effect.

121
00:04:48,700 --> 00:04:52,500
And if it doesn't get there by then then the game will it will still

122
00:04:52,700 --> 00:04:53,700
allow you to to

123
00:04:54,200 --> 00:04:57,600
You know click buttons and do things but really the simulation has

124
00:04:57,600 --> 00:04:58,700
stalled out in the units.

125
00:04:58,700 --> 00:05:00,300
Stop moving internet.

126
00:05:00,300 --> 00:05:02,800
So like, you know, you start getting packets again from all the

127
00:05:02,800 --> 00:05:03,300
players.

128
00:05:03,300 --> 00:05:05,800
So, sort of the architecture of that original Warcraft.

129
00:05:05,800 --> 00:05:09,600
Networking model was something like I have a queue of user input

130
00:05:09,600 --> 00:05:10,300
basically.

131
00:05:10,300 --> 00:05:13,800
And they might just be doing a bunch of stuff and it's getting stacked

132
00:05:13,800 --> 00:05:18,100
up and it really, I start sending it out until I get confirmation back

133
00:05:18,100 --> 00:05:20,200
that the next sort of, like, step has occurred.

134
00:05:20,200 --> 00:05:23,100
I can't actually pull anything, you know, I can't actually consider

135
00:05:23,100 --> 00:05:23,800
one of these

136
00:05:24,400 --> 00:05:26,100
UI options executed.

137
00:05:26,100 --> 00:05:29,700
So I'm just kind of trying to buy time until that happens.

138
00:05:29,700 --> 00:05:30,200
Is that right?

139
00:05:30,200 --> 00:05:32,400
That's where just wait until I get package from every single player in

140
00:05:32,400 --> 00:05:35,400
the game and it's, you know, scales naturally 2228, players and

141
00:05:35,400 --> 00:05:36,600
Warcraft 2.

142
00:05:36,700 --> 00:05:39,700
Yeah, and Starcraft and as soon as you've got everybody's packet, then

143
00:05:39,700 --> 00:05:40,700
you can execute the turn.

144
00:05:40,700 --> 00:05:43,500
Although you generally wait until it's like, you know, enough time has

145
00:05:43,500 --> 00:05:44,100
elapsed.

146
00:05:44,400 --> 00:05:47,600
So I think we're doing like four turns for Network turns per second in

147
00:05:47,600 --> 00:05:48,300
Warcraft one.

148
00:05:48,600 --> 00:05:52,600
So basically what happens is all of the people send sort of

149
00:05:54,000 --> 00:05:56,200
I guess what I'm what I'm what I'm hearing you say there.

150
00:05:56,200 --> 00:05:58,700
Which is not sort of the way I was picturing it when you first set it.

151
00:05:58,700 --> 00:05:59,900
So there's basically

152
00:06:00,000 --> 00:06:03,000
We like fixed slices of time these 400 milliseconds, like you said, it

153
00:06:03,000 --> 00:06:05,600
was a tunable parameter, there's fixed slices of time.

154
00:06:05,800 --> 00:06:09,200
And basically, everyone is going to get to make a move in that time.

155
00:06:09,200 --> 00:06:12,300
And that move, maybe I didn't make a move, but everyone's going to get

156
00:06:12,300 --> 00:06:13,800
to send what their move was.

157
00:06:14,000 --> 00:06:18,200
And if I don't hear from anybody, we just keep running out the clock.

158
00:06:18,200 --> 00:06:21,200
If we don't hear from everybody in that time or that's right, for the

159
00:06:21,200 --> 00:06:22,100
next couple seconds.

160
00:06:22,100 --> 00:06:26,000
Like I'll still take input on your local client side and then after

161
00:06:26,200 --> 00:06:28,700
like if I haven't heard from anybody from, I'm just going to guess

162
00:06:28,700 --> 00:06:29,800
like five seconds then.

163
00:06:30,000 --> 00:06:32,500
I actually gray out the screen so you can't do anything because

164
00:06:32,500 --> 00:06:35,900
clearly we now have a central issue and so people get the idea that oh

165
00:06:35,900 --> 00:06:37,700
I'm not an able to do anything.

166
00:06:38,000 --> 00:06:40,700
So that's pretty interesting that I guess in that sense that's a

167
00:06:40,700 --> 00:06:45,000
pretty clean division of the networking code from everything else to.

168
00:06:45,000 --> 00:06:48,700
It's like it can almost exist in a vacuum because as long as you

169
00:06:48,700 --> 00:06:50,700
really the only thing I guess that you need from the game at that

170
00:06:50,700 --> 00:06:55,000
point is the ability to not, you know, the ability to just not execute

171
00:06:55,000 --> 00:06:56,800
something, but that should be pretty easy.

172
00:06:56,800 --> 00:06:58,600
Because if the user is not doing anything, it doesn't execute

173
00:06:58,600 --> 00:06:59,100
something.

174
00:06:59,100 --> 00:06:59,800
That's right.

175
00:07:00,000 --> 00:07:01,600
Okay, so that's that's actually kind of cool.

176
00:07:01,600 --> 00:07:03,400
So, and I would say like, it would be really nice.

177
00:07:03,400 --> 00:07:03,600
Yes.

178
00:07:03,600 --> 00:07:05,200
It could be so easily isolated and everything.

179
00:07:05,200 --> 00:07:07,800
But if you're doing the code, you go like, where is it?

180
00:07:07,900 --> 00:07:08,400
It's everywhere.

181
00:07:08,400 --> 00:07:09,100
It's spread out.

182
00:07:09,100 --> 00:07:09,500
Oh, really?

183
00:07:09,500 --> 00:07:11,200
Yeah, the first Warcraft was a mess.

184
00:07:11,200 --> 00:07:16,100
Okay, okay, so was that, is that, but that would be something that is

185
00:07:16,100 --> 00:07:17,200
fixable meaning.

186
00:07:17,200 --> 00:07:20,300
The, the integration into it isn't necessary at, just how it happened,

187
00:07:20,300 --> 00:07:21,100
organically occurs.

188
00:07:21,100 --> 00:07:21,600
That's right.

189
00:07:21,700 --> 00:07:23,400
I was ganic is a good word for that, okay?

190
00:07:25,000 --> 00:07:28,200
But you know, it was my first like original development project, so I

191
00:07:28,200 --> 00:07:29,000
had to learn along the way.

192
00:07:29,000 --> 00:07:29,400
Yeah.

193
00:07:30,300 --> 00:07:30,600
Okay.

194
00:07:30,600 --> 00:07:31,800
So moving forward.

195
00:07:31,800 --> 00:07:35,800
I guess then for like Warcraft 2, for example, same sort of thing.

196
00:07:36,400 --> 00:07:38,500
Yeah, like really not a whole lot had to change.

197
00:07:39,200 --> 00:07:41,100
You know, there are a lot of data structures that just assume two

198
00:07:41,100 --> 00:07:45,100
players and so they're just be Boolean values for them and then it's

199
00:07:45,100 --> 00:07:46,100
like well we're going to date players.

200
00:07:46,100 --> 00:07:49,000
Now what we can pack eight players into one bite because just one bit

201
00:07:49,000 --> 00:07:51,000
flag for each entry.

202
00:07:51,500 --> 00:07:55,400
And so it was really more, a failure of vision that Warcraft to

203
00:07:55,600 --> 00:07:56,000
Warcraft.

204
00:07:56,000 --> 00:07:57,400
One didn't have more players in it.

205
00:07:57,400 --> 00:07:58,900
It's like, okay, do two players.

206
00:07:58,900 --> 00:07:59,800
Oh my gosh, that's a lot.

207
00:08:00,000 --> 00:08:02,900
You know, we could have done more but we're thinking about modem clay,

208
00:08:03,000 --> 00:08:05,700
I say I see and then by that time into kind of gotten a little bit

209
00:08:05,700 --> 00:08:08,300
better in terms of what it could support.

210
00:08:08,300 --> 00:08:10,700
And how many people I guess with Warcraft?

211
00:08:10,700 --> 00:08:14,000
You learn what people might want to do, which is play a player games

212
00:08:14,000 --> 00:08:14,800
or other things like this.

213
00:08:14,900 --> 00:08:15,600
That's right.

214
00:08:15,800 --> 00:08:20,600
Okay, so from there, the next title is sort of drastically different.

215
00:08:20,600 --> 00:08:21,800
I guess is my understanding.

216
00:08:21,800 --> 00:08:25,100
So you then did the networking layer for Diablo which is you did the

217
00:08:25,100 --> 00:08:27,400
part where it's the actual in-game networking layer, right?

218
00:08:27,400 --> 00:08:29,800
I guess someone else was friends with a Battlenet back.

219
00:08:29,900 --> 00:08:31,400
Back and sort of system.

220
00:08:31,400 --> 00:08:32,000
That's right.

221
00:08:32,200 --> 00:08:34,400
So Diablo is not synchronous in this way.

222
00:08:34,400 --> 00:08:35,299
Is that correct, right?

223
00:08:35,299 --> 00:08:38,600
So Diablo is actually developed by another company that was acquired

224
00:08:38,600 --> 00:08:39,100
by Blizzard.

225
00:08:39,100 --> 00:08:43,100
Entertainment was a bunch of guys, Condor and they had this great idea

226
00:08:43,100 --> 00:08:44,400
like Diablo is their idea.

227
00:08:44,500 --> 00:08:46,600
And when we heard about it, we're like, this is awesome.

228
00:08:46,600 --> 00:08:49,600
We need to be doing this game with them, but they were making a single

229
00:08:49,600 --> 00:08:52,400
player, Single Character game and we convinced them that they should

230
00:08:52,400 --> 00:08:53,100
do multiplayer.

231
00:08:53,100 --> 00:08:55,600
Oh, and eventually, when we come in to do the multiplayer, they're

232
00:08:55,600 --> 00:08:57,200
like we want it to be turn-based multiplayer.

233
00:08:57,500 --> 00:08:58,000
No, no.

234
00:08:58,000 --> 00:08:59,300
It's got to be real time, okay?

235
00:09:00,000 --> 00:09:04,200
So we, you know, when we convinced him to do that, it's like, okay, so

236
00:09:04,300 --> 00:09:05,000
go do that.

237
00:09:05,200 --> 00:09:08,000
And then like they really needed some help to get it done.

238
00:09:08,000 --> 00:09:10,700
And so, I actually flew up there with a plan to go and figure out how

239
00:09:10,700 --> 00:09:11,100
to help them.

240
00:09:11,100 --> 00:09:14,700
It was going to be a synchronous Network model like similar to

241
00:09:14,700 --> 00:09:15,200
Warcraft.

242
00:09:15,200 --> 00:09:15,400
Yeah.

243
00:09:15,400 --> 00:09:15,800
Exactly.

244
00:09:15,800 --> 00:09:18,200
Because I'd only done that and it would prevent cheating.

245
00:09:19,300 --> 00:09:20,400
And, you know, I look at the code.

246
00:09:20,400 --> 00:09:22,800
It's like, you know, it's going to be really hard to back in a

247
00:09:22,800 --> 00:09:24,800
synchronous system into a game.

248
00:09:24,800 --> 00:09:25,800
That's already been written.

249
00:09:25,800 --> 00:09:29,300
And like, doesn't really have like the data constructs where it's

250
00:09:29,700 --> 00:09:29,800
thing.

251
00:09:30,000 --> 00:09:32,500
About like, let's keep the server stuff over here, you know, like the

252
00:09:32,500 --> 00:09:34,900
simulation stuff over here and the game stuff over here is all just

253
00:09:34,900 --> 00:09:38,400
intermixed and this is, what did you see out the window and wrote a

254
00:09:38,400 --> 00:09:39,300
different network model.

255
00:09:39,300 --> 00:09:43,700
So when you say that you kind of mean that my representation for a

256
00:09:43,700 --> 00:09:46,700
particular object in the world in something like Warcraft is a little

257
00:09:46,700 --> 00:09:49,800
more split in terms of like explain a little bit more.

258
00:09:49,800 --> 00:09:52,100
What you mean by, you looked at the code and found something you

259
00:09:52,100 --> 00:09:54,300
didn't expect in terms of that welding.

260
00:09:54,400 --> 00:09:54,900
Sure.

261
00:09:54,900 --> 00:09:57,800
So if you're doing a network simulation, you want to ideally have all

262
00:09:57,800 --> 00:09:59,800
your network data structure separate because they're going to get mud.

263
00:10:00,000 --> 00:10:03,800
I'd only when packets show up that should be affecting that data and

264
00:10:03,800 --> 00:10:05,000
your simulation data.

265
00:10:05,100 --> 00:10:08,200
I mean, I'm sorry your user interface data is probably going to be

266
00:10:08,200 --> 00:10:11,500
separate because like you know, I'm tweaking things.

267
00:10:11,500 --> 00:10:15,000
I have a status bar updates for these units, there's lots of stuff

268
00:10:15,000 --> 00:10:18,700
that the network code and the client code are going to have that are

269
00:10:18,700 --> 00:10:21,600
different because of the time that that changes, right?

270
00:10:21,600 --> 00:10:24,700
The simulation can only change one packet show up and the client did a

271
00:10:24,700 --> 00:10:27,600
contingent Centennial soon as I click the mouse and a keyboard and

272
00:10:27,600 --> 00:10:28,000
things.

273
00:10:28,200 --> 00:10:29,800
And so in something like Warcraft,

274
00:10:29,900 --> 00:10:31,800
To where you'd already had some experience with it.

275
00:10:31,800 --> 00:10:34,500
You guys had sort of gotten to the point where you were already

276
00:10:34,600 --> 00:10:38,800
dividing the codebase up into this way, I guess it's sort of thing,

277
00:10:38,800 --> 00:10:41,500
but when you went to their code base that's you know it was all still

278
00:10:41,500 --> 00:10:42,500
kind of intermixed.

279
00:10:42,500 --> 00:10:42,700
Yeah.

280
00:10:42,700 --> 00:10:46,000
Also the other factor is when you're doing synchronous lockstep games,

281
00:10:46,000 --> 00:10:49,800
the problem is you cannot have any coding errors because if you if

282
00:10:49,800 --> 00:10:52,600
you've played one game already and you've initialized your some of

283
00:10:52,600 --> 00:10:54,700
your internal State variables slightly differently than mine.

284
00:10:54,700 --> 00:10:58,100
I'm playing my first game then, you know, you do a command and it

285
00:10:58,100 --> 00:10:59,800
doesn't behave exactly the same on your system as

286
00:11:00,000 --> 00:11:03,900
On my system and the games desynchronize and we always disconnect

287
00:11:03,900 --> 00:11:05,200
because we don't know what else to do.

288
00:11:05,300 --> 00:11:08,400
So basically there's a Divergence there because of some state that was

289
00:11:08,400 --> 00:11:10,000
not cleanly initialized, that's right.

290
00:11:10,000 --> 00:11:12,500
And so you have to exceptionally careful and it's just ridiculous how

291
00:11:12,500 --> 00:11:13,100
hard this is.

292
00:11:13,100 --> 00:11:13,300
Right.

293
00:11:13,300 --> 00:11:17,400
Like you know accidental pointer use of after the point has been freed

294
00:11:17,400 --> 00:11:20,900
or uninitialized variables or you know, static variables that don't

295
00:11:20,900 --> 00:11:22,200
get reinitialized, right?

296
00:11:22,200 --> 00:11:25,700
Lots of things can really impact this and so it takes a long time to

297
00:11:25,700 --> 00:11:29,500
find these bugs to, and, like, Diablo was written in haste, and it

298
00:11:29,500 --> 00:11:29,800
just

299
00:11:29,900 --> 00:11:33,800
We have the same level of like carefulness with with respect to

300
00:11:33,800 --> 00:11:36,700
variables and so there was just no way to do a synchronous lockstep

301
00:11:36,700 --> 00:11:37,400
game with that.

302
00:11:37,400 --> 00:11:39,400
And so, what was your approach then?

303
00:11:39,400 --> 00:11:41,900
So you decide to change things up, you're like, we're gonna have to do

304
00:11:41,900 --> 00:11:42,800
something different.

305
00:11:43,000 --> 00:11:44,100
What was that thought process?

306
00:11:44,100 --> 00:11:44,300
Like?

307
00:11:44,300 --> 00:11:46,400
Because you said, you came up with their other plan and now the plan

308
00:11:46,400 --> 00:11:47,300
is gone, right?

309
00:11:47,300 --> 00:11:47,600
Right.

310
00:11:47,600 --> 00:11:50,500
So I came up with a plan in like a day and it's what I call like

311
00:11:50,600 --> 00:11:52,200
asynchronous Loosely coupled game.

312
00:11:52,300 --> 00:11:55,500
Okay, so we're all playing sort of the same game but not exactly.

313
00:11:55,500 --> 00:11:55,700
Okay.

314
00:11:55,700 --> 00:11:58,800
So you happen to be the first person to get onto like level one of the

315
00:11:58,800 --> 00:11:59,800
game and so you're not

316
00:12:00,000 --> 00:12:03,100
Master for that level and when I come to the game, come down to that

317
00:12:03,100 --> 00:12:03,700
level of the game.

318
00:12:03,700 --> 00:12:08,800
So for people haven't played Diablo like you to 16 level dungeon and

319
00:12:08,800 --> 00:12:10,700
you know, there's a master for each level.

320
00:12:10,800 --> 00:12:11,300
Okay?

321
00:12:11,300 --> 00:12:14,800
So I get in the master is whoever happens to load up that level first

322
00:12:15,000 --> 00:12:15,500
some way.

323
00:12:15,500 --> 00:12:16,900
How do we know that because it's Network?

324
00:12:16,900 --> 00:12:18,300
So, I don't know who loaded first.

325
00:12:18,400 --> 00:12:20,600
Well, like, you created the game, okay?

326
00:12:20,600 --> 00:12:22,500
And then I join into your game, okay?

327
00:12:22,600 --> 00:12:26,100
And so, like, you have the authority to like, you know, you're the

328
00:12:26,100 --> 00:12:28,400
first person on like level 0, the town level, okay?

329
00:12:28,400 --> 00:12:29,700
And then you go down to level one.

330
00:12:30,000 --> 00:12:30,100
No.

331
00:12:30,100 --> 00:12:33,400
And then when I join your game you see that I go down to level 2 first

332
00:12:33,400 --> 00:12:36,000
and so you're like okay you're the master for level 2 and as long as

333
00:12:36,000 --> 00:12:37,200
I'm in the game, I'm the master.

334
00:12:37,200 --> 00:12:41,400
I was a Dropout then, there'd be no master or argument you can say

335
00:12:41,400 --> 00:12:44,100
like, you know, any of them could pick up the master position.

336
00:12:44,200 --> 00:12:46,700
So let's just drill down that for one second.

337
00:12:47,000 --> 00:12:51,000
So that's sounds like sort of a consensus problem across these

338
00:12:51,000 --> 00:12:51,600
clients, though.

339
00:12:51,600 --> 00:12:55,200
Because like, when I say, I see that you drop down to level of to

340
00:12:55,200 --> 00:12:58,300
First, how do I know like how do I know that?

341
00:12:58,300 --> 00:12:59,800
I've seen that, at the

342
00:12:59,900 --> 00:13:02,600
Time or how does another client know, like, is there some kind of

343
00:13:02,600 --> 00:13:05,100
centralized like the person who owned level 0 is the person who

344
00:13:05,100 --> 00:13:06,900
decides who owns level 1 or how does that?

345
00:13:06,900 --> 00:13:10,100
Like because I mean in networking, things can come in at any time and

346
00:13:10,100 --> 00:13:12,600
you never really know who said what Wet Brush.

347
00:13:12,600 --> 00:13:12,800
Right?

348
00:13:12,800 --> 00:13:15,700
So the, like the person who created the game is, sort of like the

349
00:13:15,700 --> 00:13:17,800
Arbiter of who is the level Master for each lot.

350
00:13:17,800 --> 00:13:18,100
Okay.

351
00:13:18,100 --> 00:13:20,800
And then if that player drops out, then the next player who came into

352
00:13:20,800 --> 00:13:23,400
the game was, you know, and like they just increasing sequence.

353
00:13:23,400 --> 00:13:24,500
I see numbers.

354
00:13:24,500 --> 00:13:28,600
Okay, so basically the person who started the game, they are the

355
00:13:28,600 --> 00:13:29,300
master and

356
00:13:29,900 --> 00:13:30,900
They will be periodically.

357
00:13:30,900 --> 00:13:34,200
Sending out a list of who's in the game, in your order in that, where

358
00:13:34,200 --> 00:13:37,400
they are first and the next person, second third is like the order

359
00:13:37,400 --> 00:13:39,100
will go through to keep trying to play this game.

360
00:13:39,100 --> 00:13:40,600
If something bad happens kind of a thing.

361
00:13:40,800 --> 00:13:41,400
That's right.

362
00:13:41,500 --> 00:13:44,300
Okay, so you are the master of the game, I go to level 2 and your and

363
00:13:44,300 --> 00:13:46,900
you tell me, okay, your level Master for to until a great.

364
00:13:46,900 --> 00:13:49,100
I get to initialize everything myself and tell people what's going on

365
00:13:49,100 --> 00:13:49,600
on that level.

366
00:13:49,600 --> 00:13:50,000
I see.

367
00:13:50,200 --> 00:13:54,400
And then after that point, so now I've taken over ownership of level 2

368
00:13:54,400 --> 00:13:56,500
and I'm like, you know, I'm picking up things and dropping them and

369
00:13:56,500 --> 00:13:57,500
I'm telling all the other players.

370
00:13:57,500 --> 00:13:59,000
Yeah, I picked up this item, drop this item.

371
00:13:59,200 --> 00:13:59,800
So if I drop

372
00:14:00,000 --> 00:14:00,700
The game.

373
00:14:01,000 --> 00:14:03,500
And then we need a new level to master than somebody else.

374
00:14:03,500 --> 00:14:06,200
Can pick it up and I can sort of apply all the knowledge of what

375
00:14:06,200 --> 00:14:06,600
happened there.

376
00:14:06,600 --> 00:14:09,800
Previously, like there's dead monsters here and this this Treasurer

377
00:14:09,800 --> 00:14:13,500
and has been, this Treasure Chest has been broken open, then they can

378
00:14:13,500 --> 00:14:17,200
reapply all those rules so that the world seems consistent, I see it.

379
00:14:17,200 --> 00:14:18,900
So they kind of keep a buffer of.

380
00:14:18,900 --> 00:14:21,800
Here's all the stuff I've been told about level 2, even though I

381
00:14:21,800 --> 00:14:24,500
myself am not actually keeping a representation of level to you.

382
00:14:24,800 --> 00:14:25,300
That's right.

383
00:14:25,400 --> 00:14:28,700
So at that time, if we do need to do like basically a failover or

384
00:14:28,700 --> 00:14:29,800
something like this or if

385
00:14:29,900 --> 00:14:32,600
I come on to level 2, I guess would be another case where I just am

386
00:14:32,600 --> 00:14:33,700
starting to look at level 2.

387
00:14:34,000 --> 00:14:36,400
I'm going to go in and take this buffer that I've been recording of

388
00:14:36,400 --> 00:14:37,800
everything that I've been told about level 2.

389
00:14:37,800 --> 00:14:40,700
And I'm going to replay it that's in order to get my level 2 to that

390
00:14:40,700 --> 00:14:41,200
state.

391
00:14:41,200 --> 00:14:41,900
That's right.

392
00:14:41,900 --> 00:14:44,800
And there are lists may not match up exactly because of, you know,

393
00:14:45,400 --> 00:14:46,500
hacking or things like that.

394
00:14:46,600 --> 00:14:49,900
And so it's that's why I call it Loosely coupled because we're really

395
00:14:49,900 --> 00:14:52,700
playing two games that are nearly identical, but it's obviously very,

396
00:14:52,700 --> 00:14:53,500
very cheap table.

397
00:14:53,700 --> 00:14:57,500
And so what happens now, as the game is being played, two of us are

398
00:14:57,500 --> 00:14:59,600
both on the same level and we're doing stuff.

399
00:15:00,000 --> 00:15:00,700
What is that?

400
00:15:00,800 --> 00:15:01,100
What is that?

401
00:15:01,100 --> 00:15:01,800
Networking process?

402
00:15:01,800 --> 00:15:04,800
Like one person is the master for the level and then we have n number

403
00:15:04,800 --> 00:15:07,600
of other people who are sort of getting you know information about it.

404
00:15:07,600 --> 00:15:09,000
But what does that actually look like?

405
00:15:09,400 --> 00:15:09,700
Yeah.

406
00:15:09,700 --> 00:15:13,500
So we're all broadcasting messages to all the other players saying you

407
00:15:13,500 --> 00:15:14,500
know, this is what happened.

408
00:15:15,500 --> 00:15:19,500
So like I pick up, you know, sword and I start, you know, I tell all

409
00:15:19,500 --> 00:15:21,000
the other players have that sort of now gone.

410
00:15:21,000 --> 00:15:22,900
And so you can have a race condition for that.

411
00:15:23,000 --> 00:15:23,200
Yeah.

412
00:15:23,200 --> 00:15:26,900
And we just sort of arbitrate it like you know the level Master gets

413
00:15:26,900 --> 00:15:29,600
to make the determination of who actually got that.

414
00:15:29,600 --> 00:15:29,800
So

415
00:15:30,000 --> 00:15:32,800
Basically, two people, you know, in their separate, copies of this

416
00:15:32,800 --> 00:15:35,200
game, they both go to pick up the sword, right?

417
00:15:35,200 --> 00:15:37,400
And they both think that they've picked up the sword, so they send out

418
00:15:37,400 --> 00:15:38,000
the packet.

419
00:15:38,000 --> 00:15:39,000
I picked up the sword.

420
00:15:39,100 --> 00:15:41,100
Well, more like I am attempting to pick up the sword.

421
00:15:41,200 --> 00:15:43,800
Okay, so there's actually a like a two-stage process.

422
00:15:43,800 --> 00:15:46,300
I'm attempting to pick up the sword to packets come in.

423
00:15:46,600 --> 00:15:48,800
You know, we can't really tell who maybe was doing it first or

424
00:15:48,800 --> 00:15:49,100
whatever.

425
00:15:49,100 --> 00:15:51,600
So, the level Master goes, I see two people trying to pick up the

426
00:15:51,600 --> 00:15:53,100
sword and I decided to break this tie.

427
00:15:53,100 --> 00:15:54,600
However, I decided to break it.

428
00:15:54,800 --> 00:15:56,600
Any particular Nuance of that?

429
00:15:56,600 --> 00:15:58,100
Or it's like there's really no, it's pretty straightforward.

430
00:15:58,100 --> 00:15:59,100
It's whoever got it first.

431
00:15:59,100 --> 00:15:59,800
And of course, if you can

432
00:16:00,000 --> 00:16:02,600
Master you're always going to be faster because it's not.

433
00:16:05,400 --> 00:16:10,300
Okay and so that and that is that roughly the way that most things in

434
00:16:10,300 --> 00:16:11,000
the game works.

435
00:16:11,000 --> 00:16:14,600
So if I try to attack somebody, is it a similar two-stage process?

436
00:16:14,700 --> 00:16:17,600
I'm trying to attack this person and then the level Master

437
00:16:17,600 --> 00:16:20,700
acknowledges it and only once you've knowledge is it, do I actually

438
00:16:20,700 --> 00:16:21,900
see the attacker?

439
00:16:22,000 --> 00:16:24,000
Or is it more asynchronous than that, in that?

440
00:16:24,000 --> 00:16:26,800
I see the attack occurred, either way, but maybe the damage goes back

441
00:16:26,800 --> 00:16:27,200
up later.

442
00:16:27,200 --> 00:16:29,000
If it turns out, it didn't acknowledge, like, you know what I'm

443
00:16:29,000 --> 00:16:29,200
saying?

444
00:16:29,200 --> 00:16:29,800
Like, in terms of like,

445
00:16:29,900 --> 00:16:32,600
Like, how does that work out when when we're actually doing other

446
00:16:32,600 --> 00:16:35,500
sorts of things besides something as discreet as picking up the sword,

447
00:16:35,500 --> 00:16:35,800
right?

448
00:16:35,800 --> 00:16:37,000
So it's really loose.

449
00:16:37,000 --> 00:16:40,600
So like you go and attack a monster on your system and you kill him

450
00:16:40,600 --> 00:16:42,100
and you decide that he's dead.

451
00:16:42,400 --> 00:16:44,400
And then you let me know that he's dead, okay?

452
00:16:44,400 --> 00:16:45,700
I'm the level master and I go.

453
00:16:46,000 --> 00:16:46,700
Okay, great.

454
00:16:46,800 --> 00:16:47,200
Okay.

455
00:16:47,600 --> 00:16:51,400
Yeah so I mean it's really possible to cheat very easily right now you

456
00:16:51,400 --> 00:16:55,900
can just kill anything as fast as you want and that isn't really.

457
00:16:55,900 --> 00:16:58,600
But I mean, ignoring the cheating part of it, in terms of actually

458
00:16:58,600 --> 00:16:59,800
keeping the stuff working.

459
00:17:00,000 --> 00:17:03,500
The actual game, it's not really necessary to do anything beyond that.

460
00:17:03,500 --> 00:17:05,900
Meaning, if a bunch of people who are all trying to play the game,

461
00:17:05,900 --> 00:17:08,700
legitimately not hacking it, not trying to do anything weird.

462
00:17:08,900 --> 00:17:12,500
Then Simply Having the clients announce when they did something.

463
00:17:12,700 --> 00:17:15,200
And if two people say that they killed, the monster doesn't matter

464
00:17:15,200 --> 00:17:17,599
because like the state just goes to Dead.

465
00:17:17,599 --> 00:17:20,599
And so it's fine that country where the only area of contention is in

466
00:17:20,599 --> 00:17:22,400
picking up things off the ground, okay?

467
00:17:22,500 --> 00:17:26,000
Or like breaking open a chest like you know, even that doesn't because

468
00:17:26,400 --> 00:17:27,500
chest is broken open.

469
00:17:27,500 --> 00:17:29,800
Both players might have done it at the same time but it

470
00:17:29,900 --> 00:17:32,300
it leads to like things popping out on the ground that you can pick up

471
00:17:32,300 --> 00:17:33,600
that are the areas that you fight over.

472
00:17:33,600 --> 00:17:36,900
So the only because and is that because things like damage are just

473
00:17:36,900 --> 00:17:37,900
numbers that go down.

474
00:17:37,900 --> 00:17:40,600
So if I get to people who say they did damage, I just apply them both

475
00:17:40,600 --> 00:17:42,100
or like, like what's the is that?

476
00:17:42,100 --> 00:17:44,900
Just because picking up is the one thing where it's like there was

477
00:17:44,900 --> 00:17:47,600
only one item and we need to know who had it kind of a thing.

478
00:17:47,700 --> 00:17:48,200
Exactly.

479
00:17:48,500 --> 00:17:48,900
Okay.

480
00:17:49,400 --> 00:17:49,600
All right.

481
00:17:49,600 --> 00:17:50,400
So I think that's pretty good.

482
00:17:50,400 --> 00:17:53,900
Fundamentals of trying to think if I missed anything of the sort of

483
00:17:54,000 --> 00:17:59,000
you miss one thing, don't do a game like this, okay?

484
00:17:59,000 --> 00:17:59,800
Why not?

485
00:18:00,200 --> 00:18:01,400
Because people will cheat.

486
00:18:01,800 --> 00:18:04,100
And in fact, the thing that happened was, you know, Diablo came out

487
00:18:04,100 --> 00:18:05,500
and people really love the game.

488
00:18:05,500 --> 00:18:07,700
And a lot of clear players had fun is particularly when they played

489
00:18:07,700 --> 00:18:10,100
with their own friends, but as soon as you played out there in the

490
00:18:10,100 --> 00:18:14,600
larger universe, there are just lots of people who were griefing and

491
00:18:14,600 --> 00:18:17,300
in fact, you know, it was really startling to me because, you know,

492
00:18:17,300 --> 00:18:19,900
I'd played muds before and things like that and occasionally there's

493
00:18:19,900 --> 00:18:20,200
Griffin.

494
00:18:20,200 --> 00:18:22,700
But usually you had like a GM's, it would oversee things like

495
00:18:22,700 --> 00:18:25,500
volunteer GM's, it's sort of like make sure that people weren't

496
00:18:25,500 --> 00:18:26,700
complete asshole, right?

497
00:18:27,100 --> 00:18:29,900
But so, like a couple days after we shipped Diablo, like there's

498
00:18:30,000 --> 00:18:33,500
As a friend of the company who came in and he was playing in an office

499
00:18:33,500 --> 00:18:37,100
adjacent, me I got him Yash and he's just like, going Dungeons and

500
00:18:37,100 --> 00:18:39,900
he's killing people because he's a much higher level than them.

501
00:18:40,000 --> 00:18:41,400
There's nothing that they could do about it.

502
00:18:41,400 --> 00:18:44,300
And like, so, you know, all their armor and swords and everything pop

503
00:18:44,300 --> 00:18:45,000
off on the ground.

504
00:18:45,000 --> 00:18:47,900
And then they get real reincarnated in town and they come down and

505
00:18:47,900 --> 00:18:49,400
dungeon naked and try and recover the stuff.

506
00:18:49,400 --> 00:18:53,000
He kills again and again, in this was at your own company, taunts

507
00:18:53,000 --> 00:18:53,100
them.

508
00:18:53,100 --> 00:18:55,000
Well, he was actually just a friend of somebody work.

509
00:18:55,000 --> 00:18:55,800
Okay, just a friend.

510
00:18:55,800 --> 00:18:56,100
Okay.

511
00:18:56,100 --> 00:18:57,900
And I was like, I watched him, you know?

512
00:18:57,900 --> 00:18:59,800
And I realized that this was a microcosm of stuff.

513
00:19:00,000 --> 00:19:00,900
Going to happen, right?

514
00:19:00,900 --> 00:19:03,500
So like I didn't see all the features a like you shouldn't do this or

515
00:19:03,500 --> 00:19:03,900
anything like that.

516
00:19:03,900 --> 00:19:06,400
Instead of like let me understand this and that's really my first

517
00:19:06,400 --> 00:19:07,800
serious experience with Griefers.

518
00:19:08,400 --> 00:19:12,000
And I mean, it was shocking at that time and now, like every game I've

519
00:19:12,000 --> 00:19:14,300
ever designed since, you know, I have to think about like, how are

520
00:19:14,300 --> 00:19:16,900
people going to hack this and how are people going to, you know,

521
00:19:16,900 --> 00:19:19,700
especially abuse others which is in some ways even worse than hacking.

522
00:19:19,700 --> 00:19:24,400
Yeah well okay so that's actually kind of fascinating so moving

523
00:19:24,400 --> 00:19:27,200
forward I guess the next one you did was Guild Wars.

524
00:19:27,200 --> 00:19:29,400
Yes source of tin in goers.

525
00:19:29,400 --> 00:19:29,800
Okay so you

526
00:19:29,900 --> 00:19:31,200
The network on Starcraft as well.

527
00:19:31,300 --> 00:19:31,900
Yeah, it was.

528
00:19:31,900 --> 00:19:32,800
A lot of the same stuff.

529
00:19:32,800 --> 00:19:34,200
Was that asynchronous?

530
00:19:34,200 --> 00:19:35,000
Or is that synchronous.

531
00:19:35,000 --> 00:19:35,800
Was that more like?

532
00:19:35,800 --> 00:19:37,100
The warcraft - like Warcraft.

533
00:19:37,100 --> 00:19:37,200
Okay.

534
00:19:37,200 --> 00:19:38,000
Just like Warcraft it.

535
00:19:38,200 --> 00:19:38,500
Okay.

536
00:19:38,500 --> 00:19:43,900
So after Starcraft, you go to start Guild Wars and I remember Guild

537
00:19:43,900 --> 00:19:46,200
Wars was particularly impressive to me because like, I remember like

538
00:19:46,200 --> 00:19:50,400
the download to download Guild Wars was like this little tiny thing.

539
00:19:50,500 --> 00:19:53,000
Right there was some kind of like little tiny executable and it just

540
00:19:53,000 --> 00:19:55,300
like took care of everything from there and all this sort of sorts of

541
00:19:55,300 --> 00:19:55,700
stuff.

542
00:19:55,800 --> 00:19:57,700
That's pretty was a 200k executor K.

543
00:19:57,700 --> 00:19:59,800
And so the challenge was it was so small that people

544
00:20:00,000 --> 00:20:01,600
Click on it and download and it would go so fast.

545
00:20:01,600 --> 00:20:03,200
It'd be like, did that work?

546
00:20:04,700 --> 00:20:06,500
So I think we should make it bigger.

547
00:20:07,400 --> 00:20:10,400
We had a padded out just to make sure they can see the progress bar.

548
00:20:10,400 --> 00:20:11,000
It's right.

549
00:20:12,000 --> 00:20:16,300
So Guild Wars is in some ways a lot more ambitious than Diablo.

550
00:20:16,300 --> 00:20:20,700
Because this now is sort of designed up front to have a lot of the

551
00:20:20,700 --> 00:20:24,600
permanence may be backed up by where authenticated sorts of things.

552
00:20:24,600 --> 00:20:27,900
I guess this comes out of your experience with the griefing on Diablo.

553
00:20:27,900 --> 00:20:29,800
I guess is that without fear and also

554
00:20:29,900 --> 00:20:31,600
the desire to have an online economy.

555
00:20:31,600 --> 00:20:32,000
Okay.

556
00:20:32,000 --> 00:20:37,700
Okay, so this one, I guess I got kind of a list of things to drill

557
00:20:37,700 --> 00:20:38,100
down in here.

558
00:20:38,100 --> 00:20:41,300
But before I may be asked any of those questions?

559
00:20:41,600 --> 00:20:43,000
Can you give me B people?

560
00:20:43,000 --> 00:20:48,100
A brief understanding of what was involved in making Guild Wars happen

561
00:20:48,100 --> 00:20:49,600
because it's both.

562
00:20:49,700 --> 00:20:52,200
It's got about the persistence day and it's got a peer-to-peer thing

563
00:20:52,200 --> 00:20:52,600
happening.

564
00:20:52,600 --> 00:20:53,500
And those things interact.

565
00:20:53,500 --> 00:20:55,800
And there's just, I remember you sent me an email where you're like,

566
00:20:55,800 --> 00:20:59,300
here's all the servers we wrote for Guild Wars and there was like 12

567
00:20:59,300 --> 00:20:59,800
or something.

568
00:21:00,000 --> 00:21:00,400
List.

569
00:21:00,500 --> 00:21:05,000
So can you just give a brief just high-level explanation of what was

570
00:21:05,000 --> 00:21:05,600
involved in?

571
00:21:05,600 --> 00:21:08,500
Just, just the basic architecture of this shirt.

572
00:21:08,600 --> 00:21:10,500
So first, it was not a peer-to-peer game at all.

573
00:21:10,500 --> 00:21:11,800
It was a client-server only.

574
00:21:12,200 --> 00:21:16,700
So, so even when people are playing inside their own, when they would

575
00:21:16,700 --> 00:21:18,900
kind of Spawn off the dungeon, that was still always round trip

576
00:21:18,900 --> 00:21:20,000
through a separate server.

577
00:21:20,000 --> 00:21:20,500
That's right.

578
00:21:20,500 --> 00:21:20,700
Okay.

579
00:21:20,700 --> 00:21:21,000
Sorry.

580
00:21:21,000 --> 00:21:22,000
Fully server hosted.

581
00:21:22,400 --> 00:21:24,700
So the very first thing you do is you connect to the server and say

582
00:21:24,700 --> 00:21:24,900
hi.

583
00:21:24,900 --> 00:21:27,600
I'm Gilbert version zero because you've got this 200k stuff and it's

584
00:21:27,600 --> 00:21:29,100
like oh you need version 53.

585
00:21:29,100 --> 00:21:29,800
Here you go.

586
00:21:30,000 --> 00:21:33,000
Download you reboot the game engine.

587
00:21:33,600 --> 00:21:35,300
Hey, I'm version 53, which one to get?

588
00:21:35,300 --> 00:21:36,700
Okay, great, you're up to date.

589
00:21:36,900 --> 00:21:39,000
Here's the manifests, for every single piece of data in the whole

590
00:21:39,000 --> 00:21:39,600
world.

591
00:21:39,600 --> 00:21:40,000
Okay?

592
00:21:40,800 --> 00:21:42,900
You know, and you download that file and then you say, well, I want to

593
00:21:42,900 --> 00:21:43,700
go to login screen.

594
00:21:43,700 --> 00:21:44,400
Give me all the files.

595
00:21:44,400 --> 00:21:47,200
I need for that and you download those and you know, progressively you

596
00:21:47,200 --> 00:21:48,800
start accumulating all the files you need.

597
00:21:49,100 --> 00:21:51,900
So that you never actually have to download the entire roughly at that

598
00:21:51,900 --> 00:21:52,100
point.

599
00:21:52,100 --> 00:21:55,200
3 gigabytes of data you could just download the the tiny portion that

600
00:21:55,200 --> 00:21:55,800
you need.

601
00:21:56,600 --> 00:21:59,100
This was actually sort of like an on demand package manager.

602
00:21:59,100 --> 00:21:59,800
You basically had it.

603
00:22:00,700 --> 00:22:03,800
We have a dependency system, we know everything in the world and what

604
00:22:03,800 --> 00:22:04,500
it depends on.

605
00:22:04,500 --> 00:22:07,900
So when the game starts up, it just kind of asks for some kind of like

606
00:22:07,900 --> 00:22:09,300
a root object for was trying to do.

607
00:22:09,300 --> 00:22:12,300
Like I'm trying to go into this dungeon so I need you know I asked for

608
00:22:12,300 --> 00:22:14,600
that and then it starts pulling in things we're like okay.

609
00:22:14,700 --> 00:22:16,700
Now I'm going to ask for this and that pulls in more things.

610
00:22:16,800 --> 00:22:20,100
These get downloaded into sort of a cash on the drive.

611
00:22:20,100 --> 00:22:21,000
That's right, okay?

612
00:22:21,300 --> 00:22:25,300
And those are marked in some way to tell whether they're stale in case

613
00:22:25,300 --> 00:22:27,100
they're updated or does that ever happen.

614
00:22:27,100 --> 00:22:29,800
Every file effectively is an ID number

615
00:22:29,900 --> 00:22:33,200
So there's both the the identity for it and the version number okay

616
00:22:33,200 --> 00:22:36,500
and so you can you can know whether you're up to date on the file and

617
00:22:36,500 --> 00:22:39,500
so if it turns out that you're out of date, you can say I have version

618
00:22:39,500 --> 00:22:41,600
17 of the warrior armor and it goes.

619
00:22:41,600 --> 00:22:44,800
Oh, and if you look at it manifest, it's like, oh, I need version 19.

620
00:22:45,000 --> 00:22:48,500
So you say to the file server, you know what 19 have 17 and it loads

621
00:22:48,500 --> 00:22:52,600
up with those files, Delta compresses them seriously ill actually

622
00:22:52,600 --> 00:22:54,800
Delta's them, then it compresses them and sends you down that small

623
00:22:54,800 --> 00:22:59,300
chunk because this was 2005, when we're doing this actually 2002 when

624
00:22:59,300 --> 00:22:59,800
we are writing

625
00:23:00,000 --> 00:23:00,700
Code for it.

626
00:23:01,000 --> 00:23:03,200
And you know like bandwidth was much lower than it is today.

627
00:23:03,200 --> 00:23:04,900
So we had to make everything as small as possible.

628
00:23:04,900 --> 00:23:07,100
Otherwise we've been hours and hours and hours before you can get in

629
00:23:07,100 --> 00:23:07,500
the game.

630
00:23:07,500 --> 00:23:08,300
That's awesome.

631
00:23:08,400 --> 00:23:08,700
Okay.

632
00:23:08,700 --> 00:23:11,800
Soso you on-demand Delta compressed, the difference between the

633
00:23:11,800 --> 00:23:15,200
version they have and the version they need and send only the Delta

634
00:23:15,200 --> 00:23:16,200
Down, correct?

635
00:23:16,800 --> 00:23:18,900
That's like better than most internet infrastructure.

636
00:23:18,900 --> 00:23:19,500
Probably.

637
00:23:19,800 --> 00:23:21,600
It's everywhere in the world right now.

638
00:23:21,600 --> 00:23:27,300
But okay, so going back to sort of the that sort of process of dancing

639
00:23:27,300 --> 00:23:27,600
is right?

640
00:23:27,600 --> 00:23:29,400
You said the ID number and the

641
00:23:29,900 --> 00:23:31,200
It's both the ID anniversary.

642
00:23:31,200 --> 00:23:34,000
You mean they're they're together or the ID is somehow intermixed with

643
00:23:34,000 --> 00:23:36,800
the versus just two separate pieces of data ID and version or right?

644
00:23:36,800 --> 00:23:37,500
So okay yeah.

645
00:23:37,500 --> 00:23:41,300
So every file has a base ID, which is the very first file number that

646
00:23:41,300 --> 00:23:43,000
was assigned to it when the asset was created.

647
00:23:43,100 --> 00:23:44,700
So, you know, I create a texture.

648
00:23:45,000 --> 00:23:46,700
It's like, well, you just have an even number three, right?

649
00:23:46,700 --> 00:23:48,000
And so, and I can forever more.

650
00:23:48,000 --> 00:23:50,900
I can refer to that texture as three, but now it has different version

651
00:23:50,900 --> 00:23:51,200
numbers.

652
00:23:51,200 --> 00:23:55,100
So like, you know, it's also file 17 and filed 28, you know, every

653
00:23:55,100 --> 00:23:58,700
time the artist changes it, that texture gets a nice a number of with

654
00:23:58,700 --> 00:23:59,800
it and so I always

655
00:24:00,000 --> 00:24:02,600
Food made by the base idea and I look in the Manifest for it.

656
00:24:02,600 --> 00:24:04,200
And looks like for the Bayside III.

657
00:24:04,200 --> 00:24:06,400
The current version is 781.

658
00:24:06,600 --> 00:24:11,000
I say I need 781 and I have three or 17 or whatever the previous

659
00:24:11,000 --> 00:24:11,300
version.

660
00:24:11,500 --> 00:24:15,200
And so sorry, this is just kind of fascinating science is not

661
00:24:15,200 --> 00:24:17,000
technically that was a my life so I don't know.

662
00:24:17,200 --> 00:24:21,400
Okay, so and just one other question about that, I guess because we

663
00:24:21,400 --> 00:24:24,500
sort of talked about this with when we're talking about Super Meat Boy

664
00:24:24,500 --> 00:24:27,200
as well and what Tommy was doing and it's just kind of fresh in my

665
00:24:27,200 --> 00:24:27,700
head.

666
00:24:27,700 --> 00:24:29,900
Like, how do you assign this?

667
00:24:30,000 --> 00:24:32,300
These IDs to things that artists make because but, you know, by

668
00:24:32,300 --> 00:24:34,900
definition, an artist is not, somebody who goes and knows what am a

669
00:24:34,900 --> 00:24:36,100
CID necessarily is.

670
00:24:36,100 --> 00:24:37,700
So how does that process work?

671
00:24:37,700 --> 00:24:40,600
I'm somebody who needs to add, you know, a texture to Guild Wars.

672
00:24:41,000 --> 00:24:43,000
Is there a server that you query or there too?

673
00:24:43,000 --> 00:24:45,900
Like what just give me just a quick idea of what that looks like?

674
00:24:45,900 --> 00:24:49,000
So we're easing / forces are revision control system so they check the

675
00:24:49,000 --> 00:24:51,400
file into perforce and then there'd be some way that that file was

676
00:24:51,400 --> 00:24:52,000
referenced.

677
00:24:52,000 --> 00:24:53,800
So perhaps there is a model file, okay?

678
00:24:53,900 --> 00:24:57,900
And the model file, you know, using 3ds Max refers to this texture

679
00:24:57,900 --> 00:24:59,000
file by name, okay?

680
00:24:59,000 --> 00:24:59,700
And so

681
00:25:00,000 --> 00:25:01,800
And in that model file is reference Center.

682
00:25:01,800 --> 00:25:02,600
Level file.

683
00:25:02,600 --> 00:25:02,900
Okay.

684
00:25:02,900 --> 00:25:05,400
I mean it's a it's a tree since that seems to be the model for today

685
00:25:06,500 --> 00:25:08,600
and then the you know, the level file contains a bunch of different

686
00:25:08,600 --> 00:25:09,100
Assets in it.

687
00:25:09,100 --> 00:25:11,600
And then the level file is actually referenced in some source code

688
00:25:11,600 --> 00:25:15,000
like this is level 13 of the game or this is like the Lion's Arch

689
00:25:15,000 --> 00:25:16,000
Outpost, okay?

690
00:25:16,000 --> 00:25:20,800
And so what happens is, there's a tool FS bill that goes through and

691
00:25:20,800 --> 00:25:23,600
it picks up all the code references to assets, and it's like, okay,

692
00:25:23,600 --> 00:25:24,800
let me load this little file.

693
00:25:24,800 --> 00:25:27,000
And then, we look at the dependencies, it says, oh, it's got a model

694
00:25:27,000 --> 00:25:27,700
file in it.

695
00:25:27,700 --> 00:25:28,900
Let me let the modify a little bit.

696
00:25:28,900 --> 00:25:29,600
Look at all the dependencies.

697
00:25:29,600 --> 00:25:29,800
Oh, it's

698
00:25:29,900 --> 00:25:32,800
A texture file only load that textures don't have any dependencies.

699
00:25:32,800 --> 00:25:35,700
Okay, so now I can process that file that file is now file ID 3

700
00:25:35,700 --> 00:25:36,700
because it's the third file.

701
00:25:36,700 --> 00:25:38,200
It was never processed, okay?

702
00:25:38,200 --> 00:25:44,500
And that whole stack gets processed up into the piece of data that's

703
00:25:44,500 --> 00:25:45,500
actually referenced.

704
00:25:45,600 --> 00:25:46,000
That's right.

705
00:25:46,000 --> 00:25:49,200
So the textures aren't represent reference separately or they are they

706
00:25:49,200 --> 00:25:50,000
can be referenced separately.

707
00:25:50,000 --> 00:25:54,000
That's right, so it processes and saves file 83 in this big giant, you

708
00:25:54,000 --> 00:25:55,500
know, data?

709
00:25:55,600 --> 00:25:58,600
Well you can think of as a database of files that's like more or less

710
00:25:59,000 --> 00:25:59,800
every every

711
00:26:00,400 --> 00:26:03,700
Version of a file back, say 90 days or something.

712
00:26:03,700 --> 00:26:04,300
Okay?

713
00:26:04,700 --> 00:26:08,700
And so when you're doing that, how can you tell that that, you know,

714
00:26:08,700 --> 00:26:09,400
I'm an artist.

715
00:26:09,500 --> 00:26:11,500
I made a new version of this texture.

716
00:26:11,700 --> 00:26:13,400
How did the does it correlate?

717
00:26:13,400 --> 00:26:18,900
Those is it just use the path, the full file path in perforce as the

718
00:26:18,900 --> 00:26:21,100
thing that it knows it seen this before.

719
00:26:21,200 --> 00:26:24,200
So like, you know, that thing kind of tracks those and can associate

720
00:26:24,200 --> 00:26:27,700
the IDS internally with that that perforce path or that's right?

721
00:26:27,700 --> 00:26:29,800
So FS Bill loads up all the assets and creates

722
00:26:29,900 --> 00:26:31,200
His graph of everything.

723
00:26:31,400 --> 00:26:33,600
And then, like he goes, oh well, that file hasn't changed, I don't

724
00:26:33,600 --> 00:26:34,600
have to do anything for it.

725
00:26:34,600 --> 00:26:34,800
Right?

726
00:26:34,800 --> 00:26:37,500
So it because it has lots of metadata associated with the whole

727
00:26:37,500 --> 00:26:41,000
process, so it knows when files were last touched and and, you know,

728
00:26:41,000 --> 00:26:44,500
if something breaks it can like knows which artist check that file in.

729
00:26:45,600 --> 00:26:47,700
Maybe that's not the reason why it broke right?

730
00:26:47,700 --> 00:26:50,500
Because it be the programmer change some code, which caused the all

731
00:26:50,500 --> 00:26:51,400
their files to break.

732
00:26:51,700 --> 00:26:52,100
Okay.

733
00:26:52,100 --> 00:26:52,400
All right.

734
00:26:52,400 --> 00:26:53,600
Sorry, that was a bit of a rattle.

735
00:26:53,600 --> 00:26:54,400
I just was kind of cured.

736
00:26:54,400 --> 00:26:56,500
I wanted to know how to about that system, because it's pretty

737
00:26:56,500 --> 00:26:57,000
interesting.

738
00:26:57,700 --> 00:26:58,000
Okay.

739
00:26:58,000 --> 00:26:59,800
So, going back to the networking part.

740
00:27:00,000 --> 00:27:00,300
Things.

741
00:27:00,600 --> 00:27:03,600
So, essentially you've got this system where it sounds like there's

742
00:27:03,600 --> 00:27:06,700
already kind of one server that we've already sort of talked about

743
00:27:06,700 --> 00:27:09,300
what it is which is like we need something that's sitting there

744
00:27:09,300 --> 00:27:12,800
running that has every version of every asset that we've ever shipped

745
00:27:13,100 --> 00:27:16,000
on it, which can answer this question, right?

746
00:27:16,100 --> 00:27:18,200
And presumably, we need more than one of these because everyone's

747
00:27:18,200 --> 00:27:19,400
getting the data from this.

748
00:27:19,400 --> 00:27:21,400
So how does how does talk a little bit about how that one?

749
00:27:21,400 --> 00:27:21,600
Sure.

750
00:27:21,600 --> 00:27:23,600
So we have lots of these file servers all over the world.

751
00:27:23,700 --> 00:27:27,500
So Guild Wars is kind of unique in its era for being a game that had

752
00:27:27,500 --> 00:27:28,200
no monthly fee.

753
00:27:28,200 --> 00:27:29,800
And so we couldn't have lat.

754
00:27:30,000 --> 00:27:32,500
Of servers to do all the stuff we need to be extremely efficient in

755
00:27:32,500 --> 00:27:33,300
the way that we did everything.

756
00:27:33,300 --> 00:27:36,300
So we wrote everything from scratch because there weren't tools that

757
00:27:36,300 --> 00:27:37,800
would do like this, Delta compression Zone.

758
00:27:38,100 --> 00:27:40,600
But so we have lots of file servers out there and they're spread out

759
00:27:40,600 --> 00:27:42,100
all over the world and it's kind of interesting.

760
00:27:42,100 --> 00:27:47,300
Why if you connect to a really long distance TCP server, what happens

761
00:27:47,300 --> 00:27:51,500
is there's this thing called the TCP window and so I send you a few

762
00:27:51,500 --> 00:27:53,400
messages and you send me back a bunch of stuff.

763
00:27:53,500 --> 00:27:55,900
But you're as a server you're like I'm not going to send you more than

764
00:27:55,900 --> 00:27:59,800
64k of data because I don't want to flood out the internet and

765
00:28:00,000 --> 00:28:03,300
Tool that 64k of data gets acknowledged.

766
00:28:03,400 --> 00:28:06,100
I'm not going to send you more stuff so you can only have at most 64 K

767
00:28:06,100 --> 00:28:09,000
beta outstanding and when you say server, who do you mean, because

768
00:28:09,000 --> 00:28:10,900
you're going to roll it in this case, the file server, okay?

769
00:28:10,900 --> 00:28:13,800
So it only sends 64k of data, you've set that up.

770
00:28:13,800 --> 00:28:17,700
You put the so the TCP stack just be said, like the window size is 64

771
00:28:17,700 --> 00:28:18,400
K.

772
00:28:18,400 --> 00:28:20,800
And so until we negotiate a bigger window size, that's as much as

773
00:28:20,800 --> 00:28:25,100
it'll send in Windows of that era like you had really limited ability

774
00:28:25,100 --> 00:28:29,100
to control TCP parameters so you couldn't especially on the game

775
00:28:29,100 --> 00:28:29,800
client, right?

776
00:28:29,900 --> 00:28:33,100
Because, you know, you can't go and hack people's registry.

777
00:28:33,100 --> 00:28:35,000
I see you nowadays.

778
00:28:35,000 --> 00:28:37,900
I guess you can possibly set those options dynamically in code but

779
00:28:37,900 --> 00:28:38,400
then you could.

780
00:28:38,400 --> 00:28:38,600
Yeah.

781
00:28:38,600 --> 00:28:41,000
But even then like it, like Windows XP.

782
00:28:41,000 --> 00:28:42,700
You have to reboot really?

783
00:28:42,700 --> 00:28:43,100
Yeah.

784
00:28:43,200 --> 00:28:43,700
Okay.

785
00:28:43,700 --> 00:28:44,700
All right, so keep going.

786
00:28:44,700 --> 00:28:46,600
So you're about to say there is problems with this, right?

787
00:28:46,600 --> 00:28:50,100
So what you want to do is instead of instead of trying to get stuff

788
00:28:50,100 --> 00:28:54,900
from a really long distance away server where like 64k, you know, you

789
00:28:54,900 --> 00:28:57,300
send it and then there's a long pause before the acknowledgement comes

790
00:28:57,300 --> 00:28:59,800
back and so you're not constantly filling yes the Stream.

791
00:29:00,100 --> 00:29:03,500
So you want to have the file server, really close to people so that

792
00:29:03,500 --> 00:29:05,100
you can send a lot of data more quickly.

793
00:29:05,100 --> 00:29:11,000
So, the instead of the delay being the limiting factor instead, it's

794
00:29:11,000 --> 00:29:13,900
the size of the channel being the limiting factor and we stand with,

795
00:29:13,900 --> 00:29:17,500
you can send is that like work around, double meaning like let's say I

796
00:29:17,500 --> 00:29:21,400
actually only had one file server, it sounds like that's / TCP

797
00:29:21,400 --> 00:29:21,900
connection.

798
00:29:21,900 --> 00:29:25,400
So in theory, could a client, be written to open multiple TCP

799
00:29:25,400 --> 00:29:28,900
connection to the server, so that it can start multiple 64k chunks in

800
00:29:28,900 --> 00:29:29,400
parallel.

801
00:29:29,400 --> 00:29:29,800
But you decided

802
00:29:29,900 --> 00:29:30,700
I did not to do that.

803
00:29:30,700 --> 00:29:31,400
I guess that's right.

804
00:29:31,400 --> 00:29:34,300
You certainly could do that, but what we did is we just distributed

805
00:29:34,300 --> 00:29:38,700
servers all over the world like we had them in Japan, Taiwan Korea to

806
00:29:38,700 --> 00:29:41,200
data centers in the US and a data center in Europe, okay?

807
00:29:41,200 --> 00:29:42,500
That was enough to do the job.

808
00:29:42,600 --> 00:29:42,800
Okay.

809
00:29:42,800 --> 00:29:43,600
How about Missouri's race?

810
00:29:43,600 --> 00:29:46,000
I mean, Australian uses had to suffer but we just couldn't afford it.

811
00:29:46,000 --> 00:29:46,500
But service there.

812
00:29:46,600 --> 00:29:49,000
Okay, fair.

813
00:29:49,000 --> 00:29:49,300
Yeah.

814
00:29:49,300 --> 00:29:51,800
And so we just had lots of those servers which creates another

815
00:29:51,800 --> 00:29:55,000
interesting problem which is whenever you want to do a build you have

816
00:29:55,000 --> 00:29:57,900
to make sure that every server has all the data before you can really

817
00:29:57,900 --> 00:29:59,300
say that the build is truly live.

818
00:29:59,300 --> 00:29:59,800
So it's a distributed.

819
00:30:00,000 --> 00:30:00,400
Database.

820
00:30:00,400 --> 00:30:01,200
Commit problem.

821
00:30:01,500 --> 00:30:02,900
How did you handle that?

822
00:30:03,400 --> 00:30:05,200
It's actually fairly straightforward.

823
00:30:05,200 --> 00:30:06,900
It's like, okay, everybody got the data, everybody.

824
00:30:07,000 --> 00:30:08,000
Everybody ready, ready?

825
00:30:08,200 --> 00:30:08,700
Go.

826
00:30:11,600 --> 00:30:13,800
And then afterwards, you're like, okay, did anybody get it?

827
00:30:13,900 --> 00:30:14,600
Okay, we're good.

828
00:30:14,600 --> 00:30:15,000
Right?

829
00:30:15,000 --> 00:30:17,400
And then if one of them didn't get it then you keep crying again.

830
00:30:17,400 --> 00:30:20,900
And again just like get it, get it, get it and eventually he wakes up.

831
00:30:20,900 --> 00:30:23,300
Yeah but you wait until everybody's got all the data and then you try

832
00:30:23,300 --> 00:30:26,200
and commit the metadata on all the systems simultaneously and there's

833
00:30:26,200 --> 00:30:29,000
only like twice in five years that ever failed.

834
00:30:29,300 --> 00:30:29,800
And

835
00:30:30,000 --> 00:30:30,300
Wow.

836
00:30:30,300 --> 00:30:30,500
Okay.

837
00:30:30,500 --> 00:30:34,000
And that's so my failed in a way that require human intervention.

838
00:30:34,200 --> 00:30:36,200
These are database.

839
00:30:36,200 --> 00:30:39,100
When you say database, are you talking literally about something that

840
00:30:39,100 --> 00:30:41,200
you guys wrote or you talking about?

841
00:30:41,300 --> 00:30:44,000
Okay, so basically it's not like we installed my SQL or something.

842
00:30:44,000 --> 00:30:47,400
It's like we wrote this thing from scratch to do exactly this job of

843
00:30:47,400 --> 00:30:48,800
serving the art assets.

844
00:30:48,800 --> 00:30:49,300
That's right.

845
00:30:49,400 --> 00:30:49,800
Okay, yeah.

846
00:30:49,800 --> 00:30:51,900
And in fact, like it's embedded in the Guild Wars client.

847
00:30:51,900 --> 00:30:54,500
When you see the g w dot dot file, it sort of the database file

848
00:30:54,500 --> 00:30:55,000
format.

849
00:30:55,100 --> 00:30:59,900
We use for everything and what kind of load were these servers under

850
00:31:00,000 --> 00:31:03,600
Like what what were they designed to serve, basically, how many people

851
00:31:03,600 --> 00:31:05,300
updating and how much traffic we do?

852
00:31:05,300 --> 00:31:07,800
You have any kind of just to give people a ballpark?

853
00:31:08,100 --> 00:31:10,400
There weren't that many of you said six or seven?

854
00:31:10,400 --> 00:31:12,800
Something it sounded like there were six data centers six days.

855
00:31:12,800 --> 00:31:14,900
But like within each data center, there were lots of these file

856
00:31:14,900 --> 00:31:15,700
servers, okay?

857
00:31:15,700 --> 00:31:17,300
So you just duplicate the file servers.

858
00:31:17,300 --> 00:31:19,400
Many times you needed to, for the load in that area.

859
00:31:19,400 --> 00:31:19,800
That's right.

860
00:31:19,800 --> 00:31:21,600
How much would one typically handle?

861
00:31:21,600 --> 00:31:22,400
Do you think or is it?

862
00:31:22,400 --> 00:31:27,100
So each one would saturate like it's Uplink at about 400 MB, okay?

863
00:31:27,200 --> 00:31:29,700
And they just run like 400 MB sustained load during Peak.

864
00:31:29,900 --> 00:31:36,000
I'm so the majority of your actual the thing that actually prevented

865
00:31:36,000 --> 00:31:39,300
you from serving more stuff on a particular server was actually just

866
00:31:39,300 --> 00:31:40,200
the outflow pipe.

867
00:31:40,200 --> 00:31:43,300
It was actually a combination of factors so it's file.

868
00:31:43,300 --> 00:31:47,100
Servers are actually really fascinating is like really easy to do

869
00:31:47,100 --> 00:31:49,600
things wrong but there are some things there's like, how much the

870
00:31:49,600 --> 00:31:52,100
network card could push onto the network?

871
00:31:52,800 --> 00:31:55,800
We're using blade servers and so blade servers unlike you know,

872
00:31:55,800 --> 00:31:59,400
individual pizza box, servers blade, servers have a shared network or

873
00:31:59,400 --> 00:31:59,800
in that?

874
00:32:00,000 --> 00:32:04,400
They had like a shared network like infrastructure for the entire row

875
00:32:04,400 --> 00:32:05,800
of 14 blade servers.

876
00:32:05,800 --> 00:32:06,100
Okay?

877
00:32:06,100 --> 00:32:08,600
So you could saturate, that would be a problem if you had to spread

878
00:32:08,600 --> 00:32:09,500
your file servers out.

879
00:32:09,500 --> 00:32:12,600
So they can all be in the same rack, they had to be different racks.

880
00:32:12,600 --> 00:32:15,800
My God, the other thing is that the amount of data that we're sending

881
00:32:15,800 --> 00:32:16,900
is very large.

882
00:32:16,900 --> 00:32:20,300
And so these servers all had only two and a half gigs of memory, you

883
00:32:20,300 --> 00:32:20,500
know.

884
00:32:20,500 --> 00:32:20,800
Okay.

885
00:32:20,800 --> 00:32:23,500
You've got a subtract out some for the operating system and stuff like

886
00:32:23,500 --> 00:32:26,400
that so you could have about a gig and a half of cash which you've got

887
00:32:26,400 --> 00:32:29,600
to have enough space left over for like load file a load file.

888
00:32:29,600 --> 00:32:29,800
Be

889
00:32:29,900 --> 00:32:33,000
B, Delta compress them now you've got file a file B and the delta in

890
00:32:33,000 --> 00:32:34,300
memory all at the same time.

891
00:32:35,000 --> 00:32:37,200
And then you want to keep that in memory as long as you can because

892
00:32:37,200 --> 00:32:38,700
presumably other users want that.

893
00:32:38,700 --> 00:32:40,600
But if you keep it in memory too long then you run out of memory in

894
00:32:40,600 --> 00:32:42,000
Crash and so that's no good.

895
00:32:42,000 --> 00:32:42,300
I see.

896
00:32:42,300 --> 00:32:44,700
So it's this constant thing of like trying not to run out of cash

897
00:32:44,700 --> 00:32:48,000
Bates and trying to avoid virtual memory fragmentation because these

898
00:32:48,000 --> 00:32:49,500
servers are supposed to run for years at a time.

899
00:32:49,500 --> 00:32:53,600
And so like memory fragmentation is a big issue so we had to use a

900
00:32:53,600 --> 00:32:55,600
Fibonacci Heap, are you serious?

901
00:32:55,600 --> 00:32:58,400
Various different sizes of heat buffers in order to make sure that

902
00:32:58,400 --> 00:32:59,800
there's always like a nice

903
00:33:00,000 --> 00:33:01,800
Available for the file that you want to load up.

904
00:33:03,000 --> 00:33:04,000
That's kind of amazing.

905
00:33:04,400 --> 00:33:08,000
Yeah, so a lot of engineering just wanted that one server by itself.

906
00:33:08,000 --> 00:33:08,400
Yeah.

907
00:33:08,400 --> 00:33:11,600
The build process to make people process really fast because like if

908
00:33:11,600 --> 00:33:13,900
any one thing you can do in your games, you want to make your

909
00:33:13,900 --> 00:33:17,500
iteration speed as fast as you possibly can, because that's going to

910
00:33:17,500 --> 00:33:18,700
determine the quality of your game.

911
00:33:18,700 --> 00:33:21,300
If you can only get one build done per day, then when people try and

912
00:33:21,300 --> 00:33:23,600
put something in the game and they have to wait to get user feedback,

913
00:33:23,900 --> 00:33:27,200
like they just don't get that feedback right away, we did so over the

914
00:33:27,200 --> 00:33:30,200
course of Guild Wars, we did an average of 20 builds a day for four

915
00:33:30,200 --> 00:33:32,700
years, it was roughly 10 day in the beginning and

916
00:33:32,900 --> 00:33:35,100
Close to the 30 to 40 day, okay?

917
00:33:35,100 --> 00:33:38,500
The project so we're just turning builds like roughly every five

918
00:33:38,500 --> 00:33:42,400
minutes during you know, the ordinary course of business and then data

919
00:33:42,400 --> 00:33:45,100
builds took a bit longer and so we spent a lot of engineering effort

920
00:33:45,200 --> 00:33:48,800
when I say we I mean me, myself and I but I mean there are other

921
00:33:48,800 --> 00:33:52,200
people who worked on like texture compressors and like you know like

922
00:33:52,200 --> 00:33:53,100
loaders and things like that.

923
00:33:53,100 --> 00:33:56,300
But but FS bill was my baby and like I had to make it fast because

924
00:33:56,300 --> 00:33:58,700
that was the core of the of the build time for things.

925
00:33:59,000 --> 00:34:01,900
And so every time I can make that faster I can make it more efficient

926
00:34:01,900 --> 00:34:02,600
for like the entire

927
00:34:02,800 --> 00:34:06,300
Rest of the, you know, 60-person Dev team to get their stuff in and

928
00:34:06,300 --> 00:34:06,900
see it.

929
00:34:07,200 --> 00:34:11,000
And so they that was kind of a live process because they wanted to be

930
00:34:11,000 --> 00:34:13,000
able to, it was that I'm just not sure.

931
00:34:13,000 --> 00:34:15,900
I totally understand, because obviously iteration you can iterate

932
00:34:15,900 --> 00:34:18,100
internal to the company but this sounds like something that you're

933
00:34:18,100 --> 00:34:19,800
iterating external to the company.

934
00:34:20,000 --> 00:34:22,199
Well, it's really both like you work, all the people on your team to

935
00:34:22,199 --> 00:34:23,400
be able to see stuff instantaneously.

936
00:34:23,400 --> 00:34:26,800
But we start on an alpha program in roughly April 2001 where he

937
00:34:26,800 --> 00:34:29,100
invited, you know, a few friends and family and that grew within a

938
00:34:29,100 --> 00:34:31,900
relatively short period of time to 500 to 2,000 people.

939
00:34:32,300 --> 00:34:32,699
We kept

940
00:34:32,800 --> 00:34:33,900
The entire Alpha process.

941
00:34:33,900 --> 00:34:36,000
And when we, you know, when some people would leave or get tired or,

942
00:34:36,000 --> 00:34:39,100
you know, our numbers were not high enough because of exhaustion of

943
00:34:39,100 --> 00:34:40,600
the game, then we just bring in more people.

944
00:34:40,699 --> 00:34:40,900
Okay?

945
00:34:40,900 --> 00:34:43,600
And so, like our Dev build was actually going out to two thousand

946
00:34:43,600 --> 00:34:46,500
people every single time that we did it.

947
00:34:46,500 --> 00:34:50,199
So basically FS build was both the server for your internal

948
00:34:50,199 --> 00:34:53,600
essentially, essentially your internal testing and the actual game.

949
00:34:54,000 --> 00:34:56,600
No difference really made no difference between devs and Alpha's,

950
00:34:57,100 --> 00:34:57,400
okay?

951
00:34:57,400 --> 00:35:01,900
So let me just ask one other question that I had about the about the

952
00:35:01,900 --> 00:35:02,400
the server.

953
00:35:02,400 --> 00:35:02,600
Although I

954
00:35:02,800 --> 00:35:04,500
Suppose there are a lot of questions I could ask, but I want to make

955
00:35:04,500 --> 00:35:06,100
sure we get sort of coverage is different areas.

956
00:35:06,800 --> 00:35:09,900
So when you said like keeping the the cash you were like I got a load

957
00:35:09,900 --> 00:35:10,700
these two files up.

958
00:35:10,700 --> 00:35:13,700
I'll do the Delta and then I'll try to keep the two files in the delta

959
00:35:13,700 --> 00:35:16,400
in, you know, presumably flush the two files.

960
00:35:16,600 --> 00:35:19,500
I just keep the Delta with a tag on it or something that says this was

961
00:35:19,500 --> 00:35:20,500
the Delta between these two files.

962
00:35:20,500 --> 00:35:23,100
So if someone wants that Delta, it'll hit the cash and I'll send it

963
00:35:23,100 --> 00:35:23,600
out.

964
00:35:23,600 --> 00:35:27,300
The idea is presumably that we want that second level of caching

965
00:35:27,300 --> 00:35:29,800
because probably most people are up to date.

966
00:35:29,800 --> 00:35:32,700
So probably when somebody wanted this Delta

967
00:35:32,800 --> 00:35:35,200
one right after them is going to call for the same, Delta kind of

968
00:35:35,200 --> 00:35:35,400
thing.

969
00:35:35,500 --> 00:35:36,000
Okay.

970
00:35:36,700 --> 00:35:40,400
All right, so, let's move from file serving down to sort of the next.

971
00:35:40,400 --> 00:35:43,700
So this is now, my client can actually get all of the data that I need

972
00:35:43,700 --> 00:35:47,100
to play Guild Wars and it's self updating and sounds pretty awesome.

973
00:35:47,400 --> 00:35:50,800
In terms of like keeping everyone on the same sort of set of data.

974
00:35:51,100 --> 00:35:54,000
Now, I need to start talking about how to actually play the game like

975
00:35:54,000 --> 00:35:55,200
how that server infrastructure works.

976
00:35:55,200 --> 00:35:56,400
So there's a bunch of things involved there.

977
00:35:56,400 --> 00:35:58,500
Once you give a little overview of how that works and then we can kind

978
00:35:58,500 --> 00:35:58,900
of drill down to.

979
00:35:58,900 --> 00:35:59,800
So, the next server Utah,

980
00:36:00,000 --> 00:36:02,800
Is the lobby server and that's one that handles authentication and

981
00:36:02,800 --> 00:36:03,300
presence.

982
00:36:03,600 --> 00:36:06,200
So again for people who don't have familiar with the Guild Wars it's

983
00:36:06,200 --> 00:36:09,900
not like in a traditional MMO where you join one map and you stay

984
00:36:09,900 --> 00:36:11,300
there for a really long period of time.

985
00:36:11,600 --> 00:36:14,100
Instead you join a particular game and you play there for a brief

986
00:36:14,100 --> 00:36:15,500
while and then you join another game.

987
00:36:15,500 --> 00:36:17,900
So I might go to an outpost where there's like, 100, 150 people

988
00:36:17,900 --> 00:36:21,200
running around and the hey, let's go play in an instance map and then

989
00:36:21,200 --> 00:36:23,800
you and I get our own private copy of a two player or for player a

990
00:36:23,800 --> 00:36:24,700
player world.

991
00:36:24,700 --> 00:36:26,500
We play there for a while and we finished that and we go play a

992
00:36:26,500 --> 00:36:29,500
tournament game, which is, you know, five teams of eight people and

993
00:36:29,500 --> 00:36:29,800
then we play

994
00:36:30,000 --> 00:36:33,400
A an arena map, which is two games, two teams of eight people.

995
00:36:33,600 --> 00:36:36,000
So we're playing lots of different maps and so because you don't have

996
00:36:36,000 --> 00:36:39,000
a persistent connection, we don't have a way to send you messages all

997
00:36:39,000 --> 00:36:39,400
the time.

998
00:36:39,500 --> 00:36:39,800
Okay?

999
00:36:39,900 --> 00:36:43,000
So what we do is, instead you connect to the lobby server first and

1000
00:36:43,000 --> 00:36:44,600
your lobby server connections, persistent.

1001
00:36:44,600 --> 00:36:47,500
And so when you get Whispers from your friends, or when we need to

1002
00:36:47,500 --> 00:36:49,800
send you any notifications that can all go through that persistent

1003
00:36:49,800 --> 00:36:51,000
connection through the lobby.

1004
00:36:51,400 --> 00:36:54,000
So the lobby, you know, you authenticate yourself, you get your

1005
00:36:54,000 --> 00:36:58,200
friends list, you get like your guild information, because it's called

1006
00:36:58,200 --> 00:36:58,800
goers, right?

1007
00:37:00,000 --> 00:37:03,400
And like all the other information, you need to maintain a persistent

1008
00:37:03,400 --> 00:37:06,600
State and also we established like some encryption keys because all

1009
00:37:06,600 --> 00:37:10,500
the data is encrypted back and forth and is that process?

1010
00:37:10,500 --> 00:37:13,100
So I guess this is pressing, probably should be brought up now, just

1011
00:37:13,100 --> 00:37:14,800
to can be mentioned in different parts of it.

1012
00:37:14,900 --> 00:37:17,600
So like TCP versus UDP was a big thing.

1013
00:37:17,600 --> 00:37:19,900
You put in the in the emails, actually, the first thing you said.

1014
00:37:20,000 --> 00:37:23,900
So, do you want to mention briefly, like sort of what these different

1015
00:37:23,900 --> 00:37:26,900
systems are that we're talking about where they TCP were the UDP, and

1016
00:37:26,900 --> 00:37:28,900
why it sounds like the file server was TCP?

1017
00:37:28,900 --> 00:37:29,800
Because you mentioned the

1018
00:37:29,900 --> 00:37:31,100
Window, the send window.

1019
00:37:32,700 --> 00:37:35,500
What is all, what is the lobby server TCP, as well, if we go towards

1020
00:37:35,500 --> 00:37:36,900
everything is TCP, okay?

1021
00:37:36,900 --> 00:37:38,400
So everything in the game is TCP.

1022
00:37:38,400 --> 00:37:39,200
No UDP.

1023
00:37:39,200 --> 00:37:40,300
That's right, all right.

1024
00:37:40,300 --> 00:37:44,100
And so an instantly, the reason for that was like we're going to use

1025
00:37:44,100 --> 00:37:46,100
TCP and then we're going to decide later on.

1026
00:37:46,100 --> 00:37:50,000
If we needed to use UDP for the server to client protocol, we thought

1027
00:37:50,000 --> 00:37:51,100
we would need to but it turned out.

1028
00:37:51,100 --> 00:37:53,700
It just wasn't a big issue for the type of game that we were doing

1029
00:37:53,700 --> 00:37:58,600
okay but like it was expedient for us to write tcp-based game, okay?

1030
00:37:58,900 --> 00:37:59,600
And so,

1031
00:38:00,800 --> 00:38:01,600
Keep going with that.

1032
00:38:01,600 --> 00:38:04,000
So I got to connect to the connect to the lobby server.

1033
00:38:04,000 --> 00:38:07,800
So I TCP to the lobby server and I get my information back from that

1034
00:38:07,800 --> 00:38:11,400
and presumably, this is also going to involve, you said you don't ever

1035
00:38:11,400 --> 00:38:12,000
do peer-to-peer.

1036
00:38:12,000 --> 00:38:16,400
So presumably, I'm going to have to Route the packets for the rest of

1037
00:38:16,400 --> 00:38:17,400
the game to the people.

1038
00:38:17,400 --> 00:38:20,000
I'm playing with through somebody is that also a lobbyist over?

1039
00:38:20,000 --> 00:38:20,600
How does that's right?

1040
00:38:20,600 --> 00:38:21,900
How does that process or so sure.

1041
00:38:21,900 --> 00:38:28,000
So like briefly the lobby server talks the database server and you

1042
00:38:28,000 --> 00:38:28,800
know post on all your data.

1043
00:38:28,800 --> 00:38:29,800
And then after that talks to us,

1044
00:38:29,900 --> 00:38:32,300
The server, which is it's called site serve, but it's like a

1045
00:38:32,300 --> 00:38:36,200
matchmaking server and it says player Pat was last in Lion's Arch.

1046
00:38:36,200 --> 00:38:39,100
And so, you know, find a lion's Arch server.

1047
00:38:39,800 --> 00:38:43,000
And so the matchmaking Server doesn't have any of those yet, right?

1048
00:38:43,000 --> 00:38:45,700
Because it's a brand new build or, you know, like everything crashing

1049
00:38:45,700 --> 00:38:46,300
into the owner.

1050
00:38:46,400 --> 00:38:48,200
You know, the whole thing was they wanted the game, whatever.

1051
00:38:48,200 --> 00:38:48,500
Okay.

1052
00:38:49,400 --> 00:38:52,700
And so, it has a whole bunch of game Services have connected up to the

1053
00:38:52,700 --> 00:38:53,900
matchmaking server and said hi.

1054
00:38:53,900 --> 00:38:57,400
I'm available to host games, you know, I have excess capacity and so

1055
00:38:57,400 --> 00:38:59,800
the matchmaking server says, you were going to host the game.

1056
00:39:00,600 --> 00:39:05,200
Go create a lion's, Arch will call it District 1 and then the server

1057
00:39:05,200 --> 00:39:08,400
and create that sent back a token to the match over to Matt saracens

1058
00:39:08,400 --> 00:39:09,300
about to Lobby server.

1059
00:39:09,300 --> 00:39:10,800
Lobby server to the client plants.

1060
00:39:10,800 --> 00:39:15,200
Got this token, which is like a token that says I'm allowed to join

1061
00:39:15,200 --> 00:39:16,800
this game and the address of that game.

1062
00:39:16,900 --> 00:39:17,200
Okay.

1063
00:39:17,200 --> 00:39:19,900
So then I joined that game and I say hi I'm Pat, here's my token,

1064
00:39:20,300 --> 00:39:24,600
let's encrypt this communication then the game server then goes to the

1065
00:39:24,800 --> 00:39:27,500
database cache server says Get me the past record oh he's not loaded

1066
00:39:27,500 --> 00:39:27,700
yet.

1067
00:39:27,700 --> 00:39:30,000
Database cache server goes to the database server, get me the record.

1068
00:39:30,500 --> 00:39:33,700
Here is your entire record which has all your inventory, like the

1069
00:39:33,700 --> 00:39:36,200
parts of the map that you've explored, how much gold you have

1070
00:39:36,400 --> 00:39:38,000
everything interesting about your character.

1071
00:39:38,000 --> 00:39:40,700
So there's a ton of servers in there that you've just mentioned.

1072
00:39:40,700 --> 00:39:43,500
Just for them, just the basics, just for the basic.

1073
00:39:43,600 --> 00:39:48,100
So, okay, so the first question is I guess before I ask any more

1074
00:39:48,100 --> 00:39:51,300
specifics about those, why are there so many servers?

1075
00:39:51,300 --> 00:39:54,100
So why was this a load balancing thing?

1076
00:39:54,100 --> 00:39:56,800
Was this just a cleanliness thing or a testability thing?

1077
00:39:56,800 --> 00:40:00,100
Like why do we have that many servers involved in?

1078
00:40:00,300 --> 00:40:01,500
Just this one process.

1079
00:40:01,500 --> 00:40:02,000
Sure.

1080
00:40:02,400 --> 00:40:05,700
So it's really good when you have a lot of complexity to try and

1081
00:40:05,700 --> 00:40:09,000
simplify your program because if you're trying to do too many things

1082
00:40:09,000 --> 00:40:11,400
at once, and if one of them crashes, it takes down everything else,

1083
00:40:11,400 --> 00:40:11,800
okay?

1084
00:40:11,800 --> 00:40:15,000
So, like isolation components, also, you know, just from an

1085
00:40:15,000 --> 00:40:16,900
understanding, something standpoint.

1086
00:40:16,900 --> 00:40:19,600
If you can't understand something, it's really hard to modify.

1087
00:40:19,800 --> 00:40:21,200
So, the smaller something is the better.

1088
00:40:21,200 --> 00:40:24,400
It fits into the like seven plus or minus two items in your brain,

1089
00:40:24,900 --> 00:40:25,400
right?

1090
00:40:26,300 --> 00:40:29,700
And each one of those, you know, like things can be separated, right.

1091
00:40:29,700 --> 00:40:30,100
Separation.

1092
00:40:30,200 --> 00:40:33,900
Of concerns is the is the Cs terminology for that.

1093
00:40:34,000 --> 00:40:38,100
So basically your philosophical your approach to this basically would

1094
00:40:38,100 --> 00:40:43,600
be if we can define a, you know, a set of operations that clearly

1095
00:40:43,600 --> 00:40:44,000
form.

1096
00:40:44,000 --> 00:40:46,700
Something that can all be done with the same set of data, we're going

1097
00:40:46,700 --> 00:40:49,700
to make that into a separate server if we can even if that's going to

1098
00:40:49,700 --> 00:40:53,000
run on the same machine as some other server we'd rather have it be

1099
00:40:53,100 --> 00:40:55,000
like its own sort of self-contained thing.

1100
00:40:55,000 --> 00:40:55,400
That's right.

1101
00:40:55,400 --> 00:40:57,400
Rather than merging these two things together.

1102
00:40:57,400 --> 00:40:57,800
That's right.

1103
00:40:57,800 --> 00:41:00,100
And then also, you know, another really compelling

1104
00:41:00,300 --> 00:41:00,700
And to do that.

1105
00:41:00,700 --> 00:41:03,900
It is like you can keep buying bigger and bigger services but the cost

1106
00:41:03,900 --> 00:41:06,100
for the server goes up instead of being a linear cost at Scales

1107
00:41:06,100 --> 00:41:06,600
exponentially.

1108
00:41:06,600 --> 00:41:10,200
So you know, if you want to for processor server, it's more than twice

1109
00:41:10,200 --> 00:41:13,200
as expensive as a two processors and a process has more than four

1110
00:41:13,200 --> 00:41:14,800
times as expensive as a to prices.

1111
00:41:14,800 --> 00:41:15,200
Sure.

1112
00:41:15,400 --> 00:41:18,200
So, if you can have the ability to distribute these things across,

1113
00:41:18,200 --> 00:41:19,300
lots of Cheaper machines.

1114
00:41:19,300 --> 00:41:20,400
It's a win there as well.

1115
00:41:20,400 --> 00:41:20,900
That's right.

1116
00:41:21,000 --> 00:41:23,600
And then also like, when you design your stuff to be, it's called

1117
00:41:23,600 --> 00:41:26,800
horizontally scalable, you know, like vertically, scalable is by a

1118
00:41:26,800 --> 00:41:27,800
bigger server, right?

1119
00:41:27,800 --> 00:41:30,100
But you can only get so big before you run out of like there.

1120
00:41:30,200 --> 00:41:33,000
Isn't a 256 core server that you can just go out and buy or at least

1121
00:41:33,000 --> 00:41:35,100
you couldn't in 2000 and searched for era.

1122
00:41:35,100 --> 00:41:36,000
Probably not even close.

1123
00:41:36,000 --> 00:41:38,200
But yeah, we're not spending like multimillion-dollar.

1124
00:41:38,200 --> 00:41:38,700
Yeah.

1125
00:41:40,600 --> 00:41:44,100
And yeah, so you want to scale horizontally and that causes you to

1126
00:41:44,100 --> 00:41:47,600
re-architect the way that you write your software and also then you

1127
00:41:47,600 --> 00:41:50,900
know like oh well one of our officers blew up right big deal.

1128
00:41:50,900 --> 00:41:51,400
Okay.

1129
00:41:51,700 --> 00:41:53,300
Because you just have lots of all servers running.

1130
00:41:53,300 --> 00:41:54,600
That's right and it's totally fine.

1131
00:41:55,100 --> 00:41:59,700
Okay, so going back to sort of the that that server break down then.

1132
00:42:00,000 --> 00:42:04,200
So if my philosophy is like lots of little servers each that does a

1133
00:42:04,200 --> 00:42:05,000
specific job.

1134
00:42:05,000 --> 00:42:05,500
I contribute.

1135
00:42:05,500 --> 00:42:08,700
The mirror I want and I like programming it that way because then I

1136
00:42:08,700 --> 00:42:13,000
have a much more well-defined sort of, you know, problem, space and

1137
00:42:13,000 --> 00:42:14,000
solution to the problem.

1138
00:42:14,900 --> 00:42:17,800
What about sort of the extra interconnect that this generates?

1139
00:42:17,800 --> 00:42:20,200
Meaning, the fact that now, these things have to talk to each other.

1140
00:42:20,300 --> 00:42:23,400
Don't I sort of introduced a new failure point or a new thing.

1141
00:42:23,400 --> 00:42:25,900
I've got to get right every time these two servers can't just call a

1142
00:42:25,900 --> 00:42:28,400
function, they've got to actually now have the packet protocol.

1143
00:42:28,600 --> 00:42:29,400
How did you approach that?

1144
00:42:29,400 --> 00:42:29,900
Because that seems

1145
00:42:30,000 --> 00:42:32,900
Seems like that would then be something you maybe want to stay matte

1146
00:42:32,900 --> 00:42:33,800
eyes or something.

1147
00:42:33,800 --> 00:42:34,400
I mean that's right.

1148
00:42:34,400 --> 00:42:35,800
Tell me tell me how you thought about that.

1149
00:42:35,800 --> 00:42:36,400
Yeah, absolutely.

1150
00:42:36,400 --> 00:42:40,300
So the server is speak a different protocol and it's like, you know,

1151
00:42:40,500 --> 00:42:41,400
an RPC protocol.

1152
00:42:41,400 --> 00:42:43,500
It happened to be a custom one, although like, there's lots of

1153
00:42:43,500 --> 00:42:44,300
different versions that.

1154
00:42:44,300 --> 00:42:47,600
So today, like today, you'd use protobuf sore Thrift or a message

1155
00:42:47,600 --> 00:42:50,100
pack, or something like, okay, because like lots of people have

1156
00:42:50,100 --> 00:42:52,500
studied this problem, figured out like her thing to do or, you know,

1157
00:42:52,500 --> 00:42:55,500
another new one is Captain Frodo, and you think these are good,

1158
00:42:55,700 --> 00:42:57,000
meaning like you've looked at them.

1159
00:42:57,000 --> 00:42:58,500
And absolutely, these would be these.

1160
00:42:58,500 --> 00:42:59,800
We could have used these and they would have been okay.

1161
00:43:00,000 --> 00:43:00,900
If they existed in that time.

1162
00:43:01,300 --> 00:43:02,600
It's yeah, absolutely.

1163
00:43:03,400 --> 00:43:06,300
So, you know, you just need some standardized RPC protocol that, in

1164
00:43:06,300 --> 00:43:09,400
particular, has the capability to do versioning because, you know, day

1165
00:43:09,400 --> 00:43:10,200
one, you do something.

1166
00:43:10,200 --> 00:43:12,400
And then like three weeks later, you're like, oh, we should have added

1167
00:43:12,400 --> 00:43:13,600
this parameter, we have a new feature.

1168
00:43:13,900 --> 00:43:16,600
So, you need to think about how you would add additional features

1169
00:43:16,600 --> 00:43:18,700
without having to like, take down all of your servers and do

1170
00:43:18,700 --> 00:43:19,600
maintenance period.

1171
00:43:19,900 --> 00:43:22,300
One of the other rather unique things about Guild Wars was that we

1172
00:43:22,300 --> 00:43:26,500
tried never to do maintenance like we ran 24/7 365, okay?

1173
00:43:26,500 --> 00:43:28,800
No maintenance periods, which is extremely unusual.

1174
00:43:28,800 --> 00:43:29,000
Yeah.

1175
00:43:29,000 --> 00:43:29,700
That the sensor

1176
00:43:29,900 --> 00:43:33,600
And so like what you had to do was like rolling upgrades of your

1177
00:43:33,600 --> 00:43:36,400
servers like you'd upgrade one, it had to continue to work like new

1178
00:43:36,400 --> 00:43:37,600
version and old version.

1179
00:43:38,000 --> 00:43:40,800
All you know, rather new protocol and old protocol had to continue to

1180
00:43:40,800 --> 00:43:43,800
work but now that you've got a new server running, it can speak the

1181
00:43:43,800 --> 00:43:47,300
new protocol and new you know, it can do additional functionality so

1182
00:43:47,300 --> 00:43:49,400
you take down the servers like okay the server is going to go out of

1183
00:43:49,400 --> 00:43:51,000
service everybody get off it, okay?

1184
00:43:51,000 --> 00:43:54,600
It's it's empty kill restart with new version, okay?

1185
00:43:54,600 --> 00:43:59,100
So remember to you know get all the users office was it is that some

1186
00:43:59,100 --> 00:43:59,700
kind of a

1187
00:44:00,000 --> 00:44:03,800
So that sort of scale down, meaning I've got a flush everything off,

1188
00:44:03,800 --> 00:44:05,700
this is a thing that had to be built in to all the servers.

1189
00:44:05,700 --> 00:44:07,700
I assumed was the concept that like, you have to go down for

1190
00:44:07,700 --> 00:44:09,900
maintenance now and we built that in from day one the class with you

1191
00:44:09,900 --> 00:44:10,900
can go down for maintenance.

1192
00:44:11,100 --> 00:44:13,800
You get everyone off and they go to some other servers and then we can

1193
00:44:13,800 --> 00:44:15,700
do whatever kinds of upgrade for going to do to you.

1194
00:44:15,800 --> 00:44:16,400
That's right.

1195
00:44:16,400 --> 00:44:19,500
And this was built into every server or do you kind of like so when

1196
00:44:19,500 --> 00:44:22,500
you talk about having somebody servers and I can I can't remember the

1197
00:44:22,500 --> 00:44:24,700
number but you had listed so many servers there on that line.

1198
00:44:24,700 --> 00:44:26,800
When you sent me the email, there's I mean there had to be there was

1199
00:44:26,800 --> 00:44:27,300
over ten.

1200
00:44:27,300 --> 00:44:27,800
Let's put it that way.

1201
00:44:27,800 --> 00:44:29,600
Yeah I think there's 1818 servers

1202
00:44:30,400 --> 00:44:32,400
Did you develop that with a particular?

1203
00:44:33,200 --> 00:44:35,500
I don't want to say framework because, you know, that's kind of maybe

1204
00:44:35,500 --> 00:44:36,000
a loaded term.

1205
00:44:36,000 --> 00:44:39,300
But did you essentially have some code that is shared between all

1206
00:44:39,300 --> 00:44:42,400
these servers which is like, okay, we kind of get this now, maybe a

1207
00:44:42,400 --> 00:44:44,500
little bit into it, how we want these service to work.

1208
00:44:44,500 --> 00:44:46,100
So we kind of built a standard lot.

1209
00:44:46,100 --> 00:44:48,300
Our standard server Library, absolutely.

1210
00:44:48,300 --> 00:44:49,300
What does that look like?

1211
00:44:49,700 --> 00:44:53,300
Well, so another interesting is that like the core of all the server's

1212
00:44:53,300 --> 00:44:56,600
was one set of code that could do like file handling memory management

1213
00:44:56,600 --> 00:44:59,800
and socket and hot reloading okay like Ma.

1214
00:45:00,000 --> 00:45:00,800
All's okay?

1215
00:45:01,700 --> 00:45:04,600
So a module would be like the file server module, or the matchmaking

1216
00:45:04,600 --> 00:45:07,800
server or the lobby server module could actually be dropped and

1217
00:45:07,800 --> 00:45:09,300
reloaded dynamically.

1218
00:45:09,300 --> 00:45:13,200
So in a sense, a server instance may be thought of as the lobby

1219
00:45:13,200 --> 00:45:16,500
server, but really, it's sort of the generic server.

1220
00:45:16,900 --> 00:45:21,500
Like top thing, whatever this is with only, the lobby server, loaded

1221
00:45:21,500 --> 00:45:22,100
up and running.

1222
00:45:22,100 --> 00:45:25,300
But for technically, if we'd wanted to, we could have also had it load

1223
00:45:25,300 --> 00:45:26,400
up a matchmaking server.

1224
00:45:26,400 --> 00:45:26,800
That's right.

1225
00:45:26,800 --> 00:45:29,900
So like the you know they were the way to look at it is really

1226
00:45:30,000 --> 00:45:33,200
Reena serve, which is the loader module is an executable and

1227
00:45:33,200 --> 00:45:34,500
everything else is a dll.

1228
00:45:34,500 --> 00:45:37,300
And so like on a developer system you would actually load up every

1229
00:45:37,300 --> 00:45:40,900
single dll so you can have the entire stack of 18 servers running.

1230
00:45:40,900 --> 00:45:44,000
I seen one and test them, just right there and see how they trade.

1231
00:45:44,300 --> 00:45:45,000
That's pretty fascinating.

1232
00:45:45,000 --> 00:45:49,300
Okay, so I guess we had to create a protocol to talk everything,

1233
00:45:49,300 --> 00:45:49,500
right?

1234
00:45:49,500 --> 00:45:52,700
And so, that protocol library, then became part of, you know, could

1235
00:45:52,700 --> 00:45:53,600
have been part of the core.

1236
00:45:53,600 --> 00:45:55,700
But because we wanted the capability to update, it really frequently,

1237
00:45:55,700 --> 00:45:58,800
every single server, use the same code but it had it loaded into the

1238
00:45:58,800 --> 00:45:59,400
dll.

1239
00:45:59,400 --> 00:45:59,900
So I

1240
00:46:00,000 --> 00:46:02,700
Could be updated, okay, so called like serve socket.

1241
00:46:02,700 --> 00:46:06,800
So basically when you load a dll, it also includes linked into it.

1242
00:46:06,900 --> 00:46:10,500
It's version of whatever the protocol was because it may be different

1243
00:46:10,500 --> 00:46:11,700
than the one that you know.

1244
00:46:11,700 --> 00:46:14,100
Some other thing that might be loaded on it or whatever or when we

1245
00:46:14,100 --> 00:46:15,200
want to have it too.

1246
00:46:15,200 --> 00:46:16,500
Even for only loading one.

1247
00:46:16,700 --> 00:46:19,300
When we want to go away and come back, we don't want to, then have to

1248
00:46:19,300 --> 00:46:21,100
go like, oh, right, he's going away.

1249
00:46:21,100 --> 00:46:22,200
And he's changing his version.

1250
00:46:22,200 --> 00:46:25,000
So now I have to like switch out the version of my protocol that I'm

1251
00:46:25,000 --> 00:46:27,300
using I think so it's like, no, it's all just welded into that one.

1252
00:46:27,300 --> 00:46:29,700
Dll, it knows which protocol was using but that

1253
00:46:29,900 --> 00:46:32,600
Did come from a shared library that we use internally so that everyone

1254
00:46:32,600 --> 00:46:35,000
just links to that and knows that can use it correctly.

1255
00:46:35,500 --> 00:46:35,900
Okay.

1256
00:46:35,900 --> 00:46:36,400
Wow.

1257
00:46:37,200 --> 00:46:38,000
You know, stuff.

1258
00:46:38,300 --> 00:46:42,800
All right, so we don't have we don't have nearly as much time left.

1259
00:46:42,800 --> 00:46:46,700
As I would like, of course, but I guess I just want to quickly kind of

1260
00:46:46,700 --> 00:46:50,700
go through some of these things here and get a little bit of a guess

1261
00:46:50,700 --> 00:46:52,300
of your perspective on them.

1262
00:46:53,500 --> 00:46:56,900
So talk a little bit about the TCP versus UDP thing because you'd

1263
00:46:56,900 --> 00:46:58,000
mention that likes it on the top of thing.

1264
00:46:58,000 --> 00:46:59,800
Just said, Guild Wars used all TCP, which is kind of

1265
00:47:00,000 --> 00:47:00,600
Rising to me.

1266
00:47:01,300 --> 00:47:04,500
We actually have this discussion with some friends recently where I

1267
00:47:04,500 --> 00:47:07,800
was like lamenting the fact that like I you can actually download a

1268
00:47:07,800 --> 00:47:10,500
file in a browser like downloading a file in the browser is like an

1269
00:47:10,500 --> 00:47:13,500
unsolved problem, half the time, it just like stops and new.

1270
00:47:13,500 --> 00:47:14,900
Nobody knows why right?

1271
00:47:15,100 --> 00:47:18,900
And so like Guild Wars I don't think ever had these sorts of problems.

1272
00:47:18,900 --> 00:47:20,400
So you know I guess it does.

1273
00:47:20,400 --> 00:47:23,200
That sort of say that like well you know, can you give me a little bit

1274
00:47:23,200 --> 00:47:27,500
of background TCP versus UDP and how do you if you're going to do TCP,

1275
00:47:27,600 --> 00:47:29,700
how did you do it right versus doing it wrong?

1276
00:47:29,700 --> 00:47:29,800
Because

1277
00:47:29,900 --> 00:47:32,100
Oh, I see so many things where it's obviously done wrong.

1278
00:47:32,100 --> 00:47:32,900
Does that make sense?

1279
00:47:32,900 --> 00:47:33,600
As a question?

1280
00:47:34,100 --> 00:47:34,500
Yeah.

1281
00:47:34,800 --> 00:47:36,600
So the first thing is TCP versus UDP.

1282
00:47:36,600 --> 00:47:41,300
So TCP is a reliable ordered protocol, which means like even if you

1283
00:47:41,300 --> 00:47:44,600
receive data out of order, then you'll wait for the piece that we

1284
00:47:44,600 --> 00:47:46,500
supposed to come before and insert that.

1285
00:47:46,500 --> 00:47:49,800
So that everything shows up in a nice stream it's like reading a file

1286
00:47:49,800 --> 00:47:53,100
except that, you know, sometimes the file like, handle gets broken and

1287
00:47:53,100 --> 00:47:54,300
you can't read anymore from it.

1288
00:47:54,600 --> 00:47:56,600
Whereas UDP, you can send lots of packets.

1289
00:47:56,800 --> 00:47:59,800
They arrived in any order, that is unguaranteed.

1290
00:48:00,300 --> 00:48:01,900
And some of them don't ever arrive at all.

1291
00:48:02,000 --> 00:48:02,300
Yeah.

1292
00:48:02,400 --> 00:48:06,400
And so, you know, obviously TCP and UDP are built on the same

1293
00:48:06,400 --> 00:48:09,500
underlying Primitives and TCP just has a lot of mechanisms to ensure

1294
00:48:09,500 --> 00:48:13,800
that the reliable order guarantee actually happens and you know that

1295
00:48:13,800 --> 00:48:16,100
maybe not what you want for your game because if you're doing a first

1296
00:48:16,100 --> 00:48:21,600
person shooter like you're sending like position and angle like a

1297
00:48:21,600 --> 00:48:25,100
regular position, velocity, something like that so that, you know, at

1298
00:48:25,100 --> 00:48:27,300
any moment in time when I receive a packet, I know exactly where you

1299
00:48:27,300 --> 00:48:28,100
are and where you're headed.

1300
00:48:28,100 --> 00:48:29,800
But if I lose one of those, I don't care because I'll get the

1301
00:48:30,000 --> 00:48:33,000
Next one, which is your new position and in fact it would be bad to

1302
00:48:33,000 --> 00:48:35,900
receive an old stale packet because now you're going to pop backwards

1303
00:48:35,900 --> 00:48:36,500
in time.

1304
00:48:36,700 --> 00:48:38,900
So TCP would be a terrible protocol for that.

1305
00:48:38,900 --> 00:48:41,200
But for an MMO, it actually works really well.

1306
00:48:41,200 --> 00:48:44,600
Because almost every single message that you would send is something

1307
00:48:44,600 --> 00:48:47,400
that you would have wanted to know correctly, right?

1308
00:48:47,400 --> 00:48:48,900
Like I picked up this, right?

1309
00:48:48,900 --> 00:48:51,900
That is not a message that you can lose, because if you did, then

1310
00:48:51,900 --> 00:48:55,300
like, multiple people could pick up the same item and so reliable

1311
00:48:55,300 --> 00:48:57,400
ordered protocol works really well.

1312
00:48:57,700 --> 00:48:59,800
The downside to Reliable ordered is

1313
00:49:00,200 --> 00:49:03,100
Like on some devices like in mobile devices, for example, you lose

1314
00:49:03,100 --> 00:49:04,400
those connections all the time, right?

1315
00:49:04,400 --> 00:49:08,600
You're on the bus you go through a tunnel and TCP doesn't survive that

1316
00:49:08,600 --> 00:49:09,300
trip to the tunnel.

1317
00:49:09,300 --> 00:49:12,200
Where's UDP, you know, the phone can keep going, no, really try again.

1318
00:49:12,200 --> 00:49:13,500
I'm here, I'm here, I'm here.

1319
00:49:14,100 --> 00:49:16,300
And so UDP works great for mobile devices.

1320
00:49:16,300 --> 00:49:18,800
If you need like a high bandwidth connection, if you're going to do

1321
00:49:18,800 --> 00:49:23,100
something low bandwidth like you just use a simple restful, interface,

1322
00:49:23,100 --> 00:49:24,000
like HTTP.

1323
00:49:24,100 --> 00:49:25,200
But what happens?

1324
00:49:25,200 --> 00:49:28,600
So TCP connections are not necessarily reliable either, so presumably

1325
00:49:28,600 --> 00:49:29,800
the game kind of has to deal.

1326
00:49:29,900 --> 00:49:31,400
With that state as well.

1327
00:49:31,400 --> 00:49:35,800
And is that, like I said, kind of using the straw man of the the

1328
00:49:35,800 --> 00:49:37,700
browser that can't swim download a file for some reason.

1329
00:49:37,900 --> 00:49:40,800
Is that just basically about, okay, the game just has to be smart

1330
00:49:40,800 --> 00:49:44,000
about checking the connections know if I haven't received anything in

1331
00:49:44,000 --> 00:49:45,100
a certain amount of time kill it.

1332
00:49:45,100 --> 00:49:45,700
Start another one.

1333
00:49:45,700 --> 00:49:50,100
Like how much logic would you say you have to put into making a TCP

1334
00:49:50,100 --> 00:49:51,300
connection work?

1335
00:49:51,300 --> 00:49:54,300
The way it needs to, for a game versus the way it needs to apparently

1336
00:49:54,300 --> 00:49:56,400
for a file browser or web browser?

1337
00:49:56,500 --> 00:49:59,300
Yeah, I mean if you were to look at the socket library for all of our

1338
00:49:59,300 --> 00:49:59,800
servers and

1339
00:50:00,000 --> 00:50:00,100
Fine.

1340
00:50:00,100 --> 00:50:01,800
It's all like the same kind of stuff.

1341
00:50:02,000 --> 00:50:05,900
There's probably 1,000 lines for Windows 95 and 1,000 lines for nt,

1342
00:50:06,000 --> 00:50:06,500
Okay?

1343
00:50:06,500 --> 00:50:08,000
So it's not a huge amount of code.

1344
00:50:08,400 --> 00:50:10,700
I think it's more of a conceptual model that you have when working

1345
00:50:10,700 --> 00:50:11,600
with sockets, okay?

1346
00:50:11,600 --> 00:50:14,000
That you just have to assume that it could break at any moment in

1347
00:50:14,000 --> 00:50:14,800
time, okay?

1348
00:50:14,800 --> 00:50:16,200
And plan for breaking.

1349
00:50:16,400 --> 00:50:20,500
So we had sort of a coding standard in written at which was like,

1350
00:50:20,500 --> 00:50:22,400
don't have functions return failure.

1351
00:50:22,600 --> 00:50:23,800
So don't return Boolean values.

1352
00:50:23,800 --> 00:50:27,200
Like, I failed something went wrong except for a couple of cases.

1353
00:50:27,400 --> 00:50:29,400
One of them is sockets and the other one is files.

1354
00:50:29,400 --> 00:50:29,800
Look like if

1355
00:50:29,900 --> 00:50:32,900
If you open a file like obviously it can fail.

1356
00:50:32,900 --> 00:50:33,300
Yes.

1357
00:50:33,700 --> 00:50:36,400
But like for memory allocation it is succeeds or your program blows

1358
00:50:36,400 --> 00:50:37,100
up, okay?

1359
00:50:37,600 --> 00:50:41,100
You can set a flag saying you know I'd like to know if this would fail

1360
00:50:41,100 --> 00:50:44,600
and then you can I collect robe you don't return null and say well I'm

1361
00:50:44,600 --> 00:50:46,800
sorry I can allocate that Marina and but that code is obviously

1362
00:50:46,800 --> 00:50:48,200
prepared to deal with that failure case.

1363
00:50:48,500 --> 00:50:51,500
The idea is like if you try and load a model file and it doesn't load

1364
00:50:51,500 --> 00:50:52,900
up with the heck are you going to do?

1365
00:50:53,000 --> 00:50:53,300
Okay.

1366
00:50:53,300 --> 00:50:55,400
Well you know you can crash the game but that's not very

1367
00:50:55,400 --> 00:50:56,000
user-friendly.

1368
00:50:56,000 --> 00:50:59,300
So we just show a white box like a six foot square box.

1369
00:50:59,300 --> 00:50:59,800
So you basically

1370
00:51:00,000 --> 00:51:02,400
He's had a case where it's like when we do something that we know we

1371
00:51:02,400 --> 00:51:06,400
can fail, we decode is designed around the fact that that's actually

1372
00:51:06,400 --> 00:51:07,900
just a legal operating condition.

1373
00:51:07,900 --> 00:51:10,200
Like I'll either get this model for I won't.

1374
00:51:10,200 --> 00:51:13,200
It's not it's not an imperative basically right?

1375
00:51:13,200 --> 00:51:15,300
Well, so I'll for the model file always get a model file.

1376
00:51:15,300 --> 00:51:16,500
I can ask if it's valid after.

1377
00:51:16,500 --> 00:51:17,200
Oh okay, I see.

1378
00:51:17,300 --> 00:51:19,900
But for a socket you just have to look at it and go like any moment

1379
00:51:19,900 --> 00:51:20,600
this thing can fail.

1380
00:51:20,600 --> 00:51:23,900
And so what's my you know failure resolution for that?

1381
00:51:24,200 --> 00:51:25,800
And of course, a lot of testing doesn't hurt either.

1382
00:51:26,000 --> 00:51:26,800
Yeah, okay.

1383
00:51:26,800 --> 00:51:29,900
And so so you never really had any misgivings about

1384
00:51:30,000 --> 00:51:32,600
Using TCP, then you felt like that was totally fine as long as you

1385
00:51:32,600 --> 00:51:36,100
architect around the fact that you expect it to maybe go down, go back

1386
00:51:36,100 --> 00:51:36,500
up that certain.

1387
00:51:36,500 --> 00:51:40,000
Yes, although like in practice the thing that really affected us the

1388
00:51:40,000 --> 00:51:43,200
most was you know at any moment in time like somebody's doing

1389
00:51:43,200 --> 00:51:44,900
maintenance on their gear somewhere, okay.

1390
00:51:44,900 --> 00:51:48,000
And so like you know your packets are taking one path like they're

1391
00:51:48,000 --> 00:51:50,500
hopping through 18, different routers to get from your house to the

1392
00:51:50,500 --> 00:51:54,100
servers and you know Gamers play at night maintenance periods or

1393
00:51:54,100 --> 00:51:54,600
tonight.

1394
00:51:54,700 --> 00:51:59,800
And so like the routes change and the or like the, you know, the

1395
00:52:00,000 --> 00:52:02,200
It's publishing our game decides that they're going to do maintenance

1396
00:52:02,200 --> 00:52:06,100
in their Data Center and switch their devices and you would think like

1397
00:52:06,100 --> 00:52:08,600
I mean you know this is in 2005 right?

1398
00:52:08,600 --> 00:52:11,800
Like Cisco had been making routers since the 1980s just that they

1399
00:52:11,800 --> 00:52:13,100
would have had solved this problem.

1400
00:52:13,100 --> 00:52:13,500
All right?

1401
00:52:13,500 --> 00:52:16,300
But there's this thing, it's called, you know, route convergence.

1402
00:52:16,300 --> 00:52:19,700
And like what happens is your router takes like 30 seconds before like

1403
00:52:19,700 --> 00:52:23,600
you have a, okay, an active/passive set of router's, right?

1404
00:52:23,600 --> 00:52:27,100
And this the active gets taken down either by, you know, manual

1405
00:52:27,100 --> 00:52:28,600
control or like it just fails.

1406
00:52:28,600 --> 00:52:29,800
And, yeah, the other was supposed to pick up

1407
00:52:29,900 --> 00:52:32,800
And it takes such a long time that your TCP connections, all get torn

1408
00:52:32,800 --> 00:52:33,300
down.

1409
00:52:33,300 --> 00:52:33,800
Okay?

1410
00:52:33,900 --> 00:52:37,000
And, you know, so you talked to the folks in data center, that's a oh

1411
00:52:37,000 --> 00:52:39,000
yeah, routes are converging the fuck.

1412
00:52:39,000 --> 00:52:41,500
Does that mean, right?

1413
00:52:41,500 --> 00:52:43,800
What it means is that like, you know, seventy thousand players, just

1414
00:52:43,800 --> 00:52:45,900
lost their connection, like half of our users, just lost their

1415
00:52:45,900 --> 00:52:46,300
connection.

1416
00:52:46,300 --> 00:52:49,700
It does sound like something that in a sci-fi film could be about a

1417
00:52:49,700 --> 00:52:50,100
bunch of you.

1418
00:52:50,100 --> 00:52:54,000
Litigate the great convergence is half, its upon us, some some routes

1419
00:52:54,000 --> 00:52:57,800
are getting right, we're going to use UDP then you know you have much

1420
00:52:57,800 --> 00:52:59,800
more control over that process because you

1421
00:53:00,000 --> 00:53:04,300
You can just keep trying and eventually routes will converge and, you

1422
00:53:04,300 --> 00:53:06,100
know, your packets will start getting through again.

1423
00:53:06,400 --> 00:53:09,200
And so why didn't you guys decide to do something?

1424
00:53:09,200 --> 00:53:13,200
Like, for example, use your own, you know, reliable stuff on top of

1425
00:53:13,200 --> 00:53:16,300
UDP or something that just never became that much of an issue or yeah,

1426
00:53:16,500 --> 00:53:19,000
the game worked well enough and like we had plenty of technical

1427
00:53:19,000 --> 00:53:21,500
challenges to solve that weren't that after launch.

1428
00:53:21,500 --> 00:53:21,700
Okay?

1429
00:53:21,700 --> 00:53:24,200
You know, because that problem that really crop up until after launch,

1430
00:53:24,300 --> 00:53:24,600
okay?

1431
00:53:24,600 --> 00:53:27,000
When you know, we started seeing maintenance periods from our

1432
00:53:27,200 --> 00:53:29,800
publisher, I say really can you guys not do that that

1433
00:53:29,900 --> 00:53:33,600
Rex don't change stuff because changing things makes them.

1434
00:53:33,800 --> 00:53:36,900
So, and one more question on that was you were talking about like

1435
00:53:36,900 --> 00:53:39,700
first person shooter versus non or whatever.

1436
00:53:39,800 --> 00:53:43,100
Guild Wars still is kind of an action e game in the sense that I do.

1437
00:53:43,100 --> 00:53:45,400
See people like walking around and doing these sorts of things.

1438
00:53:45,800 --> 00:53:50,800
Why do I not want that sort of UDP likeness for that portion of it?

1439
00:53:50,800 --> 00:53:53,200
Where I'm just sort of sending where guys are and I don't really want

1440
00:53:53,200 --> 00:53:55,900
to know where they were, you know, 30 seconds ago, if that packet got

1441
00:53:55,900 --> 00:53:56,200
dropped.

1442
00:53:56,200 --> 00:53:57,100
I don't care anymore.

1443
00:53:57,700 --> 00:53:59,800
What like was that just not that important or was

1444
00:54:00,000 --> 00:54:04,400
Reasons why for Guild Wars that's not true in the same way.

1445
00:54:04,400 --> 00:54:06,000
Well, so we could have designed the game differently.

1446
00:54:06,000 --> 00:54:09,400
So it was more first person shooter action e but we wanted to make a

1447
00:54:09,400 --> 00:54:11,300
game that was less twitch focused.

1448
00:54:11,300 --> 00:54:13,800
Okay, and so like all these things feed into each other and we had

1449
00:54:13,800 --> 00:54:16,400
lots of different business rationales and gameplay rationales on

1450
00:54:16,400 --> 00:54:20,200
technical rationales that we merge together to form our game and like

1451
00:54:20,200 --> 00:54:21,600
they all sort of overlap with each other.

1452
00:54:21,600 --> 00:54:25,000
So like yeah, we could have done Arrow combat, where are you firing

1453
00:54:25,000 --> 00:54:25,300
our own?

1454
00:54:25,300 --> 00:54:27,600
You have to be aiming the right direction but we decided that was not

1455
00:54:27,600 --> 00:54:29,800
what what the spirit of the game that we were trying to do.

1456
00:54:30,000 --> 00:54:32,700
It was so when you fire an arrow like, you know, you're actually over

1457
00:54:32,700 --> 00:54:34,800
there because you've been running this way and so I don't know that

1458
00:54:34,800 --> 00:54:36,100
yet because of network latency.

1459
00:54:36,100 --> 00:54:39,700
So I fire the arrow and the arrow like it doesn't really do, you know,

1460
00:54:39,700 --> 00:54:41,700
doesn't really curve in space but like conceptually.

1461
00:54:41,700 --> 00:54:42,200
That's what it's do.

1462
00:54:42,200 --> 00:54:43,100
Even if you can't see it, right?

1463
00:54:43,100 --> 00:54:45,800
Because on my system, you're standing over there, I fire it hits you

1464
00:54:45,900 --> 00:54:47,300
but really you're standing over there.

1465
00:54:47,300 --> 00:54:51,500
So you know, you see me in a different place, the musical thing on

1466
00:54:51,500 --> 00:54:52,700
your system, it looks one way.

1467
00:54:52,700 --> 00:54:55,500
And my system looks another, the same resolution happens right at the

1468
00:54:55,500 --> 00:54:55,700
point.

1469
00:54:55,700 --> 00:54:58,500
The arrows fired, we decide whether it's going to hit or not has

1470
00:54:58,500 --> 00:54:59,800
nothing to do with motion and as

1471
00:55:00,000 --> 00:55:01,100
Was that's a good.

1472
00:55:01,200 --> 00:55:01,600
Let's see.

1473
00:55:01,600 --> 00:55:05,600
We like I said we're super low in time, unfortunately, but so I

1474
00:55:05,600 --> 00:55:07,700
suppose that's a good thing to tie it back to the earlier games as

1475
00:55:07,700 --> 00:55:08,000
well.

1476
00:55:08,000 --> 00:55:12,300
So we haven't talked much about how the architecture works for the

1477
00:55:12,300 --> 00:55:14,000
actual gameplay inside, Guild Wars.

1478
00:55:14,100 --> 00:55:18,400
So it sounds like this is maybe sort of a hybrid of the two.

1479
00:55:18,400 --> 00:55:21,400
In some sense meaning it's like a little bit of lockstep because we're

1480
00:55:21,400 --> 00:55:22,400
going through a server now.

1481
00:55:22,400 --> 00:55:25,100
So obviously everything's getting resolved in one place, which is a

1482
00:55:25,100 --> 00:55:26,500
little bit more like a lox that sort of thing.

1483
00:55:26,500 --> 00:55:29,800
But it's also very asynchronous in the sense that what the clients see

1484
00:55:29,900 --> 00:55:33,700
These is sort of just trying to represent what it got from the server

1485
00:55:33,700 --> 00:55:34,300
in some way.

1486
00:55:34,300 --> 00:55:36,900
So can you talk a little bit about how you decide to do that and was

1487
00:55:36,900 --> 00:55:39,900
that informed a lot by sort of experience with Warcraft, Diablo

1488
00:55:39,900 --> 00:55:41,300
Starcraft, right?

1489
00:55:41,300 --> 00:55:43,600
So you know in Guild Wars, what happens is.

1490
00:55:43,600 --> 00:55:46,400
The server is authoritative for any important decisions, like where

1491
00:55:46,400 --> 00:55:51,000
players are actually located who owns, Which items but clients do

1492
00:55:51,000 --> 00:55:54,600
their best to model that in a way that seems seamless to users.

1493
00:55:54,900 --> 00:55:56,900
So if I start walking, I don't have to go and ask the server.

1494
00:55:56,900 --> 00:55:57,400
It, is it okay?

1495
00:55:57,400 --> 00:55:59,500
If I walk over here, I already know all the Collision

1496
00:56:00,200 --> 00:56:02,700
That's local to my system, I know where all the players are and I know

1497
00:56:02,700 --> 00:56:04,300
where all the objects in the world are.

1498
00:56:04,500 --> 00:56:08,200
And so I can effectively, you know, perform pathfinding around those

1499
00:56:08,200 --> 00:56:09,500
things, you know.

1500
00:56:09,500 --> 00:56:12,800
And like if I bump into a wall, my local client will tell me, you

1501
00:56:12,800 --> 00:56:15,600
know, back up a little bit or, you know, you can't interpenetrate that

1502
00:56:15,600 --> 00:56:19,300
wall and, you know, I'm telling the server the whole time while I'm

1503
00:56:19,300 --> 00:56:22,900
doing this and the server's telling me what is actually true, so it

1504
00:56:22,900 --> 00:56:24,300
can provide modifications.

1505
00:56:24,300 --> 00:56:28,400
So, if there are a bunch of people standing in my way, you know, and I

1506
00:56:28,400 --> 00:56:29,800
didn't quite know that that was true.

1507
00:56:29,900 --> 00:56:32,300
It because they all sort of formed a wall right before the quick clasp

1508
00:56:32,300 --> 00:56:32,800
through.

1509
00:56:33,000 --> 00:56:36,200
Then you know in my system I might actually have to teleport back a

1510
00:56:36,200 --> 00:56:39,000
little bit but by and large the rate of communication that you have

1511
00:56:39,000 --> 00:56:41,300
with the server is high enough that you don't see those artifacts,

1512
00:56:41,500 --> 00:56:41,700
okay?

1513
00:56:41,700 --> 00:56:43,600
But if you did and the server just says, nope.

1514
00:56:44,000 --> 00:56:45,800
I'm telling the truth, you have to move back.

1515
00:56:46,000 --> 00:56:50,700
Okay, so basically you sort of have a model where the the client side

1516
00:56:50,700 --> 00:56:54,700
is effectively running the game as much as it can, run the game and

1517
00:56:54,700 --> 00:56:55,500
it's getting it.

1518
00:56:55,500 --> 00:56:59,500
What are amount to Corrections from the server as to like, hey, yeah,

1519
00:56:59,500 --> 00:56:59,800
you

1520
00:57:00,100 --> 00:57:02,600
There and I understand you drew that but that was wrong.

1521
00:57:02,600 --> 00:57:05,900
So you know, move the guy back and like correct the sort of state that

1522
00:57:05,900 --> 00:57:06,200
sort of thing.

1523
00:57:06,200 --> 00:57:08,300
That's right or you know if you want to pick up an item then what

1524
00:57:08,300 --> 00:57:11,300
happens is you initiate the pickup request and now you have an

1525
00:57:11,300 --> 00:57:14,200
animation sequence that like takes a while to get it done.

1526
00:57:14,200 --> 00:57:16,500
So that the likelihood is that the round-trip to the server has

1527
00:57:16,500 --> 00:57:17,400
already elapsed.

1528
00:57:17,600 --> 00:57:22,100
So, you know, it's not like you pick up something instantaneously and

1529
00:57:22,100 --> 00:57:23,900
it disappears in this like, oh wait, you didn't get it.

1530
00:57:24,400 --> 00:57:27,100
It takes a while and like, it could disappear before you pick up the

1531
00:57:27,100 --> 00:57:29,800
object and how does that sort of thing like

1532
00:57:30,000 --> 00:57:31,500
What's it like programming?

1533
00:57:31,500 --> 00:57:34,600
With that understanding in general, like do you find that?

1534
00:57:34,600 --> 00:57:39,000
There's do you find that that's a completely new process every time?

1535
00:57:39,000 --> 00:57:42,000
Or is there a certain systemic nature to that program?

1536
00:57:42,000 --> 00:57:43,800
You like do I have to think about it?

1537
00:57:43,800 --> 00:57:45,600
When I write the code to pick up the object?

1538
00:57:45,600 --> 00:57:47,000
Or is there more of a system that I did?

1539
00:57:47,000 --> 00:57:49,400
Like how can you give a little bit of a perfect, but how that works

1540
00:57:49,400 --> 00:57:51,600
when I'm writing the code that's different from if I wasn't doing that

1541
00:57:51,600 --> 00:57:51,900
working?

1542
00:57:52,000 --> 00:57:54,000
Yeah, so there's two things that I think are really helpful.

1543
00:57:54,000 --> 00:57:57,100
One is to model everything as if it takes a minute to do each action,

1544
00:57:57,100 --> 00:57:57,400
okay?

1545
00:57:57,500 --> 00:57:59,800
But, you know, like like a ridiculous amount of round trip.

1546
00:58:00,300 --> 00:58:01,200
Or an hour, right?

1547
00:58:01,200 --> 00:58:03,200
Because you start to think about the problem differently, right?

1548
00:58:03,200 --> 00:58:04,800
It's like, I have to ask the server something.

1549
00:58:04,800 --> 00:58:06,700
Well, every time I do that, it takes a minute round-trip.

1550
00:58:06,700 --> 00:58:08,800
And you start thinking about like, oh well, there's a lot of failure

1551
00:58:08,800 --> 00:58:11,200
cases in there, so many could pick it up in that interval of time.

1552
00:58:12,300 --> 00:58:14,100
So what am I going to do about that?

1553
00:58:14,100 --> 00:58:15,900
And, and so, it helps think about problems differently.

1554
00:58:15,900 --> 00:58:19,100
The other is that you should inject simulated latency in your servers.

1555
00:58:19,100 --> 00:58:21,900
And in fact, you should not run servers locally, you know, in your

1556
00:58:21,900 --> 00:58:24,600
office like since most people doing cloud-based games these days,

1557
00:58:24,600 --> 00:58:26,000
that's not so much an issue.

1558
00:58:26,300 --> 00:58:29,100
But even then like look at your service far away or if you have a code

1559
00:58:29,100 --> 00:58:29,800
budget for it, then

1560
00:58:29,900 --> 00:58:34,200
Go put in simulated latency so that and especially simulated Jitter

1561
00:58:34,700 --> 00:58:37,600
resiliency changes over time like some of this really quick, sometimes

1562
00:58:37,600 --> 00:58:38,400
it's really long.

1563
00:58:38,400 --> 00:58:39,000
That's right.

1564
00:58:39,000 --> 00:58:42,400
So a minimum of 200 milliseconds, like, for the last time we worked on

1565
00:58:42,400 --> 00:58:46,300
we were using 200 and 250 to 500 milliseconds.

1566
00:58:46,300 --> 00:58:46,700
Okay.

1567
00:58:46,700 --> 00:58:48,600
So there was a lot of Jitter in there, okay.

1568
00:58:48,600 --> 00:58:51,700
And that really helped like because you could feel like when the

1569
00:58:51,700 --> 00:58:54,600
problem showed up, I say like, you know, if you click on a button and

1570
00:58:54,600 --> 00:58:55,800
then nothing happens.

1571
00:58:57,000 --> 00:59:00,400
I think I need to, you know, the dialogue, the user interaction.

1572
00:59:00,400 --> 00:59:01,300
First off, has to change.

1573
00:59:01,300 --> 00:59:03,500
Like, when I click a button, something should happen on the local

1574
00:59:03,500 --> 00:59:07,900
system that indicates that I've accomplished that action, and then,

1575
00:59:09,000 --> 00:59:12,600
you know, and like many of the dialogue changes now, like, I'm trying

1576
00:59:12,600 --> 00:59:16,500
to do something else and that way, you know, you don't have the stall

1577
00:59:16,500 --> 00:59:18,300
where their client feels unresponsive.

1578
00:59:18,300 --> 00:59:22,800
So you would say that pretty much all of the code that's gameplay, you

1579
00:59:22,800 --> 00:59:26,000
know, user-facing and kinds of code at that point, pretty much.

1580
00:59:26,100 --> 00:59:27,300
All gets written with the network.

1581
00:59:27,300 --> 00:59:30,600
In mind, it's not really a separate thing where, you know, like, for

1582
00:59:30,600 --> 00:59:33,400
example in the warcraft one where you could almost imagine it being

1583
00:59:33,400 --> 00:59:36,400
separate two, separate systems that don't really have to think that

1584
00:59:36,400 --> 00:59:37,300
hard about each other.

1585
00:59:37,400 --> 00:59:39,800
In this case, it's like know if you're a gameplay coder on this thing,

1586
00:59:39,800 --> 00:59:42,900
you need to think about how that works and that's just part of your

1587
00:59:42,900 --> 00:59:44,400
day-to-day writing the code.

1588
00:59:44,400 --> 00:59:45,100
Absolutely.

1589
00:59:45,200 --> 00:59:45,600
Okay.

1590
00:59:46,500 --> 00:59:48,500
So let's, let's see here.

1591
00:59:48,700 --> 00:59:50,000
Yeah man.

1592
00:59:50,100 --> 00:59:54,800
We need, we need like another hour so I guess I'll just just quickly

1593
00:59:54,800 --> 00:59:56,000
mention some of these things that you

1594
00:59:56,100 --> 00:59:59,400
Sort of said before, and you can see if maybe you can give a little

1595
00:59:59,400 --> 00:59:59,800
bit of background.

1596
01:00:00,000 --> 01:00:04,500
So, some of the things that you talked about, like, in the email that

1597
01:00:04,600 --> 01:00:07,800
that you sent me, was, like, things we could talk about, you, sort of

1598
01:00:07,800 --> 01:00:10,600
talked about stuff, like, hacking, and encryption, and these sorts of

1599
01:00:10,600 --> 01:00:12,600
things and peer-to-peer versus server as like sort of.

1600
01:00:12,600 --> 01:00:17,500
And then there was like, you know, OS choice for for, you know, where

1601
01:00:17,500 --> 01:00:19,700
you're going to be Linux or Windows for hosting the server and all

1602
01:00:19,700 --> 01:00:20,100
these things.

1603
01:00:20,600 --> 01:00:25,300
So, I guess my, my sort of broad question on that stuff is there's a

1604
01:00:25,300 --> 01:00:27,200
tremendous amount of new things.

1605
01:00:27,200 --> 01:00:29,600
You kind of have to think about if you want to do one of these games.

1606
01:00:30,300 --> 01:00:32,400
Is there a particular resource?

1607
01:00:32,400 --> 01:00:36,600
Like, I don't know if maybe, like you said, you did a talk on one of

1608
01:00:36,600 --> 01:00:39,400
these at one point but like, has anyone compiled sort of like things,

1609
01:00:39,400 --> 01:00:42,800
you should think about your network game, from some experts, they kind

1610
01:00:42,800 --> 01:00:43,600
of just go through.

1611
01:00:43,600 --> 01:00:46,400
Like, you know, it's not trying to tell you how everything needs to

1612
01:00:46,400 --> 01:00:48,800
do, but it's bringing up all of the points.

1613
01:00:48,800 --> 01:00:50,700
So, you know, you should think about all these things because there

1614
01:00:50,700 --> 01:00:52,800
were things on that list I'd never even heard of before, right?

1615
01:00:52,800 --> 01:00:53,300
Yeah.

1616
01:00:53,800 --> 01:00:58,000
What, where would you start point you to a specific blog or or a book,

1617
01:00:58,000 --> 01:00:59,400
but they do exist out there.

1618
01:00:59,400 --> 01:00:59,800
Okay?

1619
01:01:00,300 --> 01:01:02,700
You just have to look for like Game Network programming and other

1620
01:01:02,900 --> 01:01:04,000
issues to get raised.

1621
01:01:04,000 --> 01:01:06,600
Okay, I mean, I think the biggest thing to be aware of is that

1622
01:01:06,600 --> 01:01:10,800
whatever you create will be hacked, because some people really enjoy

1623
01:01:10,800 --> 01:01:11,800
the process of hacking.

1624
01:01:11,800 --> 01:01:15,000
And so, their game is, you know, different from what you think you're

1625
01:01:15,000 --> 01:01:16,200
selling, right, right.

1626
01:01:16,900 --> 01:01:19,600
You know, like, some people like to grief, like if you don't take

1627
01:01:19,600 --> 01:01:23,100
griefing into account in your game and it can be griefing your players

1628
01:01:23,100 --> 01:01:27,000
or can be, you know, griefing you the the game operator, right?

1629
01:01:27,000 --> 01:01:28,300
Like when they take down your database?

1630
01:01:28,400 --> 01:01:29,200
Yeah, for fun.

1631
01:01:29,200 --> 01:01:29,700
Yeah.

1632
01:01:30,400 --> 01:01:33,500
So like you have to think about rate-limiting so that people can't try

1633
01:01:33,500 --> 01:01:36,300
and do too much stuff at one time you have to think about like the

1634
01:01:36,300 --> 01:01:39,700
interaction model so that I can't get my guilt together and we can all

1635
01:01:39,700 --> 01:01:41,300
like attack you at one time.

1636
01:01:41,300 --> 01:01:45,700
With whisper messages in like push you off the internet, I say you

1637
01:01:45,700 --> 01:01:50,300
know like you don't want to expose other players IP addresses because

1638
01:01:50,300 --> 01:01:52,800
you know in the old days like I could send you the Ping of death and

1639
01:01:52,800 --> 01:01:56,200
kill your computer ping of death, the Ping of death.

1640
01:01:56,200 --> 01:01:58,600
I would send you an icmp packet that would cause your computer your

1641
01:01:58,600 --> 01:01:59,800
Windows computer to crash.

1642
01:02:00,500 --> 01:02:01,200
Good stuff.

1643
01:02:02,800 --> 01:02:04,600
How many, how many players can you do that to you today?

1644
01:02:04,700 --> 01:02:08,200
Yeah, you know, like for example, we had a bug in Guild Wars chat

1645
01:02:08,200 --> 01:02:11,400
system at one point where we had these color codes that you could send

1646
01:02:11,400 --> 01:02:13,300
along but it wasn't perfectly validated.

1647
01:02:13,300 --> 01:02:15,600
And so there's a color code that you could use that would if you sent

1648
01:02:15,600 --> 01:02:17,700
that color code, it would cause clients to crash.

1649
01:02:17,700 --> 01:02:18,000
Okay?

1650
01:02:18,000 --> 01:02:20,600
And so, all the sudden we started seeing like this, like, weird

1651
01:02:20,600 --> 01:02:24,500
effects in our concurrency graph and we would get alerts like, you

1652
01:02:24,500 --> 01:02:25,900
know, something's going wrong.

1653
01:02:25,900 --> 01:02:28,700
Like, lots of players are disconnecting, like our concurrency isn't

1654
01:02:28,700 --> 01:02:29,100
stable.

1655
01:02:29,500 --> 01:02:29,800
And we're

1656
01:02:29,900 --> 01:02:32,200
Also getting lots of crash reports, you have really good crash

1657
01:02:32,200 --> 01:02:33,700
reporting for your pregame, right?

1658
01:02:33,700 --> 01:02:35,700
So we'd see stack dumps of what was going on.

1659
01:02:35,900 --> 01:02:38,600
We were able to immediately look at it and go Oh look The text

1660
01:02:38,600 --> 01:02:43,000
processor is crashing and so like oh we're you know we were able to

1661
01:02:43,000 --> 01:02:46,800
figure out really quickly so many sending data that's not valid patch.

1662
01:02:46,800 --> 01:02:48,800
The game, five minutes later we have a new build of the game out in

1663
01:02:48,800 --> 01:02:49,800
the problems fixed.

1664
01:02:49,800 --> 01:02:50,400
Okay, right.

1665
01:02:50,400 --> 01:02:52,600
So that's again where iteration speed is really important, but like,

1666
01:02:52,600 --> 01:02:55,000
in literally everything you do you have to think about the griefing

1667
01:02:55,000 --> 01:02:57,400
and hacking aspects of it because that's something that happens with

1668
01:02:57,400 --> 01:02:57,900
Network games.

1669
01:02:57,900 --> 01:02:59,800
Really just doesn't happen anywhere else because if someone wants to

1670
01:03:00,000 --> 01:03:03,500
Run game that they're playing single player that's just fine, right?

1671
01:03:03,500 --> 01:03:04,400
It's like there's no problem.

1672
01:03:04,400 --> 01:03:07,000
But once you do Network, you kind of open this hole.

1673
01:03:07,100 --> 01:03:07,500
Yeah.

1674
01:03:07,500 --> 01:03:10,000
And even more than that, it's the responsibility of the programmers

1675
01:03:10,000 --> 01:03:12,300
and designers there is no legal recourse, you have, right?

1676
01:03:12,300 --> 01:03:14,800
Because the players can be living overseas or right could be under

1677
01:03:14,800 --> 01:03:16,100
agency, can't stop, right?

1678
01:03:16,100 --> 01:03:18,800
So like the worst hacker we ever had in Guild Wars was like this 15

1679
01:03:18,800 --> 01:03:21,700
year old kid named Pablo from France and you know like Pablo from

1680
01:03:21,700 --> 01:03:25,600
France, we were able to identify him and like we talked to his parents

1681
01:03:25,600 --> 01:03:28,900
from time to time but he never stopped.

1682
01:03:31,000 --> 01:03:32,400
How does that phone call go?

1683
01:03:32,400 --> 01:03:32,800
Yeah.

1684
01:03:33,300 --> 01:03:36,000
It was really really, like little Pablo to stop taking down the Guild

1685
01:03:36,000 --> 01:03:38,500
Wars or almost she was making too damn much money.

1686
01:03:38,800 --> 01:03:42,400
So you know, like he could sell items online but the thing is, we

1687
01:03:42,400 --> 01:03:45,000
started watching really closely and watching what his interactions

1688
01:03:45,000 --> 01:03:48,000
with the game work, we're able to identify bugs before he could really

1689
01:03:48,200 --> 01:03:49,600
take advantage of them in a big way.

1690
01:03:52,300 --> 01:03:52,800
Okay.

1691
01:03:53,500 --> 01:03:56,900
So I think we're just about out of time.

1692
01:03:56,900 --> 01:03:59,900
So I before we finish, I want

1693
01:03:59,900 --> 01:04:01,100
Other leave time for.

1694
01:04:01,100 --> 01:04:05,500
You told me you walked up here, right before you were going to start

1695
01:04:05,500 --> 01:04:05,800
talking.

1696
01:04:05,800 --> 01:04:08,400
And you said, you want to say something about, how do I get a job in

1697
01:04:08,400 --> 01:04:09,000
the game industry?

1698
01:04:09,000 --> 01:04:10,600
Because I had asked Mike about that.

1699
01:04:10,800 --> 01:04:12,000
Is you had something you want to say.

1700
01:04:12,000 --> 01:04:13,200
So we've got time.

1701
01:04:13,700 --> 01:04:14,800
Sure, what did you want that?

1702
01:04:14,800 --> 01:04:16,400
So, I mean, it's the number one question I get asked.

1703
01:04:16,400 --> 01:04:18,600
So I figured rather than like everybody rushing down here, like

1704
01:04:18,600 --> 01:04:20,400
afterwards and hitting up all of us about how to get a job.

1705
01:04:20,400 --> 01:04:23,700
I'd talk about what I think are the right things to do.

1706
01:04:24,600 --> 01:04:26,700
You know, number one, I mean, I think the game is free is great

1707
01:04:26,700 --> 01:04:29,700
because I worked here for so many years but I think

1708
01:04:30,200 --> 01:04:32,800
Like the one thing that people really need to have is demonstrable

1709
01:04:32,800 --> 01:04:35,300
passion and so, passion is an excitement for stuff.

1710
01:04:35,300 --> 01:04:38,600
I mean, it sort of relates to the Curiosity that Microsoft about, but

1711
01:04:38,800 --> 01:04:41,400
demonstrable means that you have something that you can show and it

1712
01:04:41,400 --> 01:04:42,100
doesn't have to be a game.

1713
01:04:42,100 --> 01:04:44,400
But if we, like here's some code that I wrote that wasn't just for a

1714
01:04:44,400 --> 01:04:47,700
class project or something, or if your designer, like, here's this

1715
01:04:47,700 --> 01:04:51,600
level I designed in, you know, whatever, Half-Life 2 like my own level

1716
01:04:51,600 --> 01:04:54,000
that I did that, nobody else participated at all.

1717
01:04:54,000 --> 01:04:55,900
And look at all these cool things I did and I could talk about and

1718
01:04:55,900 --> 01:04:58,200
it's great stuff that you can bring to you and talk about in the

1719
01:04:58,200 --> 01:04:58,800
interview.

1720
01:05:00,000 --> 01:05:03,000
Shows that, you know, you haven't us, just on your schoolwork.

1721
01:05:03,500 --> 01:05:06,000
I've interviewed tons of people and they always, say, not, not all

1722
01:05:06,000 --> 01:05:08,500
them, like a bunch of people say, well, you know, I was so busy with

1723
01:05:08,500 --> 01:05:08,800
school.

1724
01:05:08,800 --> 01:05:11,600
I just didn't have time to do extracurricular activities, like writing

1725
01:05:11,600 --> 01:05:16,700
code bullshit, you know, we always say my hours in the day and we just

1726
01:05:16,700 --> 01:05:18,800
choose what we want to do and it can be watching TV or hanging out

1727
01:05:18,800 --> 01:05:19,400
with friends or whatever.

1728
01:05:19,400 --> 01:05:21,800
But if you're really passionate and you want to be successful at

1729
01:05:21,800 --> 01:05:23,900
something, you know, when you're early in your career,

1730
01:05:30,900 --> 01:05:34,900
all right, then, you know, you have to find a way to demonstrate that.

1731
01:05:36,300 --> 01:05:38,600
So I think that really helps a lot and you can also contribute to

1732
01:05:38,600 --> 01:05:41,400
other people's projects, but I think that that's, it's harder to

1733
01:05:41,400 --> 01:05:42,100
demonstrate like.

1734
01:05:42,100 --> 01:05:43,400
Well, this is what I did.

1735
01:05:45,100 --> 01:05:48,500
And, you know, like looking at hiring like, you know, a lot of people

1736
01:05:48,500 --> 01:05:51,500
have tried programming tests, and whiteboard tests and things, but

1737
01:05:51,900 --> 01:05:55,500
unlike the financial industry, past performance is a predictor of

1738
01:05:55,500 --> 01:05:56,700
future success, okay?

1739
01:05:56,800 --> 01:05:59,800
And so, the best way to hire is to look back,

1740
01:06:00,000 --> 01:06:02,300
Somebody's done in the past because that is the best predictor of what

1741
01:06:02,300 --> 01:06:04,800
they will do in the future Beyond any other thing that you can do,

1742
01:06:04,900 --> 01:06:05,300
okay?

1743
01:06:05,800 --> 01:06:09,800
So demonstrate that you've done something, I also like coding

1744
01:06:09,800 --> 01:06:13,400
interviews are really hard like just about any company you go to like,

1745
01:06:13,400 --> 01:06:16,400
any bigger company, is going to have a really hard coding test.

1746
01:06:16,400 --> 01:06:17,600
They're going to grill you all day long.

1747
01:06:17,900 --> 01:06:18,800
There's a great book for this.

1748
01:06:18,800 --> 01:06:20,400
It's called cracking the coding interview.

1749
01:06:20,600 --> 01:06:23,400
And if you can just solve every problem in that book, you'll get a job

1750
01:06:23,400 --> 01:06:24,400
anywhere you want.

1751
01:06:24,500 --> 01:06:25,900
And so like, it's funny.

1752
01:06:25,900 --> 01:06:28,500
But like people go to college for, you know, for years or something

1753
01:06:28,500 --> 01:06:29,200
like that.

1754
01:06:29,400 --> 01:06:29,800
And then there,

1755
01:06:30,000 --> 01:06:32,800
Like well I maybe I'll study little bit for the interview know like

1756
01:06:32,800 --> 01:06:35,700
the interview is the most critical thing you can do to get a job at

1757
01:06:35,700 --> 01:06:36,800
the place that you want.

1758
01:06:36,800 --> 01:06:39,300
So treat it like it's a college course and put like a month into that

1759
01:06:39,300 --> 01:06:41,600
book and solve every single problem in the book, right?

1760
01:06:41,600 --> 01:06:45,500
Then and then you get a job anywhere I guess I didn't know that there

1761
01:06:45,500 --> 01:06:49,000
is a such a these would these be applicable to game companies even

1762
01:06:49,000 --> 01:06:50,800
though I mean absolutely, really, okay.

1763
01:06:50,800 --> 01:06:53,900
All the stuff is the kind of questions that Amazon, Google Facebook.

1764
01:06:53,900 --> 01:06:54,700
Okay, soft.

1765
01:06:54,700 --> 01:06:56,800
Ask ask, but what about companies?

1766
01:06:56,800 --> 01:06:59,500
You know, for example companies, I've worked at to like reading that I

1767
01:06:59,500 --> 01:06:59,800
wrote the code.

1768
01:07:00,000 --> 01:07:02,000
In test there and it's because, you know, some of the problems are

1769
01:07:02,000 --> 01:07:02,800
very similar similar.

1770
01:07:03,100 --> 01:07:05,600
So you think it kind of does map well, even across the board?

1771
01:07:05,700 --> 01:07:08,000
Yeah, like, you know, the kind of stuff we need to reverse a linked

1772
01:07:08,000 --> 01:07:10,700
list in place singly linked list in place right now.

1773
01:07:10,800 --> 01:07:12,300
Stuff like that is really common.

1774
01:07:12,400 --> 01:07:12,800
Okay.

1775
01:07:13,400 --> 01:07:14,400
Well I think that's it.

1776
01:07:14,400 --> 01:07:15,900
Thank you so much for talking with us about.

1777
01:07:15,900 --> 01:07:17,100
That was that was fantastic.

1778
01:07:17,100 --> 01:07:17,600
I would be

