1
00:00:00,000 --> 00:00:00,800
Still recording.

2
00:00:02,900 --> 00:00:05,000
Hello everyone, and welcome to handmade hero.

3
00:00:05,000 --> 00:00:10,600
The show we could complete game live on stream on Twitch and before we

4
00:00:10,600 --> 00:00:13,500
get started today, I obviously want to mention for anyone who has not

5
00:00:13,500 --> 00:00:14,600
already heard the news.

6
00:00:14,600 --> 00:00:20,100
We are very, very excited to announce that we are going to be having

7
00:00:20,100 --> 00:00:23,800
convention for handmade hero and you can actually find out more about

8
00:00:23,800 --> 00:00:24,000
it.

9
00:00:24,000 --> 00:00:27,800
You can, you can really just type handmade con dot-org into your

10
00:00:27,800 --> 00:00:31,800
browser and hit return and it will take you directly to whatever the

11
00:00:31,800 --> 00:00:32,900
latest post about it.

12
00:00:33,000 --> 00:00:36,600
Is we just put up the very first post about it which is kind of like

13
00:00:36,600 --> 00:00:37,900
our save the date post.

14
00:00:38,100 --> 00:00:41,500
It lets you know when it is you can buy tickets if you want to at the

15
00:00:41,500 --> 00:00:46,600
early bird kind of price, early, registration price and it tells you

16
00:00:46,600 --> 00:00:49,700
kind of where it is and when it is in case you want to, you know, if

17
00:00:49,700 --> 00:00:52,000
you know it something you're definitely going to want to attend.

18
00:00:52,400 --> 00:00:56,800
You can plan your trip already and get everything all set and what

19
00:00:56,800 --> 00:01:01,800
we'll be doing over the next month or the month of October is will be

20
00:01:01,800 --> 00:01:02,600
posting.

21
00:01:02,900 --> 00:01:04,599
At least two more blog posts.

22
00:01:05,300 --> 00:01:07,900
I don't know if I think that might cover just about everything will

23
00:01:07,900 --> 00:01:10,400
posting to more blog posts with quite a bit more information about it,

24
00:01:10,400 --> 00:01:13,700
one will be the complete speaker list for handmade hero.

25
00:01:14,500 --> 00:01:20,200
Con 2015, which the the sort of set up for the conference is going to

26
00:01:20,200 --> 00:01:21,300
be very specifically.

27
00:01:22,400 --> 00:01:25,200
It's going to be quite different from what a typical programming

28
00:01:25,200 --> 00:01:28,400
conference consists of, instead of sort of a series of lectures where

29
00:01:28,400 --> 00:01:30,800
someone gets up and go, you know, run through a PowerPoint

30
00:01:30,800 --> 00:01:32,800
presentation, slide at a time.

31
00:01:33,600 --> 00:01:35,300
It's going to be the opposite of that.

32
00:01:35,400 --> 00:01:39,800
What we're going to do instead is we're going to essentially take the

33
00:01:39,800 --> 00:01:43,400
the people who are going to be the speakers at it quote, unquote.

34
00:01:43,400 --> 00:01:46,400
And I say that because it's a weird term when you say speakers like

35
00:01:46,400 --> 00:01:50,300
obviously lots of people speak at a convention but basically the guest

36
00:01:50,300 --> 00:01:52,000
of honor, let's say right?

37
00:01:53,200 --> 00:01:58,900
And what we're going to do is I am going to sort of act as the person

38
00:01:59,000 --> 00:02:02,600
who is going to talk to them about their past projects, their current

39
00:02:02,900 --> 00:02:06,800
At their future projects, the programming involved with them, what,

40
00:02:06,800 --> 00:02:09,100
you know, what were some of the most interesting problems they face?

41
00:02:09,100 --> 00:02:09,900
How do they solve them?

42
00:02:09,900 --> 00:02:15,800
That sort of thing and it's designed to recreate sort of the more sort

43
00:02:15,800 --> 00:02:17,000
of what I would say.

44
00:02:17,100 --> 00:02:20,500
The more intimate or interesting way that programming knowledge

45
00:02:20,500 --> 00:02:21,600
actually gets shared.

46
00:02:21,700 --> 00:02:24,700
When you go out to dinner with somebody who's, you know, you know, a

47
00:02:24,700 --> 00:02:27,900
really great program or something else or you happen to meet them at a

48
00:02:27,900 --> 00:02:30,800
conference you know, at the bar something like this and you strike up

49
00:02:30,800 --> 00:02:32,700
a conversation and you actually get to talk to them.

50
00:02:32,900 --> 00:02:37,100
About like it's sort of an interactive way the stuff they work on and

51
00:02:37,100 --> 00:02:37,600
to ask questions.

52
00:02:37,600 --> 00:02:38,500
Dynamically.

53
00:02:38,500 --> 00:02:41,500
And so the whole thing is kind of like a more real more direct

54
00:02:41,500 --> 00:02:41,900
experience.

55
00:02:41,900 --> 00:02:44,900
It's not passing through this filter of somebody.

56
00:02:44,900 --> 00:02:48,300
Spend a lot of time like thinking about slides and making bullet

57
00:02:48,300 --> 00:02:52,400
points, and kind of like cramming sort of the way their brain

58
00:02:52,400 --> 00:02:55,400
naturally works and naturally explains things into this sort of like

59
00:02:55,400 --> 00:02:56,600
weird awkward format.

60
00:02:56,600 --> 00:02:59,900
And so again, the goal is to really kind of

61
00:03:00,000 --> 00:03:02,400
Have it be much more of a like kind of session where you can kind of

62
00:03:02,400 --> 00:03:07,000
drill down into things and let you know, sort of the natural way that

63
00:03:07,000 --> 00:03:10,100
people think about things and talk about things come out and my

64
00:03:10,100 --> 00:03:15,200
reasoning for that is just because I've always found that it's so much

65
00:03:15,200 --> 00:03:20,700
more useful and interesting for me when I have been able to talk to

66
00:03:20,700 --> 00:03:22,000
Great developers that way.

67
00:03:22,600 --> 00:03:27,000
And I always feel like there's a tremendous amount lost when I go,

68
00:03:27,000 --> 00:03:29,800
listen to lectures by the same people.

69
00:03:30,700 --> 00:03:34,800
Because it just doesn't have the fluidity and the speed and the

70
00:03:34,800 --> 00:03:39,100
interesting sort of like directness when the person is just able to

71
00:03:39,100 --> 00:03:41,400
talk about what it was that they did.

72
00:03:41,400 --> 00:03:45,600
And have, you know, a an inquisitive person on the other end to direct

73
00:03:45,600 --> 00:03:48,600
that towards like the really interesting Parts than the confusing

74
00:03:48,600 --> 00:03:51,500
parts of it that they want to know more about, right?

75
00:03:52,600 --> 00:03:57,500
So I've designed the cover that kind of around that and I'm really

76
00:03:57,500 --> 00:03:59,800
excited about it because I've never really seen it.

77
00:04:00,100 --> 00:04:03,000
That much before there are kind of models of this, a little bit.

78
00:04:03,000 --> 00:04:05,900
There's some things that I've seen where people have done, sort of

79
00:04:05,900 --> 00:04:07,600
like interview style, things like this.

80
00:04:08,700 --> 00:04:11,500
But never quite in the way that I kind of had hoped and certainly

81
00:04:11,500 --> 00:04:14,700
never for programming, but I've seen, so I'm pretty excited to try it.

82
00:04:14,700 --> 00:04:17,899
I think it's going to be pretty interesting and the other thing that I

83
00:04:17,899 --> 00:04:21,300
think that it does, which is is pretty important.

84
00:04:21,399 --> 00:04:28,700
Is it also allows us to potentially talk to people who we wouldn't,

85
00:04:28,700 --> 00:04:29,800
ordinarily be able to talk to you.

86
00:04:29,900 --> 00:04:34,300
Because their schedules are too busy, you know, or, you know, a small

87
00:04:34,300 --> 00:04:37,300
calm, like handmade con wouldn't be worth their time to it to do all

88
00:04:37,300 --> 00:04:39,600
the prep for something like this, you know?

89
00:04:39,700 --> 00:04:43,900
Because it's a small interactive thing where they just come and they

90
00:04:43,900 --> 00:04:47,800
be themselves and you know, they talk or you know, people who don't

91
00:04:47,800 --> 00:04:50,400
like public speaking, you know, or don't know how to prepare a

92
00:04:50,400 --> 00:04:53,800
presentation, but our great programmers and people that we want to

93
00:04:53,800 --> 00:04:57,700
hear from it, also allows us to to talk to people like that too.

94
00:04:57,900 --> 00:04:58,400
Right?

95
00:04:58,500 --> 00:04:59,800
So it means that now,

96
00:05:00,000 --> 00:05:01,300
Like it can be.

97
00:05:01,500 --> 00:05:06,200
It can be anybody who we think is like a great game developer or

98
00:05:06,200 --> 00:05:06,700
something.

99
00:05:07,100 --> 00:05:11,800
They can share their knowledge with us and they can share how they do

100
00:05:12,100 --> 00:05:12,800
what they do.

101
00:05:13,100 --> 00:05:16,800
And I think that that to me is a really important aspect of it too.

102
00:05:17,200 --> 00:05:21,100
Because there's so much there's so much artifice in the normal way

103
00:05:21,100 --> 00:05:24,700
that program and Conference has forced people to present and I don't

104
00:05:24,700 --> 00:05:27,600
think it actually yields much like better content.

105
00:05:27,700 --> 00:05:29,600
I think it often feels worse content.

106
00:05:29,900 --> 00:05:32,900
And it greatly restricts, the number of people who are willing to do

107
00:05:32,900 --> 00:05:37,200
it or have time to do it that year or who want to bother and all these

108
00:05:37,200 --> 00:05:37,900
other things.

109
00:05:39,100 --> 00:05:42,100
So, I'm really interested in this, and I'm pretty excited about doing

110
00:05:42,100 --> 00:05:42,700
it this way.

111
00:05:43,300 --> 00:05:49,100
And so, the people that I'm selecting who I, you know, I'm going out

112
00:05:49,100 --> 00:05:53,600
and trying to say, you know, hey, do you want to do this and, and sort

113
00:05:53,600 --> 00:05:57,600
of get them interested in the whole concept of, this are all people

114
00:05:57,600 --> 00:05:59,500
who I want to have that dialogue with.

115
00:05:59,500 --> 00:05:59,900
So I'm

116
00:06:00,000 --> 00:06:04,900
Specifically picking, you know, programmers who it's like their stuff

117
00:06:04,900 --> 00:06:08,600
that they're working on now or that they worked on in the past that I

118
00:06:08,600 --> 00:06:10,800
think is really, really interesting that.

119
00:06:10,800 --> 00:06:15,500
I don't super understand how they did it or like the way they did it.

120
00:06:15,500 --> 00:06:17,900
And I want to have that conversation with them.

121
00:06:17,900 --> 00:06:19,600
REM like, tell me about how you did this.

122
00:06:19,600 --> 00:06:20,800
Tell me about how you solve this problem.

123
00:06:20,800 --> 00:06:22,100
What was this development process?

124
00:06:22,100 --> 00:06:27,200
Like, you know, I really I'm basically selecting it to be like stuff

125
00:06:27,200 --> 00:06:29,900
that I really want to know because I feel

126
00:06:30,000 --> 00:06:34,000
Feel like if I want to know it it must be something relatively rare,

127
00:06:34,000 --> 00:06:34,200
right?

128
00:06:34,200 --> 00:06:36,800
It's like it's not going to just be something that you would just know

129
00:06:36,800 --> 00:06:40,200
if you're a game developer, it's going to be something kind of unique

130
00:06:40,200 --> 00:06:44,800
and special and I feel like that's the really, the most interesting

131
00:06:44,800 --> 00:06:48,700
thing that we could do with a conference is to kind of get some of

132
00:06:48,700 --> 00:06:51,200
those things that that are really sort of interesting insightful.

133
00:06:51,200 --> 00:06:55,500
Things that often times, you know, you have to the only way you're

134
00:06:55,500 --> 00:06:58,900
ever going to get to know those things if you happen to have the Good

135
00:06:58,900 --> 00:06:59,800
Fortune to know what.

136
00:07:00,000 --> 00:07:02,200
These people personally and go out to dinner with them or talk with

137
00:07:02,200 --> 00:07:03,300
them on a regular basis or something.

138
00:07:03,300 --> 00:07:07,700
That so that's the whole point behind him icon and like I said, we

139
00:07:07,700 --> 00:07:11,600
will be announcing this the the people who will be the guest of honor.

140
00:07:12,600 --> 00:07:17,100
When we get that list completely nailed down, it will probably be.

141
00:07:17,100 --> 00:07:19,000
I'm guessing it will be five people.

142
00:07:22,600 --> 00:07:26,100
based on the way that I've looked at the times because basically we

143
00:07:26,100 --> 00:07:30,900
have the venue from 10 in the morning until 6:00 at night,

144
00:07:32,100 --> 00:07:34,500
And so assuming that people, you know, at some point have to break for

145
00:07:34,500 --> 00:07:36,500
lunch that leaves us enough time.

146
00:07:36,500 --> 00:07:42,100
I think to do to do five solid sessions of that with five different

147
00:07:42,100 --> 00:07:42,600
people.

148
00:07:43,700 --> 00:07:46,600
I could go up to six but I was looking at it.

149
00:07:46,600 --> 00:07:47,700
And I was saying, well,

150
00:07:49,000 --> 00:07:54,400
I'd rather do one less person and have a little more time with every

151
00:07:55,100 --> 00:07:56,100
buddy else.

152
00:07:56,400 --> 00:08:00,600
Then try to cram more people in there and not, you know, have to end

153
00:08:00,600 --> 00:08:03,900
the sessions just when we were getting to something really

154
00:08:03,900 --> 00:08:04,200
interesting.

155
00:08:04,200 --> 00:08:07,300
We want to talk more about and all of the people that I've been

156
00:08:07,300 --> 00:08:11,500
approaching are all people who I strongly suspect that even with an

157
00:08:11,500 --> 00:08:15,300
hour, 15 an hour, 30 minutes between all the things that I want to ask

158
00:08:15,300 --> 00:08:15,700
them.

159
00:08:15,700 --> 00:08:18,300
And then we probably want to have, you know, as a little bit of time

160
00:08:18,300 --> 00:08:18,400
for

161
00:08:18,600 --> 00:08:20,400
Audience questions as well and stuff like that.

162
00:08:20,500 --> 00:08:23,200
It's I really just don't think we're going to do probably more than

163
00:08:23,200 --> 00:08:23,500
five.

164
00:08:23,500 --> 00:08:28,200
So my plan is there will be five people who I really want to talk to.

165
00:08:29,400 --> 00:08:32,299
And that will be the way that we do the conference and we'll talk to

166
00:08:32,299 --> 00:08:33,799
them pretty in-depth.

167
00:08:35,600 --> 00:08:39,000
Probably like I said for about our 15 hour 30 would be would be my

168
00:08:39,000 --> 00:08:43,500
hope it may be that again we it has to be a little shorter again just

169
00:08:43,500 --> 00:08:47,800
because of timing and and we'll see since it's the first year doing

170
00:08:47,800 --> 00:08:48,000
this.

171
00:08:48,000 --> 00:08:49,600
I do expect that there will be some bumps.

172
00:08:49,600 --> 00:08:50,400
I'm not going to lie to you.

173
00:08:50,400 --> 00:08:55,200
Like the chances that Me by myself, with very little resources, I'm

174
00:08:55,200 --> 00:08:57,700
going to be able to run things complete without a hitch is probably

175
00:08:57,700 --> 00:08:58,600
not realistic.

176
00:08:59,200 --> 00:08:59,800
but again, like I

177
00:09:00,000 --> 00:09:01,600
I tried to keep things very, very simple.

178
00:09:01,600 --> 00:09:05,400
So the chances that we'll all be able to just show up, run a good con,

179
00:09:06,600 --> 00:09:10,400
have a lot of fun and get a lot of really great information are pretty

180
00:09:10,400 --> 00:09:13,600
high because the number of things that have to get done for that to

181
00:09:13,600 --> 00:09:14,100
happen.

182
00:09:14,200 --> 00:09:16,100
I've tried to keep them to an absolute minimum.

183
00:09:16,700 --> 00:09:18,200
I've picked a good space for it.

184
00:09:18,200 --> 00:09:22,600
It's a really nice place and it's really easy to get to its Central.

185
00:09:22,600 --> 00:09:24,800
It's easy to find places to stay around it.

186
00:09:25,100 --> 00:09:27,800
It's, you know, a notable landmark in Seattle.

187
00:09:28,100 --> 00:09:29,700
So it's pretty easy to find as well.

188
00:09:30,400 --> 00:09:34,600
So I'm thinking that probably we've got a really solid chance of even

189
00:09:34,600 --> 00:09:37,600
though this is the first time we're doing it, I think we probably will

190
00:09:37,900 --> 00:09:39,700
be able to keep it relatively smooth.

191
00:09:40,400 --> 00:09:44,500
Like I said on the pre stream and like I said in the post, if you read

192
00:09:44,500 --> 00:09:44,900
it,

193
00:09:46,600 --> 00:09:49,600
One of the things that will probably not go smoothly, that's a

194
00:09:49,600 --> 00:09:50,400
separate issue.

195
00:09:50,600 --> 00:09:54,400
Is, I really don't know what will be able to do in terms of getting

196
00:09:54,500 --> 00:09:56,400
the content streamed.

197
00:09:56,400 --> 00:10:01,700
My goal for the conference because handmade hero is a online show,

198
00:10:02,200 --> 00:10:03,900
that's that's performed live.

199
00:10:04,000 --> 00:10:07,900
And the questions are taken live of the internet and all that stuff is

200
00:10:07,900 --> 00:10:11,100
that I would like the conference to be streamed live as well I

201
00:10:11,100 --> 00:10:13,200
approached, which about that several months ago.

202
00:10:13,700 --> 00:10:14,500
They said they

203
00:10:15,900 --> 00:10:17,200
What would do it?

204
00:10:18,000 --> 00:10:21,600
But of course, you know, they're entitled to change their mind.

205
00:10:21,600 --> 00:10:24,600
So I have told them now that we've got all the days now that was,

206
00:10:24,600 --> 00:10:25,800
like, here's what it's going to be.

207
00:10:26,100 --> 00:10:30,700
And I've asked them to please help a stream it if they're like, yes,

208
00:10:30,700 --> 00:10:31,200
let's do.

209
00:10:31,200 --> 00:10:32,900
You know, we can totally do that.

210
00:10:32,900 --> 00:10:34,800
Then it'll happen.

211
00:10:35,000 --> 00:10:37,400
But, you know, they might say, no, you know, we change their mind or

212
00:10:37,400 --> 00:10:39,600
we don't have the resources for that right now, or something like

213
00:10:39,600 --> 00:10:40,100
that.

214
00:10:40,300 --> 00:10:43,500
That's totally within their purview right there under no obligation to

215
00:10:43,500 --> 00:10:44,100
help with it.

216
00:10:44,100 --> 00:10:45,100
And, you know,

217
00:10:45,800 --> 00:10:47,900
They're doing it just to be nice.

218
00:10:47,900 --> 00:10:48,600
Basically.

219
00:10:49,100 --> 00:10:52,400
So you know, it's just a straight-up charitable thing for them to do

220
00:10:52,400 --> 00:10:53,500
to help the community.

221
00:10:53,900 --> 00:10:57,100
So I don't know what they'll say, I'll keep you posted on that but

222
00:10:57,100 --> 00:10:58,500
that's what I've asked them to do.

223
00:10:58,500 --> 00:11:01,600
And you know, they were definitely receptive to it and I think they're

224
00:11:01,600 --> 00:11:05,000
going to try to make it happen but no promises because like I said

225
00:11:05,000 --> 00:11:06,900
it's just a straight-up charity thing for them to do.

226
00:11:07,100 --> 00:11:08,300
They might not have it in their budget.

227
00:11:08,300 --> 00:11:10,300
They might not have the time to do it.

228
00:11:10,300 --> 00:11:12,400
They may be overextended at that point, I don't know.

229
00:11:12,700 --> 00:11:15,300
So fingers crossed that would be what happens.

230
00:11:15,800 --> 00:11:18,600
But if that doesn't happen, we will probably not try to stream it live

231
00:11:18,600 --> 00:11:20,300
ourselves because we just don't have the expertise for that.

232
00:11:20,300 --> 00:11:24,400
I definitely don't know how to do that, if other people who think that

233
00:11:24,400 --> 00:11:26,600
they do have the expertise for that, want to give it a shot.

234
00:11:26,600 --> 00:11:30,400
I would certainly go ahead and give them a live stream key for that

235
00:11:30,400 --> 00:11:31,900
day and they could give it a shot.

236
00:11:32,500 --> 00:11:37,600
So you know, if people out there want to try and to do that, if twitch

237
00:11:37,600 --> 00:11:41,700
is not able to help us then that could certainly happen as well.

238
00:11:41,700 --> 00:11:43,900
But like I said that part I cannot guarantee.

239
00:11:43,900 --> 00:11:45,400
So for people out there

240
00:11:45,600 --> 00:11:47,900
You can't make the con, I can't promise that it will be able to be

241
00:11:47,900 --> 00:11:48,500
viewed lied.

242
00:11:48,600 --> 00:11:51,900
I just don't have the resources to make sure that I could really

243
00:11:51,900 --> 00:11:53,200
actually guarantee that that will happen.

244
00:11:53,400 --> 00:11:57,500
So I promise we'll try but I, you know, I just don't know, realistic

245
00:11:57,500 --> 00:11:58,100
will happen.

246
00:11:58,900 --> 00:11:59,700
Same thing with video.

247
00:12:00,400 --> 00:12:03,800
I would very much like it to be recorded, so that people can view it.

248
00:12:03,800 --> 00:12:08,100
After the fact on YouTube, especially if it cannot be streamed live in

249
00:12:08,100 --> 00:12:08,600
which, you know.

250
00:12:08,600 --> 00:12:10,500
So there would not be a way to watch it remotely.

251
00:12:10,700 --> 00:12:14,300
So failing, the ability to, you know, to have it streamed live on

252
00:12:14,300 --> 00:12:14,500
Twitch.

253
00:12:14,500 --> 00:12:18,000
We would also then of course, try to do a permanent archival recording

254
00:12:18,000 --> 00:12:18,900
of it again.

255
00:12:18,900 --> 00:12:21,600
No promises there because it's just not my expertise.

256
00:12:22,000 --> 00:12:25,100
We will try to ask some people to try and film it and hopefully that

257
00:12:25,100 --> 00:12:25,600
goes smoothly.

258
00:12:25,600 --> 00:12:28,300
And that the audio is okay, but again, I really just don't have any

259
00:12:28,300 --> 00:12:28,800
control over that.

260
00:12:28,800 --> 00:12:29,900
It's way beyond my

261
00:12:30,000 --> 00:12:33,500
My thing that I ever do, I don't do AV for anything.

262
00:12:33,500 --> 00:12:38,400
So, you know, that's that stuff is just not a guarantee will try, but

263
00:12:38,400 --> 00:12:40,200
it's not a guarantee, everything else.

264
00:12:40,200 --> 00:12:43,600
I think we'll probably be able to pull off just fine, but those two

265
00:12:43,600 --> 00:12:45,700
things are ones that are very technological in nature.

266
00:12:45,700 --> 00:12:49,500
Mostly about having the experience to know all the little things that

267
00:12:49,500 --> 00:12:50,800
can go wrong when you do something like that.

268
00:12:50,800 --> 00:12:56,000
And so you know if again, if twitch can do it, I think it'll be great

269
00:12:56,000 --> 00:12:58,700
because they have the experience, I'd they would know how to do it.

270
00:12:58,700 --> 00:13:00,000
They would know how to not screw it up.

271
00:13:00,200 --> 00:13:04,100
And but if they don't, then we're just going to have to sort of wing

272
00:13:04,100 --> 00:13:04,200
it.

273
00:13:04,200 --> 00:13:06,700
And I don't really know if that how that will be.

274
00:13:06,700 --> 00:13:11,600
But so that aside, I think everything else for Hamid.

275
00:13:11,600 --> 00:13:14,600
Khan has been coming along quite well, and I'm pretty excited about

276
00:13:14,600 --> 00:13:16,200
how it's going, and I think it's going to be really great.

277
00:13:16,200 --> 00:13:18,200
So that is it for him?

278
00:13:18,200 --> 00:13:21,200
Make on, I'll mention it a few more times on streams as we go for

279
00:13:21,200 --> 00:13:23,100
people who may or may not be catching this dream.

280
00:13:23,100 --> 00:13:24,500
Catching this one live.

281
00:13:24,500 --> 00:13:27,000
I'll mention a few more days from now but now you've basically got all

282
00:13:27,000 --> 00:13:30,100
the information about it and like I said, I

283
00:13:30,100 --> 00:13:34,500
I will as soon as there is another post about speakers or about other

284
00:13:34,500 --> 00:13:35,500
things about the conference.

285
00:13:35,500 --> 00:13:39,100
I will mention them at the start of the stream so you can check them

286
00:13:39,100 --> 00:13:39,600
out.

287
00:13:40,000 --> 00:13:42,200
All right, all that said,

288
00:13:44,900 --> 00:13:46,700
We have lunch of programming to do.

289
00:13:47,900 --> 00:13:55,400
So we need to start doing it today is day 194 on a hero and we are in

290
00:13:55,400 --> 00:13:59,800
the midst of doing some work with our debug viewing, where we're

291
00:13:59,800 --> 00:14:03,100
adding features, so that we can, you know, have sort of a fairly

292
00:14:03,100 --> 00:14:06,300
reasonable set of tools for inspecting, the behavior of our game.

293
00:14:06,300 --> 00:14:10,400
As we go, I would like to sort of push a little harder on the UI

294
00:14:10,400 --> 00:14:10,900
today.

295
00:14:11,200 --> 00:14:13,300
And also I think I figured out a way.

296
00:14:13,400 --> 00:14:16,300
He may be able to have our cake and eat it too.

297
00:14:17,200 --> 00:14:20,000
As far as debug variables is concerned.

298
00:14:24,200 --> 00:14:27,000
I'm not 100% sure, but I did think of a way to do that and don't know.

299
00:14:27,000 --> 00:14:28,200
We want us really do that today.

300
00:14:28,200 --> 00:14:32,000
But I did think I figured out a way of thinking about it, where we

301
00:14:32,000 --> 00:14:38,100
could have the both the pluses of having ability to compile things in

302
00:14:38,100 --> 00:14:42,800
and out entirely runtime as well as the ability to live update things

303
00:14:42,800 --> 00:14:43,900
instantaneously.

304
00:14:44,200 --> 00:14:48,100
So I was thinking that maybe there is a way to sort of do something

305
00:14:48,500 --> 00:14:49,900
really wacky, there that might work.

306
00:14:51,000 --> 00:14:54,400
Don't necessarily know, can't promise but we may try that as well.

307
00:14:56,700 --> 00:14:58,600
For now though, I'd like to do a little bit more work on the u.

308
00:14:58,600 --> 00:14:59,800
I so that's what we're going to do today.

309
00:15:00,000 --> 00:15:06,600
194 if you would like to follow along at home, you will want to unzip

310
00:15:06,600 --> 00:15:07,900
day 193 source code.

311
00:15:07,900 --> 00:15:11,100
If you preorder the game on handmade here at org, that is the source

312
00:15:11,100 --> 00:15:12,700
code that we were going to be starting with here.

313
00:15:13,200 --> 00:15:17,000
And that is, you know, if you want to kind of follow along and with

314
00:15:17,000 --> 00:15:20,000
the exact same code that I'm doing that is the source code that you

315
00:15:20,000 --> 00:15:22,700
want to start with, all right?

316
00:15:24,300 --> 00:15:25,500
So here's where we left off.

317
00:15:26,500 --> 00:15:28,900
We had our handmade hero, right?

318
00:15:29,100 --> 00:15:32,800
And we have, like, kind of a really for lack of better term, a very

319
00:15:32,800 --> 00:15:38,400
ugly radial menu that we had implemented and it allows us to recompile

320
00:15:38,400 --> 00:15:42,800
the game set switches and change the actual compilation of the game at

321
00:15:42,800 --> 00:15:43,900
runtime, right?

322
00:15:44,100 --> 00:15:46,800
So for example, right now, you can see that we're using the sort of

323
00:15:46,800 --> 00:15:49,700
small render plate here as said of the full screen.

324
00:15:49,900 --> 00:15:53,700
One and so if we want to, for example, then that's a compile time.

325
00:15:53,900 --> 00:15:59,000
H, if we want to, we can actually go pick the, the debug option that

326
00:15:59,000 --> 00:16:01,700
changes that trying to set this one right here, right?

327
00:16:01,700 --> 00:16:05,300
Test, weird draw, buffer size, and if we toggle that, then you can see

328
00:16:05,300 --> 00:16:05,900
that it.

329
00:16:05,900 --> 00:16:08,900
You know, it actually did recompiled the game right there, Reloaded

330
00:16:08,900 --> 00:16:13,100
The Game on the Fly and, and went, which is kind of awesome.

331
00:16:13,100 --> 00:16:14,400
I mean, it's just, I don't know.

332
00:16:14,500 --> 00:16:15,100
It's one of those things.

333
00:16:15,100 --> 00:16:15,800
That's just so neat.

334
00:16:15,800 --> 00:16:17,600
You know, you can be in the game.

335
00:16:17,600 --> 00:16:18,500
You can go like this.

336
00:16:18,500 --> 00:16:22,000
And now, you're you recompiled and the game like didn't even lose its

337
00:16:22,000 --> 00:16:23,100
state, right?

338
00:16:23,800 --> 00:16:26,100
That's the kind of thing again, that a lot of people turn to scripting

339
00:16:26,100 --> 00:16:28,500
languages for because they want that kind of functionality and it's

340
00:16:28,500 --> 00:16:32,200
kind of neat that we basically just totally got it here on handmade

341
00:16:32,200 --> 00:16:34,200
here without ever having to leave C.

342
00:16:34,400 --> 00:16:37,900
So we can totally do completely performance oriented code anytime we

343
00:16:37,900 --> 00:16:38,400
want.

344
00:16:38,500 --> 00:16:40,500
But anytime we don't want, right?

345
00:16:40,500 --> 00:16:44,800
Like, anytime we want the convenience of a scripting language, we

346
00:16:44,800 --> 00:16:47,700
actually get that for free now that we've done that work, which is

347
00:16:47,700 --> 00:16:48,300
pretty great.

348
00:16:48,400 --> 00:16:50,400
So that's pretty pretty, darn neat.

349
00:16:51,700 --> 00:16:54,800
But like I said, this radial menu is like really super ugly.

350
00:16:55,100 --> 00:16:56,200
Not very functional.

351
00:16:56,500 --> 00:17:01,300
And it also doesn't really allow us to provide very many options here,

352
00:17:01,400 --> 00:17:01,800
right?

353
00:17:02,000 --> 00:17:05,300
Like, you know, you could imagine if we tried to scale this up to 100

354
00:17:05,300 --> 00:17:09,000
debug options, Not only would it be a crazy radial menu to try and

355
00:17:09,000 --> 00:17:14,200
pick from, but it would also have a pretty nasty problem of finding

356
00:17:14,400 --> 00:17:17,599
where they were would be pretty darn tough, right?

357
00:17:17,700 --> 00:17:20,099
So, at the very least, we're probably going to want to do something

358
00:17:20,099 --> 00:17:20,800
the hierarchical.

359
00:17:20,900 --> 00:17:24,200
Alright, even if we stuck with just a radial menu, you'd want

360
00:17:24,200 --> 00:17:26,200
something where maybe you could pick a category and then pick

361
00:17:26,200 --> 00:17:28,200
something from it or things like this.

362
00:17:29,100 --> 00:17:32,600
And when I'm thinking personally about this right?

363
00:17:32,600 --> 00:17:34,000
Is that in general?

364
00:17:35,600 --> 00:17:37,300
I want sort of a clutch style thing.

365
00:17:37,300 --> 00:17:41,500
Like I talked about before where I will just right click and some you

366
00:17:41,500 --> 00:17:44,700
I will come up, I can do some stuff and then it goes away.

367
00:17:44,700 --> 00:17:48,200
So that the debug stuff is always out of my way and I can just always

368
00:17:48,200 --> 00:17:49,000
get to it this way.

369
00:17:49,200 --> 00:17:52,800
And so when this comes up, what the really what I'm thinking of more

370
00:17:53,300 --> 00:17:57,000
is I want this radial menu, the reason I put a radial menu in there is

371
00:17:57,000 --> 00:17:59,600
I want a quick

372
00:18:00,000 --> 00:18:02,400
Menu something that I can access quickly.

373
00:18:03,700 --> 00:18:08,000
And I feel like the radial menu will do that for me, but that is just

374
00:18:08,000 --> 00:18:11,600
for certain highly used things that I might want to turn on and off,

375
00:18:11,600 --> 00:18:13,900
like profile information or something like that, right?

376
00:18:14,800 --> 00:18:19,300
So I want to now create an additional piece of UI before we refine the

377
00:18:19,300 --> 00:18:22,300
radial menu, at all before we go any further down that path because

378
00:18:22,300 --> 00:18:24,400
that's sort of I mean it's already sort of functional.

379
00:18:24,800 --> 00:18:27,100
I want to get some other things functional as well.

380
00:18:27,600 --> 00:18:29,900
I want to create something that.

381
00:18:30,000 --> 00:18:38,000
It will allow us to do a more sort of a more extensive user interface

382
00:18:38,100 --> 00:18:40,500
for categorizing larger series of things.

383
00:18:41,600 --> 00:18:46,200
So I'm thinking about something like a scrolling hierarchical, Tree

384
00:18:46,200 --> 00:18:50,200
View, kind of a thing, you know, some kind of standard interface

385
00:18:50,200 --> 00:18:53,600
thing, so that when I hit the right Mouse button and another thing too

386
00:18:53,600 --> 00:18:56,200
is what I just hit the right Mouse button you know the it just kind of

387
00:18:56,200 --> 00:18:57,300
blinks right now.

388
00:18:57,300 --> 00:19:01,000
What I want to do is also change that so that like you can just click

389
00:19:01,000 --> 00:19:03,500
the right Mouse button once and then the menu will stay up as I

390
00:19:03,500 --> 00:19:04,300
interact with it.

391
00:19:04,300 --> 00:19:09,100
And then if you hold down and then release the button with a gesture,

392
00:19:09,100 --> 00:19:11,600
it will select from the radial menu so that we can have

393
00:19:11,700 --> 00:19:17,200
Our speed cake and eat our functionality to if it coin a phrase, a

394
00:19:17,200 --> 00:19:18,200
very bad phrase.

395
00:19:19,600 --> 00:19:21,300
I always The Familiar is following me too.

396
00:19:21,400 --> 00:19:22,900
I feel like I want to turn that off.

397
00:19:22,900 --> 00:19:24,000
Familiar, follows hero.

398
00:19:24,500 --> 00:19:26,400
All right, so now the familiar is not following the hero.

399
00:19:27,600 --> 00:19:28,300
All right.

400
00:19:29,500 --> 00:19:30,100
So yeah.

401
00:19:30,200 --> 00:19:33,700
So that's what I would like to do is I would like to have some way,

402
00:19:33,700 --> 00:19:36,300
you know, I suppose our ground chunks should probably also not be so

403
00:19:36,300 --> 00:19:37,200
ridiculous, huh?

404
00:19:38,100 --> 00:19:38,900
Where is that guy?

405
00:19:38,900 --> 00:19:39,800
Chuck checkerboards.

406
00:19:42,800 --> 00:19:43,600
Oh, and you know what?

407
00:19:43,600 --> 00:19:48,800
We would also have to turn on the rebuild on on recompute ground

408
00:19:48,800 --> 00:19:53,100
chunks, on XE change so that they will flush having to recompile on

409
00:19:53,100 --> 00:19:55,000
the Fly code, is just so darn neat.

410
00:19:55,400 --> 00:19:57,300
I'm sorry, that's just super cool.

411
00:19:58,200 --> 00:19:58,600
Anyway.

412
00:19:59,100 --> 00:20:04,700
So yeah, what I want to do here is I want to figure out some kind of

413
00:20:04,700 --> 00:20:07,700
way that I'm thinking maybe, like, something where, you know, on the

414
00:20:07,700 --> 00:20:08,800
side here.

415
00:20:08,900 --> 00:20:10,600
Maybe I'm just throwing this out there.

416
00:20:10,700 --> 00:20:12,400
So maybe something on the side here.

417
00:20:13,000 --> 00:20:16,600
It's just going to be kind of a list, and the list could have some

418
00:20:16,600 --> 00:20:19,500
hierarchical options in it, right?

419
00:20:19,500 --> 00:20:22,500
So, like in the list, maybe, you know, we've got stuff like, you know,

420
00:20:22,500 --> 00:20:25,100
rendering and simulation and whatever, right?

421
00:20:25,400 --> 00:20:29,600
So that we can categorize things as to where they might belong in that

422
00:20:29,600 --> 00:20:30,100
list.

423
00:20:34,000 --> 00:20:34,500
You know.

424
00:20:36,100 --> 00:20:39,700
And then we could find things easier and even if there's like

425
00:20:39,700 --> 00:20:42,400
thousands of options they can be in some kind of nested sense.

426
00:20:42,900 --> 00:20:48,700
So finding them is is easier because you can kind of Pare down what it

427
00:20:48,700 --> 00:20:49,800
looks like at each time.

428
00:20:50,200 --> 00:20:50,800
Right?

429
00:20:51,500 --> 00:20:53,100
So that's what I'd like to do.

430
00:20:53,100 --> 00:20:55,500
So I'm just going to go ahead in there and since like I said I have no

431
00:20:55,500 --> 00:20:58,000
idea really what form that's going to take or what that's going to do

432
00:20:58,200 --> 00:20:59,800
what I'd like to do is just go in there and

433
00:21:00,000 --> 00:21:04,600
Make something much like we did the radial menu that just does that

434
00:21:04,600 --> 00:21:07,900
something like that and so that we can start to investigate the code

435
00:21:07,900 --> 00:21:09,700
and build something relatively reasonable.

436
00:21:09,900 --> 00:21:13,700
So that's what I'd like to do and I'm going to start doing it so that

437
00:21:13,700 --> 00:21:15,200
we can figure out how it should go.

438
00:21:16,700 --> 00:21:20,100
Alright, so here we are in handmade debug.

439
00:21:20,800 --> 00:21:23,200
And as you know, in handmade debug, right?

440
00:21:23,200 --> 00:21:26,800
We have the thing that draws the, this debug main menu here.

441
00:21:27,300 --> 00:21:29,400
It draws that radial thing, right?

442
00:21:29,400 --> 00:21:34,600
And this is the thing that kind of Loops over, whatever we have listed

443
00:21:34,600 --> 00:21:40,200
in our, we've got our debug variables array, right?

444
00:21:40,400 --> 00:21:42,300
So, here is that debug variables Ray.

445
00:21:42,300 --> 00:21:46,300
This lists all of the variables that we have in the debug system.

446
00:21:47,100 --> 00:21:51,100
and those debug variables, obviously, all get sort of

447
00:21:54,500 --> 00:21:57,800
Listed in the radial menu right now which is not at all something that

448
00:21:57,800 --> 00:21:59,600
I actually want to have happen.

449
00:22:00,000 --> 00:22:03,500
So we know that the radial menu will go to being something that Loops

450
00:22:03,500 --> 00:22:04,200
over this array.

451
00:22:05,000 --> 00:22:09,500
To being something that only Loops over some very specific, certain

452
00:22:10,600 --> 00:22:11,900
ones of that, right?

453
00:22:11,900 --> 00:22:13,900
Certain very specific, certain things.

454
00:22:17,000 --> 00:22:21,400
And what I would point out here is this debug variable list is in?

455
00:22:21,400 --> 00:22:21,700
No?

456
00:22:21,700 --> 00:22:27,900
Does it in no way needs to be actually a flat flat array or anything

457
00:22:27,900 --> 00:22:28,500
like that?

458
00:22:29,200 --> 00:22:32,000
We saw with the debug counters, and those sorts of things.

459
00:22:32,300 --> 00:22:36,300
We have time-sensitive macros that have to do stand that have to,

460
00:22:36,300 --> 00:22:39,100
like, operator multiple threads and right into buffers and all this

461
00:22:39,100 --> 00:22:39,700
other stuff.

462
00:22:39,900 --> 00:22:42,900
So, the other dead debug stuff, kind of had to be careful.

463
00:22:42,900 --> 00:22:45,500
They had to be these Global variables and they had to be written into

464
00:22:45,500 --> 00:22:46,600
by threads and

465
00:22:46,800 --> 00:22:48,000
Away and all this stuff.

466
00:22:48,000 --> 00:22:51,600
There's all this sort of restrictions on how those could be but the

467
00:22:51,600 --> 00:22:55,200
debug variable list fundamentally is nothing more than just a list of

468
00:22:55,200 --> 00:22:58,400
debug variables that could be constructed in any way by anyone.

469
00:22:58,400 --> 00:23:01,400
At any time, it's not edited by the code at all.

470
00:23:01,400 --> 00:23:06,500
And in fact if we look at the config file, this config file is

471
00:23:06,500 --> 00:23:09,800
actually the thing that the program reads and writes, right.

472
00:23:09,800 --> 00:23:13,000
Those are the actual lb defines that actually get read and write by

473
00:23:13,000 --> 00:23:13,600
the program.

474
00:23:14,600 --> 00:23:19,800
So this while this file has to look like this because handmade hero

475
00:23:19,800 --> 00:23:23,600
reads and writes it this part right here, I'm free to do whatever I

476
00:23:23,600 --> 00:23:24,300
want with it.

477
00:23:24,500 --> 00:23:28,800
So what I think we could pretty trivially do here is just instead of

478
00:23:28,900 --> 00:23:34,400
constructing it and as this plate aside see unfortunately and C++ as

479
00:23:34,400 --> 00:23:34,900
well.

480
00:23:35,200 --> 00:23:38,300
Do a very bad job of allowing of alike to enter data.

481
00:23:38,700 --> 00:23:43,500
It's one of the biggest snafus of c and C++ is the fact that they

482
00:23:43,500 --> 00:23:44,300
didn't think through the

483
00:23:44,400 --> 00:23:48,700
The fact that people would want to enter data in along with their

484
00:23:48,700 --> 00:23:49,800
code, right?

485
00:23:49,800 --> 00:23:55,600
And so, they only have the most sort of rudimentary unfortunate ways

486
00:23:55,600 --> 00:23:57,000
of actually putting data in.

487
00:23:57,600 --> 00:23:59,800
Basically, the only thing you can do is just make a big old flat.

488
00:24:00,000 --> 00:24:00,900
Yes that's it.

489
00:24:01,000 --> 00:24:02,600
And it's pretty hard to do anything else.

490
00:24:02,600 --> 00:24:07,300
Actually you end up in kind of nasty situations if you want to do

491
00:24:07,300 --> 00:24:12,100
anything such as like dynamically sized things where you have like a

492
00:24:12,100 --> 00:24:13,600
pointer to an array or something.

493
00:24:13,800 --> 00:24:16,700
They've always made it very difficult for you to Flap Define those in

494
00:24:16,700 --> 00:24:17,600
convenient ways.

495
00:24:18,600 --> 00:24:21,600
So what I like to do in circumstances especially like this where there

496
00:24:21,600 --> 00:24:23,400
isn't any particular reason.

497
00:24:23,600 --> 00:24:29,100
Why I have to make this be an actual data value constructed by the

498
00:24:29,100 --> 00:24:32,900
compiler, is I like to go ahead and make it something that's just

499
00:24:32,900 --> 00:24:36,600
constructed at startup by the actual runtime code.

500
00:24:36,600 --> 00:24:41,500
And of course, we do know already that we have the ability to

501
00:24:41,500 --> 00:24:42,700
initialize our debug code.

502
00:24:42,700 --> 00:24:44,800
We've got some stuff right here, right.

503
00:24:44,800 --> 00:24:48,000
It's got a Rena that it can do things with to create.

504
00:24:48,400 --> 00:24:49,500
Of various sizes.

505
00:24:49,500 --> 00:24:54,500
So if I wanted to right here, I could go ahead and create a dynamic

506
00:24:54,500 --> 00:24:55,700
version of this.

507
00:24:55,700 --> 00:24:58,100
That is actually created at startup.

508
00:24:58,100 --> 00:25:01,100
And the reason I'd like to do that is to make it easier for me to

509
00:25:01,100 --> 00:25:04,500
construct this as instead of a flat list of things.

510
00:25:04,500 --> 00:25:09,300
Actually, a hierarchical list of things that will allow us to do

511
00:25:09,300 --> 00:25:13,000
things like put, you know, put that sort of tree view or something

512
00:25:13,000 --> 00:25:15,800
like that, you know, into place, right?

513
00:25:15,800 --> 00:25:18,400
So, here's the way I would

514
00:25:18,400 --> 00:25:22,300
I would like to do that, but I'd like to do is create like a little

515
00:25:22,300 --> 00:25:23,500
place for me to put that, right?

516
00:25:23,500 --> 00:25:28,000
So I'm going to create a function to hold this code will call that

517
00:25:28,100 --> 00:25:34,900
debug create create variable hierarchy or something like this.

518
00:25:34,900 --> 00:25:38,500
Debug create variables, debug.

519
00:25:38,500 --> 00:25:45,000
Create something name is hard, brain doesn't know what name is

520
00:25:45,100 --> 00:25:45,700
English.

521
00:25:46,100 --> 00:25:48,200
So difficult, half a

522
00:25:48,500 --> 00:25:49,300
In the words.

523
00:25:49,700 --> 00:25:54,300
And so what we'll do here is we'll just pass in, you know, a memory

524
00:25:54,300 --> 00:25:57,700
Arena that it can use to allocate the stuff and it'll just use the

525
00:25:57,700 --> 00:25:58,600
debugger arena there.

526
00:25:59,600 --> 00:26:02,800
And then what we could do is recreate this list instead of having in

527
00:26:02,800 --> 00:26:06,000
handmade debug variables that H, or, you know, what, even we could

528
00:26:06,000 --> 00:26:09,700
just even put it in handmade debug variables, that H, we could

529
00:26:09,700 --> 00:26:11,400
actually just have it exist in here.

530
00:26:11,700 --> 00:26:14,200
So that again, because again, my reasoning for

531
00:26:15,400 --> 00:26:18,600
Doing this was because I wanted to make it so that it was kind of

532
00:26:18,600 --> 00:26:19,400
confined to one place.

533
00:26:19,400 --> 00:26:21,700
So that was easy to know where you went to add a debug variable.

534
00:26:21,700 --> 00:26:25,800
So we could totally do that again, pretty trivial for us to do.

535
00:26:26,400 --> 00:26:30,300
So, when we do our debug variable this thing here, what we would then

536
00:26:30,300 --> 00:26:34,400
do is say Okay, instead of doing a list this way, right?

537
00:26:34,400 --> 00:26:36,100
We'll just do a list this way.

538
00:26:37,400 --> 00:26:42,000
So, exact same code, basically, in terms of what we're typing in.

539
00:26:42,000 --> 00:26:47,200
But instead of the macro expanding to a fixed data definition, we're

540
00:26:47,200 --> 00:26:52,300
just going to change that to actually call a function that creates the

541
00:26:52,300 --> 00:26:53,400
variable, right?

542
00:26:53,500 --> 00:26:57,600
So we'll just have like, debug add variable or something like that,

543
00:26:58,500 --> 00:26:59,800
and it passes.

544
00:27:00,100 --> 00:27:09,000
In the name, bowstring eyes and the actual value of that name regular,

545
00:27:09,400 --> 00:27:09,900
right?

546
00:27:11,500 --> 00:27:12,100
So, there you go.

547
00:27:12,600 --> 00:27:17,200
So if I do that, then I will have the ability to start doing some

548
00:27:17,200 --> 00:27:19,000
other things, right?

549
00:27:19,700 --> 00:27:23,900
I would have the ability for example, to create groups of these, just

550
00:27:23,900 --> 00:27:29,600
by using a little, you know, like, you know, begin group, something

551
00:27:29,600 --> 00:27:30,200
like this.

552
00:27:33,300 --> 00:27:35,900
You know, and then end group.

553
00:27:38,500 --> 00:27:41,800
And so, what I could do there is say, like, okay, so you know, use

554
00:27:41,800 --> 00:27:47,100
debug camera, use space, outlines, maybe.

555
00:27:47,500 --> 00:27:49,000
And I'm just like, and I'm just making this up.

556
00:27:49,000 --> 00:27:50,400
It's not really important.

557
00:27:50,600 --> 00:27:53,500
We'll probably have a lot more opinions about this sort of thing.

558
00:27:54,800 --> 00:28:02,700
You know, maybe use room based camera as well, that seems like the

559
00:28:02,700 --> 00:28:04,600
kind of things, ground chunk outlines maybe.

560
00:28:04,600 --> 00:28:08,200
Well, I don't know, maybe not that you can sort of see,

561
00:28:08,400 --> 00:28:11,900
We might start to put these into groups, right?

562
00:28:11,900 --> 00:28:15,600
There's ground checkout lines ground, chuck checkerboards, we've got

563
00:28:15,600 --> 00:28:19,200
recompute ground chunks, that sort of starts to look like, you know, a

564
00:28:19,200 --> 00:28:21,900
group of things that are based on crouch-jump things.

565
00:28:21,900 --> 00:28:23,900
So, maybe we say, okay, this is a group.

566
00:28:24,000 --> 00:28:26,300
It's called the ground chunks group, right?

567
00:28:28,100 --> 00:28:30,100
And then here's particles, right?

568
00:28:30,200 --> 00:28:33,200
And so maybe we have another group that's like particles.

569
00:28:38,000 --> 00:28:41,700
You know, and then here, I've got some things that are like rendering

570
00:28:41,700 --> 00:28:42,500
related.

571
00:28:44,700 --> 00:28:46,600
and so maybe this is just called renderer

572
00:28:50,600 --> 00:28:52,200
and this is may be called camera.

573
00:28:54,200 --> 00:28:58,600
You space outlines is probably actually something that's more in out

574
00:28:58,600 --> 00:29:03,300
in Sim for the moment and debug and variables group.

575
00:29:04,900 --> 00:29:07,200
And you can see how now we're starting to break it up a little bit.

576
00:29:07,200 --> 00:29:09,700
And so now we have some places that these things can go.

577
00:29:09,700 --> 00:29:12,800
And now instead of looking at, you know, all of these options

578
00:29:12,800 --> 00:29:13,000
together.

579
00:29:13,000 --> 00:29:15,600
You know, if you're looking for something that affects the camera, you

580
00:29:15,600 --> 00:29:19,000
would just click on camera first and then you would be able to get

581
00:29:19,000 --> 00:29:23,700
down to, you know, the things that are affecting the camera or

582
00:29:23,700 --> 00:29:24,800
something like this, right?

583
00:29:25,100 --> 00:29:28,600
And then, similarly here, maybe we just don't know what these are.

584
00:29:28,600 --> 00:29:30,700
So they're on categorize for now and they just go at the end.

585
00:29:30,700 --> 00:29:31,500
I have no idea.

586
00:29:31,700 --> 00:29:34,900
Again, we can sort of just make this up as we go.

587
00:29:35,000 --> 00:29:38,600
Along and similarly, you know we might want to do something.

588
00:29:40,600 --> 00:29:43,800
You know, I don't think this is necessarily how we would want to

589
00:29:43,800 --> 00:29:47,900
organize it, but I just, you know, would sort of say we could sort of

590
00:29:47,900 --> 00:29:48,600
do something like this.

591
00:29:48,600 --> 00:29:54,100
Just so we can test the ability to have our groups be a little bit

592
00:29:54,100 --> 00:29:57,500
more nested because we may want that in a future.

593
00:29:57,500 --> 00:29:59,800
You know, I'm kind of conceptualizing

594
00:30:00,000 --> 00:30:01,400
Is being able to fit a lot.

595
00:30:01,400 --> 00:30:04,300
I'm going to want a lot of debug options so I would like to make sure

596
00:30:04,300 --> 00:30:06,400
that it's not just one level of hierarchy.

597
00:30:06,400 --> 00:30:10,600
We can have as many layers of the hierarchy going down as we want.

598
00:30:11,500 --> 00:30:12,500
So that's you know, what?

599
00:30:12,500 --> 00:30:13,500
I would like to do there.

600
00:30:14,500 --> 00:30:19,600
And similarly I think this debug UI thing is fine and all, but it's

601
00:30:19,600 --> 00:30:21,800
kind of annoying to always have it there.

602
00:30:22,100 --> 00:30:25,300
So I think what I would rather do is probably do something like this,

603
00:30:25,600 --> 00:30:26,100
right?

604
00:30:26,400 --> 00:30:29,500
So this way, we don't have to say, debug you, I ever we just say it

605
00:30:29,500 --> 00:30:33,300
like that and that way when we get the actual names of the things in

606
00:30:33,300 --> 00:30:33,700
there,

607
00:30:35,700 --> 00:30:39,500
You know, they're kind of a little bit more straightforward, or

608
00:30:39,500 --> 00:30:41,400
readable or whatever, right?

609
00:30:43,300 --> 00:30:44,400
Two ways to do that, right.

610
00:30:44,400 --> 00:30:45,400
That's one way we could do.

611
00:30:45,400 --> 00:30:47,300
It seems like a pretty good way.

612
00:30:47,300 --> 00:30:50,600
I don't actually know, but that just seems like probably the most

613
00:30:50,600 --> 00:30:55,500
reasonable thing but yeah, you know, maybe the better way to do it

614
00:30:55,500 --> 00:30:59,900
would be to actually just put a second string after it.

615
00:30:59,900 --> 00:31:00,400
That's different.

616
00:31:00,400 --> 00:31:01,900
I don't know, we'll see how we like it.

617
00:31:01,900 --> 00:31:05,000
It's not hard at this stage to change it, but before we add two,

618
00:31:05,400 --> 00:31:09,000
These guys, before we have 200 of them we'd probably want to make sure

619
00:31:09,000 --> 00:31:10,700
we kind of know, right?

620
00:31:11,500 --> 00:31:17,300
So yeah, I'll put in these as a since we put those two dudes in there,

621
00:31:17,800 --> 00:31:18,900
we'll leave those there.

622
00:31:19,300 --> 00:31:23,000
I'm going to go ahead and make this kind of a local macro

623
00:31:24,200 --> 00:31:26,900
You know, so it's only in there because it's the only place that

624
00:31:26,900 --> 00:31:29,000
people really should be ever using that macro.

625
00:31:29,600 --> 00:31:33,000
And so that is what I want to implement.

626
00:31:33,300 --> 00:31:36,300
And so we've got begin variable group.

627
00:31:38,300 --> 00:31:39,700
You got an enviable group.

628
00:31:42,500 --> 00:31:46,000
And we have an add variable, the moment that's all we have.

629
00:31:46,600 --> 00:31:51,700
And the add variable that takes the name of the variable and it takes

630
00:31:51,700 --> 00:31:54,000
the value of the variable at the moment.

631
00:31:54,500 --> 00:31:58,500
And in the future, I think one of the things about that is we're not

632
00:31:58,500 --> 00:32:05,100
going to be when higher 100% certain, which kind of variable each, one

633
00:32:05,100 --> 00:32:07,600
of these things is just by its type.

634
00:32:08,300 --> 00:32:12,100
So we won't necessarily know if something's a Bool or

635
00:32:13,100 --> 00:32:17,200
In it whereas we would probably know it's a floating point value or

636
00:32:17,200 --> 00:32:22,300
not right because that's a little bit clearer potentially but that

637
00:32:22,300 --> 00:32:26,200
again that's just something kind of to to keep in mind.

638
00:32:27,400 --> 00:32:30,000
So yeah so we'll take it but for now we only have billions so we'll

639
00:32:30,000 --> 00:32:33,800
kind of look at that will let that kind of come out as it as it comes.

640
00:32:33,800 --> 00:32:38,000
We won't we won't try to do anything weird with that the moment but

641
00:32:38,000 --> 00:32:38,600
here we go.

642
00:32:39,200 --> 00:32:42,100
Okay, so the other thing that I'm going to want isn't

643
00:32:42,200 --> 00:32:44,400
Going to want a little context thing here.

644
00:32:44,900 --> 00:32:48,200
So that stuff can be you know, recorded a little more cleanly.

645
00:32:48,400 --> 00:32:52,000
So inside debug create variable and all those sorts of things were

646
00:32:52,000 --> 00:32:53,800
going to want the debug State.

647
00:32:54,000 --> 00:32:59,300
I feel like you know, for these things and the debug state

648
00:33:00,000 --> 00:33:04,200
Probably I maybe even want a little bit more so I probably want like a

649
00:33:04,600 --> 00:33:10,300
debug variable definition context kind of a thing that's going to wrap

650
00:33:10,400 --> 00:33:15,600
up my my debug state memory Arena.

651
00:33:17,800 --> 00:33:19,300
Which is what I'm gonna need to implement it.

652
00:33:19,300 --> 00:33:22,700
And then probably also something here like the, you know, debug

653
00:33:22,700 --> 00:33:24,400
variable group or whatever, right.

654
00:33:24,500 --> 00:33:27,400
I'm going to need to know that as these groups get sort of pushed and

655
00:33:27,400 --> 00:33:28,300
popped.

656
00:33:28,600 --> 00:33:33,100
That's something that I'm going to have to sort of be aware of, right.

657
00:33:33,400 --> 00:33:37,800
And similarly, as they get pushed and popped, you know, we're lots of

658
00:33:37,800 --> 00:33:39,900
create like some structure to store it.

659
00:33:39,900 --> 00:33:42,600
So I'm just kind of like hypothetically saying I'm gonna need that

660
00:33:42,600 --> 00:33:46,700
there so I don't know yet exactly what that will be, but it's kind of

661
00:33:46,700 --> 00:33:47,000
obvious.

662
00:33:47,200 --> 00:33:48,100
It's going to have to happen.

663
00:33:49,000 --> 00:33:49,600
So anyway,

664
00:33:51,800 --> 00:33:54,100
Here is the group name, right?

665
00:33:54,100 --> 00:33:55,700
And the context this one, I guess.

666
00:33:55,700 --> 00:33:58,300
We'll just again to take that context straight up.

667
00:33:59,300 --> 00:34:02,100
And this would also take the context like so.

668
00:34:02,700 --> 00:34:07,200
So we call into those and inside here, we know that we could always,

669
00:34:07,400 --> 00:34:11,800
you know, pass that context like this and similarly, these guys could

670
00:34:11,800 --> 00:34:13,600
always pass the context like this.

671
00:34:15,199 --> 00:34:15,600
Oops.

672
00:34:20,000 --> 00:34:22,100
Well, and that's starting to look, okay, right?

673
00:34:22,100 --> 00:34:24,100
That's starting to look like it's basically got everything that it

674
00:34:24,100 --> 00:34:24,900
needs.

675
00:34:27,900 --> 00:34:29,400
Should be pretty easy to implement.

676
00:34:30,000 --> 00:34:33,100
And that's that's yeah, that's about it.

677
00:34:33,800 --> 00:34:35,699
So let's take a look at what it would take to implement something like

678
00:34:35,699 --> 00:34:38,600
this again so that we can basically build the data structure which we

679
00:34:38,600 --> 00:34:39,400
will then draw.

680
00:34:40,300 --> 00:34:43,900
So what we would need here is we have the concept of a debug variable

681
00:34:43,900 --> 00:34:46,300
defined right here.

682
00:34:46,800 --> 00:34:49,199
You can see we've got like a type for it and we've got the debug

683
00:34:49,199 --> 00:34:51,100
variable itself, that's all there.

684
00:34:52,000 --> 00:34:54,800
So what we would want to do now is say that there's some way of

685
00:34:54,800 --> 00:34:55,300
holding this

686
00:34:55,500 --> 00:34:56,800
Things, right?

687
00:34:57,200 --> 00:35:00,900
And so that would be where we would get this notion like of a debug

688
00:35:00,900 --> 00:35:02,400
variable group, you know?

689
00:35:03,300 --> 00:35:07,400
And the debug variable group would presumably have something like, I

690
00:35:07,400 --> 00:35:11,600
don't know, whatever it's children are, you know, something like this

691
00:35:12,100 --> 00:35:15,500
so I'm not really sure exactly what that did is structure should be.

692
00:35:15,500 --> 00:35:20,200
But, I mean, I know that it has to hold more groups because like say I

693
00:35:20,200 --> 00:35:23,000
could I already said I want multiple levels of hierarchy so I know I'm

694
00:35:23,000 --> 00:35:25,200
going to have like a group and then each group

695
00:35:25,400 --> 00:35:27,200
you can have multiple groups inside it.

696
00:35:28,300 --> 00:35:30,300
I know that's going to happen and obviously I know it's going to have

697
00:35:30,300 --> 00:35:34,100
a name, but then I also am going to have some kind of a situation.

698
00:35:36,000 --> 00:35:41,800
Where I would have, you know, variables themselves, right?

699
00:35:42,100 --> 00:35:45,400
So a debug variable, I guess, I would say is probably not the right

700
00:35:45,400 --> 00:35:45,900
thing here.

701
00:35:45,900 --> 00:35:49,900
Probably we're going to have is like, a debug variable group.

702
00:35:51,200 --> 00:35:54,800
Maybe we'll just call this a debug group and a debug group member.

703
00:35:56,100 --> 00:35:59,800
and a debug group member right, could either be a variable

704
00:36:00,700 --> 00:36:06,300
Or something like this or, you know, maybe it could in addition to

705
00:36:06,300 --> 00:36:08,600
being a variable, be another group.

706
00:36:09,300 --> 00:36:12,300
And in fact, I guess there's not really much reason because debug

707
00:36:12,300 --> 00:36:15,800
variables not really used in any other sense, so it could be that

708
00:36:15,800 --> 00:36:22,200
maybe debug variable itself is is really just we could just use it.

709
00:36:23,500 --> 00:36:25,500
Because I mean, like I said as debug code, there's really not that

710
00:36:25,500 --> 00:36:28,100
much point in having it be any fancier than that.

711
00:36:28,100 --> 00:36:29,600
We could just do something like this.

712
00:36:30,800 --> 00:36:31,400
Right.

713
00:36:31,600 --> 00:36:33,600
We're now we have a set of things.

714
00:36:35,700 --> 00:36:37,000
Does things go in a group?

715
00:36:37,700 --> 00:36:40,100
And then we can just say that it's always a debug variable group.

716
00:36:40,100 --> 00:36:44,800
And sometimes a variable is just, some kind of a group itself.

717
00:36:46,000 --> 00:36:48,000
It's seems like a totally fine thing.

718
00:36:49,200 --> 00:36:50,700
So if we were to do that,

719
00:36:52,400 --> 00:36:56,100
then I guess what we would need to do is say all right the names and

720
00:36:56,100 --> 00:36:59,100
stuff like that are going to be in sort of these debug variables and

721
00:36:59,100 --> 00:36:59,900
that's all fine.

722
00:37:00,300 --> 00:37:03,500
But we need some way of maybe like chaining these things together so

723
00:37:03,500 --> 00:37:06,400
that we can iterate over them or you know, who knows other things like

724
00:37:06,400 --> 00:37:06,900
that.

725
00:37:07,400 --> 00:37:10,800
And so if we were going to do that I guess the easiest way to do that

726
00:37:10,800 --> 00:37:13,600
would be to say like every debug variable probably has like an

727
00:37:13,600 --> 00:37:16,200
exporter in it so that we can kind of run through it.

728
00:37:16,700 --> 00:37:20,500
And you know, we could have a child pointer to fit, you know, first

729
00:37:20,500 --> 00:37:21,800
child or something like that in

730
00:37:21,900 --> 00:37:27,100
Of a group that sort of thing for now, that seems like a pretty easy

731
00:37:27,100 --> 00:37:28,300
way to go, right?

732
00:37:28,400 --> 00:37:33,100
And so this v32 would actually be like the Boolean, right?

733
00:37:33,100 --> 00:37:34,100
Or will 52.

734
00:37:37,100 --> 00:37:39,900
And so, then this this would be if it's a group that's what it would

735
00:37:39,900 --> 00:37:40,200
have.

736
00:37:40,200 --> 00:37:43,900
Now, the group probably will want more information than that because

737
00:37:43,900 --> 00:37:47,100
now, you know, if it's a hierarchical list group view or something

738
00:37:47,100 --> 00:37:52,000
like that, then obviously like a debug variable group.

739
00:37:53,800 --> 00:37:54,600
Artistry.

740
00:37:54,600 --> 00:37:58,000
But debug group is now something that kind of exists inside here

741
00:37:58,800 --> 00:38:00,300
because we're saying that these can be grouped.

742
00:38:00,700 --> 00:38:03,500
So there's our debug group like that.

743
00:38:04,900 --> 00:38:06,600
It's going to have a pointer to the first child.

744
00:38:09,600 --> 00:38:11,700
But it would probably also it again just like saying I'm

745
00:38:11,700 --> 00:38:15,400
hypothetically saying, it might also have a thing like, did you expand

746
00:38:15,400 --> 00:38:15,700
it?

747
00:38:15,800 --> 00:38:18,300
Because like, if it, you know, if the UI allows expanding and

748
00:38:18,300 --> 00:38:22,600
collapsing these groups, then there's probably a notion of what's at

749
00:38:22,600 --> 00:38:23,500
stake right now.

750
00:38:24,200 --> 00:38:24,800
You know what I mean?

751
00:38:25,400 --> 00:38:29,800
So, that's just an example of how, this sort of thing might go.

752
00:38:30,100 --> 00:38:32,400
And if I want to build that, right?

753
00:38:32,800 --> 00:38:34,500
That's just like, right, I wrote the code here.

754
00:38:34,500 --> 00:38:35,200
This is the code.

755
00:38:35,200 --> 00:38:36,300
I want to have happen.

756
00:38:36,700 --> 00:38:38,700
I know that I need to get it into something.

757
00:38:38,700 --> 00:38:39,100
This is the

758
00:38:39,300 --> 00:38:41,800
Simple something I could see storing that thing.

759
00:38:42,200 --> 00:38:45,400
And so now, I'm just going to, like, type in the code that translates

760
00:38:45,400 --> 00:38:46,900
that to that, right?

761
00:38:46,900 --> 00:38:49,800
That translates this into that.

762
00:38:50,400 --> 00:38:53,200
So in order to begin a variable group, obviously I'm going to have to

763
00:38:53,200 --> 00:38:55,500
push on to my Arena.

764
00:38:56,100 --> 00:38:57,800
I'm going to have to push one of these things.

765
00:38:58,700 --> 00:38:59,800
I'm always pushing a

766
00:39:00,000 --> 00:39:02,100
But variable on there.

767
00:39:02,700 --> 00:39:05,300
And, you know, because I'm always going to be pushing A debug variable

768
00:39:05,300 --> 00:39:07,600
no matter what kind of variable I do, I think I probably want to do

769
00:39:07,600 --> 00:39:11,400
something where that debug variable push

770
00:39:13,700 --> 00:39:20,900
Or just you know debug add variable R, it adds a generic variable like

771
00:39:20,900 --> 00:39:23,000
this is probably going to be sort of a root function.

772
00:39:23,100 --> 00:39:23,800
I'm going to pass it.

773
00:39:23,800 --> 00:39:27,300
Whatever the name is I'm going to pass it, whatever the type is and I

774
00:39:27,300 --> 00:39:29,600
everybody's going to call through this right because I know that

775
00:39:29,600 --> 00:39:33,000
everybody whether you're making a group or making a Boolean or making

776
00:39:33,000 --> 00:39:36,100
any of the other floating Point whatever kind of values we may want to

777
00:39:36,100 --> 00:39:39,000
have in the future, we know that you're going to call through this

778
00:39:39,000 --> 00:39:39,500
right?

779
00:39:39,700 --> 00:39:42,100
And so we want to do is have it so that you know you

780
00:39:43,200 --> 00:39:47,500
You get too far out of the Arena, you initialize the values that we

781
00:39:47,500 --> 00:39:49,800
know that all of them have you know I'm saying.

782
00:39:50,700 --> 00:39:53,900
And then you go ahead and return that thing.

783
00:39:54,700 --> 00:40:00,000
So then here we've got our our group in this case and so in order to

784
00:40:00,000 --> 00:40:02,000
make the resulting group,

785
00:40:03,200 --> 00:40:06,500
All we have to do there, I guess we'll call it group.

786
00:40:08,000 --> 00:40:08,700
Oh, and you know what?

787
00:40:08,700 --> 00:40:13,700
I just realized to when we do this, add this debug a variable that

788
00:40:14,000 --> 00:40:17,100
should presumably add it to the group.

789
00:40:17,300 --> 00:40:19,100
I'm also I'm going to do a little thing here.

790
00:40:19,300 --> 00:40:22,600
If we only have a pointer to the first child then one of the things

791
00:40:22,600 --> 00:40:23,500
that's very difficult.

792
00:40:23,500 --> 00:40:27,000
If you have a singly linked list is you if you want your variables to

793
00:40:27,000 --> 00:40:29,800
go in order which I do, I want them to kind of be in order.

794
00:40:30,400 --> 00:40:32,800
We would have to reverse the order of them

795
00:40:33,000 --> 00:40:36,800
Are because they're going to get pushed on like the the last person

796
00:40:36,800 --> 00:40:39,200
who gets added to the list would be the first person who shows up in

797
00:40:39,200 --> 00:40:42,700
the list because you always are adding them at the head end, right?

798
00:40:43,700 --> 00:40:44,900
And since I would rather have it go.

799
00:40:44,900 --> 00:40:46,500
The other way, I want a store.

800
00:40:46,500 --> 00:40:49,100
I think, even though it's a singly linked list, I'm going to store the

801
00:40:49,100 --> 00:40:53,000
first and last pointer because it's really pretty trivial to do that.

802
00:40:53,000 --> 00:40:56,400
And then it means that, as I add, it will add, I can add at the end,

803
00:40:57,100 --> 00:40:58,100
which is what I want.

804
00:40:59,000 --> 00:40:59,400
You know.

805
00:41:01,100 --> 00:41:04,600
All right, so if I do debug add variable then implicitly, what we want

806
00:41:04,600 --> 00:41:09,800
to say is, in that case, is that when we add, we always add to

807
00:41:09,800 --> 00:41:12,700
whatever the group is that we're working on right now, right?

808
00:41:12,700 --> 00:41:16,200
So, whatever, the open group actually is that is the group to, which

809
00:41:16,200 --> 00:41:19,100
this variable is, is added.

810
00:41:19,700 --> 00:41:24,100
And so, we're going to say something like, you know, after we create

811
00:41:24,100 --> 00:41:26,700
this variable, we now need to add it to the group.

812
00:41:26,900 --> 00:41:30,500
So we're going to say, debug variable group equals context group,

813
00:41:31,000 --> 00:41:34,400
If that group is a valid pointer meaning, if there is any open group

814
00:41:34,400 --> 00:41:37,200
at all because maybe the very first one we add there, be no open

815
00:41:37,200 --> 00:41:41,000
group, for example, not crowned, that's good.

816
00:41:41,700 --> 00:41:47,300
Then what we want to do is say that group, it's got two cases, you

817
00:41:47,300 --> 00:41:53,000
know, with a linked list, one case we have where there is something in

818
00:41:53,000 --> 00:41:54,600
the list, right?

819
00:41:54,600 --> 00:41:57,000
And another cases where there isn't something in the list.

820
00:41:57,000 --> 00:41:59,800
So if there's nothing in a list, it's really trivial.

821
00:42:00,300 --> 00:42:03,800
To add something to the list as you might expect.

822
00:42:04,400 --> 00:42:11,100
Because in this case, all you have is the variable that all you have

823
00:42:11,100 --> 00:42:11,600
is the variable.

824
00:42:11,600 --> 00:42:14,600
The variable is the only thing that exists as we all know, it is the

825
00:42:14,600 --> 00:42:15,200
everything.

826
00:42:16,900 --> 00:42:20,100
So, basically going to just have a next pointer of zero, which would

827
00:42:20,100 --> 00:42:21,300
be like the default thing.

828
00:42:21,600 --> 00:42:22,100
Anyway,

829
00:42:23,100 --> 00:42:24,700
you know, I like put that up above the union.

830
00:42:27,300 --> 00:42:31,100
So you know, you've got an exporter of 0 and you've just got a list

831
00:42:31,100 --> 00:42:35,200
that consists of nothing other than the very first person in the list.

832
00:42:35,500 --> 00:42:36,900
That's the first and last person.

833
00:42:37,700 --> 00:42:40,600
But assuming that there is something in the list, then what we would

834
00:42:40,600 --> 00:42:45,700
want to do is make the last child, become the variable, right?

835
00:42:46,000 --> 00:42:49,200
And the variables next pointer should point to the last child.

836
00:42:52,100 --> 00:42:54,100
Because, oh, sorry, that's not true.

837
00:42:54,700 --> 00:42:58,800
And the last child's next pointer should point to the variable, right?

838
00:42:58,900 --> 00:43:01,800
So whoever was last is not last anymore.

839
00:43:02,000 --> 00:43:03,700
We are last and we point to them.

840
00:43:04,500 --> 00:43:07,900
And the last child is now up, we're moving that pointer forward to us,

841
00:43:07,900 --> 00:43:10,700
so we're just changing out of the end and the way that I like to write

842
00:43:10,700 --> 00:43:14,000
this to make it symmetric, I think it's kind of fun is to make it.

843
00:43:14,000 --> 00:43:16,000
This is one of those like stupid programmer things.

844
00:43:16,500 --> 00:43:19,700
I often like to write this this way for maximum pointless.

845
00:43:19,900 --> 00:43:20,300
Tree.

846
00:43:21,200 --> 00:43:22,700
I like to make it look like this.

847
00:43:24,700 --> 00:43:26,000
It's just kind of pleasant.

848
00:43:26,900 --> 00:43:28,900
You know, wouldn't you say?

849
00:43:29,600 --> 00:43:30,700
I feel like it's true.

850
00:43:32,300 --> 00:43:32,900
I don't know.

851
00:43:32,900 --> 00:43:33,800
I don't know why.

852
00:43:34,200 --> 00:43:34,900
You know, you can.

853
00:43:34,900 --> 00:43:38,700
You can get even more ridiculous with it, if you want to, but, but I

854
00:43:38,700 --> 00:43:41,800
feel like that's just kind of a pleasant kind of a pleasant way to do

855
00:43:41,800 --> 00:43:42,100
it.

856
00:43:43,700 --> 00:43:44,300
So there we go.

857
00:43:44,300 --> 00:43:47,400
Now that we're all chained up, so we can just add variables all day

858
00:43:47,400 --> 00:43:50,100
long and they'll come into a nice hard core structure.

859
00:43:51,100 --> 00:43:52,500
And so, we have to do one of the thing.

860
00:43:52,700 --> 00:43:55,500
I don't know like that there's any reason to do this.

861
00:43:57,600 --> 00:44:00,200
I don't know that we really need it but it does mean that it would

862
00:44:00,200 --> 00:44:03,700
simplify our sort of begin, very dependent variable group stuff.

863
00:44:03,900 --> 00:44:05,700
So I'm just gonna stick it in there because again these are debug

864
00:44:05,700 --> 00:44:08,800
variables we can literally compile the completely out if we want to.

865
00:44:08,800 --> 00:44:12,300
So we really just don't care how much memory they take as long as

866
00:44:12,300 --> 00:44:15,700
they're, you know, flexible and do what we need them to do.

867
00:44:15,700 --> 00:44:16,600
We're totally fine.

868
00:44:17,400 --> 00:44:20,600
And so in this case, it's really, really simple.

869
00:44:21,800 --> 00:44:22,300
Right?

870
00:44:25,000 --> 00:44:28,100
Yeah, so that's it.

871
00:44:28,800 --> 00:44:30,700
In order to begin a group.

872
00:44:30,900 --> 00:44:35,500
All we would do is we again, call add variable, we'd say that we want

873
00:44:35,600 --> 00:44:41,200
it to make for us, one of these group types and there's the name of it

874
00:44:41,400 --> 00:44:45,100
that would give us the group and we don't really have to do anything

875
00:44:45,100 --> 00:44:48,400
with the group structure per se, other than initialize its variable.

876
00:44:48,400 --> 00:44:51,400
So we'll assume that all groups start unexpanded for now.

877
00:44:51,600 --> 00:44:54,500
We'll assume that their first child and their last child's are.

878
00:44:54,500 --> 00:44:55,800
No, there's nothing in them.

879
00:44:57,400 --> 00:44:57,800
Right.

880
00:44:57,800 --> 00:44:59,800
And then by default when you begin a variable group,

881
00:45:00,000 --> 00:45:03,500
Sleeve that becomes the new group, right?

882
00:45:04,100 --> 00:45:08,000
But everything will be added in if you go to add a bully, mmm.

883
00:45:09,800 --> 00:45:11,200
Then that's again, pretty simple.

884
00:45:11,400 --> 00:45:12,600
We're just calling the exact same thing.

885
00:45:12,600 --> 00:45:14,900
Again, we're adding a variable here.

886
00:45:18,000 --> 00:45:20,300
Right, we're taking the context.

887
00:45:20,400 --> 00:45:22,000
We're taking this type.

888
00:45:23,600 --> 00:45:24,000
Oops.

889
00:45:26,400 --> 00:45:27,500
And we're taking the name.

890
00:45:29,100 --> 00:45:33,700
We are then going to set that variables Boule 32 value to the value

891
00:45:34,700 --> 00:45:35,600
and that's it.

892
00:45:36,100 --> 00:45:40,800
When we end a group what we will do is say that the context Group

893
00:45:40,800 --> 00:45:45,300
which is was the current group, we will simply assert that it is not

894
00:45:45,300 --> 00:45:49,100
equal to 0 because you can't end a group if there wasn't a group and

895
00:45:49,100 --> 00:45:52,200
then we'll set the new group to be, whatever that groups parent was

896
00:45:52,200 --> 00:45:55,300
because we're basically popping the group at that point, right?

897
00:45:56,900 --> 00:45:57,900
so that

898
00:45:59,400 --> 00:46:02,700
Is actually the entirety of the code necessary to create the entire

899
00:46:02,700 --> 00:46:04,500
hard core structure of our debug system, right?

900
00:46:04,500 --> 00:46:07,800
I mean, it's like, you know, it's like 30 lines of code or something

901
00:46:07,800 --> 00:46:09,000
very, very, very simple.

902
00:46:10,300 --> 00:46:11,200
And that's really all.

903
00:46:11,200 --> 00:46:15,100
I think that we will need now, the debug variable definition context,

904
00:46:15,100 --> 00:46:19,100
we need to create in order to get the process started, but that's

905
00:46:19,100 --> 00:46:19,900
really all.

906
00:46:19,900 --> 00:46:23,100
There is so here's our context, right?

907
00:46:23,400 --> 00:46:26,500
We can go ahead and set the variables of the context there.

908
00:46:29,900 --> 00:46:31,100
We can set the variables of them.

909
00:46:31,100 --> 00:46:34,200
We've got the state, we've got the arena.

910
00:46:38,000 --> 00:46:40,300
And so, I guess debug create variables would probably do something

911
00:46:40,300 --> 00:46:41,800
like this, right?

912
00:46:53,200 --> 00:46:53,500
Yeah.

913
00:46:55,400 --> 00:46:59,200
And so, what we want to do for our very first group is that probably

914
00:46:59,200 --> 00:47:01,800
just wants to call begin group, right?

915
00:47:01,800 --> 00:47:03,900
So we're going to start with like a route group.

916
00:47:04,000 --> 00:47:08,100
If that makes sense, we'll call it the route group because it just

917
00:47:08,100 --> 00:47:09,500
makes our lives a little easier.

918
00:47:11,000 --> 00:47:14,400
Because at some level if we just have a situation where we've got

919
00:47:16,400 --> 00:47:18,400
All of this stuff set up for hierarchical things.

920
00:47:18,600 --> 00:47:20,400
We might, as well as make the root of it.

921
00:47:20,500 --> 00:47:24,700
Be go through the whole path that we have, right?

922
00:47:24,700 --> 00:47:28,400
There's no real reason why we wouldn't do that.

923
00:47:28,700 --> 00:47:31,000
It just seems like the obvious thing to do just saves a lot of typing.

924
00:47:31,000 --> 00:47:32,800
So that's, that's it.

925
00:47:33,400 --> 00:47:37,600
So in order to do these here, when we with this Arena, what I'd like

926
00:47:37,600 --> 00:47:40,800
to do is I guess, say that, why do I keep wanting to do that?

927
00:47:40,800 --> 00:47:41,200
There we go.

928
00:47:42,100 --> 00:47:45,000
I just, I just say that we've got the debugger Arena.

929
00:47:45,100 --> 00:47:46,000
So, whatever that is

930
00:47:46,100 --> 00:47:47,200
Rena is right.

931
00:47:47,200 --> 00:47:48,600
That's the one that we would use.

932
00:47:51,500 --> 00:47:55,100
Like that and I think that's basically it.

933
00:47:55,700 --> 00:47:58,300
So now inside a ham idea.

934
00:47:58,300 --> 00:47:59,900
Bug when we are initialized when

935
00:48:00,000 --> 00:48:03,700
Initially when we make our initial attempts to make the arena there,

936
00:48:03,700 --> 00:48:08,800
immediately after that, I think would be fine time to create the

937
00:48:08,800 --> 00:48:10,400
stuff, right?

938
00:48:11,500 --> 00:48:12,700
So there's debug state.

939
00:48:16,200 --> 00:48:25,200
And my my forget where we include this guy, to be honest with you, I

940
00:48:25,200 --> 00:48:25,700
do okay.

941
00:48:25,700 --> 00:48:26,200
There it is.

942
00:48:27,200 --> 00:48:33,700
So if this is where this gets included, I'm not sure why and the debug

943
00:48:33,700 --> 00:48:38,800
variable group was not it's because I called it debug group.

944
00:48:39,900 --> 00:48:43,100
Which was not the name that we said, it was going to be, do I use

945
00:48:43,400 --> 00:48:45,000
which one did I end up using?

946
00:48:45,500 --> 00:48:46,400
So I never use that.

947
00:48:46,400 --> 00:48:47,400
So let's try that again.

948
00:48:48,500 --> 00:48:49,800
Let's just call it that instead.

949
00:48:55,900 --> 00:48:57,100
Yeah.

950
00:48:57,700 --> 00:48:58,700
Yeah.

951
00:48:59,800 --> 00:49:00,400
Yeah.

952
00:49:03,900 --> 00:49:06,900
So in this case, we don't really want to start doing very well group

953
00:49:06,900 --> 00:49:10,000
pointers because basically everything is a debug variable anyway, so

954
00:49:10,000 --> 00:49:13,400
that seems fine in this case when we have groups, we really want to

955
00:49:13,400 --> 00:49:18,400
talk about group dot, you know, the actual group part of that since

956
00:49:18,400 --> 00:49:20,900
it's in a union, right, which is pretty easy.

957
00:49:21,900 --> 00:49:23,000
Again, same thing here.

958
00:49:23,000 --> 00:49:26,600
So this is just basic cleaning up, compile errors, nothing

959
00:49:26,600 --> 00:49:28,300
particularly going on.

960
00:49:28,300 --> 00:49:30,800
Interesting here, pretty straightforward.

961
00:49:31,800 --> 00:49:33,500
So when we return

962
00:49:34,100 --> 00:49:40,300
These guys, we're gonna have to actually say what we made so that

963
00:49:40,300 --> 00:49:41,500
people can edit them.

964
00:49:41,600 --> 00:49:45,100
That's probably a good idea just in general because we may want people

965
00:49:45,100 --> 00:49:48,700
to call in to Big special variables at some point or things like this.

966
00:49:48,900 --> 00:49:52,500
So you might as well just get in the habit of returning, those things

967
00:49:52,600 --> 00:49:55,400
out of the functions, easy enough.

968
00:49:57,000 --> 00:50:01,600
And what is the problem that was supposed to be a semicolon?

969
00:50:01,600 --> 00:50:02,500
But wasn't

970
00:50:03,600 --> 00:50:08,700
and that was an errant quote, their real group that should have one on

971
00:50:08,700 --> 00:50:09,500
either side.

972
00:50:11,900 --> 00:50:17,400
And our debug variable index loop loop things here when we do our

973
00:50:17,400 --> 00:50:21,300
right hand made config, now we will have to Traverse this thing as a

974
00:50:21,300 --> 00:50:22,900
hierarchy and write it out.

975
00:50:23,400 --> 00:50:26,400
So this is actually perfect because we have about eight minutes left

976
00:50:26,400 --> 00:50:27,000
on the stream.

977
00:50:27,400 --> 00:50:31,500
This will give us a perfect test of our construction code to see

978
00:50:31,500 --> 00:50:34,900
whether or not it worked, right?

979
00:50:35,900 --> 00:50:37,300
So let's go ahead and do that.

980
00:50:38,000 --> 00:50:40,100
All we need to do to complete our

981
00:50:40,300 --> 00:50:45,300
Structure is to have a way to get it right in order to get it.

982
00:50:45,300 --> 00:50:49,700
All we need to do is say that well in here we just need to have some

983
00:50:49,700 --> 00:50:52,700
way of getting to the debug variable.

984
00:50:52,700 --> 00:50:54,800
That's like our route group, right?

985
00:50:54,900 --> 00:50:59,400
Whatever our route group is that is the thing that will iterate over

986
00:50:59,400 --> 00:50:59,800
so, well,

987
00:51:00,000 --> 00:51:03,100
Assume that the route group has been set because this is the thing

988
00:51:03,600 --> 00:51:08,400
that sets it and in fact, I guess what I can do here as well, is just

989
00:51:08,400 --> 00:51:13,300
kind of say like, oh, hey, debug create variables, that will just

990
00:51:13,300 --> 00:51:16,700
return, whatever that route is, right?

991
00:51:16,900 --> 00:51:20,000
So that we can store it on the other side.

992
00:51:20,600 --> 00:51:21,800
And so if we do that,

993
00:51:23,600 --> 00:51:25,700
Well, you know, I don't even know if we want to return it because

994
00:51:25,700 --> 00:51:26,800
maybe we'll set multiple things.

995
00:51:26,800 --> 00:51:30,200
So, so let's not going to say that, let's just say that.

996
00:51:30,200 --> 00:51:34,300
At the end of this, what it does is it takes the state and it sets

997
00:51:34,300 --> 00:51:37,000
that route group equal to the context group.

998
00:51:37,800 --> 00:51:40,900
So, it just, it writes it into the debug State itself.

999
00:51:41,400 --> 00:51:41,700
Whoops,

1000
00:51:43,400 --> 00:51:46,200
Alright, so now we are in the position to Loop over it just fine.

1001
00:51:46,800 --> 00:51:49,900
And again this is just going to be a recursive sort of thing.

1002
00:51:50,500 --> 00:51:54,600
So all we have to do here is just say right hand made config recursive

1003
00:51:55,400 --> 00:52:00,100
and what that will do is it will just go ahead and sort of do this

1004
00:52:00,100 --> 00:52:01,600
exact process actually.

1005
00:52:01,600 --> 00:52:04,400
I guess I should make supper one of these something like that.

1006
00:52:08,300 --> 00:52:08,800
Right.

1007
00:52:13,900 --> 00:52:15,000
I guess you know what?

1008
00:52:15,100 --> 00:52:18,900
Since we have parent pointers I suppose I don't even really need to

1009
00:52:18,900 --> 00:52:20,400
make it be recursive, do I?

1010
00:52:25,100 --> 00:52:27,700
Let's try doing that recursive, why not?

1011
00:52:29,000 --> 00:52:35,100
So, if I wanted to, I can start with the root group, write debug

1012
00:52:35,100 --> 00:52:38,700
variable, you know, far.

1013
00:52:39,300 --> 00:52:42,400
And I can say, okay, we know that this is the route group

1014
00:52:43,600 --> 00:52:46,900
So the first thing we would do is we'd go to its first child

1015
00:52:47,600 --> 00:52:48,300
naturally.

1016
00:52:49,400 --> 00:52:52,700
And then we're going to iterate over that until we get to the last

1017
00:52:52,700 --> 00:52:53,400
one, right?

1018
00:52:53,600 --> 00:52:59,500
So while we still have our off, we will go and we would want to write

1019
00:52:59,500 --> 00:53:00,400
this out, right?

1020
00:53:00,900 --> 00:53:04,400
So we'd go ahead on while VAR and this, by the way, we're going to

1021
00:53:04,400 --> 00:53:06,100
have to deal with in a bit anyway.

1022
00:53:06,200 --> 00:53:06,400
Okay.

1023
00:53:06,400 --> 00:53:08,800
So you need a giant buffer here

1024
00:53:09,900 --> 00:53:12,100
We'll probably want to allocate that but that's not our problem for

1025
00:53:12,100 --> 00:53:12,800
the moment.

1026
00:53:13,600 --> 00:53:16,300
So what we would do is while we have a variable we will write out the

1027
00:53:16,300 --> 00:53:18,800
variable that were on and then we just need a way of getting to the

1028
00:53:18,800 --> 00:53:20,500
next variable, right?

1029
00:53:21,000 --> 00:53:23,800
So we would say okay the next thing we're going to write out

1030
00:53:25,500 --> 00:53:29,300
Is going to be dependent on what this thing was, right?

1031
00:53:30,300 --> 00:53:33,500
So what I'll say first is I'll say if the variables type

1032
00:53:36,300 --> 00:53:37,400
was a group.

1033
00:53:40,500 --> 00:53:43,700
Then I know that the we have to descend the level, the next thing I

1034
00:53:43,700 --> 00:53:47,900
want to write out is going to be like it's child or something, right?

1035
00:53:49,100 --> 00:53:52,800
So I want to do something like the next guy is going to be the vark

1036
00:53:52,800 --> 00:53:53,900
group first child.

1037
00:53:54,700 --> 00:53:56,100
So that's what I do next, right?

1038
00:53:56,600 --> 00:53:57,800
If it's not a group,

1039
00:53:59,400 --> 00:53:59,700
then I

1040
00:54:00,100 --> 00:54:03,500
Next pointer to be whatever it actually is, right.

1041
00:54:03,500 --> 00:54:05,500
So, whatever comes after

1042
00:54:08,800 --> 00:54:10,700
This guy if the guy alright up next.

1043
00:54:11,100 --> 00:54:15,800
However if there isn't one so if there's if there's nothing down there

1044
00:54:15,900 --> 00:54:17,700
so I got into the end of this list.

1045
00:54:17,900 --> 00:54:23,600
Then what I want to do is say okay if there wasn't anybody next then

1046
00:54:23,600 --> 00:54:26,700
go up one level of the tree, right?

1047
00:54:26,800 --> 00:54:31,200
So go you know the next pointer is going to be equal to the VAR parent

1048
00:54:31,400 --> 00:54:32,700
which I've gone up, one level.

1049
00:54:33,600 --> 00:54:37,600
And remember, I've already written out the parent.

1050
00:54:37,700 --> 00:54:38,400
Presumably

1051
00:54:39,700 --> 00:54:43,600
So at that point, I would want to advance one on the parent as well.

1052
00:54:44,000 --> 00:54:44,500
Right?

1053
00:54:45,200 --> 00:54:50,000
And presumably, yeah, I need to do this in sort of a while loop

1054
00:54:50,000 --> 00:54:51,600
fashion, right?

1055
00:54:51,700 --> 00:54:53,400
I need to sort of do it like this.

1056
00:54:53,700 --> 00:54:56,900
I need to say, while, you know, because I may have to pop up multiple

1057
00:54:56,900 --> 00:54:58,300
times, right?

1058
00:54:58,900 --> 00:55:01,100
So it's probably more like this.

1059
00:55:03,400 --> 00:55:08,300
the first thing would be to say, alright, let's start with

1060
00:55:15,700 --> 00:55:16,800
Something like this.

1061
00:55:18,200 --> 00:55:23,200
So I'd say start with the one we're on, while it's not valid, I'm

1062
00:55:23,200 --> 00:55:30,300
sorry while while I guess just I might even do a forever one here.

1063
00:55:30,300 --> 00:55:34,000
So like, just keep going and I'll have the break Criterion here, like

1064
00:55:34,000 --> 00:55:36,000
something like this, right?

1065
00:55:37,500 --> 00:55:40,500
So what I would do now is say, Okay, first try to go to the next one,

1066
00:55:41,100 --> 00:55:44,800
you know, if the next one is valid, you print that?

1067
00:55:45,600 --> 00:55:47,200
Because that's that's the guy we're going to go.

1068
00:55:47,200 --> 00:55:49,300
So break out a break out of here.

1069
00:55:49,300 --> 00:55:55,100
Continue the loop, you know, and so just leave our equals next.

1070
00:55:55,100 --> 00:55:58,600
End up, in fact, I guess, since we want varda be it.

1071
00:56:00,000 --> 00:56:02,600
At this point, I suppose, I could just do this all with vars.

1072
00:56:02,600 --> 00:56:04,000
Well, right.

1073
00:56:04,000 --> 00:56:06,700
So I could just make this all be with VAR, I don't even know that I

1074
00:56:06,700 --> 00:56:08,000
really need this next thing.

1075
00:56:08,500 --> 00:56:10,400
In fact, do I need that at all?

1076
00:56:11,300 --> 00:56:12,300
I don't think I do.

1077
00:56:12,900 --> 00:56:15,400
So I suppose it's just this I don't even know why I introduced that

1078
00:56:15,400 --> 00:56:15,700
variable.

1079
00:56:15,700 --> 00:56:16,800
Maybe there was a reason for it.

1080
00:56:16,800 --> 00:56:17,600
Not sure what it was.

1081
00:56:18,400 --> 00:56:20,000
So I think I want something else like this.

1082
00:56:20,200 --> 00:56:21,400
So I go to the next one.

1083
00:56:24,300 --> 00:56:25,600
If there is a next one, right?

1084
00:56:25,600 --> 00:56:26,200
So I just do it.

1085
00:56:26,200 --> 00:56:29,600
That's why I introduced it because of that milnes, but that was just

1086
00:56:29,600 --> 00:56:30,000
stupid.

1087
00:56:30,000 --> 00:56:32,800
I can just say if there is a next one, go to the next one.

1088
00:56:32,900 --> 00:56:34,400
That's much cleaner, right?

1089
00:56:34,500 --> 00:56:36,600
So if there is a next one, go to the next one.

1090
00:56:37,100 --> 00:56:40,800
If there isn't a next one, then I go to the parent, right?

1091
00:56:41,000 --> 00:56:49,000
I just say like, okay, you know, VAR VAR equals of our parent.

1092
00:56:49,500 --> 00:56:50,400
So I've gone up one

1093
00:56:52,600 --> 00:56:55,600
And then I guess this does actually become a while VAR and I'm, maybe

1094
00:56:55,600 --> 00:56:56,100
we're done.

1095
00:56:58,500 --> 00:56:59,500
Does that seem reasonable?

1096
00:57:00,700 --> 00:57:00,900
Right?

1097
00:57:00,900 --> 00:57:04,400
So I come in here, I say assuming of our is not null which I know it

1098
00:57:04,400 --> 00:57:05,300
isn't the first time through.

1099
00:57:05,300 --> 00:57:08,300
But I then say, okay, if there is a next one, we go to the next one

1100
00:57:08,300 --> 00:57:10,000
and we're done we print that one out.

1101
00:57:10,200 --> 00:57:12,900
You know, we Advanced up in that one, if there isn't the next one.

1102
00:57:12,900 --> 00:57:16,700
We go up to the parent and then we go backs up a loop.

1103
00:57:16,700 --> 00:57:20,000
If there isn't a parent, then we're by definition going to follow this

1104
00:57:20,000 --> 00:57:20,700
Loop and be done.

1105
00:57:20,700 --> 00:57:22,900
And we're going to fall out of this loop as well, right?

1106
00:57:23,400 --> 00:57:26,100
If there was a parent, then we're going to see if it has an X pointer.

1107
00:57:26,100 --> 00:57:30,200
If it did we advance to it and break out if it didn't go up to the

1108
00:57:30,500 --> 00:57:30,800
Down.

1109
00:57:32,600 --> 00:57:34,700
Don't know if it'll work seems reasonable.

1110
00:57:35,200 --> 00:57:38,400
All right, so that

1111
00:57:40,900 --> 00:57:44,200
Is about about all there is to that, right?

1112
00:57:45,800 --> 00:57:47,200
So, let's see what else we got here.

1113
00:57:48,000 --> 00:57:50,200
Okay, so values.

1114
00:57:50,200 --> 00:57:52,300
However, debug variable, that's true.

1115
00:57:52,500 --> 00:57:54,200
We're going to do, boo 32 here.

1116
00:57:55,100 --> 00:57:57,600
So we'll just do something like this.

1117
00:58:05,600 --> 00:58:06,100
Oops.

1118
00:58:08,400 --> 00:58:10,600
We'll do that and then we'll see here.

1119
00:58:10,800 --> 00:58:11,800
We're just going to turn off.

1120
00:58:11,800 --> 00:58:13,500
Let's turn off this menu.

1121
00:58:13,800 --> 00:58:15,200
That'll be our job for tomorrow.

1122
00:58:22,900 --> 00:58:23,500
There we go.

1123
00:58:24,700 --> 00:58:28,000
And now what I'd like to see is I'm just going to go ahead and call

1124
00:58:28,000 --> 00:58:33,100
right hand made config directly so that we can see what it actually

1125
00:58:33,300 --> 00:58:33,900
does.

1126
00:58:33,900 --> 00:58:37,200
So I'm going to again, set a breakpoint and we're just about out of

1127
00:58:37,200 --> 00:58:37,600
time.

1128
00:58:37,600 --> 00:58:37,900
Oops.

1129
00:58:41,400 --> 00:58:42,000
Hello.

1130
00:58:42,700 --> 00:58:43,200
There we go.

1131
00:58:44,400 --> 00:58:45,500
At right.

1132
00:58:45,500 --> 00:58:46,900
Hand made Peg.

1133
00:58:47,800 --> 00:58:48,300
Run it.

1134
00:58:50,200 --> 00:58:52,500
And I don't care about push that map.

1135
00:58:54,000 --> 00:58:55,000
So let's see what we get.

1136
00:58:57,100 --> 00:58:59,600
So we start off on on our group here, and I'm going to also take a

1137
00:58:59,600 --> 00:59:00,700
look as we're doing this.

1138
00:59:00,700 --> 00:59:03,000
I'm going to take a look at the string as well, right?

1139
00:59:03,000 --> 00:59:04,100
This is the string right here.

1140
00:59:05,200 --> 00:59:07,100
That we're actually trying to that we're actually sort of

1141
00:59:07,100 --> 00:59:07,800
accumulating.

1142
00:59:08,900 --> 00:59:13,300
So we come in here and the first thing is a group, so it doesn't print

1143
00:59:13,300 --> 00:59:15,300
anything out because we don't have anything for a group.

1144
00:59:15,800 --> 00:59:17,700
So we see that it's a group, we descend one child that.

1145
00:59:17,700 --> 00:59:19,300
Here we are on ground chunk outlines.

1146
00:59:19,900 --> 00:59:22,700
We then see that this is a Boolean so we printed out there it is very

1147
00:59:22,700 --> 00:59:23,300
good.

1148
00:59:24,000 --> 00:59:27,600
We then go to see that there is a next and so we go to the next one

1149
00:59:28,100 --> 00:59:29,500
and we print that out as well.

1150
00:59:29,500 --> 00:59:32,300
So now we've got two things in their ground checkout lines and ground.

1151
00:59:32,300 --> 00:59:34,900
Chunk, we go to the next variable.

1152
00:59:35,000 --> 00:59:38,200
Able there is an X variable so we print that out.

1153
00:59:38,600 --> 00:59:40,000
Let's see what that looks like.

1154
00:59:40,000 --> 00:59:41,700
Again, we've got the third one there.

1155
00:59:41,700 --> 00:59:43,700
That's exactly as intended unfortunate.

1156
00:59:43,700 --> 00:59:45,000
There isn't a next pointer there.

1157
00:59:45,400 --> 00:59:49,600
So now we Ascend one up and we try to go to the next one, on the

1158
00:59:49,600 --> 00:59:50,500
parents level.

1159
00:59:50,900 --> 00:59:55,600
We do get to the next one on the parents level, which is another group

1160
00:59:56,000 --> 00:59:56,900
we fall through here.

1161
00:59:56,900 --> 00:59:59,100
We see if, you know, if this is a printable thing, it's not a

1162
00:59:59,100 --> 00:59:59,800
printable thing.

1163
01:00:00,200 --> 01:00:02,800
So we go ahead and look at the the type.

1164
01:00:02,900 --> 01:00:03,400
It's a group.

1165
01:00:03,400 --> 01:00:06,900
So we descend down to the first child of that group and we see that

1166
01:00:06,900 --> 01:00:12,300
it's a Boolean we printed out blah blah blah blah blah, right we get

1167
01:00:12,300 --> 01:00:12,800
to the end.

1168
01:00:12,800 --> 01:00:15,500
We write out the file and let's take a look at the file that we wrote

1169
01:00:15,500 --> 01:00:18,500
out to see how it looks.

1170
01:00:20,900 --> 01:00:21,700
Looks perfect.

1171
01:00:21,800 --> 01:00:22,600
Everything is good.

1172
01:00:22,700 --> 01:00:25,900
Unfortunately, we did forget one thing, which is that, for whatever

1173
01:00:25,900 --> 01:00:32,500
reason, I totally spaced when we did this, and when we put the names

1174
01:00:32,500 --> 01:00:37,300
in there, obviously, we're going to want to reinsert debug UI in front

1175
01:00:37,300 --> 01:00:40,700
of it, because we've sort of stripped that out from our concept of the

1176
01:00:40,700 --> 01:00:41,200
names.

1177
01:00:42,100 --> 01:00:45,600
So I should probably go ahead and make it so that when we actually do

1178
01:00:46,100 --> 01:00:46,400
right?

1179
01:00:46,400 --> 01:00:49,800
The handmade config, which I'll go ahead and do now.

1180
01:00:51,700 --> 01:00:53,400
We re insert that, right?

1181
01:00:53,400 --> 01:00:55,300
So it's actually going to look like that.

1182
01:00:55,400 --> 01:00:57,600
Since we know our names are now for pretty printing.

1183
01:00:57,900 --> 01:01:01,900
They don't have the that particular thing in front of them.

1184
01:01:02,200 --> 01:01:02,700
Right?

1185
01:01:03,500 --> 01:01:03,700
Yeah.

1186
01:01:03,700 --> 01:01:04,700
And so that's right.

1187
01:01:04,700 --> 01:01:08,000
Yeah that's going to be that's going to complain but otherwise I think

1188
01:01:08,000 --> 01:01:10,900
we're all good again, really simple stuff.

1189
01:01:10,900 --> 01:01:17,700
Nothing too unusual but we've totally gotten now are because all of

1190
01:01:17,700 --> 01:01:20,500
our stuff organized in a much nicer fashion that we can.

1191
01:01:20,700 --> 01:01:21,200
Tough with.

1192
01:01:22,000 --> 01:01:24,200
All right, so let's skip ahead.

1193
01:01:25,900 --> 01:01:26,800
To after it's written.

1194
01:01:28,900 --> 01:01:29,600
All good.

1195
01:01:30,200 --> 01:01:32,900
And so now we are good to go.

1196
01:01:32,900 --> 01:01:35,300
I will pull this guy out.

1197
01:01:36,500 --> 01:01:37,400
From handmade debug.

1198
01:01:37,400 --> 01:01:38,800
And then we will go to the Q&A.

1199
01:01:43,100 --> 01:01:47,700
So yeah, you can kind of see here to kind of mention as an aside.

1200
01:01:49,100 --> 01:01:50,100
Just want to get rid of that.

1201
01:01:51,000 --> 01:01:54,200
You can kind of see what I did here on the handmade configure right

1202
01:01:54,200 --> 01:01:54,400
out.

1203
01:01:54,400 --> 01:01:58,200
So you know we could have done this recursively but it was just so

1204
01:01:58,200 --> 01:02:03,100
easy to write it in order that way you don't use a stack because you

1205
01:02:03,100 --> 01:02:06,100
know, when you're going to Traverse a tree

1206
01:02:06,800 --> 01:02:09,200
You need a stack to reverse a tree.

1207
01:02:09,200 --> 01:02:13,700
If the stack itself, doesn't have pointers back up the chain, right?

1208
01:02:13,700 --> 01:02:18,300
But the way that I chose to do this just because it was debug code in

1209
01:02:18,300 --> 01:02:18,500
there.

1210
01:02:18,500 --> 01:02:20,400
Wasn't any real reason not to use the space.

1211
01:02:20,400 --> 01:02:27,000
We have these parent pointers so we can always just walk without using

1212
01:02:27,000 --> 01:02:27,500
any storage.

1213
01:02:27,500 --> 01:02:30,100
We can always just walk through just knowing whoever we're on because

1214
01:02:30,100 --> 01:02:32,700
whenever we get to the end of something in there we just chased those

1215
01:02:32,700 --> 01:02:36,800
parent pointers back up and then know that we continue traversing that

1216
01:02:36,800 --> 01:02:37,200
Way.

1217
01:02:37,900 --> 01:02:41,200
So it just makes it, you know, pretty easy to do that.

1218
01:02:41,800 --> 01:02:45,100
Okay, so that's all there is for today tomorrow we will start writing

1219
01:02:45,100 --> 01:02:48,600
some code to print it out that way and allow ourselves to expand and

1220
01:02:48,600 --> 01:02:51,300
collapse our list but that's pretty good.

1221
01:02:51,500 --> 01:02:54,600
I think we're all set and yeah that puts us in a good position for

1222
01:02:54,600 --> 01:02:59,500
tomorrow with that I will go to the question and answers if you have a

1223
01:03:00,000 --> 01:03:06,300
About what we've done, please post it now with a q: in front of it so

1224
01:03:06,300 --> 01:03:10,900
that I can see it and hopefully answer answer it.

1225
01:03:34,600 --> 01:03:35,100
K.

1226
01:03:35,100 --> 01:03:39,100
Can we make it an option to toggle between optimized and debug builds

1227
01:03:39,100 --> 01:03:40,900
from the debug menu?

1228
01:03:43,700 --> 01:03:51,700
Not at the immediate moment because at the immediate moment, we don't

1229
01:03:51,700 --> 01:03:58,500
rewrite the build script at all, but yes, it would be easy for us to

1230
01:03:58,500 --> 01:03:59,100
do that.

1231
01:03:59,100 --> 01:04:03,300
We would just have to say well there's two ways we could do it either

1232
01:04:03,300 --> 01:04:08,400
a we switch back to doing single translation unit with pragma optimize

1233
01:04:08,400 --> 01:04:10,700
off, which I think is probably what we want to do.

1234
01:04:10,900 --> 01:04:12,000
Now that we know that

1235
01:04:12,200 --> 01:04:16,000
The reason it wasn't working before was because we have to also

1236
01:04:16,000 --> 01:04:20,300
include the pragma optimize stuff around inline functions.

1237
01:04:21,900 --> 01:04:22,700
So we could try that again.

1238
01:04:22,700 --> 01:04:25,300
That's probably the right thing to do and then at that point all we

1239
01:04:25,300 --> 01:04:30,200
would do is put debug brackets around the pragma optimize offs so that

1240
01:04:30,200 --> 01:04:35,700
if we turn off that Define it would it would run the code optimized so

1241
01:04:35,700 --> 01:04:37,300
that's probably the way we should do it.

1242
01:04:37,600 --> 01:04:41,400
But the other way we could do it without changing, how we're doing it

1243
01:04:42,400 --> 01:04:43,600
optimizations right now?

1244
01:04:44,100 --> 01:04:49,500
If we could just have a build include file essentially which just set

1245
01:04:49,500 --> 01:04:51,600
some environment variables and then we would write

1246
01:04:51,800 --> 01:04:53,200
That out in there.

1247
01:04:53,800 --> 01:04:56,100
And it one of the things that would set is like additional

1248
01:04:56,100 --> 01:05:00,000
command-line switches and those would either be - oh dear - 02, right?

1249
01:05:01,600 --> 01:05:02,000
So yeah.

1250
01:05:02,000 --> 01:05:06,500
So that's what I think we should probably change to the other.

1251
01:05:06,500 --> 01:05:10,000
I think we should probably switch to using the single translation unit

1252
01:05:10,000 --> 01:05:12,300
build again because that would be better for a number of reasons.

1253
01:05:19,200 --> 01:05:24,100
Let's see, can you run the tool to see how many lines of code we have?

1254
01:05:24,100 --> 01:05:25,400
Yes, I can.

1255
01:05:27,000 --> 01:05:29,100
Lock in the code.

1256
01:05:32,300 --> 01:05:33,700
13,000.

1257
01:05:35,000 --> 01:05:35,600
I guess.

1258
01:05:40,300 --> 01:05:40,900
Wouldn't it be pretty?

1259
01:05:40,900 --> 01:05:45,100
You're visually in our config files to be to be indented, according to

1260
01:05:45,100 --> 01:05:48,600
their group depth, that way, we know which variables belong to which

1261
01:05:48,600 --> 01:05:50,500
group IE variables.

1262
01:05:50,500 --> 01:05:53,000
In the route group, don't have any annotation group Death.

1263
01:05:53,000 --> 01:05:54,800
One will have a single level invitation.

1264
01:05:55,300 --> 01:05:59,800
I don't know that we care because I don't think we will ever use.

1265
01:06:00,000 --> 01:06:04,700
not like I don't will look like the game writes this so I don't know

1266
01:06:04,700 --> 01:06:05,600
that we

1267
01:06:07,100 --> 01:06:11,900
Will ever read it but if you want to obviously it's really trivial

1268
01:06:11,900 --> 01:06:12,100
right?

1269
01:06:12,100 --> 01:06:15,300
You just say the depth is zero or whatever right.

1270
01:06:15,700 --> 01:06:18,100
And each time you do this, you increment the depth and each time you

1271
01:06:18,100 --> 01:06:19,300
do this you decrement the depth

1272
01:06:20,600 --> 01:06:24,800
you know, and then in here you just do right like

1273
01:06:26,400 --> 01:06:33,800
Just really, really basic or indent indent less than depth.

1274
01:06:36,400 --> 01:06:38,700
toughest Indian and, you know,

1275
01:06:40,000 --> 01:06:41,400
Well, you don't have to do that.

1276
01:06:43,000 --> 01:06:43,900
You just do this.

1277
01:06:51,800 --> 01:06:53,400
Write something like that.

1278
01:06:56,400 --> 01:06:59,000
I guess I got a call this from somewhere so you can see if it worked.

1279
01:06:59,000 --> 01:07:03,800
But it would, it would ya.

1280
01:07:05,200 --> 01:07:05,600
Yeah.

1281
01:07:07,000 --> 01:07:07,700
Something like this.

1282
01:07:22,100 --> 01:07:25,300
I mean the other thing you'd probably want to do, I'm just guessing if

1283
01:07:25,300 --> 01:07:28,600
this is your if this is your jam like you're like I like I need this

1284
01:07:28,600 --> 01:07:29,200
in my life.

1285
01:07:29,400 --> 01:07:33,300
This is what makes me feel whole inside and and all that sort of thing

1286
01:07:33,800 --> 01:07:38,700
you would probably cuz we don't print out groups in there you know you

1287
01:07:38,700 --> 01:07:41,900
would probably want to add those as comments, right?

1288
01:07:42,300 --> 01:07:45,100
So you'd probably want to add something like you know,

1289
01:07:49,800 --> 01:07:54,200
You know, you'd be doing this, this sort of action, oops.

1290
01:07:59,100 --> 01:08:04,400
right, which we need to do anyway and so when you encountered a group,

1291
01:08:05,700 --> 01:08:06,700
you would also

1292
01:08:08,000 --> 01:08:09,300
Say what that group was.

1293
01:08:10,300 --> 01:08:17,899
So you do a thing where you were like oh yeah you know just say what

1294
01:08:17,899 --> 01:08:19,600
the group name is a comment.

1295
01:08:20,399 --> 01:08:21,300
Something like this.

1296
01:08:23,200 --> 01:08:24,399
and then when you ran it,

1297
01:08:26,200 --> 01:08:29,200
it would insert lines for groups even though they don't need to be

1298
01:08:29,200 --> 01:08:36,000
defined just so you can see where they are if that makes sense.

1299
01:08:36,500 --> 01:08:41,500
So it's a little, it's a little wonky because you might want to

1300
01:08:41,500 --> 01:08:45,399
control whether you print an indent or not based on whether anyone's

1301
01:08:45,399 --> 01:08:48,300
going to actually be doing it.

1302
01:08:48,399 --> 01:08:51,500
And so you kind of get in this weird situation where you're like okay

1303
01:08:51,500 --> 01:08:52,700
do I print it intent?

1304
01:08:52,800 --> 01:08:55,100
Don't I print it indent but you assume that if everyone

1305
01:08:55,300 --> 01:08:59,600
One always print something out, you know you would do you would do it

1306
01:08:59,600 --> 01:08:59,899
that way.

1307
01:09:00,000 --> 01:09:03,899
probably as well so that you can, you know,

1308
01:09:09,800 --> 01:09:11,300
have camera be indented.

1309
01:09:14,200 --> 01:09:17,000
You might also want this sort of thing, I guess.

1310
01:09:17,899 --> 01:09:20,899
So that it's a little easier to read your indents.

1311
01:09:28,399 --> 01:09:28,899
Right.

1312
01:09:32,800 --> 01:09:33,500
but that's

1313
01:09:35,300 --> 01:09:35,600
yeah.

1314
01:09:41,399 --> 01:09:43,899
Someone has posted a link to the forums.

1315
01:09:44,200 --> 01:09:44,800
Why?

1316
01:09:44,800 --> 01:09:46,800
Why have you posted a link to the forums?

1317
01:09:47,700 --> 01:09:51,399
But you have not told me what I, why am I going there?

1318
01:09:57,300 --> 01:09:57,600
I see.

1319
01:09:57,600 --> 01:10:00,100
So this is requests for changes.

1320
01:10:06,200 --> 01:10:09,100
All right, maybe we can do those because we've got some time to look

1321
01:10:09,100 --> 01:10:11,600
at questions for us but we could do some of those changes for people

1322
01:10:11,600 --> 01:10:12,600
who want to run on Linux.

1323
01:10:13,600 --> 01:10:16,700
Let me let me just go ahead and make sure that we take out the call to

1324
01:10:16,700 --> 01:10:17,400
this though.

1325
01:10:17,600 --> 01:10:18,700
I don't want to leave that in really

1326
01:10:23,900 --> 01:10:26,600
Do you have any add-ons that you are using with Emax?

1327
01:10:27,300 --> 01:10:28,500
Is it something like space?

1328
01:10:28,500 --> 01:10:30,000
Max, no II.

1329
01:10:30,000 --> 01:10:31,300
There are no e add-ons.

1330
01:10:31,300 --> 01:10:32,700
It's just vanilla emacs.

1331
01:10:35,700 --> 01:10:38,400
Off topic question, are you using your razor on stream?

1332
01:10:38,400 --> 01:10:42,500
Know my razor blade Pro laptop.

1333
01:10:44,100 --> 01:10:45,900
I'm not using it at the moment.

1334
01:10:46,100 --> 01:10:52,100
And my it's my it's my you know I use it for Dev so it's not here.

1335
01:10:53,000 --> 01:10:56,100
And this is my old Dusky board.

1336
01:10:56,100 --> 01:11:01,900
Three my Razor keyboard is actually it's plugged into the Razer Blade

1337
01:11:01,900 --> 01:11:02,900
laptop at the moment.

1338
01:11:08,400 --> 01:11:10,300
Just see gr not running the game today.

1339
01:11:10,800 --> 01:11:12,700
We were running the game.

1340
01:11:13,500 --> 01:11:14,800
We were on the games being a stream.

1341
01:11:16,400 --> 01:11:17,300
K was the intro.

1342
01:11:17,300 --> 01:11:19,500
Talk about him made con include as part of the main area of the

1343
01:11:19,500 --> 01:11:20,100
stream.

1344
01:11:20,400 --> 01:11:23,600
Yes, it is in them, it's in the recording, it will be in the YouTube

1345
01:11:23,600 --> 01:11:24,000
archive.

1346
01:11:24,800 --> 01:11:27,900
Switching between Dragon optimized mode, would not need a restart of

1347
01:11:27,900 --> 01:11:28,900
the whole game.

1348
01:11:30,100 --> 01:11:32,400
Nope, I probably wouldn't

1349
01:11:38,300 --> 01:11:40,600
I can't really think of any reason why it would

1350
01:11:42,700 --> 01:11:43,900
Like, off the top of my head.

1351
01:11:53,100 --> 01:11:56,100
A slim serious Zimmer Torre can we sometimes see you play a game on

1352
01:11:56,100 --> 01:11:57,900
Twitch just like John does just to chill out.

1353
01:11:57,900 --> 01:11:59,700
Stream would love to hear a pin on a different games.

1354
01:12:00,000 --> 01:12:04,000
You can there's this channel senior ettore.

1355
01:12:04,500 --> 01:12:08,200
I don't really have typically a ton of time to do it but I do do it

1356
01:12:08,700 --> 01:12:10,900
occasionally and I put the archival thing on.

1357
01:12:10,900 --> 01:12:11,300
So

1358
01:12:20,800 --> 01:12:22,500
what about a handmade certification for games?

1359
01:12:22,500 --> 01:12:25,300
A badge of honor could be placed in a splash screen or in the credits,

1360
01:12:25,300 --> 01:12:26,700
please use certifications.

1361
01:12:26,700 --> 01:12:29,800
Each of the Australian made could be organized the conference.

1362
01:12:35,200 --> 01:12:38,700
So I think that's that's not really something that I'm super

1363
01:12:39,000 --> 01:12:39,800
interested in.

1364
01:12:39,900 --> 01:12:42,300
I mean like I'm interested in people being excited about doing

1365
01:12:42,300 --> 01:12:46,700
handmade Dev stuff, the way that we do it, like I mention people

1366
01:12:47,100 --> 01:12:51,200
caring about code and caring about how their code works, but I don't

1367
01:12:51,200 --> 01:12:54,200
necessarily know that they need to have some kind of a certification,

1368
01:12:54,600 --> 01:12:55,100
you know.

1369
01:12:58,700 --> 01:12:59,800
So I don't know.

1370
01:12:59,800 --> 01:13:01,800
I mean, if other people did that, that's fine.

1371
01:13:01,800 --> 01:13:04,300
But I'm not, that's probably not something that I would do.

1372
01:13:06,700 --> 01:13:09,700
Because the important part is that people care about it and it's not

1373
01:13:09,700 --> 01:13:10,000
so much.

1374
01:13:10,000 --> 01:13:12,100
I don't even know what the certification process would be.

1375
01:13:12,400 --> 01:13:13,700
Like, what would you certify?

1376
01:13:14,100 --> 01:13:18,000
You know, because you have to have some way of saying, what you were

1377
01:13:18,000 --> 01:13:19,300
what were you even trying to certify?

1378
01:13:19,300 --> 01:13:21,900
That the programmer was interested in how their code came out, you

1379
01:13:21,900 --> 01:13:22,000
know?

1380
01:13:22,000 --> 01:13:24,500
I mean, how do you, how do you certify that?

1381
01:13:24,500 --> 01:13:26,100
Just have them say, they did, you know?

1382
01:13:26,100 --> 01:13:27,800
It's something really sure.

1383
01:13:33,600 --> 01:13:34,600
Piracy 9k.

1384
01:13:34,600 --> 01:13:35,100
Thanks to you.

1385
01:13:35,100 --> 01:13:37,700
I was able to implement Dynamic code reloading for my project to

1386
01:13:37,700 --> 01:13:39,800
saving me a time, that is awesome to hear.

1387
01:13:46,400 --> 01:13:48,700
Wait, there is an a Sir John has commented.

1388
01:13:48,700 --> 01:13:49,800
Why did I not see it?

1389
01:13:57,200 --> 01:13:58,100
They say right here.

1390
01:13:58,300 --> 01:13:59,700
Why do I have to stream?

1391
01:13:59,700 --> 01:14:01,200
I paid the micropayment.

1392
01:14:02,000 --> 01:14:03,000
I don't know, man.

1393
01:14:03,900 --> 01:14:08,000
Did you get did you buy enough coins to like to purchase the Stream?

1394
01:14:10,200 --> 01:14:12,500
Because it's like 100 coins.

1395
01:14:12,600 --> 01:14:16,700
You can get a gem and for every gem that you get, you have a chance of

1396
01:14:16,700 --> 01:14:18,100
being able to watch the stream.

1397
01:14:18,700 --> 01:14:22,500
And if you get like, at least eight gems of different colors, then you

1398
01:14:22,500 --> 01:14:24,700
are guaranteed to be able to watch the stream for a little while

1399
01:14:24,700 --> 01:14:25,200
anyway.

1400
01:14:28,500 --> 01:14:31,900
All right, so I'm going to somebody posted a link to the thing about

1401
01:14:31,900 --> 01:14:34,500
Linux stuff so I'm going to see if we can do that.

1402
01:14:34,700 --> 01:14:38,000
So here's what it says on the forums, these are people who ported the

1403
01:14:38,000 --> 01:14:39,200
game to Linux already.

1404
01:14:41,200 --> 01:14:43,300
SEL handmade doesn't does sorry SEO.

1405
01:14:43,300 --> 01:14:46,000
Handmade does run on Linux and OS X but require some small changes to

1406
01:14:46,000 --> 01:14:46,600
Casey's code.

1407
01:14:46,600 --> 01:14:49,300
We're looking for volunteers to bring these issues to Casey attention

1408
01:14:49,300 --> 01:14:50,200
during the stream currently.

1409
01:14:50,200 --> 01:14:53,000
The following methods need to be implemented in handmade platform.sh.

1410
01:14:53,400 --> 01:14:57,000
And so basically what they're doing is they're just sending in what

1411
01:14:57,000 --> 01:14:59,900
the things are that need to be implemented in order for the code to

1412
01:15:00,000 --> 01:15:03,000
Out on Linux because like I said, we wrote all the code to be basic

1413
01:15:03,000 --> 01:15:03,900
cross-platform.

1414
01:15:04,300 --> 01:15:06,400
So for the most part you can just compile it but there's a few

1415
01:15:06,400 --> 01:15:10,400
platform specific things we have to call in our code that need to

1416
01:15:10,400 --> 01:15:10,900
happen.

1417
01:15:11,300 --> 01:15:15,400
And so specifically like these atomics, for example, these atomics are

1418
01:15:15,400 --> 01:15:19,800
things that we need in to implement per platform because they're

1419
01:15:19,800 --> 01:15:24,900
different and so it looks like these have been posted.

1420
01:15:25,500 --> 01:15:26,600
So let's take a look here.

1421
01:15:27,200 --> 01:15:28,600
I'm going to go ahead and

1422
01:15:30,900 --> 01:15:33,200
I'm going to Ted I'm going to assume I guess that Atomic compare

1423
01:15:33,200 --> 01:15:35,400
exchange 2013 2 is correct.

1424
01:15:35,400 --> 01:15:38,500
So that these are the only ones like you see, we have not implemented

1425
01:15:38,500 --> 01:15:42,200
them yet because we don't compile on the next, but other people do.

1426
01:15:42,500 --> 01:15:43,500
So, try to be nice.

1427
01:15:44,600 --> 01:15:48,600
So it looks like what they've got here is that the code for this, just

1428
01:15:48,600 --> 01:15:56,700
requires us calling sink, lock test and set with just the value and

1429
01:15:56,700 --> 01:15:57,000
new.

1430
01:15:57,300 --> 01:15:57,900
That's it.

1431
01:15:58,300 --> 01:15:59,500
No casting necessary.

1432
01:16:00,700 --> 01:16:08,100
Atomic, add is sync, Fetch and add the value.

1433
01:16:11,000 --> 01:16:18,100
And the a dent and then the get thread, ID is, I guess different,

1434
01:16:18,100 --> 01:16:22,600
depending on, which platform you're compiling it for, even though it's

1435
01:16:22,600 --> 01:16:25,600
under llvm, it is not always the same, I guess.

1436
01:16:26,400 --> 01:16:32,000
So, the way this works is there's a thread ID, if defined Apple

1437
01:16:34,200 --> 01:16:36,100
LF find.

1438
01:16:38,800 --> 01:16:39,900
I 36.

1439
01:16:41,200 --> 01:16:42,700
Alif defined.

1440
01:16:45,400 --> 01:16:47,500
X86 64.

1441
01:16:51,300 --> 01:16:56,800
Else error unsupported architecture.

1442
01:16:59,200 --> 01:16:59,600
Okay.

1443
01:17:00,200 --> 01:17:04,200
And in order to get that thread ID on the Apple model, they say, you

1444
01:17:04,200 --> 01:17:05,500
have to do this.

1445
01:17:10,000 --> 01:17:11,300
That's some stuff right there.

1446
01:17:15,700 --> 01:17:16,200
Lovely.

1447
01:17:16,700 --> 01:17:18,100
So I guess you have to move this.

1448
01:17:18,300 --> 01:17:22,300
So the thread ID on Apple is the is right at the base of the GS

1449
01:17:22,300 --> 01:17:26,800
segment so you're just going to straight up grab that in.

1450
01:17:28,300 --> 01:17:34,300
Like so this is inline assembly, gasps, gasps style going to assembler

1451
01:17:34,300 --> 01:17:37,500
style which is some crazy stuff right there.

1452
01:17:42,200 --> 01:17:44,900
It's basically outputting one of those mob instructions, like we see,

1453
01:17:44,900 --> 01:17:48,700
and that's the GS segment and it's going to put the result in thread

1454
01:17:48,700 --> 01:17:49,100
ID.

1455
01:17:49,100 --> 01:17:51,700
This this % 0 here is kind of like printf.

1456
01:17:51,700 --> 01:17:56,700
It's saying take the this variable from the actual function and the

1457
01:17:56,700 --> 01:17:59,800
assembly that I want to admit will store this part of the GS.

1458
01:18:00,000 --> 01:18:00,400
Here.

1459
01:18:00,700 --> 01:18:03,400
And the crazy part about good new assembler.

1460
01:18:03,500 --> 01:18:06,400
Is it goes the other way round from Intel assembler.

1461
01:18:06,600 --> 01:18:10,400
So, although, you know, if you remember on stream, we always use.

1462
01:18:10,400 --> 01:18:12,500
See, like, when we go to the disassembly, we look at a move

1463
01:18:12,500 --> 01:18:16,000
instruction, the destination comes first in the source, comes second,

1464
01:18:16,200 --> 01:18:18,400
well in good new assemblers backwards.

1465
01:18:18,900 --> 01:18:22,200
So basically the source comes first, the destination comes s.

1466
01:18:22,200 --> 01:18:24,400
So this actually, even though it looks like it's moving in.

1467
01:18:24,400 --> 01:18:28,300
Did you guys actually moving out of GS which can wreak havoc on porous

1468
01:18:28,300 --> 01:18:29,800
and of a programmers, if you're used to it?

1469
01:18:30,000 --> 01:18:30,800
Got to like reverse.

1470
01:18:30,800 --> 01:18:34,800
All your thinking just kind of crazy.

1471
01:18:37,100 --> 01:18:43,900
Okay, so it looks like again, same exact thing on on i386 and on

1472
01:18:43,900 --> 01:18:46,900
Linux, they're all actually the same, it's just which segment and

1473
01:18:46,900 --> 01:18:49,800
we're uses dessert.

1474
01:18:49,800 --> 01:18:52,900
Just because of the calling Convention of the operating system, where

1475
01:18:53,000 --> 01:18:57,100
it ends up storing that particular piece of information.

1476
01:18:58,500 --> 01:18:59,200
But there you go.

1477
01:19:00,500 --> 01:19:01,000
Okay.

1478
01:19:01,800 --> 01:19:07,300
So that we have now done, what was requested of that and now we also

1479
01:19:07,300 --> 01:19:09,700
need casting for one thing

1480
01:19:16,000 --> 01:19:21,700
and Martin's Mosaic, oh, was also suggesting that the if defined Apple

1481
01:19:24,100 --> 01:19:26,200
Should actually be an if defined Apple.

1482
01:19:28,500 --> 01:19:32,600
I think and defined x86 64.

1483
01:19:33,800 --> 01:19:38,400
Because otherwise, apparently that will trigger on the iOS which is

1484
01:19:38,400 --> 01:19:40,600
not the correct, you don't want that to happen.

1485
01:19:40,600 --> 01:19:44,300
So you want it to hit an unsupported architecture are at that point.

1486
01:19:45,600 --> 01:19:49,300
M SV, C, 2013, as SM printing function, that is almost like sprintf.

1487
01:19:50,000 --> 01:19:52,400
So, instead of using ugly sprintf function, we could use this.

1488
01:19:52,400 --> 01:19:56,300
And then you sprintf in all places, then no one will have issues on

1489
01:19:56,300 --> 01:20:02,300
OS, X, Linux or even among wind W, also add security to deprecate

1490
01:20:02,300 --> 01:20:04,500
argument for cl to not generate dedication warning.

1491
01:20:05,300 --> 01:20:08,300
So they're basically saying SN printf would be better than the one we

1492
01:20:08,300 --> 01:20:14,100
were using and that does seem totally fine to me if we wanted to again

1493
01:20:14,100 --> 01:20:14,700
we're going to get

1494
01:20:15,000 --> 01:20:18,000
To that we're going to get rid of the C runtime Library entirely.

1495
01:20:18,600 --> 01:20:20,200
So would be fine for now.

1496
01:20:20,200 --> 01:20:21,700
If we use SN printf,

1497
01:20:23,600 --> 01:20:24,200
I guess.

1498
01:20:25,500 --> 01:20:26,300
Does that actually work?

1499
01:20:28,600 --> 01:20:31,000
Well, we'd have to actually pound include something, I guess for it to

1500
01:20:31,000 --> 01:20:35,600
work, but not sure what that would be, because doesn't look like it's

1501
01:20:35,600 --> 01:20:36,200
in here.

1502
01:20:36,700 --> 01:20:37,800
So I'm not sure about that.

1503
01:20:37,800 --> 01:20:39,000
We're going to leave that for now.

1504
01:20:42,000 --> 01:20:45,200
So we should probably also just remove that dependency soon so that it

1505
01:20:45,200 --> 01:20:46,300
doesn't bother anyone else.

1506
01:20:46,800 --> 01:20:49,200
So the last thing, they were saying in order to get us compiling

1507
01:20:49,500 --> 01:20:52,400
correctly, on Windows Linux and Mac, as well.

1508
01:20:53,700 --> 01:20:57,300
For people who are trying to do, those builds was that time function.

1509
01:21:00,000 --> 01:21:01,500
Needs to cast the function name.

1510
01:21:03,900 --> 01:21:04,800
That's what they were saying.

1511
01:21:06,700 --> 01:21:10,100
Oh, it's a Castaway, the concert there, but that sounds like it.

1512
01:21:10,700 --> 01:21:11,800
So I think we're good to go.

1513
01:21:24,000 --> 01:21:27,900
Stephen last does the idea for having your compile switch variable

1514
01:21:27,900 --> 01:21:32,600
switch speed cake involve compiling code out with is 0?

1515
01:21:32,800 --> 01:21:34,500
Yes it does.

1516
01:21:35,900 --> 01:21:36,900
It's pretty straightforward.

1517
01:21:36,900 --> 01:21:39,100
If you think it through I'm not going to do anything too weird.

1518
01:21:39,100 --> 01:21:39,900
But it's just like

1519
01:21:41,500 --> 01:21:43,800
Was the natural sort of thing that you would think to do.

1520
01:21:43,800 --> 01:21:44,800
So I was going to try it.

1521
01:21:45,500 --> 01:21:45,900
Naysayer.

1522
01:21:45,900 --> 01:21:46,600
88.

1523
01:21:46,700 --> 01:21:47,900
Why don't you use Lou?

1524
01:21:47,900 --> 01:21:48,800
Are you dumb?

1525
01:21:49,400 --> 01:21:52,600
So the reason that we don't use luau on the stream right now is

1526
01:21:52,600 --> 01:21:57,700
actually it's totally that obviously all games should be written

1527
01:21:57,700 --> 01:22:03,000
entirely in Lua because that way it's like really hard to debug and

1528
01:22:03,000 --> 01:22:08,100
it's slow and that's what you want, you know, ideally in a game.

1529
01:22:08,100 --> 01:22:10,900
As you want it to be both slow and partridges.

1530
01:22:11,100 --> 01:22:11,400
Ugh.

1531
01:22:11,900 --> 01:22:17,800
Because that really helps your productivity and also if possible you

1532
01:22:17,800 --> 01:22:20,300
want your language to not have a lot of features in it.

1533
01:22:20,400 --> 01:22:23,300
So you want to be like it'd be like hard to program in that language

1534
01:22:23,300 --> 01:22:24,700
and Lou also does that as well.

1535
01:22:24,700 --> 01:22:28,600
So we were pretty much gets the three points that you want, for

1536
01:22:28,600 --> 01:22:29,200
writing gaming.

1537
01:22:29,200 --> 01:22:31,100
So ideally, we'd write the whole game and Lula.

1538
01:22:31,700 --> 01:22:35,100
The only reason I didn't do that is because I was too dumb to get it

1539
01:22:35,100 --> 01:22:35,700
working.

1540
01:22:35,900 --> 01:22:38,300
So we tried to get it working and then just failed.

1541
01:22:38,300 --> 01:22:40,500
And we just gave up because we're like, we're way too dumb for this,

1542
01:22:40,500 --> 01:22:40,900
there's no way.

1543
01:22:41,000 --> 01:22:44,600
We're going to do it, but yes, smart people would just write the whole

1544
01:22:44,600 --> 01:22:45,200
game in Lua.

1545
01:22:48,000 --> 01:22:49,600
Registeration.

1546
01:22:49,700 --> 01:22:51,200
How do you handle multi-threading?

1547
01:22:52,000 --> 01:22:55,400
We have a bunch of you can go back and watch the episodes where we

1548
01:22:55,400 --> 01:22:59,400
Implement multi-threading, it's pretty simple.

1549
01:22:59,400 --> 01:23:01,600
We don't we don't do anything too crazy.

1550
01:23:02,700 --> 01:23:04,600
Run code use fight.

1551
01:23:04,600 --> 01:23:07,500
You've inspired me to forget about my years of commercial experience

1552
01:23:07,500 --> 01:23:08,400
writing RM.

1553
01:23:08,400 --> 01:23:10,300
Dewey's and to go Implement, I am doing for my game.

1554
01:23:10,300 --> 01:23:11,400
I love coding again.

1555
01:23:11,800 --> 01:23:14,000
Well, that's really good to hear.

1556
01:23:14,100 --> 01:23:15,300
I'm very happy to hear that.

1557
01:23:16,900 --> 01:23:17,300
K.

1558
01:23:17,300 --> 01:23:19,400
Someone asked a question about push truck on that day so I'm guessing

1559
01:23:19,400 --> 01:23:20,700
Casey might have introduced it.

1560
01:23:20,700 --> 01:23:22,100
Then okay.

1561
01:23:22,100 --> 01:23:24,300
I think that was just an answer to this question in sohbat.

1562
01:23:26,100 --> 01:23:28,200
That's out of the question UD handmade here.

1563
01:23:28,200 --> 01:23:31,300
How long have you been making games?

1564
01:23:32,000 --> 01:23:33,300
Well I mostly am.

1565
01:23:33,600 --> 01:23:35,200
I work on game Tech?

1566
01:23:35,200 --> 01:23:40,000
I don't really make games per se so most of my experiences just is

1567
01:23:40,000 --> 01:23:44,400
unproven game Tech stuff and that I've been doing for I guess

1568
01:23:44,400 --> 01:23:45,900
professionally 20 years.

1569
01:23:47,900 --> 01:23:48,400
A Nexus.

1570
01:23:48,400 --> 01:23:53,400
Why check unmatched parentheses in LF in thread ID extraction?

1571
01:23:58,800 --> 01:23:59,300
Where are you?

1572
01:23:59,300 --> 01:23:59,800
There we go.

1573
01:24:03,600 --> 01:24:04,100
Thank you.

1574
01:24:04,700 --> 01:24:05,500
Okay, there we go.

1575
01:24:08,100 --> 01:24:08,400
Cuba.

1576
01:24:08,400 --> 01:24:09,100
Caleb.

1577
01:24:10,800 --> 01:24:14,000
What registration do you streaming your development motivated?

1578
01:24:14,000 --> 01:24:15,800
You to do more or more consistently?

1579
01:24:17,000 --> 01:24:18,000
No, not really.

1580
01:24:18,300 --> 01:24:20,800
I'm only assuming the development for educational purposes.

1581
01:24:21,300 --> 01:24:24,100
I still work full-time on a different game during the day.

1582
01:24:25,400 --> 01:24:28,400
So this is, this is strictly for teaching is the reason that I'm

1583
01:24:28,400 --> 01:24:32,400
streaming this, it's not because it's not for any other reason.

1584
01:24:37,300 --> 01:24:38,800
Did you use SM printer for sprintf?

1585
01:24:38,800 --> 01:24:42,100
The defined thing, change SS, printf 2sn, printf,

1586
01:24:44,900 --> 01:24:46,700
Not sure what you mean.

1587
01:24:47,800 --> 01:24:50,600
SN printf did not seem to be available to us.

1588
01:24:52,600 --> 01:24:53,200
Right.

1589
01:24:54,600 --> 01:24:58,200
So it looks like we could use underscore S printf.

1590
01:24:59,000 --> 01:25:00,900
I don't know if that helps anyone else though.

1591
01:25:03,400 --> 01:25:06,200
I'm going to I'm just going to not deal with that right now, to be

1592
01:25:06,200 --> 01:25:08,700
honest, because I think we should just go ahead and replace that and

1593
01:25:08,700 --> 01:25:09,600
we can do that.

1594
01:25:09,600 --> 01:25:10,700
Maybe we'll do that next week.

1595
01:25:11,800 --> 01:25:12,900
It's not very much work.

1596
01:25:18,800 --> 01:25:21,200
Do you use any type of documentation or design for this project?

1597
01:25:21,200 --> 01:25:25,000
What types of documents have you produced planning to produce for this

1598
01:25:25,000 --> 01:25:25,700
project?

1599
01:25:27,300 --> 01:25:31,100
I guess I would say I don't really like using the term document to

1600
01:25:31,100 --> 01:25:35,300
refer to something game-related because it is often sounds like a

1601
01:25:35,300 --> 01:25:37,400
thing that I associate with really bad games.

1602
01:25:39,400 --> 01:25:46,000
So I have some notebooks that I used to plan things out in terms of

1603
01:25:46,000 --> 01:25:47,400
the game design stuff.

1604
01:25:48,300 --> 01:25:51,700
But I'm not really the type of person who's like going to make a

1605
01:25:51,700 --> 01:25:52,500
document.

1606
01:25:52,600 --> 01:25:56,400
I'm not a game designer so you know you that's really probably not my

1607
01:25:58,600 --> 01:25:59,800
Place to talk about, though.

1608
01:26:02,600 --> 01:26:05,000
All right, I think we've come to the end of the queue.

1609
01:26:05,000 --> 01:26:08,200
So I'm going to wrap it up, going to wrap it.

1610
01:26:09,300 --> 01:26:09,700
Up.

1611
01:26:11,100 --> 01:26:12,000
Close this.

1612
01:26:13,800 --> 01:26:16,400
Okay, thank you, everyone for joining me, for another episode of

1613
01:26:16,400 --> 01:26:16,900
handmade here.

1614
01:26:16,900 --> 01:26:18,000
It's been a pleasure working with you.

1615
01:26:18,000 --> 01:26:21,800
As always, if you would like to follow along at home, you can always

1616
01:26:21,800 --> 01:26:23,800
pre-order the game on handmade hero dot org.

1617
01:26:24,900 --> 01:26:26,800
If you preorder the game it comes to the source code.

1618
01:26:26,800 --> 01:26:30,000
You can always play around with it at home, learn from it and

1619
01:26:30,000 --> 01:26:31,600
experiment with it, which is a good way to go.

1620
01:26:31,900 --> 01:26:34,700
If you're trying to learn from the stream, we also have a patreon

1621
01:26:34,700 --> 01:26:35,000
page.

1622
01:26:35,000 --> 01:26:37,200
You can subscribe to you if you want to try and support the video

1623
01:26:37,200 --> 01:26:39,000
series, but

1624
01:26:40,500 --> 01:26:42,900
that is, of course, always appreciate in the video series is always

1625
01:26:42,900 --> 01:26:43,300
free.

1626
01:26:43,700 --> 01:26:47,400
Even if you don't we try to again, do things as Ultra, Ultra Stickley

1627
01:26:47,400 --> 01:26:48,200
as possible here.

1628
01:26:48,800 --> 01:26:50,800
So the video series is free and always will be.

1629
01:26:50,800 --> 01:26:54,300
And you can get it on the video archive, as well as on the Forum site,

1630
01:26:54,600 --> 01:26:59,300
where you can ask questions or view annotated episode guides that

1631
01:26:59,300 --> 01:26:59,800
people in the community.

1632
01:27:00,000 --> 01:27:03,100
You have made so you can go back and watch all the episodes and see

1633
01:27:03,100 --> 01:27:05,700
you like we're certain questions were asked or when I talked about a

1634
01:27:05,700 --> 01:27:07,000
certain topic that sort of thing.

1635
01:27:07,300 --> 01:27:10,400
It's really pretty awesome that's about it.

1636
01:27:10,700 --> 01:27:13,100
If you want to catch the show live will be back here again.

1637
01:27:13,100 --> 01:27:13,800
5 p.m.

1638
01:27:13,900 --> 01:27:17,100
Pacific Daylight time tomorrow same time.

1639
01:27:17,200 --> 01:27:20,900
Same place we will also if you if you're wondering when the streams

1640
01:27:20,900 --> 01:27:23,200
live in general we have a tweet bot, the tweets, the schedule you

1641
01:27:23,200 --> 01:27:26,200
which you can subscribe to you to get notifications or you can just

1642
01:27:26,200 --> 01:27:28,700
check it periodically to see when the shows going to be a post a full

1643
01:27:28,700 --> 01:27:29,300
schedule.

1644
01:27:30,000 --> 01:27:33,100
On the weekend or on Monday and then everyday it posts.

1645
01:27:33,300 --> 01:27:34,100
Reminder.

1646
01:27:34,100 --> 01:27:36,200
That just says, this is when the tree will be for this days, you can

1647
01:27:36,200 --> 01:27:39,200
always just go to the top post of the Tweet pot and it tells you, this

1648
01:27:39,200 --> 01:27:40,100
is what it seems to be.

1649
01:27:40,700 --> 01:27:41,600
So that's about it.

1650
01:27:42,300 --> 01:27:45,700
Hope to see you guys back here tomorrow, when we will Implement.

1651
01:27:45,800 --> 01:27:49,700
Now that we have a backing structure for our Haiku control will just

1652
01:27:49,700 --> 01:27:51,000
implement the hierarchy of control.

1653
01:27:51,600 --> 01:27:52,500
So that'll be pretty fun.

1654
01:27:52,500 --> 01:27:55,700
I think, and we'll be able to play with it so that'll be good.

1655
01:27:55,700 --> 01:27:56,700
Hope to see you here for that.

1656
01:27:56,700 --> 01:27:59,200
Until then have fun programming and I'll see you guys on the internet.

1657
01:27:59,400 --> 01:27:59,900
Take it easy.

1658
01:28:00,000 --> 01:28:00,300
One.

