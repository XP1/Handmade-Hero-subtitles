1
00:00:01,800 --> 00:00:02,900
Okay, hello everyone.

2
00:00:02,900 --> 00:00:05,300
And welcome to another episode of handmade hero.

3
00:00:05,300 --> 00:00:07,900
The show Rico to complete game live on stream.

4
00:00:08,700 --> 00:00:11,600
We are doing some debug interface code right now.

5
00:00:12,400 --> 00:00:15,900
And at this point, we have done a little bit of work with the layout

6
00:00:15,900 --> 00:00:16,200
stuff.

7
00:00:16,200 --> 00:00:17,600
I like to do a little bit more of that today.

8
00:00:18,400 --> 00:00:21,500
And I think today, I'd also like to kind of dive in a little bit to

9
00:00:21,500 --> 00:00:26,300
see how we're going to maybe start working with with the interface to

10
00:00:26,300 --> 00:00:29,700
our profiling code because one of the big things like I said that I'd

11
00:00:29,700 --> 00:00:31,500
like to do with the Steal.

12
00:00:31,600 --> 00:00:34,700
Interfaces be able to quickly sort of get around in the data that we

13
00:00:34,700 --> 00:00:35,400
have.

14
00:00:35,500 --> 00:00:38,500
And the profile code is the best example, right now of a big old pile

15
00:00:38,500 --> 00:00:42,700
of data, that we really don't get very much from because we don't have

16
00:00:42,700 --> 00:00:43,800
a way to really display it.

17
00:00:43,800 --> 00:00:49,200
It captures a lot of data and we are not super able to process it in

18
00:00:49,200 --> 00:00:51,100
any particularly useful way.

19
00:00:53,200 --> 00:00:55,900
For no reason other than we just don't have an interface that allows

20
00:00:55,900 --> 00:00:57,000
us to get into it quickly.

21
00:00:57,000 --> 00:01:00,200
So what I'd like to do is I'd like to go ahead and start working on

22
00:01:00,200 --> 00:01:06,500
that and we can sort of use that to drive the improvements to the

23
00:01:06,500 --> 00:01:07,800
interface system that we've created.

24
00:01:07,800 --> 00:01:11,500
Because that system at this point, actually has most of the

25
00:01:11,500 --> 00:01:12,800
fundamental pieces in place.

26
00:01:12,800 --> 00:01:15,500
We just haven't actually had a chance to refine them to the point

27
00:01:15,500 --> 00:01:18,900
where they do the stuff that we might need them to do, right?

28
00:01:18,900 --> 00:01:22,700
So let's go ahead and keep going with that today is day 2 01.

29
00:01:23,200 --> 00:01:27,100
If you are going to follow along at home, please unzip day, 200 source

30
00:01:27,100 --> 00:01:31,100
code into a directory so that you can follow along with it.

31
00:01:31,700 --> 00:01:34,900
Okay, let's open up a little command prompt.

32
00:01:35,900 --> 00:01:37,000
Let's see where we're at.

33
00:01:38,500 --> 00:01:39,700
Let us see.

34
00:01:40,100 --> 00:01:46,200
Let us see, let's open up handmade debug and get everything.

35
00:01:46,200 --> 00:01:54,300
Built here is where we were last time and we had just done some work

36
00:01:54,300 --> 00:01:57,400
on, like, you know, making like this sort of stuff a little bit more

37
00:01:57,400 --> 00:02:01,300
systemic, you know, we now use the same interactions for everything

38
00:02:01,300 --> 00:02:04,700
and we have a little layout code that leads these things out

39
00:02:04,700 --> 00:02:07,200
automatically, another kind of fun things like that.

40
00:02:07,800 --> 00:02:08,199
And so now

41
00:02:08,300 --> 00:02:10,900
We'd like to do is kind of start thinking about what we can do with

42
00:02:10,900 --> 00:02:13,900
these things in order to make stuff a little more useful, a little

43
00:02:13,900 --> 00:02:16,800
more interesting and like I said there's a couple things I want to

44
00:02:16,800 --> 00:02:17,200
look into.

45
00:02:17,200 --> 00:02:22,000
So like one of them for example is is being able to do something like

46
00:02:22,400 --> 00:02:26,700
take this just you know, very rudimentary display that we have going

47
00:02:26,700 --> 00:02:27,200
here.

48
00:02:28,000 --> 00:02:30,600
And you know, we'd like to be able to figure out some way to like do

49
00:02:30,600 --> 00:02:31,900
more with it, right?

50
00:02:32,800 --> 00:02:36,200
And so figure out how we're going to make this interface work, which I

51
00:02:36,200 --> 00:02:38,100
don't like I said don't really know how we're gonna do that.

52
00:02:38,200 --> 00:02:38,400
At.

53
00:02:38,400 --> 00:02:38,800
Oh dear.

54
00:02:40,500 --> 00:02:41,900
What is what is going on here?

55
00:02:42,900 --> 00:02:44,400
First chance exception.

56
00:02:45,500 --> 00:02:46,900
What is the first chance exception.

57
00:02:47,900 --> 00:02:49,100
So some invalid record.

58
00:02:50,200 --> 00:02:52,400
It is, in fact an invalid record.

59
00:02:53,900 --> 00:02:55,000
What is this code?

60
00:02:55,600 --> 00:02:58,200
This is the draw profile code indeed.

61
00:02:58,300 --> 00:02:59,400
Indeed, it is

62
00:03:00,200 --> 00:03:01,500
I'm not sure why.

63
00:03:01,500 --> 00:03:02,700
Would we be getting

64
00:03:04,400 --> 00:03:05,700
One of the well.

65
00:03:06,700 --> 00:03:10,400
So I will say that at the moment.

66
00:03:10,900 --> 00:03:12,900
I don't think we're all in debug money.

67
00:03:12,900 --> 00:03:17,300
We're not at all protected from this sort of stuff because we don't

68
00:03:17,300 --> 00:03:19,400
save any of these strings right there.

69
00:03:19,400 --> 00:03:23,800
Just things that are sort of already being transiently dealt with

70
00:03:26,900 --> 00:03:30,300
When the dll reloads I think we are probably easily susceptible to

71
00:03:30,300 --> 00:03:33,800
something where someone could remove a debug record out from under us.

72
00:03:33,800 --> 00:03:35,900
Because at the moment anyway,

73
00:03:37,100 --> 00:03:39,800
I'm see if I'm correct about this at the moment.

74
00:03:39,800 --> 00:03:41,600
Anyway, I think.

75
00:03:43,800 --> 00:03:46,200
Yeah, so when we call game update and render is when they're going to

76
00:03:46,200 --> 00:03:51,400
be drawn and the time that they got, so the time that they actually

77
00:03:51,400 --> 00:03:54,700
got updated, right, is down in here.

78
00:03:54,700 --> 00:03:56,100
So debug frame end.

79
00:03:56,300 --> 00:04:02,700
So in between debug frame and and when they are actually drawn, we

80
00:04:02,700 --> 00:04:06,900
could actually have exactly that happen, right?

81
00:04:07,100 --> 00:04:11,900
We could have the executable get sort of reloaded, it could get

82
00:04:11,900 --> 00:04:12,800
reloaded right in here.

83
00:04:13,700 --> 00:04:15,000
Where is that right here?

84
00:04:16,300 --> 00:04:17,700
So, I again, nothing.

85
00:04:17,700 --> 00:04:21,100
I've super care about too much, although I don't know.

86
00:04:22,100 --> 00:04:24,200
Yeah, it's not something I super care about too much because again, it

87
00:04:24,200 --> 00:04:27,600
is debug code, although it might be nice when we're kind of just

88
00:04:27,600 --> 00:04:28,500
tightening things up here.

89
00:04:28,500 --> 00:04:31,700
But to just go like okay you know we probably could have could avoid

90
00:04:31,700 --> 00:04:34,200
that pretty easily by just making sure that the way that our debug

91
00:04:34,200 --> 00:04:35,500
code works is a little cleaner.

92
00:04:36,700 --> 00:04:39,800
And I had a pretty good idea about how to do that.

93
00:04:39,800 --> 00:04:43,500
Actually, I thought about this the other day I was just kind of

94
00:04:43,500 --> 00:04:48,000
randomly thinking about it and what I realized is that it's kind of

95
00:04:48,000 --> 00:04:52,100
stupid that we do our debug stuff in two different places.

96
00:04:52,600 --> 00:04:55,800
Like the reason that that's happening, you know, this part does the,

97
00:04:55,900 --> 00:04:59,200
the frame and sort of collation and all that kind of nonsense, right?

98
00:04:59,900 --> 00:05:04,900
But, you know, we put the rendering in game update and render, right?

99
00:05:04,900 --> 00:05:06,200
So game update and render

100
00:05:06,300 --> 00:05:09,500
Is actually the place where we do the rendering and we did it that way

101
00:05:09,500 --> 00:05:11,300
because that's, you know, where we render everything else.

102
00:05:11,300 --> 00:05:16,600
But what I was realizing is we really don't need to do that for any

103
00:05:16,600 --> 00:05:22,100
real reason we could if we wanted to make it so that where we do the

104
00:05:22,100 --> 00:05:26,400
debug frame and we also do the debug overlay at that point, right?

105
00:05:26,400 --> 00:05:29,300
And since we don't super care.

106
00:05:29,300 --> 00:05:30,800
Also where things are?

107
00:05:30,800 --> 00:05:32,900
We are frame.

108
00:05:32,900 --> 00:05:36,100
Beats are actually totally decoupled for where we process.

109
00:05:36,300 --> 00:05:37,500
Is the frame and stuff.

110
00:05:38,000 --> 00:05:42,500
We could just move this up above the display, right?

111
00:05:42,600 --> 00:05:44,100
So we could move it right here.

112
00:05:45,600 --> 00:05:50,100
And just have it draw directly on to the screen itself, right?

113
00:05:51,100 --> 00:05:52,300
You know, I'm just going to do that.

114
00:05:52,600 --> 00:05:54,100
I thought it was a good idea at the time.

115
00:05:54,100 --> 00:05:56,300
I think it's a good idea now I think I'm just going to do it.

116
00:05:56,400 --> 00:05:57,100
I think it's better.

117
00:05:57,100 --> 00:05:59,800
It simplifies things and I'd like to see how it goes, you know.

118
00:06:00,000 --> 00:06:02,100
Interest me, I'm interested in it.

119
00:06:03,400 --> 00:06:06,500
So what I'd like to do is I'd like to, you know, literally just take

120
00:06:06,500 --> 00:06:08,500
this this debug stuff here.

121
00:06:08,900 --> 00:06:11,600
I'm going to take that and I'm just going to straight up move it,

122
00:06:11,900 --> 00:06:12,200
right?

123
00:06:12,200 --> 00:06:14,700
It's just going to go up here.

124
00:06:15,000 --> 00:06:18,400
So before it does the the frame, wait stuff, you know, right in here.

125
00:06:18,400 --> 00:06:20,400
This is where our debug stuff happens, right?

126
00:06:20,400 --> 00:06:23,100
So there's debug collation, any Theory.

127
00:06:23,100 --> 00:06:25,400
I think this will still just run, right?

128
00:06:25,500 --> 00:06:28,600
All we've done is just make a slight change in where the things were,

129
00:06:28,600 --> 00:06:29,900
but nothing else should

130
00:06:30,000 --> 00:06:30,900
Change, right?

131
00:06:31,800 --> 00:06:36,000
And so if I then said, okay, debug frame end

132
00:06:37,400 --> 00:06:41,200
Instead of having game update in render, be the thing that calls.

133
00:06:41,400 --> 00:06:45,000
Everything, what I could do is say, Okay, game update and render is

134
00:06:45,000 --> 00:06:50,600
here and it is taking like this buffer to draw to, I could just pass

135
00:06:50,900 --> 00:06:55,900
this stuff to, to debug frame end as well, right?

136
00:06:56,200 --> 00:06:57,500
So, I could just do this.

137
00:07:00,300 --> 00:07:01,600
And I like this, a lot more.

138
00:07:01,600 --> 00:07:04,300
This interests me a lot because this means that now the debug system

139
00:07:04,300 --> 00:07:08,600
can be totally isolated, it doesn't have any hooks in the game at all.

140
00:07:09,000 --> 00:07:12,500
So the game just writes to the buffers and then the debug System picks

141
00:07:12,500 --> 00:07:16,100
them up later and that's just a much cleaner thing than what we were

142
00:07:16,100 --> 00:07:22,100
doing before you can see in here, we're actually calling this like

143
00:07:22,100 --> 00:07:24,100
debug stuff right in here, right?

144
00:07:24,200 --> 00:07:25,600
And I don't really like that.

145
00:07:25,600 --> 00:07:27,900
I don't like that idea and I don't want to do that.

146
00:07:30,400 --> 00:07:32,200
Now, there is one problem with it.

147
00:07:33,800 --> 00:07:35,000
Which we'll get to in a second.

148
00:07:36,400 --> 00:07:40,500
But yeah, I'm going to take a look here and just grab the rest of

149
00:07:40,500 --> 00:07:40,900
this.

150
00:07:40,900 --> 00:07:44,100
So we just the only other thing we do is just debug end, right?

151
00:07:45,100 --> 00:07:49,300
So all I'm going to do for starters is I'm going to get rid of the

152
00:07:49,300 --> 00:07:51,700
debug start in the debug, and for now,

153
00:07:53,000 --> 00:07:53,600
They're gone.

154
00:07:54,900 --> 00:08:01,000
And then I'm going to go ahead and say that in handmade debug where

155
00:08:01,000 --> 00:08:02,700
we've got debug start and debug.

156
00:08:02,700 --> 00:08:07,000
And I'm just going to say that this stuff is just happens as part of

157
00:08:07,000 --> 00:08:13,000
the as, you know, as sort of part and parcel of the actual code down

158
00:08:13,000 --> 00:08:15,700
here where we call debug frame end, right?

159
00:08:15,800 --> 00:08:17,900
So I'm going to move those down there and I'm going to take a look at

160
00:08:17,900 --> 00:08:18,400
them.

161
00:08:22,000 --> 00:08:24,000
Where is my debug?

162
00:08:24,000 --> 00:08:26,800
And there it is going to grab that.

163
00:08:28,500 --> 00:08:29,700
I'm going to move that down as well.

164
00:08:31,600 --> 00:08:33,900
So now we've got essentially, these are the two things that we're

165
00:08:33,900 --> 00:08:35,100
going to do, right?

166
00:08:35,100 --> 00:08:36,000
You can see them here.

167
00:08:37,299 --> 00:08:42,600
And so, all I need to be able to do is call these as part of this

168
00:08:42,600 --> 00:08:45,800
single debug front frame and that we do here, okay?

169
00:08:45,800 --> 00:08:50,700
So let's see how hard that would be to do if I wanted to, I have to

170
00:08:50,700 --> 00:08:51,900
call it this way, right?

171
00:08:51,900 --> 00:08:54,500
And I'm going to pass the debug state in here as well because now,

172
00:08:54,500 --> 00:08:58,000
these are not blind, calls, their calls from inside the system, right?

173
00:08:58,000 --> 00:08:59,800
So, I can go ahead and

174
00:09:00,000 --> 00:09:02,600
And put those to good use, right?

175
00:09:02,600 --> 00:09:03,000
I can say.

176
00:09:03,000 --> 00:09:04,400
All right, I'll just pass that in.

177
00:09:05,000 --> 00:09:07,700
So basically what this guy does is he just kind of initialize some of

178
00:09:07,700 --> 00:09:11,300
this stuff, these things are really to be honest with you stuff that

179
00:09:11,300 --> 00:09:14,400
we probably don't get a lot of this stuff is stuff.

180
00:09:14,400 --> 00:09:18,000
We could simplify a little bit but it will ignore some of that for

181
00:09:18,000 --> 00:09:21,900
now, just in the interest of sort of merging these two things first.

182
00:09:22,400 --> 00:09:26,600
So if I were to call this from in here, when we go ahead and see if

183
00:09:26,600 --> 00:09:27,400
we've got it.

184
00:09:27,800 --> 00:09:29,900
And we look at, you know, a look at what's going.

185
00:09:30,000 --> 00:09:32,700
Going on here when we're about to actually do stuff.

186
00:09:32,900 --> 00:09:35,100
I feel like we probably want to do it like this.

187
00:09:35,900 --> 00:09:36,900
We'd say right here.

188
00:09:38,700 --> 00:09:39,600
Here's the whip.

189
00:09:39,800 --> 00:09:40,700
Here's the height.

190
00:09:40,800 --> 00:09:41,700
Here's the assets.

191
00:09:41,700 --> 00:09:43,700
Here's the debug State, you know.

192
00:09:49,900 --> 00:09:51,900
and you can see right now, the only problem we're going to have is

193
00:09:51,900 --> 00:09:53,800
this guy because everything else we've got

194
00:09:55,000 --> 00:10:02,200
All right, and debug end is actually much simpler debug end.

195
00:10:04,000 --> 00:10:09,900
Just needs the input and and that draw buffer, that is all stuff that

196
00:10:09,900 --> 00:10:10,700
we will have.

197
00:10:11,900 --> 00:10:13,700
And so I could do that, right?

198
00:10:13,700 --> 00:10:18,400
I could do it like this and we could see what happens there, right?

199
00:10:19,200 --> 00:10:19,900
I don't know.

200
00:10:19,900 --> 00:10:23,400
Technically, if we want restart collation, that might be something we

201
00:10:23,400 --> 00:10:25,300
want to have happen beforehand, but I don't know.

202
00:10:25,300 --> 00:10:27,800
I feel like this stuff, it's kind of should be get cleaned up a little

203
00:10:27,800 --> 00:10:27,900
bit.

204
00:10:27,900 --> 00:10:30,000
Now that we are going to do it all in one pass.

205
00:10:30,000 --> 00:10:31,400
I think we could make it simpler.

206
00:10:31,400 --> 00:10:33,600
It was a little janky before because there are multiple like

207
00:10:33,700 --> 00:10:36,800
Places in which people were coming in and I think we can kind of get

208
00:10:36,800 --> 00:10:37,700
rid of a lot of that.

209
00:10:38,200 --> 00:10:42,700
And so now, you know, handmade debug doesn't have to have any these

210
00:10:42,700 --> 00:10:45,300
things don't have to get exported, right?

211
00:10:45,900 --> 00:10:47,500
They can just not be there at all.

212
00:10:47,700 --> 00:10:50,200
I don't actually know why refresh collation was there.

213
00:10:50,200 --> 00:10:52,200
I know we were using that in certain circumstances.

214
00:10:52,200 --> 00:10:56,000
I don't know why it's in the h-file necessarily because nobody else is

215
00:10:56,000 --> 00:10:56,800
calling it.

216
00:10:56,900 --> 00:10:59,800
So, really I feel like that, you know, shouldn't really be there.

217
00:10:59,800 --> 00:11:02,000
Probably, that was probably just a

218
00:11:03,700 --> 00:11:04,700
Sort of hanging thing.

219
00:11:06,200 --> 00:11:10,600
All right, so if we go come over to handmade dot CPP, then really all

220
00:11:10,600 --> 00:11:13,600
we need to do is have a way of getting the trance State assets out,

221
00:11:13,600 --> 00:11:14,100
right?

222
00:11:14,300 --> 00:11:19,200
So what we could do here if we wanted to is, we can just have a way of

223
00:11:19,200 --> 00:11:23,300
make of allowing the about system access to the assets, so that the

224
00:11:23,300 --> 00:11:26,100
debug system calls into the game instead of the other way around,

225
00:11:26,500 --> 00:11:27,900
which is much better in my opinion.

226
00:11:27,900 --> 00:11:30,800
Because usually, instead of having the game, call out to the debug

227
00:11:30,800 --> 00:11:33,100
system, it's way better at the deal existen, just reaches into the

228
00:11:33,100 --> 00:11:33,500
game.

229
00:11:33,700 --> 00:11:36,500
Because that way, you know that if you compile out the debug system,

230
00:11:36,500 --> 00:11:37,400
nothing is happening.

231
00:11:38,100 --> 00:11:41,200
The game doesn't ever like talk to the debug system if the debug

232
00:11:41,200 --> 00:11:43,700
system that comes in and looks at the game and that's usually a lot

233
00:11:43,700 --> 00:11:46,000
better, it makes it a lot simpler to separate them.

234
00:11:46,600 --> 00:11:49,400
Come shift timing when you're trying to strip out anything that you

235
00:11:49,400 --> 00:11:50,800
don't actually want to be in there,

236
00:11:52,700 --> 00:11:56,700
Okay, so I'm going to pretend, we've just got to think here that's

237
00:11:56,700 --> 00:11:59,500
like got the game assets or whatever and it's like get game.

238
00:12:00,400 --> 00:12:04,500
Or like debug get game assets like that, right?

239
00:12:05,100 --> 00:12:09,300
And that's just the thing which, you know, you go ahead and you pass

240
00:12:09,300 --> 00:12:10,100
the game memory.

241
00:12:11,200 --> 00:12:15,400
And it just like looks at the transient storage Direction directly.

242
00:12:16,100 --> 00:12:20,700
We could say that there's the assets here and assuming that it's

243
00:12:20,700 --> 00:12:24,500
initialized, it, just all it does is just grab it out.

244
00:12:27,000 --> 00:12:27,500
Right.

245
00:12:29,300 --> 00:12:29,900
So now

246
00:12:32,400 --> 00:12:36,200
The debug system can just reach in there and grab it and that's all it

247
00:12:36,200 --> 00:12:36,700
has to do.

248
00:12:37,400 --> 00:12:42,500
So it looks like that would be all we would need to get the game

249
00:12:42,500 --> 00:12:43,200
assets.

250
00:12:46,700 --> 00:12:50,400
We have the game memory and then the width height draw buffer, an

251
00:12:50,400 --> 00:12:53,600
input stuff is all stuff that we actually should be getting past now.

252
00:12:53,900 --> 00:12:54,400
Right?

253
00:12:54,500 --> 00:12:57,300
So we have it went 3-2 handmade for passing these things in.

254
00:12:57,300 --> 00:12:59,600
So all we have to do is and handmade platform, make sure that the

255
00:12:59,600 --> 00:13:03,600
input and that draw buffer, both get past, right?

256
00:13:03,600 --> 00:13:05,400
So it's really just making making it.

257
00:13:05,400 --> 00:13:09,600
So that game update and render is really, you know, debug frame.

258
00:13:09,600 --> 00:13:13,600
End this thing right here is really just going to be the exact same

259
00:13:13,600 --> 00:13:15,000
call structure as

260
00:13:15,500 --> 00:13:17,300
Didn't render, you know I'm saying?

261
00:13:18,700 --> 00:13:21,000
We could really call this debug update and render or something like

262
00:13:21,000 --> 00:13:22,800
that if we wanted to, or even you might imagine.

263
00:13:23,600 --> 00:13:26,800
So if we have the buffer then that means that really we just need to

264
00:13:26,800 --> 00:13:31,500
take a look at at handmade dot CPP where we Define draw buffer.

265
00:13:31,600 --> 00:13:35,500
You can see how we do things here, there's really not that much to it.

266
00:13:35,600 --> 00:13:39,500
And so all we have to do is make our own same version here where we're

267
00:13:39,500 --> 00:13:42,400
going to just create a full-screen buffer out of the thing to draw to

268
00:13:42,700 --> 00:13:48,400
write and we already know from the off-screen buffer, we already know.

269
00:13:49,100 --> 00:13:49,800
This stuff, right?

270
00:13:49,800 --> 00:13:51,100
We know the width and the height.

271
00:13:51,200 --> 00:13:54,300
So really all we have to do is right before we're about to draw it.

272
00:13:54,700 --> 00:13:58,700
We can just do something where we go ahead and set the width height,

273
00:13:59,400 --> 00:14:03,600
the pitch in the memory like this, have it drawn to that, and be done.

274
00:14:06,600 --> 00:14:10,200
So I think that probably gets us into position to do what I wanted,

275
00:14:10,200 --> 00:14:13,100
which is to have it be just a totally separate thing.

276
00:14:13,400 --> 00:14:15,400
Alright, so let's take a look here.

277
00:14:15,400 --> 00:14:18,000
Probably should make that a semicolon not a:.

278
00:14:20,600 --> 00:14:21,700
Clean up the compile, errors.

279
00:14:21,700 --> 00:14:22,200
Let's see.

280
00:14:22,200 --> 00:14:24,000
Missing semicolon you are correct sir.

281
00:14:24,000 --> 00:14:27,300
I am debug end functions.

282
00:14:27,300 --> 00:14:28,300
Not take three arguments.

283
00:14:28,300 --> 00:14:30,000
Is that is that really true?

284
00:14:31,000 --> 00:14:37,600
I think that is true but I want it to take three three parameters.

285
00:14:37,700 --> 00:14:38,800
There's that third parameter.

286
00:14:39,400 --> 00:14:41,800
Okay so that

287
00:14:42,900 --> 00:14:43,800
Little bit better there.

288
00:14:44,400 --> 00:14:48,900
Okay, so yeah, starting to look a bit better.

289
00:14:49,700 --> 00:14:54,500
What's going on with buffer cure is buffer something that only occurs

290
00:14:54,500 --> 00:14:54,900
inside?

291
00:14:54,900 --> 00:14:55,200
Yeah.

292
00:14:55,200 --> 00:14:58,700
So I want to make sure that we actually have this buffer so that

293
00:14:58,700 --> 00:14:59,800
people can write to it later.

294
00:15:01,000 --> 00:15:03,100
And now I think we're in better shape.

295
00:15:03,600 --> 00:15:04,100
All right.

296
00:15:04,500 --> 00:15:10,600
So let's see here, debug gets state is having a problem.

297
00:15:10,600 --> 00:15:12,000
It's not happy.

298
00:15:12,000 --> 00:15:13,400
Why is it not happy?

299
00:15:15,600 --> 00:15:20,300
Because it's not initialized yet when we get there and I guess that

300
00:15:20,300 --> 00:15:22,900
makes sense because debug start is being called here.

301
00:15:24,100 --> 00:15:26,600
So I like I said, that's just kind of a result of collapsing this

302
00:15:26,600 --> 00:15:26,800
code.

303
00:15:26,800 --> 00:15:30,200
So I need to reorganize it just slightly just very

304
00:15:30,400 --> 00:15:31,400
Slightly right?

305
00:15:32,400 --> 00:15:33,000
So what I can do?

306
00:15:33,000 --> 00:15:37,600
Now, in fact, debug gets State, I want to stay at this point.

307
00:15:37,700 --> 00:15:40,300
Who is calling that actually

308
00:15:42,000 --> 00:15:44,500
Because all of these people, this is kind of weird.

309
00:15:44,500 --> 00:15:48,800
Now, at this point, all of these people this stuff is never supposed

310
00:15:48,800 --> 00:15:51,300
to actually go into that debug State stuff.

311
00:15:53,200 --> 00:15:53,600
Yeah,

312
00:15:57,000 --> 00:15:59,700
we don't really need this feature anymore.

313
00:16:02,200 --> 00:16:05,100
So it's a little wonky, but what I'm going to do here is, I'm just

314
00:16:05,100 --> 00:16:08,500
going to take debug start, going to take this stuff, I'm just going to

315
00:16:08,500 --> 00:16:11,700
go ahead and put that in here because we really don't need this as a

316
00:16:11,700 --> 00:16:12,500
thing anymore.

317
00:16:13,100 --> 00:16:17,400
So what I can do here instead is is right here.

318
00:16:19,200 --> 00:16:20,000
Well actually.

319
00:16:21,500 --> 00:16:21,900
Yeah.

320
00:16:23,300 --> 00:16:26,000
See here, let me see.

321
00:16:26,400 --> 00:16:31,700
Well, I should really have to do is just do this right there, right?

322
00:16:33,300 --> 00:16:37,900
so in debug start, before I call it

323
00:16:39,000 --> 00:16:41,100
I should be able to just do this, right?

324
00:16:41,200 --> 00:16:42,700
So we'll get it directly out here.

325
00:16:43,700 --> 00:16:46,300
You going to start that it's initialized because we know that it's

326
00:16:46,300 --> 00:16:46,900
not.

327
00:16:47,300 --> 00:16:48,700
So we'll just go ahead and do this.

328
00:16:50,300 --> 00:16:52,500
And then I think we are in better shape.

329
00:16:53,300 --> 00:16:53,700
Yeah.

330
00:16:55,500 --> 00:17:00,200
Okay, so now, I think we're in better shape.

331
00:17:00,200 --> 00:17:03,600
And I think, also, we would have fixed that bug.

332
00:17:04,300 --> 00:17:04,700
Yeah.

333
00:17:06,099 --> 00:17:09,599
Which is that now, the executable can't get reloaded in between the

334
00:17:09,599 --> 00:17:12,599
times that we collate and display.

335
00:17:13,400 --> 00:17:15,800
And again, that's not really a bug that would affect the game at all.

336
00:17:15,800 --> 00:17:18,700
It's just a debug thing, but it's nice to not have bugs in it, because

337
00:17:18,900 --> 00:17:21,300
if we have bugs in the debug code, then you're less likely to use the

338
00:17:21,300 --> 00:17:22,099
debug code.

339
00:17:22,099 --> 00:17:25,000
And the whole point of the debug code is should be nice to use, right?

340
00:17:25,500 --> 00:17:28,200
You're trying to encourage its use because it is there to help you

341
00:17:28,200 --> 00:17:29,100
find bugs and help.

342
00:17:29,100 --> 00:17:32,700
You see bugs, you might not see otherwise, right?

343
00:17:33,400 --> 00:17:36,400
So I think that's roughly what we would want.

344
00:17:36,400 --> 00:17:37,900
I think that's all fine.

345
00:17:39,500 --> 00:17:43,100
And so I think we're, at least, I'm pretty okay with that.

346
00:17:43,300 --> 00:17:43,500
Okay.

347
00:17:43,500 --> 00:17:45,100
So that was a good change.

348
00:17:45,200 --> 00:17:47,900
We still let you know, structurally speaking, this stuff can still

349
00:17:47,900 --> 00:17:49,400
stand to be improved quite a bit more.

350
00:17:49,400 --> 00:17:51,800
We still have not moved to like a rolling buffer or something for

351
00:17:51,800 --> 00:17:53,100
doing that collation stuff.

352
00:17:53,100 --> 00:17:55,100
So we still have that frame.

353
00:17:55,200 --> 00:17:56,200
Robe annoyingness.

354
00:17:56,700 --> 00:17:58,900
So there's some stuff there that I'd really like to do at some point

355
00:17:58,900 --> 00:17:59,100
too.

356
00:17:59,100 --> 00:17:59,800
But, you know,

357
00:18:00,000 --> 00:18:02,100
One step at a time, but that's a good.

358
00:18:04,900 --> 00:18:05,900
That's a really good.

359
00:18:07,400 --> 00:18:08,400
Change that we've made there.

360
00:18:08,700 --> 00:18:12,000
I'm really happy about that because now it means that pretty much

361
00:18:12,000 --> 00:18:17,900
people are only ever, you know, doing sort of basic writing to

362
00:18:19,200 --> 00:18:23,200
debug buffers and they're never calling into the actual debug system

363
00:18:23,200 --> 00:18:24,600
per se, right.

364
00:18:24,600 --> 00:18:28,200
Which is what I kind of wanted to make sure that they weren't doing

365
00:18:28,200 --> 00:18:28,500
it.

366
00:18:28,500 --> 00:18:30,900
I don't really like the game to be able to do that.

367
00:18:31,100 --> 00:18:35,000
Now, I'm wondering to game debug dot h.

368
00:18:35,000 --> 00:18:39,900
So all this stuff, I kind of feel like none of this stuff should be

369
00:18:39,900 --> 00:18:42,200
necessary for anyone anymore.

370
00:18:44,100 --> 00:18:48,800
I feel like handmade debug .h, I feel like can

371
00:18:49,000 --> 00:18:52,800
Just start to go away would be my next question, right?

372
00:18:52,800 --> 00:18:55,400
And there was do we have to even have that in there?

373
00:18:56,000 --> 00:18:58,400
And I'm, so I'm just wondering, right?

374
00:18:58,400 --> 00:18:59,800
I'm just wondering about that.

375
00:19:00,600 --> 00:19:06,000
So, let me go ahead and take a look at handmade debug variables dot h.

376
00:19:06,000 --> 00:19:07,500
Whereas that included,

377
00:19:10,000 --> 00:19:10,600
Right.

378
00:19:10,600 --> 00:19:13,600
Let's take a look here and my do both variables.

379
00:19:14,000 --> 00:19:19,600
These are both in handmade, debug dot CPP and that I assume handmade

380
00:19:19,600 --> 00:19:22,700
debug dot CPP is at the very end perfect.

381
00:19:23,000 --> 00:19:23,500
Okay.

382
00:19:23,800 --> 00:19:27,500
So now you can see what I've sort of done here, which I really like

383
00:19:28,500 --> 00:19:31,900
this means that basically, at the very end of our entire compilation

384
00:19:31,900 --> 00:19:35,900
unit, we include the debug code which means if we didn't want it at

385
00:19:35,900 --> 00:19:36,300
all,

386
00:19:37,100 --> 00:19:40,600
We should be able to get rid of it entirely and you can see that I've

387
00:19:40,600 --> 00:19:43,400
done that right there, right?

388
00:19:43,900 --> 00:19:48,500
And the only link era that we get, is the fact that debug game frame

389
00:19:48,500 --> 00:19:51,700
end is not defined, and we set it was supposed to be exported.

390
00:19:52,000 --> 00:19:53,300
Now, that's perfect.

391
00:19:53,300 --> 00:19:57,100
That's exactly what I want to see because that means all of this,

392
00:19:57,100 --> 00:20:00,900
debug code can just go away with an absolute triviality, right?

393
00:20:00,900 --> 00:20:02,600
All I would have to do is this

394
00:20:13,100 --> 00:20:13,600
Okay?

395
00:20:14,500 --> 00:20:18,000
And now if handmade internal were to be switched off.

396
00:20:18,200 --> 00:20:23,900
Like, so we would have absolutely, because, I don't actually remember

397
00:20:24,200 --> 00:20:28,300
what what this is actually supposed to return should probably check.

398
00:20:30,600 --> 00:20:33,700
Debug table a debug table, huh?

399
00:20:35,000 --> 00:20:36,100
So I'm just going to return.

400
00:20:36,100 --> 00:20:38,400
0 is the debug table.

401
00:20:44,500 --> 00:20:46,000
How about that you like that?

402
00:20:47,800 --> 00:20:51,300
If people don't like having Zero Turns debug table, they better buckle

403
00:20:51,300 --> 00:20:52,600
up because it's gonna happen.

404
00:20:54,400 --> 00:20:58,800
So, yeah, I'm sorry showing a global debug table that I believe.

405
00:21:00,000 --> 00:21:02,400
Would go away with handmade internal as well.

406
00:21:03,200 --> 00:21:06,000
So I feel like we don't, in fact, you know what?

407
00:21:07,900 --> 00:21:09,900
Let's just go for it, I'm in the mood.

408
00:21:10,000 --> 00:21:14,100
I am in the mood for this, so let's take build up at we have handmade

409
00:21:14,100 --> 00:21:17,500
internal and it's zero, right?

410
00:21:18,100 --> 00:21:21,700
So I would like to see what happens if I turn that off.

411
00:21:21,900 --> 00:21:23,400
I also don't know handmade profile.

412
00:21:23,400 --> 00:21:24,200
Well, it doesn't really matter.

413
00:21:24,500 --> 00:21:28,400
So anyway, handmade internal, I'm going to turn that off and I want to

414
00:21:28,400 --> 00:21:31,700
go through and kind of get rid of the stuff that we don't, that we

415
00:21:31,700 --> 00:21:35,200
don't use anymore or won't have any more, right?

416
00:21:35,200 --> 00:21:36,500
So handmade internal

417
00:21:39,400 --> 00:21:41,400
Because we never really done this, right?

418
00:21:42,600 --> 00:21:45,500
So let's see, do you prepare for file memory?

419
00:21:46,300 --> 00:21:47,500
These are all internal.

420
00:21:49,500 --> 00:21:50,100
Right?

421
00:21:51,200 --> 00:21:55,700
Seaweed entire file, execute system, command and get processed State.

422
00:21:56,100 --> 00:21:56,600
There we go.

423
00:21:58,300 --> 00:21:59,600
Debug free file memory.

424
00:21:59,600 --> 00:22:01,700
So all these guys are handmade internal.

425
00:22:05,600 --> 00:22:07,500
And then we just have the global debug table.

426
00:22:07,500 --> 00:22:10,700
So the global debug table is just something that's in platform.sh

427
00:22:11,400 --> 00:22:13,400
global table.

428
00:22:14,900 --> 00:22:19,600
And so I believe all we would have to do for that is just to make sure

429
00:22:19,600 --> 00:22:24,000
that all of this stuff right would go away in if we were doing

430
00:22:24,000 --> 00:22:26,100
handmade internal you know I'm saying.

431
00:22:27,500 --> 00:22:30,800
So I think that that just means.

432
00:22:30,800 --> 00:22:36,200
Yeah the only things really we would do there is to just say if you

433
00:22:36,200 --> 00:22:37,300
know handmade internal

434
00:22:38,300 --> 00:22:44,000
We have all these and if not, then we don't right.

435
00:22:47,500 --> 00:22:49,000
and I believe,

436
00:22:51,700 --> 00:22:54,500
So the interesting thing about this is I believe it's actually it's

437
00:22:54,500 --> 00:22:55,300
kind of a little tricky.

438
00:22:55,300 --> 00:22:56,000
We have.

439
00:22:56,100 --> 00:22:59,300
I wonder if maybe we should try to reduce the number of these.

440
00:22:59,300 --> 00:23:02,700
We have like we have handmade profile and handmade internal.

441
00:23:02,900 --> 00:23:08,300
I'm wondering if we just want handmade internal to be like just

442
00:23:11,100 --> 00:23:12,100
The only thing.

443
00:23:13,900 --> 00:23:14,600
You know what I mean?

444
00:23:17,100 --> 00:23:18,100
I feel like maybe we do.

445
00:23:18,100 --> 00:23:21,100
Let me take a look at this and made profile because it just might be a

446
00:23:21,100 --> 00:23:21,900
little bit too much.

447
00:23:21,900 --> 00:23:24,000
It might be like a bit of an orgy of switches.

448
00:23:24,300 --> 00:23:27,600
Yes, I think handmade profile is going to go away for now.

449
00:23:28,600 --> 00:23:30,100
So handmade profile will go away.

450
00:23:30,100 --> 00:23:30,600
Goodbye.

451
00:23:32,500 --> 00:23:35,600
And then we just have handmade internal handmade slow.

452
00:23:35,700 --> 00:23:36,800
Handmade win32.

453
00:23:36,800 --> 00:23:37,500
That's it.

454
00:23:37,900 --> 00:23:39,400
So this is like the platform.

455
00:23:39,900 --> 00:23:43,100
This is whether or not you have like assertion that stuff and this is

456
00:23:43,100 --> 00:23:45,300
whether or not you have stuff like debug output.

457
00:23:45,900 --> 00:23:49,200
That seems good to me at least for now, right?

458
00:23:50,600 --> 00:23:56,800
okay, so in here we would have you know if handmade internal, what is

459
00:23:56,800 --> 00:23:59,800
this else end if doing here, which

460
00:24:00,000 --> 00:24:01,100
And lift are there.

461
00:24:03,000 --> 00:24:03,900
It's going on there.

462
00:24:05,200 --> 00:24:06,400
Okay, I just added that.

463
00:24:06,400 --> 00:24:10,300
So what we want to do is want to get rid of this and then we want to

464
00:24:10,300 --> 00:24:11,200
have the else in here.

465
00:24:11,200 --> 00:24:11,600
Okay.

466
00:24:11,600 --> 00:24:12,500
So that's all good.

467
00:24:13,700 --> 00:24:20,000
Global debug table that isn't win32 handmade and that is only if

468
00:24:20,000 --> 00:24:20,800
handmade internal

469
00:24:23,800 --> 00:24:26,000
And the same is true here.

470
00:24:26,000 --> 00:24:29,700
So, when we do our Global debug table, like, unload code, and all that

471
00:24:29,700 --> 00:24:35,500
sort of stuff, looks like we don't have to do any of that either.

472
00:24:39,200 --> 00:24:41,500
Let's see, frame marker.

473
00:24:42,400 --> 00:24:46,300
So we'll have to do that one and if handmade turtle

474
00:24:48,500 --> 00:24:52,000
So it's a little spammy, we could probably stand to clean some of that

475
00:24:52,000 --> 00:24:56,500
stuff up, but on the whole now we can at least more cleanly compile

476
00:24:56,500 --> 00:24:57,500
everything out.

477
00:25:02,200 --> 00:25:03,000
There we go.

478
00:25:06,500 --> 00:25:08,500
All right, so let's see if we could run, okay?

479
00:25:09,300 --> 00:25:10,000
And we can

480
00:25:11,400 --> 00:25:12,400
So that's all nice.

481
00:25:13,800 --> 00:25:15,700
And now, let's make sure we can turn it all back on.

482
00:25:18,400 --> 00:25:18,900
There we go.

483
00:25:20,400 --> 00:25:21,200
And run it.

484
00:25:22,300 --> 00:25:22,900
Lovely.

485
00:25:24,400 --> 00:25:25,900
I've got a fix our camera here.

486
00:25:25,900 --> 00:25:28,400
I don't know why we left our debug camera on there.

487
00:25:28,400 --> 00:25:30,500
I was kind of playing with that a little bit.

488
00:25:30,500 --> 00:25:34,400
So let's let's go ahead and not do that, because that's not really

489
00:25:34,400 --> 00:25:35,400
what we wanted at all.

490
00:25:36,200 --> 00:25:38,000
So, alright, so there we go.

491
00:25:38,900 --> 00:25:42,500
So that's using the current state of things.

492
00:25:42,500 --> 00:25:45,800
And then we can turn off him and turn all and then we can run.

493
00:25:46,700 --> 00:25:49,700
And now we are back to running the game regular.

494
00:25:50,500 --> 00:25:51,000
Perfect.

495
00:25:53,000 --> 00:25:53,400
Yeah.

496
00:25:54,900 --> 00:26:00,100
So I'm reasonably happy with that that seems pretty good and we will

497
00:26:00,100 --> 00:26:01,300
go ahead and exit out.

498
00:26:01,600 --> 00:26:02,100
Okay.

499
00:26:02,700 --> 00:26:06,000
So yeah I think that's a good thing I think having handmade profile

500
00:26:06,000 --> 00:26:07,800
him an internal might have just been a little bit too much.

501
00:26:07,800 --> 00:26:09,200
I mean it's already a little too much.

502
00:26:09,200 --> 00:26:10,300
I feel like Adventure Ali.

503
00:26:10,300 --> 00:26:12,900
We could simplify that down a bit so we don't have quite so many

504
00:26:12,900 --> 00:26:13,200
pound.

505
00:26:13,200 --> 00:26:17,700
If handmade internals in various places you know there's some things

506
00:26:17,700 --> 00:26:20,200
we could do to kind of simplify that a little bit and that's probably

507
00:26:20,200 --> 00:26:21,200
something that we would want to do.

508
00:26:21,200 --> 00:26:22,000
But for now

509
00:26:23,600 --> 00:26:24,200
It's fine.

510
00:26:25,200 --> 00:26:25,700
Okay?

511
00:26:26,000 --> 00:26:27,000
So that's all good.

512
00:26:27,000 --> 00:26:29,300
And we still have about a half hour here.

513
00:26:29,300 --> 00:26:32,100
So even though I chose to go on that detour, we still have actually a

514
00:26:32,100 --> 00:26:36,700
fair bit of time, so we should probably kind of come back now and take

515
00:26:36,700 --> 00:26:40,300
a look at what we could do with our profiling stuff or are you know,

516
00:26:40,500 --> 00:26:43,800
let's just whatever the next logical thing is to do here to move this

517
00:26:43,800 --> 00:26:45,800
sort of stuff forwards a little bit, right?

518
00:26:47,000 --> 00:26:50,000
So yeah, we've got got a couple things to do.

519
00:26:50,000 --> 00:26:53,200
So let's just think about this just briefly, right?

520
00:26:53,800 --> 00:26:57,200
Let's just think about this guy and think about how we might want to

521
00:26:57,200 --> 00:26:59,100
deal with with what's going on here.

522
00:27:00,300 --> 00:27:01,800
Right now, you know, we've got a thing.

523
00:27:01,800 --> 00:27:05,900
This is like a, this is like basically frame bars and, you know, we

524
00:27:05,900 --> 00:27:09,300
don't we kind of got rid of our, debug menus, and all that stuff.

525
00:27:09,300 --> 00:27:12,400
So the first thing that I'm kind of thinking of is, you know, we had

526
00:27:12,400 --> 00:27:15,600
that little radial menu thing in there that we sort of did briefly.

527
00:27:19,400 --> 00:27:22,200
But that we never really did much to.

528
00:27:22,800 --> 00:27:26,200
And what I'm thinking now is, I think, now that we sort of have this

529
00:27:26,200 --> 00:27:29,600
state, we got this sort of stuff working where we've got these little

530
00:27:29,600 --> 00:27:32,700
guys, and we also have the ability to do, you know, kind of the tear

531
00:27:32,700 --> 00:27:33,200
off stuff.

532
00:27:33,200 --> 00:27:35,800
We kind of got the ability to sort of set up debug things a little bit

533
00:27:35,800 --> 00:27:36,200
here.

534
00:27:37,800 --> 00:27:43,600
What I'd like to do is I'd like to add some kind of a debug interface

535
00:27:43,600 --> 00:27:50,100
sort of a thing where we can where we can actually sort of.

536
00:27:50,300 --> 00:27:51,000
Now, do the thing.

537
00:27:51,000 --> 00:27:53,400
I was saying where I want like the right Mouse button to be like a

538
00:27:53,400 --> 00:27:57,000
clutch that comes on and you can get at some features and stuff.

539
00:27:57,000 --> 00:27:59,800
Because like remember we had a thing where we've got these guys

540
00:27:59,800 --> 00:28:03,000
streaming by, we want to be able to like stop and investigate a

541
00:28:03,000 --> 00:28:06,600
profile without it recording any more data you know.

542
00:28:06,800 --> 00:28:11,900
I mean, and so that's the sort of stuff that I want to sort of maybe

543
00:28:11,900 --> 00:28:12,700
get into now.

544
00:28:13,200 --> 00:28:13,500
Okay.

545
00:28:14,000 --> 00:28:17,100
So I'm trying to think of what the easiest way to do that is so like,

546
00:28:17,100 --> 00:28:20,700
if you think about how this would be working, you know, I want to kind

547
00:28:20,700 --> 00:28:24,900
of have something where, you know, maybe like these guys, maybe

548
00:28:24,900 --> 00:28:27,500
there's a bunch of debug interface, sort of stuff that happens, like,

549
00:28:27,500 --> 00:28:30,300
these guys have buttons or something in them, that you can click on to

550
00:28:30,300 --> 00:28:31,800
do stuff like action buttons.

551
00:28:33,200 --> 00:28:35,800
And some of those action, buttons would be things like, you know,

552
00:28:36,500 --> 00:28:39,200
pause, pause the running game or whatever, that sort of stuff.

553
00:28:39,200 --> 00:28:39,800
You know what I mean?

554
00:28:40,500 --> 00:28:47,900
And then we would have this notion that certain groups are like, when

555
00:28:47,900 --> 00:28:51,800
you, when you like, go into the clutch mode, those groups expand, and

556
00:28:51,800 --> 00:28:55,500
when you go out of the clutch mode, those groups collapse again.

557
00:28:56,200 --> 00:28:58,800
So that way like some of these groups would be expanded all the time

558
00:28:58,800 --> 00:29:01,900
and some of the wouldn't be so I think that's what I'd like to do in

559
00:29:01,900 --> 00:29:02,400
order to do that.

560
00:29:02,400 --> 00:29:02,700
I think we

561
00:29:02,900 --> 00:29:03,300
Address.

562
00:29:03,300 --> 00:29:07,500
Now, the thing that I was talking about before where we sort of have

563
00:29:08,100 --> 00:29:10,800
this problem of when you duplicate things, or when you use another,

564
00:29:11,100 --> 00:29:13,800
when you three try to make another one of those debug car keys, you

565
00:29:13,800 --> 00:29:17,400
have this problem, where the state of the hierarchy and stuff isn't

566
00:29:17,400 --> 00:29:20,500
actually copied, it's just kind of a reference and that's a pretty

567
00:29:20,500 --> 00:29:21,000
easy thing.

568
00:29:21,000 --> 00:29:24,200
I think for us to well, it's not that easy but, you know, it's, it's

569
00:29:24,200 --> 00:29:26,500
not a huge deal for us to start looking into that.

570
00:29:26,500 --> 00:29:28,000
That's not, it's not a really big deal.

571
00:29:29,300 --> 00:29:32,400
So if you remember the way the stuff works, we have these debug

572
00:29:32,400 --> 00:29:35,300
variables and the debug variables have stuff in them.

573
00:29:35,300 --> 00:29:37,900
Right there can be like a group of things, could be a bitmap display,

574
00:29:37,900 --> 00:29:40,200
can be a counter thread list, it could be whatever, right?

575
00:29:41,000 --> 00:29:43,400
And then we have debug variable references and debug variable

576
00:29:43,400 --> 00:29:47,900
references or kind of like these sort of other things and they're sort

577
00:29:47,900 --> 00:29:52,100
of like a shadow of the hierarchy there sort of the thing that

578
00:29:52,100 --> 00:29:53,000
controls the hierarchy.

579
00:29:53,200 --> 00:29:56,500
But if you notice we kind of have them.

580
00:29:56,500 --> 00:29:59,000
They're kind of smushed together a little bit because if

581
00:29:59,100 --> 00:29:59,700
if you look at what,

582
00:30:00,000 --> 00:30:02,000
Ends in the debug variable, right?

583
00:30:02,000 --> 00:30:06,100
We've got a debug variable group and the debug variable group is the

584
00:30:06,100 --> 00:30:08,600
thing that actually has these like child pointers in it.

585
00:30:08,600 --> 00:30:12,900
So, I think what we want to do instead is we want to move that

586
00:30:12,900 --> 00:30:15,300
variable reference sort of concept.

587
00:30:15,300 --> 00:30:20,600
We want to move this, debug variable group up entirely into the debug

588
00:30:20,600 --> 00:30:23,200
variable reference completely, right?

589
00:30:23,500 --> 00:30:25,700
Meaning we want we want this.

590
00:30:25,700 --> 00:30:30,000
Does that make sense so that all of

591
00:30:30,000 --> 00:30:34,100
Of the meta information about that structural stuff is all in the

592
00:30:34,100 --> 00:30:38,600
variable reference and there's no such thing as a debug variable group

593
00:30:38,900 --> 00:30:44,400
in the actual, like variables themselves, the variables themselves are

594
00:30:44,400 --> 00:30:45,000
nothing.

595
00:30:45,000 --> 00:30:48,500
They are just data right there.

596
00:30:48,500 --> 00:30:53,800
Just the data of the thing, whatever that thing is right in order to

597
00:30:53,800 --> 00:30:54,300
do that.

598
00:30:54,300 --> 00:30:58,700
I think what probably what we'd want to do is we actually, you know, I

599
00:30:58,700 --> 00:30:59,800
would suspect.

600
00:31:00,000 --> 00:31:06,200
Actually want a mirror like a like a traffic of the right wrist right

601
00:31:06,200 --> 00:31:06,400
here.

602
00:31:06,500 --> 00:31:08,900
We probably won't like a split right?

603
00:31:08,900 --> 00:31:12,400
We want debug variables and then we want a hierarchy that's on top of

604
00:31:12,400 --> 00:31:16,600
the debug variables and so things for example like the size that a

605
00:31:16,600 --> 00:31:21,500
bitmap is being displayed would be like separate from the concept that

606
00:31:21,500 --> 00:31:24,800
there is a debug variable which is a bitmap that should be displayed.

607
00:31:25,600 --> 00:31:26,300
You know what I mean?

608
00:31:27,800 --> 00:31:31,400
So we kind of want to split these out into something.

609
00:31:32,400 --> 00:31:32,700
You know.

610
00:31:32,700 --> 00:31:36,900
That's, that's, that's just not doing a very good job explaining it.

611
00:31:37,000 --> 00:31:40,400
Maybe I should draw it on the Whiteboard, just so it's a little bit

612
00:31:40,400 --> 00:31:40,900
clearer.

613
00:31:40,900 --> 00:31:43,000
Of course, drawing it on the Whiteboard will take a while because we

614
00:31:43,000 --> 00:31:45,600
did not open up our whiteboard thing it and it takes a while for it to

615
00:31:45,600 --> 00:31:46,200
load it.

616
00:31:47,200 --> 00:31:50,500
Let me see, Miss Chief Blackboard.

617
00:31:52,400 --> 00:31:55,000
So while that's loading, I'll just keep going.

618
00:31:55,400 --> 00:31:57,800
For a second, right?

619
00:31:57,800 --> 00:32:00,600
So we have a debug variable and like one of the examples would be

620
00:32:00,600 --> 00:32:03,800
maybe like the the debug bitmap display thing.

621
00:32:03,900 --> 00:32:08,000
You know, it sort of has in the debug bitmap display.

622
00:32:08,200 --> 00:32:11,300
It has two different sorts of information in it.

623
00:32:11,500 --> 00:32:15,000
It's got the dimensions and whether or not you want to display with

624
00:32:15,000 --> 00:32:15,500
Alpha.

625
00:32:15,600 --> 00:32:17,000
We're just like random attributes.

626
00:32:17,000 --> 00:32:20,200
We chose to assign, but then it also has the ID.

627
00:32:20,900 --> 00:32:24,300
The ID would actually be the piece of information, actually being

628
00:32:24,300 --> 00:32:25,000
debugged.

629
00:32:25,400 --> 00:32:25,900
Right.

630
00:32:26,500 --> 00:32:31,100
But the other things are really just a property of that display into

631
00:32:31,100 --> 00:32:31,700
the data.

632
00:32:32,000 --> 00:32:32,700
You know what I mean?

633
00:32:33,600 --> 00:32:38,500
So I think what we would rather do here is we would rather have some

634
00:32:38,500 --> 00:32:44,000
sort of a way of splitting that out so that we don't have, you know,

635
00:32:44,000 --> 00:32:47,900
two pieces of information that armor that are fused together in that

636
00:32:47,900 --> 00:32:48,200
way.

637
00:32:48,600 --> 00:32:50,700
Okay, I guess so.

638
00:32:50,700 --> 00:32:51,900
Maybe I don't need the black graph.

639
00:32:51,900 --> 00:32:53,200
That maybe that's clear enough.

640
00:32:53,200 --> 00:32:53,900
What I'm saying?

641
00:32:54,000 --> 00:32:55,200
Hopefully it is, I don't

642
00:32:56,200 --> 00:32:59,700
and furthermore, we could even probably do that in a way that, you

643
00:32:59,700 --> 00:32:59,800
know,

644
00:33:00,200 --> 00:33:08,300
Maybe isn't we could almost imagine doing that in a way that's not too

645
00:33:08,300 --> 00:33:10,500
heavily typed, you know.

646
00:33:11,100 --> 00:33:17,300
So we could have something like, you know, we've got a debug kind of

647
00:33:17,300 --> 00:33:18,900
want a better names to these guys.

648
00:33:18,900 --> 00:33:24,500
Like, I kind of want, like, debug hierarchy or debug debug tree and

649
00:33:24,500 --> 00:33:28,000
debug tree entry or something like that, right?

650
00:33:29,100 --> 00:33:29,900
And I'm

651
00:33:30,000 --> 00:33:35,500
Thinking that maybe these guys, we could probably even collapse these

652
00:33:35,500 --> 00:33:39,000
things a little bit more to be completely honest with you.

653
00:33:39,400 --> 00:33:43,500
And that might be something worth doing right because it's unclear

654
00:33:43,500 --> 00:33:46,500
whether we really need multiple things of those.

655
00:33:46,900 --> 00:33:48,100
But yeah, so let's see.

656
00:33:48,200 --> 00:33:49,600
In fact, I might just try to do that.

657
00:33:49,600 --> 00:33:52,700
Just even in this just this, this pass directly.

658
00:33:53,400 --> 00:33:55,300
So suppose we have a debug tree

659
00:33:57,300 --> 00:33:58,300
Entry group.

660
00:33:58,800 --> 00:34:02,000
And that's the thing that would have, you know, the first and last

661
00:34:02,000 --> 00:34:04,100
child in it, it would have the expanded.

662
00:34:05,400 --> 00:34:11,400
Like so, and it might even have something, you know, like like, like,

663
00:34:11,400 --> 00:34:14,699
if you to pee, and maybe that's a bit fatty.

664
00:34:14,699 --> 00:34:17,000
Because maybe it's not always use or something like this.

665
00:34:17,600 --> 00:34:20,100
And then in the tree entry thing, you know, we've got a pointer to the

666
00:34:20,100 --> 00:34:23,100
variable, but then we've also got that Union, so that we can get in at

667
00:34:23,100 --> 00:34:25,199
the, the other data here, right?

668
00:34:25,600 --> 00:34:28,699
So we have the group, there's that next pointer.

669
00:34:33,699 --> 00:34:37,000
Okay, and yeah.

670
00:34:37,000 --> 00:34:38,400
And so, we've got the group there.

671
00:34:38,900 --> 00:34:48,199
We have probably want a debug, you know, probably actually, it would

672
00:34:48,199 --> 00:34:49,199
go right in here, right?

673
00:34:49,199 --> 00:34:50,600
So we'd have a debug tree.

674
00:34:56,600 --> 00:35:00,200
Yeah, in fact, I think this would just work, we'd have a debug tree.

675
00:35:00,500 --> 00:35:05,200
The debug tree would have a debug tree entry, that was like the group

676
00:35:05,300 --> 00:35:06,300
for it, right?

677
00:35:06,300 --> 00:35:08,000
And it would just be one of these.

678
00:35:08,100 --> 00:35:11,500
I think I feel like, I don't know, we'll find out.

679
00:35:12,500 --> 00:35:15,600
So sometimes it's a tree, sometimes it's a group, right?

680
00:35:16,400 --> 00:35:18,400
And then again, sometimes it's a

681
00:35:19,800 --> 00:35:21,500
Let's see, I would need the VIP.

682
00:35:21,500 --> 00:35:22,600
We have that they're correct.

683
00:35:22,600 --> 00:35:25,400
I could actually just name the same things for Less confusion.

684
00:35:26,200 --> 00:35:29,700
We have the group and we don't need the next in the previous probably

685
00:35:30,200 --> 00:35:33,100
because it already has a next pointer, right?

686
00:35:34,200 --> 00:35:37,900
So yeah we can just piggyback on top of that, I would think we're

687
00:35:37,900 --> 00:35:39,600
using a sentinel for that one.

688
00:35:41,900 --> 00:35:46,500
So yeah, I mean, I don't know if we want to switch up how that's

689
00:35:46,500 --> 00:35:46,700
doing.

690
00:35:46,700 --> 00:35:47,700
Haven't thought about too much.

691
00:35:47,700 --> 00:35:48,900
We're going to leave it for now.

692
00:35:49,600 --> 00:35:50,500
This would go away.

693
00:35:51,200 --> 00:35:51,600
So that.

694
00:35:51,600 --> 00:35:55,900
Yeah, we'd have debug tree we'd have debug tree group.

695
00:35:57,500 --> 00:35:59,400
I guess this is something that looks like that, or

696
00:36:01,200 --> 00:36:02,500
Naming these rabbit weird.

697
00:36:04,600 --> 00:36:08,300
If this is a gibbet re-entry, I've got to entry like a subtree, write

698
00:36:08,300 --> 00:36:09,500
a 3 or a group.

699
00:36:10,000 --> 00:36:10,300
Yeah.

700
00:36:13,500 --> 00:36:14,400
Yeah.

701
00:36:17,900 --> 00:36:20,800
Of course, now that I say it now I'm saying it out loud.

702
00:36:21,500 --> 00:36:25,200
I also don't know how useful that actually is because you can't like,

703
00:36:25,200 --> 00:36:28,800
do you ever actually want to put trees in the middle of their so that

704
00:36:28,800 --> 00:36:30,100
may just have been dumb, right?

705
00:36:30,100 --> 00:36:30,800
I mean, I think about it.

706
00:36:30,800 --> 00:36:31,300
It's like

707
00:36:32,500 --> 00:36:35,400
I kind of got overzealous compressing that down but it's like why

708
00:36:35,400 --> 00:36:36,900
bother like there was nothing.

709
00:36:36,900 --> 00:36:41,300
You can't have a tree show up in the middle so that just seems kind of

710
00:36:41,300 --> 00:36:43,600
stupid in my mind.

711
00:36:44,000 --> 00:36:45,800
So I think it's probably more like this.

712
00:36:46,200 --> 00:36:51,500
You just have the entry group and you have a debug tree entry, you

713
00:36:51,500 --> 00:36:51,900
know?

714
00:36:54,000 --> 00:36:59,500
Bitmap or maybe I should say like window something like that.

715
00:37:03,100 --> 00:37:08,200
And so anybody, for example who just wants like a dim, this sort of a

716
00:37:08,200 --> 00:37:11,700
thing can just use that, right?

717
00:37:11,900 --> 00:37:15,200
And they won't have to, you know, they won't have to worry about about

718
00:37:15,200 --> 00:37:16,100
actually defining it.

719
00:37:16,100 --> 00:37:17,500
Some other kind of thing that's in there.

720
00:37:17,500 --> 00:37:21,600
So, just be like a debunked re-entry like, you know, just just a

721
00:37:21,600 --> 00:37:25,000
little like that's the window, seems guess.

722
00:37:25,000 --> 00:37:26,400
It seems kind of fine to me.

723
00:37:27,100 --> 00:37:30,800
So we have groups in Windows and then we just have like regular

724
00:37:30,800 --> 00:37:32,800
variables and in fact, I guess we don't even need to Define what

725
00:37:32,900 --> 00:37:35,200
Wouldn't have any actual parameters, I don't think.

726
00:37:36,400 --> 00:37:39,100
And then this stuff would kind of get rid of some of these things.

727
00:37:39,100 --> 00:37:42,800
So we wouldn't have anything in the profile settings at the moment

728
00:37:42,800 --> 00:37:45,300
because well, I'll leave it in there but we don't actually have

729
00:37:45,300 --> 00:37:49,300
anything so be more like in place holder, right?

730
00:37:49,400 --> 00:37:52,800
Because we'll probably want something there eventually but that seems

731
00:37:54,500 --> 00:37:58,000
roughly roughly more in line with what I wanted, right?

732
00:37:58,300 --> 00:38:01,100
So then we have a debug variable type and now we have a second type

733
00:38:01,100 --> 00:38:02,800
that sits on top of it for our tree entries.

734
00:38:02,800 --> 00:38:04,800
So we have a debug tree entry type

735
00:38:07,000 --> 00:38:08,500
I'm the diva tree entry type.

736
00:38:12,400 --> 00:38:13,400
It's just going to be.

737
00:38:18,500 --> 00:38:19,600
The one that we had there.

738
00:38:19,800 --> 00:38:24,600
So it would be something like Liberty type like a variable or like a

739
00:38:24,600 --> 00:38:26,600
basic variable something like that.

740
00:38:27,100 --> 00:38:31,300
Then we'd have group and we have window and I think that's really all

741
00:38:31,300 --> 00:38:34,000
we would have right because that's all we actually have in there at

742
00:38:34,000 --> 00:38:39,200
the moment and these guys would all go to like debug tree entries.

743
00:38:39,900 --> 00:38:44,100
Debug yeah, Tree on trees everywhere else.

744
00:38:45,400 --> 00:38:49,000
So now you can see what I did there very very simple stuff.

745
00:38:49,000 --> 00:38:53,700
I just kind of massage it around a little bit so we have essentially

746
00:38:53,700 --> 00:38:58,300
two parallel sets of information, we have debug variables which are

747
00:38:58,300 --> 00:38:59,800
just going to be any variables that someone

748
00:39:00,000 --> 00:39:02,400
Expect can inspect and stuff like that.

749
00:39:02,600 --> 00:39:07,300
And those can be sort of like, you know, created by the, by the

750
00:39:07,300 --> 00:39:10,500
running application as necessary or we can create them, however, we

751
00:39:10,500 --> 00:39:15,400
want to write and then we can, you know, sort of put something on top

752
00:39:15,400 --> 00:39:20,300
of them that knows how to inspect those things as we go, you know what

753
00:39:20,300 --> 00:39:20,700
I mean.

754
00:39:20,700 --> 00:39:25,100
And that way we can have multiple trees viewing the same sets of

755
00:39:25,100 --> 00:39:28,500
information but viewing them in different ways which is sort of what

756
00:39:28,500 --> 00:39:29,800
we wanted to do here, right?

757
00:39:30,000 --> 00:39:30,300
Right?

758
00:39:30,800 --> 00:39:35,000
So if I go ahead and do this, especially just going to be cleaning up

759
00:39:35,000 --> 00:39:38,300
all the compile errors that this creates, but to basically will make

760
00:39:38,300 --> 00:39:39,400
exactly the same thing.

761
00:39:40,800 --> 00:39:44,500
And then when we do our clone, we would just do is essentially like a

762
00:39:44,500 --> 00:39:49,400
deep copy of this, you know, of this information, right?

763
00:39:49,800 --> 00:39:52,000
And that's really all that we would need to do.

764
00:39:52,700 --> 00:39:57,400
So, let's go ahead and start that it might take a while, right?

765
00:39:58,100 --> 00:39:59,900
So we've got our debug tree entry here.

766
00:40:01,000 --> 00:40:03,800
We have to pre declare that because we're creating a linked list of

767
00:40:03,800 --> 00:40:05,100
them in the entry group.

768
00:40:06,100 --> 00:40:11,200
Okay, we have our debug variable hierarchy that is now called a debug

769
00:40:11,200 --> 00:40:11,600
tree.

770
00:40:13,200 --> 00:40:16,900
Just kind of simplified that name started typing hierarchy.

771
00:40:16,900 --> 00:40:18,200
It's too hard to spell man.

772
00:40:18,600 --> 00:40:19,700
It's too hard to spell.

773
00:40:21,400 --> 00:40:22,100
So there we go.

774
00:40:23,100 --> 00:40:25,300
I could probably just do hierarchy becomes tree.

775
00:40:25,700 --> 00:40:27,000
I'm guessing battle just work.

776
00:40:27,100 --> 00:40:28,000
Pretty much everywhere.

777
00:40:36,300 --> 00:40:37,200
Yeah.

778
00:40:38,500 --> 00:40:39,000
Yep.

779
00:40:40,600 --> 00:40:41,500
Pretty much good.

780
00:40:43,200 --> 00:40:47,000
Okay, so, variable references, this is just a debug tree.

781
00:40:48,200 --> 00:40:51,400
And I guess well it's not really debug tree, to be honest, right?

782
00:40:51,400 --> 00:40:54,000
It's actually just a debug tree entry.

783
00:40:54,300 --> 00:40:59,400
I suppose is the route group and then the debug tree tree, Sentinel I

784
00:40:59,400 --> 00:41:01,300
think that's actually more correct.

785
00:41:02,300 --> 00:41:05,300
So when we're doing these definitions, this would just be a debunked

786
00:41:05,300 --> 00:41:08,600
re-entry that it's pointing to and that would be whatever the group

787
00:41:08,600 --> 00:41:09,700
was right?

788
00:41:10,200 --> 00:41:12,200
And I suppose debug variable reference.

789
00:41:12,700 --> 00:41:17,700
So, debug variable reference is actually going to be like debug

790
00:41:17,800 --> 00:41:19,100
At re-entry.

791
00:41:19,600 --> 00:41:23,500
I think that's pretty much straight straight ahead port.

792
00:41:24,400 --> 00:41:24,900
Right.

793
00:41:27,300 --> 00:41:27,700
Okay.

794
00:41:28,700 --> 00:41:29,100
All right.

795
00:41:29,100 --> 00:41:33,100
So what we need to do now is when we're creating these, we sort of

796
00:41:33,100 --> 00:41:36,600
have again, two sorts of things that we're doing here, right?

797
00:41:37,400 --> 00:41:41,800
To sorts of things that are going to get to be created.

798
00:41:41,800 --> 00:41:43,900
We're going to create the debug variables themselves.

799
00:41:44,300 --> 00:41:46,900
And then we're also going to create the hierarchy that like, you know,

800
00:41:46,900 --> 00:41:48,400
inspects those, right?

801
00:41:48,400 --> 00:41:49,600
That kind of looks into those

802
00:41:51,600 --> 00:41:53,100
Which again is kind of annoying, right?

803
00:41:53,100 --> 00:41:55,800
It'd be nice if you didn't have to do that, but at the same time,

804
00:41:55,800 --> 00:41:57,700
there's not a lot of ways that we can get around that.

805
00:41:57,700 --> 00:41:59,800
Now there are some ways actually, it's

806
00:42:00,000 --> 00:42:04,200
so enough that we can kind of get around that and that's if you use a

807
00:42:04,200 --> 00:42:09,000
system that's you know, more about sort of cashing a caching Centric

808
00:42:09,000 --> 00:42:13,000
system which, you know, to be honest we could in fact try to use

809
00:42:16,600 --> 00:42:20,100
It looks basically the same as this but the iterators are decoupled.

810
00:42:20,700 --> 00:42:23,700
Should think about way, maybe if we do want to do something like that

811
00:42:23,700 --> 00:42:24,400
just to show at Sun.

812
00:42:24,400 --> 00:42:28,400
It's a little more unusual than what I'm about to do right now with

813
00:42:28,400 --> 00:42:30,500
with just manually, creating the hierarchy itself.

814
00:42:30,700 --> 00:42:36,000
Basically what it entails is, you know, you you just look up into a

815
00:42:36,000 --> 00:42:40,000
table to see what the state of something is rather than keeping it

816
00:42:40,000 --> 00:42:40,700
around.

817
00:42:42,000 --> 00:42:47,600
Mmm-hmm, it certainly is a bit tempting.

818
00:42:50,500 --> 00:42:52,900
I feel like it's maybe a little more interesting because hopefully you

819
00:42:52,900 --> 00:42:54,500
see what I was going to do is create those two.

820
00:42:54,500 --> 00:42:57,400
I think it might be a little more interesting, if I didn't do that.

821
00:42:58,600 --> 00:43:00,000
to be completely honest with you,

822
00:43:09,900 --> 00:43:12,200
I think I might, I think I might go to cashing route.

823
00:43:13,800 --> 00:43:14,700
I think I might do it.

824
00:43:15,400 --> 00:43:17,200
Alright, so here's how that would change.

825
00:43:18,300 --> 00:43:20,700
I think it's a little more interesting and honestly, it's a little

826
00:43:20,700 --> 00:43:23,700
more powerful to so might as well if we're showing how to do this

827
00:43:23,700 --> 00:43:25,200
stuff, we might as well show how to do this stuff.

828
00:43:26,100 --> 00:43:29,500
So the way you do, right, the way that I was going to do this right?

829
00:43:29,500 --> 00:43:32,300
As we have a tree that store as you know, the it's literal, it's

830
00:43:32,300 --> 00:43:33,700
what's on their right?

831
00:43:34,800 --> 00:43:38,200
And then we have the debug variables and I pulled the gripping stuff

832
00:43:38,200 --> 00:43:41,600
out of there so that you could have like you know, different groups

833
00:43:41,600 --> 00:43:42,000
that sort of thing.

834
00:43:42,000 --> 00:43:46,100
But when you think about it all the rest of this stuff is really just

835
00:43:46,100 --> 00:43:46,600
just data.

836
00:43:46,600 --> 00:43:48,000
That's kind of like the

837
00:43:48,200 --> 00:43:48,500
Sides.

838
00:43:48,500 --> 00:43:53,000
The the actual like fact that you created a group, all the rest of the

839
00:43:53,000 --> 00:44:00,100
stuff is really just properties that are for a given tree and a given

840
00:44:00,900 --> 00:44:05,100
piece of debug information for Giving Tree into given debug variable.

841
00:44:05,900 --> 00:44:11,100
It's just telling you you know what what the sort of viewing

842
00:44:11,100 --> 00:44:13,200
parameters were for that thing, right?

843
00:44:14,100 --> 00:44:17,800
So if we wanted to, we could instead just make it so that

844
00:44:18,100 --> 00:44:21,000
Each of those debug variable things just looks up into a table and

845
00:44:21,000 --> 00:44:24,800
says, I'm in this tree, and here's the debug variable, I'm looking at,

846
00:44:25,300 --> 00:44:27,400
how should I format it, right?

847
00:44:27,400 --> 00:44:28,500
Like, what should I do?

848
00:44:28,500 --> 00:44:31,700
Like what, you know, what would I do to this debug variable in that

849
00:44:31,700 --> 00:44:36,300
case, in order to like, you know I'm I know that this is a bitmap or

850
00:44:36,300 --> 00:44:36,700
something.

851
00:44:36,700 --> 00:44:40,300
So I want the the data that comes back for that, right, whatever that

852
00:44:40,300 --> 00:44:40,600
is.

853
00:44:42,200 --> 00:44:44,600
So, in that case, you would still have something like this.

854
00:44:45,100 --> 00:44:48,900
But instead of it being like a debug tree entry, you you'd back off a

855
00:44:48,900 --> 00:44:49,900
bit from that.

856
00:44:50,000 --> 00:44:55,700
And you'd say something like, okay, I have, you know, I have something

857
00:44:55,700 --> 00:44:57,200
like debug

858
00:44:59,500 --> 00:44:59,800
very,

859
00:45:01,500 --> 00:45:03,100
View type.

860
00:45:05,400 --> 00:45:06,900
or just debug view type, even

861
00:45:13,500 --> 00:45:14,100
Right?

862
00:45:14,100 --> 00:45:17,100
And then what's in here, is those synthetic variables.

863
00:45:17,100 --> 00:45:21,300
So like the debug view like a basic sort of maybe you know and I don't

864
00:45:21,300 --> 00:45:23,700
know, maybe Windows a little bit grandiose so maybe we just call it

865
00:45:23,700 --> 00:45:26,700
like a block like we're just viewing it as like a little inline-block,

866
00:45:26,800 --> 00:45:27,300
right?

867
00:45:28,800 --> 00:45:31,800
We could even call it, just just that debug view, inline block and

868
00:45:31,800 --> 00:45:31,900
all.

869
00:45:31,900 --> 00:45:34,400
Its got some Dimension, like, how big did you want to see that thing?

870
00:45:34,700 --> 00:45:35,200
Right?

871
00:45:35,600 --> 00:45:39,100
And so we have debug view type, like, you know, you know, basic

872
00:45:39,100 --> 00:45:41,300
debugging type inline block or something like that.

873
00:45:41,300 --> 00:45:42,200
And that's really it.

874
00:45:42,600 --> 00:45:43,300
You know what I mean?

875
00:45:43,900 --> 00:45:46,700
So we just have debug View inline-block.

876
00:45:51,400 --> 00:45:55,300
And then we just have debug few basic with doesn't have any additional

877
00:45:55,300 --> 00:45:57,100
information on it at.

878
00:45:57,100 --> 00:45:57,800
All right.

879
00:45:57,800 --> 00:45:58,500
Nothing at all.

880
00:46:00,000 --> 00:46:05,000
So then we would just say, okay, the tree information in so much as

881
00:46:05,000 --> 00:46:08,700
that still exists is now still considered a debug variable, meaning

882
00:46:08,700 --> 00:46:13,200
the structural the piece, that structural that part we still keep in

883
00:46:13,200 --> 00:46:15,300
the variables themselves, right?

884
00:46:15,600 --> 00:46:18,300
And the reason that we do that is because that's actually sort of a

885
00:46:18,300 --> 00:46:22,000
thing that the user is then creating the structure like the the actual

886
00:46:22,000 --> 00:46:25,700
tree is actually just something that we want to keep that something

887
00:46:25,700 --> 00:46:27,100
that we think is valuable.

888
00:46:27,100 --> 00:46:29,700
And, you know, if they made a little window, we want it to always

889
00:46:29,800 --> 00:46:33,000
Say around and we don't want it to get like addicted or anything like

890
00:46:33,000 --> 00:46:33,400
that.

891
00:46:34,800 --> 00:46:37,100
Wish, I had more lemonade, but it don't.

892
00:46:37,900 --> 00:46:41,100
So anyway you know inside the debug variable or whatever it will

893
00:46:41,100 --> 00:46:46,500
actually have whatever needs to happen in terms of lists or that sort

894
00:46:46,500 --> 00:46:48,600
of thing will actually be in here.

895
00:46:48,600 --> 00:46:52,500
And the way that I'd like to do that at the moment is I'd like to make

896
00:46:52,500 --> 00:46:53,100
this thing.

897
00:46:53,100 --> 00:46:57,200
Be some kind of an iterator that works a little more, smartly trying

898
00:46:57,200 --> 00:46:59,300
to think of how exactly I want to do that.

899
00:47:00,600 --> 00:47:04,500
I'm going to say, I'm going to say

900
00:47:07,200 --> 00:47:08,500
That's well, you know what?

901
00:47:08,900 --> 00:47:10,000
For the moment.

902
00:47:11,700 --> 00:47:15,800
I'm going to say that we just have something really kind of

903
00:47:15,800 --> 00:47:21,800
rudimentary, which is, you know, inside debug variable, we would have

904
00:47:21,800 --> 00:47:26,600
a debug variable, or debug variable list or array.

905
00:47:27,500 --> 00:47:32,900
And it would just have like a count maybe and debug variable star

906
00:47:34,100 --> 00:47:35,800
vars, right?

907
00:47:36,300 --> 00:47:40,000
So it just has like this notion that we have some set of variables in

908
00:47:40,000 --> 00:47:41,400
here, you know?

909
00:47:42,700 --> 00:47:43,300
That's it.

910
00:47:44,400 --> 00:47:47,100
And so, one of the things that debug variable can be now is it could

911
00:47:47,100 --> 00:47:48,900
be a list, right?

912
00:47:49,200 --> 00:47:55,000
So it could be a variable list or just a list, maybe carlist, I don't

913
00:47:55,000 --> 00:47:56,100
know, something like that.

914
00:47:57,000 --> 00:47:59,800
And in here, we would have debug variable list.

915
00:48:00,600 --> 00:48:01,200
Sorry, Ray.

916
00:48:03,100 --> 00:48:03,700
Bareilles.

917
00:48:04,500 --> 00:48:06,000
Probably should have called it a wrap their huh?

918
00:48:09,700 --> 00:48:14,400
And so now, you know, like people can build write their own arrays of

919
00:48:14,400 --> 00:48:19,400
debug variables and put them in here and that's all fine.

920
00:48:19,400 --> 00:48:21,600
And like I said, that's going to be part of the actual.

921
00:48:21,600 --> 00:48:26,900
It's like, considered legitimately part of the debug information that,

922
00:48:26,900 --> 00:48:30,700
you know, gets gets capped for now, that's what we're going to say.

923
00:48:31,800 --> 00:48:34,200
And then inside here, you know, got the debug variable array.

924
00:48:34,200 --> 00:48:37,400
And that will actually, you know, produce those, those variable sets,

925
00:48:37,900 --> 00:48:39,300
we could even cheese out on that.

926
00:48:39,500 --> 00:48:43,100
We wanted to we could make those be something that was a fixed size.

927
00:48:43,100 --> 00:48:45,400
Like you can only have a few of them or something like this, I don't

928
00:48:45,400 --> 00:48:48,400
even know but point being that's you know how that would work.

929
00:48:49,400 --> 00:48:49,800
Okay.

930
00:48:50,100 --> 00:48:52,000
So assuming that

931
00:48:54,000 --> 00:48:55,400
Assuming that we leave it that way.

932
00:48:56,200 --> 00:48:59,000
Yeah there's no way that I'm going to have this change done by in 7

933
00:48:59,000 --> 00:49:02,100
minutes and I think but I think it's probably the better way to go.

934
00:49:02,700 --> 00:49:06,800
So in this case we've again switched it over then to these are going

935
00:49:06,800 --> 00:49:09,900
to be like ways of viewing, the thing debug View.

936
00:49:12,500 --> 00:49:13,800
And it's probably just a debug view.

937
00:49:13,800 --> 00:49:18,900
I guess in that sense and instead, what we would always have here is

938
00:49:18,900 --> 00:49:22,800
some way of getting back to what it actually was that we were viewing.

939
00:49:23,000 --> 00:49:26,900
So it'd be like a variable and a tree would probably be what it would

940
00:49:26,900 --> 00:49:31,500
be like, you know, looked up on and we would just have some hash table

941
00:49:31,500 --> 00:49:33,000
that hashes these things together.

942
00:49:33,400 --> 00:49:36,900
And then gets, you know, it back for a says, like, oh, cure is the,

943
00:49:36,900 --> 00:49:41,500
you know, here's the debug view that corresponds to that thing, right?

944
00:49:42,600 --> 00:49:46,200
And then we have the debug tree which would remain pretty much

945
00:49:46,200 --> 00:49:50,000
entirely the same and that would just point to a variable that's like

946
00:49:50,000 --> 00:49:50,600
the route.

947
00:49:52,000 --> 00:49:53,700
Of the tree, right?

948
00:49:53,900 --> 00:49:55,300
So that's the the route group.

949
00:49:58,900 --> 00:49:59,900
So I think that's it.

950
00:50:00,400 --> 00:50:02,900
I think it's really that simple, so it's not a huge change from what

951
00:50:02,900 --> 00:50:03,700
we had before.

952
00:50:04,300 --> 00:50:08,800
So I kind of like backed off on wine create that superstructure for

953
00:50:08,800 --> 00:50:09,200
everything.

954
00:50:09,200 --> 00:50:13,400
And instead we just lazily sort of cash, those things by putting them

955
00:50:13,400 --> 00:50:15,200
into some kind of a hash table, right?

956
00:50:15,500 --> 00:50:20,700
And so, then what we have is inside the hash and we could make it here

957
00:50:21,000 --> 00:50:22,900
so that in the debug view, right?

958
00:50:22,900 --> 00:50:27,200
We have something where we just kind of, you know,

959
00:50:29,300 --> 00:50:31,100
Do something like a debug View.

960
00:50:32,600 --> 00:50:33,600
next in hash,

961
00:50:35,600 --> 00:50:38,900
and so these settings, they would kind of just

962
00:50:40,600 --> 00:50:44,300
They just kind of like chain onto whatever the hash was, right?

963
00:50:44,300 --> 00:50:49,700
So as we got new ones off, they would go and that's pretty much it.

964
00:50:49,800 --> 00:50:53,300
I think that's really all that I think we'd have and so in the debug

965
00:50:53,300 --> 00:50:55,400
State, we would have a hash of these views.

966
00:50:55,600 --> 00:50:59,800
So in addition to the tree Sentinel, right, we would have a debug

967
00:51:01,500 --> 00:51:06,500
View and we would have the view hash and inside the view Half, I guess

968
00:51:06,500 --> 00:51:10,000
we just say like, okay we just have you know, some some set of these

969
00:51:10,000 --> 00:51:14,000
however, many some big old, hash worth of those and we just look up

970
00:51:14,000 --> 00:51:16,400
things in there and then be it, right?

971
00:51:17,500 --> 00:51:18,100
So let's see.

972
00:51:18,100 --> 00:51:18,400
Okay.

973
00:51:18,400 --> 00:51:22,800
So we've got to fix some of this stuff, we've got, debug view, we've

974
00:51:22,800 --> 00:51:23,800
got which tree it's in.

975
00:51:23,800 --> 00:51:26,000
That's going to have to be pretty cleared, right?

976
00:51:26,200 --> 00:51:27,800
So, we've got a debug tree.

977
00:51:30,300 --> 00:51:34,100
This stuff again, is going to kind of go away.

978
00:51:35,000 --> 00:51:37,100
We've got expanded, right?

979
00:51:37,400 --> 00:51:38,900
Oh and that is something we have.

980
00:51:39,000 --> 00:51:43,300
So the debug view for a particular variable, we'd have a Nema, debug

981
00:51:43,300 --> 00:51:43,800
view.

982
00:51:44,200 --> 00:51:45,200
This was the thing we want to do.

983
00:51:45,200 --> 00:51:47,900
Originally was change the, you know, make sure that the expansion

984
00:51:47,900 --> 00:51:52,900
state was stored per thing that would just be a debug view collapsible

985
00:51:52,900 --> 00:51:53,400
or whatever.

986
00:51:55,200 --> 00:51:57,500
Right now, it's got one of these things in it.

987
00:51:58,100 --> 00:51:59,900
Something like that, right?

988
00:52:00,600 --> 00:52:03,700
And we'd probably have it, the something like, okay it's you know,

989
00:52:03,700 --> 00:52:19,000
expanded expanded, always or expanded in in expand it in right.

990
00:52:19,000 --> 00:52:20,300
Click in alt view.

991
00:52:21,000 --> 00:52:23,600
I don't know whatever you want to call it, so we'd have this

992
00:52:23,600 --> 00:52:24,100
collapsible

993
00:52:26,000 --> 00:52:27,900
And that's another type of thing that you could have.

994
00:52:28,100 --> 00:52:28,500
Right.

995
00:52:29,100 --> 00:52:30,200
So I feel like that

996
00:52:32,200 --> 00:52:36,200
And there'd be one of those for every one of those sort of array,

997
00:52:36,200 --> 00:52:37,400
guys, in the tree.

998
00:52:38,300 --> 00:52:39,900
So something like that.

999
00:52:40,500 --> 00:52:42,900
Seems reasonable to me again.

1000
00:52:42,900 --> 00:52:46,300
I don't know about the VAR a thing, whether I want it to be that way

1001
00:52:46,300 --> 00:52:49,100
or not, but it seems again pretty reasonable.

1002
00:52:49,100 --> 00:52:50,700
So I think I'll just leave it that way.

1003
00:52:51,200 --> 00:52:53,200
All right, so I'm going to take a look at a few more compiler errors,

1004
00:52:53,200 --> 00:52:54,100
before we go.

1005
00:52:55,300 --> 00:53:00,000
Oops, it's not supposed to be an enum that is supposed to be a struct.

1006
00:53:02,500 --> 00:53:08,600
Yeah, and even tree entry does not exist anymore, debug tree and do

1007
00:53:08,600 --> 00:53:11,100
the variable or the two things that exist.

1008
00:53:12,000 --> 00:53:17,600
And so yeah, this is just a debug variable, that's the route group.

1009
00:53:19,100 --> 00:53:22,200
And this is just do the variable that's the route group as well.

1010
00:53:23,300 --> 00:53:23,600
Okay.

1011
00:53:23,600 --> 00:53:27,200
So now you know the nice thing about that too is that now we don't

1012
00:53:27,200 --> 00:53:32,800
have the concept of variable references and variable separately we

1013
00:53:32,800 --> 00:53:34,200
only have variables.

1014
00:53:34,500 --> 00:53:35,900
That's the only thing we would have.

1015
00:53:36,900 --> 00:53:40,700
So we pretty much only have to do we don't have to do any of this

1016
00:53:40,700 --> 00:53:41,900
stuff, right?

1017
00:53:42,400 --> 00:53:48,000
This is really just a thing that will would add as we're adding it

1018
00:53:48,000 --> 00:53:52,900
would add those variables to an array as we build that that sort of

1019
00:53:53,100 --> 00:53:53,900
Set right.

1020
00:53:55,500 --> 00:53:56,500
And that's all it does.

1021
00:53:58,300 --> 00:53:59,800
So if we want to take this system, right?

1022
00:54:00,400 --> 00:54:04,400
We could just say like okay you know we're going to do debug add

1023
00:54:04,400 --> 00:54:07,400
variable there's no such thing as a reference to run reference

1024
00:54:07,400 --> 00:54:10,900
variable that's just stuff that that is literally just always going to

1025
00:54:10,900 --> 00:54:12,100
happen, right?

1026
00:54:12,900 --> 00:54:15,100
So you'd have something in here where you're like okay

1027
00:54:19,700 --> 00:54:23,500
Second group breath VAR.

1028
00:54:24,800 --> 00:54:28,400
So this set here, right?

1029
00:54:28,600 --> 00:54:31,500
Well, I guess if we want, both of them, if we want to add a variable

1030
00:54:31,500 --> 00:54:32,400
to a list,

1031
00:54:34,700 --> 00:54:38,000
We kind of want to be able to add things to and from a list so I'm not

1032
00:54:38,000 --> 00:54:40,900
sure I quite want to collapse those yet so maybe I'll start a little

1033
00:54:40,900 --> 00:54:42,300
bit further down, right?

1034
00:54:43,300 --> 00:54:47,800
So, yeah, so if I want to do any of these things really, what I need

1035
00:54:47,800 --> 00:54:51,600
to do here is this right here would be the array to which they're

1036
00:54:51,600 --> 00:54:52,500
being added.

1037
00:54:53,100 --> 00:54:53,800
You know what I mean?

1038
00:54:54,200 --> 00:54:56,900
So if you called one of these things and you're supposed to be adding

1039
00:54:56,900 --> 00:55:00,700
a reference to it, you don't ever really push a struct or anything

1040
00:55:00,700 --> 00:55:01,300
like that.

1041
00:55:01,400 --> 00:55:02,700
You would just need to make sure that

1042
00:55:02,900 --> 00:55:05,400
You added it to the group, right?

1043
00:55:05,400 --> 00:55:06,900
Whatever the debug group is here.

1044
00:55:07,400 --> 00:55:09,500
So, you know, whatever this thing is.

1045
00:55:11,100 --> 00:55:14,900
Where it's got the count and we've got sort of the very here, it just

1046
00:55:14,900 --> 00:55:18,200
needs to be able to add things to this, this vars.

1047
00:55:18,600 --> 00:55:19,300
You know what I'm saying?

1048
00:55:20,100 --> 00:55:23,500
And I'm trying to think of like probably the best way to do that would

1049
00:55:23,500 --> 00:55:25,400
actually, not quite be this way.

1050
00:55:25,400 --> 00:55:28,000
It would probably be to go something like this, right?

1051
00:55:28,000 --> 00:55:34,900
It would be like, oh, you know, VAR count and debug variable star

1052
00:55:35,500 --> 00:55:40,100
vars, and we'd have a pointer to know, some crazy number, that's more

1053
00:55:40,100 --> 00:55:40,600
than we're ever.

1054
00:55:40,700 --> 00:55:45,000
You want to put in a group so you would start this guy out.

1055
00:55:45,000 --> 00:55:47,200
You would fill out those vars.

1056
00:55:47,300 --> 00:55:51,600
In fact that's already way too big too much it's just too much.

1057
00:55:53,400 --> 00:55:55,300
We'd fill out those vars as we go.

1058
00:55:57,000 --> 00:56:01,500
And then we go ahead and and push them like we when we were done, we

1059
00:56:01,500 --> 00:56:03,700
would go ahead and package them up to put them into the variable

1060
00:56:03,700 --> 00:56:04,300
array, right?

1061
00:56:04,300 --> 00:56:07,300
We just kind of like slot them in there and again like I said, it's

1062
00:56:07,300 --> 00:56:08,200
kind of annoying.

1063
00:56:08,300 --> 00:56:11,400
Like this is a place where I'd probably want to use some kind of an

1064
00:56:11,400 --> 00:56:12,300
expandable.

1065
00:56:12,600 --> 00:56:15,300
Like, I'd rather use some kind of utility class here especially in

1066
00:56:15,300 --> 00:56:16,100
debug code.

1067
00:56:16,800 --> 00:56:17,800
I'm just not sure.

1068
00:56:17,800 --> 00:56:23,000
I actually want to really write one of those that we would then use it

1069
00:56:23,300 --> 00:56:26,400
might be Overkill but we could see, you know, maybe we will write one

1070
00:56:26,400 --> 00:56:26,700
for that.

1071
00:56:27,300 --> 00:56:32,400
It's pretty, you know, it's pretty simple to write obviously but like

1072
00:56:32,400 --> 00:56:33,100
I said, I don't know.

1073
00:56:33,500 --> 00:56:35,900
That's, that's kind of a, that's kind of an open question.

1074
00:56:36,900 --> 00:56:39,900
So anyway, if we were in here we just have like a how many of ours are

1075
00:56:39,900 --> 00:56:40,400
there, right?

1076
00:56:40,400 --> 00:56:46,900
And when we add these things in, we would just kind of add them to to

1077
00:56:46,900 --> 00:56:48,700
the of our slots as we go.

1078
00:56:48,800 --> 00:56:51,700
So we don't really have to do any of this sort of more complicated

1079
00:56:51,700 --> 00:56:52,000
stuff.

1080
00:56:52,000 --> 00:56:54,000
We're you know, we're doing kind of fancy things.

1081
00:56:54,100 --> 00:56:56,700
Really all we're going to do is just add them to this thing here.

1082
00:56:56,800 --> 00:56:57,700
Ear, right?

1083
00:56:57,800 --> 00:56:59,800
So when we call, you know,

1084
00:57:00,000 --> 00:57:02,700
And I suppose we could even have a way that to saying whether we

1085
00:57:02,700 --> 00:57:08,100
wanted to or not but it's really just something like okay whatever the

1086
00:57:08,100 --> 00:57:13,500
context is and I guess we don't quite have a context here when you're

1087
00:57:13,500 --> 00:57:14,700
pushing a variable.

1088
00:57:14,900 --> 00:57:21,100
Yeah I guess you can still push, you can do a debug, add variable like

1089
00:57:21,100 --> 00:57:25,500
that's just straight that will do this and then when you do debug, add

1090
00:57:25,500 --> 00:57:29,300
variable reference, I feel like that's actually it's like I said I

1091
00:57:29,300 --> 00:57:29,800
don't feel like this

1092
00:57:30,000 --> 00:57:30,900
Has ever a thing anymore.

1093
00:57:30,900 --> 00:57:34,300
So I'm just gonna get rid of that this one here again, also not a

1094
00:57:34,300 --> 00:57:34,800
thing.

1095
00:57:35,000 --> 00:57:38,800
When we do debug, add variable with the context, then in the context,

1096
00:57:38,800 --> 00:57:40,200
this is the place where we do it.

1097
00:57:40,200 --> 00:57:43,100
So it calls into debug add variable this way.

1098
00:57:47,000 --> 00:57:47,600
Right?

1099
00:57:48,100 --> 00:57:51,400
And then it would go ahead and say, okay, whatever the context of our

1100
00:57:51,400 --> 00:57:53,700
count is is going to go up, right?

1101
00:57:53,700 --> 00:57:58,100
And we are going to put ourselves into that slot, so you know, the

1102
00:57:58,100 --> 00:58:00,900
context vars of that.

1103
00:58:02,000 --> 00:58:06,200
VAR count is going to be equal to whichever variable we added.

1104
00:58:06,200 --> 00:58:09,500
So now we've got the list of them and that's really all that has to

1105
00:58:09,500 --> 00:58:10,100
happen there.

1106
00:58:10,100 --> 00:58:11,300
So that would be it.

1107
00:58:12,000 --> 00:58:16,400
We would probably want to assert here again that the context of ours

1108
00:58:17,800 --> 00:58:19,000
Sighs can hold it.

1109
00:58:20,600 --> 00:58:21,600
But that's about it.

1110
00:58:23,600 --> 00:58:24,400
Something like that.

1111
00:58:25,700 --> 00:58:29,700
Then when we do this stuff, a drupe internal, I don't know.

1112
00:58:29,800 --> 00:58:33,700
I don't feel like this stuff actually has to happen anymore.

1113
00:58:33,700 --> 00:58:43,700
I don't think it doesn't really super look like you would have to just

1114
00:58:43,700 --> 00:58:45,700
because there really isn't much there.

1115
00:58:45,700 --> 00:58:50,700
I mean, we can we could do a drupe internal here but I don't really

1116
00:58:50,700 --> 00:58:51,400
know.

1117
00:58:51,800 --> 00:58:53,300
Yeah, I don't really know if we

1118
00:58:53,500 --> 00:58:58,900
A half to do any of this stuff anymore because it was really just when

1119
00:58:58,900 --> 00:59:00,200
we do begin variable group.

1120
00:59:00,200 --> 00:59:04,800
It was really, it's really, the end variable group part that matters,

1121
00:59:05,100 --> 00:59:05,700
right?

1122
00:59:05,800 --> 00:59:08,600
So, I think, at least for the moment, I'm going to delete those and

1123
00:59:08,600 --> 00:59:10,200
we'll come back to revisit them later.

1124
00:59:10,200 --> 00:59:12,000
So I think we can just get rid of those.

1125
00:59:12,000 --> 00:59:13,600
Say, you do it doesn't matter.

1126
00:59:15,900 --> 00:59:16,700
And off we go.

1127
00:59:17,000 --> 00:59:19,900
So we've got the bug, add route group, gonna ignore that.

1128
00:59:19,900 --> 00:59:21,500
Debug begin variable group.

1129
00:59:22,000 --> 00:59:25,900
That just goes ahead and adds one of these debug variables.

1130
00:59:25,900 --> 00:59:28,400
And again, these are all these should all just returned to you about

1131
00:59:28,400 --> 00:59:30,800
variables, all of them, right?

1132
00:59:31,600 --> 00:59:33,100
Because they don't do anything else now.

1133
00:59:33,800 --> 00:59:39,200
So now we've got debug, add variable.

1134
00:59:39,700 --> 00:59:44,900
So when we're creating a variable group again, same thing really

1135
00:59:44,900 --> 00:59:45,600
really straightforward.

1136
00:59:45,800 --> 00:59:45,900
Word.

1137
00:59:45,900 --> 00:59:49,100
Now in fact a lot of this code just gets a lot cleaner if we do it

1138
00:59:49,100 --> 00:59:49,500
this way.

1139
00:59:49,500 --> 00:59:52,800
So that seems like a nice thing but I guess we don't really know to

1140
00:59:52,800 --> 00:59:54,700
World we're completely done.

1141
00:59:55,300 --> 00:59:59,800
But we just want to add one of these arrays right like so.

1142
01:00:00,000 --> 01:00:03,000
Maybe I should still have called those groups but think it's nicer to

1143
01:00:03,000 --> 01:00:06,600
change the name it for the moment, just so we can see it and we don't

1144
01:00:06,600 --> 01:00:14,100
have to set anything on those except for just that one see here,

1145
01:00:14,900 --> 01:00:22,600
variable, debug variable except just that one situation where the the

1146
01:00:22,700 --> 01:00:25,000
we need to set the count, right?

1147
01:00:25,700 --> 01:00:26,500
20.

1148
01:00:26,700 --> 01:00:29,000
So we know there's nothing in it, that's about it.

1149
01:00:30,500 --> 01:00:35,700
So yeah, we do debug begin variable group and debug and variable group

1150
01:00:36,800 --> 01:00:38,500
that should that should pretty much do it.

1151
01:00:39,200 --> 01:00:42,300
Although I just think of there's a little something that's not as good

1152
01:00:42,300 --> 01:00:42,700
there.

1153
01:00:43,100 --> 01:00:46,900
But anyway, so debug at variable for pool.

1154
01:00:46,900 --> 01:00:49,800
These should all just now be the exactly the same as they were there.

1155
01:00:49,800 --> 01:00:52,400
Just going to take variables instead like so.

1156
01:00:53,800 --> 01:00:57,800
And they get rid of that sort of tree that whole tree thing, which

1157
01:00:57,800 --> 01:01:00,500
again, I'm kind of feeling good that I decided not to go down that

1158
01:01:00,500 --> 01:01:04,700
route any further because it's just me, I created just too much cruft

1159
01:01:04,700 --> 01:01:05,200
in here.

1160
01:01:05,400 --> 01:01:09,100
You can see there was or we didn't even really have it all doing the

1161
01:01:09,100 --> 01:01:11,700
duplication and it's still which the lot of cruft.

1162
01:01:11,800 --> 01:01:12,400
Right?

1163
01:01:13,600 --> 01:01:16,100
So yeah, so that's good.

1164
01:01:16,500 --> 01:01:22,100
And I think this stuff again.

1165
01:01:22,900 --> 01:01:23,300
Nah,

1166
01:01:23,700 --> 01:01:25,700
Caring about this at all.

1167
01:01:25,800 --> 01:01:27,200
So we're going to get rid of that for now.

1168
01:01:28,700 --> 01:01:29,200
Yeah.

1169
01:01:29,200 --> 01:01:30,400
So that all looks good.

1170
01:01:30,700 --> 01:01:32,000
Let's take a look at that here.

1171
01:01:32,700 --> 01:01:35,500
So this is all vars, vars.

1172
01:01:35,600 --> 01:01:37,600
No more refs just of ours.

1173
01:01:39,400 --> 01:01:40,000
There we go.

1174
01:01:42,100 --> 01:01:42,400
Okay.

1175
01:01:44,200 --> 01:01:46,000
And all these regards as well.

1176
01:01:50,300 --> 01:01:50,900
Nice.

1177
01:01:52,100 --> 01:01:55,600
Okay, and let's see.

1178
01:01:55,600 --> 01:01:57,600
Anything else we got here and Navarro group?

1179
01:01:57,600 --> 01:01:58,900
So yes, at this stuff.

1180
01:02:00,600 --> 01:02:04,300
Again now is actually where the work is going to happen.

1181
01:02:04,500 --> 01:02:07,200
So when you do an end variable group, you're going to have to take,

1182
01:02:07,300 --> 01:02:12,300
essentially off, whatever it was here that you were, you know,

1183
01:02:13,100 --> 01:02:17,400
whatever the debug variables are that had piled up right on there and

1184
01:02:17,400 --> 01:02:18,200
you know, we could do that.

1185
01:02:18,200 --> 01:02:22,000
The thing we could do here is do we could do this in a fairly cheesy

1186
01:02:22,000 --> 01:02:24,600
way and make it so that we actually still do.

1187
01:02:25,000 --> 01:02:26,400
Do it in the group itself.

1188
01:02:26,400 --> 01:02:27,700
You know, something like this.

1189
01:02:28,400 --> 01:02:29,900
And the way that you do that

1190
01:02:30,700 --> 01:02:33,700
again, I'm not just not sure if this is a good way to go or not, but

1191
01:02:33,700 --> 01:02:38,500
the way that you do that is inside when you do the debug begin group,

1192
01:02:41,600 --> 01:02:47,300
Like so oops, that's not the one I met in here.

1193
01:02:47,700 --> 01:02:49,500
You'd actually allocate

1194
01:02:51,100 --> 01:02:52,300
Some amount, right?

1195
01:02:52,300 --> 01:02:56,700
You'd allocate some, you know, some some larger than you need amount.

1196
01:02:56,700 --> 01:02:59,600
And as you created those groups, they would just be fatty

1197
01:03:00,300 --> 01:03:02,600
And again like I said I really just don't know what the right thing is

1198
01:03:02,600 --> 01:03:03,300
to do here.

1199
01:03:03,500 --> 01:03:07,100
It's one of those things where pretty much because you're just doing a

1200
01:03:07,100 --> 01:03:09,900
sort of general like editor style, Behavior thing.

1201
01:03:10,400 --> 01:03:14,100
Usually these are the cards that things where you just want more of an

1202
01:03:14,100 --> 01:03:16,800
anything-goes attitude, right?

1203
01:03:16,800 --> 01:03:19,300
You kind of want to just be like I don't know I allocate the stuff and

1204
01:03:19,300 --> 01:03:22,300
I freed the stuff and I don't really pay too much attention to it

1205
01:03:22,300 --> 01:03:27,200
because I don't have any actual knowledge of the usage pattern, right?

1206
01:03:27,200 --> 01:03:29,900
I don't know what the users going to do with it most of time in.

1207
01:03:30,100 --> 01:03:32,900
As we know we're like okay you know, we know that this is going to

1208
01:03:32,900 --> 01:03:34,300
happen, we know that that's going to happen.

1209
01:03:34,600 --> 01:03:36,900
So you don't tend to want to do stuff where you're just going to be

1210
01:03:36,900 --> 01:03:40,100
like, okay, let me allocate this willy-nilly and and not really care

1211
01:03:40,100 --> 01:03:41,200
what's going to happen to it.

1212
01:03:41,200 --> 01:03:42,600
Because usually, you actually do know.

1213
01:03:42,600 --> 01:03:46,000
And then you end up with a lot of stuff that's not necessary, right?

1214
01:03:46,600 --> 01:03:49,600
But in this case, it kinda does feel like like, maybe you, you know,

1215
01:03:51,300 --> 01:03:53,700
This is the sort of place where I would usually just say it's fine,

1216
01:03:53,900 --> 01:03:54,300
right?

1217
01:03:54,400 --> 01:03:58,100
Like, I don't I'm not worried about it and it's only it's again like

1218
01:03:58,100 --> 01:04:00,700
it's it's only a debug code for the game.

1219
01:04:00,700 --> 01:04:03,100
So don't care about their and also, I think it's for editor code.

1220
01:04:03,100 --> 01:04:04,900
I'm like it's perfectly appropriate.

1221
01:04:04,900 --> 01:04:08,000
I think to say, you don't know what the users going to want to do to

1222
01:04:08,000 --> 01:04:09,700
it, so it doesn't really matter.

1223
01:04:10,600 --> 01:04:14,300
You're not like creating some kind of Problem by it completely

1224
01:04:14,300 --> 01:04:15,800
ignoring how it might be allocated

1225
01:04:17,500 --> 01:04:19,100
All right, I think we're basically out of time though.

1226
01:04:19,100 --> 01:04:22,100
So I think I may pause this temporarily.

1227
01:04:26,300 --> 01:04:30,800
And say that I will just go ahead and turn off and made internal.

1228
01:04:32,300 --> 01:04:35,300
And that way the game is still in a compelling State and nobody is

1229
01:04:35,300 --> 01:04:39,600
broken if they're trying to play with it, but I can finish up tomorrow

1230
01:04:39,700 --> 01:04:44,000
doing that Port over to the new way of handling the variable stuff and

1231
01:04:44,000 --> 01:04:47,800
that'll be nice because then we'll be able to actually kind of do a

1232
01:04:47,800 --> 01:04:52,200
little bit more of a reasonable kind of organization of things and

1233
01:04:52,400 --> 01:04:55,000
they'll be able to store their parameters separately which is what I

1234
01:04:55,000 --> 01:04:55,300
wanted.

1235
01:04:55,300 --> 01:04:55,700
So you can have

1236
01:04:55,800 --> 01:04:59,200
Like more tear off stuff, but I'll go to a brief Q&A here, just in

1237
01:04:59,200 --> 01:04:59,500
case.

1238
01:04:59,500 --> 01:05:00,700
Anyone has any questions right now?

1239
01:05:00,700 --> 01:05:03,700
We're not done yet, so it's probably not really useful to ask a

1240
01:05:03,700 --> 01:05:04,500
question quite yet.

1241
01:05:04,500 --> 01:05:08,800
But if you do have one, I do actually have Linux has been working long

1242
01:05:08,800 --> 01:05:12,200
enough that I would actually be able to see it today, which is

1243
01:05:12,200 --> 01:05:13,000
unusual.

1244
01:05:14,700 --> 01:05:16,500
So, I will actually be able to see it today.

1245
01:05:16,900 --> 01:05:19,200
And so if you do have a question, you can put a colon in front of it

1246
01:05:19,200 --> 01:05:20,300
and I will be able to see it.

1247
01:05:26,000 --> 01:05:28,500
Insofar as now that the amount of debug code is being larger, when you

1248
01:05:28,500 --> 01:05:31,000
create a debug debug system, to debug the debug code?

1249
01:05:32,400 --> 01:05:35,000
Well, the debug code is capable of devouring itself actually.

1250
01:05:35,600 --> 01:05:36,900
So I think we already have

1251
01:05:38,000 --> 01:05:38,600
Right.

1252
01:05:39,900 --> 01:05:41,200
in fact, you can see

1253
01:05:42,700 --> 01:05:43,700
this whole time.

1254
01:05:44,300 --> 01:05:47,300
I don't know if you remember, but we have been timing, the debug

1255
01:05:47,300 --> 01:05:50,500
system with the debug system which is kind of nice.

1256
01:06:05,100 --> 01:06:05,500
America.

1257
01:06:05,500 --> 01:06:08,600
Nobody is this the link you were looking for earlier for Martin Cohen?

1258
01:06:08,800 --> 01:06:09,800
Let's take a look.

1259
01:06:10,300 --> 01:06:11,300
Let me see.

1260
01:06:16,000 --> 01:06:17,700
Let's take a look.

1261
01:06:21,700 --> 01:06:23,000
Okay, so

1262
01:06:26,400 --> 01:06:28,500
yes, I think this is

1263
01:06:29,500 --> 01:06:30,800
or well.

1264
01:06:33,700 --> 01:06:37,200
It may not quite be the one.

1265
01:06:38,900 --> 01:06:42,100
In fact you know what no it's I don't think it is necessarily.

1266
01:06:42,100 --> 01:06:45,700
Well, maybe it is so II implementing.

1267
01:06:45,700 --> 01:06:48,900
The ALU looks like the one I was thinking of

1268
01:06:51,700 --> 01:06:56,000
So yeah I think that is or if it's not it's pretty darn close.

1269
01:06:56,000 --> 01:07:01,400
It's another similar lecture by him so probably probably good enough

1270
01:07:01,400 --> 01:07:02,000
either way

1271
01:07:03,500 --> 01:07:04,700
Thank you for finding that.

1272
01:07:07,800 --> 01:07:10,300
Gary Johansen, what do you think about the use of prefetch catch

1273
01:07:10,300 --> 01:07:10,900
instructions?

1274
01:07:11,300 --> 01:07:12,400
Are they a viable option?

1275
01:07:12,400 --> 01:07:15,000
For general-purpose programming to get maximum performance?

1276
01:07:15,700 --> 01:07:19,600
Will a precache prefetch instruction is exactly what it sounds like.

1277
01:07:19,800 --> 01:07:24,400
It's just a way of telling the CPU ahead of time what memory you're

1278
01:07:24,400 --> 01:07:25,200
going to touch.

1279
01:07:26,300 --> 01:07:29,600
And so if that is a problem, that you have in a particular piece of

1280
01:07:29,600 --> 01:07:35,600
code, meaning you're about to load something from memory and you will

1281
01:07:35,600 --> 01:07:36,300
stall.

1282
01:07:37,600 --> 01:07:40,800
If you can, if you're in like a loop or something, if you can go put

1283
01:07:40,800 --> 01:07:44,300
the prefetch, you know, many instructions back, 300 Cycles back

1284
01:07:44,300 --> 01:07:45,000
somehow.

1285
01:07:45,100 --> 01:07:48,100
So the processor has plenty of Runway to go, oh, I should go fetch

1286
01:07:48,100 --> 01:07:48,700
that memory.

1287
01:07:49,200 --> 01:07:52,800
Then they were quite well, they don't work.

1288
01:07:52,800 --> 01:07:56,400
If you don't have the Insight ahead of time into what member you're

1289
01:07:56,400 --> 01:07:57,800
going to touch, right?

1290
01:07:57,900 --> 01:08:00,200
So it's all about whether or not, you know, what member you'll touch

1291
01:08:00,200 --> 01:08:01,400
ahead of time or if you don't

1292
01:08:02,800 --> 01:08:03,600
That's that's really where.

1293
01:08:03,600 --> 01:08:06,800
Prefetch instructions, help you and my new prefetch instructions.

1294
01:08:06,800 --> 01:08:09,500
Obviously, also only help you if you're not running at memory

1295
01:08:09,500 --> 01:08:11,900
bandwidth but most of the time you're not, but if you're running it

1296
01:08:11,900 --> 01:08:12,700
can full memory bandwidth.

1297
01:08:12,700 --> 01:08:15,000
That a federal judge doesn't do anything because you're already at

1298
01:08:15,000 --> 01:08:15,600
maximum memory.

1299
01:08:15,600 --> 01:08:18,000
Throughput, there's nothing you can do, it's not the cast so it's only

1300
01:08:18,000 --> 01:08:20,600
if the it's only if you're actually strolling on the cash and the

1301
01:08:20,600 --> 01:08:23,899
memory is not fully bandwidth is not fully pipelined that that will

1302
01:08:23,899 --> 01:08:24,500
help you.

1303
01:08:28,700 --> 01:08:31,899
How to rinse after the two-year period, will we be able to mod the

1304
01:08:31,899 --> 01:08:32,399
game?

1305
01:08:34,399 --> 01:08:35,600
Could you be more specific?

1306
01:08:35,700 --> 01:08:36,600
I'm not sure what you mean.

1307
01:08:37,200 --> 01:08:37,899
Captain craft.

1308
01:08:37,899 --> 01:08:39,200
Does the architecture of your target system?

1309
01:08:39,200 --> 01:08:41,399
Have a big effect on how you design your debug system?

1310
01:08:41,700 --> 01:08:42,700
No, it does not.

1311
01:08:44,800 --> 01:08:47,700
Typically, the debug system is relatively the same, no matter what

1312
01:08:47,700 --> 01:08:51,200
sometimes you have to do, like if the debug platform, well there is

1313
01:08:51,200 --> 01:08:57,000
one thing, if the target system that you're running on is like really

1314
01:08:57,000 --> 01:08:57,500
lame.

1315
01:08:58,000 --> 01:08:59,800
Like let's say it's like, you know,

1316
01:09:00,600 --> 01:09:02,200
Uh, Nintendo DS or something.

1317
01:09:02,600 --> 01:09:05,700
Then you're not going to have like debug overlays probably on that

1318
01:09:05,700 --> 01:09:09,500
because you don't want to like use up any of the system resources.

1319
01:09:09,600 --> 01:09:12,800
So you just be trying to do something that like, spams out to like, a

1320
01:09:12,800 --> 01:09:16,399
debug port and is captured on a different machine or something and

1321
01:09:16,399 --> 01:09:18,500
that's where you display all the debug stuff, right?

1322
01:09:18,899 --> 01:09:23,800
So like sometimes you might make some decisions about that but on a

1323
01:09:23,800 --> 01:09:27,899
full powered machine of some kind you're typically just fine, right?

1324
01:09:27,899 --> 01:09:30,000
So sometimes I guess I would say is if the

1325
01:09:30,399 --> 01:09:34,600
Platformers like a console or a weak system, you may design your debug

1326
01:09:34,600 --> 01:09:37,300
system such that all the debugging actually happens on a different

1327
01:09:37,300 --> 01:09:37,899
machine.

1328
01:09:38,100 --> 01:09:41,399
And you know, you get that idea, right.

1329
01:09:51,800 --> 01:09:55,300
Would be it, an idea to pass built up at a parameter which would use

1330
01:09:55,300 --> 01:09:59,000
to switch off turns on and off on the different build units.

1331
01:09:59,000 --> 01:10:02,800
Like if lb % 1 equals opted to do this, otherwise do that.

1332
01:10:03,600 --> 01:10:04,800
Yeah, you can do that.

1333
01:10:05,900 --> 01:10:09,400
I don't really have much of a use for it because I build in the side

1334
01:10:09,400 --> 01:10:09,900
of the editor.

1335
01:10:09,900 --> 01:10:12,700
And so I want to be able to select set it and then every time I build

1336
01:10:12,700 --> 01:10:15,400
it just use whatever my current setting is, so I don't really want to

1337
01:10:15,400 --> 01:10:15,800
have it.

1338
01:10:15,800 --> 01:10:16,800
Something I pass

1339
01:10:17,800 --> 01:10:21,400
But, you know, if you want to do that, you totally could or, you know,

1340
01:10:21,400 --> 01:10:21,900
we could hook up.

1341
01:10:21,900 --> 01:10:24,800
So emacs set the variable and then pass it or something, but I'm

1342
01:10:24,800 --> 01:10:27,200
probably not, you know, certainly do that.

1343
01:10:29,800 --> 01:10:31,500
What do you think about no man's Sky?

1344
01:10:32,500 --> 01:10:34,600
I have not played no man's sky.

1345
01:10:39,200 --> 01:10:41,200
I can't even think about how it works.

1346
01:10:41,200 --> 01:10:44,200
Now, will I get some idea after learning from you?

1347
01:10:45,100 --> 01:10:45,600
No, man's.

1348
01:10:45,600 --> 01:10:47,800
Sky is pretty straightforward, right?

1349
01:10:47,800 --> 01:10:51,200
It's a procedural World Generation just in time for the region is the

1350
01:10:51,200 --> 01:10:52,600
same as Minecraft in that sense.

1351
01:10:52,600 --> 01:10:53,200
Right?

1352
01:10:53,600 --> 01:10:58,500
You go somewhere and it basically like issues a, you know, it's sort

1353
01:10:58,500 --> 01:11:01,200
of like I need this region of the world at this level of detail and it

1354
01:11:01,200 --> 01:11:01,800
comes back.

1355
01:11:01,800 --> 01:11:03,800
I mean, I shouldn't say like Mike was my cat, doesn't have a level of

1356
01:11:03,800 --> 01:11:07,300
detail, but and then it's like, okay, I'll generate that, right?

1357
01:11:10,600 --> 01:11:14,700
You know, it's it's not magic how that's done, we've done those sorts

1358
01:11:14,700 --> 01:11:15,800
of things before.

1359
01:11:16,000 --> 01:11:20,000
It's more, just like the system power is at the point now where they

1360
01:11:20,000 --> 01:11:24,100
can generate things at very high levels of detail, which is kind of

1361
01:11:24,100 --> 01:11:25,000
great, right?

1362
01:11:28,600 --> 01:11:29,200
Kind of rinse.

1363
01:11:29,200 --> 01:11:32,300
I mean after release the source code will, will we be able to create

1364
01:11:32,300 --> 01:11:33,800
our own bosses worlds, Etc?

1365
01:11:33,800 --> 01:11:37,900
Well, I mean, obviously if you have the source code you can do

1366
01:11:37,900 --> 01:11:39,200
anything you want, right?

1367
01:11:40,700 --> 01:11:44,100
I mean there's no there's no stopping you with the source code you can

1368
01:11:44,500 --> 01:11:47,400
add anything you can that you're capable our programming.

1369
01:11:49,200 --> 01:11:50,200
Stegosaurus.

1370
01:11:50,200 --> 01:11:51,200
Will you be crying to game?

1371
01:11:51,200 --> 01:11:52,400
Civic coding soon?

1372
01:11:52,600 --> 01:11:53,300
I don't know.

1373
01:11:54,500 --> 01:11:59,300
One of the things I want to also underscore is I

1374
01:12:00,000 --> 01:12:04,400
Make sure it's not really supposed to be about showing a particular

1375
01:12:04,600 --> 01:12:05,700
specific thing, right?

1376
01:12:05,700 --> 01:12:10,000
He made pure is a programming educational stream, so I don't super

1377
01:12:10,000 --> 01:12:13,900
like people who are impatient about wanting to see uh particular thing

1378
01:12:13,900 --> 01:12:17,000
coding because that just makes it so that we don't spend enough time

1379
01:12:17,100 --> 01:12:19,100
on various things that we're trying to learn.

1380
01:12:20,000 --> 01:12:21,900
So I'm never going to rush through something.

1381
01:12:23,400 --> 01:12:25,800
And since this is all video-on-demand, you know, if it's something

1382
01:12:25,800 --> 01:12:29,400
that you're not interested in, you can always just tune out and then

1383
01:12:29,400 --> 01:12:32,000
tune back in later when we're doing the thing that you are interested

1384
01:12:32,000 --> 01:12:35,800
in, but gameplay coding is actually some of the most boring code that

1385
01:12:35,800 --> 01:12:37,700
there is, you know.

1386
01:12:37,700 --> 01:12:42,300
It it's really really really basic and doesn't really often have very

1387
01:12:42,300 --> 01:12:43,100
much to do.

1388
01:12:43,800 --> 01:12:45,000
It's really rudimentary.

1389
01:12:45,000 --> 01:12:46,700
It's like scripting a lot of times, right?

1390
01:12:48,600 --> 01:12:51,700
So if anything, the more interesting code is stuff like this which is

1391
01:12:51,700 --> 01:12:57,200
actually tricky and difficult to do so, you know, getting a UI system

1392
01:12:57,300 --> 01:13:02,300
that doesn't take, you know, a hundred thousand lines of code and 50

1393
01:13:02,300 --> 01:13:06,000
hours to build like cutie does or something like this is actually the

1394
01:13:06,000 --> 01:13:06,800
interesting code.

1395
01:13:06,800 --> 01:13:08,800
That's the code that's actually hard in the kind of code that you want

1396
01:13:08,800 --> 01:13:09,800
to learn how to do gameplay.

1397
01:13:09,800 --> 01:13:11,500
Coding is really, really dumb.

1398
01:13:11,500 --> 01:13:14,700
It's like, oh, I moved an object like, you know, I set its position

1399
01:13:14,700 --> 01:13:17,600
somewhere or you know, I had it spin around or

1400
01:13:17,800 --> 01:13:18,100
Right?

1401
01:13:18,100 --> 01:13:22,400
It's really straightforward and it doesn't really do anything all

1402
01:13:22,400 --> 01:13:23,500
that, particularly interesting.

1403
01:13:24,300 --> 01:13:27,500
So as far as that's concerned, like I don't, I don't particularly feel

1404
01:13:27,500 --> 01:13:32,900
any specific need to rush to get to gameplay coding because it's just

1405
01:13:32,900 --> 01:13:35,700
not, it's just not as interesting as a lot of the other pieces of

1406
01:13:35,700 --> 01:13:36,700
code, right?

1407
01:13:42,500 --> 01:13:45,800
Could something like a Raspberry Pi or other arm desktop, PC run,

1408
01:13:45,800 --> 01:13:48,600
handmade hear, well enough and is that the kind of system where you

1409
01:13:48,600 --> 01:13:50,600
would want to do the debugging on a separate machine?

1410
01:13:51,800 --> 01:13:54,900
I think that probably a Raspberry Pi could run handmade hero.

1411
01:13:54,900 --> 01:13:55,300
Well enough.

1412
01:13:55,300 --> 01:13:55,700
Yes.

1413
01:13:55,700 --> 01:13:59,200
But I think we would would definitely well

1414
01:14:00,600 --> 01:14:01,200
I don't know.

1415
01:14:01,800 --> 01:14:04,500
The new one has a much better processor than the original one did

1416
01:14:04,500 --> 01:14:05,700
that, the Raspberry Pi 2.

1417
01:14:06,000 --> 01:14:08,000
So I don't know, on the Raspberry Pi 1.

1418
01:14:08,000 --> 01:14:11,000
What I was going to say is you definitely couldn't run handmade hero

1419
01:14:11,300 --> 01:14:13,200
rendering and software like we're doing now.

1420
01:14:13,900 --> 01:14:18,300
You would you would have to use the graphics subsystem on it, right?

1421
01:14:18,800 --> 01:14:22,000
Because it's just doesn't have the kind of power that Intel CPU does,

1422
01:14:22,000 --> 01:14:22,300
right?

1423
01:14:22,300 --> 01:14:24,600
But the new one is a lot better.

1424
01:14:24,600 --> 01:14:28,600
It's a fork or and you know maybe maybe you could maybe you wouldn't

1425
01:14:28,600 --> 01:14:30,200
do 1080p but

1426
01:14:30,400 --> 01:14:31,100
You could so I don't know.

1427
01:14:31,100 --> 01:14:32,300
So I don't want to speak too soon.

1428
01:14:32,400 --> 01:14:33,900
I've never played with a Raspberry Pi 2.

1429
01:14:33,900 --> 01:14:38,000
I don't really know what it's capable of it so I don't want to sort of

1430
01:14:38,000 --> 01:14:40,400
like pesum eyes that right?

1431
01:14:41,800 --> 01:14:42,300
But

1432
01:14:48,100 --> 01:14:48,500
Coming in.

1433
01:14:48,500 --> 01:14:51,400
I meant for usage inside the game so you could switch off position on

1434
01:14:51,400 --> 01:14:52,600
and off from the debug menu.

1435
01:14:53,500 --> 01:14:55,100
Yes, we could totally do that.

1436
01:14:55,300 --> 01:14:59,700
That would be really easy actually, because we could I think what we

1437
01:14:59,700 --> 01:14:59,900
want,

1438
01:15:00,000 --> 01:15:03,500
Do is I think we want to change it so that we use the pragma optimize

1439
01:15:03,500 --> 01:15:07,600
trick because then we could just make this be a standard variable

1440
01:15:07,600 --> 01:15:12,200
that's in the our variable listing file so we should probably do that.

1441
01:15:23,600 --> 01:15:24,800
Let's see.

1442
01:15:26,800 --> 01:15:30,800
Do you think it would be totes baller to make a gooey visual language

1443
01:15:30,800 --> 01:15:31,200
for games?

1444
01:15:31,200 --> 01:15:36,900
Shifting like, what unreal has um you know, I've never been a fan of

1445
01:15:36,900 --> 01:15:37,700
visual scripting.

1446
01:15:39,800 --> 01:15:43,500
I don't super know what the point of it is because I've always found

1447
01:15:43,500 --> 01:15:44,200
it to be.

1448
01:15:44,500 --> 01:15:48,000
You just end up with this tons of nodes in this giant mess and like

1449
01:15:48,200 --> 01:15:49,400
what did that turn out to be 0.

1450
01:15:49,400 --> 01:15:51,900
It's like actually just really only 11 lines of code would have done

1451
01:15:51,900 --> 01:15:53,100
that or something, right?

1452
01:15:55,000 --> 01:15:57,900
so, you know, you get something that's like

1453
01:15:59,800 --> 01:16:02,400
This is what visual scripting feels like to me and this is probably

1454
01:16:02,400 --> 01:16:06,500
because I'm a programmer but this is what it feels like, right?

1455
01:16:06,800 --> 01:16:09,600
So if you're at Day 2, 01 here we go.

1456
01:16:11,000 --> 01:16:12,400
Actually, I guess that's not the heir to a 1.

1457
01:16:12,400 --> 01:16:15,900
This is not a on-topic thing, visual scripting usually feels like this

1458
01:16:15,900 --> 01:16:19,600
to me, it's like oh in my scripting language, you know, or you notice

1459
01:16:19,600 --> 01:16:23,400
the text language, I wanted to write something like, you know, Foo

1460
01:16:23,400 --> 01:16:29,300
Arrow Health, you know, two times.

1461
01:16:29,700 --> 01:16:37,300
At plus Foo, you know, aim amount or something.

1462
01:16:40,100 --> 01:16:42,300
Over, you know, I don't know.

1463
01:16:42,300 --> 01:16:47,000
I put it in parentheses and I wrote like / 5, you know?

1464
01:16:49,100 --> 01:16:52,500
And I'm going to set that to be like, whatever food is like, you know,

1465
01:16:53,100 --> 01:16:55,800
gold is or something, right?

1466
01:16:55,900 --> 01:16:56,200
Okay.

1467
01:16:56,300 --> 01:17:00,100
I wrote out something like that and it's one line that's really easy

1468
01:17:00,100 --> 01:17:03,100
to understand and I can comment right above it and I can say like what

1469
01:17:03,100 --> 01:17:07,400
it does if I wanted to in the script in visual quote-unquote scripting

1470
01:17:07,400 --> 01:17:09,500
language the stuff ends up being stuff like oh.

1471
01:17:09,500 --> 01:17:10,200
Okay.

1472
01:17:10,400 --> 01:17:15,100
Like I had to make a driver node with like a 2 in it and then I had

1473
01:17:15,100 --> 01:17:18,700
like to make like some kind of like you know, the

1474
01:17:19,200 --> 01:17:23,400
I had to pinfu on here and he had a ton of stuff lift listed.

1475
01:17:23,400 --> 01:17:25,300
It was like all like that stuff, right?

1476
01:17:25,500 --> 01:17:27,100
And then I had to like pipe it.

1477
01:17:27,100 --> 01:17:31,200
So I like grab this guy and then I made like a note here that was like

1478
01:17:31,200 --> 01:17:35,900
a times node and like the input came from these two things, you know

1479
01:17:36,200 --> 01:17:39,900
and then like the output of that went into like a plus node or

1480
01:17:39,900 --> 01:17:43,900
something that had two things, you know, when in there and then the

1481
01:17:43,900 --> 01:17:47,800
other one came out here and it was like the arm, the aim amount which

1482
01:17:47,800 --> 01:17:48,700
was this other thing.

1483
01:17:48,900 --> 01:17:54,400
That was like down here you know and then I got to divide it by 5.

1484
01:17:54,400 --> 01:17:57,000
So then there's like another driver node here.

1485
01:17:57,000 --> 01:17:59,400
That's like the 5 and then there's the

1486
01:18:00,300 --> 01:18:03,800
Node and it's like, oh my God, right?

1487
01:18:03,900 --> 01:18:06,800
And all of a sudden, you're like, okay, this one line of code that's

1488
01:18:06,800 --> 01:18:07,500
trivial for anyone.

1489
01:18:07,500 --> 01:18:13,800
Understand is this and what, in God's name is that, you know, so I

1490
01:18:13,800 --> 01:18:15,600
can't stand visual scripting languages.

1491
01:18:15,600 --> 01:18:18,300
I feel like they're really driving me nuts.

1492
01:18:20,900 --> 01:18:25,100
But I don't know like maybe I'm missing the glory of it or something.

1493
01:18:35,700 --> 01:18:36,200
Quarter on.

1494
01:18:36,200 --> 01:18:38,800
Couldn't you call it just the last frame, every frame instead of doing

1495
01:18:38,800 --> 01:18:39,900
all of them in chunks.

1496
01:18:40,200 --> 01:18:40,600
Yes.

1497
01:18:40,600 --> 01:18:44,500
So the problem the reason that we can't do that right now because that

1498
01:18:44,500 --> 01:18:46,700
actually is basically what we're doing right now.

1499
01:18:48,200 --> 01:18:53,700
The reason though that we can't just keep doing that because every

1500
01:18:53,700 --> 01:18:57,800
frame we only process the latest data but eventually we have to reset

1501
01:18:57,800 --> 01:18:59,900
and the reason for that is we don't have a rolling buffer.

1502
01:19:00,100 --> 01:19:04,200
So eventually we run out of space to write our data into and we have

1503
01:19:04,200 --> 01:19:04,800
to like clear

1504
01:19:05,400 --> 01:19:09,100
And then we have to like start all over again to like grab all the old

1505
01:19:09,100 --> 01:19:09,600
data.

1506
01:19:10,200 --> 01:19:13,100
So it's really just a question of having a circular buffer and then

1507
01:19:13,100 --> 01:19:15,600
like the code already works incrementally, it's just that would get

1508
01:19:15,600 --> 01:19:18,200
rid of that one time where we like rap, right?

1509
01:19:20,100 --> 01:19:20,800
so, that's

1510
01:19:52,700 --> 01:19:55,400
I think we're done with cues.

1511
01:19:56,900 --> 01:19:58,000
It looks like to me.

1512
01:20:00,900 --> 01:20:01,600
I think so.

1513
01:20:13,200 --> 01:20:13,900
Looks like it.

1514
01:20:14,200 --> 01:20:14,900
All right.

1515
01:20:23,300 --> 01:20:24,500
I'ma close this down.

1516
01:20:29,100 --> 01:20:30,900
All right, thank you, everyone for joining me for another episode of

1517
01:20:30,900 --> 01:20:31,400
handmade hero.

1518
01:20:31,400 --> 01:20:32,500
It's been a pleasure coding with you.

1519
01:20:32,500 --> 01:20:36,500
As always, if you would like to follow along at home, you can always

1520
01:20:36,500 --> 01:20:40,100
pre-order the game and it comes to the source code even today when we

1521
01:20:40,100 --> 01:20:44,800
are not done with the game, you can go ahead and play around that at

1522
01:20:44,800 --> 01:20:47,400
home or do experiments with it or whatever you want.

1523
01:20:47,700 --> 01:20:50,000
We also have a patreon page, you can subscribe if you want support the

1524
01:20:50,000 --> 01:20:52,900
video series and a forum site where you can go, if you want to ask

1525
01:20:52,900 --> 01:20:57,700
questions or do anything like view old episodes or with annotations

1526
01:20:57,700 --> 01:20:58,200
stuff like that.

1527
01:20:58,300 --> 01:20:59,900
that we also have a tweetbot between schedule,

1528
01:21:00,000 --> 01:21:04,800
I could stream live and we will be back here tomorrow for the last

1529
01:21:04,800 --> 01:21:05,300
stream of the week.

1530
01:21:05,300 --> 01:21:07,000
Actually, because I'm off on Friday.

1531
01:21:07,000 --> 01:21:08,900
I will not be around.

1532
01:21:08,900 --> 01:21:12,400
I have to catch a flight which is right during streaming time.

1533
01:21:12,400 --> 01:21:15,000
So I won't be able to stream but then we'll be back the following

1534
01:21:15,000 --> 01:21:15,500
Monday.

1535
01:21:16,700 --> 01:21:19,200
So yeah if you want to know the schedule you always check the Tweet

1536
01:21:19,200 --> 01:21:20,300
Bop but it'll be 5, p.m.

1537
01:21:20,300 --> 01:21:21,600
Pacific Standard time tomorrow.

1538
01:21:21,600 --> 01:21:22,800
So daylight time tomorrow.

1539
01:21:23,600 --> 01:21:24,900
So I hope you'll come back and join me for that.

1540
01:21:24,900 --> 01:21:27,400
We have a bunch of work to do to kind of clean up the way we were

1541
01:21:27,400 --> 01:21:29,800
doing those hierarchy things so that I can get us.

1542
01:21:30,000 --> 01:21:33,000
System that allows us to do kind of more ridiculous stuff with placing

1543
01:21:33,000 --> 01:21:35,500
things around the screen and getting different variables and that sort

1544
01:21:35,500 --> 01:21:36,000
of stuff.

1545
01:21:36,700 --> 01:21:40,500
So, yeah, we're getting close on having the debug system to be more

1546
01:21:40,500 --> 01:21:41,100
where we want to be.

1547
01:21:41,100 --> 01:21:43,500
But like I said, it's a little few more days left in that for sure.

1548
01:21:44,500 --> 01:21:46,700
And that is a pretty big undertaking, but it's basically writing into

1549
01:21:46,700 --> 01:21:47,600
our GUI system, right?

1550
01:21:47,600 --> 01:21:48,600
You have to write the whole thing.

1551
01:21:48,600 --> 01:21:51,200
We had to write the whole debug log system and write the whole gooey.

1552
01:21:51,500 --> 01:21:54,900
It's a pretty big undertaking and that's generally true.

1553
01:21:55,100 --> 01:21:56,900
It is definitely the sort of thing that you can reuse, though.

1554
01:21:56,900 --> 01:21:59,400
Like if you notice the way that we've been writing it, there really

1555
01:21:59,400 --> 01:21:59,900
isn't

1556
01:22:00,100 --> 01:22:01,400
Handmade hero specific about it.

1557
01:22:01,400 --> 01:22:04,200
You could drop that debug code, pretty much directly anything else.

1558
01:22:04,400 --> 01:22:09,400
And the primary thing that's, did, you know, prevents you from

1559
01:22:09,400 --> 01:22:11,100
literally just reusing the code, exactly.

1560
01:22:11,100 --> 01:22:13,800
As it is, is just that one part where it has to interface with the

1561
01:22:13,800 --> 01:22:16,400
rendering, because you do have to go, like, okay, well, you know,

1562
01:22:16,400 --> 01:22:18,700
different renderers would have different ways in which to do except

1563
01:22:18,700 --> 01:22:20,200
math, but that's really it.

1564
01:22:20,400 --> 01:22:21,500
So that's kind of a nice thing to.

1565
01:22:21,500 --> 01:22:23,800
It means that once you build one, you can use it on all your products.

1566
01:22:23,800 --> 01:22:27,900
You don't have to rewrite it every time because it just doesn't have a

1567
01:22:27,900 --> 01:22:29,800
whole lot of specific stuff.

1568
01:22:30,300 --> 01:22:30,600
In it.

1569
01:22:30,600 --> 01:22:34,900
It's not like you know oh this piece of the code work this way because

1570
01:22:34,900 --> 01:22:37,800
handmade hero work that way or you know that sort of thing there just

1571
01:22:37,800 --> 01:22:38,900
isn't that much of it.

1572
01:22:39,700 --> 01:22:41,000
So that's kind of a nice thing as well.

1573
01:22:41,000 --> 01:22:43,900
So even though it is a bit of a Time investment to make one of these,

1574
01:22:43,900 --> 01:22:48,000
once you make one, you can reuse them as opposed to maybe certain

1575
01:22:48,000 --> 01:22:50,500
other aspects of the game where you're like.

1576
01:22:50,500 --> 01:22:54,500
Okay this is kind of very very tied to the game itself and could not

1577
01:22:54,500 --> 01:22:58,000
really be leveraged, you know, for some other project that I was doing

1578
01:22:58,000 --> 01:22:58,800
or that sort of thing.

1579
01:22:59,200 --> 01:22:59,800
So that's good too.

1580
01:23:00,600 --> 01:23:05,900
Anyway, I hope you guys have a good evening and until tomorrow have

1581
01:23:05,900 --> 01:23:06,600
fun programming.

1582
01:23:06,700 --> 01:23:07,800
I'll see you guys on the internet.

1583
01:23:07,800 --> 01:23:08,600
Take these everyone

