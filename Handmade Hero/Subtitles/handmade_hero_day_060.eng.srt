1
00:00:01,500 --> 00:00:02,000
Okay.

2
00:00:03,100 --> 00:00:06,100
Hello everyone, and welcome to handmade hero.

3
00:00:06,300 --> 00:00:09,700
The show where we code entire game live on Twitch know libraries.

4
00:00:09,700 --> 00:00:14,100
No engine, just our own little typing fingers typing away.

5
00:00:14,900 --> 00:00:18,400
We are in the process right now of figuring out how we want our engine

6
00:00:18,400 --> 00:00:19,100
to work.

7
00:00:19,900 --> 00:00:21,900
And we've done a bunch of work on that already.

8
00:00:21,900 --> 00:00:24,400
And we have a little bit more that we want to do right now.

9
00:00:24,400 --> 00:00:28,500
We're trying to do essentially, decide how we want our entity system

10
00:00:28,500 --> 00:00:31,100
to work, how we want to process entities, how

11
00:00:31,300 --> 00:00:33,300
Want to give them attributes and that sort of thing.

12
00:00:33,600 --> 00:00:35,500
And we only just started on that yesterday.

13
00:00:36,700 --> 00:00:38,300
So we're not very far into it.

14
00:00:38,500 --> 00:00:41,500
We're sort of just at the point where we're writing some simple code

15
00:00:41,500 --> 00:00:45,300
that you know, shows how an entity might behave things like a familiar

16
00:00:45,300 --> 00:00:47,500
that follows you around, or a monster that attacks you.

17
00:00:47,900 --> 00:00:51,900
So we can write some of those very simplistically and see the sorts of

18
00:00:51,900 --> 00:00:55,000
things that the engine is going to have to provide for us when it's

19
00:00:55,000 --> 00:00:59,400
actually in place in order for us to make good, you know, good

20
00:00:59,400 --> 00:01:02,000
gameplay, good entities, that respond to the player, the way that we

21
00:01:02,000 --> 00:01:05,400
want them to without it, causing a lot of extra complexity or

22
00:01:05,400 --> 00:01:06,100
problems.

23
00:01:07,200 --> 00:01:08,400
So that's what we're doing right now.

24
00:01:08,600 --> 00:01:10,000
And so let's get back to it.

25
00:01:10,300 --> 00:01:12,700
For those of you who have pre-ordered the game on handmade hero

26
00:01:12,700 --> 00:01:15,200
dot-org, using the pre order button.

27
00:01:16,200 --> 00:01:20,000
If you want to follow along with today, today is day 60.

28
00:01:21,100 --> 00:01:24,000
And so, I don't know what data, I don't how that Maps do that maps to

29
00:01:24,000 --> 00:01:24,500
like.

30
00:01:24,700 --> 00:01:26,600
So we're on our second week of programming, right?

31
00:01:26,600 --> 00:01:29,800
40 hours a week each day here is about an hour.

32
00:01:30,200 --> 00:01:34,100
So 40, so we're 20 hours into our second week.

33
00:01:34,100 --> 00:01:36,800
So we're halfway through our second week of programming here on the

34
00:01:36,900 --> 00:01:39,800
Basically if that makes sense, our second are.

35
00:01:39,800 --> 00:01:42,400
So if this were a job, if you were going to work every day and doing

36
00:01:42,400 --> 00:01:42,700
this.

37
00:01:43,500 --> 00:01:48,000
All right, so if you want to go ahead and grabbed a 59 Source out of

38
00:01:48,000 --> 00:01:50,200
the source download that is what we're starting with today.

39
00:01:50,200 --> 00:01:53,700
And that is how you will line up with me if you want to follow along

40
00:01:53,700 --> 00:01:55,400
with what I do at home.

41
00:01:56,300 --> 00:01:58,700
So, let's go ahead and take a look here.

42
00:01:59,600 --> 00:02:04,600
Boot up dead em and see where we're at.

43
00:02:04,600 --> 00:02:06,400
Okay, so basically what we had

44
00:02:06,900 --> 00:02:10,300
We had our little familiar that follows us around.

45
00:02:10,400 --> 00:02:12,300
We haven't done Sprite sorting yet.

46
00:02:12,400 --> 00:02:14,700
Like I said, which is kind of annoying because it means that things

47
00:02:14,700 --> 00:02:19,100
don't sort in front of or behind each other properly yet, but it's

48
00:02:19,100 --> 00:02:20,200
really just an annoyance.

49
00:02:20,200 --> 00:02:21,200
It doesn't really affect anything.

50
00:02:21,200 --> 00:02:23,500
That'll be for when we write our full renderer later.

51
00:02:24,200 --> 00:02:25,800
So I'm just kind of ignoring it for now.

52
00:02:26,500 --> 00:02:30,100
So we have our little familiar Here and Now what I'd like to maybe do

53
00:02:30,200 --> 00:02:34,300
I think probably the easiest thing to do would be to add just a little

54
00:02:34,300 --> 00:02:34,800
bit.

55
00:02:35,900 --> 00:02:38,900
Of gameplay, here in the sense that I've kind of got.

56
00:02:39,500 --> 00:02:41,000
I've got my arrow keys.

57
00:02:41,100 --> 00:02:43,300
I don't know why we got to fix our shadow as well.

58
00:02:43,800 --> 00:02:46,800
Our jumping Shadow is totally wrong right now.

59
00:02:48,400 --> 00:02:51,300
I'd like to, I guess make this this little torso monster here.

60
00:02:51,300 --> 00:02:53,300
That's just my torso that's standing there.

61
00:02:53,500 --> 00:02:58,000
I'd like to make our little test torso thing there, you know, attack

62
00:02:58,000 --> 00:02:58,700
me in some way.

63
00:02:58,700 --> 00:02:59,900
Like like, I'd like to make it.

64
00:03:00,000 --> 00:03:05,400
Be moved to a distance some distance nearby me and also we can make

65
00:03:05,400 --> 00:03:07,100
the familiar do that to wear it.

66
00:03:07,100 --> 00:03:10,900
You know, it only moves within a certain distance of me and then you

67
00:03:10,900 --> 00:03:13,500
know, maybe launch a projectile at me or something like that.

68
00:03:13,500 --> 00:03:14,200
Just a basic.

69
00:03:14,200 --> 00:03:18,200
A really simple thing that a game might do nothing particularly fancy,

70
00:03:18,500 --> 00:03:21,400
but something that would let me then add, you know, hit points to my

71
00:03:21,400 --> 00:03:23,300
guy hit points to it.

72
00:03:23,600 --> 00:03:29,200
And then, you know when, when it gets, when it gets down to zero

73
00:03:29,300 --> 00:03:29,800
though, and it

74
00:03:30,000 --> 00:03:32,400
He's become effectively dead.

75
00:03:32,500 --> 00:03:33,000
Right?

76
00:03:33,300 --> 00:03:34,100
So let's go ahead.

77
00:03:44,900 --> 00:03:45,600
And do that.

78
00:03:46,500 --> 00:03:47,600
sorry, I'm still eating my

79
00:03:49,100 --> 00:03:50,900
I guess it's called it's a Sumo.

80
00:03:51,100 --> 00:03:54,500
It's called a Sumo Mandarin or something like that.

81
00:03:54,900 --> 00:03:56,600
It's a they're really good.

82
00:03:56,600 --> 00:03:59,600
They're like some kind of a, they're called Sumo mandarins because

83
00:03:59,600 --> 00:04:04,500
they have like a little top not like a Sumo does and now they're

84
00:04:04,500 --> 00:04:05,900
pretty tasty citrus fruit.

85
00:04:06,500 --> 00:04:07,800
Tastes kind of like a tangerine.

86
00:04:09,000 --> 00:04:09,500
I guess.

87
00:04:10,300 --> 00:04:10,900
All right.

88
00:04:12,400 --> 00:04:13,100
so,

89
00:04:15,400 --> 00:04:20,399
We already had our ad monstar to add a monstar.

90
00:04:21,100 --> 00:04:24,800
And what we need to do here is start to think about what the monster

91
00:04:24,800 --> 00:04:25,800
is actually going to do.

92
00:04:25,800 --> 00:04:28,500
We had an update familiar call, right?

93
00:04:29,200 --> 00:04:33,700
And now we also want to have an update monstar call which I believe.

94
00:04:33,700 --> 00:04:33,800
Are.

95
00:04:33,800 --> 00:04:34,800
We actually calling it?

96
00:04:34,800 --> 00:04:35,400
Yes, we are.

97
00:04:35,900 --> 00:04:37,800
So we're already calling the update monstar.

98
00:04:37,800 --> 00:04:39,300
Oh, you know what I should do first, though.

99
00:04:39,300 --> 00:04:42,500
Let's fix our jump Shadow because that was kind of a mistake.

100
00:04:43,600 --> 00:04:45,300
Let's go ahead and make that work properly.

101
00:04:46,400 --> 00:04:48,600
So entity visible piece records.

102
00:04:48,600 --> 00:04:51,400
How we want to draw a piece of something.

103
00:04:51,500 --> 00:04:53,000
We kind of had our push.

104
00:04:53,000 --> 00:04:53,200
Peace.

105
00:04:53,200 --> 00:04:54,800
Call that did that?

106
00:04:54,800 --> 00:05:02,000
In part of the problem with that is that the the offset Z I guess of

107
00:05:02,000 --> 00:05:02,500
the guy.

108
00:05:02,500 --> 00:05:05,600
So I'm trying to think of why we have this this happen.

109
00:05:05,600 --> 00:05:06,200
Exactly.

110
00:05:06,700 --> 00:05:07,700
Let's go ahead and see.

111
00:05:08,600 --> 00:05:10,300
So this was the problem right here.

112
00:05:10,400 --> 00:05:12,700
So really high entities Z?

113
00:05:13,300 --> 00:05:17,100
It should have been not should not have been merged in there because

114
00:05:17,100 --> 00:05:19,400
the Shadows need to stay on the ground there.

115
00:05:19,800 --> 00:05:25,600
So entities Z should not actually be added here that that was a

116
00:05:25,600 --> 00:05:26,200
mistake.

117
00:05:26,500 --> 00:05:34,500
So really, I guess what we want to do is is add some kind of a I don't

118
00:05:34,500 --> 00:05:37,000
know exactly how we want to do it, but we want to be able to add like

119
00:05:37,000 --> 00:05:38,000
a coefficient in here.

120
00:05:38,000 --> 00:05:41,700
Maybe that that says it whether it would be at the Z or not.

121
00:05:41,700 --> 00:05:42,700
It's kind of cheesy.

122
00:05:43,200 --> 00:05:44,200
I'm not sure again.

123
00:05:44,200 --> 00:05:46,100
This is not particularly good, what we're doing here.

124
00:05:46,100 --> 00:05:50,500
I haven't thought through exactly how we want to handle it.

125
00:05:50,500 --> 00:05:54,900
But so if we have the entity Z as like coefficient, I guess so that

126
00:05:54,900 --> 00:05:57,200
basically you've got the ground point and then you've got that height

127
00:05:57,200 --> 00:05:58,600
above the ground point.

128
00:05:59,400 --> 00:05:59,800
I could just

129
00:06:00,000 --> 00:06:03,200
Reduce an entity Z, coefficient here, which basically multiplies it

130
00:06:03,300 --> 00:06:03,700
right.

131
00:06:04,600 --> 00:06:07,200
Which allows me to keep the Shadows on the floor.

132
00:06:07,600 --> 00:06:12,000
Again, not particularly great, but you know, what?

133
00:06:12,000 --> 00:06:12,400
Can you do?

134
00:06:12,800 --> 00:06:16,800
So if we go ahead and add that into our push piece call here.

135
00:06:17,000 --> 00:06:23,000
So normally piece push piece, The Entity CZ would be 1.0, right?

136
00:06:23,000 --> 00:06:27,800
So that we are at wherever the entity actually is in Z, but then we

137
00:06:27,800 --> 00:06:28,800
could also have.

138
00:06:29,000 --> 00:06:29,900
I suppose, I could also

139
00:06:30,000 --> 00:06:34,400
So do it this way for now where we just take it as a default parameter

140
00:06:35,500 --> 00:06:40,400
like so and then so when we do a push piece on a shadow we can just

141
00:06:40,400 --> 00:06:41,500
set that to zero.

142
00:06:41,500 --> 00:06:46,000
So every time we do Shadow Alpha we just set that to zero like so we

143
00:06:46,000 --> 00:06:48,600
could also have a separate call for doing Shadows again.

144
00:06:48,600 --> 00:06:49,500
Don't love it.

145
00:06:50,700 --> 00:06:51,600
It's kind of experiment.

146
00:06:51,600 --> 00:06:52,900
I don't love the way it's working out.

147
00:06:52,900 --> 00:06:56,700
So we may decide that that's just not how that's going to work in the

148
00:06:56,700 --> 00:06:57,200
end.

149
00:06:57,300 --> 00:06:58,300
What did I do here?

150
00:06:58,700 --> 00:06:59,800
Oh, it's zc.

151
00:07:00,900 --> 00:07:01,300
Whoops-a-daisy.

152
00:07:04,700 --> 00:07:05,100
See.

153
00:07:06,300 --> 00:07:08,700
And so, that should keep our shadow back on the ground.

154
00:07:09,000 --> 00:07:11,600
I believe when we jump, yes, it does.

155
00:07:11,600 --> 00:07:12,600
So that's all good.

156
00:07:14,200 --> 00:07:15,600
And similarly, one.

157
00:07:15,600 --> 00:07:21,000
One thing about that is, the shadow Alpha I suppose, on, on our, on

158
00:07:21,000 --> 00:07:23,800
our floating head, should have probably be a little bit less.

159
00:07:23,800 --> 00:07:24,300
Right?

160
00:07:24,600 --> 00:07:27,800
So if I go in here because the head is floating above the ground.

161
00:07:27,900 --> 00:07:29,800
Someone asked me in, during the stream to

162
00:07:30,000 --> 00:07:32,100
Make the Bob Hite be.

163
00:07:32,900 --> 00:07:34,600
So he's so kind of, I don't know if you can see that.

164
00:07:34,600 --> 00:07:36,300
It kind of Bob's up and down the head.

165
00:07:36,300 --> 00:07:42,000
Does the shadow should probably be responding to that Bob as well.

166
00:07:42,600 --> 00:07:48,500
So we might want to do something like do Bob sign so that we grab

167
00:07:48,500 --> 00:07:51,900
whatever that Bob amount is that we were using, right?

168
00:07:51,900 --> 00:07:56,900
We would do that here and then use that Bob to modulate the shadow as

169
00:07:56,900 --> 00:07:57,200
well.

170
00:07:57,200 --> 00:07:59,400
Modulation just a fancy word for multiply.

171
00:08:00,100 --> 00:08:04,900
Basically, this Bob sign is going between 0 and 1, right?

172
00:08:04,900 --> 00:08:09,800
I'm sorry - 1 + 1 which is the sign and then we've got our shadow

173
00:08:09,800 --> 00:08:10,200
Alpha.

174
00:08:10,200 --> 00:08:15,600
So, what I'd like to do is I'd like to essentially blend between two

175
00:08:15,600 --> 00:08:18,500
Shadow Alpha values as you bob up and down, right?

176
00:08:18,700 --> 00:08:22,900
So what I want to do is sort of say, alright, Shadow Alpha.

177
00:08:24,400 --> 00:08:26,200
Which comes in here.

178
00:08:26,600 --> 00:08:29,900
I would like to stay that the shadow Alpha itself.

179
00:08:30,300 --> 00:08:33,700
We're going to start at about, let's say, half of what, because we're

180
00:08:33,700 --> 00:08:35,500
just, that's that's how far we float.

181
00:08:35,600 --> 00:08:36,200
Right?

182
00:08:37,000 --> 00:08:39,600
We're going to start at about, about half the shadow Alpha.

183
00:08:40,100 --> 00:08:45,200
And then what I want to do is I want to go like down and up in that

184
00:08:45,200 --> 00:08:45,400
range.

185
00:08:45,400 --> 00:08:48,200
So I basically want to take my sine which is going between negative 1

186
00:08:48,200 --> 00:08:52,400
and 1 and multiply it by some number that will look kind of move that

187
00:08:52,400 --> 00:08:53,000
range a bit.

188
00:08:53,000 --> 00:08:54,000
Like let's say, it moves.

189
00:08:54,200 --> 00:08:56,900
Up and down by like to write either direction.

190
00:08:57,000 --> 00:08:59,800
So the shadow will get very light when it when it goes.

191
00:09:00,100 --> 00:09:04,800
And I think we also because we're moving it up is positive and down is

192
00:09:04,800 --> 00:09:05,500
negative.

193
00:09:05,600 --> 00:09:08,300
But that's the opposite of what we want to do to our shadow value.

194
00:09:08,300 --> 00:09:10,100
So we actually want to flip the sense of it.

195
00:09:10,100 --> 00:09:12,200
When you get slower, you want to get brighter.

196
00:09:12,400 --> 00:09:15,300
So the alpha should go up if that makes sense.

197
00:09:16,100 --> 00:09:19,000
Brighter is probably the wrong term there, but you know what?

198
00:09:19,000 --> 00:09:22,400
I mean, we want to get more intent more of it Blended in.

199
00:09:23,000 --> 00:09:25,600
So now he's like, oh no, I was wrong.

200
00:09:26,000 --> 00:09:27,100
Why did I why did it?

201
00:09:27,100 --> 00:09:28,100
What did I do wrong there?

202
00:09:29,000 --> 00:09:29,900
Because it's going the wrong way.

203
00:09:30,000 --> 00:09:31,800
Way you can see it's getting lighter when it goes down.

204
00:09:32,100 --> 00:09:37,900
So when the sign gets - he should be going down.

205
00:09:37,900 --> 00:09:41,000
Yes, so if I have my shadow Alpha,

206
00:09:42,900 --> 00:09:44,200
And he gets lower.

207
00:09:44,900 --> 00:09:51,300
The science should be - at that point and so I should want to add to

208
00:09:51,300 --> 00:09:52,300
the shadow Alpha.

209
00:09:52,500 --> 00:09:53,300
Should I not?

210
00:09:54,100 --> 00:09:55,600
What am I missing about that?

211
00:09:56,300 --> 00:09:57,000
I'm not sure did.

212
00:09:57,000 --> 00:09:59,200
I not recompile it weird.

213
00:10:00,800 --> 00:10:01,800
Let's think that through.

214
00:10:02,500 --> 00:10:07,700
So we take the sign and the sign comes back between negative 1 and 1.

215
00:10:08,100 --> 00:10:09,500
We are

216
00:10:10,600 --> 00:10:11,600
Pushing the P.

217
00:10:12,200 --> 00:10:15,600
Oh wait, no, we're pushing the piece on here.

218
00:10:15,900 --> 00:10:17,800
We push, you know, whatever.

219
00:10:17,800 --> 00:10:23,000
The 1010 m 2 pixels is right to move it up and down up and down, like

220
00:10:23,000 --> 00:10:23,400
so.

221
00:10:26,700 --> 00:10:32,800
And is there anything special that I should know about push piece?

222
00:10:33,900 --> 00:10:36,500
So push piece uses the offset directly.

223
00:10:38,000 --> 00:10:39,800
Like so.

224
00:10:41,000 --> 00:10:44,300
Oh, you know, what is push piece?

225
00:10:44,300 --> 00:10:45,700
This is a little bit janky.

226
00:10:46,600 --> 00:10:49,900
Push pieces, probably in pixel space, isn't it?

227
00:10:49,900 --> 00:10:53,000
Yeah, that's really ugly.

228
00:10:55,800 --> 00:10:58,900
So I guess I don't care too much about this right now because since

229
00:10:58,900 --> 00:11:01,700
we're not really doing rendering but that's really ugly.

230
00:11:01,700 --> 00:11:04,900
So really that it's not, it's in pixels, which of course, are going

231
00:11:04,900 --> 00:11:07,000
down on our in our screen Direction.

232
00:11:07,500 --> 00:11:10,300
So that's why this becomes a positive.

233
00:11:10,500 --> 00:11:13,800
That's, that's really kind of ugly and definitely not something we

234
00:11:13,800 --> 00:11:14,400
want to keep.

235
00:11:14,400 --> 00:11:18,200
But like I said, we don't, this code is not is just for testing

236
00:11:18,200 --> 00:11:18,700
purposes.

237
00:11:18,700 --> 00:11:22,200
And when we do the full renderer will be going through that which will

238
00:11:22,200 --> 00:11:23,200
be very different.

239
00:11:23,900 --> 00:11:26,300
So yeah, but I just wanted to kind of throw that in there just so are

240
00:11:26,900 --> 00:11:30,400
our head kind of had its shadow respond properly, just to get to see.

241
00:11:30,900 --> 00:11:34,800
All right, so everyone's working properly with that now and that's all

242
00:11:34,800 --> 00:11:35,300
good.

243
00:11:36,000 --> 00:11:36,700
So,

244
00:11:44,300 --> 00:11:45,400
I guess while I'm out of here.

245
00:11:46,400 --> 00:11:49,800
Let's go ahead and make the familiar stop a little further away from

246
00:11:49,800 --> 00:11:54,000
us because right now he tries to get as close as possible, which

247
00:11:54,000 --> 00:11:55,100
doesn't seem very good.

248
00:11:56,300 --> 00:11:59,800
So, maybe I'll say, I don't know the closest hero distance squared.

249
00:12:00,500 --> 00:12:05,600
Maybe we'll try to stop, you know, about a metre away or something,

250
00:12:06,000 --> 00:12:06,500
right?

251
00:12:06,700 --> 00:12:07,700
That seems reasonable.

252
00:12:08,500 --> 00:12:11,100
I'll put a square around that just so people can see that supposed to

253
00:12:11,100 --> 00:12:13,200
be square root, even though 1 squared is still just one.

254
00:12:15,700 --> 00:12:18,600
So I'm not sure if weight is that right?

255
00:12:18,600 --> 00:12:19,400
Click this here too.

256
00:12:19,400 --> 00:12:24,300
High and closes hero squared is greater than 1.0., Right?

257
00:12:24,600 --> 00:12:25,800
That should stop him.

258
00:12:26,400 --> 00:12:28,700
I feel like that should have stopped him further away.

259
00:12:28,800 --> 00:12:32,700
Of course, he still has momentum I suppose but even so that should

260
00:12:32,700 --> 00:12:35,900
have stopped him a little further away, which I'm not sure why I did

261
00:12:35,900 --> 00:12:36,400
not.

262
00:12:36,800 --> 00:12:40,200
Let's let's increase it to something higher just to see because it

263
00:12:40,200 --> 00:12:42,300
should stop and I'm not sure if we've got a bug there.

264
00:12:44,600 --> 00:12:49,700
So that seems is that really three meters in our world length?

265
00:12:57,100 --> 00:12:58,300
It's a little odd, right?

266
00:12:58,400 --> 00:13:01,100
Doesn't that seem a little bit far for 3 meters?

267
00:13:05,100 --> 00:13:05,500
I'm sorry.

268
00:13:05,500 --> 00:13:08,000
A little bit close for three meters.

269
00:13:08,500 --> 00:13:11,100
I would have expected three meters to be a little bit less than that.

270
00:13:11,800 --> 00:13:12,100
I guess.

271
00:13:12,100 --> 00:13:13,100
Well, you know what?

272
00:13:14,600 --> 00:13:15,900
Our guy still is huge.

273
00:13:15,900 --> 00:13:17,700
We never scaled our guy back down.

274
00:13:18,400 --> 00:13:22,500
So it is true that that maybe is three meters in the case in, you

275
00:13:22,500 --> 00:13:24,800
know, in the case that we're actually talking about.

276
00:13:25,000 --> 00:13:25,800
So that's fine.

277
00:13:26,200 --> 00:13:30,000
So there are there are there are familiar won't get too close to us,

278
00:13:30,000 --> 00:13:32,700
which is nice because it was getting a little cramped in here to be

279
00:13:32,700 --> 00:13:33,400
honest with you.

280
00:13:33,900 --> 00:13:35,300
So that seems a little bit better.

281
00:13:35,800 --> 00:13:38,700
And, and that way we can just kind of, have it be a little more

282
00:13:38,700 --> 00:13:40,200
reasonable than what it was.

283
00:13:40,700 --> 00:13:41,000
All right.

284
00:13:41,000 --> 00:13:41,500
There we go.

285
00:13:42,000 --> 00:13:43,900
So, let's talk about, let's go ahead.

286
00:13:44,000 --> 00:13:47,300
Add hit points, maybe to our guy, that seems pretty reasonable.

287
00:13:48,700 --> 00:13:54,600
So, if I go over here to handmade H, and I look at the entity struct.

288
00:13:54,600 --> 00:13:58,600
So again, the way we've been doing things so far and this is again

289
00:13:58,600 --> 00:14:01,200
designed to sort of get us into the position where we can do something

290
00:14:01,200 --> 00:14:02,600
a little more sensible.

291
00:14:02,600 --> 00:14:05,700
Is we just dump everything into low entities.

292
00:14:05,700 --> 00:14:07,900
So anytime we want to do something.

293
00:14:07,900 --> 00:14:09,500
We just put it directly into low entity.

294
00:14:09,500 --> 00:14:14,400
And then what I hope will happen is a nice pattern of usage will

295
00:14:14,400 --> 00:14:17,600
emerge in the code where we can see how we want to start breaking that

296
00:14:17,600 --> 00:14:18,600
up into.

297
00:14:18,700 --> 00:14:21,300
Do something else right into into something?

298
00:14:21,500 --> 00:14:24,400
That's not all just every single variable is in one giant struck

299
00:14:24,400 --> 00:14:26,400
because that won't be very efficient for storage, right?

300
00:14:32,300 --> 00:14:34,100
It works just fine, but

301
00:14:35,400 --> 00:14:40,000
it's really overly verbose because most enemies won't use most things.

302
00:14:40,000 --> 00:14:44,300
If there's lots of different variables in there that are specific to

303
00:14:44,300 --> 00:14:45,200
specific entities.

304
00:14:45,800 --> 00:14:47,800
So inside low entity.

305
00:14:48,900 --> 00:14:52,200
I'm going to go ahead and say that we have some kind of Health

306
00:14:52,200 --> 00:14:53,900
parameters here, right?

307
00:14:54,500 --> 00:14:59,200
Let's say that we've got something like, you know, hit point Max and

308
00:14:59,200 --> 00:14:59,800
hit point.

309
00:15:00,400 --> 00:15:01,200
Count.

310
00:15:02,600 --> 00:15:05,400
So that we well, I guess I could say hit points.

311
00:15:06,200 --> 00:15:08,700
So I could basically say, all right, we've got, you know, hit points

312
00:15:08,700 --> 00:15:15,000
here and, and they are trying to get how I want to do this.

313
00:15:15,000 --> 00:15:17,500
I don't know if I actually want an actual struct for hit points.

314
00:15:17,700 --> 00:15:21,100
I think I might, you know what, I might want.

315
00:15:26,300 --> 00:15:27,700
I light want something more, like,

316
00:15:29,000 --> 00:15:29,400
Abyss.

317
00:15:30,700 --> 00:15:31,200
Right.

318
00:15:31,500 --> 00:15:32,900
We reach hit point.

319
00:15:34,000 --> 00:15:41,100
Actually has an actual, you know, has some State associated with it.

320
00:15:41,100 --> 00:15:42,800
Potentially, if that makes sense.

321
00:15:44,400 --> 00:15:48,100
So, we'd have a hit point Max and then we'd have some kind of a hit

322
00:15:48,100 --> 00:15:48,700
point.

323
00:15:49,900 --> 00:15:50,900
Storage array.

324
00:15:51,200 --> 00:15:56,400
And the hit point storage array would kind of be, you know, would be

325
00:15:56,400 --> 00:15:57,000
attached to that.

326
00:15:57,000 --> 00:15:59,100
Now, one interesting thing about that is I wonder if hit points

327
00:15:59,100 --> 00:16:00,300
themselves should be entities.

328
00:16:00,600 --> 00:16:03,500
That's kind of a different, I'll put it to do there so we can think

329
00:16:03,500 --> 00:16:07,500
about that should hit points themselves, the entities.

330
00:16:07,500 --> 00:16:10,400
So that basically you just have a set of hit points that sort of

331
00:16:10,400 --> 00:16:12,300
attached to you and then I go down.

332
00:16:13,300 --> 00:16:15,800
I don't know if I like that idea or not might be a little too General,

333
00:16:16,300 --> 00:16:17,300
but let's say we do this.

334
00:16:17,500 --> 00:16:19,600
And so we have hit points.

335
00:16:20,000 --> 00:16:22,900
And then you've got some hip points here and however many hit points

336
00:16:22,900 --> 00:16:27,300
you can actually have let's say it's something like 80 know maybe 16

337
00:16:27,300 --> 00:16:30,200
is better and then our hit points.

338
00:16:30,500 --> 00:16:34,500
We actually have like whether or not it is is filled.

339
00:16:35,700 --> 00:16:37,300
And maybe how much it is filled.

340
00:16:37,600 --> 00:16:42,500
So maybe it just got something like filled amount, you know, and flags

341
00:16:42,500 --> 00:16:43,300
or something like this.

342
00:16:43,500 --> 00:16:45,900
So that way, the reason I'm making a little struck for hit point is

343
00:16:45,900 --> 00:16:48,700
because I might, you know, I want to start thinking about stuff like,

344
00:16:48,700 --> 00:16:51,800
oh what if you know, you get a poisoned one?

345
00:16:51,800 --> 00:16:53,200
Or there's a special that's on it.

346
00:16:53,200 --> 00:16:55,200
Where like, oh, it's fragile.

347
00:16:55,200 --> 00:16:59,600
So if it ever gets taken away, it's something magical happens.

348
00:16:59,600 --> 00:17:00,000
I don't know.

349
00:17:00,000 --> 00:17:02,500
Like there's things that could happen here with hit points, which is

350
00:17:02,500 --> 00:17:05,300
why I was also saying, maybe they should be entities because

351
00:17:05,400 --> 00:17:07,200
that way they can have like crazy amount of

352
00:17:08,599 --> 00:17:10,400
comet Oriel structure going on with them.

353
00:17:11,700 --> 00:17:14,099
This low any structures getting pretty large at this point, which is

354
00:17:14,099 --> 00:17:14,700
kind of dangerous.

355
00:17:14,700 --> 00:17:17,000
Like I said, but what do you do?

356
00:17:18,400 --> 00:17:23,400
So what I'd like to do is say, let's draw those hit points then and

357
00:17:23,400 --> 00:17:28,900
when you do add player assume when we did it, add low entity.

358
00:17:28,900 --> 00:17:29,700
I can't remember.

359
00:17:29,700 --> 00:17:33,400
But I assume we always clear everything we do so that I'll start out

360
00:17:33,400 --> 00:17:33,700
to 0.

361
00:17:33,700 --> 00:17:39,700
So when you add a player will say that it has an entity hip Point.

362
00:17:39,700 --> 00:17:41,800
Max of something.

363
00:17:41,800 --> 00:17:46,300
Let's say you start off with the canonical three hearts worth of

364
00:17:46,600 --> 00:17:47,100
damage.

365
00:17:47,100 --> 00:17:47,700
Because you know,

366
00:17:47,800 --> 00:17:49,800
That everyone always starts with three hearts.

367
00:17:49,800 --> 00:17:52,400
Obviously what else could possibly be?

368
00:17:53,400 --> 00:17:57,800
And then I guess I want to do those hit points that you actually have

369
00:17:57,900 --> 00:17:59,700
will set them too.

370
00:18:00,000 --> 00:18:01,100
You all the way full.

371
00:18:01,500 --> 00:18:07,400
If we did the standard for possible segments in a heart or you know, I

372
00:18:07,400 --> 00:18:09,100
don't know whether half or four is good.

373
00:18:10,200 --> 00:18:14,500
But let's say that we go with with four segments for now, then what we

374
00:18:14,500 --> 00:18:22,400
could do is say the hip point zero equals hip Point 1 equals hit .260

375
00:18:26,200 --> 00:18:29,400
and then I'll just say in too low.

376
00:18:31,200 --> 00:18:39,700
Hit point groups, hit point to, and we'll set that filled amount to

377
00:18:39,700 --> 00:18:43,300
for which, for now we'll say is the maximum, which is kind of

378
00:18:43,300 --> 00:18:43,800
unfortunate.

379
00:18:43,800 --> 00:18:44,000
I guess.

380
00:18:44,000 --> 00:18:46,200
What we really could do is we could even make that down.

381
00:18:46,600 --> 00:18:52,500
You could bake this down into one variable, but we don't really want

382
00:18:52,500 --> 00:18:54,900
to do that yet because again, that's kind of premature spatial

383
00:18:54,900 --> 00:18:55,400
optimization.

384
00:18:55,400 --> 00:18:56,600
We don't even know if we storing it this way.

385
00:18:56,600 --> 00:18:59,100
So just leave it as easily accessible things for now.

386
00:19:00,000 --> 00:19:03,000
Then I'll just make a pound to find here for lack of anything better.

387
00:19:03,000 --> 00:19:06,400
But hit point sub or hit point.

388
00:19:08,200 --> 00:19:10,800
Phil Max count count macksville.

389
00:19:10,800 --> 00:19:12,200
I don't know, hit point.

390
00:19:12,500 --> 00:19:19,000
I want and I want a pound to find for this for basically, so, I guess

391
00:19:19,800 --> 00:19:20,600
sub.

392
00:19:22,200 --> 00:19:24,200
Shit Point sub count.

393
00:19:24,200 --> 00:19:24,700
We'll just call it.

394
00:19:24,700 --> 00:19:25,800
Thats not a good name.

395
00:19:26,000 --> 00:19:28,300
I can't think of a very good name off the bat.

396
00:19:29,000 --> 00:19:32,600
So that'll basically initialize those three hit points for us.

397
00:19:33,100 --> 00:19:36,100
And then what I could do is start to draw them, right?

398
00:19:36,500 --> 00:19:37,800
So we've got that compiling.

399
00:19:37,800 --> 00:19:42,800
So if I go down here and we do, we look for where we test for the hero

400
00:19:44,000 --> 00:19:45,500
where we've got any type hero.

401
00:19:45,800 --> 00:19:47,700
When I do this drawing, right?

402
00:19:47,700 --> 00:19:51,500
I could now sort of draw some little rectangles.

403
00:19:59,700 --> 00:20:00,800
Some kind of a health meter.

404
00:20:02,800 --> 00:20:04,500
in there, so,

405
00:20:06,100 --> 00:20:08,000
I suppose with our entity visible piece.

406
00:20:08,400 --> 00:20:13,600
I could also do that, where if loaded bitmap is 0, right?

407
00:20:14,200 --> 00:20:17,000
We could have color value in here, right?

408
00:20:17,000 --> 00:20:17,900
RGB.

409
00:20:19,400 --> 00:20:20,600
And that color value.

410
00:20:21,600 --> 00:20:24,600
In fact, I could change the alpha as well to basically be in here.

411
00:20:25,000 --> 00:20:26,000
So we do it like that.

412
00:20:26,400 --> 00:20:30,800
So if I have the RGB and a and then I have the offset, I could then

413
00:20:30,800 --> 00:20:35,800
just have sort of like a width height to it as well.

414
00:20:36,000 --> 00:20:39,800
And that would allow me to do, I guess, we'll, I could call this half

415
00:20:39,800 --> 00:20:41,200
Dimension, right?

416
00:20:42,700 --> 00:20:43,700
Or just to mention.

417
00:20:43,800 --> 00:20:46,500
This is how big you want to be, and then we divide it by 2, and we use

418
00:20:46,500 --> 00:20:47,200
it for Red rig.

419
00:20:47,300 --> 00:20:48,700
So combined, with the offset, that would give

420
00:20:48,800 --> 00:20:51,800
Me everything that I need to just draw a rectangle there, right?

421
00:20:52,200 --> 00:20:55,400
So let me go ahead and recompile that and change these Alphas two A's.

422
00:20:56,600 --> 00:20:59,800
in the places where they're supposed to be 60, and

423
00:21:00,000 --> 00:21:04,100
What I can do is just do an if piece bitmap check here and then that

424
00:21:04,100 --> 00:21:07,400
would allow me to draw rectangles with that same system where we're

425
00:21:07,400 --> 00:21:09,200
just kind of pushing it on there.

426
00:21:10,000 --> 00:21:14,300
So if I do this, go ahead and get that rectangle, they're assuming

427
00:21:14,300 --> 00:21:16,000
that I'm going to use the exact same.

428
00:21:16,700 --> 00:21:18,100
All this exact same stuff.

429
00:21:18,300 --> 00:21:21,700
Pull this out into an X and A Y like so.

430
00:21:22,900 --> 00:21:25,900
So this is our x coordinate for the rectangle.

431
00:21:26,500 --> 00:21:28,900
This is our y coordinate for the rectangle.

432
00:21:30,300 --> 00:21:31,100
X y.

433
00:21:32,500 --> 00:21:32,900
Here we go.

434
00:21:33,600 --> 00:21:36,800
And when I draw the rectangle, then I can just go ahead and do that.

435
00:21:36,800 --> 00:21:40,200
In fact, I could do is be a little even more aggressive and call the

436
00:21:40,200 --> 00:21:43,400
center that there we go.

437
00:21:45,300 --> 00:21:45,800
Okay.

438
00:21:46,900 --> 00:21:50,200
And so that way, when I draw the bitmap, I'm just grabbing out the

439
00:21:50,200 --> 00:21:51,700
center X and the center why?

440
00:21:52,000 --> 00:21:59,100
But when I draw the rectangle, I can place do the, the center, minus 5

441
00:21:59,100 --> 00:22:00,900
times that that dim.

442
00:22:01,000 --> 00:22:02,100
So, I'm half the

443
00:22:02,300 --> 00:22:05,800
Could get me to that one corner of the rectangle and then I can add

444
00:22:06,300 --> 00:22:09,400
half the dim to get me to the other corner of the rectangle.

445
00:22:09,600 --> 00:22:10,200
Right?

446
00:22:10,300 --> 00:22:11,400
And that seems pretty reasonable.

447
00:22:11,400 --> 00:22:15,800
Now, of course, I need to do m, 2 pixels transform on that.

448
00:22:16,400 --> 00:22:17,900
In fact, I should probably do that here.

449
00:22:18,200 --> 00:22:26,600
So I do m 2 pixels on the dimensions and then we'll go ahead and use

450
00:22:26,600 --> 00:22:27,000
it there.

451
00:22:27,400 --> 00:22:31,700
I could also roll the 0.5 in their half Jim like so.

452
00:22:32,200 --> 00:22:33,200
And then that's just.

453
00:22:34,500 --> 00:22:35,100
Nice and simple.

454
00:22:36,100 --> 00:22:37,600
So that a draw the rectangle for us.

455
00:22:38,000 --> 00:22:42,600
We should then also pass the RGB and a I don't know if our rectangle

456
00:22:42,600 --> 00:22:46,000
call even supports Alpha, it might not not.

457
00:22:46,000 --> 00:22:46,600
I think about it.

458
00:22:46,600 --> 00:22:49,800
So we may not really actually able to use that Alpha parameter, but

459
00:22:49,800 --> 00:22:52,200
we'll just leave it like that for now because I think we never

460
00:22:52,200 --> 00:22:54,600
implemented anything that could support Alpha yet.

461
00:22:54,600 --> 00:22:56,000
Doesn't just use RGB.

462
00:22:57,100 --> 00:22:58,000
That's all it can do.

463
00:22:58,400 --> 00:23:00,300
So assuming that we've got that set.

464
00:23:00,300 --> 00:23:03,600
Let's go ahead and compile that and now I should be able to draw.

465
00:23:04,300 --> 00:23:08,000
Some little rectangle markers that would just basically show us what

466
00:23:08,000 --> 00:23:11,000
the health status is of the hero at any given time.

467
00:23:11,600 --> 00:23:15,200
And so let's go ahead and put in something like that because that

468
00:23:15,200 --> 00:23:16,300
seems like a good thing.

469
00:23:16,800 --> 00:23:18,800
We're going to we know we're going to have to have health M.

470
00:23:19,300 --> 00:23:22,100
That's a pretty obvious thing to need to have.

471
00:23:22,200 --> 00:23:23,900
So maybe I'll just have a thing here.

472
00:23:24,800 --> 00:23:27,400
And probably will pull this out into a function once we see how it

473
00:23:27,400 --> 00:23:31,400
works because I feel like the monstar will also want a health meter.

474
00:23:32,000 --> 00:23:32,500
Right?

475
00:23:32,800 --> 00:23:35,000
So what we'll do is we'll say, all right.

476
00:23:35,000 --> 00:23:37,000
There is a Max Health on the sky.

477
00:23:37,000 --> 00:23:38,100
There's a hit point Max.

478
00:23:38,700 --> 00:23:43,500
And so, what I want to do here is I want to figure out how to sort of

479
00:23:43,500 --> 00:23:47,200
Center this around the guy, right?

480
00:23:47,300 --> 00:23:50,400
So I've got a guy, he's standing here.

481
00:23:51,600 --> 00:23:55,000
And maybe I just want to put something like this in place, right?

482
00:23:55,700 --> 00:23:56,900
So what I want to do.

483
00:23:58,600 --> 00:23:59,800
Is I want to figure out.

484
00:24:00,400 --> 00:24:02,000
A good way to parameterize.

485
00:24:03,300 --> 00:24:09,000
How to place these things offset from the from the dude, okay, and

486
00:24:09,100 --> 00:24:10,900
what I think about how to do that, right?

487
00:24:11,000 --> 00:24:13,600
I kind of have to look at this is of kind of discrete placement

488
00:24:13,600 --> 00:24:14,100
problem.

489
00:24:14,800 --> 00:24:16,800
I have a center line here, right?

490
00:24:16,800 --> 00:24:18,300
The Y is easy, right?

491
00:24:18,300 --> 00:24:21,500
The offset of them from this as easy as just a fixed amount below.

492
00:24:21,500 --> 00:24:24,400
So, we just know, we would just, you know, we'd subtract some number,

493
00:24:24,400 --> 00:24:27,800
or in this case, add some number because we have things are going the

494
00:24:27,800 --> 00:24:30,500
wrong way in this court system as we just looked at.

495
00:24:31,000 --> 00:24:32,900
But anyway, so we'd move them down here, but

496
00:24:33,300 --> 00:24:36,600
When we want to align them, it's going to depend on the max hit points

497
00:24:36,600 --> 00:24:38,400
because we have two cases, right?

498
00:24:38,700 --> 00:24:40,000
In the even case.

499
00:24:41,100 --> 00:24:44,400
We have a center line and we have an equal number of things on either

500
00:24:44,400 --> 00:24:46,200
side of the center line, right?

501
00:24:46,200 --> 00:24:49,800
And the spacing it runs, right?

502
00:24:49,800 --> 00:24:50,500
That Center Line.

503
00:24:50,500 --> 00:24:51,400
It runs right down the middle.

504
00:24:51,400 --> 00:24:56,500
So it would be one and a half to get to here and one and a half to get

505
00:24:56,500 --> 00:24:57,500
to hear, right?

506
00:24:57,600 --> 00:25:01,700
But in the odd case, we will have a separate thing, right?

507
00:25:02,800 --> 00:25:05,900
We will have that Center Line running right down the middle.

508
00:25:06,100 --> 00:25:09,300
And so the distance to get from the center line to here, will actually

509
00:25:09,300 --> 00:25:11,300
just be one, right?

510
00:25:11,300 --> 00:25:15,100
So, it'll be that spacing will be will be different.

511
00:25:15,100 --> 00:25:19,800
So if you think about like what this implies, right, like again, one

512
00:25:19,800 --> 00:25:22,500
of the, if you're working on some like this, and you don't immediately

513
00:25:22,500 --> 00:25:27,100
know the answer, one thing that's kind of nice to do is to sort of

514
00:25:27,100 --> 00:25:32,400
draw out the first few and usually, if it's something simple like

515
00:25:32,600 --> 00:25:35,600
This that will just immediately tell you what the answer is just by

516
00:25:35,600 --> 00:25:36,300
inspection.

517
00:25:36,500 --> 00:25:38,100
You don't have to be overly clever.

518
00:25:38,300 --> 00:25:40,200
And so just to show how that would work.

519
00:25:40,500 --> 00:25:43,400
So there's some things that we would know about this, right?

520
00:25:43,400 --> 00:25:45,500
Again, we know how far we want the offset to be this way.

521
00:25:45,700 --> 00:25:47,400
We know how big we want these guys to be.

522
00:25:47,400 --> 00:25:50,300
But more importantly, what we actually care about is their centers for

523
00:25:50,300 --> 00:25:51,100
placement.

524
00:25:51,500 --> 00:25:54,700
All we really need to know to figure out the placement right should be

525
00:25:54,700 --> 00:25:58,300
how wide this space is, right.

526
00:25:58,400 --> 00:25:59,800
So we basically have a spacing parameter.

527
00:25:59,800 --> 00:26:00,800
Let's call that s.

528
00:26:01,200 --> 00:26:01,700
Okay.

529
00:26:02,500 --> 00:26:05,300
So we want to do is given a number of these.

530
00:26:05,300 --> 00:26:09,600
So we'll say that s is the space between them, right?

531
00:26:11,300 --> 00:26:12,900
And in x,

532
00:26:14,300 --> 00:26:18,500
And we'll say that n is the count of them.

533
00:26:18,800 --> 00:26:21,300
So, that's how many of these there actually are.

534
00:26:21,500 --> 00:26:24,300
So we have our spacing and then we have our count.

535
00:26:24,900 --> 00:26:26,600
And so that should tell us.

536
00:26:26,600 --> 00:26:30,700
If we just assume that the center line is 0 for now that should, this

537
00:26:30,700 --> 00:26:33,700
is all, we should really need right to figure out where to place the

538
00:26:33,700 --> 00:26:35,600
stuff because it's all it's dependent on it.

539
00:26:35,600 --> 00:26:38,600
Just that, you know, this tells us how far they're separated.

540
00:26:38,600 --> 00:26:41,500
This tells us how many there are, that should be all we actually need

541
00:26:41,500 --> 00:26:43,500
and this will actually, this is actually the max.

542
00:26:43,600 --> 00:26:46,800
Count not the current count, obviously, because we're going to fill

543
00:26:46,800 --> 00:26:49,100
them in based on whether they're set, or not.

544
00:26:49,300 --> 00:26:51,700
So really, this is the max out, but for purposes of this alignment,

545
00:26:51,700 --> 00:26:54,800
all the carrots, how many of the things we want and the space between

546
00:26:54,800 --> 00:26:55,800
them, right?

547
00:26:56,000 --> 00:26:59,200
So let's go ahead and and do out the cases, right?

548
00:26:59,300 --> 00:26:59,900
So, here's our

549
00:27:00,000 --> 00:27:00,600
Centerline.

550
00:27:01,700 --> 00:27:03,600
And here's our n, right.

551
00:27:03,900 --> 00:27:07,000
So for n equals 0, we have nothing, so it doesn't matter.

552
00:27:07,100 --> 00:27:08,200
For n equals 1.

553
00:27:08,200 --> 00:27:09,600
It should be right on the center line.

554
00:27:09,800 --> 00:27:10,800
For n equals two.

555
00:27:10,800 --> 00:27:14,000
There should be two on, either side of the center line, right?

556
00:27:14,000 --> 00:27:15,200
Separated by S.

557
00:27:15,400 --> 00:27:15,900
Right.

558
00:27:15,900 --> 00:27:22,400
So the the the amount will separate will move, it will, will talk

559
00:27:22,400 --> 00:27:26,800
about the results in terms of two things, where the first one is.

560
00:27:27,000 --> 00:27:31,100
So we're the first one goes, I guess we don't even two things and then

561
00:27:31,100 --> 00:27:31,200
we

562
00:27:31,500 --> 00:27:34,300
Where the next ones are because we just add s to it, right?

563
00:27:34,300 --> 00:27:36,700
So all we need to do is figure out where that first one is and then we

564
00:27:36,700 --> 00:27:39,700
would just add the spacing to get to each individual extra one.

565
00:27:39,700 --> 00:27:42,200
So we only need just that one offset is all we need.

566
00:27:42,500 --> 00:27:45,500
So the first one, this is a non case, we don't even have to handle it

567
00:27:45,500 --> 00:27:46,700
because zero should never.

568
00:27:46,900 --> 00:27:49,000
You could just not do anything, doesn't matter what your turn because

569
00:27:49,000 --> 00:27:50,000
they'll never draw anything.

570
00:27:50,800 --> 00:27:54,500
So, if you have one, the first should be at zero, if you have to the

571
00:27:54,500 --> 00:27:57,700
first should be at negative point, five times s, right.

572
00:27:57,700 --> 00:27:59,100
It should be at half an s.

573
00:27:59,600 --> 00:28:07,300
Right, if we have three then we should have like, so there we go.

574
00:28:08,200 --> 00:28:12,100
We should have the first one be at negative s, right?

575
00:28:12,400 --> 00:28:13,200
So it should be.

576
00:28:13,200 --> 00:28:14,800
It should be start there and go forwards.

577
00:28:15,100 --> 00:28:17,000
If we have a fourth one, right?

578
00:28:17,000 --> 00:28:18,800
We should have it like so.

579
00:28:22,600 --> 00:28:27,300
Should now be - 1 .5 s, right?

580
00:28:27,300 --> 00:28:29,100
So you can kind of see what the pattern is building.

581
00:28:29,100 --> 00:28:31,900
Here are ready for every additional one.

582
00:28:31,900 --> 00:28:35,100
We have passed one, right?

583
00:28:35,900 --> 00:28:41,800
So, so we start at two at two, we have -.5 at three we have another

584
00:28:41,800 --> 00:28:42,700
point five, right?

585
00:28:42,700 --> 00:28:43,700
So it's negative s.

586
00:28:43,700 --> 00:28:45,000
It's 1.0 s right there.

587
00:28:45,000 --> 00:28:45,700
1 .5 s.

588
00:28:45,900 --> 00:28:50,100
So really we just have however money and is minus 1.

589
00:28:50,600 --> 00:28:55,000
Right times that point five right times.

590
00:28:55,000 --> 00:28:59,900
S, that is all we really need to produce this step because it goes up

591
00:28:59,900 --> 00:29:01,100
by .5 each time.

592
00:29:01,200 --> 00:29:04,800
So we just need to say how many do we have that are above to or I

593
00:29:04,800 --> 00:29:06,800
should say above one, right?

594
00:29:07,200 --> 00:29:08,300
So, starting at 2:00.

595
00:29:08,400 --> 00:29:08,700
I'm ever made.

596
00:29:08,700 --> 00:29:14,400
There are above 1 and minus 1, and then we do that that count, right?

597
00:29:15,500 --> 00:29:17,600
So, n, minus 1, x .5.

598
00:29:17,600 --> 00:29:19,200
S looks like our winner there.

599
00:29:19,300 --> 00:29:19,600
That's all.

600
00:29:19,600 --> 00:29:20,400
We should really need to do.

601
00:29:20,600 --> 00:29:23,600
Due to space these out properly, and then again when we get the first

602
00:29:23,600 --> 00:29:25,600
one, we can just add s to each individual.

603
00:29:25,600 --> 00:29:26,600
One to move it forwards.

604
00:29:27,100 --> 00:29:29,900
So that's how I'm going to go ahead and write that.

605
00:29:32,500 --> 00:29:36,800
If we go ahead here, let's go ahead and solve for that that first X.

606
00:29:37,600 --> 00:29:40,300
And so, that first X is going to be however, many hit points.

607
00:29:40,800 --> 00:29:45,400
This entity has, so that's in our low entity, that's in our hip Point

608
00:29:45,400 --> 00:29:46,500
Max, because the hit point.

609
00:29:46,500 --> 00:29:48,200
Max tells us how many could be filled.

610
00:29:48,200 --> 00:29:49,400
That's how many we want to draw.

611
00:29:49,400 --> 00:29:52,300
That's like his his max HP at the moment.

612
00:29:52,900 --> 00:29:54,200
So I have that hit point Max.

613
00:29:54,500 --> 00:29:56,300
I want to subtract one for it.

614
00:29:56,300 --> 00:29:59,300
And first I probably want to check to make sure the low-energy hit

615
00:29:59,300 --> 00:29:59,800
point Max.

616
00:30:00,000 --> 00:30:03,000
Least one because otherwise we're not going to do anything.

617
00:30:03,800 --> 00:30:08,000
So we'll go ahead and say, if the hit point, Max minus 1, there we go.

618
00:30:08,000 --> 00:30:08,700
We've got it.

619
00:30:08,900 --> 00:30:10,000
That's our n minus one.

620
00:30:10,000 --> 00:30:11,900
That's this term right here, right?

621
00:30:12,400 --> 00:30:14,400
Then we have our point five.

622
00:30:16,900 --> 00:30:20,100
And then we have our spacing, our spacing Annex.

623
00:30:22,800 --> 00:30:23,900
So, our spacing and X.

624
00:30:23,900 --> 00:30:26,400
I don't know exactly what that number should be, will have to tune it.

625
00:30:27,000 --> 00:30:30,200
I would guess I would say that whatever the size of each one of these

626
00:30:30,200 --> 00:30:30,700
is.

627
00:30:31,300 --> 00:30:35,700
So if we basically say the the dimension of of our health being so our

628
00:30:35,700 --> 00:30:38,300
health, Tim, whatever that actually is.

629
00:30:38,300 --> 00:30:43,100
Let's say it's point to in the in the pixels per meter space, right?

630
00:30:44,300 --> 00:30:45,900
Whatever that spacing is, you know, what?

631
00:30:45,900 --> 00:30:49,300
And this is, this is I guess something that we should address as well.

632
00:30:50,300 --> 00:30:54,200
Kind of going forward is since we don't have any offsets for anything

633
00:30:54,200 --> 00:30:54,900
else yet.

634
00:30:55,000 --> 00:30:59,500
I think we didn't actually do the code for push piece here that would

635
00:30:59,500 --> 00:31:00,900
change that to meters.

636
00:31:01,000 --> 00:31:05,600
So this should actually be in meters per pixel, right, so I should

637
00:31:05,600 --> 00:31:10,400
probably go ahead here and get that game state in maybe that just gets

638
00:31:10,400 --> 00:31:12,600
stored in the piece group to, so you don't have to pass it.

639
00:31:12,600 --> 00:31:13,200
Every time.

640
00:31:13,700 --> 00:31:14,500
That makes sense.

641
00:31:14,800 --> 00:31:16,800
In other words in this piece group.

642
00:31:16,800 --> 00:31:19,500
Maybe piece, group, Dot Game state.

643
00:31:19,800 --> 00:31:21,100
Both game state.

644
00:31:22,500 --> 00:31:25,900
Like so and so that way the piece group game said you can just access

645
00:31:25,900 --> 00:31:28,000
things like the world and stuff.

646
00:31:28,200 --> 00:31:32,400
So when we go ahead and set those offsets, let's say that those

647
00:31:32,400 --> 00:31:34,400
offsets for now are all.

648
00:31:34,400 --> 00:31:38,200
Let's make all of those in m 2 pixels so that they're in meters

649
00:31:38,200 --> 00:31:40,300
because I'd rather have them be in meters.

650
00:31:40,800 --> 00:31:42,600
So, peace game state.

651
00:31:43,800 --> 00:31:45,000
M 2 pixels.

652
00:31:45,500 --> 00:31:45,900
Oops.

653
00:31:47,300 --> 00:31:48,700
Where is our m 2 pixels?

654
00:31:49,500 --> 00:31:50,700
Where do we actually store that?

655
00:31:51,500 --> 00:31:53,500
So, we don't actually have that stored anywhere.

656
00:31:53,600 --> 00:31:54,900
We actually need that.

657
00:31:55,300 --> 00:31:59,000
We want that to actually be something that you can access reliably.

658
00:31:59,100 --> 00:32:01,300
So let's go ahead and get that into the game State.

659
00:32:01,300 --> 00:32:02,700
Let's, let's put that in there.

660
00:32:03,300 --> 00:32:04,200
M 2 pixel.

661
00:32:05,000 --> 00:32:05,600
Like so.

662
00:32:12,300 --> 00:32:16,400
Okay, and that way we can do m, 2 pixels and just anyone can grab it

663
00:32:16,400 --> 00:32:19,500
from anywhere what you want because it's not really, a very varying

664
00:32:19,500 --> 00:32:20,000
variable.

665
00:32:20,000 --> 00:32:22,900
So I don't really want people calculating it all over the place.

666
00:32:23,400 --> 00:32:27,200
Alright, so we got our m 2 pixels in there and that'll be fine.

667
00:32:27,300 --> 00:32:30,700
This could technically be set somewhere else.

668
00:32:31,600 --> 00:32:33,700
In fact, what is this lower left?

669
00:32:33,700 --> 00:32:35,100
This is old stuff, isn't it?

670
00:32:35,600 --> 00:32:37,700
We don't actually use this anymore so we can clean that up.

671
00:32:37,700 --> 00:32:39,300
That's just that's just gone now.

672
00:32:40,200 --> 00:32:41,900
Alright, so inside here where we

673
00:32:42,000 --> 00:32:42,900
We actually do our in.

674
00:32:42,900 --> 00:32:46,100
It is actually a reasonable place to do this too.

675
00:32:46,700 --> 00:32:49,400
Because if you take a look at it, as soon as the world is initialized,

676
00:32:49,400 --> 00:32:53,600
it's got that it's got that towel side and M in it, really, those

677
00:32:53,600 --> 00:32:56,900
should probably be pulled out of the world as well at some level,

678
00:32:56,900 --> 00:32:59,800
because I don't know that they need to live this early in the world.

679
00:33:00,000 --> 00:33:02,600
We could also put m 2 pixels in the world, but I don't know.

680
00:33:02,700 --> 00:33:04,500
These are the sorts of things that really just don't matter.

681
00:33:04,700 --> 00:33:07,000
It doesn't matter where those stories as long as people can get at

682
00:33:07,000 --> 00:33:07,200
them.

683
00:33:07,200 --> 00:33:07,700
They're fine.

684
00:33:08,000 --> 00:33:09,300
It's probably not worth over thinking.

685
00:33:09,500 --> 00:33:11,500
When we start to go clean up engine components.

686
00:33:11,500 --> 00:33:14,200
We may decide that there's an obvious right place for stuff like

687
00:33:14,200 --> 00:33:17,400
metrics and then we would coalesce them that point when it's, when

688
00:33:17,400 --> 00:33:18,200
it's important to do.

689
00:33:18,200 --> 00:33:18,500
So.

690
00:33:19,100 --> 00:33:22,500
So anyway, if I go ahead and do this here, I got it actually add that

691
00:33:22,500 --> 00:33:24,600
to my group there.

692
00:33:25,700 --> 00:33:28,600
So game State game State like so.

693
00:33:29,300 --> 00:33:29,900
So this

694
00:33:30,000 --> 00:33:34,000
Actually, allow me to to put everything in the meter to pixel format.

695
00:33:34,300 --> 00:33:36,600
So let's go ahead and compile that and make sure they haven't broken

696
00:33:36,600 --> 00:33:37,200
anything.

697
00:33:38,300 --> 00:33:38,700
Obviously.

698
00:33:38,700 --> 00:33:40,500
This has to go after game.

699
00:33:40,500 --> 00:33:41,500
State is defined.

700
00:33:41,800 --> 00:33:42,500
So that's fine.

701
00:33:43,600 --> 00:33:43,900
Oops.

702
00:33:43,900 --> 00:33:45,900
And this is in, this is off the group.

703
00:33:45,900 --> 00:33:48,200
Not the piece, we go.

704
00:33:49,800 --> 00:33:50,500
Let's see.

705
00:33:50,500 --> 00:33:53,100
So our spacing X, as we were doing this.

706
00:33:53,100 --> 00:33:54,100
I'll finish up typing.

707
00:33:54,100 --> 00:33:59,900
This in our spacing X is going to be + m, 2 pixels.

708
00:34:00,000 --> 00:34:05,100
The something like twice the dimension of the health or maybe just the

709
00:34:05,100 --> 00:34:06,100
dimension of the health.

710
00:34:06,300 --> 00:34:10,400
So let's just say that, it's the health is, are separated by one whole

711
00:34:10,400 --> 00:34:12,199
health bar, in between each one.

712
00:34:12,199 --> 00:34:15,400
Will, we can adjust it later to see how we would like it to look.

713
00:34:15,600 --> 00:34:17,900
And then we have the dimension of it, which is how big will draw it.

714
00:34:18,100 --> 00:34:21,600
So now we actually know where that first one is going to be right?

715
00:34:21,600 --> 00:34:23,199
And I suppose we could also move these in here.

716
00:34:23,199 --> 00:34:24,699
This is all part of that Health drawing.

717
00:34:26,100 --> 00:34:28,900
So then, all we have to do is actually go through and draw hovering.

718
00:34:28,900 --> 00:34:30,400
However, many pieces you have.

719
00:34:30,900 --> 00:34:33,699
Again, this this might require us to think that this this is might be

720
00:34:33,699 --> 00:34:35,199
a bit bigger at this point.

721
00:34:35,699 --> 00:34:38,000
We could we could be drawing a lots of drawing.

722
00:34:38,400 --> 00:34:40,699
I'd like I think this push piece thing is pretty dumb.

723
00:34:40,699 --> 00:34:42,300
I think it was a stupid idea, really.

724
00:34:42,300 --> 00:34:44,900
This should just be part of the renderer that allows us to push things

725
00:34:44,900 --> 00:34:46,300
on there in spaces.

726
00:34:46,300 --> 00:34:49,900
So well, I'm actually going to put that in here because this is just

727
00:34:49,900 --> 00:34:50,100
dumb.

728
00:34:51,699 --> 00:34:52,600
This is dumb.

729
00:34:53,199 --> 00:34:55,300
This should just be part.

730
00:34:56,199 --> 00:35:06,700
Of the renderer push buffer, add correction of coordinates in there

731
00:35:06,700 --> 00:35:07,800
and be done with it.

732
00:35:08,400 --> 00:35:12,100
So we'll we'll basically deal with that a little bit later.

733
00:35:13,600 --> 00:35:14,200
All right.

734
00:35:14,200 --> 00:35:19,200
So if we take a look at this, now, what we need to do is we need to

735
00:35:19,200 --> 00:35:23,200
push a piece, we need to do like a push wrecked call or something like

736
00:35:23,200 --> 00:35:23,400
this.

737
00:35:23,400 --> 00:35:28,200
That is going to do, that's going to take that Dimension.

738
00:35:28,200 --> 00:35:28,600
Right?

739
00:35:28,600 --> 00:35:32,500
So instead of a bitmap here, it's going to take a health dim.

740
00:35:32,500 --> 00:35:36,500
It's going to take like a coordinate and a health dim at the end and

741
00:35:36,500 --> 00:35:37,700
no alignment, right?

742
00:35:37,700 --> 00:35:38,800
Because it's just a rectangle.

743
00:35:38,800 --> 00:35:42,500
And so then in addition to those it also has to take the r g and B,

744
00:35:42,500 --> 00:35:43,400
and so

745
00:35:43,700 --> 00:35:45,700
Do is we'll have our r g and B here.

746
00:35:46,400 --> 00:35:47,600
And again, you can kind of see.

747
00:35:47,700 --> 00:35:50,200
Maybe this would also be since we're kind of just doing miscellany

748
00:35:50,200 --> 00:35:52,500
today at this point and we got 20 minutes left.

749
00:35:52,500 --> 00:35:52,900
I don't know that.

750
00:35:52,900 --> 00:35:54,000
I want to start on the monastery.

751
00:35:54,000 --> 00:35:55,500
I'd rather just finished the hit point stuff.

752
00:35:55,600 --> 00:35:59,800
Maybe what we'll do is we'll throw in a 3D Vector so we can finally

753
00:36:00,100 --> 00:36:01,100
3D and 4D, Vector.

754
00:36:01,100 --> 00:36:04,800
So we can finally just do these are G and peace properly, right?

755
00:36:05,200 --> 00:36:10,800
So anyway, so let's go ahead and do this like so.

756
00:36:13,000 --> 00:36:18,200
There we go, and our r g and B, and I'll pass an a as well, even

757
00:36:18,200 --> 00:36:20,600
though we don't actually support it just because I would like to

758
00:36:20,600 --> 00:36:23,300
support it eventually obviously for our rectangles.

759
00:36:23,600 --> 00:36:29,800
So in here what I want to do is say alright, let's go ahead and and

760
00:36:29,800 --> 00:36:30,400
loop over.

761
00:36:30,400 --> 00:36:32,200
However many of these you've got right?

762
00:36:32,200 --> 00:36:34,300
So we have a health index equals zero.

763
00:36:34,500 --> 00:36:37,100
The health index is less than that.

764
00:36:37,200 --> 00:36:38,900
That hip Point Max that we have.

765
00:36:41,000 --> 00:36:45,300
And for each one of those, we're going to grab out, whatever.

766
00:36:45,300 --> 00:36:49,000
The hit point actually was so we've got this guy here.

767
00:36:50,700 --> 00:36:51,900
So we got to hit point.

768
00:36:53,900 --> 00:36:58,500
And that's going to be equal to the low entity hit point.

769
00:37:00,400 --> 00:37:02,800
Plus which ever one we're on, right?

770
00:37:03,300 --> 00:37:05,300
And so we go through there.

771
00:37:05,300 --> 00:37:09,900
And now what we need to do is we can set the r g and B to like we'll

772
00:37:09,900 --> 00:37:11,300
just set it to bright red.

773
00:37:11,600 --> 00:37:12,200
Right?

774
00:37:12,800 --> 00:37:13,800
If it's filled.

775
00:37:14,600 --> 00:37:20,600
But if the hit point let's say filled amount is we'll just we'll just

776
00:37:20,600 --> 00:37:24,000
say if it equals 0 for now, we will represent it quite properly yet.

777
00:37:24,100 --> 00:37:25,500
We'll look at that in a second.

778
00:37:26,400 --> 00:37:29,600
If the hit point filled amount is zero, then it'll change.

779
00:37:29,800 --> 00:37:33,500
You just a dark gray or something like this, right?

780
00:37:36,000 --> 00:37:40,000
And then what we need is, we need to be able to, on our push piece.

781
00:37:40,300 --> 00:37:45,500
We actually need to be able to do the, the push wrecked call.

782
00:37:45,700 --> 00:37:48,700
We need to be able to do something that actually does the rectangle.

783
00:37:48,700 --> 00:37:49,200
Push.

784
00:37:49,400 --> 00:37:54,500
Obviously this right now, I don't know if I want to support and easy,

785
00:37:55,300 --> 00:37:58,700
but well, we'll do it anyway, so when we push this on here, we've got

786
00:37:58,700 --> 00:38:02,100
all the same stuff that we had before only alignment goes away and we

787
00:38:02,100 --> 00:38:03,300
end up with Dimension.

788
00:38:03,700 --> 00:38:05,100
So we'll put in dimension there.

789
00:38:05,800 --> 00:38:13,000
Then we've got our piece, has an actual dim, and that dim goes on

790
00:38:13,000 --> 00:38:13,400
there.

791
00:38:14,000 --> 00:38:17,700
We then also have an r g and B, RG and B.

792
00:38:17,700 --> 00:38:19,700
And those get assigned right here.

793
00:38:19,700 --> 00:38:20,300
Peace.

794
00:38:20,500 --> 00:38:22,100
Our peace.

795
00:38:22,200 --> 00:38:23,800
She right.

796
00:38:23,900 --> 00:38:25,200
Peace be.

797
00:38:25,400 --> 00:38:25,900
There we go.

798
00:38:26,700 --> 00:38:28,600
You could slap that in there as well.

799
00:38:29,400 --> 00:38:32,000
Equals Alpha A is for Alpha.

800
00:38:32,400 --> 00:38:35,500
It's like some kind of children's book and that.

801
00:38:35,600 --> 00:38:39,800
It would allow us to push, rectangles, in addition to bitmaps course.

802
00:38:39,800 --> 00:38:40,800
We don't have a lime anymore.

803
00:38:40,800 --> 00:38:43,600
So we get rid of that and poops.

804
00:38:43,700 --> 00:38:44,500
That's no good.

805
00:38:44,700 --> 00:38:46,900
Health count or what would I call it?

806
00:38:46,900 --> 00:38:47,500
Hit point.

807
00:38:47,500 --> 00:38:49,600
Count, get Point Max.

808
00:38:49,700 --> 00:38:50,300
That's what it is.

809
00:38:50,300 --> 00:38:51,000
Your point, Max.

810
00:38:52,300 --> 00:38:54,100
So that should allow us to draw those.

811
00:38:54,100 --> 00:38:54,200
Now.

812
00:38:54,200 --> 00:38:55,800
I don't know if I broke other things.

813
00:38:55,800 --> 00:38:56,500
I went in there.

814
00:38:56,600 --> 00:38:57,200
Oh, dear.

815
00:39:02,200 --> 00:39:03,000
That's pretty funny.

816
00:39:03,400 --> 00:39:08,700
So yeah, in case anyone was wondering when you change to m 2 pixels

817
00:39:08,900 --> 00:39:12,700
anything that was not previously in m 2 pixels.

818
00:39:13,000 --> 00:39:15,600
Yeah, so we're this is way too much obviously.

819
00:39:17,600 --> 00:39:17,800
Even.

820
00:39:17,800 --> 00:39:20,500
So because that was in pixels before and like I said, I wanted

821
00:39:20,500 --> 00:39:22,100
everything to be in World units.

822
00:39:22,100 --> 00:39:23,500
I don't want things in pixels.

823
00:39:24,100 --> 00:39:25,800
So there's our head Bob back again.

824
00:39:26,000 --> 00:39:27,500
Still probably a little bit too high.

825
00:39:27,900 --> 00:39:28,400
Look at that.

826
00:39:28,400 --> 00:39:29,800
That's that's more like what it was.

827
00:39:30,500 --> 00:39:32,500
And so now I got to finish up my health meter.

828
00:39:33,100 --> 00:39:35,400
So let's go ahead and do that.

829
00:39:35,500 --> 00:39:39,400
So what we need to do now is place it at the position that it actually

830
00:39:39,400 --> 00:39:40,100
should be in.

831
00:39:40,500 --> 00:39:44,800
And so what I'm going to do is I'm going to create something that's

832
00:39:44,800 --> 00:39:47,000
like first first or or

833
00:39:47,400 --> 00:39:48,100
Substitute P.

834
00:39:48,300 --> 00:39:50,400
We'll just start with P, right?

835
00:39:50,800 --> 00:39:52,000
Or hit p.

836
00:39:53,300 --> 00:39:56,200
And that is going to be an offset from the player.

837
00:39:56,200 --> 00:39:59,400
It's going to be a fixed, why, but it's going to be based on this

838
00:39:59,400 --> 00:40:00,100
first X.

839
00:40:00,200 --> 00:40:01,500
So, we've got first X.

840
00:40:02,100 --> 00:40:06,500
And in fact, I could just bake for a sex, right in there, like so.

841
00:40:06,900 --> 00:40:11,100
And and then I could have however, far off the bottom.

842
00:40:11,100 --> 00:40:13,100
We want it to be in y, right?

843
00:40:13,100 --> 00:40:17,600
It's going to be down a bit from where the guy should be like, so and

844
00:40:17,600 --> 00:40:21,500
I don't know if we do we properly reverse the why either that's the

845
00:40:21,500 --> 00:40:22,000
other thing.

846
00:40:22,000 --> 00:40:23,000
So we haven't properly.

847
00:40:23,100 --> 00:40:23,800
First a while yet.

848
00:40:23,800 --> 00:40:24,800
So that will actually be above them.

849
00:40:24,900 --> 00:40:28,300
So maybe we can go do that now to just to get that cleaned up as well

850
00:40:28,300 --> 00:40:29,300
because we want all of our.

851
00:40:29,300 --> 00:40:30,100
Why going up.

852
00:40:30,100 --> 00:40:33,100
We don't want to have this crazy stuff in here, even when we're just

853
00:40:33,100 --> 00:40:34,600
playing around with it, be nice to get rid of it.

854
00:40:34,600 --> 00:40:35,600
So maybe we'll do that.

855
00:40:35,600 --> 00:40:38,700
So there's our hit p and here's our D, hit p is how much to move for

856
00:40:38,700 --> 00:40:39,100
each one.

857
00:40:39,100 --> 00:40:41,800
We already said with that was, it's the spacing amount.

858
00:40:42,400 --> 00:40:44,300
And so then we just go in and put that in.

859
00:40:44,300 --> 00:40:47,300
So we've got our hit p and every time we draw one, we just move it, by

860
00:40:47,300 --> 00:40:50,300
whatever that distance is that supposed to move between health bars,

861
00:40:50,300 --> 00:40:50,800
right?

862
00:40:51,800 --> 00:40:52,900
And so, in theory that

863
00:40:53,000 --> 00:40:53,700
That should give us it.

864
00:40:53,700 --> 00:40:56,800
Although it doesn't look like it did properly which is not good.

865
00:40:57,200 --> 00:41:00,700
We've got our spacing x0, not that's good.

866
00:41:00,800 --> 00:41:01,900
I meant plus equals.

867
00:41:02,600 --> 00:41:03,200
There we go.

868
00:41:04,900 --> 00:41:09,300
All right, so that doesn't look right to me.

869
00:41:09,300 --> 00:41:10,900
That's because this is supposed to be -.

870
00:41:11,200 --> 00:41:13,700
All right, we're supposed to start at negative.

871
00:41:13,700 --> 00:41:15,400
The amount that we computed.

872
00:41:15,500 --> 00:41:16,100
There we go.

873
00:41:16,800 --> 00:41:21,200
And now we want to make the spacing.

874
00:41:21,400 --> 00:41:22,900
So the spacing actually has to

875
00:41:23,200 --> 00:41:25,800
Now that I think about it, that was a dumb thing that's going to but

876
00:41:25,800 --> 00:41:27,300
them directly together, right?

877
00:41:27,500 --> 00:41:31,500
Because if you think about what happens there in terms of how we need

878
00:41:31,500 --> 00:41:32,400
them spaced.

879
00:41:33,300 --> 00:41:36,100
So this is the dimension, right?

880
00:41:36,100 --> 00:41:38,200
So this would be half the dimension.

881
00:41:39,200 --> 00:41:43,300
So if I move exactly one of the dimension over, they will a but

882
00:41:43,300 --> 00:41:44,000
exactly.

883
00:41:44,200 --> 00:41:47,600
So if I want some space in between them, I need to do the dimension

884
00:41:47,800 --> 00:41:50,400
plus some amount of space, right?

885
00:41:51,000 --> 00:41:52,900
So the distance between them in terms of,

886
00:41:53,000 --> 00:41:59,200
Spacing should actually be something more than that, like, maybe 1.5

887
00:41:59,200 --> 00:41:59,900
times it is.

888
00:42:00,100 --> 00:42:03,500
If that's a reasonable amount, just to give it some space in between

889
00:42:03,500 --> 00:42:03,700
them.

890
00:42:03,700 --> 00:42:06,800
So there's our health, our health meter there.

891
00:42:07,100 --> 00:42:11,300
And now let's go ahead and reverse that y-coordinate which will mean

892
00:42:11,300 --> 00:42:15,700
that we'll have to sort of fix the way we were doing some of these

893
00:42:15,700 --> 00:42:16,400
other things here.

894
00:42:16,700 --> 00:42:17,100
But okay.

895
00:42:17,100 --> 00:42:20,300
So for push peace, let's see how we're doing there.

896
00:42:20,300 --> 00:42:23,700
So offset Z and playersí.

897
00:42:23,700 --> 00:42:25,800
Those were already being negated.

898
00:42:25,800 --> 00:42:29,200
So really all of this stuff looks

899
00:42:30,000 --> 00:42:31,200
About right.

900
00:42:31,200 --> 00:42:35,200
The thing is that what we want to do is say that whatever the why

901
00:42:35,200 --> 00:42:39,100
channel was the why channel is going to get negated in here.

902
00:42:39,100 --> 00:42:42,700
So whatever people pass in we negate it in here.

903
00:42:42,700 --> 00:42:49,100
So basically this this is actually going to be offset x negative

904
00:42:49,100 --> 00:42:50,600
offset y like.

905
00:42:50,600 --> 00:42:53,200
So I think that's what we want.

906
00:42:53,300 --> 00:42:55,500
So that everyone who passes in something here.

907
00:42:55,600 --> 00:42:57,800
It'll go the opposite direction, right?

908
00:42:59,100 --> 00:42:59,900
Which I think is what we

909
00:43:01,000 --> 00:43:05,300
So in theory, what that would mean is if that's actually working

910
00:43:05,300 --> 00:43:11,100
properly then when I pass in those offsets to the hip points, I should

911
00:43:11,100 --> 00:43:15,000
be able to make them lower like by doing that.

912
00:43:15,100 --> 00:43:15,600
Right?

913
00:43:17,100 --> 00:43:18,200
Why is that not working?

914
00:43:19,100 --> 00:43:20,200
Oh, right.

915
00:43:20,400 --> 00:43:22,400
We should probably unify these two as well.

916
00:43:22,700 --> 00:43:25,900
So I changed it in here, but I did not change it in here.

917
00:43:26,100 --> 00:43:29,200
So what I should probably do again, this is kind of stupid because

918
00:43:30,300 --> 00:43:33,400
I want to get rid of this anyway, but you know, while it's there, it's

919
00:43:33,400 --> 00:43:34,200
there, right?

920
00:43:34,700 --> 00:43:38,300
So let's change this call to be pushed bitmap.

921
00:43:38,700 --> 00:43:39,000
Right?

922
00:43:39,000 --> 00:43:40,400
And this is push wrecked.

923
00:43:40,400 --> 00:43:44,500
And both of these will just call in to one function that does the

924
00:43:44,500 --> 00:43:46,700
whole shebang basically like so.

925
00:43:47,300 --> 00:43:51,500
So this will be pushed piece and push piece will have all the

926
00:43:51,500 --> 00:43:53,000
parameters, right?

927
00:43:53,300 --> 00:43:57,500
So it basically has has every every last little thing.

928
00:43:59,300 --> 00:44:00,700
Like so, oops.

929
00:44:02,500 --> 00:44:05,500
And this way is just me trying to make it so that I ensure that I'm

930
00:44:05,500 --> 00:44:08,600
not going to have bugs like that one where I just accidentally change

931
00:44:08,600 --> 00:44:12,300
something in one place and don't change it in the other, right?

932
00:44:13,000 --> 00:44:15,200
So that's that's really all that's happening there.

933
00:44:15,900 --> 00:44:21,500
Be Alpha and entities that zc.

934
00:44:21,800 --> 00:44:25,100
So that just takes everything and does all the computations that we

935
00:44:25,100 --> 00:44:26,100
actually want done.

936
00:44:26,400 --> 00:44:30,000
And then what these guys will do is push bitmap and push piece just

937
00:44:30,000 --> 00:44:31,500
call into it.

938
00:44:32,100 --> 00:44:33,000
With whatever they have.

939
00:44:33,000 --> 00:44:36,600
So we have the group, the bitmap offset offset.

940
00:44:36,600 --> 00:44:39,700
See the alignment, the alpha, right?

941
00:44:39,700 --> 00:44:41,400
The are the G and the B are all.

942
00:44:41,400 --> 00:44:46,100
Just one in this case and the entities EC that goes away and then

943
00:44:46,100 --> 00:44:47,700
we'll do the exact same thing here.

944
00:44:48,500 --> 00:44:50,500
Only this time we don't have a bitmap.

945
00:44:50,600 --> 00:44:51,700
So the bitmaps gone.

946
00:44:51,900 --> 00:44:52,900
We've got the offset Z.

947
00:44:52,900 --> 00:44:53,700
We've got the line this time.

948
00:44:53,700 --> 00:44:55,300
We've got the we don't have the line.

949
00:44:55,300 --> 00:44:55,600
Sorry.

950
00:44:55,600 --> 00:44:56,600
That's 00.

951
00:44:56,800 --> 00:44:58,300
No, change in the alignment.

952
00:44:58,400 --> 00:44:59,500
Then we've got the G.

953
00:45:00,300 --> 00:45:00,800
The Beebe.

954
00:45:00,900 --> 00:45:03,400
A and we're done, so.

955
00:45:04,100 --> 00:45:05,000
Oh no, we're not.

956
00:45:05,000 --> 00:45:07,400
We've got one more parameter, which is the dimension.

957
00:45:09,300 --> 00:45:10,900
So let's go ahead and get that in there as well.

958
00:45:11,500 --> 00:45:14,000
So this guy passes the alignment and then no Dimension.

959
00:45:14,500 --> 00:45:20,400
Like so this guy passes that and then the dimension, which

960
00:45:21,600 --> 00:45:23,400
Where is that?

961
00:45:23,400 --> 00:45:23,600
There?

962
00:45:23,600 --> 00:45:23,800
It is.

963
00:45:23,800 --> 00:45:24,600
Okay, never mind.

964
00:45:24,600 --> 00:45:26,500
I was like where it's not on there, but it is on there.

965
00:45:27,400 --> 00:45:30,300
And so then we just change Pete, push piece to be pushed bitmap.

966
00:45:30,300 --> 00:45:31,200
And I think we're good.

967
00:45:31,500 --> 00:45:35,600
That should solve that problem for us, and it did.

968
00:45:35,600 --> 00:45:39,600
So there's our little Health meter little bit too low now, so, maybe

969
00:45:39,600 --> 00:45:41,000
that's a little bit aggressive.

970
00:45:41,600 --> 00:45:45,000
So let's go ahead and change it to that.

971
00:45:45,600 --> 00:45:46,400
So there we go.

972
00:45:47,100 --> 00:45:49,200
So there's our health meter and that's all fine.

973
00:45:49,600 --> 00:45:50,500
No particular.

974
00:45:51,300 --> 00:45:54,700
A particular big deal there and we've got about 10 minutes left.

975
00:45:54,700 --> 00:45:59,100
So like I said, maybe let's start to add our 3D vector and r4d Vector

976
00:45:59,100 --> 00:46:02,900
in there to our Mass so that we can stop having sort of all this

977
00:46:02,900 --> 00:46:03,500
annoyance.

978
00:46:04,000 --> 00:46:07,500
Oh, you know what to I suppose The Entity zc should probably be in

979
00:46:07,500 --> 00:46:08,600
there, right?

980
00:46:10,800 --> 00:46:13,500
Because that probably shouldn't move when he jumps.

981
00:46:14,300 --> 00:46:14,700
Right.

982
00:46:14,800 --> 00:46:18,000
That's probably stay down there at the bottom so that seems that seems

983
00:46:18,000 --> 00:46:18,700
pretty reasonable.

984
00:46:19,800 --> 00:46:22,600
So yeah, so what I was thinking is just, you know, maybe we should

985
00:46:22,600 --> 00:46:26,600
have something where we can represent.

986
00:46:26,600 --> 00:46:29,700
Like as we want at least be able to represent color values like rgba

987
00:46:29,800 --> 00:46:33,800
in vectors as well and like not have to be passing them, piecemeal

988
00:46:33,800 --> 00:46:36,400
like this and being able to access them all at.

989
00:46:36,400 --> 00:46:37,500
Once would be kind of handy.

990
00:46:38,000 --> 00:46:42,700
So what I'm what I'd like to do is go ahead and go into handmade math

991
00:46:43,000 --> 00:46:43,600
and

992
00:46:44,400 --> 00:46:48,500
Just just blow out these into two more types, right?

993
00:46:49,000 --> 00:46:52,000
So basically we'd have, you know, three of these.

994
00:46:52,000 --> 00:46:55,100
We'd have one for a V3, one for a V4.

995
00:46:55,700 --> 00:46:57,800
And in addition, to the ones that we had already,

996
00:47:00,000 --> 00:47:00,600
Like this.

997
00:47:02,600 --> 00:47:07,800
And it might also be nice to do it so that you could access these by

998
00:47:07,800 --> 00:47:09,700
other names, right?

999
00:47:11,000 --> 00:47:17,000
Something like this so that you have, you know, an alternate way of

1000
00:47:17,000 --> 00:47:20,600
thinking about any given one of them if you want it to be some other

1001
00:47:20,700 --> 00:47:22,300
naming scheme than what you've got.

1002
00:47:22,500 --> 00:47:23,000
Right?

1003
00:47:23,700 --> 00:47:27,000
So that might be handy and this would allow us again and I'll just

1004
00:47:27,100 --> 00:47:32,900
I'll multiply these guys out here just so I have an additional way of

1005
00:47:32,900 --> 00:47:34,700
constructing them like so

1006
00:47:37,700 --> 00:47:38,400
And there you go.

1007
00:47:41,200 --> 00:47:41,500
Oops.

1008
00:47:43,400 --> 00:47:47,200
So that'll give me you know, more of these guys, right?

1009
00:47:48,400 --> 00:47:54,000
And now I've got each individual type that I wanted and off you go.

1010
00:47:55,100 --> 00:47:57,700
So that would allow me to pass those color values in there.

1011
00:47:58,300 --> 00:47:59,200
And

1012
00:48:00,000 --> 00:48:01,700
Let's go ahead and compile that.

1013
00:48:02,000 --> 00:48:04,000
Let's see, gotta change their turn type.

1014
00:48:04,200 --> 00:48:04,700
There we go.

1015
00:48:06,400 --> 00:48:09,200
And that way, I could start to talk about these three dimensional

1016
00:48:09,200 --> 00:48:11,900
vectors in in more interesting ways.

1017
00:48:12,300 --> 00:48:14,900
And so we probably won't get to too much of that because we only got

1018
00:48:14,900 --> 00:48:17,300
about eight minutes left, but I'll start with the very, very basic

1019
00:48:17,300 --> 00:48:17,800
stuff.

1020
00:48:18,100 --> 00:48:22,500
So right here, if I wanted to obviously, I could make this a V4 that

1021
00:48:22,500 --> 00:48:24,200
was just the color, right?

1022
00:48:24,200 --> 00:48:27,300
And then that becomes a lot more compelling because I can kind of do

1023
00:48:27,700 --> 00:48:28,600
stuff like this.

1024
00:48:30,500 --> 00:48:31,000
Right.

1025
00:48:34,000 --> 00:48:38,700
That basically just allows me to to be a little more convenient with

1026
00:48:38,700 --> 00:48:39,400
what I'm doing.

1027
00:48:39,600 --> 00:48:41,800
So I could just go ahead and

1028
00:48:43,000 --> 00:48:46,100
Do something like this, right?

1029
00:48:47,100 --> 00:48:51,600
And then, when I pass this along, I just pass it in as a color value,

1030
00:48:51,600 --> 00:48:52,200
right?

1031
00:48:52,400 --> 00:48:56,800
And that just just, again, start simplifying, things simplifying life

1032
00:48:56,800 --> 00:48:57,400
a little bit.

1033
00:48:57,900 --> 00:48:59,400
So there we go before color.

1034
00:48:59,800 --> 00:49:04,900
And then this is just colored at our color .g colored up, be coded a

1035
00:49:05,400 --> 00:49:09,400
right and no literally no change to the code.

1036
00:49:10,300 --> 00:49:12,700
Like what it's actually doing is just it's just

1037
00:49:12,900 --> 00:49:15,800
Making it a little more semantically easier for me to deal with.

1038
00:49:15,900 --> 00:49:16,600
And so up here.

1039
00:49:16,600 --> 00:49:17,500
I can do the same thing.

1040
00:49:17,500 --> 00:49:19,300
I can I can pass that through the pipe.

1041
00:49:20,900 --> 00:49:24,800
Down to push piece just to clean up, get some of those out of there,

1042
00:49:24,900 --> 00:49:26,200
make it a little more coherent.

1043
00:49:26,600 --> 00:49:30,100
And then that's just going to be colored G color B, color a, and then

1044
00:49:30,100 --> 00:49:32,100
this guy who takes them in a different way.

1045
00:49:32,200 --> 00:49:33,500
He only takes an alpha.

1046
00:49:33,600 --> 00:49:34,600
No big deal, right.

1047
00:49:34,600 --> 00:49:37,800
He just packs them up and it's the same thing for him.

1048
00:49:38,100 --> 00:49:38,800
No big deal.

1049
00:49:39,900 --> 00:49:42,800
And then this guy can just pass this color straight through which is

1050
00:49:42,800 --> 00:49:43,400
kind of nice.

1051
00:49:44,000 --> 00:49:45,000
It's okay.

1052
00:49:45,200 --> 00:49:46,100
No big deal there.

1053
00:49:46,200 --> 00:49:48,200
Everything is relatively obvious.

1054
00:49:48,200 --> 00:49:48,800
What's happening?

1055
00:49:49,800 --> 00:49:50,400
And then

1056
00:49:52,000 --> 00:49:55,200
Let's take a look and see I can start to maybe clean up some other

1057
00:49:55,200 --> 00:49:56,500
stuff that we were doing there.

1058
00:50:00,500 --> 00:50:01,900
Let's see here.

1059
00:50:01,900 --> 00:50:03,200
Let's see.

1060
00:50:03,900 --> 00:50:06,700
So well, no, I guess I won't do anything.

1061
00:50:06,800 --> 00:50:08,200
I won't do anything there yet.

1062
00:50:08,800 --> 00:50:12,500
So we could take obviously colors and their I'm trying to think of

1063
00:50:12,500 --> 00:50:13,700
where else, there was one place.

1064
00:50:13,700 --> 00:50:16,800
I definitely want to do, I'm not sure if I want to do it right now,

1065
00:50:17,200 --> 00:50:20,600
but we could do it in there which is which is those diffs, those discs

1066
00:50:20,600 --> 00:50:21,400
that come back.

1067
00:50:21,600 --> 00:50:25,000
I don't know if you remember but basically we had these discs that

1068
00:50:25,000 --> 00:50:29,500
come back as a d XY and DZ the world.

1069
00:50:29,700 --> 00:50:31,800
Difference could now just be a vector3.

1070
00:50:31,800 --> 00:50:34,200
It's just a straight-up vector3 that says, what your differences in

1071
00:50:34,200 --> 00:50:34,800
the world.

1072
00:50:35,500 --> 00:50:37,200
So maybe we'll just start with that.

1073
00:50:37,400 --> 00:50:40,000
I only got five minutes left, but I don't know how hard that would be.

1074
00:50:40,500 --> 00:50:41,600
Let's find out.

1075
00:50:41,600 --> 00:50:44,800
So, if I go to world difference, if I go to basically everywhere that

1076
00:50:44,800 --> 00:50:48,700
was using that and just change that to be a V3, right?

1077
00:50:49,900 --> 00:50:51,600
Very simply now I could just

1078
00:50:53,300 --> 00:50:58,000
Make that result equal to exactly what I'm Computing here.

1079
00:50:59,100 --> 00:50:59,400
Right.

1080
00:50:59,400 --> 00:50:59,800
Pack that

1081
00:51:00,000 --> 00:51:01,800
a vector 3, like so,

1082
00:51:04,700 --> 00:51:07,500
and I guess, then the

1083
00:51:09,100 --> 00:51:13,100
Chunk side and M times, dv/dt tile, X Y.

1084
00:51:13,100 --> 00:51:15,900
So, that would literally just be after we compute this, we could just

1085
00:51:15,900 --> 00:51:21,200
multiply it by the chunk side and M and then add that those offset

1086
00:51:21,200 --> 00:51:22,000
differences.

1087
00:51:22,700 --> 00:51:25,700
Think about what you want to do in Z, so it basically would just be a

1088
00:51:25,700 --> 00:51:26,500
full three-dimensional.

1089
00:51:26,500 --> 00:51:26,800
You know, what?

1090
00:51:26,800 --> 00:51:28,600
The now that I look at it.

1091
00:51:28,900 --> 00:51:31,100
I feel like we don't have enough time left because we actually want to

1092
00:51:31,100 --> 00:51:34,100
think that through its I'll I don't know if I want to say think that

1093
00:51:34,100 --> 00:51:37,100
through I'd like to explain what we're doing there a little bit more.

1094
00:51:37,400 --> 00:51:38,600
So while I'm not back that out and we'll

1095
00:51:38,800 --> 00:51:40,500
Let It Be oops, that's not good.

1096
00:51:41,400 --> 00:51:44,500
Well, let that be a thing that will start on Monday because we could

1097
00:51:44,500 --> 00:51:47,700
we could pretty easily do this but I just want to be able to explain

1098
00:51:47,700 --> 00:51:50,500
that a little more clearly because we're going to want to go write a

1099
00:51:50,500 --> 00:51:53,700
multiply there and so that we can collapse all this down into one

1100
00:51:53,700 --> 00:51:55,500
thing, which will be pretty easy.

1101
00:51:56,100 --> 00:52:00,500
So all this go and for the last couple seconds here, I'll mention one

1102
00:52:00,500 --> 00:52:03,100
thing about way we're doing this.

1103
00:52:03,500 --> 00:52:06,400
So sometimes people like to template eyes these, right?

1104
00:52:06,700 --> 00:52:08,600
They like to go ahead and say

1105
00:52:08,700 --> 00:52:13,500
Say, they'll do something like, you know, a template here where

1106
00:52:13,500 --> 00:52:18,500
they'll have, you know, templatized on the number of these things.

1107
00:52:18,600 --> 00:52:21,700
So then you would do stuff more, like, V2 like that.

1108
00:52:21,700 --> 00:52:22,800
Like, you'd pass an integer.

1109
00:52:22,800 --> 00:52:27,000
It become both eyes on the integer 2 and then it would give you that

1110
00:52:27,000 --> 00:52:28,200
many of them, right?

1111
00:52:29,700 --> 00:52:34,600
I don't find that to be useful at all because it introduces templates

1112
00:52:34,600 --> 00:52:36,600
into the code base, which are almost always bad.

1113
00:52:37,200 --> 00:52:39,000
They are worse for error messages.

1114
00:52:39,000 --> 00:52:40,300
They're worse for compile time.

1115
00:52:40,300 --> 00:52:43,700
They're worse for Pediatric, be output size, which slows down compile

1116
00:52:43,700 --> 00:52:44,400
time as well.

1117
00:52:44,600 --> 00:52:46,900
They're worse for debugging, they're worse for viewing in most of

1118
00:52:46,900 --> 00:52:48,900
buggers because the buggers don't handle them as well.

1119
00:52:49,300 --> 00:52:51,300
So it's basically just bad to have templates.

1120
00:52:51,300 --> 00:52:53,700
Templates are just bad on a number of fronts.

1121
00:52:54,900 --> 00:52:57,500
And so you want to make sure you if you're going to use them that you

1122
00:52:57,500 --> 00:52:58,600
actually get

1123
00:52:59,000 --> 00:53:04,700
Back in enough from them, commensurate with what your you know, what

1124
00:53:04,900 --> 00:53:08,600
all of that huge hit you're taking a lot of programmers, don't think

1125
00:53:08,600 --> 00:53:09,000
about that.

1126
00:53:09,000 --> 00:53:12,700
A lot of programmers, just like to do stuff and they don't actually

1127
00:53:12,700 --> 00:53:17,400
try to compute the total cost to their project in doing so but I think

1128
00:53:17,400 --> 00:53:18,000
that's a mistake.

1129
00:53:18,000 --> 00:53:21,400
And so if I'm ever going to introduce Templeton to codebase, I always

1130
00:53:21,400 --> 00:53:24,300
think very hard about whether they're actually necessary and how much

1131
00:53:24,300 --> 00:53:27,200
time I'm actually going to say by having them for vectors.

1132
00:53:27,200 --> 00:53:28,800
I'm not really going to say very much time.

1133
00:53:28,900 --> 00:53:31,600
Because basically we can do a really simple cut and paste job.

1134
00:53:32,000 --> 00:53:34,500
And basically, just blow out the operators that the temp, the template

1135
00:53:34,500 --> 00:53:37,800
would have blown out for us anyway, and how long is that really going

1136
00:53:37,800 --> 00:53:38,200
to take?

1137
00:53:38,200 --> 00:53:39,200
I mean, look at this file.

1138
00:53:39,200 --> 00:53:40,400
There's not much in here.

1139
00:53:40,400 --> 00:53:43,800
There's only a very small number of vector operations will just copy

1140
00:53:43,800 --> 00:53:47,700
those, do them once and then everything is correct, and we don't have

1141
00:53:47,700 --> 00:53:50,700
to worry about like, weird like template specialization to get the

1142
00:53:50,700 --> 00:53:53,600
fact that we can access these by RGB Zan days and all this stuff.

1143
00:53:53,600 --> 00:53:56,100
So it just, it just works out a lot better.

1144
00:53:56,200 --> 00:53:58,900
So for vectors, I, unless you have some really

1145
00:53:59,000 --> 00:53:59,900
Weird stuff where you have.

1146
00:54:00,000 --> 00:54:03,300
Like hundreds of different lengths of vectors like, you know 3 S 4, S

1147
00:54:03,300 --> 00:54:07,500
5 6, 7 8 9 10, 11, 12 13, you know, whatever like that where maybe it

1148
00:54:07,500 --> 00:54:07,800
does.

1149
00:54:07,800 --> 00:54:11,200
It is something where you really need to be able to template eyes or

1150
00:54:11,200 --> 00:54:11,700
something.

1151
00:54:12,300 --> 00:54:15,000
I would highly recommend not template eyes in your math classes.

1152
00:54:15,000 --> 00:54:16,900
It's just works a lot better if you don't.

1153
00:54:17,000 --> 00:54:19,400
And yeah, you might have a few cut and paste bugs, but you'll debug

1154
00:54:19,400 --> 00:54:20,200
them right away.

1155
00:54:20,500 --> 00:54:21,300
And then, you'll be done.

1156
00:54:21,400 --> 00:54:23,400
And you'll never have to think about it again, and you won't have

1157
00:54:23,400 --> 00:54:26,200
introduced templates in your code base, which causes a lot of

1158
00:54:26,200 --> 00:54:29,200
problems, and their problems that people refuse to acknowledge often

1159
00:54:29,200 --> 00:54:29,900
times, but then,

1160
00:54:30,000 --> 00:54:33,800
Then you know invariably I show up on some projects.

1161
00:54:33,800 --> 00:54:35,600
I'm like, why does it take 30 minutes to compile?

1162
00:54:35,600 --> 00:54:37,900
And it's like well, it's because we use standard string and we have a

1163
00:54:37,900 --> 00:54:40,500
giant Temple ties math class and we have all this in this like, okay.

1164
00:54:40,800 --> 00:54:42,400
This was a really bad idea, right?

1165
00:54:45,200 --> 00:54:47,600
So you want to be judicious with that stuff.

1166
00:54:48,700 --> 00:54:52,800
Would it kill you to use templates here know, having one or two sets

1167
00:54:52,800 --> 00:54:55,600
of simple templates in your code is not going to hurt you.

1168
00:54:56,200 --> 00:54:57,900
You totally could template eyes this.

1169
00:54:57,900 --> 00:55:01,700
If you really wanted to, it would not ruin the world.

1170
00:55:02,400 --> 00:55:05,700
But in general, I find this a good product to not introduce templates

1171
00:55:05,700 --> 00:55:09,200
where they're not really needed because you pay a lot of costs that

1172
00:55:09,200 --> 00:55:12,100
people don't want to acknowledge, but that are very much there.

1173
00:55:12,700 --> 00:55:13,300
All right.

1174
00:55:14,800 --> 00:55:20,900
So having said that we have come to the Q and A right on time.

1175
00:55:20,900 --> 00:55:21,400
Look at that.

1176
00:55:21,400 --> 00:55:28,200
If you could when we are doing Q&A, please prefix your questions with

1177
00:55:28,200 --> 00:55:29,100
q:.

1178
00:55:30,500 --> 00:55:34,200
So I can see them and please keep them in stuff that we've done on the

1179
00:55:34,200 --> 00:55:37,000
stream or that we're going to do our sorry.

1180
00:55:37,000 --> 00:55:39,200
Could we turn on the stream or that we have done not on stuff that

1181
00:55:39,200 --> 00:55:41,900
we're going to do because that's what we're going to do.

1182
00:55:42,300 --> 00:55:44,600
We will get to and we do it right?

1183
00:55:44,600 --> 00:55:47,000
So off topic or future looking stuff.

1184
00:55:47,400 --> 00:55:50,200
Let's keep that to the priest rememory when we do off-topic stuff, but

1185
00:55:50,200 --> 00:55:51,200
for right now, let's stick to stuff.

1186
00:55:51,200 --> 00:55:52,000
We've actually done.

1187
00:55:52,300 --> 00:55:53,000
That makes sense.

1188
00:56:11,300 --> 00:56:13,000
Let's take a look.

1189
00:56:18,200 --> 00:56:22,200
Is it making a struct for HP is pre-programming?

1190
00:56:22,200 --> 00:56:22,600
A little?

1191
00:56:23,600 --> 00:56:28,000
Well, not really because, again, what I'm doing here is trying to

1192
00:56:28,000 --> 00:56:30,400
figure out the stuff that I want the engine to handle.

1193
00:56:30,700 --> 00:56:33,100
So, in some sense I have to pre program.

1194
00:56:33,200 --> 00:56:37,000
In that sense, I have to add things that I need, right?

1195
00:56:37,200 --> 00:56:40,200
That I think I'm going to need because that's the whole point of this.

1196
00:56:40,800 --> 00:56:42,700
I think I don't know if you remember, but I said

1197
00:56:43,700 --> 00:56:45,600
When we first started, what we were doing?

1198
00:56:45,800 --> 00:56:47,500
What we're in the process of doing right now.

1199
00:56:47,800 --> 00:56:50,800
Back several hours ago, I guess it would have been 20 hours ago or

1200
00:56:50,800 --> 00:56:51,600
something like that.

1201
00:56:52,300 --> 00:56:53,800
20, even 30 hours ago.

1202
00:56:54,200 --> 00:56:58,100
I said you always write their usage codes first, but the problem when

1203
00:56:58,100 --> 00:56:59,900
you're starting off when you have no engine,

1204
00:57:00,000 --> 00:57:04,200
No game is that you don't actually know what any of the usage cases

1205
00:57:04,200 --> 00:57:04,600
are.

1206
00:57:05,000 --> 00:57:07,900
And so that's where you do the experimental code stuff.

1207
00:57:08,300 --> 00:57:10,000
And so that is exactly what we're doing now.

1208
00:57:10,100 --> 00:57:13,600
And so we are our pre-programming everything we've done in the past 48

1209
00:57:13,600 --> 00:57:15,600
hours is pre-programming, right?

1210
00:57:15,600 --> 00:57:17,100
This is not the actual game code.

1211
00:57:17,100 --> 00:57:20,100
This is not the actual game, but you don't have a choice.

1212
00:57:20,600 --> 00:57:24,200
You have to do something first so you can see how it shakes out, you

1213
00:57:24,200 --> 00:57:24,800
iterate on it.

1214
00:57:24,800 --> 00:57:28,800
A bunch of times, you try to keep all of them quick and then you can

1215
00:57:28,800 --> 00:57:29,700
sort of see roughly what you

1216
00:57:30,000 --> 00:57:30,300
need.

1217
00:57:31,400 --> 00:57:35,900
So that's kind of the way that you have to do things when you're first

1218
00:57:35,900 --> 00:57:38,800
bootstrapping because you don't have the luxury of writing the use of

1219
00:57:38,800 --> 00:57:39,000
first.

1220
00:57:39,000 --> 00:57:43,600
If you don't know what the uses code looks like, right, so this is the

1221
00:57:43,600 --> 00:57:44,400
next best thing.

1222
00:57:49,300 --> 00:57:49,600
Why not?

1223
00:57:49,600 --> 00:57:52,500
Just use hit point Max equals 12, instead of dividing it into three

1224
00:57:52,500 --> 00:57:57,800
hearts and four segments, because this I feel like there's a concept

1225
00:57:57,800 --> 00:57:58,600
of segmented.

1226
00:57:58,600 --> 00:58:00,000
Heart that wants to be represented here.

1227
00:58:00,000 --> 00:58:02,900
Like when something gets poisoned you'd get poisoned, the whole heart

1228
00:58:02,900 --> 00:58:05,100
versus the individual pieces or something like that.

1229
00:58:05,100 --> 00:58:05,500
I don't know.

1230
00:58:05,500 --> 00:58:07,400
Like I said, it was just a Whimsical thing.

1231
00:58:07,400 --> 00:58:09,100
I was like, let's try it this way.

1232
00:58:09,900 --> 00:58:11,600
So you could do it the other way, as well.

1233
00:58:11,700 --> 00:58:17,100
If you intended to have each individual, segments of a heart be have

1234
00:58:17,100 --> 00:58:18,500
its own set of properties.

1235
00:58:24,700 --> 00:58:26,600
I noticed the floating head was always behind the player.

1236
00:58:26,600 --> 00:58:27,500
Are you going to do?

1237
00:58:27,500 --> 00:58:30,600
Go for a depth of her approach or Draw back to front to handle this,

1238
00:58:31,000 --> 00:58:32,100
back to front.

1239
00:58:32,100 --> 00:58:34,400
And the reason that there's a very good reason for that.

1240
00:58:34,400 --> 00:58:35,400
It's not arbitrary.

1241
00:58:35,900 --> 00:58:40,000
The reason to do back to front in this case is for two reasons.

1242
00:58:40,600 --> 00:58:45,200
One, is it increases the effective fill rate on graphics cards and

1243
00:58:45,200 --> 00:58:47,600
possibly also for us, depending on exactly how we implement the

1244
00:58:47,600 --> 00:58:48,200
renderer.

1245
00:58:49,300 --> 00:58:51,200
And so I'll explain why that is true.

1246
00:58:51,200 --> 00:58:53,200
And then there's another reason, which is better.

1247
00:58:53,900 --> 00:58:56,000
So quality, and I'll explain why that's true as well.

1248
00:58:57,300 --> 00:59:01,400
So if you imagine how a graphics card works, right?

1249
00:59:01,900 --> 00:59:05,900
A graphics card is drawing to the screen and you tell it to draw some

1250
00:59:05,900 --> 00:59:06,900
triangle, right?

1251
00:59:06,900 --> 00:59:09,300
And in the case of a Sprite, you're telling it to draw two triangles.

1252
00:59:09,300 --> 00:59:11,100
Usually what?

1253
00:59:11,100 --> 00:59:15,300
And, you know, the Sprite occupies, those two triangles like so and so

1254
00:59:15,300 --> 00:59:21,600
what it has to do now is it has to go ahead and put that into put that

1255
00:59:21,600 --> 00:59:22,200
basically

1256
00:59:24,400 --> 00:59:28,800
It needs to rasterize the triangles grab the texture, right?

1257
00:59:28,800 --> 00:59:31,500
Because this texture is out here somewhere.

1258
00:59:31,500 --> 00:59:35,700
It needs to go grab that it needs to copied in here and it needs to

1259
00:59:36,000 --> 00:59:37,800
apply it to the frame buffer, right?

1260
00:59:37,800 --> 00:59:40,200
It needs to write the pixels in just like what we're doing, but it

1261
00:59:40,200 --> 00:59:41,700
doesn't in slightly different way, obviously.

1262
00:59:42,900 --> 00:59:45,900
So, if we are to turn on z-buffering right?

1263
00:59:45,900 --> 00:59:47,900
Or as you said depth buffering, right?

1264
00:59:47,900 --> 00:59:52,000
If returning on a z-buffer, then there's two choices we can have for

1265
00:59:52,000 --> 00:59:55,400
when we turn on the z-buffer, one reason to turn on Z.

1266
00:59:55,400 --> 00:59:59,300
Buffer is what you said, which is to have it sort the objects for us.

1267
00:59:59,600 --> 00:59:59,900
So

1268
01:00:00,000 --> 01:00:05,400
Do is we say, some, we assign Z coordinates even though we're not in

1269
01:00:05,400 --> 01:00:06,100
3D.

1270
01:00:06,200 --> 01:00:09,600
We assign Z coordinates to this, this texture here, right?

1271
01:00:11,200 --> 01:00:15,000
And when we assign those z-coordinates, what we do is we say, okay,

1272
01:00:15,300 --> 01:00:20,200
when things are lower down on the screen, they get like a higher or

1273
01:00:20,200 --> 01:00:24,400
lower Z value, depending on whether we decide to make it go less than

1274
01:00:24,400 --> 01:00:27,600
or greater than in terms of the see comparison.

1275
01:00:28,200 --> 01:00:29,800
We assign it a z value to them.

1276
01:00:30,000 --> 01:00:33,400
Em and then we let the depth buffer figure out whether like this

1277
01:00:33,400 --> 01:00:36,100
bright and this bright would include each other based on their Z

1278
01:00:36,100 --> 01:00:37,500
values, right?

1279
01:00:37,700 --> 01:00:40,800
So when it draws the pixels each time on each pixel, it's checking the

1280
01:00:40,800 --> 01:00:45,900
Z value and seeing whether it should be in front of or behind now that

1281
01:00:45,900 --> 01:00:48,800
is one use of the Z buffer and that's using the z-buffer sort of as it

1282
01:00:48,800 --> 01:00:49,800
was intended, right?

1283
01:00:49,800 --> 01:00:50,500
For sorting.

1284
01:00:51,600 --> 01:00:54,700
But there's another way you can use the Z buffer and I shouldn't say

1285
01:00:54,700 --> 01:00:55,400
use it.

1286
01:00:55,400 --> 01:00:58,600
This is happening all the time whether you like it or not, but it's it

1287
01:00:58,600 --> 01:00:58,900
choose.

1288
01:00:58,900 --> 01:01:02,200
Its whether you choose to leverage it which is early out.

1289
01:01:02,400 --> 01:01:03,100
Right?

1290
01:01:04,200 --> 01:01:08,800
So basically the z-buffer, when the graphics card goes to rasterize, a

1291
01:01:08,800 --> 01:01:13,600
little chunk of pixels it goes and looks to see whether the Z values

1292
01:01:13,600 --> 01:01:15,300
that you're about to test.

1293
01:01:15,800 --> 01:01:19,400
Because you know, it's got some idea of the Min and Max for any you.

1294
01:01:19,400 --> 01:01:20,800
Let's say, I've got a right, you know.

1295
01:01:21,000 --> 01:01:23,800
Little square of pixels on to this other square of pixels.

1296
01:01:23,800 --> 01:01:25,900
Let's say it's a 4x4, right?

1297
01:01:26,900 --> 01:01:28,700
It's going to rasterize some stuff in here.

1298
01:01:29,200 --> 01:01:34,000
What it'll do is it'll grab the frame, buffers 4x4, and it knows what

1299
01:01:34,000 --> 01:01:36,400
the Min and Max of that are because it's store at the Min.

1300
01:01:36,400 --> 01:01:37,900
And Max is e, right?

1301
01:01:38,200 --> 01:01:41,900
And it knows what the Min and Max possible z's are for you as well

1302
01:01:41,900 --> 01:01:45,100
because it knows what triangle is producing this fragment and it knows

1303
01:01:45,100 --> 01:01:46,600
what the minimum maximum Z can be.

1304
01:01:46,600 --> 01:01:47,700
For at that point.

1305
01:01:48,100 --> 01:01:50,800
It can compare these two before ever touching any pixels.

1306
01:01:50,900 --> 01:01:51,300
And go.

1307
01:01:51,600 --> 01:01:56,200
Could I ever produce a z value in this thing that I'm writing?

1308
01:01:56,500 --> 01:01:59,400
That would actually be in front of this thing that's already in the

1309
01:01:59,400 --> 01:01:59,900
depth buffer.

1310
01:01:59,900 --> 01:02:03,000
If the answer is no it just skips the whole for by Forbes right off

1311
01:02:03,000 --> 01:02:07,500
the bat and it saves you a bunch of Texel grabbing and it saves you, a

1312
01:02:07,500 --> 01:02:10,200
bunch of fill rate there, right?

1313
01:02:10,400 --> 01:02:12,200
So that cuts down your memory bandwidth.

1314
01:02:13,300 --> 01:02:17,200
What that means is that if you can optimize the order in which you

1315
01:02:17,200 --> 01:02:22,300
draw to always draw from front to back anyway, right?

1316
01:02:23,800 --> 01:02:27,900
If we were always to draw from front to back, we could maximize the

1317
01:02:27,900 --> 01:02:31,200
chances that things would just, you know, if you have a giant Sprite

1318
01:02:31,200 --> 01:02:33,000
here, that included everything.

1319
01:02:33,300 --> 01:02:35,800
And then when we start drawing, things behind it, it'll never actually

1320
01:02:35,800 --> 01:02:39,200
even have to fetch the texture memory for the Sprites that were behind

1321
01:02:39,200 --> 01:02:39,500
there.

1322
01:02:39,700 --> 01:02:43,700
So it becomes much more efficient if you can do this, so we so since

1323
01:02:43,700 --> 01:02:46,200
we have just a bunch of Sprites on the screen, there aren't that many

1324
01:02:46,200 --> 01:02:48,900
of them, you know, maybe there's a thousand of them, we could sort a

1325
01:02:48,900 --> 01:02:50,600
thousand, things pretty quickly.

1326
01:02:50,900 --> 01:02:53,400
It's not like we have hundreds of thousands of or millions of

1327
01:02:53,600 --> 01:02:55,700
Angles like 3D game has were each.

1328
01:02:55,700 --> 01:02:57,100
There's lots of little facets.

1329
01:02:57,600 --> 01:02:59,900
So if we can do that sorting that would

1330
01:03:00,000 --> 01:03:03,900
Get much faster because then we know we're always fully maximizing the

1331
01:03:03,900 --> 01:03:05,800
potential for the card to early out.

1332
01:03:05,900 --> 01:03:06,600
Right?

1333
01:03:07,200 --> 01:03:10,400
So we turn on the z-buffer but we just won't use it for sorting will

1334
01:03:10,400 --> 01:03:11,600
use it for optimization.

1335
01:03:13,300 --> 01:03:13,500
Okay.

1336
01:03:13,500 --> 01:03:17,800
So the other reason to do this is for Alpha compositing, right?

1337
01:03:18,000 --> 01:03:23,900
So let's say that we basically have a we have two things, right?

1338
01:03:24,800 --> 01:03:26,500
And again, we want to draw them on top of each other.

1339
01:03:26,500 --> 01:03:28,700
So you have to imagine these two things are on top of each other,

1340
01:03:28,700 --> 01:03:29,100
right?

1341
01:03:29,100 --> 01:03:29,800
We're drawing these

1342
01:03:30,200 --> 01:03:31,100
On top of each other.

1343
01:03:31,300 --> 01:03:32,300
Here's the top one.

1344
01:03:32,700 --> 01:03:33,600
And here's the bottom one.

1345
01:03:34,100 --> 01:03:34,600
Right?

1346
01:03:35,300 --> 01:03:39,200
So, if I want to draw these two things on top of each other, what

1347
01:03:39,200 --> 01:03:44,100
happens if one of them is translucent, so it's got like a part that's

1348
01:03:44,100 --> 01:03:49,000
like, only 50% opaque and so it should be able to see this other guy

1349
01:03:49,200 --> 01:03:50,000
underneath it.

1350
01:03:50,100 --> 01:03:50,600
Right?

1351
01:03:51,300 --> 01:03:55,300
Well, if you use the, the depth buffer for sorting, then you have no

1352
01:03:55,300 --> 01:03:57,600
idea which, which order these guys come in.

1353
01:03:58,100 --> 01:03:59,800
So when you do your raster operations,

1354
01:04:00,000 --> 01:04:02,100
Are actually rendering the pixels.

1355
01:04:03,100 --> 01:04:06,400
It may be that like, you know, let's say this was red and this was

1356
01:04:06,400 --> 01:04:06,700
green.

1357
01:04:06,700 --> 01:04:09,500
So it should be a green filter dread that comes in here, right?

1358
01:04:09,500 --> 01:04:12,700
So maybe this is let's say this is our Angie.

1359
01:04:14,000 --> 01:04:14,400
What's a good?

1360
01:04:14,400 --> 01:04:15,400
What's a good way to say this?

1361
01:04:18,100 --> 01:04:19,500
Okay, here's a good way to say this.

1362
01:04:19,700 --> 01:04:20,700
So this is white.

1363
01:04:22,000 --> 01:04:22,900
Right under here.

1364
01:04:23,900 --> 01:04:27,200
And this is this is a green filter basically, so it's going to it's

1365
01:04:27,200 --> 01:04:29,900
going to take out the blue and the red channels, right?

1366
01:04:30,900 --> 01:04:34,200
So let's say we render these, right?

1367
01:04:34,200 --> 01:04:36,200
And we don't know which order they come in.

1368
01:04:36,700 --> 01:04:41,500
So it may be that when we get to rasterize this this top guy who's

1369
01:04:41,500 --> 01:04:43,200
translucent, right?

1370
01:04:43,600 --> 01:04:46,300
It may be case one.

1371
01:04:47,800 --> 01:04:53,100
Is that we have white pixels underneath us and case 2, is that we have

1372
01:04:53,100 --> 01:04:54,600
black pixels underneath us.

1373
01:04:54,900 --> 01:04:55,400
Okay?

1374
01:04:57,500 --> 01:05:01,500
We need to write one piece of rendering code, that no matter which of,

1375
01:05:01,500 --> 01:05:03,500
these happens, right?

1376
01:05:04,800 --> 01:05:08,500
In case one it produces the green filtered white.

1377
01:05:08,500 --> 01:05:10,800
So it produces a green, right?

1378
01:05:11,400 --> 01:05:15,100
And in case two, it also produces a green eventually.

1379
01:05:15,100 --> 01:05:17,700
So that when you go and draw this bottom guy later, right?

1380
01:05:17,700 --> 01:05:21,000
Because in this case, the bottom guy already got drawn in this case,

1381
01:05:21,000 --> 01:05:24,800
it didn't, when you go and draw the bottom guy, you now know that your

1382
01:05:24,800 --> 01:05:27,200
depth tests failed, right?

1383
01:05:27,600 --> 01:05:31,300
So you were behind it, but you're still going to draw because of

1384
01:05:31,300 --> 01:05:36,800
something and you need to be able to go say, oh, okay, what would this

1385
01:05:36,800 --> 01:05:39,000
guy have done filter wise?

1386
01:05:39,700 --> 01:05:43,400
Right, but now you're in trouble because you don't actually know that

1387
01:05:43,400 --> 01:05:44,600
this guy was a filter.

1388
01:05:44,600 --> 01:05:45,900
You're just looking at pixels.

1389
01:05:45,900 --> 01:05:48,100
And so you're like, oh they were black with a black if someone filled

1390
01:05:48,100 --> 01:05:48,400
them.

1391
01:05:48,800 --> 01:05:51,600
So you'd have to use the destination Alpha Channel.

1392
01:05:52,900 --> 01:05:56,300
Which is okay because obviously there is a destination Alpha channel

1393
01:05:56,500 --> 01:05:59,700
to make that determination for you and then you have to worry, okay.

1394
01:06:00,000 --> 01:06:01,400
We've got three things stacked.

1395
01:06:01,400 --> 01:06:02,200
On top of each other.

1396
01:06:02,300 --> 01:06:04,100
What do you put in the destination Alpha Channel?

1397
01:06:04,100 --> 01:06:08,200
Because maybe you got three of them stacked and this guy came first,

1398
01:06:08,200 --> 01:06:11,300
then this guy, then this guy how do you make those Blends work out?

1399
01:06:11,300 --> 01:06:13,000
It just gets to be a nightmare.

1400
01:06:13,200 --> 01:06:15,700
And in fact, I think it's an unsolvable problem.

1401
01:06:15,700 --> 01:06:18,000
Like you can't actually ever compute the right result.

1402
01:06:18,600 --> 01:06:22,500
If you always draw in the same order, no matter which way it is, you

1403
01:06:22,500 --> 01:06:24,200
can either do it with no extra storage.

1404
01:06:24,200 --> 01:06:26,000
So you don't even need us now, stationed off at all.

1405
01:06:26,000 --> 01:06:28,200
If you draw back to front, right?

1406
01:06:28,400 --> 01:06:29,900
Because if you always know that you're drawing

1407
01:06:30,000 --> 01:06:31,700
In the back things first and the front things.

1408
01:06:31,700 --> 01:06:33,000
Last, you're going in that order.

1409
01:06:33,100 --> 01:06:36,200
You can always just draw the pixels down and then when you do your

1410
01:06:36,200 --> 01:06:39,100
blend you just grab the pixels, little their blend them and write them

1411
01:06:39,100 --> 01:06:39,600
back.

1412
01:06:39,800 --> 01:06:40,800
And that just always works.

1413
01:06:41,500 --> 01:06:42,800
If you want to go front to back.

1414
01:06:42,800 --> 01:06:43,900
It's a little bit harder.

1415
01:06:44,900 --> 01:06:46,800
You need to use that destination, Alpha to store.

1416
01:06:46,800 --> 01:06:50,000
How much Alpha still available as you blend down, but it's still a

1417
01:06:50,000 --> 01:06:51,000
totally wrote operation.

1418
01:06:51,000 --> 01:06:54,000
You just grab, look at the destination Alpha, use that to do the blend

1419
01:06:54,000 --> 01:06:54,800
and then put it back.

1420
01:06:55,500 --> 01:06:58,800
So if we do our front-to-back sort we can do perfect Alpha

1421
01:06:58,800 --> 01:06:59,500
compositing,

1422
01:07:00,000 --> 01:07:03,600
And perfect early out and we'd be crazy not to, right.

1423
01:07:04,500 --> 01:07:06,700
So we never have to deal with any of this nonsense.

1424
01:07:07,700 --> 01:07:09,000
3D games, have it real hard.

1425
01:07:09,000 --> 01:07:11,400
They have to, they basically have to separate their things into

1426
01:07:11,400 --> 01:07:15,500
translucent and non translucent and sort the translucent ones and draw

1427
01:07:15,500 --> 01:07:16,600
them to separate pass.

1428
01:07:16,700 --> 01:07:17,800
It's really bad.

1429
01:07:19,200 --> 01:07:20,000
It's really bad.

1430
01:07:20,100 --> 01:07:23,000
There are some methods for order independent transparency, but none of

1431
01:07:23,000 --> 01:07:24,100
them are perfect yet.

1432
01:07:25,200 --> 01:07:26,200
They all have down signs.

1433
01:07:36,800 --> 01:07:39,600
Would it be entirely possible to completely reconstruct the current

1434
01:07:39,600 --> 01:07:41,900
code by following every episode of the series without pre-ordering the

1435
01:07:41,900 --> 01:07:42,100
game?

1436
01:07:42,100 --> 01:07:44,900
Yes, we don't do anything off stream.

1437
01:07:45,600 --> 01:07:47,300
So every last line of code.

1438
01:07:47,900 --> 01:07:49,400
There's a video of me typing it in.

1439
01:07:53,900 --> 01:07:58,900
Keep in mind that the art assets obviously are you can't recreate.

1440
01:07:58,900 --> 01:08:00,900
I mean you could try to repaint them, I guess.

1441
01:08:08,800 --> 01:08:11,500
Do you think that I as a totally new person of program, you'll be able

1442
01:08:11,500 --> 01:08:15,100
to follow along with the pace you are working at doing rapid changes

1443
01:08:15,100 --> 01:08:18,899
to the code without sometimes telling us why I think I almost always

1444
01:08:18,899 --> 01:08:21,399
try to say why I just don't explain it in detail.

1445
01:08:21,399 --> 01:08:23,200
If it's something we've already kind of talked about.

1446
01:08:23,399 --> 01:08:26,399
So, yes, I think you can.

1447
01:08:26,899 --> 01:08:31,600
If you start at day one, if you jump in right now, no, absolutely not.

1448
01:08:32,399 --> 01:08:34,700
You have to start at day one, because it's impossible for me to

1449
01:08:34,700 --> 01:08:36,600
explain everything every time.

1450
01:08:37,200 --> 01:08:38,399
We would never get anything done.

1451
01:08:38,600 --> 01:08:42,200
So I have to say once I've explained, for example, how vector addition

1452
01:08:42,200 --> 01:08:42,600
works.

1453
01:08:42,600 --> 01:08:44,000
I'm never going to mention that again.

1454
01:08:44,100 --> 01:08:47,000
I just expect that, you know, and if you didn't know, you should go

1455
01:08:47,000 --> 01:08:50,500
back to the video where we talk about it and make sure you understand

1456
01:08:50,500 --> 01:08:50,600
it.

1457
01:08:50,600 --> 01:08:50,800
Right?

1458
01:08:50,800 --> 01:08:51,899
So that's definitely true.

1459
01:08:52,500 --> 01:08:55,300
But if you actually started day one, I try to make sure that explain

1460
01:08:55,300 --> 01:08:56,600
everything at least once.

1461
01:08:56,800 --> 01:08:59,200
And if I haven't explained at least once, that's a good thing to ask

1462
01:08:59,200 --> 01:08:59,800
him to Q&A.

1463
01:09:00,000 --> 01:09:03,600
You never explained how this thing works and I'll explain it.

1464
01:09:04,399 --> 01:09:06,000
So we always plan everything at least once.

1465
01:09:12,500 --> 01:09:14,500
Is there ever going to be a moment of reflection at some point in the

1466
01:09:14,500 --> 01:09:16,899
future where you provide a somewhat high level overview of the engine

1467
01:09:16,899 --> 01:09:18,300
components we've encountered so far?

1468
01:09:18,300 --> 01:09:20,000
What they will provide and why we need them.

1469
01:09:20,200 --> 01:09:23,300
Yes, so that's exactly what we're doing right now is trying to get to

1470
01:09:23,300 --> 01:09:25,100
that moment of reflection meaning.

1471
01:09:25,300 --> 01:09:28,000
We don't know what the engine components are or what we need from

1472
01:09:28,000 --> 01:09:28,500
them.

1473
01:09:29,200 --> 01:09:32,600
Until we've actually tried making, something that does all the things

1474
01:09:32,600 --> 01:09:33,500
we might want to do.

1475
01:09:33,899 --> 01:09:35,300
So that's exactly what we're doing right now.

1476
01:09:35,700 --> 01:09:38,800
So at the end of this, which again, I think we'll still be another

1477
01:09:38,800 --> 01:09:42,100
couple weeks because we only do an hour a day, so

1478
01:09:42,300 --> 01:09:42,500
People.

1479
01:09:42,500 --> 01:09:47,300
You like, we haven't even spent a full week on prototyping, this code.

1480
01:09:48,000 --> 01:09:50,700
So, you know, you have to imagine that that's almost no time.

1481
01:09:50,700 --> 01:09:50,899
Right?

1482
01:09:50,899 --> 01:09:54,800
Like only a week's worth of programming because we did about, we did

1483
01:09:54,800 --> 01:09:59,500
about a half a week or two thirds of a week, was building a win32

1484
01:09:59,500 --> 01:10:00,000
platform layer.

1485
01:10:00,000 --> 01:10:04,400
And then the rest of the time which is sort of, you know, almost a

1486
01:10:04,400 --> 01:10:04,600
week.

1487
01:10:04,600 --> 01:10:08,400
Now, I guess not quite, I don't know how much it's been is just doing

1488
01:10:08,400 --> 01:10:10,300
this prototyping so we can see what our Engineers to do.

1489
01:10:10,400 --> 01:10:11,500
That's just not that much time.

1490
01:10:11,600 --> 01:10:12,100
So we need to give

1491
01:10:12,300 --> 01:10:12,900
A little more time.

1492
01:10:12,900 --> 01:10:14,400
So we can get all the pieces in place.

1493
01:10:15,000 --> 01:10:17,500
And once we see what they all are, then we will definitely do that.

1494
01:10:17,500 --> 01:10:17,800
Where we'll go.

1495
01:10:17,800 --> 01:10:18,000
Okay.

1496
01:10:18,000 --> 01:10:19,300
Let's see what we got.

1497
01:10:19,600 --> 01:10:22,400
And let's think about how we want to design the engine to do all these

1498
01:10:22,400 --> 01:10:22,800
things.

1499
01:10:35,400 --> 01:10:36,300
I think it would be really cool.

1500
01:10:36,300 --> 01:10:39,100
If you can't find a smooth scrolling room based camera combination.

1501
01:10:39,800 --> 01:10:42,300
Yeah, so, I've been kind of thinking that the screw is going, is kind

1502
01:10:42,300 --> 01:10:42,600
of nice.

1503
01:10:42,600 --> 01:10:43,300
I don't know.

1504
01:10:43,400 --> 01:10:47,500
So, what we may do is something like Outdoors, it's smooth scrolling.

1505
01:10:47,800 --> 01:10:49,500
But indoors, it's room, based.

1506
01:10:50,200 --> 01:10:53,300
I want really want to have rooms because I like rooms.

1507
01:10:53,300 --> 01:10:56,600
I really want to have screen locked rooms because I really like that

1508
01:10:56,600 --> 01:10:57,300
about Zelda.

1509
01:10:57,800 --> 01:11:00,500
And so maybe what we'll do is like the Overworld Scrolls, but the

1510
01:11:00,500 --> 01:11:03,000
dungeons are rooms that you fight through.

1511
01:11:03,000 --> 01:11:03,400
I don't know.

1512
01:11:03,400 --> 01:11:03,900
We'll see.

1513
01:11:04,400 --> 01:11:04,700
That's

1514
01:11:04,800 --> 01:11:05,700
You can play around with.

1515
01:11:05,700 --> 01:11:08,300
It's like I said, I want to make sure the engine handles both.

1516
01:11:08,300 --> 01:11:10,000
Just watched people can see how you do them.

1517
01:11:10,500 --> 01:11:14,200
And so so we're supporting them either way, but I'm not sure what the

1518
01:11:14,200 --> 01:11:15,800
game will actually use in the end.

1519
01:11:20,100 --> 01:11:23,500
Is the translucent things you were talking about hard to do on to DUI.

1520
01:11:23,800 --> 01:11:25,600
Do you write the UI in the same Z buffer?

1521
01:11:25,600 --> 01:11:26,700
Or is it separate?

1522
01:11:27,200 --> 01:11:30,900
So usually you I is easier to sort because again, you kind of know

1523
01:11:30,900 --> 01:11:33,800
exactly the order it should be drawn in already because it's already

1524
01:11:33,800 --> 01:11:34,600
structured.

1525
01:11:35,000 --> 01:11:38,400
So typically UI elements you just know like okay.

1526
01:11:38,400 --> 01:11:41,000
Here's the UI elements constructed with this goes on top of this goes

1527
01:11:41,000 --> 01:11:41,800
on top of that.

1528
01:11:42,100 --> 01:11:47,400
So typically you don't really need the z-buffer at all when you're

1529
01:11:47,400 --> 01:11:48,300
doing UI.

1530
01:11:49,300 --> 01:11:50,400
You would only use it.

1531
01:11:50,400 --> 01:11:54,000
Like I was saying, same thing for here, where you would use it for

1532
01:11:54,000 --> 01:11:57,300
acceleration, only you wouldn't probably need it for sorting.

1533
01:12:07,900 --> 01:12:09,100
Let's see.

1534
01:12:09,200 --> 01:12:12,700
I don't see any other questions related to stuff.

1535
01:12:12,700 --> 01:12:13,600
We've done.

1536
01:12:18,600 --> 01:12:20,100
so, I think

1537
01:12:22,000 --> 01:12:23,600
Well, we may be done early this morning.

1538
01:12:24,000 --> 01:12:25,500
Everyone can go get breakfast.

1539
01:12:27,500 --> 01:12:28,200
It would seem

1540
01:12:31,500 --> 01:12:33,000
And by the way, looking at the chat there.

1541
01:12:33,000 --> 01:12:34,400
Yes, I agree with Garland.

1542
01:12:34,400 --> 01:12:36,500
Oh, Bloom, I think scrolling rooms are a bad idea.

1543
01:12:36,700 --> 01:12:38,100
I liked, I liked locked rooms.

1544
01:12:38,100 --> 01:12:38,700
Personally.

1545
01:12:38,900 --> 01:12:39,700
I shouldn't say bad idea.

1546
01:12:39,700 --> 01:12:42,800
I just don't like them, but I do like scrolling occasionally.

1547
01:12:42,800 --> 01:12:45,700
So maybe like I said, we'll have like the Overworld map scroll or

1548
01:12:45,700 --> 01:12:46,100
something.

1549
01:12:46,100 --> 01:12:46,500
I don't know.

1550
01:12:46,600 --> 01:12:47,500
We'll figure something out.

1551
01:12:52,200 --> 01:12:54,000
Will you be implementing more memory handling code?

1552
01:12:54,000 --> 01:12:58,700
And if yes, what kind of things, honestly, probably not.

1553
01:12:59,000 --> 01:13:01,000
You've seen almost all the memory management.

1554
01:13:01,000 --> 01:13:03,500
We really need to do for the for the entire shippable game.

1555
01:13:03,500 --> 01:13:05,100
The free list thing that I did.

1556
01:13:05,100 --> 01:13:08,600
The other day that took 10 seconds is mostly all I almost ever need.

1557
01:13:09,400 --> 01:13:12,300
So yeah, memory management is like a non-issue.

1558
01:13:13,100 --> 01:13:15,400
It's why I always get so confused when people talk about garbage

1559
01:13:15,400 --> 01:13:15,700
collection.

1560
01:13:15,700 --> 01:13:19,000
I'm like, what problem are you even solving in your code?

1561
01:13:19,100 --> 01:13:20,200
I have no idea.

1562
01:13:22,000 --> 01:13:24,400
Looks like stacks and free list.

1563
01:13:24,400 --> 01:13:25,000
Is it?

1564
01:13:25,200 --> 01:13:27,900
Everything in the game can be written with a sack and a free list and

1565
01:13:27,900 --> 01:13:30,800
they're trivial to implement and they're very robust and easy to use.

1566
01:13:30,900 --> 01:13:34,800
And so maybe like I guess one thing is the stack stuff.

1567
01:13:34,800 --> 01:13:37,600
I haven't really done in Earnest.

1568
01:13:37,900 --> 01:13:42,100
So you'll see me write a stack thing, especially when we do the

1569
01:13:42,100 --> 01:13:45,500
renderer, but but yeah, memory management is Trivial.

1570
01:13:45,500 --> 01:13:48,300
It's just not something you think about in a game ever and

1571
01:13:50,700 --> 01:13:55,100
Yeah, I I really just don't know why people program that way, it's

1572
01:13:55,100 --> 01:13:58,300
something and it's not like it's like only novice programmers for in

1573
01:13:58,300 --> 01:13:58,500
that way.

1574
01:13:58,500 --> 01:14:01,800
Like I see, you know, like you'll get, you know, the Unreal Engine or

1575
01:14:01,800 --> 01:14:06,400
something does, you know, like 100,000 string allocations a frame or

1576
01:14:06,400 --> 01:14:07,300
these sorts of things, right?

1577
01:14:07,400 --> 01:14:10,700
I have no idea why they program that I literally have none and those

1578
01:14:10,700 --> 01:14:12,700
are like, professional high-end programmers.

1579
01:14:13,000 --> 01:14:16,600
They obviously know what they're doing and just they just that's the

1580
01:14:16,600 --> 01:14:17,300
way they program.

1581
01:14:17,300 --> 01:14:18,400
It's really weird to me.

1582
01:14:18,400 --> 01:14:19,500
It's like so foreign.

1583
01:14:22,500 --> 01:14:23,800
So obviously, it's okay.

1584
01:14:23,800 --> 01:14:27,600
I mean you can be someone who has crazy memory management stuff going

1585
01:14:27,600 --> 01:14:28,300
on every frame.

1586
01:14:28,300 --> 01:14:31,200
I just, it's causes so many headaches.

1587
01:14:31,200 --> 01:14:34,500
I just don't know why you do it and it has impacts on your performance

1588
01:14:34,500 --> 01:14:36,500
and it's all this problematic stuff.

1589
01:14:36,500 --> 01:14:40,100
So, and it makes it harder to find your lie, you know, you can have

1590
01:14:40,100 --> 01:14:41,000
leaks a lot more.

1591
01:14:41,300 --> 01:14:44,100
There's a lot more potential for leaks or weird things.

1592
01:14:44,100 --> 01:14:47,600
And yeah, all I can say is, I don't understand it.

1593
01:14:48,300 --> 01:14:51,300
Because what you see me doing this dream, so far is like 50% of all,

1594
01:14:51,300 --> 01:14:51,900
the memory management.

1595
01:14:52,100 --> 01:14:52,700
I'll ever do.

1596
01:14:53,600 --> 01:14:56,100
And like I said, Stacks are the only other thing that we'll put in

1597
01:14:56,100 --> 01:14:56,700
there probably.

1598
01:14:58,900 --> 01:14:59,800
If you do a bounding.

1599
01:15:00,000 --> 01:15:02,100
Ox, which is an inset x amount of M.

1600
01:15:02,100 --> 01:15:05,800
Tiles from the room Edge, you could use the Collision of the player

1601
01:15:06,000 --> 01:15:09,000
with the bounding box to start smooth scrolling to the Next Room, Etc.

1602
01:15:11,500 --> 01:15:12,100
Yeah.

1603
01:15:12,100 --> 01:15:15,300
I mean, the thing is, I don't want the player to be able to see what's

1604
01:15:15,300 --> 01:15:17,000
in the Next Room before he enters.

1605
01:15:17,000 --> 01:15:19,600
It is why I don't want a smooth scroll rooms.

1606
01:15:20,000 --> 01:15:23,900
I want you to just snap on to the next room and be locked in like a

1607
01:15:23,900 --> 01:15:25,500
traditional Zelda Style game.

1608
01:15:25,700 --> 01:15:27,000
I want that happening.

1609
01:15:27,300 --> 01:15:29,800
So I don't want smooth scrolling in the dungeons.

1610
01:15:31,400 --> 01:15:32,200
That makes sense.

1611
01:15:37,100 --> 01:15:39,900
How will we be handling resolution variance?

1612
01:15:40,200 --> 01:15:41,800
Well, in a 2d game there's not a lot.

1613
01:15:41,800 --> 01:15:42,500
We can do.

1614
01:15:42,500 --> 01:15:48,000
I mean will run fine on 4K monitors, but our art is only at a certain

1615
01:15:48,000 --> 01:15:50,900
going to be at a certain resolution when the game ships.

1616
01:15:50,900 --> 01:15:57,000
And so I think the art maybe use me.

1617
01:15:59,000 --> 01:16:00,800
I tried to make sure that the Arts Peck.

1618
01:16:03,000 --> 01:16:04,700
Was roughly 4K safe.

1619
01:16:06,100 --> 01:16:10,400
Meaning if you're on a very beefy machine with a ton of fill rate,

1620
01:16:10,400 --> 01:16:12,700
because obviously for a Sprite game, it's all about fill rate.

1621
01:16:13,300 --> 01:16:16,800
There won't be very many polygons, you know, vertex throughput is is

1622
01:16:16,800 --> 01:16:17,700
irrelevant.

1623
01:16:17,700 --> 01:16:18,900
So it's all about memory bandwidth.

1624
01:16:18,900 --> 01:16:21,400
If you got a high memory bandwidth card and you want to play it for K.

1625
01:16:21,600 --> 01:16:24,300
I think the Arts should hold up relatively well there.

1626
01:16:24,900 --> 01:16:28,000
But again, when you do a 2-D game, you kind of just have to

1627
01:16:29,900 --> 01:16:32,800
pick some resolution, you're drawing the art at and you're not going

1628
01:16:32,800 --> 01:16:36,000
to get you can't really do anything to get better than that.

1629
01:16:36,000 --> 01:16:37,300
You know, that's just where you're at.

1630
01:16:42,000 --> 01:16:43,400
What kind of error handling logging?

1631
01:16:43,400 --> 01:16:44,300
Do you have in place now?

1632
01:16:44,300 --> 01:16:45,800
And how will that possibly change?

1633
01:16:45,900 --> 01:16:47,800
So we don't have any, we don't have that yet.

1634
01:16:47,900 --> 01:16:49,000
That will be something that we do.

1635
01:16:49,000 --> 01:16:50,300
As part of the renderer pass.

1636
01:16:50,700 --> 01:16:52,700
We have no error handling or logging.

1637
01:16:55,600 --> 01:16:58,400
If there was a little there was a like you could output debug string

1638
01:16:58,400 --> 01:16:59,700
in the win32 layer.

1639
01:16:59,700 --> 01:17:00,400
I think we did.

1640
01:17:01,400 --> 01:17:02,900
For some things, but it's not good.

1641
01:17:03,300 --> 01:17:06,500
It's not, it's just, we've just just a trivial, like, debug output

1642
01:17:06,500 --> 01:17:06,900
thing.

1643
01:17:07,700 --> 01:17:10,700
So, we will be actually doing a fair bit of that.

1644
01:17:11,000 --> 01:17:15,000
We will be implementing our own like tray system, but that's going to

1645
01:17:15,000 --> 01:17:17,400
come a little bit later down the line right now.

1646
01:17:17,400 --> 01:17:20,400
We don't really need much in the way of debugging because we're just

1647
01:17:20,400 --> 01:17:21,100
doing simple code.

1648
01:17:21,100 --> 01:17:25,500
And we're not trying to, we're not trying to make the code right now,

1649
01:17:25,500 --> 01:17:27,400
very bulletproof or anything like that either.

1650
01:17:27,400 --> 01:17:28,900
This is just sort of the test code.

1651
01:17:29,400 --> 01:17:30,500
And so

1652
01:17:31,200 --> 01:17:32,900
We really just don't need those features yet.

1653
01:17:35,800 --> 01:17:38,100
Why are strings such a problem for so many engines?

1654
01:17:38,100 --> 01:17:41,100
I have no idea, no idea.

1655
01:17:46,000 --> 01:17:49,800
How hard is it to Port a 32-bit game engine to compile a 64-bit output

1656
01:17:49,800 --> 01:17:50,100
client?

1657
01:17:50,100 --> 01:17:56,900
If the original game splits executables to support to surpass the for

1658
01:17:56,900 --> 01:17:58,100
Gig cap?

1659
01:18:01,600 --> 01:18:05,200
Splits executables to suppress the forged cap.

1660
01:18:05,900 --> 01:18:06,900
Who does that?

1661
01:18:07,800 --> 01:18:09,300
Is that a thing that people do?

1662
01:18:11,700 --> 01:18:13,800
What games split executables to.

1663
01:18:13,800 --> 01:18:16,100
So that they can have more than four gigs total allocated?

1664
01:18:17,200 --> 01:18:18,200
I'm interested to know.

1665
01:18:19,200 --> 01:18:20,300
I've never heard of that.

1666
01:18:30,400 --> 01:18:33,000
Zelda had scrolling when you transition between rooms are going to

1667
01:18:33,000 --> 01:18:33,800
have something similar.

1668
01:18:33,900 --> 01:18:35,800
No, I wanted it.

1669
01:18:35,800 --> 01:18:38,200
Like I said, Binding of Isaac style, where you come into a room, you

1670
01:18:38,200 --> 01:18:41,700
just see that room instantly and it's like, you're locked in it.

1671
01:18:48,600 --> 01:18:51,000
Would you mind giving a brief walkthrough of the memory management

1672
01:18:51,000 --> 01:18:54,200
going on right now in the code from the from the game boots and

1673
01:18:54,200 --> 01:18:54,800
forward?

1674
01:18:55,400 --> 01:18:56,800
Yeah, it's really very simple.

1675
01:18:57,000 --> 01:18:58,700
We allocate one block of memory.

1676
01:18:59,100 --> 01:19:00,800
So if you look inside,

1677
01:19:01,900 --> 01:19:03,100
well, I just draw a diagram.

1678
01:19:06,900 --> 01:19:10,100
So what happens on boot is we basically allocate a giant block of

1679
01:19:10,100 --> 01:19:11,600
memory, right?

1680
01:19:11,600 --> 01:19:14,400
And right now we haven't really given any thought to how big we want

1681
01:19:14,400 --> 01:19:18,700
to be like, basically, this is the the, the memory requirement for the

1682
01:19:18,700 --> 01:19:19,200
game.

1683
01:19:21,600 --> 01:19:25,200
So if we say that the game requires 2 GB to play, let's say, then this

1684
01:19:25,200 --> 01:19:28,400
is going to be a 2 gigabyte block and that's what the game will run

1685
01:19:28,400 --> 01:19:29,400
in, right?

1686
01:19:29,800 --> 01:19:30,900
It's really gonna be a little less than that.

1687
01:19:30,900 --> 01:19:33,600
So if we say that the game is, you know, two gigs to play, then it

1688
01:19:33,600 --> 01:19:35,100
would be a 1.5 GB block.

1689
01:19:35,100 --> 01:19:36,400
We'd leave some room for you.

1690
01:19:36,400 --> 01:19:39,200
Obviously, so everybody that is that's what happens.

1691
01:19:40,100 --> 01:19:45,500
And then what happens is the game itself basically uses that memory in

1692
01:19:45,500 --> 01:19:47,400
this going to partition it right now.

1693
01:19:47,400 --> 01:19:48,400
We have it split.

1694
01:19:48,400 --> 01:19:50,900
There's a transient section and a

1695
01:19:51,100 --> 01:19:51,500
Action.

1696
01:19:52,800 --> 01:19:55,800
And I haven't really talked about what those are going to be for yet.

1697
01:19:56,400 --> 01:20:00,000
So I'll leave out that discussion for now because that's coming later

1698
01:20:00,700 --> 01:20:01,300
for right now.

1699
01:20:01,300 --> 01:20:04,500
We're dealing with this section, only the permanent section for the

1700
01:20:04,500 --> 01:20:04,800
game.

1701
01:20:04,800 --> 01:20:06,600
Basically, all it does is it sticks.

1702
01:20:06,600 --> 01:20:09,300
All the stuff that needs into the permanent section.

1703
01:20:09,400 --> 01:20:14,000
So, you know the entities go in here or whatever and the tile chunks,

1704
01:20:14,300 --> 01:20:14,800
right?

1705
01:20:15,000 --> 01:20:18,200
And basically, there's just an arena which just pushes things on here

1706
01:20:19,200 --> 01:20:22,500
and right now, nothing ever gets Freed at the

1707
01:20:24,600 --> 01:20:27,200
Except for tile chunk occupancy.

1708
01:20:28,000 --> 01:20:33,400
So basically, like tile chunks can have an entity like can store like

1709
01:20:33,400 --> 01:20:36,500
entities that are in them and those can grow or Shrink.

1710
01:20:36,500 --> 01:20:39,200
And so sometimes you don't need as much space for a child trunk.

1711
01:20:39,400 --> 01:20:45,400
So we have one free list, which is like a free list for for entity,

1712
01:20:45,800 --> 01:20:47,400
occupancy, child shock.

1713
01:20:49,800 --> 01:20:53,400
Which just points into wherever the first free one is and those are

1714
01:20:53,400 --> 01:20:54,400
daisy-chained together.

1715
01:20:54,500 --> 01:20:56,800
So whenever you want to get a new one, you just grab it off of this

1716
01:20:56,800 --> 01:20:57,400
free list.

1717
01:20:58,200 --> 01:20:59,200
That's all we do.

1718
01:21:00,700 --> 01:21:03,400
As we go forward, it will not get much more complicated than this.

1719
01:21:03,700 --> 01:21:07,900
The transient section will basically be about storing Stacks that we

1720
01:21:07,900 --> 01:21:09,100
use for computation.

1721
01:21:10,900 --> 01:21:19,200
And for storing assets like sound that can be reloaded in anytime and

1722
01:21:19,200 --> 01:21:22,800
so don't have to persist and that's it.

1723
01:21:23,700 --> 01:21:25,900
Like I said, memory management is a non-issue.

1724
01:21:29,600 --> 01:21:34,500
Especially if you're making a game that's 2D, but even if you're

1725
01:21:34,500 --> 01:21:37,000
making a game the 3D really it's just it's just a non-issue.

1726
01:21:38,000 --> 01:21:40,000
It is not something you should think about.

1727
01:21:40,000 --> 01:21:43,400
It is something that should be really obvious exactly how it works and

1728
01:21:43,400 --> 01:21:46,200
basically free list and stocks should get you everything you need.

1729
01:21:46,200 --> 01:21:49,600
And that basically gets you essentially allocation list.

1730
01:21:49,700 --> 01:21:52,000
Meaning there's no work done per allocation.

1731
01:21:52,000 --> 01:21:55,200
There's like one if there's like an F on a pointer to see if there's

1732
01:21:55,200 --> 01:21:56,300
something in the free list.

1733
01:21:56,400 --> 01:21:58,700
That's all you should need like if an increment

1734
01:21:59,600 --> 01:22:01,300
That's your entire memory allocator.

1735
01:22:01,800 --> 01:22:04,700
And if you're doing something more complicated than that, I would love

1736
01:22:04,700 --> 01:22:07,700
to see the reason because I don't know what it would be.

1737
01:22:08,200 --> 01:22:11,300
I've rarely come across the thing that you can't Implement in this

1738
01:22:11,300 --> 01:22:11,600
way.

1739
01:22:22,100 --> 01:22:26,300
Why is it impossible to resize a raster image?

1740
01:22:26,500 --> 01:22:30,100
And why does everything have to be rasterized for drawing?

1741
01:22:30,700 --> 01:22:33,200
Why can't textures be vector-based?

1742
01:22:34,000 --> 01:22:35,900
Well, textures can't be Vector.

1743
01:22:35,900 --> 01:22:38,600
B Vector based by definition because they are.

1744
01:22:39,800 --> 01:22:43,400
You know, a texture by definition is a storage set of pixels.

1745
01:22:44,000 --> 01:22:48,900
But if you're asking why you can't have vector-based stuff, you can if

1746
01:22:48,900 --> 01:22:53,700
you want to the problem is its lower, right?

1747
01:22:53,700 --> 01:22:55,000
I mean that's that's the problem.

1748
01:22:55,000 --> 01:22:56,900
If you want an equal amount of fidelity.

1749
01:22:57,100 --> 01:23:01,600
The number of vector elements in, there is very, very high, but you

1750
01:23:01,600 --> 01:23:05,300
can rasterize those on the graphics card if you want to using stencil

1751
01:23:05,300 --> 01:23:05,700
buffer.

1752
01:23:05,700 --> 01:23:09,500
And so on the real problem, a lot of the

1753
01:23:10,300 --> 01:23:13,200
With rasterization is the fill region definition.

1754
01:23:13,600 --> 01:23:18,000
So typically, if you have artists want to actually do vector-based

1755
01:23:18,000 --> 01:23:21,300
stuff, they create bezier curves, right?

1756
01:23:22,300 --> 01:23:25,900
That are defining the boundary of something and those curves are

1757
01:23:25,900 --> 01:23:27,200
typically concave.

1758
01:23:27,400 --> 01:23:31,100
So you have to first probably processing to be convex if you want it

1759
01:23:31,100 --> 01:23:35,100
to be fast and then you need to triangulate these.

1760
01:23:35,100 --> 01:23:38,700
If you want it to be fast and to some certain level of tessellation

1761
01:23:38,900 --> 01:23:39,500
and then you need to add.

1762
01:23:39,600 --> 01:23:42,700
Add fins for anti-aliasing on the edges unless you want to use multi

1763
01:23:42,700 --> 01:23:43,800
sample, blah, blah blah.

1764
01:23:43,900 --> 01:23:47,000
Whereas textures are just you have the image and all you have to do is

1765
01:23:47,000 --> 01:23:48,200
sample from it and draw.

1766
01:23:48,600 --> 01:23:53,000
So you can draw a lot more textures, a lot more quickly than you can

1767
01:23:54,000 --> 01:23:56,400
Vector images, because they're just a lot more processing for the same

1768
01:23:56,400 --> 01:23:58,000
amount of fidelity that has to happen.

1769
01:23:58,200 --> 01:23:59,800
So anything that uses

1770
01:24:00,000 --> 01:24:02,700
Actors will be way slower than something that uses textures for the

1771
01:24:02,700 --> 01:24:03,600
same resolution.

1772
01:24:03,800 --> 01:24:06,200
And so you have to really get something back from it.

1773
01:24:06,200 --> 01:24:09,500
You have to really want that resizing and most of the time, you don't

1774
01:24:09,500 --> 01:24:10,700
really want that resizing.

1775
01:24:10,700 --> 01:24:14,500
It's not really that relevant because normally monitor resolution

1776
01:24:14,500 --> 01:24:17,400
doesn't increase that much overtime.

1777
01:24:19,100 --> 01:24:24,500
You know, how long has it been since and we you know to get from 1920

1778
01:24:24,500 --> 01:24:26,900
by 1080 to the 4K.

1779
01:24:27,000 --> 01:24:28,000
It's not even here yet.

1780
01:24:28,000 --> 01:24:29,500
Like most people don't have that.

1781
01:24:31,000 --> 01:24:33,500
It's been its many, many, many, many years.

1782
01:24:33,800 --> 01:24:37,900
So it's unclear why you really would want to ship the game that looked

1783
01:24:37,900 --> 01:24:39,300
worse, because it was in Vector.

1784
01:24:39,300 --> 01:24:42,200
Just so you could rescale it later because it will look worse because

1785
01:24:42,200 --> 01:24:45,600
you'll just have you'll be able to do less with these right?

1786
01:24:46,000 --> 01:24:47,900
You just have you just have less horsepower.

1787
01:24:53,000 --> 01:24:58,000
Couldn't rebuild handmade CPP and win32 handmade CPP in separate

1788
01:24:58,000 --> 01:24:58,900
threads.

1789
01:24:59,200 --> 01:25:04,500
Is there a way to pipe the error messages in a sane way using the

1790
01:25:04,500 --> 01:25:07,500
build bat approach.

1791
01:25:10,600 --> 01:25:12,500
Oh, so you just want to Billow?

1792
01:25:12,500 --> 01:25:17,100
Okay, you want to like build and not wait for one build and then build

1793
01:25:17,300 --> 01:25:20,700
the other thing because, yeah, you could totally do that.

1794
01:25:22,800 --> 01:25:23,900
I just don't know why we would.

1795
01:25:23,900 --> 01:25:26,900
Our build time is our turnaround time.

1796
01:25:27,200 --> 01:25:30,500
We don't care how long it takes to build the win32 one.

1797
01:25:30,900 --> 01:25:34,200
Most of the time, we only cuz we don't ever touch it.

1798
01:25:34,300 --> 01:25:37,100
So we only really care how long it takes to build the first one.

1799
01:25:37,300 --> 01:25:40,400
So, I don't know that building a multiple threads actually it would if

1800
01:25:40,400 --> 01:25:43,600
anything would hurt us because it would increase the disk bandwidth at

1801
01:25:43,600 --> 01:25:46,400
the same time that we're trying to do the compiled of the thing we

1802
01:25:46,400 --> 01:25:47,500
actually care about.

1803
01:25:47,800 --> 01:25:50,000
So I think we don't want to do that would be my answer.

1804
01:25:50,100 --> 01:25:51,300
But yeah, you probably could

1805
01:25:58,700 --> 01:26:00,600
SWTOR.

1806
01:26:01,600 --> 01:26:04,900
Does it talking about the 32-bit splits into two separate processes?

1807
01:26:06,200 --> 01:26:10,400
SWTOR Star Wars the Old Republic?

1808
01:26:10,500 --> 01:26:11,100
Okay.

1809
01:26:13,100 --> 01:26:14,800
So it splits up into two separate processes.

1810
01:26:14,800 --> 01:26:16,100
Got that's really odd.

1811
01:26:17,300 --> 01:26:18,800
I've never heard of that technique.

1812
01:26:18,800 --> 01:26:21,800
I mean it make when you say it, I'm like, okay, I see how you would do

1813
01:26:21,800 --> 01:26:22,100
that.

1814
01:26:22,100 --> 01:26:25,000
You, you know, you're trying to basically have more memory.

1815
01:26:25,000 --> 01:26:28,300
So you're sort of your sort of implementing your own address,

1816
01:26:28,300 --> 01:26:30,500
windowing extensions, at that point.

1817
01:26:32,400 --> 01:26:34,100
Doesn't sound like a very good idea to me.

1818
01:26:34,100 --> 01:26:38,700
I think you just want to stream more intelligently, but maybe I don't

1819
01:26:38,700 --> 01:26:38,800
know.

1820
01:26:38,800 --> 01:26:39,900
Maybe they had a good reason.

1821
01:26:39,900 --> 01:26:41,000
It doesn't sound.

1822
01:26:42,100 --> 01:26:46,300
Like a good idea to me, but, you know, I don't know.

1823
01:26:46,300 --> 01:26:47,300
I've never tried that.

1824
01:26:54,700 --> 01:26:58,600
Let's see, Binding of Isaac, does have scrolling between rooms albeit

1825
01:26:58,600 --> 01:26:59,800
a very quick transition.

1826
01:27:00,000 --> 01:27:00,200
Early.

1827
01:27:00,200 --> 01:27:00,600
True.

1828
01:27:00,900 --> 01:27:01,800
I didn't know that.

1829
01:27:04,500 --> 01:27:05,400
Let's find out.

1830
01:27:07,700 --> 01:27:11,000
So, if I go to northernlion?

1831
01:27:13,600 --> 01:27:14,500
Pretty much, sure.

1832
01:27:14,500 --> 01:27:16,000
I will get paid Channel visitors.

1833
01:27:16,000 --> 01:27:19,100
I'm northernlion, and I wanted to go Binding of Isaac.

1834
01:27:21,300 --> 01:27:24,900
But, of course, we have to watch ads because it's YouTube heaven

1835
01:27:24,900 --> 01:27:25,700
forfend.

1836
01:27:30,200 --> 01:27:30,500
All right.

1837
01:27:30,500 --> 01:27:32,900
Well, we'll let that go ahead and catch up while I look at other

1838
01:27:32,900 --> 01:27:33,600
questions.

1839
01:27:37,600 --> 01:27:38,900
What is the drawing app or using?

1840
01:27:38,900 --> 01:27:40,300
We are trying Mischief.

1841
01:27:40,300 --> 01:27:41,300
I have not purchased it yet.

1842
01:27:41,300 --> 01:27:45,100
I'm using the free 15 day trial or whatever, but it seems to be

1843
01:27:45,100 --> 01:27:46,800
working pretty well except for this one bug.

1844
01:27:46,800 --> 01:27:48,000
So I was going to buy it.

1845
01:27:48,000 --> 01:27:50,200
I think I like it a lot because you can do this.

1846
01:27:50,500 --> 01:27:54,400
Like, I wish we had done it from day one because we have the whole

1847
01:27:55,100 --> 01:27:58,000
diagram here which is pretty darn cool.

1848
01:27:58,300 --> 01:27:58,900
Right?

1849
01:28:00,000 --> 01:28:03,600
But so I don't know like maybe I'll try saving it and we'll just see

1850
01:28:03,600 --> 01:28:05,900
if we can have all the diagrams go together.

1851
01:28:06,000 --> 01:28:06,200
I don't know.

1852
01:28:06,200 --> 01:28:07,000
That'd be kind of fun.

1853
01:28:07,200 --> 01:28:08,200
But so I'll probably buy it.

1854
01:28:08,200 --> 01:28:10,400
It's been working out pretty well and I'll just ask them if they can

1855
01:28:10,400 --> 01:28:13,100
maybe fix that bug with the alt-tab.

1856
01:28:13,500 --> 01:28:13,700
All right.

1857
01:28:13,700 --> 01:28:15,800
So you're saying this that these Scrolls between rooms.

1858
01:28:15,800 --> 01:28:16,800
I didn't know that.

1859
01:28:18,000 --> 01:28:18,300
Wow.

1860
01:28:18,300 --> 01:28:18,700
You're right.

1861
01:28:18,700 --> 01:28:20,200
I never even noticed that.

1862
01:28:21,200 --> 01:28:24,200
All right, so maybe I do want scrolling, then I wanted it to feel like

1863
01:28:24,200 --> 01:28:24,500
that.

1864
01:28:24,500 --> 01:28:26,700
So is, I guess a quick scroll is not a problem.

1865
01:28:26,700 --> 01:28:29,000
That is, it is crazy how fast that is?

1866
01:28:29,600 --> 01:28:30,300
It's so fast.

1867
01:28:30,300 --> 01:28:31,800
I didn't even remember it was there.

1868
01:28:34,000 --> 01:28:36,700
So yeah, I'd be okay with that because I never noticed it being

1869
01:28:36,700 --> 01:28:39,200
annoying in Binding of Isaac.

1870
01:28:40,000 --> 01:28:44,700
And so, I think that as long as we kept it to that, I'd be fine with

1871
01:28:44,700 --> 01:28:45,000
it.

1872
01:28:45,200 --> 01:28:46,500
I'm totally fine with that.

1873
01:28:46,800 --> 01:28:49,300
I just don't want the player to have time to think about what's in the

1874
01:28:49,300 --> 01:28:50,900
Next Room before.

1875
01:28:51,000 --> 01:28:53,600
Were they actually have to deal with it potentially and maybe

1876
01:28:53,600 --> 01:28:54,200
sometimes I do.

1877
01:28:54,200 --> 01:28:55,700
I mean, I could, I could believe that.

1878
01:28:55,700 --> 01:28:58,800
Maybe once you go that route, maybe you get power-ups.

1879
01:28:58,800 --> 01:29:01,000
That allow you some time to look first.

1880
01:29:01,200 --> 01:29:02,300
That could actually be a thing.

1881
01:29:03,200 --> 01:29:03,800
But yeah.

1882
01:29:04,100 --> 01:29:04,600
All right.

1883
01:29:04,900 --> 01:29:05,700
Thanks for pointing that out.

1884
01:29:05,700 --> 01:29:08,200
I'll somehow, I mean, I played a lot of Binding of Isaac.

1885
01:29:08,200 --> 01:29:11,600
I didn't even never really notice that it never occurred to me, that

1886
01:29:11,600 --> 01:29:12,500
they were actually scrolling.

1887
01:29:13,400 --> 01:29:16,000
I wonder was that only in rebirth or was that in the original one as

1888
01:29:16,000 --> 01:29:16,400
well?

1889
01:29:18,000 --> 01:29:21,600
Because because I didn't really play rebirth, very much.

1890
01:29:21,800 --> 01:29:22,800
I was not a rebirth fan.

1891
01:29:22,800 --> 01:29:23,800
I like the original.

1892
01:29:26,000 --> 01:29:29,400
I don't know if I can get a video of the original Binding of Isaac,

1893
01:29:30,500 --> 01:29:31,500
not rebirth.

1894
01:29:35,200 --> 01:29:36,600
Maybe this is that.

1895
01:29:38,000 --> 01:29:39,000
Oh, the ads.

1896
01:29:39,300 --> 01:29:42,000
It's just like ad tastic in here.

1897
01:29:42,000 --> 01:29:42,900
I really want to feature.

1898
01:29:42,900 --> 01:29:45,500
I can just pay for YouTube and not have to.

1899
01:29:45,500 --> 01:29:45,800
Yes.

1900
01:29:45,800 --> 01:29:47,700
It was in both of them, which is crazy.

1901
01:29:48,200 --> 01:29:49,700
I never, I literally never way.

1902
01:29:49,700 --> 01:29:52,200
If you asked me, I would have said it didn't have that.

1903
01:29:54,400 --> 01:29:55,700
All right, so I think we're done.

1904
01:29:55,700 --> 01:29:57,700
We have we have finished up on the stream.

1905
01:29:58,400 --> 01:29:59,800
So I'm going to go ahead and wrap it up for today.

1906
01:30:00,000 --> 01:30:03,200
I wonder if we should go ahead and save our giant drawing to the

1907
01:30:03,200 --> 01:30:04,100
desktop here.

1908
01:30:04,300 --> 01:30:09,900
And we'll just say handmade diagram will save that.

1909
01:30:10,000 --> 01:30:14,300
Let's see how big that is, too, because I assume it's saving it

1910
01:30:14,300 --> 01:30:17,600
vector-based because I'm pretty sure that's how that program works.

1911
01:30:18,900 --> 01:30:20,400
So, let's see here.

1912
01:30:20,800 --> 01:30:22,000
Did I not say this to the desk?

1913
01:30:22,000 --> 01:30:22,100
There?

1914
01:30:22,100 --> 01:30:22,400
It is.

1915
01:30:22,400 --> 01:30:24,500
Okay properties.

1916
01:30:24,800 --> 01:30:25,600
So it's pretty small.

1917
01:30:25,600 --> 01:30:29,200
So we might be able to just do all the rest of the diagrams.

1918
01:30:30,000 --> 01:30:33,000
On here, maybe I should start being more careful about how I label

1919
01:30:33,000 --> 01:30:34,900
them and then we'll just tap it.

1920
01:30:35,000 --> 01:30:40,200
Like post this file somewhere for people to download because people

1921
01:30:40,200 --> 01:30:41,700
had asked about that before.

1922
01:30:43,700 --> 01:30:44,600
Yeah, I don't know.

1923
01:30:44,700 --> 01:30:47,600
Now, it seems like that's actually plausible, right?

1924
01:30:48,200 --> 01:30:48,800
All right.

1925
01:30:49,100 --> 01:30:50,600
So thank you, everyone for joining me.

1926
01:30:50,600 --> 01:30:52,800
For this morning edition of handmade hero.

1927
01:30:52,800 --> 01:30:54,200
Thank you for getting up early.

1928
01:30:54,200 --> 01:30:55,700
I know I had trouble getting up early.

1929
01:30:55,700 --> 01:30:57,400
I wasn't, I went to bed pretty late.

1930
01:30:57,400 --> 01:30:57,700
Last night.

1931
01:30:57,700 --> 01:30:58,800
It was a bit rough.

1932
01:30:58,800 --> 01:31:01,800
It's true, but I'm glad you showed up because I had fun programming

1933
01:31:01,800 --> 01:31:02,300
with you.

1934
01:31:02,700 --> 01:31:03,300
As always.

1935
01:31:03,300 --> 01:31:05,200
I'm glad we started.

1936
01:31:05,200 --> 01:31:07,100
I'm glad we added V3 and V4 s today.

1937
01:31:07,100 --> 01:31:09,300
So on Monday, I think a p.m.

1938
01:31:09,300 --> 01:31:12,200
Pacific Standard time again on Monday, for those of you who'd, like to

1939
01:31:12,200 --> 01:31:12,900
come back for next.

1940
01:31:15,000 --> 01:31:20,100
We will go ahead and finish out our V3 and V4 structs there so that we

1941
01:31:20,100 --> 01:31:24,500
can stop having to pass things around when as like a V, 2 plus Z and

1942
01:31:24,500 --> 01:31:25,200
stuff like that.

1943
01:31:25,300 --> 01:31:26,600
So I'm looking forward to cleaning that up.

1944
01:31:26,600 --> 01:31:28,600
It was bugging me and I just finally decided today.

1945
01:31:28,600 --> 01:31:29,400
We got to fix it.

1946
01:31:29,600 --> 01:31:30,300
So I did.

1947
01:31:33,600 --> 01:31:34,500
And I think that'll be good.

1948
01:31:35,300 --> 01:31:36,300
So we will continue down.

1949
01:31:36,300 --> 01:31:37,500
We've got hit points on our guy.

1950
01:31:37,500 --> 01:31:40,400
Now, we can probably add hit points to our monstar as well.

1951
01:31:41,100 --> 01:31:43,200
And then we could add some way for them to fight which I think would

1952
01:31:43,200 --> 01:31:43,500
be good.

1953
01:31:43,500 --> 01:31:46,700
And that's the sort of stuff that we need to do next week and you

1954
01:31:46,700 --> 01:31:48,500
know, maybe add a power up those sorts of things.

1955
01:31:48,500 --> 01:31:49,700
We got to start adding those things.

1956
01:31:49,700 --> 01:31:55,700
We can see how they go make that entity class really large basically.

1957
01:31:56,000 --> 01:31:59,500
Well, it's not even a it's just a bag of bits of this point.

1958
01:31:59,600 --> 01:32:01,000
Calling it a class is very high.

1959
01:32:01,000 --> 01:32:01,400
Falutin.

1960
01:32:01,400 --> 01:32:03,200
I would say RNA

1961
01:32:04,400 --> 01:32:09,200
Our entity bundle of datas and we want to start thinking about how

1962
01:32:09,200 --> 01:32:10,500
we're going to deal with that as well.

1963
01:32:10,500 --> 01:32:13,800
And so that's that's really the point that we're trying to get to

1964
01:32:14,100 --> 01:32:16,800
having a bunch of behaviors, having a bunch of data that's in there.

1965
01:32:17,000 --> 01:32:19,100
And then how are we going to start breaking that apart?

1966
01:32:19,100 --> 01:32:22,300
So we don't have to store all of the data that could possibly be for

1967
01:32:22,300 --> 01:32:26,000
every entity on every entity because that would be intractable very

1968
01:32:26,000 --> 01:32:26,500
quickly.

1969
01:32:26,500 --> 01:32:28,400
I would think so.

1970
01:32:28,400 --> 01:32:29,700
We'll see, that's the kind of stuff.

1971
01:32:29,700 --> 01:32:31,800
We need to figure out and will be figuring out next week.

1972
01:32:31,800 --> 01:32:33,100
I hope you'll come back and join us.

1973
01:32:33,400 --> 01:32:34,200
Monday p.m.

1974
01:32:34,200 --> 01:32:34,900
Pacific Standard Time.

1975
01:32:34,900 --> 01:32:36,700
Same place here on Twitch.

1976
01:32:37,500 --> 01:32:38,700
Yeah, and I hope to see you all there.

1977
01:32:38,700 --> 01:32:41,000
If you would like to follow along at home.

1978
01:32:42,200 --> 01:32:46,500
You can do so by pre-ordering the game on handmade hero dot or kit

1979
01:32:46,500 --> 01:32:47,800
comes with all the source code.

1980
01:32:47,800 --> 01:32:51,600
So every night you can go download the source code that I did that day

1981
01:32:52,000 --> 01:32:54,400
and play around with it yourself, which is kind of a handy way to

1982
01:32:54,400 --> 01:32:57,600
learn just having something you can kind of play around with and see

1983
01:32:57,600 --> 01:32:59,800
what happens is really pretty good for if your

1984
01:33:00,000 --> 01:33:02,400
Learn the concepts that we teach on the Stream.

1985
01:33:02,600 --> 01:33:04,800
So if you want to check that out, please do if you want to support the

1986
01:33:04,800 --> 01:33:05,400
video series.

1987
01:33:05,400 --> 01:33:06,300
We also have a patreon.

1988
01:33:06,300 --> 01:33:08,200
You can do that's up there.

1989
01:33:08,500 --> 01:33:10,800
We have a tweet bot that tweets the schedule.

1990
01:33:11,000 --> 01:33:14,000
So if you want to be always know what the schedule is, you can go grab

1991
01:33:14,000 --> 01:33:16,400
out there and then we also have a news and Forum site, which you can

1992
01:33:16,400 --> 01:33:17,500
check out which has good stuff.

1993
01:33:17,500 --> 01:33:20,900
You want to go view the old episode, that's got a great place to do

1994
01:33:20,900 --> 01:33:22,100
that episode guide.

1995
01:33:22,500 --> 01:33:26,100
It's got a coding resources page that Sports to Linux and Mac that

1996
01:33:26,100 --> 01:33:27,200
people have done that.

1997
01:33:27,200 --> 01:33:27,900
I highly recommend.

1998
01:33:27,900 --> 01:33:29,800
Checking out if you're trying to follow

1999
01:33:30,000 --> 01:33:32,900
Long, I different platform already, before we get to those ports,

2000
01:33:33,500 --> 01:33:34,900
people have already done.

2001
01:33:34,900 --> 01:33:38,100
So you can just grab that part of the platform layer and then follow

2002
01:33:38,100 --> 01:33:40,900
along, just like as if you were on Windows.

2003
01:33:41,300 --> 01:33:43,900
And and then finally there's a form up there.

2004
01:33:43,900 --> 01:33:46,700
So you can post questions and talk about serious, which is a great

2005
01:33:46,700 --> 01:33:49,700
place to get help from people and I answer questions there as well.

2006
01:33:50,100 --> 01:33:54,800
So yeah, definitely check it out and have a great weekend and I hope

2007
01:33:54,800 --> 01:33:55,900
to see you back here on Monday.

2008
01:33:56,100 --> 01:33:57,000
Take it easy, everyone.

