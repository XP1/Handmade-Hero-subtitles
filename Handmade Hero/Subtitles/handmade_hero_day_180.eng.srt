1
00:00:01,500 --> 00:00:04,000
Hello everyone, and welcome to handmade hero.

2
00:00:04,000 --> 00:00:11,800
The show we could complete game live on stream and, you know, one of

3
00:00:11,800 --> 00:00:14,700
the things I always say is, is no engines, no libraries because we're

4
00:00:14,700 --> 00:00:19,000
not really allowed to use any of those, but one of the things that's

5
00:00:19,000 --> 00:00:21,900
kind of annoying is that since we are programming, see, you know, we

6
00:00:21,900 --> 00:00:26,400
call the C standard library for some things and that's not necessarily

7
00:00:26,400 --> 00:00:29,800
something that we want to that we want to keep doing

8
00:00:30,400 --> 00:00:35,600
So, you know, at some point we'd like to remove even the C runtime

9
00:00:35,600 --> 00:00:39,100
Library, so we can literally be at, you know, absolutely zero

10
00:00:39,100 --> 00:00:43,600
libraries except those that you know, are actually just calling him

11
00:00:43,600 --> 00:00:46,800
the operating system like stuff that we literally can't not do

12
00:00:46,800 --> 00:00:49,000
because, you know, if you want to run a game on Windows, well, you got

13
00:00:49,000 --> 00:00:52,900
to ask Windows to open a window for you because it's Windows, right?

14
00:00:55,000 --> 00:00:59,300
So we're kind of at that point where it's like, all right, you know,

15
00:00:59,300 --> 00:01:00,000
maybe we got

16
00:01:00,100 --> 00:01:03,300
Got to take the time soon to like, actually go replace the few see

17
00:01:03,300 --> 00:01:04,300
Lauren time, Library functions.

18
00:01:04,300 --> 00:01:08,500
We're actually using, which is like a couple of math functions and

19
00:01:08,500 --> 00:01:13,400
like a string formatting because in our debug system, we were actually

20
00:01:13,400 --> 00:01:17,100
using the string formatting to print stuff out and so you know it's

21
00:01:17,100 --> 00:01:19,800
like not sure exactly what the timing of that needs to be.

22
00:01:19,800 --> 00:01:22,500
So I've been thinking about it and I think what I'd like to do is

23
00:01:22,500 --> 00:01:25,300
today since we're kind of in the middle of doing debug historical,

24
00:01:25,300 --> 00:01:25,800
debug stuff.

25
00:01:25,800 --> 00:01:30,000
I think what I'd like to do today is do a little bit of

26
00:01:30,200 --> 00:01:32,800
Work with historical debug stuff and kind of get that to an

27
00:01:32,800 --> 00:01:35,000
interesting place where we're kind of using it a little bit.

28
00:01:35,500 --> 00:01:40,200
And then next week we might go ahead and do like actually replacing RC

29
00:01:40,200 --> 00:01:41,400
runtime Library stuff.

30
00:01:44,600 --> 00:01:45,500
Like we'll just go ahead and go.

31
00:01:45,500 --> 00:01:49,700
All right, let's get the C runtime out, Library out of there.

32
00:01:49,700 --> 00:01:53,500
Let's, let's build the utility functions that we actually need because

33
00:01:53,500 --> 00:01:56,400
since the debug stuff is like kind of calling into that, as part of

34
00:01:56,400 --> 00:01:59,300
the formatting, we can do, we'll do a little print formatting for

35
00:01:59,300 --> 00:02:02,900
formatting our values and then we'll do, we'll just clean up the

36
00:02:02,900 --> 00:02:03,300
couple.

37
00:02:03,300 --> 00:02:05,300
Like, you know, I don't know what we've got in there for, like,

38
00:02:05,300 --> 00:02:12,300
flooring functions and like, sine, and cosine, and maybe

39
00:02:12,500 --> 00:02:13,600
Atan2.

40
00:02:13,600 --> 00:02:16,400
I don't know what all the ones are we actually need but basically just

41
00:02:16,400 --> 00:02:17,700
the math Library functions.

42
00:02:17,700 --> 00:02:20,400
And then the string formatting and that's all, you know, we don't use

43
00:02:20,400 --> 00:02:21,900
anything else from the C runtime Library.

44
00:02:21,900 --> 00:02:24,700
So it's actually pretty minimal but we've got to replace it at some

45
00:02:24,700 --> 00:02:25,200
point.

46
00:02:25,500 --> 00:02:25,900
Hmm.

47
00:02:26,800 --> 00:02:29,300
And that seems like probably a pretty good time to do that.

48
00:02:29,700 --> 00:02:31,600
Alright, so let's go ahead and get started.

49
00:02:31,600 --> 00:02:36,300
Today is day one, eighty and day 179.

50
00:02:36,300 --> 00:02:39,900
Source code is obviously what I'm starting with today, so if you would

51
00:02:39,900 --> 00:02:42,300
like to follow along, unpacked a 179, source code,

52
00:02:42,400 --> 00:02:44,700
Code, that is where I am at.

53
00:02:45,200 --> 00:02:47,600
So I'm going to go ahead and load this up here.

54
00:02:47,700 --> 00:02:52,700
Let's go ahead and load up a handmade sln and you can see where we

55
00:02:52,700 --> 00:02:53,700
left things off.

56
00:02:53,700 --> 00:02:57,500
You can see that we've got a little debug, sort of a debug output

57
00:02:57,500 --> 00:02:59,100
situation going on here, right?

58
00:03:00,500 --> 00:03:03,200
Where were, you know, this was kind of thing we're working on.

59
00:03:03,400 --> 00:03:06,000
We've got these like pretty Freecycle counters that we can drop in

60
00:03:06,000 --> 00:03:08,600
there now and it tells us what's going on.

61
00:03:09,300 --> 00:03:14,400
And in fact, even, you know, even just from this slight amount of

62
00:03:14,400 --> 00:03:17,600
additional debug code, you can now see when like, ground chunks are

63
00:03:17,600 --> 00:03:19,900
getting filled and stuff like that, right?

64
00:03:20,000 --> 00:03:24,200
You can see your, we're actually seeing information that before we

65
00:03:24,200 --> 00:03:25,600
wouldn't have known, right?

66
00:03:25,600 --> 00:03:29,200
Like we would not have known anything about when these these ground

67
00:03:29,200 --> 00:03:29,800
chunks were being.

68
00:03:30,100 --> 00:03:31,900
The now we know, right?

69
00:03:32,500 --> 00:03:35,100
And so, we're already kind of getting a better picture of how our

70
00:03:35,100 --> 00:03:35,900
program works.

71
00:03:36,300 --> 00:03:40,400
But like I said on the previous stream, it's still kind of hard to use

72
00:03:40,400 --> 00:03:44,100
its, you know, it gives us a little bit more insight but it's not as

73
00:03:44,100 --> 00:03:48,400
much as we would like, and we did the work yesterday of figuring out

74
00:03:48,400 --> 00:03:50,900
how to keep these things tracked over time.

75
00:03:53,500 --> 00:03:55,900
And in fact, what we're displaying here are actually the running

76
00:03:55,900 --> 00:04:01,800
average has not the absolute you know the one on any particular frame.

77
00:04:02,300 --> 00:04:05,600
So we're on our way to having sort of a much more instructive thing to

78
00:04:05,600 --> 00:04:06,200
view here.

79
00:04:06,600 --> 00:04:10,500
So what I'd like to do is I'd like to go ahead and follow that down a

80
00:04:10,500 --> 00:04:13,900
little bit, just keep going a little bit further on that and maybe

81
00:04:13,900 --> 00:04:17,899
start to make use of those of those values that we can sort of see,

82
00:04:18,000 --> 00:04:19,500
maybe a little bit of a

83
00:04:21,100 --> 00:04:24,400
For lack of a term for like a Richard, maybe a little bit of a graph

84
00:04:24,400 --> 00:04:27,000
over here or something so we could see spikes and maybe play around

85
00:04:27,000 --> 00:04:29,000
with some other sorts of things that we would like to see.

86
00:04:29,000 --> 00:04:31,200
So really just like, kind of start to take a look at, like, what could

87
00:04:31,200 --> 00:04:33,200
we do to make this a little bit more useful.

88
00:04:33,200 --> 00:04:35,200
Now that we've done the work of storing it properly, how can we

89
00:04:35,200 --> 00:04:38,300
actually display it in a useful way, right?

90
00:04:39,000 --> 00:04:42,100
So let's go ahead and

91
00:04:44,500 --> 00:04:45,000
oops.

92
00:04:46,700 --> 00:04:53,700
Open ourselves up and we made a handmade debug .h where we put this

93
00:04:53,700 --> 00:04:55,100
stuff, you know, here it is.

94
00:04:56,100 --> 00:05:01,000
But, you know, we kind of only have the very beginnings of something

95
00:05:01,000 --> 00:05:03,400
to Output this information, right?

96
00:05:03,700 --> 00:05:05,100
We update it here.

97
00:05:06,500 --> 00:05:07,400
and actually,

98
00:05:13,100 --> 00:05:14,500
We could do something interesting here.

99
00:05:16,100 --> 00:05:19,900
We could move, we could just move this stuff out.

100
00:05:20,000 --> 00:05:23,200
In fact, debug record, array counter.

101
00:05:24,300 --> 00:05:27,400
That's the only one that needs to be declared there.

102
00:05:27,400 --> 00:05:33,700
So we could in theory move, this guy, we could move this guy out so we

103
00:05:33,700 --> 00:05:37,800
can start to actually put them in the correct place, right?

104
00:05:39,300 --> 00:05:39,800
Yeah.

105
00:05:40,200 --> 00:05:43,200
So what we would need to do here is we need to start including our

106
00:05:43,200 --> 00:05:46,300
handmade debug dot CPP, somewhere, right?

107
00:05:46,700 --> 00:05:49,200
So we need to go in here and start including that and then we can

108
00:05:49,200 --> 00:05:50,600
start putting the debug code in there.

109
00:05:50,600 --> 00:05:55,100
So it's not clogging up our main file and getting us confused about

110
00:05:55,100 --> 00:05:58,000
what is like the debug code and what it's not, right?

111
00:05:58,500 --> 00:05:59,800
So I'm going to go ahead and put that up.

112
00:06:00,000 --> 00:06:00,900
Top potentially?

113
00:06:00,900 --> 00:06:02,200
I don't know where that wants to be.

114
00:06:02,200 --> 00:06:03,400
Will conceal what that later?

115
00:06:04,300 --> 00:06:05,800
But, here we go.

116
00:06:06,100 --> 00:06:09,600
So in here, this is our debug update.

117
00:06:09,800 --> 00:06:12,800
We've also got some stuff where we would want to actually draw.

118
00:06:12,800 --> 00:06:15,600
So, our drawing code, that should probably be separated out into the

119
00:06:15,600 --> 00:06:17,000
debug stuff as well.

120
00:06:17,700 --> 00:06:19,900
And that is, is all this stuff, right?

121
00:06:19,900 --> 00:06:22,600
This is the stuff that we were working with debug text line and these

122
00:06:22,600 --> 00:06:26,900
Global's and kanji kanji owl code points, of course, who can forget

123
00:06:27,000 --> 00:06:28,500
kanji, owl code points.

124
00:06:28,500 --> 00:06:29,800
And I'm just going to go ahead and grab the

125
00:06:30,000 --> 00:06:34,000
stuff and move it over so we can sort of start to to talk about this

126
00:06:34,700 --> 00:06:38,300
and look at it, you know, in a more concrete way.

127
00:06:38,700 --> 00:06:41,500
Alright, so I'm going to grab this stuff and put it over here.

128
00:06:41,600 --> 00:06:42,800
We've got this standard IO.

129
00:06:42,800 --> 00:06:44,200
This is thing as talking about the earlier.

130
00:06:44,200 --> 00:06:49,200
I'm like it would be nice to remove this and you can kind of see that.

131
00:06:49,400 --> 00:06:52,400
You know, the reason we were using it is because we have to format

132
00:06:52,400 --> 00:06:53,500
some debug information.

133
00:06:54,100 --> 00:06:55,200
So I'm going to put that.

134
00:06:55,200 --> 00:06:56,600
I'm going to put that up at the top here.

135
00:06:56,800 --> 00:06:59,700
And you know, that's the thing that I was thinking, maybe next week we

136
00:06:59,700 --> 00:06:59,800
should

137
00:07:00,000 --> 00:07:03,100
We should tackle so that we don't rely on the C runtime Library.

138
00:07:07,100 --> 00:07:07,700
because again,

139
00:07:08,900 --> 00:07:12,200
if you're not using a libraries, you might as well go Whole Hog,

140
00:07:12,300 --> 00:07:12,600
right?

141
00:07:12,600 --> 00:07:15,100
Like why use the library that's built into the language?

142
00:07:15,300 --> 00:07:17,500
If you're trying to use no libraries, we might as well not use any at

143
00:07:17,500 --> 00:07:17,800
all.

144
00:07:18,600 --> 00:07:23,300
And we can actually, we can just be even though it's the C runtime

145
00:07:23,300 --> 00:07:25,000
library and it's like, sort of built-in.

146
00:07:25,300 --> 00:07:28,400
It actually isn't like required to be built in.

147
00:07:28,500 --> 00:07:32,200
We actually will probably be able to turn it off like even on the

148
00:07:32,200 --> 00:07:35,200
build line so that it just never even gets linked into our program

149
00:07:35,500 --> 00:07:36,300
which is kind of cool.

150
00:07:37,000 --> 00:07:38,100
So you know,

151
00:07:38,800 --> 00:07:42,700
Even though it's like in theory part of the language, it's really just

152
00:07:42,700 --> 00:07:46,300
the lib that gets LinkedIn just like every other lip so you can

153
00:07:46,300 --> 00:07:49,100
actually turn it off, which is pretty cool.

154
00:07:49,300 --> 00:07:52,400
It's not like, you know, in some languages where it might be like.

155
00:07:52,400 --> 00:07:57,200
So, so welded in there where you literally can't, I mean, you could

156
00:07:57,200 --> 00:07:59,100
not call it, but it's there.

157
00:07:59,100 --> 00:08:02,700
It's like in see if we don't call it, we can actually turn it off

158
00:08:02,700 --> 00:08:03,100
completely.

159
00:08:03,100 --> 00:08:04,100
So that's kind of nice.

160
00:08:05,500 --> 00:08:10,700
All right, so let's take a look here at what we're doing right now.

161
00:08:10,700 --> 00:08:14,000
I made a thing here which sort of creates the averages over time for

162
00:08:14,000 --> 00:08:14,600
these things.

163
00:08:15,100 --> 00:08:18,800
And you know what I'd like to do is maybe just just draw a graph of

164
00:08:18,800 --> 00:08:20,900
the actual values over time, something like that.

165
00:08:21,000 --> 00:08:25,400
So I'm going to, you know, right now we don't really have much in the

166
00:08:25,400 --> 00:08:29,300
way of good utilities for this, but I'm going to try.

167
00:08:29,300 --> 00:08:33,600
I'm just going to try pushing this through the renderer as something

168
00:08:33,600 --> 00:08:34,900
where I can just draw like a bunch of

169
00:08:35,000 --> 00:08:39,000
Little rectangles where the height of the rectangle maybe is the kind

170
00:08:39,000 --> 00:08:42,799
of cost of that function over time something like that, right?

171
00:08:42,900 --> 00:08:44,000
Hopefully, that makes some sense.

172
00:08:44,400 --> 00:08:47,700
So for each counter when I go through here and I do the snapshot index

173
00:08:47,700 --> 00:08:49,100
and you know what else, the other thing I want to do?

174
00:08:49,200 --> 00:08:50,100
I don't know that.

175
00:08:50,100 --> 00:08:51,400
I don't know that.

176
00:08:51,400 --> 00:08:53,600
I like the idea of these things kind of going away.

177
00:08:54,100 --> 00:08:55,600
I think I might want them always.

178
00:08:55,600 --> 00:08:57,700
So I think what I'm going to do is even when something isn't being

179
00:08:57,700 --> 00:08:59,700
used, you know what, I might also just go ahead.

180
00:09:00,100 --> 00:09:01,000
And have that.

181
00:09:02,700 --> 00:09:06,600
You know, kind of continue to print out.

182
00:09:06,600 --> 00:09:10,000
So it looks like yeah, since this wants to the debug stuff, wants to

183
00:09:10,000 --> 00:09:11,500
be able to access the render.

184
00:09:11,500 --> 00:09:12,400
I'm going to go ahead and do that.

185
00:09:12,800 --> 00:09:17,100
Oops, the asset system I should say, go ahead and put it back down the

186
00:09:17,100 --> 00:09:18,600
bottom, okay?

187
00:09:18,600 --> 00:09:23,200
So yeah, in here, that should mean that everything, you know, all the,

188
00:09:23,200 --> 00:09:24,500
debug counters that we have.

189
00:09:24,500 --> 00:09:27,400
So now we can see, like, actually all of them even when they're at

190
00:09:27,400 --> 00:09:28,500
zero, they'll show up here.

191
00:09:28,500 --> 00:09:30,400
And that way it'll be like stable.

192
00:09:30,400 --> 00:09:32,700
And we can see the charts over time and stuff like that.

193
00:09:33,800 --> 00:09:35,700
That's the only reason I'm thinking that.

194
00:09:36,400 --> 00:09:39,300
All right, so if I want to do that, how would I do that?

195
00:09:39,300 --> 00:09:41,700
How do I draw this information?

196
00:09:41,700 --> 00:09:46,400
Well, you know, I'm trying to draw a triangle our graph here and

197
00:09:46,400 --> 00:09:52,300
obviously these values kind of have wildly different sort of heights

198
00:09:52,300 --> 00:09:54,900
that they have wildly different maximum values, right?

199
00:09:55,000 --> 00:09:59,100
Because like, let's say I'm talking about drawing the cycle count, the

200
00:09:59,100 --> 00:10:01,100
total cycle count spent in something.

201
00:10:01,400 --> 00:10:02,600
Well, the total kit cycle counts,

202
00:10:02,700 --> 00:10:03,500
Fenton something.

203
00:10:04,000 --> 00:10:06,800
It's going to be drastically different from like if it's some core

204
00:10:06,800 --> 00:10:09,300
render routine versus some like function that hardly got called at

205
00:10:09,300 --> 00:10:09,500
all.

206
00:10:09,500 --> 00:10:13,300
Right, and that isn't expensive.

207
00:10:14,000 --> 00:10:19,400
So just having some fixed scale is not going to be really that useful.

208
00:10:19,800 --> 00:10:25,400
So I think what I'll do instead write is I will take whatever the

209
00:10:25,400 --> 00:10:29,400
maximum value is because remember I have the maximum of the cycle

210
00:10:29,400 --> 00:10:30,600
count, right?

211
00:10:30,700 --> 00:10:31,600
I have

212
00:10:33,500 --> 00:10:37,000
The the maximum cycle, count for whatever counter I'm on, right?

213
00:10:37,100 --> 00:10:39,700
After I do this, these snapshots, I know what that is.

214
00:10:40,300 --> 00:10:45,900
So what I could do is I could say, oh, all right, you know what?

215
00:10:45,900 --> 00:10:48,300
Let me run through the snapshots again.

216
00:10:49,300 --> 00:10:51,000
Grab the cycle count out.

217
00:10:51,600 --> 00:10:54,300
So now I know what that, what that psycho count is supposed to be.

218
00:10:55,500 --> 00:11:01,400
And I could divide that by whatever the maximum cycle count is, right?

219
00:11:01,500 --> 00:11:04,800
So, I could just say, oh, okay, you know, assuming the maximum cycle

220
00:11:04,800 --> 00:11:09,400
count is greater than zero, then I can always take whatever the cycle

221
00:11:09,400 --> 00:11:10,800
count was that we have.

222
00:11:11,100 --> 00:11:14,300
I could divide it by like the, you know, the scale, right?

223
00:11:14,300 --> 00:11:17,700
So the scale is going to be the inverse of the cycle cap.

224
00:11:18,500 --> 00:11:19,100
Like so,

225
00:11:20,200 --> 00:11:22,700
So this is just be scale times.

226
00:11:23,900 --> 00:11:24,500
Right.

227
00:11:25,800 --> 00:11:31,200
So, if I want to do that, I can say, all right, I have the the cycle

228
00:11:31,200 --> 00:11:37,200
count I scale it, so that it will now be between 0 and 1, right?

229
00:11:37,200 --> 00:11:40,100
Because even if it was the maximum cycle count ever seen throughout

230
00:11:40,100 --> 00:11:44,800
all the snapshots, you know, it'll go, it would

231
00:11:50,700 --> 00:11:51,800
it would only hit one.

232
00:11:52,500 --> 00:11:55,900
So now I can just say, well, whatever the height is that I want the

233
00:11:55,900 --> 00:11:59,900
chart to be, I can multiply this value out right by that.

234
00:12:00,200 --> 00:12:02,200
So I can just do well.

235
00:12:02,200 --> 00:12:02,600
And you know what?

236
00:12:02,600 --> 00:12:05,800
I can just even bake that into the to the scale itself, right?

237
00:12:05,800 --> 00:12:09,700
I can just have chart height / cycle count that's going to be the

238
00:12:09,700 --> 00:12:10,500
scale, right?

239
00:12:10,500 --> 00:12:14,400
And that'll map any value in the cycle count that we've seen to the

240
00:12:14,400 --> 00:12:14,600
height.

241
00:12:14,600 --> 00:12:18,300
Now, there's something that will see when I sort of get this working

242
00:12:18,300 --> 00:12:21,500
with something that will see, that's possibly undesirable about what

243
00:12:21,500 --> 00:12:24,600
I'm doing here, but I'd rather just kind of show it to you first and

244
00:12:24,600 --> 00:12:26,900
then we can kind of decide what to do about it rather than sort of pre

245
00:12:26,900 --> 00:12:27,800
solve the problem.

246
00:12:28,600 --> 00:12:29,100
So okay.

247
00:12:30,300 --> 00:12:31,000
And maybe we'll decide.

248
00:12:31,000 --> 00:12:32,600
It's not a problem, there's also that.

249
00:12:33,400 --> 00:12:37,900
So if I go through here and we do this sort of scaling operation,

250
00:12:37,900 --> 00:12:38,500
right?

251
00:12:38,600 --> 00:12:43,000
We now have the height that any given snapshot of the cycle count how

252
00:12:43,000 --> 00:12:45,800
high that should be for our chart, right?

253
00:12:45,800 --> 00:12:49,200
So this is going to be you know, you know this height.

254
00:12:50,200 --> 00:12:53,000
And so what we want to do here is we want to draw a rectangle or

255
00:12:53,000 --> 00:12:54,000
something, right?

256
00:12:54,000 --> 00:12:55,900
We want to do a rectangle draw.

257
00:12:56,200 --> 00:12:58,700
So I'm going to take a look at our render group.

258
00:12:59,200 --> 00:12:59,900
We still have like

259
00:13:00,100 --> 00:13:01,700
Bility to push a rectangle, right?

260
00:13:02,200 --> 00:13:08,500
So, if I do a push-up, if I do a push wrecked here and yeah, I do a

261
00:13:08,500 --> 00:13:09,300
push wrecked.

262
00:13:09,400 --> 00:13:13,600
I should be able to just draw, you know, for every snapshot, I should

263
00:13:13,600 --> 00:13:15,800
be able to draw like a little bar, right?

264
00:13:15,800 --> 00:13:19,400
So it's kind of like a little bar graph going across, and I just drove

265
00:13:19,500 --> 00:13:21,100
one pixel per snapshot.

266
00:13:21,100 --> 00:13:24,300
And then, since there's, I think we said 120 snapshots from like that,

267
00:13:24,400 --> 00:13:28,700
it has to be 120 pixels wide graph of stuff, right?

268
00:13:29,500 --> 00:13:31,500
So again, really, really simple.

269
00:13:31,800 --> 00:13:36,400
We have this sort of concept of debug render stuff and so what I like

270
00:13:36,400 --> 00:13:40,800
to do is actually, you know, the debug text thing, right?

271
00:13:40,800 --> 00:13:42,500
You know this debug text line thing.

272
00:13:43,700 --> 00:13:48,000
You can quit sort of see on here that that we have a way of driving to

273
00:13:48,000 --> 00:13:48,300
my chest.

274
00:13:48,300 --> 00:13:49,000
I know what it does.

275
00:13:49,000 --> 00:13:51,700
Is it kind of cues up into that render group.

276
00:13:51,800 --> 00:13:55,400
It cues up, whatever it was that we were going to do for that

277
00:13:55,400 --> 00:13:55,900
rectangle.

278
00:13:56,300 --> 00:13:56,900
So I don't know.

279
00:13:56,900 --> 00:14:00,300
We could do something like that or we could just go ahead and push it

280
00:14:00,300 --> 00:14:01,400
directly.

281
00:14:01,400 --> 00:14:04,800
I don't know which one we want to do but I suppose we probably want to

282
00:14:04,800 --> 00:14:08,800
do something like this where we'd say, you know what, let's make sure

283
00:14:08,800 --> 00:14:12,400
that we have both of these because if we don't ever do by Brenda

284
00:14:12,400 --> 00:14:12,900
group, there's no

285
00:14:13,100 --> 00:14:18,000
Went into doing any of this display stuff and write.

286
00:14:18,400 --> 00:14:21,600
And then what we could do from there is

287
00:14:23,600 --> 00:14:26,600
Just push rectangles directly onto that render group because we know

288
00:14:26,600 --> 00:14:28,700
that render groups already in screen space and everything.

289
00:14:28,700 --> 00:14:31,400
So it's going to be really, really convenient, right?

290
00:14:31,900 --> 00:14:38,300
So in order to do that, we would want to probably do that after we

291
00:14:38,300 --> 00:14:40,100
print the text, right?

292
00:14:40,100 --> 00:14:45,100
So here's the text and then we know as well, that the text itself, if

293
00:14:45,100 --> 00:14:46,900
we wanted to put it next to the text,

294
00:14:51,000 --> 00:14:54,000
One problem with this is the text line is going to kind of Advance

295
00:14:54,000 --> 00:14:55,100
itself down.

296
00:14:56,800 --> 00:14:59,300
And so actually, I guess now, I think about it, we almost until we get

297
00:14:59,300 --> 00:14:59,800
a better look.

298
00:15:00,000 --> 00:15:02,500
Out system in here, which is something we probably want to do.

299
00:15:03,000 --> 00:15:04,600
I guess, I want to do it kind of beforehand.

300
00:15:04,600 --> 00:15:08,700
So I can sort of fake readout of the text of, I can figure out like

301
00:15:08,700 --> 00:15:13,700
where this stuff actually is in terms of lines so that that align up,

302
00:15:13,800 --> 00:15:14,400
right?

303
00:15:14,800 --> 00:15:19,600
So wherever that that Baseline for the text is that's what I actually

304
00:15:19,600 --> 00:15:20,300
want to know.

305
00:15:20,400 --> 00:15:22,200
So this at why, right?

306
00:15:22,300 --> 00:15:23,700
I want to know the at why.

307
00:15:23,700 --> 00:15:27,000
Because the at why you know this this basically tells me this the

308
00:15:27,000 --> 00:15:28,900
information that I want, right?

309
00:15:29,400 --> 00:15:29,800
This is the

310
00:15:30,000 --> 00:15:32,700
Stuff that's going to be relevant to this chart.

311
00:15:33,100 --> 00:15:41,500
So you know the chart Min Y and the chart Max y or I guess I could

312
00:15:41,500 --> 00:15:45,900
even say just the chart height the chart height should probably be the

313
00:15:45,900 --> 00:15:48,900
size of a line of text, right?

314
00:15:49,400 --> 00:15:52,300
And then the chart Min, why should probably be where the Baseline of

315
00:15:52,300 --> 00:15:54,000
the text is or something like that.

316
00:15:54,700 --> 00:15:55,600
Seems reasonable.

317
00:15:57,200 --> 00:16:02,100
And get line advance for is maybe not the most reasonable thing

318
00:16:02,600 --> 00:16:05,800
because you know, if you think about it the line advances is the whole

319
00:16:05,800 --> 00:16:06,100
line.

320
00:16:06,100 --> 00:16:10,200
I think, I probably want more like the the ascender.

321
00:16:11,700 --> 00:16:13,300
Probably want something more like this.

322
00:16:14,100 --> 00:16:17,300
So I suspect what I want is like the Ascender height should be the

323
00:16:17,300 --> 00:16:18,100
chart height.

324
00:16:18,100 --> 00:16:19,200
Something like that.

325
00:16:20,200 --> 00:16:22,900
I would suspect is a little more correct.

326
00:16:23,400 --> 00:16:23,800
Yeah.

327
00:16:24,600 --> 00:16:27,600
The problem of course that I have is, I don't actually have the font

328
00:16:27,600 --> 00:16:32,500
information at the moment, so that's something that.

329
00:16:32,900 --> 00:16:37,900
Yeah, we would need to be able to, to grab out of that, debug text

330
00:16:37,900 --> 00:16:40,400
line thing as well, and you can sort of start to see here.

331
00:16:40,400 --> 00:16:41,300
I don't know if you get this.

332
00:16:41,500 --> 00:16:45,700
Little tingling sensation but you kind of start to see here that like,

333
00:16:45,700 --> 00:16:49,300
okay, you can you can imagine how this stuff is going to start to

334
00:16:49,300 --> 00:16:52,800
collapse down a little like look at all this code you know there's way

335
00:16:52,800 --> 00:16:56,700
too much of this nonsense going on here, right?

336
00:16:56,700 --> 00:17:00,600
Like you could imagine me doing this stuff well that's tough.

337
00:17:00,600 --> 00:17:04,300
All just seems a little too boilerplate e and like if we're going to

338
00:17:04,300 --> 00:17:06,700
make a debug system where it's easy to print out stuff, we don't want

339
00:17:06,700 --> 00:17:10,000
to be like querying the font all over the place as I've so, you know,

340
00:17:10,000 --> 00:17:10,800
just kind of put that.

341
00:17:10,800 --> 00:17:11,300
I mean, in fact,

342
00:17:11,400 --> 00:17:14,599
I even put it to do here layout cash.

343
00:17:14,599 --> 00:17:16,900
Font info etc.

344
00:17:17,900 --> 00:17:19,700
For real debug display.

345
00:17:19,900 --> 00:17:22,099
You know, that's something that we're going to want to sort of push

346
00:17:22,099 --> 00:17:26,099
into going forwards, just to get a little bit better stuff happening

347
00:17:26,099 --> 00:17:26,400
there.

348
00:17:27,099 --> 00:17:31,200
Alright, so here we are down here now and we actually would have that

349
00:17:31,200 --> 00:17:35,400
font info so now we, you know, we know the Ascender height and we can

350
00:17:35,600 --> 00:17:37,100
figure out how high the chart should be.

351
00:17:37,500 --> 00:17:40,300
So when we go to to push the rectangle on

352
00:17:41,700 --> 00:17:44,200
We now have the ability to actually draw something.

353
00:17:44,200 --> 00:17:44,600
I don't know.

354
00:17:44,600 --> 00:17:50,100
I guess I'll draw something for the moment that is, is yellow, maybe

355
00:17:51,100 --> 00:17:52,600
you know, maybe I'll even do something.

356
00:17:52,600 --> 00:17:54,800
Maybe maybe I'll do something slightly different.

357
00:17:54,900 --> 00:17:59,800
Maybe, I'll even do this and and then put the chart height in

358
00:18:00,000 --> 00:18:03,100
Are so this proportion.

359
00:18:05,500 --> 00:18:10,700
Will do grass times.

360
00:18:10,700 --> 00:18:11,400
Scale.

361
00:18:11,400 --> 00:18:11,900
There we go.

362
00:18:13,100 --> 00:18:15,900
And this way, I have a number between 0 and 1.

363
00:18:16,100 --> 00:18:20,000
That is how much of the towards the maximum this particular sample

364
00:18:20,000 --> 00:18:20,500
took.

365
00:18:20,500 --> 00:18:23,800
And I'll just shove that into the red Channel and that way we'll get

366
00:18:23,800 --> 00:18:28,600
sort of a, you know, we'll get yellow when it's when it's at the max

367
00:18:28,600 --> 00:18:30,600
and green when it's at the, you know,

368
00:18:34,200 --> 00:18:35,000
When it's at the man.

369
00:18:36,600 --> 00:18:37,400
Who knows, why?

370
00:18:37,600 --> 00:18:38,200
Just because

371
00:18:39,500 --> 00:18:42,700
And so then for setting the offset in the dimensions, the dimensions

372
00:18:42,700 --> 00:18:44,500
for this thing, right?

373
00:18:44,500 --> 00:18:49,600
Are going to be like, whatever the height is and why?

374
00:18:49,900 --> 00:18:51,800
And I don't know how our rectangle routine.

375
00:18:51,800 --> 00:18:52,200
We wrote it.

376
00:18:52,200 --> 00:18:54,800
So long ago is probably a little janky, so we're going to have to play

377
00:18:54,800 --> 00:18:59,000
with that a little bit and maybe actually go make sure our rectangle

378
00:18:59,000 --> 00:19:04,300
chain is, is, you know, usable and is accurate enough to do, you know,

379
00:19:04,300 --> 00:19:05,300
per pixel stuff.

380
00:19:05,500 --> 00:19:09,000
Because it was one of the first things we wrote in probably isn't

381
00:19:09,300 --> 00:19:12,900
But anyway so in order to figure out where this thing actually goes,

382
00:19:12,900 --> 00:19:16,900
we need like you know whatever the chart left is plus the snapshot

383
00:19:16,900 --> 00:19:18,500
Index, right?

384
00:19:18,500 --> 00:19:23,000
That's going to be that's going to be the location we want to do and

385
00:19:23,000 --> 00:19:27,400
why then we've got our chart Min Y and then RZ I think we don't really

386
00:19:27,400 --> 00:19:30,400
need anything for and that should should in theory.

387
00:19:30,400 --> 00:19:31,900
Do it assuming that's an in pixel space?

388
00:19:31,900 --> 00:19:32,600
I assume.

389
00:19:33,200 --> 00:19:38,600
So we need a chart left and we don't really have any idea what that

390
00:19:38,600 --> 00:19:39,100
would be at the

391
00:19:39,200 --> 00:19:39,600
A moment.

392
00:19:39,600 --> 00:19:43,600
So I'm just going to hard code that in at the moment and we'll have to

393
00:19:43,600 --> 00:19:45,800
sort of again, this is one of the things we're talking about, we talk

394
00:19:45,800 --> 00:19:49,000
about layout, we probably want to start thinking about how to lay

395
00:19:49,000 --> 00:19:49,500
things out.

396
00:19:49,500 --> 00:19:53,500
So we can have text and charts and stuff embedded and have them sort

397
00:19:53,500 --> 00:19:55,500
of all play nicely together.

398
00:19:55,900 --> 00:19:59,300
But just for starters, for getting things working, let's start working

399
00:19:59,300 --> 00:20:01,800
with this and get something actually usable first.

400
00:20:01,800 --> 00:20:06,700
And then we can go kind of try to get a little fancier, right?

401
00:20:08,600 --> 00:20:10,900
All right, so I don't know what this is going to do.

402
00:20:12,600 --> 00:20:13,500
Let's see here.

403
00:20:13,800 --> 00:20:18,600
Oh okay, so it looks like you know, we've kind of got like heartbeat

404
00:20:18,600 --> 00:20:25,400
graphs at this point it would appear and so the dimensions are

405
00:20:25,400 --> 00:20:26,300
rectangular routine.

406
00:20:26,300 --> 00:20:29,600
It looks like it takes the center and goes out from there, which is

407
00:20:29,600 --> 00:20:32,100
actually fine for the graph, but it also means it doesn't quite line

408
00:20:32,100 --> 00:20:35,100
up with where things are, you know, what I mean?

409
00:20:35,700 --> 00:20:37,500
So that's not, you know, that's not possible.

410
00:20:37,600 --> 00:20:43,700
we the best that's that not necessarily the best idea, so there's that

411
00:20:48,900 --> 00:20:53,100
But we could fix that pretty easily so maybe we can go ahead.

412
00:20:53,100 --> 00:20:55,800
Maybe we go ahead and fix that just really quickly.

413
00:20:56,000 --> 00:20:59,800
So assuming that the rectangle is being drawn at the

414
00:21:00,000 --> 00:21:04,800
Better than what we would need to do is we would need to make the

415
00:21:04,800 --> 00:21:06,300
dimension still stays the same, right?

416
00:21:06,300 --> 00:21:09,900
But we need to offset the Min so that instead of being at the

417
00:21:09,900 --> 00:21:13,300
Baseline, it's actually up by half the height, right?

418
00:21:14,000 --> 00:21:14,500
Look, so

419
00:21:16,400 --> 00:21:19,100
And that that's, you know, that's going to be more sane.

420
00:21:19,900 --> 00:21:24,500
So now the stuff looks more like a proper bar chart, right?

421
00:21:25,000 --> 00:21:29,000
And lines up a little bit more properly with, with the, with the

422
00:21:29,000 --> 00:21:31,300
actual lines, to which they correspond.

423
00:21:31,300 --> 00:21:33,600
Now, I don't know how accurately.

424
00:21:34,300 --> 00:21:37,900
So let's go ahead and just double double check here with the kind of

425
00:21:37,900 --> 00:21:38,900
use a little ruler.

426
00:21:38,900 --> 00:21:39,200
Yeah.

427
00:21:39,200 --> 00:21:40,200
So that, that looks right.

428
00:21:40,200 --> 00:21:43,000
So I think we've got that under control

429
00:21:44,100 --> 00:21:45,800
And it's all good.

430
00:21:45,800 --> 00:21:50,800
So okay, so now we've got the ability to draw a little charts on the

431
00:21:50,800 --> 00:21:54,300
side and what you'll notice is so the thing that there's a lot of

432
00:21:54,300 --> 00:21:59,500
things to talk about now, but one thing that you'll notice is these

433
00:21:59,500 --> 00:22:03,200
charts they change their scale, right?

434
00:22:03,200 --> 00:22:07,100
They often times will change their scale and the reason that they

435
00:22:07,100 --> 00:22:12,000
change their scale is because they're using whatever the maximum value

436
00:22:12,000 --> 00:22:13,500
was for the

437
00:22:14,300 --> 00:22:17,100
You know, 120 Cycles.

438
00:22:17,300 --> 00:22:18,200
120 frames.

439
00:22:21,400 --> 00:22:22,500
And what that means.

440
00:22:23,900 --> 00:22:27,600
Is that in the case where there is some kind of a Performance Bike

441
00:22:27,700 --> 00:22:30,600
like perhaps due to like the operating system, taking some time at

442
00:22:30,600 --> 00:22:33,400
that particular moment in the code or something like this.

443
00:22:33,400 --> 00:22:35,200
Or you know, who knows what happens?

444
00:22:35,900 --> 00:22:36,500
Then?

445
00:22:36,700 --> 00:22:39,800
You know, if there's a performance bike, that will reset the scale of

446
00:22:39,800 --> 00:22:45,800
the graph for that, 120 frames, but as soon as that performance bike

447
00:22:45,800 --> 00:22:50,700
falls out of the 120 Frame Window, the scale will jump back up again.

448
00:22:51,300 --> 00:22:52,000
You know what I mean?

449
00:22:53,300 --> 00:22:56,800
So, that's why I was saying there's a little bit of drinking as to how

450
00:22:56,800 --> 00:22:57,500
this is done.

451
00:22:57,800 --> 00:23:03,000
The problem, of course is it's not really obvious how you really want

452
00:23:03,000 --> 00:23:05,700
to do this sort of thing, right?

453
00:23:07,000 --> 00:23:09,900
You know I suspect that if I sat down for a long time and thought

454
00:23:09,900 --> 00:23:13,900
about how to visualize the graphs as you know perfectly as possible we

455
00:23:13,900 --> 00:23:17,200
come up with some rules and they might be stuff like okay, like filter

456
00:23:17,200 --> 00:23:20,800
out outliers and just Mark those specially and then otherwise use the

457
00:23:20,800 --> 00:23:22,000
average and blah blah blah.

458
00:23:22,300 --> 00:23:22,800
But there's just

459
00:23:23,000 --> 00:23:23,800
These concerns there.

460
00:23:23,800 --> 00:23:27,600
Like you also can't compare the graphs to each other, the way that

461
00:23:27,600 --> 00:23:28,300
they're here.

462
00:23:28,400 --> 00:23:31,500
Because, you know, I can't tell because the scale is varying.

463
00:23:31,500 --> 00:23:34,600
I can't tell if this, you know, versus this who's taking more time.

464
00:23:34,800 --> 00:23:37,800
So there's just, you know, there's a ton of things like that that are

465
00:23:37,800 --> 00:23:43,300
reasons why this is not probably the most fabulous possible thing that

466
00:23:43,300 --> 00:23:45,400
you could do in the world, in terms of Visual Arts shade it.

467
00:23:45,400 --> 00:23:49,800
But at least you can now see that we're, you know, properly recording

468
00:23:50,700 --> 00:23:52,800
the debug data and that we can view it over time.

469
00:23:53,100 --> 00:23:56,800
Okay, and we could also say that, you know, we can, we can make this

470
00:23:56,800 --> 00:23:59,800
like bar with, you know, we could make it so simple.

471
00:24:00,000 --> 00:24:02,900
You've got room, it could actually be like 4 pixels per or something

472
00:24:02,900 --> 00:24:03,500
like that.

473
00:24:04,600 --> 00:24:08,800
So if we wanted to we could make this B bar with and then we do like

474
00:24:08,800 --> 00:24:12,800
the snapshot index times the bar with to move it over and we'd of

475
00:24:12,800 --> 00:24:17,700
course, you know, always subtract away half the bar with because

476
00:24:17,800 --> 00:24:18,600
that's the

477
00:24:21,700 --> 00:24:23,700
Actually, I guess we would add half a well, you know what?

478
00:24:23,700 --> 00:24:24,200
It doesn't matter.

479
00:24:24,200 --> 00:24:24,800
We don't care.

480
00:24:24,800 --> 00:24:27,800
Well, we would add it if we wanted to line up with the left Edge,

481
00:24:27,800 --> 00:24:30,100
which we probably would want to do for layout purposes.

482
00:24:30,200 --> 00:24:32,200
We'd have to add half the bar with, right?

483
00:24:33,700 --> 00:24:38,000
So there are some like you know a little bit fatter right a little bit

484
00:24:38,000 --> 00:24:41,400
fatter bar graphs just which are you know, maybe a little easier to

485
00:24:41,400 --> 00:24:46,100
see and you know, an off you go and so then you can kind of see the

486
00:24:46,100 --> 00:24:51,100
heartbeat going there and it's kind of entertaining if nothing else.

487
00:24:54,200 --> 00:24:57,500
And you can totally see the you should spikes as well, right?

488
00:24:58,600 --> 00:25:01,200
Look, you can see where the performance spikes are, they're pretty

489
00:25:01,200 --> 00:25:01,700
clear?

490
00:25:02,300 --> 00:25:04,400
So you know, like what was that right there?

491
00:25:04,600 --> 00:25:05,400
Who knows?

492
00:25:06,100 --> 00:25:12,000
And so, yeah, I assume I don't really know.

493
00:25:12,800 --> 00:25:16,900
But I assume that that those are things that we not, we couldn't

494
00:25:16,900 --> 00:25:20,200
really even track down and fix necessarily it.

495
00:25:20,200 --> 00:25:21,800
That might just be the sort of the

496
00:25:22,400 --> 00:25:26,600
The vagaries of trying to run something where you're on a machine

497
00:25:26,600 --> 00:25:30,100
that's running like open broadcasting system in the background, not

498
00:25:30,100 --> 00:25:30,500
sure.

499
00:25:31,000 --> 00:25:34,900
But to say the least, it's probably not the case that in general were

500
00:25:34,900 --> 00:25:39,100
actually getting the a spike that's happening because we happen to

501
00:25:39,100 --> 00:25:42,800
call, you know, begin Sim in a more expensive way on one particular

502
00:25:42,800 --> 00:25:43,000
time.

503
00:25:43,000 --> 00:25:46,600
That's, you know, that's probably not the truth but who knows

504
00:25:47,600 --> 00:25:49,600
Until we actually literally go investigate.

505
00:25:49,700 --> 00:25:51,600
It's hard to say so.

506
00:25:51,600 --> 00:25:52,000
All right.

507
00:25:52,000 --> 00:25:54,300
That's you know, that's fairly interesting.

508
00:25:54,600 --> 00:25:58,200
But what I'd like to do now is I'd like to kind of start looking at

509
00:25:58,200 --> 00:26:00,100
this in a more holistic way.

510
00:26:01,100 --> 00:26:03,700
You know, what Scott was kind of string to it's worth pointing out

511
00:26:03,700 --> 00:26:03,900
here.

512
00:26:03,900 --> 00:26:06,700
So do you see these nulls here, right?

513
00:26:07,100 --> 00:26:11,700
Those nulls are anywhere where we don't, we've never actually hit the

514
00:26:11,700 --> 00:26:15,400
performance counter because if you remember the only time that the

515
00:26:15,400 --> 00:26:17,200
performance counter actually knows

516
00:26:17,400 --> 00:26:22,200
Who actually is using that slot is if it actually gets called at least

517
00:26:22,200 --> 00:26:22,700
once.

518
00:26:23,200 --> 00:26:26,100
So, unfortunately, we'll never actually see the name show up here,

519
00:26:26,100 --> 00:26:27,500
until it actually gets called once.

520
00:26:27,500 --> 00:26:33,400
So, once I start doing some stuff right, and we actually get to, you

521
00:26:33,400 --> 00:26:37,400
know, those if we ever do, if we ever do actually get to whatever that

522
00:26:37,400 --> 00:26:38,300
thing was timing.

523
00:26:39,700 --> 00:26:42,600
Then we can actually see what the what the performance counter there

524
00:26:42,600 --> 00:26:43,100
was.

525
00:26:43,200 --> 00:26:45,500
But until then we have no idea, right?

526
00:26:45,600 --> 00:26:47,800
And that's just the nature of the way that we built the system.

527
00:26:47,800 --> 00:26:51,800
Because since we want to be very easy to drop stuff in part of that

528
00:26:51,800 --> 00:26:55,000
was that you only put code in just the one line, you know, where the

529
00:26:55,000 --> 00:26:58,300
function is it says hey let's let's put the function in here, right?

530
00:26:59,100 --> 00:26:59,600
And so we

531
00:27:00,000 --> 00:27:05,700
Decide not to display those functions because then, you know, yeah, it

532
00:27:05,700 --> 00:27:08,100
would be a little unstable as things, get added occasionally but

533
00:27:08,100 --> 00:27:11,200
otherwise it would be that they'll never go away.

534
00:27:11,700 --> 00:27:15,000
So what we could do is replace when we were doing our, if where we

535
00:27:15,300 --> 00:27:19,500
decided, you know, whether to draw, debug out for something, in

536
00:27:19,500 --> 00:27:22,600
particular, what we could do there is say all right,

537
00:27:24,100 --> 00:27:29,200
Let's go ahead and test on a counter if it's got a function named then

538
00:27:29,300 --> 00:27:33,800
we'll assume that it was actually filled in at least once, right?

539
00:27:34,300 --> 00:27:38,000
And then that way we'll only see functions that have that we actually

540
00:27:38,000 --> 00:27:42,200
have called at least one time so that their information is properly

541
00:27:42,200 --> 00:27:42,800
filled.

542
00:27:43,700 --> 00:27:44,200
Okay.

543
00:27:45,900 --> 00:27:47,200
So again, pretty simple.

544
00:27:47,400 --> 00:27:50,100
So now what I'd like to do is I'd like to go ahead

545
00:27:53,600 --> 00:27:55,200
And sort of take that concept.

546
00:27:56,600 --> 00:27:57,800
A little bit further here.

547
00:27:58,300 --> 00:28:02,800
What I'd like to do is make a sort of a stacked graph of some kind

548
00:28:03,700 --> 00:28:08,300
something that kind of shows me over time who is taking you know what

549
00:28:08,300 --> 00:28:10,700
time and in sort of a little more proportional way.

550
00:28:11,500 --> 00:28:14,700
So what I want to do is the first first thing I'm going to do is I'm

551
00:28:14,700 --> 00:28:15,900
going to go into

552
00:28:18,300 --> 00:28:24,300
That, that debug sort of debug info that like, that watermarking

553
00:28:24,300 --> 00:28:24,700
thing.

554
00:28:25,000 --> 00:28:29,100
Remember, I made this, where the platform layer passes in sort of the,

555
00:28:29,100 --> 00:28:32,200
as the stuff goes, like, what was the timing issue of, always ready?

556
00:28:32,200 --> 00:28:33,600
What was the time when the input was processed?

557
00:28:33,600 --> 00:28:35,200
What was the time when the game finished updating?

558
00:28:35,200 --> 00:28:36,600
What was the time when the auto finish up thing?

559
00:28:36,600 --> 00:28:39,000
What was the time when the frame rate was done and when did the frame

560
00:28:39,200 --> 00:28:42,000
actually do loop back around to the top?

561
00:28:43,200 --> 00:28:46,800
What I'd like to do is just save that as well as a separate set of

562
00:28:47,000 --> 00:28:48,700
Of shots, right?

563
00:28:48,800 --> 00:28:51,900
So inside handmade.

564
00:28:53,300 --> 00:28:56,600
Debug .h, where we do these sort of snapshots.

565
00:28:56,600 --> 00:28:59,800
What I want to do is make another one of those that's just sort of

566
00:28:59,800 --> 00:29:03,800
outside, which is like frame and infos.

567
00:29:04,300 --> 00:29:08,100
And that's just going to store all, you know, the same same sort of

568
00:29:08,100 --> 00:29:08,800
deal, right?

569
00:29:08,800 --> 00:29:12,200
It's going to store a snapshot one for every frame.

570
00:29:12,900 --> 00:29:17,500
And so then what I'll do is whenever we call whenever we actually get

571
00:29:17,500 --> 00:29:22,100
that, that strobe events at the end and we actually do sort of our

572
00:29:22,100 --> 00:29:22,700
update

573
00:29:22,900 --> 00:29:30,000
Debug update that I want to save a copy of that info, the comes in.

574
00:29:30,700 --> 00:29:35,800
So the other thing that I'm going to do here right is I feel like well

575
00:29:35,800 --> 00:29:38,800
I don't know I'd like to have this being here but it's pretty hard for

576
00:29:38,800 --> 00:29:40,400
that to actually be true.

577
00:29:44,200 --> 00:29:47,200
Well yeah, yeah yeah.

578
00:29:49,100 --> 00:29:52,600
What I could do is I could just put this stuff at the bottom

579
00:29:53,100 --> 00:29:53,700
Of the hammy.

580
00:29:53,700 --> 00:29:56,400
Debug thing I suppose, right?

581
00:29:56,700 --> 00:29:57,900
I could do something.

582
00:29:57,900 --> 00:29:59,500
I suppose I could do something like this.

583
00:30:00,000 --> 00:30:03,100
Now if you think this is a good idea, you might not and you might be

584
00:30:03,100 --> 00:30:05,000
right, but I'm going to try it anyway.

585
00:30:05,400 --> 00:30:07,700
And I'm going to come through here and grab him a debug.

586
00:30:09,000 --> 00:30:11,100
I'm going to go ahead and put that here.

587
00:30:11,900 --> 00:30:12,400
All right.

588
00:30:13,200 --> 00:30:19,700
And then what I will do is I'll just move the stuff that we actually

589
00:30:19,700 --> 00:30:23,900
kind of need to move out into the H file and there's some stuff in

590
00:30:23,900 --> 00:30:25,400
there that we want to take care of separately.

591
00:30:25,400 --> 00:30:27,700
Anyway, some stuff that's like some Global variables that we don't

592
00:30:27,700 --> 00:30:30,700
really want to really be actually all that Global.

593
00:30:32,000 --> 00:30:32,500
So yeah.

594
00:30:32,500 --> 00:30:33,500
So let's see here.

595
00:30:37,700 --> 00:30:42,200
Render group is Rock to render.

596
00:30:42,200 --> 00:30:49,500
People just put forward to clear that no problem font ID that will

597
00:30:49,500 --> 00:30:52,400
that one, that one doesn't really need to be there.

598
00:30:52,600 --> 00:30:57,000
In fact, it's probably only that one that really needs to be there.

599
00:30:57,500 --> 00:31:00,000
So these guys can stay here for now but we probably want to take care

600
00:31:00,000 --> 00:31:02,300
of those in a slightly different way longer term.

601
00:31:02,300 --> 00:31:06,100
Anyway, so debug reset would have to be actually put in

602
00:31:06,400 --> 00:31:08,500
Our and debug reset.

603
00:31:09,800 --> 00:31:11,300
I feel like debug reset.

604
00:31:13,300 --> 00:31:15,300
Could almost happened during the strobe as well.

605
00:31:16,800 --> 00:31:20,400
Well, I'm not going to fuss with it at the moment, but we maybe want

606
00:31:20,400 --> 00:31:22,000
to consolidate that as well either.

607
00:31:22,000 --> 00:31:25,900
There's the problem, it has to pass the buffer information in so, you

608
00:31:25,900 --> 00:31:28,500
know, maybe it makes some sense to actually do it there.

609
00:31:28,500 --> 00:31:32,700
But either way, I'm going to go ahead and put it out here so it can be

610
00:31:32,700 --> 00:31:38,800
called and game asset structure needs to be pretty clear as well.

611
00:31:42,500 --> 00:31:45,100
And lastly, overlay cycle counter.

612
00:31:45,100 --> 00:31:48,400
So this I don't think we actually want to call this overlay cycle,

613
00:31:48,400 --> 00:31:53,700
counters, what we actually want to call, this is, you know, over

614
00:31:53,700 --> 00:31:56,900
ladybug or like debug overlay, right?

615
00:31:57,300 --> 00:32:00,400
Because that's really, you know, that's really what that is.

616
00:32:00,700 --> 00:32:02,800
And so, we'll call debug overlay here.

617
00:32:03,500 --> 00:32:04,700
We'll put that in.

618
00:32:05,900 --> 00:32:08,300
So, over ladybug account, oops.

619
00:32:09,100 --> 00:32:10,000
Where is that?

620
00:32:10,000 --> 00:32:10,400
Oh, yeah.

621
00:32:10,400 --> 00:32:11,700
That is it overlays or counters.

622
00:32:12,100 --> 00:32:15,400
So, we'll call this debug overlay and that will do all of our debug

623
00:32:15,400 --> 00:32:20,500
overlay stuff and that could just leave it here and then we'll see how

624
00:32:20,500 --> 00:32:20,900
we do.

625
00:32:21,800 --> 00:32:22,300
Okay.

626
00:32:22,700 --> 00:32:24,800
And so that should have done absolutely nothing right now.

627
00:32:24,800 --> 00:32:27,100
We should just be back where we started but ready to kind of do a

628
00:32:27,100 --> 00:32:28,300
little bit more with it.

629
00:32:28,900 --> 00:32:32,600
All right, so if I come in to debug overlay, well, let me first, say

630
00:32:32,600 --> 00:32:36,100
the information, if I come in to debug frame end, if I want to do the

631
00:32:36,100 --> 00:32:38,100
snapshot capture, right?

632
00:32:38,100 --> 00:32:38,800
I can go ahead.

633
00:32:38,900 --> 00:32:40,600
Say, the debug state.

634
00:32:42,100 --> 00:32:47,300
Now made the frame and infos that snapshot is just going to be equal

635
00:32:47,300 --> 00:32:50,100
to whatever the info thing is that I got the you know, that I got

636
00:32:50,100 --> 00:32:51,600
past, right?

637
00:32:52,100 --> 00:32:58,000
So now we have a set of those that we can actually, you know, go back

638
00:32:58,000 --> 00:32:58,800
through and draw.

639
00:32:59,300 --> 00:32:59,800
So, in here,

640
00:33:00,000 --> 00:33:04,400
when we do our, you know, when we do our counter display, after we do

641
00:33:04,400 --> 00:33:11,600
all of the counter displays, we could then also put some in here where

642
00:33:11,600 --> 00:33:17,900
we draw all of the debug info is that we've been passed so here, like

643
00:33:17,900 --> 00:33:18,500
so,

644
00:33:20,100 --> 00:33:20,600
There we go.

645
00:33:26,900 --> 00:33:29,500
so, now we've got these frame end in foes

646
00:33:33,800 --> 00:33:37,400
And that's just going to be whichever one, is the snapshot that we're

647
00:33:37,400 --> 00:33:43,900
on and what I'd like to do is I'd like to draw that in sort of the

648
00:33:43,900 --> 00:33:46,700
same way that I was driving anything, but because it's got multiple

649
00:33:46,700 --> 00:33:49,600
pieces of information in it, right?

650
00:33:49,800 --> 00:33:55,300
What I'd like to do is I'd like to make that be a little clearer and

651
00:33:55,300 --> 00:33:57,500
you know what, I just realized to there's something we could do here.

652
00:33:57,500 --> 00:34:00,900
That's kind of cool because I was thinking about this before.

653
00:34:02,400 --> 00:34:06,100
Oh yeah, yeah.

654
00:34:10,199 --> 00:34:10,900
I like this.

655
00:34:11,500 --> 00:34:14,199
So I was thinking about this before and if you take a look at what

656
00:34:14,199 --> 00:34:16,800
happens here, this debug frame, info frame, an info thing.

657
00:34:17,100 --> 00:34:19,800
If you think about what's going to happen in terms of platform

658
00:34:19,800 --> 00:34:21,900
porting, this is kind of

659
00:34:23,100 --> 00:34:25,400
Specific to the win32 platform layer, right?

660
00:34:25,400 --> 00:34:29,600
We kind of the order in which these go, the order in, which these sort

661
00:34:29,600 --> 00:34:34,000
of strobe points go is very much specific to the win32 platform layer,

662
00:34:34,500 --> 00:34:37,100
and that's not necessarily something that we want, right?

663
00:34:37,100 --> 00:34:38,199
That's not necessarily

664
00:34:39,800 --> 00:34:41,000
A particularly good.

665
00:34:42,800 --> 00:34:46,000
Way to do things especially because it means that now like you know,

666
00:34:46,000 --> 00:34:49,000
if some other platform layer doesn't do things in the same order or

667
00:34:49,000 --> 00:34:53,000
doesn't do the same series of steps, this is kind of the wrong, you

668
00:34:53,000 --> 00:34:56,699
know, it's the wrong abstraction for it, right?

669
00:34:57,100 --> 00:35:01,400
So you know, a better thing to do here probably would be to have the

670
00:35:01,400 --> 00:35:07,200
debug frame and info be something that was more like, well, maybe

671
00:35:07,200 --> 00:35:08,500
something more, like,

672
00:35:10,100 --> 00:35:17,000
There's a debug frame or a debug frame, timestamp.

673
00:35:17,400 --> 00:35:21,500
And it's just like something like this, right?

674
00:35:21,500 --> 00:35:25,300
Where it's like, what's the name of this particular time stamp?

675
00:35:26,000 --> 00:35:29,400
And what's the clock at that point, right?

676
00:35:29,400 --> 00:35:30,700
This is the the seconds.

677
00:35:32,900 --> 00:35:37,400
And then what we could do when we pass this thing in, you know, is we

678
00:35:37,400 --> 00:35:41,000
could do you 32 count, right?

679
00:35:41,000 --> 00:35:43,600
And debug frame timestamp

680
00:35:45,000 --> 00:35:45,800
Timestamp.

681
00:35:50,500 --> 00:35:51,100
Like that.

682
00:35:53,700 --> 00:35:59,000
I don't know if timestamp is timestamp or timestamp.

683
00:36:00,900 --> 00:36:01,600
Does it really matter?

684
00:36:02,200 --> 00:36:05,600
And so that way you just get some time stamps, you know, you just get

685
00:36:05,600 --> 00:36:08,500
a certain number of them and you would know that that's how many you

686
00:36:08,500 --> 00:36:09,600
have total, right?

687
00:36:13,300 --> 00:36:18,100
And I suppose, one thing I could do is I could also maybe do it more

688
00:36:18,100 --> 00:36:19,000
like this.

689
00:36:20,300 --> 00:36:25,000
Where it does still get this piece of information, but that

690
00:36:25,000 --> 00:36:28,600
information actually has these in it, right?

691
00:36:28,700 --> 00:36:29,800
So I could do like,

692
00:36:32,100 --> 00:36:35,300
Timestamp count and debug frame.

693
00:36:35,300 --> 00:36:40,700
Timestamp, you know, timestamps something like that, I could do that.

694
00:36:41,800 --> 00:36:45,800
And then just have these guys, you know, are all in there and this is

695
00:36:45,800 --> 00:36:48,900
some known size thing so it doesn't have to actually it could just be

696
00:36:48,900 --> 00:36:52,400
passed as a struct or it can be an address thing.

697
00:36:52,400 --> 00:36:54,200
I don't know but we know we're not going to have that many of them.

698
00:36:54,200 --> 00:36:55,900
Anyway, so we could just have that be fixed.

699
00:36:55,900 --> 00:36:59,800
It doesn't matter that's entirely up, you know, we that we can play

700
00:36:59,800 --> 00:37:00,500
with that later.

701
00:37:01,400 --> 00:37:03,200
so if we did something like that,

702
00:37:04,400 --> 00:37:08,100
Then this guy could just print those guys out as a stock graph, as

703
00:37:08,100 --> 00:37:08,400
well.

704
00:37:09,100 --> 00:37:12,200
And then, we could also have a thing in here, which was, like, for the

705
00:37:12,200 --> 00:37:17,100
debug frame timestamp thing could have the timestamp count and an R32,

706
00:37:17,100 --> 00:37:18,500
which is like total s.

707
00:37:18,600 --> 00:37:22,000
So, like what the actual amount of time believed to have been taken on

708
00:37:22,000 --> 00:37:23,100
that frame was.

709
00:37:23,100 --> 00:37:26,600
And then we're all the time stamps were sort of along the along the

710
00:37:26,600 --> 00:37:27,900
way, right?

711
00:37:28,300 --> 00:37:33,500
And so if I did that, then what we do here is say all right,

712
00:37:33,800 --> 00:37:37,800
Here is however you know big that chart thing is going to be I don't

713
00:37:37,800 --> 00:37:40,600
know how big that's going to be but I want it, I think probably to be

714
00:37:40,600 --> 00:37:41,500
pretty high.

715
00:37:41,900 --> 00:37:44,900
So let's say it's something like 300 pixels tall or something like

716
00:37:44,900 --> 00:37:45,300
that.

717
00:37:45,600 --> 00:37:49,700
You know assuming that is 300 pixels tall as I go through here what

718
00:37:49,700 --> 00:37:54,800
I'm going to want to do is make a set of stacked bars that kind of go

719
00:37:54,800 --> 00:37:55,800
up and you know what?

720
00:37:57,900 --> 00:37:59,600
Kind of layering all these things I want to do on here.

721
00:38:00,100 --> 00:38:03,300
The other thing I'd like to do is I don't want to have to keep doing a

722
00:38:03,300 --> 00:38:03,800
rectangle.

723
00:38:03,800 --> 00:38:06,200
I don't want to have to keep doing rectangles that are about

724
00:38:06,200 --> 00:38:06,900
centering.

725
00:38:07,900 --> 00:38:10,400
I want to be able to do rectangles where I put the Min and Max Corner

726
00:38:10,400 --> 00:38:12,700
in because that's a lot.

727
00:38:12,800 --> 00:38:14,300
It's just a lot more convenient, right?

728
00:38:14,300 --> 00:38:15,300
That's a lot nicer.

729
00:38:16,000 --> 00:38:18,500
So we should probably make one of those as well but anyway, let me

730
00:38:18,500 --> 00:38:19,800
just sketch out what I'm going to do here.

731
00:38:19,800 --> 00:38:23,100
And then I'll kind of go through and fix everything that I just said

732
00:38:23,100 --> 00:38:24,000
that I wanted to have happen.

733
00:38:24,000 --> 00:38:27,600
That's not happening yet and since I'm the only one here, I'm going to

734
00:38:27,700 --> 00:38:28,600
To be the one to do it.

735
00:38:29,200 --> 00:38:31,400
So if we do this,

736
00:38:33,400 --> 00:38:36,300
What I would want to do is for this info.

737
00:38:36,300 --> 00:38:41,200
I want to go through the the timestamps right and I guess I've got

738
00:38:41,200 --> 00:38:41,500
right.

739
00:38:41,500 --> 00:38:42,100
I have that.

740
00:38:42,100 --> 00:38:46,000
I have a scale and like before, and the scale is going to be the chart

741
00:38:46,000 --> 00:38:49,800
height divided by the total s for that frame, right?

742
00:38:50,900 --> 00:38:55,000
So for any given frame, well actually you know what, this is not even

743
00:38:55,000 --> 00:38:59,500
true because this is since I want this to actually show me how long

744
00:38:59,500 --> 00:38:59,800
each frame.

745
00:39:00,200 --> 00:39:01,900
For real for reals.

746
00:39:02,300 --> 00:39:06,000
What I'd rather do is say that the total chart height is going to be

747
00:39:06,000 --> 00:39:11,700
like, you know, maybe let's say that the total charge height is

748
00:39:11,700 --> 00:39:12,700
something like

749
00:39:17,400 --> 00:39:20,300
60 milliseconds or something like this.

750
00:39:20,800 --> 00:39:24,200
Like, suppose that, you know, are really bad frame time.

751
00:39:25,000 --> 00:39:29,400
So, we've got 1,000 milliseconds, are, you know, in in a second,

752
00:39:29,600 --> 00:39:30,100
right?

753
00:39:31,000 --> 00:39:33,800
And so, if we were going to run at, like something really awful, like,

754
00:39:33,800 --> 00:39:35,200
ten frame to S, right?

755
00:39:35,400 --> 00:39:38,300
We'd have 100 milliseconds, taken up in a frame.

756
00:39:39,000 --> 00:39:40,300
And so I'm going to make the chart height.

757
00:39:40,300 --> 00:39:41,300
Be absolute.

758
00:39:41,300 --> 00:39:45,900
So it's 100 milliseconds and so if something even someone sort somehow

759
00:39:45,900 --> 00:39:47,000
we started running

760
00:39:47,200 --> 00:39:51,500
That if somehow we started running even worse than that, we would

761
00:39:51,500 --> 00:39:53,500
actually pop out through the top of the graph.

762
00:39:54,300 --> 00:39:57,400
And in fact, maybe since, since our goal frame time since we don't

763
00:39:57,400 --> 00:40:00,000
care, if we if we missed 30 frames a second we're just unhappy.

764
00:40:01,200 --> 00:40:04,800
Maybe what I'll do is say instead let's just do it at 33.

765
00:40:06,500 --> 00:40:10,900
So basically say like 33 milliseconds is our Target and so will

766
00:40:10,900 --> 00:40:14,300
actually pop pop out of the graph if we're not actually hitting that

767
00:40:14,300 --> 00:40:15,600
something like this, right?

768
00:40:16,200 --> 00:40:16,900
So what I would say,

769
00:40:17,100 --> 00:40:24,100
There is like okay 33 milliseconds is going to be what we want and so

770
00:40:24,100 --> 00:40:29,400
in seconds right 33 milliseconds is, is that right?

771
00:40:30,000 --> 00:40:30,400
It's like

772
00:40:33,000 --> 00:40:36,000
That so yeah.

773
00:40:36,500 --> 00:40:38,800
So that's how much time we would actually want to spend.

774
00:40:41,000 --> 00:40:43,300
In order to keep hitting 30 frames/second.

775
00:40:45,800 --> 00:40:47,900
And so, let's see what we need to do to do that, right?

776
00:40:47,900 --> 00:40:51,000
So that's our scale that converts seconds to the Chart height.

777
00:40:51,300 --> 00:40:54,300
Here is our info and now I want to draw a stock graph.

778
00:40:54,400 --> 00:40:58,800
So what I want to do is say we've got, you know exactly this is

779
00:40:58,800 --> 00:41:00,600
exactly the same thing happening here.

780
00:41:01,500 --> 00:41:01,800
You know?

781
00:41:02,700 --> 00:41:06,100
And so we would have sort of the proportions this.

782
00:41:06,100 --> 00:41:06,300
Yeah.

783
00:41:06,300 --> 00:41:09,600
This is the exactly the same thing and I guess again, I could do.

784
00:41:09,900 --> 00:41:13,000
I could do sort of the, the proportion bit, where we, where we color

785
00:41:13,000 --> 00:41:13,200
coded.

786
00:41:13,200 --> 00:41:17,400
If I want to do the exact same thing, I could do that as well, right?

787
00:41:17,400 --> 00:41:19,200
So that we multiply the chart hide out in here.

788
00:41:19,300 --> 00:41:21,400
So I could do, literally this exact same thing.

789
00:41:22,000 --> 00:41:25,500
And only this time instead of any sort of

790
00:41:27,800 --> 00:41:29,900
any sort of cycle counts or anything like that.

791
00:41:29,900 --> 00:41:32,900
What I'm doing is actually going through the timestamps here, right?

792
00:41:32,900 --> 00:41:38,200
So, I have my timestamp index, and I'm going to go through the

793
00:41:38,200 --> 00:41:42,300
timestamp index for a particular frame, which is this

794
00:41:46,300 --> 00:41:51,100
And for each one of those and I really want to capitalize that Dona

795
00:41:51,300 --> 00:41:53,600
Dona for each one of those.

796
00:41:53,600 --> 00:41:55,000
I'm going to get out the debug frame.

797
00:41:55,000 --> 00:41:56,800
Timestamp like so.

798
00:42:01,000 --> 00:42:03,300
And I'm going to grab that out of the info structure.

799
00:42:09,600 --> 00:42:14,000
Once I have that, I'm really just interested in this total s bit here.

800
00:42:14,300 --> 00:42:16,200
Now there's something that's a little bit tricky.

801
00:42:18,300 --> 00:42:22,400
And that is these things are timestamps based off of a base character,

802
00:42:22,500 --> 00:42:23,000
right?

803
00:42:24,000 --> 00:42:28,400
So I can't just draw What proportion, the actual time stamp would be,

804
00:42:28,700 --> 00:42:32,900
I have to draw What proportion, the timestamp - whatever the previous

805
00:42:32,900 --> 00:42:34,800
time stamp was, right?

806
00:42:34,900 --> 00:42:38,000
So I have to know what the previous time stamp is because these are

807
00:42:38,000 --> 00:42:41,400
like timestamps not not measured amounts of time.

808
00:42:42,200 --> 00:42:45,100
And so, what I want to do for this sort of a situation is I want to

809
00:42:45,100 --> 00:42:46,200
take the previous two.

810
00:42:46,200 --> 00:42:47,400
I want to take whatever

811
00:42:48,700 --> 00:42:52,100
This is like previous times that s whatever the previous time stamp

812
00:42:52,100 --> 00:42:52,500
was.

813
00:42:53,000 --> 00:43:00,100
So this seconds elapsed basically, is going to be the timestamps S -

814
00:43:00,100 --> 00:43:03,400
whatever the previous time stamp s was and then

815
00:43:07,400 --> 00:43:07,900
Yeah.

816
00:43:10,300 --> 00:43:12,700
I mean that's that's really all there is to it and then the priest

817
00:43:12,700 --> 00:43:15,900
timestamp s is going to be whatever this guy was.

818
00:43:15,900 --> 00:43:19,900
So we're just kind of keeping a, you know, those the spans coming out.

819
00:43:21,000 --> 00:43:25,000
So this seconds elapsed that's going to be gone by the scale to figure

820
00:43:25,000 --> 00:43:26,100
out how it comes into the chart.

821
00:43:26,100 --> 00:43:28,100
Then we're going to end under the chart height and then we're going to

822
00:43:28,100 --> 00:43:30,500
do the same exact stuff here to draw it.

823
00:43:30,500 --> 00:43:32,900
The only difference is now we're going to draw them stacked on top of

824
00:43:32,900 --> 00:43:34,700
each other instead, right?

825
00:43:34,900 --> 00:43:35,500
So

826
00:43:39,100 --> 00:43:40,200
In order to do that.

827
00:43:41,700 --> 00:43:45,200
Again, this this all has to be essentially the same.

828
00:43:45,700 --> 00:43:48,400
So all of this is exactly the same only.

829
00:43:48,400 --> 00:43:51,500
Now the chart left since this is kind of going underneath everything,

830
00:43:52,000 --> 00:43:56,500
this could actually be whatever the, the actual leftmost Edge is, of

831
00:43:56,500 --> 00:44:00,600
the debug stuff, which I believe we actually store in here somewhere.

832
00:44:00,800 --> 00:44:01,200
Right.

833
00:44:01,300 --> 00:44:02,100
Left Edge.

834
00:44:02,400 --> 00:44:04,100
So we can just start at the left edge of the screen.

835
00:44:04,100 --> 00:44:06,800
If you want to maybe we'll go in by 10 pixels for good measure or

836
00:44:06,800 --> 00:44:07,700
something like that.

837
00:44:08,100 --> 00:44:11,100
But basically otherwise the same we could then say

838
00:44:11,300 --> 00:44:20,200
That our chart bottom is going to be wherever we were in at y, plus

839
00:44:20,200 --> 00:44:21,100
the chart height.

840
00:44:23,100 --> 00:44:25,400
Again, maybe, plus 10 pixels for good measures to move it down a

841
00:44:25,400 --> 00:44:26,000
little bit.

842
00:44:27,000 --> 00:44:31,100
And so, then this stuff I think should all be the same.

843
00:44:31,100 --> 00:44:34,900
The bar with, I don't know if the bar was, should be maybe made Fairly

844
00:44:34,900 --> 00:44:35,300
large.

845
00:44:35,300 --> 00:44:36,100
I'm not sure.

846
00:44:37,500 --> 00:44:41,200
That's a really good question, but we could also do bar spacing so we

847
00:44:41,200 --> 00:44:44,600
could make it so that the bar is, were visibly, distinct, right?

848
00:44:44,600 --> 00:44:45,900
We could do something like this.

849
00:44:46,200 --> 00:44:50,300
And so if we did that, then we have bar spacing here.

850
00:44:50,600 --> 00:44:52,500
We have bar width here,

851
00:44:53,300 --> 00:44:55,300
And again, I'm not going to worry too much about the centering at the

852
00:44:55,300 --> 00:44:55,900
moment.

853
00:44:57,200 --> 00:44:58,300
Because I'd like to do something.

854
00:44:58,300 --> 00:44:59,800
I'd like to change the way the way these

855
00:45:00,000 --> 00:45:02,200
Angles are rendered relatively soon.

856
00:45:02,800 --> 00:45:05,400
Okay, so the bar with is the bar with this height.

857
00:45:05,400 --> 00:45:06,100
Is this height?

858
00:45:06,100 --> 00:45:07,100
That's all right.

859
00:45:07,100 --> 00:45:08,300
This proportions, fine.

860
00:45:09,000 --> 00:45:10,400
And then this is chart Min y.

861
00:45:10,400 --> 00:45:14,000
So whips short mean why?

862
00:45:15,300 --> 00:45:23,600
Okay, so I think and this bar spacing plus the bar with its actually

863
00:45:23,600 --> 00:45:25,500
that's its +5.

864
00:45:25,500 --> 00:45:27,200
Yeah, I don't know what, I don't know what I was doing there.

865
00:45:27,700 --> 00:45:29,600
I want to, I want to fix this stuff because I don't want to specify

866
00:45:29,600 --> 00:45:29,800
these

867
00:45:30,000 --> 00:45:30,400
This way.

868
00:45:30,800 --> 00:45:32,900
It's all right, so that will draw the rectangles for us.

869
00:45:33,500 --> 00:45:36,200
And so I think that's roughly you know, that's almost what we want.

870
00:45:36,200 --> 00:45:40,500
The only problem is we're now you know we don't actually have it's

871
00:45:40,500 --> 00:45:41,500
debug frame and info.

872
00:45:41,700 --> 00:45:45,500
We don't actually keep track of the stuff this way, right?

873
00:45:46,000 --> 00:45:48,800
And total side on maybe we don't eat till Cycles may be the last guy

874
00:45:48,800 --> 00:45:51,300
kind of tells what so sexist, I don't know, doesn't really matter.

875
00:45:52,100 --> 00:45:52,900
So let's see here.

876
00:45:53,200 --> 00:45:57,000
So in here, now in our frame and info, we're actually going to do

877
00:45:57,000 --> 00:45:58,500
something slightly different.

878
00:45:58,500 --> 00:45:59,800
We're going to sort of have a little map.

879
00:46:00,000 --> 00:46:04,500
I guess or something that just adds on to this.

880
00:46:04,700 --> 00:46:08,100
It doesn't really even need to be a macro I suppose at some level I

881
00:46:08,100 --> 00:46:13,600
could just be an inline here if it's like, you know, void take time

882
00:46:13,600 --> 00:46:17,500
stamp or record time stamp, something like that.

883
00:46:20,300 --> 00:46:20,900
Right?

884
00:46:21,200 --> 00:46:25,200
And this thing is just going to take one of these debug and info

885
00:46:25,200 --> 00:46:30,700
frame, and info things, and it'll just record whatever the time is,

886
00:46:30,700 --> 00:46:31,800
right now, right?

887
00:46:31,800 --> 00:46:34,000
It'll just insert a thing that records the timestamp in right now and

888
00:46:34,000 --> 00:46:35,900
I'll do, you know, whatever the name is.

889
00:46:36,400 --> 00:46:37,900
And so, that'll just do debug frame.

890
00:46:37,900 --> 00:46:45,500
Timestamp oppressed all cert, obviously that my info timestamp count.

891
00:46:46,700 --> 00:46:52,800
Is less than however, many there actually are to use.

892
00:46:54,100 --> 00:46:55,500
And then I'll just say that.

893
00:46:57,100 --> 00:47:01,400
The actual one I'm going to use time stamp.

894
00:47:03,000 --> 00:47:04,100
Is, is that one?

895
00:47:05,400 --> 00:47:09,100
I then just record the information here.

896
00:47:11,700 --> 00:47:16,600
And I can put in that winter to wall clock, whatever the wall clock

897
00:47:16,600 --> 00:47:19,200
thing is right win32.

898
00:47:20,200 --> 00:47:23,500
I might have to make this a macro because I guess I don't know, it's

899
00:47:23,500 --> 00:47:25,200
your to get wall clock.

900
00:47:25,700 --> 00:47:30,900
I don't actually know introduce seconds, elapsed with her to get well

901
00:47:30,900 --> 00:47:34,900
clock, I don't actually know how to do this seconds, a lap.

902
00:47:34,900 --> 00:47:40,900
If I don't have what the last counter value was right, so I guess I do

903
00:47:40,900 --> 00:47:41,200
want this.

904
00:47:41,400 --> 00:47:45,200
Be more of a macro so that it can so that it can be placed in there

905
00:47:46,200 --> 00:47:48,800
although I could just do it this way where you actually has passed the

906
00:47:48,800 --> 00:47:49,400
second set.

907
00:47:50,700 --> 00:47:51,500
And that's fine too.

908
00:47:52,000 --> 00:47:53,600
Something like that, right?

909
00:47:55,100 --> 00:47:59,800
Okay, so let's see here, when 32 Record Times,

910
00:48:01,500 --> 00:48:05,500
And so in here, I would just do whatever that debug info thing is

911
00:48:05,500 --> 00:48:06,500
frame and info.

912
00:48:06,900 --> 00:48:12,200
I would just do the same exact thing I was doing but now I just pass

913
00:48:12,200 --> 00:48:15,200
executable ready as a string, right?

914
00:48:16,900 --> 00:48:17,400
Like so.

915
00:48:19,100 --> 00:48:20,200
Hopefully, that makes some sense.

916
00:48:22,000 --> 00:48:23,400
So, let's just do that for everybody.

917
00:48:25,200 --> 00:48:27,500
So there's input processed again.

918
00:48:27,500 --> 00:48:28,900
Pass it in the spring string.

919
00:48:31,600 --> 00:48:32,400
Save that.

920
00:48:34,500 --> 00:48:35,400
Next one down.

921
00:48:38,800 --> 00:48:41,000
That's going to be game updated.

922
00:48:42,600 --> 00:48:45,300
Again, not doing anything interesting here, just literally doing

923
00:48:45,300 --> 00:48:48,400
mechanical process of converting.

924
00:48:48,400 --> 00:48:51,200
These timestamps, I hate the way I wish.

925
00:48:52,000 --> 00:48:56,900
I wish I had a like, when I kill something in emacs, like I don't want

926
00:48:56,900 --> 00:49:00,400
to actually lose what was in my paste buffer and there actually are

927
00:49:00,400 --> 00:49:01,000
some ways to do it.

928
00:49:01,000 --> 00:49:03,900
I fiddled with it and I never got the illest to work, right?

929
00:49:03,900 --> 00:49:05,400
It was as making me grumpy.

930
00:49:08,200 --> 00:49:08,600
Mr.

931
00:49:08,600 --> 00:49:11,300
Fourth dimension, if you're out there, Alan

932
00:49:12,700 --> 00:49:16,400
If you can solve that problem in your editor would be pretty sweet,

933
00:49:18,100 --> 00:49:19,800
you know, it's just, I mean, you see what it is.

934
00:49:19,800 --> 00:49:24,100
It's like, I I used cut and paste to remove something and then it

935
00:49:24,100 --> 00:49:24,600
loses.

936
00:49:24,600 --> 00:49:27,600
This thing that I wanted and I want that like I think Max has these

937
00:49:27,600 --> 00:49:29,000
like register things for it.

938
00:49:29,000 --> 00:49:29,300
I don't know.

939
00:49:29,300 --> 00:49:33,400
It was just always kind of clumsy and I don't, I just want a nice like

940
00:49:33,400 --> 00:49:39,300
easy-to-use thing, that that makes that work, okay, right, so yeah.

941
00:49:40,600 --> 00:49:42,400
Okay, let's see here.

942
00:49:44,100 --> 00:49:46,400
And then and a frame.

943
00:49:47,000 --> 00:49:53,300
So that's the like total s would also be that value, right?

944
00:49:53,700 --> 00:49:55,700
So that's going to be.

945
00:49:57,100 --> 00:49:57,600
Here.

946
00:50:01,000 --> 00:50:02,100
And frame.

947
00:50:03,900 --> 00:50:07,900
Yeah, and I guess that I don't really need that total s there or maybe

948
00:50:07,900 --> 00:50:09,700
I just don't put the marker in there.

949
00:50:11,900 --> 00:50:13,300
I'm not sure, I'm not sure.

950
00:50:13,300 --> 00:50:15,000
Which one of those things I should do.

951
00:50:16,200 --> 00:50:16,500
Right.

952
00:50:16,500 --> 00:50:18,300
It's just it's a little confusing.

953
00:50:22,700 --> 00:50:23,200
I guess for.

954
00:50:23,200 --> 00:50:25,800
Now, what I'll do is I just won't put the total s in there.

955
00:50:28,200 --> 00:50:29,200
That's what I'll do for now.

956
00:50:30,400 --> 00:50:30,900
And we'll see.

957
00:50:32,300 --> 00:50:34,500
Maybe that's good, maybe it's not.

958
00:50:38,300 --> 00:50:42,300
All right, we've got some issues to say the least that is not where my

959
00:50:42,300 --> 00:50:44,300
chart should be showing up.

960
00:50:45,100 --> 00:50:46,400
So let's go fix that.

961
00:50:47,900 --> 00:50:53,600
Let's let's let's let's see if we can improve that just a little bit.

962
00:50:54,200 --> 00:50:59,800
So there's my chart Min with the half this height, so that looks

963
00:51:00,000 --> 00:51:00,900
Seems okay.

964
00:51:00,900 --> 00:51:05,000
So what's the, oh, because that's supposed to go down by the chart

965
00:51:05,000 --> 00:51:05,200
height?

966
00:51:05,200 --> 00:51:05,900
That's the problem.

967
00:51:05,900 --> 00:51:07,100
I went the wrong direction.

968
00:51:08,300 --> 00:51:12,300
Always, you know, I'll never unlearn the fact that y goes down in

969
00:51:12,300 --> 00:51:16,600
programming for some reason, you know, that's, I guess just in the old

970
00:51:16,600 --> 00:51:19,900
days, I'm just so used to it that it's just, it's really hard for me

971
00:51:19,900 --> 00:51:21,000
to kind of like,

972
00:51:23,700 --> 00:51:24,800
it's hard for me too.

973
00:51:27,300 --> 00:51:28,800
Switch into the wise up thing.

974
00:51:28,800 --> 00:51:30,000
Even though that's the way Matthew.

975
00:51:30,000 --> 00:51:31,600
No wants it to be and all that.

976
00:51:31,800 --> 00:51:33,200
So we gotta go.

977
00:51:33,700 --> 00:51:34,800
Why are we going higher?

978
00:51:34,800 --> 00:51:37,100
It looks like we're going higher than our 300.

979
00:51:37,800 --> 00:51:39,100
Oh, that's why.

980
00:51:45,300 --> 00:51:47,900
But still looks like I'm kind of going up in there and I shouldn't be

981
00:51:47,900 --> 00:51:48,500
right.

982
00:51:48,500 --> 00:51:53,500
I should not be because I said that the chart I was 300.

983
00:51:53,600 --> 00:51:56,000
I should only be drawing up that high.

984
00:51:59,800 --> 00:52:00,900
No, I did it again.

985
00:52:02,200 --> 00:52:05,200
Seriously WTF, right?

986
00:52:06,000 --> 00:52:07,200
But doesn't make any sense.

987
00:52:09,500 --> 00:52:11,900
Oh wait, no that, no, that, no, no, no, that was fine.

988
00:52:11,900 --> 00:52:12,400
That's fine.

989
00:52:12,400 --> 00:52:14,100
Because the chart Min, why?

990
00:52:14,100 --> 00:52:15,900
I'm it's going to go down by that much.

991
00:52:15,900 --> 00:52:17,900
So that was that was that was just me.

992
00:52:17,900 --> 00:52:19,100
Being over the heart of myself.

993
00:52:20,000 --> 00:52:20,600
It's fine.

994
00:52:20,700 --> 00:52:21,400
It's totally fine.

995
00:52:22,500 --> 00:52:24,300
So yeah, so why am I still overshooting there?

996
00:52:24,300 --> 00:52:26,000
Because I feel like that's a little bit odd.

997
00:52:26,100 --> 00:52:28,800
The chart Min, why should start at whatever the at why was for our

998
00:52:28,800 --> 00:52:29,300
text line.

999
00:52:29,300 --> 00:52:32,700
So all of our text lines are done then it moves down by whatever the

1000
00:52:32,700 --> 00:52:36,700
chart height was plus 10 and presumably, everyone is just doing that.

1001
00:52:36,700 --> 00:52:38,900
I guess maybe it were, maybe we're missing because

1002
00:52:39,100 --> 00:52:40,100
All this debug print out.

1003
00:52:40,200 --> 00:52:41,600
Maybe we're missing 30 frames a second.

1004
00:52:41,600 --> 00:52:42,100
I don't know.

1005
00:52:42,200 --> 00:52:43,000
We should probably draw.

1006
00:52:43,000 --> 00:52:43,900
We're 30 frames a second.

1007
00:52:43,900 --> 00:52:44,800
Actually is.

1008
00:52:45,200 --> 00:52:46,700
So let's do that as well.

1009
00:52:47,200 --> 00:52:52,200
Let's just go ahead and do a push wrecked on here for the 32nd bar,

1010
00:52:52,400 --> 00:52:53,000
right?

1011
00:52:53,300 --> 00:52:56,400
And so to do that, we just do chart left.

1012
00:52:58,100 --> 00:53:02,800
And we do chart, Min plus chart height.

1013
00:53:04,600 --> 00:53:10,800
So and then our bar width is, you know, the width of the, the graph

1014
00:53:10,800 --> 00:53:16,000
essentially it's going to be chart with plus 0.5 times.

1015
00:53:16,400 --> 00:53:24,600
You know, chart width and that's chart with sharp height and weíll

1016
00:53:24,600 --> 00:53:28,800
just make that the 1.0 like, the white, the white line.

1017
00:53:30,200 --> 00:53:33,500
And what we want to do, in fact, I guess I can put that down.

1018
00:53:33,700 --> 00:53:34,200
As well.

1019
00:53:34,900 --> 00:53:38,000
So what we want to do there is figure out what the chart with actually

1020
00:53:38,000 --> 00:53:43,800
is total and the chart with would just be the bar spacing times.

1021
00:53:43,900 --> 00:53:47,800
Ooh, hello times, however, many of these snapshots there are.

1022
00:53:48,100 --> 00:53:48,600
Right.

1023
00:53:48,600 --> 00:53:51,200
That's how that's how wide the signal end up being.

1024
00:53:51,900 --> 00:53:53,300
So that would at least give me words.

1025
00:53:53,300 --> 00:53:58,600
The Chart top of the charts supposed to be 0 and of course I probably

1026
00:53:58,600 --> 00:53:59,800
want to draw one.

1027
00:54:00,000 --> 00:54:05,100
So there that's that's it was a little overzealous with that.

1028
00:54:06,100 --> 00:54:07,600
So, sorry about that.

1029
00:54:17,600 --> 00:54:19,900
All right, so I guess it is in the right place and we're just we're

1030
00:54:19,900 --> 00:54:21,400
missing our frame rate by little.

1031
00:54:21,500 --> 00:54:24,800
It would appear, which is probably not that surprising given the fact

1032
00:54:24,800 --> 00:54:28,500
that we're dumping a bunch of this extra rendering onto the system.

1033
00:54:28,500 --> 00:54:31,700
We're not even compiling in release mode and it's, you know, got to

1034
00:54:31,700 --> 00:54:33,900
draw these rectangles and our rectangle drawing routine is not

1035
00:54:33,900 --> 00:54:35,200
optimized either.

1036
00:54:35,400 --> 00:54:40,100
Write our rectangle drawing routine is is actually

1037
00:54:41,500 --> 00:54:42,000
Incorrect.

1038
00:54:42,000 --> 00:54:42,700
Right is

1039
00:54:45,700 --> 00:54:47,300
of course, it is a little weird.

1040
00:54:50,100 --> 00:54:50,700
Yeah, I don't know.

1041
00:54:50,800 --> 00:54:52,600
So we'll have two will have to play around with this a little bit

1042
00:54:52,600 --> 00:54:52,900
more.

1043
00:54:53,200 --> 00:54:54,200
We're almost out of time for the stream.

1044
00:54:54,200 --> 00:54:56,400
So the next thing that you know, the other thing that I wanted to do

1045
00:54:56,400 --> 00:55:00,500
there was I just wanted to make it so that we could see those sort of

1046
00:55:01,900 --> 00:55:03,800
see the individual rectangles a little bit better.

1047
00:55:04,100 --> 00:55:07,500
So what I'm going to do is I'm going to go ahead and make it so that

1048
00:55:07,500 --> 00:55:12,600
they're colored distinctly and I guess the proportional stuff is not.

1049
00:55:12,600 --> 00:55:15,400
So interesting in this at least in this particular one.

1050
00:55:23,200 --> 00:55:26,200
Yeah, so I'm going to go ahead and try to color these things color

1051
00:55:26,200 --> 00:55:29,600
code them so that you can actually see the you know, them stacked on

1052
00:55:29,600 --> 00:55:30,300
top of each other.

1053
00:55:30,500 --> 00:55:33,200
And so in order to do that, I'm just going to do something like colors

1054
00:55:33,800 --> 00:55:35,400
and I'm going to have the different colors.

1055
00:55:36,700 --> 00:55:37,000
In here.

1056
00:55:37,000 --> 00:55:40,000
Just I'm just going to write them myself, right?

1057
00:55:40,500 --> 00:55:43,300
And so what I'm going to do is I'm just going to do like okay for now,

1058
00:55:43,300 --> 00:55:44,800
these are not particularly good colors.

1059
00:55:45,000 --> 00:55:48,200
We can we can kind of fix them later.

1060
00:55:49,000 --> 00:55:54,700
I guess I'll do V3 will do something like just you know, primaries

1061
00:55:56,700 --> 00:55:57,700
Secondaries.

1062
00:56:01,100 --> 00:56:01,600
Right.

1063
00:56:02,700 --> 00:56:06,500
And then maybe like another set that's like half with half these

1064
00:56:11,400 --> 00:56:12,200
Something like that.

1065
00:56:16,100 --> 00:56:17,500
So let's see.

1066
00:56:18,500 --> 00:56:29,700
So I want to do maybe 0.5 10 and then on the other side like so and

1067
00:56:29,700 --> 00:56:37,900
then maybe 51 and just do it here.

1068
00:56:39,700 --> 00:56:42,600
And I'm just putting in like some colors, right?

1069
00:56:42,900 --> 00:56:45,600
So we actually have just a set to work with.

1070
00:56:46,600 --> 00:56:49,200
So what I want to do here is say okay, whichever one of these

1071
00:56:49,200 --> 00:56:52,100
timestamps it is I'm going to grab that color.

1072
00:56:52,200 --> 00:56:56,400
So we'll do the color cure equals colors, you know, time-stamped and X

1073
00:56:56,400 --> 00:56:59,800
Mod array count color.

1074
00:57:02,200 --> 00:57:06,000
And then the color can just be, you know, V4 color one.

1075
00:57:08,400 --> 00:57:09,200
That makes sense.

1076
00:57:10,000 --> 00:57:11,800
And so, when I draw this thing out,

1077
00:57:14,800 --> 00:57:15,100
Hmm.

1078
00:57:16,900 --> 00:57:18,400
That does not look right at all.

1079
00:57:20,600 --> 00:57:25,100
So, I think we've got a bug in here, a little like somewhere, right?

1080
00:57:25,300 --> 00:57:27,200
I feel like this, this feels a little bit buggy.

1081
00:57:29,200 --> 00:57:32,800
This seconds, elapsed is the timestamp seconds - the proof, timestamp

1082
00:57:32,800 --> 00:57:35,100
seconds, and then pretest answer, you'll timestamp s.

1083
00:57:35,500 --> 00:57:38,300
That should be sort of taking, whatever that Delta is.

1084
00:57:38,600 --> 00:57:42,200
And I feel like if it's blue it's just saying we're always seeing just

1085
00:57:42,200 --> 00:57:46,000
the third one, are we sure that this is actually working properly.

1086
00:57:46,600 --> 00:57:48,000
This site equals red at this times.

1087
00:57:48,000 --> 00:57:50,000
This proportion, the

1088
00:57:50,400 --> 00:57:52,900
Jim is going to be out of 33 milliseconds.

1089
00:57:53,400 --> 00:57:55,500
Oh, I still haven't stacked them.

1090
00:57:57,000 --> 00:57:58,900
I never actually bothered to stack them.

1091
00:57:59,600 --> 00:58:02,700
So what we need to do here is we need to stack them up, right?

1092
00:58:02,700 --> 00:58:07,700
I need to do a thing where I take like, you know, stock Y and I need

1093
00:58:07,700 --> 00:58:11,200
to make that equal to what we were starting with, right?

1094
00:58:11,800 --> 00:58:12,500
Like so.

1095
00:58:14,700 --> 00:58:15,800
That's kind of obvious.

1096
00:58:16,600 --> 00:58:22,500
And then after I stack it, I've got to add on whatever our actual

1097
00:58:22,500 --> 00:58:25,900
height was the guy, right?

1098
00:58:29,700 --> 00:58:30,500
So there we go.

1099
00:58:30,900 --> 00:58:33,200
That's more like what you know I was thinking

1100
00:58:35,300 --> 00:58:39,700
And so you can kind of see actually that yeah, to no one's great

1101
00:58:39,700 --> 00:58:40,500
surprise.

1102
00:58:40,900 --> 00:58:43,900
We have one thing that's taking basically all of our time and that's

1103
00:58:43,900 --> 00:58:45,200
inside our game thing.

1104
00:58:46,200 --> 00:58:49,600
So we're going to have to do a little more work to make this more

1105
00:58:49,600 --> 00:58:53,000
useful, but you can sort of see what we're, what I'm starting to get

1106
00:58:53,000 --> 00:58:54,000
out there, right.

1107
00:58:54,600 --> 00:58:57,400
And eventually, what we need to do is we need to go ahead and make

1108
00:58:57,400 --> 00:58:58,500
this so that we can kind of

1109
00:59:00,500 --> 00:59:03,300
We can kind of break this up into stuff that's actually also in the

1110
00:59:03,300 --> 00:59:06,100
game, possibly tied into this sort of stuff, but you can sort of see,

1111
00:59:06,100 --> 00:59:10,800
we're starting to, we're starting to get into the realm of something

1112
00:59:10,800 --> 00:59:13,300
usable down there, but I'm out of time.

1113
00:59:13,300 --> 00:59:15,700
So what I'm going to do here is I'm going to just I want a space this

1114
00:59:15,700 --> 00:59:16,700
out a little bit more.

1115
00:59:17,100 --> 00:59:19,800
So I'm going to have some spacing there.

1116
00:59:21,900 --> 00:59:22,400
There we go.

1117
00:59:23,400 --> 00:59:24,900
But we're getting there, slowly.

1118
00:59:24,900 --> 00:59:27,500
But surely, we are getting there.

1119
00:59:28,000 --> 00:59:32,900
And, you know, I feel like, really the next step is to kind of unify

1120
00:59:32,900 --> 00:59:36,300
these two things and maybe try to figure out a way to get the, you

1121
00:59:36,300 --> 00:59:40,100
know, get the timestamps and the, get the timestamps in the count

1122
00:59:40,100 --> 00:59:43,000
blocks to be basically doing the same sort of stuff.

1123
00:59:45,800 --> 00:59:47,900
I'm not sure I know exactly how I want to do that yet.

1124
00:59:50,300 --> 00:59:51,400
It'll be interesting challenge.

1125
00:59:52,300 --> 00:59:52,600
All right.

1126
00:59:52,600 --> 00:59:56,800
Anyway, I'm going to go to the Q&A where I'm going to try to go to the

1127
00:59:56,800 --> 00:59:57,200
Q&A.

1128
00:59:57,200 --> 00:59:59,100
Anyway, let's see here.

1129
01:00:00,300 --> 01:00:01,500
CD.

1130
01:00:03,400 --> 01:00:05,000
I don't actually remember.

1131
01:00:07,400 --> 01:00:09,300
See, here we go.

1132
01:00:10,200 --> 01:00:10,900
And a.

1133
01:00:11,800 --> 01:00:12,600
All right.

1134
01:00:13,100 --> 01:00:15,600
So if you have any questions about what we did on today's stream,

1135
01:00:16,900 --> 01:00:18,800
Now would be a good time to ask it.

1136
01:00:18,800 --> 01:00:27,300
Go ahead and please put Q: in front of the question, and I will try to

1137
01:00:27,300 --> 01:00:27,700
answer it.

1138
01:00:45,700 --> 01:00:47,300
Questions.

1139
01:01:02,100 --> 01:01:03,000
Dollar questions.

1140
01:01:13,200 --> 01:01:16,600
In fact, I would actually go as so far as to say that there are zero

1141
01:01:16,600 --> 01:01:17,300
questions.

1142
01:01:18,800 --> 01:01:19,200
Hey, man.

1143
01:01:19,200 --> 01:01:20,500
So Friday, we can end early.

1144
01:01:41,900 --> 01:01:45,600
Braying Cruiser, doesn't the multi-core rendering screw up your

1145
01:01:45,600 --> 01:01:46,300
timing.

1146
01:01:47,100 --> 01:01:48,100
I don't think so.

1147
01:01:50,000 --> 01:01:52,900
I can't think of any reason why it would we made.

1148
01:01:52,900 --> 01:01:56,200
Sure our timers are multi-core safe.

1149
01:01:58,400 --> 01:02:02,000
So like this stuff right now, these things are not so interesting

1150
01:02:02,000 --> 01:02:03,300
because they just don't really time.

1151
01:02:03,300 --> 01:02:06,800
Anything granular enough, I want to go ahead and tie these two systems

1152
01:02:06,800 --> 01:02:07,400
together.

1153
01:02:08,000 --> 01:02:13,200
I really probably should do that, but these timers are thread safe.

1154
01:02:13,200 --> 01:02:15,000
As far as I know, we tried to design them to be.

1155
01:02:15,000 --> 01:02:20,200
So, so, basically, even though there's a bunch of threads, all running

1156
01:02:20,200 --> 01:02:23,300
the same stuff at the same time, in theory, all of the counters, just

1157
01:02:23,300 --> 01:02:25,900
some together and give us the right value.

1158
01:02:25,900 --> 01:02:27,200
Back in theory.

1159
01:02:38,800 --> 01:02:41,400
Can you briefly explain how it tracks, how long it takes the frame to

1160
01:02:41,400 --> 01:02:44,200
work and the render engine to work if rendering debug as part of that

1161
01:02:44,200 --> 01:02:47,700
work, also a suggestion, use a key to toggle, the display, to see the

1162
01:02:47,700 --> 01:02:51,100
game that we're not at that point yet.

1163
01:02:51,100 --> 01:02:55,300
So controlling, the debug view is not that separate topic for a

1164
01:02:55,300 --> 01:02:56,000
separate day.

1165
01:02:57,400 --> 01:02:59,800
It will not probably be keyboard oriented.

1166
01:03:00,200 --> 01:03:03,500
Maybe it might be more mousey.

1167
01:03:05,100 --> 01:03:08,100
Doesn't the multi-core rendering screw up your timing.

1168
01:03:09,300 --> 01:03:12,600
Our weight, our answer that one, can you please explain how it tracks?

1169
01:03:12,600 --> 01:03:15,400
How long it takes the frame to work and the render engine to work if

1170
01:03:15,400 --> 01:03:16,900
render the debug is part of that work.

1171
01:03:17,100 --> 01:03:21,100
So right now we don't have a way of eliminating the that part of the

1172
01:03:21,100 --> 01:03:22,400
work, right?

1173
01:03:23,900 --> 01:03:29,700
We can actually do that because we render the debug in a separate

1174
01:03:29,700 --> 01:03:30,300
pass.

1175
01:03:30,900 --> 01:03:36,900
So we will actually be able to figure that out to a certain extent,

1176
01:03:37,100 --> 01:03:37,600
right?

1177
01:03:37,700 --> 01:03:38,900
If you take a look here,

1178
01:03:40,400 --> 01:03:42,900
In fact, we can already do it this right here.

1179
01:03:46,400 --> 01:03:47,600
is, is the

1180
01:03:49,400 --> 01:03:52,800
Is the debug render group rendering, right?

1181
01:03:52,900 --> 01:03:55,700
So if we wanted to know how long that, that was taking,

1182
01:03:57,100 --> 01:03:58,000
We could do that.

1183
01:04:04,400 --> 01:04:04,900
So yeah.

1184
01:04:05,500 --> 01:04:08,300
So if you take a look here, it's like, okay.

1185
01:04:08,500 --> 01:04:15,600
Well, the debug rendering is taking a lot of the time because this is

1186
01:04:15,600 --> 01:04:16,900
inclusive, right?

1187
01:04:17,500 --> 01:04:19,500
This game update, and render is inclusive.

1188
01:04:19,500 --> 01:04:22,600
So, basically, debug rendering is taking almost all of our frame time

1189
01:04:22,600 --> 01:04:23,400
at the moment.

1190
01:04:25,500 --> 01:04:26,400
You know, what you gonna do.

1191
01:04:27,800 --> 01:04:31,700
So there's that part of that is again because it's probably doing the

1192
01:04:31,700 --> 01:04:34,700
rectangle and also, it's got a blit, all those little font things in

1193
01:04:34,700 --> 01:04:35,100
there.

1194
01:04:35,800 --> 01:04:39,200
So we're going to probably want a discount, you know, take that out of

1195
01:04:39,200 --> 01:04:43,600
the equation when we're actually trying to do timing stuff because

1196
01:04:43,600 --> 01:04:44,500
that's just, yeah.

1197
01:04:44,500 --> 01:04:46,400
I mean, there's not that whole much, we're gonna be able to do about

1198
01:04:46,400 --> 01:04:46,500
it.

1199
01:04:46,500 --> 01:04:49,900
I mean, we can also double check to see how bad it is if we actually

1200
01:04:49,900 --> 01:04:54,000
do an optimized build right now, we're not right?

1201
01:04:54,400 --> 01:04:55,100
So if

1202
01:04:55,400 --> 01:04:58,900
If I optimize some of that I don't know, but that's, it's still going

1203
01:04:58,900 --> 01:05:01,400
to be a problem, you know, no matter what we do.

1204
01:05:04,600 --> 01:05:06,600
But yeah, so you can see that right now.

1205
01:05:06,600 --> 01:05:09,200
The debug rendering is still taking about half the time but you can

1206
01:05:09,200 --> 01:05:11,900
also see that we totally hit our frame rate just fine.

1207
01:05:12,500 --> 01:05:18,900
So now we're like nice and locked at 30 Hertz but and and you can see

1208
01:05:18,900 --> 01:05:21,700
though we wouldn't make 60 hertz with a debug rendering on.

1209
01:05:21,800 --> 01:05:25,600
We would make 60 hertz with a debug rendering off easily, but with it

1210
01:05:25,600 --> 01:05:29,300
on we wouldn't at all and so it might be something where we want to

1211
01:05:29,300 --> 01:05:33,400
try and discount that a little bit so that we know that we're looking

1212
01:05:33,400 --> 01:05:34,200
at the debug, it doesn't

1213
01:05:34,700 --> 01:05:39,600
It doesn't skew our timing stuff too much but you know again, we'll

1214
01:05:39,600 --> 01:05:41,200
get there, we'll get there.

1215
01:05:53,200 --> 01:05:53,700
Go ahead of them.

1216
01:05:53,700 --> 01:05:55,000
Did you get for coders setup?

1217
01:05:55,100 --> 01:05:56,600
No, I'm gonna do it on stream.

1218
01:05:56,600 --> 01:05:59,900
So, you know, I'm going to reserve like doing the

1219
01:06:00,000 --> 01:06:01,200
New mapping to on stream.

1220
01:06:01,200 --> 01:06:05,500
So, like, when I get home early enough to do a longer, Priya madhu,

1221
01:06:06,200 --> 01:06:07,300
the bindings there.

1222
01:06:10,000 --> 01:06:10,800
So people can see.

1223
01:06:17,700 --> 01:06:18,000
Cute.

1224
01:06:18,000 --> 01:06:18,800
Chisholm.

1225
01:06:20,300 --> 01:06:21,700
Do you ever think it's amazing?

1226
01:06:21,700 --> 01:06:24,900
How hundreds of game hundreds of designers can screw up a project by

1227
01:06:24,900 --> 01:06:28,500
trying to be complex when Indy designers can make a better game in a

1228
01:06:28,500 --> 01:06:29,400
few months.

1229
01:06:32,600 --> 01:06:37,000
I mean, I don't know, I'm not really a game designer, so I I don't

1230
01:06:37,100 --> 01:06:38,600
really have too much of an opinion on that.

1231
01:06:38,600 --> 01:06:40,100
But I would point out that like

1232
01:06:41,200 --> 01:06:42,600
That's a little bit unfair.

1233
01:06:43,500 --> 01:06:49,100
Because if you're actually talking about Indie Games as a whole, there

1234
01:06:49,100 --> 01:06:52,100
are a lot of really poorly designed Indie Games as well.

1235
01:06:52,100 --> 01:06:55,900
I mean, there's like thousands of India games that came out this year,

1236
01:06:57,400 --> 01:07:03,300
90% of them are probably abhorrently awful, right?

1237
01:07:03,800 --> 01:07:07,000
But when you think of, when you say in D designer, make a better game

1238
01:07:07,000 --> 01:07:10,800
in a few months you're talking about out of all of those designs.

1239
01:07:11,000 --> 01:07:15,000
The few that we're good or maybe the designer was really good or they

1240
01:07:15,000 --> 01:07:16,200
just looked out in the game, was good.

1241
01:07:16,200 --> 01:07:17,200
Who knows, right?

1242
01:07:17,300 --> 01:07:22,000
And you're comparing those against this big Triple A game or whatever

1243
01:07:22,000 --> 01:07:24,700
that you're saying it was screwed up or something, right?

1244
01:07:25,100 --> 01:07:27,400
And it's a little bit unfair, right?

1245
01:07:27,500 --> 01:07:30,300
Because there's only a few AAA games.

1246
01:07:30,300 --> 01:07:32,800
There's not that many released every year, right?

1247
01:07:33,100 --> 01:07:37,700
And so it's tempting to look at any game say, oh there was like 20

1248
01:07:37,700 --> 01:07:40,800
indie games this year and they were all better than, you know.

1249
01:07:40,900 --> 01:07:41,000
No.

1250
01:07:42,700 --> 01:07:49,800
I don't know what Arkham City or Asylum Arkham Knight Batman runs

1251
01:07:49,800 --> 01:07:50,900
around, whatever.

1252
01:07:51,000 --> 01:07:56,900
I don't even know Metal Gear, Solid 12, The Legend of Zelda boat

1253
01:07:57,100 --> 01:07:59,400
riding simulation, right.

1254
01:07:59,400 --> 01:08:03,400
Whatever it is and you think that maybe the design was like over

1255
01:08:03,400 --> 01:08:04,800
complicated, or wasn't as good as this thing.

1256
01:08:04,800 --> 01:08:09,300
It's like well, yeah, but you know it's such a high stakes game and

1257
01:08:09,300 --> 01:08:12,400
there's so few of them that it's actually very

1258
01:08:12,500 --> 01:08:17,000
Believe that you know it's not going to come out that well just like

1259
01:08:17,000 --> 01:08:20,100
it's very likely that most indie games are not going to come out well

1260
01:08:20,100 --> 01:08:24,600
but because of the numbers game you know that's not so much what

1261
01:08:24,600 --> 01:08:27,000
happens plus since there's no wait.

1262
01:08:27,300 --> 01:08:29,700
Indie Games don't have a lot of weight to throw around.

1263
01:08:30,200 --> 01:08:33,600
They don't like if you want to revamp something in an indie game it's

1264
01:08:33,600 --> 01:08:34,100
very easy.

1265
01:08:34,100 --> 01:08:34,800
Often times.

1266
01:08:34,800 --> 01:08:38,100
You want to revamp something in AAA game.

1267
01:08:38,100 --> 01:08:42,399
You may be invalidating you know hundreds of millions of dollars worth

1268
01:08:42,399 --> 01:08:42,500
of

1269
01:08:42,500 --> 01:08:43,200
Of work.

1270
01:08:43,399 --> 01:08:45,500
You can't just change something last minute.

1271
01:08:45,500 --> 01:08:46,399
It doesn't work that way.

1272
01:08:46,399 --> 01:08:47,500
Because there's so much.

1273
01:08:47,700 --> 01:08:51,800
There's so much like pre, there's so much pipeline to the art

1274
01:08:51,800 --> 01:08:53,000
production, all these other things,

1275
01:08:54,700 --> 01:08:57,800
So, yeah, you know, am I going to defend AAA games?

1276
01:08:57,800 --> 01:08:59,100
Not necessarily but

1277
01:09:00,100 --> 01:09:02,800
I just want to point out that there's a lot of subtlety to that if you

1278
01:09:02,800 --> 01:09:05,600
actually think about it and it's not as simple as like.

1279
01:09:05,700 --> 01:09:08,899
Oh Triple A game designers are bad at their job.

1280
01:09:09,200 --> 01:09:16,300
That may also be the case sometimes, or even often, but don't don't

1281
01:09:16,300 --> 01:09:20,200
assume that it's always that it's not a Level Playing Field.

1282
01:09:20,200 --> 01:09:26,600
When you compare those two things are very different and so, you know,

1283
01:09:26,899 --> 01:09:28,800
it's complicated.

1284
01:09:39,600 --> 01:09:42,899
Griggs, you mentioned that the way you draw a Rex is not optimized,

1285
01:09:42,899 --> 01:09:44,100
what do you want to change?

1286
01:09:44,300 --> 01:09:48,000
So we you know we optimized our texture filling wreck, you know,

1287
01:09:49,000 --> 01:09:53,000
arbitrary scaling and rotating stuff, we optimized all that because we

1288
01:09:53,000 --> 01:09:58,700
had to and so that's runs really nice and fast now, but we never wrote

1289
01:09:58,700 --> 01:10:05,600
an optimized version of of the actual just draw rectangle without any

1290
01:10:05,600 --> 01:10:05,900
blip.

1291
01:10:05,900 --> 01:10:07,600
Just fill just filled rectangle.

1292
01:10:07,800 --> 01:10:11,600
Right, so it's not even doing for pixels at a time.

1293
01:10:12,600 --> 01:10:14,600
It's not even Cindy, right?

1294
01:10:15,000 --> 01:10:19,000
So we could probably speed up draw a rectangle of pretty dramatically,

1295
01:10:19,100 --> 01:10:19,400
right?

1296
01:10:19,400 --> 01:10:22,600
We could probably I would imagine speed it up quite a bit.

1297
01:10:24,900 --> 01:10:29,500
If we just if we just did Cindy you know, I would we get four times

1298
01:10:29,500 --> 01:10:31,900
faster I don't know but we could probably get quite a bit faster.

1299
01:10:45,500 --> 01:10:48,200
Stephen last because we're using rendering multiple threads, is it

1300
01:10:48,200 --> 01:10:51,300
saying that you're spending more Cycles in draw rectangle drug until

1301
01:10:51,300 --> 01:10:54,100
quickly than game update and render know?

1302
01:10:54,100 --> 01:10:55,100
So okay.

1303
01:10:55,400 --> 01:10:58,400
Again you have to understand like what our timers are actually timing

1304
01:10:58,400 --> 01:11:00,000
here, right?

1305
01:11:02,700 --> 01:11:04,800
So okay.

1306
01:11:04,800 --> 01:11:05,300
I'm sorry.

1307
01:11:05,300 --> 01:11:05,900
You know what?

1308
01:11:06,400 --> 01:11:07,500
I misunderstood your question.

1309
01:11:08,200 --> 01:11:09,700
I understand what you're asking now.

1310
01:11:09,800 --> 01:11:12,400
Yes, yes.

1311
01:11:12,400 --> 01:11:13,200
Is the answer.

1312
01:11:14,400 --> 01:11:21,200
So what happens here is game update and render is is doing one threads

1313
01:11:21,200 --> 01:11:25,000
worth of rendering, and then also waiting until all the other render

1314
01:11:25,000 --> 01:11:25,800
threads are done.

1315
01:11:25,900 --> 01:11:27,900
That's how that works, right?

1316
01:11:28,400 --> 01:11:31,100
And so the other render threads are

1317
01:11:31,300 --> 01:11:35,400
Actually going to sum up the total amount of time that they all spent

1318
01:11:35,400 --> 01:11:36,900
on their separate course.

1319
01:11:37,200 --> 01:11:37,800
Right?

1320
01:11:37,900 --> 01:11:42,000
So, if we're running on four cores at the same time or whatever, I

1321
01:11:42,000 --> 01:11:43,600
think we might be running on six.

1322
01:11:43,600 --> 01:11:44,800
Cores the same time right now.

1323
01:11:44,800 --> 01:11:46,300
I don't remember what we said, 28.

1324
01:11:46,300 --> 01:11:47,200
It's something High.

1325
01:11:48,400 --> 01:11:53,000
They're going to be that many more times longer because they, each of

1326
01:11:53,000 --> 01:11:57,400
them, you know, is counting a full that full parallel part of time.

1327
01:11:57,600 --> 01:11:59,800
So when you have eight things running in parallel,

1328
01:12:00,000 --> 01:12:03,600
Going to get eight times the amount of cycle, spent in that period of

1329
01:12:03,600 --> 01:12:04,000
time.

1330
01:12:04,600 --> 01:12:07,900
And so, if I understand what the way you're asking the question, I got

1331
01:12:07,900 --> 01:12:13,200
confused at first, the answer to what you're saying is, yes, that is

1332
01:12:13,200 --> 01:12:13,600
why

1333
01:12:26,700 --> 01:12:29,500
Why are you echoing to Locked Up temp in your batch file?

1334
01:12:30,100 --> 01:12:33,200
The reason we Echo to Locked Up temp in the batch file is for this

1335
01:12:33,700 --> 01:12:34,900
code reloading stuff.

1336
01:12:36,700 --> 01:12:40,300
Which, by the way, we have to re-enable for the debug system right

1337
01:12:40,300 --> 01:12:43,500
now, I'm pretty sure the debug system still doesn't actually work with

1338
01:12:43,500 --> 01:12:44,700
that stuff, which we can fix.

1339
01:12:44,700 --> 01:12:45,300
So, we should.

1340
01:12:46,900 --> 01:12:49,500
So what we do, when we need to reload the game,

1341
01:12:54,500 --> 01:12:58,400
when we need to reload the game, we use this locking mechanism because

1342
01:12:58,400 --> 01:13:03,200
visual C++, I seem to recall have some prop, has some issues with

1343
01:13:03,200 --> 01:13:05,200
loading the debug symbols or something like this.

1344
01:13:05,500 --> 01:13:10,200
So what we did is we made sure that when we do win32 load game code,

1345
01:13:11,300 --> 01:13:16,100
We check to make sure that the lock file is is not there.

1346
01:13:16,600 --> 01:13:20,800
If the lock files there, we won't try to do the load so we won't

1347
01:13:23,200 --> 01:13:24,600
Try to load something that's that.

1348
01:13:24,600 --> 01:13:29,000
Where the, where the debug info hasn't been written out yet because

1349
01:13:29,000 --> 01:13:29,700
what was happening.

1350
01:13:29,700 --> 01:13:33,100
If I remember correctly, is we would reload the game dll?

1351
01:13:33,900 --> 01:13:39,100
As soon as it was ready and the pdb, like the debug info hadn't been

1352
01:13:39,100 --> 01:13:43,800
finished, it wasn't finished writing like like visual sees compiler.

1353
01:13:43,800 --> 01:13:45,300
Haven't finished writing the debug info.

1354
01:13:46,000 --> 01:13:47,600
So we'd load the new dll.

1355
01:13:48,300 --> 01:13:50,200
Microsoft Visual Studio would go.

1356
01:13:50,200 --> 01:13:51,100
Oh, a new deal.

1357
01:13:51,100 --> 01:13:51,900
L was loaded in.

1358
01:13:51,900 --> 01:13:52,300
I'm going to go

1359
01:13:52,500 --> 01:13:55,200
The debug symbols for it, but it couldn't load the debug symbols

1360
01:13:55,200 --> 01:13:56,500
because they weren't written yet.

1361
01:13:57,000 --> 01:14:01,200
So, having that lock file there, just allows us to know, oh, the

1362
01:14:01,200 --> 01:14:02,500
compilation is not done yet.

1363
01:14:02,500 --> 01:14:04,900
Don't reload the dll, wait till it's done because otherwise Visual

1364
01:14:04,900 --> 01:14:07,700
Studio will will poop out.

1365
01:14:13,800 --> 01:14:14,500
Jeff Catalan.

1366
01:14:14,500 --> 01:14:18,100
So after lib Freedom week, we could reasonably easily Boot hhf

1367
01:14:18,100 --> 01:14:22,500
something like bare, metal loss and go all look ma, no os- sound, I

1368
01:14:22,500 --> 01:14:23,000
guess.

1369
01:14:24,000 --> 01:14:27,800
Well, I mean not really, it would depend on whether that bare, metal

1370
01:14:27,800 --> 01:14:28,100
OS.

1371
01:14:28,100 --> 01:14:31,200
Had initialization code for like the graphics subsystem, right?

1372
01:14:31,500 --> 01:14:35,000
Because we need, you know, we prepare the bitmaps in the sound, but we

1373
01:14:35,000 --> 01:14:38,000
need places to we need ways to hand that off to the hardware.

1374
01:14:38,600 --> 01:14:41,500
So I don't know anything about bare metal of s, but, you know, if it

1375
01:14:41,500 --> 01:14:43,500
didn't have those things, you have to write like the

1376
01:14:43,600 --> 01:14:47,900
Graphics card driver and the sound card driver yourself and stuff like

1377
01:14:47,900 --> 01:14:48,300
that.

1378
01:14:48,300 --> 01:14:51,000
So there might actually be a significant amount of work in there and

1379
01:14:51,000 --> 01:14:53,100
also like keyboard reading that sort of stuff.

1380
01:14:53,100 --> 01:14:54,900
So I don't know if bare metal OS is but

1381
01:14:55,800 --> 01:14:56,200
You know.

1382
01:15:00,900 --> 01:15:03,800
Well, he made here will be optimized for gpus, or are you sticking to

1383
01:15:03,800 --> 01:15:04,700
CP render?

1384
01:15:04,900 --> 01:15:07,200
Will that be an arduous task or pretty straightforward?

1385
01:15:07,900 --> 01:15:11,200
It won't be arduous, I don't know if it's straight forward, but it's

1386
01:15:11,200 --> 01:15:12,000
not arduous.

1387
01:15:13,400 --> 01:15:17,000
And I don't know, to what extent we will optimize for gpus that

1388
01:15:17,000 --> 01:15:17,800
remains to be seen.

1389
01:15:33,300 --> 01:15:37,000
If I have a simple app concept that I can't code myself because I'm a

1390
01:15:37,000 --> 01:15:37,800
scrub.

1391
01:15:37,900 --> 01:15:40,200
Is there any good way to get somebody to make an app?

1392
01:15:40,200 --> 01:15:40,600
For me?

1393
01:15:40,600 --> 01:15:44,000
That is somewhat simplistic and we split profits or even I just get

1394
01:15:44,000 --> 01:15:44,600
10%.

1395
01:15:44,600 --> 01:15:45,700
I don't care about the prophets.

1396
01:15:45,700 --> 01:15:47,400
I just want to help develop the app.

1397
01:15:48,100 --> 01:15:50,500
Well, I would say this is the wrong stream to ask that.

1398
01:15:51,100 --> 01:15:53,800
Obviously, this is a stream for people who want to do serious

1399
01:15:53,800 --> 01:15:55,100
programming themselves.

1400
01:15:56,800 --> 01:15:59,500
So I have no idea possibly.

1401
01:16:01,100 --> 01:16:01,600
but,

1402
01:16:03,600 --> 01:16:08,100
Yeah, pretty far out of the topic of this, this show.

1403
01:16:13,000 --> 01:16:15,100
Why are you not using visual studio to write your code?

1404
01:16:15,100 --> 01:16:16,000
It seems to be a Windows machine.

1405
01:16:16,000 --> 01:16:16,700
You're working on.

1406
01:16:17,000 --> 01:16:19,000
I don't like visual Studios editor.

1407
01:16:19,500 --> 01:16:21,200
So, it's the debugger.

1408
01:16:21,200 --> 01:16:24,300
I mean, that's, we do use the debugger, it's the best of bugger on

1409
01:16:24,300 --> 01:16:25,500
Windows that I know of.

1410
01:16:27,200 --> 01:16:32,300
So, we use that, but I don't like it as a code editor so I don't use

1411
01:16:32,300 --> 01:16:32,600
it.

1412
01:16:39,900 --> 01:16:40,800
All right.

1413
01:16:44,400 --> 01:16:45,200
We all good.

1414
01:16:51,900 --> 01:16:53,200
I think that's it folks.

1415
01:16:54,100 --> 01:16:57,700
I think that is it.

1416
01:16:58,200 --> 01:17:02,200
So I'm going to go ahead and close out of here, right?

1417
01:17:03,500 --> 01:17:06,700
Okay, everyone, thanks very much for joining me for another episode of

1418
01:17:06,700 --> 01:17:07,200
handmade hero.

1419
01:17:07,200 --> 01:17:08,400
It's been a pleasure coding with you.

1420
01:17:08,400 --> 01:17:15,100
As always, if you would like to follow along with the series at home,

1421
01:17:15,400 --> 01:17:19,400
you can always pre-order the game on handmade hero dot-org and it

1422
01:17:19,400 --> 01:17:21,500
comes to the source code, even right now.

1423
01:17:22,300 --> 01:17:26,000
So you can follow along, even when we're just building the engine and

1424
01:17:26,000 --> 01:17:29,400
we added a new feature this week that people have been requesting for

1425
01:17:29,400 --> 01:17:29,800
a while.

1426
01:17:29,800 --> 01:17:33,000
So in addition to downloading zip files of the source for every day,

1427
01:17:33,700 --> 01:17:35,800
we also now have a GitHub repository.

1428
01:17:36,500 --> 01:17:41,300
And so, if you would like to use GitHub to access the handmade hero

1429
01:17:41,300 --> 01:17:46,700
source code, when you pre-order, there will be an access code that you

1430
01:17:46,700 --> 01:17:48,400
can use and instructional text file.

1431
01:17:48,400 --> 01:17:51,600
So on that, send owl, you know, if you preorder, you'll get a page

1432
01:17:51,900 --> 01:17:54,900
That you can use to download handmade hero.

1433
01:17:54,900 --> 01:17:56,100
The art assets, all that stuff.

1434
01:17:56,300 --> 01:17:59,800
There's also a GitHub now and they'll be an access code for your good.

1435
01:18:00,000 --> 01:18:06,800
You can use to authorize your username on GitHub and so look for that

1436
01:18:06,800 --> 01:18:11,100
if you're someone who already pre-ordered the source code if you go

1437
01:18:11,100 --> 01:18:13,800
back to your sin dowel page, right?

1438
01:18:13,800 --> 01:18:16,200
And if you don't know where that is you can always do this.

1439
01:18:16,200 --> 01:18:18,500
You can, you can take the email address, you used for the order and

1440
01:18:18,500 --> 01:18:21,800
put it in this habit, resent thing, you can go back to your send out

1441
01:18:21,800 --> 01:18:24,000
page and there will be a new there.

1442
01:18:24,100 --> 01:18:29,800
You know, it will have added at the bottom a access code.

1443
01:18:30,000 --> 01:18:33,200
And the text file with the instructions on how to authorize yourself.

1444
01:18:35,400 --> 01:18:39,200
So, if GitHub is something that you've been asking for that, you want

1445
01:18:39,200 --> 01:18:42,700
to use to stay in sync with the source code, you can now get on those

1446
01:18:42,700 --> 01:18:45,700
private repositories just by putting your username into that

1447
01:18:45,700 --> 01:18:46,600
authorization system.

1448
01:18:46,600 --> 01:18:49,200
So that's another option for you, as well.

1449
01:18:50,300 --> 01:18:50,900
As always.

1450
01:18:50,900 --> 01:18:54,300
We also have a patreon if you want to support the video series, we

1451
01:18:54,300 --> 01:18:58,000
also have a forum site that you can go to ask questions, get people

1452
01:18:58,000 --> 01:19:00,500
who've done ports, to Mac and Linux is like that.

1453
01:19:00,500 --> 01:19:03,200
And by the way those ports, Mac and Linux are now also in the GitHub

1454
01:19:03,200 --> 01:19:04,100
that people are working on.

1455
01:19:04,200 --> 01:19:09,500
So you can you can get those either from The Forum site or probably

1456
01:19:09,500 --> 01:19:10,800
the GitHub is the right place to do that.

1457
01:19:10,800 --> 01:19:14,700
Now you can check our tweetbot which tweets the schedule.

1458
01:19:14,700 --> 01:19:17,500
So if you want to catch the series live and if you do want to get

1459
01:19:17,500 --> 01:19:21,700
stories alive, I think the next one will be Monday, probably 5 p.m.

1460
01:19:21,700 --> 01:19:22,200
but I don't know.

1461
01:19:22,200 --> 01:19:24,900
So check the tweetbot because I'm not sure what next week's schedule

1462
01:19:24,900 --> 01:19:29,500
is going to be the Cinerama is running a movie a movie series that has

1463
01:19:29,500 --> 01:19:31,200
a lot of movies that I want to go see again.

1464
01:19:32,200 --> 01:19:34,000
And so I may have to move

1465
01:19:34,200 --> 01:19:38,800
the stream may have to be moved to weird times next week.

1466
01:19:38,800 --> 01:19:42,600
So check the tweetbot because, you know, I'm going to try and catch a

1467
01:19:42,600 --> 01:19:43,600
few movies next week.

1468
01:19:44,600 --> 01:19:47,800
Anyway, that's it for this week and handmade hero.

1469
01:19:47,800 --> 01:19:50,900
We will be back next week to do some more programming.

1470
01:19:50,900 --> 01:19:54,100
And I don't know if we're going to do, like I said, I kind of started

1471
01:19:54,100 --> 01:19:54,500
getting.

1472
01:19:55,300 --> 01:19:56,600
I'm kind of into that little display.

1473
01:19:56,600 --> 01:19:57,500
We made at the bottom there.

1474
01:19:57,500 --> 01:20:01,600
So we may do another week of debug display coding, before we do the

1475
01:20:01,600 --> 01:20:04,000
lip stuff because we didn't really go further.

1476
01:20:04,200 --> 01:20:05,700
Onto the printing out of stuff.

1477
01:20:06,800 --> 01:20:07,300
Area.

1478
01:20:07,800 --> 01:20:11,300
So I may I may actually say, let's do one more week of just debug

1479
01:20:11,300 --> 01:20:12,200
print out stuff.

1480
01:20:12,400 --> 01:20:16,100
I mean, debug visualization stuff and then maybe we'll go do the lib

1481
01:20:16,400 --> 01:20:16,700
stuff.

1482
01:20:16,700 --> 01:20:17,100
So who knows?

1483
01:20:17,100 --> 01:20:17,600
We'll see.

1484
01:20:18,300 --> 01:20:21,200
But anyway, I hope to see you back here for that until then have a

1485
01:20:21,200 --> 01:20:25,400
great weekend programming and I will see you guys on the internet.

1486
01:20:25,500 --> 01:20:26,400
Take it easy, everyone.

