1
00:00:05,100 --> 00:00:07,500
Hello everyone and welcome to handmade here on the show.

2
00:00:07,500 --> 00:00:10,000
We could complete game live on stream.

3
00:00:10,500 --> 00:00:18,400
We just finished yesterday doing a sort of upgrade to multi render

4
00:00:18,400 --> 00:00:19,200
Target rendering.

5
00:00:19,200 --> 00:00:22,800
We had sort of went through a couple tranches of doing it first we

6
00:00:23,000 --> 00:00:24,800
supported in the render stuff.

7
00:00:24,800 --> 00:00:27,200
Then we spread our software renderer that we supported in our hardware

8
00:00:27,200 --> 00:00:29,100
renderer and we're basically done with that now.

9
00:00:29,900 --> 00:00:32,299
And so at this point we're ready to kind of go back and start working

10
00:00:32,299 --> 00:00:34,700
on our Z pasta.

11
00:00:35,500 --> 00:00:40,100
But I was thinking today since now is kind of a good stopping point a

12
00:00:40,100 --> 00:00:43,600
little bit I was thinking of going back here in just cleaning out some

13
00:00:43,600 --> 00:00:47,900
of the bugs that we have that are just like typos in places or things

14
00:00:47,900 --> 00:00:50,400
that we didn't quite do correctly.

15
00:00:50,400 --> 00:00:53,800
For whatever reason that we know we didn't do correctly but we haven't

16
00:00:54,300 --> 00:00:59,800
gone around to actually look at and so I appreciate by the way.

17
00:00:59,800 --> 00:01:04,200
Anyone if you have pre-ordered the game there on your send owl

18
00:01:04,200 --> 00:01:04,900
download page.

19
00:01:05,099 --> 00:01:07,800
You can download stuff, there is a code, you can use and some

20
00:01:07,800 --> 00:01:10,300
instructions on that page, you can go look for if you didn't know

21
00:01:10,300 --> 00:01:10,700
already.

22
00:01:12,000 --> 00:01:14,700
There's there's instructions there about how to get on the private

23
00:01:14,700 --> 00:01:17,400
GitHub and that's what I'm on right here.

24
00:01:19,700 --> 00:01:20,900
And a lot of people ask for that.

25
00:01:20,900 --> 00:01:23,600
So I did the work of actually supporting it and it's there and it's

26
00:01:23,600 --> 00:01:24,600
updated nightly.

27
00:01:24,600 --> 00:01:27,600
So it's synced, it's always up to date.

28
00:01:28,400 --> 00:01:31,600
If you go on there, if you've noticed a type or a bug, you can report

29
00:01:31,600 --> 00:01:34,500
it and it's pretty handy because then we have this little list that we

30
00:01:34,500 --> 00:01:34,800
can look at

31
00:01:35,000 --> 00:01:36,400
So that's kind of a nice feature.

32
00:01:36,600 --> 00:01:39,400
I don't really use the GitHub for anything but I do like having the

33
00:01:39,400 --> 00:01:40,000
little bug list.

34
00:01:40,000 --> 00:01:41,100
I think that's pretty handy.

35
00:01:45,400 --> 00:01:47,400
So if you want to report when you can always do it there, if you

36
00:01:47,400 --> 00:01:49,800
didn't know about the private repo, you do now.

37
00:01:50,500 --> 00:01:52,900
And if you pre-ordered, you have access to it already, you just need

38
00:01:52,900 --> 00:01:56,700
to go use your code to authorize whatever your GitHub username is.

39
00:01:57,700 --> 00:01:59,600
So, here is a bunch of stuff we've got.

40
00:02:00,000 --> 00:02:03,700
And I'm just going to kind of go through these and see, like, which

41
00:02:03,700 --> 00:02:04,300
one's of them.

42
00:02:04,300 --> 00:02:07,000
I think we could fix and which one's of them.

43
00:02:07,000 --> 00:02:10,500
I think we might need to leave open, right?

44
00:02:11,800 --> 00:02:16,500
All right, so let's start with wrong GL view, Port parameters, and

45
00:02:16,500 --> 00:02:17,900
we've got two problems here.

46
00:02:18,500 --> 00:02:27,400
So what happens here I believe is that we sort of have a, we have this

47
00:02:27,400 --> 00:02:33,000
notion of what size things are and you know, we're talking about what

48
00:02:33,000 --> 00:02:38,000
sighs we were rendering to originally, but then we sort of were using

49
00:02:38,000 --> 00:02:41,400
the wrong thing like commands with and commands height is

50
00:02:41,600 --> 00:02:47,200
Is the size that we're going to talk about in terms of pixels but we

51
00:02:47,200 --> 00:02:50,400
don't when we're using opengl, it's free for us to just stretch things

52
00:02:50,400 --> 00:02:52,300
out to the whole size of the screen.

53
00:02:52,500 --> 00:02:56,900
So it seems rather logical to just always use however, big the window

54
00:02:56,900 --> 00:02:57,800
is, right?

55
00:02:58,800 --> 00:02:59,800
So we could do that.

56
00:03:00,000 --> 00:03:01,600
And that's what they're suggesting here.

57
00:03:02,000 --> 00:03:05,700
Now, there's a problem with this approach, however, which is what

58
00:03:05,700 --> 00:03:09,400
happens when the screen is not the same aspect ratio as what we're

59
00:03:09,400 --> 00:03:10,000
rendering.

60
00:03:10,500 --> 00:03:13,800
So we kind of need to actually do a little bit more here to fix this

61
00:03:13,800 --> 00:03:14,700
bug, but that's okay.

62
00:03:14,700 --> 00:03:17,300
Today, that's something we can totally do.

63
00:03:19,500 --> 00:03:23,600
Which is to say, we'd like to have, you know, put black bars on the

64
00:03:23,600 --> 00:03:24,600
screen or something.

65
00:03:25,000 --> 00:03:29,700
If we're running in something other than a 16 by 9 display,

66
00:03:30,000 --> 00:03:30,100
Right.

67
00:03:30,100 --> 00:03:32,900
We'd like, you know, we'd like to be able to make it so that it was

68
00:03:32,900 --> 00:03:36,500
centered in the window not stretched and warped in a bad way.

69
00:03:37,600 --> 00:03:39,100
So let's go ahead and start here.

70
00:03:39,100 --> 00:03:40,500
Today is day 3.

71
00:03:40,500 --> 00:03:41,000
22.

72
00:03:41,000 --> 00:03:46,200
So I am starting with the the day 321 source code here, that's what

73
00:03:46,300 --> 00:03:47,100
I'll be working with.

74
00:03:47,100 --> 00:03:50,700
So, if you want to follow along at home, please go ahead and and grab

75
00:03:50,700 --> 00:03:52,100
that code.

76
00:03:53,200 --> 00:03:57,700
Let me go ahead and also just make sure we're running properly and

77
00:03:57,700 --> 00:03:58,700
everything's good here.

78
00:04:00,300 --> 00:04:01,100
Yes.

79
00:04:01,100 --> 00:04:02,200
So I think we're all good.

80
00:04:02,200 --> 00:04:05,000
Everything seems to be running pleasantly and no problems.

81
00:04:05,900 --> 00:04:10,100
So if and I suppose the other thing I can sort of do is say well okay.

82
00:04:10,100 --> 00:04:19,100
If I was to run this here with a with a different size window and like

83
00:04:19,100 --> 00:04:22,600
this, you know, we could sort of make it so,

84
00:04:22,900 --> 00:04:23,700
This worked better.

85
00:04:23,700 --> 00:04:27,000
Like so, for example, you can see here is I'm changing the size of the

86
00:04:27,000 --> 00:04:29,300
window, all it's doing is cropping.

87
00:04:30,000 --> 00:04:34,600
And that's, you know, we could call it a bug, we can call it a

88
00:04:34,600 --> 00:04:35,000
feature.

89
00:04:35,000 --> 00:04:36,200
I don't know what you want to call it.

90
00:04:36,200 --> 00:04:38,900
I'm inclined to agree with this bug and say it's a bug.

91
00:04:39,200 --> 00:04:43,100
So what we'd like to do is make it so that we use that window within

92
00:04:43,100 --> 00:04:45,700
fit their, but as I said, this is going to cause some warping.

93
00:04:45,700 --> 00:04:48,500
So let's take a look at what happens when I do that.

94
00:04:48,500 --> 00:04:51,300
And then I'll sort of show you how we can, you know, why it happened

95
00:04:51,300 --> 00:04:52,600
and we'll kind of go into it.

96
00:04:52,800 --> 00:04:54,300
Into a little more detail.

97
00:04:54,300 --> 00:04:56,300
So I don't think we set the viewport anywhere in here.

98
00:04:56,500 --> 00:04:58,400
Yeah, I think we only send it over here.

99
00:05:00,400 --> 00:05:00,700
Right.

100
00:05:00,700 --> 00:05:01,000
Yeah.

101
00:05:01,800 --> 00:05:06,100
And so if you take a look here, when we do open gel display bitmap,

102
00:05:06,200 --> 00:05:09,200
you can see here that you know, when we do display bitmap, that's the

103
00:05:09,200 --> 00:05:19,100
one, this is the path we use when we are going to do our when we're

104
00:05:19,100 --> 00:05:20,800
bleeding our software into the screen.

105
00:05:21,500 --> 00:05:24,200
But you can see here that yes, we would like to take the window within

106
00:05:24,200 --> 00:05:27,000
the window height and we'd like to draw to all of it, right?

107
00:05:27,300 --> 00:05:29,200
So if it's smaller than what we drew, we want to

108
00:05:29,400 --> 00:05:31,800
Thinking if it's bigger we want to expand, right?

109
00:05:32,300 --> 00:05:36,200
And the same thing would be true when we do our Geo viewport here for

110
00:05:36,200 --> 00:05:37,100
opengl renderer commands.

111
00:05:37,700 --> 00:05:40,400
When we do our viewport here, we would like to do the same thing.

112
00:05:41,300 --> 00:05:45,000
Make sure that we actually are drawing to just however, big the window

113
00:05:45,000 --> 00:05:47,200
with and window height actually are.

114
00:05:47,200 --> 00:05:50,600
Now we do have a sort of problem with that, which is that if we're

115
00:05:50,600 --> 00:05:54,700
doing that, we have to then sort of continue down all the way through

116
00:05:55,100 --> 00:05:58,000
and say that instead of using commands with the command site, for our

117
00:05:58,000 --> 00:05:58,700
render targets.

118
00:05:58,700 --> 00:05:59,100
Now,

119
00:05:59,400 --> 00:05:59,800
We're also.

120
00:06:00,000 --> 00:06:03,600
Going to have to use window with and window height for those targets,

121
00:06:03,900 --> 00:06:04,400
right?

122
00:06:04,700 --> 00:06:08,200
Because we're drawing it, you know, we have to make sure that

123
00:06:08,200 --> 00:06:10,800
everything lines up for all of our render targets, right?

124
00:06:10,800 --> 00:06:14,400
So that's just kind of a requirement that we would have to have there

125
00:06:14,900 --> 00:06:19,300
unless we take some other sort of steps later to make sure that things

126
00:06:19,300 --> 00:06:19,400
go.

127
00:06:19,400 --> 00:06:22,300
Okay, so there's there's kind of two ways that we could do it.

128
00:06:22,400 --> 00:06:25,700
We'll do it this way at first and then we'll kind of go from there,

129
00:06:25,700 --> 00:06:26,200
right?

130
00:06:27,800 --> 00:06:34,200
All right, so if we go ahead and look at what happens, now, you can

131
00:06:34,200 --> 00:06:37,900
kind of see the problem that I was trying to describe before, you

132
00:06:37,900 --> 00:06:40,000
know, pictures always worth a thousand words.

133
00:06:40,000 --> 00:06:42,100
So my description of it probably wasn't that clear.

134
00:06:42,100 --> 00:06:44,400
But hopefully, you can now see what I'm talking about.

135
00:06:44,600 --> 00:06:49,400
You know, if I shrink the window down to this size, you know, probably

136
00:06:49,500 --> 00:06:53,100
the person doesn't want to play this game, right?

137
00:06:53,200 --> 00:06:55,100
That is not what they were trying to see.

138
00:06:55,100 --> 00:06:57,400
They didn't want, you know, a super tall.

139
00:06:57,600 --> 00:07:02,600
A skinny version of the game when they size it, this way probably nor

140
00:07:02,600 --> 00:07:06,100
did they want a long smushy version, you know, if they're going the

141
00:07:06,100 --> 00:07:06,700
other way?

142
00:07:07,200 --> 00:07:09,500
And you know, the way that we've got it, now, it looks like our

143
00:07:09,500 --> 00:07:11,000
pickings also off when we do that.

144
00:07:11,000 --> 00:07:15,400
So we should probably go test some go fix that as well, but that's a

145
00:07:15,400 --> 00:07:17,400
separate issue anyway.

146
00:07:18,800 --> 00:07:22,000
I don't really know what it's this one right yet.

147
00:07:22,500 --> 00:07:25,900
You can see that we still match in both cases, so that's like I said,

148
00:07:25,900 --> 00:07:27,400
that's that GL viewport call.

149
00:07:27,500 --> 00:07:30,500
We did it in both cases, when we switch the suffer under, we get the

150
00:07:30,500 --> 00:07:32,300
same warping which is good.

151
00:07:32,300 --> 00:07:33,600
We want to be the same both cases.

152
00:07:33,600 --> 00:07:36,700
But what we'd like to do is do something better than what we're

153
00:07:36,700 --> 00:07:39,400
getting here in both cases.

154
00:07:40,800 --> 00:07:45,100
All right, so let's start if we can.

155
00:07:50,900 --> 00:07:54,800
Let's start by talking about the problem on the Blackboard a little

156
00:07:54,800 --> 00:07:58,400
bit just so you can understand what's actually going on if you're

157
00:07:58,400 --> 00:08:03,200
unfamiliar with this and then we can go ahead and come up with a fix

158
00:08:03,200 --> 00:08:03,500
for it.

159
00:08:03,500 --> 00:08:04,900
So here we are on day 3.

160
00:08:04,900 --> 00:08:09,800
22, and this is aspect ratio.

161
00:08:12,100 --> 00:08:12,400
Oops.

162
00:08:12,400 --> 00:08:19,500
Not raishin ratio resize and we, I can't remember.

163
00:08:19,600 --> 00:08:21,300
We may have already covered this.

164
00:08:21,400 --> 00:08:22,800
I can't quite remember

165
00:08:34,100 --> 00:08:37,600
when we do our display buffer to window,

166
00:08:43,299 --> 00:08:44,700
So it doesn't look like we.

167
00:08:44,700 --> 00:08:50,800
Yeah, we always split 121 here so we didn't really address this ever

168
00:08:51,300 --> 00:08:51,700
it.

169
00:08:51,700 --> 00:08:52,000
Here it is.

170
00:08:52,000 --> 00:08:54,000
So there's a to do centering black bars.

171
00:08:54,000 --> 00:08:54,400
Okay?

172
00:08:54,400 --> 00:08:56,700
Just wanted to make sure I wasn't telling you something that you

173
00:08:56,700 --> 00:08:58,300
already knew if you watch the series.

174
00:08:59,000 --> 00:08:59,500
Okay.

175
00:09:00,600 --> 00:09:06,100
So here's our basic problem, we have a number of things as game

176
00:09:06,100 --> 00:09:10,000
developers that we can choose to do with respect to supporting

177
00:09:10,000 --> 00:09:11,100
multiple monitor size.

178
00:09:11,100 --> 00:09:15,100
Some of them are much harder than others and we're going to take a

179
00:09:15,100 --> 00:09:18,400
kind of a middle ground with handmade hero and we're not going to go

180
00:09:18,500 --> 00:09:23,600
too far down the rabbit hole but you know, I'm going to least tell you

181
00:09:23,700 --> 00:09:25,900
sort of what those tranches are.

182
00:09:26,500 --> 00:09:30,000
So one way is, you know, no aspect ratio.

183
00:09:30,200 --> 00:09:30,600
For it.

184
00:09:35,400 --> 00:09:36,100
Right.

185
00:09:36,700 --> 00:09:42,400
One way is sort of like a black bar.

186
00:09:44,800 --> 00:09:51,600
And another way is like, you know, actual I guess aspect of where, I

187
00:09:51,600 --> 00:09:52,500
guess we'll call it.

188
00:09:54,300 --> 00:09:55,800
And I'll briefly talk about what these are.

189
00:09:57,100 --> 00:10:00,800
So the simplest thing to do obviously is just not support different

190
00:10:00,800 --> 00:10:02,100
aspect ratios, right.

191
00:10:02,300 --> 00:10:03,300
And what do I mean by that?

192
00:10:03,300 --> 00:10:07,000
Well, what I mean by that is, let's say you made the game and you made

193
00:10:07,000 --> 00:10:10,800
it at 1920 by 1080, right?

194
00:10:10,900 --> 00:10:11,800
That's what you did.

195
00:10:12,100 --> 00:10:13,700
So you decided that's the resolution.

196
00:10:13,700 --> 00:10:16,600
I'm running my game at that has an aspect ratio.

197
00:10:16,600 --> 00:10:17,000
Right?

198
00:10:17,000 --> 00:10:20,200
And you know, if you've never heard of aspect ratio before, it's

199
00:10:20,200 --> 00:10:22,600
probably you have because even if you don't program, you probably

200
00:10:22,600 --> 00:10:23,600
heard of aspect ratio.

201
00:10:23,900 --> 00:10:28,000
Aspect ratio is just talking about how long one side of the monitor,

202
00:10:28,000 --> 00:10:30,900
is to how long the other side is, right?

203
00:10:30,900 --> 00:10:38,700
And so, typically a 1920 by 1080 or HDTV, sort of aspect ratio is 16

204
00:10:38,700 --> 00:10:43,400
on the long side by nine on the on the short side, right?

205
00:10:43,500 --> 00:10:49,300
So we typically call this a 16 by 9 aspect ratio and you can kind of

206
00:10:49,600 --> 00:10:53,000
see that that's you know, a standard 1080p television, whatever is

207
00:10:53,000 --> 00:10:53,600
going to be that.

208
00:10:53,700 --> 00:10:54,900
At as a standard.

209
00:10:54,900 --> 00:10:56,400
It's it's a common thing to be.

210
00:10:56,400 --> 00:10:58,200
It's what a lot of monitors are.

211
00:10:58,200 --> 00:11:00,500
Although there are plenty of other ones like 16 by 10 and whatever

212
00:11:00,500 --> 00:11:00,900
else.

213
00:11:02,100 --> 00:11:07,000
Okay, so one way is to just not have aspect ratio support.

214
00:11:07,500 --> 00:11:13,300
Let the, let the cim the monitor figure it out, just don't deal with

215
00:11:13,300 --> 00:11:18,800
it and what that tends to look like in practice in a game is there's a

216
00:11:18,800 --> 00:11:21,300
Windows called called change display settings.

217
00:11:23,600 --> 00:11:29,500
And what it does is it basically allows you to just straight-up change

218
00:11:29,500 --> 00:11:34,100
the displays resolution to what you wanted it to be right.

219
00:11:35,100 --> 00:11:37,000
So what you do here is you pass.

220
00:11:37,300 --> 00:11:38,600
Let's see.

221
00:11:38,600 --> 00:11:40,000
Where is it?

222
00:11:41,500 --> 00:11:43,000
Hmm.

223
00:11:43,600 --> 00:11:44,800
Got a hot through for it.

224
00:11:44,800 --> 00:11:45,300
Here we go.

225
00:11:46,100 --> 00:11:49,300
You pass a certain pels with and Pell's height, which is the height

226
00:11:49,300 --> 00:11:52,400
and width of the screen in pixels, and you just say windows.

227
00:11:52,700 --> 00:11:56,100
This is the display resolution I want, and you're going to have to

228
00:11:56,100 --> 00:11:57,500
figure out a way to get it, right?

229
00:11:57,500 --> 00:11:59,900
So we would just call that with 1920 by.

230
00:12:00,000 --> 00:12:03,800
An 80 and be like, good luck and then the monitor will do, whatever

231
00:12:03,800 --> 00:12:04,700
the monitor will do.

232
00:12:04,700 --> 00:12:07,900
So the monitor gets a signal at 1920 by 1080, hopefully the monitor

233
00:12:07,900 --> 00:12:11,000
supports it if it doesn't you're totally, you know, game won't even

234
00:12:11,000 --> 00:12:11,300
run.

235
00:12:11,300 --> 00:12:11,500
Right?

236
00:12:11,500 --> 00:12:14,200
I'll just show a screen where the monitor just comes up with thing

237
00:12:14,200 --> 00:12:16,900
that says, like, unrecognized video signal or something, right?

238
00:12:18,200 --> 00:12:20,600
But if the monitors needed of resolution, isn't that?

239
00:12:20,700 --> 00:12:25,200
If the monitor is 16 by 10 residents, say, instead of 16 by 9, it will

240
00:12:25,200 --> 00:12:26,900
figure out something to do, who knows?

241
00:12:26,900 --> 00:12:29,600
Maybe it'll stretch, maybe I'll put black bars on the top and the

242
00:12:29,600 --> 00:12:29,900
bottom.

243
00:12:30,000 --> 00:12:31,700
Mmm, who knows what he'll do, right?

244
00:12:32,300 --> 00:12:35,900
But the point is, you can choose to have no aspect ratio support in

245
00:12:35,900 --> 00:12:36,700
the game whatsoever.

246
00:12:36,700 --> 00:12:39,300
If you wanted to, and plenty of games actually do that, they just said

247
00:12:39,300 --> 00:12:43,000
a resolution and they just expect you to have a monitor that will cope

248
00:12:43,000 --> 00:12:43,300
with it.

249
00:12:43,300 --> 00:12:44,600
And that's it, right?

250
00:12:45,100 --> 00:12:46,700
So, we're not going to do that one.

251
00:12:47,300 --> 00:12:47,600
Okay.

252
00:12:47,600 --> 00:12:49,300
We're going to try to do a little better than that one.

253
00:12:50,100 --> 00:12:53,100
We're going to shoot for black bar and we'll talk about that in a

254
00:12:53,100 --> 00:12:53,500
second.

255
00:12:53,500 --> 00:12:55,800
But then, let me talk about this one first, since it's another one

256
00:12:55,800 --> 00:12:59,800
that we're not going to do aspect, aware games are

257
00:13:00,100 --> 00:13:05,000
Games which try to put a bunch of logic into the game to allow you to

258
00:13:05,000 --> 00:13:08,600
play it at any conceivable aspect ratio, right?

259
00:13:09,700 --> 00:13:15,800
Now, this is very difficult to do with a 2-D game, like ours, which is

260
00:13:15,800 --> 00:13:17,600
why I'm not going to do it.

261
00:13:18,300 --> 00:13:21,000
It's not particularly difficult with certain types of games.

262
00:13:21,000 --> 00:13:26,000
For example, first person shooters are actually quite simple to make

263
00:13:26,000 --> 00:13:26,900
aspect aware.

264
00:13:27,000 --> 00:13:30,700
Now, it may not be so easy to guarantee a fair multiplayer experience

265
00:13:30,700 --> 00:13:33,300
because the fov is going to change and there's going to be a bunch of

266
00:13:33,300 --> 00:13:34,500
like sort of other things.

267
00:13:34,500 --> 00:13:39,100
But as least, as far as a single player, first person game, making it

268
00:13:39,100 --> 00:13:39,300
a

269
00:13:39,500 --> 00:13:40,700
To where it's actually pretty easy.

270
00:13:40,700 --> 00:13:41,800
Now, why is that?

271
00:13:42,300 --> 00:13:45,400
Well, what is aspect of where mean, well, aspect of, where means that,

272
00:13:45,400 --> 00:13:49,500
you know, I've got a game and maybe the game runs on a screen that

273
00:13:49,500 --> 00:13:52,700
looks like this or maybe the game runs on a screen, that's a little

274
00:13:52,700 --> 00:13:53,500
bit wider.

275
00:13:53,600 --> 00:13:58,300
And there's extra room or maybe even a little wider than that, right?

276
00:13:58,900 --> 00:14:02,800
Or maybe it's on a screen that's like taller, right?

277
00:14:03,300 --> 00:14:04,900
And who knows, right?

278
00:14:05,900 --> 00:14:10,000
And again we're specifically talking about aspect ratio here, not

279
00:14:10,000 --> 00:14:13,300
resolution because there are two different things right.

280
00:14:13,300 --> 00:14:17,500
One is about, you know, if it's just resolution, we can just scale.

281
00:14:17,500 --> 00:14:20,800
If the aspect ratio is the same, we can just scale our bitmaps up or

282
00:14:20,800 --> 00:14:23,600
down and me and maybe they look a little blurry or because we had to

283
00:14:23,600 --> 00:14:26,500
do that, but we can accommodate that pretty well.

284
00:14:26,700 --> 00:14:30,400
But the fundamental aspect ratio is like the shape of what we're

285
00:14:30,400 --> 00:14:31,500
drawing, right?

286
00:14:31,600 --> 00:14:34,800
Whether it's wide or not and that has implications hopefully you can

287
00:14:34,800 --> 00:14:35,500
understand

288
00:14:35,700 --> 00:14:36,500
Why that isn't patients.

289
00:14:36,500 --> 00:14:41,000
But anyway, for a 3D game for a free 3D, like first person shooter

290
00:14:41,300 --> 00:14:41,900
now, 3D game.

291
00:14:41,900 --> 00:14:44,700
If it was a 3D game that was just like, ours did solve the same

292
00:14:44,700 --> 00:14:46,400
problem, so it's really not 3D or 2D.

293
00:14:46,800 --> 00:14:50,700
It's more about the sort of type of game.

294
00:14:50,800 --> 00:14:52,900
But for an FPS, right?

295
00:14:53,700 --> 00:14:56,900
All you need to know is that well, there's a gun in the corner.

296
00:14:57,000 --> 00:14:59,800
So we have to kind of put that gun in the corner, right?

297
00:15:02,000 --> 00:15:03,900
And then there's maybe like a health bar up here.

298
00:15:03,900 --> 00:15:05,900
So we need to just put that whole thing in the corner.

299
00:15:06,000 --> 00:15:09,500
But then otherwise, we just render the scene with whatever are like

300
00:15:09,500 --> 00:15:12,000
view for us to actually is and we're done, right?

301
00:15:12,300 --> 00:15:16,200
So in order to make a simple first person, shooter aspect ratio where

302
00:15:16,200 --> 00:15:17,100
it's not that hard.

303
00:15:17,100 --> 00:15:19,900
You just have to know where the corners of the screen are and sort of

304
00:15:19,900 --> 00:15:23,600
like correctly place a few special items and now you're done.

305
00:15:23,800 --> 00:15:26,900
So making an aspect ratio where one of those is not particularly

306
00:15:26,900 --> 00:15:27,900
difficult, right?

307
00:15:29,100 --> 00:15:29,900
The design of

308
00:15:30,000 --> 00:15:33,900
The game doesn't really change that dramatically again for a simple.

309
00:15:33,900 --> 00:15:34,800
First person shooter you could.

310
00:15:34,800 --> 00:15:37,400
Imagine first person shooters that maybe had a lot to do with the

311
00:15:37,400 --> 00:15:38,100
screen size.

312
00:15:38,100 --> 00:15:42,500
So you can't say for all it's not true for all game designs but for a

313
00:15:42,500 --> 00:15:44,500
certainly something like Quake Arena.

314
00:15:44,500 --> 00:15:49,200
Let's say you could totally do this but for a game like ours, we don't

315
00:15:49,200 --> 00:15:52,300
really have that ability and the reason for that is we're kind of

316
00:15:52,300 --> 00:15:56,600
counting on a particular room shape and we need you to be able to see

317
00:15:56,600 --> 00:15:58,500
that whole room, right?

318
00:15:58,500 --> 00:15:59,900
And that room needs to be on the screen.

319
00:16:00,000 --> 00:16:02,700
In the whole time for gameplay reasons.

320
00:16:03,800 --> 00:16:08,600
So there really is no way to make our game aspect ratio aware without.

321
00:16:09,000 --> 00:16:13,200
I mean, it possibly, it might not even be feasible right to do it.

322
00:16:13,200 --> 00:16:15,800
May it may literally not be able to do the design that I have.

323
00:16:15,800 --> 00:16:20,600
May not simply work aspect ratio where so because since you know you

324
00:16:20,600 --> 00:16:24,000
need to see this thing and that is the shape, there's really nothing

325
00:16:24,000 --> 00:16:25,300
you can do about that.

326
00:16:25,500 --> 00:16:30,100
All you can do is just maybe like, you know, pad out by putting some

327
00:16:30,200 --> 00:16:33,400
extra UI on some, you know, you could try to maybe decorate it.

328
00:16:33,600 --> 00:16:35,600
Little bit but fundamentally speaking.

329
00:16:35,800 --> 00:16:39,000
You're going to have to show that aspect ratio image somewhere on the

330
00:16:39,000 --> 00:16:42,300
screen and you're going to be left with empty space if that's not the

331
00:16:42,300 --> 00:16:43,100
shape of the monitor.

332
00:16:44,500 --> 00:16:45,100
Right?

333
00:16:45,100 --> 00:16:45,700
Which is a problem.

334
00:16:45,700 --> 00:16:50,200
You don't have in this circumstance so that's why I'm not going to do

335
00:16:50,200 --> 00:16:50,800
that one.

336
00:16:51,200 --> 00:16:54,300
What I'm going to do is basically the middle ground here which is sort

337
00:16:54,300 --> 00:16:58,800
of black bar aspect ratio where, which is to say that we will ensure

338
00:16:58,800 --> 00:17:04,300
that you get a reasonable crisp, image, centered and stretched

339
00:17:04,300 --> 00:17:05,000
appropriately.

340
00:17:05,000 --> 00:17:09,500
So that it fills your monitor as much as it can given the aspect ratio

341
00:17:10,000 --> 00:17:12,800
that you have and that we need, right?

342
00:17:13,200 --> 00:17:13,900
So what that,

343
00:17:14,099 --> 00:17:19,599
Tails is saying well okay we know that we need to draw a 16 by 9

344
00:17:19,599 --> 00:17:20,200
image.

345
00:17:20,200 --> 00:17:25,400
So if your monitor is actually 16 by 10, we will figure that out.

346
00:17:25,500 --> 00:17:28,099
We will draw the image here, right?

347
00:17:28,200 --> 00:17:32,600
And then we'll fill this in here and here with black so that you don't

348
00:17:32,600 --> 00:17:33,500
see it, right?

349
00:17:33,500 --> 00:17:35,800
So that it's so that it's like minimally invasive.

350
00:17:35,800 --> 00:17:38,800
Just like a letterbox home movie, right?

351
00:17:40,600 --> 00:17:44,700
And again, the reason I think it's better for us to do that then to

352
00:17:44,700 --> 00:17:48,000
call change display settings and have the monitor that is because we

353
00:17:48,000 --> 00:17:51,200
don't know what the monitor is going to do change, display settings is

354
00:17:51,200 --> 00:17:53,800
disruptive to the user experience, right?

355
00:17:54,400 --> 00:17:57,400
And furthermore, it doesn't really address the problem of if the user

356
00:17:57,400 --> 00:17:59,900
wanted to play in a window, which, you know, maybe we want to support.

357
00:18:00,000 --> 00:18:03,000
Maybe we don't, but if we do, if they want to draw on a window, you're

358
00:18:03,000 --> 00:18:05,000
going to have this problem regardless because you can't call change

359
00:18:05,000 --> 00:18:06,200
display settings for the window.

360
00:18:06,200 --> 00:18:08,800
The window is however, big the user stretched it, right?

361
00:18:10,000 --> 00:18:12,800
So that's, that's what we'd like to do, okay?

362
00:18:13,400 --> 00:18:17,300
So, in order to do that aspect ratio stuff correctly, what we would

363
00:18:17,300 --> 00:18:22,400
like to do here is do exactly sort of that procedure.

364
00:18:22,400 --> 00:18:24,400
We have essentially two cases

365
00:18:26,500 --> 00:18:27,900
That we're dealing with, right?

366
00:18:28,900 --> 00:18:32,500
We are dealing with the case where the monitor

367
00:18:33,600 --> 00:18:38,000
Has extra room on the top and bottom in which case we need to fill

368
00:18:38,000 --> 00:18:39,700
those with blank space.

369
00:18:40,400 --> 00:18:45,300
And the other case is the sort of opposite of that where the top and

370
00:18:45,300 --> 00:18:47,300
bottom, fill just nicely.

371
00:18:47,300 --> 00:18:47,700
Oops.

372
00:18:49,900 --> 00:18:51,100
But the sides.

373
00:18:53,300 --> 00:18:54,800
Are missing, right?

374
00:18:55,300 --> 00:18:56,600
And so conceptually speaking.

375
00:18:56,600 --> 00:18:59,800
What we're doing is we're saying okay, tell me how big the monitor is.

376
00:19:00,200 --> 00:19:04,800
We're going to start in here with a 16 by 9 rectangle, right?

377
00:19:04,800 --> 00:19:09,900
We're going to sort of expand the rectangle up until it hits either

378
00:19:10,000 --> 00:19:14,600
the monitors you know vertical edges or its horizontal edges.

379
00:19:14,800 --> 00:19:19,000
If it hits these horizontal edges first then we know we would be

380
00:19:19,000 --> 00:19:20,800
filling here right?

381
00:19:21,600 --> 00:19:22,300
If instead.

382
00:19:22,400 --> 00:19:26,700
If she hits these edges first, that's what would stop it from getting

383
00:19:26,700 --> 00:19:27,300
bigger.

384
00:19:27,300 --> 00:19:29,400
Then we would know we were filling their right?

385
00:19:29,700 --> 00:19:34,700
So that's the fundamental math that we have to do but once we do that

386
00:19:34,700 --> 00:19:37,700
math then we kind of know exactly what we need.

387
00:19:38,200 --> 00:19:41,400
So what I'm going to do is I'm going to make a little piece of code

388
00:19:41,400 --> 00:19:41,700
here.

389
00:19:41,700 --> 00:19:46,000
That is capable of determining this I'm going to put it in the opengl

390
00:19:46,000 --> 00:19:47,200
side of things for the moment.

391
00:19:47,200 --> 00:19:50,600
Although we'll probably want to pull it out into something that we can

392
00:19:50,600 --> 00:19:52,100
use elsewhere, don't know.

393
00:19:52,300 --> 00:19:57,100
Well we might have, do we have some kind of a shared?

394
00:19:57,800 --> 00:20:01,400
Got some shared things here, so in the shared code, I could just put

395
00:20:01,400 --> 00:20:02,900
it in here for the aspect ratio.

396
00:20:02,900 --> 00:20:04,200
I could also put it in a render.

397
00:20:04,200 --> 00:20:05,800
That's probably the best place for it.

398
00:20:05,900 --> 00:20:08,000
I mean, it is a rendering only kind of a thing.

399
00:20:09,300 --> 00:20:14,000
So yeah, so let's say that we had something where we were going to to

400
00:20:14,000 --> 00:20:14,700
specify this

401
00:20:20,400 --> 00:20:23,200
And I guess I don't really need a separate type of return for it.

402
00:20:23,200 --> 00:20:28,500
I suppose I can just use regular rectangle return for it that seems

403
00:20:28,500 --> 00:20:29,000
reasonable.

404
00:20:29,500 --> 00:20:33,000
So I suppose I can just say, like, okay, I want to return a rectangle

405
00:20:33,000 --> 00:20:39,900
to I, that is the aspect ratio adjusted location, right?

406
00:20:41,100 --> 00:20:44,200
Aspect ratio fit, something like this.

407
00:20:44,400 --> 00:20:47,000
And so, what I want to do is I want to say, all right?

408
00:20:47,100 --> 00:20:49,500
I've got a, you know,

409
00:20:50,400 --> 00:20:52,100
A render with.

410
00:20:54,100 --> 00:20:57,100
And a render height that I'm dealing with.

411
00:20:57,100 --> 00:20:59,700
And then I have

412
00:21:00,200 --> 00:21:01,100
Window width.

413
00:21:02,600 --> 00:21:07,600
And a window height that I'm dealing with and I want you to do the

414
00:21:07,600 --> 00:21:12,700
necessary fitting to make those work out, right?

415
00:21:14,000 --> 00:21:16,000
Like I want you to sort of return me.

416
00:21:16,000 --> 00:21:16,800
The rectangle.

417
00:21:16,800 --> 00:21:21,700
I would use inside the window to draw what I'm trying to draw.

418
00:21:23,300 --> 00:21:27,400
So since I said, we had two cases, obviously.

419
00:21:27,900 --> 00:21:28,700
We have.

420
00:21:28,700 --> 00:21:29,400
And you know what?

421
00:21:29,400 --> 00:21:30,400
I'm going to do here too.

422
00:21:32,900 --> 00:21:36,100
I'm going to just do a quick check to make sure if render with.

423
00:21:37,900 --> 00:21:42,100
I want everything to be greater than 0.

424
00:21:50,500 --> 00:21:53,600
Because there's really no result and we're going to be doing some

425
00:21:53,600 --> 00:21:54,200
divides.

426
00:21:54,400 --> 00:21:57,200
So, before we go any further, I just want to say everything's got to

427
00:21:57,200 --> 00:21:57,500
be.

428
00:21:57,500 --> 00:22:00,000
We're going to return AB 0 rechtin on blit.

429
00:22:00,200 --> 00:22:03,600
Basically, if you don't give us a something to actually work with

430
00:22:05,000 --> 00:22:08,900
So then, I'm going to basically mirror those two cases.

431
00:22:08,900 --> 00:22:11,400
Like, you know, we have two cases are going to mirror those two cases,

432
00:22:12,000 --> 00:22:15,400
and, by the way, I should add, there's obviously a third case here,

433
00:22:15,400 --> 00:22:17,600
which is, it fits directly, right?

434
00:22:18,700 --> 00:22:21,500
But we don't really have to consider that case because either of these

435
00:22:21,500 --> 00:22:23,900
two cases will work in that if it happened to fit.

436
00:22:23,900 --> 00:22:24,500
Exactly.

437
00:22:24,800 --> 00:22:28,500
Either case will work out to an exact rectangle that fills, right?

438
00:22:28,800 --> 00:22:31,500
So we don't have to the reason I didn't explicitly enumerate that case

439
00:22:31,500 --> 00:22:34,000
is because we won't actually do that case.

440
00:22:35,400 --> 00:22:36,900
so, what we need to know now,

441
00:22:38,400 --> 00:22:41,200
Is we need to know some fundamental ratios, right?

442
00:22:42,500 --> 00:22:47,000
We need to know what the aspect ratio is that we actually want, right?

443
00:22:47,000 --> 00:22:51,500
And then we need to see what will happen if we try to use the the the

444
00:22:51,500 --> 00:22:54,200
window at that aspect ratio, okay?

445
00:22:55,100 --> 00:22:58,100
So let me show you kind of let me just sort of type in the code a

446
00:22:58,100 --> 00:23:01,300
little bit here and we'll sort of talk about the equation that on the

447
00:23:01,900 --> 00:23:03,800
Whiteboard, if that makes sense.

448
00:23:05,800 --> 00:23:14,800
so in this case, I'm going to ask, if I took the render with right and

449
00:23:14,800 --> 00:23:16,500
divided it by the render height,

450
00:23:21,700 --> 00:23:28,400
Okay, this would sort of giving give me a, I don't know what I would

451
00:23:28,400 --> 00:23:28,700
call it.

452
00:23:28,700 --> 00:23:33,500
It's a it's sort of a fundamental multiplier, right?

453
00:23:33,600 --> 00:23:37,600
This aspect ratio, it's a fundamental multiplier that if you gave me

454
00:23:37,600 --> 00:23:42,300
another height, it would tell me what the height would be based on

455
00:23:42,300 --> 00:23:43,800
this ratio, right?

456
00:23:44,500 --> 00:23:47,100
So, you know, just trying to ground it.

457
00:23:47,100 --> 00:23:48,300
A little bit for you here.

458
00:23:48,700 --> 00:23:51,300
If I take some width and I

459
00:23:51,500 --> 00:23:53,700
Divide it by some height, right?

460
00:23:56,000 --> 00:23:59,800
Then what I do if I multiply by some other height,

461
00:24:00,000 --> 00:24:01,700
Here, right?

462
00:24:01,700 --> 00:24:07,300
If I'm going to multiply out by some other height here is I sort of I

463
00:24:07,300 --> 00:24:13,500
cancel out the Heights and I'm left with a width that's in that new

464
00:24:13,700 --> 00:24:16,100
sort of space, if that makes sense.

465
00:24:16,600 --> 00:24:17,900
You can kind of think of these.

466
00:24:17,900 --> 00:24:22,700
Almost, as units might be a good way to think of it, really.

467
00:24:23,000 --> 00:24:26,900
If I take, you know, x with

468
00:24:28,000 --> 00:24:31,200
Over y height, right?

469
00:24:31,600 --> 00:24:36,500
And then I multiply it by, you know, a height.

470
00:24:38,000 --> 00:24:43,400
Right, then my Heights cancel, right?

471
00:24:43,900 --> 00:24:51,700
And I'm left with, you know, a x over y width and that is the width

472
00:24:51,700 --> 00:24:57,100
that a, that a would have implied, right?

473
00:24:58,100 --> 00:25:03,600
If it was at the same ratio as this original ratio.

474
00:25:05,100 --> 00:25:08,400
I'm trying to think of a, I feel like my brains too mushy today.

475
00:25:08,400 --> 00:25:11,900
For some reason, I feel like that's not a good enough explanation of

476
00:25:11,900 --> 00:25:12,300
this.

477
00:25:16,900 --> 00:25:21,300
What I'm trying to say is once you produce an aspect ratio, right?

478
00:25:21,400 --> 00:25:24,000
So once I have with over height,

479
00:25:30,300 --> 00:25:34,300
once I have an aspect ratio, you can think of this as a fundamental

480
00:25:34,300 --> 00:25:41,800
constant that allows me to generate other widths, whatever the

481
00:25:41,800 --> 00:25:45,400
numerator is, it allows me to generate other widths that are in the

482
00:25:45,400 --> 00:25:50,700
same proportion to some Heights as this with was to this height,

483
00:25:50,900 --> 00:25:51,400
right?

484
00:25:51,500 --> 00:25:56,500
So if I have with zero over height zero and I want to know what with

485
00:25:56,500 --> 00:25:59,400
one would be like what is with one?

486
00:25:59,600 --> 00:26:05,000
If I know H1, then the answer is I just have to multiply it by this

487
00:26:05,000 --> 00:26:08,000
fundamental aspect ratio, right?

488
00:26:08,500 --> 00:26:13,400
Because with one over height one, right.

489
00:26:13,700 --> 00:26:18,100
We're saying if it equals if I want the aspect ratios of these two to

490
00:26:18,100 --> 00:26:19,600
be equal, right?

491
00:26:20,000 --> 00:26:23,100
Then you can see if I solved for with one.

492
00:26:23,300 --> 00:26:28,500
I would end up with 1 equals with zero times height 1 over height 0.

493
00:26:28,700 --> 00:26:29,400
You can I

494
00:26:29,500 --> 00:26:31,800
Isolate that term, right?

495
00:26:31,900 --> 00:26:36,000
And say that that's with zero over height zero times height one,

496
00:26:36,300 --> 00:26:36,800
right?

497
00:26:37,800 --> 00:26:39,900
And that's exactly the term I was talking about before.

498
00:26:40,700 --> 00:26:45,300
So if you want to set up a bunch of fundamental similarities there or

499
00:26:45,300 --> 00:26:48,000
if you're thinking in terms of them, it just helps to go.

500
00:26:48,000 --> 00:26:48,800
Oh, right?

501
00:26:49,100 --> 00:26:53,400
Once I compute one of these, I can always multiply by whatever the

502
00:26:53,400 --> 00:26:58,500
type of thing was on the denominator to produce an arbitrary numerator

503
00:26:58,500 --> 00:26:59,800
that goes with it, right?

504
00:27:00,000 --> 00:27:02,800
So, you know, and it's because of this fundamental relation.

505
00:27:02,800 --> 00:27:04,700
That two things over each other.

506
00:27:04,700 --> 00:27:08,600
When I equate them, I know, I can always multiply out one way or the

507
00:27:08,600 --> 00:27:13,200
other I can, you know, I can solve for w 0 or solve for w 1 and you

508
00:27:13,200 --> 00:27:14,800
know, compute one in terms of the other.

509
00:27:15,000 --> 00:27:17,900
All right, so that's what I want to do here.

510
00:27:18,400 --> 00:27:20,100
I want to do exactly that equation.

511
00:27:20,100 --> 00:27:24,300
Like here's that fundamental thing that I produced and what I want to

512
00:27:24,300 --> 00:27:29,300
do here is say okay, I am going to ask if I was to multiply the window

513
00:27:29,300 --> 00:27:29,800
height.

514
00:27:30,300 --> 00:27:36,800
By this fundamental aspect ratio, for my render, what do I actually

515
00:27:36,800 --> 00:27:44,100
get back as like, the optimal window with right?

516
00:27:45,200 --> 00:27:46,900
And then that is the same token.

517
00:27:46,900 --> 00:27:50,700
I could ask what the optimal window height is by applying the same

518
00:27:50,700 --> 00:27:51,400
logic.

519
00:27:51,500 --> 00:27:56,100
If I was to take the window with and multiply it by the same exact

520
00:27:56,100 --> 00:27:58,500
thing just flipped around, right?

521
00:28:03,100 --> 00:28:06,400
You can see I'm doing the same thing, I'm just saying, okay, I want to

522
00:28:06,400 --> 00:28:09,900
produce widths now, so do the opposite thing keep with on the the, the

523
00:28:09,900 --> 00:28:10,400
Divide.

524
00:28:10,500 --> 00:28:13,200
So when I multiply out, I'll get whatever the height should be.

525
00:28:13,500 --> 00:28:19,300
So this gives me two fundamental values back that are telling me what

526
00:28:19,300 --> 00:28:24,800
would the window with be and what would the window height be?

527
00:28:25,100 --> 00:28:29,800
If I was to pick one or the other as predominant?

528
00:28:30,500 --> 00:28:32,500
Rap they may ask.

529
00:28:32,500 --> 00:28:33,600
Why am I doing that?

530
00:28:38,100 --> 00:28:38,500
You know.

531
00:28:39,700 --> 00:28:42,900
Well, the answer is because this is what will allow me to determine

532
00:28:43,100 --> 00:28:45,700
which case I have, right?

533
00:28:46,300 --> 00:28:48,000
So in this case,

534
00:28:49,400 --> 00:28:52,100
I can say, let's see what we got.

535
00:28:52,100 --> 00:28:55,000
When we said what the optimal window with was, right.

536
00:28:55,000 --> 00:28:58,800
So I use the given window height and I said, tell me what the optimal

537
00:28:58,800 --> 00:28:59,800
window with was.

538
00:29:00,000 --> 00:29:04,500
Well, if the optimal window width is greater than the actual window

539
00:29:04,500 --> 00:29:05,800
with right?

540
00:29:07,000 --> 00:29:13,700
What I have to work with, then I know that I must be bounded by that

541
00:29:13,700 --> 00:29:14,900
with, right.

542
00:29:15,100 --> 00:29:18,400
In other words, I would have hit the width first before the height

543
00:29:18,400 --> 00:29:19,100
would have hit.

544
00:29:20,600 --> 00:29:23,900
Otherwise I can assume the opposite, right?

545
00:29:24,000 --> 00:29:28,400
I can assume that if the with would fit, then that means the height is

546
00:29:28,400 --> 00:29:30,800
actually, the thing that stopped it, right?

547
00:29:31,800 --> 00:29:34,900
So in this case, if it's greater, you know, if the optimal window

548
00:29:34,900 --> 00:29:36,500
width is greater than the window,

549
00:29:38,800 --> 00:29:40,900
And maybe I will not think start with it.

550
00:29:40,900 --> 00:29:42,800
So this is a width constrained

551
00:29:44,200 --> 00:29:49,300
Display and this is a height, constrained display.

552
00:29:49,600 --> 00:29:55,300
And so if its height constrained, then I have, you know, left and

553
00:29:55,300 --> 00:29:56,500
right black bars.

554
00:29:57,700 --> 00:29:59,800
And if it's a with constrained,

555
00:30:00,000 --> 00:30:00,600
Right.

556
00:30:00,600 --> 00:30:02,100
Then I've got top and bottom.

557
00:30:05,800 --> 00:30:06,600
If that makes sense.

558
00:30:08,700 --> 00:30:13,200
Okay, so let's think about what ends up happening here.

559
00:30:14,100 --> 00:30:18,900
I want to produce a rectangle to, I, that rectangle to, I is what I'm

560
00:30:18,900 --> 00:30:24,900
going to use to sort of, like, fill the screen properly or whatever.

561
00:30:24,900 --> 00:30:25,400
Right.

562
00:30:25,400 --> 00:30:28,700
I need to, like, put, I need to like, say where the image is going to

563
00:30:28,700 --> 00:30:29,700
be centered or whatever.

564
00:30:30,500 --> 00:30:34,600
So, in a with constrained display where I've got top and bottom black

565
00:30:34,600 --> 00:30:37,300
bars, that means that I know that my result,

566
00:30:39,500 --> 00:30:42,600
Is going to have a very simple structure as far.

567
00:30:42,700 --> 00:30:45,600
And, you know what, I don't really even remember what our rectangle 2i

568
00:30:45,600 --> 00:30:46,500
structure looks like.

569
00:30:49,500 --> 00:30:50,000
There it is.

570
00:30:51,000 --> 00:30:54,800
So I know that since we have top and bottom black bars, I know the Min

571
00:30:54,800 --> 00:31:00,300
X is going to be 0 and the max X is going to be the window width,

572
00:31:00,600 --> 00:31:00,900
right?

573
00:31:00,900 --> 00:31:06,000
I know that I'm feeling my entire width, but what I don't know is what

574
00:31:06,000 --> 00:31:11,800
the Min Y and Max, why are because I don't know where, you know, the

575
00:31:11,800 --> 00:31:13,500
image ends up getting centered.

576
00:31:14,900 --> 00:31:16,600
But I can easily find out.

577
00:31:16,800 --> 00:31:20,200
So what we have is empty space, right?

578
00:31:21,100 --> 00:31:26,500
I know what when I did the optimal window with here, I know that it

579
00:31:26,500 --> 00:31:27,000
didn't fit.

580
00:31:27,000 --> 00:31:28,500
So I know that optimal window.

581
00:31:28,500 --> 00:31:33,400
Height is going to tell me if I was to assume we were with constrained

582
00:31:33,400 --> 00:31:34,800
because that's what I was doing here, right?

583
00:31:34,800 --> 00:31:38,200
I said, figure out what the window height would be if we're going to

584
00:31:38,200 --> 00:31:43,100
stretch to the full width of the of the screen, whatever the window

585
00:31:43,100 --> 00:31:43,800
height is.

586
00:31:44,800 --> 00:31:46,600
That's going to leave some space.

587
00:31:46,800 --> 00:31:51,300
So if I take the actual window height and subtract the two, I will get

588
00:31:51,300 --> 00:31:55,200
however much space is left over, right?

589
00:31:56,900 --> 00:31:58,100
Hopefully, that makes some sense.

590
00:31:58,800 --> 00:32:02,200
Now, we have a problem here, which is the optimal window.

591
00:32:02,200 --> 00:32:07,000
Height may actually not be rounded if that makes sense, right?

592
00:32:07,800 --> 00:32:11,400
We may have a situation where the render written render height were

593
00:32:11,400 --> 00:32:15,600
producing a divide that ends up with like a .5 in there or something,

594
00:32:15,600 --> 00:32:16,000
right?

595
00:32:16,600 --> 00:32:18,800
Or something that's not an integral amount.

596
00:32:19,000 --> 00:32:23,100
So we do have a bit of an issue there where we would, you know, we

597
00:32:23,100 --> 00:32:25,700
kind of have to know that we're going to round because this empty

598
00:32:25,700 --> 00:32:26,200
space

599
00:32:26,700 --> 00:32:29,800
May end up being not a whole value.

600
00:32:30,800 --> 00:32:32,600
So when we go half empty

601
00:32:35,400 --> 00:32:39,400
and I divide that by 2 there, right?

602
00:32:40,400 --> 00:32:45,300
I now kind of have to round that value so that we won't be positioning

603
00:32:45,300 --> 00:32:47,800
on a completely bogus boundary, right?

604
00:32:48,200 --> 00:32:50,000
So I'm going to do around here.

605
00:32:52,800 --> 00:32:53,200
Really.

606
00:32:55,500 --> 00:32:55,800
Yeah.

607
00:32:58,700 --> 00:32:59,300
and,

608
00:33:00,000 --> 00:33:02,300
similarly, I'm going to have to round

609
00:33:05,600 --> 00:33:08,200
How much were using for our actual height?

610
00:33:14,300 --> 00:33:17,600
And so we might be off by like a half a pixel somewhere, but that's

611
00:33:17,600 --> 00:33:18,100
okay.

612
00:33:18,100 --> 00:33:20,700
We don't want to render to a fractional pixel, so that's fine.

613
00:33:21,300 --> 00:33:23,500
So now we're in a position to know what R Min Y and Max.

614
00:33:23,500 --> 00:33:26,400
Why, our first of all our Max, why obviously, is always going to be

615
00:33:26,400 --> 00:33:27,400
just the Min, why?

616
00:33:28,800 --> 00:33:29,200
Oops.

617
00:33:29,200 --> 00:33:32,600
Plus, however, much the height was so that's pretty easy.

618
00:33:32,600 --> 00:33:35,200
And the Min Y is just going to be that half empty value, right?

619
00:33:35,300 --> 00:33:36,600
However, much empty space.

620
00:33:36,600 --> 00:33:37,800
We had left over.

621
00:33:37,900 --> 00:33:38,600
We put half of it.

622
00:33:38,600 --> 00:33:41,100
The top half of it, the bottom right.

623
00:33:43,700 --> 00:33:45,200
Seems pretty straightforward.

624
00:33:48,200 --> 00:33:48,600
Okay.

625
00:33:48,700 --> 00:33:50,400
So barring bugs or a logic errors.

626
00:33:50,400 --> 00:33:56,100
That's basically what we're doing and the same thing is 100% true on

627
00:33:56,100 --> 00:33:58,200
the other axis as well, right.

628
00:33:58,200 --> 00:34:01,800
We can assume that if we are high constrained, we're going to draw to

629
00:34:01,800 --> 00:34:03,400
the entire height of the screen.

630
00:34:03,700 --> 00:34:07,200
We can also assume that, you know, any place that we were talking

631
00:34:07,200 --> 00:34:07,900
about Heights.

632
00:34:07,900 --> 00:34:09,900
We're now talking about with

633
00:34:11,100 --> 00:34:11,699
Like so.

634
00:34:12,699 --> 00:34:17,600
And so then the rest of this is just a trivial replacement.

635
00:34:21,000 --> 00:34:25,100
Okay, so now we've got aspect ratio fit and now we just have to use

636
00:34:25,100 --> 00:34:25,500
it.

637
00:34:25,699 --> 00:34:27,800
Well we have to debug it obviously at some point but we have to

638
00:34:27,800 --> 00:34:30,100
actually use it somewhere because we don't actually use it anywhere

639
00:34:30,100 --> 00:34:33,100
that it's not going to actually do anything for us to say the least,

640
00:34:33,100 --> 00:34:37,400
but the place that we probably want to use that is here in our opengl

641
00:34:37,400 --> 00:34:38,199
subsystem.

642
00:34:38,600 --> 00:34:42,699
And so in order to do that, when we pass the window, with that window

643
00:34:42,699 --> 00:34:47,800
height here, what we really probably want to do is, is passed in that.

644
00:34:48,000 --> 00:34:49,400
Tangled to I right.

645
00:34:49,400 --> 00:34:52,199
We probably want to actually do something more like this.

646
00:34:52,600 --> 00:34:54,800
Where we say like okay what's the rectangle to?

647
00:34:54,800 --> 00:34:58,700
I that we're talking about here that's going to be like the draw

648
00:34:58,700 --> 00:35:00,800
region or something like that, right?

649
00:35:03,100 --> 00:35:05,800
And so the interesting thing about that is, once we do the that draw

650
00:35:05,800 --> 00:35:10,400
region thing, then I think 4gl viewport, we can actually just pass

651
00:35:10,400 --> 00:35:12,400
these directly.

652
00:35:19,600 --> 00:35:23,800
But I think since it's a, it's a with and I don't actually know if

653
00:35:23,800 --> 00:35:30,400
you've got this call, we probably have a get dim.

654
00:35:30,400 --> 00:35:34,100
Well, I don't know if we do or not, I would like to get with Anna, get

655
00:35:34,300 --> 00:35:35,900
height on online.

656
00:35:35,900 --> 00:35:37,400
So I'm going to add one of those

657
00:35:39,700 --> 00:35:40,600
Yeah, we don't have one.

658
00:35:51,900 --> 00:35:54,200
So again this is totally trivial, right?

659
00:35:58,600 --> 00:35:59,800
And I'm conveying the up.

660
00:36:00,000 --> 00:36:05,100
The convention that we don't include the final row, that's why it's -

661
00:36:05,100 --> 00:36:05,400
not.

662
00:36:05,400 --> 00:36:05,800
It's why.

663
00:36:05,800 --> 00:36:07,300
That's why we don't add one here.

664
00:36:07,600 --> 00:36:10,600
If the, so if the Max and the Min are coincident, that means it's an

665
00:36:10,600 --> 00:36:11,500
empty rectangle.

666
00:36:11,600 --> 00:36:15,600
Not that it's a one pixel long rectangle, just worth pointing out.

667
00:36:15,800 --> 00:36:17,700
Because there's two conventions you could have followed their

668
00:36:21,100 --> 00:36:21,700
All right.

669
00:36:32,600 --> 00:36:33,100
so,

670
00:36:38,000 --> 00:36:39,000
That's all well and good.

671
00:36:39,000 --> 00:36:41,200
And I think that would work at the start.

672
00:36:41,200 --> 00:36:45,400
But the problem we would have here is that that viewport is not going

673
00:36:45,400 --> 00:36:50,900
to be correct for our for our frame buffers because if our frame

674
00:36:50,900 --> 00:36:55,400
buffer is just used the renderable part, they don't want to use this

675
00:36:55,900 --> 00:37:00,600
Min X Min why they want to use 00 window like they since the render

676
00:37:00,600 --> 00:37:04,000
buffers are only the size that we're actually rendering to, right?

677
00:37:04,200 --> 00:37:04,600
Oops.

678
00:37:05,300 --> 00:37:07,000
They want to do this.

679
00:37:07,200 --> 00:37:08,900
Right when we're drawing to them.

680
00:37:09,500 --> 00:37:12,200
So, you know, when we bind a frame buffer here, you know you could

681
00:37:12,200 --> 00:37:15,800
imagine wanting to do that essentially and you know we could do that

682
00:37:15,800 --> 00:37:16,200
down here.

683
00:37:16,200 --> 00:37:21,400
I suppose you want something that looks like this for the targets that

684
00:37:21,400 --> 00:37:23,200
are greater than Target one.

685
00:37:23,400 --> 00:37:26,500
I guess since this is bound up here and this is only doing new ones,

686
00:37:26,500 --> 00:37:28,100
maybe that's the right place to do it.

687
00:37:30,800 --> 00:37:32,200
It's hard to say, let's do it here.

688
00:37:37,100 --> 00:37:40,000
But the thing that I'm not sure about and I tried to look this up

689
00:37:40,000 --> 00:37:48,200
yesterday and I failed is is GL viewport per frame buffer or not like

690
00:37:48,500 --> 00:37:51,600
where is that state actually stored?

691
00:37:59,800 --> 00:38:03,600
Let's see, GL, you pour it.

692
00:38:08,100 --> 00:38:09,100
That doesn't help us.

693
00:38:11,200 --> 00:38:12,200
Stack Overflow.

694
00:38:12,200 --> 00:38:14,300
Always a little scared to look at an answer here.

695
00:38:25,500 --> 00:38:28,800
So this says, Okay, so this person looks like they actually quoted the

696
00:38:28,800 --> 00:38:33,200
spec which is starting to contain sales the entire State State per

697
00:38:33,200 --> 00:38:36,500
frame buffer object draw buffers and rebuff or viewport isn't part of

698
00:38:36,500 --> 00:38:37,700
it, right?

699
00:38:42,400 --> 00:38:46,800
So if that's the case, then if we want to support the multiple sizes,

700
00:38:46,800 --> 00:38:47,900
we've got to do it here.

701
00:38:49,800 --> 00:38:53,000
So we basically have to do rgl viewport call.

702
00:38:59,200 --> 00:38:59,800
every time we

703
00:39:00,000 --> 00:39:00,500
Find.

704
00:39:05,600 --> 00:39:07,500
So I'm going to have to kind of abstract this, right?

705
00:39:08,300 --> 00:39:08,800
Hmm.

706
00:39:10,200 --> 00:39:13,600
Okay, so in this case, we've got like Jill Biden frame buffer.

707
00:39:13,600 --> 00:39:15,600
If the target is greater than 0, we do this.

708
00:39:15,900 --> 00:39:18,400
Otherwise we do that, right?

709
00:39:18,400 --> 00:39:19,700
That's kind of how that has to go.

710
00:39:20,500 --> 00:39:24,000
And so what I could do here is just do a thing where we say like

711
00:39:24,300 --> 00:39:27,300
internal void, Vine frame buffer,

712
00:39:30,500 --> 00:39:36,900
And when we do that bind I could just sort of grab this out like so so

713
00:39:36,900 --> 00:39:40,400
that it's just used properly in all in both cases.

714
00:39:40,400 --> 00:39:44,600
So there's the target index, it'll just do this and then we know that

715
00:39:44,600 --> 00:39:47,800
we have to pass the draw region to that because without the drawer

716
00:39:47,800 --> 00:39:51,900
region, it won't have the information that it actually needs to have,

717
00:39:52,100 --> 00:39:52,600
right?

718
00:39:55,400 --> 00:39:59,900
So that seems reasonable and then down here.

719
00:39:59,900 --> 00:40:04,200
So when we do that, we'll just call opengl buying frame buffer with

720
00:40:04,200 --> 00:40:07,300
the current frame buffer and that draw region.

721
00:40:08,000 --> 00:40:08,500
Oops.

722
00:40:10,400 --> 00:40:14,000
And the same thing would be true up here.

723
00:40:22,000 --> 00:40:25,600
Let's see, opengl renderer commands is now taking this window with and

724
00:40:25,600 --> 00:40:27,600
window height and we don't actually want it to do that.

725
00:40:27,600 --> 00:40:33,700
What we want to do is we want to have it take a rectangle to I which

726
00:40:33,700 --> 00:40:36,500
is the render region, right?

727
00:40:37,000 --> 00:40:39,800
And for now I'm actually going to just pass it.

728
00:40:40,100 --> 00:40:43,000
What we were passing it before just so we can make sure that our

729
00:40:43,000 --> 00:40:46,600
render stuff works properly because any time you're working with

730
00:40:46,600 --> 00:40:47,200
opengl.

731
00:40:47,200 --> 00:40:51,200
I find it's good to like double-check when you test stuff, not

732
00:40:51,400 --> 00:40:53,400
Just assume that it's going to work, right?

733
00:40:55,000 --> 00:40:55,500
So yeah.

734
00:40:56,000 --> 00:40:57,000
So anyway

735
00:41:02,700 --> 00:41:05,300
That looks the same as it did before.

736
00:41:05,300 --> 00:41:06,200
So, that's good.

737
00:41:06,500 --> 00:41:10,200
So now let's go into here and say, okay, instead of using that to our

738
00:41:10,200 --> 00:41:13,700
region, let's actually go ahead and try out this aspect ratio fit,

739
00:41:13,700 --> 00:41:14,900
call that we had here.

740
00:41:15,500 --> 00:41:18,900
So, instead of doing the stretch version,

741
00:41:22,400 --> 00:41:27,000
We'll call aspect ratio fit and we will pass it.

742
00:41:27,000 --> 00:41:35,300
Our commands render with and commands render height, and then our

743
00:41:35,300 --> 00:41:38,000
window within window height, and we'll let it figure it out.

744
00:41:38,600 --> 00:41:44,400
What we want to do, as far as that's concerned, right, what was

745
00:41:46,300 --> 00:41:52,000
I don't actually remember, oh well you know what should just be right

746
00:41:52,000 --> 00:41:54,000
here, shouldn't it commands with?

747
00:41:54,000 --> 00:41:56,200
So it's not render with, it's just width and height.

748
00:41:56,200 --> 00:41:59,800
Oops, got a little overzealous there with that delete key.

749
00:42:00,000 --> 00:42:01,500
Didn't want to delete that.

750
00:42:02,500 --> 00:42:04,500
Let's undo.

751
00:42:05,500 --> 00:42:06,100
Okay.

752
00:42:09,000 --> 00:42:14,300
So now we're calling aspect ratio fit and you can actually see that I

753
00:42:14,300 --> 00:42:19,300
guess we must have done a good job because it looks like it just is

754
00:42:19,300 --> 00:42:20,500
working actually already.

755
00:42:22,500 --> 00:42:26,400
So you can kind of see what's happening here as we do that.

756
00:42:26,400 --> 00:42:33,100
That sort of scaling as you know, here is the case where we're sort of

757
00:42:33,400 --> 00:42:38,000
well I guess here is the case where we match we exactly fill right.

758
00:42:39,400 --> 00:42:42,500
And I guess I could find that here on the window size as well.

759
00:42:45,800 --> 00:42:46,500
Right?

760
00:42:47,800 --> 00:42:55,000
And so if I were to and you can see that that yellow band is like the

761
00:42:55,400 --> 00:43:00,000
actual border of the rendered region, as I start to smoosh in words,

762
00:43:00,000 --> 00:43:03,300
you can see it adding the bars on the top and the bottom because this

763
00:43:03,300 --> 00:43:08,400
aspect ratio is too tall for a 16 by 9, right?

764
00:43:08,600 --> 00:43:13,100
So it continues to kind of shrink that down and down and down, you

765
00:43:13,100 --> 00:43:15,500
know, which is what it's supposed to do.

766
00:43:15,800 --> 00:43:20,000
Now similarly if I stretch it out, it knows that it's going to hit on

767
00:43:20,000 --> 00:43:20,700
the other direction.

768
00:43:20,700 --> 00:43:23,000
So it just pads on the left and right.

769
00:43:23,100 --> 00:43:23,500
Okay.

770
00:43:24,200 --> 00:43:30,700
Now we're not doing this correctly here with with, let's see here,

771
00:43:31,300 --> 00:43:35,400
Global Runner type with respect to the software renderer at the

772
00:43:35,400 --> 00:43:36,100
moment.

773
00:43:36,300 --> 00:43:40,300
So we need to fix that but that's pretty easy to do as well.

774
00:43:40,300 --> 00:43:43,900
All we have to do is when we do opengl display bitmap, we just have to

775
00:43:43,900 --> 00:43:44,900
do the same.

776
00:43:45,600 --> 00:43:46,700
Thing we were doing before.

777
00:43:46,700 --> 00:43:50,300
So I'm going to go ahead and move this up to the top like so,

778
00:43:52,000 --> 00:43:57,000
So that when we do our opengl display bitmap call and we're passing at

779
00:43:57,000 --> 00:44:00,000
this window with the window height, instead of that, I'm actually

780
00:44:00,000 --> 00:44:03,500
going to pass it, the draw region instead, right?

781
00:44:04,700 --> 00:44:07,400
So then if we go over to opengl displayed bitmap,

782
00:44:10,200 --> 00:44:11,500
Which actually is not in there.

783
00:44:15,000 --> 00:44:21,100
Okay, so if we come over here to opengl display pic map and we do sort

784
00:44:21,100 --> 00:44:23,700
of this window with window height part here.

785
00:44:23,700 --> 00:44:28,000
I'm going to take that out of here and just do rectangle to I4, draw

786
00:44:28,000 --> 00:44:28,500
region.

787
00:44:28,800 --> 00:44:32,000
And we're going to do exactly the same thing that we were doing

788
00:44:32,000 --> 00:44:32,600
before.

789
00:44:32,900 --> 00:44:36,600
Now what I can do, in this case two is I can just lean on the fact

790
00:44:36,600 --> 00:44:42,300
that this call doesn't actually care about whether you even have any

791
00:44:42,300 --> 00:44:44,100
other things, you can still use it.

792
00:44:45,000 --> 00:44:46,200
As you were using it before.

793
00:44:46,200 --> 00:44:49,400
So if I want to I can kind of come up here and just say well you know

794
00:44:49,400 --> 00:44:49,600
what?

795
00:44:49,600 --> 00:44:53,500
Just use opengl bind frame buffer and just buying frame buffer, zero

796
00:44:53,500 --> 00:44:56,000
and that'll set everything up for us to exactly the way we wanted to

797
00:44:56,500 --> 00:44:57,000
write.

798
00:44:59,100 --> 00:44:59,800
so, we can pass the

799
00:45:00,000 --> 00:45:02,700
Our region and we can pass frame by 40 and it'll just work.

800
00:45:05,800 --> 00:45:06,600
So,

801
00:45:10,900 --> 00:45:17,100
now, in theory, let's see here where we do Platform controls

802
00:45:21,700 --> 00:45:22,200
There we go.

803
00:45:24,900 --> 00:45:26,900
Now, you can see the same exact thing.

804
00:45:30,100 --> 00:45:30,600
Right.

805
00:45:31,400 --> 00:45:37,200
Okay, so now we have a couple little tiny issues that we probably want

806
00:45:37,200 --> 00:45:43,800
to clear up and that is well first of all, I suppose are clear color

807
00:45:43,800 --> 00:45:47,800
here, we're going to have to actually clear to something real, right?

808
00:45:47,900 --> 00:45:54,100
So we want this to be, you know, black, presumably so that when we

809
00:45:54,100 --> 00:45:54,600
clear,

810
00:46:02,100 --> 00:46:04,800
See rendering type true.

811
00:46:06,000 --> 00:46:09,100
So this way, you know, it's black bars, which is I think what we said

812
00:46:09,100 --> 00:46:13,900
we wanted, although I suppose we could choose to do gray bars instead.

813
00:46:13,900 --> 00:46:18,900
I don't know what we want to do exactly with that.

814
00:46:19,900 --> 00:46:24,200
I suppose, we could just clear to whatever the background color is

815
00:46:24,200 --> 00:46:25,800
from the render commands.

816
00:46:30,400 --> 00:46:32,200
That seems plausible.

817
00:46:39,300 --> 00:46:44,600
So, when we do opengl display bitmap, we would probably just say, hey,

818
00:46:44,600 --> 00:46:47,200
give us the clear color, right?

819
00:46:47,200 --> 00:46:47,800
And

820
00:46:54,500 --> 00:46:55,000
Then.

821
00:46:58,700 --> 00:47:02,100
Here, we could pass the commands clear color.

822
00:47:05,800 --> 00:47:10,000
And now it's just whatever the user specified which I think is what we

823
00:47:10,000 --> 00:47:10,500
want.

824
00:47:11,900 --> 00:47:17,400
And so let's go ahead and take a look at that platform controls will

825
00:47:17,400 --> 00:47:18,700
rendering type.

826
00:47:25,800 --> 00:47:31,400
Okay, yeah, so I think that's about it.

827
00:47:31,400 --> 00:47:37,000
I also think that we should probably get rid of the outlining in our

828
00:47:37,000 --> 00:47:40,100
opengl stuff because that was, you know,

829
00:47:46,500 --> 00:47:47,900
Not really part of the spec.

830
00:47:54,700 --> 00:47:58,300
And that's about it.

831
00:48:00,000 --> 00:48:04,800
I think that's it for handling the aspect ratio stuff properly.

832
00:48:05,900 --> 00:48:09,700
I'm not 100% sure, but I think that's most of what that bug was

833
00:48:09,700 --> 00:48:10,600
talking about.

834
00:48:13,200 --> 00:48:18,600
So I believe we did that properly and we handled this properly.

835
00:48:18,600 --> 00:48:21,100
I think both of those are correct.

836
00:48:21,200 --> 00:48:23,500
I don't know what this is.

837
00:48:25,900 --> 00:48:28,500
Multiple opengl render targets.

838
00:48:29,900 --> 00:48:31,600
I don't really know what that's about.

839
00:48:31,700 --> 00:48:37,900
So I'm going to say that I believe this is fixed and will let people

840
00:48:37,900 --> 00:48:39,000
sit reopen it.

841
00:48:39,000 --> 00:48:43,100
If I didn't quite right, I guess I need a little more room here.

842
00:48:45,000 --> 00:48:46,900
How do I do that?

843
00:48:51,100 --> 00:48:51,800
Oh, there it is.

844
00:48:51,800 --> 00:48:53,000
It's called clothes issue.

845
00:48:56,200 --> 00:48:57,600
so, I guess I can just say

846
00:49:01,500 --> 00:49:09,700
Believed to be fixed on, day, on day, 22, right?

847
00:49:09,700 --> 00:49:17,000
So you got day 322 by the addition of aspect ratio, we're splitting

848
00:49:17,100 --> 00:49:18,100
and rendering

849
00:49:21,800 --> 00:49:22,600
Close comic.

850
00:49:26,100 --> 00:49:26,500
Okay.

851
00:49:28,000 --> 00:49:29,700
So I think that's correct.

852
00:49:30,800 --> 00:49:32,400
And yeah.

853
00:49:33,400 --> 00:49:37,000
So we have did anyone is this it?

854
00:49:38,100 --> 00:49:38,500
Yeah.

855
00:49:39,000 --> 00:49:42,400
So while we're on it I feel like we should do this one as well and I

856
00:49:42,400 --> 00:49:43,900
guess we already have it open here somewhere.

857
00:49:43,900 --> 00:49:44,600
Where is it?

858
00:49:44,700 --> 00:49:45,100
There it is.

859
00:49:46,300 --> 00:49:50,600
We should do this one as well because we don't really have

860
00:49:53,000 --> 00:49:59,500
Any awareness, the mouse cursor that were passing is not adjusted for

861
00:49:59,500 --> 00:50:03,700
this, where the thing is actually being displayed, if that makes

862
00:50:03,700 --> 00:50:04,100
sense.

863
00:50:05,000 --> 00:50:08,400
So, as long as they happen to coincide,

864
00:50:10,800 --> 00:50:13,900
They're going to be sort of okay, although the stretching even the

865
00:50:13,900 --> 00:50:17,000
stretching, we don't divide by the stretch at all either.

866
00:50:17,200 --> 00:50:20,200
So even that's wrong because the the distance you go will be wrong so

867
00:50:20,200 --> 00:50:21,100
you can see it wrong.

868
00:50:21,100 --> 00:50:22,000
They're right.

869
00:50:24,400 --> 00:50:25,600
So the only time is this correct?

870
00:50:25,600 --> 00:50:30,200
Is if you happen to be running on an actual 1920 by 1080 screen and

871
00:50:30,300 --> 00:50:33,700
and you go in there right now, that's not actually our game codes

872
00:50:33,700 --> 00:50:35,300
fault, our game code, I don't think.

873
00:50:35,300 --> 00:50:38,700
Anyway, I don't think our game code actually has a bug there.

874
00:50:39,300 --> 00:50:42,800
Personally, the bug is in the platform layer because the platform

875
00:50:42,800 --> 00:50:45,300
layer is getting us Mouse coordinates that aren't in the same

876
00:50:45,300 --> 00:50:46,600
coordinates as where it's bleeding.

877
00:50:46,600 --> 00:50:47,900
The screen, right?

878
00:50:48,200 --> 00:50:51,000
We're drawing to a buffer and we're assuming that when we get Mass

879
00:50:51,000 --> 00:50:53,600
coordinates from the game that those Mouse coordinates are in the same

880
00:50:53,600 --> 00:50:56,200
space as the buffer were drawing, but that's not true.

881
00:50:58,700 --> 00:50:59,800
Right there in there.

882
00:51:00,000 --> 00:51:04,700
The space of Windows, which is totally unadjusted, right?

883
00:51:05,200 --> 00:51:10,200
So what we need to do here for our debug Mouse, and again, it's only

884
00:51:10,200 --> 00:51:12,300
for debug because we don't really do anything with the mouse in

885
00:51:12,300 --> 00:51:12,800
production.

886
00:51:12,800 --> 00:51:14,000
We're keyboard game.

887
00:51:14,000 --> 00:51:16,400
So we don't really have to care too much about this but we might as

888
00:51:16,400 --> 00:51:21,400
well get it right when we do our Mouse values.

889
00:51:23,200 --> 00:51:27,100
You can see here, we map screen to client but then we don't have

890
00:51:27,100 --> 00:51:34,100
anything that actually maps from the client rectangle of our window to

891
00:51:34,100 --> 00:51:36,300
where we're actually displaying the bitmap.

892
00:51:36,400 --> 00:51:41,700
So we need to do that mapping now as well, right?

893
00:51:42,900 --> 00:51:50,900
And we should probably actually do a little bit of fussing with that

894
00:51:50,900 --> 00:51:52,500
too but anyway.

895
00:51:53,000 --> 00:51:57,200
So if I wanted to fix that, obviously I'm going to have to have some

896
00:51:57,200 --> 00:52:03,400
way of remembering what that rectangle is that I used to draw, right?

897
00:52:03,700 --> 00:52:07,300
So that draw region that we have here, we're going to need to save

898
00:52:07,300 --> 00:52:11,100
that basically is what's going to have to happen so that it can keep

899
00:52:11,100 --> 00:52:17,800
coming around you know, and and be something that we use in in

900
00:52:17,800 --> 00:52:19,600
multiple circumstances, right?

901
00:52:20,500 --> 00:52:24,600
Now I want to take a look at something here with window within a

902
00:52:24,600 --> 00:52:25,500
window height.

903
00:52:26,600 --> 00:52:26,900
Yeah.

904
00:52:26,900 --> 00:52:28,700
So we've got kind of this old path in your.

905
00:52:29,100 --> 00:52:33,500
I might even just get rid of this old path to be honest with you.

906
00:52:33,500 --> 00:52:38,400
I don't know if I want to support displaying through GDI anymore just

907
00:52:38,400 --> 00:52:42,100
because it's you know, we're going to want to kind of go through the

908
00:52:45,000 --> 00:52:46,300
The vsync path anyway.

909
00:52:46,900 --> 00:52:48,300
So I'm a ditch this.

910
00:52:49,300 --> 00:52:53,300
I think that, maybe, maybe we should.

911
00:53:12,000 --> 00:53:14,000
We can always put it back in if we really want it.

912
00:53:17,200 --> 00:53:20,900
so I mean instead say instead of win32 rendering type on my ditch this

913
00:53:22,900 --> 00:53:30,500
And say we just have D 32 Global software rendering.

914
00:53:32,900 --> 00:53:36,400
and then I'm going to go through here and say, if global

915
00:53:37,700 --> 00:53:42,300
Software rendering, then we're going to do this.

916
00:53:45,500 --> 00:53:46,700
Otherwise we're going to do this.

917
00:53:50,100 --> 00:53:55,500
And in this case here, we're just going to assume that we display the

918
00:53:55,500 --> 00:53:56,100
bitmap.

919
00:53:56,100 --> 00:53:56,500
Oops

920
00:54:00,700 --> 00:54:05,000
Assume we display the bitmap through opengl and we'll sort of get rid

921
00:54:05,000 --> 00:54:06,800
of the notion that we're ever going to stretch.

922
00:54:06,800 --> 00:54:10,800
But it using anything else, okay?

923
00:54:20,300 --> 00:54:25,100
Okay, so that's the first step, right?

924
00:54:25,800 --> 00:54:29,000
And hopefully now the still works fine for toggling our software

925
00:54:29,000 --> 00:54:30,000
renderer on and off.

926
00:54:34,000 --> 00:54:36,900
they were down, and

927
00:54:39,800 --> 00:54:43,900
Global software rendering what I would like to do.

928
00:54:43,900 --> 00:54:47,400
Now is just have the draw region, be something that's actually passed

929
00:54:47,400 --> 00:54:50,900
in because now we got window with the window height and you can see

930
00:54:50,900 --> 00:54:52,600
they're not really used anywhere in here.

931
00:54:52,800 --> 00:54:57,000
So what I'd like to do is I'd like to pull this out and I'd like to go

932
00:54:57,000 --> 00:54:59,200
ahead and say we'll just pass the rectangle to.

933
00:54:59,200 --> 00:55:04,100
I of the drawer region will pass that in when we actually call when 3

934
00:55:04,100 --> 00:55:06,600
display buffer and window, right?

935
00:55:09,500 --> 00:55:14,800
So down here, now, we will say, okay, here's our aspect ratio fit

936
00:55:14,800 --> 00:55:15,400
call.

937
00:55:15,700 --> 00:55:19,500
We've got these two variables which tell us what we're talking about

938
00:55:19,500 --> 00:55:20,400
Dimension wise.

939
00:55:20,400 --> 00:55:21,300
So there they are.

940
00:55:22,500 --> 00:55:26,500
And then I will say, this is the drawer region, okay?

941
00:55:26,500 --> 00:55:28,800
And so, you can see what I'm kind of going for here.

942
00:55:29,200 --> 00:55:33,400
Now that I've kind of pulled this out into the outer area of the code.

943
00:55:34,600 --> 00:55:36,800
Now, we have the ability

944
00:55:40,600 --> 00:55:44,000
Ought to just save this value all the time, right?

945
00:55:44,100 --> 00:55:46,600
This can be computed anywhere we want.

946
00:55:47,200 --> 00:55:50,600
We could compute it up before we do the mouse, right?

947
00:55:50,900 --> 00:55:55,100
So in the place where we actually grab that mouse cursor, right?

948
00:55:55,500 --> 00:56:00,400
When we do input processing, we can snap the the region here and now

949
00:56:00,400 --> 00:56:04,600
we know the draw region where we needed to know it, but where are my

950
00:56:04,600 --> 00:56:05,500
render commands?

951
00:56:05,800 --> 00:56:06,300
There we go.

952
00:56:08,600 --> 00:56:12,900
Well, okay, so do I actually have?

953
00:56:13,700 --> 00:56:16,900
I don't think there's any reason I can't move that up as well.

954
00:56:27,200 --> 00:56:33,200
so now if I just do that part early, so now I kind of know what is

955
00:56:33,200 --> 00:56:35,000
going on input processing wise

956
00:56:36,400 --> 00:56:39,100
I can map things into the straw region if I need to.

957
00:56:40,000 --> 00:56:43,800
So, when I actually do my mouse, now, when I have my mouse X, I can

958
00:56:43,800 --> 00:56:50,700
map it into that region in terms of scaling of mapping and scaling the

959
00:56:50,700 --> 00:56:51,900
value, right?

960
00:56:52,200 --> 00:56:55,300
So, how do I map the value, right?

961
00:56:55,400 --> 00:56:59,000
Well, fortunately, in our math, we already have a way and we've gone

962
00:56:59,000 --> 00:56:59,800
over this multiple times.

963
00:57:00,000 --> 00:57:00,700
Right?

964
00:57:00,900 --> 00:57:02,700
Clamp zero to one map to range.

965
00:57:02,700 --> 00:57:08,200
We have a way of, of forcing something in between two values into a

966
00:57:08,200 --> 00:57:10,200
120 range, right?

967
00:57:10,500 --> 00:57:12,500
So I can call it whatever.

968
00:57:12,500 --> 00:57:15,700
The mouse key comes back as right?

969
00:57:15,700 --> 00:57:18,000
This new input mousex mouth.

970
00:57:18,000 --> 00:57:22,300
Why what I could do is I could say well, alright, let's say the new

971
00:57:22,300 --> 00:57:27,500
input mousex and the new input Mouse why let's actually make those be

972
00:57:27,500 --> 00:57:29,800
different things and we'll sort of here.

973
00:57:30,000 --> 00:57:35,800
Here start by taking these base Mouse values and then we'll sort of

974
00:57:35,800 --> 00:57:37,300
modify them, right?

975
00:57:38,100 --> 00:57:44,300
So I can do clamp 01 map to range on mousex and clamp, 01 mapped range

976
00:57:44,300 --> 00:57:44,800
on Mouse.

977
00:57:44,800 --> 00:57:45,200
Why?

978
00:57:45,400 --> 00:57:50,400
And I can take those and map them into the min/max of the draw region,

979
00:57:50,400 --> 00:57:50,900
right?

980
00:57:51,000 --> 00:57:53,000
Because I know where the draw region is

981
00:58:01,500 --> 00:58:02,200
Right.

982
00:58:02,400 --> 00:58:05,500
So what I'm basically doing is I'm saying I'm taking wherever my mouse

983
00:58:05,500 --> 00:58:08,800
was, and I'm mapping it into that range, that's zero to one, mapping

984
00:58:08,800 --> 00:58:12,000
it to be zero to one based on where it is.

985
00:58:12,100 --> 00:58:19,300
So 0 0, is the upper or sorry, the bottom left corner and, you know,

986
00:58:19,900 --> 00:58:20,900
11 is the upper.

987
00:58:20,900 --> 00:58:23,500
So, they're basically UV coordinates now, right?

988
00:58:23,900 --> 00:58:26,700
Then I can just multiplied by the width.

989
00:58:30,700 --> 00:58:34,800
N multiplied by the height to blow them out, to the pixel values, the

990
00:58:34,800 --> 00:58:39,200
virtual pixel values that the game is effectively expecting, right?

991
00:58:41,400 --> 00:58:42,700
Hopefully, that makes some sense.

992
00:58:49,100 --> 00:58:52,800
And unfortunately, these are all not, there we go.

993
00:58:53,200 --> 00:58:54,200
Not floats.

994
00:58:54,300 --> 00:58:55,000
And they need to be

995
00:58:56,900 --> 00:59:01,500
Okay, so I can go over that it during the Q&A if that was a little too

996
00:59:02,700 --> 00:59:06,900
abrupt in terms of what I did there, but you can see the mouse cursor

997
00:59:06,900 --> 00:59:07,300
is working.

998
00:59:07,300 --> 00:59:11,000
Okay, now, let's go ahead and change it to something really bizarre

999
00:59:11,100 --> 00:59:12,800
and make sure the massacres are still does work.

1000
00:59:12,800 --> 00:59:16,600
Okay, although it doesn't look like it is, so I may have to debug in

1001
00:59:16,600 --> 00:59:17,200
to do here.

1002
00:59:27,900 --> 00:59:29,900
That's that's plainly bizarre.

1003
00:59:31,000 --> 00:59:32,300
What did I mess up?

1004
00:59:36,600 --> 00:59:42,900
The mass x is the mouse p and draw a region.

1005
00:59:42,900 --> 00:59:44,300
Dot Min x.

1006
00:59:45,100 --> 00:59:51,200
Max y, that feels like it should be right.

1007
00:59:51,700 --> 00:59:56,700
And then we expand that by however much the width was

1008
01:00:01,600 --> 01:00:03,100
Oh I'm sorry.

1009
01:00:03,600 --> 01:00:06,300
This is it should not be the width of the draw region.

1010
01:00:06,900 --> 01:00:09,800
It should be the renderable with obviously.

1011
01:00:09,800 --> 01:00:16,500
I mean we're trying to pass it to the game in in terms of its

1012
01:00:16,700 --> 01:00:18,700
preferred render size.

1013
01:00:19,200 --> 01:00:24,100
So the that's it's like I undid the Divide I did in the clamp map to

1014
01:00:24,100 --> 01:00:24,400
range.

1015
01:00:24,400 --> 01:00:25,300
That makes no sense.

1016
01:00:26,800 --> 01:00:27,100
Sorry.

1017
01:00:27,100 --> 01:00:28,200
Just momentary.

1018
01:00:29,600 --> 01:00:30,600
Brain lapse there.

1019
01:00:31,200 --> 01:00:33,300
Okay, so here we are, in the normal case.

1020
01:00:33,300 --> 01:00:35,000
Let's go back to the window case.

1021
01:00:39,700 --> 01:00:40,800
And I'm still fail.

1022
01:00:44,400 --> 01:00:45,500
I am still fail.

1023
01:00:45,500 --> 01:00:46,800
What did I mess up?

1024
01:00:48,800 --> 01:00:51,900
I have to admit, I don't immediately know what I messed up there.

1025
01:01:17,700 --> 01:01:20,100
Well, I'm gonna step in.

1026
01:01:20,700 --> 01:01:23,200
I realized was just being the Q&A right now, but I'm step in any way

1027
01:01:23,800 --> 01:01:25,900
because I want to debug this, I don't think.

1028
01:01:29,300 --> 01:01:34,300
It should be so complicated as I apparently just made it and you know

1029
01:01:34,300 --> 01:01:35,200
what else I'll do here.

1030
01:01:47,000 --> 01:01:48,100
This way, you can see it.

1031
01:01:59,600 --> 01:02:02,500
Okay, so let's go ahead and step in there.

1032
01:02:02,700 --> 01:02:05,400
Well actually it's not step in yet because it works properly at full

1033
01:02:05,400 --> 01:02:05,700
screen.

1034
01:02:05,700 --> 01:02:10,400
So I need to First sort of get the window to the point where it

1035
01:02:10,400 --> 01:02:11,400
doesn't work anymore.

1036
01:02:12,800 --> 01:02:13,300
There we go.

1037
01:02:16,700 --> 01:02:18,300
so, we can kind of see like,

1038
01:02:19,400 --> 01:02:25,000
It's, it's like I'm at the top right now, which doesn't make a whole

1039
01:02:25,000 --> 01:02:26,500
lot of sense, right?

1040
01:02:27,400 --> 01:02:30,300
So, you know, this should be the bottom corner.

1041
01:02:30,300 --> 01:02:34,800
This should be like, basically 00, right?

1042
01:02:34,800 --> 01:02:38,600
So let's go ahead and and see what we actually get there.

1043
01:02:47,300 --> 01:02:53,700
So our Mouse V is just totally wrong Mouse.

1044
01:02:53,700 --> 01:02:55,700
Why for our region?

1045
01:02:56,100 --> 01:02:59,700
And then why are our region now?

1046
01:03:00,000 --> 01:03:00,600
Why?

1047
01:03:06,200 --> 01:03:09,600
So why is the 0?

1048
01:03:09,700 --> 01:03:12,100
Because this is an incorrect.

1049
01:03:12,100 --> 01:03:13,600
I didn't even look at the calculation.

1050
01:03:13,600 --> 01:03:14,300
We were doing.

1051
01:03:14,300 --> 01:03:16,700
This is totally bogus right here.

1052
01:03:18,200 --> 01:03:20,800
So that is probably the problem.

1053
01:03:21,700 --> 01:03:26,300
So yeah, this this mouse P, this whole thing with the global back,

1054
01:03:26,300 --> 01:03:29,600
buffer height, that shouldn't be the global back buffer height.

1055
01:03:29,600 --> 01:03:31,000
That should be the actual

1056
01:03:33,400 --> 01:03:36,400
But the actual size of the window, right?

1057
01:03:36,800 --> 01:03:41,400
That should be the dimension part that should be this.

1058
01:03:42,800 --> 01:03:43,500
Right?

1059
01:03:44,000 --> 01:03:46,600
So that's just a completely wrong calculation.

1060
01:03:46,600 --> 01:03:51,600
It's inverting the mouse coordinate based on a totally wrong value.

1061
01:03:52,100 --> 01:03:53,100
So that's yeah.

1062
01:03:53,100 --> 01:03:55,200
Well, that's probably the entire problem.

1063
01:04:01,100 --> 01:04:02,500
That would certainly do it.

1064
01:04:05,800 --> 01:04:06,300
All right.

1065
01:04:06,700 --> 01:04:10,800
So now our Mouse coordinates are being passed correctly and it looks

1066
01:04:10,800 --> 01:04:12,400
like everything is hunky-dory.

1067
01:04:12,400 --> 01:04:14,700
There looks really accurate to me.

1068
01:04:15,600 --> 01:04:16,600
We can switch here.

1069
01:04:17,100 --> 01:04:20,600
Okay, so now we can go ahead and go to the Q&A.

1070
01:04:27,000 --> 01:04:31,400
Yeah, and that's, you know, I I say this all the time, right?

1071
01:04:32,700 --> 01:04:34,500
Because I've been asked this so many times.

1072
01:04:38,300 --> 01:04:43,100
The amount of time it takes to bug to find a bug is always about where

1073
01:04:43,100 --> 01:04:44,500
you're looking, right?

1074
01:04:44,700 --> 01:04:47,700
Because, like, I was looking at these lines and going like, oh wait,

1075
01:04:47,700 --> 01:04:48,500
but they look right.

1076
01:04:48,500 --> 01:04:50,600
It's like yeah, they were right.

1077
01:04:52,200 --> 01:04:52,800
You know what I mean?

1078
01:04:52,800 --> 01:04:58,200
Like, it's like the part that I was scrutinizing expecting to be

1079
01:04:58,200 --> 01:05:00,600
wrong, was not the problem.

1080
01:05:00,600 --> 01:05:04,200
It was this part here and that's why it was so weird to see what was

1081
01:05:04,200 --> 01:05:04,600
happening.

1082
01:05:04,600 --> 01:05:05,000
Right?

1083
01:05:05,400 --> 01:05:08,000
Because you always have like these assumptions about

1084
01:05:08,100 --> 01:05:10,800
What you were doing and those are when those assumptions are wrong,

1085
01:05:10,800 --> 01:05:12,600
that's what leads to more bug time.

1086
01:05:12,600 --> 01:05:15,400
Now it's at that bug took, you know, any time to find but you know,

1087
01:05:17,200 --> 01:05:17,400
Why?

1088
01:05:17,400 --> 01:05:18,700
It wasn't immediately obvious?

1089
01:05:22,400 --> 01:05:23,300
So, let's see.

1090
01:06:15,900 --> 01:06:21,500
All right, so I think you didn't get to a lot of these unfortunately,

1091
01:06:21,800 --> 01:06:22,700
but that's okay.

1092
01:06:23,300 --> 01:06:25,100
I mean bug sometimes take a while to find.

1093
01:06:26,000 --> 01:06:26,900
So we've got some more to do.

1094
01:06:26,900 --> 01:06:28,300
Maybe we'll do some more tomorrow.

1095
01:06:28,600 --> 01:06:29,000
Some of these.

1096
01:06:29,000 --> 01:06:31,400
Look a little bit simple, some of them look a little more complicated,

1097
01:06:31,900 --> 01:06:34,400
but see if we got any qas,

1098
01:06:39,300 --> 01:06:43,100
Cubicle that before today, I have a 16 by 9 Monitor and when I change

1099
01:06:43,100 --> 01:06:46,100
the code to render that resolution, both the you I Picking, and the

1100
01:06:46,100 --> 01:06:49,200
Collision detection for the player, get all sorts of messed up, but I

1101
01:06:49,200 --> 01:06:52,600
haven't tested that since you've removed the free moving stuff.

1102
01:06:54,200 --> 01:06:54,600
Okay.

1103
01:06:57,000 --> 01:07:01,200
Hey I can you make it so that holding shift while resizing the window?

1104
01:07:01,600 --> 01:07:05,700
Makes it just scale at the intended.

1105
01:07:05,700 --> 01:07:07,100
Aspect ratio.

1106
01:07:07,700 --> 01:07:14,500
Oh, do you mean like forcing the window itself to always be at that

1107
01:07:14,500 --> 01:07:15,700
aspect ratio?

1108
01:07:35,300 --> 01:07:36,500
What did somebody say?

1109
01:07:36,600 --> 01:07:37,400
Hold on a second.

1110
01:07:40,600 --> 01:07:42,900
Got a lot of questions here so holding the shift.

1111
01:07:42,900 --> 01:07:44,900
Let's pause the hold shift thing because I don't know if we'll have

1112
01:07:44,900 --> 01:07:45,700
time for that.

1113
01:07:48,000 --> 01:07:49,100
At the moment.

1114
01:07:49,500 --> 01:07:51,900
But let's see.

1115
01:07:52,600 --> 01:07:55,100
You forgot to change use height to use width.

1116
01:07:55,800 --> 01:07:56,800
Oh yeah, that's true.

1117
01:07:57,200 --> 01:08:01,600
It doesn't affect the code at all, but it's Naaman, clay chur wrong.

1118
01:08:02,500 --> 01:08:02,900
so,

1119
01:08:06,300 --> 01:08:07,000
so thanks.

1120
01:08:07,000 --> 01:08:07,800
Thanks for that one.

1121
01:08:09,100 --> 01:08:10,500
Two-parter, if that's okay.

1122
01:08:10,500 --> 01:08:14,300
I'd like to start working on a homemade 3D game engine of my own how

1123
01:08:14,300 --> 01:08:19,100
much of what you have done here transfers over basically all the all

1124
01:08:19,100 --> 01:08:24,800
the code besides the renderer, the renderer is totally not going to

1125
01:08:24,800 --> 01:08:26,000
help you, right?

1126
01:08:26,700 --> 01:08:28,000
But all the rest of the stuff makes sense.

1127
01:08:28,899 --> 01:08:32,399
Be, when do you define how long a second is in the game?

1128
01:08:32,700 --> 01:08:36,600
How does the lighting work in regards to time?

1129
01:08:44,300 --> 01:08:47,000
I'm going to have to go ahead and say I don't understand Part B.

1130
01:08:47,700 --> 01:08:52,600
Those seem to be two totally unrelated things, lighting and time

1131
01:08:56,100 --> 01:08:58,700
Like the only yeah, I'm sorry.

1132
01:08:58,700 --> 01:08:59,500
I don't think I

1133
01:09:00,000 --> 01:09:00,300
and,

1134
01:09:08,000 --> 01:09:11,899
How would you suggest a younger developer to get into opengl and all

1135
01:09:11,899 --> 01:09:13,300
of its useful extensions?

1136
01:09:17,200 --> 01:09:18,100
Well, that's tough.

1137
01:09:18,399 --> 01:09:23,000
So, Nvidia has some great presentations on a CDO

1138
01:09:26,399 --> 01:09:29,399
which tell you everything that you need to know.

1139
01:09:34,200 --> 01:09:36,800
See if they've got a good one here.

1140
01:09:48,399 --> 01:09:49,000
Here we go.

1141
01:09:52,000 --> 01:09:55,300
So here's the thing, where I and I assume this kind of comes the

1142
01:09:55,300 --> 01:09:58,300
opengl a video teams like, hey, you know, you don't really need to use

1143
01:09:58,300 --> 01:10:00,800
Vulcan because we got all that stuff in opengl already.

1144
01:10:00,800 --> 01:10:07,500
If you just use it this page, basically tells you all the stuff, the

1145
01:10:07,500 --> 01:10:09,700
problem is, if you're younger development, don't allow experience,

1146
01:10:09,700 --> 01:10:11,300
you're going to read it and go like, I have no idea they're talking

1147
01:10:11,300 --> 01:10:12,100
about, right?

1148
01:10:12,800 --> 01:10:16,500
So, I don't know how you get to the point where you can read and

1149
01:10:16,500 --> 01:10:19,700
understand this page, but if you can read and understand this page,

1150
01:10:19,700 --> 01:10:20,400
this tells you

1151
01:10:20,600 --> 01:10:22,900
The stuff you needed to know, right?

1152
01:10:26,000 --> 01:10:27,200
Because it's got it all on here.

1153
01:10:28,600 --> 01:10:31,200
In particular, pay attention to this, this one's a big one.

1154
01:10:31,400 --> 01:10:36,000
Our buffer storage is probably one of the coolest things ever.

1155
01:10:36,800 --> 01:10:39,400
It's, it's like what you want.

1156
01:10:39,700 --> 01:10:40,500
It's great.

1157
01:10:42,800 --> 01:10:46,000
It's like it's about time I guess what I would say but yeah.

1158
01:10:46,200 --> 01:10:50,700
So in terms of what the useful extensions are there kind of all listed

1159
01:10:50,700 --> 01:10:53,500
here with pointers to wear to read more about them.

1160
01:10:53,500 --> 01:10:56,100
But how you get to the point where, you know, what this is talking

1161
01:10:56,100 --> 01:10:56,700
about?

1162
01:10:57,200 --> 01:11:00,600
I think you kind of have to just go do some basic opengl programming

1163
01:11:01,700 --> 01:11:03,500
instead, right?

1164
01:11:08,600 --> 01:11:11,200
Did you ever go through the Insight plug-in on stream?

1165
01:11:11,400 --> 01:11:12,400
No, I can't.

1166
01:11:12,400 --> 01:11:16,600
I don't think because this is an AMD card, I don't even think, I don't

1167
01:11:16,600 --> 01:11:16,700
know.

1168
01:11:16,700 --> 01:11:21,700
If inside even works on AMD, it might I've never tried it but I don't

1169
01:11:21,700 --> 01:11:21,800
know.

1170
01:11:21,800 --> 01:11:23,000
We can use that.

1171
01:11:29,300 --> 01:11:31,100
Off topic which keyboard layout to use.

1172
01:11:31,100 --> 01:11:32,200
I just use standard QWERTY.

1173
01:11:32,300 --> 01:11:33,500
Have you tried the various layouts?

1174
01:11:33,500 --> 01:11:35,700
I've read that QWERTY can be a bit less efficient for programming.

1175
01:11:35,700 --> 01:11:36,400
What do you think?

1176
01:11:38,200 --> 01:11:40,600
I don't think it probably would matter that much to be honest.

1177
01:11:41,600 --> 01:11:44,400
You know, I type pretty fast on Cordy.

1178
01:11:45,200 --> 01:11:47,600
I don't know that I could, I mean, maybe a better keyboard layout

1179
01:11:47,600 --> 01:11:49,500
would get me an extra 20 percent or something.

1180
01:11:49,500 --> 01:11:51,500
But I don't know that that's enough to relearn.

1181
01:11:57,400 --> 01:11:59,800
and anyway, if you have experienced an opengl, but

1182
01:12:00,000 --> 01:12:00,800
With the extensions then.

1183
01:12:00,800 --> 01:12:01,000
Yeah.

1184
01:12:01,000 --> 01:12:04,100
I'd start with this page and then go read about all the extensions.

1185
01:12:04,100 --> 01:12:06,000
They talk about right.

1186
01:12:07,000 --> 01:12:07,300
Okay.

1187
01:12:07,300 --> 01:12:12,100
And and like they have like, here's a presentation.

1188
01:12:12,100 --> 01:12:15,200
GDC presentation, they did one of their sponsored sessions or

1189
01:12:15,200 --> 01:12:16,200
something, right?

1190
01:12:16,800 --> 01:12:21,000
You could watch this and hear what they have to say, you know.

1191
01:12:21,000 --> 01:12:23,800
So so a CDO is a search term.

1192
01:12:23,800 --> 01:12:27,900
I think is what you're looking for and that should unlock a lot of of

1193
01:12:27,900 --> 01:12:29,800
hits for you, right?

1194
01:12:38,900 --> 01:12:42,200
And so, let's let's take a look at the question.

1195
01:12:42,200 --> 01:12:44,100
Someone asked, we're holding the shift key down.

1196
01:12:44,100 --> 01:12:48,100
Would constrain the Jimmy.

1197
01:12:49,700 --> 01:12:55,200
Would constrain the size of the window and yeah.

1198
01:12:55,200 --> 01:12:57,600
So I don't think about that.

1199
01:12:57,600 --> 01:13:05,900
I'm not sure what the most correct way to do that is so, so yeah.

1200
01:13:10,600 --> 01:13:13,200
I'm interested to see if Raymond Chen has a specific.

1201
01:13:17,100 --> 01:13:22,800
Thing where he says the best way to tell Windows the size, but it

1202
01:13:22,800 --> 01:13:23,800
doesn't look that way.

1203
01:13:34,500 --> 01:13:35,500
Let's see.

1204
01:13:50,400 --> 01:13:54,700
So it looks like he is suggesting we do it on, get min-max, info.

1205
01:13:55,300 --> 01:13:56,300
It looks like

1206
01:14:06,500 --> 01:14:11,300
so I think it looks like we only have to handle that maybe.

1207
01:14:21,100 --> 01:14:23,700
He seems to think that should be sufficient, I think.

1208
01:14:24,800 --> 01:14:25,800
So let's give it a shot.

1209
01:14:28,600 --> 01:14:30,800
And I said this before, when we did full screen, I'll just say it

1210
01:14:30,800 --> 01:14:31,100
again.

1211
01:14:31,100 --> 01:14:34,200
In case you didn't watch the full screen episode, whenever I want to

1212
01:14:34,200 --> 01:14:37,400
do something that has to do with like a sort of Tweaky Windows thing.

1213
01:14:38,000 --> 01:14:41,400
I always try to double check to see if Raymond Chen has said the right

1214
01:14:41,400 --> 01:14:46,100
way to do it because he is the master of twiki Windows things and he

1215
01:14:46,100 --> 01:14:48,200
has access to the source code which I don't.

1216
01:14:48,700 --> 01:14:52,800
So when he says, you know, this is probably the most efficient or at

1217
01:14:52,800 --> 01:14:56,100
least error-prone really is usually the thing way to tell Windows to

1218
01:14:56,100 --> 01:14:56,800
do something.

1219
01:14:56,900 --> 01:14:58,100
I always start with whatever.

1220
01:14:58,200 --> 01:14:59,800
He says, because it's, I find.

1221
01:15:00,000 --> 01:15:02,600
Usually, the most likely thing to just work.

1222
01:15:08,300 --> 01:15:13,200
so, if we want to handle, get min-max info, it says that the L / am

1223
01:15:13,300 --> 01:15:18,100
points to the min/max info structure, but I don't actually know,

1224
01:15:20,800 --> 01:15:20,900
What.

1225
01:15:20,900 --> 01:15:22,100
It's even got to fill out in here.

1226
01:15:22,400 --> 01:15:23,300
I assume

1227
01:15:24,600 --> 01:15:28,300
I assume it's Max position that it cares about.

1228
01:15:28,300 --> 01:15:32,700
Let's see, the maximum tracking size, the largest window size be

1229
01:15:32,700 --> 01:15:34,900
reduced by using the bar decides the window, the minimum tracking

1230
01:15:34,900 --> 01:15:37,400
size, the small sort of the side screws because in the Border size of

1231
01:15:37,400 --> 01:15:38,100
the window,

1232
01:15:43,600 --> 01:15:46,900
well, see that might work for what he was saying to do, but that's not

1233
01:15:46,900 --> 01:15:49,600
going to work for what we are saying to do, is it

1234
01:15:53,700 --> 01:15:58,500
Mmm because he just wanted to force it to only size in One Direction

1235
01:15:59,200 --> 01:16:01,700
and that's that's not going to work here.

1236
01:16:03,100 --> 01:16:03,900
So

1237
01:16:30,500 --> 01:16:31,700
So yeah.

1238
01:16:40,000 --> 01:16:40,900
Let's see.

1239
01:17:02,300 --> 01:17:03,800
so, looking at this,

1240
01:17:14,900 --> 01:17:16,200
This might be better.

1241
01:17:28,400 --> 01:17:29,100
Let's see.

1242
01:17:29,600 --> 01:17:32,900
Okay, when a university different fraction up because could override

1243
01:17:32,900 --> 01:17:34,500
these defaults

1244
01:17:36,700 --> 01:17:39,600
Well, this message is being processed modifying, any of the ones with

1245
01:17:39,600 --> 01:17:42,800
affects the windows new site solution or place in the Z order at a can

1246
01:17:42,800 --> 01:17:44,500
prevent change the Widow by clearing throat.

1247
01:17:44,500 --> 01:17:45,000
Okay?

1248
01:17:45,500 --> 01:17:47,600
So it sounds like what we could do.

1249
01:17:48,200 --> 01:17:51,000
Right is we could intercept this message.

1250
01:17:52,800 --> 01:17:57,200
So, we know when we are going to have our size changed, right?

1251
01:17:57,200 --> 01:17:59,900
And we could say when

1252
01:18:00,000 --> 01:18:02,900
Our window posts size is changing.

1253
01:18:03,400 --> 01:18:06,100
We have the L per annum, in this case.

1254
01:18:12,900 --> 01:18:14,700
Process pending messages is there.

1255
01:18:14,700 --> 01:18:15,800
A reason we are?

1256
01:18:18,600 --> 01:18:21,300
There's our wind proc want this in the wind park.

1257
01:18:21,300 --> 01:18:21,700
There we go.

1258
01:18:27,600 --> 01:18:31,900
So this L pram and theory is a pointer to one of these things window

1259
01:18:31,900 --> 01:18:32,400
pose.

1260
01:18:38,600 --> 01:18:41,200
And then when I can do is just I'm going to pass that message through

1261
01:18:41,200 --> 01:18:44,100
to the existing Windows procedure.

1262
01:18:51,400 --> 01:18:51,900
Right?

1263
01:18:52,600 --> 01:18:57,500
So in theory, if we just do this we should have you.

1264
01:18:57,500 --> 01:18:58,400
No no.

1265
01:19:03,300 --> 01:19:04,100
No change.

1266
01:19:09,000 --> 01:19:12,400
Now if we have Windows post changing and we want to modify this pose,

1267
01:19:12,900 --> 01:19:16,900
then in theory week, should be able to just reach into it and change

1268
01:19:17,200 --> 01:19:22,000
the the actual CX, and Cy values, which are the width and the height.

1269
01:19:22,400 --> 01:19:26,600
So, what we could do here is say, let's just force the aspect ratio to

1270
01:19:26,600 --> 01:19:27,500
be correct.

1271
01:19:27,500 --> 01:19:37,200
So, you know, whichever one you whichever one got changed, we'll use

1272
01:19:37,200 --> 01:19:37,900
the

1273
01:19:38,500 --> 01:19:41,600
corresponding one probably or maybe we could just do the closest one

1274
01:19:44,000 --> 01:19:45,200
trying to think of what the

1275
01:19:46,700 --> 01:19:47,600
best way to us would be.

1276
01:19:48,200 --> 01:19:52,300
So I think what I feel like we should do is say like

1277
01:19:55,300 --> 01:19:57,200
window wrecked equals get window wrecked.

1278
01:20:02,000 --> 01:20:07,700
And we'll just say, like, tell us how big our window currently is.

1279
01:20:08,200 --> 01:20:11,200
Well, then look at which one which change was bigger.

1280
01:20:13,500 --> 01:20:18,100
so we'll say like, you know, if if

1281
01:20:21,000 --> 01:20:22,400
you know, maybe the

1282
01:20:24,100 --> 01:20:25,200
Absolute value.

1283
01:20:25,900 --> 01:20:27,100
We have an absolute value function.

1284
01:20:27,100 --> 01:20:32,700
This I don't even know if the absolute value of CX minus the with

1285
01:20:32,800 --> 01:20:33,400
right.

1286
01:20:41,500 --> 01:20:45,100
Just compute the with that the window was before.

1287
01:20:50,100 --> 01:20:50,400
Right.

1288
01:20:50,400 --> 01:20:53,500
So it's like this is the width and height we were before the new pose

1289
01:20:53,500 --> 01:20:58,800
has what they will be I guess I could do get window pose.

1290
01:21:02,200 --> 01:21:03,500
Today, is there such a thing?

1291
01:21:06,700 --> 01:21:07,400
Apparently not.

1292
01:21:09,200 --> 01:21:12,100
Of course, there's not there's a set window pose, but not to get

1293
01:21:12,100 --> 01:21:12,800
window pose.

1294
01:21:12,900 --> 01:21:15,300
I mean, let's not be ridiculous.

1295
01:21:15,300 --> 01:21:16,000
Here people.

1296
01:21:19,600 --> 01:21:20,100
Hilarious.

1297
01:21:21,600 --> 01:21:22,000
Anyway.

1298
01:21:22,200 --> 01:21:27,700
So let's take a look and see is the absolute value of the width change

1299
01:21:27,700 --> 01:21:29,300
bigger than the height change.

1300
01:21:33,600 --> 01:21:33,900
Give me.

1301
01:21:36,000 --> 01:21:39,000
So if the, if the width change is bigger than the height, change will

1302
01:21:39,000 --> 01:21:39,800
re compute the height.

1303
01:21:39,800 --> 01:21:43,600
If the height change is bigger than the with change will recompute the

1304
01:21:43,600 --> 01:21:44,700
the with right?

1305
01:21:45,000 --> 01:21:50,200
So in this case we'll say the new post Cy schedule say the new post CX

1306
01:21:50,800 --> 01:21:57,900
and so if we want to recompute the height, hmm, excuse me, if we want

1307
01:21:57,900 --> 01:22:01,700
to recompute the height from the with then what we would need to do is

1308
01:22:01,700 --> 01:22:04,500
say well the new pose.

1309
01:22:05,400 --> 01:22:08,400
X is the divisor, right?

1310
01:22:09,000 --> 01:22:15,700
And what we want to do is take our desired like our render with which

1311
01:22:15,700 --> 01:22:16,000
I guess.

1312
01:22:16,000 --> 01:22:18,700
I don't know that we've actually really have at this point.

1313
01:22:19,300 --> 01:22:24,900
So you know, let's will sort of say we we have it temporarily

1314
01:22:36,500 --> 01:22:38,700
Oh wait, I take it back.

1315
01:22:38,700 --> 01:22:39,500
We actually do.

1316
01:22:47,500 --> 01:22:47,800
Right.

1317
01:22:47,800 --> 01:22:48,200
There is

1318
01:22:50,700 --> 01:22:51,500
go back bumper.

1319
01:22:54,200 --> 01:22:54,700
Right.

1320
01:22:59,600 --> 01:23:00,000
so,

1321
01:23:02,700 --> 01:23:03,500
Need some more water.

1322
01:23:04,500 --> 01:23:06,900
So I actually do have that, right?

1323
01:23:07,200 --> 01:23:08,000
If I

1324
01:23:12,600 --> 01:23:17,600
If I want to, I can say here is my render with hoops.

1325
01:23:20,200 --> 01:23:20,600
Underwear.

1326
01:23:23,300 --> 01:23:29,600
There's my render height and so I want to recompute whatever the see

1327
01:23:29,600 --> 01:23:31,300
why would be from the CX.

1328
01:23:32,100 --> 01:23:37,600
So what I want to do here is is again sort of solve that that

1329
01:23:37,600 --> 01:23:38,800
fundamental proportion.

1330
01:23:40,000 --> 01:23:47,200
So I want to multiply the the render height right?

1331
01:23:50,900 --> 01:23:52,400
Mape sander Freud.

1332
01:23:56,300 --> 01:23:56,700
Right.

1333
01:23:56,700 --> 01:23:59,800
I've got the, the render height.

1334
01:24:02,100 --> 01:24:05,600
and the render width, I want to solve for the

1335
01:24:07,100 --> 01:24:08,200
The new window height.

1336
01:24:14,500 --> 01:24:18,000
So I'm looking for this right here in this case.

1337
01:24:19,200 --> 01:24:22,200
So if I multiply out and I mean, I guess I could just flip these

1338
01:24:22,200 --> 01:24:23,100
proportions, right?

1339
01:24:23,100 --> 01:24:26,500
I could just flip them around so I could just say HR over W.

1340
01:24:26,500 --> 01:24:29,600
R equals h w, / w w, right?

1341
01:24:29,900 --> 01:24:32,100
And I want to solve for this, right?

1342
01:24:32,200 --> 01:24:37,400
Sorry, I want to solve for this right here, so I just get H, RW W, /

1343
01:24:37,400 --> 01:24:38,800
WR, right?

1344
01:24:39,900 --> 01:24:42,800
So that is

1345
01:24:44,900 --> 01:24:46,200
my, my

1346
01:24:50,000 --> 01:24:51,900
My render with right?

1347
01:24:56,200 --> 01:24:57,400
X, i render height.

1348
01:25:03,000 --> 01:25:08,500
I render height times my, which is this times, the window width that

1349
01:25:08,500 --> 01:25:12,100
I'm getting / the render with that.

1350
01:25:12,100 --> 01:25:15,500
I wanted to that maintains, the aspect ratio render height / render

1351
01:25:15,500 --> 01:25:18,400
with, and that should give me back the value that I wanted.

1352
01:25:18,500 --> 01:25:20,700
Similarly, I can do the exact same thing.

1353
01:25:21,500 --> 01:25:23,000
Oppositely for the

1354
01:25:26,100 --> 01:25:30,000
For the computation that preserves the height and resells for the

1355
01:25:30,000 --> 01:25:30,500
width.

1356
01:25:33,100 --> 01:25:33,600
Right.

1357
01:25:36,200 --> 01:25:42,900
And so in theory that would work right, I think, Hmm.

1358
01:25:58,800 --> 01:26:01,400
So I've never really tried to do this before.

1359
01:26:05,700 --> 01:26:08,000
So I'm not sure if it actually works or not.

1360
01:26:11,600 --> 01:26:14,400
It looks like it's sort of works.

1361
01:26:20,800 --> 01:26:22,100
It's a little.

1362
01:26:24,000 --> 01:26:26,900
Genki, so not quite right.

1363
01:26:29,200 --> 01:26:30,600
But close, right?

1364
01:26:31,400 --> 01:26:34,000
So one thing you said is, it's got to have the shift key down.

1365
01:26:35,300 --> 01:26:36,300
That's pretty easy.

1366
01:26:39,700 --> 01:26:42,900
We can start with that but then we got to address the other thing.

1367
01:26:42,900 --> 01:26:46,600
So, get a sink Key State.

1368
01:26:49,300 --> 01:26:51,600
Or I guess just get key State because we want it to be synchronous in

1369
01:26:51,600 --> 01:26:52,200
this case.

1370
01:26:54,000 --> 01:26:57,900
So we want to do get key state with the virtual key of E K shift.

1371
01:27:01,000 --> 01:27:04,200
In the words is the is the shift key down, right?

1372
01:27:05,100 --> 01:27:10,400
And the higher order bit is whether it's whether it's down or not,

1373
01:27:10,700 --> 01:27:11,200
right?

1374
01:27:13,100 --> 01:27:15,100
And it's a short that's coming back.

1375
01:27:15,100 --> 01:27:19,300
So it's going to be the, it basically is it - right?

1376
01:27:19,300 --> 01:27:20,300
It's basically like

1377
01:27:25,300 --> 01:27:25,800
that.

1378
01:27:33,900 --> 01:27:37,400
So now when I scale it should be normal, but if I hold down the shift

1379
01:27:37,400 --> 01:27:44,000
key it's aspect ratio constrained but so we're we've got some kind of

1380
01:27:44,000 --> 01:27:48,100
a bug here that I'll have to look at in a second but let me just go

1381
01:27:48,100 --> 01:27:52,000
ahead and point out one more thing first.

1382
01:27:52,300 --> 01:27:54,000
So there's two things as do one is get to debug.

1383
01:27:54,000 --> 01:27:55,800
Why we're getting that word Jitter there.

1384
01:27:55,800 --> 01:28:00,100
But the other thing that we have to do is this is unfortunately

1385
01:28:00,100 --> 01:28:03,000
setting the client I'm sorry setting the window

1386
01:28:03,500 --> 01:28:05,700
Rectangle, right?

1387
01:28:07,000 --> 01:28:10,100
But we don't actually care what the window?

1388
01:28:10,100 --> 01:28:12,400
Rectangles aspect ratios.

1389
01:28:12,700 --> 01:28:16,300
We can't with the visible region is right.

1390
01:28:17,700 --> 01:28:23,700
And so since we're trying to adjust to the visible region, that is

1391
01:28:25,900 --> 01:28:30,100
an extra part of the computation that we have to figure out if that

1392
01:28:30,100 --> 01:28:30,700
makes sense.

1393
01:28:33,800 --> 01:28:37,200
so yeah, so let's start by just asking

1394
01:28:39,800 --> 01:28:40,300
To be on.

1395
01:28:40,300 --> 01:28:45,600
Get or I want to know, is size, changing or sorry?

1396
01:28:45,600 --> 01:28:45,800
Window.

1397
01:28:45,800 --> 01:28:47,200
Post changing window.

1398
01:28:47,200 --> 01:28:50,600
Post changing, I'm assuming that that's the window.

1399
01:28:52,700 --> 01:28:53,800
It's part.

1400
01:28:53,900 --> 01:28:55,700
There is the frame.

1401
01:28:55,700 --> 01:28:58,700
The definite part function says are given is the window is an invalid.

1402
01:28:58,700 --> 01:29:02,100
The new substation return for us by the line client by the window and

1403
01:29:02,100 --> 01:29:03,700
has a range of different program.

1404
01:29:03,700 --> 01:29:08,100
Like it's false well, administering processed by find the values

1405
01:29:08,100 --> 01:29:11,600
should fiction z-order an application for educators Terminus by

1406
01:29:11,600 --> 01:29:12,900
creating Flags.

1407
01:29:14,900 --> 01:29:15,800
So that's fine.

1408
01:29:16,300 --> 01:29:17,800
See what window post says here.

1409
01:29:19,500 --> 01:29:22,600
The window width in pixels but it says, C and C.

1410
01:29:22,600 --> 01:29:25,000
I don't know why there's a sea in front of it.

1411
01:29:26,000 --> 01:29:27,200
I guess that just means the width.

1412
01:29:27,200 --> 01:29:27,800
I'm not sure.

1413
01:29:28,300 --> 01:29:33,200
But what I don't know is is that the clients eyes, or the total window

1414
01:29:33,200 --> 01:29:41,500
size, and I'm not sure, of course, it's not documented, because why

1415
01:29:41,500 --> 01:29:44,500
would it be, you know, why would that be something you'd want to

1416
01:29:44,500 --> 01:29:44,900
document?

1417
01:29:44,900 --> 01:29:46,900
Like what the value is at all?

1418
01:29:49,600 --> 01:29:51,300
Window width in pixels.

1419
01:29:51,400 --> 01:29:52,800
I assume it's just the

1420
01:29:54,500 --> 01:29:56,800
I assume that it's just what comes back.

1421
01:29:57,500 --> 01:29:58,900
So let's let's try this.

1422
01:29:59,200 --> 01:29:59,800
I'm going to set a breakpoint.

1423
01:30:00,000 --> 01:30:04,100
I went in there and I just want to see what it says there, right?

1424
01:30:04,100 --> 01:30:04,800
I just want to

1425
01:30:09,200 --> 01:30:10,000
take a look at code.

1426
01:30:14,700 --> 01:30:16,300
So I'm not going to resize it at all.

1427
01:30:16,800 --> 01:30:17,900
I'm just going to click there.

1428
01:30:20,000 --> 01:30:20,700
Right.

1429
01:30:20,700 --> 01:30:26,500
So now what we should see in theory is our window wrecked, and our new

1430
01:30:26,500 --> 01:30:30,000
pose, should be like the same thing, right?

1431
01:30:32,200 --> 01:30:34,500
And, hey, guess what it looks like CX.

1432
01:30:34,500 --> 01:30:39,500
And Cy or actually the client wrecked, honestly, that's way better for

1433
01:30:39,500 --> 01:30:39,900
us.

1434
01:30:41,100 --> 01:30:43,100
Which you documented that, that would.

1435
01:30:43,100 --> 01:30:45,400
It save us some time but all right.

1436
01:30:47,600 --> 01:30:48,500
Whatevs.

1437
01:30:49,900 --> 01:30:51,500
That makes it a lot easier for us.

1438
01:30:51,500 --> 01:30:56,600
So good on you windows for picking the right one of those to do, all

1439
01:30:56,600 --> 01:30:57,200
right.

1440
01:30:59,200 --> 01:31:03,700
So we still got some weird stuff happening there, that I'm not sure.

1441
01:31:09,800 --> 01:31:13,400
all right, so when I fuss with this,

1442
01:31:28,800 --> 01:31:30,600
Let's see here.

1443
01:31:37,900 --> 01:31:40,800
It's kind of having a beat frequency back and forth.

1444
01:31:41,100 --> 01:31:42,900
It's almost like it passes.

1445
01:31:42,900 --> 01:31:45,000
The window post changing twice.

1446
01:31:45,300 --> 01:31:49,000
Once with the window with and once with the client with or something.

1447
01:31:51,500 --> 01:31:52,800
But I'm not sure.

1448
01:33:22,500 --> 01:33:26,300
So I don't really see exactly what's going on here.

1449
01:33:28,500 --> 01:33:30,500
I want to know.

1450
01:33:35,100 --> 01:33:38,700
if it's me who's causing that flicker by something wrong, in the way

1451
01:33:38,700 --> 01:33:40,300
that I'm doing the code here,

1452
01:33:50,600 --> 01:33:54,200
I wonder if what happens is it then calls me back or something?

1453
01:33:54,200 --> 01:33:55,600
I don't think it should.

1454
01:34:03,300 --> 01:34:05,300
Yeah, I'm not sure about that's really weird.

1455
01:34:05,300 --> 01:34:06,300
I'm not sure what's going on there at.

1456
01:34:06,300 --> 01:34:08,900
This isn't something I've done before, so it's a Windows thing.

1457
01:34:08,900 --> 01:34:12,800
So obviously it's going to be Tweaky and weird but I'm just not sure I

1458
01:34:12,800 --> 01:34:14,300
understand exactly why.

1459
01:34:18,400 --> 01:34:21,500
I'm going to print out something here to the log just so I can see.

1460
01:34:36,200 --> 01:34:38,800
so I'm going to say, like, okay, the old one

1461
01:34:42,200 --> 01:34:43,300
Was.

1462
01:34:46,200 --> 01:34:52,800
With that height and the new one CX, Cy.

1463
01:35:11,200 --> 01:35:16,400
Okay, and I kind of want to, I want another thing in here.

1464
01:35:16,400 --> 01:35:19,700
So I guess I'll do you mean

1465
01:35:24,300 --> 01:35:26,500
I want to print out the modification as well.

1466
01:35:27,000 --> 01:35:32,500
So I want to do like, bold new requested.

1467
01:35:33,500 --> 01:35:34,000
Right.

1468
01:35:41,400 --> 01:35:43,800
So, here's the ones that it was doing.

1469
01:35:45,100 --> 01:35:46,800
So that I can put them in here.

1470
01:35:50,400 --> 01:35:51,300
and now,

1471
01:35:54,100 --> 01:35:56,400
I can go ahead and say output debug string.

1472
01:36:00,100 --> 01:36:04,400
So, at least, now I can kind of see a stream of information about

1473
01:36:04,400 --> 01:36:06,500
this, when it's happening.

1474
01:36:28,400 --> 01:36:29,800
So, let's see.

1475
01:36:31,500 --> 01:36:38,400
The old was 571 459, it's requesting 587 498.

1476
01:36:39,300 --> 01:36:45,700
So then it decided to use the 498, which made it go to 85, right?

1477
01:36:46,200 --> 01:36:49,600
Then it had 869, 460

1478
01:36:51,600 --> 01:36:56,900
I guess that's just kind of because the position of the mouse cursor

1479
01:36:58,900 --> 01:36:59,500
Yeah.

1480
01:37:00,700 --> 01:37:04,700
So the problem is the mouse cursor won't snap out anywhere else.

1481
01:37:05,000 --> 01:37:10,200
So I need I can't just look at the Delta, I guess.

1482
01:37:10,200 --> 01:37:13,700
I have to look at whatever is closest, right?

1483
01:37:13,800 --> 01:37:18,300
I have to look at like what would be the closest aspect ratio window

1484
01:37:19,500 --> 01:37:20,400
that would fit

1485
01:37:31,200 --> 01:37:33,800
I mean that seems to me like what I would have to do.

1486
01:37:35,700 --> 01:37:37,800
So it seems to me like I'd have to do this.

1487
01:37:45,300 --> 01:37:48,300
So I can compute the new CX and I can compute the news.

1488
01:37:48,600 --> 01:37:50,100
See why, right?

1489
01:37:50,500 --> 01:37:54,000
From whatever the request is and then I guess I could just see which

1490
01:37:54,000 --> 01:37:56,800
one causes the least change.

1491
01:37:57,000 --> 01:37:57,800
Like what's the clue?

1492
01:37:57,900 --> 01:37:59,600
Which one is the closest?

1493
01:37:59,800 --> 01:38:00,600
Right.

1494
01:38:01,800 --> 01:38:06,700
So basically like you know is

1495
01:38:09,000 --> 01:38:13,600
Is the new cy- the, the Cy.

1496
01:38:15,900 --> 01:38:16,300
Oops.

1497
01:38:27,400 --> 01:38:28,900
so, if the new CX,

1498
01:38:32,800 --> 01:38:37,500
Is closer than the new Cy would be then use it.

1499
01:38:39,000 --> 01:38:41,300
And if the new Cy is closer.

1500
01:38:43,700 --> 01:38:46,000
Then use it, right.

1501
01:38:53,200 --> 01:38:55,900
So we're not using the Delta anymore, we're just using sort of the

1502
01:38:55,900 --> 01:38:58,100
absolute and we will see if that helps.

1503
01:39:00,000 --> 01:39:00,400
Yeah.

1504
01:39:13,300 --> 01:39:15,500
All right, so that's good.

1505
01:39:15,500 --> 01:39:22,600
But we still end up with with bars here which I assume are because it

1506
01:39:22,600 --> 01:39:30,400
actually is still like the that it is actually giving us back window

1507
01:39:30,400 --> 01:39:34,500
positions, maybe not client positions.

1508
01:39:35,300 --> 01:39:36,200
Somehow

1509
01:39:36,900 --> 01:39:39,200
Or something like a client position.

1510
01:39:39,500 --> 01:39:42,300
I'm not sure, but something's a little weird.

1511
01:39:42,400 --> 01:39:43,800
So I want to know

1512
01:39:50,700 --> 01:39:51,500
I would like to know.

1513
01:39:51,500 --> 01:39:52,900
Do I have a sprintf here?

1514
01:40:04,300 --> 01:40:07,200
Just the one that's like always complains about like what we're

1515
01:40:07,200 --> 01:40:08,200
passing it and stuff.

1516
01:40:09,100 --> 01:40:09,500
All right.

1517
01:40:11,100 --> 01:40:16,100
So what I'd like to do here is say well what was the aspect ratio that

1518
01:40:16,100 --> 01:40:17,200
I'm passing in?

1519
01:40:17,500 --> 01:40:22,100
Just to see if if it's a valid aspect ratio, right?

1520
01:40:33,300 --> 01:40:38,000
So, I want the aspect ratio.

1521
01:40:38,000 --> 01:40:40,500
I want, is the render with

1522
01:40:42,500 --> 01:40:43,900
over the render height.

1523
01:40:45,400 --> 01:40:52,300
And the aspect ratio, I got is whatever the new width of the window is

1524
01:40:52,300 --> 01:40:52,800
here.

1525
01:40:55,100 --> 01:40:55,600
Right.

1526
01:41:06,100 --> 01:41:09,800
And so, it seems like we're getting basically the aspect ratio that we

1527
01:41:09,800 --> 01:41:10,500
asked for.

1528
01:41:10,800 --> 01:41:15,300
So it looks like that is not really the client area and that it must

1529
01:41:15,300 --> 01:41:16,200
be actually.

1530
01:41:16,200 --> 01:41:20,800
It is actually the windows wrecked rectangle area, right?

1531
01:41:22,800 --> 01:41:26,300
So adjust, if I remember correctly, adjust window wreck, doesn't work.

1532
01:41:27,000 --> 01:41:30,200
Adjust window wrecked in that way, that nothing that Microsoft does

1533
01:41:30,200 --> 01:41:31,600
ever works just window.

1534
01:41:31,600 --> 01:41:33,000
Wreck doesn't actually work.

1535
01:41:33,100 --> 01:41:37,000
If your window is an overlapped window which are is is which is

1536
01:41:37,000 --> 01:41:37,600
awesome.

1537
01:41:38,700 --> 01:41:39,300
Right?

1538
01:41:39,800 --> 01:41:41,900
You have to specify like other styles.

1539
01:41:41,900 --> 01:41:47,700
I don't, I don't understand how that's plausible, but that's we don't

1540
01:41:47,700 --> 01:41:49,900
even I don't think have to rely on that, really?

1541
01:41:52,500 --> 01:41:59,600
I don't think because we can figure out the

1542
01:42:00,000 --> 01:42:00,700
Factor.

1543
01:42:03,800 --> 01:42:05,600
I believe, right?

1544
01:42:06,100 --> 01:42:11,000
So we can figure out the adjustment factor for the aspect ratio just

1545
01:42:11,000 --> 01:42:13,700
by looking at what the difference would be at that position, and it's

1546
01:42:13,700 --> 01:42:14,400
a little bit janky.

1547
01:42:14,400 --> 01:42:17,400
But what I could do is say, well, I've got the window wrecked in the

1548
01:42:17,400 --> 01:42:19,600
client wrecked, right?

1549
01:42:25,900 --> 01:42:32,600
I get both of those so I know that sort of my my

1550
01:42:34,700 --> 01:42:41,900
With ADD and my height, add are going to be proportional to that.

1551
01:42:42,300 --> 01:42:44,000
So the window wrecked, right?

1552
01:42:44,100 --> 01:42:49,200
- the window, wrecked left - the client wrecked, right?

1553
01:42:49,200 --> 01:42:54,200
- the client wreck left is the amount of additional width that we

1554
01:42:54,200 --> 01:42:54,800
would get.

1555
01:42:57,300 --> 01:43:01,000
And similarly, I can do the same thing for the height, right?

1556
01:43:06,000 --> 01:43:12,200
So, I know it's going to pad those like additional values on there,

1557
01:43:12,400 --> 01:43:12,900
right?

1558
01:43:16,500 --> 01:43:20,500
So, what I want to do here is I want to solve for this ratio now in

1559
01:43:20,500 --> 01:43:21,200
that way.

1560
01:43:21,400 --> 01:43:29,000
So what I know is going to happen is, is I have a client rekt.

1561
01:43:29,000 --> 01:43:33,500
So I've got a height client over a width client, and I want that to

1562
01:43:33,500 --> 01:43:37,200
equal the height render over the width render, right?

1563
01:43:37,300 --> 01:43:38,700
This is what I'm trying to do.

1564
01:43:39,700 --> 01:43:40,700
If this makes sense.

1565
01:43:43,800 --> 01:43:44,200
Hmm.

1566
01:43:46,700 --> 01:43:51,600
But the height of the client is actually the height of the window -

1567
01:43:51,600 --> 01:43:53,700
the height additional, right?

1568
01:43:54,000 --> 01:43:54,800
Whatever that is.

1569
01:43:54,900 --> 01:44:00,300
And the with the client equals, the width of the window - the with

1570
01:44:00,300 --> 01:44:00,900
additional

1571
01:44:03,700 --> 01:44:04,500
If that makes sense.

1572
01:44:06,500 --> 01:44:10,300
So if we are trying to make this be true, then essentially what we

1573
01:44:10,300 --> 01:44:12,100
have here I guess is.

1574
01:44:12,100 --> 01:44:21,800
We've got HW - aha / w w- w a equals h, r, / WR, right?

1575
01:44:24,700 --> 01:44:30,000
So if we want to actually make these equations work, we have to

1576
01:44:30,000 --> 01:44:31,800
multiply by these giant terms here.

1577
01:44:31,800 --> 01:44:43,100
So we have to say HR w, w- w a / WR and then we have to hmm.

1578
01:44:46,000 --> 01:44:46,400
Well.

1579
01:44:49,900 --> 01:44:55,300
So we actually have to compute that I guess if we want to know what

1580
01:44:55,300 --> 01:44:58,500
the height of the window is actually supposed to be right.

1581
01:45:03,200 --> 01:45:08,000
So anyway, so that means that if we were going to do that, the so

1582
01:45:08,100 --> 01:45:09,900
let's do the the width here.

1583
01:45:12,000 --> 01:45:18,000
So the new c y is going to equal to the render height times.

1584
01:45:18,000 --> 01:45:25,000
The quantity window width, which is this - the window additional

1585
01:45:25,100 --> 01:45:27,400
amount, right?

1586
01:45:28,900 --> 01:45:32,600
/ the render with which we are doing.

1587
01:45:36,200 --> 01:45:37,300
Right, render height.

1588
01:45:37,800 --> 01:45:44,400
Is it / the render with plus whatever the h a value is there?

1589
01:45:44,600 --> 01:45:46,300
And I'd like to do that on the top.

1590
01:45:46,300 --> 01:45:51,000
So I'd like to do that like this because this is, this is actually an

1591
01:45:51,000 --> 01:45:51,800
integer divide.

1592
01:45:52,000 --> 01:45:54,700
So I have to multiply it by W are, right?

1593
01:45:54,700 --> 01:45:56,100
Because it was aha.

1594
01:45:56,100 --> 01:46:02,400
So I have 2 x WR, /, WR to give me W RH / WR, so it's actually,

1595
01:46:06,800 --> 01:46:09,100
This is the 20 times tough times.

1596
01:46:09,100 --> 01:46:12,400
The render with their and the the

1597
01:46:13,600 --> 01:46:14,200
Hi Dad.

1598
01:46:21,400 --> 01:46:22,000
Right.

1599
01:46:22,500 --> 01:46:27,100
So there's that monstrosity there and then for the CX everything is

1600
01:46:27,100 --> 01:46:28,300
flipped, right?

1601
01:46:28,300 --> 01:46:29,500
So this is the width.

1602
01:46:29,700 --> 01:46:32,400
This is the Y, this is the height.

1603
01:46:33,200 --> 01:46:36,900
This is the width.

1604
01:46:38,200 --> 01:46:38,700
Height.

1605
01:46:47,900 --> 01:46:49,600
And one crosses one's fingers.

1606
01:47:01,600 --> 01:47:03,200
So, let's hope that some of that was, right.

1607
01:47:03,300 --> 01:47:08,000
I don't know if it was doesn't look like it unfortunately.

1608
01:47:15,100 --> 01:47:19,200
I guess we could have a bug in our other, the other part of our code,

1609
01:47:19,800 --> 01:47:20,200
like

1610
01:47:23,100 --> 01:47:25,400
Let's see what the client rectangle actually is.

1611
01:47:36,700 --> 01:47:40,400
so, if I take the client wrecked,

1612
01:47:42,200 --> 01:47:42,900
Bottom.

1613
01:47:45,600 --> 01:47:45,900
Well.

1614
01:47:48,000 --> 01:47:48,800
all right, with

1615
01:47:56,500 --> 01:47:58,000
and client height.

1616
01:48:08,200 --> 01:48:10,500
so, if I actually just do

1617
01:48:14,800 --> 01:48:16,000
Plant with over.

1618
01:48:18,400 --> 01:48:19,200
Client height.

1619
01:48:19,700 --> 01:48:22,400
We can see what we were actually getting.

1620
01:48:29,900 --> 01:48:31,800
No, so it's definitely wrong.

1621
01:48:34,900 --> 01:48:36,100
No question about that.

1622
01:48:44,300 --> 01:48:46,000
So, let's see.

1623
01:48:46,100 --> 01:48:51,700
That is the new window with did I do this, right?

1624
01:48:52,300 --> 01:48:53,700
I may have messed up this math.

1625
01:48:56,300 --> 01:49:01,600
We wanted the client to be equal to the render and we said, the client

1626
01:49:01,600 --> 01:49:02,400
was the width.

1627
01:49:03,600 --> 01:49:11,000
- the the add the added amount right in both cases.

1628
01:49:16,500 --> 01:49:18,900
So that seems right now, there's another way we could have computed

1629
01:49:18,900 --> 01:49:19,100
this.

1630
01:49:19,100 --> 01:49:21,200
I suppose we could have

1631
01:49:22,900 --> 01:49:25,300
subtracted in and then added it back.

1632
01:49:27,900 --> 01:49:29,500
Meaning we could do something like this.

1633
01:49:32,500 --> 01:49:35,000
This might be a clearer way to debug it, right?

1634
01:49:35,400 --> 01:49:38,800
We would say that the, the new one is the render worth times.

1635
01:49:43,800 --> 01:49:47,200
Yeah, it's essentially exactly that but without the Plus without this,

1636
01:49:48,000 --> 01:49:48,500
right.

1637
01:49:57,500 --> 01:49:59,100
That's a little bit easier to see, right?

1638
01:49:59,200 --> 01:50:02,900
So you're basically saying well let's solve for the client and then

1639
01:50:02,900 --> 01:50:05,100
we'll we'll put it in there, right?

1640
01:50:40,200 --> 01:50:42,300
So that's all messed up.

1641
01:50:42,300 --> 01:50:45,000
Oh well, that's great.

1642
01:50:46,700 --> 01:50:48,600
I never change this to get window wreck.

1643
01:50:49,000 --> 01:50:50,800
So those would have all been zero.

1644
01:50:51,400 --> 01:50:54,100
Gosh, I wonder why we weren't seeing any change there.

1645
01:50:57,600 --> 01:50:58,600
There we go.

1646
01:51:00,500 --> 01:51:01,600
Now, it's perfect.

1647
01:51:05,500 --> 01:51:07,900
Okay, so I think that's all good.

1648
01:51:07,900 --> 01:51:08,200
Now

1649
01:51:13,500 --> 01:51:18,300
So yeah, who asked that question?

1650
01:51:22,300 --> 01:51:23,600
I know somebody did somewhere.

1651
01:51:34,600 --> 01:51:34,900
Okay.

1652
01:51:34,900 --> 01:51:35,400
Hi.

1653
01:51:35,400 --> 01:51:36,200
There you go.

1654
01:51:37,800 --> 01:51:38,700
Does that help?

1655
01:52:03,600 --> 01:52:04,100
Okay.

1656
01:52:05,800 --> 01:52:09,600
Well, I'm going to go ahead and wrap it up.

1657
01:52:14,900 --> 01:52:17,300
And yet for adjust window wrecked, you can pass.

1658
01:52:17,700 --> 01:52:26,400
You can pass a set of flags that is equivalent to ws overlapped and

1659
01:52:26,400 --> 01:52:27,600
then it will work.

1660
01:52:27,600 --> 01:52:32,100
So I think but maybe not.

1661
01:52:35,700 --> 01:52:36,200
so,

1662
01:52:43,200 --> 01:52:43,700
all right.

1663
01:52:52,000 --> 01:52:54,600
Thank you everyone for joining me, for another episode of handmade

1664
01:52:54,600 --> 01:52:54,800
hero.

1665
01:52:54,800 --> 01:52:56,000
It's been a pleasure coding with you.

1666
01:52:56,000 --> 01:52:59,900
As always, if you would like to follow along with the series at home,

1667
01:52:59,900 --> 01:53:02,700
you can always pre-order the game on handmade hero dot-org and it

1668
01:53:02,700 --> 01:53:03,900
comes with a source code.

1669
01:53:04,300 --> 01:53:05,300
So you can follow along at home.

1670
01:53:05,300 --> 01:53:07,000
We also have a forum site, you can go to.

1671
01:53:07,000 --> 01:53:10,100
If you want to ask questions a patreon page, you can subscribe to if

1672
01:53:10,100 --> 01:53:13,600
you want to support our video series schedule bot that you could

1673
01:53:13,600 --> 01:53:13,900
follow.

1674
01:53:13,900 --> 01:53:16,100
If you want to know when we're going to be live and an episode guide,

1675
01:53:16,100 --> 01:53:20,400
if you're trying to catch up on old materials, that's about it for

1676
01:53:20,400 --> 01:53:21,000
today, I'll be

1677
01:53:21,100 --> 01:53:23,500
Be back here tomorrow for the last stream of the week.

1678
01:53:23,500 --> 01:53:24,000
5 p.m.

1679
01:53:24,000 --> 01:53:27,300
Pacific Daylight time, until then have fun programming, everyone.

1680
01:53:27,300 --> 01:53:29,200
And I will see you guys on the internet.

1681
01:53:29,200 --> 01:53:29,900
Take it easy.

