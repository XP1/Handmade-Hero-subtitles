1
00:00:00,900 --> 00:00:03,700
Hello everyone and welcome to handmade hero, the show where we CO2

2
00:00:03,700 --> 00:00:06,900
complete game live on stream here on Twitch.

3
00:00:07,800 --> 00:00:12,200
You know, we don't use any engines, we don't use any libraries, we're

4
00:00:12,200 --> 00:00:14,800
kind of just like going rogue, if that makes sense.

5
00:00:15,500 --> 00:00:18,400
But I think it's important that everyone have the experience one time.

6
00:00:18,400 --> 00:00:18,800
A seeing?

7
00:00:18,800 --> 00:00:21,100
Absolutely everything that's involved building a game.

8
00:00:21,700 --> 00:00:24,700
It really makes people a lot more flexible as programmers and lets

9
00:00:24,700 --> 00:00:26,500
them do a lot of things that they couldn't do.

10
00:00:26,500 --> 00:00:28,900
Otherwise is means that basically anything that you want to be able to

11
00:00:28,900 --> 00:00:30,000
do you can

12
00:00:30,200 --> 00:00:31,800
You don't have to rely on someone else for it.

13
00:00:31,800 --> 00:00:35,100
So it's kind of cool and honestly it's also kind of a lot of fun.

14
00:00:35,100 --> 00:00:38,700
I don't know if you're the kind of person who likes you know, just

15
00:00:38,700 --> 00:00:43,100
likes to program then it's kind of fun to be able to get down and do

16
00:00:43,100 --> 00:00:45,900
stuff yourself without having to go through kind of like all these

17
00:00:45,900 --> 00:00:49,800
weird like Amorphis layers and so right now what we're actually doing

18
00:00:49,800 --> 00:00:53,600
is we're just we postponed some debugging till today because yesterday

19
00:00:53,600 --> 00:00:55,800
we had just finished up when the stream is over.

20
00:00:56,900 --> 00:00:59,700
And I didn't want to start debugging something at that time, because I

21
00:00:59,700 --> 00:01:01,700
felt like that would just go really long.

22
00:01:01,700 --> 00:01:05,300
So, what we had done is we added a bunch of stuff to our asset

23
00:01:05,300 --> 00:01:11,100
processing system and asset loading system to allow so, save out, like

24
00:01:11,100 --> 00:01:14,800
font metadata, basically, like all like that, the tables of bit Mak

25
00:01:14,800 --> 00:01:16,000
lifts, and all this other stuff.

26
00:01:16,800 --> 00:01:20,500
And so, we finished all that, but we didn't have a chance to actually

27
00:01:20,500 --> 00:01:22,000
go to bucket and get it working.

28
00:01:22,100 --> 00:01:25,100
We probably forgot some stuff we probably made some mistakes because

29
00:01:25,100 --> 00:01:26,500
it was a bunch of stuff both.

30
00:01:26,700 --> 00:01:29,700
Sides of the asset process of processing and on the game side it.

31
00:01:29,700 --> 00:01:32,300
So we want to do today is just go over that code again.

32
00:01:32,600 --> 00:01:35,500
Make sure it's working properly, step through it, find any problems.

33
00:01:35,500 --> 00:01:38,900
That sort of thing is get that up and running and then we'll have sort

34
00:01:38,900 --> 00:01:41,300
of the first pass of all of our font stuff.

35
00:01:43,800 --> 00:01:45,000
Actually, mostly done.

36
00:01:46,200 --> 00:01:49,900
And then I think we'll probably do for the rest of the week is go back

37
00:01:49,900 --> 00:01:50,400
through it.

38
00:01:50,400 --> 00:01:53,900
Add a few things that I think we want to add clean up a few things

39
00:01:53,900 --> 00:01:56,600
basically just kind of Tidy it up so that we can kind of say, all

40
00:01:56,600 --> 00:01:57,500
right, we've got fonts.

41
00:01:57,500 --> 00:02:00,400
Now we probably don't really need to do much else with them.

42
00:02:00,800 --> 00:02:04,500
We're happy and we can move on to debug overlays which was another one

43
00:02:04,500 --> 00:02:08,300
of our big sort of to do items and one of the main reasons that we

44
00:02:08,300 --> 00:02:11,800
wanted to do fonts now was so that we could have those even though we

45
00:02:11,800 --> 00:02:14,300
don't really actually have any need for text in the game at the

46
00:02:14,300 --> 00:02:15,900
moment, although we probably will

47
00:02:16,400 --> 00:02:17,100
Later on.

48
00:02:17,500 --> 00:02:19,900
So let's go ahead and get that.

49
00:02:19,900 --> 00:02:21,200
That party started.

50
00:02:21,300 --> 00:02:21,800
Today is day.

51
00:02:21,800 --> 00:02:22,600
1, 72.

52
00:02:22,600 --> 00:02:25,100
So, if you would like to follow along at home, and you pre-ordered the

53
00:02:25,100 --> 00:02:30,800
game on handmade hero dot-org, unpacked a 170, ones, source code, into

54
00:02:30,800 --> 00:02:31,400
a directory.

55
00:02:31,400 --> 00:02:32,200
That's the source code.

56
00:02:32,200 --> 00:02:34,700
I'm starting with right now and that's what you're going to want to

57
00:02:34,700 --> 00:02:37,100
start with if you're trying to follow along with me.

58
00:02:37,300 --> 00:02:37,800
All right.

59
00:02:39,500 --> 00:02:44,600
So let's go ahead and build and if I remember correctly, nothing, in

60
00:02:44,600 --> 00:02:46,100
particular, went wrong.

61
00:02:46,100 --> 00:02:47,900
Our fonts just didn't show up.

62
00:02:47,900 --> 00:02:52,100
So we weren't having like a crashbug, but something is broken.

63
00:02:52,300 --> 00:02:56,700
Such that the fonts are not loading sufficiently in a way that the

64
00:02:56,700 --> 00:02:58,600
actual game can use.

65
00:02:58,600 --> 00:02:59,800
So some part of

66
00:03:00,100 --> 00:03:05,500
Either our packing process or are loading process is making a critical

67
00:03:05,500 --> 00:03:09,600
error and so it just thinks that there aren't any fonts or something

68
00:03:09,600 --> 00:03:10,800
like this happens, right?

69
00:03:11,000 --> 00:03:14,200
So, our job now is to go through and find out where that error or

70
00:03:14,200 --> 00:03:17,600
series of errors are, I'm going to go ahead and start with the asset

71
00:03:17,600 --> 00:03:22,400
processor, just because I want to actually do a quick first pass.

72
00:03:22,400 --> 00:03:26,700
Check to make sure that I actually believe that our fonts are even

73
00:03:26,700 --> 00:03:28,700
getting stored into the file at all.

74
00:03:28,900 --> 00:03:29,800
And that there's

75
00:03:30,000 --> 00:03:32,700
You know, actually data in the bitmaps that sort of thing.

76
00:03:32,900 --> 00:03:36,800
So I want to just do a quick pass on that and see what I believe to be

77
00:03:36,800 --> 00:03:37,600
happening there.

78
00:03:38,200 --> 00:03:41,100
Now, I think, what I'll do just to make life a little easier on

79
00:03:41,100 --> 00:03:44,300
myself, is, if you remember correctly, we have the ability to write

80
00:03:44,300 --> 00:03:47,400
out multiple files from the asset Builder, right?

81
00:03:47,900 --> 00:03:49,300
And you can see it happening here.

82
00:03:49,700 --> 00:03:52,600
And so, what I think I'll do is I'll do something where I just write

83
00:03:52,600 --> 00:03:54,000
fonts like this.

84
00:03:54,400 --> 00:03:57,700
So I'm going to go ahead and write fonts as a separate file.

85
00:03:57,700 --> 00:03:59,800
And that way, what I can do is I can even move.

86
00:04:00,000 --> 00:04:01,600
Temporarily to first.

87
00:04:02,200 --> 00:04:06,300
And so, then I can try it like first and last, and so on, because

88
00:04:06,300 --> 00:04:07,700
first, it's kind of a privileged position.

89
00:04:07,700 --> 00:04:10,700
It means that the bitmap IDS will actually line up, right?

90
00:04:10,700 --> 00:04:13,400
And so, that takes another thing, sort of a little bit out of the out

91
00:04:13,400 --> 00:04:14,500
of the equation, potentially.

92
00:04:15,700 --> 00:04:16,800
Well, no, that's not actually true.

93
00:04:17,700 --> 00:04:18,200
I take it back.

94
00:04:18,200 --> 00:04:18,899
That doesn't mean that.

95
00:04:18,899 --> 00:04:19,500
So, that's okay.

96
00:04:19,800 --> 00:04:23,100
But point being, I want to sort of isolate it in that way, because if

97
00:04:23,100 --> 00:04:25,600
we isolate it in that way, it means that I don't have to step through

98
00:04:25,600 --> 00:04:29,000
a bunch of unrelated assets that I don't care about in order to get to

99
00:04:29,000 --> 00:04:29,800
the ones that I'm trying to.

100
00:04:29,900 --> 00:04:32,200
To debug because obviously all the rest of the assets are working,

101
00:04:32,200 --> 00:04:34,900
just fine, we're looking at them in the game so we really don't need

102
00:04:34,900 --> 00:04:36,800
to think about that too much, right?

103
00:04:37,300 --> 00:04:39,000
They are not causing our problem.

104
00:04:39,400 --> 00:04:41,300
So what I want to do is kind of clip that out.

105
00:04:41,400 --> 00:04:44,500
I'm going to make thought asset file writer thing here, right?

106
00:04:44,500 --> 00:04:45,100
Like so.

107
00:04:46,600 --> 00:04:48,700
And then I'll go ahead and do a write.

108
00:04:48,700 --> 00:04:50,000
H a the right H.

109
00:04:50,000 --> 00:04:54,500
It's a will just write like, you know, test fonts or something like

110
00:04:54,500 --> 00:04:55,000
that.

111
00:04:55,400 --> 00:04:55,800
Yeah.

112
00:04:57,200 --> 00:05:02,800
And so then I think that will give us a an asset build process.

113
00:05:03,100 --> 00:05:06,300
Let's go ahead and actually run out here, right?

114
00:05:06,300 --> 00:05:11,000
You can see we have just three hhas at the moment, if I go ahead and

115
00:05:11,000 --> 00:05:12,800
run the test asset Builder.

116
00:05:13,600 --> 00:05:16,000
Now I've got 44, I should

117
00:05:16,100 --> 00:05:17,600
For and there you go.

118
00:05:17,600 --> 00:05:21,500
So you can kind of see those those there and it seems like everything

119
00:05:21,500 --> 00:05:24,900
was relatively what we would expect before the fonts were included in

120
00:05:24,900 --> 00:05:25,700
test two.

121
00:05:26,000 --> 00:05:28,100
So they were, it was a 7, MB file.

122
00:05:28,400 --> 00:05:31,200
We now have dropped that down to a little under 1, MB.

123
00:05:31,200 --> 00:05:34,400
And that other six megabytes that was missing has popped up here and

124
00:05:34,400 --> 00:05:35,100
test Fanta.

125
00:05:35,100 --> 00:05:37,500
Aha seems like totally rational thing to do.

126
00:05:37,500 --> 00:05:38,700
Everything looks fine so far.

127
00:05:41,700 --> 00:05:49,700
Okay, so let's go ahead and step into our test asset Builder looks

128
00:05:49,700 --> 00:05:52,300
like, actually there were already on that there, so that's good.

129
00:05:53,100 --> 00:05:57,800
Let me, I'm just gonna step through that font writing process, so that

130
00:05:57,800 --> 00:05:59,800
I can just verify to my

131
00:06:00,000 --> 00:06:03,800
Of the things are doing what I think they should be doing rather than

132
00:06:03,900 --> 00:06:06,000
just assuming that everything is working properly.

133
00:06:06,000 --> 00:06:09,000
Since we already know, there's at least one problem can't really hurt

134
00:06:09,000 --> 00:06:09,500
to check.

135
00:06:10,200 --> 00:06:11,700
So there's our code Point count.

136
00:06:11,700 --> 00:06:16,900
It's 127 again, the ASCII code that we're going up to is 126 so that's

137
00:06:16,900 --> 00:06:18,700
exactly what I would have expected.

138
00:06:19,100 --> 00:06:22,700
Here, we are allocating some space for that and that's not cleared out

139
00:06:22,700 --> 00:06:23,500
all at the moment.

140
00:06:23,500 --> 00:06:26,000
So it's just going to be a bunch of garbage.

141
00:06:26,200 --> 00:06:28,200
You can see that it's actually been initialized because we're in the

142
00:06:28,200 --> 00:06:29,400
debug a situation.

143
00:06:29,400 --> 00:06:29,800
Debug

144
00:06:30,000 --> 00:06:34,200
Malik in the C, runtime Library, Microsoft, C, runtime Library

145
00:06:34,600 --> 00:06:37,300
clearest to that C&D C&D, C&D C&D C&D.

146
00:06:37,800 --> 00:06:38,600
You can see it there.

147
00:06:39,000 --> 00:06:40,600
And so that's what we're looking at there.

148
00:06:41,200 --> 00:06:44,600
We're going to go ahead and load this aerial that ttf we're going to

149
00:06:44,600 --> 00:06:47,200
force it to be added already would have been added because it's in the

150
00:06:47,200 --> 00:06:49,200
windows font directory, but in case it hasn't been.

151
00:06:49,800 --> 00:06:53,700
So there's that height of 128, that's the height we're asking for.

152
00:06:53,700 --> 00:06:56,600
For this particular font eventually we're going to want to send that

153
00:06:56,600 --> 00:06:57,400
down here.

154
00:06:57,500 --> 00:06:58,000
That's something.

155
00:06:58,000 --> 00:06:59,800
We'll like I said, when we kind of go through and Polished,

156
00:07:00,000 --> 00:07:02,400
We're going to want to be able to ask for different size fonts, so

157
00:07:02,400 --> 00:07:04,700
we'll probably make that be something that you passed a load file.

158
00:07:04,700 --> 00:07:06,700
But for right now we're just sticking with one test case.

159
00:07:07,300 --> 00:07:11,100
This will go ahead and load that font out and we can see that we

160
00:07:11,100 --> 00:07:13,300
actually did get a font back, so that's good.

161
00:07:13,600 --> 00:07:15,400
So we know that low didn't fail.

162
00:07:15,700 --> 00:07:18,100
We're going to put that into the global font device context.

163
00:07:18,100 --> 00:07:18,900
Let's take a look at that.

164
00:07:18,900 --> 00:07:20,400
That looks like it is a valid context.

165
00:07:20,400 --> 00:07:21,000
Now as well.

166
00:07:21,400 --> 00:07:24,300
We're then going to get the text metrics Outlets, see about those test

167
00:07:24,300 --> 00:07:24,600
matches.

168
00:07:24,600 --> 00:07:27,100
Do they look like what we would expect and they do.

169
00:07:27,100 --> 00:07:29,800
There's that height of 128, the sn2.

170
00:07:29,900 --> 00:07:30,400
Decent.

171
00:07:30,400 --> 00:07:31,200
Look like they line up.

172
00:07:31,200 --> 00:07:33,800
So that looks like we got back our text metrics.

173
00:07:34,200 --> 00:07:35,800
No funny business there.

174
00:07:36,000 --> 00:07:36,900
The code Point count.

175
00:07:36,900 --> 00:07:39,100
Again, we're just storing it, so that's fine.

176
00:07:39,100 --> 00:07:39,700
There it is.

177
00:07:40,000 --> 00:07:41,100
The line Advanced.

178
00:07:42,400 --> 00:07:46,200
All we did was do that height plus the the external letting.

179
00:07:46,200 --> 00:07:49,200
So that's just going to be a little bit higher than the height which

180
00:07:49,200 --> 00:07:49,800
is what we see.

181
00:07:49,800 --> 00:07:53,500
So that's all fine, the bitmap IDS and the horizontal Advanced.

182
00:07:53,500 --> 00:07:57,300
We then allocate some arrays of sufficient size to hold, what we

183
00:07:57,300 --> 00:07:58,300
expect to be seeing there.

184
00:07:58,300 --> 00:07:59,600
So that's all good.

185
00:08:00,000 --> 00:08:02,800
Then we come back and now we've got our debug font.

186
00:08:02,800 --> 00:08:05,900
And so that's that's seems totally fine everything.

187
00:08:05,900 --> 00:08:08,900
There looked like exactly what we would have wanted to have happen.

188
00:08:08,900 --> 00:08:10,100
So nothing surprising.

189
00:08:10,100 --> 00:08:11,700
Nothing to be concerned about yet.

190
00:08:11,700 --> 00:08:15,300
In my opinion we're then going to go ahead and add an asset type of

191
00:08:15,300 --> 00:08:16,000
font.

192
00:08:16,200 --> 00:08:21,100
We Begin that asset type like so we add the font asset in here.

193
00:08:22,700 --> 00:08:26,400
Let's see what that ends up looking like here is the result of that

194
00:08:26,400 --> 00:08:26,900
asset.

195
00:08:26,900 --> 00:08:29,100
Add, it's got an ID of one.

196
00:08:29,100 --> 00:08:30,300
It's the first thing in the file.

197
00:08:30,300 --> 00:08:33,400
That's what we'd expect as there's nothing else in this file.

198
00:08:34,000 --> 00:08:36,799
We have the HHA which is the actual data.

199
00:08:36,799 --> 00:08:39,100
It's got the tag range which is what we would expect.

200
00:08:39,100 --> 00:08:41,299
Again, it's not a bitmap.

201
00:08:41,299 --> 00:08:42,100
It's not a sound.

202
00:08:42,100 --> 00:08:43,400
It is a font here.

203
00:08:43,400 --> 00:08:46,900
Is that font data and the font it looks exactly like what we wanted to

204
00:08:46,900 --> 00:08:47,300
look like.

205
00:08:47,300 --> 00:08:51,900
So that's good, the source itself points back to that font.

206
00:08:51,900 --> 00:08:52,400
It looks

207
00:08:52,500 --> 00:08:55,800
Like, yeah, there it is all good.

208
00:08:56,200 --> 00:08:59,900
So that seems totally kosher don't mind that at all.

209
00:09:01,400 --> 00:09:02,500
Totally happy with it.

210
00:09:02,700 --> 00:09:04,900
We're then going to go and start recording this font list.

211
00:09:08,300 --> 00:09:09,600
And those Fang clips, of course,

212
00:09:10,600 --> 00:09:14,700
Are the actual bitmap images of the characters in the font so we're

213
00:09:14,700 --> 00:09:15,800
going to Loop over each of those.

214
00:09:15,800 --> 00:09:20,800
We're going to go into add character asset which of course is going to

215
00:09:20,800 --> 00:09:22,200
add that character.

216
00:09:22,200 --> 00:09:26,700
This particular code Point, whatever the code point is to the sort of

217
00:09:26,700 --> 00:09:27,800
packing list.

218
00:09:27,800 --> 00:09:29,500
Basically, it's going to say, here's what those are.

219
00:09:29,500 --> 00:09:34,300
I don't know why are aligned percentage is set there.

220
00:09:34,300 --> 00:09:39,300
That's that's you know before we go any further, I'm just going to fix

221
00:09:39,300 --> 00:09:40,200
that character.

222
00:09:41,200 --> 00:09:41,900
Don't have that.

223
00:09:41,900 --> 00:09:42,800
That's a bug.

224
00:09:45,100 --> 00:09:49,000
I mean, it's not a bug because it just gets overwritten later, but it

225
00:09:49,000 --> 00:09:52,300
doesn't make any sense to make it appear as like, you know, someone

226
00:09:52,300 --> 00:09:54,500
was coming in reading this code afterwards, didn't know what was going

227
00:09:54,500 --> 00:09:54,600
on.

228
00:09:54,600 --> 00:09:56,000
They'd be like, I don't understand.

229
00:09:56,500 --> 00:09:57,800
And so we don't want that.

230
00:09:58,200 --> 00:10:01,400
So what we probably want to do is set these guys to just zero or

231
00:10:01,400 --> 00:10:03,900
something here and make a note that they get set later.

232
00:10:04,000 --> 00:10:11,700
Write something like note set later by extraction.

233
00:10:12,500 --> 00:10:13,000
Right.

234
00:10:15,600 --> 00:10:16,500
So that's all good.

235
00:10:22,200 --> 00:10:22,700
You know.

236
00:10:26,100 --> 00:10:28,900
I do wonder about one thing here, which is that?

237
00:10:28,900 --> 00:10:30,000
That's, that's okay.

238
00:10:30,000 --> 00:10:31,100
Because that gets written at the right time.

239
00:10:31,100 --> 00:10:33,200
I wanted to make sure that the wine percentage would actually get a

240
00:10:33,200 --> 00:10:35,500
written before it gets written to disk, but it will.

241
00:10:36,200 --> 00:10:41,000
All right, so anyway, we've got the asset Source here which is the

242
00:10:41,000 --> 00:10:44,400
font that it was coming from and the code point that it's supposed to

243
00:10:44,400 --> 00:10:46,300
extract those both look good.

244
00:10:46,300 --> 00:10:50,800
So let's resume, let's resume our debugging step so I'm going to just

245
00:10:50,800 --> 00:10:52,300
run us back up to there.

246
00:10:54,600 --> 00:10:55,500
Go through here.

247
00:10:55,500 --> 00:11:00,000
We add those guys in and now we've got another asset set up here.

248
00:11:00,000 --> 00:11:02,400
It's going to be a glyph, right?

249
00:11:02,800 --> 00:11:04,900
There's that font again it's pointing to the correct font.

250
00:11:04,900 --> 00:11:06,700
It's particular code point.

251
00:11:07,300 --> 00:11:12,800
The code Point 33 is that is that actually corrects that the first one

252
00:11:12,800 --> 00:11:13,500
probably.

253
00:11:14,100 --> 00:11:17,100
Yeah, it looks like that is the first one, so that's all good.

254
00:11:18,100 --> 00:11:21,500
And then we go ahead and record, whatever asset ID.

255
00:11:21,500 --> 00:11:23,900
We got back to is what we would expect.

256
00:11:24,000 --> 00:11:28,400
We stick that into the debug font bitmap IDs and we keep going.

257
00:11:28,400 --> 00:11:33,900
So if I was to look now at the debug font bitmap IDs and I were to

258
00:11:33,900 --> 00:11:39,100
just look at how many of them there actually, were right, like 128 or

259
00:11:39,100 --> 00:11:39,600
whatever.

260
00:11:41,500 --> 00:11:43,500
We can see them all there, right.

261
00:11:44,100 --> 00:11:47,400
And you can see in here that we've got a bunch of invalid values,

262
00:11:48,000 --> 00:11:51,400
stored in these places where we're not writing out characters, and

263
00:11:51,400 --> 00:11:53,800
that's something that I want to address a little bit later on because

264
00:11:53,800 --> 00:11:57,500
it later on, I want to Only Store the actual ranges that are used and

265
00:11:57,500 --> 00:11:59,800
so we're going to make that glyph look up, be a little bit more.

266
00:12:00,000 --> 00:12:00,900
Kate eventually.

267
00:12:01,300 --> 00:12:03,700
But for now I only care about the characters were actually using and

268
00:12:03,700 --> 00:12:04,300
here they are.

269
00:12:04,300 --> 00:12:06,600
So they're kind of just doing their thing and that's all good.

270
00:12:07,600 --> 00:12:11,700
So off we go, okay, we get to the end and now we're going to go ahead

271
00:12:11,700 --> 00:12:15,700
and write that ha that's a bunch of boilerplate stuff that we already

272
00:12:15,700 --> 00:12:16,600
know works.

273
00:12:16,600 --> 00:12:17,300
Just fine.

274
00:12:17,700 --> 00:12:21,700
Except now you know we want to check out the new parts we added.

275
00:12:21,700 --> 00:12:25,600
So the front part and then we want to double-check the glyph part as

276
00:12:25,600 --> 00:12:25,900
well.

277
00:12:25,900 --> 00:12:27,900
So here we are checking out the font part.

278
00:12:27,900 --> 00:12:29,700
Let's see if this appears to

279
00:12:30,000 --> 00:12:33,000
Write out the information in the manner that we would expect it to do.

280
00:12:33,400 --> 00:12:35,300
So here, is it pulling out the font?

281
00:12:35,300 --> 00:12:38,000
Does that font look like the font that we believed it to look like?

282
00:12:38,200 --> 00:12:38,500
Yep.

283
00:12:38,500 --> 00:12:40,800
That's all what we'd expect.

284
00:12:40,900 --> 00:12:44,300
Let's take a look at the that bitmap table as well, right?

285
00:12:44,300 --> 00:12:45,700
There's that bitmap table.

286
00:12:46,800 --> 00:12:47,100
Oops.

287
00:12:47,100 --> 00:12:50,000
Gotta go past the actual value that we were expecting to see.

288
00:12:51,400 --> 00:12:53,000
There are those those numbers are there.

289
00:12:53,400 --> 00:12:54,900
The horizontal advance?

290
00:12:56,200 --> 00:13:00,400
It would be harder for us to verify, certainly, but we could start, we

291
00:13:00,400 --> 00:13:06,200
could look at the, you know, a random thing out of it like, say this

292
00:13:06,200 --> 00:13:09,200
this value, something like that.

293
00:13:10,200 --> 00:13:13,400
You can see if those numbers made any sense that doesn't look very

294
00:13:13,400 --> 00:13:19,100
reassuring that as a horizontal Advanced number does not look great to

295
00:13:19,100 --> 00:13:19,400
me.

296
00:13:19,800 --> 00:13:23,900
I don't know how you feel about it that that looks problematic

297
00:13:24,500 --> 00:13:25,100
actually.

298
00:13:29,300 --> 00:13:30,400
Is there anything in here?

299
00:13:30,400 --> 00:13:31,900
Set to anything reasonable?

300
00:13:33,800 --> 00:13:39,200
So so I don't love the horizontal Advanced that's, that's not looking

301
00:13:39,200 --> 00:13:39,600
good.

302
00:13:39,900 --> 00:13:41,200
That's really not looking good.

303
00:13:41,500 --> 00:13:47,600
So I think what I'd like to do is oh I know where that is because it's

304
00:13:47,600 --> 00:13:48,400
not set yet.

305
00:13:49,100 --> 00:13:53,000
We in fact can't write out that until we actually load these with it

306
00:13:53,000 --> 00:13:56,800
Maps, right because the glyph bitmaps they're set in there.

307
00:13:58,100 --> 00:13:59,400
Hmm.

308
00:13:59,600 --> 00:14:02,500
All right, so that's a big problem for us.

309
00:14:04,000 --> 00:14:05,200
That's a big problem for us.

310
00:14:06,500 --> 00:14:08,100
Only for our testing purposes.

311
00:14:08,100 --> 00:14:11,200
When we actually do the kerning table extraction, it wouldn't be a

312
00:14:11,200 --> 00:14:12,300
problem for us at all.

313
00:14:12,900 --> 00:14:15,900
But what that means is this test that I was using was bogus because

314
00:14:15,900 --> 00:14:20,000
since the table won't be set, until after you start the glyphs, we

315
00:14:20,000 --> 00:14:21,700
can't do any sort of writing it there.

316
00:14:21,700 --> 00:14:25,700
So this is a meaningless thing that I put in there that was just dumb

317
00:14:25,800 --> 00:14:27,200
and so we don't want to do that.

318
00:14:27,400 --> 00:14:29,600
What we'd rather do is to do Casey.

319
00:14:31,300 --> 00:14:36,100
You know, eventually pull real kerning tables.

320
00:14:37,000 --> 00:14:41,200
And I guess what we want to do here is just go ahead and set all

321
00:14:41,200 --> 00:14:46,100
everything inside that table, right?

322
00:14:47,000 --> 00:14:48,100
The entire table.

323
00:14:50,200 --> 00:14:50,900
Like, so,

324
00:14:53,900 --> 00:14:54,400
There we go.

325
00:14:55,600 --> 00:14:59,800
So there's our code Point index, and there's are other code point.

326
00:15:00,000 --> 00:15:03,300
Next, we'll just set absolutely everything in there to just be

327
00:15:03,300 --> 00:15:07,500
whatever the text metric with of a character is, right.

328
00:15:07,900 --> 00:15:11,800
So that result text metric TM with I think was a vet, which is just,

329
00:15:11,900 --> 00:15:16,000
you know, some random one of those.

330
00:15:17,200 --> 00:15:19,900
It's just, it's just the maximum width of a character.

331
00:15:20,400 --> 00:15:21,700
We'll just stuff that in there.

332
00:15:22,100 --> 00:15:26,000
So that we know it's at least, a not a completely ridiculous value.

333
00:15:26,400 --> 00:15:28,400
And I'm not crazy about that being called result now.

334
00:15:28,400 --> 00:15:29,700
So I'm going to go ahead and call result,

335
00:15:30,000 --> 00:15:32,600
Aunt again, so that everything's kind of the same there.

336
00:15:33,900 --> 00:15:36,400
I thought there was a team with what was it called?

337
00:15:36,400 --> 00:15:38,300
There was like, a, something like that.

338
00:15:38,400 --> 00:15:41,000
That told me, sort of the width of a character's, Max width, or

339
00:15:41,000 --> 00:15:41,500
something.

340
00:15:44,300 --> 00:15:47,200
Average character with, there we go, Max character with.

341
00:15:47,200 --> 00:15:49,600
So, we'll just say Max character width for now.

342
00:15:50,500 --> 00:15:52,800
Since we're not going to do this, we're going to pull out something

343
00:15:52,800 --> 00:15:53,900
better later.

344
00:15:54,500 --> 00:15:56,900
So there is Max character with and we're sticking that in our

345
00:15:56,900 --> 00:15:57,800
horizontal Advanced.

346
00:15:57,800 --> 00:15:58,700
So that's all good.

347
00:16:00,000 --> 00:16:02,100
Alright, so there we go.

348
00:16:02,100 --> 00:16:03,300
We've already found one bug.

349
00:16:03,300 --> 00:16:04,000
That's good.

350
00:16:04,200 --> 00:16:05,200
Good bug hunting.

351
00:16:05,500 --> 00:16:06,200
I feel like.

352
00:16:06,800 --> 00:16:07,500
So, let's take a look.

353
00:16:07,500 --> 00:16:11,200
Now, again, at what we're about to write out and see, okay, so that's

354
00:16:11,200 --> 00:16:13,400
a much more reasonable value, right?

355
00:16:13,600 --> 00:16:16,500
That actually is something that makes some sense.

356
00:16:20,800 --> 00:16:21,300
Good.

357
00:16:22,200 --> 00:16:25,200
Okay, so we're writing out our code points or writing out our

358
00:16:25,200 --> 00:16:28,000
horizontal advance and now they both look actually more correct to me.

359
00:16:28,000 --> 00:16:30,600
So that's good off they go.

360
00:16:31,300 --> 00:16:35,200
And now, let's take a look at when we actually go and do.

361
00:16:35,900 --> 00:16:36,300
Okay.

362
00:16:36,300 --> 00:16:37,000
That's

363
00:16:38,900 --> 00:16:40,200
Doesn't make any sense to me.

364
00:16:40,600 --> 00:16:43,500
Why are there two fonts appearing in here?

365
00:16:44,000 --> 00:16:46,700
So I think we've got another bug here.

366
00:16:48,500 --> 00:16:50,200
Yep, that's not supposed to be font.

367
00:16:50,200 --> 00:16:51,500
That's supposed to be fog lifts.

368
00:16:51,600 --> 00:16:54,700
So we got, we got to bugs right off the bat.

369
00:16:55,200 --> 00:16:57,900
So this is good, this is pretty good.

370
00:16:57,900 --> 00:16:59,100
This is good bug hunting.

371
00:16:59,300 --> 00:17:02,600
I feel like we're we're not wasting our time with this.

372
00:17:02,600 --> 00:17:06,599
Stepping we are, we are actually doing something useful.

373
00:17:07,700 --> 00:17:10,099
All right, so we got font vs.

374
00:17:10,099 --> 00:17:12,099
You've got those two that was just a typo there.

375
00:17:12,900 --> 00:17:15,800
So when we add the character, we just want that to be fun glyph.

376
00:17:16,300 --> 00:17:17,800
And then we're better, right?

377
00:17:20,000 --> 00:17:22,900
Again, in a language with proper support, for discriminated, unions.

378
00:17:23,099 --> 00:17:25,000
It would have just given us an error on that.

379
00:17:26,200 --> 00:17:26,800
What you going to do?

380
00:17:27,000 --> 00:17:28,500
We're not in one of those languages.

381
00:17:29,500 --> 00:17:30,700
Woe Is Us.

382
00:17:31,700 --> 00:17:34,200
I need to get back to where I was stepping.

383
00:17:34,200 --> 00:17:38,700
I was stepping through here, like so, there's that first spot, we

384
00:17:38,700 --> 00:17:39,200
wrote out.

385
00:17:39,200 --> 00:17:39,400
Okay.

386
00:17:39,400 --> 00:17:41,400
Now, that's what I expecting now, we're just writing out.

387
00:17:41,400 --> 00:17:43,900
Glyphs we come in to write out this glyphs.

388
00:17:43,900 --> 00:17:46,700
We're going to select the the stuff into our device context, so that

389
00:17:46,700 --> 00:17:47,400
looks good.

390
00:17:47,500 --> 00:17:48,900
So, what we wanted, we Memphis

391
00:17:49,000 --> 00:17:52,600
Set the global font B which are also pointed properly.

392
00:17:52,600 --> 00:17:57,900
There we do kind of our our standard stuff here everything's good.

393
00:17:58,400 --> 00:17:59,800
Looks like we're writing everything out.

394
00:18:00,000 --> 00:18:02,500
But let's get to the end there.

395
00:18:03,300 --> 00:18:05,200
Get those aligned percentages set.

396
00:18:05,400 --> 00:18:07,100
All right, so this looks pretty good.

397
00:18:07,100 --> 00:18:10,800
Now I feel like this looks better and that's just the standard bitmap

398
00:18:10,800 --> 00:18:11,300
running path.

399
00:18:11,300 --> 00:18:14,600
So presumably that path is Not Unusual.

400
00:18:15,100 --> 00:18:20,900
All right, so yeah, how we doing now, there's our test fonts

401
00:18:24,300 --> 00:18:25,700
Seems like everything's fine.

402
00:18:25,700 --> 00:18:30,600
And you notice the size went up or actually, I guess went down because

403
00:18:30,600 --> 00:18:32,600
it didn't have to write out those huge tables.

404
00:18:32,600 --> 00:18:33,700
Many times I guess.

405
00:18:33,900 --> 00:18:37,500
I'm not sure why the size went down to be honest with you but it did

406
00:18:37,500 --> 00:18:38,100
go down.

407
00:18:38,200 --> 00:18:38,600
Probably.

408
00:18:38,600 --> 00:18:41,400
Yeah because it have to write out those tables every time, I don't

409
00:18:41,400 --> 00:18:41,600
know.

410
00:18:42,300 --> 00:18:48,400
Anyway so the size is now 1 Megabyte used to be six and we know we've

411
00:18:48,400 --> 00:18:49,300
removed some bugs.

412
00:18:49,900 --> 00:18:53,900
Let's go ahead and double check the run and see where we're at.

413
00:18:54,100 --> 00:18:57,500
We were still not loading but we might as well double-check and see.

414
00:18:59,500 --> 00:19:00,600
Yeah, still not loading.

415
00:19:01,300 --> 00:19:03,900
So now let's go over to our actual

416
00:19:05,000 --> 00:19:08,800
loading code and see what we're able to load, right?

417
00:19:08,800 --> 00:19:11,400
So see what comes out on the other end, right?

418
00:19:11,400 --> 00:19:15,400
So we're going to skip loading the font for the moment we're going to

419
00:19:15,400 --> 00:19:18,600
actually start by looking at just loading out of the file to begin

420
00:19:18,600 --> 00:19:18,900
with.

421
00:19:19,700 --> 00:19:24,500
And so I'm going to kind of Step through here and see when we do our

422
00:19:24,800 --> 00:19:26,700
offset or bitmap ID offset.

423
00:19:26,700 --> 00:19:30,000
That's really the only thing that happens in here especially so I just

424
00:19:30,000 --> 00:19:31,400
want to see what that's going to be.

425
00:19:32,000 --> 00:19:34,600
So when we hear, when we get to the first

426
00:19:35,100 --> 00:19:37,500
Glyph in the file, right?

427
00:19:37,500 --> 00:19:44,200
Or the, the array of glyphs in the file, that, that is the time when

428
00:19:44,200 --> 00:19:45,600
it has to snap that offset.

429
00:19:45,600 --> 00:19:49,600
So what it does here, that says, okay asset, count, 26, that's where

430
00:19:49,600 --> 00:19:50,900
we actually needed to be.

431
00:19:51,400 --> 00:19:55,300
It actually thought it was going to be indexed, to was where it would

432
00:19:55,300 --> 00:19:55,700
be.

433
00:19:55,900 --> 00:19:59,300
So, what we need to do is we need an offset, right of

434
00:20:01,300 --> 00:20:06,400
If it's 26 and to wean off set of negative 24, right?

435
00:20:07,000 --> 00:20:09,500
So let's see what we actually get as an offset.

436
00:20:11,300 --> 00:20:15,100
Barf on bitmaps that is positive 24.

437
00:20:15,700 --> 00:20:16,200
Yep.

438
00:20:16,600 --> 00:20:18,200
Did the subtraction the wrong way around?

439
00:20:18,700 --> 00:20:19,600
Oh he's good.

440
00:20:21,500 --> 00:20:24,800
Well, maybe try to make an excuse that, that was at the end of the

441
00:20:24,800 --> 00:20:25,200
stream.

442
00:20:25,200 --> 00:20:27,900
I was kind of just randomly trying to go fast or something, but

443
00:20:27,900 --> 00:20:29,400
honestly, I think that was just dumb.

444
00:20:29,500 --> 00:20:34,100
And so here's the reason why that was dumb, you always know what order

445
00:20:34,100 --> 00:20:36,800
your subtracts go in in terms of semantics.

446
00:20:37,600 --> 00:20:41,800
Semantically speaking, you know, because the thing that you're trying

447
00:20:41,800 --> 00:20:45,500
to go to comes first and the thing that you're coming from goes last

448
00:20:45,500 --> 00:20:46,900
semantically, you always know.

449
00:20:46,900 --> 00:20:47,400
That's true.

450
00:20:47,500 --> 00:20:49,400
You don't even have to think about the math semantically.

451
00:20:49,400 --> 00:20:50,400
You just know that's true.

452
00:20:50,700 --> 00:20:56,000
I'm not trying to go from the asset index that I had to the asset

453
00:20:56,000 --> 00:20:56,600
count.

454
00:20:56,700 --> 00:20:59,900
What I'm trying to do is get to the asset index from

455
00:21:00,000 --> 00:21:01,000
The asset cap, right?

456
00:21:01,000 --> 00:21:04,300
We have our current, our current, when we're trying to get back to

457
00:21:04,600 --> 00:21:07,200
what the what, the first asset index is right.

458
00:21:07,500 --> 00:21:09,700
So, that's what we actually want to happen.

459
00:21:09,700 --> 00:21:12,400
I think, let me think about that for a second to make sure that's

460
00:21:12,400 --> 00:21:12,700
true.

461
00:21:16,300 --> 00:21:17,900
You let no, I take it back.

462
00:21:19,300 --> 00:21:22,800
I think I wasn't stupid semantically that is that is what it is,

463
00:21:22,800 --> 00:21:23,200
right?

464
00:21:23,200 --> 00:21:24,700
We're trying to get to the asset count.

465
00:21:24,700 --> 00:21:27,100
From this first asset index, it's going to give us a listener to.

466
00:21:27,100 --> 00:21:30,700
We had 24, ya know, my past meet know.

467
00:21:30,800 --> 00:21:32,000
I absolve past me.

468
00:21:32,100 --> 00:21:33,500
He did it semantically, right?

469
00:21:33,700 --> 00:21:34,700
He's totally fine.

470
00:21:35,300 --> 00:21:35,800
Right.

471
00:21:36,000 --> 00:21:36,500
So that's good.

472
00:21:36,500 --> 00:21:37,400
So it's positive 24.

473
00:21:37,400 --> 00:21:39,400
That was just, that was actually just present.

474
00:21:39,400 --> 00:21:42,600
Me being stupid past, me was fine, present me.

475
00:21:42,700 --> 00:21:45,000
On the other hand could use some work, right?

476
00:21:45,700 --> 00:21:48,900
So anyway, see as you get older, you get one day.

477
00:21:49,300 --> 00:21:50,400
You get one day stupider.

478
00:21:51,100 --> 00:21:54,300
So anyway, asset, count for type and all this other stuff.

479
00:21:54,300 --> 00:21:58,500
Down here doesn't actually do anything related to the font stuff that

480
00:21:58,500 --> 00:21:59,100
I could think of.

481
00:21:59,100 --> 00:22:02,100
So I think really all we need to know is that that bitmap ID offset

482
00:22:02,100 --> 00:22:05,300
was fine because basically whatever the asset county is that's where

483
00:22:05,300 --> 00:22:08,000
the first one of these glyphs is going to get loaded.

484
00:22:08,100 --> 00:22:11,500
And so, adding 24 to the values that come back is actually, what I

485
00:22:11,500 --> 00:22:14,300
think we should have done, so that looks correct to me, right?

486
00:22:14,300 --> 00:22:15,800
That that actually looks correct to me.

487
00:22:16,500 --> 00:22:19,000
So what we do need to do now though is, we need to actually go

488
00:22:19,100 --> 00:22:22,100
Go to bug that load that font loading code, right?

489
00:22:24,000 --> 00:22:25,600
So where is that guy?

490
00:22:26,000 --> 00:22:28,300
The bitmap load sound load font.

491
00:22:28,700 --> 00:22:35,800
All right, so when we go to load font, okay, try that one more time.

492
00:22:38,500 --> 00:22:39,300
Load fonts.

493
00:22:42,100 --> 00:22:46,800
Well, apparently load font doesn't get called.

494
00:22:47,200 --> 00:22:52,500
So that doesn't sound good if we want our font to be loaded, I'm just

495
00:22:52,500 --> 00:22:55,200
going to go out on a limb here and say that we would need the font to

496
00:22:55,200 --> 00:22:56,300
actually be loaded.

497
00:22:57,500 --> 00:23:01,100
That would probably explain why it doesn't work.

498
00:23:03,300 --> 00:23:07,500
All right, we probably never had any code to actually get the font.

499
00:23:09,100 --> 00:23:09,900
Isn't that amazing?

500
00:23:10,400 --> 00:23:10,800
Okay.

501
00:23:11,600 --> 00:23:13,300
And we don't we just call get fine.

502
00:23:13,500 --> 00:23:15,100
Nobody ever triggers a load.

503
00:23:16,600 --> 00:23:20,200
Well so what we really want to do here is we want to go through our

504
00:23:20,200 --> 00:23:21,800
render group, right?

505
00:23:22,500 --> 00:23:25,700
So, what we want to do here is we want to go through our render group

506
00:23:25,700 --> 00:23:27,600
to use that font, right?

507
00:23:30,000 --> 00:23:32,400
And that's better too, because it's really the thing that should be

508
00:23:32,400 --> 00:23:35,100
passing that generation ID, right?

509
00:23:36,100 --> 00:23:42,800
So if we look at the render group, let's go in here and click our push

510
00:23:42,800 --> 00:23:46,000
bitmap call for example, right in the push.

511
00:23:46,300 --> 00:23:49,000
Call you can kind of see it doing its thing, right?

512
00:23:49,300 --> 00:23:53,500
And what we want to do there is do like a push font I guess, right?

513
00:23:54,200 --> 00:23:56,600
Where we basically say in this render group right now we're going to

514
00:23:56,600 --> 00:23:58,400
use this font, you know?

515
00:23:58,400 --> 00:23:59,400
Don't mind us.

516
00:24:00,000 --> 00:24:01,700
What's going to happen, right?

517
00:24:01,800 --> 00:24:04,700
So there's that font ID, there's the render group.

518
00:24:04,900 --> 00:24:07,700
We come through here and say the exact same thing.

519
00:24:07,700 --> 00:24:09,500
We were saying here, right?

520
00:24:09,500 --> 00:24:12,500
Although actually well no, I guess that's right.

521
00:24:12,800 --> 00:24:14,500
So we're going to grab that loaded font.

522
00:24:15,700 --> 00:24:17,500
We're going to return the loaded font.

523
00:24:22,600 --> 00:24:24,600
We're going to do a get bitmap call.

524
00:24:25,800 --> 00:24:26,400
That's not true.

525
00:24:26,800 --> 00:24:27,700
I'll get font call.

526
00:24:29,200 --> 00:24:31,800
To get the actual font out, right?

527
00:24:32,400 --> 00:24:35,400
We're going to see whether or not we have it.

528
00:24:36,000 --> 00:24:38,600
If we don't have it, we're going to load it.

529
00:24:39,800 --> 00:24:40,400
Right.

530
00:24:41,300 --> 00:24:46,000
And yeah, I guess we'll sort that it doesn't run in the background to

531
00:24:46,000 --> 00:24:46,500
make sure.

532
00:24:47,000 --> 00:24:49,100
But then assuming that the font is there,

533
00:24:55,100 --> 00:24:57,200
we're totally fine because we don't actually do any processing with

534
00:24:57,200 --> 00:24:58,200
it, right?

535
00:24:59,300 --> 00:25:07,900
So that seems fair that seems fair right load font identifier not

536
00:25:08,300 --> 00:25:13,300
found, okay?

537
00:25:16,600 --> 00:25:20,200
Let's see, load font immediate is immediate actually used.

538
00:25:21,700 --> 00:25:25,100
So immediate is actually used here but even though we don't really

539
00:25:25,100 --> 00:25:26,700
support it so we could have swore to meet.

540
00:25:26,900 --> 00:25:29,800
We should go unify these soon.

541
00:25:29,800 --> 00:25:31,000
There's too much boilerplate in here.

542
00:25:31,900 --> 00:25:34,400
We'll do that right after we finish loading this font someone to

543
00:25:34,400 --> 00:25:35,600
remind me if I don't do it.

544
00:25:38,000 --> 00:25:39,000
Assuming, all right.

545
00:25:39,000 --> 00:25:42,500
So load font, just needs to be brought up here.

546
00:25:42,500 --> 00:25:44,400
I think, right?

547
00:25:45,800 --> 00:25:49,100
Like so something like this.

548
00:25:53,400 --> 00:25:54,700
That should do it.

549
00:25:57,500 --> 00:25:59,900
And yeah.

550
00:26:02,600 --> 00:26:06,800
Need to change that to a font ID certainly.

551
00:26:07,800 --> 00:26:10,400
And this needs to be a font ID as well.

552
00:26:10,700 --> 00:26:18,500
Here we go, load font actually Returns the font that it loaded or

553
00:26:18,500 --> 00:26:19,200
something, what is it?

554
00:26:19,200 --> 00:26:21,700
No, cannot convert our 24-bit message on Tidy.

555
00:26:22,200 --> 00:26:23,200
That's a good point.

556
00:26:23,700 --> 00:26:24,200
We are

557
00:26:26,200 --> 00:26:28,800
So now let's try to make load font work.

558
00:26:29,400 --> 00:26:31,900
Feel like now load font should work right?

559
00:26:35,100 --> 00:26:40,000
oh, one last thing actually need to call would font I mean pushed on

560
00:26:43,300 --> 00:26:46,100
and now we can get rid of this as well, okay?

561
00:26:51,200 --> 00:26:52,400
Read endure grip.

562
00:26:52,700 --> 00:26:53,400
There we go.

563
00:26:54,800 --> 00:26:55,200
Okay.

564
00:26:58,000 --> 00:26:59,100
So, here we go.

565
00:27:00,000 --> 00:27:02,500
Are going to go ahead and load this stuff here.

566
00:27:03,600 --> 00:27:05,300
I guess we'll just let it load first.

567
00:27:05,800 --> 00:27:06,700
Hey look.

568
00:27:07,100 --> 00:27:07,700
There we go.

569
00:27:09,100 --> 00:27:10,000
So we're getting closer.

570
00:27:13,900 --> 00:27:16,700
That's, I can't expand a actually be the right amount of space for

571
00:27:16,700 --> 00:27:16,800
all.

572
00:27:16,800 --> 00:27:21,600
I know, I don't think it is, but at the moment since we have not set

573
00:27:21,600 --> 00:27:24,800
up the kerning tables properly, at least now we know we're a little

574
00:27:24,800 --> 00:27:27,700
bit closer there to what we wanted to do.

575
00:27:28,000 --> 00:27:31,500
So we're off to a reasonable start, so let's do that.

576
00:27:31,500 --> 00:27:35,600
Let's let's start going checking on the kerning stuff, just to see

577
00:27:35,600 --> 00:27:36,800
what's actually going down there.

578
00:27:37,600 --> 00:27:41,400
When we actually use the kerning values here when we do get line

579
00:27:41,400 --> 00:27:42,100
advance for

580
00:27:42,300 --> 00:27:43,100
Sorry, when we do.

581
00:27:45,700 --> 00:27:47,300
Get horizontal Advanced repair.

582
00:27:48,800 --> 00:27:52,800
I feel like our Advanced X.

583
00:27:53,000 --> 00:27:54,300
It's just added directly, right?

584
00:27:54,300 --> 00:27:57,200
So all we're multiplying by the only thing we're multiplying by his

585
00:27:57,200 --> 00:27:58,000
car scale.

586
00:27:58,900 --> 00:28:02,300
And car scale is just equal to font scale when there's no, when

587
00:28:02,300 --> 00:28:05,200
there's no control codes in there, right?

588
00:28:06,400 --> 00:28:13,200
So I feel like, as long as font scale is set to 1, then we're just,

589
00:28:13,500 --> 00:28:16,900
we're just using whatever those values are actually set to be.

590
00:28:17,900 --> 00:28:21,000
So what I think I'd like to do is I'd like to go to the test as a

591
00:28:21,000 --> 00:28:24,700
builder and actually pull out the actual kerning information that

592
00:28:24,700 --> 00:28:25,300
makes sense.

593
00:28:26,400 --> 00:28:31,200
Pull that out first and set that to what we believe to be correct.

594
00:28:31,300 --> 00:28:35,200
And then go back and check the values so that were actually working

595
00:28:35,200 --> 00:28:36,000
with something real.

596
00:28:36,500 --> 00:28:40,600
So instead of TM Max care with where we're setting the horizontal

597
00:28:40,600 --> 00:28:42,300
Advanced to just some random value.

598
00:28:42,300 --> 00:28:43,600
I would like to.

599
00:28:43,800 --> 00:28:47,200
Now start pulling out that font that font data

600
00:28:47,500 --> 00:28:47,900
Right?

601
00:28:49,000 --> 00:28:52,600
So in order to do that, it's a little wonky in Windows.

602
00:28:52,600 --> 00:28:53,700
If I remember correctly.

603
00:28:53,700 --> 00:28:55,500
It's that's not what I wanted.

604
00:28:56,500 --> 00:29:00,500
I wanted the functions is that not forthcoming?

605
00:29:01,100 --> 00:29:02,600
That's not forthcoming.

606
00:29:02,800 --> 00:29:03,300
The help.

607
00:29:03,300 --> 00:29:06,000
Used to be so good for Windows and then they made it web-based and

608
00:29:06,000 --> 00:29:08,400
it's awful in that way, that everything that go ends up being

609
00:29:08,400 --> 00:29:09,900
web-based is always awful.

610
00:29:12,200 --> 00:29:15,900
It used to have a nice sink table of contents over here and all these

611
00:29:15,900 --> 00:29:18,100
other good things and now it's just doesn't know that stuff.

612
00:29:18,100 --> 00:29:18,700
Is there anywhere?

613
00:29:21,200 --> 00:29:24,100
Anyway, I wanted to list of font functions.

614
00:29:24,100 --> 00:29:25,300
That's, that's it right there.

615
00:29:26,000 --> 00:29:27,600
So let's take a look at that.

616
00:29:27,900 --> 00:29:34,400
I think what we want to do is probably get the widths and then we want

617
00:29:34,400 --> 00:29:37,100
to get the kerning tables as well.

618
00:29:38,700 --> 00:29:41,000
So, where are those think?

619
00:29:41,000 --> 00:29:42,200
It's here?

620
00:29:43,600 --> 00:29:46,100
Let's take a look, right.

621
00:29:46,700 --> 00:29:49,300
So the get kerning pairs, which means the character

622
00:29:49,600 --> 00:29:53,100
Paris of the currently 65 specify device context, that's what we want.

623
00:29:54,000 --> 00:29:55,900
We say, how many of them we want?

624
00:29:55,900 --> 00:29:59,100
If the font has more than that, it returns an error.

625
00:29:59,200 --> 00:29:59,700
Okay.

626
00:30:00,500 --> 00:30:03,600
And then it just comes back with that kerning pair.

627
00:30:05,300 --> 00:30:09,400
Okay, does it ever tell us how many times he's referred as the number

628
00:30:09,400 --> 00:30:09,600
cream?

629
00:30:09,600 --> 00:30:10,000
Press return.

630
00:30:10,000 --> 00:30:12,200
2500 awesome.

631
00:30:12,400 --> 00:30:14,700
So how do we know how many it has?

632
00:30:17,700 --> 00:30:20,700
How many how do we know how many kerning pairs?

633
00:30:20,700 --> 00:30:23,400
It even has you got to tell us that.

634
00:30:23,400 --> 00:30:29,900
I feel like you should tell us that because we want to get them.

635
00:30:29,900 --> 00:30:31,700
All right?

636
00:30:31,700 --> 00:30:33,100
I mean I want to know.

637
00:30:33,500 --> 00:30:38,300
It seems pretty pretty obvious that I would want to know, does it come

638
00:30:38,300 --> 00:30:39,500
in the text metrics?

639
00:30:42,100 --> 00:30:47,800
Let's see, I don't see it in here.

640
00:30:50,300 --> 00:30:50,700
I don't know.

641
00:30:50,700 --> 00:30:53,600
So does it say, let's see in, get creating Paris, is it?

642
00:30:53,600 --> 00:30:54,100
Tell me.

643
00:30:57,000 --> 00:30:57,400
Let's see.

644
00:30:57,400 --> 00:31:00,100
There must contain at least a nice structure specified by the end.

645
00:31:00,100 --> 00:31:02,800
If this parameter is no, the function, returns a total number of,

646
00:31:02,800 --> 00:31:04,900
okay, so I actually can get it.

647
00:31:04,900 --> 00:31:07,900
I just have to pass null first, right?

648
00:31:08,300 --> 00:31:10,800
Okay, so let's start doing this, right?

649
00:31:10,800 --> 00:31:13,500
I need to know how many it's going to give me.

650
00:31:13,700 --> 00:31:17,400
So first, I call it with completely bogus values, right?

651
00:31:18,500 --> 00:31:25,300
I just say the, HDC which I have my Global thought context.

652
00:31:25,300 --> 00:31:26,600
It's already been selected in there.

653
00:31:27,200 --> 00:31:30,200
I need to send the number of students don't know, and I need to send a

654
00:31:30,200 --> 00:31:31,900
null value so I can get it back.

655
00:31:32,000 --> 00:31:35,200
So, this is the kerning pair count, right?

656
00:31:35,400 --> 00:31:39,000
Then I need to allocate space to store that kerning table, right?

657
00:31:39,000 --> 00:31:41,700
So I need to do kerning pair

658
00:31:42,800 --> 00:31:45,600
And is get creating pairs in a w.

659
00:31:45,600 --> 00:31:46,500
Kind of a guy.

660
00:31:46,600 --> 00:31:47,300
I wonder.

661
00:31:48,200 --> 00:31:52,100
I'm going to just do it that way first, even though, I don't know

662
00:31:52,100 --> 00:31:53,300
that, that it actually matters.

663
00:31:55,800 --> 00:32:00,000
But it'll give me an error if it's not if it's not an aw kind of

664
00:32:00,000 --> 00:32:00,500
function.

665
00:32:01,100 --> 00:32:01,600
All right.

666
00:32:02,900 --> 00:32:09,200
So the kerning pair count that's now how many of those I need.

667
00:32:09,500 --> 00:32:12,300
So here is my current a like hurting pairs.

668
00:32:12,300 --> 00:32:16,200
I'll just allocate right.

669
00:32:19,300 --> 00:32:21,400
However, many of those told me I needed

670
00:32:24,600 --> 00:32:26,200
and then I will free them.

671
00:32:28,000 --> 00:32:29,000
After we're done using.

672
00:32:30,300 --> 00:32:32,800
Right after that, I can just get them.

673
00:32:35,300 --> 00:32:40,000
So there's the cunning pair count, there's the crowning Paris.

674
00:32:41,200 --> 00:32:42,300
Get all the kerning pairs.

675
00:32:44,800 --> 00:32:46,000
And then I can Loop over them.

676
00:32:47,500 --> 00:32:47,900
Right.

677
00:32:49,600 --> 00:32:53,000
Okay, so then I just say d word, kerning

678
00:32:54,600 --> 00:32:55,700
pair index.

679
00:32:57,200 --> 00:32:58,500
and for each of those,

680
00:33:02,900 --> 00:33:04,600
I will do something.

681
00:33:06,900 --> 00:33:10,200
But what that something is, is going to depend on what the screening

682
00:33:10,200 --> 00:33:11,700
pair thing returns, right?

683
00:33:12,300 --> 00:33:15,100
So here's the current pair it, screening Paris plus the index.

684
00:33:16,800 --> 00:33:19,400
And now we need to know what is that evident, right?

685
00:33:21,400 --> 00:33:21,800
Okay.

686
00:33:22,500 --> 00:33:24,300
Oh, Windows.

687
00:33:24,400 --> 00:33:29,800
16, bits of you got to love people who don't use utf-8, right?

688
00:33:29,800 --> 00:33:31,800
When we 16 bits of code point but that's fine.

689
00:33:32,100 --> 00:33:35,500
All right, so we have the first and the second, right?

690
00:33:35,500 --> 00:33:39,800
We have the, I current amount which is how many pixels it needs to be

691
00:33:40,000 --> 00:33:41,400
to be adjusted by.

692
00:33:41,400 --> 00:33:43,600
But what's it relative to the amount?

693
00:33:43,600 --> 00:33:46,900
This pair will be current if they appear side by side in the same font

694
00:33:46,900 --> 00:33:49,300
and size this value is typically negative because parent usually

695
00:33:49,300 --> 00:33:51,000
results in sugars, being set more tightly.

696
00:33:51,200 --> 00:33:52,000
Normal device.

697
00:33:52,000 --> 00:33:52,800
That's a lot of junior size.

698
00:33:52,800 --> 00:33:54,800
Depends, the current mapping mode, right?

699
00:33:55,300 --> 00:33:58,300
So what we need to know is how far we would advance for a particular

700
00:33:58,300 --> 00:34:00,600
character, first, right?

701
00:34:01,300 --> 00:34:02,700
Which we don't actually know yet.

702
00:34:02,700 --> 00:34:05,800
And so what we need to do, right, is we need to initialize this table

703
00:34:06,500 --> 00:34:08,500
to be correct in that sense.

704
00:34:09,100 --> 00:34:12,699
So yeah.

705
00:34:14,300 --> 00:34:16,500
A little rough anyway.

706
00:34:18,800 --> 00:34:22,699
What we want to do in here now is we want to go ahead and yank that.

707
00:34:22,900 --> 00:34:25,300
Assuming that the pair is in range, right?

708
00:34:25,600 --> 00:34:27,600
So if the the first thing in the pair,

709
00:34:30,000 --> 00:34:30,699
Right.

710
00:34:32,600 --> 00:34:33,900
And the second thing in the pear.

711
00:34:35,400 --> 00:34:36,500
Are both in range.

712
00:34:36,699 --> 00:34:41,300
So if this is less than whatever, my font code Point, count is, and

713
00:34:41,300 --> 00:34:42,800
this is less than whatever my code Point.

714
00:34:42,800 --> 00:34:46,300
Count is, then we're good to go, right?

715
00:34:51,000 --> 00:34:53,300
First second good point Camp.

716
00:34:54,199 --> 00:34:59,000
So assuming that the ranges are good, then we are good to go.

717
00:34:59,400 --> 00:35:03,000
So then we would just use the first one this way, right?

718
00:35:03,000 --> 00:35:05,900
Because that's the code point and this is the other code Point index.

719
00:35:06,400 --> 00:35:10,400
Like so we would then know that, whatever that adjustment is.

720
00:35:10,500 --> 00:35:11,700
I current him out.

721
00:35:13,300 --> 00:35:14,700
We would subtract

722
00:35:16,400 --> 00:35:17,800
That right.

723
00:35:18,400 --> 00:35:21,800
So, basically, what this does is, it says, okay, for every pair which

724
00:35:22,300 --> 00:35:25,200
which is saying it, Windows is saying, I need to adjust the kerning on

725
00:35:25,200 --> 00:35:29,300
these two characters for every pair will look up where that pair is on

726
00:35:29,300 --> 00:35:29,800
our table.

727
00:35:29,800 --> 00:35:33,600
And we'll subtract well, I guess it said it would be negative so we

728
00:35:33,600 --> 00:35:36,700
don't you subtract we just add the current value and if it's negative,

729
00:35:36,700 --> 00:35:38,600
it will, you know, adjust it, right?

730
00:35:39,200 --> 00:35:41,900
And so, what we need to do in order to finish this, that's really all

731
00:35:41,900 --> 00:35:43,200
we need to do to extract the Korean Paris.

732
00:35:43,200 --> 00:35:43,900
We need to finish.

733
00:35:43,900 --> 00:35:45,200
This is actually initialize the

734
00:35:45,300 --> 00:35:48,500
Table with something reasonable, right?

735
00:35:48,500 --> 00:35:53,500
We need to initialize the table with how far Windows would think we

736
00:35:53,500 --> 00:35:56,100
would advance for that character in the absence of any specific

737
00:35:56,100 --> 00:35:59,500
kerning information because all of the kerning is given relative

738
00:36:00,300 --> 00:36:02,200
To a default advance.

739
00:36:02,400 --> 00:36:04,000
So the question is, what is that?

740
00:36:04,000 --> 00:36:06,700
Default advance and I have absolutely no idea.

741
00:36:06,900 --> 00:36:11,700
I think, oops, it might be.

742
00:36:14,300 --> 00:36:18,800
It might be in here, right?

743
00:36:19,400 --> 00:36:22,600
The widths of consecutive characters and specified range from the

744
00:36:22,600 --> 00:36:23,700
current font.

745
00:36:25,900 --> 00:36:26,400
Oops.

746
00:36:26,400 --> 00:36:27,500
Maybe not get care.

747
00:36:27,500 --> 00:36:29,100
ABC with, there we go.

748
00:36:32,000 --> 00:36:32,400
Okay.

749
00:36:33,500 --> 00:36:34,700
So what would that give us?

750
00:36:34,800 --> 00:36:36,800
That gives us ABC.

751
00:36:36,800 --> 00:36:38,600
ABC, be a BCC.

752
00:36:38,700 --> 00:36:41,700
I feel like those could have been named a little bit better, guys.

753
00:36:41,900 --> 00:36:43,500
I feel like they could have been

754
00:36:44,900 --> 00:36:48,600
Okay, the a spacing is the distance to add the current position before

755
00:36:48,600 --> 00:36:53,700
drawing the character glyph, the be spacing, is the width of the drawn

756
00:36:53,700 --> 00:36:57,600
portion of the character glyph, and the Sea spacing is the distance to

757
00:36:57,600 --> 00:37:01,000
add to the current position to provide white space to the right of the

758
00:37:01,000 --> 00:37:01,800
character glyph.

759
00:37:02,200 --> 00:37:06,900
Okay, so basically what we would want to do is add all three of those

760
00:37:06,900 --> 00:37:07,700
together.

761
00:37:09,300 --> 00:37:10,100
Presumably.

762
00:37:10,700 --> 00:37:15,100
And then since there is a if there is an empty space spacing thing

763
00:37:15,100 --> 00:37:20,900
going on there, then that means our ABC a value technically we want to

764
00:37:20,900 --> 00:37:27,400
get that in the glyph thing and move the alignment Point backwards by

765
00:37:27,400 --> 00:37:29,600
that spacing, right?

766
00:37:30,600 --> 00:37:32,600
So we actually want to do two things with this.

767
00:37:35,000 --> 00:37:38,500
If I'm reading that correctly, write what that says to me.

768
00:37:41,000 --> 00:37:45,800
what that says to me, is this given me the data like,

769
00:37:50,800 --> 00:37:52,400
It's given me the data like this.

770
00:38:01,600 --> 00:38:03,600
A b c.

771
00:38:04,100 --> 00:38:08,900
I might have called this pre post and width or something, but they

772
00:38:08,900 --> 00:38:11,700
thought that ABC was the coolest thing to do.

773
00:38:11,800 --> 00:38:14,500
Especially when you're in the middle of a font system where a b and c

774
00:38:14,500 --> 00:38:20,700
means something man, way to go anyway, let's leave that annoyance

775
00:38:20,700 --> 00:38:23,900
aside for the moment and just say let's go ahead and use this.

776
00:38:24,100 --> 00:38:27,200
So when we go ahead and print one of these out, we're going to assume

777
00:38:27,200 --> 00:38:29,600
that the Abe the a with is baked into the character.

778
00:38:29,600 --> 00:38:30,800
So it's out of position.

779
00:38:30,800 --> 00:38:31,200
It's going to

780
00:38:31,400 --> 00:38:33,000
That a with over, that's what's going to put it.

781
00:38:33,000 --> 00:38:35,900
So we want it we want to sum these together, right?

782
00:38:36,000 --> 00:38:39,200
We want to sum the a with the be with and the sea with together

783
00:38:39,200 --> 00:38:41,300
because that's the total amount of advancement that there's going to

784
00:38:41,300 --> 00:38:42,400
be right.

785
00:38:43,000 --> 00:38:44,600
So I'm just going to go ahead and give this a shot.

786
00:38:44,600 --> 00:38:47,800
I'm going to say, maybe it'll work, maybe it won't.

787
00:38:47,900 --> 00:38:49,100
We'll find out in a second.

788
00:38:49,200 --> 00:38:53,200
So I'm going to say go ahead and get care ABC, widths, here, we're

789
00:38:53,200 --> 00:38:56,900
going to again, use exactly the same process that we did before.

790
00:38:57,100 --> 00:38:59,100
We'll get the global device context.

791
00:39:00,000 --> 00:39:03,500
We'll use the First Care last care, which is going to be the code

792
00:39:03,500 --> 00:39:05,300
Point Count Their right.

793
00:39:05,700 --> 00:39:09,400
And then we will go ahead and take that l p.

794
00:39:09,400 --> 00:39:14,700
ABC thing which is going to be a series of these, a b, c structs,

795
00:39:14,700 --> 00:39:15,300
right?

796
00:39:15,700 --> 00:39:17,900
So these are our ABCs now.

797
00:39:17,900 --> 00:39:21,800
I know my ABC's next time.

798
00:39:21,800 --> 00:39:24,100
Won't you sing with me?

799
00:39:24,200 --> 00:39:26,900
Okay, so there's our ABCs, what?

800
00:39:26,900 --> 00:39:29,800
I don't know is how you find out how many of those are, alright.

801
00:39:30,000 --> 00:39:31,600
No, you don't, you specify how many there are?

802
00:39:31,600 --> 00:39:32,200
So we're fine.

803
00:39:32,200 --> 00:39:33,100
So we're totally fine.

804
00:39:33,800 --> 00:39:37,200
So all we need to do is actually allocate some space for this and then

805
00:39:37,200 --> 00:39:40,500
get rid of it at the end, which is pretty simple, right?

806
00:39:40,900 --> 00:39:41,700
So here we go.

807
00:39:41,700 --> 00:39:46,200
Here's our ABCs what we go ahead and Malik these guys, right?

808
00:39:46,200 --> 00:39:49,000
Same way we were before size of ABC.

809
00:39:50,600 --> 00:39:52,000
Time's the code Point count.

810
00:39:52,900 --> 00:39:53,700
So that's that

811
00:39:54,900 --> 00:39:57,500
And then we get rid of it later once we're in here.

812
00:39:57,600 --> 00:40:02,000
What we need to do is set this to, you know, basically whatever

813
00:40:02,100 --> 00:40:05,800
whatever the the actual width value that we want it to be is, right?

814
00:40:06,400 --> 00:40:10,200
So for every code point we're just going to sum up whatever its ABC

815
00:40:10,200 --> 00:40:11,800
set was, right?

816
00:40:12,000 --> 00:40:17,200
So here is you know this ABC is just going to be whatever the code

817
00:40:17,200 --> 00:40:17,800
point is.

818
00:40:17,900 --> 00:40:21,000
We're just going to Flat set the entire table to start with, for that

819
00:40:21,000 --> 00:40:21,600
character.

820
00:40:21,700 --> 00:40:24,300
We're set the entire thing to just be whatever that

821
00:40:24,500 --> 00:40:25,800
Is Right?

822
00:40:26,500 --> 00:40:30,300
Which again was just ABC, ABC be

823
00:40:34,300 --> 00:40:34,800
Like so.

824
00:40:36,700 --> 00:40:37,300
Right?

825
00:40:38,500 --> 00:40:40,800
So that should just about do it.

826
00:40:41,400 --> 00:40:43,100
I'm going to convert these to float.

827
00:40:43,100 --> 00:40:44,800
Since that's the way, we're storing our table.

828
00:40:46,200 --> 00:40:50,000
And now I'm going to run it and see if we can get a table.

829
00:40:50,000 --> 00:40:53,900
That's a little more representative of something, resembling anything,

830
00:40:54,300 --> 00:40:58,000
or we could just crash, because crashing is also awesome.

831
00:40:58,200 --> 00:40:59,400
Everyone loves crashing.

832
00:41:00,200 --> 00:41:01,900
So that's good too, right?

833
00:41:03,600 --> 00:41:04,300
Not exactly sure.

834
00:41:04,300 --> 00:41:06,800
What the crash problem was there.

835
00:41:07,900 --> 00:41:08,400
Oh wait.

836
00:41:08,400 --> 00:41:09,100
Is this?

837
00:41:09,600 --> 00:41:15,300
I want that to be a w though so that's actually W and w.

838
00:41:16,900 --> 00:41:17,700
Okay, there we go.

839
00:41:18,700 --> 00:41:24,900
And I don't know, are these ABCs are the ABCs A W thing as well?

840
00:41:24,900 --> 00:41:25,700
I don't know.

841
00:41:25,700 --> 00:41:28,500
So what I'm going to do is I'm going to go look because that would

842
00:41:28,500 --> 00:41:31,900
also cause us to be allocating like two little memory or whatever,

843
00:41:31,900 --> 00:41:32,400
right.

844
00:41:33,200 --> 00:41:35,200
So I'm going to go ahead to do we have it.

845
00:41:35,200 --> 00:41:37,000
SDK SDK director on here.

846
00:41:37,300 --> 00:41:42,700
Microsoft sdks Windows, right?

847
00:41:45,500 --> 00:41:49,800
Let's see here, I don't know where the stuff is.

848
00:41:50,900 --> 00:41:52,200
That doesn't look useful.

849
00:41:56,000 --> 00:41:57,200
That looks a little more useful.

850
00:41:57,400 --> 00:41:58,300
Let's find out.

851
00:41:59,100 --> 00:41:59,800
Let's find out.

852
00:42:00,200 --> 00:42:02,400
Work earning pair is starters.

853
00:42:05,000 --> 00:42:08,200
I should probably show you guys how to do this with Dev Studio,

854
00:42:08,200 --> 00:42:11,400
actually, because that can be actually a little more handy.

855
00:42:16,100 --> 00:42:20,000
But all right, at the moment I'm just gonna take a look at her.

856
00:42:20,000 --> 00:42:26,800
So kerning pair does not have a two different kinds.

857
00:42:27,200 --> 00:42:28,800
Oh, there's an ABC float.

858
00:42:29,200 --> 00:42:29,900
Well, excuse me.

859
00:42:32,400 --> 00:42:35,800
So it looks like it looks like we're good to go.

860
00:42:36,000 --> 00:42:38,700
So get kerning pairs W.

861
00:42:38,700 --> 00:42:39,600
What's the difference?

862
00:42:39,800 --> 00:42:41,500
These two functions don't even

863
00:42:42,500 --> 00:42:43,500
They take exactly thing.

864
00:42:43,500 --> 00:42:45,800
Why do they even have two different ones?

865
00:42:46,300 --> 00:42:48,700
That's kind of weird, right?

866
00:42:51,100 --> 00:42:52,900
Where's the get text ABC?

867
00:42:52,900 --> 00:42:54,900
Where its function.

868
00:42:55,000 --> 00:42:56,000
Let's take a look at that.

869
00:42:56,100 --> 00:42:59,300
Just want to make sure test asset folder.

870
00:43:00,700 --> 00:43:02,300
Let's see here.

871
00:43:02,400 --> 00:43:03,700
Get Carrie, we see risk.

872
00:43:03,700 --> 00:43:09,100
It care is ABC wits and there are two of those but they again, also

873
00:43:09,100 --> 00:43:10,000
take exact same thing.

874
00:43:10,000 --> 00:43:10,800
I don't even understand.

875
00:43:10,800 --> 00:43:11,900
I wonder what?

876
00:43:13,100 --> 00:43:17,500
I wonder what the point of that is not know why they broke those up.

877
00:43:18,900 --> 00:43:24,100
Huh, well yeah, anyway no matter.

878
00:43:24,100 --> 00:43:27,100
Let's go to bug the crash anyway, but that's just a little weird.

879
00:43:28,000 --> 00:43:28,400
Not sure.

880
00:43:28,400 --> 00:43:31,300
I understand the reasoning behind that.

881
00:43:33,200 --> 00:43:33,700
All right.

882
00:43:34,900 --> 00:43:35,600
So, what's?

883
00:43:35,600 --> 00:43:36,100
Let's see.

884
00:43:36,100 --> 00:43:37,500
We got our ABCs there.

885
00:43:37,500 --> 00:43:39,900
We get our ABC with that seems fine.

886
00:43:40,200 --> 00:43:47,500
We go through each of them in order there and compute our setting

887
00:43:47,500 --> 00:43:48,100
values.

888
00:43:48,300 --> 00:43:49,800
Let's go ahead and jump forward.

889
00:43:53,600 --> 00:43:54,600
Interesting.

890
00:43:55,200 --> 00:43:57,900
So it believes us to be writing off the end.

891
00:43:57,900 --> 00:43:59,500
There is that actually true?

892
00:44:02,800 --> 00:44:04,900
What exactly what did we do wrong?

893
00:44:05,500 --> 00:44:07,200
We're allocating code Point.

894
00:44:07,200 --> 00:44:11,300
Count, squared's worth of space for our horizontal advance.

895
00:44:14,100 --> 00:44:15,300
I feel like,

896
00:44:18,300 --> 00:44:19,500
That should have been fine.

897
00:44:19,500 --> 00:44:19,900
No.

898
00:44:24,100 --> 00:44:26,700
That doesn't seem busted.

899
00:44:26,800 --> 00:44:30,000
That would suggest that this guy is potentially over writing the

900
00:44:30,000 --> 00:44:30,600
memory.

901
00:44:32,200 --> 00:44:33,100
See if that's true.

902
00:44:34,200 --> 00:44:35,100
That is true.

903
00:44:36,100 --> 00:44:40,400
So, this guy is expecting me to give him more memory than I gave him.

904
00:44:42,400 --> 00:44:44,200
Oops, I should probably make that be consistent there.

905
00:44:46,300 --> 00:44:47,900
Not that those values differ at all.

906
00:44:48,900 --> 00:44:50,100
So that's interesting.

907
00:44:50,600 --> 00:44:53,300
So this guy is writing off the end.

908
00:44:53,800 --> 00:44:55,700
Why is he writing off the end?

909
00:44:56,900 --> 00:44:59,400
We're allocating code Point counts worth of

910
00:45:00,000 --> 00:45:00,500
He's?

911
00:45:03,200 --> 00:45:07,000
Which seems like what he would want, right?

912
00:45:10,800 --> 00:45:13,400
Is there anything in the docks about this?

913
00:45:17,600 --> 00:45:21,100
A pointer to an array of ABC structures that receives the character

914
00:45:21,100 --> 00:45:22,300
within logical units.

915
00:45:22,300 --> 00:45:24,500
This array must contain at least as many ABC circus.

916
00:45:24,500 --> 00:45:27,300
As there are characters in The Range specified by, you Frisk are and

917
00:45:27,300 --> 00:45:28,700
you'll ask are parameters.

918
00:45:32,600 --> 00:45:34,300
It's last care.

919
00:45:34,600 --> 00:45:35,800
Not count.

920
00:45:38,800 --> 00:45:46,000
So technically, this is minus one because it's actually using that as

921
00:45:46,000 --> 00:45:47,400
the actual last care.

922
00:45:48,800 --> 00:45:54,000
Okay, well, don't know why they did that but I guess that was just the

923
00:45:54,000 --> 00:45:54,500
way it goes.

924
00:45:55,200 --> 00:45:58,100
Usually I do one pass last count, specifically for that reason.

925
00:45:59,100 --> 00:46:03,000
But so let's go over here and see where we're at now with the kerning

926
00:46:03,000 --> 00:46:04,400
table, that's not entirely.

927
00:46:04,400 --> 00:46:07,700
Bonkers potentially assuming we extracted it correctly, which I don't

928
00:46:07,700 --> 00:46:08,400
know if we did.

929
00:46:09,500 --> 00:46:12,200
Alright, so that looks a lot nicer.

930
00:46:12,200 --> 00:46:13,500
It's still not quite right.

931
00:46:13,600 --> 00:46:15,500
We got a couple of things we want to do.

932
00:46:15,500 --> 00:46:18,300
First of all, we have to address that.

933
00:46:18,500 --> 00:46:19,600
That giant space there.

934
00:46:19,600 --> 00:46:22,600
And there's a reason for that that we should talk about in a second,

935
00:46:24,400 --> 00:46:26,600
but talking about this.

936
00:46:27,000 --> 00:46:30,800
What I would like to say is we need to do that thing with the ABC with

937
00:46:30,800 --> 00:46:31,800
that, I said, we need to do.

938
00:46:31,800 --> 00:46:34,800
We need to bake that a width in first.

939
00:46:35,400 --> 00:46:40,400
So so let's go ahead and do that because, yeah, we are drawing the

940
00:46:40,400 --> 00:46:43,300
character glyph right at our, you know, wherever we're trying to

941
00:46:43,300 --> 00:46:46,100
Output the font, but they basically want to include some additional

942
00:46:46,100 --> 00:46:48,100
spacing there if that makes any sense.

943
00:46:48,400 --> 00:46:48,900
Right.

944
00:46:53,100 --> 00:46:55,600
So we need to start getting a little more serious about that.

945
00:46:55,600 --> 00:47:01,100
So, in test that set builder when we extract that glyph, we need to be

946
00:47:01,100 --> 00:47:02,100
a little bit more.

947
00:47:02,400 --> 00:47:02,800
Sort of.

948
00:47:04,000 --> 00:47:06,300
We need to be a little more precise about that, right?

949
00:47:06,900 --> 00:47:10,000
So what we need to do here is we need to do get care, ABC, widths

950
00:47:11,200 --> 00:47:13,800
For this particular code point, right?

951
00:47:14,000 --> 00:47:16,200
We don't actually need to allocate anything for this.

952
00:47:18,000 --> 00:47:24,600
We can just say, we want the ABC for this guy and just just extract

953
00:47:24,600 --> 00:47:24,900
one.

954
00:47:25,200 --> 00:47:29,100
So be just the code Point itself, right?

955
00:47:29,400 --> 00:47:32,600
And then pass just a pointer to that struck, since it only needs to

956
00:47:32,600 --> 00:47:36,900
get one out so we can just go ahead and select the font into our

957
00:47:36,900 --> 00:47:38,100
device context.

958
00:47:38,200 --> 00:47:40,900
Go ahead and get the care ABC with so now we have them.

959
00:47:41,400 --> 00:47:43,700
And now we know what that precept is going to be.

960
00:47:44,300 --> 00:47:49,200
So we come in here and we do that font drawing and so that's all good.

961
00:47:50,000 --> 00:47:53,700
And then what we need to do is when we come down to the end and we're

962
00:47:53,700 --> 00:47:55,800
going to set up that align percentage, right?

963
00:47:56,400 --> 00:47:59,100
We need to to change the way this works.

964
00:47:59,300 --> 00:47:59,900
Instead of

965
00:48:00,000 --> 00:48:04,600
One pixel in we're actually one pixel in plus, whatever the ABC with

966
00:48:04,600 --> 00:48:09,100
is, is where where you would actually draw it, which means that the

967
00:48:09,100 --> 00:48:12,000
alignment needs to be back from there, right?

968
00:48:13,300 --> 00:48:16,300
See if I can show you what I mean by that, right?

969
00:48:17,400 --> 00:48:20,300
So what's going to happen is we're going to have a particular location

970
00:48:20,300 --> 00:48:22,300
where we want to draw the font, right?

971
00:48:22,500 --> 00:48:25,700
This is the X Le x coordinate where we're gonna try to trying to draw

972
00:48:25,700 --> 00:48:26,200
the font.

973
00:48:26,500 --> 00:48:28,200
We're going to draw the glyph.

974
00:48:28,200 --> 00:48:29,800
Windows is specifying a

975
00:48:30,000 --> 00:48:35,700
Sort of a spacing, that's where that supposed to be, right, and that

976
00:48:35,700 --> 00:48:38,500
spacing, you're supposed to move.

977
00:48:38,500 --> 00:48:41,300
You're supposed to add before you start drawing the glyph.

978
00:48:41,300 --> 00:48:43,500
You're supposed to add that spacing, right?

979
00:48:44,000 --> 00:48:45,900
So that's that a that a with.

980
00:48:46,800 --> 00:48:51,600
So what we want to do is make it so that the alignment point is

981
00:48:51,600 --> 00:48:54,600
actually moved backwards from where it normally would be, which is

982
00:48:54,600 --> 00:48:59,800
here move backwards by that - A so that then when we draw it here,

983
00:49:00,000 --> 00:49:03,300
Just automatically gets moved forward properly, right?

984
00:49:04,300 --> 00:49:07,700
So we're just taking all of that into that into the the alignment

985
00:49:07,700 --> 00:49:10,200
percentage there right now.

986
00:49:10,200 --> 00:49:14,400
There's another way we probably could do this, which maybe we will see

987
00:49:14,400 --> 00:49:16,400
about second, might be a more robust way to do it.

988
00:49:16,400 --> 00:49:19,000
I'm not sure which one is technically more, correct.

989
00:49:19,000 --> 00:49:22,500
Probably, the way that I'm going to say in a second but let's just do

990
00:49:22,500 --> 00:49:23,400
it.

991
00:49:23,400 --> 00:49:24,800
Let's just do this for now.

992
00:49:26,500 --> 00:49:27,200
For starters.

993
00:49:28,400 --> 00:49:32,200
Okay, so let's build our assets assets have been built.

994
00:49:32,700 --> 00:49:36,700
Let's go ahead and run our game and so now the kerning starting to

995
00:49:36,700 --> 00:49:37,800
look pretty good.

996
00:49:37,900 --> 00:49:38,500
Right?

997
00:49:39,500 --> 00:49:42,900
It's not, you know, the world's best kerning but at the end of the day

998
00:49:42,900 --> 00:49:45,400
Windows has awful kerning on all of its fonts.

999
00:49:45,400 --> 00:49:49,400
I mean they're absent, the kerning is absolutely garbage on windows so

1000
00:49:49,400 --> 00:49:51,200
that may actually be correct.

1001
00:49:51,200 --> 00:49:55,200
I don't know what I would like to do is take a look just to see how

1002
00:49:55,200 --> 00:49:56,000
far off we are.

1003
00:49:56,700 --> 00:50:00,200
To see what would happen if I actually just picked this font that we

1004
00:50:00,200 --> 00:50:03,600
are using, which is Ariel right.

1005
00:50:03,700 --> 00:50:06,300
And I just said, yeah, give me aerial 128.

1006
00:50:06,300 --> 00:50:07,600
Let's see what that looks like.

1007
00:50:08,800 --> 00:50:09,700
And and see.

1008
00:50:09,700 --> 00:50:12,700
That's a little, well course, that's 128 points.

1009
00:50:13,300 --> 00:50:17,100
So what we actually need to do is find roughly what that's like in

1010
00:50:17,100 --> 00:50:17,700
pixels.

1011
00:50:18,400 --> 00:50:19,200
So let's see.

1012
00:50:19,300 --> 00:50:21,500
96 something like that?

1013
00:50:21,900 --> 00:50:23,300
Maybe there we go.

1014
00:50:24,200 --> 00:50:25,900
So I'm just going to take a look at what

1015
00:50:26,100 --> 00:50:32,300
Thinks the kerning should be by just trying to Ballpark it to be

1016
00:50:32,500 --> 00:50:35,700
relatively close, and then we'll see how are creating lines up to what

1017
00:50:35,700 --> 00:50:39,000
in theory is supposed to be the kerning?

1018
00:50:40,600 --> 00:50:41,100
All right.

1019
00:50:48,400 --> 00:50:54,600
Okay, so it looks like our kerning is well okay let's let's try to

1020
00:50:54,600 --> 00:50:59,800
size that so that it's as close as possible to the right size first.

1021
00:51:04,100 --> 00:51:06,100
That looks pretty close.

1022
00:51:07,800 --> 00:51:08,300
To me.

1023
00:51:09,200 --> 00:51:09,600
Yeah.

1024
00:51:11,100 --> 00:51:12,400
That looks pretty close.

1025
00:51:14,000 --> 00:51:17,600
So, if we take a look at what's going on there, amusingly enough.

1026
00:51:17,600 --> 00:51:20,800
Honestly, they're kerning looks like worse than our kerning, even

1027
00:51:20,800 --> 00:51:23,200
though we're pulling our kerning from their tables.

1028
00:51:24,200 --> 00:51:29,600
So like we're not quite exactly extracting the curtain correctly but

1029
00:51:29,800 --> 00:51:32,200
because Windows kerning is so darn bad.

1030
00:51:32,200 --> 00:51:36,500
You can't actually tell if that makes sense.

1031
00:51:36,900 --> 00:51:39,700
Let's try one with more egregious, kerning errors in.

1032
00:51:39,700 --> 00:51:40,700
It rendered group 2.

1033
00:51:40,900 --> 00:51:41,500
Output.

1034
00:51:45,600 --> 00:51:50,200
again just awful I mean that kerning is just terrible just straight-up

1035
00:51:50,200 --> 00:51:52,300
horrid but that's

1036
00:51:53,300 --> 00:51:55,100
That's what it says to do.

1037
00:51:55,600 --> 00:51:59,000
So we're pretty darn close to having correct support for the kerning

1038
00:51:59,000 --> 00:52:00,800
of the fonts proportionally.

1039
00:52:00,800 --> 00:52:01,400
Speaking,

1040
00:52:03,700 --> 00:52:08,400
and then we'll have to go find some fonts on the internet that we can

1041
00:52:08,400 --> 00:52:09,000
use.

1042
00:52:10,500 --> 00:52:16,200
Because oh my God, the kerning on this font is is just plain horrid.

1043
00:52:17,800 --> 00:52:21,300
You know, maybe segoe is better but I don't know if they, I don't know

1044
00:52:21,300 --> 00:52:23,400
if they shipped to go until Windows 8.

1045
00:52:23,400 --> 00:52:26,300
I know they had real font ographers working on so go doesn't mean they

1046
00:52:26,500 --> 00:52:27,700
didn't mess it up I suppose.

1047
00:52:27,700 --> 00:52:33,200
But let's see, let's see how the house to go condensed looks kerning

1048
00:52:33,200 --> 00:52:33,700
wise.

1049
00:52:34,400 --> 00:52:40,300
Oh, who just what is, what nobody wants to see that.

1050
00:52:41,800 --> 00:52:43,400
That's not a thing.

1051
00:52:48,000 --> 00:52:48,600
God.

1052
00:53:00,900 --> 00:53:02,000
Totally deflating.

1053
00:53:05,300 --> 00:53:05,900
Anyway.

1054
00:53:07,100 --> 00:53:08,100
Windows fonts.

1055
00:53:09,900 --> 00:53:11,200
Make a font Agra for cry.

1056
00:53:11,600 --> 00:53:12,500
Alright, anyway,

1057
00:53:13,900 --> 00:53:16,600
What I was going to say and we've got a few minutes left on the

1058
00:53:16,600 --> 00:53:17,100
stream.

1059
00:53:18,600 --> 00:53:20,900
We did what we wanted to do today, which is get that working.

1060
00:53:20,900 --> 00:53:21,300
But

1061
00:53:24,400 --> 00:53:24,700
Yeah.

1062
00:53:24,700 --> 00:53:27,700
That man just seeing how bad that kerning is, just gets me depressed.

1063
00:53:27,700 --> 00:53:29,900
It's like you had one job, right?

1064
00:53:29,900 --> 00:53:33,200
All you had to do was make it to the letters, didn't look absolutely

1065
00:53:33,200 --> 00:53:33,600
horrid.

1066
00:53:33,600 --> 00:53:36,700
When they were lined up in like the couldn't even do that anyway.

1067
00:53:37,400 --> 00:53:42,600
So all right putting that aside putting the absolutely grotesque and I

1068
00:53:42,600 --> 00:53:44,500
don't mean grotesque in the font sense.

1069
00:53:44,500 --> 00:53:46,900
I don't mean hoop.

1070
00:53:47,400 --> 00:53:52,000
I don't mean this protest which is fine right?

1071
00:53:52,200 --> 00:53:53,200
Grotesque is

1072
00:53:53,300 --> 00:53:57,300
Ali-A totally fine thing to call your font.

1073
00:53:57,300 --> 00:53:58,500
I don't mean that grotesque.

1074
00:53:58,500 --> 00:53:59,700
I mean this

1075
00:54:00,000 --> 00:54:01,900
Task, right?

1076
00:54:02,000 --> 00:54:03,800
I mean the grotesque which is like

1077
00:54:07,200 --> 00:54:10,600
which is commonly a repulsively ugly or distorted, which is what I

1078
00:54:10,600 --> 00:54:13,000
actually mean as far as the kerning is concerned.

1079
00:54:13,400 --> 00:54:15,700
So anyway, moving on from there.

1080
00:54:17,300 --> 00:54:20,200
The reason that I was saying is I don't think we're quite extracting,

1081
00:54:20,200 --> 00:54:23,200
the current incorrectly which is kind of a hilarious joke at this

1082
00:54:23,200 --> 00:54:25,600
point because extracting the current incorrectly from Windows means

1083
00:54:25,600 --> 00:54:26,600
that your kerning is awful.

1084
00:54:26,600 --> 00:54:28,500
But leaving that aside for now.

1085
00:54:29,400 --> 00:54:32,500
If we were going to extract the current incorrectly, what I mean to

1086
00:54:32,500 --> 00:54:37,000
say here is that when we do load glyph bitmap, what we're doing is

1087
00:54:37,000 --> 00:54:41,300
we're finding the bounding box of the font glyph ourselves right but

1088
00:54:41,300 --> 00:54:44,400
the bounding box of the font glyph is going to be offset from where

1089
00:54:44,400 --> 00:54:46,800
Windows thinks it was drawing the van, right?

1090
00:54:47,200 --> 00:54:51,600
Windows were telling it to draw the font x equals zero, right?

1091
00:54:51,600 --> 00:54:52,700
We're telling it to draw out there.

1092
00:54:52,700 --> 00:54:57,000
It's already included that a width, I suspect, right?

1093
00:54:57,000 --> 00:55:00,300
So it's already will do the pre step it'll draw the a here, or

1094
00:55:00,300 --> 00:55:00,700
whatever.

1095
00:55:00,700 --> 00:55:01,900
It's going to draw it, right?

1096
00:55:02,200 --> 00:55:08,000
And then we will go through and find that bounds ourselves, right?

1097
00:55:08,000 --> 00:55:09,900
Then we're adding the a with back in.

1098
00:55:10,500 --> 00:55:14,100
However, there's something that this won't capture if the font lift

1099
00:55:14,100 --> 00:55:16,900
itself includes spacing that's

1100
00:55:17,000 --> 00:55:18,100
Not in the a with.

1101
00:55:18,100 --> 00:55:21,000
So let's say, for example, we did that same process.

1102
00:55:21,100 --> 00:55:23,200
So, here's where we were told to draw the font.

1103
00:55:23,300 --> 00:55:27,800
Here is the a spacing, but now the glyph itself just starts over here

1104
00:55:28,300 --> 00:55:31,000
because we're searching for The leftmost Edge manually.

1105
00:55:31,000 --> 00:55:34,800
We will then clip out that space effectively, right?

1106
00:55:34,800 --> 00:55:36,300
Because we're only preserving this space.

1107
00:55:36,600 --> 00:55:40,500
So what I was thinking is maybe we'll just take the distance between

1108
00:55:40,600 --> 00:55:44,200
the edge of the glyph, The Edge, where we were, where we told it to

1109
00:55:44,200 --> 00:55:46,000
draw and where it actually Drew

1110
00:55:46,800 --> 00:55:47,300
Right?

1111
00:55:48,300 --> 00:55:51,800
We could try taking that and seeing what that actually is.

1112
00:55:51,800 --> 00:55:55,100
And we may have to write, we may want to do something a little fancier

1113
00:55:55,100 --> 00:55:55,400
there.

1114
00:55:56,300 --> 00:55:59,400
Let's take a look at what function were calling, and what it's thinks

1115
00:55:59,400 --> 00:56:01,900
that would do when we actually output text that way.

1116
00:56:01,900 --> 00:56:02,900
Right text out.

1117
00:56:02,900 --> 00:56:04,400
W is what's going to do that.

1118
00:56:05,400 --> 00:56:09,200
And so that, that was the thing that I wanted to kind of find out.

1119
00:56:09,500 --> 00:56:10,300
So let's see here.

1120
00:56:11,100 --> 00:56:12,400
So texts that W.

1121
00:56:12,400 --> 00:56:14,100
How will that actually output our fonts?

1122
00:56:14,500 --> 00:56:16,100
I don't know, it'll actually tell us.

1123
00:56:16,700 --> 00:56:17,500
Let's see here.

1124
00:56:21,300 --> 00:56:23,200
Interpreters of the reference point, depends on the context, line,

1125
00:56:23,200 --> 00:56:25,200
mode, and application can retrieve this mode bikes on.

1126
00:56:25,200 --> 00:56:27,500
Get text-align, can alter this mobile phone.

1127
00:56:27,500 --> 00:56:30,300
I said, text-align, you can use the following values for text

1128
00:56:30,300 --> 00:56:31,100
alignment.

1129
00:56:31,300 --> 00:56:32,300
Only one flag, me chosen.

1130
00:56:32,300 --> 00:56:35,500
So Baseline bottom top Center left, right?

1131
00:56:35,600 --> 00:56:39,600
No eight dates, EP RTL reading or update, CP.

1132
00:56:41,300 --> 00:56:45,400
So the Revit will be the left edge of the bounding rectangle, right?

1133
00:56:46,600 --> 00:56:48,600
Which I'm assuming is this

1134
00:56:49,700 --> 00:56:52,700
Yeah, of the bounding rectangle so I assume it will put it there.

1135
00:56:53,400 --> 00:56:55,900
I assume it will just put it there, right?

1136
00:56:56,800 --> 00:56:57,900
So let's let's

1137
00:57:01,700 --> 00:57:02,900
Let's just try.

1138
00:57:02,900 --> 00:57:04,700
We should probably do a structured test for this.

1139
00:57:04,700 --> 00:57:08,500
Maybe we should do this tomorrow because I think we should do a more

1140
00:57:08,700 --> 00:57:14,700
constructive test and see what happens because I'm just, I'm just not

1141
00:57:14,700 --> 00:57:16,100
sure what it's actually doing.

1142
00:57:16,900 --> 00:57:19,900
And so if we come in here to load glyph bitmap, when we actually get

1143
00:57:19,900 --> 00:57:24,700
the, the information out in the ABC with, okay, so there's an ABC with

1144
00:57:24,700 --> 00:57:25,100
of 10.

1145
00:57:25,100 --> 00:57:30,000
Actually, I just, I just lucked out basically, it's ten 10 nine,

1146
00:57:30,400 --> 00:57:30,900
right?

1147
00:57:32,100 --> 00:57:37,100
Because I looked out what I want to see now at a spacing an a spacing

1148
00:57:37,100 --> 00:57:41,700
of 10, when we actually do the text out, and we see where we, where we

1149
00:57:41,800 --> 00:57:44,100
hid, our Min, where was the Min?

1150
00:57:44,100 --> 00:57:46,800
It was at 10, so it's pretty clear.

1151
00:57:46,800 --> 00:57:50,700
It seems that, that, that a width is included, right?

1152
00:57:50,900 --> 00:57:53,100
So that's what that's the information I needed to know.

1153
00:57:53,700 --> 00:57:57,700
So what that means to me is, we could actually get rid of this concept

1154
00:57:57,700 --> 00:57:58,500
altogether.

1155
00:57:58,500 --> 00:58:01,300
If we wanted to, we could really just say, we don't need that.

1156
00:58:01,400 --> 00:58:02,700
That anymore, right?

1157
00:58:03,100 --> 00:58:06,800
And then when we come down here, what we do is we'd say, whatever that

1158
00:58:06,800 --> 00:58:09,200
minhwa X was right.

1159
00:58:09,700 --> 00:58:17,400
The Min X, oops up here, where we do that, right, that Min ex tells us

1160
00:58:17,400 --> 00:58:19,300
how far over we need to step.

1161
00:58:19,400 --> 00:58:22,900
That tells us what the alignment Point actually was right.

1162
00:58:24,700 --> 00:58:29,700
So, let's just, let's just try that and see how we do there.

1163
00:58:31,300 --> 00:58:33,300
Again, I don't know how much we really care.

1164
00:58:33,600 --> 00:58:36,500
Well, if we can go get some non Windows fonts basically because

1165
00:58:36,500 --> 00:58:39,700
presumably windows isn't loading truetype fonts wrong.

1166
00:58:39,800 --> 00:58:43,000
I mean, maybe they do that to, who knows nothing would surprise me at

1167
00:58:43,000 --> 00:58:47,000
this point but assuming that they're actually loading the troop a

1168
00:58:47,000 --> 00:58:47,500
place correctly.

1169
00:58:47,500 --> 00:58:51,300
Then if we just go get some non Windows fonts and load those, we could

1170
00:58:51,300 --> 00:58:55,700
maybe find some fonts that had proper kerning information in them,

1171
00:58:56,000 --> 00:58:56,400
right?

1172
00:58:57,400 --> 00:58:58,500
Who knows, maybe.

1173
00:58:58,500 --> 00:58:59,300
Maybe not.

1174
00:58:59,900 --> 00:59:00,900
So let's I should probably

1175
00:59:01,100 --> 00:59:03,900
I've gotten rid of my notepad that was a little bit premature.

1176
00:59:03,900 --> 00:59:04,800
I admit that

1177
00:59:07,100 --> 00:59:09,300
game update and render.

1178
00:59:10,300 --> 00:59:11,600
There's that font.

1179
00:59:12,300 --> 00:59:14,200
Let us switch it back to Ariel.

1180
00:59:15,700 --> 00:59:22,400
Like so here we go regular and take a look at what we see.

1181
00:59:23,900 --> 00:59:26,900
Okay, that's

1182
00:59:28,000 --> 00:59:35,700
That looks pretty good in most places were clipping a little bit, do

1183
00:59:35,700 --> 00:59:39,600
see that clipping there on the a, so some clipping on the A and that

1184
00:59:39,600 --> 00:59:44,900
looks like because it moves backwards, you can even see the insertion

1185
00:59:44,900 --> 00:59:45,600
point there.

1186
00:59:45,900 --> 00:59:48,800
You can see that the a moves backwards, can you see?

1187
00:59:48,800 --> 00:59:49,900
Can you see that?

1188
00:59:49,900 --> 00:59:51,200
Don't know if you guys can see that.

1189
00:59:51,400 --> 00:59:55,200
I don't know if we have zoom in, I feel like I got zoom in working at

1190
00:59:55,200 --> 00:59:56,000
some point.

1191
00:59:57,600 --> 00:59:59,600
Maybe I didn't go well.

1192
01:00:00,000 --> 01:00:00,800
Couple do it.

1193
01:00:04,300 --> 01:00:05,500
So can you see that?

1194
01:00:06,000 --> 01:00:08,200
How there's the a there, right?

1195
01:00:08,300 --> 01:00:10,500
And you see how were clipping off a little bit?

1196
01:00:10,900 --> 01:00:12,800
We'll check out where the insertion point is.

1197
01:00:12,800 --> 01:00:14,300
It's right at the clip point.

1198
01:00:14,400 --> 01:00:15,000
Right.

1199
01:00:16,400 --> 01:00:19,400
I don't know if I can actually I guess I can't visualize that but it's

1200
01:00:19,600 --> 01:00:23,900
so I think what's happening is when we do our text out it's actually

1201
01:00:23,900 --> 01:00:27,100
clipping on the text out when we're probably never seeing that.

1202
01:00:27,800 --> 01:00:31,100
So I feel like we should also do an additional thing.

1203
01:00:33,600 --> 01:00:34,100
Right?

1204
01:00:34,100 --> 01:00:37,800
When we do that packing, we should give Windows the ability to move

1205
01:00:37,800 --> 01:00:41,100
the font backwards to some degree, right?

1206
01:00:41,100 --> 01:00:45,100
So, we would want to have something in here that was like, you know,

1207
01:00:45,800 --> 01:00:51,800
Free Step X and just let it go, 128 characters in or something like

1208
01:00:51,800 --> 01:00:52,200
this.

1209
01:00:52,500 --> 01:00:56,100
So that if it wants to move backwards, it could I don't know if it

1210
01:00:56,100 --> 01:00:56,600
will

1211
01:00:59,300 --> 01:01:00,900
But I'm just going to try it.

1212
01:01:00,900 --> 01:01:03,600
I'm just going to see if I can get it to do that, right?

1213
01:01:03,800 --> 01:01:07,200
And so, then we do text our Exile, just say, hey man, go ahead, you

1214
01:01:07,200 --> 01:01:08,700
can go forwards there, right?

1215
01:01:08,900 --> 01:01:12,300
And then when we actually look in, cure will say, okay.

1216
01:01:12,300 --> 01:01:18,700
It's whatever the Min ex was is going to be, it's actually, it's

1217
01:01:18,700 --> 01:01:20,600
actually not the the Minix, right?

1218
01:01:20,600 --> 01:01:22,400
It's going to be the pre step, whatever.

1219
01:01:22,400 --> 01:01:23,200
That was.

1220
01:01:23,500 --> 01:01:28,800
We have to subtract that out from that from that Min X, right?

1221
01:01:28,800 --> 01:01:29,000
So if the

1222
01:01:29,200 --> 01:01:30,900
Next is further than the pre step.

1223
01:01:30,900 --> 01:01:32,600
That's fine, right?

1224
01:01:33,500 --> 01:01:34,400
If that makes sense.

1225
01:01:36,000 --> 01:01:38,000
So, yeah, I think that's correct.

1226
01:01:38,200 --> 01:01:39,200
That may still be wrong.

1227
01:01:39,200 --> 01:01:41,500
I will have to draw that out, and we're kind of out of time.

1228
01:01:41,500 --> 01:01:46,100
So I'll have to draw that out tomorrow and make sure we're actually

1229
01:01:46,100 --> 01:01:47,300
doing something reasonable there.

1230
01:01:47,300 --> 01:01:48,600
But yeah.

1231
01:01:48,900 --> 01:01:49,400
Oh dear.

1232
01:01:50,900 --> 01:01:51,800
That's not so good.

1233
01:01:54,300 --> 01:01:55,200
What happened there?

1234
01:01:58,000 --> 01:01:58,900
Oh, right.

1235
01:01:59,300 --> 01:02:03,300
The reason for that is we also have to expand our search radius by

1236
01:02:03,300 --> 01:02:04,100
that much.

1237
01:02:04,200 --> 01:02:07,500
So when we do our bound with whatever the size c x that comes back,

1238
01:02:07,800 --> 01:02:09,700
has to include that pre step X in it.

1239
01:02:09,700 --> 01:02:12,400
Otherwise we won't ever look right.

1240
01:02:13,200 --> 01:02:14,800
We should probably well,

1241
01:02:17,200 --> 01:02:19,700
So since is the asset Packer, we could just look over the whole thing

1242
01:02:19,700 --> 01:02:21,500
and be like doesn't matter right?

1243
01:02:23,100 --> 01:02:26,900
Well that was weird look like a drip properly and then it drew it

1244
01:02:26,900 --> 01:02:27,400
wrong.

1245
01:02:30,200 --> 01:02:31,000
Was that just me?

1246
01:02:32,600 --> 01:02:33,400
Did you see that?

1247
01:02:35,700 --> 01:02:38,400
Oh, some of them are wrong in some of them are right, is what it

1248
01:02:38,400 --> 01:02:39,200
actually looks like.

1249
01:02:40,200 --> 01:02:44,400
So, yeah, I did the priest up there, which is good.

1250
01:02:44,700 --> 01:02:46,700
So I assume that I didn't mess anything up.

1251
01:02:46,700 --> 01:02:48,300
If I just set it back to zero, right?

1252
01:02:48,300 --> 01:02:49,000
We'd still be fine.

1253
01:02:49,000 --> 01:02:51,600
So maybe I'll leave that, as tomorrow's task to get that working.

1254
01:02:53,700 --> 01:02:56,500
Yeah, I don't want to go any further into the Q&A.

1255
01:02:56,900 --> 01:02:59,500
So let's just assume we have some work to do.

1256
01:03:00,200 --> 01:03:05,300
In getting that that current extraction just right but basically I

1257
01:03:05,300 --> 01:03:08,200
don't think that should be too much else and then we're more or less

1258
01:03:08,200 --> 01:03:11,600
done with Van extraction and we just want to go do some things with

1259
01:03:11,600 --> 01:03:13,500
font ranges if that makes sense.

1260
01:03:14,600 --> 01:03:15,800
So let's go to the Q&A.

1261
01:03:17,600 --> 01:03:20,100
If you've got questions, ask them now.

1262
01:03:20,100 --> 01:03:24,800
Put a queue coal in front of them and I will try to answer them.

1263
01:03:38,100 --> 01:03:40,100
Robbie, could you use another text sample?

1264
01:03:40,100 --> 01:03:42,800
Like a vaw etat?

1265
01:03:46,000 --> 01:03:48,900
Yeah, I mean we could do whatever we want, right?

1266
01:03:54,000 --> 01:03:57,200
Where am I text line?

1267
01:04:03,000 --> 01:04:08,000
You wanted a vaw a Tha right?

1268
01:04:12,100 --> 01:04:14,300
Oops, didn't mean to do that.

1269
01:04:22,400 --> 01:04:23,200
Oh wow.

1270
01:04:24,400 --> 01:04:25,500
That's crazy.

1271
01:04:25,600 --> 01:04:27,100
I didn't know that about Ariel.

1272
01:04:28,200 --> 01:04:32,700
But I guess that is that is that my mess up.

1273
01:04:33,800 --> 01:04:35,400
Or is that really how it looks?

1274
01:04:39,600 --> 01:04:41,000
That's really how it looks.

1275
01:04:42,000 --> 01:04:43,000
Whoa.

1276
01:04:43,400 --> 01:04:46,200
So the slant on the W is different than the slant on.

1277
01:04:46,200 --> 01:04:49,200
The a is that true of helvetica?

1278
01:04:52,300 --> 01:04:54,100
Don't think I have a helvetic on here.

1279
01:04:55,300 --> 01:04:57,200
Ariel is based off of helvetica.

1280
01:04:57,600 --> 01:04:59,800
It's a really lousy version of helvetica.

1281
01:05:04,300 --> 01:05:05,900
I don't have a helvetica, I'm here.

1282
01:05:07,700 --> 01:05:08,500
Helvetica.

1283
01:05:13,500 --> 01:05:16,000
tubby, you a

1284
01:05:17,500 --> 01:05:18,500
Do they line up?

1285
01:05:22,000 --> 01:05:23,000
Copy image.

1286
01:05:24,200 --> 01:05:24,700
Gimp.

1287
01:05:27,100 --> 01:05:27,600
Kim Kim.

1288
01:05:27,600 --> 01:05:28,200
Kim Kim.

1289
01:05:29,600 --> 01:05:30,400
Come on gimp.

1290
01:05:33,500 --> 01:05:34,400
You can do it.

1291
01:05:38,000 --> 01:05:46,400
All right, so if one were to do so one word to grab you,

1292
01:05:48,200 --> 01:05:49,500
And paste you in here.

1293
01:05:56,000 --> 01:05:56,500
Okay.

1294
01:05:59,000 --> 01:05:59,800
That's how it.

1295
01:06:00,000 --> 01:06:01,400
We was in helvetica.

1296
01:06:02,300 --> 01:06:03,100
WoW.

1297
01:06:05,000 --> 01:06:06,100
Did not know that.

1298
01:06:07,700 --> 01:06:08,600
Know it now.

1299
01:06:10,700 --> 01:06:11,900
Learn something new everyday.

1300
01:06:22,800 --> 01:06:25,600
BK buggy, how do you know so much about fonts?

1301
01:06:27,500 --> 01:06:32,600
I don't really know that much about fonts but obviously since you

1302
01:06:32,600 --> 01:06:37,900
know, I work with Graphics, you know, a fair bit of my job is working

1303
01:06:37,900 --> 01:06:38,600
with Graphics.

1304
01:06:38,600 --> 01:06:42,300
You kind of want to know enough about fonts to make sure that you're

1305
01:06:42,300 --> 01:06:47,100
not doing anything, really stupid, you know?

1306
01:06:47,100 --> 01:06:52,100
So I just I know enough about typography to not make

1307
01:06:53,800 --> 01:06:57,100
Mistakes and in so doing, you're going to learn a fair bit, right?

1308
01:06:57,100 --> 01:06:58,800
You're going to learn enough to know.

1309
01:06:58,800 --> 01:07:01,400
Like okay, what are the, you know, what's kerning?

1310
01:07:01,400 --> 01:07:03,000
What's letting what's in the center with the D Center?

1311
01:07:03,000 --> 01:07:03,700
What's a ligature?

1312
01:07:03,700 --> 01:07:06,000
Look, you got it, you just just what you need to know if you write

1313
01:07:06,000 --> 01:07:07,400
font code, right?

1314
01:07:08,800 --> 01:07:11,000
So I don't really know that much about fonts.

1315
01:07:11,400 --> 01:07:15,100
Like I can't even identify fonts by looking at them you know like

1316
01:07:15,400 --> 01:07:17,800
people who know a lot about font they can just be like, oh yeah that's

1317
01:07:17,800 --> 01:07:20,700
a block because I can tell because I know fonts, you know,

1318
01:07:27,400 --> 01:07:30,500
Colonel Dragon, do you typically license fonts for use in games or

1319
01:07:30,500 --> 01:07:31,400
just a loophole about?

1320
01:07:31,400 --> 01:07:34,200
Rendering that to bitmaps mean, you can just use whatever you want.

1321
01:07:34,300 --> 01:07:38,000
I believe the loophole means, you can just use whatever you want, but

1322
01:07:38,000 --> 01:07:43,800
I will also point out that you actually have some pretty good options.

1323
01:07:46,100 --> 01:07:48,000
That you not even involve the loophole.

1324
01:07:48,300 --> 01:07:52,100
So Google fonts I believe are all licensed.

1325
01:07:54,700 --> 01:07:55,900
All of these fonts.

1326
01:07:56,500 --> 01:08:01,100
And when I say all of, I mean, like, there's seriously like 1,400

1327
01:08:01,100 --> 01:08:02,400
fonts or something like this.

1328
01:08:10,500 --> 01:08:11,500
All of this stuff.

1329
01:08:13,600 --> 01:08:18,000
There's just like a massive massive numbers of fonts in here.

1330
01:08:19,700 --> 01:08:21,500
Like these are all fonts.

1331
01:08:21,600 --> 01:08:23,899
Every single one of these is a font, right?

1332
01:08:25,100 --> 01:08:30,399
And as far as I know, all of these fonts are actually under a license,

1333
01:08:30,399 --> 01:08:33,200
which would just let you use them for commercial use.

1334
01:08:33,600 --> 01:08:36,200
No loophole required, right?

1335
01:08:37,700 --> 01:08:39,700
So I don't actually know,

1336
01:08:43,200 --> 01:08:45,700
Each font family directory contains the appropriate license for the

1337
01:08:45,700 --> 01:08:46,000
faucet.

1338
01:08:46,000 --> 01:08:48,300
Directory, the font file themselves, okay, let's sing an offshoot

1339
01:08:48,300 --> 01:08:52,600
metadata most of the fonts, use Sil open front license, right?

1340
01:08:52,700 --> 01:08:57,800
And so I think like I made us go into one all the ofl ones use the

1341
01:08:57,800 --> 01:08:58,600
open font license.

1342
01:08:58,600 --> 01:08:59,700
I think, right?

1343
01:09:00,100 --> 01:09:05,899
So there's the license right few tours, any person.

1344
01:09:06,300 --> 01:09:08,500
Well swing, but my first reaction conditions.

1345
01:09:08,500 --> 01:09:10,200
Now, the farmers are very visual components.

1346
01:09:10,600 --> 01:09:14,700
They may not be sold by themselves, they can be bundled or sold with

1347
01:09:14,700 --> 01:09:16,399
any software provided that each topic.

1348
01:09:16,399 --> 01:09:21,399
Hence the above copyright notice and this license, no modified version

1349
01:09:21,399 --> 01:09:22,100
of the fonts are used for.

1350
01:09:22,100 --> 01:09:23,300
Observe font name.

1351
01:09:23,700 --> 01:09:26,100
The name of the cupboard holes are the authors of the font shut up.

1352
01:09:26,100 --> 01:09:28,200
You two remotes 50 soon.

1353
01:09:28,200 --> 01:09:29,800
Parted and whole mood should be entirely misplaced.

1354
01:09:30,000 --> 01:09:31,899
That may not be sure under any other license.

1355
01:09:31,899 --> 01:09:37,899
So basically like, as long as you minimally comply, I mean, basically

1356
01:09:37,899 --> 01:09:43,399
all you have to do is just basically credit them and don't try to sell

1357
01:09:43,399 --> 01:09:47,800
the font by itself and then some stuff you obviously wouldn't do like

1358
01:09:47,800 --> 01:09:51,300
try to use the font author as a promoter of your product which I don't

1359
01:09:51,300 --> 01:09:53,000
think any game would ever really do.

1360
01:09:53,700 --> 01:09:57,200
So as long as you did those you can actually use any of these fonts

1361
01:09:57,400 --> 01:09:59,900
and be fully licensed even outside.

1362
01:10:00,000 --> 01:10:00,600
Of the u.s.

1363
01:10:00,600 --> 01:10:02,600
so you wouldn't even need to rely on the loophole.

1364
01:10:02,800 --> 01:10:06,700
So my guess is unless you have a really specific reason why you need

1365
01:10:06,700 --> 01:10:10,100
some other font, I would actually start here and see if you can find a

1366
01:10:10,100 --> 01:10:11,900
font that you would consider acceptable.

1367
01:10:14,400 --> 01:10:16,700
For use in your product because then you don't need the legal

1368
01:10:16,700 --> 01:10:17,400
loophole.

1369
01:10:17,700 --> 01:10:18,700
It's just, that's a font.

1370
01:10:18,700 --> 01:10:20,100
That's fully licensed to you.

1371
01:10:26,800 --> 01:10:29,700
Abner Cumbre is fonts a topic you enjoy.

1372
01:10:38,500 --> 01:10:42,600
I'm going to say yes and author once wrote, If Music is the subjective

1373
01:10:42,600 --> 01:10:46,500
application of physics than font, rasterization is almost certainly

1374
01:10:46,500 --> 01:10:49,600
the subjective application of computer science.

1375
01:10:50,700 --> 01:10:51,800
Do you agree?

1376
01:10:55,100 --> 01:10:56,200
I mean.

1377
01:10:58,000 --> 01:10:59,100
I don't know.

1378
01:11:00,800 --> 01:11:03,500
I don't know that that statement contains.

1379
01:11:04,900 --> 01:11:07,100
Something really to agree or disagree with.

1380
01:11:08,100 --> 01:11:09,300
It's very abstract.

1381
01:11:10,600 --> 01:11:11,200
Click the games.

1382
01:11:11,200 --> 01:11:13,300
Probably doesn't make sense to look at kerning for lowercase to

1383
01:11:13,300 --> 01:11:13,800
uppercase.

1384
01:11:13,800 --> 01:11:16,200
I doubt, many fonts bother with those cases.

1385
01:11:17,000 --> 01:11:19,200
Well, they should, right.

1386
01:11:19,400 --> 01:11:24,900
I mean, at the, very least, if you do not bother it, like, that's

1387
01:11:24,900 --> 01:11:25,700
really sloppy.

1388
01:11:25,700 --> 01:11:30,300
As I guess what I'd say if you didn't because what if your name is

1389
01:11:30,300 --> 01:11:34,800
like, you know, vandevander for example,

1390
01:11:35,900 --> 01:11:38,800
Well, you kind of wanted the end of the day to be current together

1391
01:11:38,800 --> 01:11:39,800
properly, right?

1392
01:11:41,800 --> 01:11:50,000
You don't want to just because your last name contains a mix right for

1393
01:11:50,000 --> 01:11:51,600
Deboer, right?

1394
01:11:53,500 --> 01:11:56,500
There's a lot of names that there's a lot of times when you write

1395
01:11:56,500 --> 01:11:59,100
things that have mixed case, you don't have to be a programmer to hit

1396
01:11:59,100 --> 01:11:59,800
that, you know,

1397
01:12:05,500 --> 01:12:07,100
But Times New Roman be any better.

1398
01:12:07,100 --> 01:12:09,100
I don't know if the kerning on maybe

1399
01:12:10,600 --> 01:12:11,200
James Woodman.

1400
01:12:11,200 --> 01:12:13,500
What are some examples of font typesetting systems that can do

1401
01:12:13,500 --> 01:12:13,900
kerning?

1402
01:12:13,900 --> 01:12:17,200
Well is new text, the only game in town.

1403
01:12:18,700 --> 01:12:22,800
Knuth stack is is probably one of you.

1404
01:12:23,000 --> 01:12:27,700
I mean, I mean, let's just, we can start with the fact that there's

1405
01:12:27,700 --> 01:12:29,100
multiple layers to it.

1406
01:12:29,100 --> 01:12:34,500
Like for example, your font may have ligatures for ffi but Windows

1407
01:12:34,500 --> 01:12:36,400
might not use them right?

1408
01:12:39,100 --> 01:12:44,800
And so there's that's because like the text control doesn't parse the

1409
01:12:44,800 --> 01:12:47,700
ffi and turning into the right code point, right?

1410
01:12:48,100 --> 01:12:52,400
So saying whether you do kerning well or not is at two levels.

1411
01:12:52,400 --> 01:12:55,700
There's like, do you do kerning well at the like mechanical level.

1412
01:12:55,700 --> 01:12:59,600
And then do you do kerning well-meaning like your default stuff, your

1413
01:12:59,600 --> 01:13:02,800
default printing, actually takes into account the right code Point

1414
01:13:02,800 --> 01:13:03,200
stuff.

1415
01:13:03,400 --> 01:13:07,600
And most of that is out of Windows is hands to some degree, because

1416
01:13:07,800 --> 01:13:08,800
you're not, it's not

1417
01:13:09,400 --> 01:13:11,600
Parsing your your text for you.

1418
01:13:11,600 --> 01:13:13,500
Write your kind of responsible for doing that.

1419
01:13:15,100 --> 01:13:20,400
So it's hard to say right whereas Tech because it's the whole system

1420
01:13:20,600 --> 01:13:21,600
it does that correctly.

1421
01:13:21,600 --> 01:13:25,000
Like if you do an FF I in Tech and the font has an SFI ligature, it'll

1422
01:13:25,000 --> 01:13:27,800
do the ffi ligature because it just looks and it goes on.

1423
01:13:27,800 --> 01:13:30,200
So it's typhus fi off, I go right.

1424
01:13:32,000 --> 01:13:34,300
but yeah, as for systems that typeset well,

1425
01:13:36,500 --> 01:13:41,100
And Duke earning well, I think Windows is kerning is probably not

1426
01:13:41,100 --> 01:13:43,100
awful under the hood.

1427
01:13:43,400 --> 01:13:45,800
It's more that the fonts they ship have really bad.

1428
01:13:45,800 --> 01:13:48,600
Kerning is my guess because I don't know that there's anything

1429
01:13:48,600 --> 01:13:51,100
particularly rather Kearney it's not great.

1430
01:13:51,200 --> 01:13:53,400
They are some things in there that I probably wouldn't have done the

1431
01:13:53,400 --> 01:13:59,500
way they did them but you know it's not like they don't have the

1432
01:13:59,500 --> 01:14:00,700
support, right?

1433
01:14:02,700 --> 01:14:04,900
So yeah, I don't really know what to say about that.

1434
01:14:04,900 --> 01:14:05,600
Specifically

1435
01:14:08,700 --> 01:14:09,000
Yeah.

1436
01:14:14,200 --> 01:14:15,100
BK buggy.

1437
01:14:15,100 --> 01:14:15,400
Hmm.

1438
01:14:15,400 --> 01:14:16,200
Good point.

1439
01:14:16,400 --> 01:14:18,200
More game designers should have a guy gal.

1440
01:14:18,200 --> 01:14:21,100
Who knows about fonts, because I see a lot of games where it's hard to

1441
01:14:21,100 --> 01:14:21,800
read.

1442
01:14:21,900 --> 01:14:23,600
Quest text chat text.

1443
01:14:23,800 --> 01:14:27,200
Yeah, unfortunately game developers are not known for their quality

1444
01:14:27,200 --> 01:14:28,100
typography skills.

1445
01:14:28,100 --> 01:14:28,800
That is true.

1446
01:14:32,800 --> 01:14:34,500
To be fair to them either as anybody else.

1447
01:14:34,500 --> 01:14:36,800
You would think that like web browsers would totally nail the

1448
01:14:36,800 --> 01:14:39,500
typography, their typography is often awful.

1449
01:14:41,400 --> 01:14:45,700
And so even people whose entire job it is to display pages of text

1450
01:14:46,500 --> 01:14:47,200
typically get it.

1451
01:14:47,200 --> 01:14:47,400
No.

1452
01:14:47,400 --> 01:14:48,300
Better than games do.

1453
01:14:48,300 --> 01:14:51,100
So I wouldn't necessarily point the finger at game developers but

1454
01:14:51,200 --> 01:14:53,800
could everyone stand to use a little bit more about fonts.

1455
01:14:53,800 --> 01:14:54,000
Yes.

1456
01:14:54,000 --> 01:14:57,800
Probably because it's one of the primary things we do.

1457
01:14:58,400 --> 01:14:59,200
I will see

1458
01:15:01,600 --> 01:15:05,600
When our game comes out for Molly rocket, it's got the best

1459
01:15:05,600 --> 01:15:07,000
typesetting system I've ever seen.

1460
01:15:07,200 --> 01:15:10,800
So you may enjoy that, it can do some pretty amazing stuff.

1461
01:15:19,200 --> 01:15:22,200
Abner Cumbre regarding the abstract text.

1462
01:15:22,500 --> 01:15:26,900
I agree, which is why I axe asked, given your experience, maybe you

1463
01:15:26,900 --> 01:15:28,900
could have read more into that, than I could.

1464
01:15:29,500 --> 01:15:30,000
Yeah.

1465
01:15:32,100 --> 01:15:34,200
I mean, it's one of those statements that's like, I don't disagree

1466
01:15:34,200 --> 01:15:37,200
with anything in particular but it's so nonspecific and there's so

1467
01:15:37,200 --> 01:15:42,400
many issues that it raises I, you know, I don't really know what you

1468
01:15:42,400 --> 01:15:46,700
know if that's what if I really agree with what they meant to say or

1469
01:15:46,700 --> 01:15:47,500
not, you know.

1470
01:15:51,900 --> 01:15:54,900
Robbie the down left corner of the a is cut, but you search bounds by

1471
01:15:54,900 --> 01:15:55,400
the pixels.

1472
01:15:55,400 --> 01:15:56,500
So why did this happen?

1473
01:15:56,700 --> 01:15:57,000
No.

1474
01:15:57,000 --> 01:15:58,600
So remember this.

1475
01:15:58,600 --> 01:16:02,400
I turned off that giving it the extra space.

1476
01:16:03,100 --> 01:16:03,800
Right.

1477
01:16:04,800 --> 01:16:07,800
That's what I was about to try and fix but we needed to do some more

1478
01:16:07,800 --> 01:16:08,100
work.

1479
01:16:08,100 --> 01:16:11,300
That was, where are we here?

1480
01:16:13,800 --> 01:16:15,400
That was the priest FX case.

1481
01:16:16,500 --> 01:16:20,200
And so what I believe is happening there is that Windows is drawing it

1482
01:16:20,200 --> 01:16:22,400
clipped because it doesn't have enough space.

1483
01:16:22,800 --> 01:16:25,900
So we need to like move it over into the middle of the bitmap so that

1484
01:16:25,900 --> 01:16:29,400
it can draw off the left side and then we can pick it up.

1485
01:16:34,600 --> 01:16:35,400
Quarter Tryin.

1486
01:16:35,600 --> 01:16:38,500
Have you played facade or and are met the designers?

1487
01:16:39,000 --> 01:16:42,700
No I have not met the designer as I tried to play it when it first

1488
01:16:42,700 --> 01:16:44,900
came out but it like wouldn't run on my machine or something like

1489
01:16:44,900 --> 01:16:45,400
that.

1490
01:16:45,500 --> 01:16:46,600
I think I mentioned this before.

1491
01:16:49,000 --> 01:16:54,200
So I'd like I'm aware of it and I saw you know, roughly what it did or

1492
01:16:54,200 --> 01:16:56,600
whatever, but like I haven't actually played it myself.

1493
01:17:03,200 --> 01:17:07,100
So yeah, Robbie tomorrow will be all about figuring out why our a is

1494
01:17:07,100 --> 01:17:07,700
clipped.

1495
01:17:07,800 --> 01:17:10,500
I mean, I think I already know why I is clip but it'll all be about

1496
01:17:10,500 --> 01:17:13,100
actually getting that to happen the way it should.

1497
01:17:14,600 --> 01:17:18,200
I think all we need to do is just get the free step thing working but

1498
01:17:18,600 --> 01:17:21,600
you know, we have to actually figure out what I messed when I did

1499
01:17:21,600 --> 01:17:21,800
that.

1500
01:17:21,800 --> 01:17:24,000
I messed something else up, right?

1501
01:17:26,800 --> 01:17:32,800
And I don't actually know what so that has to be fixed.

1502
01:17:38,200 --> 01:17:40,000
Yeah, I don't know what it was.

1503
01:17:44,700 --> 01:17:47,600
Because everything works off of men X here.

1504
01:17:50,400 --> 01:17:51,100
See, I don't know.

1505
01:17:51,400 --> 01:17:52,300
We'll find out.

1506
01:17:53,200 --> 01:17:56,400
We will take a look and we will find out is size.

1507
01:17:56,400 --> 01:17:58,700
CX used somewhere else.

1508
01:17:59,500 --> 01:17:59,800
No.

1509
01:18:00,400 --> 01:18:01,000
It's not.

1510
01:18:06,700 --> 01:18:07,300
So, I don't know.

1511
01:18:10,100 --> 01:18:10,700
I dunno.

1512
01:18:12,400 --> 01:18:13,000
Actually.

1513
01:18:17,500 --> 01:18:21,400
Yeah, the reason is because we were clearing everything to White.

1514
01:18:22,800 --> 01:18:26,400
Which we should not have done, we should have third everything to

1515
01:18:26,400 --> 01:18:27,000
Black.

1516
01:18:27,700 --> 01:18:29,500
So it was finding that white clear.

1517
01:18:29,500 --> 01:18:31,200
I think that must have been held it.

1518
01:18:31,200 --> 01:18:31,500
Let me ask.

1519
01:18:31,500 --> 01:18:35,000
So, let's just see that may actually be the bug, right?

1520
01:18:35,000 --> 01:18:38,200
It's a holdover from when we were testing things, probably

1521
01:18:41,100 --> 01:18:44,200
Yeah, so we were finding our own stuff.

1522
01:18:44,200 --> 01:18:45,000
We drawn in there.

1523
01:18:47,400 --> 01:18:49,000
Hey look, that's fine.

1524
01:18:52,600 --> 01:18:59,400
So yeah, there's bears are a is back correct now, so that's good.

1525
01:19:01,300 --> 01:19:01,800
Right.

1526
01:19:05,700 --> 01:19:07,700
It looks like RV might be clipped as well.

1527
01:19:07,700 --> 01:19:12,000
Is it also giving us the wrong Dimensions Envy.

1528
01:19:12,000 --> 01:19:13,700
Do you see how the V looks like?

1529
01:19:13,700 --> 01:19:15,200
It might be clipped there too.

1530
01:19:16,500 --> 01:19:22,100
Right, I want to see what happens with that calc.

1531
01:19:23,900 --> 01:19:24,800
Oops, not calc.

1532
01:19:26,300 --> 01:19:27,400
You guys see that, right?

1533
01:19:27,600 --> 01:19:28,400
It's not just me.

1534
01:19:32,100 --> 01:19:32,500
Okay.

1535
01:19:42,200 --> 01:19:45,100
Yeah, I can't I can't quite tell if that's flipping.

1536
01:19:46,400 --> 01:19:51,800
Oh yeah, the width is based off the backward side.

1537
01:19:53,000 --> 01:19:53,600
Man.

1538
01:19:53,600 --> 01:19:54,900
Oh man, these guys.

1539
01:19:55,800 --> 01:20:02,100
Alright, so yeah, I think we also want to expand the width, right?

1540
01:20:02,100 --> 01:20:05,000
So you want to do like the priest FX and the bound with actually

1541
01:20:05,000 --> 01:20:07,300
probably wants to double that, right?

1542
01:20:07,400 --> 01:20:09,900
We probably want like that, right?

1543
01:20:11,500 --> 01:20:15,700
So that we're going to search wide as well.

1544
01:20:19,700 --> 01:20:22,300
Because that with they're giving us back is totally bogus too.

1545
01:20:23,600 --> 01:20:25,200
So this allows her to be that pixels lot.

1546
01:20:25,200 --> 01:20:28,300
Now I don't know if maybe we should use the ABC widths to do that for

1547
01:20:28,300 --> 01:20:31,900
us so that we don't have just an ad-hoc constant in there, but now you

1548
01:20:31,900 --> 01:20:34,400
can see RV doesn't have that little clip.

1549
01:20:35,400 --> 01:20:35,900
Right?

1550
01:20:37,100 --> 01:20:38,700
And so that's that's a little bit better.

1551
01:20:40,100 --> 01:20:41,700
And that's looking pretty good, right?

1552
01:20:41,900 --> 01:20:44,100
I mean by good I mean awful but that's not our fault.

1553
01:20:44,100 --> 01:20:45,100
That's the fonts fault.

1554
01:20:46,100 --> 01:20:46,500
so,

1555
01:20:55,100 --> 01:20:59,300
Robbie you said Molly Rockets upcoming game has crazy font functions.

1556
01:20:59,300 --> 01:20:59,800
Can you say

1557
01:21:00,000 --> 01:21:01,800
Example about what about font.

1558
01:21:01,800 --> 01:21:03,500
Can you see one example?

1559
01:21:03,500 --> 01:21:05,100
What about fonts can be crazy?

1560
01:21:05,200 --> 01:21:06,000
Just wondering?

1561
01:21:06,900 --> 01:21:08,400
No, it's a surprise.

1562
01:21:13,300 --> 01:21:14,000
Quarter Tron.

1563
01:21:14,000 --> 01:21:15,400
What's behind the curtain?

1564
01:21:16,500 --> 01:21:16,800
What?

1565
01:21:16,800 --> 01:21:18,600
Curtain of this?

1566
01:21:19,400 --> 01:21:20,600
This is just the window.

1567
01:21:20,700 --> 01:21:23,100
It's just blocking out the light so you can see me, okay?

1568
01:21:25,600 --> 01:21:25,900
Garland.

1569
01:21:25,900 --> 01:21:27,300
Oh, Bloom facade was kind of interesting.

1570
01:21:27,300 --> 01:21:27,700
One time.

1571
01:21:27,700 --> 01:21:28,200
I type 0.

1572
01:21:28,200 --> 01:21:30,800
The first thing I said to the guy, when you open the door and he just

1573
01:21:30,800 --> 01:21:33,900
scowled, shut the door in my face and then the game faded to Black and

1574
01:21:33,900 --> 01:21:34,400
ended.

1575
01:21:35,200 --> 01:21:40,000
All right, not necessarily A high-quality store experience, but yeah.

1576
01:21:41,100 --> 01:21:42,000
It's a roguelike.

1577
01:21:43,800 --> 01:21:44,600
In that sense.

1578
01:21:46,200 --> 01:21:47,000
All right.

1579
01:21:47,700 --> 01:21:49,300
Looks like we're at the end of the questions.

1580
01:21:50,300 --> 01:21:54,500
So there's our current state of fonts, you can pretty good.

1581
01:21:54,500 --> 01:21:56,600
Actually, those are looking pretty good.

1582
01:21:57,400 --> 01:22:01,700
You know I'm saying feel like those are pretty good-looking fonts.

1583
01:22:06,000 --> 01:22:07,200
I hope we have I don't know.

1584
01:22:07,200 --> 01:22:12,800
I want to looks like I just want to make sure we have our Edge or

1585
01:22:12,800 --> 01:22:13,500
edges.

1586
01:22:14,000 --> 01:22:14,800
Correct.

1587
01:22:14,900 --> 01:22:15,600
I hope we do.

1588
01:22:19,100 --> 01:22:22,200
But yeah, that's looking pretty good relatively happy with that.

1589
01:22:23,400 --> 01:22:31,300
All right, folks, we will go ahead and close things down here and yeah

1590
01:22:32,000 --> 01:22:37,400
and we will pick things up again tomorrow, but that's pretty good work

1591
01:22:37,400 --> 01:22:37,700
today.

1592
01:22:37,700 --> 01:22:42,400
I think we are at the point where our fonts are looking pretty good,

1593
01:22:42,800 --> 01:22:47,400
pretty good fonts you know I'm saying at least as good as the

1594
01:22:47,400 --> 01:22:48,600
materials were getting

1595
01:22:50,300 --> 01:22:53,800
Can't can't Draw Font better than the thought you get.

1596
01:22:54,800 --> 01:22:55,500
So yeah.

1597
01:22:55,800 --> 01:22:56,400
All right.

1598
01:22:58,000 --> 01:22:58,500
Okay everyone.

1599
01:22:58,500 --> 01:23:00,500
Thank you so much for joining me for another sort of handmade hero.

1600
01:23:00,500 --> 01:23:01,600
It's been a pleasure coding with you.

1601
01:23:01,600 --> 01:23:07,300
As always, if you would like to follow along at home with the source

1602
01:23:07,300 --> 01:23:09,000
code, you can do.

1603
01:23:09,000 --> 01:23:12,300
So by pre-ordering the game at handmade hero dot-org, it comes with

1604
01:23:12,300 --> 01:23:15,100
the source code and I upload the latest version every night after

1605
01:23:15,100 --> 01:23:16,200
we're done working on it here.

1606
01:23:16,500 --> 01:23:19,000
So if you want to check that out you can do that on here made here at

1607
01:23:19,000 --> 01:23:20,500
or we also have a forum site.

1608
01:23:20,500 --> 01:23:24,300
You can go to which is a place to ask questions and you can also get

1609
01:23:24,300 --> 01:23:26,100
community pour some mac and Linux Community.

1610
01:23:26,100 --> 01:23:27,600
Anted episode guide, that sort of thing.

1611
01:23:27,700 --> 01:23:29,200
NG there's a patreon page.

1612
01:23:29,200 --> 01:23:31,800
You can subscribe to if you want to support the video series and we

1613
01:23:31,800 --> 01:23:34,200
also have a tweet bot, which tweets the schedule at you.

1614
01:23:34,200 --> 01:23:35,500
If you want to know when it's gonna be live.

1615
01:23:35,500 --> 01:23:37,400
And speaking of when is going to be live, we will be back here

1616
01:23:37,400 --> 01:23:39,700
tomorrow, same time, same place, 5 p.m.

1617
01:23:39,700 --> 01:23:41,700
Pacific Daylight Time right here on Twitch.

1618
01:23:42,000 --> 01:23:45,100
When we will go, double-check the kerning stuff just to make sure

1619
01:23:45,100 --> 01:23:45,900
that's okay.

1620
01:23:46,600 --> 01:23:49,800
And then, we'll sort of start broadening our fonts tough to handle

1621
01:23:50,600 --> 01:23:53,400
multiple, ranges, and just kind of get it better setup for language,

1622
01:23:53,400 --> 01:23:54,300
support, that sort of thing.

1623
01:23:54,300 --> 01:23:57,400
So we just want a couple days of that of cleanup and maybe the thing

1624
01:23:57,400 --> 01:23:57,600
we could

1625
01:23:57,700 --> 01:23:59,100
Do is turn back on stb.

1626
01:23:59,100 --> 01:23:59,900
Truetype

1627
01:24:00,000 --> 01:24:03,400
And, and make sure that we support the library path, for people who

1628
01:24:03,400 --> 01:24:07,600
want to use a library support that as well, because we did the work,

1629
01:24:07,600 --> 01:24:08,400
the most of the work for it.

1630
01:24:08,400 --> 01:24:10,000
We might as well finish that off.

1631
01:24:10,600 --> 01:24:11,600
So that's about it.

1632
01:24:12,000 --> 01:24:13,000
Thanks for joining me.

1633
01:24:13,400 --> 01:24:14,400
Hope to see you back here again.

1634
01:24:14,400 --> 01:24:18,600
Tomorrow, till then have fun programming and I will see you guys on

1635
01:24:18,600 --> 01:24:19,100
the internet.

1636
01:24:19,200 --> 01:24:19,900
Take these everyone

