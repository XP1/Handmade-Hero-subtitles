1
00:00:01,100 --> 00:00:01,900
Start recording.

2
00:00:03,400 --> 00:00:05,600
Hello everyone and welcome to handmade hero.

3
00:00:05,600 --> 00:00:08,100
The show we could a complete game live on stream.

4
00:00:08,400 --> 00:00:10,900
We are back after having moved.

5
00:00:11,400 --> 00:00:17,700
We have relocated the handmade hero machine and hopefully in that

6
00:00:17,700 --> 00:00:20,400
process have not destroyed anything.

7
00:00:21,000 --> 00:00:24,000
I sort of tested the streaming setup like just a little bit.

8
00:00:24,000 --> 00:00:24,900
It seems to be working.

9
00:00:24,900 --> 00:00:29,900
Okay, the set up is a little weird here but I think we're pretty good

10
00:00:29,900 --> 00:00:30,400
to go.

11
00:00:30,900 --> 00:00:31,500
We will see.

12
00:00:31,500 --> 00:00:33,100
So hopefully today.

13
00:00:33,200 --> 00:00:38,000
It's stream will not be lost and everything will recorded properly and

14
00:00:38,000 --> 00:00:38,700
stream properly.

15
00:00:38,700 --> 00:00:42,000
If it doesn't, well, that is just the way it goes.

16
00:00:42,000 --> 00:00:44,600
When you first trying out a new streaming location, certainly

17
00:00:46,400 --> 00:00:52,600
So on break, since we were off for a week, I was thinking about much

18
00:00:52,600 --> 00:00:57,200
about what we have on hand made hero and we don't have a lot of engine

19
00:00:57,200 --> 00:00:58,400
things left to do.

20
00:00:59,300 --> 00:01:02,400
It's, you know, it's pretty full functional at this point in terms of

21
00:01:02,400 --> 00:01:03,900
the sort of things that we need.

22
00:01:04,700 --> 00:01:07,300
And so I was kind of going through things in my head of like, what,

23
00:01:07,300 --> 00:01:11,200
you know, what are the last sorts of any big things that I want to

24
00:01:11,200 --> 00:01:14,000
tackle before, officially saying we're done with this, and we're going

25
00:01:14,000 --> 00:01:14,600
to move on.

26
00:01:15,600 --> 00:01:18,600
Ends, I'm leaning towards, we'll see what happens at the end of this

27
00:01:18,600 --> 00:01:24,000
week, if I change my mind, but I'm leaning towards switching over to

28
00:01:24,100 --> 00:01:27,100
actually using a regular 3D pipeline.

29
00:01:27,800 --> 00:01:32,500
It's not really a lot of work to do, we've already done all the hard

30
00:01:32,500 --> 00:01:35,000
work of like, rasterization and all that stuff in our software

31
00:01:35,000 --> 00:01:35,600
renderer.

32
00:01:36,500 --> 00:01:39,800
So you're talking about only it's a little bit of stuff for like the

33
00:01:39,800 --> 00:01:41,800
transforming clipping part of the pipeline.

34
00:01:43,100 --> 00:01:45,400
And the reason that I was thinking about that is because I really

35
00:01:45,500 --> 00:01:49,800
He just didn't like the way things were going with all of the sort of,

36
00:01:51,400 --> 00:01:56,400
with all of the sort of sacrifices that I had to make in terms of what

37
00:01:56,400 --> 00:02:01,800
I wanted to do, in order to get things to to work with Straight, 2D

38
00:02:01,800 --> 00:02:03,000
with no mapping at all.

39
00:02:03,700 --> 00:02:07,200
And so, what I was thinking about is I was like, I think I would just

40
00:02:07,200 --> 00:02:09,000
be more comfortable in the long run.

41
00:02:09,300 --> 00:02:12,600
If we pretty much left, everything the same in terms of all the

42
00:02:12,600 --> 00:02:13,500
character sprites.

43
00:02:13,500 --> 00:02:15,400
So they really wouldn't do anything different.

44
00:02:15,600 --> 00:02:22,500
Right wise, but all of the environment would just be mapped onto

45
00:02:22,500 --> 00:02:24,000
little blocks, you know.

46
00:02:25,100 --> 00:02:28,500
So that basically like ground tiles were just little blocks and walls

47
00:02:28,500 --> 00:02:33,100
would be little raised blocks with just just image a Sprite image on

48
00:02:33,100 --> 00:02:33,900
each side of them.

49
00:02:34,900 --> 00:02:37,200
I'm not sure, but I just feel like I might be more comfortable that

50
00:02:37,200 --> 00:02:40,300
way because looking at sort of the way in which things are working on

51
00:02:40,300 --> 00:02:41,200
the back end of the rendering.

52
00:02:41,200 --> 00:02:45,200
Now, I just feel like we have a lot, just there's a tremendous amount

53
00:02:45,200 --> 00:02:45,400
of work.

54
00:02:45,500 --> 00:02:48,000
Work being done back there for the sorting and all of these sorts of

55
00:02:48,000 --> 00:02:48,300
things.

56
00:02:48,600 --> 00:02:51,100
And I really just don't think it's an efficient way to do things, you

57
00:02:51,100 --> 00:02:51,300
know?

58
00:02:51,300 --> 00:02:54,200
I mean yes we made it work and it can work in 2D.

59
00:02:54,200 --> 00:02:58,600
But I think at some point just where I wanted to be in terms of our

60
00:02:58,600 --> 00:02:59,600
capabilities,

61
00:03:00,000 --> 00:03:04,400
Doesn't mesh very well with keeping the environments entirely 2D so I

62
00:03:04,400 --> 00:03:05,000
don't know.

63
00:03:05,000 --> 00:03:08,300
I feel like I just don't really want to leave the renderer in that

64
00:03:08,300 --> 00:03:08,900
state.

65
00:03:09,400 --> 00:03:12,200
I could change my mind but that's just kind of what I was thinking.

66
00:03:13,100 --> 00:03:18,200
And so I kind of feel like I may want to just go ahead and set up an

67
00:03:18,200 --> 00:03:24,500
actual 3D camera and have a way of mapping sending down a map Cube for

68
00:03:24,600 --> 00:03:28,500
the environment blocks, and then they are those environment blocks

69
00:03:28,500 --> 00:03:29,900
would actually be

70
00:03:30,000 --> 00:03:32,000
Formed in perspective, right?

71
00:03:32,400 --> 00:03:34,500
They would go through the z-buffer, they be transferred in

72
00:03:34,500 --> 00:03:39,700
perspective, I would just see if that is workable with the art,

73
00:03:40,200 --> 00:03:42,500
because if it is, I think I would feel a lot more comfortable at that

74
00:03:42,500 --> 00:03:45,100
because then I don't have so many concerns.

75
00:03:45,500 --> 00:03:48,300
We have like all of the special purpose code in there for doing a lot

76
00:03:48,300 --> 00:03:51,300
of stuff that I really just wish we didn't have to do.

77
00:03:51,300 --> 00:03:55,500
And I feel like it's going to create a lot of bottlenecks, you know.

78
00:03:55,600 --> 00:03:58,700
Yes, we don't have to worry too much about our performance because we

79
00:03:58,700 --> 00:03:59,800
are 2D games so you

80
00:04:00,000 --> 00:04:03,600
We have a lot more horsepower than we need but the same time I don't

81
00:04:03,600 --> 00:04:08,300
really like taking up that horsepower for no real purpose, right.

82
00:04:08,300 --> 00:04:11,500
Like it doesn't really seem like a good trade off there and I don't

83
00:04:11,500 --> 00:04:13,600
feel like I'm getting very much out of it like I don't feel like

84
00:04:13,600 --> 00:04:17,399
there's very much we can do with the sort algorithm that we couldn't

85
00:04:17,399 --> 00:04:19,200
have done with the Z buffer as well.

86
00:04:19,600 --> 00:04:21,300
And so even though like

87
00:04:22,800 --> 00:04:25,300
you know, even though it does seem like a little bit of Overkill at

88
00:04:25,300 --> 00:04:28,200
first just as I was reflecting I'm just like, I don't know.

89
00:04:28,200 --> 00:04:31,400
It seems like especially if we want to push the particle system stuff

90
00:04:31,400 --> 00:04:35,800
a little bit, we're going to run into a situation where trying to

91
00:04:35,800 --> 00:04:38,500
force lots of particles through a sorting backend just isn't going to

92
00:04:38,500 --> 00:04:38,700
work.

93
00:04:38,700 --> 00:04:42,000
They would have to be aggregated anyways and then you're into these

94
00:04:42,000 --> 00:04:44,700
kind of nasty problems of like, well how are the particles getting

95
00:04:44,700 --> 00:04:46,800
grouped for sorting and that sort of stuff?

96
00:04:47,800 --> 00:04:50,200
And, you know, does that make it hard for them to flow around things

97
00:04:50,200 --> 00:04:50,900
properly?

98
00:04:51,400 --> 00:04:52,400
And so I feel like we

99
00:04:52,600 --> 00:04:56,000
Just would end up in this really nasty situation and I don't want to

100
00:04:56,000 --> 00:04:59,800
put us in that situation and have us not be able to do certain special

101
00:04:59,800 --> 00:05:02,600
effects that we want to do for no reason other than we have to go

102
00:05:02,600 --> 00:05:06,300
through a sorting back end so that we can't take advantage of the

103
00:05:06,300 --> 00:05:07,300
z-buffer hardware.

104
00:05:08,100 --> 00:05:10,400
So I don't know that's just my feeling on it.

105
00:05:10,500 --> 00:05:11,900
That's kind of what I was feeling.

106
00:05:13,300 --> 00:05:18,200
I pretty much only ever use 3D stuff normally so I'm not very used to

107
00:05:18,200 --> 00:05:19,800
2D programming.

108
00:05:20,400 --> 00:05:22,400
So that may just be, you know,

109
00:05:22,500 --> 00:05:26,800
Sort of the fact that I'm more comfortable with 3D than with 2D and so

110
00:05:26,800 --> 00:05:29,600
maybe like it's really, not as bad as I think it is and it's just a

111
00:05:29,600 --> 00:05:34,700
question of well, you know, your first time through doing 3D to 2D

112
00:05:34,700 --> 00:05:38,500
render engine, if, you know, you're very used to doing 3D render

113
00:05:38,500 --> 00:05:42,500
edges, you expect all of these certain things to work certain ways and

114
00:05:42,500 --> 00:05:44,000
you're going to have to work around them in 2D.

115
00:05:44,000 --> 00:05:46,400
And it's not that big a deal, you know, it might be something more

116
00:05:46,400 --> 00:05:49,300
like that but on the other hand it may just be that in general.

117
00:05:49,300 --> 00:05:52,400
There really isn't a way to do high volume.

118
00:05:52,500 --> 00:05:57,000
Some special effects in that sort of stuff without, you know, relying

119
00:05:57,000 --> 00:05:58,400
on a z-buffer, other sorts things.

120
00:05:58,600 --> 00:05:59,900
That's why we

121
00:06:00,000 --> 00:06:03,800
Z buffer is right, so I don't know.

122
00:06:04,600 --> 00:06:07,700
It's a really interesting question and I'm not sure exactly what the

123
00:06:07,700 --> 00:06:08,500
right answer is.

124
00:06:08,500 --> 00:06:10,600
But just based on kind of my feelings about it.

125
00:06:10,600 --> 00:06:14,900
I was like, I didn't like the level of code complexity that we had to

126
00:06:14,900 --> 00:06:18,700
achieve in order to do what we wanted to do.

127
00:06:20,000 --> 00:06:23,600
And I fully respect the fact that that's because I was trying to do

128
00:06:23,600 --> 00:06:27,100
some things that 2D games, don't normally do, like the floor, like

129
00:06:27,100 --> 00:06:29,900
prospective floor shifting for like going up and down.

130
00:06:30,000 --> 00:06:33,500
Down and, you know, maybe and doing lots of like particle effects that

131
00:06:33,500 --> 00:06:35,600
may be work between floors and stuff like that.

132
00:06:35,700 --> 00:06:38,700
I realize that's not something that pretty much happens in 2D games

133
00:06:38,700 --> 00:06:39,600
really very much.

134
00:06:40,200 --> 00:06:44,600
But at the same time, you know, we know that because nowadays, we have

135
00:06:44,600 --> 00:06:48,200
3D Hardware that we can do all those things if we just put things into

136
00:06:48,200 --> 00:06:48,800
3D.

137
00:06:49,000 --> 00:06:50,300
And so I don't know.

138
00:06:50,400 --> 00:06:52,300
It seems like something that we should probably do.

139
00:06:53,400 --> 00:06:56,100
I also don't really like the idea of having to force people to

140
00:06:56,100 --> 00:06:58,900
understand all the 3D stuff in order to follow it.

141
00:06:59,100 --> 00:06:59,900
But at the end of

142
00:07:00,000 --> 00:07:00,300
Day.

143
00:07:00,300 --> 00:07:04,000
I think it's not too much more stuff, because since we already have a

144
00:07:04,000 --> 00:07:09,000
transform, we already have, you know, the concept of a transform, the

145
00:07:09,000 --> 00:07:15,500
concept of filling rectangles with, you know, sort of doing the

146
00:07:15,500 --> 00:07:17,700
standard stuff, we would do the 3D full triangles.

147
00:07:18,100 --> 00:07:21,100
You know, we could even choose not to implement a perspective.

148
00:07:21,100 --> 00:07:24,900
Correct rasterizer in the software path if we want to write.

149
00:07:24,900 --> 00:07:27,600
So we don't have to take on some of that complexity.

150
00:07:27,600 --> 00:07:29,800
If we don't want to, we just need to do the transform.

151
00:07:29,900 --> 00:07:30,500
Art.

152
00:07:30,900 --> 00:07:33,300
We could even not do clipping properly, right?

153
00:07:33,300 --> 00:07:37,000
We could do kind of like hacky clipping or something like this but

154
00:07:37,000 --> 00:07:39,900
even if we did those things, they wouldn't be too big of a deal at the

155
00:07:39,900 --> 00:07:44,300
end of the day, it's not like a huge amount of extra code to do the

156
00:07:44,300 --> 00:07:45,200
front end for it.

157
00:07:51,200 --> 00:07:55,700
So that's just where I'm leaning towards that's, that's my, my feeling

158
00:07:55,700 --> 00:07:56,000
on it.

159
00:07:56,000 --> 00:07:58,800
So I don't know how other people will feel about that.

160
00:08:00,300 --> 00:08:02,000
I don't know if it's a good idea or a bad idea.

161
00:08:02,000 --> 00:08:04,800
Usually, with stuff like this you only really know once you've done it

162
00:08:04,800 --> 00:08:07,400
and then you can see whether or not it really did simplify things or

163
00:08:07,400 --> 00:08:10,500
make things nicer or whether it was just a waste of time.

164
00:08:10,500 --> 00:08:14,000
But it does seem like the kind of thing that I think when I look at

165
00:08:14,000 --> 00:08:16,800
what we've got right now, it's the big thing that makes me kind of

166
00:08:16,900 --> 00:08:20,300
upset because I feel like it just adds a ton of complexity for no

167
00:08:20,300 --> 00:08:20,500
real.

168
00:08:20,700 --> 00:08:25,000
And if it and I'm not liking how much I have to fight the various

169
00:08:25,000 --> 00:08:28,500
concepts of Z values and things like this in the code base all the

170
00:08:28,500 --> 00:08:28,900
time for.

171
00:08:28,900 --> 00:08:30,700
No, again for no real benefit.

172
00:08:30,700 --> 00:08:35,799
Like the only real benefit is we say, views of the Z buffer and that's

173
00:08:35,799 --> 00:08:38,900
a good thing, in some sense, because it is nice to not have to use a

174
00:08:38,900 --> 00:08:42,100
z-buffer because there are advantages that come with that and

175
00:08:42,100 --> 00:08:45,400
certainly when you sort you get easier Edge anti-aliasing and stuff

176
00:08:45,400 --> 00:08:47,900
like that better transparency, things like this.

177
00:08:47,900 --> 00:08:50,500
So you know there are some benefits to it but those benefits

178
00:08:50,600 --> 00:08:54,200
If it's are pretty minor and the drawbacks are pretty severe.

179
00:08:54,200 --> 00:08:57,400
If we want to start pushing higher counts of things through the

180
00:08:57,400 --> 00:08:58,100
scenes, right?

181
00:08:58,100 --> 00:08:59,800
If we want to start having more Sprites,

182
00:09:01,300 --> 00:09:06,600
You know, thousands tens of thousands of Sprites and up which is not a

183
00:09:06,600 --> 00:09:11,400
huge number of Sprites right by today's standards, pushing all those

184
00:09:11,400 --> 00:09:12,400
through a sorting system.

185
00:09:12,400 --> 00:09:13,800
It's just not a good idea.

186
00:09:13,900 --> 00:09:18,100
Like I really just don't think we want to do that and I just feel like

187
00:09:18,100 --> 00:09:19,800
that's going to really come back to bite us.

188
00:09:20,100 --> 00:09:22,000
So that's my current feeling on it.

189
00:09:22,200 --> 00:09:24,000
Hopefully that all makes some sense.

190
00:09:24,400 --> 00:09:27,600
I'm going to go ahead and ignore it for this week because we have some

191
00:09:27,600 --> 00:09:30,600
stuff we can be doing, but since we're pretty much at the end,

192
00:09:30,800 --> 00:09:31,900
Of engine things.

193
00:09:32,200 --> 00:09:36,000
I do not know why this is pinging, that's all good.

194
00:09:38,000 --> 00:09:42,800
Since we have a bunch of engine things, we can be doing for this week.

195
00:09:42,800 --> 00:09:48,700
We're we will probably run out some point relatively soon, and then we

196
00:09:48,700 --> 00:09:49,900
will have to make that decision.

197
00:09:50,100 --> 00:09:53,100
So I'm going to go ahead and there we go.

198
00:09:57,300 --> 00:10:00,900
All right, I'm going to go ahead here and bring up our to-do list for

199
00:10:00,900 --> 00:10:01,600
a moment.

200
00:10:02,400 --> 00:10:06,800
And if I take a look at it here, really like like I said there's not a

201
00:10:06,800 --> 00:10:09,100
whole lot of stuff here that I really want to tackle.

202
00:10:11,900 --> 00:10:15,100
That's still left on the list, the graphics upgrade would pretty much

203
00:10:15,100 --> 00:10:19,700
be we would switch to the 3D stuff and we probably do that along with

204
00:10:19,700 --> 00:10:20,600
the real artwork.

205
00:10:21,000 --> 00:10:24,800
That would be what we would do and that would get rid of these two

206
00:10:24,800 --> 00:10:25,300
things.

207
00:10:26,700 --> 00:10:27,500
If that makes sense.

208
00:10:27,500 --> 00:10:30,600
That would, that would also clean up sort of this stuff lighting is

209
00:10:30,600 --> 00:10:33,000
something that we still have to kind of talk about.

210
00:10:33,000 --> 00:10:37,200
And if we move things to 3D, I don't know that it would be that big of

211
00:10:37,200 --> 00:10:40,200
a change in how we might may or may not do lighting.

212
00:10:41,000 --> 00:10:43,700
But it would certainly be something we could look at during that

213
00:10:43,700 --> 00:10:44,000
period.

214
00:10:44,000 --> 00:10:48,700
So I feel like this could just be the 3D Graphics update if we wanted

215
00:10:48,700 --> 00:10:49,500
to do it that way.

216
00:10:50,300 --> 00:10:53,900
So let's go ahead and do the arena upgrade, for sure.

217
00:10:54,500 --> 00:10:59,000
I just want to take a quick look here and yeah I would like to

218
00:10:59,000 --> 00:11:02,500
potentially save the arena upgrade for a day where we just start out

219
00:11:02,500 --> 00:11:05,500
and do the start doing the arena upgrades like right at the beginning

220
00:11:05,500 --> 00:11:05,600
at.

221
00:11:05,600 --> 00:11:07,200
So it might do that tomorrow today.

222
00:11:07,200 --> 00:11:10,600
What I think I might want to do is work a little

223
00:11:10,700 --> 00:11:12,600
It with this stuff, right?

224
00:11:15,000 --> 00:11:17,800
We also by the way, have a simple zoomed out view for testing.

225
00:11:18,600 --> 00:11:19,900
So we did that to do already.

226
00:11:21,000 --> 00:11:26,400
What I would like to do here is just say, okay, for I want to take a

227
00:11:26,400 --> 00:11:30,100
look at this stuff, one thing that I want to do is I want to let

228
00:11:30,100 --> 00:11:34,700
combine Sim region and world, and I'll talk about that in a second and

229
00:11:34,700 --> 00:11:37,400
then we could take a look at some of these things when we're doing

230
00:11:37,400 --> 00:11:37,900
that.

231
00:11:38,500 --> 00:11:38,900
Okay.

232
00:11:39,300 --> 00:11:40,600
So here's

233
00:11:40,700 --> 00:11:44,200
Is the situation as it stands at the moment, right?

234
00:11:44,800 --> 00:11:45,500
Right now.

235
00:11:45,500 --> 00:11:47,300
We kind of have this situation.

236
00:11:47,500 --> 00:11:49,100
What day are we on here day 340?

237
00:11:49,100 --> 00:11:49,500
Yeah.

238
00:11:53,400 --> 00:11:58,700
so right now, we kind of have this situation where we have two pieces

239
00:11:58,700 --> 00:11:59,400
of code,

240
00:12:00,000 --> 00:12:04,400
Is the same region and there's the world, right?

241
00:12:05,600 --> 00:12:08,700
And I like part, there's there's things I like about this system.

242
00:12:08,700 --> 00:12:11,300
I like it quite a bit so far the way that it's working.

243
00:12:11,600 --> 00:12:15,400
And the idea here is that this is, you know, potentially compressed

244
00:12:15,400 --> 00:12:17,100
storage, its compressive.

245
00:12:17,100 --> 00:12:19,300
It's potentially out of core, right?

246
00:12:19,400 --> 00:12:20,600
We could Implement a thing.

247
00:12:20,600 --> 00:12:24,000
If we wanted to where we paged out two pieces of the world and then

248
00:12:24,000 --> 00:12:25,000
page them back in.

249
00:12:27,000 --> 00:12:29,800
So this is almost, this is almost like a database

250
00:12:30,000 --> 00:12:33,400
Style thing where it's like this external sort of thing that we talked

251
00:12:33,400 --> 00:12:37,000
to when we need to kind of pull in what entities are wear and it's

252
00:12:37,000 --> 00:12:40,200
like, a spatial query and kind of thing where we can unpack them and

253
00:12:40,200 --> 00:12:41,300
pull them in, right?

254
00:12:41,500 --> 00:12:45,400
And then we have the same region, which is, you know, the sort of the

255
00:12:45,400 --> 00:12:50,600
the runtime right bit where we unpack everything it's uncompressed,

256
00:12:50,800 --> 00:12:51,100
right.

257
00:12:51,100 --> 00:12:53,400
So the entities are actually fully occupying.

258
00:12:53,400 --> 00:12:53,800
The space.

259
00:12:53,800 --> 00:12:55,700
They were it's in core.

260
00:12:55,700 --> 00:12:58,800
It can't be you know it's going to have to fit entirely in memory,

261
00:12:58,800 --> 00:12:59,100
right?

262
00:12:59,100 --> 00:12:59,900
Obviously, which is

263
00:13:00,000 --> 00:13:02,900
Big deal because it's only a little thing.

264
00:13:02,900 --> 00:13:03,900
It's local, right?

265
00:13:03,900 --> 00:13:04,900
This is global.

266
00:13:07,500 --> 00:13:10,800
And right now we kind of have this sort of thing.

267
00:13:13,200 --> 00:13:14,500
It's a little bit janky.

268
00:13:14,700 --> 00:13:19,000
The reason it's a little bit janky is because when you create like

269
00:13:19,000 --> 00:13:22,400
when we're creating things, we really want to be creating things with

270
00:13:22,400 --> 00:13:23,200
a Sim region.

271
00:13:23,500 --> 00:13:27,300
But right now a Sim region is kind of a little confusing in terms of

272
00:13:27,300 --> 00:13:28,600
what it does or how it works.

273
00:13:28,900 --> 00:13:32,900
It's in a separate file from world world in some regions, split things

274
00:13:32,900 --> 00:13:33,800
in a weird way.

275
00:13:33,800 --> 00:13:36,000
For example, the there's

276
00:13:36,300 --> 00:13:39,500
The world file has the thing that does like packing entities.

277
00:13:39,700 --> 00:13:44,000
So like packing entities happens in the in the world but unpacking

278
00:13:44,000 --> 00:13:49,400
them right happens over here and it's a little bit strange it's not

279
00:13:49,400 --> 00:13:52,600
that symmetric the way that it looks and that sort of stuff.

280
00:13:52,700 --> 00:13:58,900
So I don't necessarily know that we've really solidified this stuff to

281
00:13:58,900 --> 00:14:00,900
the degree that I would have preferred.

282
00:14:01,100 --> 00:14:04,600
And so what I want to do right now is I just want to kind of go look

283
00:14:04,600 --> 00:14:05,900
at these two things now

284
00:14:06,100 --> 00:14:10,800
That we pretty much know how they're working and do kind of a couple

285
00:14:10,800 --> 00:14:14,000
just basically do some code inspection.

286
00:14:14,000 --> 00:14:17,100
Just make sure I know kind of what's going on there and see if there's

287
00:14:17,100 --> 00:14:20,400
things that should be moved around or straightened out a little bit.

288
00:14:20,400 --> 00:14:23,300
Now, given the current state of everything where we pretty much know

289
00:14:23,300 --> 00:14:25,000
where everything goes and how it's working.

290
00:14:26,100 --> 00:14:29,400
So, I want to do that and while I'm in there, I would also like to

291
00:14:29,400 --> 00:14:32,600
look at the creation side of things.

292
00:14:33,200 --> 00:14:35,800
So the like the world creation part of things.

293
00:14:36,100 --> 00:14:40,800
Is currently a problem for us in that when we create things in the

294
00:14:40,800 --> 00:14:45,500
world, we have this issue at the moment where we don't actually have

295
00:14:45,500 --> 00:14:50,900
the ability to like, when we unpack things, I'm sorry.

296
00:14:50,900 --> 00:14:54,400
When we create things, they get created in sort of an unpacked State,

297
00:14:54,400 --> 00:14:58,500
and then they get packed into the world and that's how entities are

298
00:14:58,500 --> 00:14:59,100
created right now.

299
00:15:00,000 --> 00:15:03,900
Never a concept of entities getting created inside the Sim region.

300
00:15:05,200 --> 00:15:09,500
But that's really how we want things to go when we're actually going

301
00:15:09,600 --> 00:15:13,300
about creating rooms and stuff the way that we want to do.

302
00:15:13,300 --> 00:15:18,600
Eventually, we definitely have an issue where we want to be able to

303
00:15:18,600 --> 00:15:22,200
say, let's work on this room and all the entities in this room are all

304
00:15:22,200 --> 00:15:24,600
uncompressed at the moment, right?

305
00:15:25,300 --> 00:15:29,000
And will work with all of them and we'll figure out how to make sure

306
00:15:29,000 --> 00:15:31,000
that they're all set to what they need to be set.

307
00:15:31,000 --> 00:15:34,900
And then we'll say like packed this room away and that's

308
00:15:35,000 --> 00:15:39,400
Exactly what we want in terms of how the Sim region worked because

309
00:15:39,400 --> 00:15:43,500
then creating entities and packing entities and all that sort of

310
00:15:43,500 --> 00:15:48,100
stuff, works the same during the gameplay and during World creation,

311
00:15:48,100 --> 00:15:52,100
which I think we want to do because we don't really like we want to be

312
00:15:52,100 --> 00:15:54,800
able to do the same operations in both places, right?

313
00:15:55,100 --> 00:15:58,800
We want to be able to create entities, dynamically at runtime as we

314
00:15:58,800 --> 00:16:01,400
see fit for gameplay, reasons or any other reasons.

315
00:16:02,200 --> 00:16:03,800
And we also want to be able to do that.

316
00:16:03,800 --> 00:16:04,800
Obviously, when we're creating,

317
00:16:04,900 --> 00:16:06,000
The world initially.

318
00:16:06,100 --> 00:16:08,800
And so you know I feel like those things really want to be collapsed

319
00:16:08,800 --> 00:16:10,300
and they don't want to be different.

320
00:16:10,600 --> 00:16:13,600
So that's the kind of thing that I would like to get straightened

321
00:16:13,600 --> 00:16:13,900
away.

322
00:16:13,900 --> 00:16:14,600
That makes sense.

323
00:16:19,700 --> 00:16:22,000
All right, so let's see.

324
00:16:24,200 --> 00:16:25,100
Let us see.

325
00:16:26,400 --> 00:16:28,400
I'm going to go over here to sim region.

326
00:16:30,400 --> 00:16:32,600
And I'm going to see how much code is actually in here.

327
00:16:35,800 --> 00:16:39,800
So you know we've got some queries and stuff in here like get closest

328
00:16:39,800 --> 00:16:46,800
reversible get close entity with brain, get closest, reversible along,

329
00:16:46,800 --> 00:16:47,900
Rea blah blah blah.

330
00:16:48,200 --> 00:16:52,800
We've got move entity transactional, occupy, you know, blah, blah,

331
00:16:52,800 --> 00:16:53,100
blah.

332
00:16:53,200 --> 00:16:55,900
All of these things are simulation oriented.

333
00:16:57,200 --> 00:16:59,800
I don't know that they necessarily belong in Sim, region.

334
00:16:59,800 --> 00:17:04,000
It's hard to say, but some of them certainly do and you can see then

335
00:17:04,000 --> 00:17:04,500
here we have

336
00:17:04,700 --> 00:17:06,700
The begin Sim step, right?

337
00:17:07,200 --> 00:17:09,800
Where we do the packing and unpacking of the entities.

338
00:17:09,800 --> 00:17:11,200
So here, I'm sorry.

339
00:17:11,200 --> 00:17:13,500
The unpacking of the entities, not the packing.

340
00:17:14,700 --> 00:17:17,500
So here is the part where entities are like unpacked.

341
00:17:18,900 --> 00:17:21,300
And we're not really doing much in the way of unpacking and he's right

342
00:17:21,300 --> 00:17:21,500
now.

343
00:17:21,500 --> 00:17:23,599
Really all we do is pointer fix-ups eventually.

344
00:17:23,599 --> 00:17:28,500
That'll do actual compressing of like to put an.

345
00:17:28,500 --> 00:17:31,100
Only the data that we actually care about for a particular entity.

346
00:17:31,100 --> 00:17:35,100
And then here it RN Sim is the place where we call out to the world to

347
00:17:35,100 --> 00:17:37,600
pack our entity stuff in.

348
00:17:37,600 --> 00:17:41,600
And you can see right here here is where we call pack entity into

349
00:17:41,600 --> 00:17:42,300
world.

350
00:17:42,400 --> 00:17:46,900
And now if I understand correctly, you know, from my own memory

351
00:17:46,900 --> 00:17:47,600
basically,

352
00:17:48,700 --> 00:17:50,300
How that sort of thing came about.

353
00:17:50,300 --> 00:17:53,300
I suspect that the reason that we had to do that is when we're doing

354
00:17:53,300 --> 00:17:56,800
these packing, it would make more sense for the packing to exist in

355
00:17:56,800 --> 00:17:57,500
the same region.

356
00:17:57,500 --> 00:17:59,800
Presumably because the same region is the thing that

357
00:18:00,000 --> 00:18:04,100
Accident packs things, you know, to operate on them during the

358
00:18:04,100 --> 00:18:06,100
existence of the same time step.

359
00:18:06,200 --> 00:18:08,600
But you'll notice we don't do that, right?

360
00:18:08,600 --> 00:18:13,000
We have pack entity stuff out here in the handmade world.

361
00:18:13,000 --> 00:18:18,300
I believe the reason that we did that was strictly because we had this

362
00:18:18,300 --> 00:18:23,100
problem with the same regions where we didn't have one at World

363
00:18:23,100 --> 00:18:24,000
creation time.

364
00:18:24,200 --> 00:18:27,900
So when you wanted to create entities, over in the game, you had to do

365
00:18:27,900 --> 00:18:29,900
it calling this code directly.

366
00:18:30,000 --> 00:18:30,300
Ali.

367
00:18:30,400 --> 00:18:34,700
I think the more correct way to do this, probably would be to use the

368
00:18:34,700 --> 00:18:36,000
Sim region itself.

369
00:18:37,500 --> 00:18:38,600
To create stuff.

370
00:18:39,000 --> 00:18:42,800
So that that way we don't have to worry about.

371
00:18:44,800 --> 00:18:48,900
We don't have to deal with the fact that these packet of these stuff

372
00:18:48,900 --> 00:18:51,200
have to be called cold called from somewhere else.

373
00:18:51,700 --> 00:18:54,700
And that way, we can inline all of it and make it like nice and

374
00:18:54,700 --> 00:18:55,700
efficient.

375
00:18:55,800 --> 00:18:58,700
As we sort of figure out more what we need in terms of packing and

376
00:18:58,700 --> 00:19:00,200
unpacking, right?

377
00:19:01,100 --> 00:19:03,300
And so you can kind of imagine what this looks like.

378
00:19:03,300 --> 00:19:08,900
If I was to move this stuff in, let me see what has room for does at

379
00:19:08,900 --> 00:19:13,100
the moment so we do pack it into chunk, right?

380
00:19:13,100 --> 00:19:14,100
That's the thing that that

381
00:19:14,300 --> 00:19:18,200
Actually like sort of checks to see if there's room in the chunk and

382
00:19:18,300 --> 00:19:19,000
grabs one out.

383
00:19:19,000 --> 00:19:23,300
So you know, probably the the has room for a stuff that seems like

384
00:19:23,300 --> 00:19:24,600
stuff that would stay in here.

385
00:19:25,100 --> 00:19:27,800
But this stuff where we do like pack entity reference and packed a

386
00:19:27,800 --> 00:19:28,800
versatile reference.

387
00:19:29,000 --> 00:19:31,700
I feel like that would kind of go in here, right?

388
00:19:34,500 --> 00:19:37,800
And then when we do pack entity into chunk, I think Pat Kennedy into

389
00:19:37,800 --> 00:19:39,800
chunk this code here.

390
00:19:39,800 --> 00:19:45,300
That actually happens to do the packing as opposed to the getting the

391
00:19:45,300 --> 00:19:46,000
room.

392
00:19:46,400 --> 00:19:51,100
I feel like that would just go in here to the end Sim, right?

393
00:19:51,400 --> 00:19:55,300
So when we call n Sim and we're going to call pack entity in Two

394
00:19:55,300 --> 00:19:55,800
Worlds.

395
00:19:55,900 --> 00:20:00,600
I think what we want to do there is we just go ahead and do

396
00:20:02,800 --> 00:20:03,700
That packing.

397
00:20:03,900 --> 00:20:06,500
So I don't really know.

398
00:20:06,600 --> 00:20:09,400
We're going to have to figure out ahead of time how much room we need,

399
00:20:09,400 --> 00:20:12,000
which may be easier said than done.

400
00:20:12,000 --> 00:20:14,400
We'll see when we get to that point in the code.

401
00:20:14,800 --> 00:20:18,800
But assuming that we have it, we know that this is the code that we're

402
00:20:18,800 --> 00:20:20,000
actually using right now.

403
00:20:20,100 --> 00:20:24,600
So this, right, if we actually did, it would be the code that we would

404
00:20:24,600 --> 00:20:27,600
have to use to do the packing, right?

405
00:20:28,500 --> 00:20:31,300
So if we were to say, pack entity, into World, actually,

406
00:20:31,700 --> 00:20:32,800
Turned to us.

407
00:20:33,900 --> 00:20:34,900
I don't know why.

408
00:20:37,600 --> 00:20:44,000
I cut that part out but we could basically say, alright, this like,

409
00:20:44,000 --> 00:20:48,300
reserve some space in the chunk, and we're just going to return that

410
00:20:48,300 --> 00:20:49,200
death pointer.

411
00:20:49,300 --> 00:20:54,300
So then when we call pack entity into world or whatever, what that's

412
00:20:54,300 --> 00:20:57,600
going to do is that's going to return all the way out, the void star.

413
00:21:01,300 --> 00:21:01,900
Like so.

414
00:21:02,400 --> 00:21:05,200
And then I'm just going to do exactly what it was already doing again.

415
00:21:05,200 --> 00:21:06,800
Like just one step at a time.

416
00:21:07,500 --> 00:21:10,200
I'm just going to go ahead and say when we call Pat Kennedy into

417
00:21:10,200 --> 00:21:15,300
world, I'm going to say that I have a specific size that I want.

418
00:21:15,400 --> 00:21:18,700
You can see the pack size getting passed in here.

419
00:21:18,900 --> 00:21:22,600
It's just a it's just getting created by whatever the size of an end

420
00:21:22,600 --> 00:21:26,100
of the actually is so instead of passing in that Source entity because

421
00:21:26,100 --> 00:21:29,000
it doesn't actually need that, I'm just going to have it pass in what

422
00:21:29,000 --> 00:21:30,100
the pack size actually.

423
00:21:30,200 --> 00:21:31,600
I was, right?

424
00:21:33,900 --> 00:21:36,800
So that means this guy here will just pass in.

425
00:21:37,200 --> 00:21:42,100
Hey, you know what, I want to size this, to be the size of my source,

426
00:21:42,100 --> 00:21:44,500
entity The Source entity itself, right?

427
00:21:44,500 --> 00:21:45,700
Was just this.

428
00:21:45,900 --> 00:21:49,900
So that means I should be able to say, like, okay, whatever the size

429
00:21:49,900 --> 00:21:55,300
of the entity structure is, that's what I want you to give me packing

430
00:21:55,300 --> 00:21:57,200
size for then.

431
00:21:57,200 --> 00:22:00,100
When we get that back, I'm going to go ahead.

432
00:22:00,200 --> 00:22:02,400
Ed and copy it over, you know.

433
00:22:02,400 --> 00:22:05,900
So I'll take the end of the pointer that I had and copy it.

434
00:22:06,000 --> 00:22:10,200
Then I'll do my packing and then I'll be done, right?

435
00:22:11,800 --> 00:22:14,600
So that's all I wanted to do there here.

436
00:22:14,600 --> 00:22:17,600
I think all we really need to do is say well, whenever you're going to

437
00:22:17,600 --> 00:22:21,000
do the packing, just give us an actual pack size.

438
00:22:21,800 --> 00:22:25,800
That's how we're going to know how much space to reserve.

439
00:22:26,000 --> 00:22:32,500
I'll have to pass that through as well here, like so, and then this

440
00:22:32,500 --> 00:22:34,000
pack entity into World bit.

441
00:22:34,000 --> 00:22:38,100
When we do end entity, and begin entity for the for the stuff in the

442
00:22:38,100 --> 00:22:39,900
game, that is the stuff I'm talking about.

443
00:22:39,900 --> 00:22:41,400
That's going to have to change, right?

444
00:22:41,700 --> 00:22:44,800
We're going to need a SIM region for that, and we're going to have to

445
00:22:44,800 --> 00:22:46,800
make the world creation code work.

446
00:22:46,800 --> 00:22:48,700
A little bit more senior there, right?

447
00:22:50,200 --> 00:22:51,300
But that's not too bad.

448
00:22:52,400 --> 00:22:54,700
Okay, so let's see.

449
00:22:54,700 --> 00:22:58,300
So now I feel like these need to be named more properly.

450
00:22:58,400 --> 00:23:04,900
So instead of pack entity into chunk, this is just like, you know,

451
00:23:04,900 --> 00:23:09,700
Reserve or or, you know, acquire chunks face or something like this.

452
00:23:09,800 --> 00:23:10,300
Right?

453
00:23:11,900 --> 00:23:14,900
For like, use chunk space.

454
00:23:15,200 --> 00:23:19,800
Sighs just called the size.

455
00:23:19,800 --> 00:23:24,700
So that's how much we want to actually use.

456
00:23:24,700 --> 00:23:28,700
So we call use chunk space, that's all we're going to do.

457
00:23:28,700 --> 00:23:32,500
And this would also do it.

458
00:23:32,500 --> 00:23:35,300
We could just have these be overloaded functions.

459
00:23:35,300 --> 00:23:36,500
They do exact same thing.

460
00:23:36,500 --> 00:23:40,800
It's just whether or not you need it to find out where you're going to

461
00:23:40,800 --> 00:23:43,100
pack it or not, right?

462
00:23:43,100 --> 00:23:45,100
So now we just have

463
00:23:45,200 --> 00:23:46,800
have used chunk space.

464
00:23:52,400 --> 00:23:53,100
Like so.

465
00:23:56,000 --> 00:23:58,400
And now it's pretty clear what that does, right?

466
00:23:58,600 --> 00:23:59,800
It just kind of like keeps

467
00:24:00,000 --> 00:24:03,100
Grabbing space from the chunk and getting more if it needs to and off

468
00:24:03,100 --> 00:24:03,600
you go.

469
00:24:04,200 --> 00:24:07,500
So, now we have the ability to sort of like, treat that as a separate

470
00:24:07,500 --> 00:24:07,800
thing.

471
00:24:07,800 --> 00:24:11,100
And like I said, the only problem that we run into now is we don't

472
00:24:11,100 --> 00:24:15,600
have the ability to call the packing externally, which is the only

473
00:24:15,600 --> 00:24:15,900
reason.

474
00:24:15,900 --> 00:24:18,500
Like I said that, that ever would have been happening before is

475
00:24:18,500 --> 00:24:21,200
specifically during World creation time.

476
00:24:21,200 --> 00:24:23,600
And I assume that we just kind of put this in without thinking about

477
00:24:23,600 --> 00:24:26,700
it too much because we were just trying to keep the Old World

478
00:24:26,700 --> 00:24:29,900
Generation code working for a while while we were doing other things.

479
00:24:30,000 --> 00:24:30,500
Things, right?

480
00:24:30,500 --> 00:24:34,500
So we probably weren't thinking particularly much about how we wanted

481
00:24:34,600 --> 00:24:36,100
that stuff to work anyway.

482
00:24:37,300 --> 00:24:37,900
So,

483
00:24:43,000 --> 00:24:44,500
What we need to do now.

484
00:24:46,300 --> 00:24:49,900
Is when we are creating things so you can kind of see like we do add

485
00:24:49,900 --> 00:24:52,200
familiar and that sort of stuff.

486
00:24:53,600 --> 00:24:56,600
What we need to do when we're doing this code now is we're going to

487
00:24:56,600 --> 00:25:01,300
have to do stuff where we can know that.

488
00:25:01,300 --> 00:25:04,900
We're putting things into a particular Sim region, right?

489
00:25:04,900 --> 00:25:08,500
We need a tan opensim region so that we can do the operations that we

490
00:25:08,500 --> 00:25:12,200
want to do on the same region and then pack it down when we're done.

491
00:25:12,800 --> 00:25:15,700
Now, one of the interesting things about this is

492
00:25:15,800 --> 00:25:20,800
That we kind of have an odd situation when it comes to non simulation

493
00:25:20,800 --> 00:25:21,300
stuff.

494
00:25:21,800 --> 00:25:25,300
When we're doing World Generation, we can actually cheat as much as we

495
00:25:25,300 --> 00:25:30,200
want because although the Sim region is conceptually a collection of

496
00:25:30,200 --> 00:25:33,500
entities that are all in the same place.

497
00:25:35,800 --> 00:25:40,100
There's actually no need for them to all be in the same place.

498
00:25:40,300 --> 00:25:44,100
If you don't want to do Collision detection other things on them so we

499
00:25:44,100 --> 00:25:47,900
can easily take a SIM region that's been opened up in one part of the

500
00:25:47,900 --> 00:25:51,300
world and we can stuff in entity in there that's actually on the other

501
00:25:51,300 --> 00:25:55,100
side of the world and it would not actually affect the functioning of

502
00:25:55,100 --> 00:25:57,700
the same region at least not as we've currently written it.

503
00:25:57,800 --> 00:26:00,900
Because as far as the same region is concerned, there's just a set of

504
00:26:00,900 --> 00:26:05,300
entities in an array and where those entities are is strictly a

505
00:26:05,500 --> 00:26:10,600
Out how those entities came into the Sim region, that is the only

506
00:26:10,600 --> 00:26:12,900
thing that actually groups them together.

507
00:26:12,900 --> 00:26:16,200
And when they get saved back out of the same region, they are saved

508
00:26:16,200 --> 00:26:19,600
back out of the same region based on whatever their current location

509
00:26:19,600 --> 00:26:19,800
is.

510
00:26:20,100 --> 00:26:23,600
And if that location was somewhere else in the world entirely doesn't

511
00:26:23,600 --> 00:26:24,700
matter, right?

512
00:26:26,900 --> 00:26:31,900
So that's really the thing that that I think I'm going to do first

513
00:26:32,000 --> 00:26:36,900
because why not is instead of trying to do something fancy, where we

514
00:26:36,900 --> 00:26:40,100
actually start doing some of the world gencode, which I don't really

515
00:26:40,100 --> 00:26:42,600
want to do right now because I'd really like to finish up some of this

516
00:26:42,600 --> 00:26:45,300
engine stuff because we're kind of close to having that, you know,

517
00:26:45,300 --> 00:26:48,800
having sings that I can, sort of say, I'm happy with their, how, our

518
00:26:48,800 --> 00:26:49,300
stuff is.

519
00:26:49,300 --> 00:26:50,600
And we're ready to move forward.

520
00:26:51,700 --> 00:26:55,700
So I don't really want to move on to World gen yet, but I would like

521
00:26:55,700 --> 00:26:56,100
to keep

522
00:26:56,200 --> 00:26:59,700
keep our current world Jen working since it's what we use for testing,

523
00:27:00,100 --> 00:27:02,900
And so, I think the easiest way to do that is just to open a Sim

524
00:27:02,900 --> 00:27:06,100
region at the beginning, plow all of the entities that were creating

525
00:27:06,100 --> 00:27:09,600
into our Sim region and thus, in region and that will pack back,

526
00:27:09,700 --> 00:27:10,300
right?

527
00:27:10,500 --> 00:27:14,700
So we really can just abuse the Sim region here temporarily.

528
00:27:14,700 --> 00:27:17,600
You know, there may be reasons down the road, why we wouldn't want to

529
00:27:17,600 --> 00:27:20,900
keep doing that when we were actually doing creation but certainly

530
00:27:20,900 --> 00:27:22,600
right now we can totally do that.

531
00:27:22,600 --> 00:27:23,800
It's not an issue at all.

532
00:27:25,100 --> 00:27:30,000
And so, all I really need to do here is, is sort of take this this

533
00:27:30,200 --> 00:27:33,900
system where we do beginning to the end end entity, I can just go

534
00:27:33,900 --> 00:27:39,600
ahead and first of all, eliminate the need to do and entity at all.

535
00:27:39,700 --> 00:27:39,900
Right.

536
00:27:39,900 --> 00:27:41,500
That's not necessary anymore.

537
00:27:41,800 --> 00:27:46,100
In fact, I'm not and I think that will kind of be nice because we can

538
00:27:46,100 --> 00:27:49,100
just do begin entity anytime we want, and then I'll add it to the same

539
00:27:49,100 --> 00:27:49,400
region.

540
00:27:49,400 --> 00:27:51,700
And then we know in the same region gets closed, all of those entities

541
00:27:51,700 --> 00:27:54,200
will get packed up automatically for us, right?

542
00:27:56,700 --> 00:27:57,200
Okay.

543
00:27:57,600 --> 00:28:01,800
So for right now, what we're going to do is I guess we just, you know,

544
00:28:01,800 --> 00:28:05,600
we don't even need to call like that or anything.

545
00:28:05,700 --> 00:28:07,200
You don't need to call this anymore.

546
00:28:07,200 --> 00:28:09,000
We don't need to do that, right?

547
00:28:09,200 --> 00:28:11,000
We don't need to do any of these things.

548
00:28:11,600 --> 00:28:14,700
And so really all we're going to have is just these two things to do

549
00:28:15,100 --> 00:28:16,900
and then later I'll collapse these.

550
00:28:17,400 --> 00:28:21,100
So that the world position P stuff is just happening automatically up

551
00:28:21,100 --> 00:28:25,200
in here so that you don't have to do and entity with the world

552
00:28:25,200 --> 00:28:25,600
position.

553
00:28:25,800 --> 00:28:29,700
We then we can get rid of the entity call altogether, right?

554
00:28:31,000 --> 00:28:34,600
Okay, so when you call begin entity, what we actually want to do, is

555
00:28:34,600 --> 00:28:38,300
we actually want that to be a create entity call, and we want that

556
00:28:38,300 --> 00:28:42,000
create entity call to happen on the same region, right?

557
00:28:43,600 --> 00:28:48,700
Now, I don't know if we've ever created a v before we probably haven't

558
00:28:48,700 --> 00:28:51,800
because we probably had no reason to do that during Gameplay at the

559
00:28:51,800 --> 00:28:52,500
moment.

560
00:28:52,700 --> 00:28:56,200
We don't have any projectiles that we create at the moment.

561
00:28:56,400 --> 00:28:59,800
So I don't really know that there's ever been a case where this has

562
00:28:59,800 --> 00:29:00,400
happened.

563
00:29:01,100 --> 00:29:06,900
So, what we want to do here is just say, like, okay let's make a call

564
00:29:07,000 --> 00:29:10,200
that'll happen in here because we have a delete entity call.

565
00:29:10,300 --> 00:29:10,800
Right?

566
00:29:11,200 --> 00:29:12,300
Let's make a call this.

567
00:29:12,300 --> 00:29:13,300
Just like an ad and

568
00:29:14,400 --> 00:29:14,900
Right.

569
00:29:16,700 --> 00:29:19,600
Something that since we can delete one, we can also create one.

570
00:29:20,000 --> 00:29:26,000
When you pass the region, it will pass you an entity back and I think

571
00:29:26,000 --> 00:29:29,200
all we really need to do there is say, well, we've got the entity hash

572
00:29:29,200 --> 00:29:29,600
here.

573
00:29:33,600 --> 00:29:35,400
And we've got the max entity count.

574
00:29:35,400 --> 00:29:39,700
So all we really have to do is just add you know the this entity in

575
00:29:39,800 --> 00:29:43,700
and make sure that it gets hashed into the appropriate location for

576
00:29:43,700 --> 00:29:44,800
its ID value.

577
00:29:45,000 --> 00:29:48,800
So when we do create entity, I assume what we want to do is pass the

578
00:29:48,800 --> 00:29:50,700
entity ID, right?

579
00:29:50,800 --> 00:29:52,900
We want to pass a one of these

580
00:29:55,200 --> 00:29:59,400
and that's the The Entity that the idea that it will get and we'll

581
00:29:59,400 --> 00:29:59,900
want to make sure

582
00:30:00,000 --> 00:30:03,000
We inserted into the hash but that's about all we would need to do.

583
00:30:04,200 --> 00:30:06,000
So let's go ahead and do that.

584
00:30:07,000 --> 00:30:10,100
I've got to do something here, which is kind of just a random thing.

585
00:30:14,500 --> 00:30:18,700
Obviously we don't at the moment, expand the same region if we have

586
00:30:18,700 --> 00:30:20,400
too many entities, right?

587
00:30:20,400 --> 00:30:23,800
If we exceed the max entity count number of entities in the same

588
00:30:23,800 --> 00:30:27,100
region, we don't expand it to be able to hold more.

589
00:30:27,800 --> 00:30:30,400
Now we might want to do that in the future but I don't want to do that

590
00:30:30,400 --> 00:30:34,100
right now and I don't actually know if I'm going to ever do that in

591
00:30:34,100 --> 00:30:34,600
the future.

592
00:30:34,800 --> 00:30:38,500
I might require that you always have a hard limit because I just don't

593
00:30:38,500 --> 00:30:41,000
want to deal with the possibilities of what happens when you overflow

594
00:30:41,000 --> 00:30:41,400
there.

595
00:30:41,400 --> 00:30:44,000
And whether that's getting tested well enough and blah blah blah.

596
00:30:44,800 --> 00:30:46,900
So what I'm going to do instead is I'm going to make a thing called

597
00:30:46,900 --> 00:30:47,700
the null entity.

598
00:30:49,500 --> 00:30:52,800
And what the nullity is going to be is just a thing that if you try to

599
00:30:52,800 --> 00:30:56,000
create identity and for some reason, you have hit the hard cap in

600
00:30:56,000 --> 00:30:56,600
debug mode.

601
00:30:56,600 --> 00:30:59,700
We would certainly assert so that we know that we've hit the hard cap

602
00:31:00,800 --> 00:31:03,700
but rather than just having that crash the game or something at that

603
00:31:03,700 --> 00:31:04,200
point.

604
00:31:04,200 --> 00:31:06,900
Just in case we ever hit it an actual release mode.

605
00:31:07,100 --> 00:31:10,800
I'm just going to have it returned the nullity instead and that way

606
00:31:10,800 --> 00:31:13,500
there's at least a chance that the game will keep running properly.

607
00:31:14,100 --> 00:31:18,000
The Entity that was going to get created will not get created, but at

608
00:31:18,000 --> 00:31:19,100
least the game doesn't count.

609
00:31:19,300 --> 00:31:21,800
Obviously fail right now.

610
00:31:21,800 --> 00:31:24,800
You might argue that that's not particularly good idea because hey,

611
00:31:24,800 --> 00:31:27,100
now you've just got this kind of like quiet bug in the game.

612
00:31:27,600 --> 00:31:29,100
I wouldn't necessarily disagree with you.

613
00:31:29,600 --> 00:31:30,200
What can I say?

614
00:31:30,200 --> 00:31:33,600
It's my code that just happens to be the flavor that I want at the

615
00:31:33,600 --> 00:31:37,400
moment and we are always free to revisit that decision in the future.

616
00:31:37,400 --> 00:31:40,100
If it turns out to create problems for us,

617
00:31:41,300 --> 00:31:45,700
So here is another entity in the the same region, right?

618
00:31:45,700 --> 00:31:48,500
And what I'm going to do is I'm going to start off by assuming that

619
00:31:48,500 --> 00:31:50,200
like that's the result, right?

620
00:31:50,300 --> 00:31:53,500
So if something bad happened and we couldn't get an entity, the way

621
00:31:53,500 --> 00:31:56,200
that we wanted to, we would just return that one.

622
00:31:57,500 --> 00:32:01,700
Okay, so the next thing I'm going to do is say, all right, I know that

623
00:32:01,700 --> 00:32:05,400
we've got a Max entity count and I know that we have an entity count.

624
00:32:06,800 --> 00:32:09,600
And so, I'm going to say, if the entity count is less than the maximum

625
00:32:09,600 --> 00:32:10,000
of the count.

626
00:32:10,000 --> 00:32:12,000
Then I know I can actually add one.

627
00:32:12,200 --> 00:32:16,200
And at that point, I know that I've got the entities array, whatever

628
00:32:16,200 --> 00:32:19,900
that entities array is, plus the entity count that we currently have.

629
00:32:19,900 --> 00:32:22,700
That's like the next empty slot, right?

630
00:32:22,800 --> 00:32:25,200
And then if I increment it there, I'm going to move the pointer Pat.

631
00:32:25,200 --> 00:32:28,600
I'm going to move the count past so that the next time through we dad

632
00:32:28,600 --> 00:32:29,200
in the next slot.

633
00:32:29,200 --> 00:32:29,800
And so on.

634
00:32:30,600 --> 00:32:34,300
If we don't have the ability to add one here, I'm going to insert a

635
00:32:34,300 --> 00:32:36,500
cert rather so that we

636
00:32:36,600 --> 00:32:39,100
Know that we've hit a code path that we really don't ever want to be

637
00:32:39,100 --> 00:32:40,500
kidding and probably something's wrong.

638
00:32:40,500 --> 00:32:41,900
That needs to get fixed that way.

639
00:32:41,900 --> 00:32:43,800
It won't happen silently and debug mode.

640
00:32:45,400 --> 00:32:47,500
As I said, it's really not a good situation for us to be in.

641
00:32:52,100 --> 00:32:55,300
Okay, after I create an entity, I'm going to return it.

642
00:32:56,900 --> 00:32:59,100
I don't know whether I want to do this here.

643
00:33:00,000 --> 00:33:04,700
I'm going to like keep this in mind, right?

644
00:33:06,600 --> 00:33:09,000
Because I do believe that that was a valid thing to say.

645
00:33:10,100 --> 00:33:13,900
And so I want to go ahead and make sure that we think about that a

646
00:33:13,900 --> 00:33:15,500
little bit in the future potentially.

647
00:33:16,400 --> 00:33:21,100
So that's how we create an entity there, when we create it will Zero

648
00:33:21,100 --> 00:33:24,200
stretch the struct as we you know, create a new one.

649
00:33:28,600 --> 00:33:29,700
And then we'll just return it.

650
00:33:30,400 --> 00:33:33,800
So that's really all we need to do to create an entity now, because

651
00:33:33,800 --> 00:33:35,000
they passed in an ID.

652
00:33:35,900 --> 00:33:38,900
We also, now want to put it into the hash properly, so that other

653
00:33:38,900 --> 00:33:42,100
people who are looking for this entity, can find this entity while

654
00:33:42,100 --> 00:33:44,200
we're doing creation stuff, or things like that.

655
00:33:45,500 --> 00:33:49,300
So after we 0 everything, we want to set the ID to the idea that we've

656
00:33:49,300 --> 00:33:53,300
had passed and we want to insert the entity entity into the hash

657
00:33:53,300 --> 00:33:53,800
table.

658
00:33:54,500 --> 00:33:57,300
Now, if that's been already pulled out, then we'll just call it.

659
00:33:57,300 --> 00:34:02,500
If it hasn't, then we will go ahead and ensure that it actually gets

660
00:34:02,500 --> 00:34:05,700
pulled out into a separate function that we can then use.

661
00:34:06,700 --> 00:34:07,800
So let's see here.

662
00:34:08,699 --> 00:34:09,400
Entry.

663
00:34:12,400 --> 00:34:19,000
So it looks like right now we I'm not sure why exactly were doing this

664
00:34:19,000 --> 00:34:20,300
the way we're doing it.

665
00:34:21,400 --> 00:34:28,000
So the question is, why are we adding to the hash outside of the

666
00:34:28,000 --> 00:34:28,500
bounds?

667
00:34:28,500 --> 00:34:32,400
Check right like why are we bothering calling?

668
00:34:32,400 --> 00:34:33,699
Get hash from ID.

669
00:34:37,300 --> 00:34:40,199
Because we don't even switch on that at all.

670
00:34:41,600 --> 00:34:45,100
It doesn't make a whole lot of sense If we're honest about it.

671
00:34:46,300 --> 00:34:46,800
You know.

672
00:34:49,699 --> 00:34:52,600
Like, it feels like that should be inside.

673
00:34:52,800 --> 00:34:58,600
In fact, it feels like this should just be a condition of the loop,

674
00:34:58,900 --> 00:34:59,500
right?

675
00:34:59,500 --> 00:35:03,800
It feels like, it's just like, hey, don't even bother coming in here.

676
00:35:04,000 --> 00:35:08,700
If you can't add, you know, any more entities right?

677
00:35:08,900 --> 00:35:10,600
Because it wouldn't even make sense.

678
00:35:10,800 --> 00:35:14,200
So I feel like, unless there's something, let me see what's going on.

679
00:35:14,200 --> 00:35:16,400
Get hash for my ID.

680
00:35:20,300 --> 00:35:24,000
Yeah, so if we're calling get Hashem ID here, it just doesn't seem to

681
00:35:24,000 --> 00:35:25,500
make a whole lot of sense.

682
00:35:34,300 --> 00:35:36,300
It just doesn't seem to make a whole lot of sense.

683
00:35:40,700 --> 00:35:43,900
So when we call get Hashem ID, we're going to get back in entity, hash

684
00:35:43,900 --> 00:35:47,600
function entity, hash pointer that stores information about The

685
00:35:47,600 --> 00:35:48,100
Entity.

686
00:35:48,400 --> 00:35:53,000
You can see that this kind of goes through all of the possible

687
00:35:53,000 --> 00:35:57,700
colliders here and looks for one place where I can stick it and it

688
00:35:57,700 --> 00:35:59,800
looks like this is kind of almost a silent bug.

689
00:36:00,000 --> 00:36:06,500
In a way because if you look The Entity hash has 4096 entries in it?

690
00:36:07,200 --> 00:36:12,900
And if we look at begin Sim when we actually push on the number of

691
00:36:12,900 --> 00:36:20,400
entities that's also 4096 and so you know that just doesn't make any

692
00:36:20,400 --> 00:36:24,800
sense because it means that we would start overflowing the hash bound.

693
00:36:25,800 --> 00:36:27,200
So we really just don't.

694
00:36:27,200 --> 00:36:29,400
This is just not right like

695
00:36:30,000 --> 00:36:34,200
This should look like this because until such time as we can verify

696
00:36:34,200 --> 00:36:36,200
that we could actually add the thing in.

697
00:36:36,400 --> 00:36:39,300
And I mean, we might as well just go full pull and say, hey, right?

698
00:36:41,500 --> 00:36:43,800
And furthermore, we could look, I said just make it in here.

699
00:36:46,200 --> 00:36:50,000
So while there's something to add in the block and you could actually

700
00:36:50,200 --> 00:36:54,000
bother adding anything keep going, right?

701
00:36:57,200 --> 00:36:59,700
Although I guess now, I think about it if I do it that way, I can't

702
00:36:59,700 --> 00:37:00,600
have the invalid code.

703
00:37:00,600 --> 00:37:02,100
I would like an assertion there.

704
00:37:05,300 --> 00:37:08,800
Right, so I guess I'll just leave it inside for that reason.

705
00:37:08,800 --> 00:37:13,300
Just just to make sure that this if path is still there, I'm going to

706
00:37:13,300 --> 00:37:16,300
switch windows so I'm not I don't have my head obscuring things.

707
00:37:18,100 --> 00:37:18,700
So yeah.

708
00:37:18,700 --> 00:37:23,200
So when that happens you can kind of see that we actually do.

709
00:37:23,200 --> 00:37:24,600
Do this in two steps here.

710
00:37:24,800 --> 00:37:29,200
When we call get Hashem ID, assert The Entity pointer is 0 and then we

711
00:37:29,200 --> 00:37:30,400
will set these up.

712
00:37:31,200 --> 00:37:34,400
You can kind of see that if I wanted to I could reorganize this piece

713
00:37:34,400 --> 00:37:35,000
of code.

714
00:37:35,500 --> 00:37:41,000
To work very clearly in a fashion that would have this idea stuff get

715
00:37:41,000 --> 00:37:42,000
set up properly.

716
00:37:43,500 --> 00:37:50,100
So what I want to do is collapse this down into one function that gets

717
00:37:50,100 --> 00:37:53,900
called regardless of how you create the entity, right?

718
00:37:54,500 --> 00:38:00,900
So what I want here is a thing that's like inline void, add entity to

719
00:38:00,900 --> 00:38:09,100
hash, and I want to take this and put it in here and it, you know,

720
00:38:10,700 --> 00:38:15,800
I got a pass my sim region in and I got a pass my entity ID.

721
00:38:17,200 --> 00:38:19,100
But then after that, all I need to know.

722
00:38:19,100 --> 00:38:22,900
Is what am I actually storing here for the entity pointer.

723
00:38:27,700 --> 00:38:28,200
Right?

724
00:38:28,700 --> 00:38:30,900
So what I do additive the hash that should work.

725
00:38:30,900 --> 00:38:35,000
Now what I could do here as well, is just say a Dandy to Hash actually

726
00:38:35,000 --> 00:38:40,100
demands that you use the the entities ID field that's inside it.

727
00:38:40,800 --> 00:38:44,900
That would probably make sense as well so I'll just leave it like that

728
00:38:44,900 --> 00:38:47,700
for now and then we'll just change this to be.

729
00:38:47,700 --> 00:38:48,600
Hey, okay.

730
00:38:48,900 --> 00:38:54,400
So when we grab out this desk guy, you know, I will

731
00:38:57,100 --> 00:38:59,700
I guess I'm not sure when we do the decompression step.

732
00:39:00,100 --> 00:39:04,200
I guess I would want to do it here and say, okay,

733
00:39:06,200 --> 00:39:08,000
a Dandy to hash,

734
00:39:09,200 --> 00:39:14,600
And pass the Sim region and the entity which is desk.

735
00:39:15,400 --> 00:39:18,300
And I have to set that first, right?

736
00:39:18,300 --> 00:39:23,500
Like so I suppose that would be something actually that we get set up

737
00:39:23,500 --> 00:39:27,400
here and then this could get deleted.

738
00:39:28,300 --> 00:39:29,200
Presumably.

739
00:39:31,200 --> 00:39:31,900
So yeah.

740
00:39:36,200 --> 00:39:40,000
So then we come down here and we're doing create entity, what we would

741
00:39:40,000 --> 00:39:43,600
need to do, is after we set that, we'd have to say, identity to hash

742
00:39:44,400 --> 00:39:48,400
and so, that way, we could actually put the entity into the hash table

743
00:39:48,400 --> 00:39:52,300
and it would now be capable of being looked up.

744
00:39:53,700 --> 00:39:57,700
In this case, I just have some typos.

745
00:39:57,700 --> 00:39:59,300
So nothing to worry about there.

746
00:40:00,100 --> 00:40:03,900
All right, so now we just have to actually get this entity stuff.

747
00:40:04,700 --> 00:40:05,300
You know, we have to

748
00:40:05,500 --> 00:40:07,300
Have a SIM reagent, actually get it from.

749
00:40:08,000 --> 00:40:10,900
So what I'd like to do here is just say, well, let's take a quick

750
00:40:10,900 --> 00:40:11,400
look.

751
00:40:11,900 --> 00:40:14,000
Maybe we can just store that in the world.

752
00:40:14,000 --> 00:40:15,000
No temporarily.

753
00:40:15,700 --> 00:40:19,300
Because like I said, this is only for getting our kind of current like

754
00:40:19,300 --> 00:40:23,100
hacky sort of world Jen that we're just using, for testing, working

755
00:40:23,100 --> 00:40:23,700
properly.

756
00:40:24,100 --> 00:40:27,500
So if I wanted to do that, all I need to be able to do is say, okay,

757
00:40:28,200 --> 00:40:29,600
give me back an entity.

758
00:40:32,100 --> 00:40:35,300
Using the world mode like creation region or something like that,

759
00:40:35,900 --> 00:40:36,300
right?

760
00:40:36,400 --> 00:40:39,700
If there isn't one of those, we will just crash because this is just a

761
00:40:39,700 --> 00:40:41,500
test code, we don't care.

762
00:40:41,500 --> 00:40:45,100
So we should never, you should never be calling this without it, if

763
00:40:45,100 --> 00:40:45,800
that makes sense.

764
00:40:46,900 --> 00:40:50,600
Okay, so when we do a create entity and we pass one of those, all we

765
00:40:50,600 --> 00:40:53,800
need to know is what the entity ID is going to be.

766
00:40:53,800 --> 00:40:58,700
We know what that is here, so I can essentially have a thing that's

767
00:40:58,700 --> 00:41:00,800
just internal entity ID.

768
00:41:01,700 --> 00:41:07,900
That's like allocate or you know, allocate entity ID and that would be

769
00:41:07,900 --> 00:41:13,300
something that takes the game-mode world like so it comes in here and

770
00:41:13,300 --> 00:41:20,800
says there you go right going to be ID result equals whatever the next

771
00:41:21,000 --> 00:41:24,200
unique ID was for these entities that were going to look them up on

772
00:41:24,400 --> 00:41:29,400
when we choose to do so and then I will can just call that allocate

773
00:41:29,400 --> 00:41:30,300
entity ID.

774
00:41:31,200 --> 00:41:33,100
And be done, right?

775
00:41:34,900 --> 00:41:38,100
okay, so now what we need to do is actually have that region exists,

776
00:41:39,600 --> 00:41:41,200
that's not particularly hard to do.

777
00:41:42,100 --> 00:41:45,100
And so now we've kind of, I feel like we might be a good shape here

778
00:41:45,100 --> 00:41:47,700
because really, that was a pretty simple piece of surgery to do even

779
00:41:47,700 --> 00:41:50,700
though we kind of drastically changed the way that work because it's

780
00:41:50,700 --> 00:41:53,500
just, I guess we're just, you know, we're doing a reasonable job,

781
00:41:53,500 --> 00:41:55,100
keeping architecture out of control.

782
00:41:55,300 --> 00:41:57,600
Even though it's doing some fairly complicated stuff.

783
00:41:57,600 --> 00:41:59,800
So, hey, it turns out we can just make that change.

784
00:42:00,000 --> 00:42:02,300
And all we really need to do here is just say Well when we're going to

785
00:42:02,300 --> 00:42:05,400
create this stuff where we go to start creating entities.

786
00:42:05,600 --> 00:42:08,300
So and you know, here is the first time

787
00:42:11,000 --> 00:42:11,600
Where are we here?

788
00:42:11,600 --> 00:42:15,600
I guess it would be as bad.

789
00:42:19,200 --> 00:42:21,200
Wall probably.

790
00:42:22,100 --> 00:42:22,600
Yeah.

791
00:42:23,100 --> 00:42:28,000
So I'm guessing like the first thing we do when we come down here,

792
00:42:28,000 --> 00:42:28,200
right?

793
00:42:28,200 --> 00:42:32,000
We haven't added anything yet when we create the world, all we just

794
00:42:32,000 --> 00:42:33,100
make some Collision stuff.

795
00:42:33,200 --> 00:42:36,900
So the first things we do, when we come into your and we start to try

796
00:42:36,900 --> 00:42:40,800
and make stuff is we're going to call AD standard room which is going

797
00:42:40,800 --> 00:42:42,700
to call like add wall and stuff like that.

798
00:42:43,100 --> 00:42:46,500
So really, we just have to, before we try to do any of that, we just

799
00:42:46,500 --> 00:42:48,700
have to do a thing where we'll say, like, okay creation,

800
00:42:48,900 --> 00:42:49,300
Jen.

801
00:42:50,700 --> 00:42:55,400
Equals, you know a new sim, we got to go through here.

802
00:42:58,000 --> 00:42:59,900
Until we're all done, right?

803
00:43:00,300 --> 00:43:05,900
And we've created everything blah blah blah, blah blah and I guess at

804
00:43:05,900 --> 00:43:09,900
that point even know something to add walls there.

805
00:43:09,900 --> 00:43:13,400
I don't even know what that's supposed to be and then we just do an

806
00:43:13,400 --> 00:43:14,100
end region.

807
00:43:18,300 --> 00:43:18,700
Here.

808
00:43:27,200 --> 00:43:28,200
If that makes sense.

809
00:43:29,600 --> 00:43:33,200
So that's really all I want to do again.

810
00:43:33,200 --> 00:43:33,700
Not

811
00:43:34,900 --> 00:43:36,100
Not too fancy there.

812
00:43:36,900 --> 00:43:40,300
But like everything else we need someplace for this thing to actually

813
00:43:40,300 --> 00:43:41,000
operate.

814
00:43:41,000 --> 00:43:41,200
Right.

815
00:43:41,200 --> 00:43:46,100
We need some way for it to actually something for the begin Sim and

816
00:43:46,100 --> 00:43:47,800
simp are to actually work with.

817
00:43:48,400 --> 00:43:53,800
And so inside the Sim region, I believe, when we do begin Sam, right?

818
00:43:54,100 --> 00:44:00,400
We pushed one of these guys on and, you know, we don't have any way at

819
00:44:00,400 --> 00:44:04,600
the moment of cleaning that up, we just use the temporary ban.

820
00:44:04,800 --> 00:44:10,200
Sounds like we use the begin attempt memory and temp memory to make

821
00:44:10,200 --> 00:44:11,400
that work, right?

822
00:44:11,400 --> 00:44:17,500
And so we would need to do the same thing for that here and so if we

823
00:44:17,500 --> 00:44:21,800
want to do that, all we would have to do is say take a look at the the

824
00:44:21,800 --> 00:44:26,700
same way that we were doing this in the other parts of the code,

825
00:44:26,900 --> 00:44:27,500
right?

826
00:44:29,700 --> 00:44:32,700
where we say, alright, the intemperate memory

827
00:44:34,400 --> 00:44:40,300
Pass in the Train Arena and then later we just do the end temporary

828
00:44:40,600 --> 00:44:41,200
memory.

829
00:44:47,300 --> 00:44:47,900
Alexa.

830
00:44:51,100 --> 00:44:53,200
And that's basically it.

831
00:44:53,200 --> 00:44:56,100
So now what we would have to do is just add a place for that to be

832
00:44:56,100 --> 00:44:56,600
stored.

833
00:44:56,600 --> 00:44:59,800
So, in here, you know, when we're talking about

834
00:45:00,000 --> 00:45:03,100
Last use storage index instead of this stuff, we would have a SIM

835
00:45:03,100 --> 00:45:05,200
region pointer that's like the creation region.

836
00:45:06,400 --> 00:45:12,100
And when we do that, n Sim that begins him in that end Sim on the N

837
00:45:12,100 --> 00:45:12,500
Sim.

838
00:45:12,500 --> 00:45:16,800
As soon as we do that, I'm going to set the world mode, creation

839
00:45:16,800 --> 00:45:18,800
Region 20 just in case anyone tries to use it.

840
00:45:18,800 --> 00:45:21,800
It'll crash immediately because I don't want anyone touching it

841
00:45:22,200 --> 00:45:22,700
anymore.

842
00:45:23,500 --> 00:45:25,100
And then when we do begin Sim,

843
00:45:31,900 --> 00:45:36,000
I need to pass the loading bounds, which I don't really care about,

844
00:45:36,000 --> 00:45:38,700
but I can pass basically anything I want here, right?

845
00:45:39,100 --> 00:45:43,000
So when we call begin Sim here, we've got the simmer Reena.

846
00:45:43,000 --> 00:45:46,500
I got a pass the world mode, which we obviously have and the worlds

847
00:45:49,900 --> 00:45:55,200
And then I've got the origin and the bounds, the DT and the particle

848
00:45:55,200 --> 00:45:55,800
cash.

849
00:45:56,500 --> 00:45:58,600
I don't have to pass the particle cash.

850
00:45:58,900 --> 00:46:00,600
It can be zero right?

851
00:46:00,800 --> 00:46:01,700
Which is good.

852
00:46:01,900 --> 00:46:03,100
I don't have a DT.

853
00:46:04,700 --> 00:46:06,600
I don't really want a rectangle 3.

854
00:46:09,700 --> 00:46:14,000
Because I don't want it to load any entities anyway and I don't really

855
00:46:14,000 --> 00:46:16,700
want an origin either.

856
00:46:18,400 --> 00:46:20,600
So really, I'm just kind of calling this as a dummy.

857
00:46:20,600 --> 00:46:25,100
One, that doesn't have anything to do with anything because I just

858
00:46:25,100 --> 00:46:27,900
want one, that's going to temporarily store some stuff for me.

859
00:46:32,500 --> 00:46:34,000
So oops.

860
00:46:40,600 --> 00:46:44,700
So yeah, there we go.

861
00:46:48,600 --> 00:46:49,900
Are we building?

862
00:46:52,600 --> 00:46:55,600
I thought so I was like that build looks slow somehow.

863
00:46:55,600 --> 00:46:57,000
We're still building in in

864
00:46:58,600 --> 00:46:59,400
Optimized mode.

865
00:46:59,400 --> 00:47:00,200
I don't know why.

866
00:47:01,500 --> 00:47:02,000
All right.

867
00:47:02,300 --> 00:47:04,800
So let's see how much damage we've done here.

868
00:47:04,800 --> 00:47:09,900
Now, if we try to run the game what we have destroyed that makes

869
00:47:09,900 --> 00:47:10,300
sense.

870
00:47:12,600 --> 00:47:13,500
So let's take a look.

871
00:47:14,100 --> 00:47:17,200
So problem that we're probably you know, we could easily run into here

872
00:47:18,000 --> 00:47:20,600
is that these regions get oh,

873
00:47:22,700 --> 00:47:24,400
Well, that doesn't look right at all.

874
00:47:26,500 --> 00:47:28,000
Where's my call stack?

875
00:47:29,600 --> 00:47:31,300
You can entity add player.

876
00:47:34,000 --> 00:47:35,700
Update and render worlds?

877
00:47:36,500 --> 00:47:37,200
Yes.

878
00:47:37,700 --> 00:47:41,900
So I guess we do have sort of another situation here which is that

879
00:47:43,700 --> 00:47:50,900
When we do add other things, we sort of add players out of bound to

880
00:47:50,900 --> 00:47:54,800
that world creation process which again is fine.

881
00:47:54,800 --> 00:47:58,800
We just need to make sure that when we actually do something like

882
00:47:58,800 --> 00:47:59,800
that, we

883
00:48:00,000 --> 00:48:03,900
Have some way of actually making that go into the mode.

884
00:48:03,900 --> 00:48:06,600
It needs to go into when you're adding a player, right?

885
00:48:07,200 --> 00:48:10,000
In other words, this would have to be sort of encapsulated.

886
00:48:13,200 --> 00:48:14,500
And use a SIM region.

887
00:48:14,800 --> 00:48:17,200
Now the interesting thing is the same region we actually know about

888
00:48:17,200 --> 00:48:17,600
it.

889
00:48:17,600 --> 00:48:22,200
So if we actually were passing some regions here, we would actually be

890
00:48:22,200 --> 00:48:26,500
fine because we just passed the same region in that we already have

891
00:48:26,500 --> 00:48:29,000
because we know when we add a player that we already have a SIM

892
00:48:29,000 --> 00:48:29,400
region.

893
00:48:31,200 --> 00:48:34,600
So I'll cheese this for now but then maybe we'll just go ahead and

894
00:48:34,900 --> 00:48:37,100
start to unwind that code as well because why not?

895
00:48:37,100 --> 00:48:38,600
We might as well make it a little bit cleaner.

896
00:48:38,800 --> 00:48:42,900
We're going to have to refine this code eventually at least this

897
00:48:43,200 --> 00:48:44,800
Like ads entities and stuff.

898
00:48:44,800 --> 00:48:47,000
So that doesn't seem like a waste of time to me.

899
00:48:48,200 --> 00:48:50,700
You know, it's not the actual world gencode, right?

900
00:48:50,700 --> 00:48:52,200
It's just something that adds entities.

901
00:48:52,700 --> 00:48:56,200
So yeah, the cheese version of this right, is this

902
00:49:00,200 --> 00:49:02,800
The cheese version just sets, an done sets.

903
00:49:05,600 --> 00:49:08,900
The creation region to whatever the Sim region is that we're currently

904
00:49:08,900 --> 00:49:16,200
using, but pretty cheesy because it's pretty easy to mess up, right?

905
00:49:17,300 --> 00:49:20,700
Okay, so let's take a look at now where we're at, we're at game update

906
00:49:20,700 --> 00:49:24,600
and render up to and render worlds were updating brains here.

907
00:49:24,700 --> 00:49:29,700
I guess it does appear so, and we're calling execute brain.

908
00:49:30,200 --> 00:49:33,900
We're try to do a transactional occupy of an occupying segment.

909
00:49:33,900 --> 00:49:35,300
We do the transactional,

910
00:49:35,400 --> 00:49:38,800
Pi, it looks like

911
00:49:39,900 --> 00:49:47,600
It gets back, annul for whatever we're passing now.

912
00:49:47,600 --> 00:49:49,000
That actually looks like

913
00:49:53,000 --> 00:49:58,000
that actually looks like the kind of thing we probably would want to

914
00:49:58,700 --> 00:50:04,200
keep relatively safe anyway, like I'm not sure that this should really

915
00:50:04,200 --> 00:50:06,900
be unguarded, the way that it is like.

916
00:50:07,100 --> 00:50:08,900
It seems like crew returning.

917
00:50:08,900 --> 00:50:11,800
0 here, would be a valid thing.

918
00:50:11,800 --> 00:50:13,300
Like if desired,

919
00:50:15,000 --> 00:50:16,800
And not desired occupier.

920
00:50:18,700 --> 00:50:22,700
So I'm going to change that but we almost certainly still have a bug

921
00:50:22,700 --> 00:50:26,600
because the fact that that wasn't happening before, but I just don't

922
00:50:26,600 --> 00:50:29,500
want to kind of leave that in the code base because that's probably a

923
00:50:29,500 --> 00:50:30,500
bad idea as well.

924
00:50:31,100 --> 00:50:34,000
If you ask me because I feel like that's kind of thing that should be

925
00:50:34,000 --> 00:50:39,200
able to fail if someone just passes like hey can I transaction occupy

926
00:50:39,200 --> 00:50:43,400
this invalid location that I got back from some query that said like

927
00:50:43,400 --> 00:50:44,700
you couldn't go anywhere that's the

928
00:50:44,800 --> 00:50:48,200
Kind of thing that we don't really want to have to guard Upstream all

929
00:50:48,200 --> 00:50:48,900
the time.

930
00:50:49,700 --> 00:50:50,600
And so,

931
00:50:53,100 --> 00:50:54,100
It seems like.

932
00:50:56,500 --> 00:50:59,000
That is just a much better way to do it.

933
00:50:59,200 --> 00:50:59,800
That makes sense.

934
00:51:08,800 --> 00:51:10,400
Max entity velocity.

935
00:51:14,700 --> 00:51:16,600
Yeah, so that's just probably.

936
00:51:16,600 --> 00:51:18,100
I wonder if I can just skip that.

937
00:51:19,700 --> 00:51:20,500
That's just probably.

938
00:51:20,500 --> 00:51:23,600
Again like I said, we probably have a bug here with how we're packing

939
00:51:23,600 --> 00:51:27,600
things down, but since we can't see, we don't really know how bad it

940
00:51:27,600 --> 00:51:28,400
actually is.

941
00:51:28,700 --> 00:51:32,600
However, yeah.

942
00:51:32,600 --> 00:51:33,900
So I'm not going to do.

943
00:51:34,000 --> 00:51:36,200
I'm not going to touch the max velocity thing.

944
00:51:36,400 --> 00:51:37,400
I'm just going to step through.

945
00:51:37,400 --> 00:51:40,500
Now when we actually do some down packs and make sure that they

946
00:51:40,500 --> 00:51:41,900
actually look correct to me.

947
00:51:43,000 --> 00:51:44,900
I'm also going to take a quick look here.

948
00:51:45,700 --> 00:51:46,400
So,

949
00:51:51,100 --> 00:51:52,800
We'll take a quick look at ensign.

950
00:51:54,700 --> 00:51:55,900
Where is my n sin?

951
00:52:00,400 --> 00:52:03,700
I just want to take a quick look at how we're packing down these guys.

952
00:52:14,000 --> 00:52:14,300
Hmm.

953
00:52:18,400 --> 00:52:23,300
All right, so what I want to do is I want to set a breakpoint here so

954
00:52:23,300 --> 00:52:27,200
I can see what's going on when we've created the world.

955
00:52:27,200 --> 00:52:31,400
I want to then go through and set a break point when we're about to

956
00:52:31,400 --> 00:52:33,500
end our world Sims stuff.

957
00:52:33,800 --> 00:52:34,500
Right.

958
00:52:35,500 --> 00:52:41,500
So when we kind of go through here and we do an end Sim, and I'm kind

959
00:52:41,500 --> 00:52:43,300
of grabbing these entities out here.

960
00:52:43,500 --> 00:52:45,600
I want to see what these entities look like that.

961
00:52:45,600 --> 00:52:46,500
I've added.

962
00:52:46,500 --> 00:52:47,400
And also, I'd like to see

963
00:52:47,600 --> 00:52:49,200
Many we added right?

964
00:52:49,200 --> 00:52:51,200
This is the whole world Jenna as it.

965
00:52:52,700 --> 00:52:53,800
Currently stands.

966
00:52:56,200 --> 00:53:00,700
So we added 407 entities, which seems like a reasonable number because

967
00:53:00,700 --> 00:53:05,500
remember all of our ground chunks, all of our ground like things you

968
00:53:05,500 --> 00:53:10,700
can stand on and the trees and the Sprites like everything is a entity

969
00:53:10,700 --> 00:53:11,600
at this point.

970
00:53:12,500 --> 00:53:17,300
So, we would expect that number to be relatively high for the little

971
00:53:17,300 --> 00:53:22,000
rooms that were making, so, alright, that seems like a reasonable

972
00:53:22,000 --> 00:53:23,400
number to have created.

973
00:53:23,400 --> 00:53:26,500
And now I would like to take a look at the entities themselves.

974
00:53:27,000 --> 00:53:30,000
So here is like an entity that's going to get packed down.

975
00:53:30,000 --> 00:53:35,600
It's got an ID of 7 which you know, seems reasonable.

976
00:53:35,600 --> 00:53:39,700
I think that probably was because we reserve some from it space for

977
00:53:39,700 --> 00:53:41,500
other things we've got

978
00:53:44,500 --> 00:53:46,500
No particular brain ID.

979
00:53:46,700 --> 00:53:51,000
No real values here to speak of of anything in particular.

980
00:53:51,300 --> 00:53:54,600
It has the X and y-axis set properly which is good.

981
00:53:54,600 --> 00:53:55,900
That's is what we want.

982
00:53:56,300 --> 00:53:58,200
It's got one traversable on it.

983
00:53:58,900 --> 00:53:59,800
It is not occupied.

984
00:54:00,000 --> 00:54:00,700
Anything.

985
00:54:01,100 --> 00:54:02,100
So that's good.

986
00:54:02,300 --> 00:54:04,400
You can kind of see it's traversable is here.

987
00:54:06,700 --> 00:54:09,100
It is true that that traversable doesn't seem to be set to any

988
00:54:09,100 --> 00:54:09,500
particular.

989
00:54:09,700 --> 00:54:12,800
I'm going to look to make sure that that's just not where it happens

990
00:54:12,800 --> 00:54:13,400
to be.

991
00:54:18,900 --> 00:54:21,600
So that I guess that would make sense to because presumably its

992
00:54:21,600 --> 00:54:24,500
position in the world is just where it's at.

993
00:54:25,300 --> 00:54:27,500
I don't know why it has a hit point array.

994
00:54:27,500 --> 00:54:28,100
That's filled.

995
00:54:28,100 --> 00:54:30,000
Oh, probably just cause the address has changed.

996
00:54:30,900 --> 00:54:34,400
There's this position and they're all at different positions.

997
00:54:34,400 --> 00:54:36,200
Those positions seem reasonable

998
00:54:39,600 --> 00:54:41,500
So, that all actually seems pretty reasonable.

999
00:54:41,700 --> 00:54:42,900
I'm interested to know maybe.

1000
00:54:42,900 --> 00:54:44,300
Did I introduce a problem here?

1001
00:54:44,300 --> 00:54:45,900
We'll find out in a second.

1002
00:54:46,500 --> 00:54:51,300
So, here I am, setting up the entity stuff, you know, placing the

1003
00:54:51,300 --> 00:54:52,800
entity where it needs to go.

1004
00:54:56,000 --> 00:55:01,000
And a DP plus equals chunk Delta well, which is just where it's going

1005
00:55:01,000 --> 00:55:01,700
to be moved to.

1006
00:55:03,500 --> 00:55:04,400
Is that right?

1007
00:55:04,400 --> 00:55:04,900
What a sec.

1008
00:55:04,900 --> 00:55:05,800
What is going on there?

1009
00:55:11,600 --> 00:55:11,900
Jump.

1010
00:55:11,900 --> 00:55:14,500
He goes entity be chunk P offset.

1011
00:55:15,200 --> 00:55:18,900
0 chunk, Delta offset - entity pee.

1012
00:55:23,100 --> 00:55:25,300
FTP plus equals chunk Delta

1013
00:55:31,700 --> 00:55:33,200
That coat looks a little weird.

1014
00:55:33,200 --> 00:55:33,900
Don't you think?

1015
00:55:38,500 --> 00:55:39,800
not to mention the fact that

1016
00:55:46,100 --> 00:55:46,600
so,

1017
00:55:49,800 --> 00:55:51,000
Was all we were doing.

1018
00:55:51,000 --> 00:55:54,100
They're trying to do stuff where we removed somebody from the correct

1019
00:55:54,100 --> 00:55:56,600
because we don't actually have to remove people anymore.

1020
00:55:56,800 --> 00:55:59,900
I feel like that was probably code, that's left over from having to

1021
00:55:59,900 --> 00:56:01,200
remove people, right?

1022
00:56:01,600 --> 00:56:05,300
Because nowadays, the chunk Delta stuff.

1023
00:56:05,500 --> 00:56:11,000
I feel like that is really not that necessary for anything anymore.

1024
00:56:13,000 --> 00:56:13,400
Right.

1025
00:56:13,400 --> 00:56:15,300
I mean, do we really even need that?

1026
00:56:15,400 --> 00:56:17,400
Hold on a second before I get any further into that.

1027
00:56:17,400 --> 00:56:18,800
Now that we're in this area,

1028
00:56:28,500 --> 00:56:29,600
I just am curious.

1029
00:56:29,600 --> 00:56:30,800
So chunk Delta.

1030
00:56:30,900 --> 00:56:32,000
What do we do with it?

1031
00:56:33,400 --> 00:56:38,000
All we do is do entity P plus equals chunk, Delta, okay.

1032
00:56:52,000 --> 00:56:54,500
And we don't really modify any of this code.

1033
00:56:54,500 --> 00:56:56,000
Any of these positions do we?

1034
00:56:58,400 --> 00:56:59,500
No, we don't.

1035
00:57:05,000 --> 00:57:08,700
So really all this is doing is doing that and renormalization step

1036
00:57:08,700 --> 00:57:10,500
that we already have in the other code.

1037
00:57:10,700 --> 00:57:15,100
It does seem that just seems like kind of a waste to me, right?

1038
00:57:15,100 --> 00:57:16,900
That just really seems like kind of a waste.

1039
00:57:17,400 --> 00:57:21,900
And it looks like in general like when we're looking at this here,

1040
00:57:31,000 --> 00:57:33,300
It just doesn't seem like any of this is necessary.

1041
00:57:33,800 --> 00:57:36,000
So if we take a look at What entity P does,

1042
00:57:43,500 --> 00:57:45,400
We're basically just seeing whether or not.

1043
00:57:48,900 --> 00:57:51,200
We need to do the little apron scrolling thing.

1044
00:57:56,000 --> 00:57:57,800
Yeah, I don't love this code.

1045
00:57:58,100 --> 00:58:01,400
I feel like this could be really simplified now because we've gotten

1046
00:58:01,400 --> 00:58:04,500
things down too much cleaner, in terms of what it needs to do in the

1047
00:58:04,500 --> 00:58:05,100
code.

1048
00:58:05,500 --> 00:58:09,200
And so I feel like this stuff is not as necessary as it as it perhaps

1049
00:58:09,200 --> 00:58:10,000
once was

1050
00:58:13,000 --> 00:58:15,600
But anyway, that's neither here, nor there at the moment.

1051
00:58:18,200 --> 00:58:19,400
I just want to fix that.

1052
00:58:21,600 --> 00:58:25,400
So when we do use chunk space and we pass that chunk P down which is

1053
00:58:25,400 --> 00:58:28,300
the place where we want the space to get used.

1054
00:58:35,900 --> 00:58:38,400
I don't feel like anything here should have changed appreciably,

1055
00:58:38,400 --> 00:58:38,700
right?

1056
00:58:38,700 --> 00:58:39,800
We're just passing the size.

1057
00:58:39,800 --> 00:58:42,800
We know, we wanted to pet to store one end of these worth.

1058
00:58:43,300 --> 00:58:46,300
When we come in here, we check to see if we can get it assuming that

1059
00:58:46,300 --> 00:58:47,300
we can get it.

1060
00:58:47,900 --> 00:58:52,400
We take up the use, you know, we take up the space that we had wanted

1061
00:58:52,400 --> 00:59:02,800
to take up and then we, yeah, we just return the pointer to the data,

1062
00:59:02,900 --> 00:59:05,500
which I store here and, you know, Rob with the entity and

1063
00:59:05,700 --> 00:59:06,200
Nation.

1064
00:59:06,300 --> 00:59:10,400
And, of course, I also then update the pieces that need to kind of get

1065
00:59:10,400 --> 00:59:14,000
packed down, but that seems like pretty straightforward, right?

1066
00:59:14,000 --> 00:59:17,500
That's not particularly, that's not particularly tricky.

1067
00:59:21,600 --> 00:59:23,500
So, I'm not sure why that would cause anyone.

1068
00:59:23,500 --> 00:59:26,200
Any problems added under need to Hash.

1069
00:59:26,200 --> 00:59:30,300
On the other hand, we did add, we haven't really looked at too much,

1070
00:59:30,400 --> 00:59:33,600
but it looks, I mean, you know, it was not a particularly complicated

1071
00:59:33,600 --> 00:59:34,500
code change.

1072
00:59:34,600 --> 00:59:36,500
I feel like it would be pretty straightforward.

1073
00:59:58,600 --> 00:59:59,800
And we do set the IDS.

1074
01:00:01,500 --> 01:00:03,100
Beforehand.

1075
01:00:03,100 --> 01:00:05,900
So that should all be nice and clean.

1076
01:00:05,900 --> 01:00:09,900
When we do the get hash, we set the pointer and the ID

1077
01:00:11,500 --> 01:00:13,000
Which is exactly what we want.

1078
01:00:13,300 --> 01:00:15,900
Now, granted, I don't really know why we bother storing the idea

1079
01:00:15,900 --> 01:00:19,500
because we could just store just the pointer, but I guess maybe we

1080
01:00:19,500 --> 01:00:21,100
want to avoid the double look up.

1081
01:00:22,300 --> 01:00:24,600
Anyway, back to our show.

1082
01:00:28,600 --> 01:00:31,400
So we come in here, we've got one of these entities and we're going to

1083
01:00:31,400 --> 01:00:33,600
pack it down here is our destiny.

1084
01:00:33,600 --> 01:00:36,100
Here's our regular entity, right?

1085
01:00:36,600 --> 01:00:41,800
And these things to should be roughly equivalent, they do appear to be

1086
01:00:42,500 --> 01:00:43,800
for the most part.

1087
01:00:46,600 --> 01:00:47,500
Looks pretty good.

1088
01:00:49,600 --> 01:00:50,800
Oh, there's the p.

1089
01:00:52,600 --> 01:00:54,000
There's that p-value.

1090
01:00:55,600 --> 01:00:56,500
Looks the same.

1091
01:00:58,100 --> 01:01:01,300
Yeah, so the only real question is here, do we mess something up in

1092
01:01:01,300 --> 01:01:05,100
terms of how to receivables get packed down or something like this?

1093
01:01:08,600 --> 01:01:09,800
I wouldn't assume.

1094
01:01:09,800 --> 01:01:16,300
So I also just realize too that, now that we've done this, we may have

1095
01:01:16,300 --> 01:01:19,800
to postpone the debugging till tomorrow but now that we've done this,

1096
01:01:20,100 --> 01:01:22,700
I've got my sim region that's gets past here.

1097
01:01:22,800 --> 01:01:26,800
I think we now no longer need the Sim region because now we've removed

1098
01:01:26,800 --> 01:01:31,000
that dependency which is really nice actually.

1099
01:01:32,100 --> 01:01:35,000
Because that you can see how this code would definitely got nicer

1100
01:01:35,100 --> 01:01:37,900
because now it's separated along the correct boundary.

1101
01:01:37,900 --> 01:01:42,600
But before we sort of had mixed up, the chunk, based World storage

1102
01:01:42,600 --> 01:01:44,400
with the need to pack entities.

1103
01:01:44,600 --> 01:01:48,100
And we got this kind of like hybrid that wasn't particularly good.

1104
01:01:48,600 --> 01:01:51,000
Now we just know we're packing some things into this.

1105
01:01:51,700 --> 01:01:55,300
We don't really care what they are or what they're doing because

1106
01:01:55,300 --> 01:01:58,400
someone else is going to take care of that and that's much nicer now

1107
01:01:58,400 --> 01:02:01,500
and you can see how that kind of made things get cleaner for us.

1108
01:02:01,500 --> 01:02:01,800
We still

1109
01:02:02,000 --> 01:02:02,800
About somewhere.

1110
01:02:04,900 --> 01:02:08,300
So we'll have to do something about that, but at least we're pretty

1111
01:02:08,300 --> 01:02:09,000
good to go.

1112
01:02:10,000 --> 01:02:12,000
I will probably go to the Q&A now.

1113
01:02:12,800 --> 01:02:18,600
Just to make sense just to make sure that people have chance to ask

1114
01:02:18,600 --> 01:02:24,100
questions, but while I'm waiting for questions, so we'll go to the Q&A

1115
01:02:25,500 --> 01:02:27,100
while I'm waiting for questions.

1116
01:02:27,100 --> 01:02:31,600
I will continue to kind of just peruse until I see a question on there

1117
01:02:33,200 --> 01:02:34,500
because as you know, I don't like leaving

1118
01:02:34,600 --> 01:02:37,200
Bugs in the code if I can avoid it.

1119
01:02:39,400 --> 01:02:43,400
So yeah, yeah.

1120
01:02:49,400 --> 01:02:52,200
What do we when we do entity star?

1121
01:02:55,900 --> 01:02:56,400
Here.

1122
01:03:16,000 --> 01:03:21,600
I could also comment this out and see if there's any visual clue as to

1123
01:03:21,600 --> 01:03:23,200
what the problem was with that.

1124
01:03:23,600 --> 01:03:27,400
So let's see here, Max velocity.

1125
01:03:52,300 --> 01:03:57,000
That's actually pretty handy because that's sort of like if we can get

1126
01:03:57,000 --> 01:03:59,400
more information about what we're doing wrong, we might be able to

1127
01:03:59,400 --> 01:04:00,800
pinpoint the bug more quickly.

1128
01:04:01,900 --> 01:04:07,000
So we call update and render entities are came from here is null, so

1129
01:04:07,000 --> 01:04:08,600
it wasn't on anything to begin with.

1130
01:04:08,700 --> 01:04:13,300
Looks like get some space traversable, therefore fails.

1131
01:04:22,000 --> 01:04:23,600
I would say again, that's the kind of thing.

1132
01:04:23,600 --> 01:04:25,300
I kind of want to guard against.

1133
01:04:25,600 --> 01:04:28,000
I feel like will want to harden these routines.

1134
01:04:28,200 --> 01:04:31,600
Probably, I'll take some time at some point to actually, Harden them,

1135
01:04:31,600 --> 01:04:33,500
specifically, just go through to do that.

1136
01:04:37,000 --> 01:04:38,900
Because these are the kind of things that are going to be getting

1137
01:04:38,900 --> 01:04:42,700
called from like very spaghetti, like random gameplay code.

1138
01:04:42,700 --> 01:04:45,100
That's just going to be kind of weird, and wild, you know.

1139
01:04:46,900 --> 01:04:50,600
And so I do kind of want these to be more crash-proof.

1140
01:04:51,800 --> 01:04:53,300
That is pretty cool.

1141
01:04:55,800 --> 01:04:59,200
Can I just say I've no idea what it's doing.

1142
01:04:59,600 --> 01:05:00,500
That's pretty great.

1143
01:05:05,200 --> 01:05:06,300
Let me take a look here.

1144
01:05:25,100 --> 01:05:29,000
Snoring tortoise, did you resolve the kerning horizontal advance for

1145
01:05:29,000 --> 01:05:29,700
kanji characters?

1146
01:05:29,700 --> 01:05:33,200
I found when employing myself on OS X at the font table level that

1147
01:05:33,200 --> 01:05:35,100
Ariel doesn't actually have kanji in it.

1148
01:05:35,100 --> 01:05:36,500
It seems Windows and Mac.

1149
01:05:36,500 --> 01:05:39,500
The higher level apis that cortex load multiple font files for you.

1150
01:05:39,800 --> 01:05:42,500
If it detects that you are trying to load a code point, that is

1151
01:05:42,500 --> 01:05:44,600
outside the range of particular font file.

1152
01:05:48,600 --> 01:05:54,000
I don't really recall you'd have to go back and look at those the font

1153
01:05:54,000 --> 01:05:57,600
episodes to my recollection.

1154
01:05:57,600 --> 01:05:59,800
I didn't super care too much about getting the

1155
01:06:00,000 --> 01:06:04,300
Turning loaded properly on those because I'm assuming that the actual

1156
01:06:04,300 --> 01:06:07,200
fonts we would use for the game would be coming in as bitmaps that we

1157
01:06:07,200 --> 01:06:08,400
would set the kerning on.

1158
01:06:10,700 --> 01:06:12,000
But yeah, I don't know.

1159
01:06:14,000 --> 01:06:15,600
I don't even if that was the case.

1160
01:06:15,600 --> 01:06:18,100
I don't know why that would affect the kerning because I should be.

1161
01:06:18,100 --> 01:06:19,400
It should be able to.

1162
01:06:19,600 --> 01:06:21,900
I thought the problem we were having with the kerning was that it

1163
01:06:21,900 --> 01:06:23,100
wasn't matching.

1164
01:06:23,500 --> 01:06:28,100
What would happen if we went into a Windows, like a normal, text

1165
01:06:28,100 --> 01:06:29,400
editor, and windows, and did it.

1166
01:06:29,600 --> 01:06:29,900
And so,

1167
01:06:30,000 --> 01:06:32,800
So I would have expected to get the same results out since we were

1168
01:06:32,800 --> 01:06:36,300
using their API if I remember correctly to extract the glyphs.

1169
01:06:36,300 --> 01:06:40,400
So, you know, I don't necessarily expect it to be good kerning because

1170
01:06:40,400 --> 01:06:43,900
most operating system fonts that I see most fonts in general have

1171
01:06:43,900 --> 01:06:45,000
lousy kerning anyway.

1172
01:06:45,000 --> 01:06:48,600
So I don't think I would have been upset about the kerning being

1173
01:06:48,600 --> 01:06:53,300
lousy, but I would have expected to match and I thought it wasn't

1174
01:06:53,300 --> 01:06:55,000
matching Windows, right?

1175
01:06:55,000 --> 01:06:59,100
And so that was kind of just weird because even if they are loading,

1176
01:06:59,100 --> 01:06:59,900
multiple fonts

1177
01:07:00,000 --> 01:07:02,300
Behind your back, it should still report.

1178
01:07:02,300 --> 01:07:05,700
The same thing to you know notepad is it reports to me and it didn't

1179
01:07:05,700 --> 01:07:07,000
seem like that was what was happening.

1180
01:07:10,400 --> 01:07:11,800
so, that's the kind of

1181
01:07:14,300 --> 01:07:14,700
You know.

1182
01:07:17,800 --> 01:07:22,000
That's the kind of thing that I was talking about back then.

1183
01:07:24,600 --> 01:07:25,500
So, what happens?

1184
01:07:25,500 --> 01:07:31,200
Here we get the entity p and the chunk P we zero out the offset.

1185
01:07:31,200 --> 01:07:35,200
We take the chunk Delta, and that's the sat there that gets added back

1186
01:07:35,200 --> 01:07:35,400
in.

1187
01:07:35,400 --> 01:07:36,400
That's all fine.

1188
01:07:37,200 --> 01:07:41,500
We say, use whatever the chunk P was the chunk P, was the thing we use

1189
01:07:41,500 --> 01:07:45,100
for the entities position when we begin semi soon.

1190
01:07:45,100 --> 01:07:46,600
That's all set correctly.

1191
01:07:46,900 --> 01:07:50,400
We add the entity to the hash, we set its trunk Delta, and we said

1192
01:07:50,400 --> 01:07:52,600
it's p by moving the trunk.

1193
01:07:54,300 --> 01:07:54,900
Delta.

1194
01:08:05,500 --> 01:08:07,500
When we pack the P down.

1195
01:08:23,700 --> 01:08:27,300
I see we're removing the Delta because whatever the chunk is that it

1196
01:08:27,300 --> 01:08:31,800
gets stored in that is the chunk offset that we use, so that's

1197
01:08:31,800 --> 01:08:33,000
reasonable.

1198
01:08:43,700 --> 01:08:45,500
That all seems reasonable.

1199
01:08:47,200 --> 01:08:47,399
What?

1200
01:08:47,399 --> 01:08:50,899
I don't know is what we were saying.

1201
01:09:02,800 --> 01:09:05,399
Cyberpunk hobo can you explain what the idea is behind?

1202
01:09:05,399 --> 01:09:08,800
Using a zero sized Sim region bound.

1203
01:09:09,399 --> 01:09:09,800
Yeah.

1204
01:09:09,800 --> 01:09:17,399
So basically when we first create the world, there are no entities in

1205
01:09:17,399 --> 01:09:22,200
it anyway so there's no need to discuss like what the region, what the

1206
01:09:22,200 --> 01:09:24,700
boundaries are of the same region because the boundaries of the same

1207
01:09:24,700 --> 01:09:28,399
region are only actually used for streaming in the entities in the

1208
01:09:28,399 --> 01:09:30,200
first place and setting their Flags.

1209
01:09:31,100 --> 01:09:35,399
But we don't have to do that at the outset of hours of the creation

1210
01:09:35,399 --> 01:09:40,000
pass because there are no entities this to stream in, right?

1211
01:09:41,600 --> 01:09:46,200
And so basically I was just setting the balance to know and the and

1212
01:09:46,200 --> 01:09:48,000
all that because there really wasn't

1213
01:09:50,899 --> 01:09:52,300
there really wasn't any need.

1214
01:09:53,100 --> 01:09:55,600
That's all, that's all it was really.

1215
01:10:00,500 --> 01:10:03,900
Because the symbols don't really do anything else later on, we might

1216
01:10:03,900 --> 01:10:07,000
want to set them because that we may actually be using up more

1217
01:10:08,100 --> 01:10:09,000
elements of it.

1218
01:10:11,300 --> 01:10:15,100
But yeah, so it looks like the problem we have is when I went and did

1219
01:10:15,100 --> 01:10:18,700
the pack unpack thing, it looks like I accidentally introduced some

1220
01:10:18,700 --> 01:10:25,400
kind of a of a packing error with p with the, with the position of the

1221
01:10:25,400 --> 01:10:25,900
entities.

1222
01:10:26,300 --> 01:10:28,800
And so, I'm interested to take a look at that because you could sort

1223
01:10:28,800 --> 01:10:32,300
of see like, saying just getting a clue from what's Happening Here.

1224
01:10:33,000 --> 01:10:36,500
When I commented that out, you can kind of see how everything is sort

1225
01:10:36,500 --> 01:10:40,700
of grass, you know, moving and gravitating in this weird way that

1226
01:10:40,700 --> 01:10:40,900
doesn't.

1227
01:10:41,100 --> 01:10:42,100
Take a whole lot of sense.

1228
01:10:42,200 --> 01:10:47,800
It sort of seems, you know, like like maybe the camera and all the

1229
01:10:47,800 --> 01:10:48,300
entities

1230
01:10:49,800 --> 01:10:54,800
Are zooming through space diagonally down, right?

1231
01:10:55,200 --> 01:10:56,700
Or something to this effect.

1232
01:10:57,900 --> 01:11:02,500
So it feels to me, like we've got a problem with the way that P is

1233
01:11:02,500 --> 01:11:06,800
being packed and unpacked, but that's just my initial assumption.

1234
01:11:07,500 --> 01:11:10,500
And so, if we take a look at how p is being packed and unpacked, we

1235
01:11:10,500 --> 01:11:15,600
may see something that I messed up in when I was working when I made

1236
01:11:15,600 --> 01:11:16,300
the changes.

1237
01:11:17,800 --> 01:11:22,600
So, you know, when we get the death P, were assuming that whatever we

1238
01:11:22,600 --> 01:11:23,600
get here, whatever?

1239
01:11:23,600 --> 01:11:27,300
We whenever we unpack an entity,

1240
01:11:27,800 --> 01:11:30,000
We're assuming that we're going to get.

1241
01:11:44,200 --> 01:11:45,900
I think I okay.

1242
01:11:48,600 --> 01:11:50,700
I think I see what we did wrong there.

1243
01:11:55,100 --> 01:11:56,200
Or at least one of the things.

1244
01:11:57,200 --> 01:11:59,600
so, if we go back here,

1245
01:12:01,700 --> 01:12:05,200
To World mood, where we were actually creating the stuff.

1246
01:12:07,000 --> 01:12:12,000
So when we call end entity, we're setting this entity P offset here,

1247
01:12:12,200 --> 01:12:12,800
right?

1248
01:12:13,700 --> 01:12:14,400
And

1249
01:12:18,700 --> 01:12:23,200
we're not actually setting the world location properly in that in that

1250
01:12:23,200 --> 01:12:24,600
case, right?

1251
01:12:26,400 --> 01:12:31,000
The world position is actually going to be some actual position that

1252
01:12:31,000 --> 01:12:34,500
we need to set properly in empty p in order for it to get packed down,

1253
01:12:35,000 --> 01:12:35,600
right?

1254
01:12:36,600 --> 01:12:40,800
So what we need to do here instead is when we actually pass this world

1255
01:12:40,800 --> 01:12:41,400
position.

1256
01:12:41,600 --> 01:12:45,500
So like you know we say and then a tea here these are all taking those

1257
01:12:45,500 --> 01:12:46,500
World positions.

1258
01:12:46,800 --> 01:12:48,200
Whenever we say, end entity

1259
01:12:48,600 --> 01:12:52,400
We have to actually use that position when we get it, right?

1260
01:12:52,600 --> 01:12:57,800
So we would have to do say you know, inside World mode.

1261
01:12:59,600 --> 01:13:03,700
I'm sorry inside world, when we actually get one of these roll

1262
01:13:03,700 --> 01:13:07,700
positions back, we would want to do the subtraction to take a look at

1263
01:13:07,700 --> 01:13:10,900
where that actually was relative to.

1264
01:13:13,400 --> 01:13:16,600
Relative to the Sim region that it's going to get packed.

1265
01:13:17,400 --> 01:13:19,000
Let me next to, right?

1266
01:13:19,500 --> 01:13:20,800
So we would want to do a thing here.

1267
01:13:20,800 --> 01:13:26,000
We say like okay, the actual entity p is going to be the subtraction

1268
01:13:27,400 --> 01:13:28,000
of

1269
01:13:31,900 --> 01:13:32,700
This guy.

1270
01:13:34,900 --> 01:13:38,100
And whatever the Sim region bounds are.

1271
01:13:42,900 --> 01:13:43,500
Right.

1272
01:13:46,100 --> 01:13:48,400
Worlds and Undeclared identifier.

1273
01:13:48,400 --> 01:13:49,200
Hey guess what?

1274
01:13:49,400 --> 01:13:52,400
It's because it's not supposed to be world supposed to be World mode

1275
01:13:54,000 --> 01:13:59,600
and element 2 to World position star that help.

1276
01:14:01,300 --> 01:14:04,300
So now we're actually setting that position correctly.

1277
01:14:06,900 --> 01:14:08,100
Which is, at least a little better.

1278
01:14:08,800 --> 01:14:11,500
So now we've actually, at least restored some some working

1279
01:14:11,500 --> 01:14:14,000
functionality here, but we still got some issues.

1280
01:14:14,600 --> 01:14:18,700
Like, you can see that we're not really working, quite right?

1281
01:14:18,900 --> 01:14:23,000
People are going through trees and such and other sorts of things like

1282
01:14:23,000 --> 01:14:23,400
this.

1283
01:14:23,700 --> 01:14:25,400
So we're not quite there yet.

1284
01:14:25,400 --> 01:14:29,900
But at least we sort of fixed one obvious, major issue and we're

1285
01:14:29,900 --> 01:14:32,200
mostly back to good, right?

1286
01:14:33,400 --> 01:14:34,400
So that's good.

1287
01:14:34,700 --> 01:14:35,300
Get in there.

1288
01:14:41,500 --> 01:14:42,600
Still no questions, huh?

1289
01:15:14,200 --> 01:15:17,400
So I'm relatively pleased with that, I think that's a good thing.

1290
01:15:17,400 --> 01:15:21,300
It means that we can now be a little more confident in how we're doing

1291
01:15:21,300 --> 01:15:22,900
that process.

1292
01:15:22,900 --> 01:15:24,600
It don't go off the edge of the world.

1293
01:15:26,500 --> 01:15:27,500
So that's getting better.

1294
01:15:27,500 --> 01:15:31,500
Although we still there still some bugginess there.

1295
01:15:31,500 --> 01:15:35,500
Like, people are getting stuck in, are able to walk into a

1296
01:15:35,500 --> 01:15:37,900
traversable, is where there should not be traversable.

1297
01:15:38,300 --> 01:15:42,000
So we still have some unusual

1298
01:15:46,700 --> 01:15:49,900
Some unusual thing where they're able to find those traversable 's

1299
01:15:50,500 --> 01:15:52,500
even though they shouldn't right.

1300
01:15:57,100 --> 01:16:01,000
Like those traversable should be occupied by the trees or something

1301
01:16:01,000 --> 01:16:05,100
like this and so I'm not sure exactly why they're not.

1302
01:16:05,800 --> 01:16:10,000
I think that maybe because we might have done some weird hacking us

1303
01:16:10,000 --> 01:16:14,300
there because we didn't have the clean way of creating things before.

1304
01:16:15,300 --> 01:16:16,300
I'll have to take a look.

1305
01:16:17,500 --> 01:16:23,700
For example, when we add a wall, when we do occupying will standing on

1306
01:16:24,600 --> 01:16:28,800
and then we do end entity that will do the pack down.

1307
01:16:29,700 --> 01:16:31,600
I feel like that should be fine.

1308
01:16:38,800 --> 01:16:40,600
I feel like that should work.

1309
01:16:43,800 --> 01:16:45,300
At least feels like it should work.

1310
01:16:46,300 --> 01:16:47,000
Yeah, I'm not sure.

1311
01:16:56,900 --> 01:16:57,700
Ma'am.

1312
01:17:02,100 --> 01:17:02,800
so,

1313
01:17:04,600 --> 01:17:07,900
I guess, one thing I can do right now though is I can get rid of end

1314
01:17:07,900 --> 01:17:09,300
entity which I wanted to do.

1315
01:17:09,900 --> 01:17:13,100
Oh I'm supposed to be not really programming right now, though, I'm

1316
01:17:13,100 --> 01:17:15,400
supposed to have ended if this if that makes sense.

1317
01:17:18,500 --> 01:17:20,300
but I believe what's happening there is

1318
01:17:26,100 --> 01:17:34,700
If you look at what's happening, I obviously can't go into these

1319
01:17:34,700 --> 01:17:35,700
trees, right?

1320
01:17:35,900 --> 01:17:38,700
And the reason for that is because my head still runs through the

1321
01:17:38,700 --> 01:17:39,700
Collision detector, right?

1322
01:17:39,700 --> 01:17:43,800
We are still running the head through the cones detector, but the

1323
01:17:43,800 --> 01:17:47,700
reason that other people can't go through the trees is just because

1324
01:17:47,700 --> 01:17:51,400
remember your have to hop onto a legitimate square, that was the rules

1325
01:17:51,400 --> 01:17:52,100
of the game.

1326
01:17:52,600 --> 01:17:55,800
And so the the AI is are just required.

1327
01:17:55,900 --> 01:17:58,700
Got to find something to hop on, right?

1328
01:17:58,700 --> 01:17:59,400
That's all there.

1329
01:17:59,400 --> 01:17:59,800
That's all

1330
01:18:00,000 --> 01:18:04,900
Actually need to be able to do is to find something to hop on and so

1331
01:18:04,900 --> 01:18:07,700
they don't have to go through the Collision detector, right?

1332
01:18:08,700 --> 01:18:12,100
And that's sort of by Design at the moment, like we probably will want

1333
01:18:12,100 --> 01:18:15,700
to push them through the Collision Vector eventually, depending on how

1334
01:18:15,700 --> 01:18:18,000
we feel about it, and we'll see.

1335
01:18:18,900 --> 01:18:21,300
But at the moment, they're not supposed to go includes doctor, but

1336
01:18:21,300 --> 01:18:23,700
they should never hop into the trees and we're not hopping issues of

1337
01:18:23,700 --> 01:18:27,200
or because those trees are supposed to be occupying, the squares that

1338
01:18:27,200 --> 01:18:29,400
they're on her go.

1339
01:18:29,500 --> 01:18:29,900
You should.

1340
01:18:30,000 --> 01:18:31,400
Never be able to hop on them.

1341
01:18:31,400 --> 01:18:35,300
So either the tree would occupy it or we could just not create a

1342
01:18:35,300 --> 01:18:38,000
walkable there, but we were doing before is creating a walkable point

1343
01:18:38,000 --> 01:18:41,600
and putting the tree on it and then you should not be able to get at

1344
01:18:41,600 --> 01:18:43,200
that point, right?

1345
01:18:43,800 --> 01:18:48,400
But what we're seeing instead is that that's not happening, right?

1346
01:18:48,500 --> 01:18:49,100
So,

1347
01:18:50,300 --> 01:18:55,000
Probably who's at fault there is that the trees when they're packing

1348
01:18:55,000 --> 01:18:58,900
down are not correctly, saving their reference to the thing that they

1349
01:18:58,900 --> 01:19:01,200
were on but I don't know, I haven't looked at it yet.

1350
01:19:08,700 --> 01:19:09,700
Invincible Chas.

1351
01:19:10,100 --> 01:19:11,200
I've just started watching the stream.

1352
01:19:11,200 --> 01:19:14,000
How often have you needed to refactor?

1353
01:19:14,000 --> 01:19:15,800
Major parts of your code?

1354
01:19:18,000 --> 01:19:20,900
Well, I think that kind of

1355
01:19:24,500 --> 01:19:26,800
So, I guess what I would say is, I tend not to like the word

1356
01:19:26,800 --> 01:19:32,200
refactoring, only because it's really nonspecific.

1357
01:19:32,800 --> 01:19:35,900
So, you know, it's a good term to use when you're just kind of

1358
01:19:35,900 --> 01:19:36,700
throwing stuff around there.

1359
01:19:36,700 --> 01:19:39,400
Like, oh, I'm doing some refactoring right now or something because

1360
01:19:39,800 --> 01:19:45,000
it's always true, but it makes it kind of hard to be specific about

1361
01:19:45,000 --> 01:19:46,000
what you're actually doing.

1362
01:19:46,400 --> 01:19:49,700
What I would say is that I don't generally unless I'm trying to figure

1363
01:19:49,700 --> 01:19:53,100
out like an algorithm or something, I don't generally consider my

1364
01:19:53,100 --> 01:19:53,500
time.

1365
01:19:53,700 --> 01:19:57,100
Be divided in into refactoring and not refactoring.

1366
01:19:57,100 --> 01:19:58,100
If that makes sense.

1367
01:20:01,000 --> 01:20:05,300
I am always refactoring to some extent, right?

1368
01:20:05,400 --> 01:20:08,800
Like most of what I'm doing when i'm programming is trying to refine

1369
01:20:08,800 --> 01:20:13,300
the code into a better State than what it's in right now because I

1370
01:20:13,300 --> 01:20:17,600
don't believe in the methodology of trying to design things up front

1371
01:20:17,600 --> 01:20:21,600
before you actually have written them and then like writing them out

1372
01:20:21,600 --> 01:20:23,500
from there and hoping that you got it, right?

1373
01:20:23,600 --> 01:20:23,700
Right?

1374
01:20:23,700 --> 01:20:26,900
Because that's where you really see stuff like a question.

1375
01:20:26,900 --> 01:20:29,400
Like you said, where you said, like how often have to do a major

1376
01:20:29,400 --> 01:20:33,100
refactoring, that's really the only time that you have quote unquote,

1377
01:20:33,100 --> 01:20:37,300
major refactoring as an event is because you were like, oh whoops, I

1378
01:20:37,300 --> 01:20:40,800
got it wrong but the design was so now I have to do my major factoring

1379
01:20:40,800 --> 01:20:44,600
but otherwise I'm not really refactoring or something, but I don't

1380
01:20:44,600 --> 01:20:45,200
really like that.

1381
01:20:45,200 --> 01:20:47,900
Mental approach to programming.

1382
01:20:47,900 --> 01:20:51,500
In my opinion, you should always be refactoring, right?

1383
01:20:51,500 --> 01:20:53,400
You should always be looking for ways.

1384
01:20:54,000 --> 01:20:58,500
to improve the architecture of your system, and that can be in very

1385
01:20:58,500 --> 01:20:59,600
small ways such as

1386
01:21:00,000 --> 01:21:01,900
A function to make it more clear.

1387
01:21:01,900 --> 01:21:06,200
What it does something that simple or as complicated as I'm changing

1388
01:21:06,200 --> 01:21:09,900
the way that this entire renderer get skewed or something, that's all

1389
01:21:09,900 --> 01:21:10,500
in a day's work.

1390
01:21:10,500 --> 01:21:14,800
And I don't tend to think of it as I have to go to a major factoring

1391
01:21:14,800 --> 01:21:14,900
now.

1392
01:21:14,900 --> 01:21:20,100
And furthermore, I also try to and you've seen me do this many times

1393
01:21:20,100 --> 01:21:22,600
on stream if you're someone who's watched a long time, but you said

1394
01:21:22,600 --> 01:21:23,300
you're new to the stream.

1395
01:21:23,300 --> 01:21:28,000
So, obviously, you wouldn't have seen this yet, but the other thing is

1396
01:21:28,000 --> 01:21:29,800
that I always try to take.

1397
01:21:30,000 --> 01:21:35,000
Take any big change, whether it's refactoring or just creating

1398
01:21:35,000 --> 01:21:37,600
something new, it doesn't have to necessarily be refactoring.

1399
01:21:37,600 --> 01:21:39,600
Could just be the initial walkthrough of something.

1400
01:21:39,600 --> 01:21:42,400
I always try to break it into smaller steps.

1401
01:21:42,400 --> 01:21:44,300
And the reason that I do, that is for two reasons.

1402
01:21:44,300 --> 01:21:48,800
One, it keeps the debugging, more simple than it was before, right?

1403
01:21:48,800 --> 01:21:52,300
Because now, if you're only making small changes at a time, you can

1404
01:21:52,300 --> 01:21:55,100
more easily identify what code may have broken, right?

1405
01:21:55,100 --> 01:21:58,500
It doesn't always work because you still can get very tricky bugs, but

1406
01:21:58,500 --> 01:22:00,000
it definitely cuts down on the amount.

1407
01:22:00,000 --> 01:22:03,000
Mount of tricky bugs you get because you haven't just changed the

1408
01:22:03,000 --> 01:22:04,700
whole thing at once, right?

1409
01:22:06,100 --> 01:22:10,200
And the other reason I do that is because it gives me a good metric

1410
01:22:10,200 --> 01:22:11,000
along the way.

1411
01:22:11,000 --> 01:22:13,900
As I'm programming to know whether the change that I'm doing is

1412
01:22:13,900 --> 01:22:14,700
actually good.

1413
01:22:14,800 --> 01:22:18,900
If you have a mentality where you're like, it's refactoring week and I

1414
01:22:18,900 --> 01:22:23,600
refactored all the code or whatever then you can very easily get into

1415
01:22:23,600 --> 01:22:27,300
a state where the refactoring you did actually puts you in a worse

1416
01:22:27,300 --> 01:22:29,100
State than when you started, right?

1417
01:22:29,600 --> 01:22:29,800
Because

1418
01:22:29,900 --> 01:22:32,300
Is one of the things that's very true about code architecture is

1419
01:22:32,300 --> 01:22:36,300
nobody and I mean, literally nobody can keep it all in their head at

1420
01:22:36,300 --> 01:22:37,100
the level of detail.

1421
01:22:37,100 --> 01:22:41,400
They need to, to make the exact right decisions without doing actual

1422
01:22:41,400 --> 01:22:43,100
programming, it just doesn't work.

1423
01:22:45,000 --> 01:22:49,400
I'm actually one of the people who I would count highest on the list,

1424
01:22:49,400 --> 01:22:52,600
in terms of size of system, they can keep in their heads.

1425
01:22:52,800 --> 01:22:56,800
And I can tell you for a fact that I am nowhere, close right to being

1426
01:22:56,800 --> 01:22:58,200
able to do that sort of stuff.

1427
01:22:59,900 --> 01:23:04,400
And so I feel like the same way to do that kind of architecture.

1428
01:23:04,400 --> 01:23:08,700
Work is to always break it into parts and always do it incrementally

1429
01:23:08,900 --> 01:23:12,400
so that you can see very clearly whether you've made a good decision

1430
01:23:12,400 --> 01:23:18,300
or not and so that you can abort that attempt at changing the code.

1431
01:23:18,300 --> 01:23:22,700
If you see very quickly, you know, in those steps that it's not going

1432
01:23:22,700 --> 01:23:24,600
to come out the way that you wanted to write.

1433
01:23:24,600 --> 01:23:28,300
So you're trying to also maximize the chances that you'll be getting

1434
01:23:28,300 --> 01:23:28,600
the information.

1435
01:23:28,800 --> 01:23:33,700
Should you need to change to either change or just completely abort

1436
01:23:33,800 --> 01:23:38,800
the chains that you were going to make, you know, modify or cancel the

1437
01:23:38,800 --> 01:23:41,500
change that you thought you were going to make based on that

1438
01:23:41,500 --> 01:23:44,600
information that you're getting as you sort of go through the process?

1439
01:23:44,900 --> 01:23:49,200
And so I think one of the biggest mistakes you can make as an

1440
01:23:49,200 --> 01:23:54,100
architect early on before you've had enough experience with it is

1441
01:23:54,100 --> 01:23:58,600
definitely trying to do two biggest changes that once assuming that

1442
01:23:58,700 --> 01:23:59,900
At the picture in your head.

1443
01:24:00,300 --> 01:24:03,300
Of why the change is good, is correct.

1444
01:24:03,300 --> 01:24:06,000
Because a lot of times, the devil really is in the details and

1445
01:24:06,000 --> 01:24:10,200
programming and you forgotten maybe it might just be one little thing

1446
01:24:10,200 --> 01:24:12,100
you've forgotten, but you did forget it.

1447
01:24:12,200 --> 01:24:14,900
And it means that that change will actually leave you in a worse

1448
01:24:14,900 --> 01:24:18,300
position than you were when you started or perhaps just a wash.

1449
01:24:18,400 --> 01:24:22,600
So you do all this work and you end up with no really benefit for it

1450
01:24:22,600 --> 01:24:26,300
or even a detriment and I've seen that happen lots of times.

1451
01:24:28,000 --> 01:24:29,800
So, you know, I would just say

1452
01:24:30,000 --> 01:24:31,800
That's a very important thing to be aware of.

1453
01:24:32,500 --> 01:24:35,200
So that's that's the approach we took on handmade hero.

1454
01:24:35,900 --> 01:24:41,400
We try never to have a like a time when we say that you know the thing

1455
01:24:41,400 --> 01:24:44,100
we're doing is just doing a big rewrite of all this code.

1456
01:24:44,700 --> 01:24:50,000
I try to keep it as incremental as possible and I tried to even when

1457
01:24:50,000 --> 01:24:53,900
we know that we're going to like replace some system or do a new

1458
01:24:53,900 --> 01:24:56,000
version of a system that works quite differently.

1459
01:24:57,000 --> 01:24:59,800
We take that in as granular a pieces

1460
01:25:00,000 --> 01:25:06,000
Possible both to keep the debugging down and also to make sure that we

1461
01:25:06,000 --> 01:25:07,100
can check ourselves.

1462
01:25:07,100 --> 01:25:10,600
As we go, the other Fringe benefit, you get by keeping things

1463
01:25:10,600 --> 01:25:12,500
manageable in that way to that, I would point out.

1464
01:25:12,500 --> 01:25:18,100
Is it also helps keep your morale up as a programmer over time.

1465
01:25:19,100 --> 01:25:23,000
Depending on your proclivities, you can definitely get to the point

1466
01:25:23,000 --> 01:25:27,400
where you can do very large swaths of code without your mind

1467
01:25:27,400 --> 01:25:28,600
Meandering, right?

1468
01:25:29,200 --> 01:25:29,800
But certainly

1469
01:25:29,900 --> 01:25:31,900
When you're first starting out, I think this is true.

1470
01:25:31,900 --> 01:25:36,400
A lot of times is that if you, if you bite off something really big

1471
01:25:36,400 --> 01:25:38,100
and you're like, I got to do this whole thing.

1472
01:25:38,500 --> 01:25:42,200
If you can't break it into smaller more achievable pieces, you will

1473
01:25:42,200 --> 01:25:46,000
take way longer to do it because you're not getting that sort of

1474
01:25:46,000 --> 01:25:48,200
feedback loop of like compile run.

1475
01:25:48,200 --> 01:25:50,200
See something happen, get some information.

1476
01:25:50,500 --> 01:25:51,700
It's a really much easier.

1477
01:25:51,700 --> 01:25:54,800
Way to keep your brain going forwards at a reasonable rate.

1478
01:25:55,900 --> 01:25:58,600
Whereas if you're like typing in miles and miles of code before

1479
01:25:58,600 --> 01:26:02,000
anything works or even compiles, that's just a really bad place to be

1480
01:26:02,000 --> 01:26:05,500
in generally speaking you know on handmade hero.

1481
01:26:05,500 --> 01:26:08,300
It's a little more aggressive than maybe I would want because I only

1482
01:26:08,300 --> 01:26:10,200
do an hour so that people can follow it.

1483
01:26:10,200 --> 01:26:12,400
And yeah that's not the size of a coding session.

1484
01:26:12,400 --> 01:26:16,500
I want I usually want to H bring a short break and then another two

1485
01:26:16,500 --> 01:26:17,500
hours or something.

1486
01:26:17,800 --> 01:26:20,500
If I'm going to do any kind of major, we're kind of code base.

1487
01:26:20,500 --> 01:26:24,100
That's probably what I'm looking for but that is what I'm looking for

1488
01:26:24,100 --> 01:26:25,100
at the end of that for

1489
01:26:25,300 --> 01:26:28,100
H, I generally want to be in a place where I'm at least compiling, I

1490
01:26:28,100 --> 01:26:33,000
at least know what's going on with a code and can see how it's lining

1491
01:26:33,000 --> 01:26:36,000
up and all that sort of stuff and that's after years of practice,

1492
01:26:36,100 --> 01:26:36,600
right?

1493
01:26:38,200 --> 01:26:42,700
And even then, I still just don't like to go that long without having

1494
01:26:42,700 --> 01:26:45,600
some kind of verification there and so I think that's a really

1495
01:26:45,600 --> 01:26:47,900
important thing to remember, especially when you're first starting

1496
01:26:47,900 --> 01:26:51,100
out, try to break things into achievable pieces, the first question

1497
01:26:51,100 --> 01:26:53,700
you should ask yourself anytime you're trying to consider a major

1498
01:26:53,700 --> 01:26:55,100
change or a major new system,

1499
01:26:55,700 --> 01:26:58,600
from, you know, from when you're just starting it,

1500
01:27:00,000 --> 01:27:03,000
Can I break this into more achievable pieces because that will really

1501
01:27:03,000 --> 01:27:06,500
help you on a number of fronts and it's just good practice in general,

1502
01:27:06,600 --> 01:27:10,000
for a number of reasons, even if you are already very experienced, I

1503
01:27:10,000 --> 01:27:11,700
find it's the right approach.

1504
01:27:12,100 --> 01:27:13,600
The vast majority of the time.

1505
01:27:36,800 --> 01:27:40,000
The noble one is the millisecond counter in the corner of the render

1506
01:27:40,000 --> 01:27:41,600
time for the frame.

1507
01:27:43,100 --> 01:27:43,900
No.

1508
01:27:44,300 --> 01:27:51,100
It's the amount of time we are currently counting between frames being

1509
01:27:51,100 --> 01:27:52,100
displayed.

1510
01:27:52,400 --> 01:27:57,000
So basically it doesn't like if you take a look in here,

1511
01:27:58,900 --> 01:28:03,000
You can you can actually see this information on the profiler, so if I

1512
01:28:03,000 --> 01:28:04,700
pause the profiler for a second.

1513
01:28:04,700 --> 01:28:08,500
So we won't take any more profile snapshots and we go over here and

1514
01:28:08,500 --> 01:28:10,400
take a look at what's going on.

1515
01:28:10,400 --> 01:28:15,200
You can see, you know, we've got the game update here, which is a

1516
01:28:15,200 --> 01:28:17,900
very, very small fraction of the total frame time.

1517
01:28:17,900 --> 01:28:22,900
So that's actually the amount of time we're spending, then we've got

1518
01:28:22,900 --> 01:28:25,900
our debug stuff which is just debug collation, which takes a ton of

1519
01:28:25,900 --> 01:28:27,600
time because we collate a bunch of debug information.

1520
01:28:27,600 --> 01:28:28,500
So that's actually

1521
01:28:29,000 --> 01:28:30,300
Not including the game time.

1522
01:28:30,300 --> 01:28:32,800
If we turn the debug system off, that would all go away.

1523
01:28:33,000 --> 01:28:37,000
And then up here is just us, waiting, for the graphics card which is

1524
01:28:37,000 --> 01:28:38,600
we have vsync turned on.

1525
01:28:39,200 --> 01:28:42,300
So some portion of this could be rendering time.

1526
01:28:42,800 --> 01:28:45,500
We if we turn to vsync off, we would know.

1527
01:28:46,800 --> 01:28:47,700
We haven't done that.

1528
01:28:47,800 --> 01:28:49,500
We don't have a button for that at the moment.

1529
01:28:49,500 --> 01:28:57,400
I don't think probably should add one, but so, so a lot of time is

1530
01:28:57,400 --> 01:28:58,700
also like a third of the time or so.

1531
01:28:58,900 --> 01:29:05,100
Here is spent just waiting around for the the graphics card to

1532
01:29:05,100 --> 01:29:05,600
display.

1533
01:29:05,900 --> 01:29:12,700
Also, this time is not actually accurate in terms of how long we would

1534
01:29:12,700 --> 01:29:17,500
take in an actual gameplay situation because it's were compiled in

1535
01:29:17,500 --> 01:29:18,800
debug bone right now.

1536
01:29:19,300 --> 01:29:23,100
So if you take a look at like how the clocks are aligned here, you can

1537
01:29:23,100 --> 01:29:23,800
kind of see.

1538
01:29:24,100 --> 01:29:25,400
This is our top list.

1539
01:29:25,400 --> 01:29:28,800
So 26 percent of our time is spent in

1540
01:29:29,200 --> 01:29:29,700
Work.

1541
01:29:30,300 --> 01:29:34,000
Twenty four percent of our time is spent sending stuff to opengl 15

1542
01:29:34,000 --> 01:29:36,600
percent is spent processing the debug information.

1543
01:29:37,200 --> 01:29:39,200
Not just you know, drawing it

1544
01:29:40,900 --> 01:29:44,000
And then, then we get down to actual code, right?

1545
01:29:44,200 --> 01:29:48,500
So, 75% of our time is not actually spent in us actually doing

1546
01:29:48,500 --> 01:29:49,100
anything.

1547
01:29:49,600 --> 01:29:53,800
It's all in other systems that are, you know, either the graphics side

1548
01:29:53,800 --> 01:29:58,400
of things or, or our

1549
01:30:00,000 --> 01:30:04,300
Debug system, we can turn all of this off, but unfortunately, as soon

1550
01:30:04,300 --> 01:30:07,400
as we start to turn off everything, like if we turn off the whole

1551
01:30:07,400 --> 01:30:11,000
debug system and stuff, we then can't get very much profiling

1552
01:30:11,000 --> 01:30:14,600
information so we can't, you know, at some point we might want to make

1553
01:30:14,600 --> 01:30:17,300
some that turns off everything except just the profile zones or

1554
01:30:17,300 --> 01:30:18,000
something like this.

1555
01:30:18,600 --> 01:30:22,200
But if we compile an optimization mode, a lot of that stuff gets a lot

1556
01:30:22,200 --> 01:30:25,000
faster because the compiler actually does a much better job of

1557
01:30:25,000 --> 01:30:26,100
producing real code.

1558
01:30:26,600 --> 01:30:29,600
And so, if you take a look at that, now you can kind of see a more

1559
01:30:29,600 --> 01:30:29,900
accurate.

1560
01:30:30,000 --> 01:30:32,300
Turret picture of what's going on here.

1561
01:30:32,500 --> 01:30:35,000
When these kind of get taken out of the equation, a little bit more,

1562
01:30:35,600 --> 01:30:36,600
you can start to see that.

1563
01:30:36,600 --> 01:30:37,000
Yeah.

1564
01:30:37,100 --> 01:30:40,900
So 56 percent of the time when we actually compiled an optimized

1565
01:30:40,900 --> 01:30:41,500
build.

1566
01:30:41,900 --> 01:30:45,900
So well over half that frame time which is six at 60 frames a second,

1567
01:30:45,900 --> 01:30:46,100
right?

1568
01:30:46,100 --> 01:30:48,900
16.6, a Mills at 60 frames a second.

1569
01:30:48,900 --> 01:30:54,500
We spend most of our time just waiting for the graphics card to, to

1570
01:30:54,500 --> 01:30:55,400
flip the page.

1571
01:30:55,700 --> 01:30:58,200
And again, I think most of that's vsync because, you know, if you take

1572
01:30:58,200 --> 01:30:59,800
a look at what we're passing down here,

1573
01:31:00,200 --> 01:31:04,700
It's just not very much in terms of Graphics load, we haven't really

1574
01:31:04,700 --> 01:31:07,800
done anything to try and optimize our opengl usage at all.

1575
01:31:07,900 --> 01:31:12,900
It's very, very simple, but even so, I suspect that it's pretty much

1576
01:31:12,900 --> 01:31:13,600
all vsync.

1577
01:31:13,600 --> 01:31:15,700
I mean, even this card, which is old, it's 10.

1578
01:31:15,700 --> 01:31:19,400
It's a 10 year, old card is, probably not having any trouble pushing

1579
01:31:19,400 --> 01:31:20,500
this at 1080p.

1580
01:31:20,800 --> 01:31:23,800
So probably most of that's vsync, but some of its made might be

1581
01:31:23,800 --> 01:31:28,700
graphed rendering and then we just get down to like feeding the

1582
01:31:28,700 --> 01:31:29,800
graphics card which

1583
01:31:30,000 --> 01:31:32,400
Probably just because we're not doing it efficiently and have to see

1584
01:31:32,400 --> 01:31:33,800
why we're getting so much there.

1585
01:31:34,000 --> 01:31:34,600
It could be.

1586
01:31:35,100 --> 01:31:38,200
No I don't think the sort is baked in there, so I'm not sure why I

1587
01:31:38,200 --> 01:31:38,500
opened.

1588
01:31:39,000 --> 01:31:40,100
It already has taken that time.

1589
01:31:40,100 --> 01:31:41,200
That's probably something we should look at.

1590
01:31:41,200 --> 01:31:42,600
Why to verify that?

1591
01:31:42,600 --> 01:31:44,100
It isn't something stupid we're doing.

1592
01:31:46,200 --> 01:31:50,100
But then, yeah, we get down to just our actual code here.

1593
01:31:50,800 --> 01:31:54,200
Only takes about four percent of the frame time as our actual code.

1594
01:32:11,200 --> 01:32:15,000
And Neil I agree that we should put in some opengl query timers when

1595
01:32:15,000 --> 01:32:18,600
we decide to do some work with opengl for reals like because we only

1596
01:32:18,600 --> 01:32:23,000
use very simple, we don't really do much with it at the moment when

1597
01:32:23,000 --> 01:32:27,000
that's expanded out more, maybe towards, you know, the back half of

1598
01:32:27,000 --> 01:32:30,500
the game after the games, you know, the game part of the game is more

1599
01:32:30,500 --> 01:32:34,400
implemented, and we just want to mess around with some graphics sort

1600
01:32:34,400 --> 01:32:37,700
of Glitz on it.

1601
01:32:39,500 --> 01:32:40,300
We would totally like

1602
01:32:40,500 --> 01:32:42,700
Some some query timers.

1603
01:32:50,300 --> 01:32:51,000
Fort 99.

1604
01:32:51,000 --> 01:32:52,400
I was about to ask, what would happen?

1605
01:32:52,400 --> 01:32:55,100
If one of the sneaky guys got themselves stuck in a corner but I see

1606
01:32:55,100 --> 01:32:55,800
one already did.

1607
01:32:56,200 --> 01:32:57,200
Yeah, it's interesting.

1608
01:32:57,400 --> 01:32:59,800
I don't really know what to do with the snakey guys.

1609
01:33:00,000 --> 01:33:00,700
In the future.

1610
01:33:01,000 --> 01:33:02,800
I kind of like the fact that they can get stuck.

1611
01:33:02,800 --> 01:33:05,100
I mean we haven't really tried to do any real monsters.

1612
01:33:05,100 --> 01:33:06,900
You know, I just kind of implemented some stuff so we could see

1613
01:33:06,900 --> 01:33:10,400
whether or not it was convenient to implement them in our system.

1614
01:33:11,800 --> 01:33:14,000
And as we go forward, you know, will continue to improve on those

1615
01:33:14,000 --> 01:33:14,600
sorts of things.

1616
01:33:14,600 --> 01:33:19,400
But basically, like, this game is not supposed to have super smart

1617
01:33:19,400 --> 01:33:19,700
enemies.

1618
01:33:19,700 --> 01:33:22,100
You know, it's kind of supposed to have very predictable and fairly

1619
01:33:22,100 --> 01:33:23,200
dumb enemies.

1620
01:33:24,100 --> 01:33:27,200
But, you know, a fair number of them on the screen.

1621
01:33:27,600 --> 01:33:27,900
You know?

1622
01:33:27,900 --> 01:33:31,200
It, like I said, it's a Zelda Binding of Isaac, e, feeling kind of

1623
01:33:31,200 --> 01:33:31,700
thing.

1624
01:33:31,800 --> 01:33:36,200
I was kind of shooting for, so I don't really want, you know like the

1625
01:33:37,100 --> 01:33:41,300
sort of military shooter the enemy knows to like

1626
01:33:41,500 --> 01:33:43,600
Throw a grenade to flush you out.

1627
01:33:43,600 --> 01:33:47,000
And then, you know, shoots you from the side kind of thing or

1628
01:33:47,000 --> 01:33:47,700
whatever.

1629
01:33:48,400 --> 01:33:49,900
That's not really what I'm looking for.

1630
01:33:50,600 --> 01:33:54,100
So, at the end of the day, if we do end up using snakes, if we do end

1631
01:33:54,100 --> 01:33:56,500
up having some monsters that are snake-like, which I suspect, we will,

1632
01:33:56,500 --> 01:33:57,600
because it's kind of cool.

1633
01:33:59,600 --> 01:34:02,400
I would probably say let's just let them get stuck.

1634
01:34:02,400 --> 01:34:06,300
If they get stuck, I feel like that's just serendipitous and you know,

1635
01:34:06,300 --> 01:34:11,100
maybe we add something to their code to try and prefer not to go into

1636
01:34:11,400 --> 01:34:16,300
Coils or whatever might cause that to happen but like I'm fine with

1637
01:34:16,300 --> 01:34:20,400
the player just having a good time and you know if a snake gets stuck

1638
01:34:20,400 --> 01:34:24,400
or better yet the player like pushes a block into a way in such a way

1639
01:34:24,400 --> 01:34:27,700
that makes it likely that the state gets stuck and then it does that

1640
01:34:27,700 --> 01:34:30,500
seems to me like pretty and keeping with the spirit of this kind of

1641
01:34:30,500 --> 01:34:30,800
game.

1642
01:34:30,800 --> 01:34:33,300
So I wouldn't be inclined to do too much work.

1643
01:34:34,500 --> 01:34:36,000
To prevent something like that.

1644
01:34:59,400 --> 01:35:03,200
Starting tortoise off topic since there wasn't any sound to the pre

1645
01:35:03,200 --> 01:35:06,800
stream or there any sneak peeks regarding handmade con you can give us

1646
01:35:07,500 --> 01:35:08,400
well with handmade.

1647
01:35:08,400 --> 01:35:11,400
Can I tend to try and release the information about speakers as soon

1648
01:35:11,400 --> 01:35:12,200
as I can?

1649
01:35:12,600 --> 01:35:15,500
Unfortunately this year it's been really hard to get final

1650
01:35:15,500 --> 01:35:17,400
confirmations from a lot of people.

1651
01:35:19,700 --> 01:35:24,600
So it's always like, well, you know, I'm still trying to get total

1652
01:35:24,600 --> 01:35:28,100
confirmation from all the people who I need to get

1653
01:35:28,300 --> 01:35:33,100
Complete confirmation from and, you know, it's mostly there but I just

1654
01:35:33,100 --> 01:35:39,800
haven't been able to get people to give the total confirmation that I

1655
01:35:39,800 --> 01:35:45,900
need to be able to continue and so that's just an ongoing effort.

1656
01:35:45,900 --> 01:35:47,700
It's been a real pain in the butt this year.

1657
01:35:47,900 --> 01:35:54,500
If I don't mind saying so just trying to get everything nailed down.

1658
01:35:54,700 --> 01:35:58,100
I was much luckier last year in terms of

1659
01:35:58,200 --> 01:35:59,500
Of how simple it was to.

1660
01:36:00,000 --> 01:36:06,000
Change to get everyone sort of to, to be able to commit and say, yeah.

1661
01:36:06,600 --> 01:36:14,000
And part of that is just this year, you know, I feel like the people

1662
01:36:14,000 --> 01:36:18,500
who I asked or at least a cross-section of people, I asked definitely

1663
01:36:18,500 --> 01:36:24,800
had to do more work potentially to say yes, either because, you know,

1664
01:36:24,800 --> 01:36:29,200
they had to get clearance from a legal department or public relations

1665
01:36:29,200 --> 01:36:29,900
department.

1666
01:36:30,000 --> 01:36:30,600
Pants or whatever.

1667
01:36:30,600 --> 01:36:37,700
And so, you know, that sort of thing, especially when you're asking

1668
01:36:37,700 --> 01:36:40,400
high-level people, you know, and handmade con.

1669
01:36:40,400 --> 01:36:42,800
I try to get people who really know what they're doing and typically

1670
01:36:42,800 --> 01:36:45,900
occupy, a fairly important place in their organization.

1671
01:36:45,900 --> 01:36:51,400
You know, they've got a ton of stuff to do every day and it's hard to

1672
01:36:51,400 --> 01:36:56,100
Wrangle all of those cats that you need to Wrangle.

1673
01:36:56,100 --> 01:36:58,100
And, you know, you have to remember, oh, right.

1674
01:36:58,100 --> 01:36:59,000
I got to do a thing for hammock on.

1675
01:36:59,000 --> 01:37:00,000
See if I can get the

1676
01:37:00,000 --> 01:37:02,300
Lawyers to sign off on me speaking there, whatever.

1677
01:37:02,700 --> 01:37:08,600
So, I think it's tough for sometimes, for some speakers depending on

1678
01:37:08,600 --> 01:37:11,300
what companies do work for, to be able to agree to stuff in a timely

1679
01:37:11,300 --> 01:37:12,000
fashion.

1680
01:37:12,400 --> 01:37:16,300
And that just does mean that in general like, you know, stuff takes

1681
01:37:16,300 --> 01:37:21,300
longer than then, possibly I would like to be able to announce the

1682
01:37:21,300 --> 01:37:22,000
speakers.

1683
01:37:25,000 --> 01:37:29,300
So there's that at the moment I think there's really only one.

1684
01:37:29,700 --> 01:37:33,900
I think that I'm that I'm that I'm having trouble getting confirmation

1685
01:37:33,900 --> 01:37:34,300
from.

1686
01:37:36,900 --> 01:37:41,200
Ironically, some of the people who have had to do a bunch of stuff,

1687
01:37:41,200 --> 01:37:44,500
like getting stuff, cleared, actually did a very good job, getting it

1688
01:37:44,500 --> 01:37:45,100
done in time.

1689
01:37:45,100 --> 01:37:49,000
And so, I think right now, the only people I'm waiting on are actually

1690
01:37:49,000 --> 01:37:51,200
people who don't have to do that.

1691
01:37:52,200 --> 01:37:57,000
So I'm hoping that they can can can make definitive plan sometime

1692
01:37:57,000 --> 01:37:57,300
soon.

1693
01:38:12,200 --> 01:38:15,000
All right, I think I'm going to close it down soon.

1694
01:38:18,900 --> 01:38:19,800
Let's see here.

1695
01:38:22,200 --> 01:38:26,000
So I'm before I do, I'm just going to say

1696
01:38:35,500 --> 01:38:40,200
That here, we've got bug in.

1697
01:38:42,200 --> 01:38:42,700
We call them.

1698
01:38:42,700 --> 01:38:44,500
What do you call these things traversable?

1699
01:38:45,100 --> 01:38:50,800
Where trees aren't occupying their spots?

1700
01:38:52,600 --> 01:38:56,200
I mean it'll be pretty obvious I suppose when we boot up tomorrow I

1701
01:38:56,200 --> 01:38:59,100
unlikely that I won't notice the fact that people are hopping through

1702
01:38:59,100 --> 01:38:59,800
the trees which they

1703
01:39:00,000 --> 01:39:01,100
Very used to do before.

1704
01:39:01,500 --> 01:39:05,700
So probably not a huge necessity to put in that to do but it can't

1705
01:39:05,700 --> 01:39:08,900
hurt just so we don't forget it in case I would have forgotten it.

1706
01:39:11,300 --> 01:39:15,200
All right, thank you, everyone for joining me for this episode of

1707
01:39:15,200 --> 01:39:16,000
handmade hero.

1708
01:39:16,000 --> 01:39:17,200
It's been a pleasure coding with you.

1709
01:39:17,200 --> 01:39:22,700
As always, if you would like to follow along with the source at home,

1710
01:39:22,700 --> 01:39:25,800
you can always do so by pre-ordering the game on handmade hero

1711
01:39:25,800 --> 01:39:26,600
dot-org.

1712
01:39:27,000 --> 01:39:28,700
It comes with a source code every night.

1713
01:39:28,700 --> 01:39:32,200
I update it so that you can do experiments at home with the code base

1714
01:39:33,200 --> 01:39:35,000
and learn along with the series.

1715
01:39:35,200 --> 01:39:38,300
We also have a forum, you can go to ask questions if you have

1716
01:39:38,300 --> 01:39:40,800
questions about what's happening on the show or how the code works.

1717
01:39:41,200 --> 01:39:43,000
We also have a patreon page.

1718
01:39:43,000 --> 01:39:47,000
You can go to if you want to support the video series and we have a

1719
01:39:47,000 --> 01:39:51,000
schedule bot that you can use that, you can subscribe to if you want

1720
01:39:51,000 --> 01:39:53,000
to know when we're going to be live.

1721
01:39:53,500 --> 01:39:58,200
There's also an episode guide maintained by The Fabulous, mid low and

1722
01:39:58,200 --> 01:40:02,800
it tells you what all of the episodes have been in the past, it allows

1723
01:40:02,800 --> 01:40:05,800
you to look at like time coded information on them so you can jump

1724
01:40:05,800 --> 01:40:07,400
right to when we've talked about certain things.

1725
01:40:07,400 --> 01:40:10,700
So it's pretty handy way to catch up on.

1726
01:40:10,900 --> 01:40:14,500
To the series that you may have missed if you want to, that's about it

1727
01:40:14,500 --> 01:40:16,400
for this week, I will be back tomorrow.

1728
01:40:16,800 --> 01:40:18,100
I'm on an alternating schedule.

1729
01:40:18,100 --> 01:40:20,100
Now I'm going to try that for a while 8 p.m.

1730
01:40:20,100 --> 01:40:20,900
and 5 p.m.

1731
01:40:20,900 --> 01:40:21,200
Stream.

1732
01:40:21,200 --> 01:40:21,900
So I do 8:00 p.m.

1733
01:40:21,900 --> 01:40:22,400
5:00 p.m.

1734
01:40:22,400 --> 01:40:22,800
8:00 p.m.

1735
01:40:22,800 --> 01:40:23,500
5:00 p.m.

1736
01:40:24,900 --> 01:40:27,500
That's just an experiment for now because there are some people who

1737
01:40:27,500 --> 01:40:30,700
kind of like the five PM some people kind of like the apm's and I did

1738
01:40:30,700 --> 01:40:33,700
have an opportunity now, to kind of like arrange my schedule to have

1739
01:40:33,700 --> 01:40:34,300
that happen.

1740
01:40:34,500 --> 01:40:34,900
We'll see it.

1741
01:40:34,900 --> 01:40:35,900
Could be a complete disaster.

1742
01:40:35,900 --> 01:40:37,600
Could be good, we'll see.

1743
01:40:38,000 --> 01:40:40,700
But so tomorrow, I will be back here, but I'll be back here.

1744
01:40:40,900 --> 01:40:41,800
At 5 p.m.

1745
01:40:42,200 --> 01:40:43,500
for the Stream.

1746
01:40:44,700 --> 01:40:45,300
That's about it.

1747
01:40:45,300 --> 01:40:49,100
I hope everyone has a good evening of coding and I will see you all

1748
01:40:49,100 --> 01:40:49,500
tomorrow.

1749
01:40:49,600 --> 01:40:50,000
Take it easy.

1750
01:40:50,000 --> 01:40:50,500
Everyone.

