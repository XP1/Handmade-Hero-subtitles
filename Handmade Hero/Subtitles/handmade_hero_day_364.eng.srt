1
00:00:02,100 --> 00:00:04,400
Hello, everyone, and welcome to handmade hero.

2
00:00:04,400 --> 00:00:07,200
The show we could have complete game live on stream.

3
00:00:07,700 --> 00:00:11,000
I believe we had site technical difficulties this morning.

4
00:00:11,600 --> 00:00:15,000
I had to reboot the machine as I sometimes do, for whatever reason.

5
00:00:16,400 --> 00:00:23,800
The OBS, like Arrow capture thing that we use to stream every couple

6
00:00:23,800 --> 00:00:27,900
of weeks, it just goes black work, it doesn't show anything just but

7
00:00:27,900 --> 00:00:30,500
just a black screen and then

8
00:00:30,600 --> 00:00:32,400
I have to reboot the machine.

9
00:00:32,400 --> 00:00:35,700
There's no other way to get it to come back for whatever reason.

10
00:00:35,700 --> 00:00:38,900
I don't know if it's a problem with Windows is no longer, outputting

11
00:00:38,900 --> 00:00:44,500
the arrow, compositor information anymore for some reason or if it's a

12
00:00:44,500 --> 00:00:44,800
bug in.

13
00:00:44,800 --> 00:00:50,600
Oh yes, I have no idea but we are okay now and I believe I've got the

14
00:00:50,600 --> 00:00:51,200
day right day.

15
00:00:51,200 --> 00:00:56,200
364 I had to reset my little dick after as I have to do there's day

16
00:00:56,200 --> 00:00:59,300
363 so day 364 is correct.

17
00:00:59,300 --> 00:01:00,600
So we are good to

18
00:01:00,600 --> 00:01:06,900
To go now and we can go work on our program which is what we want to

19
00:01:06,900 --> 00:01:07,200
do.

20
00:01:08,100 --> 00:01:09,500
So let's go ahead and get started.

21
00:01:09,500 --> 00:01:11,000
Here we are.

22
00:01:11,100 --> 00:01:15,700
When I should probably also get our Blackboard back because obviously

23
00:01:15,700 --> 00:01:20,600
since I rebooted everything got shut down, there we go.

24
00:01:24,700 --> 00:01:30,900
Close that and open up handmade Raj.

25
00:01:30,900 --> 00:01:31,500
There we go.

26
00:01:32,600 --> 00:01:36,800
So where we left off last week is we had finished all of the 3D

27
00:01:36,800 --> 00:01:41,100
pipeline stuff necessary to make it so that we're actually properly

28
00:01:41,100 --> 00:01:46,900
rendering in 3D now, like with actual transforms and all that sort of

29
00:01:46,900 --> 00:01:47,100
stuff.

30
00:01:47,100 --> 00:01:52,600
So, you know, we can actually zoom and rotate our game around and that

31
00:01:52,600 --> 00:01:52,900
sort of

32
00:01:53,000 --> 00:01:54,700
F, which is nice.

33
00:01:54,900 --> 00:01:59,700
So, this is what I wanted for being able to see things in debug mode,

34
00:01:59,900 --> 00:02:04,400
and we can now proceed with putting in our Z buffer.

35
00:02:04,900 --> 00:02:08,300
So, we've got a lot of options for this actually, you can see.

36
00:02:08,300 --> 00:02:09,300
So right now, right?

37
00:02:09,300 --> 00:02:10,600
We're not doing any sorting at all.

38
00:02:10,600 --> 00:02:12,200
That's where this flashing is coming from.

39
00:02:12,200 --> 00:02:15,400
These Sprites are literally right on top of each other.

40
00:02:16,000 --> 00:02:17,900
It exactly the same depth as well.

41
00:02:17,900 --> 00:02:22,100
So if I don't think even a z-buffer, if we turn it on right now would

42
00:02:22,100 --> 00:02:22,800
would do anything for that.

43
00:02:22,900 --> 00:02:26,900
That you can see what sort of happening is that hey whatever order, we

44
00:02:27,000 --> 00:02:30,100
happen to submit them, that's how they get drawn.

45
00:02:30,100 --> 00:02:31,900
So there's really no Rhyme or Reason to it.

46
00:02:33,200 --> 00:02:33,800
For the most part.

47
00:02:33,800 --> 00:02:37,200
Well, there is, but it's a very, like, unintentional sort of random

48
00:02:37,200 --> 00:02:38,600
Rhyme or Reason you might say.

49
00:02:39,400 --> 00:02:43,300
And yeah, that's that's the situation as it stands.

50
00:02:43,300 --> 00:02:47,000
And so our goal, I can even I can walk the hero around in this weird

51
00:02:48,100 --> 00:02:49,200
sort of flattened State.

52
00:02:49,200 --> 00:02:51,500
It's rather amusing actually look at him go.

53
00:02:54,500 --> 00:02:59,500
All right, so what we want to do here is we want to start doing the

54
00:02:59,500 --> 00:02:59,800
thing that

55
00:03:00,100 --> 00:03:03,500
He did all this 3D work to do in the first place which you switch to a

56
00:03:03,500 --> 00:03:09,600
sorting scheme that actually uses the Z buffer, and doesn't have to go

57
00:03:09,600 --> 00:03:13,400
through a individual object to object sort which is what we had

58
00:03:13,400 --> 00:03:17,300
implemented and which I wasn't particularly happy about, okay?

59
00:03:18,300 --> 00:03:19,700
So we need to be able to do that.

60
00:03:19,700 --> 00:03:23,300
And if you take a look at what's going on here, you can kind of see

61
00:03:23,300 --> 00:03:24,000
that right now.

62
00:03:24,000 --> 00:03:29,800
Everything is just a flat Sprite on the Z, it has no nosy.

63
00:03:30,000 --> 00:03:33,400
See depth at all, in terms of changes, right?

64
00:03:33,400 --> 00:03:36,300
So if you look at everything, everything completely flat in Z.

65
00:03:36,500 --> 00:03:40,700
So everything has its X Y position as it used to but it has nosy at

66
00:03:40,700 --> 00:03:40,800
all.

67
00:03:40,800 --> 00:03:44,600
It's just a it's everything is just a thin plane with nothing rising

68
00:03:44,600 --> 00:03:45,600
up, out of it at all.

69
00:03:47,300 --> 00:03:50,100
And so the first thing we're going to have to think about is how we

70
00:03:50,100 --> 00:03:56,600
actually want to submit things so that they have a sensible version of

71
00:03:57,900 --> 00:04:00,700
of sorting that will work with the depth buffer.

72
00:04:01,500 --> 00:04:04,400
And so, let's just talk about that for a second because that's like

73
00:04:04,400 --> 00:04:05,600
the next logical step.

74
00:04:05,600 --> 00:04:07,300
We have to do to turn on the depth buffer.

75
00:04:08,000 --> 00:04:10,000
Now obviously we can just turn on the death before.

76
00:04:10,000 --> 00:04:13,100
The only thing we have to do, there is map, RZ range to something

77
00:04:13,100 --> 00:04:13,600
useful.

78
00:04:18,800 --> 00:04:21,800
Which you know obviously we have to do with our perspective.

79
00:04:21,800 --> 00:04:24,600
Matrix has two members arranged something useful because our Z is,

80
00:04:24,600 --> 00:04:27,000
will be used for the Z buffer or the depth buffer.

81
00:04:28,600 --> 00:04:29,500
And turn it on.

82
00:04:30,500 --> 00:04:35,000
But other than that, the rest of the Finesse in getting the game to

83
00:04:35,200 --> 00:04:40,200
work properly, in terms of sorting is to figure out how we should send

84
00:04:40,200 --> 00:04:45,300
down the, the Sprite information so that the Z buffer does what we

85
00:04:45,300 --> 00:04:47,000
want it to do, right?

86
00:04:47,300 --> 00:04:50,600
Because right now that would not happen right now, we're sending

87
00:04:50,600 --> 00:04:53,000
everything down flattened on top of itself.

88
00:04:53,300 --> 00:04:54,500
It's not going to do any good.

89
00:04:55,800 --> 00:05:00,800
So what we will probably do I'm guessing is will go with kind of a

90
00:05:00,800 --> 00:05:04,500
standard trick one that I've seen done before.

91
00:05:05,600 --> 00:05:06,000
I don't know.

92
00:05:06,000 --> 00:05:11,400
Who is the first person to think of this or use it in a shipping title

93
00:05:11,400 --> 00:05:12,000
or anything.

94
00:05:12,000 --> 00:05:15,700
But I've, you know, I've seen it done a lot and that is to say, well,

95
00:05:15,700 --> 00:05:21,200
okay essentially we've got this flat plane here and that flat plane is

96
00:05:21,200 --> 00:05:22,800
going to be fine for doing some things.

97
00:05:22,800 --> 00:05:25,500
Like if I want to put ground chunks on here,

98
00:05:25,700 --> 00:05:26,700
On tiles or whatever.

99
00:05:26,700 --> 00:05:30,100
You know anything that's on the ground is going to be okay?

100
00:05:30,400 --> 00:05:33,300
In terms of sorting because it's all just part of the ground at the

101
00:05:33,300 --> 00:05:36,500
same height in Z and nothing confusing is happening.

102
00:05:36,500 --> 00:05:40,100
And even if I wanted to put something kind of over the top of

103
00:05:40,100 --> 00:05:43,800
something, I could just give it a slightly, higher Z value.

104
00:05:43,800 --> 00:05:48,000
Just a little bit higher and then it would work properly, right?

105
00:05:48,000 --> 00:05:51,900
I can use the Z values to sort of stack things up on top of each

106
00:05:51,900 --> 00:05:52,100
other.

107
00:05:52,100 --> 00:05:55,500
Just a little bit if I want to, and what I could.

108
00:05:55,600 --> 00:05:59,800
Also, do if I need to is I could use the same Z.

109
00:06:00,000 --> 00:06:01,000
Value for them.

110
00:06:03,000 --> 00:06:08,700
And just send them down in in sorted order as well if I wanted to,

111
00:06:08,700 --> 00:06:09,000
right?

112
00:06:09,100 --> 00:06:11,600
Because typically these things wouldn't be moving up and down pass

113
00:06:11,600 --> 00:06:12,000
each other.

114
00:06:12,000 --> 00:06:15,500
So I would know that things that stack on top of each other.

115
00:06:15,600 --> 00:06:17,000
How they should stack, right?

116
00:06:17,000 --> 00:06:19,300
I could do that as well.

117
00:06:19,300 --> 00:06:23,300
And just use a depth comparison function, that was like greater than

118
00:06:23,300 --> 00:06:25,300
or equal to in Z for example.

119
00:06:25,300 --> 00:06:26,300
Well, I guess in this case,

120
00:06:28,700 --> 00:06:32,000
It'd be less than or equal to because the Z direction will be flipping

121
00:06:32,300 --> 00:06:35,400
although we can really control that but that's beside the point.

122
00:06:35,800 --> 00:06:40,100
Anyway, so if you think about what's going on there, it's like well

123
00:06:40,200 --> 00:06:42,100
stuff on the ground isn't really the problem.

124
00:06:42,100 --> 00:06:45,600
So the problem for us comes when we've got like these trees or the

125
00:06:45,600 --> 00:06:49,300
hero or whatever who's sort of supposed to be standing upright, you

126
00:06:49,300 --> 00:06:49,600
know?

127
00:06:52,100 --> 00:06:53,500
And the problem, what's going on?

128
00:06:53,500 --> 00:06:56,800
There is the things that are standing, upright have to exclude each

129
00:06:56,800 --> 00:06:59,100
other properly when they stack, right?

130
00:06:59,500 --> 00:07:04,300
So, you know, if I've got a tree and I was to draw it here, I could

131
00:07:04,300 --> 00:07:08,200
make sure that it drew on top of the ground but then if someone was

132
00:07:08,200 --> 00:07:12,000
standing behind it, how do I make sure that they appear behind the

133
00:07:12,000 --> 00:07:15,300
tree or if they're standing in front of it that they appear in front

134
00:07:15,300 --> 00:07:16,500
of the tree, right?

135
00:07:17,000 --> 00:07:21,600
And so what people often will do is if we look at this site on if

136
00:07:21,800 --> 00:07:23,500
Camera is looking down this way.

137
00:07:23,700 --> 00:07:26,500
They'll sort of put the Sprites like this.

138
00:07:30,500 --> 00:07:31,100
Right?

139
00:07:31,200 --> 00:07:35,600
They'll sort of stack them so that they do go upwards in Z.

140
00:07:35,800 --> 00:07:39,900
They just go upwards at the same angle as the camera comes down.

141
00:07:40,100 --> 00:07:45,400
So they appear nice and flat onto the camera but they, you know, get

142
00:07:45,400 --> 00:07:47,900
kind of taller as they go.

143
00:07:48,800 --> 00:07:53,400
So that part actually may be harder for us because we're not going to

144
00:07:53,400 --> 00:07:57,400
be very oblique with the artwork depending on the circumstances.

145
00:07:57,800 --> 00:08:00,200
So having it face directly at the

146
00:08:00,300 --> 00:08:03,800
Cameron may also not quite be enough because the the actual facing

147
00:08:03,800 --> 00:08:06,000
direction for the camera, maybe something more like this.

148
00:08:07,600 --> 00:08:11,300
In terms of what we're actually thinking of in terms of there may be

149
00:08:11,300 --> 00:08:16,000
very little tilt there but the scheme still works because if you think

150
00:08:16,000 --> 00:08:21,700
about it what we can do is still produce the Sprite that will look

151
00:08:21,700 --> 00:08:25,700
roughly correct but that does have this shape even for a different

152
00:08:25,700 --> 00:08:26,000
down.

153
00:08:26,000 --> 00:08:27,100
Look, right.

154
00:08:27,500 --> 00:08:31,800
And what I mean by that is you can imagine let's suppose that I'm

155
00:08:31,800 --> 00:08:33,200
looking down like this.

156
00:08:33,500 --> 00:08:37,200
And so in order for a Sprite to appear, it's correct size on this.

157
00:08:37,400 --> 00:08:40,900
Green, it would have to be placed like that, right?

158
00:08:43,700 --> 00:08:48,900
Well, it's free for me to do the same thing with the Sprite.

159
00:08:49,000 --> 00:08:53,000
Meaning, if I come down, like, if I think about how this is getting

160
00:08:53,000 --> 00:08:54,400
projected, right?

161
00:08:55,100 --> 00:08:59,800
If I have my screen, this is not a very good diagram but if I

162
00:09:00,100 --> 00:09:02,900
My screen here, right?

163
00:09:08,000 --> 00:09:13,400
If I imagine the projection and say, well I want the Sprite to appear

164
00:09:13,500 --> 00:09:16,900
as if it looked like that on the surface of the monitor.

165
00:09:17,400 --> 00:09:24,400
If I want to I can extend this line further down, right?

166
00:09:26,900 --> 00:09:29,300
And instead, send down that Sprite.

167
00:09:31,500 --> 00:09:37,400
And that Sprite has the same appearance on the screen as this Sprite

168
00:09:37,400 --> 00:09:38,700
does, right?

169
00:09:39,400 --> 00:09:45,200
But this one Stacks, much more cleanly with someone who might be in

170
00:09:45,200 --> 00:09:46,000
front of it.

171
00:09:46,100 --> 00:09:47,200
What do I mean by that?

172
00:09:47,400 --> 00:09:51,900
Well, imagine I have, you know, something that's coming through here.

173
00:09:53,600 --> 00:09:58,200
And I want it to appear in front of this guy but I'm drawing him like

174
00:09:58,200 --> 00:10:02,000
this, well, it'll appear behind incorrectly in that case.

175
00:10:02,300 --> 00:10:05,600
Whereas if it looks like this, it will appear correctly.

176
00:10:06,000 --> 00:10:07,200
Why is that?

177
00:10:07,300 --> 00:10:11,100
Because this is a sort of the ground point of the Sprite.

178
00:10:11,100 --> 00:10:14,700
Like if we think about what we see, when we look at the Sprite on the

179
00:10:14,700 --> 00:10:21,100
screen here is the tree this part our brain because it is a tree even

180
00:10:21,100 --> 00:10:23,000
though it's just a 2d flat thing.

181
00:10:23,000 --> 00:10:23,200
Our

182
00:10:23,400 --> 00:10:26,800
It immediately goes, oh this part is low to the ground.

183
00:10:26,900 --> 00:10:30,000
This part is high to the ground, right?

184
00:10:31,800 --> 00:10:36,900
That's what your brain is thinking, so matching the Sprite right so

185
00:10:36,900 --> 00:10:39,500
that this part is actually low in Z.

186
00:10:39,500 --> 00:10:43,500
And this part is actually high in Z leads to what the brain will

187
00:10:43,500 --> 00:10:45,400
perceive as correct sorting results.

188
00:10:45,500 --> 00:10:49,400
When something of mid-height comes through here, right?

189
00:10:49,900 --> 00:10:53,900
And it's looking like this as well, it's tax properly against this

190
00:10:53,900 --> 00:10:54,400
thing.

191
00:10:54,500 --> 00:10:58,800
Whereas, if they were like this it wouldn't because the difference in

192
00:10:58,800 --> 00:11:00,800
Z is simply not enough.

193
00:11:01,400 --> 00:11:05,300
Capture the fact that the ground is down here, right?

194
00:11:05,500 --> 00:11:10,400
So, what we want to do is probably output our Sprites, so that we do a

195
00:11:10,400 --> 00:11:13,300
tracer down to the ground where the Sprite is sitting.

196
00:11:13,300 --> 00:11:16,800
So, we have the ground point and we know we're here on the monitor

197
00:11:16,800 --> 00:11:18,000
plane, right?

198
00:11:18,800 --> 00:11:23,600
We probably want to do a tracer and then say, okay, we then want to go

199
00:11:23,600 --> 00:11:27,100
up on a on a diagonal, that's at a particular slope and that slope

200
00:11:27,100 --> 00:11:31,100
will have to select sort of to be something fairly eccentricity.

201
00:11:31,200 --> 00:11:37,300
Trick like that something fairly, you know, at a high angle.

202
00:11:37,300 --> 00:11:40,400
I guess what I'd say, this is probably going to be more than 90,

203
00:11:40,400 --> 00:11:40,900
right?

204
00:11:43,900 --> 00:11:49,300
We want that to basically be prescribed and say alright let's generate

205
00:11:49,300 --> 00:11:54,800
a Sprite where we go up to this particular point so that we end up

206
00:11:54,800 --> 00:11:58,700
with the correct width on the screen or I guess I should say the

207
00:11:58,700 --> 00:11:59,800
correct height on the screen.

208
00:12:00,000 --> 00:12:02,800
For the Sprite that we prescribe for the bitmap, right?

209
00:12:02,800 --> 00:12:07,700
Because we've got an idea of H and W for the bitmap and we want the

210
00:12:07,700 --> 00:12:12,800
screen sort of idea of height to be correct.

211
00:12:12,800 --> 00:12:16,900
So the aspect ratio of the Sprite is maintained, but we want it to

212
00:12:16,900 --> 00:12:23,000
slant upwards relatively dramatically there so that we get that better

213
00:12:23,000 --> 00:12:24,400
sorting, right?

214
00:12:26,900 --> 00:12:29,800
So that's what we kind of want to do here.

215
00:12:29,900 --> 00:12:31,900
The, at least, I think that's what we want to do here.

216
00:12:31,900 --> 00:12:35,000
It's hard to say, but I think that's probably the best option.

217
00:12:35,600 --> 00:12:39,700
And so what we want to do is is make it so that, you know, from the

218
00:12:39,700 --> 00:12:42,000
top down, our thing does look like okay.

219
00:12:42,000 --> 00:12:45,900
There's some trees here, you know, and there's a hero or whatever.

220
00:12:45,900 --> 00:12:48,100
And, you know, maybe there's a tree in front of the hero and stuff

221
00:12:48,100 --> 00:12:51,600
like that, but from the side, right?

222
00:12:51,600 --> 00:12:56,300
If we were to look side on these trees, actually look like that down

223
00:12:56,300 --> 00:12:56,500
here.

224
00:12:56,700 --> 00:13:01,000
Are, you know, and this tree looks like that here and the hero looks

225
00:13:01,000 --> 00:13:03,800
like two Sprites one that's there and one that's there.

226
00:13:04,200 --> 00:13:04,900
You know what I'm saying?

227
00:13:05,800 --> 00:13:10,000
So we kind of want to do something like that because the the effect of

228
00:13:10,000 --> 00:13:13,800
pushing those Sprites through the Z buffer will give us what we want.

229
00:13:16,500 --> 00:13:19,700
And that's I think that's basically

230
00:13:21,100 --> 00:13:23,300
That's the basic idea anyway.

231
00:13:24,800 --> 00:13:25,200
Yeah.

232
00:13:25,600 --> 00:13:27,400
So I think that's what we want.

233
00:13:27,400 --> 00:13:31,500
I think that's going to be better than trying to use flat stock

234
00:13:31,500 --> 00:13:35,300
things, flat stack things, I think would get us right back into the

235
00:13:35,300 --> 00:13:37,000
problem, how do we sort these things?

236
00:13:37,200 --> 00:13:41,400
So I think we want things to be slanted so that they will stack on

237
00:13:41,400 --> 00:13:45,700
each other naturally and use the Z buffer, properly, to figure out who

238
00:13:45,900 --> 00:13:48,300
is standing in front of whom.

239
00:13:56,000 --> 00:13:59,000
Okay, so that's kind of what we need to do.

240
00:13:59,000 --> 00:14:04,100
And hopefully now that you've seen that, you understand why I think

241
00:14:04,100 --> 00:14:07,100
this is going to be important for us for debugging the ability to tilt

242
00:14:07,100 --> 00:14:11,100
down like this because essentially we've got to create these sort of

243
00:14:11,100 --> 00:14:12,500
three-dimensional.

244
00:14:13,500 --> 00:14:18,300
Placards and without being able to bend the camera, we're not going to

245
00:14:18,300 --> 00:14:21,300
have very much intuition for how we actually created them.

246
00:14:21,500 --> 00:14:25,300
We're going to write some code and hope that it's right by an

247
00:14:25,300 --> 00:14:26,200
inspection.

248
00:14:26,800 --> 00:14:29,900
But, you know, without being able to actually play around with it and

249
00:14:29,900 --> 00:14:31,300
see it, like, I can.

250
00:14:31,300 --> 00:14:35,600
When I do this, we wouldn't really know that we'd gotten it right?

251
00:14:35,600 --> 00:14:39,100
Or more importantly, when looks like we'd gotten it wrong, we wouldn't

252
00:14:39,100 --> 00:14:41,900
have a lot of intuition as to why it was wrong.

253
00:14:42,300 --> 00:14:43,200
It might look

254
00:14:43,400 --> 00:14:45,400
Relatively correct in 2D.

255
00:14:45,400 --> 00:14:48,000
But then when we spin it in, 3D we go, right?

256
00:14:48,000 --> 00:14:48,300
Okay.

257
00:14:48,300 --> 00:14:50,000
It's totally busted here, right?

258
00:14:52,000 --> 00:14:53,400
So that's what I would say.

259
00:14:53,400 --> 00:14:55,300
And so that's what I'm going to try and do here.

260
00:14:55,300 --> 00:14:59,800
So let's start I guess by talking about

261
00:15:00,000 --> 00:15:01,200
To turn on the z-buffer.

262
00:15:01,200 --> 00:15:03,500
That's probably the first thing that we want to do and then we've

263
00:15:03,500 --> 00:15:06,200
already talked way back at the beginning of this set.

264
00:15:06,900 --> 00:15:09,700
If you want to go back and double-check what a z-buffer or depth

265
00:15:09,700 --> 00:15:13,900
buffer is, so hopefully that's something that you have familiar.

266
00:15:13,900 --> 00:15:16,600
If you don't, if you're not familiar with, I'm not going to re-explain

267
00:15:16,600 --> 00:15:16,700
it.

268
00:15:16,700 --> 00:15:20,700
Go check that one of those previous versions where I talk about it in

269
00:15:20,700 --> 00:15:21,100
depth.

270
00:15:21,600 --> 00:15:24,300
I think there's one episode particular where I go through it and talk

271
00:15:24,300 --> 00:15:25,700
about how it works entirely.

272
00:15:26,400 --> 00:15:28,000
So that's the one to check out baby.

273
00:15:28,000 --> 00:15:29,800
It's about six six episodes goers

274
00:15:30,500 --> 00:15:31,800
Eight Episodes go, I don't remember.

275
00:15:32,000 --> 00:15:34,400
Was that the very beginning, so it probably will more than that

276
00:15:34,400 --> 00:15:34,900
actually.

277
00:15:35,300 --> 00:15:41,300
Anyway, so if I go into our opengl pipeline, I'm going to show you

278
00:15:41,300 --> 00:15:43,800
roughly where this sort of thing comes into play.

279
00:15:44,500 --> 00:15:46,700
So you can see our opengl renderer commands here.

280
00:15:47,300 --> 00:15:50,500
And you can see us doing our you know, texture 2D scissor test blend

281
00:15:50,500 --> 00:15:51,100
etcetera.

282
00:15:52,100 --> 00:15:55,900
What we need to do here and I don't think we ever disabled it because

283
00:15:55,900 --> 00:15:57,700
it's not on by default.

284
00:15:58,000 --> 00:15:59,900
So you can see we're not we're not really ever.

285
00:16:00,000 --> 00:16:02,400
Are doing anything to disable it.

286
00:16:02,500 --> 00:16:04,200
It's something you have to turn on.

287
00:16:04,700 --> 00:16:08,900
And so in here, I want to be able to do a thing where I say, GL enable

288
00:16:09,700 --> 00:16:14,200
and what this is called I guess, in this case, let's see.

289
00:16:14,800 --> 00:16:16,300
I don't care about that.

290
00:16:16,300 --> 00:16:18,400
What I want is a better class, there we go.

291
00:16:19,600 --> 00:16:22,700
When I'm enabling things such as texturing, I want to be able to

292
00:16:22,700 --> 00:16:28,900
enable depth test right at GL and able GL depth.

293
00:16:28,900 --> 00:16:29,800
Test is a thing that says

294
00:16:29,900 --> 00:16:34,300
Is turned on the depth buffer and when I say turn on the depth buffer,

295
00:16:34,300 --> 00:16:36,600
I actually mean testing against the depth buffer.

296
00:16:36,800 --> 00:16:39,600
There's actually two separately controllable things you can do with

297
00:16:39,600 --> 00:16:41,700
the depth buffer in the fixed function pipeline.

298
00:16:42,100 --> 00:16:46,600
One is to control whether or not you are reading and testing from the

299
00:16:46,600 --> 00:16:47,300
depth buffer.

300
00:16:47,700 --> 00:16:51,600
The other one is to control whether or not you are writing to the

301
00:16:51,600 --> 00:16:52,400
depth buffer.

302
00:16:53,200 --> 00:16:57,800
And so there's actually also another one called GL depth mask and I'll

303
00:16:57,800 --> 00:16:58,800
show you this one.

304
00:17:00,400 --> 00:17:05,500
And doxology L because it's not an enable call its own call.

305
00:17:08,900 --> 00:17:10,099
And you can see here.

306
00:17:10,200 --> 00:17:14,300
What happens is, it's sort of a separate enable kind of thing.

307
00:17:14,500 --> 00:17:19,500
I don't know why these don't go through enable but basically GL depth,

308
00:17:19,500 --> 00:17:22,900
mask is the equivalent of another function.

309
00:17:22,900 --> 00:17:27,300
I don't think we ever talked about GL color mask where you can set the

310
00:17:27,400 --> 00:17:29,000
red green blue and Alpha channels.

311
00:17:29,400 --> 00:17:33,400
And what these do is they essentially allow us to control what we're

312
00:17:33,400 --> 00:17:34,900
working with, right?

313
00:17:37,000 --> 00:17:43,300
So if you imagine the default State we don't have to set these but the

314
00:17:43,300 --> 00:17:48,600
default state looks like this I believe which is that every channel

315
00:17:48,600 --> 00:17:50,800
gets written to depth.

316
00:17:51,200 --> 00:17:55,300
Red green blue and Alpha are all the things we can write to except for

317
00:17:55,300 --> 00:17:57,700
stencil which we haven't really done anything with.

318
00:17:57,700 --> 00:17:59,800
But you can see that one has one down here as well.

319
00:18:00,700 --> 00:18:02,000
We don't need that the moment.

320
00:18:03,400 --> 00:18:06,400
So all the things that we're writing to would be enabled in this case.

321
00:18:06,600 --> 00:18:09,600
Now, what's important to understand about this, and this is true in

322
00:18:09,600 --> 00:18:10,600
the fixed function pipeline.

323
00:18:10,600 --> 00:18:11,500
It's also true.

324
00:18:11,500 --> 00:18:14,500
If you move to shaders, you have even more control there.

325
00:18:15,000 --> 00:18:20,700
But what happens here is, you can see this allows me to control what

326
00:18:20,700 --> 00:18:24,400
I'm actually writing to as a well as what I'm testing against.

327
00:18:24,500 --> 00:18:28,100
So I can say whether or not I'm testing against the depth buffer for

328
00:18:28,100 --> 00:18:31,500
occlusion, but I can also say whether I'm writing to it or whether I'm

329
00:18:31,500 --> 00:18:32,800
running to color channels as well.

330
00:18:33,300 --> 00:18:37,600
What that means is if I wanted to, I could write only to the depth

331
00:18:37,600 --> 00:18:41,900
buffer on a pass if I wanted to, right.

332
00:18:42,100 --> 00:18:45,300
And that's important too because it means you can build up depth

333
00:18:45,300 --> 00:18:49,500
buffers without drawing any thing which sometimes becomes important.

334
00:18:56,000 --> 00:19:00,900
So I'm just very common in rendering is called a depth prepass and so

335
00:19:01,100 --> 00:19:06,000
you know, things like that are only possible because you can change

336
00:19:06,000 --> 00:19:09,600
what you're writing to at any given time Hui.

337
00:19:10,600 --> 00:19:13,000
Yours it's tired in here.

338
00:19:14,100 --> 00:19:17,100
You can change what you're writing to an egg in time and decide not to

339
00:19:17,100 --> 00:19:17,700
write Colors.

340
00:19:18,400 --> 00:19:19,800
So you can just write depth.

341
00:19:19,800 --> 00:19:20,900
If that's what you want.

342
00:19:20,900 --> 00:19:24,100
And vice versa, you can choose not to write the depth buffer only read

343
00:19:24,100 --> 00:19:25,700
from it, for example, and

344
00:19:25,900 --> 00:19:27,000
Colors, Etc.

345
00:19:28,700 --> 00:19:32,800
The but basically, if taken together this sets up the entire drawing

346
00:19:33,000 --> 00:19:34,400
situation that we're working with.

347
00:19:34,800 --> 00:19:39,900
Now there is one caveat here which like I can

348
00:19:42,100 --> 00:19:44,100
look up at the frame buffer.

349
00:19:44,500 --> 00:19:46,100
I don't know where we allocate frame.

350
00:19:46,100 --> 00:19:53,200
Buffers probably right here Jill by for a bit so you can see what

351
00:19:53,200 --> 00:19:53,900
happens here.

352
00:19:53,900 --> 00:19:58,400
GL frame, buffer texture 2D, where we put a texture attachment into

353
00:19:58,600 --> 00:20:00,900
one of these frame buffers.

354
00:20:01,600 --> 00:20:03,600
One of the things that we're going to have to deal with and I'll just

355
00:20:03,600 --> 00:20:10,200
put the to do in here to do create a depth buffer or this Frame

356
00:20:10,200 --> 00:20:10,600
buffer.

357
00:20:12,400 --> 00:20:16,700
one of the things that you have to do now, in addition, to enabling it

358
00:20:16,700 --> 00:20:19,900
is, if you ever change the render Target because your default render

359
00:20:19,900 --> 00:20:23,500
target comes from a different place and we'll talk about in a second,

360
00:20:23,600 --> 00:20:28,000
but anytime you create a render Target like we were doing here that

361
00:20:28,000 --> 00:20:32,200
render Target cannot use depth buffering, if it doesn't have a depth

362
00:20:32,200 --> 00:20:35,500
buffer and you can see here that when we bound this Frame buffer, the

363
00:20:35,500 --> 00:20:39,700
only thing that we gave it was a frame buffer texture which is

364
00:20:39,700 --> 00:20:40,600
basically saying

365
00:20:41,100 --> 00:20:45,500
A color to right into we Never Bound a depth buffer.

366
00:20:45,700 --> 00:20:50,400
Now, binding a depth buffer is very easy to do so it's not a big deal

367
00:20:50,400 --> 00:20:53,200
it's just a called looks exactly the same.

368
00:21:04,900 --> 00:21:05,900
Looks like that.

369
00:21:07,100 --> 00:21:10,800
But so you instead of saying that it goes into a color attachment, you

370
00:21:10,800 --> 00:21:14,300
can say it goes into a depth attachment and then you can use death

371
00:21:14,300 --> 00:21:16,100
buffering on that frame buffer.

372
00:21:16,300 --> 00:21:20,400
But we have to actually generate a texture for it, which at the moment

373
00:21:20,400 --> 00:21:21,500
we are not doing.

374
00:21:21,900 --> 00:21:26,100
So that's really all that is and this this will be something we'll

375
00:21:26,100 --> 00:21:30,000
have to deal with when we go and re-enable sort of like the room

376
00:21:30,000 --> 00:21:32,400
stacking or stuff like that that we had wanted

377
00:21:32,600 --> 00:21:37,200
Do so that's it for depth buffer is there's not a lot to it.

378
00:21:37,300 --> 00:21:43,900
However, like I said we do need our default buffer to have depth

379
00:21:43,900 --> 00:21:46,800
information in it and so there is one of the thing we have to do.

380
00:21:46,800 --> 00:21:50,400
Because remember that and you remember we did this when we looked at

381
00:21:50,400 --> 00:21:54,700
the srgb stuff, our original color and depth buffer and everything

382
00:21:54,700 --> 00:21:58,100
else comes from opengl es Windows initialization.

383
00:21:59,000 --> 00:22:04,100
Stuff in wiggle when we actually do our wiggle, set up for set, pixel

384
00:22:04,100 --> 00:22:09,000
format, when you look in here, you can see that we've set up a bunch

385
00:22:09,000 --> 00:22:12,300
of, you know, a trip stuff and all this sort of thing, right?

386
00:22:12,300 --> 00:22:15,300
Where we go, like suggested, pixel, format intended pick, and we've

387
00:22:15,300 --> 00:22:19,400
got double buffer and support opengl ARB, and all this sort of stuff

388
00:22:19,400 --> 00:22:22,900
in here, pixel type rgba arm, and that sort of thing.

389
00:22:23,100 --> 00:22:23,600
Right.

390
00:22:24,700 --> 00:22:28,100
And what you can see here is like, for example, in both of our things,

391
00:22:28,100 --> 00:22:28,500
we are no.

392
00:22:28,700 --> 00:22:34,200
We're specifying whether we wanted a depth buffer or not, right?

393
00:22:34,500 --> 00:22:35,700
And this is important.

394
00:22:35,700 --> 00:22:40,400
So if we take a look back at some of this code that we had done, when

395
00:22:40,400 --> 00:22:44,100
we did it without thinking, we would want to death buffer if I go to

396
00:22:44,100 --> 00:22:48,500
pixel format descriptor here in Windows, where is it?

397
00:22:48,500 --> 00:22:49,000
There it is.

398
00:22:50,600 --> 00:22:52,800
You can see that there's a seed depth B.

399
00:22:55,500 --> 00:22:59,700
Like a parameter for that very piece of information, right.

400
00:23:00,000 --> 00:23:05,400
And so if C depth, B isn't set to something, we wouldn't be guaranteed

401
00:23:05,400 --> 00:23:09,600
that we would get any kind of depth buffer at all right.

402
00:23:09,600 --> 00:23:13,800
It could just not give us one and so it depends on what kind we want

403
00:23:13,800 --> 00:23:14,100
here.

404
00:23:14,100 --> 00:23:17,500
If we want a floating-point depth, buffer or not, or exactly what we

405
00:23:17,500 --> 00:23:22,900
want, I don't know how greedy you can be in this case in terms of

406
00:23:22,900 --> 00:23:24,300
backwards compatibility.

407
00:23:24,500 --> 00:23:25,200
So you know,

408
00:23:25,400 --> 00:23:28,600
One thing to first see that this might be to say 24.

409
00:23:29,100 --> 00:23:32,600
And to say that the there'd be eight bits of stencil in there,

410
00:23:32,600 --> 00:23:34,300
probably something like that.

411
00:23:35,300 --> 00:23:38,400
And if you want to be greedy, you could say 32 and say one a full

412
00:23:38,400 --> 00:23:41,100
floating Point depth buffer we probably don't need that.

413
00:23:41,100 --> 00:23:44,300
So I think for backwards compatibility sake asking for a 24 bit depth,

414
00:23:44,300 --> 00:23:48,000
buffer is probably the safest thing to do because it probably would

415
00:23:48,000 --> 00:23:51,000
extend to most platforms that I know of that could.

416
00:23:51,000 --> 00:23:54,600
Someone could reasonably be putting animate Hero on.

417
00:23:55,300 --> 00:23:59,800
but that's only our path for failing the extended pick if

418
00:24:00,000 --> 00:24:00,700
Makes sense.

419
00:24:01,700 --> 00:24:07,800
So, you know, when we come back here to this guy, this one doesn't

420
00:24:07,800 --> 00:24:09,900
really talk about those at.

421
00:24:09,900 --> 00:24:10,400
All right?

422
00:24:10,400 --> 00:24:12,800
It does that suggested pixel format index.

423
00:24:12,800 --> 00:24:15,400
Extended pick thing through wiggle, choose paste or an herb.

424
00:24:16,000 --> 00:24:19,600
I don't remember if you have to set something here.

425
00:24:20,100 --> 00:24:24,400
In addition to pixel type ARB that says, whether I want a depth buffer

426
00:24:24,400 --> 00:24:29,000
or not, so probably what we're going to have to do is take a look at

427
00:24:29,000 --> 00:24:29,700
wiggle choose

428
00:24:30,000 --> 00:24:32,400
Axel format or and see,

429
00:24:34,400 --> 00:24:35,300
Where's the spec?

430
00:24:43,200 --> 00:24:44,400
Hello specification.

431
00:24:49,900 --> 00:24:52,200
All right, folks, there is a specification to this.

432
00:24:52,200 --> 00:24:54,700
I don't care about any of these things.

433
00:24:54,700 --> 00:24:57,900
I want the spec please, that'll do.

434
00:25:00,700 --> 00:25:01,300
Here we go.

435
00:25:02,200 --> 00:25:05,700
And so in this case yeah you can see.

436
00:25:05,700 --> 00:25:09,600
So we're not specifying any of these, we're not specifying a red, B,

437
00:25:10,000 --> 00:25:14,200
Green B, blue b or alphabets and we're not specifying, death fits.

438
00:25:14,400 --> 00:25:17,600
I don't know if that's because we were smart or not, let's take a

439
00:25:17,600 --> 00:25:18,100
look.

440
00:25:37,100 --> 00:25:39,300
So, I don't know why we weren't specifying these.

441
00:25:46,700 --> 00:25:48,300
I guess because we didn't care.

442
00:25:51,700 --> 00:25:56,000
But we need to tell it that we at least want a depth buffer, and I

443
00:25:56,000 --> 00:25:58,800
don't know if there's any particular way to fix that.

444
00:26:10,200 --> 00:26:14,400
So these are minimums, so I guess that's fine because that way we

445
00:26:14,400 --> 00:26:18,300
wouldn't prevent it from giving us a 16-bit color buffer if it had

446
00:26:18,300 --> 00:26:19,500
one, right?

447
00:26:20,500 --> 00:26:22,100
So that seems reasonable.

448
00:26:22,300 --> 00:26:27,200
So I could do red green, blue, Alpha, and depth, and just specify

449
00:26:27,200 --> 00:26:29,900
those and that seems good, right?

450
00:26:37,200 --> 00:26:44,700
We're knocking out number 10 which is 1 2 3 4 5 6 7 8.

451
00:26:45,700 --> 00:26:46,200
Nine.

452
00:26:47,800 --> 00:26:54,300
Yeah, so we're knocking that one out and ending the list there, so

453
00:26:54,300 --> 00:26:57,900
that means we would need to sort of put these up here.

454
00:27:16,700 --> 00:27:19,600
All right, so red bits are.

455
00:27:22,500 --> 00:27:25,000
Will say eight, green.

456
00:27:25,600 --> 00:27:28,800
Bits are it again.

457
00:27:30,600 --> 00:27:32,400
Lubitz are

458
00:27:36,300 --> 00:27:39,400
Alpha, it's Barb.

459
00:27:41,700 --> 00:27:44,100
And get B.

460
00:27:49,300 --> 00:27:53,100
So now we should be able to say knockout number 20, if we're not going

461
00:27:53,100 --> 00:27:56,900
to specify that if it doesn't support srgb.

462
00:27:57,600 --> 00:28:00,900
And in theory now we should be specifying in both cases.

463
00:28:01,900 --> 00:28:07,200
The information we need to specify in order to get those buffers.

464
00:28:07,400 --> 00:28:11,500
Now we do need these values so we need, you know,

465
00:28:13,900 --> 00:28:14,900
Red B.

466
00:28:20,600 --> 00:28:21,700
Green bits.

467
00:28:25,200 --> 00:28:26,100
Lubitz.

468
00:28:28,600 --> 00:28:29,600
Alphabets.

469
00:28:30,900 --> 00:28:33,000
And depth bits.

470
00:28:40,600 --> 00:28:46,800
And so now in theory we should have a functioning depth buffer, right?

471
00:28:46,800 --> 00:28:51,600
In theory and by the fact that we're not seeing anything on the

472
00:28:51,600 --> 00:28:53,900
screen, I believe that indicates that we did, in fact, turn it on.

473
00:28:53,900 --> 00:29:00,500
Because remember our open our our projection Matrix is not actually

474
00:29:00,500 --> 00:29:01,500
Loops that

475
00:29:05,100 --> 00:29:09,100
Our projection Matrix is not actually doing anything with the Z.

476
00:29:09,700 --> 00:29:15,000
So, yeah, you can see here, if I, if I leave it off, it it draws.

477
00:29:15,000 --> 00:29:17,100
If I enable it, it doesn't draw.

478
00:29:17,300 --> 00:29:17,900
Right?

479
00:29:18,000 --> 00:29:23,200
So I believe that that is actually turning it on correctly and that we

480
00:29:23,200 --> 00:29:24,000
do have one.

481
00:29:24,800 --> 00:29:26,900
Now, a couple other things that we're gonna have to do.

482
00:29:26,900 --> 00:29:29,300
So, first of all, we need a GL clear.

483
00:29:31,200 --> 00:29:33,200
Because one of the things that would prevent us from

484
00:29:33,300 --> 00:29:36,600
Seeing anything on the screen is the depth buffer.

485
00:29:36,600 --> 00:29:42,000
Don't forget is an actual buffer that needs to be cleared, right?

486
00:29:42,000 --> 00:29:45,300
It's actual information just like color information, it just stores.

487
00:29:45,300 --> 00:29:50,400
The Z values of the things at the locations of every pixel, but right

488
00:29:50,400 --> 00:29:55,600
now we're only cut clearing the color buffer bit and we need to clear

489
00:29:55,600 --> 00:29:59,400
the depth buffer bit as well, or I shouldn't say we're only carrying

490
00:29:59,400 --> 00:29:59,900
color buffer.

491
00:30:00,000 --> 00:30:02,900
This color buffer bit says, clear the color buffer, the depth buffer

492
00:30:02,900 --> 00:30:04,300
bit says, clear the depth buffer.

493
00:30:04,400 --> 00:30:08,300
The B part just means it's a bit mask that I or together to tell clear

494
00:30:08,300 --> 00:30:08,800
what to do.

495
00:30:10,200 --> 00:30:12,800
And I can also much like Geo clear color.

496
00:30:13,000 --> 00:30:16,800
I can also say what I want to

497
00:30:18,400 --> 00:30:23,100
Clear that value to write clear depth.

498
00:30:23,100 --> 00:30:23,700
There it is.

499
00:30:23,800 --> 00:30:24,300
Oops.

500
00:30:27,100 --> 00:30:29,300
Ah, web browser.

501
00:30:33,300 --> 00:30:33,800
There we go.

502
00:30:35,200 --> 00:30:40,900
So you can see here, clear depth, it gives a depth value here that

503
00:30:40,900 --> 00:30:41,800
we're going to clear too.

504
00:30:43,300 --> 00:30:45,400
And one is considered the farthest away.

505
00:30:45,400 --> 00:30:49,200
So again, Z gets larger as you get away from the camera.

506
00:30:49,600 --> 00:30:53,200
So if I wanted to, I could also say, hey, let's just specify this

507
00:30:53,200 --> 00:30:55,100
explicitly that we're going to clear, two one.

508
00:30:55,300 --> 00:30:59,200
So now we're saying clear to this RGB and a and also clear to this

509
00:30:59,200 --> 00:31:04,200
depth when you go now, this will become important potentially later

510
00:31:04,600 --> 00:31:05,600
because remember,

511
00:31:08,600 --> 00:31:12,200
If we want to, we can do a number of things here.

512
00:31:12,500 --> 00:31:15,500
I don't think will actually need to use this, but we can use that

513
00:31:15,500 --> 00:31:19,600
depth clear to create slices through the image as well, right?

514
00:31:20,300 --> 00:31:23,700
If everything Compares against the depth buffer, if we wanted to make

515
00:31:23,700 --> 00:31:27,400
sure that we didn't draw anything past a certain point, we could clear

516
00:31:27,400 --> 00:31:30,400
the depth buffer to that point and then nothing would compare in front

517
00:31:30,400 --> 00:31:32,900
of it and we would never draw anything behind it.

518
00:31:33,000 --> 00:31:36,800
So in effect this is a clipping plane in and of itself.

519
00:31:37,100 --> 00:31:37,800
So in addition to

520
00:31:38,000 --> 00:31:39,500
During the near and far clipping planes.

521
00:31:39,500 --> 00:31:44,600
For example, we also have the ability to set a third kind of value,

522
00:31:44,600 --> 00:31:47,500
not that we need it for anything, but you can with that,

523
00:31:50,200 --> 00:31:51,000
Just for the record.

524
00:31:54,400 --> 00:31:58,000
Alright, so now that we're playing the depth buffer, I would suspect.

525
00:31:58,000 --> 00:31:58,700
Yeah, there we go.

526
00:31:59,900 --> 00:32:01,100
Now that we're clearing the depth buffer.

527
00:32:01,100 --> 00:32:06,600
We're getting a sort of Z tested drawing here but it's still

528
00:32:06,600 --> 00:32:12,800
completely, not what we want for obvious reasons and I guess I'm a

529
00:32:12,800 --> 00:32:15,500
little confused at what I'm seeing, to be honest.

530
00:32:15,500 --> 00:32:17,900
This isn't exactly what I would have expected.

531
00:32:19,900 --> 00:32:23,000
I'm not sure why we're getting

532
00:32:24,500 --> 00:32:27,700
Those gray outlined areas.

533
00:32:27,700 --> 00:32:28,800
Oh wait, no I dunno.

534
00:32:29,100 --> 00:32:36,100
All right so I know exactly where those are in fact so and we can

535
00:32:36,100 --> 00:32:37,800
actually fix those earlier rather than later.

536
00:32:37,800 --> 00:32:38,700
So we might as well do it.

537
00:32:38,700 --> 00:32:41,500
Now while they came up on the screen and I was had to think about what

538
00:32:41,500 --> 00:32:41,900
they were.

539
00:32:42,500 --> 00:32:46,300
So if you remember what happened and I'll draw this on the Blackboard

540
00:32:46,300 --> 00:32:48,200
because this is particularly important to understand.

541
00:32:48,200 --> 00:32:51,800
I suppose it's something that has a subtlety that were probably going

542
00:32:51,800 --> 00:32:53,800
to have to deal with later in some way.

543
00:32:55,200 --> 00:32:57,100
It with Alpha to coverage or something like this.

544
00:32:57,100 --> 00:32:59,800
But so we have an issue.

545
00:33:00,000 --> 00:33:00,500
Here.

546
00:33:01,000 --> 00:33:05,100
Which is that, if you remember how our hero Sprite was made, this was

547
00:33:05,100 --> 00:33:07,700
just we still have never updated to real art yet.

548
00:33:08,100 --> 00:33:10,400
We're still just using mostly sand and stuff.

549
00:33:10,800 --> 00:33:14,800
So what we did is we have a Sprite that was, you know, the ground

550
00:33:14,800 --> 00:33:16,500
Shadow, you know?

551
00:33:17,000 --> 00:33:20,700
And then we had another Sprite that was the hero.

552
00:33:22,600 --> 00:33:24,100
Torso or whatever, right?

553
00:33:24,400 --> 00:33:26,400
And then another one, that was the head and whatever.

554
00:33:26,400 --> 00:33:27,400
Doesn't that right?

555
00:33:27,900 --> 00:33:29,900
Well now that we're drawing with the z-buffer.

556
00:33:30,000 --> 00:33:36,500
Remember this whole thing is getting set to a z value of whatever its

557
00:33:36,500 --> 00:33:38,700
Z is into the depth buffer.

558
00:33:38,800 --> 00:33:42,800
So the depth buffer is writing whatever the Z value is of this Sprite

559
00:33:42,800 --> 00:33:43,700
into the depth buffer.

560
00:33:43,700 --> 00:33:48,000
At that point, what that means is when this Sprite comes along and

561
00:33:48,000 --> 00:33:48,800
tries to draw

562
00:33:50,000 --> 00:33:53,900
Even though the ground Shadow was only this small thing down at the

563
00:33:53,900 --> 00:33:59,900
bottom, this whole area got cleared out by the z-buffer, right?

564
00:34:00,200 --> 00:34:04,100
So when this tries to draw, it's like, no, I'm at the same Z is this?

565
00:34:04,100 --> 00:34:07,200
And there's already something there, I'm not going to draw right?

566
00:34:08,300 --> 00:34:12,500
So there's two things we want to do to help with this situation

567
00:34:12,500 --> 00:34:16,800
because it depends on the circumstance which one is going to make

568
00:34:16,800 --> 00:34:17,199
sense.

569
00:34:17,199 --> 00:34:19,500
There's actually three but we're going to leave one of them for later

570
00:34:19,500 --> 00:34:20,800
because it's more of an advanced thing.

571
00:34:23,300 --> 00:34:27,400
So what we want to do here is say like, oh, okay, well if that's what

572
00:34:27,400 --> 00:34:32,600
we're going to do, we need to first of all probably stopped our

573
00:34:32,600 --> 00:34:35,000
Sprites from filling the z-buffer.

574
00:34:35,800 --> 00:34:40,199
If there isn't any actual color information there, if the alpha value

575
00:34:40,199 --> 00:34:46,500
of the thing is 0, we shouldn't draw in and there's a thing for this

576
00:34:46,500 --> 00:34:48,400
very, very purpose.

577
00:34:50,199 --> 00:34:54,100
Which is g l Alpha, funk.

578
00:34:56,800 --> 00:35:01,700
So what Jill Alpha function does is, it says, all right, in addition

579
00:35:01,700 --> 00:35:04,500
to test against the z-buffer to determine whether I should draw.

580
00:35:04,500 --> 00:35:07,800
I'm also going to test a against the incoming Alpha value.

581
00:35:08,300 --> 00:35:13,000
So if the incoming Alpha value of my Sprite, doesn't meet a certain

582
00:35:13,000 --> 00:35:16,600
threshold, for example, which I can use by setting up the equation

583
00:35:16,600 --> 00:35:17,100
here,

584
00:35:18,400 --> 00:35:19,300
I'm not going to draw it.

585
00:35:19,800 --> 00:35:24,900
So what you can do is say alright I can set never less than equal less

586
00:35:24,900 --> 00:35:27,400
than or equal to greater than not equal greater than equal to are

587
00:35:27,400 --> 00:35:34,000
always right to specify how I would like to compare the alpha value.

588
00:35:34,100 --> 00:35:38,900
Coming from my Sprite with this reference value that I Supply and if

589
00:35:38,900 --> 00:35:42,600
the function does not succeed that I specified, if it's not say less

590
00:35:42,600 --> 00:35:45,800
than the reference value it won't work right?

591
00:35:49,000 --> 00:35:50,600
So you can see here at them to find.

592
00:35:50,600 --> 00:35:53,400
If I set it to jail and never, then nothing will pass.

593
00:35:53,400 --> 00:35:54,600
It's always discarded.

594
00:35:54,900 --> 00:35:55,600
The fragment.

595
00:35:55,800 --> 00:35:59,400
If I said, it's a GLS that it passes if the incoming Alpha value is

596
00:35:59,400 --> 00:35:59,900
less than

597
00:36:00,000 --> 00:36:01,800
Reference value, right?

598
00:36:01,900 --> 00:36:05,600
So basically this would give me something that the smaller the alpha

599
00:36:05,600 --> 00:36:06,100
value was.

600
00:36:06,100 --> 00:36:08,200
The more likely it was going to pass but I don't want that.

601
00:36:09,100 --> 00:36:11,400
What I want is greater than right.

602
00:36:11,400 --> 00:36:14,900
I want to say or perhaps greater than or equal to, I want to pass in a

603
00:36:14,900 --> 00:36:19,100
reference value here, that something low like 0.1 and say if the alpha

604
00:36:19,100 --> 00:36:21,500
value is not greater than that, that assume that there's no Sprite at

605
00:36:21,500 --> 00:36:24,000
this location and you shouldn't draw, right?

606
00:36:25,900 --> 00:36:27,100
So, that's step one.

607
00:36:37,100 --> 00:36:38,900
And I don't know what we want to set this to yet.

608
00:36:38,900 --> 00:36:40,800
We're going to have to talk about that a little bit later.

609
00:36:41,000 --> 00:36:47,900
Certainly it has to be you know, higher than zero but

610
00:36:50,000 --> 00:36:51,200
I forgot one other thing.

611
00:36:52,100 --> 00:36:54,300
Well, I think I know this one by heart, so I guess I don't have with

612
00:36:54,300 --> 00:36:54,500
that.

613
00:36:54,500 --> 00:37:02,700
But this much like the depth mask is controlled by a Boolean enable.

614
00:37:03,000 --> 00:37:07,700
So when I set the function, I still need to turn it on right by

615
00:37:07,700 --> 00:37:10,000
specifying GL and able g l Alpha test.

616
00:37:10,600 --> 00:37:14,100
Once I've turned on Alpha test, then it will actually execute that

617
00:37:14,100 --> 00:37:14,500
thing.

618
00:37:14,800 --> 00:37:17,600
And now, you can see, we're starting to get a little bit better right

619
00:37:17,600 --> 00:37:17,800
now.

620
00:37:17,800 --> 00:37:19,200
You can see that where

621
00:37:19,600 --> 00:37:21,100
Properly, sort of clipping those.

622
00:37:22,400 --> 00:37:23,400
Things to their regions.

623
00:37:23,700 --> 00:37:27,700
But you can see another problem or set of problems and these are all

624
00:37:27,700 --> 00:37:28,000
problems.

625
00:37:28,000 --> 00:37:31,900
We're going to have to deal with a little bit more carefully as we go.

626
00:37:32,100 --> 00:37:39,100
So you can see here that if you look in sort of the the areas around

627
00:37:39,100 --> 00:37:44,100
the tree, for example, or around this piece here, when it's actually

628
00:37:44,100 --> 00:37:48,400
visible, you can see that by clipping it to 0.1.

629
00:37:48,600 --> 00:37:52,000
We actually create two types of problems and this

630
00:37:52,300 --> 00:37:57,400
Happen wherever we clip it to if we clip it to too high of a value,

631
00:37:57,500 --> 00:37:59,200
you don't get any softness.

632
00:37:59,200 --> 00:38:02,900
You don't get the softness that you would expect if we clip it to too

633
00:38:02,900 --> 00:38:04,300
low of a value.

634
00:38:05,000 --> 00:38:11,200
Then we get, you know, sort of a band area where we you know, where

635
00:38:11,200 --> 00:38:15,800
were the alpha isn't really high enough to Warrant clipping but it's

636
00:38:15,800 --> 00:38:19,900
still going to happen and you can see, oh wait that's not hot code

637
00:38:19,900 --> 00:38:20,500
reloadable.

638
00:38:20,500 --> 00:38:21,900
I should have made that reloadable.

639
00:38:22,900 --> 00:38:26,400
But I didn't, you can see that.

640
00:38:26,400 --> 00:38:29,600
Let's say we made it that it just has to be greater than 0, for

641
00:38:29,600 --> 00:38:30,200
example.

642
00:38:33,300 --> 00:38:37,400
Now you can really see where the problem is here, right?

643
00:38:37,600 --> 00:38:41,800
And the reason that that problem exists is just because we don't at

644
00:38:41,800 --> 00:38:47,100
the moment, have any clean way of making sure that the draw order is

645
00:38:47,100 --> 00:38:49,300
proper in this case, right?

646
00:38:50,600 --> 00:38:54,000
Because those Alpha values and this is an inherent problem with the

647
00:38:54,000 --> 00:38:54,700
z-buffer.

648
00:38:55,000 --> 00:38:58,200
It's the one problem I think that we're really going to have with it

649
00:38:58,200 --> 00:38:59,200
that we have to be

650
00:39:00,100 --> 00:39:01,700
Ever about how we're going to do it.

651
00:39:03,100 --> 00:39:11,400
But what happens is, if you imagine before why, our Alpha blending

652
00:39:11,400 --> 00:39:16,700
worked, if I have a tree, and then I have something behind the tree.

653
00:39:20,700 --> 00:39:24,500
This whole area has Alpha values in it, right?

654
00:39:24,900 --> 00:39:29,000
And those Alpha values are important, because they are telling me how

655
00:39:29,000 --> 00:39:31,900
much of the tree to blend with whatever is behind the tree.

656
00:39:32,100 --> 00:39:34,900
It's a way of getting sub-pixel information in there.

657
00:39:34,900 --> 00:39:38,400
It's like, here's how much of the tree was in that one pixel or

658
00:39:38,400 --> 00:39:39,300
something, right?

659
00:39:40,200 --> 00:39:43,900
And so in that case, what that means is we have to know what's behind

660
00:39:43,900 --> 00:39:46,200
it first before we can use, what's in front of it.

661
00:39:46,500 --> 00:39:49,700
In this case that becomes a big problem because

662
00:39:49,900 --> 00:39:53,500
As we don't know what order these things were drawn in the whole point

663
00:39:53,500 --> 00:39:56,200
is we want to draw them in any old order, we don't want have to think

664
00:39:56,200 --> 00:39:57,500
about it too much, right?

665
00:39:58,300 --> 00:40:01,700
So it's highly likely that rather than this being drawn first, and

666
00:40:01,700 --> 00:40:05,500
this being drawn, second this may be drawn first and this will be

667
00:40:05,500 --> 00:40:07,600
drawn second in that case.

668
00:40:08,300 --> 00:40:13,600
We're totally we're we there's nothing we can really do, we given this

669
00:40:13,600 --> 00:40:17,300
the The Limited tools we have at the moment because when this tree

670
00:40:17,300 --> 00:40:18,700
draws it will clear.

671
00:40:18,700 --> 00:40:19,600
It will set the Z.

672
00:40:19,800 --> 00:40:23,400
A buffer all along its entire line.

673
00:40:23,400 --> 00:40:25,300
There, no matter what the alpha values were, as long as they were

674
00:40:25,300 --> 00:40:29,500
above zero, it'll set them to basically being at its Z value.

675
00:40:29,800 --> 00:40:34,100
This will come along and be at a deeper Z values, further away, it

676
00:40:34,100 --> 00:40:35,900
won't draw anything in there.

677
00:40:36,700 --> 00:40:39,000
So what we end up with is no blending

678
00:40:40,300 --> 00:40:40,800
Right?

679
00:40:41,200 --> 00:40:42,400
We get perfect blending.

680
00:40:42,400 --> 00:40:45,200
If they happen to draw on the right order because the Z buffer will

681
00:40:45,200 --> 00:40:45,600
correctly.

682
00:40:45,600 --> 00:40:48,700
Determine that this tree was in front of whatever was behind it.

683
00:40:49,100 --> 00:40:52,800
But if they happen to draw on the wrong order just happenstance, then

684
00:40:53,000 --> 00:40:55,800
they still sort properly because the z-buffer takes care of the

685
00:40:55,800 --> 00:40:59,100
Sorting, but we don't get any blending right.

686
00:41:02,100 --> 00:41:02,900
And that's a problem.

687
00:41:05,000 --> 00:41:06,500
so hopefully, you can see

688
00:41:07,800 --> 00:41:08,100
Mmm?

689
00:41:08,300 --> 00:41:12,100
Why that causes a nasty problem because again we don't know what the

690
00:41:12,100 --> 00:41:15,400
sort of these things are until the z-buffer takes care of for us.

691
00:41:15,400 --> 00:41:18,100
And so we don't have any way of really reproducing that blend that we

692
00:41:18,100 --> 00:41:19,000
need to reproduce.

693
00:41:21,000 --> 00:41:22,800
So that's going to be something that we're going to have to deal with

694
00:41:22,800 --> 00:41:23,100
later.

695
00:41:23,100 --> 00:41:26,600
It's important and and this problem only gets worse with shadows,

696
00:41:26,800 --> 00:41:29,200
Shadows are supposed to be soft things.

697
00:41:29,200 --> 00:41:32,700
That kind of have lots of low Alpha values and they're the worst,

698
00:41:32,700 --> 00:41:33,300
right?

699
00:41:33,900 --> 00:41:37,400
Because they're effectively a transparent object so you can see that.

700
00:41:37,500 --> 00:41:38,000
We've got it.

701
00:41:38,000 --> 00:41:41,200
We're going to have to think a bit and do some cleverness with our

702
00:41:41,200 --> 00:41:41,800
rendering.

703
00:41:43,800 --> 00:41:47,300
In order to get something that's a reasonable that that's reasonably

704
00:41:47,300 --> 00:41:48,200
workable there.

705
00:41:48,900 --> 00:41:54,200
And yeah, that's going to take some cleverness to avoid having to get

706
00:41:54,200 --> 00:41:55,700
back into the business of sorting everything.

707
00:41:55,700 --> 00:41:58,100
Again, which is exactly what we don't want to do.

708
00:41:58,800 --> 00:41:59,900
And so we do need to

709
00:42:00,200 --> 00:42:04,100
To bring some cleverness there.

710
00:42:04,200 --> 00:42:06,200
When we when we when that we get to that point.

711
00:42:06,600 --> 00:42:11,100
Now, the other thing we need to do here is we need to set up a very

712
00:42:11,100 --> 00:42:13,600
similar to our Alpha function.

713
00:42:15,200 --> 00:42:16,900
We need to talk about our debt function.

714
00:42:17,500 --> 00:42:19,200
So let's take a look at that function as well.

715
00:42:20,400 --> 00:42:23,500
It's basically the same kind of thing.

716
00:42:26,200 --> 00:42:26,900
Whoop it up.

717
00:42:27,700 --> 00:42:29,400
So you can see the GL death Funk here.

718
00:42:29,400 --> 00:42:32,000
Now, you'll notice that unlike Alpha Funk, it doesn't take a reference

719
00:42:32,000 --> 00:42:32,300
value.

720
00:42:32,300 --> 00:42:32,700
Why?

721
00:42:32,700 --> 00:42:35,500
Because that value is coming from the depth buffer, right?

722
00:42:35,900 --> 00:42:38,800
In the alpha case, we're just setting a threshold in the depth case,

723
00:42:38,800 --> 00:42:42,700
we're talking about how to compare against the death buffer, same set

724
00:42:42,700 --> 00:42:46,000
of options here, we can have it so that it never passes, we can say

725
00:42:46,200 --> 00:42:50,000
that it's got to be less than whatever the ink the store depth value

726
00:42:50,000 --> 00:42:51,300
is, right?

727
00:42:51,800 --> 00:42:52,900
And that's what we want.

728
00:42:52,900 --> 00:42:55,800
In this case, if we wanted to draw things in

729
00:42:56,000 --> 00:42:56,200
Order.

730
00:42:56,200 --> 00:42:59,700
However what we really want is less than or equal to, right?

731
00:43:00,000 --> 00:43:02,900
We want to be able to say, hey if the thing coming in happens to be

732
00:43:02,900 --> 00:43:04,300
the same as what was already there.

733
00:43:04,300 --> 00:43:06,800
Draw it because we're probably going to want to do things or we send

734
00:43:06,800 --> 00:43:10,200
three things down, say that are meant to go on top of each other, all

735
00:43:10,200 --> 00:43:13,500
the same Z value, and we want a good chance of that working.

736
00:43:14,400 --> 00:43:16,600
So we probably want something like that.

737
00:43:19,900 --> 00:43:22,400
And now you can see, we get back to sort of closer to what we had

738
00:43:22,400 --> 00:43:27,400
originally because now that drawing order is getting respected, right?

739
00:43:27,500 --> 00:43:29,000
And so that's a good thing as well.

740
00:43:30,900 --> 00:43:31,500
So, there we go.

741
00:43:31,500 --> 00:43:33,500
Now our Z buffer is functional.

742
00:43:33,700 --> 00:43:35,100
We are drawing through it.

743
00:43:35,500 --> 00:43:39,100
We're going to have to do some work regarding Alpha Testing, and we're

744
00:43:39,100 --> 00:43:40,400
going to have to think about that.

745
00:43:41,500 --> 00:43:43,900
Again, that's not really something that I've typically had to deal

746
00:43:43,900 --> 00:43:48,000
with, when I've been working on game stuff because I'm usually used to

747
00:43:48,000 --> 00:43:51,100
3D things more but this is a problem.

748
00:43:51,100 --> 00:43:51,900
Even 3D things.

749
00:43:51,900 --> 00:43:54,400
You end up with the transparency problem that we talked about.

750
00:43:54,700 --> 00:43:57,200
We have to sort your transparent objects and stuff like that.

751
00:43:57,400 --> 00:43:59,200
Obviously, for this game we want to get out of the starting.

752
00:43:59,400 --> 00:44:00,800
We want to be able to throw a lot of things in here.

753
00:44:00,800 --> 00:44:04,500
We're going to find some clever Solutions there, maybe use alpha

754
00:44:04,500 --> 00:44:07,600
coverage, or things like that, but we'll try to figure out some good

755
00:44:07,600 --> 00:44:11,600
Solutions using the horse power of the GPU, which were not really

756
00:44:11,600 --> 00:44:13,200
utilizing in most other ways, right?

757
00:44:13,200 --> 00:44:16,800
Because we're more simplistic 2-D game, you know, we're going to start

758
00:44:16,800 --> 00:44:19,300
thinking about it and just figure out, okay, what's a good way that we

759
00:44:19,300 --> 00:44:22,900
can utilize the power of the GPU to get us some nice blending here?

760
00:44:24,500 --> 00:44:29,300
Without having to worry too much about sorting, right?

761
00:44:29,900 --> 00:44:32,400
So anyway, that's where we're at.

762
00:44:32,500 --> 00:44:36,100
And so now we just need to start start to work on how we're going to

763
00:44:36,100 --> 00:44:40,000
stack those Sprites up because this flashing is still going to persist

764
00:44:40,100 --> 00:44:43,300
until we actually have something stable to be sorted.

765
00:44:43,300 --> 00:44:47,300
You can see when I kind of come through here the the problem that we

766
00:44:47,300 --> 00:44:53,800
have there which is that we you know we really just don't have any way

767
00:44:53,800 --> 00:44:54,000
for this.

768
00:44:54,200 --> 00:44:56,200
Before you differentiate between us is all stacked on top of each

769
00:44:56,200 --> 00:44:58,000
other and the draw determines when they draw.

770
00:44:58,200 --> 00:44:59,500
You can also see

771
00:45:00,600 --> 00:45:03,200
due to this right here, you can see

772
00:45:05,800 --> 00:45:09,300
If you can see that as I rotate back and forth, you can see the trees

773
00:45:09,300 --> 00:45:10,700
kind of slice in and out.

774
00:45:10,800 --> 00:45:13,700
That is actually a classic case of z-fighting, right.

775
00:45:14,000 --> 00:45:17,000
I've got two things stacked on top of each other.

776
00:45:17,000 --> 00:45:22,100
That happened to be at the exact same z-values the whole way, but

777
00:45:22,100 --> 00:45:26,800
because they are different actual triangles, right?

778
00:45:26,800 --> 00:45:30,300
Because one of them is, you know, like for example, this is two

779
00:45:30,300 --> 00:45:35,400
triangles here that make up a square and this is

780
00:45:35,500 --> 00:45:37,500
Two triangles that are bigger, right?

781
00:45:37,500 --> 00:45:39,300
That don't that don't coincide.

782
00:45:39,300 --> 00:45:41,800
They're not identical iterating.

783
00:45:41,800 --> 00:45:45,900
The Z values across those triangles leads to slightly different

784
00:45:45,900 --> 00:45:46,500
results.

785
00:45:47,000 --> 00:45:50,800
And so they no longer are exactly equal and you get depending on where

786
00:45:50,800 --> 00:45:51,500
the iterators are.

787
00:45:51,500 --> 00:45:55,700
You can see the banding in, how the, that iterate, those iterators

788
00:45:56,000 --> 00:45:58,400
were iterating and where the Precision was for the transform.

789
00:45:58,900 --> 00:46:01,200
You can see that happening with the z-fighting, right?

790
00:46:05,600 --> 00:46:07,600
So we've got one more thing, we need to do.

791
00:46:08,300 --> 00:46:10,100
I guess now that I think about it though.

792
00:46:10,100 --> 00:46:14,600
The z-fighting remind me of this before we go any further with our Z

793
00:46:14,600 --> 00:46:18,600
buffer, which is that we're not properly processing Z values to give

794
00:46:18,600 --> 00:46:21,300
them good values for for the Z buffer.

795
00:46:21,300 --> 00:46:24,100
Because remember our projection Matrix, we have that yet.

796
00:46:24,900 --> 00:46:26,900
So we do want to do that and in fact that might improve that

797
00:46:26,900 --> 00:46:28,700
z-fighting there a little bit but that's separate issue.

798
00:46:30,400 --> 00:46:32,800
Because we don't really want that Z fighting in the first place,

799
00:46:33,200 --> 00:46:33,600
right?

800
00:46:35,800 --> 00:46:36,100
All right.

801
00:46:36,100 --> 00:46:38,000
So let's see.

802
00:46:48,100 --> 00:46:49,800
Where is our projection Matrix?

803
00:46:51,600 --> 00:46:52,100
Here we go.

804
00:46:53,200 --> 00:46:55,400
So here's what we're calling our perspective, projection.

805
00:46:56,500 --> 00:47:00,000
And let's go ahead and grab that all the math.

806
00:47:04,500 --> 00:47:05,200
So here we are.

807
00:47:07,400 --> 00:47:10,200
So you can see here, here's our perspective projection.

808
00:47:11,400 --> 00:47:16,200
And what's happening right now is whatever the Z value is that comes

809
00:47:16,200 --> 00:47:18,000
in is the Z value that comes out.

810
00:47:19,300 --> 00:47:21,900
This is kind of useless, right?

811
00:47:22,100 --> 00:47:25,400
If you think about it, the reason it's kind of useless is because we

812
00:47:25,400 --> 00:47:30,500
know that opengl wants the Z values that get produced from the depth

813
00:47:30,500 --> 00:47:33,000
buffer to be in a certain range.

814
00:47:33,000 --> 00:47:36,000
I think it's is I would have thought it would have been negative one

815
00:47:36,000 --> 00:47:37,800
to one but it sounds like it's 0 to 1.

816
00:47:38,200 --> 00:47:38,800
I don't know if that's

817
00:47:45,500 --> 00:47:47,400
Kind of want the opengl spec here.

818
00:47:55,500 --> 00:47:56,100
It's too bad.

819
00:47:56,100 --> 00:47:58,500
Jocks dot DL doesn't have glue perspective.

820
00:48:03,700 --> 00:48:07,000
Can't remember, I tried to grab a good one of these.

821
00:48:08,900 --> 00:48:10,800
I don't remember which page had a good one.

822
00:48:10,800 --> 00:48:11,400
Here it is.

823
00:48:14,700 --> 00:48:18,500
So I don't remember what open Jill wants in terms of the depth values

824
00:48:18,600 --> 00:48:22,800
but I assume it wants it - one two, one.

825
00:48:23,400 --> 00:48:27,000
Yeah, so like I said, I thought it was negative 1 to 1 everywhere but

826
00:48:27,300 --> 00:48:28,000
I wasn't sure.

827
00:48:28,000 --> 00:48:31,900
And then so I guess it is, in fact, native whenever and then just when

828
00:48:31,900 --> 00:48:34,800
it does the window, when it when it actually outputs those

829
00:48:34,800 --> 00:48:37,300
coordinates, they become between 0 and 1.

830
00:48:37,400 --> 00:48:41,600
After the fact, it sounds like because right?

831
00:48:41,800 --> 00:48:43,100
If that wasn't the case,

832
00:48:55,900 --> 00:48:56,400
There we go.

833
00:48:56,900 --> 00:49:00,500
If that wasn't the case, then you wouldn't be clearing between zero

834
00:49:00,500 --> 00:49:01,600
and one, right?

835
00:49:01,700 --> 00:49:04,200
You'd be queer clearing between negative 1 and 1.

836
00:49:06,100 --> 00:49:10,300
And so I think that, you know, they did the math as if you are on the

837
00:49:10,300 --> 00:49:18,400
negative 1 to 1 Cube but you know in actuality they then turn around

838
00:49:18,400 --> 00:49:23,000
after it comes out of that and sort of fudge it back into a different

839
00:49:23,000 --> 00:49:23,400
range.

840
00:49:25,900 --> 00:49:26,600
Right.

841
00:49:27,500 --> 00:49:28,000
Okay.

842
00:49:28,200 --> 00:49:34,000
So anyway, you can kind of see here, this this stuff is you can ignore

843
00:49:34,000 --> 00:49:38,300
this stuff for the moment, but you can kind of see what has to be

844
00:49:38,300 --> 00:49:39,200
happening here.

845
00:49:39,200 --> 00:49:42,300
What they're doing is they're trying to map between the near and far

846
00:49:42,300 --> 00:49:43,100
clipping planes.

847
00:49:43,300 --> 00:49:50,000
They're trying to map that range into the negative 1 to 1 range and we

848
00:49:50,000 --> 00:49:55,400
I think really could probably choose which way we mapped it, whether

849
00:49:55,400 --> 00:49:55,500
it

850
00:49:55,800 --> 00:50:00,100
- 121 where - one was, the near clipping plane and one was the far

851
00:50:00,100 --> 00:50:03,400
clipping plane or the other way around, right?

852
00:50:03,400 --> 00:50:07,200
We could do either or but

853
00:50:10,500 --> 00:50:15,600
it would just all that would do would change how our depth values were

854
00:50:16,000 --> 00:50:19,300
what we would set our depth function to write if we mapped it.

855
00:50:19,300 --> 00:50:23,400
So that negative one to one, where one was the furthest thing away and

856
00:50:23,400 --> 00:50:24,900
- one was the closest thing.

857
00:50:25,400 --> 00:50:29,500
Then obviously we want to depth um, to be less than if we did it the

858
00:50:29,500 --> 00:50:33,200
other way around, we want our deaf Funk to be greater than right, so

859
00:50:33,400 --> 00:50:38,200
how we map our Z in the perspective Matrix would determine how we

860
00:50:38,200 --> 00:50:39,900
would have to test against it.

861
00:50:46,500 --> 00:50:48,700
So let's work out the math here, right?

862
00:51:02,400 --> 00:51:03,000
so,

863
00:51:05,000 --> 00:51:07,700
What we want to do here is set an earring far clipping plane.

864
00:51:08,300 --> 00:51:12,300
These are basically going to be in that camera diagram that we've sort

865
00:51:12,300 --> 00:51:13,600
of been drawing very often.

866
00:51:14,400 --> 00:51:15,500
They're going to be.

867
00:51:15,500 --> 00:51:19,300
If this is where I'm looking from, here's my little eye, looking at

868
00:51:19,300 --> 00:51:21,900
the world, the world is out here, right?

869
00:51:22,100 --> 00:51:28,900
There's going to be some place where I cannot see anything on this

870
00:51:28,900 --> 00:51:30,300
side of it, right?

871
00:51:30,300 --> 00:51:33,400
Nothing out here is visible anything on this side of this plane?

872
00:51:34,000 --> 00:51:34,700
And there's also going

873
00:51:34,800 --> 00:51:36,500
Something out in the distance.

874
00:51:37,200 --> 00:51:39,600
That's the far clipping plane and nothing out here.

875
00:51:39,600 --> 00:51:40,600
Nothing to this side of.

876
00:51:40,600 --> 00:51:44,700
It can be seen and so it's creating sort of a boundary

877
00:51:46,600 --> 00:51:47,800
That looks like this.

878
00:51:48,100 --> 00:51:51,600
Only this region is visible, right?

879
00:51:52,900 --> 00:51:55,900
So in addition to sort of the boundaries that the screen creates in

880
00:51:55,900 --> 00:51:57,100
terms of the Left, Right?

881
00:51:57,100 --> 00:52:01,700
Top and bottom boundaries, there's these near and far boundaries and

882
00:52:01,700 --> 00:52:05,000
those boundaries clip things in z

883
00:52:06,700 --> 00:52:11,400
Furthermore, they set up the range for our Z buffer, because these are

884
00:52:11,400 --> 00:52:15,100
all the values Z from negative 1 to 1.

885
00:52:15,200 --> 00:52:18,500
We'll only Encompass just this range

886
00:52:20,100 --> 00:52:20,400
Right?

887
00:52:20,400 --> 00:52:24,700
That's, that's the entirety of the range that it will encounter.

888
00:52:25,400 --> 00:52:31,100
And so, what that means again, is that, you know, when we do our Z

889
00:52:31,100 --> 00:52:33,100
buffer, the Precision,

890
00:52:35,100 --> 00:52:36,200
Of the z-buffer.

891
00:52:36,200 --> 00:52:40,300
How precise it can be with its computations, and comparisons is

892
00:52:40,300 --> 00:52:46,100
entirely dependent upon how big this this area is, right?

893
00:52:47,800 --> 00:52:53,900
However, we map this space, the Z buffer has only the same amount of

894
00:52:53,900 --> 00:52:58,500
precision, no matter how big I make this.

895
00:52:58,900 --> 00:53:03,900
It has to still cover the entire range with the same quantities in z.

896
00:53:04,600 --> 00:53:05,200
Right.

897
00:53:06,500 --> 00:53:11,900
So it doesn't have any ability to increase, you know, it can't just

898
00:53:11,900 --> 00:53:13,700
arbitrarily invent more Precision.

899
00:53:13,700 --> 00:53:17,700
Somehow, if I want to make something bigger, it means that I'm losing

900
00:53:17,700 --> 00:53:19,900
Precision throughout this volume.

901
00:53:19,900 --> 00:53:23,100
If I make the volume bigger, whereas if I make the volume smaller, I

902
00:53:23,100 --> 00:53:28,900
get more precise because I can I have more distinct Z values per unit

903
00:53:29,100 --> 00:53:31,600
of Z / distance in the world.

904
00:53:31,800 --> 00:53:32,300
Basically,

905
00:53:34,700 --> 00:53:38,600
All right, so what I want to do here is I want to be able to prescribe

906
00:53:38,600 --> 00:53:41,800
the near and far clipping planes in terms of distances from the

907
00:53:41,800 --> 00:53:42,300
camera.

908
00:53:42,700 --> 00:53:46,400
And then I want to convert the incoming values so that they lie

909
00:53:46,400 --> 00:53:49,400
between those two Z values.

910
00:53:49,500 --> 00:53:52,800
Right now, what we know about the Z values that are coming in

911
00:53:52,800 --> 00:53:59,800
obviously and you can see that here is that the Z values coming in are

912
00:54:00,500 --> 00:54:03,400
Sort of going the wrong direction as well, right?

913
00:54:03,500 --> 00:54:06,000
So the Z value is coming in are going this way.

914
00:54:06,000 --> 00:54:07,600
They're coming out toward the camera.

915
00:54:08,800 --> 00:54:12,800
But opengl wants to think of them going away from the camera is the

916
00:54:12,800 --> 00:54:13,500
more natural way?

917
00:54:13,500 --> 00:54:16,800
That it was thing about that's why we had to negate our W parameter,

918
00:54:17,000 --> 00:54:17,500
right?

919
00:54:19,300 --> 00:54:22,500
So in order to think the this through what we have to do is say, all

920
00:54:22,500 --> 00:54:23,100
right.

921
00:54:23,400 --> 00:54:26,900
We've got a near and far, clipping plane, our Z values are coming in,

922
00:54:27,000 --> 00:54:31,800
they're coming in this way, but the near and far clipping planes are

923
00:54:31,800 --> 00:54:35,300
going to probably just be described as distances from the camera.

924
00:54:35,400 --> 00:54:37,400
So they're going to be positive, right?

925
00:54:37,400 --> 00:54:41,000
So the near clip planes, you know, it 0.4, F or something in the far

926
00:54:41,000 --> 00:54:44,600
clip planes like, you know, 100.0 f for something like this.

927
00:54:44,600 --> 00:54:46,900
I don't know what will actually set them to write.

928
00:54:47,300 --> 00:54:49,000
But what that means is, those are

929
00:54:49,100 --> 00:54:52,100
Distances along the negative Z Direction.

930
00:54:53,900 --> 00:54:54,700
Does that make sense?

931
00:54:56,400 --> 00:54:59,700
So what we want to do here is say well, okay, you know, we've got

932
00:54:59,700 --> 00:55:04,300
these two points here is my near, here's my far right?

933
00:55:05,900 --> 00:55:08,900
And I've got my incoming Z, how do I map it?

934
00:55:08,900 --> 00:55:14,400
So that this becomes negative 1 and this becomes 1 right?

935
00:55:14,400 --> 00:55:15,900
Which is what I said I wanted.

936
00:55:17,100 --> 00:55:20,400
Well, I know some equations, right?

937
00:55:20,600 --> 00:55:25,500
I know some, some things that I want to have happen.

938
00:55:25,700 --> 00:55:26,300
Right.

939
00:55:27,100 --> 00:55:31,000
So essentially what I'm saying is I've got a function that I wanted to

940
00:55:31,000 --> 00:55:35,000
find that a z-value kind of comes into, right?

941
00:55:35,700 --> 00:55:40,000
And whatever my z-buffer value is comes out, right?

942
00:55:40,200 --> 00:55:43,300
So this produces that z-buffer value that's supposed to be negative 1

943
00:55:43,300 --> 00:55:43,800
to 1.

944
00:55:44,200 --> 00:55:48,700
I know that if I put in like, whatever this whatever this function is

945
00:55:48,700 --> 00:55:51,100
going to be, I know some things about it.

946
00:55:51,400 --> 00:55:55,500
I know that if what I feed it is negative n, right?

947
00:55:55,600 --> 00:56:00,900
So if I feed it, this value right here, this point in the world, I

948
00:56:00,900 --> 00:56:04,100
know that I want that to be equal to negative 1, right?

949
00:56:05,500 --> 00:56:06,200
That makes sense.

950
00:56:07,100 --> 00:56:07,700
Furthermore,

951
00:56:10,000 --> 00:56:11,300
I know that if I feed it, f,

952
00:56:14,500 --> 00:56:18,200
I want that value to be one, right?

953
00:56:18,200 --> 00:56:25,100
So I know, two distinct points that it has to satisfy which gives me a

954
00:56:25,100 --> 00:56:26,500
lot to work with.

955
00:56:27,000 --> 00:56:31,400
So now I just need to know what is the structure of this function

956
00:56:31,500 --> 00:56:32,200
going to be?

957
00:56:32,900 --> 00:56:36,100
Well, I know that as well actually, right?

958
00:56:36,100 --> 00:56:38,200
Because I am completely constrained.

959
00:56:38,400 --> 00:56:41,500
I have no ability to do anything other than what the perspective

960
00:56:41,500 --> 00:56:43,200
Matrix allows me to do.

961
00:56:43,500 --> 00:56:43,700
What that

962
00:56:44,100 --> 00:56:46,900
It's like a look at the perspective Matrix and again remember the

963
00:56:46,900 --> 00:56:48,400
prospective Matrix looks like this.

964
00:56:49,900 --> 00:56:51,600
Actually going to put dots instead of excess.

965
00:56:51,600 --> 00:56:54,200
We don't get confused thinking their actual X.

966
00:57:11,700 --> 00:57:12,200
Okay.

967
00:57:16,000 --> 00:57:17,600
We know that W is going to be 1 in this case.

968
00:57:19,100 --> 00:57:22,500
So, if I look at what happens here, remember, I don't care what

969
00:57:22,500 --> 00:57:23,900
happens to my x coordinate.

970
00:57:23,900 --> 00:57:25,800
In this case, we're not talking about X.

971
00:57:26,000 --> 00:57:28,000
These values all affect the x coordinate.

972
00:57:28,100 --> 00:57:29,100
We don't care about them.

973
00:57:29,100 --> 00:57:31,000
They're not involved same with these.

974
00:57:31,000 --> 00:57:33,000
These are determining, the why we don't care about them.

975
00:57:33,000 --> 00:57:33,700
They're not involved.

976
00:57:33,700 --> 00:57:36,000
We already worked out what those are and they're done.

977
00:57:36,100 --> 00:57:36,300
Right?

978
00:57:36,300 --> 00:57:37,900
So we don't care about that anymore.

979
00:57:38,000 --> 00:57:38,600
That's over.

980
00:57:40,000 --> 00:57:44,300
Here we've got a line that deals with the Z, right?

981
00:57:45,000 --> 00:57:48,900
And here we've got a line that deals with a W again W we've already

982
00:57:48,900 --> 00:57:50,500
worked out and it's working fine for us.

983
00:57:50,500 --> 00:57:51,300
We don't care.

984
00:57:51,500 --> 00:57:52,700
So the Z

985
00:57:54,000 --> 00:57:56,700
Is what we care about looking at the Z.

986
00:57:57,400 --> 00:57:59,900
What are the values we can actually use?

987
00:57:59,900 --> 00:58:03,600
Well, we can't use anything that's proportional to X or Y because that

988
00:58:03,600 --> 00:58:06,000
has nothing to do with what we're trying to map here.

989
00:58:06,200 --> 00:58:09,800
So those values also don't matter and we can't really use them.

990
00:58:10,000 --> 00:58:11,300
So all we end up with.

991
00:58:11,300 --> 00:58:13,300
Is these two parameters here?

992
00:58:13,400 --> 00:58:18,000
We have a times Z Plus B, right?

993
00:58:18,100 --> 00:58:20,900
And those are the two things we can feed into our Matrix there.

994
00:58:21,700 --> 00:58:22,000
Right?

995
00:58:22,000 --> 00:58:26,300
We can put two values in what that means is we know that the function

996
00:58:26,300 --> 00:58:27,800
of this structure structure.

997
00:58:28,100 --> 00:58:33,400
Sorry the structure of this function is f of Z equals AZ plus b,

998
00:58:33,700 --> 00:58:34,000
right?

999
00:58:34,000 --> 00:58:35,400
Because that's all I can do.

1000
00:58:35,900 --> 00:58:38,600
So now what do I have?

1001
00:58:38,700 --> 00:58:42,300
I have the structure of the function f of Z equals AZ plus b.

1002
00:58:43,600 --> 00:58:47,600
And I have the two points that I know have to be true.

1003
00:58:47,800 --> 00:58:52,500
Well if I combine these together this is a equation in two unknowns

1004
00:58:52,600 --> 00:58:54,900
plus two values for that equation.

1005
00:58:55,000 --> 00:58:56,900
That is exactly what I need.

1006
00:58:57,100 --> 00:59:01,300
Right at equation with two unknowns and two values, Elementary High

1007
00:59:01,300 --> 00:59:02,000
School math.

1008
00:59:03,100 --> 00:59:04,800
In fact, it's junior high school math.

1009
00:59:06,300 --> 00:59:07,800
Solve the equation, that's it.

1010
00:59:08,900 --> 00:59:09,800
So, here we go.

1011
00:59:10,300 --> 00:59:14,300
I know I have a z plus b, right?

1012
00:59:14,800 --> 00:59:18,500
And I want to plug in in this case negative n, let's say right, I will

1013
00:59:18,500 --> 00:59:24,700
do at first so I have a f plus b equals negative 1.

1014
00:59:25,000 --> 00:59:25,900
That's one equation.

1015
00:59:26,500 --> 00:59:28,900
And then the other equation I have was 14 - n.

1016
00:59:29,000 --> 00:59:34,100
That's - A N plus b equals 1, right?

1017
00:59:34,100 --> 00:59:35,800
Those are the two points that I've got.

1018
00:59:37,300 --> 00:59:39,900
Let's solve these equations 4A and 4B.

1019
00:59:41,500 --> 00:59:45,000
In this case, I have I'll solve this one first.

1020
00:59:45,200 --> 00:59:48,500
So I've got AF plus b equals negative 1.

1021
00:59:48,700 --> 00:59:52,200
I'm going to choose to solve in this case, for B, let's say, because

1022
00:59:52,200 --> 00:59:53,200
it's already isolated.

1023
00:59:53,200 --> 00:59:57,300
So, I'll do b equals -1 + AF, right?

1024
00:59:57,400 --> 00:59:59,800
Oops, - eh heh,

1025
01:00:00,700 --> 01:00:01,100
There we go.

1026
01:00:01,100 --> 01:00:03,200
I'm just moving the AF to the other side.

1027
01:00:03,300 --> 01:00:04,900
So now we have a term for be.

1028
01:00:05,500 --> 01:00:11,200
So now over here, I can go ahead and substitute that in to solve so I

1029
01:00:11,200 --> 01:00:19,100
have - A N - 1 - a f equals 1, right?

1030
01:00:19,100 --> 01:00:22,700
That's just substituting into this equation and then I can start to

1031
01:00:22,700 --> 01:00:24,700
pull out my values.

1032
01:00:25,000 --> 01:00:28,700
I've got negative a, which is what I want to solve for here, right?

1033
01:00:29,700 --> 01:00:33,500
I've got - A on both of these so that's n + f.

1034
01:00:35,500 --> 01:00:38,400
And then I can move my constant over to the other side and that's just

1035
01:00:38,400 --> 01:00:39,200
going to be plus 1.

1036
01:00:39,200 --> 01:00:43,300
So that's going to be a 2 over here so you can see how I did that.

1037
01:00:43,500 --> 01:00:48,800
And now I just need to solve this equation for a that's going to be a

1038
01:00:48,900 --> 01:00:50,900
equals 2 over.

1039
01:00:52,800 --> 01:00:53,700
And plus F.

1040
01:00:54,400 --> 01:00:56,800
And the - here, I also need to get rid of so that comes over their

1041
01:00:56,800 --> 01:01:00,100
side / - + + FS that comes over to their side, right?

1042
01:01:00,300 --> 01:01:04,800
So there's my value for a if I want to look at what that becomes when

1043
01:01:04,800 --> 01:01:06,800
I look at what it is.

1044
01:01:06,800 --> 01:01:15,600
For B, I can say b equals -1 -2 F / n + f.

1045
01:01:19,700 --> 01:01:23,700
And hey that's actually just already done for us.

1046
01:01:23,700 --> 01:01:28,000
We don't really have to do anything else there because we have yet the

1047
01:01:28,000 --> 01:01:28,700
complete equation.

1048
01:01:30,100 --> 01:01:31,600
So you know math

1049
01:01:34,200 --> 01:01:35,200
Is hard.

1050
01:01:37,400 --> 01:01:38,400
Let's go shopping.

1051
01:01:40,200 --> 01:01:43,800
This is exactly the kind of thing that I often make mistakes at when

1052
01:01:43,800 --> 01:01:47,800
I'm moving things around, I wish computers just did this for you, and

1053
01:01:47,800 --> 01:01:51,100
sometimes they do, you know, mathematics is not bad at it but it tends

1054
01:01:51,100 --> 01:01:51,700
to produce.

1055
01:01:52,000 --> 01:01:53,400
It doesn't produce things in a clean way.

1056
01:01:53,400 --> 01:01:54,700
A lot of times it's just annoying.

1057
01:01:55,800 --> 01:01:59,400
I still haven't found the like computer-assisted algebra product that

1058
01:01:59,400 --> 01:02:03,900
I really want in my life someday, I'll have to make it, but

1059
01:02:05,600 --> 01:02:10,300
This is the process by which we would produce these values.

1060
01:02:10,500 --> 01:02:12,000
So let's take a look.

1061
01:02:12,000 --> 01:02:17,600
If they make sense from what I said because we can do three things.

1062
01:02:17,600 --> 01:02:25,400
Now that, you know, we to test this one is I can put in negative 1 and

1063
01:02:25,400 --> 01:02:27,300
verify that I get an out.

1064
01:02:27,300 --> 01:02:27,800
I'm sorry.

1065
01:02:27,800 --> 01:02:30,900
One is I can put an n and verify that I get negative 1 out one is I

1066
01:02:30,900 --> 01:02:34,200
can put an f and verify the get one out and the other is I could put

1067
01:02:34,200 --> 01:02:34,900
in, you know,

1068
01:02:35,600 --> 01:02:39,000
0.5 and plus F and verify.

1069
01:02:39,000 --> 01:02:43,900
That the thing I get out is somewhere in between, right, that I should

1070
01:02:43,900 --> 01:02:48,900
be able to get something that Maps between those two, right?

1071
01:02:50,500 --> 01:02:52,300
All right, so let's take a look.

1072
01:02:53,300 --> 01:02:55,900
So let's assume that these are these, the simplest I can make them.

1073
01:02:55,900 --> 01:02:59,700
I'm not sure, let's see.

1074
01:03:01,600 --> 01:03:07,700
Yeah, it looks like yeah, I don't see much else.

1075
01:03:07,700 --> 01:03:09,500
I mean we could write it this way.

1076
01:03:18,200 --> 01:03:23,400
we could write it this way and then say, Okay - 2f

1077
01:03:25,800 --> 01:03:31,300
And plus F minus n plus f.

1078
01:03:32,600 --> 01:03:35,300
Over M plus F and this is just me.

1079
01:03:35,600 --> 01:03:35,800
You know.

1080
01:03:36,100 --> 01:03:39,900
Again if you remember sort of your Junior, High math, if I want to add

1081
01:03:39,900 --> 01:03:43,600
two fractions, I have to make them the same denominator first.

1082
01:03:43,700 --> 01:03:44,800
It's all I was doing there.

1083
01:03:46,500 --> 01:03:49,400
And so if you see what happens here, now I can combine the them on the

1084
01:03:49,400 --> 01:04:01,700
top and my B becomes -2, f - n - F / n + f.

1085
01:04:02,400 --> 01:04:05,900
And the reason I did that was just because if you look at what happens

1086
01:04:05,900 --> 01:04:09,300
there, I was looking at it, it looks like comes a little simpler

1087
01:04:09,400 --> 01:04:12,100
because now pun top, I've got multiple F's there.

1088
01:04:12,300 --> 01:04:15,600
I can just do - 3 f - n.

1089
01:04:16,800 --> 01:04:19,900
N+ F, right?

1090
01:04:22,500 --> 01:04:23,300
And off you go.

1091
01:04:23,800 --> 01:04:25,500
So I believe I did that correctly.

1092
01:04:25,500 --> 01:04:28,500
But again, this is the kind of math that I tend to mess up.

1093
01:04:28,800 --> 01:04:33,500
You can kind of see that it's a little bit strange and so I can make

1094
01:04:33,500 --> 01:04:36,900
both of these in terms of f if I want to just like that.

1095
01:04:37,700 --> 01:04:41,500
I can also make them in terms of the n + f, i don't know.

1096
01:04:43,500 --> 01:04:46,400
Have to think about, if there's any way to do that here, I don't.

1097
01:04:46,600 --> 01:04:53,500
I think so, but again, that's just sort of my math Badness.

1098
01:04:56,100 --> 01:05:07,000
But yeah, so - 3 F + n Over N plus f is what that looks like and it

1099
01:05:07,000 --> 01:05:09,600
just feels like I'm a sure I didn't make a mistake here.

1100
01:05:11,600 --> 01:05:12,600
Let's double-check.

1101
01:05:16,200 --> 01:05:17,200
Let's double-check.

1102
01:05:18,200 --> 01:05:22,100
So all right so what's our final equation AZ plus b, what would it

1103
01:05:22,100 --> 01:05:24,000
look like in this case?

1104
01:05:24,100 --> 01:05:25,800
I now know what A and B are.

1105
01:05:27,100 --> 01:05:28,800
So I'm basically saying like, Okay,

1106
01:05:30,200 --> 01:05:33,800
F of Z and here's my A and B.

1107
01:05:34,100 --> 01:05:39,200
So I've got negative 2N plus F this case.

1108
01:05:39,800 --> 01:05:42,500
And then I've got negative 3 F + n.

1109
01:05:43,800 --> 01:05:51,100
Here's my C - 3 F + n 4n + f like so.

1110
01:05:52,400 --> 01:05:53,400
So here's my values.

1111
01:05:53,900 --> 01:05:56,400
Let's go ahead and plug in into my Z.

1112
01:05:56,400 --> 01:05:57,500
Let's plug in N.

1113
01:05:57,600 --> 01:05:58,600
What do I get?

1114
01:05:59,300 --> 01:05:59,900
So in this case,

1115
01:06:00,100 --> 01:06:03,200
I get Negative 2z, right?

1116
01:06:09,100 --> 01:06:11,100
Yeah, - 2 Z /.

1117
01:06:13,600 --> 01:06:16,800
I'm sorry you have to n Over.

1118
01:06:16,800 --> 01:06:23,000
N plus F minus 3 f plus n Over.

1119
01:06:23,000 --> 01:06:23,900
N plus F.

1120
01:06:25,600 --> 01:06:34,000
And let's see if I can bind these F of n equals -2.

1121
01:06:34,000 --> 01:06:37,100
N minus 3 f - n.

1122
01:06:39,900 --> 01:06:40,500
And plus F.

1123
01:06:40,500 --> 01:06:41,200
Yeah, you can see.

1124
01:06:41,200 --> 01:06:42,300
I've got a sign bug.

1125
01:06:42,400 --> 01:06:43,900
I just I could feel it.

1126
01:06:44,500 --> 01:06:48,000
I feel like and I feel like I have a signed by but maybe not.

1127
01:06:49,400 --> 01:06:50,000
Maybe not.

1128
01:06:51,900 --> 01:06:52,800
Maybe I didn't.

1129
01:06:54,700 --> 01:06:59,000
So - 3 n minus 3, F / n + f.

1130
01:07:02,500 --> 01:07:03,000
Right?

1131
01:07:03,500 --> 01:07:07,700
And that's negative 3n + f /.

1132
01:07:07,700 --> 01:07:08,400
N + f.

1133
01:07:09,600 --> 01:07:10,200
Right.

1134
01:07:10,200 --> 01:07:12,900
And that's not what I wanted, right?

1135
01:07:12,900 --> 01:07:18,200
So I definitely have assigned bug because it should not have been

1136
01:07:18,200 --> 01:07:18,700
that.

1137
01:07:18,900 --> 01:07:20,100
All right, so let's take a look.

1138
01:07:23,100 --> 01:07:25,100
And again, like I said, you can plug this into something like a

1139
01:07:25,100 --> 01:07:26,000
mathematic and have it.

1140
01:07:26,000 --> 01:07:29,100
Do it for you for checking purposes, but plugging back in and checking

1141
01:07:29,100 --> 01:07:29,900
is usually pretty good.

1142
01:07:29,900 --> 01:07:32,800
Of course, I also don't know that I made a mistake in the actual

1143
01:07:32,800 --> 01:07:35,800
plugging in, that's the best part about not being someone who's very

1144
01:07:35,800 --> 01:07:37,400
good at doing computation math.

1145
01:07:37,400 --> 01:07:39,300
I have no idea why we still have to do this, or

1146
01:07:39,500 --> 01:07:42,400
Thing, but what can you do?

1147
01:07:43,500 --> 01:07:47,600
Anyway, - + + - + + B.

1148
01:07:49,300 --> 01:07:51,200
I want to make sure that that's actually correct.

1149
01:07:51,200 --> 01:07:53,600
So f of negative n.

1150
01:07:55,200 --> 01:07:55,600
Oh,

1151
01:07:59,400 --> 01:08:00,300
that's my problem.

1152
01:08:01,800 --> 01:08:03,400
I did two stupid things.

1153
01:08:03,600 --> 01:08:06,700
First of all, when I plugged in to check, I didn't put in negative n

1154
01:08:06,900 --> 01:08:10,400
but also when I did f, it was supposed to be - F

1155
01:08:12,400 --> 01:08:12,900
Right.

1156
01:08:13,800 --> 01:08:14,800
I messed it up.

1157
01:08:15,100 --> 01:08:18,899
I said that F was supposed to be - and I didn't make it negative.

1158
01:08:21,100 --> 01:08:23,300
So, this is incorrect, right?

1159
01:08:25,700 --> 01:08:26,800
Yeah, that's just wrong.

1160
01:08:27,300 --> 01:08:31,700
So my f of negative n was correct but my f of negative f was wrong.

1161
01:08:33,300 --> 01:08:34,399
That's why it didn't look right.

1162
01:08:34,399 --> 01:08:36,800
I was like this just doesn't look like it's coming out to be what I

1163
01:08:36,800 --> 01:08:41,500
would expected and that's why because I've set up my initial things

1164
01:08:41,500 --> 01:08:41,899
wrong.

1165
01:08:42,700 --> 01:08:46,100
So I did have a sign bug just not necessarily where I thought it was.

1166
01:08:46,899 --> 01:08:48,399
Alright, let's try that one more time.

1167
01:09:00,500 --> 01:09:04,000
So, f of negative n, we want that to be negative 1.

1168
01:09:05,500 --> 01:09:07,700
F of negative.

1169
01:09:09,000 --> 01:09:11,100
FS1, right?

1170
01:09:11,100 --> 01:09:12,399
That's what I actually want.

1171
01:09:13,700 --> 01:09:15,800
It's weird to have F in both places here.

1172
01:09:16,000 --> 01:09:18,399
We'll just ignore that pretend that never happened.

1173
01:09:20,600 --> 01:09:21,700
And let's give it one more go.

1174
01:09:22,500 --> 01:09:26,800
So in this case, again, we've got negative 1, we've got negative, n

1175
01:09:26,800 --> 01:09:28,000
should produce negative 1.

1176
01:09:28,600 --> 01:09:36,200
So that means that a times negative, n plus b is negative 1.

1177
01:09:38,200 --> 01:09:40,000
And similarly, Jimmy.

1178
01:09:42,100 --> 01:09:44,200
For plugging in negative f.

1179
01:09:44,399 --> 01:09:50,300
It's - AF B was one and I have those, right?

1180
01:09:50,300 --> 01:09:50,899
This time,

1181
01:09:52,399 --> 01:09:55,200
Look right, hopefully, it looks right off we go.

1182
01:09:55,900 --> 01:10:01,600
So now solving again, same process B, in this case equals negative 1

1183
01:10:01,600 --> 01:10:04,100
plus, ay, n again.

1184
01:10:04,100 --> 01:10:05,800
Just moving the an to the side.

1185
01:10:07,100 --> 01:10:11,700
And on this one, I got to plug in this be again.

1186
01:10:11,900 --> 01:10:15,500
So I have negative AF and then negative 1 plus.

1187
01:10:15,500 --> 01:10:16,100
Ay, n.

1188
01:10:16,500 --> 01:10:19,100
So you can see that that's very critical.

1189
01:10:19,100 --> 01:10:20,200
Plus a n there.

1190
01:10:23,100 --> 01:10:25,800
and- AF this time, whereas before,

1191
01:10:29,600 --> 01:10:30,600
Both were negative.

1192
01:10:34,400 --> 01:10:34,800
Right.

1193
01:10:50,500 --> 01:10:53,100
Yeah, so I think that's probably the only difference.

1194
01:10:53,300 --> 01:10:56,800
We'll find out in a second and then hopefully this will flow through

1195
01:10:56,800 --> 01:10:57,100
properly.

1196
01:10:57,200 --> 01:10:57,400
All right.

1197
01:10:57,400 --> 01:10:58,500
So then off we go.

1198
01:10:59,200 --> 01:11:01,800
We've got our - one coming over to the other side and we've got these

1199
01:11:01,800 --> 01:11:03,800
two terms combining, right?

1200
01:11:04,600 --> 01:11:12,800
So off we go, we end up with a n minus AF in this case, equals to

1201
01:11:12,800 --> 01:11:14,200
write that goes to their side.

1202
01:11:15,600 --> 01:11:24,200
That's a n- f equals 2 or a equals 2 over n minus f.

1203
01:11:25,400 --> 01:11:25,900
Right.

1204
01:11:26,800 --> 01:11:30,800
Plugging back in, we get for our B value negative one.

1205
01:11:31,500 --> 01:11:35,200
Here's our a value so that's 2 N Over.

1206
01:11:35,200 --> 01:11:36,300
N minus f.

1207
01:11:37,900 --> 01:11:38,500
Right.

1208
01:11:39,600 --> 01:11:41,100
And again, let's combine the terms there.

1209
01:11:41,100 --> 01:11:42,500
Just to see what happens.

1210
01:11:42,700 --> 01:11:44,800
We get a negative 1 over n.

1211
01:11:45,600 --> 01:11:46,600
Minus M, Coupe, sorry

1212
01:11:48,900 --> 01:11:51,400
Do - n- F Over N.

1213
01:11:51,400 --> 01:11:52,200
Minus f.

1214
01:11:53,800 --> 01:11:58,100
+ 2, n + - F that.

1215
01:11:58,100 --> 01:11:59,900
If we combine these two terms, we get

1216
01:12:00,000 --> 01:12:00,900
To n.

1217
01:12:01,100 --> 01:12:08,300
Minus n plus F right in this case because the - distributes here, all

1218
01:12:08,300 --> 01:12:09,500
over n minus F.

1219
01:12:10,100 --> 01:12:15,600
Then when we're done combining these we just get n plus F on the top.

1220
01:12:15,600 --> 01:12:16,200
Right to n.

1221
01:12:16,200 --> 01:12:19,700
Minus n is just n n+ f Over N.

1222
01:12:19,700 --> 01:12:25,200
Minus F, there's our B value, there's our a value.

1223
01:12:25,700 --> 01:12:28,300
And so our final equation for f of Z,

1224
01:12:30,000 --> 01:12:36,800
is 2 over n, minus F times Z, Plus n plus F over n- f

1225
01:12:38,100 --> 01:12:42,200
Okay, plugging in to check if I want to take a look at what my

1226
01:12:42,200 --> 01:12:44,900
function will be if I plug in negative n.

1227
01:12:46,200 --> 01:12:47,400
Let's see what I get.

1228
01:12:47,600 --> 01:12:52,100
I get negative 2 N Over N minus F, right?

1229
01:12:52,100 --> 01:12:53,900
Because I'm plugging in negative n to here.

1230
01:12:56,000 --> 01:12:59,200
+ n + f / n minus f.

1231
01:13:01,100 --> 01:13:04,300
When I combine these you can see what I get.

1232
01:13:05,400 --> 01:13:08,300
And I get n.

1233
01:13:09,000 --> 01:13:11,900
Well, I get minus n, right?

1234
01:13:12,800 --> 01:13:15,300
Because I got - to end here and I just got an end there.

1235
01:13:15,700 --> 01:13:17,400
So I get minus n plus f.

1236
01:13:18,800 --> 01:13:22,300
Equals n minus or over n minus F right?

1237
01:13:23,500 --> 01:13:24,100
Which

1238
01:13:30,300 --> 01:13:31,100
Do that correctly.

1239
01:13:34,400 --> 01:13:35,200
I did do this correctly.

1240
01:13:35,200 --> 01:13:35,700
Yes.

1241
01:13:37,100 --> 01:13:39,300
This is where it would be nice if the stream if I actually looked at

1242
01:13:39,300 --> 01:13:41,400
the stream because I'm sure the stream check could tell me.

1243
01:13:42,500 --> 01:13:44,000
So it's F minus n Over.

1244
01:13:44,000 --> 01:13:46,400
N minus F, I believe correctly.

1245
01:13:47,200 --> 01:13:48,500
If I'm not mistaken, I'm not sure.

1246
01:13:50,600 --> 01:13:51,200
That correctly.

1247
01:13:55,400 --> 01:13:56,900
I said, myosin + f.

1248
01:13:59,100 --> 01:14:01,100
Plug in negative N4 Z.

1249
01:14:02,300 --> 01:14:07,400
Very slow, math day here today if ever, there was one - 2.

1250
01:14:07,400 --> 01:14:09,300
N should.

1251
01:14:09,300 --> 01:14:10,200
Be on top.

1252
01:14:10,600 --> 01:14:13,300
Should be able to combine these because they're both Over N minus F.

1253
01:14:13,700 --> 01:14:14,300
Yes.

1254
01:14:48,400 --> 01:14:51,000
I feel like this is correct everywhere.

1255
01:14:56,900 --> 01:14:58,600
But you always do.

1256
01:15:01,300 --> 01:15:01,600
Right.

1257
01:15:01,600 --> 01:15:03,600
That all looks pretty clean.

1258
01:15:06,700 --> 01:15:07,400
Am I missing something?

1259
01:15:07,400 --> 01:15:08,600
This guy might still be wrong.

1260
01:15:08,600 --> 01:15:09,600
Let me just double-check in.

1261
01:15:12,400 --> 01:15:16,200
And times F Over N times F, which is still negative one, which is

1262
01:15:16,200 --> 01:15:16,800
correct.

1263
01:15:23,800 --> 01:15:25,000
So that's 2 N.

1264
01:15:25,000 --> 01:15:31,300
Minus n plus F over M minus F, which is correct and that's just n + f

1265
01:15:31,900 --> 01:15:32,200
Over N.

1266
01:15:32,200 --> 01:15:34,500
Minus F that looks right to me.

1267
01:15:35,700 --> 01:15:40,400
Looks right to me, however, we know that plugging in f of negative n

1268
01:15:40,400 --> 01:15:46,800
in this case should equal negative 1, but this doesn't look like it

1269
01:15:46,800 --> 01:15:50,400
worked out the way that I would have expected F, minus n Over.

1270
01:15:50,400 --> 01:15:51,800
N minus f.

1271
01:15:57,500 --> 01:15:58,400
That is correct.

1272
01:16:01,100 --> 01:16:03,200
So what I can do here is just say, well, okay?

1273
01:16:05,400 --> 01:16:06,700
Sorry I'm paranoid about this.

1274
01:16:06,700 --> 01:16:08,200
I wanna make sure it's correct thing.

1275
01:16:08,200 --> 01:16:10,400
That's all correct and this looks like it'll work out correctly.

1276
01:16:10,600 --> 01:16:12,300
So F, minus n Over, N minus F.

1277
01:16:12,300 --> 01:16:16,300
If I pull out a negative here and minus f is the same as F minus n.

1278
01:16:16,300 --> 01:16:18,100
If I pull out a negative, right?

1279
01:16:19,100 --> 01:16:22,300
So at that point, I end up with being able to cancel the terms.

1280
01:16:22,400 --> 01:16:23,100
In this case,

1281
01:16:24,900 --> 01:16:30,300
So that ends up being a 1 over negative 1, which of course is negative

1282
01:16:30,300 --> 01:16:30,600
1.

1283
01:16:32,100 --> 01:16:33,200
So good on that.

1284
01:16:33,200 --> 01:16:35,300
I got a little worried there because I didn't think that was that a no

1285
01:16:35,300 --> 01:16:40,000
just did look familiar to me but hey, it ended up being correct and

1286
01:16:40,000 --> 01:16:40,700
let's try.

1287
01:16:41,100 --> 01:16:42,400
Same exact equation.

1288
01:16:45,900 --> 01:16:48,700
But this time plugging in negative f just to make sure.

1289
01:16:49,800 --> 01:16:55,500
And so that's again, to this the C value here.

1290
01:16:55,500 --> 01:17:02,600
Now is negative f, so that's going to be negative, f and minus F + + +

1291
01:17:02,600 --> 01:17:03,200
f /.

1292
01:17:03,200 --> 01:17:05,000
N minus F, right?

1293
01:17:06,700 --> 01:17:11,700
And same thing going to do - 2f + n+.

1294
01:17:11,900 --> 01:17:14,000
F / m- f,

1295
01:17:14,500 --> 01:17:20,400
and now we say, well okay that's -2 F, that's going to be n, minus F

1296
01:17:20,400 --> 01:17:23,100
Over N minus F, which is 1,

1297
01:17:25,900 --> 01:17:27,700
So those are the two answers that we wanted.

1298
01:17:28,000 --> 01:17:33,300
That's a good thing and so I think we can go ahead and use this guy so

1299
01:17:33,300 --> 01:17:34,400
there's our equation.

1300
01:17:34,700 --> 01:17:36,500
And so then we know what to put in our Matrix.

1301
01:17:36,500 --> 01:17:40,900
We need to put in that and that and then we can start specifying near

1302
01:17:40,900 --> 01:17:41,900
and far clipping planes.

1303
01:17:44,700 --> 01:17:49,900
So in here in our perspective projection, we have RN + RF

1304
01:18:03,000 --> 01:18:05,800
At some point we may want to pass these in for right now.

1305
01:18:05,800 --> 01:18:09,200
I don't think we need to, we can just kind of be arbitrary with them

1306
01:18:09,200 --> 01:18:12,400
for the moment because we don't have anything we need to actually do

1307
01:18:12,400 --> 01:18:12,700
with them.

1308
01:18:12,700 --> 01:18:15,800
So we'll wait until someone actually needs to specify those before.

1309
01:18:15,800 --> 01:18:18,600
We think about how we might want them to be passed in or other things

1310
01:18:18,600 --> 01:18:21,700
like that, but we do know again.

1311
01:18:21,700 --> 01:18:25,100
What our what our value coming in here is, right?

1312
01:18:27,600 --> 01:18:28,900
Here's our a and our B.

1313
01:18:28,900 --> 01:18:34,700
Unfortunately already have our B & B, so let's do D and E.

1314
01:18:36,700 --> 01:18:37,400
In this case.

1315
01:18:39,100 --> 01:18:39,800
And so,

1316
01:18:41,200 --> 01:18:44,400
Our D value is 2 over n minus f.

1317
01:18:48,800 --> 01:18:51,000
And Ari value.

1318
01:18:52,900 --> 01:18:54,900
Is n+ f / m- f.

1319
01:19:02,400 --> 01:19:05,500
So that should do our mapping for us properly.

1320
01:19:05,500 --> 01:19:13,900
We hope and you can actually see already even though we don't really

1321
01:19:13,900 --> 01:19:16,000
have any way of testing this explicitly.

1322
01:19:16,000 --> 01:19:21,700
You can see how there's a lot finer grained z-fighting because now

1323
01:19:21,700 --> 01:19:25,500
we're mapping rz2 a real correct range, right?

1324
01:19:25,500 --> 01:19:30,200
We're taking a seen an actual reasonable slice through the scene and

1325
01:19:30,200 --> 01:19:32,200
mapping that to the full Precision of the z-buffer.

1326
01:19:32,400 --> 01:19:36,100
Or as opposed to before, when it was just, whatever the z-buffer

1327
01:19:36,100 --> 01:19:38,900
happened to be, which meant that it would get be getting clamped

1328
01:19:38,900 --> 01:19:41,300
between negative 1 and 1.

1329
01:19:41,300 --> 01:19:45,300
So only like the broadest Z values would actually be doing anything

1330
01:19:45,300 --> 01:19:49,900
inside where we were, so you can kind of see that that actually did

1331
01:19:49,900 --> 01:19:51,800
already give some effect too.

1332
01:19:53,800 --> 01:19:55,500
To our Sprites there, right?

1333
01:19:55,500 --> 01:19:59,400
So let's do we don't have much time left.

1334
01:19:59,400 --> 01:20:02,300
So let's just go want to do one more thing here.

1335
01:20:02,300 --> 01:20:06,100
Let's take a look at how our Sprites are being outputted here in the

1336
01:20:06,100 --> 01:20:10,900
render group and we have the sort of notion of upright Sprites but

1337
01:20:10,900 --> 01:20:16,000
we're not actually using it at the moment when we actually push stuff

1338
01:20:16,000 --> 01:20:20,900
on and I don't actually know if that's I don't think that's coming

1339
01:20:20,900 --> 01:20:23,700
through anywhere, I could be wrong about

1340
01:20:24,100 --> 01:20:24,700
Fat.

1341
01:20:26,700 --> 01:20:29,600
You can kind of see where setting this up, right transform, but we

1342
01:20:29,600 --> 01:20:32,100
don't use it anywhere, right?

1343
01:20:32,600 --> 01:20:34,300
But we do know when it's happening.

1344
01:20:34,800 --> 01:20:37,600
And so when we're in here, in our render group,

1345
01:20:44,600 --> 01:20:45,600
See here.

1346
01:20:49,400 --> 01:20:51,200
when we do a push bitmap call,

1347
01:20:55,300 --> 01:20:59,100
So when we're doing this, push bitmap call, you can actually imagine

1348
01:20:59,100 --> 01:20:59,800
what we could start to do.

1349
01:21:00,000 --> 01:21:05,300
Here, in addition to passing down, like, for example, our X and Y

1350
01:21:05,300 --> 01:21:09,000
axis, if we wanted to, we can set our X and Y axis, to be something

1351
01:21:09,500 --> 01:21:13,600
that is not flat, right?

1352
01:21:13,600 --> 01:21:17,900
We can have the X and y-axis be something that's like standing upright

1353
01:21:17,900 --> 01:21:22,500
more and start to take a look at how that would would progress, right?

1354
01:21:23,100 --> 01:21:29,800
So for example, one thing we could do is say like, you know, if

1355
01:21:30,300 --> 01:21:32,000
Object transform upright.

1356
01:21:32,000 --> 01:21:35,000
And this is not even remotely a good idea, but I'm just giving you

1357
01:21:35,000 --> 01:21:35,800
what the idea is.

1358
01:21:38,200 --> 01:21:44,700
We could add some height to the Sprite in the case where the object is

1359
01:21:44,700 --> 01:21:47,400
supposed to be an upright object, just so we can see the difference

1360
01:21:47,600 --> 01:21:49,600
between the two of them, right?

1361
01:21:50,800 --> 01:21:51,400
Oh wait.

1362
01:21:51,400 --> 01:21:55,500
Are the x axis or only V2s.

1363
01:21:56,000 --> 01:21:57,400
All right, that's fine.

1364
01:22:03,500 --> 01:22:06,100
so we need to do here say oh actually

1365
01:22:10,100 --> 01:22:11,600
these have to be fully 3D.

1366
01:22:15,200 --> 01:22:17,200
And then here we can just say oops.

1367
01:22:28,400 --> 01:22:28,900
There we go.

1368
01:22:31,000 --> 01:22:33,000
And now when we're actually using these

1369
01:22:36,100 --> 01:22:38,400
We can always just actually use the right.

1370
01:22:44,600 --> 01:22:45,900
Oh wait, I don't have to do that.

1371
01:22:50,800 --> 01:22:54,300
Alright, so now we're drawing these.

1372
01:22:54,400 --> 01:22:56,600
Hopefully you can see what I'm getting at here.

1373
01:22:58,200 --> 01:23:01,300
This is already starting to sort of do the thing that I was talking

1374
01:23:01,300 --> 01:23:02,200
about, right?

1375
01:23:02,700 --> 01:23:06,900
And you can imagine doing this fairly with with a relatively

1376
01:23:06,900 --> 01:23:08,100
exaggerated.

1377
01:23:10,500 --> 01:23:13,100
Height, something that's not at all, what we would actually want the

1378
01:23:13,100 --> 01:23:17,500
height to be, but you can start to see how this will work, right?

1379
01:23:18,700 --> 01:23:20,400
Looking kind of at how these go.

1380
01:23:20,500 --> 01:23:23,000
This is sort of the diagram that I was drawing before, right?

1381
01:23:23,000 --> 01:23:28,700
Everything is kind of slightly sort of slanted at an angle there.

1382
01:23:29,600 --> 01:23:32,200
And then, you know, when we're drawing these things, we're drawing

1383
01:23:32,200 --> 01:23:33,400
them in

1384
01:23:35,900 --> 01:23:38,800
In a way that allows the z-buffer to actually properly overlap things

1385
01:23:39,000 --> 01:23:41,200
and you can start to see how that will work.

1386
01:23:41,200 --> 01:23:44,700
Now you can also see just based on what you're looking at right now,

1387
01:23:44,900 --> 01:23:48,600
you can also see why we have to start taking the camera into account,

1388
01:23:48,600 --> 01:23:49,200
right?

1389
01:23:49,500 --> 01:23:56,600
Because we don't really want our games Sprites to look like sheared,

1390
01:23:56,800 --> 01:23:57,400
right?

1391
01:23:57,800 --> 01:23:59,800
So when you take a look at what's Happening Here,

1392
01:24:00,000 --> 01:24:01,900
And I add that.

1393
01:24:03,800 --> 01:24:05,300
That one value in there.

1394
01:24:05,800 --> 01:24:09,300
I'm sharing the Sprite in a way that is not appropriate.

1395
01:24:09,300 --> 01:24:12,800
And furthermore, you know, like let's say I'm looking directly top

1396
01:24:12,800 --> 01:24:16,300
down on this thing like so, so suppose we were playing the game like

1397
01:24:16,300 --> 01:24:16,600
this.

1398
01:24:16,800 --> 01:24:21,900
You can see how it really changes the Sprite in a way that really

1399
01:24:21,900 --> 01:24:25,700
shears it and makes it to squatty, for example, down here or too,

1400
01:24:25,700 --> 01:24:27,300
tall, for example, down here.

1401
01:24:28,000 --> 01:24:31,700
But what we can do is if we take the cameras location into account,

1402
01:24:31,700 --> 01:24:32,700
when we're generating,

1403
01:24:33,500 --> 01:24:37,700
The Sprite information, we should be able to work around that, right?

1404
01:24:37,700 --> 01:24:41,000
We should be able to figure out a way to make that.

1405
01:24:43,100 --> 01:24:44,500
Do something more reasonable.

1406
01:24:45,500 --> 01:24:45,900
Okay.

1407
01:24:47,500 --> 01:24:50,000
And so, that's the next thing that we have to do.

1408
01:24:50,000 --> 01:24:53,200
We only have about 10 minutes left here, so I think maybe it would be

1409
01:24:53,200 --> 01:24:57,000
a bad time to start that, but hopefully I can sort of hint you can

1410
01:24:57,000 --> 01:24:59,200
sort of give you an idea of what I mean by that.

1411
01:24:59,200 --> 01:25:01,500
So if you just look at this guy who happens to be centered on,

1412
01:25:04,700 --> 01:25:09,200
if you imagine here, the y axis, again, getting that sort of Z slant

1413
01:25:09,200 --> 01:25:09,800
up to it.

1414
01:25:10,700 --> 01:25:14,100
What I could also do their say, well, what if we also elongate that,

1415
01:25:14,100 --> 01:25:14,700
right?

1416
01:25:29,200 --> 01:25:34,000
And I hopefully what you can see here is that for any given Sprite

1417
01:25:34,000 --> 01:25:34,700
that I wanted.

1418
01:25:34,700 --> 01:25:39,700
So for example, this right here, this is the one I was working on for

1419
01:25:39,700 --> 01:25:40,900
any given Sprite.

1420
01:25:40,900 --> 01:25:46,500
We can pick a modification to its axis that when you look at that

1421
01:25:46,500 --> 01:25:49,500
sprite from a particular camera position, like the one I'm in right

1422
01:25:49,500 --> 01:25:53,800
now, it appears as the correct, sprayed again, right?

1423
01:25:54,200 --> 01:25:57,200
And, similarly, I could even do that with one over here that appears

1424
01:25:57,200 --> 01:25:58,300
very bent, right?

1425
01:25:58,300 --> 01:25:59,200
All I would have

1426
01:25:59,300 --> 01:26:00,000
Have to do.

1427
01:26:03,300 --> 01:26:06,400
Is take that y axis and share it.

1428
01:26:10,500 --> 01:26:11,600
To see how that works.

1429
01:26:22,600 --> 01:26:23,000
Oops.

1430
01:26:29,000 --> 01:26:33,600
So now you can see that even something that's off to an angle right to

1431
01:26:33,600 --> 01:26:37,600
the camera and, you know, down in the corner.

1432
01:26:37,600 --> 01:26:40,400
It's completely perspective in out and all that stuff.

1433
01:26:40,600 --> 01:26:45,900
If I just had a way of computing, the axes that I was going to use.

1434
01:26:47,100 --> 01:26:52,200
So that they corrected for the camera Distortion to the viewer, it

1435
01:26:52,200 --> 01:26:55,500
appears that the stamp has just been stamped down like a regular

1436
01:26:55,500 --> 01:26:56,700
Sprite with no modification.

1437
01:26:56,700 --> 01:26:57,800
But in reality,

1438
01:26:58,100 --> 01:26:59,800
it's this heinously warped.

1439
01:27:00,200 --> 01:27:03,300
Really messed up tree like it's that one, right?

1440
01:27:05,300 --> 01:27:06,300
I mean, look at that thing.

1441
01:27:08,400 --> 01:27:12,500
But from here, you know, from the original Viewpoint, it looks

1442
01:27:12,500 --> 01:27:13,500
correct.

1443
01:27:19,700 --> 01:27:20,200
Right.

1444
01:27:21,300 --> 01:27:23,200
So what we can choose to do.

1445
01:27:25,600 --> 01:27:30,100
depending on how we need to end up making this work, we can choose to

1446
01:27:30,100 --> 01:27:35,200
do is just use every time we send out a Sprite use, it's the knowledge

1447
01:27:35,200 --> 01:27:40,100
of where the camera actually is to bend the Sprite to properly, align

1448
01:27:40,100 --> 01:27:44,600
with the screen in a way that makes it appear as if it's being stamped

1449
01:27:44,600 --> 01:27:48,700
out, even though it's actually bent in 3D which is all we really need

1450
01:27:48,700 --> 01:27:53,700
to have happen and that will get us back to proper rendering with Z

1451
01:27:53,700 --> 01:27:55,300
buffer, sorting and

1452
01:27:55,400 --> 01:27:59,000
The only thing that we're going to have to do on top of that in order

1453
01:27:59,000 --> 01:28:01,700
to really solve the problem is we're going to have to figure out a way

1454
01:28:01,700 --> 01:28:04,900
to deal with our blendable things, right?

1455
01:28:05,800 --> 01:28:07,100
Like our hour.

1456
01:28:10,700 --> 01:28:15,200
Basically, the edges of the Sprites like this sort of thing here.

1457
01:28:18,700 --> 01:28:20,800
That's the only thing that we're really going to have to deal with

1458
01:28:20,800 --> 01:28:26,400
separately because that is a real big pain in the butt but they'll be

1459
01:28:26,400 --> 01:28:28,300
other things we can do for stuff like Shadows.

1460
01:28:28,300 --> 01:28:31,100
You'll see when we take a look at those.

1461
01:28:31,100 --> 01:28:33,800
Hopefully, there's there's some things we can do with with stuff like

1462
01:28:33,800 --> 01:28:34,400
Shadows.

1463
01:28:34,600 --> 01:28:39,000
There's some tricks we can pull with that that don't force us to sort

1464
01:28:39,900 --> 01:28:41,800
in as complete a way through sorting before.

1465
01:28:41,800 --> 01:28:44,600
So we can do some simple tricks there that might potentially work.

1466
01:28:45,400 --> 01:28:47,600
And so we'll have to talk about those as separate issue.

1467
01:28:48,500 --> 01:28:51,600
All right, I'm going to go ahead and go to the Q&A and tomorrow.

1468
01:28:51,600 --> 01:28:54,500
We'll we'll work on that transform there.

1469
01:28:57,600 --> 01:28:58,500
I'll pull it out for now.

1470
01:29:01,000 --> 01:29:02,700
so, let's go ahead and Q a

1471
01:29:21,000 --> 01:29:21,800
Ratchet freak.

1472
01:29:21,800 --> 01:29:23,400
When adjusting the Sprite like that?

1473
01:29:23,400 --> 01:29:27,000
Don't you need to interpolate the texture coordinates in screen space

1474
01:29:27,000 --> 01:29:27,800
instead of clip?

1475
01:29:27,800 --> 01:29:29,300
Space the default.

1476
01:29:30,200 --> 01:29:31,700
Yes, we can.

1477
01:29:32,100 --> 01:29:34,800
We well I guess here's what I'd say.

1478
01:29:35,100 --> 01:29:37,300
We certainly have the option of doing.

1479
01:29:37,300 --> 01:29:42,900
So if we want to, you know, opengl when we switch to shaders, for

1480
01:29:42,900 --> 01:29:46,700
example, you can pick how they're interpolated even in

1481
01:29:48,300 --> 01:29:49,500
The fixed function pipeline.

1482
01:29:49,500 --> 01:29:51,100
If you needed to, you could do it.

1483
01:29:52,500 --> 01:29:55,300
If you want to, you just have to have a texture Matrix setup.

1484
01:29:55,300 --> 01:29:57,400
I think I don't think there's, I don't know if there's any other way

1485
01:29:57,400 --> 01:29:58,000
to do it.

1486
01:30:05,700 --> 01:30:09,700
Yeah, I'm not sure but in at least in shaders it's a trivial, it just

1487
01:30:09,700 --> 01:30:09,900
change.

1488
01:30:09,900 --> 01:30:13,500
All you have to do is change the Declaration of like one variable and

1489
01:30:13,800 --> 01:30:16,000
you can in interpolate screen space.

1490
01:30:16,000 --> 01:30:17,800
So we should have the opportunity to do that.

1491
01:30:17,800 --> 01:30:18,600
Just fine as well.

1492
01:30:29,900 --> 01:30:33,900
So that what is Alfred to coverage any good references on that?

1493
01:30:37,200 --> 01:30:42,800
So what Alfred a coverage does is and I don't even know like I'll

1494
01:30:42,800 --> 01:30:46,500
probably have to go do some reading myself to see if there's better

1495
01:30:46,500 --> 01:30:50,900
modern techniques because it's it's possible that that's not even

1496
01:30:50,900 --> 01:30:52,000
really what you would do these days.

1497
01:30:52,000 --> 01:30:54,500
If that's an old its old that's an old technique.

1498
01:30:55,600 --> 01:30:57,300
What out for the coverage does is it says well.

1499
01:30:57,300 --> 01:31:01,500
Alright, if you set up a multi sample buffer, so if you basically set

1500
01:31:01,500 --> 01:31:04,300
up anti-aliasing like the kind you normally do in 3D,

1501
01:31:06,000 --> 01:31:10,700
What you can do is say, oh, when you're actually drawing instead of

1502
01:31:10,700 --> 01:31:16,100
using the alpha Channel, as blending at the time, you can use the

1503
01:31:16,100 --> 01:31:21,100
alpha channel to say how many samples in the multi sample buffer, you

1504
01:31:21,100 --> 01:31:22,000
want it to fill.

1505
01:31:23,000 --> 01:31:29,700
So that basically does a anti uses the anti-aliasing capabilities of

1506
01:31:29,700 --> 01:31:30,400
the hardware.

1507
01:31:31,400 --> 01:31:34,800
Rather than using Alpha blending so that you don't have to worry about

1508
01:31:34,800 --> 01:31:35,700
the Order anymore.

1509
01:31:37,700 --> 01:31:40,700
It's a little less precise than Alpha blending but it's an interesting

1510
01:31:41,000 --> 01:31:41,900
option, right?

1511
01:31:48,300 --> 01:31:51,700
What an orthogonal projection Matrix be applicable for your game.

1512
01:31:52,000 --> 01:31:54,300
It might be but I don't think so.

1513
01:31:54,400 --> 01:31:57,200
We're going to have to see now that we've taken the step to 3D we have

1514
01:31:57,200 --> 01:31:59,100
the option to kind of play with that a little bit.

1515
01:32:00,000 --> 01:32:02,400
And I'm thinking we probably still want perspective.

1516
01:32:05,500 --> 01:32:06,800
Because again, I want things too.

1517
01:32:07,500 --> 01:32:10,900
I want multiple floors to work properly and I also want some other

1518
01:32:10,900 --> 01:32:12,700
things for probably that will see as we go.

1519
01:32:19,600 --> 01:32:23,100
Sherlock 93 is the negative n and negative f because opengl has the

1520
01:32:23,100 --> 01:32:24,800
camera on the negative Z axis.

1521
01:32:25,600 --> 01:32:29,600
Well, more specifically, the camera on the - the camera having

1522
01:32:29,600 --> 01:32:33,200
negative Z pointing away from us in X and Y is sort of what we want.

1523
01:32:33,200 --> 01:32:35,200
That's our math view of the world.

1524
01:32:35,800 --> 01:32:38,300
So really more specifically, the way to say it might be that the

1525
01:32:38,300 --> 01:32:41,100
reason we have to do the negative 8 and negative f is, is because

1526
01:32:41,100 --> 01:32:47,900
opengl wants to use the Divide, as a value that increases because it

1527
01:32:47,900 --> 01:32:48,800
that's how the peck

1528
01:32:48,900 --> 01:32:50,800
Spective divide has to actually work.

1529
01:32:51,100 --> 01:32:51,700
Right?

1530
01:32:52,000 --> 01:32:55,500
And so because they chose not to bake a negative into the divided.

1531
01:32:55,900 --> 01:32:58,200
The projection Matrix has to do that negation

1532
01:33:06,800 --> 01:33:08,000
Magic 63.

1533
01:33:08,000 --> 01:33:09,600
Why are using Legacy opengl?

1534
01:33:09,900 --> 01:33:12,500
We're using Legacy up in jail because I feel like that's the right

1535
01:33:12,500 --> 01:33:17,500
opengl for people to learn first in some sense because if you don't

1536
01:33:17,600 --> 01:33:22,000
know Legacy opengl yet, it's a lot harder to learn.

1537
01:33:22,800 --> 01:33:26,700
Non Legacy opengl so like Legacy.

1538
01:33:26,700 --> 01:33:30,300
Opengl lets you pretty much just not set up anything and just start

1539
01:33:30,300 --> 01:33:31,200
drawing right?

1540
01:33:31,200 --> 01:33:35,200
It's very easy to use non Legacy opengl

1541
01:33:35,400 --> 01:33:36,000
Nuts.

1542
01:33:36,100 --> 01:33:36,400
Right?

1543
01:33:36,400 --> 01:33:39,600
I mean you got to do all sorts of stuff, you have to teach people,

1544
01:33:39,600 --> 01:33:42,000
what a Shader is you have to write Shader main routines, you have to

1545
01:33:42,000 --> 01:33:46,000
declare variables, setup, vertex, and pixel shaders, and all this

1546
01:33:46,000 --> 01:33:46,500
stuff.

1547
01:33:46,800 --> 01:33:53,300
And so it's really just, at least as long as opengl as like as long as

1548
01:33:53,300 --> 01:33:55,600
Legacy opengl continues to be viable.

1549
01:33:57,900 --> 01:34:01,000
It's much easier to show people how to use that first and then show

1550
01:34:01,000 --> 01:34:03,000
them how to use Shader based opengl.

1551
01:34:03,300 --> 01:34:06,700
And since none of its low-level anyway, like all of it is completely

1552
01:34:06,700 --> 01:34:09,500
just telling drivers what to do, right?

1553
01:34:09,500 --> 01:34:11,300
We never get to really do anything.

1554
01:34:11,700 --> 01:34:13,000
Particularly low level.

1555
01:34:15,300 --> 01:34:20,600
There's I don't see any real reason to skip the the Legacy pipeline

1556
01:34:21,300 --> 01:34:24,100
because that also was exactly how you programmed say.

1557
01:34:24,100 --> 01:34:28,700
And I are xgl machine, it was 100% level of that point because it was

1558
01:34:28,700 --> 01:34:30,900
a map directly to the hardware, right?

1559
01:34:49,400 --> 01:34:53,100
See voucher, do you typically use an infinite far plane for increased

1560
01:34:53,100 --> 01:34:56,700
Precision, Sean McGrath mentioned it in his stream a while back.

1561
01:34:58,700 --> 01:35:00,100
So here's what I'd say.

1562
01:35:00,100 --> 01:35:04,600
I do often use an infinite far clipping plane in 3D stuff.

1563
01:35:05,000 --> 01:35:07,800
I wouldn't consider it appropriate for this because we know exactly

1564
01:35:07,800 --> 01:35:12,100
where our end bound is so I don't know that it's necessary for that

1565
01:35:12,700 --> 01:35:19,200
but I unless I'm missing something, I don't know why you would

1566
01:35:19,200 --> 01:35:23,500
characterize that as something that you use for increased precision.

1567
01:35:24,300 --> 01:35:27,700
It's not really increasing the Precision per se.

1568
01:35:28,100 --> 01:35:30,000
It's increasing the view distance.

1569
01:35:31,100 --> 01:35:35,300
If that makes sense, I guess I can see why you might consider it

1570
01:35:35,300 --> 01:35:36,300
increasing the Precision.

1571
01:35:36,300 --> 01:35:40,200
Because if you were talking about having to set the view plane out

1572
01:35:40,200 --> 01:35:44,600
that far in practice, then you lose a lot of precision up front where

1573
01:35:44,600 --> 01:35:45,200
you care about it.

1574
01:35:45,200 --> 01:35:52,800
So, I guess I can sort of see why that would be a way to say it, but

1575
01:35:52,800 --> 01:35:54,500
in our game, everything's fairly.

1576
01:35:54,700 --> 01:35:58,800
We don't have a large swath, it's pretty narrow.

1577
01:36:00,000 --> 01:36:03,600
So I don't know that we would bother using an infinite farplane here,

1578
01:36:04,200 --> 01:36:10,800
but I do use that often times myself in 3D stuff that's not like, not

1579
01:36:10,800 --> 01:36:11,400
in 2D.

1580
01:36:21,000 --> 01:36:21,400
That's children.

1581
01:36:21,400 --> 01:36:24,500
Would it be simpler to use orthogonal orthographic transforms for

1582
01:36:24,500 --> 01:36:25,300
upright objects?

1583
01:36:25,600 --> 01:36:28,300
Are you not simply undoing the perspective projection there?

1584
01:36:30,000 --> 01:36:35,800
So it would be simpler to use if we didn't care about mixing the two,

1585
01:36:36,100 --> 01:36:36,700
right?

1586
01:36:37,700 --> 01:36:43,400
But what I am suspecting is I want all of the perspective stuff and I

1587
01:36:43,400 --> 01:36:44,400
don't know that for sure.

1588
01:36:44,400 --> 01:36:47,600
But I'm I'm guessing that I really want all the prospective stuff.

1589
01:36:48,000 --> 01:36:50,200
So what I would rather do is just fuss.

1590
01:36:50,400 --> 01:36:55,200
With the Sprite coordinates for things that are standing upright so

1591
01:36:55,200 --> 01:37:00,900
that they get mapped properly rather than turn off perspective and

1592
01:37:00,900 --> 01:37:02,400
have to deal with orthographic.

1593
01:37:02,700 --> 01:37:03,600
That's my guess.

1594
01:37:04,900 --> 01:37:06,300
In fact, I'm pretty much certain of it.

1595
01:37:31,400 --> 01:37:36,000
Would it be possible to use a Shader to do the Z buffer rendering?

1596
01:37:37,300 --> 01:37:39,200
I guess I don't know what that means.

1597
01:37:41,300 --> 01:37:44,400
Per se, meaning I you may be asking question.

1598
01:37:45,500 --> 01:37:47,500
I don't know what question you're asking, I guess what I would say

1599
01:37:47,500 --> 01:37:48,000
first.

1600
01:37:48,900 --> 01:37:54,600
So you may need to clarify it but shaders can use the depth buffer.

1601
01:37:54,600 --> 01:37:56,000
Just like anything else.

1602
01:37:56,400 --> 01:38:01,200
So in a Shader you have the ability to do depth testing and whatever

1603
01:38:01,200 --> 01:38:02,100
else you want.

1604
01:38:02,100 --> 01:38:02,700
However,

1605
01:38:05,800 --> 01:38:10,800
you know, the shaders, the depth, the depth buffer is sort of handled

1606
01:38:10,800 --> 01:38:13,200
specially, you might say

1607
01:38:15,900 --> 01:38:21,200
So depending on what you're doing, certain things you might want to do

1608
01:38:21,200 --> 01:38:26,400
in the Shader, might be more or less costly depending on how fancy you

1609
01:38:26,400 --> 01:38:30,800
want to get what I mean by that is depth testing has a special place

1610
01:38:30,900 --> 01:38:31,500
in the Shader.

1611
01:38:31,500 --> 01:38:38,200
It's not generic it's not 100% generic while you can do 100% generic

1612
01:38:38,200 --> 01:38:41,700
depth, buffer testing by binding a texture that is the depth buffer

1613
01:38:41,700 --> 01:38:43,600
and operating on it separately.

1614
01:38:45,800 --> 01:38:50,600
There's a bunch of early out special condition stuff that the graphics

1615
01:38:50,600 --> 01:38:52,200
card can do when it snows.

1616
01:38:52,200 --> 01:38:58,900
It's talking about its main primary depth buffer and so in the Shader

1617
01:38:58,900 --> 01:38:59,900
in general you can

1618
01:39:00,000 --> 01:39:03,400
Do anything you want in terms of depth, testing and rejection and

1619
01:39:03,400 --> 01:39:04,300
whatever else.

1620
01:39:04,500 --> 01:39:05,800
But certain

1621
01:39:07,400 --> 01:39:12,100
if you use it, the way we are traditionally using it here, you may get

1622
01:39:12,100 --> 01:39:17,300
a speed win, whereas, if you do arbitrary sorts of stuff with it, in

1623
01:39:17,300 --> 01:39:20,900
terms of the complexity of how you use the information in the depth,

1624
01:39:20,900 --> 01:39:26,200
buffer versus what you're when you decide to kill or not kill a pixel.

1625
01:39:28,300 --> 01:39:33,300
you might incur speed penalties because it can't use things like early

1626
01:39:33,300 --> 01:39:39,400
Z outing on whole blocks and stuff like that and like other sorts of

1627
01:39:39,400 --> 01:39:41,100
compression Tech that it has

1628
01:39:43,200 --> 01:39:46,300
To what degree that matters is.

1629
01:39:46,300 --> 01:39:49,900
You know hand wavy and depends on the card and what you're doing and

1630
01:39:49,900 --> 01:39:55,000
all that other stuff but you know the general answer is shaders.

1631
01:39:55,200 --> 01:39:58,400
You can set up the render path so that you can do pretty much anything

1632
01:39:58,400 --> 01:39:59,100
you want.

1633
01:39:59,100 --> 01:40:02,200
In terms of calculating what you want to do with the depth buffer.

1634
01:40:17,200 --> 01:40:20,300
So the near and far planes are linearly mapped.

1635
01:40:20,300 --> 01:40:25,700
I've read somewhere, the mapping is not linear, in which case we do

1636
01:40:25,700 --> 01:40:29,900
not in which cases, we do not make them linear.

1637
01:40:38,200 --> 01:40:39,300
Yeah, I'm not sure.

1638
01:40:39,300 --> 01:40:40,800
I understand what you're saying there.

1639
01:40:41,400 --> 01:40:44,000
I guess let me throw some things out there for you.

1640
01:40:47,800 --> 01:40:51,900
Technically with a perspective projection Matrix or any other Matrix

1641
01:40:52,000 --> 01:40:54,500
nothing can be nonlinear, right?

1642
01:40:55,000 --> 01:40:58,500
And the reason we know that is because a matrix is a linear operation.

1643
01:40:59,400 --> 01:41:06,000
So there is no way with just the Matrix to do anything other than

1644
01:41:06,000 --> 01:41:10,800
linearly map between the near and far clipping planes that said

1645
01:41:11,900 --> 01:41:19,000
We don't only have a matrix, we have a matrix plus the synthetic / w

1646
01:41:19,300 --> 01:41:21,100
at the end, right?

1647
01:41:21,600 --> 01:41:26,200
So what that means is we can if we want to

1648
01:41:28,100 --> 01:41:33,700
Use the synthetic divide to do a nonlinear mapping of the near and far

1649
01:41:33,700 --> 01:41:35,300
clipping plane range.

1650
01:41:36,500 --> 01:41:40,600
But it can only be one that is still compatible with our Z divide.

1651
01:41:40,700 --> 01:41:45,000
So we can put the Z that we were using

1652
01:41:47,500 --> 01:41:48,000
Excuse me.

1653
01:41:48,900 --> 01:41:56,000
We can put the Z that we were using in our divided by w.

1654
01:41:56,600 --> 01:41:59,300
We can put that into the denominator

1655
01:42:00,000 --> 01:42:04,900
As we know that our Z value, will be divided by Z at the end, right?

1656
01:42:08,400 --> 01:42:12,800
and and yeah, in fact, now I think about it, do we forget that we may

1657
01:42:12,800 --> 01:42:15,200
have made an error here,

1658
01:42:20,400 --> 01:42:21,300
I'd think about that.

1659
01:42:21,300 --> 01:42:23,600
I'm glad you just brought that up, because I totally forgot that

1660
01:42:29,300 --> 01:42:30,300
Where's my protected?

1661
01:42:31,100 --> 01:42:33,600
So I actually totally forgot about this when we were making this, I

1662
01:42:33,600 --> 01:42:35,700
did the mapping from negative 1 to 1.

1663
01:42:36,000 --> 01:42:37,300
We did not.

1664
01:42:40,600 --> 01:42:42,100
Factor in the / Z.

1665
01:42:42,100 --> 01:42:42,700
However,

1666
01:42:44,700 --> 01:42:48,100
Right after this.

1667
01:42:51,000 --> 01:42:56,200
After this, this runs we have a synthetic / Z that happens here,

1668
01:42:56,200 --> 01:42:56,600
right?

1669
01:42:56,600 --> 01:42:58,800
Are our negative 1.

1670
01:42:59,000 --> 01:43:05,100
We'll put our Z actually into the denominator of these functions,

1671
01:43:05,500 --> 01:43:05,900
right?

1672
01:43:06,400 --> 01:43:07,500
Not say in this very well.

1673
01:43:13,600 --> 01:43:17,700
So, after we put these guys in here, right?

1674
01:43:17,700 --> 01:43:18,500
So we've got

1675
01:43:38,800 --> 01:43:40,300
So, after you put these guys in here, right?

1676
01:43:40,300 --> 01:43:49,000
We have AZ plus b here but we also have negative Z coming in here

1677
01:43:49,700 --> 01:43:57,800
which means that this actual quantity is going to be AZ plus b, / - Z

1678
01:44:00,500 --> 01:44:01,200
Right.

1679
01:44:01,500 --> 01:44:10,300
There's a / - Z that implicitly happens here and so technically we

1680
01:44:10,300 --> 01:44:17,000
should have accounted for the / - Z in our coefficients, right?

1681
01:44:17,100 --> 01:44:20,200
Because we need that - Z2

1682
01:44:23,900 --> 01:44:27,500
We need to still map between negative 1 and 1.

1683
01:44:27,700 --> 01:44:31,400
We want to have that mapping between negative one and one happen, even

1684
01:44:31,400 --> 01:44:34,000
after we divide by negative Z,

1685
01:44:35,800 --> 01:44:36,500
Bright.

1686
01:44:38,200 --> 01:44:40,400
And that's where the non-linearity comes in.

1687
01:44:41,600 --> 01:44:43,400
If that's if that makes sense.

1688
01:44:43,800 --> 01:44:48,300
So actually because we are doing that, if I if this came out to one,

1689
01:44:48,300 --> 01:44:51,700
so if we were doing an orthogonal Matrix, then it wouldn't be the case

1690
01:44:52,600 --> 01:44:55,400
but if it comes out to negative Z which is what we're doing it here,

1691
01:44:55,400 --> 01:44:59,600
then it will actually be nonlinear because that is going to go into

1692
01:44:59,600 --> 01:44:59,800
the denominator.

1693
01:45:00,000 --> 01:45:00,400
Later.

1694
01:45:00,900 --> 01:45:01,400
Right?

1695
01:45:02,300 --> 01:45:06,800
And we can force it out of the denominator by sticking Z in here

1696
01:45:06,800 --> 01:45:07,300
separately.

1697
01:45:07,300 --> 01:45:10,100
But yeah, because it's in there.

1698
01:45:10,100 --> 01:45:14,700
What we should have done is compensate are two terms by that value,

1699
01:45:14,800 --> 01:45:15,300
right?

1700
01:45:15,600 --> 01:45:19,500
So what we want to do is say well this whole thing sort of has to be

1701
01:45:19,500 --> 01:45:21,600
multiplied by Z as well.

1702
01:45:22,700 --> 01:45:26,900
Right, if that makes sense.

1703
01:45:27,300 --> 01:45:28,100
And so,

1704
01:45:34,700 --> 01:45:39,000
Yeah, and so what we might say here is like, Okay, so we've got our

1705
01:45:39,000 --> 01:45:44,300
see, we've got CZ plus d.

1706
01:45:44,300 --> 01:45:47,000
Let's say that we want that to equal.

1707
01:45:57,800 --> 01:46:04,400
Because we say we have c z over Z, we want that to equal our AZ plus

1708
01:46:04,400 --> 01:46:06,300
b, right?

1709
01:46:09,100 --> 01:46:10,800
And so you can kind of see what happens here.

1710
01:46:10,800 --> 01:46:15,800
If we end up with a CZ plus d and this case, we end up with these

1711
01:46:15,800 --> 01:46:20,400
coefficients being because we're going to multiply both sides by

1712
01:46:20,400 --> 01:46:20,800
negative.

1713
01:46:20,800 --> 01:46:28,800
See, we end up with a being negative, z a z, right?

1714
01:46:29,800 --> 01:46:30,700
And this is

1715
01:46:32,900 --> 01:46:38,700
- Z be right in these cases.

1716
01:46:39,800 --> 01:46:44,000
And so, looking at what the terms have to be, you can see that this is

1717
01:46:44,000 --> 01:46:48,000
not strictly possible because now, these are both in terms of negative

1718
01:46:48,000 --> 01:46:48,500
Z.

1719
01:46:49,000 --> 01:46:54,500
So we can't assign them to two variables one that doesn't have z in it

1720
01:46:54,500 --> 01:46:56,600
and one that does, right?

1721
01:46:58,300 --> 01:47:01,100
So that becomes quite tricky, actually,

1722
01:47:03,800 --> 01:47:05,300
However, I'm pretty sure.

1723
01:47:07,300 --> 01:47:08,200
Let me double-check.

1724
01:47:08,400 --> 01:47:12,400
So let's just see because again like this all depends on what opengl

1725
01:47:12,400 --> 01:47:15,500
wants it since it's not our code anymore, we just have to guess.

1726
01:47:25,300 --> 01:47:26,300
Where is the glue purse?

1727
01:47:26,500 --> 01:47:26,900
I can.

1728
01:47:26,900 --> 01:47:28,300
I never can get a good.

1729
01:47:54,900 --> 01:47:59,900
I so the only question I have and I don't actually know is just

1730
01:48:00,000 --> 01:48:04,900
Whether or not opengl expects that to be the case or not, right?

1731
01:48:05,800 --> 01:48:09,600
Like I just don't know whether it lets us do that divide first or not

1732
01:48:09,600 --> 01:48:10,900
or whether it wants to do that.

1733
01:48:10,900 --> 01:48:14,000
If it does that divide first before taking the value for the Z buffer

1734
01:48:14,000 --> 01:48:18,500
or not, I guess at the risk of being incredibly dry

1735
01:48:24,200 --> 01:48:29,700
The easiest way to usually figure this out is to actually look and see

1736
01:48:29,800 --> 01:48:31,100
what the spec says.

1737
01:48:32,500 --> 01:48:36,600
It just takes a while, so I'm sorry to do it on stream, but that's

1738
01:48:36,600 --> 01:48:37,600
usually the way.

1739
01:48:40,500 --> 01:48:44,500
that it's easiest for me to figure out what it is opengl does with the

1740
01:48:44,500 --> 01:48:45,600
values and when

1741
01:48:59,500 --> 01:49:01,000
I think I want the transforms.

1742
01:49:01,000 --> 01:49:02,400
Here's probably section.

1743
01:49:02,400 --> 01:49:07,000
Let's see, coordinate transforms.

1744
01:49:11,600 --> 01:49:14,100
I'm guessing that's probably where it is.

1745
01:49:41,500 --> 01:49:42,000
Let's see.

1746
01:49:42,000 --> 01:49:45,200
The viewport transformation is determined by the viewports width and

1747
01:49:45,200 --> 01:49:49,200
height in pixels, PX and py respectively and its Centre 0, x 0 y.

1748
01:49:49,200 --> 01:49:52,100
Also, in pixels, the vertices would have coordinates x,y and z are

1749
01:49:52,100 --> 01:49:54,700
given by XY w.

1750
01:50:03,700 --> 01:50:08,000
So z d is in fact, / w.

1751
01:50:09,100 --> 01:50:10,300
Right, you can see that here.

1752
01:50:11,000 --> 01:50:13,200
So pretty sure.

1753
01:50:18,400 --> 01:50:23,000
The factor an offset applied to ZD encoded by n and F are set using

1754
01:50:23,000 --> 01:50:24,100
the depth range.

1755
01:50:24,500 --> 01:50:27,600
That's fine to me.

1756
01:50:31,000 --> 01:50:33,600
Oh, and one that's are all arguments clamped.

1757
01:50:33,600 --> 01:50:34,000
Okay?

1758
01:50:34,500 --> 01:50:37,300
So there's that mapping 2021, that we suspected was there.

1759
01:50:37,300 --> 01:50:39,500
It's there, and it happens within this range.

1760
01:50:39,500 --> 01:50:41,700
Presumably that's normally negative 1 and 1.

1761
01:50:43,400 --> 01:50:44,100
So there we go.

1762
01:50:44,800 --> 01:50:47,300
But yes it is divided by that value.

1763
01:50:47,300 --> 01:50:53,300
So technically, right we're going to have to redo this guy because

1764
01:50:53,300 --> 01:50:58,000
technically what ends up happening here is if we take a look at this

1765
01:50:58,600 --> 01:50:59,600
equation again,

1766
01:51:00,000 --> 01:51:06,600
Actually have is we have AZ plus b over negative Z is what we actually

1767
01:51:06,600 --> 01:51:09,700
expect our F of Z to be, right?

1768
01:51:12,900 --> 01:51:13,500
In theory.

1769
01:51:14,000 --> 01:51:22,400
So if we actually want f of negative n to equal our negative 1, and

1770
01:51:22,400 --> 01:51:27,200
our f of negative f to equal 1, we actually need to do the math

1771
01:51:28,700 --> 01:51:29,800
assuming this.

1772
01:51:31,200 --> 01:51:35,400
Is the is the actual output value, right?

1773
01:51:36,600 --> 01:51:38,000
At least, I believe that's the case.

1774
01:51:38,200 --> 01:51:41,100
We don't have time to do that right now, but I guess

1775
01:51:44,800 --> 01:51:46,300
I guess that's what we will have to take a look at

1776
01:52:24,400 --> 01:52:25,200
No, no Sherlock.

1777
01:52:25,200 --> 01:52:26,200
That's a very good question.

1778
01:52:26,200 --> 01:52:28,500
I'm glad you said that because we would have made that mistake.

1779
01:52:28,500 --> 01:52:31,300
And it would have been a hard mistake to notice for a long time.

1780
01:52:31,600 --> 01:52:36,800
Like and I guess the other way to do it to here is we could also say

1781
01:52:36,800 --> 01:52:37,600
it slightly differently.

1782
01:52:37,600 --> 01:52:38,400
We could say.

1783
01:52:51,800 --> 01:52:54,200
So we plug in negative n, right?

1784
01:52:54,400 --> 01:52:58,600
We want to be negative 1, but we know that we're going to divide by

1785
01:52:58,600 --> 01:52:59,700
negative Z.

1786
01:53:00,500 --> 01:53:05,500
So actually, in this case, it's going to be negative 1 over negative

1787
01:53:05,500 --> 01:53:06,500
Z, right?

1788
01:53:06,500 --> 01:53:08,300
Which would be just Z.

1789
01:53:09,600 --> 01:53:12,600
And similarly, in this case, we have a negative f.

1790
01:53:12,800 --> 01:53:18,100
And so we know that this is going to be 1 over negative Z or just

1791
01:53:18,100 --> 01:53:19,800
negative Z, right?

1792
01:53:20,000 --> 01:53:20,900
So what we actually,

1793
01:53:21,200 --> 01:53:28,300
Like to have happen here is we want to have our AZ plus b.

1794
01:53:31,400 --> 01:53:37,000
In this case we want to do like - n we've got - a n + B.

1795
01:53:37,700 --> 01:53:39,800
We want that to equal Z

1796
01:53:45,400 --> 01:53:47,100
Which is our incoming value, right?

1797
01:53:48,200 --> 01:53:51,500
Which again, yeah, it's just going to make it harder for us to solve.

1798
01:53:53,600 --> 01:53:56,300
it's going to make it harder for us to do the math app but that's

1799
01:53:56,300 --> 01:53:59,900
that's really all it is in this case when we divide this guy

1800
01:54:00,000 --> 01:54:04,900
I see you end up with I guess you could also look at what this ends up

1801
01:54:04,900 --> 01:54:05,800
being, right.

1802
01:54:07,200 --> 01:54:10,800
In this case, we just end up with Z / - Z.

1803
01:54:11,200 --> 01:54:16,200
So this is really just - a right because that divides out and it's

1804
01:54:16,200 --> 01:54:17,400
negative B over Z.

1805
01:54:18,500 --> 01:54:22,000
So you could just divide by Z first and you end up with this as your

1806
01:54:22,000 --> 01:54:22,700
actual

1807
01:54:25,500 --> 01:54:27,800
equation that you're trying to solve.

1808
01:54:30,500 --> 01:54:32,400
That might be the easiest way to do it too.

1809
01:54:33,300 --> 01:54:38,700
So if we take the negative n case, for example, equaling negative 1

1810
01:54:38,700 --> 01:54:39,900
would get negative 1.

1811
01:54:41,300 --> 01:54:45,500
Equals negative a and the negative ends on the bottom so it's plus b

1812
01:54:45,500 --> 01:54:46,000
over n.

1813
01:54:48,000 --> 01:54:48,700
Right.

1814
01:54:49,300 --> 01:54:55,800
And similarly, if I want to do the negative f version, we'd end up

1815
01:54:55,800 --> 01:54:59,800
with 1 equals negative a

1816
01:55:01,000 --> 01:55:02,600
Plus b over f.

1817
01:55:04,100 --> 01:55:04,600
Right.

1818
01:55:06,000 --> 01:55:10,900
And so, then solving these guys, you know, swap the ace with the one

1819
01:55:10,900 --> 01:55:12,300
and you'd get one plus b Over.

1820
01:55:12,300 --> 01:55:16,000
N, is your term for a right?

1821
01:55:16,000 --> 01:55:16,600
Just swap.

1822
01:55:16,600 --> 01:55:17,400
Those two guys,

1823
01:55:19,300 --> 01:55:23,800
So each one becomes plus and then when we sub that in here we'd get 1

1824
01:55:24,000 --> 01:55:31,100
equals negative 1 plus b Over N plus b over F, right?

1825
01:55:31,100 --> 01:55:36,100
Because in this case that we just have to swap this in here otherwise

1826
01:55:36,100 --> 01:55:40,300
everything else stays the same and so there we end up with when we do

1827
01:55:40,300 --> 01:55:41,000
the subtraction in.

1828
01:55:41,000 --> 01:55:44,800
We get negative 1 negative B Over N plus b over F.

1829
01:55:45,500 --> 01:55:46,100
Like so

1830
01:55:48,300 --> 01:55:54,100
Excuse me and the negative, one comes out temporarily, let's say to

1831
01:55:54,100 --> 01:55:57,200
the side, let's put that over here so we get end up with a 2.

1832
01:55:59,500 --> 01:56:03,000
And then this we have to add together and so you can see the same

1833
01:56:03,000 --> 01:56:06,600
thing would happen here, we'd end up having to cross the terms in

1834
01:56:06,600 --> 01:56:09,100
order to make that work.

1835
01:56:09,200 --> 01:56:14,700
So we would end up with B over F minus B Over N.

1836
01:56:14,900 --> 01:56:20,100
We need to solve, I'm not saying we need to be able to combine these.

1837
01:56:20,400 --> 01:56:25,200
So we need to be able to multiply both by whichever one, it doesn't

1838
01:56:25,200 --> 01:56:26,400
have right.

1839
01:56:26,700 --> 01:56:27,800
We need to make these two denominators.

1840
01:56:27,800 --> 01:56:28,300
The same

1841
01:56:28,700 --> 01:56:29,800
So we need to put an end in here.

1842
01:56:29,800 --> 01:56:34,300
Is this would be the N FN and we need to put an F in here so we'd have

1843
01:56:34,300 --> 01:56:37,200
b f and f, right?

1844
01:56:37,900 --> 01:56:44,000
So then we're just left with b and minus F over FN like so.

1845
01:56:44,700 --> 01:56:49,500
And then we are able to solve for b, which is what we wanted, right?

1846
01:56:49,900 --> 01:56:53,000
Our B is going to be to f n Over.

1847
01:56:53,000 --> 01:56:55,700
N minus F, right?

1848
01:56:56,400 --> 01:56:58,400
That means our a value is

1849
01:56:58,600 --> 01:56:59,200
Computable.

1850
01:56:59,200 --> 01:56:59,900
Now it's on.

1851
01:57:00,000 --> 01:57:01,000
Tangible to us.

1852
01:57:02,800 --> 01:57:05,300
It's just going to be the bee comes up in here.

1853
01:57:05,800 --> 01:57:07,600
So we end up with a 2 f.

1854
01:57:07,600 --> 01:57:10,400
N Over N minus F.

1855
01:57:10,400 --> 01:57:12,600
But that's of course, the over goes down to the bottom, so it's

1856
01:57:12,600 --> 01:57:16,400
actually n n- f, if that makes sense.

1857
01:57:18,200 --> 01:57:22,500
And there's your, there's a value as well.

1858
01:57:23,800 --> 01:57:29,400
So then we have to me two different values for those, I don't know if

1859
01:57:29,400 --> 01:57:35,300
it's worth combining, these terms, it might be take a look so to fm+.

1860
01:57:38,900 --> 01:57:40,200
N n- f.

1861
01:57:41,500 --> 01:57:43,100
Over N minus F.

1862
01:57:43,100 --> 01:57:45,400
That's just if I turn this into an N minus F Over.

1863
01:57:45,400 --> 01:57:50,200
N, minus F, I don't know if that does anything for me at the moment, I

1864
01:57:50,200 --> 01:57:50,900
can't say that.

1865
01:57:50,900 --> 01:57:52,100
It looks like it does.

1866
01:57:57,900 --> 01:58:01,400
Yeah, I don't, I don't see anything in particular there.

1867
01:58:06,200 --> 01:58:13,100
So that and that look like the most condensed forms that I would

1868
01:58:13,100 --> 01:58:14,900
probably use.

1869
01:58:16,100 --> 01:58:19,300
But let's just double check again, like we normally we're before.

1870
01:58:19,300 --> 01:58:29,500
So if we rewrite this equation, so we've got F of Z equals AZ plus b.

1871
01:58:29,500 --> 01:58:30,400
/ - Z

1872
01:58:37,200 --> 01:58:38,900
These are the two guys were using here.

1873
01:58:40,200 --> 01:58:48,900
If I write that out longhand, I just get 1 + 2 f n over n and minus F

1874
01:58:50,100 --> 01:58:53,200
times Z plus 2.

1875
01:58:53,200 --> 01:58:54,400
F n Over.

1876
01:58:54,400 --> 01:58:55,500
N minus f.

1877
01:58:58,200 --> 01:59:00,800
All over negative Z, right?

1878
01:59:02,600 --> 01:59:06,400
And so if I want to simplify that equation out a little bit, I can

1879
01:59:07,900 --> 01:59:08,300
Jimmy

1880
01:59:10,200 --> 01:59:14,500
I guess ahead of time divide the negative Z out here and that would

1881
01:59:14,500 --> 01:59:18,400
just be too FN / z n- f

1882
01:59:22,000 --> 01:59:25,200
right - this,

1883
01:59:30,000 --> 01:59:31,000
Guess I could write that.

1884
01:59:33,000 --> 01:59:35,200
- 1 - 2 f.

1885
01:59:35,200 --> 01:59:38,200
N over n and minus f.

1886
01:59:40,500 --> 01:59:41,000
Right.

1887
01:59:44,300 --> 01:59:47,700
And hey you can sort of see that this probably checks out pretty well.

1888
01:59:48,000 --> 01:59:52,700
If we wanted to plug in Z equals negative, n 4r near clip plane.

1889
01:59:53,500 --> 01:59:56,400
So we've got the Z value right there, the negative n.

1890
01:59:56,700 --> 01:59:57,700
If we plugged it in,

1891
01:59:59,100 --> 01:59:59,800
Would give us.

1892
02:00:00,100 --> 02:00:04,600
- n and minus F that turns this whole term - which means these two

1893
02:00:04,600 --> 02:00:05,200
cancel.

1894
02:00:05,200 --> 02:00:08,800
And we just get minus 1, which is exactly what we want.

1895
02:00:09,300 --> 02:00:14,200
So the only question is does - F work and in that case we would get to

1896
02:00:14,200 --> 02:00:14,900
FN.

1897
02:00:16,400 --> 02:00:17,500
Actually this becomes a plus.

1898
02:00:18,600 --> 02:00:28,000
So 2 FN over F and minus F, minus 1, minus 2 f, n over n and minus F,

1899
02:00:28,600 --> 02:00:29,100
right?

1900
02:00:31,900 --> 02:00:33,300
That's what we've actually got.

1901
02:00:34,200 --> 02:00:37,300
And so in this case, if we actually want to combine all those terms,

1902
02:00:37,300 --> 02:00:40,900
it's sort of a nightmare because we've got an F and an n in on

1903
02:00:41,600 --> 02:00:43,400
separate sides of this, right?

1904
02:00:43,900 --> 02:00:46,000
And we have to figure out a way to get those guys together.

1905
02:00:46,000 --> 02:00:47,900
So we're going to have to multiply both sides.

1906
02:00:47,900 --> 02:00:50,600
By we're getting one of these two things would end up having to square

1907
02:00:50,600 --> 02:00:52,600
itself at first.

1908
02:00:54,700 --> 02:00:57,600
I believe so let's see if that actually works.

1909
02:00:57,800 --> 02:01:03,400
So if we have to introduce an end of this term, we'd end up with 2 F

1910
02:01:03,400 --> 02:01:07,700
and squared over F and minus F.

1911
02:01:07,800 --> 02:01:11,200
In fact, the whole thing can now be over that, right?

1912
02:01:11,600 --> 02:01:23,900
Sorry FN minus FN and minus F which is the one term minus 2, F squared

1913
02:01:23,900 --> 02:01:24,300
n.

1914
02:01:25,300 --> 02:01:25,800
Right.

1915
02:01:25,800 --> 02:01:30,400
That's what we're actually going to get here all over f, n, and minus

1916
02:01:30,400 --> 02:01:30,800
F.

1917
02:01:32,500 --> 02:01:36,300
And in this case, we're in reasonable shape here because the FN is

1918
02:01:36,300 --> 02:01:39,900
actually already isolated and will cancel in all of our terms.

1919
02:01:40,700 --> 02:01:41,800
So that's pretty easy.

1920
02:01:41,800 --> 02:01:47,900
If we do that cancellation, we just get to n- n- F, right?

1921
02:01:48,300 --> 02:01:49,700
I'm just cancelling this term here.

1922
02:01:50,700 --> 02:01:53,100
Minus 2 F Over.

1923
02:01:53,100 --> 02:01:54,200
N minus f.

1924
02:01:55,200 --> 02:02:00,900
if we look at what that becomes when, I simplify this this by pulling

1925
02:02:00,900 --> 02:02:04,300
out the to I get - and - F

1926
02:02:05,700 --> 02:02:07,000
and then I'm going to pull out the 2.

1927
02:02:07,200 --> 02:02:11,100
So plus 2 and minus f

1928
02:02:13,300 --> 02:02:13,600
/.

1929
02:02:13,600 --> 02:02:14,500
M- f.

1930
02:02:17,300 --> 02:02:19,400
Right, that's correct.

1931
02:02:21,900 --> 02:02:22,300
Yeah.

1932
02:02:23,300 --> 02:02:27,200
And these guys would cancel which would just give you negative 1 plus

1933
02:02:27,200 --> 02:02:28,300
2 which equals 1

1934
02:02:31,100 --> 02:02:32,000
So there we go.

1935
02:02:32,400 --> 02:02:34,500
I said I wasn't going to do it because we were out of time and then I

1936
02:02:34,500 --> 02:02:34,800
did it.

1937
02:02:34,800 --> 02:02:36,600
Anyway, what you going to do?

1938
02:03:09,400 --> 02:03:10,000
There we go.

1939
02:03:10,800 --> 02:03:16,900
So here we've got our a value being 1 plus 2 times f x n.

1940
02:03:22,100 --> 02:03:23,200
/.

1941
02:03:24,700 --> 02:03:26,800
N times n minus f.

1942
02:03:28,400 --> 02:03:29,600
Type that in, right?

1943
02:03:31,200 --> 02:03:37,500
And then here we've got 2 times, F times n Over.

1944
02:03:37,500 --> 02:03:41,200
N minus F, you can see there's common terms there as well, so you

1945
02:03:41,200 --> 02:03:41,800
don't actually.

1946
02:03:41,800 --> 02:03:44,900
It wouldn't actually have to compute all of those, and I think we've

1947
02:03:44,900 --> 02:03:45,700
got all those

1948
02:03:51,300 --> 02:03:53,200
And so that should be correct.

1949
02:03:53,200 --> 02:03:55,400
Now, not at all.

1950
02:03:56,900 --> 02:03:58,800
I did type that incorrectly, right?

1951
02:04:05,600 --> 02:04:09,700
It's 2 times F times n Over N times.

1952
02:04:09,900 --> 02:04:11,000
N minus f.

1953
02:04:15,800 --> 02:04:17,500
2 times F times n.

1954
02:04:20,600 --> 02:04:21,100
Over N.

1955
02:04:21,100 --> 02:04:23,200
Minus F being he.

1956
02:04:23,700 --> 02:04:25,300
I feel like that should be correct.

1957
02:04:25,400 --> 02:04:27,000
I will leave it for next time.

1958
02:04:31,200 --> 02:04:33,100
Because I don't want to try and find the.

1959
02:04:33,100 --> 02:04:36,400
I don't want to try and find the bug in that math right now.

1960
02:04:57,100 --> 02:04:57,800
Oh, and

1961
02:05:04,200 --> 02:05:05,300
No, I think I don't know.

1962
02:05:05,300 --> 02:05:06,000
I think I type that in.

1963
02:05:06,000 --> 02:05:06,200
Right?

1964
02:05:06,200 --> 02:05:09,900
So I must have typed in the math wrong or not typed in the bathroom.

1965
02:05:10,100 --> 02:05:12,100
I must I must have gotten the math wrong.

1966
02:05:16,100 --> 02:05:17,400
Okay, you can see we're working just fine.

1967
02:05:17,400 --> 02:05:19,100
But when we change to that c, mapping,

1968
02:05:21,600 --> 02:05:22,800
It is not correct.

1969
02:05:23,900 --> 02:05:25,300
All right, so anyway, I'm going to end it.

1970
02:05:25,300 --> 02:05:31,700
There we will pick up tomorrow and take a look at if we made a mistake

1971
02:05:31,700 --> 02:05:33,900
math wise, or if there's something, we were missing there.

1972
02:05:44,600 --> 02:05:45,600
Oh, you know what?

1973
02:05:45,900 --> 02:05:46,700
Wait a minute.

1974
02:05:50,800 --> 02:05:51,200
Tonight.

1975
02:05:51,200 --> 02:05:52,600
No, that should be good.

1976
02:05:52,700 --> 02:05:53,100
I don't know.

1977
02:05:55,800 --> 02:05:57,900
Well, we'll take a look at this again.

1978
02:06:02,100 --> 02:06:03,600
Figure out what the problem is here.

1979
02:06:05,200 --> 02:06:06,700
I like the old to zoom in and out on the math.

1980
02:06:06,700 --> 02:06:07,300
It's funny.

1981
02:06:08,000 --> 02:06:09,800
So we'll take a look at this again and we'll figure out what the

1982
02:06:09,800 --> 02:06:10,300
problem is.

1983
02:06:10,300 --> 02:06:11,600
Here, we'll do that tomorrow.

1984
02:06:11,600 --> 02:06:15,200
I would love to do it now but I really have to go so that'll be the

1985
02:06:15,200 --> 02:06:15,800
end of it.

1986
02:06:25,700 --> 02:06:28,800
So I apologize for leaving you hanging on that one, but since I don't

1987
02:06:28,800 --> 02:06:31,100
immediately know what the problem is, I feel like it could be an

1988
02:06:31,100 --> 02:06:35,200
arbitrarily long amount of time before I find it.

1989
02:06:35,200 --> 02:06:39,200
And, you know, I gotta end at some point.

1990
02:06:39,700 --> 02:06:42,400
So thank you very much for joining me for this episode of handmade

1991
02:06:42,400 --> 02:06:43,600
hero to a recording with you.

1992
02:06:43,600 --> 02:06:46,200
As always, if you would like to follow through as you always pre-order

1993
02:06:46,200 --> 02:06:48,700
the game on how many here at are going to come to the source code.

1994
02:06:49,700 --> 02:06:51,800
And also we have a form so you can go to.

1995
02:06:51,800 --> 02:06:55,000
If I ask questions a patreon account for 30 series is schedule, bot.

1996
02:06:55,100 --> 02:06:57,300
How do I know when we're going to be live and an episode guide for my

1997
02:06:57,300 --> 02:06:57,500
ketchup?

1998
02:06:57,500 --> 02:07:02,800
An old episodes will be back tomorrow, same time, 10:00 in order to

1999
02:07:02,800 --> 02:07:04,900
take a look at what we messed up in that Z calculation.

2000
02:07:05,400 --> 02:07:09,500
And then after we do that, we then we'll have to go make our Sprites

2001
02:07:10,700 --> 02:07:12,500
correct for the camera location properly.

2002
02:07:12,700 --> 02:07:16,200
So those are the two things we have to do, until then have fun

2003
02:07:16,200 --> 02:07:18,200
programming and I'll see everyone on the internet.

2004
02:07:18,500 --> 02:07:19,300
Take it easy, everybody.

